<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="903ce20ddd7389c25d83ee83d71177b6b095b277" translate="yes" xml:space="preserve">
          <source>String representing a port or a set of ports (eg. &amp;lsquo;80&amp;rsquo;, or &amp;lsquo;80,8080&amp;rsquo;), or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示端口或一组端口（例如'80'或'80，8080'）或&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;字符串。</target>
        </trans-unit>
        <trans-unit id="08fe56183fd450e6accee29f4b55279f987bfed6" translate="yes" xml:space="preserve">
          <source>String that uniquely identifies the type of the filesystem that contains the file.</source>
          <target state="translated">唯一标识包含文件的文件系统类型的字符串。</target>
        </trans-unit>
        <trans-unit id="8f582ed23b3683fb73a662ece9f411c08dcab23e" translate="yes" xml:space="preserve">
          <source>String used as the terminator when writing a formatted record to a stream. Default value is &lt;code&gt;'\n'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868610b2f54dc99b64c2f4b66a85377a9e9120de" translate="yes" xml:space="preserve">
          <source>String value. This specifies the format of numbers set by the increment/decrement buttons. It must be in the form &amp;ldquo;%W.Pf&amp;rdquo;, where W is the padded width of the value, P is the precision, and &amp;lsquo;%&amp;rsquo; and &amp;lsquo;f&amp;rsquo; are literal.</source>
          <target state="translated">字符串值。这指定了由增量/减量按钮设置的数字格式。它的格式必须为&amp;ldquo;％W.Pf&amp;rdquo;，其中W是值的填充宽度，P是精度，而'％'和'f'是文字。</target>
        </trans-unit>
        <trans-unit id="3d9b91c74958b0323f089b70a912327b9f40a736" translate="yes" xml:space="preserve">
          <source>Strings also support two styles of string formatting, one providing a large degree of flexibility and customization (see &lt;a href=&quot;#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;string#formatstrings&quot;&gt;Format String Syntax&lt;/a&gt; and &lt;a href=&quot;string#string-formatting&quot;&gt;Custom String Formatting&lt;/a&gt;) and the other based on C &lt;code&gt;printf&lt;/code&gt; style formatting that handles a narrower range of types and is slightly harder to use correctly, but is often faster for the cases it can handle (&lt;a href=&quot;#old-string-formatting&quot;&gt;printf-style String Formatting&lt;/a&gt;).</source>
          <target state="translated">字符串还支持两种样式的字符串格式，一种提供高度的灵活性和自定义性（请参阅&lt;a href=&quot;#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;string#formatstrings&quot;&gt;Format String Syntax&lt;/a&gt;和&lt;a href=&quot;string#string-formatting&quot;&gt;Custom String Formatting&lt;/a&gt;），另一种基于C &lt;code&gt;printf&lt;/code&gt; 样式格式，可以处理较小范围的类型。正确使用起来稍难，但是在可以处理的情况下通常更快（&lt;a href=&quot;#old-string-formatting&quot;&gt;printf样式的String Formatting&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="71d4c43b6767d8ab13c929d014e2e7e439d3cdc5" translate="yes" xml:space="preserve">
          <source>Strings are stored internally as sequences of code points in range &lt;code&gt;0x0&lt;/code&gt;&amp;ndash;&lt;code&gt;0x10FFFF&lt;/code&gt;. (See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0393&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 393&lt;/strong&gt;&lt;/a&gt; for more details about the implementation.) Once a string object is used outside of CPU and memory, endianness and how these arrays are stored as bytes become an issue. As with other codecs, serialising a string into a sequence of bytes is known as &lt;em&gt;encoding&lt;/em&gt;, and recreating the string from the sequence of bytes is known as &lt;em&gt;decoding&lt;/em&gt;. There are a variety of different text serialisation codecs, which are collectivity referred to as &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;.</source>
          <target state="translated">字符串在内部存储为代码点序列，范围为 &lt;code&gt;0x0&lt;/code&gt; &amp;ndash; &lt;code&gt;0x10FFFF&lt;/code&gt; 。（有关实现的更多详细信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0393&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP393&lt;/strong&gt;&lt;/a&gt;。）一旦在CPU和内存之外使用了字符串对象，字节序以及如何将这些数组作为字节存储就成为问题。与其他编解码器一样，将字符串序列化为字节序列称为&lt;em&gt;编码&lt;/em&gt;，而从字节序列重新创建字符串称为&lt;em&gt;解码&lt;/em&gt;。存在多种不同的文本序列化编解码器，它们被统称为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d760081b3e24871f7496c0fcdd67d2e064054df" translate="yes" xml:space="preserve">
          <source>Strings are stored internally as sequences of code points in range &lt;code&gt;0x0&lt;/code&gt;&amp;ndash;&lt;code&gt;0x10FFFF&lt;/code&gt;. (See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0393&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 393&lt;/strong&gt;&lt;/a&gt; for more details about the implementation.) Once a string object is used outside of CPU and memory, endianness and how these arrays are stored as bytes become an issue. As with other codecs, serialising a string into a sequence of bytes is known as &lt;em&gt;encoding&lt;/em&gt;, and recreating the string from the sequence of bytes is known as &lt;em&gt;decoding&lt;/em&gt;. There are a variety of different text serialisation codecs, which are collectivity referred to as &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1633031f5785f73d466ecf064347facbb00734b2" translate="yes" xml:space="preserve">
          <source>Strings implement all of the &lt;a href=&quot;#typesseq-common&quot;&gt;common&lt;/a&gt; sequence operations, along with the additional methods described below.</source>
          <target state="translated">字符串实现所有&lt;a href=&quot;#typesseq-common&quot;&gt;常见的&lt;/a&gt;序列操作以及下面介绍的其他方法。</target>
        </trans-unit>
        <trans-unit id="c9e74715933fc0fe8d7eca7904dc7f41bd5a0047" translate="yes" xml:space="preserve">
          <source>Strings may also be created from other objects using the &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">也可以使用&lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;构造函数从其他对象创建字符串。</target>
        </trans-unit>
        <trans-unit id="9748d06615e2f4c333c3a5f87f833ad5d8681101" translate="yes" xml:space="preserve">
          <source>Strings specifying the primary and secondary prompt of the interpreter. These are only defined if the interpreter is in interactive mode. Their initial values in this case are &lt;code&gt;'&amp;gt;&amp;gt;&amp;gt; '&lt;/code&gt; and &lt;code&gt;'... '&lt;/code&gt;. If a non-string object is assigned to either variable, its &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; is re-evaluated each time the interpreter prepares to read a new interactive command; this can be used to implement a dynamic prompt.</source>
          <target state="translated">指定解释器的主要和辅助提示的字符串。仅当解释器处于交互模式时才定义它们。在这种情况下，它们的初始值为 &lt;code&gt;'&amp;gt;&amp;gt;&amp;gt; '&lt;/code&gt; 和 &lt;code&gt;'... '&lt;/code&gt; 。如果将非字符串对象分配给任一变量，则每次解释器准备读取新的交互式命令时，都会重新评估其&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;；这可以用来实现动态提示。</target>
        </trans-unit>
        <trans-unit id="9bf68e93b4cdc900fac4330f62cfe4808848f536" translate="yes" xml:space="preserve">
          <source>Strip the &lt;em&gt;stderr&lt;/em&gt; of a Python process from potential debug output emitted by the interpreter. This will typically be run on the result of &lt;a href=&quot;subprocess#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;subprocess.Popen.communicate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从解释器发出的潜在调试输出中剥离Python进程的&lt;em&gt;stderr&lt;/em&gt;。这通常将在&lt;a href=&quot;subprocess#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;subprocess.Popen.communicate()&lt;/code&gt; &lt;/a&gt;的结果上运行。</target>
        </trans-unit>
        <trans-unit id="aea49d22b2aa337038189a4049f3546c1cf921dc" translate="yes" xml:space="preserve">
          <source>Strip trailing whitespace</source>
          <target state="translated">剥离尾部空白</target>
        </trans-unit>
        <trans-unit id="2d5e0b69254483ff6e1b755f36468e7e3b84fa62" translate="yes" xml:space="preserve">
          <source>Structure and union constructors accept both positional and keyword arguments. Positional arguments are used to initialize member fields in the same order as they are appear in &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt;. Keyword arguments in the constructor are interpreted as attribute assignments, so they will initialize &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; with the same name, or create new attributes for names not present in &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">结构和联合构造函数接受位置参数和关键字参数。位置参数用于初始化成员字段，其顺序与它们在&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;中出现的顺序相同。构造函数中的关键字参数被解释为属性分配，因此它们将使用相同的名称初始化&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;，或为&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; 中&lt;/a&gt;不存在的名称创建新的属性。</target>
        </trans-unit>
        <trans-unit id="c6cb17737c7af5e626c759f32bc0a313806d244a" translate="yes" xml:space="preserve">
          <source>Structure needs cleaning</source>
          <target state="translated">结构需要清理</target>
        </trans-unit>
        <trans-unit id="4a9c09d8375eba1e278339e97cc85f7df7e5652b" translate="yes" xml:space="preserve">
          <source>Structure/union alignment and byte order</source>
          <target state="translated">结构/联盟排列和字节顺序</target>
        </trans-unit>
        <trans-unit id="42e135645605ba23f817613adfce85289b1cbd8a" translate="yes" xml:space="preserve">
          <source>Structured Markup</source>
          <target state="translated">结构化标记</target>
        </trans-unit>
        <trans-unit id="9e787a6399a420cf8e4940cb545c2cb842875995" translate="yes" xml:space="preserve">
          <source>Structured Markup Processing Tools</source>
          <target state="translated">结构化标记处理工具</target>
        </trans-unit>
        <trans-unit id="9ec4476c22681ba4010eef57a838050ff3145eb2" translate="yes" xml:space="preserve">
          <source>Structured Parse Results</source>
          <target state="translated">结构化解析结果</target>
        </trans-unit>
        <trans-unit id="ab7bbed45e470ccb4de03fec962351c9a962fa21" translate="yes" xml:space="preserve">
          <source>Structured data types</source>
          <target state="translated">结构化数据类型</target>
        </trans-unit>
        <trans-unit id="59e761cccb0c79446cd2a779905ccb7ac4dab5b5" translate="yes" xml:space="preserve">
          <source>Structures and unions</source>
          <target state="translated">结构和工会</target>
        </trans-unit>
        <trans-unit id="e55492494402bcab14254ae9d16d22273b536dd5" translate="yes" xml:space="preserve">
          <source>Structures and unions must derive from the &lt;a href=&quot;#ctypes.Structure&quot;&gt;&lt;code&gt;Structure&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ctypes.Union&quot;&gt;&lt;code&gt;Union&lt;/code&gt;&lt;/a&gt; base classes which are defined in the &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; module. Each subclass must define a &lt;code&gt;_fields_&lt;/code&gt; attribute. &lt;code&gt;_fields_&lt;/code&gt; must be a list of &lt;em&gt;2-tuples&lt;/em&gt;, containing a &lt;em&gt;field name&lt;/em&gt; and a &lt;em&gt;field type&lt;/em&gt;.</source>
          <target state="translated">结构和联合必须从&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;模块中定义的&lt;a href=&quot;#ctypes.Structure&quot;&gt; &lt;code&gt;Structure&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ctypes.Union&quot;&gt; &lt;code&gt;Union&lt;/code&gt; &lt;/a&gt;基类派生。每个子类必须定义一个 &lt;code&gt;_fields_&lt;/code&gt; 属性。 &lt;code&gt;_fields_&lt;/code&gt; 必须是&lt;em&gt;2元组&lt;/em&gt;的列表，其中包含&lt;em&gt;字段名称&lt;/em&gt;和&lt;em&gt;字段类型&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a209d1dcacb8a067b8b249c8605260bcd001782" translate="yes" xml:space="preserve">
          <source>Structures with non-native byte order cannot contain pointer type fields, or any other data types containing pointer type fields.</source>
          <target state="translated">非本位字节顺序的结构不能包含指针类型字段,也不能包含任何其他包含指针类型字段的数据类型。</target>
        </trans-unit>
        <trans-unit id="4ddb487f6fe6f9df7cbb84c47fa46a0919a490ef" translate="yes" xml:space="preserve">
          <source>Stub Methods</source>
          <target state="translated">存根方法</target>
        </trans-unit>
        <trans-unit id="72ac40a33691bb643b4f63de5e22b41d926cc23c" translate="yes" xml:space="preserve">
          <source>Sub-commands</source>
          <target state="translated">Sub-commands</target>
        </trans-unit>
        <trans-unit id="1b852965c01791fd2ea321e3b3887c8a7c30276f" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;#subprocess.SubprocessError&quot;&gt;&lt;code&gt;SubprocessError&lt;/code&gt;&lt;/a&gt;, raised when a process run by &lt;a href=&quot;#subprocess.check_call&quot;&gt;&lt;code&gt;check_call()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#subprocess.check_output&quot;&gt;&lt;code&gt;check_output()&lt;/code&gt;&lt;/a&gt; returns a non-zero exit status.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.SubprocessError&quot;&gt; &lt;code&gt;SubprocessError&lt;/code&gt; 的&lt;/a&gt;子类，当由&lt;a href=&quot;#subprocess.check_call&quot;&gt; &lt;code&gt;check_call()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#subprocess.check_output&quot;&gt; &lt;code&gt;check_output()&lt;/code&gt; &lt;/a&gt;运行的进程返回非零退出状态时引发。</target>
        </trans-unit>
        <trans-unit id="ae80815b90b5b8e9b6b3c542c0b45602323cfcd9" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;#subprocess.SubprocessError&quot;&gt;&lt;code&gt;SubprocessError&lt;/code&gt;&lt;/a&gt;, raised when a timeout expires while waiting for a child process.</source>
          <target state="translated">&lt;a href=&quot;#subprocess.SubprocessError&quot;&gt; &lt;code&gt;SubprocessError&lt;/code&gt; 的&lt;/a&gt;子类，在等待子进程的超时到期时引发。</target>
        </trans-unit>
        <trans-unit id="5ea79dcb170946f4229ef4e1c8497a32281b1e85" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;#xml.sax.SAXException&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; raised on parse errors. Instances of this class are passed to the methods of the SAX &lt;a href=&quot;xml.sax.handler#xml.sax.handler.ErrorHandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt; interface to provide information about the parse error. This class supports the SAX &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.Locator&quot;&gt;&lt;code&gt;Locator&lt;/code&gt;&lt;/a&gt; interface as well as the &lt;a href=&quot;#xml.sax.SAXException&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">在解析错误时引发&lt;a href=&quot;#xml.sax.SAXException&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; 的&lt;/a&gt;子类。此类的实例传递到SAX &lt;a href=&quot;xml.sax.handler#xml.sax.handler.ErrorHandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;/a&gt;接口的方法，以提供有关解析错误的信息。此类支持SAX &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.Locator&quot;&gt; &lt;code&gt;Locator&lt;/code&gt; &lt;/a&gt;接口以及&lt;a href=&quot;#xml.sax.SAXException&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="c412fba6b7a640e4fdf177cef695a759e3a2a354" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;#xml.sax.SAXException&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; raised when a SAX &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; is asked to enable a feature that is not supported, or to set a property to a value that the implementation does not support. SAX applications and extensions may use this class for similar purposes.</source>
          <target state="translated">当要求SAX &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;启用不支持的功能或将属性设置为实现不支持的值时，抛出&lt;a href=&quot;#xml.sax.SAXException&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; 的&lt;/a&gt;子类。SAX应用程序和扩展可以出于类似的目的使用此类。</target>
        </trans-unit>
        <trans-unit id="449d768fd57e4fb92f1adbe54a363e343ad5d2e5" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;#xml.sax.SAXException&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; raised when a SAX &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; is confronted with an unrecognized feature or property. SAX applications and extensions may use this class for similar purposes.</source>
          <target state="translated">当SAX &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;遇到无法识别的功能或属性时，将引发&lt;a href=&quot;#xml.sax.SAXException&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; 的&lt;/a&gt;子类。SAX应用程序和扩展可以出于类似的目的使用此类。</target>
        </trans-unit>
        <trans-unit id="9dbf3b1c5eebfb30e1d2ea7c2cd569827c071250" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;, this can be raised by &lt;a href=&quot;#uu.decode&quot;&gt;&lt;code&gt;uu.decode()&lt;/code&gt;&lt;/a&gt; under various situations, such as described above, but also including a badly formatted header, or truncated input file.</source>
          <target state="translated">&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; 的&lt;/a&gt;子类，可以由&lt;a href=&quot;#uu.decode&quot;&gt; &lt;code&gt;uu.decode()&lt;/code&gt; &lt;/a&gt;在各种情况下引发，例如上述情况，但还包括格式错误的标头或截断的输入文件。</target>
        </trans-unit>
        <trans-unit id="f2d429031f78e137e36175c27cb754a6988a794a" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; that is the base exception class for all the other exceptions provided by this module.</source>
          <target state="translated">&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 的&lt;/a&gt;子类，它是此模块提供的所有其他异常的基本异常类。</target>
        </trans-unit>
        <trans-unit id="fa38ff4eca9c4f7660dd965920c2689de4c51586" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; for statistics-related exceptions.</source>
          <target state="translated">&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 的&lt;/a&gt;子类，用于与统计相关的异常。</target>
        </trans-unit>
        <trans-unit id="d81760b0a141ea819f6420dacebe1539a8aab96d" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; raised by &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt;&lt;code&gt;TopologicalSorter.prepare()&lt;/code&gt;&lt;/a&gt; if cycles exist in the working graph. If multiple cycles exist, only one undefined choice among them will be reported and included in the exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a8463546fd7e8b7d1098544a03bedc1b15b5bb" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; with the following additional attributes:</source>
          <target state="translated">&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 的&lt;/a&gt;子类，具有以下附加属性：</target>
        </trans-unit>
        <trans-unit id="0465c562f9ac89960a57eaed4de18b49eeba4d7d" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt;&lt;code&gt;unittest.SkipTest&lt;/code&gt;&lt;/a&gt;. Raised when a resource (such as a network connection) is not available. Raised by the &lt;a href=&quot;#test.support.requires&quot;&gt;&lt;code&gt;requires()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt; &lt;code&gt;unittest.SkipTest&lt;/code&gt; 的&lt;/a&gt;子类。在资源（例如网络连接）不可用时引发。由&lt;a href=&quot;#test.support.requires&quot;&gt; &lt;code&gt;requires()&lt;/code&gt; &lt;/a&gt;函数引发。</target>
        </trans-unit>
        <trans-unit id="742114b5996eb98809e4ba0395806a5fcdf94c5c" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;xml.sax.handler#xml.sax.handler.ContentHandler&quot;&gt;&lt;code&gt;xml.sax.handler.ContentHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;xml.sax.handler#xml.sax.handler.ContentHandler&quot;&gt; &lt;code&gt;xml.sax.handler.ContentHandler&lt;/code&gt; 的&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="fe744097b05a5e14aafb0b4f14e1be266fe69801" translate="yes" xml:space="preserve">
          <source>Subclass of RawTurtle, has the same interface but draws on a default &lt;a href=&quot;#turtle.Screen&quot;&gt;&lt;code&gt;Screen&lt;/code&gt;&lt;/a&gt; object created automatically when needed for the first time.</source>
          <target state="translated">RawTurtle的子类具有相同的接口，但使用的是在首次需要时自动创建的默认&lt;a href=&quot;#turtle.Screen&quot;&gt; &lt;code&gt;Screen&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="e08eef8e19815fb2d4a79ca3e74066671d1fdd44" translate="yes" xml:space="preserve">
          <source>Subclass of TurtleScreen, with &lt;a href=&quot;#screenspecific&quot;&gt;four methods added&lt;/a&gt;.</source>
          <target state="translated">TurtleScreen的子类，&lt;a href=&quot;#screenspecific&quot;&gt;添加&lt;/a&gt;了四个方法。</target>
        </trans-unit>
        <trans-unit id="fbe4145e84dda90486e5d7aea5035bbbb2ae4fad" translate="yes" xml:space="preserve">
          <source>Subclass relationships:</source>
          <target state="translated">子类关系。</target>
        </trans-unit>
        <trans-unit id="68f87902b2bb7e21be34b13ddc2db6486ba7ba21" translate="yes" xml:space="preserve">
          <source>Subclasses are &lt;a href=&quot;#BrokenPipeError&quot;&gt;&lt;code&gt;BrokenPipeError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ConnectionAbortedError&quot;&gt;&lt;code&gt;ConnectionAbortedError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ConnectionRefusedError&quot;&gt;&lt;code&gt;ConnectionRefusedError&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ConnectionResetError&quot;&gt;&lt;code&gt;ConnectionResetError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">子类是&lt;a href=&quot;#BrokenPipeError&quot;&gt; &lt;code&gt;BrokenPipeError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ConnectionAbortedError&quot;&gt; &lt;code&gt;ConnectionAbortedError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ConnectionRefusedError&quot;&gt; &lt;code&gt;ConnectionRefusedError&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ConnectionResetError&quot;&gt; &lt;code&gt;ConnectionResetError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9634416a35736cc4dad7afb0a13fd4fd12b329e0" translate="yes" xml:space="preserve">
          <source>Subclasses may override this to gain control over what type of objects and how they can be loaded, potentially reducing security risks. Refer to &lt;a href=&quot;#pickle-restrict&quot;&gt;Restricting Globals&lt;/a&gt; for details.</source>
          <target state="translated">子类可以重写此方法，以控制什么类型的对象以及如何加载对象，从而有可能降低安全风险。有关详细信息，请参阅&lt;a href=&quot;#pickle-restrict&quot;&gt;限制全局变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f7a139a4cbb3f42b6e6bec2081dabbe07f98934" translate="yes" xml:space="preserve">
          <source>Subclasses of abstract base protocol classes may implement some or all methods. All these methods are callbacks: they are called by transports on certain events, for example when some data is received. A base protocol method should be called by the corresponding transport.</source>
          <target state="translated">抽象基础协议类的子类可以实现一些或全部方法。所有这些方法都是回调:它们被传输者在某些事件上调用,例如当收到一些数据时。一个基础协议方法应该被相应的传输调用。</target>
        </trans-unit>
        <trans-unit id="e96530f62fd45d0ae1da578741f963dc1c2914ad" translate="yes" xml:space="preserve">
          <source>Subclasses of fundamental data types do &lt;em&gt;not&lt;/em&gt; inherit this behavior. So, if a foreign functions &lt;code&gt;restype&lt;/code&gt; is a subclass of &lt;a href=&quot;#ctypes.c_void_p&quot;&gt;&lt;code&gt;c_void_p&lt;/code&gt;&lt;/a&gt;, you will receive an instance of this subclass from the function call. Of course, you can get the value of the pointer by accessing the &lt;code&gt;value&lt;/code&gt; attribute.</source>
          <target state="translated">基本数据类型的子类&lt;em&gt;不&lt;/em&gt;继承此行为。因此，如果外部函数 &lt;code&gt;restype&lt;/code&gt; 是&lt;a href=&quot;#ctypes.c_void_p&quot;&gt; &lt;code&gt;c_void_p&lt;/code&gt; &lt;/a&gt;的子类，则您将从函数调用中收到此子类的实例。当然，您可以通过访问 &lt;code&gt;value&lt;/code&gt; 属性来获取指针的值。</target>
        </trans-unit>
        <trans-unit id="2faf39d59889c07047bef9ceff36a0b98897a85b" translate="yes" xml:space="preserve">
          <source>Subclasses of this type describe complex numbers and include the operations that work on the built-in &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/a&gt; type. These are: conversions to &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions#bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numbers.Complex.real&quot;&gt;&lt;code&gt;real&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numbers.Complex.imag&quot;&gt;&lt;code&gt;imag&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;a href=&quot;functions#abs&quot;&gt;&lt;code&gt;abs()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numbers.Complex.conjugate&quot;&gt;&lt;code&gt;conjugate()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;==&lt;/code&gt;, and &lt;code&gt;!=&lt;/code&gt;. All except &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; are abstract.</source>
          <target state="translated">此类型的子类描述复数，并且包括对内置&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex&lt;/code&gt; &lt;/a&gt;类型起作用的操作。它们是：转换为&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;functions#bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#numbers.Complex.real&quot;&gt; &lt;code&gt;real&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#numbers.Complex.imag&quot;&gt; &lt;code&gt;imag&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;/&lt;/code&gt; ，&lt;a href=&quot;functions#abs&quot;&gt; &lt;code&gt;abs()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#numbers.Complex.conjugate&quot;&gt; &lt;code&gt;conjugate()&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; 。除 &lt;code&gt;-&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; 外的所有内容都是抽象的。</target>
        </trans-unit>
        <trans-unit id="dc3c7fdb8e3db85769383d743688d169b662ab06" translate="yes" xml:space="preserve">
          <source>Subclasses should override this method to handle specific HTTP errors.</source>
          <target state="translated">子类应该重写这个方法来处理特定的HTTP错误。</target>
        </trans-unit>
        <trans-unit id="11848e2bebbc3a29375fcc3ebfbd3e0e7c87747b" translate="yes" xml:space="preserve">
          <source>Subclassing Repr Objects</source>
          <target state="translated">子类化Repr对象</target>
        </trans-unit>
        <trans-unit id="8cd6bf801b3a4fc26dcf1e78114200e3f0dfb072" translate="yes" xml:space="preserve">
          <source>Subclassing is not useful for adding new, stored fields. Instead, simply create a new named tuple type from the &lt;a href=&quot;#collections.somenamedtuple._fields&quot;&gt;&lt;code&gt;_fields&lt;/code&gt;&lt;/a&gt; attribute:</source>
          <target state="translated">子类化对于添加新的存储字段没有用。相反，只需从&lt;a href=&quot;#collections.somenamedtuple._fields&quot;&gt; &lt;code&gt;_fields&lt;/code&gt; &lt;/a&gt;属性创建一个新的命名元组类型：</target>
        </trans-unit>
        <trans-unit id="bc18c45ae3419b35c2d6f4393185fb10785dc776" translate="yes" xml:space="preserve">
          <source>Subdirectories in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b中的&lt;/em&gt;子目录。</target>
        </trans-unit>
        <trans-unit id="f3cc94f5b60aa018ef66fb9d2f1337d65a142651" translate="yes" xml:space="preserve">
          <source>Subelement factory. This function creates an element instance, and appends it to an existing element.</source>
          <target state="translated">子元素工厂。该函数创建一个元素实例,并将其添加到现有元素中。</target>
        </trans-unit>
        <trans-unit id="aeef398fe9b70c77a800e5753464164e0b62f8bd" translate="yes" xml:space="preserve">
          <source>Submit a coroutine to the given event loop. Thread-safe.</source>
          <target state="translated">向给定的事件循环提交一个coroutine。线程安全。</target>
        </trans-unit>
        <trans-unit id="1c5116a4cdb1bb42806b0ae7595bafd289f6ae45" translate="yes" xml:space="preserve">
          <source>Submodules in the &lt;code&gt;html&lt;/code&gt; package are:</source>
          <target state="translated">&lt;code&gt;html&lt;/code&gt; 包中的子模块是：</target>
        </trans-unit>
        <trans-unit id="a2fd7a46bccc45b90a9301f87ca488c4e8c89a7a" translate="yes" xml:space="preserve">
          <source>Subprocess Protocols</source>
          <target state="translated">子流程协议</target>
        </trans-unit>
        <trans-unit id="f193fe1121f5623add21273ef8fc3c48caca72ae" translate="yes" xml:space="preserve">
          <source>Subprocess Support on Windows</source>
          <target state="translated">Windows上的子进程支持</target>
        </trans-unit>
        <trans-unit id="608b4a549b42b619e2c116c4cfaca765547960d5" translate="yes" xml:space="preserve">
          <source>Subprocess Transports</source>
          <target state="translated">子流程传输</target>
        </trans-unit>
        <trans-unit id="75f6326051f7d373f0c653a3208e4f446015511e" translate="yes" xml:space="preserve">
          <source>Subprocess and Threads</source>
          <target state="translated">子进程和线程</target>
        </trans-unit>
        <trans-unit id="1b3d1f152ab0af85328e064bff374ae84661a01a" translate="yes" xml:space="preserve">
          <source>Subprocesses</source>
          <target state="translated">Subprocesses</target>
        </trans-unit>
        <trans-unit id="a7acf777e8671844564722579c4f12a0018fce21" translate="yes" xml:space="preserve">
          <source>Subprocesses are available for Windows if a &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; is used. See &lt;a href=&quot;asyncio-platforms#asyncio-windows-subprocess&quot;&gt;Subprocess Support on Windows&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73aa39d648711630348205e36a38de83927f9fa" translate="yes" xml:space="preserve">
          <source>Subscribe to new mailbox.</source>
          <target state="translated">订阅新邮箱。</target>
        </trans-unit>
        <trans-unit id="76b0f8f5e3eafb5efd52e8814f9a8a2f7acebe13" translate="yes" xml:space="preserve">
          <source>Subscripting</source>
          <target state="translated">Subscripting</target>
        </trans-unit>
        <trans-unit id="2630b7bb32937922039b8f3fcf38f0c4fc2f34c2" translate="yes" xml:space="preserve">
          <source>Subsequently, clicking and dragging the Turtle will move it across the screen thereby producing handdrawings (if pen is down).</source>
          <target state="translated">随后,点击并拖动Turtle将使其在屏幕上移动,从而产生手绘(如果笔向下)。</target>
        </trans-unit>
        <trans-unit id="1c35282cc6ed4710e3865b5ae9060404a04cfa20" translate="yes" xml:space="preserve">
          <source>Substantially all of these recipes and many, many others can be installed from the &lt;a href=&quot;https://pypi.org/project/more-itertools/&quot;&gt;more-itertools project&lt;/a&gt; found on the Python Package Index:</source>
          <target state="translated">基本上所有这些食谱以及许多其他食谱都可以从Python Package Index上的&lt;a href=&quot;https://pypi.org/project/more-itertools/&quot;&gt;more-itertools项目中&lt;/a&gt;安装：</target>
        </trans-unit>
        <trans-unit id="8017bd7de9961cf42f59abc587d0495a9d25c2a9" translate="yes" xml:space="preserve">
          <source>Substitute</source>
          <target state="translated">Substitute</target>
        </trans-unit>
        <trans-unit id="a5b58ce4dec6fe8562096a10da3109ac06c55815" translate="yes" xml:space="preserve">
          <source>Subtraction</source>
          <target state="translated">Subtraction</target>
        </trans-unit>
        <trans-unit id="4da95a14917708977df06c3a9bc3525dfe345cc7" translate="yes" xml:space="preserve">
          <source>Subtraction of a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; from a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; is defined only if both operands are naive, or if both are aware. If one is aware and the other is naive, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">仅当两个操作数都是天真或两个都知道时，才定义从&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;减去&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;时间。如果一个知道并且另一个很幼稚，则会引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecb6768e3a4847083ed7606ab61e8d92662539ab" translate="yes" xml:space="preserve">
          <source>Subtypes &lt;a href=&quot;#numbers.Rational&quot;&gt;&lt;code&gt;Rational&lt;/code&gt;&lt;/a&gt; and adds a conversion to &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;. Provides defaults for &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numbers.Rational.numerator&quot;&gt;&lt;code&gt;numerator&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#numbers.Rational.denominator&quot;&gt;&lt;code&gt;denominator&lt;/code&gt;&lt;/a&gt;. Adds abstract methods for &lt;code&gt;**&lt;/code&gt; and bit-string operations: &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;.</source>
          <target state="translated">子类型为&lt;a href=&quot;#numbers.Rational&quot;&gt; &lt;code&gt;Rational&lt;/code&gt; &lt;/a&gt;，并将转换添加到&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;。提供&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#numbers.Rational.numerator&quot;&gt; &lt;code&gt;numerator&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#numbers.Rational.denominator&quot;&gt; &lt;code&gt;denominator&lt;/code&gt; 的&lt;/a&gt;默认值。为 &lt;code&gt;**&lt;/code&gt; 和位字符串操作添加抽象方法： &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;amp;&lt;/code&gt; ， &lt;code&gt;^&lt;/code&gt; ， &lt;code&gt;|&lt;/code&gt; ， &lt;code&gt;~&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acf27fa904d82b9826de898422bddce79bf25b6c" translate="yes" xml:space="preserve">
          <source>Subtypes &lt;a href=&quot;#numbers.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt; and adds &lt;a href=&quot;#numbers.Rational.numerator&quot;&gt;&lt;code&gt;numerator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#numbers.Rational.denominator&quot;&gt;&lt;code&gt;denominator&lt;/code&gt;&lt;/a&gt; properties, which should be in lowest terms. With these, it provides a default for &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">子类型为&lt;a href=&quot;#numbers.Real&quot;&gt; &lt;code&gt;Real&lt;/code&gt; &lt;/a&gt;并添加&lt;a href=&quot;#numbers.Rational.numerator&quot;&gt; &lt;code&gt;numerator&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#numbers.Rational.denominator&quot;&gt; &lt;code&gt;denominator&lt;/code&gt; &lt;/a&gt;属性，应使用最低的术语。有了这些，它提供了&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float()&lt;/code&gt; &lt;/a&gt;的默认值。</target>
        </trans-unit>
        <trans-unit id="74fbb35e5c886563f49ae90dc092890ed7d7c06e" translate="yes" xml:space="preserve">
          <source>Such a protocol can be used with &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions#issubclass&quot;&gt;&lt;code&gt;issubclass()&lt;/code&gt;&lt;/a&gt;. This raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; when applied to a non-protocol class. This allows a simple-minded structural check, very similar to &amp;ldquo;one trick ponies&amp;rdquo; in &lt;a href=&quot;collections.abc#module-collections.abc&quot;&gt;&lt;code&gt;collections.abc&lt;/code&gt;&lt;/a&gt; such as &lt;a href=&quot;#typing.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">这样的协议可以与&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;functions#issubclass&quot;&gt; &lt;code&gt;issubclass()&lt;/code&gt; 一起使用&lt;/a&gt;。当将其应用于非协议类时，将引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。这样就可以进行简单的结构检查，非常类似于&lt;a href=&quot;collections.abc#module-collections.abc&quot;&gt; &lt;code&gt;collections.abc&lt;/code&gt; 中的&lt;/a&gt; &amp;ldquo;一个小马驹&amp;rdquo;，例如&lt;a href=&quot;#typing.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="555e0f2464699897e532312bd09f54e56ff6661a" translate="yes" xml:space="preserve">
          <source>Such a protocol can be used with &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions#issubclass&quot;&gt;&lt;code&gt;issubclass()&lt;/code&gt;&lt;/a&gt;. This raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; when applied to a non-protocol class. This allows a simple-minded structural check, very similar to &amp;ldquo;one trick ponies&amp;rdquo; in &lt;a href=&quot;collections.abc#module-collections.abc&quot;&gt;&lt;code&gt;collections.abc&lt;/code&gt;&lt;/a&gt; such as &lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ab8e7b9d892bd49f51c887194e3bf273be0624" translate="yes" xml:space="preserve">
          <source>Such a socket should be constructed with &lt;code&gt;socket(AF_INET, SOCK_DGRAM, IPPROTO_UDPLITE)&lt;/code&gt; for IPv4 or &lt;code&gt;socket(AF_INET6, SOCK_DGRAM, IPPROTO_UDPLITE)&lt;/code&gt; for IPv6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4580275cc4892f87f828ae9ab0c8615335ad38b" translate="yes" xml:space="preserve">
          <source>Such a working environment for the testing code is called a &lt;em&gt;test fixture&lt;/em&gt;. A new TestCase instance is created as a unique test fixture used to execute each individual test method. Thus &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;__init__()&lt;/code&gt; will be called once per test.</source>
          <target state="translated">这种用于测试代码的工作环境称为&lt;em&gt;测试夹具&lt;/em&gt;。创建一个新的TestCase实例作为用于执行每种单独的测试方法的唯一测试夹具。因此，每次测试将调用一次&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;__init__()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="569e97e9cf59ecd91bcf9337482c24c10ce87879" translate="yes" xml:space="preserve">
          <source>Such classes are primarily used with static type checkers that recognize structural subtyping (static duck-typing), for example:</source>
          <target state="translated">这种类主要是与静态类型检查器一起使用的,例如,可以识别结构子类型(静态鸭型)。</target>
        </trans-unit>
        <trans-unit id="9329eb9aa34af42ffa2a93d687d5317e3f5235f3" translate="yes" xml:space="preserve">
          <source>Suitable authentication keys can also be generated by using &lt;a href=&quot;os#os.urandom&quot;&gt;&lt;code&gt;os.urandom()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">也可以使用&lt;a href=&quot;os#os.urandom&quot;&gt; &lt;code&gt;os.urandom()&lt;/code&gt; &lt;/a&gt;生成合适的身份验证密钥。</target>
        </trans-unit>
        <trans-unit id="f23479160dad6d72ea41ad1ada5548a474e2812a" translate="yes" xml:space="preserve">
          <source>Suitable for serializing headers with for use in HTTP traffic. Like &lt;code&gt;SMTP&lt;/code&gt; except that &lt;code&gt;max_line_length&lt;/code&gt; is set to &lt;code&gt;None&lt;/code&gt; (unlimited).</source>
          <target state="translated">适用于序列化标头，以用于HTTP通信。与 &lt;code&gt;SMTP&lt;/code&gt; 类似，但 &lt;code&gt;max_line_length&lt;/code&gt; 设置为 &lt;code&gt;None&lt;/code&gt; （无限制）。</target>
        </trans-unit>
        <trans-unit id="20cedaa1c72a2a3d625caf6ace5a8bd3b72587e6" translate="yes" xml:space="preserve">
          <source>Suitable for serializing messages in conformance with the email RFCs. Like &lt;code&gt;default&lt;/code&gt;, but with &lt;code&gt;linesep&lt;/code&gt; set to &lt;code&gt;\r\n&lt;/code&gt;, which is RFC compliant.</source>
          <target state="translated">适用于序列化符合电子邮件RFC的消息。类似于 &lt;code&gt;default&lt;/code&gt; ，但是将 &lt;code&gt;linesep&lt;/code&gt; 设置为 &lt;code&gt;\r\n&lt;/code&gt; ，这符合RFC。</target>
        </trans-unit>
        <trans-unit id="6041614310b640badaffea2c7d335b6f832e16a6" translate="yes" xml:space="preserve">
          <source>Sum of &lt;em&gt;t2&lt;/em&gt; and &lt;em&gt;t3&lt;/em&gt;. Afterwards &lt;em&gt;t1&lt;/em&gt;-&lt;em&gt;t2&lt;/em&gt; == &lt;em&gt;t3&lt;/em&gt; and &lt;em&gt;t1&lt;/em&gt;-&lt;em&gt;t3&lt;/em&gt; == &lt;em&gt;t2&lt;/em&gt; are true. (1)</source>
          <target state="translated">&lt;em&gt;t2&lt;/em&gt;和&lt;em&gt;t3的&lt;/em&gt;总和。之后，&lt;em&gt;t1&lt;/em&gt; - &lt;em&gt;t2&lt;/em&gt; == &lt;em&gt;t3&lt;/em&gt;和&lt;em&gt;t1&lt;/em&gt; - &lt;em&gt;t3&lt;/em&gt; == &lt;em&gt;t2&lt;/em&gt;为真。（1）</target>
        </trans-unit>
        <trans-unit id="cf2e0ac1abe9991950dc9a0f752cd54dd7bc103e" translate="yes" xml:space="preserve">
          <source>Summary Information Objects</source>
          <target state="translated">摘要信息对象</target>
        </trans-unit>
        <trans-unit id="081801ed855f7ea1e9547fff0960353e86533990" translate="yes" xml:space="preserve">
          <source>Sums &lt;em&gt;start&lt;/em&gt; and the items of an &lt;em&gt;iterable&lt;/em&gt; from left to right and returns the total. The &lt;em&gt;iterable&lt;/em&gt;&amp;rsquo;s items are normally numbers, and the start value is not allowed to be a string.</source>
          <target state="translated">资金&lt;em&gt;开始&lt;/em&gt;和的项目&lt;em&gt;迭代&lt;/em&gt;由左到右，并返回总。该&lt;em&gt;迭代&lt;/em&gt;的项目通常是数字，起始值不允许是一个字符串。</target>
        </trans-unit>
        <trans-unit id="9fb8e1dcc0618b570ef726a2c2f5c8c32458ca29" translate="yes" xml:space="preserve">
          <source>Sun Raster Files</source>
          <target state="translated">太阳光栅文件</target>
        </trans-unit>
        <trans-unit id="7e68f0fe2190692ac198ec08680c9165ed0bc8ac" translate="yes" xml:space="preserve">
          <source>Superseded Modules</source>
          <target state="translated">被取代的模块</target>
        </trans-unit>
        <trans-unit id="5afe2ce3fd97873cfd03f0d31f996c393cb80823" translate="yes" xml:space="preserve">
          <source>Supplying both &lt;em&gt;delta&lt;/em&gt; and &lt;em&gt;places&lt;/em&gt; raises a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">同时提供&lt;em&gt;delta&lt;/em&gt;和&lt;em&gt;place&lt;/em&gt;会引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a6274429b9e74774e2f3303d9a6d41ad1904c628" translate="yes" xml:space="preserve">
          <source>Support added to accept objects implementing &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">添加了支持以接受实现&lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; 的&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="c45cf1bef2aaca2df81ed649759f79abec2ac29e" translate="yes" xml:space="preserve">
          <source>Support for RFC compliant base64-style encoding in base 16, 32, 64, and 85.</source>
          <target state="translated">支持符合RFC标准的16、32、64和85基数的base64风格编码。</target>
        </trans-unit>
        <trans-unit id="a583b7e17a3d918bd770584a72a9ea641537a6fa" translate="yes" xml:space="preserve">
          <source>Support for UU encoding used on Unix.</source>
          <target state="translated">支持Unix上使用的UU编码。</target>
        </trans-unit>
        <trans-unit id="8f4e914f01a4a999895aa53c04ff8ef3c4014be8" translate="yes" xml:space="preserve">
          <source>Support for creating Unix shell-like mini-languages which can be used as an alternate format for application configuration files.</source>
          <target state="translated">支持创建类似Unix shell的迷你语言,它可以作为应用程序配置文件的替代格式。</target>
        </trans-unit>
        <trans-unit id="0454104d2013b349a0b01cf675c0e0f90e6fe08c" translate="yes" xml:space="preserve">
          <source>Support for generator-based coroutines is &lt;strong&gt;deprecated&lt;/strong&gt; and is scheduled for removal in Python 3.10.</source>
          <target state="translated">&lt;strong&gt;不推荐使用&lt;/strong&gt;基于生成器的协程，并且计划在Python 3.10中将其删除。</target>
        </trans-unit>
        <trans-unit id="c3493128e40c42ea9b0bc98b24da6465e8803a52" translate="yes" xml:space="preserve">
          <source>Support for quoted-printable encoding used in MIME email messages.</source>
          <target state="translated">支持MIME邮件中使用的可引用打印编码。</target>
        </trans-unit>
        <trans-unit id="3576ed8288192f2fee1c040daa80e637362b26e1" translate="yes" xml:space="preserve">
          <source>Support for the &lt;code&gt;%Z&lt;/code&gt; directive is based on the values contained in &lt;code&gt;tzname&lt;/code&gt; and whether &lt;code&gt;daylight&lt;/code&gt; is true. Because of this, it is platform-specific except for recognizing UTC and GMT which are always known (and are considered to be non-daylight savings timezones).</source>
          <target state="translated">Support for the &lt;code&gt;%Z&lt;/code&gt; directive is based on the values contained in &lt;code&gt;tzname&lt;/code&gt; and whether &lt;code&gt;daylight&lt;/code&gt; is true. Because of this, it is platform-specific except for recognizing UTC and GMT which are always known (and are considered to be non-daylight savings timezones).</target>
        </trans-unit>
        <trans-unit id="217b20cf21b3ed7dad1e7b4116a8a1a435c6c633" translate="yes" xml:space="preserve">
          <source>Support for the binhex format used on the Macintosh.</source>
          <target state="translated">支持Macintosh上使用的binhex格式。</target>
        </trans-unit>
        <trans-unit id="ba6bfb5cd1f44d00c1d197f4c41e207f21ef9738" translate="yes" xml:space="preserve">
          <source>Support module containing ASCII-to-binary and binary-to-ASCII conversions.</source>
          <target state="translated">支持模块包含ASCII到二进制和二进制到ASCII的转换。</target>
        </trans-unit>
        <trans-unit id="6f2828e37199af31ea85076d2c4aac1d71fd6a24" translate="yes" xml:space="preserve">
          <source>Support module for Common Gateway Interface (CGI) scripts.</source>
          <target state="translated">支持通用网关接口(CGI)脚本的模块。</target>
        </trans-unit>
        <trans-unit id="cae184e1fd17dd1949a7a9914ea38783315470a4" translate="yes" xml:space="preserve">
          <source>Support of nested sets and set operations as in &lt;a href=&quot;https://unicode.org/reports/tr18/&quot;&gt;Unicode Technical Standard #18&lt;/a&gt; might be added in the future. This would change the syntax, so to facilitate this change a &lt;a href=&quot;exceptions#FutureWarning&quot;&gt;&lt;code&gt;FutureWarning&lt;/code&gt;&lt;/a&gt; will be raised in ambiguous cases for the time being. That includes sets starting with a literal &lt;code&gt;'['&lt;/code&gt; or containing literal character sequences &lt;code&gt;'--'&lt;/code&gt;, &lt;code&gt;'&amp;amp;&amp;amp;'&lt;/code&gt;, &lt;code&gt;'~~'&lt;/code&gt;, and &lt;code&gt;'||'&lt;/code&gt;. To avoid a warning escape them with a backslash.</source>
          <target state="translated">将来可能会像&lt;a href=&quot;https://unicode.org/reports/tr18/&quot;&gt;Unicode技术标准＃18中&lt;/a&gt;那样增加对嵌套集和集操作的支持。这将更改语法，因此为了便于进行此更改，&lt;a href=&quot;exceptions#FutureWarning&quot;&gt; &lt;code&gt;FutureWarning&lt;/code&gt; &lt;/a&gt;将在不明确的情况下引发FutureWarning。包括以文字 &lt;code&gt;'['&lt;/code&gt; 开头或包含文字字符序列 &lt;code&gt;'--'&lt;/code&gt; ， &lt;code&gt;'&amp;amp;&amp;amp;'&lt;/code&gt; ， &lt;code&gt;'~~'&lt;/code&gt; 和 &lt;code&gt;'||'&lt;/code&gt; 的集合 。为避免警告，请使用反斜杠将其转义。</target>
        </trans-unit>
        <trans-unit id="34c2d51511e18f399acd729bf0d32d0f331da4dc" translate="yes" xml:space="preserve">
          <source>Supported &lt;code&gt;__dunder__&lt;/code&gt; names</source>
          <target state="translated">支持的 &lt;code&gt;__dunder__&lt;/code&gt; 名称</target>
        </trans-unit>
        <trans-unit id="860847087ca874e265c53bebcb25de89e89a419e" translate="yes" xml:space="preserve">
          <source>Supported &lt;code&gt;_sunder_&lt;/code&gt; names</source>
          <target state="translated">支持的 &lt;code&gt;_sunder_&lt;/code&gt; 名称</target>
        </trans-unit>
        <trans-unit id="6fbcc5ee1a893b88dc48a9bf278671f9e71d879c" translate="yes" xml:space="preserve">
          <source>Supported Datatypes</source>
          <target state="translated">支持的数据类型</target>
        </trans-unit>
        <trans-unit id="68c97337e44afb64700f91eca2739ac78f0bfe57" translate="yes" xml:space="preserve">
          <source>Supported INI File Structure</source>
          <target state="translated">支持的INI文件结构</target>
        </trans-unit>
        <trans-unit id="56eeda32580e6722d0110813df1876780c539a68" translate="yes" xml:space="preserve">
          <source>Supported XPath syntax</source>
          <target state="translated">支持的XPath语法</target>
        </trans-unit>
        <trans-unit id="75176a74a843b8335557dfa3589f8f288d73dd22" translate="yes" xml:space="preserve">
          <source>Supported attributes:</source>
          <target state="translated">支持的属性:</target>
        </trans-unit>
        <trans-unit id="31a2feb732348c22826d756895b1cf4e4bfa2c48" translate="yes" xml:space="preserve">
          <source>Supported operations:</source>
          <target state="translated">支持的业务:</target>
        </trans-unit>
        <trans-unit id="69ff77c5c47a3423e26197366cdb49be33add676" translate="yes" xml:space="preserve">
          <source>Supported tar formats</source>
          <target state="translated">支持的焦油格式</target>
        </trans-unit>
        <trans-unit id="e367c2302e72de69a7a939f03f510bb5eab31173" translate="yes" xml:space="preserve">
          <source>Supported values for &lt;em&gt;address_family&lt;/em&gt; are currently &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt;. If the IP address string &lt;em&gt;ip_string&lt;/em&gt; is invalid, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; will be raised. Note that exactly what is valid depends on both the value of &lt;em&gt;address_family&lt;/em&gt; and the underlying implementation of &lt;code&gt;inet_pton()&lt;/code&gt;.</source>
          <target state="translated">目前支持的&lt;em&gt;address_family&lt;/em&gt;值为&lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socket.AF_INET6&quot;&gt; &lt;code&gt;AF_INET6&lt;/code&gt; &lt;/a&gt;。如果IP地址字符串&lt;em&gt;ip_string&lt;/em&gt;无效，将引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。请注意，确切有效的内容取决于&lt;em&gt;address_family&lt;/em&gt;的值和 &lt;code&gt;inet_pton()&lt;/code&gt; 的基础实现。</target>
        </trans-unit>
        <trans-unit id="0e9fde244b17f9b103b9bf324659c200069ab093" translate="yes" xml:space="preserve">
          <source>Supported values for &lt;em&gt;address_family&lt;/em&gt; are currently &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt;. If the bytes object &lt;em&gt;packed_ip&lt;/em&gt; is not the correct length for the specified address family, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised. &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised for errors from the call to &lt;a href=&quot;#socket.inet_ntop&quot;&gt;&lt;code&gt;inet_ntop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;address_family&lt;/em&gt;当前支持的值为&lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socket.AF_INET6&quot;&gt; &lt;code&gt;AF_INET6&lt;/code&gt; &lt;/a&gt;。如果字节对象&lt;em&gt;packed_ip&lt;/em&gt;对于指定的地址系列而言不是正确的长度，则将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。对于从对&lt;a href=&quot;#socket.inet_ntop&quot;&gt; &lt;code&gt;inet_ntop()&lt;/code&gt; &lt;/a&gt;的调用中的错误引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09e336d73118eb768da01cca5618d57d7b503e9d" translate="yes" xml:space="preserve">
          <source>Supported, &lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;IANA-registered&lt;/a&gt; status codes available in &lt;a href=&quot;#http.HTTPStatus&quot;&gt;&lt;code&gt;http.HTTPStatus&lt;/code&gt;&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;#http.HTTPStatus&quot;&gt; &lt;code&gt;http.HTTPStatus&lt;/code&gt; &lt;/a&gt;中提供的受支持的，&lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;IANA注册的&lt;/a&gt;状态代码为：</target>
        </trans-unit>
        <trans-unit id="fbbbea93c1c5df9b273b63f34add5d6a935c85e8" translate="yes" xml:space="preserve">
          <source>Supporting a variable number of context managers</source>
          <target state="translated">支持不同数量的上下文管理器</target>
        </trans-unit>
        <trans-unit id="430fdd77b068348b7fc76000478a45dd8feb2327" translate="yes" xml:space="preserve">
          <source>Supporting sub-commands.</source>
          <target state="translated">支持子命令。</target>
        </trans-unit>
        <trans-unit id="5353a4310fa3de26f04bb5315747474ebebe3b0d" translate="yes" xml:space="preserve">
          <source>Supports the following objects and types by default:</source>
          <target state="translated">默认支持以下对象和类型。</target>
        </trans-unit>
        <trans-unit id="ed7383e628fad324b7b5dbc2ef5232ff9eb0de60" translate="yes" xml:space="preserve">
          <source>Suppose a car travels 10 km at 40 km/hr, then another 10 km at 60 km/hr. What is the average speed?</source>
          <target state="translated">假设一辆汽车以每小时40公里的速度行驶10公里,然后以每小时60公里的速度再行驶10公里。平均速度是多少?</target>
        </trans-unit>
        <trans-unit id="4ed7afaf4b512d83ce6e0b4b0ff8ec5635d0cee0" translate="yes" xml:space="preserve">
          <source>Suppose an investor purchases an equal value of shares in each of three companies, with P/E (price/earning) ratios of 2.5, 3 and 10. What is the average P/E ratio for the investor&amp;rsquo;s portfolio?</source>
          <target state="translated">假设投资者购买三家公司中每家股票的同等价值的股票，其市盈率（市盈率）分别为2.5、3和10。该投资组合的平均市盈率是多少？</target>
        </trans-unit>
        <trans-unit id="eaf782ee46dbe7ee16e8a3fa45ccff536424ea2f" translate="yes" xml:space="preserve">
          <source>Suppose we want to create a class whose instances represent temporary directories. The directories should be deleted with their contents when the first of the following events occurs:</source>
          <target state="translated">假设我们想创建一个类,其实例代表临时目录。当发生以下第一个事件时,这些目录应该连同其内容一起被删除。</target>
        </trans-unit>
        <trans-unit id="dae8fd2ae7a644b210a65c97e04dd4a10af6eaf1" translate="yes" xml:space="preserve">
          <source>Suppose you are writing a poker program where a player&amp;rsquo;s hand is represented as a 5-character string with each character representing a card, &amp;ldquo;a&amp;rdquo; for ace, &amp;ldquo;k&amp;rdquo; for king, &amp;ldquo;q&amp;rdquo; for queen, &amp;ldquo;j&amp;rdquo; for jack, &amp;ldquo;t&amp;rdquo; for 10, and &amp;ldquo;2&amp;rdquo; through &amp;ldquo;9&amp;rdquo; representing the card with that value.</source>
          <target state="translated">假设您正在编写一个扑克程序，其中玩家的手用5个字符的字符串表示，每个字符代表一张纸牌，&amp;ldquo; a&amp;rdquo;代表ace，&amp;ldquo; k&amp;rdquo;代表国王，&amp;ldquo; q&amp;rdquo;代表皇后，&amp;ldquo; j&amp;rdquo;代表杰克， &amp;ldquo; t&amp;rdquo;代表10，&amp;ldquo; 2&amp;rdquo;到&amp;ldquo; 9&amp;rdquo;代表具有该值的卡。</target>
        </trans-unit>
        <trans-unit id="f393e730a2a08893c63f470b503752ca86b2b301" translate="yes" xml:space="preserve">
          <source>Surprises</source>
          <target state="translated">Surprises</target>
        </trans-unit>
        <trans-unit id="b24247fb5a9d8d8059901182187be57626f3ba71" translate="yes" xml:space="preserve">
          <source>Suspend</source>
          <target state="translated">Suspend</target>
        </trans-unit>
        <trans-unit id="a7ac10f457b6a58e8db141ff4f40d96148eeab0e" translate="yes" xml:space="preserve">
          <source>Suspend execution of the calling thread for the given number of seconds. The argument may be a floating point number to indicate a more precise sleep time. The actual suspension time may be less than that requested because any caught signal will terminate the &lt;a href=&quot;#time.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt; following execution of that signal&amp;rsquo;s catching routine. Also, the suspension time may be longer than requested by an arbitrary amount because of the scheduling of other activity in the system.</source>
          <target state="translated">在给定的秒数内暂停调用线程的执行。该参数可以是浮点数，以指示更精确的睡眠时间。实际的暂停时间可能少于请求的暂停时间，因为任何捕获到的信号都会在执行该信号的捕获例程后终止&lt;a href=&quot;#time.sleep&quot;&gt; &lt;code&gt;sleep()&lt;/code&gt; &lt;/a&gt;。而且，由于系统中其他活动的调度，挂起时间可能比请求的时间长任意数量。</target>
        </trans-unit>
        <trans-unit id="721fc37163cc5ef97473efd877420d38d14966c0" translate="yes" xml:space="preserve">
          <source>Suspend execution of the calling thread until the delivery of one of the signals specified in the signal set &lt;em&gt;sigset&lt;/em&gt;. The function accepts the signal (removes it from the pending list of signals), and returns the signal number.</source>
          <target state="translated">暂停执行调用线程，直到传递信号集&lt;em&gt;sigset中&lt;/em&gt;指定的信号之一为止。该函数接受信号（将其从挂起的信号列表中删除），并返回信号编号。</target>
        </trans-unit>
        <trans-unit id="0d6d4c32622974b9d1c49557ecd6fdc3384f6d0f" translate="yes" xml:space="preserve">
          <source>Suspend execution of the calling thread until the delivery of one of the signals specified in the signal set &lt;em&gt;sigset&lt;/em&gt;. The function accepts the signal and removes it from the pending list of signals. If one of the signals in &lt;em&gt;sigset&lt;/em&gt; is already pending for the calling thread, the function will return immediately with information about that signal. The signal handler is not called for the delivered signal. The function raises an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; if it is interrupted by a signal that is not in &lt;em&gt;sigset&lt;/em&gt;.</source>
          <target state="translated">暂停调用线程的执行，直到传递信号集&lt;em&gt;sigset中&lt;/em&gt;指定的信号之一为止。该函数接受信号并将其从挂起的信号列表中删除。如果&lt;em&gt;sigset&lt;/em&gt;中的信号之一已被调用线程挂起，则该函数将立即返回有关该信号的信息。不会为传递的信号调用信号处理程序。如果该函数被不在&lt;em&gt;sigset中&lt;/em&gt;的信号&lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt;则会引发InterruptedError。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5be3b88fe6050f07242146d412f9682bcec1857" translate="yes" xml:space="preserve">
          <source>Suspend or resume input or output on file descriptor &lt;em&gt;fd&lt;/em&gt;. The &lt;em&gt;action&lt;/em&gt; argument can be &lt;code&gt;TCOOFF&lt;/code&gt; to suspend output, &lt;code&gt;TCOON&lt;/code&gt; to restart output, &lt;code&gt;TCIOFF&lt;/code&gt; to suspend input, or &lt;code&gt;TCION&lt;/code&gt; to restart input.</source>
          <target state="translated">挂起或恢复文件描述符&lt;em&gt;fd&lt;/em&gt;上的输入或输出。该&lt;em&gt;操作&lt;/em&gt;参数可以是 &lt;code&gt;TCOOFF&lt;/code&gt; 暂停输出， &lt;code&gt;TCOON&lt;/code&gt; 重新启动输出， &lt;code&gt;TCIOFF&lt;/code&gt; 暂停输入，或 &lt;code&gt;TCION&lt;/code&gt; 重新启动输入。</target>
        </trans-unit>
        <trans-unit id="496f3ed6f7e14ef62d9e444944e5bf0608249526" translate="yes" xml:space="preserve">
          <source>Swaps the two top-most stack items.</source>
          <target state="translated">交换最上面的两个堆栈项目。</target>
        </trans-unit>
        <trans-unit id="2e0dcb00e65a28125117875b793974ff78034961" translate="yes" xml:space="preserve">
          <source>Switching protocol should only be done when both protocols are documented to support the switch.</source>
          <target state="translated">只有当两种协议都有支持切换的文件时,才应该进行切换协议。</target>
        </trans-unit>
        <trans-unit id="fe0965f151a6bf0067ecb9aa1896964bf350a557" translate="yes" xml:space="preserve">
          <source>Symbol tables are generated by the compiler from AST just before bytecode is generated. The symbol table is responsible for calculating the scope of every identifier in the code. &lt;a href=&quot;#module-symtable&quot;&gt;&lt;code&gt;symtable&lt;/code&gt;&lt;/a&gt; provides an interface to examine these tables.</source>
          <target state="translated">符号表是在字节码生成之前由编译器从AST生成的。符号表负责计算代码中每个标识符的范围。&lt;a href=&quot;#module-symtable&quot;&gt; &lt;code&gt;symtable&lt;/code&gt; &lt;/a&gt;提供了检查这些表的接口。</target>
        </trans-unit>
        <trans-unit id="08f7ff9d34edbbf7d7ae7d368633ffd9090dec8b" translate="yes" xml:space="preserve">
          <source>Symbol used to annotate a negative monetary value.</source>
          <target state="translated">用于注释负货币价值的符号。</target>
        </trans-unit>
        <trans-unit id="dc9ab385c43a04a353935818fc27997e22e5f289" translate="yes" xml:space="preserve">
          <source>Symbol used to annotate a positive monetary value.</source>
          <target state="translated">用于注释正货币价值的符号。</target>
        </trans-unit>
        <trans-unit id="66e9aca03dcf567e45a76a6d9b9aff78a6e0594a" translate="yes" xml:space="preserve">
          <source>Symbolic constants are used to specify particular system resources and to request usage information about either the current process or its children.</source>
          <target state="translated">符号常量用于指定特定的系统资源,并请求当前进程或其子进程的使用信息。</target>
        </trans-unit>
        <trans-unit id="15d2715339927ab1cacbd3a795da09326886df84" translate="yes" xml:space="preserve">
          <source>Symbolic link.</source>
          <target state="translated">符号链接。</target>
        </trans-unit>
        <trans-unit id="b5fbcc04189e5e7ee4d138a02eb7cd6accc39d21" translate="yes" xml:space="preserve">
          <source>Symbolic value</source>
          <target state="translated">符号价值</target>
        </trans-unit>
        <trans-unit id="cbcf7ae51d210c4ce6c53f74b6ecb4c2b26819b4" translate="yes" xml:space="preserve">
          <source>Synchronization</source>
          <target state="translated">Synchronization</target>
        </trans-unit>
        <trans-unit id="29a7d1ea3d952fb85c579718deee912747842d8b" translate="yes" xml:space="preserve">
          <source>Synchronization Primitives</source>
          <target state="translated">同步基元</target>
        </trans-unit>
        <trans-unit id="cbba062bbc83d66b28e943658c29a28c7fa8e0a9" translate="yes" xml:space="preserve">
          <source>Synchronization between processes</source>
          <target state="translated">进程之间的同步化</target>
        </trans-unit>
        <trans-unit id="36f95c993c41614d9487682d4095effab046a2f5" translate="yes" xml:space="preserve">
          <source>Synchronization primitives</source>
          <target state="translated">同步基元</target>
        </trans-unit>
        <trans-unit id="dd9c2ef1022d2fe014d89f4287eec32c29bfe326" translate="yes" xml:space="preserve">
          <source>Synchronize and close the persistent &lt;em&gt;dict&lt;/em&gt; object. Operations on a closed shelf will fail with a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">同步并关闭持久&lt;em&gt;dict&lt;/em&gt;对象。封闭式货架上的操作将失败，并显示&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69f7b0bd705db19c171a6d38cf3af9ce071ab2f2" translate="yes" xml:space="preserve">
          <source>Synchronize the on-disk directory and data files. This method is called by the &lt;code&gt;Shelve.sync()&lt;/code&gt; method.</source>
          <target state="translated">同步磁盘上的目录和数据文件。该方法由 &lt;code&gt;Shelve.sync()&lt;/code&gt; 方法调用。</target>
        </trans-unit>
        <trans-unit id="c1f2bcf942acd2dc75db00756276387b3576d4b5" translate="yes" xml:space="preserve">
          <source>Synchronized mode. This will cause changes to the database to be immediately written to the file.</source>
          <target state="translated">同步模式。这将导致对数据库的更改立即写入文件。</target>
        </trans-unit>
        <trans-unit id="478e0859dcfcb931254a976e6eb032edd080e8e0" translate="yes" xml:space="preserve">
          <source>Synchronous idle</source>
          <target state="translated">同步空转</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="de4af2ff6c0bd31526ce7f5f8ca08783d0cc5ed7" translate="yes" xml:space="preserve">
          <source>SyntaxError</source>
          <target state="translated">SyntaxError</target>
        </trans-unit>
        <trans-unit id="239fde2b81323f82aa960faa292c8b84c09678bd" translate="yes" xml:space="preserve">
          <source>SyntaxWarning</source>
          <target state="translated">SyntaxWarning</target>
        </trans-unit>
        <trans-unit id="f99a1e0c4f99a37b7ffe012e980d6c18e08746d3" translate="yes" xml:space="preserve">
          <source>SysLogHandler</source>
          <target state="translated">SysLogHandler</target>
        </trans-unit>
        <trans-unit id="bc0792d8dc81e8aa30b987246a5ce97c40cd6833" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="translated">System</target>
        </trans-unit>
        <trans-unit id="dd32ed28eedb2fad18cd75ec03e544cf0d2ca3ec" translate="yes" xml:space="preserve">
          <source>System V file locking enforcement. This flag is shared with &lt;a href=&quot;#stat.S_ISGID&quot;&gt;&lt;code&gt;S_ISGID&lt;/code&gt;&lt;/a&gt;: file/record locking is enforced on files that do not have the group execution bit (&lt;a href=&quot;#stat.S_IXGRP&quot;&gt;&lt;code&gt;S_IXGRP&lt;/code&gt;&lt;/a&gt;) set.</source>
          <target state="translated">System V文件锁定实施。此标志与&lt;a href=&quot;#stat.S_ISGID&quot;&gt; &lt;code&gt;S_ISGID&lt;/code&gt; &lt;/a&gt;共享：在未设置组执行位（&lt;a href=&quot;#stat.S_IXGRP&quot;&gt; &lt;code&gt;S_IXGRP&lt;/code&gt; &lt;/a&gt;）的文件上强制执行文件/记录锁定。</target>
        </trans-unit>
        <trans-unit id="bd4230b8fa1e196ceea27a4c97446bbf43db362e" translate="yes" xml:space="preserve">
          <source>System which created ZIP archive.</source>
          <target state="translated">创建ZIP档案的系统。</target>
        </trans-unit>
        <trans-unit id="d5ff5bc7b647223447ff8bbcf7017bf138ec3ea5" translate="yes" xml:space="preserve">
          <source>System-wide real-time clock. Setting this clock requires appropriate privileges.</source>
          <target state="translated">全系统的实时时钟。设置此时钟需要适当的权限。</target>
        </trans-unit>
        <trans-unit id="47e68638ef3b94e3c34563e1179f97e827fb9bec" translate="yes" xml:space="preserve">
          <source>SystemError</source>
          <target state="translated">SystemError</target>
        </trans-unit>
        <trans-unit id="7cc841d8ecdbfbc0498942bb2b4d8fa89ce32a41" translate="yes" xml:space="preserve">
          <source>SystemExit</source>
          <target state="translated">SystemExit</target>
        </trans-unit>
        <trans-unit id="eb1c93ed6255e73b69cef6bc348253d7b278840c" translate="yes" xml:space="preserve">
          <source>SystemExit.code</source>
          <target state="translated">SystemExit.code</target>
        </trans-unit>
        <trans-unit id="c2c53d66948214258a26ca9ca845d7ac0c17f8e7" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="translated">T</target>
        </trans-unit>
        <trans-unit id="c8079de7f39924a818429b6bbcf89203b522e2b1" translate="yes" xml:space="preserve">
          <source>T flag</source>
          <target state="translated">T旗</target>
        </trans-unit>
        <trans-unit id="100693b0324bc7e8a80c61cdf57cf7ead8f74082" translate="yes" xml:space="preserve">
          <source>T. Dierks et. al.</source>
          <target state="translated">T.Dierks等人</target>
        </trans-unit>
        <trans-unit id="d1ffc191533bb2cbb8bf40d3119d9fe2916278fe" translate="yes" xml:space="preserve">
          <source>TCP Echo Client</source>
          <target state="translated">TCP回音客户端</target>
        </trans-unit>
        <trans-unit id="5b0877d2c21a8a83292debfb59a6c929390d3c9c" translate="yes" xml:space="preserve">
          <source>TCP Echo Server</source>
          <target state="translated">TCP回音服务器</target>
        </trans-unit>
        <trans-unit id="5ef15cad06042dc4a49f48eedea031e55b9ecf0c" translate="yes" xml:space="preserve">
          <source>TCP echo client using streams</source>
          <target state="translated">使用流的TCP echo客户端</target>
        </trans-unit>
        <trans-unit id="73bbf4f27b80ee62463e82c07b0eb7dcc7b9c6f2" translate="yes" xml:space="preserve">
          <source>TCP echo client using the &lt;a href=&quot;#asyncio.open_connection&quot;&gt;&lt;code&gt;asyncio.open_connection()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">使用&lt;a href=&quot;#asyncio.open_connection&quot;&gt; &lt;code&gt;asyncio.open_connection()&lt;/code&gt; &lt;/a&gt;函数的TCP回显客户端：</target>
        </trans-unit>
        <trans-unit id="2c08259ebc5b31cf20f523f0ca4fc480ddcb6886" translate="yes" xml:space="preserve">
          <source>TCP echo server using streams</source>
          <target state="translated">使用流的TCP回音服务器</target>
        </trans-unit>
        <trans-unit id="2f7ae8465b345c81e3dc31fb3c5cb5c918ab2831" translate="yes" xml:space="preserve">
          <source>TCP echo server using the &lt;a href=&quot;#asyncio.start_server&quot;&gt;&lt;code&gt;asyncio.start_server()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">使用&lt;a href=&quot;#asyncio.start_server&quot;&gt; &lt;code&gt;asyncio.start_server()&lt;/code&gt; &lt;/a&gt;函数的TCP回显服务器：</target>
        </trans-unit>
        <trans-unit id="7adc41db35e4460161060a3765be2f4ce053917f" translate="yes" xml:space="preserve">
          <source>TEST_PREFIX</source>
          <target state="translated">TEST_PREFIX</target>
        </trans-unit>
        <trans-unit id="6d9797f70add1e44d57484714671c7206b7319ef" translate="yes" xml:space="preserve">
          <source>TIFF Files</source>
          <target state="translated">TIFF文件</target>
        </trans-unit>
        <trans-unit id="cdeae3d22c263be0cc15f30b6b04620cb8d92ba6" translate="yes" xml:space="preserve">
          <source>TIPC related constants, matching the ones exported by the C socket API. See the TIPC documentation for more information.</source>
          <target state="translated">TIPC相关常量,与C套接字API导出的常量相匹配。更多信息请参见TIPC文档。</target>
        </trans-unit>
        <trans-unit id="0baa8888f9d0aa88c338a67431b067309925ea86" translate="yes" xml:space="preserve">
          <source>TKDocs</source>
          <target state="translated">TKDocs</target>
        </trans-unit>
        <trans-unit id="fbbfb6a7ead947e0fa27a3b7b0d471dcc4e2e9cf" translate="yes" xml:space="preserve">
          <source>TLS 1.3</source>
          <target state="translated">TLS 1.3</target>
        </trans-unit>
        <trans-unit id="49c878ba00b23828e711672cf8e175f204471d48" translate="yes" xml:space="preserve">
          <source>TLS 1.3 features like early data, deferred TLS client cert request, signature algorithm configuration, and rekeying are not supported yet.</source>
          <target state="translated">目前还不支持TLS 1.3的早期数据、延迟TLS客户端证书请求、签名算法配置和重钥等功能。</target>
        </trans-unit>
        <trans-unit id="e44a2f555a3fa72211507497bc3b16d61be51770" translate="yes" xml:space="preserve">
          <source>TLS 1.3 protocol will be available with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt; in OpenSSL &amp;gt;= 1.1.1. There is no dedicated PROTOCOL constant for just TLS 1.3.</source>
          <target state="translated">TLS 1.3协议将在OpenSSL&amp;gt; = 1.1.1中与&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;一起提供。仅TLS 1.3没有专用的PROTOCOL常数。</target>
        </trans-unit>
        <trans-unit id="300c5ad845fddb16bd752e6113d28d8e57573058" translate="yes" xml:space="preserve">
          <source>TLS 1.3 uses a disjunct set of cipher suites. All AES-GCM and ChaCha20 cipher suites are enabled by default. The method &lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt;&lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt;&lt;/a&gt; cannot enable or disable any TLS 1.3 ciphers yet, but &lt;a href=&quot;#ssl.SSLContext.get_ciphers&quot;&gt;&lt;code&gt;SSLContext.get_ciphers()&lt;/code&gt;&lt;/a&gt; returns them.</source>
          <target state="translated">TLS 1.3使用一组不同的密码套件。默认情况下，所有AES-GCM和ChaCha20密码套件都是启用的。方法&lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt; &lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt; &lt;/a&gt;尚不能启用或禁用任何TLS 1.3密码，但是&lt;a href=&quot;#ssl.SSLContext.get_ciphers&quot;&gt; &lt;code&gt;SSLContext.get_ciphers()&lt;/code&gt; 会&lt;/a&gt;返回它们。</target>
        </trans-unit>
        <trans-unit id="4c9f6c270dbdfd7c10f6e315eda01961135acc43" translate="yes" xml:space="preserve">
          <source>TLS Upgrade</source>
          <target state="translated">TLS升级</target>
        </trans-unit>
        <trans-unit id="1925fffff55dc3ab10762126722e13334b4e97f9" translate="yes" xml:space="preserve">
          <source>TOS is an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;. Call its &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method. If this yields a new value, push it on the stack (leaving the iterator below it). If the iterator indicates it is exhausted TOS is popped, and the byte code counter is incremented by &lt;em&gt;delta&lt;/em&gt;.</source>
          <target state="translated">TOS是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;。调用其&lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;方法。如果产生一个新值，则将其压入堆栈（将迭代器保留在其下方）。如果迭代器指示已用尽，则弹出TOS，并且字节码计数器增加&lt;em&gt;delta&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3af18b9e6abe66daa83601f1d6b18129b3035072" translate="yes" xml:space="preserve">
          <source>TOS is an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;. Call its &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method. If this yields a new value, push it on the stack (leaving the iterator below it). If the iterator indicates it is exhausted, TOS is popped, and the byte code counter is incremented by &lt;em&gt;delta&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6518048fef935aa22f2005310f203a44163eed2f" translate="yes" xml:space="preserve">
          <source>TOS is result of &lt;code&gt;__exit__()&lt;/code&gt; or &lt;code&gt;__aexit__()&lt;/code&gt; function call pushed by &lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt;&lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;&lt;/a&gt;. SECOND is &lt;code&gt;None&lt;/code&gt; or an exception type (pushed when an exception has been raised).</source>
          <target state="translated">TOS是 &lt;code&gt;__exit__()&lt;/code&gt; 或 &lt;code&gt;__aexit__()&lt;/code&gt; 函数调用的&lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt; &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; &lt;/a&gt;。SECOND为&amp;ldquo; &lt;code&gt;None&lt;/code&gt; 或异常类型（引发异常时按下）。</target>
        </trans-unit>
        <trans-unit id="fe06eb6459c87f0e497ce1805f076f104bfecf78" translate="yes" xml:space="preserve">
          <source>Tab</source>
          <target state="translated">Tab</target>
        </trans-unit>
        <trans-unit id="4184dd72104948d4639fb02992b945838da9b7f6" translate="yes" xml:space="preserve">
          <source>Tab Identifiers</source>
          <target state="translated">标签标识符</target>
        </trans-unit>
        <trans-unit id="ed8e6b927b4b9b1d5b371f2cbda818df4e9c2773" translate="yes" xml:space="preserve">
          <source>Tab Options</source>
          <target state="translated">标签选项</target>
        </trans-unit>
        <trans-unit id="51f3a2b97c44b6a3c489db9429828e97e0f34041" translate="yes" xml:space="preserve">
          <source>TabError</source>
          <target state="translated">TabError</target>
        </trans-unit>
        <trans-unit id="2206975a0bc82674c0da51c6c27096e7cdc13c17" translate="yes" xml:space="preserve">
          <source>Tabify Region</source>
          <target state="translated">区域标签化</target>
        </trans-unit>
        <trans-unit id="5c5654cdd4ba7e4325c694865e3aa84d89b76f3e" translate="yes" xml:space="preserve">
          <source>Tabular ListBox</source>
          <target state="translated">列表框</target>
        </trans-unit>
        <trans-unit id="15acd88369228a7f1fe88365876d812d72d0097e" translate="yes" xml:space="preserve">
          <source>Tag Options</source>
          <target state="translated">标签选项</target>
        </trans-unit>
        <trans-unit id="e301d53adc28f8dfd9375071aa503322cf99bba4" translate="yes" xml:space="preserve">
          <source>Tajik</source>
          <target state="translated">Tajik</target>
        </trans-unit>
        <trans-unit id="0f61aa9290c984334ded57f6b79fcd7a9c37e221" translate="yes" xml:space="preserve">
          <source>Take a key value &lt;em&gt;ch&lt;/em&gt;, and return &lt;code&gt;True&lt;/code&gt; if the current terminal type recognizes a key with that value.</source>
          <target state="translated">取一个键值&lt;em&gt;ch&lt;/em&gt;，如果当前终端类型识别出具有该值的键，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1bf82aa7514021d06d60729000a11f5c6462fa9" translate="yes" xml:space="preserve">
          <source>Take a snapshot of traces of memory blocks allocated by Python. Return a new &lt;a href=&quot;#tracemalloc.Snapshot&quot;&gt;&lt;code&gt;Snapshot&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">拍摄由Python分配的内存块的痕迹快照。返回一个新的&lt;a href=&quot;#tracemalloc.Snapshot&quot;&gt; &lt;code&gt;Snapshot&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="5b3da8de64c814d9b3266a7876910cf8fa78ebd3" translate="yes" xml:space="preserve">
          <source>Take two (non complex) numbers as arguments and return a pair of numbers consisting of their quotient and remainder when using integer division. With mixed operand types, the rules for binary arithmetic operators apply. For integers, the result is the same as &lt;code&gt;(a // b, a % b)&lt;/code&gt;. For floating point numbers the result is &lt;code&gt;(q, a % b)&lt;/code&gt;, where &lt;em&gt;q&lt;/em&gt; is usually &lt;code&gt;math.floor(a /
b)&lt;/code&gt; but may be 1 less than that. In any case &lt;code&gt;q * b + a % b&lt;/code&gt; is very close to &lt;em&gt;a&lt;/em&gt;, if &lt;code&gt;a % b&lt;/code&gt; is non-zero it has the same sign as &lt;em&gt;b&lt;/em&gt;, and &lt;code&gt;0
&amp;lt;= abs(a % b) &amp;lt; abs(b)&lt;/code&gt;.</source>
          <target state="translated">使用两个（非复数）数字作为参数，并在使用整数除法时返回一对包含其商和余数的数字。对于混合操作数类型，适用于二进制算术运算符的规则。对于整数，结果与 &lt;code&gt;(a // b, a % b)&lt;/code&gt; 。对于浮点数，结果为 &lt;code&gt;(q, a % b)&lt;/code&gt; ，其中&lt;em&gt;q&lt;/em&gt;通常为 &lt;code&gt;math.floor(a / b)&lt;/code&gt; 但可能比其小1。在任何情况下， &lt;code&gt;q * b + a % b&lt;/code&gt; 都非常接近&lt;em&gt;a&lt;/em&gt;，如果 &lt;code&gt;a % b&lt;/code&gt; 不为零，则它的符号与&lt;em&gt;b&lt;/em&gt;相同，并且 &lt;code&gt;0 &amp;lt;= abs(a % b) &amp;lt; abs(b)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b550fa31fa155f09d009498f80c69ed7a5f7214" translate="yes" xml:space="preserve">
          <source>Take two snapshots and display the differences:</source>
          <target state="translated">拍摄两张快照,并显示其差异。</target>
        </trans-unit>
        <trans-unit id="7ef7f5d9e4af8c0c66f8e8f30af4e07e8b357199" translate="yes" xml:space="preserve">
          <source>Takes a descriptor and returns whenever there is data available to read</source>
          <target state="translated">取一个描述符,只要有数据可读就返回。</target>
        </trans-unit>
        <trans-unit id="29dd968868abb9574902a11a99e959b2c749985b" translate="yes" xml:space="preserve">
          <source>Takes a descriptor and returns whenever there is data available to write</source>
          <target state="translated">取一个描述符,并在有数据可写时返回。</target>
        </trans-unit>
        <trans-unit id="f364904f9bca83617ee18d0f66b705bf631e1470" translate="yes" xml:space="preserve">
          <source>Takes a producer object and adds it to the producer queue associated with the channel. When all currently-pushed producers have been exhausted the channel will consume this producer&amp;rsquo;s data by calling its &lt;code&gt;more()&lt;/code&gt; method and send the data to the remote endpoint.</source>
          <target state="translated">获取生产者对象，并将其添加到与通道关联的生产者队列中。当所有当前推送的生产者都用尽后，通道将通过调用其 &lt;code&gt;more()&lt;/code&gt; 方法使用该生产者的数据，并将数据发送到远程端点。</target>
        </trans-unit>
        <trans-unit id="ff928e238afcf6f2cd7cd54fb1287dd9d8cf9798" translate="yes" xml:space="preserve">
          <source>Takes an instance &lt;code&gt;sock&lt;/code&gt; of &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt;, and returns an instance of &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;, a subtype of &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt;, which wraps the underlying socket in an SSL context. &lt;code&gt;sock&lt;/code&gt; must be a &lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt;&lt;code&gt;SOCK_STREAM&lt;/code&gt;&lt;/a&gt; socket; other socket types are unsupported.</source>
          <target state="translated">采用实例 &lt;code&gt;sock&lt;/code&gt; 的&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt;，并返回一个实例&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;，的子类型&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt;，它包装在SSL上下文底层套接字。 &lt;code&gt;sock&lt;/code&gt; 必须是&lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt; &lt;code&gt;SOCK_STREAM&lt;/code&gt; &lt;/a&gt;套接字；其他套接字类型不受支持。</target>
        </trans-unit>
        <trans-unit id="34d6d23eb55d67c76ef90341b26b6e54587f6d13" translate="yes" xml:space="preserve">
          <source>Takes an optional &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;fp&lt;/em&gt;, which is ignored by the base class. Initializes &amp;ldquo;protected&amp;rdquo; instance variables &lt;em&gt;_info&lt;/em&gt; and &lt;em&gt;_charset&lt;/em&gt; which are set by derived classes, as well as &lt;em&gt;_fallback&lt;/em&gt;, which is set through &lt;a href=&quot;#gettext.NullTranslations.add_fallback&quot;&gt;&lt;code&gt;add_fallback()&lt;/code&gt;&lt;/a&gt;. It then calls &lt;code&gt;self._parse(fp)&lt;/code&gt; if &lt;em&gt;fp&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">接受一个可选&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;&lt;em&gt;fp&lt;/em&gt;，基类将忽略它。初始化&amp;ldquo;受保护&amp;rdquo;的实例变量&lt;em&gt;_info&lt;/em&gt;和&lt;em&gt;_CHARSET&lt;/em&gt;其由派生类，以及设置&lt;em&gt;_fallback&lt;/em&gt;，这是通过设置&lt;a href=&quot;#gettext.NullTranslations.add_fallback&quot;&gt; &lt;code&gt;add_fallback()&lt;/code&gt; &lt;/a&gt;。然后，如果&lt;em&gt;fp&lt;/em&gt;不为 &lt;code&gt;None&lt;/code&gt; ,它将调用 &lt;code&gt;self._parse(fp)&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa2ec9d141430590eac4475e47c564bd7a00c2ed" translate="yes" xml:space="preserve">
          <source>Takes an optional &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;fp&lt;/em&gt;, which is ignored by the base class. Initializes &amp;ldquo;protected&amp;rdquo; instance variables &lt;em&gt;_info&lt;/em&gt; and &lt;em&gt;_charset&lt;/em&gt; which are set by derived classes, as well as &lt;em&gt;_fallback&lt;/em&gt;, which is set through &lt;a href=&quot;#gettext.NullTranslations.add_fallback&quot;&gt;&lt;code&gt;add_fallback()&lt;/code&gt;&lt;/a&gt;. It then calls &lt;code&gt;self._parse(fp)&lt;/code&gt; if &lt;em&gt;fp&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4636270f85b3fbf49ec462c18c732c12489509" translate="yes" xml:space="preserve">
          <source>Takes no action.</source>
          <target state="translated">不采取任何行动。</target>
        </trans-unit>
        <trans-unit id="d44c8bec65a784d54741226d3313e62820c0d3c0" translate="yes" xml:space="preserve">
          <source>Takes the logging configuration from a dictionary. The contents of this dictionary are described in &lt;a href=&quot;#logging-config-dictschema&quot;&gt;Configuration dictionary schema&lt;/a&gt; below.</source>
          <target state="translated">从字典中获取日志记录配置。该字典的内容在下面的&lt;a href=&quot;#logging-config-dictschema&quot;&gt;配置字典架构&lt;/a&gt;中描述。</target>
        </trans-unit>
        <trans-unit id="0b24523566c5e88f7857c12583bae9db24b5f7ff" translate="yes" xml:space="preserve">
          <source>TarFile Objects</source>
          <target state="translated">焦油文件对象</target>
        </trans-unit>
        <trans-unit id="338ec1e68af6f6ecd45d04f6ae39977241f13226" translate="yes" xml:space="preserve">
          <source>TarInfo Objects</source>
          <target state="translated">TarInfo对象</target>
        </trans-unit>
        <trans-unit id="11a0148189b37caf31d6b3aa8f6ed2315bdbba18" translate="yes" xml:space="preserve">
          <source>Target widget should have a callable &lt;em&gt;dnd_accept&lt;/em&gt; attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df740b79240b1ed7d5039a52848bff953794ae64" translate="yes" xml:space="preserve">
          <source>Task Object</source>
          <target state="translated">任务对象</target>
        </trans-unit>
        <trans-unit id="76ff5d606073755c34a850d78d36a327964fe96b" translate="yes" xml:space="preserve">
          <source>Task object.</source>
          <target state="translated">任务对象。</target>
        </trans-unit>
        <trans-unit id="090ec5f560fc50377fcd95e5cda128e91b276e98" translate="yes" xml:space="preserve">
          <source>Tasks</source>
          <target state="translated">Tasks</target>
        </trans-unit>
        <trans-unit id="b518979fdc61af5116b8c56f428e81decb342dd2" translate="yes" xml:space="preserve">
          <source>Tasks and Futures</source>
          <target state="translated">任务和未来</target>
        </trans-unit>
        <trans-unit id="c06119a570c94693c9d4d0837718d89596fcbf13" translate="yes" xml:space="preserve">
          <source>Tasks are used to run coroutines in event loops. If a coroutine awaits on a Future, the Task suspends the execution of the coroutine and waits for the completion of the Future. When the Future is &lt;em&gt;done&lt;/em&gt;, the execution of the wrapped coroutine resumes.</source>
          <target state="translated">任务用于在事件循环中运行协程。如果协程等待Future，则Task会暂停协程的执行并等待Future的完成。&lt;em&gt;完成&lt;/em&gt; Future &lt;em&gt;后&lt;/em&gt;，将继续执行包装的协程。</target>
        </trans-unit>
        <trans-unit id="7ad2539642036f28e8b61b0f9b6d99c5a5830bd2" translate="yes" xml:space="preserve">
          <source>Tasks awaiting on &lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; will now block until the &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; method is called again.</source>
          <target state="translated">现在，&lt;a href=&quot;asyncio-task#asyncio.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;任务将阻塞，直到再次调用&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="81a5cbff1d85f3a27872443b815bea858276d844" translate="yes" xml:space="preserve">
          <source>Tasks support the &lt;a href=&quot;contextvars#module-contextvars&quot;&gt;&lt;code&gt;contextvars&lt;/code&gt;&lt;/a&gt; module. When a Task is created it copies the current context and later runs its coroutine in the copied context.</source>
          <target state="translated">任务支持&lt;a href=&quot;contextvars#module-contextvars&quot;&gt; &lt;code&gt;contextvars&lt;/code&gt; &lt;/a&gt;模块。创建Task时，它将复制当前上下文，然后在复制的上下文中运行其协程。</target>
        </trans-unit>
        <trans-unit id="c851c0b9d4006555fe7f3404359f227c45d9d618" translate="yes" xml:space="preserve">
          <source>Tcl and the Tk Toolkit</source>
          <target state="translated">Tcl和Tk工具包</target>
        </trans-unit>
        <trans-unit id="43a5e042b92461e70adb58a52473afadf173f803" translate="yes" xml:space="preserve">
          <source>Tcl&amp;rsquo;2004 conference presentation</source>
          <target state="translated">Tcl'2004会议演讲</target>
        </trans-unit>
        <trans-unit id="4ad4a8a864c413b47f4e059d9acf57f436c5a7c4" translate="yes" xml:space="preserve">
          <source>Tcl/Tk documentation:</source>
          <target state="translated">Tcl/Tk文档。</target>
        </trans-unit>
        <trans-unit id="a3403aac734e1750dc5ff0e3802a01f145f5a272" translate="yes" xml:space="preserve">
          <source>Tcl/Tk recent man pages</source>
          <target state="translated">Tcl/Tk最近的手册页</target>
        </trans-unit>
        <trans-unit id="d158527ef8c2142b4c46d702046ebf260285bd9e" translate="yes" xml:space="preserve">
          <source>Technical Detail</source>
          <target state="translated">技术细节</target>
        </trans-unit>
        <trans-unit id="890583134228deddb9c13839e7e15324d5907367" translate="yes" xml:space="preserve">
          <source>Technically, the returned distribution metadata object is an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;email.message.EmailMessage&lt;/code&gt;&lt;/a&gt; instance, but this is an implementation detail, and not part of the stable API. You should only use dictionary-like methods and syntax to access the metadata contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa834a46f3cebd900ddb52e6657f6cf355273c46" translate="yes" xml:space="preserve">
          <source>Technically, the returned distribution metadata object is an &lt;a href=&quot;https://docs.python.org/3/library/email.message.html#email.message.EmailMessage&quot;&gt;email.message.Message&lt;/a&gt; instance, but this is an implementation detail, and not part of the stable API. You should only use dictionary-like methods and syntax to access the metadata contents.</source>
          <target state="translated">从技术上讲，返回的分发元数据对象是&lt;a href=&quot;https://docs.python.org/3/library/email.message.html#email.message.EmailMessage&quot;&gt;email.message.Message&lt;/a&gt;实例，但这是实现的详细信息，而不是稳定API的一部分。您仅应使用类似于字典的方法和语法来访问元数据内容。</target>
        </trans-unit>
        <trans-unit id="3ea0075bea730eec77b806506f32f0d381fcc64b" translate="yes" xml:space="preserve">
          <source>Tell Turtle&amp;rsquo;s state</source>
          <target state="translated">告诉龟的状态</target>
        </trans-unit>
        <trans-unit id="57c9fa98eae32bb5e5b49439a7536aa770d066a7" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt;&lt;code&gt;serve_forever()&lt;/code&gt;&lt;/a&gt; loop to stop and wait until it does.</source>
          <target state="translated">告诉&lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt; &lt;code&gt;serve_forever()&lt;/code&gt; &lt;/a&gt;循环停止并等待直到它停止。</target>
        </trans-unit>
        <trans-unit id="e0271ed11e13913e66d8fc7ecef8a3ecb6dd645b" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt;&lt;code&gt;serve_forever()&lt;/code&gt;&lt;/a&gt; loop to stop and wait until it does. &lt;a href=&quot;#socketserver.BaseServer.shutdown&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt; must be called while &lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt;&lt;code&gt;serve_forever()&lt;/code&gt;&lt;/a&gt; is running in a different thread otherwise it will deadlock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d6d31710ade58855c0e0dc2e38de65e346cb3d" translate="yes" xml:space="preserve">
          <source>Tell the driver that there is likely to be a pause in the output, making it possible for the device to handle the pause more intelligently. You might use this after playing a spot sound effect, before waiting for user input, or before doing disk I/O.</source>
          <target state="translated">告诉驱动,输出中可能会有一个暂停,使设备能够更智能地处理暂停。你可以在播放一个点声效果后、等待用户输入前或进行磁盘I/O前使用这个功能。</target>
        </trans-unit>
        <trans-unit id="979f0c58a42b6ec68148003150326a19672c0c06" translate="yes" xml:space="preserve">
          <source>Tells the logging system to use the class &lt;em&gt;klass&lt;/em&gt; when instantiating a logger. The class should define &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; such that only a name argument is required, and the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; should call &lt;code&gt;Logger.__init__()&lt;/code&gt;. This function is typically called before any loggers are instantiated by applications which need to use custom logger behavior. After this call, as at any other time, do not instantiate loggers directly using the subclass: continue to use the &lt;a href=&quot;#logging.getLogger&quot;&gt;&lt;code&gt;logging.getLogger()&lt;/code&gt;&lt;/a&gt; API to get your loggers.</source>
          <target state="translated">告诉日志记录系统在实例化记录器时使用类&lt;em&gt;klass&lt;/em&gt;。该类应定义&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;，以便仅需要一个名称参数，而&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;应调用 &lt;code&gt;Logger.__init__()&lt;/code&gt; 。通常在需要使用自定义记录器行为的应用程序实例化任何记录器之前，会调用此函数。在此调用之后，就像在其他任何时间一样，请勿直接使用子类实例化记录器：继续使用&lt;a href=&quot;#logging.getLogger&quot;&gt; &lt;code&gt;logging.getLogger()&lt;/code&gt; &lt;/a&gt; API来获取记录器。</target>
        </trans-unit>
        <trans-unit id="bf38605bcb0c67c59a46c57f0384170825507ab3" translate="yes" xml:space="preserve">
          <source>Tells the logging system to use the class &lt;em&gt;klass&lt;/em&gt; when instantiating a logger. The class should define &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; such that only a name argument is required, and the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; should call &lt;code&gt;Logger.__init__()&lt;/code&gt;. This function is typically called before any loggers are instantiated by applications which need to use custom logger behavior. After this call, as at any other time, do not instantiate loggers directly using the subclass: continue to use the &lt;a href=&quot;#logging.getLogger&quot;&gt;&lt;code&gt;logging.getLogger()&lt;/code&gt;&lt;/a&gt; API to get your loggers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee4ea885f6bcb046b3f3aa350eedc6e6efae427" translate="yes" xml:space="preserve">
          <source>Telnet Example</source>
          <target state="translated">Telnet示例</target>
        </trans-unit>
        <trans-unit id="986434a39af28397b35384c75e8a00e8ea6b0648" translate="yes" xml:space="preserve">
          <source>Telnet Objects</source>
          <target state="translated">Telnet对象</target>
        </trans-unit>
        <trans-unit id="78c16f64ddfd962c1a4af200be96953360f3c35a" translate="yes" xml:space="preserve">
          <source>Template Objects</source>
          <target state="translated">模板对象</target>
        </trans-unit>
        <trans-unit id="e3efa6f36d852abc780df7bdacccc378b52ac40e" translate="yes" xml:space="preserve">
          <source>Template objects following methods:</source>
          <target state="translated">模板对象以下方法。</target>
        </trans-unit>
        <trans-unit id="dc68610743d7021a571f80b8ceb084cbd65c3e6a" translate="yes" xml:space="preserve">
          <source>Template strings</source>
          <target state="translated">模板字符串</target>
        </trans-unit>
        <trans-unit id="5a89087fcb3dbd31fb0209ea648ced885e6487d2" translate="yes" xml:space="preserve">
          <source>Template strings provide simpler string substitutions as described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0292&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 292&lt;/strong&gt;&lt;/a&gt;. A primary use case for template strings is for internationalization (i18n) since in that context, the simpler syntax and functionality makes it easier to translate than other built-in string formatting facilities in Python. As an example of a library built on template strings for i18n, see the &lt;a href=&quot;http://flufli18n.readthedocs.io/en/latest/&quot;&gt;flufl.i18n&lt;/a&gt; package.</source>
          <target state="translated">如&lt;a href=&quot;https://www.python.org/dev/peps/pep-0292&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 292中&lt;/strong&gt;&lt;/a&gt;所述，模板字符串提供了更简单的字符串替换。模板字符串的主要用例是国际化（i18n），因为在这种情况下，比起Python中的其他内置字符串格式设置功能，更简单的语法和功能使翻译更加容易。作为基于i18n的模板字符串构建的库的示例，请参见&lt;a href=&quot;http://flufli18n.readthedocs.io/en/latest/&quot;&gt;flufl.i18n&lt;/a&gt;软件包。</target>
        </trans-unit>
        <trans-unit id="8a9deb261f9b2f4d0f7eded9969ecdd7d5833596" translate="yes" xml:space="preserve">
          <source>Template strings support &lt;code&gt;$&lt;/code&gt;-based substitutions, using the following rules:</source>
          <target state="translated">模板字符串使用以下规则支持基于 &lt;code&gt;$&lt;/code&gt; 的替换：</target>
        </trans-unit>
        <trans-unit id="0947e54aa814a89db0132f2a3a8abba379ef8ac5" translate="yes" xml:space="preserve">
          <source>Temporarily Suppressing Warnings</source>
          <target state="translated">暂时压制警告</target>
        </trans-unit>
        <trans-unit id="fb0de27eea1e97b394b820d91ec3fc9180ea1196" translate="yes" xml:space="preserve">
          <source>Temporarily set the environment variable &lt;code&gt;envvar&lt;/code&gt; to the value of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">将环境变量 &lt;code&gt;envvar&lt;/code&gt; 临时设置为value的 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c6165ec5ae55f10e836365e531adb4499b9792f" translate="yes" xml:space="preserve">
          <source>Temporarily sets the current theme to &lt;em&gt;themename&lt;/em&gt;, apply specified &lt;em&gt;settings&lt;/em&gt; and then restore the previous theme.</source>
          <target state="translated">暂时将当前主题&lt;em&gt;设置&lt;/em&gt;为&lt;em&gt;themename&lt;/em&gt;，应用指定的&lt;em&gt;设置&lt;/em&gt;，然后还原之前的主题。</target>
        </trans-unit>
        <trans-unit id="f9891b3e90ff69ceb72b7031cf9b6011e339fc99" translate="yes" xml:space="preserve">
          <source>Temporarily unset the environment variable &lt;code&gt;envvar&lt;/code&gt;.</source>
          <target state="translated">暂时取消设置环境变量 &lt;code&gt;envvar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69631d1cc986e660695cb30ca0598a3183aa39ab" translate="yes" xml:space="preserve">
          <source>Temporary breakpoint, which is removed automatically when it is first hit. The arguments are the same as for &lt;a href=&quot;#pdbcommand-break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">临时断点，在第一次命中时会自动删除。参数与&lt;a href=&quot;#pdbcommand-break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="714a4b8e0ad4f7e2f284e3700b61738448e85029" translate="yes" xml:space="preserve">
          <source>Terminal elements are represented in much the same way, but without any child elements and the addition of the source text which was identified. The example of the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; keyword above is representative. The various types of terminal symbols are defined in the C header file &lt;code&gt;Include/token.h&lt;/code&gt; and the Python module &lt;a href=&quot;token#module-token&quot;&gt;&lt;code&gt;token&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">终端元素的表示方式几乎相同，但是没有任何子元素，并且没有添加已标识的源文本。上面的&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#if&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt;关键字的示例具有代表性。在C头文件 &lt;code&gt;Include/token.h&lt;/code&gt; 和Python模块&lt;a href=&quot;token#module-token&quot;&gt; &lt;code&gt;token&lt;/code&gt; &lt;/a&gt;中定义了各种类型的终端符号。</target>
        </trans-unit>
        <trans-unit id="7d9cdf754ae3c0d6a8f969292e495f3608d60aff" translate="yes" xml:space="preserve">
          <source>Terminal elements are represented in much the same way, but without any child elements and the addition of the source text which was identified. The example of the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; keyword above is representative. The various types of terminal symbols are defined in the C header file &lt;code&gt;Include/token.h&lt;/code&gt; and the Python module &lt;a href=&quot;token#module-token&quot;&gt;&lt;code&gt;token&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5954e9ee331c9765fcb2626ab0eea8827305bb" translate="yes" xml:space="preserve">
          <source>Terminal resize event</source>
          <target state="translated">终端调整大小事件</target>
        </trans-unit>
        <trans-unit id="072eb39d82843db4dd7fa61737a180b6aeb46526" translate="yes" xml:space="preserve">
          <source>Terminate if the window is 1 line, otherwise insert newline.</source>
          <target state="translated">如果窗口为1行,则终止,否则插入新行。</target>
        </trans-unit>
        <trans-unit id="fd033bc9a5266b01e8d52bb455c0d01450f65fe0" translate="yes" xml:space="preserve">
          <source>Terminate the SMTP session and close the connection. Return the result of the SMTP &lt;code&gt;QUIT&lt;/code&gt; command.</source>
          <target state="translated">终止SMTP会话并关闭连接。返回SMTP &lt;code&gt;QUIT&lt;/code&gt; 命令的结果。</target>
        </trans-unit>
        <trans-unit id="56021beb31597eb1df8180161a2353ef1babbdef" translate="yes" xml:space="preserve">
          <source>Terminate the process. On Unix this is done using the &lt;code&gt;SIGTERM&lt;/code&gt; signal; on Windows &lt;code&gt;TerminateProcess()&lt;/code&gt; is used. Note that exit handlers and finally clauses, etc., will not be executed.</source>
          <target state="translated">终止过程。在Unix上，这是使用 &lt;code&gt;SIGTERM&lt;/code&gt; 信号完成的。在Windows上使用 &lt;code&gt;TerminateProcess()&lt;/code&gt; 。注意，退出处理程序和finally子句等将不会执行。</target>
        </trans-unit>
        <trans-unit id="180e106003e06373ecda6bf07c34be4f01515a40" translate="yes" xml:space="preserve">
          <source>Terminate, returning the window contents.</source>
          <target state="translated">终止,返回窗口内容。</target>
        </trans-unit>
        <trans-unit id="573640e028ca71d2e1a5f91f98a1da47339051c3" translate="yes" xml:space="preserve">
          <source>Terminates a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause. The interpreter recalls whether the exception has to be re-raised or execution has to be continued depending on the value of TOS.</source>
          <target state="translated">终止&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;子句。解释器回忆根据TOS的值，是否必须重新引发异常或必须继续执行异常。</target>
        </trans-unit>
        <trans-unit id="a6f331fdf9d1e91ec6c3749198d30191ebd4b47c" translate="yes" xml:space="preserve">
          <source>Terminates an &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-for&quot;&gt;&lt;code&gt;async for&lt;/code&gt;&lt;/a&gt; loop. Handles an exception raised when awaiting a next item. If TOS is &lt;a href=&quot;exceptions#StopAsyncIteration&quot;&gt;&lt;code&gt;StopAsyncIteration&lt;/code&gt;&lt;/a&gt; pop 7 values from the stack and restore the exception state using the second three of them. Otherwise re-raise the exception using the three values from the stack. An exception handler block is removed from the block stack.</source>
          <target state="translated">终止&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-for&quot;&gt; &lt;code&gt;async for&lt;/code&gt; &lt;/a&gt;循环。处理在等待下一个项目时引发的异常。如果TOS为&lt;a href=&quot;exceptions#StopAsyncIteration&quot;&gt; &lt;code&gt;StopAsyncIteration&lt;/code&gt; ,&lt;/a&gt;则从堆栈中弹出7个值，并使用后三个值恢复异常状态。否则，使用堆栈中的三个值重新引发异常。从块堆栈中删除了异常处理程序块。</target>
        </trans-unit>
        <trans-unit id="bfb672c84d1c8483fd88c1757af73e423e15e5be" translate="yes" xml:space="preserve">
          <source>Terminates an &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-for&quot;&gt;&lt;code&gt;async for&lt;/code&gt;&lt;/a&gt; loop. Handles an exception raised when awaiting a next item. If TOS is &lt;a href=&quot;exceptions#StopAsyncIteration&quot;&gt;&lt;code&gt;StopAsyncIteration&lt;/code&gt;&lt;/a&gt; pop 7 values from the stack and restore the exception state using the second three of them. Otherwise re-raise the exception using the three values from the stack. An exception handler block is removed from the block stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7a9199274caf054d5d670bf891c1bcd8f8cb14" translate="yes" xml:space="preserve">
          <source>Termination signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a0877f18348cf0be96e625fedb6746aeee4fd0" translate="yes" xml:space="preserve">
          <source>Test &lt;em&gt;x&lt;/em&gt; for membership in &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">测试&lt;em&gt;x&lt;/em&gt;作为&lt;em&gt;s的&lt;/em&gt;成员资格。</target>
        </trans-unit>
        <trans-unit id="5463ef35f9a17bd79bc9011c028c2e5fc9f65e5f" translate="yes" xml:space="preserve">
          <source>Test &lt;em&gt;x&lt;/em&gt; for non-membership in &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="translated">在&lt;em&gt;s中&lt;/em&gt;测试&lt;em&gt;x&lt;/em&gt;是否具有非成员身份。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb6fdd2e9dab95cad6f2778f0163bd3ef28d1d0e" translate="yes" xml:space="preserve">
          <source>Test Discovery</source>
          <target state="translated">测试发现</target>
        </trans-unit>
        <trans-unit id="ab7ed7054249cf37446be8e0a0b5203982c7e901" translate="yes" xml:space="preserve">
          <source>Test Driven Development</source>
          <target state="translated">测试驱动开发</target>
        </trans-unit>
        <trans-unit id="5bdbfab66783753cdeb866267c3e01eab16087f3" translate="yes" xml:space="preserve">
          <source>Test cases</source>
          <target state="translated">测试案例</target>
        </trans-unit>
        <trans-unit id="f786dd8c58ee071092250227304be11a0ce508ee" translate="yes" xml:space="preserve">
          <source>Test code should be modified much less frequently than the code it tests.</source>
          <target state="translated">测试代码的修改频率应该比它所测试的代码低很多。</target>
        </trans-unit>
        <trans-unit id="b3c54db43b5f25ef6cbe415cd8d28c97adca5c02" translate="yes" xml:space="preserve">
          <source>Test discovery is implemented in &lt;a href=&quot;#unittest.TestLoader.discover&quot;&gt;&lt;code&gt;TestLoader.discover()&lt;/code&gt;&lt;/a&gt;, but can also be used from the command line. The basic command-line usage is:</source>
          <target state="translated">测试发现是在&lt;a href=&quot;#unittest.TestLoader.discover&quot;&gt; &lt;code&gt;TestLoader.discover()&lt;/code&gt; 中实现的&lt;/a&gt;，但也可以从命令行使用它。基本的命令行用法是：</target>
        </trans-unit>
        <trans-unit id="ae6fc69df923b84e706cb7874cf768d1ea87acab" translate="yes" xml:space="preserve">
          <source>Test discovery loads tests by importing them. Once test discovery has found all the test files from the start directory you specify it turns the paths into package names to import. For example &lt;code&gt;foo/bar/baz.py&lt;/code&gt; will be imported as &lt;code&gt;foo.bar.baz&lt;/code&gt;.</source>
          <target state="translated">测试发现通过导入来加载测试。一旦测试发现从开始目录中找到所有测试文件，您就可以指定将路径转换为要导入的程序包名称。例如 &lt;code&gt;foo/bar/baz.py&lt;/code&gt; 将作为 &lt;code&gt;foo.bar.baz&lt;/code&gt; 导入。</target>
        </trans-unit>
        <trans-unit id="ac2618574421564be2711f0c9df7d88b7cb3369f" translate="yes" xml:space="preserve">
          <source>Test examples associated with object &lt;em&gt;f&lt;/em&gt;; for example, &lt;em&gt;f&lt;/em&gt; may be a string, a module, a function, or a class object.</source>
          <target state="translated">与对象&lt;em&gt;f&lt;/em&gt;相关的测试示例；例如，&lt;em&gt;f&lt;/em&gt;可以是字符串，模块，函数或类对象。</target>
        </trans-unit>
        <trans-unit id="3fd9094d262fa8bc19984e455b37cda962b9dd52" translate="yes" xml:space="preserve">
          <source>Test examples in docstrings in functions and classes reachable from module &lt;em&gt;m&lt;/em&gt; (or module &lt;a href=&quot;__main__#module-__main__&quot;&gt;&lt;code&gt;__main__&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;m&lt;/em&gt; is not supplied or is &lt;code&gt;None&lt;/code&gt;), starting with &lt;code&gt;m.__doc__&lt;/code&gt;.</source>
          <target state="translated">在函数和类文档字符串试验例从模块可达&lt;em&gt;米&lt;/em&gt;（或模块&lt;a href=&quot;__main__#module-__main__&quot;&gt; &lt;code&gt;__main__&lt;/code&gt; &lt;/a&gt;如果&lt;em&gt;米&lt;/em&gt;不供给或 &lt;code&gt;None&lt;/code&gt; ），从 &lt;code&gt;m.__doc__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8e11e0daab30f5e8535ab9421c43ae03c6ece4e" translate="yes" xml:space="preserve">
          <source>Test examples in the file named &lt;em&gt;filename&lt;/em&gt;. Return &lt;code&gt;(failure_count,
test_count)&lt;/code&gt;.</source>
          <target state="translated">在名为&lt;em&gt;filename&lt;/em&gt;的文件中测试示例。返回 &lt;code&gt;(failure_count, test_count)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fdc88bc9bdb7b33c186720ef5c4e0fd14d158bb" translate="yes" xml:space="preserve">
          <source>Test for syntax errors in &lt;em&gt;statement&lt;/em&gt; by attempting to compile &lt;em&gt;statement&lt;/em&gt;. &lt;em&gt;testcase&lt;/em&gt; is the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; instance for the test. &lt;em&gt;errtext&lt;/em&gt; is the regular expression which should match the string representation of the raised &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;lineno&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, compares to the line of the exception. If &lt;em&gt;offset&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, compares to the offset of the exception.</source>
          <target state="translated">通过尝试编译&lt;em&gt;statement&lt;/em&gt;来测试&lt;em&gt;statement中&lt;/em&gt;的语法错误。&lt;em&gt;测试用例&lt;/em&gt;是&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;的测试实例。&lt;em&gt;errtext&lt;/em&gt;是正则表达式，应与引发的&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;的字符串表示形式匹配。如果&lt;em&gt;lineno&lt;/em&gt;不为 &lt;code&gt;None&lt;/code&gt; ，则与异常的行进行比较。如果&lt;em&gt;offset&lt;/em&gt;不为 &lt;code&gt;None&lt;/code&gt; ，则与异常的偏移量进行比较。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4235725b64e90a6f1d7737e25022f2edd399fe5" translate="yes" xml:space="preserve">
          <source>Test for syntax warning in &lt;em&gt;statement&lt;/em&gt; by attempting to compile &lt;em&gt;statement&lt;/em&gt;. Test also that the &lt;a href=&quot;exceptions#SyntaxWarning&quot;&gt;&lt;code&gt;SyntaxWarning&lt;/code&gt;&lt;/a&gt; is emitted only once, and that it will be converted to a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; when turned into error. &lt;em&gt;testcase&lt;/em&gt; is the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; instance for the test. &lt;em&gt;errtext&lt;/em&gt; is the regular expression which should match the string representation of the emitted &lt;a href=&quot;exceptions#SyntaxWarning&quot;&gt;&lt;code&gt;SyntaxWarning&lt;/code&gt;&lt;/a&gt; and raised &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;lineno&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, compares to the line of the warning and exception. If &lt;em&gt;offset&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, compares to the offset of the exception.</source>
          <target state="translated">通过尝试编译&lt;em&gt;statement&lt;/em&gt;来测试&lt;em&gt;语句中&lt;/em&gt;的语法警告。还测试一下&lt;a href=&quot;exceptions#SyntaxWarning&quot;&gt; &lt;code&gt;SyntaxWarning&lt;/code&gt; &lt;/a&gt;仅发出一次，并在转换为错误时将其转换为&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;测试用例&lt;/em&gt;是&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;的测试实例。&lt;em&gt;errtext&lt;/em&gt;是正则表达式，应与发出的&lt;a href=&quot;exceptions#SyntaxWarning&quot;&gt; &lt;code&gt;SyntaxWarning&lt;/code&gt; &lt;/a&gt;和引发的&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;的字符串表示形式匹配。如果&lt;em&gt;lineno&lt;/em&gt;不为 &lt;code&gt;None&lt;/code&gt; ，则与警告和异常的行进行比较。如果&lt;em&gt;offset&lt;/em&gt;不为 &lt;code&gt;None&lt;/code&gt; &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;，与异常的偏移量进行比较。</target>
        </trans-unit>
        <trans-unit id="e8e482572a6e2a0b7cec6b7a36589209058e88d1" translate="yes" xml:space="preserve">
          <source>Test modules and packages can customize test loading and discovery by through the &lt;a href=&quot;#load-tests-protocol&quot;&gt;load_tests protocol&lt;/a&gt;.</source>
          <target state="translated">测试模块和软件包可以通过&lt;a href=&quot;#load-tests-protocol&quot;&gt;load_tests协议&lt;/a&gt;来自定义测试的加载和发现。</target>
        </trans-unit>
        <trans-unit id="1fe477cac5445537b9dc7ac19f68f459535df4a3" translate="yes" xml:space="preserve">
          <source>Test modules can be specified by file path as well:</source>
          <target state="translated">测试模块也可以通过文件路径来指定。</target>
        </trans-unit>
        <trans-unit id="51c68a35f2582d9e248723342ef0b4d3c4ab9a13" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;expr&lt;/em&gt; is (or is not) &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">测试&lt;em&gt;expr&lt;/em&gt;是（或不是） &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09baf90b22e7f8fe91854aa6e1a470a4312b5398" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;expr&lt;/em&gt; is true (or false).</source>
          <target state="translated">测试&lt;em&gt;expr&lt;/em&gt;为true（或false）。</target>
        </trans-unit>
        <trans-unit id="3736830b5e038d416279e9e6f5c58bc4301451f3" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; are approximately (or not approximately) equal by computing the difference, rounding to the given number of decimal &lt;em&gt;places&lt;/em&gt; (default 7), and comparing to zero. Note that these methods round the values to the given number of &lt;em&gt;decimal places&lt;/em&gt; (i.e. like the &lt;a href=&quot;functions#round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt; function) and not &lt;em&gt;significant digits&lt;/em&gt;.</source>
          <target state="translated">测试&lt;em&gt;第一&lt;/em&gt;和&lt;em&gt;第二&lt;/em&gt;近似（或不近似）通过计算差，舍入到给定数目的小数等于&lt;em&gt;地方&lt;/em&gt;（默认7），并与零进行比较。请注意，这些方法将值四舍五入到给定的&lt;em&gt;小数位数&lt;/em&gt;（例如&lt;a href=&quot;functions#round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; &lt;/a&gt;函数），而不是&lt;em&gt;有效数字&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="08f1d05ada5fc1ff6126334b279a2a1edfe50b8c" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; are equal. If the values do not compare equal, the test will fail.</source>
          <target state="translated">测试&lt;em&gt;第一&lt;/em&gt;和&lt;em&gt;第二&lt;/em&gt;是否相等。如果值比较不相等，则测试将失败。</target>
        </trans-unit>
        <trans-unit id="3ee894a74d8ec94f5ae9d3bcfca07533d6dd5eaf" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; are not equal. If the values do compare equal, the test will fail.</source>
          <target state="translated">测试&lt;em&gt;第一&lt;/em&gt;和&lt;em&gt;第二个&lt;/em&gt;不相等。如果这些值确实比较相等，则测试将失败。</target>
        </trans-unit>
        <trans-unit id="0fd50d60f4aebeb0a25dcb9e5609c7f8246051b3" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; evaluate (or don&amp;rsquo;t evaluate) to the same object.</source>
          <target state="translated">测试&lt;em&gt;第一&lt;/em&gt;和&lt;em&gt;第二&lt;/em&gt;评估（或不评估）对同一个对象。</target>
        </trans-unit>
        <trans-unit id="9a1cf6be14d0576501e4cf568a99625aa36624c7" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; is (or is not) in &lt;em&gt;second&lt;/em&gt;.</source>
          <target state="translated">测试&lt;em&gt;第二个&lt;/em&gt;是（不是）&lt;em&gt;第一个&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9fab7717de343b5f61fcb12f39620674b0cf8da4" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;first&lt;/em&gt; is respectively &amp;gt;, &amp;gt;=, &amp;lt; or &amp;lt;= than &lt;em&gt;second&lt;/em&gt; depending on the method name. If not, the test will fail:</source>
          <target state="translated">测试&lt;em&gt;第一个&lt;/em&gt;分别比&lt;em&gt;第二个&lt;/em&gt; &amp;gt;，&amp;gt; =，&amp;lt;或&amp;lt;= 取决于方法名称。如果不是，则测试将失败：</target>
        </trans-unit>
        <trans-unit id="71f5555ba36a92d982074bf0ebdeb082ac846d24" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;member&lt;/em&gt; is (or is not) in &lt;em&gt;container&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758622e273eb447756fd82218de39fd9e387ffba" translate="yes" xml:space="preserve">
          <source>Test that &lt;em&gt;obj&lt;/em&gt; is (or is not) an instance of &lt;em&gt;cls&lt;/em&gt; (which can be a class or a tuple of classes, as supported by &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt;). To check for the exact type, use &lt;a href=&quot;#unittest.TestCase.assertIs&quot;&gt;&lt;code&gt;assertIs(type(obj), cls)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">测试&lt;em&gt;obj&lt;/em&gt;是（或不是）&lt;em&gt;cls&lt;/em&gt;的实例（可以是&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; 的&lt;/a&gt;支持的类或​​类的元组）。要检查确切的类型，请使用&lt;a href=&quot;#unittest.TestCase.assertIs&quot;&gt; &lt;code&gt;assertIs(type(obj), cls)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e5a55f49dd7a534f8b2cf1e904ca582f1f5f129" translate="yes" xml:space="preserve">
          <source>Test that a &lt;em&gt;regex&lt;/em&gt; search matches (or does not match) &lt;em&gt;text&lt;/em&gt;. In case of failure, the error message will include the pattern and the &lt;em&gt;text&lt;/em&gt; (or the pattern and the part of &lt;em&gt;text&lt;/em&gt; that unexpectedly matched). &lt;em&gt;regex&lt;/em&gt; may be a regular expression object or a string containing a regular expression suitable for use by &lt;a href=&quot;re#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">测试&lt;em&gt;正则表达式&lt;/em&gt;搜索匹配（或不匹配）&lt;em&gt;text&lt;/em&gt;。如果失败，错误消息将包括模式和&lt;em&gt;文本&lt;/em&gt;（或模式和意外匹配的&lt;em&gt;文本&lt;/em&gt;部分）。&lt;em&gt;regex&lt;/em&gt;可以是正则表达式对象，也可以是包含适合&lt;a href=&quot;re#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt;使用的正则表达式的字符串。</target>
        </trans-unit>
        <trans-unit id="92314aad1a59354407d4b3c7f6cfb8d6b4d090b1" translate="yes" xml:space="preserve">
          <source>Test that a file is provided and that the selection indicates an already existing file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0edbd1e9710f76fdbabc4e0b0bffc3e19f660e" translate="yes" xml:space="preserve">
          <source>Test that a warning is triggered when &lt;em&gt;callable&lt;/em&gt; is called with any positional or keyword arguments that are also passed to &lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt;&lt;code&gt;assertWarns()&lt;/code&gt;&lt;/a&gt;. The test passes if &lt;em&gt;warning&lt;/em&gt; is triggered and fails if it isn&amp;rsquo;t. Any exception is an error. To catch any of a group of warnings, a tuple containing the warning classes may be passed as &lt;em&gt;warnings&lt;/em&gt;.</source>
          <target state="translated">测试是否使用也传递给&lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt; &lt;code&gt;assertWarns()&lt;/code&gt; 的&lt;/a&gt;任何位置或关键字参数&lt;em&gt;调用callable&lt;/em&gt;时触发了警告。如果触发&lt;em&gt;警告，&lt;/em&gt;则测试通过，如果未触发，则测试失败。任何异常都是错误。要捕获一组警告中的任何警告，可以将包含警告类的元组作为&lt;em&gt;警告&lt;/em&gt;传递。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe7655599618476a611da3f9b310926487e95bca" translate="yes" xml:space="preserve">
          <source>Test that an exception is raised when &lt;em&gt;callable&lt;/em&gt; is called with any positional or keyword arguments that are also passed to &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt;. The test passes if &lt;em&gt;exception&lt;/em&gt; is raised, is an error if another exception is raised, or fails if no exception is raised. To catch any of a group of exceptions, a tuple containing the exception classes may be passed as &lt;em&gt;exception&lt;/em&gt;.</source>
          <target state="translated">测试是否使用还传递给&lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; 的&lt;/a&gt;任何位置或关键字参数&lt;em&gt;调用callable&lt;/em&gt;时引发了异常。如果引发&lt;em&gt;异常&lt;/em&gt;，则测试通过；如果引发另一个异常，则测试通过；如果未引发&lt;em&gt;异常&lt;/em&gt;，则测试通过。为了捕获一组异常中的任何一个，可以将包含异常类的元组作为&lt;em&gt;exception&lt;/em&gt;传递。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9369d81fe32ae88f220c14ff0fbb2c0171f7b74c" translate="yes" xml:space="preserve">
          <source>Test that sequence &lt;em&gt;first&lt;/em&gt; contains the same elements as &lt;em&gt;second&lt;/em&gt;, regardless of their order. When they don&amp;rsquo;t, an error message listing the differences between the sequences will be generated.</source>
          <target state="translated">测试序列&lt;em&gt;首先&lt;/em&gt;包含与&lt;em&gt;第二个&lt;/em&gt;相同的元素，而不管它们的顺序如何。否则，将生成一条错误消息，列出序列之间的差异。</target>
        </trans-unit>
        <trans-unit id="fd95d388e0bc9cfcb7e0be95b669bdc0516c58ce" translate="yes" xml:space="preserve">
          <source>Test that the multiline string &lt;em&gt;first&lt;/em&gt; is equal to the string &lt;em&gt;second&lt;/em&gt;. When not equal a diff of the two strings highlighting the differences will be included in the error message. This method is used by default when comparing strings with &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">测试多行字符串&lt;em&gt;first&lt;/em&gt;等于&lt;em&gt;第二&lt;/em&gt;字符串。当不相等时，突出显示差异的两个字符串的差异将包含在错误消息中。在将字符串与&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;比较时，默认情况下使用此方法。</target>
        </trans-unit>
        <trans-unit id="2a09605ab8c6b2346563311c688a8c06a6dbfc71" translate="yes" xml:space="preserve">
          <source>Test that two dictionaries are equal. If not, an error message is constructed that shows the differences in the dictionaries. This method will be used by default to compare dictionaries in calls to &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">测试两个字典是否相等。如果不是，则构造一条错误消息，显示字典中的差异。默认情况下，将使用此方法比较对&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; 的&lt;/a&gt;调用中的字典。</target>
        </trans-unit>
        <trans-unit id="b4a7f4372cff07bb2871cfb34af58249fa008917" translate="yes" xml:space="preserve">
          <source>Test the widget&amp;rsquo;s state. If a callback is not specified, returns &lt;code&gt;True&lt;/code&gt; if the widget state matches &lt;em&gt;statespec&lt;/em&gt; and &lt;code&gt;False&lt;/code&gt; otherwise. If callback is specified then it is called with args if widget state matches &lt;em&gt;statespec&lt;/em&gt;.</source>
          <target state="translated">测试小部件的状态。如果没有指定一个回调，返回 &lt;code&gt;True&lt;/code&gt; 如果控件状态匹配&lt;em&gt;statespec&lt;/em&gt;和 &lt;code&gt;False&lt;/code&gt; 否则。如果指定了callback，那么如果小部件状态与&lt;em&gt;statespec&lt;/em&gt;匹配，则使用args进行&lt;em&gt;调用&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3252a55c6d8b2b05365bf27eff7c204fbe5a8d0f" translate="yes" xml:space="preserve">
          <source>Test whether &lt;em&gt;filename&lt;/em&gt; matches &lt;em&gt;pattern&lt;/em&gt;, returning &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;; the comparison is case-sensitive and does not apply &lt;a href=&quot;os.path#os.path.normcase&quot;&gt;&lt;code&gt;os.path.normcase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">测试&lt;em&gt;文件名&lt;/em&gt;是否匹配&lt;em&gt;模式&lt;/em&gt;，返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt; ; 比较是区分大小写的，并且不适用&lt;a href=&quot;os.path#os.path.normcase&quot;&gt; &lt;code&gt;os.path.normcase()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1bbae1e68b4ab8b26adcd3775306845fefd99a62" translate="yes" xml:space="preserve">
          <source>Test whether every element in &lt;em&gt;other&lt;/em&gt; is in the set.</source>
          <target state="translated">测试&lt;em&gt;其他&lt;/em&gt;元素是否在集合中。</target>
        </trans-unit>
        <trans-unit id="f947d05a8e989c8b1556bb5a7ea38dede393dbe6" translate="yes" xml:space="preserve">
          <source>Test whether every element in the set is in &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="translated">测试集合中的每个元素是否都在&lt;em&gt;other中&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="688ce17b5a4f2b61326390abb5aa3a0c04aa7e4f" translate="yes" xml:space="preserve">
          <source>Test whether or not the selection points to a valid file that is not a directory. Confirmation is required if an already existing file is selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8c5d283f0787819be784087bb6409980272a0e" translate="yes" xml:space="preserve">
          <source>Test whether self and other have the same exponent or whether both are &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">测试self和other是否具有相同的指数，或者两者均为 &lt;code&gt;NaN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3637628b04fc850c896798d027ee4ca99b188b72" translate="yes" xml:space="preserve">
          <source>Test whether the &lt;em&gt;filename&lt;/em&gt; string matches the &lt;em&gt;pattern&lt;/em&gt; string, returning &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;. Both parameters are case-normalized using &lt;a href=&quot;os.path#os.path.normcase&quot;&gt;&lt;code&gt;os.path.normcase()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#fnmatch.fnmatchcase&quot;&gt;&lt;code&gt;fnmatchcase()&lt;/code&gt;&lt;/a&gt; can be used to perform a case-sensitive comparison, regardless of whether that&amp;rsquo;s standard for the operating system.</source>
          <target state="translated">测试&lt;em&gt;文件名&lt;/em&gt;字符串是否与&lt;em&gt;模式&lt;/em&gt;字符串匹配，返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;。这两个参数都使用&lt;a href=&quot;os.path#os.path.normcase&quot;&gt; &lt;code&gt;os.path.normcase()&lt;/code&gt; &lt;/a&gt;进行大小写规范化。&lt;a href=&quot;#fnmatch.fnmatchcase&quot;&gt; &lt;code&gt;fnmatchcase()&lt;/code&gt; &lt;/a&gt;可用于执行区分大小写的比较，而不管这是否是操作系统的标准。</target>
        </trans-unit>
        <trans-unit id="bee05867c711f322cfcfe9e76c439a43d28a27a4" translate="yes" xml:space="preserve">
          <source>Test whether the given pair of screen-relative character-cell coordinates are enclosed by the given window, returning &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. It is useful for determining what subset of the screen windows enclose the location of a mouse event.</source>
          <target state="translated">测试给定的一对屏幕相对字符单元格坐标是否被给定的窗口包围，并返回 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 。对于确定屏幕窗口的哪个子集围住鼠标事件的位置很有用。</target>
        </trans-unit>
        <trans-unit id="916b10a98c94b3646aca3f798189b9bf36bdb056" translate="yes" xml:space="preserve">
          <source>Test whether the set is a proper subset of &lt;em&gt;other&lt;/em&gt;, that is, &lt;code&gt;set &amp;lt;= other and set != other&lt;/code&gt;.</source>
          <target state="translated">测试set是否为&lt;em&gt;other&lt;/em&gt;的适当子集，即 &lt;code&gt;set &amp;lt;= other and set != other&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d432513ee0123cd1a13733349fd041b83c5b1e43" translate="yes" xml:space="preserve">
          <source>Test whether the set is a proper superset of &lt;em&gt;other&lt;/em&gt;, that is, &lt;code&gt;set &amp;gt;=
other and set != other&lt;/code&gt;.</source>
          <target state="translated">测试集合是否为&lt;em&gt;other&lt;/em&gt;的适当超集，即 &lt;code&gt;set &amp;gt;= other and set != other&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f23698d1ee41342775e72b59b793d4fa4ee7350" translate="yes" xml:space="preserve">
          <source>Test whether the tarfile is valid or not.</source>
          <target state="translated">测试 tarfile 是否有效。</target>
        </trans-unit>
        <trans-unit id="1f73fcb0d952970335312a2670a1276fac62abe7" translate="yes" xml:space="preserve">
          <source>Test whether the zipfile is valid or not.</source>
          <target state="translated">测试zip文件是否有效。</target>
        </trans-unit>
        <trans-unit id="5a8150059a72c4f17d4247e501bd049f3fd08488" translate="yes" xml:space="preserve">
          <source>Tested code can be refactored more easily.</source>
          <target state="translated">经过测试的代码可以更容易地进行重构。</target>
        </trans-unit>
        <trans-unit id="61f38d1d8201f094a34ac329beb6d755ed79a79e" translate="yes" xml:space="preserve">
          <source>Testing Warnings</source>
          <target state="translated">测试警告</target>
        </trans-unit>
        <trans-unit id="cc43c151a25f111033e3c67c5282813bd0bb7c14" translate="yes" xml:space="preserve">
          <source>Testing for SSL support</source>
          <target state="translated">测试SSL支持</target>
        </trans-unit>
        <trans-unit id="7b6553cde91fa3c13041b8a95dc60f532ab97659" translate="yes" xml:space="preserve">
          <source>Testing frameworks built on top of &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; may want access to the &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; object generated by running a set of tests for reporting purposes; a &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; instance is returned by the &lt;code&gt;TestRunner.run()&lt;/code&gt; method for this purpose.</source>
          <target state="translated">测试建立在顶部框架&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;可能要访问&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt;运行一组进行报告的测试生成对象; 为此， &lt;code&gt;TestRunner.run()&lt;/code&gt; 方法返回一个&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="fe919eee0e3ca452b798ae6980b4e58c4af2b5a5" translate="yes" xml:space="preserve">
          <source>Testing frameworks can use the following methods to collect information on the test:</source>
          <target state="translated">测试框架可以使用以下方法来收集测试信息。</target>
        </trans-unit>
        <trans-unit id="38686aaaf5fc5e003212208b9184a178fba7333f" translate="yes" xml:space="preserve">
          <source>Testing in Python Mailing List</source>
          <target state="translated">用Python测试邮件列表</target>
        </trans-unit>
        <trans-unit id="da11bed90e87fd7fb0fbcc4f8ff64942c6b34747" translate="yes" xml:space="preserve">
          <source>Testing range objects for equality with &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; compares them as sequences. That is, two range objects are considered equal if they represent the same sequence of values. (Note that two range objects that compare equal might have different &lt;a href=&quot;#range.start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#range.stop&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#range.step&quot;&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt; attributes, for example &lt;code&gt;range(0) == range(2, 1, 3)&lt;/code&gt; or &lt;code&gt;range(0, 3, 2) == range(0, 4, 2)&lt;/code&gt;.)</source>
          <target state="translated">用 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; 测试范围对象是否相等，将它们作为序列进行比较。即，如果两个范围对象表示相同的值序列，则认为它们相等。（请注意，两个比较相等的范围对象可能具有不同的&lt;a href=&quot;#range.start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#range.stop&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#range.step&quot;&gt; &lt;code&gt;step&lt;/code&gt; &lt;/a&gt;属性，例如 &lt;code&gt;range(0) == range(2, 1, 3)&lt;/code&gt; 或 &lt;code&gt;range(0, 3, 2) == range(0, 4, 2)&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="003efaa02b4b57128dcca991ec741e8a4eeb3716" translate="yes" xml:space="preserve">
          <source>Testing that a weak reference object is still live should be done using the expression &lt;code&gt;ref() is not None&lt;/code&gt;. Normally, application code that needs to use a reference object should follow this pattern:</source>
          <target state="translated">应使用表达式 &lt;code&gt;ref() is not None&lt;/code&gt; 来测试弱引用对象是否仍然存在。通常，需要使用引用对象的应用程序代码应遵循以下模式：</target>
        </trans-unit>
        <trans-unit id="34733bb1e62600c3f8ae30cae693f94f1778a9ed" translate="yes" xml:space="preserve">
          <source>Testing your CGI script</source>
          <target state="translated">测试您的CGI脚本</target>
        </trans-unit>
        <trans-unit id="4e19688909d746da7f053c97e9a89a6180114515" translate="yes" xml:space="preserve">
          <source>Tests can be numerous, and their set-up can be repetitive. Luckily, we can factor out set-up code by implementing a method called &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt;, which the testing framework will automatically call for every single test we run:</source>
          <target state="translated">测试可以很多，并且它们的设置可以重复。幸运的是，我们可以通过实现一个名为&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;的方法来分解设置代码，测试框架将针对我们运行的每个测试自动调用该方法：</target>
        </trans-unit>
        <trans-unit id="d252b8a5f27daa8e41c6d3c2cb5eda98be0ec9ff" translate="yes" xml:space="preserve">
          <source>Tests embedded in documentation strings.</source>
          <target state="translated">嵌入到文档字符串中的测试。</target>
        </trans-unit>
        <trans-unit id="1406d991822128e10256d130b2e562a9f4a563b8" translate="yes" xml:space="preserve">
          <source>Tests for modules written in C must be in separate modules anyway, so why not be consistent?</source>
          <target state="translated">反正用C语言写的模块的测试一定是在不同的模块中进行的,为什么不一致呢?</target>
        </trans-unit>
        <trans-unit id="09983bd6189c4e80c72f5f7dbeabf106aff83bf9" translate="yes" xml:space="preserve">
          <source>Tests grouped by a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; are always accessed by iteration. Subclasses can lazily provide tests by overriding &lt;a href=&quot;#unittest.TestSuite.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt;. Note that this method may be called several times on a single suite (for example when counting tests or comparing for equality) so the tests returned by repeated iterations before &lt;a href=&quot;#unittest.TestSuite.run&quot;&gt;&lt;code&gt;TestSuite.run()&lt;/code&gt;&lt;/a&gt; must be the same for each call iteration. After &lt;a href=&quot;#unittest.TestSuite.run&quot;&gt;&lt;code&gt;TestSuite.run()&lt;/code&gt;&lt;/a&gt;, callers should not rely on the tests returned by this method unless the caller uses a subclass that overrides &lt;code&gt;TestSuite._removeTestAtIndex()&lt;/code&gt; to preserve test references.</source>
          <target state="translated">由&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;分组的测试始终通过迭代访问。子类可以通过重写&lt;a href=&quot;#unittest.TestSuite.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;来懒惰地提供测试。请注意，在单个套件上可能多次调用了此方法（例如，在对测试计数或比较相等性时），因此在每次调用迭代之前，在&lt;a href=&quot;#unittest.TestSuite.run&quot;&gt; &lt;code&gt;TestSuite.run()&lt;/code&gt; &lt;/a&gt;之前重复迭代返回的测试必须相同。在&lt;a href=&quot;#unittest.TestSuite.run&quot;&gt; &lt;code&gt;TestSuite.run()&lt;/code&gt; 之后&lt;/a&gt;，调用者不应依赖此方法返回的测试，除非调用者使用重写 &lt;code&gt;TestSuite._removeTestAtIndex()&lt;/code&gt; 的子类来保留测试引用。</target>
        </trans-unit>
        <trans-unit id="746f46b044088f5f407262ed246469a3a9cd3ffd" translate="yes" xml:space="preserve">
          <source>Tests that two lists or tuples are equal. If not, an error message is constructed that shows only the differences between the two. An error is also raised if either of the parameters are of the wrong type. These methods are used by default when comparing lists or tuples with &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">测试两个列表或元组是否相等。如果不是，则构造一条错误消息，仅显示两者之间的差异。如果两个参数的任何一个类型错误，也会引发错误。在将列表或元组与&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;比较时，默认情况下使用这些方法。</target>
        </trans-unit>
        <trans-unit id="12cb88d29c157a8c448f5221a48fcec3e2a2416d" translate="yes" xml:space="preserve">
          <source>Tests that two sequences are equal. If a &lt;em&gt;seq_type&lt;/em&gt; is supplied, both &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; must be instances of &lt;em&gt;seq_type&lt;/em&gt; or a failure will be raised. If the sequences are different an error message is constructed that shows the difference between the two.</source>
          <target state="translated">测试两个序列是否相等。如果提供了&lt;em&gt;seq_type&lt;/em&gt;，则&lt;em&gt;第一&lt;/em&gt;和&lt;em&gt;第二个都&lt;/em&gt;必须是&lt;em&gt;seq_type的&lt;/em&gt;实例，&lt;em&gt;否则&lt;/em&gt;将引发故障。如果顺序不同，则会生成一条错误消息，显示两者之间的差异。</target>
        </trans-unit>
        <trans-unit id="50b57be9042dd364aa10610ff756601a77a8bc1e" translate="yes" xml:space="preserve">
          <source>Tests that two sets are equal. If not, an error message is constructed that lists the differences between the sets. This method is used by default when comparing sets or frozensets with &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">测试两组是否相等。如果不是，则构造一条错误消息，列出这些组之间的差异。在将集合或冻结集与&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;比较时，默认使用此方法。</target>
        </trans-unit>
        <trans-unit id="f2e5d85501569c4ac7d093b6592e30df4f105c2c" translate="yes" xml:space="preserve">
          <source>Tests the image data contained in the file named by &lt;em&gt;filename&lt;/em&gt;, and returns a string describing the image type. If optional &lt;em&gt;h&lt;/em&gt; is provided, the &lt;em&gt;filename&lt;/em&gt; is ignored and &lt;em&gt;h&lt;/em&gt; is assumed to contain the byte stream to test.</source>
          <target state="translated">测试以&lt;em&gt;filename&lt;/em&gt;命名的&lt;em&gt;文件中&lt;/em&gt;包含的图像数据，并返回描述图像类型的字符串。如果提供了可选的&lt;em&gt;h&lt;/em&gt;，则忽略&lt;em&gt;文件名&lt;/em&gt;，并假定&lt;em&gt;h&lt;/em&gt;包含要测试的字节流。</target>
        </trans-unit>
        <trans-unit id="ba7fcbe4746d836567b87193c785bbc1ce3d9ac1" translate="yes" xml:space="preserve">
          <source>Tests whether the second value on the stack is an exception matching TOS, and jumps if it is not. Pops two values from the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9efb9d787a1a844d9d75c706c96b2d104de210f" translate="yes" xml:space="preserve">
          <source>Text Encodings</source>
          <target state="translated">文本编码</target>
        </trans-unit>
        <trans-unit id="109f7c2f219315f947611c43c343d61302c960d4" translate="yes" xml:space="preserve">
          <source>Text I/O</source>
          <target state="translated">文本I/O</target>
        </trans-unit>
        <trans-unit id="76ff03d8469b4fa76d987bf57d0bfa338515e0f7" translate="yes" xml:space="preserve">
          <source>Text I/O expects and produces &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects. This means that whenever the backing store is natively made of bytes (such as in the case of a file), encoding and decoding of data is made transparently as well as optional translation of platform-specific newline characters.</source>
          <target state="translated">文本I / O期望并产生&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;对象。这意味着，每当后备存储本地由字节组成时（例如在文件的情况下），就将透明地进行数据编码和解码，以及可选地翻译特定于平台的换行符。</target>
        </trans-unit>
        <trans-unit id="d25b06b6b4a420e9c0c72ee30c50397503bc4867" translate="yes" xml:space="preserve">
          <source>Text I/O over a binary storage (such as a file) is significantly slower than binary I/O over the same storage, because it requires conversions between unicode and binary data using a character codec. This can become noticeable handling huge amounts of text data like large log files. Also, &lt;code&gt;TextIOWrapper.tell()&lt;/code&gt; and &lt;code&gt;TextIOWrapper.seek()&lt;/code&gt; are both quite slow due to the reconstruction algorithm used.</source>
          <target state="translated">二进制存储（例如文件）上的文本I / O比相同存储上的二进制I / O慢得多，因为它需要使用字符编解码器在Unicode和二进制数据之间进行转换。在处理大量文本数据（例如大型日志文件）时，这会变得很明显。另外，由于使用了重建算法，因此 &lt;code&gt;TextIOWrapper.tell()&lt;/code&gt; 和 &lt;code&gt;TextIOWrapper.seek()&lt;/code&gt; 都非常慢。</target>
        </trans-unit>
        <trans-unit id="b20688b2fd1febba21368c0b5690809bc433f2a2" translate="yes" xml:space="preserve">
          <source>Text Munging</source>
          <target state="translated">文本挖掘</target>
        </trans-unit>
        <trans-unit id="5e7edac2cc88ea213ca3d3f3af0c25e020e3d37c" translate="yes" xml:space="preserve">
          <source>Text Processing</source>
          <target state="translated">文本处理</target>
        </trans-unit>
        <trans-unit id="d75341f5e2708bd83dd875c8ee696d0a3461cbc3" translate="yes" xml:space="preserve">
          <source>Text Processing Services</source>
          <target state="translated">文本处理服务</target>
        </trans-unit>
        <trans-unit id="d38c3fcbffdd11a45d7bcdcb6653c5f250097c68" translate="yes" xml:space="preserve">
          <source>Text Sequence Type &amp;mdash; &lt;code&gt;str&lt;/code&gt;</source>
          <target state="translated">文字序列类型 &lt;code&gt;str&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4da446389b00cf2098e337f3e9ec304abd5ae69d" translate="yes" xml:space="preserve">
          <source>Text Sequence Type &amp;mdash; str</source>
          <target state="translated">文字序列类型-str</target>
        </trans-unit>
        <trans-unit id="6b61b4bd4d90f6dc874cfca9d95be9fb364f9b14" translate="yes" xml:space="preserve">
          <source>Text Transforms</source>
          <target state="translated">文本转换</target>
        </trans-unit>
        <trans-unit id="7ddeaf5fb25a3098cc61cf569a9609c8423fe0ca" translate="yes" xml:space="preserve">
          <source>Text and CDATASection Objects</source>
          <target state="translated">文本和CDATASection对象</target>
        </trans-unit>
        <trans-unit id="7e6151b50920d76fbcb71fc57c974ef648c49885" translate="yes" xml:space="preserve">
          <source>Text coloring is done in the background, so uncolorized text is occasionally visible. To change the color scheme, use the Configure IDLE dialog Highlighting tab. The marking of debugger breakpoint lines in the editor and text in popups and dialogs is not user-configurable.</source>
          <target state="translated">文本着色是在背景中进行的,因此偶尔会看到未着色的文本。要更改配色方案,请使用 &quot;配置IDLE对话框高亮 &quot;选项卡。编辑器中的调试器断点线以及弹出窗口和对话框中的文本的标记不是用户可以配置的。</target>
        </trans-unit>
        <trans-unit id="8a57dc74ece05356ee746dfe80671051d658e460" translate="yes" xml:space="preserve">
          <source>Text colors</source>
          <target state="translated">文字颜色</target>
        </trans-unit>
        <trans-unit id="660f799d669d5b7231f67c281132ba4f5cffb5db" translate="yes" xml:space="preserve">
          <source>Text file busy</source>
          <target state="translated">文本文件繁忙</target>
        </trans-unit>
        <trans-unit id="3831f3c17839811e5844d39136a6e4d1069c7fd7" translate="yes" xml:space="preserve">
          <source>Text is preferably wrapped on whitespaces and right after the hyphens in hyphenated words; only then will long words be broken if necessary, unless &lt;a href=&quot;#textwrap.TextWrapper.break_long_words&quot;&gt;&lt;code&gt;TextWrapper.break_long_words&lt;/code&gt;&lt;/a&gt; is set to false.</source>
          <target state="translated">最好将文本包装在空白处，并在连字符后的连字符后紧跟；除非将&lt;a href=&quot;#textwrap.TextWrapper.break_long_words&quot;&gt; &lt;code&gt;TextWrapper.break_long_words&lt;/code&gt; &lt;/a&gt;设置为false ，否则只有在必要时才会打破长单词。</target>
        </trans-unit>
        <trans-unit id="12e22a819501b7839de966684daf36d764443f8c" translate="yes" xml:space="preserve">
          <source>Text logging level for the message (&lt;code&gt;'DEBUG'&lt;/code&gt;, &lt;code&gt;'INFO'&lt;/code&gt;, &lt;code&gt;'WARNING'&lt;/code&gt;, &lt;code&gt;'ERROR'&lt;/code&gt;, &lt;code&gt;'CRITICAL'&lt;/code&gt;).</source>
          <target state="translated">消息的文本记录级别（ &lt;code&gt;'DEBUG'&lt;/code&gt; ， &lt;code&gt;'INFO'&lt;/code&gt; ， &lt;code&gt;'WARNING'&lt;/code&gt; ， &lt;code&gt;'ERROR'&lt;/code&gt; ， &lt;code&gt;'CRITICAL'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="987d6f0b28dc65ff1239d10e0d44ea7cc7fcc301" translate="yes" xml:space="preserve">
          <source>Text widget indexes</source>
          <target state="translated">文本小组件索引</target>
        </trans-unit>
        <trans-unit id="3fdfd69b27f0a02d3b68f1b45c9ee6e94da682e0" translate="yes" xml:space="preserve">
          <source>Text widget with a vertical scroll bar built in.</source>
          <target state="translated">内置垂直滚动条的文本部件。</target>
        </trans-unit>
        <trans-unit id="63ca83a63aa65e4881414699c40dc49a0eea9ea4" translate="yes" xml:space="preserve">
          <source>Textbox objects</source>
          <target state="translated">文本框对象</target>
        </trans-unit>
        <trans-unit id="46347caa9c96519fa9f4ef646b0b35f9da71370b" translate="yes" xml:space="preserve">
          <source>Textual data in Python is handled with &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects, or &lt;em&gt;strings&lt;/em&gt;. Strings are immutable &lt;a href=&quot;#typesseq&quot;&gt;sequences&lt;/a&gt; of Unicode code points. String literals are written in a variety of ways:</source>
          <target state="translated">Python中的文本数据使用&lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;对象或&lt;em&gt;string处理&lt;/em&gt;。字符串是Unicode代码点的不可变&lt;a href=&quot;#typesseq&quot;&gt;序列&lt;/a&gt;。字符串文字以多种方式编写：</target>
        </trans-unit>
        <trans-unit id="c32767e0541fe7038ff8d87e7b8aed17f49474f8" translate="yes" xml:space="preserve">
          <source>Thai</source>
          <target state="translated">Thai</target>
        </trans-unit>
        <trans-unit id="7e15e8ed56909024bd97b96d075895a121cf534e" translate="yes" xml:space="preserve">
          <source>Thai languages</source>
          <target state="translated">泰语</target>
        </trans-unit>
        <trans-unit id="63beac302793fb4c2b8edf609f9123624506d326" translate="yes" xml:space="preserve">
          <source>Thanks to Matthew Dixon Cowles for the original inspiration and examples.</source>
          <target state="translated">感谢Matthew Dixon Cowles提供的原始灵感和例子。</target>
        </trans-unit>
        <trans-unit id="801b224b2c27d3c4c3785e85a4f6f799925da25a" translate="yes" xml:space="preserve">
          <source>That code causes several &lt;a href=&quot;#module-tkinter.ttk&quot;&gt;&lt;code&gt;tkinter.ttk&lt;/code&gt;&lt;/a&gt; widgets (&lt;code&gt;Button&lt;/code&gt;, &lt;code&gt;Checkbutton&lt;/code&gt;, &lt;code&gt;Entry&lt;/code&gt;, &lt;code&gt;Frame&lt;/code&gt;, &lt;code&gt;Label&lt;/code&gt;, &lt;code&gt;LabelFrame&lt;/code&gt;, &lt;code&gt;Menubutton&lt;/code&gt;, &lt;code&gt;PanedWindow&lt;/code&gt;, &lt;code&gt;Radiobutton&lt;/code&gt;, &lt;code&gt;Scale&lt;/code&gt; and &lt;code&gt;Scrollbar&lt;/code&gt;) to automatically replace the Tk widgets.</source>
          <target state="translated">该代码使几个&lt;a href=&quot;#module-tkinter.ttk&quot;&gt; &lt;code&gt;tkinter.ttk&lt;/code&gt; &lt;/a&gt;小部件（ &lt;code&gt;Button&lt;/code&gt; ， &lt;code&gt;Checkbutton&lt;/code&gt; ， &lt;code&gt;Entry&lt;/code&gt; ， &lt;code&gt;Frame&lt;/code&gt; ， &lt;code&gt;Label&lt;/code&gt; ， &lt;code&gt;LabelFrame&lt;/code&gt; ， &lt;code&gt;Menubutton&lt;/code&gt; ， &lt;code&gt;PanedWindow&lt;/code&gt; ， &lt;code&gt;Radiobutton&lt;/code&gt; ， &lt;code&gt;Scale&lt;/code&gt; 和 &lt;code&gt;Scrollbar&lt;/code&gt; ）自动替换Tk小部件。</target>
        </trans-unit>
        <trans-unit id="1b34a090e905f2f91f164b616a609eae4239508a" translate="yes" xml:space="preserve">
          <source>That default is subject to change at any time, including during maintenance releases.</source>
          <target state="translated">该默认值可随时更改,包括在维护发布期间。</target>
        </trans-unit>
        <trans-unit id="305099f8690907083c8e1f88926191ba01b8d9be" translate="yes" xml:space="preserve">
          <source>That doctest succeeds if &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised, with the &lt;code&gt;list.remove(x):
x not in list&lt;/code&gt; detail as shown.</source>
          <target state="translated">如果引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; ,&lt;/a&gt;则doctest成功，并且 &lt;code&gt;list.remove(x): x not in list&lt;/code&gt; 详细信息中，如图所示。</target>
        </trans-unit>
        <trans-unit id="7af14a7bea1fe17b77ce68743033a173fd5b0d31" translate="yes" xml:space="preserve">
          <source>That is, anything extra that the specialized class puts in to the &lt;code&gt;kwds&lt;/code&gt; dictionary should be removed and handled, and the remaining contents of &lt;code&gt;kw&lt;/code&gt; (and &lt;code&gt;args&lt;/code&gt;) passed to the &lt;code&gt;BaseHeader&lt;/code&gt;&lt;code&gt;init&lt;/code&gt; method.</source>
          <target state="translated">也就是说，应该删除和处理专用类放入 &lt;code&gt;kwds&lt;/code&gt; 字典中的所有内容，并将 &lt;code&gt;kw&lt;/code&gt; （和 &lt;code&gt;args&lt;/code&gt; ）的其余内容传递给 &lt;code&gt;BaseHeader&lt;/code&gt; &lt;code&gt;init&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="0bc557e45ef5a3dbe18b8040fb35104eb35a7415" translate="yes" xml:space="preserve">
          <source>That last hand, &lt;code&gt;&quot;727ak&quot;&lt;/code&gt;, contained a pair, or two of the same valued cards. To match this with a regular expression, one could use backreferences as such:</source>
          <target state="translated">最后一张牌 &lt;code&gt;&quot;727ak&quot;&lt;/code&gt; 包含一对或两个相同值的卡。为了将其与正则表达式匹配，可以使用如下反向引用：</target>
        </trans-unit>
        <trans-unit id="ca1c777fbc1f6e256bcbd75cee9a6460910a6ef6" translate="yes" xml:space="preserve">
          <source>That means when the type of a value is &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;, a type checker will reject almost all operations on it, and assigning it to a variable (or using it as a return value) of a more specialized type is a type error. For example:</source>
          <target state="translated">这意味着当值的类型为&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; 时&lt;/a&gt;，类型检查器将拒绝对其执行的几乎所有操作，并将其分配给更专门类型的变量（或将其用作返回值）是类型错误。例如：</target>
        </trans-unit>
        <trans-unit id="9cc1064d298dd1efe1205f99e287bdb018327f8f" translate="yes" xml:space="preserve">
          <source>That short script executes and verifies any interactive Python examples contained in the file &lt;code&gt;example.txt&lt;/code&gt;. The file content is treated as if it were a single giant docstring; the file doesn&amp;rsquo;t need to contain a Python program! For example, perhaps &lt;code&gt;example.txt&lt;/code&gt; contains this:</source>
          <target state="translated">该简短脚本将执行并验证文件 &lt;code&gt;example.txt&lt;/code&gt; 中包含的所有交互式Python示例。文件内容被视为单个巨型文档字符串；该文件不需要包含Python程序！例如，也许 &lt;code&gt;example.txt&lt;/code&gt; 包含以下内容：</target>
        </trans-unit>
        <trans-unit id="1ebaa0b37641dbc0c9c4c7f49bd40a80dc199fab" translate="yes" xml:space="preserve">
          <source>That way, separator components are always found at the same relative indices within the result list.</source>
          <target state="translated">这样一来,分离器组件总是在结果列表中以相同的相对索引被找到。</target>
        </trans-unit>
        <trans-unit id="0d985bc25496ca07f21e5b6b8027aab8030bb3cc" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all you need to know to start making productive use of &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;! Jump in. The following sections provide full details. Note that there are many examples of doctests in the standard Python test suite and libraries. Especially useful examples can be found in the standard test file &lt;code&gt;Lib/test/test_doctest.py&lt;/code&gt;.</source>
          <target state="translated">这就是开始有效使用&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;所需的一切！进入。以下各节提供了完整的详细信息。请注意，标准Python测试套件和库中有许多doctest的示例。在标准测试文件 &lt;code&gt;Lib/test/test_doctest.py&lt;/code&gt; 中可以找到特别有用的示例。</target>
        </trans-unit>
        <trans-unit id="24767c748b9c923eaeff84e0ecaa1b3edd0e2c9e" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;&lt;code&gt;**&lt;/code&gt;&amp;rdquo; pattern means &amp;ldquo;this directory and all subdirectories, recursively&amp;rdquo;. In other words, it enables recursive globbing:</source>
          <target state="translated">&amp;ldquo; &lt;code&gt;**&lt;/code&gt; &amp;rdquo;模式的意思是&amp;ldquo;递归该目录和所有子目录&amp;rdquo;。换句话说，它启用了递归遍历：</target>
        </trans-unit>
        <trans-unit id="0fb252c960feb71015d07ccf7a5fa1d3bae709f5" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;R&amp;rdquo; and &amp;ldquo;O&amp;rdquo; flags are stored in the &lt;em&gt;Status&lt;/em&gt; header, and the &amp;ldquo;D&amp;rdquo;, &amp;ldquo;F&amp;rdquo;, and &amp;ldquo;A&amp;rdquo; flags are stored in the &lt;em&gt;X-Status&lt;/em&gt; header. The flags and headers typically appear in the order mentioned.</source>
          <target state="translated">&amp;ldquo; R&amp;rdquo;和&amp;ldquo; O&amp;rdquo;标志存储在&lt;em&gt;状态&lt;/em&gt;标头中，而&amp;ldquo; D&amp;rdquo;，&amp;ldquo; F&amp;rdquo;和&amp;ldquo; A&amp;rdquo;标志存储在&lt;em&gt;X状态&lt;/em&gt;标头中。标志和标头通常按提到的顺序出现。</target>
        </trans-unit>
        <trans-unit id="850628f9d76c3c78d286ee4197ab0bb760d1f09f" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;ctime&amp;rdquo; as reported by the operating system. On some systems (like Unix) is the time of the last metadata change, and, on others (like Windows), is the creation time (see platform documentation for details).</source>
          <target state="translated">操作系统报告的&amp;ldquo; ctime&amp;rdquo;。在某些系统（例如Unix）上，是上一次元数据更改的时间，而在其他系统（例如Windows）上，则是创建时间（有关详细信息，请参见平台文档）。</target>
        </trans-unit>
        <trans-unit id="5f051f0b1c246488e612587cabeb323919ac9e28" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;l&amp;rdquo; and &amp;ldquo;v&amp;rdquo; variants of the &lt;a href=&quot;#os.execl&quot;&gt;&lt;code&gt;exec*&lt;/code&gt;&lt;/a&gt; functions differ in how command-line arguments are passed. The &amp;ldquo;l&amp;rdquo; variants are perhaps the easiest to work with if the number of parameters is fixed when the code is written; the individual parameters simply become additional parameters to the &lt;code&gt;execl*()&lt;/code&gt; functions. The &amp;ldquo;v&amp;rdquo; variants are good when the number of parameters is variable, with the arguments being passed in a list or tuple as the &lt;em&gt;args&lt;/em&gt; parameter. In either case, the arguments to the child process should start with the name of the command being run, but this is not enforced.</source>
          <target state="translated">&lt;a href=&quot;#os.execl&quot;&gt; &lt;code&gt;exec*&lt;/code&gt; &lt;/a&gt;函数的&amp;ldquo; l&amp;rdquo;和&amp;ldquo; v&amp;rdquo;变体在命令行参数的传递方式上有所不同。如果在编写代码时固定了参数数量，则&amp;ldquo; l&amp;rdquo;变体可能是最容易使用的；各个参数只是成为 &lt;code&gt;execl*()&lt;/code&gt; 函数的附加参数。当参数数量可变时，&amp;ldquo; v&amp;rdquo;变体很好，参数以列表或元组的形式作为&lt;em&gt;args&lt;/em&gt;参数传递。在这两种情况下，子进程的参数都应以正在运行的命令的名称开头，但这不是强制性的。</target>
        </trans-unit>
        <trans-unit id="dda6a33b048efb7394cfa7788d36d000c6865c2a" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;l&amp;rdquo; and &amp;ldquo;v&amp;rdquo; variants of the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; functions differ in how command-line arguments are passed. The &amp;ldquo;l&amp;rdquo; variants are perhaps the easiest to work with if the number of parameters is fixed when the code is written; the individual parameters simply become additional parameters to the &lt;code&gt;spawnl*()&lt;/code&gt; functions. The &amp;ldquo;v&amp;rdquo; variants are good when the number of parameters is variable, with the arguments being passed in a list or tuple as the &lt;em&gt;args&lt;/em&gt; parameter. In either case, the arguments to the child process must start with the name of the command being run.</source>
          <target state="translated">&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;函数的&amp;ldquo; l&amp;rdquo;和&amp;ldquo; v&amp;rdquo;变体在命令行参数的传递方式上有所不同。如果在编写代码时固定了参数数量，则&amp;ldquo; l&amp;rdquo;变体可能是最容易使用的；各个参数只是成为 &lt;code&gt;spawnl*()&lt;/code&gt; 函数的附加参数。当参数数量可变时，&amp;ldquo; v&amp;rdquo;变体很好，参数以列表或元组的形式作为&lt;em&gt;args&lt;/em&gt;参数传递。无论哪种情况，子进程的参数都必须以正在运行的命令的名称开头。</target>
        </trans-unit>
        <trans-unit id="ebc5c5eff4ebaa2aabc62e546b5d710cc242a1f0" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;return&amp;rdquo; annotation for the callable. If the callable has no &amp;ldquo;return&amp;rdquo; annotation, this attribute is set to &lt;a href=&quot;#inspect.Signature.empty&quot;&gt;&lt;code&gt;Signature.empty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可调用对象的&amp;ldquo;返回&amp;rdquo;注释。如果可调用对象没有&amp;ldquo;返回&amp;rdquo;注释，则此属性设置为&lt;a href=&quot;#inspect.Signature.empty&quot;&gt; &lt;code&gt;Signature.empty&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe5a66d9030159d4a1298e1aa9f3e8498628b01f" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;sendfile&amp;rdquo; syscall is not available for the given socket or file type.</source>
          <target state="translated">&amp;ldquo; sendfile&amp;rdquo;系统调用不适用于给定的套接字或文件类型。</target>
        </trans-unit>
        <trans-unit id="6b37f6a38c6f4ef0df7a7bd6db684f2957f82875" translate="yes" xml:space="preserve">
          <source>The &amp;lsquo;thread identifier&amp;rsquo; of this thread or &lt;code&gt;None&lt;/code&gt; if the thread has not been started. This is a nonzero integer. See the &lt;a href=&quot;#threading.get_ident&quot;&gt;&lt;code&gt;get_ident()&lt;/code&gt;&lt;/a&gt; function. Thread identifiers may be recycled when a thread exits and another thread is created. The identifier is available even after the thread has exited.</source>
          <target state="translated">此线程的&amp;ldquo;线程标识符&amp;rdquo;；如果尚未启动该线程，则为&amp;ldquo; &lt;code&gt;None&lt;/code&gt; &amp;rdquo;。这是一个非零整数。请参见&lt;a href=&quot;#threading.get_ident&quot;&gt; &lt;code&gt;get_ident()&lt;/code&gt; &lt;/a&gt;函数。当一个线程退出并创建另一个线程时，线程标识符可以被回收。该标识符即使在线程退出后仍然可用。</target>
        </trans-unit>
        <trans-unit id="d09100573d37b9f6f1a6f374309892673e325a3e" translate="yes" xml:space="preserve">
          <source>The 6 optional arguments can only be specified when the window is a pad created with &lt;a href=&quot;#curses.newpad&quot;&gt;&lt;code&gt;newpad()&lt;/code&gt;&lt;/a&gt;. The additional parameters are needed to indicate what part of the pad and screen are involved. &lt;em&gt;pminrow&lt;/em&gt; and &lt;em&gt;pmincol&lt;/em&gt; specify the upper left-hand corner of the rectangle to be displayed in the pad. &lt;em&gt;sminrow&lt;/em&gt;, &lt;em&gt;smincol&lt;/em&gt;, &lt;em&gt;smaxrow&lt;/em&gt;, and &lt;em&gt;smaxcol&lt;/em&gt; specify the edges of the rectangle to be displayed on the screen. The lower right-hand corner of the rectangle to be displayed in the pad is calculated from the screen coordinates, since the rectangles must be the same size. Both rectangles must be entirely contained within their respective structures. Negative values of &lt;em&gt;pminrow&lt;/em&gt;, &lt;em&gt;pmincol&lt;/em&gt;, &lt;em&gt;sminrow&lt;/em&gt;, or &lt;em&gt;smincol&lt;/em&gt; are treated as if they were zero.</source>
          <target state="translated">仅当窗口是使用&lt;a href=&quot;#curses.newpad&quot;&gt; &lt;code&gt;newpad()&lt;/code&gt; &lt;/a&gt;创建的填充板时才能指定6个可选参数。需要使用其他参数来指示涉及到触摸板和屏幕的哪个部分。&lt;em&gt;pminrow&lt;/em&gt;和&lt;em&gt;pmincol&lt;/em&gt;指定要在垫中显示的矩形的左上角。&lt;em&gt;sminrow&lt;/em&gt;，&lt;em&gt;smincol&lt;/em&gt;，&lt;em&gt;smaxrow&lt;/em&gt;和&lt;em&gt;smaxcol&lt;/em&gt;指定要在屏幕上显示的矩形的边缘。由于矩形的大小必须相同，因此要在屏幕上显示的矩形的右下角是根据屏幕坐标计算的。两个矩形必须完全包含在它们各自的结构中。的负值&lt;em&gt;将pminrow&lt;/em&gt;，&lt;em&gt;pmincol&lt;/em&gt;，&lt;em&gt;sminrow&lt;/em&gt;或&lt;em&gt;smincol&lt;/em&gt;视为零。</target>
        </trans-unit>
        <trans-unit id="2c7c3977ea82a165dda3d13226526b2a3b9a05ce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#abc.ABCMeta.__subclasshook__&quot;&gt;&lt;code&gt;__subclasshook__()&lt;/code&gt;&lt;/a&gt; class method defined here says that any class that has an &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method in its &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; (or in that of one of its base classes, accessed via the &lt;a href=&quot;stdtypes#class.__mro__&quot;&gt;&lt;code&gt;__mro__&lt;/code&gt;&lt;/a&gt; list) is considered a &lt;code&gt;MyIterable&lt;/code&gt; too.</source>
          <target state="translated">所述&lt;a href=&quot;#abc.ABCMeta.__subclasshook__&quot;&gt; &lt;code&gt;__subclasshook__()&lt;/code&gt; &lt;/a&gt;这里定义的类的方法表示，其具有任何类&lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;在其方法&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;（或在其基类中的一个，通过所访问的&lt;a href=&quot;stdtypes#class.__mro__&quot;&gt; &lt;code&gt;__mro__&lt;/code&gt; &lt;/a&gt;列表）被认为是一个 &lt;code&gt;MyIterable&lt;/code&gt; 太。</target>
        </trans-unit>
        <trans-unit id="8893e61d48dfb45170ae7cec047a2cf3133bda0a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; object will hold all the information necessary to parse the command line into Python data types.</source>
          <target state="translated">该&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;对象将容纳所有必要的信息，解析命令行成Python数据类型。</target>
        </trans-unit>
        <trans-unit id="7526d0f6695800a5de1896614b5b1f1489511344" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; method must know whether an optional argument, like &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--foo&lt;/code&gt;, or a positional argument, like a list of filenames, is expected. The first arguments passed to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; must therefore be either a series of flags, or a simple argument name. For example, an optional argument could be created like:</source>
          <target state="translated">该&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;方法必须知道是否一个可选的参数，如 &lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--foo&lt;/code&gt; ，或者一个位置参数，如文件名列表，预计。因此，传递给&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;的第一个参数必须是一系列标志或简单的参数名称。例如，可以创建一个可选参数，例如：</target>
        </trans-unit>
        <trans-unit id="200c899b9946a2c72d68748bb9a2de68d91482ed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt;&lt;code&gt;add_argument_group()&lt;/code&gt;&lt;/a&gt; method returns an argument group object which has an &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; method just like a regular &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;. When an argument is added to the group, the parser treats it just like a normal argument, but displays the argument in a separate group for help messages. The &lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt;&lt;code&gt;add_argument_group()&lt;/code&gt;&lt;/a&gt; method accepts &lt;em&gt;title&lt;/em&gt; and &lt;em&gt;description&lt;/em&gt; arguments which can be used to customize this display:</source>
          <target state="translated">所述&lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt; &lt;code&gt;add_argument_group()&lt;/code&gt; &lt;/a&gt;方法返回其具有一个参数组对象&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;方法就像一个普通&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;。将参数添加到组后，解析器将其视为普通参数，但将其显示在单独的组中以获取帮助消息。在&lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt; &lt;code&gt;add_argument_group()&lt;/code&gt; &lt;/a&gt;方法接受&lt;em&gt;标题&lt;/em&gt;和&lt;em&gt;描述&lt;/em&gt;可用于定制这个显示参数：</target>
        </trans-unit>
        <trans-unit id="3fef92983dfc504a867a24713175cff415d4ec68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.add_mutually_exclusive_group&quot;&gt;&lt;code&gt;add_mutually_exclusive_group()&lt;/code&gt;&lt;/a&gt; method also accepts a &lt;em&gt;required&lt;/em&gt; argument, to indicate that at least one of the mutually exclusive arguments is required:</source>
          <target state="translated">所述&lt;a href=&quot;#argparse.ArgumentParser.add_mutually_exclusive_group&quot;&gt; &lt;code&gt;add_mutually_exclusive_group()&lt;/code&gt; &lt;/a&gt;方法还接受&lt;em&gt;所需&lt;/em&gt;的参数，以指示的互斥参数的至少一个是必需的：</target>
        </trans-unit>
        <trans-unit id="2dbbdc4eaca6aa33616d69e89d9701442ad04b5d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method also supports &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; keyword arguments. When either is present, the subparser&amp;rsquo;s commands will appear in their own group in the help output. For example:</source>
          <target state="translated">所述&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;方法也支持 &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;description&lt;/code&gt; 关键字参数。如果存在两者之一，则子解析器的命令将出现在帮助输出中的它们自己的组中。例如：</target>
        </trans-unit>
        <trans-unit id="e53c41a574c2192239e516354d84c6f7d331e309" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method &lt;a href=&quot;#allow-abbrev&quot;&gt;by default&lt;/a&gt; allows long options to be abbreviated to a prefix, if the abbreviation is unambiguous (the prefix matches a unique option):</source>
          <target state="translated">&lt;a href=&quot;#allow-abbrev&quot;&gt;默认情况下&lt;/a&gt;，&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;方法允许将长选项缩写为前缀（如果缩写是明确的（前缀与唯一选项匹配）：</target>
        </trans-unit>
        <trans-unit id="1c0f44b29023b0d7f21a1850c8ff6d43047cea22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method attempts to give errors whenever the user has clearly made a mistake, but some situations are inherently ambiguous. For example, the command-line argument &lt;code&gt;-1&lt;/code&gt; could either be an attempt to specify an option or an attempt to provide a positional argument. The &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method is cautious here: positional arguments may only begin with &lt;code&gt;-&lt;/code&gt; if they look like negative numbers and there are no options in the parser that look like negative numbers:</source>
          <target state="translated">该&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;方法试图给出每当用户显然犯了一个错误错误，但有些情况下都是模棱两可的。例如，命令行参数 &lt;code&gt;-1&lt;/code&gt; 可以是指定选项的尝试，也可以是提供位置参数的尝试。该&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;方法是谨慎的位置：位置参数只能与开始 &lt;code&gt;-&lt;/code&gt; 如果他们看起来像负数且有解析器中没有选项看起来像负数：</target>
        </trans-unit>
        <trans-unit id="b82bb7c2b5e826472abba2cfa940e03bea6a139f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method supports several ways of specifying the value of an option (if it takes one). In the simplest case, the option and its value are passed as two separate arguments:</source>
          <target state="translated">在&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;方法支持指定的选项的值（如果它需要一个）的几种方法。在最简单的情况下，该选项及其值作为两个单独的参数传递：</target>
        </trans-unit>
        <trans-unit id="90c8a41a856e529848d6eade10c1d8d41a7a4839" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#argparse.FileType&quot;&gt;&lt;code&gt;FileType&lt;/code&gt;&lt;/a&gt; factory creates objects that can be passed to the type argument of &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt;&lt;/a&gt;. Arguments that have &lt;a href=&quot;#argparse.FileType&quot;&gt;&lt;code&gt;FileType&lt;/code&gt;&lt;/a&gt; objects as their type will open command-line arguments as files with the requested modes, buffer sizes, encodings and error handling (see the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function for more details):</source>
          <target state="translated">所述&lt;a href=&quot;#argparse.FileType&quot;&gt; &lt;code&gt;FileType&lt;/code&gt; &lt;/a&gt;工厂创建可以传递到的类型参数对象&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;ArgumentParser.add_argument()&lt;/code&gt; &lt;/a&gt;。以&lt;a href=&quot;#argparse.FileType&quot;&gt; &lt;code&gt;FileType&lt;/code&gt; &lt;/a&gt;对象为类型的参数将以文件的形式打开命令行参数，这些文件具有所请求的模式，缓冲区大小，编码和错误处理（有关更多详细信息，请参见&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数）：</target>
        </trans-unit>
        <trans-unit id="30f75f59a9a7268631e66d52cbd510df63fb3b35" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ast.NodeTransformer&quot;&gt;&lt;code&gt;NodeTransformer&lt;/code&gt;&lt;/a&gt; will walk the AST and use the return value of the visitor methods to replace or remove the old node. If the return value of the visitor method is &lt;code&gt;None&lt;/code&gt;, the node will be removed from its location, otherwise it is replaced with the return value. The return value may be the original node in which case no replacement takes place.</source>
          <target state="translated">该&lt;a href=&quot;#ast.NodeTransformer&quot;&gt; &lt;code&gt;NodeTransformer&lt;/code&gt; &lt;/a&gt;会走的AST，并使用访问者方法的返回值来替换或删除旧节点。如果visitor方法的返回值为 &lt;code&gt;None&lt;/code&gt; ，则将从其位置中删除该节点，否则将其替换为返回值。返回值可能是原始节点，在这种情况下不会发生替换。</target>
        </trans-unit>
        <trans-unit id="44129255c25550851ce7e2aa0778b3b4d25d9e16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#asyncio-event-loop&quot;&gt;Event Loop Methods&lt;/a&gt; section lists all methods that an alternative implementation of &lt;code&gt;AbstractEventLoop&lt;/code&gt; should have defined.</source>
          <target state="translated">&amp;ldquo; &lt;a href=&quot;#asyncio-event-loop&quot;&gt;事件循环方法&amp;rdquo;&lt;/a&gt;部分列出了 &lt;code&gt;AbstractEventLoop&lt;/code&gt; 的替代实现应定义的所有方法。</target>
        </trans-unit>
        <trans-unit id="566b6568a456d6b2074cb276dfb3442143d58f54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#asyncio.create_task&quot;&gt;&lt;code&gt;asyncio.create_task()&lt;/code&gt;&lt;/a&gt; function to run coroutines concurrently as asyncio &lt;a href=&quot;#asyncio.Task&quot;&gt;&lt;code&gt;Tasks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#asyncio.create_task&quot;&gt; &lt;code&gt;asyncio.create_task()&lt;/code&gt; &lt;/a&gt;函数为ASYNCIO同时运行协同程序&lt;a href=&quot;#asyncio.Task&quot;&gt; &lt;code&gt;Tasks&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0828773ce7ea3491738f68a93eb0b46a845438a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.loop.subprocess_shell&quot;&gt;&lt;code&gt;loop.subprocess_shell()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">该&lt;a href=&quot;#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.loop.subprocess_shell&quot;&gt; &lt;code&gt;loop.subprocess_shell()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="14e1e89d72e3abb7ad7a42c6bb4657ef919d4a09" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#asyncio.run&quot;&gt;&lt;code&gt;asyncio.run()&lt;/code&gt;&lt;/a&gt; function to run the top-level entry point &amp;ldquo;main()&amp;rdquo; function (see the above example.)</source>
          <target state="translated">所述&lt;a href=&quot;#asyncio.run&quot;&gt; &lt;code&gt;asyncio.run()&lt;/code&gt; &lt;/a&gt;函数来运行顶层入口点&amp;ldquo;主（）&amp;rdquo;函数（见上面的例子）。</target>
        </trans-unit>
        <trans-unit id="8c2d28f88261c63a30bcb012973da5c29ebc108f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#asyncore.dispatcher&quot;&gt;&lt;code&gt;dispatcher&lt;/code&gt;&lt;/a&gt; class is a thin wrapper around a low-level socket object. To make it more useful, it has a few methods for event-handling which are called from the asynchronous loop. Otherwise, it can be treated as a normal non-blocking socket object.</source>
          <target state="translated">所述&lt;a href=&quot;#asyncore.dispatcher&quot;&gt; &lt;code&gt;dispatcher&lt;/code&gt; &lt;/a&gt;类是一个低级别的插座对象的薄包装。为了使其更有用，它具有一些用于事件处理的方法，这些方法从异步循环中调用。否则，可以将其视为普通的非阻塞套接字对象。</target>
        </trans-unit>
        <trans-unit id="b116f4cff6f99d06c7507048ccef1a5dd888de1f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bdb.Bdb&quot;&gt;&lt;code&gt;Bdb&lt;/code&gt;&lt;/a&gt; class acts as a generic Python debugger base class.</source>
          <target state="translated">在&lt;a href=&quot;#bdb.Bdb&quot;&gt; &lt;code&gt;Bdb&lt;/code&gt; &lt;/a&gt;类作为一个通用的Python调试基类。</target>
        </trans-unit>
        <trans-unit id="62525848a0c9c88cc01e3367b6ebc3c4abb4d531" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bytes.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method should be used only if you need to know the position of &lt;em&gt;sub&lt;/em&gt;. To check if &lt;em&gt;sub&lt;/em&gt; is a substring or not, use the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator:</source>
          <target state="translated">该&lt;a href=&quot;#bytes.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;方法应该，如果你需要知道的位置仅用于&lt;em&gt;子&lt;/em&gt;。要检查&lt;em&gt;sub&lt;/em&gt;是否是子字符串，请使用&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;运算符：</target>
        </trans-unit>
        <trans-unit id="4f83c236af0193f09556e52c525097851bdea2da" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bytes.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method should be used only if you need to know the position of &lt;em&gt;sub&lt;/em&gt;. To check if &lt;em&gt;sub&lt;/em&gt; is a substring or not, use the &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841a1b693b3ece85984308dadf9e2ac6e168a09d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bz2.BZ2Compressor&quot;&gt;&lt;code&gt;BZ2Compressor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#bz2.BZ2Decompressor&quot;&gt;&lt;code&gt;BZ2Decompressor&lt;/code&gt;&lt;/a&gt; classes for incremental (de)compression.</source>
          <target state="translated">该&lt;a href=&quot;#bz2.BZ2Compressor&quot;&gt; &lt;code&gt;BZ2Compressor&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#bz2.BZ2Decompressor&quot;&gt; &lt;code&gt;BZ2Decompressor&lt;/code&gt; &lt;/a&gt;类增量（DE）压缩。</target>
        </trans-unit>
        <trans-unit id="2251eac4644699f0e79ff35b47a34df095f7a6ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bz2.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#bz2.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; functions for one-shot (de)compression.</source>
          <target state="translated">的&lt;a href=&quot;#bz2.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#bz2.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt;函数用于一次性（解）压缩。</target>
        </trans-unit>
        <trans-unit id="dde39ca4d885c419c3b0a279b055ec1bdc4d0f3f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bz2.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function and &lt;a href=&quot;#bz2.BZ2File&quot;&gt;&lt;code&gt;BZ2File&lt;/code&gt;&lt;/a&gt; class for reading and writing compressed files.</source>
          <target state="translated">在&lt;a href=&quot;#bz2.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数和&lt;a href=&quot;#bz2.BZ2File&quot;&gt; &lt;code&gt;BZ2File&lt;/code&gt; &lt;/a&gt;类读取和写入压缩的文件。</target>
        </trans-unit>
        <trans-unit id="bc4869d7893639e257f10707e3378acdfc95d33f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#callback-handles&quot;&gt;Callback Handles&lt;/a&gt; section documents the &lt;a href=&quot;#asyncio.Handle&quot;&gt;&lt;code&gt;Handle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.TimerHandle&quot;&gt;&lt;code&gt;TimerHandle&lt;/code&gt;&lt;/a&gt; instances which are returned from scheduling methods such as &lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.loop.call_later&quot;&gt;&lt;code&gt;loop.call_later()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">该&lt;a href=&quot;#callback-handles&quot;&gt;回调把手&lt;/a&gt;部文件&lt;a href=&quot;#asyncio.Handle&quot;&gt; &lt;code&gt;Handle&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.TimerHandle&quot;&gt; &lt;code&gt;TimerHandle&lt;/code&gt; &lt;/a&gt;其由调度方法如返回实例&lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.loop.call_later&quot;&gt; &lt;code&gt;loop.call_later()&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="19e3ac2baf30036958038b751ca097c70434efec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#choices&quot;&gt;choices&lt;/a&gt; keyword argument may be more convenient for type checkers that simply check against a range of values:</source>
          <target state="translated">该&lt;a href=&quot;#choices&quot;&gt;选择&lt;/a&gt;关键字参数可以是用于类型检查，简单地核对值的范围更方便：</target>
        </trans-unit>
        <trans-unit id="73eea60dabe306547088c9373001f60cb2cf86dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt; class provides a simple framework for writing line-oriented command interpreters. These are often useful for test harnesses, administrative tools, and prototypes that will later be wrapped in a more sophisticated interface.</source>
          <target state="translated">该&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; 的&lt;/a&gt;类提供了编写面向行的命令解释一个简单的框架。这些通常对于测试工具，管理工具和原型很有用，这些工​​具随后将被包装在一个更复杂的界面中。</target>
        </trans-unit>
        <trans-unit id="1178f6d26db9b3eb867ab07976420e2db629ec7d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#cmdoption-unittest-c&quot;&gt;&lt;code&gt;-c/--catch&lt;/code&gt;&lt;/a&gt; command-line option to unittest, along with the &lt;code&gt;catchbreak&lt;/code&gt; parameter to &lt;a href=&quot;#unittest.main&quot;&gt;&lt;code&gt;unittest.main()&lt;/code&gt;&lt;/a&gt;, provide more friendly handling of control-C during a test run. With catch break behavior enabled control-C will allow the currently running test to complete, and the test run will then end and report all the results so far. A second control-c will raise a &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt; in the usual way.</source>
          <target state="translated">unittest 的&lt;a href=&quot;#cmdoption-unittest-c&quot;&gt; &lt;code&gt;-c/--catch&lt;/code&gt; &lt;/a&gt;命令行选项以及&lt;a href=&quot;#unittest.main&quot;&gt; &lt;code&gt;unittest.main()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;catchbreak&lt;/code&gt; 参数，在测试运行期间提供了对Control-C的更友好处理。启用捕获中断行为后，control-C将允许当前运行的测试完成，然后测试运行将结束并报告到目前为止的所有结果。第二个Control-c将以通常的方式引发&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63490877ff3a85f9c2d44dd0355422e762f325ce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#cmdoption-unittest-discover-s&quot;&gt;&lt;code&gt;-s&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#cmdoption-unittest-discover-p&quot;&gt;&lt;code&gt;-p&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#cmdoption-unittest-discover-t&quot;&gt;&lt;code&gt;-t&lt;/code&gt;&lt;/a&gt; options can be passed in as positional arguments in that order. The following two command lines are equivalent:</source>
          <target state="translated">可以按顺序将&lt;a href=&quot;#cmdoption-unittest-discover-s&quot;&gt; &lt;code&gt;-s&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#cmdoption-unittest-discover-p&quot;&gt; &lt;code&gt;-p&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#cmdoption-unittest-discover-t&quot;&gt; &lt;code&gt;-t&lt;/code&gt; &lt;/a&gt;选项作为位置参数传递。以下两个命令行是等效的：</target>
        </trans-unit>
        <trans-unit id="6c59426c7e0123b84cab685c4b9f14badbba1fce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#code.InteractiveConsole&quot;&gt;&lt;code&gt;InteractiveConsole&lt;/code&gt;&lt;/a&gt; class is a subclass of &lt;a href=&quot;#code.InteractiveInterpreter&quot;&gt;&lt;code&gt;InteractiveInterpreter&lt;/code&gt;&lt;/a&gt;, and so offers all the methods of the interpreter objects as well as the following additions.</source>
          <target state="translated">该&lt;a href=&quot;#code.InteractiveConsole&quot;&gt; &lt;code&gt;InteractiveConsole&lt;/code&gt; &lt;/a&gt;类的子类&lt;a href=&quot;#code.InteractiveInterpreter&quot;&gt; &lt;code&gt;InteractiveInterpreter&lt;/code&gt; &lt;/a&gt;，所以提供的所有解释的方法的对象，以及下面的补充。</target>
        </trans-unit>
        <trans-unit id="96c5b96dabb5d58406339e28f0d18463c785b843" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt; class is used for decoding an input in multiple steps. It defines the following methods which every incremental decoder must define in order to be compatible with the Python codec registry.</source>
          <target state="translated">所述&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; &lt;/a&gt;类用于在多个步骤中进行解码的输入。它定义了每个增量解码器都必须定义的以下方法，以便与Python编解码器注册表兼容。</target>
        </trans-unit>
        <trans-unit id="12b6dabe58008d386c68a529a1a3d84cc72a3fd8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt; may implement different error handling schemes by providing the &lt;em&gt;errors&lt;/em&gt; keyword argument. See &lt;a href=&quot;#error-handlers&quot;&gt;Error Handlers&lt;/a&gt; for possible values.</source>
          <target state="translated">通过提供&lt;em&gt;errors&lt;/em&gt;关键字参数，&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; &lt;/a&gt;可以实现不同的错误处理方案。有关可能的值，请参见&lt;a href=&quot;#error-handlers&quot;&gt;错误处理程序&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e185664ec2161e86c9fbec456c7de05f6c65ac1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt; classes provide the basic interface for incremental encoding and decoding. Encoding/decoding the input isn&amp;rsquo;t done with one call to the stateless encoder/decoder function, but with multiple calls to the &lt;a href=&quot;#codecs.IncrementalEncoder.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#codecs.IncrementalDecoder.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt; method of the incremental encoder/decoder. The incremental encoder/decoder keeps track of the encoding/decoding process during method calls.</source>
          <target state="translated">的&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; &lt;/a&gt;类提供了增量编码和解码的基本接口。输入的编码/解码不是通过对无状态编码器/解码器函数的一次调用完成的，而是通过对增量编码器/解码器的&lt;a href=&quot;#codecs.IncrementalEncoder.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#codecs.IncrementalDecoder.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt;方法的多次调用完成的。增量编码器/解码器在方法调用期间跟踪编码/解码过程。</target>
        </trans-unit>
        <trans-unit id="bc96bb1e5bb997de11b564f8d27ab528a38179fa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; class is used for encoding an input in multiple steps. It defines the following methods which every incremental encoder must define in order to be compatible with the Python codec registry.</source>
          <target state="translated">所述&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; &lt;/a&gt;类用于在多个步骤中编码的输入。它定义了每个增量编码器都必须定义的以下方法，以便与Python编解码器注册表兼容。</target>
        </trans-unit>
        <trans-unit id="e2bd8b06f67f9be3a323becd255a18bceb81210a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; may implement different error handling schemes by providing the &lt;em&gt;errors&lt;/em&gt; keyword argument. See &lt;a href=&quot;#error-handlers&quot;&gt;Error Handlers&lt;/a&gt; for possible values.</source>
          <target state="translated">通过提供&lt;em&gt;errors&lt;/em&gt;关键字参数，&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; &lt;/a&gt;可以实现不同的错误处理方案。有关可能的值，请参见&lt;a href=&quot;#error-handlers&quot;&gt;错误处理程序&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dfcf2fee9aa1a95053dfac968fc8995ea968b54f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; class is a subclass of &lt;code&gt;Codec&lt;/code&gt; and defines the following methods which every stream reader must define in order to be compatible with the Python codec registry.</source>
          <target state="translated">所述&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;类是的一个子类 &lt;code&gt;Codec&lt;/code&gt; ，并且限定其中每个流读取器必须按顺序定义以下方法为与编解码器的Python注册表兼容。</target>
        </trans-unit>
        <trans-unit id="a74db9f878ab20f93cdfdd2fabf45e07bd3fc4d5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; may implement different error handling schemes by providing the &lt;em&gt;errors&lt;/em&gt; keyword argument. See &lt;a href=&quot;#error-handlers&quot;&gt;Error Handlers&lt;/a&gt; for the standard error handlers the underlying stream codec may support.</source>
          <target state="translated">通过提供&lt;em&gt;errors&lt;/em&gt;关键字参数，&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;可以实现不同的错误处理方案。有关基础流编解码器可能支持的标准错误处理&lt;a href=&quot;#error-handlers&quot;&gt;程序&lt;/a&gt;，请参见错误处理程序。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa1d63e6a14c5c60c083aca1e383d623af746e00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt;&lt;code&gt;StreamReaderWriter&lt;/code&gt;&lt;/a&gt; is a convenience class that allows wrapping streams which work in both read and write modes.</source>
          <target state="translated">该&lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt; &lt;code&gt;StreamReaderWriter&lt;/code&gt; &lt;/a&gt;是一个方便的类，允许在读写模式包装流，两者的工作。</target>
        </trans-unit>
        <trans-unit id="0a7733e3e5e214a64bb04476828836ff2628a303" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamRecoder&quot;&gt;&lt;code&gt;StreamRecoder&lt;/code&gt;&lt;/a&gt; translates data from one encoding to another, which is sometimes useful when dealing with different encoding environments.</source>
          <target state="translated">所述&lt;a href=&quot;#codecs.StreamRecoder&quot;&gt; &lt;code&gt;StreamRecoder&lt;/code&gt; &lt;/a&gt;从一种编码到另一个，不同的编码处理的环境时，其有时是有用的转换数据。</target>
        </trans-unit>
        <trans-unit id="c06bfff712d73bdd42d5d056eaffd3eeff3467ac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; classes provide generic working interfaces which can be used to implement new encoding submodules very easily. See &lt;code&gt;encodings.utf_8&lt;/code&gt; for an example of how this is done.</source>
          <target state="translated">该&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; 的&lt;/a&gt;类提供可用于非常轻松地实现新的编码子模块的通用的工作界面。有关如何完成此操作的示例，请参见 &lt;code&gt;encodings.utf_8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fb9c4cff14e46f29004385b19f7361543d171a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; class is a subclass of &lt;code&gt;Codec&lt;/code&gt; and defines the following methods which every stream writer must define in order to be compatible with the Python codec registry.</source>
          <target state="translated">所述&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;类是的一个子类 &lt;code&gt;Codec&lt;/code&gt; ，并且限定其中每个流作家必须按顺序定义以下方法为与编解码器的Python注册表兼容。</target>
        </trans-unit>
        <trans-unit id="aef1b8ecf8fd76381a0ffc278a060efd6c603c35" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; may implement different error handling schemes by providing the &lt;em&gt;errors&lt;/em&gt; keyword argument. See &lt;a href=&quot;#error-handlers&quot;&gt;Error Handlers&lt;/a&gt; for the standard error handlers the underlying stream codec may support.</source>
          <target state="translated">通过提供&lt;em&gt;errors&lt;/em&gt;关键字参数，&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;可以实现不同的错误处理方案。有关基础流编解码器可能支持的标准错误处理&lt;a href=&quot;#error-handlers&quot;&gt;程序&lt;/a&gt;，请参见错误处理程序。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bee3555767bf16eb1a388914a85c6ca66f4d100" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; class only makes updates (writes and deletions) to the first mapping in the chain while lookups will search the full chain. However, if deep writes and deletions are desired, it is easy to make a subclass that updates keys found deeper in the chain:</source>
          <target state="translated">该&lt;a href=&quot;#collections.ChainMap&quot;&gt; &lt;code&gt;ChainMap&lt;/code&gt; &lt;/a&gt;类才有更新（写入和删除），以在链中的第一个映射，同时查找将搜索上满链。但是，如果需要深度写入和删除操作，则可以轻松创建一个子类来更新在链中更深处找到的密钥：</target>
        </trans-unit>
        <trans-unit id="f7e12096cb1dcc3b817df5f7b165f68e249dcd7a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; class itself is a dictionary subclass with no restrictions on its keys and values. The values are intended to be numbers representing counts, but you &lt;em&gt;could&lt;/em&gt; store anything in the value field.</source>
          <target state="translated">该&lt;a href=&quot;#collections.Counter&quot;&gt; &lt;code&gt;Counter&lt;/code&gt; &lt;/a&gt;类本身是一本字典的子类，在其键和值没有任何限制。这些值旨在为代表计数的数字，但是您&lt;em&gt;可以&lt;/em&gt;在值字段中存储任何内容。</target>
        </trans-unit>
        <trans-unit id="6086cbed3ff10b04a2566042c0149ffc2e90a216" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.Counter.elements&quot;&gt;&lt;code&gt;elements()&lt;/code&gt;&lt;/a&gt; method requires integer counts. It ignores zero and negative counts.</source>
          <target state="translated">的&lt;a href=&quot;#collections.Counter.elements&quot;&gt; &lt;code&gt;elements()&lt;/code&gt; &lt;/a&gt;方法需要整数计数。它忽略零和负计数。</target>
        </trans-unit>
        <trans-unit id="509800d2c98aa249e5689f757a5ee7ba2256ee10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.Counter.most_common&quot;&gt;&lt;code&gt;most_common()&lt;/code&gt;&lt;/a&gt; method requires only that the values be orderable.</source>
          <target state="translated">所述&lt;a href=&quot;#collections.Counter.most_common&quot;&gt; &lt;code&gt;most_common()&lt;/code&gt; &lt;/a&gt;方法只需要这些值可订购。</target>
        </trans-unit>
        <trans-unit id="930c05586beb6ba13547b88f3994228dfa5ece0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; was designed to be good at reordering operations. Space efficiency, iteration speed, and the performance of update operations were secondary.</source>
          <target state="translated">该&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;的目的是要善于重新排序操作。空间效率，迭代速度和更新操作的性能是次要的。</target>
        </trans-unit>
        <trans-unit id="14c700a71a41622dbac3704cd157df6e5a883a12" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.OrderedDict.popitem&quot;&gt;&lt;code&gt;popitem()&lt;/code&gt;&lt;/a&gt; method for ordered dictionaries returns and removes a (key, value) pair. The pairs are returned in</source>
          <target state="translated">有序字典的&lt;a href=&quot;#collections.OrderedDict.popitem&quot;&gt; &lt;code&gt;popitem()&lt;/code&gt; &lt;/a&gt;方法返回并删除（键，值）对。配对返回</target>
        </trans-unit>
        <trans-unit id="a69c67ce83ebf3a08e3f3bb6aedaab859ff19801" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; mixin provides a &lt;code&gt;_hash()&lt;/code&gt; method to compute a hash value for the set; however, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; is not defined because not all sets are hashable or immutable. To add set hashability using mixins, inherit from both &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#collections.abc.Hashable&quot;&gt;&lt;code&gt;Hashable()&lt;/code&gt;&lt;/a&gt;, then define &lt;code&gt;__hash__ = Set._hash&lt;/code&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;混入提供 &lt;code&gt;_hash()&lt;/code&gt; 方法来计算对于该组的散列值; 但是，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__hash__&quot;&gt; &lt;code&gt;__hash__()&lt;/code&gt; &lt;/a&gt;未定义，因为并非所有集合都是可哈希的或不可变的。要使用mixins添加集哈希性，请同时继承&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#collections.abc.Hashable&quot;&gt; &lt;code&gt;Hashable()&lt;/code&gt; &lt;/a&gt;，然后定义 &lt;code&gt;__hash__ = Set._hash&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7b8918f7c69d8fb5b3e54d74bb5e4292ec99fdd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; mixin provides a &lt;code&gt;_hash()&lt;/code&gt; method to compute a hash value for the set; however, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__hash__&quot;&gt;&lt;code&gt;__hash__()&lt;/code&gt;&lt;/a&gt; is not defined because not all sets are hashable or immutable. To add set hashability using mixins, inherit from both &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#collections.abc.Hashable&quot;&gt;&lt;code&gt;Hashable()&lt;/code&gt;&lt;/a&gt;, then define &lt;code&gt;__hash__ = Set._hash&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221671db373989976e5802c67c139377271af252" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#collections.deque.rotate&quot;&gt;&lt;code&gt;rotate()&lt;/code&gt;&lt;/a&gt; method provides a way to implement &lt;a href=&quot;#collections.deque&quot;&gt;&lt;code&gt;deque&lt;/code&gt;&lt;/a&gt; slicing and deletion. For example, a pure Python implementation of &lt;code&gt;del d[n]&lt;/code&gt; relies on the &lt;code&gt;rotate()&lt;/code&gt; method to position elements to be popped:</source>
          <target state="translated">该&lt;a href=&quot;#collections.deque.rotate&quot;&gt; &lt;code&gt;rotate()&lt;/code&gt; &lt;/a&gt;方法提供了一种方法来实现&lt;a href=&quot;#collections.deque&quot;&gt; &lt;code&gt;deque&lt;/code&gt; &lt;/a&gt;切片和删除。例如， &lt;code&gt;del d[n]&lt;/code&gt; 的纯Python实现依赖于 &lt;code&gt;rotate()&lt;/code&gt; 方法来定位要弹出的元素：</target>
        </trans-unit>
        <trans-unit id="4e569183bc5f6990d984884660176ba9ef4b859c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; class encapsulates the asynchronous execution of a callable. &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; instances are created by &lt;a href=&quot;#concurrent.futures.Executor.submit&quot;&gt;&lt;code&gt;Executor.submit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;类封装了一个可调用的异步执行。&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;实例由&lt;a href=&quot;#concurrent.futures.Executor.submit&quot;&gt; &lt;code&gt;Executor.submit()&lt;/code&gt; &lt;/a&gt;创建。</target>
        </trans-unit>
        <trans-unit id="1822bc14bc9a0b1a844ed1deebde9d250080ac69" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt; class is an &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; subclass that uses a pool of processes to execute calls asynchronously. &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt; uses the &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; module, which allows it to side-step the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt; but also means that only picklable objects can be executed and returned.</source>
          <target state="translated">该&lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; &lt;/a&gt;类是一个&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;，它使用的过程池异步执行调用子类。&lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; &lt;/a&gt;使用&lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;模块，该模块可以使其避开&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;全局解释器锁，&lt;/a&gt;但也意味着只能执行和返回可拾取对象。</target>
        </trans-unit>
        <trans-unit id="fa7c149d3e1ce86c3e94a3fcd271319cff19276b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt; class is an &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; subclass that uses a pool of processes to execute calls asynchronously. &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt; uses the &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; module, which allows it to side-step the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt; but also means that only picklable objects can be executed and returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203d331c7758087cc357182ac4e448ee2ceee40b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#copy.deepcopy&quot;&gt;&lt;code&gt;deepcopy()&lt;/code&gt;&lt;/a&gt; function avoids these problems by:</source>
          <target state="translated">该&lt;a href=&quot;#copy.deepcopy&quot;&gt; &lt;code&gt;deepcopy()&lt;/code&gt; &lt;/a&gt;函数避免了这些问题：</target>
        </trans-unit>
        <trans-unit id="caa491dc6320beb3427a9719796a171735692831" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.Dialect&quot;&gt;&lt;code&gt;Dialect&lt;/code&gt;&lt;/a&gt; class is a container class relied on primarily for its attributes, which are used to define the parameters for a specific &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">的&lt;a href=&quot;#csv.Dialect&quot;&gt; &lt;code&gt;Dialect&lt;/code&gt; &lt;/a&gt;类是一个容器类依靠主要用于它的属性，这是用来定义用于特定的参数&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="b15a7ae6b823bade54f2f0c1b40edf7363d08013" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.Sniffer&quot;&gt;&lt;code&gt;Sniffer&lt;/code&gt;&lt;/a&gt; class is used to deduce the format of a CSV file.</source>
          <target state="translated">该&lt;a href=&quot;#csv.Sniffer&quot;&gt; &lt;code&gt;Sniffer&lt;/code&gt; &lt;/a&gt;类用于推导出CSV文件的格式。</target>
        </trans-unit>
        <trans-unit id="d23bf26ffbe4dd5b952da6577a2a178717e8ca08" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.Sniffer&quot;&gt;&lt;code&gt;Sniffer&lt;/code&gt;&lt;/a&gt; class provides two methods:</source>
          <target state="translated">该&lt;a href=&quot;#csv.Sniffer&quot;&gt; &lt;code&gt;Sniffer&lt;/code&gt; &lt;/a&gt;类提供了两个方法：</target>
        </trans-unit>
        <trans-unit id="ea19f633e775d51af41f15adaed6eeb3e13872ce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.excel&quot;&gt;&lt;code&gt;excel&lt;/code&gt;&lt;/a&gt; class defines the usual properties of an Excel-generated CSV file. It is registered with the dialect name &lt;code&gt;'excel'&lt;/code&gt;.</source>
          <target state="translated">在&lt;a href=&quot;#csv.excel&quot;&gt; &lt;code&gt;excel&lt;/code&gt; &lt;/a&gt;类定义的Excel生成CSV文件的通常的性质。它以方言名称 &lt;code&gt;'excel'&lt;/code&gt; 注册。</target>
        </trans-unit>
        <trans-unit id="553e6a4ea2302f3aa758db648fd949972f5c4bb3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.excel_tab&quot;&gt;&lt;code&gt;excel_tab&lt;/code&gt;&lt;/a&gt; class defines the usual properties of an Excel-generated TAB-delimited file. It is registered with the dialect name &lt;code&gt;'excel-tab'&lt;/code&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;#csv.excel_tab&quot;&gt; &lt;code&gt;excel_tab&lt;/code&gt; &lt;/a&gt;类定义Excel生成的制表符分隔的文件的通常的性质。它以方言名称 &lt;code&gt;'excel-tab'&lt;/code&gt; 注册。</target>
        </trans-unit>
        <trans-unit id="023f18c8a27378a5268ca8b5eafbc5ee0e99be10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; is hard-coded to recognise either &lt;code&gt;'\r'&lt;/code&gt; or &lt;code&gt;'\n'&lt;/code&gt; as end-of-line, and ignores &lt;em&gt;lineterminator&lt;/em&gt;. This behavior may change in the future.</source>
          <target state="translated">该&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;是硬编码为任一识别 &lt;code&gt;'\r'&lt;/code&gt; 或 &lt;code&gt;'\n'&lt;/code&gt; 作为结束线，并且忽略&lt;em&gt;lineterminator&lt;/em&gt;。这种行为将来可能会改变。</target>
        </trans-unit>
        <trans-unit id="b35b42348b19c6b1314a5e48f0b28d92824e17ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#csv.unix_dialect&quot;&gt;&lt;code&gt;unix_dialect&lt;/code&gt;&lt;/a&gt; class defines the usual properties of a CSV file generated on UNIX systems, i.e. using &lt;code&gt;'\n'&lt;/code&gt; as line terminator and quoting all fields. It is registered with the dialect name &lt;code&gt;'unix'&lt;/code&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;#csv.unix_dialect&quot;&gt; &lt;code&gt;unix_dialect&lt;/code&gt; &lt;/a&gt;类定义了一个CSV在UNIX系统上产生使用文件，即通常的属性 &lt;code&gt;'\n'&lt;/code&gt; 作为行终止和引用的所有字段。它以方言名称 &lt;code&gt;'unix'&lt;/code&gt; 注册。</target>
        </trans-unit>
        <trans-unit id="898a4ae235ffd60b9f411cb15628737373ee7a1e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt;&lt;code&gt;CFUNCTYPE()&lt;/code&gt;&lt;/a&gt; factory function creates types for callback functions using the &lt;code&gt;cdecl&lt;/code&gt; calling convention. On Windows, the &lt;a href=&quot;#ctypes.WINFUNCTYPE&quot;&gt;&lt;code&gt;WINFUNCTYPE()&lt;/code&gt;&lt;/a&gt; factory function creates types for callback functions using the &lt;code&gt;stdcall&lt;/code&gt; calling convention.</source>
          <target state="translated">该&lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt; &lt;code&gt;CFUNCTYPE()&lt;/code&gt; &lt;/a&gt;工厂函数使用回调函数创建类型 &lt;code&gt;cdecl&lt;/code&gt; 调用约定。在Windows上，&lt;a href=&quot;#ctypes.WINFUNCTYPE&quot;&gt; &lt;code&gt;WINFUNCTYPE()&lt;/code&gt; &lt;/a&gt;工厂函数使用 &lt;code&gt;stdcall&lt;/code&gt; 调用约定为回调函数创建类型。</target>
        </trans-unit>
        <trans-unit id="ea1faf8022d86fcafadc0d6214d8c226523b156e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; class variable must, however, be defined before the type is first used (an instance is created, &lt;a href=&quot;#ctypes.sizeof&quot;&gt;&lt;code&gt;sizeof()&lt;/code&gt;&lt;/a&gt; is called on it, and so on). Later assignments to the &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; class variable will raise an AttributeError.</source>
          <target state="translated">所述&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;类变量必须的，然而，在第一次使用类型之前进行定义（一个实例被创建，&lt;a href=&quot;#ctypes.sizeof&quot;&gt; &lt;code&gt;sizeof()&lt;/code&gt; &lt;/a&gt;被调用就可以了，等等）。以后对&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;类变量的分配将引发AttributeError。</target>
        </trans-unit>
        <trans-unit id="39e788a6f6117703fe1acaddcb5b42f60830bc05" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ctypes.cast&quot;&gt;&lt;code&gt;cast()&lt;/code&gt;&lt;/a&gt; function can be used to cast a ctypes instance into a pointer to a different ctypes data type. &lt;a href=&quot;#ctypes.cast&quot;&gt;&lt;code&gt;cast()&lt;/code&gt;&lt;/a&gt; takes two parameters, a ctypes object that is or can be converted to a pointer of some kind, and a ctypes pointer type. It returns an instance of the second argument, which references the same memory block as the first argument:</source>
          <target state="translated">的&lt;a href=&quot;#ctypes.cast&quot;&gt; &lt;code&gt;cast()&lt;/code&gt; &lt;/a&gt;函数可以被用于铸造一个ctypes实例成指针到一个不同的ctypes数据类型。&lt;a href=&quot;#ctypes.cast&quot;&gt; &lt;code&gt;cast()&lt;/code&gt; &lt;/a&gt;具有两个参数，一个ctypes对象（可以转换为某种类型的指针或可以将其转换为某种类型的指针）和一个ctypes指针类型。它返回第二个参数的实例，该实例引用与第一个参数相同的内存块：</target>
        </trans-unit>
        <trans-unit id="f04e4712598dbb153bd55f26be6b5a134f66e409" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ctypes.create_string_buffer&quot;&gt;&lt;code&gt;create_string_buffer()&lt;/code&gt;&lt;/a&gt; function replaces the &lt;code&gt;c_buffer()&lt;/code&gt; function (which is still available as an alias), as well as the &lt;code&gt;c_string()&lt;/code&gt; function from earlier ctypes releases. To create a mutable memory block containing unicode characters of the C type &lt;code&gt;wchar_t&lt;/code&gt; use the &lt;a href=&quot;#ctypes.create_unicode_buffer&quot;&gt;&lt;code&gt;create_unicode_buffer()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">该&lt;a href=&quot;#ctypes.create_string_buffer&quot;&gt; &lt;code&gt;create_string_buffer()&lt;/code&gt; &lt;/a&gt;函数替换 &lt;code&gt;c_buffer()&lt;/code&gt; 函数（这仍然是可以作为一个别名），还有 &lt;code&gt;c_string()&lt;/code&gt; 从早期的ctypes版本的功能。要创建包含C类型 &lt;code&gt;wchar_t&lt;/code&gt; 的 Unicode字符的可变存储器块，请使用&lt;a href=&quot;#ctypes.create_unicode_buffer&quot;&gt; &lt;code&gt;create_unicode_buffer()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="fc1abd016bdf60e677ca1c13260f47722c20943b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ctypes.resize&quot;&gt;&lt;code&gt;resize()&lt;/code&gt;&lt;/a&gt; function can be used to resize the memory buffer of an existing ctypes object. The function takes the object as first argument, and the requested size in bytes as the second argument. The memory block cannot be made smaller than the natural memory block specified by the objects type, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if this is tried:</source>
          <target state="translated">的&lt;a href=&quot;#ctypes.resize&quot;&gt; &lt;code&gt;resize()&lt;/code&gt; &lt;/a&gt;函数可以被用来调整一个现有的ctypes对象的存储缓冲器中。该函数将对象作为第一个参数，并将请求的字节大小作为第二个参数。不能使内存块小于由对象类型指定的自然内存块，如果尝试这样做会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="17c7ed721f6c997536e3eae62333ddd1ec2d70f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#curses.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; routine, if used, must be called before &lt;a href=&quot;#curses.initscr&quot;&gt;&lt;code&gt;initscr()&lt;/code&gt;&lt;/a&gt; is called. The effect is that, during those calls, &lt;code id=&quot;index-0&quot;&gt;LINES&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt;; the capabilities &lt;code&gt;clear&lt;/code&gt;, &lt;code&gt;cup&lt;/code&gt;, &lt;code&gt;cud&lt;/code&gt;, &lt;code&gt;cud1&lt;/code&gt;, &lt;code&gt;cuu1&lt;/code&gt;, &lt;code&gt;cuu&lt;/code&gt;, &lt;code&gt;vpa&lt;/code&gt; are disabled; and the &lt;code&gt;home&lt;/code&gt; string is set to the value of &lt;code&gt;cr&lt;/code&gt;. The effect is that the cursor is confined to the current line, and so are screen updates. This may be used for enabling character-at-a-time line editing without touching the rest of the screen.</source>
          <target state="translated">所述&lt;a href=&quot;#curses.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;例行程序，如果使用的话，必须之前调用&lt;a href=&quot;#curses.initscr&quot;&gt; &lt;code&gt;initscr()&lt;/code&gt; &lt;/a&gt;被调用。结果是，在这些调用期间， &lt;code id=&quot;index-0&quot;&gt;LINES&lt;/code&gt; 设置为 &lt;code&gt;1&lt;/code&gt; ；功能 &lt;code&gt;clear&lt;/code&gt; ， &lt;code&gt;cup&lt;/code&gt; ， &lt;code&gt;cud&lt;/code&gt; ， &lt;code&gt;cud1&lt;/code&gt; ， &lt;code&gt;cuu1&lt;/code&gt; ， &lt;code&gt;cuu&lt;/code&gt; ， &lt;code&gt;vpa&lt;/code&gt; 被禁用;并将 &lt;code&gt;home&lt;/code&gt; 字符串设置为 &lt;code&gt;cr&lt;/code&gt; 的值。结果是光标被限制在当前行内，屏幕更新也是如此。这可用于启用一次字符行编辑而无需触摸屏幕的其余部分。</target>
        </trans-unit>
        <trans-unit id="316363716152925b75d3cb4ebaef9b0e32360b84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator examines the class to find &lt;code&gt;field&lt;/code&gt;s. A &lt;code&gt;field&lt;/code&gt; is defined as class variable that has a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-variable-annotation&quot;&gt;type annotation&lt;/a&gt;. With two exceptions described below, nothing in &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; examines the type specified in the variable annotation.</source>
          <target state="translated">该&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;装饰检查类找 &lt;code&gt;field&lt;/code&gt; 秒。甲 &lt;code&gt;field&lt;/code&gt; 被定义为具有类变量&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-variable-annotation&quot;&gt;类型的注释&lt;/a&gt;。除了下面描述的两个例外，&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; 中的&lt;/a&gt;任何内容都不会检查变量注释中指定的类型。</target>
        </trans-unit>
        <trans-unit id="96adc96118b6066bb437891edcd301e55f301450" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator examines the class to find &lt;code&gt;field&lt;/code&gt;s. A &lt;code&gt;field&lt;/code&gt; is defined as class variable that has a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-variable-annotation&quot;&gt;type annotation&lt;/a&gt;. With two exceptions described below, nothing in &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; examines the type specified in the variable annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4699e9b5a61dff36896adb38ef9387de7f4bbf32" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator will add various &amp;ldquo;dunder&amp;rdquo; methods to the class, described below. If any of the added methods already exist on the class, the behavior depends on the parameter, as documented below. The decorator returns the same class that is called on; no new class is created.</source>
          <target state="translated">所述&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;装饰器将添加各种&amp;ldquo;dunder&amp;rdquo;的方法对类，如下所述。如果类中已经存在任何添加的方法，则行为取决于参数，如下所述。装饰器返回与调用相同的类；没有创建新的类。</target>
        </trans-unit>
        <trans-unit id="63c38db09f7ff00463891fd5330badf211e2c04f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; types share these common features:</source>
          <target state="translated">该&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;类型共享这些共同的特点：</target>
        </trans-unit>
        <trans-unit id="7285c2c2396c8d7548a1767431a66dc14e38b3e7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; class is a subclass of &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt;, each instance of which represents a timezone defined by a fixed offset from UTC.</source>
          <target state="translated">的&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;类是的子类&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;，每一个实例，其中表示通过从UTC的固定偏移定义的时区。</target>
        </trans-unit>
        <trans-unit id="30ab4c018014c365ee7ffb771c34bba718d05f93" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; class defines several general purpose methods as well as a large number of methods for doing arithmetic directly in a given context. In addition, for each of the &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; methods described above (with the exception of the &lt;code&gt;adjusted()&lt;/code&gt; and &lt;code&gt;as_tuple()&lt;/code&gt; methods) there is a corresponding &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; method. For example, for a &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; instance &lt;code&gt;C&lt;/code&gt; and &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;C.exp(x)&lt;/code&gt; is equivalent to &lt;code&gt;x.exp(context=C)&lt;/code&gt;. Each &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; method accepts a Python integer (an instance of &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;) anywhere that a Decimal instance is accepted.</source>
          <target state="translated">在&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;类定义了几个通用的方法，以及用于在特定情况下做算术直接了大量的方法。另外，对于上述每个&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;方法（ &lt;code&gt;adjusted()&lt;/code&gt; 和 &lt;code&gt;as_tuple()&lt;/code&gt; 方法除外）都有一个对应的&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;方法。例如，对于&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;实例 &lt;code&gt;C&lt;/code&gt; 和&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;实例 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;C.exp(x)&lt;/code&gt; 等效于 &lt;code&gt;x.exp(context=C)&lt;/code&gt; 。每个&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;方法都接受一个Python整数（&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; 的&lt;/a&gt;一个实例）接受十进制实例的任何地方。</target>
        </trans-unit>
        <trans-unit id="4c2451a4b748fe7038fb95ffc7f31dc59d1bfe5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#decimal.getcontext&quot;&gt;&lt;code&gt;getcontext()&lt;/code&gt;&lt;/a&gt; function accesses a different &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; object for each thread. Having separate thread contexts means that threads may make changes (such as &lt;code&gt;getcontext().prec=10&lt;/code&gt;) without interfering with other threads.</source>
          <target state="translated">所述&lt;a href=&quot;#decimal.getcontext&quot;&gt; &lt;code&gt;getcontext()&lt;/code&gt; &lt;/a&gt;函数访问一个不同的&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;为每个线程对象。具有单独的线程上下文意味着线程可以进行更改（例如 &lt;code&gt;getcontext().prec=10&lt;/code&gt; ）而不会干扰其他线程。</target>
        </trans-unit>
        <trans-unit id="262401b2372aaa25cb2cdfc7cb06fb241a0f0bdc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt; class has this constructor:</source>
          <target state="translated">该&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; &lt;/a&gt;类有此构造函数：</target>
        </trans-unit>
        <trans-unit id="f84a219ce565ea3dd400d91f14baef3e6167fa14" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; class has this constructor:</source>
          <target state="translated">该&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; &lt;/a&gt;类有此构造函数：</target>
        </trans-unit>
        <trans-unit id="f1a296dacbe11dd809b20737940faffda6e869f0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#difflib.get_close_matches&quot;&gt;&lt;code&gt;get_close_matches()&lt;/code&gt;&lt;/a&gt; function in this module which shows how simple code building on &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; can be used to do useful work.</source>
          <target state="translated">此模块中的&lt;a href=&quot;#difflib.get_close_matches&quot;&gt; &lt;code&gt;get_close_matches()&lt;/code&gt; &lt;/a&gt;函数说明如何使用&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; &lt;/a&gt;上的简单代码来完成有用的工作。</target>
        </trans-unit>
        <trans-unit id="7f4ec7076d0fb2f20af8c32cf7906ea9bc88fdf2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#dis.get_instructions&quot;&gt;&lt;code&gt;get_instructions()&lt;/code&gt;&lt;/a&gt; function and &lt;a href=&quot;#dis.Bytecode&quot;&gt;&lt;code&gt;Bytecode&lt;/code&gt;&lt;/a&gt; class provide details of bytecode instructions as &lt;a href=&quot;#dis.Instruction&quot;&gt;&lt;code&gt;Instruction&lt;/code&gt;&lt;/a&gt; instances:</source>
          <target state="translated">在&lt;a href=&quot;#dis.get_instructions&quot;&gt; &lt;code&gt;get_instructions()&lt;/code&gt; &lt;/a&gt;功能和&lt;a href=&quot;#dis.Bytecode&quot;&gt; &lt;code&gt;Bytecode&lt;/code&gt; &lt;/a&gt;类提供的字节码指令细节&lt;a href=&quot;#dis.Instruction&quot;&gt; &lt;code&gt;Instruction&lt;/code&gt; &lt;/a&gt;实例：</target>
        </trans-unit>
        <trans-unit id="b8609345658f9e3f7fd9c556781a8ceab1948f77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#doctest.DebugRunner&quot;&gt;&lt;code&gt;DebugRunner&lt;/code&gt;&lt;/a&gt; class is a subclass of &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; that raises an exception for the first failing example, containing information about that example. This information can be used to perform post-mortem debugging on the example.</source>
          <target state="translated">所述&lt;a href=&quot;#doctest.DebugRunner&quot;&gt; &lt;code&gt;DebugRunner&lt;/code&gt; &lt;/a&gt;类是的一个子类&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;即提高用于第一故障的例子的异常，包含有关实施例的信息。此信息可用于在示例上执行事后调试。</target>
        </trans-unit>
        <trans-unit id="a753b5aee0860388f6f4914fb3a05c949fe9effa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#doctest.DebugRunner&quot;&gt;&lt;code&gt;DebugRunner&lt;/code&gt;&lt;/a&gt; class, and the special exceptions it may raise, are of most interest to testing framework authors, and will only be sketched here. See the source code, and especially &lt;a href=&quot;#doctest.DebugRunner&quot;&gt;&lt;code&gt;DebugRunner&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s docstring (which is a doctest!) for more details:</source>
          <target state="translated">该&lt;a href=&quot;#doctest.DebugRunner&quot;&gt; &lt;code&gt;DebugRunner&lt;/code&gt; &lt;/a&gt;类和特殊的例外可能提高，最感兴趣的测试框架的作者，并且只在这里勾勒。请参阅源代码，尤其是&lt;a href=&quot;#doctest.DebugRunner&quot;&gt; &lt;code&gt;DebugRunner&lt;/code&gt; &lt;/a&gt;的docstring（这是一个doctest！），以了解更多详细信息：</target>
        </trans-unit>
        <trans-unit id="db4e4d2f74c5768a719d3127ef0d73fd7ed1c368" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object that was being run when the example failed.</source>
          <target state="translated">示例失败时正在运行的&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="e14145b7ea305b81edc3a0187c0f5ae4147252d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt;&lt;code&gt;ELLIPSIS&lt;/code&gt;&lt;/a&gt; directive gives a nice approach for the last example:</source>
          <target state="translated">该&lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt; &lt;code&gt;ELLIPSIS&lt;/code&gt; &lt;/a&gt;指令给出了最后一个例子一个很好的方法：</target>
        </trans-unit>
        <trans-unit id="a3fd9ed4c6f4d1c3ee85bd113b3a6e65aced55a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#doctest.Example&quot;&gt;&lt;code&gt;Example&lt;/code&gt;&lt;/a&gt; that failed.</source>
          <target state="translated">失败的&lt;a href=&quot;#doctest.Example&quot;&gt; &lt;code&gt;Example&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12952789268d4531a057ffffdea84d074c22d65e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; class also provides a number of methods to support standard operations and built-in functions.</source>
          <target state="translated">该&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;类还提供了一些方法来支持标准操作和内置功能。</target>
        </trans-unit>
        <trans-unit id="e24f5e3fa9d9f920266109958df4565b0b3c077b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; class can be used to flatten a message into a text (as opposed to binary) serialized representation, but since Unicode cannot represent binary data directly, the message is of necessity transformed into something that contains only ASCII characters, using the standard email RFC Content Transfer Encoding techniques for encoding email messages for transport over channels that are not &amp;ldquo;8 bit clean&amp;rdquo;.</source>
          <target state="translated">该&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;类可用于变平的消息转换为文本（而不是二进制）序列化表示，但由于Unicode的不能直接表示二进制数据，该消息是必要性转化入东西只包含ASCII字符，采用了标准的电子邮件RFC内容传输编码技术，用于对电子邮件消息进行编码，以便通过非&amp;ldquo; 8位干净&amp;rdquo;信道进行传输。</target>
        </trans-unit>
        <trans-unit id="57c1078eb78d57874e3db83f4f9d2a1a41f52b0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; class also provides a number of methods to support standard operators and built-in functions.</source>
          <target state="translated">的&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;类还提供了一些方法，以支持标准运营商和内置函数。</target>
        </trans-unit>
        <trans-unit id="ff0626c380b6c21daadf51b2206b16b6e1b3b18b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; dictionary-like interface is indexed by the header names, which must be ASCII values. The values of the dictionary are strings with some extra methods. Headers are stored and returned in case-preserving form, but field names are matched case-insensitively. Unlike a real dict, there is an ordering to the keys, and there can be duplicate keys. Additional methods are provided for working with headers that have duplicate keys.</source>
          <target state="translated">类&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;字典的接口由标头名称索引，标头名称必须是ASCII值。字典的值是带有一些额外方法的字符串。标头以保留大小写的形式存储和返回，但是字段名称不区分大小写。与真正的字典不同，键有一个顺序，并且可以有重复的键。提供了其他方法来处理具有重复键的标头。</target>
        </trans-unit>
        <trans-unit id="7beb5e5a031dd79580c00039aecf0006eddf006e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.message.EmailMessage.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt; method is an all-purpose generator which can be used to iterate over all the parts and subparts of a message object tree, in depth-first traversal order. You will typically use &lt;a href=&quot;#email.message.EmailMessage.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt; as the iterator in a &lt;code&gt;for&lt;/code&gt; loop; each iteration returns the next subpart.</source>
          <target state="translated">的&lt;a href=&quot;#email.message.EmailMessage.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt;方法是一个通用的发生器，其可被用于迭代所有部件和消息对象树的子部分，按深度优先遍历顺序。您通常会用&lt;a href=&quot;#email.message.EmailMessage.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt;作为一个迭代 &lt;code&gt;for&lt;/code&gt; 循环; 每次迭代都会返回下一个子部分。</target>
        </trans-unit>
        <trans-unit id="51f30eb0997a6bed3821ee80398f62d132641248" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; class is very similar to the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class, without the methods added by that class, and with the default behavior of certain other methods being slightly different. We also document here some methods that, while supported by the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class, are not recommended unless you are dealing with legacy code.</source>
          <target state="translated">的&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;类是非常相似的&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;类，而不受类添加的方法，用的某些其它方法的默认行为是稍有不同。我们还在此处记录了一些方法，这些方法虽然受&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;类支持，但不建议使用，除非您要处理旧代码。</target>
        </trans-unit>
        <trans-unit id="2137b67a1cad530c1434e4f34ea24dddaa0f111b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; pseudo-dictionary is indexed by the header names, which must be ASCII values. The values of the dictionary are strings that are supposed to contain only ASCII characters; there is some special handling for non-ASCII input, but it doesn&amp;rsquo;t always produce the correct results. Headers are stored and returned in case-preserving form, but field names are matched case-insensitively. There may also be a single envelope header, also known as the &lt;em&gt;Unix-From&lt;/em&gt; header or the &lt;code&gt;From_&lt;/code&gt; header. The &lt;em&gt;payload&lt;/em&gt; is either a string or bytes, in the case of simple message objects, or a list of &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects, for MIME container documents (e.g. &lt;em&gt;multipart/*&lt;/em&gt; and &lt;em&gt;message/rfc822&lt;/em&gt;).</source>
          <target state="translated">该&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;伪字典由标题名称，它必须是ASCII值索引。字典的值是应该仅包含ASCII字符的字符串；非ASCII输入有一些特殊的处理方法，但它并不总是产生正确的结果。标头以保留大小写的形式存储和返回，但是字段名称不区分大小写。也可能只有一个信封标头，也称为&lt;em&gt;Unix-From&lt;/em&gt;标头或 &lt;code&gt;From_&lt;/code&gt; 标头。的&lt;em&gt;有效载荷&lt;/em&gt;是一个字符串或字节，在简单的消息对象的情况下，或清单&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;对象，为MIME容器文档（例如&lt;em&gt;多部分/ *&lt;/em&gt;和&lt;em&gt;消息/ RFC822&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="ca981282c5517da9128d2368f106a4e670e04bb4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.message.Message.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt; method is an all-purpose generator which can be used to iterate over all the parts and subparts of a message object tree, in depth-first traversal order. You will typically use &lt;a href=&quot;#email.message.Message.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt; as the iterator in a &lt;code&gt;for&lt;/code&gt; loop; each iteration returns the next subpart.</source>
          <target state="translated">的&lt;a href=&quot;#email.message.Message.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt;方法是一个通用的发生器，其可被用于迭代所有部件和消息对象树的子部分，按深度优先遍历顺序。您通常会用&lt;a href=&quot;#email.message.Message.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt;作为一个迭代 &lt;code&gt;for&lt;/code&gt; 循环; 每次迭代都会返回下一个子部分。</target>
        </trans-unit>
        <trans-unit id="a4efcfb3c7cb51e40bed4d82c7465685ab9a3df4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt; class always adds a &lt;em&gt;Content-Type&lt;/em&gt; header (based on &lt;em&gt;_maintype&lt;/em&gt;, &lt;em&gt;_subtype&lt;/em&gt;, and &lt;em&gt;_params&lt;/em&gt;), and a &lt;em&gt;MIME-Version&lt;/em&gt; header (always set to &lt;code&gt;1.0&lt;/code&gt;).</source>
          <target state="translated">所述&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt;类总是添加一个&lt;em&gt;内容类型&lt;/em&gt;报头（基于&lt;em&gt;_maintype&lt;/em&gt;，&lt;em&gt;_subtype&lt;/em&gt;，和&lt;em&gt;_params&lt;/em&gt;），和一个&lt;em&gt;MIME-版&lt;/em&gt;报头（始终设置为 &lt;code&gt;1.0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3b5297e6544521f2b54ac92dce43d72fcb5f8e9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s API is simple; you create an instance, feed it a bunch of bytes until there&amp;rsquo;s no more to feed it, then close the parser to retrieve the root message object. The &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt; is extremely accurate when parsing standards-compliant messages, and it does a very good job of parsing non-compliant messages, providing information about how a message was deemed broken. It will populate a message object&amp;rsquo;s &lt;a href=&quot;email.message#email.message.EmailMessage.defects&quot;&gt;&lt;code&gt;defects&lt;/code&gt;&lt;/a&gt; attribute with a list of any problems it found in a message. See the &lt;a href=&quot;email.errors#module-email.errors&quot;&gt;&lt;code&gt;email.errors&lt;/code&gt;&lt;/a&gt; module for the list of defects that it can find.</source>
          <target state="translated">所述&lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt; &lt;code&gt;BytesFeedParser&lt;/code&gt; &lt;/a&gt;的API简单;您创建了一个实例，将其提供一堆字节，直到不再需要它，然后关闭解析器以检索根消息对象。该&lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt; &lt;code&gt;BytesFeedParser&lt;/code&gt; &lt;/a&gt;解析符合标准的消息时是非常准确的，它也分析不符合要求的信息，提供有关信息是如何打破视为信息的一个很好的工作。它将使用在消息中发现的任何问题的列表填充消息对象的&lt;a href=&quot;email.message#email.message.EmailMessage.defects&quot;&gt; &lt;code&gt;defects&lt;/code&gt; &lt;/a&gt;属性。请参阅&lt;a href=&quot;email.errors#module-email.errors&quot;&gt; &lt;code&gt;email.errors&lt;/code&gt; &lt;/a&gt;模块以获取可以找到的缺陷列表。</target>
        </trans-unit>
        <trans-unit id="455ea518b92fec5912569d645995d649271f1068" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt;, imported from the &lt;code&gt;email.feedparser&lt;/code&gt; module, provides an API that is conducive to incremental parsing of email messages, such as would be necessary when reading the text of an email message from a source that can block (such as a socket). The &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt; can of course be used to parse an email message fully contained in a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, string, or file, but the &lt;a href=&quot;#email.parser.BytesParser&quot;&gt;&lt;code&gt;BytesParser&lt;/code&gt;&lt;/a&gt; API may be more convenient for such use cases. The semantics and results of the two parser APIs are identical.</source>
          <target state="translated">的&lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt; &lt;code&gt;BytesFeedParser&lt;/code&gt; &lt;/a&gt;，从导入 &lt;code&gt;email.feedparser&lt;/code&gt; 模块，提供了一个API有利于电子邮件消息，如增量分析从可阻断（如插座）一个源读取的电子邮件消息的文本时是必要的。所述&lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt; &lt;code&gt;BytesFeedParser&lt;/code&gt; &lt;/a&gt;当然可以被用于解析完全包含在一个电子邮件消息&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;，字符串或文件，但&lt;a href=&quot;#email.parser.BytesParser&quot;&gt; &lt;code&gt;BytesParser&lt;/code&gt; &lt;/a&gt; API可以是用于这种用途的情况下更为方便。这两个解析器API的语义和结果相同。</target>
        </trans-unit>
        <trans-unit id="129c9676d828a9e02a0b425826eacab98cee6a85" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt;, imported from the &lt;code&gt;email.feedparser&lt;/code&gt; module, provides an API that is conducive to incremental parsing of email messages, such as would be necessary when reading the text of an email message from a source that can block (such as a socket). The &lt;a href=&quot;#email.parser.BytesFeedParser&quot;&gt;&lt;code&gt;BytesFeedParser&lt;/code&gt;&lt;/a&gt; can of course be used to parse an email message fully contained in a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;, string, or file, but the &lt;a href=&quot;#email.parser.BytesParser&quot;&gt;&lt;code&gt;BytesParser&lt;/code&gt;&lt;/a&gt; API may be more convenient for such use cases. The semantics and results of the two parser APIs are identical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23578df0528e2bcfa2d13e7a22ac4991916102e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.parser.BytesParser&quot;&gt;&lt;code&gt;BytesParser&lt;/code&gt;&lt;/a&gt; class, imported from the &lt;a href=&quot;#module-email.parser&quot;&gt;&lt;code&gt;email.parser&lt;/code&gt;&lt;/a&gt; module, provides an API that can be used to parse a message when the complete contents of the message are available in a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or file. The &lt;a href=&quot;#module-email.parser&quot;&gt;&lt;code&gt;email.parser&lt;/code&gt;&lt;/a&gt; module also provides &lt;a href=&quot;#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; for parsing strings, and header-only parsers, &lt;a href=&quot;#email.parser.BytesHeaderParser&quot;&gt;&lt;code&gt;BytesHeaderParser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.parser.HeaderParser&quot;&gt;&lt;code&gt;HeaderParser&lt;/code&gt;&lt;/a&gt;, which can be used if you&amp;rsquo;re only interested in the headers of the message. &lt;a href=&quot;#email.parser.BytesHeaderParser&quot;&gt;&lt;code&gt;BytesHeaderParser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.parser.HeaderParser&quot;&gt;&lt;code&gt;HeaderParser&lt;/code&gt;&lt;/a&gt; can be much faster in these situations, since they do not attempt to parse the message body, instead setting the payload to the raw body.</source>
          <target state="translated">从&lt;a href=&quot;#module-email.parser&quot;&gt; &lt;code&gt;email.parser&lt;/code&gt; &lt;/a&gt;模块导入的&lt;a href=&quot;#email.parser.BytesParser&quot;&gt; &lt;code&gt;BytesParser&lt;/code&gt; &lt;/a&gt;类提供了一个API，当消息的完整内容在类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;或文件中可用时，可用于解析消息。该&lt;a href=&quot;#module-email.parser&quot;&gt; &lt;code&gt;email.parser&lt;/code&gt; &lt;/a&gt;模块还提供&lt;a href=&quot;#email.parser.Parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt;解析字符串，只有头部的解析器，&lt;a href=&quot;#email.parser.BytesHeaderParser&quot;&gt; &lt;code&gt;BytesHeaderParser&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#email.parser.HeaderParser&quot;&gt; &lt;code&gt;HeaderParser&lt;/code&gt; &lt;/a&gt;，可如果你只在邮件的标题有意使用。在这些情况下，&lt;a href=&quot;#email.parser.BytesHeaderParser&quot;&gt; &lt;code&gt;BytesHeaderParser&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#email.parser.HeaderParser&quot;&gt; &lt;code&gt;HeaderParser&lt;/code&gt; &lt;/a&gt;可以更快，因为它们不尝试解析消息正文，而是将有效负载设置为原始正文。</target>
        </trans-unit>
        <trans-unit id="6d939435112c13e7c8dad6a09215ba0b2aa7f140" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#email.parser.BytesParser&quot;&gt;&lt;code&gt;BytesParser&lt;/code&gt;&lt;/a&gt; class, imported from the &lt;a href=&quot;#module-email.parser&quot;&gt;&lt;code&gt;email.parser&lt;/code&gt;&lt;/a&gt; module, provides an API that can be used to parse a message when the complete contents of the message are available in a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or file. The &lt;a href=&quot;#module-email.parser&quot;&gt;&lt;code&gt;email.parser&lt;/code&gt;&lt;/a&gt; module also provides &lt;a href=&quot;#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; for parsing strings, and header-only parsers, &lt;a href=&quot;#email.parser.BytesHeaderParser&quot;&gt;&lt;code&gt;BytesHeaderParser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.parser.HeaderParser&quot;&gt;&lt;code&gt;HeaderParser&lt;/code&gt;&lt;/a&gt;, which can be used if you&amp;rsquo;re only interested in the headers of the message. &lt;a href=&quot;#email.parser.BytesHeaderParser&quot;&gt;&lt;code&gt;BytesHeaderParser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#email.parser.HeaderParser&quot;&gt;&lt;code&gt;HeaderParser&lt;/code&gt;&lt;/a&gt; can be much faster in these situations, since they do not attempt to parse the message body, instead setting the payload to the raw body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bf3f39230092aa892f16e0f7eecb87426fe897" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class is callable, providing the following functional API:</source>
          <target state="translated">的&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;类是可调用，提供以下功能API：</target>
        </trans-unit>
        <trans-unit id="6c277b78ba2ec81d6d2de28b1c77027805e2aa66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#event-loop-implementations&quot;&gt;Event Loop Implementations&lt;/a&gt; section documents the &lt;a href=&quot;#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; classes;</source>
          <target state="translated">&amp;ldquo; &lt;a href=&quot;#event-loop-implementations&quot;&gt;事件循环实现&amp;rdquo;&lt;/a&gt;部分记录了&lt;a href=&quot;#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="1cdbf0a871b5a60d9146255b077a077d5731d02d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#event-loop-methods&quot;&gt;Event Loop Methods&lt;/a&gt; section is the reference documentation of the event loop APIs;</source>
          <target state="translated">&amp;ldquo; &lt;a href=&quot;#event-loop-methods&quot;&gt;事件循环方法&amp;rdquo;&lt;/a&gt;部分是事件循环API的参考文档。</target>
        </trans-unit>
        <trans-unit id="5ea2c779a8d4a043248492f818a19fe18aed4343" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#examples&quot;&gt;Examples&lt;/a&gt; section showcases how to work with some event loop APIs.</source>
          <target state="translated">&amp;ldquo; &lt;a href=&quot;#examples&quot;&gt;示例&amp;rdquo;&lt;/a&gt;部分展示了如何使用某些事件循环API。</target>
        </trans-unit>
        <trans-unit id="0b489d830a7d9d9099ae9cf3e071f2eb2d0ffc41" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#examples&quot;&gt;Examples&lt;/a&gt; section showcases how to work with transports, protocols, and low-level event loop APIs.</source>
          <target state="translated">&amp;ldquo; &lt;a href=&quot;#examples&quot;&gt;示例&amp;rdquo;&lt;/a&gt;部分展示了如何使用传输，协议和低级事件循环API。</target>
        </trans-unit>
        <trans-unit id="46a625abe6df6aa03f16639dd4d7da65b44c473b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#filecmp.dircmp&quot;&gt;&lt;code&gt;dircmp&lt;/code&gt;&lt;/a&gt; class compares files by doing &lt;em&gt;shallow&lt;/em&gt; comparisons as described for &lt;a href=&quot;#filecmp.cmp&quot;&gt;&lt;code&gt;filecmp.cmp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#filecmp.dircmp&quot;&gt; &lt;code&gt;dircmp&lt;/code&gt; &lt;/a&gt;类做比较文件&lt;em&gt;浅&lt;/em&gt;的比较作为描述&lt;a href=&quot;#filecmp.cmp&quot;&gt; &lt;code&gt;filecmp.cmp()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbd2c2804abf18aa233595f2c9066be859802a7d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#filecmp.dircmp&quot;&gt;&lt;code&gt;dircmp&lt;/code&gt;&lt;/a&gt; class offers a number of interesting attributes that may be used to get various bits of information about the directory trees being compared.</source>
          <target state="translated">该&lt;a href=&quot;#filecmp.dircmp&quot;&gt; &lt;code&gt;dircmp&lt;/code&gt; &lt;/a&gt;类提供了许多可用于获取的有关目录树各种信息片段进行比较有趣的属性。</target>
        </trans-unit>
        <trans-unit id="72adb57220e6e99be6d29493dd6a1420ee7c643f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#filecmp.dircmp&quot;&gt;&lt;code&gt;dircmp&lt;/code&gt;&lt;/a&gt; class provides the following methods:</source>
          <target state="translated">该&lt;a href=&quot;#filecmp.dircmp&quot;&gt; &lt;code&gt;dircmp&lt;/code&gt; &lt;/a&gt;类提供了以下方法：</target>
        </trans-unit>
        <trans-unit id="19db21dafd9ed069b9a82326fff208a83767e71d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#fileinput.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; instance can be used as a context manager in the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. In this example, &lt;em&gt;input&lt;/em&gt; is closed after the &lt;code&gt;with&lt;/code&gt; statement is exited, even if an exception occurs:</source>
          <target state="translated">该&lt;a href=&quot;#fileinput.FileInput&quot;&gt; &lt;code&gt;FileInput&lt;/code&gt; &lt;/a&gt;实例可以用作上下文管理器&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;声明。在此示例中，即使出现异常，在退出 &lt;code&gt;with&lt;/code&gt; 语句后也将关闭&lt;em&gt;输入&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="99f1a77af740271d3dab355e84344962ee82cc05" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#fileinput.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; instance can be used as a context manager in the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. In this example, &lt;em&gt;input&lt;/em&gt; is closed after the &lt;code&gt;with&lt;/code&gt; statement is exited, even if an exception occurs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4e28be954ee79e9597284f6ac163856e52fada" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; class inherits from the abstract base class &lt;a href=&quot;numbers#numbers.Rational&quot;&gt;&lt;code&gt;numbers.Rational&lt;/code&gt;&lt;/a&gt;, and implements all of the methods and operations from that class. &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; instances are hashable, and should be treated as immutable. In addition, &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; has the following properties and methods:</source>
          <target state="translated">该&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;从抽象基类继承类&lt;a href=&quot;numbers#numbers.Rational&quot;&gt; &lt;code&gt;numbers.Rational&lt;/code&gt; &lt;/a&gt;，并实现了所有从该类的方法和操作。&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;实例是可哈希的，应视为不可变的。此外，&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;还具有以下属性和方法：</target>
        </trans-unit>
        <trans-unit id="6bcd4b660916451139fc57514e9529994a253ed2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; class supports the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, e.g.:</source>
          <target state="translated">该&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt;类支持&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句，如：</target>
        </trans-unit>
        <trans-unit id="fc6a21416c2f7d4ca1e73cf59e715c22679816fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; class supports the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa181fb78bf9ba81555b448529484ffdd34a22c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial()&lt;/code&gt;&lt;/a&gt; is used for partial function application which &amp;ldquo;freezes&amp;rdquo; some portion of a function&amp;rsquo;s arguments and/or keywords resulting in a new object with a simplified signature. For example, &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial()&lt;/code&gt;&lt;/a&gt; can be used to create a callable that behaves like the &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int()&lt;/code&gt;&lt;/a&gt; function where the &lt;em&gt;base&lt;/em&gt; argument defaults to two:</source>
          <target state="translated">的&lt;a href=&quot;#functools.partial&quot;&gt; &lt;code&gt;partial()&lt;/code&gt; &lt;/a&gt;是用于局部功能的应用程序，&amp;ldquo;冻结&amp;rdquo;的函数的参数和/或产生具有简化签名的新对象的关键字一些部分。例如，&lt;a href=&quot;#functools.partial&quot;&gt; &lt;code&gt;partial()&lt;/code&gt; &lt;/a&gt;可用于创建行为类似于&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int()&lt;/code&gt; &lt;/a&gt;函数的可调用对象，其中&lt;em&gt;基本&lt;/em&gt;参数默认为两个：</target>
        </trans-unit>
        <trans-unit id="b92768c0557e915145268b557943da321bb07ba9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#gettext.GNUTranslations&quot;&gt;&lt;code&gt;GNUTranslations&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">该&lt;a href=&quot;#gettext.GNUTranslations&quot;&gt; &lt;code&gt;GNUTranslations&lt;/code&gt; &lt;/a&gt;类</target>
        </trans-unit>
        <trans-unit id="0e65da98e6eb2e07ea2a424434d84f7b1e5135c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#gettext.NullTranslations&quot;&gt;&lt;code&gt;NullTranslations&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">该&lt;a href=&quot;#gettext.NullTranslations&quot;&gt; &lt;code&gt;NullTranslations&lt;/code&gt; &lt;/a&gt;类</target>
        </trans-unit>
        <trans-unit id="de0c6d582e790dcb21659a701d2610820617b77d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; class uses the SGML syntactic rules for processing instructions. An XHTML processing instruction using the trailing &lt;code&gt;'?'&lt;/code&gt; will cause the &lt;code&gt;'?'&lt;/code&gt; to be included in &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; 的&lt;/a&gt;类使用处理指令的SGML语法规则。使用结尾的 &lt;code&gt;'?'&lt;/code&gt; 的XHTML处理指令 会导致 &lt;code&gt;'?'&lt;/code&gt; 包含在&lt;em&gt;数据中&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1eb39bcce74f6e84c6360ac4ce120085f00979c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; class also defines the following method:</source>
          <target state="translated">所述&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt;类也定义了下面的方法：</target>
        </trans-unit>
        <trans-unit id="ff5b055fb2cf07cb0cc7bbc35321af963ac5bcb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; class stores HTTP cookies. It extracts cookies from HTTP requests, and returns them in HTTP responses. &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; instances automatically expire contained cookies when necessary. Subclasses are also responsible for storing and retrieving cookies from a file or database.</source>
          <target state="translated">该&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt;类存储的HTTP cookies。它从HTTP请求中提取cookie，并在HTTP响应中返回它们。&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt;实例在必要时会自动使包含的cookie失效。子类还负责从文件或数据库存储和检索Cookie。</target>
        </trans-unit>
        <trans-unit id="d62327d1da1bdae98350ead4c676a194b62121b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; will look for allowable &lt;em&gt;Set-Cookie&lt;/em&gt; and &lt;em&gt;Set-Cookie2&lt;/em&gt; headers in the &lt;em&gt;response&lt;/em&gt; argument, and store cookies as appropriate (subject to the &lt;a href=&quot;#http.cookiejar.CookiePolicy.set_ok&quot;&gt;&lt;code&gt;CookiePolicy.set_ok()&lt;/code&gt;&lt;/a&gt; method&amp;rsquo;s approval).</source>
          <target state="translated">该&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt;将寻找允许&lt;em&gt;的Set-Cookie&lt;/em&gt;和&lt;em&gt;设置，COOKIE2&lt;/em&gt;在头&lt;em&gt;响应&lt;/em&gt;参数，存储cookies适当（受&lt;a href=&quot;#http.cookiejar.CookiePolicy.set_ok&quot;&gt; &lt;code&gt;CookiePolicy.set_ok()&lt;/code&gt; &lt;/a&gt;方法的批准）。</target>
        </trans-unit>
        <trans-unit id="892509a53a5d6f89a661272b12ef7f4fbe726d49" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt;&lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; defines the following data member:</source>
          <target state="translated">所述&lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt; &lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt; &lt;/a&gt;定义了以下数据成员：</target>
        </trans-unit>
        <trans-unit id="4f3ec92b59878117b7fe2c93d4c2a548bc59f10f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt;&lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; defines the following method:</source>
          <target state="translated">所述&lt;a href=&quot;#http.server.CGIHTTPRequestHandler&quot;&gt; &lt;code&gt;CGIHTTPRequestHandler&lt;/code&gt; &lt;/a&gt;定义了下面的方法：</target>
        </trans-unit>
        <trans-unit id="3063dd9d9ba74b5988d1c7ce6e176579f1298f7a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.server.HTTPServer&quot;&gt;&lt;code&gt;HTTPServer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.server.ThreadingHTTPServer&quot;&gt;&lt;code&gt;ThreadingHTTPServer&lt;/code&gt;&lt;/a&gt; must be given a &lt;em&gt;RequestHandlerClass&lt;/em&gt; on instantiation, of which this module provides three different variants:</source>
          <target state="translated">所述&lt;a href=&quot;#http.server.HTTPServer&quot;&gt; &lt;code&gt;HTTPServer&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#http.server.ThreadingHTTPServer&quot;&gt; &lt;code&gt;ThreadingHTTPServer&lt;/code&gt; &lt;/a&gt;必须给予&lt;em&gt;RequestHandlerClass&lt;/em&gt;上实例化，其中该模块提供了三种不同的变体：</target>
        </trans-unit>
        <trans-unit id="c3b07c0d36cb7b2328e4e39fd85c0c91ce6e34c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt;&lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; class can be used in the following manner in order to create a very basic webserver serving files relative to the current directory:</source>
          <target state="translated">该&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt; &lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt; &lt;/a&gt;类可以通过以下方式来使用，以创建相对于当前目录下的文件服务一个非常基本的web服务器：</target>
        </trans-unit>
        <trans-unit id="37b85c9f85de1e416b802425612ceacd7d1c6971" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt;&lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; class defines the following methods:</source>
          <target state="translated">所述&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt; &lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt; &lt;/a&gt;类定义了下列方法：</target>
        </trans-unit>
        <trans-unit id="852b43c2316c324fc522d7ff1a68a1885ce96c04" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; class supports the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When used like this, the IMAP4 &lt;code&gt;LOGOUT&lt;/code&gt; command is issued automatically when the &lt;code&gt;with&lt;/code&gt; statement exits. E.g.:</source>
          <target state="translated">该&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;类支持&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;声明。像这样使用时，在 &lt;code&gt;with&lt;/code&gt; 语句退出时会自动发出IMAP4 &lt;code&gt;LOGOUT&lt;/code&gt; 命令。例如：</target>
        </trans-unit>
        <trans-unit id="9431628673861a6a57cc500eb717504c9f13d70a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; class supports the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When used like this, the IMAP4 &lt;code&gt;LOGOUT&lt;/code&gt; command is issued automatically when the &lt;code&gt;with&lt;/code&gt; statement exits. E.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b70bff057b7a70a8bd99ea96ead45a3220331b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#importlib.import_module&quot;&gt;&lt;code&gt;import_module()&lt;/code&gt;&lt;/a&gt; function acts as a simplifying wrapper around &lt;a href=&quot;#importlib.__import__&quot;&gt;&lt;code&gt;importlib.__import__()&lt;/code&gt;&lt;/a&gt;. This means all semantics of the function are derived from &lt;a href=&quot;#importlib.__import__&quot;&gt;&lt;code&gt;importlib.__import__()&lt;/code&gt;&lt;/a&gt;. The most important difference between these two functions is that &lt;a href=&quot;#importlib.import_module&quot;&gt;&lt;code&gt;import_module()&lt;/code&gt;&lt;/a&gt; returns the specified package or module (e.g. &lt;code&gt;pkg.mod&lt;/code&gt;), while &lt;a href=&quot;functions#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; returns the top-level package or module (e.g. &lt;code&gt;pkg&lt;/code&gt;).</source>
          <target state="translated">所述&lt;a href=&quot;#importlib.import_module&quot;&gt; &lt;code&gt;import_module()&lt;/code&gt; &lt;/a&gt;函数作为围绕简化包装&lt;a href=&quot;#importlib.__import__&quot;&gt; &lt;code&gt;importlib.__import__()&lt;/code&gt; &lt;/a&gt;。这意味着该函数的所有语义均源自&lt;a href=&quot;#importlib.__import__&quot;&gt; &lt;code&gt;importlib.__import__()&lt;/code&gt; &lt;/a&gt;。这两个函数之间最重要的区别在于，&lt;a href=&quot;#importlib.import_module&quot;&gt; &lt;code&gt;import_module()&lt;/code&gt; &lt;/a&gt;返回指定的包或模块（例如 &lt;code&gt;pkg.mod&lt;/code&gt; ），而&lt;a href=&quot;functions#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;返回顶级包或模块（例如 &lt;code&gt;pkg&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1bae6a97d9fde07f950ebc819fa267abcbcd2efc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#inspect.BoundArguments.args&quot;&gt;&lt;code&gt;args&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#inspect.BoundArguments.kwargs&quot;&gt;&lt;code&gt;kwargs&lt;/code&gt;&lt;/a&gt; properties can be used to invoke functions:</source>
          <target state="translated">的&lt;a href=&quot;#inspect.BoundArguments.args&quot;&gt; &lt;code&gt;args&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#inspect.BoundArguments.kwargs&quot;&gt; &lt;code&gt;kwargs&lt;/code&gt; &lt;/a&gt;属性可以被用于调用功能：</target>
        </trans-unit>
        <trans-unit id="91f42df007f7e0205554d47c412bcec7bdab5e36" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#inspect.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt; function retrieves the members of an object such as a class or module. The functions whose names begin with &amp;ldquo;is&amp;rdquo; are mainly provided as convenient choices for the second argument to &lt;a href=&quot;#inspect.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt;. They also help you determine when you can expect to find the following special attributes:</source>
          <target state="translated">所述&lt;a href=&quot;#inspect.getmembers&quot;&gt; &lt;code&gt;getmembers()&lt;/code&gt; &lt;/a&gt;函数检索对象的构件，诸如类或模块。名称以&amp;ldquo; is&amp;rdquo;开头的函数主要是为&lt;a href=&quot;#inspect.getmembers&quot;&gt; &lt;code&gt;getmembers()&lt;/code&gt; &lt;/a&gt;的第二个参数提供方便的选择。它们还帮助您确定何时可以期望找到以下特殊属性：</target>
        </trans-unit>
        <trans-unit id="de3d811682e32c7451600320608bf74aadd88a87" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; ABC deals with buffering on a raw byte stream (&lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt;). Its subclasses, &lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#io.BufferedRWPair&quot;&gt;&lt;code&gt;BufferedRWPair&lt;/code&gt;&lt;/a&gt; buffer streams that are readable, writable, and both readable and writable. &lt;a href=&quot;#io.BufferedRandom&quot;&gt;&lt;code&gt;BufferedRandom&lt;/code&gt;&lt;/a&gt; provides a buffered interface to random access streams. Another &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; subclass, &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt;, is a stream of in-memory bytes.</source>
          <target state="translated">所述&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt; ABC处理与缓冲上的原始字节流（&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;）。它的子类&lt;a href=&quot;#io.BufferedWriter&quot;&gt; &lt;code&gt;BufferedWriter&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#io.BufferedReader&quot;&gt; &lt;code&gt;BufferedReader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#io.BufferedRWPair&quot;&gt; &lt;code&gt;BufferedRWPair&lt;/code&gt; &lt;/a&gt;缓冲流是可读，可写的，并且可读且可写。&lt;a href=&quot;#io.BufferedRandom&quot;&gt; &lt;code&gt;BufferedRandom&lt;/code&gt; &lt;/a&gt;为随机访问流提供了一个缓冲接口。另一个&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;子类&lt;a href=&quot;#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt;是内存中字节流。</target>
        </trans-unit>
        <trans-unit id="6907a933fe7a2fc3435ed93f2490ac0754bba554" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; ABC extends &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;. It deals with buffering on a raw binary stream (&lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt;). Its subclasses, &lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#io.BufferedRWPair&quot;&gt;&lt;code&gt;BufferedRWPair&lt;/code&gt;&lt;/a&gt; buffer raw binary streams that are readable, writable, and both readable and writable, respectively. &lt;a href=&quot;#io.BufferedRandom&quot;&gt;&lt;code&gt;BufferedRandom&lt;/code&gt;&lt;/a&gt; provides a buffered interface to seekable streams. Another &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; subclass, &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt;, is a stream of in-memory bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9df85f7e47c1af60b04aa0945a7c5afd4020154" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; ABC extends &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;. It deals with the reading and writing of bytes to a stream. &lt;a href=&quot;#io.FileIO&quot;&gt;&lt;code&gt;FileIO&lt;/code&gt;&lt;/a&gt; subclasses &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; to provide an interface to files in the machine&amp;rsquo;s file system.</source>
          <target state="translated">该&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt; ABC延伸&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;。它负责将字节读取和写入流中。&lt;a href=&quot;#io.FileIO&quot;&gt; &lt;code&gt;FileIO&lt;/code&gt; &lt;/a&gt;子类化&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; ,&lt;/a&gt;以提供到计算机文件系统中文件的接口。</target>
        </trans-unit>
        <trans-unit id="aeafce9b48519991d8898f29bd9661739a1b0d89" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; ABC extends &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;. It deals with streams whose bytes represent text, and handles encoding and decoding to and from strings. &lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt;, which extends &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt;, is a buffered text interface to a buffered raw stream (&lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;). Finally, &lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; is an in-memory stream for text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41837a13305b80f8a061fb12801afa565fb495f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#io.TextIOBase&quot;&gt;&lt;code&gt;TextIOBase&lt;/code&gt;&lt;/a&gt; ABC, another subclass of &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;, deals with streams whose bytes represent text, and handles encoding and decoding to and from strings. &lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt;, which extends it, is a buffered text interface to a buffered raw stream (&lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;). Finally, &lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; is an in-memory stream for text.</source>
          <target state="translated">的&lt;a href=&quot;#io.TextIOBase&quot;&gt; &lt;code&gt;TextIOBase&lt;/code&gt; &lt;/a&gt; ABC，的另一亚类&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;，处理与编码和解码与字符串流，其字节表示文字和把手。&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; 对其&lt;/a&gt;进行了扩展，它是缓冲的文本接口，用于缓冲的原始流（&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;）。最后，&lt;a href=&quot;#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt;是文本的内存流。</target>
        </trans-unit>
        <trans-unit id="831877a01cc5755207975d598f2d08a6f65a34fe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ipaddress.IPv6Address&quot;&gt;&lt;code&gt;IPv6Address&lt;/code&gt;&lt;/a&gt; objects share a lot of common attributes. Some attributes that are only meaningful for IPv6 addresses are also implemented by &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; objects, in order to make it easier to write code that handles both IP versions correctly. Address objects are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;, so they can be used as keys in dictionaries.</source>
          <target state="translated">该&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ipaddress.IPv6Address&quot;&gt; &lt;code&gt;IPv6Address&lt;/code&gt; &lt;/a&gt;对象有许多共同的属性。&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; &lt;/a&gt;对象还实现了一些仅对IPv6地址有意义的属性，以便更轻松地编写可正确处理两个IP版本的代码。地址对象是可&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;哈希的&lt;/a&gt;，因此它们可用作字典中的键。</target>
        </trans-unit>
        <trans-unit id="37c6becc8ed3f34f2e21832832aa1e0c7aef20f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ipaddress.IPv6Address&quot;&gt;&lt;code&gt;IPv6Address&lt;/code&gt;&lt;/a&gt; objects share a lot of common attributes. Some attributes that are only meaningful for IPv6 addresses are also implemented by &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; objects, in order to make it easier to write code that handles both IP versions correctly. Address objects are &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;, so they can be used as keys in dictionaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f41a3b3613b689885978e0b22d94e53f3f5175" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt; objects provide a mechanism for defining and inspecting IP network definitions. A network definition consists of a &lt;em&gt;mask&lt;/em&gt; and a &lt;em&gt;network address&lt;/em&gt;, and as such defines a range of IP addresses that equal the network address when masked (binary AND) with the mask. For example, a network definition with the mask &lt;code&gt;255.255.255.0&lt;/code&gt; and the network address &lt;code&gt;192.168.1.0&lt;/code&gt; consists of IP addresses in the inclusive range &lt;code&gt;192.168.1.0&lt;/code&gt; to &lt;code&gt;192.168.1.255&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt; &lt;code&gt;IPv6Network&lt;/code&gt; &lt;/a&gt;对象提供用于定义和检查IP网络定义的机制。网络定义由一个&lt;em&gt;掩码&lt;/em&gt;和一个&lt;em&gt;网络地址组成&lt;/em&gt;，因此定义了一个IP地址范围，该IP地址范围与使用掩码进行掩码（二进制AND）时等于网络地址。例如，具有掩码 &lt;code&gt;255.255.255.0&lt;/code&gt; 和网络地址 &lt;code&gt;192.168.1.0&lt;/code&gt; 的网络定义由IP地址组成，范围为 &lt;code&gt;192.168.1.0&lt;/code&gt; 到 &lt;code&gt;192.168.1.255&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63df5b1d6dacc56e59023287b9ca3fa75d8515b8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; built-in function is recommended for testing the type of an object, because it takes subclasses into account.</source>
          <target state="translated">建议使用&lt;a href=&quot;#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;内置函数来测试对象的类型，因为它考虑了子类。</target>
        </trans-unit>
        <trans-unit id="0d1c65ba78a45f962714b9319f827c7af9cc0ecc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#list.sort&quot;&gt;&lt;code&gt;sort()&lt;/code&gt;&lt;/a&gt; method is guaranteed to be stable. A sort is stable if it guarantees not to change the relative order of elements that compare equal &amp;mdash; this is helpful for sorting in multiple passes (for example, sort by department, then by salary grade).</source>
          <target state="translated">的&lt;a href=&quot;#list.sort&quot;&gt; &lt;code&gt;sort()&lt;/code&gt; &lt;/a&gt;方法被保证是稳定的。如果可以保证不更改比较相等的元素的相对顺序，则排序是稳定的-这有助于多次通过排序（例如，按部门排序，然后按薪级等级排序）。</target>
        </trans-unit>
        <trans-unit id="3ce38cd7780c003a8d51cc5d4c3b9f429ba014be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#locale.nl_langinfo&quot;&gt;&lt;code&gt;nl_langinfo()&lt;/code&gt;&lt;/a&gt; function accepts one of the following keys. Most descriptions are taken from the corresponding description in the GNU C library.</source>
          <target state="translated">该&lt;a href=&quot;#locale.nl_langinfo&quot;&gt; &lt;code&gt;nl_langinfo()&lt;/code&gt; &lt;/a&gt;函数接受下列键中的一个。大多数描述均来自GNU C库中的相应描述。</target>
        </trans-unit>
        <trans-unit id="88aecf840dcaa99bd5989e62825b4f2fb44f5de1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.FileHandler&quot;&gt;&lt;code&gt;FileHandler&lt;/code&gt;&lt;/a&gt; class, located in the core &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package, sends logging output to a disk file. It inherits the output functionality from &lt;a href=&quot;#logging.StreamHandler&quot;&gt;&lt;code&gt;StreamHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">位于核心&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;包中的&lt;a href=&quot;#logging.FileHandler&quot;&gt; &lt;code&gt;FileHandler&lt;/code&gt; &lt;/a&gt;类将日志记录输出发送到磁盘文件。它继承了&lt;a href=&quot;#logging.StreamHandler&quot;&gt; &lt;code&gt;StreamHandler&lt;/code&gt; &lt;/a&gt;的输出功能。</target>
        </trans-unit>
        <trans-unit id="e6cec3c7b03eb3763340d71aa19faf7e93cb3434" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.NullHandler&quot;&gt;&lt;code&gt;NullHandler&lt;/code&gt;&lt;/a&gt; class, located in the core &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package, does not do any formatting or output. It is essentially a &amp;lsquo;no-op&amp;rsquo; handler for use by library developers.</source>
          <target state="translated">位于核心&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;程序包中的&lt;a href=&quot;#logging.NullHandler&quot;&gt; &lt;code&gt;NullHandler&lt;/code&gt; &lt;/a&gt;类不执行任何格式化或输出。本质上，它是供库开发人员使用的&amp;ldquo;无操作&amp;rdquo;处理程序。</target>
        </trans-unit>
        <trans-unit id="803ef5a656c1ac2cbfa6e72511bcb741cbd82a6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.StreamHandler&quot;&gt;&lt;code&gt;StreamHandler&lt;/code&gt;&lt;/a&gt; class, located in the core &lt;a href=&quot;logging#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package, sends logging output to streams such as &lt;em&gt;sys.stdout&lt;/em&gt;, &lt;em&gt;sys.stderr&lt;/em&gt; or any file-like object (or, more precisely, any object which supports &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;flush()&lt;/code&gt; methods).</source>
          <target state="translated">位于核心&lt;a href=&quot;logging#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;包中的&lt;a href=&quot;#logging.StreamHandler&quot;&gt; &lt;code&gt;StreamHandler&lt;/code&gt; &lt;/a&gt;类将日志记录输出发送到流，例如&lt;em&gt;sys.stdout&lt;/em&gt;，&lt;em&gt;sys.stderr&lt;/em&gt;或任何类似文件的对象（或更确切地说，是支持 &lt;code&gt;write()&lt;/code&gt; 和 &lt;code&gt;flush()&lt;/code&gt; 方法的任何对象） 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c461bb4215cadaffdd24f570336111d1d39b40a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.captureWarnings&quot;&gt;&lt;code&gt;captureWarnings()&lt;/code&gt;&lt;/a&gt; function can be used to integrate &lt;a href=&quot;#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">该&lt;a href=&quot;#logging.captureWarnings&quot;&gt; &lt;code&gt;captureWarnings()&lt;/code&gt; &lt;/a&gt;函数可用于整合&lt;a href=&quot;#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="9fa83eb6a4e125e4b7d38fb0d0a3eb8c044cbdf6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.config.fileConfig&quot;&gt;&lt;code&gt;fileConfig()&lt;/code&gt;&lt;/a&gt; API is older than the &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt; API and does not provide functionality to cover certain aspects of logging. For example, you cannot configure &lt;a href=&quot;logging#logging.Filter&quot;&gt;&lt;code&gt;Filter&lt;/code&gt;&lt;/a&gt; objects, which provide for filtering of messages beyond simple integer levels, using &lt;a href=&quot;#logging.config.fileConfig&quot;&gt;&lt;code&gt;fileConfig()&lt;/code&gt;&lt;/a&gt;. If you need to have instances of &lt;a href=&quot;logging#logging.Filter&quot;&gt;&lt;code&gt;Filter&lt;/code&gt;&lt;/a&gt; in your logging configuration, you will need to use &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt;. Note that future enhancements to configuration functionality will be added to &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt;, so it&amp;rsquo;s worth considering transitioning to this newer API when it&amp;rsquo;s convenient to do so.</source>
          <target state="translated">该&lt;a href=&quot;#logging.config.fileConfig&quot;&gt; &lt;code&gt;fileConfig()&lt;/code&gt; &lt;/a&gt; API比旧&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; &lt;/a&gt; API并没有提供的功能覆盖记录的某些方面。例如，您无法配置&lt;a href=&quot;logging#logging.Filter&quot;&gt; &lt;code&gt;Filter&lt;/code&gt; &lt;/a&gt;对象，该对象使用&lt;a href=&quot;#logging.config.fileConfig&quot;&gt; &lt;code&gt;fileConfig()&lt;/code&gt; &lt;/a&gt;来过滤超出简单整数级别的消息。如果需要在日志记录配置中包含&lt;a href=&quot;logging#logging.Filter&quot;&gt; &lt;code&gt;Filter&lt;/code&gt; &lt;/a&gt;实例，则需要使用&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; &lt;/a&gt;。请注意，将来会在&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; 中&lt;/a&gt;添加对配置功能的增强，因此值得在方便时考虑过渡到此较新的API。</target>
        </trans-unit>
        <trans-unit id="2e39370cbcdd3340d5e408f053307fc1a4a9b92a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.BaseRotatingHandler&quot;&gt;&lt;code&gt;BaseRotatingHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, is the base class for the rotating file handlers, &lt;a href=&quot;#logging.handlers.RotatingFileHandler&quot;&gt;&lt;code&gt;RotatingFileHandler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler&quot;&gt;&lt;code&gt;TimedRotatingFileHandler&lt;/code&gt;&lt;/a&gt;. You should not need to instantiate this class, but it has attributes and methods you may need to override.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.BaseRotatingHandler&quot;&gt; &lt;code&gt;BaseRotatingHandler&lt;/code&gt; &lt;/a&gt;类是旋转文件处理程序&lt;a href=&quot;#logging.handlers.RotatingFileHandler&quot;&gt; &lt;code&gt;RotatingFileHandler&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler&quot;&gt; &lt;code&gt;TimedRotatingFileHandler&lt;/code&gt; &lt;/a&gt;的基类。您无需实例化此类，但是它具有您可能需要覆盖的属性和方法。</target>
        </trans-unit>
        <trans-unit id="e43817c72b4003b672fbf6b9e4a775e15419ecf4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.DatagramHandler&quot;&gt;&lt;code&gt;DatagramHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, inherits from &lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt;&lt;code&gt;SocketHandler&lt;/code&gt;&lt;/a&gt; to support sending logging messages over UDP sockets.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.DatagramHandler&quot;&gt; &lt;code&gt;DatagramHandler&lt;/code&gt; &lt;/a&gt;类继承自&lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt; &lt;code&gt;SocketHandler&lt;/code&gt; ,&lt;/a&gt;以支持通过UDP套接字发送日志消息。</target>
        </trans-unit>
        <trans-unit id="29fa63a6ab1859f8388b9272a607d7ed41e4577d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.HTTPHandler&quot;&gt;&lt;code&gt;HTTPHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports sending logging messages to a Web server, using either &lt;code&gt;GET&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt; semantics.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.HTTPHandler&quot;&gt; &lt;code&gt;HTTPHandler&lt;/code&gt; &lt;/a&gt;类支持使用 &lt;code&gt;GET&lt;/code&gt; 或 &lt;code&gt;POST&lt;/code&gt; 语义将日志记录消息发送到Web服务器。</target>
        </trans-unit>
        <trans-unit id="4b3bf4fce2fdbe09c72de4fa938200db198c6786" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.MemoryHandler&quot;&gt;&lt;code&gt;MemoryHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports buffering of logging records in memory, periodically flushing them to a &lt;em&gt;target&lt;/em&gt; handler. Flushing occurs whenever the buffer is full, or when an event of a certain severity or greater is seen.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.MemoryHandler&quot;&gt; &lt;code&gt;MemoryHandler&lt;/code&gt; &lt;/a&gt;类支持在内存中缓冲日志记录，并定期将其刷新到&lt;em&gt;目标&lt;/em&gt;处理程序。只要缓冲区已满，或者看到某个严重程度或更严重的事件，就会发生刷新。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6835f5279a08ad57f0b66909d044557366fc8f85" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.NTEventLogHandler&quot;&gt;&lt;code&gt;NTEventLogHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports sending logging messages to a local Windows NT, Windows 2000 or Windows XP event log. Before you can use it, you need Mark Hammond&amp;rsquo;s Win32 extensions for Python installed.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.NTEventLogHandler&quot;&gt; &lt;code&gt;NTEventLogHandler&lt;/code&gt; &lt;/a&gt;类支持将日志记录消息发送到本地Windows NT，Windows 2000或Windows XP事件日志。在使用它之前，您需要安装Mark Hammond的Python Win32扩展。</target>
        </trans-unit>
        <trans-unit id="7aba5b2300254e8ea0e333db3962218861ba04d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt;&lt;code&gt;QueueHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports sending logging messages to a queue, such as those implemented in the &lt;a href=&quot;queue#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt; &lt;code&gt;QueueHandler&lt;/code&gt; &lt;/a&gt;类支持将日志消息发送到队列，例如在&lt;a href=&quot;queue#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;或多&lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;模块中实现的消息。</target>
        </trans-unit>
        <trans-unit id="e133f786a9f0bbb4574a162a4bcd28dc139d0fca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt;&lt;code&gt;QueueListener&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports receiving logging messages from a queue, such as those implemented in the &lt;a href=&quot;queue#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; modules. The messages are received from a queue in an internal thread and passed, on the same thread, to one or more handlers for processing. While &lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt;&lt;code&gt;QueueListener&lt;/code&gt;&lt;/a&gt; is not itself a handler, it is documented here because it works hand-in-hand with &lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt;&lt;code&gt;QueueHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt; &lt;code&gt;QueueListener&lt;/code&gt; &lt;/a&gt;类支持从队列接收日志消息，例如在&lt;a href=&quot;queue#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;或多&lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;模块中实现的消息。消息是从内部线程中的队列接收的，并在同一线程上传递到一个或多个处理程序进行处理。尽管&lt;a href=&quot;#logging.handlers.QueueListener&quot;&gt; &lt;code&gt;QueueListener&lt;/code&gt; &lt;/a&gt;本身不是一个处理程序，但由于它与&lt;a href=&quot;#logging.handlers.QueueHandler&quot;&gt; &lt;code&gt;QueueHandler&lt;/code&gt; 协同&lt;/a&gt;工作，因此在此处进行了说明。</target>
        </trans-unit>
        <trans-unit id="bb9b0b4eb47b826b69b42a40d290b13672f8bc15" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.RotatingFileHandler&quot;&gt;&lt;code&gt;RotatingFileHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports rotation of disk log files.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.RotatingFileHandler&quot;&gt; &lt;code&gt;RotatingFileHandler&lt;/code&gt; &lt;/a&gt;类支持磁盘日志文件的旋转。</target>
        </trans-unit>
        <trans-unit id="31584d463a02ed74e40b37c8319648296b019156" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt;&lt;code&gt;SMTPHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports sending logging messages to an email address via SMTP.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.SMTPHandler&quot;&gt; &lt;code&gt;SMTPHandler&lt;/code&gt; &lt;/a&gt;类支持通过SMTP将日志消息发送到电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="d1eb30567d146d30f819a686de9415335350aa29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt;&lt;code&gt;SocketHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, sends logging output to a network socket. The base class uses a TCP socket.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.SocketHandler&quot;&gt; &lt;code&gt;SocketHandler&lt;/code&gt; &lt;/a&gt;类将日志记录输出发送到网络套接字。基类使用TCP套接字。</target>
        </trans-unit>
        <trans-unit id="1f1725eea43751716f84846378d8032df6d964f8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.SysLogHandler&quot;&gt;&lt;code&gt;SysLogHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports sending logging messages to a remote or local Unix syslog.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.SysLogHandler&quot;&gt; &lt;code&gt;SysLogHandler&lt;/code&gt; &lt;/a&gt;类支持将日志记录消息发送到远程或本地Unix syslog。</target>
        </trans-unit>
        <trans-unit id="e439d324bb2811d1000db769f81cd0d651b345d8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler&quot;&gt;&lt;code&gt;TimedRotatingFileHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, supports rotation of disk log files at certain timed intervals.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.TimedRotatingFileHandler&quot;&gt; &lt;code&gt;TimedRotatingFileHandler&lt;/code&gt; &lt;/a&gt;类支持按特定的时间间隔旋转磁盘日志文件。</target>
        </trans-unit>
        <trans-unit id="f549bfbf465afb4f59b0d34dabfb8c319bfdecdd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#logging.handlers.WatchedFileHandler&quot;&gt;&lt;code&gt;WatchedFileHandler&lt;/code&gt;&lt;/a&gt; class, located in the &lt;a href=&quot;#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module, is a &lt;code&gt;FileHandler&lt;/code&gt; which watches the file it is logging to. If the file changes, it is closed and reopened using the file name.</source>
          <target state="translated">位于&lt;a href=&quot;#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#logging.handlers.WatchedFileHandler&quot;&gt; &lt;code&gt;WatchedFileHandler&lt;/code&gt; &lt;/a&gt;类是一个 &lt;code&gt;FileHandler&lt;/code&gt; ，它监视正在记录的文件。如果文件更改，则使用文件名将其关闭并重新打开。</target>
        </trans-unit>
        <trans-unit id="bf5388a8dc4e9c74cc256017fd462ce7da0e8fb2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#mailbox.MH&quot;&gt;&lt;code&gt;MH&lt;/code&gt;&lt;/a&gt; class manipulates MH mailboxes, but it does not attempt to emulate all of &lt;strong&gt;mh&lt;/strong&gt;&amp;rsquo;s behaviors. In particular, it does not modify and is not affected by the &lt;code&gt;context&lt;/code&gt; or &lt;code&gt;.mh_profile&lt;/code&gt; files that are used by &lt;strong&gt;mh&lt;/strong&gt; to store its state and configuration.</source>
          <target state="translated">该&lt;a href=&quot;#mailbox.MH&quot;&gt; &lt;code&gt;MH&lt;/code&gt; &lt;/a&gt;类操纵MH邮箱，但它并不试图模拟所有的&lt;strong&gt;MH&lt;/strong&gt;的行为。特别是，它不会修改并且不受&lt;strong&gt;mh&lt;/strong&gt;用于存储其状态和配置的 &lt;code&gt;context&lt;/code&gt; 或 &lt;code&gt;.mh_profile&lt;/code&gt; 文件的影响。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9dd1a3f1fdf40b9925961770165ca8a82472141" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; class defines an interface and is not intended to be instantiated. Instead, format-specific subclasses should inherit from &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; and your code should instantiate a particular subclass.</source>
          <target state="translated">所述&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;类定义了一个接口，并且不旨在被实例化。而是，特定于格式的子类应从&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;继承，并且您的代码应实例化特定的子类。</target>
        </trans-unit>
        <trans-unit id="8ac3915262dc8630a67a64ad2e0ad71194086ede" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; interface is dictionary-like, with small keys corresponding to messages. Keys are issued by the &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance with which they will be used and are only meaningful to that &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance. A key continues to identify a message even if the corresponding message is modified, such as by replacing it with another message.</source>
          <target state="translated">的&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;接口是类似于字典的，与对应于消息的小键。密钥由将与之一起使用的&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;实例发出，并且仅对该&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;实例有意义。即使修改了相应的消息（例如，通过将其替换为另一条消息），键也会继续标识消息。</target>
        </trans-unit>
        <trans-unit id="a019e770f701b87042c21c3465130dceb581a0a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#math.erf&quot;&gt;&lt;code&gt;erf()&lt;/code&gt;&lt;/a&gt; function can be used to compute traditional statistical functions such as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution#Cumulative_distribution_function&quot;&gt;cumulative standard normal distribution&lt;/a&gt;:</source>
          <target state="translated">的&lt;a href=&quot;#math.erf&quot;&gt; &lt;code&gt;erf()&lt;/code&gt; &lt;/a&gt;函数可以被用于计算传统的统计功能，如&lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution#Cumulative_distribution_function&quot;&gt;累积标准正态分布&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="7a71fcebbba63874049750f91dc5d654f046999b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#mimetypes.MimeTypes&quot;&gt;&lt;code&gt;MimeTypes&lt;/code&gt;&lt;/a&gt; class may be useful for applications which may want more than one MIME-type database; it provides an interface similar to the one of the &lt;a href=&quot;#module-mimetypes&quot;&gt;&lt;code&gt;mimetypes&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">的&lt;a href=&quot;#mimetypes.MimeTypes&quot;&gt; &lt;code&gt;MimeTypes&lt;/code&gt; &lt;/a&gt;类可以是用于其可要多于一个MIME类型数据库多个应用有用; 它提供了与&lt;a href=&quot;#module-mimetypes&quot;&gt; &lt;code&gt;mimetypes&lt;/code&gt; &lt;/a&gt;模块之一相似的接口。</target>
        </trans-unit>
        <trans-unit id="32d9533a1491fb57b208e5f32f43b48d18eb2a01" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-abc&quot;&gt;&lt;code&gt;abc&lt;/code&gt;&lt;/a&gt; module also provides the following decorator:</source>
          <target state="translated">在&lt;a href=&quot;#module-abc&quot;&gt; &lt;code&gt;abc&lt;/code&gt; &lt;/a&gt;模块还提供了以下装饰：</target>
        </trans-unit>
        <trans-unit id="f1c5b0fc44115f034b4d77d538b593c9107faba0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-abc&quot;&gt;&lt;code&gt;abc&lt;/code&gt;&lt;/a&gt; module also provides the following functions:</source>
          <target state="translated">的&lt;a href=&quot;#module-abc&quot;&gt; &lt;code&gt;abc&lt;/code&gt; &lt;/a&gt;模块还提供了以下功能：</target>
        </trans-unit>
        <trans-unit id="3b06c0895f11aac3409cc1eb1c4896e4e8162e1b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-abc&quot;&gt;&lt;code&gt;abc&lt;/code&gt;&lt;/a&gt; module also supports the following legacy decorators:</source>
          <target state="translated">在&lt;a href=&quot;#module-abc&quot;&gt; &lt;code&gt;abc&lt;/code&gt; &lt;/a&gt;模块还支持以下传统装饰：</target>
        </trans-unit>
        <trans-unit id="bd250dea88ef11132e077bccd9219f3815e5b2b0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module improves on the standard library &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt; module in a number of ways including:</source>
          <target state="translated">该&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;模块提高了标准库上&lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; &lt;/a&gt;在许多方面，包括模块：</target>
        </trans-unit>
        <trans-unit id="c9bf50b09089d63d5a993888ab95201b7c5cbcc7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module makes it easy to write user-friendly command-line interfaces. The program defines what arguments it requires, and &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; will figure out how to parse those out of &lt;a href=&quot;sys#sys.argv&quot;&gt;&lt;code&gt;sys.argv&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module also automatically generates help and usage messages and issues errors when users give the program invalid arguments.</source>
          <target state="translated">该&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;模块可以很容易地编写用户友好的命令行界面。该程序定义了所需的参数，而&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;将找出如何从&lt;a href=&quot;sys#sys.argv&quot;&gt; &lt;code&gt;sys.argv&lt;/code&gt; 中&lt;/a&gt;解析这些参数。该&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;模块还自动生成的帮助和使用信息，当用户提供程序无效的参数问题的错误。</target>
        </trans-unit>
        <trans-unit id="1ea7dfeebf2214d8c7cff506c326b8d960c21969" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-ast&quot;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt; module can be executed as a script from the command line. It is as simple as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6be456db1d54d4f38e4ec57fdcedb85fa8f7bff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-ast&quot;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt; module helps Python applications to process trees of the Python abstract syntax grammar. The abstract syntax itself might change with each Python release; this module helps to find out programmatically what the current grammar looks like.</source>
          <target state="translated">该&lt;a href=&quot;#module-ast&quot;&gt; &lt;code&gt;ast&lt;/code&gt; &lt;/a&gt;模块可帮助Python应用程序的Python的抽象语法文法的进程树。每个Python版本都可能更改抽象语法。此模块有助于以编程方式找出当前语法的外观。</target>
        </trans-unit>
        <trans-unit id="e7d3a14950a2b21d8385b845f3a521bc85e901c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-atexit&quot;&gt;&lt;code&gt;atexit&lt;/code&gt;&lt;/a&gt; module defines functions to register and unregister cleanup functions. Functions thus registered are automatically executed upon normal interpreter termination. &lt;a href=&quot;#module-atexit&quot;&gt;&lt;code&gt;atexit&lt;/code&gt;&lt;/a&gt; runs these functions in the &lt;em&gt;reverse&lt;/em&gt; order in which they were registered; if you register &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt;, at interpreter termination time they will be run in the order &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;#module-atexit&quot;&gt; &lt;code&gt;atexit&lt;/code&gt; &lt;/a&gt;模块定义功能注册和注销的清理功能。这样注册的功能会在正常解释器终止后自动执行。&lt;a href=&quot;#module-atexit&quot;&gt; &lt;code&gt;atexit&lt;/code&gt; &lt;/a&gt;以注册时的&lt;em&gt;相反&lt;/em&gt;顺序运行这些功能；如果您注册 &lt;code&gt;A&lt;/code&gt; ， &lt;code&gt;B&lt;/code&gt; 和 &lt;code&gt;C&lt;/code&gt; ，则在解释器终止时，它们将按 &lt;code&gt;C&lt;/code&gt; ， &lt;code&gt;B&lt;/code&gt; ， &lt;code&gt;A&lt;/code&gt; 的顺序运行。</target>
        </trans-unit>
        <trans-unit id="09461f2a572ad5dc979c6c886dcbebdcbfc33f45" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-audioop&quot;&gt;&lt;code&gt;audioop&lt;/code&gt;&lt;/a&gt; module contains some useful operations on sound fragments. It operates on sound fragments consisting of signed integer samples 8, 16, 24 or 32 bits wide, stored in &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;. All scalar items are integers, unless specified otherwise.</source>
          <target state="translated">该&lt;a href=&quot;#module-audioop&quot;&gt; &lt;code&gt;audioop&lt;/code&gt; &lt;/a&gt;模块包含声音片段的一些有用的操作。它对声音片段进行操作，这些片段由有符号的整数样本8、16、24或32位宽组成，并存储在&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象中&lt;/a&gt;。除非另有说明，否则所有标量项均为整数。</target>
        </trans-unit>
        <trans-unit id="61dcfcac7ed1a07065dfca51fcd94e5ba45eaba6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-audioop&quot;&gt;&lt;code&gt;audioop&lt;/code&gt;&lt;/a&gt; module contains some useful operations on sound fragments. It operates on sound fragments consisting of signed integer samples 8, 16, 24 or 32 bits wide, stored in &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;. All scalar items are integers, unless specified otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae09b3a58592c0882f475dd1d36f713be9722d6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-bdb&quot;&gt;&lt;code&gt;bdb&lt;/code&gt;&lt;/a&gt; module also defines two classes:</source>
          <target state="translated">在&lt;a href=&quot;#module-bdb&quot;&gt; &lt;code&gt;bdb&lt;/code&gt; &lt;/a&gt;模块还定义了两类：</target>
        </trans-unit>
        <trans-unit id="232248945d1a22c3cb9a5862e8d9ecc59ec9c738" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-bdb&quot;&gt;&lt;code&gt;bdb&lt;/code&gt;&lt;/a&gt; module handles basic debugger functions, like setting breakpoints or managing execution via the debugger.</source>
          <target state="translated">在&lt;a href=&quot;#module-bdb&quot;&gt; &lt;code&gt;bdb&lt;/code&gt; &lt;/a&gt;模块处理基本调试器的功能，如通过调试器设置断点或管理执行。</target>
        </trans-unit>
        <trans-unit id="aa0e9cda8b76dcc67511667751aec4df606567e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-binascii&quot;&gt;&lt;code&gt;binascii&lt;/code&gt;&lt;/a&gt; module contains a number of methods to convert between binary and various ASCII-encoded binary representations. Normally, you will not use these functions directly but use wrapper modules like &lt;a href=&quot;uu#module-uu&quot;&gt;&lt;code&gt;uu&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;base64#module-base64&quot;&gt;&lt;code&gt;base64&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;binhex#module-binhex&quot;&gt;&lt;code&gt;binhex&lt;/code&gt;&lt;/a&gt; instead. The &lt;a href=&quot;#module-binascii&quot;&gt;&lt;code&gt;binascii&lt;/code&gt;&lt;/a&gt; module contains low-level functions written in C for greater speed that are used by the higher-level modules.</source>
          <target state="translated">该&lt;a href=&quot;#module-binascii&quot;&gt; &lt;code&gt;binascii&lt;/code&gt; &lt;/a&gt;模块包含了一些方法，以二进制和各种ASCII编码的二进制表示法之间的转换。通常，您不会直接使用这些函数，而是使用包装器模块（例如&lt;a href=&quot;uu#module-uu&quot;&gt; &lt;code&gt;uu&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;base64#module-base64&quot;&gt; &lt;code&gt;base64&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;binhex#module-binhex&quot;&gt; &lt;code&gt;binhex&lt;/code&gt; )&lt;/a&gt;。所述&lt;a href=&quot;#module-binascii&quot;&gt; &lt;code&gt;binascii&lt;/code&gt; &lt;/a&gt;模块包含用C语言编写更大的速度低级别的功能是由所述更高级别的模块使用。</target>
        </trans-unit>
        <trans-unit id="230ed6c84e26b9f25251e99e324667c60febba51" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-binascii&quot;&gt;&lt;code&gt;binascii&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-binascii&quot;&gt; &lt;code&gt;binascii&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="81c720d6186a47a903320723cae98c9bd445747c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-binhex&quot;&gt;&lt;code&gt;binhex&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-binhex&quot;&gt; &lt;code&gt;binhex&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="5c9e61b02ca1fa682864673e83749c144e0030fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-bisect&quot;&gt;&lt;code&gt;bisect()&lt;/code&gt;&lt;/a&gt; function can be useful for numeric table lookups. This example uses &lt;a href=&quot;#module-bisect&quot;&gt;&lt;code&gt;bisect()&lt;/code&gt;&lt;/a&gt; to look up a letter grade for an exam score (say) based on a set of ordered numeric breakpoints: 90 and up is an &amp;lsquo;A&amp;rsquo;, 80 to 89 is a &amp;lsquo;B&amp;rsquo;, and so on:</source>
          <target state="translated">该&lt;a href=&quot;#module-bisect&quot;&gt; &lt;code&gt;bisect()&lt;/code&gt; &lt;/a&gt;函数可以是用于数字表查找是有用的。本示例使用&lt;a href=&quot;#module-bisect&quot;&gt; &lt;code&gt;bisect()&lt;/code&gt; &lt;/a&gt;根据一组有序的数字断点来查找考试成绩（例如）的字母等级：90和up是'A'，80到89是'B'，依此类推：</target>
        </trans-unit>
        <trans-unit id="0db4d8367c8fa65b1ca519e0fa4866a4c08477de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; module contains:</source>
          <target state="translated">该&lt;a href=&quot;#module-bz2&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt;模块包含：</target>
        </trans-unit>
        <trans-unit id="6af3dd435e3f9abff01b6a27a709fda9f3c63f1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt; module exports the following data attributes:</source>
          <target state="translated">该&lt;a href=&quot;#module-calendar&quot;&gt; &lt;code&gt;calendar&lt;/code&gt; &lt;/a&gt;模块出口下列数据属性：</target>
        </trans-unit>
        <trans-unit id="17c7999cdaacdbb7fed3d7c718c840b2316c6c40" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; module provides a special exception handler for Python scripts. (Its name is a bit misleading. It was originally designed to display extensive traceback information in HTML for CGI scripts. It was later generalized to also display this information in plain text.) After this module is activated, if an uncaught exception occurs, a detailed, formatted report will be displayed. The report includes a traceback showing excerpts of the source code for each level, as well as the values of the arguments and local variables to currently running functions, to help you debug the problem. Optionally, you can save this information to a file instead of sending it to the browser.</source>
          <target state="translated">该&lt;a href=&quot;#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; &lt;/a&gt;模块提供了Python脚本一个特殊的异常处理程序。（它的名称有点误导。它最初旨在在HTML中显示CGI脚本的大量回溯信息。后来又泛化为也以纯文本形式显示此信息。）激活该模块后，如果发生未捕获的异常，将显示详细的格式化报告。该报告包括一个追溯，该追溯显示每个级别的源代码摘录以及当前正在运行的函数的参数和局部变量的值，以帮助您调试问题。（可选）您可以将此信息保存到文件中，而不是将其发送到浏览器。</target>
        </trans-unit>
        <trans-unit id="55b0f4245fc0c07710dea9e772bf2789d8189b32" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-cmd&quot;&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/a&gt; module is mainly useful for building custom shells that let a user work with a program interactively.</source>
          <target state="translated">该&lt;a href=&quot;#module-cmd&quot;&gt; &lt;code&gt;cmd&lt;/code&gt; &lt;/a&gt;模块是用于构建让与程序交互，用户自定义的工作主要是炮弹有用。</target>
        </trans-unit>
        <trans-unit id="96af487ef6d7e00efa4b8e683db6f6f172964429" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-codecs&quot;&gt;&lt;code&gt;codecs&lt;/code&gt;&lt;/a&gt; module defines a set of base classes which define the interfaces for working with codec objects, and can also be used as the basis for custom codec implementations.</source>
          <target state="translated">的&lt;a href=&quot;#module-codecs&quot;&gt; &lt;code&gt;codecs&lt;/code&gt; &lt;/a&gt;模块定义的一组限定了接口，用于与编解码器工作的对象的基类，也可以用来作为自定义实现的编解码器的基础。</target>
        </trans-unit>
        <trans-unit id="825e3ed0518170c83aded2c55be81235e549b50a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-codeop&quot;&gt;&lt;code&gt;codeop&lt;/code&gt;&lt;/a&gt; module provides a way of doing each of these things, and a way of doing them both.</source>
          <target state="translated">该&lt;a href=&quot;#module-codeop&quot;&gt; &lt;code&gt;codeop&lt;/code&gt; &lt;/a&gt;模块提供每做这些事情的方式，和做他们两个的一种方式。</target>
        </trans-unit>
        <trans-unit id="052d15e90591e35dab5867b81d334d6aa14b8029" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-codeop&quot;&gt;&lt;code&gt;codeop&lt;/code&gt;&lt;/a&gt; module provides utilities upon which the Python read-eval-print loop can be emulated, as is done in the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; module. As a result, you probably don&amp;rsquo;t want to use the module directly; if you want to include such a loop in your program you probably want to use the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">所述&lt;a href=&quot;#module-codeop&quot;&gt; &lt;code&gt;codeop&lt;/code&gt; &lt;/a&gt;模块提供在其上的Python读取-求值-输出循环可以模拟，如中完成公用事业&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;模块。结果，您可能不想直接使用该模块。如果要在程序中包含这样的循环，则可能要使用&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="a65fb5b258755a4579d3195a6bac80725fe5d317" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-colorsys&quot;&gt;&lt;code&gt;colorsys&lt;/code&gt;&lt;/a&gt; module defines bidirectional conversions of color values between colors expressed in the RGB (Red Green Blue) color space used in computer monitors and three other coordinate systems: YIQ, HLS (Hue Lightness Saturation) and HSV (Hue Saturation Value). Coordinates in all of these color spaces are floating point values. In the YIQ space, the Y coordinate is between 0 and 1, but the I and Q coordinates can be positive or negative. In all other spaces, the coordinates are all between 0 and 1.</source>
          <target state="translated">所述&lt;a href=&quot;#module-colorsys&quot;&gt; &lt;code&gt;colorsys&lt;/code&gt; &lt;/a&gt;模块定义在计算机显示器中使用的RGB（红绿蓝）颜色空间表示的颜色和其他三个坐标系之间的颜色值的双向转换：YIQ，HLS（色调亮度饱和度）和HSV（色调饱和度值）。所有这些颜色空间中的坐标均为浮点值。在YIQ空间中，Y坐标介于0和1之间，但I和Q坐标可以为正或负。在所有其他空间中，坐标都在0到1之间。</target>
        </trans-unit>
        <trans-unit id="c85480a61de9b939bd0de9d56021736c13db66f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-colorsys&quot;&gt;&lt;code&gt;colorsys&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-colorsys&quot;&gt; &lt;code&gt;colorsys&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="885d466e93eb82c4aae2ef859e52b25a2b0cbe05" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-concurrent.futures&quot;&gt;&lt;code&gt;concurrent.futures&lt;/code&gt;&lt;/a&gt; module provides a high-level interface for asynchronously executing callables.</source>
          <target state="translated">所述&lt;a href=&quot;#module-concurrent.futures&quot;&gt; &lt;code&gt;concurrent.futures&lt;/code&gt; &lt;/a&gt;模块提供了用于异步执行可调用的高级接口。</target>
        </trans-unit>
        <trans-unit id="f5839cbd7564f7728fd1d678c29d8a3505447a24" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-copyreg&quot;&gt;&lt;code&gt;copyreg&lt;/code&gt;&lt;/a&gt; module offers a way to define functions used while pickling specific objects. The &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; modules use those functions when pickling/copying those objects. The module provides configuration information about object constructors which are not classes. Such constructors may be factory functions or class instances.</source>
          <target state="translated">该&lt;a href=&quot;#module-copyreg&quot;&gt; &lt;code&gt;copyreg&lt;/code&gt; &lt;/a&gt;模块提供了一种方法来定义，而酸洗特定对象使用的功能。腌制/复制那些对象时，&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;copy#module-copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;模块使用那些功能。该模块提供有关不是类的对象构造函数的配置信息。这样的构造函数可以是工厂函数或类实例。</target>
        </trans-unit>
        <trans-unit id="721ebf8a61fd647ae84d28799df425b0d4dfbde5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-crypt&quot;&gt;&lt;code&gt;crypt&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">在&lt;a href=&quot;#module-crypt&quot;&gt; &lt;code&gt;crypt&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="1c62a1b252997090398bfb1ebd100196cab3225e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-crypt&quot;&gt;&lt;code&gt;crypt&lt;/code&gt;&lt;/a&gt; module defines the list of hashing methods (not all methods are available on all platforms):</source>
          <target state="translated">该&lt;a href=&quot;#module-crypt&quot;&gt; &lt;code&gt;crypt&lt;/code&gt; &lt;/a&gt;模块定义的哈希方法列表中（不是所有的方法都适用于所有平台）：</target>
        </trans-unit>
        <trans-unit id="c636424130025f1e89ce7931f9bbbabaa890facc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module defines the following classes:</source>
          <target state="translated">的&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;模块定义了以下类：</target>
        </trans-unit>
        <trans-unit id="27431b45d67a6159175c47900316994fcaec91cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module defines the following constants:</source>
          <target state="translated">的&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;模块定义了下列常数：</target>
        </trans-unit>
        <trans-unit id="2a8046905055a0a0b6a1413246dbf6c34224b1ef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module defines the following exception:</source>
          <target state="translated">的&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;模块定义了下面的例外：</target>
        </trans-unit>
        <trans-unit id="df713f7e9acfda4fb51e36976ba8818bb68c3d50" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">的&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="ed7b40e10e0b99a98d872d4f9807b33889674efd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module implements classes to read and write tabular data in CSV format. It allows programmers to say, &amp;ldquo;write this data in the format preferred by Excel,&amp;rdquo; or &amp;ldquo;read data from this file which was generated by Excel,&amp;rdquo; without knowing the precise details of the CSV format used by Excel. Programmers can also describe the CSV formats understood by other applications or define their own special-purpose CSV formats.</source>
          <target state="translated">该&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;模块实现类读取和CSV格式写入表格数据。它使程序员可以说&amp;ldquo;以Excel首选的格式写入此数据&amp;rdquo;，或&amp;ldquo;从Excel生成的此文件中读取数据&amp;rdquo;，而无需知道Excel使用的CSV格式的确切细节。程序员还可以描述其他应用程序可以理解的CSV格式，或者定义自己的专用CSV格式。</target>
        </trans-unit>
        <trans-unit id="dfd8e3c2e8154ec4a3cd8f80fa7b3c3c209a2772" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects read and write sequences. Programmers can also read and write data in dictionary form using the &lt;a href=&quot;#csv.DictReader&quot;&gt;&lt;code&gt;DictReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#csv.DictWriter&quot;&gt;&lt;code&gt;DictWriter&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">该&lt;a href=&quot;#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;模块的&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;的对象读取和写入序列。程序员还可以使用&lt;a href=&quot;#csv.DictReader&quot;&gt; &lt;code&gt;DictReader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#csv.DictWriter&quot;&gt; &lt;code&gt;DictWriter&lt;/code&gt; &lt;/a&gt;类以字典形式读取和写入数据。</target>
        </trans-unit>
        <trans-unit id="7625b256eb64d8fea01867d67ac0134999467f64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt; module defines the following data members:</source>
          <target state="translated">的&lt;a href=&quot;#module-curses&quot;&gt; &lt;code&gt;curses&lt;/code&gt; &lt;/a&gt;模块定义了下面的数据成员：</target>
        </trans-unit>
        <trans-unit id="530db11d214428f7bb16efb76c2183ef8978387d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-curses&quot;&gt;&lt;code&gt;curses&lt;/code&gt;&lt;/a&gt; module provides an interface to the curses library, the de-facto standard for portable advanced terminal handling.</source>
          <target state="translated">的&lt;a href=&quot;#module-curses&quot;&gt; &lt;code&gt;curses&lt;/code&gt; &lt;/a&gt;模块提供到curses库，对于便携式终端先进搬运事实上的标准的接口。</target>
        </trans-unit>
        <trans-unit id="b5e85f84c3cb5ea987216b39f8fde862c3b03857" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-curses.ascii&quot;&gt;&lt;code&gt;curses.ascii&lt;/code&gt;&lt;/a&gt; module supplies name constants for ASCII characters and functions to test membership in various ASCII character classes. The constants supplied are names for control characters as follows:</source>
          <target state="translated">该&lt;a href=&quot;#module-curses.ascii&quot;&gt; &lt;code&gt;curses.ascii&lt;/code&gt; &lt;/a&gt;模块用品命名为ASCII字符常量和功能在各种ASCII字符类测试的成员。提供的常量是控制字符的名称，如下所示：</target>
        </trans-unit>
        <trans-unit id="0ef5dd676e2a85889cd2acbb8c2771ade941730d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-curses.textpad&quot;&gt;&lt;code&gt;curses.textpad&lt;/code&gt;&lt;/a&gt; module provides a &lt;a href=&quot;#curses.textpad.Textbox&quot;&gt;&lt;code&gt;Textbox&lt;/code&gt;&lt;/a&gt; class that handles elementary text editing in a curses window, supporting a set of keybindings resembling those of Emacs (thus, also of Netscape Navigator, BBedit 6.x, FrameMaker, and many other programs). The module also provides a rectangle-drawing function useful for framing text boxes or for other purposes.</source>
          <target state="translated">该&lt;a href=&quot;#module-curses.textpad&quot;&gt; &lt;code&gt;curses.textpad&lt;/code&gt; &lt;/a&gt;模块提供了一个&lt;a href=&quot;#curses.textpad.Textbox&quot;&gt; &lt;code&gt;Textbox&lt;/code&gt; &lt;/a&gt;类来处理基本文字的诅咒窗口编辑，支持那些类似的Emacs一组键绑定的（因此，也Netscape Navigator中，BBEdit的6.x中，FrameMaker中，和许多其他程序）。该模块还提供了矩形绘制功能，可用于为文本框定框或用于其他目的。</target>
        </trans-unit>
        <trans-unit id="68fa7b8d8cd84f32489bcf52cf35218335bd2861" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module exports the following constants:</source>
          <target state="translated">该&lt;a href=&quot;#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;模块导出以下常量：</target>
        </trans-unit>
        <trans-unit id="d3d2735ee014446e28a8622acf775517ae092333" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module has a basic &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; class (for handling arbitrary fixed offsets from UTC) and its &lt;a href=&quot;#datetime.timezone.utc&quot;&gt;&lt;code&gt;timezone.utc&lt;/code&gt;&lt;/a&gt; attribute (a UTC timezone instance).</source>
          <target state="translated">的&lt;a href=&quot;#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;模块具有基本&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;的类（从UTC处理任意固定偏移量）及其&lt;a href=&quot;#datetime.timezone.utc&quot;&gt; &lt;code&gt;timezone.utc&lt;/code&gt; &lt;/a&gt;属性（一个UTC时区实例）。</target>
        </trans-unit>
        <trans-unit id="4b2f35fb3014c39c4303763cc20160296da87ef0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module supplies classes for manipulating dates and times.</source>
          <target state="translated">该&lt;a href=&quot;#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;模块用品类处理日期和时间。</target>
        </trans-unit>
        <trans-unit id="224fb159bc8424f10fd5ee5ca9b0cae4008a74b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt; module is intended as a last resort fallback for the &lt;a href=&quot;#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt; module when a more robust module is not available. The &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt; module is not written for speed and is not nearly as heavily used as the other database modules.</source>
          <target state="translated">当没有更强大的模块时，&lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; &lt;/a&gt;模块将用作&lt;a href=&quot;#module-dbm&quot;&gt; &lt;code&gt;dbm&lt;/code&gt; &lt;/a&gt;模块的最后手段。该&lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; &lt;/a&gt;模块不求速度写，并且几乎没有大量用作其他数据库模块。</target>
        </trans-unit>
        <trans-unit id="d4aee0663c41d37a708ff1a6a8740267197fa621" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt; module provides a persistent dictionary-like interface which is written entirely in Python. Unlike other modules such as &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt; no external library is required. As with other persistent mappings, the keys and values are always stored as bytes.</source>
          <target state="translated">所述&lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; &lt;/a&gt;模块提供其在Python完全写入一个持久类似于字典的接口。与其他模块（例如&lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; )&lt;/a&gt;不同，不需要外部库。与其他持久性映射一样，键和值始终存储为字节。</target>
        </trans-unit>
        <trans-unit id="a81bac34c141774d30f753105eeea411b8b8b5e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt; module provides an interface to the GNU DBM library. &lt;code&gt;dbm.gnu.gdbm&lt;/code&gt; objects behave like mappings (dictionaries), except that keys and values are always converted to bytes before storing. Printing a &lt;code&gt;gdbm&lt;/code&gt; object doesn&amp;rsquo;t print the keys and values, and the &lt;code&gt;items()&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; methods are not supported.</source>
          <target state="translated">所述&lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt;模块提供了与GNU DBM库的接口。 &lt;code&gt;dbm.gnu.gdbm&lt;/code&gt; 对象的行为类似于映射（字典），不同之处在于，在存储之前，键和值始终会转换为字节。打印 &lt;code&gt;gdbm&lt;/code&gt; 对象不会打印键和值，并且不支持 &lt;code&gt;items()&lt;/code&gt; 和 &lt;code&gt;values()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="47e5dd53aa4406655c5446f6ca3c8f631ee6ed71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt; module provides an interface to the Unix &amp;ldquo;(n)dbm&amp;rdquo; library. Dbm objects behave like mappings (dictionaries), except that keys and values are always stored as bytes. Printing a &lt;code&gt;dbm&lt;/code&gt; object doesn&amp;rsquo;t print the keys and values, and the &lt;code&gt;items()&lt;/code&gt; and &lt;code&gt;values()&lt;/code&gt; methods are not supported.</source>
          <target state="translated">所述&lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; &lt;/a&gt;模块提供到Unix&amp;ldquo;（n）的DBM&amp;rdquo;库的接口。Dbm对象的行为类似于映射（字典），只是键和值始终以字节存储。打印 &lt;code&gt;dbm&lt;/code&gt; 对象不会打印键和值，并且不支持 &lt;code&gt;items()&lt;/code&gt; 和 &lt;code&gt;values()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="1d3eb110940a6d0c2a6b4dec54bf67cbb5278cf6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-decimal&quot;&gt;&lt;code&gt;decimal&lt;/code&gt;&lt;/a&gt; module makes it possible to restore the identities by expanding the precision sufficiently to avoid loss of significance:</source>
          <target state="translated">该&lt;a href=&quot;#module-decimal&quot;&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;/a&gt;模块能够通过充分扩大精度意义以免丢失恢复身份：</target>
        </trans-unit>
        <trans-unit id="f1c49495d316a958e59f16606cc20968ceafbde8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-decimal&quot;&gt;&lt;code&gt;decimal&lt;/code&gt;&lt;/a&gt; module provides support for fast correctly-rounded decimal floating point arithmetic. It offers several advantages over the &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; datatype:</source>
          <target state="translated">该&lt;a href=&quot;#module-decimal&quot;&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;/a&gt;模块提供了快速准确全面的十进制浮点运算的支持。与&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;数据类型相比，它具有几个优点：</target>
        </trans-unit>
        <trans-unit id="0b04c5fc66e11c44d867e1a7fff66f53200ae38a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dis&quot;&gt;&lt;code&gt;dis&lt;/code&gt;&lt;/a&gt; module also defines the following analysis functions that convert the input directly to the desired output. They can be useful if only a single operation is being performed, so the intermediate analysis object isn&amp;rsquo;t useful:</source>
          <target state="translated">该&lt;a href=&quot;#module-dis&quot;&gt; &lt;code&gt;dis&lt;/code&gt; &lt;/a&gt;模块还定义了直接转换输入到所需的输出下面的分析功能。如果仅执行单个操作，它们将很有用，因此中间分析对象无用：</target>
        </trans-unit>
        <trans-unit id="ccd02e4c91d4eee4a192e274ca77914c68054b5f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dis&quot;&gt;&lt;code&gt;dis&lt;/code&gt;&lt;/a&gt; module supports the analysis of CPython &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytecode&quot;&gt;bytecode&lt;/a&gt; by disassembling it. The CPython bytecode which this module takes as an input is defined in the file &lt;code&gt;Include/opcode.h&lt;/code&gt; and used by the compiler and the interpreter.</source>
          <target state="translated">该&lt;a href=&quot;#module-dis&quot;&gt; &lt;code&gt;dis&lt;/code&gt; &lt;/a&gt;模块支持的CPython的分析&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytecode&quot;&gt;字节码&lt;/a&gt;被拆卸它。该模块作为输入的CPython字节码在文件 &lt;code&gt;Include/opcode.h&lt;/code&gt; 中定义，并由编译器和解释器使用。</target>
        </trans-unit>
        <trans-unit id="27883768dcb9ba73767aaf75a0eb7394dbd3e1ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-dis&quot;&gt;&lt;code&gt;dis&lt;/code&gt;&lt;/a&gt; module supports the analysis of CPython &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytecode&quot;&gt;bytecode&lt;/a&gt; by disassembling it. The CPython bytecode which this module takes as an input is defined in the file &lt;code&gt;Include/opcode.h&lt;/code&gt; and used by the compiler and the interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83431c34eb88b196a63f7d81ddc1e74988c77b08" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; package provides support for building and installing additional modules into a Python installation. The new modules may be either 100%-pure Python, or may be extension modules written in C, or may be collections of Python packages which include modules coded in both Python and C.</source>
          <target state="translated">所述&lt;a href=&quot;#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt;包提供了构建和安装附加模块到Python安装支持。新模块可以是100％纯的Python，也可以是用C编写的扩展模块，也可以是Python软件包的集合，其中包括以Python和C编码的模块。</target>
        </trans-unit>
        <trans-unit id="f19705a8fbfef4641836bb169973d67accdf5232" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; module searches for pieces of text that look like interactive Python sessions, and then executes those sessions to verify that they work exactly as shown. There are several common ways to use doctest:</source>
          <target state="translated">该&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;文本块模块查找看起来像交互式Python会话，然后执行这些会议，以确认这些工作完全如图所示。有多种使用doctest的常用方法：</target>
        </trans-unit>
        <trans-unit id="518c528d98749aa7b88d3f6f6943b6e0c9e88226" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package is a library for managing email messages. It is specifically &lt;em&gt;not&lt;/em&gt; designed to do any sending of email messages to SMTP (&lt;a href=&quot;https://tools.ietf.org/html/rfc2821.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2821&lt;/strong&gt;&lt;/a&gt;), NNTP, or other servers; those are functions of modules such as &lt;a href=&quot;smtplib#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;nntplib#module-nntplib&quot;&gt;&lt;code&gt;nntplib&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package attempts to be as RFC-compliant as possible, supporting &lt;a href=&quot;https://tools.ietf.org/html/rfc5233.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 5233&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt;, as well as such MIME-related RFCs as &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2046&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2183.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2183&lt;/strong&gt;&lt;/a&gt;, and &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;包是一个邮件消息管理库。它&lt;em&gt;不是&lt;/em&gt;专门为向SMTP（&lt;a href=&quot;https://tools.ietf.org/html/rfc2821.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2821&lt;/strong&gt;&lt;/a&gt;），NNTP或其他服务器发送电子邮件&lt;em&gt;而&lt;/em&gt;设计的；这些是模块的功能，例如&lt;a href=&quot;smtplib#module-smtplib&quot;&gt; &lt;code&gt;smtplib&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;nntplib#module-nntplib&quot;&gt; &lt;code&gt;nntplib&lt;/code&gt; &lt;/a&gt;。该&lt;a href=&quot;#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;包的尝试是为RFC兼容的可能，支持&lt;a href=&quot;https://tools.ietf.org/html/rfc5233.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 5233&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt;，以及这样的MIME相关的RFC为&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2046&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://tools.ietf.org/html/rfc2183.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2183&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6d0eb3b7300956a2ceeb28372a83de449576a00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-email.charset&quot;&gt;&lt;code&gt;email.charset&lt;/code&gt;&lt;/a&gt; module also provides the following functions for adding new entries to the global character set, alias, and codec registries:</source>
          <target state="translated">该&lt;a href=&quot;#module-email.charset&quot;&gt; &lt;code&gt;email.charset&lt;/code&gt; &lt;/a&gt;模块还提供了以下功能以添加新条目全球字符集，别名和编解码器的注册：</target>
        </trans-unit>
        <trans-unit id="276df02b8f91028e04b917f396e67af6014f067f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-email.generator&quot;&gt;&lt;code&gt;email.generator&lt;/code&gt;&lt;/a&gt; module also provides a derived class, &lt;a href=&quot;#email.generator.DecodedGenerator&quot;&gt;&lt;code&gt;DecodedGenerator&lt;/code&gt;&lt;/a&gt;, which is like the &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; base class, except that non-&lt;em&gt;text&lt;/em&gt; parts are not serialized, but are instead represented in the output stream by a string derived from a template filled in with information about the part.</source>
          <target state="translated">所述&lt;a href=&quot;#module-email.generator&quot;&gt; &lt;code&gt;email.generator&lt;/code&gt; &lt;/a&gt;模块还提供了派生类，&lt;a href=&quot;#email.generator.DecodedGenerator&quot;&gt; &lt;code&gt;DecodedGenerator&lt;/code&gt; &lt;/a&gt;，它是像&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;基类，不同之处在于非&lt;em&gt;文本&lt;/em&gt;部分不序列化，而是通过从填充有信息的模板衍生出的字符串的输出流中，而不是表示关于部分。</target>
        </trans-unit>
        <trans-unit id="c5baa91c85a09658397938aaa55e254801323f0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-email.header&quot;&gt;&lt;code&gt;email.header&lt;/code&gt;&lt;/a&gt; module also provides the following convenient functions.</source>
          <target state="translated">所述&lt;a href=&quot;#module-email.header&quot;&gt; &lt;code&gt;email.header&lt;/code&gt; &lt;/a&gt;模块还提供了以下方便的功能。</target>
        </trans-unit>
        <trans-unit id="864ae3019787fbbacc4869aa22ed280c894269df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-ensurepip&quot;&gt;&lt;code&gt;ensurepip&lt;/code&gt;&lt;/a&gt; package provides support for bootstrapping the &lt;code&gt;pip&lt;/code&gt; installer into an existing Python installation or virtual environment. This bootstrapping approach reflects the fact that &lt;code&gt;pip&lt;/code&gt; is an independent project with its own release cycle, and the latest available stable version is bundled with maintenance and feature releases of the CPython reference interpreter.</source>
          <target state="translated">所述&lt;a href=&quot;#module-ensurepip&quot;&gt; &lt;code&gt;ensurepip&lt;/code&gt; &lt;/a&gt;包提供用于自举支持 &lt;code&gt;pip&lt;/code&gt; 安装到现有的Python安装或虚拟环境。这种引导方法反映了以下事实： &lt;code&gt;pip&lt;/code&gt; 是一个具有自己发布周期的独立项目，并且最新的稳定版本与CPython参考解释器的维护版本和功能发布捆绑在一起。</target>
        </trans-unit>
        <trans-unit id="2e914c64de75e03d81ec5c06af9f225333493592" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-filecmp&quot;&gt;&lt;code&gt;filecmp&lt;/code&gt;&lt;/a&gt; module defines functions to compare files and directories, with various optional time/correctness trade-offs. For comparing files, see also the &lt;a href=&quot;difflib#module-difflib&quot;&gt;&lt;code&gt;difflib&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">该&lt;a href=&quot;#module-filecmp&quot;&gt; &lt;code&gt;filecmp&lt;/code&gt; &lt;/a&gt;模块定义功能来比较的文件和目录，选择多种不同的时间/正确性权衡。要比较文件，另请参阅&lt;a href=&quot;difflib#module-difflib&quot;&gt; &lt;code&gt;difflib&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="afe0c20edeebc5dc92c7666ce3faa36625476e96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-filecmp&quot;&gt;&lt;code&gt;filecmp&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-filecmp&quot;&gt; &lt;code&gt;filecmp&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="8baea7d5d3185343f11f955e55d58ecf627ccc7a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-fractions&quot;&gt;&lt;code&gt;fractions&lt;/code&gt;&lt;/a&gt; module provides support for rational number arithmetic.</source>
          <target state="translated">的&lt;a href=&quot;#module-fractions&quot;&gt; &lt;code&gt;fractions&lt;/code&gt; &lt;/a&gt;模块为有理数算法的支持。</target>
        </trans-unit>
        <trans-unit id="3f749de40e7867147e0f2845567293403dfc026c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-functools&quot;&gt;&lt;code&gt;functools&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-functools&quot;&gt; &lt;code&gt;functools&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="7f1fe2c5ba179e60e1f1cb7dcb0baa108c0d4357" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-functools&quot;&gt;&lt;code&gt;functools&lt;/code&gt;&lt;/a&gt; module is for higher-order functions: functions that act on or return other functions. In general, any callable object can be treated as a function for the purposes of this module.</source>
          <target state="translated">该&lt;a href=&quot;#module-functools&quot;&gt; &lt;code&gt;functools&lt;/code&gt; &lt;/a&gt;模块是高阶函数：函数的行为或返回等功能。通常，就此模块而言，任何可调用对象都可以视为函数。</target>
        </trans-unit>
        <trans-unit id="97d1a2dde8c7152f96bb497e1ed989a639688463" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gc&quot;&gt;&lt;code&gt;gc&lt;/code&gt;&lt;/a&gt; module provides the following functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-gc&quot;&gt; &lt;code&gt;gc&lt;/code&gt; &lt;/a&gt;模块提供以下功能：</target>
        </trans-unit>
        <trans-unit id="c62bc40a4ff1e5558a365f12d75aa08d21852606" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-getopt&quot;&gt;&lt;code&gt;getopt&lt;/code&gt;&lt;/a&gt; module is a parser for command line options whose API is designed to be familiar to users of the C &lt;code&gt;getopt()&lt;/code&gt; function. Users who are unfamiliar with the C &lt;code&gt;getopt()&lt;/code&gt; function or who would like to write less code and get better help and error messages should consider using the &lt;a href=&quot;argparse#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">的&lt;a href=&quot;#module-getopt&quot;&gt; &lt;code&gt;getopt&lt;/code&gt; 的&lt;/a&gt;模块是用于命令行选项，其API被设计成熟悉到C的用户解析器 &lt;code&gt;getopt()&lt;/code&gt; 函数。不熟悉C &lt;code&gt;getopt()&lt;/code&gt; 函数或希望编写更少代码并获得更好帮助和错误消息的用户，应考虑改用&lt;a href=&quot;argparse#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="9c38cf20156455ac80ef263339cb001fb1613a20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-getpass&quot;&gt;&lt;code&gt;getpass&lt;/code&gt;&lt;/a&gt; module provides two functions:</source>
          <target state="translated">在&lt;a href=&quot;#module-getpass&quot;&gt; &lt;code&gt;getpass&lt;/code&gt; &lt;/a&gt;模块提供两种功能：</target>
        </trans-unit>
        <trans-unit id="f3f02bcefd4d73672c7971b1989f2f09e0845192" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module defines the following API, which is very similar to the GNU &lt;strong&gt;gettext&lt;/strong&gt; API. If you use this API you will affect the translation of your entire application globally. Often this is what you want if your application is monolingual, with the choice of language dependent on the locale of your user. If you are localizing a Python module, or if your application needs to switch languages on the fly, you probably want to use the class-based API instead.</source>
          <target state="translated">所述&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; 的&lt;/a&gt;模块定义了下列API，这是非常相似的GNU &lt;strong&gt;gettext的&lt;/strong&gt; API。如果使用此API，则会在全球范围内影响整个应用程序的翻译。如果您的应用程序是单语的，并且您的语言选择取决于用户的语言环境，通常这就是您想要的。如果您正在本地化Python模块，或者您的应用程序需要即时切换语言，则可能要使用基于类的API。</target>
        </trans-unit>
        <trans-unit id="304703f37d6e6bee804d49ec8effba5df7d13725" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module provides internationalization (I18N) and localization (L10N) services for your Python modules and applications. It supports both the GNU &lt;strong&gt;gettext&lt;/strong&gt; message catalog API and a higher level, class-based API that may be more appropriate for Python files. The interface described below allows you to write your module and application messages in one natural language, and provide a catalog of translated messages for running under different natural languages.</source>
          <target state="translated">该&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; 的&lt;/a&gt;模块提供国际化（I18N）和你的Python模块和应用程序本地化（localization）服务。它同时支持GNU &lt;strong&gt;gettext&lt;/strong&gt;消息目录API和更高级别的，基于类的API，它们可能更适合于Python文件。如下所述的界面允许您用一种自然语言编写模块和应用程序消息，并提供翻译后的消息目录，以便在不同的自然语言下运行。</target>
        </trans-unit>
        <trans-unit id="465e3272bad4a252804f16ac717e1e46b75c91a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module provides one additional class derived from &lt;a href=&quot;#gettext.NullTranslations&quot;&gt;&lt;code&gt;NullTranslations&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;#gettext.GNUTranslations&quot;&gt;&lt;code&gt;GNUTranslations&lt;/code&gt;&lt;/a&gt;. This class overrides &lt;code&gt;_parse()&lt;/code&gt; to enable reading GNU &lt;strong&gt;gettext&lt;/strong&gt; format &lt;code&gt;.mo&lt;/code&gt; files in both big-endian and little-endian format.</source>
          <target state="translated">所述&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; 的&lt;/a&gt;模块提供衍生自一个附加类&lt;a href=&quot;#gettext.NullTranslations&quot;&gt; &lt;code&gt;NullTranslations&lt;/code&gt; &lt;/a&gt;：&lt;a href=&quot;#gettext.GNUTranslations&quot;&gt; &lt;code&gt;GNUTranslations&lt;/code&gt; &lt;/a&gt;。此类重写 &lt;code&gt;_parse()&lt;/code&gt; 以启用以大端和小端格式读取GNU &lt;strong&gt;gettext&lt;/strong&gt;格式的 &lt;code&gt;.mo&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="66eca1cb3bba0fc5c53d2a48fa4bd9ad5c7386f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; module finds all the pathnames matching a specified pattern according to the rules used by the Unix shell, although results are returned in arbitrary order. No tilde expansion is done, but &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, and character ranges expressed with &lt;code&gt;[]&lt;/code&gt; will be correctly matched. This is done by using the &lt;a href=&quot;os#os.scandir&quot;&gt;&lt;code&gt;os.scandir()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fnmatch#fnmatch.fnmatch&quot;&gt;&lt;code&gt;fnmatch.fnmatch()&lt;/code&gt;&lt;/a&gt; functions in concert, and not by actually invoking a subshell. Note that unlike &lt;a href=&quot;fnmatch#fnmatch.fnmatch&quot;&gt;&lt;code&gt;fnmatch.fnmatch()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; treats filenames beginning with a dot (&lt;code&gt;.&lt;/code&gt;) as special cases. (For tilde and shell variable expansion, use &lt;a href=&quot;os.path#os.path.expanduser&quot;&gt;&lt;code&gt;os.path.expanduser()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os.path#os.path.expandvars&quot;&gt;&lt;code&gt;os.path.expandvars()&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">的&lt;a href=&quot;#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;模块发现所有匹配的根据由Unix外壳使用的规则指定模式的路径名，尽管结果在任意的顺序返回。没有波浪线扩展已完成，但 &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;?&lt;/code&gt; ，并且用 &lt;code&gt;[]&lt;/code&gt; 表示的字符范围将正确匹配。这是通过&lt;a href=&quot;os#os.scandir&quot;&gt; &lt;code&gt;os.scandir()&lt;/code&gt; &lt;/a&gt;使用os.scandir（）和&lt;a href=&quot;fnmatch#fnmatch.fnmatch&quot;&gt; &lt;code&gt;fnmatch.fnmatch()&lt;/code&gt; &lt;/a&gt;函数来完成的，而不是通过实际调用子shell来完成的。请注意，与&lt;a href=&quot;fnmatch#fnmatch.fnmatch&quot;&gt; &lt;code&gt;fnmatch.fnmatch()&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;将以点（ &lt;code&gt;.&lt;/code&gt; ）开头的文件名视为特殊情况。（对于波浪号和外壳变量扩展，请使用&lt;a href=&quot;os.path#os.path.expanduser&quot;&gt; &lt;code&gt;os.path.expanduser()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;os.path#os.path.expandvars&quot;&gt; &lt;code&gt;os.path.expandvars()&lt;/code&gt; &lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="4be053802161cf6ae090718423b87acfb8377d39" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-graphlib&quot;&gt;&lt;code&gt;graphlib&lt;/code&gt;&lt;/a&gt; module defines the following exception classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee135b0e52ba012d398c3ba5f0f48800bfbf94c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; module provides a simple command line interface to compress or decompress files.</source>
          <target state="translated">所述&lt;a href=&quot;#module-gzip&quot;&gt; &lt;code&gt;gzip&lt;/code&gt; &lt;/a&gt;模块提供了一个简单的命令行界面来压缩或解压缩的文件。</target>
        </trans-unit>
        <trans-unit id="15bd57aeec8fc138aafe0bb49a573984c38a169f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; module provides the &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; class, as well as the &lt;a href=&quot;#gzip.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#gzip.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#gzip.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; convenience functions. The &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; class reads and writes &lt;strong&gt;gzip&lt;/strong&gt;-format files, automatically compressing or decompressing the data so that it looks like an ordinary &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;#module-gzip&quot;&gt; &lt;code&gt;gzip&lt;/code&gt; &lt;/a&gt;模块提供&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; 中&lt;/a&gt;类，以及在&lt;a href=&quot;#gzip.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#gzip.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#gzip.decompress&quot;&gt; &lt;code&gt;decompress()&lt;/code&gt; &lt;/a&gt;的便利的功能。该&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; 中&lt;/a&gt;类读取和写入&lt;strong&gt;gzip压缩&lt;/strong&gt; -format文件，自动压缩或解压缩数据，使得它看起来像一个普通的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="49b7cb6b7cbd5794aa3e23bd88647bc5f3128d5a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; module provides the &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; class, as well as the &lt;a href=&quot;#gzip.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#gzip.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#gzip.decompress&quot;&gt;&lt;code&gt;decompress()&lt;/code&gt;&lt;/a&gt; convenience functions. The &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; class reads and writes &lt;strong&gt;gzip&lt;/strong&gt;-format files, automatically compressing or decompressing the data so that it looks like an ordinary &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f6b35db45c5afe68357f79f8ad46f1bea281f8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; module defines classes for automatic handling of HTTP cookies. It is useful for accessing web sites that require small pieces of data &amp;ndash; &lt;em&gt;cookies&lt;/em&gt; &amp;ndash; to be set on the client machine by an HTTP response from a web server, and then returned to the server in later HTTP requests.</source>
          <target state="translated">该&lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; &lt;/a&gt;为HTTP饼干的自动处理模块定义的类。这对于访问需要少量数据（&lt;em&gt;cookie）的&lt;/em&gt;网站很有用，该数据由来自Web服务器的HTTP响应在客户端计算机上设置，然后在以后的HTTP请求中返回给服务器。</target>
        </trans-unit>
        <trans-unit id="3f3fea001927a18b85a4c09ec271e65d4287d954" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-http.cookies&quot;&gt;&lt;code&gt;http.cookies&lt;/code&gt;&lt;/a&gt; module defines classes for abstracting the concept of cookies, an HTTP state management mechanism. It supports both simple string-only cookies, and provides an abstraction for having any serializable data-type as cookie value.</source>
          <target state="translated">所述&lt;a href=&quot;#module-http.cookies&quot;&gt; &lt;code&gt;http.cookies&lt;/code&gt; &lt;/a&gt;模块定义的类用于提取饼干的概念，一个HTTP状态管理机制。它既支持简单的纯字符串cookie，又提供了抽象化，用于将任何可序列化的数据类型作为cookie值。</target>
        </trans-unit>
        <trans-unit id="5e195dbec46f0f01af467f05e89883e34aaea795" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-imghdr&quot;&gt;&lt;code&gt;imghdr&lt;/code&gt;&lt;/a&gt; module defines the following function:</source>
          <target state="translated">所述&lt;a href=&quot;#module-imghdr&quot;&gt; &lt;code&gt;imghdr&lt;/code&gt; &lt;/a&gt;模块定义下面的函数：</target>
        </trans-unit>
        <trans-unit id="5051c64ebd99c3b18d020b3ccbef47324152e360" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-imghdr&quot;&gt;&lt;code&gt;imghdr&lt;/code&gt;&lt;/a&gt; module determines the type of image contained in a file or byte stream.</source>
          <target state="translated">所述&lt;a href=&quot;#module-imghdr&quot;&gt; &lt;code&gt;imghdr&lt;/code&gt; &lt;/a&gt;模块确定包含在一个文件或字节流的图像类型。</target>
        </trans-unit>
        <trans-unit id="b37e066e590ee782ac8088a20c1d0d219f14201c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-importlib.abc&quot;&gt;&lt;code&gt;importlib.abc&lt;/code&gt;&lt;/a&gt; module contains all of the core abstract base classes used by &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt;. Some subclasses of the core abstract base classes are also provided to help in implementing the core ABCs.</source>
          <target state="translated">该&lt;a href=&quot;#module-importlib.abc&quot;&gt; &lt;code&gt;importlib.abc&lt;/code&gt; &lt;/a&gt;模块包含了所有使用的核心抽象基类的&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;。还提供了一些核心抽象基类的子类，以帮助实现核心ABC。</target>
        </trans-unit>
        <trans-unit id="53b9f00de9da8d9fa295dfcd646610908f3ea7b5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-importlib.abc&quot;&gt;&lt;code&gt;importlib.abc&lt;/code&gt;&lt;/a&gt; module contains all of the core abstract base classes used by &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt;. Some subclasses of the core abstract base classes are also provided to help in implementing the core ABCs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66bbf31fa9b8e4bdc53ceff09f10bbba2ee186a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-inspect&quot;&gt;&lt;code&gt;inspect&lt;/code&gt;&lt;/a&gt; module also provides a basic introspection capability from the command line.</source>
          <target state="translated">该&lt;a href=&quot;#module-inspect&quot;&gt; &lt;code&gt;inspect&lt;/code&gt; &lt;/a&gt;模块还提供了由命令行基本内省能力。</target>
        </trans-unit>
        <trans-unit id="c4b5818a166440b1e94eba83e154dc5cd38c9e16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-inspect&quot;&gt;&lt;code&gt;inspect&lt;/code&gt;&lt;/a&gt; module provides several useful functions to help get information about live objects such as modules, classes, methods, functions, tracebacks, frame objects, and code objects. For example, it can help you examine the contents of a class, retrieve the source code of a method, extract and format the argument list for a function, or get all the information you need to display a detailed traceback.</source>
          <target state="translated">该&lt;a href=&quot;#module-inspect&quot;&gt; &lt;code&gt;inspect&lt;/code&gt; &lt;/a&gt;模块提供一些有用的功能，有关活动的物体，如模块，类，方法，功能，回溯，框架对象和代码对象的帮助获取信息。例如，它可以帮助您检查类的内容，检索方法的源代码，提取函数的参数列表并设置其格式或获取显示详细回溯所需的所有信息。</target>
        </trans-unit>
        <trans-unit id="22eaf9c954b96777da730d55699780a014bef920" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-io&quot;&gt;&lt;code&gt;io&lt;/code&gt;&lt;/a&gt; module provides Python&amp;rsquo;s main facilities for dealing with various types of I/O. There are three main types of I/O: &lt;em&gt;text I/O&lt;/em&gt;, &lt;em&gt;binary I/O&lt;/em&gt; and &lt;em&gt;raw I/O&lt;/em&gt;. These are generic categories, and various backing stores can be used for each of them. A concrete object belonging to any of these categories is called a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. Other common terms are &lt;em&gt;stream&lt;/em&gt; and &lt;em&gt;file-like object&lt;/em&gt;.</source>
          <target state="translated">在&lt;a href=&quot;#module-io&quot;&gt; &lt;code&gt;io&lt;/code&gt; &lt;/a&gt;模块提供了Python的主要设备来处理各种类型的I / O。主要有三种类型的I / O：&lt;em&gt;文本I / O&lt;/em&gt;，&lt;em&gt;二进制I / O&lt;/em&gt;和&lt;em&gt;原始I / O&lt;/em&gt;。这些是通用类别，每个类别都可以使用各种后备存储。属于任何这些类别的具体对象称为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。其他常用术语是&lt;em&gt;流&lt;/em&gt;和类&lt;em&gt;文件对象&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a04509bd8ad3da52c663b5af9275ebe6729dea5d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-io&quot;&gt;&lt;code&gt;io&lt;/code&gt;&lt;/a&gt; module provides Python&amp;rsquo;s main facilities for dealing with various types of I/O. There are three main types of I/O: &lt;em&gt;text I/O&lt;/em&gt;, &lt;em&gt;binary I/O&lt;/em&gt; and &lt;em&gt;raw I/O&lt;/em&gt;. These are generic categories, and various backing stores can be used for each of them. A concrete object belonging to any of these categories is called a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. Other common terms are &lt;em&gt;stream&lt;/em&gt; and &lt;em&gt;file-like object&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337e940454ffef6546d00cf1ac696aa914c429f9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-ipaddress&quot;&gt;&lt;code&gt;ipaddress&lt;/code&gt;&lt;/a&gt; module provides factory functions to conveniently create IP addresses, networks and interfaces:</source>
          <target state="translated">该&lt;a href=&quot;#module-ipaddress&quot;&gt; &lt;code&gt;ipaddress&lt;/code&gt; &lt;/a&gt;模块提供工厂函数来方便地创建IP地址，网络和接口：</target>
        </trans-unit>
        <trans-unit id="d18242ee067513d021ffb35aad13c8c4957412e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; module always produces &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects, not &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects. Therefore, &lt;code&gt;fp.write()&lt;/code&gt; must support &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; input.</source>
          <target state="translated">的&lt;a href=&quot;#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt;模块始终产生&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;对象，而不是&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。因此， &lt;code&gt;fp.write()&lt;/code&gt; 必须支持&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;输入。</target>
        </trans-unit>
        <trans-unit id="e1cd3675e58eb6cf4678aabcd494c8d6a3069bc0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-json.tool&quot;&gt;&lt;code&gt;json.tool&lt;/code&gt;&lt;/a&gt; module provides a simple command line interface to validate and pretty-print JSON objects.</source>
          <target state="translated">所述&lt;a href=&quot;#module-json.tool&quot;&gt; &lt;code&gt;json.tool&lt;/code&gt; &lt;/a&gt;模块提供了一个简单的命令行界面来验证和漂亮地打印JSON对象。</target>
        </trans-unit>
        <trans-unit id="4ee0472c78500aff4f45be9b42a534d389f95f4f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-linecache&quot;&gt;&lt;code&gt;linecache&lt;/code&gt;&lt;/a&gt; module allows one to get any line from a Python source file, while attempting to optimize internally, using a cache, the common case where many lines are read from a single file. This is used by the &lt;a href=&quot;traceback#module-traceback&quot;&gt;&lt;code&gt;traceback&lt;/code&gt;&lt;/a&gt; module to retrieve source lines for inclusion in the formatted traceback.</source>
          <target state="translated">所述&lt;a href=&quot;#module-linecache&quot;&gt; &lt;code&gt;linecache&lt;/code&gt; &lt;/a&gt;模块允许一个获得从Python源文件中的任何线，同时试图内部优化，采用了高速缓冲存储器，其中，多条线路是从单个文件中读取常见的情况。这是用来通过&lt;a href=&quot;traceback#module-traceback&quot;&gt; &lt;code&gt;traceback&lt;/code&gt; &lt;/a&gt;模块来检索源极线以包含在格式化回溯。</target>
        </trans-unit>
        <trans-unit id="4388c78f3684702514a1a530e894dc30b457a76b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-linecache&quot;&gt;&lt;code&gt;linecache&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-linecache&quot;&gt; &lt;code&gt;linecache&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="7cc0ca9ca7858a7e663453102d705f686951b40b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module defines the following exception and functions:</source>
          <target state="translated">的&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;模块定义以下异常和功能：</target>
        </trans-unit>
        <trans-unit id="9d17797caba78de9da6840e87cdb7c017d4979aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module is implemented on top of the &lt;code&gt;_locale&lt;/code&gt; module, which in turn uses an ANSI C locale implementation if available.</source>
          <target state="translated">的&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;模块的基础上实现 &lt;code&gt;_locale&lt;/code&gt; 模块，如果可用的话这反过来使用ANSI C语言环境实现。</target>
        </trans-unit>
        <trans-unit id="985eb6bd03d0ee6cad1fe0d5905ed42ca1a9c6d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module opens access to the POSIX locale database and functionality. The POSIX locale mechanism allows programmers to deal with certain cultural issues in an application, without requiring the programmer to know all the specifics of each country where the software is executed.</source>
          <target state="translated">该&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;模块打开访问POSIX语言环境数据库和功能。POSIX语言环境机制允许程序员处理应用程序中的某些文化问题，而无需程序员知道执行软件的每个国家/地区的所有详细信息。</target>
        </trans-unit>
        <trans-unit id="d329ac973f755c3eeaf2eb63a56cf4ee876322a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; module is not intended to be secure against erroneous or maliciously constructed data. Never unmarshal data received from an untrusted or unauthenticated source.</source>
          <target state="translated">所述&lt;a href=&quot;#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;模块并不旨在对抗错误或恶意构造数据的安全。切勿对从不可信或未经身份验证的来源收到的数据进行封送处理。</target>
        </trans-unit>
        <trans-unit id="2fa1709239f31c9ef299cc4aa55815731315529f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-mimetypes&quot;&gt;&lt;code&gt;mimetypes&lt;/code&gt;&lt;/a&gt; module converts between a filename or URL and the MIME type associated with the filename extension. Conversions are provided from filename to MIME type and from MIME type to filename extension; encodings are not supported for the latter conversion.</source>
          <target state="translated">的&lt;a href=&quot;#module-mimetypes&quot;&gt; &lt;code&gt;mimetypes&lt;/code&gt; &lt;/a&gt;模块的文件名或URL，并用文件扩展名相关联的MIME类型之间转换。提供从文件名到MIME类型以及从MIME类型到文件扩展名的转换。后一种转换不支持编码。</target>
        </trans-unit>
        <trans-unit id="7cec5e16f074ccd4b88c3f2c5b5ad1747c08fecf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-msilib&quot;&gt;&lt;code&gt;msilib&lt;/code&gt;&lt;/a&gt; supports the creation of Microsoft Installer (&lt;code&gt;.msi&lt;/code&gt;) files. Because these files often contain an embedded &amp;ldquo;cabinet&amp;rdquo; file (&lt;code&gt;.cab&lt;/code&gt;), it also exposes an API to create CAB files. Support for reading &lt;code&gt;.cab&lt;/code&gt; files is currently not implemented; read support for the &lt;code&gt;.msi&lt;/code&gt; database is possible.</source>
          <target state="translated">该&lt;a href=&quot;#module-msilib&quot;&gt; &lt;code&gt;msilib&lt;/code&gt; &lt;/a&gt;支持Microsoft安装程序（创建 &lt;code&gt;.msi&lt;/code&gt; ）文件。由于这些文件通常包含嵌入式&amp;ldquo;柜子&amp;rdquo;文件（ &lt;code&gt;.cab&lt;/code&gt; ），因此它还公开了用于创建CAB文件的API。目前尚不支持读取 &lt;code&gt;.cab&lt;/code&gt; 文件。可能支持读取 &lt;code&gt;.msi&lt;/code&gt; 数据库。</target>
        </trans-unit>
        <trans-unit id="1d180c1f5f80ac6b7619e22dea9da3b1d42d7b68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; module also introduces APIs which do not have analogs in the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module. A prime example of this is the &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool&lt;/code&gt;&lt;/a&gt; object which offers a convenient means of parallelizing the execution of a function across multiple input values, distributing the input data across processes (data parallelism). The following example demonstrates the common practice of defining such functions in a module so that child processes can successfully import that module. This basic example of data parallelism using &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">在&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;模块还引入了没有在类似物的API &lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;模块。最好的例子是&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;Pool&lt;/code&gt; &lt;/a&gt;对象，它提供了一种便利的方法，可以跨多个输入值并行执行函数，从而跨进程分配输入数据（数据并行性）。下面的示例演示了在模块中定义此类功能的常规做法，以便子进程可以成功导入该模块。这个使用&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;Pool&lt;/code&gt; &lt;/a&gt;进行数据并行化的基本示例，</target>
        </trans-unit>
        <trans-unit id="3ce6c0ff4a425000d2ca5b18082944e870330bd9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; package mostly replicates the API of the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">在&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;包大多是复制的API &lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="2e04e4b80cc93688459ebf1f22c4af2810aed5ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-multiprocessing.dummy&quot;&gt;&lt;code&gt;multiprocessing.dummy&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="translated">该&lt;a href=&quot;#module-multiprocessing.dummy&quot;&gt; &lt;code&gt;multiprocessing.dummy&lt;/code&gt; &lt;/a&gt;模块</target>
        </trans-unit>
        <trans-unit id="2e6ccfe6b1949eb189200e600c146480d6b41838" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-multiprocessing.sharedctypes&quot;&gt;&lt;code&gt;multiprocessing.sharedctypes&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="translated">该&lt;a href=&quot;#module-multiprocessing.sharedctypes&quot;&gt; &lt;code&gt;multiprocessing.sharedctypes&lt;/code&gt; &lt;/a&gt;模块</target>
        </trans-unit>
        <trans-unit id="54123a4d5ab46582e743e998c4d9d717ab3833e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-multiprocessing.sharedctypes&quot;&gt;&lt;code&gt;multiprocessing.sharedctypes&lt;/code&gt;&lt;/a&gt; module provides functions for allocating &lt;a href=&quot;ctypes#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; objects from shared memory which can be inherited by child processes.</source>
          <target state="translated">所述&lt;a href=&quot;#module-multiprocessing.sharedctypes&quot;&gt; &lt;code&gt;multiprocessing.sharedctypes&lt;/code&gt; &lt;/a&gt;模块提供的功能，以分配&lt;a href=&quot;ctypes#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; 的&lt;/a&gt;从共享存储器中的对象可以由子进程继承。</target>
        </trans-unit>
        <trans-unit id="5e77d3fa14560b48c3bb530fbc3f0bf4bfc64b6d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-nis&quot;&gt;&lt;code&gt;nis&lt;/code&gt;&lt;/a&gt; module defines the following exception:</source>
          <target state="translated">的&lt;a href=&quot;#module-nis&quot;&gt; &lt;code&gt;nis&lt;/code&gt; &lt;/a&gt;模块定义了下面的例外：</target>
        </trans-unit>
        <trans-unit id="1e3761c45ab69e027f8b7edb51fe146513e4f73b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-nis&quot;&gt;&lt;code&gt;nis&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">的&lt;a href=&quot;#module-nis&quot;&gt; &lt;code&gt;nis&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="71fc5dc1aea79e21eb08ca6f6a8fbaf5908823ef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-nis&quot;&gt;&lt;code&gt;nis&lt;/code&gt;&lt;/a&gt; module gives a thin wrapper around the NIS library, useful for central administration of several hosts.</source>
          <target state="translated">的&lt;a href=&quot;#module-nis&quot;&gt; &lt;code&gt;nis&lt;/code&gt; &lt;/a&gt;模块给出围绕NIS文库的简单封装，用于多个主机的中央管理是有用的。</target>
        </trans-unit>
        <trans-unit id="55de6a4c667171a477291b0e3c4227176341dcf7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt; module (&lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt;) defines a hierarchy of numeric &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; which progressively define more operations. None of the types defined in this module can be instantiated.</source>
          <target state="translated">的&lt;a href=&quot;#module-numbers&quot;&gt; &lt;code&gt;numbers&lt;/code&gt; &lt;/a&gt;模块（&lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt;）定义的数值的层次&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;，其渐进地限定多个操作。此模块中定义的所有类型均不能实例化。</target>
        </trans-unit>
        <trans-unit id="fe9ebc7f525af6518039910800d9be6a0cc3b966" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt; module (&lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt;) defines a hierarchy of numeric &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; which progressively define more operations. None of the types defined in this module can be instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70373d538baff7f0323f18426896989846c3f044" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-operator&quot;&gt;&lt;code&gt;operator&lt;/code&gt;&lt;/a&gt; module also defines tools for generalized attribute and item lookups. These are useful for making fast field extractors as arguments for &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;itertools#itertools.groupby&quot;&gt;&lt;code&gt;itertools.groupby()&lt;/code&gt;&lt;/a&gt;, or other functions that expect a function argument.</source>
          <target state="translated">该&lt;a href=&quot;#module-operator&quot;&gt; &lt;code&gt;operator&lt;/code&gt; &lt;/a&gt;模块还定义了通用属性和项目查询工具。这些对于将快速字段提取器用作&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;itertools#itertools.groupby&quot;&gt; &lt;code&gt;itertools.groupby()&lt;/code&gt; &lt;/a&gt;或需要函数参数的其他函数的参数很有用。</target>
        </trans-unit>
        <trans-unit id="a53ed99c7adf19e939eacd855f49e5b5bb689f11" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-operator&quot;&gt;&lt;code&gt;operator&lt;/code&gt;&lt;/a&gt; module exports a set of efficient functions corresponding to the intrinsic operators of Python. For example, &lt;code&gt;operator.add(x, y)&lt;/code&gt; is equivalent to the expression &lt;code&gt;x+y&lt;/code&gt;. Many function names are those used for special methods, without the double underscores. For backward compatibility, many of these have a variant with the double underscores kept. The variants without the double underscores are preferred for clarity.</source>
          <target state="translated">的&lt;a href=&quot;#module-operator&quot;&gt; &lt;code&gt;operator&lt;/code&gt; &lt;/a&gt;模块导出一组对应到Python的内建运算符有效的功能。例如， &lt;code&gt;operator.add(x, y)&lt;/code&gt; 等效于表达式 &lt;code&gt;x+y&lt;/code&gt; 。许多函数名称是用于特殊方法的名称，没有双下划线。为了向后兼容，其中许多具有保留双下划线的变体。为了清楚起见，不带双下划线的变体是首选。</target>
        </trans-unit>
        <trans-unit id="61ce337cbedc3f2529912d2201eb2b625280d4e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module defines functions for a few distinct purposes. The most important purposes are to create ST objects and to convert ST objects to other representations such as parse trees and compiled code objects, but there are also functions which serve to query the type of parse tree represented by an ST object.</source>
          <target state="translated">所述&lt;a href=&quot;#module-parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;模块用于几个不同的目的定义的功能。最重要的目的是创建ST对象并将ST对象转换为其他表示形式，例如解析树和已编译的代码对象，但是还有一些功能可以查询由ST对象表示的解析树的类型。</target>
        </trans-unit>
        <trans-unit id="25ef15b9c592ea1ea9713013e94dbb5918e5266e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module provides an interface to Python&amp;rsquo;s internal parser and byte-code compiler. The primary purpose for this interface is to allow Python code to edit the parse tree of a Python expression and create executable code from this. This is better than trying to parse and modify an arbitrary Python code fragment as a string because parsing is performed in a manner identical to the code forming the application. It is also faster.</source>
          <target state="translated">所述&lt;a href=&quot;#module-parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;模块提供Python的内部解析器和字节码编译器的接口。该接口的主要目的是允许Python代码编辑Python表达式的解析树并从中创建可执行代码。这比尝试将任意Python代码片段解析和修改为字符串更好，因为解析的方式与构成应用程序的代码相同。它也更快。</target>
        </trans-unit>
        <trans-unit id="124d6c592431fa7358eb2e18c55240e683dffb5b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module defines three exceptions:</source>
          <target state="translated">该&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块定义了三种例外：</target>
        </trans-unit>
        <trans-unit id="9f814de04271749df0afff6d13e98c3c7d28fbff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module differs from &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; in several significant ways:</source>
          <target state="translated">该&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;从模块不同&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;在几个显著方式：</target>
        </trans-unit>
        <trans-unit id="9d4c57e70369b25520cce55fa2bce230fdd44e46" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module exports three classes, &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pickle.Unpickler&quot;&gt;&lt;code&gt;Unpickler&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">该&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块出口三类，&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#pickle.Unpickler&quot;&gt; &lt;code&gt;Unpickler&lt;/code&gt; 会&lt;/a&gt;和&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="43904a297de386b3b1196f81f8862c9836da9d0e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module implements binary protocols for serializing and de-serializing a Python object structure. &lt;em&gt;&amp;ldquo;Pickling&amp;rdquo;&lt;/em&gt; is the process whereby a Python object hierarchy is converted into a byte stream, and &lt;em&gt;&amp;ldquo;unpickling&amp;rdquo;&lt;/em&gt; is the inverse operation, whereby a byte stream (from a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;) is converted back into an object hierarchy. Pickling (and unpickling) is alternatively known as &amp;ldquo;serialization&amp;rdquo;, &amp;ldquo;marshalling,&amp;rdquo; &lt;a href=&quot;#id7&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; or &amp;ldquo;flattening&amp;rdquo;; however, to avoid confusion, the terms used here are &amp;ldquo;pickling&amp;rdquo; and &amp;ldquo;unpickling&amp;rdquo;.</source>
          <target state="translated">所述&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块实现用于序列化和反序列化Python对象结构二进制协议。&lt;em&gt;&amp;ldquo; Pickling&amp;rdquo;&lt;/em&gt;是将Python对象层次结构转换为字节流的过程，而&lt;em&gt;&amp;ldquo; unpickling&amp;rdquo;&lt;/em&gt;是逆运算，将字节流（来自&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-binary-file&quot;&gt;二进制文件&lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;）转换回对象层次结构的过程。酸洗（与取储存）可替代地被称为&amp;ldquo;序列&amp;rdquo;，&amp;ldquo;编组&amp;rdquo; &lt;a href=&quot;#id7&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;或&amp;ldquo;压扁&amp;rdquo;;但是，为避免混淆，此处使用的术语是&amp;ldquo;酸洗&amp;rdquo;和&amp;ldquo;未酸洗&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b395d68a4706d43551a5bee69be9994b3cac3588" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module implements binary protocols for serializing and de-serializing a Python object structure. &lt;em&gt;&amp;ldquo;Pickling&amp;rdquo;&lt;/em&gt; is the process whereby a Python object hierarchy is converted into a byte stream, and &lt;em&gt;&amp;ldquo;unpickling&amp;rdquo;&lt;/em&gt; is the inverse operation, whereby a byte stream (from a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-binary-file&quot;&gt;binary file&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;) is converted back into an object hierarchy. Pickling (and unpickling) is alternatively known as &amp;ldquo;serialization&amp;rdquo;, &amp;ldquo;marshalling,&amp;rdquo; &lt;a href=&quot;#id7&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; or &amp;ldquo;flattening&amp;rdquo;; however, to avoid confusion, the terms used here are &amp;ldquo;pickling&amp;rdquo; and &amp;ldquo;unpickling&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d5b31a8a38315feca7469759e047393292369e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module keeps track of the objects it has already serialized, so that later references to the same object won&amp;rsquo;t be serialized again. &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t do this.</source>
          <target state="translated">该&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块跟踪它已经序列化的对象，这样对同一对象的引用以后将不会再序列化。&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;不这样做。</target>
        </trans-unit>
        <trans-unit id="f39d6e73fb52a3aadce8298900f7e06e2e556325" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module provides the following constants:</source>
          <target state="translated">所述&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块提供以下常数：</target>
        </trans-unit>
        <trans-unit id="053f27ecbe7215e45dbf076ba18174c65da7243d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module provides the following functions to make the pickling process more convenient:</source>
          <target state="translated">该&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块提供以下功能，使酸洗过程更方便：</target>
        </trans-unit>
        <trans-unit id="64eb838d62f1db80b3cbc0372ce64caf83a19886" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pipes&quot;&gt;&lt;code&gt;pipes&lt;/code&gt;&lt;/a&gt; module defines a class to abstract the concept of a &lt;em&gt;pipeline&lt;/em&gt; &amp;mdash; a sequence of converters from one file to another.</source>
          <target state="translated">所述&lt;a href=&quot;#module-pipes&quot;&gt; &lt;code&gt;pipes&lt;/code&gt; &lt;/a&gt;模块定义一类抽象一个的概念&lt;em&gt;管道&lt;/em&gt; -转换器从一个文件到另一个序列。</target>
        </trans-unit>
        <trans-unit id="a1b768d96de059405677d76a8af3854827acb627" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pipes&quot;&gt;&lt;code&gt;pipes&lt;/code&gt;&lt;/a&gt; module defines the following class:</source>
          <target state="translated">所述&lt;a href=&quot;#module-pipes&quot;&gt; &lt;code&gt;pipes&lt;/code&gt; &lt;/a&gt;模块定义以下类：</target>
        </trans-unit>
        <trans-unit id="331e2eb4f9fab99bc8e2b88d891c21f4e7af485c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-poplib&quot;&gt;&lt;code&gt;poplib&lt;/code&gt;&lt;/a&gt; module provides two classes:</source>
          <target state="translated">所述&lt;a href=&quot;#module-poplib&quot;&gt; &lt;code&gt;poplib&lt;/code&gt; 模块&lt;/a&gt;模块提供两个类：</target>
        </trans-unit>
        <trans-unit id="277cd96cc96661f93e3472a013fb860bbba2fc2e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint&lt;/code&gt;&lt;/a&gt; module also provides several shortcut functions:</source>
          <target state="translated">该&lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint&lt;/code&gt; &lt;/a&gt;模块还提供了几个快捷功能：</target>
        </trans-unit>
        <trans-unit id="d897764f84c5e66fbafbf3d0843fc53af9d0cf09" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint&lt;/code&gt;&lt;/a&gt; module defines one class:</source>
          <target state="translated">所述&lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint&lt;/code&gt; &lt;/a&gt;模块定义一个类：</target>
        </trans-unit>
        <trans-unit id="b8e21659673c9450a31264128faaad6dc4a8112f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint&lt;/code&gt;&lt;/a&gt; module provides a capability to &amp;ldquo;pretty-print&amp;rdquo; arbitrary Python data structures in a form which can be used as input to the interpreter. If the formatted structures include objects which are not fundamental Python types, the representation may not be loadable. This may be the case if objects such as files, sockets or classes are included, as well as many other objects which are not representable as Python literals.</source>
          <target state="translated">所述&lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint&lt;/code&gt; &lt;/a&gt;模块提供能力&amp;ldquo;漂亮地打印&amp;rdquo;任意Python数据，其中可以被用作输入到解释器形式的结构。如果格式化的结构包含不是基本Python类型的对象，则表示可能无法加载。如果包括文件，套接字或类之类的对象以及许多其他无法用Python文字表示的对象，则可能是这种情况。</target>
        </trans-unit>
        <trans-unit id="02e2c18e85aeab815f7b3884e7ac136f87ea1c89" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pstats&quot;&gt;&lt;code&gt;pstats&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class has a variety of methods for manipulating and printing the data saved into a profile results file:</source>
          <target state="translated">该&lt;a href=&quot;#module-pstats&quot;&gt; &lt;code&gt;pstats&lt;/code&gt; &lt;/a&gt;模块的&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;类有各种各样的操纵和打印保存到一个轮廓结果文件数据的方法：</target>
        </trans-unit>
        <trans-unit id="a09452594af9cc2998d0e20d8f6c2e8b7f7a1f37" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pty&quot;&gt;&lt;code&gt;pty&lt;/code&gt;&lt;/a&gt; module defines operations for handling the pseudo-terminal concept: starting another process and being able to write to and read from its controlling terminal programmatically.</source>
          <target state="translated">的&lt;a href=&quot;#module-pty&quot;&gt; &lt;code&gt;pty&lt;/code&gt; &lt;/a&gt;开始另一个进程，并能够写入和其控制终端编程读：用于处理所述伪终端概念模块定义的操作。</target>
        </trans-unit>
        <trans-unit id="16051c54e966e34e449d24aeb93463ad01647347" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pty&quot;&gt;&lt;code&gt;pty&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">的&lt;a href=&quot;#module-pty&quot;&gt; &lt;code&gt;pty&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="9026c767b36d7a0109e5a56ec8ab97278ea8b8dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-py_compile&quot;&gt;&lt;code&gt;py_compile&lt;/code&gt;&lt;/a&gt; module provides a function to generate a byte-code file from a source file, and another function used when the module source file is invoked as a script.</source>
          <target state="translated">所述&lt;a href=&quot;#module-py_compile&quot;&gt; &lt;code&gt;py_compile&lt;/code&gt; &lt;/a&gt;模块提供的功能，以生成从源文件中的字节码文件，并且当所述模块源文件被调用作为脚本使用的另一种功能。</target>
        </trans-unit>
        <trans-unit id="9d72069fd861edd1c3341b07a968d03ad4695e43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pyclbr&quot;&gt;&lt;code&gt;pyclbr&lt;/code&gt;&lt;/a&gt; module provides limited information about the functions, classes, and methods defined in a Python-coded module. The information is sufficient to implement a module browser. The information is extracted from the Python source code rather than by importing the module, so this module is safe to use with untrusted code. This restriction makes it impossible to use this module with modules not implemented in Python, including all standard and optional extension modules.</source>
          <target state="translated">所述&lt;a href=&quot;#module-pyclbr&quot;&gt; &lt;code&gt;pyclbr&lt;/code&gt; &lt;/a&gt;模块提供关于函数，类，和一个Python编码模块中定义的方法的有限信息。该信息足以实现模块浏览器。该信息是从Python源代码中提取的，而不是通过导入模块来提取的，因此该模块可安全用于不受信任的代码。此限制使得无法将此模块与未在Python中实现的模块一起使用，包括所有标准和可选扩展模块。</target>
        </trans-unit>
        <trans-unit id="ceef20222c51dc13351c20ead7bd6f0c6894fdf4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-pydoc&quot;&gt;&lt;code&gt;pydoc&lt;/code&gt;&lt;/a&gt; module automatically generates documentation from Python modules. The documentation can be presented as pages of text on the console, served to a Web browser, or saved to HTML files.</source>
          <target state="translated">的&lt;a href=&quot;#module-pydoc&quot;&gt; &lt;code&gt;pydoc&lt;/code&gt; &lt;/a&gt;模块自动从Python模块生成文档。该文档可以在控制台上以文本页面的形式呈现，提供给Web浏览器或保存为HTML文件。</target>
        </trans-unit>
        <trans-unit id="543ced21f6b4d6a8c71f947acf0e8d0247183255" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; module defines the following classes and exceptions:</source>
          <target state="translated">的&lt;a href=&quot;#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;模块定义了以下类和例外：</target>
        </trans-unit>
        <trans-unit id="9aa5ceed315221356796eb8e3f4afc125b41ac99" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; module implements multi-producer, multi-consumer queues. It is especially useful in threaded programming when information must be exchanged safely between multiple threads. The &lt;a href=&quot;#queue.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; class in this module implements all the required locking semantics.</source>
          <target state="translated">该&lt;a href=&quot;#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;模块实现多生产，多消费队列。当必须在多个线程之间安全地交换信息时，它在线程编程中特别有用。此模块中的&lt;a href=&quot;#queue.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;类实现所有必需的锁定语义。</target>
        </trans-unit>
        <trans-unit id="ce2e2f809e5adf24db412ccc37a23cf7c3690617" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; module also provides the &lt;a href=&quot;#random.SystemRandom&quot;&gt;&lt;code&gt;SystemRandom&lt;/code&gt;&lt;/a&gt; class which uses the system function &lt;a href=&quot;os#os.urandom&quot;&gt;&lt;code&gt;os.urandom()&lt;/code&gt;&lt;/a&gt; to generate random numbers from sources provided by the operating system.</source>
          <target state="translated">的&lt;a href=&quot;#module-random&quot;&gt; &lt;code&gt;random&lt;/code&gt; &lt;/a&gt;模块还提供了&lt;a href=&quot;#random.SystemRandom&quot;&gt; &lt;code&gt;SystemRandom&lt;/code&gt; &lt;/a&gt;它使用系统功能类&lt;a href=&quot;os#os.urandom&quot;&gt; &lt;code&gt;os.urandom()&lt;/code&gt; &lt;/a&gt;从由操作系统提供源产生随机数。</target>
        </trans-unit>
        <trans-unit id="660c9edcebc298478ef94c0e97923d795a1d7ea0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module defines a number of functions to facilitate completion and reading/writing of history files from the Python interpreter. This module can be used directly, or via the &lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module, which supports completion of Python identifiers at the interactive prompt. Settings made using this module affect the behaviour of both the interpreter&amp;rsquo;s interactive prompt and the prompts offered by the built-in &lt;a href=&quot;functions#input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">该&lt;a href=&quot;#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; 的&lt;/a&gt;模块定义了许多功能，方便完成和读/从Python解释器的历史文件编写。该模块可以直接使用，也可以通过&lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; &lt;/a&gt;模块使用，该模块支持在交互式提示符下完成Python标识符。使用此模块进行的设置会影响解释程序的交互式提示和内置&lt;a href=&quot;functions#input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt;函数提供的提示的行为。</target>
        </trans-unit>
        <trans-unit id="8cb8c7fc3ba5633401913c3281336b234b751d20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-reprlib&quot;&gt;&lt;code&gt;reprlib&lt;/code&gt;&lt;/a&gt; module provides a means for producing object representations with limits on the size of the resulting strings. This is used in the Python debugger and may be useful in other contexts as well.</source>
          <target state="translated">所述&lt;a href=&quot;#module-reprlib&quot;&gt; &lt;code&gt;reprlib&lt;/code&gt; &lt;/a&gt;模块提供了与对所得到的字符串的大小限制产生对象表示的装置。这在Python调试器中使用，并且在其他上下文中也可能有用。</target>
        </trans-unit>
        <trans-unit id="a98425ecc51ce0e54b42b84ccf96d36884a9eada" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module defines a completion function suitable for the &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt; module by completing valid Python identifiers and keywords.</source>
          <target state="translated">所述&lt;a href=&quot;#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; &lt;/a&gt;模块定义适合于完成函数&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; &lt;/a&gt;通过完成有效的Python标识符和关键字模块。</target>
        </trans-unit>
        <trans-unit id="c0b25d4342ebdd8a2a2b1ce722bd086c190928bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module is designed for use with Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt;. Unless Python is run with the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; option, the module is automatically imported and configured (see &lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline configuration&lt;/a&gt;).</source>
          <target state="translated">该&lt;a href=&quot;#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; &lt;/a&gt;模块是专为使用Python的使用&lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;交互模式&lt;/a&gt;。除非使用&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;选项运行Python，否则将自动导入和配置模块（请参阅&lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline配置&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="234b35e644545b1a8527144690a015c63150131b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module is designed for use with Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt;. Unless Python is run with the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; option, the module is automatically imported and configured (see &lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline configuration&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28772e324417b3932525709d74daf62bf935dd5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-runpy&quot;&gt;&lt;code&gt;runpy&lt;/code&gt;&lt;/a&gt; module is used to locate and run Python modules without importing them first. Its main use is to implement the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; command line switch that allows scripts to be located using the Python module namespace rather than the filesystem.</source>
          <target state="translated">该&lt;a href=&quot;#module-runpy&quot;&gt; &lt;code&gt;runpy&lt;/code&gt; &lt;/a&gt;模块用于定位并没有首先导入它们运行Python模块。它的主要用途是实现&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt; &lt;code&gt;-m&lt;/code&gt; &lt;/a&gt;命令行开关，该开关允许使用Python模块名称空间而不是文件系统来定位脚本。</target>
        </trans-unit>
        <trans-unit id="1c5153ad4c4926c26d5a86c6b2b4c313b465cd5d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-runpy&quot;&gt;&lt;code&gt;runpy&lt;/code&gt;&lt;/a&gt; module is used to locate and run Python modules without importing them first. Its main use is to implement the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; command line switch that allows scripts to be located using the Python module namespace rather than the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3ddf57200cdb8fbdd57ac19a46f766137d4790" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-runpy&quot;&gt;&lt;code&gt;runpy&lt;/code&gt;&lt;/a&gt; module provides two functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-runpy&quot;&gt; &lt;code&gt;runpy&lt;/code&gt; &lt;/a&gt;模块提供两种功能：</target>
        </trans-unit>
        <trans-unit id="01a602199174a318278c5a270b7c9a02dc1addcd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-sched&quot;&gt;&lt;code&gt;sched&lt;/code&gt;&lt;/a&gt; module defines a class which implements a general purpose event scheduler:</source>
          <target state="translated">所述&lt;a href=&quot;#module-sched&quot;&gt; &lt;code&gt;sched&lt;/code&gt; &lt;/a&gt;模块定义一类工具的通用事件调度器：</target>
        </trans-unit>
        <trans-unit id="4f152c98375827775a1715a1a99a228ef3083649" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; module is used for generating cryptographically strong random numbers suitable for managing data such as passwords, account authentication, security tokens, and related secrets.</source>
          <target state="translated">的&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;模块用于生成适合于管理，如密码，帐户认证，安全令牌，以及相关的秘密数据加密的强随机数。</target>
        </trans-unit>
        <trans-unit id="cbab347c0a408d23a665e1801ca57f80ec76e7c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; module provides access to the most secure source of randomness that your operating system provides.</source>
          <target state="translated">该&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;模块提供的随机性的最安全的来源，你的操作系统提供。</target>
        </trans-unit>
        <trans-unit id="e4b477222814e65dff6d74820dc3f7363c0a5219" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; module provides functions for generating secure tokens, suitable for applications such as password resets, hard-to-guess URLs, and similar.</source>
          <target state="translated">的&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;模块提供的功能，用于生成安全令牌，适于应用，例如密码重置，难以猜测的网址，和类似的。</target>
        </trans-unit>
        <trans-unit id="135efbd99b4712cb39b1be6b03521151c5bacb0f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt; module does not support &lt;em&gt;concurrent&lt;/em&gt; read/write access to shelved objects. (Multiple simultaneous read accesses are safe.) When a program has a shelf open for writing, no other program should have it open for reading or writing. Unix file locking can be used to solve this, but this differs across Unix versions and requires knowledge about the database implementation used.</source>
          <target state="translated">&lt;a href=&quot;#module-shelve&quot;&gt; &lt;code&gt;shelve&lt;/code&gt; &lt;/a&gt;模块不支持对搁架对象的&lt;em&gt;并发&lt;/em&gt;读/写访问。 （安全的同时进行多个读取访问是安全的。）当一个程序有一个可供写的架子时，其他任何程序都不应将其打开以供读写。可以使用Unix文件锁定来解决此问题，但这在Unix版本之间有所不同，并且需要有关所用数据库实现的知识。</target>
        </trans-unit>
        <trans-unit id="9faec9689592e9547e90e0ccaf66b0c7f30d0e20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; class provides compatibility with the parsing performed by common Unix shells like &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;dash&lt;/code&gt;, and &lt;code&gt;sh&lt;/code&gt;. To take advantage of this compatibility, specify the &lt;code&gt;punctuation_chars&lt;/code&gt; argument in the constructor. This defaults to &lt;code&gt;False&lt;/code&gt;, which preserves pre-3.6 behaviour. However, if it is set to &lt;code&gt;True&lt;/code&gt;, then parsing of the characters &lt;code&gt;();&amp;lt;&amp;gt;|&amp;amp;&lt;/code&gt; is changed: any run of these characters is returned as a single token. While this is short of a full parser for shells (which would be out of scope for the standard library, given the multiplicity of shells out there), it does allow you to perform processing of command lines more easily than you could otherwise. To illustrate, you can see the difference in the following snippet:</source>
          <target state="translated">所述&lt;a href=&quot;#module-shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;类提供与由普通Unix外壳等进行解析兼容性 &lt;code&gt;bash&lt;/code&gt; ， &lt;code&gt;dash&lt;/code&gt; ，和 &lt;code&gt;sh&lt;/code&gt; 。要利用这种兼容性，请在构造函数中指定 &lt;code&gt;punctuation_chars&lt;/code&gt; 参数。默认为 &lt;code&gt;False&lt;/code&gt; ，保留3.6之前的行为。但是，如果将其设置为 &lt;code&gt;True&lt;/code&gt; ，则将解析字符 &lt;code&gt;();&amp;lt;&amp;gt;|&amp;amp;&lt;/code&gt; 更改：这些字符的所有运行都作为单个令牌返回。尽管缺少完整的Shell解析器（考虑到外壳的多样性，这将超出标准库的范围），但它确实使您比以前更容易执行命令行处理。为了说明这一点，您可以在以下代码片段中看到不同之处：</target>
        </trans-unit>
        <trans-unit id="919bf48690255147cc9d4800d709ba206de17a98" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; module defines the following class:</source>
          <target state="translated">所述&lt;a href=&quot;#module-shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;模块定义了以下类：</target>
        </trans-unit>
        <trans-unit id="16369c83843c49a48cc7a498ae5c91f3a35b18c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="8d0e584e13229932fd788a08968e71a778ff56f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-shutil&quot;&gt;&lt;code&gt;shutil&lt;/code&gt;&lt;/a&gt; module offers a number of high-level operations on files and collections of files. In particular, functions are provided which support file copying and removal. For operations on individual files, see also the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">该&lt;a href=&quot;#module-shutil&quot;&gt; &lt;code&gt;shutil&lt;/code&gt; &lt;/a&gt;模块提供的文件和文件集合了一批高层次的操作。特别是提供了支持文件复制和删除的功能。有关对单个文件的操作，另请参见&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="7a5254ed16f29b4b1810c72e9cdb9efbecf62619" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module defines one exception:</source>
          <target state="translated">所述&lt;a href=&quot;#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;模块定义一个例外：</target>
        </trans-unit>
        <trans-unit id="55203edded87483a5c2e560ccf2b55021cb05d90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="ee452f2e6f0e5cc42b0bda95278ce8eac8e50a55" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; module also provides a way to get the user directories from the command line:</source>
          <target state="translated">该&lt;a href=&quot;#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt;模块还提供了一种方式来获得在命令行中的用户目录：</target>
        </trans-unit>
        <trans-unit id="afdc95d7cc063c7620c57497d1c06e523c7c721b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-smtplib&quot;&gt;&lt;code&gt;smtplib&lt;/code&gt;&lt;/a&gt; module defines an SMTP client session object that can be used to send mail to any Internet machine with an SMTP or ESMTP listener daemon. For details of SMTP and ESMTP operation, consult &lt;a href=&quot;https://tools.ietf.org/html/rfc821.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 821&lt;/strong&gt;&lt;/a&gt; (Simple Mail Transfer Protocol) and &lt;a href=&quot;https://tools.ietf.org/html/rfc1869.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1869&lt;/strong&gt;&lt;/a&gt; (SMTP Service Extensions).</source>
          <target state="translated">该&lt;a href=&quot;#module-smtplib&quot;&gt; &lt;code&gt;smtplib&lt;/code&gt; &lt;/a&gt;模块定义了可用于发送邮件到任何互联网设备使用SMTP或ESMTP监听守护SMTP客户端会话对象。有关SMTP和ESMTP操作的详细信息，请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc821.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 821&lt;/strong&gt;&lt;/a&gt;（简单邮件传输协议）和&lt;a href=&quot;https://tools.ietf.org/html/rfc1869.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1869&lt;/strong&gt;&lt;/a&gt;（SMTP服务扩展）。</target>
        </trans-unit>
        <trans-unit id="5010df5f5785564c1be45eab8f18484d365f10fa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-sndhdr&quot;&gt;&lt;code&gt;sndhdr&lt;/code&gt;&lt;/a&gt; provides utility functions which attempt to determine the type of sound data which is in a file. When these functions are able to determine what type of sound data is stored in a file, they return a &lt;a href=&quot;collections#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/a&gt;, containing five attributes: (&lt;code&gt;filetype&lt;/code&gt;, &lt;code&gt;framerate&lt;/code&gt;, &lt;code&gt;nchannels&lt;/code&gt;, &lt;code&gt;nframes&lt;/code&gt;, &lt;code&gt;sampwidth&lt;/code&gt;). The value for &lt;em&gt;type&lt;/em&gt; indicates the data type and will be one of the strings &lt;code&gt;'aifc'&lt;/code&gt;, &lt;code&gt;'aiff'&lt;/code&gt;, &lt;code&gt;'au'&lt;/code&gt;, &lt;code&gt;'hcom'&lt;/code&gt;, &lt;code&gt;'sndr'&lt;/code&gt;, &lt;code&gt;'sndt'&lt;/code&gt;, &lt;code&gt;'voc'&lt;/code&gt;, &lt;code&gt;'wav'&lt;/code&gt;, &lt;code&gt;'8svx'&lt;/code&gt;, &lt;code&gt;'sb'&lt;/code&gt;, &lt;code&gt;'ub'&lt;/code&gt;, or &lt;code&gt;'ul'&lt;/code&gt;. The &lt;em&gt;sampling_rate&lt;/em&gt; will be either the actual value or &lt;code&gt;0&lt;/code&gt; if unknown or difficult to decode. Similarly, &lt;em&gt;channels&lt;/em&gt; will be either the number of channels or &lt;code&gt;0&lt;/code&gt; if it cannot be determined or if the value is difficult to decode. The value for &lt;em&gt;frames&lt;/em&gt; will be either the number of frames or &lt;code&gt;-1&lt;/code&gt;. The last item in the tuple, &lt;em&gt;bits_per_sample&lt;/em&gt;, will either be the sample size in bits or &lt;code&gt;'A'&lt;/code&gt; for A-LAW or &lt;code&gt;'U'&lt;/code&gt; for u-LAW.</source>
          <target state="translated">所述&lt;a href=&quot;#module-sndhdr&quot;&gt; &lt;code&gt;sndhdr&lt;/code&gt; &lt;/a&gt;提供了试图确定它是在一个文件中的声音数据的类型的实用功能。当这些功能能够确定什么声音数据的类型存储在一个文件中，他们返回&lt;a href=&quot;collections#collections.namedtuple&quot;&gt; &lt;code&gt;namedtuple()&lt;/code&gt; &lt;/a&gt;，包含五个属性：（ &lt;code&gt;filetype&lt;/code&gt; ， &lt;code&gt;framerate&lt;/code&gt; ， &lt;code&gt;nchannels&lt;/code&gt; ， &lt;code&gt;nframes&lt;/code&gt; ， &lt;code&gt;sampwidth&lt;/code&gt; ）。&lt;em&gt;type&lt;/em&gt;的值表示数据类型，将是字符串 &lt;code&gt;'aifc'&lt;/code&gt; ， &lt;code&gt;'aiff'&lt;/code&gt; ， &lt;code&gt;'au'&lt;/code&gt; ， &lt;code&gt;'hcom'&lt;/code&gt; ， &lt;code&gt;'sndr'&lt;/code&gt; ， &lt;code&gt;'sndt'&lt;/code&gt; ， &lt;code&gt;'voc'&lt;/code&gt; ， &lt;code&gt;'wav'&lt;/code&gt; ， &lt;code&gt;'8svx'&lt;/code&gt; ， &lt;code&gt;'sb'&lt;/code&gt; ， &lt;code&gt;'ub'&lt;/code&gt; 或 &lt;code&gt;'ul'&lt;/code&gt; 。所述&lt;em&gt;sampling_rate&lt;/em&gt;将或者实际值或 &lt;code&gt;0&lt;/code&gt; ，如果未知的或难以解码。同样，如果无法确定或很难解码该值，则&lt;em&gt;通道&lt;/em&gt;将为&lt;em&gt;通道&lt;/em&gt;数或 &lt;code&gt;0&lt;/code&gt; 。&lt;em&gt;帧&lt;/em&gt;的值将为帧数或 &lt;code&gt;-1&lt;/code&gt; 。在元组，最后一个项目&lt;em&gt;bits_per_sample&lt;/em&gt;，要么是在比特样本大小或 &lt;code&gt;'A'&lt;/code&gt; 为A律或 &lt;code&gt;'U'&lt;/code&gt; 为U形法。</target>
        </trans-unit>
        <trans-unit id="f2bbd54678e57dc4c92878b357c79bf8e092f46d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module also offers various network-related services:</source>
          <target state="translated">该&lt;a href=&quot;#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;模块还提供了各种网络相关的服务：</target>
        </trans-unit>
        <trans-unit id="8ba72662e12ca1e862a21df7b945467f8e047ff6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-socketserver&quot;&gt;&lt;code&gt;socketserver&lt;/code&gt;&lt;/a&gt; module simplifies the task of writing network servers.</source>
          <target state="translated">该&lt;a href=&quot;#module-socketserver&quot;&gt; &lt;code&gt;socketserver&lt;/code&gt; &lt;/a&gt;模块简化了编写网络服务器的任务。</target>
        </trans-unit>
        <trans-unit id="23972564f34650ae2a05c05e7de5ad20291b61f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module has two default adapters for Python&amp;rsquo;s built-in &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt; types. Now let&amp;rsquo;s suppose we want to store &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt; objects not in ISO representation, but as a Unix timestamp.</source>
          <target state="translated">该&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; 的&lt;/a&gt;模块对Python的两个默认适配器内置的&lt;a href=&quot;datetime#datetime.date&quot;&gt; &lt;code&gt;datetime.date&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;类型。现在，让我们假设我们不以ISO表示形式存储&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;对象，而是将其存储为Unix时间戳。</target>
        </trans-unit>
        <trans-unit id="00fac285f3151c95ef30230b0c141c3afd186802" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module internally uses a statement cache to avoid SQL parsing overhead. If you want to explicitly set the number of statements that are cached for the connection, you can set the &lt;em&gt;cached_statements&lt;/em&gt; parameter. The currently implemented default is to cache 100 statements.</source>
          <target state="translated">在&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; 的&lt;/a&gt;模块在内部使用一个语句缓存来避免SQL解析开销。如果要显式设置为连接缓存的语句数，则可以设置&lt;em&gt;cached_statements&lt;/em&gt;参数。当前实现的默认值是缓存100条语句。</target>
        </trans-unit>
        <trans-unit id="4d2ce586ec3a270007b05b96357f828bc872595b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-stat&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; module defines constants and functions for interpreting the results of &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.fstat&quot;&gt;&lt;code&gt;os.fstat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt; (if they exist). For complete details about the &lt;code&gt;stat()&lt;/code&gt;, &lt;code&gt;fstat()&lt;/code&gt; and &lt;code&gt;lstat()&lt;/code&gt; calls, consult the documentation for your system.</source>
          <target state="translated">所述&lt;a href=&quot;#module-stat&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;模块定义的常量和函数用于解释的结果&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;os#os.fstat&quot;&gt; &lt;code&gt;os.fstat()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;（如果存在的话）。有关 &lt;code&gt;stat()&lt;/code&gt; ， &lt;code&gt;fstat()&lt;/code&gt; 和 &lt;code&gt;lstat()&lt;/code&gt; 调用的完整详细信息，请查阅系统的文档。</target>
        </trans-unit>
        <trans-unit id="687e8631f9c61961d2c9931b2fd726158c32d7c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-stat&quot;&gt;&lt;code&gt;stat&lt;/code&gt;&lt;/a&gt; module defines the following functions to test for specific file types:</source>
          <target state="translated">所述&lt;a href=&quot;#module-stat&quot;&gt; &lt;code&gt;stat&lt;/code&gt; &lt;/a&gt;模块定义了如下功能测试特定的文件类型：</target>
        </trans-unit>
        <trans-unit id="480a84318ee703dc5a9b0be69b50b6ad6fc66170" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; module provides a &lt;a href=&quot;#string.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; class that implements these rules. The methods of &lt;a href=&quot;#string.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; are:</source>
          <target state="translated">该&lt;a href=&quot;#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;模块提供了一个&lt;a href=&quot;#string.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;类，它实现这些规则。&lt;a href=&quot;#string.Template&quot;&gt; &lt;code&gt;Template&lt;/code&gt; &lt;/a&gt;的方法有：</target>
        </trans-unit>
        <trans-unit id="c46cb6742876c99877d7145c9406a69e6add43d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; module also defines the following type:</source>
          <target state="translated">所述&lt;a href=&quot;#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;模块还定义了以下类型：</target>
        </trans-unit>
        <trans-unit id="d3ce39cace6e0b8f0545dfae131c2f6375ca35c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module allows you to spawn new processes, connect to their input/output/error pipes, and obtain their return codes. This module intends to replace several older modules and functions:</source>
          <target state="translated">该&lt;a href=&quot;#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;模块允许你创建子新工艺，连接到它们的输入/输出/错误管道，然后获取他们的返回值。该模块旨在替换一些较旧的模块和功能：</target>
        </trans-unit>
        <trans-unit id="28f5c7e6366c580d5585fae232c046c902162567" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module exposes the following constants.</source>
          <target state="translated">该&lt;a href=&quot;#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;模块公开以下常量。</target>
        </trans-unit>
        <trans-unit id="56d9cc0d0b5899e8707e8417bfe835a52f57f24d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; module provides access to Python&amp;rsquo;s configuration information like the list of installation paths and the configuration variables relevant for the current platform.</source>
          <target state="translated">该&lt;a href=&quot;#module-sysconfig&quot;&gt; &lt;code&gt;sysconfig&lt;/code&gt; &lt;/a&gt;模块提供类似的安装路径和相关的当前平台的配置变量列表Python的配置信息。</target>
        </trans-unit>
        <trans-unit id="6429efa2bca86eb7f85b79e9818a9493d6e675dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module defines the following exceptions:</source>
          <target state="translated">在&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;模块定义了以下情况除外：</target>
        </trans-unit>
        <trans-unit id="60e2b8de9d60bf56e732bcf798aa0e16e9a4fe20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module makes it possible to read and write tar archives, including those using gzip, bz2 and lzma compression. Use the &lt;a href=&quot;zipfile#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; module to read or write &lt;code&gt;.zip&lt;/code&gt; files, or the higher-level functions in &lt;a href=&quot;shutil#archiving-operations&quot;&gt;shutil&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;模块能够读取和写入tar归档，包括使用gzip，BZ2和LZMA压缩的。使用&lt;a href=&quot;zipfile#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;模块读取或写入 &lt;code&gt;.zip&lt;/code&gt; 文件，或者使用&lt;a href=&quot;shutil#archiving-operations&quot;&gt;shutil中&lt;/a&gt;的更高级功能。</target>
        </trans-unit>
        <trans-unit id="78fd81d6196e9460d83369490a0e3a8bada8d1a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module provides a simple command-line interface to interact with tar archives.</source>
          <target state="translated">在&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;模块提供了一个简单的命令行接口来与tar归档交互。</target>
        </trans-unit>
        <trans-unit id="b8918dc3dbfcb58a46c0efa12e0d908925c6d58c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-telnetlib&quot;&gt;&lt;code&gt;telnetlib&lt;/code&gt;&lt;/a&gt; module provides a &lt;a href=&quot;#telnetlib.Telnet&quot;&gt;&lt;code&gt;Telnet&lt;/code&gt;&lt;/a&gt; class that implements the Telnet protocol. See &lt;a href=&quot;https://tools.ietf.org/html/rfc854.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 854&lt;/strong&gt;&lt;/a&gt; for details about the protocol. In addition, it provides symbolic constants for the protocol characters (see below), and for the telnet options. The symbolic names of the telnet options follow the definitions in &lt;code&gt;arpa/telnet.h&lt;/code&gt;, with the leading &lt;code&gt;TELOPT_&lt;/code&gt; removed. For symbolic names of options which are traditionally not included in &lt;code&gt;arpa/telnet.h&lt;/code&gt;, see the module source itself.</source>
          <target state="translated">所述&lt;a href=&quot;#module-telnetlib&quot;&gt; &lt;code&gt;telnetlib&lt;/code&gt; &lt;/a&gt;模块提供了&lt;a href=&quot;#telnetlib.Telnet&quot;&gt; &lt;code&gt;Telnet&lt;/code&gt; &lt;/a&gt;类，它实现Telnet协议。有关该协议的详细信息，请参见&lt;a href=&quot;https://tools.ietf.org/html/rfc854.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 854&lt;/strong&gt;&lt;/a&gt;。另外，它为协议字符（请参见下文）和telnet选项提供符号常量。 telnet选项的符号名称遵循 &lt;code&gt;arpa/telnet.h&lt;/code&gt; 中的定义，其中删除了 &lt;code&gt;TELOPT_&lt;/code&gt; 。有关传统上不包含在 &lt;code&gt;arpa/telnet.h&lt;/code&gt; 中的选项的符号名称，请参见模块源本身。</target>
        </trans-unit>
        <trans-unit id="a5e7efa00ab2f0fae31f9c832f0e22eaba4bbf97" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package can be run as a script to drive Python&amp;rsquo;s regression test suite, thanks to the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; option: &lt;strong&gt;python -m test&lt;/strong&gt;. Under the hood, it uses &lt;code&gt;test.regrtest&lt;/code&gt;; the call &lt;strong&gt;python -m test.regrtest&lt;/strong&gt; used in previous Python versions still works. Running the script by itself automatically starts running all regression tests in the &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package. It does this by finding all modules in the package whose name starts with &lt;code&gt;test_&lt;/code&gt;, importing them, and executing the function &lt;code&gt;test_main()&lt;/code&gt; if present or loading the tests via unittest.TestLoader.loadTestsFromModule if &lt;code&gt;test_main&lt;/code&gt; does not exist. The names of tests to execute may also be passed to the script. Specifying a single regression test (&lt;strong&gt;python -m test test_spam&lt;/strong&gt;) will minimize output and only print whether the test passed or failed.</source>
          <target state="translated">由于使用&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt; &lt;code&gt;-m&lt;/code&gt; &lt;/a&gt;选项，因此&lt;a href=&quot;#module-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;包可以作为脚本运行以驱动Python的回归测试套件：&lt;strong&gt;python -m test&lt;/strong&gt;。在 &lt;code&gt;test.regrtest&lt;/code&gt; ，它使用test.regrtest ; 在先前的Python版本中使用的调用&lt;strong&gt;python -m test.regrtest&lt;/strong&gt;仍然有效。单独运行脚本会自动开始运行&lt;a href=&quot;#module-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;包中的所有回归测试。通过查找包中所有名称以 &lt;code&gt;test_&lt;/code&gt; 开头的模块，导入它们并执行 &lt;code&gt;test_main()&lt;/code&gt; (如果存在）或通过 &lt;code&gt;test_main&lt;/code&gt; 通过unittest.TestLoader.loadTestsFromModule加载测试来执行此操作。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;不存在。要执行的测试的名称也可以传递给脚本。指定单个回归测试（&lt;strong&gt;python -m test test_spam&lt;/strong&gt;）将使输出最小化，并且仅显示测试通过还是失败。</target>
        </trans-unit>
        <trans-unit id="4c128aa5fe9fa78e8eda955a1cebda2029361199" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package can be run as a script to drive Python&amp;rsquo;s regression test suite, thanks to the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; option: &lt;strong&gt;python -m test&lt;/strong&gt;. Under the hood, it uses &lt;code&gt;test.regrtest&lt;/code&gt;; the call &lt;strong&gt;python -m test.regrtest&lt;/strong&gt; used in previous Python versions still works. Running the script by itself automatically starts running all regression tests in the &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package. It does this by finding all modules in the package whose name starts with &lt;code&gt;test_&lt;/code&gt;, importing them, and executing the function &lt;code&gt;test_main()&lt;/code&gt; if present or loading the tests via unittest.TestLoader.loadTestsFromModule if &lt;code&gt;test_main&lt;/code&gt; does not exist. The names of tests to execute may also be passed to the script. Specifying a single regression test (&lt;strong&gt;python -m test test_spam&lt;/strong&gt;) will minimize output and only print whether the test passed or failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5d4304c9ba049d42957cc58ededa17769ed778" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package contains all regression tests for Python as well as the modules &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;test.regrtest&lt;/code&gt;. &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; is used to enhance your tests while &lt;code&gt;test.regrtest&lt;/code&gt; drives the testing suite.</source>
          <target state="translated">所述&lt;a href=&quot;#module-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;包中包含用于Python所有回归测试以及模块&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;test.regrtest&lt;/code&gt; 。&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; &lt;/a&gt;用于增强测试，而 &lt;code&gt;test.regrtest&lt;/code&gt; 驱动测试套件。</target>
        </trans-unit>
        <trans-unit id="9117d73cefcf380ffbe79a1cfa00d1882f1ed60a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt; package is meant for internal use by Python only. It is documented for the benefit of the core developers of Python. Any use of this package outside of Python&amp;rsquo;s standard library is discouraged as code mentioned here can change or be removed without notice between releases of Python.</source>
          <target state="translated">该&lt;a href=&quot;#module-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;包仅供Python内部使用。它被记录为Python核心开发人员的利益。不建议在Python标准库之外使用此软件包，因为此处提到的代码可以更改，也可以在不考虑Python版本之间删除的情况下删除。</target>
        </trans-unit>
        <trans-unit id="0244d10625882318f2449d3c4d63b55e83bf132e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; module defines the following classes:</source>
          <target state="translated">所述&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; &lt;/a&gt;模块定义了以下类：</target>
        </trans-unit>
        <trans-unit id="cd92d858e88b1051a2b11b06c524823853936238" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; module defines the following constants:</source>
          <target state="translated">所述&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; &lt;/a&gt;模块定义了下列常数：</target>
        </trans-unit>
        <trans-unit id="19a622513d587ca5bec49ac4dcc1a72fc02b52ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="a6e75d382748152f3eb0456dcb32bf8ada4db960" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support&quot;&gt;&lt;code&gt;test.support&lt;/code&gt;&lt;/a&gt; module provides support for Python&amp;rsquo;s regression test suite.</source>
          <target state="translated">该&lt;a href=&quot;#module-test.support&quot;&gt; &lt;code&gt;test.support&lt;/code&gt; &lt;/a&gt;模块提供了Python的回归测试套件的支持。</target>
        </trans-unit>
        <trans-unit id="4e7385e215be41279c5195a614a0eb01beda43d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support.bytecode_helper&quot;&gt;&lt;code&gt;test.support.bytecode_helper&lt;/code&gt;&lt;/a&gt; module provides support for testing and inspecting bytecode generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaea65c10dc101120e4cd4f0a1b3cf522268725f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support.script_helper&quot;&gt;&lt;code&gt;test.support.script_helper&lt;/code&gt;&lt;/a&gt; module provides support for Python&amp;rsquo;s script execution tests.</source>
          <target state="translated">该&lt;a href=&quot;#module-test.support.script_helper&quot;&gt; &lt;code&gt;test.support.script_helper&lt;/code&gt; &lt;/a&gt;模块提供了Python的脚本执行测试的支持。</target>
        </trans-unit>
        <trans-unit id="923078ee86ca2df19df77c474db1fade9150844e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-test.support.socket_helper&quot;&gt;&lt;code&gt;test.support.socket_helper&lt;/code&gt;&lt;/a&gt; module provides support for socket tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b9de08e53424b2e1f33e222c50a8ca31672d7e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-textwrap&quot;&gt;&lt;code&gt;textwrap&lt;/code&gt;&lt;/a&gt; module provides some convenience functions, as well as &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt;, the class that does all the work. If you&amp;rsquo;re just wrapping or filling one or two text strings, the convenience functions should be good enough; otherwise, you should use an instance of &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; for efficiency.</source>
          <target state="translated">该&lt;a href=&quot;#module-textwrap&quot;&gt; &lt;code&gt;textwrap&lt;/code&gt; &lt;/a&gt;模块提供了一些方便的功能，以及&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;，做所有的工作类。如果只是包装或填充一两个文本字符串，那么便利功能应该足够好；否则，您应该使用&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;的实例以提高效率。</target>
        </trans-unit>
        <trans-unit id="69521f021f4fce9480016bdd177094adebc1e7d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; package (&amp;ldquo;Tk interface&amp;rdquo;) is the standard Python interface to the Tk GUI toolkit. Both Tk and &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; are available on most Unix platforms, as well as on Windows systems. (Tk itself is not part of Python; it is maintained at ActiveState.)</source>
          <target state="translated">所述&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;封装（&amp;ldquo;TK接口&amp;rdquo;）是标准的Python接口Tk的GUI工具包。Tk和&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;在大多数Unix平台以及Windows系统上都可用。（Tk本身不是Python的一部分；它在ActiveState中维护。）</target>
        </trans-unit>
        <trans-unit id="8145ff1e1868154fb5a32dbe5bbb121e6926d395" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.colorchooser&quot;&gt;&lt;code&gt;tkinter.colorchooser&lt;/code&gt;&lt;/a&gt; module provides the &lt;a href=&quot;#tkinter.colorchooser.Chooser&quot;&gt;&lt;code&gt;Chooser&lt;/code&gt;&lt;/a&gt; class as an interface to the native color picker dialog. &lt;code&gt;Chooser&lt;/code&gt; implements a modal color choosing dialog window. The &lt;code&gt;Chooser&lt;/code&gt; class inherits from the &lt;a href=&quot;dialog#tkinter.commondialog.Dialog&quot;&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32140b186fd672d8f4513461d0b2b9b7ae2594f6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.commondialog&quot;&gt;&lt;code&gt;tkinter.commondialog&lt;/code&gt;&lt;/a&gt; module provides the &lt;a href=&quot;#tkinter.commondialog.Dialog&quot;&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/a&gt; class that is the base class for dialogs defined in other supporting modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe004d4c10a0f0ef7fbd58555fde919a6e90f8e7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.dnd&quot;&gt;&lt;code&gt;tkinter.dnd&lt;/code&gt;&lt;/a&gt; module provides drag-and-drop support for objects within a single application, within the same window or between windows. To enable an object to be dragged, you must create an event binding for it that starts the drag-and-drop process. Typically, you bind a ButtonPress event to a callback function that you write (see &lt;a href=&quot;tkinter#bindings-and-events&quot;&gt;Bindings and Events&lt;/a&gt;). The function should call &lt;a href=&quot;#tkinter.dnd.dnd_start&quot;&gt;&lt;code&gt;dnd_start()&lt;/code&gt;&lt;/a&gt;, where &amp;lsquo;source&amp;rsquo; is the object to be dragged, and &amp;lsquo;event&amp;rsquo; is the event that invoked the call (the argument to your callback function).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0c5502f7774f1a7da280d417fe0d1158a4a4de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.filedialog&quot;&gt;&lt;code&gt;tkinter.filedialog&lt;/code&gt;&lt;/a&gt; module provides classes and factory functions for creating file/directory selection windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47cce76737fdbfe6b994a79f512fd9424857c946" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.font&quot;&gt;&lt;code&gt;tkinter.font&lt;/code&gt;&lt;/a&gt; module provides the &lt;a href=&quot;#tkinter.font.Font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; class for creating and using named fonts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f74387f771539cec5e3960175aac70c57eb36a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.messagebox&quot;&gt;&lt;code&gt;tkinter.messagebox&lt;/code&gt;&lt;/a&gt; module provides a template base class as well as a variety of convenience methods for commonly used configurations. The message boxes are modal and will return a subset of (True, False, OK, None, Yes, No) based on the user&amp;rsquo;s selection. Common message box styles and layouts include but are not limited to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df5aa8074b14f787245f1b74d099da33892edb1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.scrolledtext&quot;&gt;&lt;code&gt;tkinter.scrolledtext&lt;/code&gt;&lt;/a&gt; module provides a class of the same name which implements a basic text widget which has a vertical scroll bar configured to do the &amp;ldquo;right thing.&amp;rdquo; Using the &lt;a href=&quot;#tkinter.scrolledtext.ScrolledText&quot;&gt;&lt;code&gt;ScrolledText&lt;/code&gt;&lt;/a&gt; class is a lot easier than setting up a text widget and scroll bar directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0d11947e38a35eedb8da5696601eb21877c07b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.scrolledtext&quot;&gt;&lt;code&gt;tkinter.scrolledtext&lt;/code&gt;&lt;/a&gt; module provides a class of the same name which implements a basic text widget which has a vertical scroll bar configured to do the &amp;ldquo;right thing.&amp;rdquo; Using the &lt;code&gt;ScrolledText&lt;/code&gt; class is a lot easier than setting up a text widget and scroll bar directly. The constructor is the same as that of the &lt;code&gt;tkinter.Text&lt;/code&gt; class.</source>
          <target state="translated">该&lt;a href=&quot;#module-tkinter.scrolledtext&quot;&gt; &lt;code&gt;tkinter.scrolledtext&lt;/code&gt; &lt;/a&gt;模块提供了一个类，它实现它具有配置做一个垂直滚动条的基本文本插件的名称相同的&amp;ldquo;正确的事&amp;rdquo;。使用 &lt;code&gt;ScrolledText&lt;/code&gt; 类比直接设置文本小部件和滚动条要容易得多。构造函数与 &lt;code&gt;tkinter.Text&lt;/code&gt; 类的构造函数相同。</target>
        </trans-unit>
        <trans-unit id="320a61211bfcab98e0263b59c8a02615cd78e582" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.simpledialog&quot;&gt;&lt;code&gt;tkinter.simpledialog&lt;/code&gt;&lt;/a&gt; module contains convenience classes and functions for creating simple modal dialogs to get a value from the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087dc6d87474f5743996f1e0d70ffbb201f64cca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; (Tk Interface Extension) module provides an additional rich set of widgets. Although the standard Tk library has many useful widgets, they are far from complete. The &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; library provides most of the commonly needed widgets that are missing from standard Tk: &lt;a href=&quot;#tkinter.tix.HList&quot;&gt;&lt;code&gt;HList&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.tix.ComboBox&quot;&gt;&lt;code&gt;ComboBox&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.tix.Control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt; (a.k.a. SpinBox) and an assortment of scrollable widgets. &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; also includes many more widgets that are generally useful in a wide range of applications: &lt;a href=&quot;#tkinter.tix.NoteBook&quot;&gt;&lt;code&gt;NoteBook&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.tix.FileEntry&quot;&gt;&lt;code&gt;FileEntry&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tkinter.tix.PanedWindow&quot;&gt;&lt;code&gt;PanedWindow&lt;/code&gt;&lt;/a&gt;, etc; there are more than 40 of them.</source>
          <target state="translated">所述&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;（TK接口扩展）模块提供一个额外的一套丰富的小部件。尽管标准的Tk库具有许多有用的小部件，但它们远非完整。所述&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;库提供大部分的通常需要的窗口小部件，是根据标准Tk的缺少的：&lt;a href=&quot;#tkinter.tix.HList&quot;&gt; &lt;code&gt;HList&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#tkinter.tix.ComboBox&quot;&gt; &lt;code&gt;ComboBox&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#tkinter.tix.Control&quot;&gt; &lt;code&gt;Control&lt;/code&gt; &lt;/a&gt;（又名SPINBOX）和可滚动窗口小部件的分类。&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;还包括许多其他小部件，这些小部件通常在广泛的应用程序中有用：&lt;a href=&quot;#tkinter.tix.NoteBook&quot;&gt; &lt;code&gt;NoteBook&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#tkinter.tix.FileEntry&quot;&gt; &lt;code&gt;FileEntry&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#tkinter.tix.PanedWindow&quot;&gt; &lt;code&gt;PanedWindow&lt;/code&gt; &lt;/a&gt;等；其中有40多个。</target>
        </trans-unit>
        <trans-unit id="e594d147bd9eee8773327872d17cd09f5e75e165" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; module adds:</source>
          <target state="translated">该&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;模块增加了：</target>
        </trans-unit>
        <trans-unit id="43cf6af180abfd7efccd55d54b05a62d2aaf6372" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tkinter.ttk&quot;&gt;&lt;code&gt;tkinter.ttk&lt;/code&gt;&lt;/a&gt; module provides access to the Tk themed widget set, introduced in Tk 8.5. If Python has not been compiled against Tk 8.5, this module can still be accessed if &lt;em&gt;Tile&lt;/em&gt; has been installed. The former method using Tk 8.5 provides additional benefits including anti-aliased font rendering under X11 and window transparency (requiring a composition window manager on X11).</source>
          <target state="translated">所述&lt;a href=&quot;#module-tkinter.ttk&quot;&gt; &lt;code&gt;tkinter.ttk&lt;/code&gt; &lt;/a&gt;模块提供了访问Tk的主题的外集件组，在Tk的8.5引入。如果尚未针对Tk 8.5编译Python，则在安装了&lt;em&gt;Tile的情况下&lt;/em&gt;仍可以访问此模块。使用Tk 8.5的前一种方法提供了其他好处，包括在X11下进行抗锯齿字体渲染和窗口透明（需要在X11上使用合成窗口管理器）。</target>
        </trans-unit>
        <trans-unit id="010d5d784a9d3ed823f679c97185fddd96fad511" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt; module can be executed as a script from the command line. It is as simple as:</source>
          <target state="translated">所述&lt;a href=&quot;#module-tokenize&quot;&gt; &lt;code&gt;tokenize&lt;/code&gt; &lt;/a&gt;模块可以作为来自命令行的脚本来执行。它很简单：</target>
        </trans-unit>
        <trans-unit id="8485e83176279cdc6374e639ebd578a80e143029" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt; module provides a lexical scanner for Python source code, implemented in Python. The scanner in this module returns comments as tokens as well, making it useful for implementing &amp;ldquo;pretty-printers&amp;rdquo;, including colorizers for on-screen displays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bc5e1c9efb3cd19a492a1a8e05de0147910024" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt; module provides a lexical scanner for Python source code, implemented in Python. The scanner in this module returns comments as tokens as well, making it useful for implementing &amp;ldquo;pretty-printers,&amp;rdquo; including colorizers for on-screen displays.</source>
          <target state="translated">所述&lt;a href=&quot;#module-tokenize&quot;&gt; &lt;code&gt;tokenize&lt;/code&gt; &lt;/a&gt;模块提供Python源代码词法扫描器，用Python实现。该模块中的扫描仪也以令牌的形式返回注释，这对于实现&amp;ldquo;漂亮打印机&amp;rdquo;（包括用于屏幕显示的着色器）非常有用。</target>
        </trans-unit>
        <trans-unit id="5f511da6744b577f0c50909f08baf3d8662be4dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-trace&quot;&gt;&lt;code&gt;trace&lt;/code&gt;&lt;/a&gt; module allows you to trace program execution, generate annotated statement coverage listings, print caller/callee relationships and list functions executed during a program run. It can be used in another program or from the command line.</source>
          <target state="translated">该&lt;a href=&quot;#module-trace&quot;&gt; &lt;code&gt;trace&lt;/code&gt; &lt;/a&gt;模块允许你跟踪一个程序运行时执行的程序执行，产生注释语句覆盖列表，打印主叫/被叫关系和列表功能。可以在其他程序中或从命令行中使用它。</target>
        </trans-unit>
        <trans-unit id="4d5dc02a91ffc0ddc0a0cd2fae8acbe61a69b08c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-trace&quot;&gt;&lt;code&gt;trace&lt;/code&gt;&lt;/a&gt; module can be invoked from the command line. It can be as simple as</source>
          <target state="translated">该&lt;a href=&quot;#module-trace&quot;&gt; &lt;code&gt;trace&lt;/code&gt; &lt;/a&gt;模块可通过命令行调用。它可以很简单</target>
        </trans-unit>
        <trans-unit id="db5ac03755b4e60a53a29f18e14817336774543a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module must be tracing memory allocations to get the limit, otherwise an exception is raised.</source>
          <target state="translated">该&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;模块必须追踪内存分配，以获得极限，否则将引发异常。</target>
        </trans-unit>
        <trans-unit id="fde229bd690b9e68c2b1e464dbe341752078b66c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module must be tracing memory allocations to take a snapshot, see the &lt;a href=&quot;#tracemalloc.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">所述&lt;a href=&quot;#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;模块必须跟踪存储器分配给拍摄快照，看到&lt;a href=&quot;#tracemalloc.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="59b15a41895ec7eac05a90753c6997b7add40ffd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tty&quot;&gt;&lt;code&gt;tty&lt;/code&gt;&lt;/a&gt; module defines functions for putting the tty into cbreak and raw modes.</source>
          <target state="translated">的&lt;a href=&quot;#module-tty&quot;&gt; &lt;code&gt;tty&lt;/code&gt; &lt;/a&gt;模块用于使TTY成CBREAK和原始模式定义的功能。</target>
        </trans-unit>
        <trans-unit id="07eaa4568ecb34fbafd3088112219dd6ba46369c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-tty&quot;&gt;&lt;code&gt;tty&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">的&lt;a href=&quot;#module-tty&quot;&gt; &lt;code&gt;tty&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="2b67f134175f6566de6a32665323b518f06e0cd1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; module is an extended reimplementation of the same-named module from the Python standard distribution up to version Python 2.5.</source>
          <target state="translated">的&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;模块是从Python标准分发多达Python版本2.5中的同名模块的扩展重新实现。</target>
        </trans-unit>
        <trans-unit id="6a3f21e1d1c58048ad940fbc6563e7b4bf6523a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-turtledemo&quot;&gt;&lt;code&gt;turtledemo&lt;/code&gt;&lt;/a&gt; package directory contains:</source>
          <target state="translated">该&lt;a href=&quot;#module-turtledemo&quot;&gt; &lt;code&gt;turtledemo&lt;/code&gt; &lt;/a&gt;包目录包含：</target>
        </trans-unit>
        <trans-unit id="fc0bfc0c5dda5c5c718c2d5d6afe3366e858d76a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-turtledemo&quot;&gt;&lt;code&gt;turtledemo&lt;/code&gt;&lt;/a&gt; package includes a set of demo scripts. These scripts can be run and viewed using the supplied demo viewer as follows:</source>
          <target state="translated">该&lt;a href=&quot;#module-turtledemo&quot;&gt; &lt;code&gt;turtledemo&lt;/code&gt; &lt;/a&gt;包包括一组演示脚本。可以使用提供的演示查看器来运行和查看这些脚本，如下所示：</target>
        </trans-unit>
        <trans-unit id="c274f74c69f3f523773db89028d39ebfb3c2a4e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module provides a rich set of tools for constructing and running tests. This section demonstrates that a small subset of the tools suffice to meet the needs of most users.</source>
          <target state="translated">该&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;模块提供了一套丰富的用于构建和运行测试工具。本节演示了工具的一小部分足以满足大多数用户的需求。</target>
        </trans-unit>
        <trans-unit id="550ed8a2e0d5ef66b50281dc4ed0a2cf8c5e67a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; unit testing framework was originally inspired by JUnit and has a similar flavor as major unit testing frameworks in other languages. It supports test automation, sharing of setup and shutdown code for tests, aggregation of tests into collections, and independence of the tests from the reporting framework.</source>
          <target state="translated">该&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;单元测试框架最初是由JUnit的启发，也有类似的味道在其他语言主要单元测试框架。它支持测试自动化，共享测试的设置和关闭代码，将测试聚合到集合中以及测试与报告框架的独立性。</target>
        </trans-unit>
        <trans-unit id="1434ea41d7d542121a8217544637f1bfba7ae044" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-urllib.error&quot;&gt;&lt;code&gt;urllib.error&lt;/code&gt;&lt;/a&gt; module defines the exception classes for exceptions raised by &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;. The base exception class is &lt;a href=&quot;#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#module-urllib.error&quot;&gt; &lt;code&gt;urllib.error&lt;/code&gt; 里&lt;/a&gt;模块定义由引发的异常异常类&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; 里&lt;/a&gt;。基本异常类是&lt;a href=&quot;#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ee64e18ba6d9ec07ba811ca447c01b9534d6ae7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-urllib.parse&quot;&gt;&lt;code&gt;urllib.parse&lt;/code&gt;&lt;/a&gt; module defines functions that fall into two broad categories: URL parsing and URL quoting. These are covered in detail in the following sections.</source>
          <target state="translated">所述&lt;a href=&quot;#module-urllib.parse&quot;&gt; &lt;code&gt;urllib.parse&lt;/code&gt; &lt;/a&gt;落入两大类模块定义功能：URL解析和URL引用。以下各节将详细介绍这些内容。</target>
        </trans-unit>
        <trans-unit id="91f4d970ce1b3aeb81168e2ce9b4e4b29a3feba8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; module defines functions and classes which help in opening URLs (mostly HTTP) in a complex world &amp;mdash; basic and digest authentication, redirections, cookies and more.</source>
          <target state="translated">在&lt;a href=&quot;#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; 里&lt;/a&gt;模块定义的函数和类这有助于在一个复杂的世界打开URL（主要是HTTP） -基本和摘要式身份验证，重定向，饼干等。</target>
        </trans-unit>
        <trans-unit id="4427049224ca80d28bb6cd1f4ba8aa3eac642a9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">所述&lt;a href=&quot;#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; 里&lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="158d83543b097cd1a684ccd480ac339d1df24307" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-urllib.response&quot;&gt;&lt;code&gt;urllib.response&lt;/code&gt;&lt;/a&gt; module defines functions and classes which define a minimal file like interface, including &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;readline()&lt;/code&gt;. The typical response object is an addinfourl instance, which defines an &lt;code&gt;info()&lt;/code&gt; method and that returns headers and a &lt;code&gt;geturl()&lt;/code&gt; method that returns the url. Functions defined by this module are used internally by the &lt;a href=&quot;#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">所述&lt;a href=&quot;#module-urllib.response&quot;&gt; &lt;code&gt;urllib.response&lt;/code&gt; &lt;/a&gt;模块定义的函数和类限定一个最小的文件类似的接口，包括 &lt;code&gt;read()&lt;/code&gt; 和 &lt;code&gt;readline()&lt;/code&gt; 。典型的响应对象是addinfourl实例，该实例定义一个 &lt;code&gt;info()&lt;/code&gt; 方法并返回标头，而 &lt;code&gt;geturl()&lt;/code&gt; 方法则返回该url。此模块定义的功能由&lt;a href=&quot;#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;模块在内部使用。</target>
        </trans-unit>
        <trans-unit id="4b07d9d42dccc34ee00e062aad533797e370eb8e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-urllib.response&quot;&gt;&lt;code&gt;urllib.response&lt;/code&gt;&lt;/a&gt; module defines functions and classes which define a minimal file-like interface, including &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;readline()&lt;/code&gt;. Functions defined by this module are used internally by the &lt;a href=&quot;#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; module. The typical response object is a &lt;a href=&quot;#urllib.response.addinfourl&quot;&gt;&lt;code&gt;urllib.response.addinfourl&lt;/code&gt;&lt;/a&gt; instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60cd16cabda39f1e5a654be3225e45721ab2b76" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-uu&quot;&gt;&lt;code&gt;uu&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">的&lt;a href=&quot;#module-uu&quot;&gt; &lt;code&gt;uu&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="4c618ead0516bb686d9dd02e4c383114c17e6fe6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-uuid&quot;&gt;&lt;code&gt;uuid&lt;/code&gt;&lt;/a&gt; module defines the following constants for the possible values of the &lt;code&gt;variant&lt;/code&gt; attribute:</source>
          <target state="translated">的&lt;a href=&quot;#module-uuid&quot;&gt; &lt;code&gt;uuid&lt;/code&gt; &lt;/a&gt;模块定义了的可能值以下常量 &lt;code&gt;variant&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="dfa0704de3ca100bba5d25f4eff9d322a057cc7f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-uuid&quot;&gt;&lt;code&gt;uuid&lt;/code&gt;&lt;/a&gt; module defines the following functions:</source>
          <target state="translated">的&lt;a href=&quot;#module-uuid&quot;&gt; &lt;code&gt;uuid&lt;/code&gt; &lt;/a&gt;模块定义了如下功能：</target>
        </trans-unit>
        <trans-unit id="e7c7759cdf4ea6781379bac932cc154b598d9c03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-uuid&quot;&gt;&lt;code&gt;uuid&lt;/code&gt;&lt;/a&gt; module defines the following namespace identifiers for use with &lt;a href=&quot;#uuid.uuid3&quot;&gt;&lt;code&gt;uuid3()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#uuid.uuid5&quot;&gt;&lt;code&gt;uuid5()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的&lt;a href=&quot;#module-uuid&quot;&gt; &lt;code&gt;uuid&lt;/code&gt; &lt;/a&gt;模块定义了以下命名空间标识符，用于在使用&lt;a href=&quot;#uuid.uuid3&quot;&gt; &lt;code&gt;uuid3()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#uuid.uuid5&quot;&gt; &lt;code&gt;uuid5()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6841f915e5c6db3b149cd5e09f2d363c06b1cb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-venv&quot;&gt;&lt;code&gt;venv&lt;/code&gt;&lt;/a&gt; module provides support for creating lightweight &amp;ldquo;virtual environments&amp;rdquo; with their own site directories, optionally isolated from system site directories. Each virtual environment has its own Python binary (which matches the version of the binary that was used to create this environment) and can have its own independent set of installed Python packages in its site directories.</source>
          <target state="translated">该&lt;a href=&quot;#module-venv&quot;&gt; &lt;code&gt;venv&lt;/code&gt; &lt;/a&gt;模块提供了创建轻量级&amp;ldquo;虚拟环境&amp;rdquo;与自己的网站目录，可选地从系统站点目录隔离支持。每个虚拟环境都有自己的Python二进制文件（与用于创建该环境的二进制文件的版本匹配），并且可以在其站点目录中拥有自己独立的已安装Python软件包集。</target>
        </trans-unit>
        <trans-unit id="fe6bcf346326e5482e10284d7d56ca5e5249e4f0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-wave&quot;&gt;&lt;code&gt;wave&lt;/code&gt;&lt;/a&gt; module defines the following function and exception:</source>
          <target state="translated">的&lt;a href=&quot;#module-wave&quot;&gt; &lt;code&gt;wave&lt;/code&gt; &lt;/a&gt;模块定义下面的函数和异常：</target>
        </trans-unit>
        <trans-unit id="db1287ed4466a744ea41400d0c9b31503ca62f25" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-wave&quot;&gt;&lt;code&gt;wave&lt;/code&gt;&lt;/a&gt; module provides a convenient interface to the WAV sound format. It does not support compression/decompression, but it does support mono/stereo.</source>
          <target state="translated">的&lt;a href=&quot;#module-wave&quot;&gt; &lt;code&gt;wave&lt;/code&gt; &lt;/a&gt;模块提供了一个方便的接口，WAV声音格式。它不支持压缩/解压缩，但支持单声道/立体声。</target>
        </trans-unit>
        <trans-unit id="ce0a6c0a72b64cc9c303875352bd99f1f28d877c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-weakref&quot;&gt;&lt;code&gt;weakref&lt;/code&gt;&lt;/a&gt; module allows the Python programmer to create &lt;em&gt;weak references&lt;/em&gt; to objects.</source>
          <target state="translated">该&lt;a href=&quot;#module-weakref&quot;&gt; &lt;code&gt;weakref&lt;/code&gt; &lt;/a&gt;模块允许Python程序员创建&lt;em&gt;弱引用&lt;/em&gt;对象。</target>
        </trans-unit>
        <trans-unit id="602ebdec6ca13a1397450d4fe2b22e2e1ced8817" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-webbrowser&quot;&gt;&lt;code&gt;webbrowser&lt;/code&gt;&lt;/a&gt; module provides a high-level interface to allow displaying Web-based documents to users. Under most circumstances, simply calling the &lt;a href=&quot;#webbrowser.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function from this module will do the right thing.</source>
          <target state="translated">在&lt;a href=&quot;#module-webbrowser&quot;&gt; &lt;code&gt;webbrowser&lt;/code&gt; &lt;/a&gt;模块提供了一个高层次的接口，以允许显示基于Web的文档给用户。在大多数情况下，只需从此模块调用&lt;a href=&quot;#webbrowser.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数将做正确的事情。</target>
        </trans-unit>
        <trans-unit id="b1f5c82843a509b2a143237cf2ba7e8a05441e4b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-winsound&quot;&gt;&lt;code&gt;winsound&lt;/code&gt;&lt;/a&gt; module provides access to the basic sound-playing machinery provided by Windows platforms. It includes functions and several constants.</source>
          <target state="translated">在&lt;a href=&quot;#module-winsound&quot;&gt; &lt;code&gt;winsound&lt;/code&gt; &lt;/a&gt;模块提供访问由Windows平台提供的基本声音播放机。它包括函数和几个常量。</target>
        </trans-unit>
        <trans-unit id="392fb45242b14c4b7cd1b0ded98856e64199fc71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xdrlib&quot;&gt;&lt;code&gt;xdrlib&lt;/code&gt;&lt;/a&gt; module defines two classes, one for packing variables into XDR representation, and another for unpacking from XDR representation. There are also two exception classes.</source>
          <target state="translated">所述&lt;a href=&quot;#module-xdrlib&quot;&gt; &lt;code&gt;xdrlib&lt;/code&gt; &lt;/a&gt;模块定义用于从XDR表示拆包两个类，一个用于包装变量成XDR表示，并且另一个。还有两个异常类。</target>
        </trans-unit>
        <trans-unit id="0765a0ff3c40c9034d664c7e44836a0a5dd558f3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xdrlib&quot;&gt;&lt;code&gt;xdrlib&lt;/code&gt;&lt;/a&gt; module supports the External Data Representation Standard as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc1014.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1014&lt;/strong&gt;&lt;/a&gt;, written by Sun Microsystems, Inc. June 1987. It supports most of the data types described in the RFC.</source>
          <target state="translated">所述&lt;a href=&quot;#module-xdrlib&quot;&gt; &lt;code&gt;xdrlib&lt;/code&gt; &lt;/a&gt;模块支持外部数据表示标准中所述&lt;a href=&quot;https://tools.ietf.org/html/rfc1014.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1014&lt;/strong&gt;&lt;/a&gt;，由Sun Microsystems书面公司1987年6月它支持大多数在RFC中描述的数据类型的。</target>
        </trans-unit>
        <trans-unit id="7e23e8421593d34c75aa5877916b6c00871448fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.dom&quot;&gt;&lt;code&gt;xml.dom&lt;/code&gt;&lt;/a&gt; contains the following functions:</source>
          <target state="translated">该&lt;a href=&quot;#module-xml.dom&quot;&gt; &lt;code&gt;xml.dom&lt;/code&gt; 的&lt;/a&gt;包含以下功能：</target>
        </trans-unit>
        <trans-unit id="afe2596a2a0bf334c7c6480123b905a534e201ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt; module is essentially a DOM 1.0-compatible DOM with some DOM 2 features (primarily namespace features).</source>
          <target state="translated">所述&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; &lt;/a&gt;模块实质上是一个DOM 1.0兼容DOM一些DOM 2个特征（主要是命名空间的功能）。</target>
        </trans-unit>
        <trans-unit id="ec4bf1281109a15a8ce9a354baa7f424d805c298" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; &lt;/a&gt;模块是不反对恶意构造的数据安全。如果您需要解析不可信或未经身份验证的数据，请参见&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML漏洞&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ff2e624fa14eb71f82d8114b3704cd9e49c79c8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.dom.pulldom&quot;&gt;&lt;code&gt;xml.dom.pulldom&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#module-xml.dom.pulldom&quot;&gt; &lt;code&gt;xml.dom.pulldom&lt;/code&gt; &lt;/a&gt;模块是不反对恶意构造的数据安全。如果您需要解析不可信或未经身份验证的数据，请参见&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML漏洞&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7da8d9e204b18cde09a1c5927abca16c2dc06f90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.dom.pulldom&quot;&gt;&lt;code&gt;xml.dom.pulldom&lt;/code&gt;&lt;/a&gt; module provides a &amp;ldquo;pull parser&amp;rdquo; which can also be asked to produce DOM-accessible fragments of the document where necessary. The basic concept involves pulling &amp;ldquo;events&amp;rdquo; from a stream of incoming XML and processing them. In contrast to SAX which also employs an event-driven processing model together with callbacks, the user of a pull parser is responsible for explicitly pulling events from the stream, looping over those events until either processing is finished or an error condition occurs.</source>
          <target state="translated">该&lt;a href=&quot;#module-xml.dom.pulldom&quot;&gt; &lt;code&gt;xml.dom.pulldom&lt;/code&gt; &lt;/a&gt;模块提供了一个&amp;ldquo;拉解析器&amp;rdquo;，它也可以要求在必要时出示该文件的DOM访问的片段。基本概念涉及从传入XML流中提取&amp;ldquo;事件&amp;rdquo;并进行处理。与还使用事件驱动的处理模型和回调的SAX相比，提取解析器的用户负责从流中显式提取事件，循环处理这些事件，直到处理完成或发生错误情况为止。</target>
        </trans-unit>
        <trans-unit id="753f54582b46244e21a8831572953d24a4288d90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; module implements a simple and efficient API for parsing and creating XML data.</source>
          <target state="translated">该&lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &lt;/a&gt;模块实现了解析和创建XML数据的简单和高效的API。</target>
        </trans-unit>
        <trans-unit id="220ca5b36fbe3faa62dc3cebfd386cfa746bf773" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &lt;/a&gt;模块是不反对恶意构造的数据安全。如果您需要解析不可信或未经身份验证的数据，请参见&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML漏洞&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3cff07b737ccb6a53a248041c03aea6c1778b60" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; module contains two functions:</source>
          <target state="translated">该&lt;a href=&quot;#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt;模块包含两个功能：</target>
        </trans-unit>
        <trans-unit id="487cc8b216b2d808ca3378ccef6ef8a4592695bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; module is a Python interface to the Expat non-validating XML parser. The module provides a single extension type, &lt;code&gt;xmlparser&lt;/code&gt;, that represents the current state of an XML parser. After an &lt;code&gt;xmlparser&lt;/code&gt; object has been created, various attributes of the object can be set to handler functions. When an XML document is then fed to the parser, the handler functions are called for the character data and markup in the XML document.</source>
          <target state="translated">所述&lt;a href=&quot;#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt;模块是Python接口外籍非验证XML解析器。该模块提供了一个扩展类型 &lt;code&gt;xmlparser&lt;/code&gt; ，它表示XML解析器的当前状态。创建 &lt;code&gt;xmlparser&lt;/code&gt; 对象后，可以将对象的各种属性设置为处理函数。然后将XML文档输入解析器时，将为XML文档中的字符数据和标记调用处理程序函数。</target>
        </trans-unit>
        <trans-unit id="2cbce4c26fd4ba418c1eaed5f2fdba794b888e4f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.parsers.expat.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; module also provides error message constants and a dictionary &lt;a href=&quot;#xml.parsers.expat.errors.codes&quot;&gt;&lt;code&gt;codes&lt;/code&gt;&lt;/a&gt; mapping these messages back to the error codes, see below.</source>
          <target state="translated">所述&lt;a href=&quot;#module-xml.parsers.expat.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt;模块还提供错误消息常量和字典&lt;a href=&quot;#xml.parsers.expat.errors.codes&quot;&gt; &lt;code&gt;codes&lt;/code&gt; &lt;/a&gt;映射这些消息返回到错误代码，见下文。</target>
        </trans-unit>
        <trans-unit id="33e272786d76f67af9436fe85e804086e74d1b40" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.sax&quot;&gt;&lt;code&gt;xml.sax&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#module-xml.sax&quot;&gt; &lt;code&gt;xml.sax&lt;/code&gt; &lt;/a&gt;模块是不反对恶意构造的数据安全。如果您需要解析不可信或未经身份验证的数据，请参见&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML漏洞&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e221cca934884e0f8a8c65a15fb87eb0cc204e0c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xml.sax&quot;&gt;&lt;code&gt;xml.sax&lt;/code&gt;&lt;/a&gt; package provides a number of modules which implement the Simple API for XML (SAX) interface for Python. The package itself provides the SAX exceptions and the convenience functions which will be most used by users of the SAX API.</source>
          <target state="translated">所述&lt;a href=&quot;#module-xml.sax&quot;&gt; &lt;code&gt;xml.sax&lt;/code&gt; &lt;/a&gt;包提供了许多，其实现用于XML（SAX）接口用于Python的简单API模块。程序包本身提供了SAX异常和便利功能，这些功能将由SAX API的用户最多使用。</target>
        </trans-unit>
        <trans-unit id="ad2d781d2ea000faaa92755486cec8e6660fceeb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xmlrpc.client&quot;&gt;&lt;code&gt;xmlrpc.client&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#module-xmlrpc.client&quot;&gt; &lt;code&gt;xmlrpc.client&lt;/code&gt; &lt;/a&gt;模块是不反对恶意构造的数据安全。如果您需要解析不可信或未经身份验证的数据，请参见&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML漏洞&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8fce2f24b87c1546f646642802c15515a04d748" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xmlrpc.server&quot;&gt;&lt;code&gt;xmlrpc.server&lt;/code&gt;&lt;/a&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#module-xmlrpc.server&quot;&gt; &lt;code&gt;xmlrpc.server&lt;/code&gt; &lt;/a&gt;模块是不反对恶意构造的数据安全。如果您需要解析不可信或未经身份验证的数据，请参见&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML漏洞&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfcd4ee4d8d026e3b265966b4ea47954ccc18a9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-xmlrpc.server&quot;&gt;&lt;code&gt;xmlrpc.server&lt;/code&gt;&lt;/a&gt; module provides a basic server framework for XML-RPC servers written in Python. Servers can either be free standing, using &lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt;&lt;code&gt;SimpleXMLRPCServer&lt;/code&gt;&lt;/a&gt;, or embedded in a CGI environment, using &lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt;&lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#module-xmlrpc.server&quot;&gt; &lt;code&gt;xmlrpc.server&lt;/code&gt; &lt;/a&gt;模块提供了用Python编写的XML-RPC服务器的基本服务器架构。服务器可以使用&lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt; &lt;code&gt;SimpleXMLRPCServer&lt;/code&gt; &lt;/a&gt;独立安装，也可以使用&lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt; &lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt; &lt;/a&gt;嵌入到CGI环境中。</target>
        </trans-unit>
        <trans-unit id="97fe9e07c5e698e1d9d613108136f0084f9421ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; module provides a simple command-line interface to interact with ZIP archives.</source>
          <target state="translated">的&lt;a href=&quot;#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;模块提供了一个简单的命令行接口来与ZIP压缩文件进行交互。</target>
        </trans-unit>
        <trans-unit id="0d38ad8f281f6ac8626495f8d63059ba63d81f36" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#module-zoneinfo&quot;&gt;&lt;code&gt;zoneinfo&lt;/code&gt;&lt;/a&gt; module provides a concrete time zone implementation to support the IANA time zone database as originally specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0615&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 615&lt;/strong&gt;&lt;/a&gt;. By default, &lt;a href=&quot;#module-zoneinfo&quot;&gt;&lt;code&gt;zoneinfo&lt;/code&gt;&lt;/a&gt; uses the system&amp;rsquo;s time zone data if available; if no system time zone data is available, the library will fall back to using the first-party &lt;a href=&quot;https://pypi.org/project/tzdata/&quot;&gt;tzdata&lt;/a&gt; package available on PyPI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b75c1f39769dc1c5764f94ee93c4d6b84f3fed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.Pipe&quot;&gt;&lt;code&gt;Pipe()&lt;/code&gt;&lt;/a&gt; function returns a pair of connection objects connected by a pipe which by default is duplex (two-way). For example:</source>
          <target state="translated">所述&lt;a href=&quot;#multiprocessing.Pipe&quot;&gt; &lt;code&gt;Pipe()&lt;/code&gt; &lt;/a&gt;函数返回一对连接的对象通过管默认为双工（双向）连接。例如：</target>
        </trans-unit>
        <trans-unit id="8cf5feb4818516622d330a29f73f50132adfc639" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="translated">的&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;类</target>
        </trans-unit>
        <trans-unit id="4b293343c1c587e9b5ac647079a9431b786ace07" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; class is a near clone of &lt;a href=&quot;queue#queue.Queue&quot;&gt;&lt;code&gt;queue.Queue&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">该&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;类是近克隆&lt;a href=&quot;queue#queue.Queue&quot;&gt; &lt;code&gt;queue.Queue&lt;/code&gt; &lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="a0cedb7fa5260d9907b2328d34b19ed312430247" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.SimpleQueue&quot;&gt;&lt;code&gt;SimpleQueue&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.JoinableQueue&quot;&gt;&lt;code&gt;JoinableQueue&lt;/code&gt;&lt;/a&gt; types are multi-producer, multi-consumer</source>
          <target state="translated">该&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.SimpleQueue&quot;&gt; &lt;code&gt;SimpleQueue&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#multiprocessing.JoinableQueue&quot;&gt; &lt;code&gt;JoinableQueue&lt;/code&gt; &lt;/a&gt;类型是多生产，多消费</target>
        </trans-unit>
        <trans-unit id="038df3c220f2741b8456e0029e0ca1e05d8417f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.connection.Connection.recv&quot;&gt;&lt;code&gt;Connection.recv()&lt;/code&gt;&lt;/a&gt; method automatically unpickles the data it receives, which can be a security risk unless you can trust the process which sent the message.</source>
          <target state="translated">所述&lt;a href=&quot;#multiprocessing.connection.Connection.recv&quot;&gt; &lt;code&gt;Connection.recv()&lt;/code&gt; &lt;/a&gt;方法自动unpickles它接收到的数据，其可以是安全风险，除非你可以信任的发送消息的过程。</target>
        </trans-unit>
        <trans-unit id="29d6684e7eeea81aa92bf41bfe61a7c9303a408d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool&lt;/code&gt;&lt;/a&gt; class represents a pool of worker processes. It has methods which allows tasks to be offloaded to the worker processes in a few different ways.</source>
          <target state="translated">该&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;Pool&lt;/code&gt; &lt;/a&gt;类代表工作进程池。它具有允许以几种不同方式将任务卸载到工作进程的方法。</target>
        </trans-unit>
        <trans-unit id="a507cb2ece4cc4bff46e7f21b384b92f4c11139f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; instance where the values are stored.</source>
          <target state="translated">存储值的&lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="eb8247966315c33ed7d42e4bdd9f010ba4c75fdd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#netrc.netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt; class parses and encapsulates the netrc file format used by the Unix &lt;strong&gt;ftp&lt;/strong&gt; program and other FTP clients.</source>
          <target state="translated">该&lt;a href=&quot;#netrc.netrc&quot;&gt; &lt;code&gt;netrc&lt;/code&gt; &lt;/a&gt;类解析和封装了Unix的使用NETRC文件格式&lt;strong&gt;的FTP&lt;/strong&gt;程序和其他FTP客户端。</target>
        </trans-unit>
        <trans-unit id="8d9f703f8f300e46186097fad3623f0d59c01381" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#os.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; attribute will be &lt;code&gt;bytes&lt;/code&gt; if the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument is of type &lt;code&gt;bytes&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt; otherwise. Use &lt;a href=&quot;#os.fsdecode&quot;&gt;&lt;code&gt;fsdecode()&lt;/code&gt;&lt;/a&gt; to decode byte filenames.</source>
          <target state="translated">的&lt;a href=&quot;#os.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;属性将是 &lt;code&gt;bytes&lt;/code&gt; ，如果&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;路径&lt;/em&gt;参数的类型的 &lt;code&gt;bytes&lt;/code&gt; 和 &lt;code&gt;str&lt;/code&gt; 否则。使用&lt;a href=&quot;#os.fsdecode&quot;&gt; &lt;code&gt;fsdecode()&lt;/code&gt; &lt;/a&gt;解码字节文件名。</target>
        </trans-unit>
        <trans-unit id="f828ec7e960d4be893a45463a9230b6baafb0f22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; function returns directory entries along with file attribute information, giving better performance for many common use cases.</source>
          <target state="translated">该&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;与文件属性信息一起函数返回目录中的条目，从而对许多常见的使用情况更好的性能。</target>
        </trans-unit>
        <trans-unit id="c5c2323bdc5e7fee3b0c455c908e3670af275b78" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; iterator supports the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and has the following method:</source>
          <target state="translated">在&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;迭代器支持&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;上下文管理&lt;/a&gt;协议，并具有以下的方法：</target>
        </trans-unit>
        <trans-unit id="841477857a09c0817d9c06fb4eaadeb64cf9d56d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; iterator supports the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and has the following method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43bededb39b0a5e3947c94653bc8a5e138915265" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">的&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="bd878a547586902bf1c4b2db9bcb9b047247a72d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt; function parses the parameter &lt;em&gt;source&lt;/em&gt; as if it were an input to &lt;code&gt;compile(source, 'file.py', 'eval')&lt;/code&gt;. If the parse succeeds, an ST object is created to hold the internal parse tree representation, otherwise an appropriate exception is raised.</source>
          <target state="translated">所述&lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt;函数解析参数&lt;em&gt;源&lt;/em&gt;就好像它是一个输入到 &lt;code&gt;compile(source, 'file.py', 'eval')&lt;/code&gt; 。如果解析成功，则将创建一个ST对象来保存内部解析树表示形式，否则将引发适当的异常。</target>
        </trans-unit>
        <trans-unit id="6d012d594304d7266b44a2752d73569066704c93" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; function parses the parameter &lt;em&gt;source&lt;/em&gt; as if it were an input to &lt;code&gt;compile(source, 'file.py', 'exec')&lt;/code&gt;. If the parse succeeds, an ST object is created to hold the internal parse tree representation, otherwise an appropriate exception is raised.</source>
          <target state="translated">所述&lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt;函数解析参数&lt;em&gt;源&lt;/em&gt;就好像它是一个输入到 &lt;code&gt;compile(source, 'file.py', 'exec')&lt;/code&gt; 。如果解析成功，则将创建一个ST对象来保存内部解析树表示形式，否则将引发适当的异常。</target>
        </trans-unit>
        <trans-unit id="9544d49104e9b2f429af86f2c8c929928e7a546f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#profile.Profile&quot;&gt;&lt;code&gt;Profile&lt;/code&gt;&lt;/a&gt; class can also be used as a context manager (supported only in &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt; module. see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;):</source>
          <target state="translated">该&lt;a href=&quot;#profile.Profile&quot;&gt; &lt;code&gt;Profile&lt;/code&gt; &lt;/a&gt;类也可以用作上下文管理器（仅支持&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; &lt;/a&gt;模块看看。&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;上下文管理器类型&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="faf57ccc0cc476807993436cf501f3326fcbfcc1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#protocols&quot;&gt;Protocols&lt;/a&gt; section documents asyncio &lt;a href=&quot;#asyncio.BaseProtocol&quot;&gt;&lt;code&gt;BaseProtocol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.Protocol&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.BufferedProtocol&quot;&gt;&lt;code&gt;BufferedProtocol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.DatagramProtocol&quot;&gt;&lt;code&gt;DatagramProtocol&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#asyncio.SubprocessProtocol&quot;&gt;&lt;code&gt;SubprocessProtocol&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">该&lt;a href=&quot;#protocols&quot;&gt;协议&lt;/a&gt;部分文件ASYNCIO &lt;a href=&quot;#asyncio.BaseProtocol&quot;&gt; &lt;code&gt;BaseProtocol&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#asyncio.Protocol&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#asyncio.BufferedProtocol&quot;&gt; &lt;code&gt;BufferedProtocol&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#asyncio.DatagramProtocol&quot;&gt; &lt;code&gt;DatagramProtocol&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.SubprocessProtocol&quot;&gt; &lt;code&gt;SubprocessProtocol&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="226339913a9761d8d008b8dbb0aa15827c049517" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;pstats.Stats&lt;/code&gt;&lt;/a&gt; class reads profile results from a file and formats them in various ways.</source>
          <target state="translated">该&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;pstats.Stats&lt;/code&gt; &lt;/a&gt;类从文件中读取配置文件的结果，并格式化它们以不同的方式。</target>
        </trans-unit>
        <trans-unit id="f68199c1afb4ab885475da66322b237f646c0f3b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt;&lt;code&gt;strip_dirs()&lt;/code&gt;&lt;/a&gt; method removed the extraneous path from all the module names. The &lt;a href=&quot;#pstats.Stats.sort_stats&quot;&gt;&lt;code&gt;sort_stats()&lt;/code&gt;&lt;/a&gt; method sorted all the entries according to the standard module/line/name string that is printed. The &lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt;&lt;code&gt;print_stats()&lt;/code&gt;&lt;/a&gt; method printed out all the statistics. You might try the following sort calls:</source>
          <target state="translated">所述&lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt; &lt;code&gt;strip_dirs()&lt;/code&gt; &lt;/a&gt;方法去除从所有的模块名称的无关路径。所述&lt;a href=&quot;#pstats.Stats.sort_stats&quot;&gt; &lt;code&gt;sort_stats()&lt;/code&gt; &lt;/a&gt;方法根据被打印的标准模块/线/名称字符串排序的所有条目。所述&lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt; &lt;code&gt;print_stats()&lt;/code&gt; &lt;/a&gt;方法打印出来的所有的统计信息。您可以尝试以下排序调用：</target>
        </trans-unit>
        <trans-unit id="5544d4649257a25ae9f7706cb59f82c5565624e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; type represents an immutable sequence of numbers and is commonly used for looping a specific number of times in &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loops.</source>
          <target state="translated">的&lt;a href=&quot;#range&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;类型表示数字的不可变序列，并通常用于在循环的特定次数&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;环路。</target>
        </trans-unit>
        <trans-unit id="93f1005d15481487f6c33fac6a6f470cffc4c2e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; type represents an immutable sequence of numbers and is commonly used for looping a specific number of times in &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d79383c695b081c5ccacc2d185b0227b09d755" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#re-objects&quot;&gt;regular expression object&lt;/a&gt; whose &lt;a href=&quot;#re.Pattern.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#re.Pattern.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; method produced this match instance.</source>
          <target state="translated">其&lt;a href=&quot;#re.Pattern.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#re.Pattern.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;方法产生此match实例的&lt;a href=&quot;#re-objects&quot;&gt;正则表达式对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd9268eb754a15ad397f9c9fc09eaf71e25be7ed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#sched.scheduler&quot;&gt;&lt;code&gt;scheduler&lt;/code&gt;&lt;/a&gt; class defines a generic interface to scheduling events. It needs two functions to actually deal with the &amp;ldquo;outside world&amp;rdquo; &amp;mdash; &lt;em&gt;timefunc&lt;/em&gt; should be callable without arguments, and return a number (the &amp;ldquo;time&amp;rdquo;, in any units whatsoever). The &lt;em&gt;delayfunc&lt;/em&gt; function should be callable with one argument, compatible with the output of &lt;em&gt;timefunc&lt;/em&gt;, and should delay that many time units. &lt;em&gt;delayfunc&lt;/em&gt; will also be called with the argument &lt;code&gt;0&lt;/code&gt; after each event is run to allow other threads an opportunity to run in multi-threaded applications.</source>
          <target state="translated">该&lt;a href=&quot;#sched.scheduler&quot;&gt; &lt;code&gt;scheduler&lt;/code&gt; &lt;/a&gt;类定义一个通用的接口，调度事件。它实际上需要两个函数来处理&amp;ldquo;外部世界&amp;rdquo; &amp;mdash; &lt;em&gt;timefunc&lt;/em&gt;应该可以不带参数地被调用，并返回一个数字（&amp;ldquo; time&amp;rdquo;，以任何单位表示）。该&lt;em&gt;delayfunc&lt;/em&gt;功能应该是可调用的一个参数，与输出兼容&lt;em&gt;timefunc&lt;/em&gt;，并应延迟许多时间单位。在每个事件运行之后，&lt;em&gt;delayfunc&lt;/em&gt;也将以参数 &lt;code&gt;0&lt;/code&gt; 调用，以允许其他线程有机会在多线程应用程序中运行。</target>
        </trans-unit>
        <trans-unit id="36be084ce98cf1d1198d3409e1035b3326919bd6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#server-objects&quot;&gt;Server Objects&lt;/a&gt; section documents types returned from event loop methods like &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">该&lt;a href=&quot;#server-objects&quot;&gt;服务器对象&lt;/a&gt;从事件循环的方法，如返回部分文件类型&lt;a href=&quot;#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="94096215001803cb14ba00b186d7e0b29c7a5262" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; class makes it easy to write lexical analyzers for simple syntaxes resembling that of the Unix shell. This will often be useful for writing minilanguages, (for example, in run control files for Python applications) or for parsing quoted strings.</source>
          <target state="translated">该&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;类可以很容易地编写简单的语法类似的Unix外壳的词法分析器。这对于编写迷你语言（例如，在Python应用程序的运行控制文件中）或解析带引号的字符串通常很有用。</target>
        </trans-unit>
        <trans-unit id="6cd60eecbf73c4e056be93777e61819e38464d2e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#signal.signal&quot;&gt;&lt;code&gt;signal.signal()&lt;/code&gt;&lt;/a&gt; function allows defining custom handlers to be executed when a signal is received. A small number of default handlers are installed: &lt;a href=&quot;#signal.SIGPIPE&quot;&gt;&lt;code&gt;SIGPIPE&lt;/code&gt;&lt;/a&gt; is ignored (so write errors on pipes and sockets can be reported as ordinary Python exceptions) and &lt;a href=&quot;#signal.SIGINT&quot;&gt;&lt;code&gt;SIGINT&lt;/code&gt;&lt;/a&gt; is translated into a &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt; exception if the parent process has not changed it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261858698a1b8371fdde292b2461fac39e64543f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#signal.signal&quot;&gt;&lt;code&gt;signal.signal()&lt;/code&gt;&lt;/a&gt; function allows defining custom handlers to be executed when a signal is received. A small number of default handlers are installed: &lt;code&gt;SIGPIPE&lt;/code&gt; is ignored (so write errors on pipes and sockets can be reported as ordinary Python exceptions) and &lt;code&gt;SIGINT&lt;/code&gt; is translated into a &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt; exception if the parent process has not changed it.</source>
          <target state="translated">所述&lt;a href=&quot;#signal.signal&quot;&gt; &lt;code&gt;signal.signal()&lt;/code&gt; &lt;/a&gt;函数允许定义自定义处理程序接收到信号时被执行。安装了少量默认处理程序：忽略 &lt;code&gt;SIGPIPE&lt;/code&gt; （因此，可以将管道和套接字上的写入错误报告为普通的Python异常），并且如果父进程未更改 &lt;code&gt;SIGINT&lt;/code&gt; ,则SIGINT会转换为&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="b5a79026512537c574eb6c65db11730a5f08239f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt;&lt;code&gt;SMTPChannel&lt;/code&gt;&lt;/a&gt; has the following instance variables:</source>
          <target state="translated">该&lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt; &lt;code&gt;SMTPChannel&lt;/code&gt; &lt;/a&gt;有下列实例变量：</target>
        </trans-unit>
        <trans-unit id="0af2badecdbd4dbfe8d3ed8f8f0c1e55816e49bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt;&lt;code&gt;SMTPChannel&lt;/code&gt;&lt;/a&gt; operates by invoking methods named &lt;code&gt;smtp_&amp;lt;command&amp;gt;&lt;/code&gt; upon reception of a command line from the client. Built into the base &lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt;&lt;code&gt;SMTPChannel&lt;/code&gt;&lt;/a&gt; class are methods for handling the following commands (and responding to them appropriately):</source>
          <target state="translated">所述&lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt; &lt;code&gt;SMTPChannel&lt;/code&gt; &lt;/a&gt;由名为调用方法操作 &lt;code&gt;smtp_&amp;lt;command&amp;gt;&lt;/code&gt; 在从所述客户端的命令行的接收。内置于基本&lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt; &lt;code&gt;SMTPChannel&lt;/code&gt; &lt;/a&gt;类中的是用于处理以下命令（并适当响应它们）的方法：</target>
        </trans-unit>
        <trans-unit id="c248d381a6387f2e58305c651544e1788fd34391" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; class supports the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When used like this, the SMTP &lt;code&gt;QUIT&lt;/code&gt; command is issued automatically when the &lt;code&gt;with&lt;/code&gt; statement exits. E.g.:</source>
          <target state="translated">该&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;类支持&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;声明。像这样使用时，当 &lt;code&gt;with&lt;/code&gt; 语句退出时，会自动发出SMTP &lt;code&gt;QUIT&lt;/code&gt; 命令。例如：</target>
        </trans-unit>
        <trans-unit id="ed95056b99e8cc2f7f678e08d06bd7599bbca55d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; class supports the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When used like this, the SMTP &lt;code&gt;QUIT&lt;/code&gt; command is issued automatically when the &lt;code&gt;with&lt;/code&gt; statement exits. E.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba7227180d23083c63b7cd70e4416628bfdae8f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#socket.socket.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; operation is also subject to the timeout setting, and in general it is recommended to call &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt; before calling &lt;a href=&quot;#socket.socket.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; or pass a timeout parameter to &lt;a href=&quot;#socket.create_connection&quot;&gt;&lt;code&gt;create_connection()&lt;/code&gt;&lt;/a&gt;. However, the system network stack may also return a connection timeout error of its own regardless of any Python socket timeout setting.</source>
          <target state="translated">的&lt;a href=&quot;#socket.socket.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;操作也受到超时设置，并且通常建议调用&lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt;调用之前&lt;a href=&quot;#socket.socket.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;或通过一个超时参数到&lt;a href=&quot;#socket.create_connection&quot;&gt; &lt;code&gt;create_connection()&lt;/code&gt; &lt;/a&gt;。但是，无论任何Python套接字超时设置如何，系统网络堆栈都可能会返回其自身的连接超时错误。</target>
        </trans-unit>
        <trans-unit id="1f34a3a52948310ee7b973bbd6b7593ee24a7e87" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#socket.socket.ioctl&quot;&gt;&lt;code&gt;ioctl()&lt;/code&gt;&lt;/a&gt; method is a limited interface to the WSAIoctl system interface. Please refer to the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms741621%28VS.85%29.aspx&quot;&gt;Win32 documentation&lt;/a&gt; for more information.</source>
          <target state="translated">所述&lt;a href=&quot;#socket.socket.ioctl&quot;&gt; &lt;code&gt;ioctl()&lt;/code&gt; &lt;/a&gt;方法是在有限的接口向的WSAIoctl系统接口。请参考&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms741621%28VS.85%29.aspx&quot;&gt;Win32文档&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="0c9a0bec90b943d5adc4cadb9125116e6af7f717" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt;&lt;code&gt;ForkingMixIn&lt;/code&gt;&lt;/a&gt; class is used in the same way, except that the server will spawn a new process for each request. Available only on POSIX platforms that support &lt;a href=&quot;os#os.fork&quot;&gt;&lt;code&gt;fork()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;#socketserver.ForkingMixIn&quot;&gt; &lt;code&gt;ForkingMixIn&lt;/code&gt; &lt;/a&gt;类以相同的方式使用的，所不同的是，服务器将生成一个新的过程为每个请求。仅在支持&lt;a href=&quot;os#os.fork&quot;&gt; &lt;code&gt;fork()&lt;/code&gt; 的&lt;/a&gt; POSIX平台上可用。</target>
        </trans-unit>
        <trans-unit id="b22e3b3c0b3d428c1075294cae2728e7d78d57b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt;&lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt;&lt;/a&gt; protocol configures the context for cert validation and hostname verification. &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is set to &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;check_hostname&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;. All other protocols create SSL contexts with insecure defaults.</source>
          <target state="translated">所述&lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt; &lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt; &lt;/a&gt;协议将配置证书验证和主机名验证上下文。&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; ,&lt;/a&gt;而&lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;check_hostname&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;True&lt;/code&gt; 。所有其他协议都会使用不安全的默认值创建SSL上下文。</target>
        </trans-unit>
        <trans-unit id="5470adc94cef770e82c8dc9da60579e42d5c3ef8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; object this SSL socket is tied to. If the SSL socket was created using the deprecated &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt; function (rather than &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt;), this is a custom context object created for this SSL socket.</source>
          <target state="translated">此SSL套接字绑定到的&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;对象。如果SSL套接字是使用不推荐使用的&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt;函数（而不是&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; &lt;/a&gt;）创建的，则这是为此SSL套接字创建的自定义上下文对象。</target>
        </trans-unit>
        <trans-unit id="a6167917237eb99295fe6afdef07d22ea214c720" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ssl.SSLSession&quot;&gt;&lt;code&gt;SSLSession&lt;/code&gt;&lt;/a&gt; for this SSL connection. The session is available for client and server side sockets after the TLS handshake has been performed. For client sockets the session can be set before &lt;a href=&quot;#ssl.SSLSocket.do_handshake&quot;&gt;&lt;code&gt;do_handshake()&lt;/code&gt;&lt;/a&gt; has been called to reuse a session.</source>
          <target state="translated">此SSL连接的&lt;a href=&quot;#ssl.SSLSession&quot;&gt; &lt;code&gt;SSLSession&lt;/code&gt; &lt;/a&gt;。执行TLS握手后，该会话可用于客户端和服务器端套接字。对于客户端套接字，可以在&lt;a href=&quot;#ssl.SSLSocket.do_handshake&quot;&gt; &lt;code&gt;do_handshake()&lt;/code&gt; &lt;/a&gt;重用会话之前设置会话。</target>
        </trans-unit>
        <trans-unit id="5bcd0b01f83837796f08fb415d94353728ad5dc5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ssl.SSLSocket.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLSocket.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; methods are the low-level methods that read and write unencrypted, application-level data and decrypt/encrypt it to encrypted, wire-level data. These methods require an active SSL connection, i.e. the handshake was completed and &lt;a href=&quot;#ssl.SSLSocket.unwrap&quot;&gt;&lt;code&gt;SSLSocket.unwrap()&lt;/code&gt;&lt;/a&gt; was not called.</source>
          <target state="translated">的&lt;a href=&quot;#ssl.SSLSocket.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ssl.SSLSocket.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;方法是读取和写入低电平的方法加密的，应用级数据和解密/加密它以加密的，线级数据。这些方法需要活动的SSL连接，即握手已完成，未调用&lt;a href=&quot;#ssl.SSLSocket.unwrap&quot;&gt; &lt;code&gt;SSLSocket.unwrap()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f53d2eee18de9c0c4875c339dfa8b9bce47a924" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#str.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method should be used only if you need to know the position of &lt;em&gt;sub&lt;/em&gt;. To check if &lt;em&gt;sub&lt;/em&gt; is a substring or not, use the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator:</source>
          <target state="translated">该&lt;a href=&quot;#str.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;方法应该，如果你需要知道的位置仅用于&lt;em&gt;子&lt;/em&gt;。要检查&lt;em&gt;sub&lt;/em&gt;是否是子字符串，请使用&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;运算符：</target>
        </trans-unit>
        <trans-unit id="2e6804cb45d81cb073dfbb227bb2d80217a17aab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#str.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method should be used only if you need to know the position of &lt;em&gt;sub&lt;/em&gt;. To check if &lt;em&gt;sub&lt;/em&gt; is a substring or not, use the &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c06bca828d67bdfb43cc865a64d21c1502ae10" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; class has the following public methods:</source>
          <target state="translated">该&lt;a href=&quot;#string.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;类有以下公共方法：</target>
        </trans-unit>
        <trans-unit id="b720e60f05b2d504c18bd6025532017adbb42ca5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#subprocess.STARTUPINFO&quot;&gt;&lt;code&gt;STARTUPINFO&lt;/code&gt;&lt;/a&gt; class and following constants are only available on Windows.</source>
          <target state="translated">该&lt;a href=&quot;#subprocess.STARTUPINFO&quot;&gt; &lt;code&gt;STARTUPINFO&lt;/code&gt; &lt;/a&gt;类及以下常量仅适用于Windows。</target>
        </trans-unit>
        <trans-unit id="d55c54994cff722fca955da59c89d7d333ea0e56" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; function was added in Python 3.5; if you need to retain compatibility with older versions, see the &lt;a href=&quot;#call-function-trio&quot;&gt;Older high-level API&lt;/a&gt; section.</source>
          <target state="translated">的&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;在Python 3.5的溶液中加入功能; 如果您需要保留与旧版本的兼容性，请参见&amp;ldquo; &lt;a href=&quot;#call-function-trio&quot;&gt;旧版高级API&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="30fbbed09a97b3cd59b7f8953724c13a4c63dd4c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#sys.unraisablehook&quot;&gt;&lt;code&gt;sys.unraisablehook()&lt;/code&gt;&lt;/a&gt; function handles unraisable exceptions and the &lt;a href=&quot;threading#threading.excepthook&quot;&gt;&lt;code&gt;threading.excepthook()&lt;/code&gt;&lt;/a&gt; function handles exception raised by &lt;a href=&quot;threading#threading.Thread.run&quot;&gt;&lt;code&gt;threading.Thread.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#sys.unraisablehook&quot;&gt; &lt;code&gt;sys.unraisablehook()&lt;/code&gt; &lt;/a&gt;函数处理unraisable异常和&lt;a href=&quot;threading#threading.excepthook&quot;&gt; &lt;code&gt;threading.excepthook()&lt;/code&gt; &lt;/a&gt;通过上调函数处理异常&lt;a href=&quot;threading#threading.Thread.run&quot;&gt; &lt;code&gt;threading.Thread.run()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3a0057fe0fb71f61b6c145a72bca3f56f585507" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; object provides an interface to a tar archive. A tar archive is a sequence of blocks. An archive member (a stored file) is made up of a header block followed by data blocks. It is possible to store a file in a tar archive several times. Each archive member is represented by a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object, see &lt;a href=&quot;#tarinfo-objects&quot;&gt;TarInfo Objects&lt;/a&gt; for details.</source>
          <target state="translated">在&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;对象提供给tar归档文件的接口。tar存档是一系列块。存档成员（存储的文件）由标题块和数据块组成。可以将文件多次存储在tar归档中。每个存档成员由一个&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;对象表示，有关详细信息，请参见&lt;a href=&quot;#tarinfo-objects&quot;&gt;TarInfo对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="97a64804b61284aa185a7e81cd4b409ab490a7f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt;&lt;code&gt;extract()&lt;/code&gt;&lt;/a&gt; method does not take care of several extraction issues. In most cases you should consider using the &lt;a href=&quot;#tarfile.TarFile.extractall&quot;&gt;&lt;code&gt;extractall()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该&lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt; &lt;code&gt;extract()&lt;/code&gt; &lt;/a&gt;方法没有考虑的几个问题提取照顾。在大多数情况下，您应该考虑使用&lt;a href=&quot;#tarfile.TarFile.extractall&quot;&gt; &lt;code&gt;extractall()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="9cfe3269d37c7bc235b57f8a026ae88957a0f7f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; constructor accepts a number of optional keyword arguments. Each keyword argument corresponds to an instance attribute, so for example</source>
          <target state="translated">该&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;构造函数接受多种可选关键字参数。每个关键字参数都对应一个实例属性，例如</target>
        </trans-unit>
        <trans-unit id="7703bb87af59c734834b856195ac87e519ac6ee2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt; instance attributes (and keyword arguments to the constructor) are as follows:</source>
          <target state="translated">该&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;是实例属性（和关键字参数构造函数），如下所示：</target>
        </trans-unit>
        <trans-unit id="33361bdf206a24520f829bae7a81a1dc0d37aa21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; method wakes up one of the threads waiting for the condition variable, if any are waiting. The &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; method wakes up all threads waiting for the condition variable.</source>
          <target state="translated">的&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;方法唤醒等待条件变量的线程中的一个，如果有的话正在等待。所述&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;方法唤醒等待条件变量的所有线程。</target>
        </trans-unit>
        <trans-unit id="70fa13c482f98185f2eb2a33d30687c5053e2d32" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; class represents an activity that is run in a separate thread of control. There are two ways to specify the activity: by passing a callable object to the constructor, or by overriding the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method in a subclass. No other methods (except for the constructor) should be overridden in a subclass. In other words, &lt;em&gt;only&lt;/em&gt; override the &lt;code&gt;__init__()&lt;/code&gt; and &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; methods of this class.</source>
          <target state="translated">该&lt;a href=&quot;#threading.Thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt;类表示在单独的控制线程中运行的活动。有两种指定活动的方法：通过将可调用对象传递给构造函数，或通过重写子类中的&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法。子类中不应覆盖其他任何方法（构造函数除外）。换句话说，&lt;em&gt;仅&lt;/em&gt;重写此类的 &lt;code&gt;__init__()&lt;/code&gt; 和&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="1c3b2617bcf43cb43eb39a08c7265bedcf6123a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tkinter.Tcl&quot;&gt;&lt;code&gt;Tcl()&lt;/code&gt;&lt;/a&gt; function is a factory function which creates an object much like that created by the &lt;a href=&quot;#tkinter.Tk&quot;&gt;&lt;code&gt;Tk&lt;/code&gt;&lt;/a&gt; class, except that it does not initialize the Tk subsystem. This is most often useful when driving the Tcl interpreter in an environment where one doesn&amp;rsquo;t want to create extraneous toplevel windows, or where one cannot (such as Unix/Linux systems without an X server). An object created by the &lt;a href=&quot;#tkinter.Tcl&quot;&gt;&lt;code&gt;Tcl()&lt;/code&gt;&lt;/a&gt; object can have a Toplevel window created (and the Tk subsystem initialized) by calling its &lt;code&gt;loadtk()&lt;/code&gt; method.</source>
          <target state="translated">所述&lt;a href=&quot;#tkinter.Tcl&quot;&gt; &lt;code&gt;Tcl()&lt;/code&gt; &lt;/a&gt;函数是一个工厂函数创建一个对象很像由所创建的&lt;a href=&quot;#tkinter.Tk&quot;&gt; &lt;code&gt;Tk&lt;/code&gt; 的&lt;/a&gt;类，不同之处在于它不初始化Tk的子系统。在不想创建多余的顶层窗口或不能创建多余的顶层窗口的环境（例如，没有X服务器的Unix / Linux系统）中驱动Tcl解释器时，这通常非常有用。通过调用&lt;a href=&quot;#tkinter.Tcl&quot;&gt; &lt;code&gt;Tcl()&lt;/code&gt; &lt;/a&gt;对象创建的对象的 &lt;code&gt;loadtk()&lt;/code&gt; 方法，可以创建一个Toplevel窗口（并初始化Tk子系统）。</target>
        </trans-unit>
        <trans-unit id="a2c177dddb81e041c2f1178faa5fcee9f2675fe1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tkinter.Tk&quot;&gt;&lt;code&gt;Tk&lt;/code&gt;&lt;/a&gt; class is instantiated without arguments. This creates a toplevel widget of Tk which usually is the main window of an application. Each instance has its own associated Tcl interpreter.</source>
          <target state="translated">该&lt;a href=&quot;#tkinter.Tk&quot;&gt; &lt;code&gt;Tk&lt;/code&gt; 的&lt;/a&gt;类实例化没有参数。这将创建Tk的顶级窗口小部件，该窗口小部件通常是应用程序的主窗口。每个实例都有其自己关联的Tcl解释器。</target>
        </trans-unit>
        <trans-unit id="869c3855e73e73353ff5dfa55f6cc880f2540f3a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tkinter.Tk&quot;&gt;&lt;code&gt;Tk&lt;/code&gt;&lt;/a&gt; class is meant to be instantiated only once in an application. Application programmers need not instantiate one explicitly, the system creates one whenever any of the other classes are instantiated.</source>
          <target state="translated">该&lt;a href=&quot;#tkinter.Tk&quot;&gt; &lt;code&gt;Tk&lt;/code&gt; 的&lt;/a&gt;类，就是要在应用程序中只有一次实例化。应用程序程序员无需显式实例化一个实例，只要实例化任何其他类，系统就会创建一个实例。</target>
        </trans-unit>
        <trans-unit id="185ef10d1c61a81493db152e57ead1ecf0fb6291" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tkinter.font.Font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; class represents a named font. &lt;em&gt;Font&lt;/em&gt; instances are given unique names and can be specified by their family, size, and style configuration. Named fonts are Tk&amp;rsquo;s method of creating and identifying fonts as a single object, rather than specifying a font by its attributes with each occurrence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3baf0bee1f8feca4f4af014435d6ef95a8f5af8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tkinter.tix.DirSelectBox&quot;&gt;&lt;code&gt;DirSelectBox&lt;/code&gt;&lt;/a&gt; is similar to the standard Motif(TM) directory-selection box. It is generally used for the user to choose a directory. DirSelectBox stores the directories mostly recently selected into a ComboBox widget so that they can be quickly selected again.</source>
          <target state="translated">所述&lt;a href=&quot;#tkinter.tix.DirSelectBox&quot;&gt; &lt;code&gt;DirSelectBox&lt;/code&gt; &lt;/a&gt;是类似于标准基序（TM）目录选择框。通常用于用户选择目录。DirSelectBox将最近选择的目录存储到ComboBox小部件中，以便可以再次快速选择它们。</target>
        </trans-unit>
        <trans-unit id="427de85d6d015476411261c28cb3757d1cc9681b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tkinter.ttk.Treeview.focus&quot;&gt;&lt;code&gt;Treeview.focus()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tkinter.ttk.Treeview.selection&quot;&gt;&lt;code&gt;Treeview.selection()&lt;/code&gt;&lt;/a&gt; methods can be used to determine the affected item or items.</source>
          <target state="translated">所述&lt;a href=&quot;#tkinter.ttk.Treeview.focus&quot;&gt; &lt;code&gt;Treeview.focus()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#tkinter.ttk.Treeview.selection&quot;&gt; &lt;code&gt;Treeview.selection()&lt;/code&gt; &lt;/a&gt;方法可用于确定受影响的一个或多个项目。</target>
        </trans-unit>
        <trans-unit id="dd9a1fc943e550366e74685fe1223f3b26967c03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tokenize.detect_encoding&quot;&gt;&lt;code&gt;detect_encoding()&lt;/code&gt;&lt;/a&gt; function is used to detect the encoding that should be used to decode a Python source file. It requires one argument, readline, in the same way as the &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt; generator.</source>
          <target state="translated">所述&lt;a href=&quot;#tokenize.detect_encoding&quot;&gt; &lt;code&gt;detect_encoding()&lt;/code&gt; &lt;/a&gt;函数是用来检测应用于解码一个Python源文件的编码。它需要一个参数readline，其方式与&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt;生成器相同。</target>
        </trans-unit>
        <trans-unit id="64839bca3d7e3ea9f319d47b623da23adf764dc6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt; generator requires one argument, &lt;em&gt;readline&lt;/em&gt;, which must be a callable object which provides the same interface as the &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;io.IOBase.readline()&lt;/code&gt;&lt;/a&gt; method of file objects. Each call to the function should return one line of input as bytes.</source>
          <target state="translated">所述&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt;发生器需要一个参数，&lt;em&gt;readline的&lt;/em&gt;，它必须是一个可调用的对象，它提供相同的接口作为&lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;io.IOBase.readline()&lt;/code&gt; &lt;/a&gt;文件对象的方法。每次对函数的调用都应以字节为单位返回一行输入。</target>
        </trans-unit>
        <trans-unit id="19a1fb9e075526300ca51090f919c11430914bb8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt;&lt;code&gt;Snapshot.traces&lt;/code&gt;&lt;/a&gt; attribute is a sequence of &lt;a href=&quot;#tracemalloc.Trace&quot;&gt;&lt;code&gt;Trace&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">所述&lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt; &lt;code&gt;Snapshot.traces&lt;/code&gt; &lt;/a&gt;属性是序列&lt;a href=&quot;#tracemalloc.Trace&quot;&gt; &lt;code&gt;Trace&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="332c59a71d42e936b120ee2869f6034aae7ee7c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tracemalloc.Trace.traceback&quot;&gt;&lt;code&gt;Trace.traceback&lt;/code&gt;&lt;/a&gt; attribute is an instance of &lt;a href=&quot;#tracemalloc.Traceback&quot;&gt;&lt;code&gt;Traceback&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">该&lt;a href=&quot;#tracemalloc.Trace.traceback&quot;&gt; &lt;code&gt;Trace.traceback&lt;/code&gt; &lt;/a&gt;属性的一个实例&lt;a href=&quot;#tracemalloc.Traceback&quot;&gt; &lt;code&gt;Traceback&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="9a6bad6d294ac9422d316c91034858a33f66eaed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tracemalloc.Traceback&quot;&gt;&lt;code&gt;Traceback&lt;/code&gt;&lt;/a&gt; class is a sequence of &lt;a href=&quot;#tracemalloc.Frame&quot;&gt;&lt;code&gt;Frame&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">该&lt;a href=&quot;#tracemalloc.Traceback&quot;&gt; &lt;code&gt;Traceback&lt;/code&gt; &lt;/a&gt;类的序列&lt;a href=&quot;#tracemalloc.Frame&quot;&gt; &lt;code&gt;Frame&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="f3406051299b4b3da8e9e48c0ce7606278d24f47" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt;&lt;code&gt;take_snapshot()&lt;/code&gt;&lt;/a&gt; function creates a snapshot instance.</source>
          <target state="translated">该&lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt; &lt;code&gt;take_snapshot()&lt;/code&gt; &lt;/a&gt;函数创建一个快照实例。</target>
        </trans-unit>
        <trans-unit id="84c2a6d4ca49213209ef75d3df2f3a2fd2b30c47" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#transports&quot;&gt;Transports&lt;/a&gt; section documents asyncio &lt;a href=&quot;#asyncio.BaseTransport&quot;&gt;&lt;code&gt;BaseTransport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.ReadTransport&quot;&gt;&lt;code&gt;ReadTransport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.WriteTransport&quot;&gt;&lt;code&gt;WriteTransport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.Transport&quot;&gt;&lt;code&gt;Transport&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.DatagramTransport&quot;&gt;&lt;code&gt;DatagramTransport&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#asyncio.SubprocessTransport&quot;&gt;&lt;code&gt;SubprocessTransport&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">在&lt;a href=&quot;#transports&quot;&gt;交通服务的&lt;/a&gt;部分文件ASYNCIO &lt;a href=&quot;#asyncio.BaseTransport&quot;&gt; &lt;code&gt;BaseTransport&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#asyncio.ReadTransport&quot;&gt; &lt;code&gt;ReadTransport&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#asyncio.WriteTransport&quot;&gt; &lt;code&gt;WriteTransport&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#asyncio.Transport&quot;&gt; &lt;code&gt;Transport&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#asyncio.DatagramTransport&quot;&gt; &lt;code&gt;DatagramTransport&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.SubprocessTransport&quot;&gt; &lt;code&gt;SubprocessTransport&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="45e6a04779a2aac298a7345925b878b31f2605be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#turtle.Shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; class is used internally by the &lt;a href=&quot;#turtle.register_shape&quot;&gt;&lt;code&gt;register_shape()&lt;/code&gt;&lt;/a&gt; method in different ways. The application programmer has to deal with the Shape class &lt;em&gt;only&lt;/em&gt; when using compound shapes like shown above!</source>
          <target state="translated">的&lt;a href=&quot;#turtle.Shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;类是由内部使用&lt;a href=&quot;#turtle.register_shape&quot;&gt; &lt;code&gt;register_shape()&lt;/code&gt; &lt;/a&gt;以不同的方式方法。&lt;em&gt;仅&lt;/em&gt;当使用如上所示的复合形状时，应用程序程序员才必须处理Shape类！</target>
        </trans-unit>
        <trans-unit id="405810328337c79336080d4bbff10bf81c77b04f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#turtle.TurtleScreen&quot;&gt;&lt;code&gt;TurtleScreen&lt;/code&gt;&lt;/a&gt; class defines graphics windows as a playground for the drawing turtles. Its constructor needs a &lt;code&gt;tkinter.Canvas&lt;/code&gt; or a &lt;a href=&quot;#turtle.ScrolledCanvas&quot;&gt;&lt;code&gt;ScrolledCanvas&lt;/code&gt;&lt;/a&gt; as argument. It should be used when &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; is used as part of some application.</source>
          <target state="translated">所述&lt;a href=&quot;#turtle.TurtleScreen&quot;&gt; &lt;code&gt;TurtleScreen&lt;/code&gt; &lt;/a&gt;类定义图形窗口作为用于绘制海龟游乐场。其构造函数需要使用 &lt;code&gt;tkinter.Canvas&lt;/code&gt; 或&lt;a href=&quot;#turtle.ScrolledCanvas&quot;&gt; &lt;code&gt;ScrolledCanvas&lt;/code&gt; &lt;/a&gt;作为参数。当&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;用作某些应用程序的一部分时，应使用它。</target>
        </trans-unit>
        <trans-unit id="5f7817a294561249109e0213cb886fb9a394f719" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt; base class defines &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__class_getitem__&quot;&gt;&lt;code&gt;__class_getitem__()&lt;/code&gt;&lt;/a&gt; so that &lt;code&gt;LoggedVar[t]&lt;/code&gt; is valid as a type:</source>
          <target state="translated">该&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt;基类定义&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__class_getitem__&quot;&gt; &lt;code&gt;__class_getitem__()&lt;/code&gt; &lt;/a&gt;以便 &lt;code&gt;LoggedVar[t]&lt;/code&gt; 是作为一种类型的有效的：</target>
        </trans-unit>
        <trans-unit id="5acabbc489b13352162071203b86465353e12f58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt; base class defines &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__class_getitem__&quot;&gt;&lt;code&gt;__class_getitem__()&lt;/code&gt;&lt;/a&gt; so that &lt;code&gt;LoggedVar[t]&lt;/code&gt; is valid as a type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbc7c7538faa9b8b179a5ae34651133e53b396a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; class provides several assert methods to check for and report failures. The following table lists the most commonly used methods (see the tables below for more assert methods):</source>
          <target state="translated">该&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;类提供了一些断言方法来检查并报告故障。下表列出了最常用的方法（有关更多断言方法，请参见下表）：</target>
        </trans-unit>
        <trans-unit id="357849b93faca6354c3d4ac37300068296f06948" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt; method dispatches the equality check for objects of the same type to different type-specific methods. These methods are already implemented for most of the built-in types, but it&amp;rsquo;s also possible to register new methods using &lt;a href=&quot;#unittest.TestCase.addTypeEqualityFunc&quot;&gt;&lt;code&gt;addTypeEqualityFunc()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">的&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;方法调度用于相同类型不同的类型，具体的方法的对象相等性检查。这些方法已经为大多数内置类型实现，但是也可以使用&lt;a href=&quot;#unittest.TestCase.addTypeEqualityFunc&quot;&gt; &lt;code&gt;addTypeEqualityFunc()&lt;/code&gt; &lt;/a&gt;注册新方法：</target>
        </trans-unit>
        <trans-unit id="22637af39afc56e8ff037ad10c9f11d9befcbb2f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; methods allow you to define instructions that will be executed before and after each test method. They are covered in more detail in the section &lt;a href=&quot;#organizing-tests&quot;&gt;Organizing test code&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;方法可以定义将在每个测试方法之前和之后执行的指令。在&lt;a href=&quot;#organizing-tests&quot;&gt;组织测试代码&lt;/a&gt;一节中将更详细地介绍它们。</target>
        </trans-unit>
        <trans-unit id="dc1c6cadd0b004eb6997ad3ea10089824eac359a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; class is used to create test suites from classes and modules. Normally, there is no need to create an instance of this class; the &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module provides an instance that can be shared as &lt;a href=&quot;#unittest.defaultTestLoader&quot;&gt;&lt;code&gt;unittest.defaultTestLoader&lt;/code&gt;&lt;/a&gt;. Using a subclass or instance, however, allows customization of some configurable properties.</source>
          <target state="translated">所述&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; &lt;/a&gt;类用于创建从类和模块的测试套件。通常，不需要创建此类的实例。所述&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;模块提供可作为被共享的实例&lt;a href=&quot;#unittest.defaultTestLoader&quot;&gt; &lt;code&gt;unittest.defaultTestLoader&lt;/code&gt; &lt;/a&gt;。但是，使用子类或实例可以自定义一些可配置的属性。</target>
        </trans-unit>
        <trans-unit id="8501dc081aeb30c81ae92c0d0e04e0c41cb84669" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/a&gt; object is a pre-created sentinel (actually &lt;code&gt;sentinel.DEFAULT&lt;/code&gt;). It can be used by &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; functions to indicate that the normal return value should be used.</source>
          <target state="translated">所述&lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt; &lt;code&gt;DEFAULT&lt;/code&gt; &lt;/a&gt;对象是预先创建的前哨（实际上 &lt;code&gt;sentinel.DEFAULT&lt;/code&gt; ）。&lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt; &lt;code&gt;side_effect&lt;/code&gt; &lt;/a&gt;函数可以使用它来指示应该使用正常的返回值。</target>
        </trans-unit>
        <trans-unit id="bdcfd4dbf05f3ea1376b30902339d7b1d03f8370" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; classes have support for mocking magic methods. See &lt;a href=&quot;#magic-methods&quot;&gt;magic methods&lt;/a&gt; for the full details.</source>
          <target state="translated">该&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;类有嘲讽魔术方法支持。有关详细信息，请参见&lt;a href=&quot;#magic-methods&quot;&gt;魔术方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e26f823852082cdcb5967e9b535492e0c1c671b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; decorator / context manager makes it easy to mock classes or objects in a module under test. The object you specify will be replaced with a mock (or other object) during the test and restored when the test ends:</source>
          <target state="translated">使用&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;装饰器/上下文管理器可以轻松模拟被测模块中的类或对象。在测试期间，您指定的对象将被模拟（或其他对象）替换，并在测试结束时恢复：</target>
        </trans-unit>
        <trans-unit id="80a80259bfce823ad699c29717dead32645dea68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; decorators makes it easy to temporarily replace classes in a particular module with a &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; object. By default &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; will create a &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; for you. You can specify an alternative class of &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; using the &lt;em&gt;new_callable&lt;/em&gt; argument to &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过使用&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;装饰器，可以轻松地用&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;对象临时替换特定模块中的类。默认情况下，&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;将为您创建一个&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;。您可以使用&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;new_callable&lt;/em&gt;参数来指定&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;的替代类。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24ec41b5639b3ee7a1f0da7eb3430610465199f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt;&lt;code&gt;FancyURLopener&lt;/code&gt;&lt;/a&gt; class offers one additional method that should be overloaded to provide the appropriate behavior:</source>
          <target state="translated">该&lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt; &lt;code&gt;FancyURLopener&lt;/code&gt; &lt;/a&gt;类提供了一个额外的方法应该被重载以提供适当的行为：</target>
        </trans-unit>
        <trans-unit id="19fc1b684f8e8cb021e12bf33c0c383c6acc7662" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; class opens URLs via &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;s chained together. It manages the chaining of handlers, and recovery from errors.</source>
          <target state="translated">该&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;类通过打开网址&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;小号链接在一起。它管理处理程序的链接以及从错误中恢复。</target>
        </trans-unit>
        <trans-unit id="add80da97c67b3a9dd408516d121f455497e4bfb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt; will have a method &lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; for every &lt;em&gt;protocol&lt;/em&gt; which has a proxy in the &lt;em&gt;proxies&lt;/em&gt; dictionary given in the constructor. The method will modify requests to go through the proxy, by calling &lt;code&gt;request.set_proxy()&lt;/code&gt;, and call the next handler in the chain to actually execute the protocol.</source>
          <target state="translated">该&lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt; &lt;code&gt;ProxyHandler&lt;/code&gt; &lt;/a&gt;将有一个方法 &lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; 为每个&lt;em&gt;协议&lt;/em&gt;具有在一个代理&lt;em&gt;的代理&lt;/em&gt;在构造字典给出。该方法将通过调用 &lt;code&gt;request.set_proxy()&lt;/code&gt; 修改请求以通过代理，并调用链中的下一个处理程序以实际执行协议。</target>
        </trans-unit>
        <trans-unit id="cdd99a9142cb9c6c14e02abc9d69ca1feaaea19d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt; functions can cause arbitrarily long delays while waiting for a network connection to be set up. This means that it is difficult to build an interactive Web client using these functions without using threads.</source>
          <target state="translated">所述&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; &lt;/a&gt;功能可能会导致任意长时间的延迟，而等待网络连接被建立。这意味着不使用线程就很难使用这些功能构建交互式Web客户端。</target>
        </trans-unit>
        <trans-unit id="ff68c745bc211e58099a0292f41586aed45a05a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#venv.EnvBuilder&quot;&gt;&lt;code&gt;EnvBuilder&lt;/code&gt;&lt;/a&gt; class accepts the following keyword arguments on instantiation:</source>
          <target state="translated">该&lt;a href=&quot;#venv.EnvBuilder&quot;&gt; &lt;code&gt;EnvBuilder&lt;/code&gt; &lt;/a&gt;类接受的实例以下关键字参数：</target>
        </trans-unit>
        <trans-unit id="59d615e0d009ca2a9c92a3001e2f4beae3b2a481" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#warnings.catch_warnings&quot;&gt;&lt;code&gt;catch_warnings&lt;/code&gt;&lt;/a&gt; manager works by replacing and then later restoring the module&amp;rsquo;s &lt;a href=&quot;#warnings.showwarning&quot;&gt;&lt;code&gt;showwarning()&lt;/code&gt;&lt;/a&gt; function and internal list of filter specifications. This means the context manager is modifying global state and therefore is not thread-safe.</source>
          <target state="translated">该&lt;a href=&quot;#warnings.catch_warnings&quot;&gt; &lt;code&gt;catch_warnings&lt;/code&gt; &lt;/a&gt;经理的工作方式代替，再后来恢复模块的&lt;a href=&quot;#warnings.showwarning&quot;&gt; &lt;code&gt;showwarning()&lt;/code&gt; &lt;/a&gt;函数和过滤器规范的内部列表。这意味着上下文管理器正在修改全局状态，因此不是线程安全的。</target>
        </trans-unit>
        <trans-unit id="5a863a8afee1888f928b0e90399ac841fb612398" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#wave.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function may be used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When the &lt;code&gt;with&lt;/code&gt; block completes, the &lt;a href=&quot;#wave.Wave_read.close&quot;&gt;&lt;code&gt;Wave_read.close()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#wave.Wave_write.close&quot;&gt;&lt;code&gt;Wave_write.close()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">在&lt;a href=&quot;#wave.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数可以被用在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;声明。当 &lt;code&gt;with&lt;/code&gt; 块完成时，将&lt;a href=&quot;#wave.Wave_read.close&quot;&gt; &lt;code&gt;Wave_read.close()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#wave.Wave_write.close&quot;&gt; &lt;code&gt;Wave_write.close()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="4231e00b1a3ef00669cad4a00d12b16f4c773875" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#wave.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function may be used in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When the &lt;code&gt;with&lt;/code&gt; block completes, the &lt;a href=&quot;#wave.Wave_read.close&quot;&gt;&lt;code&gt;Wave_read.close()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#wave.Wave_write.close&quot;&gt;&lt;code&gt;Wave_write.close()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ee02f8ac6deb5da7b63ba5cd9b059abe2fc64c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#winreg.DeleteKeyEx&quot;&gt;&lt;code&gt;DeleteKeyEx()&lt;/code&gt;&lt;/a&gt; function is implemented with the RegDeleteKeyEx Windows API function, which is specific to 64-bit versions of Windows. See the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724847%28VS.85%29.aspx&quot;&gt;RegDeleteKeyEx documentation&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;#winreg.DeleteKeyEx&quot;&gt; &lt;code&gt;DeleteKeyEx()&lt;/code&gt; &lt;/a&gt;函数与RegDeleteKeyEx Windows API函数，这是特定于Windows的64位版本来实现。请参阅&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms724847%28VS.85%29.aspx&quot;&gt;RegDeleteKeyEx文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="399aa159694ce19221f03cc60c1a299edffa9d06" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xdrlib.Unpacker&quot;&gt;&lt;code&gt;Unpacker&lt;/code&gt;&lt;/a&gt; class offers the following methods:</source>
          <target state="translated">该&lt;a href=&quot;#xdrlib.Unpacker&quot;&gt; &lt;code&gt;Unpacker&lt;/code&gt; &lt;/a&gt;类提供了以下方法：</target>
        </trans-unit>
        <trans-unit id="76cf68ae7957b35e83f23ece2b3309062cdda7f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xml.dom.minidom.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; function can take either a filename or an open file object.</source>
          <target state="translated">的&lt;a href=&quot;#xml.dom.minidom.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;函数可以取任何一个文件名或一个打开的文件对象。</target>
        </trans-unit>
        <trans-unit id="42363806b6749b6e566d7bb04cf5b64ac5fd77fa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xml.etree.ElementTree.SubElement&quot;&gt;&lt;code&gt;SubElement()&lt;/code&gt;&lt;/a&gt; function also provides a convenient way to create new sub-elements for a given element:</source>
          <target state="translated">的&lt;a href=&quot;#xml.etree.ElementTree.SubElement&quot;&gt; &lt;code&gt;SubElement()&lt;/code&gt; &lt;/a&gt;函数还提供了一个方便的方法来创建对于给定的元件新的子元素：</target>
        </trans-unit>
        <trans-unit id="f5c03be79e189e48f1592d5b76ef8723131ebf44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xml.sax.SAXException&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; exception class supports the following methods:</source>
          <target state="translated">在&lt;a href=&quot;#xml.sax.SAXException&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; 中&lt;/a&gt;的异常类支持下列方法：</target>
        </trans-unit>
        <trans-unit id="b7f09a811b6f16f6e6b41e1749d0111bd5475969" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; interface supports the following methods:</source>
          <target state="translated">该&lt;a href=&quot;#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; 的&lt;/a&gt;接口支持以下方法：</target>
        </trans-unit>
        <trans-unit id="71db7881f16ee841e40c7459de9cb399a3551b6d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xmlrpc.client.MultiCall&quot;&gt;&lt;code&gt;MultiCall&lt;/code&gt;&lt;/a&gt; object provides a way to encapsulate multiple calls to a remote server into a single request &lt;a href=&quot;#id6&quot; id=&quot;id5&quot;&gt;1&lt;/a&gt;.</source>
          <target state="translated">的&lt;a href=&quot;#xmlrpc.client.MultiCall&quot;&gt; &lt;code&gt;MultiCall&lt;/code&gt; &lt;/a&gt;对象提供了一种封装多个呼叫到远程服务器到单个请求&lt;a href=&quot;#id6&quot; id=&quot;id5&quot;&gt;1&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="622abcb4c5e3f0d1c6a6c9a81ff5668467677198" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt;&lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt;&lt;/a&gt; class can be used to handle XML-RPC requests sent to Python CGI scripts.</source>
          <target state="translated">该&lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt; &lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt; &lt;/a&gt;类可用于发送到Python的CGI脚本处理XML-RPC请求。</target>
        </trans-unit>
        <trans-unit id="95f80fe9bc84ab8e564acf727e1d0660cdf38213" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xmlrpc.server.DocCGIXMLRPCRequestHandler&quot;&gt;&lt;code&gt;DocCGIXMLRPCRequestHandler&lt;/code&gt;&lt;/a&gt; class is derived from &lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt;&lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt;&lt;/a&gt; and provides a means of creating self-documenting, XML-RPC CGI scripts. HTTP POST requests are handled as XML-RPC method calls. HTTP GET requests are handled by generating pydoc-style HTML documentation. This allows a server to provide its own web-based documentation.</source>
          <target state="translated">所述&lt;a href=&quot;#xmlrpc.server.DocCGIXMLRPCRequestHandler&quot;&gt; &lt;code&gt;DocCGIXMLRPCRequestHandler&lt;/code&gt; &lt;/a&gt;类源自&lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler&quot;&gt; &lt;code&gt;CGIXMLRPCRequestHandler&lt;/code&gt; &lt;/a&gt;并提供创建自文档，XML-RPC CGI脚本的装置。HTTP POST请求作为XML-RPC方法调用处理。通过生成pydoc样式的HTML文档来处理HTTP GET请求。这允许服务器提供其自己的基于Web的文档。</target>
        </trans-unit>
        <trans-unit id="12c0042da7248e1a56ffe3ff0e18f1d7d371d991" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xmlrpc.server.DocXMLRPCServer&quot;&gt;&lt;code&gt;DocXMLRPCServer&lt;/code&gt;&lt;/a&gt; class is derived from &lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt;&lt;code&gt;SimpleXMLRPCServer&lt;/code&gt;&lt;/a&gt; and provides a means of creating self-documenting, stand alone XML-RPC servers. HTTP POST requests are handled as XML-RPC method calls. HTTP GET requests are handled by generating pydoc-style HTML documentation. This allows a server to provide its own web-based documentation.</source>
          <target state="translated">该&lt;a href=&quot;#xmlrpc.server.DocXMLRPCServer&quot;&gt; &lt;code&gt;DocXMLRPCServer&lt;/code&gt; &lt;/a&gt;类源自&lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt; &lt;code&gt;SimpleXMLRPCServer&lt;/code&gt; &lt;/a&gt;并提供创建自我记录的手段，独立的XML-RPC服务器。HTTP POST请求作为XML-RPC方法调用处理。通过生成pydoc样式的HTML文档来处理HTTP GET请求。这允许服务器提供其自己的基于Web的文档。</target>
        </trans-unit>
        <trans-unit id="17468b965845f5f1ed57aaffe567cc32c6433ece" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt;&lt;code&gt;SimpleXMLRPCServer&lt;/code&gt;&lt;/a&gt; class is based on &lt;a href=&quot;socketserver#socketserver.TCPServer&quot;&gt;&lt;code&gt;socketserver.TCPServer&lt;/code&gt;&lt;/a&gt; and provides a means of creating simple, stand alone XML-RPC servers.</source>
          <target state="translated">该&lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer&quot;&gt; &lt;code&gt;SimpleXMLRPCServer&lt;/code&gt; &lt;/a&gt;类是基于&lt;a href=&quot;socketserver#socketserver.TCPServer&quot;&gt; &lt;code&gt;socketserver.TCPServer&lt;/code&gt; &lt;/a&gt;并提供创建简单的手段，独立的XML-RPC服务器。</target>
        </trans-unit>
        <trans-unit id="5346c90ac636426e0f2dec193ef68d35f72083a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#zipfile.PyZipFile&quot;&gt;&lt;code&gt;PyZipFile&lt;/code&gt;&lt;/a&gt; constructor takes the same parameters as the &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; constructor, and one additional parameter, &lt;em&gt;optimize&lt;/em&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;#zipfile.PyZipFile&quot;&gt; &lt;code&gt;PyZipFile&lt;/code&gt; &lt;/a&gt;构造函数将相同的参数&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;构造，和一个附加参数，&lt;em&gt;优化&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="48674c8ee4e2fea87426b46d821d737e70e4528d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#zipfile.PyZipFile.writepy&quot;&gt;&lt;code&gt;writepy()&lt;/code&gt;&lt;/a&gt; method makes archives with file names like this:</source>
          <target state="translated">该&lt;a href=&quot;#zipfile.PyZipFile.writepy&quot;&gt; &lt;code&gt;writepy()&lt;/code&gt; &lt;/a&gt;方法，使档案，像这样的文件名：</target>
        </trans-unit>
        <trans-unit id="ed921ba78ac31d3ba4a15509e53132e71f4cceb4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#zipfile.ZipFile.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt;&lt;code&gt;extract()&lt;/code&gt;&lt;/a&gt; methods can take a filename or a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object. You will appreciate this when trying to read a ZIP file that contains members with duplicate names.</source>
          <target state="translated">在&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#zipfile.ZipFile.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt; &lt;code&gt;extract()&lt;/code&gt; &lt;/a&gt;方法可利用一个文件名或一个&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt;对象。当您尝试读取包含名称重复的成员的ZIP文件时，您将不胜感激。</target>
        </trans-unit>
        <trans-unit id="385ef4a7dae3b567bb461e659f8acf4bb71f699a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#zipimport.zipimporter.archive&quot;&gt;&lt;code&gt;archive&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#zipimport.zipimporter.prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; attributes, when combined with a slash, equal the original &lt;em&gt;archivepath&lt;/em&gt; argument given to the &lt;a href=&quot;#zipimport.zipimporter&quot;&gt;&lt;code&gt;zipimporter&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">当与斜杠结合使用时，&lt;a href=&quot;#zipimport.zipimporter.archive&quot;&gt; &lt;code&gt;archive&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#zipimport.zipimporter.prefix&quot;&gt; &lt;code&gt;prefix&lt;/code&gt; &lt;/a&gt;属性等于赋予&lt;a href=&quot;#zipimport.zipimporter&quot;&gt; &lt;code&gt;zipimporter&lt;/code&gt; &lt;/a&gt;构造函数的原始&lt;em&gt;archivepath&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="5ab66251f09f4901c71bf052d319006ae2f26849" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; module supports efficient storage of basic data types like 32-bit integers and IEEE754 double-precision floating values.</source>
          <target state="translated">所述&lt;a href=&quot;array#module-array&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;模块支持基本数据类型，如32位整数和IEEE754双精度浮点值的高效存储。</target>
        </trans-unit>
        <trans-unit id="7fab3709a4de46037f0d17afafd44aa66a4e53d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; module is designed to be portable, but some platforms have subtle differences and limitations due to the platforms&amp;rsquo; underlying architecture and capabilities.</source>
          <target state="translated">该&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;模块被设计成便携式的，但某些平台具有更因基础架构和能力的平台微妙的差异和限制。</target>
        </trans-unit>
        <trans-unit id="f0ca72df64b9d0808c1acdb7553cc5f4e1ad030c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; module supports &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking SSL sockets&lt;/a&gt; and provides a higher level API. It polls for events using the &lt;a href=&quot;selectors#module-selectors&quot;&gt;&lt;code&gt;selectors&lt;/code&gt;&lt;/a&gt; module and handles &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; exceptions. It runs the SSL handshake asynchronously as well.</source>
          <target state="translated">所述&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;模块支持&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非阻塞SSL套接字&lt;/a&gt;和提供了更高级别的API。它使用&lt;a href=&quot;selectors#module-selectors&quot;&gt; &lt;code&gt;selectors&lt;/code&gt; &lt;/a&gt;模块轮询事件，并处理&lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; &lt;/a&gt;异常。它也异步运行SSL握手。</target>
        </trans-unit>
        <trans-unit id="388449a7ece27291eb76f144920ee0e139befa4a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-dev#asyncio-debug-mode&quot;&gt;debug mode of asyncio&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-dev#asyncio-debug-mode&quot;&gt;asyncio&lt;/a&gt;的调试模式。</target>
        </trans-unit>
        <trans-unit id="269ec5e7278f4c68c07dc0423317c0a42c97b603" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-dev#asyncio-multithreading&quot;&gt;Concurrency and multithreading in asyncio&lt;/a&gt; section.</source>
          <target state="translated">&lt;a href=&quot;asyncio-dev#asyncio-multithreading&quot;&gt;异步中&lt;/a&gt;的并发和多线程部分。</target>
        </trans-unit>
        <trans-unit id="f6f1264da62220cbd3de89ae3749a348b0db15c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-eventloop#asyncio-example-watch-fd&quot;&gt;watch a file descriptor for read events&lt;/a&gt; example uses the low-level &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt;&lt;code&gt;loop.add_reader()&lt;/code&gt;&lt;/a&gt; method to register an FD.</source>
          <target state="translated">该&lt;a href=&quot;asyncio-eventloop#asyncio-example-watch-fd&quot;&gt;手表读取事件文件描述符&lt;/a&gt;示例使用低级别&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt; &lt;code&gt;loop.add_reader()&lt;/code&gt; &lt;/a&gt;方法来注册的FD。</target>
        </trans-unit>
        <trans-unit id="04932ed7777f762e8938b825eb1d0532fcd37d8f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-eventloop#asyncio-example-watch-fd&quot;&gt;watch a file descriptor for read events&lt;/a&gt; example uses the low-level &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt;&lt;code&gt;loop.add_reader()&lt;/code&gt;&lt;/a&gt; method to watch a file descriptor.</source>
          <target state="translated">该&lt;a href=&quot;asyncio-eventloop#asyncio-example-watch-fd&quot;&gt;手表读取事件文件描述符&lt;/a&gt;的例子使用了低级别&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt; &lt;code&gt;loop.add_reader()&lt;/code&gt; &lt;/a&gt;方法来观看的文件描述符。</target>
        </trans-unit>
        <trans-unit id="e03d070a4817aa0536e984c1c7295309a52d285f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt;&lt;code&gt;loop.add_reader()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_writer&quot;&gt;&lt;code&gt;loop.add_writer()&lt;/code&gt;&lt;/a&gt; methods are not supported.</source>
          <target state="translated">该&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_reader&quot;&gt; &lt;code&gt;loop.add_reader()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asyncio-eventloop#asyncio.loop.add_writer&quot;&gt; &lt;code&gt;loop.add_writer()&lt;/code&gt; &lt;/a&gt;不支持的方法。</target>
        </trans-unit>
        <trans-unit id="85a7b8ebbd28d502ad8092d4c90022d59420b313" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt;&lt;code&gt;loop.run_in_executor()&lt;/code&gt;&lt;/a&gt; method can be used with a &lt;a href=&quot;concurrent.futures#concurrent.futures.ThreadPoolExecutor&quot;&gt;&lt;code&gt;concurrent.futures.ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; to execute blocking code in a different OS thread without blocking the OS thread that the event loop runs in.</source>
          <target state="translated">所述&lt;a href=&quot;asyncio-eventloop#asyncio.loop.run_in_executor&quot;&gt; &lt;code&gt;loop.run_in_executor()&lt;/code&gt; &lt;/a&gt;方法可以与使用&lt;a href=&quot;concurrent.futures#concurrent.futures.ThreadPoolExecutor&quot;&gt; &lt;code&gt;concurrent.futures.ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;在不同的OS线程来执行阻断代码而不阻断事件循环中运行的OS线程。</target>
        </trans-unit>
        <trans-unit id="e39552b2c33bb4965caf4401d681e139ecd60b45" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-policy#asyncio.AbstractEventLoopPolicy.set_child_watcher&quot;&gt;&lt;code&gt;policy.set_child_watcher()&lt;/code&gt;&lt;/a&gt; function is also not supported, as &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; has a different mechanism to watch child processes.</source>
          <target state="translated">该&lt;a href=&quot;asyncio-policy#asyncio.AbstractEventLoopPolicy.set_child_watcher&quot;&gt; &lt;code&gt;policy.set_child_watcher()&lt;/code&gt; &lt;/a&gt;也不支持功能，&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;有不同的机制来观看子进程。</target>
        </trans-unit>
        <trans-unit id="0117effbf73dedbb4c08f9e6aa6bb84a360194f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;register an open socket to wait for data using a protocol&lt;/a&gt; example uses a low-level protocol and the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述&lt;a href=&quot;asyncio-protocol#asyncio-example-create-connection&quot;&gt;注册一个打开的套接字，以等待用于使用协议数据&lt;/a&gt;的例子使用一个低级别的协议和&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="bdf0529b63d84eaad00de25e6995746687f10495" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-protocol#asyncio-example-tcp-echo-client-protocol&quot;&gt;TCP echo client protocol&lt;/a&gt; example uses the low-level &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">的&lt;a href=&quot;asyncio-protocol#asyncio-example-tcp-echo-client-protocol&quot;&gt;TCP回波客户端协议&lt;/a&gt;的示例使用低级别&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="69fda5584336079e986631f089241b677491bf9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-protocol#asyncio-example-tcp-echo-server-protocol&quot;&gt;TCP echo server protocol&lt;/a&gt; example uses the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">的&lt;a href=&quot;asyncio-protocol#asyncio-example-tcp-echo-server-protocol&quot;&gt;TCP回声服务器协议&lt;/a&gt;的示例使用&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="4855612a9a026751a928540ca2ac83567ab76bca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-stream#asyncio-example-create-connection-streams&quot;&gt;register an open socket to wait for data using streams&lt;/a&gt; example uses high-level streams created by the &lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt; function in a coroutine.</source>
          <target state="translated">所述&lt;a href=&quot;asyncio-stream#asyncio-example-create-connection-streams&quot;&gt;注册一个打开的套接字，以等待使用流数据，&lt;/a&gt;例如使用高层次流通过所创建的&lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt; &lt;code&gt;open_connection()&lt;/code&gt; &lt;/a&gt;在协程功能。</target>
        </trans-unit>
        <trans-unit id="5fa7c63c53753a42c8dec77606ff72631f73707e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-stream#asyncio-tcp-echo-client-streams&quot;&gt;TCP echo client using streams&lt;/a&gt; example uses the high-level &lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;asyncio.open_connection()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;asyncio-stream#asyncio-tcp-echo-client-streams&quot;&gt;使用流&lt;/a&gt;的TCP回显客户端示例使用高级&lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt; &lt;code&gt;asyncio.open_connection()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="c4874f91fc60a76f94308f7d5d35b0d0415366fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-stream#asyncio-tcp-echo-server-streams&quot;&gt;TCP echo server using streams&lt;/a&gt; example uses the high-level &lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;asyncio.start_server()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;asyncio-stream#asyncio-tcp-echo-server-streams&quot;&gt;使用流&lt;/a&gt;的TCP回显服务器示例使用高级&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt; &lt;code&gt;asyncio.start_server()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="e70447010538ebf052cf5086fd5a5c51be44e9a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt; function is a high-level alternative API. It returns a pair of (&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt;) that can be used directly in async/await code.</source>
          <target state="translated">所述&lt;a href=&quot;asyncio-stream#asyncio.open_connection&quot;&gt; &lt;code&gt;open_connection()&lt;/code&gt; &lt;/a&gt;函数是一个高层次的替代API。它返回一对（&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;），可以直接在异步/等待代码中使用。</target>
        </trans-unit>
        <trans-unit id="aba9db86440cb3768db85740b3f75e621d8282f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt; function is a higher-level alternative API that returns a pair of &lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; that can be used in an async/await code.</source>
          <target state="translated">所述&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt; &lt;code&gt;start_server()&lt;/code&gt; &lt;/a&gt;函数是一个更高级别的替代API返回一个对&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asyncio-stream#asyncio.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; 的&lt;/a&gt;可在一个异步/ AWAIT代码中使用。</target>
        </trans-unit>
        <trans-unit id="3b03b65ebfef3d0e0cf7e8d7c48142c7bd3ed8f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asyncio-task#asyncio.sleep&quot;&gt;&lt;code&gt;asyncio.sleep()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">所述&lt;a href=&quot;asyncio-task#asyncio.sleep&quot;&gt; &lt;code&gt;asyncio.sleep()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="b052a492ced0457e8bdd97864405d6b419c03daa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;collections#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module has some concrete classes that derive from ABCs; these can, of course, be further derived. In addition, the &lt;a href=&quot;collections.abc#module-collections.abc&quot;&gt;&lt;code&gt;collections.abc&lt;/code&gt;&lt;/a&gt; submodule has some ABCs that can be used to test whether a class or instance provides a particular interface, for example, if it is hashable or if it is a mapping.</source>
          <target state="translated">该&lt;a href=&quot;collections#module-collections&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt;模块具有从基本知识获得一些具体的类; 当然，这些可以进一步推导。此外，&lt;a href=&quot;collections.abc#module-collections.abc&quot;&gt; &lt;code&gt;collections.abc&lt;/code&gt; &lt;/a&gt;子模块具有一些ABC，可用于测试类或实例是否提供特定接口，例如，是否可哈希或是否为映射。</target>
        </trans-unit>
        <trans-unit id="0c5e6186b5abd612a9a9b222bb05aec57b248739" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; module uses this protocol for shallow and deep copying operations.</source>
          <target state="translated">该&lt;a href=&quot;copy#module-copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;模块使用该协议浅层和深层复制操作。</target>
        </trans-unit>
        <trans-unit id="9bc670c86c2ecb0d326db3f2c349c930cae50785" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dataclasses#module-dataclasses&quot;&gt;&lt;code&gt;dataclasses&lt;/code&gt;&lt;/a&gt; module provides a decorator and functions for automatically adding generated special methods to user-defined classes.</source>
          <target state="translated">所述&lt;a href=&quot;dataclasses#module-dataclasses&quot;&gt; &lt;code&gt;dataclasses&lt;/code&gt; &lt;/a&gt;模块提供了用于自动生成添加特殊的方法，以用户定义的类一个装饰和功能。</target>
        </trans-unit>
        <trans-unit id="3457f5826f479c4d3f5156b594b84d2543287a5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;devmode#devmode&quot;&gt;Python Development Mode&lt;/a&gt; calls &lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;faulthandler.enable()&lt;/code&gt;&lt;/a&gt; at Python startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66ecab62e66fb68cc92b1e6b7ad01f3b29ba8a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package provides a standard parser that understands most email document structures, including MIME documents. You can pass the parser a bytes, string or file object, and the parser will return to you the root &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; instance of the object structure. For simple, non-MIME messages the payload of this root object will likely be a string containing the text of the message. For MIME messages, the root object will return &lt;code&gt;True&lt;/code&gt; from its &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; method, and the subparts can be accessed via the payload manipulation methods, such as &lt;a href=&quot;email.message#email.message.EmailMessage.get_body&quot;&gt;&lt;code&gt;get_body()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;email.message#email.message.EmailMessage.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;包提供了一个标准的解析器，了解大多数电子邮件文档结构，包括MIME文件。您可以向解析器传递字节，字符串或文件对象，解析器将返回给您该对象结构的根&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;实例。对于简单的非MIME消息，此根对象的有效负载可能是包含消息文本的字符串。对于MIME消息，根对象将从其&lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;方法返回 &lt;code&gt;True&lt;/code&gt; ，并且可以通过有效载荷操作方法（如&lt;a href=&quot;email.message#email.message.EmailMessage.get_body&quot;&gt; &lt;code&gt;get_body()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;email.message#email.message.EmailMessage.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; )访问子部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d65549da0a6ac50abbe17e6dbe3a7106056321e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package provides some convenient encoders in its &lt;code&gt;encoders&lt;/code&gt; module. These encoders are actually used by the &lt;a href=&quot;email.mime#email.mime.audio.MIMEAudio&quot;&gt;&lt;code&gt;MIMEAudio&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.mime#email.mime.image.MIMEImage&quot;&gt;&lt;code&gt;MIMEImage&lt;/code&gt;&lt;/a&gt; class constructors to provide default encodings. All encoder functions take exactly one argument, the message object to encode. They usually extract the payload, encode it, and reset the payload to this newly encoded value. They should also set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header as appropriate.</source>
          <target state="translated">该&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;包提供了一些方便的编码器， &lt;code&gt;encoders&lt;/code&gt; 模块。这些编码器实际上由&lt;a href=&quot;email.mime#email.mime.audio.MIMEAudio&quot;&gt; &lt;code&gt;MIMEAudio&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;email.mime#email.mime.image.MIMEImage&quot;&gt; &lt;code&gt;MIMEImage&lt;/code&gt; &lt;/a&gt;类构造函数用来提供默认编码。所有编码器函数都只接受一个参数，即要编码的消息对象。他们通常提取有效负载，对其进行编码，然后将有效负载重置为该新编码的值。他们还应适当设置&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头。</target>
        </trans-unit>
        <trans-unit id="8de4e0a1545677ea0bebec40ff1e9c58b3f8edd3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package&amp;rsquo;s prime focus is the handling of email messages as described by the various email and MIME RFCs. However, the general format of email messages (a block of header fields each consisting of a name followed by a colon followed by a value, the whole block followed by a blank line and an arbitrary &amp;lsquo;body&amp;rsquo;), is a format that has found utility outside of the realm of email. Some of these uses conform fairly closely to the main email RFCs, some do not. Even when working with email, there are times when it is desirable to break strict compliance with the RFCs, such as generating emails that interoperate with email servers that do not themselves follow the standards, or that implement extensions you want to use in ways that violate the standards.</source>
          <target state="translated">该&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;包的主要焦点是通过各种电子邮件和MIME RFC中所述的电子邮件的处理。但是，电子邮件的一般格式（一个标题字段块，每个标题字段由一个名称，一个冒号，一个值，整个块，一个空行和一个任意的&amp;ldquo; body&amp;rdquo;组成）是一种已经发现的格式电子邮件领域之外的实用程序。其中一些用法与主要电子邮件RFC相当接近，有些则不符合。即使使用电子邮件，有时也需要打破对RFC的严格合规，例如生成与本身不遵循标准的电子邮件服务器进行互操作的电子邮件，或者以违反方式使用您想要使用的扩展标准。</target>
        </trans-unit>
        <trans-unit id="a50b634650fe68487172709d4f3225db627c42af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;functools#functools.cmp_to_key&quot;&gt;&lt;code&gt;functools.cmp_to_key()&lt;/code&gt;&lt;/a&gt; utility is available to convert a 2.x style &lt;em&gt;cmp&lt;/em&gt; function to a &lt;em&gt;key&lt;/em&gt; function.</source>
          <target state="translated">该&lt;a href=&quot;functools#functools.cmp_to_key&quot;&gt; &lt;code&gt;functools.cmp_to_key()&lt;/code&gt; &lt;/a&gt;实用程序适用于2.x样式转换&lt;em&gt;CMP&lt;/em&gt;功能的&lt;em&gt;关键&lt;/em&gt;功能。</target>
        </trans-unit>
        <trans-unit id="cb3b71eeb6c10fe4e1063ddf86b43b1331b19dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http.cookiejar#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;http.cookiejar.CookieJar&lt;/code&gt;&lt;/a&gt; in which cookies are stored.</source>
          <target state="translated">存储cookie 的&lt;a href=&quot;http.cookiejar#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;http.cookiejar.CookieJar&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c912b7d4aed5c4dd186c5942bf55dc89d7ded472" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://aiosmtpd.readthedocs.io/&quot;&gt;aiosmtpd&lt;/a&gt; package is a recommended replacement for this module. It is based on &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; and provides a more straightforward API. &lt;a href=&quot;#module-smtpd&quot;&gt;&lt;code&gt;smtpd&lt;/code&gt;&lt;/a&gt; should be considered deprecated.</source>
          <target state="translated">建议使用&lt;a href=&quot;http://aiosmtpd.readthedocs.io/&quot;&gt;aiosmtpd&lt;/a&gt;软件包替代此模块。它基于&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;并提供更直接的API。&lt;a href=&quot;#module-smtpd&quot;&gt; &lt;code&gt;smtpd&lt;/code&gt; &lt;/a&gt;应该被视为已弃用。</target>
        </trans-unit>
        <trans-unit id="c1784bfb338b8f4b79d0d75b7910d3ad4a01c0e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://code.activestate.com/recipes/579000/&quot;&gt;linspace recipe&lt;/a&gt; shows how to implement a lazy version of range suitable for floating point applications.</source>
          <target state="translated">该&lt;a href=&quot;http://code.activestate.com/recipes/579000/&quot;&gt;linspace配方&lt;/a&gt;展示了如何实现一个懒惰的版本的范围适用于浮点应用程序。</target>
        </trans-unit>
        <trans-unit id="d300d77cc8d0556a45c8f3612ef4a50b041b117f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://python-pillow.org/&quot;&gt;Pillow&lt;/a&gt; package adds support for formats such as BMP, JPEG, TIFF, and WebP, among others.</source>
          <target state="translated">该&lt;a href=&quot;http://python-pillow.org/&quot;&gt;枕头&lt;/a&gt;包增加了对格式，如BMP，JPEG，TIFF和WebP的，等等的支持。</target>
        </trans-unit>
        <trans-unit id="e9169c27758b9a12167014506c5416a5dfaf6c16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tix.htm&quot;&gt;tix commands&lt;/a&gt; provide access to miscellaneous elements of &lt;code&gt;Tix&lt;/code&gt;&amp;rsquo;s internal state and the &lt;code&gt;Tix&lt;/code&gt; application context. Most of the information manipulated by these methods pertains to the application as a whole, or to a screen or display, rather than to a particular window.</source>
          <target state="translated">使用&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tix.htm&quot;&gt;tix命令&lt;/a&gt;可以访问 &lt;code&gt;Tix&lt;/code&gt; 内部状态和 &lt;code&gt;Tix&lt;/code&gt; 应用程序上下文的其他元素。这些方法操纵的大多数信息都与整个应用程序有关，或者与屏幕或显示器有关，而不是与特定窗口有关。</target>
        </trans-unit>
        <trans-unit id="2b788c78050dfd71c2443cbcfe38005d465da797" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixButtonBox.htm&quot;&gt;ButtonBox&lt;/a&gt; widget creates a box of buttons, such as is commonly used for &lt;code&gt;Ok Cancel&lt;/code&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixButtonBox.htm&quot;&gt;ButtonBox&lt;/a&gt;插件创建按钮的框，诸如通常用于 &lt;code&gt;Ok Cancel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86e1a883a18debb1e0837213b5b12c5d312026c3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixCheckList.htm&quot;&gt;CheckList&lt;/a&gt; widget displays a list of items to be selected by the user. CheckList acts similarly to the Tk checkbutton or radiobutton widgets, except it is capable of handling many more items than checkbuttons or radiobuttons.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixCheckList.htm&quot;&gt;检查表&lt;/a&gt;插件播放项目的列表由用户来选择。CheckList的行为类似于Tk的checkbutton或radiobutton窗口小部件，不同之处在于它能够处理比checkbutton或radiobutton更多的项目。</target>
        </trans-unit>
        <trans-unit id="603558cb202ba89c4a3bb58d8825ab5b57237ec8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixComboBox.htm&quot;&gt;ComboBox&lt;/a&gt; widget is similar to the combo box control in MS Windows. The user can select a choice by either typing in the entry subwidget or selecting from the listbox subwidget.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixComboBox.htm&quot;&gt;组合框&lt;/a&gt;控件类似于MS Windows中的组合框控件。用户可以通过输入条目子小部件或从列表框子小部件中进行选择来选择一个选项。</target>
        </trans-unit>
        <trans-unit id="c037cfe619555da329d2d697abb192a7f9ee3bdf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixControl.htm&quot;&gt;Control&lt;/a&gt; widget is also known as the &lt;code&gt;SpinBox&lt;/code&gt; widget. The user can adjust the value by pressing the two arrow buttons or by entering the value directly into the entry. The new value will be checked against the user-defined upper and lower limits.</source>
          <target state="translated">所述&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixControl.htm&quot;&gt;控制&lt;/a&gt;部件也被称为该 &lt;code&gt;SpinBox&lt;/code&gt; 插件。用户可以通过按下两个箭头按钮或直接在条目中输入值来调整值。将根据用户定义的上限和下限检查新值。</target>
        </trans-unit>
        <trans-unit id="04acb7539b464cd9018f7470202ff0b3a41f2a21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirList.htm&quot;&gt;DirList&lt;/a&gt; widget displays a list view of a directory, its previous directories and its sub-directories. The user can choose one of the directories displayed in the list or change to another directory.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirList.htm&quot;&gt;DirList&lt;/a&gt;控件显示目录的列表视图，其先前的目录及其子目录。用户可以选择列表中显示的目录之一，也可以切换到另一个目录。</target>
        </trans-unit>
        <trans-unit id="f1047d1e24d522d85fa0ed385c293f709e614880" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirSelectDialog.htm&quot;&gt;DirSelectDialog&lt;/a&gt; widget presents the directories in the file system in a dialog window. The user can use this dialog window to navigate through the file system to select the desired directory.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirSelectDialog.htm&quot;&gt;DirSelectDialog&lt;/a&gt;小部件呈现在文件系统中的目录，在对话窗口。用户可以使用此对话框窗口浏览文件系统以选择所需的目录。</target>
        </trans-unit>
        <trans-unit id="7fde708622bcb6f1bd06532cf4cc9669bf75d05a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirTree.htm&quot;&gt;DirTree&lt;/a&gt; widget displays a tree view of a directory, its previous directories and its sub-directories. The user can choose one of the directories displayed in the list or change to another directory.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixDirTree.htm&quot;&gt;DirTree&lt;/a&gt;控件显示目录的树状视图，其先前的目录及其子目录。用户可以选择列表中显示的目录之一，也可以切换到另一个目录。</target>
        </trans-unit>
        <trans-unit id="d16650b193bc914d7c1b5ec60af4aeeb1c992cfb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixExFileSelectBox.htm&quot;&gt;ExFileSelectBox&lt;/a&gt; widget is usually embedded in a tixExFileSelectDialog widget. It provides a convenient method for the user to select files. The style of the &lt;a href=&quot;#tkinter.tix.ExFileSelectBox&quot;&gt;&lt;code&gt;ExFileSelectBox&lt;/code&gt;&lt;/a&gt; widget is very similar to the standard file dialog on MS Windows 3.1.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixExFileSelectBox.htm&quot;&gt;ExFileSelectBox&lt;/a&gt;部件通常嵌入在tixExFileSelectDialog部件。它为用户提供了一种选择文件的便捷方法。&lt;a href=&quot;#tkinter.tix.ExFileSelectBox&quot;&gt; &lt;code&gt;ExFileSelectBox&lt;/code&gt; &lt;/a&gt;小部件的样式与MS Windows 3.1上的标准文件对话框非常相似。</target>
        </trans-unit>
        <trans-unit id="c9fbbdbd0dc3081d4631e705316075550a075986" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixFileEntry.htm&quot;&gt;FileEntry&lt;/a&gt; widget can be used to input a filename. The user can type in the filename manually. Alternatively, the user can press the button widget that sits next to the entry, which will bring up a file selection dialog.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixFileEntry.htm&quot;&gt;FileEntry的&lt;/a&gt;插件可被用于输入一个文件名。用户可以手动输入文件名。或者，用户可以按下条目旁边的按钮小部件，这将弹出一个文件选择对话框。</target>
        </trans-unit>
        <trans-unit id="527939224dcc8dc15ed6dff487c130a43399497c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixFileSelectBox.htm&quot;&gt;FileSelectBox&lt;/a&gt; is similar to the standard Motif(TM) file-selection box. It is generally used for the user to choose a file. FileSelectBox stores the files mostly recently selected into a &lt;a href=&quot;#tkinter.tix.ComboBox&quot;&gt;&lt;code&gt;ComboBox&lt;/code&gt;&lt;/a&gt; widget so that they can be quickly selected again.</source>
          <target state="translated">所述&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixFileSelectBox.htm&quot;&gt;FileSelectBox&lt;/a&gt;是类似于标准基序（TM）文件选择框。通常用于用户选择文件。FileSelectBox将最近选择的文件存储到&lt;a href=&quot;#tkinter.tix.ComboBox&quot;&gt; &lt;code&gt;ComboBox&lt;/code&gt; &lt;/a&gt;小部件中，以便可以再次快速选择它们。</target>
        </trans-unit>
        <trans-unit id="ab61a7e3e90519857cf6d7040c91b4f49f6e791d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixForm.htm&quot;&gt;Form&lt;/a&gt; geometry manager based on attachment rules for all Tk widgets.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixForm.htm&quot;&gt;表&lt;/a&gt;几何经理基于对所有Tk组件连接的规则。</target>
        </trans-unit>
        <trans-unit id="5a8956c2a460398355b14f63db03a07548e237ca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixHList.htm&quot;&gt;HList&lt;/a&gt; widget can be used to display any data that have a hierarchical structure, for example, file system directory trees. The list entries are indented and connected by branch lines according to their places in the hierarchy.</source>
          <target state="translated">所述&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixHList.htm&quot;&gt;HList&lt;/a&gt;插件可以用于显示具有分级结构，例如任何数据，文件系统的目录树。列表条目根据其在层次结构中的位置缩进并通过分支线连接。</target>
        </trans-unit>
        <trans-unit id="e6354f123568048b67a926ccd0cd7d72d7496d5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixInputOnly.htm&quot;&gt;InputOnly&lt;/a&gt; widgets are to accept inputs from the user, which can be done with the &lt;code&gt;bind&lt;/code&gt; command (Unix only).</source>
          <target state="translated">的&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixInputOnly.htm&quot;&gt;InputOnly&lt;/a&gt;窗口小部件是接受来自用户的，其可以与完成输入 &lt;code&gt;bind&lt;/code&gt; 命令（仅限Unix）。</target>
        </trans-unit>
        <trans-unit id="b0f5237f8198c76d42e5611f1189b4003b6e8249" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixLabelEntry.htm&quot;&gt;LabelEntry&lt;/a&gt; widget packages an entry widget and a label into one mega widget. It can be used to simplify the creation of &amp;ldquo;entry-form&amp;rdquo; type of interface.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixLabelEntry.htm&quot;&gt;LabelEntry&lt;/a&gt;部件包的入口小部件和一个标签为一体的大型部件。它可以用来简化&amp;ldquo;入口形式&amp;rdquo;类型接口的创建。</target>
        </trans-unit>
        <trans-unit id="d3aea0a8cf0ed5d2a381d7f8313262712a00d6c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixLabelFrame.htm&quot;&gt;LabelFrame&lt;/a&gt; widget packages a frame widget and a label into one mega widget. To create widgets inside a LabelFrame widget, one creates the new widgets relative to the &lt;code&gt;frame&lt;/code&gt; subwidget and manage them inside the &lt;code&gt;frame&lt;/code&gt; subwidget.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixLabelFrame.htm&quot;&gt;LabelFrame&lt;/a&gt;部件包框控件和标签为一个大型部件。到LabelFrame部件中创建窗口小部件，一个创建相对于新部件 &lt;code&gt;frame&lt;/code&gt; SubWidget的和管理它们的内部 &lt;code&gt;frame&lt;/code&gt; SubWidget的。</target>
        </trans-unit>
        <trans-unit id="7353a09d354c96f14d0973fb0e21bb9d2fa8dd0e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixListNoteBook.htm&quot;&gt;ListNoteBook&lt;/a&gt; widget is very similar to the &lt;code&gt;TixNoteBook&lt;/code&gt; widget: it can be used to display many windows in a limited space using a notebook metaphor. The notebook is divided into a stack of pages (windows). At one time only one of these pages can be shown. The user can navigate through these pages by choosing the name of the desired page in the &lt;code&gt;hlist&lt;/code&gt; subwidget.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixListNoteBook.htm&quot;&gt;ListNoteBook&lt;/a&gt;小部件是非常相似的 &lt;code&gt;TixNoteBook&lt;/code&gt; 小工具：它可以用来在使用笔记本的比喻有限的空间来显示多个窗口。笔记本分为页面（窗口）堆栈。一次只能显示这些页面之一。用户可以通过在 &lt;code&gt;hlist&lt;/code&gt; 子小部件中选择所需页面的名称来浏览这些页面。</target>
        </trans-unit>
        <trans-unit id="b879094947bc5e75feb18accde29b2dcd3c95b44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixMeter.htm&quot;&gt;Meter&lt;/a&gt; widget can be used to show the progress of a background job which may take a long time to execute.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixMeter.htm&quot;&gt;仪表&lt;/a&gt;控件可以用来显示后台作业可能需要很长的时间来执行进度。</target>
        </trans-unit>
        <trans-unit id="3b1884f8df17b41f26d089c22fbb18040c6f90ca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixNoteBook.htm&quot;&gt;NoteBook&lt;/a&gt; widget can be used to display many windows in a limited space using a notebook metaphor. The notebook is divided into a stack of pages. At one time only one of these pages can be shown. The user can navigate through these pages by choosing the visual &amp;ldquo;tabs&amp;rdquo; at the top of the NoteBook widget.</source>
          <target state="translated">使用笔记本隐喻，&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixNoteBook.htm&quot;&gt;NoteBook&lt;/a&gt;小部件可用于在有限的空间中显示许多窗口。笔记本分为一堆页面。一次只能显示这些页面之一。用户可以通过选择&amp;ldquo;笔记本&amp;rdquo;小部件顶部的可视&amp;ldquo;选项卡&amp;rdquo;来浏览这些页面。</target>
        </trans-unit>
        <trans-unit id="4fa47245f999c16063fff0ba1cb1595d3932a354" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixOptionMenu.htm&quot;&gt;OptionMenu&lt;/a&gt; creates a menu button of options.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixOptionMenu.htm&quot;&gt;OptionMenu&lt;/a&gt;创建一个选项菜单按钮。</target>
        </trans-unit>
        <trans-unit id="50e74e732a22202361fcac63091277793c2028f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixPanedWindow.htm&quot;&gt;PanedWindow&lt;/a&gt; widget allows the user to interactively manipulate the sizes of several panes. The panes can be arranged either vertically or horizontally. The user changes the sizes of the panes by dragging the resize handle between two panes.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixPanedWindow.htm&quot;&gt;PanedWindow&lt;/a&gt;插件允许用户以交互方式操纵几个窗格的大小。窗格可以垂直或水平排列。用户通过在两个窗格之间拖动调整大小手柄来更改窗格的大小。</target>
        </trans-unit>
        <trans-unit id="d01273c8f94acbb62bbb2a0d580e288dbff01b64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixPopupMenu.htm&quot;&gt;PopupMenu&lt;/a&gt; widget can be used as a replacement of the &lt;code&gt;tk_popup&lt;/code&gt; command. The advantage of the &lt;code&gt;Tix&lt;/code&gt;&lt;a href=&quot;#tkinter.tix.PopupMenu&quot;&gt;&lt;code&gt;PopupMenu&lt;/code&gt;&lt;/a&gt; widget is it requires less application code to manipulate.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixPopupMenu.htm&quot;&gt;PopupMenu的&lt;/a&gt;插件可被用作一个替换的 &lt;code&gt;tk_popup&lt;/code&gt; 命令。 &lt;code&gt;Tix&lt;/code&gt; &lt;a href=&quot;#tkinter.tix.PopupMenu&quot;&gt; &lt;code&gt;PopupMenu&lt;/code&gt; &lt;/a&gt;小部件的优点是它需要较少的应用程序代码来进行操作。</target>
        </trans-unit>
        <trans-unit id="86685b685f4f3022f75f6a8e5f8a260f97634653" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixSelect.htm&quot;&gt;Select&lt;/a&gt; widget is a container of button subwidgets. It can be used to provide radio-box or check-box style of selection options for the user.</source>
          <target state="translated">&amp;ldquo; &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixSelect.htm&quot;&gt;选择&amp;rdquo;&lt;/a&gt;小部件是按钮子小部件的容器。它可用于为用户提供选择选项的单选框或复选框样式。</target>
        </trans-unit>
        <trans-unit id="2f87617dead56f7c9ce2e3d900227d8e1e1d8545" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixStdButtonBox.htm&quot;&gt;StdButtonBox&lt;/a&gt; widget is a group of standard buttons for Motif-like dialog boxes.</source>
          <target state="translated">所述&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixStdButtonBox.htm&quot;&gt;StdButtonBox&lt;/a&gt;插件为基序状对话框的一组标准的按钮。</target>
        </trans-unit>
        <trans-unit id="36ae666d2c2ace8d201e3ab5211750075b3424e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixTList.htm&quot;&gt;TList&lt;/a&gt; widget can be used to display data in a tabular format. The list entries of a &lt;a href=&quot;#tkinter.tix.TList&quot;&gt;&lt;code&gt;TList&lt;/code&gt;&lt;/a&gt; widget are similar to the entries in the Tk listbox widget. The main differences are (1) the &lt;a href=&quot;#tkinter.tix.TList&quot;&gt;&lt;code&gt;TList&lt;/code&gt;&lt;/a&gt; widget can display the list entries in a two dimensional format and (2) you can use graphical images as well as multiple colors and fonts for the list entries.</source>
          <target state="translated">所述&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixTList.htm&quot;&gt;的TList&lt;/a&gt;小部件可以以表格的形式被用于显示数据。&lt;a href=&quot;#tkinter.tix.TList&quot;&gt; &lt;code&gt;TList&lt;/code&gt; &lt;/a&gt;小部件的列表条目与Tk列表框小部件中的条目相似。主要区别在于（1）&lt;a href=&quot;#tkinter.tix.TList&quot;&gt; &lt;code&gt;TList&lt;/code&gt; &lt;/a&gt;小部件可以以二维格式显示列表条目，并且（2）您可以使用图形图像以及列表条目的多种颜色和字体。</target>
        </trans-unit>
        <trans-unit id="9f138f0ac33a15cc112a69fa280a186d5e9d3505" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixTree.htm&quot;&gt;Tree&lt;/a&gt; widget can be used to display hierarchical data in a tree form. The user can adjust the view of the tree by opening or closing parts of the tree.</source>
          <target state="translated">该&lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixTree.htm&quot;&gt;树&lt;/a&gt;插件可用于以树的形式显示的阶层数据。用户可以通过打开或关闭树的部分来调整树的视图。</target>
        </trans-unit>
        <trans-unit id="b00b68144b0a7ccb966491d97590d5d1941b85a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://code.activestate.com/recipes/577434/&quot;&gt;Nested Contexts recipe&lt;/a&gt; has options to control whether writes and other mutations apply only to the first mapping or to any mapping in the chain.</source>
          <target state="translated">所述&lt;a href=&quot;https://code.activestate.com/recipes/577434/&quot;&gt;嵌套上下文配方&lt;/a&gt;具有选项来控制写入和其它突变是否只适用于第一映射或链中的任何映射。</target>
        </trans-unit>
        <trans-unit id="366df768713cd6eb282ce460c0c95bf88b3b540c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-docstring&quot;&gt;docstring&lt;/a&gt; of the module. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">模块的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-docstring&quot;&gt;文档字符串&lt;/a&gt;。默认为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e3f1b0ff9c725f0fb7678b7b3cb4937a376eb68" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which loaded the module. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;装载器&lt;/a&gt;，其装载的模块。默认为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87396fa33c5c1368bb55278c1b85eb1735ea8b77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;em&gt;flags&lt;/em&gt; exposes the status of command line flags. The attributes are read only.</source>
          <target state="translated">该&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;命名元组&lt;/a&gt;&lt;em&gt;标志&lt;/em&gt;暴露的命令行标志的状态。这些属性是只读的。</target>
        </trans-unit>
        <trans-unit id="0ac1b83ed391c6537aaeee5ffb70049e9f1bee75" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-qualified-name&quot;&gt;qualified name&lt;/a&gt; of the class, function, method, descriptor, or generator instance.</source>
          <target state="translated">类，函数，方法，描述符或生成器实例的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-qualified-name&quot;&gt;限定名称&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a87f32ea5285eb1c52cf2503f70cc6587feb22e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method, if defined, is used during creation of the Enum members; it is then replaced by Enum&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; which is used after class creation for lookup of existing members.</source>
          <target state="translated">所述&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;方法，如果所定义，创建枚举成员的过程中使用; 然后将其替换为Enum的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;，该类在创建类之后用于查找现有成员。</target>
        </trans-unit>
        <trans-unit id="f3c33e932c88b9c61c62b48968186a1c88162159" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement is syntactic sugar for this function.</source>
          <target state="translated">在&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句是这个函数的语法糖。</target>
        </trans-unit>
        <trans-unit id="7e4b4ff99f1cb38fb0a5352172600bb59ef56737" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; option offering equivalent functionality from the command line.</source>
          <target state="translated">该&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-m&quot;&gt; &lt;code&gt;-m&lt;/code&gt; &lt;/a&gt;选项在命令行中，提供等效的功能。</target>
        </trans-unit>
        <trans-unit id="a7814f0bcc445d6ea051b404b0588a400412f9d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONTRACEMALLOC&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONTRACEMALLOC&lt;/code&gt;&lt;/a&gt; environment variable (&lt;code&gt;PYTHONTRACEMALLOC=NFRAME&lt;/code&gt;) and the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;tracemalloc=NFRAME&lt;/code&gt; command line option can be used to start tracing at startup.</source>
          <target state="translated">所述&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONTRACEMALLOC&quot; id=&quot;index-2&quot;&gt; &lt;code&gt;PYTHONTRACEMALLOC&lt;/code&gt; &lt;/a&gt;环境变量（ &lt;code&gt;PYTHONTRACEMALLOC=NFRAME&lt;/code&gt; ）和&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;tracemalloc=NFRAME&lt;/code&gt; 命令行选项可用于在启动时开始跟踪。</target>
        </trans-unit>
        <trans-unit id="c66f4aa432cc7cf903cb90042cb97d20bf9f89e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-docstring&quot;&gt;docstring&lt;/a&gt; of the module. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935f49d407785bcd8a8ec7748ea9b5b73355f535" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;Loader&lt;/a&gt; that should be used when loading the module. &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;Finders&lt;/a&gt; should always set this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca681e3b1b4e240b7d4d50d91caee64266f4ef86" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which loaded the module. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b4d795aba866631e0e6798ac850e3a75b9994d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;em&gt;flags&lt;/em&gt; exposes the status of command line flags. The attributes are read only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fb8f709ff89180e457570143014724740587fe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-qualified-name&quot;&gt;qualified name&lt;/a&gt; of the class, function, method, descriptor, or generator instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a24c61ecb3abf3218524fe7306bff6f52e8e06" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method of generics will raise an exception to disallow mistakes like &lt;code&gt;dict[str][str]&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f800c1da3d04ab472e0e278ae0b1fba619bd48" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method, if defined, is used during creation of the Enum members; it is then replaced by Enum&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; which is used after class creation for lookup of existing members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbee78de953ca33a5033e9dd68dd496bd560130" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement is syntactic sugar for this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd6ccaaeb50e64fe3e7709d154aa90fbf86ce66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-m&quot;&gt;&lt;code&gt;-m&lt;/code&gt;&lt;/a&gt; option offering equivalent functionality from the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a5d5c95c021cc3e308a7faa8f8d4305eb45387" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONTRACEMALLOC&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONTRACEMALLOC&lt;/code&gt;&lt;/a&gt; environment variable (&lt;code&gt;PYTHONTRACEMALLOC=NFRAME&lt;/code&gt;) and the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;tracemalloc=NFRAME&lt;/code&gt; command line option can be used to start tracing at startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a390a30a62ca1f5d0f41f5bdeaf8e424f3a223" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/Billion_laughs&quot;&gt;Billion Laughs&lt;/a&gt; attack &amp;ndash; also known as exponential entity expansion &amp;ndash; uses multiple levels of nested entities. Each entity refers to another entity several times, and the final entity definition contains a small string. The exponential expansion results in several gigabytes of text and consumes lots of memory and CPU time.</source>
          <target state="translated">该&lt;a href=&quot;https://en.wikipedia.org/wiki/Billion_laughs&quot;&gt;十亿笑&lt;/a&gt;攻击-也被称为指数实体膨胀-使用嵌套实体的多个层次。每个实体多次引用另一个实体，并且最终实体定义包含一个小字符串。指数级扩展会导致数千兆字节的文本，并消耗大量内存和CPU时间。</target>
        </trans-unit>
        <trans-unit id="e7d2e0bc9e7c3fe6abdfea0d8f090df8932358cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/enthought/codetools/blob/4.0.0/codetools/contexts/multi_context.py&quot;&gt;MultiContext class&lt;/a&gt; in the Enthought &lt;a href=&quot;https://github.com/enthought/codetools&quot;&gt;CodeTools package&lt;/a&gt; has options to support writing to any mapping in the chain.</source>
          <target state="translated">Enthought &lt;a href=&quot;https://github.com/enthought/codetools&quot;&gt;CodeTools软件包中&lt;/a&gt;的&lt;a href=&quot;https://github.com/enthought/codetools/blob/4.0.0/codetools/contexts/multi_context.py&quot;&gt;MultiContext类&lt;/a&gt;具有支持写入链中任何映射的选项。</target>
        </trans-unit>
        <trans-unit id="c370b58e8da7033646d2a0e82dff131888172df1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Tools/demo/&quot;&gt;Tools/demo/&lt;/a&gt; directory in the Python source distribution contains some example programs using the curses bindings provided by this module.</source>
          <target state="translated">Python源代码发行版中的&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Tools/demo/&quot;&gt;Tools / demo /&lt;/a&gt;目录包含一些使用此模块提供的curses绑定的示例程序。</target>
        </trans-unit>
        <trans-unit id="bb96dc3e1c02c69abda8c761efdb6e74d9081dcb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/python/cpython/tree/3.9/Tools/demo/&quot;&gt;Tools/demo/&lt;/a&gt; directory in the Python source distribution contains some example programs using the curses bindings provided by this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68c52a2e707faa21d8b537706f88593db3e7b67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://help.gnome.org/users/gnumeric/stable/gnumeric.html#gnumeric-function-SSMEDIAN&quot;&gt;SSMEDIAN&lt;/a&gt; function in the Gnome Gnumeric spreadsheet, including &lt;a href=&quot;https://mail.gnome.org/archives/gnumeric-list/2011-April/msg00018.html&quot;&gt;this discussion&lt;/a&gt;.</source>
          <target state="translated">Gnome Gnumeric电子表格中的&lt;a href=&quot;https://help.gnome.org/users/gnumeric/stable/gnumeric.html#gnumeric-function-SSMEDIAN&quot;&gt;SSMEDIAN&lt;/a&gt;函数，包括&lt;a href=&quot;https://mail.gnome.org/archives/gnumeric-list/2011-April/msg00018.html&quot;&gt;此讨论&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3719a92f6bc634688a542f7f28587c9a13eaf643" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://requests.readthedocs.io/en/master/&quot;&gt;Requests package&lt;/a&gt; is recommended for a higher-level HTTP client interface.</source>
          <target state="translated">建议将&lt;a href=&quot;https://requests.readthedocs.io/en/master/&quot;&gt;Requests包&lt;/a&gt;用于更高级别的HTTP客户端界面。</target>
        </trans-unit>
        <trans-unit id="b063ff9485718a2e89faf0ab510e54940c874604" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 3548&lt;/strong&gt;&lt;/a&gt; encodings are suitable for encoding binary data so that it can safely sent by email, used as parts of URLs, or included as part of an HTTP POST request. The encoding algorithm is not the same as the &lt;strong&gt;uuencode&lt;/strong&gt; program.</source>
          <target state="translated">在&lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 3548级&lt;/strong&gt;&lt;/a&gt;的编码适合于使得它可以通过电子邮件安全发送，用作URL的部分，或包括作为HTTP POST请求的一部分编码的二进制数据。编码算法与&lt;strong&gt;uuencode&lt;/strong&gt;程序不同。</target>
        </trans-unit>
        <trans-unit id="9420f9f109d018ebd955fab4fd92512492f54acd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt; function</source>
          <target state="translated">所述&lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt;函数</target>
        </trans-unit>
        <trans-unit id="96cf8e8e3869ca40ea2511ede446ce1808bbd3b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io#io.BufferedIOBase.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method of &lt;em&gt;stdout&lt;/em&gt; should write each chunk in full, like &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;stdout&lt;/em&gt;的&lt;a href=&quot;io#io.BufferedIOBase.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;方法应完整写入每个块，例如&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4fe78bb322990d9e67f5a9398e118cd5aaa040ef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io#io.IOBase&quot;&gt;&lt;code&gt;io.IOBase&lt;/code&gt;&lt;/a&gt; destructor logs &lt;code&gt;close()&lt;/code&gt; exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23ffc96778cd83371ca325ec9a280da044137ff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method can be used to obtain the file descriptor associated with a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; when required. Note that using the file descriptor directly will bypass the file object methods, ignoring aspects such as internal buffering of data.</source>
          <target state="translated">需要时，可以使用&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;方法获取与&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;关联的文件描述符。请注意，直接使用文件描述符将忽略文件对象方法，而忽略诸如数据内部缓冲之类的方面。</target>
        </trans-unit>
        <trans-unit id="1d7be079eb578998b401a20dccc2814d93615ce7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method can be used to obtain the file descriptor associated with a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; when required. Note that using the file descriptor directly will bypass the file object methods, ignoring aspects such as internal buffering of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399bd4ce685d281a7befd1de6af3e29f9430d945" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;json#module-json&quot;&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt; module: a standard library module allowing JSON serialization and deserialization.</source>
          <target state="translated">该&lt;a href=&quot;json#module-json&quot;&gt; &lt;code&gt;json&lt;/code&gt; &lt;/a&gt;模块：一个标准库模块允许JSON序列化和反序列化。</target>
        </trans-unit>
        <trans-unit id="b423614dd427b120857806b9ad473895269343ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; serialization format is not guaranteed to be portable across Python versions. Because its primary job in life is to support &lt;code&gt;.pyc&lt;/code&gt; files, the Python implementers reserve the right to change the serialization format in non-backwards compatible ways should the need arise. The &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; serialization format is guaranteed to be backwards compatible across Python releases provided a compatible pickle protocol is chosen and pickling and unpickling code deals with Python 2 to Python 3 type differences if your data is crossing that unique breaking change language boundary.</source>
          <target state="translated">在&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;序列化格式是不能保证整个Python版本移植。因为它的主要工作是支持 &lt;code&gt;.pyc&lt;/code&gt; 文件，所以Python实现者保留在需要时以非向后兼容的方式更改序列化格式的权利。如果选择了兼容的pickle协议，并且如果您的数据跨越了唯一的突破性更改语言边界，则&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;序列化格式可以保证在各个Python版本之间向后兼容，并且pickle和unpickling的代码可以处理Python 2到Python 3类型的差异。</target>
        </trans-unit>
        <trans-unit id="9a48d7f9092d5b73d9f57bc216ea762816cf68b1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module provides an alternate implementation of &lt;code&gt;environ&lt;/code&gt; which updates the environment on modification. Note also that updating &lt;a href=&quot;os#os.environ&quot;&gt;&lt;code&gt;os.environ&lt;/code&gt;&lt;/a&gt; will render this dictionary obsolete. Use of the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module version of this is recommended over direct access to the &lt;a href=&quot;#module-posix&quot;&gt;&lt;code&gt;posix&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">所述&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;模块提供了一个替代实施方案的 &lt;code&gt;environ&lt;/code&gt; 其上修改更新环境。还要注意，更新&lt;a href=&quot;os#os.environ&quot;&gt; &lt;code&gt;os.environ&lt;/code&gt; &lt;/a&gt;将使此字典过时。建议直接访问&lt;a href=&quot;#module-posix&quot;&gt; &lt;code&gt;posix&lt;/code&gt; &lt;/a&gt;模块使用&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;模块版本。</target>
        </trans-unit>
        <trans-unit id="f7b74ac0b4916b2a2815d16beac508a288819a90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;os#os.O_TMPFILE&quot;&gt;&lt;code&gt;os.O_TMPFILE&lt;/code&gt;&lt;/a&gt; flag is used if it is available and works (Linux-specific, requires Linux kernel 3.11 or later).</source>
          <target state="translated">如果&lt;a href=&quot;os#os.O_TMPFILE&quot;&gt; &lt;code&gt;os.O_TMPFILE&lt;/code&gt; &lt;/a&gt;标志可用且可用，则使用os.O_TMPFILE标志（特定于Linux，需要Linux内核3.11或更高版本）。</target>
        </trans-unit>
        <trans-unit id="be53a0f028cc8f2f7cb574eaeda9d516422827b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; attribute will be &lt;code&gt;bytes&lt;/code&gt; if the &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;path&lt;/em&gt; argument is of type &lt;code&gt;bytes&lt;/code&gt; and &lt;code&gt;str&lt;/code&gt; otherwise. Use &lt;a href=&quot;#os.fsdecode&quot;&gt;&lt;code&gt;fsdecode()&lt;/code&gt;&lt;/a&gt; to decode byte filenames.</source>
          <target state="translated">的&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;path&lt;/code&gt; &lt;/a&gt;属性将是 &lt;code&gt;bytes&lt;/code&gt; ，如果&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;路径&lt;/em&gt;参数的类型的 &lt;code&gt;bytes&lt;/code&gt; 和 &lt;code&gt;str&lt;/code&gt; 否则。使用&lt;a href=&quot;#os.fsdecode&quot;&gt; &lt;code&gt;fsdecode()&lt;/code&gt; &lt;/a&gt;解码字节文件名。</target>
        </trans-unit>
        <trans-unit id="471dcc1abba4e4319f505be9780becb5d37241e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pathlib#module-pathlib&quot;&gt;&lt;code&gt;pathlib&lt;/code&gt;&lt;/a&gt; module offers high-level path objects.</source>
          <target state="translated">该&lt;a href=&quot;pathlib#module-pathlib&quot;&gt; &lt;code&gt;pathlib&lt;/code&gt; &lt;/a&gt;模块提供高层次的路径对象。</target>
        </trans-unit>
        <trans-unit id="9241756174385f49d4dfffd6e60c0bbef34ded67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;platform#module-platform&quot;&gt;&lt;code&gt;platform&lt;/code&gt;&lt;/a&gt; module provides detailed checks for the system&amp;rsquo;s identity.</source>
          <target state="translated">该&lt;a href=&quot;platform#module-platform&quot;&gt; &lt;code&gt;platform&lt;/code&gt; &lt;/a&gt;模块提供了详细的检查系统的身份。</target>
        </trans-unit>
        <trans-unit id="e3164e9402a163cd69e25ca9534f9c207636ddfc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;secrets#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; module provides higher level functions. For an easy-to-use interface to the random number generator provided by your platform, please see &lt;a href=&quot;random#random.SystemRandom&quot;&gt;&lt;code&gt;random.SystemRandom&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的&lt;a href=&quot;secrets#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;模块提供了更高级别的功能。有关平台所提供的随机数生成器的易于使用的界面，请参见&lt;a href=&quot;random#random.SystemRandom&quot;&gt; &lt;code&gt;random.SystemRandom&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79808356e012c04c25cfc73650f064d2eaca11f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;selectors#module-selectors&quot;&gt;&lt;code&gt;selectors&lt;/code&gt;&lt;/a&gt; module allows high-level and efficient I/O multiplexing, built upon the &lt;a href=&quot;#module-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; module primitives. Users are encouraged to use the &lt;a href=&quot;selectors#module-selectors&quot;&gt;&lt;code&gt;selectors&lt;/code&gt;&lt;/a&gt; module instead, unless they want precise control over the OS-level primitives used.</source>
          <target state="translated">所述&lt;a href=&quot;selectors#module-selectors&quot;&gt; &lt;code&gt;selectors&lt;/code&gt; &lt;/a&gt;模块允许高级别和高效的I / O复用，在所述内置&lt;a href=&quot;#module-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;模块原语。鼓励用户改用&lt;a href=&quot;selectors#module-selectors&quot;&gt; &lt;code&gt;selectors&lt;/code&gt; &lt;/a&gt;模块，除非他们希望对所使用的OS级原语进行精确控制。</target>
        </trans-unit>
        <trans-unit id="49a28f80ab152e5e2358049c0893fe3c0b3a0dc6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;signal#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">该&lt;a href=&quot;signal#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="38effe416777378b22cda470a25dc6a7e848d01c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;site#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; module (which is imported automatically during startup, except if the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; command-line option is given) adds several constants to the built-in namespace. They are useful for the interactive interpreter shell and should not be used in programs.</source>
          <target state="translated">该&lt;a href=&quot;site#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt;模块（这是在启动过程中自动导入，但如果&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;命令行选项）添加了几个常数内置的命名空间。它们对于交互式解释程序外壳很有用，不应在程序中使用。</target>
        </trans-unit>
        <trans-unit id="14919082d2c0e43240913f5c516877a89499c6e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;site#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; module (which is imported automatically during startup, except if the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; command-line option is given) adds several constants to the built-in namespace. They are useful for the interactive interpreter shell and should not be used in programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ade11583d8fdf4059483f38abf928bd1432aba8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stdtypes#class.__mro__&quot;&gt;&lt;code&gt;__mro__&lt;/code&gt;&lt;/a&gt; attribute of the &lt;em&gt;object-or-type&lt;/em&gt; lists the method resolution search order used by both &lt;a href=&quot;#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt;. The attribute is dynamic and can change whenever the inheritance hierarchy is updated.</source>
          <target state="translated">&lt;em&gt;object-or-type&lt;/em&gt;的&lt;a href=&quot;stdtypes#class.__mro__&quot;&gt; &lt;code&gt;__mro__&lt;/code&gt; &lt;/a&gt;属性列出了&lt;a href=&quot;#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;所使用的方法分辨率搜索顺序。该属性是动态的，并且在继承层次结构更新时可以更改。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d3d084e9d41e4f4c212d80200f0d53e8de5452d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; class share the same syntax for format strings (although in the case of &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;, subclasses can define their own format string syntax). The syntax is related to that of &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;formatted string literals&lt;/a&gt;, but there are differences.</source>
          <target state="translated">所述&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;方法和&lt;a href=&quot;#string.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;类分担格式字符串相同的语法（虽然在的情况下&lt;a href=&quot;#string.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;，子类可以定义其自己的格式字符串语法）。语法与&lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#f-strings&quot;&gt;格式化的字符串文字&lt;/a&gt;的语法有关，但是存在差异。</target>
        </trans-unit>
        <trans-unit id="fffd25cea4dfdb966b29ab3c4d9e8e1f79cc62fc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; class share the same syntax for format strings (although in the case of &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;, subclasses can define their own format string syntax). The syntax is related to that of &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#f-strings&quot;&gt;formatted string literals&lt;/a&gt;, but there are differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b93b46d811fc398b39ecaca2fce94e92de2773" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using this function. See the &lt;a href=&quot;subprocess#subprocess-replacements&quot;&gt;Replacing Older Functions with the subprocess Module&lt;/a&gt; section in the &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; documentation for some helpful recipes.</source>
          <target state="translated">该&lt;a href=&quot;subprocess#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;模块提供了产卵新的流程和检索其结果更加强大的工具; 使用该模块优于使用此功能。有关一些有用的食谱，请参见&lt;a href=&quot;subprocess#subprocess-replacements&quot;&gt;子&lt;/a&gt;&lt;a href=&quot;subprocess#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;文档中的用子过程模块替换较早的功能部分。</target>
        </trans-unit>
        <trans-unit id="02fda4db0686e8cf23f242cc65ce3efd8b28cefc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;text#textservices&quot;&gt;Text Processing Services&lt;/a&gt; section of the standard library covers a number of other modules that provide various text related utilities (including regular expression support in the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module).</source>
          <target state="translated">标准库的&amp;ldquo; &lt;a href=&quot;text#textservices&quot;&gt;文本处理服务&amp;rdquo;&lt;/a&gt;部分涵盖了许多其他模块，这些模块提供了各种与文本相关的实用程序（包括&lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt;模块中的正则表达式支持）。</target>
        </trans-unit>
        <trans-unit id="bb5820ab12ab63458bab2d4624fdd0e942a0e50e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tokenize#tokenize.open&quot;&gt;&lt;code&gt;tokenize.open()&lt;/code&gt;&lt;/a&gt; function is used to open files. This function uses &lt;a href=&quot;tokenize#tokenize.detect_encoding&quot;&gt;&lt;code&gt;tokenize.detect_encoding()&lt;/code&gt;&lt;/a&gt; to get the encoding of the file; in the absence of an encoding token, the file encoding defaults to UTF-8.</source>
          <target state="translated">该&lt;a href=&quot;tokenize#tokenize.open&quot;&gt; &lt;code&gt;tokenize.open()&lt;/code&gt; &lt;/a&gt;函数是用来打开文件。该函数使用&lt;a href=&quot;tokenize#tokenize.detect_encoding&quot;&gt; &lt;code&gt;tokenize.detect_encoding()&lt;/code&gt; &lt;/a&gt;来获取文件的编码。在没有编码令牌的情况下，文件编码默认为UTF-8。</target>
        </trans-unit>
        <trans-unit id="e3d58c07fec169dbcdb3df24325c1d256766749d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; cases generated by &lt;a href=&quot;#doctest.DocTestSuite&quot;&gt;&lt;code&gt;DocTestSuite()&lt;/code&gt;&lt;/a&gt; support the &lt;a href=&quot;#doctest.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; method defined by &lt;a href=&quot;unittest#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;所产生的情况下&lt;a href=&quot;#doctest.DocTestSuite&quot;&gt; &lt;code&gt;DocTestSuite()&lt;/code&gt; &lt;/a&gt;支持&lt;a href=&quot;#doctest.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;由下式定义的方法&lt;a href=&quot;unittest#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; 生成&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3e525132d5ae456f3d840eb956b446a76191a36" translate="yes" xml:space="preserve">
          <source>The &lt;code id=&quot;index-16&quot;&gt;TZ&lt;/code&gt; environment variable should contain no whitespace.</source>
          <target state="translated">该 &lt;code id=&quot;index-16&quot;&gt;TZ&lt;/code&gt; 环境变量应该包含没有空格。</target>
        </trans-unit>
        <trans-unit id="4df849fd3a6c6323909eb01638af5828a8b08ba7" translate="yes" xml:space="preserve">
          <source>The &lt;code id=&quot;index-4&quot;&gt;no_proxy&lt;/code&gt; environment variable can be used to specify hosts which shouldn&amp;rsquo;t be reached via proxy; if set, it should be a comma-separated list of hostname suffixes, optionally with &lt;code&gt;:port&lt;/code&gt; appended, for example &lt;code&gt;cern.ch,ncsa.uiuc.edu,some.host:8080&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code id=&quot;index-4&quot;&gt;no_proxy&lt;/code&gt; 环境变量可以用于指定不应该经由代理到达主机; 如果设置的话，它应该是一个用逗号分隔的主机名后缀列表，可以选择在 &lt;code&gt;cern.ch,ncsa.uiuc.edu,some.host:8080&lt;/code&gt; 附加 &lt;code&gt;:port&lt;/code&gt; ，例如cern.ch，ncsa.uiuc.edu，some.host：8080。</target>
        </trans-unit>
        <trans-unit id="124717b2376ede57740fad89729551e596c6a01f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%(prog)s&lt;/code&gt; format specifier is available to fill in the program name in your usage messages.</source>
          <target state="translated">该 &lt;code&gt;%(prog)s&lt;/code&gt; 格式说明的问世，填补了该程序的名称在您的使用情况的信息。</target>
        </trans-unit>
        <trans-unit id="a1e6968cbd74079cf51599969bef7c4705220d9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%&lt;/code&gt; and &lt;code&gt;//&lt;/code&gt; operators implement the &lt;code&gt;remainder&lt;/code&gt; and &lt;code&gt;divide-integer&lt;/code&gt; operations (respectively) as described in the specification.</source>
          <target state="translated">的 &lt;code&gt;%&lt;/code&gt; 和 &lt;code&gt;//&lt;/code&gt; 运营商实现的 &lt;code&gt;remainder&lt;/code&gt; 和 &lt;code&gt;divide-integer&lt;/code&gt; 如说明书中描述的操作（分别地）。</target>
        </trans-unit>
        <trans-unit id="26fc765bc88715c46b879eccb94104c2e8a58922" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'#'&lt;/code&gt; option causes the &amp;ldquo;alternate form&amp;rdquo; to be used for the conversion. The alternate form is defined differently for different types. This option is only valid for integer, float, complex and Decimal types. For integers, when binary, octal, or hexadecimal output is used, this option adds the prefix respective &lt;code&gt;'0b'&lt;/code&gt;, &lt;code&gt;'0o'&lt;/code&gt;, or &lt;code&gt;'0x'&lt;/code&gt; to the output value. For floats, complex and Decimal the alternate form causes the result of the conversion to always contain a decimal-point character, even if no digits follow it. Normally, a decimal-point character appears in the result of these conversions only if a digit follows it. In addition, for &lt;code&gt;'g'&lt;/code&gt; and &lt;code&gt;'G'&lt;/code&gt; conversions, trailing zeros are not removed from the result.</source>
          <target state="translated">的 &lt;code&gt;'#'&lt;/code&gt; 选项将导致&amp;ldquo;替换形式&amp;rdquo;将被用于所述转化。替代形式针对不同类型的定义不同。此选项仅对整数，浮点数，复数和小数类型有效。对于整数，当使用二进制，八进制或十六进制输出时，此选项将前缀 &lt;code&gt;'0b'&lt;/code&gt; ， &lt;code&gt;'0o'&lt;/code&gt; 或 &lt;code&gt;'0x'&lt;/code&gt; 到输出值。对于浮点数，复数和小数，备用格式会导致转换结果始终包含小数点字符，即使后面没有数字也是如此。通常，只有在数字后面跟随小数点字符，这些转换的结果才会出现。另外，对于 &lt;code&gt;'g'&lt;/code&gt; 和 &lt;code&gt;'G'&lt;/code&gt; 转换，尾随零不会从结果中删除。</target>
        </trans-unit>
        <trans-unit id="d086e8403ba4ce40550b0cbe1abec1085dab4b24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'%'&lt;/code&gt; character, which marks the start of the specifier.</source>
          <target state="translated">在 &lt;code&gt;'%'&lt;/code&gt; 字符，说明符的这标志着开始。</target>
        </trans-unit>
        <trans-unit id="29578cc20ffa9483eee996d330ad586d947c7483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'*'&lt;/code&gt;, &lt;code&gt;'+'&lt;/code&gt;, and &lt;code&gt;'?'&lt;/code&gt; qualifiers are all &lt;em&gt;greedy&lt;/em&gt;; they match as much text as possible. Sometimes this behaviour isn&amp;rsquo;t desired; if the RE &lt;code&gt;&amp;lt;.*&amp;gt;&lt;/code&gt; is matched against &lt;code&gt;'&amp;lt;a&amp;gt; b &amp;lt;c&amp;gt;'&lt;/code&gt;, it will match the entire string, and not just &lt;code&gt;'&amp;lt;a&amp;gt;'&lt;/code&gt;. Adding &lt;code&gt;?&lt;/code&gt; after the qualifier makes it perform the match in &lt;em&gt;non-greedy&lt;/em&gt; or &lt;em&gt;minimal&lt;/em&gt; fashion; as &lt;em&gt;few&lt;/em&gt; characters as possible will be matched. Using the RE &lt;code&gt;&amp;lt;.*?&amp;gt;&lt;/code&gt; will match only &lt;code&gt;'&amp;lt;a&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;'*'&lt;/code&gt; ， &lt;code&gt;'+'&lt;/code&gt; 和 &lt;code&gt;'?'&lt;/code&gt; 限定词都是&lt;em&gt;贪婪的&lt;/em&gt; ;它们匹配尽可能多的文本。有时，这种行为是不希望的。如果RE &lt;code&gt;&amp;lt;.*&amp;gt;&lt;/code&gt; 与 &lt;code&gt;'&amp;lt;a&amp;gt; b &amp;lt;c&amp;gt;'&lt;/code&gt; 匹配，它将匹配整个字符串，而不仅仅是 &lt;code&gt;'&amp;lt;a&amp;gt;'&lt;/code&gt; 。加上 &lt;code&gt;?&lt;/code&gt; 限定符使它以&lt;em&gt;非贪婪&lt;/em&gt;或&lt;em&gt;最小的&lt;/em&gt;方式执行比赛之后；尽可能&lt;em&gt;少的&lt;/em&gt;字符将被匹配。使用RE &lt;code&gt;&amp;lt;.*?&amp;gt;&lt;/code&gt; 仅匹配 &lt;code&gt;'&amp;lt;a&amp;gt;'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9ecb205841d6a4b96487d164ca5b87434878f2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;','&lt;/code&gt; option signals the use of a comma for a thousands separator. For a locale aware separator, use the &lt;code&gt;'n'&lt;/code&gt; integer presentation type instead.</source>
          <target state="translated">该 &lt;code&gt;','&lt;/code&gt; 选项标志着一个千位分隔符使用逗号。对于可识别语言环境的分隔符，请改用 &lt;code&gt;'n'&lt;/code&gt; 整数表示类型。</target>
        </trans-unit>
        <trans-unit id="4bede3f058d1080c59bb7223d2576a9639b17ed5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'?'&lt;/code&gt; conversion code corresponds to the &lt;code&gt;_Bool&lt;/code&gt; type defined by C99. If this type is not available, it is simulated using a &lt;code&gt;char&lt;/code&gt;. In standard mode, it is always represented by one byte.</source>
          <target state="translated">在 &lt;code&gt;'?'&lt;/code&gt; 转换代码对应于C99定义的 &lt;code&gt;_Bool&lt;/code&gt; 类型。如果此类型不可用，则使用 &lt;code&gt;char&lt;/code&gt; 模拟它。在标准模式下，它始终由一个字节表示。</target>
        </trans-unit>
        <trans-unit id="2cbabc01b5030a839af16dd31d6d1582669f469f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'P'&lt;/code&gt; format character is only available for the native byte ordering (selected as the default or with the &lt;code&gt;'@'&lt;/code&gt; byte order character). The byte order character &lt;code&gt;'='&lt;/code&gt; chooses to use little- or big-endian ordering based on the host system. The struct module does not interpret this as native ordering, so the &lt;code&gt;'P'&lt;/code&gt; format is not available.</source>
          <target state="translated">将 &lt;code&gt;'P'&lt;/code&gt; 格式字符仅适用于本地字节顺序（选择为默认或与 &lt;code&gt;'@'&lt;/code&gt; 字节顺序字符）。字节顺序字符 &lt;code&gt;'='&lt;/code&gt; 选择基于主机系统使用小端或大端顺序。 struct模块不会将其解释为本地顺序，因此 &lt;code&gt;'P'&lt;/code&gt; 格式不可用。</target>
        </trans-unit>
        <trans-unit id="684c972da1ab1e572962745d55ed7035986dfd64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'_'&lt;/code&gt; option signals the use of an underscore for a thousands separator for floating point presentation types and for integer presentation type &lt;code&gt;'d'&lt;/code&gt;. For integer presentation types &lt;code&gt;'b'&lt;/code&gt;, &lt;code&gt;'o'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, and &lt;code&gt;'X'&lt;/code&gt;, underscores will be inserted every 4 digits. For other presentation types, specifying this option is an error.</source>
          <target state="translated">该 &lt;code&gt;'_'&lt;/code&gt; 选项信号使用下划线的为几千分离器，用于浮点呈现类型和整数表示类型 &lt;code&gt;'d'&lt;/code&gt; 。对于整数表示类型 &lt;code&gt;'b'&lt;/code&gt; ， &lt;code&gt;'o'&lt;/code&gt; ， &lt;code&gt;'x'&lt;/code&gt; 和 &lt;code&gt;'X'&lt;/code&gt; ，下划线将每4位插入一次。对于其他演示文稿类型，指定此选项是错误的。</target>
        </trans-unit>
        <trans-unit id="2dab823989a3bfcb1eb81a87c5a993cedef1847d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'d'&lt;/code&gt; and &lt;code&gt;'i'&lt;/code&gt; arguments used when creating &lt;code&gt;num&lt;/code&gt; and &lt;code&gt;arr&lt;/code&gt; are typecodes of the kind used by the &lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; module: &lt;code&gt;'d'&lt;/code&gt; indicates a double precision float and &lt;code&gt;'i'&lt;/code&gt; indicates a signed integer. These shared objects will be process and thread-safe.</source>
          <target state="translated">创建 &lt;code&gt;num&lt;/code&gt; 和 &lt;code&gt;arr&lt;/code&gt; 时使用的 &lt;code&gt;'d'&lt;/code&gt; 和 &lt;code&gt;'i'&lt;/code&gt; 参数是&lt;a href=&quot;array#module-array&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;模块使用的类型的类型代码： &lt;code&gt;'d'&lt;/code&gt; 表示双精度浮点数， &lt;code&gt;'i'&lt;/code&gt; 表示有符号整数。这些共享对象将是进程和线程安全的。</target>
        </trans-unit>
        <trans-unit id="f27e8e197e546ffdcfe9c93e4f87bfb1b8dd4be4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'n'&lt;/code&gt; and &lt;code&gt;'N'&lt;/code&gt; conversion codes are only available for the native size (selected as the default or with the &lt;code&gt;'@'&lt;/code&gt; byte order character). For the standard size, you can use whichever of the other integer formats fits your application.</source>
          <target state="translated">在 &lt;code&gt;'n'&lt;/code&gt; 和 &lt;code&gt;'N'&lt;/code&gt; 转换码只适用于本机的大小（选择为默认或与 &lt;code&gt;'@'&lt;/code&gt; 字节顺序字符）。对于标准大小，您可以使用适合您的应用程序的任何其他整数格式。</target>
        </trans-unit>
        <trans-unit id="0f505078713789f13c3c23c17c695637662859e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'namereplace'&lt;/code&gt; error handler was added.</source>
          <target state="translated">该 &lt;code&gt;'namereplace'&lt;/code&gt; 添加错误处理程序。</target>
        </trans-unit>
        <trans-unit id="b3a9b42db88708058f73659938e683f11a352cea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'p'&lt;/code&gt; format character encodes a &amp;ldquo;Pascal string&amp;rdquo;, meaning a short variable-length string stored in a &lt;em&gt;fixed number of bytes&lt;/em&gt;, given by the count. The first byte stored is the length of the string, or 255, whichever is smaller. The bytes of the string follow. If the string passed in to &lt;a href=&quot;#struct.pack&quot;&gt;&lt;code&gt;pack()&lt;/code&gt;&lt;/a&gt; is too long (longer than the count minus 1), only the leading &lt;code&gt;count-1&lt;/code&gt; bytes of the string are stored. If the string is shorter than &lt;code&gt;count-1&lt;/code&gt;, it is padded with null bytes so that exactly count bytes in all are used. Note that for &lt;a href=&quot;#struct.unpack&quot;&gt;&lt;code&gt;unpack()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;'p'&lt;/code&gt; format character consumes &lt;code&gt;count&lt;/code&gt; bytes, but that the string returned can never contain more than 255 bytes.</source>
          <target state="translated">的 &lt;code&gt;'p'&lt;/code&gt; 格式字符编码&amp;ldquo;帕斯卡串&amp;rdquo;，意思是存储在一个很短的可变长度的字符串&lt;em&gt;的固定数目的字节&lt;/em&gt;，由计数给出。存储的第一个字节是字符串的长度，即255，以较小者为准。字符串的字节。如果传递给&lt;a href=&quot;#struct.pack&quot;&gt; &lt;code&gt;pack()&lt;/code&gt; &lt;/a&gt;的字符串太长（大于count减1），则仅存储该字符串的前 &lt;code&gt;count-1&lt;/code&gt; 个字节。如果字符串短于 &lt;code&gt;count-1&lt;/code&gt; ，则将其填充为空字节，以便使用所有字节中的精确计数字节。请注意，对于&lt;a href=&quot;#struct.unpack&quot;&gt; &lt;code&gt;unpack()&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;'p'&lt;/code&gt; 格式字符消耗 &lt;code&gt;count&lt;/code&gt; 个字节，但返回的字符串不能包含超过255个字节。</target>
        </trans-unit>
        <trans-unit id="57a200ea9356e51b01fb419cb534f48ddc87b1df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'spawn'&lt;/code&gt; and &lt;code&gt;'forkserver'&lt;/code&gt; start methods cannot currently be used with &amp;ldquo;frozen&amp;rdquo; executables (i.e., binaries produced by packages like &lt;strong&gt;PyInstaller&lt;/strong&gt; and &lt;strong&gt;cx_Freeze&lt;/strong&gt;) on Unix. The &lt;code&gt;'fork'&lt;/code&gt; start method does work.</source>
          <target state="translated">在Unix上，当前无法将 &lt;code&gt;'spawn'&lt;/code&gt; 和 &lt;code&gt;'forkserver'&lt;/code&gt; 启动方法与&amp;ldquo;冻结&amp;rdquo;的可执行文件（即，由&lt;strong&gt;PyInstaller&lt;/strong&gt;和&lt;strong&gt;cx_Freeze之&lt;/strong&gt;类的程序包生成的二进制文件）一起使用。该 &lt;code&gt;'fork'&lt;/code&gt; start方法确实可行。</target>
        </trans-unit>
        <trans-unit id="adef4fc3618584c3f50f2758661fb96fa19c2234" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'u'&lt;/code&gt; type code corresponds to Python&amp;rsquo;s obsolete unicode character (&lt;a href=&quot;https://docs.python.org/3.8/c-api/unicode.html#c.Py_UNICODE&quot;&gt;&lt;code&gt;Py_UNICODE&lt;/code&gt;&lt;/a&gt; which is &lt;code&gt;wchar_t&lt;/code&gt;). Depending on the platform, it can be 16 bits or 32 bits.</source>
          <target state="translated">所述 &lt;code&gt;'u'&lt;/code&gt; 型码对应于Python的过时的Unicode字符（&lt;a href=&quot;https://docs.python.org/3.8/c-api/unicode.html#c.Py_UNICODE&quot;&gt; &lt;code&gt;Py_UNICODE&lt;/code&gt; &lt;/a&gt;这是 &lt;code&gt;wchar_t&lt;/code&gt; 的）。根据平台的不同，它可以是16位或32位。</target>
        </trans-unit>
        <trans-unit id="1c947a2e5b4b365958137ab1c93d552f460d46b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'x'&lt;/code&gt; mode was added.</source>
          <target state="translated">所述 &lt;code&gt;'x'&lt;/code&gt; 的溶液中加入模式。</target>
        </trans-unit>
        <trans-unit id="7bbeb9294fba3141e309a6b58e12d5136a037789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.pyc&lt;/code&gt; file includes a hash of the source file content, which Python will compare against the source at runtime to determine if the &lt;code&gt;.pyc&lt;/code&gt; file needs to be regenerated.</source>
          <target state="translated">的 &lt;code&gt;.pyc&lt;/code&gt; 文件包括源文件内容的散列值，该Python将与之比较的源在运行时以确定是否 &lt;code&gt;.pyc&lt;/code&gt; 文件被再生文件的需要。</target>
        </trans-unit>
        <trans-unit id="41102abee06a7be2913a11ad4a23f9f58926e024" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.pyc&lt;/code&gt; file includes the timestamp and size of the source file, which Python will compare against the metadata of the source file at runtime to determine if the &lt;code&gt;.pyc&lt;/code&gt; file needs to be regenerated.</source>
          <target state="translated">的 &lt;code&gt;.pyc&lt;/code&gt; 文件包括源文件的时间戳和大小，这Python将比较对源文件的元数据在运行时以确定是否 &lt;code&gt;.pyc&lt;/code&gt; 文件被再生文件的需要。</target>
        </trans-unit>
        <trans-unit id="a573c16cb80e8fe9674796ab260ceb7cbc3fe3e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:?&lt;/code&gt; pattern matches the colon after the last name, so that it does not occur in the result list. With a &lt;code&gt;maxsplit&lt;/code&gt; of &lt;code&gt;4&lt;/code&gt;, we could separate the house number from the street name:</source>
          <target state="translated">的 &lt;code&gt;:?&lt;/code&gt; pattern匹配姓氏后的冒号，因此它不会出现在结果列表中。最大 &lt;code&gt;maxsplit&lt;/code&gt; 为 &lt;code&gt;4&lt;/code&gt; 时，我们可以将门牌号与街道名分开：</target>
        </trans-unit>
        <trans-unit id="cc57d505c38b0eb494f685993037d2665517e08a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@classmethod&lt;/code&gt; form is a function &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; &amp;ndash; see &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#function&quot;&gt;Function definitions&lt;/a&gt; for details.</source>
          <target state="translated">该 &lt;code&gt;@classmethod&lt;/code&gt; 形式是一个函数&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;装饰&lt;/a&gt; -见&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#function&quot;&gt;函数定义&lt;/a&gt;的详细信息。</target>
        </trans-unit>
        <trans-unit id="b6aaeb7e6705ba8c458b54f1a0b68893eb89642b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@classmethod&lt;/code&gt; form is a function &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; &amp;ndash; see &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#function&quot;&gt;Function definitions&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cdc6e71c4a11c2ee7cd108a9fa0910a7827a59b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@overload&lt;/code&gt; decorator allows describing functions and methods that support multiple different combinations of argument types. A series of &lt;code&gt;@overload&lt;/code&gt;-decorated definitions must be followed by exactly one non-&lt;code&gt;@overload&lt;/code&gt;-decorated definition (for the same function/method). The &lt;code&gt;@overload&lt;/code&gt;-decorated definitions are for the benefit of the type checker only, since they will be overwritten by the non-&lt;code&gt;@overload&lt;/code&gt;-decorated definition, while the latter is used at runtime but should be ignored by a type checker. At runtime, calling a &lt;code&gt;@overload&lt;/code&gt;-decorated function directly will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;. An example of overload that gives a more precise type than can be expressed using a union or a type variable:</source>
          <target state="translated">所述 &lt;code&gt;@overload&lt;/code&gt; 装饰允许描述支持参数类型的多个不同的组合的功能和方法。必须在一系列 &lt;code&gt;@overload&lt;/code&gt; 装饰的定义之后紧跟一个非 &lt;code&gt;@overload&lt;/code&gt; 装饰的定义（对于相同的函数/方法）。该 &lt;code&gt;@overload&lt;/code&gt; -decorated定义仅用于类型检查的好处，因为它们将被覆盖在非 &lt;code&gt;@overload&lt;/code&gt; -decorated定义，而后者则是在运行时使用，但应该由一个类型检查被忽略。在运行时，直接调用 &lt;code&gt;@overload&lt;/code&gt; -decorated函数将引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。重载的示例提供了比使用联合或类型变量可以表达的类型更精确的类型：</target>
        </trans-unit>
        <trans-unit id="86d1c0468eec97ef063c81a25b38effe8beb236a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@property&lt;/code&gt; decorator turns the &lt;code&gt;voltage()&lt;/code&gt; method into a &amp;ldquo;getter&amp;rdquo; for a read-only attribute with the same name, and it sets the docstring for &lt;em&gt;voltage&lt;/em&gt; to &amp;ldquo;Get the current voltage.&amp;rdquo;</source>
          <target state="translated">该 &lt;code&gt;@property&lt;/code&gt; 装饰接通 &lt;code&gt;voltage()&lt;/code&gt; 方法变成&amp;ldquo;吸&amp;rdquo;与同名的只读属性，并将其设置的文档字符串的&lt;em&gt;电压&lt;/em&gt;为&amp;ldquo;获取当前的电压。&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="e9a0de22a543be5823e8fc00bdf1bc19e1836998" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@staticmethod&lt;/code&gt; form is a function &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; &amp;ndash; see &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#function&quot;&gt;Function definitions&lt;/a&gt; for details.</source>
          <target state="translated">该 &lt;code&gt;@staticmethod&lt;/code&gt; 形式是一个函数&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;装饰&lt;/a&gt; -见&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#function&quot;&gt;函数定义&lt;/a&gt;的详细信息。</target>
        </trans-unit>
        <trans-unit id="d3e96df58c29cecd31607f9c1ef75e93f322d896" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@staticmethod&lt;/code&gt; form is a function &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; &amp;ndash; see &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#function&quot;&gt;Function definitions&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1134bfad7e728a8c50f8c0e2b0e36568e03a0665" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AUTH&lt;/code&gt; command is not supported by the server.</source>
          <target state="translated">该 &lt;code&gt;AUTH&lt;/code&gt; 命令不被服务器支持。</target>
        </trans-unit>
        <trans-unit id="72a7880652409c5976ca3dfe4bf7cf1e1ffc4d1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Any&lt;/code&gt; type</source>
          <target state="translated">在 &lt;code&gt;Any&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="08ef83d6c825495ed685c5e095ac1ea8add9f9a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attributes&lt;/code&gt; Interface</source>
          <target state="translated">该 &lt;code&gt;Attributes&lt;/code&gt; 界面</target>
        </trans-unit>
        <trans-unit id="5d5712e868fcd76470aa0d1b67f60f6da25288af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AttributesNS&lt;/code&gt; Interface</source>
          <target state="translated">该 &lt;code&gt;AttributesNS&lt;/code&gt; 接口</target>
        </trans-unit>
        <trans-unit id="1866cebe2c58853ca647a2457b47007a6b73cab7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CAN_BCM_CAN_FD_FRAME&lt;/code&gt; flag is only available on Linux &amp;gt;= 4.8.</source>
          <target state="translated">所述 &lt;code&gt;CAN_BCM_CAN_FD_FRAME&lt;/code&gt; 标志仅在Linux&amp;gt; = 4.8可用。</target>
        </trans-unit>
        <trans-unit id="4328f0909355ebc7b140a3c105fbd8ceaf492a6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; interface provides a way for applications to determine the availability of particular features in the DOM they are using. DOM Level 2 added the ability to create new &lt;code&gt;Document&lt;/code&gt; and &lt;code&gt;DocumentType&lt;/code&gt; objects using the &lt;code&gt;DOMImplementation&lt;/code&gt; as well.</source>
          <target state="translated">所述 &lt;code&gt;DOMImplementation&lt;/code&gt; 接口为应用程序提供，以确定在他们正在使用的特定DOM功能的可用性的方法。DOM级别2还添加了使用 &lt;code&gt;DOMImplementation&lt;/code&gt; 创建新 &lt;code&gt;Document&lt;/code&gt; 和 &lt;code&gt;DocumentType&lt;/code&gt; 对象的功能。</target>
        </trans-unit>
        <trans-unit id="0bd042f9643500040934fccf45f911e84b360110" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DistributionFinder.Context&lt;/code&gt; object provides &lt;code&gt;.path&lt;/code&gt; and &lt;code&gt;.name&lt;/code&gt; properties indicating the path to search and name to match and may supply other relevant context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb6ddc3543e53a154f8edc359027b84c0cc9c41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DistributionFinder.Context&lt;/code&gt; object provides &lt;code&gt;.path&lt;/code&gt; and &lt;code&gt;.name&lt;/code&gt; properties indicating the path to search and names to match and may supply other relevant context.</source>
          <target state="translated">所述 &lt;code&gt;DistributionFinder.Context&lt;/code&gt; 对象提供 &lt;code&gt;.path&lt;/code&gt; 和 &lt;code&gt;.name&lt;/code&gt; 属性指示的路径搜索和名称匹配，并且可以提供其他相关的情境。</target>
        </trans-unit>
        <trans-unit id="595f270592a8413c36ba336bfcceb50a835ab5b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EnumMeta&lt;/code&gt; metaclass is responsible for providing the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__dir__&quot;&gt;&lt;code&gt;__dir__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and other methods that allow one to do things with an &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class that fail on a typical class, such as &lt;code&gt;list(Color)&lt;/code&gt; or &lt;code&gt;some_enum_var in Color&lt;/code&gt;. &lt;code&gt;EnumMeta&lt;/code&gt; is responsible for ensuring that various other methods on the final &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class are correct (such as &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pickle#object.__getnewargs__&quot;&gt;&lt;code&gt;__getnewargs__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">该 &lt;code&gt;EnumMeta&lt;/code&gt; 元类是负责提供&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__dir__&quot;&gt; &lt;code&gt;__dir__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;等方法，让一个做事情的&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;是一个典型的类失败类，如 &lt;code&gt;list(Color)&lt;/code&gt; 或 &lt;code&gt;some_enum_var in Color&lt;/code&gt; 。 &lt;code&gt;EnumMeta&lt;/code&gt; 负责确保最终&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;类上的各种其他方法正确（例如&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;pickle#object.__getnewargs__&quot;&gt; &lt;code&gt;__getnewargs__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__str__&quot;&gt; &lt;code&gt;__str__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;和__repr __（））。</target>
        </trans-unit>
        <trans-unit id="cd3716f8df7c80c6fce05a5466ea572bbd0351d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EnumMeta&lt;/code&gt; metaclass is responsible for providing the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__dir__&quot;&gt;&lt;code&gt;__dir__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and other methods that allow one to do things with an &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class that fail on a typical class, such as &lt;code&gt;list(Color)&lt;/code&gt; or &lt;code&gt;some_enum_var in Color&lt;/code&gt;. &lt;code&gt;EnumMeta&lt;/code&gt; is responsible for ensuring that various other methods on the final &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; class are correct (such as &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pickle#object.__getnewargs__&quot;&gt;&lt;code&gt;__getnewargs__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d69ba1589530352dd1f5dd4e45bac251bfe088b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FieldStorage&lt;/code&gt; instance can be indexed like a Python dictionary. It allows membership testing with the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator, and also supports the standard dictionary method &lt;a href=&quot;stdtypes#dict.keys&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; and the built-in function &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;. Form fields containing empty strings are ignored and do not appear in the dictionary; to keep such values, provide a true value for the optional &lt;em&gt;keep_blank_values&lt;/em&gt; keyword parameter when creating the &lt;code&gt;FieldStorage&lt;/code&gt; instance.</source>
          <target state="translated">该 &lt;code&gt;FieldStorage&lt;/code&gt; 实例可以被索引像Python字典。它允许使用&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;运算符进行成员资格测试，并且还支持标准的字典方法&lt;a href=&quot;stdtypes#dict.keys&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt;和内置函数&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; &lt;/a&gt;。包含空字符串的表单字段将被忽略，并且不会出现在字典中；要保留这些值，请在创建 &lt;code&gt;FieldStorage&lt;/code&gt; 实例时为可选的&lt;em&gt;keep_blank_values&lt;/em&gt;关键字参数提供一个真值。</target>
        </trans-unit>
        <trans-unit id="7d2c63c528c0970fd3a15f4bafffcfe48735cd91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FieldStorage&lt;/code&gt; instance can be indexed like a Python dictionary. It allows membership testing with the &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator, and also supports the standard dictionary method &lt;a href=&quot;stdtypes#dict.keys&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; and the built-in function &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;. Form fields containing empty strings are ignored and do not appear in the dictionary; to keep such values, provide a true value for the optional &lt;em&gt;keep_blank_values&lt;/em&gt; keyword parameter when creating the &lt;code&gt;FieldStorage&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dc24c826f8e764cd6a52aabe4b2d0ff667e7b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GenericAlias&lt;/code&gt; object acts as a proxy for &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generic-type&quot;&gt;generic types&lt;/a&gt;, implementing &lt;em&gt;parameterized generics&lt;/em&gt; - a specific instance of a generic which provides the types for container elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc007293220ad574c1fcd983a7ec8c5d4fbd6307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Lib/turtledemo&lt;/code&gt; directory contains a &lt;code&gt;turtle.cfg&lt;/code&gt; file. You can study it as an example and see its effects when running the demos (preferably not from within the demo-viewer).</source>
          <target state="translated">该 &lt;code&gt;Lib/turtledemo&lt;/code&gt; 目录包含 &lt;code&gt;turtle.cfg&lt;/code&gt; 文件。您可以作为示例进行研究，并在运行演示时查看其效果（最好不要从演示查看器中查看）。</target>
        </trans-unit>
        <trans-unit id="ae122c966f98b743129b8e2eb8ae111c4c5f37fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MessageBox&lt;/code&gt; foreign function can now be called in these ways:</source>
          <target state="translated">该 &lt;code&gt;MessageBox&lt;/code&gt; 外部函数，现在可以叫在这些方面：</target>
        </trans-unit>
        <trans-unit id="e14135cf6dd26c3e1d281555a749c86475cd4969" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;None&lt;/code&gt; constant. Passing is allowed only if &lt;em&gt;allow_none&lt;/em&gt; is true.</source>
          <target state="translated">该 &lt;code&gt;None&lt;/code&gt; 定。仅当&lt;em&gt;allow_none&lt;/em&gt;为true 时才允许传递。</target>
        </trans-unit>
        <trans-unit id="0dc13f9481c47256735a6380f63398af874a2bd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Package&lt;/code&gt; type is defined as &lt;code&gt;Union[str, ModuleType]&lt;/code&gt;. This means that where the function describes accepting a &lt;code&gt;Package&lt;/code&gt;, you can pass in either a string or a module. Module objects must have a resolvable &lt;code&gt;__spec__.submodule_search_locations&lt;/code&gt; that is not &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Package&lt;/code&gt; 类型被定义为 &lt;code&gt;Union[str, ModuleType]&lt;/code&gt; 。这意味着在函数描述接受 &lt;code&gt;Package&lt;/code&gt; 的地方，您可以传入字符串或模块。模块对象必须具有可解析的 &lt;code&gt;__spec__.submodule_search_locations&lt;/code&gt; ，而不是 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4f32e3fb82b3c83abc395d93958c1777b6e5e38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SMTP&lt;/code&gt; class provides &lt;code&gt;authobjects&lt;/code&gt; for the &lt;code&gt;CRAM-MD5&lt;/code&gt;, &lt;code&gt;PLAIN&lt;/code&gt;, and &lt;code&gt;LOGIN&lt;/code&gt; mechanisms; they are named &lt;code&gt;SMTP.auth_cram_md5&lt;/code&gt;, &lt;code&gt;SMTP.auth_plain&lt;/code&gt;, and &lt;code&gt;SMTP.auth_login&lt;/code&gt; respectively. They all require that the &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; properties of the &lt;code&gt;SMTP&lt;/code&gt; instance are set to appropriate values.</source>
          <target state="translated">的 &lt;code&gt;SMTP&lt;/code&gt; 类提供 &lt;code&gt;authobjects&lt;/code&gt; 为 &lt;code&gt;CRAM-MD5&lt;/code&gt; ， &lt;code&gt;PLAIN&lt;/code&gt; 和 &lt;code&gt;LOGIN&lt;/code&gt; 机制; 它们分别命名为 &lt;code&gt;SMTP.auth_cram_md5&lt;/code&gt; ， &lt;code&gt;SMTP.auth_plain&lt;/code&gt; 和 &lt;code&gt;SMTP.auth_login&lt;/code&gt; 。它们都要求将 &lt;code&gt;SMTP&lt;/code&gt; 实例的 &lt;code&gt;user&lt;/code&gt; 和 &lt;code&gt;password&lt;/code&gt; 属性设置为适当的值。</target>
        </trans-unit>
        <trans-unit id="7a1cf223256389df786f4a089e7a5f771da06658" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stats&lt;/code&gt; Class</source>
          <target state="translated">该 &lt;code&gt;Stats&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="7b6323f0d9a01c8bacf864cdae4d5a57325ea708" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TYPEDESC&lt;/code&gt; structure describes a COM data type, the &lt;code&gt;vt&lt;/code&gt; field specifies which one of the union fields is valid. Since the &lt;code&gt;u&lt;/code&gt; field is defined as anonymous field, it is now possible to access the members directly off the TYPEDESC instance. &lt;code&gt;td.lptdesc&lt;/code&gt; and &lt;code&gt;td.u.lptdesc&lt;/code&gt; are equivalent, but the former is faster since it does not need to create a temporary union instance:</source>
          <target state="translated">该 &lt;code&gt;TYPEDESC&lt;/code&gt; 结构描述了COM数据类型时， &lt;code&gt;vt&lt;/code&gt; 字段指定了将联字段之一是有效的。由于 &lt;code&gt;u&lt;/code&gt; 字段被定义为匿名字段，因此现在可以直接从TYPEDESC实例访问成员。 &lt;code&gt;td.lptdesc&lt;/code&gt; 和 &lt;code&gt;td.u.lptdesc&lt;/code&gt; 是等效的，但是前者更快，因为它不需要创建临时的联合实例：</target>
        </trans-unit>
        <trans-unit id="f9ea1769001491fd452c7e549a3da58d9eb40808" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Text&lt;/code&gt; interface represents text in the XML document. If the parser and DOM implementation support the DOM&amp;rsquo;s XML extension, portions of the text enclosed in CDATA marked sections are stored in &lt;code&gt;CDATASection&lt;/code&gt; objects. These two interfaces are identical, but provide different values for the &lt;code&gt;nodeType&lt;/code&gt; attribute.</source>
          <target state="translated">该 &lt;code&gt;Text&lt;/code&gt; 接口表示XML文档中的文本。如果解析器和DOM实现支持DOM的XML扩展，则CDATA标记的部分中包含的部分文本存储在 &lt;code&gt;CDATASection&lt;/code&gt; 对象中。这两个接口是相同的，但是为 &lt;code&gt;nodeType&lt;/code&gt; 属性提供了不同的值。</target>
        </trans-unit>
        <trans-unit id="f68d9bca14cc73a34996c6d88e3f294d7d02e0fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Widget&lt;/code&gt; class is not meant to be instantiated, it is meant only for subclassing to make &amp;ldquo;real&amp;rdquo; widgets (in C++, this is called an &amp;lsquo;abstract class&amp;rsquo;).</source>
          <target state="translated">该 &lt;code&gt;Widget&lt;/code&gt; 类并不意味着被实例化，是指只对继承，使&amp;ldquo;真正的&amp;rdquo;小部件（在C ++中，这被称为&amp;ldquo;抽象类&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="f76119f7d7f5e51e9e7e80db6ae0a81257e77f86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ZoneInfo&lt;/code&gt; class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0af7465a1375f42314411b1bd986ddad20382bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ZoneInfo&lt;/code&gt; class has two alternate constructors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38965a523959d58e24f76d990939a62ffc58dd68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__bool__()&lt;/code&gt; method of this class defers to this function, so instead of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a297f57cd1bc861efed1e813b4b8a2f8061b73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__call__&lt;/code&gt; method may perform arbitrary actions, but will typically set attributes on the &lt;code&gt;namespace&lt;/code&gt; based on &lt;code&gt;dest&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;__call__&lt;/code&gt; 方法可以执行任意的动作，但在通常设置的属性 &lt;code&gt;namespace&lt;/code&gt; 基于 &lt;code&gt;dest&lt;/code&gt; 和 &lt;code&gt;values&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc938070d6c39bccc58652b25fa0b1e1af788ab6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__main__&lt;/code&gt; module must be importable by worker subprocesses. This means that &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt; will not work in the interactive interpreter.</source>
          <target state="translated">在 &lt;code&gt;__main__&lt;/code&gt; 模块必须由工人子过程可导入。这意味着&lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; &lt;/a&gt;将无法在交互式解释器中工作。</target>
        </trans-unit>
        <trans-unit id="af193d5902a95c55c4324893e16623ef88c8dc8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__members__&lt;/code&gt; attribute can be used for detailed programmatic access to the enumeration members. For example, finding all the aliases:</source>
          <target state="translated">所述 &lt;code&gt;__members__&lt;/code&gt; 属性可用于详述编程访问的枚举成员。例如，找到所有别名：</target>
        </trans-unit>
        <trans-unit id="a87425a1104799def71154528dfd19ddddcfb54d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__name__&lt;/code&gt; attribute of generators is now set from the function name, instead of the code name, and it can now be modified.</source>
          <target state="translated">现在，可以从函数名称（而不是代码名称）中设置generators 的 &lt;code&gt;__name__&lt;/code&gt; 属性，并且可以对其进行修改。</target>
        </trans-unit>
        <trans-unit id="6f0dcd079a594f43bb2a22125cfba03fcfd4cb33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__suppress_context__&lt;/code&gt; value from the original exception.</source>
          <target state="translated">原始异常中的 &lt;code&gt;__suppress_context__&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="5d801a750836e869dfde19f6b1c7b5d15dae6ac6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_generate_next_value_()&lt;/code&gt; method must be defined before any members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9122ae2607633af14a0a527e56d351f46a1f76a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;args&lt;/code&gt; entry, when &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;uated in the context of the &lt;code&gt;logging&lt;/code&gt; package&amp;rsquo;s namespace, is the list of arguments to the constructor for the handler class. Refer to the constructors for the relevant handlers, or to the examples below, to see how typical entries are constructed. If not provided, it defaults to &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;args&lt;/code&gt; 条目时&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;在的情况下uated &lt;code&gt;logging&lt;/code&gt; 包的命名空间，是参数的构造函数处理程序类的列表。请参考相关处理程序的构造函数，或参考以下示例，以了解如何构造典型条目。如果未提供，则默认为 &lt;code&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b936e943ecfcd201f6a825fee01f91c8aca05480" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;asyncio&lt;/code&gt; subprocess API does not support decoding the streams as text. &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; can be used to convert the bytes returned from the stream to text.</source>
          <target state="translated">该 &lt;code&gt;asyncio&lt;/code&gt; 子API不支持流作为文本解码。&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;可用于将流返回的字节转换为文本。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
