<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="74f74bc8bf80163ce9a08ec26c023a78cc6f1351" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;name&lt;/em&gt; gives the name of the module; by default, or if &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;m.__name__&lt;/code&gt; is used.</source>
          <target state="translated">可选参数&lt;em&gt;名称&lt;/em&gt;给出模块的名称；默认情况下，或者如果为 &lt;code&gt;None&lt;/code&gt; ，则使用 &lt;code&gt;m.__name__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d52bd25fbf060bdc8c3b9ca435cbc9618a61325" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;name&lt;/em&gt; gives the name of the test; by default, or if &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;os.path.basename(filename)&lt;/code&gt; is used.</source>
          <target state="translated">可选的参数&lt;em&gt;名称&lt;/em&gt;给出测试的名称；默认情况下，或者如果为 &lt;code&gt;None&lt;/code&gt; ，则使用 &lt;code&gt;os.path.basename(filename)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6b2562f8953f1131c472b47d4b54220bb6ba548" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;name&lt;/em&gt; is used in failure messages, and defaults to &lt;code&gt;&quot;NoName&quot;&lt;/code&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;名称&lt;/em&gt;用于失败消息中，默认为 &lt;code&gt;&quot;NoName&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1699bfdd7fd20973701d3162c62bfa1f9508f5f4" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;optionflags&lt;/em&gt; (default value 0) takes the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;bitwise OR&lt;/a&gt; of option flags. See section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;optionflags&lt;/em&gt;（默认值0）采用选项标志的&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;按位或&lt;/a&gt;。请参阅&lt;a href=&quot;#doctest-options&quot;&gt;选项标志&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="417b3c80b0b119fc8a9d5170d9bda1c21a4c8d1c" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;optionflags&lt;/em&gt; (default value 0) takes the &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;bitwise OR&lt;/a&gt; of option flags. See section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759e88a19de4d4b0746cebf786891ae177aeb07c" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;optionflags&lt;/em&gt; specifies the default doctest options for the tests, created by or-ing together individual option flags. See section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt;. See function &lt;a href=&quot;#doctest.set_unittest_reportflags&quot;&gt;&lt;code&gt;set_unittest_reportflags()&lt;/code&gt;&lt;/a&gt; below for a better way to set reporting options.</source>
          <target state="translated">可选参数&lt;em&gt;optionflags&lt;/em&gt;指定测试的默认doctest选项，这些选项是通过将各个选项标志或在一起创建的。请参阅&lt;a href=&quot;#doctest-options&quot;&gt;选项标志&lt;/a&gt;部分。有关设置报告选项的更好方法，请参见下面的函数&lt;a href=&quot;#doctest.set_unittest_reportflags&quot;&gt; &lt;code&gt;set_unittest_reportflags()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="37e0a655889a74d4486c037cebbed7ffef38cab5" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;optionflags&lt;/em&gt; works as for function &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">可选参数&lt;em&gt;optionflags&lt;/em&gt;与上述功能&lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; 一样&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3866fc6b90b4f4133905c3c5543b075f06526447" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;package&lt;/em&gt; is a Python package or the name of a Python package whose directory should be used as the base directory for a module-relative filename. If no package is specified, then the calling module&amp;rsquo;s directory is used as the base directory for module-relative filenames. It is an error to specify &lt;em&gt;package&lt;/em&gt; if &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;软件包&lt;/em&gt;是Python软件包或Python软件包的名称，其目录应用作模块相对文件名的基本目录。如果未指定包，则调用模块的目录将用作模块相对文件名的基本目录。如果&lt;em&gt;module_relative&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ，则指定&lt;em&gt;包&lt;/em&gt;是错误的。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ef5b2b55ab00bb34cd92f7efcd9f129e923c313" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;package&lt;/em&gt; is a Python package or the name of a Python package whose directory should be used as the base directory for module-relative filenames in &lt;em&gt;paths&lt;/em&gt;. If no package is specified, then the calling module&amp;rsquo;s directory is used as the base directory for module-relative filenames. It is an error to specify &lt;em&gt;package&lt;/em&gt; if &lt;em&gt;module_relative&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">可选的参数&lt;em&gt;包&lt;/em&gt;是Python包或Python包的名称，其目录应用作&lt;em&gt;path中&lt;/em&gt;模块相对文件名的基本目录。如果未指定包，则调用模块的目录将用作模块相对文件名的基本目录。如果&lt;em&gt;module_relative&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ，则指定&lt;em&gt;包&lt;/em&gt;是错误的。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="94d377498ca11c8e7b908eef8487574468dd8dc7" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;parser&lt;/em&gt; specifies a &lt;a href=&quot;#doctest.DocTestParser&quot;&gt;&lt;code&gt;DocTestParser&lt;/code&gt;&lt;/a&gt; (or subclass) that should be used to extract tests from the files. It defaults to a normal parser (i.e., &lt;code&gt;DocTestParser()&lt;/code&gt;).</source>
          <target state="translated">可选参数&lt;em&gt;解析器&lt;/em&gt;指定&lt;a href=&quot;#doctest.DocTestParser&quot;&gt; &lt;code&gt;DocTestParser&lt;/code&gt; &lt;/a&gt;（或子类），应使用DocTestParser从文件中提取测试。它默认为普通解析器（即 &lt;code&gt;DocTestParser()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9519b496e1e3f651153ff9769f800e30f69b98e4" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;pm&lt;/em&gt; controls whether post-mortem debugging is used. If &lt;em&gt;pm&lt;/em&gt; has a true value, the script file is run directly, and the debugger gets involved only if the script terminates via raising an unhandled exception. If it does, then post-mortem debugging is invoked, via &lt;a href=&quot;pdb#pdb.post_mortem&quot;&gt;&lt;code&gt;pdb.post_mortem()&lt;/code&gt;&lt;/a&gt;, passing the traceback object from the unhandled exception. If &lt;em&gt;pm&lt;/em&gt; is not specified, or is false, the script is run under the debugger from the start, via passing an appropriate &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; call to &lt;a href=&quot;pdb#pdb.run&quot;&gt;&lt;code&gt;pdb.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;pm&lt;/em&gt;控制是否使用事后调试。如果&lt;em&gt;pm&lt;/em&gt;为真值，则脚本文件将直接运行，并且仅当脚本通过引发未处理的异常终止时，调试器才会参与。如果是这样，那么将通过&lt;a href=&quot;pdb#pdb.post_mortem&quot;&gt; &lt;code&gt;pdb.post_mortem()&lt;/code&gt; &lt;/a&gt;调用事后调试，从未处理的异常中传递回溯对象。如果未指定&lt;em&gt;pm&lt;/em&gt;或为&lt;em&gt;pm&lt;/em&gt;，则通过将适当的&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;调用传递给&lt;a href=&quot;pdb#pdb.run&quot;&gt; &lt;code&gt;pdb.run()&lt;/code&gt; &lt;/a&gt;，从一开始就在调试器下运行脚本。</target>
        </trans-unit>
        <trans-unit id="8a8d4fb8b6c83dfaa1d99881e69a72ea7d791e79" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;pm&lt;/em&gt; has the same meaning as in function &lt;a href=&quot;#doctest.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">可选参数&lt;em&gt;pm&lt;/em&gt;与上面的&lt;a href=&quot;#doctest.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;函数具有相同的含义。</target>
        </trans-unit>
        <trans-unit id="9dae0c1a5b97e77866ab6881abe2e777305b2301" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;raise_on_error&lt;/em&gt; defaults to false. If true, an exception is raised upon the first failure or unexpected exception in an example. This allows failures to be post-mortem debugged. Default behavior is to continue running examples.</source>
          <target state="translated">可选参数&lt;em&gt;raise_on_error&lt;/em&gt;默认为false。如果为true，则在示例中出现第一个失败或意外异常时会引发异常。这样可以对故障进行事后调试。默认行为是继续运行示例。</target>
        </trans-unit>
        <trans-unit id="56349a38f6363fc65d65da6f8b6443516a01e339" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;report&lt;/em&gt; prints a summary at the end when true, else prints nothing at the end. In verbose mode, the summary is detailed, else the summary is very brief (in fact, empty if all tests passed).</source>
          <target state="translated">可选参数&lt;em&gt;report&lt;/em&gt;为true时，最后打印摘要，否则，最后不打印任何内容。在详细模式下，摘要是详细的，否则摘要是非常简短的（实际上，如果所有测试都通过，则为空）。</target>
        </trans-unit>
        <trans-unit id="031d2124c82b980138e2af2ad0b509f59edc68b5" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;setUp&lt;/em&gt; specifies a set-up function for the test suite. This is called before running the tests in each file. The &lt;em&gt;setUp&lt;/em&gt; function will be passed a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object. The setUp function can access the test globals as the &lt;em&gt;globs&lt;/em&gt; attribute of the test passed.</source>
          <target state="translated">可选参数&lt;em&gt;setUp&lt;/em&gt;指定测试套件的设置功能。在每个文件中运行测试之前，将调用此方法。该&lt;em&gt;的setUp&lt;/em&gt;函数将被传递一个&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;对象。setUp函数可以将测试全局变量作为通过的测试的&lt;em&gt;globs&lt;/em&gt;属性来访问。</target>
        </trans-unit>
        <trans-unit id="f72389898b352b75c4f85463a108793b516a19f5" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;source&lt;/em&gt; specifies a context-specific name of the dictionary passed. If not given, &lt;code&gt;&amp;lt;dict&amp;gt;&lt;/code&gt; is used.</source>
          <target state="translated">可选参数&lt;em&gt;source&lt;/em&gt;指定所传递字典的特定于上下文的名称。如果未给出，则使用 &lt;code&gt;&amp;lt;dict&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40ff180f69c6939133c7c6bbd110c796c6aedf22" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;source&lt;/em&gt; specifies a context-specific name of the string passed. If not given, &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; is used. This should commonly be a filesystem path or a URL.</source>
          <target state="translated">可选参数&lt;em&gt;source&lt;/em&gt;指定所传递字符串的特定于上下文的名称。如果未给出，则使用 &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; 。通常应该是文件系统路径或URL。</target>
        </trans-unit>
        <trans-unit id="c3502c84642c2ef73c0ea7d6513bc9ce05709a14" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;source&lt;/em&gt; specifies the name of the file being read. If not given and &lt;em&gt;f&lt;/em&gt; has a &lt;code&gt;name&lt;/code&gt; attribute, that is used for &lt;em&gt;source&lt;/em&gt;; the default is &lt;code&gt;'&amp;lt;???&amp;gt;'&lt;/code&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;source&lt;/em&gt;指定要读取的文件的名称。如果未给出，并且&lt;em&gt;f&lt;/em&gt;具有 &lt;code&gt;name&lt;/code&gt; 属性，则该属性用于&lt;em&gt;source&lt;/em&gt;；默认值为 &lt;code&gt;'&amp;lt;???&amp;gt;'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3ffb9e4c0b3d8066cd77a81026675c48155def9" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;tearDown&lt;/em&gt; specifies a tear-down function for the test suite. This is called after running the tests in each file. The &lt;em&gt;tearDown&lt;/em&gt; function will be passed a &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object. The setUp function can access the test globals as the &lt;em&gt;globs&lt;/em&gt; attribute of the test passed.</source>
          <target state="translated">可选参数&lt;em&gt;tearDown&lt;/em&gt;指定测试套件的拆卸功能。在每个文件中运行测试后，将调用此方法。在&lt;em&gt;拆卸&lt;/em&gt;功能将被传递一个&lt;a href=&quot;#doctest.DocTest&quot;&gt; &lt;code&gt;DocTest&lt;/code&gt; &lt;/a&gt;对象。setUp函数可以将测试全局变量作为通过的测试的&lt;em&gt;globs&lt;/em&gt;属性来访问。</target>
        </trans-unit>
        <trans-unit id="b7c5453a8a662ff48ce6b05bb63a862556df9025" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;test_finder&lt;/em&gt; is the &lt;a href=&quot;#doctest.DocTestFinder&quot;&gt;&lt;code&gt;DocTestFinder&lt;/code&gt;&lt;/a&gt; object (or a drop-in replacement) that is used to extract doctests from the module.</source>
          <target state="translated">可选参数&lt;em&gt;test_finder&lt;/em&gt;是&lt;a href=&quot;#doctest.DocTestFinder&quot;&gt; &lt;code&gt;DocTestFinder&lt;/code&gt; &lt;/a&gt;对象（或嵌入式替换），用于从模块中提取doctest。</target>
        </trans-unit>
        <trans-unit id="db4c1cc5f02a40eafb0ed3a5823be338fcf19c2f" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;verbose&lt;/em&gt; prints lots of stuff if true, and prints only failures if false; by default, or if &lt;code&gt;None&lt;/code&gt;, it&amp;rsquo;s true if and only if &lt;code&gt;'-v'&lt;/code&gt; is in &lt;code&gt;sys.argv&lt;/code&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;verbose&lt;/em&gt;如果为true，则打印很多内容；如果为false，则仅打印失败；否则为false。默认情况下，或者如果 &lt;code&gt;None&lt;/code&gt; ，这是真的，当且仅当 &lt;code&gt;'-v'&lt;/code&gt; 就是在 &lt;code&gt;sys.argv&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="b8153f139b45d286bc6ada5dd1d390a6a4123c3f" translate="yes" xml:space="preserve">
          <source>Optional argument:</source>
          <target state="translated">可选参数。</target>
        </trans-unit>
        <trans-unit id="dc3411c4765a5302ac4a0657ce51631f57505a0c" translate="yes" xml:space="preserve">
          <source>Optional arguments &lt;em&gt;extraglobs&lt;/em&gt;, &lt;em&gt;verbose&lt;/em&gt;, &lt;em&gt;report&lt;/em&gt;, &lt;em&gt;optionflags&lt;/em&gt;, &lt;em&gt;raise_on_error&lt;/em&gt;, and &lt;em&gt;globs&lt;/em&gt; are the same as for function &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt; above, except that &lt;em&gt;globs&lt;/em&gt; defaults to &lt;code&gt;m.__dict__&lt;/code&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;extraglobs&lt;/em&gt;，&lt;em&gt;verbose&lt;/em&gt;，&lt;em&gt;report&lt;/em&gt;，&lt;em&gt;optionflags&lt;/em&gt;，&lt;em&gt;raise_on_error&lt;/em&gt;和&lt;em&gt;globs&lt;/em&gt;与上面的函数&lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; &lt;/a&gt;相同，除了&lt;em&gt;globs&lt;/em&gt;默认为 &lt;code&gt;m.__dict__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66014d9b1f3041cfd84a26a994534d9a74b11dd8" translate="yes" xml:space="preserve">
          <source>Optional arguments &lt;em&gt;setUp&lt;/em&gt;, &lt;em&gt;tearDown&lt;/em&gt;, and &lt;em&gt;optionflags&lt;/em&gt; are the same as for function &lt;a href=&quot;#doctest.DocFileSuite&quot;&gt;&lt;code&gt;DocFileSuite()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">可选参数&lt;em&gt;setUp&lt;/em&gt;，&lt;em&gt;tearDown&lt;/em&gt;和&lt;em&gt;optionflags&lt;/em&gt;与上面的&lt;a href=&quot;#doctest.DocFileSuite&quot;&gt; &lt;code&gt;DocFileSuite()&lt;/code&gt; &lt;/a&gt;函数相同。</target>
        </trans-unit>
        <trans-unit id="109a83d09113d925f541bdb7731a680c6dfb6788" translate="yes" xml:space="preserve">
          <source>Optional clauses such as &lt;code&gt;else&lt;/code&gt; are stored as an empty list if they&amp;rsquo;re not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6ad614ba64534bb9b35c5be45e412b81787e19" translate="yes" xml:space="preserve">
          <source>Optional encrypted password</source>
          <target state="translated">可选的加密密码</target>
        </trans-unit>
        <trans-unit id="800aa892de20413e219a54b37b3156efd477e617" translate="yes" xml:space="preserve">
          <source>Optional keyword argument &lt;em&gt;initial_response_ok&lt;/em&gt; specifies whether, for authentication methods that support it, an &amp;ldquo;initial response&amp;rdquo; as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc4954.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4954&lt;/strong&gt;&lt;/a&gt; can be sent along with the &lt;code&gt;AUTH&lt;/code&gt; command, rather than requiring a challenge/response.</source>
          <target state="translated">可选的关键字参数&lt;em&gt;initial_response_ok&lt;/em&gt;指定对于支持它的身份验证方法，是否可以将&lt;a href=&quot;https://tools.ietf.org/html/rfc4954.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 4954中&lt;/strong&gt;&lt;/a&gt;指定的&amp;ldquo;初始响应&amp;rdquo; 与 &lt;code&gt;AUTH&lt;/code&gt; 命令一起发送，而不是要求质询/响应。</target>
        </trans-unit>
        <trans-unit id="39ded4fc07cc53be3f3b4d11b5ad6e335cab1088" translate="yes" xml:space="preserve">
          <source>Optional keyword arguments correspond to the instance attributes of &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt;, documented below. &lt;em&gt;width&lt;/em&gt; defaults to &lt;code&gt;70&lt;/code&gt;.</source>
          <target state="translated">可选的关键字参数与&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;的实例属性相对应，如下所述。&lt;em&gt;宽度&lt;/em&gt;默认为 &lt;code&gt;70&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b9eb4e0be951f4005e2e9357a99b2eb0d75d912" translate="yes" xml:space="preserve">
          <source>Optional keyword arguments correspond to the instance attributes of &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt;, documented below. Note that the whitespace is collapsed before the text is passed to the &lt;a href=&quot;#textwrap.TextWrapper&quot;&gt;&lt;code&gt;TextWrapper&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#textwrap.fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt; function, so changing the value of &lt;a href=&quot;#textwrap.TextWrapper.tabsize&quot;&gt;&lt;code&gt;tabsize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt;&lt;code&gt;expand_tabs&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#textwrap.TextWrapper.drop_whitespace&quot;&gt;&lt;code&gt;drop_whitespace&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt;&lt;code&gt;replace_whitespace&lt;/code&gt;&lt;/a&gt; will have no effect.</source>
          <target state="translated">可选的关键字参数与&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;的实例属性相对应，如下所述。请注意，在将文本传递给&lt;a href=&quot;#textwrap.TextWrapper&quot;&gt; &lt;code&gt;TextWrapper&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#textwrap.fill&quot;&gt; &lt;code&gt;fill()&lt;/code&gt; &lt;/a&gt;函数之前，空格已折叠，因此更改&lt;a href=&quot;#textwrap.TextWrapper.tabsize&quot;&gt; &lt;code&gt;tabsize&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#textwrap.TextWrapper.expand_tabs&quot;&gt; &lt;code&gt;expand_tabs&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#textwrap.TextWrapper.drop_whitespace&quot;&gt; &lt;code&gt;drop_whitespace&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#textwrap.TextWrapper.replace_whitespace&quot;&gt; &lt;code&gt;replace_whitespace&lt;/code&gt; 的值&lt;/a&gt;将无效。</target>
        </trans-unit>
        <trans-unit id="24ca019c9c45a21a1ae8afa31bdc446f05002f0e" translate="yes" xml:space="preserve">
          <source>Optional keyword parameters &lt;em&gt;linejunk&lt;/em&gt; and &lt;em&gt;charjunk&lt;/em&gt; are filtering functions (or &lt;code&gt;None&lt;/code&gt;):</source>
          <target state="translated">可选关键字参数&lt;em&gt;linejunk&lt;/em&gt;和&lt;em&gt;charjunk&lt;/em&gt;是过滤功能（或 &lt;code&gt;None&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="0a70313273eae3e208c193164419f6a9bd989124" translate="yes" xml:space="preserve">
          <source>Optional keyword parameters &lt;em&gt;linejunk&lt;/em&gt; and &lt;em&gt;charjunk&lt;/em&gt; are for filter functions (or &lt;code&gt;None&lt;/code&gt;):</source>
          <target state="translated">可选关键字参数&lt;em&gt;linejunk&lt;/em&gt;和&lt;em&gt;charjunk&lt;/em&gt;用于过滤器功能（或 &lt;code&gt;None&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="73738e459fc48b15d4c9caa2fae00dc51ed6861e" translate="yes" xml:space="preserve">
          <source>Optional opaque data associated to this file object: for example, this could be used to store a per-client session ID.</source>
          <target state="translated">与该文件对象相关联的可选不透明数据:例如,这可以用来存储每个客户的会话ID。</target>
        </trans-unit>
        <trans-unit id="33c45096fc76de56eedec7a2b606f898390e6242" translate="yes" xml:space="preserve">
          <source>Optional type.</source>
          <target state="translated">任选类型:</target>
        </trans-unit>
        <trans-unit id="7378235c39ea460a01142b753df9f73551ec2ce1" translate="yes" xml:space="preserve">
          <source>Optionally, a callable with a &lt;code&gt;(obj, state)&lt;/code&gt; signature. This callable allows the user to programmatically control the state-updating behavior of a specific object, instead of using &lt;code&gt;obj&lt;/code&gt;&amp;rsquo;s static &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt; method. If not &lt;code&gt;None&lt;/code&gt;, this callable will have priority over &lt;code&gt;obj&lt;/code&gt;&amp;rsquo;s &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">（可选）具有 &lt;code&gt;(obj, state)&lt;/code&gt; 签名的可调用对象。该可调用对象允许用户以编程方式控制特定对象的状态更新行为，而不是使用 &lt;code&gt;obj&lt;/code&gt; 的静态&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;方法。如果不是 &lt;code&gt;None&lt;/code&gt; ，则此可调用 &lt;code&gt;obj&lt;/code&gt; 的优先级高于obj的&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="248e8ab0a4779d85c841d158ffbba3ab30529149" translate="yes" xml:space="preserve">
          <source>Optionally, an iterator (and not a sequence) yielding successive items. These items will be appended to the object either using &lt;code&gt;obj.append(item)&lt;/code&gt; or, in batch, using &lt;code&gt;obj.extend(list_of_items)&lt;/code&gt;. This is primarily used for list subclasses, but may be used by other classes as long as they have &lt;code&gt;append()&lt;/code&gt; and &lt;code&gt;extend()&lt;/code&gt; methods with the appropriate signature. (Whether &lt;code&gt;append()&lt;/code&gt; or &lt;code&gt;extend()&lt;/code&gt; is used depends on which pickle protocol version is used as well as the number of items to append, so both must be supported.)</source>
          <target state="translated">可选地，迭代器（而不是序列）产生连续项。这些项目将使用 &lt;code&gt;obj.append(item)&lt;/code&gt; 或批量使用 &lt;code&gt;obj.extend(list_of_items)&lt;/code&gt; 追加到对象。这主要用于列表子类，但其他类也可以使用，只要它们具有带有适当签名的 &lt;code&gt;append()&lt;/code&gt; 和 &lt;code&gt;extend()&lt;/code&gt; 方法即可。 （是否使用 &lt;code&gt;append()&lt;/code&gt; 或 &lt;code&gt;extend()&lt;/code&gt; 取决于使用哪种pickle协议版本以及要追加的项目数，因此必须同时支持两者。）</target>
        </trans-unit>
        <trans-unit id="4d9b55e743d6156b61e3533878c6208bad417979" translate="yes" xml:space="preserve">
          <source>Optionally, an iterator (not a sequence) yielding successive key-value pairs. These items will be stored to the object using &lt;code&gt;obj[key] =
value&lt;/code&gt;. This is primarily used for dictionary subclasses, but may be used by other classes as long as they implement &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选地，迭代器（不是序列）产生连续的键值对。这些项目将使用 &lt;code&gt;obj[key] = value&lt;/code&gt; 存储到对象。这主要用于字典子类，但可以由其他类使用，只要它们实现&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="315326770905137b12d904dc1563d56ee022e891" translate="yes" xml:space="preserve">
          <source>Optionally, an iterator (not a sequence) yielding successive key-value pairs. These items will be stored to the object using &lt;code&gt;obj[key] =
value&lt;/code&gt;. This is primarily used for dictionary subclasses, but may be used by other classes as long as they implement &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9542e7876fb05dd3c13e6d5bd0e264709c2e4f0" translate="yes" xml:space="preserve">
          <source>Optionally, delete the &lt;code&gt;.dist-info&lt;/code&gt; directories created by pip in the &lt;code&gt;myapp&lt;/code&gt; directory. These hold metadata for pip to manage the packages, and as you won&amp;rsquo;t be making any further use of pip they aren&amp;rsquo;t required - although it won&amp;rsquo;t do any harm if you leave them.</source>
          <target state="translated">（可选）删除 &lt;code&gt;myapp&lt;/code&gt; 目录中pip创建的 &lt;code&gt;.dist-info&lt;/code&gt; 目录。这些保留用于pip来管理软件包的元数据，并且您将不再需要使用pip，尽管您离开它们不会造成任何危害，但它们并不需要它们。</target>
        </trans-unit>
        <trans-unit id="a52acaea3b3a3449dba5140bba2c078c062d5d24" translate="yes" xml:space="preserve">
          <source>Optionally, the object&amp;rsquo;s state, which will be passed to the object&amp;rsquo;s &lt;a href=&quot;#object.__setstate__&quot;&gt;&lt;code&gt;__setstate__()&lt;/code&gt;&lt;/a&gt; method as previously described. If the object has no such method then, the value must be a dictionary and it will be added to the object&amp;rsquo;s &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">（可选）对象的状态，该状态将传递到对象的&lt;a href=&quot;#object.__setstate__&quot;&gt; &lt;code&gt;__setstate__()&lt;/code&gt; &lt;/a&gt;方法，如前所述。如果对象没有这种方法，则该值必须是字典，并将其添加到对象的&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;属性中。</target>
        </trans-unit>
        <trans-unit id="0a1ef89fa64482c3406993b823c9249846d35bc0" translate="yes" xml:space="preserve">
          <source>Optionally, the string may also have a scope zone ID, expressed with a suffix &lt;code&gt;%scope_id&lt;/code&gt;. If present, the scope ID must be non-empty, and may not contain &lt;code&gt;%&lt;/code&gt;. See &lt;a href=&quot;https://tools.ietf.org/html/rfc4007.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 4007&lt;/strong&gt;&lt;/a&gt; for details. For example, &lt;code&gt;fe80::1234%1&lt;/code&gt; might identify address &lt;code&gt;fe80::1234&lt;/code&gt; on the first link of the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="4db22efa7fc9873f3af05807c67613b164308c33" translate="yes" xml:space="preserve">
          <source>Options control things like the color and border width of a widget. Options can be set in three ways:</source>
          <target state="translated">选项可控制小组件的颜色和边框宽度等。可以用三种方式设置选项。</target>
        </trans-unit>
        <trans-unit id="de536fda840f7da591573c96c013aeef7cd818d1" translate="yes" xml:space="preserve">
          <source>Options may be provided as keyword arguments:</source>
          <target state="translated">选项可以作为关键字参数提供。</target>
        </trans-unit>
        <trans-unit id="8335036bab3bafd620537f0b69b86754c080951f" translate="yes" xml:space="preserve">
          <source>Options menu (Shell and Editor)</source>
          <target state="translated">选项菜单(外壳和编辑器</target>
        </trans-unit>
        <trans-unit id="92ce2ae7dc9f79aa3ed9c94ea1705d8d6e562c73" translate="yes" xml:space="preserve">
          <source>Or directly from a string:</source>
          <target state="translated">或者直接从一个字符串。</target>
        </trans-unit>
        <trans-unit id="29bb859d05bc7a567ae7f7cc079e9b6720bf0d15" translate="yes" xml:space="preserve">
          <source>Or if a pending task needs to be deleted, how do you find it and remove it from the queue?</source>
          <target state="translated">或者说,如果一个待处理的任务需要删除,如何找到它并将其从队列中删除?</target>
        </trans-unit>
        <trans-unit id="350d63a3e5571c88873ab3623ca8f4daa75e4b64" translate="yes" xml:space="preserve">
          <source>Or reading bytes directly with &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b22593950042710b50dc4a4f90e32e24951a382" translate="yes" xml:space="preserve">
          <source>Or, more often:</source>
          <target state="translated">或者,更多的时候。</target>
        </trans-unit>
        <trans-unit id="1d1f8ef58bd7839e3af26e1c41a86b651180494a" translate="yes" xml:space="preserve">
          <source>Ordered and equality comparisons are supported between ST objects. Pickling of ST objects (using the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module) is also supported.</source>
          <target state="translated">ST对象之间支持有序和相等性比较。还支持对ST对象进行酸洗（使用&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块）。</target>
        </trans-unit>
        <trans-unit id="ec2fcd9ffa26d70803882357a146da9dcfdec817" translate="yes" xml:space="preserve">
          <source>Ordered comparisons between enumeration values are &lt;em&gt;not&lt;/em&gt; supported. Enum members are not integers (but see &lt;a href=&quot;#intenum&quot;&gt;IntEnum&lt;/a&gt; below):</source>
          <target state="translated">&lt;em&gt;不&lt;/em&gt;支持枚举值之间的有序比较。枚举成员不是整数（但请参见下面的&lt;a href=&quot;#intenum&quot;&gt;IntEnum&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="eb500fa39e2390f334d105e01309ce69a01fcb03" translate="yes" xml:space="preserve">
          <source>Ordered dictionaries are just like regular dictionaries but have some extra capabilities relating to ordering operations. They have become less important now that the built-in &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; class gained the ability to remember insertion order (this new behavior became guaranteed in Python 3.7).</source>
          <target state="translated">有序词典与常规词典一样，但是具有一些与订购操作有关的额外功能。现在，内置&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;类获得了记住插入顺序的能力（在3.7中已保证了这一新行为），它们的重要性已变得不那么重要了。</target>
        </trans-unit>
        <trans-unit id="26bb7103f52c11aaccca56efca197b3b55b4bca3" translate="yes" xml:space="preserve">
          <source>OrderedDict objects</source>
          <target state="translated">OrderedDict对象</target>
        </trans-unit>
        <trans-unit id="67243e03b42bd26dc3e495a6d0366676bb3fea02" translate="yes" xml:space="preserve">
          <source>OrderedEnum</source>
          <target state="translated">OrderedEnum</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="e5dd46594071b12b0a7a38e3a2f8a892e95aa71b" translate="yes" xml:space="preserve">
          <source>Ordinarily, you get a message object structure by passing a file or some text to a parser, which parses the text and returns the root message object. However you can also build a complete message structure from scratch, or even individual &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects by hand. In fact, you can also take an existing structure and add new &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects, move them around, etc. This makes a very convenient interface for slicing-and-dicing MIME messages.</source>
          <target state="translated">通常，通过将文件或某些文本传递给解析器来获得消息对象结构，该解析器将解析文本并返回根消息对象。但是，您也可以从头开始构建完整的消息结构，甚至可以手工构建单个&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;对象。实际上，您还可以采用现有结构并添加新的&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;对象，将它们移动等等。这为MIME消息的切片和切块提供了非常方便的界面。</target>
        </trans-unit>
        <trans-unit id="7a430640bbf526678a8da4fb85c2d06d96431f50" translate="yes" xml:space="preserve">
          <source>Organizing test code</source>
          <target state="translated">组织测试代码</target>
        </trans-unit>
        <trans-unit id="1cedde9b69ce01ae9f01a497a5daf62fb6786f91" translate="yes" xml:space="preserve">
          <source>Original Python logging package</source>
          <target state="translated">原始Python日志包</target>
        </trans-unit>
        <trans-unit id="0bf18896b8755bd61d4e426a9647970dd9cbbd69" translate="yes" xml:space="preserve">
          <source>Original specification of packages. Some semantics have changed since the writing of this document (e.g. redirecting based on &lt;code&gt;None&lt;/code&gt; in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">包装的原始规格。因为这个文件的写一些语义已经改变（例如转向基于 &lt;code&gt;None&lt;/code&gt; 在&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d8f4478364a57d8876305d6f8a4f1737017ec09e" translate="yes" xml:space="preserve">
          <source>Originally added in 3.3 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional feature&lt;/a&gt;.</source>
          <target state="translated">最初在3.3中添加为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;临时功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="044d5151be7c1b4dd05b8491c7d04527149f63bb" translate="yes" xml:space="preserve">
          <source>Originally added in 3.3 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;</source>
          <target state="translated">最初在3.3中作为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;临时模块添加&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ad670c5afb803a74dadaacb9226b7d9a7c018b3" translate="yes" xml:space="preserve">
          <source>Originally added in 3.3 as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;provisional feature&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d5a7a7b39d71f443f753487a039d4974c38c32" translate="yes" xml:space="preserve">
          <source>Originally added in 3.3 as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3760d15c033b2bd980e7e3d2725429e9f2f28376" translate="yes" xml:space="preserve">
          <source>Originally added in 3.4 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;</source>
          <target state="translated">最初在3.4中作为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;临时模块添加&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2fbc34ec2e89a23970dd81d7e81d17186c5721a" translate="yes" xml:space="preserve">
          <source>Originally added in 3.4 as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;. Docs for legacy message class moved to &lt;a href=&quot;email.compat32-message#compat32-message&quot;&gt;email.message.Message: Representing an email message using the compat32 API&lt;/a&gt;.</source>
          <target state="translated">最初在3.4中作为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-provisional-package&quot;&gt;临时模块添加&lt;/a&gt;。旧消息类的文档已移至&lt;a href=&quot;email.compat32-message#compat32-message&quot;&gt;email.message.Message：使用compat32 API表示电子邮件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6826df7edaaa92ff772c165e8aa6f4803c89e755" translate="yes" xml:space="preserve">
          <source>Originally added in 3.4 as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d53e0ff9b2f8d36714a48de79204ee45ee33a8" translate="yes" xml:space="preserve">
          <source>Originally added in 3.4 as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-provisional-package&quot;&gt;provisional module&lt;/a&gt;. Docs for legacy message class moved to &lt;a href=&quot;email.compat32-message#compat32-message&quot;&gt;email.message.Message: Representing an email message using the compat32 API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26e6600df66b0af63b8bf38fb88a3db87e5308a" translate="yes" xml:space="preserve">
          <source>Originally specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">最初在&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;PEP 302中&lt;/strong&gt;&lt;/a&gt;指定。</target>
        </trans-unit>
        <trans-unit id="3f514af7ee84123103b91a2dc752d472d7d48914" translate="yes" xml:space="preserve">
          <source>Originally specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">最初在&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;PEP 302中&lt;/strong&gt;&lt;/a&gt;指定。</target>
        </trans-unit>
        <trans-unit id="8693f343381fcb6bf448f211a00836342fbd6265" translate="yes" xml:space="preserve">
          <source>Originally specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d378e398249f21f59f2d17eaa22696c733bca01" translate="yes" xml:space="preserve">
          <source>Originally, the &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module had attempted to maintain compatibility with &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt;. However, &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt; was difficult to extend transparently, particularly with the changes required to support the new &lt;code&gt;nargs=&lt;/code&gt; specifiers and better usage messages. When most everything in &lt;a href=&quot;optparse#module-optparse&quot;&gt;&lt;code&gt;optparse&lt;/code&gt;&lt;/a&gt; had either been copy-pasted over or monkey-patched, it no longer seemed practical to try to maintain the backwards compatibility.</source>
          <target state="translated">最初，&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;模块尝试维护与&lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; 的&lt;/a&gt;兼容性。但是，&lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; &lt;/a&gt;很难透明地扩展，尤其是在支持新的 &lt;code&gt;nargs=&lt;/code&gt; 说明符和更好的用法消息所需的更改方面。当&lt;a href=&quot;optparse#module-optparse&quot;&gt; &lt;code&gt;optparse&lt;/code&gt; 中的&lt;/a&gt;大多数内容都被复制粘贴或用猴子修补时，尝试保持向后兼容性似乎不再可行。</target>
        </trans-unit>
        <trans-unit id="fed34ee486c7f5d06dbc7cfc681f00ddfcaf011b" translate="yes" xml:space="preserve">
          <source>Other Built-in Types</source>
          <target state="translated">其他内置类型</target>
        </trans-unit>
        <trans-unit id="0ba799c410addb3c357f8f4ace9cc3fe6bde69ff" translate="yes" xml:space="preserve">
          <source>Other Examples</source>
          <target state="translated">其他例子</target>
        </trans-unit>
        <trans-unit id="551852c7028ddd04d28686d5a46f202fe2ad7cb7" translate="yes" xml:space="preserve">
          <source>Other Functions</source>
          <target state="translated">其他功能</target>
        </trans-unit>
        <trans-unit id="217af07f6b149416704b03c95cdb3752965dd4b3" translate="yes" xml:space="preserve">
          <source>Other Graphical User Interface Packages</source>
          <target state="translated">其他图形用户界面包</target>
        </trans-unit>
        <trans-unit id="b8882f948dba0fc11ba9a6b54e264027bb74d52f" translate="yes" xml:space="preserve">
          <source>Other Module Level Functions</source>
          <target state="translated">其他模块级功能</target>
        </trans-unit>
        <trans-unit id="88f1a5da8a5bf979a3ede7f700833eb578841312" translate="yes" xml:space="preserve">
          <source>Other Unicode decimal digits are also permitted where &lt;code&gt;digit&lt;/code&gt; appears above. These include decimal digits from various other alphabets (for example, Arabic-Indic and Devanāgarī digits) along with the fullwidth digits &lt;code&gt;'\uff10'&lt;/code&gt; through &lt;code&gt;'\uff19'&lt;/code&gt;.</source>
          <target state="translated">其他的Unicode十进制数字也允许其中 &lt;code&gt;digit&lt;/code&gt; 以上出现。其中包括来自其他各种字母的十进制数字（例如，阿拉伯文-印度和 &lt;code&gt;'\uff10'&lt;/code&gt; 数字），以及全角数字'\ uff10'至 &lt;code&gt;'\uff19'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff9d748c4bd543f9761aa15fcf1968d71aec0ec7" translate="yes" xml:space="preserve">
          <source>Other arguments:</source>
          <target state="translated">其他论点:</target>
        </trans-unit>
        <trans-unit id="a90e10ae9215677f534e2d324d08bda0a668ca69" translate="yes" xml:space="preserve">
          <source>Other attributes may exist, but they are private and must not be inspected or relied on.</source>
          <target state="translated">其他属性也可能存在,但这些属性是私密的,不得检查或依赖。</target>
        </trans-unit>
        <trans-unit id="60e72b10ec92ca4f65a83df3c1526b2c7310a396" translate="yes" xml:space="preserve">
          <source>Other concrete types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedb03b71d3d53b256c55d31e3a1023846152365" translate="yes" xml:space="preserve">
          <source>Other constructor:</source>
          <target state="translated">其他构造者。</target>
        </trans-unit>
        <trans-unit id="de575b19ab55681e0fd9c92fcea7275245bb42c9" translate="yes" xml:space="preserve">
          <source>Other constructors, all class methods:</source>
          <target state="translated">其他构造函数,所有类方法。</target>
        </trans-unit>
        <trans-unit id="e12e322f5b694198963cd183428de579cc666876" translate="yes" xml:space="preserve">
          <source>Other functions</source>
          <target state="translated">其他功能</target>
        </trans-unit>
        <trans-unit id="bfdf1a80a42b89f60d8528660ffb1316928b3b7c" translate="yes" xml:space="preserve">
          <source>Other library modules may provide additional ways to create text or binary streams. See &lt;a href=&quot;socket#socket.socket.makefile&quot;&gt;&lt;code&gt;socket.socket.makefile()&lt;/code&gt;&lt;/a&gt; for example.</source>
          <target state="translated">其他库模块可能会提供创建文本或二进制流的其他方式。例如，请参见&lt;a href=&quot;socket#socket.socket.makefile&quot;&gt; &lt;code&gt;socket.socket.makefile()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="461f70e81617707a4ef7e08e0bf02afe3f4f0770" translate="yes" xml:space="preserve">
          <source>Other methods must be called with the associated lock held. The &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; method releases the lock, and then blocks until another thread awakens it by calling &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt;. Once awakened, &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; re-acquires the lock and returns. It is also possible to specify a timeout.</source>
          <target state="translated">必须使用关联的锁来调用其他方法。的&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;方法释放锁，然后阻塞，直到另一个线程通过调用唤醒它&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;。唤醒后，&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;重新获取锁并返回。也可以指定超时。</target>
        </trans-unit>
        <trans-unit id="8806cd1edbc02b7ee32a1acfc728cd7ae05ec92a" translate="yes" xml:space="preserve">
          <source>Other modules that provide Tk support include:</source>
          <target state="translated">提供Tk支持的其他模块包括:</target>
        </trans-unit>
        <trans-unit id="c094da946507173bdbcbc9838b22e11fb790816a" translate="yes" xml:space="preserve">
          <source>Other parameters:</source>
          <target state="translated">其他参数:</target>
        </trans-unit>
        <trans-unit id="61bf50f22a61fb1a7d3d05d04ae2081ef3a300b7" translate="yes" xml:space="preserve">
          <source>Other references to the old objects (such as names external to the module) are not rebound to refer to the new objects and must be updated in each namespace where they occur if that is desired.</source>
          <target state="translated">其他对旧对象的引用(例如模块外部的名称)不会被重定向到新对象,如果需要的话,必须在每个出现这些对象的命名空间中进行更新。</target>
        </trans-unit>
        <trans-unit id="ddd8ffb3ee85fbbcdc44a525c857b9e486b67e0b" translate="yes" xml:space="preserve">
          <source>Other special directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bc7487f272036d8152ed0d6732478c5fb2b9ca" translate="yes" xml:space="preserve">
          <source>Other statements which are only applicable inside functions or loops are described in other sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9b5975c5a17860bfd12921bda717270fc0fabd" translate="yes" xml:space="preserve">
          <source>Other than the &lt;em&gt;ensure_ascii&lt;/em&gt; parameter, this module is defined strictly in terms of conversion between Python objects and &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;Unicode strings&lt;/code&gt;&lt;/a&gt;, and thus does not otherwise directly address the issue of character encodings.</source>
          <target state="translated">除了&lt;em&gt;sure_ascii&lt;/em&gt;参数之外，此模块严格根据Python对象与&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;Unicode strings&lt;/code&gt; &lt;/a&gt;之间的转换进行定义，因此无法直接解决字符编码问题。</target>
        </trans-unit>
        <trans-unit id="334ae5c0280a33be6e1a7440bb997991c7be3c2d" translate="yes" xml:space="preserve">
          <source>Other than the text mode requirement, this method operates like &lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt;&lt;code&gt;BytesParser.parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">除了文本模式要求之外，此方法的操作类似于&lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt; &lt;code&gt;BytesParser.parse()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82d46ce3715467bc2baf73f7bf0f1e61e7104b2a" translate="yes" xml:space="preserve">
          <source>Other threads can call a thread&amp;rsquo;s &lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; method. This blocks the calling thread until the thread whose &lt;a href=&quot;#threading.Thread.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; method is called is terminated.</source>
          <target state="translated">其他线程可以调用线程的&lt;a href=&quot;#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;方法。这将阻塞调用线程，直到终止调用&lt;a href=&quot;#threading.Thread.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;方法的线程为止。</target>
        </trans-unit>
        <trans-unit id="80ebcb8c2214303bc68c1b27cf91f38d351836db" translate="yes" xml:space="preserve">
          <source>Other typical Boolean pairs include &lt;code&gt;accept&lt;/code&gt;/&lt;code&gt;reject&lt;/code&gt; or &lt;code&gt;enabled&lt;/code&gt;/&lt;code&gt;disabled&lt;/code&gt;.</source>
          <target state="translated">其他典型的布尔对包括 &lt;code&gt;accept&lt;/code&gt; / &lt;code&gt;reject&lt;/code&gt; 或 &lt;code&gt;enabled&lt;/code&gt; / &lt;code&gt;disabled&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09b2b2f9de07b290a776ba27da53dfcb6de8c87b" translate="yes" xml:space="preserve">
          <source>Other utilities</source>
          <target state="translated">其他公用事业</target>
        </trans-unit>
        <trans-unit id="8d7bf5bf136e81f9388c1f4eca050d6d94e965d7" translate="yes" xml:space="preserve">
          <source>Others</source>
          <target state="translated">Others</target>
        </trans-unit>
        <trans-unit id="a8f27da35e68a9f7a5a97f1703ac92769848a8d4" translate="yes" xml:space="preserve">
          <source>Others have execute permission.</source>
          <target state="translated">其他人有执行权限。</target>
        </trans-unit>
        <trans-unit id="a4b5a656b29825a9211b83ccae7336ee695ce161" translate="yes" xml:space="preserve">
          <source>Others have read permission.</source>
          <target state="translated">其他人已经阅读了许可。</target>
        </trans-unit>
        <trans-unit id="fc0d4f6a481380e178acd3897e6a60f3ade59b6a" translate="yes" xml:space="preserve">
          <source>Others have write permission.</source>
          <target state="translated">其他人有写权限。</target>
        </trans-unit>
        <trans-unit id="dc737418c9269b8ef3e41db8ef19aa2d039d3d09" translate="yes" xml:space="preserve">
          <source>Otherwise (&lt;em&gt;x&lt;/em&gt; is a positive finite number), return the value of the least significant bit of &lt;em&gt;x&lt;/em&gt;, such that the first float bigger than &lt;em&gt;x&lt;/em&gt; is &lt;code&gt;x + ulp(x)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4222ac892c71e5c85c46120851fe4701ec7917d" translate="yes" xml:space="preserve">
          <source>Otherwise (the signal is trapped), only equality comparisons and explicit conversions are silent. All other mixed operations raise &lt;a href=&quot;#decimal.FloatOperation&quot;&gt;&lt;code&gt;FloatOperation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">否则（信号被捕获），只有相等比较和显式转换是静默的。所有其他混合操作都会引发&lt;a href=&quot;#decimal.FloatOperation&quot;&gt; &lt;code&gt;FloatOperation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be46edea33f2697996c7c3567d1d9c18f067cdc7" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;em&gt;d&lt;/em&gt; is naive.</source>
          <target state="translated">否则，&lt;em&gt;d&lt;/em&gt;天真。</target>
        </trans-unit>
        <trans-unit id="dfc31f535285ad24b8fa6617987e28a96cbb3d87" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;em&gt;t&lt;/em&gt; is naive.</source>
          <target state="translated">否则，&lt;em&gt;t&lt;/em&gt;天真。</target>
        </trans-unit>
        <trans-unit id="954ba79aef749f40f5d5ce28f2bceb67836f96e6" translate="yes" xml:space="preserve">
          <source>Otherwise, arguments are files opened for editing and &lt;code&gt;sys.argv&lt;/code&gt; reflects the arguments passed to IDLE itself.</source>
          <target state="translated">否则，参数将打开以供编辑的文件，并且 &lt;code&gt;sys.argv&lt;/code&gt; 反映传递给IDLE本身的参数。</target>
        </trans-unit>
        <trans-unit id="14b72810afd38383fb343bc867db69c78f448477" translate="yes" xml:space="preserve">
          <source>Otherwise, if no argument is provided, or if the argument is &lt;code&gt;None&lt;/code&gt;, the &lt;code&gt;token_*&lt;/code&gt; functions will use a reasonable default instead.</source>
          <target state="translated">否则，如果未提供参数，或者参数为 &lt;code&gt;None&lt;/code&gt; ，则 &lt;code&gt;token_*&lt;/code&gt; 函数将使用合理的默认值。</target>
        </trans-unit>
        <trans-unit id="54d61e7a8adc1736b3a4f7ffa32c6559beb44abf" translate="yes" xml:space="preserve">
          <source>Otherwise, if the argument is an integer or a floating point number, a floating point number with the same value (within Python&amp;rsquo;s floating point precision) is returned. If the argument is outside the range of a Python float, an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">否则，如果参数是整数或浮点数，则将返回具有相同值（在Python的浮点精度内）的浮点数。如果参数超出Python浮点数的范围，则会引发&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11a40cb9049b1be0f85f95867c10277bfc38eefa" translate="yes" xml:space="preserve">
          <source>Otherwise, raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecea0cd28243a5441c028877a147bc1209dbb6d" translate="yes" xml:space="preserve">
          <source>Otherwise, return a list of &lt;em&gt;name&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt; pairs for the options in the given &lt;em&gt;section&lt;/em&gt;. Optional arguments have the same meaning as for the &lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">否则，返回给定&lt;em&gt;部分中&lt;/em&gt;选项的&lt;em&gt;名称&lt;/em&gt;，&lt;em&gt;值&lt;/em&gt;对列表。可选参数的含义与&lt;a href=&quot;#configparser.ConfigParser.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;方法的含义相同。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b46eb0d416a3552e2d7853ed1ba1f77360411e1" translate="yes" xml:space="preserve">
          <source>Otherwise, the backslash will be interpreted as part of the string. For example, the &lt;code&gt;\n&lt;/code&gt; above would be interpreted as a newline character. Alternatively, you can double each backslash in the doctest version (and not use a raw string):</source>
          <target state="translated">否则，反斜杠将被解释为字符串的一部分。例如，上面的 &lt;code&gt;\n&lt;/code&gt; 将被解释为换行符。或者，您可以在doctest版本中将每个反斜杠加倍（而不使用原始字符串）：</target>
        </trans-unit>
        <trans-unit id="70814fdd5d3f962107665d79424d211168c0dc43" translate="yes" xml:space="preserve">
          <source>Otherwise, the list contains the object&amp;rsquo;s attributes&amp;rsquo; names, the names of its class&amp;rsquo;s attributes, and recursively of the attributes of its class&amp;rsquo;s base classes.</source>
          <target state="translated">否则，该列表包含对象的属性名称，其类的属性名称，以及递归其类的基类的属性。</target>
        </trans-unit>
        <trans-unit id="f7030a7d49fcfe877e91d4527075807bf0b11fd0" translate="yes" xml:space="preserve">
          <source>Our XML now looks like this:</source>
          <target state="translated">我们的XML现在看起来是这样的。</target>
        </trans-unit>
        <trans-unit id="0be297b561141a6a2d82a7108dddc36e1cc22dba" translate="yes" xml:space="preserve">
          <source>Out of memory</source>
          <target state="translated">不记得了</target>
        </trans-unit>
        <trans-unit id="af8eb7df148c890efac2f2ede67c967bf68723f5" translate="yes" xml:space="preserve">
          <source>Out of streams resources</source>
          <target state="translated">溪流外资源</target>
        </trans-unit>
        <trans-unit id="63664fd5af35bc0c3fdff750f9b0e30b4646a15c" translate="yes" xml:space="preserve">
          <source>Out-of-band Buffers</source>
          <target state="translated">带外缓冲器</target>
        </trans-unit>
        <trans-unit id="3fac09e90cfccb47e52c968f4fb653462a3d8c88" translate="yes" xml:space="preserve">
          <source>Output in debug mode:</source>
          <target state="translated">在调试模式下输出。</target>
        </trans-unit>
        <trans-unit id="fe984ffd01f834b22054ca88048eb74573f00d01" translate="yes" xml:space="preserve">
          <source>Output of the child process if it was captured by &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#subprocess.check_output&quot;&gt;&lt;code&gt;check_output()&lt;/code&gt;&lt;/a&gt;. Otherwise, &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">子进程的输出（如果它是通过&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#subprocess.check_output&quot;&gt; &lt;code&gt;check_output()&lt;/code&gt; &lt;/a&gt;捕获的）。否则， &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc05deb2ab45aebe353e699363a7fbb6c0b73af3" translate="yes" xml:space="preserve">
          <source>Output parameter. The foreign function fills in a value.</source>
          <target state="translated">输出参数。外来函数填入一个值。</target>
        </trans-unit>
        <trans-unit id="66226a3b482e757cb52b81b1728ded2d649bd5c1" translate="yes" xml:space="preserve">
          <source>Output parameters can be combined with the &lt;code&gt;errcheck&lt;/code&gt; protocol to do further output processing and error checking. The win32 &lt;code&gt;GetWindowRect&lt;/code&gt; api function returns a &lt;code&gt;BOOL&lt;/code&gt; to signal success or failure, so this function could do the error checking, and raises an exception when the api call failed:</source>
          <target state="translated">输出参数可以与 &lt;code&gt;errcheck&lt;/code&gt; 协议结合使用，以进行进一步的输出处理和错误检查。win32 &lt;code&gt;GetWindowRect&lt;/code&gt; api函数返回一个 &lt;code&gt;BOOL&lt;/code&gt; 来指示成功或失败，因此该函数可以执行错误检查，并在api调用失败时引发异常：</target>
        </trans-unit>
        <trans-unit id="6c41c030d36ce42b9a8cad80e0baa996c85ae9c1" translate="yes" xml:space="preserve">
          <source>Output to stdout is captured, but not output to stderr (exception tracebacks are captured via a different means).</source>
          <target state="translated">捕获输出到stdout的数据,但不捕获输出到stderr的数据(异常回溯通过不同的方式捕获)。</target>
        </trans-unit>
        <trans-unit id="052c8a28d79036323fd83c172b2396b59d5c7af9" translate="yes" xml:space="preserve">
          <source>Output windows, such as used for Edit =&amp;gt; Find in Files, are a subtype of editor window. They currently have the same top menu but a different default title and context menu.</source>
          <target state="translated">输出窗口（例如用于Edit =&amp;gt;在文件中查找）是编辑器窗口的子类型。它们当前具有相同的顶部菜单，但具有不同的默认标题和上下文菜单。</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="0d058e922b3d393665a54054e5a68be683df369b" translate="yes" xml:space="preserve">
          <source>OutputChecker objects</source>
          <target state="translated">输出检查器对象</target>
        </trans-unit>
        <trans-unit id="00b098b7354feb36c1140185524d89b0a668ca13" translate="yes" xml:space="preserve">
          <source>Outputs a symbolic disassembly of the pickle to the file-like object &lt;em&gt;out&lt;/em&gt;, defaulting to &lt;code&gt;sys.stdout&lt;/code&gt;. &lt;em&gt;pickle&lt;/em&gt; can be a string or a file-like object. &lt;em&gt;memo&lt;/em&gt; can be a Python dictionary that will be used as the pickle&amp;rsquo;s memo; it can be used to perform disassemblies across multiple pickles created by the same pickler. Successive levels, indicated by &lt;code&gt;MARK&lt;/code&gt; opcodes in the stream, are indented by &lt;em&gt;indentlevel&lt;/em&gt; spaces. If a nonzero value is given to &lt;em&gt;annotate&lt;/em&gt;, each opcode in the output is annotated with a short description. The value of &lt;em&gt;annotate&lt;/em&gt; is used as a hint for the column where annotation should start.</source>
          <target state="translated">将泡菜的符号反汇编输出到类似文件的对象&lt;em&gt;out&lt;/em&gt;，默认为 &lt;code&gt;sys.stdout&lt;/code&gt; 。&lt;em&gt;pickle&lt;/em&gt;可以是字符串或类似文件的对象。&lt;em&gt;memo&lt;/em&gt;可以是将用作泡菜备忘录的Python字典；它可用于在同一台腌制机创建的多个腌制机上进行拆卸。连续级别，以表示 &lt;code&gt;MARK&lt;/code&gt; 流中的操作码，是由缩进&lt;em&gt;indentlevel&lt;/em&gt;空间。如果将非零值提供给&lt;em&gt;annotate&lt;/em&gt;，则输出中的每个操作码都带有简短描述。&lt;em&gt;annotate&lt;/em&gt;的值用作注释应开始的列的提示。</target>
        </trans-unit>
        <trans-unit id="8dc5698f0af86404dfd9c47dbd73c97838c9a5ae" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file, but first calls &lt;a href=&quot;#logging.handlers.WatchedFileHandler.reopenIfNeeded&quot;&gt;&lt;code&gt;reopenIfNeeded()&lt;/code&gt;&lt;/a&gt; to reopen the file if it has changed.</source>
          <target state="translated">将记录输出到文件，但是如果文件已更改，则首先调用&lt;a href=&quot;#logging.handlers.WatchedFileHandler.reopenIfNeeded&quot;&gt; &lt;code&gt;reopenIfNeeded()&lt;/code&gt; &lt;/a&gt;重新打开文件。</target>
        </trans-unit>
        <trans-unit id="13942066feebbb621d64a590a698fabefbf9f608" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file, catering for rollover as described above.</source>
          <target state="translated">将记录输出到文件中,满足上文所述的翻转。</target>
        </trans-unit>
        <trans-unit id="3ca087e0da0b536b5faf375d0b4bf87097dd1943" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file, catering for rollover as described previously.</source>
          <target state="translated">将记录输出到文件中,满足前面所述的翻转。</target>
        </trans-unit>
        <trans-unit id="c717361b7f3869812b4f8d911cb96fca253dd170" translate="yes" xml:space="preserve">
          <source>Outputs the record to the file.</source>
          <target state="translated">将记录输出到文件中。</target>
        </trans-unit>
        <trans-unit id="2463e229a293d9ce0593fb8c001c99bade0b894d" translate="yes" xml:space="preserve">
          <source>OverflowError</source>
          <target state="translated">OverflowError</target>
        </trans-unit>
        <trans-unit id="77d28c858b730f53a08a8fef86fd0e4ba755ebd6" translate="yes" xml:space="preserve">
          <source>Overlay the window on top of &lt;em&gt;destwin&lt;/em&gt;. The windows need not be the same size, only the overlapping region is copied. This copy is non-destructive, which means that the current background character does not overwrite the old contents of &lt;em&gt;destwin&lt;/em&gt;.</source>
          <target state="translated">在&lt;em&gt;destwin&lt;/em&gt;顶部覆盖窗户。窗口的大小不必相同，仅复制重叠区域。此副本是非破坏性的，这意味着当前背景字符不会覆盖&lt;em&gt;destwin&lt;/em&gt;的旧内容。</target>
        </trans-unit>
        <trans-unit id="f325fd31da05c2d6bb7739feb9013527ae1ea6f4" translate="yes" xml:space="preserve">
          <source>Overridable interface to open unknown URL types.</source>
          <target state="translated">可重写的接口,用于打开未知的URL类型。</target>
        </trans-unit>
        <trans-unit id="1845ac518f926046d52dd78544dc528bccec6b7b" translate="yes" xml:space="preserve">
          <source>Override &lt;em&gt;object_to_patch.attr_name&lt;/em&gt; with &lt;em&gt;new_value&lt;/em&gt;. Also add cleanup procedure to &lt;em&gt;test_instance&lt;/em&gt; to restore &lt;em&gt;object_to_patch&lt;/em&gt; for &lt;em&gt;attr_name&lt;/em&gt;. The &lt;em&gt;attr_name&lt;/em&gt; should be a valid attribute for &lt;em&gt;object_to_patch&lt;/em&gt;.</source>
          <target state="translated">用&lt;em&gt;new_value&lt;/em&gt;覆盖&lt;em&gt;object_to_patch.attr_name&lt;/em&gt;。同时添加清理过程&lt;em&gt;test_instance&lt;/em&gt;恢复&lt;em&gt;object_to_patch&lt;/em&gt;为&lt;em&gt;attr_name&lt;/em&gt;。该&lt;em&gt;attr_name&lt;/em&gt;应该是一个有效的属性&lt;em&gt;object_to_patch&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7395c655119b2b51ec4e5687f37180aa645f658b" translate="yes" xml:space="preserve">
          <source>Override this in subclasses to use a custom &lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt;&lt;code&gt;SMTPChannel&lt;/code&gt;&lt;/a&gt; for managing SMTP clients.</source>
          <target state="translated">在子类中重写此方法，以使用自定义&lt;a href=&quot;#smtpd.SMTPChannel&quot;&gt; &lt;code&gt;SMTPChannel&lt;/code&gt; &lt;/a&gt;来管理SMTP客户端。</target>
        </trans-unit>
        <trans-unit id="b8bfc0e1739d6d6ca998aa03c306a8b819a8bc45" translate="yes" xml:space="preserve">
          <source>Override to construct the dialog&amp;rsquo;s interface and return the widget that should have initial focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2909e0ed5928a1fd1982ea6f59b67ccfb9f556df" translate="yes" xml:space="preserve">
          <source>Override to implement platform-specific file transmission. This method is called only if the application&amp;rsquo;s return value is an instance of the class specified by the &lt;a href=&quot;#wsgiref.handlers.BaseHandler.wsgi_file_wrapper&quot;&gt;&lt;code&gt;wsgi_file_wrapper&lt;/code&gt;&lt;/a&gt; attribute. It should return a true value if it was able to successfully transmit the file, so that the default transmission code will not be executed. The default implementation of this method just returns a false value.</source>
          <target state="translated">重写以实现特定于平台的文件传输。仅当应用程序的返回值是&lt;a href=&quot;#wsgiref.handlers.BaseHandler.wsgi_file_wrapper&quot;&gt; &lt;code&gt;wsgi_file_wrapper&lt;/code&gt; &lt;/a&gt;属性指定的类的实例时，才调用此方法。如果它能够成功传输文件，则应返回一个真值，这样就不会执行默认的传输代码。此方法的默认实现只是返回一个假值。</target>
        </trans-unit>
        <trans-unit id="841b35088f13fc1f7d90f1447cd5a3232873d19b" translate="yes" xml:space="preserve">
          <source>Overriding the default filter</source>
          <target state="translated">覆盖默认过滤器</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="97e3f82b324e49d5bf704d2fcfc3c81fc3bd1c4d" translate="yes" xml:space="preserve">
          <source>Overview of available Turtle and Screen methods</source>
          <target state="translated">现有的海龟和筛选方法概述</target>
        </trans-unit>
        <trans-unit id="f63c582120e82f9b40889b2e8060bdd0b30b68ad" translate="yes" xml:space="preserve">
          <source>Overwrite the window on top of &lt;em&gt;destwin&lt;/em&gt;. The windows need not be the same size, in which case only the overlapping region is copied. This copy is destructive, which means that the current background character overwrites the old contents of &lt;em&gt;destwin&lt;/em&gt;.</source>
          <target state="translated">覆盖&lt;em&gt;destwin&lt;/em&gt;顶部的&lt;em&gt;窗口&lt;/em&gt;。窗口的大小不必相同，在这种情况下，仅复制重叠区域。此副本具有破坏性，这意味着当前的背景字符会覆盖&lt;em&gt;destwin&lt;/em&gt;的旧内容。</target>
        </trans-unit>
        <trans-unit id="32e42d7cf1d8ef849a65b5a64f751115cac94630" translate="yes" xml:space="preserve">
          <source>Owner has execute permission.</source>
          <target state="translated">业主有执行权限。</target>
        </trans-unit>
        <trans-unit id="3602226bffa2bf2cc1004ff7d38eed8270dc876b" translate="yes" xml:space="preserve">
          <source>Owner has read permission.</source>
          <target state="translated">业主已阅读权限。</target>
        </trans-unit>
        <trans-unit id="7347b7f7b6214962e6cdded97a0459692c3eb4cb" translate="yes" xml:space="preserve">
          <source>Owner has write permission.</source>
          <target state="translated">业主有书面许可。</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="8188efe6d6c2ca935ce480ac15e4f19beaaefd9e" translate="yes" xml:space="preserve">
          <source>P flag</source>
          <target state="translated">P旗</target>
        </trans-unit>
        <trans-unit id="19cff3742b4c4e6723d380bd45c0c6a517354983" translate="yes" xml:space="preserve">
          <source>PEP written and implemented by Eric Snow</source>
          <target state="translated">PEP由Eric Snow编写和实施</target>
        </trans-unit>
        <trans-unit id="96cc3126da39918697345cd1940161ffe9937238" translate="yes" xml:space="preserve">
          <source>PEP written and implemented by Nick Coghlan.</source>
          <target state="translated">PEP由Nick Coghlan编写并实施。</target>
        </trans-unit>
        <trans-unit id="72f66703e54a4ec78b0213c1ad44bcc728157812" translate="yes" xml:space="preserve">
          <source>PEP written by Marc-Andr&amp;eacute; Lemburg.</source>
          <target state="translated">PEP由Marc-Andr&amp;eacute;Lemburg撰写。</target>
        </trans-unit>
        <trans-unit id="02c1c27f30006cf59ab74f7a98ff1faa4de16fbf" translate="yes" xml:space="preserve">
          <source>PI element factory. This factory function creates a special element that will be serialized as an XML processing instruction. &lt;em&gt;target&lt;/em&gt; is a string containing the PI target. &lt;em&gt;text&lt;/em&gt; is a string containing the PI contents, if given. Returns an element instance, representing a processing instruction.</source>
          <target state="translated">PI元素工厂。此工厂函数创建一个特殊元素，该元素将被序列化为XML处理指令。&lt;em&gt;target&lt;/em&gt;是包含PI目标的字符串。&lt;em&gt;text&lt;/em&gt;是包含PI内容（如果给定）的字符串。返回表示处理指令的元素实例。</target>
        </trans-unit>
        <trans-unit id="645fd7e9caac181870f9d1dede2beb5dfad6f364" translate="yes" xml:space="preserve">
          <source>PKCS #5: Password-Based Cryptography Specification Version 2.0</source>
          <target state="translated">PKCS #5:基于密码的密码学规范2.0版。</target>
        </trans-unit>
        <trans-unit id="6a6c80bd7a477c267f845a1634bbf726b750cfed" translate="yes" xml:space="preserve">
          <source>PKZIP Application Note</source>
          <target state="translated">PKZIP应用说明</target>
        </trans-unit>
        <trans-unit id="7ed081aaacf45dc799e1d758e08c1fee43fa6b4d" translate="yes" xml:space="preserve">
          <source>PKZIP version needed to extract archive.</source>
          <target state="translated">解压存档所需的PKZIP版本。</target>
        </trans-unit>
        <trans-unit id="9781d1150340a69a33be8618584c8cba317bce94" translate="yes" xml:space="preserve">
          <source>PKZIP version which created ZIP archive.</source>
          <target state="translated">创建ZIP存档的PKZIP版本。</target>
        </trans-unit>
        <trans-unit id="a686245107e7535edbc3e18f215337676e95a611" translate="yes" xml:space="preserve">
          <source>PList manual page</source>
          <target state="translated">PList手册页</target>
        </trans-unit>
        <trans-unit id="cc56431d28166c67feef84f6c92e21eabfa5d1ca" translate="yes" xml:space="preserve">
          <source>POP (Post Office Protocol) client</source>
          <target state="translated">POP(邮局协议)客户端</target>
        </trans-unit>
        <trans-unit id="6529429ecfa1cc0534c3143968006f04304bba59" translate="yes" xml:space="preserve">
          <source>POP3 Example</source>
          <target state="translated">POP3示例</target>
        </trans-unit>
        <trans-unit id="ccd83f40f38d28ca57da516a478df1ed22acb88c" translate="yes" xml:space="preserve">
          <source>POP3 Objects</source>
          <target state="translated">POP3对象</target>
        </trans-unit>
        <trans-unit id="23507e798d66fee0b05313c2a15e15ff93e82f20" translate="yes" xml:space="preserve">
          <source>POSIX</source>
          <target state="translated">POSIX</target>
        </trans-unit>
        <trans-unit id="d1e7dc927b5056ab603c7e76822c32304531f8c5" translate="yes" xml:space="preserve">
          <source>POSIX.1-1988 (ustar) format.</source>
          <target state="translated">POSIX.1-1988(ustar)格式。</target>
        </trans-unit>
        <trans-unit id="91bc95b98cf54c5ceaa0e0d916776762d8ddd754" translate="yes" xml:space="preserve">
          <source>POSIX.1-2001 (pax) format.</source>
          <target state="translated">POSIX.1-2001(pax)格式。</target>
        </trans-unit>
        <trans-unit id="d53cc7738d8a17f007787e1cd3f918a4f71cfeb3" translate="yes" xml:space="preserve">
          <source>PS C:&amp;gt; Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5673e51c6ba031bafbab056cb4b8681674c77b64" translate="yes" xml:space="preserve">
          <source>PS C:\&amp;gt; &amp;lt;venv&amp;gt;\Scripts\Activate.ps1</source>
          <target state="translated">PS C：\&amp;gt; &amp;lt;venv&amp;gt; \ Scripts \ Activate.ps1</target>
        </trans-unit>
        <trans-unit id="edb353c498914363a5fa96fe5426703486d738f0" translate="yes" xml:space="preserve">
          <source>PYC Repository Directories</source>
          <target state="translated">PYC存储库目录</target>
        </trans-unit>
        <trans-unit id="5fa81009e6c318f633d81b3520255a8c252b4939" translate="yes" xml:space="preserve">
          <source>P_NOWAIT example:</source>
          <target state="translated">P_NOWAIT例子。</target>
        </trans-unit>
        <trans-unit id="c71b9bdfc8cd53509b44f69906b2d09fc5c0a78b" translate="yes" xml:space="preserve">
          <source>P_WAIT example:</source>
          <target state="translated">P_WAIT例子。</target>
        </trans-unit>
        <trans-unit id="1ca4f74cd6ff2ed6c937c0943f68809fb32bebd2" translate="yes" xml:space="preserve">
          <source>Pack the values &lt;em&gt;v1&lt;/em&gt;, &lt;em&gt;v2&lt;/em&gt;, &amp;hellip; according to the format string &lt;em&gt;format&lt;/em&gt; and write the packed bytes into the writable buffer &lt;em&gt;buffer&lt;/em&gt; starting at position &lt;em&gt;offset&lt;/em&gt;. Note that &lt;em&gt;offset&lt;/em&gt; is a required argument.</source>
          <target state="translated">包值&lt;em&gt;V1&lt;/em&gt;，&lt;em&gt;V2&lt;/em&gt;，...按照格式字符串&lt;em&gt;格式&lt;/em&gt;并写入压缩字节到读写缓存&lt;em&gt;缓冲区&lt;/em&gt;开始的位置&lt;em&gt;偏移&lt;/em&gt;。请注意，&lt;em&gt;offset&lt;/em&gt;是必需的参数。</target>
        </trans-unit>
        <trans-unit id="4e600670fc903f64302f254dffcdf0dd2910c01d" translate="yes" xml:space="preserve">
          <source>Pack up a directory into an archive, and run it.</source>
          <target state="translated">将一个目录打包成一个档案,然后运行它。</target>
        </trans-unit>
        <trans-unit id="cf25aa751e3519d8d8bc5c6250a1c8496de96180" translate="yes" xml:space="preserve">
          <source>Package &lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/&quot;&gt;dateutil&lt;/a&gt;</source>
          <target state="translated">软件包&lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/&quot;&gt;dateutil&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0ba7cbe4550748395502e251e976a43c2306e54" translate="yes" xml:space="preserve">
          <source>Package &lt;a href=&quot;https://pypi.org/project/tzdata/&quot;&gt;tzdata&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cad03b3193d6e7cd78f44b1238ea56433fd311d" translate="yes" xml:space="preserve">
          <source>Package not installed</source>
          <target state="translated">未安装软件包</target>
        </trans-unit>
        <trans-unit id="3880af2ba3f21c17c8cf074ba063ffeb33288fb9" translate="yes" xml:space="preserve">
          <source>Package the application using:</source>
          <target state="translated">使用以下方法打包应用程序。</target>
        </trans-unit>
        <trans-unit id="6b5cd295b63824cbc62d1acfcbff85265b721c98" translate="yes" xml:space="preserve">
          <source>Packages specification</source>
          <target state="translated">包装规格</target>
        </trans-unit>
        <trans-unit id="0122990cae2223f01ba8fc059a08202e3a680d47" translate="yes" xml:space="preserve">
          <source>Packed binary storage of homogeneous data.</source>
          <target state="translated">同质数据的打包二进制存储。</target>
        </trans-unit>
        <trans-unit id="a1eee81646800c1c1945b0200d9c5a077bcb9fa3" translate="yes" xml:space="preserve">
          <source>Packer Objects</source>
          <target state="translated">包装机对象</target>
        </trans-unit>
        <trans-unit id="09ab562ad00b6e394a3efca9cba8a8ba6444e5b3" translate="yes" xml:space="preserve">
          <source>Packer Options</source>
          <target state="translated">包装机选项</target>
        </trans-unit>
        <trans-unit id="e9c9758effdf5587f78f4781fe65b4bc712558b7" translate="yes" xml:space="preserve">
          <source>Packing and unpacking of External Data Representation (XDR) data as used in some remote procedure call systems.</source>
          <target state="translated">一些远程过程调用系统中使用的外部数据表示(XDR)数据的打包和解包。</target>
        </trans-unit>
        <trans-unit id="ba61d74eba3e7429d5d2efb23fea14de5a4a2686" translate="yes" xml:space="preserve">
          <source>Packing and unpacking of XDR data.</source>
          <target state="translated">XDR数据的包装和拆包;</target>
        </trans-unit>
        <trans-unit id="ff9ec2ff343ac87044954920f5478e697bc42222" translate="yes" xml:space="preserve">
          <source>Packing and unpacking of heterogeneous binary data.</source>
          <target state="translated">异构二进制数据的打包和解包。</target>
        </trans-unit>
        <trans-unit id="2fc884e6acb1b6b441cecf6cac548bb46376e49d" translate="yes" xml:space="preserve">
          <source>Packs a &lt;em&gt;list&lt;/em&gt; of homogeneous items. This method is useful for lists with an indeterminate size; i.e. the size is not available until the entire list has been walked. For each item in the list, an unsigned integer &lt;code&gt;1&lt;/code&gt; is packed first, followed by the data value from the list. &lt;em&gt;pack_item&lt;/em&gt; is the function that is called to pack the individual item. At the end of the list, an unsigned integer &lt;code&gt;0&lt;/code&gt; is packed.</source>
          <target state="translated">打包同类项目&lt;em&gt;列表&lt;/em&gt;。此方法对于大小不确定的列表很有用；也就是说，只有在遍历整个列表后才能使用大小。对于列表中的每个项目，将先包装无符号整数 &lt;code&gt;1&lt;/code&gt; ，然后包装列表中的数据值。&lt;em&gt;pack_item&lt;/em&gt;是用于打包单个项目的函数。在列表的末尾，打包了一个无符号整数 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b540c95e1283f4fae5fed2992b4cde688a1f8bd0" translate="yes" xml:space="preserve">
          <source>Packs a fixed length list (&lt;em&gt;array&lt;/em&gt;) of homogeneous items. &lt;em&gt;n&lt;/em&gt; is the length of the list; it is &lt;em&gt;not&lt;/em&gt; packed into the buffer, but a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception is raised if &lt;code&gt;len(array)&lt;/code&gt; is not equal to &lt;em&gt;n&lt;/em&gt;. As above, &lt;em&gt;pack_item&lt;/em&gt; is the function used to pack each element.</source>
          <target state="translated">打包固定长度的同类项目列表（&lt;em&gt;数组&lt;/em&gt;）。&lt;em&gt;n&lt;/em&gt;是列表的长度；它&lt;em&gt;没有&lt;/em&gt;打包到缓冲区中，但是如果 &lt;code&gt;len(array)&lt;/code&gt; 不等于&lt;em&gt;n，&lt;/em&gt;则会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;异常。如上所述，&lt;em&gt;pack_item&lt;/em&gt;是用于打包每个元素的函数。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="993b3f1f48130f3d5499e4bb61480af1f43780a6" translate="yes" xml:space="preserve">
          <source>Packs a fixed length opaque data stream, similarly to &lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt;&lt;code&gt;pack_fstring()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打包固定长度的不透明数据流，类似于&lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt; &lt;code&gt;pack_fstring()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85b656f18a0f07689f2f15d99d57287804c9ec23" translate="yes" xml:space="preserve">
          <source>Packs a fixed length string, &lt;em&gt;s&lt;/em&gt;. &lt;em&gt;n&lt;/em&gt; is the length of the string but it is &lt;em&gt;not&lt;/em&gt; packed into the data buffer. The string is padded with null bytes if necessary to guaranteed 4 byte alignment.</source>
          <target state="translated">打包固定长度的字符串&lt;em&gt;s&lt;/em&gt;。&lt;em&gt;n&lt;/em&gt;是字符串的长度，&lt;em&gt;但未&lt;/em&gt;打包到数据缓冲区中。如有必要，可使用空字节填充字符串，以确保4字节对齐。</target>
        </trans-unit>
        <trans-unit id="d35f3e8d894947627ebea046d9379e59367e078c" translate="yes" xml:space="preserve">
          <source>Packs a variable length &lt;em&gt;list&lt;/em&gt; of homogeneous items. First, the length of the list is packed as an unsigned integer, then each element is packed as in &lt;a href=&quot;#xdrlib.Packer.pack_farray&quot;&gt;&lt;code&gt;pack_farray()&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">打包可变长度的同类项目&lt;em&gt;列表&lt;/em&gt;。首先，将列表的长度打包为无符号整数，然后按照上面的&lt;a href=&quot;#xdrlib.Packer.pack_farray&quot;&gt; &lt;code&gt;pack_farray()&lt;/code&gt; &lt;/a&gt;打包每个元素。</target>
        </trans-unit>
        <trans-unit id="30061d9c00e384a6f4b04e1bdfb6f26cbfd0caf4" translate="yes" xml:space="preserve">
          <source>Packs a variable length byte stream, similarly to &lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt;&lt;code&gt;pack_string()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打包一个可变长度的字节流，类似于&lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt; &lt;code&gt;pack_string()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f5fb0dbfad21f7013015f277c5718bd76afec8f" translate="yes" xml:space="preserve">
          <source>Packs a variable length opaque data string, similarly to &lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt;&lt;code&gt;pack_string()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打包一个可变长度的不透明数据字符串，类似于&lt;a href=&quot;#xdrlib.Packer.pack_string&quot;&gt; &lt;code&gt;pack_string()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f73c74419bc7c46b6f154ecf0c655bc164189afb" translate="yes" xml:space="preserve">
          <source>Packs a variable length string, &lt;em&gt;s&lt;/em&gt;. The length of the string is first packed as an unsigned integer, then the string data is packed with &lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt;&lt;code&gt;pack_fstring()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打包一个可变长度的字符串&lt;em&gt;s&lt;/em&gt;。字符串的长度首先打包为无符号整数，然后使用&lt;a href=&quot;#xdrlib.Packer.pack_fstring&quot;&gt; &lt;code&gt;pack_fstring()&lt;/code&gt; &lt;/a&gt;打包字符串数据。</target>
        </trans-unit>
        <trans-unit id="298af3b97feaea337e720a2944c01237f7d660aa" translate="yes" xml:space="preserve">
          <source>Packs the double-precision floating point number &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">打包双精度浮点数&lt;em&gt;value&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b9506e9ead7ad8bf096843e59e92af3f3db699fd" translate="yes" xml:space="preserve">
          <source>Packs the single-precision floating point number &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">打包单精度浮点数&lt;em&gt;value&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f2a9c02b60fbcf23b1dbfa68021d80be67258ce8" translate="yes" xml:space="preserve">
          <source>Pad byte needed if &lt;em&gt;n&lt;/em&gt; is odd and chunk alignment is used</source>
          <target state="translated">如果&lt;em&gt;n&lt;/em&gt;为奇数并且使用了块对齐，则需要填充字节</target>
        </trans-unit>
        <trans-unit id="be6aec49e5262973160789fd096af12232d8eda6" translate="yes" xml:space="preserve">
          <source>Padding is only automatically added between successive structure members. No padding is added at the beginning or the end of the encoded struct.</source>
          <target state="translated">只有在连续的结构成员之间才会自动添加padding。编码结构的开头或结尾不会添加填充。</target>
        </trans-unit>
        <trans-unit id="eebe8b4d277848e1ec370986e82d2178731c6293" translate="yes" xml:space="preserve">
          <source>Page Down</source>
          <target state="translated">下一页</target>
        </trans-unit>
        <trans-unit id="5c77b5722c41b6f199f92efb5977aba4430b61c9" translate="yes" xml:space="preserve">
          <source>Page Up</source>
          <target state="translated">上一页</target>
        </trans-unit>
        <trans-unit id="7cba3e212dcc3d05c7ed8450a9553450544ee41d" translate="yes" xml:space="preserve">
          <source>PageDown</source>
          <target state="translated">PageDown</target>
        </trans-unit>
        <trans-unit id="f37641df1bc969ebc2d5a09ecf4d6e7b0f343faa" translate="yes" xml:space="preserve">
          <source>PageUp</source>
          <target state="translated">PageUp</target>
        </trans-unit>
        <trans-unit id="e7d3c63de7852b4a6801684fea08c43e4215eede" translate="yes" xml:space="preserve">
          <source>Paint at most &lt;em&gt;n&lt;/em&gt; characters of the character string &lt;em&gt;str&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, overwriting anything previously on the display.</source>
          <target state="translated">在 &lt;code&gt;(y, x)&lt;/code&gt; 使用属性&lt;em&gt;attr&lt;/em&gt;绘制字符串&lt;em&gt;str的&lt;/em&gt;最多&lt;em&gt;n个&lt;/em&gt;字符，覆盖先前在显示器上的任何内容。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d99809c709d2c937bd8fcaf22711d9e1f53af193" translate="yes" xml:space="preserve">
          <source>Paint character &lt;em&gt;ch&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, moving the line from position &lt;em&gt;x&lt;/em&gt; right by one character.</source>
          <target state="translated">用属性&lt;em&gt;attr&lt;/em&gt;在 &lt;code&gt;(y, x)&lt;/code&gt; 处绘制字符&lt;em&gt;ch&lt;/em&gt;，将行从位置&lt;em&gt;x&lt;/em&gt;右移一个字符。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5c1c8e066e1cae22dc65f1a6de4d12598fc421b" translate="yes" xml:space="preserve">
          <source>Paint character &lt;em&gt;ch&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, overwriting any character previously painted at that location. By default, the character position and attributes are the current settings for the window object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24af2750a2e63948648310692a6b52c55421e98d" translate="yes" xml:space="preserve">
          <source>Paint character &lt;em&gt;ch&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, overwriting any character previously painter at that location. By default, the character position and attributes are the current settings for the window object.</source>
          <target state="translated">使用属性&lt;em&gt;attr&lt;/em&gt;在 &lt;code&gt;(y, x)&lt;/code&gt; 处绘制字符&lt;em&gt;ch&lt;/em&gt;，覆盖先前在该位置绘制的任何字符。默认情况下，字符位置和属性是窗口对象的当前设置。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d619bb80867eab45009bfb84b6b417b3ca8fc2c3" translate="yes" xml:space="preserve">
          <source>Paint the character string &lt;em&gt;str&lt;/em&gt; at &lt;code&gt;(y, x)&lt;/code&gt; with attributes &lt;em&gt;attr&lt;/em&gt;, overwriting anything previously on the display.</source>
          <target state="translated">使用属性&lt;em&gt;attr&lt;/em&gt;将字符串&lt;em&gt;str&lt;/em&gt;绘制在 &lt;code&gt;(y, x)&lt;/code&gt; ，覆盖以前显示的内容。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e844933b4932ee3937ee43d5f9fbf5690450c6f9" translate="yes" xml:space="preserve">
          <source>Panel Objects</source>
          <target state="translated">面板对象</target>
        </trans-unit>
        <trans-unit id="fa3f038d65d1a64b9f30b8194e1110843ad0ed17" translate="yes" xml:space="preserve">
          <source>Panel objects have the following methods:</source>
          <target state="translated">面板对象有以下方法。</target>
        </trans-unit>
        <trans-unit id="48250a21bb2f011a6dfba4c5d7e1a9a1c9fdc072" translate="yes" xml:space="preserve">
          <source>Panel objects, as returned by &lt;a href=&quot;#curses.panel.new_panel&quot;&gt;&lt;code&gt;new_panel()&lt;/code&gt;&lt;/a&gt; above, are windows with a stacking order. There&amp;rsquo;s always a window associated with a panel which determines the content, while the panel methods are responsible for the window&amp;rsquo;s depth in the panel stack.</source>
          <target state="translated">如上面的&lt;a href=&quot;#curses.panel.new_panel&quot;&gt; &lt;code&gt;new_panel()&lt;/code&gt; &lt;/a&gt;返回的面板对象是具有堆叠顺序的窗口。总是有一个与面板相关联的窗口来确定内容，而面板方法负责窗口在面板堆栈中的深度。</target>
        </trans-unit>
        <trans-unit id="fc975aa48f15e94a28935c5e885e735c1b69bb7b" translate="yes" xml:space="preserve">
          <source>Panels are windows with the added feature of depth, so they can be stacked on top of each other, and only the visible portions of each window will be displayed. Panels can be added, moved up or down in the stack, and removed.</source>
          <target state="translated">面板是增加了深度功能的窗口,因此它们可以相互堆叠,并且只显示每个窗口的可见部分。面板可以添加、在堆叠中上下移动和移除。</target>
        </trans-unit>
        <trans-unit id="312270aaaff20da30c74f328ff0f10c9927c4efe" translate="yes" xml:space="preserve">
          <source>Paragraph Separator</source>
          <target state="translated">段落分隔符</target>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="translated">Parameter</target>
        </trans-unit>
        <trans-unit id="41656f6d37dec30feb05e7aa728844b98293f13f" translate="yes" xml:space="preserve">
          <source>Parameter &lt;em&gt;arg&lt;/em&gt; should be a &lt;em&gt;key&lt;/em&gt;-to-&lt;em&gt;message&lt;/em&gt; mapping or an iterable of (&lt;em&gt;key&lt;/em&gt;, &lt;em&gt;message&lt;/em&gt;) pairs. Updates the mailbox so that, for each given &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;message&lt;/em&gt;, the message corresponding to &lt;em&gt;key&lt;/em&gt; is set to &lt;em&gt;message&lt;/em&gt; as if by using &lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;. As with &lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt;&lt;code&gt;__setitem__()&lt;/code&gt;&lt;/a&gt;, each &lt;em&gt;key&lt;/em&gt; must already correspond to a message in the mailbox or else a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception will be raised, so in general it is incorrect for &lt;em&gt;arg&lt;/em&gt; to be a &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">参数&lt;em&gt;arg&lt;/em&gt;应该是&lt;em&gt;密钥&lt;/em&gt;到&lt;em&gt;消息的&lt;/em&gt;映射，或者是（&lt;em&gt;key&lt;/em&gt;，&lt;em&gt;message&lt;/em&gt;）对的可迭代。更新邮箱，以便对于每个给定的&lt;em&gt;键&lt;/em&gt;和&lt;em&gt;消息&lt;/em&gt;，将与&lt;em&gt;键&lt;/em&gt;对应的消息设置为&lt;em&gt;message&lt;/em&gt;，就像使用&lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;。与&lt;a href=&quot;#mailbox.Mailbox.__setitem__&quot;&gt; &lt;code&gt;__setitem__()&lt;/code&gt; &lt;/a&gt;，每个&lt;em&gt;键&lt;/em&gt;必须已经与邮箱中的消息相对应，否则将引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;异常，因此，一般来说，将&lt;em&gt;arg&lt;/em&gt;用作&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;实例是不正确的。</target>
        </trans-unit>
        <trans-unit id="59c4a01bc4aac90732e66b0bec359511c54291d4" translate="yes" xml:space="preserve">
          <source>Parameter &lt;em&gt;message&lt;/em&gt; may be a &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; instance, an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; instance, a string, a byte string, or a file-like object (which should be open in binary mode). If &lt;em&gt;message&lt;/em&gt; is an instance of the appropriate format-specific &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; subclass (e.g., if it&amp;rsquo;s an &lt;a href=&quot;#mailbox.mboxMessage&quot;&gt;&lt;code&gt;mboxMessage&lt;/code&gt;&lt;/a&gt; instance and this is an &lt;a href=&quot;#mailbox.mbox&quot;&gt;&lt;code&gt;mbox&lt;/code&gt;&lt;/a&gt; instance), its format-specific information is used. Otherwise, reasonable defaults for format-specific information are used.</source>
          <target state="translated">参数&lt;em&gt;message&lt;/em&gt;可以是&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;实例，&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;实例，字符串，字节字符串或类似文件的对象（应以二进制模式打开）。如果&lt;em&gt;message&lt;/em&gt;是适当的特定于格式的&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;子类的实例（例如，如果它是&lt;a href=&quot;#mailbox.mboxMessage&quot;&gt; &lt;code&gt;mboxMessage&lt;/code&gt; &lt;/a&gt;实例并且这是&lt;a href=&quot;#mailbox.mbox&quot;&gt; &lt;code&gt;mbox&lt;/code&gt; &lt;/a&gt;实例），则使用其特定于格式的信息。否则，将使用特定于格式的信息的合理默认值。</target>
        </trans-unit>
        <trans-unit id="881bf20a17cb18ef7df20e69e4894f8e515d8f08" translate="yes" xml:space="preserve">
          <source>Parameter keys are always compared case insensitively. The return value can either be a string, or a 3-tuple if the parameter was &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt; encoded. When it&amp;rsquo;s a 3-tuple, the elements of the value are of the form &lt;code&gt;(CHARSET, LANGUAGE, VALUE)&lt;/code&gt;. Note that both &lt;code&gt;CHARSET&lt;/code&gt; and &lt;code&gt;LANGUAGE&lt;/code&gt; can be &lt;code&gt;None&lt;/code&gt;, in which case you should consider &lt;code&gt;VALUE&lt;/code&gt; to be encoded in the &lt;code&gt;us-ascii&lt;/code&gt; charset. You can usually ignore &lt;code&gt;LANGUAGE&lt;/code&gt;.</source>
          <target state="translated">参数键始终不区分大小写进行比较。返回值可以是字符串，也可以是3元组（如果参数是&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;编码的）。当它是一个三元组时，值的元素采用 &lt;code&gt;(CHARSET, LANGUAGE, VALUE)&lt;/code&gt; 。请注意， &lt;code&gt;CHARSET&lt;/code&gt; 和 &lt;code&gt;LANGUAGE&lt;/code&gt; 都可以为 &lt;code&gt;None&lt;/code&gt; ，在这种情况下，您应该考虑将 &lt;code&gt;VALUE&lt;/code&gt; 编码在 &lt;code&gt;us-ascii&lt;/code&gt; 字符集中。通常，您可以忽略 &lt;code&gt;LANGUAGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33739f0fe85843a995275178b4ae7686f3467b90" translate="yes" xml:space="preserve">
          <source>Parameter objects are &lt;em&gt;immutable&lt;/em&gt;. Instead of modifying a Parameter object, you can use &lt;a href=&quot;#inspect.Parameter.replace&quot;&gt;&lt;code&gt;Parameter.replace()&lt;/code&gt;&lt;/a&gt; to create a modified copy.</source>
          <target state="translated">参数对象是&lt;em&gt;不可变的&lt;/em&gt;。您可以使用&lt;a href=&quot;#inspect.Parameter.replace&quot;&gt; &lt;code&gt;Parameter.replace()&lt;/code&gt; &lt;/a&gt;创建修改后的副本，而不是修改Parameter对象。</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="a92b79dc56bbd97fdb6a07c22c916ccfa7aee2d6" translate="yes" xml:space="preserve">
          <source>Parameters for last path element</source>
          <target state="translated">最后一个路径元素的参数</target>
        </trans-unit>
        <trans-unit id="759e2eb2d1daa387faedef08a108f8727c12a8ef" translate="yes" xml:space="preserve">
          <source>Parameters for the &lt;a href=&quot;#os.getpriority&quot;&gt;&lt;code&gt;getpriority()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.setpriority&quot;&gt;&lt;code&gt;setpriority()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">参数为&lt;a href=&quot;#os.getpriority&quot;&gt; &lt;code&gt;getpriority()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.setpriority&quot;&gt; &lt;code&gt;setpriority()&lt;/code&gt; 可&lt;/a&gt;功能。</target>
        </trans-unit>
        <trans-unit id="838e55f08d1ff41fab5268cb5f1dd771e877ca64" translate="yes" xml:space="preserve">
          <source>Parameters not specified keep current settings, except &lt;code&gt;errors='strict'&lt;/code&gt; is used when &lt;em&gt;encoding&lt;/em&gt; is specified but &lt;em&gt;errors&lt;/em&gt; is not specified.</source>
          <target state="translated">未指定的参数将保留当前设置，但当指定&lt;em&gt;编码&lt;/em&gt;但未指定&lt;em&gt;错误&lt;/em&gt;时，使用 &lt;code&gt;errors='strict'&lt;/code&gt; 除外。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64930b4862237d51573ab5db32a04df08eaab71b" translate="yes" xml:space="preserve">
          <source>Parameters to the &lt;a href=&quot;#os.lseek&quot;&gt;&lt;code&gt;lseek()&lt;/code&gt;&lt;/a&gt; function. Their values are 0, 1, and 2, respectively.</source>
          <target state="translated">&lt;a href=&quot;#os.lseek&quot;&gt; &lt;code&gt;lseek()&lt;/code&gt; &lt;/a&gt;函数的参数。它们的值分别为0、1和2。</target>
        </trans-unit>
        <trans-unit id="574eadd03549c46ff070bfc9b5c4604fe3ba3d9e" translate="yes" xml:space="preserve">
          <source>Parameters to the &lt;a href=&quot;#os.sendfile&quot;&gt;&lt;code&gt;sendfile()&lt;/code&gt;&lt;/a&gt; function, if the implementation supports them.</source>
          <target state="translated">&lt;a href=&quot;#os.sendfile&quot;&gt; &lt;code&gt;sendfile()&lt;/code&gt; &lt;/a&gt;函数的参数（如果实现支持）。</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="bb65093f645552f1d147225f5339fb4c0d809a51" translate="yes" xml:space="preserve">
          <source>Pareto distribution. &lt;em&gt;alpha&lt;/em&gt; is the shape parameter.</source>
          <target state="translated">帕累托分布。&lt;em&gt;alpha&lt;/em&gt;是shape参数。</target>
        </trans-unit>
        <trans-unit id="a86e41d6f2a5d68c53f3894fcb12cd2f2075fd69" translate="yes" xml:space="preserve">
          <source>Parse XML data reading from the object &lt;em&gt;file&lt;/em&gt;. &lt;em&gt;file&lt;/em&gt; only needs to provide the &lt;code&gt;read(nbytes)&lt;/code&gt; method, returning the empty string when there&amp;rsquo;s no more data.</source>
          <target state="translated">解析从目标&lt;em&gt;文件&lt;/em&gt;读取的XML数据。&lt;em&gt;文件&lt;/em&gt;只需要提供 &lt;code&gt;read(nbytes)&lt;/code&gt; 方法，就在没有更多数据时返回空字符串。</target>
        </trans-unit>
        <trans-unit id="cd6d8291ae51a08ad977274c0372200b08672145" translate="yes" xml:space="preserve">
          <source>Parse a &lt;code&gt;config.h&lt;/code&gt;-style file.</source>
          <target state="translated">解析 &lt;code&gt;config.h&lt;/code&gt; 样式的文件。</target>
        </trans-unit>
        <trans-unit id="63c3905d8ecd87702e0ce0c0330bac77c66e32c8" translate="yes" xml:space="preserve">
          <source>Parse a MIME header (such as &lt;em&gt;Content-Type&lt;/em&gt;) into a main value and a dictionary of parameters.</source>
          <target state="translated">将MIME标头（例如&lt;em&gt;Content-Type&lt;/em&gt;）解析为一个主值和一个参数字典。</target>
        </trans-unit>
        <trans-unit id="ff6e1df4dd4d3597f09c70a2e424eab21b6eff12" translate="yes" xml:space="preserve">
          <source>Parse a URL into six components, returning a 6-item &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;. This corresponds to the general structure of a URL: &lt;code&gt;scheme://netloc/path;parameters?query#fragment&lt;/code&gt;. Each tuple item is a string, possibly empty. The components are not broken up in smaller parts (for example, the network location is a single string), and % escapes are not expanded. The delimiters as shown above are not part of the result, except for a leading slash in the &lt;em&gt;path&lt;/em&gt; component, which is retained if present. For example:</source>
          <target state="translated">将URL解析为六个部分，返回一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名为tuple&lt;/a&gt;的6项。这对应于URL的一般结构： &lt;code&gt;scheme://netloc/path;parameters?query#fragment&lt;/code&gt; 。每个元组项目都是一个字符串，可能为空。组件不会分成较小的部分（例如，网络位置是单个字符串），并且％转义符不会扩展。上面显示的定界符不是结果的一部分，除了&lt;em&gt;path&lt;/em&gt;组件中的前斜杠（如果存在的话）会保留。例如：</target>
        </trans-unit>
        <trans-unit id="875759505148a363c4ac44634ad65285c9f5870a" translate="yes" xml:space="preserve">
          <source>Parse a URL into six components, returning a 6-item &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;. This corresponds to the general structure of a URL: &lt;code&gt;scheme://netloc/path;parameters?query#fragment&lt;/code&gt;. Each tuple item is a string, possibly empty. The components are not broken up into smaller parts (for example, the network location is a single string), and % escapes are not expanded. The delimiters as shown above are not part of the result, except for a leading slash in the &lt;em&gt;path&lt;/em&gt; component, which is retained if present. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f65d7a6a5967be810a7b45cc7fc1983d29ae04a" translate="yes" xml:space="preserve">
          <source>Parse a query in the environment or from a file (the file defaults to &lt;code&gt;sys.stdin&lt;/code&gt;). The &lt;em&gt;keep_blank_values&lt;/em&gt; and &lt;em&gt;strict_parsing&lt;/em&gt; parameters are passed to &lt;a href=&quot;urllib.parse#urllib.parse.parse_qs&quot;&gt;&lt;code&gt;urllib.parse.parse_qs()&lt;/code&gt;&lt;/a&gt; unchanged.</source>
          <target state="translated">在环境或文件中解析查询（该文件默认为 &lt;code&gt;sys.stdin&lt;/code&gt; ）。该&lt;em&gt;keep_blank_values&lt;/em&gt;和&lt;em&gt;strict_parsing&lt;/em&gt;参数传递给&lt;a href=&quot;urllib.parse#urllib.parse.parse_qs&quot;&gt; &lt;code&gt;urllib.parse.parse_qs()&lt;/code&gt; &lt;/a&gt;不变。</target>
        </trans-unit>
        <trans-unit id="83ffcfafda3d2a633dbce55a15d332a9d456e01a" translate="yes" xml:space="preserve">
          <source>Parse a query string given as a string argument (data of type &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;). Data are returned as a dictionary. The dictionary keys are the unique query variable names and the values are lists of values for each name.</source>
          <target state="translated">解析作为字符串参数给出的查询字符串（类型为&lt;em&gt;application / x-www-form-urlencoded的数据&lt;/em&gt;）。数据作为字典返回。字典键是唯一的查询变量名称，而值是每个名称的值列表。</target>
        </trans-unit>
        <trans-unit id="3f02af97808b4370f19a36ce2159e13d76d32265" translate="yes" xml:space="preserve">
          <source>Parse a query string given as a string argument (data of type &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;). Data are returned as a list of name, value pairs.</source>
          <target state="translated">解析作为字符串参数给出的查询字符串（类型为&lt;em&gt;application / x-www-form-urlencoded的数据&lt;/em&gt;）。数据作为名称，值对的列表返回。</target>
        </trans-unit>
        <trans-unit id="7f5435496a6de34302e5162e2765e6d03eb242ff" translate="yes" xml:space="preserve">
          <source>Parse a string into a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object given a corresponding format</source>
          <target state="translated">将字符串解析为指定格式的&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象</target>
        </trans-unit>
        <trans-unit id="ddb7f7e51791d0d0bb53020b57f543d16b666e17" translate="yes" xml:space="preserve">
          <source>Parse a string representing a time according to a format. The return value is a &lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; as returned by &lt;a href=&quot;#time.gmtime&quot;&gt;&lt;code&gt;gmtime()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">根据格式解析表示时间的字符串。返回值是&lt;a href=&quot;#time.gmtime&quot;&gt; &lt;code&gt;gmtime()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt;返回的&lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e9b3948a49b13fe039282714fef7eb741666870" translate="yes" xml:space="preserve">
          <source>Parse address &amp;ndash; which should be the value of some address-containing field such as &lt;em&gt;To&lt;/em&gt; or &lt;em&gt;Cc&lt;/em&gt; &amp;ndash; into its constituent &lt;em&gt;realname&lt;/em&gt; and &lt;em&gt;email address&lt;/em&gt; parts. Returns a tuple of that information, unless the parse fails, in which case a 2-tuple of &lt;code&gt;('', '')&lt;/code&gt; is returned.</source>
          <target state="translated">将地址解析-应该是某些包含地址的字段（例如&lt;em&gt;To&lt;/em&gt;或&lt;em&gt;Cc）&lt;/em&gt;的值-解析为其组成的&lt;em&gt;实名&lt;/em&gt;和&lt;em&gt;电子邮件地址&lt;/em&gt;部分。返回该信息的元组，除非解析失败，在这种情况下，将返回2元组 &lt;code&gt;('', '')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7bfb97eef332ed35c993d49a75d83bad160155a8" translate="yes" xml:space="preserve">
          <source>Parse an IMAP4 &lt;code&gt;INTERNALDATE&lt;/code&gt; string and return corresponding local time. The return value is a &lt;a href=&quot;time#time.struct_time&quot;&gt;&lt;code&gt;time.struct_time&lt;/code&gt;&lt;/a&gt; tuple or &lt;code&gt;None&lt;/code&gt; if the string has wrong format.</source>
          <target state="translated">解析IMAP4 &lt;code&gt;INTERNALDATE&lt;/code&gt; 字符串并返回相应的本地时间。返回值是&lt;a href=&quot;time#time.struct_time&quot;&gt; &lt;code&gt;time.struct_time&lt;/code&gt; &lt;/a&gt;元组；如果字符串格式错误，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77b4c57e66b64e4534f7423e678b54e99d6e7ad3" translate="yes" xml:space="preserve">
          <source>Parse configuration data from a string.</source>
          <target state="translated">从字符串中解析配置数据。</target>
        </trans-unit>
        <trans-unit id="34ec846a5cc0bb5312516a5590e119f9b3d82572" translate="yes" xml:space="preserve">
          <source>Parse every input line as separate JSON object.</source>
          <target state="translated">将每一行输入内容解析为单独的JSON对象。</target>
        </trans-unit>
        <trans-unit id="92f18fdd6a043541a20dbdffd6b3b6b5c6b25947" translate="yes" xml:space="preserve">
          <source>Parse input of type &lt;em&gt;multipart/form-data&lt;/em&gt; (for file uploads). Arguments are &lt;em&gt;fp&lt;/em&gt; for the input file, &lt;em&gt;pdict&lt;/em&gt; for a dictionary containing other parameters in the &lt;em&gt;Content-Type&lt;/em&gt; header, and &lt;em&gt;encoding&lt;/em&gt;, the request encoding.</source>
          <target state="translated">解析&lt;em&gt;multipart / form-data&lt;/em&gt;类型的输入（用于文件上传）。参数是输入文件的&lt;em&gt;fp&lt;/em&gt;，字典是在&lt;em&gt;Content-Type&lt;/em&gt;标头中包含其他参数的字典的&lt;em&gt;pdict&lt;/em&gt;，以及&lt;em&gt;编码&lt;/em&gt;（请求编码）的参数。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b48fc13fc5d8b028c399137b19563a9d740767c5" translate="yes" xml:space="preserve">
          <source>Parse the headers from a file pointer &lt;em&gt;fp&lt;/em&gt; representing a HTTP request/response. The file has to be a &lt;code&gt;BufferedIOBase&lt;/code&gt; reader (i.e. not text) and must provide a valid &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt; style header.</source>
          <target state="translated">从代表HTTP请求/响应的文件指针&lt;em&gt;fp&lt;/em&gt;解析标头。该文件必须是 &lt;code&gt;BufferedIOBase&lt;/code&gt; 读取器（即不是文本），并且必须提供有效的&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;样式标头。</target>
        </trans-unit>
        <trans-unit id="6322b351357533e4088cb2f327b3892c078e67a0" translate="yes" xml:space="preserve">
          <source>Parse the source into an AST node. Equivalent to &lt;code&gt;compile(source,
filename, mode, ast.PyCF_ONLY_AST)&lt;/code&gt;.</source>
          <target state="translated">将源解析为AST节点。等效于 &lt;code&gt;compile(source, filename, mode, ast.PyCF_ONLY_AST)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac1f2c832714de7833881fe2be021bca052cf91d" translate="yes" xml:space="preserve">
          <source>Parser API</source>
          <target state="translated">解析器API</target>
        </trans-unit>
        <trans-unit id="004fa2d97b3f68b254662790038060204e61b5c4" translate="yes" xml:space="preserve">
          <source>Parser defaults</source>
          <target state="translated">解析器默认值</target>
        </trans-unit>
        <trans-unit id="8ae5e9df787606f6a18b61bb53d88c9edc2ac786" translate="yes" xml:space="preserve">
          <source>Parser for configuration files similar to the Windows &lt;code&gt;.ini&lt;/code&gt; files.</source>
          <target state="translated">解析器，用于类似于Windows &lt;code&gt;.ini&lt;/code&gt; 文件的配置文件。</target>
        </trans-unit>
        <trans-unit id="d8dc10de6adfe8e18f4e99f44dfc697378f4b6ab" translate="yes" xml:space="preserve">
          <source>Parser for the &lt;code&gt;.netrc&lt;/code&gt; file format. The file &lt;code&gt;.netrc&lt;/code&gt; is typically used by FTP clients to load user authentication information before prompting the user.</source>
          <target state="translated">&lt;code&gt;.netrc&lt;/code&gt; 文件格式的解析器。FTP客户端通常使用文件 &lt;code&gt;.netrc&lt;/code&gt; 来提示用户之前加载用户身份验证信息。</target>
        </trans-unit>
        <trans-unit id="6729f41bc7511e1386806d0ce0191be70095ac9b" translate="yes" xml:space="preserve">
          <source>Parser-level defaults can be particularly useful when working with multiple parsers. See the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method for an example of this type.</source>
          <target state="translated">当使用多个解析器时，解析器级别的默认值特别有用。有关此类型的示例，请参见&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="edcb4a36322d5054120f5cf55bd4daebc8e8fd44" translate="yes" xml:space="preserve">
          <source>Parsers may set the &lt;em&gt;qname&lt;/em&gt; parameter to &lt;code&gt;None&lt;/code&gt;, unless the &lt;code&gt;feature_namespace_prefixes&lt;/code&gt; feature is activated.</source>
          <target state="translated">除非激活 &lt;code&gt;feature_namespace_prefixes&lt;/code&gt; 功能，否则解析器可以将&lt;em&gt;qname&lt;/em&gt;参数设置为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee2780af704008ebc69c8aa8369ff3c29a512d2d" translate="yes" xml:space="preserve">
          <source>Parses an XML document from a sequence of string fragments. &lt;em&gt;sequence&lt;/em&gt; is a list or other sequence containing XML data fragments. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">从一系列字符串片段中解析XML文档。&lt;em&gt;sequence&lt;/em&gt;是包含XML数据片段的列表或其他序列。&lt;em&gt;解析器&lt;/em&gt;是可选的解析器实例。如果未给出，则使用标准&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;解析器。返回一个&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="fbbb018cccf811e0d533b9e865ec5ffa820c0b5e" translate="yes" xml:space="preserve">
          <source>Parses an XML section from a string constant, and also returns a dictionary which maps from element id:s to elements. &lt;em&gt;text&lt;/em&gt; is a string containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns a tuple containing an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance and a dictionary.</source>
          <target state="translated">从字符串常量解析XML部分，并返回一个字典，该字典将元素id：s映射到元素。&lt;em&gt;text&lt;/em&gt;是包含XML数据的字符串。&lt;em&gt;parser&lt;/em&gt;是可选的解析器实例。如果未给出，则使用标准&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;解析器。返回一个包含&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;实例和字典的元组。</target>
        </trans-unit>
        <trans-unit id="72927f75fe80a6b69eb37dde451d1d4fc5f35092" translate="yes" xml:space="preserve">
          <source>Parses an XML section from a string constant. Same as &lt;a href=&quot;#xml.etree.ElementTree.XML&quot;&gt;&lt;code&gt;XML()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;text&lt;/em&gt; is a string containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">从字符串常量解析XML部分。与&lt;a href=&quot;#xml.etree.ElementTree.XML&quot;&gt; &lt;code&gt;XML()&lt;/code&gt; &lt;/a&gt;相同。&lt;em&gt;text&lt;/em&gt;是包含XML数据的字符串。&lt;em&gt;parser&lt;/em&gt;是可选的解析器实例。如果未给出，则使用标准&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;解析器。返回一个&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="7af853719821e9fd72d58e55be379388db261dbd" translate="yes" xml:space="preserve">
          <source>Parses an XML section from a string constant. This function can be used to embed &amp;ldquo;XML literals&amp;rdquo; in Python code. &lt;em&gt;text&lt;/em&gt; is a string containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">从字符串常量解析XML部分。该函数可用于在Python代码中嵌入&amp;ldquo; XML文字&amp;rdquo;。&lt;em&gt;text&lt;/em&gt;是包含XML数据的字符串。&lt;em&gt;parser&lt;/em&gt;是可选的解析器实例。如果未给出，则使用标准&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;解析器。返回一个&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="dae47704d2ee507567c8bffbe47a3689bb12542a" translate="yes" xml:space="preserve">
          <source>Parses an XML section into an element tree incrementally, and reports what&amp;rsquo;s going on to the user. &lt;em&gt;source&lt;/em&gt; is a filename or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; containing XML data. &lt;em&gt;events&lt;/em&gt; is a sequence of events to report back. The supported events are the strings &lt;code&gt;&quot;start&quot;&lt;/code&gt;, &lt;code&gt;&quot;end&quot;&lt;/code&gt;, &lt;code&gt;&quot;comment&quot;&lt;/code&gt;, &lt;code&gt;&quot;pi&quot;&lt;/code&gt;, &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; and &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; (the &amp;ldquo;ns&amp;rdquo; events are used to get detailed namespace information). If &lt;em&gt;events&lt;/em&gt; is omitted, only &lt;code&gt;&quot;end&quot;&lt;/code&gt; events are reported. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. &lt;em&gt;parser&lt;/em&gt; must be a subclass of &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; and can only use the default &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; as a target. Returns an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; providing &lt;code&gt;(event, elem)&lt;/code&gt; pairs.</source>
          <target state="translated">将XML部分逐步解析为元素树，并向用户报告发生了什么。&lt;em&gt;source&lt;/em&gt;是包含XML数据的文件名或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。&lt;em&gt;事件&lt;/em&gt;是要报告的一系列事件。支持的事件是字符串 &lt;code&gt;&quot;start&quot;&lt;/code&gt; ， &lt;code&gt;&quot;end&quot;&lt;/code&gt; ， &lt;code&gt;&quot;comment&quot;&lt;/code&gt; ， &lt;code&gt;&quot;pi&quot;&lt;/code&gt; ， &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; （&amp;ldquo; ns&amp;rdquo;事件用于获取详细的名称空间信息）。如果省略&lt;em&gt;事件&lt;/em&gt;，则仅报告 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 事件。&lt;em&gt;parser&lt;/em&gt;是可选的解析器实例。如果没有给出，使用标准&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;解析器。&lt;em&gt;解析器&lt;/em&gt;必须是&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;的子类，并且只能使用默认的&lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; &lt;/a&gt;作为目标。返回提供 &lt;code&gt;(event, elem)&lt;/code&gt; 对的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e872edbf40c427986497592bdf1120e648adaf87" translate="yes" xml:space="preserve">
          <source>Parses an XML section into an element tree incrementally, and reports what&amp;rsquo;s going on to the user. &lt;em&gt;source&lt;/em&gt; is a filename or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; containing XML data. &lt;em&gt;events&lt;/em&gt; is a sequence of events to report back. The supported events are the strings &lt;code&gt;&quot;start&quot;&lt;/code&gt;, &lt;code&gt;&quot;end&quot;&lt;/code&gt;, &lt;code&gt;&quot;comment&quot;&lt;/code&gt;, &lt;code&gt;&quot;pi&quot;&lt;/code&gt;, &lt;code&gt;&quot;start-ns&quot;&lt;/code&gt; and &lt;code&gt;&quot;end-ns&quot;&lt;/code&gt; (the &amp;ldquo;ns&amp;rdquo; events are used to get detailed namespace information). If &lt;em&gt;events&lt;/em&gt; is omitted, only &lt;code&gt;&quot;end&quot;&lt;/code&gt; events are reported. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. &lt;em&gt;parser&lt;/em&gt; must be a subclass of &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; and can only use the default &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; as a target. Returns an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; providing &lt;code&gt;(event, elem)&lt;/code&gt; pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0df73ef04440db4a8154c7c363a73ee5b68bdc" translate="yes" xml:space="preserve">
          <source>Parses an XML section into an element tree. &lt;em&gt;source&lt;/em&gt; is a filename or file object containing XML data. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns an &lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">将XML部分解析为元素树。&lt;em&gt;source&lt;/em&gt;是包含XML数据的文件名或文件对象。&lt;em&gt;parser&lt;/em&gt;是可选的解析器实例。如果未给出，则使用标准&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;解析器。返回一个&lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt; &lt;code&gt;ElementTree&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="151f487cf2996ed020c6158161493638425f24db" translate="yes" xml:space="preserve">
          <source>Parses command line options and parameter list. &lt;em&gt;args&lt;/em&gt; is the argument list to be parsed, without the leading reference to the running program. Typically, this means &lt;code&gt;sys.argv[1:]&lt;/code&gt;. &lt;em&gt;shortopts&lt;/em&gt; is the string of option letters that the script wants to recognize, with options that require an argument followed by a colon (&lt;code&gt;':'&lt;/code&gt;; i.e., the same format that Unix &lt;code&gt;getopt()&lt;/code&gt; uses).</source>
          <target state="translated">解析命令行选项和参数列表。&lt;em&gt;args&lt;/em&gt;是要解析的参数列表，没有对正在运行的程序的前导引用。通常，这意味着 &lt;code&gt;sys.argv[1:]&lt;/code&gt; 。&lt;em&gt;shortopts&lt;/em&gt;是脚本要识别的选项字母字符串，其中的选项需要一个参数，后跟一个冒号（ &lt;code&gt;':'&lt;/code&gt; ；即Unix &lt;code&gt;getopt()&lt;/code&gt; 使用的相同格式）。</target>
        </trans-unit>
        <trans-unit id="df868cb1150d0cfbe21af7ee4cdd7fd10637e164" translate="yes" xml:space="preserve">
          <source>Parses the contents of the string &lt;em&gt;data&lt;/em&gt;, calling the appropriate handler functions to process the parsed data. &lt;em&gt;isfinal&lt;/em&gt; must be true on the final call to this method; it allows the parsing of a single file in fragments, not the submission of multiple files. &lt;em&gt;data&lt;/em&gt; can be the empty string at any time.</source>
          <target state="translated">解析字符串&lt;em&gt;数据&lt;/em&gt;的内容，调用适当的处理函数以处理解析的数据。在最终调用此方法时，&lt;em&gt;isfinal&lt;/em&gt;必须为true；它允许以片段的形式解析单个文件，而不是多个文件的提交。&lt;em&gt;data&lt;/em&gt;可以随时为空字符串。</target>
        </trans-unit>
        <trans-unit id="3c9fa62bd1c27ae8dae11e96078b9e813bde82ff" translate="yes" xml:space="preserve">
          <source>Parses the lines argument.</source>
          <target state="translated">解析行参数。</target>
        </trans-unit>
        <trans-unit id="69eb6c34919fe2acf467b9421ca3164345b86455" translate="yes" xml:space="preserve">
          <source>Parsing &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; headers can easily be done by the using the classes from the &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">解析&lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt;头可以很容易地从该使用的类来完成&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;模块：</target>
        </trans-unit>
        <trans-unit id="7a72125d574bfaaf5cb1957bf8fd6d75f4bed06e" translate="yes" xml:space="preserve">
          <source>Parsing ASCII Encoded Bytes</source>
          <target state="translated">解析ASCII编码字节</target>
        </trans-unit>
        <trans-unit id="1a2190aff5319c85cf7321ca648eedb2f503316f" translate="yes" xml:space="preserve">
          <source>Parsing Rules</source>
          <target state="translated">解析规则</target>
        </trans-unit>
        <trans-unit id="4574c08a7f81add4e596be6e15b9c64ff9371087" translate="yes" xml:space="preserve">
          <source>Parsing XML</source>
          <target state="translated">解析XML</target>
        </trans-unit>
        <trans-unit id="6893fb3b02102f738b0b2dc3c3ca295c4ed12239" translate="yes" xml:space="preserve">
          <source>Parsing XML with Namespaces</source>
          <target state="translated">用命名空间解析XML</target>
        </trans-unit>
        <trans-unit id="bfa0baebba6e77b74cf2de3bc383caea1641985b" translate="yes" xml:space="preserve">
          <source>Parsing a doctype:</source>
          <target state="translated">解析一个doctype。</target>
        </trans-unit>
        <trans-unit id="0a576c94c20901b183af1b9a14ad8b63c3b0db12" translate="yes" xml:space="preserve">
          <source>Parsing a plist:</source>
          <target state="translated">解析一个plist。</target>
        </trans-unit>
        <trans-unit id="4ed97da7a55821def4af9e81923e5326722f8668" translate="yes" xml:space="preserve">
          <source>Parsing an element with a few attributes and a title:</source>
          <target state="translated">解析一个带有一些属性和标题的元素。</target>
        </trans-unit>
        <trans-unit id="17b7786ea139dbd78158c2c45139b4c833a9c6d6" translate="yes" xml:space="preserve">
          <source>Parsing arguments</source>
          <target state="translated">解析参数</target>
        </trans-unit>
        <trans-unit id="a47b1c882acdc40fdce7e0fb4d77502237f146c7" translate="yes" xml:space="preserve">
          <source>Parsing comments:</source>
          <target state="translated">解析评论。</target>
        </trans-unit>
        <trans-unit id="e31699a29c24a3b26bf46b6d3bdc4ef92cc3a31e" translate="yes" xml:space="preserve">
          <source>Parsing invalid HTML (e.g. unquoted attributes) also works:</source>
          <target state="translated">解析无效的HTML(如未加引号的属性)也可以。</target>
        </trans-unit>
        <trans-unit id="9d4775ea5c5af964bed4d175c5add3a853ae58b6" translate="yes" xml:space="preserve">
          <source>Parsing is performed by the &lt;code&gt;DictConfigurator&lt;/code&gt; class, whose constructor is passed the dictionary used for configuration, and has a &lt;code&gt;configure()&lt;/code&gt; method. The &lt;a href=&quot;#module-logging.config&quot;&gt;&lt;code&gt;logging.config&lt;/code&gt;&lt;/a&gt; module has a callable attribute &lt;code&gt;dictConfigClass&lt;/code&gt; which is initially set to &lt;code&gt;DictConfigurator&lt;/code&gt;. You can replace the value of &lt;code&gt;dictConfigClass&lt;/code&gt; with a suitable implementation of your own.</source>
          <target state="translated">解析由 &lt;code&gt;DictConfigurator&lt;/code&gt; 类执行，该类的构造函数传递给用于配置的字典，并具有 &lt;code&gt;configure()&lt;/code&gt; 方法。所述&lt;a href=&quot;#module-logging.config&quot;&gt; &lt;code&gt;logging.config&lt;/code&gt; &lt;/a&gt;模块具有一个可调用的属性 &lt;code&gt;dictConfigClass&lt;/code&gt; 其最初被设置为 &lt;code&gt;DictConfigurator&lt;/code&gt; 。您可以使用自己的合适实现替换 &lt;code&gt;dictConfigClass&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="e482f0fc24f824a62c06ebb7859dfede7d0aa064" translate="yes" xml:space="preserve">
          <source>Parsing named and numeric character references and converting them to the correct char (note: these 3 references are all equivalent to &lt;code&gt;'&amp;gt;'&lt;/code&gt;):</source>
          <target state="translated">解析命名和数字字符引用，并将它们转换为正确的char（注意：这3个引用都等效于 &lt;code&gt;'&amp;gt;'&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="a44bc4f5945b088db01b0d914b0d941b07799822" translate="yes" xml:space="preserve">
          <source>Parsing requirements for mailto URL schemes.</source>
          <target state="translated">对mailto URL方案的解析要求。</target>
        </trans-unit>
        <trans-unit id="bf3d21c265eb4a00a78d8f62a6d665405bb16b18" translate="yes" xml:space="preserve">
          <source>Partial mocking</source>
          <target state="translated">部分嘲讽</target>
        </trans-unit>
        <trans-unit id="8898adadc5b7993600711b7f5c715af91efba444" translate="yes" xml:space="preserve">
          <source>Partial parsing</source>
          <target state="translated">部分解析</target>
        </trans-unit>
        <trans-unit id="8a924cc1e2ca080e3d2d9070952b331ebd977a94" translate="yes" xml:space="preserve">
          <source>Partial support of the Windows &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms686331(v=vs.85).aspx&quot;&gt;STARTUPINFO&lt;/a&gt; structure is used for &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; creation. The following attributes can be set by passing them as keyword-only arguments.</source>
          <target state="translated">Windows &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms686331(v=vs.85).aspx&quot;&gt;STARTUPINFO&lt;/a&gt;结构的部分支持用于&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;创建。可以通过将以下属性作为仅关键字的参数传递来设置以下属性。</target>
        </trans-unit>
        <trans-unit id="9cefe65497d71ce480712ec369093347b9edf071" translate="yes" xml:space="preserve">
          <source>Pass one or more paths (as strings) to text files to be examined.</source>
          <target state="translated">传递一个或多个路径(字符串)到要检查的文本文件。</target>
        </trans-unit>
        <trans-unit id="5f7450f952fba25aff224ced294b6f998b462e06" translate="yes" xml:space="preserve">
          <source>Pass the barrier. When all the threads party to the barrier have called this function, they are all released simultaneously. If a &lt;em&gt;timeout&lt;/em&gt; is provided, it is used in preference to any that was supplied to the class constructor.</source>
          <target state="translated">通过障碍。当屏障的所有线程都调用了此函数后，它们将同时释放。如果提供了&lt;em&gt;超时&lt;/em&gt;，则它优先于提供给类构造函数的任何&lt;em&gt;超时&lt;/em&gt;使用。</target>
        </trans-unit>
        <trans-unit id="990deeb80d6138076466ced9282b16e7f18f84fb" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by both the current process and child processes. May not be available on all systems.</source>
          <target state="translated">传递给&lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;来请求当前进程和子进程消耗的资源。可能并非在所有系统上都可用。</target>
        </trans-unit>
        <trans-unit id="6c0db84a8ee7e54a3fa9e2983efa2cdd04a121a8" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by child processes of the calling process which have been terminated and waited for.</source>
          <target state="translated">传递给&lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;以请求由调用进程的子进程消耗的资源，这些资源已终止并等待。</target>
        </trans-unit>
        <trans-unit id="65a4c34a2a87e93e40e98a2b333bc373444fe153" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by the calling process, which is the sum of resources used by all threads in the process.</source>
          <target state="translated">传递给&lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;以请求调用进程消耗的资源，这是该进程中所有线程使用的资源的总和。</target>
        </trans-unit>
        <trans-unit id="6d9dbad6ac28906fedfb066087f4e23428020121" translate="yes" xml:space="preserve">
          <source>Pass to &lt;a href=&quot;#resource.getrusage&quot;&gt;&lt;code&gt;getrusage()&lt;/code&gt;&lt;/a&gt; to request resources consumed by the current thread. May not be available on all systems.</source>
          <target state="translated">传递给&lt;a href=&quot;#resource.getrusage&quot;&gt; &lt;code&gt;getrusage()&lt;/code&gt; &lt;/a&gt;以请求当前线程消耗的资源。可能并非在所有系统上都可用。</target>
        </trans-unit>
        <trans-unit id="271d60f487b5b3f1af07cb53c6718722743b3a26" translate="yes" xml:space="preserve">
          <source>Passed</source>
          <target state="translated">Passed</target>
        </trans-unit>
        <trans-unit id="c1a8ee630c475631807e09dc9f6d88c91b3db2ff" translate="yes" xml:space="preserve">
          <source>Passing &lt;a href=&quot;#argparse.RawDescriptionHelpFormatter&quot;&gt;&lt;code&gt;RawDescriptionHelpFormatter&lt;/code&gt;&lt;/a&gt; as &lt;code&gt;formatter_class=&lt;/code&gt; indicates that &lt;a href=&quot;#description&quot;&gt;description&lt;/a&gt; and &lt;a href=&quot;#epilog&quot;&gt;epilog&lt;/a&gt; are already correctly formatted and should not be line-wrapped:</source>
          <target state="translated">将&lt;a href=&quot;#argparse.RawDescriptionHelpFormatter&quot;&gt; &lt;code&gt;RawDescriptionHelpFormatter&lt;/code&gt; &lt;/a&gt;传递为 &lt;code&gt;formatter_class=&lt;/code&gt; 表示&lt;a href=&quot;#description&quot;&gt;说明&lt;/a&gt;和&lt;a href=&quot;#epilog&quot;&gt;Epilog&lt;/a&gt;已正确格式化，不应换行：</target>
        </trans-unit>
        <trans-unit id="3cc7098ba0d08be5b9eeb5f8d505a19e1aa66759" translate="yes" xml:space="preserve">
          <source>Passing &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; as &lt;em&gt;trace_callback&lt;/em&gt; will disable the trace callback.</source>
          <target state="translated">将&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;作为&lt;em&gt;trace_callback&lt;/em&gt;传递将禁用跟踪回调。</target>
        </trans-unit>
        <trans-unit id="d024dbf4319068e7f12b8e77a46bc274a6f14064" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;datetime.strptime('Feb 29', '%b %d')&lt;/code&gt; will fail since &lt;code&gt;1900&lt;/code&gt; is not a leap year.</source>
          <target state="translated">传递 &lt;code&gt;datetime.strptime('Feb 29', '%b %d')&lt;/code&gt; 将失败，因为 &lt;code&gt;1900&lt;/code&gt; 年不是will 年。</target>
        </trans-unit>
        <trans-unit id="02f10d83abb588c6900248de658aa7a62805f3aa" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;debug=True&lt;/code&gt; to &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;asyncio.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;debug=True&lt;/code&gt; 传递给&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;asyncio.run()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6847e074168f7f077adeee00beacd8bad5077f8f" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;include_extras=True&lt;/code&gt; to &lt;a href=&quot;#typing.get_type_hints&quot;&gt;&lt;code&gt;get_type_hints()&lt;/code&gt;&lt;/a&gt; lets one access the extra annotations at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3551e0fe86a1365158e456ce9f8d713fe328a1b" translate="yes" xml:space="preserve">
          <source>Passing a &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object to &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; without the &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; arguments falls under the first case of returning the informal string representation (see also the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-b&quot;&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/a&gt; command-line option to Python). For example:</source>
          <target state="translated">在不返回&lt;em&gt;编码&lt;/em&gt;或&lt;em&gt;错误&lt;/em&gt;参数的情况下将&lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象传递给&lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;属于返回非正式字符串表示形式的第一种情况（另请参见Python 的&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-b&quot;&gt; &lt;code&gt;-b&lt;/code&gt; &lt;/a&gt;命令行选项）。例如：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="219eeaa2971021e607b349edacbbef20abc85c84" translate="yes" xml:space="preserve">
          <source>Passing a &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object to &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; without the &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; arguments falls under the first case of returning the informal string representation (see also the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-b&quot;&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/a&gt; command-line option to Python). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdbfdcb197d91dd62f0f8abd3627fccc6f87c2d" translate="yes" xml:space="preserve">
          <source>Passing a directory is also acceptable:</source>
          <target state="translated">传递一个目录也是可以的。</target>
        </trans-unit>
        <trans-unit id="23ea26b7b9b743e6b69e8adca10474d32ff7f4c4" translate="yes" xml:space="preserve">
          <source>Passing a false value for &lt;em&gt;flag&lt;/em&gt; will cancel a previous call that passed a true value, but otherwise has no effect.</source>
          <target state="translated">为&lt;em&gt;标志&lt;/em&gt;传递错误的值将取消先前传递真实值的调用，但否则无效。</target>
        </trans-unit>
        <trans-unit id="d96b6cf88dd53f9df9983de6c2674fdbef0f57cf" translate="yes" xml:space="preserve">
          <source>Passing an invalid or expired &lt;em&gt;thread_id&lt;/em&gt; may result in undefined behavior, such as segmentation fault.</source>
          <target state="translated">传递无效或过期的&lt;em&gt;thread_id&lt;/em&gt;可能导致未定义的行为，例如分段错误。</target>
        </trans-unit>
        <trans-unit id="d4373763b08bb2aaf6a891ea712bad980acdaeae" translate="yes" xml:space="preserve">
          <source>Passing arguments of the wrong type (e.g. passing a &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; when an &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; is expected) should result in a &lt;a href=&quot;#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, but passing arguments with the wrong value (e.g. a number outside expected boundaries) should result in a &lt;a href=&quot;#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">传递错误类型的参数（例如，当期望&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;时传递&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;）应导致&lt;a href=&quot;#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;，但是传递参数值错误（例如，期望边界之外的数字）的参数应导致&lt;a href=&quot;#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce254e377d02b1546a547ed5a4b85276ee5363e9" translate="yes" xml:space="preserve">
          <source>Passing pointers (or: passing parameters by reference)</source>
          <target state="translated">传递指针(或:通过引用传递参数)</target>
        </trans-unit>
        <trans-unit id="f3fa6806e05d0efc4240e4ddbbec8d0f63598164" translate="yes" xml:space="preserve">
          <source>Passing the &lt;code&gt;-v&lt;/code&gt; option to your test script will instruct &lt;a href=&quot;#unittest.main&quot;&gt;&lt;code&gt;unittest.main()&lt;/code&gt;&lt;/a&gt; to enable a higher level of verbosity, and produce the following output:</source>
          <target state="translated">将 &lt;code&gt;-v&lt;/code&gt; 选项传递到测试脚本将指示&lt;a href=&quot;#unittest.main&quot;&gt; &lt;code&gt;unittest.main()&lt;/code&gt; &lt;/a&gt;启用更高级别的详细程度，并产生以下输出：</target>
        </trans-unit>
        <trans-unit id="bd57565121ff601125e660a69c2626eb5a561528" translate="yes" xml:space="preserve">
          <source>Passing the &lt;em&gt;encoding&lt;/em&gt; argument to &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; allows decoding any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; directly, without needing to make a temporary bytes or bytearray object.</source>
          <target state="translated">将&lt;em&gt;编码&lt;/em&gt;参数传递给&lt;a href=&quot;#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;可以直接解码任何&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;，而无需创建临时字节或bytearray对象。</target>
        </trans-unit>
        <trans-unit id="41238f9215c8696777f2760fbfa0bf80fb0e35d4" translate="yes" xml:space="preserve">
          <source>Passing the &lt;em&gt;encoding&lt;/em&gt; argument to &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; allows decoding any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; directly, without needing to make a temporary bytes or bytearray object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8e2c14f5bd9b6c379aece2cadfc65b3d7043c9" translate="yes" xml:space="preserve">
          <source>Passing the optional &lt;em&gt;timeout&lt;/em&gt; parameter will set the timeout on the socket instance before attempting to connect. If no &lt;em&gt;timeout&lt;/em&gt; is supplied, the global default timeout setting returned by &lt;a href=&quot;#socket.getdefaulttimeout&quot;&gt;&lt;code&gt;getdefaulttimeout()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">传递可选的&lt;em&gt;timeout&lt;/em&gt;参数将在尝试连接之前在套接字实例上设置超时。如果没有&lt;em&gt;超时&lt;/em&gt;供应，全局默认超时设置返回由&lt;a href=&quot;#socket.getdefaulttimeout&quot;&gt; &lt;code&gt;getdefaulttimeout()&lt;/code&gt; &lt;/a&gt;被使用。</target>
        </trans-unit>
        <trans-unit id="8be3c943b1609fffbfc51aad666d0a04adf83c9d" translate="yes" xml:space="preserve">
          <source>Password</source>
          <target state="translated">Password</target>
        </trans-unit>
        <trans-unit id="8b7a491eeb7b640b68f36bf4268b49be1a79e14c" translate="yes" xml:space="preserve">
          <source>Password database entries are reported as a tuple-like object, whose attributes correspond to the members of the &lt;code&gt;passwd&lt;/code&gt; structure (Attribute field below, see &lt;code&gt;&amp;lt;pwd.h&amp;gt;&lt;/code&gt;):</source>
          <target state="translated">密码数据库条目被报告为类似元组的对象，其属性对应于 &lt;code&gt;passwd&lt;/code&gt; 结构的成员（下面的&amp;ldquo;属性&amp;rdquo;字段，请参见 &lt;code&gt;&amp;lt;pwd.h&amp;gt;&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="124df59fda65fb78cd1ae393c55a5a743faabbc8" translate="yes" xml:space="preserve">
          <source>Passwords are limited to a subset of the ASCII character set. All ASCII punctuation is allowed in passwords, however, note that whitespace and non-printable characters are not allowed in passwords. This is a limitation of the way the .netrc file is parsed and may be removed in the future.</source>
          <target state="translated">密码仅限于ASCII字符集的一个子集。密码中允许使用所有ASCII标点符号,但是,请注意,密码中不允许使用空格和不可打印的字符。这是.netrc文件解析方式的限制,将来可能会被删除。</target>
        </trans-unit>
        <trans-unit id="db2483000d154ca9fd74d41fc4e063a4b28faa87" translate="yes" xml:space="preserve">
          <source>Paste</source>
          <target state="translated">Paste</target>
        </trans-unit>
        <trans-unit id="83031d4915377d907a024876b60112ce6b924d4d" translate="yes" xml:space="preserve">
          <source>Patch Decorators</source>
          <target state="translated">补丁装饰剂</target>
        </trans-unit>
        <trans-unit id="09e818ea13f3990a9818a47cc9bb0ee42b62ff97" translate="yes" xml:space="preserve">
          <source>Patch a dictionary, or dictionary like object, and restore the dictionary to its original state after the test.</source>
          <target state="translated">对一个字典或类似字典的对象进行修补,并在测试后将字典恢复到原来的状态。</target>
        </trans-unit>
        <trans-unit id="263242e9d8ee6d3a8c9d445eaa84200b976eae2d" translate="yes" xml:space="preserve">
          <source>Patch can be used as a &lt;code&gt;TestCase&lt;/code&gt; class decorator. It works by decorating each test method in the class. This reduces the boilerplate code when your test methods share a common patchings set. &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; finds tests by looking for method names that start with &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt;. By default this is &lt;code&gt;'test'&lt;/code&gt;, which matches the way &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; finds tests. You can specify an alternative prefix by setting &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt;.</source>
          <target state="translated">修补程序可用作 &lt;code&gt;TestCase&lt;/code&gt; 类装饰器。它通过装饰类中的每个测试方法来工作。当您的测试方法共享一个通用补丁集时，这会减少样板代码。&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;通过查找以 &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt; 开头的方法名称来查找测试。默认情况下，这是 &lt;code&gt;'test'&lt;/code&gt; ，与&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;查找测试的方式匹配。您可以通过设置 &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt; 来指定备用前缀。</target>
        </trans-unit>
        <trans-unit id="8ea198b4f1da676b4f4ee1391b5cd9f398dde45f" translate="yes" xml:space="preserve">
          <source>Patch can be used as a context manager, with the with statement. Here the patching applies to the indented block after the with statement. If you use &amp;ldquo;as&amp;rdquo; then the patched object will be bound to the name after the &amp;ldquo;as&amp;rdquo;; very useful if &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; is creating a mock object for you.</source>
          <target state="translated">通过with语句，修补程序可以用作上下文管理器。在这里，补丁适用于with语句之后的缩进块。如果使用&amp;ldquo; as&amp;rdquo;，则修补对象将绑定到&amp;ldquo; as&amp;rdquo;之后的名称；如果&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;为您创建一个模拟对象，则非常有用。</target>
        </trans-unit>
        <trans-unit id="e8cdaeb7364059eaef7f04272544a953feb7db50" translate="yes" xml:space="preserve">
          <source>Patching Descriptors and Proxy Objects</source>
          <target state="translated">补丁描述符和代理对象</target>
        </trans-unit>
        <trans-unit id="88e8009ab58a0045c0df41b27cf1d23b8f9e089e" translate="yes" xml:space="preserve">
          <source>Patching a class replaces the class with a &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt;&lt;em&gt;instance&lt;/em&gt;. If the class is instantiated in the code under test then it will be the &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt;&lt;code&gt;return_value&lt;/code&gt;&lt;/a&gt; of the mock that will be used.</source>
          <target state="translated">修补类将用&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;&lt;em&gt;实例&lt;/em&gt;替换该类。如果该类在被测试的代码中实例化，则它将是将使用的模拟的&lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt; &lt;code&gt;return_value&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b4f699dcf689fd2e162beca6b9bc0b1522d6aec3" translate="yes" xml:space="preserve">
          <source>Path Browser</source>
          <target state="translated">路径浏览器</target>
        </trans-unit>
        <trans-unit id="02e6896120f3e34789cebea70374b537c5ff361e" translate="yes" xml:space="preserve">
          <source>Path Objects</source>
          <target state="translated">路径对象</target>
        </trans-unit>
        <trans-unit id="075cd299fd28fb73d267fb35307dd296768150cc" translate="yes" xml:space="preserve">
          <source>Path for shell if not on Windows; otherwise &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">如果不是在Windows上，则为shell的路径；否则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3261580ab23ac434d20083846bb4cb68cc50af6" translate="yes" xml:space="preserve">
          <source>Path objects are traversable using the &lt;code&gt;/&lt;/code&gt; operator.</source>
          <target state="translated">路径对象可使用 &lt;code&gt;/&lt;/code&gt; 运算符遍历。</target>
        </trans-unit>
        <trans-unit id="3a047b8534e4641b171f8a06143fb41928c581a6" translate="yes" xml:space="preserve">
          <source>Path objects expose the following features of &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">路径对象公开&lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt;对象的以下功能：</target>
        </trans-unit>
        <trans-unit id="90d064bd19c4c3b16b5c26cced735433742488ee" translate="yes" xml:space="preserve">
          <source>Path to the base directory for the user site-packages. Can be &lt;code&gt;None&lt;/code&gt; if &lt;a href=&quot;#site.getuserbase&quot;&gt;&lt;code&gt;getuserbase()&lt;/code&gt;&lt;/a&gt; hasn&amp;rsquo;t been called yet. Default value is &lt;code&gt;~/.local&lt;/code&gt; for UNIX and Mac OS X non-framework builds, &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; for Mac framework builds, and &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python&lt;/code&gt; for Windows. This value is used by Distutils to compute the installation directories for scripts, data files, Python modules, etc. for the &lt;a href=&quot;https://docs.python.org/3.8/install/index.html#inst-alt-install-user&quot;&gt;user installation scheme&lt;/a&gt;. See also &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONUSERBASE&quot; id=&quot;index-9&quot;&gt;&lt;code&gt;PYTHONUSERBASE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用户站点包基本目录的路径。可 &lt;code&gt;None&lt;/code&gt; 如果&lt;a href=&quot;#site.getuserbase&quot;&gt; &lt;code&gt;getuserbase()&lt;/code&gt; &lt;/a&gt;没有被调用呢。对于UNIX和Mac OS X非框架版本，默认值为 &lt;code&gt;~/.local&lt;/code&gt; 对于Mac框架版本，默认值为〜/ .Library &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; ；对于Windows ，默认值为 &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python&lt;/code&gt; 。 Distutils使用此值来为&lt;a href=&quot;https://docs.python.org/3.8/install/index.html#inst-alt-install-user&quot;&gt;用户安装方案&lt;/a&gt;计算脚本，数据文件，Python模块等的安装目录。另请参见&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONUSERBASE&quot; id=&quot;index-9&quot;&gt; &lt;code&gt;PYTHONUSERBASE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ff9913750ddb642232f3d9e28f9fcbcb43231b6" translate="yes" xml:space="preserve">
          <source>Path to the base directory for the user site-packages. Can be &lt;code&gt;None&lt;/code&gt; if &lt;a href=&quot;#site.getuserbase&quot;&gt;&lt;code&gt;getuserbase()&lt;/code&gt;&lt;/a&gt; hasn&amp;rsquo;t been called yet. Default value is &lt;code&gt;~/.local&lt;/code&gt; for UNIX and Mac OS X non-framework builds, &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;&lt;/code&gt; for Mac framework builds, and &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python&lt;/code&gt; for Windows. This value is used by Distutils to compute the installation directories for scripts, data files, Python modules, etc. for the &lt;a href=&quot;https://docs.python.org/3.9/install/index.html#inst-alt-install-user&quot;&gt;user installation scheme&lt;/a&gt;. See also &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONUSERBASE&quot; id=&quot;index-9&quot;&gt;&lt;code&gt;PYTHONUSERBASE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf71823696007bb6f84923873842b648e97c250a" translate="yes" xml:space="preserve">
          <source>Path to the extension module.</source>
          <target state="translated">扩展模块的路径。</target>
        </trans-unit>
        <trans-unit id="d24fcb72bd38ac60753fa7a12e92464c2f4e5e6d" translate="yes" xml:space="preserve">
          <source>Path to the file of the module.</source>
          <target state="translated">模块文件的路径。</target>
        </trans-unit>
        <trans-unit id="082345dbe035cd147fedde8ccbd5cf46cf3be213" translate="yes" xml:space="preserve">
          <source>Path to the user site-packages for the running Python. Can be &lt;code&gt;None&lt;/code&gt; if &lt;a href=&quot;#site.getusersitepackages&quot;&gt;&lt;code&gt;getusersitepackages()&lt;/code&gt;&lt;/a&gt; hasn&amp;rsquo;t been called yet. Default value is &lt;code&gt;~/.local/lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; for UNIX and non-framework Mac OS X builds, &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;/lib/python/site-packages&lt;/code&gt; for Mac framework builds, and &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python\Python&lt;em&gt;XY&lt;/em&gt;\site-packages&lt;/code&gt; on Windows. This directory is a site directory, which means that &lt;code&gt;.pth&lt;/code&gt; files in it will be processed.</source>
          <target state="translated">正在运行的Python的用户站点包的路径。如果尚未调用&lt;a href=&quot;#site.getusersitepackages&quot;&gt; &lt;code&gt;getusersitepackages()&lt;/code&gt; ,&lt;/a&gt;则可以为 &lt;code&gt;None&lt;/code&gt; 。对于UNIX和非框架Mac OS X版本，默认值为 &lt;code&gt;~/.local/lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; &lt;em&gt;X.Y&lt;/em&gt; / site-packages，对于Mac框架版本，默认值为 &lt;code&gt;~/Library/Python/&lt;em&gt;X.Y&lt;/em&gt;/lib/python/site-packages&lt;/code&gt; &lt;em&gt;XY&lt;/em&gt; / lib / python / site-packages和 &lt;code&gt;&lt;em&gt;%APPDATA%&lt;/em&gt;\Python\Python&lt;em&gt;XY&lt;/em&gt;\site-packages&lt;/code&gt; \ Python \ Python &lt;em&gt;XY&lt;/em&gt; \ site-packages在Windows上。该目录是站点目录，这意味着将处理其中的 &lt;code&gt;.pth&lt;/code&gt; 文件。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7f2f6a9b74e163afaf5e72c91f4670c3537cace" translate="yes" xml:space="preserve">
          <source>Paths are immutable and hashable. Paths of a same flavour are comparable and orderable. These properties respect the flavour&amp;rsquo;s case-folding semantics:</source>
          <target state="translated">路径是不可变且可哈希的。具有相同风味的路径是可比较且可排序的。这些属性遵循该风味的大小写折叠语义：</target>
        </trans-unit>
        <trans-unit id="03da30c8c0f70e648054fb4f58fddd43a85d5727" translate="yes" xml:space="preserve">
          <source>Paths of a different flavour compare unequal and cannot be ordered:</source>
          <target state="translated">不同味道的路径比较不等,不能排序。</target>
        </trans-unit>
        <trans-unit id="1fff6a31661b491fc40cc9c1ad7fe5e479cb7500" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">Pattern</target>
        </trans-unit>
        <trans-unit id="e25673f3169af15d776c516ae19aa4030127504a" translate="yes" xml:space="preserve">
          <source>Pattern Matching: The Gestalt Approach</source>
          <target state="translated">模式匹配:格式塔方法</target>
        </trans-unit>
        <trans-unit id="9c9057f9e71b9a8f041ec30f3fc4350458b54b40" translate="yes" xml:space="preserve">
          <source>Pattern to match test files (&lt;code&gt;test*.py&lt;/code&gt; default)</source>
          <target state="translated">模式以匹配测试文件（默认为 &lt;code&gt;test*.py&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d5b7a4e35290d6ec7c8f9bf1b9c4ba3420b3d7a4" translate="yes" xml:space="preserve">
          <source>Patterns are matched against the fully qualified test method name as imported by the test loader.</source>
          <target state="translated">模式与测试加载器导入的完全合格的测试方法名称相匹配。</target>
        </trans-unit>
        <trans-unit id="6d0a9052da3aad8ee1a8be3a656e5124e56d40bc" translate="yes" xml:space="preserve">
          <source>Patterns that contain a wildcard character (&lt;code&gt;*&lt;/code&gt;) are matched against the test name using &lt;a href=&quot;fnmatch#fnmatch.fnmatchcase&quot;&gt;&lt;code&gt;fnmatch.fnmatchcase()&lt;/code&gt;&lt;/a&gt;; otherwise simple case-sensitive substring matching is used.</source>
          <target state="translated">使用&lt;a href=&quot;fnmatch#fnmatch.fnmatchcase&quot;&gt; &lt;code&gt;fnmatch.fnmatchcase()&lt;/code&gt; &lt;/a&gt;将包含通配符（ &lt;code&gt;*&lt;/code&gt; ）的模式与测试名称进行匹配；否则，使用简单的区分大小写的子字符串匹配。</target>
        </trans-unit>
        <trans-unit id="8d24192acf2841a4026f40125b004cd345b161f3" translate="yes" xml:space="preserve">
          <source>Pause receiving.</source>
          <target state="translated">暂停接收。</target>
        </trans-unit>
        <trans-unit id="88bbbed3b2561167e07ac594ad41aef9e33b6843" translate="yes" xml:space="preserve">
          <source>Pause the receiving end of the transport. No data will be passed to the protocol&amp;rsquo;s &lt;a href=&quot;#asyncio.Protocol.data_received&quot;&gt;&lt;code&gt;protocol.data_received()&lt;/code&gt;&lt;/a&gt; method until &lt;a href=&quot;#asyncio.ReadTransport.resume_reading&quot;&gt;&lt;code&gt;resume_reading()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">暂停传输的接收端。在调用&lt;a href=&quot;#asyncio.ReadTransport.resume_reading&quot;&gt; &lt;code&gt;resume_reading()&lt;/code&gt; &lt;/a&gt;之前，不会将任何数据传递到协议的&lt;a href=&quot;#asyncio.Protocol.data_received&quot;&gt; &lt;code&gt;protocol.data_received()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e99a78e932fa2ab9679cec16918f17a775c3a277" translate="yes" xml:space="preserve">
          <source>Pen control</source>
          <target state="translated">笔控</target>
        </trans-unit>
        <trans-unit id="e12a091922aa0b42fc8a921c944e57c5b09dfc58" translate="yes" xml:space="preserve">
          <source>PendingDeprecationWarning</source>
          <target state="translated">PendingDeprecationWarning</target>
        </trans-unit>
        <trans-unit id="1c591f7d8be7ebb8d527e8d468608e3bbf82ef75" translate="yes" xml:space="preserve">
          <source>Percentage. Multiplies the number by 100 and displays in fixed (&lt;code&gt;'f'&lt;/code&gt;) format, followed by a percent sign.</source>
          <target state="translated">百分比。将数字乘以100并以固定（ &lt;code&gt;'f'&lt;/code&gt; ）格式显示，后跟一个百分号。</target>
        </trans-unit>
        <trans-unit id="0af99ae4d5cee179954d90004dcf8ada413c9870" translate="yes" xml:space="preserve">
          <source>Perform &amp;ldquo;rich comparisons&amp;rdquo; between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Specifically, &lt;code&gt;lt(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt; b&lt;/code&gt;, &lt;code&gt;le(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt;= b&lt;/code&gt;, &lt;code&gt;eq(a,
b)&lt;/code&gt; is equivalent to &lt;code&gt;a == b&lt;/code&gt;, &lt;code&gt;ne(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a != b&lt;/code&gt;, &lt;code&gt;gt(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;gt; b&lt;/code&gt; and &lt;code&gt;ge(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a
&amp;gt;= b&lt;/code&gt;. Note that these functions can return any value, which may or may not be interpretable as a Boolean value. See &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information about rich comparisons.</source>
          <target state="translated">在&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;之间执行&amp;ldquo;丰富的比较&amp;rdquo; 。具体而言， &lt;code&gt;lt(a, b)&lt;/code&gt; 等于 &lt;code&gt;a &amp;lt; b&lt;/code&gt; ， &lt;code&gt;le(a, b)&lt;/code&gt; 等于 &lt;code&gt;a &amp;lt;= b&lt;/code&gt; ， &lt;code&gt;eq(a, b)&lt;/code&gt; 等于 &lt;code&gt;a == b&lt;/code&gt; ， &lt;code&gt;ne(a, b)&lt;/code&gt; 为等效于 &lt;code&gt;a != b&lt;/code&gt; ， &lt;code&gt;gt(a, b)&lt;/code&gt; 等效于 &lt;code&gt;a &amp;gt; b&lt;/code&gt; ， &lt;code&gt;ge(a, b)&lt;/code&gt; 等效于 &lt;code&gt;a &amp;gt;= b&lt;/code&gt; 。请注意，这些函数可以返回任何值，该值可以或可以不解释为布尔值。有关丰富比较的更多信息，请参见&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;比较&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="32fa6539ab7677ba37320ddd4e8abfa8a5648e35" translate="yes" xml:space="preserve">
          <source>Perform &amp;ldquo;rich comparisons&amp;rdquo; between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. Specifically, &lt;code&gt;lt(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt; b&lt;/code&gt;, &lt;code&gt;le(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;lt;= b&lt;/code&gt;, &lt;code&gt;eq(a,
b)&lt;/code&gt; is equivalent to &lt;code&gt;a == b&lt;/code&gt;, &lt;code&gt;ne(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a != b&lt;/code&gt;, &lt;code&gt;gt(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a &amp;gt; b&lt;/code&gt; and &lt;code&gt;ge(a, b)&lt;/code&gt; is equivalent to &lt;code&gt;a
&amp;gt;= b&lt;/code&gt;. Note that these functions can return any value, which may or may not be interpretable as a Boolean value. See &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information about rich comparisons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c68ed757eddddca4140ad328e3ef6838439a850" translate="yes" xml:space="preserve">
          <source>Perform RLE-decompression on the data, as per the binhex4 standard. The algorithm uses &lt;code&gt;0x90&lt;/code&gt; after a byte as a repeat indicator, followed by a count. A count of &lt;code&gt;0&lt;/code&gt; specifies a byte value of &lt;code&gt;0x90&lt;/code&gt;. The routine returns the decompressed data, unless data input data ends in an orphaned repeat indicator, in which case the &lt;a href=&quot;#binascii.Incomplete&quot;&gt;&lt;code&gt;Incomplete&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">根据binhex4标准，对数据执行RLE解压缩。该算法在一个字节后使用 &lt;code&gt;0x90&lt;/code&gt; 作为重复指示符，后跟一个计数。计数 &lt;code&gt;0&lt;/code&gt; 指定字节值 &lt;code&gt;0x90&lt;/code&gt; 。该例程返回解压缩的数据，除非数据输入数据以孤立的重复指示符结尾，在这种情况下会引发&amp;ldquo; &lt;a href=&quot;#binascii.Incomplete&quot;&gt; &lt;code&gt;Incomplete&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="90a0de185e04f628d3f3df798475782c0edfc543" translate="yes" xml:space="preserve">
          <source>Perform a &lt;code&gt;statvfs()&lt;/code&gt; system call on the given path. The return value is an object whose attributes describe the filesystem on the given path, and correspond to the members of the &lt;code&gt;statvfs&lt;/code&gt; structure, namely: &lt;code&gt;f_bsize&lt;/code&gt;, &lt;code&gt;f_frsize&lt;/code&gt;, &lt;code&gt;f_blocks&lt;/code&gt;, &lt;code&gt;f_bfree&lt;/code&gt;, &lt;code&gt;f_bavail&lt;/code&gt;, &lt;code&gt;f_files&lt;/code&gt;, &lt;code&gt;f_ffree&lt;/code&gt;, &lt;code&gt;f_favail&lt;/code&gt;, &lt;code&gt;f_flag&lt;/code&gt;, &lt;code&gt;f_namemax&lt;/code&gt;, &lt;code&gt;f_fsid&lt;/code&gt;.</source>
          <target state="translated">在给定路径上执行 &lt;code&gt;statvfs()&lt;/code&gt; 系统调用。返回值是一个对象，其属性描述给定路径上的文件系统，并对应于 &lt;code&gt;statvfs&lt;/code&gt; 结构的成员，即： &lt;code&gt;f_bsize&lt;/code&gt; ， &lt;code&gt;f_frsize&lt;/code&gt; ， &lt;code&gt;f_blocks&lt;/code&gt; ， &lt;code&gt;f_bfree&lt;/code&gt; ， &lt;code&gt;f_bavail&lt;/code&gt; ， &lt;code&gt;f_files&lt;/code&gt; ， &lt;code&gt;f_ffree&lt;/code&gt; ， &lt;code&gt;f_favail&lt;/code&gt; ， &lt;code&gt;f_flag&lt;/code&gt; ， &lt;code&gt;f_namemax&lt;/code&gt; ， &lt;code&gt;f_fsid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97dfa565438c05e03e5adaed406695350ebb06ae" translate="yes" xml:space="preserve">
          <source>Perform a TurtleScreen update. To be used when tracer is turned off.</source>
          <target state="translated">执行 TurtleScreen 更新。要在跟踪器关闭时使用。</target>
        </trans-unit>
        <trans-unit id="24fd06359ec8ff4397b0b107098fc691c9b96e96" translate="yes" xml:space="preserve">
          <source>Perform a string formatting operation. The string on which this method is called can contain literal text or replacement fields delimited by braces &lt;code&gt;{}&lt;/code&gt;. Each replacement field contains either the numeric index of a positional argument, or the name of a keyword argument. Returns a copy of the string where each replacement field is replaced with the string value of the corresponding argument.</source>
          <target state="translated">执行字符串格式化操作。调用此方法的字符串可以包含文字文本或用大括号 &lt;code&gt;{}&lt;/code&gt; 分隔的替换字段。每个替换字段都包含位置参数的数字索引或关键字参数的名称。返回字符串的副本，其中每个替换字段都用相应参数的字符串值替换。</target>
        </trans-unit>
        <trans-unit id="4a98062a7ec8da49e613524456695bb57c3b3e79" translate="yes" xml:space="preserve">
          <source>Perform binhex4 style RLE-compression on &lt;em&gt;data&lt;/em&gt; and return the result.</source>
          <target state="translated">对&lt;em&gt;数据&lt;/em&gt;执行binhex4样式的RLE压缩并返回结果。</target>
        </trans-unit>
        <trans-unit id="41580f5611bc59f8749d680e8e8ac34cb9061d02" translate="yes" xml:space="preserve">
          <source>Perform case-insensitive matching; expressions like &lt;code&gt;[A-Z]&lt;/code&gt; will also match lowercase letters. Full Unicode matching (such as &lt;code&gt;&amp;Uuml;&lt;/code&gt; matching &lt;code&gt;&amp;uuml;&lt;/code&gt;) also works unless the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;re.ASCII&lt;/code&gt;&lt;/a&gt; flag is used to disable non-ASCII matches. The current locale does not change the effect of this flag unless the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;re.LOCALE&lt;/code&gt;&lt;/a&gt; flag is also used. Corresponds to the inline flag &lt;code&gt;(?i)&lt;/code&gt;.</source>
          <target state="translated">执行不区分大小写的匹配； &lt;code&gt;[A-Z]&lt;/code&gt; 类的表达式也将匹配小写字母。完全Unicode匹配（例如 &lt;code&gt;&amp;Uuml;&lt;/code&gt; 匹配 &lt;code&gt;&amp;uuml;&lt;/code&gt; ）也可以使用，除非使用&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;re.ASCII&lt;/code&gt; &lt;/a&gt;标志禁用非ASCII匹配。除非还使用了&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;re.LOCALE&lt;/code&gt; &lt;/a&gt;标志，否则当前语言环境不会更改此标志的效果。对应于内联标志 &lt;code&gt;(?i)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7141f68329ade808b5b6fd81e8da76f298f39c47" translate="yes" xml:space="preserve">
          <source>Perform hexbin4 binary-to-ASCII translation and return the resulting string. The argument should already be RLE-coded, and have a length divisible by 3 (except possibly the last fragment).</source>
          <target state="translated">执行 hexbin4 二进制到 ASCII 的翻译,并返回结果字符串。参数应该已经被RLE编码,并且长度可以除以3(可能最后一个片段除外)。</target>
        </trans-unit>
        <trans-unit id="3f0f2162e62c2dca45b2095b72d3889ce4cdfc84" translate="yes" xml:space="preserve">
          <source>Perform multiple patches in a single call. It takes the object to be patched (either as an object or a string to fetch the object by importing) and keyword arguments for the patches:</source>
          <target state="translated">在一次调用中执行多个补丁。它接收要修补的对象(可以是一个对象,也可以是一个字符串,通过导入来获取对象)和修补的关键字参数。</target>
        </trans-unit>
        <trans-unit id="c9a6c66a017976ffd70385b244358e43640500c2" translate="yes" xml:space="preserve">
          <source>Perform the SSL setup handshake.</source>
          <target state="translated">进行SSL设置握手。</target>
        </trans-unit>
        <trans-unit id="b80254279aa6118dbc6274921622d6049737abc7" translate="yes" xml:space="preserve">
          <source>Perform the equivalent of an &lt;code&gt;lstat()&lt;/code&gt; system call on the given path. Similar to &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;, but does not follow symbolic links. Return a &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">在给定路径上执行 &lt;code&gt;lstat()&lt;/code&gt; 系统调用的等效操作。与&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt;类似，但不遵循符号链接。返回一个&lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="c4e238899a46acc05e2b8ba043d7a9eaa794d1ac" translate="yes" xml:space="preserve">
          <source>Perform the lock operation &lt;em&gt;operation&lt;/em&gt; on file descriptor &lt;em&gt;fd&lt;/em&gt; (file objects providing a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method are accepted as well). See the Unix manual &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/flock(2)&quot;&gt;flock(2)&lt;/a&gt;&lt;/em&gt; for details. (On some systems, this function is emulated using &lt;code&gt;fcntl()&lt;/code&gt;.)</source>
          <target state="translated">执行锁定操作&lt;em&gt;操作&lt;/em&gt;上文件描述符&lt;em&gt;FD&lt;/em&gt;（提供文件中的对象&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;方法被接受以及）。有关详细信息，请参见Unix手册&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/flock(2)&quot;&gt;flock（2）&lt;/a&gt;&lt;/em&gt;。 （在某些系统上，此函数使用 &lt;code&gt;fcntl()&lt;/code&gt; 进行仿真。）</target>
        </trans-unit>
        <trans-unit id="dfcdf8211b54c6585eddff98af9183765d8e2f90" translate="yes" xml:space="preserve">
          <source>Perform the operation &lt;em&gt;cmd&lt;/em&gt; on file descriptor &lt;em&gt;fd&lt;/em&gt; (file objects providing a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method are accepted as well). The values used for &lt;em&gt;cmd&lt;/em&gt; are operating system dependent, and are available as constants in the &lt;a href=&quot;#module-fcntl&quot;&gt;&lt;code&gt;fcntl&lt;/code&gt;&lt;/a&gt; module, using the same names as used in the relevant C header files. The argument &lt;em&gt;arg&lt;/em&gt; can either be an integer value, or a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. With an integer value, the return value of this function is the integer return value of the C &lt;code&gt;fcntl()&lt;/code&gt; call. When the argument is bytes it represents a binary structure, e.g. created by &lt;a href=&quot;struct#struct.pack&quot;&gt;&lt;code&gt;struct.pack()&lt;/code&gt;&lt;/a&gt;. The binary data is copied to a buffer whose address is passed to the C &lt;code&gt;fcntl()&lt;/code&gt; call. The return value after a successful call is the contents of the buffer, converted to a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. The length of the returned object will be the same as the length of the &lt;em&gt;arg&lt;/em&gt; argument. This is limited to 1024 bytes. If the information returned in the buffer by the operating system is larger than 1024 bytes, this is most likely to result in a segmentation violation or a more subtle data corruption.</source>
          <target state="translated">在文件描述符&lt;em&gt;fd&lt;/em&gt;上执行&lt;em&gt;cmd&lt;/em&gt;操作&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;也接受提供fileno（）方法的文件对象）。用于&lt;em&gt;cmd&lt;/em&gt;的值取决于操作系统，并且可以在&lt;a href=&quot;#module-fcntl&quot;&gt; &lt;code&gt;fcntl&lt;/code&gt; &lt;/a&gt;模块中用作常量，使用的名称与相关C头文件中使用的名称相同。参数&lt;em&gt;arg&lt;/em&gt;可以是整数值，也可以是&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。使用整数值时，此函数的返回值是C &lt;code&gt;fcntl()&lt;/code&gt; 调用的整数返回值。当参数是字节时，它表示一个二进制结构，例如由&lt;a href=&quot;struct#struct.pack&quot;&gt; &lt;code&gt;struct.pack()&lt;/code&gt; &lt;/a&gt;创建的&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;。二进制数据被复制到缓冲区，该缓冲区的地址传递给C &lt;code&gt;fcntl()&lt;/code&gt; 调用。成功调用后的返回值是缓冲区的内容，转换为&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。返回对象的长度将与&lt;em&gt;arg&lt;/em&gt;参数的长度相同。限制为1024个字节。如果操作系统在缓冲区中返回的信息大于1024字节，则最有可能导致分段冲突或更微妙的数据损坏。</target>
        </trans-unit>
        <trans-unit id="4283e2dce7960c4de4bf96707e7142a28f6a01fc" translate="yes" xml:space="preserve">
          <source>Perform the same operation as &lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt;, but return a tuple &lt;code&gt;(new_string,
number_of_subs_made)&lt;/code&gt;.</source>
          <target state="translated">执行与&lt;a href=&quot;#re.sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt;相同的操作，但返回一个元组 &lt;code&gt;(new_string, number_of_subs_made)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="2446d19393c74ec728f3a7d446f5c53c7a11237e" translate="yes" xml:space="preserve">
          <source>Performing these calculations with at least one extra sign extension bit in a finite two&amp;rsquo;s complement representation (a working bit-width of &lt;code&gt;1 + max(x.bit_length(), y.bit_length())&lt;/code&gt; or more) is sufficient to get the same result as if there were an infinite number of sign bits.</source>
          <target state="translated">用有限的二进制补码表示法中的至少一个额外的符号扩展位（工作位宽为 &lt;code&gt;1 + max(x.bit_length(), y.bit_length())&lt;/code&gt; 或更高）执行这些计算就足以得到相同的结果好像有无数个符号位。</target>
        </trans-unit>
        <trans-unit id="f556313cac7de14590c23c9df2ba453fcfdc87a1" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;in&lt;/code&gt; comparison, or &lt;code&gt;not in&lt;/code&gt; if &lt;code&gt;invert&lt;/code&gt; is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6cabab97195b44b05e4796b7abfc4737033475" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;is&lt;/code&gt; comparison, or &lt;code&gt;is not&lt;/code&gt; if &lt;code&gt;invert&lt;/code&gt; is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640ef075e3b653fe4832abcbc49e2b91ac8bdeae" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;os.close(fd)&lt;/code&gt;.</source>
          <target state="translated">执行 &lt;code&gt;os.close(fd)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="752e3fe0e837a39bb8a813d706f8b3821bc1a177" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;os.dup2(fd, new_fd)&lt;/code&gt;.</source>
          <target state="translated">执行 &lt;code&gt;os.dup2(fd, new_fd)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fb5c5f5cf17f84ca944b4fa1f5dd157aa23e9c8" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;os.dup2(os.open(path, flags, mode), fd)&lt;/code&gt;.</source>
          <target state="translated">执行 &lt;code&gt;os.dup2(os.open(path, flags, mode), fd)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ebc44eecc02e0e3eabcbf63d742a9d04931ce6c" translate="yes" xml:space="preserve">
          <source>Performs a Boolean operation. The operation name can be found in &lt;code&gt;cmp_op[opname]&lt;/code&gt;.</source>
          <target state="translated">执行布尔运算。可以在 &lt;code&gt;cmp_op[opname]&lt;/code&gt; 找到操作名称。</target>
        </trans-unit>
        <trans-unit id="89f680388cf82b0508f15de49df30d63281b29a9" translate="yes" xml:space="preserve">
          <source>Performs the SSL shutdown handshake, which removes the TLS layer from the underlying socket, and returns the underlying socket object. This can be used to go from encrypted operation over a connection to unencrypted. The returned socket should always be used for further communication with the other side of the connection, rather than the original socket.</source>
          <target state="translated">执行SSL关闭握手,从底层套接字中移除TLS层,并返回底层套接字对象。这可以用来从连接上的加密操作到未加密。返回的套接字应始终用于与连接的另一侧进一步通信,而不是原始套接字。</target>
        </trans-unit>
        <trans-unit id="d60454ef21734ebe87a8161d440e5d61b544e188" translate="yes" xml:space="preserve">
          <source>Performs the following translations in decoding by default:</source>
          <target state="translated">默认情况下,在解码中执行以下翻译。</target>
        </trans-unit>
        <trans-unit id="aabfe29ace57f01ba61c63da5353a7eae4366011" translate="yes" xml:space="preserve">
          <source>Performs the same function as &lt;a href=&quot;#email.utils.parsedate&quot;&gt;&lt;code&gt;parsedate()&lt;/code&gt;&lt;/a&gt;, but returns either &lt;code&gt;None&lt;/code&gt; or a 10-tuple; the first 9 elements make up a tuple that can be passed directly to &lt;a href=&quot;time#time.mktime&quot;&gt;&lt;code&gt;time.mktime()&lt;/code&gt;&lt;/a&gt;, and the tenth is the offset of the date&amp;rsquo;s timezone from UTC (which is the official term for Greenwich Mean Time) &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;. If the input string has no timezone, the last element of the tuple returned is &lt;code&gt;0&lt;/code&gt;, which represents UTC. Note that indexes 6, 7, and 8 of the result tuple are not usable.</source>
          <target state="translated">执行与&lt;a href=&quot;#email.utils.parsedate&quot;&gt; &lt;code&gt;parsedate()&lt;/code&gt; &lt;/a&gt;相同的功能，但返回 &lt;code&gt;None&lt;/code&gt; 或10元组；前9个元素组成一个元组，可以直接将其传递给&lt;a href=&quot;time#time.mktime&quot;&gt; &lt;code&gt;time.mktime()&lt;/code&gt; &lt;/a&gt;，第十个元素是日期时区相对UTC的偏移量（UTC是格林威治标准时间的正式术语）&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;。如果输入字符串没有时区，则返回的元组的最后一个元素为 &lt;code&gt;0&lt;/code&gt; ，表示UTC。请注意，结果元组的索引6、7和8不可用。</target>
        </trans-unit>
        <trans-unit id="89ddfd2579b261a0b50909628ce2423da1fab7c8" translate="yes" xml:space="preserve">
          <source>Performs the template substitution, returning a new string. &lt;em&gt;mapping&lt;/em&gt; is any dictionary-like object with keys that match the placeholders in the template. Alternatively, you can provide keyword arguments, where the keywords are the placeholders. When both &lt;em&gt;mapping&lt;/em&gt; and &lt;em&gt;kwds&lt;/em&gt; are given and there are duplicates, the placeholders from &lt;em&gt;kwds&lt;/em&gt; take precedence.</source>
          <target state="translated">执行模板替换，返回一个新字符串。&lt;em&gt;映射&lt;/em&gt;是任何类似于字典的对象，其键与模板中的占位符匹配。或者，您可以提供关键字参数，其中关键字是占位符。当同时给出了&lt;em&gt;映射&lt;/em&gt;和&lt;em&gt;kwds&lt;/em&gt;且存在重复项时，&lt;em&gt;kwds中&lt;/em&gt;的占位符优先。</target>
        </trans-unit>
        <trans-unit id="bd9e556fabad08ed102376a515af641b54a566ff" translate="yes" xml:space="preserve">
          <source>Permanent Redirect &lt;a href=&quot;https://tools.ietf.org/html/rfc7238.html&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;RFC 7238&lt;/strong&gt;&lt;/a&gt;, Section 3 (Experimental)</source>
          <target state="translated">永久重定向&lt;a href=&quot;https://tools.ietf.org/html/rfc7238.html&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;RFC 7238&lt;/strong&gt;&lt;/a&gt;，第3部分（实验性）</target>
        </trans-unit>
        <trans-unit id="b444a32c5eae0334ca71dda2c1b1398e37f30b7e" translate="yes" xml:space="preserve">
          <source>Permanent Redirect &lt;a href=&quot;https://tools.ietf.org/html/rfc7238.html&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;RFC 7238&lt;/strong&gt;&lt;/a&gt;, Section 3 (Experimental)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b018dc8100faa36ae221817b9a0becde766f73" translate="yes" xml:space="preserve">
          <source>Permanently remove deleted items from selected mailbox. Generates an &lt;code&gt;EXPUNGE&lt;/code&gt; response for each deleted message. Returned data contains a list of &lt;code&gt;EXPUNGE&lt;/code&gt; message numbers in order received.</source>
          <target state="translated">永久删除所选邮箱中的已删除邮件。为每个删除的消息生成一个 &lt;code&gt;EXPUNGE&lt;/code&gt; 响应。返回的数据包含按接收顺序排列的 &lt;code&gt;EXPUNGE&lt;/code&gt; 消息编号的列表。</target>
        </trans-unit>
        <trans-unit id="922a2aae018739de2e7f95b2906f6a7bda5805d9" translate="yes" xml:space="preserve">
          <source>Permission bits.</source>
          <target state="translated">许可位。</target>
        </trans-unit>
        <trans-unit id="d016004473e0e58d7682856755147e33256bb813" translate="yes" xml:space="preserve">
          <source>Permission denied</source>
          <target state="translated">拒绝批准</target>
        </trans-unit>
        <trans-unit id="9240c3d4a70b95b9e2dc2b61c69fc6e9243c67cc" translate="yes" xml:space="preserve">
          <source>PermissionError</source>
          <target state="translated">PermissionError</target>
        </trans-unit>
        <trans-unit id="0bf008ca5d81230e81034b7868f292b6c45a642d" translate="yes" xml:space="preserve">
          <source>Permissions and times of directories are copied with &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt;, individual files are copied using &lt;a href=&quot;#shutil.copy2&quot;&gt;&lt;code&gt;copy2()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">权限和目录的时间复制与&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;，单个文件复制使用&lt;a href=&quot;#shutil.copy2&quot;&gt; &lt;code&gt;copy2()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e504e73bf0a3461a62cbd35fe470dfc8bf2c5dcf" translate="yes" xml:space="preserve">
          <source>Permitscontrol() to returns the event</source>
          <target state="translated">Permitscontrol()将返回事件</target>
        </trans-unit>
        <trans-unit id="c5b5b88cbddaa8e1656fda5a833d01be846fc40f" translate="yes" xml:space="preserve">
          <source>Permutations are emitted in lexicographic sort order. So, if the input &lt;em&gt;iterable&lt;/em&gt; is sorted, the permutation tuples will be produced in sorted order.</source>
          <target state="translated">排列以字典顺序排序。因此，如果对输入的&lt;em&gt;iterable&lt;/em&gt;进行排序，则将按排序顺序生成置换元组。</target>
        </trans-unit>
        <trans-unit id="0117d320fce0d888119832805e38e4a506f88c57" translate="yes" xml:space="preserve">
          <source>Persistence module which stores non-string data.</source>
          <target state="translated">持久性模块,存储非字符串数据。</target>
        </trans-unit>
        <trans-unit id="d71bbb391ec68a612e1e020d3a59cdde37f5adcf" translate="yes" xml:space="preserve">
          <source>Persistence of External Objects</source>
          <target state="translated">外部对象的持久性</target>
        </trans-unit>
        <trans-unit id="f203458ed70f830ecf62ab5ec4fd43db183fc0d2" translate="yes" xml:space="preserve">
          <source>Personalization</source>
          <target state="translated">Personalization</target>
        </trans-unit>
        <trans-unit id="98fd5b480af814b89b456d84e3868a121619c9aa" translate="yes" xml:space="preserve">
          <source>Personalization string length (maximum length accepted by constructors).</source>
          <target state="translated">个性化字符串长度(构造函数接受的最大长度)。</target>
        </trans-unit>
        <trans-unit id="bb60655fa1c14e25e42619b562af366048efc9d5" translate="yes" xml:space="preserve">
          <source>Personalization together with the keyed mode can also be used to derive different keys from a single one.</source>
          <target state="translated">个性化和按键模式也可以用来从一个按键中衍生出不同的按键。</target>
        </trans-unit>
        <trans-unit id="56b2fd265bce2ea4249697652f9737fe616a79da" translate="yes" xml:space="preserve">
          <source>Peter Funk</source>
          <target state="translated">Peter Funk</target>
        </trans-unit>
        <trans-unit id="503cfd892a68c3d0070d442675777ad188230916" translate="yes" xml:space="preserve">
          <source>Picklability</source>
          <target state="translated">Picklability</target>
        </trans-unit>
        <trans-unit id="b9ac15b70935eb9e679e679f6c189fa09ae67d5d" translate="yes" xml:space="preserve">
          <source>Pickle interface constructor registration for extension types.</source>
          <target state="translated">Pickle接口构造函数注册扩展类型。</target>
        </trans-unit>
        <trans-unit id="2eca33cb11a2aa59b9ecf6f599c9adb004a696a1" translate="yes" xml:space="preserve">
          <source>Pickle serialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da804ce72ffb2456e57ba07cb24c19e51d793b78" translate="yes" xml:space="preserve">
          <source>Pickles the record&amp;rsquo;s attribute dictionary and writes it to the socket in binary format. If there is an error with the socket, silently drops the packet. If the connection was previously lost, re-establishes the connection. To unpickle the record at the receiving end into a &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt;&lt;code&gt;makeLogRecord()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">腌制记录的属性字典，并将其以二进制格式写入套接字。如果套接字有错误，请静默丢弃数据包。如果以前丢失了连接，请重新建立连接。要将接收端的记录释放到&lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; 中&lt;/a&gt;，请使用&lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt; &lt;code&gt;makeLogRecord()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="1c56053b7d0e78c6fbae95ab53af9ceef0a3c06a" translate="yes" xml:space="preserve">
          <source>Pickles the record&amp;rsquo;s attribute dictionary and writes it to the socket in binary format. If there is an error with the socket, silently drops the packet. To unpickle the record at the receiving end into a &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt;&lt;code&gt;makeLogRecord()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">腌制记录的属性字典，并将其以二进制格式写入套接字。如果套接字有错误，请静默丢弃数据包。要将接收端的记录释放到&lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; 中&lt;/a&gt;，请使用&lt;a href=&quot;logging#logging.makeLogRecord&quot;&gt; &lt;code&gt;makeLogRecord()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="c94932969478efe7a329a1a295b5659be6c229f7" translate="yes" xml:space="preserve">
          <source>Pickles the record&amp;rsquo;s attribute dictionary in binary format with a length prefix, and returns it ready for transmission across the socket. The details of this operation are equivalent to:</source>
          <target state="translated">用长度前缀的二进制格式对记录的属性字典进行酸洗，然后将其返回以准备在套接字上传输。此操作的详细信息等效于：</target>
        </trans-unit>
        <trans-unit id="1e451c6df0e9534b87f8f317ad70746e8d408ad1" translate="yes" xml:space="preserve">
          <source>Pickling</source>
          <target state="translated">Pickling</target>
        </trans-unit>
        <trans-unit id="479f26b691b28108bc27a86443e601e66de60606" translate="yes" xml:space="preserve">
          <source>Pickling Class Instances</source>
          <target state="translated">腌制类实例</target>
        </trans-unit>
        <trans-unit id="77e2601ad4aef60f1ee4bac62cdc2791e4c29d92" translate="yes" xml:space="preserve">
          <source>Pickling enums created with the functional API can be tricky as frame stack implementation details are used to try and figure out which module the enumeration is being created in (e.g. it will fail if you use a utility function in separate module, and also may not work on IronPython or Jython). The solution is to specify the module name explicitly as follows:</source>
          <target state="translated">用函数式API创建的枚举可能会很棘手,因为框架堆栈的实现细节被用来尝试并找出枚举是在哪个模块中创建的(例如,如果你在单独的模块中使用一个实用函数,它会失败,也可能在IronPython或Jython上不起作用)。解决方法是明确指定模块名,如下。</target>
        </trans-unit>
        <trans-unit id="102aedc4c02618208304c84353a4e744e7173c74" translate="yes" xml:space="preserve">
          <source>Pickling: &lt;code&gt;__reduce__&lt;/code&gt;, &lt;code&gt;__reduce_ex__&lt;/code&gt;, &lt;code&gt;__getinitargs__&lt;/code&gt;, &lt;code&gt;__getnewargs__&lt;/code&gt;, &lt;code&gt;__getstate__&lt;/code&gt; and &lt;code&gt;__setstate__&lt;/code&gt;</source>
          <target state="translated">酸洗： &lt;code&gt;__reduce__&lt;/code&gt; ， &lt;code&gt;__reduce_ex__&lt;/code&gt; ， &lt;code&gt;__getinitargs__&lt;/code&gt; ， &lt;code&gt;__getnewargs__&lt;/code&gt; ， &lt;code&gt;__getstate__&lt;/code&gt; 和 &lt;code&gt;__setstate__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35ca931fcc670468a1619dccb933e3c60b540bff" translate="yes" xml:space="preserve">
          <source>Pipes and Queues</source>
          <target state="translated">管道和队列</target>
        </trans-unit>
        <trans-unit id="e64d6f8a78d48c8a48daa8e413ed0a9ee19f4ecd" translate="yes" xml:space="preserve">
          <source>Pipes are not supported, so the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt; methods are not implemented.</source>
          <target state="translated">不支持管道，因此未实现&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt; &lt;code&gt;loop.connect_read_pipe()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt; &lt;code&gt;loop.connect_write_pipe()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="a2584aa39f242f7fa61f742e95e02a3f0f8d3752" translate="yes" xml:space="preserve">
          <source>Piping output of your program to tools like &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/head(1)&quot;&gt;head(1)&lt;/a&gt;&lt;/em&gt; will cause a &lt;a href=&quot;#signal.SIGPIPE&quot;&gt;&lt;code&gt;SIGPIPE&lt;/code&gt;&lt;/a&gt; signal to be sent to your process when the receiver of its standard output closes early. This results in an exception like &lt;code&gt;BrokenPipeError: [Errno 32] Broken pipe&lt;/code&gt;. To handle this case, wrap your entry point to catch this exception as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56e96590262671b12c88a46c7794d2d395c71cd" translate="yes" xml:space="preserve">
          <source>Piping output of your program to tools like &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/head(1)&quot;&gt;head(1)&lt;/a&gt;&lt;/em&gt; will cause a &lt;code&gt;SIGPIPE&lt;/code&gt; signal to be sent to your process when the receiver of its standard output closes early. This results in an exception like &lt;code&gt;BrokenPipeError: [Errno 32] Broken pipe&lt;/code&gt;. To handle this case, wrap your entry point to catch this exception as follows:</source>
          <target state="translated">当程序的输出输出到&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/head(1)&quot;&gt;head（1）之&lt;/a&gt;&lt;/em&gt;类的工具时，将在其标准输出的接收器提前关闭时将 &lt;code&gt;SIGPIPE&lt;/code&gt; 信号发送到您的进程。这将导致类似 &lt;code&gt;BrokenPipeError: [Errno 32] Broken pipe&lt;/code&gt; 的异常。要处理这种情况，请包装您的入口点以捕获此异常，如下所示：</target>
        </trans-unit>
        <trans-unit id="e7abd9437945479aed23328dd738203dfb013266" translate="yes" xml:space="preserve">
          <source>Planet</source>
          <target state="translated">Planet</target>
        </trans-unit>
        <trans-unit id="123a7f2fcc9ae7cbbbd7c7627a483853a9708dab" translate="yes" xml:space="preserve">
          <source>Platform</source>
          <target state="translated">Platform</target>
        </trans-unit>
        <trans-unit id="38b10a3fef9531f82571079e6c0973fde8c3c114" translate="yes" xml:space="preserve">
          <source>Platform Support</source>
          <target state="translated">平台支持</target>
        </trans-unit>
        <trans-unit id="ff905013a44bbeb970c42652913293a3fa1300b9" translate="yes" xml:space="preserve">
          <source>Platform dependent, but if non-zero, uniquely identifies the file for a given value of &lt;code&gt;st_dev&lt;/code&gt;. Typically:</source>
          <target state="translated">与平台有关，但如果不为零，则根据给定值 &lt;code&gt;st_dev&lt;/code&gt; 唯一标识文件。通常：</target>
        </trans-unit>
        <trans-unit id="7084e0741690a908772be6f36f009af9b7c5145c" translate="yes" xml:space="preserve">
          <source>Platform dependent:</source>
          <target state="translated">取决于平台。</target>
        </trans-unit>
        <trans-unit id="8ca44e603d25c586c9bf6c4ad1e35d8888ae2165" translate="yes" xml:space="preserve">
          <source>Platform specific modules</source>
          <target state="translated">平台专用模块</target>
        </trans-unit>
        <trans-unit id="0558191147d4364c96f342a5f33275e60632ba76" translate="yes" xml:space="preserve">
          <source>Platform-dependent efficient copy operations</source>
          <target state="translated">依赖平台的高效复制操作</target>
        </trans-unit>
        <trans-unit id="89f3176950b094ee092b083d87a3ea394294bab2" translate="yes" xml:space="preserve">
          <source>Platform-specific notes</source>
          <target state="translated">针对平台的说明</target>
        </trans-unit>
        <trans-unit id="9fe47e8a69eece1d617e5e0b2949d5eb25ff3b3a" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemDefault&lt;/code&gt; sound.</source>
          <target state="translated">播放 &lt;code&gt;SystemDefault&lt;/code&gt; 声音。</target>
        </trans-unit>
        <trans-unit id="566e59746b2e159c689466c2026b06a04a488084" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemExclamation&lt;/code&gt; sound.</source>
          <target state="translated">播放 &lt;code&gt;SystemExclamation&lt;/code&gt; 声音。</target>
        </trans-unit>
        <trans-unit id="1367087c57e69f911b20e62488a2818796ce3f56" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemHand&lt;/code&gt; sound.</source>
          <target state="translated">播放 &lt;code&gt;SystemHand&lt;/code&gt; 声音。</target>
        </trans-unit>
        <trans-unit id="286413e479c251f2c8b7505d0c7e872201bd0efe" translate="yes" xml:space="preserve">
          <source>Play the &lt;code&gt;SystemQuestion&lt;/code&gt; sound.</source>
          <target state="translated">播放 &lt;code&gt;SystemQuestion&lt;/code&gt; 声音。</target>
        </trans-unit>
        <trans-unit id="e5a38385bd1801f94f6afcc5224a41a5634b9ea5" translate="yes" xml:space="preserve">
          <source>Play the sound repeatedly. The &lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt;&lt;code&gt;SND_ASYNC&lt;/code&gt;&lt;/a&gt; flag must also be used to avoid blocking. Cannot be used with &lt;a href=&quot;#winsound.SND_MEMORY&quot;&gt;&lt;code&gt;SND_MEMORY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">反复播放声音。所述&lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt; &lt;code&gt;SND_ASYNC&lt;/code&gt; &lt;/a&gt;标志也必须使用，以避免阻塞。不能与&lt;a href=&quot;#winsound.SND_MEMORY&quot;&gt; &lt;code&gt;SND_MEMORY&lt;/code&gt; &lt;/a&gt;一起使用。</target>
        </trans-unit>
        <trans-unit id="e5c41e818401745189aa92dc2b5b8f589f4936d2" translate="yes" xml:space="preserve">
          <source>Please consult the SQLite documentation about the possible values for the first argument and the meaning of the second and third argument depending on the first one. All necessary constants are available in the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">请咨询SQLite文档，了解第一个参数的可能值以及第二个和第三个参数的含义，具体取决于第一个参数。&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;模块中提供了所有必需的常量。</target>
        </trans-unit>
        <trans-unit id="965d48bb52ce2d9d91cc30b01489f2b19edc118e" translate="yes" xml:space="preserve">
          <source>Please note that a much more powerful error checking mechanism is available through the &lt;code&gt;errcheck&lt;/code&gt; attribute; see the reference manual for details.</source>
          <target state="translated">请注意，通过 &lt;code&gt;errcheck&lt;/code&gt; 属性可以使用更强大的错误检查机制。有关详细信息，请参见参考手册。</target>
        </trans-unit>
        <trans-unit id="c8fc0f93e5dd7c64f8d2e2fe1baaf4f1c7641a90" translate="yes" xml:space="preserve">
          <source>Please note that config parsers don&amp;rsquo;t support escaping of comment prefixes so using &lt;em&gt;inline_comment_prefixes&lt;/em&gt; may prevent users from specifying option values with characters used as comment prefixes. When in doubt, avoid setting &lt;em&gt;inline_comment_prefixes&lt;/em&gt;. In any circumstances, the only way of storing comment prefix characters at the beginning of a line in multiline values is to interpolate the prefix, for example:</source>
          <target state="translated">请注意，配置解析器不支持转义注释前缀，因此使用&lt;em&gt;inline_comment_prefixes&lt;/em&gt;可能会阻止用户使用用作注释前缀的字符来指定选项值。如有疑问，请避免设置&lt;em&gt;inline_comment_prefixes&lt;/em&gt;。在任何情况下，在多行值的行首存储注释前缀字符的唯一方法是对前缀进行插值，例如：</target>
        </trans-unit>
        <trans-unit id="310bbccd36313c76e203cfc5b0ebdd8ca95d2449" translate="yes" xml:space="preserve">
          <source>Please note that default values have precedence over fallback values. For instance, in our example the &lt;code&gt;'CompressionLevel'&lt;/code&gt; key was specified only in the &lt;code&gt;'DEFAULT'&lt;/code&gt; section. If we try to get it from the section &lt;code&gt;'topsecret.server.com'&lt;/code&gt;, we will always get the default, even if we specify a fallback:</source>
          <target state="translated">请注意，默认值优先于后备值。例如，在我们的示例中，仅在 &lt;code&gt;'DEFAULT'&lt;/code&gt; 部分中指定了 &lt;code&gt;'CompressionLevel'&lt;/code&gt; 键。如果我们尝试从 &lt;code&gt;'topsecret.server.com'&lt;/code&gt; 部分获取它，即使指定了备用，我们也将始终获取默认值：</target>
        </trans-unit>
        <trans-unit id="86e0817628ee18c1a8ed5a0fc40828bffeaed3c5" translate="yes" xml:space="preserve">
          <source>Please note that direct use of bytecode files (and thus not source code files) inhibits your modules from being usable by all Python implementations or new versions of Python which change the bytecode format.</source>
          <target state="translated">请注意,直接使用字节码文件 (因此不是源代码文件)会抑制您的模块被所有 Python 实现或改变字节码格式的 Python 新版本所使用。</target>
        </trans-unit>
        <trans-unit id="dfa6d4d5a47f1ee1b1fd351d19df2d53810a47a9" translate="yes" xml:space="preserve">
          <source>Please note that this function works like &lt;a href=&quot;#locale.format_string&quot;&gt;&lt;code&gt;format_string()&lt;/code&gt;&lt;/a&gt; but will only work for exactly one &lt;code&gt;%char&lt;/code&gt; specifier. For example, &lt;code&gt;'%f'&lt;/code&gt; and &lt;code&gt;'%.0f'&lt;/code&gt; are both valid specifiers, but &lt;code&gt;'%f KiB'&lt;/code&gt; is not.</source>
          <target state="translated">请注意，此函数的工作方式与&lt;a href=&quot;#locale.format_string&quot;&gt; &lt;code&gt;format_string()&lt;/code&gt; 相同,&lt;/a&gt;但仅适用于一个 &lt;code&gt;%char&lt;/code&gt; 说明符。例如， &lt;code&gt;'%f'&lt;/code&gt; 和 &lt;code&gt;'%.0f'&lt;/code&gt; 都是有效的说明符，但 &lt;code&gt;'%f KiB'&lt;/code&gt; 不是。</target>
        </trans-unit>
        <trans-unit id="373685c0595172990b3ace0f5f8fe1c0ca75870e" translate="yes" xml:space="preserve">
          <source>Please note: there are ways to add a set of key-value pairs in a single operation. When you use a regular dictionary in those operations, the order of the keys will be ordered. For example:</source>
          <target state="translated">请注意:有一些方法可以在一次操作中添加一组键值对。当你在这些操作中使用常规字典时,键的顺序将被排序。例如</target>
        </trans-unit>
        <trans-unit id="2ea35b5666ef240cb6a4493c17fe5ba6382d03f6" translate="yes" xml:space="preserve">
          <source>Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for more information on best practices.</source>
          <target state="translated">请阅读&lt;a href=&quot;ssl#ssl-security&quot;&gt;安全注意事项&lt;/a&gt;，以获取有关最佳做法的更多信息。</target>
        </trans-unit>
        <trans-unit id="47bc58981366eed814a57a39e644b2e08a3b6870" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;os#os.supports_follow_symlinks&quot;&gt;&lt;code&gt;os.supports_follow_symlinks&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;os#os.supports_follow_symlinks&quot;&gt; &lt;code&gt;os.supports_follow_symlinks&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ae02dfe03795c3955ac3c8f1cf68ffc72a268cb" translate="yes" xml:space="preserve">
          <source>Plus corresponds to the unary prefix plus operator in Python. This operation applies the context precision and rounding, so it is &lt;em&gt;not&lt;/em&gt; an identity operation.</source>
          <target state="translated">加号对应于Python中的一元前缀加号运算符。此操作应用上下文精度和舍入，因此它&lt;em&gt;不是&lt;/em&gt;身份操作。</target>
        </trans-unit>
        <trans-unit id="0330491d58c610056c9cfabfdbebacfad2431d29" translate="yes" xml:space="preserve">
          <source>Pointer instances are created by calling the &lt;a href=&quot;#ctypes.pointer&quot;&gt;&lt;code&gt;pointer()&lt;/code&gt;&lt;/a&gt; function on a &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; type:</source>
          <target state="translated">指针实例是通过在&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;类型上调用&lt;a href=&quot;#ctypes.pointer&quot;&gt; &lt;code&gt;pointer()&lt;/code&gt; &lt;/a&gt;函数创建的：</target>
        </trans-unit>
        <trans-unit id="f705c08361997cb6f7df09dbc0c27afef4b025f1" translate="yes" xml:space="preserve">
          <source>Pointer instances can also be indexed with integers:</source>
          <target state="translated">指针实例也可以用整数进行索引。</target>
        </trans-unit>
        <trans-unit id="482aa3fcf0e95b3b47d95bdfe561af13938b8ff1" translate="yes" xml:space="preserve">
          <source>Pointer instances have a &lt;a href=&quot;#ctypes._Pointer.contents&quot;&gt;&lt;code&gt;contents&lt;/code&gt;&lt;/a&gt; attribute which returns the object to which the pointer points, the &lt;code&gt;i&lt;/code&gt; object above:</source>
          <target state="translated">指针实例具有&lt;a href=&quot;#ctypes._Pointer.contents&quot;&gt; &lt;code&gt;contents&lt;/code&gt; &lt;/a&gt;属性，该属性返回指针所指向的对象， &lt;code&gt;i&lt;/code&gt; 上面的i对象：</target>
        </trans-unit>
        <trans-unit id="c5b722fc5ad9faac57dfe90f51b7e6e51ad5a968" translate="yes" xml:space="preserve">
          <source>Pointers</source>
          <target state="translated">Pointers</target>
        </trans-unit>
        <trans-unit id="8d61184962dda249c7c096096c40ff46b825f4a7" translate="yes" xml:space="preserve">
          <source>Policies</source>
          <target state="translated">Policies</target>
        </trans-unit>
        <trans-unit id="f13ca4e051430c60cd600a3b936cd44760445204" translate="yes" xml:space="preserve">
          <source>Policies is a low-level mechanism to alter the behavior of functions like &lt;a href=&quot;asyncio-eventloop#asyncio.get_event_loop&quot;&gt;&lt;code&gt;asyncio.get_event_loop()&lt;/code&gt;&lt;/a&gt;. See also the main &lt;a href=&quot;asyncio-policy#asyncio-policies&quot;&gt;policies section&lt;/a&gt; for more details.</source>
          <target state="translated">策略是一种底层机制，用于更改&lt;a href=&quot;asyncio-eventloop#asyncio.get_event_loop&quot;&gt; &lt;code&gt;asyncio.get_event_loop()&lt;/code&gt; 之&lt;/a&gt;类的功能的行为。有关更多详细信息，另请参见主要&lt;a href=&quot;asyncio-policy#asyncio-policies&quot;&gt;策略部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6e19b461365ea4d2f9baa4f1541cdbc31638a3c" translate="yes" xml:space="preserve">
          <source>Policy Objects</source>
          <target state="translated">政策对象</target>
        </trans-unit>
        <trans-unit id="b9d50f1346b401ffaac22261d9a0445a59b9c3ef" translate="yes" xml:space="preserve">
          <source>Policy objects can also be combined using the addition operator, producing a policy object whose settings are a combination of the non-default values of the summed objects:</source>
          <target state="translated">策略对象也可以使用加法运算符进行组合,产生一个策略对象,其设置是加总对象的非默认值的组合。</target>
        </trans-unit>
        <trans-unit id="10db6aaa1dae6d5ca93baae8300239ae0d491fd7" translate="yes" xml:space="preserve">
          <source>Policy objects give the email package the flexibility to handle all these disparate use cases.</source>
          <target state="translated">策略对象为电子邮件包提供了处理所有这些不同用例的灵活性。</target>
        </trans-unit>
        <trans-unit id="cc59ba147a78b1cba0063b32337a5117142efb00" translate="yes" xml:space="preserve">
          <source>Policy objects should implement the APIs defined in the &lt;a href=&quot;#asyncio.AbstractEventLoopPolicy&quot;&gt;&lt;code&gt;AbstractEventLoopPolicy&lt;/code&gt;&lt;/a&gt; abstract base class.</source>
          <target state="translated">策略对象应实现在&lt;a href=&quot;#asyncio.AbstractEventLoopPolicy&quot;&gt; &lt;code&gt;AbstractEventLoopPolicy&lt;/code&gt; &lt;/a&gt;抽象基类中定义的API 。</target>
        </trans-unit>
        <trans-unit id="1809b1c47a1a0f8ffda4a1194b61478553d974fe" translate="yes" xml:space="preserve">
          <source>Polling Objects</source>
          <target state="translated">投票对象</target>
        </trans-unit>
        <trans-unit id="5d4332b021cb2ecbffef0b518c251198f0483519" translate="yes" xml:space="preserve">
          <source>Polls the set of registered file descriptors, and returns a possibly-empty list containing &lt;code&gt;(fd, event)&lt;/code&gt; 2-tuples for the descriptors that have events or errors to report. &lt;em&gt;fd&lt;/em&gt; is the file descriptor, and &lt;em&gt;event&lt;/em&gt; is a bitmask with bits set for the reported events for that descriptor &amp;mdash; &lt;code&gt;POLLIN&lt;/code&gt; for waiting input, &lt;code&gt;POLLOUT&lt;/code&gt; to indicate that the descriptor can be written to, and so forth. An empty list indicates that the call timed out and no file descriptors had any events to report. If &lt;em&gt;timeout&lt;/em&gt; is given, it specifies the length of time in milliseconds which the system will wait for events before returning. If &lt;em&gt;timeout&lt;/em&gt; is omitted, -1, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the call will block until there is an event for this poll object.</source>
          <target state="translated">轮询已注册文件描述符的集合，并返回一个包含 &lt;code&gt;(fd, event)&lt;/code&gt; 2元组的可能为空的列表，用于包含要报告的事件或错误的描述符。&lt;em&gt;FD&lt;/em&gt;是文件描述符，而&lt;em&gt;事件&lt;/em&gt;是对报告的事件为描述符中设置位的位掩码- &lt;code&gt;POLLIN&lt;/code&gt; 等待输入， &lt;code&gt;POLLOUT&lt;/code&gt; 以表明描述符可以写入，等等。空列表表示该呼叫超时，并且没有文件描述符报告任何事件。如果给出了&lt;em&gt;超时&lt;/em&gt;，它将指定系统将在返回之前等待事件的时间长度（以毫秒为单位）。如果省略&lt;em&gt;超时&lt;/em&gt;，-1或&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，该调用将一直阻塞，直到此轮询对象发生事件为止。</target>
        </trans-unit>
        <trans-unit id="8235db5fc164907dd37c9f8fe6afa7077606c5a7" translate="yes" xml:space="preserve">
          <source>Polls the set of registered file descriptors, and returns a possibly-empty list containing &lt;code&gt;(fd, event)&lt;/code&gt; 2-tuples for the descriptors that have events or errors to report. &lt;em&gt;fd&lt;/em&gt; is the file descriptor, and &lt;em&gt;event&lt;/em&gt; is a bitmask with bits set for the reported events for that descriptor &amp;mdash; &lt;code&gt;POLLIN&lt;/code&gt; for waiting input, &lt;code&gt;POLLOUT&lt;/code&gt; to indicate that the descriptor can be written to, and so forth. An empty list indicates that the call timed out and no file descriptors had any events to report. If &lt;em&gt;timeout&lt;/em&gt; is given, it specifies the length of time in milliseconds which the system will wait for events before returning. If &lt;em&gt;timeout&lt;/em&gt; is omitted, negative, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the call will block until there is an event for this poll object.</source>
          <target state="translated">轮询已注册文件描述符的集合，并返回一个包含 &lt;code&gt;(fd, event)&lt;/code&gt; 2元组的可能为空的列表，用于包含要报告的事件或错误的描述符。&lt;em&gt;FD&lt;/em&gt;是文件描述符，而&lt;em&gt;事件&lt;/em&gt;是对报告的事件为描述符中设置位的位掩码- &lt;code&gt;POLLIN&lt;/code&gt; 等待输入， &lt;code&gt;POLLOUT&lt;/code&gt; 以表明描述符可以写入，等等。空列表表示呼叫超时，并且没有文件描述符报告任何事件。如果给出了&lt;em&gt;超时&lt;/em&gt;，则它指定系统将在返回之前等待事件的时间长度（以毫秒为单位）。如果省略&lt;em&gt;超时&lt;/em&gt;，负数或&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，该调用将一直阻塞，直到此轮询对象发生事件为止。</target>
        </trans-unit>
        <trans-unit id="c27a9bb77fd2f98033253218b572e79bc22251dc" translate="yes" xml:space="preserve">
          <source>Pop and return the smallest item from the &lt;em&gt;heap&lt;/em&gt;, and also push the new &lt;em&gt;item&lt;/em&gt;. The heap size doesn&amp;rsquo;t change. If the heap is empty, &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">弹出并从&lt;em&gt;堆中&lt;/em&gt;返回最小的项，然后推送新&lt;em&gt;项&lt;/em&gt;。堆大小不变。如果堆为空，则会引发&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9a06f0699ad3349431c67e1a47549dabc15760e" translate="yes" xml:space="preserve">
          <source>Pop and return the smallest item from the &lt;em&gt;heap&lt;/em&gt;, maintaining the heap invariant. If the heap is empty, &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; is raised. To access the smallest item without popping it, use &lt;code&gt;heap[0]&lt;/code&gt;.</source>
          <target state="translated">弹出并从&lt;em&gt;堆中&lt;/em&gt;返回最小的项，从而保持堆不变。如果堆为空，则会引发&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;。要访问最小的项目而不弹出它，请使用 &lt;code&gt;heap[0]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee245e4e5d6d950b1854efc1afc869a99c34f7b0" translate="yes" xml:space="preserve">
          <source>Pop the last-pushed input source from the input stack. This is the same method used internally when the lexer reaches EOF on a stacked input stream.</source>
          <target state="translated">从输入栈中弹出最后推送的输入源。这与内部使用的方法相同,当词法器在堆栈输入流上达到EOF时。</target>
        </trans-unit>
        <trans-unit id="055df3f558473d7ece8b7d50e1df0ab063d8b702" translate="yes" xml:space="preserve">
          <source>Pop up a dialog window for input of a number. title is the title of the dialog window, prompt is a text mostly describing what numerical information to input. default: default value, minval: minimum value for input, maxval: maximum value for input The number input must be in the range minval .. maxval if these are given. If not, a hint is issued and the dialog remains open for correction. Return the number input. If the dialog is canceled, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">弹出对话框，输入数字。title是对话框窗口的标题，提示符是主要描述要输入哪些数字信息的文本。默认值：默认值，minval：输入的最小值，maxval：输入的最大值输入的数字必须在minval .. maxval的范围内（如果已给出）。如果不是，则发出提示，对话框保持打开状态以进行更正。返回数字输入。如果取消对话框，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a30e7e9c16d1d2289a14843ccfa17e59bc5f258" translate="yes" xml:space="preserve">
          <source>Pop up a dialog window for input of a string. Parameter title is the title of the dialog window, prompt is a text mostly describing what information to input. Return the string input. If the dialog is canceled, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">弹出一个对话框窗口，用于输入字符串。参数标题是对话框窗口的标题，提示是主要描述要输入哪些信息的文本。返回字符串输入。如果取消对话框，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aceabe368eed8bf1ef8907fda06132011ac87f29" translate="yes" xml:space="preserve">
          <source>Popen Constructor</source>
          <target state="translated">Popen构造器</target>
        </trans-unit>
        <trans-unit id="c58508b5bfbc193df948f2c96619660505caf807" translate="yes" xml:space="preserve">
          <source>Popen Objects</source>
          <target state="translated">Popen对象</target>
        </trans-unit>
        <trans-unit id="a46cb4ea3a3611a4d180ffb9a39ca4d82b2ad2d0" translate="yes" xml:space="preserve">
          <source>Popen and the other functions in this module that use it raise an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt; with arguments &lt;code&gt;executable&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;cwd&lt;/code&gt;, and &lt;code&gt;env&lt;/code&gt;. The value for &lt;code&gt;args&lt;/code&gt; may be a single string or a list of strings, depending on platform.</source>
          <target state="translated">Popen和此模块中使用它的其他函数会引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; 具有 &lt;code&gt;executable&lt;/code&gt; ， &lt;code&gt;args&lt;/code&gt; ， &lt;code&gt;cwd&lt;/code&gt; 和 &lt;code&gt;env&lt;/code&gt; 。 &lt;code&gt;args&lt;/code&gt; 的值可以是单个字符串或字符串列表，具体取决于平台。</target>
        </trans-unit>
        <trans-unit id="3b17551906939bf00cd6210cfc6e1b7c22e1ad7f" translate="yes" xml:space="preserve">
          <source>Popen objects are supported as context managers via the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement: on exit, standard file descriptors are closed, and the process is waited for.</source>
          <target state="translated">通过&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句支持将Popen对象用作上下文管理器：在退出时，关闭标准文件描述符，然后等待过程。</target>
        </trans-unit>
        <trans-unit id="978c59d8af192e39c8936fde3caa23f59d8cd38d" translate="yes" xml:space="preserve">
          <source>Popen objects are supported as context managers via the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement: on exit, standard file descriptors are closed, and the process is waited for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd4b5da656a3d45200c0848ee3cb43ac97a6338" translate="yes" xml:space="preserve">
          <source>Pops &lt;em&gt;count&lt;/em&gt; iterables from the stack, joins them in a single tuple, and pushes the result. Implements iterable unpacking in tuple displays &lt;code&gt;(*x, *y, *z)&lt;/code&gt;.</source>
          <target state="translated">Pops 从堆栈中&lt;em&gt;计数&lt;/em&gt;可迭代项，将它们合并为一个元组，然后推送结果。在元组显示 &lt;code&gt;(*x, *y, *z)&lt;/code&gt; 实现可迭代的拆包。</target>
        </trans-unit>
        <trans-unit id="5814db5efa9b8e3b6caaad0167cd52a48d05cad9" translate="yes" xml:space="preserve">
          <source>Pops &lt;em&gt;count&lt;/em&gt; mappings from the stack, merges them into a single dictionary, and pushes the result. Implements dictionary unpacking in dictionary displays &lt;code&gt;{**x, **y, **z}&lt;/code&gt;.</source>
          <target state="translated">Pops 从堆栈中&lt;em&gt;计数&lt;/em&gt;映射，将它们合并为一个字典，然后推送结果。在字典显示 &lt;code&gt;{**x, **y, **z}&lt;/code&gt; 实现字典解压缩。</target>
        </trans-unit>
        <trans-unit id="f955b29f96865f975ad2cc90b3761ccd0a745b04" translate="yes" xml:space="preserve">
          <source>Pops TOS and delegates to it as a subiterator from a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">弹出TOS并将其作为子迭代器从&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;委托给它。</target>
        </trans-unit>
        <trans-unit id="dfdc28a8937cb1fea005bc1c6e29745f179c6b94" translate="yes" xml:space="preserve">
          <source>Pops TOS and delegates to it as a subiterator from a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75775f93f745fd74be7c11015a4c8773b0fb9e4" translate="yes" xml:space="preserve">
          <source>Pops TOS and yields it from a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="translated">弹出TOS并从&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;产生它。</target>
        </trans-unit>
        <trans-unit id="ca1ee5bef01308b73dd27cc3ba32e25e4bcefd9b" translate="yes" xml:space="preserve">
          <source>Pops TOS and yields it from a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311c1ea2633dd1ec9cbb05af909c7c19133217d2" translate="yes" xml:space="preserve">
          <source>Pops a list from the stack and pushes a tuple containing the same values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6868d2193ffcb37b3d1f2442c16bbba7237b9adc" translate="yes" xml:space="preserve">
          <source>Pops two values from the stack. If SECOND is not None and TOS is true unwinds the EXCEPT_HANDLER block which was created when the exception was caught and pushes &lt;code&gt;NULL&lt;/code&gt; to the stack.</source>
          <target state="translated">从堆栈中弹出两个值。如果SECOND不为None并且TOS为true，则展开EXCEPT_HANDLER块，该块是在捕获异常时创建的，并将 &lt;code&gt;NULL&lt;/code&gt; 推入堆栈。</target>
        </trans-unit>
        <trans-unit id="e6936131642fa3e4ba0d0f2eb70bda60239e2636" translate="yes" xml:space="preserve">
          <source>Population standard deviation of data.</source>
          <target state="translated">数据的人口标准差。</target>
        </trans-unit>
        <trans-unit id="18813ec1cc24c6306c29b1b2d825acb9bd81a19c" translate="yes" xml:space="preserve">
          <source>Population variance of data.</source>
          <target state="translated">数据的群体方差。</target>
        </trans-unit>
        <trans-unit id="5a089a07054447bb48b9434607e3b38a83e6a79f" translate="yes" xml:space="preserve">
          <source>Port number as integer, if present</source>
          <target state="translated">端口号为整数,如果存在的话</target>
        </trans-unit>
        <trans-unit id="b9f18b923e08eb677137525e942c79d70f214b5f" translate="yes" xml:space="preserve">
          <source>Portable Bitmap Files</source>
          <target state="translated">便携式位图文件</target>
        </trans-unit>
        <trans-unit id="abcb4ef75def5eeb0dfd26e2d30fca465df66512" translate="yes" xml:space="preserve">
          <source>Portable Graymap Files</source>
          <target state="translated">便携式灰度地图文件</target>
        </trans-unit>
        <trans-unit id="0655d96b4660aed951fededfbd01c7c59119ecd3" translate="yes" xml:space="preserve">
          <source>Portable Network Graphics</source>
          <target state="translated">便携式网络图形</target>
        </trans-unit>
        <trans-unit id="ee01b2134ec356d26acdc9982e7f3833060105a8" translate="yes" xml:space="preserve">
          <source>Portable Pixmap Files</source>
          <target state="translated">便携式Pixmap文件</target>
        </trans-unit>
        <trans-unit id="23882c575954a0789bf02aba9e6dd01f539bc738" translate="yes" xml:space="preserve">
          <source>Portuguese</source>
          <target state="translated">Portuguese</target>
        </trans-unit>
        <trans-unit id="59b624bfe60ebbef01b74f793b39f506221b6c00" translate="yes" xml:space="preserve">
          <source>Positional and keyword arguments may also be passed to &lt;a href=&quot;#atexit.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; to be passed along to the registered function when it is called:</source>
          <target state="translated">位置和关键字参数也可以传递给&lt;a href=&quot;#atexit.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;，以便在调用该函数时传递给已注册的函数：</target>
        </trans-unit>
        <trans-unit id="f8b8ca1d6ad9d89dd32a11078244dcd70423b419" translate="yes" xml:space="preserve">
          <source>Positional arguments are files to compile or directories that contain source files, traversed recursively. If no argument is given, behave as if the command line was &lt;code&gt;-l &amp;lt;directories from sys.path&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">位置参数是递归遍历的要编译的文件或包含源文件的目录。如果未提供任何参数，则其行为就像命令行是 &lt;code&gt;-l &amp;lt;directories from sys.path&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06fe9ace9667aa168708159444d8188edd059f54" translate="yes" xml:space="preserve">
          <source>Positive</source>
          <target state="translated">Positive</target>
        </trans-unit>
        <trans-unit id="81a9a0719b90c9b53d8f587213315a80505f6dff" translate="yes" xml:space="preserve">
          <source>Positive and negative infinity, positive and negative zero, and nans, are formatted as &lt;code&gt;inf&lt;/code&gt;, &lt;code&gt;-inf&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;nan&lt;/code&gt; respectively, regardless of the precision.</source>
          <target state="translated">正和负无穷大，正和负零以及 &lt;code&gt;-inf&lt;/code&gt; 格式分别为 &lt;code&gt;inf&lt;/code&gt; ，-inf， &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;-0&lt;/code&gt; 和 &lt;code&gt;nan&lt;/code&gt; ，而与精度无关。</target>
        </trans-unit>
        <trans-unit id="fbadb91c0f2d470c8467dae6bb12a446a01cc7db" translate="yes" xml:space="preserve">
          <source>Possible states are:</source>
          <target state="translated">可能的状态是:</target>
        </trans-unit>
        <trans-unit id="63f69fd6d6f413090e0f4f3fa400b942a162733e" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt; to disable workarounds for broken X.509 certificates.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; 的&lt;/a&gt;可能值，以禁用损坏的X.509证书的解决方法。</target>
        </trans-unit>
        <trans-unit id="4ba63e08aceb3c446a295cf92ec1b942aa49b732" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. In this mode, CRLs of all certificates in the peer cert chain are checked.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; 的&lt;/a&gt;可能值。在此模式下，将检查对等证书链中所有证书的CRL。</target>
        </trans-unit>
        <trans-unit id="681006f1919e6854682d4ccba2e10d6f1ec838d7" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. In this mode, certificate revocation lists (CRLs) are not checked. By default OpenSSL does neither require nor verify CRLs.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; 的&lt;/a&gt;可能值。在这种模式下，不检查证书吊销列表（CRL）。默认情况下，OpenSSL既不需要也不验证CRL。</target>
        </trans-unit>
        <trans-unit id="b96016f2b620584350815c8bed102abcc7f2789a" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. In this mode, only the peer cert is checked but none of the intermediate CA certificates. The mode requires a valid CRL that is signed by the peer cert&amp;rsquo;s issuer (its direct ancestor CA). If no proper CRL has been loaded with &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt;&lt;code&gt;SSLContext.load_verify_locations&lt;/code&gt;&lt;/a&gt;, validation will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834cb8dd69db769ec9e67cc37db58e1dcab7a3c4" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. In this mode, only the peer cert is checked but none of the intermediate CA certificates. The mode requires a valid CRL that is signed by the peer cert&amp;rsquo;s issuer (its direct ancestor CA). If no proper CRL has has been loaded with &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt;&lt;code&gt;SSLContext.load_verify_locations&lt;/code&gt;&lt;/a&gt;, validation will fail.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; 的&lt;/a&gt;可能值。在此模式下，仅检查对等证书，而不检查中间CA证书。该模式需要由对等证书的颁发者（其直接祖先CA）签名的有效CRL。如果没有使用&lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt; &lt;code&gt;SSLContext.load_verify_locations&lt;/code&gt; &lt;/a&gt;加载适当的CRL ，则验证将失败。</target>
        </trans-unit>
        <trans-unit id="81033163c8cc54904575c439b4a3466834d6c011" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt;. It instructs OpenSSL to prefer trusted certificates when building the trust chain to validate a certificate. This flag is enabled by default.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; 的&lt;/a&gt;可能值。它指示OpenSSL在构建用于验证证书的信任链时首选受信任的证书。默认情况下启用此标志。</target>
        </trans-unit>
        <trans-unit id="4d3909c91e1e0e21475e53c7bf078037dcbcbfb5" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;SSLContext.verify_mode&lt;/code&gt;&lt;/a&gt;, or the &lt;code&gt;cert_reqs&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;. Except for &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt;&lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt;&lt;/a&gt;, it is the default mode. With client-side sockets, just about any cert is accepted. Validation errors, such as untrusted or expired cert, are ignored and do not abort the TLS/SSL handshake.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;SSLContext.verify_mode&lt;/code&gt; 的&lt;/a&gt;可能值，或&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;cert_reqs&lt;/code&gt; 参数。除&lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt; &lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt; 之外&lt;/a&gt;，它是默认模式。使用客户端套接字，几乎可以接受任何证书。验证错误（例如不受信任或过期的证书）将被忽略，并且不会中止TLS / SSL握手。</target>
        </trans-unit>
        <trans-unit id="d8c9444f11c8fa0cbf7a1cf96c440bde31779c0e" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;SSLContext.verify_mode&lt;/code&gt;&lt;/a&gt;, or the &lt;code&gt;cert_reqs&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;. In client mode, &lt;a href=&quot;#ssl.CERT_OPTIONAL&quot;&gt;&lt;code&gt;CERT_OPTIONAL&lt;/code&gt;&lt;/a&gt; has the same meaning as &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt;. It is recommended to use &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; for client-side sockets instead.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;SSLContext.verify_mode&lt;/code&gt; 的&lt;/a&gt;可能值，或&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;cert_reqs&lt;/code&gt; 参数。在客户端模式，&lt;a href=&quot;#ssl.CERT_OPTIONAL&quot;&gt; &lt;code&gt;CERT_OPTIONAL&lt;/code&gt; &lt;/a&gt;具有相同的含义&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt;。建议将&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt;用于客户端套接字。</target>
        </trans-unit>
        <trans-unit id="5069135a65407b38a1f42b151ee1613e108b36f0" translate="yes" xml:space="preserve">
          <source>Possible value for &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;SSLContext.verify_mode&lt;/code&gt;&lt;/a&gt;, or the &lt;code&gt;cert_reqs&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;. In this mode, certificates are required from the other side of the socket connection; an &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; will be raised if no certificate is provided, or if its validation fails. This mode is &lt;strong&gt;not&lt;/strong&gt; sufficient to verify a certificate in client mode as it does not match hostnames. &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;check_hostname&lt;/code&gt;&lt;/a&gt; must be enabled as well to verify the authenticity of a cert. &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt;&lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; and enables &lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;check_hostname&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;SSLContext.verify_mode&lt;/code&gt; 的&lt;/a&gt;可能值，或&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;cert_reqs&lt;/code&gt; 参数。在这种模式下，需要从套接字连接的另一端获取证书；一个&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;会如果没有提供证书，如果它的验证失败被升高，或。这种模式是&lt;strong&gt;不&lt;/strong&gt;足够的客户端模式验证证书，因为它不匹配的主机名。&lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;check_hostname&lt;/code&gt; &lt;/a&gt;必须启用check_hostname以验证证书的真实性。&lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt; &lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt; &lt;/a&gt;使用&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt;并默认启用&lt;a href=&quot;#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;check_hostname&lt;/code&gt; &lt;/a&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2907ec0c1e89d9ea47e904c9015b71f6024c1e0" translate="yes" xml:space="preserve">
          <source>Possible value for the &lt;em&gt;mode&lt;/em&gt; parameter to the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; family of functions. If this is given as &lt;em&gt;mode&lt;/em&gt;, the &lt;code&gt;spawn*()&lt;/code&gt; functions will not return until the new process has run to completion and will return the exit code of the process the run is successful, or &lt;code&gt;-signal&lt;/code&gt; if a signal kills the process.</source>
          <target state="translated">&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;系列功能的&lt;em&gt;mode&lt;/em&gt;参数的可能值。如果将其指定为&lt;em&gt;mode&lt;/em&gt;，则 &lt;code&gt;spawn*()&lt;/code&gt; 函数将在新进程运行完成之前不返回，并且将返回运行成功的进程的退出代码，或 &lt;code&gt;-signal&lt;/code&gt; (如果信号终止了该进程）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="595379185db1d5c8fb2fa29686c56e99c74f8a16" translate="yes" xml:space="preserve">
          <source>Possible values for the &lt;em&gt;mode&lt;/em&gt; parameter to the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; family of functions. If either of these values is given, the &lt;code&gt;spawn*()&lt;/code&gt; functions will return as soon as the new process has been created, with the process id as the return value.</source>
          <target state="translated">&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;系列函数的&lt;em&gt;mode&lt;/em&gt;参数的可能值。如果给出这些值中的任何一个，则 &lt;code&gt;spawn*()&lt;/code&gt; 函数将在创建新进程后立即返回，并且进程ID为返回值。</target>
        </trans-unit>
        <trans-unit id="98444d7e6ce2c20d6c8fa33edbb3a360778be71c" translate="yes" xml:space="preserve">
          <source>Possible values for the &lt;em&gt;mode&lt;/em&gt; parameter to the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; family of functions. These are less portable than those listed above. &lt;a href=&quot;#os.P_DETACH&quot;&gt;&lt;code&gt;P_DETACH&lt;/code&gt;&lt;/a&gt; is similar to &lt;a href=&quot;#os.P_NOWAIT&quot;&gt;&lt;code&gt;P_NOWAIT&lt;/code&gt;&lt;/a&gt;, but the new process is detached from the console of the calling process. If &lt;a href=&quot;#os.P_OVERLAY&quot;&gt;&lt;code&gt;P_OVERLAY&lt;/code&gt;&lt;/a&gt; is used, the current process will be replaced; the &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; function will not return.</source>
          <target state="translated">&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;系列函数的&lt;em&gt;mode&lt;/em&gt;参数的可能值。它们比上面列出的那些便携式性差。&lt;a href=&quot;#os.P_DETACH&quot;&gt; &lt;code&gt;P_DETACH&lt;/code&gt; &lt;/a&gt;类似于&lt;a href=&quot;#os.P_NOWAIT&quot;&gt; &lt;code&gt;P_NOWAIT&lt;/code&gt; &lt;/a&gt;，但新的过程从调用进程的控制台分离。如果使用&lt;a href=&quot;#os.P_OVERLAY&quot;&gt; &lt;code&gt;P_OVERLAY&lt;/code&gt; &lt;/a&gt;，则将替换当前进程。在&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;函数不会返回。</target>
        </trans-unit>
        <trans-unit id="ad471bf2d14a9f069fad782304e156715b0c3a8d" translate="yes" xml:space="preserve">
          <source>Post an article using the &lt;code&gt;POST&lt;/code&gt; command. The &lt;em&gt;data&lt;/em&gt; argument is either a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary reading, or any iterable of bytes objects (representing raw lines of the article to be posted). It should represent a well-formed news article, including the required headers. The &lt;a href=&quot;#nntplib.NNTP.post&quot;&gt;&lt;code&gt;post()&lt;/code&gt;&lt;/a&gt; method automatically escapes lines beginning with &lt;code&gt;.&lt;/code&gt; and appends the termination line.</source>
          <target state="translated">使用 &lt;code&gt;POST&lt;/code&gt; 命令发布文章。的&lt;em&gt;数据&lt;/em&gt;参数可以是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;打开的二进制读数，或者任何可迭代字节对象（表示制品的原始线被张贴）。它应该代表格式良好的新闻文章，包括必需的标题。所述&lt;a href=&quot;#nntplib.NNTP.post&quot;&gt; &lt;code&gt;post()&lt;/code&gt; &lt;/a&gt;方法自动转义线开头 &lt;code&gt;.&lt;/code&gt; 并附加终端线。</target>
        </trans-unit>
        <trans-unit id="db58210c1724ca48af84717417f1155cd9124a3d" translate="yes" xml:space="preserve">
          <source>Post an article using the &lt;code&gt;POST&lt;/code&gt; command. The &lt;em&gt;data&lt;/em&gt; argument is either a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary reading, or any iterable of bytes objects (representing raw lines of the article to be posted). It should represent a well-formed news article, including the required headers. The &lt;a href=&quot;#nntplib.NNTP.post&quot;&gt;&lt;code&gt;post()&lt;/code&gt;&lt;/a&gt; method automatically escapes lines beginning with &lt;code&gt;.&lt;/code&gt; and appends the termination line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63bfd48fc2a1b5e7e89f48afbac27f355349bc7" translate="yes" xml:space="preserve">
          <source>Post-init processing</source>
          <target state="translated">启用后处理</target>
        </trans-unit>
        <trans-unit id="be382487def51aeab399ad276c635ee4d94d07d1" translate="yes" xml:space="preserve">
          <source>Power and logarithmic functions</source>
          <target state="translated">功率和对数函数</target>
        </trans-unit>
        <trans-unit id="5c34f11767e3344552d1ea1633a63119f696d0a7" translate="yes" xml:space="preserve">
          <source>PowerShell</source>
          <target state="translated">PowerShell</target>
        </trans-unit>
        <trans-unit id="178cd9d66a4b1bce25cb5e2cea3f2128b6ffceb3" translate="yes" xml:space="preserve">
          <source>PowerShell Core</source>
          <target state="translated">PowerShell核心</target>
        </trans-unit>
        <trans-unit id="db3d345a9a0fd91ab9f33caeeec48958f5ce609f" translate="yes" xml:space="preserve">
          <source>Practical Programming in Tcl and Tk</source>
          <target state="translated">Tcl和Tk的实用编程</target>
        </trans-unit>
        <trans-unit id="490f67184b68428ab7db592bcebf51431ff864dc" translate="yes" xml:space="preserve">
          <source>Precision (optional), given as a &lt;code&gt;'.'&lt;/code&gt; (dot) followed by the precision. If specified as &lt;code&gt;'*'&lt;/code&gt; (an asterisk), the actual precision is read from the next element of the tuple in &lt;em&gt;values&lt;/em&gt;, and the value to convert comes after the precision.</source>
          <target state="translated">精度（可选），以 &lt;code&gt;'.'&lt;/code&gt; （点）后跟精度。如果指定为 &lt;code&gt;'*'&lt;/code&gt; （星号），则从&lt;em&gt;值&lt;/em&gt;的元组的下一个元素读取实际精度，并且要转换的值位于精度之后。</target>
        </trans-unit>
        <trans-unit id="449d850ff0a5b8d2b97bfb75bf9d9fdcf80b0bd6" translate="yes" xml:space="preserve">
          <source>Precomputed tables</source>
          <target state="translated">预先计算的表格</target>
        </trans-unit>
        <trans-unit id="71527b4452262b2288bec21620f4277e5383be6c" translate="yes" xml:space="preserve">
          <source>Predicates (expressions within square brackets) must be preceded by a tag name, an asterisk, or another predicate. &lt;code&gt;position&lt;/code&gt; predicates must be preceded by a tag name.</source>
          <target state="translated">谓词（方括号内的表达式）之前必须带有标签名称，星号或其他谓词。 &lt;code&gt;position&lt;/code&gt; 谓词必须以标签名称开头。</target>
        </trans-unit>
        <trans-unit id="707ddefda8b9d501a1d63dad3fcb74d0cb28b51a" translate="yes" xml:space="preserve">
          <source>Preface</source>
          <target state="translated">Preface</target>
        </trans-unit>
        <trans-unit id="bde7dd0530c513b11cc390474cc050f812b6f3db" translate="yes" xml:space="preserve">
          <source>Prefix each line with the time since the program started. Only used while tracing.</source>
          <target state="translated">在每一行前加上程序启动后的时间。只在跟踪时使用。</target>
        </trans-unit>
        <trans-unit id="515863d159aa2e0dd47fb1d5d6139a71281b0192" translate="yes" xml:space="preserve">
          <source>Prefix, net mask and host mask</source>
          <target state="translated">前缀、网络掩码和主机掩码</target>
        </trans-unit>
        <trans-unit id="93c620f6932937b6bc7d5291dc67d610857f5774" translate="yes" xml:space="preserve">
          <source>Prefixes any opcode which has an argument too big to fit into the default one byte. &lt;em&gt;ext&lt;/em&gt; holds an additional byte which act as higher bits in the argument. For each opcode, at most three prefixal &lt;code&gt;EXTENDED_ARG&lt;/code&gt; are allowed, forming an argument from two-byte to four-byte.</source>
          <target state="translated">在操作码前加一个太大的参数以至于不能容纳默认的一个字节的前缀。&lt;em&gt;ext&lt;/em&gt;保留一个额外的字节，该字节充当参数中的较高位。对于每个操作码，最多允许三个前缀 &lt;code&gt;EXTENDED_ARG&lt;/code&gt; ，形成从两个字节到四个字节的参数。</target>
        </trans-unit>
        <trans-unit id="aeab98f5a34301d71af8d216207f9b70ea4d1b4f" translate="yes" xml:space="preserve">
          <source>Prepare a record for handling.</source>
          <target state="translated">准备一份处理记录。</target>
        </trans-unit>
        <trans-unit id="eaabdea71a53a1d312c68621c7a08cafc4337348" translate="yes" xml:space="preserve">
          <source>Prepare for object destruction. &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; provides a default implementation of this method that calls the instance&amp;rsquo;s &lt;a href=&quot;#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">准备销毁对象。&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;提供了此方法的默认实现，该实现调用实例的&lt;a href=&quot;#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="48869057a3eaf9b7bda4696b2a82f8cd32542baa" translate="yes" xml:space="preserve">
          <source>Prepare the request by connecting to a proxy server. The &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;type&lt;/em&gt; will replace those of the instance, and the instance&amp;rsquo;s selector will be the original URL given in the constructor.</source>
          <target state="translated">通过连接到代理服务器来准备请求。&lt;em&gt;主机&lt;/em&gt;和&lt;em&gt;类型&lt;/em&gt;将替换实例的&lt;em&gt;主机&lt;/em&gt;和&lt;em&gt;类型&lt;/em&gt;，实例的选择器将是构造函数中提供的原始URL。</target>
        </trans-unit>
        <trans-unit id="2acd0ee4e2fd08e925fed1556f93a353652b578a" translate="yes" xml:space="preserve">
          <source>Prepares a record for queuing. The object returned by this method is enqueued.</source>
          <target state="translated">为排队的记录做准备。本方法返回的对象是enqueued。</target>
        </trans-unit>
        <trans-unit id="57c6749aaa2e639ce29f4d77ddbc7ec04736e80b" translate="yes" xml:space="preserve">
          <source>Pretend &lt;em&gt;count&lt;/em&gt; lines have been changed, starting with line &lt;em&gt;start&lt;/em&gt;. If &lt;em&gt;changed&lt;/em&gt; is supplied, it specifies whether the affected lines are marked as having been changed (&lt;em&gt;changed&lt;/em&gt;&lt;code&gt;=True&lt;/code&gt;) or unchanged (&lt;em&gt;changed&lt;/em&gt;&lt;code&gt;=False&lt;/code&gt;).</source>
          <target state="translated">从line &lt;em&gt;start开始&lt;/em&gt;，假装的&lt;em&gt;计数&lt;/em&gt;行已更改。如果&lt;em&gt;改变&lt;/em&gt;被提供时，它指定了受影响的行是否被标记为已改变（&lt;em&gt;改变&lt;/em&gt; &lt;code&gt;=True&lt;/code&gt; ）或不变（&lt;em&gt;变化&lt;/em&gt; &lt;code&gt;=False&lt;/code&gt; ）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f8b9077326620d7215f339382fae5f8dbf5068b" translate="yes" xml:space="preserve">
          <source>Pretend the whole window has been changed, for purposes of drawing optimizations.</source>
          <target state="translated">假设整个窗口都被改变了,以达到绘图优化的目的。</target>
        </trans-unit>
        <trans-unit id="d69b44b9452e785bcf38a58c11f7522588dd0a12" translate="yes" xml:space="preserve">
          <source>Pretty printing:</source>
          <target state="translated">漂亮的印刷。</target>
        </trans-unit>
        <trans-unit id="cc5593cc97eb10b44d34d3ef59a99ba2b518cf84" translate="yes" xml:space="preserve">
          <source>Pretty top</source>
          <target state="translated">漂亮的上衣</target>
        </trans-unit>
        <trans-unit id="736722dd09c56467e68847a72672d85b5b4e5d72" translate="yes" xml:space="preserve">
          <source>PrettyPrinter Objects</source>
          <target state="translated">PrettyPrinter对象</target>
        </trans-unit>
        <trans-unit id="3d63214479b7b9df436250cf443d77f3a6172b43" translate="yes" xml:space="preserve">
          <source>Prev (previous)</source>
          <target state="translated">上一个(上)</target>
        </trans-unit>
        <trans-unit id="1706782b9fb86817417f6ce4b4b586638f5f4fe5" translate="yes" xml:space="preserve">
          <source>Prevent &lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt;&lt;code&gt;join_thread()&lt;/code&gt;&lt;/a&gt; from blocking. In particular, this prevents the background thread from being joined automatically when the process exits &amp;ndash; see &lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt;&lt;code&gt;join_thread()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">防止&lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt; &lt;code&gt;join_thread()&lt;/code&gt; &lt;/a&gt;阻塞。特别是，这可以防止后台线程在进程退出时自动加入&amp;ndash;请参见&lt;a href=&quot;#multiprocessing.Queue.join_thread&quot;&gt; &lt;code&gt;join_thread()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="107e68d762b79bad537ef9fb207d4e1d39e52d58" translate="yes" xml:space="preserve">
          <source>Prevent client side from requesting a session ticket.</source>
          <target state="translated">防止客户端请求会话票据。</target>
        </trans-unit>
        <trans-unit id="c30a1250034cd8e55c1c2149d1282952906d4b8e" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1 as the protocol version.</source>
          <target state="translated">阻止TLSv1连接。此选项仅与&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;结合使用。这样可以防止对等方选择TLSv1作为协议版本。</target>
        </trans-unit>
        <trans-unit id="8afbd15b84e40a48b2da893725e169841a8cfb02" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1.1 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1.1 as the protocol version. Available only with openssl version 1.0.1+.</source>
          <target state="translated">阻止TLSv1.1连接。此选项仅与&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;结合使用。这样可以防止对等方选择TLSv1.1作为协议版本。仅适用于openssl版本1.0.1+。</target>
        </trans-unit>
        <trans-unit id="e1aad586005b65865ebf605785c29cd1a005d4e0" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1.2 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1.2 as the protocol version. Available only with openssl version 1.0.1+.</source>
          <target state="translated">阻止TLSv1.2连接。此选项仅与&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;结合使用。这样可以防止对等方选择TLSv1.2作为协议版本。仅适用于openssl版本1.0.1+。</target>
        </trans-unit>
        <trans-unit id="09c8e59b75ea4fcfcf9e178d3d0fa59ba0f19d05" translate="yes" xml:space="preserve">
          <source>Prevents a TLSv1.3 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing TLSv1.3 as the protocol version. TLS 1.3 is available with OpenSSL 1.1.1 or later. When Python has been compiled against an older version of OpenSSL, the flag defaults to &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="translated">阻止TLSv1.3连接。此选项仅与&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;结合使用。这样可以防止对等方选择TLSv1.3作为协议版本。TLS 1.3可用于OpenSSL 1.1.1或更高版本。针对旧版本的OpenSSL编译Python后，该标志默认为&lt;em&gt;0&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cbb04da33d788199d87cc8cadc4dadbebdb32b14" translate="yes" xml:space="preserve">
          <source>Prevents an SSLv2 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing SSLv2 as the protocol version.</source>
          <target state="translated">阻止SSLv2连接。此选项仅与&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;结合使用。这样可以防止对等方选择SSLv2作为协议版本。</target>
        </trans-unit>
        <trans-unit id="e9b46f8715c307e61781566f286e18f0ca110744" translate="yes" xml:space="preserve">
          <source>Prevents an SSLv3 connection. This option is only applicable in conjunction with &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;. It prevents the peers from choosing SSLv3 as the protocol version.</source>
          <target state="translated">阻止SSLv3连接。此选项仅与&lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt; &lt;code&gt;PROTOCOL_TLS&lt;/code&gt; &lt;/a&gt;结合使用。这样可以防止对等方选择SSLv3作为协议版本。</target>
        </trans-unit>
        <trans-unit id="9dfcb0887264caddd8e829fb5d7f710039337de4" translate="yes" xml:space="preserve">
          <source>Prevents any more tasks from being submitted to the pool. Once all the tasks have been completed the worker processes will exit.</source>
          <target state="translated">防止向池中提交更多任务。一旦所有任务完成,工人进程将退出。</target>
        </trans-unit>
        <trans-unit id="dc320ab03d06fd63221446db92226635a2e40b3c" translate="yes" xml:space="preserve">
          <source>Prevents re-use of the same DH key for distinct SSL sessions. This improves forward secrecy but requires more computational resources. This option only applies to server sockets.</source>
          <target state="translated">防止在不同的SSL会话中重复使用相同的DH密钥。这可以提高前向保密性,但需要更多的计算资源。这个选项只适用于服务器套接字。</target>
        </trans-unit>
        <trans-unit id="a7ea65f7cda64106b6057a83880d70342ae857bc" translate="yes" xml:space="preserve">
          <source>Prevents re-use of the same ECDH key for distinct SSL sessions. This improves forward secrecy but requires more computational resources. This option only applies to server sockets.</source>
          <target state="translated">防止在不同的SSL会话中重复使用相同的ECDH密钥。这可以提高前向保密性,但需要更多的计算资源。这个选项只适用于服务器套接字。</target>
        </trans-unit>
        <trans-unit id="f2319e1b3ce31d6273e32117a3b51c171cce33b2" translate="yes" xml:space="preserve">
          <source>Previous History</source>
          <target state="translated">以前的历史</target>
        </trans-unit>
        <trans-unit id="1cf61f9b704231b7d9da66ca29b0efd733397410" translate="yes" xml:space="preserve">
          <source>Previous calls to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; determine exactly what objects are created and how they are assigned. See the documentation for &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">先前对&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; 的&lt;/a&gt;调用将确切确定创建了哪些对象以及如何分配它们。有关详细信息，请参见&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="81f547195bef12a0bb74f5af751fe50e78a0c2f3" translate="yes" xml:space="preserve">
          <source>Previous page</source>
          <target state="translated">上一页</target>
        </trans-unit>
        <trans-unit id="7b2c11a3c946fcc3cf0f0e62f1d9a7753a415146" translate="yes" xml:space="preserve">
          <source>Previously detected by MUA</source>
          <target state="translated">以前被MUA发现</target>
        </trans-unit>
        <trans-unit id="e4da2d9864c0122b5dbabd8caa7e6fe3ce162517" translate="yes" xml:space="preserve">
          <source>Previously registered error handlers (including the standard error handlers) can be looked up by name:</source>
          <target state="translated">以前注册的错误处理程序(包括标准错误处理程序)可以按名称查询。</target>
        </trans-unit>
        <trans-unit id="5b221e9c2a451799d8f37e2b9874409d5e03ab05" translate="yes" xml:space="preserve">
          <source>Print</source>
          <target state="translated">Print</target>
        </trans-unit>
        <trans-unit id="92c131e7cbd0707515ecfaf6e40abffb9a8099ab" translate="yes" xml:space="preserve">
          <source>Print (to &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt;) a comparison between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">打印（到&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;）&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;之间&lt;em&gt;的&lt;/em&gt;比较。</target>
        </trans-unit>
        <trans-unit id="24d7c51d91db7ea29be8c3d303dbaf662d021276" translate="yes" xml:space="preserve">
          <source>Print &lt;em&gt;objects&lt;/em&gt; to the text stream &lt;em&gt;file&lt;/em&gt;, separated by &lt;em&gt;sep&lt;/em&gt; and followed by &lt;em&gt;end&lt;/em&gt;. &lt;em&gt;sep&lt;/em&gt;, &lt;em&gt;end&lt;/em&gt;, &lt;em&gt;file&lt;/em&gt; and &lt;em&gt;flush&lt;/em&gt;, if present, must be given as keyword arguments.</source>
          <target state="translated">将&lt;em&gt;对象&lt;/em&gt;打印到文本流&lt;em&gt;文件中&lt;/em&gt;，并用&lt;em&gt;sep&lt;/em&gt;分隔，然后用&lt;em&gt;end&lt;/em&gt;分隔。&lt;em&gt;sep&lt;/em&gt;，&lt;em&gt;end&lt;/em&gt;，&lt;em&gt;file&lt;/em&gt;和&lt;em&gt;flush&lt;/em&gt;（如果存在）必须作为关键字参数给出。</target>
        </trans-unit>
        <trans-unit id="75ea07e0a17305b6a0d75015e0d39ee48139eff9" translate="yes" xml:space="preserve">
          <source>Print Window</source>
          <target state="translated">打印窗口</target>
        </trans-unit>
        <trans-unit id="092b80785f55799fe50486ddf8f296c06ea3eb11" translate="yes" xml:space="preserve">
          <source>Print a brief description of how the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; should be invoked on the command line. If &lt;em&gt;file&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; is assumed.</source>
          <target state="translated">打印有关应如何在命令行上调用&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;的简要说明。如果&lt;em&gt;file&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则假定为&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a9eb22264c3b5dec2931b1f324be362e8a3caa9" translate="yes" xml:space="preserve">
          <source>Print a comparison between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; and common immediate subdirectories.</source>
          <target state="translated">打印之间的比较&lt;em&gt;一&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;，共同立即子目录。</target>
        </trans-unit>
        <trans-unit id="9737c0d0218890590b21fe3f519df6b481314ddd" translate="yes" xml:space="preserve">
          <source>Print a comparison between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; and common subdirectories (recursively).</source>
          <target state="translated">打印之间的比较&lt;em&gt;一个&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;和公共子目录（递归的）。</target>
        </trans-unit>
        <trans-unit id="42a7ec328f156fde422cd7dc61bb23c09f74e406" translate="yes" xml:space="preserve">
          <source>Print a debug message when the debug level is &lt;code&gt;&amp;gt;&lt;/code&gt; 0. If extra arguments are present, they are substituted in the message using the standard string formatting operator.</source>
          <target state="translated">当调试级别 &lt;code&gt;&amp;gt;&lt;/code&gt; 0 时，打印调试消息。如果存在其他参数，则使用标准字符串格式运算符将它们替换为消息。</target>
        </trans-unit>
        <trans-unit id="3d5dcdf55a88c009944f0a40c26245225b570e85" translate="yes" xml:space="preserve">
          <source>Print a help message, including the program usage and information about the arguments registered with the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;file&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; is assumed.</source>
          <target state="translated">打印帮助消息，包括程序用法以及有关在&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; 中&lt;/a&gt;注册的参数的信息。如果&lt;em&gt;file&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则假定为&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87a8729cb0a90de0e71cb0527bb7846eb00c7fa6" translate="yes" xml:space="preserve">
          <source>Print a list of useful (used by CGI) environment variables in HTML.</source>
          <target state="translated">打印HTML中有用的(CGI使用的)环境变量列表。</target>
        </trans-unit>
        <trans-unit id="b7d04d6b0c20b3d6e0ad773b82dd44d393b9fe4c" translate="yes" xml:space="preserve">
          <source>Print a month&amp;rsquo;s calendar as returned by &lt;a href=&quot;#calendar.TextCalendar.formatmonth&quot;&gt;&lt;code&gt;formatmonth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打印&lt;a href=&quot;#calendar.TextCalendar.formatmonth&quot;&gt; &lt;code&gt;formatmonth()&lt;/code&gt; &lt;/a&gt;返回的月份日历。</target>
        </trans-unit>
        <trans-unit id="8819c1eace7f2970056904e5d1b4f13a04ad201a" translate="yes" xml:space="preserve">
          <source>Print a report to standard output that lists the modules imported by the script and their paths, as well as modules that are missing or seem to be missing.</source>
          <target state="translated">将报告打印成标准输出,列出脚本导入的模块和它们的路径,以及缺少或似乎缺少的模块。</target>
        </trans-unit>
        <trans-unit id="5c8fe4e870e195a4e0e71c8a37d1ceb1bdba9faa" translate="yes" xml:space="preserve">
          <source>Print a short usage message and exit.</source>
          <target state="translated">打印简短的使用信息并退出。</target>
        </trans-unit>
        <trans-unit id="46d75d2a40c595663c260f13796637d15127363a" translate="yes" xml:space="preserve">
          <source>Print a stack trace, with the most recent frame at the bottom. An arrow indicates the current frame, which determines the context of most commands.</source>
          <target state="translated">打印堆栈跟踪,最近的帧在底部。箭头表示当前帧,它决定了大多数命令的上下文。</target>
        </trans-unit>
        <trans-unit id="226e396c7c77d5972c0c2c1364f81ae49c3ca29d" translate="yes" xml:space="preserve">
          <source>Print a summary of all the test cases that have been run by this DocTestRunner, and return a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;TestResults(failed, attempted)&lt;/code&gt;.</source>
          <target state="translated">打印此DocTestRunner已运行的所有测试用例的摘要，并返回一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;命名的元组&lt;/a&gt; &lt;code&gt;TestResults(failed, attempted)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60fe12c413836934215d2060f32b5de93e29ebdf" translate="yes" xml:space="preserve">
          <source>Print a summary of all the test cases that have been run by this DocTestRunner, and return a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;TestResults(failed, attempted)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50abcb71a77d1ef48177e1bdc2bc346a39afa2a" translate="yes" xml:space="preserve">
          <source>Print a table of contents for the archive to &lt;code&gt;sys.stdout&lt;/code&gt;.</source>
          <target state="translated">将目录的目录打印到 &lt;code&gt;sys.stdout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bc98eb6896e2c06d7f1828dfb2545f703e3d1a9" translate="yes" xml:space="preserve">
          <source>Print a table of contents to &lt;code&gt;sys.stdout&lt;/code&gt;. If &lt;em&gt;verbose&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, only the names of the members are printed. If it is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, output similar to that of &lt;strong&gt;ls -l&lt;/strong&gt; is produced. If optional &lt;em&gt;members&lt;/em&gt; is given, it must be a subset of the list returned by &lt;a href=&quot;#tarfile.TarFile.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将目录打印到 &lt;code&gt;sys.stdout&lt;/code&gt; 。如果&lt;em&gt;verbose&lt;/em&gt;为&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;，则仅打印成员的名称。如果为&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;，则产生类似于&lt;strong&gt;ls -l&lt;/strong&gt;的输出。如果给出了可选&lt;em&gt;成员&lt;/em&gt;，则它必须是&lt;a href=&quot;#tarfile.TarFile.getmembers&quot;&gt; &lt;code&gt;getmembers()&lt;/code&gt; &lt;/a&gt;返回的列表的子集。</target>
        </trans-unit>
        <trans-unit id="545453b40125ccaed2d2107f013c9f4c2e12fd2e" translate="yes" xml:space="preserve">
          <source>Print a warning into &lt;a href=&quot;sys#sys.__stderr__&quot;&gt;&lt;code&gt;sys.__stderr__&lt;/code&gt;&lt;/a&gt;. Format the message as: &lt;code&gt;f&quot;Warning -- {msg}&quot;&lt;/code&gt;. If &lt;em&gt;msg&lt;/em&gt; is made of multiple lines, add &lt;code&gt;&quot;Warning -- &quot;&lt;/code&gt; prefix to each line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5c5b21b998c663e90c709b002328a575120497" translate="yes" xml:space="preserve">
          <source>Print detailed code object information for the supplied function, method, source code string or code object to &lt;em&gt;file&lt;/em&gt; (or &lt;code&gt;sys.stdout&lt;/code&gt; if &lt;em&gt;file&lt;/em&gt; is not specified).</source>
          <target state="translated">将提供的功能，方法，源代码字符串或代码对象的详细代码对象信息打印到&lt;em&gt;文件&lt;/em&gt;（如果未指定&lt;em&gt;文件，&lt;/em&gt;则为 &lt;code&gt;sys.stdout&lt;/code&gt; ）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37d12069e6f16af033ab45913e5be7746c5e26cb" translate="yes" xml:space="preserve">
          <source>Print exception information and stack trace entries from traceback object &lt;em&gt;tb&lt;/em&gt; to &lt;em&gt;file&lt;/em&gt;. This differs from &lt;a href=&quot;#traceback.print_tb&quot;&gt;&lt;code&gt;print_tb()&lt;/code&gt;&lt;/a&gt; in the following ways:</source>
          <target state="translated">打印异常信息并将堆栈跟踪条目从追溯对象&lt;em&gt;tb&lt;/em&gt;堆栈到&lt;em&gt;file&lt;/em&gt;。这与&lt;a href=&quot;#traceback.print_tb&quot;&gt; &lt;code&gt;print_tb()&lt;/code&gt; &lt;/a&gt;在以下方面有所不同：</target>
        </trans-unit>
        <trans-unit id="df0179c0889e679cc1234c128af6d1759f84855f" translate="yes" xml:space="preserve">
          <source>Print information about the specified object rather than the source code</source>
          <target state="translated">打印指定对象的信息,而不是源代码。</target>
        </trans-unit>
        <trans-unit id="9d7895802cb9df9889bd75e637eaa3eae04b274e" translate="yes" xml:space="preserve">
          <source>Print information of uncollectable objects found (objects which are not reachable but cannot be freed by the collector). These objects will be added to the &lt;code&gt;garbage&lt;/code&gt; list.</source>
          <target state="translated">打印找到的无法收集的对象（无法到达但无法被收集器释放的对象）的信息。这些对象将被添加到 &lt;code&gt;garbage&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="c75eed0af00a793cf5ded9d6e4b5cc55d5c12d11" translate="yes" xml:space="preserve">
          <source>Print information on collectable objects found.</source>
          <target state="translated">打印发现的可收藏物品信息。</target>
        </trans-unit>
        <trans-unit id="fd547948a708e1b1b0f64df6d997902a7615f488" translate="yes" xml:space="preserve">
          <source>Print low-level information to stderr about the state of CPython&amp;rsquo;s memory allocator.</source>
          <target state="translated">将有关CPython内存分配器状态的低级信息打印到stderr。</target>
        </trans-unit>
        <trans-unit id="1e713e958b47d68260886430651371a5089e51b6" translate="yes" xml:space="preserve">
          <source>Print statistics during collection. This information can be useful when tuning the collection frequency.</source>
          <target state="translated">在采集过程中打印统计数据。这些信息在调整采集频率时很有用。</target>
        </trans-unit>
        <trans-unit id="a2ebafe93be796a06067ee45e369ac2e44de72e5" translate="yes" xml:space="preserve">
          <source>Print the argument list of the current function.</source>
          <target state="translated">打印当前函数的参数列表。</target>
        </trans-unit>
        <trans-unit id="0f9b05a178e0881d089969f09ca376db8448581e" translate="yes" xml:space="preserve">
          <source>Print the byte string &lt;em&gt;char&lt;/em&gt; to the console without buffering.</source>
          <target state="translated">将字节字符串&lt;em&gt;char&lt;/em&gt;打印到控制台而不进行缓冲。</target>
        </trans-unit>
        <trans-unit id="caef0f05a449fbd2f0d330f2b834bbe64628bd70" translate="yes" xml:space="preserve">
          <source>Print the calendar for an entire year as returned by &lt;a href=&quot;#calendar.TextCalendar.formatyear&quot;&gt;&lt;code&gt;formatyear()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打印&lt;a href=&quot;#calendar.TextCalendar.formatyear&quot;&gt; &lt;code&gt;formatyear()&lt;/code&gt; &lt;/a&gt;为year（）的整年的日历。</target>
        </trans-unit>
        <trans-unit id="1fa21f2ae8d79fedb943ef8eab2b17d9abd3b148" translate="yes" xml:space="preserve">
          <source>Print the current window to the default printer.</source>
          <target state="translated">将当前窗口打印到默认打印机。</target>
        </trans-unit>
        <trans-unit id="7797e8c591f71dfae6cf64f791e63ba50f0fffba" translate="yes" xml:space="preserve">
          <source>Print the formatted representation of &lt;em&gt;object&lt;/em&gt; on the configured stream, followed by a newline.</source>
          <target state="translated">在配置的流上打印&lt;em&gt;对象&lt;/em&gt;的格式化表示形式，然后换行。</target>
        </trans-unit>
        <trans-unit id="4fc7c1a8b497470b56c309b8fd8305feb81fc79d" translate="yes" xml:space="preserve">
          <source>Print the output of &lt;a href=&quot;#bdb.Breakpoint.bpformat&quot;&gt;&lt;code&gt;bpformat()&lt;/code&gt;&lt;/a&gt; to the file &lt;em&gt;out&lt;/em&gt;, or if it is &lt;code&gt;None&lt;/code&gt;, to standard output.</source>
          <target state="translated">将&lt;a href=&quot;#bdb.Breakpoint.bpformat&quot;&gt; &lt;code&gt;bpformat()&lt;/code&gt; &lt;/a&gt;的输出打印到文件&lt;em&gt;out中&lt;/em&gt;，或者如果输出为 &lt;code&gt;None&lt;/code&gt; ，则输出到标准输出。</target>
        </trans-unit>
        <trans-unit id="ce8b91aac985dd890d44d4a961ceca91f374cf43" translate="yes" xml:space="preserve">
          <source>Print the path to the user base directory.</source>
          <target state="translated">打印用户基础目录的路径。</target>
        </trans-unit>
        <trans-unit id="9ea1420c3238a622dfc8af9460e9a233cd909099" translate="yes" xml:space="preserve">
          <source>Print the path to the user site-packages directory.</source>
          <target state="translated">打印用户站点包目录的路径。</target>
        </trans-unit>
        <trans-unit id="d53f559e5104f639131e23d104fc8e898eb37d26" translate="yes" xml:space="preserve">
          <source>Print the return value for the last return of a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2745eb0a20cb6c1e0fa2f98f22d8ac073bd292f" translate="yes" xml:space="preserve">
          <source>Print the stack or traceback for this Task.</source>
          <target state="translated">打印该任务的堆栈或回溯。</target>
        </trans-unit>
        <trans-unit id="cf40f8cbbb412ec036d201714e2e87709f667e28" translate="yes" xml:space="preserve">
          <source>Print the textual representation of the message object structure rooted at &lt;em&gt;msg&lt;/em&gt; to the output file specified when the &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; instance was created.</source>
          <target state="translated">将以&lt;em&gt;msg&lt;/em&gt;为根的消息对象结构的文本表示形式打印到创建&lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt;实例时指定的输出文件。</target>
        </trans-unit>
        <trans-unit id="3736fd4a21976406b9fb9b5b2ec947f398687a95" translate="yes" xml:space="preserve">
          <source>Print the textual representation of the message object structure rooted at &lt;em&gt;msg&lt;/em&gt; to the output file specified when the &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; instance was created.</source>
          <target state="translated">将以&lt;em&gt;msg&lt;/em&gt;为根的消息对象结构的文本表示打印到创建&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;实例时指定的输出文件。</target>
        </trans-unit>
        <trans-unit id="85716c4627d1c2ba667f0b4530240073c1a8a27b" translate="yes" xml:space="preserve">
          <source>Print the type of the &lt;em&gt;expression&lt;/em&gt;.</source>
          <target state="translated">打印&lt;em&gt;表达式&lt;/em&gt;的类型。</target>
        </trans-unit>
        <trans-unit id="de66d67e0cdcd967953b2d26ab67aebb1e502f14" translate="yes" xml:space="preserve">
          <source>Print up to &lt;em&gt;limit&lt;/em&gt; stack trace entries (starting from the invocation point) if &lt;em&gt;limit&lt;/em&gt; is positive. Otherwise, print the last &lt;code&gt;abs(limit)&lt;/code&gt; entries. If &lt;em&gt;limit&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, all entries are printed. The optional &lt;em&gt;f&lt;/em&gt; argument can be used to specify an alternate stack frame to start. The optional &lt;em&gt;file&lt;/em&gt; argument has the same meaning as for &lt;a href=&quot;#traceback.print_tb&quot;&gt;&lt;code&gt;print_tb()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果&lt;em&gt;limit&lt;/em&gt;为正，则打印以&lt;em&gt;限制&lt;/em&gt;堆栈跟踪条目（从调用点开始）。否则，打印最后的 &lt;code&gt;abs(limit)&lt;/code&gt; 条目。如果省略&lt;em&gt;limit&lt;/em&gt;或 &lt;code&gt;None&lt;/code&gt; ，那么将打印所有条目。可选的&lt;em&gt;f&lt;/em&gt;参数可用于指定要启动的备用堆栈帧。可选&lt;em&gt;文件&lt;/em&gt;参数的含义与&lt;a href=&quot;#traceback.print_tb&quot;&gt; &lt;code&gt;print_tb()&lt;/code&gt; 的&lt;/a&gt;含义相同。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4430879a1bd415073f613bc0ba2cdf30ae54b218" translate="yes" xml:space="preserve">
          <source>Print up to &lt;em&gt;limit&lt;/em&gt; stack trace entries from traceback object &lt;em&gt;tb&lt;/em&gt; (starting from the caller&amp;rsquo;s frame) if &lt;em&gt;limit&lt;/em&gt; is positive. Otherwise, print the last &lt;code&gt;abs(limit)&lt;/code&gt; entries. If &lt;em&gt;limit&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, all entries are printed. If &lt;em&gt;file&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, the output goes to &lt;code&gt;sys.stderr&lt;/code&gt;; otherwise it should be an open file or file-like object to receive the output.</source>
          <target state="translated">如果&lt;em&gt;limit&lt;/em&gt;为正，则打印以&lt;em&gt;限制&lt;/em&gt;来自追溯对象&lt;em&gt;tb的&lt;/em&gt;堆栈跟踪条目（从调用者的帧开始）。否则，打印最后的 &lt;code&gt;abs(limit)&lt;/code&gt; 条目。如果省略&lt;em&gt;limit&lt;/em&gt;或 &lt;code&gt;None&lt;/code&gt; ，那么将打印所有条目。如果省略&lt;em&gt;file&lt;/em&gt;或 &lt;code&gt;None&lt;/code&gt; ，则输出将进入 &lt;code&gt;sys.stderr&lt;/code&gt; ; 否则，它应该是一个打开的文件或类似文件的对象以接收输出。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43ee838f35cd5fefb189059307707fc5452dc591" translate="yes" xml:space="preserve">
          <source>Printing help</source>
          <target state="translated">打印帮助</target>
        </trans-unit>
        <trans-unit id="5e3476705dcdaad7c106c25f982e98a8e8918d78" translate="yes" xml:space="preserve">
          <source>Prints a month&amp;rsquo;s calendar as returned by &lt;a href=&quot;#calendar.month&quot;&gt;&lt;code&gt;month()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打印&lt;a href=&quot;#calendar.month&quot;&gt; &lt;code&gt;month()&lt;/code&gt; &lt;/a&gt;返回的月份日历。</target>
        </trans-unit>
        <trans-unit id="178563981d3b66cd8dadea93b3cf517398992cf3" translate="yes" xml:space="preserve">
          <source>Prints an indented representation of the content types of the message object structure. For example:</source>
          <target state="translated">打印消息对象结构的内容类型的缩进表示。例如:</target>
        </trans-unit>
        <trans-unit id="90acbbd1c119c04a3ab88d76c20f94aae3ad2b33" translate="yes" xml:space="preserve">
          <source>Prints the calendar for an entire year as returned by &lt;a href=&quot;#module-calendar&quot;&gt;&lt;code&gt;calendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打印由&lt;a href=&quot;#module-calendar&quot;&gt; &lt;code&gt;calendar()&lt;/code&gt; &lt;/a&gt;返回的整年的日历。</target>
        </trans-unit>
        <trans-unit id="765da75ac67c7e69b1b79350da8a59b182712bf6" translate="yes" xml:space="preserve">
          <source>Prints the formatted representation of &lt;em&gt;object&lt;/em&gt; followed by a newline. If &lt;em&gt;sort_dicts&lt;/em&gt; is false (the default), dictionaries will be displayed with their keys in insertion order, otherwise the dict keys will be sorted. &lt;em&gt;args&lt;/em&gt; and &lt;em&gt;kwargs&lt;/em&gt; will be passed to &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint()&lt;/code&gt;&lt;/a&gt; as formatting parameters.</source>
          <target state="translated">打印&lt;em&gt;对象&lt;/em&gt;的格式表示形式，后跟换行符。如果&lt;em&gt;sort_dicts&lt;/em&gt;为false（默认设置），则字典将按其插入顺序显示其键，否则将对dict键进行排序。&lt;em&gt;args&lt;/em&gt;和&lt;em&gt;kwargs&lt;/em&gt;将作为格式参数传递到&lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a659c78c60d319d6e45a2e439dc3a225dde2ce3" translate="yes" xml:space="preserve">
          <source>Prints the formatted representation of &lt;em&gt;object&lt;/em&gt; on &lt;em&gt;stream&lt;/em&gt;, followed by a newline. If &lt;em&gt;stream&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;sys.stdout&lt;/code&gt; is used. This may be used in the interactive interpreter instead of the &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function for inspecting values (you can even reassign &lt;code&gt;print = pprint.pprint&lt;/code&gt; for use within a scope). &lt;em&gt;indent&lt;/em&gt;, &lt;em&gt;width&lt;/em&gt;, &lt;em&gt;depth&lt;/em&gt;, &lt;em&gt;compact&lt;/em&gt; and &lt;em&gt;sort_dicts&lt;/em&gt; will be passed to the &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; constructor as formatting parameters.</source>
          <target state="translated">在&lt;em&gt;stream&lt;/em&gt;上打印&lt;em&gt;对象&lt;/em&gt;的格式化表示形式，后跟换行符。如果&lt;em&gt;stream&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则使用 &lt;code&gt;sys.stdout&lt;/code&gt; 。可以在交互式解释器中使用它，而不是用于检查值的&lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;函数（您甚至可以重新分配 &lt;code&gt;print = pprint.pprint&lt;/code&gt; 以在范围内使用）。&lt;em&gt;indent&lt;/em&gt;，&lt;em&gt;width&lt;/em&gt;，&lt;em&gt;depth&lt;/em&gt;，&lt;em&gt;compact&lt;/em&gt;和&lt;em&gt;sort_dicts&lt;/em&gt;将作为格式参数传递给&lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt; &lt;code&gt;PrettyPrinter&lt;/code&gt; &lt;/a&gt;构造函数。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e2c04dcd549cd717d09f1ffd8b8c5756396cea0" translate="yes" xml:space="preserve">
          <source>Prior to 3.0 on POSIX systems, and for all versions on Windows, if &lt;em&gt;block&lt;/em&gt; is true and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, this operation goes into an uninterruptible wait on an underlying lock. This means that no exceptions can occur, and in particular a SIGINT will not trigger a &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在POSIX系统上的3.0之前的版本以及Windows上的所有版本中，如果&lt;em&gt;block&lt;/em&gt;为true且&lt;em&gt;超时&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则此操作将在基础锁上进行不间断的等待。这意味着不会发生任何异常，尤其是SIGINT不会触发&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28bcc1b532447f6c38e344dc91337fbe1e3f57fc" translate="yes" xml:space="preserve">
          <source>Prior to Python 3.5, these three functions comprised the high level API to subprocess. You can now use &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; in many cases, but lots of existing code calls these functions.</source>
          <target state="translated">在Python 3.5之前，这三个函数包含用于子过程的高级API。现在，您可以在许多情况下使用&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;，但是许多现有代码都调用了这些函数。</target>
        </trans-unit>
        <trans-unit id="ee485a13f3c61d963098075b257dfa068de81844" translate="yes" xml:space="preserve">
          <source>Prior to Python 3.7, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; was not guaranteed to be ordered, so inputs and outputs were typically scrambled unless &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt;&lt;code&gt;collections.OrderedDict&lt;/code&gt;&lt;/a&gt; was specifically requested. Starting with Python 3.7, the regular &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; became order preserving, so it is no longer necessary to specify &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt;&lt;code&gt;collections.OrderedDict&lt;/code&gt;&lt;/a&gt; for JSON generation and parsing.</source>
          <target state="translated">在Python 3.7之前，不能保证&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;是有序的，因此除非特别要求&lt;a href=&quot;collections#collections.OrderedDict&quot;&gt; &lt;code&gt;collections.OrderedDict&lt;/code&gt; &lt;/a&gt;，否则通常会加扰输入和输出。从Python 3.7开始，常规&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;变成了保留顺序，因此不再需要指定&lt;a href=&quot;collections#collections.OrderedDict&quot;&gt; &lt;code&gt;collections.OrderedDict&lt;/code&gt; &lt;/a&gt;来进行JSON生成和解析。</target>
        </trans-unit>
        <trans-unit id="ce7b4f6920821f37a53df961801a5e76cb98bc7b" translate="yes" xml:space="preserve">
          <source>Prior to Python 3.8, the serialisation order of the XML attributes of elements was artificially made predictable by sorting the attributes by their name. Based on the now guaranteed ordering of dicts, this arbitrary reordering was removed in Python 3.8 to preserve the order in which attributes were originally parsed or created by user code.</source>
          <target state="translated">在 Python 3.8 之前,XML 元素属性的序列化顺序是人为地通过按属性名称排序来预测的。基于现在保证的 dicts 排序,这种任意的重新排序在 Python 3.8 中被删除了,以保留属性最初由用户代码解析或创建的顺序。</target>
        </trans-unit>
        <trans-unit id="d1fe312f536bf4e754308dab9f406009132a4bfe" translate="yes" xml:space="preserve">
          <source>Priority Queue</source>
          <target state="translated">优先队列</target>
        </trans-unit>
        <trans-unit id="340b6eb8ddb73074dc88d13b36b6daa62750be5f" translate="yes" xml:space="preserve">
          <source>Priority Queue Implementation Notes</source>
          <target state="translated">优先队列实施说明</target>
        </trans-unit>
        <trans-unit id="379a4e214d829e53c41f4b3c44bc18e9da1723bc" translate="yes" xml:space="preserve">
          <source>Priority data band can be read.</source>
          <target state="translated">可以读取优先数据带。</target>
        </trans-unit>
        <trans-unit id="14288e0ca4847b33646fff4072490e000fefb7c7" translate="yes" xml:space="preserve">
          <source>Priority data may be written.</source>
          <target state="translated">可以写入优先数据。</target>
        </trans-unit>
        <trans-unit id="ef7053edee96c0d878acb0f63f6bb849325088c6" translate="yes" xml:space="preserve">
          <source>Priority levels (high to low):</source>
          <target state="translated">优先级别(从高到低):</target>
        </trans-unit>
        <trans-unit id="42112cc384558a53635559f800e7234355ea8345" translate="yes" xml:space="preserve">
          <source>Private, abstract base class for pointers.</source>
          <target state="translated">指针的私有、抽象基类。</target>
        </trans-unit>
        <trans-unit id="fe0ab232aea403475c4f5484cfb3291f7dcd50a9" translate="yes" xml:space="preserve">
          <source>Probably the best way of solving the problem is to add class attributes as default values for instance members initialised in &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;. Note that if you are only setting default attributes in &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; then providing them via class attributes (shared between instances of course) is faster too. e.g.</source>
          <target state="translated">解决问题的最佳方法可能是将类属性作为默认值添加到&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;初始化的实例成员。请注意，如果仅在&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;设置默认属性，则通过类属性（当然是在实例之间共享）提供它们也更快。例如</target>
        </trans-unit>
        <trans-unit id="4d6e37bdb82eb8ed48fc306179c473d1c592bcb9" translate="yes" xml:space="preserve">
          <source>Probably the best way of solving the problem is to add class attributes as default values for instance members initialised in &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;. Note that if you are only setting default attributes in &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; then providing them via class attributes (shared between instances of course) is faster too. e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a3f6d4a767ee85079d7f46fcb38e6d4bd370e6" translate="yes" xml:space="preserve">
          <source>Process HTTP error responses.</source>
          <target state="translated">处理HTTP错误响应。</target>
        </trans-unit>
        <trans-unit id="e8e0ada6a5ef6d292d2c93e408caca1ecb42b186" translate="yes" xml:space="preserve">
          <source>Process HTTPS error responses.</source>
          <target state="translated">处理HTTPS错误响应。</target>
        </trans-unit>
        <trans-unit id="66b1085d2893b19ca61ed0f1a8614ff7c20c8fa9" translate="yes" xml:space="preserve">
          <source>Process ID (if available).</source>
          <target state="translated">流程ID(如果有)。</target>
        </trans-unit>
        <trans-unit id="1f5a86d996fe41cd28ad8ea8df3b57c8d1e99153" translate="yes" xml:space="preserve">
          <source>Process Management</source>
          <target state="translated">流程管理</target>
        </trans-unit>
        <trans-unit id="01df6eb3a4c83ebf34a899c278995155dd9de5c0" translate="yes" xml:space="preserve">
          <source>Process Parameters</source>
          <target state="translated">工艺参数</target>
        </trans-unit>
        <trans-unit id="f72f6213bcbf7742acdadc7f46dc0bee1131e9f2" translate="yes" xml:space="preserve">
          <source>Process Pools</source>
          <target state="translated">流程池</target>
        </trans-unit>
        <trans-unit id="9b86d892e46fbebbb16792b6ab58f8396eb7c342" translate="yes" xml:space="preserve">
          <source>Process Watchers</source>
          <target state="translated">流程监控器</target>
        </trans-unit>
        <trans-unit id="b32cff3bc6a5689bdcb0bac71d092e2dc71583f8" translate="yes" xml:space="preserve">
          <source>Process a chunk of &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="translated">处理大量&lt;em&gt;数据&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="947bfb22e72ecdaf6739dda63b55ef088ecd95cc" translate="yes" xml:space="preserve">
          <source>Process a single command keystroke. Here are the supported special keystrokes:</source>
          <target state="translated">处理单个命令按键。以下是支持的特殊按键。</target>
        </trans-unit>
        <trans-unit id="f96a65904dd29e5de1a41c2873eb6109ff1be6f8" translate="yes" xml:space="preserve">
          <source>Process a single request. This function calls the following methods in order: &lt;a href=&quot;#socketserver.BaseServer.get_request&quot;&gt;&lt;code&gt;get_request()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#socketserver.BaseServer.verify_request&quot;&gt;&lt;code&gt;verify_request()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#socketserver.BaseServer.process_request&quot;&gt;&lt;code&gt;process_request()&lt;/code&gt;&lt;/a&gt;. If the user-provided &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method of the handler class raises an exception, the server&amp;rsquo;s &lt;a href=&quot;#socketserver.BaseServer.handle_error&quot;&gt;&lt;code&gt;handle_error()&lt;/code&gt;&lt;/a&gt; method will be called. If no request is received within &lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt; seconds, &lt;a href=&quot;#socketserver.BaseServer.handle_timeout&quot;&gt;&lt;code&gt;handle_timeout()&lt;/code&gt;&lt;/a&gt; will be called and &lt;a href=&quot;#socketserver.BaseServer.handle_request&quot;&gt;&lt;code&gt;handle_request()&lt;/code&gt;&lt;/a&gt; will return.</source>
          <target state="translated">处理单个请求。此函数按顺序调用以下方法：&lt;a href=&quot;#socketserver.BaseServer.get_request&quot;&gt; &lt;code&gt;get_request()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#socketserver.BaseServer.verify_request&quot;&gt; &lt;code&gt;verify_request()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socketserver.BaseServer.process_request&quot;&gt; &lt;code&gt;process_request()&lt;/code&gt; &lt;/a&gt;。如果&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;程序类的用户提供的handle（）方法引发异常，则将调用服务器的&lt;a href=&quot;#socketserver.BaseServer.handle_error&quot;&gt; &lt;code&gt;handle_error()&lt;/code&gt; &lt;/a&gt;方法。如果没有请求被接收在&lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/a&gt;秒，&lt;a href=&quot;#socketserver.BaseServer.handle_timeout&quot;&gt; &lt;code&gt;handle_timeout()&lt;/code&gt; &lt;/a&gt;将被调用和&lt;a href=&quot;#socketserver.BaseServer.handle_request&quot;&gt; &lt;code&gt;handle_request()&lt;/code&gt; &lt;/a&gt;将返回。</target>
        </trans-unit>
        <trans-unit id="b1c507d17a8072014891e2d12127e007cafa17a7" translate="yes" xml:space="preserve">
          <source>Process an input source, producing SAX events. The &lt;em&gt;source&lt;/em&gt; object can be a system identifier (a string identifying the input source &amp;ndash; typically a file name or a URL), a &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object, or an &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; object. When &lt;a href=&quot;#xml.sax.xmlreader.XMLReader.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; returns, the input is completely processed, and the parser object can be discarded or reset.</source>
          <target state="translated">处理输入源，产生SAX事件。的&lt;em&gt;源&lt;/em&gt;对象可以是一个系统标识符（字符串标识输入源-通常是文件名或URL），一个&lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径状&lt;/a&gt;物体，或&lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; 的&lt;/a&gt;对象。当&lt;a href=&quot;#xml.sax.xmlreader.XMLReader.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;返回时，将完全处理输入，并且可以丢弃或重置解析器对象。</target>
        </trans-unit>
        <trans-unit id="ccc9b3accff95c5638423880dd05a2d9429f00db" translate="yes" xml:space="preserve">
          <source>Process an input source, producing SAX events. The &lt;em&gt;source&lt;/em&gt; object can be a system identifier (a string identifying the input source &amp;ndash; typically a file name or a URL), a &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object, or an &lt;a href=&quot;#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; object. When &lt;a href=&quot;#xml.sax.xmlreader.XMLReader.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; returns, the input is completely processed, and the parser object can be discarded or reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b311ad25d1db62875cc54150c554d28f143828c" translate="yes" xml:space="preserve">
          <source>Process and return data already in the queues (lazy).</source>
          <target state="translated">处理并返回已经在队列中的数据(懒惰)。</target>
        </trans-unit>
        <trans-unit id="b3599943b558766e7f19245507d6887c0663d872" translate="yes" xml:space="preserve">
          <source>Process identification number (PID).</source>
          <target state="translated">流程识别号(PID);</target>
        </trans-unit>
        <trans-unit id="297f39b6d2abdfdb1292f997173731b0fddec52a" translate="yes" xml:space="preserve">
          <source>Process name (if available).</source>
          <target state="translated">流程名称(如果有):</target>
        </trans-unit>
        <trans-unit id="4f0cc309bda79cb8d9bbf8927c6dcb4228a77c6c" translate="yes" xml:space="preserve">
          <source>Process objects represent activity that is run in a separate process. The &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; class has equivalents of all the methods of &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;threading.Thread&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">流程对象表示在单独的流程中运行的活动。的&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;类具有的所有方法等同&lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;threading.Thread&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2952edfd580aa8a664a3ded614d8f10340a237d" translate="yes" xml:space="preserve">
          <source>Process the HTTP request. The default implementation creates a handler instance using a &lt;a href=&quot;#module-wsgiref.handlers&quot;&gt;&lt;code&gt;wsgiref.handlers&lt;/code&gt;&lt;/a&gt; class to implement the actual WSGI application interface.</source>
          <target state="translated">处理HTTP请求。缺省实现使用&lt;a href=&quot;#module-wsgiref.handlers&quot;&gt; &lt;code&gt;wsgiref.handlers&lt;/code&gt; &lt;/a&gt;类创建一个处理程序实例，以实现实际的WSGI应用程序接口。</target>
        </trans-unit>
        <trans-unit id="b9f4c1da0a6f95349d5b7cab6bfc3e5d901e4edc" translate="yes" xml:space="preserve">
          <source>ProcessLookupError</source>
          <target state="translated">ProcessLookupError</target>
        </trans-unit>
        <trans-unit id="d4da8a798d14724a0caf5b1f84fe71ed27bd4ff8" translate="yes" xml:space="preserve">
          <source>ProcessPoolExecutor</source>
          <target state="translated">ProcessPoolExecutor</target>
        </trans-unit>
        <trans-unit id="e1cea46436f44b1ca5b79450691e62e489cd9c5c" translate="yes" xml:space="preserve">
          <source>ProcessPoolExecutor Example</source>
          <target state="translated">ProcessPoolExecutor示例</target>
        </trans-unit>
        <trans-unit id="94bb652c9572461a974b5f2114bbee99c0f0b7ed" translate="yes" xml:space="preserve">
          <source>Processes formatting specifiers as in &lt;code&gt;format % val&lt;/code&gt;, but takes the current locale settings into account.</source>
          <target state="translated">以 &lt;code&gt;format % val&lt;/code&gt; 处理格式化说明符，但会考虑当前的语言环境设置。</target>
        </trans-unit>
        <trans-unit id="21f10da205ad95c538599dfb2cba2ce2d07eb428" translate="yes" xml:space="preserve">
          <source>Processing instruction representation.</source>
          <target state="translated">处理指令表示。</target>
        </trans-unit>
        <trans-unit id="89856bf9806f209990cb1b3750df87125c96da8a" translate="yes" xml:space="preserve">
          <source>ProcessingInstruction Objects</source>
          <target state="translated">处理指令对象</target>
        </trans-unit>
        <trans-unit id="84a5556631d8395e80b4ddd01a2e3c3735e1fc89" translate="yes" xml:space="preserve">
          <source>Produce a directory listing as returned by the &lt;code&gt;LIST&lt;/code&gt; command, printing it to standard output. The optional &lt;em&gt;argument&lt;/em&gt; is a directory to list (default is the current server directory). Multiple arguments can be used to pass non-standard options to the &lt;code&gt;LIST&lt;/code&gt; command. If the last argument is a function, it is used as a &lt;em&gt;callback&lt;/em&gt; function as for &lt;a href=&quot;#ftplib.FTP.retrlines&quot;&gt;&lt;code&gt;retrlines()&lt;/code&gt;&lt;/a&gt;; the default prints to &lt;code&gt;sys.stdout&lt;/code&gt;. This method returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">生成目录列表，如 &lt;code&gt;LIST&lt;/code&gt; 命令所返回，将其打印到标准输出中。可选&lt;em&gt;参数&lt;/em&gt;是要列出的目录（默认为当前服务器目录）。可以使用多个参数将非标准选项传递给 &lt;code&gt;LIST&lt;/code&gt; 命令。如果最后一个参数是一个函数，则它与&lt;a href=&quot;#ftplib.FTP.retrlines&quot;&gt; &lt;code&gt;retrlines()&lt;/code&gt; &lt;/a&gt;一样用作&lt;em&gt;回调&lt;/em&gt;函数；默认打印到 &lt;code&gt;sys.stdout&lt;/code&gt; 。此方法返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee2e28d2f8fb31da49f40174236d2b632dbd76de" translate="yes" xml:space="preserve">
          <source>Produce a set of annotated listing files upon program completion that shows how many times each statement was executed. See also &lt;a href=&quot;#cmdoption-trace-coverdir&quot;&gt;&lt;code&gt;--coverdir&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#cmdoption-trace-f&quot;&gt;&lt;code&gt;--file&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cmdoption-trace-no-report&quot;&gt;&lt;code&gt;--no-report&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">在程序完成时产生一组带注释的清单文件，该文件显示每个语句执行了多少次。又见&lt;a href=&quot;#cmdoption-trace-coverdir&quot;&gt; &lt;code&gt;--coverdir&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#cmdoption-trace-f&quot;&gt; &lt;code&gt;--file&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#cmdoption-trace-no-report&quot;&gt; &lt;code&gt;--no-report&lt;/code&gt; &lt;/a&gt;如下。</target>
        </trans-unit>
        <trans-unit id="61b62b4918483f7d1f903deb8e344d1eb90bc205" translate="yes" xml:space="preserve">
          <source>Produce an annotated list from an earlier program run that used the &lt;a href=&quot;#cmdoption-trace-c&quot;&gt;&lt;code&gt;--count&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cmdoption-trace-f&quot;&gt;&lt;code&gt;--file&lt;/code&gt;&lt;/a&gt; option. This does not execute any code.</source>
          <target state="translated">从使用&lt;a href=&quot;#cmdoption-trace-c&quot;&gt; &lt;code&gt;--count&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#cmdoption-trace-f&quot;&gt; &lt;code&gt;--file&lt;/code&gt; &lt;/a&gt;选项的早期程序运行中生成带注释的列表。这不会执行任何代码。</target>
        </trans-unit>
        <trans-unit id="b6206021551dc337089d35c15bdfd762b397d0ed" translate="yes" xml:space="preserve">
          <source>Producing more informative usage messages.</source>
          <target state="translated">产生更多的信息使用信息。</target>
        </trans-unit>
        <trans-unit id="b1a89bbc60ade6c8211d72a39eee477320394916" translate="yes" xml:space="preserve">
          <source>Profile &lt;code&gt;func(*args, **kwargs)&lt;/code&gt;</source>
          <target state="translated">配置文件 &lt;code&gt;func(*args, **kwargs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ab5817ee3a38bdd3960784eebb66b96fdd8be97" translate="yes" xml:space="preserve">
          <source>Profile functions should have three arguments: &lt;em&gt;frame&lt;/em&gt;, &lt;em&gt;event&lt;/em&gt;, and &lt;em&gt;arg&lt;/em&gt;. &lt;em&gt;frame&lt;/em&gt; is the current stack frame. &lt;em&gt;event&lt;/em&gt; is a string: &lt;code&gt;'call'&lt;/code&gt;, &lt;code&gt;'return'&lt;/code&gt;, &lt;code&gt;'c_call'&lt;/code&gt;, &lt;code&gt;'c_return'&lt;/code&gt;, or &lt;code&gt;'c_exception'&lt;/code&gt;. &lt;em&gt;arg&lt;/em&gt; depends on the event type.</source>
          <target state="translated">Profile函数应具有三个参数：&lt;em&gt;frame&lt;/em&gt;，&lt;em&gt;event&lt;/em&gt;和&lt;em&gt;arg&lt;/em&gt;。&lt;em&gt;frame&lt;/em&gt;是当前的堆栈帧。&lt;em&gt;event&lt;/em&gt;是一个字符串： &lt;code&gt;'call'&lt;/code&gt; ， &lt;code&gt;'return'&lt;/code&gt; ， &lt;code&gt;'c_call'&lt;/code&gt; ， &lt;code&gt;'c_return'&lt;/code&gt; 或 &lt;code&gt;'c_exception'&lt;/code&gt; 。&lt;em&gt;arg&lt;/em&gt;取决于事件类型。</target>
        </trans-unit>
        <trans-unit id="76b85f64e42b75db85f6100c7446f9839a6a7ea4" translate="yes" xml:space="preserve">
          <source>Profile the cmd via &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; with the specified global and local environment.</source>
          <target state="translated">通过&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;使用指定的全局和本地环境来分析cmd 。</target>
        </trans-unit>
        <trans-unit id="36dda3343a7263d4db5c33b4996d45f6d08108ef" translate="yes" xml:space="preserve">
          <source>Profile the cmd via &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; 分析&lt;/a&gt; cmd 。</target>
        </trans-unit>
        <trans-unit id="95bd58802dc1b81dce30791a9d8256f51f58596b" translate="yes" xml:space="preserve">
          <source>Program Frameworks</source>
          <target state="translated">计划框架</target>
        </trans-unit>
        <trans-unit id="29732f847c3e72f38557e028f82b286984b79cf6" translate="yes" xml:space="preserve">
          <source>Programmatic Interface</source>
          <target state="translated">程序接口</target>
        </trans-unit>
        <trans-unit id="0cc5a8683e649a82320f81d8b98ad22b1224bb2a" translate="yes" xml:space="preserve">
          <source>Programmatic access to enumeration members and their attributes</source>
          <target state="translated">对枚举成员及其属性的程序性访问。</target>
        </trans-unit>
        <trans-unit id="43946ee36367ff5b56dd7206534999a5f9bb2e0c" translate="yes" xml:space="preserve">
          <source>Programmatic importing of modules should use &lt;a href=&quot;#importlib.import_module&quot;&gt;&lt;code&gt;import_module()&lt;/code&gt;&lt;/a&gt; instead of this function.</source>
          <target state="translated">以编程方式导入模块应使用&lt;a href=&quot;#importlib.import_module&quot;&gt; &lt;code&gt;import_module()&lt;/code&gt; &lt;/a&gt;而不是此函数。</target>
        </trans-unit>
        <trans-unit id="582a71e5cde8061e90cf7cb11216069f82272cfa" translate="yes" xml:space="preserve">
          <source>Programming Python</source>
          <target state="translated">编程Python</target>
        </trans-unit>
        <trans-unit id="cbb1703ad983064d7b0e59271c23ac61fd18453b" translate="yes" xml:space="preserve">
          <source>Programming guidelines</source>
          <target state="translated">方案编制准则</target>
        </trans-unit>
        <trans-unit id="7da030583783017b4f69be08fb0b0b0892cc669d" translate="yes" xml:space="preserve">
          <source>Progressbar</source>
          <target state="translated">Progressbar</target>
        </trans-unit>
        <trans-unit id="3277e9d5cb2ea7675324d81b2435cfeab83add48" translate="yes" xml:space="preserve">
          <source>Prompt server for an update. Returned data is &lt;code&gt;None&lt;/code&gt; if no new messages, else value of &lt;code&gt;RECENT&lt;/code&gt; response.</source>
          <target state="translated">提示服务器进行更新。如果没有新消息，则返回的数据为 &lt;code&gt;None&lt;/code&gt; ，否则为 &lt;code&gt;RECENT&lt;/code&gt; 响应的值。</target>
        </trans-unit>
        <trans-unit id="36ea9c97c82e09c4c66355ad465d29262386380c" translate="yes" xml:space="preserve">
          <source>Prompt the user for a password without echoing. The user is prompted using the string &lt;em&gt;prompt&lt;/em&gt;, which defaults to &lt;code&gt;'Password: '&lt;/code&gt;. On Unix, the prompt is written to the file-like object &lt;em&gt;stream&lt;/em&gt; using the replace error handler if needed. &lt;em&gt;stream&lt;/em&gt; defaults to the controlling terminal (&lt;code&gt;/dev/tty&lt;/code&gt;) or if that is unavailable to &lt;code&gt;sys.stderr&lt;/code&gt; (this argument is ignored on Windows).</source>
          <target state="translated">提示用户输入密码而不回显。使用字符串&lt;em&gt;提示提示用户&lt;/em&gt;，默认为 &lt;code&gt;'Password: '&lt;/code&gt; 。在Unix上，如果需要，可使用replace错误处理程序将提示写入类似文件的对象&lt;em&gt;流中&lt;/em&gt;。&lt;em&gt;流&lt;/em&gt;默认为控制终端（ &lt;code&gt;/dev/tty&lt;/code&gt; ）或 &lt;code&gt;sys.stderr&lt;/code&gt; 不可用（在Windows上将忽略此参数）。</target>
        </trans-unit>
        <trans-unit id="588169426c8d1fa7e44bc9a3ff15982cdbfaaa90" translate="yes" xml:space="preserve">
          <source>Property returning a new &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; containing all of the maps in the current instance except the first one. This is useful for skipping the first map in the search. Use cases are similar to those for the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#nonlocal&quot;&gt;&lt;code&gt;nonlocal&lt;/code&gt;&lt;/a&gt; keyword used in &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-nested-scope&quot;&gt;nested scopes&lt;/a&gt;. The use cases also parallel those for the built-in &lt;a href=&quot;functions#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; function. A reference to &lt;code&gt;d.parents&lt;/code&gt; is equivalent to: &lt;code&gt;ChainMap(*d.maps[1:])&lt;/code&gt;.</source>
          <target state="translated">该属性返回一个新的&lt;a href=&quot;#collections.ChainMap&quot;&gt; &lt;code&gt;ChainMap&lt;/code&gt; ,&lt;/a&gt;其中包含当前实例中除第一个实例外的所有地图。这对于跳过搜索中的第一张地图很有用。用例类似于&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-nested-scope&quot;&gt;嵌套作用域中&lt;/a&gt;使用的&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#nonlocal&quot;&gt; &lt;code&gt;nonlocal&lt;/code&gt; &lt;/a&gt;关键字的用例。这些用例还与内置&lt;a href=&quot;functions#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;函数的用例平行。对 &lt;code&gt;d.parents&lt;/code&gt; 的引用等效于： &lt;code&gt;ChainMap(*d.maps[1:])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6db0436175436024df80f6a6ee27695c483ed432" translate="yes" xml:space="preserve">
          <source>Property returning a new &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; containing all of the maps in the current instance except the first one. This is useful for skipping the first map in the search. Use cases are similar to those for the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#nonlocal&quot;&gt;&lt;code&gt;nonlocal&lt;/code&gt;&lt;/a&gt; keyword used in &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-nested-scope&quot;&gt;nested scopes&lt;/a&gt;. The use cases also parallel those for the built-in &lt;a href=&quot;functions#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; function. A reference to &lt;code&gt;d.parents&lt;/code&gt; is equivalent to: &lt;code&gt;ChainMap(*d.maps[1:])&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a1661ff20d05707d028062bc86d9655da030da" translate="yes" xml:space="preserve">
          <source>Property which is true if the finalizer is alive, false otherwise.</source>
          <target state="translated">属性,如果最终确定器是活的,则为true,否则为false。</target>
        </trans-unit>
        <trans-unit id="b71393da154d6654d013fdbe1762a139d1f0c832" translate="yes" xml:space="preserve">
          <source>Protect an &lt;a href=&quot;#asyncio-awaitables&quot;&gt;awaitable object&lt;/a&gt; from being &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;cancelled&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">保护&lt;a href=&quot;#asyncio-awaitables&quot;&gt;等待的对象&lt;/a&gt;不被&lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;cancelled&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8770cb52bfc12f5c8b944d6be182d7850b41eb42" translate="yes" xml:space="preserve">
          <source>Protected mode</source>
          <target state="translated">保护模式</target>
        </trans-unit>
        <trans-unit id="02ca74fb7fe36d1ec1ff43755c49fa63ad40ee48" translate="yes" xml:space="preserve">
          <source>Protocol classes can be generic, for example:</source>
          <target state="translated">例如,协议类可以是通用的。</target>
        </trans-unit>
        <trans-unit id="bc9e334f823b2be75b5b8c5ea9906ea9c0b08817" translate="yes" xml:space="preserve">
          <source>Protocol classes can implement the following &lt;strong&gt;callback methods&lt;/strong&gt;:</source>
          <target state="translated">协议类可以实现以下&lt;strong&gt;回调方法&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="ad5889cf55d9c9ddf964af330c62999831d5864d" translate="yes" xml:space="preserve">
          <source>Protocol definition for SMTP. This document covers the model, operating procedure, and protocol details for SMTP.</source>
          <target state="translated">SMTP的协议定义。本文档涵盖了SMTP的模型、操作流程和协议细节。</target>
        </trans-unit>
        <trans-unit id="0eefce21e56451e311edc639e53ac4594f96d85d" translate="yes" xml:space="preserve">
          <source>Protocol driver not attached</source>
          <target state="translated">未连接协议驱动程序</target>
        </trans-unit>
        <trans-unit id="a31583107f763ed101ab870682277a15652cc1cb" translate="yes" xml:space="preserve">
          <source>Protocol error</source>
          <target state="translated">错误协议</target>
        </trans-unit>
        <trans-unit id="677789471bfc26b9baa2dcb7bdc1e90f13c9beac" translate="yes" xml:space="preserve">
          <source>Protocol family not supported</source>
          <target state="translated">不支持协议系列</target>
        </trans-unit>
        <trans-unit id="59bb2975367cf35f9a618efe163f6de98389a1c2" translate="yes" xml:space="preserve">
          <source>Protocol not available</source>
          <target state="translated">议定书不详</target>
        </trans-unit>
        <trans-unit id="05ba63ff22fffa946a6c1e3e8b9d184a5a911e55" translate="yes" xml:space="preserve">
          <source>Protocol not supported</source>
          <target state="translated">不支持的协议</target>
        </trans-unit>
        <trans-unit id="66c27fe46bd114d55a64e98115a7040327f4a014" translate="yes" xml:space="preserve">
          <source>Protocol version 0 is the original &amp;ldquo;human-readable&amp;rdquo; protocol and is backwards compatible with earlier versions of Python.</source>
          <target state="translated">协议版本0是原始的&amp;ldquo;人类可读&amp;rdquo;协议，并且与Python的早期版本向后兼容。</target>
        </trans-unit>
        <trans-unit id="9f1b19752041a2f953f426891837b895ba0ec61a" translate="yes" xml:space="preserve">
          <source>Protocol version 1 is an old binary format which is also compatible with earlier versions of Python.</source>
          <target state="translated">协议版本1是一种旧的二进制格式,它也兼容Python的早期版本。</target>
        </trans-unit>
        <trans-unit id="b0b436e92f55285dbba9fe3ed7783a21924f5fb8" translate="yes" xml:space="preserve">
          <source>Protocol version 2 was introduced in Python 2.3. It provides much more efficient pickling of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-new-style-class&quot;&gt;new-style class&lt;/a&gt;es. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0307&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 307&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 2.</source>
          <target state="translated">协议版本2是在Python 2.3中引入的。它提供了更高效的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-new-style-class&quot;&gt;新型&lt;/a&gt; es 酸洗。有关协议2带来的改进的信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0307&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 307&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b208908a3e046d6aab147ab42a27e5ed8064958" translate="yes" xml:space="preserve">
          <source>Protocol version 2 was introduced in Python 2.3. It provides much more efficient pickling of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-new-style-class&quot;&gt;new-style class&lt;/a&gt;es. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0307&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 307&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d89cbdf33a6f12fe68fa41e5d62e69604f5f111" translate="yes" xml:space="preserve">
          <source>Protocol version 3 was added in Python 3.0. It has explicit support for &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects and cannot be unpickled by Python 2.x. This was the default protocol in Python 3.0&amp;ndash;3.7.</source>
          <target state="translated">协议版本3是在Python 3.0中添加的。它对&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象有明确的支持，并且不能被Python 2.x取消选择。这是Python 3.0&amp;ndash;3.7中的默认协议。</target>
        </trans-unit>
        <trans-unit id="167932e2e331e862375a10551050e9f26a28976e" translate="yes" xml:space="preserve">
          <source>Protocol version 4 was added in Python 3.4. It adds support for very large objects, pickling more kinds of objects, and some data format optimizations. It is the default protocol starting with Python 3.8. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-3154&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3154&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 4.</source>
          <target state="translated">协议版本4是在Python 3.4中添加的。它增加了对非常大的对象的支持，腌制更多种类的对象以及一些数据格式优化。从Python 3.8开始，它是默认协议。有关协议4带来的改进的信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-3154&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3154&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="caac2daa3b9e8785152f90bfa59fc39dc69b7cb8" translate="yes" xml:space="preserve">
          <source>Protocol version 5 was added in Python 3.8. It adds support for out-of-band data and speedup for in-band data. Refer to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0574&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 574&lt;/strong&gt;&lt;/a&gt; for information about improvements brought by protocol 5.</source>
          <target state="translated">协议版本5已在Python 3.8中添加。它增加了对带外数据的支持和对带内数据的加速。有关协议5带来的改进的信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0574&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 574&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1202f606b2e32bbc3d0fddceda6783cc8a6fb033" translate="yes" xml:space="preserve">
          <source>Protocol versions</source>
          <target state="translated">协议版本</target>
        </trans-unit>
        <trans-unit id="3ff5f085a157b60cb28dba0860f39cd3e12b11e1" translate="yes" xml:space="preserve">
          <source>Protocol wrong type for socket</source>
          <target state="translated">套接字的协议类型错误</target>
        </trans-unit>
        <trans-unit id="dd901073191ed23827708d5ff40ed845574f0ca7" translate="yes" xml:space="preserve">
          <source>ProtocolError Objects</source>
          <target state="translated">协议错误对象</target>
        </trans-unit>
        <trans-unit id="2a6e3082f7bd2a56b001fbb1624e361e5599002d" translate="yes" xml:space="preserve">
          <source>Protocols</source>
          <target state="translated">Protocols</target>
        </trans-unit>
        <trans-unit id="6c9370254ccd0ba3c533df6eb04115252a887895" translate="yes" xml:space="preserve">
          <source>Provide a per-write equivalent of the &lt;a href=&quot;#os.O_DSYNC&quot;&gt;&lt;code&gt;O_DSYNC&lt;/code&gt;&lt;/a&gt;&lt;code&gt;open(2)&lt;/code&gt; flag. This flag effect applies only to the data range written by the system call.</source>
          <target state="translated">提供等效于&lt;a href=&quot;#os.O_DSYNC&quot;&gt; &lt;code&gt;O_DSYNC&lt;/code&gt; &lt;/a&gt; &lt;code&gt;open(2)&lt;/code&gt; 标志的每次写入功能。此标志作用仅适用于系统调用写入的数据范围。</target>
        </trans-unit>
        <trans-unit id="f731e3836b43c76e6eb956ae15aaec713f209063" translate="yes" xml:space="preserve">
          <source>Provide a per-write equivalent of the &lt;a href=&quot;#os.O_SYNC&quot;&gt;&lt;code&gt;O_SYNC&lt;/code&gt;&lt;/a&gt;&lt;code&gt;open(2)&lt;/code&gt; flag. This flag effect applies only to the data range written by the system call.</source>
          <target state="translated">提供等效于&lt;a href=&quot;#os.O_SYNC&quot;&gt; &lt;code&gt;O_SYNC&lt;/code&gt; &lt;/a&gt; &lt;code&gt;open(2)&lt;/code&gt; 标志的每次写入功能。此标志作用仅适用于系统调用写入的数据范围。</target>
        </trans-unit>
        <trans-unit id="dee6bd9f4cdf3cd7282713ec5dcb4df91afa967f" translate="yes" xml:space="preserve">
          <source>Provide basic introspection for generic types and special typing forms.</source>
          <target state="translated">提供通用类型和特殊类型形式的基本内省。</target>
        </trans-unit>
        <trans-unit id="25d9907a6882636abf50f5974e10c9b5af617618" translate="yes" xml:space="preserve">
          <source>Provide data to the compressor object. Returns a chunk of compressed data if possible, or an empty byte string otherwise.</source>
          <target state="translated">向压缩器对象提供数据。如果可能的话,返回一个压缩数据块,否则返回一个空的字节串。</target>
        </trans-unit>
        <trans-unit id="370dad65015117426ba525e495fbbfdd82d208f2" translate="yes" xml:space="preserve">
          <source>Provider API</source>
          <target state="translated">提供者API</target>
        </trans-unit>
        <trans-unit id="778e9e5642a2d090654969214e90a85ebd83e83d" translate="yes" xml:space="preserve">
          <source>Provides (for &lt;em&gt;a&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt; vectors, &lt;em&gt;k&lt;/em&gt; number):</source>
          <target state="translated">提供（对于&lt;em&gt;a&lt;/em&gt;，&lt;em&gt;b个&lt;/em&gt;向量，&lt;em&gt;k&lt;/em&gt;个数）：</target>
        </trans-unit>
        <trans-unit id="1956b5072d57097ccefc1302702b4e99efeb926e" translate="yes" xml:space="preserve">
          <source>Provides a dictionary, based on &lt;code&gt;record&lt;/code&gt;, which is to be URL-encoded and sent to the web server. The default implementation just returns &lt;code&gt;record.__dict__&lt;/code&gt;. This method can be overridden if e.g. only a subset of &lt;a href=&quot;logging#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; is to be sent to the web server, or if more specific customization of what&amp;rsquo;s sent to the server is required.</source>
          <target state="translated">提供一个基于 &lt;code&gt;record&lt;/code&gt; 的字典，该字典将进行URL编码并发送到Web服务器。默认实现只是返回 &lt;code&gt;record.__dict__&lt;/code&gt; 。如果仅将&lt;a href=&quot;logging#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; 的&lt;/a&gt;一个子集发送到Web服务器，或者需要对发送到服务器的内容进行更具体的自定义，则可以重写此方法。</target>
        </trans-unit>
        <trans-unit id="c072b53c7e573480587a748eb43bae4c740a2472" translate="yes" xml:space="preserve">
          <source>Provides a mutable list-like object where all values stored within are stored in a shared memory block. This constrains storable values to only the &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt; (less than 10M bytes each), &lt;code&gt;bytes&lt;/code&gt; (less than 10M bytes each), and &lt;code&gt;None&lt;/code&gt; built-in data types. It also notably differs from the built-in &lt;code&gt;list&lt;/code&gt; type in that these lists can not change their overall length (i.e. no append, insert, etc.) and do not support the dynamic creation of new &lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt;&lt;code&gt;ShareableList&lt;/code&gt;&lt;/a&gt; instances via slicing.</source>
          <target state="translated">提供一个可变的类似列表的对象，其中存储的所有值都存储在共享内存块中。这将可存储的值限制为仅 &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;float&lt;/code&gt; ， &lt;code&gt;bool&lt;/code&gt; ， &lt;code&gt;str&lt;/code&gt; （每个小于10M字节）， &lt;code&gt;bytes&lt;/code&gt; （每个小于10M字节）和 &lt;code&gt;None&lt;/code&gt; 内置数据类型。它与内置 &lt;code&gt;list&lt;/code&gt; 类型的显着不同还在于，这些列表无法更改其总长度（即，没有追加，插入等），并且不支持通过切片动态创建新的&lt;a href=&quot;#multiprocessing.shared_memory.ShareableList&quot;&gt; &lt;code&gt;ShareableList&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="08a1afa7742389a1900345e97b7ed61c3d3364c2" translate="yes" xml:space="preserve">
          <source>Provides an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over all of the opcodes in a pickle, returning a sequence of &lt;code&gt;(opcode, arg, pos)&lt;/code&gt; triples. &lt;em&gt;opcode&lt;/em&gt; is an instance of an &lt;code&gt;OpcodeInfo&lt;/code&gt; class; &lt;em&gt;arg&lt;/em&gt; is the decoded value, as a Python object, of the opcode&amp;rsquo;s argument; &lt;em&gt;pos&lt;/em&gt; is the position at which this opcode is located. &lt;em&gt;pickle&lt;/em&gt; can be a string or a file-like object.</source>
          <target state="translated">在泡菜中的所有操作码上提供&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;，返回 &lt;code&gt;(opcode, arg, pos)&lt;/code&gt; 三元组序列。&lt;em&gt;opcode&lt;/em&gt;是 &lt;code&gt;OpcodeInfo&lt;/code&gt; 类的实例；&lt;em&gt;arg&lt;/em&gt;是操作码参数的解码值（作为Python对象）；&lt;em&gt;pos&lt;/em&gt;是此操作码所在的位置。&lt;em&gt;pickle&lt;/em&gt;可以是字符串或类似文件的对象。</target>
        </trans-unit>
        <trans-unit id="826d90d6638bda1a4b1418f5603badb9998e20e0" translate="yes" xml:space="preserve">
          <source>Provides an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over all of the opcodes in a pickle, returning a sequence of &lt;code&gt;(opcode, arg, pos)&lt;/code&gt; triples. &lt;em&gt;opcode&lt;/em&gt; is an instance of an &lt;code&gt;OpcodeInfo&lt;/code&gt; class; &lt;em&gt;arg&lt;/em&gt; is the decoded value, as a Python object, of the opcode&amp;rsquo;s argument; &lt;em&gt;pos&lt;/em&gt; is the position at which this opcode is located. &lt;em&gt;pickle&lt;/em&gt; can be a string or a file-like object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da5bc34e31a7e203e61c3d0dc371e4d52c7b8b4" translate="yes" xml:space="preserve">
          <source>Provides an overriding level &lt;em&gt;level&lt;/em&gt; for all loggers which takes precedence over the logger&amp;rsquo;s own level. When the need arises to temporarily throttle logging output down across the whole application, this function can be useful. Its effect is to disable all logging calls of severity &lt;em&gt;level&lt;/em&gt; and below, so that if you call it with a value of INFO, then all INFO and DEBUG events would be discarded, whereas those of severity WARNING and above would be processed according to the logger&amp;rsquo;s effective level. If &lt;code&gt;logging.disable(logging.NOTSET)&lt;/code&gt; is called, it effectively removes this overriding level, so that logging output again depends on the effective levels of individual loggers.</source>
          <target state="translated">为所有记录器提供一个优先级别，该&lt;em&gt;级别&lt;/em&gt;优先于记录器自己的级别。当需要临时限制整个应用程序中的日志记录输出时，此功能很有用。它的作用是禁用所有严重&lt;em&gt;级别&lt;/em&gt;及以下的日志记录调用，因此，如果您使用INFO值调用它，则将丢弃所有INFO和DEBUG事件，而严重程度为WARNING及以上的事件将根据记录器的处理方式进行处理。有效水平。如果调用 &lt;code&gt;logging.disable(logging.NOTSET)&lt;/code&gt; ，它将有效地删除此覆盖级别，因此，日志记录输出再次取决于各个记录器的有效级别。</target>
        </trans-unit>
        <trans-unit id="a9ec39711ed63db25cf35e6e09dca0e55c8fe1a4" translate="yes" xml:space="preserve">
          <source>Provides functionality to topologically sort a graph of hashable nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4199b1324e6bc5b4d37525ed1a37df751d8d1273" translate="yes" xml:space="preserve">
          <source>Provides screen oriented methods like &lt;code&gt;setbg()&lt;/code&gt; etc. that are described above.</source>
          <target state="translated">提供上述面向屏幕的方法，如 &lt;code&gt;setbg()&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="1878bf8bf86199d2bc6b8ea153656c2051a42071" translate="yes" xml:space="preserve">
          <source>Provides the &lt;a href=&quot;datetime#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; types with which the &lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt;&lt;code&gt;ZoneInfo&lt;/code&gt;&lt;/a&gt; class is designed to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcce81b2bfb8b4c888c6e8ed2e2a5f477886f7d" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;default=argparse.SUPPRESS&lt;/code&gt; causes no attribute to be added if the command-line argument was not present:</source>
          <target state="translated">如果不存在命令行参数，则提供 &lt;code&gt;default=argparse.SUPPRESS&lt;/code&gt; 不会添加任何属性：</target>
        </trans-unit>
        <trans-unit id="a736f976e35e63e7d42af793c52253fd6b6d0d72" translate="yes" xml:space="preserve">
          <source>Providing a much simpler interface for custom &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="translated">为自定义 &lt;code&gt;type&lt;/code&gt; 和 &lt;code&gt;action&lt;/code&gt; 提供简单得多的接口。</target>
        </trans-unit>
        <trans-unit id="63e7afc9f05c9ff9c919f47c668df6b888d2dc7f" translate="yes" xml:space="preserve">
          <source>Providing both of the script selection options will trigger an exception.</source>
          <target state="translated">提供这两个脚本选择选项将触发一个异常。</target>
        </trans-unit>
        <trans-unit id="d47999c4330b5fcd4daac54f907a640b4b134c74" translate="yes" xml:space="preserve">
          <source>Providing keyword arguments as in the first example only works for keys that are valid Python identifiers. Otherwise, any valid keys can be used.</source>
          <target state="translated">像第一个例子那样提供关键字参数,只对有效的 Python 标识符的键有效。否则,任何有效的键都可以被使用。</target>
        </trans-unit>
        <trans-unit id="25510081ac86d2210221f153b51cdc9df9ae4304" translate="yes" xml:space="preserve">
          <source>Proxy Objects</source>
          <target state="translated">代理对象</target>
        </trans-unit>
        <trans-unit id="2d5c573197196120569f02776eccc66f21f53599" translate="yes" xml:space="preserve">
          <source>Proxy objects are instances of subclasses of &lt;a href=&quot;#multiprocessing.managers.BaseProxy&quot;&gt;&lt;code&gt;BaseProxy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">代理对象是&lt;a href=&quot;#multiprocessing.managers.BaseProxy&quot;&gt; &lt;code&gt;BaseProxy&lt;/code&gt; &lt;/a&gt;子类的实例。</target>
        </trans-unit>
        <trans-unit id="c75a7087ecf855f67fcb81ebf6a5e6082a750517" translate="yes" xml:space="preserve">
          <source>ProxyBasicAuthHandler Objects</source>
          <target state="translated">ProxyBasicAuthHandler对象。</target>
        </trans-unit>
        <trans-unit id="9a3c956a4a7ba8ac42fa61ab44f51e4675dacefb" translate="yes" xml:space="preserve">
          <source>ProxyDigestAuthHandler Objects</source>
          <target state="translated">ProxyDigestAuthHandler对象。</target>
        </trans-unit>
        <trans-unit id="56ba0f30de43dff01434861636d0129dc0849fff" translate="yes" xml:space="preserve">
          <source>ProxyHandler Objects</source>
          <target state="translated">ProxyHandler对象</target>
        </trans-unit>
        <trans-unit id="4aeca1dd4670f2e0941bbdb681eaf9b9e7516518" translate="yes" xml:space="preserve">
          <source>Pseudo-code:</source>
          <target state="translated">Pseudo-code:</target>
        </trans-unit>
        <trans-unit id="c0fa5326d4b67d5bcfd41e0e59ce698212f3e714" translate="yes" xml:space="preserve">
          <source>Public classes</source>
          <target state="translated">公共课</target>
        </trans-unit>
        <trans-unit id="ab5297b4267339fff5c9910aec762c3934118955" translate="yes" xml:space="preserve">
          <source>Public functions</source>
          <target state="translated">公共职能</target>
        </trans-unit>
        <trans-unit id="f7563f6262a1a1f5617d82e0f1e3e2dee8d1e4c6" translate="yes" xml:space="preserve">
          <source>Pull API for non-blocking parsing</source>
          <target state="translated">用于非阻塞解析的Pull API</target>
        </trans-unit>
        <trans-unit id="c10612aa80041fdd7d816e69a190284aeec952e2" translate="yes" xml:space="preserve">
          <source>Pull the pen down &amp;ndash; drawing when moving.</source>
          <target state="translated">向下拉笔&amp;ndash;移动时绘图。</target>
        </trans-unit>
        <trans-unit id="7487a2e53df9e03ad9e8b9f59ae0d9088b93bad6" translate="yes" xml:space="preserve">
          <source>Pull the pen up &amp;ndash; no drawing when moving.</source>
          <target state="translated">向上拉笔&amp;ndash;移动时不作画。</target>
        </trans-unit>
        <trans-unit id="b6aada712c839fa727d6824da8ff431315046580" translate="yes" xml:space="preserve">
          <source>Pure path objects implement the &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; interface, allowing them to be used anywhere the interface is accepted.</source>
          <target state="translated">纯路径对象实现&lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; &lt;/a&gt;接口，从而允许在接受该接口的任何地方使用它们。</target>
        </trans-unit>
        <trans-unit id="62df8698802935952f3191995f045390c63e6835" translate="yes" xml:space="preserve">
          <source>Pure path objects provide path-handling operations which don&amp;rsquo;t actually access a filesystem. There are three ways to access these classes, which we also call &lt;em&gt;flavours&lt;/em&gt;:</source>
          <target state="translated">纯路径对象提供了实际上不访问文件系统的路径处理操作。有三种方法可以访问这些类，我们也将其称为&lt;em&gt;flavors&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="86c00397451c193a0cb88542e126e0a1e73aafdb" translate="yes" xml:space="preserve">
          <source>Pure paths</source>
          <target state="translated">纯洁的道路</target>
        </trans-unit>
        <trans-unit id="fa6b0a14eac80901b75a9e016b6ad99c88fe43b0" translate="yes" xml:space="preserve">
          <source>Pure paths are useful in some special cases; for example:</source>
          <target state="translated">纯粹的路径在一些特殊情况下是有用的;例如。</target>
        </trans-unit>
        <trans-unit id="a95973d5a8727818a646cdeaf2207e97f5c432af" translate="yes" xml:space="preserve">
          <source>Pure paths provide the following methods and properties:</source>
          <target state="translated">纯路径提供了以下方法和属性。</target>
        </trans-unit>
        <trans-unit id="66b0802b57fa5d6f4443fda5ba7dcc1d15cb11ba" translate="yes" xml:space="preserve">
          <source>PureProxy Objects</source>
          <target state="translated">PureProxy对象</target>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="translated">Purpose</target>
        </trans-unit>
        <trans-unit id="d2076bd43bbde39434180af8fb6f4c6d0957b8c3" translate="yes" xml:space="preserve">
          <source>Push &lt;em&gt;ch&lt;/em&gt; so the next &lt;a href=&quot;#curses.window.get_wch&quot;&gt;&lt;code&gt;get_wch()&lt;/code&gt;&lt;/a&gt; will return it.</source>
          <target state="translated">按&lt;em&gt;ch，&lt;/em&gt;以便下一个&lt;a href=&quot;#curses.window.get_wch&quot;&gt; &lt;code&gt;get_wch()&lt;/code&gt; &lt;/a&gt;将其返回。</target>
        </trans-unit>
        <trans-unit id="cc55018208e43f65febacf54f81f7d45197acf2c" translate="yes" xml:space="preserve">
          <source>Push &lt;em&gt;ch&lt;/em&gt; so the next &lt;a href=&quot;#curses.window.getch&quot;&gt;&lt;code&gt;getch()&lt;/code&gt;&lt;/a&gt; will return it.</source>
          <target state="translated">按&lt;em&gt;ch，&lt;/em&gt;以便下一个&lt;a href=&quot;#curses.window.getch&quot;&gt; &lt;code&gt;getch()&lt;/code&gt; &lt;/a&gt;将其返回。</target>
        </trans-unit>
        <trans-unit id="46b37576d9141e6a9f06389f49d50517fb63900b" translate="yes" xml:space="preserve">
          <source>Push &lt;em&gt;item&lt;/em&gt; on the heap, then pop and return the smallest item from the &lt;em&gt;heap&lt;/em&gt;. The combined action runs more efficiently than &lt;a href=&quot;#heapq.heappush&quot;&gt;&lt;code&gt;heappush()&lt;/code&gt;&lt;/a&gt; followed by a separate call to &lt;a href=&quot;#heapq.heappop&quot;&gt;&lt;code&gt;heappop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将&lt;em&gt;项目&lt;/em&gt;推入堆中，然后弹出并从&lt;em&gt;堆中&lt;/em&gt;返回最小的项目。组合的操作比&lt;a href=&quot;#heapq.heappush&quot;&gt; &lt;code&gt;heappush()&lt;/code&gt; &lt;/a&gt;更有效地运行，随后分别调用&lt;a href=&quot;#heapq.heappop&quot;&gt; &lt;code&gt;heappop()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="deeb8489db73ca68d5d5e5c0e00a56bb921df592" translate="yes" xml:space="preserve">
          <source>Push a &lt;code&gt;KEY_MOUSE&lt;/code&gt; event onto the input queue, associating the given state data with it.</source>
          <target state="translated">将 &lt;code&gt;KEY_MOUSE&lt;/code&gt; 事件推送到输入队列，将给定的状态数据与其关联。</target>
        </trans-unit>
        <trans-unit id="bdc5f19341ef454044ce777ed9a985c1ee736ce7" translate="yes" xml:space="preserve">
          <source>Push a line of source text to the interpreter. The line should not have a trailing newline; it may have internal newlines. The line is appended to a buffer and the interpreter&amp;rsquo;s &lt;code&gt;runsource()&lt;/code&gt; method is called with the concatenated contents of the buffer as source. If this indicates that the command was executed or invalid, the buffer is reset; otherwise, the command is incomplete, and the buffer is left as it was after the line was appended. The return value is &lt;code&gt;True&lt;/code&gt; if more input is required, &lt;code&gt;False&lt;/code&gt; if the line was dealt with in some way (this is the same as &lt;code&gt;runsource()&lt;/code&gt;).</source>
          <target state="translated">将一行源文本推到解释器。该行不应包含尾随换行符；它可能有内部换行符。该行将附加到缓冲区，然后使用缓冲区的串联内容作为源调用解释器的 &lt;code&gt;runsource()&lt;/code&gt; 方法。如果这表明命令已执行或无效，则将缓冲区复位；否则，将重新设置缓冲区。否则，该命令将不完整，并且在追加行之后将缓冲区保留为原来的状态。如果需要更多的输入，则返回值为 &lt;code&gt;True&lt;/code&gt; ;如果以某种方式处理了该行，则返回值为 &lt;code&gt;False&lt;/code&gt; （这与 &lt;code&gt;runsource()&lt;/code&gt; 相同）。</target>
        </trans-unit>
        <trans-unit id="1ff551f79566ed40a79345d1a8d8c3a5bf217bd8" translate="yes" xml:space="preserve">
          <source>Push an input source stream onto the input stack. If the filename argument is specified it will later be available for use in error messages. This is the same method used internally by the &lt;a href=&quot;#shlex.shlex.sourcehook&quot;&gt;&lt;code&gt;sourcehook()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">将输入源流推入输入堆栈。如果指定了filename参数，则以后可在错误消息中使用它。这与&lt;a href=&quot;#shlex.shlex.sourcehook&quot;&gt; &lt;code&gt;sourcehook()&lt;/code&gt; &lt;/a&gt;方法内部使用的方法相同。</target>
        </trans-unit>
        <trans-unit id="db6c3afd930aeb68d89014ee5433350a0a681bc6" translate="yes" xml:space="preserve">
          <source>Push panel to the top of the stack.</source>
          <target state="translated">将面板推到堆栈的顶部。</target>
        </trans-unit>
        <trans-unit id="285e296d900920005aeb30736d8c5b8dbc446057" translate="yes" xml:space="preserve">
          <source>Push the argument onto the token stack.</source>
          <target state="translated">将参数推到令牌堆栈上。</target>
        </trans-unit>
        <trans-unit id="e33f8f562ff442430fbdaadf2f184466a7cf2d74" translate="yes" xml:space="preserve">
          <source>Push the panel to the bottom of the stack.</source>
          <target state="translated">将面板推到堆栈的底部。</target>
        </trans-unit>
        <trans-unit id="1a260125546e3d60f42e10e3381f7f1f4e4702de" translate="yes" xml:space="preserve">
          <source>Push the value &lt;em&gt;item&lt;/em&gt; onto the &lt;em&gt;heap&lt;/em&gt;, maintaining the heap invariant.</source>
          <target state="translated">将值&lt;em&gt;项&lt;/em&gt;推入&lt;em&gt;堆&lt;/em&gt;，保持堆不变。</target>
        </trans-unit>
        <trans-unit id="060b3da8be8c41fc2db4adde6755d0d1a6852f33" translate="yes" xml:space="preserve">
          <source>Pushes &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; onto the stack. Used by the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87381f973c93a45ec66467fdd6d2f61819e610f" translate="yes" xml:space="preserve">
          <source>Pushes &lt;code&gt;NULL&lt;/code&gt; onto the stack for using it in &lt;a href=&quot;#opcode-END_FINALLY&quot;&gt;&lt;code&gt;END_FINALLY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-POP_FINALLY&quot;&gt;&lt;code&gt;POP_FINALLY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt;&lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#opcode-WITH_CLEANUP_FINISH&quot;&gt;&lt;code&gt;WITH_CLEANUP_FINISH&lt;/code&gt;&lt;/a&gt;. Starts the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">将 &lt;code&gt;NULL&lt;/code&gt; 推入堆栈以在&lt;a href=&quot;#opcode-END_FINALLY&quot;&gt; &lt;code&gt;END_FINALLY&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#opcode-POP_FINALLY&quot;&gt; &lt;code&gt;POP_FINALLY&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt; &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#opcode-WITH_CLEANUP_FINISH&quot;&gt; &lt;code&gt;WITH_CLEANUP_FINISH&lt;/code&gt; 中使用&lt;/a&gt;。开始&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;块。</target>
        </trans-unit>
        <trans-unit id="6d0445bcde7e6ba3eb17ac8b16105316c176699b" translate="yes" xml:space="preserve">
          <source>Pushes &lt;code&gt;builtins.__build_class__()&lt;/code&gt; onto the stack. It is later called by &lt;a href=&quot;#opcode-CALL_FUNCTION&quot;&gt;&lt;code&gt;CALL_FUNCTION&lt;/code&gt;&lt;/a&gt; to construct a class.</source>
          <target state="translated">将 &lt;code&gt;builtins.__build_class__()&lt;/code&gt; 入堆栈。稍后由&lt;a href=&quot;#opcode-CALL_FUNCTION&quot;&gt; &lt;code&gt;CALL_FUNCTION&lt;/code&gt; 调用&lt;/a&gt;以构造一个类。</target>
        </trans-unit>
        <trans-unit id="49a0ce60315742720d6e790708903a5cbdd38a13" translate="yes" xml:space="preserve">
          <source>Pushes &lt;code&gt;co_consts[consti]&lt;/code&gt; onto the stack.</source>
          <target state="translated">将 &lt;code&gt;co_consts[consti]&lt;/code&gt; 入堆栈。</target>
        </trans-unit>
        <trans-unit id="8c5c906f16d7213e3fe5cb70f6c4ba0d38aaf04f" translate="yes" xml:space="preserve">
          <source>Pushes a &lt;code&gt;None&lt;/code&gt; on to the producer queue. When this producer is popped off the queue it causes the channel to be closed.</source>
          <target state="translated">将 &lt;code&gt;None&lt;/code&gt; 推送到生产者队列。当此生产者从队列中弹出时，它将导致通道被关闭。</target>
        </trans-unit>
        <trans-unit id="914c8745b5a1bdf4649b1e5f23b242a942f8605d" translate="yes" xml:space="preserve">
          <source>Pushes a new dictionary object onto the stack. Pops &lt;code&gt;2 * count&lt;/code&gt; items so that the dictionary holds &lt;em&gt;count&lt;/em&gt; entries: &lt;code&gt;{..., TOS3: TOS2, TOS1: TOS}&lt;/code&gt;.</source>
          <target state="translated">将新的字典对象压入堆栈。弹出 &lt;code&gt;2 * count&lt;/code&gt; 项目，以便字典包含&lt;em&gt;count&lt;/em&gt;个条目： &lt;code&gt;{..., TOS3: TOS2, TOS1: TOS}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08052794fb7c2dbab8e430d2dd07bf32e9f75c31" translate="yes" xml:space="preserve">
          <source>Pushes a new function object on the stack. From bottom to top, the consumed stack must consist of values if the argument carries a specified flag value</source>
          <target state="translated">在栈上推送一个新的函数对象。从下到上,如果参数带有指定的标志值,消耗的堆栈必须由值组成。</target>
        </trans-unit>
        <trans-unit id="68ab25e4336f083f291523bf1fae81222344fd0f" translate="yes" xml:space="preserve">
          <source>Pushes a reference to the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage. The name of the variable is &lt;code&gt;co_cellvars[i]&lt;/code&gt; if &lt;em&gt;i&lt;/em&gt; is less than the length of &lt;em&gt;co_cellvars&lt;/em&gt;. Otherwise it is &lt;code&gt;co_freevars[i -
len(co_cellvars)]&lt;/code&gt;.</source>
          <target state="translated">将引用推送到包含在单元格插槽&lt;em&gt;i&lt;/em&gt;和自由变量存储中的单元格。如果&lt;em&gt;i&lt;/em&gt;小于&lt;em&gt;co_cellvars&lt;/em&gt;的长度，则 &lt;code&gt;co_cellvars[i]&lt;/code&gt; 的名称为co_cellvars [i]。否则为 &lt;code&gt;co_freevars[i - len(co_cellvars)]&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8dfe3cb391a82a542609fdfa5be8b3aa0ca06b25" translate="yes" xml:space="preserve">
          <source>Pushes a reference to the local &lt;code&gt;co_varnames[var_num]&lt;/code&gt; onto the stack.</source>
          <target state="translated">将对本地 &lt;code&gt;co_varnames[var_num]&lt;/code&gt; 的引用压入堆栈。</target>
        </trans-unit>
        <trans-unit id="21b2febb965d2f948ea4cf0206cc623631a6cdd3" translate="yes" xml:space="preserve">
          <source>Pushes a slice object on the stack. &lt;em&gt;argc&lt;/em&gt; must be 2 or 3. If it is 2, &lt;code&gt;slice(TOS1, TOS)&lt;/code&gt; is pushed; if it is 3, &lt;code&gt;slice(TOS2, TOS1, TOS)&lt;/code&gt; is pushed. See the &lt;a href=&quot;functions#slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; built-in function for more information.</source>
          <target state="translated">将切片对象压入堆栈。&lt;em&gt;argc&lt;/em&gt;必须为2或3。如果为2， &lt;code&gt;slice(TOS1, TOS)&lt;/code&gt; 压入；如果为3，则 &lt;code&gt;slice(TOS2, TOS1, TOS)&lt;/code&gt; 被压入。有关更多信息，请参见&lt;a href=&quot;functions#slice&quot;&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;/a&gt;内置函数。</target>
        </trans-unit>
        <trans-unit id="7d73d5ba6395f82b6350b0d8b60bb72d4aec78ca" translate="yes" xml:space="preserve">
          <source>Pushes a try block from a try-finally or try-except clause onto the block stack. &lt;em&gt;delta&lt;/em&gt; points to the finally block or the first except block.</source>
          <target state="translated">将try块从try-finally或try-except子句推入块堆栈。&lt;em&gt;增量&lt;/em&gt;指向finally块或第一个except块。</target>
        </trans-unit>
        <trans-unit id="20231af18a4c3e5c00a678485187da72502959f9" translate="yes" xml:space="preserve">
          <source>Pushes data on to the channel&amp;rsquo;s queue to ensure its transmission. This is all you need to do to have the channel write the data out to the network, although it is possible to use your own producers in more complex schemes to implement encryption and chunking, for example.</source>
          <target state="translated">将数据推送到通道的队列中以确保其传输。这是使通道将数据写到网络所需要做的全部工作，尽管例如，可以在更复杂的方案中使用自己的生产方来实现加密和分块。</target>
        </trans-unit>
        <trans-unit id="0c46ce674d43f69f80e61570dc3c7d94f5756df0" translate="yes" xml:space="preserve">
          <source>Pushes the address of the next instruction onto the stack and increments bytecode counter by &lt;em&gt;delta&lt;/em&gt;. Used for calling the finally block as a &amp;ldquo;subroutine&amp;rdquo;.</source>
          <target state="translated">将下一条指令的地址压入堆栈，并使字节码计数器增加&lt;em&gt;delta&lt;/em&gt;。用于作为&amp;ldquo;子例程&amp;rdquo;调用finally块。</target>
        </trans-unit>
        <trans-unit id="d579563bfb99148066bcc319f8230278195bae33" translate="yes" xml:space="preserve">
          <source>Pushes the value associated with &lt;code&gt;co_names[namei]&lt;/code&gt; onto the stack.</source>
          <target state="translated">将与 &lt;code&gt;co_names[namei]&lt;/code&gt; 关联的值压入堆栈。</target>
        </trans-unit>
        <trans-unit id="83775fb1f938d53ebaafa17df99df1094d912529" translate="yes" xml:space="preserve">
          <source>Put &lt;em&gt;item&lt;/em&gt; into the queue.</source>
          <target state="translated">将&lt;em&gt;项目&lt;/em&gt;放入队列。</target>
        </trans-unit>
        <trans-unit id="58b24c1f540864fcca7249c13913776d87e3018e" translate="yes" xml:space="preserve">
          <source>Put &lt;em&gt;item&lt;/em&gt; into the queue. If optional args &lt;em&gt;block&lt;/em&gt; is true and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), block if necessary until a free slot is available. If &lt;em&gt;timeout&lt;/em&gt; is a positive number, it blocks at most &lt;em&gt;timeout&lt;/em&gt; seconds and raises the &lt;a href=&quot;#queue.Full&quot;&gt;&lt;code&gt;Full&lt;/code&gt;&lt;/a&gt; exception if no free slot was available within that time. Otherwise (&lt;em&gt;block&lt;/em&gt; is false), put an item on the queue if a free slot is immediately available, else raise the &lt;a href=&quot;#queue.Full&quot;&gt;&lt;code&gt;Full&lt;/code&gt;&lt;/a&gt; exception (&lt;em&gt;timeout&lt;/em&gt; is ignored in that case).</source>
          <target state="translated">将&lt;em&gt;项目&lt;/em&gt;放入队列。如果可选的args &lt;em&gt;块&lt;/em&gt;为true，并且&lt;em&gt;超时&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; （默认值），则在必要时进行阻塞，直到有可用的插槽为止。如果&lt;em&gt;超时&lt;/em&gt;为正数，则在最多&lt;em&gt;超时&lt;/em&gt;秒内阻塞，并在该时间内没有可用插槽的情况下引发&lt;a href=&quot;#queue.Full&quot;&gt; &lt;code&gt;Full&lt;/code&gt; &lt;/a&gt;异常。否则（&lt;em&gt;块&lt;/em&gt;为false），如果有空闲插槽立即可用，则将项目放在队列中，否则引发&lt;a href=&quot;#queue.Full&quot;&gt; &lt;code&gt;Full&lt;/code&gt; &lt;/a&gt;异常（在这种情况下，&lt;em&gt;超时将&lt;/em&gt;被忽略）。</target>
        </trans-unit>
        <trans-unit id="8934b5345ae85e054929da0954168f7106a4dc3e" translate="yes" xml:space="preserve">
          <source>Put &lt;em&gt;item&lt;/em&gt; into the queue. The method never blocks and always succeeds (except for potential low-level errors such as failure to allocate memory). The optional args &lt;em&gt;block&lt;/em&gt; and &lt;em&gt;timeout&lt;/em&gt; are ignored and only provided for compatibility with &lt;a href=&quot;#queue.Queue.put&quot;&gt;&lt;code&gt;Queue.put()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将&lt;em&gt;项目&lt;/em&gt;放入队列。该方法永远不会阻塞并且总是会成功（除了潜在的低级错误，例如分配内存失败）。可选的args &lt;em&gt;块&lt;/em&gt;和&lt;em&gt;超时&lt;/em&gt;将被忽略，仅出于与&lt;a href=&quot;#queue.Queue.put&quot;&gt; &lt;code&gt;Queue.put()&lt;/code&gt; 的&lt;/a&gt;兼容性而提供。</target>
        </trans-unit>
        <trans-unit id="fb7807661d9be22693cbaed0a5656176c454fe3d" translate="yes" xml:space="preserve">
          <source>Put an item into the queue without blocking.</source>
          <target state="translated">将一个项目放入队列中,而不被阻挡。</target>
        </trans-unit>
        <trans-unit id="8218d84bd6234ff18e8621ebfadb8c4e7388dc86" translate="yes" xml:space="preserve">
          <source>Put an item into the queue. If the queue is full, wait until a free slot is available before adding the item.</source>
          <target state="translated">将一个项目放入队列中。如果队列已满,则要等到有空闲位置时再添加项目。</target>
        </trans-unit>
        <trans-unit id="f9cae25a978f59af9278740f11652ef7349f16a2" translate="yes" xml:space="preserve">
          <source>Put obj into the queue. If the optional argument &lt;em&gt;block&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default) and &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default), block if necessary until a free slot is available. If &lt;em&gt;timeout&lt;/em&gt; is a positive number, it blocks at most &lt;em&gt;timeout&lt;/em&gt; seconds and raises the &lt;a href=&quot;queue#queue.Full&quot;&gt;&lt;code&gt;queue.Full&lt;/code&gt;&lt;/a&gt; exception if no free slot was available within that time. Otherwise (&lt;em&gt;block&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;), put an item on the queue if a free slot is immediately available, else raise the &lt;a href=&quot;queue#queue.Full&quot;&gt;&lt;code&gt;queue.Full&lt;/code&gt;&lt;/a&gt; exception (&lt;em&gt;timeout&lt;/em&gt; is ignored in that case).</source>
          <target state="translated">将obj放入队列。如果可选参数&lt;em&gt;块&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; （默认值），并且&lt;em&gt;超时&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; （默认值），请在必要时阻塞，直到有可用插槽可用。如果&lt;em&gt;超时&lt;/em&gt;是一个正数，它将最多在&lt;em&gt;超时&lt;/em&gt;秒内阻塞并引发&lt;a href=&quot;queue#queue.Full&quot;&gt; &lt;code&gt;queue.Full&lt;/code&gt; &lt;/a&gt;如果在这段时间内没有可用的插槽，则发生完全异常。否则（&lt;em&gt;block&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ），如果有空闲插槽立即可用，则将项目放在队列中，否则引发&lt;a href=&quot;queue#queue.Full&quot;&gt; &lt;code&gt;queue.Full&lt;/code&gt; &lt;/a&gt;异常（在这种情况下将忽略&lt;em&gt;超时&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="e30ebfbecb90eab274dc7f46a9658e29a415f031" translate="yes" xml:space="preserve">
          <source>Put the SMTP connection in TLS (Transport Layer Security) mode. All SMTP commands that follow will be encrypted. You should then call &lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt;&lt;code&gt;ehlo()&lt;/code&gt;&lt;/a&gt; again.</source>
          <target state="translated">将SMTP连接置于TLS（传输层安全性）模式下。随后的所有SMTP命令将被加密。然后，您应该再次调用&lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt; &lt;code&gt;ehlo()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ad11b0512fca8842d107a0a94c7fecd10f4d659" translate="yes" xml:space="preserve">
          <source>Put the barrier into a broken state. This causes any active or future calls to &lt;a href=&quot;#threading.Barrier.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; to fail with the &lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt;&lt;code&gt;BrokenBarrierError&lt;/code&gt;&lt;/a&gt;. Use this for example if one of the threads needs to abort, to avoid deadlocking the application.</source>
          <target state="translated">将屏障置于破碎状态。这将导致任何对&lt;a href=&quot;#threading.Barrier.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; 的&lt;/a&gt;活动调用或将来的调用均因&lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt; &lt;code&gt;BrokenBarrierError&lt;/code&gt; &lt;/a&gt;而失败。例如，如果其中一个线程需要中止，请使用此选项，以避免死锁应用程序。</target>
        </trans-unit>
        <trans-unit id="9ad93fb8bceb03469b0b240c1d94e65e4ddf2c18" translate="yes" xml:space="preserve">
          <source>Put the device into non-blocking mode. Once in non-blocking mode, there is no way to return it to blocking mode.</source>
          <target state="translated">让设备进入非屏蔽模式。一旦进入非阻塞模式,就无法返回阻塞模式。</target>
        </trans-unit>
        <trans-unit id="1091cfdefe23623ba530a4b8db12fc943326a5c3" translate="yes" xml:space="preserve">
          <source>Put the socket object into closed state without actually closing the underlying file descriptor. The file descriptor is returned, and can be reused for other purposes.</source>
          <target state="translated">使套接字对象进入关闭状态,而不实际关闭底层文件描述符。文件描述符被返回,并可用于其他目的。</target>
        </trans-unit>
        <trans-unit id="f9d46fd9600b7e447b3fa4d11f9c74fc286b7f64" translate="yes" xml:space="preserve">
          <source>PyGObject</source>
          <target state="translated">PyGObject</target>
        </trans-unit>
        <trans-unit id="4d31c346c14baa247ff0c97428735b59c889439f" translate="yes" xml:space="preserve">
          <source>PyGObject provides introspection bindings for C libraries using &lt;a href=&quot;https://developer.gnome.org/gobject/stable/&quot;&gt;GObject&lt;/a&gt;. One of these libraries is the &lt;a href=&quot;https://www.gtk.org/&quot;&gt;GTK+ 3&lt;/a&gt; widget set. GTK+ comes with many more widgets than Tkinter provides. An online &lt;a href=&quot;https://python-gtk-3-tutorial.readthedocs.io/&quot;&gt;Python GTK+ 3 Tutorial&lt;/a&gt; is available.</source>
          <target state="translated">PyGObject使用&lt;a href=&quot;https://developer.gnome.org/gobject/stable/&quot;&gt;GObject&lt;/a&gt;为C库提供自省绑定。这些库之一是&lt;a href=&quot;https://www.gtk.org/&quot;&gt;GTK + 3&lt;/a&gt;小部件集。GTK +附带的小部件比Tkinter提供的要多。可以使用在线&lt;a href=&quot;https://python-gtk-3-tutorial.readthedocs.io/&quot;&gt;Python GTK + 3教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42911d3d75f013cbeb6206491fb434ba0ff3febc" translate="yes" xml:space="preserve">
          <source>PyGTK</source>
          <target state="translated">PyGTK</target>
        </trans-unit>
        <trans-unit id="b94652fa2011827f7f94decf66c9ec4272404a0c" translate="yes" xml:space="preserve">
          <source>PyGTK provides bindings for an older version of the library, GTK+ 2. It provides an object oriented interface that is slightly higher level than the C one. There are also bindings to &lt;a href=&quot;https://www.gnome.org/&quot;&gt;GNOME&lt;/a&gt;. An online &lt;a href=&quot;http://www.pygtk.org/pygtk2tutorial/index.html&quot;&gt;tutorial&lt;/a&gt; is available.</source>
          <target state="translated">PyGTK提供了库的旧版本GTK + 2的绑定。它提供了一个面向对象的接口，该接口的级别比C语言的稍高。也有到&lt;a href=&quot;https://www.gnome.org/&quot;&gt;GNOME的&lt;/a&gt;绑定。可以使用在线&lt;a href=&quot;http://www.pygtk.org/pygtk2tutorial/index.html&quot;&gt;教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="72fc60a60556ef9bd9b31b6d159b81a698f1f3ec" translate="yes" xml:space="preserve">
          <source>PyGTK, PyQt, PySide2, and wxPython, all have a modern look and feel and more widgets than Tkinter. In addition, there are many other GUI toolkits for Python, both cross-platform, and platform-specific. See the &lt;a href=&quot;https://wiki.python.org/moin/GuiProgramming&quot;&gt;GUI Programming&lt;/a&gt; page in the Python Wiki for a much more complete list, and also for links to documents where the different GUI toolkits are compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64c8cbe603dd88121eb44e96c989e19fb82e43a" translate="yes" xml:space="preserve">
          <source>PyGTK, PyQt, and wxPython, all have a modern look and feel and more widgets than Tkinter. In addition, there are many other GUI toolkits for Python, both cross-platform, and platform-specific. See the &lt;a href=&quot;https://wiki.python.org/moin/GuiProgramming&quot;&gt;GUI Programming&lt;/a&gt; page in the Python Wiki for a much more complete list, and also for links to documents where the different GUI toolkits are compared.</source>
          <target state="translated">PyGTK，PyQt和wxPython都具有现代外观，并且比Tkinter具有更多的小部件。此外，还有许多其他针对Python的GUI工具包，既跨平台的又是特定于平台的。有关更完整的列表，以及有关比较不同GUI工具包的文档的链接，请参见Python Wiki中的&lt;a href=&quot;https://wiki.python.org/moin/GuiProgramming&quot;&gt;GUI编程&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="591695c92a51e0a4994db8d71fa3299632cd41a3" translate="yes" xml:space="preserve">
          <source>PyQt</source>
          <target state="translated">PyQt</target>
        </trans-unit>
        <trans-unit id="9ae98c491854c976c1556187b6e1b97776f7d16f" translate="yes" xml:space="preserve">
          <source>PyQt is a &lt;strong&gt;sip&lt;/strong&gt;-wrapped binding to the Qt toolkit. Qt is an extensive C++ GUI application development framework that is available for Unix, Windows and Mac OS X. &lt;strong&gt;sip&lt;/strong&gt; is a tool for generating bindings for C++ libraries as Python classes, and is specifically designed for Python.</source>
          <target state="translated">PyQt的是一个&lt;strong&gt;SIP&lt;/strong&gt; -wrapped绑定到Qt工具包。Qt是一个广泛的C ++ GUI应用程序开发框架，可用于Unix，Windows和Mac &lt;strong&gt;OSX。sip&lt;/strong&gt;是用于为Python类别的C ++库生成绑定的工具，并且是专门为Python设计的。</target>
        </trans-unit>
        <trans-unit id="619105fc659c95fc540d2c1e747b3b2993ea7fd1" translate="yes" xml:space="preserve">
          <source>PySide</source>
          <target state="translated">PySide</target>
        </trans-unit>
        <trans-unit id="c06a107c4ddf3a14e7737b994f893c16e1981005" translate="yes" xml:space="preserve">
          <source>PySide is a newer binding to the Qt toolkit, provided by Nokia. Compared to PyQt, its licensing scheme is friendlier to non-open source applications.</source>
          <target state="translated">PySide是诺基亚提供的一个较新的与Qt工具箱的绑定。与PyQt相比,它的授权方案对非开放源码应用更为友好。</target>
        </trans-unit>
        <trans-unit id="c3f3053e8f5508f08f8fe926bd6611b8e41de151" translate="yes" xml:space="preserve">
          <source>PySide2</source>
          <target state="translated">PySide2</target>
        </trans-unit>
        <trans-unit id="8cc5e9ed71ff538ccf01ed1a98424a08329a58d3" translate="yes" xml:space="preserve">
          <source>PyZipFile Objects</source>
          <target state="translated">PyZipFile对象</target>
        </trans-unit>
        <trans-unit id="0abcfa3470fb7187c7fa3a03e26b907cf9a49745" translate="yes" xml:space="preserve">
          <source>Py_UNICODE</source>
          <target state="translated">Py_UNICODE</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Python</target>
        </trans-unit>
        <trans-unit id="6b8f61655c7227cb356bd2f7409e5033dbd21174" translate="yes" xml:space="preserve">
          <source>Python 3.3 adds several new functions in &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; that can be used to make precise measurements of process or wall-clock time. For example, see &lt;a href=&quot;time#time.perf_counter&quot;&gt;&lt;code&gt;time.perf_counter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python 3.3在&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;上增加了一些新功能，可用于精确测量过程或挂钟时间。例如，请参见&lt;a href=&quot;time#time.perf_counter&quot;&gt; &lt;code&gt;time.perf_counter()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0711b02500c16372db7e037b0db241051fe28013" translate="yes" xml:space="preserve">
          <source>Python API</source>
          <target state="translated">蟒蛇API</target>
        </trans-unit>
        <trans-unit id="3ee394b6d17ed1fc6cf7615a47330585fc9b0a01" translate="yes" xml:space="preserve">
          <source>Python Bytecode Instructions</source>
          <target state="translated">Python字节码说明</target>
        </trans-unit>
        <trans-unit id="60e6e681b6665f4178aacb421b80a3d4b9d00034" translate="yes" xml:space="preserve">
          <source>Python Development Mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb0f443a4045dcf52595aa8531b43c5c2fa7460" translate="yes" xml:space="preserve">
          <source>Python Docs</source>
          <target state="translated">Python文档</target>
        </trans-unit>
        <trans-unit id="0355f05a806d1783a9cc7d8c5ea6ee60f3d6f24f" translate="yes" xml:space="preserve">
          <source>Python Interface</source>
          <target state="translated">Python接口</target>
        </trans-unit>
        <trans-unit id="1f009e17d19f9da1b9faa9295f208962e3e63806" translate="yes" xml:space="preserve">
          <source>Python Language Mapping Specification</source>
          <target state="translated">Python语言映射规范</target>
        </trans-unit>
        <trans-unit id="0c6b8fde978bf14a2cd633dafb4a0b230f557746" translate="yes" xml:space="preserve">
          <source>Python Language Services</source>
          <target state="translated">Python语言服务</target>
        </trans-unit>
        <trans-unit id="092211b0a454b4bd3d5953ff3df7fd3f99cf63ea" translate="yes" xml:space="preserve">
          <source>Python Packaging User Guide: Creating and using virtual environments</source>
          <target state="translated">Python打包用户指南。创建和使用虚拟环境</target>
        </trans-unit>
        <trans-unit id="7a623bcfe092da5ad8c875bc8b6a2c58c3966c7b" translate="yes" xml:space="preserve">
          <source>Python Runtime Services</source>
          <target state="translated">Python运行时服务</target>
        </trans-unit>
        <trans-unit id="5e8caadc585bc176b908975c7b0f5adfd3ca07e5" translate="yes" xml:space="preserve">
          <source>Python Shell</source>
          <target state="translated">Python Shell</target>
        </trans-unit>
        <trans-unit id="37023209cd8d17b87ec33c9fedfa931e2dc4f32b" translate="yes" xml:space="preserve">
          <source>Python Shell window</source>
          <target state="translated">Python Shell窗口</target>
        </trans-unit>
        <trans-unit id="b7d42ac213c92acc79852232679f79b31ea56451" translate="yes" xml:space="preserve">
          <source>Python Specific Encodings</source>
          <target state="translated">Python专用编码</target>
        </trans-unit>
        <trans-unit id="99225c5a1bfdba35aa585e3e9d0046d88e7f76de" translate="yes" xml:space="preserve">
          <source>Python Tkinter Resources</source>
          <target state="translated">Python Tkinter资源</target>
        </trans-unit>
        <trans-unit id="c4b41fa096c8ca8de1aca03645726f801a284621" translate="yes" xml:space="preserve">
          <source>Python Type</source>
          <target state="translated">蟒蛇型</target>
        </trans-unit>
        <trans-unit id="8df32fb907357083986db821e14e12d057113627" translate="yes" xml:space="preserve">
          <source>Python and Tkinter Programming</source>
          <target state="translated">Python和Tkinter编程</target>
        </trans-unit>
        <trans-unit id="aafe008164775ee95643f93c690b0bf91843c0fc" translate="yes" xml:space="preserve">
          <source>Python applications should normally find no need to invoke these functions, and should use &lt;a href=&quot;gettext#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; instead. A known exception to this rule are applications that link with additional C libraries which internally invoke &lt;code&gt;gettext()&lt;/code&gt; or &lt;code&gt;dcgettext()&lt;/code&gt;. For these applications, it may be necessary to bind the text domain, so that the libraries can properly locate their message catalogs.</source>
          <target state="translated">Python应用程序通常应该不需要调用这些函数，而应该使用&lt;a href=&quot;gettext#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; &lt;/a&gt;。该规则的一个已知例外是与其他C库链接的应用程序，这些C库在内部调用 &lt;code&gt;gettext()&lt;/code&gt; 或 &lt;code&gt;dcgettext()&lt;/code&gt; 。对于这些应用程序，可能有必要绑定文本域，以便库可以正确定位其消息目录。</target>
        </trans-unit>
        <trans-unit id="7ba27acbccfe931c72cdbb3e8631db3a08ab43de" translate="yes" xml:space="preserve">
          <source>Python callable. Will be called with no arguments whenever either of the increment or decrement buttons are pressed.</source>
          <target state="translated">Python 可调用。每当增量或减量按钮被按下时,将被无参数调用。</target>
        </trans-unit>
        <trans-unit id="7c63cfd12aa8ac5be1bf526866c306771615c5c9" translate="yes" xml:space="preserve">
          <source>Python code objects have a &lt;code&gt;co_flags&lt;/code&gt; attribute, which is a bitmap of the following flags:</source>
          <target state="translated">Python代码对象具有 &lt;code&gt;co_flags&lt;/code&gt; 属性，该属性是以下标志的位图：</target>
        </trans-unit>
        <trans-unit id="55264df222d98db1d1d4885beaee43c36a00af15" translate="yes" xml:space="preserve">
          <source>Python comes with a number of codecs built-in, either implemented as C functions or with dictionaries as mapping tables. The following table lists the codecs by name, together with a few common aliases, and the languages for which the encoding is likely used. Neither the list of aliases nor the list of languages is meant to be exhaustive. Notice that spelling alternatives that only differ in case or use a hyphen instead of an underscore are also valid aliases; therefore, e.g. &lt;code&gt;'utf-8'&lt;/code&gt; is a valid alias for the &lt;code&gt;'utf_8'&lt;/code&gt; codec.</source>
          <target state="translated">Python带有许多内置的编解码器，这些编解码器既可以实现为C函数，也可以带有字典作为映射表。下表按名称列出了编解码器，以及一些常用别名，以及可能使用编码的语言。别名列表和语言列表都不是详尽无遗的。请注意，仅大小写不同或使用连字符而不是下划线的拼写替代也是有效的别名；因此，例如 &lt;code&gt;'utf-8'&lt;/code&gt; 是 &lt;code&gt;'utf_8'&lt;/code&gt; 编解码器的有效别名。</target>
        </trans-unit>
        <trans-unit id="6638c7fb834b1386886a4ceb27ea78e43c6f048a" translate="yes" xml:space="preserve">
          <source>Python coroutines are &lt;em&gt;awaitables&lt;/em&gt; and therefore can be awaited from other coroutines:</source>
          <target state="translated">蟒协同程序是&lt;em&gt;awaitables&lt;/em&gt;，因此可以从其他协同程序被期待已久的：</target>
        </trans-unit>
        <trans-unit id="7d88fc13b34091cdf70c9cff13c4b1284d594820" translate="yes" xml:space="preserve">
          <source>Python currently supports seven schemes:</source>
          <target state="translated">Python目前支持七种方案。</target>
        </trans-unit>
        <trans-unit id="eaf945f94327f2c0ce5f5922c999addd589c7d83" translate="yes" xml:space="preserve">
          <source>Python defines &lt;code&gt;pow(0, 0)&lt;/code&gt; and &lt;code&gt;0 ** 0&lt;/code&gt; to be &lt;code&gt;1&lt;/code&gt;, as is common for programming languages.</source>
          <target state="translated">Python将 &lt;code&gt;pow(0, 0)&lt;/code&gt; 和 &lt;code&gt;0 ** 0&lt;/code&gt; 为 &lt;code&gt;1&lt;/code&gt; ，这在编程语言中很常见。</target>
        </trans-unit>
        <trans-unit id="6b384100739e74cedd9aa09dc50763c7744aa517" translate="yes" xml:space="preserve">
          <source>Python defines several context managers to support easy thread synchronisation, prompt closure of files or other objects, and simpler manipulation of the active decimal arithmetic context. The specific types are not treated specially beyond their implementation of the context management protocol. See the &lt;a href=&quot;contextlib#module-contextlib&quot;&gt;&lt;code&gt;contextlib&lt;/code&gt;&lt;/a&gt; module for some examples.</source>
          <target state="translated">Python定义了几个上下文管理器，以支持轻松的线程同步，迅速关闭文件或其他对象以及对活动的十进制算术上下文进行更简单的操作。除了特定类型的上下文管理协议的实现以外，不对它们进行特殊处理。有关一些示例，请参见&lt;a href=&quot;contextlib#module-contextlib&quot;&gt; &lt;code&gt;contextlib&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="137da51dc044f7d1989ccf40d2cf2bb7660c7a2f" translate="yes" xml:space="preserve">
          <source>Python defines several iterator objects to support iteration over general and specific sequence types, dictionaries, and other more specialized forms. The specific types are not important beyond their implementation of the iterator protocol.</source>
          <target state="translated">Python 定义了几个迭代器对象,以支持对一般的和特定的序列类型、字典和其他更专门的形式进行迭代。除了迭代器协议的实现之外,具体类型并不重要。</target>
        </trans-unit>
        <trans-unit id="9b17cefa47591600687b4080407aa059ba0bde83" translate="yes" xml:space="preserve">
          <source>Python does not currently have an equivalent to &lt;code&gt;scanf()&lt;/code&gt;. Regular expressions are generally more powerful, though also more verbose, than &lt;code&gt;scanf()&lt;/code&gt; format strings. The table below offers some more-or-less equivalent mappings between &lt;code&gt;scanf()&lt;/code&gt; format tokens and regular expressions.</source>
          <target state="translated">Python当前没有等效于 &lt;code&gt;scanf()&lt;/code&gt; 。正则表达式通常比 &lt;code&gt;scanf()&lt;/code&gt; 格式字符串更强大，但也更冗长。下表提供了 &lt;code&gt;scanf()&lt;/code&gt; 格式标记和正则表达式之间的大致等效映射。</target>
        </trans-unit>
        <trans-unit id="3865683b646bac2aedc53f477cbeee82b1f7c068" translate="yes" xml:space="preserve">
          <source>Python doesn&amp;rsquo;t depend on the underlying operating system&amp;rsquo;s notion of text files; all the processing is done by Python itself, and is therefore platform-independent.</source>
          <target state="translated">Python不依赖于底层操作系统的文本文件概念；所有处理均由Python本身完成，因此与平台无关。</target>
        </trans-unit>
        <trans-unit id="239ff465648afd8737ce9440466db62f2e0139ae" translate="yes" xml:space="preserve">
          <source>Python fully supports mixed arithmetic: when a binary arithmetic operator has operands of different numeric types, the operand with the &amp;ldquo;narrower&amp;rdquo; type is widened to that of the other, where integer is narrower than floating point, which is narrower than complex. A comparison between numbers of different types behaves as though the exact values of those numbers were being compared. &lt;a href=&quot;#id13&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8638513dc3901fe6eaa10ec89548c63a1ae8d88b" translate="yes" xml:space="preserve">
          <source>Python fully supports mixed arithmetic: when a binary arithmetic operator has operands of different numeric types, the operand with the &amp;ldquo;narrower&amp;rdquo; type is widened to that of the other, where integer is narrower than floating point, which is narrower than complex. Comparisons between numbers of mixed type use the same rule. &lt;a href=&quot;#id13&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt; The constructors &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex()&lt;/code&gt;&lt;/a&gt; can be used to produce numbers of a specific type.</source>
          <target state="translated">Python完全支持混合算术：当二进制算术运算符具有不同数值类型的操作数时，具有&amp;ldquo;较窄&amp;rdquo;类型的操作数将扩展为另一种，其中整数比浮点数窄，比浮点数窄。混合类型数之间的比较使用相同的规则。&lt;a href=&quot;#id13&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;构造函数&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex()&lt;/code&gt; &lt;/a&gt;可以用于生成特定类型的数字。</target>
        </trans-unit>
        <trans-unit id="8dd854c517849a451ddd0370a06d5d10daf25373" translate="yes" xml:space="preserve">
          <source>Python has a more primitive serialization module called &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt;, but in general &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; should always be the preferred way to serialize Python objects. &lt;a href=&quot;marshal#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; exists primarily to support Python&amp;rsquo;s &lt;code&gt;.pyc&lt;/code&gt; files.</source>
          <target state="translated">Python有一个更原始的序列化模块，称为&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;，但总的来说，&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;应该始终是序列化Python对象的首选方法。&lt;a href=&quot;marshal#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;存在主要是为了支持Python的 &lt;code&gt;.pyc&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="125ddd4ef4447aca73bf2a25322e98803fa07676" translate="yes" xml:space="preserve">
          <source>Python has been able to execute zip files which contain a &lt;code&gt;__main__.py&lt;/code&gt; file since version 2.6. In order to be executed by Python, an application archive simply has to be a standard zip file containing a &lt;code&gt;__main__.py&lt;/code&gt; file which will be run as the entry point for the application. As usual for any Python script, the parent of the script (in this case the zip file) will be placed on &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; and thus further modules can be imported from the zip file.</source>
          <target state="translated">从2.6版开始，Python便能够执行包含 &lt;code&gt;__main__.py&lt;/code&gt; 文件的zip文件。为了由Python执行，应用程序归档文件只需是包含 &lt;code&gt;__main__.py&lt;/code&gt; 文件的标准zip文件，该文件将作为应用程序的入口点运行。与任何Python脚本一样，脚本的父级（在本例中为zip文件）将放置在&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; 上&lt;/a&gt;，因此可以从zip文件中导入其他模块。</target>
        </trans-unit>
        <trans-unit id="8662158d794f9720576b3782157e79d1cffd1410" translate="yes" xml:space="preserve">
          <source>Python has provisional and experimental support for TLS 1.3 with OpenSSL 1.1.1. The new protocol behaves slightly differently than previous version of TLS/SSL. Some new TLS 1.3 features are not yet available.</source>
          <target state="translated">Python 对 TLS 1.3 和 OpenSSL 1.1.1 的临时和实验性支持。新协议的行为与之前的TLS/SSL版本略有不同。一些新的 TLS 1.3 特性还没有提供。</target>
        </trans-unit>
        <trans-unit id="b3eae67939d577e355bd547630d90de6f5735051" translate="yes" xml:space="preserve">
          <source>Python installation issues occasionally stop IDLE: multiple versions can clash, or a single installation might need admin access. If one undo the clash, or cannot or does not want to run as admin, it might be easiest to completely remove Python and start over.</source>
          <target state="translated">Python安装问题偶尔会让IDLE停止运行:多个版本可能会发生冲突,或者单个安装可能需要管理员权限。如果撤销冲突,或者不能或不想以管理员身份运行,最简单的办法可能是完全删除Python并重新开始。</target>
        </trans-unit>
        <trans-unit id="e2b2848aeccd01905aee189ff04a70f830b0c331" translate="yes" xml:space="preserve">
          <source>Python is started in isolated mode (command line option &lt;code&gt;-I&lt;/code&gt;), except if the &lt;code&gt;__isolated&lt;/code&gt; keyword is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">Python会以隔离模式启动（命令行选项 &lt;code&gt;-I&lt;/code&gt; ），除非 &lt;code&gt;__isolated&lt;/code&gt; 关键字设置为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="038067e0594bc4123eff8d27bc300eff7f181804" translate="yes" xml:space="preserve">
          <source>Python module&amp;rsquo;s code is recompiled and the module-level code re-executed, defining a new set of objects which are bound to names in the module&amp;rsquo;s dictionary by reusing the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which originally loaded the module. The &lt;code&gt;init&lt;/code&gt; function of extension modules is not called a second time.</source>
          <target state="translated">重新编译Python模块的代码并重新执行模块级别的代码，从而定义了一组新对象，这些对象通过重用最初加载模块的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;加载器&lt;/a&gt;来绑定到模块字典中的名称。扩展模块的 &lt;code&gt;init&lt;/code&gt; 函数不会被第二次调用。</target>
        </trans-unit>
        <trans-unit id="40f531efde58146c04e1e85d63984af05989dd2e" translate="yes" xml:space="preserve">
          <source>Python module&amp;rsquo;s code is recompiled and the module-level code re-executed, defining a new set of objects which are bound to names in the module&amp;rsquo;s dictionary by reusing the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt; which originally loaded the module. The &lt;code&gt;init&lt;/code&gt; function of extension modules is not called a second time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea68622690cfcc29885ac7d1676e3539567a58b" translate="yes" xml:space="preserve">
          <source>Python offers two different primitive operations based on regular expressions: &lt;a href=&quot;#re.match&quot;&gt;&lt;code&gt;re.match()&lt;/code&gt;&lt;/a&gt; checks for a match only at the beginning of the string, while &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt; checks for a match anywhere in the string (this is what Perl does by default).</source>
          <target state="translated">Python根据正则表达式提供了两种不同的基本操作：&lt;a href=&quot;#re.match&quot;&gt; &lt;code&gt;re.match()&lt;/code&gt; &lt;/a&gt;仅在字符串的开头检查匹配项，而&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt;在字符串的任何位置检查匹配项（这是Perl的默认设置） ）。</target>
        </trans-unit>
        <trans-unit id="dc58dabbdc5bf17a7dfddcd9a8c1a72ef3764bbf" translate="yes" xml:space="preserve">
          <source>Python programmers issue warnings by calling the &lt;a href=&quot;#warnings.warn&quot;&gt;&lt;code&gt;warn()&lt;/code&gt;&lt;/a&gt; function defined in this module. (C programmers use &lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#c.PyErr_WarnEx&quot;&gt;&lt;code&gt;PyErr_WarnEx()&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#exceptionhandling&quot;&gt;Exception Handling&lt;/a&gt; for details).</source>
          <target state="translated">Python程序员通过调用此模块中定义的&lt;a href=&quot;#warnings.warn&quot;&gt; &lt;code&gt;warn()&lt;/code&gt; &lt;/a&gt;函数发出警告。（C程序员使用&lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#c.PyErr_WarnEx&quot;&gt; &lt;code&gt;PyErr_WarnEx()&lt;/code&gt; &lt;/a&gt;；有关详细信息，请参见&lt;a href=&quot;https://docs.python.org/3.8/c-api/exceptions.html#exceptionhandling&quot;&gt;异常处理&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d7cc288148db796debd312dd1161e435d7dd95d5" translate="yes" xml:space="preserve">
          <source>Python programmers issue warnings by calling the &lt;a href=&quot;#warnings.warn&quot;&gt;&lt;code&gt;warn()&lt;/code&gt;&lt;/a&gt; function defined in this module. (C programmers use &lt;a href=&quot;https://docs.python.org/3.9/c-api/exceptions.html#c.PyErr_WarnEx&quot;&gt;&lt;code&gt;PyErr_WarnEx()&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;https://docs.python.org/3.9/c-api/exceptions.html#exceptionhandling&quot;&gt;Exception Handling&lt;/a&gt; for details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37dc2c721fd1ebbf3abee81977fa9b416561970" translate="yes" xml:space="preserve">
          <source>Python searches a standard list of directories to find one which the calling user can create files in. The list is:</source>
          <target state="translated">Python 搜索一个标准的目录列表,以找到一个调用用户可以创建文件的目录。这个列表是:</target>
        </trans-unit>
        <trans-unit id="7c6d42373ec2780784c0876435cfe9919395c210" translate="yes" xml:space="preserve">
          <source>Python shell window (interactive interpreter) with colorizing of code input, output, and error messages</source>
          <target state="translated">Python shell窗口(交互式解释器),可对代码输入、输出和错误信息进行着色。</target>
        </trans-unit>
        <trans-unit id="64e5bc4d53eb593d318b2c56159cc8882c917467" translate="yes" xml:space="preserve">
          <source>Python signal handlers are always executed in the main Python thread of the main interpreter, even if the signal was received in another thread. This means that signals can&amp;rsquo;t be used as a means of inter-thread communication. You can use the synchronization primitives from the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df8d28b8372bf27065261b4a06d22c97b3c0df5" translate="yes" xml:space="preserve">
          <source>Python signal handlers are always executed in the main Python thread, even if the signal was received in another thread. This means that signals can&amp;rsquo;t be used as a means of inter-thread communication. You can use the synchronization primitives from the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module instead.</source>
          <target state="translated">即使在另一个线程中接收到信号，Python信号处理程序也总是在主Python线程中执行。这意味着信号不能用作线程间通信的手段。您可以改用&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;模块中的同步原语。</target>
        </trans-unit>
        <trans-unit id="805515798ecd3a95f5151c4222be6d7e0eb0a1ce" translate="yes" xml:space="preserve">
          <source>Python stores default member variable values in class attributes. Consider this example, not using dataclasses:</source>
          <target state="translated">Python在类属性中存储默认的成员变量值。考虑这个例子,不使用dataclasses。</target>
        </trans-unit>
        <trans-unit id="e57d4905f981518de8f41bf06f243fe9666343f0" translate="yes" xml:space="preserve">
          <source>Python supports a concept of iteration over containers. This is implemented using two distinct methods; these are used to allow user-defined classes to support iteration. Sequences, described below in more detail, always support the iteration methods.</source>
          <target state="translated">Python 支持容器上的迭代概念。它通过两个不同的方法来实现;这些方法用于允许用户定义的类支持迭代。下面详细描述的序列总是支持迭代方法。</target>
        </trans-unit>
        <trans-unit id="e0a75faf88bfb70662f9456d02405996512aa26f" translate="yes" xml:space="preserve">
          <source>Python supports this conversion in several ways: the &lt;code&gt;idna&lt;/code&gt; codec performs conversion between Unicode and ACE, separating an input string into labels based on the separator characters defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html#section-3.1&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;section 3.1 of RFC 3490&lt;/strong&gt;&lt;/a&gt; and converting each label to ACE as required, and conversely separating an input byte string into labels based on the &lt;code&gt;.&lt;/code&gt; separator and converting any ACE labels found into unicode. Furthermore, the &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module transparently converts Unicode host names to ACE, so that applications need not be concerned about converting host names themselves when they pass them to the socket module. On top of that, modules that have host names as function parameters, such as &lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ftplib#module-ftplib&quot;&gt;&lt;code&gt;ftplib&lt;/code&gt;&lt;/a&gt;, accept Unicode host names (&lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; then also transparently sends an IDNA hostname in the &lt;em&gt;Host&lt;/em&gt; field if it sends that field at all).</source>
          <target state="translated">Python以多种方式支持此转换： &lt;code&gt;idna&lt;/code&gt; 编解码器在Unicode和ACE之间执行转换，根据&lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html#section-3.1&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 3490第3.1节中&lt;/strong&gt;&lt;/a&gt;定义的分隔符将输入字符串分隔为标签，并根据需要将每个标签转换为ACE，然后反过来分隔输入将字节字符串转换为基于的标签 &lt;code&gt;.&lt;/code&gt; 分隔符并将找到的所有ACE标签转换为unicode。此外，&lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;模块可以透明地将Unicode主机名转换为ACE，因此在将主机名传递给套接字模块时，应用程序不必担心转换主机名本身。最重要的是，具有主机名作为功能参数的模块，例如&lt;a href=&quot;http.client#module-http.client&quot;&gt; &lt;code&gt;http.client&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;ftplib#module-ftplib&quot;&gt; &lt;code&gt;ftplib&lt;/code&gt; &lt;/a&gt;，接受Unicode主机名（如果&lt;a href=&quot;http.client#module-http.client&quot;&gt; &lt;code&gt;http.client&lt;/code&gt; &lt;/a&gt;完全发送该字段，则它还会在&lt;em&gt;Host&lt;/em&gt;字段中透明地发送IDNA主机名）。</target>
        </trans-unit>
        <trans-unit id="121a3c63ec9b91ea07418db0e66efcf64062bcca" translate="yes" xml:space="preserve">
          <source>Python type</source>
          <target state="translated">蟒蛇型</target>
        </trans-unit>
        <trans-unit id="9ccd99214ece3191a794e3112fc45207a3eb50bd" translate="yes" xml:space="preserve">
          <source>Python uses an installation scheme that differs depending on the platform and on the installation options. These schemes are stored in &lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt; under unique identifiers based on the value returned by &lt;a href=&quot;os#os.name&quot;&gt;&lt;code&gt;os.name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python使用的安装方案因平台和安装选项而异。这些方案基于&lt;a href=&quot;os#os.name&quot;&gt; &lt;code&gt;os.name&lt;/code&gt; &lt;/a&gt;返回的值，以唯一标识符存储在&lt;a href=&quot;#module-sysconfig&quot;&gt; &lt;code&gt;sysconfig&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5252a40c4f65097cb15222a351f8348f0bc26406" translate="yes" xml:space="preserve">
          <source>Python uses files to contain certificates. They should be formatted as &amp;ldquo;PEM&amp;rdquo; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc1422.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 1422&lt;/strong&gt;&lt;/a&gt;), which is a base-64 encoded form wrapped with a header line and a footer line:</source>
          <target state="translated">Python使用文件来包含证书。它们的格式应为&amp;ldquo; PEM&amp;rdquo;（请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc1422.html&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;RFC 1422&lt;/strong&gt;&lt;/a&gt;），这是一种以64位编码的形式，其中包含标题行和页脚行：</target>
        </trans-unit>
        <trans-unit id="9f8bdbb93a76ab2d3cdffb25ae64e2c3b88bee50" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s and the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextlib.contextmanager&lt;/code&gt;&lt;/a&gt; decorator provide a convenient way to implement these protocols. If a generator function is decorated with the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextlib.contextmanager&lt;/code&gt;&lt;/a&gt; decorator, it will return a context manager implementing the necessary &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; methods, rather than the iterator produced by an undecorated generator function.</source>
          <target state="translated">Python的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generators&lt;/a&gt;和&lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextlib.contextmanager&lt;/code&gt; &lt;/a&gt;装饰器提供了实现这些协议的便捷方法。如果一个发电机功能装饰有&lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt; &lt;code&gt;contextlib.contextmanager&lt;/code&gt; &lt;/a&gt;装饰，它将返回一个上下文管理器执行必要&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;方法，而不是由未修饰的发生器函数产生的迭代器。</target>
        </trans-unit>
        <trans-unit id="677bd4593d4e82724111b6c2b600512ad45bb115" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s provide a convenient way to implement the iterator protocol. If a container object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method is implemented as a generator, it will automatically return an iterator object (technically, a generator object) supplying the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; methods. More information about generators can be found in &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#yieldexpr&quot;&gt;the documentation for the yield expression&lt;/a&gt;.</source>
          <target state="translated">Python的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;提供了一种实现迭代器协议的便捷方法。如果将容器对象的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;方法实现为生成器，它将自动返回提供&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;方法的迭代器对象（从技术上讲，是生成器对象）。可以&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#yieldexpr&quot;&gt;在yield表达式的文档中&lt;/a&gt;找到有关生成器的更多信息。</target>
        </trans-unit>
        <trans-unit id="3c605662dab5a29ccef91d000e38909b7e68ed8f" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement supports the concept of a runtime context defined by a context manager. This is implemented using a pair of methods that allow user-defined classes to define a runtime context that is entered before the statement body is executed and exited when the statement ends:</source>
          <target state="translated">Python的&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句支持上下文管理器定义的运行时上下文的概念。这是通过一对方法实现的，该方法允许用户定义的类定义运行时上下文，该上下文在执行语句主体之前输入，并在语句结束时退出：</target>
        </trans-unit>
        <trans-unit id="0a47ad8d7d841597280bcef6a16f461e273a2fc2" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s and the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextlib.contextmanager&lt;/code&gt;&lt;/a&gt; decorator provide a convenient way to implement these protocols. If a generator function is decorated with the &lt;a href=&quot;contextlib#contextlib.contextmanager&quot;&gt;&lt;code&gt;contextlib.contextmanager&lt;/code&gt;&lt;/a&gt; decorator, it will return a context manager implementing the necessary &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; methods, rather than the iterator produced by an undecorated generator function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2a11a2852cf0600a5dba8208eeeae443ad35d4" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt;s provide a convenient way to implement the iterator protocol. If a container object&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method is implemented as a generator, it will automatically return an iterator object (technically, a generator object) supplying the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; methods. More information about generators can be found in &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#yieldexpr&quot;&gt;the documentation for the yield expression&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2541be56194ca8830b9a8f4584d68116947e6fe" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement supports the concept of a runtime context defined by a context manager. This is implemented using a pair of methods that allow user-defined classes to define a runtime context that is entered before the statement body is executed and exited when the statement ends:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fc66372953f6ab112fc8bd0382a503991fcf19" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s built-in I/O library, including both abstract classes and some concrete classes such as file I/O.</source>
          <target state="translated">Python的内置I / O库，包括抽象类和一些具体类，例如文件I / O。</target>
        </trans-unit>
        <trans-unit id="a375ced3f944826fda74f05d6e50538bb8b37488" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s interfaces for processing XML are grouped in the &lt;code&gt;xml&lt;/code&gt; package.</source>
          <target state="translated">用于处理XML的Python接口在 &lt;code&gt;xml&lt;/code&gt; 包中分组。</target>
        </trans-unit>
        <trans-unit id="8db5f8b1f1148220554e3b71399989ac48a9561a" translate="yes" xml:space="preserve">
          <source>Python&amp;rsquo;s standard library is very extensive, offering a wide range of facilities as indicated by the long table of contents listed below. The library contains built-in modules (written in C) that provide access to system functionality such as file I/O that would otherwise be inaccessible to Python programmers, as well as modules written in Python that provide standardized solutions for many problems that occur in everyday programming. Some of these modules are explicitly designed to encourage and enhance the portability of Python programs by abstracting away platform-specifics into platform-neutral APIs.</source>
          <target state="translated">Python的标准库非常广泛，可以提供各种功能，如下面列出的长目录所示。该库包含内置模块（用C编写），这些模块提供对系统功能的访问，例如Python程序员无法访问的文件I / O，以及用Python编写的模块，这些模块为在Windows中发生的许多问题提供了标准化的解决方案。日常编程。其中一些模块经过明确设计，旨在通过将特定于平台的内容抽象到与平台无关的API中来鼓励和增强Python程序的可移植性。</target>
        </trans-unit>
        <trans-unit id="a56d74116e43a96d3671879a0a1353285c0a42d1" translate="yes" xml:space="preserve">
          <source>Q. I noticed that context precision is applied to the results of operations but not to the inputs. Is there anything to watch out for when mixing values of different precisions?</source>
          <target state="translated">Q.我注意到上下文精度适用于操作的结果,但不适用输入。在混合不同精度的值时,有什么需要注意的吗?</target>
        </trans-unit>
        <trans-unit id="184e8ee9a97600966afe3fe06142b4741fecfdc6" translate="yes" xml:space="preserve">
          <source>Q. In a fixed-point application with two decimal places, some inputs have many places and need to be rounded. Others are not supposed to have excess digits and need to be validated. What methods should be used?</source>
          <target state="translated">Q.在一个有两个小数点的定点应用中,有些输入有很多位数,需要四舍五入。还有一些不应该有多余的位数,需要进行验证。应该使用什么方法?</target>
        </trans-unit>
        <trans-unit id="cf287f2c6a76496fdced9da2a97d5411e4cd69a2" translate="yes" xml:space="preserve">
          <source>Q. Is the CPython implementation fast for large numbers?</source>
          <target state="translated">Q.CPython的实现对于大数来说速度快吗?</target>
        </trans-unit>
        <trans-unit id="41099d70c4a2d310ac02e2147ae184e06ddd6db1" translate="yes" xml:space="preserve">
          <source>Q. Is there a way to convert a regular float to a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt;?</source>
          <target state="translated">问：是否可以将常规浮点数转换为&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;？</target>
        </trans-unit>
        <trans-unit id="2a4cfd94822d098abcdf3a658fff987ccb270559" translate="yes" xml:space="preserve">
          <source>Q. It is cumbersome to type &lt;code&gt;decimal.Decimal('1234.5')&lt;/code&gt;. Is there a way to minimize typing when using the interactive interpreter?</source>
          <target state="translated">问：键入 &lt;code&gt;decimal.Decimal('1234.5')&lt;/code&gt; 麻烦。使用交互式解释器时，有没有一种方法可以减少打字？</target>
        </trans-unit>
        <trans-unit id="434b41406d63e88e90b7a2e94979b5737ff0a790" translate="yes" xml:space="preserve">
          <source>Q. Once I have valid two place inputs, how do I maintain that invariant throughout an application?</source>
          <target state="translated">Q.一旦我有了有效的两地输入,我如何在整个应用程序中保持这种不变性?</target>
        </trans-unit>
        <trans-unit id="a552838f973a788a3762885e44efbeb55fed4de6" translate="yes" xml:space="preserve">
          <source>Q. Some decimal values always print with exponential notation. Is there a way to get a non-exponential representation?</source>
          <target state="translated">Q.有些小数值总是以指数符号打印。有没有办法得到非指数表示法?</target>
        </trans-unit>
        <trans-unit id="efdff4caeb47a86ad4dcce8a816e26d400c5a2ef" translate="yes" xml:space="preserve">
          <source>Q. There are many ways to express the same value. The numbers &lt;code&gt;200&lt;/code&gt;, &lt;code&gt;200.000&lt;/code&gt;, &lt;code&gt;2E2&lt;/code&gt;, and &lt;code&gt;02E+4&lt;/code&gt; all have the same value at various precisions. Is there a way to transform them to a single recognizable canonical value?</source>
          <target state="translated">问：有很多表达相同价值的方法。数字 &lt;code&gt;200&lt;/code&gt; ， &lt;code&gt;200.000&lt;/code&gt; ， &lt;code&gt;2E2&lt;/code&gt; 和 &lt;code&gt;02E+4&lt;/code&gt; 都具有在不同精度的相同的值。有没有办法将它们转换为单个可识别的规范值？</target>
        </trans-unit>
        <trans-unit id="12c5b25eefaaf388326b462caef87d681c47cf1f" translate="yes" xml:space="preserve">
          <source>Q. Within a complex calculation, how can I make sure that I haven&amp;rsquo;t gotten a spurious result because of insufficient precision or rounding anomalies.</source>
          <target state="translated">问：在复杂的计算中，如何确保由于精度不足或舍入异常而没有得到虚假结果。</target>
        </trans-unit>
        <trans-unit id="332067183f2ce95de719c0a525e235eae58d074a" translate="yes" xml:space="preserve">
          <source>QName Objects</source>
          <target state="translated">QName对象</target>
        </trans-unit>
        <trans-unit id="e2fce752ca401b308d2ac6e2708b36aff84ff002" translate="yes" xml:space="preserve">
          <source>QName wrapper. This can be used to wrap a QName attribute value, in order to get proper namespace handling on output. &lt;em&gt;text_or_uri&lt;/em&gt; is a string containing the QName value, in the form {uri}local, or, if the tag argument is given, the URI part of a QName. If &lt;em&gt;tag&lt;/em&gt; is given, the first argument is interpreted as a URI, and this argument is interpreted as a local name. &lt;a href=&quot;#xml.etree.ElementTree.QName&quot;&gt;&lt;code&gt;QName&lt;/code&gt;&lt;/a&gt; instances are opaque.</source>
          <target state="translated">QName包装器。这可以用来包装QName属性值，以便对输出进行正确的名称空间处理。&lt;em&gt;text_or_uri&lt;/em&gt;是一个包含QName值的字符串，格式为{uri} local，或者，如果指定了tag参数，则为QName的URI部分。如果给定了&lt;em&gt;tag&lt;/em&gt;，则第一个参数解释为URI，而该参数解释为本地名称。&lt;a href=&quot;#xml.etree.ElementTree.QName&quot;&gt; &lt;code&gt;QName&lt;/code&gt; &lt;/a&gt;实例是不透明的。</target>
        </trans-unit>
        <trans-unit id="5860c8458788e44e7636fa364548e067049a0d7b" translate="yes" xml:space="preserve">
          <source>QUIT</source>
          <target state="translated">QUIT</target>
        </trans-unit>
        <trans-unit id="73b2ff0d16b082ecede8e9b05601f92714c8c513" translate="yes" xml:space="preserve">
          <source>Queries on ST Objects</source>
          <target state="translated">对ST对象的查询</target>
        </trans-unit>
        <trans-unit id="ab66121a0bc7c0b8a6aaee889cc54e93513b06e9" translate="yes" xml:space="preserve">
          <source>Queries the given executable (defaults to the Python interpreter binary) for various architecture information.</source>
          <target state="translated">查询给定的可执行文件(默认为Python解释器二进制文件)的各种架构信息。</target>
        </trans-unit>
        <trans-unit id="299ec896adc2c252dcea6805c40e9a91a11f850a" translate="yes" xml:space="preserve">
          <source>Query component</source>
          <target state="translated">查询组件</target>
        </trans-unit>
        <trans-unit id="0404dd683dbc5f71444913158ce10905f534d293" translate="yes" xml:space="preserve">
          <source>Query or modify horizontal position of the treeview.</source>
          <target state="translated">查询或修改树形图的水平位置。</target>
        </trans-unit>
        <trans-unit id="f3137551469b1aac6319fe3bb1f6f5dc55c48802" translate="yes" xml:space="preserve">
          <source>Query or modify the configuration options of the Tix application context. If no option is specified, returns a dictionary all of the available options. If option is specified with no value, then the method returns a list describing the one named option (this list will be identical to the corresponding sublist of the value returned if no option is specified). If one or more option-value pairs are specified, then the method modifies the given option(s) to have the given value(s); in this case the method returns an empty string. Option may be any of the configuration options.</source>
          <target state="translated">查询或修改Tix应用上下文的配置选项,如果没有指定选项,返回一个包含所有可用选项的字典。如果没有指定选项,则返回一个包含所有可用选项的字典。如果没有指定选项,则返回一个描述命名选项的列表(如果没有指定选项,该列表与返回的值的相应子列表相同)。如果指定了一个或多个选项-值对,那么该方法将修改给定的选项,使其具有给定的值;在这种情况下,该方法返回一个空字符串。选项可以是任何一个配置选项。</target>
        </trans-unit>
        <trans-unit id="f3411c4b5457d5f86c7ff912b35ce82d4368a90e" translate="yes" xml:space="preserve">
          <source>Query or modify the heading options for the specified &lt;em&gt;column&lt;/em&gt;.</source>
          <target state="translated">查询或修改指定&lt;em&gt;列&lt;/em&gt;的标题选项。</target>
        </trans-unit>
        <trans-unit id="e1eb3b4198a33afbb12fb74d12272ff4ad1739f1" translate="yes" xml:space="preserve">
          <source>Query or modify the options for the specified &lt;em&gt;column&lt;/em&gt;.</source>
          <target state="translated">查询或修改指定&lt;em&gt;列&lt;/em&gt;的选项。</target>
        </trans-unit>
        <trans-unit id="069eb8475b8cd15fc964be359e94827025782b6b" translate="yes" xml:space="preserve">
          <source>Query or modify the options for the specified &lt;em&gt;item&lt;/em&gt;.</source>
          <target state="translated">查询或修改指定&lt;em&gt;项目&lt;/em&gt;的选项。</target>
        </trans-unit>
        <trans-unit id="723650e9732d43f711b60b214741478002d36c63" translate="yes" xml:space="preserve">
          <source>Query or modify the options for the specified &lt;em&gt;tagname&lt;/em&gt;.</source>
          <target state="translated">查询或修改指定&lt;em&gt;标记名&lt;/em&gt;的选项。</target>
        </trans-unit>
        <trans-unit id="d31c0506051a5a4710db0bff55099734b00676f0" translate="yes" xml:space="preserve">
          <source>Query or modify the options of the specific &lt;em&gt;tab_id&lt;/em&gt;.</source>
          <target state="translated">查询或修改特定&lt;em&gt;tab_id&lt;/em&gt;的选项。</target>
        </trans-unit>
        <trans-unit id="530c55b9295c467994e092bafdf0d25b46ddc05e" translate="yes" xml:space="preserve">
          <source>Query or modify vertical position of the treeview.</source>
          <target state="translated">查询或修改树形图的垂直位置。</target>
        </trans-unit>
        <trans-unit id="a54e9015afaf3040642420dd5908057649fd153b" translate="yes" xml:space="preserve">
          <source>Query or set the default value of the specified option(s) in &lt;em&gt;style&lt;/em&gt;.</source>
          <target state="translated">查询或设置&lt;em&gt;style中&lt;/em&gt;指定选项的默认值。</target>
        </trans-unit>
        <trans-unit id="4ccecafbaa149fddd3ee35e984ca1f1ff13368e9" translate="yes" xml:space="preserve">
          <source>Query or sets dynamic values of the specified option(s) in &lt;em&gt;style&lt;/em&gt;.</source>
          <target state="translated">查询或设置&lt;em&gt;style中&lt;/em&gt;指定选项的动态值。</target>
        </trans-unit>
        <trans-unit id="3b7011e503bd87a591251a590e176d2f8118d9ce" translate="yes" xml:space="preserve">
          <source>Query the server&amp;rsquo;s capabilities as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc2449.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2449&lt;/strong&gt;&lt;/a&gt;. Returns a dictionary in the form &lt;code&gt;{'name': ['param'...]}&lt;/code&gt;.</source>
          <target state="translated">查询&lt;a href=&quot;https://tools.ietf.org/html/rfc2449.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2449中&lt;/strong&gt;&lt;/a&gt;指定的服务器功能。以 &lt;code&gt;{'name': ['param'...]}&lt;/code&gt; 的形式返回字典。</target>
        </trans-unit>
        <trans-unit id="449bae23eac37a985c7d71e5a4cb82646b71e61c" translate="yes" xml:space="preserve">
          <source>Querying path properties:</source>
          <target state="translated">查询路径属性。</target>
        </trans-unit>
        <trans-unit id="8ae17d7b262729ea440d0673b507aa9e8c22bd4a" translate="yes" xml:space="preserve">
          <source>Querying the size of a terminal</source>
          <target state="translated">查询终端的大小</target>
        </trans-unit>
        <trans-unit id="c37f91c2a4c0dfd4703731640367d2f6614c4abc" translate="yes" xml:space="preserve">
          <source>Querying the size of the output terminal</source>
          <target state="translated">查询输出终端的大小</target>
        </trans-unit>
        <trans-unit id="002ff598115d84595ffeee6219cb5c03d3a1d4a6" translate="yes" xml:space="preserve">
          <source>Question</source>
          <target state="translated">Question</target>
        </trans-unit>
        <trans-unit id="d325fcd919384f395c02751e03d2cd0288b98cca" translate="yes" xml:space="preserve">
          <source>Queue</source>
          <target state="translated">Queue</target>
        </trans-unit>
        <trans-unit id="bd67243a09150c1cca311daac0a967d7282fadc5" translate="yes" xml:space="preserve">
          <source>Queue Objects</source>
          <target state="translated">队列对象</target>
        </trans-unit>
        <trans-unit id="8fa61222581c10ad0120496b1f531fd922fa2b3a" translate="yes" xml:space="preserve">
          <source>Queue objects (&lt;a href=&quot;#queue.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#queue.LifoQueue&quot;&gt;&lt;code&gt;LifoQueue&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#queue.PriorityQueue&quot;&gt;&lt;code&gt;PriorityQueue&lt;/code&gt;&lt;/a&gt;) provide the public methods described below.</source>
          <target state="translated">队列对象（&lt;a href=&quot;#queue.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#queue.LifoQueue&quot;&gt; &lt;code&gt;LifoQueue&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#queue.PriorityQueue&quot;&gt; &lt;code&gt;PriorityQueue&lt;/code&gt; &lt;/a&gt;）提供了下面描述的公共方法。</target>
        </trans-unit>
        <trans-unit id="4f425cbe378acfd9f1a8de93cea4965d49b9e251" translate="yes" xml:space="preserve">
          <source>QueueHandler</source>
          <target state="translated">QueueHandler</target>
        </trans-unit>
        <trans-unit id="2f1f3352372721053da1ab577f2842c42e6e8dfd" translate="yes" xml:space="preserve">
          <source>QueueListener</source>
          <target state="translated">QueueListener</target>
        </trans-unit>
        <trans-unit id="83dbc32040459c6d170231f099414d8cc8806687" translate="yes" xml:space="preserve">
          <source>Queues</source>
          <target state="translated">Queues</target>
        </trans-unit>
        <trans-unit id="ad29d9b9f009a6cdb44666226a27ecac9d357b47" translate="yes" xml:space="preserve">
          <source>Queues are thread and process safe.</source>
          <target state="translated">队列是线程和进程安全的。</target>
        </trans-unit>
        <trans-unit id="8ab9e848689bfc7257f1be1f467e76856e54b587" translate="yes" xml:space="preserve">
          <source>Queues can be used to distribute workload between several concurrent tasks:</source>
          <target state="translated">队列可以用来在多个并发任务之间分配工作负载。</target>
        </trans-unit>
        <trans-unit id="9e96968057fbbd4d3efa5fc0f76107086ff30c0d" translate="yes" xml:space="preserve">
          <source>Queues should be used to distribute work amongst multiple asyncio Tasks, implement connection pools, and pub/sub patterns.</source>
          <target state="translated">队列应该用来在多个asyncio Tasks之间分配工作,实现连接池和pub/sub模式。</target>
        </trans-unit>
        <trans-unit id="7d2b679e22dfa3101d1ba7bf2ec43c351c8ef687" translate="yes" xml:space="preserve">
          <source>Quick Guide</source>
          <target state="translated">快速指南</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">快速入门</target>
        </trans-unit>
        <trans-unit id="7dd0abc6c28752043604672ca88d6f1a334a8032" translate="yes" xml:space="preserve">
          <source>Quick-start Tutorial</source>
          <target state="translated">快速入门教程</target>
        </trans-unit>
        <trans-unit id="4babb1d9227e9cf95369d0a1db1908f28649b65e" translate="yes" xml:space="preserve">
          <source>Quiet and signaling NaNs are also included in the total ordering. The result of this function is &lt;code&gt;Decimal('0')&lt;/code&gt; if both operands have the same representation, &lt;code&gt;Decimal('-1')&lt;/code&gt; if the first operand is lower in the total order than the second, and &lt;code&gt;Decimal('1')&lt;/code&gt; if the first operand is higher in the total order than the second operand. See the specification for details of the total order.</source>
          <target state="translated">安静和信令NaN也包括在总排序中。此函数的结果是 &lt;code&gt;Decimal('0')&lt;/code&gt; 在两个操作数具有相同的表示， &lt;code&gt;Decimal('-1')&lt;/code&gt; 如果所述第一操作数是在比所述第二总订单下，和 &lt;code&gt;Decimal('1')&lt;/code&gt; ，如果第一个操作数的总顺序高于第二个操作数。有关总订单的详细信息，请参见规格。</target>
        </trans-unit>
        <trans-unit id="c32ccfb23b10eafc366f5df18350d5e5c78818c6" translate="yes" xml:space="preserve">
          <source>Quit from the debugger. The program being executed is aborted.</source>
          <target state="translated">从调试器中退出。正在执行的程序被中止。</target>
        </trans-unit>
        <trans-unit id="e9a049dd51f6f6165f82600419d9408a49973ebc" translate="yes" xml:space="preserve">
          <source>Quota exceeded</source>
          <target state="translated">超过配额</target>
        </trans-unit>
        <trans-unit id="d948c11d9b187ba19486b6cb13c596158cb156b8" translate="yes" xml:space="preserve">
          <source>Quote characters are not recognized within words (&lt;code&gt;Do&quot;Not&quot;Separate&lt;/code&gt; is parsed as the single word &lt;code&gt;Do&quot;Not&quot;Separate&lt;/code&gt;);</source>
          <target state="translated">单词内不能识别引号字符（将 &lt;code&gt;Do&quot;Not&quot;Separate&lt;/code&gt; 解析为单个单词 &lt;code&gt;Do&quot;Not&quot;Separate&lt;/code&gt; ）；</target>
        </trans-unit>
        <trans-unit id="cf43703d976b5083d479d158bf1057729ed499a1" translate="yes" xml:space="preserve">
          <source>Quoted empty strings (&lt;code&gt;''&lt;/code&gt;) are allowed.</source>
          <target state="translated">引用空字符串（ &lt;code&gt;''&lt;/code&gt; ）是允许的。</target>
        </trans-unit>
        <trans-unit id="1de88b7a5518f32064e4736088839ca0a35cef5f" translate="yes" xml:space="preserve">
          <source>Quotes are stripped out, and do not separate words (&lt;code&gt;&quot;Do&quot;Not&quot;Separate&quot;&lt;/code&gt; is parsed as the single word &lt;code&gt;DoNotSeparate&lt;/code&gt;);</source>
          <target state="translated">引号被删除，并且不要分隔单词（ &lt;code&gt;&quot;Do&quot;Not&quot;Separate&quot;&lt;/code&gt; 被解析为单个单词 &lt;code&gt;DoNotSeparate&lt;/code&gt; ）；</target>
        </trans-unit>
        <trans-unit id="3baf119d765d9f829905b317e59f73675764e9ee" translate="yes" xml:space="preserve">
          <source>Quoting the docs for that value:</source>
          <target state="translated">引用该值的文档。</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="cabc5c96018f7018921f4448490e0330a4b89f05" translate="yes" xml:space="preserve">
          <source>R flag</source>
          <target state="translated">R旗</target>
        </trans-unit>
        <trans-unit id="4acdb8f75fc10aeabb85627f5b065c26ab3a0d42" translate="yes" xml:space="preserve">
          <source>R flag and O flag</source>
          <target state="translated">R旗和O旗</target>
        </trans-unit>
        <trans-unit id="c54a6c7f5be551f84672806b45e8628a63c06c62" translate="yes" xml:space="preserve">
          <source>RCPT</source>
          <target state="translated">RCPT</target>
        </trans-unit>
        <trans-unit id="971a36c4421e4cbb57c2d5af10bfa1a4e0b52c61" translate="yes" xml:space="preserve">
          <source>RFS specific error</source>
          <target state="translated">RFS具体误差</target>
        </trans-unit>
        <trans-unit id="2c12ad208e53e2457d4dd4d5838ee8fb9e6f7b91" translate="yes" xml:space="preserve">
          <source>RLock Objects</source>
          <target state="translated">RLock对象</target>
        </trans-unit>
        <trans-unit id="b86aad6bcd44688901d1d90d82637c77c09de567" translate="yes" xml:space="preserve">
          <source>RSET</source>
          <target state="translated">RSET</target>
        </trans-unit>
        <trans-unit id="a1c2f06372ca0b2789b9b64df1a575c0e730b3a4" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt; if the socket is &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking&lt;/a&gt; and the read would block.</source>
          <target state="translated">提高&lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; &lt;/a&gt;如果套接字是&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非阻塞&lt;/a&gt;和读取将阻塞。</target>
        </trans-unit>
        <trans-unit id="487f22f4c2f92d02b3f0636b5755e31f6f23e284" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt; if the socket is &lt;a href=&quot;#ssl-nonblocking&quot;&gt;non-blocking&lt;/a&gt; and the write would block.</source>
          <target state="translated">提高&lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; &lt;/a&gt;如果套接字是&lt;a href=&quot;#ssl-nonblocking&quot;&gt;非阻塞&lt;/a&gt;和写入将阻塞。</target>
        </trans-unit>
        <trans-unit id="d2bd0f4cf527cddda0cf32631211e4b1d3a115b2" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt;&lt;code&gt;ResourceDenied&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;resource&lt;/em&gt; is not available. &lt;em&gt;msg&lt;/em&gt; is the argument to &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt;&lt;code&gt;ResourceDenied&lt;/code&gt;&lt;/a&gt; if it is raised. Always returns &lt;code&gt;True&lt;/code&gt; if called by a function whose &lt;code&gt;__name__&lt;/code&gt; is &lt;code&gt;'__main__'&lt;/code&gt;. Used when tests are executed by &lt;code&gt;test.regrtest&lt;/code&gt;.</source>
          <target state="translated">如果&lt;em&gt;资源&lt;/em&gt;不可用，请提高&lt;a href=&quot;#test.support.ResourceDenied&quot;&gt; &lt;code&gt;ResourceDenied&lt;/code&gt; &lt;/a&gt;。如果引发&lt;em&gt;msg&lt;/em&gt;，则它是&lt;a href=&quot;#test.support.ResourceDenied&quot;&gt; &lt;code&gt;ResourceDenied&lt;/code&gt; &lt;/a&gt;的参数。如果由 &lt;code&gt;__name__&lt;/code&gt; 是 &lt;code&gt;'__main__'&lt;/code&gt; 的函数调用，则始终返回 &lt;code&gt;True&lt;/code&gt; 。由 &lt;code&gt;test.regrtest&lt;/code&gt; 执行测试时使用。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab18aff48bbfd5b6a5bf472b5ad070ee5656353a" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;asyncio-exceptions#asyncio.SendfileNotAvailableError&quot;&gt;&lt;code&gt;SendfileNotAvailableError&lt;/code&gt;&lt;/a&gt; if the system does not support &lt;em&gt;sendfile&lt;/em&gt; syscall and &lt;em&gt;fallback&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">提高&lt;a href=&quot;asyncio-exceptions#asyncio.SendfileNotAvailableError&quot;&gt; &lt;code&gt;SendfileNotAvailableError&lt;/code&gt; &lt;/a&gt;如果系统不支持&lt;em&gt;sendfile的&lt;/em&gt;系统调用和&lt;em&gt;回退&lt;/em&gt;是 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="527292d4de0f371692e481985d15cb116d202b2d" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;asyncio-exceptions#asyncio.SendfileNotAvailableError&quot;&gt;&lt;code&gt;SendfileNotAvailableError&lt;/code&gt;&lt;/a&gt; if the system does not support the &lt;em&gt;sendfile&lt;/em&gt; syscall and &lt;em&gt;fallback&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">提高&lt;a href=&quot;asyncio-exceptions#asyncio.SendfileNotAvailableError&quot;&gt; &lt;code&gt;SendfileNotAvailableError&lt;/code&gt; &lt;/a&gt;如果系统不支持&lt;em&gt;sendfile的&lt;/em&gt;系统调用和&lt;em&gt;回退&lt;/em&gt;是 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3949a795c96bcc51f936b853e92dc8da9c47436c" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; if connection closed and no cooked data available. Return &lt;code&gt;b''&lt;/code&gt; if no cooked data available otherwise. Do not block unless in the midst of an IAC sequence.</source>
          <target state="translated">加薪&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;如果连接关闭，没有煮熟的数据可用。如果没有可用的煮熟数据，则返回 &lt;code&gt;b''&lt;/code&gt; 。除非处于IAC序列之中，否则不要阻塞。</target>
        </trans-unit>
        <trans-unit id="962bd72f06e8e4fc81d5eb5e468371d15b1b67d9" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; if connection closed and no data available. Return &lt;code&gt;b''&lt;/code&gt; if no cooked data available otherwise. Do not block unless in the midst of an IAC sequence.</source>
          <target state="translated">加薪&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;如果连接关闭，并且没有数据可用。如果没有可用的煮熟数据，则返回 &lt;code&gt;b''&lt;/code&gt; 。除非处于IAC序列之中，否则不要阻塞。</target>
        </trans-unit>
        <trans-unit id="97f0fa880269b6b6271c64f1f4a208758cb64d47" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; if connection closed and no data available. Return &lt;code&gt;b''&lt;/code&gt; if no cooked data available otherwise. This method never blocks.</source>
          <target state="translated">加薪&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;如果连接关闭，并且没有数据可用。如果没有可用的煮熟数据，则返回 &lt;code&gt;b''&lt;/code&gt; 。此方法永远不会阻塞。</target>
        </trans-unit>
        <trans-unit id="9b3410be4134473ff83a9cf274834d1bb99e74ab" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;exceptions#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt; (or a subclass); this is the default. Implemented in &lt;a href=&quot;#codecs.strict_errors&quot;&gt;&lt;code&gt;strict_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">提高&lt;a href=&quot;exceptions#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; &lt;/a&gt;（或子类）; 这是默认值。在&lt;a href=&quot;#codecs.strict_errors&quot;&gt; &lt;code&gt;strict_errors()&lt;/code&gt; 中实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f67c030aedb349de53ad484b068199c66d4cd06" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if the signal number is invalid or uncatchable. Raise &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; if there is a problem setting up the handler.</source>
          <target state="translated">提高&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 异常&lt;/a&gt;，如果信号编号无效或不可捕获。提高&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;如果有问题，建立处理程序。</target>
        </trans-unit>
        <trans-unit id="814415113c0c8decdf1d88d3ed37e7070bc13872" translate="yes" xml:space="preserve">
          <source>Raise &lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt;&lt;code&gt;unittest.SkipTest&lt;/code&gt;&lt;/a&gt; on TLS certification validation failures.</source>
          <target state="translated">在TLS证书验证失败时提高&lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt; &lt;code&gt;unittest.SkipTest&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="308c5a294475831ade67dc9414117e18e489fe7b" translate="yes" xml:space="preserve">
          <source>Raise a &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; exception. Override this in subclasses to do something useful with this message. Whatever was passed in the constructor as &lt;em&gt;remoteaddr&lt;/em&gt; will be available as the &lt;code&gt;_remoteaddr&lt;/code&gt; attribute. &lt;em&gt;peer&lt;/em&gt; is the remote host&amp;rsquo;s address, &lt;em&gt;mailfrom&lt;/em&gt; is the envelope originator, &lt;em&gt;rcpttos&lt;/em&gt; are the envelope recipients and &lt;em&gt;data&lt;/em&gt; is a string containing the contents of the e-mail (which should be in &lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt; format).</source>
          <target state="translated">养&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;例外。在子类中重写此内容，以对此消息执行一些有用的操作。构造函数中作为&lt;em&gt;remoteaddr&lt;/em&gt;传递的所有内容都可以用作 &lt;code&gt;_remoteaddr&lt;/code&gt; 属性。&lt;em&gt;peer&lt;/em&gt;是远程主机的地址，&lt;em&gt;mailfrom&lt;/em&gt;是信封的始发者，&lt;em&gt;rcpttos&lt;/em&gt;是信封的收件人，&lt;em&gt;data&lt;/em&gt;是包含电子邮件内容的字符串（应采用&lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt;格式）。</target>
        </trans-unit>
        <trans-unit id="65e72f948dcfe673bb8541b444b8355706436e8a" translate="yes" xml:space="preserve">
          <source>Raise a &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">养&lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; &lt;/a&gt;例外。</target>
        </trans-unit>
        <trans-unit id="614b50a0330db1e9fafcc7da211960ef6fb721cb" translate="yes" xml:space="preserve">
          <source>Raise an &lt;a href=&quot;#pickle.UnpicklingError&quot;&gt;&lt;code&gt;UnpicklingError&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">默认情况下引发&lt;a href=&quot;#pickle.UnpicklingError&quot;&gt; &lt;code&gt;UnpicklingError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b88624f1396637aa9a76429273275f50508df400" translate="yes" xml:space="preserve">
          <source>Raise an &lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError&quot;&gt;&lt;code&gt;IncompleteReadError&lt;/code&gt;&lt;/a&gt; if EOF is reached before &lt;em&gt;n&lt;/em&gt; can be read. Use the &lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError.partial&quot;&gt;&lt;code&gt;IncompleteReadError.partial&lt;/code&gt;&lt;/a&gt; attribute to get the partially read data.</source>
          <target state="translated">如果在读取&lt;em&gt;n&lt;/em&gt;之前到达EOF，则引发&lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError&quot;&gt; &lt;code&gt;IncompleteReadError&lt;/code&gt; &lt;/a&gt;。使用&lt;a href=&quot;asyncio-exceptions#asyncio.IncompleteReadError.partial&quot;&gt; &lt;code&gt;IncompleteReadError.partial&lt;/code&gt; &lt;/a&gt;属性来获取部分读取的数据。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="efc13ca6f8e3fbd85005048384acd91374c4f460" translate="yes" xml:space="preserve">
          <source>Raise an &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; if the process exit code is not equal to &lt;em&gt;exitcode&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a58c93294747790e1b22b847370e743fc01c245" translate="yes" xml:space="preserve">
          <source>Raise an auditing event &lt;code&gt;sys.addaudithook&lt;/code&gt; with no arguments. If any existing hooks raise an exception derived from &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;, the new hook will not be added and the exception suppressed. As a result, callers cannot assume that their hook has been added unless they control all existing hooks.</source>
          <target state="translated">&lt;code&gt;sys.addaudithook&lt;/code&gt; 带任何参数的审核事件sys.addaudithook。如果任何现有的挂钩引发了从&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;派生的异常，则不会添加新的挂钩并且抑制了该异常。如此一来，除非调用者控制所有现有的挂钩，否则无法假定他们的挂钩已添加。</target>
        </trans-unit>
        <trans-unit id="ca3d89a5fb88f6f9a0bd62453f5695f34f7fa45d" translate="yes" xml:space="preserve">
          <source>Raise an auditing event &lt;code&gt;sys.excepthook&lt;/code&gt; with arguments &lt;code&gt;hook&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;traceback&lt;/code&gt; when an uncaught exception occurs. If no hook has been set, &lt;code&gt;hook&lt;/code&gt; may be &lt;code&gt;None&lt;/code&gt;. If any hook raises an exception derived from &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; the call to the hook will be suppressed. Otherwise, the audit hook exception will be reported as unraisable and &lt;code&gt;sys.excepthook&lt;/code&gt; will be called.</source>
          <target state="translated">当发生未捕获的异常时，使用参数 &lt;code&gt;hook&lt;/code&gt; ， &lt;code&gt;type&lt;/code&gt; ， &lt;code&gt;value&lt;/code&gt; ， &lt;code&gt;traceback&lt;/code&gt; 引发审核事件 &lt;code&gt;sys.excepthook&lt;/code&gt; 。如果未设置任何钩子，则 &lt;code&gt;hook&lt;/code&gt; 可能为 &lt;code&gt;None&lt;/code&gt; 。如果任何挂钩引发了从&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;派生的异常，则将禁止对该挂钩的调用。否则，审计钩子异常将报告为无法举报，并且将调用 &lt;code&gt;sys.excepthook&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45011f2084f8278270a25782bcd2640523f13528" translate="yes" xml:space="preserve">
          <source>Raise an auditing event &lt;code&gt;sys.unraisablehook&lt;/code&gt; with arguments &lt;code&gt;hook&lt;/code&gt;, &lt;code&gt;unraisable&lt;/code&gt; when an exception that cannot be handled occurs. The &lt;code&gt;unraisable&lt;/code&gt; object is the same as what will be passed to the hook. If no hook has been set, &lt;code&gt;hook&lt;/code&gt; may be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;hook&lt;/code&gt; 引发审核事件 &lt;code&gt;sys.unraisablehook&lt;/code&gt; ，当发生无法处理的异常时， &lt;code&gt;unraisable&lt;/code&gt; 事件不可用。该 &lt;code&gt;unraisable&lt;/code&gt; 对象是一样的东西将被传递给了钩。如果未设置任何钩子，则 &lt;code&gt;hook&lt;/code&gt; 可能为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="affbfb75a3c2a51aa4c31c84fc00c1d40fb4949e" translate="yes" xml:space="preserve">
          <source>Raise an auditing event and trigger any active auditing hooks. &lt;em&gt;event&lt;/em&gt; is a string identifying the event, and &lt;em&gt;args&lt;/em&gt; may contain optional arguments with more information about the event. The number and types of arguments for a given event are considered a public and stable API and should not be modified between releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209de910e7786b23db5dc873a89af3a05981debf" translate="yes" xml:space="preserve">
          <source>Raise an auditing event with any active hooks. The event name is a string identifying the event and its associated schema, which is the number and types of arguments. The schema for a given event is considered public and stable API and should not be modified between releases.</source>
          <target state="translated">用任何活动的钩子引发一个审计事件。事件名称是标识事件及其相关模式的字符串,也就是参数的数量和类型。给定事件的模式被认为是公开的、稳定的API,不应该在不同版本之间修改。</target>
        </trans-unit>
        <trans-unit id="13cf5b4eef107d04fdb694c15a3c5afda9b3e4e4" translate="yes" xml:space="preserve">
          <source>Raise an error if key is not a valid &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; attribute, otherwise behave the same as &lt;a href=&quot;stdtypes#dict.setdefault&quot;&gt;&lt;code&gt;dict.setdefault()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果key不是有效的&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt;属性，则会引发错误，否则行为与&lt;a href=&quot;stdtypes#dict.setdefault&quot;&gt; &lt;code&gt;dict.setdefault()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="513ada27286511dfac9e3b76b355e74118db90a0" translate="yes" xml:space="preserve">
          <source>Raise an error.</source>
          <target state="translated">提出一个错误。</target>
        </trans-unit>
        <trans-unit id="b98d56804717a8344b3faca8217587e3500c68a0" translate="yes" xml:space="preserve">
          <source>Raise an exception for all conversions, even empty strings. The error handler is ignored.</source>
          <target state="translated">对所有转换,甚至是空字符串,都会引发异常。错误处理程序将被忽略。</target>
        </trans-unit>
        <trans-unit id="bf3b3c75170387df65e41bc9318129e65dbdf4ee" translate="yes" xml:space="preserve">
          <source>Raise the &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; exception. When not caught, this will cause the thread to exit silently.</source>
          <target state="translated">提高&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt;例外。如果未被捕获，这将导致线程静默退出。</target>
        </trans-unit>
        <trans-unit id="3ccbc658af15a6aeb17ccf284357dee98b1d51f5" translate="yes" xml:space="preserve">
          <source>Raised by &lt;a href=&quot;#tabnanny.process_tokens&quot;&gt;&lt;code&gt;process_tokens()&lt;/code&gt;&lt;/a&gt; if detecting an ambiguous indent. Captured and handled in &lt;a href=&quot;#tabnanny.check&quot;&gt;&lt;code&gt;check()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果检测到模糊缩进，则由&lt;a href=&quot;#tabnanny.process_tokens&quot;&gt; &lt;code&gt;process_tokens()&lt;/code&gt; &lt;/a&gt;引发。在&lt;a href=&quot;#tabnanny.check&quot;&gt; &lt;code&gt;check()&lt;/code&gt; 中&lt;/a&gt;捕获并处理。</target>
        </trans-unit>
        <trans-unit id="91700c02a657d1a22a6d0888df755d5dfb61f79b" translate="yes" xml:space="preserve">
          <source>Raised by any of the functions when an error is detected.</source>
          <target state="translated">当检测到错误时,由任何一个函数引发。</target>
        </trans-unit>
        <trans-unit id="245b5484a84dffa039ee789ab007738e78ad447d" translate="yes" xml:space="preserve">
          <source>Raised by built-in function &lt;a href=&quot;functions#next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method to signal that there are no further items produced by the iterator.</source>
          <target state="translated">由内置函数&lt;a href=&quot;functions#next&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;的&lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;方法引发，以表明该迭代器不再产生其他项。</target>
        </trans-unit>
        <trans-unit id="070be47adbdbee3b24ae6e3d0f21d7840e70a35e" translate="yes" xml:space="preserve">
          <source>Raised by built-in function &lt;a href=&quot;functions#next&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method to signal that there are no further items produced by the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2983d41c68d982efc0d0b57a90c10a02c160d04c" translate="yes" xml:space="preserve">
          <source>Raised by methods with a timeout when the timeout expires.</source>
          <target state="translated">由超时的方法在超时结束后引发。</target>
        </trans-unit>
        <trans-unit id="dc96cf122ef42afab52327246420df5bb1d3c53c" translate="yes" xml:space="preserve">
          <source>Raised by the &lt;a href=&quot;asyncio-stream#asyncio-streams&quot;&gt;asyncio stream APIs&lt;/a&gt;.</source>
          <target state="translated">由&lt;a href=&quot;asyncio-stream#asyncio-streams&quot;&gt;asyncio流API提出&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7b51969a7cc445dc68596da644b1a18f7d7fcbb1" translate="yes" xml:space="preserve">
          <source>Raised for module specific errors.</source>
          <target state="translated">因特定模块错误而引发。</target>
        </trans-unit>
        <trans-unit id="1baf724ee5fe516d3b35aeb53c1e867b3c240c00" translate="yes" xml:space="preserve">
          <source>Raised if a parameter or an operation is not supported on the underlying object.</source>
          <target state="translated">当底层对象不支持参数或操作时发生该事件。</target>
        </trans-unit>
        <trans-unit id="abf08139e31556af9d9e88d3cf3c121cebad53f2" translate="yes" xml:space="preserve">
          <source>Raised on &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt;-specific errors, such as I/O errors. &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised for general mapping errors like specifying an incorrect key.</source>
          <target state="translated">在特定于&lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; 的&lt;/a&gt;错误（例如I / O错误）上引发。对于一般的映射错误（例如指定不正确的键），将引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da2f1875aa7b05656f96bc8ec5f6498856443e73" translate="yes" xml:space="preserve">
          <source>Raised on &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt;-specific errors, such as I/O errors. &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised for general mapping errors like specifying an incorrect key.</source>
          <target state="translated">在特定于&lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; 的&lt;/a&gt;错误（例如I / O错误）上引发。对于一般的映射错误（例如指定不正确的键），将引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bebf1eb5d03fa1b1f275fdb3636f5eae78a1c67d" translate="yes" xml:space="preserve">
          <source>Raised on &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt;-specific errors, such as I/O errors. &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised for general mapping errors like specifying an incorrect key.</source>
          <target state="translated">在特定于&lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; 的&lt;/a&gt;错误（例如I / O错误）上引发。对于一般的映射错误（例如指定不正确的键），将引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b383d0b7cb3f178108fcc45ef0363602bc197b0f" translate="yes" xml:space="preserve">
          <source>Raised on attempts to modify an object where modifications are not allowed (such as for read-only nodes).</source>
          <target state="translated">当试图修改一个不允许修改的对象时发生该事件(例如只读节点)。</target>
        </trans-unit>
        <trans-unit id="3ff9f6d3bfabe1e49c2d2cd9998e69b497930e6d" translate="yes" xml:space="preserve">
          <source>Raised on thread-specific errors.</source>
          <target state="translated">在特定线程错误时引发。</target>
        </trans-unit>
        <trans-unit id="537bf0e92bcd7af8483212b23b70188a1ca87261" translate="yes" xml:space="preserve">
          <source>Raised on timeout by functions like &lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt;&lt;code&gt;wait_for()&lt;/code&gt;&lt;/a&gt;. Keep in mind that &lt;code&gt;asyncio.TimeoutError&lt;/code&gt; is &lt;strong&gt;unrelated&lt;/strong&gt; to the built-in &lt;a href=&quot;exceptions#TimeoutError&quot;&gt;&lt;code&gt;TimeoutError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">通过诸如&lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt; &lt;code&gt;wait_for()&lt;/code&gt; 之&lt;/a&gt;类的函数在超时时引发。请记住， &lt;code&gt;asyncio.TimeoutError&lt;/code&gt; 是&lt;strong&gt;无关&lt;/strong&gt;的内置&lt;a href=&quot;exceptions#TimeoutError&quot;&gt; &lt;code&gt;TimeoutError&lt;/code&gt; &lt;/a&gt;例外。</target>
        </trans-unit>
        <trans-unit id="7f3c87e4ded0cbb2cff11ecad1e4e1ec32b13cf1" translate="yes" xml:space="preserve">
          <source>Raised to signal an error from the underlying &lt;a href=&quot;#signal.setitimer&quot;&gt;&lt;code&gt;setitimer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#signal.getitimer&quot;&gt;&lt;code&gt;getitimer()&lt;/code&gt;&lt;/a&gt; implementation. Expect this error if an invalid interval timer or a negative time is passed to &lt;a href=&quot;#signal.setitimer&quot;&gt;&lt;code&gt;setitimer()&lt;/code&gt;&lt;/a&gt;. This error is a subtype of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引发来指示来自底层&lt;a href=&quot;#signal.setitimer&quot;&gt; &lt;code&gt;setitimer()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#signal.getitimer&quot;&gt; &lt;code&gt;getitimer()&lt;/code&gt; &lt;/a&gt;实现的错误。如果将无效的间隔计时器或负时间传递给&lt;a href=&quot;#signal.setitimer&quot;&gt; &lt;code&gt;setitimer()&lt;/code&gt; ,&lt;/a&gt;则会出现此错误。此错误是&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;的子类型。</target>
        </trans-unit>
        <trans-unit id="7fe1e20fa35932b3cf3d6a9a5e14ed636dc84926" translate="yes" xml:space="preserve">
          <source>Raised to signal an error from the underlying SSL implementation (currently provided by the OpenSSL library). This signifies some problem in the higher-level encryption and authentication layer that&amp;rsquo;s superimposed on the underlying network connection. This error is a subtype of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;. The error code and message of &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; instances are provided by the OpenSSL library.</source>
          <target state="translated">引发信号以指示来自基础SSL实现的错误（当前由OpenSSL库提供）。这表示在底层网络连接上叠加的更高级别的加密和身份验证层中存在一些问题。此错误是&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;的子类型。&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;实例的错误代码和消息由OpenSSL库提供。</target>
        </trans-unit>
        <trans-unit id="6a7e966363f7c43fd69d2d7a8980d282b0fbe461" translate="yes" xml:space="preserve">
          <source>Raised under some error conditions when parsing the &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; headers of a message, this class is derived from &lt;a href=&quot;#email.errors.MessageParseError&quot;&gt;&lt;code&gt;MessageParseError&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;email.message#email.message.EmailMessage.set_boundary&quot;&gt;&lt;code&gt;set_boundary()&lt;/code&gt;&lt;/a&gt; method will raise this error if the content type is unknown when the method is called. &lt;a href=&quot;email.header#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; may raise this error for certain base64 decoding errors, and when an attempt is made to create a header that appears to contain an embedded header (that is, there is what is supposed to be a continuation line that has no leading whitespace and looks like a header).</source>
          <target state="translated">在解析消息的&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;标头时在某些错误条件下&lt;strong&gt;引发&lt;/strong&gt;，此类从&lt;a href=&quot;#email.errors.MessageParseError&quot;&gt; &lt;code&gt;MessageParseError&lt;/code&gt; &lt;/a&gt;派生。该&lt;a href=&quot;email.message#email.message.EmailMessage.set_boundary&quot;&gt; &lt;code&gt;set_boundary()&lt;/code&gt; &lt;/a&gt;如果内容类型是未知的，当方法被调用的方法将引发此错误。&lt;a href=&quot;email.header#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;可能会因某些base64解码错误而引发此错误，并且在尝试创建看起来包含嵌入式标头的标头时（也就是说，应该有一个没有前导空格且看起来像标头）。</target>
        </trans-unit>
        <trans-unit id="1db95b972bdf66f0789930e2414ef74b4a9b15ac" translate="yes" xml:space="preserve">
          <source>Raised when &lt;a href=&quot;#envvar-PYTHONTZPATH&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONTZPATH&lt;/code&gt;&lt;/a&gt; contains an invalid component that will be filtered out, such as a relative path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617e5051c07bf55a90ef9fecf77ff467dabb6cb3" translate="yes" xml:space="preserve">
          <source>Raised when a &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer&lt;/a&gt; related operation cannot be performed.</source>
          <target state="translated">当无法执行与&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;缓冲区&lt;/a&gt;相关的操作时引发。</target>
        </trans-unit>
        <trans-unit id="187e39f0dad7df3a4efed4d1751d3054ddb97a0a" translate="yes" xml:space="preserve">
          <source>Raised when a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; is closed; see &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.close&quot;&gt;&lt;code&gt;generator.close()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.close&quot;&gt;&lt;code&gt;coroutine.close()&lt;/code&gt;&lt;/a&gt;. It directly inherits from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; since it is technically not an error.</source>
          <target state="translated">在关闭&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;发电机&lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;协程&lt;/a&gt;时引发；参见&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#generator.close&quot;&gt; &lt;code&gt;generator.close()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#coroutine.close&quot;&gt; &lt;code&gt;coroutine.close()&lt;/code&gt; &lt;/a&gt;。它直接继承自&lt;a href=&quot;#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; ,&lt;/a&gt;因为从技术上讲它不是错误。</target>
        </trans-unit>
        <trans-unit id="b317c70139f2f50a46d6b375c9f0293ba7350a09" translate="yes" xml:space="preserve">
          <source>Raised when a &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer&lt;/a&gt; related operation cannot be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0bae11fc041a7acb55254efe584deb7672cb29" translate="yes" xml:space="preserve">
          <source>Raised when a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; is closed; see &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#generator.close&quot;&gt;&lt;code&gt;generator.close()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#coroutine.close&quot;&gt;&lt;code&gt;coroutine.close()&lt;/code&gt;&lt;/a&gt;. It directly inherits from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; since it is technically not an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41098d3349464b37af05302ad74bfe09fe931237" translate="yes" xml:space="preserve">
          <source>Raised when a Task is cancelled. See also &lt;a href=&quot;asyncio-task#asyncio.Task.cancel&quot;&gt;&lt;code&gt;Task.cancel()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">取消任务时引发。另请参见&lt;a href=&quot;asyncio-task#asyncio.Task.cancel&quot;&gt; &lt;code&gt;Task.cancel()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99485010453317f4839a224b98155a228a8d2d31" translate="yes" xml:space="preserve">
          <source>Raised when a Unicode-related encoding or decoding error occurs. It is a subclass of &lt;a href=&quot;#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在发生与Unicode相关的编码或解码错误时引发。它是&lt;a href=&quot;#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="2018eef101b2f4d0cdf86e08cde977dd0c66f60f" translate="yes" xml:space="preserve">
          <source>Raised when a Unicode-related error occurs during decoding. It is a subclass of &lt;a href=&quot;#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在解码期间发生与Unicode相关的错误时引发。它是&lt;a href=&quot;#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="4c91c642aba5bbb3e9611b2f284aaec30beda70f" translate="yes" xml:space="preserve">
          <source>Raised when a Unicode-related error occurs during encoding. It is a subclass of &lt;a href=&quot;#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在编码过程中发生与Unicode相关的错误时引发。它是&lt;a href=&quot;#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="8cb5f76edfdda9f55f655978fb8c9e58f15abc70" translate="yes" xml:space="preserve">
          <source>Raised when a Unicode-related error occurs during translating. It is a subclass of &lt;a href=&quot;#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在翻译过程中发生Unicode相关错误时引发。它是&lt;a href=&quot;#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="e30b0c7a0e9e8c499e6135e347a0262de4697cc4" translate="yes" xml:space="preserve">
          <source>Raised when a directory operation (such as &lt;a href=&quot;os#os.listdir&quot;&gt;&lt;code&gt;os.listdir()&lt;/code&gt;&lt;/a&gt;) is requested on something which is not a directory. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ENOTDIR&lt;/code&gt;.</source>
          <target state="translated">在非目录对象上请求目录操作（例如&lt;a href=&quot;os#os.listdir&quot;&gt; &lt;code&gt;os.listdir()&lt;/code&gt; &lt;/a&gt;）时引发。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ENOTDIR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f836922934916388b6630da53747c489b0b017d5" translate="yes" xml:space="preserve">
          <source>Raised when a file operation (such as &lt;a href=&quot;os#os.remove&quot;&gt;&lt;code&gt;os.remove()&lt;/code&gt;&lt;/a&gt;) is requested on a directory. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;EISDIR&lt;/code&gt;.</source>
          <target state="translated">在目录上请求文件操作（例如&lt;a href=&quot;os#os.remove&quot;&gt; &lt;code&gt;os.remove()&lt;/code&gt; &lt;/a&gt;）时引发。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;EISDIR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fa0e53dc1968e11d9bb54b28011070563c164fd" translate="yes" xml:space="preserve">
          <source>Raised when a file or directory is requested but doesn&amp;rsquo;t exist. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ENOENT&lt;/code&gt;.</source>
          <target state="translated">在请求文件或目录但不存在时引发。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ENOENT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7129f2d93cf00de4b8ab65fcffd612decb408de9" translate="yes" xml:space="preserve">
          <source>Raised when a future is cancelled.</source>
          <target state="translated">当未来被取消时提出。</target>
        </trans-unit>
        <trans-unit id="c5ff497a3606243528ae596e76f679e9b5d0e83e" translate="yes" xml:space="preserve">
          <source>Raised when a future operation exceeds the given timeout.</source>
          <target state="translated">当未来的操作超过给定的超时时间时发生该事件。</target>
        </trans-unit>
        <trans-unit id="b69c8d3075f854ffb4db6ca4db57fc62b4846431" translate="yes" xml:space="preserve">
          <source>Raised when a given process doesn&amp;rsquo;t exist. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ESRCH&lt;/code&gt;.</source>
          <target state="translated">在给定进程不存在时引发。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ESRCH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c7780b6f82c22b1007a3ed52e42762b1e1b4108" translate="yes" xml:space="preserve">
          <source>Raised when a local or global name is not found. This applies only to unqualified names. The associated value is an error message that includes the name that could not be found.</source>
          <target state="translated">当未找到本地或全局名称时发生该事件。这只适用于未限定的名称。相关的值是一个错误信息,包括找不到的名称。</target>
        </trans-unit>
        <trans-unit id="4535b411526027ac118fc7423603430f6f77204d" translate="yes" xml:space="preserve">
          <source>Raised when a mailbox is expected but is not found, such as when instantiating a &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; subclass with a path that does not exist (and with the &lt;em&gt;create&lt;/em&gt; parameter set to &lt;code&gt;False&lt;/code&gt;), or when opening a folder that does not exist.</source>
          <target state="translated">在需要邮箱但未找到&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;时引发，例如，在使用不存在的路径实例化Mailbox子类时（并且将&lt;em&gt;create&lt;/em&gt;参数设置为 &lt;code&gt;False&lt;/code&gt; ），或者在打开不存在的文件夹时。</target>
        </trans-unit>
        <trans-unit id="b4b3706acb5e19e9dd3b20ebaa9fb12da7f73b46" translate="yes" xml:space="preserve">
          <source>Raised when a mailbox is not empty but is expected to be, such as when deleting a folder that contains messages.</source>
          <target state="translated">当邮箱不是空的,但预计是空的,例如删除包含邮件的文件夹时发生该事件。</target>
        </trans-unit>
        <trans-unit id="29fa887635b98cd97b286abcca41a5285d1532c4" translate="yes" xml:space="preserve">
          <source>Raised when a mapping (dictionary) key is not found in the set of existing keys.</source>
          <target state="translated">当在现有的键集中找不到映射(字典)键时发生该事件。</target>
        </trans-unit>
        <trans-unit id="b4813ea6633b6ee18af13f0a8e20689288ddb6d8" translate="yes" xml:space="preserve">
          <source>Raised when a node is inserted in a different document than it currently belongs to, and the implementation does not support migrating the node from one document to the other.</source>
          <target state="translated">当一个节点被插入到不同的文档中,而不是它当前所属的文档中,并且实现不支持将节点从一个文档迁移到另一个文档时,发生该事件。</target>
        </trans-unit>
        <trans-unit id="ccf1abcce481459a6586330a57730d8a02595e41" translate="yes" xml:space="preserve">
          <source>Raised when a payload is added to a &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; object using &lt;code&gt;add_payload()&lt;/code&gt;, but the payload is already a scalar and the message&amp;rsquo;s &lt;em&gt;Content-Type&lt;/em&gt; main type is not either &lt;em&gt;multipart&lt;/em&gt; or missing. &lt;a href=&quot;#email.errors.MultipartConversionError&quot;&gt;&lt;code&gt;MultipartConversionError&lt;/code&gt;&lt;/a&gt; multiply inherits from &lt;a href=&quot;#email.errors.MessageError&quot;&gt;&lt;code&gt;MessageError&lt;/code&gt;&lt;/a&gt; and the built-in &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当使用 &lt;code&gt;add_payload()&lt;/code&gt; 将有效负载添加到&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;对象时引发，但是有效负载已经是标量，并且消息的&lt;em&gt;Content-Type&lt;/em&gt;主类型既不是&lt;em&gt;多部分&lt;/em&gt;也不是缺少。&lt;a href=&quot;#email.errors.MultipartConversionError&quot;&gt; &lt;code&gt;MultipartConversionError&lt;/code&gt; &lt;/a&gt;乘法从&lt;a href=&quot;#email.errors.MessageError&quot;&gt; &lt;code&gt;MessageError&lt;/code&gt; &lt;/a&gt;和内置&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="2ac15f68208a959e5d90aff2e430959074ae6d2b" translate="yes" xml:space="preserve">
          <source>Raised when a reference is made to a local variable in a function or method, but no value has been bound to that variable. This is a subclass of &lt;a href=&quot;#NameError&quot;&gt;&lt;code&gt;NameError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在对函数或方法中的局部变量进行引用但没有值绑定到该变量时引发。这是&lt;a href=&quot;#NameError&quot;&gt; &lt;code&gt;NameError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="d5c15cc830f5bee7143900d7592e9bea83bc7ca5" translate="yes" xml:space="preserve">
          <source>Raised when a sequence subscript is out of range. (Slice indices are silently truncated to fall in the allowed range; if an index is not an integer, &lt;a href=&quot;#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.)</source>
          <target state="translated">当序列下标超出范围时引发。（切片索引会被静默地截断以使其落在允许的范围内；如果索引不是整数，则会引发&lt;a href=&quot;#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="836ac5fd240c91206491984f5396cb57cefd2188" translate="yes" xml:space="preserve">
          <source>Raised when a specified range of text does not fit into a string. This is not known to be used in the Python DOM implementations, but may be received from DOM implementations not written in Python.</source>
          <target state="translated">当指定的文本范围不能放入一个字符串时引发。这在Python DOM实现中还没有被使用,但可能会从非Python编写的DOM实现中被接收。</target>
        </trans-unit>
        <trans-unit id="bee8969add5862bfa046bf4a87b2119da43bd766" translate="yes" xml:space="preserve">
          <source>Raised when a system call is interrupted by an incoming signal. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;a href=&quot;errno#errno.EINTR&quot;&gt;&lt;code&gt;EINTR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当系统调用被传入信号中断时引发。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;a href=&quot;errno#errno.EINTR&quot;&gt; &lt;code&gt;EINTR&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="192e3a29045db8e91297a6481d51b54c3ff2d65a" translate="yes" xml:space="preserve">
          <source>Raised when a system function timed out at the system level. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ETIMEDOUT&lt;/code&gt;.</source>
          <target state="translated">当系统功能在系统级别超时时引发。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ETIMEDOUT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d567a14527f762054253cadf609186f38653719" translate="yes" xml:space="preserve">
          <source>Raised when an &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement fails.</source>
          <target state="translated">在&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt;语句失败时引发。</target>
        </trans-unit>
        <trans-unit id="b937f6a3587a8b5ab789627ae34cf709b4abafa8" translate="yes" xml:space="preserve">
          <source>Raised when an &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5945c1d5737e249b836423b124cc966a7203214a" translate="yes" xml:space="preserve">
          <source>Raised when an attempt is made to insert a node where the node type is not allowed.</source>
          <target state="translated">当试图插入一个节点类型不允许的节点时发生该事件。</target>
        </trans-unit>
        <trans-unit id="c146f51a1a22ce7be88f5e3fc18559eb0b36abea" translate="yes" xml:space="preserve">
          <source>Raised when an attempt is made to insert an &lt;code&gt;Attr&lt;/code&gt; node that is already present elsewhere in the document.</source>
          <target state="translated">在尝试插入文档中其他位置已经存在的 &lt;code&gt;Attr&lt;/code&gt; 节点时引发。</target>
        </trans-unit>
        <trans-unit id="3ecd22b9ee23ec28a85db41faa926f7bb23daecf" translate="yes" xml:space="preserve">
          <source>Raised when an attempt is made to modify the type of a node.</source>
          <target state="translated">当试图修改一个节点的类型时发生该事件。</target>
        </trans-unit>
        <trans-unit id="149a7fc4e849fe2dbcd86b6a6099f2c4b9505a07" translate="yes" xml:space="preserve">
          <source>Raised when an attempt is made to use an object that is not defined or is no longer usable.</source>
          <target state="translated">当试图使用一个未定义的对象或不再可用的对象时发生该事件。</target>
        </trans-unit>
        <trans-unit id="b8cfb95b5fbc853892e47f514184913b78acf955" translate="yes" xml:space="preserve">
          <source>Raised when an attribute reference (see &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#attribute-references&quot;&gt;Attribute references&lt;/a&gt;) or assignment fails. (When an object does not support attribute references or attribute assignments at all, &lt;a href=&quot;#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.)</source>
          <target state="translated">当属性引用（请参阅&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#attribute-references&quot;&gt;属性引用&lt;/a&gt;）或分配失败时引发。（当一个对象根本不支持属性引用或属性分配时，将&lt;a href=&quot;#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="7f24d181b36ebcaba063a8e6916bcaf64bda3f88" translate="yes" xml:space="preserve">
          <source>Raised when an attribute reference (see &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#attribute-references&quot;&gt;Attribute references&lt;/a&gt;) or assignment fails. (When an object does not support attribute references or attribute assignments at all, &lt;a href=&quot;#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f78ebf753bab31ace3810a94417434fa41a6672" translate="yes" xml:space="preserve">
          <source>Raised when an error is detected that doesn&amp;rsquo;t fall in any of the other categories. The associated value is a string indicating what precisely went wrong.</source>
          <target state="translated">在检测到不属于任何其他类别的错误时引发。关联的值是一个字符串，指示确切地出错了。</target>
        </trans-unit>
        <trans-unit id="a787646929310b8199ab55a8e3de5507387a81aa" translate="yes" xml:space="preserve">
          <source>Raised when an implicitly defined &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setattr__&quot;&gt;&lt;code&gt;__setattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delattr__&quot;&gt;&lt;code&gt;__delattr__()&lt;/code&gt;&lt;/a&gt; is called on a dataclass which was defined with &lt;code&gt;frozen=True&lt;/code&gt;.</source>
          <target state="translated">在对用&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setattr__&quot;&gt; &lt;code&gt;__setattr__()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;frozen=True&lt;/code&gt; 定义的数据类上调用隐式定义的__setattr __（）或&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delattr__&quot;&gt; &lt;code&gt;__delattr__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84257a71c0e7d4143ed352f9f864b98136bbd62b" translate="yes" xml:space="preserve">
          <source>Raised when an implicitly defined &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setattr__&quot;&gt;&lt;code&gt;__setattr__()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delattr__&quot;&gt;&lt;code&gt;__delattr__()&lt;/code&gt;&lt;/a&gt; is called on a dataclass which was defined with &lt;code&gt;frozen=True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fccf9cd15a154e1afbd5a825835935ea240c46" translate="yes" xml:space="preserve">
          <source>Raised when an index or size parameter to a method is negative or exceeds the allowed values.</source>
          <target state="translated">当一个方法的索引或大小参数为负值或超过允许值时发生该事件。</target>
        </trans-unit>
        <trans-unit id="2565d594815edb534ee6de4dacaf2a546fff4d90" translate="yes" xml:space="preserve">
          <source>Raised when an input byte could not properly be assigned to a character; for example, a NUL byte (value &lt;code&gt;0&lt;/code&gt;) in a UTF-8 input stream.</source>
          <target state="translated">在无法将输入字节正确分配给字符时引发；例如，UTF-8输入流中的NUL字节（值 &lt;code&gt;0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7d7dd1e0ead0426d93968affe5e1667c5472e2f1" translate="yes" xml:space="preserve">
          <source>Raised when an invalid or illegal string is specified.</source>
          <target state="translated">当指定一个无效或非法的字符串时发生该事件。</target>
        </trans-unit>
        <trans-unit id="c813eccfc69c0664893e9c82027cb01fa7db5291" translate="yes" xml:space="preserve">
          <source>Raised when an operation is performed on a future that is not allowed in the current state.</source>
          <target state="translated">当对当前状态不允许的未来进行操作时发生该事件。</target>
        </trans-unit>
        <trans-unit id="7c1feda89f7b1be1568a90504487213bf1d6e2f3" translate="yes" xml:space="preserve">
          <source>Raised when an operation on a child process failed. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;ECHILD&lt;/code&gt;.</source>
          <target state="translated">在子进程上的操作失败时引发。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;ECHILD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4cfa50647a51c263accb156260c868da54119176" translate="yes" xml:space="preserve">
          <source>Raised when an operation or function is applied to an object of inappropriate type. The associated value is a string giving details about the type mismatch.</source>
          <target state="translated">当一个操作或函数被应用于一个类型不合适的对象时发生该事件。相关的值是一个字符串,详细说明类型不匹配的情况。</target>
        </trans-unit>
        <trans-unit id="f1b0fa6358da619838e976caf300cdaecbc7434d" translate="yes" xml:space="preserve">
          <source>Raised when an operation or function receives an argument that has the right type but an inappropriate value, and the situation is not described by a more precise exception such as &lt;a href=&quot;#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当操作或函数接收到类型正确但值不合适的参数时引发，并且这种情况没有通过诸如&lt;a href=&quot;#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; 之&lt;/a&gt;类的更精确的异常描述。</target>
        </trans-unit>
        <trans-unit id="2f1d3a8eb30cec2d71cc6db649391b9a9039c152" translate="yes" xml:space="preserve">
          <source>Raised when an operation runs out of memory but the situation may still be rescued (by deleting some objects). The associated value is a string indicating what kind of (internal) operation ran out of memory. Note that because of the underlying memory management architecture (C&amp;rsquo;s &lt;code&gt;malloc()&lt;/code&gt; function), the interpreter may not always be able to completely recover from this situation; it nevertheless raises an exception so that a stack traceback can be printed, in case a run-away program was the cause.</source>
          <target state="translated">在操作内存不足时引发，但这种情况仍然可以挽救（通过删除某些对象）。关联值是一个字符串，指示哪种（内部）操作用完了内存。注意，由于底层的内存管理体系结构（C的 &lt;code&gt;malloc()&lt;/code&gt; 函数），解释器可能无法始终完全从这种情况中恢复；尽管如此，它还是引发了一个例外，以便在导致程序失控的情况下可以打印堆栈回溯。</target>
        </trans-unit>
        <trans-unit id="15b6a587f2dea584ce3780a71b6e9091108d69ce" translate="yes" xml:space="preserve">
          <source>Raised when an operation would block on an object (e.g. socket) set for non-blocking operation. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;EAGAIN&lt;/code&gt;, &lt;code&gt;EALREADY&lt;/code&gt;, &lt;code&gt;EWOULDBLOCK&lt;/code&gt; and &lt;code&gt;EINPROGRESS&lt;/code&gt;.</source>
          <target state="translated">当某个操作将在设置为非阻塞操作的对象（例如套接字）上阻塞时引发。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;EAGAIN&lt;/code&gt; ， &lt;code&gt;EALREADY&lt;/code&gt; ， &lt;code&gt;EWOULDBLOCK&lt;/code&gt; 和 &lt;code&gt;EINPROGRESS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1632029902d58132af51401ecead66e3b74d41b0" translate="yes" xml:space="preserve">
          <source>Raised when construction of a &lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt;&lt;code&gt;ZoneInfo&lt;/code&gt;&lt;/a&gt; object fails because the specified key could not be found on the system. This is a subclass of &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071c2f2348407f377cf093c42e97717a7295ee9b" translate="yes" xml:space="preserve">
          <source>Raised when either a docstring or expression that may be split over several lines is not completed anywhere in the file, for example:</source>
          <target state="translated">当一个可能被分割成几行的 docstring 或表达式没有在文件中任何地方完成时发生该事件,例如。</target>
        </trans-unit>
        <trans-unit id="8173f406e1e46af1b511049a62a3e5d77c75621a" translate="yes" xml:space="preserve">
          <source>Raised when indentation contains an inconsistent use of tabs and spaces. This is a subclass of &lt;a href=&quot;#IndentationError&quot;&gt;&lt;code&gt;IndentationError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当缩进包含制表符和空格的不一致使用时引发。这是&lt;a href=&quot;#IndentationError&quot;&gt; &lt;code&gt;IndentationError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="f26eba02b7f68f1b93b15968c0c8bffa60e82f19" translate="yes" xml:space="preserve">
          <source>Raised when some mailbox-related condition beyond the control of the program causes it to be unable to proceed, such as when failing to acquire a lock that another program already holds a lock, or when a uniquely-generated file name already exists.</source>
          <target state="translated">当一些与邮箱相关的条件超出了程序的控制范围,导致程序无法继续运行时发生该事件,例如当无法获得另一个程序已经持有的锁,或者已经存在一个唯一生成的文件名时。</target>
        </trans-unit>
        <trans-unit id="9a1e3e96778b4a76c6bb63f399424514bf51419b" translate="yes" xml:space="preserve">
          <source>Raised when the &lt;a href=&quot;functions#input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt; function hits an end-of-file condition (EOF) without reading any data. (N.B.: the &lt;code&gt;io.IOBase.read()&lt;/code&gt; and &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;io.IOBase.readline()&lt;/code&gt;&lt;/a&gt; methods return an empty string when they hit EOF.)</source>
          <target state="translated">当&lt;a href=&quot;functions#input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt;函数达到文件结束条件（EOF）而未读取任何数据时引发。（注意： &lt;code&gt;io.IOBase.read()&lt;/code&gt; 和&lt;a href=&quot;io#io.IOBase.readline&quot;&gt; &lt;code&gt;io.IOBase.readline()&lt;/code&gt; &lt;/a&gt;方法在到达 EOF时返回空字符串。）</target>
        </trans-unit>
        <trans-unit id="c8187000ffcc004cf488ed36d80812d62f29f188" translate="yes" xml:space="preserve">
          <source>Raised when the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement has troubles trying to load a module. Also raised when the &amp;ldquo;from list&amp;rdquo; in &lt;code&gt;from ... import&lt;/code&gt; has a name that cannot be found.</source>
          <target state="translated">当&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句在尝试加载模块时遇到麻烦时引发。当 &lt;code&gt;from ... import&lt;/code&gt; 的&amp;ldquo; from list&amp;rdquo; 具有无法找到的名称时，也会引发此错误。</target>
        </trans-unit>
        <trans-unit id="798f7e7af20023ccf8a033036635c2f6f2015437" translate="yes" xml:space="preserve">
          <source>Raised when the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement has troubles trying to load a module. Also raised when the &amp;ldquo;from list&amp;rdquo; in &lt;code&gt;from ... import&lt;/code&gt; has a name that cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a0109d2a5c23e5e14daed241f3537e0efbfef8" translate="yes" xml:space="preserve">
          <source>Raised when the data in a file cannot be parsed, such as when an &lt;a href=&quot;#mailbox.MH&quot;&gt;&lt;code&gt;MH&lt;/code&gt;&lt;/a&gt; instance attempts to read a corrupted &lt;code&gt;.mh_sequences&lt;/code&gt; file.</source>
          <target state="translated">在无法解析文件中的数据时（例如，&lt;a href=&quot;#mailbox.MH&quot;&gt; &lt;code&gt;MH&lt;/code&gt; &lt;/a&gt;实例尝试读取损坏的 &lt;code&gt;.mh_sequences&lt;/code&gt; 文件时引发）。</target>
        </trans-unit>
        <trans-unit id="146054eb7828ebcac691fb3dbda2da3741b10a04" translate="yes" xml:space="preserve">
          <source>Raised when the implementation does not support the requested type of object or operation.</source>
          <target state="translated">当实现不支持所请求的对象或操作类型时发生该事件。</target>
        </trans-unit>
        <trans-unit id="b4f3e6d615fa197033468c28f628c05354cbf396" translate="yes" xml:space="preserve">
          <source>Raised when the interpreter finds an internal error, but the situation does not look so serious to cause it to abandon all hope. The associated value is a string indicating what went wrong (in low-level terms).</source>
          <target state="translated">当解释器发现内部错误,但情况看起来并不严重,以至于放弃所有的希望时发生该事件。相关的值是一个字符串,表示出了什么问题(用低级术语)。</target>
        </trans-unit>
        <trans-unit id="a941d5c673c4b371a41d611c42daed10ef3bc500" translate="yes" xml:space="preserve">
          <source>Raised when the parser encounters a syntax error. This may occur in an &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement, in a call to the built-in functions &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;, or when reading the initial script or standard input (also interactively).</source>
          <target state="translated">在解析器遇到语法错误时引发。这可能发生在&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句中，对内置函数&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;的调用中，或者在读取初始脚本或标准输入时（也以交互方式）。</target>
        </trans-unit>
        <trans-unit id="6444f209283e513e4874397077844674a92b3047" translate="yes" xml:space="preserve">
          <source>Raised when the parser encounters a syntax error. This may occur in an &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement, in a call to the built-in functions &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;, or when reading the initial script or standard input (also interactively).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bd9e205db6583e46e333a0118865687e016863" translate="yes" xml:space="preserve">
          <source>Raised when the result of an arithmetic operation is too large to be represented. This cannot occur for integers (which would rather raise &lt;a href=&quot;#MemoryError&quot;&gt;&lt;code&gt;MemoryError&lt;/code&gt;&lt;/a&gt; than give up). However, for historical reasons, OverflowError is sometimes raised for integers that are outside a required range. Because of the lack of standardization of floating point exception handling in C, most floating point operations are not checked.</source>
          <target state="translated">在算术运算的结果太大而无法表示时引发。对于整数，这种情况不会发生（宁可引发&lt;a href=&quot;#MemoryError&quot;&gt; &lt;code&gt;MemoryError&lt;/code&gt; &lt;/a&gt;而不是放弃）。但是，由于历史原因，有时会为超出所需范围的整数引发OverflowError。由于缺乏C语言中浮点异常处理的标准化，因此不检查大多数浮点运算。</target>
        </trans-unit>
        <trans-unit id="9447026f9df744be9ee128a09126624b58463e43" translate="yes" xml:space="preserve">
          <source>Raised when the second argument of a division or modulo operation is zero. The associated value is a string indicating the type of the operands and the operation.</source>
          <target state="translated">当除法或模数运算的第二个参数为零时发生该事件。相关值是一个字符串,表示操作数的类型和操作。</target>
        </trans-unit>
        <trans-unit id="4775761a9c5cb275b116d24a71b80b5be8a9a2c5" translate="yes" xml:space="preserve">
          <source>Raised when the user hits the interrupt key (normally</source>
          <target state="translated">当用户敲击中断键(通常为 &quot;中断 &quot;键)时,发出该信号。</target>
        </trans-unit>
        <trans-unit id="4db30c88f41b18a01cc76f6eb12efcd692885a4c" translate="yes" xml:space="preserve">
          <source>Raised when there is an authentication error.</source>
          <target state="translated">当出现认证错误时发生该事件。</target>
        </trans-unit>
        <trans-unit id="7a17fa2784976b37bb998d75d962a816fac48634" translate="yes" xml:space="preserve">
          <source>Raised when trying to create a file or directory which already exists. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;EEXIST&lt;/code&gt;.</source>
          <target state="translated">在尝试创建已经存在的文件或目录时引发。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;EEXIST&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="025e7b830e478e39e0a379feaeb271aa79b69e76" translate="yes" xml:space="preserve">
          <source>Raised when trying to run an operation without the adequate access rights - for example filesystem permissions. Corresponds to &lt;code&gt;errno&lt;/code&gt;&lt;code&gt;EACCES&lt;/code&gt; and &lt;code&gt;EPERM&lt;/code&gt;.</source>
          <target state="translated">在尝试在没有足够访问权限（例如文件系统权限）的情况下运行操作时引发。对应于 &lt;code&gt;errno&lt;/code&gt; &lt;code&gt;EACCES&lt;/code&gt; 和 &lt;code&gt;EPERM&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="238a00f356dee73a56bd4ca0031f0eebb8fb06a3" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt;&lt;code&gt;OSSAudioError&lt;/code&gt;&lt;/a&gt; if an invalid control is specified, or &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if an unsupported control is specified.</source>
          <target state="translated">如果指定了无效的控件，则引发&lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt; &lt;code&gt;OSSAudioError&lt;/code&gt; ;&lt;/a&gt;如果指定了不受支持的控件，则引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac7f57a0ff24a51ebd2b019405d1f096075057e1" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt;&lt;code&gt;OSSAudioError&lt;/code&gt;&lt;/a&gt; if an invalid mixer control was specified, or if the specified volumes were out-of-range.</source>
          <target state="translated">如果指定了无效的混音器控件，或者指定的音量超出范围，则引发&lt;a href=&quot;#ossaudiodev.OSSAudioError&quot;&gt; &lt;code&gt;OSSAudioError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d1469e58af18bc65cb7589d2e63c275155510418" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;data&lt;/em&gt; has fewer than two values.</source>
          <target state="translated">如果&lt;em&gt;数据&lt;/em&gt;少于两个值，则引发&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="799ebcc5213436d53ec32c6d0a050b0cc45ca5e8" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;data&lt;/em&gt; is empty.</source>
          <target state="translated">如果&lt;em&gt;数据&lt;/em&gt;为空，则引发&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3b499d88e8c6595b524fb41721a6812376d234ff" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;#tarfile.HeaderError&quot;&gt;&lt;code&gt;HeaderError&lt;/code&gt;&lt;/a&gt; if the buffer is invalid.</source>
          <target state="translated">如果缓冲区无效，则引发&lt;a href=&quot;#tarfile.HeaderError&quot;&gt; &lt;code&gt;HeaderError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40b6d67cb90046b3b63b5dcad43fc14488bd45bd" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt;&lt;code&gt;asyncio.TimeoutError&lt;/code&gt;&lt;/a&gt; if the timeout occurs before all Futures are done.</source>
          <target state="translated">如果超时发生在所有Future完成之前，则引发&lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt; &lt;code&gt;asyncio.TimeoutError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02d004ae5bd069157f48f6b273f43669e0c5afbd" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if no matching cookie exists.</source>
          <target state="translated">如果不存在匹配的cookie，则引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="91ba61c2f7451f16f2ac78bd5e08da93d73b8658" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ProcessLookupError&quot;&gt;&lt;code&gt;ProcessLookupError&lt;/code&gt;&lt;/a&gt; when &lt;em&gt;pid&lt;/em&gt; can&amp;rsquo;t be found and &lt;a href=&quot;exceptions#PermissionError&quot;&gt;&lt;code&gt;PermissionError&lt;/code&gt;&lt;/a&gt; when the user doesn&amp;rsquo;t have &lt;code&gt;CAP_SYS_RESOURCE&lt;/code&gt; for the process.</source>
          <target state="translated">当找不到&lt;em&gt;pid&lt;/em&gt;时引发&lt;a href=&quot;exceptions#ProcessLookupError&quot;&gt; &lt;code&gt;ProcessLookupError&lt;/code&gt; ,&lt;/a&gt;当用户对该进程没有 &lt;code&gt;CAP_SYS_RESOURCE&lt;/code&gt; 时引发&lt;a href=&quot;exceptions#PermissionError&quot;&gt; &lt;code&gt;PermissionError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53937e5a7d70f054e980e2a37b896bf64eed1ea2" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;instance&lt;/code&gt; is not a dataclass instance.</source>
          <target state="translated">如果 &lt;code&gt;instance&lt;/code&gt; 不是数据类实例，则引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a91d3d7d9b2850e6dd1726232f8e33aef0e2e413" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if either of the arguments are not integers. Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if either of the arguments are negative.</source>
          <target state="translated">如果两个参数都不是整数，则引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。如果两个参数中的任何一个为负数，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="742c3253209370a98134cc25fd53354074e0c3e6" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if an invalid resource is specified, if the new soft limit exceeds the hard limit, or if a process tries to raise its hard limit. Specifying a limit of &lt;a href=&quot;#resource.RLIM_INFINITY&quot;&gt;&lt;code&gt;RLIM_INFINITY&lt;/code&gt;&lt;/a&gt; when the hard or system limit for that resource is not unlimited will result in a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. A process with the effective UID of super-user can request any valid limit value, including unlimited, but &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will still be raised if the requested limit exceeds the system imposed limit.</source>
          <target state="translated">如果指定了无效的资源，新的软限制超过了硬限制或进程尝试提高其硬限制，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。如果对该资源的硬限制或系统限制不是无限的，则指定&lt;a href=&quot;#resource.RLIM_INFINITY&quot;&gt; &lt;code&gt;RLIM_INFINITY&lt;/code&gt; &lt;/a&gt;的限制将导致&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。具有超级用户有效UID的进程可以请求任何有效的限制值，包括无限制，但是如果所请求的限制超出系统施加的限制，则仍然会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f93a1ac7f309867b8d7baa46bed663660d26046" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if any node in &lt;em&gt;nodes&lt;/em&gt; has already been marked as processed by a previous call to this method or if a node was not added to the graph by using &lt;a href=&quot;#graphlib.TopologicalSorter.add&quot;&gt;&lt;code&gt;TopologicalSorter.add()&lt;/code&gt;&lt;/a&gt;, if called without calling &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt;&lt;code&gt;prepare()&lt;/code&gt;&lt;/a&gt; or if node has not yet been returned by &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;get_ready()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb6ee96d560023c993889a0b355cc4923ffc66d" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if called after &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt;&lt;code&gt;prepare()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e146c798bfc44e2ad573a62ac77fdb983eb7f5" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if called more times than there were items placed in the queue.</source>
          <target state="translated">如果调用的次数超过队列中放置的项目的次数，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a92c9456ded4e70f1194e0e64e6ad1e70c06f3fd" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if called without calling &lt;a href=&quot;#graphlib.TopologicalSorter.prepare&quot;&gt;&lt;code&gt;prepare()&lt;/code&gt;&lt;/a&gt; previously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79802bd247b2fab5e87d9034c68acee395355c10" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if no signature can be provided, and &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if that type of object is not supported.</source>
          <target state="translated">如果无法提供签名，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; ;&lt;/a&gt;如果不支持该类型的对象，则&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="594dd1109a995b371fac6a3d6bb6647ee1e74ff5" translate="yes" xml:space="preserve">
          <source>Raises &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt; on protocol errors.</source>
          <target state="translated">在协议错误时引发&lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="758bae30f6db4e2386562c3f494933a38e3c16d2" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; if the input dataset is empty, if it contains a zero, or if it contains a negative value. The &lt;em&gt;data&lt;/em&gt; may be a sequence or iterable.</source>
          <target state="translated">如果输入数据集为空，包含零或包含负值，则引发&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; &lt;/a&gt;。该&lt;em&gt;数据&lt;/em&gt;可以是顺序或迭代。</target>
        </trans-unit>
        <trans-unit id="bb7175e654d8cec4a1e4d0bf4f680af987bf4d62" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt;&lt;code&gt;InvalidStateError&lt;/code&gt;&lt;/a&gt; error if the Future is already &lt;em&gt;done&lt;/em&gt;.</source>
          <target state="translated">如果Future已经&lt;em&gt;完成，&lt;/em&gt;则引发&lt;a href=&quot;asyncio-exceptions#asyncio.InvalidStateError&quot;&gt; &lt;code&gt;InvalidStateError&lt;/code&gt; &lt;/a&gt;错误。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c80ba2542e0af03bbef50e69aeeb4c3a81b77ad" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; in case the encoding cannot be found or the codec doesn&amp;rsquo;t support an incremental decoder.</source>
          <target state="translated">如果&lt;a href=&quot;exceptions#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt;编码或编解码器不支持增量解码器，则引发LookupError。</target>
        </trans-unit>
        <trans-unit id="b63f05b5798012ffc63adfd031f372ae0deb3890" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; in case the encoding cannot be found or the codec doesn&amp;rsquo;t support an incremental encoder.</source>
          <target state="translated">如果&lt;a href=&quot;exceptions#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt;编码或编解码器不支持增量编码器，则引发LookupError。</target>
        </trans-unit>
        <trans-unit id="13e52e3ac65af8901398f21b27126fbcd7a0e912" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; in case the encoding cannot be found.</source>
          <target state="translated">如果&lt;a href=&quot;exceptions#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt;编码，则引发LookupError。</target>
        </trans-unit>
        <trans-unit id="0e6dce7afb06128f2150033972ef474abcfc3e54" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; in case the handler cannot be found.</source>
          <target state="translated">如果&lt;a href=&quot;exceptions#LookupError&quot;&gt; &lt;code&gt;LookupError&lt;/code&gt; &lt;/a&gt;处理程序，则引发LookupError。</target>
        </trans-unit>
        <trans-unit id="3e61c009e9f13b2b3a453e9b03b63e924188e5c5" translate="yes" xml:space="preserve">
          <source>Raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if called more times than there were items placed in the queue.</source>
          <target state="translated">如果调用的次数超过队列中放置的项目的次数，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c25c140a614f4600cd58acb9788428e868cd6c64" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;cpython.run_interactivehook&lt;/code&gt; with the hook object as the argument when the hook is called on startup.</source>
          <target state="translated">在启动时调用钩子时，以钩子对象作为参数引发&lt;a href=&quot;#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;cpython.run_interactivehook&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e3659576e7d56fd42b0192cfe01b816827d0d7a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys._current_frames&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;sys._current_frames&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39e0509c4828435eb2063c4749e88e820e4c4e19" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys._getframe&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;sys._getframe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2715c6ef6d6047ee2a10c30494274b1581ce87a7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys.set_asyncgen_hooks_finalizer&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;sys.set_asyncgen_hooks_finalizer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0fb916a1e815458b71e1e1a89376bfe5a45dc3a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys.set_asyncgen_hooks_firstiter&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;sys.set_asyncgen_hooks_firstiter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52dad9dad3b32b119aba16eea230246633895842" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys.setprofile&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;sys.setprofile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16ca2c45afe8a124ff7e4d1f9da35856dafa3fa3" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;sys.settrace&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;sys.settrace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efafa56e78f31621c13f731f324927897b824411" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;array.__new__&lt;/code&gt; with arguments &lt;code&gt;typecode&lt;/code&gt;, &lt;code&gt;initializer&lt;/code&gt;.</source>
          <target state="translated">引发一个带有参数 &lt;code&gt;typecode&lt;/code&gt; ， &lt;code&gt;initializer&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;array.__new__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="079936061198eb6088c170bd396ee47f6049c02f" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;builtins.breakpoint&lt;/code&gt; with argument &lt;code&gt;breakpointhook&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;breakpointhook&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;builtins.breakpoint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72c0ec1cbc6b8946a86e313a56e7de8acc0ff7e1" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;builtins.id&lt;/code&gt; with argument &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebc51f218e9004d7b94fe769d4cb2198aaf3cdd" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;builtins.input&lt;/code&gt; with argument &lt;code&gt;prompt&lt;/code&gt; before reading input</source>
          <target state="translated">在读取输入之前使用参数 &lt;code&gt;prompt&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;builtins.input&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53c39966d4b0e5d67eb25146622558c37663ccc7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;code.__new__&lt;/code&gt; with arguments &lt;code&gt;code&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;argcount&lt;/code&gt;, &lt;code&gt;posonlyargcount&lt;/code&gt;, &lt;code&gt;kwonlyargcount&lt;/code&gt;, &lt;code&gt;nlocals&lt;/code&gt;, &lt;code&gt;stacksize&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;code.__new__&lt;/code&gt; 带有参数 &lt;code&gt;code&lt;/code&gt; ， &lt;code&gt;filename&lt;/code&gt; ， &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;argcount&lt;/code&gt; ， &lt;code&gt;posonlyargcount&lt;/code&gt; ， &lt;code&gt;kwonlyargcount&lt;/code&gt; ， &lt;code&gt;nlocals&lt;/code&gt; ， &lt;code&gt;stacksize&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbd715add0e866debc2ed538e8d47460989be563" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;compile&lt;/code&gt; with arguments &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;filename&lt;/code&gt;. This event may also be raised by implicit compilation.</source>
          <target state="translated">引发带有参数 &lt;code&gt;source&lt;/code&gt; 和 &lt;code&gt;filename&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;compile&lt;/code&gt; 。也可以通过隐式编译引发此事件。</target>
        </trans-unit>
        <trans-unit id="9760e460d25516ad7f78ab56e8fb1fecb0606067" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.addressof&lt;/code&gt; with argument &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;obj&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.addressof&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68ace3ef224bfccf1cc7d3e720e02017dbebc57c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.cdata/buffer&lt;/code&gt; with arguments &lt;code&gt;pointer&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.cdata/buffer&lt;/code&gt; ，其参数为 &lt;code&gt;pointer&lt;/code&gt; ， &lt;code&gt;size&lt;/code&gt; ， &lt;code&gt;offset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ab3444f481a6369c603e1ad538dd221023c9d44" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.create_string_buffer&lt;/code&gt; with arguments &lt;code&gt;init&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;init&lt;/code&gt; ， &lt;code&gt;size&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.create_string_buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b7c565e8a29f3db5258895f6725951d4f55463c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.create_unicode_buffer&lt;/code&gt; with arguments &lt;code&gt;init&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;init&lt;/code&gt; ， &lt;code&gt;size&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.create_unicode_buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40768b76b5d41d388ae2b81735890f852de6b22a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.get_errno&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带参数的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.get_errno&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b112d7a70da482cfcd999ed8d36300eee0b160f0" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.get_last_error&lt;/code&gt; with no arguments.</source>
          <target state="translated">引发不带任何参数的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.get_last_error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="431aacfcd3f8b88c1df3928779bc3e1e9867dcfc" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.set_errno&lt;/code&gt; with argument &lt;code&gt;errno&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;errno&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.set_errno&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ba6cc6cc5936ec2ab86e9cf060f45927ab5a9b6" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.set_last_error&lt;/code&gt; with argument &lt;code&gt;error&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;error&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.set_last_error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a804cbaf29eae46476e1731002fcce6340bb3f0" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.string_at&lt;/code&gt; with arguments &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;address&lt;/code&gt; ， &lt;code&gt;size&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.string_at&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d6b171a4597fcb595d9d806a5c0cfc26285efdb" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.wstring_at&lt;/code&gt; with arguments &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.wstring_at&lt;/code&gt; ，其参数为 &lt;code&gt;address&lt;/code&gt; ， &lt;code&gt;size&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="403d12339bdaf377051f6e0fc09c75388702dc9a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ensurepip.bootstrap&lt;/code&gt; with argument &lt;code&gt;root&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;root&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ensurepip.bootstrap&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="842d393d07933374e0857825fc6ac6bd8a102d7b" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;exec&lt;/code&gt; with the code object as the argument. Code compilation events may also be raised.</source>
          <target state="translated">使用代码对象作为参数引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;exec&lt;/code&gt; 。代码编译事件也可能引发。</target>
        </trans-unit>
        <trans-unit id="f9e4c6953062f5a75abf8c61f38e47c11287dab4" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;fcntl.fcntl&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf190c09aa3ceca01742ceda1c4ce686833909e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;fcntl.flock&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;operation&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79daab2129bee23ba6e299b18c77c60e26eda66d" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;fcntl.ioctl&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47bfa71e21f980226ed0abe960bdef1383e08c83" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;fcntl.lockf&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;len&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;whence&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f122a1eab81f37d648e38f51dba15b370ce9805" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ftplib.connect&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;host&lt;/code&gt; 和 &lt;code&gt;port&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ftplib.connect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15bf37d46c26f40dc2f6748f2cfd031b747e22dc" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ftplib.sendcmd&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;cmd&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ftplib.sendcmd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="582c9671c5f20287d28bb66d62df01cad4b05165" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;function.__new__&lt;/code&gt; with argument &lt;code&gt;code&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efc2da71b14329e9da0e2276777354d4c6ec256" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;glob.glob&lt;/code&gt; with arguments &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;recursive&lt;/code&gt;.</source>
          <target state="translated">引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;glob.glob&lt;/code&gt; ，其参数为 &lt;code&gt;pathname&lt;/code&gt; ， &lt;code&gt;recursive&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8684756366c03d40cef85d8a80b15e114b8d0c30" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;imaplib.open&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;host&lt;/code&gt; 和 &lt;code&gt;port&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;imaplib.open&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ea054955479414e79a7f6fe8174e9d2bd08ff4a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;imaplib.send&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;data&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;imaplib.send&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60bfb7b427a42844719ecaaccf9ee76e3bcb939c" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;mmap.__new__&lt;/code&gt; with arguments &lt;code&gt;fileno&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;access&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;fileno&lt;/code&gt; ， &lt;code&gt;length&lt;/code&gt; ， &lt;code&gt;access&lt;/code&gt; ， &lt;code&gt;offset&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;mmap.__new__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30d15accbd9decc4c86fdaff72574007793534fb" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;msvcrt.get_osfhandle&lt;/code&gt; with argument &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563c526294fc7179fce70e0d251a3ec38101415e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;msvcrt.locking&lt;/code&gt; with arguments &lt;code&gt;fd&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;nbytes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8e155274ad8ddfe9343d27771f3e0aefd8d732" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;msvcrt.open_osfhandle&lt;/code&gt; with arguments &lt;code&gt;handle&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e826a502c1efa032d18a01fff7f577e27e639e2" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;nntplib.connect&lt;/code&gt; with arguments &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">使用参数 &lt;code&gt;self&lt;/code&gt; ， &lt;code&gt;host&lt;/code&gt; 和 &lt;code&gt;port&lt;/code&gt; 引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;nntplib.connect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c9c311595c304be374f4ba8ca21fd804373ac91" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;open&lt;/code&gt; with arguments &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">引发一个带有参数 &lt;code&gt;file&lt;/code&gt; ， &lt;code&gt;mode&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; &lt;code&gt;open&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c334c43fb99a8eefdffacf34c0d3ffe16f937f64" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;open&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">发起一个&lt;a href=&quot;sys#auditing&quot;&gt;审计事件&lt;/a&gt; &lt;code&gt;open&lt;/code&gt; 带参数的 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;mode&lt;/code&gt; ， &lt;code&gt;flags&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e71dd7331655d6529aca68def547506a0864145" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.add_dll_directory&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41154196fe24018107ba80e55c97f1051c47085e" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.chdir&lt;/code&gt; with argument &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f089f131f9cd18be9e51c2c19a8c5440aa5dbf00" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.chflags&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b6a4b3307f202d92fa8064e6e4315d50ae73a7" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.chmod&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378e0b2877a8d38d64283378190713357b7bc3ef" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.chown&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;uid&lt;/code&gt;, &lt;code&gt;gid&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274b00973197b823aae949dcaae896de0441df9b" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.exec&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b159e28e71480331f48c5a29274f30f16dacee" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.fork&lt;/code&gt; with no arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f538747e2ad1c4b9f997fc9bff298b3005abf264" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.forkpty&lt;/code&gt; with no arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b615b2db59ea7b4eaf65621d07438e8d93cdf83a" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.fwalk&lt;/code&gt; with arguments &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topdown&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;follow_symlinks&lt;/code&gt;, &lt;code&gt;dir_fd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe03c0e428f4ba678d3c3035d95471c980b0cea" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.getxattr&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d76717857a00c7bb21d54df919ae81654bbd5b1" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.kill&lt;/code&gt; with arguments &lt;code&gt;pid&lt;/code&gt;, &lt;code&gt;sig&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5fc375e226e3e8698afd7fc246479c4d94b3a8" translate="yes" xml:space="preserve">
          <source>Raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;os.killpg&lt;/code&gt; with arguments &lt;code&gt;pgid&lt;/code&gt;, &lt;code&gt;sig&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
