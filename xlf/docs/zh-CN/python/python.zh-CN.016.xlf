<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="5dc8ba0df0a496b395a7f4f5747bf70303819e76" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the signal handler was removed, or &lt;code&gt;False&lt;/code&gt; if no handler was set for the given signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2d5162d0441a5a54c9201783fdc0b86f2ea87c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the specified line was modified since the last call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;; otherwise return &lt;code&gt;False&lt;/code&gt;. Raise a &lt;a href=&quot;#curses.error&quot;&gt;&lt;code&gt;curses.error&lt;/code&gt;&lt;/a&gt; exception if &lt;em&gt;line&lt;/em&gt; is not valid for the given window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f87d91564037c459fa1e2942fb4ed431481bed0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the specified window was modified since the last call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;; otherwise return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f737e6c24d01710b1c7d270b10d5f7006d1909" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stat tuples &lt;em&gt;stat1&lt;/em&gt; and &lt;em&gt;stat2&lt;/em&gt; refer to the same file. These structures may have been returned by &lt;a href=&quot;os#os.fstat&quot;&gt;&lt;code&gt;os.fstat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;. This function implements the underlying comparison used by &lt;a href=&quot;#os.path.samefile&quot;&gt;&lt;code&gt;samefile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.path.sameopenfile&quot;&gt;&lt;code&gt;sameopenfile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cb3324a2e29e3ce81810309a1c90e4e5471d29" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream can be read from. If &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;read()&lt;/code&gt; will raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249ad978835f3e95c47acb351c46ec6c76616405" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream is closed or in the process of being closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604f3e7f6fe3a515ead135deb74f1f599e0ee779" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream is interactive (i.e., connected to a terminal/tty device).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6cd64c153cac17bf0619c32967eaac7a49e4ca" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream supports random access. If &lt;code&gt;False&lt;/code&gt;, &lt;a href=&quot;#io.IOBase.seek&quot;&gt;&lt;code&gt;seek()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#io.IOBase.tell&quot;&gt;&lt;code&gt;tell()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.IOBase.truncate&quot;&gt;&lt;code&gt;truncate()&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bef7526285e8687107e63ef85d27078093be61" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the stream supports writing. If &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt; and &lt;a href=&quot;#io.IOBase.truncate&quot;&gt;&lt;code&gt;truncate()&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42bacfe943f46d4a1c2c6cebfb71131a4a06517f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string ends with the specified &lt;em&gt;suffix&lt;/em&gt;, otherwise return &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;suffix&lt;/em&gt; can also be a tuple of suffixes to look for. With optional &lt;em&gt;start&lt;/em&gt;, test beginning at that position. With optional &lt;em&gt;end&lt;/em&gt;, stop comparing at that position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a017e127b2399897c25fc6396743bb2f3a84e4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string is a titlecased string and there is at least one character, for example uppercase characters may only follow uncased characters and lowercase characters only cased ones. Return &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6264089d8de631c52b76e657bc9db3608da95d5" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string is a valid identifier according to the language definition, section &lt;a href=&quot;https://docs.python.org/3.8/reference/lexical_analysis.html#identifiers&quot;&gt;Identifiers and keywords&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05aebde61c6a95d1e6831ed8c32ad5910fa404a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the string is empty or all characters in the string are ASCII, &lt;code&gt;False&lt;/code&gt; otherwise. ASCII characters have code points in the range U+0000-U+007F.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5cddb4d7ab01addce901d0aef39f28fc262c98" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275cf00809c0de535595a35aabdc067938e6e34f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is assigned to in its block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef5b3812cba647978613b33bf72340f52a2b222" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is created from an import statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94eb9fabd9ac64fd1a6c1bb78541062b0d8bf653" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is declared global with a global statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1c9315c7fb03567e13eb4859cc8a14bc92f694" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is global.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338df9a9dc2042d16ab26f55265a3900926ac4d7" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is local to its block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f365021f3648245e9745b0a51ea3e52db5abf0" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is nonlocal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb94a41bcc9e65cbe45318c948a03149c187884" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is referenced in its block, but not assigned to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f7d811e0cc5c00c3ad870058e02d729fe900ae" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the symbol is used in its block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108e63985b78abe27d0b5422d8a237001f7d2b6a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the terminal can display colors; otherwise, return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a581cff4955ee811a38b7d1bb908a4c7a7e143" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the terminal has insert- and delete-character capabilities. This function is included for historical reasons only, as all modern software terminal emulators have such capabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b660374e31a18de50095f39aaef17dac893e97" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the terminal has insert- and delete-line capabilities, or can simulate them using scrolling regions. This function is included for historical reasons only, as all modern software terminal emulators have such capabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526baa42175cfef3824865478f0b5c21aa7ff75f" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the transport is closing or is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d7e07bad4118b3056cb7ef3de9cc355eaafccd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the transport is receiving new data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2b59024a3b8fad0cf8dff67e3984b9188b9b58" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the transport is receiving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ddfdebbe14972c98b8094136416df377365ded" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the underlying lock is acquired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc7c3a25e2bee841581fd3f05112cae39dc84ad" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the underlying mapping has a key &lt;em&gt;key&lt;/em&gt;, else &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c12e4849ea909ddeafbc08cb16eb8908555c48" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the underlying transport supports the &lt;a href=&quot;#asyncio.StreamWriter.write_eof&quot;&gt;&lt;code&gt;write_eof()&lt;/code&gt;&lt;/a&gt; method, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480e290cef60522d2dabd099124ba6a1ba69ec8a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the values &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are close to each other and &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4dda98a06c458cf6ee795a03d82503663ac9df" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if the watcher is ready to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846770472190bed4fb6d4cee9b0773323b180eaa" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there are &lt;a href=&quot;#asyncio.Queue.maxsize&quot;&gt;&lt;code&gt;maxsize&lt;/code&gt;&lt;/a&gt; items in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0086d7c7e020a16f98072f19e5f7b43721a7c0ff" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there are only whitespace characters in the string and there is at least one character, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100cc0f7d34467a8c33dd5f16792b23d7e099d02" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is a &lt;em&gt;Content-Disposition&lt;/em&gt; header and its (case insensitive) value is &lt;code&gt;attachment&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88acd12ea431c48306a97ff58c87f31af2378561" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is a resource named &lt;em&gt;name&lt;/em&gt; in the package, otherwise &lt;code&gt;False&lt;/code&gt;. Remember that directories are &lt;em&gt;not&lt;/em&gt; resources! &lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996e77f147432092fc3724fe76b70a8bcf929b13" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is at least one lowercase ASCII character in the sequence and no uppercase ASCII characters, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f5f2c425e59fd40f969f6febb163b6df2bc469" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if there is at least one uppercase alphabetic ASCII character in the sequence and no lowercase ASCII characters, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f018e81894dfe3df30b71271c53b5877e9f676cb" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this archive member is a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a9c00f57e82e4457cc569ce712389ae2b23d86" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this entry is a directory or a symbolic link pointing to a directory; return &lt;code&gt;False&lt;/code&gt; if the entry is or points to any other kind of file, or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1f150e38055459612b41872492d702f1c2b4ff" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this entry is a file or a symbolic link pointing to a file; return &lt;code&gt;False&lt;/code&gt; if the entry is or points to a directory or other non-file entry, or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb42a4b63e45194892f25ae4514dfde880e08e4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this entry is a symbolic link (even if broken); return &lt;code&gt;False&lt;/code&gt; if the entry points to a directory or any kind of file, or if it doesn&amp;rsquo;t exist anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18303bf9a32a93e062e86dbfa83352c5ada8906d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this network is a subnet of &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41b3833822eb6eae12780640abf60dccecc3b9c" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; if this network is a supernet of &lt;em&gt;other&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727954683700e3d8d89d6ef42f609bc102a5fce8" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; iff the actual output from an example (&lt;em&gt;got&lt;/em&gt;) matches the expected output (&lt;em&gt;want&lt;/em&gt;). These strings are always considered to match if they are identical; but depending on what option flags the test runner is using, several non-exact match types are also possible. See section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt; for more information about option flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1de22c5a965cc847885b2bf41b6098f143d4b99" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;, depending on whether the programmer can change the colors displayed by the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85e75461ec6bb932c4991cae38140b56917a150" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;_testcapi.WITH_PYMALLOC&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87f88940a8a96527585959eeaccfdfabb9189c2" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a % b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8659b23e94903498c5d1ca949ff437497e3767" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a * b&lt;/code&gt;, for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a7f45521ef8ea1606816335e16f763d6b36469" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a ** b&lt;/code&gt;, for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736a5ae90d2d93b5844580bcb72f35a3ece74f1a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a + b&lt;/code&gt; for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdefc322a2065725bb27881e4b8aed55310a6b3" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a + b&lt;/code&gt;, for &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7f6b7e97caca43dea5d4f732653e45cff7e53d" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a - b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8d55d9372445a7d6ed3dcd75a7c1ab28b4e936" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a / b&lt;/code&gt; where 2/3 is .66 rather than 0. This is also known as &amp;ldquo;true&amp;rdquo; division.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51020df3e8e82f8aac651fa28963a554a44d0f65" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a // b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8819b044ad930fceb726cf1e718b78c3daf32e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a == b&lt;/code&gt;. This function uses an approach designed to prevent timing analysis by avoiding content-based short circuiting behaviour, making it appropriate for cryptography. &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; must both be of the same type: either &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; (ASCII only, as e.g. returned by &lt;a href=&quot;#hmac.HMAC.hexdigest&quot;&gt;&lt;code&gt;HMAC.hexdigest()&lt;/code&gt;&lt;/a&gt;), or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb19c25cf844536fa91896b6bbb9e4bd6fdc581" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a @ b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0fbc387e2b6b366d22b4ea94c4199417d1b6ed" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a is b&lt;/code&gt;. Tests object identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c5a46246b5252e763393003cc6527325480206" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;a is not b&lt;/code&gt;. Tests object identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6800801d1028a90741ea7bdb1f41c5ecc4f2e41" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;atan(y / x)&lt;/code&gt;, in radians. The result is between &lt;code&gt;-pi&lt;/code&gt; and &lt;code&gt;pi&lt;/code&gt;. The vector in the plane from the origin to point &lt;code&gt;(x, y)&lt;/code&gt; makes this angle with the positive X axis. The point of &lt;a href=&quot;#math.atan2&quot;&gt;&lt;code&gt;atan2()&lt;/code&gt;&lt;/a&gt; is that the signs of both inputs are known to it, so it can compute the correct quadrant for the angle. For example, &lt;code&gt;atan(1)&lt;/code&gt; and &lt;code&gt;atan2(1, 1)&lt;/code&gt; are both &lt;code&gt;pi/4&lt;/code&gt;, but &lt;code&gt;atan2(-1,
-1)&lt;/code&gt; is &lt;code&gt;-3*pi/4&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf118d728bd236fca66615283e6410c305db6ffd" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;dt + offset&lt;/code&gt;. The &lt;em&gt;dt&lt;/em&gt; argument must be an aware &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance, with &lt;code&gt;tzinfo&lt;/code&gt; set to &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b44269fbfae68d389f71e972b7b213e6cb1d28" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;fmod(x, y)&lt;/code&gt;, as defined by the platform C library. Note that the Python expression &lt;code&gt;x % y&lt;/code&gt; may not return the same result. The intent of the C standard is that &lt;code&gt;fmod(x, y)&lt;/code&gt; be exactly (mathematically; to infinite precision) equal to &lt;code&gt;x - n*y&lt;/code&gt; for some integer &lt;em&gt;n&lt;/em&gt; such that the result has the same sign as &lt;em&gt;x&lt;/em&gt; and magnitude less than &lt;code&gt;abs(y)&lt;/code&gt;. Python&amp;rsquo;s &lt;code&gt;x % y&lt;/code&gt; returns a result with the sign of &lt;em&gt;y&lt;/em&gt; instead, and may not be exactly computable for float arguments. For example, &lt;code&gt;fmod(-1e-100, 1e100)&lt;/code&gt; is &lt;code&gt;-1e-100&lt;/code&gt;, but the result of Python&amp;rsquo;s &lt;code&gt;-1e-100 % 1e100&lt;/code&gt; is &lt;code&gt;1e100-1e-100&lt;/code&gt;, which cannot be represented exactly as a float, and rounds to the surprising &lt;code&gt;1e100&lt;/code&gt;. For this reason, function &lt;a href=&quot;#math.fmod&quot;&gt;&lt;code&gt;fmod()&lt;/code&gt;&lt;/a&gt; is generally preferred when working with floats, while Python&amp;rsquo;s &lt;code&gt;x % y&lt;/code&gt; is preferred when working with integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c34c342bf1cdb471c4ad30d46ee0a24b38bba3" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;timedelta(0)&lt;/code&gt; if DST is not in effect. If DST is in effect, return the offset as a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object (see &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; for details). Note that DST offset, if applicable, has already been added to the UTC offset returned by &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt;, so there&amp;rsquo;s no need to consult &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; unless you&amp;rsquo;re interested in obtaining DST info separately. For example, &lt;a href=&quot;#datetime.datetime.timetuple&quot;&gt;&lt;code&gt;datetime.timetuple()&lt;/code&gt;&lt;/a&gt; calls its &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute&amp;rsquo;s &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; method to determine how the &lt;code&gt;tm_isdst&lt;/code&gt; flag should be set, and &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;tzinfo.fromutc()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; to account for DST changes when crossing time zones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a6a103dcb4d4513d47166d532b6998059e92f9" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x * (2**i)&lt;/code&gt;. This is essentially the inverse of function &lt;a href=&quot;#math.frexp&quot;&gt;&lt;code&gt;frexp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c2a808a3b4e42d1c206b84ac2a59007274b4fb" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x&lt;/code&gt; raised to the power &lt;code&gt;y&lt;/code&gt;. Exceptional cases follow Annex &amp;lsquo;F&amp;rsquo; of the C99 standard as far as possible. In particular, &lt;code&gt;pow(1.0, x)&lt;/code&gt; and &lt;code&gt;pow(x, 0.0)&lt;/code&gt; always return &lt;code&gt;1.0&lt;/code&gt;, even when &lt;code&gt;x&lt;/code&gt; is a zero or a NaN. If both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are finite, &lt;code&gt;x&lt;/code&gt; is negative, and &lt;code&gt;y&lt;/code&gt; is not an integer then &lt;code&gt;pow(x, y)&lt;/code&gt; is undefined, and raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e0262bd4ba867fedfc52566d1eb09da934fb13" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;x&lt;/code&gt; to the power of &lt;code&gt;y&lt;/code&gt;, reduced modulo &lt;code&gt;modulo&lt;/code&gt; if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff49abe7aace93c93fdaf9e73d078aea6b5c05f" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;a&lt;/em&gt; converted to an integer. Equivalent to &lt;code&gt;a.__index__()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0930bd03f8c629148151e2a195d02f3bd5dfcca" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;a&lt;/em&gt; shifted left by &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eed2bc8bd692a94ca6000df75299688109d9db5" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;a&lt;/em&gt; shifted right by &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fe1aba68758bf4f1738f9b8bc7a70150721bcf" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;base&lt;/em&gt; to the power &lt;em&gt;exp&lt;/em&gt;; if &lt;em&gt;mod&lt;/em&gt; is present, return &lt;em&gt;base&lt;/em&gt; to the power &lt;em&gt;exp&lt;/em&gt;, modulo &lt;em&gt;mod&lt;/em&gt; (computed more efficiently than &lt;code&gt;pow(base, exp) % mod&lt;/code&gt;). The two-argument form &lt;code&gt;pow(base, exp)&lt;/code&gt; is equivalent to using the power operator: &lt;code&gt;base**exp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05dcec1a404cde1b0f067a0a964b56a54b5f6ec" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;e&lt;/em&gt; raised to the power &lt;em&gt;x&lt;/em&gt;, minus 1. Here &lt;em&gt;e&lt;/em&gt; is the base of natural logarithms. For small floats &lt;em&gt;x&lt;/em&gt;, the subtraction in &lt;code&gt;exp(x) - 1&lt;/code&gt; can result in a &lt;a href=&quot;https://en.wikipedia.org/wiki/Loss_of_significance&quot;&gt;significant loss of precision&lt;/a&gt;; the &lt;a href=&quot;#math.expm1&quot;&gt;&lt;code&gt;expm1()&lt;/code&gt;&lt;/a&gt; function provides a way to compute this quantity to full precision:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ee926a1638643a39d7bf9127f034473a63db8c" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;e&lt;/em&gt; raised to the power &lt;em&gt;x&lt;/em&gt;, where &lt;em&gt;e&lt;/em&gt; = 2.718281&amp;hellip; is the base of natural logarithms. This is usually more accurate than &lt;code&gt;math.e ** x&lt;/code&gt; or &lt;code&gt;pow(math.e, x)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732dced3493c574a35c934dc77801e477df9f08f" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;e&lt;/em&gt; raised to the power &lt;em&gt;x&lt;/em&gt;, where &lt;em&gt;e&lt;/em&gt; is the base of natural logarithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869fbeced7cf7d56291909bf99e10e204c1f7b4e" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;n&lt;/em&gt; independent iterators from a single iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c556d07cf327b918d111304566842870baf8e5ba" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;num&lt;/em&gt; cryptographically strong pseudo-random bytes. Raises an &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; if the PRNG has not been seeded with enough data or if the operation is not supported by the current RAND method. &lt;a href=&quot;#ssl.RAND_status&quot;&gt;&lt;code&gt;RAND_status()&lt;/code&gt;&lt;/a&gt; can be used to check the status of the PRNG and &lt;a href=&quot;#ssl.RAND_add&quot;&gt;&lt;code&gt;RAND_add()&lt;/code&gt;&lt;/a&gt; can be used to seed the PRNG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea961a350612f3d66fa5c073a91b1724238c8398" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;number&lt;/em&gt; rounded to &lt;em&gt;ndigits&lt;/em&gt; precision after the decimal point. If &lt;em&gt;ndigits&lt;/em&gt; is omitted or is &lt;code&gt;None&lt;/code&gt;, it returns the nearest integer to its input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085810cdf180f5497ea9c20f653a975570bc3f11" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;obj&lt;/em&gt; negated (&lt;code&gt;-obj&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250cdc8288e78bea3126de677e49e772ccffc73d" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;obj&lt;/em&gt; positive (&lt;code&gt;+obj&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162485b79078b310772c6399823df5089be66a68" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;r&lt;/em&gt; length subsequences of elements from the input &lt;em&gt;iterable&lt;/em&gt; allowing individual elements to be repeated more than once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb2a49a419bbc4a0cb02f78c16ab2b81ccac8b5" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;r&lt;/em&gt; length subsequences of elements from the input &lt;em&gt;iterable&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2cf02ce1fad496966b0fcb69eb88045d90fb28" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;rootObject&lt;/em&gt; as an XML plist-formatted bytes object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8590e9a4a39bb0c52fdd079e36b8b664d3729130" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;value&lt;/em&gt; as a plist-formatted bytes object. See the documentation for &lt;a href=&quot;#plistlib.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; for an explanation of the keyword arguments of this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9d213c3838bd621dcc1a5c2b7e189dc0f8efa1" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;x&lt;/em&gt; divided by &lt;em&gt;y&lt;/em&gt;, truncated to an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21c0fc98d85e9522726bf652b05f15e2bb4d578" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;x&lt;/em&gt; divided by &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f93bb6e6340283ff56059c87016096441b274d" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;x&lt;/em&gt; factorial as an integer. Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;x&lt;/em&gt; is not integral or is negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3924954b9991e95339b371117a2199ccac8bc1a7" translate="yes" xml:space="preserve">
          <source>Return POSIX timestamp corresponding to the &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance. The return value is a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; similar to that returned by &lt;a href=&quot;time#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e339edf3ad2f542b96afbfe58204eb717ddf220" translate="yes" xml:space="preserve">
          <source>Return a &amp;ldquo;data&amp;rdquo; wrapper object around the bytes object &lt;em&gt;data&lt;/em&gt;. This is used in functions converting from/to plists to represent the &lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt; type available in plists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953e72f5dbb9eaca0848a7d75bbb8db154b7b826" translate="yes" xml:space="preserve">
          <source>Return a &amp;ldquo;memory view&amp;rdquo; object created from the given argument. See &lt;a href=&quot;stdtypes#typememoryview&quot;&gt;Memory Views&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da21208028aeb33a7f885ed091f22144591f0487" translate="yes" xml:space="preserve">
          <source>Return a 2-tuple; the first element is a string containing the command line to be executed (which can be passed to &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;os.system()&lt;/code&gt;&lt;/a&gt;), and the second element is the mailcap entry for a given MIME type. If no matching MIME type can be found, &lt;code&gt;(None, None)&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635b899b13bd94715f60b511ac9cb5a316f14d5c" translate="yes" xml:space="preserve">
          <source>Return a 3-tuple &lt;code&gt;(login, account, password)&lt;/code&gt; of authenticators for &lt;em&gt;host&lt;/em&gt;. If the netrc file did not contain an entry for the given host, return the tuple associated with the &amp;lsquo;default&amp;rsquo; entry. If neither matching host nor default entry is available, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2237a0a6c86183cf7fdac655f469aada3b908269" translate="yes" xml:space="preserve">
          <source>Return a 3-tuple, (ISO year, ISO week number, ISO weekday).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a71c8bfdd881c72898c5c8e376058acde8661bc" translate="yes" xml:space="preserve">
          <source>Return a 3-tuple, (ISO year, ISO week number, ISO weekday). The same as &lt;code&gt;self.date().isocalendar()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e509d9c26cac9481d3506cb90ab038b89866617" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#asyncio.asyncio.subprocess.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2835f9e9416dd1ecf0859845d4972006ca8a13" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#codecs.StreamRecoder&quot;&gt;&lt;code&gt;StreamRecoder&lt;/code&gt;&lt;/a&gt; instance, a wrapped version of &lt;em&gt;file&lt;/em&gt; which provides transparent transcoding. The original file is closed when the wrapped version is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62846974daa9aa01764dbe2a78e5fa987fc1f670" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; corresponding to a &lt;em&gt;date_string&lt;/em&gt; given in the format &lt;code&gt;YYYY-MM-DD&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72cc8b85c34fd01c2ff68b6de4dd2b1cc0c16fe8" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; corresponding to the ISO calendar date specified by year, week and day. This is the inverse of the function &lt;a href=&quot;#datetime.date.isocalendar&quot;&gt;&lt;code&gt;date.isocalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4020f5b532f6e1e5dc5692889e99e01e2e58b763" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; corresponding to &lt;em&gt;date_string&lt;/em&gt;, parsed according to &lt;em&gt;format&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c60d227cb67dcdaafedc501e0b5538d29aaf54" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; corresponding to a &lt;em&gt;date_string&lt;/em&gt; in one of the formats emitted by &lt;a href=&quot;#datetime.date.isoformat&quot;&gt;&lt;code&gt;date.isoformat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.datetime.isoformat&quot;&gt;&lt;code&gt;datetime.isoformat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2daa194003e3ad2701bc2aa89040c7590209bb33" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; corresponding to the ISO calendar date specified by year, week and day. The non-date components of the datetime are populated with their normal default values. This is the inverse of the function &lt;a href=&quot;#datetime.datetime.isocalendar&quot;&gt;&lt;code&gt;datetime.isocalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94eee910700d004bb911b7793c76bdb274d4475" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object with new &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute &lt;em&gt;tz&lt;/em&gt;, adjusting the date and time data so the result is the same UTC time as &lt;em&gt;self&lt;/em&gt;, but in &lt;em&gt;tz&lt;/em&gt;&amp;rsquo;s local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cf8125664a78af2d348cb489d29f88928a59dc" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; corresponding to a &lt;em&gt;time_string&lt;/em&gt; in one of the formats emitted by &lt;a href=&quot;#datetime.time.isoformat&quot;&gt;&lt;code&gt;time.isoformat()&lt;/code&gt;&lt;/a&gt;. Specifically, this function supports strings in the format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8580b588a82089127232a336fc2ec95bfe6501" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; with the same value, except for those attributes given new values by whichever keyword arguments are specified. Note that &lt;code&gt;tzinfo=None&lt;/code&gt; can be specified to create a naive &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; from an aware &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, without conversion of the time data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f847c492c1eeb613723482466288822cd37be3" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; object that will write any message provided to the &lt;a href=&quot;#email.generator.BytesGenerator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method, or any surrogateescape encoded text provided to the &lt;a href=&quot;#email.generator.BytesGenerator.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method, to the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-like-object&quot;&gt;file-like object&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;. &lt;em&gt;outfp&lt;/em&gt; must support a &lt;code&gt;write&lt;/code&gt; method that accepts binary data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9989929334a64c46409ae7eab57c943e06951e" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; object that will write any message provided to the &lt;a href=&quot;#email.generator.Generator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method, or any text provided to the &lt;a href=&quot;#email.generator.Generator.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method, to the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-like-object&quot;&gt;file-like object&lt;/a&gt;&lt;em&gt;outfp&lt;/em&gt;. &lt;em&gt;outfp&lt;/em&gt; must support a &lt;code&gt;write&lt;/code&gt; method that accepts string data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00cadb13827de1f63ecdec7b3f48ef96ca6b670" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#inspect.Signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt; (or its subclass) object for a given callable &lt;code&gt;obj&lt;/code&gt;. Pass &lt;code&gt;follow_wrapped=False&lt;/code&gt; to get a signature of &lt;code&gt;obj&lt;/code&gt; without unwrapping its &lt;code&gt;__wrapped__&lt;/code&gt; chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e00c952dddcfed7e7765a897ab4e32ce6f05aab" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#inspect.Signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt; object for the given &lt;code&gt;callable&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc989e5c43ca4ddd628a90b1dcded9a6918daaf0" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#mailbox.Maildir&quot;&gt;&lt;code&gt;Maildir&lt;/code&gt;&lt;/a&gt; instance representing the folder whose name is &lt;em&gt;folder&lt;/em&gt;. A &lt;a href=&quot;#mailbox.NoSuchMailboxError&quot;&gt;&lt;code&gt;NoSuchMailboxError&lt;/code&gt;&lt;/a&gt; exception is raised if the folder does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d703cebe0f7d520d27cd5242c2456c42c09ae87c" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; object for this entry. This method follows symbolic links by default; to stat a symbolic link add the &lt;code&gt;follow_symlinks=False&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9003be502e4c5c3c57be2c06a8bf396c6cd298a" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; object for the pathname &lt;em&gt;name&lt;/em&gt;. For detailed information on &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; objects and the keyword arguments that are allowed, see &lt;a href=&quot;#tarfile-objects&quot;&gt;TarFile Objects&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e91feb92f3621b96633ad2b8a299744d844a0c4" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object for member &lt;em&gt;name&lt;/em&gt;. If &lt;em&gt;name&lt;/em&gt; can not be found in the archive, &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618b258e82441ee8e8e9a4660fef39f1bd8d88c4" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#textseq&quot;&gt;string&lt;/a&gt; version of &lt;em&gt;object&lt;/em&gt;. If &lt;em&gt;object&lt;/em&gt; is not provided, returns the empty string. Otherwise, the behavior of &lt;code&gt;str()&lt;/code&gt; depends on whether &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; is given, as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b8c728f23f23987deea9bed5f56a1231a2c68f" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#trace.CoverageResults&quot;&gt;&lt;code&gt;CoverageResults&lt;/code&gt;&lt;/a&gt; object that contains the cumulative results of all previous calls to &lt;code&gt;run&lt;/code&gt;, &lt;code&gt;runctx&lt;/code&gt; and &lt;code&gt;runfunc&lt;/code&gt; for the given &lt;a href=&quot;#trace.Trace&quot;&gt;&lt;code&gt;Trace&lt;/code&gt;&lt;/a&gt; instance. Does not reset the accumulated trace results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0963864807a81602d8520e8c299fe9fe6f54d31e" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#traceback.StackSummary&quot;&gt;&lt;code&gt;StackSummary&lt;/code&gt;&lt;/a&gt; object representing a list of &amp;ldquo;pre-processed&amp;rdquo; stack trace entries extracted from the traceback object &lt;em&gt;tb&lt;/em&gt;. It is useful for alternate formatting of stack traces. The optional &lt;em&gt;limit&lt;/em&gt; argument has the same meaning as for &lt;a href=&quot;#traceback.print_tb&quot;&gt;&lt;code&gt;print_tb()&lt;/code&gt;&lt;/a&gt;. A &amp;ldquo;pre-processed&amp;rdquo; stack trace entry is a &lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; object containing attributes &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;lineno&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, and &lt;code&gt;line&lt;/code&gt; representing the information that is usually printed for a stack trace. The &lt;code&gt;line&lt;/code&gt; is a string with leading and trailing whitespace stripped; if the source is not available it is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a2133d49c1bae0cc7d123b97c35b9f87409eb0" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;None&lt;/code&gt; in response to a redirect. This is called by the default implementations of the &lt;code&gt;http_error_30*()&lt;/code&gt; methods when a redirection is received from the server. If a redirection should take place, return a new &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; to allow &lt;code&gt;http_error_30*()&lt;/code&gt; to perform the redirect to &lt;em&gt;newurl&lt;/em&gt;. Otherwise, raise &lt;a href=&quot;urllib.error#urllib.error.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt; if no other handler should try to handle this URL, or return &lt;code&gt;None&lt;/code&gt; if you can&amp;rsquo;t but another handler might.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4639547eff1cddc6f345cef5e95684f0481681e" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#xml.dom.pulldom.DOMEventStream&quot;&gt;&lt;code&gt;DOMEventStream&lt;/code&gt;&lt;/a&gt; from the given input. &lt;em&gt;stream_or_string&lt;/em&gt; may be either a file name, or a file-like object. &lt;em&gt;parser&lt;/em&gt;, if given, must be an &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; object. This function will change the document handler of the parser and activate namespace support; other parser configuration (like setting an entity resolver) must have been done in advance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d239b9f2eda91b8181f4d319a4afb529664b76" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#xml.dom.pulldom.DOMEventStream&quot;&gt;&lt;code&gt;DOMEventStream&lt;/code&gt;&lt;/a&gt; that represents the (Unicode) &lt;em&gt;string&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ee7a827f9a72de784046e50d82a85ec215fa66" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object with information about the archive member &lt;em&gt;name&lt;/em&gt;. Calling &lt;a href=&quot;#zipfile.ZipFile.getinfo&quot;&gt;&lt;code&gt;getinfo()&lt;/code&gt;&lt;/a&gt; for a name not currently contained in the archive will raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8b32fb138d3d26eb2c6c8189b67b8f19836af1" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;concurrent.futures#concurrent.futures.Future&quot;&gt;&lt;code&gt;concurrent.futures.Future&lt;/code&gt;&lt;/a&gt; to wait for the result from another OS thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18525775e7d3e9990bbb7242c2b4de6a3c0aa1d" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;ctypes#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; object allocated from shared memory. By default the return value is actually a synchronized wrapper for the object. The object itself can be accessed via the &lt;em&gt;value&lt;/em&gt; attribute of a &lt;a href=&quot;#multiprocessing.Value&quot;&gt;&lt;code&gt;Value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5a082c9794b50016e8fe7760b711dc4071d5a9" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-like-object&quot;&gt;file-like object&lt;/a&gt; that can be used as a temporary storage area. The file is created securely, using the same rules as &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt;. It will be destroyed as soon as it is closed (including an implicit close when the object is garbage collected). Under Unix, the directory entry for the file is either not created at all or is removed immediately after the file is created. Other platforms do not support this; your code should not rely on a temporary file created using this function having or not having a visible name in the file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a07b1c5f80b83f683e65925046a62e2fcf9792e" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; associated with the socket. The exact returned type depends on the arguments given to &lt;a href=&quot;#socket.socket.makefile&quot;&gt;&lt;code&gt;makefile()&lt;/code&gt;&lt;/a&gt;. These arguments are interpreted the same way as by the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function, except the only supported &lt;em&gt;mode&lt;/em&gt; values are &lt;code&gt;'r'&lt;/code&gt; (default), &lt;code&gt;'w'&lt;/code&gt; and &lt;code&gt;'b'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05a204d7562f18ae8e2f077494000f0b7536e6a" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; of groups with up to &lt;em&gt;n&lt;/em&gt; lines of context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33105cc6adb98c885ab5644951ab30f8905f5a44" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; representation of the number: &lt;code&gt;DecimalTuple(sign, digits, exponent)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635450e4bf9518b8fd7feb3503b93094fe18ba51" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-slice&quot;&gt;slice&lt;/a&gt; object representing the set of indices specified by &lt;code&gt;range(start, stop, step)&lt;/code&gt;. The &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;step&lt;/em&gt; arguments default to &lt;code&gt;None&lt;/code&gt;. Slice objects have read-only data attributes &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;step&lt;/code&gt; which merely return the argument values (or their default). They have no other explicit functionality; however they are used by Numerical Python and other third party extensions. Slice objects are also generated when extended indexing syntax is used. For example: &lt;code&gt;a[start:stop:step]&lt;/code&gt; or &lt;code&gt;a[start:stop, i]&lt;/code&gt;. See &lt;a href=&quot;itertools#itertools.islice&quot;&gt;&lt;code&gt;itertools.islice()&lt;/code&gt;&lt;/a&gt; for an alternate version that returns an iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4220c82c2fcc6c977f72daff30e48e68782fcdeb" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; containing up to &lt;em&gt;n&lt;/em&gt; bytes starting from the current file position. If the argument is omitted, &lt;code&gt;None&lt;/code&gt; or negative, return all bytes from the current file position to the end of the mapping. The file position is updated to point after the bytes that were returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9304cded16ac4eba5796861c7e1b018595f8b38e" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;stdtypes#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; of the memory area underlying this buffer. The returned object is a one-dimensional, C-contiguous memoryview with format &lt;code&gt;B&lt;/code&gt; (unsigned bytes). &lt;a href=&quot;exceptions#BufferError&quot;&gt;&lt;code&gt;BufferError&lt;/code&gt;&lt;/a&gt; is raised if the buffer is neither C- nor Fortran-contiguous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674f60cd05982477500edd55b113ecc0c7e01e28" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; version of &lt;em&gt;object&lt;/em&gt;. See &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e09d7019385e2edb16a1c7d5143508edc02bf54" translate="yes" xml:space="preserve">
          <source>Return a &lt;a href=&quot;time#time.struct_time&quot;&gt;&lt;code&gt;time.struct_time&lt;/code&gt;&lt;/a&gt; such as returned by &lt;a href=&quot;time#time.localtime&quot;&gt;&lt;code&gt;time.localtime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10140354b8b47dd8435afa125d67c35422b4afb9" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;*Translations&lt;/code&gt; instance based on the &lt;em&gt;domain&lt;/em&gt;, &lt;em&gt;localedir&lt;/em&gt;, and &lt;em&gt;languages&lt;/em&gt;, which are first passed to &lt;a href=&quot;#gettext.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; to get a list of the associated &lt;code&gt;.mo&lt;/code&gt; file paths. Instances with identical &lt;code&gt;.mo&lt;/code&gt; file names are cached. The actual class instantiated is &lt;em&gt;class_&lt;/em&gt; if provided, otherwise &lt;a href=&quot;#gettext.GNUTranslations&quot;&gt;&lt;code&gt;GNUTranslations&lt;/code&gt;&lt;/a&gt;. The class&amp;rsquo;s constructor must take a single &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; argument. If provided, &lt;em&gt;codeset&lt;/em&gt; will change the charset used to encode translated strings in the &lt;a href=&quot;#gettext.NullTranslations.lgettext&quot;&gt;&lt;code&gt;lgettext()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#gettext.NullTranslations.lngettext&quot;&gt;&lt;code&gt;lngettext()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1637d96e5bb4aa703fdbf2600c875279b1806ca" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;Document&lt;/code&gt; from the given input. &lt;em&gt;filename_or_file&lt;/em&gt; may be either a file name, or a file-like object. &lt;em&gt;parser&lt;/em&gt;, if given, must be a SAX2 parser object. This function will change the document handler of the parser and activate namespace support; other parser configuration (like setting an entity resolver) must have been done in advance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c6d81c48b0eaf05e3509239676422938e63ad9" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;Document&lt;/code&gt; that represents the &lt;em&gt;string&lt;/em&gt;. This method creates an &lt;a href=&quot;io#io.StringIO&quot;&gt;&lt;code&gt;io.StringIO&lt;/code&gt;&lt;/a&gt; object for the string and passes that on to &lt;a href=&quot;#xml.dom.minidom.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c53380f7496a95d30609305f29d0191668952b" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;str&lt;/code&gt; containing the entire contents of the buffer. Newlines are decoded as if by &lt;a href=&quot;#io.TextIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;, although the stream position is not changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91848d5fe8b3274c5f30e3c80b6b6ac14dec5de" translate="yes" xml:space="preserve">
          <source>Return a &lt;em&gt;k&lt;/em&gt; length list of unique elements chosen from the population sequence or set. Used for random sampling without replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0ba304118dc72fe63d541f2a15332b652c8abc" translate="yes" xml:space="preserve">
          <source>Return a &lt;em&gt;k&lt;/em&gt; sized list of elements chosen from the &lt;em&gt;population&lt;/em&gt; with replacement. If the &lt;em&gt;population&lt;/em&gt; is empty, raises &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962878c47da0f09f10f42a0354d60a5cb6ceb47c" translate="yes" xml:space="preserve">
          <source>Return a &lt;em&gt;m&lt;/em&gt;-column calendar for an entire year as a multi-line string. Optional parameters &lt;em&gt;w&lt;/em&gt;, &lt;em&gt;l&lt;/em&gt;, and &lt;em&gt;c&lt;/em&gt; are for date column width, lines per week, and number of spaces between month columns, respectively. Depends on the first weekday as specified in the constructor or set by the &lt;a href=&quot;#calendar.setfirstweekday&quot;&gt;&lt;code&gt;setfirstweekday()&lt;/code&gt;&lt;/a&gt; method. The earliest year for which a calendar can be generated is platform-dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2962c6d0f3aeb210fa67492c4e73b5579ada0721" translate="yes" xml:space="preserve">
          <source>Return a Boolean value, i.e. one of &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;x&lt;/em&gt; is converted using the standard &lt;a href=&quot;stdtypes#truth&quot;&gt;truth testing procedure&lt;/a&gt;. If &lt;em&gt;x&lt;/em&gt; is false or omitted, this returns &lt;code&gt;False&lt;/code&gt;; otherwise it returns &lt;code&gt;True&lt;/code&gt;. The &lt;a href=&quot;#bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt; class is a subclass of &lt;a href=&quot;#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;stdtypes#typesnumeric&quot;&gt;Numeric Types &amp;mdash; int, float, complex&lt;/a&gt;). It cannot be subclassed further. Its only instances are &lt;code&gt;False&lt;/code&gt; and &lt;code&gt;True&lt;/code&gt; (see &lt;a href=&quot;stdtypes#bltin-boolean-values&quot;&gt;Boolean Values&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d76903fddd0cf6f0bb64a3ecab7a70c22a30783" translate="yes" xml:space="preserve">
          <source>Return a JSON string representation of a Python data structure, &lt;em&gt;o&lt;/em&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ca499d9bc9e98e82727fd3e0f9233c56960e3f" translate="yes" xml:space="preserve">
          <source>Return a bitmask of the audio output formats supported by the soundcard. Some of the formats supported by OSS are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70e658d9620732400af1a65173a5e8177c65630" translate="yes" xml:space="preserve">
          <source>Return a breakpoint specified by the given number. If &lt;em&gt;arg&lt;/em&gt; is a string, it will be converted to a number. If &lt;em&gt;arg&lt;/em&gt; is a non-numeric string, if the given breakpoint never existed or has been deleted, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc789450f72261ebe91f1a4266382736b049781" translate="yes" xml:space="preserve">
          <source>Return a byte representation of the message corresponding to &lt;em&gt;key&lt;/em&gt;, or raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception if no such message exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767aaa2b935925c35dc34534a5e8807d717e29b5" translate="yes" xml:space="preserve">
          <source>Return a bytes array convertible to a human-readable description of the type of compression used in the audio file. For AIFF files, the returned value is &lt;code&gt;b'not compressed'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ccd234f217e4307612d7d19f10813af9e9beda" translate="yes" xml:space="preserve">
          <source>Return a bytes array of length 4 describing the type of compression used in the audio file. For AIFF files, the returned value is &lt;code&gt;b'NONE'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffeadb6ca26584507e463832e9078f18e1aea9c" translate="yes" xml:space="preserve">
          <source>Return a bytes object containing the terminfo long name field describing the current terminal. The maximum length of a verbose description is 128 characters. It is defined only after the call to &lt;a href=&quot;#curses.initscr&quot;&gt;&lt;code&gt;initscr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2b56128b8a76fa98cd3230029a65394c9ce284" translate="yes" xml:space="preserve">
          <source>Return a bytes object containing the values &lt;em&gt;v1&lt;/em&gt;, &lt;em&gt;v2&lt;/em&gt;, &amp;hellip; packed according to the format string &lt;em&gt;format&lt;/em&gt;. The arguments must match the values required by the format exactly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba5f6e5821a134692a05f916ca4880d857c55d9" translate="yes" xml:space="preserve">
          <source>Return a bytes object of characters, extracted from the window starting at the current cursor position, or at &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;x&lt;/em&gt; if specified. Attributes are stripped from the characters. If &lt;em&gt;n&lt;/em&gt; is specified, &lt;a href=&quot;#curses.window.instr&quot;&gt;&lt;code&gt;instr()&lt;/code&gt;&lt;/a&gt; returns a string at most &lt;em&gt;n&lt;/em&gt; characters long (exclusive of the trailing NUL).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e620b99a4069489fcf3ffdc27b8f5c317059f0" translate="yes" xml:space="preserve">
          <source>Return a bytes object which is a printable representation of the character &lt;em&gt;ch&lt;/em&gt;. Control characters are represented as a caret followed by the character, for example as &lt;code&gt;b'^C'&lt;/code&gt;. Printing characters are left as they are.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5181bedb7610c00f40287d97b06e261a6bf94e3f" translate="yes" xml:space="preserve">
          <source>Return a bytes or bytearray object which is the concatenation of the binary data sequences in &lt;em&gt;iterable&lt;/em&gt;. A &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be raised if there are any values in &lt;em&gt;iterable&lt;/em&gt; that are not &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;, including &lt;a href=&quot;#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects. The separator between elements is the contents of the bytes or bytearray object providing this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe46d54f7e848b6783d2d91144ed37c22b43913" translate="yes" xml:space="preserve">
          <source>Return a bytestring containing the bytes read. If the end of the file referred to by &lt;em&gt;fd&lt;/em&gt; has been reached, an empty bytes object is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5525718cc437d5a71736f70635590d050e15b4" translate="yes" xml:space="preserve">
          <source>Return a bytestring representing the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bad0b99ecfe93f2c36d120f0148c8029f442c7" translate="yes" xml:space="preserve">
          <source>Return a callable finalizer object which will be called when &lt;em&gt;obj&lt;/em&gt; is garbage collected. Unlike an ordinary weak reference, a finalizer will always survive until the reference object is collected, greatly simplifying lifecycle management.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a617ae10fe6aac9a7d4eb887daf21381940d1b" translate="yes" xml:space="preserve">
          <source>Return a callable object that calls the method &lt;em&gt;name&lt;/em&gt; on its operand. If additional arguments and/or keyword arguments are given, they will be given to the method as well. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfd7b5dfd71119a4d9a77ec1267055c7d55bc94" translate="yes" xml:space="preserve">
          <source>Return a callable object that fetches &lt;em&gt;attr&lt;/em&gt; from its operand. If more than one attribute is requested, returns a tuple of attributes. The attribute names can also contain dots. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb92f05a3f6d507d211b854a7e8b5eaf88a6fda8" translate="yes" xml:space="preserve">
          <source>Return a callable object that fetches &lt;em&gt;item&lt;/em&gt; from its operand using the operand&amp;rsquo;s &lt;a href=&quot;#operator.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method. If multiple items are specified, returns a tuple of lookup values. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c49877facab3582f83bc43a329eb4d2f6148e1e" translate="yes" xml:space="preserve">
          <source>Return a callable which is used to create a &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bd1eabe46e7d7ece5bd98960078302298ba678" translate="yes" xml:space="preserve">
          <source>Return a casefolded copy of the string. Casefolded strings may be used for caseless matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b715167ebe3050ceefb8d1face423c219a4850a" translate="yes" xml:space="preserve">
          <source>Return a complete message of byte data sent from the other end of the connection as a string. Blocks until there is something to receive. Raises &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; if there is nothing left to receive and the other end has closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee290953c0904f27c89d0b3e41ebbbc41f05458" translate="yes" xml:space="preserve">
          <source>Return a complex number with the value &lt;em&gt;real&lt;/em&gt; + &lt;em&gt;imag&lt;/em&gt;*1j or convert a string or number to a complex number. If the first parameter is a string, it will be interpreted as a complex number and the function must be called without a second parameter. The second parameter can never be a string. Each argument may be any numeric type (including complex). If &lt;em&gt;imag&lt;/em&gt; is omitted, it defaults to zero and the constructor serves as a numeric conversion like &lt;a href=&quot;#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. If both arguments are omitted, returns &lt;code&gt;0j&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702039f33506b2b2651e56be75f0bad9562e4d0e" translate="yes" xml:space="preserve">
          <source>Return a context manager that closes &lt;em&gt;thing&lt;/em&gt; upon completion of the block. This is basically equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bcfc996841df6b12a648f82a04e65fae0e3778c" translate="yes" xml:space="preserve">
          <source>Return a context manager that returns &lt;em&gt;enter_result&lt;/em&gt; from &lt;code&gt;__enter__&lt;/code&gt;, but otherwise does nothing. It is intended to be used as a stand-in for an optional context manager, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957f75d477ab846a8eb94b4c2c24f292be248486" translate="yes" xml:space="preserve">
          <source>Return a context manager that suppresses any of the specified exceptions if they occur in the body of a with statement and then resumes execution with the first statement following the end of the with statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6492fbb3271789a09ad84d95507c218267a8b55c" translate="yes" xml:space="preserve">
          <source>Return a context manager that will set the current context for the active thread to a copy of &lt;em&gt;ctx&lt;/em&gt; on entry to the with-statement and restore the previous context when exiting the with-statement. If no context is specified, a copy of the current context is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4c010a9a1fa2a8a64fdb0919df456e0a98384e" translate="yes" xml:space="preserve">
          <source>Return a context manager which executes the enclosed code block as a subtest. &lt;em&gt;msg&lt;/em&gt; and &lt;em&gt;params&lt;/em&gt; are optional, arbitrary values which are displayed whenever a subtest fails, allowing you to identify them clearly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d531e92f06c39a225e89089b92c8d1da83e8674f" translate="yes" xml:space="preserve">
          <source>Return a context object which has the same attributes as the &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3e861d50391f79dfa397314fbfe38e276b2c7a" translate="yes" xml:space="preserve">
          <source>Return a controller object for the browser type &lt;em&gt;using&lt;/em&gt;. If &lt;em&gt;using&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, return a controller for a default browser appropriate to the caller&amp;rsquo;s environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0cbd7d033c43f7739dd06c09bf533813439999" translate="yes" xml:space="preserve">
          <source>Return a copy (&amp;ldquo;clone&amp;rdquo;) of the hash object. This can be used to efficiently compute the digests of data sharing a common initial substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a02c7a6349e21bdc2ebeca711d64643f2019e08" translate="yes" xml:space="preserve">
          <source>Return a copy (&amp;ldquo;clone&amp;rdquo;) of the hmac object. This can be used to efficiently compute the digests of strings that share a common initial substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb8ac98eaf5d78d1aadf55fa33f47601429f4a4" translate="yes" xml:space="preserve">
          <source>Return a copy of &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3e330d65ed757298dfa52ef9e4ecd5a3465766" translate="yes" xml:space="preserve">
          <source>Return a copy of the Decimal instance num.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4581d9da69358d1cbeb75ea9009d6e07646ebfe" translate="yes" xml:space="preserve">
          <source>Return a copy of the bytes or bytearray object where all bytes occurring in the optional argument &lt;em&gt;delete&lt;/em&gt; are removed, and the remaining bytes have been mapped through the given translation table, which must be a bytes object of length 256.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db3cd152a411e6ffc34fafc45f8eca33fb89854" translate="yes" xml:space="preserve">
          <source>Return a copy of the code object with new values for the specified fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ed916c587c70a8418d11fff988b78ce33abacf" translate="yes" xml:space="preserve">
          <source>Return a copy of the first operand with the sign set to be the same as the sign of the second operand. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1571ee0541ea83765e43e1eb14f1d649a6320825" translate="yes" xml:space="preserve">
          <source>Return a copy of the object centered in a sequence of length &lt;em&gt;width&lt;/em&gt;. Padding is done using the specified &lt;em&gt;fillbyte&lt;/em&gt; (default is an ASCII space). For &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects, the original sequence is returned if &lt;em&gt;width&lt;/em&gt; is less than or equal to &lt;code&gt;len(s)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d11a14b1e843d2d95ec8710879189aeee0bbd3" translate="yes" xml:space="preserve">
          <source>Return a copy of the object left justified in a sequence of length &lt;em&gt;width&lt;/em&gt;. Padding is done using the specified &lt;em&gt;fillbyte&lt;/em&gt; (default is an ASCII space). For &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects, the original sequence is returned if &lt;em&gt;width&lt;/em&gt; is less than or equal to &lt;code&gt;len(s)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764d199a9df07a849645b101668ed8b54c4de47a" translate="yes" xml:space="preserve">
          <source>Return a copy of the object right justified in a sequence of length &lt;em&gt;width&lt;/em&gt;. Padding is done using the specified &lt;em&gt;fillbyte&lt;/em&gt; (default is an ASCII space). For &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects, the original sequence is returned if &lt;em&gt;width&lt;/em&gt; is less than or equal to &lt;code&gt;len(s)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddbeba2309d53cc474312f72d4f07b327cadefb" translate="yes" xml:space="preserve">
          <source>Return a copy of the referent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96b5f2208392a2610458b865107a636f54337c5" translate="yes" xml:space="preserve">
          <source>Return a copy of the sequence left filled with ASCII &lt;code&gt;b'0'&lt;/code&gt; digits to make a sequence of length &lt;em&gt;width&lt;/em&gt;. A leading sign prefix (&lt;code&gt;b'+'&lt;/code&gt;/ &lt;code&gt;b'-'&lt;/code&gt;) is handled by inserting the padding &lt;em&gt;after&lt;/em&gt; the sign character rather than before. For &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects, the original sequence is returned if &lt;em&gt;width&lt;/em&gt; is less than or equal to &lt;code&gt;len(seq)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380259764bad4797e0f46e74282988f7a63f4fe3" translate="yes" xml:space="preserve">
          <source>Return a copy of the sequence where all ASCII tab characters are replaced by one or more ASCII spaces, depending on the current column and the given tab size. Tab positions occur every &lt;em&gt;tabsize&lt;/em&gt; bytes (default is 8, giving tab positions at columns 0, 8, 16 and so on). To expand the sequence, the current column is set to zero and the sequence is examined byte by byte. If the byte is an ASCII tab character (&lt;code&gt;b'\t'&lt;/code&gt;), one or more space characters are inserted in the result until the current column is equal to the next tab position. (The tab character itself is not copied.) If the current byte is an ASCII newline (&lt;code&gt;b'\n'&lt;/code&gt;) or carriage return (&lt;code&gt;b'\r'&lt;/code&gt;), it is copied and the current column is reset to zero. Any other byte value is copied unchanged and the current column is incremented by one regardless of how the byte value is represented when printed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23dd296cd8bceabc5c16f7b4a9163c6e8faeda32" translate="yes" xml:space="preserve">
          <source>Return a copy of the sequence with all occurrences of subsequence &lt;em&gt;old&lt;/em&gt; replaced by &lt;em&gt;new&lt;/em&gt;. If the optional argument &lt;em&gt;count&lt;/em&gt; is given, only the first &lt;em&gt;count&lt;/em&gt; occurrences are replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9d1bd39df716703a70982434169d070ea617da" translate="yes" xml:space="preserve">
          <source>Return a copy of the sequence with all the lowercase ASCII characters converted to their corresponding uppercase counterpart and vice-versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee6cc0f859832bfbfb8e7b0f4b3bfd7c80e4d22" translate="yes" xml:space="preserve">
          <source>Return a copy of the sequence with all the lowercase ASCII characters converted to their corresponding uppercase counterpart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bd827468d5b9fb132d943aeb80a9b2525feea5" translate="yes" xml:space="preserve">
          <source>Return a copy of the sequence with all the uppercase ASCII characters converted to their corresponding lowercase counterpart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed22ae2b925621872665bd1cd97494705ba0d923" translate="yes" xml:space="preserve">
          <source>Return a copy of the sequence with each byte interpreted as an ASCII character, and the first byte capitalized and the rest lowercased. Non-ASCII byte values are passed through unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf64ff518c60b13e9c7829dccf816a15736ad4a0" translate="yes" xml:space="preserve">
          <source>Return a copy of the sequence with specified leading and trailing bytes removed. The &lt;em&gt;chars&lt;/em&gt; argument is a binary sequence specifying the set of byte values to be removed - the name refers to the fact this method is usually used with ASCII characters. If omitted or &lt;code&gt;None&lt;/code&gt;, the &lt;em&gt;chars&lt;/em&gt; argument defaults to removing ASCII whitespace. The &lt;em&gt;chars&lt;/em&gt; argument is not a prefix or suffix; rather, all combinations of its values are stripped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f8486f36d077fb2ac43d2021a769afa91c89fc" translate="yes" xml:space="preserve">
          <source>Return a copy of the sequence with specified leading bytes removed. The &lt;em&gt;chars&lt;/em&gt; argument is a binary sequence specifying the set of byte values to be removed - the name refers to the fact this method is usually used with ASCII characters. If omitted or &lt;code&gt;None&lt;/code&gt;, the &lt;em&gt;chars&lt;/em&gt; argument defaults to removing ASCII whitespace. The &lt;em&gt;chars&lt;/em&gt; argument is not a prefix; rather, all combinations of its values are stripped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fdcd0c116279864742e2256e62ab90cfbcdd1b8" translate="yes" xml:space="preserve">
          <source>Return a copy of the sequence with specified trailing bytes removed. The &lt;em&gt;chars&lt;/em&gt; argument is a binary sequence specifying the set of byte values to be removed - the name refers to the fact this method is usually used with ASCII characters. If omitted or &lt;code&gt;None&lt;/code&gt;, the &lt;em&gt;chars&lt;/em&gt; argument defaults to removing ASCII whitespace. The &lt;em&gt;chars&lt;/em&gt; argument is not a suffix; rather, all combinations of its values are stripped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1850fde0a8cfcf66a315965b3ac9edf8ef443219" translate="yes" xml:space="preserve">
          <source>Return a copy of the string in which each character has been mapped through the given translation table. The table must be an object that implements indexing via &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;, typically a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-mapping&quot;&gt;mapping&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-sequence&quot;&gt;sequence&lt;/a&gt;. When indexed by a Unicode ordinal (an integer), the table object can do any of the following: return a Unicode ordinal or a string, to map the character to one or more other characters; return &lt;code&gt;None&lt;/code&gt;, to delete the character from the return string; or raise a &lt;a href=&quot;exceptions#LookupError&quot;&gt;&lt;code&gt;LookupError&lt;/code&gt;&lt;/a&gt; exception, to map the character to itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46f812bd7c68021b006fef816a224b3b2044eeb" translate="yes" xml:space="preserve">
          <source>Return a copy of the string left filled with ASCII &lt;code&gt;'0'&lt;/code&gt; digits to make a string of length &lt;em&gt;width&lt;/em&gt;. A leading sign prefix (&lt;code&gt;'+'&lt;/code&gt;/&lt;code&gt;'-'&lt;/code&gt;) is handled by inserting the padding &lt;em&gt;after&lt;/em&gt; the sign character rather than before. The original string is returned if &lt;em&gt;width&lt;/em&gt; is less than or equal to &lt;code&gt;len(s)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2ab91637f6842ea4f2dd993b22529ab704c953" translate="yes" xml:space="preserve">
          <source>Return a copy of the string where all tab characters are replaced by one or more spaces, depending on the current column and the given tab size. Tab positions occur every &lt;em&gt;tabsize&lt;/em&gt; characters (default is 8, giving tab positions at columns 0, 8, 16 and so on). To expand the string, the current column is set to zero and the string is examined character by character. If the character is a tab (&lt;code&gt;\t&lt;/code&gt;), one or more space characters are inserted in the result until the current column is equal to the next tab position. (The tab character itself is not copied.) If the character is a newline (&lt;code&gt;\n&lt;/code&gt;) or return (&lt;code&gt;\r&lt;/code&gt;), it is copied and the current column is reset to zero. Any other character is copied unchanged and the current column is incremented by one regardless of how the character is represented when printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a250d40628efee823c9d4da8e36610d222d39a43" translate="yes" xml:space="preserve">
          <source>Return a copy of the string with all occurrences of substring &lt;em&gt;old&lt;/em&gt; replaced by &lt;em&gt;new&lt;/em&gt;. If the optional argument &lt;em&gt;count&lt;/em&gt; is given, only the first &lt;em&gt;count&lt;/em&gt; occurrences are replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99aee942008ac13ec998cfb51412027e3a749091" translate="yes" xml:space="preserve">
          <source>Return a copy of the string with all the cased characters &lt;a href=&quot;#id15&quot; id=&quot;id8&quot;&gt;4&lt;/a&gt; converted to lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced369facd8a91f1085bd7b866112fbf019e976d" translate="yes" xml:space="preserve">
          <source>Return a copy of the string with all the cased characters &lt;a href=&quot;#id15&quot; id=&quot;id9&quot;&gt;4&lt;/a&gt; converted to uppercase. Note that &lt;code&gt;s.upper().isupper()&lt;/code&gt; might be &lt;code&gt;False&lt;/code&gt; if &lt;code&gt;s&lt;/code&gt; contains uncased characters or if the Unicode category of the resulting character(s) is not &amp;ldquo;Lu&amp;rdquo; (Letter, uppercase), but e.g. &amp;ldquo;Lt&amp;rdquo; (Letter, titlecase).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1560f0e24107cc1f184aff1e5e5a65600a59fc86" translate="yes" xml:space="preserve">
          <source>Return a copy of the string with its first character capitalized and the rest lowercased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9a6956ba685c578f22e599a67f43e554447785" translate="yes" xml:space="preserve">
          <source>Return a copy of the string with leading characters removed. The &lt;em&gt;chars&lt;/em&gt; argument is a string specifying the set of characters to be removed. If omitted or &lt;code&gt;None&lt;/code&gt;, the &lt;em&gt;chars&lt;/em&gt; argument defaults to removing whitespace. The &lt;em&gt;chars&lt;/em&gt; argument is not a prefix; rather, all combinations of its values are stripped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afc8c5e1d6efa94ecbac9871ac5fd3f34307409" translate="yes" xml:space="preserve">
          <source>Return a copy of the string with the leading and trailing characters removed. The &lt;em&gt;chars&lt;/em&gt; argument is a string specifying the set of characters to be removed. If omitted or &lt;code&gt;None&lt;/code&gt;, the &lt;em&gt;chars&lt;/em&gt; argument defaults to removing whitespace. The &lt;em&gt;chars&lt;/em&gt; argument is not a prefix or suffix; rather, all combinations of its values are stripped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b03d933a27b4d0fe770d5e0d9e86c3cb8733ec2" translate="yes" xml:space="preserve">
          <source>Return a copy of the string with trailing characters removed. The &lt;em&gt;chars&lt;/em&gt; argument is a string specifying the set of characters to be removed. If omitted or &lt;code&gt;None&lt;/code&gt;, the &lt;em&gt;chars&lt;/em&gt; argument defaults to removing whitespace. The &lt;em&gt;chars&lt;/em&gt; argument is not a suffix; rather, all combinations of its values are stripped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1c8fdbf23e19fbe0842f24d2f52e1704edbded" translate="yes" xml:space="preserve">
          <source>Return a copy of the string with uppercase characters converted to lowercase and vice versa. Note that it is not necessarily true that &lt;code&gt;s.swapcase().swapcase() == s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0ff0cb416f5b4f13bcf1404000c579daa0d561" translate="yes" xml:space="preserve">
          <source>Return a count of messages in the mailbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee241fa25fa9689b15b89cd13b33081653ea735" translate="yes" xml:space="preserve">
          <source>Return a ctypes array allocated from shared memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45831548ac71472a107bd1557b5119f8acae6a0" translate="yes" xml:space="preserve">
          <source>Return a ctypes array allocated from shared memory. By default the return value is actually a synchronized wrapper for the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ffb9cdf21b11e080594837f5bbbe7938050bda2" translate="yes" xml:space="preserve">
          <source>Return a ctypes object allocated from shared memory which is a copy of the ctypes object &lt;em&gt;obj&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e59930dde13ec95006b83e77d7a3121234e4eb" translate="yes" xml:space="preserve">
          <source>Return a ctypes object allocated from shared memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8350339fb178b91310109ad0a98d9f21d2eabb98" translate="yes" xml:space="preserve">
          <source>Return a date with the same value, except for those parameters given new values by whichever keyword arguments are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed300582792cc798d98f7ab51097006d35aab15" translate="yes" xml:space="preserve">
          <source>Return a datetime with the same attributes, except for those attributes given new values by whichever keyword arguments are specified. Note that &lt;code&gt;tzinfo=None&lt;/code&gt; can be specified to create a naive datetime from an aware datetime with no conversion of date and time data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d200aa95d9e9d83f18e40e528d26d70fb72a9f" translate="yes" xml:space="preserve">
          <source>Return a deep copy of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ae66b89a71eea8d2e5d4c93ebd610c220e06f7" translate="yes" xml:space="preserve">
          <source>Return a dictionary containing all installation paths corresponding to an installation scheme. See &lt;a href=&quot;#sysconfig.get_path&quot;&gt;&lt;code&gt;get_path()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fcc7db9406a9b617e4e4cdce4a38a45c0058b3" translate="yes" xml:space="preserve">
          <source>Return a dictionary containing all the &lt;em&gt;named&lt;/em&gt; subgroups of the match, keyed by the subgroup name. The &lt;em&gt;default&lt;/em&gt; argument is used for groups that did not participate in the match; it defaults to &lt;code&gt;None&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800735499722409e0cea8a7cadd97fbdd9afd341" translate="yes" xml:space="preserve">
          <source>Return a dictionary containing the instance-wide defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cde30d4c786652eafcea4447d647431e4c64335" translate="yes" xml:space="preserve">
          <source>Return a dictionary containing type hints for a function, method, module or class object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349b9e2e6f3abf764bdb731a0676ec7868e664ba" translate="yes" xml:space="preserve">
          <source>Return a dictionary mapping &lt;em&gt;key&lt;/em&gt; to &lt;em&gt;value&lt;/em&gt; such that &lt;code&gt;match(key,
mapname)==value&lt;/code&gt;. Note that both keys and values of the dictionary are arbitrary arrays of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d820929913ed390b045b4df56900301410a49e9" translate="yes" xml:space="preserve">
          <source>Return a dictionary mapping each thread&amp;rsquo;s identifier to the topmost stack frame currently active in that thread at the time the function is called. Note that functions in the &lt;a href=&quot;traceback#module-traceback&quot;&gt;&lt;code&gt;traceback&lt;/code&gt;&lt;/a&gt; module can build the call stack given such a frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45457606ea43252442e5ca2f693413ea1c1a9b7" translate="yes" xml:space="preserve">
          <source>Return a dictionary mapping module-level class names to class descriptors. If possible, descriptors for imported base classes are included. Parameter &lt;em&gt;module&lt;/em&gt; is a string with the name of the module to read; it may be the name of a module within a package. If given, &lt;em&gt;path&lt;/em&gt; is a sequence of directory paths prepended to &lt;code&gt;sys.path&lt;/code&gt;, which is used to locate the module source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0297cfc5810b1e2cc3863bd254772264e9fc5640" translate="yes" xml:space="preserve">
          <source>Return a dictionary of sequence names mapped to key lists. If there are no sequences, the empty dictionary is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ca8b25611e32b84007ffe8ea3d448f6caec29f" translate="yes" xml:space="preserve">
          <source>Return a dictionary representing the current global symbol table. This is always the dictionary of the current module (inside a function or method, this is the module where it is defined, not the module from which it is called).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fb4db60506dcba11a70784f3bb9a85f3ca2df6" translate="yes" xml:space="preserve">
          <source>Return a dictionary-based tree containing a function or class descriptors for each function and class defined in the module with a &lt;code&gt;def&lt;/code&gt; or &lt;code&gt;class&lt;/code&gt; statement. The returned dictionary maps module-level function and class names to their descriptors. Nested objects are entered into the children dictionary of their parent. As with readmodule, &lt;em&gt;module&lt;/em&gt; names the module to be read and &lt;em&gt;path&lt;/em&gt; is prepended to sys.path. If the module being read is a package, the returned dictionary has a key &lt;code&gt;'__path__'&lt;/code&gt; whose value is a list containing the package search path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f74f5e42c6e67f496235e4c8423dd8571aa7a6" translate="yes" xml:space="preserve">
          <source>Return a duplicate of file descriptor &lt;em&gt;fd&lt;/em&gt;. The new file descriptor is &lt;a href=&quot;#fd-inheritance&quot;&gt;non-inheritable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a2e79d55423b20321c95872ecab16cb8dc0076" translate="yes" xml:space="preserve">
          <source>Return a duplicate of the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ed70933eb05e94fc998dc29d12ddb89e647ef1" translate="yes" xml:space="preserve">
          <source>Return a factor &lt;em&gt;F&lt;/em&gt; such that &lt;code&gt;rms(add(fragment, mul(reference, -F)))&lt;/code&gt; is minimal, i.e., return the factor with which you should multiply &lt;em&gt;reference&lt;/em&gt; to make it match as well as possible to &lt;em&gt;fragment&lt;/em&gt;. The fragments should both contain 2-byte samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13249bbe7080a1e38d97b37b9be129daf32f7d6b" translate="yes" xml:space="preserve">
          <source>Return a file-like object, open to &lt;em&gt;file&lt;/em&gt;, but read from or written to by the pipeline. Note that only one of &lt;code&gt;'r'&lt;/code&gt;, &lt;code&gt;'w'&lt;/code&gt; may be given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd20598c7316d7b0b09924c65ade24dfe636bdc" translate="yes" xml:space="preserve">
          <source>Return a file-like representation of the message corresponding to &lt;em&gt;key&lt;/em&gt;, or raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception if no such message exists. The file-like object behaves as if open in binary mode. This file should be closed once it is no longer needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234d48c6f359a84698ff69536d76e232b6a1b345" translate="yes" xml:space="preserve">
          <source>Return a float with the magnitude (absolute value) of &lt;em&gt;x&lt;/em&gt; but the sign of &lt;em&gt;y&lt;/em&gt;. On platforms that support signed zeros, &lt;code&gt;copysign(1.0, -0.0)&lt;/code&gt; returns &lt;em&gt;-1.0&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d368b1160f57ab6c955cee76eb4db14420a0d1d" translate="yes" xml:space="preserve">
          <source>Return a floating point number constructed from a number or string &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60241263d8af2831e6f9469c7769ae14ce2b913f" translate="yes" xml:space="preserve">
          <source>Return a formatted dump of the tree in &lt;em&gt;node&lt;/em&gt;. This is mainly useful for debugging purposes. If &lt;em&gt;annotate_fields&lt;/em&gt; is true (by default), the returned string will show the names and the values for fields. If &lt;em&gt;annotate_fields&lt;/em&gt; is false, the result string will be more compact by omitting unambiguous field names. Attributes such as line numbers and column offsets are not dumped by default. If this is wanted, &lt;em&gt;include_attributes&lt;/em&gt; can be set to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6863f1d6f304359abb608f2032f7644e955356" translate="yes" xml:space="preserve">
          <source>Return a formatted multi-line string with detailed code object information for the supplied function, generator, asynchronous generator, coroutine, method, source code string or code object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebd9e31374e5fb79e6df28e12a2b86a0d1a3c81" translate="yes" xml:space="preserve">
          <source>Return a formatted multi-line string with detailed information about the code object, like &lt;a href=&quot;#dis.code_info&quot;&gt;&lt;code&gt;code_info()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ede28c4bba5136ff027142299aaef1f7d1a929" translate="yes" xml:space="preserve">
          <source>Return a formatted view of the bytecode operations (the same as printed by &lt;a href=&quot;#dis.dis&quot;&gt;&lt;code&gt;dis.dis()&lt;/code&gt;&lt;/a&gt;, but returned as a multi-line string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bcc2a40237d46ab4abe016cfaaf88155faf40c" translate="yes" xml:space="preserve">
          <source>Return a fragment that has all samples in the original fragment multiplied by the floating-point value &lt;em&gt;factor&lt;/em&gt;. Samples are truncated in case of overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4afbcedf802d11fa56072d09b283d21edfb973e" translate="yes" xml:space="preserve">
          <source>Return a fragment that is the original fragment with a bias added to each sample. Samples wrap around in case of overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b4fb449f0a469fc8aff3c8ddcef45bf6142cb3" translate="yes" xml:space="preserve">
          <source>Return a fragment which is the addition of the two samples passed as parameters. &lt;em&gt;width&lt;/em&gt; is the sample width in bytes, either &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;. Both fragments should have the same length. Samples are truncated in case of overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf94b1e0020c70e0698ab11e0b07062f0944500" translate="yes" xml:space="preserve">
          <source>Return a frame object from the call stack. If optional integer &lt;em&gt;depth&lt;/em&gt; is given, return the frame object that many calls below the top of the stack. If that is deeper than the call stack, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. The default for &lt;em&gt;depth&lt;/em&gt; is zero, returning the frame at the top of the call stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c276544000cac698cdeff1ae90b58c090c6a3c3c" translate="yes" xml:space="preserve">
          <source>Return a fully qualified domain name for &lt;em&gt;name&lt;/em&gt;. If &lt;em&gt;name&lt;/em&gt; is omitted or empty, it is interpreted as the local host. To find the fully qualified name, the hostname returned by &lt;a href=&quot;#socket.gethostbyaddr&quot;&gt;&lt;code&gt;gethostbyaddr()&lt;/code&gt;&lt;/a&gt; is checked, followed by aliases for the host, if available. The first name which includes a period is selected. In case no fully qualified domain name is available, the hostname as returned by &lt;a href=&quot;#socket.gethostname&quot;&gt;&lt;code&gt;gethostname()&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67573edf3d4b319daf06bf97e63b736c95aad8a9" translate="yes" xml:space="preserve">
          <source>Return a guess for whether &lt;code&gt;wsgi.url_scheme&lt;/code&gt; should be &amp;ldquo;http&amp;rdquo; or &amp;ldquo;https&amp;rdquo;, by checking for a &lt;code&gt;HTTPS&lt;/code&gt; environment variable in the &lt;em&gt;environ&lt;/em&gt; dictionary. The return value is a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66033224da55e6cc17458a8ec8074a0c202bde74" translate="yes" xml:space="preserve">
          <source>Return a header containing abbreviated weekday names. &lt;em&gt;n&lt;/em&gt; specifies the width in characters for one weekday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbd967109059682c2f91e1a3d74bf3cc09d6361" translate="yes" xml:space="preserve">
          <source>Return a human-readable message describing the error condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5339fec864cf316473c223f5de6cfb4a1d9de94e" translate="yes" xml:space="preserve">
          <source>Return a key suitable for sorting between networks and addresses. Address and Network objects are not sortable by default; they&amp;rsquo;re fundamentally different, so the expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0ae60cd803dc43e2dd8f50c593ff19079f3199" translate="yes" xml:space="preserve">
          <source>Return a list containing a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object for each member of the archive. The objects are in the same order as their entries in the actual ZIP file on disk if an existing archive was opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b157e3f9d5244dd63a58d11192d675e976dd4e2b" translate="yes" xml:space="preserve">
          <source>Return a list containing all global site-packages directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73957b7c3fec10cf3642f2e0d6252795500a9fe1" translate="yes" xml:space="preserve">
          <source>Return a list containing the character set names in the message. If the message is a &lt;em&gt;multipart&lt;/em&gt;, then the list will contain one element for each subpart in the payload, otherwise, it will be a list of length 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89306da2b5a769d71491dac69e3a52a3bd9d395" translate="yes" xml:space="preserve">
          <source>Return a list containing the names of the entries in the directory given by &lt;em&gt;path&lt;/em&gt;. The list is in arbitrary order, and does not include the special entries &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt; even if they are present in the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a73424e1cb8f23f3a76984f2b76c206f01ddc92" translate="yes" xml:space="preserve">
          <source>Return a list containing the tty attributes for file descriptor &lt;em&gt;fd&lt;/em&gt;, as follows: &lt;code&gt;[iflag, oflag, cflag, lflag, ispeed, ospeed, cc]&lt;/code&gt; where &lt;em&gt;cc&lt;/em&gt; is a list of the tty special characters (each a string of length 1, except the items with indices &lt;code&gt;VMIN&lt;/code&gt; and &lt;code&gt;VTIME&lt;/code&gt;, which are integers when these fields are defined). The interpretation of the flags and the speeds as well as the indexing in the &lt;em&gt;cc&lt;/em&gt; array must be done using the symbolic constants defined in the &lt;a href=&quot;#module-termios&quot;&gt;&lt;code&gt;termios&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e70dd6b3717fc9f5440ba0346f3d5e87463aa9" translate="yes" xml:space="preserve">
          <source>Return a list of (header, value) tuples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357760fdb7d5615690020abf33e47bb06990e035" translate="yes" xml:space="preserve">
          <source>Return a list of 2-tuples containing all the message&amp;rsquo;s field headers and values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8e6adfed675a121e27e980fd99856ea405e943" translate="yes" xml:space="preserve">
          <source>Return a list of 2-tuples containing all variables and their values in the context object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99db9089f6d098d1fa19e1c38f1ee93d85f9d75" translate="yes" xml:space="preserve">
          <source>Return a list of &lt;a href=&quot;#symtable.Symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; instances for names in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40609ccff54a5045f6ba32757650f4325b0e6038" translate="yes" xml:space="preserve">
          <source>Return a list of all &lt;a href=&quot;#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; objects currently alive. The list includes daemonic threads, dummy thread objects created by &lt;a href=&quot;#threading.current_thread&quot;&gt;&lt;code&gt;current_thread()&lt;/code&gt;&lt;/a&gt;, and the main thread. It excludes terminated threads and threads that have not yet been started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbcd74a78d255251e4fb2e47284d695208a2b06" translate="yes" xml:space="preserve">
          <source>Return a list of all available group entries, in arbitrary order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399859bf2b8a3b1687e6a53893ee79680d441cce" translate="yes" xml:space="preserve">
          <source>Return a list of all available password database entries, in arbitrary order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed1a275bb267a43133234262490dabf705c5d33" translate="yes" xml:space="preserve">
          <source>Return a list of all available shadow password database entries, in arbitrary order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf304837bace8b0807323aba39803853064ce54e" translate="yes" xml:space="preserve">
          <source>Return a list of all registered formats for unpacking. Each element of the returned sequence is a tuple &lt;code&gt;(name, extensions, description)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fed739e32ddb9df0d5023ee413bc3bcf7336d1" translate="yes" xml:space="preserve">
          <source>Return a list of all the keys used in the dictionary &lt;em&gt;d&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c769e39110bb806c7bab8fab4afc55e46fcb11dd" translate="yes" xml:space="preserve">
          <source>Return a list of all the message&amp;rsquo;s field values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a880c13eccdec3067c7cad5a5d995c6d1fb3071" translate="yes" xml:space="preserve">
          <source>Return a list of all the message&amp;rsquo;s header field names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cda17efa0d7efea0eaef0fe581f3bf82c35e295" translate="yes" xml:space="preserve">
          <source>Return a list of all the values for the field named &lt;em&gt;name&lt;/em&gt;. If there are no such named headers in the message, &lt;em&gt;failobj&lt;/em&gt; is returned (defaults to &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a6032e3933bf0c8695d5532ce59ee556d01125" translate="yes" xml:space="preserve">
          <source>Return a list of all the values for the named header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd446f806213372e7726e0bb6317f057333518b" translate="yes" xml:space="preserve">
          <source>Return a list of all valid maps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba24016c3db9fb25897374d74a6186276a567bbb" translate="yes" xml:space="preserve">
          <source>Return a list of all variables in the context object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8205d8076dde865ff1b648d4691b14c1d5b209" translate="yes" xml:space="preserve">
          <source>Return a list of all variables&amp;rsquo; values in the context object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8401e5ca63aa958f94a40bf1cec2c36f7d8cf7d" translate="yes" xml:space="preserve">
          <source>Return a list of all weak reference and proxy objects which refer to &lt;em&gt;object&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af89b0ddb3c9d632420352da7ea9984caab34064" translate="yes" xml:space="preserve">
          <source>Return a list of archive members by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac7a60505097e0ac56f1a9933e3614935cb26ca" translate="yes" xml:space="preserve">
          <source>Return a list of command line arguments reproducing the current optimization settings in &lt;code&gt;sys.flags&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe100e775167ca446f182d6b8269a854897d5d0" translate="yes" xml:space="preserve">
          <source>Return a list of command line arguments reproducing the current settings in &lt;code&gt;sys.flags&lt;/code&gt; and &lt;code&gt;sys.warnoptions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18089e9daa8a24879f5eda81697e9899878c5ca5" translate="yes" xml:space="preserve">
          <source>Return a list of file names as returned by the &lt;code&gt;NLST&lt;/code&gt; command. The optional &lt;em&gt;argument&lt;/em&gt; is a directory to list (default is the current server directory). Multiple arguments can be used to pass non-standard options to the &lt;code&gt;NLST&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5a615e35913e132cf6afbd025ca5302f58c493" translate="yes" xml:space="preserve">
          <source>Return a list of frame records for the caller&amp;rsquo;s stack. The first entry in the returned list represents the caller; the last entry represents the outermost call on the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87627b5f3c8943888b0df323b273a95db5b599f" translate="yes" xml:space="preserve">
          <source>Return a list of frame records for the stack between the current frame and the frame in which an exception currently being handled was raised in. The first entry in the list represents the caller; the last entry represents where the exception was raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ed42104012dd4653bf026442413d9d546ef19c" translate="yes" xml:space="preserve">
          <source>Return a list of labels on the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00659c074b953a80de9712a653e951b4cfa8ce49" translate="yes" xml:space="preserve">
          <source>Return a list of markers in the audio file. A marker consists of a tuple of three elements. The first is the mark ID (an integer), the second is the mark position in frames from the beginning of the data (an integer), the third is the name of the mark (a string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49ec400f19c12fb3f2ab3359897c4b397031558" translate="yes" xml:space="preserve">
          <source>Return a list of names of all currently available turtle shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3334aac6a92eb63beb4175f833f748f86e867d0" translate="yes" xml:space="preserve">
          <source>Return a list of names of symbols in this table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c0e52d53e4d8ba23b13f5e71ecd0f49eeb009e" translate="yes" xml:space="preserve">
          <source>Return a list of namespaces bound to this name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8705ff9a8ecc3de8125498c217c534692ca701" translate="yes" xml:space="preserve">
          <source>Return a list of network interface information (index int, name string) tuples. &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if the system call fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76284851eff7482173f2f41fc780e2975ecb11d" translate="yes" xml:space="preserve">
          <source>Return a list of objects directly referred to by any of the arguments. The referents returned are those objects visited by the arguments&amp;rsquo; C-level &lt;a href=&quot;https://docs.python.org/3.8/c-api/typeobj.html#c.PyTypeObject.tp_traverse&quot;&gt;&lt;code&gt;tp_traverse&lt;/code&gt;&lt;/a&gt; methods (if any), and may not be all objects actually directly reachable. &lt;a href=&quot;https://docs.python.org/3.8/c-api/typeobj.html#c.PyTypeObject.tp_traverse&quot;&gt;&lt;code&gt;tp_traverse&lt;/code&gt;&lt;/a&gt; methods are supported only by objects that support garbage collection, and are only required to visit objects that may be involved in a cycle. So, for example, if an integer is directly reachable from an argument, that integer object may or may not appear in the result list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d216cc74fe27096dcec71f6c929fa587cca900" translate="yes" xml:space="preserve">
          <source>Return a list of options available in the specified &lt;em&gt;section&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11937461fa310eb5e401c8787220a13a452e8c67" translate="yes" xml:space="preserve">
          <source>Return a list of source lines and starting line number for an object. The argument may be a module, class, method, function, traceback, frame, or code object. The source code is returned as a list of the lines corresponding to the object and the line number indicates where in the original source file the first line of code was found. An &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised if the source code cannot be retrieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093c551f70a973ba89819b9677bb63b1da40d7c7" translate="yes" xml:space="preserve">
          <source>Return a list of supported formats for archiving. Each element of the returned sequence is a tuple &lt;code&gt;(name, description)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d2c4107efeb83dda0fed924da8b43f2da9073b" translate="yes" xml:space="preserve">
          <source>Return a list of the &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt;s that are defined by &lt;em&gt;obj&lt;/em&gt;&amp;rsquo;s docstring, or by any of its contained objects&amp;rsquo; docstrings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb1a0058b37276ff08d9849e8d9f8b3e52a6ffe" translate="yes" xml:space="preserve">
          <source>Return a list of the &lt;em&gt;n&lt;/em&gt; most common elements and their counts from the most common to the least. If &lt;em&gt;n&lt;/em&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#collections.Counter.most_common&quot;&gt;&lt;code&gt;most_common()&lt;/code&gt;&lt;/a&gt; returns &lt;em&gt;all&lt;/em&gt; elements in the counter. Elements with equal counts are ordered in the order first encountered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869e127b9c425c7074deb98a76c82d56471ef1e8" translate="yes" xml:space="preserve">
          <source>Return a list of the best &amp;ldquo;good enough&amp;rdquo; matches. &lt;em&gt;word&lt;/em&gt; is a sequence for which close matches are desired (typically a string), and &lt;em&gt;possibilities&lt;/em&gt; is a list of sequences against which to match &lt;em&gt;word&lt;/em&gt; (typically a list of strings).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b5a327a5db06b1ff0833966d4b542dd8785a3e" translate="yes" xml:space="preserve">
          <source>Return a list of the extended filesystem attributes on &lt;em&gt;path&lt;/em&gt;. The attributes in the list are represented as strings decoded with the filesystem encoding. If &lt;em&gt;path&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;#os.listxattr&quot;&gt;&lt;code&gt;listxattr()&lt;/code&gt;&lt;/a&gt; will examine the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4520925e1cd95f77aa944c6cda41b3f749d8d659" translate="yes" xml:space="preserve">
          <source>Return a list of the lines in the binary sequence, breaking at ASCII line boundaries. This method uses the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt; approach to splitting lines. Line breaks are not included in the resulting list unless &lt;em&gt;keepends&lt;/em&gt; is given and true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7f6da1ab42fb6d9ef81988e8eaf391cf4843bc" translate="yes" xml:space="preserve">
          <source>Return a list of the lines in the string, breaking at line boundaries. Line breaks are not included in the resulting list unless &lt;em&gt;keepends&lt;/em&gt; is given and true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f124684ed86ad8eca42d868035207cccf81abc7" translate="yes" xml:space="preserve">
          <source>Return a list of the most frequently occurring values in the order they were first encountered in the &lt;em&gt;data&lt;/em&gt;. Will return more than one result if there are multiple modes or an empty list if the &lt;em&gt;data&lt;/em&gt; is empty:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8440bff539e4b07de49278c9d259525205b76cf3" translate="yes" xml:space="preserve">
          <source>Return a list of the names of all folders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0186aca9ad9ec4090e740dde067ed570adcbfa10" translate="yes" xml:space="preserve">
          <source>Return a list of the names of all user-defined labels used in the mailbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81f71edd2ea8ed3d197aa18ae1058361e39be11" translate="yes" xml:space="preserve">
          <source>Return a list of the names of sequences that include this message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f31c53506b1391cd793e0b6b58ebc70e2ed4c68" translate="yes" xml:space="preserve">
          <source>Return a list of the nested symbol tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6436c3b76c36fc424066efadfb8df012e931c2d1" translate="yes" xml:space="preserve">
          <source>Return a list of the sections available; the &lt;em&gt;default section&lt;/em&gt; is not included in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec125f438f6aa5a03b5ac4a2750590fe36b6d31" translate="yes" xml:space="preserve">
          <source>Return a list of the weeks in the month &lt;em&gt;month&lt;/em&gt; of the &lt;em&gt;year&lt;/em&gt; as full weeks. Weeks are lists of seven &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424c6b23a3561edaaf0a5a3bc3b36ed812b0dce4" translate="yes" xml:space="preserve">
          <source>Return a list of the weeks in the month &lt;em&gt;month&lt;/em&gt; of the &lt;em&gt;year&lt;/em&gt; as full weeks. Weeks are lists of seven day numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cafbeefacc6626f3735bcf086e83fb98ae18fd2" translate="yes" xml:space="preserve">
          <source>Return a list of the weeks in the month &lt;em&gt;month&lt;/em&gt; of the &lt;em&gt;year&lt;/em&gt; as full weeks. Weeks are lists of seven tuples of day numbers and weekday numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddc98d0d0d1418e7598937c8503e5d6e7eb91a4" translate="yes" xml:space="preserve">
          <source>Return a list of the words in the string, using &lt;em&gt;sep&lt;/em&gt; as the delimiter string. If &lt;em&gt;maxsplit&lt;/em&gt; is given, at most &lt;em&gt;maxsplit&lt;/em&gt; splits are done (thus, the list will have at most &lt;code&gt;maxsplit+1&lt;/code&gt; elements). If &lt;em&gt;maxsplit&lt;/em&gt; is not specified or &lt;code&gt;-1&lt;/code&gt;, then there is no limit on the number of splits (all possible splits are made).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdce2605cbf38bc0b264bfd79b652de6e413eda7" translate="yes" xml:space="preserve">
          <source>Return a list of the words in the string, using &lt;em&gt;sep&lt;/em&gt; as the delimiter string. If &lt;em&gt;maxsplit&lt;/em&gt; is given, at most &lt;em&gt;maxsplit&lt;/em&gt; splits are done, the &lt;em&gt;rightmost&lt;/em&gt; ones. If &lt;em&gt;sep&lt;/em&gt; is not specified or &lt;code&gt;None&lt;/code&gt;, any whitespace string is a separator. Except for splitting from the right, &lt;a href=&quot;#str.rsplit&quot;&gt;&lt;code&gt;rsplit()&lt;/code&gt;&lt;/a&gt; behaves like &lt;a href=&quot;#str.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt; which is described in detail below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7df64322d34b42e1979faea90895dc536fd55d" translate="yes" xml:space="preserve">
          <source>Return a list of three per-generation dictionaries containing collection statistics since interpreter start. The number of keys may change in the future, but currently each dictionary will contain the following items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90386d04636dc7d47b9193e0ef8f2a82b6944576" translate="yes" xml:space="preserve">
          <source>Return a list of tuples (header_name, header_value) of the Request headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fd11784c974eb148a3d5471c88da29dfb64115" translate="yes" xml:space="preserve">
          <source>Return a list with the &lt;em&gt;n&lt;/em&gt; largest elements from the dataset defined by &lt;em&gt;iterable&lt;/em&gt;. &lt;em&gt;key&lt;/em&gt;, if provided, specifies a function of one argument that is used to extract a comparison key from each element in &lt;em&gt;iterable&lt;/em&gt; (for example, &lt;code&gt;key=str.lower&lt;/code&gt;). Equivalent to: &lt;code&gt;sorted(iterable, key=key,
reverse=True)[:n]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c64cdbf9dacdd1d7c80a4a4c27a63db6b982bfe" translate="yes" xml:space="preserve">
          <source>Return a list with the &lt;em&gt;n&lt;/em&gt; smallest elements from the dataset defined by &lt;em&gt;iterable&lt;/em&gt;. &lt;em&gt;key&lt;/em&gt;, if provided, specifies a function of one argument that is used to extract a comparison key from each element in &lt;em&gt;iterable&lt;/em&gt; (for example, &lt;code&gt;key=str.lower&lt;/code&gt;). Equivalent to: &lt;code&gt;sorted(iterable, key=key)[:n]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d00f13d89377e1c5b7328174d5be63096cec7f" translate="yes" xml:space="preserve">
          <source>Return a logger with the specified name or, if name is &lt;code&gt;None&lt;/code&gt;, return a logger which is the root logger of the hierarchy. If specified, the name is typically a dot-separated hierarchical name like &lt;em&gt;&amp;lsquo;a&amp;rsquo;&lt;/em&gt;, &lt;em&gt;&amp;lsquo;a.b&amp;rsquo;&lt;/em&gt; or &lt;em&gt;&amp;lsquo;a.b.c.d&amp;rsquo;&lt;/em&gt;. Choice of these names is entirely up to the developer who is using logging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0083d47241024d7e1dbd3389340b1b3cdc607f31" translate="yes" xml:space="preserve">
          <source>Return a logical OR of all video attributes supported by the terminal. This information is useful when a curses program needs complete control over the appearance of the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5405dea93fd5a1f7676e47dbbb5d57d484713656" translate="yes" xml:space="preserve">
          <source>Return a mapping of file objects to selector keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfe715c952c0a82aa1f06a0e50f4f2a79eedbe7" translate="yes" xml:space="preserve">
          <source>Return a measure of the sequences&amp;rsquo; similarity as a float in the range [0, 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff27b1d094718235124be456ad559ad8bba404a" translate="yes" xml:space="preserve">
          <source>Return a message object structure from a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. This is equivalent to &lt;code&gt;BytesParser().parsebytes(s)&lt;/code&gt;. Optional &lt;em&gt;_class&lt;/em&gt; and &lt;em&gt;policy&lt;/em&gt; are interpreted as with the &lt;a href=&quot;#email.parser.BytesParser&quot;&gt;&lt;code&gt;BytesParser&lt;/code&gt;&lt;/a&gt; class constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64794ae8b708657d7f410c1d86a0b7a59ba66f0c" translate="yes" xml:space="preserve">
          <source>Return a message object structure from a string. This is equivalent to &lt;code&gt;Parser().parsestr(s)&lt;/code&gt;. &lt;em&gt;_class&lt;/em&gt; and &lt;em&gt;policy&lt;/em&gt; are interpreted as with the &lt;a href=&quot;#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; class constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c067985896092e97a3ee90c9d827630e08cd1b0e" translate="yes" xml:space="preserve">
          <source>Return a message object structure tree from an open &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. This is equivalent to &lt;code&gt;Parser().parse(fp)&lt;/code&gt;. &lt;em&gt;_class&lt;/em&gt; and &lt;em&gt;policy&lt;/em&gt; are interpreted as with the &lt;a href=&quot;#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; class constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116f340a1f077ac42dc0493d6b64f45ea717d67e" translate="yes" xml:space="preserve">
          <source>Return a message object structure tree from an open binary &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. This is equivalent to &lt;code&gt;BytesParser().parse(fp)&lt;/code&gt;. &lt;em&gt;_class&lt;/em&gt; and &lt;em&gt;policy&lt;/em&gt; are interpreted as with the &lt;a href=&quot;#email.parser.BytesParser&quot;&gt;&lt;code&gt;BytesParser&lt;/code&gt;&lt;/a&gt; class constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51c57a7a5dee5b29e787d07a2be588b68cfec91" translate="yes" xml:space="preserve">
          <source>Return a month&amp;rsquo;s calendar as an HTML table. If &lt;em&gt;withyear&lt;/em&gt; is true the year will be included in the header, otherwise just the month name will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01cc0aed3a8faa6890493ba86cc366526a588c0d" translate="yes" xml:space="preserve">
          <source>Return a month&amp;rsquo;s calendar in a multi-line string. If &lt;em&gt;w&lt;/em&gt; is provided, it specifies the width of the date columns, which are centered. If &lt;em&gt;l&lt;/em&gt; is given, it specifies the number of lines that each week will use. Depends on the first weekday as specified in the constructor or set by the &lt;a href=&quot;#calendar.setfirstweekday&quot;&gt;&lt;code&gt;setfirstweekday()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6d3624b32d92c0a84daa4a0f157efc99d64d14" translate="yes" xml:space="preserve">
          <source>Return a named tuple describing the Windows version currently running. The named elements are &lt;em&gt;major&lt;/em&gt;, &lt;em&gt;minor&lt;/em&gt;, &lt;em&gt;build&lt;/em&gt;, &lt;em&gt;platform&lt;/em&gt;, &lt;em&gt;service_pack&lt;/em&gt;, &lt;em&gt;service_pack_minor&lt;/em&gt;, &lt;em&gt;service_pack_major&lt;/em&gt;, &lt;em&gt;suite_mask&lt;/em&gt;, &lt;em&gt;product_type&lt;/em&gt; and &lt;em&gt;platform_version&lt;/em&gt;. &lt;em&gt;service_pack&lt;/em&gt; contains a string, &lt;em&gt;platform_version&lt;/em&gt; a 3-tuple and all other values are integers. The components can also be accessed by name, so &lt;code&gt;sys.getwindowsversion()[0]&lt;/code&gt; is equivalent to &lt;code&gt;sys.getwindowsversion().major&lt;/code&gt;. For compatibility with prior versions, only the first 5 elements are retrievable by indexing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8535a359a37509724cdb0547504173046f73e40d" translate="yes" xml:space="preserve">
          <source>Return a network interface index number corresponding to an interface name. &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if no interface with the given name exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2161de76c877351bfe32350d3c610985de1529" translate="yes" xml:space="preserve">
          <source>Return a network interface name corresponding to an interface index number. &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if no interface with the given index exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d7331fae7fc3a00d52937fc22c3be955542ebb" translate="yes" xml:space="preserve">
          <source>Return a new &amp;ldquo;bytes&amp;rdquo; object, which is an immutable sequence of integers in the range &lt;code&gt;0 &amp;lt;= x &amp;lt; 256&lt;/code&gt;. &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; is an immutable version of &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; &amp;ndash; it has the same non-mutating methods and the same indexing and slicing behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c3adbbcbe8574f4e83a6f96273a47b9fc529b5" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;#curses-window-objects&quot;&gt;window&lt;/a&gt;, whose left-upper corner is at &lt;code&gt;(begin_y, begin_x)&lt;/code&gt;, and whose height/width is &lt;em&gt;nlines&lt;/em&gt;/&lt;em&gt;ncols&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdd967a562a00b11b07e812e61bccc7f375659e" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object whose date components are equal to the given &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object&amp;rsquo;s, and whose time components are equal to the given &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object&amp;rsquo;s. If the &lt;em&gt;tzinfo&lt;/em&gt; argument is provided, its value is used to set the &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute of the result, otherwise the &lt;a href=&quot;#datetime.time.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute of the &lt;em&gt;time&lt;/em&gt; argument is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f1fb78243d61c44fdd6fb9e525972da40482c2" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; instance whose attributes have the same values as the current instance, except where those attributes are given new values by the keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4618e296045cc67dc8eef697a21629daa79e5c76" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;#functools.partialmethod&quot;&gt;&lt;code&gt;partialmethod&lt;/code&gt;&lt;/a&gt; descriptor which behaves like &lt;a href=&quot;#functools.partial&quot;&gt;&lt;code&gt;partial&lt;/code&gt;&lt;/a&gt; except that it is designed to be used as a method definition rather than being directly callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18a8185a8e115bebde933b7ab31a5fee9ca1fbf" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;#msilib.Control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt; object. An entry in the &lt;code&gt;Control&lt;/code&gt; table is made with the specified parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a965cd2fba08407ac7189eb196c59e5c3a52fc" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;#msilib.Dialog&quot;&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/a&gt; object. An entry in the &lt;code&gt;Dialog&lt;/code&gt; table is made, with the specified coordinates, dialog attributes, title, name of the first, default, and cancel controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b343dee1f0bc597d06f656a28cc66d2b2acf12ea" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;#nntplib.NNTP&quot;&gt;&lt;code&gt;NNTP&lt;/code&gt;&lt;/a&gt; object, representing a connection to the NNTP server running on host &lt;em&gt;host&lt;/em&gt;, listening at port &lt;em&gt;port&lt;/em&gt;. An optional &lt;em&gt;timeout&lt;/em&gt; can be specified for the socket connection. If the optional &lt;em&gt;user&lt;/em&gt; and &lt;em&gt;password&lt;/em&gt; are provided, or if suitable credentials are present in &lt;code&gt;/.netrc&lt;/code&gt; and the optional flag &lt;em&gt;usenetrc&lt;/em&gt; is true, the &lt;code&gt;AUTHINFO USER&lt;/code&gt; and &lt;code&gt;AUTHINFO PASS&lt;/code&gt; commands are used to identify and authenticate the user to the server. If the optional flag &lt;em&gt;readermode&lt;/em&gt; is true, then a &lt;code&gt;mode reader&lt;/code&gt; command is sent before authentication is performed. Reader mode is sometimes necessary if you are connecting to an NNTP server on the local machine and intend to call reader-specific commands, such as &lt;code&gt;group&lt;/code&gt;. If you get unexpected &lt;a href=&quot;#nntplib.NNTPPermanentError&quot;&gt;&lt;code&gt;NNTPPermanentError&lt;/code&gt;&lt;/a&gt;s, you might need to set &lt;em&gt;readermode&lt;/em&gt;. The &lt;a href=&quot;#nntplib.NNTP&quot;&gt;&lt;code&gt;NNTP&lt;/code&gt;&lt;/a&gt; class supports the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement to unconditionally consume &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exceptions and to close the NNTP connection when done, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19503baf9affade8027552bef9780b344f21126" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;#nntplib.NNTP_SSL&quot;&gt;&lt;code&gt;NNTP_SSL&lt;/code&gt;&lt;/a&gt; object, representing an encrypted connection to the NNTP server running on host &lt;em&gt;host&lt;/em&gt;, listening at port &lt;em&gt;port&lt;/em&gt;. &lt;a href=&quot;#nntplib.NNTP_SSL&quot;&gt;&lt;code&gt;NNTP_SSL&lt;/code&gt;&lt;/a&gt; objects have the same methods as &lt;a href=&quot;#nntplib.NNTP&quot;&gt;&lt;code&gt;NNTP&lt;/code&gt;&lt;/a&gt; objects. If &lt;em&gt;port&lt;/em&gt; is omitted, port 563 (NNTPS) is used. &lt;em&gt;ssl_context&lt;/em&gt; is also optional, and is a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; object. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices. All other parameters behave the same as for &lt;a href=&quot;#nntplib.NNTP&quot;&gt;&lt;code&gt;NNTP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba6cf6423f206aa8240ad2a285fbeec7f017c90" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;#partial-objects&quot;&gt;partial object&lt;/a&gt; which when called will behave like &lt;em&gt;func&lt;/em&gt; called with the positional arguments &lt;em&gt;args&lt;/em&gt; and keyword arguments &lt;em&gt;keywords&lt;/em&gt;. If more arguments are supplied to the call, they are appended to &lt;em&gt;args&lt;/em&gt;. If additional keyword arguments are supplied, they extend and override &lt;em&gt;keywords&lt;/em&gt;. Roughly equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177a2d31a7c84d1416cbe4d06fdd8e97f004347d" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; object with default settings for the given &lt;em&gt;purpose&lt;/em&gt;. The settings are chosen by the &lt;a href=&quot;#module-ssl&quot;&gt;&lt;code&gt;ssl&lt;/code&gt;&lt;/a&gt; module, and usually represent a higher security level than when calling the &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; constructor directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8a55533d92ec036a29ff2445ba75d8c803c034" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; which maps field names to their corresponding values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fa1f661121945e18b28030065429a61b6a8284" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;stdtypes#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt; object, optionally with elements taken from &lt;em&gt;iterable&lt;/em&gt;. &lt;code&gt;frozenset&lt;/code&gt; is a built-in class. See &lt;a href=&quot;stdtypes#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#types-set&quot;&gt;Set Types &amp;mdash; set, frozenset&lt;/a&gt; for documentation about this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e791d596714d860f04511b479236f9ab593a0dc" translate="yes" xml:space="preserve">
          <source>Return a new &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; object, optionally with elements taken from &lt;em&gt;iterable&lt;/em&gt;. &lt;code&gt;set&lt;/code&gt; is a built-in class. See &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#types-set&quot;&gt;Set Types &amp;mdash; set, frozenset&lt;/a&gt; for documentation about this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489d1e84aa3212eef6fcb2b2211f94a907f39664" translate="yes" xml:space="preserve">
          <source>Return a new &lt;code&gt;Document&lt;/code&gt; object (the root of the DOM), with a child &lt;code&gt;Element&lt;/code&gt; object having the given &lt;em&gt;namespaceUri&lt;/em&gt; and &lt;em&gt;qualifiedName&lt;/em&gt;. The &lt;em&gt;doctype&lt;/em&gt; must be a &lt;code&gt;DocumentType&lt;/code&gt; object created by &lt;a href=&quot;#xml.dom.DOMImplementation.createDocumentType&quot;&gt;&lt;code&gt;createDocumentType()&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt;. In the Python DOM API, the first two arguments can also be &lt;code&gt;None&lt;/code&gt; in order to indicate that no &lt;code&gt;Element&lt;/code&gt; child is to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55166ad6702642034dbdb69707ebe44e48f9f71c" translate="yes" xml:space="preserve">
          <source>Return a new &lt;code&gt;DocumentType&lt;/code&gt; object that encapsulates the given &lt;em&gt;qualifiedName&lt;/em&gt;, &lt;em&gt;publicId&lt;/em&gt;, and &lt;em&gt;systemId&lt;/em&gt; strings, representing the information contained in an XML document type declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8a2065bbe7c5db7d86aab94e9c90108c474161" translate="yes" xml:space="preserve">
          <source>Return a new Struct object which writes and reads binary data according to the format string &lt;em&gt;format&lt;/em&gt;. Creating a Struct object once and calling its methods is more efficient than calling the &lt;a href=&quot;#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; functions with the same format since the format string only needs to be compiled once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3e71ce90036fd649e6fb1cbeb56f433b6faa65" translate="yes" xml:space="preserve">
          <source>Return a new UUID, in the format that MSI typically requires (i.e. in curly braces, and with all hexdigits in upper-case).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f13cd7b06d9a1d375f257261ec2fa4a0bd958e" translate="yes" xml:space="preserve">
          <source>Return a new array of bytes. The &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; class is a mutable sequence of integers in the range 0 &amp;lt;= x &amp;lt; 256. It has most of the usual methods of mutable sequences, described in &lt;a href=&quot;stdtypes#typesseq-mutable&quot;&gt;Mutable Sequence Types&lt;/a&gt;, as well as most methods that the &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; type has, see &lt;a href=&quot;stdtypes#bytes-methods&quot;&gt;Bytes and Bytearray Operations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c290d193caf916151b968fcf0602e7531ff60725" translate="yes" xml:space="preserve">
          <source>Return a new database object by calling MsiOpenDatabase. &lt;em&gt;path&lt;/em&gt; is the file name of the MSI file; &lt;em&gt;persist&lt;/em&gt; can be one of the constants &lt;code&gt;MSIDBOPEN_CREATEDIRECT&lt;/code&gt;, &lt;code&gt;MSIDBOPEN_CREATE&lt;/code&gt;, &lt;code&gt;MSIDBOPEN_DIRECT&lt;/code&gt;, &lt;code&gt;MSIDBOPEN_READONLY&lt;/code&gt;, or &lt;code&gt;MSIDBOPEN_TRANSACT&lt;/code&gt;, and may include the flag &lt;code&gt;MSIDBOPEN_PATCHFILE&lt;/code&gt;. See the Microsoft documentation for the meaning of these flags; depending on the flags, an existing database is opened, or a new one created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3928b960e1218c9ad4ba58d318c8d89a96b6200b" translate="yes" xml:space="preserve">
          <source>Return a new dictionary initialized from an optional positional argument and a possibly empty set of keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65647b8723c6b761b3ad26c1b997a72095a25b9d" translate="yes" xml:space="preserve">
          <source>Return a new featureless object. &lt;a href=&quot;#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; is a base for all classes. It has the methods that are common to all instances of Python classes. This function does not accept any arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a644d74491d7d3b6d671af04db252e9ee41f5e" translate="yes" xml:space="preserve">
          <source>Return a new hmac object. &lt;em&gt;key&lt;/em&gt; is a bytes or bytearray object giving the secret key. If &lt;em&gt;msg&lt;/em&gt; is present, the method call &lt;code&gt;update(msg)&lt;/code&gt; is made. &lt;em&gt;digestmod&lt;/em&gt; is the digest name, digest constructor or module for the HMAC object to use. It may be any name suitable to &lt;a href=&quot;hashlib#hashlib.new&quot;&gt;&lt;code&gt;hashlib.new()&lt;/code&gt;&lt;/a&gt;. Despite its argument position, it is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa89babe9e2e14c01cb7603bc59bbf7c1249ee6" translate="yes" xml:space="preserve">
          <source>Return a new instance of the &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; class. When &lt;em&gt;host&lt;/em&gt; is given, the method call &lt;code&gt;connect(host)&lt;/code&gt; is made. When &lt;em&gt;user&lt;/em&gt; is given, additionally the method call &lt;code&gt;login(user, passwd, acct)&lt;/code&gt; is made (where &lt;em&gt;passwd&lt;/em&gt; and &lt;em&gt;acct&lt;/em&gt; default to the empty string when not given). The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for blocking operations like the connection attempt (if is not specified, the global default timeout setting will be used). &lt;em&gt;source_address&lt;/em&gt; is a 2-tuple &lt;code&gt;(host, port)&lt;/code&gt; for the socket to bind to as its source address before connecting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37cbff7994a0e0fd6b734965157d41e6897a45f" translate="yes" xml:space="preserve">
          <source>Return a new instance of the named tuple replacing specified fields with new values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6bc54df660b0b7051d44118ad739a72b70e345" translate="yes" xml:space="preserve">
          <source>Return a new lock object. Methods of locks are described below. The lock is initially unlocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afce8a1eeeb610b790a69fe60a040af88ccc3e43" translate="yes" xml:space="preserve">
          <source>Return a new path object representing the current directory (as returned by &lt;a href=&quot;os#os.getcwd&quot;&gt;&lt;code&gt;os.getcwd()&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893e1213d9894cce9f4078958d471b5ee1818457" translate="yes" xml:space="preserve">
          <source>Return a new path object representing the user&amp;rsquo;s home directory (as returned by &lt;a href=&quot;os.path#os.path.expanduser&quot;&gt;&lt;code&gt;os.path.expanduser()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;~&lt;/code&gt; construct):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66238abe234c9e48d7f67d34184c2fda3a437da5" translate="yes" xml:space="preserve">
          <source>Return a new path with expanded &lt;code&gt;~&lt;/code&gt; and &lt;code&gt;~user&lt;/code&gt; constructs, as returned by &lt;a href=&quot;os.path#os.path.expanduser&quot;&gt;&lt;code&gt;os.path.expanduser()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc930d306b0a05b7dadb535b30959fe2a04fd748" translate="yes" xml:space="preserve">
          <source>Return a new path with the &lt;a href=&quot;#pathlib.PurePath.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; changed. If the original path doesn&amp;rsquo;t have a name, ValueError is raised:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30512dc76207941e2b30ef40458eb1ca29517439" translate="yes" xml:space="preserve">
          <source>Return a new path with the &lt;a href=&quot;#pathlib.PurePath.suffix&quot;&gt;&lt;code&gt;suffix&lt;/code&gt;&lt;/a&gt; changed. If the original path doesn&amp;rsquo;t have a suffix, the new &lt;em&gt;suffix&lt;/em&gt; is appended instead. If the &lt;em&gt;suffix&lt;/em&gt; is an empty string, the original suffix is removed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbf061b53c7b1b233797c368eee5d7c59783f40" translate="yes" xml:space="preserve">
          <source>Return a new record object by calling &lt;code&gt;MSICreateRecord()&lt;/code&gt;. &lt;em&gt;count&lt;/em&gt; is the number of fields of the record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74229e74ac2b7c0eef1b784dd402009a133bcbe" translate="yes" xml:space="preserve">
          <source>Return a new set or frozenset object whose elements are taken from &lt;em&gt;iterable&lt;/em&gt;. The elements of a set must be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;. To represent sets of sets, the inner sets must be &lt;a href=&quot;#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt; objects. If &lt;em&gt;iterable&lt;/em&gt; is not specified, a new empty set is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8723f0aa7da3d6caf2cf02795bfd3dcf5389ff15" translate="yes" xml:space="preserve">
          <source>Return a new set with elements common to the set and all others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abe00652d2c3f5a3580898ea9d9961bf7093fb0" translate="yes" xml:space="preserve">
          <source>Return a new set with elements from the set and all others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57314317dc26d6cb14557bb9eb32d5faa707d743" translate="yes" xml:space="preserve">
          <source>Return a new set with elements in either the set or &lt;em&gt;other&lt;/em&gt; but not both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9622f25721dcfb4614a34f08ab98e31716ef296d" translate="yes" xml:space="preserve">
          <source>Return a new set with elements in the set that are not in the others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ae2829b44609c3e5b23f9954a7d754bae38a00" translate="yes" xml:space="preserve">
          <source>Return a new sorted list from the items in &lt;em&gt;iterable&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0765ced3e6fa44bac3caad9b8d2cf4ed1ac7bb35" translate="yes" xml:space="preserve">
          <source>Return a new string which is an &lt;em&gt;unquoted&lt;/em&gt; version of &lt;em&gt;str&lt;/em&gt;. If &lt;em&gt;str&lt;/em&gt; ends and begins with double quotes, they are stripped off. Likewise if &lt;em&gt;str&lt;/em&gt; ends and begins with angle brackets, they are stripped off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6849b48efb115d79d8bbe031d78c0220fa549f36" translate="yes" xml:space="preserve">
          <source>Return a new string with backslashes in &lt;em&gt;str&lt;/em&gt; replaced by two backslashes, and double quotes replaced by backslash-double quote.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bf75dbba27cd2056b801e1a7a25afd4eef1eec" translate="yes" xml:space="preserve">
          <source>Return a new summary information object, by calling &lt;code&gt;MsiGetSummaryInformation()&lt;/code&gt;. &lt;em&gt;count&lt;/em&gt; is the maximum number of updated values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4137a394604bd052aabc1bb507f6a58bdfb4088" translate="yes" xml:space="preserve">
          <source>Return a new transport instance, that the &lt;em&gt;protocol&lt;/em&gt; must start using immediately after the &lt;em&gt;await&lt;/em&gt;. The &lt;em&gt;transport&lt;/em&gt; instance passed to the &lt;em&gt;start_tls&lt;/em&gt; method should never be used again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4501055eac2e0be9a5dc036d8658c89f6f073b51" translate="yes" xml:space="preserve">
          <source>Return a new view of the dictionary&amp;rsquo;s items (&lt;code&gt;(key, value)&lt;/code&gt; pairs). See the &lt;a href=&quot;#dict-views&quot;&gt;documentation of view objects&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1edac3814e9d5d426e8564b3a37ba4b04d336610" translate="yes" xml:space="preserve">
          <source>Return a new view of the dictionary&amp;rsquo;s keys. See the &lt;a href=&quot;#dict-views&quot;&gt;documentation of view objects&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6475bc19d15148630fc330a746165c8810b3b030" translate="yes" xml:space="preserve">
          <source>Return a new view of the dictionary&amp;rsquo;s values. See the &lt;a href=&quot;#dict-views&quot;&gt;documentation of view objects&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af90f45f539a0767c21fc19853a192eadf741d20" translate="yes" xml:space="preserve">
          <source>Return a new view of the underlying mapping&amp;rsquo;s items (&lt;code&gt;(key, value)&lt;/code&gt; pairs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf0a28a76caebb846c5f6eb71aa3db20f84cad4" translate="yes" xml:space="preserve">
          <source>Return a new view of the underlying mapping&amp;rsquo;s keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d851267754066a7c86765765736917c36e0c5ef4" translate="yes" xml:space="preserve">
          <source>Return a new view of the underlying mapping&amp;rsquo;s values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03239fc2c782054fd43026ba52bf798f02f21065" translate="yes" xml:space="preserve">
          <source>Return a new, equivalent, pipeline template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef31dceebe58e8b100c1c186188da826acd974ba" translate="yes" xml:space="preserve">
          <source>Return a normalized absolutized version of the pathname &lt;em&gt;path&lt;/em&gt;. On most platforms, this is equivalent to calling the function &lt;a href=&quot;#os.path.normpath&quot;&gt;&lt;code&gt;normpath()&lt;/code&gt;&lt;/a&gt; as follows: &lt;code&gt;normpath(join(os.getcwd(), path))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9a8f5db52f59b6be730699d4bd63e63a5894f5" translate="yes" xml:space="preserve">
          <source>Return a pair &lt;code&gt;(n, d)&lt;/code&gt; of integers that represent the given &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance as a fraction, in lowest terms and with a positive denominator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29535a9fda3bdd2f71e57518ec3c9de808ca70e2" translate="yes" xml:space="preserve">
          <source>Return a pair &lt;code&gt;(resp, path)&lt;/code&gt;, where &lt;em&gt;path&lt;/em&gt; is the directory path to the article with message ID &lt;em&gt;id&lt;/em&gt;. Most of the time, this extension is not enabled by NNTP server administrators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fe9e8c19b2d70460dbc4e1085d473f17534a4f" translate="yes" xml:space="preserve">
          <source>Return a pair &lt;code&gt;(response, date)&lt;/code&gt;. &lt;em&gt;date&lt;/em&gt; is a &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object containing the current date and time of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2f774425bb9344ee6ceae32346b4f2a4a80141" translate="yes" xml:space="preserve">
          <source>Return a pair &lt;code&gt;(response, overviews)&lt;/code&gt;. &lt;em&gt;overviews&lt;/em&gt; is a list of &lt;code&gt;(article_number, overview)&lt;/code&gt; tuples, one for each article selected by &lt;em&gt;message_spec&lt;/em&gt;. Each &lt;em&gt;overview&lt;/em&gt; is a dictionary with the same number of items, but this number depends on the server. These items are either message headers (the key is then the lower-cased header name) or metadata items (the key is then the metadata name prepended with &lt;code&gt;&quot;:&quot;&lt;/code&gt;). The following items are guaranteed to be present by the NNTP specification:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb4405470c99a87551af672b1cc26154ab499b8" translate="yes" xml:space="preserve">
          <source>Return a pair of integers whose ratio is exactly equal to the original float and with a positive denominator. Raises &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; on infinities and a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; on NaNs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc51d35e1eb40348cdd8481b26a2b84eab630ebc" translate="yes" xml:space="preserve">
          <source>Return a pair of integers whose ratio is exactly equal to the original integer and with a positive denominator. The integer ratio of integers (whole numbers) is always the integer as the numerator and &lt;code&gt;1&lt;/code&gt; as the denominator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1886e049178310959d55e16e879a0bc1df98c9" translate="yes" xml:space="preserve">
          <source>Return a possibly-empty list of path names that match &lt;em&gt;pathname&lt;/em&gt;, which must be a string containing a path specification. &lt;em&gt;pathname&lt;/em&gt; can be either absolute (like &lt;code&gt;/usr/src/Python-1.5/Makefile&lt;/code&gt;) or relative (like &lt;code&gt;../../Tools/*/*.gif&lt;/code&gt;), and can contain shell-style wildcards. Broken symlinks are included in the results (as in the shell). Whether or not the results are sorted depends on the file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f21e127d1ad02b5db308e0683a8d3a55a1e7c9" translate="yes" xml:space="preserve">
          <source>Return a pretty-printed version of the document. &lt;em&gt;indent&lt;/em&gt; specifies the indentation string and defaults to a tabulator; &lt;em&gt;newl&lt;/em&gt; specifies the string emitted at the end of each line and defaults to &lt;code&gt;\n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2008eca6625a1bea648b78740062213e027c29b" translate="yes" xml:space="preserve">
          <source>Return a process-safe wrapper object for a ctypes object which uses &lt;em&gt;lock&lt;/em&gt; to synchronize access. If &lt;em&gt;lock&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; (the default) then a &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;multiprocessing.RLock&lt;/code&gt;&lt;/a&gt; object is created automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885762c6eb4f2c34c47010b7a27ee0dddaecb705" translate="yes" xml:space="preserve">
          <source>Return a property attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53108e12a11d7ad3dc8540be2e31cd63685189e4" translate="yes" xml:space="preserve">
          <source>Return a property of the summary, through &lt;code&gt;MsiSummaryInfoGetProperty()&lt;/code&gt;. &lt;em&gt;field&lt;/em&gt; is the name of the property, and can be one of the constants &lt;code&gt;PID_CODEPAGE&lt;/code&gt;, &lt;code&gt;PID_TITLE&lt;/code&gt;, &lt;code&gt;PID_SUBJECT&lt;/code&gt;, &lt;code&gt;PID_AUTHOR&lt;/code&gt;, &lt;code&gt;PID_KEYWORDS&lt;/code&gt;, &lt;code&gt;PID_COMMENTS&lt;/code&gt;, &lt;code&gt;PID_TEMPLATE&lt;/code&gt;, &lt;code&gt;PID_LASTAUTHOR&lt;/code&gt;, &lt;code&gt;PID_REVNUMBER&lt;/code&gt;, &lt;code&gt;PID_LASTPRINTED&lt;/code&gt;, &lt;code&gt;PID_CREATE_DTM&lt;/code&gt;, &lt;code&gt;PID_LASTSAVE_DTM&lt;/code&gt;, &lt;code&gt;PID_PAGECOUNT&lt;/code&gt;, &lt;code&gt;PID_WORDCOUNT&lt;/code&gt;, &lt;code&gt;PID_CHARCOUNT&lt;/code&gt;, &lt;code&gt;PID_APPNAME&lt;/code&gt;, or &lt;code&gt;PID_SECURITY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e08376e01374d7c12e9a474e00fe31d6dc5c45" translate="yes" xml:space="preserve">
          <source>Return a proxy object that delegates method calls to a parent or sibling class of &lt;em&gt;type&lt;/em&gt;. This is useful for accessing inherited methods that have been overridden in a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ed215eede821e9d65c4254fd2218458dab1bce" translate="yes" xml:space="preserve">
          <source>Return a proxy to &lt;em&gt;object&lt;/em&gt; which uses a weak reference. This supports use of the proxy in most contexts instead of requiring the explicit dereferencing used with weak reference objects. The returned object will have a type of either &lt;code&gt;ProxyType&lt;/code&gt; or &lt;code&gt;CallableProxyType&lt;/code&gt;, depending on whether &lt;em&gt;object&lt;/em&gt; is callable. Proxy objects are not &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; regardless of the referent; this avoids a number of problems related to their fundamentally mutable nature, and prevent their use as dictionary keys. &lt;em&gt;callback&lt;/em&gt; is the same as the parameter of the same name to the &lt;a href=&quot;#weakref.ref&quot;&gt;&lt;code&gt;ref()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08538236a017b4abfabf4e6e159f6e94e2b62642" translate="yes" xml:space="preserve">
          <source>Return a random URL-safe text string, containing &lt;em&gt;nbytes&lt;/em&gt; random bytes. The text is Base64 encoded, so on average each byte results in approximately 1.3 characters. If &lt;em&gt;nbytes&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not supplied, a reasonable default is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc4109e57c2c37657c35eef117b44de81becaaf" translate="yes" xml:space="preserve">
          <source>Return a random byte string containing &lt;em&gt;nbytes&lt;/em&gt; number of bytes. If &lt;em&gt;nbytes&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not supplied, a reasonable default is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a1dadd13fa8aa45783b8f7136b071bb0f67ffd" translate="yes" xml:space="preserve">
          <source>Return a random element from the non-empty sequence &lt;em&gt;seq&lt;/em&gt;. If &lt;em&gt;seq&lt;/em&gt; is empty, raises &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcaf36fdf8c04c98ab34ef9b3d7b2da2cbe2210" translate="yes" xml:space="preserve">
          <source>Return a random floating point number &lt;em&gt;N&lt;/em&gt; such that &lt;code&gt;a &amp;lt;= N &amp;lt;= b&lt;/code&gt; for &lt;code&gt;a &amp;lt;= b&lt;/code&gt; and &lt;code&gt;b &amp;lt;= N &amp;lt;= a&lt;/code&gt; for &lt;code&gt;b &amp;lt; a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24e128aa9d984b83cad54b8fcd5f55ed590b00a" translate="yes" xml:space="preserve">
          <source>Return a random floating point number &lt;em&gt;N&lt;/em&gt; such that &lt;code&gt;low &amp;lt;= N &amp;lt;= high&lt;/code&gt; and with the specified &lt;em&gt;mode&lt;/em&gt; between those bounds. The &lt;em&gt;low&lt;/em&gt; and &lt;em&gt;high&lt;/em&gt; bounds default to zero and one. The &lt;em&gt;mode&lt;/em&gt; argument defaults to the midpoint between the bounds, giving a symmetric distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9162cc96c5b5c321460d6245cd2963e0dcd1a6" translate="yes" xml:space="preserve">
          <source>Return a random int in the range [0, &lt;em&gt;n&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f23b438f3def5e4c0601b30d157c866eb86eea5" translate="yes" xml:space="preserve">
          <source>Return a random integer &lt;em&gt;N&lt;/em&gt; such that &lt;code&gt;a &amp;lt;= N &amp;lt;= b&lt;/code&gt;. Alias for &lt;code&gt;randrange(a, b+1)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07669e071fa3a178dd51597469427e8b7cc21bb" translate="yes" xml:space="preserve">
          <source>Return a random text string, in hexadecimal. The string has &lt;em&gt;nbytes&lt;/em&gt; random bytes, each byte converted to two hex digits. If &lt;em&gt;nbytes&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not supplied, a reasonable default is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24678f525f4566a3d8c2ed9b17e656e55f3108f" translate="yes" xml:space="preserve">
          <source>Return a randomly generated salt of the specified method. If no &lt;em&gt;method&lt;/em&gt; is given, the strongest method available as returned by &lt;a href=&quot;#crypt.methods&quot;&gt;&lt;code&gt;methods()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ac211ed69298fd131d38b1af53fd52cb922b9e" translate="yes" xml:space="preserve">
          <source>Return a randomly selected element from &lt;code&gt;range(start, stop, step)&lt;/code&gt;. This is equivalent to &lt;code&gt;choice(range(start, stop, step))&lt;/code&gt;, but doesn&amp;rsquo;t actually build a range object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93fdf5d517b460351bca72f716a22458ce8b9ab" translate="yes" xml:space="preserve">
          <source>Return a randomly-chosen element from a non-empty sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b941aeae39fb2a626a2140c19cfb3031268ecd" translate="yes" xml:space="preserve">
          <source>Return a readable and writable view over the contents of the buffer without copying them. Also, mutating the view will transparently update the contents of the buffer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27a5b7c7be4ea724ae09b14740364f946179277" translate="yes" xml:space="preserve">
          <source>Return a reader object which will iterate over lines in the given &lt;em&gt;csvfile&lt;/em&gt;. &lt;em&gt;csvfile&lt;/em&gt; can be any object which supports the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; protocol and returns a string each time its &lt;code&gt;__next__()&lt;/code&gt; method is called &amp;mdash; &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt; and list objects are both suitable. If &lt;em&gt;csvfile&lt;/em&gt; is a file object, it should be opened with &lt;code&gt;newline=''&lt;/code&gt;. &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; An optional &lt;em&gt;dialect&lt;/em&gt; parameter can be given which is used to define a set of parameters specific to a particular CSV dialect. It may be an instance of a subclass of the &lt;a href=&quot;#csv.Dialect&quot;&gt;&lt;code&gt;Dialect&lt;/code&gt;&lt;/a&gt; class or one of the strings returned by the &lt;a href=&quot;#csv.list_dialects&quot;&gt;&lt;code&gt;list_dialects()&lt;/code&gt;&lt;/a&gt; function. The other optional &lt;em&gt;fmtparams&lt;/em&gt; keyword arguments can be given to override individual formatting parameters in the current dialect. For full details about the dialect and formatting parameters, see section &lt;a href=&quot;#csv-fmt-params&quot;&gt;Dialects and Formatting Parameters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f75224c47cc66e716bc46b09822f4b322dbcdf" translate="yes" xml:space="preserve">
          <source>Return a readonly version of the memoryview object. The original memoryview object is unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b782bbae2917d1a344e9d47eec1389c929a3e3" translate="yes" xml:space="preserve">
          <source>Return a record describing the columns of the view, through calling &lt;code&gt;MsiViewGetColumnInfo()&lt;/code&gt;. &lt;em&gt;kind&lt;/em&gt; can be either &lt;code&gt;MSICOLINFO_NAMES&lt;/code&gt; or &lt;code&gt;MSICOLINFO_TYPES&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908d395c86ceb2e5b3faf3e7e320bd9d08d3dbe2" translate="yes" xml:space="preserve">
          <source>Return a relative filepath to &lt;em&gt;path&lt;/em&gt; either from the current directory or from an optional &lt;em&gt;start&lt;/em&gt; directory. This is a path computation: the filesystem is not accessed to confirm the existence or nature of &lt;em&gt;path&lt;/em&gt; or &lt;em&gt;start&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8393d1e44e504af24d0c2eaceca2c4648e6b10e" translate="yes" xml:space="preserve">
          <source>Return a repr of &lt;em&gt;dict&lt;/em&gt; with keys sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14cb7cea4d11ea840e386f2a0919f46a917f037e" translate="yes" xml:space="preserve">
          <source>Return a representation of a floating-point number as a hexadecimal string. For finite floating-point numbers, this representation will always include a leading &lt;code&gt;0x&lt;/code&gt; and a trailing &lt;code&gt;p&lt;/code&gt; and exponent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd1c77eeed471272a414eca4e82d340732be23e" translate="yes" xml:space="preserve">
          <source>Return a representation of the message corresponding to &lt;em&gt;key&lt;/em&gt; and delete the message. If no such message exists, return &lt;em&gt;default&lt;/em&gt;. The message is represented as an instance of the appropriate format-specific &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; subclass unless a custom message factory was specified when the &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance was initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307e4e9905503e084dfa59c659be821ee92b0e92" translate="yes" xml:space="preserve">
          <source>Return a representation of the message corresponding to &lt;em&gt;key&lt;/em&gt; as an instance of the appropriate format-specific &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; subclass, or raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception if no such message exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56053798a2edb2e196d5d42b7a4f5a5a72123b67" translate="yes" xml:space="preserve">
          <source>Return a representation of the message corresponding to &lt;em&gt;key&lt;/em&gt;. If no such message exists, &lt;em&gt;default&lt;/em&gt; is returned if the method was called as &lt;a href=&quot;#mailbox.Mailbox.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception is raised if the method was called as &lt;a href=&quot;#mailbox.Mailbox.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;. The message is represented as an instance of the appropriate format-specific &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; subclass unless a custom message factory was specified when the &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance was initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f41e93f94f87307e50fefdc50e574f79ec41633" translate="yes" xml:space="preserve">
          <source>Return a representation of the proxy object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572299202f825fd31b4d4cf64e81a7861b2ece1a" translate="yes" xml:space="preserve">
          <source>Return a result record of the query, through calling &lt;code&gt;MsiViewFetch()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2002d260cb96bf36245f0c09e25c5ebf4ae932df" translate="yes" xml:space="preserve">
          <source>Return a reverse &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;. &lt;em&gt;seq&lt;/em&gt; must be an object which has a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__reversed__&quot;&gt;&lt;code&gt;__reversed__()&lt;/code&gt;&lt;/a&gt; method or supports the sequence protocol (the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method with integer arguments starting at &lt;code&gt;0&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d5d0b95158d4743d5936a6fe146c7c3786c7ba" translate="yes" xml:space="preserve">
          <source>Return a reverse iterator over the keys of the dictionary. This is a shortcut for &lt;code&gt;reversed(d.keys())&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbc2b176ab6ab80c0dd78a286af69a6fb281e3e" translate="yes" xml:space="preserve">
          <source>Return a reverse iterator over the keys, values or items of the dictionary. The view will be iterated in reverse order of the insertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf283e12bda03c946f26a49e4ea62ab1a6437400" translate="yes" xml:space="preserve">
          <source>Return a scheduled callback time as &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffba394eacb909fcd4abbe770cbf274423ebd6b" translate="yes" xml:space="preserve">
          <source>Return a set of all tasks for an event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ae7c53ac67b04f92251f6487a11f2c81d60827" translate="yes" xml:space="preserve">
          <source>Return a set of not yet finished &lt;a href=&quot;#asyncio.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; objects run by the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec71dcf03b48e38b8141af9092cfcf0aaf00413" translate="yes" xml:space="preserve">
          <source>Return a shallow copy of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ada5aaa11ffb2d2413cb31562d3c5f9c1d21d7d" translate="yes" xml:space="preserve">
          <source>Return a shallow copy of the Morsel object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a4d8c74fef1be2973a7f4ee069df0fba3d275d" translate="yes" xml:space="preserve">
          <source>Return a shallow copy of the context object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086e5dfed0de9f0b03c77325397d948c727870f4" translate="yes" xml:space="preserve">
          <source>Return a shallow copy of the dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4721a1a34acc46a108e1203f7a3de6c420921e6" translate="yes" xml:space="preserve">
          <source>Return a shallow copy of the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcec1156e9584d9ed3bc3b00046d137380d5deb" translate="yes" xml:space="preserve">
          <source>Return a shallow copy of the underlying mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01550555814ec5c8bb5489fcb51262e3fe39259f" translate="yes" xml:space="preserve">
          <source>Return a shell-escaped version of the string &lt;em&gt;s&lt;/em&gt;. The returned value is a string that can safely be used as one token in a shell command line, for cases where you cannot use a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d2ec8bd9bf70e41b791870a19425a9805d1a5a" translate="yes" xml:space="preserve">
          <source>Return a sorted sequence of method names found within &lt;em&gt;testCaseClass&lt;/em&gt;; this should be a subclass of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c18ec59c46c3b45ccb53f0eae09fdc48b1e6ba4" translate="yes" xml:space="preserve">
          <source>Return a string containing &lt;a href=&quot;email.policy#email.policy.Policy.linesep&quot;&gt;&lt;code&gt;linesep&lt;/code&gt;&lt;/a&gt; characters as required to correctly fold the header according to &lt;em&gt;policy&lt;/em&gt;. A &lt;a href=&quot;email.policy#email.policy.Policy.cte_type&quot;&gt;&lt;code&gt;cte_type&lt;/code&gt;&lt;/a&gt; of &lt;code&gt;8bit&lt;/code&gt; will be treated as if it were &lt;code&gt;7bit&lt;/code&gt;, since headers may not contain arbitrary binary data. If &lt;a href=&quot;email.policy#email.policy.EmailPolicy.utf8&quot;&gt;&lt;code&gt;utf8&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, non-ASCII data will be &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2966dc4714832aa2f176d47aafa69f5a087b8a5c" translate="yes" xml:space="preserve">
          <source>Return a string containing a brief description of how the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; should be invoked on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70a5b39bb6c159791fce2b8f944645095bd2b91" translate="yes" xml:space="preserve">
          <source>Return a string containing a help message, including the program usage and information about the arguments registered with the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b2742af92a9e0ba4285e05e6ff9413ecbc39c7" translate="yes" xml:space="preserve">
          <source>Return a string containing a printable representation of an object. For many types, this function makes an attempt to return a string that would yield an object with the same value when passed to &lt;a href=&quot;#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;, otherwise the representation is a string enclosed in angle brackets that contains the name of the type of the object together with additional information often including the name and address of the object. A class can control what this function returns for its instances by defining a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4595e5dc7fd391df34191d14b7f1b19637be0a" translate="yes" xml:space="preserve">
          <source>Return a string containing the &amp;ldquo;info&amp;rdquo; for a message. This is useful for accessing and modifying &amp;ldquo;info&amp;rdquo; that is experimental (i.e., not a list of flags).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ccd4a6f34e3236a63246599ecb60055450a74ea" translate="yes" xml:space="preserve">
          <source>Return a string containing the hostname of the machine where the Python interpreter is currently executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ed5373cf1d55ec5d932e47a2299c23fdd0186e" translate="yes" xml:space="preserve">
          <source>Return a string decoded from the given bytes. Default encoding is &lt;code&gt;'utf-8'&lt;/code&gt;. &lt;em&gt;errors&lt;/em&gt; may be given to set a different error handling scheme. The default for &lt;em&gt;errors&lt;/em&gt; is &lt;code&gt;'strict'&lt;/code&gt;, meaning that encoding errors raise a &lt;a href=&quot;exceptions#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt;. Other possible values are &lt;code&gt;'ignore'&lt;/code&gt;, &lt;code&gt;'replace'&lt;/code&gt; and any other name registered via &lt;a href=&quot;codecs#codecs.register_error&quot;&gt;&lt;code&gt;codecs.register_error()&lt;/code&gt;&lt;/a&gt;, see section &lt;a href=&quot;codecs#error-handlers&quot;&gt;Error Handlers&lt;/a&gt;. For a list of possible encodings, see section &lt;a href=&quot;codecs#standard-encodings&quot;&gt;Standard Encodings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5246f45ac5482a36e6c9efa6a964ba85df3973" translate="yes" xml:space="preserve">
          <source>Return a string describing the &lt;em&gt;class&lt;/em&gt; of the operand. The returned value is one of the following ten strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c218ee6405e34e34cfc7afed45eb3cdc652b0b" translate="yes" xml:space="preserve">
          <source>Return a string describing the differences between the expected output for a given example (&lt;em&gt;example&lt;/em&gt;) and the actual output (&lt;em&gt;got&lt;/em&gt;). &lt;em&gt;optionflags&lt;/em&gt; is the set of option flags used to compare &lt;em&gt;want&lt;/em&gt; and &lt;em&gt;got&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90621761dbcabfbcbc811f51e94b24fea73bacfc" translate="yes" xml:space="preserve">
          <source>Return a string describing the encoding of the device associated with &lt;em&gt;fd&lt;/em&gt; if it is connected to a terminal; else return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d84c75ca2a91a16a141955b1fa6c7e659feada3" translate="yes" xml:space="preserve">
          <source>Return a string identifying the specific test case. This is usually the full name of the test method, including the module and class name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a113a4111a49a8f9419ff0068d6244d0e33d06f" translate="yes" xml:space="preserve">
          <source>Return a string indicating the HTTP request method. If &lt;a href=&quot;#urllib.request.Request.method&quot;&gt;&lt;code&gt;Request.method&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;None&lt;/code&gt;, return its value, otherwise return &lt;code&gt;'GET'&lt;/code&gt; if &lt;a href=&quot;#urllib.request.Request.data&quot;&gt;&lt;code&gt;Request.data&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;, or &lt;code&gt;'POST'&lt;/code&gt; if it&amp;rsquo;s not. This is only meaningful for HTTP requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c52268f5570a4f950c076cc616faed144e41d93" translate="yes" xml:space="preserve">
          <source>Return a string object containing two hexadecimal digits for each byte in the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba113a34bcda36df20f774459ba88f464901caee" translate="yes" xml:space="preserve">
          <source>Return a string object containing two hexadecimal digits for each byte in the instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc86d96219bf5f97a1a3a476cefc65a5e502608" translate="yes" xml:space="preserve">
          <source>Return a string of &lt;em&gt;size&lt;/em&gt; random bytes suitable for cryptographic use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be21b34f59e16a550a887dc3baaac1f3a9eded88" translate="yes" xml:space="preserve">
          <source>Return a string or byte string containing the XML represented by the DOM node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5531893a46cfa5eac1071b233ca09eb86f13019d" translate="yes" xml:space="preserve">
          <source>Return a string representation of &lt;em&gt;object&lt;/em&gt;, protected against recursive data structures. If the representation of &lt;em&gt;object&lt;/em&gt; exposes a recursive entry, the recursive reference will be represented as &lt;code&gt;&amp;lt;Recursion on typename with
id=number&amp;gt;&lt;/code&gt;. The representation is not otherwise formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f431f4ce1a04d6a29acbb461b86600b87958c04" translate="yes" xml:space="preserve">
          <source>Return a string representation of the ASCII character &lt;em&gt;c&lt;/em&gt;. If &lt;em&gt;c&lt;/em&gt; is printable, this string is the character itself. If the character is a control character (0x00&amp;ndash;0x1f) the string consists of a caret (&lt;code&gt;'^'&lt;/code&gt;) followed by the corresponding uppercase letter. If the character is an ASCII delete (0x7f) the string is &lt;code&gt;'^?'&lt;/code&gt;. If the character has its meta bit (0x80) set, the meta bit is stripped, the preceding rules applied, and &lt;code&gt;'!'&lt;/code&gt; prepended to the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1aa068957a7c193258aa810711b6fe5ae2c2231" translate="yes" xml:space="preserve">
          <source>Return a string representation of the Morsel, suitable to be sent as an HTTP header. By default, all the attributes are included, unless &lt;em&gt;attrs&lt;/em&gt; is given, in which case it should be a list of attributes to use. &lt;em&gt;header&lt;/em&gt; is by default &lt;code&gt;&quot;Set-Cookie:&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c8050cba2acd8dafdf3ddb20ffc25e5d4f068a" translate="yes" xml:space="preserve">
          <source>Return a string representation of the message corresponding to &lt;em&gt;key&lt;/em&gt;, or raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception if no such message exists. The message is processed through &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; to convert it to a 7bit clean representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c546a561747bdaf01c8a06fed7d5c016b78c8b68" translate="yes" xml:space="preserve">
          <source>Return a string representation of the path with forward slashes (&lt;code&gt;/&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3806f3fe69120d72c6c249ca4a0fb0f11aafc353" translate="yes" xml:space="preserve">
          <source>Return a string representation suitable to be sent as HTTP headers. &lt;em&gt;attrs&lt;/em&gt; and &lt;em&gt;header&lt;/em&gt; are sent to each &lt;a href=&quot;#http.cookies.Morsel&quot;&gt;&lt;code&gt;Morsel&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;#http.cookies.BaseCookie.output&quot;&gt;&lt;code&gt;output()&lt;/code&gt;&lt;/a&gt; method. &lt;em&gt;sep&lt;/em&gt; is used to join the headers together, and is by default the combination &lt;code&gt;'\r\n'&lt;/code&gt; (CRLF).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e9577a049049e476ddbca572a3c50460a8e683" translate="yes" xml:space="preserve">
          <source>Return a string representing the &amp;ldquo;From &amp;rdquo; line that marks the start of the message in an mbox mailbox. The leading &amp;ldquo;From &amp;rdquo; and the trailing newline are excluded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b104ce8022cecde0197d72753470fcda98469db" translate="yes" xml:space="preserve">
          <source>Return a string representing the Morsel, without any surrounding HTTP or JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d47d992e0c01aaf5835f1cc6d33960688e03858" translate="yes" xml:space="preserve">
          <source>Return a string representing the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbde951d600bc31b069da02310daa7b6864cb734" translate="yes" xml:space="preserve">
          <source>Return a string representing the date and time in ISO 8601 format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b051f050b42f1114abeb9fba1481ff65571d96" translate="yes" xml:space="preserve">
          <source>Return a string representing the date and time, controlled by an explicit format string. For a complete list of formatting directives, see &lt;a href=&quot;#strftime-strptime-behavior&quot;&gt;strftime() and strptime() Behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0a4324828d25a4e0f63772cdb563cb3ec78175" translate="yes" xml:space="preserve">
          <source>Return a string representing the date and time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7347627fc80f78e36a382eca4bfc8d4ff9de3819" translate="yes" xml:space="preserve">
          <source>Return a string representing the date in ISO 8601 format, &lt;code&gt;YYYY-MM-DD&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81692929cf8788ad9e6f97a22bd0de926c02f5a8" translate="yes" xml:space="preserve">
          <source>Return a string representing the date, controlled by an explicit format string. Format codes referring to hours, minutes or seconds will see 0 values. For a complete list of formatting directives, see &lt;a href=&quot;#strftime-strptime-behavior&quot;&gt;strftime() and strptime() Behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2398fc85958f598fbf350f2a48cdeb67130ba8a3" translate="yes" xml:space="preserve">
          <source>Return a string representing the date:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162aebc80b8e0de95efef2b7c95bcc997ac64b74" translate="yes" xml:space="preserve">
          <source>Return a string representing the path to which the symbolic link points. The result may be either an absolute or relative pathname; if it is relative, it may be converted to an absolute pathname using &lt;code&gt;os.path.join(os.path.dirname(path), result)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c838a7cf9cebba14467da1fc0770f71c1c09265" translate="yes" xml:space="preserve">
          <source>Return a string representing the time in ISO 8601 format, one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38acb7bbd342fadf911dbc2e375828064d99182" translate="yes" xml:space="preserve">
          <source>Return a string representing the time, controlled by an explicit format string. For a complete list of formatting directives, see &lt;a href=&quot;#strftime-strptime-behavior&quot;&gt;strftime() and strptime() Behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171d6ef3b349d7856541811814e1c1d64258506a" translate="yes" xml:space="preserve">
          <source>Return a string specifying the flags that are currently set. If the message complies with the conventional format, the result is the concatenation in the following order of zero or one occurrence of each of &lt;code&gt;'R'&lt;/code&gt;, &lt;code&gt;'O'&lt;/code&gt;, &lt;code&gt;'D'&lt;/code&gt;, &lt;code&gt;'F'&lt;/code&gt;, and &lt;code&gt;'A'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33887a688f2e1632d3c234a6a21ced63b0dc47ea" translate="yes" xml:space="preserve">
          <source>Return a string specifying the flags that are currently set. If the message complies with the standard Maildir format, the result is the concatenation in alphabetical order of zero or one occurrence of each of &lt;code&gt;'D'&lt;/code&gt;, &lt;code&gt;'F'&lt;/code&gt;, &lt;code&gt;'P'&lt;/code&gt;, &lt;code&gt;'R'&lt;/code&gt;, &lt;code&gt;'S'&lt;/code&gt;, and &lt;code&gt;'T'&lt;/code&gt;. The empty string is returned if no flags are set or if &amp;ldquo;info&amp;rdquo; contains experimental semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a2752d2599fbfbf99ecacf888ff001993bae1a" translate="yes" xml:space="preserve">
          <source>Return a string that identifies the current platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdafc1b6346a7460ad7ab4d50e737dae8617c3fa" translate="yes" xml:space="preserve">
          <source>Return a string which is the concatenation of the strings in &lt;em&gt;iterable&lt;/em&gt;. A &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be raised if there are any non-string values in &lt;em&gt;iterable&lt;/em&gt;, including &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects. The separator between elements is the string providing this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8287d1c0181507ac1c0e77f6bb3de376c18bdb36" translate="yes" xml:space="preserve">
          <source>Return a string which specifies the terminal device associated with file descriptor &lt;em&gt;fd&lt;/em&gt;. If &lt;em&gt;fd&lt;/em&gt; is not associated with a terminal device, an exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c52b135f1b21ea17ab0e7c7417b57d9270afbbd" translate="yes" xml:space="preserve">
          <source>Return a string with all the information about the breakpoint, nicely formatted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0f34730b2854f46fa21855ae5ce76ba36aa662" translate="yes" xml:space="preserve">
          <source>Return a string with information about a stack entry, identified by a &lt;code&gt;(frame, lineno)&lt;/code&gt; tuple:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8185821f904292dd45762ec461097e9af476c5f2" translate="yes" xml:space="preserve">
          <source>Return a sub-window, whose upper-left corner is at &lt;code&gt;(begin_y, begin_x)&lt;/code&gt;, and whose width/height is &lt;em&gt;ncols&lt;/em&gt;/&lt;em&gt;nlines&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04380a073b63e22dcb6aad121634d87ecb13300b" translate="yes" xml:space="preserve">
          <source>Return a suitable DOM implementation. The &lt;em&gt;name&lt;/em&gt; is either well-known, the module name of a DOM implementation, or &lt;code&gt;None&lt;/code&gt;. If it is not &lt;code&gt;None&lt;/code&gt;, imports the corresponding module and returns a &lt;code&gt;DOMImplementation&lt;/code&gt; object if the import succeeds. If no name is given, and if the environment variable &lt;code id=&quot;index-0&quot;&gt;PYTHON_DOM&lt;/code&gt; is set, this variable is used to find the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc95ec80a297d33d524c8a25636c78c93c025f5" translate="yes" xml:space="preserve">
          <source>Return a suite of all test cases contained in the &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;-derived &lt;code&gt;testCaseClass&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcadfec3a29da6504dae1d01223af3da6757528" translate="yes" xml:space="preserve">
          <source>Return a suite of all test cases contained in the given module. This method searches &lt;em&gt;module&lt;/em&gt; for classes derived from &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; and creates an instance of the class for each test method defined for the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9c007936984396ee616eb2e46605a462aa3d12" translate="yes" xml:space="preserve">
          <source>Return a suite of all test cases given a string specifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761b1f502b800611773470af02a0c194a2781199" translate="yes" xml:space="preserve">
          <source>Return a task factory or &lt;code&gt;None&lt;/code&gt; if the default one is in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2088efc8774f9ae7a5ecb959ea8fff8cca3736a4" translate="yes" xml:space="preserve">
          <source>Return a textbox widget object. The &lt;em&gt;win&lt;/em&gt; argument should be a curses &lt;a href=&quot;#curses-window-objects&quot;&gt;window&lt;/a&gt; object in which the textbox is to be contained. The edit cursor of the textbox is initially located at the upper left hand corner of the containing window, with coordinates &lt;code&gt;(0, 0)&lt;/code&gt;. The instance&amp;rsquo;s &lt;a href=&quot;#curses.textpad.Textbox.stripspaces&quot;&gt;&lt;code&gt;stripspaces&lt;/code&gt;&lt;/a&gt; flag is initially on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a8bc65c46502e7de36f6a122f43653df819b3c" translate="yes" xml:space="preserve">
          <source>Return a titlecased version of the binary sequence where words start with an uppercase ASCII character and the remaining characters are lowercase. Uncased byte values are left unmodified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f836ea295bc37b58ca383780181d801ebfca11" translate="yes" xml:space="preserve">
          <source>Return a titlecased version of the string where words start with an uppercase character and the remaining characters are lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad2dc899abc4aa5bf7924d8624205376060dee1" translate="yes" xml:space="preserve">
          <source>Return a token. If tokens have been stacked using &lt;a href=&quot;#shlex.shlex.push_token&quot;&gt;&lt;code&gt;push_token()&lt;/code&gt;&lt;/a&gt;, pop a token off the stack. Otherwise, read one from the input stream. If reading encounters an immediate end-of-file, &lt;a href=&quot;#shlex.shlex.eof&quot;&gt;&lt;code&gt;eof&lt;/code&gt;&lt;/a&gt; is returned (the empty string (&lt;code&gt;''&lt;/code&gt;) in non-POSIX mode, and &lt;code&gt;None&lt;/code&gt; in POSIX mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3939350322f4bdf0d3ae3d57736e807cc0f30d" translate="yes" xml:space="preserve">
          <source>Return a triple &lt;code&gt;(hostname, aliaslist, ipaddrlist)&lt;/code&gt; where &lt;em&gt;hostname&lt;/em&gt; is the primary host name responding to the given &lt;em&gt;ip_address&lt;/em&gt;, &lt;em&gt;aliaslist&lt;/em&gt; is a (possibly empty) list of alternative host names for the same address, and &lt;em&gt;ipaddrlist&lt;/em&gt; is a list of IPv4/v6 addresses for the same interface on the same host (most likely containing only a single address). To find the fully qualified domain name, use the function &lt;a href=&quot;#socket.getfqdn&quot;&gt;&lt;code&gt;getfqdn()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#socket.gethostbyaddr&quot;&gt;&lt;code&gt;gethostbyaddr()&lt;/code&gt;&lt;/a&gt; supports both IPv4 and IPv6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a831953f2ac1487f8290c5d5e8bfac865a08c5af" translate="yes" xml:space="preserve">
          <source>Return a tuple (rgid, egid, sgid) denoting the current process&amp;rsquo;s real, effective, and saved group ids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656cbe64bad8500de41b58ae58141a47a3979332" translate="yes" xml:space="preserve">
          <source>Return a tuple (ruid, euid, suid) denoting the current process&amp;rsquo;s real, effective, and saved user ids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ca47ab40fa73cadda960759b763ba341e6d78b" translate="yes" xml:space="preserve">
          <source>Return a tuple &lt;code&gt;(address, length)&lt;/code&gt; giving the current memory address and the length in elements of the buffer used to hold array&amp;rsquo;s contents. The size of the memory buffer in bytes can be computed as &lt;code&gt;array.buffer_info()[1] *
array.itemsize&lt;/code&gt;. This is occasionally useful when working with low-level (and inherently unsafe) I/O interfaces that require memory addresses, such as certain &lt;code&gt;ioctl()&lt;/code&gt; operations. The returned numbers are valid as long as the array exists and no length-changing operations are applied to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdfeb3272c2dde4cd2bfc1c708bd2851990a834" translate="yes" xml:space="preserve">
          <source>Return a tuple &lt;code&gt;(fg, bg)&lt;/code&gt; containing the colors for the requested color pair. The value of &lt;em&gt;pair_number&lt;/em&gt; must be between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;COLOR_PAIRS - 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f4289e4e43095d4480cc981b4023cb728df9f4" translate="yes" xml:space="preserve">
          <source>Return a tuple &lt;code&gt;(real_value, coded_value)&lt;/code&gt; from a string representation. &lt;code&gt;real_value&lt;/code&gt; can be any type. This method does no decoding in &lt;a href=&quot;#http.cookies.BaseCookie&quot;&gt;&lt;code&gt;BaseCookie&lt;/code&gt;&lt;/a&gt; &amp;mdash; it exists so it can be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b4995c0c5ae111e69c97dd1bf02949077b5f22" translate="yes" xml:space="preserve">
          <source>Return a tuple &lt;code&gt;(real_value, coded_value)&lt;/code&gt;. &lt;em&gt;val&lt;/em&gt; can be any type, but &lt;code&gt;coded_value&lt;/code&gt; will always be converted to a string. This method does no encoding in &lt;a href=&quot;#http.cookies.BaseCookie&quot;&gt;&lt;code&gt;BaseCookie&lt;/code&gt;&lt;/a&gt; &amp;mdash; it exists so it can be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fcde897b860c6d79fd1545934052a0dc70e5ff" translate="yes" xml:space="preserve">
          <source>Return a tuple &lt;code&gt;(stdout_data, stderr_data)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36c86d436488d077189930b257bc716b9f4c81d" translate="yes" xml:space="preserve">
          <source>Return a tuple &lt;code&gt;(y, x)&lt;/code&gt; of co-ordinates of upper-left corner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c813076ee75ea83bbfb79704f5a2f2df029ddb" translate="yes" xml:space="preserve">
          <source>Return a tuple &lt;code&gt;(y, x)&lt;/code&gt; of current cursor position relative to the window&amp;rsquo;s upper-left corner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb246730e99271c29dc49493af61d72186b946f" translate="yes" xml:space="preserve">
          <source>Return a tuple &lt;code&gt;(y, x)&lt;/code&gt; of the height and width of the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df549e5c55bac63e123918bafdd2a93b207602e1" translate="yes" xml:space="preserve">
          <source>Return a tuple consisting of the minimum and maximum values of all samples in the sound fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fd34d1ab11e5cb03c7b4484922b91e98d44595" translate="yes" xml:space="preserve">
          <source>Return a tuple containing &lt;em&gt;event&lt;/em&gt; and the current &lt;em&gt;node&lt;/em&gt; as &lt;code&gt;xml.dom.minidom.Document&lt;/code&gt; if event equals &lt;code&gt;START_DOCUMENT&lt;/code&gt;, &lt;code&gt;xml.dom.minidom.Element&lt;/code&gt; if event equals &lt;code&gt;START_ELEMENT&lt;/code&gt; or &lt;code&gt;END_ELEMENT&lt;/code&gt; or &lt;code&gt;xml.dom.minidom.Text&lt;/code&gt; if event equals &lt;code&gt;CHARACTERS&lt;/code&gt;. The current node does not contain information about its children, unless &lt;a href=&quot;#xml.dom.pulldom.DOMEventStream.expandNode&quot;&gt;&lt;code&gt;expandNode()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bddde9027bc69dd5dd2a416cfd9a27a90956992" translate="yes" xml:space="preserve">
          <source>Return a tuple containing all path names currently supported in &lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bc9d126afc60e4b46ff4470407a959e052a1f2" translate="yes" xml:space="preserve">
          <source>Return a tuple containing all schemes currently supported in &lt;a href=&quot;#module-sysconfig&quot;&gt;&lt;code&gt;sysconfig&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a98869dc17f3ef6218a27c30f20c82806e05fd8" translate="yes" xml:space="preserve">
          <source>Return a tuple containing all the subgroups of the match, from 1 up to however many groups are in the pattern. The &lt;em&gt;default&lt;/em&gt; argument is used for groups that did not participate in the match; it defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d26ee297d831da16b8268f76db3848bd02df49" translate="yes" xml:space="preserve">
          <source>Return a tuple containing names of free variables in this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0dd857b8c38543ead8df604d531fc2a6e964bb" translate="yes" xml:space="preserve">
          <source>Return a tuple containing names of globals in this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e482d6cae7337079a264b9b89307f7b99d8144" translate="yes" xml:space="preserve">
          <source>Return a tuple containing names of locals in this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bec90654ff34bf505464f535a76e0a92d9ca1b" translate="yes" xml:space="preserve">
          <source>Return a tuple containing names of nonlocals in this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3322e1e1539f3f962deb341282b5c142be0cad0e" translate="yes" xml:space="preserve">
          <source>Return a tuple containing names of parameters to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba446c236156cc8f43f606669f53dc014b60240" translate="yes" xml:space="preserve">
          <source>Return a tuple containing the names of methods declared in the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1a22a97501d7a00bb1e57a083b84fa58b57a64" translate="yes" xml:space="preserve">
          <source>Return a tuple of class cls&amp;rsquo;s base classes, including cls, in method resolution order. No class appears more than once in this tuple. Note that the method resolution order depends on cls&amp;rsquo;s type. Unless a very peculiar user-defined metatype is in use, cls will be the first element of the tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0befa9cbedff87aa4c45edc9f5d251c4782159" translate="yes" xml:space="preserve">
          <source>Return a tuple of three items: the index in the list of the first regular expression that matches; the match object returned; and the bytes read up till and including the match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a380d42e24dcdac958b27cd519cae979fd8459e" translate="yes" xml:space="preserve">
          <source>Return a tuple of two integers, whose ratio is equal to the Fraction and with a positive denominator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80ac14303b313d631e6d95de7bf5b3dd9cc2d8f" translate="yes" xml:space="preserve">
          <source>Return a value equal to the first operand after rounding and having the exponent of the second operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2584b20483abd1e14b7bc0fa01ba19c50034723" translate="yes" xml:space="preserve">
          <source>Return a value for the context variable for the current context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c727cafbdd8ff5a22b73b3a4f498f02d1aeed9e" translate="yes" xml:space="preserve">
          <source>Return a view object, by calling &lt;code&gt;MSIDatabaseOpenView()&lt;/code&gt;. &lt;em&gt;sql&lt;/em&gt; is the SQL statement to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9f0737fd7549cd1bfcb21352c187290336d8a0" translate="yes" xml:space="preserve">
          <source>Return a watcher object implementing the &lt;a href=&quot;#asyncio.AbstractChildWatcher&quot;&gt;&lt;code&gt;AbstractChildWatcher&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8771548073bbe58731a834e92f4a80c9445950c" translate="yes" xml:space="preserve">
          <source>Return a weak reference to &lt;em&gt;object&lt;/em&gt;. The original object can be retrieved by calling the reference object if the referent is still alive; if the referent is no longer alive, calling the reference object will cause &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; to be returned. If &lt;em&gt;callback&lt;/em&gt; is provided and not &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, and the returned weakref object is still alive, the callback will be called when the object is about to be finalized; the weak reference object will be passed as the only parameter to the callback; the referent will no longer be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c50541e005cb7790c35ebe5357a98127b5d4c1" translate="yes" xml:space="preserve">
          <source>Return a writer object responsible for converting the user&amp;rsquo;s data into delimited strings on the given file-like object. &lt;em&gt;csvfile&lt;/em&gt; can be any object with a &lt;code&gt;write()&lt;/code&gt; method. If &lt;em&gt;csvfile&lt;/em&gt; is a file object, it should be opened with &lt;code&gt;newline=''&lt;/code&gt;&lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;. An optional &lt;em&gt;dialect&lt;/em&gt; parameter can be given which is used to define a set of parameters specific to a particular CSV dialect. It may be an instance of a subclass of the &lt;a href=&quot;#csv.Dialect&quot;&gt;&lt;code&gt;Dialect&lt;/code&gt;&lt;/a&gt; class or one of the strings returned by the &lt;a href=&quot;#csv.list_dialects&quot;&gt;&lt;code&gt;list_dialects()&lt;/code&gt;&lt;/a&gt; function. The other optional &lt;em&gt;fmtparams&lt;/em&gt; keyword arguments can be given to override individual formatting parameters in the current dialect. For full details about the dialect and formatting parameters, see section &lt;a href=&quot;#csv-fmt-params&quot;&gt;Dialects and Formatting Parameters&lt;/a&gt;. To make it as easy as possible to interface with modules which implement the DB API, the value &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; is written as the empty string. While this isn&amp;rsquo;t a reversible transformation, it makes it easier to dump SQL NULL data values to CSV files without preprocessing the data returned from a &lt;code&gt;cursor.fetch*&lt;/code&gt; call. All other non-string data are stringified with &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; before being written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79e297be0be1f0745a5a7b6e32bb672c5fef3da" translate="yes" xml:space="preserve">
          <source>Return a year&amp;rsquo;s calendar as a complete HTML page. &lt;em&gt;width&lt;/em&gt; (defaulting to 3) specifies the number of months per row. &lt;em&gt;css&lt;/em&gt; is the name for the cascading style sheet to be used. &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; can be passed if no style sheet should be used. &lt;em&gt;encoding&lt;/em&gt; specifies the encoding to be used for the output (defaulting to the system default encoding).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe91d9c0bc9453353a2c2d5e9b1c9341ee846e5" translate="yes" xml:space="preserve">
          <source>Return a year&amp;rsquo;s calendar as an HTML table. &lt;em&gt;width&lt;/em&gt; (defaulting to 3) specifies the number of months per row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2b7d233df7e999a7ddf75d80e0a96d0570f082" translate="yes" xml:space="preserve">
          <source>Return all breakpoints for &lt;em&gt;lineno&lt;/em&gt; in &lt;em&gt;filename&lt;/em&gt;, or an empty list if none are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ab9cc5a45f24050cb45043ac3f9912d8909df6" translate="yes" xml:space="preserve">
          <source>Return all breakpoints in &lt;em&gt;filename&lt;/em&gt;, or an empty list if none are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1611682176a4d029ae494944900b2dd37f9045" translate="yes" xml:space="preserve">
          <source>Return all breakpoints that are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42550819a90ef3de1e31f9a68b19fe07b1c411fc" translate="yes" xml:space="preserve">
          <source>Return all non-overlapping matches of &lt;em&gt;pattern&lt;/em&gt; in &lt;em&gt;string&lt;/em&gt;, as a list of strings. The &lt;em&gt;string&lt;/em&gt; is scanned left-to-right, and matches are returned in the order found. If one or more groups are present in the pattern, return a list of groups; this will be a list of tuples if the pattern has more than one group. Empty matches are included in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6258969d8656866198cb610d6553f6696fe4aa8" translate="yes" xml:space="preserve">
          <source>Return all tasks for an event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512746f513537475243d15a1ab05658d481cd1d3" translate="yes" xml:space="preserve">
          <source>Return all the members of an object in a list of &lt;code&gt;(name, value)&lt;/code&gt; pairs sorted by name. If the optional &lt;em&gt;predicate&lt;/em&gt; argument&amp;mdash;which will be called with the &lt;code&gt;value&lt;/code&gt; object of each member&amp;mdash;is supplied, only members for which the predicate returns a true value are included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce56913f1ad3d5edbf63c368596f72801d66225" translate="yes" xml:space="preserve">
          <source>Return an &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ipaddress.IPv6Address&quot;&gt;&lt;code&gt;IPv6Address&lt;/code&gt;&lt;/a&gt; object depending on the IP address passed as argument. Either IPv4 or IPv6 addresses may be supplied; integers less than 2**32 will be considered to be IPv4 by default. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;address&lt;/em&gt; does not represent a valid IPv4 or IPv6 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18984da6f55c171a6294f98eb1853459a7dfe23a" translate="yes" xml:space="preserve">
          <source>Return an &lt;a href=&quot;#ipaddress.IPv4Interface&quot;&gt;&lt;code&gt;IPv4Interface&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ipaddress.IPv6Interface&quot;&gt;&lt;code&gt;IPv6Interface&lt;/code&gt;&lt;/a&gt; object depending on the IP address passed as argument. &lt;em&gt;address&lt;/em&gt; is a string or integer representing the IP address. Either IPv4 or IPv6 addresses may be supplied; integers less than 2**32 will be considered to be IPv4 by default. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;address&lt;/em&gt; does not represent a valid IPv4 or IPv6 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e212ba518aa9dbd4b395d87af9582d64379f4a6" translate="yes" xml:space="preserve">
          <source>Return an &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt; object depending on the IP address passed as argument. &lt;em&gt;address&lt;/em&gt; is a string or integer representing the IP network. Either IPv4 or IPv6 networks may be supplied; integers less than 2**32 will be considered to be IPv4 by default. &lt;em&gt;strict&lt;/em&gt; is passed to &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt; constructor. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;address&lt;/em&gt; does not represent a valid IPv4 or IPv6 address, or if the network has host bits set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032a5d0aa58443a9a54fe7e00dc4ffd196ef0ca4" translate="yes" xml:space="preserve">
          <source>Return an &lt;a href=&quot;#mailbox.MH&quot;&gt;&lt;code&gt;MH&lt;/code&gt;&lt;/a&gt; instance representing the folder whose name is &lt;em&gt;folder&lt;/em&gt;. A &lt;a href=&quot;#mailbox.NoSuchMailboxError&quot;&gt;&lt;code&gt;NoSuchMailboxError&lt;/code&gt;&lt;/a&gt; exception is raised if the folder does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963673d790a8b5f6c4373162acc114ff5333e90a" translate="yes" xml:space="preserve">
          <source>Return an &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; instance whose headers are the message&amp;rsquo;s visible headers and whose body is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa77c4497f9314f31426b6fd4db9ebe0f984847" translate="yes" xml:space="preserve">
          <source>Return an &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; instance, which chains the handlers in the order given. &lt;em&gt;handler&lt;/em&gt;s can be either instances of &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, or subclasses of &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt; (in which case it must be possible to call the constructor without any parameters). Instances of the following classes will be in front of the &lt;em&gt;handler&lt;/em&gt;s, unless the &lt;em&gt;handler&lt;/em&gt;s contain them, instances of them or subclasses of them: &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt; (if proxy settings are detected), &lt;a href=&quot;#urllib.request.UnknownHandler&quot;&gt;&lt;code&gt;UnknownHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#urllib.request.HTTPHandler&quot;&gt;&lt;code&gt;HTTPHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#urllib.request.HTTPDefaultErrorHandler&quot;&gt;&lt;code&gt;HTTPDefaultErrorHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#urllib.request.HTTPRedirectHandler&quot;&gt;&lt;code&gt;HTTPRedirectHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#urllib.request.FTPHandler&quot;&gt;&lt;code&gt;FTPHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#urllib.request.FileHandler&quot;&gt;&lt;code&gt;FileHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#urllib.request.HTTPErrorProcessor&quot;&gt;&lt;code&gt;HTTPErrorProcessor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11ea51189a1da1c925345ddff091710f181db7b" translate="yes" xml:space="preserve">
          <source>Return an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; object. The first argument is interpreted very differently depending on the presence of the second argument. Without a second argument, &lt;em&gt;object&lt;/em&gt; must be a collection object which supports the iteration protocol (the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method), or it must support the sequence protocol (the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method with integer arguments starting at &lt;code&gt;0&lt;/code&gt;). If it does not support either of those protocols, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised. If the second argument, &lt;em&gt;sentinel&lt;/em&gt;, is given, then &lt;em&gt;object&lt;/em&gt; must be a callable object. The iterator created in this case will call &lt;em&gt;object&lt;/em&gt; with no arguments for each call to its &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method; if the value returned is equal to &lt;em&gt;sentinel&lt;/em&gt;, &lt;a href=&quot;exceptions#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; will be raised, otherwise the value will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67c6f770e109e982f7e3d83913356e8cebf65cb" translate="yes" xml:space="preserve">
          <source>Return an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; which yields the same values as &lt;a href=&quot;#module-glob&quot;&gt;&lt;code&gt;glob()&lt;/code&gt;&lt;/a&gt; without actually storing them all simultaneously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8681454b3c659c09e0cd247a3a4fbbd8b176cc2a" translate="yes" xml:space="preserve">
          <source>Return an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; yielding &lt;a href=&quot;#match-objects&quot;&gt;match objects&lt;/a&gt; over all non-overlapping matches for the RE &lt;em&gt;pattern&lt;/em&gt; in &lt;em&gt;string&lt;/em&gt;. The &lt;em&gt;string&lt;/em&gt; is scanned left-to-right, and matches are returned in the order found. Empty matches are included in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e320dc860ef2dd77fe4e07d01bea912f851724f" translate="yes" xml:space="preserve">
          <source>Return an absolute pathname of a file that did not exist at the time the call is made. The &lt;em&gt;prefix&lt;/em&gt;, &lt;em&gt;suffix&lt;/em&gt;, and &lt;em&gt;dir&lt;/em&gt; arguments are similar to those of &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt;, except that bytes file names, &lt;code&gt;suffix=None&lt;/code&gt; and &lt;code&gt;prefix=None&lt;/code&gt; are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8fdf7edcff10f25bd63eebbe4b2e5618adeeb3" translate="yes" xml:space="preserve">
          <source>Return an accurate floating point sum of values in the iterable. Avoids loss of precision by tracking multiple intermediate partial sums:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127671d963398aa079f4ff7b17075a913f79acc6" translate="yes" xml:space="preserve">
          <source>Return an arbitrary (&lt;em&gt;key&lt;/em&gt;, &lt;em&gt;message&lt;/em&gt;) pair, where &lt;em&gt;key&lt;/em&gt; is a key and &lt;em&gt;message&lt;/em&gt; is a message representation, and delete the corresponding message. If the mailbox is empty, raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception. The message is represented as an instance of the appropriate format-specific &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; subclass unless a custom message factory was specified when the &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance was initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec6395d0c88ec605f2fbdc5795498072bce40ff" translate="yes" xml:space="preserve">
          <source>Return an array of bytes representing an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93973a1e4d5a48e06d0ff79a81c8713122a5b522" translate="yes" xml:space="preserve">
          <source>Return an attribute value as a node, given a &lt;em&gt;namespaceURI&lt;/em&gt; and &lt;em&gt;localName&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd9b099789f8e93e4ad84fede1cdad653073ad5" translate="yes" xml:space="preserve">
          <source>Return an attribute with a particular index. The order you get the attributes in is arbitrary but will be consistent for the life of a DOM. Each item is an attribute node. Get its value with the &lt;code&gt;value&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfd494d5dba53ea76b5de0cabc259c3323f32a3" translate="yes" xml:space="preserve">
          <source>Return an embeddable JavaScript snippet, which, if run on a browser which supports JavaScript, will act the same as if the HTTP header was sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b542c3fa58f3e266adcaea5494fef20fda3254" translate="yes" xml:space="preserve">
          <source>Return an embeddable JavaScript snippet, which, if run on a browser which supports JavaScript, will act the same as if the HTTP headers was sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1e56c631b558656994e19a5822260dfc4e7d91" translate="yes" xml:space="preserve">
          <source>Return an encapsulated exception object, or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7499f47324cb9c5675d20ef9c5b2d9bb4fddba" translate="yes" xml:space="preserve">
          <source>Return an encoded version of the string as a bytes object. Default encoding is &lt;code&gt;'utf-8'&lt;/code&gt;. &lt;em&gt;errors&lt;/em&gt; may be given to set a different error handling scheme. The default for &lt;em&gt;errors&lt;/em&gt; is &lt;code&gt;'strict'&lt;/code&gt;, meaning that encoding errors raise a &lt;a href=&quot;exceptions#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt;. Other possible values are &lt;code&gt;'ignore'&lt;/code&gt;, &lt;code&gt;'replace'&lt;/code&gt;, &lt;code&gt;'xmlcharrefreplace'&lt;/code&gt;, &lt;code&gt;'backslashreplace'&lt;/code&gt; and any other name registered via &lt;a href=&quot;codecs#codecs.register_error&quot;&gt;&lt;code&gt;codecs.register_error()&lt;/code&gt;&lt;/a&gt;, see section &lt;a href=&quot;codecs#error-handlers&quot;&gt;Error Handlers&lt;/a&gt;. For a list of possible encodings, see section &lt;a href=&quot;codecs#standard-encodings&quot;&gt;Standard Encodings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9123870dab9db143144c00c1aafde98894c941d6" translate="yes" xml:space="preserve">
          <source>Return an enumerate object. &lt;em&gt;iterable&lt;/em&gt; must be a sequence, an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt;, or some other object which supports iteration. The &lt;a href=&quot;stdtypes#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method of the iterator returned by &lt;a href=&quot;#enumerate&quot;&gt;&lt;code&gt;enumerate()&lt;/code&gt;&lt;/a&gt; returns a tuple containing a count (from &lt;em&gt;start&lt;/em&gt; which defaults to 0) and the values obtained from iterating over &lt;em&gt;iterable&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29605db41a04d79d19a024602de45e0f17bbb3fa" translate="yes" xml:space="preserve">
          <source>Return an estimated length for the object &lt;em&gt;o&lt;/em&gt;. First try to return its actual length, then an estimate using &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__length_hint__&quot;&gt;&lt;code&gt;object.__length_hint__()&lt;/code&gt;&lt;/a&gt;, and finally return the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183f3cc1f601aa8bd5a910bf020b7d9fcc135829" translate="yes" xml:space="preserve">
          <source>Return an event loop object implementing the &lt;a href=&quot;asyncio-eventloop#asyncio.AbstractEventLoop&quot;&gt;&lt;code&gt;AbstractEventLoop&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45ffe58f22d55378895682084a4cfc336a61c7a" translate="yes" xml:space="preserve">
          <source>Return an independent clone of this &lt;a href=&quot;#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; instance with the exact same option settings, and &lt;em&gt;fp&lt;/em&gt; as the new &lt;em&gt;outfp&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a06fd6bdc1a1e31948440c84a13db4be87db62" translate="yes" xml:space="preserve">
          <source>Return an independent clone of this &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; instance with the exact same options, and &lt;em&gt;fp&lt;/em&gt; as the new &lt;em&gt;outfp&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c84c7b963e2d271f0e6ac8880d109efebd81c37" translate="yes" xml:space="preserve">
          <source>Return an input stream object suitable for use as the &lt;code&gt;wsgi.input&lt;/code&gt; of the request currently being processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788770d5dd95e30bf8aa8ceb97f3c4735cf00f0d" translate="yes" xml:space="preserve">
          <source>Return an installation path corresponding to the path &lt;em&gt;name&lt;/em&gt;, from the install scheme named &lt;em&gt;scheme&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f2f015e5a8afc3fb7bad1ab5d229a5e9cc3e82" translate="yes" xml:space="preserve">
          <source>Return an instance of a &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; subclass that has methods specialized for rearranging dictionary order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaaedce4f13e8249ed07532d18fac8c479624432" translate="yes" xml:space="preserve">
          <source>Return an instance of the test result class that should be used for this test case class (if no other result instance is provided to the &lt;a href=&quot;#unittest.TestCase.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c8c2ddf8fec2927d05f0750b2c32a6afeec403" translate="yes" xml:space="preserve">
          <source>Return an int with &lt;em&gt;k&lt;/em&gt; random bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5facb5ea3420475a07c2f91ae8a8685cfc3e7214" translate="yes" xml:space="preserve">
          <source>Return an integer file descriptor for the socket on which the server is listening. This function is most commonly passed to &lt;a href=&quot;selectors#module-selectors&quot;&gt;&lt;code&gt;selectors&lt;/code&gt;&lt;/a&gt;, to allow monitoring multiple servers in the same process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e537feae447e12ef180791fbfc4a5f50a8fa3b7c" translate="yes" xml:space="preserve">
          <source>Return an integer object constructed from a number or string &lt;em&gt;x&lt;/em&gt;, or return &lt;code&gt;0&lt;/code&gt; if no arguments are given. If &lt;em&gt;x&lt;/em&gt; defines &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__int__&quot;&gt;&lt;code&gt;__int__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;int(x)&lt;/code&gt; returns &lt;code&gt;x.__int__()&lt;/code&gt;. If &lt;em&gt;x&lt;/em&gt; defines &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt;, it returns &lt;code&gt;x.__index__()&lt;/code&gt;. If &lt;em&gt;x&lt;/em&gt; defines &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__trunc__&quot;&gt;&lt;code&gt;__trunc__()&lt;/code&gt;&lt;/a&gt;, it returns &lt;code&gt;x.__trunc__()&lt;/code&gt;. For floating point numbers, this truncates towards zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e3d6f90894d64ffb3a172ad286a980dc535516" translate="yes" xml:space="preserve">
          <source>Return an item if one is immediately available, else raise &lt;a href=&quot;#asyncio.QueueEmpty&quot;&gt;&lt;code&gt;QueueEmpty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42e0308779b33f31c853cdaa65f5e35540168f2" translate="yes" xml:space="preserve">
          <source>Return an iterable of the weak references to the keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e0b9be59851e31dae0edb6a4765fd7b36e8074" translate="yes" xml:space="preserve">
          <source>Return an iterable of the weak references to the values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0609d633042791df567232daa0ad393be235027e" translate="yes" xml:space="preserve">
          <source>Return an iterable over the named items within the package. The iterable returns &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; resources (e.g. files) and non-resources (e.g. directories). The iterable does not recurse into subdirectories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4ba99b2adb2e5fa1521d3b66d7a178739f34aa" translate="yes" xml:space="preserve">
          <source>Return an iterator for the month &lt;em&gt;month&lt;/em&gt; (1&amp;ndash;12) in the year &lt;em&gt;year&lt;/em&gt;. This iterator will return all days (as &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; objects) for the month and all days before the start of the month or after the end of the month that are required to get a complete week.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98531db4656d422d01a05873e75751c546926489" translate="yes" xml:space="preserve">
          <source>Return an iterator for the month &lt;em&gt;month&lt;/em&gt; in the year &lt;em&gt;year&lt;/em&gt; similar to &lt;a href=&quot;#calendar.Calendar.itermonthdates&quot;&gt;&lt;code&gt;itermonthdates()&lt;/code&gt;&lt;/a&gt;, but not restricted by the &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; range. Days returned will be tuples consisting of a day of the month number and a week day number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb59bc920fb9ed2db38734c059a2d47aa6c9583" translate="yes" xml:space="preserve">
          <source>Return an iterator for the month &lt;em&gt;month&lt;/em&gt; in the year &lt;em&gt;year&lt;/em&gt; similar to &lt;a href=&quot;#calendar.Calendar.itermonthdates&quot;&gt;&lt;code&gt;itermonthdates()&lt;/code&gt;&lt;/a&gt;, but not restricted by the &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; range. Days returned will be tuples consisting of a year, a month and a day of the month numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6891dde95d0f3c248bd6fc288f76a0dec51ec595" translate="yes" xml:space="preserve">
          <source>Return an iterator for the month &lt;em&gt;month&lt;/em&gt; in the year &lt;em&gt;year&lt;/em&gt; similar to &lt;a href=&quot;#calendar.Calendar.itermonthdates&quot;&gt;&lt;code&gt;itermonthdates()&lt;/code&gt;&lt;/a&gt;, but not restricted by the &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; range. Days returned will be tuples consisting of a year, a month, a day of the month, and a day of the week numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd019251c8679b9532c58979243d53cd9f883ef" translate="yes" xml:space="preserve">
          <source>Return an iterator for the month &lt;em&gt;month&lt;/em&gt; in the year &lt;em&gt;year&lt;/em&gt; similar to &lt;a href=&quot;#calendar.Calendar.itermonthdates&quot;&gt;&lt;code&gt;itermonthdates()&lt;/code&gt;&lt;/a&gt;, but not restricted by the &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; range. Days returned will simply be day of the month numbers. For the days outside of the specified month, the day number is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14eb15590feb413a4daa14925b1dd17afbfa8c77" translate="yes" xml:space="preserve">
          <source>Return an iterator for the week day numbers that will be used for one week. The first value from the iterator will be the same as the value of the &lt;a href=&quot;#calendar.firstweekday&quot;&gt;&lt;code&gt;firstweekday&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed85c1da80aaad34387acc51f071647442f9845" translate="yes" xml:space="preserve">
          <source>Return an iterator object. The object is required to support the iterator protocol described below. If a container supports different types of iteration, additional methods can be provided to specifically request iterators for those iteration types. (An example of an object supporting multiple forms of iteration would be a tree structure which supports both breadth-first and depth-first traversal.) This method corresponds to the &lt;a href=&quot;https://docs.python.org/3.8/c-api/typeobj.html#c.PyTypeObject.tp_iter&quot;&gt;&lt;code&gt;tp_iter&lt;/code&gt;&lt;/a&gt; slot of the type structure for Python objects in the Python/C API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ece268a6cfac63dffc94b7f75f4d58f4438831" translate="yes" xml:space="preserve">
          <source>Return an iterator of &lt;a href=&quot;#os.DirEntry&quot;&gt;&lt;code&gt;os.DirEntry&lt;/code&gt;&lt;/a&gt; objects corresponding to the entries in the directory given by &lt;em&gt;path&lt;/em&gt;. The entries are yielded in arbitrary order, and the special entries &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt; are not included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc91bca9aa229313e1a3d06291be1d9d162702aa" translate="yes" xml:space="preserve">
          <source>Return an iterator of the collapsed &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt; objects. &lt;em&gt;addresses&lt;/em&gt; is an iterator of &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt; objects. A &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;addresses&lt;/em&gt; contains mixed version objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c6236f9c27b8cde4ea997df87f621ca01a140e" translate="yes" xml:space="preserve">
          <source>Return an iterator of the summarized network range given the first and last IP addresses. &lt;em&gt;first&lt;/em&gt; is the first &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ipaddress.IPv6Address&quot;&gt;&lt;code&gt;IPv6Address&lt;/code&gt;&lt;/a&gt; in the range and &lt;em&gt;last&lt;/em&gt; is the last &lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ipaddress.IPv6Address&quot;&gt;&lt;code&gt;IPv6Address&lt;/code&gt;&lt;/a&gt; in the range. A &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;first&lt;/em&gt; or &lt;em&gt;last&lt;/em&gt; are not IP addresses or are not of the same version. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;last&lt;/em&gt; is not greater than &lt;em&gt;first&lt;/em&gt; or if &lt;em&gt;first&lt;/em&gt; address version is not 4 or 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9efdc06e2a679496fb29847d9f6eaeb62b37f4e" translate="yes" xml:space="preserve">
          <source>Return an iterator over (&lt;em&gt;key&lt;/em&gt;, &lt;em&gt;message&lt;/em&gt;) pairs, where &lt;em&gt;key&lt;/em&gt; is a key and &lt;em&gt;message&lt;/em&gt; is a message representation, if called as &lt;a href=&quot;#mailbox.Mailbox.iteritems&quot;&gt;&lt;code&gt;iteritems()&lt;/code&gt;&lt;/a&gt; or return a list of such pairs if called as &lt;a href=&quot;#mailbox.Mailbox.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt;. The messages are represented as instances of the appropriate format-specific &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; subclass unless a custom message factory was specified when the &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance was initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746d83622fb7976ef628edc182cbb0e62c139bad" translate="yes" xml:space="preserve">
          <source>Return an iterator over all keys if called as &lt;a href=&quot;#mailbox.Mailbox.iterkeys&quot;&gt;&lt;code&gt;iterkeys()&lt;/code&gt;&lt;/a&gt; or return a list of keys if called as &lt;a href=&quot;#mailbox.Mailbox.keys&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf801e575238c0d56147d6e04fdc71d3f6ad476" translate="yes" xml:space="preserve">
          <source>Return an iterator over all of the immediate sub-parts of the message that are not candidate &amp;ldquo;body&amp;rdquo; parts. That is, skip the first occurrence of each of &lt;code&gt;text/plain&lt;/code&gt;, &lt;code&gt;text/html&lt;/code&gt;, &lt;code&gt;multipart/related&lt;/code&gt;, or &lt;code&gt;multipart/alternative&lt;/code&gt; (unless they are explicitly marked as attachments via &lt;em&gt;Content-Disposition: attachment&lt;/em&gt;), and return all remaining parts. When applied directly to a &lt;code&gt;multipart/related&lt;/code&gt;, return an iterator over the all the related parts except the root part (ie: the part pointed to by the &lt;code&gt;start&lt;/code&gt; parameter, or the first part if there is no &lt;code&gt;start&lt;/code&gt; parameter or the &lt;code&gt;start&lt;/code&gt; parameter doesn&amp;rsquo;t match the &lt;em&gt;Content-ID&lt;/em&gt; of any of the parts). When applied directly to a &lt;code&gt;multipart/alternative&lt;/code&gt; or a non-&lt;code&gt;multipart&lt;/code&gt;, return an empty iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba3823fe7d49d5636a086e37bc6294573c7bbe4" translate="yes" xml:space="preserve">
          <source>Return an iterator over all of the immediate sub-parts of the message, which will be empty for a non-&lt;code&gt;multipart&lt;/code&gt;. (See also &lt;a href=&quot;#email.message.EmailMessage.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42247825db7de7c325d9353280bf89e9f7c556f1" translate="yes" xml:space="preserve">
          <source>Return an iterator over elements repeating each as many times as its count. Elements are returned in the order first encountered. If an element&amp;rsquo;s count is less than one, &lt;a href=&quot;#collections.Counter.elements&quot;&gt;&lt;code&gt;elements()&lt;/code&gt;&lt;/a&gt; will ignore it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ec27199b8f9c6f97a0d2be3e400d222fcc8785" translate="yes" xml:space="preserve">
          <source>Return an iterator over representations of all messages if called as &lt;a href=&quot;#mailbox.Mailbox.itervalues&quot;&gt;&lt;code&gt;itervalues()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#mailbox.Mailbox.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; or return a list of such representations if called as &lt;a href=&quot;#mailbox.Mailbox.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;. The messages are represented as instances of the appropriate format-specific &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; subclass unless a custom message factory was specified when the &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance was initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691e48b068ed0ca4306317ed565ff8a00e60ea95" translate="yes" xml:space="preserve">
          <source>Return an iterator over the events which have been encountered in the data fed to the parser. The iterator yields &lt;code&gt;(event, elem)&lt;/code&gt; pairs, where &lt;em&gt;event&lt;/em&gt; is a string representing the type of event (e.g. &lt;code&gt;&quot;end&quot;&lt;/code&gt;) and &lt;em&gt;elem&lt;/em&gt; is the encountered &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; object, or other context value as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a039299282fc7dc6fe1b898e3c394fe6a486fe9c" translate="yes" xml:space="preserve">
          <source>Return an iterator over the instructions in the supplied function, method, source code string or code object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53171ca3e0332d5f360c43d2ec9b731eb0f04ea3" translate="yes" xml:space="preserve">
          <source>Return an iterator over the keys of the dictionary. This is a shortcut for &lt;code&gt;iter(d.keys())&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfc9890a0b06e9dce4b5ce6cfca6765faf201c8" translate="yes" xml:space="preserve">
          <source>Return an iterator over the keys of the underlying mapping. This is a shortcut for &lt;code&gt;iter(proxy.keys())&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e636101baac63848a3e0cc361f3fdd77ac88bb46" translate="yes" xml:space="preserve">
          <source>Return an iterator over the keys, values or items (represented as tuples of &lt;code&gt;(key, value)&lt;/code&gt;) in the dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84669b2f3790b9aa2702b786b9669a72811fbb98" translate="yes" xml:space="preserve">
          <source>Return an iterator over the variables stored in the context object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dca51af9bb255f35facdfe3b4e241118edbd0c9" translate="yes" xml:space="preserve">
          <source>Return an iterator that applies &lt;em&gt;function&lt;/em&gt; to every item of &lt;em&gt;iterable&lt;/em&gt;, yielding the results. If additional &lt;em&gt;iterable&lt;/em&gt; arguments are passed, &lt;em&gt;function&lt;/em&gt; must take that many arguments and is applied to the items from all iterables in parallel. With multiple iterables, the iterator stops when the shortest iterable is exhausted. For cases where the function inputs are already arranged into argument tuples, see &lt;a href=&quot;itertools#itertools.starmap&quot;&gt;&lt;code&gt;itertools.starmap()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac67217b04b44ac5e5a66f838f173d0b8e8e6d8f" translate="yes" xml:space="preserve">
          <source>Return an object capturing the current internal state of the generator. This object can be passed to &lt;a href=&quot;#random.setstate&quot;&gt;&lt;code&gt;setstate()&lt;/code&gt;&lt;/a&gt; to restore the state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a23408c4e93c83adc272b63d73136fae835e3a" translate="yes" xml:space="preserve">
          <source>Return an object sent from the other end of the connection using &lt;a href=&quot;#multiprocessing.connection.Connection.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;. Blocks until there is something to receive. Raises &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt; if there is nothing left to receive and the other end was closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41847cbba568b1c363c250772957b8d0b63f268" translate="yes" xml:space="preserve">
          <source>Return an open file object connected to the file descriptor &lt;em&gt;fd&lt;/em&gt;. This is an alias of the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; built-in function and accepts the same arguments. The only difference is that the first argument of &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt; must always be an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a46a4996a5235349099a6fa503ed77d06d28036" translate="yes" xml:space="preserve">
          <source>Return an output stream object suitable for use as the &lt;code&gt;wsgi.errors&lt;/code&gt; of the request currently being processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4f98aff26a9ea39d4f037fee72da580e484f51" translate="yes" xml:space="preserve">
          <source>Return an upper bound on &lt;a href=&quot;#difflib.SequenceMatcher.ratio&quot;&gt;&lt;code&gt;ratio()&lt;/code&gt;&lt;/a&gt; relatively quickly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ef1f4c603314210eadfddc9cf1785b856d7105" translate="yes" xml:space="preserve">
          <source>Return an upper bound on &lt;a href=&quot;#difflib.SequenceMatcher.ratio&quot;&gt;&lt;code&gt;ratio()&lt;/code&gt;&lt;/a&gt; very quickly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73bb85dba277bd790b393f3f79e7d194dc4dd79" translate="yes" xml:space="preserve">
          <source>Return any data available in the cooked queue (very lazy).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74eceffd813b90d71893c705708a316a7ae12fb8" translate="yes" xml:space="preserve">
          <source>Return boolean value indicating whether cookie should be accepted from server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6497d3355abba2b1ea959cb721e4fd652e924c" translate="yes" xml:space="preserve">
          <source>Return boolean value indicating whether cookie should be returned to server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647c3ad4a21144c068dbdfd7adb9c94e31505f66" translate="yes" xml:space="preserve">
          <source>Return buffered data without advancing the file position. At least one byte of data will be returned (unless at EOF). The exact number of bytes returned is unspecified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8683f044435ce28a6a704e794bcb87a5b8e97b72" translate="yes" xml:space="preserve">
          <source>Return buffered data without advancing the file position. At least one byte of data will be returned, unless EOF has been reached. The exact number of bytes returned is unspecified (the &lt;em&gt;size&lt;/em&gt; argument is ignored).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9636927a03680c03ff21954d7797b2e46aa923" translate="yes" xml:space="preserve">
          <source>Return bytes from the stream without advancing the position. At most one single read on the raw stream is done to satisfy the call. The number of bytes returned may be less or more than requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a013447dbf29ccdf6d55298f8fcb7fecc9d4ebeb" translate="yes" xml:space="preserve">
          <source>Return centered in a string of length &lt;em&gt;width&lt;/em&gt;. Padding is done using the specified &lt;em&gt;fillchar&lt;/em&gt; (default is an ASCII space). The original string is returned if &lt;em&gt;width&lt;/em&gt; is less than or equal to &lt;code&gt;len(s)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c7028db84a4308f55695d56493968a0952bf00" translate="yes" xml:space="preserve">
          <source>Return code handling translates as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9880fc969a6f172b85c7023e7a9780988478e422" translate="yes" xml:space="preserve">
          <source>Return code of the process when it exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfda2a873cc734f25699116217556a2bf9491003" translate="yes" xml:space="preserve">
          <source>Return current file pointer position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8e0c547573916609370182f60b0d7b74aaf5e9" translate="yes" xml:space="preserve">
          <source>Return current line number and offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0f4361a7bb7a5921630e2b7717961934be0a65" translate="yes" xml:space="preserve">
          <source>Return current position in the file, with the same disclaimer for the &lt;a href=&quot;#wave.Wave_read.tell&quot;&gt;&lt;code&gt;Wave_read.tell()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#wave.Wave_read.setpos&quot;&gt;&lt;code&gt;Wave_read.setpos()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a96b29f3dd08ab5ea839a85f68ebd5b230aa23" translate="yes" xml:space="preserve">
          <source>Return current thread count and copy of dangling threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bc5db8cb2194d9a9794350caf1095bec8b7214" translate="yes" xml:space="preserve">
          <source>Return data for response &lt;em&gt;code&lt;/em&gt; if received, or &lt;code&gt;None&lt;/code&gt;. Returns the given code, instead of the usual type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63894405f8b620f4082c64bd0c885f2a6e4e75c3" translate="yes" xml:space="preserve">
          <source>Return digest of &lt;em&gt;msg&lt;/em&gt; for given secret &lt;em&gt;key&lt;/em&gt; and &lt;em&gt;digest&lt;/em&gt;. The function is equivalent to &lt;code&gt;HMAC(key, msg, digest).digest()&lt;/code&gt;, but uses an optimized C or inline implementation, which is faster for messages that fit into memory. The parameters &lt;em&gt;key&lt;/em&gt;, &lt;em&gt;msg&lt;/em&gt;, and &lt;em&gt;digest&lt;/em&gt; have the same meaning as in &lt;a href=&quot;#hmac.new&quot;&gt;&lt;code&gt;new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9593a84ff0ec927fcfd1bbd33c8c820df69e17c" translate="yes" xml:space="preserve">
          <source>Return disk usage statistics about the given path as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt; with the attributes &lt;em&gt;total&lt;/em&gt;, &lt;em&gt;used&lt;/em&gt; and &lt;em&gt;free&lt;/em&gt;, which are the amount of total, used and free space, in bytes. &lt;em&gt;path&lt;/em&gt; may be a file or a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3acd3d2c9b7b5573e58eb26b9677712abd0717" translate="yes" xml:space="preserve">
          <source>Return either &amp;ldquo;new&amp;rdquo; (if the message should be stored in the &lt;code&gt;new&lt;/code&gt; subdirectory) or &amp;ldquo;cur&amp;rdquo; (if the message should be stored in the &lt;code&gt;cur&lt;/code&gt; subdirectory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16441774780596887e710c84641bd7ebfe320474" translate="yes" xml:space="preserve">
          <source>Return either the standard &lt;a href=&quot;#logging.Logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; class, or the last class passed to &lt;a href=&quot;#logging.setLoggerClass&quot;&gt;&lt;code&gt;setLoggerClass()&lt;/code&gt;&lt;/a&gt;. This function may be called from within a new class definition, to ensure that installing a customized &lt;a href=&quot;#logging.Logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; class will not undo customizations already applied by other code. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db22932418530cc496dd11e5ce6ca8467fee9b7e" translate="yes" xml:space="preserve">
          <source>Return fillstate (&lt;code&gt;True&lt;/code&gt; if filling, &lt;code&gt;False&lt;/code&gt; else).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6dd3af7065296263c59cfaec32c454611661692" translate="yes" xml:space="preserve">
          <source>Return high and low water marks for write flow control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad9a3987e14c0498f453f57427fbcb3af910d00" translate="yes" xml:space="preserve">
          <source>Return immediately if the sound driver is busy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08af120433d49c9290b832110043946c8ee078f9" translate="yes" xml:space="preserve">
          <source>Return immediately, allowing sounds to play asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b823fb653459395331adce5b385507faf1cde3c3" translate="yes" xml:space="preserve">
          <source>Return in a single string any lines of comments immediately preceding the object&amp;rsquo;s source code (for a class, function, or method), or at the top of the Python source file (if the object is a module). If the object&amp;rsquo;s source code is unavailable, return &lt;code&gt;None&lt;/code&gt;. This could happen if the object has been defined in C or the interactive shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687743c9c4e1d600acfc762b8a4dafa458b6c2b0" translate="yes" xml:space="preserve">
          <source>Return information about the filesystem containing the file associated with file descriptor &lt;em&gt;fd&lt;/em&gt;, like &lt;a href=&quot;#os.statvfs&quot;&gt;&lt;code&gt;statvfs()&lt;/code&gt;&lt;/a&gt;. As of Python 3.3, this is equivalent to &lt;code&gt;os.statvfs(fd)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71b79417d200962ca8b136121272ffafb6cdc0a" translate="yes" xml:space="preserve">
          <source>Return information about the transport or underlying resources it uses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24a036a5ed2db78f68257fc9942a29d87d229f7" translate="yes" xml:space="preserve">
          <source>Return information about this path (similarly to &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;). The result is looked up at each call to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2dd36f5a436fb397c63e366ff878c3932ee75de" translate="yes" xml:space="preserve">
          <source>Return information needed to authenticate the user at the given host in the specified security realm. The return value should be a tuple, &lt;code&gt;(user,
password)&lt;/code&gt;, which can be used for basic authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46eea2d3f9aaf44e682f7c0965c4dbce16afd092" translate="yes" xml:space="preserve">
          <source>Return integer-valued system configuration values. If the configuration value specified by &lt;em&gt;name&lt;/em&gt; isn&amp;rsquo;t defined, &lt;code&gt;-1&lt;/code&gt; is returned. The comments regarding the &lt;em&gt;name&lt;/em&gt; parameter for &lt;a href=&quot;#os.confstr&quot;&gt;&lt;code&gt;confstr()&lt;/code&gt;&lt;/a&gt; apply here as well; the dictionary that provides information on the known names is given by &lt;code&gt;sysconf_names&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e11e99234a1193dc9edaf3667c5818b60b40a52" translate="yes" xml:space="preserve">
          <source>Return list of 5-tuples describing how to turn &lt;em&gt;a&lt;/em&gt; into &lt;em&gt;b&lt;/em&gt;. Each tuple is of the form &lt;code&gt;(tag, i1, i2, j1, j2)&lt;/code&gt;. The first tuple has &lt;code&gt;i1 == j1 ==
0&lt;/code&gt;, and remaining tuples have &lt;em&gt;i1&lt;/em&gt; equal to the &lt;em&gt;i2&lt;/em&gt; from the preceding tuple, and, likewise, &lt;em&gt;j1&lt;/em&gt; equal to the previous &lt;em&gt;j2&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6847b09c4666a9d85f32032370bcca41417580" translate="yes" xml:space="preserve">
          <source>Return list of all live children of the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad36f8fe2911fc4e1743a1cb40586a103afdef63" translate="yes" xml:space="preserve">
          <source>Return list of group ids that &lt;em&gt;user&lt;/em&gt; belongs to. If &lt;em&gt;group&lt;/em&gt; is not in the list, it is included; typically, &lt;em&gt;group&lt;/em&gt; is specified as the group ID field from the password record for &lt;em&gt;user&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a5b025b6bf49b0719b12960121d5cd532f03a1" translate="yes" xml:space="preserve">
          <source>Return list of supplemental group ids associated with the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091a31635fb5cdd4bcda80ca6b9c5786425af9b9" translate="yes" xml:space="preserve">
          <source>Return list of triples describing non-overlapping matching subsequences. Each triple is of the form &lt;code&gt;(i, j, n)&lt;/code&gt;, and means that &lt;code&gt;a[i:i+n] == b[j:j+n]&lt;/code&gt;. The triples are monotonically increasing in &lt;em&gt;i&lt;/em&gt; and &lt;em&gt;j&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225499d3b9a4481354d70958e166afa2aec44f31" translate="yes" xml:space="preserve">
          <source>Return local time as an aware datetime object. If called without arguments, return current time. Otherwise &lt;em&gt;dt&lt;/em&gt; argument should be a &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance, and it is converted to the local time zone according to the system time zone database. If &lt;em&gt;dt&lt;/em&gt; is naive (that is, &lt;code&gt;dt.tzinfo&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;), it is assumed to be in local time. In this case, a positive or zero value for &lt;em&gt;isdst&lt;/em&gt; causes &lt;code&gt;localtime&lt;/code&gt; to presume initially that summer time (for example, Daylight Saving Time) is or is not (respectively) in effect for the specified time. A negative value for &lt;em&gt;isdst&lt;/em&gt; causes the &lt;code&gt;localtime&lt;/code&gt; to attempt to divine whether summer time is in effect for the specified time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4dcd42eaf03ccee122960ee6a0339bc0004807" translate="yes" xml:space="preserve">
          <source>Return message digest (unique id) list. If &lt;em&gt;which&lt;/em&gt; is specified, result contains the unique id for that message in the form &lt;code&gt;'response mesgnum uid&lt;/code&gt;, otherwise result is list &lt;code&gt;(response, ['mesgnum uid', ...], octets)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065f17fa5425d7bea63ed61da18ecdbc94294339" translate="yes" xml:space="preserve">
          <source>Return non-zero if the mode is from a FIFO (named pipe).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223f68c4f0dcab76077b2490a171cd091e77bd98" translate="yes" xml:space="preserve">
          <source>Return non-zero if the mode is from a block special device file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd1de29d31fd0f76e9ec21a550506c0f30c3663" translate="yes" xml:space="preserve">
          <source>Return non-zero if the mode is from a character special device file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b30e8bfeafafeb03c07f7e4a3de3096d3f5ea8" translate="yes" xml:space="preserve">
          <source>Return non-zero if the mode is from a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d880a785308985d9e0afd1b2cc729e42050fe81f" translate="yes" xml:space="preserve">
          <source>Return non-zero if the mode is from a door.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69441cc975cdabbfb7981c8201bc111766bb6c0" translate="yes" xml:space="preserve">
          <source>Return non-zero if the mode is from a regular file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87841f0c6b2a57fe1bf3e8d5643205fbd899d79" translate="yes" xml:space="preserve">
          <source>Return non-zero if the mode is from a socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f7687ac2ba49fd12b562e7720b338b3d74ecd9" translate="yes" xml:space="preserve">
          <source>Return non-zero if the mode is from a symbolic link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed461a8abb72cc7484f320da3ae1d5612f5329b" translate="yes" xml:space="preserve">
          <source>Return non-zero if the mode is from a whiteout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b32d535f76ee808e8b3637f82461539b0f3620" translate="yes" xml:space="preserve">
          <source>Return non-zero if the mode is from an event port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afe29516304b463fcf94a5c87096cd9389f29fe" translate="yes" xml:space="preserve">
          <source>Return number of entries in the undobuffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e49e191e1783c0f0888e875312154318a4f0af1" translate="yes" xml:space="preserve">
          <source>Return offset of local time from UTC, as a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object that is positive east of UTC. If local time is west of UTC, this should be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565d03d7f115ff8601cd74a362316a7ba34427fd" translate="yes" xml:space="preserve">
          <source>Return one of the two sequences that generated a delta.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ec0d3a1e6160e68a84165c3a8fc980d6f8b794" translate="yes" xml:space="preserve">
          <source>Return or set pencolor and fillcolor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d03c65f1e7a99207ed136c9f173aaf4bf6e0c3" translate="yes" xml:space="preserve">
          <source>Return or set the fillcolor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c53f33cdb5fabb9467e44e7e18e34bba8efdfc5" translate="yes" xml:space="preserve">
          <source>Return or set the pen&amp;rsquo;s attributes in a &amp;ldquo;pen-dictionary&amp;rdquo; with the following key/value pairs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cdcfb2d0ce46845716b741aaea3d5a496d5cf2c" translate="yes" xml:space="preserve">
          <source>Return or set the pen&amp;rsquo;s attributes x/y-stretchfactors and/or outline. Set resizemode to &amp;ldquo;user&amp;rdquo;. If and only if resizemode is set to &amp;ldquo;user&amp;rdquo;, the turtle will be displayed stretched according to its stretchfactors: &lt;em&gt;stretch_wid&lt;/em&gt; is stretchfactor perpendicular to its orientation, &lt;em&gt;stretch_len&lt;/em&gt; is stretchfactor in direction of its orientation, &lt;em&gt;outline&lt;/em&gt; determines the width of the shapes&amp;rsquo;s outline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67ae5138e0fd3447cda453ed17b579ffab958ca" translate="yes" xml:space="preserve">
          <source>Return or set the pencolor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b462a11388377e2a8e7b8e6e0aa731b4acc0fa1a" translate="yes" xml:space="preserve">
          <source>Return output (stdout and stderr) of executing &lt;em&gt;cmd&lt;/em&gt; in a shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c55bc5ec772c48cfef72c9cd0eb3b5244b8f4fa" translate="yes" xml:space="preserve">
          <source>Return pair &lt;code&gt;(transport, protocol)&lt;/code&gt;, where &lt;em&gt;transport&lt;/em&gt; supports &lt;a href=&quot;asyncio-protocol#asyncio.WriteTransport&quot;&gt;&lt;code&gt;WriteTransport&lt;/code&gt;&lt;/a&gt; interface and &lt;em&gt;protocol&lt;/em&gt; is an object instantiated by the &lt;em&gt;protocol_factory&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b748f236667333e64a749d47f6622b288cc0ce7" translate="yes" xml:space="preserve">
          <source>Return pair &lt;code&gt;(transport, protocol)&lt;/code&gt;, where &lt;em&gt;transport&lt;/em&gt; supports the &lt;a href=&quot;asyncio-protocol#asyncio.ReadTransport&quot;&gt;&lt;code&gt;ReadTransport&lt;/code&gt;&lt;/a&gt; interface and &lt;em&gt;protocol&lt;/em&gt; is an object instantiated by the &lt;em&gt;protocol_factory&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd38321903b6813fab8a3b1b69fa6398807ce440" translate="yes" xml:space="preserve">
          <source>Return sequence of &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; objects extracted from &lt;em&gt;response&lt;/em&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e262a6b50c525667c130fa0b505487b34dd9bd9" translate="yes" xml:space="preserve">
          <source>Return some locale-specific information as a string. This function is not available on all systems, and the set of possible options might also vary across platforms. The possible argument values are numbers, for which symbolic constants are available in the locale module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b941483ef97b403fc191a595254df04b7469ab" translate="yes" xml:space="preserve">
          <source>Return string-valued system configuration values. &lt;em&gt;name&lt;/em&gt; specifies the configuration value to retrieve; it may be a string which is the name of a defined system value; these names are specified in a number of standards (POSIX, Unix 95, Unix 98, and others). Some platforms define additional names as well. The names known to the host operating system are given as the keys of the &lt;code&gt;confstr_names&lt;/code&gt; dictionary. For configuration variables not included in that mapping, passing an integer for &lt;em&gt;name&lt;/em&gt; is also accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fa9596c48fc26d51a8ec28179175ac00caf988" translate="yes" xml:space="preserve">
          <source>Return successive &lt;em&gt;r&lt;/em&gt; length permutations of elements in the &lt;em&gt;iterable&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5d541740baaeb6c74716a6e3164246340c8cce" translate="yes" xml:space="preserve">
          <source>Return system configuration information relevant to a named file. &lt;em&gt;name&lt;/em&gt; specifies the configuration value to retrieve; it may be a string which is the name of a defined system value; these names are specified in a number of standards (POSIX.1, Unix 95, Unix 98, and others). Some platforms define additional names as well. The names known to the host operating system are given in the &lt;code&gt;pathconf_names&lt;/code&gt; dictionary. For configuration variables not included in that mapping, passing an integer for &lt;em&gt;name&lt;/em&gt; is also accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33431f16cc653d4d629696ed77153882f4fad59b" translate="yes" xml:space="preserve">
          <source>Return system configuration information relevant to an open file. &lt;em&gt;name&lt;/em&gt; specifies the configuration value to retrieve; it may be a string which is the name of a defined system value; these names are specified in a number of standards (POSIX.1, Unix 95, Unix 98, and others). Some platforms define additional names as well. The names known to the host operating system are given in the &lt;code&gt;pathconf_names&lt;/code&gt; dictionary. For configuration variables not included in that mapping, passing an integer for &lt;em&gt;name&lt;/em&gt; is also accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0a435d40964ad438332d0cd7d8acdebbc1428e" translate="yes" xml:space="preserve">
          <source>Return the &amp;ldquo;identity&amp;rdquo; of an object. This is an integer which is guaranteed to be unique and constant for this object during its lifetime. Two objects with non-overlapping lifetimes may have the same &lt;a href=&quot;#id&quot;&gt;&lt;code&gt;id()&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775ea5d82bd8fa40c1f180aac308b4bc9883cb63" translate="yes" xml:space="preserve">
          <source>Return the &amp;ldquo;login name&amp;rdquo; of the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8131ea729c207640d60f928d6028ec14c0e320d3" translate="yes" xml:space="preserve">
          <source>Return the &amp;ldquo;protected&amp;rdquo; &lt;code&gt;_info&lt;/code&gt; variable, a dictionary containing the metadata found in the message catalog file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d48b22b5f6af28cdde660eeaa04332715aae2c" translate="yes" xml:space="preserve">
          <source>Return the &amp;lsquo;thread identifier&amp;rsquo; of the current thread. This is a nonzero integer. Its value has no direct meaning; it is intended as a magic cookie to be used e.g. to index a dictionary of thread-specific data. Thread identifiers may be recycled when a thread exits and another thread is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b61d55ebb78ed5722d3831c97a73390e526e135" translate="yes" xml:space="preserve">
          <source>Return the 8-bit character corresponding to the given ASCII character (the character bit value is bitwise-ored with 0x80).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bda6db467a4f1bc0810a0266efcd304ee985ab0" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; corresponding to the proleptic Gregorian ordinal, where January 1 of year 1 has ordinal 1. &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised unless &lt;code&gt;1
&amp;lt;= ordinal &amp;lt;= datetime.max.toordinal()&lt;/code&gt;. The hour, minute, second and microsecond of the result are all 0, and &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ef8d937239d8f5262fffa52499d75975aee04c" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object corresponding to the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d08321446cc540d2c0d7b5f94fa9bff6181730e" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object corresponding to the parent process of the &lt;a href=&quot;#multiprocessing.current_process&quot;&gt;&lt;code&gt;current_process()&lt;/code&gt;&lt;/a&gt;. For the main process, &lt;code&gt;parent_process&lt;/code&gt; will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aaacf85b421561b64f2bb844aa0a506c7ade1f4" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;#turtle.TurtleScreen&quot;&gt;&lt;code&gt;TurtleScreen&lt;/code&gt;&lt;/a&gt; object the turtle is drawing on. TurtleScreen methods can then be called for that object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060d165dd998bfa8b06fe24d886ddf80fc03d599" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance associated with the message&amp;rsquo;s payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54e6647d35a460dd1571b39f7b25945198e7fa3" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;https://en.wikipedia.org/wiki/Error_function&quot;&gt;error function&lt;/a&gt; at &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2c8efbebaa79b9cfece3bceee1d930e05860ba" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_function&quot;&gt;Gamma function&lt;/a&gt; at &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf5d264802ed41825cb91ae752b5c3e82affc50" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt; capabilities advertised by the server, as a &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; instance mapping capability names to (possibly empty) lists of values. On legacy servers which don&amp;rsquo;t understand the &lt;code&gt;CAPABILITIES&lt;/code&gt; command, an empty dictionary is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c863055d9b4e20a09867f24b0d0a8b4e6af5334f" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;/&lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt; path to the byte-compiled file associated with the source &lt;em&gt;path&lt;/em&gt;. For example, if &lt;em&gt;path&lt;/em&gt; is &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; the return value would be &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; for Python 3.2. The &lt;code&gt;cpython-32&lt;/code&gt; string comes from the current magic tag (see &lt;code&gt;get_tag()&lt;/code&gt;; if &lt;code&gt;sys.implementation.cache_tag&lt;/code&gt; is not defined then &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; will be raised).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e9b8adc8e3a976e7f604a3abdd4e89b5dfb47e" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;numbers#numbers.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt; value &lt;em&gt;x&lt;/em&gt; truncated to an &lt;a href=&quot;numbers#numbers.Integral&quot;&gt;&lt;code&gt;Integral&lt;/code&gt;&lt;/a&gt; (usually an integer). Delegates to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__trunc__&quot;&gt;&lt;code&gt;x.__trunc__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f96cdb11fe13fbcfd40c8b789cc6239e450adb1" translate="yes" xml:space="preserve">
          <source>Return the &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute for a module, class, instance, or any other object with a &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4043c2cf02843b7a6566ff73c590f110c9021ae" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;(namespace, localname)&lt;/code&gt; pair for a qualified &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95eddb8905bcbd4f89bbb161b8a6afaafd75c1b1" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;Attr&lt;/code&gt; node for the attribute named by &lt;em&gt;attrname&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b9ed7b4bf17e6db5653c39522d9a36cde25d86" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;MAJOR.MINOR&lt;/code&gt; Python version number as a string. Similar to &lt;code&gt;'%d.%d' % sys.version_info[:2]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7a5e95a405f6921d1800eb14dc7e7abc7ce96b" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;charset&lt;/code&gt; parameter of the &lt;em&gt;Content-Type&lt;/em&gt; header, coerced to lower case. If there is no &lt;em&gt;Content-Type&lt;/em&gt; header, or if that header has no &lt;code&gt;charset&lt;/code&gt; parameter, &lt;em&gt;failobj&lt;/em&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c22be4492fbd7faa7eedbbd13bad701c1fb5d1" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;fileno&lt;/code&gt; of the underlying socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a211532c92bd1b72ecd53be46923fc94c9977964" translate="yes" xml:space="preserve">
          <source>Return the &lt;em&gt;clk_id&lt;/em&gt; of the thread-specific CPU-time clock for the specified &lt;em&gt;thread_id&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167d2846f219344bb2c7e43bbff0dd36f033cb25" translate="yes" xml:space="preserve">
          <source>Return the &lt;em&gt;i&lt;/em&gt;&amp;rsquo;th item from the sequence, if there is one, or &lt;code&gt;None&lt;/code&gt;. The index &lt;em&gt;i&lt;/em&gt; is not allowed to be less than zero or greater than or equal to the length of the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3fed42efc32f354a8c517ab1ef96e440ae9c5c" translate="yes" xml:space="preserve">
          <source>Return the &lt;em&gt;state&lt;/em&gt;th completion for &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8302e0ceb8aaba0618a8bba54b827c5de73050ca" translate="yes" xml:space="preserve">
          <source>Return the ASCII value corresponding to the low 7 bits of &lt;em&gt;c&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2be978f5b1ddf33f58d36d47516da6c1cc13f1" translate="yes" xml:space="preserve">
          <source>Return the Caesar-cypher encryption of the operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65747ead3614c43ad0b46b150fd4c19f969df64" translate="yes" xml:space="preserve">
          <source>Return the Canvas of this TurtleScreen. Useful for insiders who know what to do with a Tkinter Canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b212df5addd3b5b7ac216592acab6a77b9b4724c" translate="yes" xml:space="preserve">
          <source>Return the Euclidean distance between two points &lt;em&gt;p&lt;/em&gt; and &lt;em&gt;q&lt;/em&gt;, each given as a sequence (or iterable) of coordinates. The two points must have the same dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f905413f5509ccd59848e24e9fd87d48007cd442" translate="yes" xml:space="preserve">
          <source>Return the Euclidean norm, &lt;code&gt;sqrt(sum(x**2 for x in coordinates))&lt;/code&gt;. This is the length of the vector from the origin to the point given by the coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71506212a5badfb1d5dab2d6e221cb1a1f953d2" translate="yes" xml:space="preserve">
          <source>Return the Future&amp;rsquo;s result or raise its exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f0ac0d53c9fb0ea5dab977fe6b9bf172cc2169" translate="yes" xml:space="preserve">
          <source>Return the IEEE 754-style remainder of &lt;em&gt;x&lt;/em&gt; with respect to &lt;em&gt;y&lt;/em&gt;. For finite &lt;em&gt;x&lt;/em&gt; and finite nonzero &lt;em&gt;y&lt;/em&gt;, this is the difference &lt;code&gt;x - n*y&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the closest integer to the exact value of the quotient &lt;code&gt;x /
y&lt;/code&gt;. If &lt;code&gt;x / y&lt;/code&gt; is exactly halfway between two consecutive integers, the nearest &lt;em&gt;even&lt;/em&gt; integer is used for &lt;code&gt;n&lt;/code&gt;. The remainder &lt;code&gt;r = remainder(x,
y)&lt;/code&gt; thus always satisfies &lt;code&gt;abs(r) &amp;lt;= 0.5 * abs(y)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8efd262dfcd8843cbb8adf4dc73ed731bca1891" translate="yes" xml:space="preserve">
          <source>Return the MIME part that is the best candidate to be the &amp;ldquo;body&amp;rdquo; of the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0d24af2be7a7cd2b849a6e60f68271d9273104" translate="yes" xml:space="preserve">
          <source>Return the Python representation of &lt;em&gt;s&lt;/em&gt; (a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; instance containing a JSON document).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabc9a8f3108209b2be616122caabd9434be24b3" translate="yes" xml:space="preserve">
          <source>Return the Turtle object itself. Only reasonable use: as a function to return the &amp;ldquo;anonymous turtle&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1dbed5007cbdb264e6f0f2a365083b9eb06d65" translate="yes" xml:space="preserve">
          <source>Return the URL given in the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c289195a20a15bc6f10b9d84735ec38a3e5ef0db" translate="yes" xml:space="preserve">
          <source>Return the URL scheme being used for the current request. The default implementation uses the &lt;code&gt;guess_scheme()&lt;/code&gt; function from &lt;a href=&quot;#module-wsgiref.util&quot;&gt;&lt;code&gt;wsgiref.util&lt;/code&gt;&lt;/a&gt; to guess whether the scheme should be &amp;ldquo;http&amp;rdquo; or &amp;ldquo;https&amp;rdquo;, based on the current request&amp;rsquo;s &lt;code&gt;environ&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e2f0c8cc716b241e4af4e9c4c7814cbe3b7e57" translate="yes" xml:space="preserve">
          <source>Return the UTC &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; corresponding to the POSIX timestamp, with &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt;&lt;code&gt;None&lt;/code&gt;. (The resulting object is naive.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66da845471783c924a01cf54fddc478eb87e8ab2" translate="yes" xml:space="preserve">
          <source>Return the absolute value of &lt;em&gt;obj&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4815aa2e33ca54f72d9e1959722c9966c1db7e8c" translate="yes" xml:space="preserve">
          <source>Return the absolute value of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd13cd4cdf3dcdf4351e46d2f9f636b2e795ac2" translate="yes" xml:space="preserve">
          <source>Return the absolute value of a number. The argument may be an integer or a floating point number. If the argument is a complex number, its magnitude is returned. If &lt;em&gt;x&lt;/em&gt; defines &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__abs__&quot;&gt;&lt;code&gt;__abs__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;abs(x)&lt;/code&gt; returns &lt;code&gt;x.__abs__()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049d85d81f902dd97585205345363ac246a478c2" translate="yes" xml:space="preserve">
          <source>Return the absolute value of the argument. This operation is unaffected by the context and is quiet: no flags are changed and no rounding is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ac9f252c1d9bb9e14168f7efbaea3c3470c5ad" translate="yes" xml:space="preserve">
          <source>Return the actual SSL protocol version negotiated by the connection as a string, or &lt;code&gt;None&lt;/code&gt; is no secure connection is established. As of this writing, possible return values include &lt;code&gt;&quot;SSLv2&quot;&lt;/code&gt;, &lt;code&gt;&quot;SSLv3&quot;&lt;/code&gt;, &lt;code&gt;&quot;TLSv1&quot;&lt;/code&gt;, &lt;code&gt;&quot;TLSv1.1&quot;&lt;/code&gt; and &lt;code&gt;&quot;TLSv1.2&quot;&lt;/code&gt;. Recent OpenSSL versions may define more return values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d578c603ec8b5a8e5215ffe6db7e2d50ec7149" translate="yes" xml:space="preserve">
          <source>Return the adjusted exponent after shifting out the coefficient&amp;rsquo;s rightmost digits until only the lead digit remains: &lt;code&gt;Decimal('321e+5').adjusted()&lt;/code&gt; returns seven. Used for determining the position of the most significant digit with respect to the decimal point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072f529a82974ffdabab5f93591dd538a92c01b1" translate="yes" xml:space="preserve">
          <source>Return the angle between the line from turtle position to position specified by (x,y), the vector or the other turtle. This depends on the turtle&amp;rsquo;s start orientation which depends on the mode - &amp;ldquo;standard&amp;rdquo;/&amp;rdquo;world&amp;rdquo; or &amp;ldquo;logo&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca62781d54fd80d32189a95c51dd096130a77e4" translate="yes" xml:space="preserve">
          <source>Return the approximate size of the queue. Because of multithreading/multiprocessing semantics, this number is not reliable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d7d02beefff989e28fb9120767f38db01ff068" translate="yes" xml:space="preserve">
          <source>Return the approximate size of the queue. Note, qsize() &amp;gt; 0 doesn&amp;rsquo;t guarantee that a subsequent get() will not block, nor will qsize() &amp;lt; maxsize guarantee that put() will not block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae5069f16217ef63fb7303809f209abc2db0e29" translate="yes" xml:space="preserve">
          <source>Return the approximate size of the queue. Note, qsize() &amp;gt; 0 doesn&amp;rsquo;t guarantee that a subsequent get() will not block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6757b170d362df68d847cbb558d2c6c4fc954e" translate="yes" xml:space="preserve">
          <source>Return the arc cosine of &lt;em&gt;x&lt;/em&gt;, in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c0d0f5817fb496fdccb7f0a5cbcba799a70488" translate="yes" xml:space="preserve">
          <source>Return the arc cosine of &lt;em&gt;x&lt;/em&gt;. There are two branch cuts: One extends right from 1 along the real axis to &amp;infin;, continuous from below. The other extends left from -1 along the real axis to -&amp;infin;, continuous from above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cce17ba20cf50afd9856d671a28730e8de74367" translate="yes" xml:space="preserve">
          <source>Return the arc sine of &lt;em&gt;x&lt;/em&gt;, in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afda3e534d6fb711412a49e71fb91b5c4b156777" translate="yes" xml:space="preserve">
          <source>Return the arc sine of &lt;em&gt;x&lt;/em&gt;. This has the same branch cuts as &lt;a href=&quot;#cmath.acos&quot;&gt;&lt;code&gt;acos()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d16588ce0a5e6481454c6ef075eb2f3ccd51bfe" translate="yes" xml:space="preserve">
          <source>Return the arc tangent of &lt;em&gt;x&lt;/em&gt;, in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5e3c00bb75470b59efa8ba3c163927f1f03e72" translate="yes" xml:space="preserve">
          <source>Return the arc tangent of &lt;em&gt;x&lt;/em&gt;. There are two branch cuts: One extends from &lt;code&gt;1j&lt;/code&gt; along the imaginary axis to &lt;code&gt;&amp;infin;j&lt;/code&gt;, continuous from the right. The other extends from &lt;code&gt;-1j&lt;/code&gt; along the imaginary axis to &lt;code&gt;-&amp;infin;j&lt;/code&gt;, continuous from the left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8a8c805dab6d6453780b81a7f13fe2060a8308" translate="yes" xml:space="preserve">
          <source>Return the argument with environment variables expanded. Substrings of the form &lt;code&gt;$name&lt;/code&gt; or &lt;code&gt;${name}&lt;/code&gt; are replaced by the value of environment variable &lt;em&gt;name&lt;/em&gt;. Malformed variable names and references to non-existing variables are left unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f984d37fe7489885b66c9ac9140286da46e732e1" translate="yes" xml:space="preserve">
          <source>Return the attribute value for displaying text in the specified color. This attribute value can be combined with &lt;code&gt;A_STANDOUT&lt;/code&gt;, &lt;code&gt;A_REVERSE&lt;/code&gt;, and the other &lt;code&gt;A_*&lt;/code&gt; attributes. &lt;a href=&quot;#curses.pair_number&quot;&gt;&lt;code&gt;pair_number()&lt;/code&gt;&lt;/a&gt; is the counterpart to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f123cdae5d644da0ab2fa747bc3125cb7cea46" translate="yes" xml:space="preserve">
          <source>Return the average over all samples in the fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ffbcb655ba8a905eab8dc221b094fd2595a3dd9" translate="yes" xml:space="preserve">
          <source>Return the average peak-peak value over all samples in the fragment. No filtering is done, so the usefulness of this routine is questionable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf5910fbaddb00d2b868b71177bd3e559363726" translate="yes" xml:space="preserve">
          <source>Return the barrier to the default, empty state. Any threads waiting on it will receive the &lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt;&lt;code&gt;BrokenBarrierError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea023ac4227df0ba5935a97cc49d32f9ba5cc408" translate="yes" xml:space="preserve">
          <source>Return the base name of pathname &lt;em&gt;path&lt;/em&gt;. This is the second element of the pair returned by passing &lt;em&gt;path&lt;/em&gt; to the function &lt;a href=&quot;#os.path.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt;. Note that the result of this function is different from the Unix &lt;strong&gt;basename&lt;/strong&gt; program; where &lt;strong&gt;basename&lt;/strong&gt; for &lt;code&gt;'/foo/bar/'&lt;/code&gt; returns &lt;code&gt;'bar'&lt;/code&gt;, the &lt;a href=&quot;#os.path.basename&quot;&gt;&lt;code&gt;basename()&lt;/code&gt;&lt;/a&gt; function returns an empty string (&lt;code&gt;''&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0b9598d3a0183ee736570729849ce18525bfc2" translate="yes" xml:space="preserve">
          <source>Return the base ten logarithm of the operand. The result is correctly rounded using the &lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt;&lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt;&lt;/a&gt; rounding mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8b20ca093a8ebb922cb7b9a1d4ca5cb44e14eb" translate="yes" xml:space="preserve">
          <source>Return the base-10 logarithm of &lt;em&gt;x&lt;/em&gt;. This has the same branch cut as &lt;a href=&quot;#cmath.log&quot;&gt;&lt;code&gt;log()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f01f9ff715788d4b95225a1db2b0802d5b3efef" translate="yes" xml:space="preserve">
          <source>Return the base-10 logarithm of &lt;em&gt;x&lt;/em&gt;. This is usually more accurate than &lt;code&gt;log(x, 10)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1252f06af9fb7de1f3081c0b1db060e177f88f97" translate="yes" xml:space="preserve">
          <source>Return the base-2 logarithm of &lt;em&gt;x&lt;/em&gt;. This is usually more accurate than &lt;code&gt;log(x, 2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ab37878492ebfe5108eeb0928f4c1e09c76b49" translate="yes" xml:space="preserve">
          <source>Return the beginning coordinates of this window relative to its parent window as a tuple &lt;code&gt;(y, x)&lt;/code&gt;. Return &lt;code&gt;(-1, -1)&lt;/code&gt; if this window has no parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce01757b0027a8347fc2655f7c3fddbf282ec0d" translate="yes" xml:space="preserve">
          <source>Return the binary contents of the pointed-to file as a bytes object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e998742d89080d5202e7cbef5ab55831dc3f28df" translate="yes" xml:space="preserve">
          <source>Return the binary data represented by the hexadecimal string &lt;em&gt;hexstr&lt;/em&gt;. This function is the inverse of &lt;a href=&quot;#binascii.b2a_hex&quot;&gt;&lt;code&gt;b2a_hex()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;hexstr&lt;/em&gt; must contain an even number of hexadecimal digits (which can be upper or lower case), otherwise an &lt;a href=&quot;#binascii.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48002b2b0399c3f07d3e32fe58968f653c510d8a" translate="yes" xml:space="preserve">
          <source>Return the bitwise and of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694d4f865fa0465cc330e2ef836019f67610d4f8" translate="yes" xml:space="preserve">
          <source>Return the bitwise exclusive or of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2440551670b3d0c4d67236ad63120c25f409736f" translate="yes" xml:space="preserve">
          <source>Return the bitwise inverse of the number &lt;em&gt;obj&lt;/em&gt;. This is equivalent to &lt;code&gt;~obj&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1be681530ccba89e28c407ca0cbd9da674b665" translate="yes" xml:space="preserve">
          <source>Return the bitwise or of &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac70c4327a2e9ad85f5ddce28cfda727206b250d" translate="yes" xml:space="preserve">
          <source>Return the buffer size needed for &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; to receive an ancillary data item with associated data of the given &lt;em&gt;length&lt;/em&gt;, along with any trailing padding. The buffer space needed to receive multiple items is the sum of the &lt;a href=&quot;#socket.CMSG_SPACE&quot;&gt;&lt;code&gt;CMSG_SPACE()&lt;/code&gt;&lt;/a&gt; values for their associated data lengths. Raises &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;length&lt;/em&gt; is outside the permissible range of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c883b583b069aab9939656559ad96e28ee6ce1" translate="yes" xml:space="preserve">
          <source>Return the build time API version of Android as an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe269b10c1deffdd1b1ee36da5c45bf30bf28770" translate="yes" xml:space="preserve">
          <source>Return the bytes object that would be written to a file by &lt;code&gt;dump(value, file)&lt;/code&gt;. The value must be a supported type. Raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception if value has (or contains an object that has) an unsupported type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e048374366112ff93b68cde74e027e458cbf1d80" translate="yes" xml:space="preserve">
          <source>Return the bytes of the file &lt;em&gt;name&lt;/em&gt; in the archive. &lt;em&gt;name&lt;/em&gt; is the name of the file in the archive, or a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; object. The archive must be open for read or append. &lt;em&gt;pwd&lt;/em&gt; is the password used for encrypted files and, if specified, it will override the default password set with &lt;a href=&quot;#zipfile.ZipFile.setpassword&quot;&gt;&lt;code&gt;setpassword()&lt;/code&gt;&lt;/a&gt;. Calling &lt;a href=&quot;#zipfile.ZipFile.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; on a ZipFile that uses a compression method other than &lt;a href=&quot;#zipfile.ZIP_STORED&quot;&gt;&lt;code&gt;ZIP_STORED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#zipfile.ZIP_DEFLATED&quot;&gt;&lt;code&gt;ZIP_DEFLATED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#zipfile.ZIP_BZIP2&quot;&gt;&lt;code&gt;ZIP_BZIP2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#zipfile.ZIP_LZMA&quot;&gt;&lt;code&gt;ZIP_LZMA&lt;/code&gt;&lt;/a&gt; will raise a &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;. An error will also be raised if the corresponding compression module is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067550c61030f217f6a41efe8511e3b8906d9970" translate="yes" xml:space="preserve">
          <source>Return the canonical encoding of the argument. Currently, the encoding of a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance is always canonical, so this operation returns its argument unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcc225aebc1cd039c4a8e42992b14c422fd56a7" translate="yes" xml:space="preserve">
          <source>Return the canonical path of the specified filename, eliminating any symbolic links encountered in the path (if they are supported by the operating system).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ef0773a939ebe31245841ffe61ef6c73f3ce74" translate="yes" xml:space="preserve">
          <source>Return the ceiling of &lt;em&gt;x&lt;/em&gt;, the smallest integer greater than or equal to &lt;em&gt;x&lt;/em&gt;. If &lt;em&gt;x&lt;/em&gt; is not a float, delegates to &lt;code&gt;x.__ceil__()&lt;/code&gt;, which should return an &lt;a href=&quot;numbers#numbers.Integral&quot;&gt;&lt;code&gt;Integral&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1185b9411d5708fc50a12eb857dc164e054e63b" translate="yes" xml:space="preserve">
          <source>Return the character at the given position in the window. The bottom 8 bits are the character proper, and upper bits are the attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43df486ee650973a8e972c428d25deb4ccbcad04" translate="yes" xml:space="preserve">
          <source>Return the code object for a module, or &lt;code&gt;None&lt;/code&gt; if the module does not have a code object (as would be the case, for example, for a built-in module). Raise an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; if loader cannot find the requested module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d4cdd53dd02bcd5d1a718f9d6d3b236b79076d" translate="yes" xml:space="preserve">
          <source>Return the code object for the specified module. Raise &lt;a href=&quot;#zipimport.ZipImportError&quot;&gt;&lt;code&gt;ZipImportError&lt;/code&gt;&lt;/a&gt; if the module couldn&amp;rsquo;t be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37251e9d1461624aa305c0569570458f7b6e3f64" translate="yes" xml:space="preserve">
          <source>Return the colormode or set it to 1.0 or 255. Subsequently &lt;em&gt;r&lt;/em&gt;, &lt;em&gt;g&lt;/em&gt;, &lt;em&gt;b&lt;/em&gt; values of color triples have to be in the range 0..&lt;em&gt;cmode&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9767697903ff51d5c627dd8f9bfe4d1e4b16d3af" translate="yes" xml:space="preserve">
          <source>Return the column number where the current event begins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216769f8d540b1c596d753c3d85b6a89f8ca731c" translate="yes" xml:space="preserve">
          <source>Return the complementary error function at &lt;em&gt;x&lt;/em&gt;. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Error_function&quot;&gt;complementary error function&lt;/a&gt; is defined as &lt;code&gt;1.0 - erf(x)&lt;/code&gt;. It is used for large values of &lt;em&gt;x&lt;/em&gt; where a subtraction from one would cause a &lt;a href=&quot;https://en.wikipedia.org/wiki/Loss_of_significance&quot;&gt;loss of significance&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e573a35a3fdf217aed3c248a748fb6d73c0f1084" translate="yes" xml:space="preserve">
          <source>Return the complex number &lt;em&gt;x&lt;/em&gt; with polar coordinates &lt;em&gt;r&lt;/em&gt; and &lt;em&gt;phi&lt;/em&gt;. Equivalent to &lt;code&gt;r * (math.cos(phi) + math.sin(phi)*1j)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44d7cf5db438e0ffa200a9ad599efa9624fb990" translate="yes" xml:space="preserve">
          <source>Return the compression algorithm being used as a string, or &lt;code&gt;None&lt;/code&gt; if the connection isn&amp;rsquo;t compressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff2da1a7f2dd7c71c292dffd059f395b9909926" translate="yes" xml:space="preserve">
          <source>Return the content transfer encoding used for body encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9565d9efb0a9294c3cf090889e08406826cb891d" translate="yes" xml:space="preserve">
          <source>Return the control character corresponding to the given character (the character bit value is bitwise-anded with 0x1f).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdcc1aec233c06cb2d17c45efe219c8e9eba3cf" translate="yes" xml:space="preserve">
          <source>Return the coroutine object wrapped by the &lt;a href=&quot;#asyncio.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677bd6a1cee582a9eed2489617b3a7678e6972ba" translate="yes" xml:space="preserve">
          <source>Return the cosine of &lt;em&gt;x&lt;/em&gt; radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14be7e9aee42eced84647c1abb7b6f8e284b2003" translate="yes" xml:space="preserve">
          <source>Return the cosine of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d550bfd27d960017338a90a05980f33f2398c0" translate="yes" xml:space="preserve">
          <source>Return the cumulative line number of the line that has just been read. Before the first line has been read, returns &lt;code&gt;0&lt;/code&gt;. After the last line of the last file has been read, returns the line number of that line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e8d9a101ac2c07b7dd5b6e7aaebad9590cc44f" translate="yes" xml:space="preserve">
          <source>Return the current &lt;a href=&quot;#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; object, corresponding to the caller&amp;rsquo;s thread of control. If the caller&amp;rsquo;s thread of control was not created through the &lt;a href=&quot;#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module, a dummy thread object with limited functionality is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656daebbdca3efc8fb822de2c55b07092cf779fc" translate="yes" xml:space="preserve">
          <source>Return the current &lt;a href=&quot;xml.sax.handler#xml.sax.handler.ContentHandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d897c90d233260e9c6b83a1a3651cf2c3703fc4" translate="yes" xml:space="preserve">
          <source>Return the current &lt;a href=&quot;xml.sax.handler#xml.sax.handler.DTDHandler&quot;&gt;&lt;code&gt;DTDHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644d1abb3a4af5ce10da963b6797f3a3b501c562" translate="yes" xml:space="preserve">
          <source>Return the current &lt;a href=&quot;xml.sax.handler#xml.sax.handler.EntityResolver&quot;&gt;&lt;code&gt;EntityResolver&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72560afe9b6ab8d0022e55696f0b03a736b9be4" translate="yes" xml:space="preserve">
          <source>Return the current &lt;a href=&quot;xml.sax.handler#xml.sax.handler.ErrorHandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ae4769b4be81c12e81bc7484d460dcc9328914" translate="yes" xml:space="preserve">
          <source>Return the current Task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88b0330a4cf7cd9217759e182423defed68fa60" translate="yes" xml:space="preserve">
          <source>Return the current UTC date and time, with &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt;&lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925ed3f28b68cd6f8a3cfcdbc6e78584417d5482" translate="yes" xml:space="preserve">
          <source>Return the current child watcher for the current policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1b29df0ccba7d51e42c3aeaee4e319e214b2f2" translate="yes" xml:space="preserve">
          <source>Return the current collection counts as a tuple of &lt;code&gt;(count0, count1,
count2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a992d146d15a8e6cf9ec5ccc7677ce705e420399" translate="yes" xml:space="preserve">
          <source>Return the current collection thresholds as a tuple of &lt;code&gt;(threshold0,
threshold1, threshold2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78e8154a2552487174b18f56127714ebd4b2611" translate="yes" xml:space="preserve">
          <source>Return the current contents of history item at &lt;em&gt;index&lt;/em&gt;. The item index is one-based. This calls &lt;code&gt;history_get()&lt;/code&gt; in the underlying library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7bc0895c8410423d7bf0217ece759a379e05bd" translate="yes" xml:space="preserve">
          <source>Return the current contents of the line buffer (&lt;code&gt;rl_line_buffer&lt;/code&gt; in the underlying library).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4db18ba13c304208e6e1beeb7821c3a1251eab" translate="yes" xml:space="preserve">
          <source>Return the current context for the active thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bceecb284f36429e877fdf1713ad16dff68a740" translate="yes" xml:space="preserve">
          <source>Return the current coordinates of the virtual screen cursor as a tuple &lt;code&gt;(y, x)&lt;/code&gt;. If &lt;a href=&quot;#curses.window.leaveok&quot;&gt;&lt;code&gt;leaveok&lt;/code&gt;&lt;/a&gt; is currently &lt;code&gt;True&lt;/code&gt;, then return &lt;code&gt;(-1, -1)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65dfd52d8b98ed6747343f265255ad1843af2c5d" translate="yes" xml:space="preserve">
          <source>Return the current exception handler, or &lt;code&gt;None&lt;/code&gt; if no custom exception handler was set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9783e49d7bcaa2ed4806bc7bdbcf7b5ff89b1eb" translate="yes" xml:space="preserve">
          <source>Return the current fillcolor as color specification string, possibly in tuple format (see example). May be used as input to another color/pencolor/fillcolor call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87f01e5fd2d30bf5a88f660c087b877f55b5fc4" translate="yes" xml:space="preserve">
          <source>Return the current frame number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa95a4920f073679699387c5acd9e8e26e38441f" translate="yes" xml:space="preserve">
          <source>Return the current local date and time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69c3946540a38586012363e23748042e478100c" translate="yes" xml:space="preserve">
          <source>Return the current local date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6448c0c3ef471ea946332e78363a5f448daa4873" translate="yes" xml:space="preserve">
          <source>Return the current local datetime, with &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt;&lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d68413673b107760578568cc5a5d956bb5b82d2" translate="yes" xml:space="preserve">
          <source>Return the current payload, which will be a list of &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects when &lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, or a string when &lt;a href=&quot;#email.message.Message.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;. If the payload is a list and you mutate the list object, you modify the message&amp;rsquo;s payload in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637c61e36767f75941fccbebf45b7d8646e85b00" translate="yes" xml:space="preserve">
          <source>Return the current pencolor and the current fillcolor as a pair of color specification strings or tuples as returned by &lt;a href=&quot;#turtle.pencolor&quot;&gt;&lt;code&gt;pencolor()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#turtle.fillcolor&quot;&gt;&lt;code&gt;fillcolor()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afd264bb13779895ae164f0c6c0d7795ff7629d" translate="yes" xml:space="preserve">
          <source>Return the current pencolor as color specification string or as a tuple (see example). May be used as input to another color/pencolor/fillcolor call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf11506a017d0944829dfff7e06dc1309f2919d8" translate="yes" xml:space="preserve">
          <source>Return the current position into the chunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e14a1f234a741d67858ee5ed6856e961feb755" translate="yes" xml:space="preserve">
          <source>Return the current process id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d545eb2019dd010e9658d893c1db17bf832ef8c5" translate="yes" xml:space="preserve">
          <source>Return the current process&amp;rsquo;s effective user id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8888c2517cb1c9e6555179d0351445e824cdb01a" translate="yes" xml:space="preserve">
          <source>Return the current process&amp;rsquo;s real user id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c9e52ce53ed6b35b2875fad8a72f3b856ceee0" translate="yes" xml:space="preserve">
          <source>Return the current process-wide policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdce97b7160c0fe8c0ab2ec3c04c46d90e9cad8" translate="yes" xml:space="preserve">
          <source>Return the current protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdbc712b062c4a8e3919ac0e8f793d44d48bd91" translate="yes" xml:space="preserve">
          <source>Return the current setting for feature &lt;em&gt;featurename&lt;/em&gt;. If the feature is not recognized, &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; is raised. The well-known featurenames are listed in the module &lt;a href=&quot;xml.sax.handler#module-xml.sax.handler&quot;&gt;&lt;code&gt;xml.sax.handler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60eb24ef4197878979b23e680e52163e42d5970a" translate="yes" xml:space="preserve">
          <source>Return the current setting for property &lt;em&gt;propertyname&lt;/em&gt;. If the property is not recognized, a &lt;code&gt;SAXNotRecognizedException&lt;/code&gt; is raised. The well-known propertynames are listed in the module &lt;a href=&quot;xml.sax.handler#module-xml.sax.handler&quot;&gt;&lt;code&gt;xml.sax.handler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf6415e4d8b6e394ca1f1a69b98a43efd26a9e9" translate="yes" xml:space="preserve">
          <source>Return the current shape polygon as tuple of coordinate pairs. This can be used to define a new shape or components of a compound shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56832aef34f72912ffe5d8ff6f397521606566df" translate="yes" xml:space="preserve">
          <source>Return the current signal handler for the signal &lt;em&gt;signalnum&lt;/em&gt;. The returned value may be a callable Python object, or one of the special values &lt;a href=&quot;#signal.SIG_IGN&quot;&gt;&lt;code&gt;signal.SIG_IGN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIG_DFL&quot;&gt;&lt;code&gt;signal.SIG_DFL&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. Here, &lt;a href=&quot;#signal.SIG_IGN&quot;&gt;&lt;code&gt;signal.SIG_IGN&lt;/code&gt;&lt;/a&gt; means that the signal was previously ignored, &lt;a href=&quot;#signal.SIG_DFL&quot;&gt;&lt;code&gt;signal.SIG_DFL&lt;/code&gt;&lt;/a&gt; means that the default way of handling the signal was previously in use, and &lt;code&gt;None&lt;/code&gt; means that the previous signal handler was not installed from Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a496e28d1bf7d6ccb5930bf4a870be2bd8c46ac" translate="yes" xml:space="preserve">
          <source>Return the current size of the output buffer used by the transport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d176283e86728f4e4972a54a0fb794083549bc07" translate="yes" xml:space="preserve">
          <source>Return the current state of the decoder. This must be a tuple with two items, the first must be the buffer containing the still undecoded input. The second must be an integer and can be additional state info. (The implementation should make sure that &lt;code&gt;0&lt;/code&gt; is the most common additional state info.) If this additional state info is &lt;code&gt;0&lt;/code&gt; it must be possible to set the decoder to the state which has no input buffered and &lt;code&gt;0&lt;/code&gt; as the additional state info, so that feeding the previously buffered input to the decoder returns it to the previous state without producing any output. (Additional state info that is more complicated than integers can be converted into an integer by marshaling/pickling the info and encoding the bytes of the resulting string into an integer.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d660cd9fe8594841a4d606d7afd4a64ef9f149b3" translate="yes" xml:space="preserve">
          <source>Return the current state of the encoder which must be an integer. The implementation should make sure that &lt;code&gt;0&lt;/code&gt; is the most common state. (States that are more complicated than integers can be converted into an integer by marshaling/pickling the state and encoding the bytes of the resulting string into an integer.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cedd48282a0852f078f68fa7ce1642d78bd3c69" translate="yes" xml:space="preserve">
          <source>Return the current stream position as an opaque number. The number does not usually represent a number of bytes in the underlying binary storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97cec0dfd4aa1a193a37f1206709317a5a2f6af" translate="yes" xml:space="preserve">
          <source>Return the current stream position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93c7ba19303e58df03488e453ba8d90b9319a38" translate="yes" xml:space="preserve">
          <source>Return the current time, as a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; value, according to the event loop&amp;rsquo;s internal monotonic clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12e4ac7ef471b72b452854be0da023d0576d8cd" translate="yes" xml:space="preserve">
          <source>Return the current value of the flags that are used for &lt;code&gt;dlopen()&lt;/code&gt; calls. Symbolic names for the flag values can be found in the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module (&lt;code&gt;RTLD_xxx&lt;/code&gt; constants, e.g. &lt;a href=&quot;os#os.RTLD_LAZY&quot;&gt;&lt;code&gt;os.RTLD_LAZY&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53550db0b7fe04268edcf54b37c6ea28aff016d" translate="yes" xml:space="preserve">
          <source>Return the current value of the recursion limit, the maximum depth of the Python interpreter stack. This limit prevents infinite recursion from causing an overflow of the C stack and crashing Python. It can be set by &lt;a href=&quot;#sys.setrecursionlimit&quot;&gt;&lt;code&gt;setrecursionlimit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc79de0ebcec35661259d0eba29098063706c502" translate="yes" xml:space="preserve">
          <source>Return the current write position in the output file. Useful in combination with &lt;a href=&quot;#aifc.aifc.setmark&quot;&gt;&lt;code&gt;setmark()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b010a788f956ad6ea8e4cd6f87254d8d9b43e30a" translate="yes" xml:space="preserve">
          <source>Return the currently running &lt;a href=&quot;#asyncio.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; instance, or &lt;code&gt;None&lt;/code&gt; if no task is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a7af3733d69299dd1f0c43ece23a61bcd85680" translate="yes" xml:space="preserve">
          <source>Return the currently running task or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0feda978bd187765741a79619983b41ddd73e5d6" translate="yes" xml:space="preserve">
          <source>Return the data associated with &lt;em&gt;pathname&lt;/em&gt;. Raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if the file wasn&amp;rsquo;t found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc1397e3f461f8428cb9a837f9ebc03b73a5eea" translate="yes" xml:space="preserve">
          <source>Return the data collected between a SB/SE pair (suboption begin/end). The callback should access these data when it was invoked with a &lt;code&gt;SE&lt;/code&gt; command. This method never blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebbc6a33e23833f4869ba2a9a6e5e13f80c60d9" translate="yes" xml:space="preserve">
          <source>Return the data for the specified year ready for formatting (similar to &lt;a href=&quot;#calendar.Calendar.yeardatescalendar&quot;&gt;&lt;code&gt;yeardatescalendar()&lt;/code&gt;&lt;/a&gt;). Entries in the week lists are day numbers. Day numbers outside this month are zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f74bdbd389dee986f1919303e8eaab78578dcc2" translate="yes" xml:space="preserve">
          <source>Return the data for the specified year ready for formatting (similar to &lt;a href=&quot;#calendar.Calendar.yeardatescalendar&quot;&gt;&lt;code&gt;yeardatescalendar()&lt;/code&gt;&lt;/a&gt;). Entries in the week lists are tuples of day numbers and weekday numbers. Day numbers outside this month are zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db707d6b8e76ad22d633da6d7a7130a4a0fd7e5" translate="yes" xml:space="preserve">
          <source>Return the data for the specified year ready for formatting. The return value is a list of month rows. Each month row contains up to &lt;em&gt;width&lt;/em&gt; months (defaulting to 3). Each month contains between 4 and 6 weeks and each week contains 1&amp;ndash;7 days. Days are &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf3abadc6821dfd1675e652c97951c8cb02fed2" translate="yes" xml:space="preserve">
          <source>Return the data in the buffer as a bytestring. This is equivalent to calling the &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; constructor on the memoryview.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72d5f101ad5eac8ba6d7077331d02b7e6d8aa02" translate="yes" xml:space="preserve">
          <source>Return the data in the buffer as a list of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f351b9e8d009f824b3fbfe8e6f3d536ee1f7f307" translate="yes" xml:space="preserve">
          <source>Return the date corresponding to the proleptic Gregorian ordinal, where January 1 of year 1 has ordinal 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f882abaf7a2e3d6af956799f419a8b5b86ab9ef" translate="yes" xml:space="preserve">
          <source>Return the day of the week as an integer, where Monday is 0 and Sunday is 6. For example, &lt;code&gt;date(2002, 12, 4).weekday() == 2&lt;/code&gt;, a Wednesday. See also &lt;a href=&quot;#datetime.date.isoweekday&quot;&gt;&lt;code&gt;isoweekday()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c69365c96b2b9c4f34bf36f5eecdcf479e5fda8" translate="yes" xml:space="preserve">
          <source>Return the day of the week as an integer, where Monday is 0 and Sunday is 6. The same as &lt;code&gt;self.date().weekday()&lt;/code&gt;. See also &lt;a href=&quot;#datetime.datetime.isoweekday&quot;&gt;&lt;code&gt;isoweekday()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a01e9230b1c8139bc94ec6d44f4947d6f6e692" translate="yes" xml:space="preserve">
          <source>Return the day of the week as an integer, where Monday is 1 and Sunday is 7. For example, &lt;code&gt;date(2002, 12, 4).isoweekday() == 3&lt;/code&gt;, a Wednesday. See also &lt;a href=&quot;#datetime.date.weekday&quot;&gt;&lt;code&gt;weekday()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.date.isocalendar&quot;&gt;&lt;code&gt;isocalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd276edfab9eec432cc6ff4274316a98658ea53c" translate="yes" xml:space="preserve">
          <source>Return the day of the week as an integer, where Monday is 1 and Sunday is 7. The same as &lt;code&gt;self.date().isoweekday()&lt;/code&gt;. See also &lt;a href=&quot;#datetime.datetime.weekday&quot;&gt;&lt;code&gt;weekday()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#datetime.datetime.isocalendar&quot;&gt;&lt;code&gt;isocalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f9df382a5b53ff906a8595d0714ceed33bcc0c" translate="yes" xml:space="preserve">
          <source>Return the daylight saving time (DST) adjustment, as a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object or &lt;code&gt;None&lt;/code&gt; if DST information isn&amp;rsquo;t known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7c9dae9c8eb8f40f770e561d2e1fb917aa3f16" translate="yes" xml:space="preserve">
          <source>Return the debugging flags currently set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ebed788fa85a9f10f35d89f40bad7a9fc2befd" translate="yes" xml:space="preserve">
          <source>Return the decoded contents of the pointed-to file as a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97234025673cf2b43e00eeb1ba4cf2c276cee4ae" translate="yes" xml:space="preserve">
          <source>Return the default content type. Most messages have a default content type of &lt;em&gt;text/plain&lt;/em&gt;, except for messages that are subparts of &lt;em&gt;multipart/digest&lt;/em&gt; containers. Such subparts have a default content type of &lt;em&gt;message/rfc822&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5414651409799e066b6731366d3297d7dd7a18da" translate="yes" xml:space="preserve">
          <source>Return the default timeout in seconds (float) for new socket objects. A value of &lt;code&gt;None&lt;/code&gt; indicates that new socket objects have no timeout. When the socket module is first imported, the default is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1370ef3690d480a730a9a38522f8ba17f8c82028" translate="yes" xml:space="preserve">
          <source>Return the delivery date of the message as a floating-point number representing seconds since the epoch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea08d5ca55673507cdcf358644e199e2a0aa238" translate="yes" xml:space="preserve">
          <source>Return the dialect associated with &lt;em&gt;name&lt;/em&gt;. An &lt;a href=&quot;#csv.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;name&lt;/em&gt; is not a registered dialect name. This function returns an immutable &lt;a href=&quot;#csv.Dialect&quot;&gt;&lt;code&gt;Dialect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc999bd9aa3b3cae0a6776ce2442af2f9c861bf4" translate="yes" xml:space="preserve">
          <source>Return the difference between &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4327e4378ad851b68c57f02b143cbb0d1bcbce" translate="yes" xml:space="preserve">
          <source>Return the digest of the bytes passed to the &lt;a href=&quot;#hmac.HMAC.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt; method so far. This bytes object will be the same length as the &lt;em&gt;digest_size&lt;/em&gt; of the digest given to the constructor. It may contain non-ASCII bytes, including NUL bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04877b02a97f189865fee3be3105c483471a1ef0" translate="yes" xml:space="preserve">
          <source>Return the digest of the data passed to the &lt;a href=&quot;#hashlib.hash.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt; method so far. This is a bytes object of size &lt;a href=&quot;#hashlib.hash.digest_size&quot;&gt;&lt;code&gt;digest_size&lt;/code&gt;&lt;/a&gt; which may contain bytes in the whole range from 0 to 255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e90620d1abe2a936746b9901a3159f9eb3e7854" translate="yes" xml:space="preserve">
          <source>Return the digest of the data passed to the &lt;code&gt;update()&lt;/code&gt; method so far. This is a bytes object of size &lt;em&gt;length&lt;/em&gt; which may contain bytes in the whole range from 0 to 255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6287f21a2f5506056de42eac3eab129a00723513" translate="yes" xml:space="preserve">
          <source>Return the directory name of pathname &lt;em&gt;path&lt;/em&gt;. This is the first element of the pair returned by passing &lt;em&gt;path&lt;/em&gt; to the function &lt;a href=&quot;#os.path.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f260d61c109216cf5dd19df368cf6a15cb02543" translate="yes" xml:space="preserve">
          <source>Return the distance from the turtle to (x,y), the given vector, or the given other turtle, in turtle step units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20d6abc523275d610ce48bbc112788404e75173" translate="yes" xml:space="preserve">
          <source>Return the docstring of the given &lt;em&gt;node&lt;/em&gt; (which must be a &lt;code&gt;FunctionDef&lt;/code&gt;, &lt;code&gt;AsyncFunctionDef&lt;/code&gt;, &lt;code&gt;ClassDef&lt;/code&gt;, or &lt;code&gt;Module&lt;/code&gt; node), or &lt;code&gt;None&lt;/code&gt; if it has no docstring. If &lt;em&gt;clean&lt;/em&gt; is true, clean up the docstring&amp;rsquo;s indentation with &lt;a href=&quot;inspect#inspect.cleandoc&quot;&gt;&lt;code&gt;inspect.cleandoc()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd804816b2ca054398a8e18fa04002947159b10" translate="yes" xml:space="preserve">
          <source>Return the effective group id of the current process. This corresponds to the &amp;ldquo;set id&amp;rdquo; bit on the file being executed in the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88024a9cdb0c0309f3dc694940a5d765e5a15db" translate="yes" xml:space="preserve">
          <source>Return the encoding of the message catalog file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882a5e0b56e2ee3fccd487523b5ce1ffff0a61a0" translate="yes" xml:space="preserve">
          <source>Return the encoding used for text data, according to user preferences. User preferences are expressed differently on different systems, and might not be available programmatically on some systems, so this function only returns a guess.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953696a90953c52ce8d6121a91c46b4db8357ae4" translate="yes" xml:space="preserve">
          <source>Return the encoding used to return translated messages in &lt;a href=&quot;#gettext.NullTranslations.lgettext&quot;&gt;&lt;code&gt;lgettext()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#gettext.NullTranslations.lngettext&quot;&gt;&lt;code&gt;lngettext()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff63c8f7512256d8a11ef4ea9d646f4b224532a9" translate="yes" xml:space="preserve">
          <source>Return the entire message flattened as a bytes object. When optional &lt;em&gt;unixfrom&lt;/em&gt; is true, the envelope header is included in the returned string. &lt;em&gt;unixfrom&lt;/em&gt; defaults to &lt;code&gt;False&lt;/code&gt;. The &lt;em&gt;policy&lt;/em&gt; argument may be used to override the default policy obtained from the message instance. This can be used to control some of the formatting produced by the method, since the specified &lt;em&gt;policy&lt;/em&gt; will be passed to the &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5098a3922e98f7fe31569f05897bd5f096144688" translate="yes" xml:space="preserve">
          <source>Return the entire message flattened as a bytes object. When optional &lt;em&gt;unixfrom&lt;/em&gt; is true, the envelope header is included in the returned string. &lt;em&gt;unixfrom&lt;/em&gt; defaults to &lt;code&gt;False&lt;/code&gt;. The &lt;em&gt;policy&lt;/em&gt; argument may be used to override the default policy obtained from the message instance. This can be used to control some of the formatting produced by the method, since the specified &lt;em&gt;policy&lt;/em&gt; will be passed to the &lt;code&gt;BytesGenerator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1ed3632edea847e32a46457e75cceaee2a3b24" translate="yes" xml:space="preserve">
          <source>Return the entire message flattened as a string. When optional &lt;em&gt;unixfrom&lt;/em&gt; is true, the envelope header is included in the returned string. &lt;em&gt;unixfrom&lt;/em&gt; defaults to &lt;code&gt;False&lt;/code&gt;. For backward compatibility reasons, &lt;em&gt;maxheaderlen&lt;/em&gt; defaults to &lt;code&gt;0&lt;/code&gt;, so if you want a different value you must override it explicitly (the value specified for &lt;em&gt;max_line_length&lt;/em&gt; in the policy will be ignored by this method). The &lt;em&gt;policy&lt;/em&gt; argument may be used to override the default policy obtained from the message instance. This can be used to control some of the formatting produced by the method, since the specified &lt;em&gt;policy&lt;/em&gt; will be passed to the &lt;code&gt;Generator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2a1afea1592a58f1b0fb131971f4731cf83663" translate="yes" xml:space="preserve">
          <source>Return the entire message flattened as a string. When optional &lt;em&gt;unixfrom&lt;/em&gt; is true, the envelope header is included in the returned string. &lt;em&gt;unixfrom&lt;/em&gt; defaults to &lt;code&gt;False&lt;/code&gt;. For backward compatibility with the base &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; class &lt;em&gt;maxheaderlen&lt;/em&gt; is accepted, but defaults to &lt;code&gt;None&lt;/code&gt;, which means that by default the line length is controlled by the &lt;code&gt;max_line_length&lt;/code&gt; of the policy. The &lt;em&gt;policy&lt;/em&gt; argument may be used to override the default policy obtained from the message instance. This can be used to control some of the formatting produced by the method, since the specified &lt;em&gt;policy&lt;/em&gt; will be passed to the &lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea7c9a84cdb7f3471c0e5ac91ca77b82a64b9d4" translate="yes" xml:space="preserve">
          <source>Return the error handler previously registered under the name &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e2ad37b7c08cb69ca5dcb0154e1c4672263d09" translate="yes" xml:space="preserve">
          <source>Return the error message corresponding to the error code in &lt;em&gt;code&lt;/em&gt;. On platforms where &lt;code&gt;strerror()&lt;/code&gt; returns &lt;code&gt;NULL&lt;/code&gt; when given an unknown error number, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5957286fd9e91be2df3b377fc5db0b5634316298" translate="yes" xml:space="preserve">
          <source>Return the event loop associated with the server object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4858549fe6991850b1010f5e98c6203fd2cdaf76" translate="yes" xml:space="preserve">
          <source>Return the event loop the Future object is bound to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f62825d909f6f4fb24efe36461611a15f57afc" translate="yes" xml:space="preserve">
          <source>Return the exception of the Task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfa0f75bf3f1ffefea809ea0980ca4493ff84ae" translate="yes" xml:space="preserve">
          <source>Return the exception raised by the call. If the call hasn&amp;rsquo;t yet completed then this method will wait up to &lt;em&gt;timeout&lt;/em&gt; seconds. If the call hasn&amp;rsquo;t completed in &lt;em&gt;timeout&lt;/em&gt; seconds, then a &lt;a href=&quot;#concurrent.futures.TimeoutError&quot;&gt;&lt;code&gt;concurrent.futures.TimeoutError&lt;/code&gt;&lt;/a&gt; will be raised. &lt;em&gt;timeout&lt;/em&gt; can be an int or float. If &lt;em&gt;timeout&lt;/em&gt; is not specified or &lt;code&gt;None&lt;/code&gt;, there is no limit to the wait time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7aae2cde530fcb92c27f78f583309e61910585" translate="yes" xml:space="preserve">
          <source>Return the exception that was set on this Future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbed8fca478eabbe3ba282d8d5bd26c5d8994de" translate="yes" xml:space="preserve">
          <source>Return the file descriptor associated with the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f626f5709cfbc69160857c2dc260d58e3191c59" translate="yes" xml:space="preserve">
          <source>Return the file descriptor number of the control fd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed70e331efb3b6d1879613332cf748b5cdb3767" translate="yes" xml:space="preserve">
          <source>Return the file descriptor number of the polling object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ef6c628d7c41effe279255307a51f87b745a11" translate="yes" xml:space="preserve">
          <source>Return the file descriptor of the socket object used internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368422e5d12444916ce0a0956bb0d16374d15185" translate="yes" xml:space="preserve">
          <source>Return the file descriptor or handle used by the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b97ce9b182a0acbc3e435f11969e55fde52597" translate="yes" xml:space="preserve">
          <source>Return the file handle for the file descriptor &lt;em&gt;fd&lt;/em&gt;. Raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;fd&lt;/em&gt; is not recognized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8021aaaceec2d93d2147b989a98c0b54f927115" translate="yes" xml:space="preserve">
          <source>Return the file system path representation of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f66469cd7e4099e884773d44171b449f4c392c" translate="yes" xml:space="preserve">
          <source>Return the file system representation of the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1770607ddd59a24c8bf59129deca1662b0b2914" translate="yes" xml:space="preserve">
          <source>Return the filename corresponding to the controlling terminal of the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be26749658b7b47b9473d31e8a4c6bf40d6cca2" translate="yes" xml:space="preserve">
          <source>Return the filename prefix used to create temporary files. This does not contain the directory component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22047be39c2201763b8eaee7eae724bfdc99069b" translate="yes" xml:space="preserve">
          <source>Return the first operand with exponent adjusted by the second. Equivalently, return the first operand multiplied by &lt;code&gt;10**other&lt;/code&gt;. The second operand must be an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17e85fa767407a2a851c201f5d89e9f5bbf575f" translate="yes" xml:space="preserve">
          <source>Return the fixed value specified when the &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; instance is constructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8263d8ebefb99c27d7ea0e6f0e82be88cbe674" translate="yes" xml:space="preserve">
          <source>Return the floor of &lt;em&gt;x&lt;/em&gt;, the largest integer less than or equal to &lt;em&gt;x&lt;/em&gt;. If &lt;em&gt;x&lt;/em&gt; is not a float, delegates to &lt;code&gt;x.__floor__()&lt;/code&gt;, which should return an &lt;a href=&quot;numbers#numbers.Integral&quot;&gt;&lt;code&gt;Integral&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32836b6e44a1684175900f6a4c783c7a2ed2aa53" translate="yes" xml:space="preserve">
          <source>Return the formatted representation of &lt;em&gt;object&lt;/em&gt; as a string. &lt;em&gt;indent&lt;/em&gt;, &lt;em&gt;width&lt;/em&gt;, &lt;em&gt;depth&lt;/em&gt;, &lt;em&gt;compact&lt;/em&gt; and &lt;em&gt;sort_dicts&lt;/em&gt; will be passed to the &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; constructor as formatting parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67cea40bd80d09b9e3b6efc78d649f24f8fd82fc" translate="yes" xml:space="preserve">
          <source>Return the formatted representation of &lt;em&gt;object&lt;/em&gt;. This takes into account the options passed to the &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf801eead592527bb6105e7d0f65199991f5edb" translate="yes" xml:space="preserve">
          <source>Return the fractional and integer parts of &lt;em&gt;x&lt;/em&gt;. Both results carry the sign of &lt;em&gt;x&lt;/em&gt; and are floats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9939bb57529dff73be6e84eae13f6512c466e1d0" translate="yes" xml:space="preserve">
          <source>Return the frame object for the caller&amp;rsquo;s stack frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aab5f1f458fc7e5343030cd286a847793d7e38e" translate="yes" xml:space="preserve">
          <source>Return the full request URI, optionally including the query string, using the algorithm found in the &amp;ldquo;URL Reconstruction&amp;rdquo; section of &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;. If &lt;em&gt;include_query&lt;/em&gt; is false, the query string is not included in the resulting URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd8d1ed683caed4b272f1739fa0efd68c4422ad" translate="yes" xml:space="preserve">
          <source>Return the given window&amp;rsquo;s current background character/attribute pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73f59131d0e9dc31a92ae7ed4b531b228525d3f" translate="yes" xml:space="preserve">
          <source>Return the greatest common divisor of the integers &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. If either &lt;em&gt;a&lt;/em&gt; or &lt;em&gt;b&lt;/em&gt; is nonzero, then the absolute value of &lt;code&gt;gcd(a, b)&lt;/code&gt; is the largest integer that divides both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. &lt;code&gt;gcd(a,b)&lt;/code&gt; has the same sign as &lt;em&gt;b&lt;/em&gt; if &lt;em&gt;b&lt;/em&gt; is nonzero; otherwise it takes the sign of &lt;em&gt;a&lt;/em&gt;. &lt;code&gt;gcd(0,
0)&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f3a25f0ad6354430ed0255a5d513fff7586865" translate="yes" xml:space="preserve">
          <source>Return the greatest common divisor of the integers &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. If either &lt;em&gt;a&lt;/em&gt; or &lt;em&gt;b&lt;/em&gt; is nonzero, then the value of &lt;code&gt;gcd(a, b)&lt;/code&gt; is the largest positive integer that divides both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. &lt;code&gt;gcd(0, 0)&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd4a8f00f0403cbe30b3d9a21b926b759b8b1bb" translate="yes" xml:space="preserve">
          <source>Return the group database entry for the given group name. &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised if the entry asked for cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d795658f2b66d3340648004e8c3523161a50657" translate="yes" xml:space="preserve">
          <source>Return the group database entry for the given numeric group ID. &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised if the entry asked for cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73baafce036322f58fbe2fff231151f591917e3a" translate="yes" xml:space="preserve">
          <source>Return the harmonic mean of &lt;em&gt;data&lt;/em&gt;, a sequence or iterable of real-valued numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cac28f5db33dfb73d078403b1558552f4940036" translate="yes" xml:space="preserve">
          <source>Return the hash of &lt;em&gt;source_bytes&lt;/em&gt; as bytes. A hash-based &lt;code&gt;.pyc&lt;/code&gt; file embeds the &lt;a href=&quot;#importlib.util.source_hash&quot;&gt;&lt;code&gt;source_hash()&lt;/code&gt;&lt;/a&gt; of the corresponding source file&amp;rsquo;s contents in its header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df380690c36e27c0412aedba7a8f02f5b564923" translate="yes" xml:space="preserve">
          <source>Return the hash value of the object (if it has one). Hash values are integers. They are used to quickly compare dictionary keys during a dictionary lookup. Numeric values that compare equal have the same hash value (even if they are of different types, as is the case for 1 and 1.0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09689401d2c17c6d0436717ca98e13c39a53d581" translate="yes" xml:space="preserve">
          <source>Return the height of the turtle window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43da6fcd1a0518a3c1944c31d94c054d3fcfafc9" translate="yes" xml:space="preserve">
          <source>Return the hexadecimal representation of the binary &lt;em&gt;data&lt;/em&gt;. Every byte of &lt;em&gt;data&lt;/em&gt; is converted into the corresponding 2-digit hex representation. The returned bytes object is therefore twice as long as the length of &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fba88096a181b262822b5ffe4d0d96c61727134" translate="yes" xml:space="preserve">
          <source>Return the high median of data. If &lt;em&gt;data&lt;/em&gt; is empty, &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; is raised. &lt;em&gt;data&lt;/em&gt; can be a sequence or iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f7013a4ee3f52185245dd1c9d6feb8d0945683" translate="yes" xml:space="preserve">
          <source>Return the higher-level protocol that was selected during the TLS/SSL handshake. If &lt;a href=&quot;#ssl.SSLContext.set_npn_protocols&quot;&gt;&lt;code&gt;SSLContext.set_npn_protocols()&lt;/code&gt;&lt;/a&gt; was not called, or if the other party does not support NPN, or if the handshake has not yet happened, this will return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e2ddf0bd97ea1ff34712ec483f276aeaf6a5cb" translate="yes" xml:space="preserve">
          <source>Return the highest index in the sequence where the subsequence &lt;em&gt;sub&lt;/em&gt; is found, such that &lt;em&gt;sub&lt;/em&gt; is contained within &lt;code&gt;s[start:end]&lt;/code&gt;. Optional arguments &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; are interpreted as in slice notation. Return &lt;code&gt;-1&lt;/code&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f26044f8174b202968b13068503ca3ddc81f8f2" translate="yes" xml:space="preserve">
          <source>Return the highest index in the string where substring &lt;em&gt;sub&lt;/em&gt; is found, such that &lt;em&gt;sub&lt;/em&gt; is contained within &lt;code&gt;s[start:end]&lt;/code&gt;. Optional arguments &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; are interpreted as in slice notation. Return &lt;code&gt;-1&lt;/code&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6a92863a9a6b95ec28955c68a8e472108f9451" translate="yes" xml:space="preserve">
          <source>Return the hyperbolic cosine of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a6a9f7132ecf7386874fbfd9ef2c66795670c9" translate="yes" xml:space="preserve">
          <source>Return the hyperbolic sine of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392d6339f0aacb4e40d14aec9461a124760e8669" translate="yes" xml:space="preserve">
          <source>Return the hyperbolic tangent of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a0e22f1e0d115fe7265b94ab7befb4b0796023" translate="yes" xml:space="preserve">
          <source>Return the id of the current process group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046a0c5b9a5879185d09c5015d157f39026a7882" translate="yes" xml:space="preserve">
          <source>Return the index of the file in the CAB file, and the new name of the file inside the CAB file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5076ed2e6af452c637e24327158dd344719f5f9" translate="yes" xml:space="preserve">
          <source>Return the index of the first of occurrence of &lt;em&gt;b&lt;/em&gt; in &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d28bdbca47cffd52f8b83ed5f60e2d8190290e" translate="yes" xml:space="preserve">
          <source>Return the indices of the start and end of the substring matched by &lt;em&gt;group&lt;/em&gt;; &lt;em&gt;group&lt;/em&gt; defaults to zero (meaning the whole matched substring). Return &lt;code&gt;-1&lt;/code&gt; if &lt;em&gt;group&lt;/em&gt; exists but did not contribute to the match. For a match object &lt;em&gt;m&lt;/em&gt;, and a group &lt;em&gt;g&lt;/em&gt; that did contribute to the match, the substring matched by group &lt;em&gt;g&lt;/em&gt; (equivalent to &lt;code&gt;m.group(g)&lt;/code&gt;) is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265e70fedac65d4405fd971513a45c72f20a3b93" translate="yes" xml:space="preserve">
          <source>Return the inode number of the entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c3a4b0ffba4ee25f72310d3cc36908b6a094e2" translate="yes" xml:space="preserve">
          <source>Return the integer &amp;ldquo;file descriptor&amp;rdquo; for the current file. When no file is opened (before the first line and between files), returns &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2e61368205c56a09d38e998cbab99b54f78a72" translate="yes" xml:space="preserve">
          <source>Return the integer represented by the given array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10856fbf6b8e4e5bd4ad5944076731f283e02e3b" translate="yes" xml:space="preserve">
          <source>Return the integer square root of the nonnegative integer &lt;em&gt;n&lt;/em&gt;. This is the floor of the exact square root of &lt;em&gt;n&lt;/em&gt;, or equivalently the greatest integer &lt;em&gt;a&lt;/em&gt; such that &lt;em&gt;a&lt;/em&gt;&amp;sup2; &amp;le; &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bbdd711c13e2138f0fef31c290be5aa4602460" translate="yes" xml:space="preserve">
          <source>Return the intensity of the red, green, and blue (RGB) components in the color &lt;em&gt;color_number&lt;/em&gt;, which must be between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;COLORS&lt;/code&gt;. Return a 3-tuple, containing the R,G,B values for the given color, which will be between &lt;code&gt;0&lt;/code&gt; (no component) and &lt;code&gt;1000&lt;/code&gt; (maximum amount of component).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55152900d8fb67b5c4728c619bd6024d14f40ad" translate="yes" xml:space="preserve">
          <source>Return the interpreter specified in the &lt;code&gt;#!&lt;/code&gt; line at the start of the archive. If there is no &lt;code&gt;#!&lt;/code&gt; line, return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;archive&lt;/em&gt; argument can be a filename or a file-like object open for reading in bytes mode. It is assumed to be at the start of the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0972d7848fe3865b44ef01bc6e66c87ff8535278" translate="yes" xml:space="preserve">
          <source>Return the interpreter&amp;rsquo;s &amp;ldquo;check interval&amp;rdquo;; see &lt;a href=&quot;#sys.setcheckinterval&quot;&gt;&lt;code&gt;setcheckinterval()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9882ee5fb504dc0d697882158d6c08fe14dd24" translate="yes" xml:space="preserve">
          <source>Return the interpreter&amp;rsquo;s &amp;ldquo;thread switch interval&amp;rdquo;; see &lt;a href=&quot;#sys.setswitchinterval&quot;&gt;&lt;code&gt;setswitchinterval()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b9af868469e4eeadced14380312ca5417b3a96" translate="yes" xml:space="preserve">
          <source>Return the inverse hyperbolic cosine of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09048e0216d170065b3d3476a85d4235198752a1" translate="yes" xml:space="preserve">
          <source>Return the inverse hyperbolic cosine of &lt;em&gt;x&lt;/em&gt;. There is one branch cut, extending left from 1 along the real axis to -&amp;infin;, continuous from above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd01efe8db4e34018e3338cc8ac7a88cacdf9e2f" translate="yes" xml:space="preserve">
          <source>Return the inverse hyperbolic sine of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22737dfb1d25b29c567eb5e67c8db84bf1834172" translate="yes" xml:space="preserve">
          <source>Return the inverse hyperbolic sine of &lt;em&gt;x&lt;/em&gt;. There are two branch cuts: One extends from &lt;code&gt;1j&lt;/code&gt; along the imaginary axis to &lt;code&gt;&amp;infin;j&lt;/code&gt;, continuous from the right. The other extends from &lt;code&gt;-1j&lt;/code&gt; along the imaginary axis to &lt;code&gt;-&amp;infin;j&lt;/code&gt;, continuous from the left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b871268d64d3a306be2cc40c8e7b657e5b52a9c3" translate="yes" xml:space="preserve">
          <source>Return the inverse hyperbolic tangent of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c882cb562951a58b8d5518ce091e0abd7d036177" translate="yes" xml:space="preserve">
          <source>Return the inverse hyperbolic tangent of &lt;em&gt;x&lt;/em&gt;. There are two branch cuts: One extends from &lt;code&gt;1&lt;/code&gt; along the real axis to &lt;code&gt;&amp;infin;&lt;/code&gt;, continuous from below. The other extends from &lt;code&gt;-1&lt;/code&gt; along the real axis to &lt;code&gt;-&amp;infin;&lt;/code&gt;, continuous from above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66c84567035ebfb327851feef8f0f42dbd76ab1" translate="yes" xml:space="preserve">
          <source>Return the item of &lt;em&gt;d&lt;/em&gt; with key &lt;em&gt;key&lt;/em&gt;. Raises a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;key&lt;/em&gt; is not in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d71917a6cf656aa037ddaee06235c6b2d24251" translate="yes" xml:space="preserve">
          <source>Return the item of the underlying mapping with key &lt;em&gt;key&lt;/em&gt;. Raises a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;key&lt;/em&gt; is not in the underlying mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56db590a4a2e41c741e8bbd35de0bed2a3659eba" translate="yes" xml:space="preserve">
          <source>Return the iterator object itself. This is required to allow both containers and iterators to be used with the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; statements. This method corresponds to the &lt;a href=&quot;https://docs.python.org/3.8/c-api/typeobj.html#c.PyTypeObject.tp_iter&quot;&gt;&lt;code&gt;tp_iter&lt;/code&gt;&lt;/a&gt; slot of the type structure for Python objects in the Python/C API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e93db0e8f61233c0036d5e6bab4c76457f72e72" translate="yes" xml:space="preserve">
          <source>Return the key associated with a registered file object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07acc7663b788f2954be2b49c8d92d5c022616e6" translate="yes" xml:space="preserve">
          <source>Return the largest item in an iterable or the largest of two or more arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f3b9a828581bd1909fd7e119635ae75459a6cb" translate="yes" xml:space="preserve">
          <source>Return the largest number representable in the given context (or in the current thread&amp;rsquo;s context if no context is given) that is smaller than the given operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d94a3a1a501210f72bc3090e2d1aee23445870" translate="yes" xml:space="preserve">
          <source>Return the last recorded polygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfd3f8c4cba9077be10cd96572bf859532920cd" translate="yes" xml:space="preserve">
          <source>Return the length (the number of items) of an object. The argument may be a sequence (such as a string, bytes, tuple, list, or range) or a collection (such as a dictionary, set, or frozen set).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad65f6276b2ef7d9285dcd4d5f6bd4bf03a70b73" translate="yes" xml:space="preserve">
          <source>Return the length of the file, which can be larger than the size of the memory-mapped area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19fca978f45d2493aca45d52e6991ca818d07e3" translate="yes" xml:space="preserve">
          <source>Return the line number in the current file. Before the first line has been read, returns &lt;code&gt;0&lt;/code&gt;. After the last line of the last file has been read, returns the line number of that line within the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2601df4b23542ca13f2609be69c950076f6f1c77" translate="yes" xml:space="preserve">
          <source>Return the line number where the current event begins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c05e091166bfa492208eaf800bb8a0586ab39fe" translate="yes" xml:space="preserve">
          <source>Return the list of ciphers shared by the client during the handshake. Each entry of the returned list is a three-value tuple containing the name of the cipher, the version of the SSL protocol that defines its use, and the number of secret bits the cipher uses. &lt;a href=&quot;#ssl.SSLSocket.shared_ciphers&quot;&gt;&lt;code&gt;shared_ciphers()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;None&lt;/code&gt; if no connection has been established or the socket is a client socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccf4815f4c606871de60fd407bb5a570c75ed04" translate="yes" xml:space="preserve">
          <source>Return the list of objects that directly refer to any of objs. This function will only locate those containers which support garbage collection; extension types which do refer to other objects but do not support garbage collection will not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59506f9670067a35377f18d45d9975998f39cd3" translate="yes" xml:space="preserve">
          <source>Return the list of stack frames for this Task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e7231aba4a58f6e127b1cef131a35627da0701" translate="yes" xml:space="preserve">
          <source>Return the list of turtles on the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97331c43a3d594e864544f359a0e5ab6e745a28c" translate="yes" xml:space="preserve">
          <source>Return the local date and time corresponding to the POSIX timestamp, such as is returned by &lt;a href=&quot;time#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt;. If optional argument &lt;em&gt;tz&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or not specified, the timestamp is converted to the platform&amp;rsquo;s local date and time, and the returned &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object is naive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24a004d87572b11d368fc6085f0317d4f88117e" translate="yes" xml:space="preserve">
          <source>Return the local date corresponding to the POSIX timestamp, such as is returned by &lt;a href=&quot;time#time.time&quot;&gt;&lt;code&gt;time.time()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b60f8cf69c60e76bcbcf647bc16594c9233f977" translate="yes" xml:space="preserve">
          <source>Return the localized translation of &lt;em&gt;message&lt;/em&gt;, based on the current global domain, language, and locale directory. This function is usually aliased as &lt;code&gt;_()&lt;/code&gt; in the local namespace (see examples below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2d256a76687c000e4629aafdc4d668d0cc80e9" translate="yes" xml:space="preserve">
          <source>Return the longest common sub-path of each pathname in the sequence &lt;em&gt;paths&lt;/em&gt;. Raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;paths&lt;/em&gt; contain both absolute and relative pathnames, the &lt;em&gt;paths&lt;/em&gt; are on the different drives or if &lt;em&gt;paths&lt;/em&gt; is empty. Unlike &lt;a href=&quot;#os.path.commonprefix&quot;&gt;&lt;code&gt;commonprefix()&lt;/code&gt;&lt;/a&gt;, this returns a valid path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca09a7576abfcfcba43fe103f1037623c6fa33b5" translate="yes" xml:space="preserve">
          <source>Return the longest path prefix (taken character-by-character) that is a prefix of all paths in &lt;em&gt;list&lt;/em&gt;. If &lt;em&gt;list&lt;/em&gt; is empty, return the empty string (&lt;code&gt;''&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a21fa20268b88c713a8484ee10c473d083bca9" translate="yes" xml:space="preserve">
          <source>Return the low median of numeric data. If &lt;em&gt;data&lt;/em&gt; is empty, &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; is raised. &lt;em&gt;data&lt;/em&gt; can be a sequence or iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132a172c332ba0edb103a586df193e451e86a488" translate="yes" xml:space="preserve">
          <source>Return the lowercased value (without parameters) of the message&amp;rsquo;s &lt;em&gt;Content-Disposition&lt;/em&gt; header if it has one, or &lt;code&gt;None&lt;/code&gt;. The possible values for this method are &lt;em&gt;inline&lt;/em&gt;, &lt;em&gt;attachment&lt;/em&gt; or &lt;code&gt;None&lt;/code&gt; if the message follows &lt;a href=&quot;https://tools.ietf.org/html/rfc2183.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2183&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4008bda6590fa8bff4879ad0a9da70daf857694" translate="yes" xml:space="preserve">
          <source>Return the lowercased value (without parameters) of the message&amp;rsquo;s &lt;em&gt;Content-Disposition&lt;/em&gt; header if it has one, or &lt;code&gt;None&lt;/code&gt;. The possible values for this method are &lt;em&gt;inline&lt;/em&gt;, &lt;em&gt;attachment&lt;/em&gt; or &lt;code&gt;None&lt;/code&gt; if the message follows &lt;a href=&quot;https://tools.ietf.org/html/rfc2183.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 2183&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1b922ecd86eae5bd64481b5fc69ae8c730961d" translate="yes" xml:space="preserve">
          <source>Return the lowest index in the data where the subsequence &lt;em&gt;sub&lt;/em&gt; is found, such that &lt;em&gt;sub&lt;/em&gt; is contained in the slice &lt;code&gt;s[start:end]&lt;/code&gt;. Optional arguments &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; are interpreted as in slice notation. Return &lt;code&gt;-1&lt;/code&gt; if &lt;em&gt;sub&lt;/em&gt; is not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2692ad2edb7b691a6d398fec8172f06e1831f495" translate="yes" xml:space="preserve">
          <source>Return the lowest index in the string where substring &lt;em&gt;sub&lt;/em&gt; is found within the slice &lt;code&gt;s[start:end]&lt;/code&gt;. Optional arguments &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; are interpreted as in slice notation. Return &lt;code&gt;-1&lt;/code&gt; if &lt;em&gt;sub&lt;/em&gt; is not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52cd516aa852b754626c004b8df4ff0b7d0eb06" translate="yes" xml:space="preserve">
          <source>Return the main &lt;a href=&quot;#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; object. In normal conditions, the main thread is the thread from which the Python interpreter was started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbc38eb7a87c3ee0116bab20ef5ab67cda76be3" translate="yes" xml:space="preserve">
          <source>Return the mantissa and exponent of &lt;em&gt;x&lt;/em&gt; as the pair &lt;code&gt;(m, e)&lt;/code&gt;. &lt;em&gt;m&lt;/em&gt; is a float and &lt;em&gt;e&lt;/em&gt; is an integer such that &lt;code&gt;x == m * 2**e&lt;/code&gt; exactly. If &lt;em&gt;x&lt;/em&gt; is zero, returns &lt;code&gt;(0.0, 0)&lt;/code&gt;, otherwise &lt;code&gt;0.5 &amp;lt;= abs(m) &amp;lt; 1&lt;/code&gt;. This is used to &amp;ldquo;pick apart&amp;rdquo; the internal representation of a float in a portable way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0866073a79d5d061ebe6e5174ca3752aff349a3f" translate="yes" xml:space="preserve">
          <source>Return the mapped value for &lt;em&gt;code&lt;/em&gt; according to tableB.2 (Mapping for case-folding used with NFKC).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae504d88bc235a4f01197571884c4fcc3aeb70c1" translate="yes" xml:space="preserve">
          <source>Return the mapped value for &lt;em&gt;code&lt;/em&gt; according to tableB.3 (Mapping for case-folding used with no normalization).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bcea4d592500cf34a8c4339956b623364dfc10" translate="yes" xml:space="preserve">
          <source>Return the match for &lt;em&gt;key&lt;/em&gt; in map &lt;em&gt;mapname&lt;/em&gt;, or raise an error (&lt;a href=&quot;#nis.error&quot;&gt;&lt;code&gt;nis.error&lt;/code&gt;&lt;/a&gt;) if there is none. Both should be strings, &lt;em&gt;key&lt;/em&gt; is 8-bit clean. Return value is an arbitrary array of bytes (may contain &lt;code&gt;NULL&lt;/code&gt; and other joys).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f2ca9a86e9a9a93ba5875abf5750b62fbf75ea" translate="yes" xml:space="preserve">
          <source>Return the maximum allowed number of headers named &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2fc0b02393561494f218d2e47d2bbb95d80429" translate="yes" xml:space="preserve">
          <source>Return the maximum of the &lt;em&gt;absolute value&lt;/em&gt; of all samples in a fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03edc53b5b82181f0452f61db9fa61ecf8b984d" translate="yes" xml:space="preserve">
          <source>Return the maximum peak-peak value in the sound fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5378d4c2eda43437301a8b19074c2d9b4e16bf0c" translate="yes" xml:space="preserve">
          <source>Return the median (middle value) of numeric data, using the common &amp;ldquo;mean of middle two&amp;rdquo; method. If &lt;em&gt;data&lt;/em&gt; is empty, &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; is raised. &lt;em&gt;data&lt;/em&gt; can be a sequence or iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445450bcafe18eccd779bfeba27c2151b41823bd" translate="yes" xml:space="preserve">
          <source>Return the median of grouped continuous data, calculated as the 50th percentile, using interpolation. If &lt;em&gt;data&lt;/em&gt; is empty, &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; is raised. &lt;em&gt;data&lt;/em&gt; can be a sequence or iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c960db3a4e8b4b8ddb6e7a85e821ccf921c33c37" translate="yes" xml:space="preserve">
          <source>Return the members as a list of their names. It has the same order as the list returned by &lt;a href=&quot;#tarfile.TarFile.getmembers&quot;&gt;&lt;code&gt;getmembers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5ee108bde4cd1220df38aee3378628a08b8d83" translate="yes" xml:space="preserve">
          <source>Return the members of the archive as a list of &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; objects. The list has the same order as the members in the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07ef506880739bbf98a163b7bea55fd89afea94" translate="yes" xml:space="preserve">
          <source>Return the message&amp;rsquo;s &lt;em&gt;Content-Type&lt;/em&gt; parameters, as a list. The elements of the returned list are 2-tuples of key/value pairs, as split on the &lt;code&gt;'='&lt;/code&gt; sign. The left hand side of the &lt;code&gt;'='&lt;/code&gt; is the key, while the right hand side is the value. If there is no &lt;code&gt;'='&lt;/code&gt; sign in the parameter the value is the empty string, otherwise the value is as described in &lt;a href=&quot;#email.message.Message.get_param&quot;&gt;&lt;code&gt;get_param()&lt;/code&gt;&lt;/a&gt; and is unquoted if optional &lt;em&gt;unquote&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec6b85fdf397156a826b0b2e0fdf3e6cce940c3" translate="yes" xml:space="preserve">
          <source>Return the message&amp;rsquo;s content type, coerced to lower case of the form &lt;em&gt;maintype/subtype&lt;/em&gt;. If there is no &lt;em&gt;Content-Type&lt;/em&gt; header in the message return the value returned by &lt;a href=&quot;#email.message.EmailMessage.get_default_type&quot;&gt;&lt;code&gt;get_default_type()&lt;/code&gt;&lt;/a&gt;. If the &lt;em&gt;Content-Type&lt;/em&gt; header is invalid, return &lt;code&gt;text/plain&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c7546ab04c785b105fa67276cf83b7bb94901b" translate="yes" xml:space="preserve">
          <source>Return the message&amp;rsquo;s content type. The returned string is coerced to lower case of the form &lt;em&gt;maintype/subtype&lt;/em&gt;. If there was no &lt;em&gt;Content-Type&lt;/em&gt; header in the message the default type as given by &lt;a href=&quot;#email.message.Message.get_default_type&quot;&gt;&lt;code&gt;get_default_type()&lt;/code&gt;&lt;/a&gt; will be returned. Since according to &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;, messages always have a default type, &lt;a href=&quot;#email.message.Message.get_content_type&quot;&gt;&lt;code&gt;get_content_type()&lt;/code&gt;&lt;/a&gt; will always return a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae6ea3f94860314f622b9e9647fb33e1ce5d253" translate="yes" xml:space="preserve">
          <source>Return the message&amp;rsquo;s envelope header. Defaults to &lt;code&gt;None&lt;/code&gt; if the envelope header was never set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2342ef48ccd191e84a0eee5d9486d20d34a0dd3d" translate="yes" xml:space="preserve">
          <source>Return the message&amp;rsquo;s main content type. This is the &lt;em&gt;maintype&lt;/em&gt; part of the string returned by &lt;a href=&quot;#email.message.EmailMessage.get_content_type&quot;&gt;&lt;code&gt;get_content_type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3563d1cba761f9864de87000d0db85be5c812da" translate="yes" xml:space="preserve">
          <source>Return the message&amp;rsquo;s main content type. This is the &lt;em&gt;maintype&lt;/em&gt; part of the string returned by &lt;a href=&quot;#email.message.Message.get_content_type&quot;&gt;&lt;code&gt;get_content_type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949c257fd93a3ddc1458d28306672fbf535dd9ad" translate="yes" xml:space="preserve">
          <source>Return the message&amp;rsquo;s sub-content type. This is the &lt;em&gt;subtype&lt;/em&gt; part of the string returned by &lt;a href=&quot;#email.message.EmailMessage.get_content_type&quot;&gt;&lt;code&gt;get_content_type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d516dc05c8a895f949e3789d8e91c3e257387b" translate="yes" xml:space="preserve">
          <source>Return the message&amp;rsquo;s sub-content type. This is the &lt;em&gt;subtype&lt;/em&gt; part of the string returned by &lt;a href=&quot;#email.message.Message.get_content_type&quot;&gt;&lt;code&gt;get_content_type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9d98ebe2d285977e60c398d35c1cb5b98ea27b" translate="yes" xml:space="preserve">
          <source>Return the name of start method used for starting processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83548355553c0a27468554dbf437b52073198cc" translate="yes" xml:space="preserve">
          <source>Return the name of the (text or binary) file in which an object was defined. This will fail with a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if the object is a built-in module, class, or function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b737dedad12ff20edf0c37082867afd8434596" translate="yes" xml:space="preserve">
          <source>Return the name of the Python source file in which an object was defined. This will fail with a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if the object is a built-in module, class, or function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1e2955e064a22da8cf52f5ba1f5a87c39b6c25" translate="yes" xml:space="preserve">
          <source>Return the name of the Task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d9ec98878798a2e0dc59efcf4493c3fc2e6a8a" translate="yes" xml:space="preserve">
          <source>Return the name of the current default string encoding used by the Unicode implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4869941e1c2be3b261b40dc66397ea750b056444" translate="yes" xml:space="preserve">
          <source>Return the name of the directory used for temporary files. This defines the default value for the &lt;em&gt;dir&lt;/em&gt; argument to all functions in this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df496cfa291af0c88364d7723ece00fd173e1e7" translate="yes" xml:space="preserve">
          <source>Return the name of the encoding used to convert between Unicode filenames and bytes filenames. For best compatibility, str should be used for filenames in all cases, although representing filenames as bytes is also supported. Functions accepting or returning filenames should support either str or bytes and internally convert to the system&amp;rsquo;s preferred representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680b4cb620414b467236af57ad4245a0f22f45d8" translate="yes" xml:space="preserve">
          <source>Return the name of the error mode used to convert between Unicode filenames and bytes filenames. The encoding name is returned from &lt;a href=&quot;#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;getfilesystemencoding()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3587eaaf17e0fab6368665e69325de203f67a2" translate="yes" xml:space="preserve">
          <source>Return the name of the file currently being read. Before the first line has been read, returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11052f12ee98447430dfc5da9c04d45f12646d1b" translate="yes" xml:space="preserve">
          <source>Return the name of the group owning the file. &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised if the file&amp;rsquo;s gid isn&amp;rsquo;t found in the system database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a54ba7fe09eacf480aa0ba24f914b5f46a07cc3" translate="yes" xml:space="preserve">
          <source>Return the name of the key numbered &lt;em&gt;k&lt;/em&gt; as a bytes object. The name of a key generating printable ASCII character is the key&amp;rsquo;s character. The name of a control-key combination is a two-byte bytes object consisting of a caret (&lt;code&gt;b'^'&lt;/code&gt;) followed by the corresponding printable ASCII character. The name of an alt-key combination (128&amp;ndash;255) is a bytes object consisting of the prefix &lt;code&gt;b'M-'&lt;/code&gt; followed by the name of the corresponding ASCII character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1dd2e3f627c73c5a913f74b45fa3e95c58cdddd" translate="yes" xml:space="preserve">
          <source>Return the name of the module named by the file &lt;em&gt;path&lt;/em&gt;, without including the names of enclosing packages. The file extension is checked against all of the entries in &lt;a href=&quot;importlib#importlib.machinery.all_suffixes&quot;&gt;&lt;code&gt;importlib.machinery.all_suffixes()&lt;/code&gt;&lt;/a&gt;. If it matches, the final path component is returned with the extension removed. Otherwise, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a99838cbd770bd969bc10f58575ba5b32182a3" translate="yes" xml:space="preserve">
          <source>Return the name of the user logged in on the controlling terminal of the process. For most purposes, it is more useful to use &lt;a href=&quot;getpass#getpass.getuser&quot;&gt;&lt;code&gt;getpass.getuser()&lt;/code&gt;&lt;/a&gt; since the latter checks the environment variables &lt;code id=&quot;index-2&quot;&gt;LOGNAME&lt;/code&gt; or &lt;code id=&quot;index-3&quot;&gt;USERNAME&lt;/code&gt; to find out who the user is, and falls back to &lt;code&gt;pwd.getpwuid(os.getuid())[0]&lt;/code&gt; to get the login name of the current real user id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae57646a4e74001a358bd1c38d6f0e794d078031" translate="yes" xml:space="preserve">
          <source>Return the name of the user owning the file. &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised if the file&amp;rsquo;s uid isn&amp;rsquo;t found in the system database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db409e17b62c59c3a8d4e3b3bf8297c5c8065c9" translate="yes" xml:space="preserve">
          <source>Return the nameprepped version of &lt;em&gt;label&lt;/em&gt;. The implementation currently assumes query strings, so &lt;code&gt;AllowUnassigned&lt;/code&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cf8e621cf9426c5c21e1d414546e57da061324" translate="yes" xml:space="preserve">
          <source>Return the names of all registered dialects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059bd0131ed939b83640a5e1100ff2bc55b51431" translate="yes" xml:space="preserve">
          <source>Return the names of the attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfa51fd977958bc22d2c8f03e414d07905ebf31" translate="yes" xml:space="preserve">
          <source>Return the namespace bound to this name. If more than one namespace is bound, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38cb710059fe7a7c6b904b60cd1fe3cf993d9dd8" translate="yes" xml:space="preserve">
          <source>Return the native integral Thread ID of the current thread assigned by the kernel. This is a non-negative integer. Its value may be used to uniquely identify this particular thread system-wide (until the thread terminates, after which the value may be recycled by the OS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f66686d9dd4c954043e309796f464b0ff70e1d8" translate="yes" xml:space="preserve">
          <source>Return the natural (base e) logarithm of the operand. The result is correctly rounded using the &lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt;&lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt;&lt;/a&gt; rounding mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a2d5db366c02b3a5b1c34badbd733f00fcee17" translate="yes" xml:space="preserve">
          <source>Return the natural logarithm of &lt;em&gt;1+x&lt;/em&gt; (base &lt;em&gt;e&lt;/em&gt;). The result is calculated in a way which is accurate for &lt;em&gt;x&lt;/em&gt; near zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55692ad67bfbf6d63ae29c4599c063c357339952" translate="yes" xml:space="preserve">
          <source>Return the natural logarithm of the absolute value of the Gamma function at &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de63d0cc06fe95bbb58f55945ce23f57d6433fd5" translate="yes" xml:space="preserve">
          <source>Return the negation of the argument. This operation is unaffected by the context and is quiet: no flags are changed and no rounding is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c8f2c93ba6916f51f12cd621189376e60c3dc2" translate="yes" xml:space="preserve">
          <source>Return the new absolute position as an opaque number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fdf0370f6f89a5871d4a9baaed0bee7380b2f0" translate="yes" xml:space="preserve">
          <source>Return the new absolute position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8c73fb64093410365045074633087411ea5e49" translate="yes" xml:space="preserve">
          <source>Return the next item from the container. If there are no further items, raise the &lt;a href=&quot;exceptions#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; exception. This method corresponds to the &lt;a href=&quot;https://docs.python.org/3.8/c-api/typeobj.html#c.PyTypeObject.tp_iternext&quot;&gt;&lt;code&gt;tp_iternext&lt;/code&gt;&lt;/a&gt; slot of the type structure for Python objects in the Python/C API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0b9ef0e0be31a0d593ea17519dfe1266c7887c" translate="yes" xml:space="preserve">
          <source>Return the next member of the archive as a &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object, when &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; is opened for reading. Return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if there is no more available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f97341248e5867622d53cb6a8f4edfda63ff7d" translate="yes" xml:space="preserve">
          <source>Return the next random floating point number in the range [0.0, 1.0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8706c5084bffb08d1187917effd83e5b4ed886" translate="yes" xml:space="preserve">
          <source>Return the next row of the reader&amp;rsquo;s iterable object as a list (if the object was returned from &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader()&lt;/code&gt;&lt;/a&gt;) or a dict (if it is a &lt;a href=&quot;#csv.DictReader&quot;&gt;&lt;code&gt;DictReader&lt;/code&gt;&lt;/a&gt; instance), parsed according to the current dialect. Usually you should call this as &lt;code&gt;next(reader)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215d3347c09ad1fd749f38166a045df3ab750a5b" translate="yes" xml:space="preserve">
          <source>Return the normal form &lt;em&gt;form&lt;/em&gt; for the Unicode string &lt;em&gt;unistr&lt;/em&gt;. Valid values for &lt;em&gt;form&lt;/em&gt; are &amp;lsquo;NFC&amp;rsquo;, &amp;lsquo;NFKC&amp;rsquo;, &amp;lsquo;NFD&amp;rsquo;, and &amp;lsquo;NFKD&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01441c191df4c23e640768fa4cefc83cb749fd5c" translate="yes" xml:space="preserve">
          <source>Return the number of &lt;a href=&quot;#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; objects currently alive. The returned count is equal to the length of the list returned by &lt;a href=&quot;#threading.enumerate&quot;&gt;&lt;code&gt;enumerate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6f5d29eebd0075271cab25385c97b336bf3946" translate="yes" xml:space="preserve">
          <source>Return the number of CPUs in the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78469b5737927388ccbaefe82f03b86822b62b6" translate="yes" xml:space="preserve">
          <source>Return the number of CPUs in the system. Returns &lt;code&gt;None&lt;/code&gt; if undetermined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3e44a3a2dd846ee73eeb4e3d2b301a2f5094b1" translate="yes" xml:space="preserve">
          <source>Return the number of attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d9b2b8ce827f6f1d5309ee4379de2a81c5d4af" translate="yes" xml:space="preserve">
          <source>Return the number of audio channels (1 for mono, 2 for stereo).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17427dee9563c179f6ab0771e5d8a3238f3bc8d1" translate="yes" xml:space="preserve">
          <source>Return the number of audio frames in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a44f249d81ed47623477f58ec84c37a040c62be" translate="yes" xml:space="preserve">
          <source>Return the number of bits necessary to represent an integer in binary, excluding the sign and leading zeros:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd49e4bb55f021375b49c0af1902cccceeff129" translate="yes" xml:space="preserve">
          <source>Return the number of bytes actually written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2a1482c3f90a310936cffdf5b1a1e6d78d9030" translate="yes" xml:space="preserve">
          <source>Return the number of bytes currently in the memory buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a8bd771875b718315a7bbe173f30a6b7c54247" translate="yes" xml:space="preserve">
          <source>Return the number of bytes written to the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41940f681c9a48eedfeee459abfdf8eb20f4d537" translate="yes" xml:space="preserve">
          <source>Return the number of elements in set &lt;em&gt;s&lt;/em&gt; (cardinality of &lt;em&gt;s&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f2d1a869783f9aff98d0b47ef91eefb7a1c9c8" translate="yes" xml:space="preserve">
          <source>Return the number of entries in the dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce44861444e2943be068c9d6fba77f48c49879b2" translate="yes" xml:space="preserve">
          <source>Return the number of fields of the record, through &lt;code&gt;MsiRecordGetFieldCount()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3bb533c93952a94f5def23ddb6f94d66d8f249e" translate="yes" xml:space="preserve">
          <source>Return the number of items currently in the history. (This is different from &lt;a href=&quot;#readline.get_history_length&quot;&gt;&lt;code&gt;get_history_length()&lt;/code&gt;&lt;/a&gt;, which returns the maximum number of lines that will be written to a history file.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31afa651f8121daa9d4d95ab3c0cb1edf61fbe8b" translate="yes" xml:space="preserve">
          <source>Return the number of items in the dictionary &lt;em&gt;d&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b166804b2ef9f6ea04128e03bafd03af176d6d" translate="yes" xml:space="preserve">
          <source>Return the number of items in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056f7106b570cd48516c6264b7a1147de3616e15" translate="yes" xml:space="preserve">
          <source>Return the number of items in the underlying mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176c89f58b2148818343c3e679bac2c0273ec360" translate="yes" xml:space="preserve">
          <source>Return the number of memory blocks currently allocated by the interpreter, regardless of their size. This function is mainly useful for tracking and debugging memory leaks. Because of the interpreter&amp;rsquo;s internal caches, the result can vary from call to call; you may have to call &lt;a href=&quot;#sys._clear_type_cache&quot;&gt;&lt;code&gt;_clear_type_cache()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gc#gc.collect&quot;&gt;&lt;code&gt;gc.collect()&lt;/code&gt;&lt;/a&gt; to get more predictable results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079657ad67a5052e60ffa5d2b4c5a7fda53f6ab4" translate="yes" xml:space="preserve">
          <source>Return the number of non-overlapping occurrences of subsequence &lt;em&gt;sub&lt;/em&gt; in the range [&lt;em&gt;start&lt;/em&gt;, &lt;em&gt;end&lt;/em&gt;]. Optional arguments &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; are interpreted as in slice notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487ebe008833d8ebbed44ee98084c8c0778d6901" translate="yes" xml:space="preserve">
          <source>Return the number of non-overlapping occurrences of substring &lt;em&gt;sub&lt;/em&gt; in the range [&lt;em&gt;start&lt;/em&gt;, &lt;em&gt;end&lt;/em&gt;]. Optional arguments &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; are interpreted as in slice notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d255af8f3406223c57c82e96f2640e88b70de538" translate="yes" xml:space="preserve">
          <source>Return the number of objects in the permanent generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6dd7a1ef438904ad771b9f624b81c63b210bfa" translate="yes" xml:space="preserve">
          <source>Return the number of occurrences of &lt;em&gt;b&lt;/em&gt; in &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed10efbd1a7192ccdc65ea566b00ec2637eab1ab" translate="yes" xml:space="preserve">
          <source>Return the number of occurrences of &lt;em&gt;x&lt;/em&gt; in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b36b38d91f43e3056cab51972e5d35ec1aee533" translate="yes" xml:space="preserve">
          <source>Return the number of processes in the system run queue averaged over the last 1, 5, and 15 minutes or raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if the load average was unobtainable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418356a10f1690fb5cb9cca22e7dca813a38d8fe" translate="yes" xml:space="preserve">
          <source>Return the number of summary properties, through &lt;code&gt;MsiSummaryInfoGetPropertyCount()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce34d3e866c15a293ef0e690e36c395d25de410" translate="yes" xml:space="preserve">
          <source>Return the number of tests represented by this test object, including all individual tests and sub-suites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0d96034ca00b813c7dedc700ef2b3d8bdf65d5" translate="yes" xml:space="preserve">
          <source>Return the number of tests represented by this test object. For &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instances, this will always be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2ca59a698cf327acb733659d439ff91c6333dd" translate="yes" xml:space="preserve">
          <source>Return the number of the color-pair set by the attribute value &lt;em&gt;attr&lt;/em&gt;. &lt;a href=&quot;#curses.color_pair&quot;&gt;&lt;code&gt;color_pair()&lt;/code&gt;&lt;/a&gt; is the counterpart to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c050529b67557bf4b43112c492f2b2034e58150" translate="yes" xml:space="preserve">
          <source>Return the number of the first line in the block this table represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a9a6802487ca5ac463d61289108b3faa7b763b" translate="yes" xml:space="preserve">
          <source>Return the number of variables set in the context object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0689d7e6b0032f5bb59b2b6db43fd97fd6211914" translate="yes" xml:space="preserve">
          <source>Return the number of ways to choose &lt;em&gt;k&lt;/em&gt; items from &lt;em&gt;n&lt;/em&gt; items without repetition and with order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d36533f5b016abafbec1bc5083056115cc0f33a" translate="yes" xml:space="preserve">
          <source>Return the number of ways to choose &lt;em&gt;k&lt;/em&gt; items from &lt;em&gt;n&lt;/em&gt; items without repetition and without order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed10474a299c474a4972b54f405c78140a0560d" translate="yes" xml:space="preserve">
          <source>Return the number of weak references and proxies which refer to &lt;em&gt;object&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c14ad7aa394313b745b6a2f4681b0436a9b3a6" translate="yes" xml:space="preserve">
          <source>Return the number of zero crossings in the fragment passed as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec80ef1105b0dbbedc48634e77fe7beaf7cac92" translate="yes" xml:space="preserve">
          <source>Return the object that should be used as the &lt;code&gt;wsgi.errors&lt;/code&gt; stream. The default implementation just returns &lt;code&gt;sys.stderr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70696d223de6f6e8d23ceacdb3269a2a12f050d9" translate="yes" xml:space="preserve">
          <source>Return the original stdout set by &lt;a href=&quot;#test.support.record_original_stdout&quot;&gt;&lt;code&gt;record_original_stdout()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;sys.stdout&lt;/code&gt; if it&amp;rsquo;s not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93af3b3ba6f82aa07fb19d3d85c6fcc0eeca33e2" translate="yes" xml:space="preserve">
          <source>Return the outcome of &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#not&quot;&gt;&lt;code&gt;not&lt;/code&gt;&lt;/a&gt;&lt;em&gt;obj&lt;/em&gt;. (Note that there is no &lt;a href=&quot;#operator.__not__&quot;&gt;&lt;code&gt;__not__()&lt;/code&gt;&lt;/a&gt; method for object instances; only the interpreter core defines this operation. The result is affected by the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__bool__&quot;&gt;&lt;code&gt;__bool__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt; methods.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16363249b0feede2d3735794c3b89d576da4138" translate="yes" xml:space="preserve">
          <source>Return the outcome of the test &lt;code&gt;b in a&lt;/code&gt;. Note the reversed operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de65eb8b25ad9a3590744836dd79da6bca57e1aa" translate="yes" xml:space="preserve">
          <source>Return the output character set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102071055f9010dfe474c16f01af0fea39426382" translate="yes" xml:space="preserve">
          <source>Return the output speed of the terminal in bits per second. On software terminal emulators it will have a fixed high value. Included for historical reasons; in former times, it was used to write output loops for time delays and occasionally to change interfaces depending on the line speed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea3d94cfddb42e4811fd495e0ee10ff94b2fa8c" translate="yes" xml:space="preserve">
          <source>Return the parent&amp;rsquo;s process id. When the parent process has exited, on Unix the id returned is the one of the init process (1), on Windows it is still the same id, which may be already reused by another process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c6aa6863ee3dd7cd74252e75ab613711ea57bd" translate="yes" xml:space="preserve">
          <source>Return the password database entry for the given numeric user ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a9f647978dd60927d0b23afa7c71a70eb70421" translate="yes" xml:space="preserve">
          <source>Return the password database entry for the given user name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f26491ce76d2e763ad3da76f355b259e5af99e" translate="yes" xml:space="preserve">
          <source>Return the path of &lt;code&gt;Makefile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8105c80a8c2a5b90674907742124f8c8e74a436f" translate="yes" xml:space="preserve">
          <source>Return the path of &lt;code&gt;pyconfig.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4971bae4f28d7f310e8e0ce66934c562b473c2" translate="yes" xml:space="preserve">
          <source>Return the path of the user base directory, &lt;a href=&quot;#site.USER_BASE&quot;&gt;&lt;code&gt;USER_BASE&lt;/code&gt;&lt;/a&gt;. If it is not initialized yet, this function will also set it, respecting &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONUSERBASE&quot; id=&quot;index-10&quot;&gt;&lt;code&gt;PYTHONUSERBASE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7526b67149ddd529a2ccb0e44835b063bc9e176a" translate="yes" xml:space="preserve">
          <source>Return the path of the user-specific site-packages directory, &lt;a href=&quot;#site.USER_SITE&quot;&gt;&lt;code&gt;USER_SITE&lt;/code&gt;&lt;/a&gt;. If it is not initialized yet, this function will also set it, respecting &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONNOUSERSITE&quot; id=&quot;index-11&quot;&gt;&lt;code&gt;PYTHONNOUSERSITE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#site.USER_BASE&quot;&gt;&lt;code&gt;USER_BASE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed898540e6f50a8e649f44d09c5f11d43be5526" translate="yes" xml:space="preserve">
          <source>Return the path to an executable which would be run if the given &lt;em&gt;cmd&lt;/em&gt; was called. If no &lt;em&gt;cmd&lt;/em&gt; would be called, return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab44ead872a3a8aa3838593bc3f4a889642f6918" translate="yes" xml:space="preserve">
          <source>Return the path to the &lt;em&gt;resource&lt;/em&gt; as an actual file system path. This function returns a context manager for use in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. The context manager provides a &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d3ebafb782d6e94cc6a8ff8d4b8e3c57d8c288" translate="yes" xml:space="preserve">
          <source>Return the path to the file named &lt;em&gt;filename&lt;/em&gt;. If no match is found &lt;em&gt;filename&lt;/em&gt; is returned. This does not equal a failure since it could be the path to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe803a1ffdbbcbc244acc9143d7deec53a75cf5" translate="yes" xml:space="preserve">
          <source>Return the pathname of the current directory on the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e1fec08a1967cf1d631039fc2633ddc8314321" translate="yes" xml:space="preserve">
          <source>Return the payload of the part as either a string (for &lt;code&gt;text&lt;/code&gt; parts), an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; object (for &lt;code&gt;message/rfc822&lt;/code&gt; parts), or a &lt;code&gt;bytes&lt;/code&gt; object (for all other non-multipart types). Raise a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if called on a &lt;code&gt;multipart&lt;/code&gt;. If the part is a &lt;code&gt;text&lt;/code&gt; part and &lt;em&gt;errors&lt;/em&gt; is specified, use it as the error handler when decoding the payload to unicode. The default error handler is &lt;code&gt;replace&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8339acee6daffaae0a14a4366313a8ecb37bf966" translate="yes" xml:space="preserve">
          <source>Return the phase of &lt;em&gt;x&lt;/em&gt; (also known as the &lt;em&gt;argument&lt;/em&gt; of &lt;em&gt;x&lt;/em&gt;), as a float. &lt;code&gt;phase(x)&lt;/code&gt; is equivalent to &lt;code&gt;math.atan2(x.imag,
x.real)&lt;/code&gt;. The result lies in the range [-&lt;em&gt;&amp;pi;&lt;/em&gt;, &lt;em&gt;&amp;pi;&lt;/em&gt;], and the branch cut for this operation lies along the negative real axis, continuous from above. On systems with support for signed zeros (which includes most systems in current use), this means that the sign of the result is the same as the sign of &lt;code&gt;x.imag&lt;/code&gt;, even when &lt;code&gt;x.imag&lt;/code&gt; is zero:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c49a9340f3b34d78978c3a909c277b656d25453" translate="yes" xml:space="preserve">
          <source>Return the pickled representation of the object &lt;em&gt;obj&lt;/em&gt; as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object, instead of writing it to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011a39bdd5bfee26c431556f7555a9329740a617" translate="yes" xml:space="preserve">
          <source>Return the population standard deviation (the square root of the population variance). See &lt;a href=&quot;#statistics.pvariance&quot;&gt;&lt;code&gt;pvariance()&lt;/code&gt;&lt;/a&gt; for arguments and other details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9526daf5122d9c9fa6fa5533644c080fdc75673" translate="yes" xml:space="preserve">
          <source>Return the population variance of &lt;em&gt;data&lt;/em&gt;, a non-empty sequence or iterable of real-valued numbers. Variance, or second moment about the mean, is a measure of the variability (spread or dispersion) of data. A large variance indicates that the data is spread out; a small variance indicates it is clustered closely around the mean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a628d9429383c38f9dba58cc60cc2de5506553fc" translate="yes" xml:space="preserve">
          <source>Return the portion of the file&amp;rsquo;s mode that can be set by &lt;a href=&quot;os#os.chmod&quot;&gt;&lt;code&gt;os.chmod()&lt;/code&gt;&lt;/a&gt;&amp;mdash;that is, the file&amp;rsquo;s permission bits, plus the sticky bit, set-group-id, and set-user-id bits (on systems that support them).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c70e223a7a4655f5df6dccc7b07a429829b9296" translate="yes" xml:space="preserve">
          <source>Return the portion of the file&amp;rsquo;s mode that describes the file type (used by the &lt;code&gt;S_IS*()&lt;/code&gt; functions above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7260482a03e575a7d671f21cdef094e2134b5f24" translate="yes" xml:space="preserve">
          <source>Return the position of &lt;em&gt;x&lt;/em&gt; in the deque (at or after index &lt;em&gt;start&lt;/em&gt; and before index &lt;em&gt;stop&lt;/em&gt;). Returns the first match or raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d651e03ad7f746261681785b4e4344cf72bb8c8" translate="yes" xml:space="preserve">
          <source>Return the process ID. Before the process is spawned, this will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a243b54d0ee585f5ca14989fdf9b8c8fa5d62e0" translate="yes" xml:space="preserve">
          <source>Return the process group associated with the terminal given by &lt;em&gt;fd&lt;/em&gt; (an open file descriptor as returned by &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffde8478dc4669ef7b51b6ece57a77f67a26089" translate="yes" xml:space="preserve">
          <source>Return the process group id of the process with process id &lt;em&gt;pid&lt;/em&gt;. If &lt;em&gt;pid&lt;/em&gt; is 0, the process group id of the current process is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7934dc49978af11053ddf9d8756ff92adedcd2" translate="yes" xml:space="preserve">
          <source>Return the product of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de9b975bbdfc3622ceaa21cc23ef4c013c5edb6" translate="yes" xml:space="preserve">
          <source>Return the proleptic Gregorian ordinal of the date, where January 1 of year 1 has ordinal 1. For any &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;d&lt;/em&gt;, &lt;code&gt;date.fromordinal(d.toordinal()) == d&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c982d75268f339d7a6eca662e82b150740fc0d89" translate="yes" xml:space="preserve">
          <source>Return the proleptic Gregorian ordinal of the date. The same as &lt;code&gt;self.date().toordinal()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9836ad05e0d8fe66dad6319ce2ef0f461dcb3a" translate="yes" xml:space="preserve">
          <source>Return the protocol that was selected during the TLS handshake. If &lt;a href=&quot;#ssl.SSLContext.set_alpn_protocols&quot;&gt;&lt;code&gt;SSLContext.set_alpn_protocols()&lt;/code&gt;&lt;/a&gt; was not called, if the other party does not support ALPN, if this socket does not support any of the client&amp;rsquo;s proposed protocols, or if the handshake has not happened yet, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec61777dbee715c3d4cd22711aad1d0f1bfa430" translate="yes" xml:space="preserve">
          <source>Return the public identifier for the current event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6492324ff7ff62b542dd6e102ccaffbf919f7aeb" translate="yes" xml:space="preserve">
          <source>Return the qualified name for a &lt;code&gt;(namespace, localname)&lt;/code&gt; pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f1c06f7674ad30a137e078ece18cff17593f0c" translate="yes" xml:space="preserve">
          <source>Return the qualified names of all attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57c8b4b96d897960177bd5824d749f8c52fdfa8" translate="yes" xml:space="preserve">
          <source>Return the re-combined version of the original URL as a string. This may differ from the original URL in that the scheme may be normalized to lower case and empty components may be dropped. Specifically, empty parameters, queries, and fragment identifiers will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8581d3cb573b44b3edb06f59f040351e6303dd5" translate="yes" xml:space="preserve">
          <source>Return the real group id of the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e66fa3674417e24ffbf03c922afbdd39cee8c57" translate="yes" xml:space="preserve">
          <source>Return the received data as a bytes object.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
