<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="83c229f27aa23d537c1551a2c6c8d3479c79cb5a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on Unix.</source>
          <target state="translated">在版本3.6中更改：在Unix上接受类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d8ae33587664f973e64e5c0efdde39c611b3a20" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：接受类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fdb53daf2295762bd00f7a5e887b11c2e3b59860" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a sequence of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like objects&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：接受一系列&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;类似路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c118c87dd9e568c1f9c7800c437ada49bb1495af" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Accepts a sequence of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like objects&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：接受一系列&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;类似路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="904cf11c11da5661ef50b77309c0b6f2c48e0c07" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Add the &lt;em&gt;source&lt;/em&gt; parameter.</source>
          <target state="translated">在版本3.6中更改：添加&lt;em&gt;源&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="661d84cd7b5474b1db80448f4e25cac38fa84565" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters</source>
          <target state="translated">3.6版中的更改：添加了&lt;em&gt;编码&lt;/em&gt;和&lt;em&gt;错误&lt;/em&gt;参数</target>
        </trans-unit>
        <trans-unit id="efc65c840197916f73adfad11daa456d87d65094" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added &lt;em&gt;exitmsg&lt;/em&gt; parameter.</source>
          <target state="translated">在版本3.6中更改：添加了&lt;em&gt;exitmsg&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="244013f2dc41d47d4650de3cd1eab373c0e08606" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added &lt;em&gt;platform_version&lt;/em&gt;</source>
          <target state="translated">在3.6版中进行了更改：添加了&lt;em&gt;platform_version&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="17d6e03f3e31f34b755aa6e6364d1c9e062fc3d9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added &lt;em&gt;policy&lt;/em&gt; keyword-only parameter.</source>
          <target state="translated">在版本3.6中更改：添加了仅&lt;em&gt;策略&lt;/em&gt;关键字参数。</target>
        </trans-unit>
        <trans-unit id="fdb15c310c69c258007868241b4def4b4f1f7041" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added &lt;em&gt;source&lt;/em&gt; parameter.</source>
          <target state="translated">在版本3.6中更改：添加了&lt;em&gt;源&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="8f9fd2f6eaa8d90f6efddaa04d63483e63f7754d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support for &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt; variable annotation syntax.</source>
          <target state="translated">在版本3.6中更改：增加了对&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;变量注释语法的支持。</target>
        </trans-unit>
        <trans-unit id="6e7ccd7bddb3aa8f038e79b3ec1758a1ddab3b0d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support for &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt; variable annotation syntax.</source>
          <target state="translated">在版本3.6中更改：增加了对&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-24&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;变量注释语法的支持。</target>
        </trans-unit>
        <trans-unit id="8eba4298466546394f7d1f2e11c48c951fe0900e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support for the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface. Added support for &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; paths on Windows.</source>
          <target state="translated">在3.6版中进行了更改：添加了对&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;PathLike&lt;/code&gt; &lt;/a&gt;接口的支持。在Windows上增加了对&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;路径的支持。</target>
        </trans-unit>
        <trans-unit id="dc29d77e82e791ac81a913b451e59e0fb9aae46f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support for the &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">在版本3.6中更改：添加了对&lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; &lt;/a&gt;接口的支持。</target>
        </trans-unit>
        <trans-unit id="4a6bd1f4d14bb80b1530162aeca6feab3875d186" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support for the &lt;code&gt;'e'&lt;/code&gt; format.</source>
          <target state="translated">在版本3.6中更改：增加了对 &lt;code&gt;'e'&lt;/code&gt; 格式的支持。</target>
        </trans-unit>
        <trans-unit id="c6caaa3f11f228f0f18896eb0046ce2e95c78349" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support for the &lt;code&gt;REPLACE&lt;/code&gt; statement.</source>
          <target state="translated">在版本3.6中更改：增加了对 &lt;code&gt;REPLACE&lt;/code&gt; 语句的支持。</target>
        </trans-unit>
        <trans-unit id="84bf7046c98badd1e2c10be9726147d97f3d450b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support of type tags with prefixes (e.g. &lt;code&gt;ex:nil&lt;/code&gt;). Added support of unmarshalling additional types used by Apache XML-RPC implementation for numerics: &lt;code&gt;i1&lt;/code&gt;, &lt;code&gt;i2&lt;/code&gt;, &lt;code&gt;i8&lt;/code&gt;, &lt;code&gt;biginteger&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;bigdecimal&lt;/code&gt;. See &lt;a href=&quot;http://ws.apache.org/xmlrpc/types.html&quot;&gt;http://ws.apache.org/xmlrpc/types.html&lt;/a&gt; for a description.</source>
          <target state="translated">在版本3.6中更改：增加了对带有前缀的类型标签的支持（例如 &lt;code&gt;ex:nil&lt;/code&gt; ）。增加了对Apache XML-RPC实现用于数字的编组其他类型的解组支持： &lt;code&gt;i1&lt;/code&gt; ， &lt;code&gt;i2&lt;/code&gt; ， &lt;code&gt;i8&lt;/code&gt; ， &lt;code&gt;biginteger&lt;/code&gt; ， &lt;code&gt;float&lt;/code&gt; 和 &lt;code&gt;bigdecimal&lt;/code&gt; 。有关描述，请参见&lt;a href=&quot;http://ws.apache.org/xmlrpc/types.html&quot;&gt;http://ws.apache.org/xmlrpc/types.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf399ad326082af3d551e911c7f008c770578201" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added support of type tags with prefixes (e.g. &lt;code&gt;ex:nil&lt;/code&gt;). Added support of unmarshalling additional types used by Apache XML-RPC implementation for numerics: &lt;code&gt;i1&lt;/code&gt;, &lt;code&gt;i2&lt;/code&gt;, &lt;code&gt;i8&lt;/code&gt;, &lt;code&gt;biginteger&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;bigdecimal&lt;/code&gt;. See &lt;a href=&quot;https://ws.apache.org/xmlrpc/types.html&quot;&gt;http://ws.apache.org/xmlrpc/types.html&lt;/a&gt; for a description.</source>
          <target state="translated">在版本3.6中更改：增加了对带有前缀的类型标签的支持（例如 &lt;code&gt;ex:nil&lt;/code&gt; ）。增加了对Apache XML-RPC实现用于数字的编组其他类型的解组支持： &lt;code&gt;i1&lt;/code&gt; ， &lt;code&gt;i2&lt;/code&gt; ， &lt;code&gt;i8&lt;/code&gt; ， &lt;code&gt;biginteger&lt;/code&gt; ， &lt;code&gt;float&lt;/code&gt; 和 &lt;code&gt;bigdecimal&lt;/code&gt; 。有关说明，请参见&lt;a href=&quot;https://ws.apache.org/xmlrpc/types.html&quot;&gt;http://ws.apache.org/xmlrpc/types.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1fc5a42350730517b6e861c0a65061fd11439227" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;a href=&quot;#tracemalloc.Filter.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">在版本3.6中更改：添加了&lt;a href=&quot;#tracemalloc.Filter.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="f8786691f814a91efed79119397beb7c2ef256a4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;a href=&quot;#tracemalloc.Trace.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">在版本3.6中更改：添加了&lt;a href=&quot;#tracemalloc.Trace.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="02bed7ce0af4a645cde20abc1f5a7f63c7a59bdf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;code&gt;'_'&lt;/code&gt; option (see also &lt;a href=&quot;https://www.python.org/dev/peps/pep-0515&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 515&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">在版本3.6中更改：添加了 &lt;code&gt;'_'&lt;/code&gt; 选项（另请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0515&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 515&lt;/strong&gt;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3faae8268eb15d80704094090cf21ed299b86137" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;code&gt;prompt&lt;/code&gt; parameter</source>
          <target state="translated">在版本3.6中更改：添加了 &lt;code&gt;prompt&lt;/code&gt; 参数</target>
        </trans-unit>
        <trans-unit id="ec30ff36ff4af3da1db5067cd972ca984d0e7dd2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;em&gt;module&lt;/em&gt; parameter.</source>
          <target state="translated">在版本3.6中更改：添加了&lt;em&gt;模块&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="c1bf215ec632bfd1f400d30c9d6b6d86dc6b6796" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;em&gt;newline&lt;/em&gt; parameter.</source>
          <target state="translated">在版本3.6中更改：添加了&lt;em&gt;newline&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="83c6caf82f7fa5ecc8f20c95470d7a1fa8ac2567" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the &lt;em&gt;tzinfo&lt;/em&gt; argument.</source>
          <target state="translated">在版本3.6中更改：添加了&lt;em&gt;tzinfo&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="b75ee1e6676222f86192ccfe7f93d0e540e584de" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added the optional &lt;em&gt;errors&lt;/em&gt; parameter.</source>
          <target state="translated">在版本3.6中进行了更改：添加了可选的&lt;em&gt;errors&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="0bc64c20d32fa8a2e6ddb595d9c482ba548d43d2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Added two keyword only argument to the reset_mock function.</source>
          <target state="translated">在3.6版本中进行了修改。在reset_mock函数中增加了两个只有关键字的参数。</target>
        </trans-unit>
        <trans-unit id="6834fb7db8ddccba1d71de5cddf2e437b98ce856" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: All optional parameters are now &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;keyword-only&lt;/a&gt;.</source>
          <target state="translated">在3.6版中进行了更改：现在所有可选参数均为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;纯关键字&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="504406f1348153fd7ead77d25cb7d8122731fb2b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: All optional parameters are now &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#keyword-only-parameter&quot;&gt;keyword-only&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中进行了更改：现在所有可选参数都是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#keyword-only-parameter&quot;&gt;纯关键字的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aeef22f2414132bdf82d6bb131f49bbb1c094415" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: All parameters are now &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;keyword-only&lt;/a&gt;.</source>
          <target state="translated">在3.6版中进行了更改：现在所有参数都&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;只能用作关键字&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52aa096bb2dd1cbdce13dc80a4f8ef11f671b113" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: All parameters are now &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#keyword-only-parameter&quot;&gt;keyword-only&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中进行了更改：现在所有参数都&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#keyword-only-parameter&quot;&gt;仅&lt;/a&gt;是关键字。</target>
        </trans-unit>
        <trans-unit id="bc42e7c39d1020fb7d8042da00c5c87a8ff9f5b5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: As well as string values, &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; objects are also accepted for the &lt;em&gt;filename&lt;/em&gt; argument.</source>
          <target state="translated">在版本3.6中更改：除字符串值外，&lt;em&gt;文件名&lt;/em&gt;参数也接受&lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;对象。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c9c99b92f7ee6f238e98e472e1d0db054f92cf9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Before Python 3.6, &lt;a href=&quot;#object.__getnewargs__&quot;&gt;&lt;code&gt;__getnewargs__()&lt;/code&gt;&lt;/a&gt; was called instead of &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt; in protocols 2 and 3.</source>
          <target state="translated">改变在3.6版本：Python的3.6之前，&lt;a href=&quot;#object.__getnewargs__&quot;&gt; &lt;code&gt;__getnewargs__()&lt;/code&gt; &lt;/a&gt;被调用，而不是&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;在协议2和3。</target>
        </trans-unit>
        <trans-unit id="c3578fbb63098457792e086a73bda347f062eee9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Began calling &lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt;&lt;code&gt;create_module()&lt;/code&gt;&lt;/a&gt;, removing the compatibility warning for &lt;a href=&quot;#importlib.machinery.BuiltinImporter&quot;&gt;&lt;code&gt;importlib.machinery.BuiltinImporter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#importlib.machinery.ExtensionFileLoader&quot;&gt;&lt;code&gt;importlib.machinery.ExtensionFileLoader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：开始调用&lt;a href=&quot;#importlib.abc.Loader.create_module&quot;&gt; &lt;code&gt;create_module()&lt;/code&gt; &lt;/a&gt;，删除了&lt;a href=&quot;#importlib.machinery.BuiltinImporter&quot;&gt; &lt;code&gt;importlib.machinery.BuiltinImporter&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#importlib.machinery.ExtensionFileLoader&quot;&gt; &lt;code&gt;importlib.machinery.ExtensionFileLoader&lt;/code&gt; &lt;/a&gt;的兼容性警告。</target>
        </trans-unit>
        <trans-unit id="81f5fb3277eda0f09e3b1ab4e8b8b4be6ce2a6b7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt;&lt;code&gt;extract()&lt;/code&gt;&lt;/a&gt; on a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">在版本3.6中更改：在封闭的ZipFile上调用&lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt; &lt;code&gt;extract()&lt;/code&gt; &lt;/a&gt;将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。以前，引发了&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="abd5065335da08bc768e67f828147c1a91517f51" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.extractall&quot;&gt;&lt;code&gt;extractall()&lt;/code&gt;&lt;/a&gt; on a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">在版本3.6中更改：在关闭的ZipFile上调用&lt;a href=&quot;#zipfile.ZipFile.extractall&quot;&gt; &lt;code&gt;extractall()&lt;/code&gt; &lt;/a&gt;将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。以前，引发了&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb4d8a2d87f6c41f5ec683aebb91b2cdee0c5951" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; on a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">在版本3.6中更改：在关闭的ZipFile上调用&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。以前，引发了&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69371a6a0b2ea4ceef3672fe2e6444ee85a40b7a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; on a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">在版本3.6中更改：在封闭的ZipFile上调用&lt;a href=&quot;#zipfile.ZipFile.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。以前，引发了&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09e606d922018199d76c9f4841e2ae6b3d1995de" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.testzip&quot;&gt;&lt;code&gt;testzip()&lt;/code&gt;&lt;/a&gt; on a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">在版本3.6中更改：在关闭的ZipFile上调用&lt;a href=&quot;#zipfile.ZipFile.testzip&quot;&gt; &lt;code&gt;testzip()&lt;/code&gt; &lt;/a&gt;将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。以前，引发了&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19507c4a6dd5de17875125eb209ad9e5c5203886" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; on a ZipFile created with mode &lt;code&gt;'r'&lt;/code&gt; or a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">在版本3.6中进行了更改：在以模式 &lt;code&gt;'r'&lt;/code&gt; 创建的ZipFile 或关闭的ZipFile 上调用&lt;a href=&quot;#zipfile.ZipFile.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。以前，引发了&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f893c42a7560cf57f345084d2888b7b323144ffd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Calling &lt;a href=&quot;#zipfile.ZipFile.writestr&quot;&gt;&lt;code&gt;writestr()&lt;/code&gt;&lt;/a&gt; on a ZipFile created with mode &lt;code&gt;'r'&lt;/code&gt; or a closed ZipFile will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. Previously, a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">在版本3.6中进行了更改：在以模式 &lt;code&gt;'r'&lt;/code&gt; 创建的ZipFile 或封闭的ZipFile 上调用&lt;a href=&quot;#zipfile.ZipFile.writestr&quot;&gt; &lt;code&gt;writestr()&lt;/code&gt; &lt;/a&gt;会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。以前，引发了&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e104b55e12a98e869f50d2a78cf2b771895f3eab" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: ChaCha20/Poly1305 was added to the default cipher string.</source>
          <target state="translated">在3.6版本中进行了修改。ChaCha20/Poly1305被添加到默认密码字符串中。</target>
        </trans-unit>
        <trans-unit id="1cdd0c248c5c1d59c4ceba709d6e7ff9be4ae28a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Context manager support added</source>
          <target state="translated">在3.6版本中有所改变。增加了对上下文管理器的支持</target>
        </trans-unit>
        <trans-unit id="7ea05556a2694d635edac127c2dc2f4a7bae00c5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Do not raise an error if the &lt;code&gt;Content-Length&lt;/code&gt; has not been provided and &lt;em&gt;data&lt;/em&gt; is neither &lt;code&gt;None&lt;/code&gt; nor a bytes object. Fall back to use chunked transfer encoding instead.</source>
          <target state="translated">在版本3.6中进行了更改：如果未提供 &lt;code&gt;Content-Length&lt;/code&gt; ，并且&lt;em&gt;数据&lt;/em&gt;既不是 &lt;code&gt;None&lt;/code&gt; 也不是bytes对象，则不要引发错误。退而使用分块传输编码。</target>
        </trans-unit>
        <trans-unit id="791ba32c17141614f86526c6e800684f41b2c687" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Docs reorganized and rewritten to promote the new &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;email.policy#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">在版本3.6中进行了更改：对文档进行了重组和重写，以推广新的&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;email.policy#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; &lt;/a&gt; API。</target>
        </trans-unit>
        <trans-unit id="44910a602937d4a457f8f426faa2c7eff65fedab" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Flag constants are now instances of &lt;code&gt;RegexFlag&lt;/code&gt;, which is a subclass of &lt;a href=&quot;enum#enum.IntFlag&quot;&gt;&lt;code&gt;enum.IntFlag&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：标志常量现在是 &lt;code&gt;RegexFlag&lt;/code&gt; 的实例，它是&lt;a href=&quot;enum#enum.IntFlag&quot;&gt; &lt;code&gt;enum.IntFlag&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="5ff42ee71222be0bc243e3c53a39a36f3d0c5a7e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Grouping digits with underscores as in code literals is allowed.</source>
          <target state="translated">在3.6版本中有所改变。允许在代码中用下划线对数字进行分组。</target>
        </trans-unit>
        <trans-unit id="79a14d89e13bf8017c2b2f0bfbf92b7bd976edcb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: If an error occurs in the cleanup after the Python interpreter has caught &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; (such as an error flushing buffered data in the standard streams), the exit status is changed to 120.</source>
          <target state="translated">在版本3.6中进行了更改：如果Python解释器捕获&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt;后在清除过程中发生错误（例如错误清除标准流中的缓冲数据），则退出状态将更改为120。</target>
        </trans-unit>
        <trans-unit id="bf1631221452824bfa3bd9dbf7c0b37b41d48114" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: If neither Content-Length nor Transfer-Encoding are set in &lt;em&gt;headers&lt;/em&gt;, file and iterable &lt;em&gt;body&lt;/em&gt; objects are now chunk-encoded. The &lt;em&gt;encode_chunked&lt;/em&gt; argument was added. No attempt is made to determine the Content-Length for file objects.</source>
          <target state="translated">改变在3.6版本：如果没有内容的长度，也没有传输编码的设置&lt;em&gt;标题&lt;/em&gt;，文件和迭代&lt;em&gt;体&lt;/em&gt;对象是现在块编码。该&lt;em&gt;encode_chunked&lt;/em&gt;加入争论。没有尝试确定文件对象的Content-Length。</target>
        </trans-unit>
        <trans-unit id="605dda57e256146c97bfd5b9c9395e8f2a8b0ea0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Keyword arguments are packed in a tuple instead of a dictionary, &lt;em&gt;argc&lt;/em&gt; indicates the total number of arguments.</source>
          <target state="translated">在版本3.6中进行了更改：关键字参数以元组而不是字典的形式打包，&lt;em&gt;argc&lt;/em&gt;表示参数的总数。</target>
        </trans-unit>
        <trans-unit id="3cf3c210e1299a90c9deabf241109b52370e3490" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Line numbers can be decreasing. Before, they were always increasing.</source>
          <target state="translated">在3.6版本中有所改变。行数可以减少。以前,行号总是增加的。</target>
        </trans-unit>
        <trans-unit id="787edc2737bb2c9ea11447c3109e6c133e7f14aa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Long sequences of repeated frames are now abbreviated.</source>
          <target state="translated">在3.6版中有所改变。长序列的重复帧现在被缩写了。</target>
        </trans-unit>
        <trans-unit id="616cd601b2258b198c57c61c05877687b4afdb02" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Name generated from &lt;code&gt;offset=timedelta(0)&lt;/code&gt; is now plain &lt;code&gt;&amp;lsquo;UTC&amp;rsquo;&lt;/code&gt;, not &lt;code&gt;'UTC+00:00'&lt;/code&gt;.</source>
          <target state="translated">在版本3.6中进行了更改：从 &lt;code&gt;offset=timedelta(0)&lt;/code&gt; 生成的名称现在是普通的 &lt;code&gt;&amp;lsquo;UTC&amp;rsquo;&lt;/code&gt; ，而不是 &lt;code&gt;'UTC+00:00'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2aef86d6a3e42074fc4b0901a01117aa5ba82d5a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Now every instruction has an argument, but opcodes &lt;code&gt;&amp;lt; HAVE_ARGUMENT&lt;/code&gt; ignore it. Before, only opcodes &lt;code&gt;&amp;gt;= HAVE_ARGUMENT&lt;/code&gt; had an argument.</source>
          <target state="translated">在版本3.6中更改：现在每个指令都有一个参数，但是操作码 &lt;code&gt;&amp;lt; HAVE_ARGUMENT&lt;/code&gt; 忽略它。以前，只有 &lt;code&gt;&amp;gt;= HAVE_ARGUMENT&lt;/code&gt; 操作码才有参数。</target>
        </trans-unit>
        <trans-unit id="4cf1956c52a1b7328be4f368a0141a6fcea495cd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Now only called for exceptions derived from the &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">在版本3.6中更改：现在仅调用从&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;类派生的异常。</target>
        </trans-unit>
        <trans-unit id="5e275ee5ae112033e12a822dbbc574cd6e91f8aa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: On Linux, the value of the environment variable &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; is used when searching for libraries, if a library cannot be found by any other means.</source>
          <target state="translated">在版本3.6中更改：在Linux上，如果无法通过其他任何方式找到库，则在搜索库时将使用环境变量 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="f782815a0d997bf3eb1fea6613cde1e1c5c6ed1a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: On Windows, a handler for Windows exception is also installed.</source>
          <target state="translated">在3.6版本中有所改变。在Windows上,也安装了Windows异常处理程序。</target>
        </trans-unit>
        <trans-unit id="336c3cbf1caca7ddfe79d9d6314943d753878dcb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: OpenSSL 0.9.8, 1.0.0 and 1.0.1 are deprecated and no longer supported. In the future the ssl module will require at least OpenSSL 1.0.2 or 1.1.0.</source>
          <target state="translated">在3.6版本中有所改变。OpenSSL 0.9.8、1.0.0和1.0.1已被废弃,不再支持。今后,ssl模块至少需要OpenSSL 1.0.2或1.1.0。</target>
        </trans-unit>
        <trans-unit id="9f3065fe2486220fa9301dca7bebf289068b88fb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Optimization opportunity recognized for us-ascii.</source>
          <target state="translated">在3.6版本中有所改变。认识到us-ascii的优化机会。</target>
        </trans-unit>
        <trans-unit id="d5927d1215f042d4afd170e200cf8e87bc07a75c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Out-of-range port numbers now raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;, instead of returning &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中进行了更改：超出范围的端口号现在引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;，而不是返回&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34e5917bef113a7b0c5c8d3739dc8e343db882bc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Popen destructor now emits a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; warning if the child process is still running.</source>
          <target state="translated">在版本3.6中进行了更改：如果子进程仍在运行，则Popen析构函数现在会发出&lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt;警告。</target>
        </trans-unit>
        <trans-unit id="399985730a2b211003ea4bc835c87b09523b5270" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Previously, a plain &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised for unrecognized compression values.</source>
          <target state="translated">在版本3.6中进行了更改：以前，针对无法识别的压缩值引发了普通的&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="89415e91e357e38c8de371d5cfe4b140d1bd6da1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Print an exit message when exiting.</source>
          <target state="translated">在3.6版本中有所改变。退出时打印退出信息。</target>
        </trans-unit>
        <trans-unit id="eaf2818ab7215710cf1a81af9b1443b3fd029e49" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Raises a &lt;a href=&quot;exceptions#PermissionError&quot;&gt;&lt;code&gt;PermissionError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the user doesn&amp;rsquo;t have privileges.</source>
          <target state="translated">在版本3.6中进行了更改：如果用户没有特权，则引发&lt;a href=&quot;exceptions#PermissionError&quot;&gt; &lt;code&gt;PermissionError&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f684816076b069f0499c8eda34d37bf22e71ce48" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Removed support of &lt;code&gt;mode='U'&lt;/code&gt;. Use &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; for reading compressed text files in &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt; mode.</source>
          <target state="translated">在版本3.6中更改：删除了对 &lt;code&gt;mode='U'&lt;/code&gt; 。使用&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; &lt;/a&gt;在&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;通用换行&lt;/a&gt;模式下读取压缩的文本文件。</target>
        </trans-unit>
        <trans-unit id="a83312cabec4084e35407bb360f1e4744280fbb6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Removed support of &lt;code&gt;mode='U'&lt;/code&gt;. Use &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; for reading compressed text files in &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt; mode.</source>
          <target state="translated">在版本3.6中更改：删除了对 &lt;code&gt;mode='U'&lt;/code&gt; 。使用&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; &lt;/a&gt;以&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;通用换行&lt;/a&gt;模式读取压缩的文本文件。</target>
        </trans-unit>
        <trans-unit id="56a3090aa74e110e7bdeb0dff76274a68816b4da" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Returned rows are now of type &lt;code&gt;OrderedDict&lt;/code&gt;.</source>
          <target state="translated">在版本3.6中更改：现在返回的行的类型为 &lt;code&gt;OrderedDict&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="366b569e5d5e8488c96eabe60c2a1c8ebdfeb127" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Shared objects are capable of being nested. For example, a shared container object such as a shared list can contain other shared objects which will all be managed and synchronized by the &lt;a href=&quot;#multiprocessing.managers.SyncManager&quot;&gt;&lt;code&gt;SyncManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：可以嵌套共享对象。例如，诸如共享列表之类的共享容器对象可以包含其他共享对象，所有这些共享对象都将由&lt;a href=&quot;#multiprocessing.managers.SyncManager&quot;&gt; &lt;code&gt;SyncManager&lt;/code&gt; &lt;/a&gt;管理和同步。</target>
        </trans-unit>
        <trans-unit id="607cbe3b77c10b554f6576e89d00b1ae5fd69f9c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Subclasses of &lt;a href=&quot;#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; which don&amp;rsquo;t override &lt;code&gt;type.__new__&lt;/code&gt; may no longer use the one-argument form to get the type of an object.</source>
          <target state="translated">在版本3.6中进行了更改：&lt;a href=&quot;#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;子类不会覆盖 &lt;code&gt;type.__new__&lt;/code&gt; 可能不再使用单参数形式来获取对象的类型。</target>
        </trans-unit>
        <trans-unit id="55c43f1950d8c9f56bd735b84d226d8fca96012a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Support added to accept objects implementing the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">在版本3.6中更改：增加了支持以接受实现&lt;a href=&quot;#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; &lt;/a&gt;接口的对象。</target>
        </trans-unit>
        <trans-unit id="041d5e65453b6f7fc2f685c14dac62a1a8ce7566" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Support for the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol was added. Exiting the context manager is equivalent to calling &lt;a href=&quot;#socketserver.BaseServer.server_close&quot;&gt;&lt;code&gt;server_close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：添加了对&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;上下文管理器&lt;/a&gt;协议的支持。退出上下文管理器等效于调用&lt;a href=&quot;#socketserver.BaseServer.server_close&quot;&gt; &lt;code&gt;server_close()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="182832643b86ca164bf2906c14d7dac68fe0d52e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Support for the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol was added. Exiting the context manager is equivalent to calling &lt;a href=&quot;#socketserver.BaseServer.server_close&quot;&gt;&lt;code&gt;server_close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在3.6版中进行了更改：添加了对&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;上下文管理器&lt;/a&gt;协议的支持。退出上下文管理器等效于调用&lt;a href=&quot;#socketserver.BaseServer.server_close&quot;&gt; &lt;code&gt;server_close()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7be5990d30aaac4624a70d5afc43be32948148a5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Supports a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：支持类&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95e5eb145a462890ddd45a2d22448784736d76c9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Supports a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：支持类&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41a3a7aec9247cb8718deed5900f666c68eb6aef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt;&lt;code&gt;astimezone()&lt;/code&gt;&lt;/a&gt; method can now be called on naive instances that are presumed to represent system local time.</source>
          <target state="translated">在版本3.6中进行了更改：现在可以在假定表示系统本地时间的朴素实例上调用&lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt; &lt;code&gt;astimezone()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="bd00b2b9bda2f0a43f815de9c99730b53cd8dcce" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;a href=&quot;#datetime.datetime.timestamp&quot;&gt;&lt;code&gt;timestamp()&lt;/code&gt;&lt;/a&gt; method uses the &lt;a href=&quot;#datetime.datetime.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; attribute to disambiguate the times during a repeated interval.</source>
          <target state="translated">在版本3.6中更改：&lt;a href=&quot;#datetime.datetime.timestamp&quot;&gt; &lt;code&gt;timestamp()&lt;/code&gt; &lt;/a&gt;方法使用&lt;a href=&quot;#datetime.datetime.fold&quot;&gt; &lt;code&gt;fold&lt;/code&gt; &lt;/a&gt;属性消除重复间隔中的时间歧义。</target>
        </trans-unit>
        <trans-unit id="c14fc28d090a7a4a6192eeb3ffa7f392ba03e464" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; attributes &lt;code&gt;tm_gmtoff&lt;/code&gt; and &lt;code&gt;tm_zone&lt;/code&gt; are now available on all platforms.</source>
          <target state="translated">在3.6版中进行了更改：&lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt;属性 &lt;code&gt;tm_gmtoff&lt;/code&gt; 和 &lt;code&gt;tm_zone&lt;/code&gt; 现在在所有平台上都可用。</target>
        </trans-unit>
        <trans-unit id="6c1601b22a09f56bcdfb7dbfe073770b50277f66" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;dir&lt;/em&gt; parameter now accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：&lt;em&gt;dir&lt;/em&gt;参数现在接受类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96de63c57eb9a8e4970bb8c6f6be6eca3e9c1215" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;dir&lt;/em&gt; parameter now accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：&lt;em&gt;dir&lt;/em&gt;参数现在接受类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff1b08458aab5c1aa8d82aa99fba2786e8120c91" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;flushOnClose&lt;/em&gt; parameter was added.</source>
          <target state="translated">在版本3.6中更改：添加了&lt;em&gt;flushOnClose&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="e2a08ca44663fce0fdc042bbe46970b340789437" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;name&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：&lt;em&gt;name&lt;/em&gt;参数接受类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5541a78d58382dec32933b5eba0558685b7fb3e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;name&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：&lt;em&gt;name&lt;/em&gt;参数接受类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0289b70d7edd96587dbe4193f745728f2d10c869" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;path&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：&lt;em&gt;path&lt;/em&gt;参数接受类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3cfe49ab3da7d1797d90f7ac4ff9f9d15e2cabc0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;path&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：&lt;em&gt;path&lt;/em&gt;参数接受类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c50fa586d92b952d86552ea1abedd0f3fa2666d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;punctuation_chars&lt;/em&gt; parameter was added.</source>
          <target state="translated">在版本3.6中更改：添加了&lt;em&gt;punctuation_chars&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="442a64ddd0d72e61f33e08b53ca0af9d19232452" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;readrc&lt;/em&gt; argument.</source>
          <target state="translated">在版本3.6中更改：&lt;em&gt;readrc&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="ab4ac59316713f9f5be737fedb24a6a2e44c7565" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;verbose&lt;/em&gt; and &lt;em&gt;rename&lt;/em&gt; parameters became &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;keyword-only arguments&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：&lt;em&gt;详细&lt;/em&gt;和&lt;em&gt;重命名&lt;/em&gt;参数变为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;仅关键字的参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="923dd44d8cfc3f481a2150715cf47c10c0955d0e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The &lt;em&gt;verbose&lt;/em&gt; and &lt;em&gt;rename&lt;/em&gt; parameters became &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#keyword-only-parameter&quot;&gt;keyword-only arguments&lt;/a&gt;.</source>
          <target state="translated">在版本3.6中更改：&lt;em&gt;详细&lt;/em&gt;和&lt;em&gt;重命名&lt;/em&gt;参数变为&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#keyword-only-parameter&quot;&gt;仅关键字的参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2c2bcb1c869e2babe86635912b1056192cea694" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The context is created with secure default values. The options &lt;a href=&quot;#ssl.OP_NO_COMPRESSION&quot;&gt;&lt;code&gt;OP_NO_COMPRESSION&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.OP_CIPHER_SERVER_PREFERENCE&quot;&gt;&lt;code&gt;OP_CIPHER_SERVER_PREFERENCE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.OP_NO_SSLv2&quot;&gt;&lt;code&gt;OP_NO_SSLv2&lt;/code&gt;&lt;/a&gt; (except for &lt;a href=&quot;#ssl.PROTOCOL_SSLv2&quot;&gt;&lt;code&gt;PROTOCOL_SSLv2&lt;/code&gt;&lt;/a&gt;), and &lt;a href=&quot;#ssl.OP_NO_SSLv3&quot;&gt;&lt;code&gt;OP_NO_SSLv3&lt;/code&gt;&lt;/a&gt; (except for &lt;a href=&quot;#ssl.PROTOCOL_SSLv3&quot;&gt;&lt;code&gt;PROTOCOL_SSLv3&lt;/code&gt;&lt;/a&gt;) are set by default. The initial cipher suite list contains only &lt;code&gt;HIGH&lt;/code&gt; ciphers, no &lt;code&gt;NULL&lt;/code&gt; ciphers and no &lt;code&gt;MD5&lt;/code&gt; ciphers (except for &lt;a href=&quot;#ssl.PROTOCOL_SSLv2&quot;&gt;&lt;code&gt;PROTOCOL_SSLv2&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在版本3.6中更改：使用安全的默认值创建上下文。&lt;a href=&quot;#ssl.OP_NO_COMPRESSION&quot;&gt; &lt;code&gt;OP_NO_COMPRESSION&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#ssl.OP_CIPHER_SERVER_PREFERENCE&quot;&gt; &lt;code&gt;OP_CIPHER_SERVER_PREFERENCE&lt;/code&gt; &lt;/a&gt;选项OP_NO_COMPRESSION，OP_CIPHER_SERVER_PREFERENCE，&lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ssl.OP_NO_SSLv2&quot;&gt; &lt;code&gt;OP_NO_SSLv2&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;#ssl.PROTOCOL_SSLv2&quot;&gt; &lt;code&gt;PROTOCOL_SSLv2&lt;/code&gt; &lt;/a&gt;除外）和&lt;a href=&quot;#ssl.OP_NO_SSLv3&quot;&gt; &lt;code&gt;OP_NO_SSLv3&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;#ssl.PROTOCOL_SSLv3&quot;&gt; &lt;code&gt;PROTOCOL_SSLv3&lt;/code&gt; &lt;/a&gt;除外）。初始密码套件列表仅包含 &lt;code&gt;HIGH&lt;/code&gt; 密码，没有 &lt;code&gt;NULL&lt;/code&gt; 密码，也没有 &lt;code&gt;MD5&lt;/code&gt; 密码（&lt;a href=&quot;#ssl.PROTOCOL_SSLv2&quot;&gt; &lt;code&gt;PROTOCOL_SSLv2&lt;/code&gt; &lt;/a&gt;除外）。</target>
        </trans-unit>
        <trans-unit id="0feb236c2e9e6b33da5e1a29cf20065da02c73f6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The default behavior of the &lt;em&gt;mangle_from_&lt;/em&gt; and &lt;em&gt;maxheaderlen&lt;/em&gt; parameters is to follow the policy.</source>
          <target state="translated">在版本3.6中更改：&lt;em&gt;mangle_from_&lt;/em&gt;和&lt;em&gt;maxheaderlen&lt;/em&gt;参数的默认行为是遵循该策略。</target>
        </trans-unit>
        <trans-unit id="8f24009c9fcdbdcfe41d3cafda444055a778669d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The default value for the &lt;code&gt;namespace&lt;/code&gt; element of the returned tuple has changed. Now an insertion-order-preserving mapping is used when the metaclass does not have a &lt;code&gt;__prepare__&lt;/code&gt; method.</source>
          <target state="translated">在版本3.6中更改：返回的元组的 &lt;code&gt;namespace&lt;/code&gt; 元素的默认值已更改。现在，当元类没有 &lt;code&gt;__prepare__&lt;/code&gt; 方法时，将使用保留插入顺序的映射。</target>
        </trans-unit>
        <trans-unit id="529b3087ab0d08a79c349e88fb83dc24d24ecdc8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The fold value is copied to the returned &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">在版本3.6中更改：折叠值复制到返回的&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="77cad653f9bf3f387c9beee9e5bb0feef3c21949" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The number of bytes written is now returned.</source>
          <target state="translated">在3.6版本中有所改变。现在返回写入的字节数。</target>
        </trans-unit>
        <trans-unit id="c4391597e5966cafdab0c1a99f49ad21366688a9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The position of the callable is determined by adding 2 to the opcode argument instead of encoding it in the second byte of the argument.</source>
          <target state="translated">在3.6版本中有所改变。可调用的位置是由opcode参数加2来决定的,而不是在参数的第二个字节中编码。</target>
        </trans-unit>
        <trans-unit id="bf716a197b06cfe0d2e3d4d1a64a3dd46c042200" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: The socket option &lt;code&gt;TCP_NODELAY&lt;/code&gt; is set by default for all TCP connections.</source>
          <target state="translated">在版本3.6中更改：默认情况下，所有TCP连接都设置了套接字选项 &lt;code&gt;TCP_NODELAY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b7160a605c2fd0edcd54d7fa90f36fc39c3024a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: These parameter names are exposed by this module as names like &lt;code&gt;implicit0&lt;/code&gt;.</source>
          <target state="translated">在版本3.6中更改：这些参数名称由模块以 &lt;code&gt;implicit0&lt;/code&gt; 类的名称公开。</target>
        </trans-unit>
        <trans-unit id="4fc702e0737c8c03b1b89845a0ed850914569676" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: This is an &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; stream.</source>
          <target state="translated">在版本3.6中更改：这是&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;流。</target>
        </trans-unit>
        <trans-unit id="6ba2f7ac2d1b1ed5cc1618db7b2eb701becad041" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: This method was previously documented as deprecated in favour of &lt;a href=&quot;#inspect.signature&quot;&gt;&lt;code&gt;signature()&lt;/code&gt;&lt;/a&gt; in Python 3.5, but that decision has been reversed in order to restore a clearly supported standard interface for single-source Python 2/3 code migrating away from the legacy &lt;a href=&quot;#inspect.getargspec&quot;&gt;&lt;code&gt;getargspec()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">在版本3.6中进行了更改：以前在Python 3.5中记录了此方法的不推荐使用，目的是使用&lt;a href=&quot;#inspect.signature&quot;&gt; &lt;code&gt;signature()&lt;/code&gt; &lt;/a&gt;，但是为了恢复明显支持的标准源（从源代码迁移到源代码的Python 2/3代码），撤消了此决定。旧版&lt;a href=&quot;#inspect.getargspec&quot;&gt; &lt;code&gt;getargspec()&lt;/code&gt; &lt;/a&gt; API。</target>
        </trans-unit>
        <trans-unit id="334608ea2b0b18725fe8d003f8cb5a065167f2b8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: This opcode is used only for calls with positional arguments.</source>
          <target state="translated">在3.6版本中有所改变。这个操作码只用于有位置参数的调用。</target>
        </trans-unit>
        <trans-unit id="08f9fb025dd725a9ead7f1219f9916ce646c6348" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Underscores are allowed for grouping, as with integral and floating-point literals in code.</source>
          <target state="translated">在3.6版本中有所改变。允许用下划线进行分组,就像代码中的积分和浮点字符一样。</target>
        </trans-unit>
        <trans-unit id="2ca6b6a48fb6ab01a2db9b277f3caeb3e87c242e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Unknown escapes consisting of &lt;code&gt;'\'&lt;/code&gt; and an ASCII letter now are errors.</source>
          <target state="translated">在版本3.6中更改：由 &lt;code&gt;'\'&lt;/code&gt; 和ASCII字母组成的未知转义符现在是错误。</target>
        </trans-unit>
        <trans-unit id="c1a466a2d5a4ef50c6c44e746edd476ef8bcf3cf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Unknown escapes in &lt;em&gt;pattern&lt;/em&gt; consisting of &lt;code&gt;'\'&lt;/code&gt; and an ASCII letter now are errors.</source>
          <target state="translated">在版本3.6中更改：现在，由 &lt;code&gt;'\'&lt;/code&gt; 和ASCII字母组成的&lt;em&gt;模式中的&lt;/em&gt;未知转义符是错误。</target>
        </trans-unit>
        <trans-unit id="04c4b5ae4d19b860fe472429206d8259f62bb0f6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Use 2 bytes for each instruction. Previously the number of bytes varied by instruction.</source>
          <target state="translated">在3.6版本中有所改变。每条指令使用2个字节。此前,字节数因指令而异。</target>
        </trans-unit>
        <trans-unit id="7b6b813fb7d1e23630581e7642cc4cdbb88b7b52" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Windows is no longer guaranteed to return &lt;code&gt;'mbcs'&lt;/code&gt;. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;#sys._enablelegacywindowsfsencoding&quot;&gt;&lt;code&gt;_enablelegacywindowsfsencoding()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">在版本3.6中进行了更改：不再保证Windows返回 &lt;code&gt;'mbcs'&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;#sys._enablelegacywindowsfsencoding&quot;&gt; &lt;code&gt;_enablelegacywindowsfsencoding()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63b1744ad9eed2113d4f144a72a22e39e0af2901" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: Windows is no longer guaranteed to return &lt;code&gt;'mbcs'&lt;/code&gt;. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;#sys._enablelegacywindowsfsencoding&quot;&gt;&lt;code&gt;_enablelegacywindowsfsencoding()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">在版本3.6中进行了更改：不再保证Windows返回 &lt;code&gt;'mbcs'&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;#sys._enablelegacywindowsfsencoding&quot;&gt; &lt;code&gt;_enablelegacywindowsfsencoding()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7fb28f57d1b2cd11ca2d899fc0d5453adb8c1119" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: With the acceptance of &lt;a href=&quot;https://www.python.org/dev/peps/pep-0468&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 468&lt;/strong&gt;&lt;/a&gt;, order is retained for keyword arguments passed to the &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; constructor and its &lt;code&gt;update()&lt;/code&gt; method.</source>
          <target state="translated">在版本3.6中更改：接受&lt;a href=&quot;https://www.python.org/dev/peps/pep-0468&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 468时&lt;/strong&gt;&lt;/a&gt;，将保留传递给&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;构造函数及其 &lt;code&gt;update()&lt;/code&gt; 方法的关键字参数的顺序。</target>
        </trans-unit>
        <trans-unit id="c92b1cda762ff0a5fd229034609d210702c8d9b1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: With the acceptance of &lt;a href=&quot;https://www.python.org/dev/peps/pep-0468&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 468&lt;/strong&gt;&lt;/a&gt;, order is retained for keyword arguments passed to the &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; constructor and its &lt;code&gt;update()&lt;/code&gt; method.</source>
          <target state="translated">在版本3.6中进行了更改：接受&lt;a href=&quot;https://www.python.org/dev/peps/pep-0468&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 468时&lt;/strong&gt;&lt;/a&gt;，将保留传递给&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;构造函数及其 &lt;code&gt;update()&lt;/code&gt; 方法的关键字参数的顺序。</target>
        </trans-unit>
        <trans-unit id="b5942c298d9518ff3c6eefc47a856dba249a76c1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: setsockopt(level, optname, None, optlen: int) form added.</source>
          <target state="translated">在3.6版本中修改了:增加了setockopt(level,optname,None,optlen:int)形式。</target>
        </trans-unit>
        <trans-unit id="8b9733e97b24f0a252f62413195ccd5523d9a173" translate="yes" xml:space="preserve">
          <source>Changed in version 3.6: the default behavior when &lt;em&gt;maxheaderlen&lt;/em&gt; is not specified was changed from defaulting to 0 to defaulting to the value of &lt;em&gt;max_line_length&lt;/em&gt; from the policy.</source>
          <target state="translated">在版本3.6中更改：未指定&lt;em&gt;maxheaderlen&lt;/em&gt;时的默认行为&lt;em&gt;已从策略&lt;/em&gt;更改为从默认值0更改为默认值&lt;em&gt;max_line_length&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="57366972e1fc2abf14f9dd41ead9001204f7afe6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.1: The SAX parser no longer processes general external entities by default to increase security by default. To enable processing of external entities, pass a custom parser instance in:</source>
          <target state="translated">在3.7.1版本中有所改变。SAX解析器不再默认处理一般的外部实体,以提高默认的安全性。要启用外部实体的处理,请将一个自定义的解析器实例传入。</target>
        </trans-unit>
        <trans-unit id="76b6121622d855eab2bab4955f409032a236194f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.1: The SAX parser no longer processes general external entities by default to increase security. Before, the parser created network connections to fetch remote files or loaded local files from the file system for DTD and entities. The feature can be enabled again with method &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader.setFeature&quot;&gt;&lt;code&gt;setFeature()&lt;/code&gt;&lt;/a&gt; on the parser object and argument &lt;a href=&quot;xml.sax.handler#xml.sax.handler.feature_external_ges&quot;&gt;&lt;code&gt;feature_external_ges&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.7.1中进行了更改：默认情况下，SAX解析器不再处理常规外部实体以提高安全性。以前，解析器创建网络连接以从DTD和实体的文件系统中获取远程文件或加载本地文件。可以使用解析器对象上的&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader.setFeature&quot;&gt; &lt;code&gt;setFeature()&lt;/code&gt; &lt;/a&gt;方法和参数&lt;a href=&quot;xml.sax.handler#xml.sax.handler.feature_external_ges&quot;&gt; &lt;code&gt;feature_external_ges&lt;/code&gt; &lt;/a&gt;再次启用该功能。</target>
        </trans-unit>
        <trans-unit id="e440d806435b0b1d2c049dd90c5d238e0f47e068" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.2: The &lt;code id=&quot;index-7&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; environment variable no longer overrides the value of the &lt;em&gt;invalidation_mode&lt;/em&gt; argument, and determines its default value instead.</source>
          <target state="translated">在版本3.7.2中进行了更改： &lt;code id=&quot;index-7&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; 环境变量不再覆盖&lt;em&gt;invalidation_mode&lt;/em&gt;参数的值，而是确定其默认值。</target>
        </trans-unit>
        <trans-unit id="5084e6e92ac29faf18eaac15f6ab04d0f9d8c248" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.2: The &lt;em&gt;invalidation_mode&lt;/em&gt; parameter&amp;rsquo;s default value is updated to None.</source>
          <target state="translated">在版本3.7.2中进行了更改：&lt;em&gt;invalidation_mode&lt;/em&gt;参数的默认值已更新为&amp;ldquo;无&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="853422b51da6f3ec929e72af5ca1f69f10e7f9ba" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.2: Windows now uses redirector scripts for &lt;code&gt;python[w].exe&lt;/code&gt; instead of copying the actual binaries. In 3.7.2 only &lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt;&lt;code&gt;setup_python()&lt;/code&gt;&lt;/a&gt; does nothing unless running from a build in the source tree.</source>
          <target state="translated">在版本3.7.2中进行了更改：Windows现在使用 &lt;code&gt;python[w].exe&lt;/code&gt; 重定向程序脚本，而不是复制实际的二进制文件。在3.7.2 中，除非从源树中的构建运行，否则&lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt; &lt;code&gt;setup_python()&lt;/code&gt; &lt;/a&gt;不会执行任何操作。</target>
        </trans-unit>
        <trans-unit id="863b9e87b22dedfa950bc40f94561d8e09c439cf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7.3: Windows copies the redirector scripts as part of &lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt;&lt;code&gt;setup_python()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#venv.EnvBuilder.setup_scripts&quot;&gt;&lt;code&gt;setup_scripts()&lt;/code&gt;&lt;/a&gt;. This was not the case in 3.7.2. When using symlinks, the original executables will be linked.</source>
          <target state="translated">在版本3.7.3中进行了更改：Windows将重定向程序脚本复制为&lt;a href=&quot;#venv.EnvBuilder.setup_python&quot;&gt; &lt;code&gt;setup_python()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#venv.EnvBuilder.setup_scripts&quot;&gt; &lt;code&gt;setup_scripts()&lt;/code&gt; 的一部分&lt;/a&gt;。在3.7.2中不是这种情况。使用符号链接时，原始可执行文件将被链接。</target>
        </trans-unit>
        <trans-unit id="ce1f2abb9a1c602554e6e77610c65467dc680350" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#bytearray.fromhex&quot;&gt;&lt;code&gt;bytearray.fromhex()&lt;/code&gt;&lt;/a&gt; now skips all ASCII whitespace in the string, not just spaces.</source>
          <target state="translated">在版本3.7中进行了更改：&lt;a href=&quot;#bytearray.fromhex&quot;&gt; &lt;code&gt;bytearray.fromhex()&lt;/code&gt; &lt;/a&gt;现在跳过字符串中的所有ASCII空格，而不仅仅是空格。</target>
        </trans-unit>
        <trans-unit id="4e907378ff5219221520fe7f88ff88e3df28ad7c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#bytes.fromhex&quot;&gt;&lt;code&gt;bytes.fromhex()&lt;/code&gt;&lt;/a&gt; now skips all ASCII whitespace in the string, not just spaces.</source>
          <target state="translated">在版本3.7中进行了更改：&lt;a href=&quot;#bytes.fromhex&quot;&gt; &lt;code&gt;bytes.fromhex()&lt;/code&gt; &lt;/a&gt;现在跳过字符串中的所有ASCII空格，而不仅仅是空格。</target>
        </trans-unit>
        <trans-unit id="7b2c673ab99dce6e19eaceaf702384d6a23add82" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is now automatically changed to &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; when hostname checking is enabled and &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;#ssl.CERT_NONE&quot;&gt;&lt;code&gt;CERT_NONE&lt;/code&gt;&lt;/a&gt;. Previously the same operation would have failed with a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">改变在3.7版本：&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; &lt;/a&gt;现在自动更改为&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt;当主机名检查已启用，&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; &lt;/a&gt;是&lt;a href=&quot;#ssl.CERT_NONE&quot;&gt; &lt;code&gt;CERT_NONE&lt;/code&gt; &lt;/a&gt;。以前，相同的操作会因&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;而失败。</target>
        </trans-unit>
        <trans-unit id="dfa81cd93d9170a0c80bedb76a14f8b58e310a1e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#ssl.SSLObject&quot;&gt;&lt;code&gt;SSLObject&lt;/code&gt;&lt;/a&gt; instances must to created with &lt;a href=&quot;#ssl.SSLContext.wrap_bio&quot;&gt;&lt;code&gt;wrap_bio()&lt;/code&gt;&lt;/a&gt;. In earlier versions, it was possible to create instances directly. This was never documented or officially supported.</source>
          <target state="translated">在版本3.7中更改：&lt;a href=&quot;#ssl.SSLObject&quot;&gt; &lt;code&gt;SSLObject&lt;/code&gt; &lt;/a&gt;实例必须使用&lt;a href=&quot;#ssl.SSLContext.wrap_bio&quot;&gt; &lt;code&gt;wrap_bio()&lt;/code&gt; &lt;/a&gt;创建。在早期版本中，可以直接创建实例。从未记录或得到官方支持。</target>
        </trans-unit>
        <trans-unit id="e5431937e71157adb38413677dcdb582aed2a2d5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; instances must to created with &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt;. In earlier versions, it was possible to create instances directly. This was never documented or officially supported.</source>
          <target state="translated">在版本3.7中更改：&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;实例必须使用&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt;创建。在早期版本中，可以直接创建实例。从未记录或得到官方支持。</target>
        </trans-unit>
        <trans-unit id="072fcad98c97a642bd658f3fc593da376dc30c7b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt; no longer has a custom metaclass.</source>
          <target state="translated">在版本3.7中更改：&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt;不再具有自定义元类。</target>
        </trans-unit>
        <trans-unit id="ff966d919068447171afb2c58e7bf10e243f6b23" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler.register_function&quot;&gt;&lt;code&gt;register_function()&lt;/code&gt;&lt;/a&gt; can be used as a decorator.</source>
          <target state="translated">在版本3.7中更改：&lt;a href=&quot;#xmlrpc.server.CGIXMLRPCRequestHandler.register_function&quot;&gt; &lt;code&gt;register_function()&lt;/code&gt; &lt;/a&gt;可用作装饰器。</target>
        </trans-unit>
        <trans-unit id="8532a04bf853c0100f105eb3c85361fedaa0b141" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer.register_function&quot;&gt;&lt;code&gt;register_function()&lt;/code&gt;&lt;/a&gt; can be used as a decorator.</source>
          <target state="translated">在版本3.7中更改：&lt;a href=&quot;#xmlrpc.server.SimpleXMLRPCServer.register_function&quot;&gt; &lt;code&gt;register_function()&lt;/code&gt; &lt;/a&gt;可用作装饰器。</target>
        </trans-unit>
        <trans-unit id="958fda0332dbe58b2edceff2aa0e2f0d7be788a7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;exceptions#BytesWarning&quot;&gt;&lt;code&gt;BytesWarning&lt;/code&gt;&lt;/a&gt; no longer appears in the default filter list and is instead configured via &lt;a href=&quot;sys#sys.warnoptions&quot;&gt;&lt;code&gt;sys.warnoptions&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-b&quot;&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/a&gt; is specified twice.</source>
          <target state="translated">在版本3.7中更改：&lt;a href=&quot;exceptions#BytesWarning&quot;&gt; &lt;code&gt;BytesWarning&lt;/code&gt; &lt;/a&gt;不再出现在默认过滤器列表中，而是在两次指定&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-b&quot;&gt; &lt;code&gt;-b&lt;/code&gt; &lt;/a&gt;时通过&lt;a href=&quot;sys#sys.warnoptions&quot;&gt; &lt;code&gt;sys.warnoptions&lt;/code&gt; &lt;/a&gt;配置。</target>
        </trans-unit>
        <trans-unit id="f59ac9b40ce08d72b4edacb95e36e828725a5741" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;exceptions#BytesWarning&quot;&gt;&lt;code&gt;BytesWarning&lt;/code&gt;&lt;/a&gt; no longer appears in the default filter list and is instead configured via &lt;a href=&quot;sys#sys.warnoptions&quot;&gt;&lt;code&gt;sys.warnoptions&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-b&quot;&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/a&gt; is specified twice.</source>
          <target state="translated">在版本3.7中更改：&lt;a href=&quot;exceptions#BytesWarning&quot;&gt; &lt;code&gt;BytesWarning&lt;/code&gt; &lt;/a&gt;不再出现在默认过滤器列表中，而是在两次指定&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-b&quot;&gt; &lt;code&gt;-b&lt;/code&gt; &lt;/a&gt;时通过&lt;a href=&quot;sys#sys.warnoptions&quot;&gt; &lt;code&gt;sys.warnoptions&lt;/code&gt; &lt;/a&gt;配置。</target>
        </trans-unit>
        <trans-unit id="5d83e5c9f96f820b07ec2445379a4f97311df428" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; is once again shown by default when triggered directly by code in &lt;code&gt;__main__&lt;/code&gt;.</source>
          <target state="translated">在版本3.7中进行了更改：默认情况下，当 &lt;code&gt;__main__&lt;/code&gt; 中的代码直接触发&lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;时，它将再次显示。</target>
        </trans-unit>
        <trans-unit id="52514f9fea9a951eaedf4ee981ffe49ecd19a38a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;exceptions#FutureWarning&quot;&gt;&lt;code&gt;FutureWarning&lt;/code&gt;&lt;/a&gt; is raised if a character set contains constructs that will change semantically in the future.</source>
          <target state="translated">在版本3.7中进行了更改：如果字符集包含将来会在语义上进行更改的构造，则会引发&lt;a href=&quot;exceptions#FutureWarning&quot;&gt; &lt;code&gt;FutureWarning&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ba029452d9e1d657784def8280827eb4616538a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;exceptions#ModuleNotFoundError&quot;&gt;&lt;code&gt;ModuleNotFoundError&lt;/code&gt;&lt;/a&gt; is raised when the module being reloaded lacks a &lt;code&gt;ModuleSpec&lt;/code&gt;.</source>
          <target state="translated">在版本3.7中进行了更改：当要重装的模块缺少 &lt;code&gt;ModuleSpec&lt;/code&gt; 时，引发&lt;a href=&quot;exceptions#ModuleNotFoundError&quot;&gt; &lt;code&gt;ModuleNotFoundError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0a52bfab7242e1551b24ccc7aedaf1dc193c07f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;a href=&quot;os.path#os.path.expanduser&quot;&gt;&lt;code&gt;os.path.expanduser()&lt;/code&gt;&lt;/a&gt; is used to find the location of the &lt;code&gt;.netrc&lt;/code&gt; file when &lt;em&gt;file&lt;/em&gt; is not passed as argument.</source>
          <target state="translated">在版本3.7中进行了更改：&lt;a href=&quot;os.path#os.path.expanduser&quot;&gt; &lt;code&gt;os.path.expanduser()&lt;/code&gt; &lt;/a&gt;用于在未将&lt;em&gt;文件&lt;/em&gt;作为参数传递时查找 &lt;code&gt;.netrc&lt;/code&gt; 文件的位置。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ed9510481315ef1e285830c40761da187514d9e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;code&gt;'opcode'&lt;/code&gt; event type added; &lt;code&gt;f_trace_lines&lt;/code&gt; and &lt;code&gt;f_trace_opcodes&lt;/code&gt; attributes added to frames</source>
          <target state="translated">在版本3.7中进行了更改：添加了 &lt;code&gt;'opcode'&lt;/code&gt; 事件类型； &lt;code&gt;f_trace_lines&lt;/code&gt; 和 &lt;code&gt;f_trace_opcodes&lt;/code&gt; 属性添加到框架</target>
        </trans-unit>
        <trans-unit id="f1653c4ac39612e8b24b2cb727689f207dc70253" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;code&gt;TCP_NOTSENT_LOWAT&lt;/code&gt; was added.</source>
          <target state="translated">在版本3.7中进行了更改：添加了 &lt;code&gt;TCP_NOTSENT_LOWAT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9f27c06084e9dccbac7a0689c03fc248630c851" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;code&gt;socketserver.ForkingMixIn.server_close()&lt;/code&gt; and &lt;code&gt;socketserver.ThreadingMixIn.server_close()&lt;/code&gt; now waits until all child processes and non-daemonic threads complete. Add a new &lt;code&gt;socketserver.ForkingMixIn.block_on_close&lt;/code&gt; class attribute to opt-in for the pre-3.7 behaviour.</source>
          <target state="translated">在版本3.7中进行了更改： &lt;code&gt;socketserver.ForkingMixIn.server_close()&lt;/code&gt; 和 &lt;code&gt;socketserver.ThreadingMixIn.server_close()&lt;/code&gt; 现在等待所有子进程和非守护线程完成。添加一个新的 &lt;code&gt;socketserver.ForkingMixIn.block_on_close&lt;/code&gt; 类属性以选择加入3.7之前的行为。</target>
        </trans-unit>
        <trans-unit id="5420ef0fe10222c5496fa6a334b7a0339c502e25" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;blocksize&lt;/em&gt; parameter was added.</source>
          <target state="translated">在版本3.7中进行了更改：增加了&lt;em&gt;blocksize&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="83ff726260f8e69378e79602e1210c4883952c3c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;braceidpattern&lt;/em&gt; can be used to define separate patterns used inside and outside the braces.</source>
          <target state="translated">在版本3.7中更改：&lt;em&gt;braceidpattern&lt;/em&gt;可用于定义在括号内和括号外使用的单独模式。</target>
        </trans-unit>
        <trans-unit id="fdfeec329b2e0f3b6e7d1731af8f5d54d20a5b61" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;cwd&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on Windows.</source>
          <target state="translated">在版本3.7中更改：&lt;em&gt;cwd&lt;/em&gt;参数在Windows上接受类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35d535f8252518f2be7b574e42d9b2f47ba5110c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;cwd&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on Windows.</source>
          <target state="translated">在版本3.7中更改：&lt;em&gt;cwd&lt;/em&gt;参数在Windows上接受类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9d5f3ab99e40292515541dc053d44e92890ed00" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;database&lt;/em&gt; can now also be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, not only a string.</source>
          <target state="translated">在3.7版中进行了更改：&lt;em&gt;数据库&lt;/em&gt;现在也可以是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;类似路径的对象&lt;/a&gt;，而不仅仅是字符串。</target>
        </trans-unit>
        <trans-unit id="6d5cddb2bbcfd90ca5d411008c0392eb13b4d4a0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;database&lt;/em&gt; can now also be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;, not only a string.</source>
          <target state="translated">在3.7版中进行了更改：&lt;em&gt;数据库&lt;/em&gt;现在也可以是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;类似路径的对象&lt;/a&gt;，而不仅仅是字符串。</target>
        </trans-unit>
        <trans-unit id="25673de31f6dc63dfce87e4e0ffd174a0e944cc5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;preferred&lt;/em&gt; keyword-only parameter was added.</source>
          <target state="translated">在3.7版中进行了更改：添加了&lt;em&gt;首选&lt;/em&gt;的仅关键字参数。</target>
        </trans-unit>
        <trans-unit id="4b32b2da612c5f2e914848a82c44cec7a74b4b64" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: &lt;em&gt;x&lt;/em&gt; is now a positional-only parameter.</source>
          <target state="translated">在3.7版中更改：&lt;em&gt;x&lt;/em&gt;现在是仅位置参数。</target>
        </trans-unit>
        <trans-unit id="8fb81dde3c6868c8816033e3940e4a528dd4ff90" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: A format string argument is now &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#positional-only-parameter&quot;&gt;positional-only&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中更改：现在，格式字符串参数&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#positional-only-parameter&quot;&gt;仅&lt;/a&gt;是positional。</target>
        </trans-unit>
        <trans-unit id="c3c6bc4f832df0b80d7e7029fee7927d325f05bb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: A format string argument is now &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#positional-only-parameter&quot;&gt;positional-only&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中更改：现在，格式字符串参数&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#positional-only-parameter&quot;&gt;仅&lt;/a&gt;是positional。</target>
        </trans-unit>
        <trans-unit id="88e9614aa0ccf9378df756021c64cdc0fe334309" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;filename&lt;/em&gt; and &lt;em&gt;extract_dir&lt;/em&gt;.</source>
          <target state="translated">改变在3.7版本：接受一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径状物体&lt;/a&gt;的&lt;em&gt;文件名&lt;/em&gt;和&lt;em&gt;EXTRACT_DIR&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="93fa8e861e5f1c3e7d2485a643929619f0664c99" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for &lt;em&gt;filename&lt;/em&gt; and &lt;em&gt;extract_dir&lt;/em&gt;.</source>
          <target state="translated">改变在3.7版本：接受一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径状物体&lt;/a&gt;的&lt;em&gt;文件名&lt;/em&gt;和&lt;em&gt;EXTRACT_DIR&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0b19b7cef93aa3b4d11a1892c09dddbdb57f2f88" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Add &lt;code&gt;cr_origin&lt;/code&gt; attribute to coroutines.</source>
          <target state="translated">在版本3.7中进行了更改：向协程添加 &lt;code&gt;cr_origin&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="005e3255d5f8977a065552b865587d2b7803353b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Add the &lt;em&gt;compresslevel&lt;/em&gt; parameter.</source>
          <target state="translated">在版本3.7中更改：添加&lt;em&gt;compresslevel&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="d89809fc2c3d7dd78187400b369602ad43ce59b5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added &lt;a href=&quot;#token.COMMENT&quot;&gt;&lt;code&gt;COMMENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#token.NL&quot;&gt;&lt;code&gt;NL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#token.ENCODING&quot;&gt;&lt;code&gt;ENCODING&lt;/code&gt;&lt;/a&gt; tokens.</source>
          <target state="translated">在3.7版中进行了更改：添加了&lt;a href=&quot;#token.COMMENT&quot;&gt; &lt;code&gt;COMMENT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#token.NL&quot;&gt; &lt;code&gt;NL&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#token.ENCODING&quot;&gt; &lt;code&gt;ENCODING&lt;/code&gt; &lt;/a&gt;令牌。</target>
        </trans-unit>
        <trans-unit id="cc27d9e806737cd06b840e7b2c10ea8f94f36ebd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added &lt;code&gt;421 MISDIRECTED_REQUEST&lt;/code&gt; status code.</source>
          <target state="translated">在版本3.7中更改：添加了 &lt;code&gt;421 MISDIRECTED_REQUEST&lt;/code&gt; 状态代码。</target>
        </trans-unit>
        <trans-unit id="00d77f9e277a9641da3776637a3f1564d4e52e4f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added &lt;code&gt;ACCESS_DEFAULT&lt;/code&gt; constant.</source>
          <target state="translated">在3.7版中进行了更改：添加了 &lt;code&gt;ACCESS_DEFAULT&lt;/code&gt; 常量。</target>
        </trans-unit>
        <trans-unit id="d6c4dbaae4cbfde8ae2d0f74232d5dbb049f2f8f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added &lt;code&gt;dev_mode&lt;/code&gt; attribute for the new &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;dev&lt;/code&gt; flag and &lt;code&gt;utf8_mode&lt;/code&gt; attribute for the new &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt; flag.</source>
          <target state="translated">在版本3.7中进行了更改：为新的&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;dev&lt;/code&gt; 标志添加了 &lt;code&gt;dev_mode&lt;/code&gt; 属性，为新的&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;utf8&lt;/code&gt; 标志添加了 &lt;code&gt;utf8_mode&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="5434c44d309bc59f3b75446b7e31a8cb756fac0b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added &lt;code&gt;warn_on_full_buffer&lt;/code&gt; parameter.</source>
          <target state="translated">在3.7版中进行了更改：添加了 &lt;code&gt;warn_on_full_buffer&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="42d9c3d66c4e3627ae65d097e1d9953f826138cd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support for &lt;a href=&quot;#path-fd&quot;&gt;file descriptors&lt;/a&gt; on Unix.</source>
          <target state="translated">在版本3.7中更改：在Unix上增加了对&lt;a href=&quot;#path-fd&quot;&gt;文件描述符的&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="c3e35d23b662d36a9a65d36d22142c8c396781db" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support for &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; paths.</source>
          <target state="translated">在版本3.7中更改：添加了对&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;路径的支持。</target>
        </trans-unit>
        <trans-unit id="b9a6f0b02dd548682cd7267a5971ba09d0fa1344" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support for the &lt;a href=&quot;contextvars#module-contextvars&quot;&gt;&lt;code&gt;contextvars&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">在版本3.7中进行了更改：添加了对&lt;a href=&quot;contextvars#module-contextvars&quot;&gt; &lt;code&gt;contextvars&lt;/code&gt; &lt;/a&gt;模块的支持。</target>
        </trans-unit>
        <trans-unit id="d820da626a4aab5c2c4319d07a3407d2d96c4c4d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support of &lt;a href=&quot;copy#copy.copy&quot;&gt;&lt;code&gt;copy.copy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;copy#copy.deepcopy&quot;&gt;&lt;code&gt;copy.deepcopy()&lt;/code&gt;&lt;/a&gt;. Compiled regular expression objects are considered atomic.</source>
          <target state="translated">在3.7版中进行了更改：添加了对&lt;a href=&quot;copy#copy.copy&quot;&gt; &lt;code&gt;copy.copy()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;copy#copy.deepcopy&quot;&gt; &lt;code&gt;copy.deepcopy()&lt;/code&gt; 的支持&lt;/a&gt;。编译的正则表达式对象被认为是原子的。</target>
        </trans-unit>
        <trans-unit id="48793cd02ed211f53c5ea31e127b4b991e16b5ac" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support of &lt;a href=&quot;copy#copy.copy&quot;&gt;&lt;code&gt;copy.copy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;copy#copy.deepcopy&quot;&gt;&lt;code&gt;copy.deepcopy()&lt;/code&gt;&lt;/a&gt;. Match objects are considered atomic.</source>
          <target state="translated">在3.7版中进行了更改：添加了对&lt;a href=&quot;copy#copy.copy&quot;&gt; &lt;code&gt;copy.copy()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;copy#copy.deepcopy&quot;&gt; &lt;code&gt;copy.deepcopy()&lt;/code&gt; 的支持&lt;/a&gt;。匹配对象被视为原子对象。</target>
        </trans-unit>
        <trans-unit id="4b598fa526cd8ee2f3f979e80d0a3ddf4f68d422" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added support of splitting on a pattern that could match an empty string.</source>
          <target state="translated">3.7版的变化:增加了对可能匹配空字符串的模式的分割支持。</target>
        </trans-unit>
        <trans-unit id="b1d015d6e51e99b300bea59b8a79980df9b957e9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;code&gt;--invalidation-mode&lt;/code&gt; option.</source>
          <target state="translated">在3.7版中进行了更改：添加了 &lt;code&gt;--invalidation-mode&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="de4f686ae04d3e85c2b797d3439b11bccb70616b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;code&gt;-n&lt;/code&gt; option.</source>
          <target state="translated">在3.7版中进行了更改：添加了 &lt;code&gt;-n&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="3c214b618f60b2392b27fa4e103bb406a12ac9b6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;code&gt;dev_mode&lt;/code&gt; attribute for the new &lt;a href=&quot;devmode#devmode&quot;&gt;Python Development Mode&lt;/a&gt; and the &lt;code&gt;utf8_mode&lt;/code&gt; attribute for the new &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt; flag.</source>
          <target state="translated">在版本3.7中进行了更改：为新的&lt;a href=&quot;devmode#devmode&quot;&gt;Python开发模式&lt;/a&gt;添加了 &lt;code&gt;dev_mode&lt;/code&gt; 属性，为新的&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;utf8&lt;/code&gt; 标志添加了 &lt;code&gt;utf8_mode&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="1aad3a3294b1f64dd7c4b7832ff8c9cd0754a3d8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;backtick&lt;/em&gt; parameter.</source>
          <target state="translated">在3.7版中进行了更改：添加了&lt;em&gt;backtick&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="0317b52c4a8e21fcd01232edd547138845488c9d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;defaults&lt;/em&gt; parameter and the &lt;code&gt;_field_defaults&lt;/code&gt; attribute.</source>
          <target state="translated">在3.7版中进行了更改：添加了&lt;em&gt;defaults&lt;/em&gt;参数和 &lt;code&gt;_field_defaults&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="adc3579ebc4d8ddb1d8ec5db66d8ad238a07a3df" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters. For non-file fields, the value is now a list of strings, not bytes.</source>
          <target state="translated">在3.7版中进行了更改：添加了&lt;em&gt;encoding&lt;/em&gt;和&lt;em&gt;errors&lt;/em&gt;参数。对于非文件字段，该值现在是字符串列表，而不是字节列表。</target>
        </trans-unit>
        <trans-unit id="2b23c4e756c187cc356d0e00f471b02851185150" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;initializer&lt;/em&gt; and &lt;em&gt;initargs&lt;/em&gt; arguments.</source>
          <target state="translated">在3.7版中进行了更改：添加了&lt;em&gt;初始化程序&lt;/em&gt;和&lt;em&gt;initargs&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="97d2d81a19460f59b22d1bd87d82c58680a429be" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;rounds&lt;/em&gt; parameter.</source>
          <target state="translated">在3.7版中进行了更改：添加了&lt;em&gt;rounds&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="23ea6cbe7ed92a135648d37aa905503e14da2ccd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Added the &lt;em&gt;text&lt;/em&gt; parameter, as a more understandable alias of &lt;em&gt;universal_newlines&lt;/em&gt;. Added the &lt;em&gt;capture_output&lt;/em&gt; parameter.</source>
          <target state="translated">在3.7版中进行了更改：添加了&lt;em&gt;text&lt;/em&gt;参数，作为&lt;em&gt;Universal_newlines&lt;/em&gt;的更易理解的别名。添加了&lt;em&gt;capture_output&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="e54ef8aec539006f4c7bc0e37e371b73f778818c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: As a &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; subclass, &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; Inherited the capability to remember insertion order. Math operations on &lt;em&gt;Counter&lt;/em&gt; objects also preserve order. Results are ordered according to when an element is first encountered in the left operand and then by the order encountered in the right operand.</source>
          <target state="translated">在版本3.7中进行了更改：作为&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; 的&lt;/a&gt;子类，&lt;a href=&quot;#collections.Counter&quot;&gt; &lt;code&gt;Counter&lt;/code&gt; &lt;/a&gt;继承了记住插入顺序的功能。对&lt;em&gt;Counter&lt;/em&gt;对象的数学运算也保留顺序。根据在左操作数中首先遇到元素的时间，然后按照在右操作数中遇到的顺序，对结果进行排序。</target>
        </trans-unit>
        <trans-unit id="c73643909c1002b12f74966226d3fa6f0f4ac2a8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Attributes &lt;a href=&quot;#http.cookies.Morsel.key&quot;&gt;&lt;code&gt;key&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#http.cookies.Morsel.value&quot;&gt;&lt;code&gt;value&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookies.Morsel.coded_value&quot;&gt;&lt;code&gt;coded_value&lt;/code&gt;&lt;/a&gt; are read-only. Use &lt;a href=&quot;#http.cookies.Morsel.set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; for setting them.</source>
          <target state="translated">在版本3.7中更改：属性&lt;a href=&quot;#http.cookies.Morsel.key&quot;&gt; &lt;code&gt;key&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#http.cookies.Morsel.value&quot;&gt; &lt;code&gt;value&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#http.cookies.Morsel.coded_value&quot;&gt; &lt;code&gt;coded_value&lt;/code&gt; &lt;/a&gt;是只读的。使用&lt;a href=&quot;#http.cookies.Morsel.set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt;进行设置。</target>
        </trans-unit>
        <trans-unit id="08d385f8b4af8122d20b24bc954682b188fbb9aa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Both &lt;em&gt;getaddrinfo&lt;/em&gt; and &lt;em&gt;getnameinfo&lt;/em&gt; methods were always documented to return a coroutine, but prior to Python 3.7 they were, in fact, returning &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;asyncio.Future&lt;/code&gt;&lt;/a&gt; objects. Starting with Python 3.7 both methods are coroutines.</source>
          <target state="translated">在版本3.7中进行了更改：始终记录了&lt;em&gt;getaddrinfo&lt;/em&gt;和&lt;em&gt;getnameinfo&lt;/em&gt;方法都返回协程的事实，但是在Python 3.7之前，它们实际上是返回&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;asyncio.Future&lt;/code&gt; &lt;/a&gt;对象的。从Python 3.7开始，这两种方法都是协程。</target>
        </trans-unit>
        <trans-unit id="e5eeda500553fc3daf1a38acc5d91e602a800efb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Compiled regular expression objects with the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;re.LOCALE&lt;/code&gt;&lt;/a&gt; flag no longer depend on the locale at compile time. Only the locale at matching time affects the result of matching.</source>
          <target state="translated">在版本3.7中更改：具有&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;re.LOCALE&lt;/code&gt; &lt;/a&gt;标志的已编译正则表达式对象在编译时不再依赖于语言环境。只有匹配时的语言环境会影响匹配结果。</target>
        </trans-unit>
        <trans-unit id="ef2ddd4188047df7cdd5ca3adb4ca4623cd79e50" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Default value of &lt;em&gt;repeat&lt;/em&gt; changed from 3 to 5.</source>
          <target state="translated">在版本3.7中更改：&lt;em&gt;重复的&lt;/em&gt;默认值从3更改为5。</target>
        </trans-unit>
        <trans-unit id="2803c654fc8043e748ab9d4c2c9519e10111ff8d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Dict values in the result are now normal dicts. You no longer can use attribute access to access items of these dictionaries.</source>
          <target state="translated">3.7版的变化:结果中的Dict值现在是正常的Dict。你不能再使用属性访问来访问这些字典的项目。</target>
        </trans-unit>
        <trans-unit id="dd5b330856b3b05e17f6ac214644983ee1132e19" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Dictionary order is guaranteed to be insertion order.</source>
          <target state="translated">3.7版本的变化:字典顺序保证为插入顺序。</target>
        </trans-unit>
        <trans-unit id="03b8e402e5897f7b400bf177bff4b0b5a5e9cec6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Dictionary order is guaranteed to be insertion order. This behavior was an implementation detail of CPython from 3.6.</source>
          <target state="translated">3.7版本的变化:保证字典顺序为插入顺序。这个行为是CPython从3.6版开始的一个实现细节。</target>
        </trans-unit>
        <trans-unit id="224ba841fb0315c612423d440ccc11d21473f87a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Don&amp;rsquo;t remove explicit subclasses from unions at runtime.</source>
          <target state="translated">在版本3.7中进行了更改：在运行时不要从联合中删除显式子类。</target>
        </trans-unit>
        <trans-unit id="d33466a3a55b93c29b2974e799bfb0bc3559bfb8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Empty matches for the pattern are replaced when adjacent to a previous non-empty match.</source>
          <target state="translated">在3.7版本中更改:当模式的空匹配与之前的非空匹配相邻时,将被替换。</target>
        </trans-unit>
        <trans-unit id="dd921b175b4978478211062373a7df7bd07ad5ff" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Enable &lt;a href=&quot;https://www.python.org/dev/peps/pep-0479&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 479&lt;/strong&gt;&lt;/a&gt; for all code by default: a &lt;a href=&quot;#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; error raised in a generator is transformed into a &lt;a href=&quot;#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中更改：默认情况下为所有代码启用&lt;a href=&quot;https://www.python.org/dev/peps/pep-0479&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 479&lt;/strong&gt;&lt;/a&gt;：生成器中引发的&lt;a href=&quot;#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;错误将转换为&lt;a href=&quot;#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="310df6132eebe18bfe9a4ff0baae65e29db2960f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Entries of &lt;code&gt;None&lt;/code&gt; in &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt; are deleted.</source>
          <target state="translated">改变在3.7版本：的条目 &lt;code&gt;None&lt;/code&gt; 在&lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; &lt;/a&gt;被删除。</target>
        </trans-unit>
        <trans-unit id="e90fc9d5ae6ab7c198786b4fb81ae2896257f828" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Even though the method was always documented as a coroutine method, before Python 3.7 it returned a &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;. Since Python 3.7, this is an &lt;code&gt;async def&lt;/code&gt; method.</source>
          <target state="translated">在3.7版中进行了更改：尽管该方法始终被记录为协程方法，但在Python 3.7之前，它返回了&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;。从Python 3.7开始，这是一个 &lt;code&gt;async def&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="0f5f425c09be0889f7993c692dd8bf24c225a967" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Even though the method was always documented as a coroutine method, before Python 3.7 it returned an &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;. Since Python 3.7, this is an &lt;code&gt;async def&lt;/code&gt; method.</source>
          <target state="translated">在3.7版中进行了更改：尽管该方法始终被记录为协程方法，但在Python 3.7之前，它返回了&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;。从Python 3.7开始，这是一个 &lt;code&gt;async def&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="71ca8a8740b86472133c098a2412f4ed16a5c1cb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Even though this method was always documented as a coroutine method, releases before Python 3.7 returned a &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;. Since Python 3.7 this is an &lt;code&gt;async def&lt;/code&gt; method.</source>
          <target state="translated">在3.7版中进行了更改：尽管此方法始终被记录为协程方法，但在python 3.7返回&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;之前已发布。从Python 3.7开始，这是一个 &lt;code&gt;async def&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="cdf4cfab0e5e9be03dbae5dcb5092ffe198eb1bb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: For multicast IPv6 address, first item of &lt;em&gt;address&lt;/em&gt; does not contain &lt;code&gt;%scope&lt;/code&gt; part anymore. In order to get full IPv6 address use &lt;a href=&quot;#socket.getnameinfo&quot;&gt;&lt;code&gt;getnameinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">改变在3.7版本：对于IPv6组播地址的第一个项目&lt;em&gt;地址&lt;/em&gt;不包含 &lt;code&gt;%scope&lt;/code&gt; 的一部分了。为了获得完整的IPv6地址，请使用&lt;a href=&quot;#socket.getnameinfo&quot;&gt; &lt;code&gt;getnameinfo()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="25cec405df7137cd5a21c3254d962d35cbfe2dce" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: For multicast IPv6 address, first item of &lt;em&gt;address&lt;/em&gt; does not contain &lt;code&gt;%scope_id&lt;/code&gt; part anymore. In order to get full IPv6 address use &lt;a href=&quot;#socket.getnameinfo&quot;&gt;&lt;code&gt;getnameinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">改变在3.7版本：对于IPv6组播地址的第一个项目&lt;em&gt;地址&lt;/em&gt;不包含 &lt;code&gt;%scope_id&lt;/code&gt; 的一部分了。为了获得完整的IPv6地址，请使用&lt;a href=&quot;#socket.getnameinfo&quot;&gt; &lt;code&gt;getnameinfo()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="72605eae81d408c1fd4cc9c938e8c9a0f055943b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: For multicast addresses (with &lt;em&gt;scope_id&lt;/em&gt; meaningful) &lt;em&gt;address&lt;/em&gt; may not contain &lt;code&gt;%scope_id&lt;/code&gt; (or &lt;code&gt;zone id&lt;/code&gt;) part. This information is superfluous and may be safely omitted (recommended).</source>
          <target state="translated">在版本3.7中进行了更改：对于多播地址（有意义的&lt;em&gt;scope_id&lt;/em&gt;），该&lt;em&gt;地址&lt;/em&gt;可能不包含 &lt;code&gt;%scope_id&lt;/code&gt; （或 &lt;code&gt;zone id&lt;/code&gt; ）部分。此信息是多余的，可以安全地省略（推荐）。</target>
        </trans-unit>
        <trans-unit id="58f9ac05991bb7a84f3240f897ba8453b0675a59" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: For multicast addresses (with &lt;em&gt;scopeid&lt;/em&gt; meaningful) &lt;em&gt;address&lt;/em&gt; may not contain &lt;code&gt;%scope&lt;/code&gt; (or &lt;code&gt;zone id&lt;/code&gt;) part. This information is superfluous and may be safely omitted (recommended).</source>
          <target state="translated">改变在3.7版本：对于多播地址（与&lt;em&gt;scopeid&lt;/em&gt;有意义）&lt;em&gt;地址&lt;/em&gt;可能不包含 &lt;code&gt;%scope&lt;/code&gt; （或 &lt;code&gt;zone id&lt;/code&gt; ）部分。此信息是多余的，可以安全地省略（推荐）。</target>
        </trans-unit>
        <trans-unit id="f64155711e04b98bbb73e56efc650d345afe3167" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Frames are now sorted from the oldest to the most recent, instead of most recent to oldest.</source>
          <target state="translated">在3.7版本中的变化:帧现在从最老的到最近的排序,而不是从最近的到最老的。</target>
        </trans-unit>
        <trans-unit id="92f5733073625cb98d59fd1d8faaab4f0b1c77bf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Hostname matchings is now performed by OpenSSL. Python no longer uses &lt;a href=&quot;#ssl.match_hostname&quot;&gt;&lt;code&gt;match_hostname()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中更改：主机名匹配现在由OpenSSL执行。Python不再使用&lt;a href=&quot;#ssl.match_hostname&quot;&gt; &lt;code&gt;match_hostname()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c6a58aa0011775f9760065b8a20e76eee03e4de6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Hostname or IP address is matched by OpenSSL during handshake. The function &lt;a href=&quot;#ssl.match_hostname&quot;&gt;&lt;code&gt;match_hostname()&lt;/code&gt;&lt;/a&gt; is no longer used. In case OpenSSL refuses a hostname or IP address, the handshake is aborted early and a TLS alert message is send to the peer.</source>
          <target state="translated">在版本3.7中更改：握手期间，OpenSSL匹配了主机名或IP地址。不再使用功能&lt;a href=&quot;#ssl.match_hostname&quot;&gt; &lt;code&gt;match_hostname()&lt;/code&gt; &lt;/a&gt;。如果OpenSSL拒绝主机名或IP地址，则握手会提前中止，并且TLS警报消息会发送到对等方。</target>
        </trans-unit>
        <trans-unit id="54f26d0d443361de9a340bf24f12e94e0997b527" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: If the &lt;em&gt;gather&lt;/em&gt; itself is cancelled, the cancellation is propagated regardless of &lt;em&gt;return_exceptions&lt;/em&gt;.</source>
          <target state="translated">在版本3.7中进行了更改：如果取消了&lt;em&gt;收集&lt;/em&gt;本身，则无论&lt;em&gt;return_exceptions&lt;/em&gt;如何，取消都会传播。</target>
        </trans-unit>
        <trans-unit id="36f8744d003d4bb3fd7fb074add0867bae41d650" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: If the result is not ready, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised instead of &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中更改：如果结果未准备好，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4aeb098b2c1827b621d71a3dc4e9379421ab98a7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Implemented recursive disassembling and added &lt;em&gt;depth&lt;/em&gt; parameter.</source>
          <target state="translated">在版本3.7中进行了更改：实现了递归拆卸并添加了&lt;em&gt;depth&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="b4afb43fb6380dd98067a8058908c4a730227d6b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Introduced the optional &lt;code&gt;get_resource_reader()&lt;/code&gt; method.</source>
          <target state="translated">在3.7版中进行了更改：引入了可选的 &lt;code&gt;get_resource_reader()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="52ad99ef5385aa9d237e4ae0d4a6648acd91bad0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Keyword-only argument support was added.</source>
          <target state="translated">3.7版的变化:增加了只支持关键字的参数。</target>
        </trans-unit>
        <trans-unit id="d9e4f645bbf66a880ce115a5fb043317e4d4834e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: LIFO order is now guaranteed. In prior versions, &lt;a href=&quot;#dict.popitem&quot;&gt;&lt;code&gt;popitem()&lt;/code&gt;&lt;/a&gt; would return an arbitrary key/value pair.</source>
          <target state="translated">在版本3.7中进行了更改：现在保证了LIFO订单。在以前的版本中，&lt;a href=&quot;#dict.popitem&quot;&gt; &lt;code&gt;popitem()&lt;/code&gt; &lt;/a&gt;将返回任意键/值对。</target>
        </trans-unit>
        <trans-unit id="b7977568df1a78fe4cd469b7bb3bf93fb6697060" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Loggers can now be pickled and unpickled.</source>
          <target state="translated">3.7版本的变化:记录仪现在可以被腌制和不腌制。</target>
        </trans-unit>
        <trans-unit id="a4bddd28b524df1151d1b06ebe056c65a6c1ad59" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Moved from &lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt; to &lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3986&lt;/strong&gt;&lt;/a&gt; for quoting URL strings. &amp;ldquo;~&amp;rdquo; is now included in the set of unreserved characters.</source>
          <target state="translated">在版本3.7中更改：从&lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt;移至&lt;a href=&quot;https://tools.ietf.org/html/rfc3986.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3986，&lt;/strong&gt;&lt;/a&gt;以引用URL字符串。现在，非保留字符集中包含&amp;ldquo;〜&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ad63bee98302470588873ca81fb88b939ad538d6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: New &lt;em&gt;required&lt;/em&gt; keyword argument.</source>
          <target state="translated">在版本3.7中更改：新的&lt;em&gt;必需&lt;/em&gt;关键字参数。</target>
        </trans-unit>
        <trans-unit id="219bd330cb3659255613f152759bc342ec0cb230" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Non-empty matches can now start just after a previous empty match.</source>
          <target state="translated">3.7版本的变化:非空的比赛现在可以在之前的空比赛之后开始。</target>
        </trans-unit>
        <trans-unit id="d354147bae8e616fec012c97b780dea93e35367b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: On Windows the default for &lt;em&gt;close_fds&lt;/em&gt; was changed from &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; when redirecting the standard handles. It&amp;rsquo;s now possible to set &lt;em&gt;close_fds&lt;/em&gt; to &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt; when redirecting the standard handles.</source>
          <target state="translated">在版本3.7中更改：在Windows上，当重定向标准句柄时，&lt;em&gt;close_fds&lt;/em&gt;的默认值从&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;更改为&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。现在可以在重定向标准句柄时将&lt;em&gt;close_fds&lt;/em&gt;设置为&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6bb422e425245dd7836e19b282ffcd40ca9229eb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Only characters that can have special meaning in a regular expression are escaped. As a result, &lt;code&gt;'!'&lt;/code&gt;, &lt;code&gt;'&quot;'&lt;/code&gt;, &lt;code&gt;'%'&lt;/code&gt;, &lt;code&gt;&quot;'&quot;&lt;/code&gt;, &lt;code&gt;','&lt;/code&gt;, &lt;code&gt;'/'&lt;/code&gt;, &lt;code&gt;':'&lt;/code&gt;, &lt;code&gt;';'&lt;/code&gt;, &lt;code&gt;'&amp;lt;'&lt;/code&gt;, &lt;code&gt;'='&lt;/code&gt;, &lt;code&gt;'&amp;gt;'&lt;/code&gt;, &lt;code&gt;'@'&lt;/code&gt;, and &lt;code&gt;&quot;`&quot;&lt;/code&gt; are no longer escaped.</source>
          <target state="translated">在版本3.7中进行了更改：仅对在正则表达式中具有特殊含义的字符进行转义。结果， &lt;code&gt;'!'&lt;/code&gt; ， &lt;code&gt;'&quot;'&lt;/code&gt; ， &lt;code&gt;'%'&lt;/code&gt; ， &lt;code&gt;&quot;'&quot;&lt;/code&gt; ， &lt;code&gt;','&lt;/code&gt; ， &lt;code&gt;'/'&lt;/code&gt; ， &lt;code&gt;':'&lt;/code&gt; ， &lt;code&gt;';'&lt;/code&gt; ， &lt;code&gt;'&amp;lt;'&lt;/code&gt; ， &lt;code&gt;'='&lt;/code&gt; ， &lt;code&gt;'&amp;gt;'&lt;/code&gt; ， &lt;code&gt;'@'&lt;/code&gt; 和 &lt;code&gt;&quot;`&quot;&lt;/code&gt; 不再转义。</target>
        </trans-unit>
        <trans-unit id="bc9c22b78b1f1cf43054d048df869b60a2b3ba4d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Previously &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exceptions#FutureWarning&quot;&gt;&lt;code&gt;FutureWarning&lt;/code&gt;&lt;/a&gt; were distinguished based on whether a feature was being removed entirely or changing its behaviour. They are now distinguished based on their intended audience and the way they&amp;rsquo;re handled by the default warnings filters.</source>
          <target state="translated">在版本3.7中进行了更改：根据功能是完全删除还是更改其行为来区分以前的&lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;exceptions#FutureWarning&quot;&gt; &lt;code&gt;FutureWarning&lt;/code&gt; &lt;/a&gt;。现在，根据目标受众和默认警告过滤器对它们的处理方式来区分它们。</target>
        </trans-unit>
        <trans-unit id="761b82bb9f3e39894a8ead078b602c393cc1c084" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Prior to Python 3.7 &lt;code&gt;Server.sockets&lt;/code&gt; used to return an internal list of server sockets directly. In 3.7 a copy of that list is returned.</source>
          <target state="translated">在版本3.7中更改：在Python 3.7之前， &lt;code&gt;Server.sockets&lt;/code&gt; 用于直接返回服务器套接字的内部列表。在3.7中，将返回该列表的副本。</target>
        </trans-unit>
        <trans-unit id="bfaf67a2306728f130643ef47a0f75b8c1c3dcfd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Python only explicitly guaranteed that it preserved the declaration order of keyword-only parameters as of version 3.7, although in practice this order had always been preserved in Python 3.</source>
          <target state="translated">在 3.7 版本中的变化:Python 只明确保证在 3.7 版本中保留了仅关键字参数的声明顺序,尽管在实践中这个顺序在 Python 3 中一直被保留。</target>
        </trans-unit>
        <trans-unit id="036c28f3ee4988343448982d5850ccafe53f1041" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Raises &lt;a href=&quot;exceptions#ModuleNotFoundError&quot;&gt;&lt;code&gt;ModuleNotFoundError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; if &lt;strong&gt;package&lt;/strong&gt; is in fact not a package (i.e. lacks a &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt;&lt;code&gt;__path__&lt;/code&gt;&lt;/a&gt; attribute).</source>
          <target state="translated">在版本3.7中进行了更改：如果&lt;strong&gt;包&lt;/strong&gt;实际上不是包（即，缺少&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__path__&quot;&gt; &lt;code&gt;__path__&lt;/code&gt; &lt;/a&gt;属性），则引发&lt;a href=&quot;exceptions#ModuleNotFoundError&quot;&gt; &lt;code&gt;ModuleNotFoundError&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c95a0f20939a3abed066ab198e67da5205994f7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Raises &lt;a href=&quot;exceptions#ModuleNotFoundError&quot;&gt;&lt;code&gt;ModuleNotFoundError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; if &lt;strong&gt;package&lt;/strong&gt; is in fact not a package (i.e. lacks a &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__path__&quot;&gt;&lt;code&gt;__path__&lt;/code&gt;&lt;/a&gt; attribute).</source>
          <target state="translated">在3.7版中进行了更改：如果&lt;strong&gt;package&lt;/strong&gt;实际上不是包（即，缺少&lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__path__&quot;&gt; &lt;code&gt;__path__&lt;/code&gt; &lt;/a&gt;属性），则引发&lt;a href=&quot;exceptions#ModuleNotFoundError&quot;&gt; &lt;code&gt;ModuleNotFoundError&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="78b99ed6875e90446566b4b67da8a139d9e9e6c4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Recursion adds entries in sorted order.</source>
          <target state="translated">3.7版本的变化:递归增加了排序的条目。</target>
        </trans-unit>
        <trans-unit id="2a0f34a446e8c24793f0ab66c660dd8465227596" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Recursion sorts directory entries.</source>
          <target state="translated">3.7版本的变化:递归对目录条目进行排序。</target>
        </trans-unit>
        <trans-unit id="569160f812f72c47a012b4e305500d9268a56598" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Removed &lt;a href=&quot;#token.AWAIT&quot;&gt;&lt;code&gt;AWAIT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#token.ASYNC&quot;&gt;&lt;code&gt;ASYNC&lt;/code&gt;&lt;/a&gt; tokens. &amp;ldquo;async&amp;rdquo; and &amp;ldquo;await&amp;rdquo; are now tokenized as &lt;a href=&quot;#token.NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; tokens.</source>
          <target state="translated">在版本3.7中进行了更改：删除了&lt;a href=&quot;#token.AWAIT&quot;&gt; &lt;code&gt;AWAIT&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#token.ASYNC&quot;&gt; &lt;code&gt;ASYNC&lt;/code&gt; &lt;/a&gt;令牌。现在，&amp;ldquo; async&amp;rdquo;和&amp;ldquo; await&amp;rdquo;被标记为&lt;a href=&quot;#token.NAME&quot;&gt; &lt;code&gt;NAME&lt;/code&gt; &lt;/a&gt;标记。</target>
        </trans-unit>
        <trans-unit id="1530550a15d6381c9d902a94f2bb626c5ce09e98" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Removed the &lt;em&gt;verbose&lt;/em&gt; parameter and the &lt;code&gt;_source&lt;/code&gt; attribute.</source>
          <target state="translated">在3.7版中进行了更改：删除了&lt;em&gt;详细&lt;/em&gt;参数和 &lt;code&gt;_source&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="065a9ef431a7874f0d88a1335a9951817b25dc01" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Return &amp;lsquo;utf-8&amp;rsquo; in the UTF-8 mode.</source>
          <target state="translated">在3.7版中进行了更改：在UTF-8模式下返回&amp;ldquo; utf-8&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="80a4f1a4d9212d250deafd14b1f8f067da07e8cb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Return &lt;em&gt;fd2&lt;/em&gt; on success. Previously, &lt;code&gt;None&lt;/code&gt; was always returned.</source>
          <target state="translated">在3.7版中进行了更改：成功返回&lt;em&gt;fd2&lt;/em&gt;。以前，始终 &lt;code&gt;None&lt;/code&gt; 返回任何内容。</target>
        </trans-unit>
        <trans-unit id="c8e3d19e352067d130873d8534ad58df73e4991b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Returning awaitable objects from &lt;code&gt;__aiter__&lt;/code&gt; is no longer supported.</source>
          <target state="translated">在版本3.7中进行了更改：不再支持从 &lt;code&gt;__aiter__&lt;/code&gt; 返回等待对象。</target>
        </trans-unit>
        <trans-unit id="25f4bb9dd33ebe139dbd78dc864134fae375d1a5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Server object is an asynchronous context manager since Python 3.7.</source>
          <target state="translated">3.7版本的变化:从Python 3.7开始,Server对象是一个异步的上下文管理器。</target>
        </trans-unit>
        <trans-unit id="f6708785ca9656deb39bac7ad9a1f81ab835388c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Support of the &lt;code&gt;'If-Modified-Since'&lt;/code&gt; header.</source>
          <target state="translated">在版本3.7中更改：支持 &lt;code&gt;'If-Modified-Since'&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="313dcbd62279ce0fa999ad115bed2f485bc331ca" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;code&gt;register()&lt;/code&gt; attribute supports using type annotations.</source>
          <target state="translated">在版本3.7中更改： &lt;code&gt;register()&lt;/code&gt; 属性支持使用类型注释。</target>
        </trans-unit>
        <trans-unit id="6d355da2c48c4edbf9bfdcfc58a38ae0ab6757b5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;code&gt;sentinel&lt;/code&gt; attributes now preserve their identity when they are &lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copied&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickled&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中进行了更改：&lt;a href=&quot;copy#module-copy&quot;&gt; &lt;code&gt;copied&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickled&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;sentinel&lt;/code&gt; 属性现在可以保留其标识。</target>
        </trans-unit>
        <trans-unit id="1473a3f137830f618ab59647a1642922e4b467f2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;context&lt;/em&gt; keyword-only parameter was added. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">在版本3.7中更改：添加了仅&lt;em&gt;上下文&lt;/em&gt;关键字参数。有关更多详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="281531de0129d817a592fecc05ed6fd2cd979827" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;context&lt;/em&gt; keyword-only parameter was added. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">在版本3.7中更改：添加了仅&lt;em&gt;上下文&lt;/em&gt;关键字参数。有关更多详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70e777e2ff00d859e456bcb40962bedb3be7dc81" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;context&lt;/em&gt; keyword-only parameter was added. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">在版本3.7中更改：添加了仅&lt;em&gt;上下文&lt;/em&gt;关键字参数。有关更多详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0567&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 567&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23966d390a7fbbf69b4ed87e59fafe8930184ae9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;defaults&lt;/em&gt; argument is read with &lt;a href=&quot;#configparser.ConfigParser.read_dict&quot;&gt;&lt;code&gt;read_dict()&lt;/code&gt;&lt;/a&gt;, providing consistent behavior across the parser: non-string keys and values are implicitly converted to strings.</source>
          <target state="translated">在版本3.7中进行了更改：&lt;em&gt;defaults&lt;/em&gt;参数使用&lt;a href=&quot;#configparser.ConfigParser.read_dict&quot;&gt; &lt;code&gt;read_dict()&lt;/code&gt; 进行&lt;/a&gt;读取，从而在解析器中提供一致的行为：非字符串键和值隐式转换为字符串。</target>
        </trans-unit>
        <trans-unit id="ace86151c580273a23d7f1daa7c9690a08d668eb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;invalidation_mode&lt;/em&gt; parameter was added as specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0552&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 552&lt;/strong&gt;&lt;/a&gt;. If the &lt;code id=&quot;index-6&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; environment variable is set, &lt;em&gt;invalidation_mode&lt;/em&gt; will be forced to &lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt;&lt;code&gt;PycInvalidationMode.CHECKED_HASH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中更改：已按照&lt;a href=&quot;https://www.python.org/dev/peps/pep-0552&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 552中的&lt;/strong&gt;&lt;/a&gt;指定添加了&lt;em&gt;invalidation_mode&lt;/em&gt;参数。如果设置了 &lt;code id=&quot;index-6&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; 环境变量，则&lt;em&gt;invalidation_mode&lt;/em&gt;将被强制为&lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt; &lt;code&gt;PycInvalidationMode.CHECKED_HASH&lt;/code&gt; &lt;/a&gt;。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7acc57bdf60e371b544084df05cbaf9d4e70bf27" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;invalidation_mode&lt;/em&gt; parameter was added.</source>
          <target state="translated">在版本3.7中更改：添加了&lt;em&gt;invalidation_mode&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="30bb44696801b120c3eae99aa7bfb0a254272e2c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;level&lt;/em&gt; parameter was defaulted to level &lt;code&gt;CRITICAL&lt;/code&gt;. See Issue #28524 for more information about this change.</source>
          <target state="translated">在版本3.7中更改：&lt;em&gt;level&lt;/em&gt;参数默认为level &lt;code&gt;CRITICAL&lt;/code&gt; 。有关此更改的更多信息，请参见问题＃28524。</target>
        </trans-unit>
        <trans-unit id="59a3e1d930e416389193cd03687cd0c8da4d6344" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;mode&lt;/em&gt; argument no longer affects the file permission bits of newly-created intermediate-level directories.</source>
          <target state="translated">在版本3.7中更改：&lt;em&gt;mode&lt;/em&gt;参数不再影响新创建的中间级目录的文件权限位。</target>
        </trans-unit>
        <trans-unit id="4d29f7b5c750846336eeecbfa4ebc1699a9fb698" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;monetary&lt;/em&gt; keyword parameter was added.</source>
          <target state="translated">在3.7版中进行了更改：添加了&lt;em&gt;money&lt;/em&gt;关键字参数。</target>
        </trans-unit>
        <trans-unit id="e417c4c711ce296d60a6aa737bf6bbc748b0b665" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;mp_context&lt;/em&gt; argument was added to allow users to control the start_method for worker processes created by the pool.</source>
          <target state="translated">在版本3.7中更改：添加了&lt;em&gt;mp_context&lt;/em&gt;参数，以允许用户控制池创建的工作进程的&lt;em&gt;start_method&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="4c80129eb003cdb51a3993fac5f9a9d2c5811d28" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;path&lt;/em&gt; parameter can now be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;</source>
          <target state="translated">在版本3.7中更改：&lt;em&gt;path&lt;/em&gt;参数现在可以是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;类似路径的对象&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4da753b5f2d08188ac32f8db89a33688f0a0e9ec" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;path&lt;/em&gt; parameter can now be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中更改：&lt;em&gt;path&lt;/em&gt;参数现在可以是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;类似路径的object&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43a5807feb03fe9d75fda71bafcad32aaacd8d7e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;path&lt;/em&gt; parameter can now be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;</source>
          <target state="translated">在版本3.7中更改：&lt;em&gt;path&lt;/em&gt;参数现在可以是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;类似路径的对象&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="977c225aaadba516314cf342a2aad162140ba5d1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;path&lt;/em&gt; parameter can now be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中更改：&lt;em&gt;path&lt;/em&gt;参数现在可以是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;类似路径的object&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1bf140b37fb4c152fda270d63a101e9dd03431a4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;path&lt;/em&gt; parameter can now be a &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">在版本3.7中更改：&lt;em&gt;path&lt;/em&gt;参数现在可以是&lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="ffabd493ab6e9cd5376b767738c2ddf3a3b582cb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The &lt;em&gt;size&lt;/em&gt; argument is now optional.</source>
          <target state="translated">在3.7版中进行了更改：&lt;em&gt;size&lt;/em&gt;参数现在是可选的。</target>
        </trans-unit>
        <trans-unit id="29dacabfaa9c6c343bb8aefa1e6d2d71cb6e9b1e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The CAN_ISOTP protocol was added.</source>
          <target state="translated">3.7版的变化:增加了CAN_ISOTP协议。</target>
        </trans-unit>
        <trans-unit id="1c20bc4392805d9f7507eec633eb2ec48c2a8ba5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The DST offset is not restricted to a whole number of minutes.</source>
          <target state="translated">在3.7版本中的变化:DST偏移不限于整数分钟。</target>
        </trans-unit>
        <trans-unit id="a3917c6efd138287b9c437bd80c55daa1283692b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The UTC offset is not restricted to a whole number of minutes.</source>
          <target state="translated">3.7版的变化:UTC偏移不限于整数分钟。</target>
        </trans-unit>
        <trans-unit id="9421e67326aa910e6b552dd9cd1aa86a797b35f9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The attribute is now always ASCII text. When &lt;code&gt;server_hostname&lt;/code&gt; is an internationalized domain name (IDN), this attribute now stores the A-label form (&lt;code&gt;&quot;xn--pythn-mua.org&quot;&lt;/code&gt;), rather than the U-label form (&lt;code&gt;&quot;pyth&amp;ouml;n.org&quot;&lt;/code&gt;).</source>
          <target state="translated">在版本3.7中更改：该属性现在始终是ASCII文本。当 &lt;code&gt;server_hostname&lt;/code&gt; 是国际化域名（IDN）时，此属性现在存储A标签格式（ &lt;code&gt;&quot;xn--pythn-mua.org&quot;&lt;/code&gt; ），而不是U标签格式（ &lt;code&gt;&quot;pyth&amp;ouml;n.org&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0dce6902c5777906cc0dc6ca96bddf065b4ec699" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The exception is now an alias for &lt;a href=&quot;#ssl.SSLCertVerificationError&quot;&gt;&lt;code&gt;SSLCertVerificationError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中进行了更改：异常现在是&lt;a href=&quot;#ssl.SSLCertVerificationError&quot;&gt; &lt;code&gt;SSLCertVerificationError&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="5e3661bc361b4a987eae38908309262c1f621680" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The format string type is now &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中更改：格式字符串类型现在是&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03d454b402d7b7f7235b9a5f3e42750fe257f48e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The function is no longer used to TLS connections. Hostname matching is now performed by OpenSSL.</source>
          <target state="translated">3.7版本的变化:该功能不再用于TLS连接。主机名匹配现在由OpenSSL执行。</target>
        </trans-unit>
        <trans-unit id="52d6a0a900003c0563bb16d76ee2a511ba0bcc55" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The function now always returns &lt;code&gt;UTF-8&lt;/code&gt; on Android or if the UTF-8 mode is enabled.</source>
          <target state="translated">在版本3.7中更改：该函数现在始终在Android上或者如果启用了UTF-8模式，始终返回 &lt;code&gt;UTF-8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="055741cfc92d31ff4fd42273ed84921147f3853c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The function now sets temporarily the &lt;code&gt;LC_CTYPE&lt;/code&gt; locale to the &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale in some cases.</source>
          <target state="translated">在版本3.7中进行了更改：现在，在某些情况下，该函数现在将 &lt;code&gt;LC_CTYPE&lt;/code&gt; 语言环境临时设置为 &lt;code&gt;LC_NUMERIC&lt;/code&gt; 语言环境。</target>
        </trans-unit>
        <trans-unit id="38a0c3ed9c4f853162b6ebd38629f4478e19fe49" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The keyword-only argument &lt;em&gt;header&lt;/em&gt;.</source>
          <target state="translated">在版本3.7中更改：仅关键字参数&lt;em&gt;标头&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="449bdcc9d03d0a7ab5383043965b98923fd3eaa1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The letters &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'L'&lt;/code&gt; and &lt;code&gt;'u'&lt;/code&gt; also can be used in a group.</source>
          <target state="translated">在版本3.7中更改：字母 &lt;code&gt;'a'&lt;/code&gt; ， &lt;code&gt;'L'&lt;/code&gt; 和 &lt;code&gt;'u'&lt;/code&gt; 也可以在组中使用。</target>
        </trans-unit>
        <trans-unit id="df62ee5fed95a6034869b1248da4f8b086e9f085" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method is idempotent, i.e. it can be called when the transport is already paused or closed.</source>
          <target state="translated">3.7版的变化:该方法是幂等的,也就是说,当传输已经暂停或关闭时,它可以被调用。</target>
        </trans-unit>
        <trans-unit id="9799808ac3056e2dbf1f2ad97c6d039d2e8934b9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method is idempotent, i.e. it can be called when the transport is already reading.</source>
          <target state="translated">3.7版本的变化:该方法是幂等的,也就是说,当传输已经在读的时候,它可以被调用。</target>
        </trans-unit>
        <trans-unit id="eeebc224c5d44a3e3b340ee44af511d2ee66fbb5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method no longer applies &lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt;&lt;code&gt;SOCK_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag on &lt;a href=&quot;#socket.socket.type&quot;&gt;&lt;code&gt;socket.type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在3.7版本中更改：该方法已不再适用&lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt; &lt;code&gt;SOCK_NONBLOCK&lt;/code&gt; &lt;/a&gt;旗&lt;a href=&quot;#socket.socket.type&quot;&gt; &lt;code&gt;socket.type&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c07d5e5cc733d96ef81bcc3c76809605d89d126" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method no longer toggles &lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt;&lt;code&gt;SOCK_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag on &lt;a href=&quot;#socket.socket.type&quot;&gt;&lt;code&gt;socket.type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在3.7版本中更改：该方法不再切换&lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt; &lt;code&gt;SOCK_NONBLOCK&lt;/code&gt; &lt;/a&gt;旗&lt;a href=&quot;#socket.socket.type&quot;&gt; &lt;code&gt;socket.type&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82200f6389afb9d8e7627597186f4f850f09540f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method returns on instance of &lt;a href=&quot;#ssl.SSLContext.sslobject_class&quot;&gt;&lt;code&gt;SSLContext.sslobject_class&lt;/code&gt;&lt;/a&gt; instead of hard-coded &lt;a href=&quot;#ssl.SSLObject&quot;&gt;&lt;code&gt;SSLObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中更改：该方法返回&lt;a href=&quot;#ssl.SSLContext.sslobject_class&quot;&gt; &lt;code&gt;SSLContext.sslobject_class&lt;/code&gt; &lt;/a&gt;实例，而不是硬编码的&lt;a href=&quot;#ssl.SSLObject&quot;&gt; &lt;code&gt;SSLObject&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb997593448d4de056ec738e74e2faab6d14c6ef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The method returns on instance of &lt;a href=&quot;#ssl.SSLContext.sslsocket_class&quot;&gt;&lt;code&gt;SSLContext.sslsocket_class&lt;/code&gt;&lt;/a&gt; instead of hard-coded &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.7中进行了更改：该方法返回&lt;a href=&quot;#ssl.SSLContext.sslsocket_class&quot;&gt; &lt;code&gt;SSLContext.sslsocket_class&lt;/code&gt; &lt;/a&gt;实例，而不是硬编码的&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b235d38a06004eec009ffa472259b567320d4c62" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The new &lt;a href=&quot;devmode#devmode&quot;&gt;Python Development Mode&lt;/a&gt; can now also be used to enable the debug mode.</source>
          <target state="translated">在3.7版中进行了更改：新的&lt;a href=&quot;devmode#devmode&quot;&gt;Python开发模式&lt;/a&gt;现在也可以用于启用调试模式。</target>
        </trans-unit>
        <trans-unit id="ad9db1553c06c7191f9ee0b4ed53874f6cd8b140" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: The new &lt;code&gt;-X dev&lt;/code&gt; command line option can now also be used to enable the debug mode.</source>
          <target state="translated">在版本3.7中进行了更改：新的 &lt;code&gt;-X dev&lt;/code&gt; 命令行选项现在也可以用于启用调试模式。</target>
        </trans-unit>
        <trans-unit id="1c77840ad2d5592bc00c879318874ec74af0fb9b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: This can now handle coroutine and asynchronous generator objects.</source>
          <target state="translated">3.7版本的变化:现在可以处理coroutine和异步生成器对象。</target>
        </trans-unit>
        <trans-unit id="19c46c9fa367b68cf4925782a73a05f9e5ca8337" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: This function is now always available.</source>
          <target state="translated">3.7版的变化:这个功能现在一直可用。</target>
        </trans-unit>
        <trans-unit id="00bfb8b4f668c98ef6c4d0b1a36d185e0a634671" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: This module used to be optional, it is now always available.</source>
          <target state="translated">3.7版的变化:这个模块过去是可选的,现在是一直可用的。</target>
        </trans-unit>
        <trans-unit id="1eaae74ea8a6601e07e5dfc8fa087a5ddec73403" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Universally administered MAC addresses are preferred over locally administered MAC addresses, since the former are guaranteed to be globally unique, while the latter are not.</source>
          <target state="translated">3.7版本的变化:普遍管理的MAC地址比本地管理的MAC地址更受欢迎,因为前者保证了全局唯一,而后者则不然。</target>
        </trans-unit>
        <trans-unit id="2f5d983764356be79d6081c58b524d4cf280cb8e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: Unknown escapes in &lt;em&gt;repl&lt;/em&gt; consisting of &lt;code&gt;'\'&lt;/code&gt; and an ASCII letter now are errors.</source>
          <target state="translated">在版本3.7中进行了更改：&lt;em&gt;repl中&lt;/em&gt;由 &lt;code&gt;'\'&lt;/code&gt; 和ASCII字母组成的未知转义&lt;em&gt;符&lt;/em&gt;现在是错误。</target>
        </trans-unit>
        <trans-unit id="0fd0e1e862fc7e3a3795d86d71b9a8d370a6f027" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: When &lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt;&lt;code&gt;SOCK_NONBLOCK&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#socket.SOCK_CLOEXEC&quot;&gt;&lt;code&gt;SOCK_CLOEXEC&lt;/code&gt;&lt;/a&gt; bit flags are applied to &lt;em&gt;type&lt;/em&gt; they are cleared, and &lt;a href=&quot;#socket.socket.type&quot;&gt;&lt;code&gt;socket.type&lt;/code&gt;&lt;/a&gt; will not reflect them. They are still passed to the underlying system &lt;code&gt;socket()&lt;/code&gt; call. Therefore,</source>
          <target state="translated">在版本3.7中进行了更改：当&lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt; &lt;code&gt;SOCK_NONBLOCK&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#socket.SOCK_CLOEXEC&quot;&gt; &lt;code&gt;SOCK_CLOEXEC&lt;/code&gt; &lt;/a&gt;位标志应用于&lt;em&gt;类型时，&lt;/em&gt;它们将被清除，而&lt;a href=&quot;#socket.socket.type&quot;&gt; &lt;code&gt;socket.type&lt;/code&gt; &lt;/a&gt;将不反映它们。它们仍然传递给基础系统的 &lt;code&gt;socket()&lt;/code&gt; 调用。所以，</target>
        </trans-unit>
        <trans-unit id="5dd57134070a7ae47d1723a0687270c3df408aba" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: When &lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt;&lt;code&gt;SOCK_NONBLOCK&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#socket.SOCK_CLOEXEC&quot;&gt;&lt;code&gt;SOCK_CLOEXEC&lt;/code&gt;&lt;/a&gt; bit flags are applied to &lt;em&gt;type&lt;/em&gt; they are cleared, and &lt;a href=&quot;#socket.socket.type&quot;&gt;&lt;code&gt;socket.type&lt;/code&gt;&lt;/a&gt; will not reflect them. They are still passed to the underlying system &lt;code&gt;socket()&lt;/code&gt; call. Therefore::</source>
          <target state="translated">在版本3.7中更改：当&lt;a href=&quot;#socket.SOCK_NONBLOCK&quot;&gt; &lt;code&gt;SOCK_NONBLOCK&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#socket.SOCK_CLOEXEC&quot;&gt; &lt;code&gt;SOCK_CLOEXEC&lt;/code&gt; &lt;/a&gt;位标志应用于&lt;em&gt;类型时，&lt;/em&gt;它们将被清除，而&lt;a href=&quot;#socket.socket.type&quot;&gt; &lt;code&gt;socket.type&lt;/code&gt; &lt;/a&gt;将不反映它们。它们仍然传递给基础系统的 &lt;code&gt;socket()&lt;/code&gt; 调用。因此：：</target>
        </trans-unit>
        <trans-unit id="d74669ae73c841e0ede8298cbe80aed7df5b0636" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: When &lt;em&gt;aw&lt;/em&gt; is cancelled due to a timeout, &lt;code&gt;wait_for&lt;/code&gt; waits for &lt;em&gt;aw&lt;/em&gt; to be cancelled. Previously, it raised &lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt;&lt;code&gt;asyncio.TimeoutError&lt;/code&gt;&lt;/a&gt; immediately.</source>
          <target state="translated">在版本3.7中进行了更改：当&lt;em&gt;aw&lt;/em&gt;由于超时而被取消时， &lt;code&gt;wait_for&lt;/code&gt; 等待&lt;em&gt;aw&lt;/em&gt;被取消。以前，它立即引发&lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt; &lt;code&gt;asyncio.TimeoutError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7de4997d181a00a8d7d4f85ca7f84989adab5e4d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: When formatting a number with the &lt;code&gt;n&lt;/code&gt; type, the function sets temporarily the &lt;code&gt;LC_CTYPE&lt;/code&gt; locale to the &lt;code&gt;LC_NUMERIC&lt;/code&gt; locale in some cases.</source>
          <target state="translated">在版本3.7中进行了更改：在使用 &lt;code&gt;n&lt;/code&gt; 类型格式化数字时，该函数在某些情况下会暂时将 &lt;code&gt;LC_CTYPE&lt;/code&gt; 语言环境设置为 &lt;code&gt;LC_NUMERIC&lt;/code&gt; 语言环境。</target>
        </trans-unit>
        <trans-unit id="f11c53613bb7c772c67d7c12c89026d5e8d86eef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: When the &lt;code&gt;%z&lt;/code&gt; directive is provided to the &lt;code&gt;strptime()&lt;/code&gt; method, the UTC offsets can have a colon as a separator between hours, minutes and seconds. For example, &lt;code&gt;'+01:00:00'&lt;/code&gt; will be parsed as an offset of one hour. In addition, providing &lt;code&gt;'Z'&lt;/code&gt; is identical to &lt;code&gt;'+00:00'&lt;/code&gt;.</source>
          <target state="translated">在版本3.7中更改：将 &lt;code&gt;%z&lt;/code&gt; 指令提供给 &lt;code&gt;strptime()&lt;/code&gt; 方法时，UTC偏移量可以在小时，分钟和秒之间使用冒号作为分隔符。例如， &lt;code&gt;'+01:00:00'&lt;/code&gt; 将被解析为一小时的偏移量。另外，提供 &lt;code&gt;'Z'&lt;/code&gt; 与 &lt;code&gt;'+00:00'&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="383d94cc2ab687e7b8289bf5f5b782e2f674dcb0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: When used with C-API subinterpreters, registered functions are local to the interpreter they were registered in.</source>
          <target state="translated">在3.7版本中改变了:当与C-API子解释器一起使用时,所注册的函数是在其注册的解释器中的本地函数。</target>
        </trans-unit>
        <trans-unit id="e6bf880f19721932f7193c2bc9a1aaf9d89f415f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: for IPv6 multicast addresses, string representing an address will not contain &lt;code&gt;%scope&lt;/code&gt; part.</source>
          <target state="translated">在版本3.7中进行了更改：对于IPv6多播地址，表示地址的字符串将不包含 &lt;code&gt;%scope&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="d092d76822c8fa9f01dbc6fb7e078b649abde651" translate="yes" xml:space="preserve">
          <source>Changed in version 3.7: for IPv6 multicast addresses, string representing an address will not contain &lt;code&gt;%scope_id&lt;/code&gt; part.</source>
          <target state="translated">在版本3.7中更改：对于IPv6多播地址，表示地址的字符串将不包含 &lt;code&gt;%scope_id&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="f3a8e9c88f4b5098bfe5936bd969ca2d449dfa3e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8.</source>
          <target state="translated">在3.8版本中有所改变。</target>
        </trans-unit>
        <trans-unit id="df4658034943acda362e8e981becbd8548ca8cf5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8.1: Exceptions derived from &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; but not &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; are no longer suppressed.</source>
          <target state="translated">在版本3.8.1中进行了更改：不再抑制从Exception继承但不是&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; 的&lt;/a&gt;&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8056264cda6c7ccd83ceeb269534817f45c1471f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8.1: IPv6 address strings no longer have a trailing new line.</source>
          <target state="translated">在3.8.1版本中有所改变。IPv6地址字符串不再有尾部的新行。</target>
        </trans-unit>
        <trans-unit id="d06d61415c6331ec913d49936788330c97e215e6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8.1: The &lt;em&gt;reuse_address&lt;/em&gt; parameter is no longer supported due to security concerns.</source>
          <target state="translated">在版本3.8.1中进行了更改：由于安全方面的考虑，不再支持&lt;em&gt;redirect_address&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="1706a2be0443070d845b707ec9bc7c136db6a1a7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &amp;ldquo;unicode_internal&amp;rdquo; codec is removed.</source>
          <target state="translated">在版本3.8中更改：&amp;ldquo; unicode_internal&amp;rdquo;编解码器已删除。</target>
        </trans-unit>
        <trans-unit id="af0f1ad6011a44c2713308e021dfbb91fd5b6f3b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; is now a subclass of &lt;a href=&quot;exceptions#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中更改：&lt;a href=&quot;#asyncio.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; &lt;/a&gt;现在是&lt;a href=&quot;exceptions#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="a6e38f3cbadfb325f4bb500eb3e0d7bd2266fbbd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#bytes.hex&quot;&gt;&lt;code&gt;bytes.hex()&lt;/code&gt;&lt;/a&gt; now supports optional &lt;em&gt;sep&lt;/em&gt; and &lt;em&gt;bytes_per_sep&lt;/em&gt; parameters to insert separators between bytes in the hex output.</source>
          <target state="translated">在3.8版中进行了更改：&lt;a href=&quot;#bytes.hex&quot;&gt; &lt;code&gt;bytes.hex()&lt;/code&gt; &lt;/a&gt;现在支持可选的&lt;em&gt;sep&lt;/em&gt;和&lt;em&gt;bytes_per_sep&lt;/em&gt;参数，以便在十六进制输出的字节之间插入分隔符。</target>
        </trans-unit>
        <trans-unit id="81c31c860eba7acae35d3100c31cfbdd21836c93" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#csv.DictWriter.writeheader&quot;&gt;&lt;code&gt;writeheader()&lt;/code&gt;&lt;/a&gt; now also returns the value returned by the &lt;a href=&quot;#csv.csvwriter.writerow&quot;&gt;&lt;code&gt;csvwriter.writerow()&lt;/code&gt;&lt;/a&gt; method it uses internally.</source>
          <target state="translated">在3.8版中进行了更改：&lt;a href=&quot;#csv.DictWriter.writeheader&quot;&gt; &lt;code&gt;writeheader()&lt;/code&gt; &lt;/a&gt;现在还返回其内部使用的&lt;a href=&quot;#csv.csvwriter.writerow&quot;&gt; &lt;code&gt;csvwriter.writerow()&lt;/code&gt; &lt;/a&gt;方法返回的值。</target>
        </trans-unit>
        <trans-unit id="6803748c888592e4126275b8b69ea85dabc1ca37" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#os.path.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.path.lexists&quot;&gt;&lt;code&gt;lexists()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.path.isdir&quot;&gt;&lt;code&gt;isdir()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.path.isfile&quot;&gt;&lt;code&gt;isfile()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.path.islink&quot;&gt;&lt;code&gt;islink()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.path.ismount&quot;&gt;&lt;code&gt;ismount()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;False&lt;/code&gt; instead of raising an exception for paths that contain characters or bytes unrepresentable at the OS level.</source>
          <target state="translated">在版本3.8中进行了更改：&lt;a href=&quot;#os.path.lexists&quot;&gt; &lt;code&gt;lexists()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#os.path.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt;，lexists（），&lt;a href=&quot;#os.path.isdir&quot;&gt; &lt;code&gt;isdir()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.path.isfile&quot;&gt; &lt;code&gt;isfile()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.path.islink&quot;&gt; &lt;code&gt;islink()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.path.ismount&quot;&gt; &lt;code&gt;ismount()&lt;/code&gt; &lt;/a&gt;现在返回 &lt;code&gt;False&lt;/code&gt; ,而不是为包含在操作系统级别无法表示的字符或字节的路径引发异常。</target>
        </trans-unit>
        <trans-unit id="c3b5cd964e3b5bf9c2c811150970155ae3bbda23" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#pathlib.Path.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_dir&quot;&gt;&lt;code&gt;is_dir()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_file&quot;&gt;&lt;code&gt;is_file()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_mount&quot;&gt;&lt;code&gt;is_mount()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_symlink&quot;&gt;&lt;code&gt;is_symlink()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_block_device&quot;&gt;&lt;code&gt;is_block_device()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_char_device&quot;&gt;&lt;code&gt;is_char_device()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_fifo&quot;&gt;&lt;code&gt;is_fifo()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pathlib.Path.is_socket&quot;&gt;&lt;code&gt;is_socket()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;False&lt;/code&gt; instead of raising an exception for paths that contain characters unrepresentable at the OS level.</source>
          <target state="translated">在版本3.8中更改：&lt;a href=&quot;#pathlib.Path.is_dir&quot;&gt; &lt;code&gt;is_dir()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#pathlib.Path.exists&quot;&gt; &lt;code&gt;exists()&lt;/code&gt; &lt;/a&gt;，is_dir（），&lt;a href=&quot;#pathlib.Path.is_file&quot;&gt; &lt;code&gt;is_file()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#pathlib.Path.is_mount&quot;&gt; &lt;code&gt;is_mount()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#pathlib.Path.is_symlink&quot;&gt; &lt;code&gt;is_symlink()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#pathlib.Path.is_block_device&quot;&gt; &lt;code&gt;is_block_device()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#pathlib.Path.is_char_device&quot;&gt; &lt;code&gt;is_char_device()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#pathlib.Path.is_fifo&quot;&gt; &lt;code&gt;is_fifo()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#pathlib.Path.is_socket&quot;&gt; &lt;code&gt;is_socket()&lt;/code&gt; &lt;/a&gt;现在返回 &lt;code&gt;False&lt;/code&gt; ,而不是引发路径异常包含在操作系统级别无法代表的字符。</target>
        </trans-unit>
        <trans-unit id="100447f373cf908f962f93a2eb840b7b2d13797c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt;&lt;code&gt;create_autospec()&lt;/code&gt;&lt;/a&gt; now returns an &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt;&lt;code&gt;AsyncMock&lt;/code&gt;&lt;/a&gt; if the target is an async function.</source>
          <target state="translated">在版本3.8中进行了更改：如果目标是异步函数，则&lt;a href=&quot;#unittest.mock.create_autospec&quot;&gt; &lt;code&gt;create_autospec()&lt;/code&gt; &lt;/a&gt;现在将返回&lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt; &lt;code&gt;AsyncMock&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a64ffb85f2cea7c0ecfd277773ab2ec9b42c583" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; now returns an &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt;&lt;code&gt;AsyncMock&lt;/code&gt;&lt;/a&gt; if the target is an async function.</source>
          <target state="translated">在3.8版中进行了更改：如果目标是异步函数，则&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;现在将返回&lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt; &lt;code&gt;AsyncMock&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="97bc0a31259da0ed63530c33af10151216b7c662" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; now returns the patched dictionary when used as a context manager.</source>
          <target state="translated">在3.8版中进行了更改：&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt;现在用作上下文管理器时返回修补的字典。</target>
        </trans-unit>
        <trans-unit id="6365e06841bd458059d48832636ce043a87c70f4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;a href=&quot;sys#sys.unraisablehook&quot;&gt;&lt;code&gt;sys.unraisablehook()&lt;/code&gt;&lt;/a&gt; is now used to handle unhandled exceptions.</source>
          <target state="translated">在3.8版中进行了更改：&lt;a href=&quot;sys#sys.unraisablehook&quot;&gt; &lt;code&gt;sys.unraisablehook()&lt;/code&gt; &lt;/a&gt;现在用于处理未处理的异常。</target>
        </trans-unit>
        <trans-unit id="2da8582469e396d8a0108eab31e644d75023c56b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;code&gt;cp65001&lt;/code&gt; is now an alias to &lt;code&gt;utf_8&lt;/code&gt;.</source>
          <target state="translated">在版本3.8中更改： &lt;code&gt;cp65001&lt;/code&gt; 现在是 &lt;code&gt;utf_8&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="2ff13e8054b77640eea691e900144e858f2ac641" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;code&gt;selection()&lt;/code&gt; no longer takes arguments. For changing the selection state use the following selection methods.</source>
          <target state="translated">在3.8版中进行了更改： &lt;code&gt;selection()&lt;/code&gt; 不再接受参数。要更改选择状态，请使用以下选择方法。</target>
        </trans-unit>
        <trans-unit id="a7106000ee2db61cf6344717ae00196ac8fe857b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;em&gt;args&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; if &lt;em&gt;shell&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; and a sequence containing bytes and path-like objects on Windows.</source>
          <target state="translated">在版本3.8中进行了更改：如果&lt;em&gt;shell&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ，则&lt;em&gt;args&lt;/em&gt;参数将接受类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;，并且在Windows上将包含字节和类似路径的对象的序列。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1140d6269adb865a19063c48303092b2bb4a3877" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;em&gt;args&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; if &lt;em&gt;shell&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; and a sequence containing bytes and path-like objects on Windows.</source>
          <target state="translated">在版本3.8中进行了更改：如果&lt;em&gt;shell&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ，则&lt;em&gt;args&lt;/em&gt;参数将接受类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;，并且在Windows上将包含字节和类似路径的对象的序列。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f42e4cbdf9e33b72d6f68cb69b4b3398c2524035" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;em&gt;cwd&lt;/em&gt; parameter accepts a bytes object on Windows.</source>
          <target state="translated">在版本3.8中更改：&lt;em&gt;cwd&lt;/em&gt;参数在Windows上接受一个字节对象。</target>
        </trans-unit>
        <trans-unit id="2e26498fa0f7b1bd3cc95e135354843c36c794c6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;em&gt;executable&lt;/em&gt; parameter accepts a bytes and &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on Windows.</source>
          <target state="translated">在3.8版中更改：&lt;em&gt;可执行&lt;/em&gt;参数在Windows上接受字节和&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;类似路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e78a44bc371fa688759d3b57747112027c664b5c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: &lt;em&gt;executable&lt;/em&gt; parameter accepts a bytes and &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; on Windows.</source>
          <target state="translated">在版本3.8中更改：&lt;em&gt;可执行&lt;/em&gt;参数在Windows上接受字节和&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;类似路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="667a5e0fb76f46a5241c9b37471c704d1afd7145" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: A database opened with flags &lt;code&gt;'r'&lt;/code&gt; is now read-only. Opening with flags &lt;code&gt;'r'&lt;/code&gt; and &lt;code&gt;'w'&lt;/code&gt; no longer creates a database if it does not exist.</source>
          <target state="translated">在版本3.8中进行了更改：现在，打开带有标志 &lt;code&gt;'r'&lt;/code&gt; 数据库为只读。如果标记 &lt;code&gt;'r'&lt;/code&gt; 和 &lt;code&gt;'w'&lt;/code&gt; 不存在，则不再创建该数据库。</target>
        </trans-unit>
        <trans-unit id="60260c0ef18230115e3bd205b05c5e5eb434f63f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; and a bytes object on Windows.</source>
          <target state="translated">在版本3.8中更改：在Windows上接受类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;和字节对象。</target>
        </trans-unit>
        <trans-unit id="fa24bbd3287e67ba72c5a826903dc861085171c9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; and a bytes object on Windows.</source>
          <target state="translated">在版本3.8中更改：在Windows上接受类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;和字节对象。</target>
        </trans-unit>
        <trans-unit id="49e5b893ff9de5c7f9e0e41ebc36e6ebfa0c6cd8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Add a new command line interface with a usage. By default, when you will execute the CLI, the default compression level is 6.</source>
          <target state="translated">在3.8版本中进行了修改。增加了一个新的命令行界面,有了用法。默认情况下,当你执行CLI时,默认压缩级别为6。</target>
        </trans-unit>
        <trans-unit id="1a5de22d6c4d871be360ba8767875ad595a219b3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;a href=&quot;#token.TYPE_COMMENT&quot;&gt;&lt;code&gt;TYPE_COMMENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#token.TYPE_IGNORE&quot;&gt;&lt;code&gt;TYPE_IGNORE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#token.COLONEQUAL&quot;&gt;&lt;code&gt;COLONEQUAL&lt;/code&gt;&lt;/a&gt;. Added &lt;a href=&quot;#token.AWAIT&quot;&gt;&lt;code&gt;AWAIT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#token.ASYNC&quot;&gt;&lt;code&gt;ASYNC&lt;/code&gt;&lt;/a&gt; tokens back (they&amp;rsquo;re needed to support parsing older Python versions for &lt;a href=&quot;ast#ast.parse&quot;&gt;&lt;code&gt;ast.parse()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;feature_version&lt;/code&gt; set to 6 or lower).</source>
          <target state="translated">在3.8版中进行了更改：添加了&lt;a href=&quot;#token.TYPE_COMMENT&quot;&gt; &lt;code&gt;TYPE_COMMENT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#token.TYPE_IGNORE&quot;&gt; &lt;code&gt;TYPE_IGNORE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#token.COLONEQUAL&quot;&gt; &lt;code&gt;COLONEQUAL&lt;/code&gt; &lt;/a&gt;。新增&lt;a href=&quot;#token.AWAIT&quot;&gt; &lt;code&gt;AWAIT&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#token.ASYNC&quot;&gt; &lt;code&gt;ASYNC&lt;/code&gt; &lt;/a&gt;令牌回（他们需要支持解析老的Python版本&lt;a href=&quot;ast#ast.parse&quot;&gt; &lt;code&gt;ast.parse()&lt;/code&gt; &lt;/a&gt;与 &lt;code&gt;feature_version&lt;/code&gt; 设置为6或更低）。</target>
        </trans-unit>
        <trans-unit id="9ba2f9d418b56cbf0bdc482a139585b63a14612a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;a href=&quot;#token.TYPE_COMMENT&quot;&gt;&lt;code&gt;TYPE_COMMENT&lt;/code&gt;&lt;/a&gt;. Added &lt;a href=&quot;#token.AWAIT&quot;&gt;&lt;code&gt;AWAIT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#token.ASYNC&quot;&gt;&lt;code&gt;ASYNC&lt;/code&gt;&lt;/a&gt; tokens back (they&amp;rsquo;re needed to support parsing older Python versions for &lt;a href=&quot;ast#ast.parse&quot;&gt;&lt;code&gt;ast.parse()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;feature_version&lt;/code&gt; set to 6 or lower).</source>
          <target state="translated">在3.8版中进行了更改：添加了&lt;a href=&quot;#token.TYPE_COMMENT&quot;&gt; &lt;code&gt;TYPE_COMMENT&lt;/code&gt; &lt;/a&gt;。新增&lt;a href=&quot;#token.AWAIT&quot;&gt; &lt;code&gt;AWAIT&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#token.ASYNC&quot;&gt; &lt;code&gt;ASYNC&lt;/code&gt; &lt;/a&gt;令牌回（他们需要支持解析老的Python版本&lt;a href=&quot;ast#ast.parse&quot;&gt; &lt;code&gt;ast.parse()&lt;/code&gt; &lt;/a&gt;与 &lt;code&gt;feature_version&lt;/code&gt; 设置为6或更低）。</target>
        </trans-unit>
        <trans-unit id="85bf577b26acc12624d4ca2c826e33abca71e309" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;a href=&quot;copy#copy.copy&quot;&gt;&lt;code&gt;copy.copy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;copy#copy.deepcopy&quot;&gt;&lt;code&gt;copy.deepcopy()&lt;/code&gt;&lt;/a&gt; support to compression objects.</source>
          <target state="translated">在3.8版中进行了更改：向压缩对象添加了&lt;a href=&quot;copy#copy.copy&quot;&gt; &lt;code&gt;copy.copy()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;copy#copy.deepcopy&quot;&gt; &lt;code&gt;copy.deepcopy()&lt;/code&gt; &lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="f31ae1dc62be20d1904b6ef010aba8ac05b24205" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;a href=&quot;copy#copy.copy&quot;&gt;&lt;code&gt;copy.copy()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;copy#copy.deepcopy&quot;&gt;&lt;code&gt;copy.deepcopy()&lt;/code&gt;&lt;/a&gt; support to decompression objects.</source>
          <target state="translated">在3.8版中进行了更改：向解压缩对象添加了&lt;a href=&quot;copy#copy.copy&quot;&gt; &lt;code&gt;copy.copy()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;copy#copy.deepcopy&quot;&gt; &lt;code&gt;copy.deepcopy()&lt;/code&gt; &lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="243af55c0378cdbbded1db6bef1bbff921e9eee1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; to implementation so that iteration (such as in for loops) correctly consumes &lt;em&gt;read_data&lt;/em&gt;.</source>
          <target state="translated">在版本3.8中更改：在实现中添加了&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;，以便迭代（例如for循环）正确使用&lt;em&gt;read_data&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="490cdd2e0fd80c579431f2a1d8c4cd4e7b809a63" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; to implementation so that iteration (such as in for loops) correctly consumes &lt;em&gt;read_data&lt;/em&gt;.</source>
          <target state="translated">在版本3.8中进行了更改：在实现中添加了&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;，以便迭代（例如for循环）正确使用&lt;em&gt;read_data&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="62c01d2d0c1778b221ec31e21a6119715f803d4a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;code&gt;'pgettext'&lt;/code&gt; and &lt;code&gt;'npgettext'&lt;/code&gt;.</source>
          <target state="translated">在3.8版中进行了更改：添加了 &lt;code&gt;'pgettext'&lt;/code&gt; 和 &lt;code&gt;'npgettext'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="050603a7a3c683a66883e1a328ef79af893d354c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;code&gt;args&lt;/code&gt; and &lt;code&gt;kwargs&lt;/code&gt; properties.</source>
          <target state="translated">在3.8版中进行了更改：添加了 &lt;code&gt;args&lt;/code&gt; 和 &lt;code&gt;kwargs&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="65dbd070cb831a01e0a6beb8e31f00d65fca0883" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;code&gt;type_comments&lt;/code&gt;, &lt;code&gt;mode='func_type'&lt;/code&gt; and &lt;code&gt;feature_version&lt;/code&gt;.</source>
          <target state="translated">在3.8版中进行了更改：添加了 &lt;code&gt;type_comments&lt;/code&gt; ， &lt;code&gt;mode='func_type'&lt;/code&gt; 和 &lt;code&gt;feature_version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a945b440caa31c1218541ffce3792d7ff73b42a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;em&gt;errors&lt;/em&gt; parameter.</source>
          <target state="translated">在3.8版中进行了更改：添加了&lt;em&gt;errors&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="8be1fec5912a053ae74fd5cb1c6a1506fea5f39e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;em&gt;jump&lt;/em&gt; parameter.</source>
          <target state="translated">在版本3.8中更改：添加了&lt;em&gt;跳转&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="ebd45b31cee3ab274b2ea7af9bf66385569a6228" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;em&gt;max_num_fields&lt;/em&gt; parameter.</source>
          <target state="translated">在3.8版中进行了更改：添加了&lt;em&gt;max_num_fields&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="685468a4f03d21a32aab42ecb0ed335d75773dbf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added &lt;em&gt;winmode&lt;/em&gt; parameter.</source>
          <target state="translated">在3.8版中进行了更改：添加了&lt;em&gt;winmode&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="62412d9eee6e113fb8fc8e9c426cf34001732a79" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added context manager support.</source>
          <target state="translated">在3.8版本中有所改变。增加了对上下文管理器的支持。</target>
        </trans-unit>
        <trans-unit id="4080dfae308ecef66d9c369edcbecc54e37de96a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added return value, return the new Path instance.</source>
          <target state="translated">在3.8版本中有所改变。增加了返回值,返回新的Path实例。</target>
        </trans-unit>
        <trans-unit id="0bf01e2e9b38182c15e660446b2de51612d44be7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for &lt;a href=&quot;os#os.PathLike.__fspath__&quot;&gt;&lt;code&gt;os.PathLike.__fspath__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在3.8版中进行了更改：添加了对&lt;a href=&quot;os#os.PathLike.__fspath__&quot;&gt; &lt;code&gt;os.PathLike.__fspath__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6397f6833a372c407e53c2226f1b598309729d3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for &lt;code&gt;__aenter__&lt;/code&gt;, &lt;code&gt;__aexit__&lt;/code&gt;, &lt;code&gt;__aiter__&lt;/code&gt; and &lt;code&gt;__anext__&lt;/code&gt;.</source>
          <target state="translated">改变在3.8版本：补充支持 &lt;code&gt;__aenter__&lt;/code&gt; ， &lt;code&gt;__aexit__&lt;/code&gt; ， &lt;code&gt;__aiter__&lt;/code&gt; 和 &lt;code&gt;__anext__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22f3f2ae8c3d95345ee045b49a607378542c9c58" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for Windows.</source>
          <target state="translated">在3.8版本中有所改变。增加了对Windows的支持。</target>
        </trans-unit>
        <trans-unit id="111ee0e2d6efd819c0f50346eb0752b8c7d08bdd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for directory junctions, and changed to return the substitution path (which typically includes &lt;code&gt;\\?\&lt;/code&gt; prefix) rather than the optional &amp;ldquo;print name&amp;rdquo; field that was previously returned.</source>
          <target state="translated">在版本3.8中进行了更改：添加了对目录连接的支持，并更改为返回替换路径（通常包含 &lt;code&gt;\\?\&lt;/code&gt; 前缀），而不是先前返回的可选&amp;ldquo;打印名称&amp;rdquo;字段。</target>
        </trans-unit>
        <trans-unit id="5327cdd1c73309d4091a8053e4d225cc7334ede9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for n-dimensional points. Formerly, only the two dimensional case was supported.</source>
          <target state="translated">在3.8版本中有所改变。增加了对n维点的支持。以前只支持二维的情况。</target>
        </trans-unit>
        <trans-unit id="1fa2749c2e418cedf5de7ab07760f0ea858169e2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for the &lt;code&gt;samesite&lt;/code&gt; attribute.</source>
          <target state="translated">在3.8版中进行了更改：添加了对 &lt;code&gt;samesite&lt;/code&gt; 属性的支持。</target>
        </trans-unit>
        <trans-unit id="ab12ecc48d52b1e8b9e2104a70beba43f3fe3743" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for unelevated symlinks on Windows with Developer Mode.</source>
          <target state="translated">在3.8版本中有所改变。在Windows的开发者模式下增加了对不悬浮符号链接的支持。</target>
        </trans-unit>
        <trans-unit id="d88a9dcb849d992a4df4aa2e4a4bec3b869b282f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for url being a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在3.8版中进行了更改：增加了对url作为类&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径对象的支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c1325a08b4e6e7d94939165fb45772016ebc2a9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support for url being a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在3.8版中进行了更改：添加了对url作为类&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径对象的支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d85d8c9e1d0a38d127796dca5265cc603883e98" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added support of path-like objects.</source>
          <target state="translated">在3.8版本中有所改变。增加了对类路径对象的支持。</target>
        </trans-unit>
        <trans-unit id="627839da16e067a49e0d33936728805c02e137af" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added the &lt;code&gt;name&lt;/code&gt; parameter.</source>
          <target state="translated">在3.8版中进行了更改：添加了 &lt;code&gt;name&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="cfc2f66fa120e637f453f4049faa961de95fdd6e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added the &lt;em&gt;mtime&lt;/em&gt; parameter for reproducible output.</source>
          <target state="translated">在版本3.8中进行了更改：添加了&lt;em&gt;mtime&lt;/em&gt;参数以实现可重现的输出。</target>
        </trans-unit>
        <trans-unit id="09550e3388d5be9c6c21c341b23443beca5275fd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added the &lt;em&gt;sort_dicts&lt;/em&gt; parameter.</source>
          <target state="translated">在3.8版中进行了更改：添加了&lt;em&gt;sort_dicts&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="8a92a4d32cfddd54ebb25fd97ec3c49c8fb22e0b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added the &lt;em&gt;user_function&lt;/em&gt; option.</source>
          <target state="translated">在3.8版中进行了更改：添加了&lt;em&gt;user_function&lt;/em&gt;选项。</target>
        </trans-unit>
        <trans-unit id="1a7448849d50cf653cc4b4904f2a2d1f7fd4125c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Added the optional &lt;em&gt;initial&lt;/em&gt; parameter.</source>
          <target state="translated">在3.8版中进行了更改：添加了可选的&lt;em&gt;初始&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="4409ea43d36e7a49a6f21cb96b41336bbdc7bb6f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Allow keyword arguments. Formerly, only positional arguments were supported.</source>
          <target state="translated">在3.8版本中有所改变。允许使用关键字参数。以前只支持位置参数。</target>
        </trans-unit>
        <trans-unit id="6b0eeffbe0d9c9f9658bab0732edf413b6ba7385" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Calling &lt;code&gt;fork()&lt;/code&gt; in a subinterpreter is no longer supported (&lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised).</source>
          <target state="translated">在3.8版中进行了更改：不再支持在子解释器中调用 &lt;code&gt;fork()&lt;/code&gt; （引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="dc1233650127597c1e3ed44703cae5441cf988b9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Calling &lt;code&gt;forkpty()&lt;/code&gt; in a subinterpreter is no longer supported (&lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised).</source>
          <target state="translated">在3.8版中进行了更改：不再支持在子解释器中调用 &lt;code&gt;forkpty()&lt;/code&gt; （引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="41fba3f8ff588e17649c0d67f0a09049cf8b8539" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Characters that affect netloc parsing under NFKC normalization will now raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中更改：在NFKC规范下影响netloc解析的字符现在将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e96d0a2d008184bfb03f2cf7627140e8c9dca94d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Class &lt;a href=&quot;#ast.Constant&quot;&gt;&lt;code&gt;ast.Constant&lt;/code&gt;&lt;/a&gt; is now used for all constants.</source>
          <target state="translated">在版本3.8中更改：类&lt;a href=&quot;#ast.Constant&quot;&gt; &lt;code&gt;ast.Constant&lt;/code&gt; &lt;/a&gt;现在用于所有常量。</target>
        </trans-unit>
        <trans-unit id="92367a873d65bd0ff55351395a97b6c12ae2aa89" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Default flags became an empty string (&lt;code&gt;m&lt;/code&gt; flag for pymalloc has been removed).</source>
          <target state="translated">在3.8版中进行了更改：默认标志变为空字符串（pymalloc的 &lt;code&gt;m&lt;/code&gt; 标志已被删除）。</target>
        </trans-unit>
        <trans-unit id="dab3cb8452c55aced76434db8182fcd36e0282ef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Default value of &lt;em&gt;max_workers&lt;/em&gt; is changed to &lt;code&gt;min(32, os.cpu_count() + 4)&lt;/code&gt;. This default value preserves at least 5 workers for I/O bound tasks. It utilizes at most 32 CPU cores for CPU bound tasks which release the GIL. And it avoids using very large resources implicitly on many-core machines.</source>
          <target state="translated">在版本3.8中更改：&lt;em&gt;max_workers的&lt;/em&gt;默认值更改为 &lt;code&gt;min(32, os.cpu_count() + 4)&lt;/code&gt; 。此默认值为I / O绑定任务保留至少5个工作进程。它最多使用32个CPU内核来执行释放GIL的CPU绑定任务。并且避免在多核计算机上隐式使用非常大的资源。</target>
        </trans-unit>
        <trans-unit id="b93c90c6fb707a6f2b293d751a03ea7a6d18ba47" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Deleting a key from a read-only database raises database module specific error instead of &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中进行了更改：从只读数据库中删除密钥会引发特定于数据库模块的错误，而不是&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="432eca001bd04c7ba242894fff602390d5231539" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Deprecated the &lt;code&gt;_field_types&lt;/code&gt; attribute in favor of the more standard &lt;code&gt;__annotations__&lt;/code&gt; attribute which has the same information.</source>
          <target state="translated">在3.8版中进行了更改：不推荐使用 &lt;code&gt;_field_types&lt;/code&gt; 属性，而是使用具有相同信息的更标准的 &lt;code&gt;__annotations__&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="636cfb064ef442eaa8f69edb55521b6e55a6be1b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Dictionaries are now reversible.</source>
          <target state="translated">在3.8版本中有所改变。现在字典是可逆的。</target>
        </trans-unit>
        <trans-unit id="e724f91c91d15f557b6b322087cf9f46e9ea19be" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Dictionary views are now reversible.</source>
          <target state="translated">在3.8版本中有所改变。字典视图现在是可逆的。</target>
        </trans-unit>
        <trans-unit id="21e0be51955c9a617508fee8b7b93ee60596effd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Extended the operator support on proxy objects to include the matrix multiplication operators &lt;code&gt;@&lt;/code&gt; and &lt;code&gt;@=&lt;/code&gt;.</source>
          <target state="translated">在版本3.8中更改：扩展了对代理对象的运算符支持，以包括矩阵乘法运算符 &lt;code&gt;@&lt;/code&gt; 和 &lt;code&gt;@=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5f7c55b2b1ca802981084e2879993fa38ecd2cf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Falls back to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt;&lt;code&gt;__complex__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; are not defined.</source>
          <target state="translated">在3.8版中进行了更改：如果&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt; &lt;code&gt;__complex__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;则退回到&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="250e7998a8d3945c7884a200ab403ca9f74a4e47" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Falls back to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; is not defined.</source>
          <target state="translated">在3.8版中进行了更改：如果&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;则退回到&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a766d3e802d76087f7b103f5af3122d858451ff8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Falls back to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__int__&quot;&gt;&lt;code&gt;__int__()&lt;/code&gt;&lt;/a&gt; is not defined.</source>
          <target state="translated">在3.8版中进行了更改：如果&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__int__&quot;&gt; &lt;code&gt;__int__()&lt;/code&gt; &lt;/a&gt;则退回到&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58c3456d1571a097f714e2fdcb17e3bc22486e1e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Falls back to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__complex__&quot;&gt;&lt;code&gt;__complex__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; are not defined.</source>
          <target state="translated">在3.8版中进行了更改：如果&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__complex__&quot;&gt; &lt;code&gt;__complex__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;则退回到&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ffe6cafdaa2a5b6d580ba310ae73881587fc29f6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Falls back to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; is not defined.</source>
          <target state="translated">在3.8版中进行了更改：如果&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;则退回到&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac0e8e51f4925b96fb4e46e13eaf23a430862a3f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Falls back to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt;&lt;code&gt;__index__()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__int__&quot;&gt;&lt;code&gt;__int__()&lt;/code&gt;&lt;/a&gt; is not defined.</source>
          <target state="translated">在3.8版中进行了更改：如果&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__int__&quot;&gt; &lt;code&gt;__int__()&lt;/code&gt; &lt;/a&gt;则退回到&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__index__&quot;&gt; &lt;code&gt;__index__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dec366f29ac064f775914b156586406141d52403" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: For &lt;a href=&quot;#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; operands, the three-argument form of &lt;code&gt;pow&lt;/code&gt; now allows the second argument to be negative, permitting computation of modular inverses.</source>
          <target state="translated">在版本3.8中更改：对于&lt;a href=&quot;#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;操作数， &lt;code&gt;pow&lt;/code&gt; 的三参数形式现在允许第二个参数为负，从而允许计算模逆。</target>
        </trans-unit>
        <trans-unit id="218e095b52b44196afd64d1e7efa5d2ec14182b1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Functions wrapped in &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;True&lt;/code&gt; if the wrapped function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">在版本3.8中进行了更改：如果包装的函数是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;异步生成器&lt;/a&gt;函数，则包装在&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; 中的&lt;/a&gt;函数现在返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f879bbde3494fc30b09c6543fc16a3cbda1dbe14" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Functions wrapped in &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;True&lt;/code&gt; if the wrapped function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中进行了更改：如果包装的函数是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;协程函数，&lt;/a&gt;则包装在&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; 中的&lt;/a&gt;函数现在返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61b74fd5b314e242eee4c2e2ce8a42680f769cf6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Functions wrapped in &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;True&lt;/code&gt; if the wrapped function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">在版本3.8中进行了更改：如果包装的函数是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;异步生成器&lt;/a&gt;函数，则包装在&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; 中的&lt;/a&gt;函数现在返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08e606ad25e24a44781cb951b217c38fcbd7dad3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Functions wrapped in &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;True&lt;/code&gt; if the wrapped function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中进行了更改：如果包装的函数是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;协程函数，&lt;/a&gt;则包装在&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; 中的&lt;/a&gt;函数现在返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="585bc4401c0ae497b558c92913179ed8a242c354" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Functions wrapped in &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; now return &lt;code&gt;True&lt;/code&gt; if the wrapped function is a Python generator function.</source>
          <target state="translated">在版本3.8中进行了更改：如果包装的函数是Python生成器函数，则包装在&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; 中的&lt;/a&gt;函数现在返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc5c82dbf0c9fa08dd657d78cb16cdf1c578c93e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: If the queue is closed, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised instead of &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中更改：如果队列已关闭，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e27fbfb81b0893d996ef46ddc6e722a418a1d41" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: If the queue is closed, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised instead of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中更改：如果队列已关闭，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f2e2deef19f69f1802f1c5f2846b36ce81124da" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: In Python 3.7 and earlier timeouts (relative &lt;em&gt;delay&lt;/em&gt; or absolute &lt;em&gt;when&lt;/em&gt;) should not exceed one day. This has been fixed in Python 3.8.</source>
          <target state="translated">在3.8版中进行了更改：在Python 3.7和更早的超时中（相对&lt;em&gt;延迟&lt;/em&gt;或绝对&lt;em&gt;时限&lt;/em&gt;）不应超过一天。这已在Python 3.8中修复。</target>
        </trans-unit>
        <trans-unit id="b306bea24a4c57956795f6db2ec02939084e17db" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: In Python 3.7 and earlier with the default event loop implementation, the &lt;em&gt;delay&lt;/em&gt; could not exceed one day. This has been fixed in Python 3.8.</source>
          <target state="translated">在3.8版中进行了更改：在具有默认事件循环实现的Python 3.7和更早版本中，&lt;em&gt;延迟&lt;/em&gt;不能超过一天。此问题已在Python 3.8中修复。</target>
        </trans-unit>
        <trans-unit id="364e6ee7cdc048900b6445d6c8117caf2c0cfd56" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: In Python 3.7 and earlier with the default event loop implementation, the difference between &lt;em&gt;when&lt;/em&gt; and the current time could not exceed one day. This has been fixed in Python 3.8.</source>
          <target state="translated">改变在3.8版本：在Python 3.7和更早的版本使用默认的事件循环执行，之间的区别&lt;em&gt;时，&lt;/em&gt;和当前时间不能超过一天。这已在Python 3.8中修复。</target>
        </trans-unit>
        <trans-unit id="3190ce76e0c243b2f88ae47f0214db2a027a9bb8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: In previous versions, &lt;em&gt;allow_abbrev&lt;/em&gt; also disabled grouping of short flags such as &lt;code&gt;-vv&lt;/code&gt; to mean &lt;code&gt;-v -v&lt;/code&gt;.</source>
          <target state="translated">在3.8版中进行了更改：在以前的版本中，&lt;em&gt;allow_abbrev&lt;/em&gt;还禁用了将 &lt;code&gt;-vv&lt;/code&gt; 之类的短标记分组为 &lt;code&gt;-v -v&lt;/code&gt; 的意思。</target>
        </trans-unit>
        <trans-unit id="03b3b8c5eb4048d799cb9ba7128e1cb869157cc0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Items present in &lt;em&gt;vars&lt;/em&gt; no longer appear in the result. The previous behaviour mixed actual parser options with variables provided for interpolation.</source>
          <target state="translated">在版本3.8中进行了更改：&lt;em&gt;变量中&lt;/em&gt;存在的项目不再出现在结果中。先前的行为将实际的解析器选项与为插值提供的变量混合在一起。</target>
        </trans-unit>
        <trans-unit id="79a3154c920b183709f109f73e34fb5c454713a7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Map value is TOS and map key is TOS1. Before, those were reversed.</source>
          <target state="translated">在3.8版本中有所改变。地图值是TOS,地图键是TOS1。之前,这些是相反的。</target>
        </trans-unit>
        <trans-unit id="c7cf250c329387da0ae484e1e77aa116c97d5d02" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: New &lt;em&gt;generation&lt;/em&gt; parameter.</source>
          <target state="translated">在版本3.8中更改：&lt;em&gt;新一代&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="9884e8277b78d2c0c28d3c58ee762e217f9f4193" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: No longer uses &lt;code id=&quot;index-7&quot;&gt;HOME&lt;/code&gt; on Windows.</source>
          <target state="translated">在版本3.8中更改：在Windows上不再使用 &lt;code id=&quot;index-7&quot;&gt;HOME&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8db32303e90c253dc76ce9d7ff43edde68e73d5e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Now handles multimodal datasets by returning the first mode encountered. Formerly, it raised &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; when more than one mode was found.</source>
          <target state="translated">在3.8版中进行了更改：现在，通过返回遇到的第一个模式来处理多峰数据集。以前，当发现多个模式时，它会引发&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6cf7e3aa31007df0e9606ca93c1861f61405e9c8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On AIX, &lt;a href=&quot;#sys.platform&quot;&gt;&lt;code&gt;sys.platform&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t contain the major version anymore. It is always &lt;code&gt;'aix'&lt;/code&gt;, instead of &lt;code&gt;'aix5'&lt;/code&gt; or &lt;code&gt;'aix7'&lt;/code&gt;. Since older Python versions include the version number, it is recommended to always use the &lt;code&gt;startswith&lt;/code&gt; idiom presented above.</source>
          <target state="translated">在3.8 版中进行了更改：在AIX上，&lt;a href=&quot;#sys.platform&quot;&gt; &lt;code&gt;sys.platform&lt;/code&gt; &lt;/a&gt;不再包含主要版本。它始终是 &lt;code&gt;'aix'&lt;/code&gt; ，而不是 &lt;code&gt;'aix5'&lt;/code&gt; 或 &lt;code&gt;'aix7'&lt;/code&gt; 。由于较旧的Python版本包含版本号，因此建议始终使用上面介绍的 &lt;code&gt;startswith&lt;/code&gt; 惯用语。</target>
        </trans-unit>
        <trans-unit id="d3d15aa1b625c33d2282329dcc41be9853e34a74" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; is now the default event loop.</source>
          <target state="translated">在版本3.8中进行了更改：在Windows上，&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;现在是默认的事件循环。</target>
        </trans-unit>
        <trans-unit id="321794742ff1f16881c420f7b3081c62bfbe34ff" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; is now used by default.</source>
          <target state="translated">在3.8版中进行了更改：在Windows上，默认情况下现在使用&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a2faa44612f89d4855c4735f92edaa7aeb752f6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, &lt;em&gt;path&lt;/em&gt; can now be a file or directory.</source>
          <target state="translated">在版本3.8中更改：在Windows上，&lt;em&gt;路径&lt;/em&gt;现在可以是文件或目录。</target>
        </trans-unit>
        <trans-unit id="3ec19b40aa61828132d4263c79f6b45d57a7d3b9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, all reparse points that can be resolved by the operating system are now followed, and passing &lt;code&gt;follow_symlinks=False&lt;/code&gt; disables following all name surrogate reparse points. If the operating system reaches a reparse point that it is not able to follow, &lt;em&gt;stat&lt;/em&gt; now returns the information for the original path as if &lt;code&gt;follow_symlinks=False&lt;/code&gt; had been specified instead of raising an error.</source>
          <target state="translated">在版本3.8中进行了更改：在Windows上，现在将遵循操作系统可以解析的所有重新解析点，并且传递 &lt;code&gt;follow_symlinks=False&lt;/code&gt; 会禁用所有名称代理重新解析点。如果操作系统达到无法遵循的重新解析点，则&lt;em&gt;stat&lt;/em&gt;现在返回原始路径的信息，就好像已指定 &lt;code&gt;follow_symlinks=False&lt;/code&gt; 一样，而不是引发错误。</target>
        </trans-unit>
        <trans-unit id="af3954d78bb710bcad80e9e013679ea387e65239" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, now opens reparse points that represent another path (name surrogates), including symbolic links and directory junctions. Other kinds of reparse points are resolved by the operating system as for &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中进行了更改：在Windows上，现在打开表示另一个路径（名称代理）的重新分析点，包括符号链接和目录连接。其他种类的重解析点由操作系统解析为&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da82419ed22b58831c1cd055afaf87bbe5700f1a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, the &lt;a href=&quot;#os.stat_result.st_mode&quot;&gt;&lt;code&gt;st_mode&lt;/code&gt;&lt;/a&gt; member now identifies special files as &lt;code&gt;S_IFCHR&lt;/code&gt;, &lt;code&gt;S_IFIFO&lt;/code&gt; or &lt;code&gt;S_IFBLK&lt;/code&gt; as appropriate.</source>
          <target state="translated">在版本3.8中进行了更改：在Windows上，&lt;a href=&quot;#os.stat_result.st_mode&quot;&gt; &lt;code&gt;st_mode&lt;/code&gt; &lt;/a&gt;成员现在可以根据 &lt;code&gt;S_IFCHR&lt;/code&gt; 将特殊文件标识为S_IFCHR， &lt;code&gt;S_IFIFO&lt;/code&gt; 或 &lt;code&gt;S_IFBLK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc1dfb9cf99cd9e9afbcb41a940a37f25460468b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On Windows, will no longer delete the contents of a directory junction before removing the junction.</source>
          <target state="translated">在3.8版本中有所改变。在Windows上,将不再删除目录交界处的内容,然后再删除交界处。</target>
        </trans-unit>
        <trans-unit id="b4e8ad33f11f576b908c896726117c2b925a31fd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On macOS, the &lt;em&gt;spawn&lt;/em&gt; start method is now the default. The &lt;em&gt;fork&lt;/em&gt; start method should be considered unsafe as it can lead to crashes of the subprocess. See &lt;a href=&quot;https://bugs.python.org/issue33725&quot;&gt;bpo-33725&lt;/a&gt;.</source>
          <target state="translated">在3.8版中进行了更改：在macOS上，&lt;em&gt;spawn&lt;/em&gt; start方法现在是默认设置。该&lt;em&gt;叉&lt;/em&gt; start方法应被视为不安全的，因为它可以导致子进程崩溃。参见&lt;a href=&quot;https://bugs.python.org/issue33725&quot;&gt;bpo-33725&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf388b4db7526b8e0b2e87c81a16c4ea346ee37f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: On macOS, the function now uses &lt;a href=&quot;#platform.mac_ver&quot;&gt;&lt;code&gt;mac_ver()&lt;/code&gt;&lt;/a&gt;, if it returns a non-empty release string, to get the macOS version rather than the darwin version.</source>
          <target state="translated">在版本3.8中进行了更改：在macOS上，该函数现在使用&lt;a href=&quot;#platform.mac_ver&quot;&gt; &lt;code&gt;mac_ver()&lt;/code&gt; &lt;/a&gt;，如果它返回非空的发行字符串，则获取macOS版本而不是darwin版本。</target>
        </trans-unit>
        <trans-unit id="f5ee98a81938a7ff66dd2abd2114188007138053" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Parameters are now &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;keyword-only&lt;/a&gt;. The &lt;em&gt;html&lt;/em&gt; argument no longer supported.</source>
          <target state="translated">在版本3.8中更改：参数现在&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#keyword-only-parameter&quot;&gt;仅用作关键字&lt;/a&gt;。该&lt;em&gt;HTML&lt;/em&gt;参数不再受支持。</target>
        </trans-unit>
        <trans-unit id="5744da086b2cd6382d8681fec095a47e10fcd43b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Parameters are now &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#keyword-only-parameter&quot;&gt;keyword-only&lt;/a&gt;. The &lt;em&gt;html&lt;/em&gt; argument no longer supported.</source>
          <target state="translated">在版本3.8中更改：参数现在&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#keyword-only-parameter&quot;&gt;仅关键字&lt;/a&gt;。该&lt;em&gt;HTML&lt;/em&gt;参数不再受支持。</target>
        </trans-unit>
        <trans-unit id="674856e5cbc678787031b27b926924c3b5c4bae3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Platform-specific fast-copy syscalls may be used internally in order to copy the file more efficiently. See &lt;a href=&quot;#shutil-platform-dependent-efficient-copy-operations&quot;&gt;Platform-dependent efficient copy operations&lt;/a&gt; section.</source>
          <target state="translated">在版本3.8中更改：可以在内部使用特定于平台的快速复制syscall，以便更有效地复制文件。请参阅&lt;a href=&quot;#shutil-platform-dependent-efficient-copy-operations&quot;&gt;平台相关的有效复制操作&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="3c9f4928282828175df5dc23d18d899616697149" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Popen can use &lt;a href=&quot;os#os.posix_spawn&quot;&gt;&lt;code&gt;os.posix_spawn()&lt;/code&gt;&lt;/a&gt; in some cases for better performance. On Windows Subsystem for Linux and QEMU User Emulation, Popen constructor using &lt;a href=&quot;os#os.posix_spawn&quot;&gt;&lt;code&gt;os.posix_spawn()&lt;/code&gt;&lt;/a&gt; no longer raise an exception on errors like missing program, but the child process fails with a non-zero &lt;a href=&quot;#subprocess.Popen.returncode&quot;&gt;&lt;code&gt;returncode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中更改：&lt;a href=&quot;os#os.posix_spawn&quot;&gt; &lt;code&gt;os.posix_spawn()&lt;/code&gt; &lt;/a&gt;在某些情况下可以使用os.posix_spawn（）以获得更好的性能。在用于Linux和QEMU用户仿真的Windows子系统上，使用&lt;a href=&quot;os#os.posix_spawn&quot;&gt; &lt;code&gt;os.posix_spawn()&lt;/code&gt; 的Popen&lt;/a&gt;构造函数不再针对诸如缺少程序之类的错误引发异常，但是子进程失败，&lt;a href=&quot;#subprocess.Popen.returncode&quot;&gt; &lt;code&gt;returncode&lt;/code&gt; &lt;/a&gt;为非零。</target>
        </trans-unit>
        <trans-unit id="d7e2b1c4fa696cecaaa37855f031bca696cf1145" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Previously, ZIP archives with an archive comment were not supported.</source>
          <target state="translated">在3.8版本中有所改变。以前,不支持带有存档注释的ZIP存档。</target>
        </trans-unit>
        <trans-unit id="285b58ffd1f812e4e4764fa8e479e3e50a4f0ba6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Previously, a nonzero value was returned on success; zero was returned on error under Windows. A zero value was returned on success; an exception was raised on error under Unix.</source>
          <target state="translated">在3.8版本中有所改变。以前,成功时返回一个非零值;Windows下出错时返回零值。成功时返回一个零值;在Unix下,出错时产生异常。</target>
        </trans-unit>
        <trans-unit id="e7d9fdfa90b54fb7332eeb8ce63a74646df3cc71" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Returned rows are now of type &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中更改：现在返回的行为&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;类型。</target>
        </trans-unit>
        <trans-unit id="4c4fcc5cb75fecf2a77c59e708d98f606a489542" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Returns a regular &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; instead of an &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt;. As of Python 3.7, regular dicts are guaranteed to be ordered. If the extra features of &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; are required, the suggested remediation is to cast the result to the desired type: &lt;code&gt;OrderedDict(nt._asdict())&lt;/code&gt;.</source>
          <target state="translated">在3.8版中进行了更改：返回常规&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;。从Python 3.7开始，保证常规命令是有序的。如果需要&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; 的&lt;/a&gt;其他功能，建议的补救措施是将结果转换为所需的类型： &lt;code&gt;OrderedDict(nt._asdict())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42c0e83bf67370a70fde9806c1efb6193c5f9e9f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Setting &lt;em&gt;workers&lt;/em&gt; to 0 now chooses the optimal number of cores.</source>
          <target state="translated">在版本3.8中进行了更改：现在，将&lt;em&gt;worker&lt;/em&gt;设置为0可以选择最佳的内核数。</target>
        </trans-unit>
        <trans-unit id="41ebb3a9435b72320a50f6f8dc3515d28de1f946" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Similar to &lt;a href=&quot;#bytes.hex&quot;&gt;&lt;code&gt;bytes.hex()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#bytearray.hex&quot;&gt;&lt;code&gt;bytearray.hex()&lt;/code&gt;&lt;/a&gt; now supports optional &lt;em&gt;sep&lt;/em&gt; and &lt;em&gt;bytes_per_sep&lt;/em&gt; parameters to insert separators between bytes in the hex output.</source>
          <target state="translated">在版本3.8中进行了更改：与&lt;a href=&quot;#bytes.hex&quot;&gt; &lt;code&gt;bytes.hex()&lt;/code&gt; &lt;/a&gt;相似，&lt;a href=&quot;#bytearray.hex&quot;&gt; &lt;code&gt;bytearray.hex()&lt;/code&gt; &lt;/a&gt;现在支持可选的&lt;em&gt;sep&lt;/em&gt;和&lt;em&gt;bytes_per_sep&lt;/em&gt;参数，以便在十六进制输出中的字节之间插入分隔符。</target>
        </trans-unit>
        <trans-unit id="9a54ba35e3dc1391e05b900c610872ccc6ff92a6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Similar to &lt;a href=&quot;#bytes.hex&quot;&gt;&lt;code&gt;bytes.hex()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#memoryview.hex&quot;&gt;&lt;code&gt;memoryview.hex()&lt;/code&gt;&lt;/a&gt; now supports optional &lt;em&gt;sep&lt;/em&gt; and &lt;em&gt;bytes_per_sep&lt;/em&gt; parameters to insert separators between bytes in the hex output.</source>
          <target state="translated">在版本3.8中进行了更改：与&lt;a href=&quot;#bytes.hex&quot;&gt; &lt;code&gt;bytes.hex()&lt;/code&gt; &lt;/a&gt;类似，&lt;a href=&quot;#memoryview.hex&quot;&gt; &lt;code&gt;memoryview.hex()&lt;/code&gt; &lt;/a&gt;现在支持可选的&lt;em&gt;sep&lt;/em&gt;和&lt;em&gt;bytes_per_sep&lt;/em&gt;参数，以在十六进制输出中的字节之间插入分隔符。</target>
        </trans-unit>
        <trans-unit id="771d8e9a3851df3af49e1b07022c4bbb765a0cb7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Support added for reading and writing &lt;a href=&quot;#plistlib.UID&quot;&gt;&lt;code&gt;UID&lt;/code&gt;&lt;/a&gt; tokens in binary plists as used by NSKeyedArchiver and NSKeyedUnarchiver.</source>
          <target state="translated">在版本3.8中进行了更改：添加了对以NSpledArchiver和NSKeyedUnarchiver所使用的二进制形式读写&lt;a href=&quot;#plistlib.UID&quot;&gt; &lt;code&gt;UID&lt;/code&gt; &lt;/a&gt;令牌的支持。</target>
        </trans-unit>
        <trans-unit id="9720a4ffa61eb77da0fdc99321eb402eeaac087a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Support for key logging to &lt;code id=&quot;index-3&quot;&gt;SSLKEYLOGFILE&lt;/code&gt; was added.</source>
          <target state="translated">在3.8版中进行了更改：添加了对将密钥记录到 &lt;code id=&quot;index-3&quot;&gt;SSLKEYLOGFILE&lt;/code&gt; 的支持。</target>
        </trans-unit>
        <trans-unit id="75777e254a30feb278083974f6981f20492dbf1d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Support for star-wildcards was added.</source>
          <target state="translated">在3.8版本中有所改变。增加了对星卡的支持。</target>
        </trans-unit>
        <trans-unit id="f977148ca3ef260c9200e745bffff2c196e4d7f4" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Symbolic links and junctions are now resolved on Windows.</source>
          <target state="translated">在3.8版本中有所改变。符号链接和连接现在在Windows上得到了解决。</target>
        </trans-unit>
        <trans-unit id="5be9770a73269ed026cc13faf9459913d4871b04" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt;&lt;code&gt;punctuation_chars&lt;/code&gt;&lt;/a&gt; attribute was made compatible with the &lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt;&lt;code&gt;whitespace_split&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">在3.8版中进行了更改：&lt;a href=&quot;#shlex.shlex.punctuation_chars&quot;&gt; &lt;code&gt;punctuation_chars&lt;/code&gt; &lt;/a&gt;属性与&lt;a href=&quot;#shlex.shlex.whitespace_split&quot;&gt; &lt;code&gt;whitespace_split&lt;/code&gt; &lt;/a&gt;属性兼容。</target>
        </trans-unit>
        <trans-unit id="4effcea4ba9372bfad772ce4649f999c1bbf590d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.dom.minidom.Node.toprettyxml&quot;&gt;&lt;code&gt;toprettyxml()&lt;/code&gt;&lt;/a&gt; method now preserves the attribute order specified by the user.</source>
          <target state="translated">在版本3.8中进行了更改：&lt;a href=&quot;#xml.dom.minidom.Node.toprettyxml&quot;&gt; &lt;code&gt;toprettyxml()&lt;/code&gt; &lt;/a&gt;方法现在保留了用户指定的属性顺序。</target>
        </trans-unit>
        <trans-unit id="326209dfec75a6993833ab27dead655d771dfc17" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.dom.minidom.Node.toxml&quot;&gt;&lt;code&gt;toxml()&lt;/code&gt;&lt;/a&gt; method now preserves the attribute order specified by the user.</source>
          <target state="translated">在版本3.8中进行了更改：&lt;a href=&quot;#xml.dom.minidom.Node.toxml&quot;&gt; &lt;code&gt;toxml()&lt;/code&gt; &lt;/a&gt;方法现在保留了用户指定的属性顺序。</target>
        </trans-unit>
        <trans-unit id="2e7d1fbd98c93c651aa3b92c1f1760f7bd5327dd" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.dom.minidom.Node.writexml&quot;&gt;&lt;code&gt;writexml()&lt;/code&gt;&lt;/a&gt; method now preserves the attribute order specified by the user.</source>
          <target state="translated">在3.8版中进行了更改：&lt;a href=&quot;#xml.dom.minidom.Node.writexml&quot;&gt; &lt;code&gt;writexml()&lt;/code&gt; &lt;/a&gt;方法现在保留了用户指定的属性顺序。</target>
        </trans-unit>
        <trans-unit id="909beb02ff419b4de4b0efc0e870106ad9d3bdcc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt;&lt;code&gt;write()&lt;/code&gt;&lt;/a&gt; method now preserves the attribute order specified by the user.</source>
          <target state="translated">在3.8版中进行了更改：&lt;a href=&quot;#xml.etree.ElementTree.ElementTree.write&quot;&gt; &lt;code&gt;write()&lt;/code&gt; &lt;/a&gt;方法现在保留了用户指定的属性顺序。</target>
        </trans-unit>
        <trans-unit id="e808102c95ed39303f4a53fcb0d25dea27463410" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.etree.ElementTree.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; function now preserves the attribute order specified by the user.</source>
          <target state="translated">在3.8版中进行了更改：&lt;a href=&quot;#xml.etree.ElementTree.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;函数现在保留了用户指定的属性顺序。</target>
        </trans-unit>
        <trans-unit id="e85e90ad56b7d62906f992aaa7e1cf73baa7f9ed" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.etree.ElementTree.tostring&quot;&gt;&lt;code&gt;tostring()&lt;/code&gt;&lt;/a&gt; function now preserves the attribute order specified by the user.</source>
          <target state="translated">在版本3.8中进行了更改：&lt;a href=&quot;#xml.etree.ElementTree.tostring&quot;&gt; &lt;code&gt;tostring()&lt;/code&gt; &lt;/a&gt;函数现在保留了用户指定的属性顺序。</target>
        </trans-unit>
        <trans-unit id="c2c6ad543541a6fb9935b4a3ece7e74c7dcc5189" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;#xml.etree.ElementTree.tostringlist&quot;&gt;&lt;code&gt;tostringlist()&lt;/code&gt;&lt;/a&gt; function now preserves the attribute order specified by the user.</source>
          <target state="translated">在3.8版中进行了更改：&lt;a href=&quot;#xml.etree.ElementTree.tostringlist&quot;&gt; &lt;code&gt;tostringlist()&lt;/code&gt; &lt;/a&gt;函数现在保留了用户指定的属性顺序。</target>
        </trans-unit>
        <trans-unit id="f9c6408a2ab2b21f2ae1614242dfbdaf6373a75e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;io#io.IOBase&quot;&gt;&lt;code&gt;io.IOBase&lt;/code&gt;&lt;/a&gt; destructor now logs &lt;code&gt;close()&lt;/code&gt; exceptions.</source>
          <target state="translated">在3.8版中进行了更改：&lt;a href=&quot;io#io.IOBase&quot;&gt; &lt;code&gt;io.IOBase&lt;/code&gt; &lt;/a&gt;析构函数现在记录 &lt;code&gt;close()&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="04170cbe44ff070972d8a2dcd99fab5945d3b5f1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; type is now accepted. If &lt;em&gt;cmd&lt;/em&gt; type is &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, the result type is also &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中更改：现在接受&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;类型。如果&lt;em&gt;cmd&lt;/em&gt;类型是&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;，则结果类型也是&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04e5fc248d06e2fdcad168e09a0ae38f0d419860" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;code&gt;'\N{name}'&lt;/code&gt; escape sequence has been added. As in string literals, it expands to the named Unicode character (e.g. &lt;code&gt;'\N{EM DASH}'&lt;/code&gt;).</source>
          <target state="translated">在版本3.8中进行了更改：已添加 &lt;code&gt;'\N{name}'&lt;/code&gt; 转义序列。与字符串文字一样，它扩展为命名的Unicode字符（例如 &lt;code&gt;'\N{EM DASH}'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="05a88a1b4cbe0fdbe8c2f1496ed13debc25f66fe" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;code&gt;_field_types&lt;/code&gt; and &lt;code&gt;__annotations__&lt;/code&gt; attributes are now regular dictionaries instead of instances of &lt;code&gt;OrderedDict&lt;/code&gt;.</source>
          <target state="translated">在3.8版中进行了更改： &lt;code&gt;_field_types&lt;/code&gt; 和 &lt;code&gt;__annotations__&lt;/code&gt; 属性现在是常规词典，而不是 &lt;code&gt;OrderedDict&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="85005cbe9e06b1381a087810cbd29bc4491e2533" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;code&gt;comment&lt;/code&gt; and &lt;code&gt;pi&lt;/code&gt; events were added.</source>
          <target state="translated">在3.8版中进行了更改：添加了 &lt;code&gt;comment&lt;/code&gt; 和 &lt;code&gt;pi&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="7002005553d6d2e6c2a0188ea32b38939e2c98c5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;code&gt;toprettyxml()&lt;/code&gt; method now preserves the attribute order specified by the user.</source>
          <target state="translated">在版本3.8中进行了更改： &lt;code&gt;toprettyxml()&lt;/code&gt; 方法现在保留了用户指定的属性顺序。</target>
        </trans-unit>
        <trans-unit id="2a1fb6099442fdddf0425172ef44729293d5c693" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;code&gt;writexml()&lt;/code&gt; method now preserves the attribute order specified by the user.</source>
          <target state="translated">在版本3.8中进行了更改： &lt;code&gt;writexml()&lt;/code&gt; 方法现在保留了用户指定的属性顺序。</target>
        </trans-unit>
        <trans-unit id="20aae1268b45710bee0f9a45ba5d871f93774ee7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;buffer_callback&lt;/em&gt; argument was added.</source>
          <target state="translated">在3.8版中更改：添加了&lt;em&gt;buffer_callback&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="bfea79cdb17f5d2f932915fc6eddf8bf85ff7bfa" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;buffers&lt;/em&gt; argument was added.</source>
          <target state="translated">在版本3.8中更改：添加了&lt;em&gt;buffers&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="8af20677aabd86ef4ee40f96687d7d7ad8cc79c2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;deterministic&lt;/em&gt; parameter was added.</source>
          <target state="translated">在3.8版中更改：添加了&lt;em&gt;确定性&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="8de17286b581affb7149eabb59d1e88b826c62e3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;force&lt;/em&gt; argument was added.</source>
          <target state="translated">在版本3.8中更改：添加了&lt;em&gt;force&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="d4167f909eaebd0f1a2d98d8fe827a008311466c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;headers&lt;/em&gt; parameter was added.</source>
          <target state="translated">在版本3.8中更改：添加了&lt;em&gt;headers&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="0c7564c56b881507def86cd5f768f71b8d7f7fe6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;key&lt;/em&gt; can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">在版本3.8中更改：&lt;em&gt;密钥&lt;/em&gt;可以为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d672a75520bf1c65d12f1e74fd4e6cfc4d52217" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;missing_ok&lt;/em&gt; parameter was added.</source>
          <target state="translated">在版本3.8中更改：添加了&lt;em&gt;missing_ok&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="dc56e812f676bb5fb614b867d6d2a62b1b7f7830" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;parser_list&lt;/em&gt; argument can be any iterable, not just a list.</source>
          <target state="translated">在版本3.8中更改：&lt;em&gt;parser_list&lt;/em&gt;参数可以是任何可迭代的，而不仅仅是列表。</target>
        </trans-unit>
        <trans-unit id="2977667c5b6f66dc8500038aea491d8f93f2b91c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;preexec_fn&lt;/em&gt; parameter is no longer supported in subinterpreters. The use of the parameter in a subinterpreter raises &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;. The new restriction may affect applications that are deployed in mod_wsgi, uWSGI, and other embedded environments.</source>
          <target state="translated">在版本3.8中进行了更改：子解释器不再支持&lt;em&gt;preexec_fn&lt;/em&gt;参数。在子解释器中使用参数会引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。新的限制可能会影响在mod_wsgi，uWSGI和其他嵌入式环境中部署的应用程序。</target>
        </trans-unit>
        <trans-unit id="a0712600c6d7cf96989cbad4de45d18a860e3a0f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;quiet&lt;/em&gt; parameter was added.</source>
          <target state="translated">在3.8版中更改：添加了&lt;em&gt;quiet&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="ca1110df96a867622ea909c23654958b8a76da3e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;sep&lt;/em&gt; and &lt;em&gt;bytes_per_sep&lt;/em&gt; parameters were added.</source>
          <target state="translated">在版本3.8中更改：添加了&lt;em&gt;sep&lt;/em&gt;和&lt;em&gt;bytes_per_sep&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="50b9e319e72a8559c451121d4790f2d8aa23b533" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;stacklevel&lt;/em&gt; parameter was added.</source>
          <target state="translated">在3.8版中更改：添加了&lt;em&gt;stacklevel&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="aa3d4dc6c843ea6c05d7ffbd261a97206ae34fac" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;start&lt;/em&gt; parameter can be specified as a keyword argument.</source>
          <target state="translated">在版本3.8中更改：可以将&lt;em&gt;start&lt;/em&gt;参数指定为关键字参数。</target>
        </trans-unit>
        <trans-unit id="304b6ab556570c7a549f454b50a7badc313c03eb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The &lt;em&gt;validate&lt;/em&gt; parameter was added. Incorrect or mismatched style and fmt will raise a &lt;code&gt;ValueError&lt;/code&gt;. For example: &lt;code&gt;logging.Formatter('%(asctime)s - %(message)s', style='{')&lt;/code&gt;.</source>
          <target state="translated">在3.8版中更改：添加了&lt;em&gt;validate&lt;/em&gt;参数。不正确或不匹配的样式和fmt将引发 &lt;code&gt;ValueError&lt;/code&gt; 。例如： &lt;code&gt;logging.Formatter('%(asctime)s - %(message)s', style='{')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="545457c2549e483aebc6f3ac0d4ce0f41d77d954" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The default &lt;em&gt;dict_type&lt;/em&gt; is &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, since it now preserves insertion order.</source>
          <target state="translated">在版本3.8中更改：默认&lt;em&gt;dict_type&lt;/em&gt;为&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;，因为它现在保留插入顺序。</target>
        </trans-unit>
        <trans-unit id="2079684575028851b7d3eb6467b105a6b2aa4269" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The default format for new archives was changed to &lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt;&lt;code&gt;PAX_FORMAT&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;#tarfile.GNU_FORMAT&quot;&gt;&lt;code&gt;GNU_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">改变在3.8版本：新档案的默认格式改为&lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt; &lt;code&gt;PAX_FORMAT&lt;/code&gt; &lt;/a&gt;从&lt;a href=&quot;#tarfile.GNU_FORMAT&quot;&gt; &lt;code&gt;GNU_FORMAT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca908339a30e0cba4eb37cb923b1f06c7f659cbc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The default protocol is 4.</source>
          <target state="translated">在3.8版本中有所改变。默认协议是4.</target>
        </trans-unit>
        <trans-unit id="2ebef822be8ee5749e6479312aa65310e5253fef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The fcntl module now contains &lt;code&gt;F_ADD_SEALS&lt;/code&gt;, &lt;code&gt;F_GET_SEALS&lt;/code&gt;, and &lt;code&gt;F_SEAL_*&lt;/code&gt; constants for sealing of &lt;a href=&quot;os#os.memfd_create&quot;&gt;&lt;code&gt;os.memfd_create()&lt;/code&gt;&lt;/a&gt; file descriptors.</source>
          <target state="translated">在3.8版中进行了更改：fcntl模块现在包含 &lt;code&gt;F_ADD_SEALS&lt;/code&gt; ， &lt;code&gt;F_GET_SEALS&lt;/code&gt; 和 &lt;code&gt;F_SEAL_*&lt;/code&gt; 常量，用于密封&lt;a href=&quot;os#os.memfd_create&quot;&gt; &lt;code&gt;os.memfd_create()&lt;/code&gt; &lt;/a&gt;文件描述符。</target>
        </trans-unit>
        <trans-unit id="0fdd61387c56eea4e65ebef132dca0bf826a81f7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The filename parameter supports a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中更改：filename参数支持类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc532d65987d98dab14fe4f4d753e11d8b598caf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The filename parameter supports a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.8中更改：filename参数支持类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a79c8d0eb106105a3ea60ee7c51023f0f18220dc" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The first character is now put into titlecase rather than uppercase. This means that characters like digraphs will only have their first letter capitalized, instead of the full character.</source>
          <target state="translated">在3.8版本中有所改变。第一个字符现在被放到大写字母中,而不是大写字母。这意味着像数字字符这样的字符将只有第一个字母大写,而不是完整的字符。</target>
        </trans-unit>
        <trans-unit id="d53fb1433995b4dd43f06ceff736b40af2af8986" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The function now uses the UTF-8 encoding on Windows, rather than the ANSI code page: see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt; for the rationale. The function is no longer deprecated on Windows.</source>
          <target state="translated">在3.8版中进行了更改：该函数现在在Windows上使用UTF-8编码，而不是ANSI代码页：基本原理请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-19&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt;。Windows不再弃用该功能。</target>
        </trans-unit>
        <trans-unit id="0c981b20664ce331bdb2867e64d22ab1b6d37d4a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The function now uses the UTF-8 encoding on Windows, rather than the ANSI code page: see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt; for the rationale. The function is no longer deprecated on Windows.</source>
          <target state="translated">在3.8版中进行了更改：该函数现在在Windows上使用UTF-8编码，而不是ANSI代码页：基本原理请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-21&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt;。Windows不再弃用该功能。</target>
        </trans-unit>
        <trans-unit id="d061a5db8b557f94300e6c84551a181737a7570c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The keyword parameter &lt;em&gt;mode&lt;/em&gt; and &lt;em&gt;openhook&lt;/em&gt; are now keyword-only.</source>
          <target state="translated">在版本3.8中更改：关键字参数&lt;em&gt;mode&lt;/em&gt;和&lt;em&gt;openhook&lt;/em&gt;现在仅用作关键字。</target>
        </trans-unit>
        <trans-unit id="80b97dbd985f32b99f90ad6e77eabda0e07eecfb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The keyword parameters &lt;em&gt;mode&lt;/em&gt; and &lt;em&gt;openhook&lt;/em&gt; are now keyword-only.</source>
          <target state="translated">在版本3.8中更改：关键字参数&lt;em&gt;mode&lt;/em&gt;和&lt;em&gt;openhook&lt;/em&gt;现在仅用作关键字。</target>
        </trans-unit>
        <trans-unit id="a137e2a56b6aa0ecceee0ed1e0ac6782df1c991e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The method no longer ignores silently arbitrary exceptions.</source>
          <target state="translated">在3.8版本中有所改变。该方法不再默默地忽略任意异常。</target>
        </trans-unit>
        <trans-unit id="624940251496d3462640e233cff8fb9eda270ed3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: The modern pax (POSIX.1-2001) format is now used instead of the legacy GNU format for archives created with &lt;code&gt;format=&quot;tar&quot;&lt;/code&gt;.</source>
          <target state="translated">在版本3.8中进行了更改：对于使用 &lt;code&gt;format=&quot;tar&quot;&lt;/code&gt; 创建的档案，现在使用现代pax（POSIX.1-2001）格式，而不是旧版GNU格式。</target>
        </trans-unit>
        <trans-unit id="f239db16b98ad4803eba4a67a02896aa106622c7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: This class now enables TLS 1.3 &lt;a href=&quot;ssl#ssl.SSLContext.post_handshake_auth&quot;&gt;&lt;code&gt;ssl.SSLContext.post_handshake_auth&lt;/code&gt;&lt;/a&gt; for the default &lt;em&gt;context&lt;/em&gt; or when &lt;em&gt;cert_file&lt;/em&gt; is passed with a custom &lt;em&gt;context&lt;/em&gt;.</source>
          <target state="translated">在版本3.8中进行了更改：此类现在为默认&lt;em&gt;上下文&lt;/em&gt;或使用自定义&lt;em&gt;上下文&lt;/em&gt;传递&lt;em&gt;cert_file&lt;/em&gt;时启用TLS 1.3 &lt;a href=&quot;ssl#ssl.SSLContext.post_handshake_auth&quot;&gt; &lt;code&gt;ssl.SSLContext.post_handshake_auth&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe1ef2c7ccf036ca4439f82be8e884fdde51a215" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: This method raises &lt;a href=&quot;#concurrent.futures.InvalidStateError&quot;&gt;&lt;code&gt;concurrent.futures.InvalidStateError&lt;/code&gt;&lt;/a&gt; if the &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; is already done.</source>
          <target state="translated">在3.8版中进行了更改：如果&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;已经完成，则此方法将引发&lt;a href=&quot;#concurrent.futures.InvalidStateError&quot;&gt; &lt;code&gt;concurrent.futures.InvalidStateError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="394c353092cb3b47cf57048f40226b28c269ae25" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: UNIX switched to use &lt;a href=&quot;asyncio-policy#asyncio.ThreadedChildWatcher&quot;&gt;&lt;code&gt;ThreadedChildWatcher&lt;/code&gt;&lt;/a&gt; for spawning subprocesses from different threads without any limitation.</source>
          <target state="translated">在3.8版中进行了更改：UNIX切换为使用&lt;a href=&quot;asyncio-policy#asyncio.ThreadedChildWatcher&quot;&gt; &lt;code&gt;ThreadedChildWatcher&lt;/code&gt; &lt;/a&gt;来从不同线程生成子进程，而没有任何限制。</target>
        </trans-unit>
        <trans-unit id="33e5ec1bbfa2ed27a529c45ada501894f3d10001" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: Windows support was added.</source>
          <target state="translated">在3.8版本中有所改变。增加了对Windows的支持。</target>
        </trans-unit>
        <trans-unit id="cd45d23bbce40d05aaa814b4f7e6f45c5797132d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.8: a &lt;code&gt;validate&lt;/code&gt; key (with default of &lt;code&gt;True&lt;/code&gt;) can be added into the &lt;code&gt;formatters&lt;/code&gt; section of the configuring dict, this is to validate the format.</source>
          <target state="translated">在版本3.8中进行了更改：可以将一个 &lt;code&gt;validate&lt;/code&gt; 密钥（默认为 &lt;code&gt;True&lt;/code&gt; ）添加到配置字典的 &lt;code&gt;formatters&lt;/code&gt; 部分中，这是为了验证格式。</target>
        </trans-unit>
        <trans-unit id="505d6fba413bd4e1fbcf6e2b61076a4cdd19cea5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: &lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; is now of type &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. Formerly, it was of type &lt;a href=&quot;collections#collections.OrderedDict&quot;&gt;&lt;code&gt;collections.OrderedDict&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.9中更改：&lt;a href=&quot;#inspect.BoundArguments.arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt;现在为&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;类型。以前，它的类型为&lt;a href=&quot;collections#collections.OrderedDict&quot;&gt; &lt;code&gt;collections.OrderedDict&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f57a307c828b5bcaee82aadc215a89c4eba9c002" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: &lt;code&gt;array('u')&lt;/code&gt; now uses &lt;code&gt;wchar_t&lt;/code&gt; as C type instead of deprecated &lt;code&gt;Py_UNICODE&lt;/code&gt;. This change doesn&amp;rsquo;t affect to its behavior because &lt;code&gt;Py_UNICODE&lt;/code&gt; is alias of &lt;code&gt;wchar_t&lt;/code&gt; since Python 3.3.</source>
          <target state="translated">在版本3.9中进行了更改： &lt;code&gt;array('u')&lt;/code&gt; 现在将 &lt;code&gt;wchar_t&lt;/code&gt; 用作C类型，而不是不推荐使用的 &lt;code&gt;Py_UNICODE&lt;/code&gt; 。此更改不会影响其行为，因为自Python 3.3起， &lt;code&gt;Py_UNICODE&lt;/code&gt; 是 &lt;code&gt;wchar_t&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="76fa178cec2d5cb799374189d514147e5d848d2b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: &lt;em&gt;exit_on_error&lt;/em&gt; parameter was added.</source>
          <target state="translated">在版本3.9中更改：添加了&lt;em&gt;exit_on_error&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="758b5181c2c1867a7b97195850821abb22e7d0a3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: &lt;em&gt;string&lt;/em&gt; parameter supports bytes and str objects (previously only str).</source>
          <target state="translated">在3.9版中进行了更改：&lt;em&gt;字符串&lt;/em&gt;参数支持字节和str对象（以前仅支持str）。</target>
        </trans-unit>
        <trans-unit id="6727b2cea6f2e7374dfcb67be1af126c92dda17e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; for both &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt;.</source>
          <target state="translated">在版本3.9中更改：&lt;em&gt;src&lt;/em&gt;和&lt;em&gt;dst&lt;/em&gt;都接受类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5887d2c916d4f4210f0b7e2f34d5ca26b9e1ac0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">在版本3.9中更改：接受类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50f6ae6b5e2c7586dc40cd422798570a4c2fab37" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Acquiring a lock using &lt;code&gt;await lock&lt;/code&gt; or &lt;code&gt;yield from lock&lt;/code&gt; and/or &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement (&lt;code&gt;with await lock&lt;/code&gt;, &lt;code&gt;with (yield from
lock)&lt;/code&gt;) was removed. Use &lt;code&gt;async with lock&lt;/code&gt; instead.</source>
          <target state="translated">在版本3.9中进行了更改：删除了使用 &lt;code&gt;await lock&lt;/code&gt; 或使用 &lt;code&gt;yield from lock&lt;/code&gt; 和/或&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句（ &lt;code&gt;with await lock&lt;/code&gt; ， &lt;code&gt;with (yield from lock)&lt;/code&gt; ）获取锁的方法。请改用 &lt;code&gt;async with lock&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab916968816a27ad3cbf8f315d9fe43506b11990" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Add &lt;code&gt;--upgrade-deps&lt;/code&gt; option to upgrade pip + setuptools to the latest on PyPI</source>
          <target state="translated">在版本3.9中更改：添加--upgrade &lt;code&gt;--upgrade-deps&lt;/code&gt; 选项以将pip + setuptools升级到PyPI上的最新版本</target>
        </trans-unit>
        <trans-unit id="d70433e9d323bf9d4ab71c9faff81f897bdfb893" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added &lt;a href=&quot;#os.CLD_KILLED&quot;&gt;&lt;code&gt;CLD_KILLED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.CLD_STOPPED&quot;&gt;&lt;code&gt;CLD_STOPPED&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">在3.9版中进行了更改：添加了&lt;a href=&quot;#os.CLD_KILLED&quot;&gt; &lt;code&gt;CLD_KILLED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.CLD_STOPPED&quot;&gt; &lt;code&gt;CLD_STOPPED&lt;/code&gt; &lt;/a&gt;值。</target>
        </trans-unit>
        <trans-unit id="cd12921374762e2c9f97a98150ecb67f54124890" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added &lt;code&gt;include_extras&lt;/code&gt; parameter as part of &lt;a href=&quot;https://www.python.org/dev/peps/pep-0593&quot; id=&quot;index-63&quot;&gt;&lt;strong&gt;PEP 593&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.9中更改：作为&lt;a href=&quot;https://www.python.org/dev/peps/pep-0593&quot; id=&quot;index-63&quot;&gt;&lt;strong&gt;PEP 593的&lt;/strong&gt;&lt;/a&gt;一部分添加了 &lt;code&gt;include_extras&lt;/code&gt; 参数。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7648b986a1d74ca9f1805e5f657b5f95f04a0a21" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added &lt;em&gt;cancel_futures&lt;/em&gt;.</source>
          <target state="translated">在版本3.9中更改：添加了&lt;em&gt;cancel_futures&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cc8bf61885523b685110248083422160fcb575fe" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added &lt;em&gt;stripdir&lt;/em&gt;, &lt;em&gt;prependdir&lt;/em&gt;, &lt;em&gt;limit_sl_dest&lt;/em&gt; and &lt;em&gt;hardlink_dupes&lt;/em&gt; arguments.</source>
          <target state="translated">在3.9版中进行了更改：添加了&lt;em&gt;stripdir&lt;/em&gt;，&lt;em&gt;prependdir&lt;/em&gt;，&lt;em&gt;limit_sl_dest&lt;/em&gt;和&lt;em&gt;hardlink_dupes&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="9975095d07ae4819923761a9a7a20eb0ab2e0cda" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added &lt;em&gt;stripdir&lt;/em&gt;, &lt;em&gt;prependdir&lt;/em&gt;, &lt;em&gt;limit_sl_dest&lt;/em&gt; and &lt;em&gt;hardlink_dupes&lt;/em&gt; arguments. Default value of &lt;em&gt;maxlevels&lt;/em&gt; was changed from &lt;code&gt;10&lt;/code&gt; to &lt;code&gt;sys.getrecursionlimit()&lt;/code&gt;</source>
          <target state="translated">在3.9版中进行了更改：添加了&lt;em&gt;stripdir&lt;/em&gt;，&lt;em&gt;prependdir&lt;/em&gt;，&lt;em&gt;limit_sl_dest&lt;/em&gt;和&lt;em&gt;hardlink_dupes&lt;/em&gt;参数。&lt;em&gt;maxlevels的&lt;/em&gt;默认值从 &lt;code&gt;10&lt;/code&gt; 更改为 &lt;code&gt;sys.getrecursionlimit()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16e39f55ffece6682049361ce6354fa43159f1b3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added default arguments.</source>
          <target state="translated">3.9版本的变化:增加了默认参数。</target>
        </trans-unit>
        <trans-unit id="ad66ef6d6bd0088df82b057490aa5e1e301b06cf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added merge (&lt;code&gt;|&lt;/code&gt;) and update (&lt;code&gt;|=&lt;/code&gt;) operators, specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 584&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.9中更改：添加了在&lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 584中&lt;/strong&gt;&lt;/a&gt;指定的merge（ &lt;code&gt;|&lt;/code&gt; ）和update（ &lt;code&gt;|=&lt;/code&gt; ）运算符。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e678568785596a3c69d220b337dea2f0725fadaf" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added merge (&lt;code&gt;|&lt;/code&gt;) and update (&lt;code&gt;|=&lt;/code&gt;) operators, specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 584&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.9中更改：添加了在&lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 584中&lt;/strong&gt;&lt;/a&gt;指定的merge（ &lt;code&gt;|&lt;/code&gt; ）和update（ &lt;code&gt;|=&lt;/code&gt; ）运算符。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bdee445067f01694a98156e83afaf78ae1dbe5b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added support for &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;|=&lt;/code&gt; operators, as specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 584&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">在3.9版中进行了更改：增加了对 &lt;code&gt;|&lt;/code&gt; 的支持。和 &lt;code&gt;|=&lt;/code&gt; 运算符，如&lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 584中&lt;/strong&gt;&lt;/a&gt;所指定。</target>
        </trans-unit>
        <trans-unit id="cedd0c67666d9f7f45e97dccd9ea02e5f6bce911" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added support for &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;|=&lt;/code&gt; operators, specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 584&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">在3.9版中进行了更改：增加了对 &lt;code&gt;|&lt;/code&gt; 的支持。和 &lt;code&gt;|=&lt;/code&gt; 运算符，在&lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 584中&lt;/strong&gt;&lt;/a&gt;指定。</target>
        </trans-unit>
        <trans-unit id="61eb99ca289017a23e261a785e85b6065277863a" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added support for an arbitrary number of arguments. Formerly, only two arguments were supported.</source>
          <target state="translated">3.9版的变化:增加了对任意数量参数的支持。以前只支持两个参数。</target>
        </trans-unit>
        <trans-unit id="8583eaa32bdac9627efa4967914e3447baee7b59" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added support for pretty-printing &lt;a href=&quot;types#types.SimpleNamespace&quot;&gt;&lt;code&gt;types.SimpleNamespace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.9中更改：添加了对漂亮打印&lt;a href=&quot;types#types.SimpleNamespace&quot;&gt; &lt;code&gt;types.SimpleNamespace&lt;/code&gt; &lt;/a&gt;支持。SimpleNamespace。</target>
        </trans-unit>
        <trans-unit id="64213d028bec19f9167711cdf448837e38061744" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added support for text and binary modes for open. Default mode is now text.</source>
          <target state="translated">3.9版本的变化:增加了对文本和二进制打开模式的支持。现在默认模式为文本。</target>
        </trans-unit>
        <trans-unit id="a59f6ba17ec5c4e46547571c547adb899741dcef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added the &lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;-e&lt;/code&gt; and &lt;code&gt;--hardlink-dupes&lt;/code&gt; options. Raised the default recursion limit from 10 to &lt;a href=&quot;sys#sys.getrecursionlimit&quot;&gt;&lt;code&gt;sys.getrecursionlimit()&lt;/code&gt;&lt;/a&gt;. Added the possibility to specify the &lt;code&gt;-o&lt;/code&gt; option multiple times.</source>
          <target state="translated">在3.9版中进行了更改：添加了 &lt;code&gt;-s&lt;/code&gt; ， &lt;code&gt;-p&lt;/code&gt; ， &lt;code&gt;-e&lt;/code&gt; 和 &lt;code&gt;--hardlink-dupes&lt;/code&gt; 选项。将默认递归限制从10提高到&lt;a href=&quot;sys#sys.getrecursionlimit&quot;&gt; &lt;code&gt;sys.getrecursionlimit()&lt;/code&gt; &lt;/a&gt;。添加了多次指定 &lt;code&gt;-o&lt;/code&gt; 选项的可能性。</target>
        </trans-unit>
        <trans-unit id="2f07dd87c777d12fcb22223f64c755fb394f7ca9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added the &lt;code&gt;msg&lt;/code&gt; parameter.</source>
          <target state="translated">在3.9版中进行了更改：添加了 &lt;code&gt;msg&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="3b17f90021297eae2e2cca4f64076acb24329af6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added the &lt;em&gt;counts&lt;/em&gt; parameter.</source>
          <target state="translated">在3.9版中进行了更改：添加了&lt;em&gt;counts&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="09dd68ca3bb43d5c11a6ff47ddd09670d3d1d468" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added the &lt;em&gt;indent&lt;/em&gt; option.</source>
          <target state="translated">在版本3.9中更改：添加了&lt;em&gt;缩进&lt;/em&gt;选项。</target>
        </trans-unit>
        <trans-unit id="d7a94f6598063b16af4c6cc29920a51029aedcd6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Added the &lt;em&gt;n&lt;/em&gt; parameter to release multiple waiting threads at once.</source>
          <target state="translated">在3.9版中进行了更改：添加了&lt;em&gt;n&lt;/em&gt;参数以一次释放多个等待线程。</target>
        </trans-unit>
        <trans-unit id="12eff3db54045d4457c2a20903b94500420e084b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: All hashlib constructors take a keyword-only argument &lt;em&gt;usedforsecurity&lt;/em&gt; with default value &lt;code&gt;True&lt;/code&gt;. A false value allows the use of insecure and blocked hashing algorithms in restricted environments. &lt;code&gt;False&lt;/code&gt; indicates that the hashing algorithm is not used in a security context, e.g. as a non-cryptographic one-way compression function.</source>
          <target state="translated">在3.9版本中更改：所有hashlib构造带只有关键字的参数&lt;em&gt;usedforsecurity&lt;/em&gt;默认值 &lt;code&gt;True&lt;/code&gt; 。假值允许在受限环境中使用不安全且受阻止的哈希算法。 &lt;code&gt;False&lt;/code&gt; 表示在安全上下文中不使用哈希算法，例如，将其用作非加密单向压缩功能。</target>
        </trans-unit>
        <trans-unit id="3774ed7c81160fa9e0449194cd87eb400bb3d2a8" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Allow keyword arguments. Formerly, only positional arguments were supported.</source>
          <target state="translated">3.9版的变化:允许关键字参数。以前只支持位置参数。</target>
        </trans-unit>
        <trans-unit id="0e76a79bc5522b85acf8dcce024f3502739fdc95" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Attribute order in the repr changed from alphabetical to insertion (like &lt;code&gt;dict&lt;/code&gt;).</source>
          <target state="translated">在版本3.9中更改：repr中的属性顺序从字母顺序更改为插入顺序（如 &lt;code&gt;dict&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d7a2ffb2258ae258780bdb7735810e5af9716ae9" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Class methods can now wrap other &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-descriptor&quot;&gt;descriptors&lt;/a&gt; such as &lt;a href=&quot;#property&quot;&gt;&lt;code&gt;property()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.9中更改：类方法现在可以包装其他&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-descriptor&quot;&gt;描述符，&lt;/a&gt;例如&lt;a href=&quot;#property&quot;&gt; &lt;code&gt;property()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d594a33f23a2d72d0f95a336303fa7845c99728" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Evaluating &lt;code&gt;NotImplemented&lt;/code&gt; in a boolean context is deprecated. While it currently evaluates as true, it will emit a &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt;. It will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; in a future version of Python.</source>
          <target state="translated">在版本3.9中更改：不建议在布尔上下文中评估 &lt;code&gt;NotImplemented&lt;/code&gt; 。虽然当前评估为true，但将发出&lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;。它将在将来的Python版本中&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac64656c5e71e00b86f3954a0f8f18f763b8c8fe" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: IPv6 address strings no longer have a trailing new line.</source>
          <target state="translated">在3.9版本中的变化:IPv6地址字符串不再有尾部的新行。</target>
        </trans-unit>
        <trans-unit id="229f1f3a605b3d3f7e145203543cfc08533597ef" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: If the &lt;em&gt;timeout&lt;/em&gt; parameter is set to be zero, it will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to prevent the creation of a non-blocking socket</source>
          <target state="translated">在版本3.9中更改：如果&lt;em&gt;timeout&lt;/em&gt;参数设置为零，它将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;以防止创建非阻塞套接字</target>
        </trans-unit>
        <trans-unit id="5725540c1c29a932ed68cca9e65f2863fb20b95d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: If the &lt;em&gt;timeout&lt;/em&gt; parameter is set to be zero, it will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to prevent the creation of a non-blocking socket.</source>
          <target state="translated">在版本3.9中更改：如果将&lt;em&gt;timeout&lt;/em&gt;参数设置为零，它将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;以防止创建非阻塞套接字。</target>
        </trans-unit>
        <trans-unit id="7708de85ce243e9eb43b2b56312a5314fb86139f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: If the &lt;em&gt;timeout&lt;/em&gt; parameter is set to be zero, it will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to prevent the creation of a non-blocking socket. The &lt;em&gt;encoding&lt;/em&gt; parameter was added, and the default was changed from Latin-1 to UTF-8 to follow &lt;a href=&quot;https://tools.ietf.org/html/rfc2640.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2640&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.9中更改：如果将&lt;em&gt;timeout&lt;/em&gt;参数设置为零，它将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;以防止创建非阻塞套接字。将&lt;em&gt;编码&lt;/em&gt;加入参数，默认从Latin-1的变化为UTF-8遵循&lt;a href=&quot;https://tools.ietf.org/html/rfc2640.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2640&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86a1875b57986363186822d331cad18bdb4bb857" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: If the &lt;em&gt;timeout&lt;/em&gt; parameter is set to be zero, it will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to prevent the creation of a non-blocking socket. The &lt;em&gt;encoding&lt;/em&gt; parameter was added, and the default was changed from Latin-1 to UTF-8 to follow &lt;a href=&quot;https://tools.ietf.org/html/rfc2640.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2640&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.9中更改：如果将&lt;em&gt;timeout&lt;/em&gt;参数设置为零，它将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;以防止创建非阻塞套接字。将&lt;em&gt;编码&lt;/em&gt;加入参数，默认从Latin-1的变化为UTF-8遵循&lt;a href=&quot;https://tools.ietf.org/html/rfc2640.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2640&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8e04f5afdd20dd3594914ed169db99a21e70b6b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Non-interactive &lt;code&gt;stderr&lt;/code&gt; is now line-buffered instead of fully buffered.</source>
          <target state="translated">在版本3.9中进行了更改：非交互式 &lt;code&gt;stderr&lt;/code&gt; 现在是行缓冲的，而不是完全缓冲的。</target>
        </trans-unit>
        <trans-unit id="23552258c02472d353c35c894196cba540399dd0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Now supports creating empty sets with &lt;code&gt;'set()'&lt;/code&gt;.</source>
          <target state="translated">在版本3.9中更改：现在支持使用 &lt;code&gt;'set()'&lt;/code&gt; 创建空集。</target>
        </trans-unit>
        <trans-unit id="a5251090f685bc92e830ad45948c5bbb6789a296" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Old API removed.</source>
          <target state="translated">3.9版本的变化:删除了旧的API。</target>
        </trans-unit>
        <trans-unit id="8c0523abb58d0910c64a5b166fff9257c76cc3d1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: On macOS, the fcntl module exposes the &lt;code&gt;F_GETPATH&lt;/code&gt; constant, which obtains the path of a file from a file descriptor. On Linux(&amp;gt;=3.15), the fcntl module exposes the &lt;code&gt;F_OFD_GETLK&lt;/code&gt;, &lt;code&gt;F_OFD_SETLK&lt;/code&gt; and &lt;code&gt;F_OFD_SETLKW&lt;/code&gt; constants, which working with open file description locks.</source>
          <target state="translated">在版本3.9中进行了更改：在macOS上，fcntl模块公开了 &lt;code&gt;F_GETPATH&lt;/code&gt; 常量，该常量从文件描述符获取文件的路径。在Linux（&amp;gt; = 3.15）上，fcntl模块公开 &lt;code&gt;F_OFD_GETLK&lt;/code&gt; ， &lt;code&gt;F_OFD_SETLK&lt;/code&gt; 和 &lt;code&gt;F_OFD_SETLKW&lt;/code&gt; 常量，这些常量与打开的文件描述锁一起使用。</target>
        </trans-unit>
        <trans-unit id="cd4bfa1feac95956839dc2a65da1251f6bd65de0" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Parameters &lt;em&gt;out&lt;/em&gt; and &lt;em&gt;in&lt;/em&gt; was renamed to &lt;em&gt;out_fd&lt;/em&gt; and &lt;em&gt;in_fd&lt;/em&gt;.</source>
          <target state="translated">在版本3.9中更改：参数&lt;em&gt;out&lt;/em&gt;和&lt;em&gt;in&lt;/em&gt;被重命名为&lt;em&gt;out_fd&lt;/em&gt;和&lt;em&gt;in_fd&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="33aeb21027b0b92e9194955b45562624e2ff4c15" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if all weights are zero.</source>
          <target state="translated">在版本3.9中更改：如果所有权重均为零，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db61d64a8696d497b18f895c5b66f33819401b06" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Removed the &lt;code&gt;_field_types&lt;/code&gt; attribute in favor of the more standard &lt;code&gt;__annotations__&lt;/code&gt; attribute which has the same information.</source>
          <target state="translated">在3.9版中进行了更改：删除了 &lt;code&gt;_field_types&lt;/code&gt; 属性，转而使用具有相同信息的更标准的 &lt;code&gt;__annotations__&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="ef9da4610ce15eb67856434f2898713436b0b475" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Result changed from a tuple to a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;.</source>
          <target state="translated">在版本3.9中更改：结果从元组更改为&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;命名元组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b80960d4c05e87b57c79af26e277ebdaca215e6" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Simple indices are represented by their value, extended slices are represented as tuples.</source>
          <target state="translated">在3.9版本中改变了:简单指数用其值表示,扩展切片用元组表示。</target>
        </trans-unit>
        <trans-unit id="e4fd59359ffbc82ffb77db3de78c6d3a21a8409b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Support for file and file-like objects.</source>
          <target state="translated">3.9版本的变化:支持文件和类文件对象。</target>
        </trans-unit>
        <trans-unit id="b55c00c2b7539b5f70c77c6add27197014e43f7b" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The &lt;a href=&quot;#tracemalloc.Traceback.total_nframe&quot;&gt;&lt;code&gt;Traceback.total_nframe&lt;/code&gt;&lt;/a&gt; attribute was added.</source>
          <target state="translated">在版本3.9中更改：添加了&lt;a href=&quot;#tracemalloc.Traceback.total_nframe&quot;&gt; &lt;code&gt;Traceback.total_nframe&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="43eca2f2f52f93905ecaffce3ae8d0ae5eab18a1" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The &lt;a href=&quot;math#math.gcd&quot;&gt;&lt;code&gt;math.gcd()&lt;/code&gt;&lt;/a&gt; function is now used to normalize the &lt;em&gt;numerator&lt;/em&gt; and &lt;em&gt;denominator&lt;/em&gt;. &lt;a href=&quot;math#math.gcd&quot;&gt;&lt;code&gt;math.gcd()&lt;/code&gt;&lt;/a&gt; always return a &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; type. Previously, the GCD type depended on &lt;em&gt;numerator&lt;/em&gt; and &lt;em&gt;denominator&lt;/em&gt;.</source>
          <target state="translated">在版本3.9中更改：&lt;a href=&quot;math#math.gcd&quot;&gt; &lt;code&gt;math.gcd()&lt;/code&gt; &lt;/a&gt;函数现在用于归一化&lt;em&gt;分子&lt;/em&gt;和&lt;em&gt;分母&lt;/em&gt;。&lt;a href=&quot;math#math.gcd&quot;&gt; &lt;code&gt;math.gcd()&lt;/code&gt; &lt;/a&gt;始终返回&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;类型。以前，GCD类型取决于&lt;em&gt;分子&lt;/em&gt;和&lt;em&gt;分母&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6b8a1535f0cfbe68ac76b38135f5d0e6562a6c57" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The &lt;code&gt;default_msec_format&lt;/code&gt; can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">在版本3.9中更改： &lt;code&gt;default_msec_format&lt;/code&gt; 可以为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e4fd76af21aa6e03a0d7d7c71e456c73d73c53c" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The &lt;em&gt;buffering&lt;/em&gt; parameter has been removed. It was ignored and deprecated since Python 3.0. Pass an open file object to control how the file is opened.</source>
          <target state="translated">在版本3.9中进行了更改：&lt;em&gt;缓冲&lt;/em&gt;参数已被删除。自Python 3.0以来，它已被忽略和弃用。传递一个打开的文件对象以控制文件的打开方式。</target>
        </trans-unit>
        <trans-unit id="69e8c55953c1d67a5b7fc943a6ea9f5397035deb" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; arguments are now checked for string encoding and decoding operations.</source>
          <target state="translated">在版本3.9中更改：现在检查&lt;em&gt;encoding&lt;/em&gt;和&lt;em&gt;errors&lt;/em&gt;参数是否进行了字符串编码和解码操作。</target>
        </trans-unit>
        <trans-unit id="7f6fd0178a793a00fe944ea35feda068dd495475" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; arguments were added.</source>
          <target state="translated">在版本3.9中更改：添加了&lt;em&gt;encoding&lt;/em&gt;和&lt;em&gt;errors&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="e8776018ccc25c750610e8e43ef709165d081ce7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The &lt;em&gt;errors&lt;/em&gt; is now checked in development mode and in debug mode.</source>
          <target state="translated">在版本3.9中更改：现在在开发模式和调试模式下检查&lt;em&gt;错误&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f3921decb764b15ab05844bf5b3b7c7e3fca07c2" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The &lt;em&gt;errors&lt;/em&gt; parameter was added.</source>
          <target state="translated">在3.9版中更改：添加了&lt;em&gt;errors&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="3100aa61857cf36de44bd21c092b1c93c5e63ac3" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The &lt;em&gt;timeout&lt;/em&gt; parameter was added.</source>
          <target state="translated">在版本3.9中更改：添加了&lt;em&gt;超时&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="5e737d102c82438e3793099b4b0fbe6b38126b63" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The CAN_J1939 protocol was added.</source>
          <target state="translated">3.9版本的变化:增加了CAN_J1939协议。</target>
        </trans-unit>
        <trans-unit id="d23e67ad9d7df07b17e38343f94831e2b9f8d97d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The function is now always available and is also available on Windows.</source>
          <target state="translated">3.9版本的变化:该功能现在一直可用,并且在Windows上也可用。</target>
        </trans-unit>
        <trans-unit id="e11dc9004358bc5a0c87bc6bfd035eb980bdd0b5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The function is now always available.</source>
          <target state="translated">3.9版本的变化:该功能现在一直可用。</target>
        </trans-unit>
        <trans-unit id="ad463c4da09060c338665e6f73488167771a599d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The function no longer strips whitespaces from &lt;em&gt;stderr&lt;/em&gt;.</source>
          <target state="translated">在版本3.9中更改：该函数不再从&lt;em&gt;stderr中&lt;/em&gt;剥离空格。</target>
        </trans-unit>
        <trans-unit id="d1770458dd8b5e15e65c2a3668f8c78121c79c04" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The function uses OpenSSL&amp;rsquo;s &lt;code&gt;CRYPTO_memcmp()&lt;/code&gt; internally when available.</source>
          <target state="translated">在版本3.9中更改：该函数在可用时在内部使用OpenSSL的 &lt;code&gt;CRYPTO_memcmp()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e760c0bc6fe90b042e4c0b2d74affa4d7f56c746" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The keyword argument &lt;em&gt;encoding&lt;/em&gt; has been removed.</source>
          <target state="translated">在3.9版中进行了更改：关键字参数&lt;em&gt;编码&lt;/em&gt;已被删除。</target>
        </trans-unit>
        <trans-unit id="b219d0ac4c1a7f98afb746f5392cc0efbd905680" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The method no longer ignores the &lt;a href=&quot;errno#errno.EBADF&quot;&gt;&lt;code&gt;EBADF&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="translated">在版本3.9中更改：该方法不再忽略&lt;a href=&quot;errno#errno.EBADF&quot;&gt; &lt;code&gt;EBADF&lt;/code&gt; &lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="cb734f0eac8eedf451f0be2a939c331be706e916" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: The optional &lt;em&gt;timeout&lt;/em&gt; parameter was added.</source>
          <target state="translated">在版本3.9中更改：添加了可选的&lt;em&gt;超时&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="aea76f71256ac91a9f34be2a8f8fa681c43f5bb5" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: This approach now works for all exact results except for non-integer powers.</source>
          <target state="translated">在3.9版本中的变化:这种方法现在适用于所有精确结果,除了非整数幂。</target>
        </trans-unit>
        <trans-unit id="432f73f3d12d5c8507eea56b75d68f255acd2b7f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: This dictionary is no longer filled with the default system mappings, but only contains overrides.</source>
          <target state="translated">在3.9版本中的变化:这个字典不再填充默认的系统映射,而只包含覆盖。</target>
        </trans-unit>
        <trans-unit id="4e4fd2e458480686736d24c712a64aa5d8ebc574" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: This method now accepts zero for &lt;em&gt;k&lt;/em&gt;.</source>
          <target state="translated">在版本3.9中更改：此方法现在对&lt;em&gt;k&lt;/em&gt;接受零。</target>
        </trans-unit>
        <trans-unit id="b7d0f398bdc4a6dcd0b91324ad7bb8238aa07117" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: To improve consistency with import statements, raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; for invalid relative import attempts.</source>
          <target state="translated">在版本3.9中更改：为了提高与导入语句的一致性，对于无效的相对导入尝试，请提高&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1e1419ef29c60eb4a2f80b2f8448e185d7eba78f" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Updated to support &lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 584&lt;/strong&gt;&lt;/a&gt;&amp;rsquo;s merge (&lt;code&gt;|&lt;/code&gt;) and update (&lt;code&gt;|=&lt;/code&gt;) operators.</source>
          <target state="translated">在3.9版中进行了更改：已更新，以支持&lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 584&lt;/strong&gt;&lt;/a&gt;的合并（ &lt;code&gt;|&lt;/code&gt; ）和更新（ &lt;code&gt;|=&lt;/code&gt; ）运算符。</target>
        </trans-unit>
        <trans-unit id="69e3aee2a9bc95657c453ebd7fe0ec53970ed77d" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Updated to support &lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 584&lt;/strong&gt;&lt;/a&gt;&amp;rsquo;s merge (&lt;code&gt;|&lt;/code&gt;) and update (&lt;code&gt;|=&lt;/code&gt;) operators.</source>
          <target state="translated">在3.9版中进行了更改：已更新，以支持&lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 584&lt;/strong&gt;&lt;/a&gt;的合并（ &lt;code&gt;|&lt;/code&gt; ）和更新（ &lt;code&gt;|=&lt;/code&gt; ）运算符。</target>
        </trans-unit>
        <trans-unit id="48866f2acf6e2531c949e66815c3f81fce98912e" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Updated to support the new union (&lt;code&gt;|&lt;/code&gt;) operator from &lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 584&lt;/strong&gt;&lt;/a&gt;, which simply delegates to the underlying mapping.</source>
          <target state="translated">在版本3.9中进行了更改：已更新，以支持&lt;a href=&quot;https://www.python.org/dev/peps/pep-0584&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 584中&lt;/strong&gt;&lt;/a&gt;的新union（ &lt;code&gt;|&lt;/code&gt; ）运算符，该运算符仅委派给基础映射。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b63fd1ff39da1b93d6b47dc3811a0adc71dbded7" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: Updated to use &lt;a href=&quot;asyncio-eventloop#asyncio.loop.shutdown_default_executor&quot;&gt;&lt;code&gt;loop.shutdown_default_executor()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在版本3.9中更改：更新为使用&lt;a href=&quot;asyncio-eventloop#asyncio.loop.shutdown_default_executor&quot;&gt; &lt;code&gt;loop.shutdown_default_executor()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c60882b70e33381e59bb14dd36e9fb01d387e74" translate="yes" xml:space="preserve">
          <source>Changed in version 3.9: When the command line options &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-e&quot;&gt;&lt;code&gt;-E&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id2&quot;&gt;&lt;code&gt;-I&lt;/code&gt;&lt;/a&gt; are being used, the environment variable &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONCASEOK&quot; id=&quot;index-15&quot;&gt;&lt;code&gt;PYTHONCASEOK&lt;/code&gt;&lt;/a&gt; is now ignored.</source>
          <target state="translated">在版本3.9中更改：使用命令行选项&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-e&quot;&gt; &lt;code&gt;-E&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id2&quot;&gt; &lt;code&gt;-I&lt;/code&gt; 时&lt;/a&gt;，现在将忽略环境变量&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONCASEOK&quot; id=&quot;index-15&quot;&gt; &lt;code&gt;PYTHONCASEOK&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34ea7116b7f684eddf2aab307124c9f724d616c8" translate="yes" xml:space="preserve">
          <source>Changes since Python 2.6</source>
          <target state="translated">Python 2.6以来的变化</target>
        </trans-unit>
        <trans-unit id="af27daa71fe1a7571008063e945c7b851188960d" translate="yes" xml:space="preserve">
          <source>Changes since Python 3.0</source>
          <target state="translated">Python 3.0以来的变化</target>
        </trans-unit>
        <trans-unit id="b5285ff82915084c24f53b021089e3c038bd39bb" translate="yes" xml:space="preserve">
          <source>Changes the default filesystem encoding and errors mode to &amp;lsquo;mbcs&amp;rsquo; and &amp;lsquo;replace&amp;rsquo; respectively, for consistency with versions of Python prior to 3.6.</source>
          <target state="translated">将默认文件系统编码和错误模式分别更改为&amp;ldquo; mbcs&amp;rdquo;和&amp;ldquo;替换&amp;rdquo;，以与3.6之前的Python版本保持一致。</target>
        </trans-unit>
        <trans-unit id="35d06bc14accb579d39bcde755717fa935c382a4" translate="yes" xml:space="preserve">
          <source>Changing languages on the fly</source>
          <target state="translated">在飞行中改变语言</target>
        </trans-unit>
        <trans-unit id="919bca2b1a9515d85755dd3cba4305e371637972" translate="yes" xml:space="preserve">
          <source>Channel number out of range</source>
          <target state="translated">频道号超出范围</target>
        </trans-unit>
        <trans-unit id="ee9946c82d4a077c5be79e3015a3d2479d9fcaf2" translate="yes" xml:space="preserve">
          <source>Character</source>
          <target state="translated">Character</target>
        </trans-unit>
        <trans-unit id="c6f67a848f6294b1692cf5231f1d0f0b0180be08" translate="yes" xml:space="preserve">
          <source>Character Encodings</source>
          <target state="translated">字符编码</target>
        </trans-unit>
        <trans-unit id="79ef15c3c8a14317ac1a3204f73b4c4dd198d717" translate="yes" xml:space="preserve">
          <source>Character classes such as &lt;code&gt;\w&lt;/code&gt; or &lt;code&gt;\S&lt;/code&gt; (defined below) are also accepted inside a set, although the characters they match depends on whether &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; mode is in force.</source>
          <target state="translated">集合中也可以接受 &lt;code&gt;\w&lt;/code&gt; 或 &lt;code&gt;\S&lt;/code&gt; 类的字符类（在下面定义），尽管它们匹配的字符取决于有效的&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;还是&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt;模式。</target>
        </trans-unit>
        <trans-unit id="1ce4e1be05a213a12afbc5b91825b11c73d700b6" translate="yes" xml:space="preserve">
          <source>Character device.</source>
          <target state="translated">角色装置。</target>
        </trans-unit>
        <trans-unit id="ce2eee32fbe53d901877b0a20c65b4e0da28f119" translate="yes" xml:space="preserve">
          <source>Character offset into the line where the error occurred. The first column is numbered &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">字符偏移到发生错误的行中。第一列编号为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af5854c5bfb98a5f3f51341e1afa34e02116ee5e" translate="yes" xml:space="preserve">
          <source>Character used between groups.</source>
          <target state="translated">组间使用的字符。</target>
        </trans-unit>
        <trans-unit id="23f54a58b8d8993addcad6b92bb765b4dee510f2" translate="yes" xml:space="preserve">
          <source>Character. Converts the integer to the corresponding unicode character before printing.</source>
          <target state="translated">字符。在打印前将整数转换为相应的unicode字符。</target>
        </trans-unit>
        <trans-unit id="4d207fdbae5dcf67e4a93303f412b5af86046702" translate="yes" xml:space="preserve">
          <source>Characters can be listed individually, e.g. &lt;code&gt;[amk]&lt;/code&gt; will match &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'m'&lt;/code&gt;, or &lt;code&gt;'k'&lt;/code&gt;.</source>
          <target state="translated">字符可以单独列出，例如 &lt;code&gt;[amk]&lt;/code&gt; 将匹配 &lt;code&gt;'a'&lt;/code&gt; ， &lt;code&gt;'m'&lt;/code&gt; 或 &lt;code&gt;'k'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed95a72b6d2b9c9f84061a97cd5b03fb39eb81cd" translate="yes" xml:space="preserve">
          <source>Characters in &lt;a href=&quot;#shlex.shlex.quotes&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt; that will interpret escape characters defined in &lt;a href=&quot;#shlex.shlex.escape&quot;&gt;&lt;code&gt;escape&lt;/code&gt;&lt;/a&gt;. This is only used in POSIX mode, and includes just &lt;code&gt;'&quot;'&lt;/code&gt; by default.</source>
          <target state="translated">在人物&lt;a href=&quot;#shlex.shlex.quotes&quot;&gt; &lt;code&gt;quotes&lt;/code&gt; &lt;/a&gt;，这将解释转义字符定义&lt;a href=&quot;#shlex.shlex.escape&quot;&gt; &lt;code&gt;escape&lt;/code&gt; &lt;/a&gt;。仅在POSIX模式下使用，默认情况下仅包含 &lt;code&gt;'&quot;'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3054d86a10c4fbce4def9f7d923ccba51bcd5280" translate="yes" xml:space="preserve">
          <source>Characters in the &lt;code&gt;netloc&lt;/code&gt; attribute that decompose under NFKC normalization (as used by the IDNA encoding) into any of &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, or &lt;code&gt;:&lt;/code&gt; will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;. If the URL is decomposed before parsing, no error will be raised.</source>
          <target state="translated">中的字符 &lt;code&gt;netloc&lt;/code&gt; 属性，根据NFKC正常化分解（如由IDNA编码中使用）到任何的 &lt;code&gt;/&lt;/code&gt; ， &lt;code&gt;?&lt;/code&gt; ， &lt;code&gt;#&lt;/code&gt; ， &lt;code&gt;@&lt;/code&gt; 或 &lt;code&gt;:&lt;/code&gt; 将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。如果在解析之前将URL分解，则不会引发任何错误。</target>
        </trans-unit>
        <trans-unit id="f0892b805a19e7979539da13f4a03fa4c7a3b47b" translate="yes" xml:space="preserve">
          <source>Characters that are not within a range can be matched by &lt;em&gt;complementing&lt;/em&gt; the set. If the first character of the set is &lt;code&gt;'^'&lt;/code&gt;, all the characters that are &lt;em&gt;not&lt;/em&gt; in the set will be matched. For example, &lt;code&gt;[^5]&lt;/code&gt; will match any character except &lt;code&gt;'5'&lt;/code&gt;, and &lt;code&gt;[^^]&lt;/code&gt; will match any character except &lt;code&gt;'^'&lt;/code&gt;. &lt;code&gt;^&lt;/code&gt; has no special meaning if it&amp;rsquo;s not the first character in the set.</source>
          <target state="translated">可以通过&lt;em&gt;补充&lt;/em&gt;集合来匹配不在范围内的字符。如果集合的第一个字符是 &lt;code&gt;'^'&lt;/code&gt; ，则所有&lt;em&gt;不在&lt;/em&gt;集合中的字符都将被匹配。例如， &lt;code&gt;[^5]&lt;/code&gt; 将匹配 &lt;code&gt;'5'&lt;/code&gt; 以外的任何字符，而 &lt;code&gt;[^^]&lt;/code&gt; 将匹配 &lt;code&gt;'^'&lt;/code&gt; 以外的任何字符。 &lt;code&gt;^&lt;/code&gt; 如果不是集合中的第一个字符，则没有特殊含义。</target>
        </trans-unit>
        <trans-unit id="8f2b9c747864cdbd3e6dd42f23d020134d4855b8" translate="yes" xml:space="preserve">
          <source>Characters that will be considered as escape. This will be only used in POSIX mode, and includes just &lt;code&gt;'\'&lt;/code&gt; by default.</source>
          <target state="translated">将被视为转义符的字符。这仅在POSIX模式下使用，默认情况下仅包含 &lt;code&gt;'\'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56fdbebeb62e8c8ad650db8d2d4f8c89cabe16d9" translate="yes" xml:space="preserve">
          <source>Characters that will be considered string quotes. The token accumulates until the same quote is encountered again (thus, different quote types protect each other as in the shell.) By default, includes ASCII single and double quotes.</source>
          <target state="translated">字符将被视为字符串引号。默认情况下,包括ASCII单引号和双引号。</target>
        </trans-unit>
        <trans-unit id="e26e84066665808d0cbf6f9f145fc15a6a637560" translate="yes" xml:space="preserve">
          <source>Characters that will be considered whitespace and skipped. Whitespace bounds tokens. By default, includes space, tab, linefeed and carriage-return.</source>
          <target state="translated">将被视为空白字符并跳过的字符。空白空间对标记的约束。默认情况下,包括空格、制表符、换行符和回车符。</target>
        </trans-unit>
        <trans-unit id="d022970dc0ba6ab2971b67f3a7fd54783cabb675" translate="yes" xml:space="preserve">
          <source>Characters were found in the public id that are not allowed.</source>
          <target state="translated">在公共id中发现了不允许的字符。</target>
        </trans-unit>
        <trans-unit id="f10275b2cd296a2c580926b8c3dffee509567a95" translate="yes" xml:space="preserve">
          <source>Check Module</source>
          <target state="translated">检查模块</target>
        </trans-unit>
        <trans-unit id="bdb8b91f2d740baa2cabe90961bbc2589b6c57cb" translate="yes" xml:space="preserve">
          <source>Check for presence of docstrings.</source>
          <target state="translated">检查是否存在docstrings。</target>
        </trans-unit>
        <trans-unit id="85e4c713edbbd946421533a48cad53799b73f5e8" translate="yes" xml:space="preserve">
          <source>Check for the existence of the compiler executables whose names are listed in &lt;em&gt;cmd_names&lt;/em&gt; or all the compiler executables when &lt;em&gt;cmd_names&lt;/em&gt; is empty and return the first missing executable or &lt;code&gt;None&lt;/code&gt; when none is found missing.</source>
          <target state="translated">检查是否存在名称在&lt;em&gt;cmd_names&lt;/em&gt;中列出的编译器可执行文件，或者在&lt;em&gt;cmd_names&lt;/em&gt;为空时&lt;em&gt;检查&lt;/em&gt;所有编译器可执行文件的存在，并返回第一个丢失的可执行文件，或者在找不到任何丢失的可执行文件时返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7943cf444596e696934b71c4dd7dd0297f1a68fa" translate="yes" xml:space="preserve">
          <source>Check if an object appears to be a valid element object. &lt;em&gt;element&lt;/em&gt; is an element instance. Return &lt;code&gt;True&lt;/code&gt; if this is an element object.</source>
          <target state="translated">检查对象是否似乎是有效的元素对象。&lt;em&gt;element&lt;/em&gt;是一个元素实例。如果这是一个元素对象，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55eaba83b03a956c13f3391a5007a59ca372d70c" translate="yes" xml:space="preserve">
          <source>Check if child process has terminated. Set and return &lt;a href=&quot;#subprocess.Popen.returncode&quot;&gt;&lt;code&gt;returncode&lt;/code&gt;&lt;/a&gt; attribute. Otherwise, returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">检查子进程是否已终止。设置并返回&lt;a href=&quot;#subprocess.Popen.returncode&quot;&gt; &lt;code&gt;returncode&lt;/code&gt; &lt;/a&gt;属性。否则，返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0712d467992f66d9442557ee7ec76f241849b2b" translate="yes" xml:space="preserve">
          <source>Check if the fault handler is enabled.</source>
          <target state="translated">检查是否启用了故障处理程序。</target>
        </trans-unit>
        <trans-unit id="e84c72c066f9ed7305ec93a1cfb6efa9b2b55d6a" translate="yes" xml:space="preserve">
          <source>Check if there is a breakpoint for &lt;em&gt;lineno&lt;/em&gt; of &lt;em&gt;filename&lt;/em&gt;.</source>
          <target state="translated">检查是否有一个断点&lt;em&gt;LINENO&lt;/em&gt;的&lt;em&gt;文件名&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6313da59242b50dd544d6b5aa80cbaea486afcc7" translate="yes" xml:space="preserve">
          <source>Check the &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; arguments for string encoding and decoding operations. Examples: &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#str.encode&quot;&gt;&lt;code&gt;str.encode()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">检查&lt;em&gt;encoding&lt;/em&gt;和&lt;em&gt;errors&lt;/em&gt;参数，以进行字符串编码和解码操作。示例：&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdtypes#str.encode&quot;&gt; &lt;code&gt;str.encode()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23934a29089fe2d98b054c51d822989b0be514dc" translate="yes" xml:space="preserve">
          <source>Check the HTTP server&amp;rsquo;s log files. (&lt;code&gt;tail -f logfile&lt;/code&gt; in a separate window may be useful!)</source>
          <target state="translated">检查HTTP服务器的日志文件。（在单独的窗口中的 &lt;code&gt;tail -f logfile&lt;/code&gt; 可能有用！）</target>
        </trans-unit>
        <trans-unit id="f80ad831f2151d2e00855180685c13a492c69b1d" translate="yes" xml:space="preserve">
          <source>Check the cache for validity. Use this function if files in the cache may have changed on disk, and you require the updated version. If &lt;em&gt;filename&lt;/em&gt; is omitted, it will check all the entries in the cache.</source>
          <target state="translated">检查缓存的有效性。如果缓存中的文件可能已在磁盘上更改，并且您需要更新的版本，请使用此功能。如果省略&lt;em&gt;文件名&lt;/em&gt;，它将检查缓存中的所有条目。</target>
        </trans-unit>
        <trans-unit id="43a3f0ef33be472946d15e16602b802e1ad456b8" translate="yes" xml:space="preserve">
          <source>Check the installation instructions above.</source>
          <target state="translated">检查上面的安装说明。</target>
        </trans-unit>
        <trans-unit id="46dda6ccd623911741f8bc126a4c6de4d3708cf2" translate="yes" xml:space="preserve">
          <source>Check the syntax of the module currently open in the Editor window. If the module has not been saved IDLE will either prompt the user to save or autosave, as selected in the General tab of the Idle Settings dialog. If there is a syntax error, the approximate location is indicated in the Editor window.</source>
          <target state="translated">检查编辑器窗口中当前打开的模块的语法。如果该模块尚未保存,IDLE将提示用户保存或自动保存,在 &quot;闲置设置 &quot;对话框的 &quot;常规 &quot;选项卡中选择。如果出现语法错误,会在编辑器窗口中显示大概位置。</target>
        </trans-unit>
        <trans-unit id="6f56ecd56a94503c6e69a9dfc2c9b397df916745" translate="yes" xml:space="preserve">
          <source>Check the validity of an address on this server using SMTP &lt;code&gt;VRFY&lt;/code&gt;. Returns a tuple consisting of code 250 and a full &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; address (including human name) if the user address is valid. Otherwise returns an SMTP error code of 400 or greater and an error string.</source>
          <target state="translated">使用SMTP &lt;code&gt;VRFY&lt;/code&gt; 检查此服务器上地址的有效性。如果用户地址有效，则返回一个由代码250和完整的&lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt;地址（包括用户名）组成的元组。否则，返回SMTP错误代码400或更高以及错误字符串。</target>
        </trans-unit>
        <trans-unit id="4dbcd0e433593b55be57673e617ea920d3630924" translate="yes" xml:space="preserve">
          <source>Check whether &lt;em&gt;subclass&lt;/em&gt; is considered a subclass of this ABC. This means that you can customize the behavior of &lt;code&gt;issubclass&lt;/code&gt; further without the need to call &lt;a href=&quot;#abc.ABCMeta.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt; on every class you want to consider a subclass of the ABC. (This class method is called from the &lt;code&gt;__subclasscheck__()&lt;/code&gt; method of the ABC.)</source>
          <target state="translated">检查&lt;em&gt;子类&lt;/em&gt;是否被视为此ABC的子类。这意味着您可以进一步自定义 &lt;code&gt;issubclass&lt;/code&gt; 的行为，而无需在要考虑ABC的子类的每个类上调用&lt;a href=&quot;#abc.ABCMeta.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;。（此类方法从ABC 的 &lt;code&gt;__subclasscheck__()&lt;/code&gt; 方法中调用。）</target>
        </trans-unit>
        <trans-unit id="4bbc973f550662033410c4a11c6ed5b6eae695b1" translate="yes" xml:space="preserve">
          <source>Check whether we should break here, depending on the way the breakpoint &lt;em&gt;b&lt;/em&gt; was set.</source>
          <target state="translated">根据设置断点&lt;em&gt;b&lt;/em&gt;的方式，检查是否应在此处中断。</target>
        </trans-unit>
        <trans-unit id="99418ed53754c477564d846e242001c0d19dcc8a" translate="yes" xml:space="preserve">
          <source>Checking &lt;code&gt;isinstance(obj, Iterable)&lt;/code&gt; detects classes that are registered as &lt;a href=&quot;#collections.abc.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt; or that have an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method, but it does not detect classes that iterate with the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method. The only reliable way to determine whether an object is &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; is to call &lt;code&gt;iter(obj)&lt;/code&gt;.</source>
          <target state="translated">检查 &lt;code&gt;isinstance(obj, Iterable)&lt;/code&gt; 会检测注册为&lt;a href=&quot;#collections.abc.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; 的类&lt;/a&gt;或具有&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;方法的类，但不会检测到使用&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;方法进行迭代的类。确定对象是否&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;可迭代&lt;/a&gt;的唯一可靠方法是调用 &lt;code&gt;iter(obj)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07556b8c497175c0a5872e538866bd63cc9469ae" translate="yes" xml:space="preserve">
          <source>Checking &lt;code&gt;isinstance(obj, Iterable)&lt;/code&gt; detects classes that are registered as &lt;a href=&quot;#collections.abc.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt; or that have an &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; method, but it does not detect classes that iterate with the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method. The only reliable way to determine whether an object is &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; is to call &lt;code&gt;iter(obj)&lt;/code&gt;.</source>
          <target state="translated">检查 &lt;code&gt;isinstance(obj, Iterable)&lt;/code&gt; 会检测已注册为&lt;a href=&quot;#collections.abc.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;或具有&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;方法的类，但不会检测到使用&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;方法进行迭代的类。确定对象是否&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;可迭代&lt;/a&gt;的唯一可靠方法是调用 &lt;code&gt;iter(obj)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dfe36b1961d60687a3d13b0c81484ac9e92796e" translate="yes" xml:space="preserve">
          <source>Checking a password is usually done by passing the plain-text password as &lt;em&gt;word&lt;/em&gt; and the full results of a previous &lt;a href=&quot;#module-crypt&quot;&gt;&lt;code&gt;crypt()&lt;/code&gt;&lt;/a&gt; call, which should be the same as the results of this call.</source>
          <target state="translated">通常，通过将纯文本密码作为&lt;em&gt;单词&lt;/em&gt;以及上一个&lt;a href=&quot;#module-crypt&quot;&gt; &lt;code&gt;crypt()&lt;/code&gt; &lt;/a&gt;调用的完整结果传递，来检查密码，该结果应与此调用的结果相同。</target>
        </trans-unit>
        <trans-unit id="770c82b5a4c4a7f96ddd79e7e6610cbd680a79ae" translate="yes" xml:space="preserve">
          <source>Checking examples in docstrings.</source>
          <target state="translated">检查docstrings中的例子。</target>
        </trans-unit>
        <trans-unit id="c20f4941d04f4e4d9b4f519a56849d7fe2ed63bf" translate="yes" xml:space="preserve">
          <source>Checking for a Pair</source>
          <target state="translated">检查一对</target>
        </trans-unit>
        <trans-unit id="cf05a79c49715aff0b97839ee1149bc84d317bac" translate="yes" xml:space="preserve">
          <source>Checking if a module can be imported</source>
          <target state="translated">检查是否可以导入模块</target>
        </trans-unit>
        <trans-unit id="7ecb621d869ae58352896620fc71f13cae4fc7e0" translate="yes" xml:space="preserve">
          <source>Checking multiple calls with mock</source>
          <target state="translated">用模拟检查多个电话</target>
        </trans-unit>
        <trans-unit id="4ba8ccbcef578531fba8afe7d60d9d863915123f" translate="yes" xml:space="preserve">
          <source>Checkpoint mailbox on server.</source>
          <target state="translated">检查点服务器上的邮箱。</target>
        </trans-unit>
        <trans-unit id="a50c8a7b535fdd63163079f311f573e64ac86b0b" translate="yes" xml:space="preserve">
          <source>Checks for ASCII any printable character except space.</source>
          <target state="translated">检查ASCII码中除空格以外的任何可打印字符。</target>
        </trans-unit>
        <trans-unit id="2e8e13dea2bdaa8179c95d8290ae2b14dcc59aab" translate="yes" xml:space="preserve">
          <source>Checks for ASCII white-space characters; space, line feed, carriage return, form feed, horizontal tab, vertical tab.</source>
          <target state="translated">检查ASCII空格字符;空格、换行、回车、换页、水平制表符、垂直制表符。</target>
        </trans-unit>
        <trans-unit id="0c426fca78da2d4087d0c5d45267524797869ed7" translate="yes" xml:space="preserve">
          <source>Checks for a character value that fits in the 7-bit ASCII set.</source>
          <target state="translated">检查是否有适合7位ASCII码集的字符值。</target>
        </trans-unit>
        <trans-unit id="d7cfa4770d32e6893e8f2c4a0e698e841259c353" translate="yes" xml:space="preserve">
          <source>Checks for a non-ASCII character (ordinal values 0x80 and above).</source>
          <target state="translated">检查是否有非ASCII字符(序数值0x80及以上)。</target>
        </trans-unit>
        <trans-unit id="68b367e7809261a0005e66291eed0c1cf11e75f6" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII alphabetic character; it is equivalent to &lt;code&gt;isupper(c) or
islower(c)&lt;/code&gt;.</source>
          <target state="translated">检查ASCII字母字符；它等效于 &lt;code&gt;isupper(c) or islower(c)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e082174a7d3b99ac0950d4b67971c9ff513dbefd" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII alphanumeric character; it is equivalent to &lt;code&gt;isalpha(c) or
isdigit(c)&lt;/code&gt;.</source>
          <target state="translated">检查ASCII字母数字字符；它等效于 &lt;code&gt;isalpha(c) or isdigit(c)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="184ef8ba37bc7bc05aef137b47e5b55808a1eff0" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII control character (in the range 0x00 to 0x1f or 0x7f).</source>
          <target state="translated">检查ASCII控制字符(范围为0x00至0x1f或0x7f)。</target>
        </trans-unit>
        <trans-unit id="a1143d7d4de709822eb925678fb09d5a30bc314e" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII control character (ordinal values 0 to 31).</source>
          <target state="translated">检查ASCII控制字符(序数值0~31)。</target>
        </trans-unit>
        <trans-unit id="9948020e9e1c4527fc1eadf2a61359ef7ae24081" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII decimal digit, &lt;code&gt;'0'&lt;/code&gt; through &lt;code&gt;'9'&lt;/code&gt;. This is equivalent to &lt;code&gt;c in string.digits&lt;/code&gt;.</source>
          <target state="translated">检查ASCII十进制数字 &lt;code&gt;'0'&lt;/code&gt; 到 &lt;code&gt;'9'&lt;/code&gt; 。这等效 &lt;code&gt;c in string.digits&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ed52c2fc78805e535882f795a920d7efe8d62e4" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII hexadecimal digit. This is equivalent to &lt;code&gt;c in
string.hexdigits&lt;/code&gt;.</source>
          <target state="translated">检查ASCII十六进制数字。这等效 &lt;code&gt;c in string.hexdigits&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0142a361c62cc534bc11a55d9cb879e4ca7b164e" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII lower-case character.</source>
          <target state="translated">检查ASCII小写字符。</target>
        </trans-unit>
        <trans-unit id="9606c5bcd28699aee7059ce73e632d4785cc1596" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII uppercase letter.</source>
          <target state="translated">检查ASCII大写字母。</target>
        </trans-unit>
        <trans-unit id="670f3c11d53db0f8621ecb94fe13e60a352e2633" translate="yes" xml:space="preserve">
          <source>Checks for an ASCII whitespace character; space or horizontal tab.</source>
          <target state="translated">检查ASCII空白字符;空格或水平制表符。</target>
        </trans-unit>
        <trans-unit id="0c47a1c59fc7cbad54a98337fa9f17c2b8329fb7" translate="yes" xml:space="preserve">
          <source>Checks for any ASCII printable character including space.</source>
          <target state="translated">检查任何ASCII可打印字符,包括空格。</target>
        </trans-unit>
        <trans-unit id="b1af863acbf04a72f3e1bb9d7d5a9d830a57b7c4" translate="yes" xml:space="preserve">
          <source>Checks for any printable ASCII character which is not a space or an alphanumeric character.</source>
          <target state="translated">检查任何非空格或字母数字字符的可打印ASCII字符。</target>
        </trans-unit>
        <trans-unit id="2bab43b31c3c05956b489889cb73e31b66dfe5e7" translate="yes" xml:space="preserve">
          <source>Checks for buffer full or a record at the &lt;em&gt;flushLevel&lt;/em&gt; or higher.</source>
          <target state="translated">检查缓冲区是否已满或是否在&lt;em&gt;flushLevel&lt;/em&gt;或更高级别的记录。</target>
        </trans-unit>
        <trans-unit id="5755f42c8c1bc9d74a65eb07df3bacffc7e77290" translate="yes" xml:space="preserve">
          <source>Checks that</source>
          <target state="translated">检查</target>
        </trans-unit>
        <trans-unit id="773af1d672530d6e774e2caee9abe5a931430e72" translate="yes" xml:space="preserve">
          <source>Checks to see if the file has changed. If it has, the existing stream is flushed and closed and the file opened again, typically as a precursor to outputting the record to the file.</source>
          <target state="translated">检查文件是否发生了变化,如果发生了变化,则刷新并关闭现有的流,并再次打开文件,通常作为向文件输出记录的前奏。如果有的话,现有的流会被刷新和关闭,并再次打开文件,通常作为向文件输出记录的前奏。</target>
        </trans-unit>
        <trans-unit id="2cb6184d1ccbcf5b73046565c4911768a96dc999" translate="yes" xml:space="preserve">
          <source>Checks to see if this logger has any handlers configured. This is done by looking for handlers in this logger and its parents in the logger hierarchy. Returns &lt;code&gt;True&lt;/code&gt; if a handler was found, else &lt;code&gt;False&lt;/code&gt;. The method stops searching up the hierarchy whenever a logger with the &amp;lsquo;propagate&amp;rsquo; attribute set to false is found - that will be the last logger which is checked for the existence of handlers.</source>
          <target state="translated">检查此记录器是否配置了任何处理程序。这是通过在此记录器及其父记录器层次结构中查找处理程序来完成的。如果找到处理程序，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。只要找到&amp;ldquo; propagate&amp;rdquo;属性设置为false的记录器，该方法就会停止搜索层次结构-这将是最后一个检查处理程序是否存在的记录器。</target>
        </trans-unit>
        <trans-unit id="6d1a9e9deb3d91d99897c01ea23bc95014cadf6d" translate="yes" xml:space="preserve">
          <source>Checks whether &lt;code&gt;__annotations__&lt;/code&gt; is defined in &lt;code&gt;locals()&lt;/code&gt;, if not it is set up to an empty &lt;code&gt;dict&lt;/code&gt;. This opcode is only emitted if a class or module body contains &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-variable-annotation&quot;&gt;variable annotations&lt;/a&gt; statically.</source>
          <target state="translated">检查是否在 &lt;code&gt;locals()&lt;/code&gt; 中定义了 &lt;code&gt;__annotations__&lt;/code&gt; ，如果没有将其设置为空 &lt;code&gt;dict&lt;/code&gt; 。仅当类或模块主体静态包含&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-variable-annotation&quot;&gt;变量注释&lt;/a&gt;时才发出此操作码。</target>
        </trans-unit>
        <trans-unit id="706eabdb90e101986a78f9a68a018a5b0e1008ed" translate="yes" xml:space="preserve">
          <source>Checks whether &lt;code&gt;__annotations__&lt;/code&gt; is defined in &lt;code&gt;locals()&lt;/code&gt;, if not it is set up to an empty &lt;code&gt;dict&lt;/code&gt;. This opcode is only emitted if a class or module body contains &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-variable-annotation&quot;&gt;variable annotations&lt;/a&gt; statically.</source>
          <target state="translated">检查是否在 &lt;code&gt;locals()&lt;/code&gt; 中定义了 &lt;code&gt;__annotations__&lt;/code&gt; ，如果没有将其设置为空 &lt;code&gt;dict&lt;/code&gt; 。仅当类或模块主体静态包含&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-variable-annotation&quot;&gt;变量注释&lt;/a&gt;时才发出此操作码。</target>
        </trans-unit>
        <trans-unit id="3a2b20beeede172774a1f8045fe22c35f86683e2" translate="yes" xml:space="preserve">
          <source>Child process stopped or terminated.</source>
          <target state="translated">子进程停止或终止。</target>
        </trans-unit>
        <trans-unit id="0c4c18349ecd0287371be1eb0aa9c1c43b7b7d53" translate="yes" xml:space="preserve">
          <source>ChildProcessError</source>
          <target state="translated">ChildProcessError</target>
        </trans-unit>
        <trans-unit id="98c6cd781584b898b1283038c6189e4de2602599" translate="yes" xml:space="preserve">
          <source>Children are nested, and we can access specific child nodes by index:</source>
          <target state="translated">子节点是嵌套的,我们可以通过索引访问特定的子节点。</target>
        </trans-unit>
        <trans-unit id="f00ff5d98a3701813881597372a21475919195e7" translate="yes" xml:space="preserve">
          <source>Children present in &lt;em&gt;item&lt;/em&gt; that are not present in &lt;em&gt;newchildren&lt;/em&gt; are detached from the tree. No items in &lt;em&gt;newchildren&lt;/em&gt; may be an ancestor of &lt;em&gt;item&lt;/em&gt;. Note that not specifying &lt;em&gt;newchildren&lt;/em&gt; results in detaching &lt;em&gt;item&lt;/em&gt;&amp;rsquo;s children.</source>
          <target state="translated">目前在儿童&lt;em&gt;产品&lt;/em&gt;中不存在的&lt;em&gt;newchildren&lt;/em&gt;从树上脱落。在没有项目&lt;em&gt;newchildren&lt;/em&gt;可能的祖先&lt;em&gt;项目&lt;/em&gt;。请注意，未指定新子&lt;em&gt;项会&lt;/em&gt;导致分离&lt;em&gt;项目&lt;/em&gt;的子项。</target>
        </trans-unit>
        <trans-unit id="e1db63cafcfdc67096bcfdd9d91b0fbb6521c793" translate="yes" xml:space="preserve">
          <source>Chunk ID</source>
          <target state="translated">大块ID</target>
        </trans-unit>
        <trans-unit id="736a8e0f6e2fa7d4d46a8ed97a66aa91c94e8db9" translate="yes" xml:space="preserve">
          <source>Chunked transfer encoding has been added to the HTTP protocol version 1.1. Unless the HTTP server is known to handle HTTP 1.1, the caller must either specify the Content-Length, or must pass a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or bytes-like object that is not also a file as the body representation.</source>
          <target state="translated">块传输编码已添加到HTTP协议版本1.1。除非已知HTTP服务器可以处理HTTP 1.1，否则调用者必须指定Content-Length，或者必须传递&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;或类似字节的对象，该对象也不是主体表示形式的文件。</target>
        </trans-unit>
        <trans-unit id="00e39bd1891e39150546d8429f33f852994f7095" translate="yes" xml:space="preserve">
          <source>Cipher selection</source>
          <target state="translated">密码选择</target>
        </trans-unit>
        <trans-unit id="fd328df32af47ff4f34212c8adf3d3fbaf1aea24" translate="yes" xml:space="preserve">
          <source>Citations</source>
          <target state="translated">Citations</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="5011f28b30cdf7dcd4371bf2deb0312a91a12745" translate="yes" xml:space="preserve">
          <source>Class &lt;a href=&quot;#fileinput.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; is the implementation; its methods &lt;a href=&quot;#fileinput.filename&quot;&gt;&lt;code&gt;filename()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.lineno&quot;&gt;&lt;code&gt;lineno()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.filelineno&quot;&gt;&lt;code&gt;filelineno()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.isfirstline&quot;&gt;&lt;code&gt;isfirstline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.isstdin&quot;&gt;&lt;code&gt;isstdin()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.nextfile&quot;&gt;&lt;code&gt;nextfile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#fileinput.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; correspond to the functions of the same name in the module. In addition it has a &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; method which returns the next input line, and a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method which implements the sequence behavior. The sequence must be accessed in strictly sequential order; random access and &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; cannot be mixed.</source>
          <target state="translated">类&lt;a href=&quot;#fileinput.FileInput&quot;&gt; &lt;code&gt;FileInput&lt;/code&gt; &lt;/a&gt;是实现；它的方法&lt;a href=&quot;#fileinput.filename&quot;&gt; &lt;code&gt;filename()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.lineno&quot;&gt; &lt;code&gt;lineno()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.filelineno&quot;&gt; &lt;code&gt;filelineno()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.isfirstline&quot;&gt; &lt;code&gt;isfirstline()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.isstdin&quot;&gt; &lt;code&gt;isstdin()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.nextfile&quot;&gt; &lt;code&gt;nextfile()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#fileinput.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;对应于模块中同名的功能。此外，它还有一个&lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;方法返回下一个输入行，还有一个&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;方法实现序列行为。必须严格按顺序访问该序列。随机访问和&lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;不能混合使用。</target>
        </trans-unit>
        <trans-unit id="a3530fea6f6b9189797cb183bb239a71aab4a8c2" translate="yes" xml:space="preserve">
          <source>Class &lt;a href=&quot;#fileinput.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; is the implementation; its methods &lt;a href=&quot;#fileinput.filename&quot;&gt;&lt;code&gt;filename()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.lineno&quot;&gt;&lt;code&gt;lineno()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.filelineno&quot;&gt;&lt;code&gt;filelineno()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.isfirstline&quot;&gt;&lt;code&gt;isfirstline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.isstdin&quot;&gt;&lt;code&gt;isstdin()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#fileinput.nextfile&quot;&gt;&lt;code&gt;nextfile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#fileinput.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; correspond to the functions of the same name in the module. In addition it has a &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; method which returns the next input line, and a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method which implements the sequence behavior. The sequence must be accessed in strictly sequential order; random access and &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; cannot be mixed.</source>
          <target state="translated">类&lt;a href=&quot;#fileinput.FileInput&quot;&gt; &lt;code&gt;FileInput&lt;/code&gt; &lt;/a&gt;是实现；其方法&lt;a href=&quot;#fileinput.filename&quot;&gt; &lt;code&gt;filename()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.lineno&quot;&gt; &lt;code&gt;lineno()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.filelineno&quot;&gt; &lt;code&gt;filelineno()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.isfirstline&quot;&gt; &lt;code&gt;isfirstline()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.isstdin&quot;&gt; &lt;code&gt;isstdin()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#fileinput.nextfile&quot;&gt; &lt;code&gt;nextfile()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#fileinput.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;对应于模块中相同名称的功能。此外，它还具有一个&lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;方法和一个&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;方法，该方法返回下一个输入行，该方法实现序列行为。必须严格按顺序访问该序列。随机访问和&lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;不能混合使用。</target>
        </trans-unit>
        <trans-unit id="60c75dc29cb5dadfc3fedd4fb63015bb910bb221" translate="yes" xml:space="preserve">
          <source>Class &lt;a href=&quot;#random.Random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; can also be subclassed if you want to use a different basic generator of your own devising: in that case, override the &lt;code&gt;random()&lt;/code&gt;, &lt;code&gt;seed()&lt;/code&gt;, &lt;code&gt;getstate()&lt;/code&gt;, and &lt;code&gt;setstate()&lt;/code&gt; methods. Optionally, a new generator can supply a &lt;code&gt;getrandbits()&lt;/code&gt; method &amp;mdash; this allows &lt;a href=&quot;#random.randrange&quot;&gt;&lt;code&gt;randrange()&lt;/code&gt;&lt;/a&gt; to produce selections over an arbitrarily large range.</source>
          <target state="translated">如果要使用自己设计的其他基本生成器，还可以将&lt;a href=&quot;#random.Random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt;类作为子类：在这种情况下，请重写 &lt;code&gt;random()&lt;/code&gt; ， &lt;code&gt;seed()&lt;/code&gt; ， &lt;code&gt;getstate()&lt;/code&gt; 和 &lt;code&gt;setstate()&lt;/code&gt; 方法。可选地，新的生成器可以提供 &lt;code&gt;getrandbits()&lt;/code&gt; 方法-这允许&lt;a href=&quot;#random.randrange&quot;&gt; &lt;code&gt;randrange()&lt;/code&gt; &lt;/a&gt;产生任意大范围内的选择。</target>
        </trans-unit>
        <trans-unit id="929c674a0aba4baa2142b122f4bf21b8a7c20cff" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Class&lt;/code&gt; instances describe classes defined by class statements. They have the same attributes as Functions and two more.</source>
          <target state="translated">类 &lt;code&gt;Class&lt;/code&gt; 实例描述由类语句定义的类。它们具有与&amp;ldquo;函数&amp;rdquo;相同的属性，另外还有两个。</target>
        </trans-unit>
        <trans-unit id="ae764b5296fc4ee23661da5abd333bdf15c69b0f" translate="yes" xml:space="preserve">
          <source>Class &lt;code&gt;Function&lt;/code&gt; instances describe functions defined by def statements. They have the following attributes:</source>
          <target state="translated">类 &lt;code&gt;Function&lt;/code&gt; 实例描述由def语句定义的函数。它们具有以下属性：</target>
        </trans-unit>
        <trans-unit id="a65de4fb115cca5521706213a476fe868597cb0a" translate="yes" xml:space="preserve">
          <source>Class Browser</source>
          <target state="translated">类浏览器</target>
        </trans-unit>
        <trans-unit id="23e735f2e42f0ee01fd065b66b276180dd776b09" translate="yes" xml:space="preserve">
          <source>Class Name</source>
          <target state="translated">班级名称</target>
        </trans-unit>
        <trans-unit id="dd00b8af96e772329c75a53f24777288884aafe8" translate="yes" xml:space="preserve">
          <source>Class Objects</source>
          <target state="translated">类对象</target>
        </trans-unit>
        <trans-unit id="fbf93c1794c41014003615a139ea922fcbfbcc01" translate="yes" xml:space="preserve">
          <source>Class and Module Fixtures</source>
          <target state="translated">类和模块夹具</target>
        </trans-unit>
        <trans-unit id="ed1ad1730d3490d1d25d07f58153e7b7a339349a" translate="yes" xml:space="preserve">
          <source>Class and module level fixtures are implemented in &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt;. When the test suite encounters a test from a new class then &lt;code&gt;tearDownClass()&lt;/code&gt; from the previous class (if there is one) is called, followed by &lt;code&gt;setUpClass()&lt;/code&gt; from the new class.</source>
          <target state="translated">类和模块级别的夹具在&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;中实现。当测试套件遇到来自新类的测试时，将调用 &lt;code&gt;setUpClass()&lt;/code&gt; 如果有 &lt;code&gt;tearDownClass()&lt;/code&gt; ，然后调用新类中的setUpClass（）。</target>
        </trans-unit>
        <trans-unit id="c4fa2a98922d143bffa48b6ed02cb6d321695c93" translate="yes" xml:space="preserve">
          <source>Class attributes:</source>
          <target state="translated">类属性。</target>
        </trans-unit>
        <trans-unit id="7573e284e92d161b68362f0fec9c4e58cc296bad" translate="yes" xml:space="preserve">
          <source>Class commands in Tk correspond to class constructors in Tkinter.</source>
          <target state="translated">Tk中的类命令对应Tkinter中的类构造函数。</target>
        </trans-unit>
        <trans-unit id="d55e4e89fb11250e448efed2a0201a533a30baae" translate="yes" xml:space="preserve">
          <source>Class derived from &lt;a href=&quot;#xdrlib.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;. Contains no additional instance variables.</source>
          <target state="translated">从&lt;a href=&quot;#xdrlib.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;派生的类。不包含其他实例变量。</target>
        </trans-unit>
        <trans-unit id="84f7ce2ba664d2ac18f2c8942a569fd5c8e347dc" translate="yes" xml:space="preserve">
          <source>Class for creating ZIP archives containing Python libraries.</source>
          <target state="translated">用于创建包含Python库的ZIP存档的类。</target>
        </trans-unit>
        <trans-unit id="68afc50ddb6cb059361134f860e6f3500f7eced4" translate="yes" xml:space="preserve">
          <source>Class for logging support.</source>
          <target state="translated">类的日志支持。</target>
        </trans-unit>
        <trans-unit id="3cc5c8ac207507b0210f4399e3c2140a058a8167" translate="yes" xml:space="preserve">
          <source>Class for reading and writing tar archives. Do not use this class directly: use &lt;a href=&quot;#tarfile.open&quot;&gt;&lt;code&gt;tarfile.open()&lt;/code&gt;&lt;/a&gt; instead. See &lt;a href=&quot;#tarfile-objects&quot;&gt;TarFile Objects&lt;/a&gt;.</source>
          <target state="translated">读写tar档案的类。不要直接使用&lt;a href=&quot;#tarfile.open&quot;&gt; &lt;code&gt;tarfile.open()&lt;/code&gt; &lt;/a&gt;：请改用tarfile.open（）。参见&lt;a href=&quot;#tarfile-objects&quot;&gt;TarFile对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f10fb057738041b2149f8fc576536855bf0de57c" translate="yes" xml:space="preserve">
          <source>Class for timing execution speed of small code snippets.</source>
          <target state="translated">用于小代码片段的定时执行速度的类。</target>
        </trans-unit>
        <trans-unit id="7ab6685059f14a604a654e8895ff71c7adf3e7dd" translate="yes" xml:space="preserve">
          <source>Class hierarchy</source>
          <target state="translated">阶层结构</target>
        </trans-unit>
        <trans-unit id="b42af5d790bda920cdf9ae46200399a00dda46ce" translate="yes" xml:space="preserve">
          <source>Class implementing bounded semaphore objects. A bounded semaphore checks to make sure its current value doesn&amp;rsquo;t exceed its initial value. If it does, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. In most situations semaphores are used to guard resources with limited capacity. If the semaphore is released too many times it&amp;rsquo;s a sign of a bug. If not given, &lt;em&gt;value&lt;/em&gt; defaults to 1.</source>
          <target state="translated">Class implementing bounded semaphore objects. A bounded semaphore checks to make sure its current value doesn&amp;rsquo;t exceed its initial value. If it does, &lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt; is raised. In most situations semaphores are used to guard resources with limited capacity. If the semaphore is released too many times it&amp;rsquo;s a sign of a bug. If not given, &lt;em&gt;value&lt;/em&gt; defaults to 1.</target>
        </trans-unit>
        <trans-unit id="63012a7db9454f51f53d8b6120ae15eb1cb62e5f" translate="yes" xml:space="preserve">
          <source>Class implementing event objects. An event manages a flag that can be set to true with the &lt;a href=&quot;#threading.Event.set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; method and reset to false with the &lt;a href=&quot;#threading.Event.clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#threading.Event.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; method blocks until the flag is true. The flag is initially false.</source>
          <target state="translated">Class implementing event objects. An event manages a flag that can be set to true with the &lt;a href=&quot;#threading.Event.set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt; method and reset to false with the &lt;a href=&quot;#threading.Event.clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt; method. The &lt;a href=&quot;#threading.Event.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt; method blocks until the flag is true. The flag is initially false.</target>
        </trans-unit>
        <trans-unit id="0d2d3e4d7e152f206a093f9b188f21f72f4b58bf" translate="yes" xml:space="preserve">
          <source>Class method</source>
          <target state="translated">类方法</target>
        </trans-unit>
        <trans-unit id="a2dc4ec5962b45360a31a2d9799c063e1d742f54" translate="yes" xml:space="preserve">
          <source>Class method that attempts to find a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;spec&lt;/a&gt; for the module specified by &lt;em&gt;fullname&lt;/em&gt; on &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; or, if defined, on &lt;em&gt;path&lt;/em&gt;. For each path entry that is searched, &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt; is checked. If a non-false object is found then it is used as the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-finder&quot;&gt;path entry finder&lt;/a&gt; to look for the module being searched for. If no entry is found in &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;sys#sys.path_hooks&quot;&gt;&lt;code&gt;sys.path_hooks&lt;/code&gt;&lt;/a&gt; is searched for a finder for the path entry and, if found, is stored in &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt; along with being queried about the module. If no finder is ever found then &lt;code&gt;None&lt;/code&gt; is both stored in the cache and returned.</source>
          <target state="translated">尝试为&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;或&lt;em&gt;path&lt;/em&gt;上由&lt;em&gt;全名&lt;/em&gt;指定的模块查找&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-module-spec&quot;&gt;规范的&lt;/a&gt;类方法。对于搜索的每个路径条目，都会检查&lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; &lt;/a&gt;。如果找到非伪对象，则将其用作&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-entry-finder&quot;&gt;路径条目查找器&lt;/a&gt;以查找要搜索的模块。如果在&lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; 中&lt;/a&gt;未找到任何条目，则在&lt;a href=&quot;sys#sys.path_hooks&quot;&gt; &lt;code&gt;sys.path_hooks&lt;/code&gt; &lt;/a&gt;中搜索路径条目的查找器，如果找到该条目，则将其与模块查询一起存储在&lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; 中&lt;/a&gt;。如果是以往任何时候都没有发现取景器则 &lt;code&gt;None&lt;/code&gt; &lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; 既存储在缓存中又返回。</target>
        </trans-unit>
        <trans-unit id="82f5eaa44c5a3cc9878c139d8de24abf8d238992" translate="yes" xml:space="preserve">
          <source>Class method that attempts to find a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-module-spec&quot;&gt;spec&lt;/a&gt; for the module specified by &lt;em&gt;fullname&lt;/em&gt; on &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; or, if defined, on &lt;em&gt;path&lt;/em&gt;. For each path entry that is searched, &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt; is checked. If a non-false object is found then it is used as the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-entry-finder&quot;&gt;path entry finder&lt;/a&gt; to look for the module being searched for. If no entry is found in &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;sys#sys.path_hooks&quot;&gt;&lt;code&gt;sys.path_hooks&lt;/code&gt;&lt;/a&gt; is searched for a finder for the path entry and, if found, is stored in &lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt;&lt;code&gt;sys.path_importer_cache&lt;/code&gt;&lt;/a&gt; along with being queried about the module. If no finder is ever found then &lt;code&gt;None&lt;/code&gt; is both stored in the cache and returned.</source>
          <target state="translated">类方法，该方法试图找到一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-module-spec&quot;&gt;规范&lt;/a&gt;用于通过指定的模块&lt;em&gt;全称&lt;/em&gt;上&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; 中&lt;/a&gt;，或者，如果所定义，上&lt;em&gt;路径&lt;/em&gt;。对于搜索到的每个路径条目，都会检查&lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; &lt;/a&gt;。如果找到非伪对象，则将其用作&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-entry-finder&quot;&gt;路径条目查找器&lt;/a&gt;以查找要搜索的模块。如果在&lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; 中&lt;/a&gt;找不到任何条目，则将在&lt;a href=&quot;sys#sys.path_hooks&quot;&gt; &lt;code&gt;sys.path_hooks&lt;/code&gt; &lt;/a&gt;中搜索路径条目的查找器，如果找到该条目，则将其与模块查询一起存储在&lt;a href=&quot;sys#sys.path_importer_cache&quot;&gt; &lt;code&gt;sys.path_importer_cache&lt;/code&gt; 中&lt;/a&gt;。如果是以往任何时候都没有发现取景器则 &lt;code&gt;None&lt;/code&gt; 都存储在缓存中并返回。</target>
        </trans-unit>
        <trans-unit id="ce17c2aad69e08f2bd2dce0baa77af1bf69d3686" translate="yes" xml:space="preserve">
          <source>Class method that makes a new instance from an existing sequence or iterable.</source>
          <target state="translated">从现有的序列或可迭代类中创建一个新实例的类方法。</target>
        </trans-unit>
        <trans-unit id="0afe9fa904c125127c594843c18a1060ab5031cd" translate="yes" xml:space="preserve">
          <source>Class method to return the float represented by a hexadecimal string &lt;em&gt;s&lt;/em&gt;. The string &lt;em&gt;s&lt;/em&gt; may have leading and trailing whitespace.</source>
          <target state="translated">用于返回以十六进制字符串&lt;em&gt;s&lt;/em&gt;表示的float的类方法。字符串&lt;em&gt;s&lt;/em&gt;可以具有前导和尾随空格。</target>
        </trans-unit>
        <trans-unit id="082e315833bdf7742579ed67a458d13e71f62f7c" translate="yes" xml:space="preserve">
          <source>Class methods are different than C++ or Java static methods. If you want those, see &lt;a href=&quot;#staticmethod&quot;&gt;&lt;code&gt;staticmethod()&lt;/code&gt;&lt;/a&gt; in this section. For more information on class methods, see &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#types&quot;&gt;The standard type hierarchy&lt;/a&gt;.</source>
          <target state="translated">类方法不同于C ++或Java静态方法。如果需要这些，请参见本节中的&lt;a href=&quot;#staticmethod&quot;&gt; &lt;code&gt;staticmethod()&lt;/code&gt; &lt;/a&gt;。有关类方法的更多信息，请参见&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#types&quot;&gt;标准类型层次结构&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0dac4289bdb5e3fd67ae254bc6ffb06da5186fed" translate="yes" xml:space="preserve">
          <source>Class methods are different than C++ or Java static methods. If you want those, see &lt;a href=&quot;#staticmethod&quot;&gt;&lt;code&gt;staticmethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">类方法不同于C ++或Java静态方法。如果需要这些，请参见&lt;a href=&quot;#staticmethod&quot;&gt; &lt;code&gt;staticmethod()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a519397a05f90218e172ffc9d40adcc602dabdec" translate="yes" xml:space="preserve">
          <source>Class that implements the default pseudo-random number generator used by the &lt;a href=&quot;#module-random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">实现&lt;a href=&quot;#module-random&quot;&gt; &lt;code&gt;random&lt;/code&gt; &lt;/a&gt;模块使用的默认伪随机数生成器的类。</target>
        </trans-unit>
        <trans-unit id="e3162a8d1dcc3a002a055c05198688f57c2497a9" translate="yes" xml:space="preserve">
          <source>Class that simulates a dictionary. The instance&amp;rsquo;s contents are kept in a regular dictionary, which is accessible via the &lt;a href=&quot;#collections.UserDict.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute of &lt;a href=&quot;#collections.UserDict&quot;&gt;&lt;code&gt;UserDict&lt;/code&gt;&lt;/a&gt; instances. If &lt;em&gt;initialdata&lt;/em&gt; is provided, &lt;a href=&quot;#collections.UserDict.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; is initialized with its contents; note that a reference to &lt;em&gt;initialdata&lt;/em&gt; will not be kept, allowing it be used for other purposes.</source>
          <target state="translated">模拟字典的类。实例的内容保存在常规词典中，可通过&lt;a href=&quot;#collections.UserDict&quot;&gt; &lt;code&gt;UserDict&lt;/code&gt; &lt;/a&gt;实例的&lt;a href=&quot;#collections.UserDict.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;属性对其进行访问。如果提供了&lt;em&gt;initialdata&lt;/em&gt;，则使用其内容初始化&lt;a href=&quot;#collections.UserDict.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;；请注意，将不会保留对&lt;em&gt;initialdata&lt;/em&gt;的引用，从而将其用于其他目的。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aaf01aaedd82a869189d9ae17dfb8d0c13f510f4" translate="yes" xml:space="preserve">
          <source>Class that simulates a list. The instance&amp;rsquo;s contents are kept in a regular list, which is accessible via the &lt;a href=&quot;#collections.UserList.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute of &lt;a href=&quot;#collections.UserList&quot;&gt;&lt;code&gt;UserList&lt;/code&gt;&lt;/a&gt; instances. The instance&amp;rsquo;s contents are initially set to a copy of &lt;em&gt;list&lt;/em&gt;, defaulting to the empty list &lt;code&gt;[]&lt;/code&gt;. &lt;em&gt;list&lt;/em&gt; can be any iterable, for example a real Python list or a &lt;a href=&quot;#collections.UserList&quot;&gt;&lt;code&gt;UserList&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">模拟列表的类。实例的内容保存在常规列表中，可通过&lt;a href=&quot;#collections.UserList&quot;&gt; &lt;code&gt;UserList&lt;/code&gt; &lt;/a&gt;实例的&lt;a href=&quot;#collections.UserList.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;属性对其进行访问。实例的内容最初设置为&lt;em&gt;list&lt;/em&gt;的副本，默认为空列表 &lt;code&gt;[]&lt;/code&gt; 。&lt;em&gt;list&lt;/em&gt;可以是任何可迭代的，例如真实的Python列表或&lt;a href=&quot;#collections.UserList&quot;&gt; &lt;code&gt;UserList&lt;/code&gt; &lt;/a&gt;对象。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0beab80b9209ba3033d0dbb9a7a263c0fb44532c" translate="yes" xml:space="preserve">
          <source>Class that simulates a string object. The instance&amp;rsquo;s content is kept in a regular string object, which is accessible via the &lt;a href=&quot;#collections.UserString.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute of &lt;a href=&quot;#collections.UserString&quot;&gt;&lt;code&gt;UserString&lt;/code&gt;&lt;/a&gt; instances. The instance&amp;rsquo;s contents are initially set to a copy of &lt;em&gt;seq&lt;/em&gt;. The &lt;em&gt;seq&lt;/em&gt; argument can be any object which can be converted into a string using the built-in &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">模拟字符串对象的类。实例的内容保存在常规字符串对象中，可通过&lt;a href=&quot;#collections.UserString&quot;&gt; &lt;code&gt;UserString&lt;/code&gt; &lt;/a&gt;实例的&lt;a href=&quot;#collections.UserString.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;属性对其进行访问。实例的内容最初设置为&lt;em&gt;seq&lt;/em&gt;的副本。的&lt;em&gt;SEQ&lt;/em&gt;参数可以是能够使用内置在被转换成一个串中的任何对象&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="79aa0717c2235ad3247845eda135b190657a36a2" translate="yes" xml:space="preserve">
          <source>Class that uses the &lt;a href=&quot;os#os.urandom&quot;&gt;&lt;code&gt;os.urandom()&lt;/code&gt;&lt;/a&gt; function for generating random numbers from sources provided by the operating system. Not available on all systems. Does not rely on software state, and sequences are not reproducible. Accordingly, the &lt;a href=&quot;#random.seed&quot;&gt;&lt;code&gt;seed()&lt;/code&gt;&lt;/a&gt; method has no effect and is ignored. The &lt;a href=&quot;#random.getstate&quot;&gt;&lt;code&gt;getstate()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#random.setstate&quot;&gt;&lt;code&gt;setstate()&lt;/code&gt;&lt;/a&gt; methods raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if called.</source>
          <target state="translated">使用&lt;a href=&quot;os#os.urandom&quot;&gt; &lt;code&gt;os.urandom()&lt;/code&gt; &lt;/a&gt;函数从操作系统提供的源生成随机数的类。并非在所有系统上都可用。不依赖软件状态，并且序列不可复制。因此，&lt;a href=&quot;#random.seed&quot;&gt; &lt;code&gt;seed()&lt;/code&gt; &lt;/a&gt;方法无效，将被忽略。的&lt;a href=&quot;#random.getstate&quot;&gt; &lt;code&gt;getstate()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#random.setstate&quot;&gt; &lt;code&gt;setstate()&lt;/code&gt; &lt;/a&gt;方法将引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;如果调用。</target>
        </trans-unit>
        <trans-unit id="99025c4a0d0b068c1004d8d4353af512d3661881" translate="yes" xml:space="preserve">
          <source>Class to save and restore signal handlers registered by the Python signal handler.</source>
          <target state="translated">保存和恢复Python信号处理程序注册的信号处理程序的类。</target>
        </trans-unit>
        <trans-unit id="da06b3b5ee88acf44cece236973efbeb7d6e0e6e" translate="yes" xml:space="preserve">
          <source>Class used to record warnings for unit tests. See documentation of &lt;a href=&quot;#test.support.check_warnings&quot;&gt;&lt;code&gt;check_warnings()&lt;/code&gt;&lt;/a&gt; above for more details.</source>
          <target state="translated">用于记录单元测试警告的类。有关更多详细信息，请参见上面的&lt;a href=&quot;#test.support.check_warnings&quot;&gt; &lt;code&gt;check_warnings()&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="b11d1a5a5c1b42960a442d37efc38f0f7e86a591" translate="yes" xml:space="preserve">
          <source>Class used to represent information about a member of an archive. Instances of this class are returned by the &lt;a href=&quot;#zipfile.ZipFile.getinfo&quot;&gt;&lt;code&gt;getinfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#zipfile.ZipFile.infolist&quot;&gt;&lt;code&gt;infolist()&lt;/code&gt;&lt;/a&gt; methods of &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; objects. Most users of the &lt;a href=&quot;#module-zipfile&quot;&gt;&lt;code&gt;zipfile&lt;/code&gt;&lt;/a&gt; module will not need to create these, but only use those created by this module. &lt;em&gt;filename&lt;/em&gt; should be the full name of the archive member, and &lt;em&gt;date_time&lt;/em&gt; should be a tuple containing six fields which describe the time of the last modification to the file; the fields are described in section &lt;a href=&quot;#zipinfo-objects&quot;&gt;ZipInfo Objects&lt;/a&gt;.</source>
          <target state="translated">用于表示有关存档成员的信息的类。此类的实例由&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;#zipfile.ZipFile.getinfo&quot;&gt; &lt;code&gt;getinfo()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#zipfile.ZipFile.infolist&quot;&gt; &lt;code&gt;infolist()&lt;/code&gt; &lt;/a&gt;方法返回。&lt;a href=&quot;#module-zipfile&quot;&gt; &lt;code&gt;zipfile&lt;/code&gt; &lt;/a&gt;模块的大多数用户将不需要创建这些文件，而仅使用该模块创建的文件。&lt;em&gt;filename&lt;/em&gt;应该是存档成员的全名，&lt;em&gt;date_time&lt;/em&gt;应该是一个包含六个字段的元组，这些字段描述了文件的最后修改时间；这些字段在&lt;a href=&quot;#zipinfo-objects&quot;&gt;ZipInfo对象&lt;/a&gt;一节中介绍。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b6e043f1a5dded2e806032d1867a90da4a0d268" translate="yes" xml:space="preserve">
          <source>Class used to temporarily set or unset environment variables. Instances can be used as a context manager and have a complete dictionary interface for querying/modifying the underlying &lt;code&gt;os.environ&lt;/code&gt;. After exit from the context manager all changes to environment variables done through this instance will be rolled back.</source>
          <target state="translated">用于临时设置或取消设置环境变量的类。实例可以用作上下文管理器，并具有用于查询/修改基础 &lt;code&gt;os.environ&lt;/code&gt; 的完整词典接口。从上下文管理器退出后，通过该实例完成的所有对环境变量的更改将被回滚。</target>
        </trans-unit>
        <trans-unit id="cf68a12428983b76a7c3f929820378b0b58dd384" translate="yes" xml:space="preserve">
          <source>Class variables</source>
          <target state="translated">类变量</target>
        </trans-unit>
        <trans-unit id="eefd33f2c32d1c2aa4c051ca9367a45a1d6e73e7" translate="yes" xml:space="preserve">
          <source>Class which loads shared libraries. &lt;em&gt;dlltype&lt;/em&gt; should be one of the &lt;a href=&quot;#ctypes.CDLL&quot;&gt;&lt;code&gt;CDLL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ctypes.PyDLL&quot;&gt;&lt;code&gt;PyDLL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ctypes.WinDLL&quot;&gt;&lt;code&gt;WinDLL&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#ctypes.OleDLL&quot;&gt;&lt;code&gt;OleDLL&lt;/code&gt;&lt;/a&gt; types.</source>
          <target state="translated">加载共享库的类。&lt;em&gt;dlltype&lt;/em&gt;应该是&lt;a href=&quot;#ctypes.CDLL&quot;&gt; &lt;code&gt;CDLL&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ctypes.PyDLL&quot;&gt; &lt;code&gt;PyDLL&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ctypes.WinDLL&quot;&gt; &lt;code&gt;WinDLL&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#ctypes.OleDLL&quot;&gt; &lt;code&gt;OleDLL&lt;/code&gt; &lt;/a&gt;类型之一。</target>
        </trans-unit>
        <trans-unit id="5f091d1eff052d6db88ca025e61c82f66c557c58" translate="yes" xml:space="preserve">
          <source>Class which provides formatting services useful in implementing functions similar to the built-in &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt;; size limits for different object types are added to avoid the generation of representations which are excessively long.</source>
          <target state="translated">提供格式化服务的类，可用于实现类似于内置&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; 的功能&lt;/a&gt;；添加了不同对象类型的大小限制，以避免生成过长的表示。</target>
        </trans-unit>
        <trans-unit id="6c3e508b6adb20492bb381d132f040748de786b4" translate="yes" xml:space="preserve">
          <source>Class which represents a chunk. The &lt;em&gt;file&lt;/em&gt; argument is expected to be a file-like object. An instance of this class is specifically allowed. The only method that is needed is &lt;code&gt;read()&lt;/code&gt;. If the methods &lt;a href=&quot;io#io.IOBase.seek&quot;&gt;&lt;code&gt;seek()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#io.IOBase.tell&quot;&gt;&lt;code&gt;tell()&lt;/code&gt;&lt;/a&gt; are present and don&amp;rsquo;t raise an exception, they are also used. If these methods are present and raise an exception, they are expected to not have altered the object. If the optional argument &lt;em&gt;align&lt;/em&gt; is true, chunks are assumed to be aligned on 2-byte boundaries. If &lt;em&gt;align&lt;/em&gt; is false, no alignment is assumed. The default value is true. If the optional argument &lt;em&gt;bigendian&lt;/em&gt; is false, the chunk size is assumed to be in little-endian order. This is needed for WAVE audio files. The default value is true. If the optional argument &lt;em&gt;inclheader&lt;/em&gt; is true, the size given in the chunk header includes the size of the header. The default value is false.</source>
          <target state="translated">代表块的类。该&lt;em&gt;文件&lt;/em&gt;的说法，预计是一个类似文件的对象。明确允许此类的实例。唯一需要的方法是 &lt;code&gt;read()&lt;/code&gt; 。如果方法&lt;a href=&quot;io#io.IOBase.seek&quot;&gt; &lt;code&gt;seek()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;io#io.IOBase.tell&quot;&gt; &lt;code&gt;tell()&lt;/code&gt; &lt;/a&gt;存在并且没有引发异常，则也将使用它们。如果存在这些方法并引发异常，则说明它们没有更改对象。如果可选参数&lt;em&gt;align&lt;/em&gt;为true，则假定块在2字节边界上对齐。如果&lt;em&gt;align&lt;/em&gt;为false，则不假定对齐。默认值是true。如果可选参数&lt;em&gt;bigendian&lt;/em&gt;如果为假，则块大小假定为小端顺序。WAVE音频文件需要此文件。默认值是true。如果可选参数&lt;em&gt;inclheader&lt;/em&gt;为true，则&lt;em&gt;块头&lt;/em&gt;中给定的大小将包括头的大小。默认值为false。</target>
        </trans-unit>
        <trans-unit id="22f36f193b0e2682506b9013f5368c66f7ec520b" translate="yes" xml:space="preserve">
          <source>Class whose instances are returned upon successful connection. Not instantiated directly by user.</source>
          <target state="translated">连接成功后返回实例的类。不能由用户直接实例化。</target>
        </trans-unit>
        <trans-unit id="d5b11a3da0a23c184586f7a55bfcb03df70886f5" translate="yes" xml:space="preserve">
          <source>Class-based API</source>
          <target state="translated">基于类的API</target>
        </trans-unit>
        <trans-unit id="ed1846afee3be21521286932b99e2aeae9e6414a" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>
        </trans-unit>
        <trans-unit id="c926953e6c6cf756e6c05826e0d608074e0232e7" translate="yes" xml:space="preserve">
          <source>Classes and Class Instances</source>
          <target state="translated">类和类实例</target>
        </trans-unit>
        <trans-unit id="201aa8586bf7f9d0b7672b716def616fdeff681c" translate="yes" xml:space="preserve">
          <source>Classes and functions</source>
          <target state="translated">类和功能</target>
        </trans-unit>
        <trans-unit id="06a306f784ae1dcd2fa57b2ffb5561b9999baa42" translate="yes" xml:space="preserve">
          <source>Classes can alter the default behaviour by providing one or several special methods:</source>
          <target state="translated">类可以通过提供一个或几个特殊方法来改变默认行为。</target>
        </trans-unit>
        <trans-unit id="45c5703e790a0c445ec1f77a13923d413a61fe53" translate="yes" xml:space="preserve">
          <source>Classes can be skipped just like methods:</source>
          <target state="translated">类可以像方法一样跳过。</target>
        </trans-unit>
        <trans-unit id="f037dc3e5c5e16357572e66fd729c9cc6339c414" translate="yes" xml:space="preserve">
          <source>Classes can further influence how their instances are pickled; if the class defines the method &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt;, it is called and the returned object is pickled as the contents for the instance, instead of the contents of the instance&amp;rsquo;s dictionary. If the &lt;a href=&quot;#object.__getstate__&quot;&gt;&lt;code&gt;__getstate__()&lt;/code&gt;&lt;/a&gt; method is absent, the instance&amp;rsquo;s &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; is pickled as usual.</source>
          <target state="translated">类可以进一步影响其实例的腌制方式。如果该类定义了方法&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt;，则将其调用，并将返回的对象腌制为实例的内容，而不是实例的字典的内容。如果没有&lt;a href=&quot;#object.__getstate__&quot;&gt; &lt;code&gt;__getstate__()&lt;/code&gt; &lt;/a&gt;方法，则照常对实例的&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;进行腌制。</target>
        </trans-unit>
        <trans-unit id="b0eb8d9d4a94f74aebc56c471156afe57fe3fd0d" translate="yes" xml:space="preserve">
          <source>Classes can use the same interfaces to control copying that they use to control pickling. See the description of module &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; for information on these methods. In fact, the &lt;a href=&quot;#module-copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; module uses the registered pickle functions from the &lt;a href=&quot;copyreg#module-copyreg&quot;&gt;&lt;code&gt;copyreg&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">类可以使用与控制酸洗相同的接口来控制复制。有关这些方法的信息，请参见模块&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;的描述。实际上，&lt;a href=&quot;#module-copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;模块使用&lt;a href=&quot;copyreg#module-copyreg&quot;&gt; &lt;code&gt;copyreg&lt;/code&gt; &lt;/a&gt;模块中已注册的pickle函数。</target>
        </trans-unit>
        <trans-unit id="c0458bc3ca4b8d35ca2b3e95a5a921d74f3a222a" translate="yes" xml:space="preserve">
          <source>Classes created with a metaclass of &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt; have the following method:</source>
          <target state="translated">使用&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; &lt;/a&gt;元类创建的类具有以下方法：</target>
        </trans-unit>
        <trans-unit id="347f0f5953532108086487f75461a5f1134e472d" translate="yes" xml:space="preserve">
          <source>Classes hierarchy:</source>
          <target state="translated">类的层次结构。</target>
        </trans-unit>
        <trans-unit id="2d2c1284bc22910fcd018ccf95941421d9472b76" translate="yes" xml:space="preserve">
          <source>Classes in the &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; module subclasses the classes in the &lt;a href=&quot;tkinter#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt;. The former imports the latter, so to use &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; with Tkinter, all you need to do is to import one module. In general, you can just import &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt;, and replace the toplevel call to &lt;a href=&quot;tkinter#tkinter.Tk&quot;&gt;&lt;code&gt;tkinter.Tk&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;tix.Tk&lt;/code&gt;:</source>
          <target state="translated">中类&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;模块子类中的类&lt;a href=&quot;tkinter#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;。前者导入后者，因此要将&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;与Tkinter 一起使用，您所需要做的就是导入一个模块。在一般情况下，你可以导入&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;，并更换顶层调用&lt;a href=&quot;tkinter#tkinter.Tk&quot;&gt; &lt;code&gt;tkinter.Tk&lt;/code&gt; &lt;/a&gt;与 &lt;code&gt;tix.Tk&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7786e11526d95e122a0dba9a661f34e39555405d" translate="yes" xml:space="preserve">
          <source>Classes that simplify writing network servers.</source>
          <target state="translated">类,简化了网络服务器的编写。</target>
        </trans-unit>
        <trans-unit id="d8daef6bbfcba345ae3a30f57126f486c37f384b" translate="yes" xml:space="preserve">
          <source>Classes, functions, and decorators</source>
          <target state="translated">类、函数和装饰器</target>
        </trans-unit>
        <trans-unit id="667ac5fc3fe2d3172fffb8e93cb105377e53415e" translate="yes" xml:space="preserve">
          <source>Classification functions</source>
          <target state="translated">分类功能</target>
        </trans-unit>
        <trans-unit id="3ff9a76e08400cf68e0675be7bcd6fb22fdee97b" translate="yes" xml:space="preserve">
          <source>Classmethod that converts a float to a decimal number, exactly.</source>
          <target state="translated">将浮点数准确地转换为小数的类方法。</target>
        </trans-unit>
        <trans-unit id="02c151333b853c942dc031c44da9bbdb57ca7105" translate="yes" xml:space="preserve">
          <source>Clean up indentation from docstrings that are indented to line up with blocks of code.</source>
          <target state="translated">清理缩进的docstrings,使其与代码块一致。</target>
        </trans-unit>
        <trans-unit id="1611b550c2e2b2942ae77bbd68aa9664acb99baa" translate="yes" xml:space="preserve">
          <source>Clean up the server. May be overridden.</source>
          <target state="translated">清理服务器。可覆盖。</target>
        </trans-unit>
        <trans-unit id="c8f75f741d1b6021f7c8bfc4d8fc898426ac71f2" translate="yes" xml:space="preserve">
          <source>Cleaning up in an &lt;code&gt;__enter__&lt;/code&gt; implementation</source>
          <target state="translated">在 &lt;code&gt;__enter__&lt;/code&gt; 实现中清理</target>
        </trans-unit>
        <trans-unit id="c2d1cbcd4e0194c698ce529e24b040a50823e5d9" translate="yes" xml:space="preserve">
          <source>Cleans up temporary files that may have been left behind by previous calls to &lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">清理以前调用&lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; &lt;/a&gt;可能留下的临时文件。</target>
        </trans-unit>
        <trans-unit id="86c9b8692ed0240b4cd54401c5aa0ed8ee8b5a31" translate="yes" xml:space="preserve">
          <source>Cleans up the value stack and the block stack. If &lt;em&gt;preserve_tos&lt;/em&gt; is not &lt;code&gt;0&lt;/code&gt; TOS first is popped from the stack and pushed on the stack after performing other stack operations:</source>
          <target state="translated">清理值堆栈和块堆栈。如果&lt;em&gt;preserve_tos&lt;/em&gt;不为 &lt;code&gt;0&lt;/code&gt; ，则在执行其他堆栈操作后，将TOS first从堆栈中弹出并推入堆栈：</target>
        </trans-unit>
        <trans-unit id="11c1cbf3543371f2ef4c721d6c5a218d99781274" translate="yes" xml:space="preserve">
          <source>Cleanup</source>
          <target state="translated">Cleanup</target>
        </trans-unit>
        <trans-unit id="fcafba6a606eb414f2569aff507bd99fc4b32c60" translate="yes" xml:space="preserve">
          <source>Cleanup up threads not specified in &lt;em&gt;original_values&lt;/em&gt;. Designed to emit a warning if a test leaves running threads in the background.</source>
          <target state="translated">清理未在&lt;em&gt;original_values中&lt;/em&gt;指定的线程。旨在在测试将运行线程留在后台时发出警告。</target>
        </trans-unit>
        <trans-unit id="7c63150b50f16af146cc7e971cbb08735a7cc16d" translate="yes" xml:space="preserve">
          <source>Clear (unset) the event.</source>
          <target state="translated">清除(解除)该事件。</target>
        </trans-unit>
        <trans-unit id="75cb37803c6a35aa45a57ecbe088c1f4f136df4e" translate="yes" xml:space="preserve">
          <source>Clear Breakpoint</source>
          <target state="translated">清除断点</target>
        </trans-unit>
        <trans-unit id="dedfdec349ea2da1da9d8c798b7d1928743efb7f" translate="yes" xml:space="preserve">
          <source>Clear all cookies and reload cookies from a saved file.</source>
          <target state="translated">清除所有Cookie,并从保存的文件中重新加载Cookie。</target>
        </trans-unit>
        <trans-unit id="0fac3ac6248ff304c4729f7dc75245b4e7267ce5" translate="yes" xml:space="preserve">
          <source>Clear all tabs</source>
          <target state="translated">清除所有标签</target>
        </trans-unit>
        <trans-unit id="581bded81640a1c3e7541ca4b1df9f69744af55e" translate="yes" xml:space="preserve">
          <source>Clear out the internal cache.</source>
          <target state="translated">清除内部缓存。</target>
        </trans-unit>
        <trans-unit id="8cbea0dd03d659f6fc0af020526f99576b13aca1" translate="yes" xml:space="preserve">
          <source>Clear screen</source>
          <target state="translated">清除屏幕</target>
        </trans-unit>
        <trans-unit id="dad2fa6735efa3ba639976b5afe2aa9b9d6b53f3" translate="yes" xml:space="preserve">
          <source>Clear some cookies.</source>
          <target state="translated">清除一些cookies。</target>
        </trans-unit>
        <trans-unit id="03896376ba4292fa97e81dbfdb18bab99f3a6795" translate="yes" xml:space="preserve">
          <source>Clear tab</source>
          <target state="translated">清除标签</target>
        </trans-unit>
        <trans-unit id="2ddcd2e4ebe86a4f787b58345732c5fba0ae1968" translate="yes" xml:space="preserve">
          <source>Clear the breakpoint on that line.</source>
          <target state="translated">清除该行的断点。</target>
        </trans-unit>
        <trans-unit id="a7a227da5402ae7b6be61b4567993b9a2c65f27e" translate="yes" xml:space="preserve">
          <source>Clear the cache. Use this function if you no longer need lines from files previously read using &lt;a href=&quot;#linecache.getline&quot;&gt;&lt;code&gt;getline()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">清除缓存。如果您不再需要以前使用&lt;a href=&quot;#linecache.getline&quot;&gt; &lt;code&gt;getline()&lt;/code&gt; &lt;/a&gt;读取的文件中的行，请使用此功能。</target>
        </trans-unit>
        <trans-unit id="5e6a8e5156dddfce503678b4903d07264fd7d7eb" translate="yes" xml:space="preserve">
          <source>Clear the current history. This calls &lt;code&gt;clear_history()&lt;/code&gt; in the underlying library. The Python function only exists if Python was compiled for a version of the library that supports it.</source>
          <target state="translated">清除当前历史记录。这将在基础库中调用 &lt;code&gt;clear_history()&lt;/code&gt; 。仅当Python是针对支持该库的版本编译的，Python函数才存在。</target>
        </trans-unit>
        <trans-unit id="c52ce86aacd7104749aef43e4304317c33ae8665" translate="yes" xml:space="preserve">
          <source>Clear the filecmp cache. This may be useful if a file is compared so quickly after it is modified that it is within the mtime resolution of the underlying filesystem.</source>
          <target state="translated">清除filecmp缓存。如果一个文件在修改后被快速比较,以至于在底层文件系统的mtime分辨率范围内,这可能是有用的。</target>
        </trans-unit>
        <trans-unit id="03304a0f8856edcb1da2c08e06a3b34f81913a64" translate="yes" xml:space="preserve">
          <source>Clear the internal type cache. The type cache is used to speed up attribute and method lookups. Use the function &lt;em&gt;only&lt;/em&gt; to drop unnecessary references during reference leak debugging.</source>
          <target state="translated">清除内部类型缓存。类型缓存用于加快属性和方法的查找。&lt;em&gt;仅&lt;/em&gt;在引用泄漏调试期间使用该功能删除不必要的引用。</target>
        </trans-unit>
        <trans-unit id="72db18ad4f2e17f642c643bf22ea309056f71634" translate="yes" xml:space="preserve">
          <source>Clear the regular expression cache.</source>
          <target state="translated">清除正则表达式缓存。</target>
        </trans-unit>
        <trans-unit id="f53f1ea6ebec9a53b62ddcee16b9b6cee9ae5dfd" translate="yes" xml:space="preserve">
          <source>Clear the window.</source>
          <target state="translated">清除窗口。</target>
        </trans-unit>
        <trans-unit id="0bfe31c1ff6b636445cd8a0aa23ccda5aad6c80a" translate="yes" xml:space="preserve">
          <source>Clear to end of line</source>
          <target state="translated">清理到终点</target>
        </trans-unit>
        <trans-unit id="87305dd5841ede45239c271479afe0d03fed7989" translate="yes" xml:space="preserve">
          <source>Clear to end of screen</source>
          <target state="translated">清除到屏幕末端</target>
        </trans-unit>
        <trans-unit id="8dd569946acad0436e918f68ec0e2265678428f8" translate="yes" xml:space="preserve">
          <source>Clear traces of memory blocks allocated by Python.</source>
          <target state="translated">清除Python分配的内存块的痕迹。</target>
        </trans-unit>
        <trans-unit id="c8dd821d177243ccce87ed70546d106227784d7c" translate="yes" xml:space="preserve">
          <source>Clears the local variables of all the stack frames in a traceback &lt;em&gt;tb&lt;/em&gt; by calling the &lt;code&gt;clear()&lt;/code&gt; method of each frame object.</source>
          <target state="translated">通过调用每个框架对象的 &lt;code&gt;clear()&lt;/code&gt; 方法，清除回溯&lt;em&gt;tb&lt;/em&gt;中所有堆栈框架的局部变量。</target>
        </trans-unit>
        <trans-unit id="c09677fe0308ac61e788c20d57c48c122de3a163" translate="yes" xml:space="preserve">
          <source>Client side &lt;code&gt;HTTP PUT&lt;/code&gt; requests are very similar to &lt;code&gt;POST&lt;/code&gt; requests. The difference lies only the server side where HTTP server will allow resources to be created via &lt;code&gt;PUT&lt;/code&gt; request. It should be noted that custom HTTP methods +are also handled in &lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt;&lt;code&gt;urllib.request.Request&lt;/code&gt;&lt;/a&gt; by sending the appropriate +method attribute.Here is an example session that shows how to do &lt;code&gt;PUT&lt;/code&gt; request using http.client:</source>
          <target state="translated">客户端 &lt;code&gt;HTTP PUT&lt;/code&gt; 请求与 &lt;code&gt;POST&lt;/code&gt; 请求非常相似。区别仅在于服务器端，HTTP服务器将允许通过 &lt;code&gt;PUT&lt;/code&gt; 请求创建资源。应当指出的是，自定义的HTTP方法在+也处理&lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt; &lt;code&gt;urllib.request.Request&lt;/code&gt; &lt;/a&gt;通过发送适当的方法+ attribute.Here是示例会话显示了如何执行 &lt;code&gt;PUT&lt;/code&gt; 使用http.client请求：</target>
        </trans-unit>
        <trans-unit id="f0e04d53e7fc891b7271841b251df6744de9b574" translate="yes" xml:space="preserve">
          <source>Client side &lt;code&gt;HTTP PUT&lt;/code&gt; requests are very similar to &lt;code&gt;POST&lt;/code&gt; requests. The difference lies only the server side where HTTP server will allow resources to be created via &lt;code&gt;PUT&lt;/code&gt; request. It should be noted that custom HTTP methods are also handled in &lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt;&lt;code&gt;urllib.request.Request&lt;/code&gt;&lt;/a&gt; by setting the appropriate method attribute. Here is an example session that shows how to send a &lt;code&gt;PUT&lt;/code&gt; request using http.client:</source>
          <target state="translated">客户端 &lt;code&gt;HTTP PUT&lt;/code&gt; 请求与 &lt;code&gt;POST&lt;/code&gt; 请求非常相似。区别仅在于服务器端，HTTP服务器将允许通过 &lt;code&gt;PUT&lt;/code&gt; 请求创建资源。应该注意的是，通过设置适当的方法属性，还可以在&lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt; &lt;code&gt;urllib.request.Request&lt;/code&gt; 中&lt;/a&gt;处理自定义HTTP方法。这是一个示例会话，显示了如何使用http.client发送 &lt;code&gt;PUT&lt;/code&gt; 请求：</target>
        </trans-unit>
        <trans-unit id="bc9176d94ea386ea58725f612548b38d9223700d" translate="yes" xml:space="preserve">
          <source>Client socket example with custom context and IPv4:</source>
          <target state="translated">自定义上下文和IPv4的客户端套接字示例。</target>
        </trans-unit>
        <trans-unit id="ae10a05f04d8289121927fd80451d654d1c055a7" translate="yes" xml:space="preserve">
          <source>Client socket example with default context and IPv4/IPv6 dual stack:</source>
          <target state="translated">客户端套接字示例,采用默认上下文和IPv4/IPv6双栈。</target>
        </trans-unit>
        <trans-unit id="a80d51e6031ad37858e506cf50c987470ba60766" translate="yes" xml:space="preserve">
          <source>Client-side certificates are also no longer verified during the initial handshake. A server can request a certificate at any time. Clients process certificate requests while they send or receive application data from the server.</source>
          <target state="translated">客户端证书也不再在初始握手时进行验证。服务器可以在任何时候请求证书。客户端在向服务器发送或接收应用数据时处理证书请求。</target>
        </trans-unit>
        <trans-unit id="8be506fbb5a5c01d5b09515397ea60546537d6fb" translate="yes" xml:space="preserve">
          <source>Client-side operation</source>
          <target state="translated">客户端操作</target>
        </trans-unit>
        <trans-unit id="c9f9ea1b026f581d71ddd7ce1895b56fda68359f" translate="yes" xml:space="preserve">
          <source>Client:</source>
          <target state="translated">Client:</target>
        </trans-unit>
        <trans-unit id="0a49aca1795ef56e9055a8bf5d95bb17ac94783a" translate="yes" xml:space="preserve">
          <source>Clock ID Constants</source>
          <target state="translated">时钟ID常数</target>
        </trans-unit>
        <trans-unit id="fe8df0f706f4697338ef434ef46ee5f882a96b73" translate="yes" xml:space="preserve">
          <source>Clock that cannot be set and represents monotonic time since some unspecified starting point.</source>
          <target state="translated">不能设置的时钟,表示从某个未指定的起点开始的单调时间。</target>
        </trans-unit>
        <trans-unit id="b4807633920dc2778fbac6657ecc9127c4cdaaac" translate="yes" xml:space="preserve">
          <source>Clock that increments monotonically, tracking the time since an arbitrary point, unaffected by frequency or time adjustments and not incremented while the system is asleep.</source>
          <target state="translated">单调递增的时钟,跟踪从任意点开始的时间,不受频率或时间调整的影响,并且在系统睡眠时不递增。</target>
        </trans-unit>
        <trans-unit id="ff697d4ee62959b75538e58b93b3780c085ec8b0" translate="yes" xml:space="preserve">
          <source>Clone this node. Setting &lt;em&gt;deep&lt;/em&gt; means to clone all child nodes as well. This returns the clone.</source>
          <target state="translated">克隆此节点。设置&lt;em&gt;深层&lt;/em&gt;意味着也将克隆所有子节点。这将返回克隆。</target>
        </trans-unit>
        <trans-unit id="bbfa773e5a63a5ea58c9b6207e608ca0120e592a" translate="yes" xml:space="preserve">
          <source>Close</source>
          <target state="translated">Close</target>
        </trans-unit>
        <trans-unit id="2ace0aa0942174ab6fb2c7982698b51bcf9045ba" translate="yes" xml:space="preserve">
          <source>Close a socket file descriptor. This is like &lt;a href=&quot;os#os.close&quot;&gt;&lt;code&gt;os.close()&lt;/code&gt;&lt;/a&gt;, but for sockets. On some platforms (most noticeable Windows) &lt;a href=&quot;os#os.close&quot;&gt;&lt;code&gt;os.close()&lt;/code&gt;&lt;/a&gt; does not work for socket file descriptors.</source>
          <target state="translated">关闭套接字文件描述符。这类似于&lt;a href=&quot;os#os.close&quot;&gt; &lt;code&gt;os.close()&lt;/code&gt; &lt;/a&gt;，但是用于套接字。在某些平台（最引人注意的Windows）上，&lt;a href=&quot;os#os.close&quot;&gt; &lt;code&gt;os.close()&lt;/code&gt; &lt;/a&gt;不适用于套接字文件描述符。</target>
        </trans-unit>
        <trans-unit id="f98c72a00844869e7bb50ed6e382502b5aedb381" translate="yes" xml:space="preserve">
          <source>Close all file descriptors from &lt;em&gt;fd_low&lt;/em&gt; (inclusive) to &lt;em&gt;fd_high&lt;/em&gt; (exclusive), ignoring errors. Equivalent to (but much faster than):</source>
          <target state="translated">关闭所有文件描述符，从&lt;em&gt;fd_low&lt;/em&gt;（含）到&lt;em&gt;fd_high&lt;/em&gt;（&lt;em&gt;不含&lt;/em&gt;），忽略错误。等效于（但比以下更快）：</target>
        </trans-unit>
        <trans-unit id="327c78f7bc7e53be685f74bbdce89500cf99de50" translate="yes" xml:space="preserve">
          <source>Close all windows and quit IDLE (ask to save unsaved windows).</source>
          <target state="translated">关闭所有窗口并退出IDLE(要求保存未保存的窗口)。</target>
        </trans-unit>
        <trans-unit id="7e5d771911d0d3ac01b6556b2197acf22e6e0876" translate="yes" xml:space="preserve">
          <source>Close and send EOF after flushing buffered data.</source>
          <target state="translated">冲洗缓冲数据后关闭并发送EOF。</target>
        </trans-unit>
        <trans-unit id="f395522ce55a91c8e7cc93acf3c366b63839130b" translate="yes" xml:space="preserve">
          <source>Close and skip to the end of the chunk. This does not close the underlying file.</source>
          <target state="translated">关闭并跳转到该块的结尾。这不会关闭底层文件。</target>
        </trans-unit>
        <trans-unit id="2c445782dc5061e881153b84366a5f29fdf29641" translate="yes" xml:space="preserve">
          <source>Close asynchronous generators.</source>
          <target state="translated">关闭异步发电机。</target>
        </trans-unit>
        <trans-unit id="7689d8c6ee2fae9fe051200cb62e0214aab70fac" translate="yes" xml:space="preserve">
          <source>Close connection established in &lt;code&gt;open&lt;/code&gt;. This method is implicitly called by &lt;a href=&quot;#imaplib.IMAP4.logout&quot;&gt;&lt;code&gt;IMAP4.logout()&lt;/code&gt;&lt;/a&gt;. You may override this method.</source>
          <target state="translated">建立在 &lt;code&gt;open&lt;/code&gt; 中的关闭连接。此方法由&lt;a href=&quot;#imaplib.IMAP4.logout&quot;&gt; &lt;code&gt;IMAP4.logout()&lt;/code&gt; &lt;/a&gt;隐式调用。您可以覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="91c95d5d479e3cb04af40ce3a06f5e799698e4fc" translate="yes" xml:space="preserve">
          <source>Close currently selected mailbox. Deleted messages are removed from writable mailbox. This is the recommended command before &lt;code&gt;LOGOUT&lt;/code&gt;.</source>
          <target state="translated">关闭当前选择的邮箱。删除的邮件将从可写邮箱中删除。这是 &lt;code&gt;LOGOUT&lt;/code&gt; 之前的推荐命令。</target>
        </trans-unit>
        <trans-unit id="b8d3ae3588503be729a2c099104bc9fff0f9e083" translate="yes" xml:space="preserve">
          <source>Close file descriptor &lt;em&gt;fd&lt;/em&gt;.</source>
          <target state="translated">关闭文件描述符&lt;em&gt;fd&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="eb3642f69cdfff0d2b8afe5b4a936ee3f9f1c422" translate="yes" xml:space="preserve">
          <source>Close the &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object, releasing all resources associated with it. &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if the underlying process is still running. Once &lt;a href=&quot;#multiprocessing.Process.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; returns successfully, most other methods and attributes of the &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object will raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">关闭&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;对象，释放与其关联的所有资源。如果基础进程仍在运行，则会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。一旦&lt;a href=&quot;#multiprocessing.Process.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;成功返回，&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;对象的大多数其他方法和属性将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1e4d9a00ca14e8f0f389ccfc2583b56e781a1a16" translate="yes" xml:space="preserve">
          <source>Close the &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt;. In write mode, two finishing zero blocks are appended to the archive.</source>
          <target state="translated">关闭&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;。在写入模式下，两个结尾为零的块将添加到归档中。</target>
        </trans-unit>
        <trans-unit id="6ef4a03fded31475711086c82af03984d63806af" translate="yes" xml:space="preserve">
          <source>Close the &lt;code&gt;dumbdbm&lt;/code&gt; database.</source>
          <target state="translated">关闭 &lt;code&gt;dumbdbm&lt;/code&gt; 数据库。</target>
        </trans-unit>
        <trans-unit id="b02fb978d4328f255effa25deed6b81df796e9b3" translate="yes" xml:space="preserve">
          <source>Close the &lt;code&gt;gdbm&lt;/code&gt; database.</source>
          <target state="translated">关闭 &lt;code&gt;gdbm&lt;/code&gt; 数据库。</target>
        </trans-unit>
        <trans-unit id="36ec640ec3045e65bcbcb0f226f3a6ae0036475f" translate="yes" xml:space="preserve">
          <source>Close the &lt;code&gt;ndbm&lt;/code&gt; database.</source>
          <target state="translated">关闭 &lt;code&gt;ndbm&lt;/code&gt; 数据库。</target>
        </trans-unit>
        <trans-unit id="0e6e27ba97849441fc6e943b260fa72748ee57ce" translate="yes" xml:space="preserve">
          <source>Close the AIFF file. After calling this method, the object can no longer be used.</source>
          <target state="translated">关闭AIFF文件。调用本方法后,对象不能再使用。</target>
        </trans-unit>
        <trans-unit id="ec47579acc9d1c798d92b85e703a99a36767e124" translate="yes" xml:space="preserve">
          <source>Close the AIFF file. The header of the file is updated to reflect the actual size of the audio data. After calling this method, the object can no longer be used.</source>
          <target state="translated">关闭AIFF文件。文件的头会被更新以反映音频数据的实际大小。调用此方法后,此对象不能再使用。</target>
        </trans-unit>
        <trans-unit id="014556dde758d0fbcf5b34a3c2ce44a0c26c22ea" translate="yes" xml:space="preserve">
          <source>Close the archive file. You must call &lt;a href=&quot;#zipfile.ZipFile.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; before exiting your program or essential records will not be written.</source>
          <target state="translated">关闭存档文件。您必须在退出程序之前调用&lt;a href=&quot;#zipfile.ZipFile.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;，否则基本记录将不会被写入。</target>
        </trans-unit>
        <trans-unit id="9e8b64cc8d22aa4e604019ff830dd410a31e096c" translate="yes" xml:space="preserve">
          <source>Close the bound socket or named pipe of the listener object. This is called automatically when the listener is garbage collected. However it is advisable to call it explicitly.</source>
          <target state="translated">关闭监听器对象的绑定套接字或命名管道。当监听器被垃圾回收时,这个功能会自动被调用。但是建议明确地调用它。</target>
        </trans-unit>
        <trans-unit id="c222eb42563555dd1f6b2d5528793cbc876cfbf2" translate="yes" xml:space="preserve">
          <source>Close the connection to the server.</source>
          <target state="translated">关闭与服务器的连接。</target>
        </trans-unit>
        <trans-unit id="42ffe59d503d9bbe0d777a27f4f3631c16b55216" translate="yes" xml:space="preserve">
          <source>Close the connection unilaterally. This should not be applied to an already closed connection such as after a successful call to &lt;a href=&quot;#ftplib.FTP.quit&quot;&gt;&lt;code&gt;quit()&lt;/code&gt;&lt;/a&gt;. After this call the &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; instance should not be used any more (after a call to &lt;a href=&quot;#ftplib.FTP.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ftplib.FTP.quit&quot;&gt;&lt;code&gt;quit()&lt;/code&gt;&lt;/a&gt; you cannot reopen the connection by issuing another &lt;a href=&quot;#ftplib.FTP.login&quot;&gt;&lt;code&gt;login()&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">单方面关闭连接。这不应应用于已经关闭的连接，例如在成功调用&lt;a href=&quot;#ftplib.FTP.quit&quot;&gt; &lt;code&gt;quit()&lt;/code&gt; 之后&lt;/a&gt;。在此调用之后，不应再使用&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt;实例（在调用&lt;a href=&quot;#ftplib.FTP.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#ftplib.FTP.quit&quot;&gt; &lt;code&gt;quit()&lt;/code&gt; 之后,&lt;/a&gt;您将无法通过发出另一个&lt;a href=&quot;#ftplib.FTP.login&quot;&gt; &lt;code&gt;login()&lt;/code&gt; &lt;/a&gt;方法来重新打开连接）。</target>
        </trans-unit>
        <trans-unit id="cc9b8e5dc8a15854c930c6167b1ca7f3ad815c2b" translate="yes" xml:space="preserve">
          <source>Close the connection.</source>
          <target state="translated">关闭连接。</target>
        </trans-unit>
        <trans-unit id="36c7521162f5c29ea14bebc3019cba872a419ddd" translate="yes" xml:space="preserve">
          <source>Close the control file descriptor of the epoll object.</source>
          <target state="translated">关闭epoll对象的控制文件描述符。</target>
        </trans-unit>
        <trans-unit id="caa2df155ce5abb02454b37ea8fc198a038bc3f4" translate="yes" xml:space="preserve">
          <source>Close the control file descriptor of the kqueue object.</source>
          <target state="translated">关闭kqueue对象的控制文件描述符。</target>
        </trans-unit>
        <trans-unit id="432083b095e1e41349b819a780e6ffc901243cb6" translate="yes" xml:space="preserve">
          <source>Close the current file so that the next iteration will read the first line from the next file (if any); lines not read from the file will not count towards the cumulative line count. The filename is not changed until after the first line of the next file has been read. Before the first line has been read, this function has no effect; it cannot be used to skip the first file. After the last line of the last file has been read, this function has no effect.</source>
          <target state="translated">关闭当前文件,这样下一次迭代将从下一个文件(如果有的话)中读取第一行;未从文件中读取的行将不计入累计行数。直到下一个文件的第一行被读取后,文件名才会被改变。在第一行被读取之前,这个函数没有任何效果;它不能用来跳过第一个文件。在最后一个文件的最后一行被读取后,这个函数没有效果。</target>
        </trans-unit>
        <trans-unit id="89aa8d1d5eacb2885989e844c4c8b06ea635a421" translate="yes" xml:space="preserve">
          <source>Close the current window (ask to save if unsaved).</source>
          <target state="translated">关闭当前窗口(如果未保存则要求保存)。</target>
        </trans-unit>
        <trans-unit id="31832114e27977cb5caddf8a68621e0a4bbdb846" translate="yes" xml:space="preserve">
          <source>Close the cursor now (rather than whenever &lt;code&gt;__del__&lt;/code&gt; is called).</source>
          <target state="translated">立即关闭光标（而不是每当调用 &lt;code&gt;__del__&lt;/code&gt; 时）。</target>
        </trans-unit>
        <trans-unit id="0f66883d05ab33ecfb5efd49b7523317f55293b6" translate="yes" xml:space="preserve">
          <source>Close the database object, through &lt;code&gt;MsiCloseHandle()&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;MsiCloseHandle()&lt;/code&gt; 关闭数据库对象。</target>
        </trans-unit>
        <trans-unit id="427969fa9aabb0244e95a29bf1ad1f6e611ae4c3" translate="yes" xml:space="preserve">
          <source>Close the event loop.</source>
          <target state="translated">关闭事件循环。</target>
        </trans-unit>
        <trans-unit id="3aa3f1716a52e9590b120fe48ec89481c731dff1" translate="yes" xml:space="preserve">
          <source>Close the file descriptor of the polling object.</source>
          <target state="translated">关闭轮询对象的文件描述符。</target>
        </trans-unit>
        <trans-unit id="a16f5895984b4b83ca8d90a1f7bebb8291de4294" translate="yes" xml:space="preserve">
          <source>Close the iterator and free acquired resources.</source>
          <target state="translated">关闭迭代器,释放获取的资源。</target>
        </trans-unit>
        <trans-unit id="360158271faf6cd50fab2de9c6330cc6f773a228" translate="yes" xml:space="preserve">
          <source>Close the queue: release internal resources.</source>
          <target state="translated">关闭队列:释放内部资源。</target>
        </trans-unit>
        <trans-unit id="b584c19bcc5dc1905678449e583eac6eea66e695" translate="yes" xml:space="preserve">
          <source>Close the selector.</source>
          <target state="translated">关闭选择器。</target>
        </trans-unit>
        <trans-unit id="dcd25f53e7d3b550b90a57b7f9c2f2b41d6e747b" translate="yes" xml:space="preserve">
          <source>Close the sequence.</source>
          <target state="translated">关闭序列。</target>
        </trans-unit>
        <trans-unit id="55c44ffa351a3885d35d366ad1217642bf1b10d2" translate="yes" xml:space="preserve">
          <source>Close the socket. All future operations on the socket object will fail. The remote end-point will receive no more data (after queued data is flushed). Sockets are automatically closed when they are garbage-collected.</source>
          <target state="translated">关闭套接字。今后对套接字对象的所有操作都将失败。远程端点将不再接收数据(在队列数据被刷新后)。当套接字被垃圾回收时,会自动关闭。</target>
        </trans-unit>
        <trans-unit id="70b753d53c79533b7e44f1cf490091cdee4925dd" translate="yes" xml:space="preserve">
          <source>Close the stream if it was opened by &lt;a href=&quot;#module-wave&quot;&gt;&lt;code&gt;wave&lt;/code&gt;&lt;/a&gt;, and make the instance unusable. This is called automatically on object collection.</source>
          <target state="translated">如果通过&lt;a href=&quot;#module-wave&quot;&gt; &lt;code&gt;wave&lt;/code&gt; &lt;/a&gt;打开了流，请关闭该流，并使该实例不可用。这在对象收集时自动调用。</target>
        </trans-unit>
        <trans-unit id="2c7bfd821d8b2954975832325e786e3da05da9c4" translate="yes" xml:space="preserve">
          <source>Close the transport immediately, without waiting for pending operations to complete. Buffered data will be lost. No more data will be received. The protocol&amp;rsquo;s &lt;a href=&quot;#asyncio.BaseProtocol.connection_lost&quot;&gt;&lt;code&gt;protocol.connection_lost()&lt;/code&gt;&lt;/a&gt; method will eventually be called with &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; as its argument.</source>
          <target state="translated">立即关闭传输，而无需等待未完成的操作完成。缓冲的数据将丢失。不会再收到任何数据。协议的&lt;a href=&quot;#asyncio.BaseProtocol.connection_lost&quot;&gt; &lt;code&gt;protocol.connection_lost()&lt;/code&gt; &lt;/a&gt;方法最终将以&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;为参数被调用。</target>
        </trans-unit>
        <trans-unit id="0ed3623bc69e7e8f28e583b14577fd459c88941c" translate="yes" xml:space="preserve">
          <source>Close the transport immediately.</source>
          <target state="translated">立即关闭交通工具。</target>
        </trans-unit>
        <trans-unit id="889ddbb3d484ced0f481e3bad3e2651e9acad250" translate="yes" xml:space="preserve">
          <source>Close the transport.</source>
          <target state="translated">关闭交通工具。</target>
        </trans-unit>
        <trans-unit id="94fc54422b7bd15454f1050adcf33974c2839e09" translate="yes" xml:space="preserve">
          <source>Close the view, through &lt;code&gt;MsiViewClose()&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;MsiViewClose()&lt;/code&gt; 关闭视图。</target>
        </trans-unit>
        <trans-unit id="7498a46a4940cd39b13f342fadde91d7be17250c" translate="yes" xml:space="preserve">
          <source>Close the watcher.</source>
          <target state="translated">关闭观察器。</target>
        </trans-unit>
        <trans-unit id="6287d3207f53bcfa352b32dcde21d6eef690aa0f" translate="yes" xml:space="preserve">
          <source>Close the write end of the stream after the buffered write data is flushed.</source>
          <target state="translated">在缓冲的写数据被刷新后,关闭流的写端。</target>
        </trans-unit>
        <trans-unit id="cecdc5266f4bb5f7efb181990d26080bf12ec039" translate="yes" xml:space="preserve">
          <source>Close the write end of the transport after flushing all buffered data. Data may still be received.</source>
          <target state="translated">冲洗完所有缓冲数据后,关闭传输的写入端。仍可接收数据。</target>
        </trans-unit>
        <trans-unit id="6d8d8a240bbf1d82cb82e0723d718e5499d96e0a" translate="yes" xml:space="preserve">
          <source>Closely emulate the behavior of the interactive Python interpreter. This class builds on &lt;a href=&quot;#code.InteractiveInterpreter&quot;&gt;&lt;code&gt;InteractiveInterpreter&lt;/code&gt;&lt;/a&gt; and adds prompting using the familiar &lt;code&gt;sys.ps1&lt;/code&gt; and &lt;code&gt;sys.ps2&lt;/code&gt;, and input buffering.</source>
          <target state="translated">紧密模拟交互式Python解释器的行为。此类基于&lt;a href=&quot;#code.InteractiveInterpreter&quot;&gt; &lt;code&gt;InteractiveInterpreter&lt;/code&gt; &lt;/a&gt;构建，并使用熟悉的 &lt;code&gt;sys.ps1&lt;/code&gt; 和 &lt;code&gt;sys.ps2&lt;/code&gt; 以及输入缓冲添加提示。</target>
        </trans-unit>
        <trans-unit id="1d2fcf9b6d03723ce487c10efefff1af48f6d7d0" translate="yes" xml:space="preserve">
          <source>Closely emulate the interactive Python console. The optional &lt;em&gt;banner&lt;/em&gt; argument specify the banner to print before the first interaction; by default it prints a banner similar to the one printed by the standard Python interpreter, followed by the class name of the console object in parentheses (so as not to confuse this with the real interpreter &amp;ndash; since it&amp;rsquo;s so close!).</source>
          <target state="translated">紧密模拟交互式Python控制台。可选的&lt;em&gt;banner&lt;/em&gt;参数指定在第一次交互之前要打印的横幅。默认情况下，它会打印出类似于标准Python解释器打印的横幅，并在括号后加上控制台对象的类名（以免将其与真实的解释器混淆-因为它是如此接近！）。</target>
        </trans-unit>
        <trans-unit id="baede6ff1a1aff70f59c292320d2aa913acc709b" translate="yes" xml:space="preserve">
          <source>Closes a previously opened registry key. The &lt;em&gt;hkey&lt;/em&gt; argument specifies a previously opened key.</source>
          <target state="translated">关闭以前打开的注册表项。在&lt;em&gt;HKEY&lt;/em&gt;参数指定以前打开的关键。</target>
        </trans-unit>
        <trans-unit id="92587bcf08decd9d747e92a9df758026da1bb4ed" translate="yes" xml:space="preserve">
          <source>Closes access to the shared memory from this instance. In order to ensure proper cleanup of resources, all instances should call &lt;code&gt;close()&lt;/code&gt; once the instance is no longer needed. Note that calling &lt;code&gt;close()&lt;/code&gt; does not cause the shared memory block itself to be destroyed.</source>
          <target state="translated">关闭从此实例对共享内存的访问。为了确保正确清理资源，一旦不再需要实例，则所有实例都应调用 &lt;code&gt;close()&lt;/code&gt; 。请注意，调用 &lt;code&gt;close()&lt;/code&gt; 不会导致共享内存块本身被破坏。</target>
        </trans-unit>
        <trans-unit id="6b3ce85d2c7b24b597139ca070702f9dd2852876" translate="yes" xml:space="preserve">
          <source>Closes the connection cleanly.</source>
          <target state="translated">干净利落地关闭连接。</target>
        </trans-unit>
        <trans-unit id="e8f5cd207424d68e8ca560042b14dd651d2669f5" translate="yes" xml:space="preserve">
          <source>Closes the current element. &lt;em&gt;tag&lt;/em&gt; is the element name. Returns the closed element.</source>
          <target state="translated">关闭当前元素。&lt;em&gt;tag&lt;/em&gt;是元素名称。返回封闭的元素。</target>
        </trans-unit>
        <trans-unit id="c4ff63fa85db450c0b8efcf5dbcdc3cd9880b858" translate="yes" xml:space="preserve">
          <source>Closes the file.</source>
          <target state="translated">关闭文件。</target>
        </trans-unit>
        <trans-unit id="18b10fa813eea0054bbf704ccbf36ddbb985d16e" translate="yes" xml:space="preserve">
          <source>Closes the mmap. Subsequent calls to other methods of the object will result in a ValueError exception being raised. This will not close the open file.</source>
          <target state="translated">关闭mmap。随后对该对象的其他方法的调用将导致一个ValueError异常被引发。这不会关闭打开的文件。</target>
        </trans-unit>
        <trans-unit id="51c950a40feba10734d38d7413fd4431b0470375" translate="yes" xml:space="preserve">
          <source>Closes the socket to the remote host.</source>
          <target state="translated">关闭与远程主机的套接字。</target>
        </trans-unit>
        <trans-unit id="d088ba46947a0a90bc08a101b18b61eb57bcdcb7" translate="yes" xml:space="preserve">
          <source>Closes the socket.</source>
          <target state="translated">关闭插座。</target>
        </trans-unit>
        <trans-unit id="d501d67db803982835d3f46d3ff8fc9f6326ce82" translate="yes" xml:space="preserve">
          <source>Closes the underlying Windows handle.</source>
          <target state="translated">关闭底层Windows手柄。</target>
        </trans-unit>
        <trans-unit id="16a82cac41a8aa5fd3dfb375c44458c56239f0c1" translate="yes" xml:space="preserve">
          <source>Closing quotes separate words (&lt;code&gt;&quot;Do&quot;Separate&lt;/code&gt; is parsed as &lt;code&gt;&quot;Do&quot;&lt;/code&gt; and &lt;code&gt;Separate&lt;/code&gt;);</source>
          <target state="translated">结束语用引号引起来（用 &lt;code&gt;&quot;Do&quot;Separate&lt;/code&gt; 解析为 &lt;code&gt;&quot;Do&quot;&lt;/code&gt; 和 &lt;code&gt;Separate&lt;/code&gt; ）；</target>
        </trans-unit>
        <trans-unit id="576222a4a220e0cfdc3be343de2028d193ea51fb" translate="yes" xml:space="preserve">
          <source>Closing the file object returned by &lt;a href=&quot;#socket.socket.makefile&quot;&gt;&lt;code&gt;makefile()&lt;/code&gt;&lt;/a&gt; won&amp;rsquo;t close the original socket unless all other file objects have been closed and &lt;a href=&quot;#socket.close&quot;&gt;&lt;code&gt;socket.close()&lt;/code&gt;&lt;/a&gt; has been called on the socket object.</source>
          <target state="translated">关闭&lt;a href=&quot;#socket.socket.makefile&quot;&gt; &lt;code&gt;makefile()&lt;/code&gt; &lt;/a&gt;返回的文件对象不会关闭原始套接字，除非所有其他文件对象都已关闭并且已在套接字对象上调用&lt;a href=&quot;#socket.close&quot;&gt; &lt;code&gt;socket.close()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59041b16bccdcf86bae955f7c4768299dc0ae4eb" translate="yes" xml:space="preserve">
          <source>Cmd (command)</source>
          <target state="translated">Cmd(命令)</target>
        </trans-unit>
        <trans-unit id="fc73387aa45cd86ab1e03f400c0b709d345476d7" translate="yes" xml:space="preserve">
          <source>Cmd Example</source>
          <target state="translated">Cmd 示例</target>
        </trans-unit>
        <trans-unit id="aa09ae2c90376d99398a2860a9c82850c8532db5" translate="yes" xml:space="preserve">
          <source>Cmd Objects</source>
          <target state="translated">Cmd对象</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="2297bf1dc931d9625f4470ee423e4d3118e0fd87" translate="yes" xml:space="preserve">
          <source>Code Context</source>
          <target state="translated">代码上下文</target>
        </trans-unit>
        <trans-unit id="a2e1e4a612e42b52761b3fe26db80ae6b84824a4" translate="yes" xml:space="preserve">
          <source>Code Objects</source>
          <target state="translated">代码对象</target>
        </trans-unit>
        <trans-unit id="9e8da9ba1a99eeeaab9d8083b841bddbf845793f" translate="yes" xml:space="preserve">
          <source>Code Objects Bit Flags</source>
          <target state="translated">代码对象 位标志</target>
        </trans-unit>
        <trans-unit id="d6b8e8c347aed714ee33ee1399cb6594e1e2cb5d" translate="yes" xml:space="preserve">
          <source>Code needing to capture stdout or stderr should use &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; instead:</source>
          <target state="translated">需要捕获stdout或stderr的代码应改用&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="9d85ce9c0d0f12ee1819a4a575f31cd212557312" translate="yes" xml:space="preserve">
          <source>Code objects are used by the implementation to represent &amp;ldquo;pseudo-compiled&amp;rdquo; executable Python code such as a function body. They differ from function objects because they don&amp;rsquo;t contain a reference to their global execution environment. Code objects are returned by the built-in &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; function and can be extracted from function objects through their &lt;code&gt;__code__&lt;/code&gt; attribute. See also the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">实现使用代码对象表示&amp;ldquo;伪编译的&amp;rdquo;可执行Python代码，例如函数体。它们与函数对象不同，因为它们不包含对其全局执行环境的引用。代码对象由内置的&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;函数返回，可以通过其 &lt;code&gt;__code__&lt;/code&gt; 属性从函数对象中提取代码对象。另请参见&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="be5c5752c503883cee97bc81e60ce7e319b48526" translate="yes" xml:space="preserve">
          <source>Code to display the 10 lines allocating the most memory with a pretty output, ignoring &lt;code&gt;&amp;lt;frozen importlib._bootstrap&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;unknown&amp;gt;&lt;/code&gt; files:</source>
          <target state="translated">显示10行的代码，分配最多的内存并显示漂亮的输出，忽略 &lt;code&gt;&amp;lt;frozen importlib._bootstrap&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;unknown&amp;gt;&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="6a8a394788e61319d4653b657a2d29ffd888899d" translate="yes" xml:space="preserve">
          <source>Code to display the traceback of the biggest memory block:</source>
          <target state="translated">显示最大内存块的回溯代码。</target>
        </trans-unit>
        <trans-unit id="a336769a99a5362c65c8108cc91c5daedd4de9c5" translate="yes" xml:space="preserve">
          <source>Codec</source>
          <target state="translated">Codec</target>
        </trans-unit>
        <trans-unit id="b602fc83d422019f525794aaf7d48f339491cafc" translate="yes" xml:space="preserve">
          <source>Codec Base Classes</source>
          <target state="translated">编解码器基类</target>
        </trans-unit>
        <trans-unit id="bbccc3ebba92793551099ce6f8b5a317e001e214" translate="yes" xml:space="preserve">
          <source>Codec details when looking up the codec registry. The constructor arguments are stored in attributes of the same name:</source>
          <target state="translated">在查询编解码器注册表时,编解码器的详细信息。构造函数的参数存储在同名的属性中。</target>
        </trans-unit>
        <trans-unit id="dcce4ae43bfc2646a7236dcc5bfe2dd49129b1b6" translate="yes" xml:space="preserve">
          <source>Codecs</source>
          <target state="translated">Codecs</target>
        </trans-unit>
        <trans-unit id="4946fe715b8b0bd4a2c887eda9a0efb27185107d" translate="yes" xml:space="preserve">
          <source>Collapse and truncate the given &lt;em&gt;text&lt;/em&gt; to fit in the given &lt;em&gt;width&lt;/em&gt;.</source>
          <target state="translated">折叠并截断给定的&lt;em&gt;文本&lt;/em&gt;以适合给定的&lt;em&gt;宽度&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6eebbd8606122ee069fe1696bb57e65a6753213a" translate="yes" xml:space="preserve">
          <source>Collections Abstract Base Classes</source>
          <target state="translated">集合抽象基类</target>
        </trans-unit>
        <trans-unit id="1d0c8304baedcf8e3a78982c2e7c0b04622bf2a0" translate="yes" xml:space="preserve">
          <source>Color</source>
          <target state="translated">Color</target>
        </trans-unit>
        <trans-unit id="72a8e4e495172a56dc65475730fd8e0f87a52c38" translate="yes" xml:space="preserve">
          <source>Color control</source>
          <target state="translated">色彩控制</target>
        </trans-unit>
        <trans-unit id="9810867b1567e9dad8ab88041218bb4cb2280869" translate="yes" xml:space="preserve">
          <source>Colors can be given as the names of X colors in the rgb.txt file, or as strings representing RGB values in 4 bit: &lt;code&gt;&quot;#RGB&quot;&lt;/code&gt;, 8 bit: &lt;code&gt;&quot;#RRGGBB&quot;&lt;/code&gt;, 12 bit&amp;rdquo; &lt;code&gt;&quot;#RRRGGGBBB&quot;&lt;/code&gt;, or 16 bit &lt;code&gt;&quot;#RRRRGGGGBBBB&quot;&lt;/code&gt; ranges, where R,G,B here represent any legal hex digit. See page 160 of Ousterhout&amp;rsquo;s book for details.</source>
          <target state="translated">颜色可以被给定为的X颜色的名称在rgb.txt中文件，或者作为在4位表示的RGB值的字符串： &lt;code&gt;&quot;#RGB&quot;&lt;/code&gt; ，8位： &lt;code&gt;&quot;#RRGGBB&quot;&lt;/code&gt; ，12位&amp;rdquo; &lt;code&gt;&quot;#RRRGGGBBB&quot;&lt;/code&gt; ，或16位 &lt;code&gt;&quot;#RRRRGGGGBBBB&quot;&lt;/code&gt; 范围，其中R，G，B此处代表任何合法的十六进制数字。有关详细信息，请参见Ousterhout的书的第160页。</target>
        </trans-unit>
        <trans-unit id="9718ff65a73817dd71e18a41e5b8a04191374e61" translate="yes" xml:space="preserve">
          <source>Column #0 always refers to the tree column, even if show=&amp;rdquo;tree&amp;rdquo; is not specified.</source>
          <target state="translated">即使未指定show =&amp;ldquo; tree&amp;rdquo;，列＃0始终引用树列。</target>
        </trans-unit>
        <trans-unit id="c9b64b47c3f334bc51699cba69f239cd60ab2008" translate="yes" xml:space="preserve">
          <source>Column Identifiers</source>
          <target state="translated">栏目标识符</target>
        </trans-unit>
        <trans-unit id="17879ff88c1d5a49629aef6b87d179f9d2d54559" translate="yes" xml:space="preserve">
          <source>Column identifiers take any of the following forms:</source>
          <target state="translated">列的标识符采用以下任何一种形式:</target>
        </trans-unit>
        <trans-unit id="cea8f7b97ab7fba0a5d6cdb48edbcdf540f9260e" translate="yes" xml:space="preserve">
          <source>Column number at which an error occurred.</source>
          <target state="translated">发生错误的列号。</target>
        </trans-unit>
        <trans-unit id="5af1dab5551d63f3b3a54aa75cdccbc3c925d834" translate="yes" xml:space="preserve">
          <source>Combination of all locale settings. If this flag is used when the locale is changed, setting the locale for all categories is attempted. If that fails for any category, no category is changed at all. When the locale is retrieved using this flag, a string indicating the setting for all categories is returned. This string can be later used to restore the settings.</source>
          <target state="translated">所有语言环境设置的组合。如果在更改locale时使用此标志,则会尝试为所有类别设置locale。如果任何类别的设置失败,则不会更改任何类别。当使用这个标志检索locale时,将返回一个表示所有类别设置的字符串。这个字符串以后可以用来恢复设置。</target>
        </trans-unit>
        <trans-unit id="11d19d21cdc98f81c7394802e1d7b8f1e775846a" translate="yes" xml:space="preserve">
          <source>Combinations are emitted in lexicographic sort order. So, if the input &lt;em&gt;iterable&lt;/em&gt; is sorted, the combination tuples will be produced in sorted order.</source>
          <target state="translated">组合以字典顺序排序。因此，如果对输入的&lt;em&gt;iterable&lt;/em&gt;进行排序，则将按排序顺序生成组合元组。</target>
        </trans-unit>
        <trans-unit id="dfab5a1b3e4bac62a4690435ae65b9002d75e6b3" translate="yes" xml:space="preserve">
          <source>Combine the elements of a tuple as returned by &lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt;&lt;code&gt;urlsplit()&lt;/code&gt;&lt;/a&gt; into a complete URL as a string. The &lt;em&gt;parts&lt;/em&gt; argument can be any five-item iterable. This may result in a slightly different, but equivalent URL, if the URL that was parsed originally had unnecessary delimiters (for example, a ? with an empty query; the RFC states that these are equivalent).</source>
          <target state="translated">将&lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt; &lt;code&gt;urlsplit()&lt;/code&gt; &lt;/a&gt;返回的元组元素合并为一个完整的URL作为字符串。该&lt;em&gt;部分&lt;/em&gt;参数可以是任何五个项目的迭代。如果最初解析的URL包含不必要的定界符（例如，带空查询的？； RFC声明它们是等效的），则这可能会导致稍微不同但等效的URL。</target>
        </trans-unit>
        <trans-unit id="f7a651c3370b3fbb638611f9bc1773b7d75a8cf4" translate="yes" xml:space="preserve">
          <source>Combine the functionality of &lt;a href=&quot;#os.readv&quot;&gt;&lt;code&gt;os.readv()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.pread&quot;&gt;&lt;code&gt;os.pread()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">结合使用&lt;a href=&quot;#os.readv&quot;&gt; &lt;code&gt;os.readv()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.pread&quot;&gt; &lt;code&gt;os.pread()&lt;/code&gt; 的功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0067bd2007d259250b456ccf688f9aadb6140e64" translate="yes" xml:space="preserve">
          <source>Combine the functionality of &lt;a href=&quot;#os.writev&quot;&gt;&lt;code&gt;os.writev()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.pwrite&quot;&gt;&lt;code&gt;os.pwrite()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">结合使用&lt;a href=&quot;#os.writev&quot;&gt; &lt;code&gt;os.writev()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.pwrite&quot;&gt; &lt;code&gt;os.pwrite()&lt;/code&gt; 的功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5ea432f7cdba803cad695ee269715edd5c13385" translate="yes" xml:space="preserve">
          <source>Combined key and certificate</source>
          <target state="translated">组合钥匙和证书</target>
        </trans-unit>
        <trans-unit id="226b7f72744ae9993e72e966cb1ec960f8eaeb9f" translate="yes" xml:space="preserve">
          <source>Combines &lt;a href=&quot;#resource.setrlimit&quot;&gt;&lt;code&gt;setrlimit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#resource.getrlimit&quot;&gt;&lt;code&gt;getrlimit()&lt;/code&gt;&lt;/a&gt; in one function and supports to get and set the resources limits of an arbitrary process. If &lt;em&gt;pid&lt;/em&gt; is 0, then the call applies to the current process. &lt;em&gt;resource&lt;/em&gt; and &lt;em&gt;limits&lt;/em&gt; have the same meaning as in &lt;a href=&quot;#resource.setrlimit&quot;&gt;&lt;code&gt;setrlimit()&lt;/code&gt;&lt;/a&gt;, except that &lt;em&gt;limits&lt;/em&gt; is optional.</source>
          <target state="translated">将&lt;a href=&quot;#resource.setrlimit&quot;&gt; &lt;code&gt;setrlimit()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#resource.getrlimit&quot;&gt; &lt;code&gt;getrlimit()&lt;/code&gt; &lt;/a&gt;合并到一个函数中，并支持获取和设置任意进程的资源限制。如果&lt;em&gt;pid&lt;/em&gt;为0，则该调用将应用于当前进程。&lt;em&gt;资源&lt;/em&gt;和&lt;em&gt;限制&lt;/em&gt;与&lt;a href=&quot;#resource.setrlimit&quot;&gt; &lt;code&gt;setrlimit()&lt;/code&gt; 中的&lt;/a&gt;含义相同，除了&lt;em&gt;限制&lt;/em&gt;是可选的。</target>
        </trans-unit>
        <trans-unit id="b3c8a478fa75e3139e86be829278de8aee3f2d4b" translate="yes" xml:space="preserve">
          <source>Combines the STANDARD_RIGHTS_READ, &lt;a href=&quot;#winreg.KEY_QUERY_VALUE&quot;&gt;&lt;code&gt;KEY_QUERY_VALUE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#winreg.KEY_ENUMERATE_SUB_KEYS&quot;&gt;&lt;code&gt;KEY_ENUMERATE_SUB_KEYS&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#winreg.KEY_NOTIFY&quot;&gt;&lt;code&gt;KEY_NOTIFY&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">合并STANDARD_RIGHTS_READ，&lt;a href=&quot;#winreg.KEY_QUERY_VALUE&quot;&gt; &lt;code&gt;KEY_QUERY_VALUE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#winreg.KEY_ENUMERATE_SUB_KEYS&quot;&gt; &lt;code&gt;KEY_ENUMERATE_SUB_KEYS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#winreg.KEY_NOTIFY&quot;&gt; &lt;code&gt;KEY_NOTIFY&lt;/code&gt; &lt;/a&gt;值。</target>
        </trans-unit>
        <trans-unit id="47232f43d2781d56da7de9b5476be62ac7816a9a" translate="yes" xml:space="preserve">
          <source>Combines the STANDARD_RIGHTS_REQUIRED, &lt;a href=&quot;#winreg.KEY_QUERY_VALUE&quot;&gt;&lt;code&gt;KEY_QUERY_VALUE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt;&lt;code&gt;KEY_SET_VALUE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#winreg.KEY_CREATE_SUB_KEY&quot;&gt;&lt;code&gt;KEY_CREATE_SUB_KEY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#winreg.KEY_ENUMERATE_SUB_KEYS&quot;&gt;&lt;code&gt;KEY_ENUMERATE_SUB_KEYS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#winreg.KEY_NOTIFY&quot;&gt;&lt;code&gt;KEY_NOTIFY&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#winreg.KEY_CREATE_LINK&quot;&gt;&lt;code&gt;KEY_CREATE_LINK&lt;/code&gt;&lt;/a&gt; access rights.</source>
          <target state="translated">合并STANDARD_RIGHTS_REQUIRED，&lt;a href=&quot;#winreg.KEY_QUERY_VALUE&quot;&gt; &lt;code&gt;KEY_QUERY_VALUE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt; &lt;code&gt;KEY_SET_VALUE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#winreg.KEY_CREATE_SUB_KEY&quot;&gt; &lt;code&gt;KEY_CREATE_SUB_KEY&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#winreg.KEY_ENUMERATE_SUB_KEYS&quot;&gt; &lt;code&gt;KEY_ENUMERATE_SUB_KEYS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#winreg.KEY_NOTIFY&quot;&gt; &lt;code&gt;KEY_NOTIFY&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#winreg.KEY_CREATE_LINK&quot;&gt; &lt;code&gt;KEY_CREATE_LINK&lt;/code&gt; &lt;/a&gt;访问权限。</target>
        </trans-unit>
        <trans-unit id="9cdf44f484ecd092a4522bea0f297946a96ebe2c" translate="yes" xml:space="preserve">
          <source>Combines the STANDARD_RIGHTS_WRITE, &lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt;&lt;code&gt;KEY_SET_VALUE&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#winreg.KEY_CREATE_SUB_KEY&quot;&gt;&lt;code&gt;KEY_CREATE_SUB_KEY&lt;/code&gt;&lt;/a&gt; access rights.</source>
          <target state="translated">合并STANDARD_RIGHTS_WRITE，&lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt; &lt;code&gt;KEY_SET_VALUE&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#winreg.KEY_CREATE_SUB_KEY&quot;&gt; &lt;code&gt;KEY_CREATE_SUB_KEY&lt;/code&gt; &lt;/a&gt;访问权限。</target>
        </trans-unit>
        <trans-unit id="bb0edc1867f6a563d6bd35c8cf53ff28d2e7abd2" translate="yes" xml:space="preserve">
          <source>Combining SSL protocol handling and network IO usually works well, but there are some cases where it doesn&amp;rsquo;t. An example is async IO frameworks that want to use a different IO multiplexing model than the &amp;ldquo;select/poll on a file descriptor&amp;rdquo; (readiness based) model that is assumed by &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; and by the internal OpenSSL socket IO routines. This is mostly relevant for platforms like Windows where this model is not efficient. For this purpose, a reduced scope variant of &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; called &lt;a href=&quot;#ssl.SSLObject&quot;&gt;&lt;code&gt;SSLObject&lt;/code&gt;&lt;/a&gt; is provided.</source>
          <target state="translated">将SSL协议处理和网络IO结合使用通常效果很好，但是在某些情况下则不行。一个示例是异步IO框架，该框架要使用与&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt;和内部OpenSSL套接字IO例程所假定的&amp;ldquo;文件描述符的选择/轮询&amp;rdquo;（基于就绪）模型不同的IO复用模型。这与该模型效率不高的Windows之类的平台最相关。为此，提供了&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; 的&lt;/a&gt;范围缩小的变体，称为&lt;a href=&quot;#ssl.SSLObject&quot;&gt; &lt;code&gt;SSLObject&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50dcdd08f353cf4f5753574fae5a437ac673592c" translate="yes" xml:space="preserve">
          <source>Combining members of &lt;code&gt;Flag&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Flag&lt;/code&gt; 组合</target>
        </trans-unit>
        <trans-unit id="408fe2dc2870c3ac708d0a454ffd0bb0534395b3" translate="yes" xml:space="preserve">
          <source>Combobox</source>
          <target state="translated">Combobox</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="14c818412d017dcc7f2635ecf050b64a83410b23" translate="yes" xml:space="preserve">
          <source>Command Line Interface</source>
          <target state="translated">命令行界面</target>
        </trans-unit>
        <trans-unit id="eeda843072bf94fe708ffa85c9ec6325e4e7944a" translate="yes" xml:space="preserve">
          <source>Command history</source>
          <target state="translated">命令历史</target>
        </trans-unit>
        <trans-unit id="c424c7db6b23b09cdd8593c4d7319bd815622923" translate="yes" xml:space="preserve">
          <source>Command line interface</source>
          <target state="translated">命令行接口</target>
        </trans-unit>
        <trans-unit id="6e3d3bf1961b8057b125fc05310e2099de8793b0" translate="yes" xml:space="preserve">
          <source>Command line options</source>
          <target state="translated">命令行选项</target>
        </trans-unit>
        <trans-unit id="83048ea23faff69386ce98e08a764b0763915bfb" translate="yes" xml:space="preserve">
          <source>Command line usage</source>
          <target state="translated">命令行用法</target>
        </trans-unit>
        <trans-unit id="402830ff9d854ddc188e390827477892a4b775da" translate="yes" xml:space="preserve">
          <source>Command that was used to spawn the child process.</source>
          <target state="translated">用于生成子进程的命令。</target>
        </trans-unit>
        <trans-unit id="86ceab975b39d4ea0e34212f604e47ddbf72c7ee" translate="yes" xml:space="preserve">
          <source>Command to activate virtual environment</source>
          <target state="translated">激活虚拟环境的命令</target>
        </trans-unit>
        <trans-unit id="f9408856d6c43a487f24ed6c405a06b71bf79f69" translate="yes" xml:space="preserve">
          <source>Command-Line Interface</source>
          <target state="translated">命令行界面</target>
        </trans-unit>
        <trans-unit id="090ffa187f33d5f4ea1b00a057f6c8cafb5a0039" translate="yes" xml:space="preserve">
          <source>Command-Line Usage</source>
          <target state="translated">命令行用法</target>
        </trans-unit>
        <trans-unit id="f67e000a046a21604b2818c94a17c7ddab8e2442" translate="yes" xml:space="preserve">
          <source>Command-line options</source>
          <target state="translated">命令行选项</target>
        </trans-unit>
        <trans-unit id="f5fade6f410b816f6fab771a6ff9476daabb47f9" translate="yes" xml:space="preserve">
          <source>Command-line use</source>
          <target state="translated">命令行使用</target>
        </trans-unit>
        <trans-unit id="206bc8fe8db08309162413ed012ae8509a9ed718" translate="yes" xml:space="preserve">
          <source>Commands that the debugger doesn&amp;rsquo;t recognize are assumed to be Python statements and are executed in the context of the program being debugged. Python statements can also be prefixed with an exclamation point (&lt;code&gt;!&lt;/code&gt;). This is a powerful way to inspect the program being debugged; it is even possible to change a variable or call a function. When an exception occurs in such a statement, the exception name is printed but the debugger&amp;rsquo;s state is not changed.</source>
          <target state="translated">调试器无法识别的命令被假定为Python语句，并在被调试程序的上下文中执行。Python语句也可以以感叹号（ &lt;code&gt;!&lt;/code&gt; ）为前缀。这是检查正在调试的程序的强大方法。甚至可以更改变量或调用函数。当此类语句中发生异常时，将打印异常名称，但调试器的状态不会更改。</target>
        </trans-unit>
        <trans-unit id="6a5589f5db82709ebb49f684b93def57c8ee25db" translate="yes" xml:space="preserve">
          <source>Comment Objects</source>
          <target state="translated">对象如何</target>
        </trans-unit>
        <trans-unit id="c5de5c460d942930fd5a0e13fe4b8d3a825be35a" translate="yes" xml:space="preserve">
          <source>Comment Out Region</source>
          <target state="translated">如何在区域外</target>
        </trans-unit>
        <trans-unit id="d5659747255817bfd36278fbbda4a443d90666d8" translate="yes" xml:space="preserve">
          <source>Comment element factory. This factory function creates a special element that will be serialized as an XML comment by the standard serializer. The comment string can be either a bytestring or a Unicode string. &lt;em&gt;text&lt;/em&gt; is a string containing the comment string. Returns an element instance representing a comment.</source>
          <target state="translated">注释元素工厂。此工厂函数创建一个特殊元素，该元素将由标准序列化程序序列化为XML注释。注释字符串可以是字节字符串或Unicode字符串。&lt;em&gt;text&lt;/em&gt;是包含注释字符串的字符串。返回表示注释的元素实例。</target>
        </trans-unit>
        <trans-unit id="6a455e414da0e3bd3b3eeba19a1ae5764fb134ed" translate="yes" xml:space="preserve">
          <source>Comment for the individual archive member as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">注释单个归档成员作为&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="8627cd52ef9d4527a69414622d03a11b73e36256" translate="yes" xml:space="preserve">
          <source>Comment prefixes are strings that indicate the start of a valid comment within a config file. &lt;em&gt;comment_prefixes&lt;/em&gt; are used only on otherwise empty lines (optionally indented) whereas &lt;em&gt;inline_comment_prefixes&lt;/em&gt; can be used after every valid value (e.g. section names, options and empty lines as well). By default inline comments are disabled and &lt;code&gt;'#'&lt;/code&gt; and &lt;code&gt;';'&lt;/code&gt; are used as prefixes for whole line comments.</source>
          <target state="translated">注释前缀是指示配置文件中有效注释开始的字符串。&lt;em&gt;comment_prefixes&lt;/em&gt;仅用于否则为空的行（可选缩进），而&lt;em&gt;inline_comment_prefixes&lt;/em&gt;可在每个有效值之后使用（例如节名，选项和空行）。默认情况下，嵌入式注释被禁用，并且 &lt;code&gt;'#'&lt;/code&gt; 和 &lt;code&gt;';'&lt;/code&gt; 用作整行注释的前缀。</target>
        </trans-unit>
        <trans-unit id="4dad68038d4b09d4a18175f41c17a74631fc6b10" translate="yes" xml:space="preserve">
          <source>Commit the changes pending in the current transaction, by calling &lt;code&gt;MSIDatabaseCommit()&lt;/code&gt;.</source>
          <target state="translated">通过调用 &lt;code&gt;MSIDatabaseCommit()&lt;/code&gt; 提交当前事务中待处理的更改。</target>
        </trans-unit>
        <trans-unit id="2c8cda04e4526146e746bf5ed1673609f069de0c" translate="yes" xml:space="preserve">
          <source>Common Properties</source>
          <target state="translated">常见属性</target>
        </trans-unit>
        <trans-unit id="f3605d94a032ba689b6c43373c53ddb02378946d" translate="yes" xml:space="preserve">
          <source>Common Sequence Operations</source>
          <target state="translated">常见的序列操作</target>
        </trans-unit>
        <trans-unit id="79994170d27f181bf8e7746fce7bf59ab463f166" translate="yes" xml:space="preserve">
          <source>Common base class for the other pickling exceptions. It inherits &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">其他酸洗例外的通用基类。它继承了&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6884ffaea27481dfe98c01d803e25dc7e46455c6" translate="yes" xml:space="preserve">
          <source>Common dialogs to allow the user to specify a file to open or save.</source>
          <target state="translated">常见的对话框,允许用户指定要打开或保存的文件。</target>
        </trans-unit>
        <trans-unit id="dfb1f5dc76f0196e4c2c6e4fe2919e85f3e2d394" translate="yes" xml:space="preserve">
          <source>Common installation tools such as &lt;a href=&quot;https://pypi.org/project/setuptools/&quot;&gt;setuptools&lt;/a&gt; and &lt;a href=&quot;https://pypi.org/project/pip/&quot;&gt;pip&lt;/a&gt; work as expected with virtual environments. In other words, when a virtual environment is active, they install Python packages into the virtual environment without needing to be told to do so explicitly.</source>
          <target state="translated">常见的安装工具（例如&lt;a href=&quot;https://pypi.org/project/setuptools/&quot;&gt;setuptools&lt;/a&gt;和&lt;a href=&quot;https://pypi.org/project/pip/&quot;&gt;pip）&lt;/a&gt;可以在虚拟环境中正常工作。换句话说，当虚拟环境处于活动状态时，他们无需明确指示即可将Python软件包安装到虚拟环境中。</target>
        </trans-unit>
        <trans-unit id="5e922a31f8ae91aa33845b5586b849a493fc599e" translate="yes" xml:space="preserve">
          <source>Common instance variables of ctypes data types:</source>
          <target state="translated">ctypes数据类型的常用实例变量。</target>
        </trans-unit>
        <trans-unit id="edbc971d96420cb012b0de74d40a7c8b6d1a73dd" translate="yes" xml:space="preserve">
          <source>Common issues</source>
          <target state="translated">共同问题</target>
        </trans-unit>
        <trans-unit id="6032de3401ab52521f8e73b8a9f9405564798bdb" translate="yes" xml:space="preserve">
          <source>Common methods of ctypes data types, these are all class methods (to be exact, they are methods of the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-metaclass&quot;&gt;metaclass&lt;/a&gt;):</source>
          <target state="translated">ctypes数据类型的通用方法，它们都是类方法（确切地说，它们是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-metaclass&quot;&gt;metaclass的&lt;/a&gt;方法）：</target>
        </trans-unit>
        <trans-unit id="9c6dc42c6627da4be4412f4b883418d52413a9b5" translate="yes" xml:space="preserve">
          <source>Common methods of ctypes data types, these are all class methods (to be exact, they are methods of the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-metaclass&quot;&gt;metaclass&lt;/a&gt;):</source>
          <target state="translated">ctypes数据类型的通用方法，它们都是类方法（确切地说，它们是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-metaclass&quot;&gt;metaclass的&lt;/a&gt;方法）：</target>
        </trans-unit>
        <trans-unit id="f0aee63db2042ae8c02827391b8452f7e56c021d" translate="yes" xml:space="preserve">
          <source>Common patterns for working with &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">使用&lt;a href=&quot;#collections.Counter&quot;&gt; &lt;code&gt;Counter&lt;/code&gt; &lt;/a&gt;对象的常见模式：</target>
        </trans-unit>
        <trans-unit id="66576d7f896060652207fe265bedf170d46acf3d" translate="yes" xml:space="preserve">
          <source>Common problems and solutions</source>
          <target state="translated">共同的问题和解决办法</target>
        </trans-unit>
        <trans-unit id="23a228edf6bdd2474f23d22047e508c520e8615a" translate="yes" xml:space="preserve">
          <source>Commonly used warning filters apply to either all warnings, warnings in a particular category, or warnings raised by particular modules or packages. Some examples:</source>
          <target state="translated">常用的警告过滤器适用于所有的警告、特定类别的警告,或者由特定模块或包引发的警告。以下是一些例子:</target>
        </trans-unit>
        <trans-unit id="62406ed154f5d7c3531ef51179b447e9abc85576" translate="yes" xml:space="preserve">
          <source>Communication error on send</source>
          <target state="translated">发送时通信错误</target>
        </trans-unit>
        <trans-unit id="06f308ca8a12b73fd16988a6a17d85dd615ded71" translate="yes" xml:space="preserve">
          <source>Compact encoding:</source>
          <target state="translated">紧凑的编码。</target>
        </trans-unit>
        <trans-unit id="e738c2a3431d85dba37cdc62781724c798d412e7" translate="yes" xml:space="preserve">
          <source>Compare &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; (lists of bytes objects) using &lt;em&gt;dfunc&lt;/em&gt;; yield a sequence of delta lines (also bytes) in the format returned by &lt;em&gt;dfunc&lt;/em&gt;. &lt;em&gt;dfunc&lt;/em&gt; must be a callable, typically either &lt;a href=&quot;#difflib.unified_diff&quot;&gt;&lt;code&gt;unified_diff()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#difflib.context_diff&quot;&gt;&lt;code&gt;context_diff()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;em&gt;dfunc&lt;/em&gt;比较&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;（字节对象列表）；以&lt;em&gt;dfunc&lt;/em&gt;返回的格式产生一系列增量行（也为字节）。&lt;em&gt;dfunc&lt;/em&gt;必须是可调用的，通常是&lt;a href=&quot;#difflib.unified_diff&quot;&gt; &lt;code&gt;unified_diff()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#difflib.context_diff&quot;&gt; &lt;code&gt;context_diff()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="57a3a7d5887a804b4800b8a95897318abbd04d21" translate="yes" xml:space="preserve">
          <source>Compare &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; (lists of strings); return a &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt;-style delta (a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; generating the delta lines).</source>
          <target state="translated">比较&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;（字符串列表）；返回&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; &lt;/a&gt;风格的增量（生成增量线的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="fab491f7a1c9a0209f621c8bd88ff0380123bf5e" translate="yes" xml:space="preserve">
          <source>Compare &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; (lists of strings); return a &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt;-style delta (a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; generating the delta lines).</source>
          <target state="translated">比较&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;（字符串列表）；返回&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; &lt;/a&gt;风格的增量（生成增量线的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5980d717a7c70a82a1daf0b56b937a8df7a08b63" translate="yes" xml:space="preserve">
          <source>Compare &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; (lists of strings); return a delta (a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; generating the delta lines) in context diff format.</source>
          <target state="translated">比较&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;（字符串列表）；以上下文差异格式返回增量（生成增量行的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5d7bf7448102c93954cccf9ee3ae38a2e960355d" translate="yes" xml:space="preserve">
          <source>Compare &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; (lists of strings); return a delta (a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; generating the delta lines) in unified diff format.</source>
          <target state="translated">比较&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;（字符串列表）；以统一的diff格式返回增量（生成增量线的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="98375d44686112d67fb5ba2944d801f9bb2ccfdc" translate="yes" xml:space="preserve">
          <source>Compare &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; (lists of strings); return a delta (a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; generating the delta lines) in context diff format.</source>
          <target state="translated">比较&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;（字符串列表）；以上下文差异格式返回增量（生成增量行的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="35f2e69e8aef0a537d46ea5f9d70ba4f3ac5bc5f" translate="yes" xml:space="preserve">
          <source>Compare &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; (lists of strings); return a delta (a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; generating the delta lines) in unified diff format.</source>
          <target state="translated">比较&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;（字符串列表）；以统一的diff格式返回增量（生成增量线的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d1677cd5d2e6923bfd592033bacf964082bed6f5" translate="yes" xml:space="preserve">
          <source>Compare the files in the two directories &lt;em&gt;dir1&lt;/em&gt; and &lt;em&gt;dir2&lt;/em&gt; whose names are given by &lt;em&gt;common&lt;/em&gt;.</source>
          <target state="translated">比较两个目录&lt;em&gt;dir1&lt;/em&gt;和&lt;em&gt;dir2中&lt;/em&gt;的文件，它们的名称由&lt;em&gt;common&lt;/em&gt;给出。</target>
        </trans-unit>
        <trans-unit id="db42d138ecc98642a4978a9b9d68d68d1275b6d0" translate="yes" xml:space="preserve">
          <source>Compare the files named &lt;em&gt;f1&lt;/em&gt; and &lt;em&gt;f2&lt;/em&gt;, returning &lt;code&gt;True&lt;/code&gt; if they seem equal, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">比较名为&lt;em&gt;f1&lt;/em&gt;和&lt;em&gt;f2&lt;/em&gt;的文件，如果它们相等，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d84c4de5e54bc3420121b0d878b9a242d38423f2" translate="yes" xml:space="preserve">
          <source>Compare the values of two Decimal instances. &lt;a href=&quot;#decimal.Decimal.compare&quot;&gt;&lt;code&gt;compare()&lt;/code&gt;&lt;/a&gt; returns a Decimal instance, and if either operand is a NaN then the result is a NaN:</source>
          <target state="translated">比较两个十进制实例的值。&lt;a href=&quot;#decimal.Decimal.compare&quot;&gt; &lt;code&gt;compare()&lt;/code&gt; &lt;/a&gt;返回一个Decimal实例，如果任一操作数为NaN，则结果为NaN：</target>
        </trans-unit>
        <trans-unit id="a226fdd7431b1e9a6529ff96f27a98453ab15a4c" translate="yes" xml:space="preserve">
          <source>Compare this network to &lt;em&gt;other&lt;/em&gt;. In this comparison only the network addresses are considered; host bits aren&amp;rsquo;t. Returns either &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">将此网络与&lt;em&gt;其他&lt;/em&gt;网络进行比较。在此比较中，仅考虑网络地址；主机位不是。返回任一 &lt;code&gt;-1&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78e691baa477d44771ae45b242964b747b6afab0" translate="yes" xml:space="preserve">
          <source>Compare two operands using their abstract representation rather than their numerical value. Similar to the &lt;a href=&quot;#decimal.Decimal.compare&quot;&gt;&lt;code&gt;compare()&lt;/code&gt;&lt;/a&gt; method, but the result gives a total ordering on &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instances. Two &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instances with the same numeric value but different representations compare unequal in this ordering:</source>
          <target state="translated">使用它们的抽象表示而不是数值比较两个操作数。与&lt;a href=&quot;#decimal.Decimal.compare&quot;&gt; &lt;code&gt;compare()&lt;/code&gt; &lt;/a&gt;方法类似，但是结果给出了&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;实例的总顺序。具有相同数值但表示形式不同的两个&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;实例按以下顺序比较不相等：</target>
        </trans-unit>
        <trans-unit id="20f8e5de30ab07dba7ae9bf5b95938e813252ce1" translate="yes" xml:space="preserve">
          <source>Compare two operands using their abstract representation rather than their value as in &lt;a href=&quot;#decimal.Decimal.compare_total&quot;&gt;&lt;code&gt;compare_total()&lt;/code&gt;&lt;/a&gt;, but ignoring the sign of each operand. &lt;code&gt;x.compare_total_mag(y)&lt;/code&gt; is equivalent to &lt;code&gt;x.copy_abs().compare_total(y.copy_abs())&lt;/code&gt;.</source>
          <target state="translated">使用它们的抽象表示来比较两个操作数，而不是像&lt;a href=&quot;#decimal.Decimal.compare_total&quot;&gt; &lt;code&gt;compare_total()&lt;/code&gt; &lt;/a&gt;那样比较它们的值，但忽略每个操作数的符号。 &lt;code&gt;x.compare_total_mag(y)&lt;/code&gt; 等效于 &lt;code&gt;x.copy_abs().compare_total(y.copy_abs())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2db74bb511106c122af95dcaf7fcfe944fd3e230" translate="yes" xml:space="preserve">
          <source>Compare two sequences of lines, and generate the delta (a sequence of lines).</source>
          <target state="translated">比较两个线段序列,并生成delta(线段序列)。</target>
        </trans-unit>
        <trans-unit id="953a40025f44a8432ec051b9b74e9a3f7ef429e2" translate="yes" xml:space="preserve">
          <source>Compares &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;. (4)</source>
          <target state="translated">比较&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;。（4）</target>
        </trans-unit>
        <trans-unit id="8dc038b02cefa714bcf5c17046a5db1e8b3a6c7e" translate="yes" xml:space="preserve">
          <source>Compares &lt;em&gt;fromlines&lt;/em&gt; and &lt;em&gt;tolines&lt;/em&gt; (lists of strings) and returns a string which is a complete HTML file containing a table showing line by line differences with inter-line and intra-line changes highlighted.</source>
          <target state="translated">比较&lt;em&gt;fromlines&lt;/em&gt;和&lt;em&gt;tolines&lt;/em&gt;（字符串列表）并返回一个字符串，它是一个完整的HTML文件，其中包含一个表格，其中显示了逐行差异，并突出显示了行间和行内更改。</target>
        </trans-unit>
        <trans-unit id="6958d67629a2ae94e97852327539538ecb61eb53" translate="yes" xml:space="preserve">
          <source>Compares &lt;em&gt;fromlines&lt;/em&gt; and &lt;em&gt;tolines&lt;/em&gt; (lists of strings) and returns a string which is a complete HTML table showing line by line differences with inter-line and intra-line changes highlighted.</source>
          <target state="translated">比较&lt;em&gt;fromlines&lt;/em&gt;和&lt;em&gt;toline&lt;/em&gt;（字符串列表）并返回一个字符串，该字符串是一个完整的HTML表，显示逐行差异，并突出显示行间和行内更改。</target>
        </trans-unit>
        <trans-unit id="fdec73464d867b795bc0bb2b0167267e3523aede" translate="yes" xml:space="preserve">
          <source>Compares &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; numerically.</source>
          <target state="translated">数字比较&lt;em&gt;x&lt;/em&gt;和&lt;em&gt;y&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="444703ac8616d8a745a339ea43536fb0ff41fac7" translate="yes" xml:space="preserve">
          <source>Compares the values numerically with their sign ignored.</source>
          <target state="translated">将数值与符号忽略的数值进行比较。</target>
        </trans-unit>
        <trans-unit id="525ac3126560a9c0e3826f5ea2686c919b3bb570" translate="yes" xml:space="preserve">
          <source>Compares the values of the two operands numerically.</source>
          <target state="translated">对两个操作数的数值进行比较。</target>
        </trans-unit>
        <trans-unit id="73d47aca2575e0cc09ea14fb2d8f31f4746ee82d" translate="yes" xml:space="preserve">
          <source>Compares two operands using their abstract representation, ignoring sign.</source>
          <target state="translated">使用两个操作数的抽象表示进行比较,忽略符号。</target>
        </trans-unit>
        <trans-unit id="c1deea1e8065f7fa1dff18b0b984e1bb244eb5a9" translate="yes" xml:space="preserve">
          <source>Compares two operands using their abstract representation.</source>
          <target state="translated">用它们的抽象表示来比较两个操作数。</target>
        </trans-unit>
        <trans-unit id="ec7d845ee5f455147d4709a9c5d20c0b1ef64636" translate="yes" xml:space="preserve">
          <source>Compares two strings according to the current &lt;a href=&quot;#locale.LC_COLLATE&quot;&gt;&lt;code&gt;LC_COLLATE&lt;/code&gt;&lt;/a&gt; setting. As any other compare function, returns a negative, or a positive value, or &lt;code&gt;0&lt;/code&gt;, depending on whether &lt;em&gt;string1&lt;/em&gt; collates before or after &lt;em&gt;string2&lt;/em&gt; or is equal to it.</source>
          <target state="translated">根据当前的&lt;a href=&quot;#locale.LC_COLLATE&quot;&gt; &lt;code&gt;LC_COLLATE&lt;/code&gt; &lt;/a&gt;设置比较两个字符串。与任何其他比较函数一样，返回负数或正值或 &lt;code&gt;0&lt;/code&gt; ，具体取决于&lt;em&gt;string1&lt;/em&gt;是在&lt;em&gt;string2&lt;/em&gt;之前还是之后进行&lt;em&gt;排序，&lt;/em&gt;还是等于&lt;em&gt;string2&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9069531bcf0ef87ca797eda0607bfeba3543d8bd" translate="yes" xml:space="preserve">
          <source>Compares two values numerically and returns the maximum.</source>
          <target state="translated">对两个值进行数值比较,并返回最大值。</target>
        </trans-unit>
        <trans-unit id="66a492fe6f467abcbd162852e24ccb12966c30dc" translate="yes" xml:space="preserve">
          <source>Compares two values numerically and returns the minimum.</source>
          <target state="translated">比较两个数值并返回最小值。</target>
        </trans-unit>
        <trans-unit id="e3ba73bc3f1f2b5d12bbe8a9ce4ebb667b72d5d0" translate="yes" xml:space="preserve">
          <source>Comparing finalizers with __del__() methods</source>
          <target state="translated">比较定型器与__del__()方法。</target>
        </trans-unit>
        <trans-unit id="5a3feec2309d8aaeadf148adbaa31c64e10db8cf" translate="yes" xml:space="preserve">
          <source>Comparison of UUID objects are made by way of comparing their &lt;a href=&quot;#uuid.UUID.int&quot;&gt;&lt;code&gt;UUID.int&lt;/code&gt;&lt;/a&gt; attributes. Comparison with a non-UUID object raises a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">UUID对象的比较是通过比较其&lt;a href=&quot;#uuid.UUID.int&quot;&gt; &lt;code&gt;UUID.int&lt;/code&gt; &lt;/a&gt;属性进行的。与非UUID对象进行比较会引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ec7bfbd8f038d101bc4a3aa35a2a06c4d78e2b1" translate="yes" xml:space="preserve">
          <source>Comparison operator tokens.</source>
          <target state="translated">比较运算符令牌。</target>
        </trans-unit>
        <trans-unit id="9461d4c9f916ad7df5538225ed552fb6e7e3284b" translate="yes" xml:space="preserve">
          <source>Comparison operators</source>
          <target state="translated">比较运算符</target>
        </trans-unit>
        <trans-unit id="af17d55480f6d03885487287cd9ef398b62996f2" translate="yes" xml:space="preserve">
          <source>Comparison with &lt;code&gt;json&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;json&lt;/code&gt; 的比较</target>
        </trans-unit>
        <trans-unit id="2c6ba62b4d0f4c99710147684caa366e7b542f25" translate="yes" xml:space="preserve">
          <source>Comparison with &lt;code&gt;marshal&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;marshal&lt;/code&gt; 比较</target>
        </trans-unit>
        <trans-unit id="e46ee00fde40e955c86abe019a61121e06d653c9" translate="yes" xml:space="preserve">
          <source>Comparisons</source>
          <target state="translated">Comparisons</target>
        </trans-unit>
        <trans-unit id="67d885e68a32de8311c94a6e848303bcb681c43d" translate="yes" xml:space="preserve">
          <source>Comparisons against non-enumeration values will always compare not equal (again, &lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt; was explicitly designed to behave differently, see below):</source>
          <target state="translated">与非枚举值的比较将始终比较不相等（再次，&lt;a href=&quot;#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; &lt;/a&gt;明确设计为具有不同的行为，请参见下文）：</target>
        </trans-unit>
        <trans-unit id="6c7da5bd9a1a6cdedc892ebc03906b898414fb61" translate="yes" xml:space="preserve">
          <source>Comparisons of &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; objects are supported, with some caveats.</source>
          <target state="translated">支持&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;对象的比较，但有一些警告。</target>
        </trans-unit>
        <trans-unit id="15625db063c896d7c5f789e985558845c01d7be7" translate="yes" xml:space="preserve">
          <source>Comparisons: &lt;code&gt;__lt__&lt;/code&gt;, &lt;code&gt;__gt__&lt;/code&gt;, &lt;code&gt;__le__&lt;/code&gt;, &lt;code&gt;__ge__&lt;/code&gt;, &lt;code&gt;__eq__&lt;/code&gt; and &lt;code&gt;__ne__&lt;/code&gt;</source>
          <target state="translated">比较： &lt;code&gt;__lt__&lt;/code&gt; ， &lt;code&gt;__gt__&lt;/code&gt; ， &lt;code&gt;__le__&lt;/code&gt; ， &lt;code&gt;__ge__&lt;/code&gt; ， &lt;code&gt;__eq__&lt;/code&gt; 和 &lt;code&gt;__ne__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0376a0adac094cb8f2e89ac9ad7cf29fb8225cc1" translate="yes" xml:space="preserve">
          <source>Compatibility Options</source>
          <target state="translated">兼容性选项</target>
        </trans-unit>
        <trans-unit id="c9481cbf962c4e1e228b85148143dc709ee41867" translate="yes" xml:space="preserve">
          <source>Compile a regular expression pattern into a &lt;a href=&quot;#re-objects&quot;&gt;regular expression object&lt;/a&gt;, which can be used for matching using its &lt;a href=&quot;#re.Pattern.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#re.Pattern.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; and other methods, described below.</source>
          <target state="translated">将正则表达式模式编译为正&lt;a href=&quot;#re-objects&quot;&gt;则表达式对象&lt;/a&gt;，可使用其&lt;a href=&quot;#re.Pattern.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#re.Pattern.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;和其他方法（如下所述）将其用于匹配。</target>
        </trans-unit>
        <trans-unit id="d2d9d12eb096f938c80d4aeadbf5ce24597a84b4" translate="yes" xml:space="preserve">
          <source>Compile a source file to byte-code and write out the byte-code cache file. The source code is loaded from the file named &lt;em&gt;file&lt;/em&gt;. The byte-code is written to &lt;em&gt;cfile&lt;/em&gt;, which defaults to the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;/&lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt; path, ending in &lt;code&gt;.pyc&lt;/code&gt;. For example, if &lt;em&gt;file&lt;/em&gt; is &lt;code&gt;/foo/bar/baz.py&lt;/code&gt;&lt;em&gt;cfile&lt;/em&gt; will default to &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; for Python 3.2. If &lt;em&gt;dfile&lt;/em&gt; is specified, it is used as the name of the source file in error messages instead of &lt;em&gt;file&lt;/em&gt;. If &lt;em&gt;doraise&lt;/em&gt; is true, a &lt;a href=&quot;#py_compile.PyCompileError&quot;&gt;&lt;code&gt;PyCompileError&lt;/code&gt;&lt;/a&gt; is raised when an error is encountered while compiling &lt;em&gt;file&lt;/em&gt;. If &lt;em&gt;doraise&lt;/em&gt; is false (the default), an error string is written to &lt;code&gt;sys.stderr&lt;/code&gt;, but no exception is raised. This function returns the path to byte-compiled file, i.e. whatever &lt;em&gt;cfile&lt;/em&gt; value was used.</source>
          <target state="translated">将源文件编译为字节码，然后写出字节码缓存文件。源代码是从名为&lt;em&gt;file&lt;/em&gt;的文件加载的。字节码被写入&lt;em&gt;cfile&lt;/em&gt;，默认为&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt;路径，以 &lt;code&gt;.pyc&lt;/code&gt; 结尾。例如，如果&lt;em&gt;文件&lt;/em&gt;为 &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; ，则对于Python 3.2，&lt;em&gt;cfile&lt;/em&gt;将默认为 &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; 。如果指定了&lt;em&gt;dfile&lt;/em&gt;，它将用作错误消息中的源文件名，而不是&lt;em&gt;file&lt;/em&gt;。如果&lt;em&gt;doraise&lt;/em&gt;为true，&lt;a href=&quot;#py_compile.PyCompileError&quot;&gt; &lt;code&gt;PyCompileError&lt;/code&gt; &lt;/a&gt;在编译&lt;em&gt;file&lt;/em&gt;时遇到错误时引发。如果&lt;em&gt;doraise&lt;/em&gt;为false（默认值），则会将错误字符串写入 &lt;code&gt;sys.stderr&lt;/code&gt; ，但不会引发异常。此函数将路径返回到字节编译的文件，即，无论使用什么&lt;em&gt;cfile&lt;/em&gt;值。</target>
        </trans-unit>
        <trans-unit id="d5b39e3a4a0ff1675e947944087bc4de210f70f7" translate="yes" xml:space="preserve">
          <source>Compile a source file to byte-code and write out the byte-code cache file. The source code is loaded from the file named &lt;em&gt;file&lt;/em&gt;. The byte-code is written to &lt;em&gt;cfile&lt;/em&gt;, which defaults to the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;/&lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt; path, ending in &lt;code&gt;.pyc&lt;/code&gt;. For example, if &lt;em&gt;file&lt;/em&gt; is &lt;code&gt;/foo/bar/baz.py&lt;/code&gt;&lt;em&gt;cfile&lt;/em&gt; will default to &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; for Python 3.2. If &lt;em&gt;dfile&lt;/em&gt; is specified, it is used as the name of the source file in error messages when instead of &lt;em&gt;file&lt;/em&gt;. If &lt;em&gt;doraise&lt;/em&gt; is true, a &lt;a href=&quot;#py_compile.PyCompileError&quot;&gt;&lt;code&gt;PyCompileError&lt;/code&gt;&lt;/a&gt; is raised when an error is encountered while compiling &lt;em&gt;file&lt;/em&gt;. If &lt;em&gt;doraise&lt;/em&gt; is false (the default), an error string is written to &lt;code&gt;sys.stderr&lt;/code&gt;, but no exception is raised. This function returns the path to byte-compiled file, i.e. whatever &lt;em&gt;cfile&lt;/em&gt; value was used.</source>
          <target state="translated">将源文件编译为字节码，然后写出字节码缓存文件。源代码从名为&lt;em&gt;file&lt;/em&gt;的文件加载。字节码被写入&lt;em&gt;cfile&lt;/em&gt;，默认为&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt;路径，以 &lt;code&gt;.pyc&lt;/code&gt; 结尾。例如，如果&lt;em&gt;文件&lt;/em&gt;为 &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; ，则对于Python 3.2，&lt;em&gt;cfile&lt;/em&gt;将默认为 &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; 。如果指定了&lt;em&gt;dfile&lt;/em&gt;，则它在错误消息中用作源文件的名称，而不是&lt;em&gt;file&lt;/em&gt;。如果&lt;em&gt;doraise&lt;/em&gt;为true，&lt;a href=&quot;#py_compile.PyCompileError&quot;&gt; &lt;code&gt;PyCompileError&lt;/code&gt; &lt;/a&gt;在编译&lt;em&gt;file&lt;/em&gt;时遇到错误时引发。如果&lt;em&gt;doraise&lt;/em&gt;为false（默认值），则将错误字符串写入 &lt;code&gt;sys.stderr&lt;/code&gt; ，但不会引发异常。该函数将路径返回到字节编译文件，即，无论使用什么&lt;em&gt;cfile&lt;/em&gt;值。</target>
        </trans-unit>
        <trans-unit id="42730f0bab49ba85d88ec865bb87e661d2bc4033" translate="yes" xml:space="preserve">
          <source>Compile and run some source in the interpreter. Arguments are the same as for &lt;a href=&quot;#code.compile_command&quot;&gt;&lt;code&gt;compile_command()&lt;/code&gt;&lt;/a&gt;; the default for &lt;em&gt;filename&lt;/em&gt; is &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt;, and for &lt;em&gt;symbol&lt;/em&gt; is &lt;code&gt;'single'&lt;/code&gt;. One of several things can happen:</source>
          <target state="translated">在解释器中编译并运行某些源代码。参数与&lt;a href=&quot;#code.compile_command&quot;&gt; &lt;code&gt;compile_command()&lt;/code&gt; &lt;/a&gt;相同；&lt;em&gt;文件名&lt;/em&gt;的默认值为 &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt; ，&lt;em&gt;符号&lt;/em&gt;的默认值为 &lt;code&gt;'single'&lt;/code&gt; 。可能发生的事情之一：</target>
        </trans-unit>
        <trans-unit id="9a1ef077b7ae7f410f03416b14fba993f3f8d0cc" translate="yes" xml:space="preserve">
          <source>Compile and run some source in the interpreter. Arguments are the same as for &lt;a href=&quot;#code.compile_command&quot;&gt;&lt;code&gt;compile_command()&lt;/code&gt;&lt;/a&gt;; the default for &lt;em&gt;filename&lt;/em&gt; is &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt;, and for &lt;em&gt;symbol&lt;/em&gt; is &lt;code&gt;'single'&lt;/code&gt;. One several things can happen:</source>
          <target state="translated">在解释器中编译并运行某些源代码。参数与&lt;a href=&quot;#code.compile_command&quot;&gt; &lt;code&gt;compile_command()&lt;/code&gt; &lt;/a&gt;相同；&lt;em&gt;文件名&lt;/em&gt;的默认值为 &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt; ，&lt;em&gt;符号&lt;/em&gt;的默认值为 &lt;code&gt;'single'&lt;/code&gt; 。可能发生以下几种情况：</target>
        </trans-unit>
        <trans-unit id="6ba2e7df29de845b4fce8b311b542979840b455d" translate="yes" xml:space="preserve">
          <source>Compile several source files. The files named in &lt;em&gt;args&lt;/em&gt; (or on the command line, if &lt;em&gt;args&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;) are compiled and the resulting byte-code is cached in the normal manner. This function does not search a directory structure to locate source files; it only compiles files named explicitly. If &lt;code&gt;'-'&lt;/code&gt; is the only parameter in args, the list of files is taken from standard input.</source>
          <target state="translated">编译几个源文件。编译以&lt;em&gt;args&lt;/em&gt;命名的文件（或在&lt;em&gt;args&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; 的情况下在命令行上），并以常规方式缓存生成的字节码。此功能不会搜索目录结构来查找源文件；它仅编译显式命名的文件。如果 &lt;code&gt;'-'&lt;/code&gt; 是args中的唯一参数，则文件列表取自标准输入。</target>
        </trans-unit>
        <trans-unit id="302ff574d52437e8a73e75a74279e3e5224d3b5e" translate="yes" xml:space="preserve">
          <source>Compile the &lt;em&gt;source&lt;/em&gt; into a code or AST object. Code objects can be executed by &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;source&lt;/em&gt; can either be a normal string, a byte string, or an AST object. Refer to the &lt;a href=&quot;ast#module-ast&quot;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt; module documentation for information on how to work with AST objects.</source>
          <target state="translated">将&lt;em&gt;源&lt;/em&gt;编译为代码或AST对象。可以通过&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;执行代码对象。&lt;em&gt;source&lt;/em&gt;可以是普通字符串，字节字符串或AST对象。有关如何使用AST对象的信息，请参阅&lt;a href=&quot;ast#module-ast&quot;&gt; &lt;code&gt;ast&lt;/code&gt; &lt;/a&gt;模块文档。</target>
        </trans-unit>
        <trans-unit id="bccfbe750cf49dab3e0c0f91238beb85a3f90533" translate="yes" xml:space="preserve">
          <source>Compile the file with path &lt;em&gt;fullname&lt;/em&gt;. Return a true value if the file compiled successfully, and a false value otherwise.</source>
          <target state="translated">使用路径&lt;em&gt;fullname&lt;/em&gt;编译文件。如果文件编译成功，则返回true值，否则返回false值。</target>
        </trans-unit>
        <trans-unit id="61c502da53071344344e79de732f9e9aec13720f" translate="yes" xml:space="preserve">
          <source>Compile with the given optimization level. May be used multiple times to compile for multiple levels at a time (for example, &lt;code&gt;compileall -o 1 -o 2&lt;/code&gt;).</source>
          <target state="translated">使用给定的优化级别进行编译。可以多次使用，一次编译多个级别（例如， &lt;code&gt;compileall -o 1 -o 2&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3993a075f65ea9d57f80c74dc0601a16a30c7c44" translate="yes" xml:space="preserve">
          <source>Compile-time configuration</source>
          <target state="translated">编译时配置</target>
        </trans-unit>
        <trans-unit id="ec9fb830592720fea18290a9fbcd0a299dbee096" translate="yes" xml:space="preserve">
          <source>Compiled Struct objects support the following methods and attributes:</source>
          <target state="translated">编译的Struct对象支持以下方法和属性。</target>
        </trans-unit>
        <trans-unit id="489558e2136c105c8c1935a105dc275677dcb636" translate="yes" xml:space="preserve">
          <source>Compiled regular expression objects support the following methods and attributes:</source>
          <target state="translated">编译的正则表达式对象支持以下方法和属性。</target>
        </trans-unit>
        <trans-unit id="1878e8afc002cb59bbb15b3303ed029fb43b2242" translate="yes" xml:space="preserve">
          <source>Compiler Flags</source>
          <target state="translated">编译器标志</target>
        </trans-unit>
        <trans-unit id="399377a2ef52b0897f29ab21d1a129952f47856a" translate="yes" xml:space="preserve">
          <source>Compiler options and future statements are specified by bits which can be bitwise ORed together to specify multiple options. The bitfield required to specify a given future feature can be found as the &lt;code&gt;compiler_flag&lt;/code&gt; attribute on the &lt;code&gt;_Feature&lt;/code&gt; instance in the &lt;a href=&quot;__future__#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; module. &lt;a href=&quot;ast#ast-compiler-flags&quot;&gt;Compiler flags&lt;/a&gt; can be found in &lt;a href=&quot;ast#module-ast&quot;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt; module, with &lt;code&gt;PyCF_&lt;/code&gt; prefix.</source>
          <target state="translated">编译器选项和future语句由位指定，这些位可以按位&amp;ldquo;或&amp;rdquo;在一起以指定多个选项。在&lt;a href=&quot;__future__#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt;模块的 &lt;code&gt;_Feature&lt;/code&gt; 实例上，可以找到指定给定未来功能所需的位域，作为 &lt;code&gt;compiler_flag&lt;/code&gt; 属性。可以在&lt;a href=&quot;ast#module-ast&quot;&gt; &lt;code&gt;ast&lt;/code&gt; &lt;/a&gt;模块中找到带有 &lt;code&gt;PyCF_&lt;/code&gt; 前缀的&lt;a href=&quot;ast#ast-compiler-flags&quot;&gt;编译器标志&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36486e707892339eda464ff7df67dd5bec7300c3" translate="yes" xml:space="preserve">
          <source>Compiling an ST object may result in exceptions related to compilation; an example would be a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; caused by the parse tree for &lt;code&gt;del f(0)&lt;/code&gt;: this statement is considered legal within the formal grammar for Python but is not a legal language construct. The &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; raised for this condition is actually generated by the Python byte-compiler normally, which is why it can be raised at this point by the &lt;a href=&quot;#module-parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module. Most causes of compilation failure can be diagnosed programmatically by inspection of the parse tree.</source>
          <target state="translated">编译ST对象可能会导致与编译有关的异常。一个示例是由 &lt;code&gt;del f(0)&lt;/code&gt; 的语法分析树引起的&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;：此语句在Python的正式语法中被认为是合法的，但不是合法的语言构造。针对这种情况引发的&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;实际上通常是由Python字节编译器生成的，这就是为什么&lt;a href=&quot;#module-parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;模块此时可以引发此错误的原因。编译失败的大多数原因可以通过检查解析树来以编程方式诊断。</target>
        </trans-unit>
        <trans-unit id="e68cff625cb1e046e108ecd04fcc4795cb056847" translate="yes" xml:space="preserve">
          <source>Complete the parsing of all previously fed data and return the root message object. It is undefined what happens if &lt;a href=&quot;#email.parser.BytesFeedParser.feed&quot;&gt;&lt;code&gt;feed()&lt;/code&gt;&lt;/a&gt; is called after this method has been called.</source>
          <target state="translated">完成所有先前输入的数据的解析，并返回根消息对象。如果在调用此方法后调用&lt;a href=&quot;#email.parser.BytesFeedParser.feed&quot;&gt; &lt;code&gt;feed()&lt;/code&gt; ,&lt;/a&gt;将会发生什么尚不确定。</target>
        </trans-unit>
        <trans-unit id="fb19eda22344fd0640934ac70fa25bfcfd76bbf0" translate="yes" xml:space="preserve">
          <source>Completer Objects</source>
          <target state="translated">补全器对象</target>
        </trans-unit>
        <trans-unit id="03b19db1587dcbefee78bc65c3bcb728cf93bcbf" translate="yes" xml:space="preserve">
          <source>Completer objects have the following method:</source>
          <target state="translated">补全器对象有以下方法。</target>
        </trans-unit>
        <trans-unit id="2ff255684a2277f806fcebf3fe338ed27857f350" translate="yes" xml:space="preserve">
          <source>Completion</source>
          <target state="translated">Completion</target>
        </trans-unit>
        <trans-unit id="6555cf7647f496dd893f271901e01ce57be9948d" translate="yes" xml:space="preserve">
          <source>Completion boxes intially exclude names beginning with &amp;lsquo;_&amp;rsquo; or, for modules, not included in &amp;lsquo;__all__&amp;rsquo;. The hidden names can be accessed by typing &amp;lsquo;_&amp;rsquo; after &amp;lsquo;.&amp;rsquo;, either before or after the box is opened.</source>
          <target state="translated">完成框最初排除以&amp;ldquo; _&amp;rdquo;开头的名称，或者对于模块，不包括在&amp;ldquo; __all__&amp;rdquo;中的名称。可以在打开框之前或之后在&amp;ldquo;。&amp;rdquo;之后键入&amp;ldquo; _&amp;rdquo;来访问隐藏的名称。</target>
        </trans-unit>
        <trans-unit id="1edd778907f333f7f36339636d25a8e14334aadb" translate="yes" xml:space="preserve">
          <source>Completions</source>
          <target state="translated">Completions</target>
        </trans-unit>
        <trans-unit id="649bcb49c4b75dec8e9a06cf58af6eac9481eb7f" translate="yes" xml:space="preserve">
          <source>Completions and the &amp;lsquo;Expand Word&amp;rsquo; facility can save a lot of typing!</source>
          <target state="translated">完成和&amp;ldquo;扩展单词&amp;rdquo;功能可以节省大量输入！</target>
        </trans-unit>
        <trans-unit id="ce3877ac6a4a4f61427184dc092c28755c8b7eac" translate="yes" xml:space="preserve">
          <source>Completions are currently limited to those in the namespaces. Names in an Editor window which are not via &lt;code&gt;__main__&lt;/code&gt; and &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt; will not be found. Run the module once with your imports to correct this situation. Note that IDLE itself places quite a few modules in sys.modules, so much can be found by default, e.g. the re module.</source>
          <target state="translated">当前的完成仅限于名称空间中的完成。在&amp;ldquo;编辑器&amp;rdquo;窗口中未通过 &lt;code&gt;__main__&lt;/code&gt; 和&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; &lt;/a&gt;找到的名称将找不到。对导入运行模块一次，以纠正这种情况。请注意，IDLE本身在sys.modules中放置了很多模块，默认情况下可以找到很多模块，例如re模块。</target>
        </trans-unit>
        <trans-unit id="a17b1def50d26bbf1b1c4d4a7dad947e8e2e3c13" translate="yes" xml:space="preserve">
          <source>Completions are supplied for functions, classes, and attributes of classes, both built-in and user-defined. Completions are also provided for filenames.</source>
          <target state="translated">为函数、类和类的属性(包括内置的和用户定义的)提供补全。也为文件名提供了补全。</target>
        </trans-unit>
        <trans-unit id="e654cb9191fcdd9ff32402fb5fae7ae7087c957f" translate="yes" xml:space="preserve">
          <source>Completions are supplied, when requested and available, for module names, attributes of classes or functions, or filenames. Each request method displays a completion box with existing names. (See tab completions below for an exception.) For any box, change the name being completed and the item highlighted in the box by typing and deleting characters; by hitting</source>
          <target state="translated">当模块名称、类或函数的属性或文件名被请求并可用时,会提供补全。每个请求方法都会显示一个带有现有名称的补全框。(请参见下面的选项卡补全的例外情况。)对于任何一个框,可以通过键入和删除字符来改变被补全的名称和在框中高亮显示的项目;通过击打</target>
        </trans-unit>
        <trans-unit id="8755d561f79961b30ffc29205eff84ff3ef00ca2" translate="yes" xml:space="preserve">
          <source>Complex number versions of many of these functions.</source>
          <target state="translated">许多这些函数的复数版本。</target>
        </trans-unit>
        <trans-unit id="f1ca60ce2746a34e1483fe1cbd8d245ea7a4431b" translate="yes" xml:space="preserve">
          <source>Complex number with zero real part and NaN imaginary part. Equivalent to &lt;code&gt;complex(0.0, float('nan'))&lt;/code&gt;.</source>
          <target state="translated">实数为零，虚部为NaN的复数。等效于 &lt;code&gt;complex(0.0, float('nan'))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="856a7fdf66abac0aeac1358ce9ed1196e779ca99" translate="yes" xml:space="preserve">
          <source>Complex number with zero real part and positive infinity imaginary part. Equivalent to &lt;code&gt;complex(0.0, float('inf'))&lt;/code&gt;.</source>
          <target state="translated">实数为零，虚部为正的复数。等效于 &lt;code&gt;complex(0.0, float('inf'))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7263286a3d3adc36bd59c0625cd0385f1300dc31" translate="yes" xml:space="preserve">
          <source>Compose a raw device number from the major and minor device numbers.</source>
          <target state="translated">从主要的和次要的设备号码组成一个原始设备号码。</target>
        </trans-unit>
        <trans-unit id="76476be9e1765c3ffe98eb1ebd68c62d6cd7816e" translate="yes" xml:space="preserve">
          <source>Compound shapes</source>
          <target state="translated">复合形状</target>
        </trans-unit>
        <trans-unit id="ed2ff637c10fb1755e29c0eb2376d67d8e5a91b4" translate="yes" xml:space="preserve">
          <source>Comprehensions</source>
          <target state="translated">Comprehensions</target>
        </trans-unit>
        <trans-unit id="ef4391ea7c4b5271522992deeedc7a25412bff19" translate="yes" xml:space="preserve">
          <source>Compress &lt;em&gt;data&lt;/em&gt; (a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object), returning a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object containing compressed data for at least part of the input. Some of &lt;em&gt;data&lt;/em&gt; may be buffered internally, for use in later calls to &lt;a href=&quot;#lzma.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#lzma.LZMACompressor.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt;. The returned data should be concatenated with the output of any previous calls to &lt;a href=&quot;#lzma.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">压缩&lt;em&gt;数据&lt;/em&gt;（&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象），返回一个&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象，其中包含至少一部分输入的压缩数据。某些&lt;em&gt;数据&lt;/em&gt;可能会在内部进行缓冲，以供以后调用&lt;a href=&quot;#lzma.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#lzma.LZMACompressor.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; 时使用&lt;/a&gt;。返回的数据应与先前对&lt;a href=&quot;#lzma.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;的任何调用的输出串联在一起。</target>
        </trans-unit>
        <trans-unit id="ce6bfddfc40b292958b2d07fee76aba33ff10ea7" translate="yes" xml:space="preserve">
          <source>Compress &lt;em&gt;data&lt;/em&gt; (a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object), returning the compressed data as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">压缩&lt;em&gt;数据&lt;/em&gt;（&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象），将压缩后的数据作为&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象返回。</target>
        </trans-unit>
        <trans-unit id="31296bca7725b04daba7fcb5c66023014c8d3031" translate="yes" xml:space="preserve">
          <source>Compress &lt;em&gt;data&lt;/em&gt;, a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">压缩&lt;em&gt;数据&lt;/em&gt;，类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78b33fe1622859ebab7cd44fb8002dcc7bdb8037" translate="yes" xml:space="preserve">
          <source>Compress &lt;em&gt;data&lt;/em&gt;, a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">压缩&lt;em&gt;数据&lt;/em&gt;，类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2c37054d68291c245420f17393b2410b2e86009" translate="yes" xml:space="preserve">
          <source>Compress &lt;em&gt;data&lt;/em&gt;, returning a bytes object containing compressed data for at least part of the data in &lt;em&gt;data&lt;/em&gt;. This data should be concatenated to the output produced by any preceding calls to the &lt;a href=&quot;#zlib.compress&quot;&gt;&lt;code&gt;compress()&lt;/code&gt;&lt;/a&gt; method. Some input may be kept in internal buffers for later processing.</source>
          <target state="translated">压缩&lt;em&gt;数据&lt;/em&gt;，返回一个字节对象，该对象包含数据中至少一部分数据的压缩&lt;em&gt;数据&lt;/em&gt;。该数据应与之前对&lt;a href=&quot;#zlib.compress&quot;&gt; &lt;code&gt;compress()&lt;/code&gt; &lt;/a&gt;方法的任何调用所产生的输出连接起来。某些输入可以保留在内部缓冲区中，以供以后处理。</target>
        </trans-unit>
        <trans-unit id="252b98c1d48fdbd471784cef9923f08179d6b81e" translate="yes" xml:space="preserve">
          <source>Compress files with the deflate method, reducing the size of the output file. By default, files are stored uncompressed in the archive.</source>
          <target state="translated">用deflate方法压缩文件,减少输出文件的大小。默认情况下,文件会被存储在档案中,未被压缩。</target>
        </trans-unit>
        <trans-unit id="775e5e502fbbb8546aacf868eeb5bd2222854638" translate="yes" xml:space="preserve">
          <source>Compress the &lt;em&gt;data&lt;/em&gt;, returning a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object containing the compressed data. &lt;em&gt;compresslevel&lt;/em&gt; and &lt;em&gt;mtime&lt;/em&gt; have the same meaning as in the &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; constructor above.</source>
          <target state="translated">压缩&lt;em&gt;数据&lt;/em&gt;，返回一个包含压缩数据的&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。&lt;em&gt;compresslevel&lt;/em&gt;和&lt;em&gt;mtime&lt;/em&gt;与上面的&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;构造函数中的含义相同。</target>
        </trans-unit>
        <trans-unit id="f43ac7b0d311bb9c471caadaf3f8773466b680c0" translate="yes" xml:space="preserve">
          <source>Compress the operand using bz2.</source>
          <target state="translated">用bz2压缩操作数。</target>
        </trans-unit>
        <trans-unit id="5212cd6485bfc60658f3c8a304ed12fc3c4a277e" translate="yes" xml:space="preserve">
          <source>Compress the operand using gzip.</source>
          <target state="translated">使用gzip压缩操作数。</target>
        </trans-unit>
        <trans-unit id="4a45b118e15b6bd6a94d44b0bbee89589ddf4ac4" translate="yes" xml:space="preserve">
          <source>Compresses the bytes in &lt;em&gt;data&lt;/em&gt;, returning a bytes object containing compressed data. &lt;em&gt;level&lt;/em&gt; is an integer from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt; or &lt;code&gt;-1&lt;/code&gt; controlling the level of compression; &lt;code&gt;1&lt;/code&gt; (Z_BEST_SPEED) is fastest and produces the least compression, &lt;code&gt;9&lt;/code&gt; (Z_BEST_COMPRESSION) is slowest and produces the most. &lt;code&gt;0&lt;/code&gt; (Z_NO_COMPRESSION) is no compression. The default value is &lt;code&gt;-1&lt;/code&gt; (Z_DEFAULT_COMPRESSION). Z_DEFAULT_COMPRESSION represents a default compromise between speed and compression (currently equivalent to level 6). Raises the &lt;a href=&quot;#zlib.error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; exception if any error occurs.</source>
          <target state="translated">压缩&lt;em&gt;data中&lt;/em&gt;的字节，返回包含压缩数据的bytes对象。&lt;em&gt;level&lt;/em&gt;是控制压缩级别的从 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;9&lt;/code&gt; 或 &lt;code&gt;-1&lt;/code&gt; 的整数； &lt;code&gt;1&lt;/code&gt; （Z_BEST_SPEED）最快，压缩最少； &lt;code&gt;9&lt;/code&gt; （Z_BEST_COMPRESSION）最快，压缩最多。 &lt;code&gt;0&lt;/code&gt; （Z_NO_COMPRESSION）为无压缩。默认值为 &lt;code&gt;-1&lt;/code&gt; （Z_DEFAULT_COMPRESSION）。 Z_DEFAULT_COMPRESSION表示速度和压缩之间的默认折衷（当前等效于6级）。如果发生任何错误，则引发&lt;a href=&quot;#zlib.error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="f4057e0a017788c60067ac45c180127e6ca3d7e2" translate="yes" xml:space="preserve">
          <source>Compressing and decompressing data in memory</source>
          <target state="translated">压缩和解压内存中的数据。</target>
        </trans-unit>
        <trans-unit id="41fd7a221df8ea60c00182c7d5141c64fb744d0b" translate="yes" xml:space="preserve">
          <source>Compressing data in memory:</source>
          <target state="translated">压缩内存中的数据。</target>
        </trans-unit>
        <trans-unit id="c9c387b0dc7af1e0e33628071b1a8be3e604b7b0" translate="yes" xml:space="preserve">
          <source>Compression filters support the following options (specified as additional entries in the dictionary representing the filter):</source>
          <target state="translated">压缩过滤器支持以下选项(在代表过滤器的字典中作为附加条目指定)。</target>
        </trans-unit>
        <trans-unit id="56fc1016d3d1b0959e8c0aa5b0c56ae38e78681f" translate="yes" xml:space="preserve">
          <source>Compression filters:</source>
          <target state="translated">压缩过滤器。</target>
        </trans-unit>
        <trans-unit id="5065d3322b1cc916797546af2d81f7e0936b267a" translate="yes" xml:space="preserve">
          <source>Compression objects support the following methods:</source>
          <target state="translated">压缩对象支持以下方法:</target>
        </trans-unit>
        <trans-unit id="bee75b793163ee26ddbfd75ab38847a9a6c431ef" translate="yes" xml:space="preserve">
          <source>Compute CRC-32, the 32-bit checksum of &lt;em&gt;data&lt;/em&gt;, starting with an initial CRC of &lt;em&gt;value&lt;/em&gt;. The default initial CRC is zero. The algorithm is consistent with the ZIP file checksum. Since the algorithm is designed for use as a checksum algorithm, it is not suitable for use as a general hash algorithm. Use as follows:</source>
          <target state="translated">以&lt;em&gt;value&lt;/em&gt;的初始CRC开头，计算CRC-32，即&lt;em&gt;数据&lt;/em&gt;的32位校验和。默认初始CRC为零。该算法与ZIP文件校验和一致。由于该算法旨在用作校验和算法，因此不适合用作常规哈希算法。用法如下：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45959b181cd66f8b705aa76ed45d3f07ea4400ba" translate="yes" xml:space="preserve">
          <source>Compute a 16-bit CRC value of &lt;em&gt;data&lt;/em&gt;, starting with &lt;em&gt;value&lt;/em&gt; as the initial CRC, and return the result. This uses the CRC-CCITT polynomial &lt;em&gt;x&lt;/em&gt;&lt;sup&gt;16&lt;/sup&gt; + &lt;em&gt;x&lt;/em&gt;&lt;sup&gt;12&lt;/sup&gt; + &lt;em&gt;x&lt;/em&gt;&lt;sup&gt;5&lt;/sup&gt; + 1, often represented as 0x1021. This CRC is used in the binhex4 format.</source>
          <target state="translated">计算&lt;em&gt;data&lt;/em&gt;的16位CRC值，从&lt;em&gt;value&lt;/em&gt;作为初始CRC开始，然后返回结果。这使用CRC-CCITT多项式&lt;em&gt;x &lt;/em&gt;&lt;sup&gt;16&lt;/sup&gt; + &lt;em&gt;x &lt;/em&gt;&lt;sup&gt;12&lt;/sup&gt; + &lt;em&gt;x &lt;/em&gt;&lt;sup&gt;5&lt;/sup&gt; +1，通常表示为0x1021。此CRC以binhex4格式使用。</target>
        </trans-unit>
        <trans-unit id="ee0c965933c15363329073644af0d1a4e9c764c0" translate="yes" xml:space="preserve">
          <source>Compute a version of this path relative to the path represented by &lt;em&gt;other&lt;/em&gt;. If it&amp;rsquo;s impossible, ValueError is raised:</source>
          <target state="translated">相对于&lt;em&gt;other&lt;/em&gt;表示的路径，计算此路径的版本。如果不可能，则引发ValueError：</target>
        </trans-unit>
        <trans-unit id="11b56abb7eb573ae4aa9d4aedb75919545a4913b" translate="yes" xml:space="preserve">
          <source>Compute differences</source>
          <target state="translated">计算差异</target>
        </trans-unit>
        <trans-unit id="e2e8976d876a9d7be1b9503dcc5eb3d8084870f7" translate="yes" xml:space="preserve">
          <source>Compute the &lt;a href=&quot;https://www.statisticshowto.com/probability-and-statistics/z-score/&quot;&gt;Standard Score&lt;/a&gt; describing &lt;em&gt;x&lt;/em&gt; in terms of the number of standard deviations above or below the mean of the normal distribution: &lt;code&gt;(x - mean) / stdev&lt;/code&gt;.</source>
          <target state="translated">根据高于或低于正态分布平均值的标准偏差数计算描述&lt;em&gt;x&lt;/em&gt;的&lt;a href=&quot;https://www.statisticshowto.com/probability-and-statistics/z-score/&quot;&gt;标准分数&lt;/a&gt;： &lt;code&gt;(x - mean) / stdev&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf4dd7208dfd91b35e751b8484eef8491e1f3574" translate="yes" xml:space="preserve">
          <source>Compute the differences between two snapshots to detect memory leaks</source>
          <target state="translated">计算两个快照之间的差异,以检测内存泄漏。</target>
        </trans-unit>
        <trans-unit id="ad89e51e297334951eca71d67d6292566afb4941" translate="yes" xml:space="preserve">
          <source>Compute the differences with an old snapshot. Get statistics as a sorted list of &lt;a href=&quot;#tracemalloc.StatisticDiff&quot;&gt;&lt;code&gt;StatisticDiff&lt;/code&gt;&lt;/a&gt; instances grouped by &lt;em&gt;key_type&lt;/em&gt;.</source>
          <target state="translated">使用旧快照计算差异。获取统计信息，作为按&lt;em&gt;key_type&lt;/em&gt;分组的&lt;a href=&quot;#tracemalloc.StatisticDiff&quot;&gt; &lt;code&gt;StatisticDiff&lt;/code&gt; &lt;/a&gt;实例的排序列表。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03bdaa6fb2ed530058f92d68943ddb81378bcf09" translate="yes" xml:space="preserve">
          <source>Compute the inverse cumulative distribution function, also known as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Quantile_function&quot;&gt;quantile function&lt;/a&gt; or the &lt;a href=&quot;https://www.statisticshowto.datasciencecentral.com/inverse-distribution-function/&quot;&gt;percent-point&lt;/a&gt; function. Mathematically, it is written &lt;code&gt;x : P(X &amp;lt;= x) = p&lt;/code&gt;.</source>
          <target state="translated">计算逆累积分布函数，也称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Quantile_function&quot;&gt;分位数函数&lt;/a&gt;或&lt;a href=&quot;https://www.statisticshowto.datasciencecentral.com/inverse-distribution-function/&quot;&gt;百分点&lt;/a&gt;函数。数学上，它写成 &lt;code&gt;x : P(X &amp;lt;= x) = p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4cdb8fcb44a7b6604b374ba11f6c8e5c39c5a6b" translate="yes" xml:space="preserve">
          <source>Compute the stack effect of &lt;em&gt;opcode&lt;/em&gt; with argument &lt;em&gt;oparg&lt;/em&gt;.</source>
          <target state="translated">用参数&lt;em&gt;oparg&lt;/em&gt;计算&lt;em&gt;操作码&lt;/em&gt;的堆栈效果。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d70f36ff6cd8e45798fddacbd359094cdd8a3366" translate="yes" xml:space="preserve">
          <source>Computes &lt;em&gt;date2&lt;/em&gt; such that &lt;code&gt;date2 +
timedelta == date1&lt;/code&gt;. (2)</source>
          <target state="translated">计算&lt;em&gt;date2&lt;/em&gt;，使 &lt;code&gt;date2 + timedelta == date1&lt;/code&gt; 。（2）</target>
        </trans-unit>
        <trans-unit id="4f40de672ec578dbb4d04a5bff21135a4b19d5c2" translate="yes" xml:space="preserve">
          <source>Computes a CRC (Cyclic Redundancy Check) checksum of &lt;em&gt;data&lt;/em&gt;. The result is an unsigned 32-bit integer. If &lt;em&gt;value&lt;/em&gt; is present, it is used as the starting value of the checksum; otherwise, a default value of 0 is used. Passing in &lt;em&gt;value&lt;/em&gt; allows computing a running checksum over the concatenation of several inputs. The algorithm is not cryptographically strong, and should not be used for authentication or digital signatures. Since the algorithm is designed for use as a checksum algorithm, it is not suitable for use as a general hash algorithm.</source>
          <target state="translated">计算的CRC（循环冗余校验）校验&lt;em&gt;数据&lt;/em&gt;。结果是一个无符号的32位整数。如果存在&lt;em&gt;值&lt;/em&gt;，则将其用作校验和的起始值；否则，将其用作校验和的起始值。否则，将使用默认值0。传递&lt;em&gt;值&lt;/em&gt;允许在多个输入的串联上计算运行中的校验和。该算法在密码学上不强，不应用于身份验证或数字签名。由于该算法旨在用作校验和算法，因此不适合用作常规哈希算法。</target>
        </trans-unit>
        <trans-unit id="97c7cd77e353400aedb87ee907b81571149d454b" translate="yes" xml:space="preserve">
          <source>Computes an Adler-32 checksum of &lt;em&gt;data&lt;/em&gt;. (An Adler-32 checksum is almost as reliable as a CRC32 but can be computed much more quickly.) The result is an unsigned 32-bit integer. If &lt;em&gt;value&lt;/em&gt; is present, it is used as the starting value of the checksum; otherwise, a default value of 1 is used. Passing in &lt;em&gt;value&lt;/em&gt; allows computing a running checksum over the concatenation of several inputs. The algorithm is not cryptographically strong, and should not be used for authentication or digital signatures. Since the algorithm is designed for use as a checksum algorithm, it is not suitable for use as a general hash algorithm.</source>
          <target state="translated">计算&lt;em&gt;data&lt;/em&gt;的Adler-32校验和。 （Adler-32校验和几乎与CRC32一样可靠，但可以更快地计算出来。）结果是一个无符号的32位整数。如果存在&lt;em&gt;值&lt;/em&gt;，则将其用作校验和的起始值；否则，将其用作校验和的起始值。否则，将使用默认值1。传递&lt;em&gt;值&lt;/em&gt;允许在多个输入的串联上计算运行中的校验和。该算法在密码学上不强，不应用于身份验证或数字签名。由于该算法旨在用作校验和算法，因此不适合用作常规哈希算法。</target>
        </trans-unit>
        <trans-unit id="2383286c668d7f469af532ed274616d742c13df5" translate="yes" xml:space="preserve">
          <source>Computes the datetime2 such that datetime2 + timedelta == datetime1. As for addition, the result has the same &lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; attribute as the input datetime, and no time zone adjustments are done even if the input is aware.</source>
          <target state="translated">计算datetime2，使datetime2 + timedelta == datetime1。至于加法，结果具有与输入日期时间相同的&lt;a href=&quot;#datetime.datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;属性，即使输入知道，也不会进行时区调整。</target>
        </trans-unit>
        <trans-unit id="894f7dca9140374b369be4859f46ce98abed4203" translate="yes" xml:space="preserve">
          <source>Computes the network definitions resulting from removing the given &lt;em&gt;network&lt;/em&gt; from this one. Returns an iterator of network objects. Raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;network&lt;/em&gt; is not completely contained in this network.</source>
          <target state="translated">计算从此网络中删除给定&lt;em&gt;网络&lt;/em&gt;所得到的网络定义。返回网络对象的迭代器。如果&lt;em&gt;网络&lt;/em&gt;未完全包含在此网络中，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbdf0eb7498292b72269704004120cb8f8d583cd" translate="yes" xml:space="preserve">
          <source>Computes the quotient and the remainder: &lt;code&gt;q = t1 // t2&lt;/code&gt; (3) and &lt;code&gt;r = t1 % t2&lt;/code&gt;. q is an integer and r is a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">计算商和余数： &lt;code&gt;q = t1 // t2&lt;/code&gt; （3）和 &lt;code&gt;r = t1 % t2&lt;/code&gt; 。q是整数，r是时间&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="65605a06ef6e73adf6339d86f74f7a7fd3066a7e" translate="yes" xml:space="preserve">
          <source>Concatenate the tokens of the list &lt;em&gt;split_command&lt;/em&gt; and return a string. This function is the inverse of &lt;a href=&quot;#shlex.split&quot;&gt;&lt;code&gt;split()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">连接列表&lt;em&gt;split_command&lt;/em&gt;的标记并返回一个字符串。此函数是&lt;a href=&quot;#shlex.split&quot;&gt; &lt;code&gt;split()&lt;/code&gt; &lt;/a&gt;的逆函数。</target>
        </trans-unit>
        <trans-unit id="8b2f6fdbd9bc20288f332c0d0c814d0cc5256497" translate="yes" xml:space="preserve">
          <source>Concatenates &lt;em&gt;count&lt;/em&gt; strings from the stack and pushes the resulting string onto the stack.</source>
          <target state="translated">从字符串连接&lt;em&gt;计数&lt;/em&gt;字符串，并将结果字符串推入堆栈。</target>
        </trans-unit>
        <trans-unit id="dca475869231efe73f51036d473231b811d45a97" translate="yes" xml:space="preserve">
          <source>Concatenating immutable sequences always results in a new object. This means that building up a sequence by repeated concatenation will have a quadratic runtime cost in the total sequence length. To get a linear runtime cost, you must switch to one of the alternatives below:</source>
          <target state="translated">连接不可变的序列总是会产生一个新的对象。这意味着,通过重复连接建立一个序列,在总序列长度上会有二次元的运行成本。要想获得线性的运行成本,必须切换到以下的备选方案之一。</target>
        </trans-unit>
        <trans-unit id="eec037fd21cdbe752cf956ee1da877b809e27461" translate="yes" xml:space="preserve">
          <source>Concatenation</source>
          <target state="translated">Concatenation</target>
        </trans-unit>
        <trans-unit id="f3be8356957ebba679b4e57ebb7aa4c800fcefb2" translate="yes" xml:space="preserve">
          <source>Conceptually, the warnings filter maintains an ordered list of filter specifications; any specific warning is matched against each filter specification in the list in turn until a match is found; the filter determines the disposition of the match. Each entry is a tuple of the form (&lt;em&gt;action&lt;/em&gt;, &lt;em&gt;message&lt;/em&gt;, &lt;em&gt;category&lt;/em&gt;, &lt;em&gt;module&lt;/em&gt;, &lt;em&gt;lineno&lt;/em&gt;), where:</source>
          <target state="translated">从概念上讲，警告过滤器会维护过滤器规格的有序列表。依次将所有特定警告与列表中的每个过滤器规范进行匹配，直到找到匹配项为止；过滤器确定匹配项的位置。每个条目都是以下形式的元组（&lt;em&gt;action&lt;/em&gt;，&lt;em&gt;message&lt;/em&gt;，&lt;em&gt;category&lt;/em&gt;，&lt;em&gt;module&lt;/em&gt;，&lt;em&gt;lineno&lt;/em&gt;），其中：</target>
        </trans-unit>
        <trans-unit id="e4873f7588ebd67db018e96303a178c6a52381c0" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urldefrag&quot;&gt;&lt;code&gt;urldefrag()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;decode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.DefragResult&quot;&gt;&lt;code&gt;DefragResult&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.urldefrag&quot;&gt; &lt;code&gt;urldefrag()&lt;/code&gt; &lt;/a&gt;结果的具体类包含&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;数据。的 &lt;code&gt;decode()&lt;/code&gt; 方法返回一个&lt;a href=&quot;#urllib.parse.DefragResult&quot;&gt; &lt;code&gt;DefragResult&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="c86fc848f5d3b30b654b8615eac00d619b08db32" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urldefrag&quot;&gt;&lt;code&gt;urldefrag()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;encode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.DefragResultBytes&quot;&gt;&lt;code&gt;DefragResultBytes&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">包含&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;数据的&lt;a href=&quot;#urllib.parse.urldefrag&quot;&gt; &lt;code&gt;urldefrag()&lt;/code&gt; &lt;/a&gt;结果的具体类。的 &lt;code&gt;encode()&lt;/code&gt; 方法返回一个&lt;a href=&quot;#urllib.parse.DefragResultBytes&quot;&gt; &lt;code&gt;DefragResultBytes&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="69f8a8c28157d7a587d893a55f83a6ddbf8e32c0" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;decode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.ParseResult&quot;&gt;&lt;code&gt;ParseResult&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt;结果的具体类包含&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;数据。的 &lt;code&gt;decode()&lt;/code&gt; 方法返回一个&lt;a href=&quot;#urllib.parse.ParseResult&quot;&gt; &lt;code&gt;ParseResult&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="ac1dc4e0cac81e1db0265b0ca958236b82bf3662" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;encode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.ParseResultBytes&quot;&gt;&lt;code&gt;ParseResultBytes&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">包含&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;数据的&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt;结果的具体类。的 &lt;code&gt;encode()&lt;/code&gt; 方法返回一个&lt;a href=&quot;#urllib.parse.ParseResultBytes&quot;&gt; &lt;code&gt;ParseResultBytes&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="3cb583b3889c0e84e2d551a0644ec331655bcad3" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt;&lt;code&gt;urlsplit()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;decode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.SplitResult&quot;&gt;&lt;code&gt;SplitResult&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt; &lt;code&gt;urlsplit()&lt;/code&gt; &lt;/a&gt;结果的具体类包含&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;数据。的 &lt;code&gt;decode()&lt;/code&gt; 方法返回一个&lt;a href=&quot;#urllib.parse.SplitResult&quot;&gt; &lt;code&gt;SplitResult&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="d5d924f57aa0b52a07f9cab528c675436645d210" translate="yes" xml:space="preserve">
          <source>Concrete class for &lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt;&lt;code&gt;urlsplit()&lt;/code&gt;&lt;/a&gt; results containing &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data. The &lt;code&gt;encode()&lt;/code&gt; method returns a &lt;a href=&quot;#urllib.parse.SplitResultBytes&quot;&gt;&lt;code&gt;SplitResultBytes&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt; &lt;code&gt;urlsplit()&lt;/code&gt; &lt;/a&gt;结果的具体类包含&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;数据。的 &lt;code&gt;encode()&lt;/code&gt; 方法返回一个&lt;a href=&quot;#urllib.parse.SplitResultBytes&quot;&gt; &lt;code&gt;SplitResultBytes&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="3b44036ed302f7b1c88213d4226da4a09ffb53f7" translate="yes" xml:space="preserve">
          <source>Concrete exceptions</source>
          <target state="translated">具体的例外情况</target>
        </trans-unit>
        <trans-unit id="aaf99aba10a45a0965c1f5a7485bf8101d4955a1" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.InspectLoader.get_code&quot;&gt;&lt;code&gt;InspectLoader.get_code()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.InspectLoader.get_code&quot;&gt; &lt;code&gt;InspectLoader.get_code()&lt;/code&gt; 的&lt;/a&gt;具体实现。</target>
        </trans-unit>
        <trans-unit id="abb50bb5084c3c7f17688dd977f5d66eaa8b0d23" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.InspectLoader.get_source&quot;&gt;&lt;code&gt;InspectLoader.get_source()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.InspectLoader.get_source&quot;&gt; &lt;code&gt;InspectLoader.get_source()&lt;/code&gt; 的&lt;/a&gt;具体实现。</target>
        </trans-unit>
        <trans-unit id="96e1b2fb89a3d8e1881de532a1f51184d55e1423" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.InspectLoader.is_package&quot;&gt;&lt;code&gt;InspectLoader.is_package()&lt;/code&gt;&lt;/a&gt;. A module is determined to be a package if its file path (as provided by &lt;a href=&quot;#importlib.abc.ExecutionLoader.get_filename&quot;&gt;&lt;code&gt;ExecutionLoader.get_filename()&lt;/code&gt;&lt;/a&gt;) is a file named &lt;code&gt;__init__&lt;/code&gt; when the file extension is removed &lt;strong&gt;and&lt;/strong&gt; the module name itself does not end in &lt;code&gt;__init__&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.InspectLoader.is_package&quot;&gt; &lt;code&gt;InspectLoader.is_package()&lt;/code&gt; 的&lt;/a&gt;具体实现。如果删除文件扩展名&lt;strong&gt;且&lt;/strong&gt;模块名称本身不以 &lt;code&gt;__init__&lt;/code&gt; 结尾，则如果模块的文件路径（由&lt;a href=&quot;#importlib.abc.ExecutionLoader.get_filename&quot;&gt; &lt;code&gt;ExecutionLoader.get_filename()&lt;/code&gt; 提供&lt;/a&gt;）是名为 &lt;code&gt;__init__&lt;/code&gt; 的文件，则将其确定为包。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7125c86451c432ed9435ea6c644d1c4bc3bfd309" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.Loader.exec_module&quot;&gt;&lt;code&gt;Loader.exec_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.Loader.exec_module&quot;&gt; &lt;code&gt;Loader.exec_module()&lt;/code&gt; 的&lt;/a&gt;具体实现。</target>
        </trans-unit>
        <trans-unit id="89903f918a68caead5ed1f734d66f571e0639a79" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt;&lt;code&gt;Loader.load_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt; &lt;code&gt;Loader.load_module()&lt;/code&gt; 的&lt;/a&gt;具体实现。</target>
        </trans-unit>
        <trans-unit id="93bc4671379fd14881c93a5aa3dbeb986b31ebad" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt;&lt;code&gt;importlib.abc.Loader.load_module()&lt;/code&gt;&lt;/a&gt; where specifying the name of the module to load is optional.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt; &lt;code&gt;importlib.abc.Loader.load_module()&lt;/code&gt; 的&lt;/a&gt;具体实现，其中指定要加载的模块的名称是可选的。</target>
        </trans-unit>
        <trans-unit id="33c676e8b570d87596699db2758d424aeecf6582" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.SourceLoader.path_stats&quot;&gt;&lt;code&gt;importlib.abc.SourceLoader.path_stats()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.SourceLoader.path_stats&quot;&gt; &lt;code&gt;importlib.abc.SourceLoader.path_stats()&lt;/code&gt; 的&lt;/a&gt;具体实现。</target>
        </trans-unit>
        <trans-unit id="3ca72d7245cb867e41f4d858e1f78cc1d69a143e" translate="yes" xml:space="preserve">
          <source>Concrete implementation of &lt;a href=&quot;#importlib.abc.SourceLoader.set_data&quot;&gt;&lt;code&gt;importlib.abc.SourceLoader.set_data()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#importlib.abc.SourceLoader.set_data&quot;&gt; &lt;code&gt;importlib.abc.SourceLoader.set_data()&lt;/code&gt; 的&lt;/a&gt;具体实现。</target>
        </trans-unit>
        <trans-unit id="44775b14aeb443f280aa734fbd55de0220e8e5fc" translate="yes" xml:space="preserve">
          <source>Concrete paths</source>
          <target state="translated">混凝土路</target>
        </trans-unit>
        <trans-unit id="661cb1d399b3ebbdd1ee76a5725b6d6595fcd3d7" translate="yes" xml:space="preserve">
          <source>Concrete paths are subclasses of the pure path classes. In addition to operations provided by the latter, they also provide methods to do system calls on path objects. There are three ways to instantiate concrete paths:</source>
          <target state="translated">具体路径是纯路径类的子类。除了后者提供的操作外,它们还提供了对路径对象进行系统调用的方法。有三种方法可以实例化具体路径。</target>
        </trans-unit>
        <trans-unit id="98055de3034d1714b7cd78eaeb907e34365e1b70" translate="yes" xml:space="preserve">
          <source>Concrete paths provide the following methods in addition to pure paths methods. Many of these methods can raise an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; if a system call fails (for example because the path doesn&amp;rsquo;t exist).</source>
          <target state="translated">除了纯路径方法外，具体路径还提供以下方法。如果系统调用失败（例如，因为该路径不存在），则这些方法中的许多方法都会引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9dee390cee100e2fe13f839c77d4fa4ccfbb4cc3" translate="yes" xml:space="preserve">
          <source>Concrete pointer types are created by calling &lt;a href=&quot;#ctypes.POINTER&quot;&gt;&lt;code&gt;POINTER()&lt;/code&gt;&lt;/a&gt; with the type that will be pointed to; this is done automatically by &lt;a href=&quot;#ctypes.pointer&quot;&gt;&lt;code&gt;pointer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过使用将要指向的类型调用&lt;a href=&quot;#ctypes.POINTER&quot;&gt; &lt;code&gt;POINTER()&lt;/code&gt; &lt;/a&gt;来创建具体的指针类型。这是由&lt;a href=&quot;#ctypes.pointer&quot;&gt; &lt;code&gt;pointer()&lt;/code&gt; &lt;/a&gt;自动完成的。</target>
        </trans-unit>
        <trans-unit id="8a2f1d2b7a65b5552a28938a7d386232c4f8135a" translate="yes" xml:space="preserve">
          <source>Concrete structure and union types must be created by subclassing one of these types, and at least define a &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; class variable. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; will create &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt;s which allow reading and writing the fields by direct attribute accesses. These are the</source>
          <target state="translated">必须通过子类化这些类型之一来创建具体的结构和联合类型，并且至少定义一个&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;类变量。&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;将创建&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;描述符&lt;/a&gt; s，该描述符允许通过直接属性访问来读取和写入字段。这些是</target>
        </trans-unit>
        <trans-unit id="cb515a4ff0d9fdb9131530e64a20817b3ae35418" translate="yes" xml:space="preserve">
          <source>Concrete structure and union types must be created by subclassing one of these types, and at least define a &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; class variable. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; will create &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt;s which allow reading and writing the fields by direct attribute accesses. These are the</source>
          <target state="translated">必须通过子类化这些类型之一来创建具体的结构和联合类型，并且至少定义一个&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;类变量。&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;将创建&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-descriptor&quot;&gt;描述符&lt;/a&gt;s，该描述符允许通过直接属性访问来读取和写入字段。这些是</target>
        </trans-unit>
        <trans-unit id="fef076506851ed5b5157b122b9b6bbcad9281a68" translate="yes" xml:space="preserve">
          <source>Concurrency and Multithreading</source>
          <target state="translated">并发和多线程</target>
        </trans-unit>
        <trans-unit id="2afb9c42556d70319b603400b52e5fdd21630e4f" translate="yes" xml:space="preserve">
          <source>Concurrent Execution</source>
          <target state="translated">并发执行</target>
        </trans-unit>
        <trans-unit id="2f4979324e03e4571b1d7eba701226670c2ee2da" translate="yes" xml:space="preserve">
          <source>Condition</source>
          <target state="translated">Condition</target>
        </trans-unit>
        <trans-unit id="c74f6d3be348ed585e083cae56adae9c24b79762" translate="yes" xml:space="preserve">
          <source>Condition Objects</source>
          <target state="translated">条件对象</target>
        </trans-unit>
        <trans-unit id="4431a5bce2c36a19adda700e11471cea2e9ca290" translate="yes" xml:space="preserve">
          <source>Conditionally emits the specified logging record, depending on filters which may have been added to the handler. Wraps the actual emission of the record with acquisition/release of the I/O thread lock.</source>
          <target state="translated">根据可能已经添加到处理程序的过滤器,有条件地发送指定的日志记录。将记录的实际发送与I/O线程锁的获取/释放结合起来。</target>
        </trans-unit>
        <trans-unit id="c9610887f7e94418f2963f3d5234a00aa9d14b9c" translate="yes" xml:space="preserve">
          <source>Config parsers allow for heavy customization. If you are interested in changing the behaviour outlined by the footnote reference, consult the &lt;a href=&quot;#customizing-parser-behaviour&quot;&gt;Customizing Parser Behaviour&lt;/a&gt; section.</source>
          <target state="translated">配置解析器允许大量自定义。如果您有兴趣更改脚注参考中概述的行为，请参阅&amp;ldquo; &lt;a href=&quot;#customizing-parser-behaviour&quot;&gt;自定义解析器行为&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="482cbc67affff4d99daf732b9cce92f397cd4863" translate="yes" xml:space="preserve">
          <source>Config parsers do not guess datatypes of values in configuration files, always storing them internally as strings. This means that if you need other datatypes, you should convert on your own:</source>
          <target state="translated">Config解析器不会猜测配置文件中的值的数据类型,总是在内部将其存储为字符串。这意味着,如果你需要其他的数据类型,你应该自行转换。</target>
        </trans-unit>
        <trans-unit id="bffeedd1762bad5afcfa011bb63e3a6b161ac09b" translate="yes" xml:space="preserve">
          <source>Config parsers provide option value getters that perform type conversion. By default &lt;a href=&quot;#configparser.ConfigParser.getint&quot;&gt;&lt;code&gt;getint()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#configparser.ConfigParser.getfloat&quot;&gt;&lt;code&gt;getfloat()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#configparser.ConfigParser.getboolean&quot;&gt;&lt;code&gt;getboolean()&lt;/code&gt;&lt;/a&gt; are implemented. Should other getters be desirable, users may define them in a subclass or pass a dictionary where each key is a name of the converter and each value is a callable implementing said conversion. For instance, passing &lt;code&gt;{'decimal': decimal.Decimal}&lt;/code&gt; would add &lt;code&gt;getdecimal()&lt;/code&gt; on both the parser object and all section proxies. In other words, it will be possible to write both &lt;code&gt;parser_instance.getdecimal('section', 'key', fallback=0)&lt;/code&gt; and &lt;code&gt;parser_instance['section'].getdecimal('key', 0)&lt;/code&gt;.</source>
          <target state="translated">配置解析器提供执行类型转换的选项值获取器。默认情况下，实现了&lt;a href=&quot;#configparser.ConfigParser.getint&quot;&gt; &lt;code&gt;getint()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#configparser.ConfigParser.getfloat&quot;&gt; &lt;code&gt;getfloat()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#configparser.ConfigParser.getboolean&quot;&gt; &lt;code&gt;getboolean()&lt;/code&gt; &lt;/a&gt;。如果需要其他获取器，则用户可以在子类中定义它们，或者通过字典，其中每个键是转换器的名称，每个值是实现所述转换的可调用项。例如，传递 &lt;code&gt;{'decimal': decimal.Decimal}&lt;/code&gt; 将在解析器对象和所有节代理上都添加 &lt;code&gt;getdecimal()&lt;/code&gt; 。换句话说，可以同时编写 &lt;code&gt;parser_instance.getdecimal('section', 'key', fallback=0)&lt;/code&gt; 和 &lt;code&gt;parser_instance['section'].getdecimal('key', 0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9396e436287dd450a03e9c851178b9857e9984dc" translate="yes" xml:space="preserve">
          <source>ConfigParser Objects</source>
          <target state="translated">ConfigParser对象</target>
        </trans-unit>
        <trans-unit id="c8e9637a16e578e18429cf4fcff3b081de30f045" translate="yes" xml:space="preserve">
          <source>Configuration API for the logging module.</source>
          <target state="translated">日志模块的配置API。</target>
        </trans-unit>
        <trans-unit id="4a3159f10e950eb53845a9894d70759e57e06665" translate="yes" xml:space="preserve">
          <source>Configuration dictionary schema</source>
          <target state="translated">配置字典模式</target>
        </trans-unit>
        <trans-unit id="874045d0b58bea7f4b1890b8d25955443d0b7e5c" translate="yes" xml:space="preserve">
          <source>Configuration file format</source>
          <target state="translated">配置文件格式</target>
        </trans-unit>
        <trans-unit id="c7d169a77b6b82590c18ad288dd9476968ff0a9b" translate="yes" xml:space="preserve">
          <source>Configuration files may include comments, prefixed by specific characters (&lt;code&gt;#&lt;/code&gt; and &lt;code&gt;;&lt;/code&gt; by default &lt;a href=&quot;#id14&quot; id=&quot;id7&quot;&gt;1&lt;/a&gt;). Comments may appear on their own on an otherwise empty line, possibly indented. &lt;a href=&quot;#id14&quot; id=&quot;id8&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">配置文件可能包含注释，并以特定字符（ &lt;code&gt;#&lt;/code&gt; 和 &lt;code&gt;;&lt;/code&gt; 默认为&lt;a href=&quot;#id14&quot; id=&quot;id7&quot;&gt;1&lt;/a&gt;）作为前缀。注释可能会自己出现在否则为空的行上，可能会缩进。&lt;a href=&quot;#id14&quot; id=&quot;id8&quot;&gt;1个&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f50a84c4acdc41a04d7853b1ada0141fff29a0c8" translate="yes" xml:space="preserve">
          <source>Configuration functions</source>
          <target state="translated">配置功能</target>
        </trans-unit>
        <trans-unit id="38b23d1375544f4a68ea9228188041f47459e054" translate="yes" xml:space="preserve">
          <source>Configuration variables</source>
          <target state="translated">配置变量</target>
        </trans-unit>
        <trans-unit id="b1ccfdfa96eaa74519fd230cf6c07020bda1d4bb" translate="yes" xml:space="preserve">
          <source>Configure IDLE</source>
          <target state="translated">配置IDLE</target>
        </trans-unit>
        <trans-unit id="aad58884b08fca1d5f2760df3a361217131003ed" translate="yes" xml:space="preserve">
          <source>Configuring Netscape Mail on Unix: Why The Content-Length Format is Bad</source>
          <target state="translated">在Unix上配置Netscape邮件。为什么内容长度格式不好</target>
        </trans-unit>
        <trans-unit id="2950778d6cda82a5104a7e185cc1d434bea0cba0" translate="yes" xml:space="preserve">
          <source>Configuring the data sources</source>
          <target state="translated">配置数据源</target>
        </trans-unit>
        <trans-unit id="24dbea7a3dbb1c93c581fc08dcbaae936c7b5b98" translate="yes" xml:space="preserve">
          <source>Conformance</source>
          <target state="translated">Conformance</target>
        </trans-unit>
        <trans-unit id="a4375da2cfa7a280c282d1b36b819dcf637bfafd" translate="yes" xml:space="preserve">
          <source>Connect &lt;em&gt;sock&lt;/em&gt; to a remote socket at &lt;em&gt;address&lt;/em&gt;.</source>
          <target state="translated">将&lt;em&gt;袜子&lt;/em&gt;连接到&lt;em&gt;地址&lt;/em&gt;为的远程套接字。</target>
        </trans-unit>
        <trans-unit id="bb2900aa8459ddf5dfcf514a4ce4e55d988f0ad4" translate="yes" xml:space="preserve">
          <source>Connect a local manager object to a remote manager process:</source>
          <target state="translated">将本地管理器对象连接到远程管理器进程。</target>
        </trans-unit>
        <trans-unit id="cd161fc882f1eb443dd7d8854b732281ce9998a8" translate="yes" xml:space="preserve">
          <source>Connect the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">连接&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d4fcdc0bc98f6ff6cea4ddb53d0e1a772f9093a6" translate="yes" xml:space="preserve">
          <source>Connect to a TCP service listening on the Internet &lt;em&gt;address&lt;/em&gt; (a 2-tuple &lt;code&gt;(host, port)&lt;/code&gt;), and return the socket object. This is a higher-level function than &lt;a href=&quot;#socket.socket.connect&quot;&gt;&lt;code&gt;socket.connect()&lt;/code&gt;&lt;/a&gt;: if &lt;em&gt;host&lt;/em&gt; is a non-numeric hostname, it will try to resolve it for both &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt;, and then try to connect to all possible addresses in turn until a connection succeeds. This makes it easy to write clients that are compatible to both IPv4 and IPv6.</source>
          <target state="translated">连接到侦听Internet &lt;em&gt;地址&lt;/em&gt;（2元组 &lt;code&gt;(host, port)&lt;/code&gt; ）的TCP服务，然后返回套接字对象。这是比&lt;a href=&quot;#socket.socket.connect&quot;&gt; &lt;code&gt;socket.connect()&lt;/code&gt; &lt;/a&gt;更高级别的函数：如果&lt;em&gt;host&lt;/em&gt;是非数字主机名，它将尝试为&lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socket.AF_INET6&quot;&gt; &lt;code&gt;AF_INET6&lt;/code&gt; &lt;/a&gt;解析它，然后尝试依次连接到所有可能的地址，直到连接成功。这使得编写兼容IPv4和IPv6的客户端变得容易。</target>
        </trans-unit>
        <trans-unit id="e6f61cc31165b3975363671c13b90453cf950a7d" translate="yes" xml:space="preserve">
          <source>Connect to a host on a given port. The defaults are to connect to the local host at the standard SMTP port (25). If the hostname ends with a colon (&lt;code&gt;':'&lt;/code&gt;) followed by a number, that suffix will be stripped off and the number interpreted as the port number to use. This method is automatically invoked by the constructor if a host is specified during instantiation. Returns a 2-tuple of the response code and message sent by the server in its connection response.</source>
          <target state="translated">连接到给定端口上的主机。默认设置是在标准SMTP端口（25）上连接到本地主机。如果主机名以冒号（ &lt;code&gt;':'&lt;/code&gt; ）结尾，后跟数字，则将删除该后缀，并将该数字解释为要使用的端口号。如果在实例化期间指定了主机，则构造方法会自动调用此方法。返回由服务器在其连接响应中发送的响应代码和消息的2元组。</target>
        </trans-unit>
        <trans-unit id="444d26a3fa1bc0bf4b6f4e4099759a9f621441f3" translate="yes" xml:space="preserve">
          <source>Connect to a host. The optional second argument is the port number, which defaults to the standard Telnet port (23). The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used).</source>
          <target state="translated">连接到主机。可选的第二个参数是端口号，默认为标准Telnet端口（23）。可选的&lt;em&gt;timeout&lt;/em&gt;参数以秒为单位指定用于阻止诸如连接尝试之类的操作的超时（如果未指定，将使用全局默认超时设置）。</target>
        </trans-unit>
        <trans-unit id="3eab2d2be4e5d1074d243fdd53a134d1e63c9f55" translate="yes" xml:space="preserve">
          <source>Connect to a remote socket at &lt;em&gt;address&lt;/em&gt;. (The format of &lt;em&gt;address&lt;/em&gt; depends on the address family &amp;mdash; see above.)</source>
          <target state="translated">连接到&lt;em&gt;地址&lt;/em&gt;为的远程套接字。 （&lt;em&gt;地址&lt;/em&gt;的格式取决于地址系列-参见上文。）</target>
        </trans-unit>
        <trans-unit id="8b1643fcad85682fb58507af62d69671a99e5155" translate="yes" xml:space="preserve">
          <source>Connect to the given host and port. The default port number is &lt;code&gt;21&lt;/code&gt;, as specified by the FTP protocol specification. It is rarely needed to specify a different port number. This function should be called only once for each instance; it should not be called at all if a host was given when the instance was created. All other methods can only be used after a connection has been made. The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for the connection attempt. If no &lt;em&gt;timeout&lt;/em&gt; is passed, the global default timeout setting will be used. &lt;em&gt;source_address&lt;/em&gt; is a 2-tuple &lt;code&gt;(host, port)&lt;/code&gt; for the socket to bind to as its source address before connecting.</source>
          <target state="translated">连接到给定的主机和端口。默认端口号是 &lt;code&gt;21&lt;/code&gt; ，由FTP协议规范指定。很少需要指定其他端口号。每个实例只能调用一次该函数；如果在创建实例时给出了主机，则根本不应该调用它。所有其他方法只能在建立连接后使用。可选的&lt;em&gt;timeout&lt;/em&gt;参数指定连接尝试的超时时间（以秒为单位）。如果没有&lt;em&gt;超时&lt;/em&gt;，则使用全局默认超时设置。&lt;em&gt;source_address&lt;/em&gt;是一个2元组 &lt;code&gt;(host, port)&lt;/code&gt; ，套接字在连接之前要绑定为其源地址。</target>
        </trans-unit>
        <trans-unit id="b146bed3a097a025e4795416168a73fc3806496f" translate="yes" xml:space="preserve">
          <source>Connect to the server specified when the object was created. By default, this is called automatically when making a request if the client does not already have a connection.</source>
          <target state="translated">连接到创建对象时指定的服务器。默认情况下,如果客户端还没有连接,则在发出请求时自动调用。</target>
        </trans-unit>
        <trans-unit id="0c3e7796e468f44129a6efd9d7ebe023f9e3c4e7" translate="yes" xml:space="preserve">
          <source>Connecting Existing Sockets</source>
          <target state="translated">连接现有插座</target>
        </trans-unit>
        <trans-unit id="aca48106439509e9b50a5fef43d595f5e650540d" translate="yes" xml:space="preserve">
          <source>Connection Callbacks</source>
          <target state="translated">连接回调</target>
        </trans-unit>
        <trans-unit id="577a2233533a7bf577842fe0fd8ace8c88f42be1" translate="yes" xml:space="preserve">
          <source>Connection Objects</source>
          <target state="translated">连接对象</target>
        </trans-unit>
        <trans-unit id="57c2f659e5599986512235ea5e7464dc105b5143" translate="yes" xml:space="preserve">
          <source>Connection callbacks are called on all protocols, exactly once per a successful connection. All other protocol callbacks can only be called between those two methods.</source>
          <target state="translated">连接回调在所有协议上都会被调用,每一次成功的连接都会被调用一次。所有其他协议回调只能在这两个方法之间调用。</target>
        </trans-unit>
        <trans-unit id="b75c5cd9724dc1313cd9d945da6421ddd86109cc" translate="yes" xml:space="preserve">
          <source>Connection objects allow the sending and receiving of picklable objects or strings. They can be thought of as message oriented connected sockets.</source>
          <target state="translated">连接对象允许发送和接收picklable对象或字符串。它们可以被认为是面向消息的连接套接字。</target>
        </trans-unit>
        <trans-unit id="b203fa071d8e7068e122dd99c7dbeb3e4cbdb6bf" translate="yes" xml:space="preserve">
          <source>Connection objects are usually created using &lt;a href=&quot;#multiprocessing.Pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt; &amp;ndash; see also &lt;a href=&quot;#multiprocessing-listeners-clients&quot;&gt;Listeners and Clients&lt;/a&gt;.</source>
          <target state="translated">连接对象通常使用&lt;a href=&quot;#multiprocessing.Pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt;创建-另请参见&lt;a href=&quot;#multiprocessing-listeners-clients&quot;&gt;侦听器和客户端&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d681d78d315a3168a67f6fffacf7f3bc57fbcc10" translate="yes" xml:space="preserve">
          <source>Connection objects can be used as context managers that automatically commit or rollback transactions. In the event of an exception, the transaction is rolled back; otherwise, the transaction is committed:</source>
          <target state="translated">连接对象可以作为上下文管理器,自动提交或回滚事务。如果出现异常,事务将被回滚;否则,事务将被提交。</target>
        </trans-unit>
        <trans-unit id="96f7e671b1e48da4a2700769f8225126847b97cf" translate="yes" xml:space="preserve">
          <source>Connection refused</source>
          <target state="translated">拒绝连接</target>
        </trans-unit>
        <trans-unit id="2986a51d253e6221052722aab2efbc181246b417" translate="yes" xml:space="preserve">
          <source>Connection reset by peer</source>
          <target state="translated">连接被对等体重置</target>
        </trans-unit>
        <trans-unit id="52c871ea22dada6554a1363ee61f9567c44efd80" translate="yes" xml:space="preserve">
          <source>Connection timed out</source>
          <target state="translated">连接超时</target>
        </trans-unit>
        <trans-unit id="f83f4a2cd4ca5e47b117cc54250e29c4a9a9ce89" translate="yes" xml:space="preserve">
          <source>ConnectionAbortedError</source>
          <target state="translated">ConnectionAbortedError</target>
        </trans-unit>
        <trans-unit id="54c5f681f77ec4523760ad989f74ae402f08fb1c" translate="yes" xml:space="preserve">
          <source>ConnectionError</source>
          <target state="translated">ConnectionError</target>
        </trans-unit>
        <trans-unit id="346d0cb89df3354c71056beb8315f1fd603881a7" translate="yes" xml:space="preserve">
          <source>ConnectionRefusedError</source>
          <target state="translated">ConnectionRefusedError</target>
        </trans-unit>
        <trans-unit id="e8b18c2c476b40a73af1343d07b9aa47bbb0ff8b" translate="yes" xml:space="preserve">
          <source>ConnectionResetError</source>
          <target state="translated">ConnectionResetError</target>
        </trans-unit>
        <trans-unit id="8437d1b9b9cb294d5842a58d446f70385979bc98" translate="yes" xml:space="preserve">
          <source>Consider also using the &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;asyncio.run()&lt;/code&gt;&lt;/a&gt; function instead of using lower level functions to manually create and close an event loop.</source>
          <target state="translated">还可以考虑使用&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;asyncio.run()&lt;/code&gt; &lt;/a&gt;函数，而不要使用较低级别的函数来手动创建和关闭事件循环。</target>
        </trans-unit>
        <trans-unit id="a4b846dc8cd054c0c31ba355c789b0864b7c6d8b" translate="yes" xml:space="preserve">
          <source>Consider signing data with &lt;a href=&quot;hmac#module-hmac&quot;&gt;&lt;code&gt;hmac&lt;/code&gt;&lt;/a&gt; if you need to ensure that it has not been tampered with.</source>
          <target state="translated">如果需要确保没有被篡改，请考虑使用&lt;a href=&quot;hmac#module-hmac&quot;&gt; &lt;code&gt;hmac&lt;/code&gt; &lt;/a&gt;签名数据。</target>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">请看下面的例子。</target>
        </trans-unit>
        <trans-unit id="437f7509cb94cfef1ec9f079bd756fc15feedbab" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; instead which checks types of the values to be stored internally. If you don&amp;rsquo;t want interpolation, you can use &lt;code&gt;ConfigParser(interpolation=None)&lt;/code&gt;.</source>
          <target state="translated">考虑使用&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;代替，后者检查要在内部存储的值的类型。如果您不想进行插值，则可以使用 &lt;code&gt;ConfigParser(interpolation=None)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1612e43b06a89c38e657c3b548bbd79567e65cd8" translate="yes" xml:space="preserve">
          <source>Console I/O</source>
          <target state="translated">控制台I/O</target>
        </trans-unit>
        <trans-unit id="733fd2b4c4e1bca4c7d0e3c2e1c341bcd1d34269" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>
        </trans-unit>
        <trans-unit id="7ea52f3e3962df42e43b89832b2dce2a5e5245f8" translate="yes" xml:space="preserve">
          <source>Constant for Qualcomm&amp;rsquo;s IPC router protocol, used to communicate with service providing remote processors.</source>
          <target state="translated">高通IPC路由器协议的常数，用于与提供远程处理器的服务进行通信。</target>
        </trans-unit>
        <trans-unit id="8bccf31be51924bf346ddec6d14b137594bd8724" translate="yes" xml:space="preserve">
          <source>Constant used to represent the limit for an unlimited resource.</source>
          <target state="translated">用于表示无限资源的限制的常数。</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="9fb4a24d5847d19f993e1aa6ec6580ba7e3b040d" translate="yes" xml:space="preserve">
          <source>Constants added by the &lt;code&gt;site&lt;/code&gt; module</source>
          <target state="translated">&lt;code&gt;site&lt;/code&gt; 模块添加的常量</target>
        </trans-unit>
        <trans-unit id="4aa7814d1493bf6811664d88aa25ff6b32f9aa53" translate="yes" xml:space="preserve">
          <source>Constants added by the site module</source>
          <target state="translated">网站模块添加的常量</target>
        </trans-unit>
        <trans-unit id="0f608943fc2791d62cf3a394cd1848f744abb9cf" translate="yes" xml:space="preserve">
          <source>Constants for Linux Kernel cryptography.</source>
          <target state="translated">Linux内核密码学的常量。</target>
        </trans-unit>
        <trans-unit id="0fdabc6c5f9e265d52968cf2f2e05b3a7603f627" translate="yes" xml:space="preserve">
          <source>Constants for Linux host/guest communication.</source>
          <target state="translated">Linux主机/访客通信的常量。</target>
        </trans-unit>
        <trans-unit id="f28e7e6317bf212d44ee5253776c344c575ddb18" translate="yes" xml:space="preserve">
          <source>Constants for Windows&amp;rsquo; WSAIoctl(). The constants are used as arguments to the &lt;a href=&quot;#socket.socket.ioctl&quot;&gt;&lt;code&gt;ioctl()&lt;/code&gt;&lt;/a&gt; method of socket objects.</source>
          <target state="translated">Windows的WSAIoctl（）的常量。常量用作套接字对象的&lt;a href=&quot;#socket.socket.ioctl&quot;&gt; &lt;code&gt;ioctl()&lt;/code&gt; &lt;/a&gt;方法的参数。</target>
        </trans-unit>
        <trans-unit id="f206b82b0505070ab8c6aee10e72d0b335e1e464" translate="yes" xml:space="preserve">
          <source>Constants used in the &lt;em&gt;mask&lt;/em&gt; arguments.</source>
          <target state="translated">&lt;em&gt;掩码&lt;/em&gt;参数中使用的常量。</target>
        </trans-unit>
        <trans-unit id="9f021b006e5c78b6f6464ef849d978e24da7fe8f" translate="yes" xml:space="preserve">
          <source>Construct a &lt;a href=&quot;#dis.Bytecode&quot;&gt;&lt;code&gt;Bytecode&lt;/code&gt;&lt;/a&gt; instance from the given traceback, setting &lt;em&gt;current_offset&lt;/em&gt; to the instruction responsible for the exception.</source>
          <target state="translated">从给定的追溯构造一个&lt;a href=&quot;#dis.Bytecode&quot;&gt; &lt;code&gt;Bytecode&lt;/code&gt; &lt;/a&gt;实例，将&lt;em&gt;current_offset&lt;/em&gt;设置为负责异常的指令。</target>
        </trans-unit>
        <trans-unit id="53fdaeb01a4647dd9ed8107f075d72a71c546909" translate="yes" xml:space="preserve">
          <source>Construct a &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; instance. This constructor understands several keyword parameters. An output stream may be set using the &lt;em&gt;stream&lt;/em&gt; keyword; the only method used on the stream object is the file protocol&amp;rsquo;s &lt;code&gt;write()&lt;/code&gt; method. If not specified, the &lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt;&lt;code&gt;PrettyPrinter&lt;/code&gt;&lt;/a&gt; adopts &lt;code&gt;sys.stdout&lt;/code&gt;. The amount of indentation added for each recursive level is specified by &lt;em&gt;indent&lt;/em&gt;; the default is one. Other values can cause output to look a little odd, but can make nesting easier to spot. The number of levels which may be printed is controlled by &lt;em&gt;depth&lt;/em&gt;; if the data structure being printed is too deep, the next contained level is replaced by &lt;code&gt;...&lt;/code&gt;. By default, there is no constraint on the depth of the objects being formatted. The desired output width is constrained using the &lt;em&gt;width&lt;/em&gt; parameter; the default is 80 characters. If a structure cannot be formatted within the constrained width, a best effort will be made. If &lt;em&gt;compact&lt;/em&gt; is false (the default) each item of a long sequence will be formatted on a separate line. If &lt;em&gt;compact&lt;/em&gt; is true, as many items as will fit within the &lt;em&gt;width&lt;/em&gt; will be formatted on each output line. If &lt;em&gt;sort_dicts&lt;/em&gt; is true (the default), dictionaries will be formatted with their keys sorted, otherwise they will display in insertion order.</source>
          <target state="translated">构造一个&lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt; &lt;code&gt;PrettyPrinter&lt;/code&gt; &lt;/a&gt;实例。该构造函数可以理解几个关键字参数。可以使用&lt;em&gt;stream&lt;/em&gt;关键字设置输出流。流对象上使用的唯一方法是文件协议的 &lt;code&gt;write()&lt;/code&gt; 方法。如果未指定，则&lt;a href=&quot;#pprint.PrettyPrinter&quot;&gt; &lt;code&gt;PrettyPrinter&lt;/code&gt; &lt;/a&gt;采用 &lt;code&gt;sys.stdout&lt;/code&gt; 。为每个递归级别添加的缩进量由&lt;em&gt;indent&lt;/em&gt;指定；默认值为1。其他值可能会使输出看起来有些奇怪，但会使嵌套更容易发现。可以打印的级数由&lt;em&gt;深度&lt;/em&gt;控制;如果要打印的数据结构太深，则将下一个包含的级别替换为 &lt;code&gt;...&lt;/code&gt; 。默认情况下，对要格式化的对象的深度没有限制。使用&lt;em&gt;width&lt;/em&gt;参数来限制所需的输出宽度。默认值为80个字符。如果无法在限制的宽度内格式化结构，则将尽力而为。如果&lt;em&gt;compact&lt;/em&gt;为false（默认值），则长序列的每个项目都将在单独的行上格式化。如果&lt;em&gt;compact&lt;/em&gt;为true，则将在每条输出行上格式化所有适合&lt;em&gt;宽度的&lt;/em&gt;项目。如果&lt;em&gt;sort_dicts&lt;/em&gt;为true（默认设置），则将对字典进行格式化并对其键进行排序，否则，它们将以插入顺序显示。</target>
        </trans-unit>
        <trans-unit id="97d036024d65baef7f82dc4bb9e931a1d6c84781" translate="yes" xml:space="preserve">
          <source>Construct a &lt;a href=&quot;#traceback.StackSummary&quot;&gt;&lt;code&gt;StackSummary&lt;/code&gt;&lt;/a&gt; object from a frame generator (such as is returned by &lt;a href=&quot;#traceback.walk_stack&quot;&gt;&lt;code&gt;walk_stack()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#traceback.walk_tb&quot;&gt;&lt;code&gt;walk_tb()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">从帧生成器构造一个&lt;a href=&quot;#traceback.StackSummary&quot;&gt; &lt;code&gt;StackSummary&lt;/code&gt; &lt;/a&gt;对象（如&lt;a href=&quot;#traceback.walk_stack&quot;&gt; &lt;code&gt;walk_stack()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#traceback.walk_tb&quot;&gt; &lt;code&gt;walk_tb()&lt;/code&gt; &lt;/a&gt;返回的对象）。</target>
        </trans-unit>
        <trans-unit id="05c27f7e9052c09901b9a3db205595325bd0cfd5" translate="yes" xml:space="preserve">
          <source>Construct a &lt;a href=&quot;#traceback.StackSummary&quot;&gt;&lt;code&gt;StackSummary&lt;/code&gt;&lt;/a&gt; object from a supplied list of &lt;a href=&quot;#traceback.FrameSummary&quot;&gt;&lt;code&gt;FrameSummary&lt;/code&gt;&lt;/a&gt; objects or old-style list of tuples. Each tuple should be a 4-tuple with filename, lineno, name, line as the elements.</source>
          <target state="translated">从提供的&lt;a href=&quot;#traceback.FrameSummary&quot;&gt; &lt;code&gt;FrameSummary&lt;/code&gt; &lt;/a&gt;对象列表或元组的旧列表构造一个&lt;a href=&quot;#traceback.StackSummary&quot;&gt; &lt;code&gt;StackSummary&lt;/code&gt; &lt;/a&gt;对象。每个元组应为4个元组，并以文件名，行号，名称，行作为元素。</target>
        </trans-unit>
        <trans-unit id="e9ea1fdfdf262d43c0f07da2968c3e29a919069b" translate="yes" xml:space="preserve">
          <source>Construct a &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; instance for a file on the filesystem, in preparation for adding it to a zip file.</source>
          <target state="translated">为文件系统上的文件构造一个&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt;实例，以准备将其添加到zip文件中。</target>
        </trans-unit>
        <trans-unit id="4d33a0f4716a226ab42d3940127626d6440e8683" translate="yes" xml:space="preserve">
          <source>Construct a Path object from a &lt;code&gt;root&lt;/code&gt; zipfile (which may be a &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; instance or &lt;code&gt;file&lt;/code&gt; suitable for passing to the &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; constructor).</source>
          <target state="translated">构造从一个路径对象 &lt;code&gt;root&lt;/code&gt; 压缩文件（其可以是&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;实例或 &lt;code&gt;file&lt;/code&gt; 适于传递给&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; 的&lt;/a&gt;构造函数）。</target>
        </trans-unit>
        <trans-unit id="3112ec976029a0e729ed6b89fc5274ba79def39b" translate="yes" xml:space="preserve">
          <source>Construct a URL from a tuple as returned by &lt;code&gt;urlparse()&lt;/code&gt;. The &lt;em&gt;parts&lt;/em&gt; argument can be any six-item iterable. This may result in a slightly different, but equivalent URL, if the URL that was parsed originally had unnecessary delimiters (for example, a &lt;code&gt;?&lt;/code&gt; with an empty query; the RFC states that these are equivalent).</source>
          <target state="translated">根据 &lt;code&gt;urlparse()&lt;/code&gt; 返回的元组构造URL 。该&lt;em&gt;部分&lt;/em&gt;参数可以是任何六个项目迭代。如果最初解析的URL包含不必要的定界符（例如，带空查询的 &lt;code&gt;?&lt;/code&gt; ； RFC声明它们是等效的），则这可能会导致稍微不同但等效的URL 。</target>
        </trans-unit>
        <trans-unit id="61682dd1f84451642ed993893fcc334a21383b18" translate="yes" xml:space="preserve">
          <source>Construct a full (&amp;ldquo;absolute&amp;rdquo;) URL by combining a &amp;ldquo;base URL&amp;rdquo; (&lt;em&gt;base&lt;/em&gt;) with another URL (&lt;em&gt;url&lt;/em&gt;). Informally, this uses components of the base URL, in particular the addressing scheme, the network location and (part of) the path, to provide missing components in the relative URL. For example:</source>
          <target state="translated">通过将&amp;ldquo;基本URL&amp;rdquo;（&lt;em&gt;base&lt;/em&gt;）与另一个URL（&lt;em&gt;url&lt;/em&gt;）组合来构造完整的（&amp;ldquo;绝对&amp;rdquo;）URL 。非正式地，这使用基本URL的组件（尤其是寻址方案，网络位置和路径（的一部分））在相对URL中提供缺少的组件。例如：</target>
        </trans-unit>
        <trans-unit id="e9b8abb778020f1da936f0e13fcbd935eb564490" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; object based from &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="translated">根据&lt;em&gt;value&lt;/em&gt;构造一个新的&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;对象。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bfc30acbe7554a7092c37a0edb99588f784bfb54" translate="yes" xml:space="preserve">
          <source>Construct a new directory comparison object, to compare the directories &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. &lt;em&gt;ignore&lt;/em&gt; is a list of names to ignore, and defaults to &lt;a href=&quot;#filecmp.DEFAULT_IGNORES&quot;&gt;&lt;code&gt;filecmp.DEFAULT_IGNORES&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;hide&lt;/em&gt; is a list of names to hide, and defaults to &lt;code&gt;[os.curdir, os.pardir]&lt;/code&gt;.</source>
          <target state="translated">构造一个新的目录比较对象，以比较目录&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b&lt;/em&gt;。&lt;em&gt;ignore&lt;/em&gt;是要忽略的名称列表，默认为&lt;a href=&quot;#filecmp.DEFAULT_IGNORES&quot;&gt; &lt;code&gt;filecmp.DEFAULT_IGNORES&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;hide&lt;/em&gt;是要隐藏的名称的列表，默认为 &lt;code&gt;[os.curdir, os.pardir]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9fa328893db482aa7f54213a8711654178dc0ba" translate="yes" xml:space="preserve">
          <source>Construct an IPv4 address. An &lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt;&lt;code&gt;AddressValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;address&lt;/em&gt; is not a valid IPv4 address.</source>
          <target state="translated">构造一个IPv4地址。一个&lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt; &lt;code&gt;AddressValueError&lt;/code&gt; &lt;/a&gt;如果提出&lt;em&gt;地址&lt;/em&gt;是不是有效的IPv4地址。</target>
        </trans-unit>
        <trans-unit id="e7093beeb0aa30879ccc0413587df269b30b2c73" translate="yes" xml:space="preserve">
          <source>Construct an IPv4 interface. The meaning of &lt;em&gt;address&lt;/em&gt; is as in the constructor of &lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt;&lt;code&gt;IPv4Network&lt;/code&gt;&lt;/a&gt;, except that arbitrary host addresses are always accepted.</source>
          <target state="translated">构造一个IPv4接口。&lt;em&gt;地址&lt;/em&gt;的含义与&lt;a href=&quot;#ipaddress.IPv4Network&quot;&gt; &lt;code&gt;IPv4Network&lt;/code&gt; &lt;/a&gt;的构造函数相同，只是始终接受任意主机地址。</target>
        </trans-unit>
        <trans-unit id="fb0670d4a3037aac106afeeeb98b1f559e593b73" translate="yes" xml:space="preserve">
          <source>Construct an IPv4 network definition. &lt;em&gt;address&lt;/em&gt; can be one of the following:</source>
          <target state="translated">构造一个IPv4网络定义。&lt;em&gt;地址&lt;/em&gt;可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="f3fa62a8054443db6c10537e3e6854f048379dbd" translate="yes" xml:space="preserve">
          <source>Construct an IPv6 address. An &lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt;&lt;code&gt;AddressValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;address&lt;/em&gt; is not a valid IPv6 address.</source>
          <target state="translated">构造一个IPv6地址。一个&lt;a href=&quot;#ipaddress.AddressValueError&quot;&gt; &lt;code&gt;AddressValueError&lt;/code&gt; &lt;/a&gt;如果提出&lt;em&gt;地址&lt;/em&gt;是不是一个有效的IPv6地址。</target>
        </trans-unit>
        <trans-unit id="501bc958ef53a686dd0a31a088072d052c1371cf" translate="yes" xml:space="preserve">
          <source>Construct an IPv6 interface. The meaning of &lt;em&gt;address&lt;/em&gt; is as in the constructor of &lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt;&lt;code&gt;IPv6Network&lt;/code&gt;&lt;/a&gt;, except that arbitrary host addresses are always accepted.</source>
          <target state="translated">构造一个IPv6接口。&lt;em&gt;地址&lt;/em&gt;的含义与&lt;a href=&quot;#ipaddress.IPv6Network&quot;&gt; &lt;code&gt;IPv6Network&lt;/code&gt; &lt;/a&gt;的构造函数相同，只是始终接受任意主机地址。</target>
        </trans-unit>
        <trans-unit id="dcf003c3b90de9f569fe3c885effa28d65dc998a" translate="yes" xml:space="preserve">
          <source>Construct an IPv6 network definition. &lt;em&gt;address&lt;/em&gt; can be one of the following:</source>
          <target state="translated">构造一个IPv6网络定义。&lt;em&gt;地址&lt;/em&gt;可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="a72405125d83e1d89b59e520ac689211b626beb7" translate="yes" xml:space="preserve">
          <source>Construct an iterator from those elements of &lt;em&gt;iterable&lt;/em&gt; for which &lt;em&gt;function&lt;/em&gt; returns true. &lt;em&gt;iterable&lt;/em&gt; may be either a sequence, a container which supports iteration, or an iterator. If &lt;em&gt;function&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the identity function is assumed, that is, all elements of &lt;em&gt;iterable&lt;/em&gt; that are false are removed.</source>
          <target state="translated">从这些&lt;em&gt;iterable&lt;/em&gt;元素构造一个迭代器，为其&lt;em&gt;功能&lt;/em&gt;返回true。&lt;em&gt;iterable&lt;/em&gt;可以是序列，支持迭代的容器或迭代器。如果&lt;em&gt;function&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则假定身份函数，即，删除所有false 的&lt;em&gt;iterable&lt;/em&gt;元素。</target>
        </trans-unit>
        <trans-unit id="2df28f6d11a4eedaf7a268857f0a005f2aa2c6e6" translate="yes" xml:space="preserve">
          <source>Construct and return a class to handle creating a &lt;em&gt;name&lt;/em&gt; header.</source>
          <target state="translated">构造并返回一个类来处理创建&lt;em&gt;名称&lt;/em&gt;标头。</target>
        </trans-unit>
        <trans-unit id="20a61ecd7b21a2c2e37d1144cc5b711e3931eef3" translate="yes" xml:space="preserve">
          <source>Constructor arguments should be passed as keyword arguments only. &lt;em&gt;blocked_domains&lt;/em&gt; is a sequence of domain names that we never accept cookies from, nor return cookies to. &lt;em&gt;allowed_domains&lt;/em&gt; if not &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, this is a sequence of the only domains for which we accept and return cookies. &lt;em&gt;secure_protocols&lt;/em&gt; is a sequence of protocols for which secure cookies can be added to. By default &lt;em&gt;https&lt;/em&gt; and &lt;em&gt;wss&lt;/em&gt; (secure websocket) are considered secure protocols. For all other arguments, see the documentation for &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt;&lt;code&gt;DefaultCookiePolicy&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">构造函数参数只能作为关键字参数传递。&lt;em&gt;blocked_domains&lt;/em&gt;是一系列域名，我们从不接受cookie，也不向其返回cookie。&lt;em&gt;allowed_domains（&lt;/em&gt;如果不是&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; )&lt;/a&gt;，这是我们接受并返回cookie的唯一域的序列。&lt;em&gt;secure_protocols&lt;/em&gt;是可以向其添加安全cookie的一系列协议。默认情况下，&lt;em&gt;https&lt;/em&gt;和&lt;em&gt;wss&lt;/em&gt;（安全websocket）被视为安全协议。有关其他所有参数，请参见&lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#http.cookiejar.DefaultCookiePolicy&quot;&gt; &lt;code&gt;DefaultCookiePolicy&lt;/code&gt; &lt;/a&gt;对象的文档。</target>
        </trans-unit>
        <trans-unit id="4f3bf56e6939c72fbfd140f84c915e6346fc670a" translate="yes" xml:space="preserve">
          <source>Constructor for a</source>
          <target state="translated">的构造函数。</target>
        </trans-unit>
        <trans-unit id="28efd605facf2d7d84fc45a32cd1f0fab1dd91ff" translate="yes" xml:space="preserve">
          <source>Constructor for a &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;实例的构造函数。</target>
        </trans-unit>
        <trans-unit id="a4ff7779d24149ce2570f7e9caa7a262f7384f39" translate="yes" xml:space="preserve">
          <source>Constructor for a &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;实例的构造函数。</target>
        </trans-unit>
        <trans-unit id="f359b980d6c4665d81be61bf16c70045857ce60d" translate="yes" xml:space="preserve">
          <source>Constructor for a priority queue. &lt;em&gt;maxsize&lt;/em&gt; is an integer that sets the upperbound limit on the number of items that can be placed in the queue. Insertion will block once this size has been reached, until queue items are consumed. If &lt;em&gt;maxsize&lt;/em&gt; is less than or equal to zero, the queue size is infinite.</source>
          <target state="translated">优先级队列的构造函数。&lt;em&gt;maxsize&lt;/em&gt;是一个整数，用于设置可以放入队列中的项目数的上限。一旦达到此大小，插入将被阻塞，直到消耗队列项目为止。如果&lt;em&gt;maxsize&lt;/em&gt;小于或等于零，则队列大小为无限。</target>
        </trans-unit>
        <trans-unit id="227f22345cb0ec17d03554f24d183cd7e81bc8b8" translate="yes" xml:space="preserve">
          <source>Constructor for an &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; &lt;/a&gt;实例的构造函数。</target>
        </trans-unit>
        <trans-unit id="fdc6ac638d1092a5062ed70f81c6856279e96c8d" translate="yes" xml:space="preserve">
          <source>Constructor for an &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; &lt;/a&gt;实例的构造函数。</target>
        </trans-unit>
        <trans-unit id="f2578ef9b53c0673fee55ed44b0e07eaaff622ef" translate="yes" xml:space="preserve">
          <source>Constructor for an unbounded</source>
          <target state="translated">构造一个无限制的</target>
        </trans-unit>
        <trans-unit id="4c6a104e78aec776d285729309e0f1d3c43eb73f" translate="yes" xml:space="preserve">
          <source>Constructor for the &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; class, which simulates most of the methods of a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, with the exception of the &lt;code&gt;truncate()&lt;/code&gt; method. At least one of &lt;em&gt;fileobj&lt;/em&gt; and &lt;em&gt;filename&lt;/em&gt; must be given a non-trivial value.</source>
          <target state="translated">&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;类的构造方法，该类模拟&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象的&lt;/a&gt;大多数方法，但 &lt;code&gt;truncate()&lt;/code&gt; 方法除外。必须给&lt;em&gt;fileobj&lt;/em&gt;和&lt;em&gt;filename&lt;/em&gt;至少一个非平凡的值。</target>
        </trans-unit>
        <trans-unit id="25489edf6a63b92ca41d043ae49e18013cd94367" translate="yes" xml:space="preserve">
          <source>Constructor for the &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; class, which simulates most of the methods of a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, with the exception of the &lt;code&gt;truncate()&lt;/code&gt; method. At least one of &lt;em&gt;fileobj&lt;/em&gt; and &lt;em&gt;filename&lt;/em&gt; must be given a non-trivial value.</source>
          <target state="translated">&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;类的构造方法，该类模拟&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;文件对象的&lt;/a&gt;大多数方法，但 &lt;code&gt;truncate()&lt;/code&gt; 方法除外。必须给&lt;em&gt;fileobj&lt;/em&gt;和&lt;em&gt;filename&lt;/em&gt;至少一个非平凡的值。</target>
        </trans-unit>
        <trans-unit id="20dee1594dd4f14da9ec57a1a5e5c251fd2f387e" translate="yes" xml:space="preserve">
          <source>Constructor functions also accept the following tree hashing parameters:</source>
          <target state="translated">构造函数还接受以下树形哈希参数。</target>
        </trans-unit>
        <trans-unit id="9d905486f8434a8a2221b1d75e07f65182a417d7" translate="yes" xml:space="preserve">
          <source>Constructor:</source>
          <target state="translated">Constructor:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
