<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="7b6323f0d9a01c8bacf864cdae4d5a57325ea708" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TYPEDESC&lt;/code&gt; structure describes a COM data type, the &lt;code&gt;vt&lt;/code&gt; field specifies which one of the union fields is valid. Since the &lt;code&gt;u&lt;/code&gt; field is defined as anonymous field, it is now possible to access the members directly off the TYPEDESC instance. &lt;code&gt;td.lptdesc&lt;/code&gt; and &lt;code&gt;td.u.lptdesc&lt;/code&gt; are equivalent, but the former is faster since it does not need to create a temporary union instance:</source>
          <target state="translated">该 &lt;code&gt;TYPEDESC&lt;/code&gt; 结构描述了COM数据类型时， &lt;code&gt;vt&lt;/code&gt; 字段指定了将联字段之一是有效的。由于 &lt;code&gt;u&lt;/code&gt; 字段被定义为匿名字段，因此现在可以直接从TYPEDESC实例访问成员。 &lt;code&gt;td.lptdesc&lt;/code&gt; 和 &lt;code&gt;td.u.lptdesc&lt;/code&gt; 是等效的，但是前者更快，因为它不需要创建临时的联合实例：</target>
        </trans-unit>
        <trans-unit id="f9ea1769001491fd452c7e549a3da58d9eb40808" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Text&lt;/code&gt; interface represents text in the XML document. If the parser and DOM implementation support the DOM&amp;rsquo;s XML extension, portions of the text enclosed in CDATA marked sections are stored in &lt;code&gt;CDATASection&lt;/code&gt; objects. These two interfaces are identical, but provide different values for the &lt;code&gt;nodeType&lt;/code&gt; attribute.</source>
          <target state="translated">该 &lt;code&gt;Text&lt;/code&gt; 接口表示XML文档中的文本。如果解析器和DOM实现支持DOM的XML扩展，则CDATA标记的部分中包含的部分文本存储在 &lt;code&gt;CDATASection&lt;/code&gt; 对象中。这两个接口是相同的，但是为 &lt;code&gt;nodeType&lt;/code&gt; 属性提供了不同的值。</target>
        </trans-unit>
        <trans-unit id="f68d9bca14cc73a34996c6d88e3f294d7d02e0fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Widget&lt;/code&gt; class is not meant to be instantiated, it is meant only for subclassing to make &amp;ldquo;real&amp;rdquo; widgets (in C++, this is called an &amp;lsquo;abstract class&amp;rsquo;).</source>
          <target state="translated">该 &lt;code&gt;Widget&lt;/code&gt; 类并不意味着被实例化，是指只对继承，使&amp;ldquo;真正的&amp;rdquo;小部件（在C ++中，这被称为&amp;ldquo;抽象类&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="f76119f7d7f5e51e9e7e80db6ae0a81257e77f86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ZoneInfo&lt;/code&gt; class</source>
          <target state="translated">该 &lt;code&gt;ZoneInfo&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="f0af7465a1375f42314411b1bd986ddad20382bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ZoneInfo&lt;/code&gt; class has two alternate constructors:</source>
          <target state="translated">的 &lt;code&gt;ZoneInfo&lt;/code&gt; 类有两个交替的构造：</target>
        </trans-unit>
        <trans-unit id="38965a523959d58e24f76d990939a62ffc58dd68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__bool__()&lt;/code&gt; method of this class defers to this function, so instead of:</source>
          <target state="translated">所述 &lt;code&gt;__bool__()&lt;/code&gt; 这类按照这一功能的方法，所以不是：</target>
        </trans-unit>
        <trans-unit id="d2a297f57cd1bc861efed1e813b4b8a2f8061b73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__call__&lt;/code&gt; method may perform arbitrary actions, but will typically set attributes on the &lt;code&gt;namespace&lt;/code&gt; based on &lt;code&gt;dest&lt;/code&gt; and &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;__call__&lt;/code&gt; 方法可以执行任意的动作，但在通常设置的属性 &lt;code&gt;namespace&lt;/code&gt; 基于 &lt;code&gt;dest&lt;/code&gt; 和 &lt;code&gt;values&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc938070d6c39bccc58652b25fa0b1e1af788ab6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__main__&lt;/code&gt; module must be importable by worker subprocesses. This means that &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt; will not work in the interactive interpreter.</source>
          <target state="translated">在 &lt;code&gt;__main__&lt;/code&gt; 模块必须由工人子过程可导入。这意味着&lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; &lt;/a&gt;将无法在交互式解释器中工作。</target>
        </trans-unit>
        <trans-unit id="af193d5902a95c55c4324893e16623ef88c8dc8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__members__&lt;/code&gt; attribute can be used for detailed programmatic access to the enumeration members. For example, finding all the aliases:</source>
          <target state="translated">所述 &lt;code&gt;__members__&lt;/code&gt; 属性可用于详述编程访问的枚举成员。例如，找到所有别名：</target>
        </trans-unit>
        <trans-unit id="a87425a1104799def71154528dfd19ddddcfb54d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__name__&lt;/code&gt; attribute of generators is now set from the function name, instead of the code name, and it can now be modified.</source>
          <target state="translated">现在，可以从函数名称（而不是代码名称）中设置generators 的 &lt;code&gt;__name__&lt;/code&gt; 属性，并且可以对其进行修改。</target>
        </trans-unit>
        <trans-unit id="6f0dcd079a594f43bb2a22125cfba03fcfd4cb33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__suppress_context__&lt;/code&gt; value from the original exception.</source>
          <target state="translated">原始异常中的 &lt;code&gt;__suppress_context__&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="5d801a750836e869dfde19f6b1c7b5d15dae6ac6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_generate_next_value_()&lt;/code&gt; method must be defined before any members.</source>
          <target state="translated">所述 &lt;code&gt;_generate_next_value_()&lt;/code&gt; 方法必须任何成员之前定义。</target>
        </trans-unit>
        <trans-unit id="9122ae2607633af14a0a527e56d351f46a1f76a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;args&lt;/code&gt; entry, when &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;uated in the context of the &lt;code&gt;logging&lt;/code&gt; package&amp;rsquo;s namespace, is the list of arguments to the constructor for the handler class. Refer to the constructors for the relevant handlers, or to the examples below, to see how typical entries are constructed. If not provided, it defaults to &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;args&lt;/code&gt; 条目时&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;在的情况下uated &lt;code&gt;logging&lt;/code&gt; 包的命名空间，是参数的构造函数处理程序类的列表。请参考相关处理程序的构造函数，或参考以下示例，以了解如何构造典型条目。如果未提供，则默认为 &lt;code&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b936e943ecfcd201f6a825fee01f91c8aca05480" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;asyncio&lt;/code&gt; subprocess API does not support decoding the streams as text. &lt;a href=&quot;stdtypes#bytes.decode&quot;&gt;&lt;code&gt;bytes.decode()&lt;/code&gt;&lt;/a&gt; can be used to convert the bytes returned from the stream to text.</source>
          <target state="translated">该 &lt;code&gt;asyncio&lt;/code&gt; 子API不支持流作为文本解码。&lt;a href=&quot;stdtypes#bytes.decode&quot;&gt; &lt;code&gt;bytes.decode()&lt;/code&gt; &lt;/a&gt;可用于将流返回的字节转换为文本。</target>
        </trans-unit>
        <trans-unit id="c5d7f93d05e067d985113c87a6fa6e68ff758987" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; statements.</source>
          <target state="translated">在 &lt;code&gt;break&lt;/code&gt; 和 &lt;code&gt;continue&lt;/code&gt; 陈述。</target>
        </trans-unit>
        <trans-unit id="ec504929a2fb2ce3901b05f7e84e725f7539dce7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;call&lt;/code&gt; objects in &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;Mock.call_args&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;Mock.call_args_list&lt;/code&gt;&lt;/a&gt; are two-tuples of (positional args, keyword args) whereas the &lt;code&gt;call&lt;/code&gt; objects in &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;Mock.mock_calls&lt;/code&gt;&lt;/a&gt;, along with ones you construct yourself, are three-tuples of (name, positional args, keyword args).</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt; &lt;code&gt;Mock.call_args&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;Mock.call_args_list&lt;/code&gt; &lt;/a&gt;中的 &lt;code&gt;call&lt;/code&gt; 对象是（位置args，关键字args）的二元组，而&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;Mock.mock_calls&lt;/code&gt; 中&lt;/a&gt;的 &lt;code&gt;call&lt;/code&gt; 对象以及您自己构造的对象是（名称，位置args，关键字args）。</target>
        </trans-unit>
        <trans-unit id="f0095fb07694807b7d7160a1ed193f2c7fb50cbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class&lt;/code&gt; entry indicates the handler&amp;rsquo;s class (as determined by &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;logging&lt;/code&gt; package&amp;rsquo;s namespace). The &lt;code&gt;level&lt;/code&gt; is interpreted as for loggers, and &lt;code&gt;NOTSET&lt;/code&gt; is taken to mean &amp;lsquo;log everything&amp;rsquo;.</source>
          <target state="translated">本 &lt;code&gt;class&lt;/code&gt; 条目指示处理程序的类（如由确定&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;logging&lt;/code&gt; 包的命名空间）。该 &lt;code&gt;level&lt;/code&gt; 被解释为适用于记录器，并且 &lt;code&gt;NOTSET&lt;/code&gt; 表示&amp;ldquo;记录所有内容&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3b8f7bfa816dd3504e8292223adda9c4361b672f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class&lt;/code&gt; entry is optional. It indicates the name of the formatter&amp;rsquo;s class (as a dotted module and class name.) This option is useful for instantiating a &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; subclass. Subclasses of &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; can present exception tracebacks in an expanded or condensed format.</source>
          <target state="translated">本 &lt;code&gt;class&lt;/code&gt; 条目是可选的。它指示格式化程序的类的名称（作为点缀的模块和类名。）此选项对于实例化&lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;子类很有用。&lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; 的&lt;/a&gt;子类可以扩展或压缩格式显示异常回溯。</target>
        </trans-unit>
        <trans-unit id="61ec22605f4896ed5a3fbb6991cb3daa62a8dc30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close()&lt;/code&gt; method is not implemented, &lt;a href=&quot;#contextlib.AsyncExitStack.aclose&quot;&gt;&lt;code&gt;aclose()&lt;/code&gt;&lt;/a&gt; must be used instead.</source>
          <target state="translated">的 &lt;code&gt;close()&lt;/code&gt; 方法未实现，&lt;a href=&quot;#contextlib.AsyncExitStack.aclose&quot;&gt; &lt;code&gt;aclose()&lt;/code&gt; &lt;/a&gt;必须被代替使用。</target>
        </trans-unit>
        <trans-unit id="baf71b295297eb68de3b61fbcfcaf38f3dced956" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the subprocess exited successfully, or the subprocess&amp;rsquo;s return code if there was an error. On POSIX systems, if the return code is positive it represents the return value of the process left-shifted by one byte. If the return code is negative, the process was terminated by the signal given by the negated value of the return code. (For example, the return value might be &lt;code&gt;- signal.SIGKILL&lt;/code&gt; if the subprocess was killed.) On Windows systems, the return value contains the signed integer return code from the child process.</source>
          <target state="translated">该 &lt;code&gt;close&lt;/code&gt; 方法返回&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;如果子进程成功退出，或者子过程的返回码，如果有一个错误。在POSIX系统上，如果返回码为正，则表示该进程的返回值左移一个字节。如果返回码为负，则过程由返回码的取反值给出的信号终止。 （例如，如果子进程被 &lt;code&gt;- signal.SIGKILL&lt;/code&gt; ，则返回值可能是-signal.SIGKILL。）在Windows系统上，返回值包含子进程的带符号整数返回码。</target>
        </trans-unit>
        <trans-unit id="f3738771cfde745973ee9e9e6e59d483c5c69d30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;code&lt;/code&gt; module provides facilities to implement read-eval-print loops in Python. Two classes and convenience functions are included which can be used to build applications which provide an interactive interpreter prompt.</source>
          <target state="translated">该 &lt;code&gt;code&lt;/code&gt; 模块，提供设施，以实现在Python阅读-EVAL-打印循环。包括两个类和便利功能，可用于构建提供交互式解释器提示的应用程序。</target>
        </trans-unit>
        <trans-unit id="c6f8a5f6cdeeb43455302373902fc6f690cfea1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;colon&lt;/code&gt; attribute may also be set on a per-instance basis.</source>
          <target state="translated">在 &lt;code&gt;colon&lt;/code&gt; 属性也可以在每个实例的基础上设置。</target>
        </trans-unit>
        <trans-unit id="7fa8bb90452b238e4231410cf712c3c51172e7e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;concurrent&lt;/code&gt; package</source>
          <target state="translated">在 &lt;code&gt;concurrent&lt;/code&gt; 包</target>
        </trans-unit>
        <trans-unit id="47958b98a21f02493afe011d1fe7fd47b89e4221" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;const&lt;/code&gt; argument of &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt; is used to hold constant values that are not read from the command line but are required for the various &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; actions. The two most common uses of it are:</source>
          <target state="translated">&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;const&lt;/code&gt; 参数用于保存常量值，该值不是从命令行读取的，而是各种&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;操作所必需的。它的两个最常见的用途是：</target>
        </trans-unit>
        <trans-unit id="1c1a6767fe12e172b4870adf50fb52b7ad98ffb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; method of the &lt;a href=&quot;#venv.EnvBuilder&quot;&gt;&lt;code&gt;EnvBuilder&lt;/code&gt;&lt;/a&gt; class illustrates the hooks available for subclass customization:</source>
          <target state="translated">&lt;a href=&quot;#venv.EnvBuilder&quot;&gt; &lt;code&gt;EnvBuilder&lt;/code&gt; &lt;/a&gt;类的 &lt;code&gt;create&lt;/code&gt; 方法说明了可用于子类定制的钩子：</target>
        </trans-unit>
        <trans-unit id="2d03fa71ebb6e231d59aa9390e871246c5344d6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ctypes.util&lt;/code&gt; module provides a function which can help to determine the library to load.</source>
          <target state="translated">该 &lt;code&gt;ctypes.util&lt;/code&gt; 模块提供了一个功能，它可以帮助确定库负载。</target>
        </trans-unit>
        <trans-unit id="7496909f52e59e234f12e33f691492d0ff1051aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ctypes.wintypes&lt;/code&gt; module provides quite some other Windows specific data types, for example &lt;code&gt;HWND&lt;/code&gt;, &lt;code&gt;WPARAM&lt;/code&gt;, or &lt;code&gt;DWORD&lt;/code&gt;. Some useful structures like &lt;code&gt;MSG&lt;/code&gt; or &lt;code&gt;RECT&lt;/code&gt; are also defined.</source>
          <target state="translated">该 &lt;code&gt;ctypes.wintypes&lt;/code&gt; 模块提供了相当长的一段其他Windows特定的数据类型，例如 &lt;code&gt;HWND&lt;/code&gt; ， &lt;code&gt;WPARAM&lt;/code&gt; ，或 &lt;code&gt;DWORD&lt;/code&gt; 。还定义了一些有用的结构，例如 &lt;code&gt;MSG&lt;/code&gt; 或 &lt;code&gt;RECT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4762e5a3dafdaba2c58c248e6d2ff0abbc78c9e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decoded&lt;/code&gt; value of the header is determined by formatting the &lt;code&gt;datetime&lt;/code&gt; according to the &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; rules; that is, it is set to:</source>
          <target state="translated">标头的 &lt;code&gt;decoded&lt;/code&gt; 值是通过根据&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;规则格式化 &lt;code&gt;datetime&lt;/code&gt; 来确定的；也就是说，它设置为：&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0bf7c8f5ef57293f4a035c7235afdf736241c388" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decoded&lt;/code&gt; value of the header will have all encoded words decoded to unicode. &lt;a href=&quot;codecs#module-encodings.idna&quot;&gt;&lt;code&gt;idna&lt;/code&gt;&lt;/a&gt; encoded domain names are also decoded to unicode. The &lt;code&gt;decoded&lt;/code&gt; value is set by &lt;a href=&quot;stdtypes#str.join&quot;&gt;&lt;code&gt;join&lt;/code&gt;&lt;/a&gt;ing the &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; value of the elements of the &lt;code&gt;groups&lt;/code&gt; attribute with &lt;code&gt;',
'&lt;/code&gt;.</source>
          <target state="translated">标头的 &lt;code&gt;decoded&lt;/code&gt; 值会将所有编码字解码为unicode。&lt;a href=&quot;codecs#module-encodings.idna&quot;&gt; &lt;code&gt;idna&lt;/code&gt; &lt;/a&gt;编码的域名也被解码为unicode。的 &lt;code&gt;decoded&lt;/code&gt; 值设置通过&lt;a href=&quot;stdtypes#str.join&quot;&gt; &lt;code&gt;join&lt;/code&gt; &lt;/a&gt;荷兰国际集团的&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;的的元素的值 &lt;code&gt;groups&lt;/code&gt; 与属性 &lt;code&gt;', '&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3869f5fd68f571b36a23c4e50f6ef01300c04746" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defusedxml&lt;/code&gt; Package</source>
          <target state="translated">该 &lt;code&gt;defusedxml&lt;/code&gt; 包</target>
        </trans-unit>
        <trans-unit id="1fa89fca3d85626b155af4cfba20357d4cc96830" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defusedxml&lt;/code&gt; and &lt;code&gt;defusedexpat&lt;/code&gt; Packages</source>
          <target state="translated">该 &lt;code&gt;defusedxml&lt;/code&gt; 和 &lt;code&gt;defusedexpat&lt;/code&gt; 包</target>
        </trans-unit>
        <trans-unit id="dfc2ee4946a057f25375d575b48219960fa9f49b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dircmp&lt;/code&gt; class</source>
          <target state="translated">该 &lt;code&gt;dircmp&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="8ffc245c6775a61d7871af9ec0f8704fe5eef1cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;discover&lt;/code&gt; sub-command has the following options:</source>
          <target state="translated">在 &lt;code&gt;discover&lt;/code&gt; 子命令具有以下选项：</target>
        </trans-unit>
        <trans-unit id="648875dd3e0111333c4afffc1af11bfc7a4a6c31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;display_name&lt;/code&gt; of the group. If it is &lt;code&gt;None&lt;/code&gt; and there is exactly one &lt;code&gt;Address&lt;/code&gt; in &lt;code&gt;addresses&lt;/code&gt;, then the &lt;code&gt;Group&lt;/code&gt; represents a single address that is not in a group.</source>
          <target state="translated">组的 &lt;code&gt;display_name&lt;/code&gt; 。如果是 &lt;code&gt;None&lt;/code&gt; 并且恰好有一个 &lt;code&gt;Address&lt;/code&gt; 的 &lt;code&gt;addresses&lt;/code&gt; ，然后将 &lt;code&gt;Group&lt;/code&gt; 代表一个地址，是不是一组。</target>
        </trans-unit>
        <trans-unit id="b7b171073f1958b4ddf2620702c25cb5e7487c86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;do_GET()&lt;/code&gt; and &lt;code&gt;do_HEAD()&lt;/code&gt; functions are modified to run CGI scripts and serve the output, instead of serving files, if the request leads to somewhere below the &lt;code&gt;cgi_directories&lt;/code&gt; path.</source>
          <target state="translated">该 &lt;code&gt;do_GET()&lt;/code&gt; 和 &lt;code&gt;do_HEAD()&lt;/code&gt; 函数被修改为运行CGI脚本和服务输出，而不是服务文件，如果该请求导致下面的地方 &lt;code&gt;cgi_directories&lt;/code&gt; 路径。</target>
        </trans-unit>
        <trans-unit id="c3677fc05242ea4075af857b2c902b5aceeacc42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;domain&lt;/code&gt; portion of the address.</source>
          <target state="translated">地址的 &lt;code&gt;domain&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="705f2d3bcf70b0357b08a41f5d6b8adc484dd65b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entry_points()&lt;/code&gt; function returns a dictionary of all entry points, keyed by group. Entry points are represented by &lt;code&gt;EntryPoint&lt;/code&gt; instances; each &lt;code&gt;EntryPoint&lt;/code&gt; has a &lt;code&gt;.name&lt;/code&gt;, &lt;code&gt;.group&lt;/code&gt;, and &lt;code&gt;.value&lt;/code&gt; attributes and a &lt;code&gt;.load()&lt;/code&gt; method to resolve the value.</source>
          <target state="translated">该 &lt;code&gt;entry_points()&lt;/code&gt; 函数返回的所有入口点的字典，按组键。入口点由 &lt;code&gt;EntryPoint&lt;/code&gt; 实例表示；每个 &lt;code&gt;EntryPoint&lt;/code&gt; 都有一个 &lt;code&gt;.name&lt;/code&gt; ， &lt;code&gt;.group&lt;/code&gt; 和 &lt;code&gt;.value&lt;/code&gt; 属性以及一个 &lt;code&gt;.load()&lt;/code&gt; 方法来解析该值。</target>
        </trans-unit>
        <trans-unit id="4d7abc5df7386f19020e2b09081108666a375618" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entry_points()&lt;/code&gt; function returns a dictionary of all entry points, keyed by group. Entry points are represented by &lt;code&gt;EntryPoint&lt;/code&gt; instances; each &lt;code&gt;EntryPoint&lt;/code&gt; has a &lt;code&gt;.name&lt;/code&gt;, &lt;code&gt;.group&lt;/code&gt;, and &lt;code&gt;.value&lt;/code&gt; attributes and a &lt;code&gt;.load()&lt;/code&gt; method to resolve the value. There are also &lt;code&gt;.module&lt;/code&gt;, &lt;code&gt;.attr&lt;/code&gt;, and &lt;code&gt;.extras&lt;/code&gt; attributes for getting the components of the &lt;code&gt;.value&lt;/code&gt; attribute:</source>
          <target state="translated">该 &lt;code&gt;entry_points()&lt;/code&gt; 函数返回的所有入口点的字典，按组键。入口点由 &lt;code&gt;EntryPoint&lt;/code&gt; 实例表示；每个 &lt;code&gt;EntryPoint&lt;/code&gt; 都有一个 &lt;code&gt;.name&lt;/code&gt; ， &lt;code&gt;.group&lt;/code&gt; 和 &lt;code&gt;.value&lt;/code&gt; 属性以及一个 &lt;code&gt;.load()&lt;/code&gt; 方法来解析该值。还有 &lt;code&gt;.module&lt;/code&gt; ， &lt;code&gt;.attr&lt;/code&gt; 和 &lt;code&gt;.extras&lt;/code&gt; 属性，用于获取 &lt;code&gt;.value&lt;/code&gt; 属性的组件：</target>
        </trans-unit>
        <trans-unit id="470247d84f91b5ace4b798cb71b48d89f4faa7c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;errors&lt;/code&gt; module has the following attributes:</source>
          <target state="translated">该 &lt;code&gt;errors&lt;/code&gt; 模块具有以下特性：</target>
        </trans-unit>
        <trans-unit id="9b83f601ca71c62648a67d0ae21f05a3c4105c9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;finalize&lt;/code&gt; method can return any of the types supported by SQLite: bytes, str, int, float and &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;finalize&lt;/code&gt; 方法可以返回任何通过SQLite的支持的类型的：字节，STR，整数，浮点和 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27b6f5afd09e8d42f8ef61e3e33d7e1326356e9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find*()&lt;/code&gt; routines might look a bit funny at first sight. They are primarily meant to do echo cancellation. A reasonably fast way to do this is to pick the most energetic piece of the output sample, locate that in the input sample and subtract the whole output sample from the input sample:</source>
          <target state="translated">乍看之下， &lt;code&gt;find*()&lt;/code&gt; 例程可能看起来有些可笑。它们主要是为了进行回声消除。一种合理的快速方法是从输出样本中选取能量最高的片段，将其放置在输入样本中，然后从输入样本中减去整个输出样本：</target>
        </trans-unit>
        <trans-unit id="cabfb6998c66a156b607518aa9258a73d1121858" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt; entry is the overall format string, and the &lt;code&gt;datefmt&lt;/code&gt; entry is the &lt;code&gt;strftime()&lt;/code&gt;-compatible date/time format string. If empty, the package substitutes something which is almost equivalent to specifying the date format string &lt;code&gt;'%Y-%m-%d %H:%M:%S'&lt;/code&gt;. This format also specifies milliseconds, which are appended to the result of using the above format string, with a comma separator. An example time in this format is &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;format&lt;/code&gt; 项是全盘格式化字符串， &lt;code&gt;datefmt&lt;/code&gt; 项是 &lt;code&gt;strftime()&lt;/code&gt; 兼容的日期/时间格式字符串。如果为空，则该软件包将替换几乎等同于指定日期格式字符串 &lt;code&gt;'%Y-%m-%d %H:%M:%S'&lt;/code&gt; 。此格式还指定毫秒，并使用逗号分隔符将其附加到使用上述格式字符串的结果中。此格式的示例时间是 &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17356f2f06eb5423af82d8f66e100cef27b9c151" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formatter&lt;/code&gt; entry indicates the key name of the formatter for this handler. If blank, a default formatter (&lt;code&gt;logging._defaultFormatter&lt;/code&gt;) is used. If a name is specified, it must appear in the &lt;code&gt;[formatters]&lt;/code&gt; section and have a corresponding section in the configuration file.</source>
          <target state="translated">该 &lt;code&gt;formatter&lt;/code&gt; 项指示格式化该处理器的核心名称。如果为空，则使用默认格式化程序（ &lt;code&gt;logging._defaultFormatter&lt;/code&gt; ）。如果指定了名称，则该名称必须出现在 &lt;code&gt;[formatters]&lt;/code&gt; 部分中，并且在配置文件中具有相应的部分。</target>
        </trans-unit>
        <trans-unit id="e965f45c045d1ea3947a47df71b810d8c5eccba9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;formatweekday()&lt;/code&gt; and &lt;code&gt;formatmonthname()&lt;/code&gt; methods of these two classes temporarily change the current locale to the given &lt;em&gt;locale&lt;/em&gt;. Because the current locale is a process-wide setting, they are not thread-safe.</source>
          <target state="translated">这两个类的 &lt;code&gt;formatweekday()&lt;/code&gt; 和 &lt;code&gt;formatmonthname()&lt;/code&gt; 方法将当前语言环境临时更改为给定的&lt;em&gt;语言环境&lt;/em&gt;。因为当前语言环境是进程范围的设置，所以它们不是线程安全的。</target>
        </trans-unit>
        <trans-unit id="f09d559d6b736bafa34f34c899e2feab29c13e26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fromfile_prefix_chars=&lt;/code&gt; argument defaults to &lt;code&gt;None&lt;/code&gt;, meaning that arguments will never be treated as file references.</source>
          <target state="translated">该 &lt;code&gt;fromfile_prefix_chars=&lt;/code&gt; 参数默认为 &lt;code&gt;None&lt;/code&gt; ，这意味着争论将永远不会被当作文件引用。</target>
        </trans-unit>
        <trans-unit id="0bcf5a62d2a2e681c287c6f1f5850707bfd9e6e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;group&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; are arbitrary values defined by the package author and usually a client will wish to resolve all entry points for a particular group. Read &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;the setuptools docs&lt;/a&gt; for more information on entry points, their definition, and usage.</source>
          <target state="translated">该 &lt;code&gt;group&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 是由包作者定义的任意值，通常客户会希望解决所有入口点为特定群体。阅读&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;setuptools文档&lt;/a&gt;，以获取有关入口点，它们的定义和用法的更多信息。</target>
        </trans-unit>
        <trans-unit id="66ce82075ae6e82092c56a7bcf7aa3f519092869" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;group&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; are arbitrary values defined by the package author and usually a client will wish to resolve all entry points for a particular group. Read &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;the setuptools docs&lt;/a&gt; for more information on entrypoints, their definition, and usage.</source>
          <target state="translated">该 &lt;code&gt;group&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 是由包作者定义的任意值，通常客户会希望解决所有入口点为特定群体。阅读&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins&quot;&gt;setuptools文档&lt;/a&gt;，以获取有关入口点，它们的定义和用法的更多信息。</target>
        </trans-unit>
        <trans-unit id="734b8ef87e08eaf3f6a91d381e68a3ec5afe96cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handle_request()&lt;/code&gt; method is called once all relevant input has been marshalled, after setting the channel terminator to &lt;code&gt;None&lt;/code&gt; to ensure that any extraneous data sent by the web client are ignored.</source>
          <target state="translated">将通道终止符设置为 &lt;code&gt;None&lt;/code&gt; 以确保忽略Web客户端发送的任何无关数据后，一旦将所有相关输入整理完毕，就会调用 &lt;code&gt;handle_request()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="cc968396993a8b75be630e29fb2af6f69b3b6185" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handlers&lt;/code&gt; entry is a comma-separated list of handler names, which must appear in the &lt;code&gt;[handlers]&lt;/code&gt; section. These names must appear in the &lt;code&gt;[handlers]&lt;/code&gt; section and have corresponding sections in the configuration file.</source>
          <target state="translated">该 &lt;code&gt;handlers&lt;/code&gt; 条目是一个逗号分隔的处理程序名称，它必须出现在列表 &lt;code&gt;[handlers]&lt;/code&gt; 部分。这些名称必须出现在 &lt;code&gt;[handlers]&lt;/code&gt; 部分中，并在配置文件中具有相应的部分。</target>
        </trans-unit>
        <trans-unit id="d0bdbe8053135d93602cf27febee65acb6f80d92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;help&lt;/code&gt; strings can include various format specifiers to avoid repetition of things like the program name or the argument &lt;a href=&quot;#default&quot;&gt;default&lt;/a&gt;. The available specifiers include the program name, &lt;code&gt;%(prog)s&lt;/code&gt; and most keyword arguments to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;, e.g. &lt;code&gt;%(default)s&lt;/code&gt;, &lt;code&gt;%(type)s&lt;/code&gt;, etc.:</source>
          <target state="translated">该 &lt;code&gt;help&lt;/code&gt; 字符串可以包括各种格式说明，以避免类似事情的程序名称或参数重复&lt;a href=&quot;#default&quot;&gt;默认&lt;/a&gt;。可用的说明符包括程序名称， &lt;code&gt;%(prog)s&lt;/code&gt; 和&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; 的&lt;/a&gt;大多数关键字参数，例如 &lt;code&gt;%(default)s&lt;/code&gt; ， &lt;code&gt;%(type)s&lt;/code&gt; 等：</target>
        </trans-unit>
        <trans-unit id="8376e018657c4b93a09c801a30a071868534e6e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;help&lt;/code&gt; value is a string containing a brief description of the argument. When a user requests help (usually by using &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; at the command line), these &lt;code&gt;help&lt;/code&gt; descriptions will be displayed with each argument:</source>
          <target state="translated">该 &lt;code&gt;help&lt;/code&gt; 值是包含参数的简短说明的字符串。当用户请求帮助时（通常通过在命令行上使用 &lt;code&gt;-h&lt;/code&gt; 或 &lt;code&gt;--help&lt;/code&gt; ），这些 &lt;code&gt;help&lt;/code&gt; 描述将与每个参数一起显示：</target>
        </trans-unit>
        <trans-unit id="e141e9805f4250470f88de20907a8951788930fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;not in&lt;/code&gt; operations have the same priorities as the comparison operations. The &lt;code&gt;+&lt;/code&gt; (concatenation) and &lt;code&gt;*&lt;/code&gt; (repetition) operations have the same priority as the corresponding numeric operations. &lt;a href=&quot;#id14&quot; id=&quot;id4&quot;&gt;3&lt;/a&gt;</source>
          <target state="translated">在 &lt;code&gt;in&lt;/code&gt; 和 &lt;code&gt;not in&lt;/code&gt; 操作具有比较操作相同的优先级。的 &lt;code&gt;+&lt;/code&gt; （串联）和 &lt;code&gt;*&lt;/code&gt; （重复）操作具有相同的优先级对应的数字操作。&lt;a href=&quot;#id14&quot; id=&quot;id4&quot;&gt;3&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0b655cd42857e8528e98d4299eb623e5c52d30d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; parameter sets the name of the zone for the purposes of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt;&lt;code&gt;__str__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;key&lt;/code&gt; 参数设置为区域的目的的名称&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__str__&quot;&gt; &lt;code&gt;__str__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5250a5eeb7f9d4c6ad580919cbbcca70c30999a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;level&lt;/code&gt; and &lt;code&gt;handlers&lt;/code&gt; entries are interpreted as for the root logger, except that if a non-root logger&amp;rsquo;s level is specified as &lt;code&gt;NOTSET&lt;/code&gt;, the system consults loggers higher up the hierarchy to determine the effective level of the logger. The &lt;code&gt;propagate&lt;/code&gt; entry is set to 1 to indicate that messages must propagate to handlers higher up the logger hierarchy from this logger, or 0 to indicate that messages are &lt;strong&gt;not&lt;/strong&gt; propagated to handlers up the hierarchy. The &lt;code&gt;qualname&lt;/code&gt; entry is the hierarchical channel name of the logger, that is to say the name used by the application to get the logger.</source>
          <target state="translated">的 &lt;code&gt;level&lt;/code&gt; 和 &lt;code&gt;handlers&lt;/code&gt; ，如果一个非根记录的电平被指定为条目解释为根记录器，不同之处在于 &lt;code&gt;NOTSET&lt;/code&gt; ，该系统参考记录器更高层次结构向上，以确定记录器的有效电平。的 &lt;code&gt;propagate&lt;/code&gt; 项设置为1，以指示消息必须越往上记录器层次结构传播到处理程序从此记录，或0，以指示消息&lt;strong&gt;不&lt;/strong&gt;传播到处理程序向上的层次结构。该 &lt;code&gt;qualname&lt;/code&gt; 项是记录器，也就是所使用的应用程序，以获得日志名称的分层信道的名称。</target>
        </trans-unit>
        <trans-unit id="a1cc2815c38730b635f4df6ea065b320e9beb19c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;level&lt;/code&gt; entry can be one of &lt;code&gt;DEBUG, INFO, WARNING, ERROR, CRITICAL&lt;/code&gt; or &lt;code&gt;NOTSET&lt;/code&gt;. For the root logger only, &lt;code&gt;NOTSET&lt;/code&gt; means that all messages will be logged. Level values are &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;uated in the context of the &lt;code&gt;logging&lt;/code&gt; package&amp;rsquo;s namespace.</source>
          <target state="translated">该 &lt;code&gt;level&lt;/code&gt; 的条目可以是一个 &lt;code&gt;DEBUG, INFO, WARNING, ERROR, CRITICAL&lt;/code&gt; 或 &lt;code&gt;NOTSET&lt;/code&gt; 。仅对于root记录器， &lt;code&gt;NOTSET&lt;/code&gt; 表示将记录所有消息。级别值在 &lt;code&gt;logging&lt;/code&gt; 程序包名称空间的上下文中使用&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;进行计算。</target>
        </trans-unit>
        <trans-unit id="20549cb4258c041928c1d53bc24856087374a8f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;logical_and()&lt;/code&gt;, &lt;code&gt;logical_invert()&lt;/code&gt;, &lt;code&gt;logical_or()&lt;/code&gt;, and &lt;code&gt;logical_xor()&lt;/code&gt; methods expect their arguments to be &lt;em&gt;logical operands&lt;/em&gt;. A &lt;em&gt;logical operand&lt;/em&gt; is a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance whose exponent and sign are both zero, and whose digits are all either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;logical_and()&lt;/code&gt; ， &lt;code&gt;logical_invert()&lt;/code&gt; ， &lt;code&gt;logical_or()&lt;/code&gt; ，和 &lt;code&gt;logical_xor()&lt;/code&gt; 方法，希望他们的论点是&lt;em&gt;合乎逻辑的操作数&lt;/em&gt;。甲&lt;em&gt;逻辑操作数&lt;/em&gt;是一个&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;实例，其指数和符号均为零，并且其位数是所有或者 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2894cd9ca319bdc7c0ff6fb46276e37f22647d34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; arguments may have been modified or inferred from the original call.</source>
          <target state="translated">该 &lt;code&gt;mode&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 参数可能已被修改或从原来的呼叫推断。</target>
        </trans-unit>
        <trans-unit id="17efeea07dfaa7e18f0e4f49edec6a634a2254b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt; attributes can be set using keyword-only arguments to the constructor. When set they represent the name of the module that was attempted to be imported and the path to any file which triggered the exception, respectively.</source>
          <target state="translated">该 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;path&lt;/code&gt; 属性可以只使用关键字参数的构造函数中设置。设置后，它们分别表示尝试导入的模块的名称以及触发异常的任何文件的路径。</target>
        </trans-unit>
        <trans-unit id="44ec035ffa5b84f633e8a9db377a08d7cf3735fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; is potentially a period-separated hierarchical value, like &lt;code&gt;foo.bar.baz&lt;/code&gt; (though it could also be just plain &lt;code&gt;foo&lt;/code&gt;, for example). Loggers that are further down in the hierarchical list are children of loggers higher up in the list. For example, given a logger with a name of &lt;code&gt;foo&lt;/code&gt;, loggers with names of &lt;code&gt;foo.bar&lt;/code&gt;, &lt;code&gt;foo.bar.baz&lt;/code&gt;, and &lt;code&gt;foo.bam&lt;/code&gt; are all descendants of &lt;code&gt;foo&lt;/code&gt;. The logger name hierarchy is analogous to the Python package hierarchy, and identical to it if you organise your loggers on a per-module basis using the recommended construction &lt;code&gt;logging.getLogger(__name__)&lt;/code&gt;. That&amp;rsquo;s because in a module, &lt;code&gt;__name__&lt;/code&gt; is the module&amp;rsquo;s name in the Python package namespace.</source>
          <target state="translated">该 &lt;code&gt;name&lt;/code&gt; 可能是句点分隔的分层值，例如 &lt;code&gt;foo.bar.baz&lt;/code&gt; （尽管也可以是纯 &lt;code&gt;foo&lt;/code&gt; ）。在层次结构列表中位于最下方的记录器是列表中位于较高位置的记录器的子级。例如，给定名称为 &lt;code&gt;foo&lt;/code&gt; 的记录器，名称为 &lt;code&gt;foo.bar&lt;/code&gt; ， &lt;code&gt;foo.bar.baz&lt;/code&gt; 和 &lt;code&gt;foo.bam&lt;/code&gt; 的记录器都是 &lt;code&gt;foo&lt;/code&gt; 的后代。记录器名称层次结构类似于Python包层次结构，如果您使用建议的构造 &lt;code&gt;logging.getLogger(__name__)&lt;/code&gt; 在每个模块的基础上组织记录器，则记录器名称层次结构与Python包层次结构相同。那是因为在模块中 &lt;code&gt;__name__&lt;/code&gt; 是Python包命名空间中模块的名称。</target>
        </trans-unit>
        <trans-unit id="c463374771af257aa19a3e7470848bbe19caa8c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;p1.stdout.close()&lt;/code&gt; call after starting the p2 is important in order for p1 to receive a SIGPIPE if p2 exits before p1.</source>
          <target state="translated">如果p2在p1之前退出，则启动p2之后的 &lt;code&gt;p1.stdout.close()&lt;/code&gt; 调用很重要，这样p1才能接收SIGPIPE。</target>
        </trans-unit>
        <trans-unit id="6c5afe3f20d08659f0801d09a465c4f246d3ab30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pickle&lt;/code&gt; module &lt;strong&gt;is not secure&lt;/strong&gt;. Only unpickle data you trust.</source>
          <target state="translated">该 &lt;code&gt;pickle&lt;/code&gt; 模块&lt;strong&gt;是不安全的&lt;/strong&gt;。仅释放您信任的数据。</target>
        </trans-unit>
        <trans-unit id="4f25fd4a79428a7a734c8203ffa74cdc9ffac57a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;poll()&lt;/code&gt; system call, supported on most Unix systems, provides better scalability for network servers that service many, many clients at the same time. &lt;code&gt;poll()&lt;/code&gt; scales better because the system call only requires listing the file descriptors of interest, while &lt;code&gt;select()&lt;/code&gt; builds a bitmap, turns on bits for the fds of interest, and then afterward the whole bitmap has to be linearly scanned again. &lt;code&gt;select()&lt;/code&gt; is O(highest file descriptor), while &lt;code&gt;poll()&lt;/code&gt; is O(number of file descriptors).</source>
          <target state="translated">大多数Unix系统上支持的 &lt;code&gt;poll()&lt;/code&gt; 系统调用为同时服务于许多客户端的网络服务器提供了更好的可伸缩性。 &lt;code&gt;poll()&lt;/code&gt; 的伸缩性更好，因为系统调用只需要列出感兴趣的文件描述符，而 &lt;code&gt;select()&lt;/code&gt; 构建位图，打开感兴趣的fds的位，然后再重新线性扫描整个位图。 &lt;code&gt;select()&lt;/code&gt; 是O（最高文件描述符），而 &lt;code&gt;poll()&lt;/code&gt; 是O（文件描述符数量）。</target>
        </trans-unit>
        <trans-unit id="3adfcd2af06573abb2087db55784b60bbc3f041d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;popitem()&lt;/code&gt; method of &lt;a href=&quot;#collections.OrderedDict&quot;&gt;&lt;code&gt;OrderedDict&lt;/code&gt;&lt;/a&gt; has a different signature. It accepts an optional argument to specify which item is popped.</source>
          <target state="translated">&lt;a href=&quot;#collections.OrderedDict&quot;&gt; &lt;code&gt;OrderedDict&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;popitem()&lt;/code&gt; 方法具有不同的签名。它接受一个可选参数来指定要弹出的项目。</target>
        </trans-unit>
        <trans-unit id="f26b175564211cc5d95f4799adf4280e32941448" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix_chars=&lt;/code&gt; argument defaults to &lt;code&gt;'-'&lt;/code&gt;. Supplying a set of characters that does not include &lt;code&gt;-&lt;/code&gt; will cause &lt;code&gt;-f/--foo&lt;/code&gt; options to be disallowed.</source>
          <target state="translated">所述 &lt;code&gt;prefix_chars=&lt;/code&gt; 参数默认为 &lt;code&gt;'-'&lt;/code&gt; 。提供一组不包含 &lt;code&gt;-&lt;/code&gt; 的字符将导致 &lt;code&gt;-f/--foo&lt;/code&gt; 选项被禁止。</target>
        </trans-unit>
        <trans-unit id="6cbc1096c67f757db14d69db3e5c36cba803f269" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pyexpat&lt;/code&gt; module is not secure against maliciously constructed data. If you need to parse untrusted or unauthenticated data see &lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;pyexpat&lt;/code&gt; 模块是不安全的反对恶意构造的数据。如果您需要解析不可信或未经身份验证的数据，请参见&lt;a href=&quot;xml#xml-vulnerabilities&quot;&gt;XML漏洞&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56906a2e6d9db176d17fb2b6647596ea13b54940" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;quantize()&lt;/code&gt; method rounds a number to a fixed exponent. This method is useful for monetary applications that often round results to a fixed number of places:</source>
          <target state="translated">在 &lt;code&gt;quantize()&lt;/code&gt; 方法数字舍入到一个固定的指数。此方法对于经常将结果舍入到固定位数的货币应用程序很有用：</target>
        </trans-unit>
        <trans-unit id="48b01acd0241a2442ff5b4aae7c3e1806b139057" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read()&lt;/code&gt; (when called with a positive argument), &lt;code&gt;readinto()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt; methods on this class will only make one system call.</source>
          <target state="translated">&lt;code&gt;readinto()&lt;/code&gt; 的 &lt;code&gt;read()&lt;/code&gt; （使用正参数调用时），readinto（）和 &lt;code&gt;write()&lt;/code&gt; 方法将仅进行一次系统调用。</target>
        </trans-unit>
        <trans-unit id="56f3c5d9f151c39458862c4187286a2e030ef45f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;register()&lt;/code&gt; attribute returns the undecorated function which enables decorator stacking, pickling, as well as creating unit tests for each variant independently:</source>
          <target state="translated">的 &lt;code&gt;register()&lt;/code&gt; 属性返回未修饰的功能这使得装饰层叠，酸洗，以及创建用于每个变体独立地单元测试：</target>
        </trans-unit>
        <trans-unit id="3dc67ec796044fe79c20baf27688a12b0b165186" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;repr&lt;/code&gt; function is used for interactive echo of expression values. It returns an altered version of the input string in which control codes, some BMP codepoints, and all non-BMP codepoints are replaced with escape codes. As demonstrated above, it allows one to identify the characters in a string, regardless of how they are displayed.</source>
          <target state="translated">的 &lt;code&gt;repr&lt;/code&gt; 功能用于表达值的交互式回声。它返回输入字符串的变更版本，在其中，控制代码，一些BMP代码点和所有非BMP代码点都用转义码替换。如上所述，它允许人们识别字符串中的字符，而不管它们如何显示。</target>
        </trans-unit>
        <trans-unit id="6694efe52e7d12ce180dcca2b71b57be3eda6fae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse()&lt;/code&gt; method modifies the sequence in place for economy of space when reversing a large sequence. To remind users that it operates by side effect, it does not return the reversed sequence.</source>
          <target state="translated">当反转大序列时， &lt;code&gt;reverse()&lt;/code&gt; 方法会修改序列以节省空间。为了提醒用户它是有副作用的，它不会返回相反的顺序。</target>
        </trans-unit>
        <trans-unit id="70d611f664da4872758f6cac2500dc6d64789f50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rfile&lt;/code&gt; attributes of both classes support the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; readable interface, and &lt;code&gt;DatagramRequestHandler.wfile&lt;/code&gt; supports the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; writable interface.</source>
          <target state="translated">这两个类的 &lt;code&gt;rfile&lt;/code&gt; 属性都支持&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;可读接口，而 &lt;code&gt;DatagramRequestHandler.wfile&lt;/code&gt; 支持&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;可写接口。</target>
        </trans-unit>
        <trans-unit id="2e5a1e0c9ba618171130cb7735890718c55a68eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run*&lt;/code&gt; functions and &lt;a href=&quot;#pdb.set_trace&quot;&gt;&lt;code&gt;set_trace()&lt;/code&gt;&lt;/a&gt; are aliases for instantiating the &lt;a href=&quot;#pdb.Pdb&quot;&gt;&lt;code&gt;Pdb&lt;/code&gt;&lt;/a&gt; class and calling the method of the same name. If you want to access further features, you have to do this yourself:</source>
          <target state="translated">该 &lt;code&gt;run*&lt;/code&gt; 功能和&lt;a href=&quot;#pdb.set_trace&quot;&gt; &lt;code&gt;set_trace()&lt;/code&gt; &lt;/a&gt;是实例化别名&lt;a href=&quot;#pdb.Pdb&quot;&gt; &lt;code&gt;Pdb&lt;/code&gt; &lt;/a&gt;类，并调用同名的方法。如果要访问其他功能，则必须自己执行以下操作：</target>
        </trans-unit>
        <trans-unit id="b0c7daa1f0bf95ee399648b399e3569e912a4226" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sentinel&lt;/code&gt; object provides a convenient way of providing unique objects for your tests.</source>
          <target state="translated">该 &lt;code&gt;sentinel&lt;/code&gt; 对象为您的测试提供独特对象的便捷方式。</target>
        </trans-unit>
        <trans-unit id="4f2b8b9e54da55b5343a0feb08a9e06383efbd02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shake_128()&lt;/code&gt; and &lt;code&gt;shake_256()&lt;/code&gt; algorithms provide variable length digests with length_in_bits//2 up to 128 or 256 bits of security. As such, their digest methods require a length. Maximum length is not limited by the SHAKE algorithm.</source>
          <target state="translated">所述 &lt;code&gt;shake_128()&lt;/code&gt; 和 &lt;code&gt;shake_256()&lt;/code&gt; 算法提供可变长度的消化物与length_in_bits // 2到安全的128或256位。因此，它们的摘要方法需要一定长度。最大长度不受SHAKE算法的限制。</target>
        </trans-unit>
        <trans-unit id="2679ce48058db1acf0cd9c304d5a336da90caf62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;side_effect&lt;/code&gt; can also be any iterable object. Repeated calls to the mock will return values from the iterable (until the iterable is exhausted and a &lt;a href=&quot;exceptions#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; is raised):</source>
          <target state="translated">该 &lt;code&gt;side_effect&lt;/code&gt; 也可以是任何可迭代的对象。重复调用该模拟将返回iterable中的值（直到iterable耗尽并引发&lt;a href=&quot;exceptions#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;为止）：</target>
        </trans-unit>
        <trans-unit id="bbc828704026e73a7132d7861c1f6ea3b2c9c718" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sort&lt;/code&gt; command is a variant of &lt;code&gt;search&lt;/code&gt; with sorting semantics for the results. Returned data contains a space separated list of matching message numbers.</source>
          <target state="translated">该 &lt;code&gt;sort&lt;/code&gt; 命令的一个变体 &lt;code&gt;search&lt;/code&gt; 与分类语义的结果。返回的数据包含以空格分隔的匹配消息号列表。</target>
        </trans-unit>
        <trans-unit id="5e876713b1b58ed7e57cd0a3c49de12c593470a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str&lt;/code&gt; value of a &lt;code&gt;Group&lt;/code&gt; is formatted according to &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;, but with no Content Transfer Encoding of any non-ASCII characters. If &lt;code&gt;display_name&lt;/code&gt; is none and there is a single &lt;code&gt;Address&lt;/code&gt; in the &lt;code&gt;addresses&lt;/code&gt; list, the &lt;code&gt;str&lt;/code&gt; value will be the same as the &lt;code&gt;str&lt;/code&gt; of that single &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Group&lt;/code&gt; 的 &lt;code&gt;str&lt;/code&gt; 值是根据&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;格式化的，但没有任何非ASCII字符的Content Transfer Encoding。如果 &lt;code&gt;display_name&lt;/code&gt; 是没有的，有一个单一的 &lt;code&gt;Address&lt;/code&gt; 在 &lt;code&gt;addresses&lt;/code&gt; 列表中的 &lt;code&gt;str&lt;/code&gt; 值将是一样的 &lt;code&gt;str&lt;/code&gt; 是单一的 &lt;code&gt;Address&lt;/code&gt; 。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b50753b2718f1b5d3b1b08f7d48365835500f23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;str&lt;/code&gt; value of the object is the address quoted according to &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; rules, but with no Content Transfer Encoding of any non-ASCII characters.</source>
          <target state="translated">对象的 &lt;code&gt;str&lt;/code&gt; 值是根据&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;规则引用的地址，但没有任何非ASCII字符的内容传输编码。</target>
        </trans-unit>
        <trans-unit id="5863a575332c9bfbc7b8eeb262ad8abeefba260f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strptime()&lt;/code&gt; method can parse years in the full [1, 9999] range, but years &amp;lt; 1000 must be zero-filled to 4-digit width.</source>
          <target state="translated">的 &lt;code&gt;strptime()&lt;/code&gt; 方法可以在全[1，9999]范围解析年，但年&amp;lt;1000必须是零填充到4位的宽度。</target>
        </trans-unit>
        <trans-unit id="f40fa8d24afda44ef7ba1b9017535f589e255937" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subject&lt;/code&gt; and &lt;code&gt;issuer&lt;/code&gt; fields are tuples containing the sequence of relative distinguished names (RDNs) given in the certificate&amp;rsquo;s data structure for the respective fields, and each RDN is a sequence of name-value pairs. Here is a real-world example:</source>
          <target state="translated">的 &lt;code&gt;subject&lt;/code&gt; 和 &lt;code&gt;issuer&lt;/code&gt; 字段是包含在该证书的数据结构给出了各个场相对专有名称（的RDN）的序列的元组，并且每个RDN是名称-值对的序列。这是一个真实的示例：</target>
        </trans-unit>
        <trans-unit id="2194956f69bee54fac6e836086327379d0dac748" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; attribute connot be of class &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.List&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt;, unlike the targets of &lt;a href=&quot;#ast.Assign&quot;&gt;&lt;code&gt;Assign&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;target&lt;/code&gt; 属性是粗野，类的&lt;a href=&quot;#ast.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#ast.List&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;，不同的指标&lt;a href=&quot;#ast.Assign&quot;&gt; &lt;code&gt;Assign&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48bc15cd70ec89240e8c5077ca67cca8ab36280e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thread&lt;/code&gt; command is a variant of &lt;code&gt;search&lt;/code&gt; with threading semantics for the results. Returned data contains a space separated list of thread members.</source>
          <target state="translated">该 &lt;code&gt;thread&lt;/code&gt; 指令的变体 &lt;code&gt;search&lt;/code&gt; 与线程语义的结果。返回的数据包含用空格分隔的线程成员列表。</target>
        </trans-unit>
        <trans-unit id="c5c5ea850cd1efa343ff1614dddf878ebb3ae06f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;to&lt;/code&gt; parameter must be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-sequence&quot;&gt;sequence&lt;/a&gt; of strings or &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt; and not a string, all of which must be absolute paths. &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised if something other than an absolute path is passed.</source>
          <target state="translated">的 &lt;code&gt;to&lt;/code&gt; 参数必须是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-sequence&quot;&gt;序列&lt;/a&gt;串或&lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; &lt;/a&gt;和不是字符串，所有这些都必须是绝对路径。如果传递的不是绝对路径，则将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95c4f2f11ca60f7337a0bd2dddfc357c898cff74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Combobox&lt;/code&gt; widget combines a text field with a pop-down list of values. This widget is a subclass of &lt;code&gt;Entry&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;ttk.Combobox&lt;/code&gt; 控件结合了文本字段值的弹出的下拉列表。此小部件是 &lt;code&gt;Entry&lt;/code&gt; 的子类。</target>
        </trans-unit>
        <trans-unit id="352dd537bd626bd414d868a36dd17e8367456400" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Progressbar&lt;/code&gt; widget shows the status of a long-running operation. It can operate in two modes: 1) the determinate mode which shows the amount completed relative to the total amount of work to be done and 2) the indeterminate mode which provides an animated display to let the user know that work is progressing.</source>
          <target state="translated">该 &lt;code&gt;ttk.Progressbar&lt;/code&gt; 小部件显示一个长时间运行操作的状态。它可以在两种模式下运行：1）确定模式，显示相对于要完成的工作总量的完成数量； 2）不定模式，提供动画显示，以使用户知道工作进度。</target>
        </trans-unit>
        <trans-unit id="251bfa8f490dc70c8808050862bc83c86fb9d1f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Separator&lt;/code&gt; widget displays a horizontal or vertical separator bar.</source>
          <target state="translated">所述 &lt;code&gt;ttk.Separator&lt;/code&gt; 小部件显示的水平或垂直分隔条。</target>
        </trans-unit>
        <trans-unit id="f758b0179e7d65969a79f1e77fd20a0943975f0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Sizegrip&lt;/code&gt; widget (also known as a grow box) allows the user to resize the containing toplevel window by pressing and dragging the grip.</source>
          <target state="translated">所述 &lt;code&gt;ttk.Sizegrip&lt;/code&gt; 微件（也称为成长盒）允许用户通过按下并拖动把手来调整含顶层窗口。</target>
        </trans-unit>
        <trans-unit id="9f7c9dc42acbbb7afe7822de5598582a08914264" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Spinbox&lt;/code&gt; widget is a &lt;code&gt;ttk.Entry&lt;/code&gt; enhanced with increment and decrement arrows. It can be used for numbers or lists of string values. This widget is a subclass of &lt;code&gt;Entry&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;ttk.Spinbox&lt;/code&gt; 小部件是一个 &lt;code&gt;ttk.Entry&lt;/code&gt; 用增量和减量箭头增强。它可以用于数字或字符串值列表。此小部件是 &lt;code&gt;Entry&lt;/code&gt; 的子类。</target>
        </trans-unit>
        <trans-unit id="e6fc76a70719682fd79d2ebe3a3918e54edb387f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ttk.Treeview&lt;/code&gt; widget displays a hierarchical collection of items. Each item has a textual label, an optional image, and an optional list of data values. The data values are displayed in successive columns after the tree label.</source>
          <target state="translated">该 &lt;code&gt;ttk.Treeview&lt;/code&gt; 插件播放项目的分层集合。每个项目都有一个文本标签，一个可选的图像和一个可选的数据值列表。数据值显示在树标签之后的连续列中。</target>
        </trans-unit>
        <trans-unit id="f0e2919d156958c0ab2b6cf34ca6fec36edfad34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;username&lt;/code&gt; portion of the address, with all quoting removed.</source>
          <target state="translated">地址的 &lt;code&gt;username&lt;/code&gt; 部分，所有引号均已删除。</target>
        </trans-unit>
        <trans-unit id="7462f687d399e631ee022aa8a0c1be3259a71d02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;username@domain&lt;/code&gt; portion of the address, correctly quoted for use as a bare address (the second form shown above). This attribute is not mutable.</source>
          <target state="translated">地址的 &lt;code&gt;username@domain&lt;/code&gt; 部分，正确引用以用作裸地址（上面显示的第二种形式）。此属性是不可变的。</target>
        </trans-unit>
        <trans-unit id="1e04165a0b7839d9196d963a9d99b152be548425" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;verify&lt;/code&gt; argument, if specified, should be a callable which should verify whether bytes received across the socket are valid and should be processed. This could be done by encrypting and/or signing what is sent across the socket, such that the &lt;code&gt;verify&lt;/code&gt; callable can perform signature verification and/or decryption. The &lt;code&gt;verify&lt;/code&gt; callable is called with a single argument - the bytes received across the socket - and should return the bytes to be processed, or &lt;code&gt;None&lt;/code&gt; to indicate that the bytes should be discarded. The returned bytes could be the same as the passed in bytes (e.g. when only verification is done), or they could be completely different (perhaps if decryption were performed).</source>
          <target state="translated">的 &lt;code&gt;verify&lt;/code&gt; 参数，如果指定的话，应该是一个可调用哪些应该验证跨过插座接收到的字节是否有效，并应被处理。这可以通过对通过套接字发送的内容进行加密和/或签名来完成，以使可调用的 &lt;code&gt;verify&lt;/code&gt; 可以执行签名验证和/或解密。该 &lt;code&gt;verify&lt;/code&gt; 可调用被称为带一个参数-在各插槽中的接收到的字节-和应返回到被处理的字节数，或 &lt;code&gt;None&lt;/code&gt; 以表明字节应被丢弃。返回的字节可以与传入的字节相同（例如，仅完成验证时），也可以完全不同（例如，如果执行了解密）。</target>
        </trans-unit>
        <trans-unit id="2bfd67854453b9508617bc5ecb87d6bf83b9e2f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version()&lt;/code&gt; function is the quickest way to get a distribution&amp;rsquo;s version number, as a string:</source>
          <target state="translated">该 &lt;code&gt;version()&lt;/code&gt; 函数是获得一个发行版的版本号，作为一个字符串的最快方法：</target>
        </trans-unit>
        <trans-unit id="9457eb2c5daeb61cce915fa460df6791a47eebc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;while&lt;/code&gt; loop checking for the application&amp;rsquo;s condition is necessary because &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; can return after an arbitrary long time, and the condition which prompted the &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; call may no longer hold true. This is inherent to multi-threaded programming. The &lt;a href=&quot;#threading.Condition.wait_for&quot;&gt;&lt;code&gt;wait_for()&lt;/code&gt;&lt;/a&gt; method can be used to automate the condition checking, and eases the computation of timeouts:</source>
          <target state="translated">的 &lt;code&gt;while&lt;/code&gt; 对应用程序的条件循环检查是必要的，因为&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;可以任意长的时间后返回，并促使病情&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;调用可能不再成立。这是多线程编程所固有的。所述&lt;a href=&quot;#threading.Condition.wait_for&quot;&gt; &lt;code&gt;wait_for()&lt;/code&gt; &lt;/a&gt;方法可用于自动执行条件检查，并简化超时的计算：</target>
        </trans-unit>
        <trans-unit id="68b060fff3c4e153991c4ede204ad1db0712fced" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;with&lt;/code&gt; block logs on &lt;em&gt;logger&lt;/em&gt; with minimum &lt;em&gt;level&lt;/em&gt;</source>
          <target state="translated">在 &lt;code&gt;with&lt;/code&gt; 上块记录&lt;em&gt;记录器&lt;/em&gt;以最小的&lt;em&gt;水平&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56866341ae5f26fd967e18a99077bcc3d2af97d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;zoneinfo&lt;/code&gt; module does not directly provide time zone data, and instead pulls time zone information from the system time zone database or the first-party PyPI package &lt;a href=&quot;https://pypi.org/project/tzdata/&quot;&gt;tzdata&lt;/a&gt;, if available. Some systems, including notably Windows systems, do not have an IANA database available, and so for projects targeting cross-platform compatibility that require time zone data, it is recommended to declare a dependency on tzdata. If neither system data nor tzdata are available, all calls to &lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt;&lt;code&gt;ZoneInfo&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;#zoneinfo.ZoneInfoNotFoundError&quot;&gt;&lt;code&gt;ZoneInfoNotFoundError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;zoneinfo&lt;/code&gt; 模块并不直接提供的时区数据，而是拉从系统时区数据库或第一方的PyPI包时区信息&lt;a href=&quot;https://pypi.org/project/tzdata/&quot;&gt;的tzdata&lt;/a&gt;，如果有的话。某些系统，尤其是Windows系统，没有可用的IANA数据库，因此，对于需要跨时区兼容性的项目，需要时区数据，建议声明对tzdata的依赖。如果系统数据和tzdata都不可用，则对&lt;a href=&quot;#zoneinfo.ZoneInfo&quot;&gt; &lt;code&gt;ZoneInfo&lt;/code&gt; 的&lt;/a&gt;所有调用都会引发&lt;a href=&quot;#zoneinfo.ZoneInfoNotFoundError&quot;&gt; &lt;code&gt;ZoneInfoNotFoundError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9356ea9fa5513a007b3e1c50146086929d32ee69" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Content-Length&lt;/em&gt; is treated as a lower bound: if there&amp;rsquo;s more data to read, urlretrieve reads more data, but if less data is available, it raises the exception.</source>
          <target state="translated">该&lt;em&gt;内容长度&lt;/em&gt;被视为一个下界：如果有更多的数据读取，读取urlretrieve更多的数据，但如果较少的数据是可用的，它引发异常。</target>
        </trans-unit>
        <trans-unit id="5c8116d7ade8349a345be3650d95303855936cd6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;DndHandler&lt;/em&gt; class handles drag-and-drop events tracking Motion and ButtonRelease events on the root of the event widget.</source>
          <target state="translated">该&lt;em&gt;DndHandler&lt;/em&gt;类处理拖动和拖放事件追踪运动和ButtonRelease事件在事件窗口小部件的根源。</target>
        </trans-unit>
        <trans-unit id="a0fdb4923aa98d7d944fbee512e9d4d1baf28cd0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Emin&lt;/em&gt; and &lt;em&gt;Emax&lt;/em&gt; fields are integers specifying the outer limits allowable for exponents. &lt;em&gt;Emin&lt;/em&gt; must be in the range [&lt;a href=&quot;#decimal.MIN_EMIN&quot;&gt;&lt;code&gt;MIN_EMIN&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;0&lt;/code&gt;], &lt;em&gt;Emax&lt;/em&gt; in the range [&lt;code&gt;0&lt;/code&gt;, &lt;a href=&quot;#decimal.MAX_EMAX&quot;&gt;&lt;code&gt;MAX_EMAX&lt;/code&gt;&lt;/a&gt;].</source>
          <target state="translated">的&lt;em&gt;额敏&lt;/em&gt;和&lt;em&gt;的Emax&lt;/em&gt;字段是允许指定外部界限为指数的整数。&lt;em&gt;Emin&lt;/em&gt;必须在[ &lt;a href=&quot;#decimal.MIN_EMIN&quot;&gt; &lt;code&gt;MIN_EMIN&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;0&lt;/code&gt; ] 范围内，&lt;em&gt;Emax必须&lt;/em&gt;在[ &lt;code&gt;0&lt;/code&gt; ，&lt;a href=&quot;#decimal.MAX_EMAX&quot;&gt; &lt;code&gt;MAX_EMAX&lt;/code&gt; &lt;/a&gt; ] 范围内。</target>
        </trans-unit>
        <trans-unit id="bace9f7d44c69a04a22a9a85d648d4395af511b9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;FileDialog&lt;/em&gt; class should be subclassed for custom event handling and behaviour.</source>
          <target state="translated">该&lt;em&gt;FileDialog的&lt;/em&gt;类应该被继承自定义事件处理和行为。</target>
        </trans-unit>
        <trans-unit id="099de42faf0f0b2a0cf8ddac8528d10fd5f74ec0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;allow_fragments&lt;/em&gt; argument has the same meaning and default as for &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;allow_fragments&lt;/em&gt;参数具有相同的含义，默认为&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e831ae773ee2dd264b6b78cde7feab2044ba27e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;arg&lt;/em&gt; parameter depends on the previous event.</source>
          <target state="translated">该&lt;em&gt;ARG&lt;/em&gt;参数取决于前面的事件。</target>
        </trans-unit>
        <trans-unit id="e8e08e0c1e7cb5d08ab5c2d641f0e97d0a518bb3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;args&lt;/em&gt; argument as it was passed to &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; &amp;ndash; a sequence of program arguments or else a single string.</source>
          <target state="translated">传递给&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;args&lt;/em&gt;参数-程序参数序列或单个字符串。</target>
        </trans-unit>
        <trans-unit id="1d3a577fd674bcea3227fd720956de76ed22bd4d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;args&lt;/em&gt; argument has the following attributes:</source>
          <target state="translated">该&lt;em&gt;ARGS&lt;/em&gt;参数具有以下属性：</target>
        </trans-unit>
        <trans-unit id="fd13acf025140fb6639151e4ed9a4f868af627a2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;args&lt;/em&gt; parameter is set to the list of positional arguments to &lt;a href=&quot;#string.Formatter.vformat&quot;&gt;&lt;code&gt;vformat()&lt;/code&gt;&lt;/a&gt;, and the &lt;em&gt;kwargs&lt;/em&gt; parameter is set to the dictionary of keyword arguments.</source>
          <target state="translated">所述&lt;em&gt;ARGS&lt;/em&gt;参数被设置为位置参数的列表&lt;a href=&quot;#string.Formatter.vformat&quot;&gt; &lt;code&gt;vformat()&lt;/code&gt; &lt;/a&gt;和&lt;em&gt;kwargs&lt;/em&gt;参数被设置为关键字参数的字典。</target>
        </trans-unit>
        <trans-unit id="cbfbb46472247d0b887aaa75774bf8ab442ab41a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;argv&lt;/em&gt; argument can be a list of options passed to the program, with the first element being the program name. If not specified or &lt;code&gt;None&lt;/code&gt;, the values of &lt;a href=&quot;sys#sys.argv&quot;&gt;&lt;code&gt;sys.argv&lt;/code&gt;&lt;/a&gt; are used.</source>
          <target state="translated">该&lt;em&gt;argv的&lt;/em&gt;参数可以是传递给程序的选项列表，第一个元素是程序名称。如果未指定或为 &lt;code&gt;None&lt;/code&gt; ，则使用&lt;a href=&quot;sys#sys.argv&quot;&gt; &lt;code&gt;sys.argv&lt;/code&gt; &lt;/a&gt;的值。</target>
        </trans-unit>
        <trans-unit id="ec32e6f4f4f8b36e57871ee960b991c016f1627d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;aws&lt;/em&gt; iterable must not be empty.</source>
          <target state="translated">可迭代的&lt;em&gt;aws&lt;/em&gt;不能为空。</target>
        </trans-unit>
        <trans-unit id="b0cc005a8dd1192de2426a343f6644b9f34b41bf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;blacklist&lt;/em&gt; argument can be a set of names that must not be treated as part of the public API even though their names indicate otherwise.</source>
          <target state="translated">该&lt;em&gt;黑名单&lt;/em&gt;参数可以是一组不得被视为公共API，即使他们的名字表明否则的一部分名字。</target>
        </trans-unit>
        <trans-unit id="d472fb09d267545549f54dfcd1448efdf7d1a71a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;buffering&lt;/em&gt; argument is ignored. Its use is deprecated since Python 3.0.</source>
          <target state="translated">该&lt;em&gt;缓冲&lt;/em&gt;参数将被忽略。从Python 3.0开始不推荐使用它。</target>
        </trans-unit>
        <trans-unit id="9b5ef68ccd955c5bc87fad98f76a98a1362f7808" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;byteorder&lt;/em&gt; argument determines the byte order used to represent the integer. If &lt;em&gt;byteorder&lt;/em&gt; is &lt;code&gt;&quot;big&quot;&lt;/code&gt;, the most significant byte is at the beginning of the byte array. If &lt;em&gt;byteorder&lt;/em&gt; is &lt;code&gt;&quot;little&quot;&lt;/code&gt;, the most significant byte is at the end of the byte array. To request the native byte order of the host system, use &lt;a href=&quot;sys#sys.byteorder&quot;&gt;&lt;code&gt;sys.byteorder&lt;/code&gt;&lt;/a&gt; as the byte order value.</source>
          <target state="translated">的&lt;em&gt;字节顺序&lt;/em&gt;参数确定用于表示整数的字节顺序。如果&lt;em&gt;byteorder&lt;/em&gt;为 &lt;code&gt;&quot;big&quot;&lt;/code&gt; ，则最高有效字节在字节数组的开头。如果&lt;em&gt;byteorder&lt;/em&gt;是 &lt;code&gt;&quot;little&quot;&lt;/code&gt; ，则最高有效字节在字节数组的末尾。要请求主机系统的本机字节顺序，请使用&lt;a href=&quot;sys#sys.byteorder&quot;&gt; &lt;code&gt;sys.byteorder&lt;/code&gt; &lt;/a&gt;作为字节顺序值。</target>
        </trans-unit>
        <trans-unit id="dfe4c096e9d46ef87c6014cc8115884999f9571d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cadata&lt;/em&gt; object, if present, is either an ASCII string of one or more PEM-encoded certificates or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; of DER-encoded certificates. Like with &lt;em&gt;capath&lt;/em&gt; extra lines around PEM-encoded certificates are ignored but at least one certificate must be present.</source>
          <target state="translated">的&lt;em&gt;cadata&lt;/em&gt;对象，如果存在的话，或者是一个或多个PEM编码证书或一个的ASCII字符串&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;的字节状物体&lt;/a&gt; DER编码的证书。与使用&lt;em&gt;capath&lt;/em&gt;一样，PEM编码的证书周围的多余&lt;em&gt;行将&lt;/em&gt;被忽略，但必须至少存在一个证书。</target>
        </trans-unit>
        <trans-unit id="1c5641e82f797cb25e6aee8b0aa51d313722eb3c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cadata&lt;/em&gt; object, if present, is either an ASCII string of one or more PEM-encoded certificates or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; of DER-encoded certificates. Like with &lt;em&gt;capath&lt;/em&gt; extra lines around PEM-encoded certificates are ignored but at least one certificate must be present.</source>
          <target state="translated">的&lt;em&gt;cadata&lt;/em&gt;对象，如果存在的话，或者是一个或多个PEM编码证书或一个的ASCII字符串&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;的字节状物体&lt;/a&gt;DER编码的证书。就像使用&lt;em&gt;capath&lt;/em&gt;一样，PEM编码的证书周围的多余&lt;em&gt;行将&lt;/em&gt;被忽略，但必须至少存在一个证书。</target>
        </trans-unit>
        <trans-unit id="fa644494d39e4ababa095081c9e901ded5d4e0f6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cadefault&lt;/em&gt; parameter is ignored.</source>
          <target state="translated">该&lt;em&gt;cadefault&lt;/em&gt;参数被忽略。</target>
        </trans-unit>
        <trans-unit id="17c8b195b094fb49ee9de35d0bdf391b2aeafc14" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cafile&lt;/em&gt; string, if present, is the path to a file of concatenated CA certificates in PEM format. See the discussion of &lt;a href=&quot;#ssl-certificates&quot;&gt;Certificates&lt;/a&gt; for more information about how to arrange the certificates in this file.</source>
          <target state="translated">的&lt;em&gt;凭证档案错误&lt;/em&gt;串，如果存在的话，是路径到PEM格式级联CA证书的文件。有关如何在此文件中排列&lt;a href=&quot;#ssl-certificates&quot;&gt;证书&lt;/a&gt;的更多信息，请参见证书的讨论。</target>
        </trans-unit>
        <trans-unit id="15c7daa6e069448b8e979e9ffc5f343170589a8c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;callback&lt;/em&gt; callable must be thread-safe.</source>
          <target state="translated">可&lt;em&gt;回调回调&lt;/em&gt;必须是线程安全的。</target>
        </trans-unit>
        <trans-unit id="0f39a130157f612057b2a04830330e09fc1bb8b9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;callback&lt;/em&gt; is called with the Future object as its only argument.</source>
          <target state="translated">使用Future对象作为唯一参数调用该&lt;em&gt;回调&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7b7825c54e612df4242ae324acc59aa178b0a8be" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;capath&lt;/em&gt; string, if present, is the path to a directory containing several CA certificates in PEM format, following an &lt;a href=&quot;https://www.openssl.org/docs/manmaster/man3/SSL_CTX_load_verify_locations.html&quot;&gt;OpenSSL specific layout&lt;/a&gt;.</source>
          <target state="translated">的&lt;em&gt;capath&lt;/em&gt;串，如果存在的话，是路径到包含PEM格式几个CA证书，以下内容的一个目录&lt;a href=&quot;https://www.openssl.org/docs/manmaster/man3/SSL_CTX_load_verify_locations.html&quot;&gt;的OpenSSL特定布局&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb0d6c3c720e62f41c129079fa155f95ad67efe5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;capitals&lt;/em&gt; field is either &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; (the default). If set to &lt;code&gt;1&lt;/code&gt;, exponents are printed with a capital &lt;code&gt;E&lt;/code&gt;; otherwise, a lowercase &lt;code&gt;e&lt;/code&gt; is used: &lt;code&gt;Decimal('6.02e+23')&lt;/code&gt;.</source>
          <target state="translated">的&lt;em&gt;首都&lt;/em&gt;字段是 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; （缺省值）。如果设置为 &lt;code&gt;1&lt;/code&gt; ，则指数以大写 &lt;code&gt;E&lt;/code&gt; 打印；否则，使用小写字母 &lt;code&gt;e&lt;/code&gt; ： &lt;code&gt;Decimal('6.02e+23')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a4471e81f460554b6a4cbdc7f3ddf8327b0a009" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;capturestderr&lt;/em&gt; argument is replaced with the &lt;em&gt;stderr&lt;/em&gt; argument.</source>
          <target state="translated">该&lt;em&gt;capturestderr&lt;/em&gt;参数被替换为&lt;em&gt;标准错误&lt;/em&gt;的说法。</target>
        </trans-unit>
        <trans-unit id="82b367b59ab20936a4abae0ec9731b9670a88c72" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cb_type&lt;/em&gt; parameter allow selection of the desired channel binding type. Valid channel binding types are listed in the &lt;a href=&quot;#ssl.CHANNEL_BINDING_TYPES&quot;&gt;&lt;code&gt;CHANNEL_BINDING_TYPES&lt;/code&gt;&lt;/a&gt; list. Currently only the &amp;lsquo;tls-unique&amp;rsquo; channel binding, defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc5929.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 5929&lt;/strong&gt;&lt;/a&gt;, is supported. &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised if an unsupported channel binding type is requested.</source>
          <target state="translated">所述&lt;em&gt;cb_type&lt;/em&gt;参数允许所需的信道绑定类型的选择。有效的频道绑定类型在&lt;a href=&quot;#ssl.CHANNEL_BINDING_TYPES&quot;&gt; &lt;code&gt;CHANNEL_BINDING_TYPES&lt;/code&gt; &lt;/a&gt;列表中列出。当前仅支持&lt;a href=&quot;https://tools.ietf.org/html/rfc5929.html&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;RFC 5929&lt;/strong&gt;&lt;/a&gt;定义的&amp;ldquo; tls-unique&amp;rdquo;通道绑定。如果请求的通道绑定类型不受支持，则将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2ddc504d7b79bdd1162c0d5bd7b50a0a1521922" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;chars&lt;/em&gt; argument indicates the number of decoded code points or bytes to return. The &lt;a href=&quot;#codecs.StreamReader.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method will never return more data than requested, but it might return less, if there is not enough available.</source>
          <target state="translated">该&lt;em&gt;字符&lt;/em&gt;参数指示解码码点的数量或字节返回。在&lt;a href=&quot;#codecs.StreamReader.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;方法永远不会返回比请求更多的数据，但它可能会返回少，如果没有足够的可用。</target>
        </trans-unit>
        <trans-unit id="88197343169a15c41919f107e9bccf7f75352518" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;check&lt;/em&gt; argument specifies the type of integrity check to include in the compressed data. This check is used when decompressing, to ensure that the data has not been corrupted. Possible values are:</source>
          <target state="translated">所述&lt;em&gt;检查&lt;/em&gt;参数指定完整性检查的类型包括在压缩的数据。解压缩时使用此检查，以确保数据未损坏。可能的值为：</target>
        </trans-unit>
        <trans-unit id="b3687dc03dd8946b6e5590e6e04cde893b863caa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;check_hostname&lt;/em&gt; parameter is also deprecated; the &lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt;&lt;/a&gt; attribute of &lt;em&gt;context&lt;/em&gt; should be used instead.</source>
          <target state="translated">所述&lt;em&gt;check_hostname&lt;/em&gt;参数也过时; 应该改为使用&lt;em&gt;context&lt;/em&gt;的&lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt; &lt;/a&gt;属性。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb93343e76b87a0f171f91290f48a421c682e6a1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;chunksize&lt;/em&gt; argument is the same as the one used by the &lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; method. For very long iterables using a large value for &lt;em&gt;chunksize&lt;/em&gt; can make the job complete &lt;strong&gt;much&lt;/strong&gt; faster than using the default value of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">所述&lt;em&gt;CHUNKSIZE&lt;/em&gt;参数是与由所使用的&lt;a href=&quot;#multiprocessing.pool.Pool.map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;方法。对于很长的iterables采用大值&lt;em&gt;CHUNKSIZE&lt;/em&gt;可以使工作完成&lt;strong&gt;得多&lt;/strong&gt;比使用默认值加快 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcdd385b6dc12a6a9473a0c033d73137d50d5433" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;clamp&lt;/em&gt; field is either &lt;code&gt;0&lt;/code&gt; (the default) or &lt;code&gt;1&lt;/code&gt;. If set to &lt;code&gt;1&lt;/code&gt;, the exponent &lt;code&gt;e&lt;/code&gt; of a &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance representable in this context is strictly limited to the range &lt;code&gt;Emin - prec + 1 &amp;lt;= e &amp;lt;= Emax - prec + 1&lt;/code&gt;. If &lt;em&gt;clamp&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt; then a weaker condition holds: the adjusted exponent of the &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; instance is at most &lt;code&gt;Emax&lt;/code&gt;. When &lt;em&gt;clamp&lt;/em&gt; is &lt;code&gt;1&lt;/code&gt;, a large normal number will, where possible, have its exponent reduced and a corresponding number of zeros added to its coefficient, in order to fit the exponent constraints; this preserves the value of the number but loses information about significant trailing zeros. For example:</source>
          <target state="translated">所述&lt;em&gt;夹具&lt;/em&gt;字段是 &lt;code&gt;0&lt;/code&gt; （默认值）或 &lt;code&gt;1&lt;/code&gt; 。如果设置为 &lt;code&gt;1&lt;/code&gt; ，则在这种情况下可表示的&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;实例的指数 &lt;code&gt;e&lt;/code&gt; 严格限于范围 &lt;code&gt;Emin - prec + 1 &amp;lt;= e &amp;lt;= Emax - prec + 1&lt;/code&gt; 。如果&lt;em&gt;钳位&lt;/em&gt;为 &lt;code&gt;0&lt;/code&gt; ,则保持较弱的条件：&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;实例的调整后的指数最多为 &lt;code&gt;Emax&lt;/code&gt; 。当&lt;em&gt;钳位&lt;/em&gt;为 &lt;code&gt;1&lt;/code&gt; 时&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;，则大正数将在可能的情况下减小其指数，并在其系数中添加相应数量的零，以适应指数约束；这样可以保留数字的值，但会丢失有关尾随零的信息。例如：</target>
        </trans-unit>
        <trans-unit id="e7d326f4fcf7f161639b74c69e8c84eea6966131" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;client_connected_cb&lt;/em&gt; callback is called whenever a new client connection is established. It receives a &lt;code&gt;(reader, writer)&lt;/code&gt; pair as two arguments, instances of the &lt;a href=&quot;#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">该&lt;em&gt;client_connected_cb&lt;/em&gt;每当建立了一个新的客户端连接回调被调用。它接收 &lt;code&gt;(reader, writer)&lt;/code&gt; 对作为两个参数，即&lt;a href=&quot;#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;类的实例。</target>
        </trans-unit>
        <trans-unit id="f4a778098245593126ac70d38e2feddb7c5b0931" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;comment_factory&lt;/em&gt; and &lt;em&gt;pi_factory&lt;/em&gt; functions, when given, should behave like the &lt;a href=&quot;#xml.etree.ElementTree.Comment&quot;&gt;&lt;code&gt;Comment()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#xml.etree.ElementTree.ProcessingInstruction&quot;&gt;&lt;code&gt;ProcessingInstruction()&lt;/code&gt;&lt;/a&gt; functions to create comments and processing instructions. When not given, the default factories will be used. When &lt;em&gt;insert_comments&lt;/em&gt; and/or &lt;em&gt;insert_pis&lt;/em&gt; is true, comments/pis will be inserted into the tree if they appear within the root element (but not outside of it).</source>
          <target state="translated">如果提供了&lt;em&gt;comment_factory&lt;/em&gt;和&lt;em&gt;pi_factory&lt;/em&gt;函数，它们的行为应类似于&lt;a href=&quot;#xml.etree.ElementTree.Comment&quot;&gt; &lt;code&gt;Comment()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#xml.etree.ElementTree.ProcessingInstruction&quot;&gt; &lt;code&gt;ProcessingInstruction()&lt;/code&gt; &lt;/a&gt;函数，以创建注释和处理指令。如果未提供，将使用默认工厂。当&lt;em&gt;insert_comments&lt;/em&gt;和/或&lt;em&gt;insert_pis&lt;/em&gt;为true时，如果注释/ pis出现在根元素中（但不在其外部），则将它们插入树中。</target>
        </trans-unit>
        <trans-unit id="ae46dd7b8b3f0c9dff74383b81f0b0b055f15c1b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;completekey&lt;/em&gt;, &lt;em&gt;stdin&lt;/em&gt; and &lt;em&gt;stdout&lt;/em&gt; arguments are passed to the underlying &lt;a href=&quot;cmd#cmd.Cmd&quot;&gt;&lt;code&gt;cmd.Cmd&lt;/code&gt;&lt;/a&gt; class; see the description there.</source>
          <target state="translated">将&lt;em&gt;completekey&lt;/em&gt;，&lt;em&gt;stdin&lt;/em&gt;和&lt;em&gt;stdout&lt;/em&gt;参数传递给基础&lt;a href=&quot;cmd#cmd.Cmd&quot;&gt; &lt;code&gt;cmd.Cmd&lt;/code&gt; &lt;/a&gt;类。看到那里的描述。</target>
        </trans-unit>
        <trans-unit id="5a1f18b255019414a78bdbbdc091b232a1484516" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;compresslevel&lt;/em&gt; argument is an integer from 0 to 9, as for the &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">所述&lt;em&gt;compresslevel&lt;/em&gt;参数是从0到9的整数，作为用于&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="a61f0cb9aa11a7de1821e1143b80646c4fdd247d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;compresslevel&lt;/em&gt; argument is an integer from 1 to 9, as for the &lt;a href=&quot;#bz2.BZ2File&quot;&gt;&lt;code&gt;BZ2File&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">所述&lt;em&gt;compresslevel&lt;/em&gt;参数是从1到9的整数，作为&lt;a href=&quot;#bz2.BZ2File&quot;&gt; &lt;code&gt;BZ2File&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="851d04e3fb4b234e2a60f5e3589b15db66360cf7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;compresslevel&lt;/em&gt; argument is an integer from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt; controlling the level of compression; &lt;code&gt;1&lt;/code&gt; is fastest and produces the least compression, and &lt;code&gt;9&lt;/code&gt; is slowest and produces the most compression. &lt;code&gt;0&lt;/code&gt; is no compression. The default is &lt;code&gt;9&lt;/code&gt;.</source>
          <target state="translated">所述&lt;em&gt;compresslevel&lt;/em&gt;参数是从整数 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;9&lt;/code&gt; 控制压缩的水平; &lt;code&gt;1&lt;/code&gt; 最快，压缩最小，而 &lt;code&gt;9&lt;/code&gt; 最快，压缩最大。 &lt;code&gt;0&lt;/code&gt; 为无压缩。默认值为 &lt;code&gt;9&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e585639f4143e42300f1705d50d3747d42a1ad7b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;compresslevel&lt;/em&gt; parameter became keyword-only.</source>
          <target state="translated">该&lt;em&gt;compresslevel&lt;/em&gt;参数成为关键字只。</target>
        </trans-unit>
        <trans-unit id="c73bf8969ac57945539c860056209cac0643be6c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;compresslevel&lt;/em&gt; parameter controls the compression level to use when writing files to the archive. When using &lt;a href=&quot;#zipfile.ZIP_STORED&quot;&gt;&lt;code&gt;ZIP_STORED&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#zipfile.ZIP_LZMA&quot;&gt;&lt;code&gt;ZIP_LZMA&lt;/code&gt;&lt;/a&gt; it has no effect. When using &lt;a href=&quot;#zipfile.ZIP_DEFLATED&quot;&gt;&lt;code&gt;ZIP_DEFLATED&lt;/code&gt;&lt;/a&gt; integers &lt;code&gt;0&lt;/code&gt; through &lt;code&gt;9&lt;/code&gt; are accepted (see &lt;a href=&quot;zlib#zlib.compressobj&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; for more information). When using &lt;a href=&quot;#zipfile.ZIP_BZIP2&quot;&gt;&lt;code&gt;ZIP_BZIP2&lt;/code&gt;&lt;/a&gt; integers &lt;code&gt;1&lt;/code&gt; through &lt;code&gt;9&lt;/code&gt; are accepted (see &lt;a href=&quot;bz2#bz2.BZ2File&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; for more information).</source>
          <target state="translated">该&lt;em&gt;compresslevel&lt;/em&gt;参数控制文件写入存档时的压缩级别使用。使用&lt;a href=&quot;#zipfile.ZIP_STORED&quot;&gt; &lt;code&gt;ZIP_STORED&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#zipfile.ZIP_LZMA&quot;&gt; &lt;code&gt;ZIP_LZMA&lt;/code&gt; &lt;/a&gt;时无效。使用&lt;a href=&quot;#zipfile.ZIP_DEFLATED&quot;&gt; &lt;code&gt;ZIP_DEFLATED&lt;/code&gt; &lt;/a&gt;时，可接受 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;9&lt;/code&gt; 的整数（有关更多信息，请参见&lt;a href=&quot;zlib#zlib.compressobj&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt;）。使用&lt;a href=&quot;#zipfile.ZIP_BZIP2&quot;&gt; &lt;code&gt;ZIP_BZIP2&lt;/code&gt; &lt;/a&gt;时，可接受 &lt;code&gt;1&lt;/code&gt; 到 &lt;code&gt;9&lt;/code&gt; 的整数（有关更多信息，请参见&lt;a href=&quot;bz2#bz2.BZ2File&quot;&gt; &lt;code&gt;bz2&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ddb13b39623dcafcf4f44aec9717c0167926fdf6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;context&lt;/em&gt; precision does not affect how many digits are stored. That is determined exclusively by the number of digits in &lt;em&gt;value&lt;/em&gt;. For example, &lt;code&gt;Decimal('3.00000')&lt;/code&gt; records all five zeros even if the context precision is only three.</source>
          <target state="translated">该&lt;em&gt;背景下&lt;/em&gt;的精度并不影响多少位被存储。那完全取决于&lt;em&gt;值&lt;/em&gt;的位数。例如，即使上下文精度仅为3 ， &lt;code&gt;Decimal('3.00000')&lt;/code&gt; 也会记录所有五个零。</target>
        </trans-unit>
        <trans-unit id="d5e6fbc8c11370385eb242760b9740f5836b90d3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;conversion&lt;/em&gt; field causes a type coercion before formatting. Normally, the job of formatting a value is done by the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt;&lt;code&gt;__format__()&lt;/code&gt;&lt;/a&gt; method of the value itself. However, in some cases it is desirable to force a type to be formatted as a string, overriding its own definition of formatting. By converting the value to a string before calling &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt;&lt;code&gt;__format__()&lt;/code&gt;&lt;/a&gt;, the normal formatting logic is bypassed.</source>
          <target state="translated">的&lt;em&gt;转换&lt;/em&gt;场引起格式化之前一个类型强制。通常，格式化值的工作是通过值本身的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt; &lt;code&gt;__format__()&lt;/code&gt; &lt;/a&gt;方法完成的。但是，在某些情况下，最好强制将一种类型设置为字符串格式，以覆盖其自身对格式的定义。通过在调用&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__format__&quot;&gt; &lt;code&gt;__format__()&lt;/code&gt; &lt;/a&gt;之前将值转换为字符串，可以绕过常规的格式化逻辑。</target>
        </trans-unit>
        <trans-unit id="4aba90ac1ebe706d09c9254e33b29e5df1b60774" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;conversion&lt;/em&gt; field causes a type coercion before formatting. Normally, the job of formatting a value is done by the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__format__&quot;&gt;&lt;code&gt;__format__()&lt;/code&gt;&lt;/a&gt; method of the value itself. However, in some cases it is desirable to force a type to be formatted as a string, overriding its own definition of formatting. By converting the value to a string before calling &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__format__&quot;&gt;&lt;code&gt;__format__()&lt;/code&gt;&lt;/a&gt;, the normal formatting logic is bypassed.</source>
          <target state="translated">的&lt;em&gt;转换&lt;/em&gt;场引起格式化之前一个类型强制。通常，格式化值的工作是通过值本身的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__format__&quot;&gt; &lt;code&gt;__format__()&lt;/code&gt; &lt;/a&gt;方法完成的。但是，在某些情况下，最好强制将一种类型设置为字符串格式，以覆盖其自身对格式的定义。通过在调用&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__format__&quot;&gt; &lt;code&gt;__format__()&lt;/code&gt; &lt;/a&gt;之前将值转换为字符串，可以绕过常规的格式化逻辑。</target>
        </trans-unit>
        <trans-unit id="b2cdc701e2c81ec997648e61d22b6adb27be68cf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;d&lt;/em&gt;&amp;rsquo;th day (0 &amp;lt;= &lt;em&gt;d&lt;/em&gt; &amp;lt;= 6) of week &lt;em&gt;n&lt;/em&gt; of month &lt;em&gt;m&lt;/em&gt; of the year (1 &amp;lt;= &lt;em&gt;n&lt;/em&gt; &amp;lt;= 5, 1 &amp;lt;= &lt;em&gt;m&lt;/em&gt; &amp;lt;= 12, where week 5 means &amp;ldquo;the last &lt;em&gt;d&lt;/em&gt; day in month &lt;em&gt;m&lt;/em&gt;&amp;rdquo; which may occur in either the fourth or the fifth week). Week 1 is the first week in which the &lt;em&gt;d&lt;/em&gt;&amp;rsquo;th day occurs. Day zero is a Sunday.</source>
          <target state="translated">的&lt;em&gt;d&lt;/em&gt; &amp;ldquo;日天（0 &amp;lt;= &lt;em&gt;d&lt;/em&gt; &amp;lt;= 6）周的&lt;em&gt;&amp;Ntilde;&lt;/em&gt;的月&lt;em&gt;米&lt;/em&gt;的一年（1 &amp;lt;= &lt;em&gt;&amp;Ntilde;&lt;/em&gt; &amp;lt;= 5,1 &amp;lt;= &lt;em&gt;米&lt;/em&gt; &amp;lt;= 12，其中每周5手段&amp;ldquo;的最后&lt;em&gt;d&lt;/em&gt;一天月&lt;em&gt;米&lt;/em&gt;其可以在任一第四或第五周发生&amp;rdquo;）。第1周是发生第&lt;em&gt;d&lt;/em&gt;天的第一周。零日是星期日。</target>
        </trans-unit>
        <trans-unit id="9036429e9d7f5146bc247599a86f71fa7486b2b8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;data&lt;/em&gt; argument can be whatever the &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; function supports (i.e. string or bytes). The &lt;em&gt;path&lt;/em&gt; argument should be the &amp;ldquo;path&amp;rdquo; to where the source code originated from, which can be an abstract concept (e.g. location in a zip file).</source>
          <target state="translated">的&lt;em&gt;数据&lt;/em&gt;参数可以是任何的&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;函数支撑件（即，字符串或字节）。该&lt;em&gt;路径&lt;/em&gt;参数应该是&amp;ldquo;路径&amp;rdquo;的源代码源自，其可以是一个抽象的概念（在zip文件例如，位置），其中。</target>
        </trans-unit>
        <trans-unit id="8e21c5c2ac1fec214edb5720c17f5f7ed3424d7e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;data&lt;/em&gt; can be any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; and should consist of values that can be converted to type &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;data&lt;/em&gt; does not contain at least two elements, raises &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; because it takes at least one point to estimate a central value and at least two points to estimate dispersion.</source>
          <target state="translated">该&lt;em&gt;数据&lt;/em&gt;可以是任何&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;可迭代&lt;/a&gt;和应包括可被转换为类型值的&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;。如果&lt;em&gt;数据&lt;/em&gt;不包含至少两个元素，则引发&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; ,&lt;/a&gt;因为它需要至少一个点来估计中心值，并且至少需要两个点来估计散度。</target>
        </trans-unit>
        <trans-unit id="688e1646a7e1acbf93ea4a901e56df5c1326f757" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;data&lt;/em&gt; can be any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; and should consist of values that can be converted to type &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;data&lt;/em&gt; does not contain at least two elements, raises &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; because it takes at least one point to estimate a central value and at least two points to estimate dispersion.</source>
          <target state="translated">该&lt;em&gt;数据&lt;/em&gt;可以是任何&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterable&quot;&gt;可迭代&lt;/a&gt;和应包括可被转换为类型值的&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;。如果&lt;em&gt;数据&lt;/em&gt;不包含至少两个元素，则引发&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; ,&lt;/a&gt;因为它需要至少一个点来估计中心值，并且至少需要两个点来估计散度。</target>
        </trans-unit>
        <trans-unit id="0b832475cfa8a9dd77d9b1b927964df35f6bb322" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;data&lt;/em&gt; can be any iterable containing sample data. For meaningful results, the number of data points in &lt;em&gt;data&lt;/em&gt; should be larger than &lt;em&gt;n&lt;/em&gt;. Raises &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; if there are not at least two data points.</source>
          <target state="translated">该&lt;em&gt;数据&lt;/em&gt;可以是任何可迭代包含样本数据。为有意义的结果，数据点的数量&lt;em&gt;的数据&lt;/em&gt;应大于&lt;em&gt;&amp;Ntilde;&lt;/em&gt;。如果没有至少两个数据点，则引发&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d46475fe7beb032a1dde9b71f62e7b60ff7cca66" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;data&lt;/em&gt; parameter will be the entire contents of the declaration inside the &lt;code&gt;&amp;lt;![...]&amp;gt;&lt;/code&gt; markup. It is sometimes useful to be overridden by a derived class. The base class implementation does nothing.</source>
          <target state="translated">该&lt;em&gt;数据&lt;/em&gt;参数将是内部的声明的全部内容 &lt;code&gt;&amp;lt;![...]&amp;gt;&lt;/code&gt; 标记。有时被派生类覆盖是很有用的。基类实现不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="bd72e401bf63a75fade8457ee5eccda856af08af" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;debug_override&lt;/em&gt; parameter is deprecated and can be used to override the system&amp;rsquo;s value for &lt;code&gt;__debug__&lt;/code&gt;. A &lt;code&gt;True&lt;/code&gt; value is the equivalent of setting &lt;em&gt;optimization&lt;/em&gt; to the empty string. A &lt;code&gt;False&lt;/code&gt; value is the same as setting &lt;em&gt;optimization&lt;/em&gt; to &lt;code&gt;1&lt;/code&gt;. If both &lt;em&gt;debug_override&lt;/em&gt; an &lt;em&gt;optimization&lt;/em&gt; are not &lt;code&gt;None&lt;/code&gt; then &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">该&lt;em&gt;debug_override&lt;/em&gt;参数已被弃用，并且可以用于覆盖系统对价值 &lt;code&gt;__debug__&lt;/code&gt; 。一个 &lt;code&gt;True&lt;/code&gt; 价值是等同设置的&lt;em&gt;优化&lt;/em&gt;为空字符串。一个 &lt;code&gt;False&lt;/code&gt; 值是一样的设置&lt;em&gt;优化&lt;/em&gt;到 &lt;code&gt;1&lt;/code&gt; 。如果两个&lt;em&gt;debug_override&lt;/em&gt;的&lt;em&gt;优化&lt;/em&gt;不 &lt;code&gt;None&lt;/code&gt; 则&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;引发。</target>
        </trans-unit>
        <trans-unit id="99e0c356da751dd166a63e978dc2a39c5eedc1fa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;decl&lt;/em&gt; parameter will be the entire contents of the declaration inside the &lt;code&gt;&amp;lt;!...&amp;gt;&lt;/code&gt; markup (e.g. &lt;code&gt;'DOCTYPE html'&lt;/code&gt;).</source>
          <target state="translated">在&lt;em&gt;东方电气&lt;/em&gt;参数将是内声明的全部内容 &lt;code&gt;&amp;lt;!...&amp;gt;&lt;/code&gt; 标记（如 &lt;code&gt;'DOCTYPE html'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6ef3824e032cf9a741f848cb50c2d7646000b316" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;defaultTest&lt;/em&gt; argument is either the name of a single test or an iterable of test names to run if no test names are specified via &lt;em&gt;argv&lt;/em&gt;. If not specified or &lt;code&gt;None&lt;/code&gt; and no test names are provided via &lt;em&gt;argv&lt;/em&gt;, all tests found in &lt;em&gt;module&lt;/em&gt; are run.</source>
          <target state="translated">所述&lt;em&gt;defaultTest&lt;/em&gt;参数可以是一个单一的测试的名称或可迭代测试名称如果经由未指定试验名称来运行&lt;em&gt;的argv&lt;/em&gt;。如果未指定或 &lt;code&gt;None&lt;/code&gt; 并且没有通过&lt;em&gt;argv&lt;/em&gt;提供测试名称，则运行&lt;em&gt;模块&lt;/em&gt;中找到的所有测试。</target>
        </trans-unit>
        <trans-unit id="2d19d5ca4548580938d6b4d9329d9a62bbfc3144" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;defects&lt;/em&gt; attribute contains a list of all the problems found when parsing this message. See &lt;a href=&quot;email.errors#module-email.errors&quot;&gt;&lt;code&gt;email.errors&lt;/code&gt;&lt;/a&gt; for a detailed description of the possible parsing defects.</source>
          <target state="translated">该&lt;em&gt;缺陷&lt;/em&gt;属性包含的所有解析此消息时发现的问题的列表。有关可能的解析缺陷的详细说明，请参阅&lt;a href=&quot;email.errors#module-email.errors&quot;&gt; &lt;code&gt;email.errors&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3f2596b66bd7ed716cf9dba1109e5f24389e006" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dict_type&lt;/em&gt; is the type used for dictionaries that are read from the plist file.</source>
          <target state="translated">该&lt;em&gt;dict_type&lt;/em&gt;是用于那些从plist文件读取字典的类型。</target>
        </trans-unit>
        <trans-unit id="4e0020d0746abd869d54f08c307ddd6914e84e24" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dir&lt;/em&gt;, &lt;em&gt;prefix&lt;/em&gt; and &lt;em&gt;suffix&lt;/em&gt; parameters have the same meaning and defaults as with &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的&lt;em&gt;目录&lt;/em&gt;，&lt;em&gt;前缀&lt;/em&gt;和&lt;em&gt;后缀&lt;/em&gt;参数具有相同的含义和缺省值与&lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="678377d21d95b5da2eccbd2ed6a5bf79dc5f7822" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;domain&lt;/em&gt; argument allows overriding the NIS domain used for the lookup. If unspecified, lookup is in the default NIS domain.</source>
          <target state="translated">该&lt;em&gt;域&lt;/em&gt;参数允许覆盖用于查找NIS域。如果未指定，则查找位于默认的NIS域中。</target>
        </trans-unit>
        <trans-unit id="541a21c0d12fc17803562f97e87bab04e8920e68" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;doraise&lt;/em&gt; and &lt;em&gt;quiet&lt;/em&gt; arguments determine how errors are handled while compiling file. If &lt;em&gt;quiet&lt;/em&gt; is 0 or 1, and &lt;em&gt;doraise&lt;/em&gt; is false, the default behaviour is enabled: an error string is written to &lt;code&gt;sys.stderr&lt;/code&gt;, and the function returns &lt;code&gt;None&lt;/code&gt; instead of a path. If &lt;em&gt;doraise&lt;/em&gt; is true, a &lt;a href=&quot;#py_compile.PyCompileError&quot;&gt;&lt;code&gt;PyCompileError&lt;/code&gt;&lt;/a&gt; is raised instead. However if &lt;em&gt;quiet&lt;/em&gt; is 2, no message is written, and &lt;em&gt;doraise&lt;/em&gt; has no effect.</source>
          <target state="translated">该&lt;em&gt;doraise&lt;/em&gt;和&lt;em&gt;安静的&lt;/em&gt;参数确定在编译的文件如何处理错误。如果&lt;em&gt;quiet&lt;/em&gt;为0或1，并且&lt;em&gt;doraise&lt;/em&gt;为false，则启用默认行为：将错误字符串写入 &lt;code&gt;sys.stderr&lt;/code&gt; ，并且该函数返回 &lt;code&gt;None&lt;/code&gt; 而不是路径。如果&lt;em&gt;doraise&lt;/em&gt;为true，则引发&lt;a href=&quot;#py_compile.PyCompileError&quot;&gt; &lt;code&gt;PyCompileError&lt;/code&gt; &lt;/a&gt;。但是，如果&lt;em&gt;quiet&lt;/em&gt;为2，则不会写入任何消息，并且&lt;em&gt;doraise&lt;/em&gt;无效。</target>
        </trans-unit>
        <trans-unit id="3f45beba9ae9b99fd6eddff1254b265a6b06ccf7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dt&lt;/em&gt; argument is ignored. The return value is a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; instance equal to the difference between the local time and UTC.</source>
          <target state="translated">该&lt;em&gt;DT&lt;/em&gt;参数将被忽略。返回值是一个&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;实例，它等于本地时间与UTC之间的差。</target>
        </trans-unit>
        <trans-unit id="7ed9f309122fc25ff8178610e7f4da0a59231fe1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;encode&lt;/em&gt; and &lt;em&gt;decode&lt;/em&gt; arguments must adhere to the &lt;code&gt;Codec&lt;/code&gt; interface. &lt;em&gt;Reader&lt;/em&gt; and &lt;em&gt;Writer&lt;/em&gt; must be factory functions or classes providing objects of the &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; interface respectively.</source>
          <target state="translated">该&lt;em&gt;编码&lt;/em&gt;和&lt;em&gt;解码&lt;/em&gt;参数必须坚持 &lt;code&gt;Codec&lt;/code&gt; 接口。&lt;em&gt;Reader&lt;/em&gt;和&lt;em&gt;Writer&lt;/em&gt;必须是工厂函数或类，分别提供&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;接口的对象。</target>
        </trans-unit>
        <trans-unit id="29e7c348a1628ee9dd37b6150c94cd6ec0cfbf2a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;encode_chunked&lt;/em&gt; argument is only relevant if Transfer-Encoding is specified in &lt;em&gt;headers&lt;/em&gt;. If &lt;em&gt;encode_chunked&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the HTTPConnection object assumes that all encoding is handled by the calling code. If it is &lt;code&gt;True&lt;/code&gt;, the body will be chunk-encoded.</source>
          <target state="translated">只有在&lt;em&gt;headers中&lt;/em&gt;指定了Transfer-Encoding时，&lt;em&gt;encode_chunked&lt;/em&gt;参数才有意义。如果&lt;em&gt;encode_chunked&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ，则HTTPConnection对象假定所有编码均由调用代码处理。如果为 &lt;code&gt;True&lt;/code&gt; ，则主体将进行块编码。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c325607a7de886abde53f31697d71ac0d9b3a43d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; arguments define the character encoding to be used for reading or writing the archive and how conversion errors are going to be handled. The default settings will work for most users. See section &lt;a href=&quot;#tar-unicode&quot;&gt;Unicode issues&lt;/a&gt; for in-depth information.</source>
          <target state="translated">该&lt;em&gt;编码&lt;/em&gt;和&lt;em&gt;错误&lt;/em&gt;参数定义用于读取或写入档案，以及如何转换错误将要处理的字符编码。默认设置适用于大多数用户。有关详细信息，请参见&lt;a href=&quot;#tar-unicode&quot;&gt;Unicode问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c14540e9d5e02ef282d24989bc0560f5d43b74be" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;encoding&lt;/em&gt; argument behaves like the corresponding argument of &lt;a href=&quot;#xml.dom.minidom.Node.toxml&quot;&gt;&lt;code&gt;toxml()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的&lt;em&gt;编码&lt;/em&gt;参数的行为等的对应参数&lt;a href=&quot;#xml.dom.minidom.Node.toxml&quot;&gt; &lt;code&gt;toxml()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77ab38b7127187e79b77fe535f5b759fb3f1914b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;encoding&lt;/em&gt; argument behaves like the corresponding argument of &lt;code&gt;toxml()&lt;/code&gt;.</source>
          <target state="translated">的&lt;em&gt;编码&lt;/em&gt;参数的行为等的对应参数 &lt;code&gt;toxml()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff5ea8da7e93711f96576b90a0535523be394058" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;epilogue&lt;/em&gt; attribute acts the same way as the &lt;em&gt;preamble&lt;/em&gt; attribute, except that it contains text that appears between the last boundary and the end of the message.</source>
          <target state="translated">的&lt;em&gt;尾声&lt;/em&gt;属性作用方式与相同的&lt;em&gt;前导码&lt;/em&gt;属性，不同之处在于它包含文本的最后一个边界和消息的端部之间出现。</target>
        </trans-unit>
        <trans-unit id="922c64a430cac350255517325dcc4e95110a3128" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;epilogue&lt;/em&gt; attribute acts the same way as the &lt;em&gt;preamble&lt;/em&gt; attribute, except that it contains text that appears between the last boundary and the end of the message. As with the &lt;a href=&quot;#email.message.EmailMessage.preamble&quot;&gt;&lt;code&gt;preamble&lt;/code&gt;&lt;/a&gt;, if there is no epilog text this attribute will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">的&lt;em&gt;尾声&lt;/em&gt;属性作用方式与相同的&lt;em&gt;前导码&lt;/em&gt;属性，不同之处在于它包含文本的最后一个边界和消息的端部之间出现。与&lt;a href=&quot;#email.message.EmailMessage.preamble&quot;&gt; &lt;code&gt;preamble&lt;/code&gt; &lt;/a&gt;，如果没有结尾文字，则此属性将为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07e6075314e49857e472236bdfa91c705e2f0813" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;epoch&lt;/em&gt; is the point where the time starts, and is platform dependent. For Unix, the epoch is January 1, 1970, 00:00:00 (UTC). To find out what the epoch is on a given platform, look at &lt;code&gt;time.gmtime(0)&lt;/code&gt;.</source>
          <target state="translated">该&lt;em&gt;时期&lt;/em&gt;是时间开始，在此点，并与平台有关。对于Unix，纪元是1970年1月1日，00：00：00（UTC）。要了解给定平台上的时代，请查看 &lt;code&gt;time.gmtime(0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3738dcf310d32e085451a3c93f9bf3c820ec7a6b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument defines how characters are treated that cannot be converted. Possible values are listed in section &lt;a href=&quot;codecs#error-handlers&quot;&gt;Error Handlers&lt;/a&gt;. The default scheme is &lt;code&gt;'surrogateescape'&lt;/code&gt; which Python also uses for its file system calls, see &lt;a href=&quot;os#os-filenames&quot;&gt;File Names, Command Line Arguments, and Environment Variables&lt;/a&gt;.</source>
          <target state="translated">所述&lt;em&gt;误差&lt;/em&gt;参数定义字符被如何处理不能被转换。可能的值在&amp;ldquo; &lt;a href=&quot;codecs#error-handlers&quot;&gt;错误处理程序&amp;rdquo;&lt;/a&gt;部分列出。默认方案是 &lt;code&gt;'surrogateescape'&lt;/code&gt; ，Python也将其用于其文件系统调用，请参见&lt;a href=&quot;os#os-filenames&quot;&gt;文件名，命令行参数和环境变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="accd6ed2c4add06dcc82825a5c29164b4aa44ad7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument defines the error handling to apply. It defaults to &lt;code&gt;'strict'&lt;/code&gt; handling.</source>
          <target state="translated">该&lt;em&gt;错误&lt;/em&gt;参数定义错误处理申请。默认为 &lt;code&gt;'strict'&lt;/code&gt; 处理。</target>
        </trans-unit>
        <trans-unit id="417c35e3c3489ecae455dfd7cc1fdfb4272d8a54" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument will be assigned to an attribute of the same name. Assigning to this attribute makes it possible to switch between different error handling strategies during the lifetime of the &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">该&lt;em&gt;错误&lt;/em&gt;参数将被分配到相同名称的属性。分配给该属性可以在&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; &lt;/a&gt;对象的生存期内在不同的错误处理策略之间进行切换。</target>
        </trans-unit>
        <trans-unit id="0193b2731a3bc5048c2a96e0d3333506018910d7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument will be assigned to an attribute of the same name. Assigning to this attribute makes it possible to switch between different error handling strategies during the lifetime of the &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">该&lt;em&gt;错误&lt;/em&gt;参数将被分配到相同名称的属性。分配给该属性可以在&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; &lt;/a&gt;对象的生存期内在不同的错误处理策略之间进行切换。</target>
        </trans-unit>
        <trans-unit id="07408f3978c0e16f152e5b37f0839ea36889cf01" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument will be assigned to an attribute of the same name. Assigning to this attribute makes it possible to switch between different error handling strategies during the lifetime of the &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">该&lt;em&gt;错误&lt;/em&gt;参数将被分配到相同名称的属性。分配给该属性可以在&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;对象的生存期内在不同的错误处理策略之间进行切换。</target>
        </trans-unit>
        <trans-unit id="56664efc67b073b3b091d3fb8068398e69c0cbdf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;errors&lt;/em&gt; argument will be assigned to an attribute of the same name. Assigning to this attribute makes it possible to switch between different error handling strategies during the lifetime of the &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">该&lt;em&gt;错误&lt;/em&gt;参数将被分配到相同名称的属性。分配给该属性可以在&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;对象的生存期内在不同的错误处理策略之间进行切换。</target>
        </trans-unit>
        <trans-unit id="bdb2e9827a01e7259645dad2c2d3343a896529f4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;exec_body&lt;/em&gt; argument is a callback that is used to populate the freshly created class namespace. It should accept the class namespace as its sole argument and update the namespace directly with the class contents. If no callback is provided, it has the same effect as passing in &lt;code&gt;lambda ns: ns&lt;/code&gt;.</source>
          <target state="translated">该&lt;em&gt;exec_body&lt;/em&gt;参数是用来填充新创建的类名称空间的回调。它应该接受类名称空间作为其唯一参数，并直接使用类内容更新名称空间。如果未提供回调，则其作用与传入 &lt;code&gt;lambda ns: ns&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55c7ca7eb02e1ac631fb9b49acf3b5fa4fbcaaa0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;executable&lt;/em&gt; argument specifies a replacement program to execute. It is very seldom needed. When &lt;code&gt;shell=False&lt;/code&gt;, &lt;em&gt;executable&lt;/em&gt; replaces the program to execute specified by &lt;em&gt;args&lt;/em&gt;. However, the original &lt;em&gt;args&lt;/em&gt; is still passed to the program. Most programs treat the program specified by &lt;em&gt;args&lt;/em&gt; as the command name, which can then be different from the program actually executed. On POSIX, the &lt;em&gt;args&lt;/em&gt; name becomes the display name for the executable in utilities such as &lt;strong&gt;ps&lt;/strong&gt;. If &lt;code&gt;shell=True&lt;/code&gt;, on POSIX the &lt;em&gt;executable&lt;/em&gt; argument specifies a replacement shell for the default &lt;code&gt;/bin/sh&lt;/code&gt;.</source>
          <target state="translated">该&lt;em&gt;可执行文件&lt;/em&gt;参数指定的替代程序来执行。很少需要。当 &lt;code&gt;shell=False&lt;/code&gt; 时，&lt;em&gt;可执行文件&lt;/em&gt;替换由&lt;em&gt;args&lt;/em&gt;指定执行的程序。但是，原始&lt;em&gt;参数&lt;/em&gt;仍会传递给程序。大多数程序将&lt;em&gt;args&lt;/em&gt;指定的程序当作命令名，然后可以与实际执行的程序不同。在POSIX上，&lt;em&gt;args&lt;/em&gt;名称成为实用程序（例如&lt;strong&gt;ps）中&lt;/strong&gt;可执行文件的显示名称。如果 &lt;code&gt;shell=True&lt;/code&gt; ，则在POSIX上，&lt;em&gt;可执行&lt;/em&gt;参数为默认的 &lt;code&gt;/bin/sh&lt;/code&gt; 指定替换壳。。</target>
        </trans-unit>
        <trans-unit id="a2283b4e58ae37a66ef528c3791a1b7ee66c3708" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;executor&lt;/em&gt; argument should be an &lt;a href=&quot;concurrent.futures#concurrent.futures.Executor&quot;&gt;&lt;code&gt;concurrent.futures.Executor&lt;/code&gt;&lt;/a&gt; instance. The default executor is used if &lt;em&gt;executor&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">在&lt;em&gt;执行&lt;/em&gt;参数应该是一个&lt;a href=&quot;concurrent.futures#concurrent.futures.Executor&quot;&gt; &lt;code&gt;concurrent.futures.Executor&lt;/code&gt; &lt;/a&gt;实例。如果&lt;em&gt;executor&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ,则使用默认的executor 。</target>
        </trans-unit>
        <trans-unit id="bc0182bbf1f5e1c0e30b3cb44d4050e6085c5147" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;expression&lt;/em&gt; argument is parsed and evaluated as a Python expression (technically speaking, a condition list) using the &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; dictionaries as global and local namespace. If the &lt;em&gt;globals&lt;/em&gt; dictionary is present and does not contain a value for the key &lt;code&gt;__builtins__&lt;/code&gt;, a reference to the dictionary of the built-in module &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; is inserted under that key before &lt;em&gt;expression&lt;/em&gt; is parsed. This means that &lt;em&gt;expression&lt;/em&gt; normally has full access to the standard &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; module and restricted environments are propagated. If the &lt;em&gt;locals&lt;/em&gt; dictionary is omitted it defaults to the &lt;em&gt;globals&lt;/em&gt; dictionary. If both dictionaries are omitted, the expression is executed with the &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; in the environment where &lt;a href=&quot;#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; is called. Note, &lt;em&gt;eval()&lt;/em&gt; does not have access to the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-nested-scope&quot;&gt;nested scopes&lt;/a&gt; (non-locals) in the enclosing environment.</source>
          <target state="translated">使用&lt;em&gt;全局&lt;/em&gt;和&lt;em&gt;本地&lt;/em&gt;字典作为全局和本地名称空间，将&lt;em&gt;expression&lt;/em&gt;参数解析并评估为Python表达式（从技术上来说是条件列表）。如果存在&lt;em&gt;globals&lt;/em&gt;字典并且不包含键 &lt;code&gt;__builtins__&lt;/code&gt; 的值，则在解析&lt;em&gt;表达式&lt;/em&gt;之前，将在该键下插入对内置模块&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;的字典的引用。这意味着&lt;em&gt;表达式&lt;/em&gt;通常具有对标准&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;模块的完全访问权限，并且可以传播受限环境。如果省略了&lt;em&gt;locals&lt;/em&gt;字典，则默认为&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;全球&lt;/em&gt;字典。如果省略两个字典，则在调用&lt;a href=&quot;#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;的环境中使用&lt;em&gt;全局变量&lt;/em&gt;和&lt;em&gt;局部&lt;/em&gt;&lt;em&gt;变量&lt;/em&gt;执行表达式。请注意，&lt;em&gt;eval（&lt;/em&gt;）在封闭环境中无权访问&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-nested-scope&quot;&gt;嵌套作用域&lt;/a&gt;（非本地作用域）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd377d1fc4e40dff60ddc4d4c18d876a2a66f0b7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;expression&lt;/em&gt; argument is parsed and evaluated as a Python expression (technically speaking, a condition list) using the &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; dictionaries as global and local namespace. If the &lt;em&gt;globals&lt;/em&gt; dictionary is present and does not contain a value for the key &lt;code&gt;__builtins__&lt;/code&gt;, a reference to the dictionary of the built-in module &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; is inserted under that key before &lt;em&gt;expression&lt;/em&gt; is parsed. This means that &lt;em&gt;expression&lt;/em&gt; normally has full access to the standard &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; module and restricted environments are propagated. If the &lt;em&gt;locals&lt;/em&gt; dictionary is omitted it defaults to the &lt;em&gt;globals&lt;/em&gt; dictionary. If both dictionaries are omitted, the expression is executed with the &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; in the environment where &lt;a href=&quot;#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; is called. Note, &lt;em&gt;eval()&lt;/em&gt; does not have access to the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-nested-scope&quot;&gt;nested scopes&lt;/a&gt; (non-locals) in the enclosing environment.</source>
          <target state="translated">使用&lt;em&gt;全局&lt;/em&gt;和&lt;em&gt;本地&lt;/em&gt;字典作为全局和本地名称空间，将&lt;em&gt;expression&lt;/em&gt;参数解析并评估为Python表达式（从技术上来说是条件列表）。如果存在&lt;em&gt;globals&lt;/em&gt;字典并且不包含键 &lt;code&gt;__builtins__&lt;/code&gt; 的值，则在解析&lt;em&gt;表达式&lt;/em&gt;之前，将在该键下插入对内置模块&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;的字典的引用。这意味着&lt;em&gt;表达式&lt;/em&gt;通常具有对标准&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;模块的完全访问权限，并且可以传播受限环境。如果省略了&lt;em&gt;locals&lt;/em&gt;字典，则默认为&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;全球&lt;/em&gt;字典。如果省略两个字典，则在调用&lt;a href=&quot;#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;的环境中使用&lt;em&gt;全局变量&lt;/em&gt;和&lt;em&gt;局部&lt;/em&gt;&lt;em&gt;变量&lt;/em&gt;执行表达式。请注意，&lt;em&gt;eval（&lt;/em&gt;）在封闭环境中无权访问&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-nested-scope&quot;&gt;嵌套作用域&lt;/a&gt;（非本地作用域）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c27bdb65636017d6b3ff59ca63cf0593fdd5b0b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;extra&lt;/em&gt; argument can be a set of names that wouldn&amp;rsquo;t otherwise be automatically detected as &amp;ldquo;public&amp;rdquo;, like objects without a proper &lt;code&gt;__module__&lt;/code&gt; attribute. If provided, it will be added to the automatically detected ones.</source>
          <target state="translated">该&lt;em&gt;额外的&lt;/em&gt;参数可以是一组本来不会被自动检测为&amp;ldquo;公共&amp;rdquo;的名称，如对象没有一个适当的 &lt;code&gt;__module__&lt;/code&gt; 属性。如果提供，它将被添加到自动检测到的文件中。</target>
        </trans-unit>
        <trans-unit id="a08cf90e834703ae213fd12223835ee5ad8adf15" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;failfast&lt;/em&gt;, &lt;em&gt;catchbreak&lt;/em&gt; and &lt;em&gt;buffer&lt;/em&gt; parameters have the same effect as the same-name &lt;a href=&quot;#command-line-options&quot;&gt;command-line options&lt;/a&gt;.</source>
          <target state="translated">的&lt;em&gt;故障快速转移&lt;/em&gt;，&lt;em&gt;catchbreak&lt;/em&gt;和&lt;em&gt;缓冲&lt;/em&gt;参数具有与相同名称的相同的效果&lt;a href=&quot;#command-line-options&quot;&gt;的命令行选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="874e26c7407b8380f904f71fc4795a0f8587333f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt; and &lt;em&gt;proto&lt;/em&gt; arguments can be optionally specified in order to narrow the list of addresses returned. Passing zero as a value for each of these arguments selects the full range of results. The &lt;em&gt;flags&lt;/em&gt; argument can be one or several of the &lt;code&gt;AI_*&lt;/code&gt; constants, and will influence how results are computed and returned. For example, &lt;code&gt;AI_NUMERICHOST&lt;/code&gt; will disable domain name resolution and will raise an error if &lt;em&gt;host&lt;/em&gt; is a domain name.</source>
          <target state="translated">该&lt;em&gt;家族&lt;/em&gt;，&lt;em&gt;类型&lt;/em&gt;和&lt;em&gt;原&lt;/em&gt;参数可以以缩小返回的地址的列表中随意指定的。为这些参数中的每个参数传递零作为值将选择整个结果范围。该&lt;em&gt;标志&lt;/em&gt;参数可以是一个或几个的 &lt;code&gt;AI_*&lt;/code&gt; 常数，并会影响结果的方式计算并返回。例如，如果&lt;em&gt;主机&lt;/em&gt;是域名，则 &lt;code&gt;AI_NUMERICHOST&lt;/code&gt; 将禁用域名解析，并会引发错误。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f85bfe90a7abfa4522d7aec6379ca2959433acc1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;field_name&lt;/em&gt; itself begins with an &lt;em&gt;arg_name&lt;/em&gt; that is either a number or a keyword. If it&amp;rsquo;s a number, it refers to a positional argument, and if it&amp;rsquo;s a keyword, it refers to a named keyword argument. If the numerical arg_names in a format string are 0, 1, 2, &amp;hellip; in sequence, they can all be omitted (not just some) and the numbers 0, 1, 2, &amp;hellip; will be automatically inserted in that order. Because &lt;em&gt;arg_name&lt;/em&gt; is not quote-delimited, it is not possible to specify arbitrary dictionary keys (e.g., the strings &lt;code&gt;'10'&lt;/code&gt; or &lt;code&gt;':-]'&lt;/code&gt;) within a format string. The &lt;em&gt;arg_name&lt;/em&gt; can be followed by any number of index or attribute expressions. An expression of the form &lt;code&gt;'.name'&lt;/code&gt; selects the named attribute using &lt;a href=&quot;functions#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt;, while an expression of the form &lt;code&gt;'[index]'&lt;/code&gt; does an index lookup using &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;em&gt;FIELD_NAME&lt;/em&gt;本身开始于&lt;em&gt;arg_name&lt;/em&gt;是一个数字或一个关键字。如果是数字，则表示位置参数，如果是关键字，则表示命名关键字参数。如果格式字符串中的数字arg_names依次为0、1、2，&amp;hellip;，则可以全部省略（不只是某些数字），数字0、1、2，&amp;hellip;将按该顺序自动插入。由于&lt;em&gt;arg_name&lt;/em&gt;不是用引号分隔的，因此无法在格式字符串中指定任意字典键（例如，字符串 &lt;code&gt;'10'&lt;/code&gt; 或 &lt;code&gt;':-]'&lt;/code&gt; ）。的&lt;em&gt;arg_name&lt;/em&gt;之后可以进行任何数量的索引或属性表达式。形式为 &lt;code&gt;'.name'&lt;/code&gt; 的表达式使用&lt;a href=&quot;functions#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt;选择命名属性，而形式为 &lt;code&gt;'[index]'&lt;/code&gt; 的表达式使用&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;进行索引查找。</target>
        </trans-unit>
        <trans-unit id="90f39f5920e4b70dcd2efd9d3e40a321fc16dc4d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;field_name&lt;/em&gt; itself begins with an &lt;em&gt;arg_name&lt;/em&gt; that is either a number or a keyword. If it&amp;rsquo;s a number, it refers to a positional argument, and if it&amp;rsquo;s a keyword, it refers to a named keyword argument. If the numerical arg_names in a format string are 0, 1, 2, &amp;hellip; in sequence, they can all be omitted (not just some) and the numbers 0, 1, 2, &amp;hellip; will be automatically inserted in that order. Because &lt;em&gt;arg_name&lt;/em&gt; is not quote-delimited, it is not possible to specify arbitrary dictionary keys (e.g., the strings &lt;code&gt;'10'&lt;/code&gt; or &lt;code&gt;':-]'&lt;/code&gt;) within a format string. The &lt;em&gt;arg_name&lt;/em&gt; can be followed by any number of index or attribute expressions. An expression of the form &lt;code&gt;'.name'&lt;/code&gt; selects the named attribute using &lt;a href=&quot;functions#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt;, while an expression of the form &lt;code&gt;'[index]'&lt;/code&gt; does an index lookup using &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;em&gt;FIELD_NAME&lt;/em&gt;本身开始于&lt;em&gt;arg_name&lt;/em&gt;是一个数字或一个关键字。如果是数字，则表示位置参数，如果是关键字，则表示命名关键字参数。如果格式字符串中的数字arg_name依次为0、1、2，&amp;hellip;，则可以全部省略（不只是某些数字），并且数字0、1、2，&amp;hellip;将按该顺序自动插入。由于&lt;em&gt;arg_name&lt;/em&gt;不是用引号分隔的，因此无法在格式字符串中指定任意字典键（例如，字符串 &lt;code&gt;'10'&lt;/code&gt; 或 &lt;code&gt;':-]'&lt;/code&gt; ）。的&lt;em&gt;arg_name&lt;/em&gt;之后可以进行任何数量的索引或属性表达式。形式为 &lt;code&gt;'.name'&lt;/code&gt; 的表达式使用&lt;a href=&quot;functions#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt;选择命名属性，而形式为 &lt;code&gt;'[index]'&lt;/code&gt; 的表达式使用&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;进行索引查找。</target>
        </trans-unit>
        <trans-unit id="c6d4fb8370566360de6f478e25e82c7c55877045" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;field_names&lt;/em&gt; are a sequence of strings such as &lt;code&gt;['x', 'y']&lt;/code&gt;. Alternatively, &lt;em&gt;field_names&lt;/em&gt; can be a single string with each fieldname separated by whitespace and/or commas, for example &lt;code&gt;'x y'&lt;/code&gt; or &lt;code&gt;'x, y'&lt;/code&gt;.</source>
          <target state="translated">的&lt;em&gt;FIELD_NAMES&lt;/em&gt;是字符串如序列 &lt;code&gt;['x', 'y']&lt;/code&gt; 。或者，&lt;em&gt;field_names&lt;/em&gt;可以是单个字符串，每个字段名用空格和/或逗号分隔，例如 &lt;code&gt;'x y'&lt;/code&gt; 或 &lt;code&gt;'x, y'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac35b9bd55fdc804fb4c9bb3bd701f67c7d5c57d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fieldnames&lt;/em&gt; parameter is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-sequence&quot;&gt;sequence&lt;/a&gt;. If &lt;em&gt;fieldnames&lt;/em&gt; is omitted, the values in the first row of file &lt;em&gt;f&lt;/em&gt; will be used as the fieldnames. Regardless of how the fieldnames are determined, the dictionary preserves their original ordering.</source>
          <target state="translated">的&lt;em&gt;字段名&lt;/em&gt;的参数是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-sequence&quot;&gt;序列&lt;/a&gt;。如果省略了&lt;em&gt;字段名&lt;/em&gt;，则文件&lt;em&gt;f&lt;/em&gt;第一行中的值将用作字段名。不管如何确定字段名，字典都将保留其原始顺序。</target>
        </trans-unit>
        <trans-unit id="ef84d61b49143906b402edc190aa09cf41450ecf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fieldnames&lt;/em&gt; parameter is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-sequence&quot;&gt;sequence&lt;/a&gt;. If &lt;em&gt;fieldnames&lt;/em&gt; is omitted, the values in the first row of file &lt;em&gt;f&lt;/em&gt; will be used as the fieldnames. Regardless of how the fieldnames are determined, the dictionary preserves their original ordering.</source>
          <target state="translated">的&lt;em&gt;字段名&lt;/em&gt;的参数是一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-sequence&quot;&gt;序列&lt;/a&gt;。如果省略了&lt;em&gt;字段名&lt;/em&gt;，则文件&lt;em&gt;f&lt;/em&gt;第一行中的值将用作字段名。无论如何确定字段名，该词典都将保留其原始顺序。</target>
        </trans-unit>
        <trans-unit id="86a8ce72332326de2cfebbc785262328b5fe47c2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; argument is an I/O stream to which the output is written; by default output is written to &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的&lt;em&gt;文件&lt;/em&gt;参数是其中输出被写入的I / O流; 默认情况下，输出将写入&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6040de02499cbcc78ffe2e6448ad957eea44c1ad" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; argument must be an object with a &lt;code&gt;write(string)&lt;/code&gt; method; if it is not present or &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; will be used. Since printed arguments are converted to text strings, &lt;a href=&quot;#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; cannot be used with binary mode file objects. For these, use &lt;code&gt;file.write(...)&lt;/code&gt; instead.</source>
          <target state="translated">的&lt;em&gt;文件&lt;/em&gt;参数必须是与对象 &lt;code&gt;write(string)&lt;/code&gt; 方法; 如果不存在或为 &lt;code&gt;None&lt;/code&gt; ，则将使用&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;。由于将打印的参数转换为文本字符串，因此&lt;a href=&quot;#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;不能与二进制模式文件对象一起使用。对于这些，请改用 &lt;code&gt;file.write(...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa19d5965537594f6e3e44281d687c4aee5dfebd" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; argument must have a write() method that accepts a single bytes argument. It can thus be an on-disk file opened for binary writing, an &lt;a href=&quot;io#io.BytesIO&quot;&gt;&lt;code&gt;io.BytesIO&lt;/code&gt;&lt;/a&gt; instance, or any other custom object that meets this interface.</source>
          <target state="translated">的&lt;em&gt;文件&lt;/em&gt;参数必须具有接受单个字节的参数写（）方法。因此，它可以是为二进制写入而打开的磁盘文件，&lt;a href=&quot;io#io.BytesIO&quot;&gt; &lt;code&gt;io.BytesIO&lt;/code&gt; &lt;/a&gt;实例或满足此接口的任何其他自定义对象。</target>
        </trans-unit>
        <trans-unit id="201c087ccb99a58c31b45c2b8d49929eddafdd3d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; must be kept open until the fault handler is disabled: see &lt;a href=&quot;#faulthandler-fd&quot;&gt;issue with file descriptors&lt;/a&gt;.</source>
          <target state="translated">在禁用故障处理程序之前，&lt;em&gt;文件&lt;/em&gt;必须保持打开状态：请参阅&lt;a href=&quot;#faulthandler-fd&quot;&gt;文件描述符问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3d824b624f53e9446bead5d0c937eff0e8b3123" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; must be kept open until the signal is unregistered by &lt;a href=&quot;#faulthandler.unregister&quot;&gt;&lt;code&gt;unregister()&lt;/code&gt;&lt;/a&gt;: see &lt;a href=&quot;#faulthandler-fd&quot;&gt;issue with file descriptors&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;文件&lt;/em&gt;，直到该信号被注销必须保持开放的&lt;a href=&quot;#faulthandler.unregister&quot;&gt; &lt;code&gt;unregister()&lt;/code&gt; &lt;/a&gt;：见&lt;a href=&quot;#faulthandler-fd&quot;&gt;文件描述符的问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c60c6ff1b28a53b914ece79a1a14de1b66fed36f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file&lt;/em&gt; must be kept open until the traceback is dumped or &lt;a href=&quot;#faulthandler.cancel_dump_traceback_later&quot;&gt;&lt;code&gt;cancel_dump_traceback_later()&lt;/code&gt;&lt;/a&gt; is called: see &lt;a href=&quot;#faulthandler-fd&quot;&gt;issue with file descriptors&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;文件&lt;/em&gt;直到回溯被倾倒或必须保持开放&lt;a href=&quot;#faulthandler.cancel_dump_traceback_later&quot;&gt; &lt;code&gt;cancel_dump_traceback_later()&lt;/code&gt; &lt;/a&gt;看到：被称为&lt;a href=&quot;#faulthandler-fd&quot;&gt;问题文件描述符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a5d02926f630f9388faa40b312c84ee98f366aa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;file_actions&lt;/em&gt; argument may be a sequence of tuples describing actions to take on specific file descriptors in the child process between the C library implementation&amp;rsquo;s &lt;code&gt;fork()&lt;/code&gt; and &lt;code&gt;exec()&lt;/code&gt; steps. The first item in each tuple must be one of the three type indicator listed below describing the remaining tuple elements:</source>
          <target state="translated">该&lt;em&gt;file_actions&lt;/em&gt;参数可以是描述的行为采取具体文件描述符的C库实现的之间的子进程元组序列 &lt;code&gt;fork()&lt;/code&gt; 和 &lt;code&gt;exec()&lt;/code&gt; 的步骤。每个元组中的第一项必须是下面列出的描述剩余元组元素的三个类型指示符之一：</target>
        </trans-unit>
        <trans-unit id="574ad47a01d4d5dcdc30c910d4f1c794203d0425" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filename&lt;/em&gt; argument can be an actual filename (a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object), or an existing file object to read from or write to.</source>
          <target state="translated">该&lt;em&gt;文件名&lt;/em&gt;参数可以是一个实际的文件名（一个&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象），或者现有文件对象来读取从或写入。</target>
        </trans-unit>
        <trans-unit id="f033d031375597aa29c16f1a2c2f915020115b6f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filename&lt;/em&gt; argument can be either an actual file name (given as a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object), in which case the named file is opened, or it can be an existing file object to read from or write to.</source>
          <target state="translated">该&lt;em&gt;文件名&lt;/em&gt;参数可以是一个实际的文件名（给定为一个&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径状&lt;/a&gt;物体），在这种情况下，指定的文件被打开，或者它可以是现有的文件对象来读取从或写入。</target>
        </trans-unit>
        <trans-unit id="0c479c05efc5b2dddea76faf2b1ab73e6034d128" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filename&lt;/em&gt; argument can be either an actual file name (given as a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like&lt;/a&gt; object), in which case the named file is opened, or it can be an existing file object to read from or write to.</source>
          <target state="translated">该&lt;em&gt;文件名&lt;/em&gt;参数可以是一个实际的文件名（给定为一个&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;路径状&lt;/a&gt;物体），在这种情况下，指定的文件被打开，或者它可以是现有的文件对象来读取从或写入。</target>
        </trans-unit>
        <trans-unit id="0545d354ccd3ed5753d4a3cb4b6a2b0b028f6ed5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filename&lt;/em&gt; argument should give the file from which the code was read; pass some recognizable value if it wasn&amp;rsquo;t read from a file (&lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; is commonly used).</source>
          <target state="translated">该&lt;em&gt;文件名&lt;/em&gt;参数应该给从代码读取的文件; 如果未从文件中读取该值，则传递一些可识别的值（通常使用 &lt;code&gt;'&amp;lt;string&amp;gt;'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="79131f6c9ec73987bfeb48e4342c755777c193ff" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filters&lt;/em&gt; argument (if provided) should be a filter chain specifier. See &lt;a href=&quot;#filter-chain-specs&quot;&gt;Specifying custom filter chains&lt;/a&gt; for details.</source>
          <target state="translated">该&lt;em&gt;过滤器&lt;/em&gt;参数（如果提供的话）应当是一种过滤器链说明符。有关详细信息，请参见&lt;a href=&quot;#filter-chain-specs&quot;&gt;指定自定义过滤器链&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="408e886918eee46fcb78729db9d3758b4414e533" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;filters&lt;/em&gt; argument specifies the filter chain that was used to create the stream being decompressed. This argument is required if &lt;em&gt;format&lt;/em&gt; is &lt;code&gt;FORMAT_RAW&lt;/code&gt;, but should not be used for other formats. See &lt;a href=&quot;#filter-chain-specs&quot;&gt;Specifying custom filter chains&lt;/a&gt; for more information about filter chains.</source>
          <target state="translated">该&lt;em&gt;过滤器&lt;/em&gt;参数指定用于创建被减压的流过滤器链。如果&lt;em&gt;format&lt;/em&gt;为 &lt;code&gt;FORMAT_RAW&lt;/code&gt; ，则此参数是必需的，但不应用于其他格式。有关&lt;a href=&quot;#filter-chain-specs&quot;&gt;过滤器链&lt;/a&gt;的更多信息，请参见指定自定义过滤器链。</target>
        </trans-unit>
        <trans-unit id="1f878d73c0efd98476dfc7a9b6cd6ad2c5b1de9d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;firstline&lt;/em&gt; flag indicates that it would be sufficient to only return the first line, if there are decoding errors on later lines.</source>
          <target state="translated">该&lt;em&gt;FIRSTLINE&lt;/em&gt;标志表示，这将是足以只返回第一线，如果有对后世行解码错误。</target>
        </trans-unit>
        <trans-unit id="ac4ac00687930f48d3d074bf948c94183e0fde15" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;flags&lt;/em&gt; entry shows that the rational approximation to &lt;code&gt;Pi&lt;/code&gt; was rounded (digits beyond the context precision were thrown away) and that the result is inexact (some of the discarded digits were non-zero).</source>
          <target state="translated">的&lt;em&gt;标志&lt;/em&gt;条目表明有理近似 &lt;code&gt;Pi&lt;/code&gt; 四舍五入（数字超出上下文精度被扔掉），并且所述结果不准确，（其中一些被丢弃的数字分别为非零）。</target>
        </trans-unit>
        <trans-unit id="6d6f6e39e403984a4847eaa33b4050de83b8f060" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fmt&lt;/em&gt; argument specifies the format of the plist file and can be one of the following values:</source>
          <target state="translated">该&lt;em&gt;FMT&lt;/em&gt;参数指定plist文件的格式，并且可以是以下值之一：</target>
        </trans-unit>
        <trans-unit id="082a80c3e67542d38e417ef51374d4c86db647c6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fmt&lt;/em&gt; is the format of the file and the following values are valid:</source>
          <target state="translated">该&lt;em&gt;FMT&lt;/em&gt;是文件的格式和下面的值是有效的：</target>
        </trans-unit>
        <trans-unit id="734f781d1046d3f0c2a738be36757146bb995a3f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;format&lt;/em&gt; argument specifies the container format that should be used. The default is &lt;code&gt;FORMAT_AUTO&lt;/code&gt;, which can decompress both &lt;code&gt;.xz&lt;/code&gt; and &lt;code&gt;.lzma&lt;/code&gt; files. Other possible values are &lt;code&gt;FORMAT_XZ&lt;/code&gt;, &lt;code&gt;FORMAT_ALONE&lt;/code&gt;, and &lt;code&gt;FORMAT_RAW&lt;/code&gt;.</source>
          <target state="translated">该&lt;em&gt;格式&lt;/em&gt;参数指定要使用的容器格式。默认值为 &lt;code&gt;FORMAT_AUTO&lt;/code&gt; ，可以解压缩 &lt;code&gt;.xz&lt;/code&gt; 和 &lt;code&gt;.lzma&lt;/code&gt; 文件。其他可能的值为 &lt;code&gt;FORMAT_XZ&lt;/code&gt; ， &lt;code&gt;FORMAT_ALONE&lt;/code&gt; 和 &lt;code&gt;FORMAT_RAW&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d0e2b25e206ba418847ddd00bd26fd5a6a4f7db" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;format&lt;/em&gt; argument specifies what container format should be used. Possible values are:</source>
          <target state="translated">该&lt;em&gt;格式&lt;/em&gt;应使用参数指定什么容器格式。可能的值为：</target>
        </trans-unit>
        <trans-unit id="04f2de35ac0704ac281d73b5042b2f29f702dc28" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;format&lt;/em&gt; parameter uses the same directives as those used by &lt;a href=&quot;#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt;; it defaults to &lt;code&gt;&quot;%a %b %d %H:%M:%S %Y&quot;&lt;/code&gt; which matches the formatting returned by &lt;a href=&quot;#time.ctime&quot;&gt;&lt;code&gt;ctime()&lt;/code&gt;&lt;/a&gt;. If &lt;em&gt;string&lt;/em&gt; cannot be parsed according to &lt;em&gt;format&lt;/em&gt;, or if it has excess data after parsing, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. The default values used to fill in any missing data when more accurate values cannot be inferred are &lt;code&gt;(1900, 1, 1, 0, 0, 0, 0, 1, -1)&lt;/code&gt;. Both &lt;em&gt;string&lt;/em&gt; and &lt;em&gt;format&lt;/em&gt; must be strings.</source>
          <target state="translated">该&lt;em&gt;格式&lt;/em&gt;参数使用相同的指令那些由所用&lt;a href=&quot;#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt; ;它默认为 &lt;code&gt;&quot;%a %b %d %H:%M:%S %Y&quot;&lt;/code&gt; ，它与&lt;a href=&quot;#time.ctime&quot;&gt; &lt;code&gt;ctime()&lt;/code&gt; &lt;/a&gt;返回的格式匹配。如果无法根据&lt;em&gt;format&lt;/em&gt;解析&lt;em&gt;字符串&lt;/em&gt;，或者解析后&lt;em&gt;字符串&lt;/em&gt;过多，则会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。无法推断出更准确的值时，用于填充任何缺失数据的默认值为 &lt;code&gt;(1900, 1, 1, 0, 0, 0, 0, 1, -1)&lt;/code&gt; 。这两个&lt;em&gt;字符串&lt;/em&gt;和&lt;em&gt;格式&lt;/em&gt;必须是字符串。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4acae6593e4e526e2dd1506dcee311e81a8b65fb" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;format_spec&lt;/em&gt; field contains a specification of how the value should be presented, including such details as field width, alignment, padding, decimal precision and so on. Each value type can define its own &amp;ldquo;formatting mini-language&amp;rdquo; or interpretation of the &lt;em&gt;format_spec&lt;/em&gt;.</source>
          <target state="translated">所述&lt;em&gt;format_spec&lt;/em&gt;字段包含的值应该如何被呈现，包括这样的细节如场宽度，对齐，填充，小数精度等的规范。每种值类型都可以定义自己的&amp;ldquo;格式迷你语言&amp;rdquo;或&lt;em&gt;format_spec的&lt;/em&gt;解释。</target>
        </trans-unit>
        <trans-unit id="4d65dc8f14d94c0d358e1bb13b0be3cd77bc040c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;from_addr&lt;/em&gt; and &lt;em&gt;to_addrs&lt;/em&gt; parameters are used to construct the message envelope used by the transport agents. &lt;code&gt;sendmail&lt;/code&gt; does not modify the message headers in any way.</source>
          <target state="translated">的&lt;em&gt;from_addr&lt;/em&gt;和&lt;em&gt;to_addrs&lt;/em&gt;参数被用于构建由传输代理使用的消息信封。 &lt;code&gt;sendmail&lt;/code&gt; 不会以任何方式修改邮件头。</target>
        </trans-unit>
        <trans-unit id="8f0efc2987cba5877b55bc8427e0a05d7b5359a2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fullname&lt;/em&gt; argument is a fully resolved name of the module the loader is to handle. The &lt;em&gt;path&lt;/em&gt; argument is the path to the file for the module.</source>
          <target state="translated">该&lt;em&gt;全称&lt;/em&gt;参数是模块加载程序处理的完全解析名称。该&lt;em&gt;路径&lt;/em&gt;参数是路径，该模块的文件。</target>
        </trans-unit>
        <trans-unit id="e3b5b1e7f6306fdfed32d8aa3e48723c730e25bb" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fullname&lt;/em&gt; argument specifies the name of the module the loader is to support. The &lt;em&gt;path&lt;/em&gt; argument is the path to the extension module&amp;rsquo;s file.</source>
          <target state="translated">该&lt;em&gt;全称&lt;/em&gt;参数指定的模块加载器是支持的名称。该&lt;em&gt;路径&lt;/em&gt;参数是路径扩展模块的文件。</target>
        </trans-unit>
        <trans-unit id="945b0cd999a4b800654797e3d0ae5eddc4b8534c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;handler&lt;/em&gt; is called with two arguments: the signal number and the current stack frame (&lt;code&gt;None&lt;/code&gt; or a frame object; for a description of frame objects, see the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#frame-objects&quot;&gt;description in the type hierarchy&lt;/a&gt; or see the attribute descriptions in the &lt;a href=&quot;inspect#module-inspect&quot;&gt;&lt;code&gt;inspect&lt;/code&gt;&lt;/a&gt; module).</source>
          <target state="translated">使用两个参数调用该&lt;em&gt;处理程序&lt;/em&gt;：信号编号和当前堆栈帧（ &lt;code&gt;None&lt;/code&gt; 或帧对象；有关帧对象的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#frame-objects&quot;&gt;描述&lt;/a&gt;，请参见类型层次结构中的描述或请参见&lt;a href=&quot;inspect#module-inspect&quot;&gt; &lt;code&gt;inspect&lt;/code&gt; &lt;/a&gt;模块中的属性描述）。</target>
        </trans-unit>
        <trans-unit id="9b15c4ee384b0706ae1265715fc5409c2d764a22" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;handler&lt;/em&gt; is called with two arguments: the signal number and the current stack frame (&lt;code&gt;None&lt;/code&gt; or a frame object; for a description of frame objects, see the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#frame-objects&quot;&gt;description in the type hierarchy&lt;/a&gt; or see the attribute descriptions in the &lt;a href=&quot;inspect#module-inspect&quot;&gt;&lt;code&gt;inspect&lt;/code&gt;&lt;/a&gt; module).</source>
          <target state="translated">调用该&lt;em&gt;处理程序&lt;/em&gt;有两个参数：信号编号和当前堆栈帧（ &lt;code&gt;None&lt;/code&gt; 或帧对象；有关帧对象的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#frame-objects&quot;&gt;描述&lt;/a&gt;，请参见类型层次结构中的描述或参见&lt;a href=&quot;inspect#module-inspect&quot;&gt; &lt;code&gt;inspect&lt;/code&gt; &lt;/a&gt;模块中的属性描述）。</target>
        </trans-unit>
        <trans-unit id="5c0d1f32a3c5ced96c19803c4ef9d22ef4513b71" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;headers&lt;/em&gt; argument should be a mapping of extra HTTP headers to send with the request.</source>
          <target state="translated">该&lt;em&gt;头&lt;/em&gt;参数应该是额外的HTTP标头的映射与发送请求。</target>
        </trans-unit>
        <trans-unit id="5a6eea28dbdb86941e4e47c17df323a2b65db50f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;host&lt;/em&gt; parameter can be set to several types which determine where the server would be listening:</source>
          <target state="translated">该&lt;em&gt;主机&lt;/em&gt;参数可设定为几种类型的确定，其中服务器会听：</target>
        </trans-unit>
        <trans-unit id="3567013f4ba803cbc03a19e951935ba9875d379e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;input&lt;/em&gt; argument is passed to &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;Popen.communicate()&lt;/code&gt;&lt;/a&gt; and thus to the subprocess&amp;rsquo;s stdin. If used it must be a byte sequence, or a string if &lt;em&gt;encoding&lt;/em&gt; or &lt;em&gt;errors&lt;/em&gt; is specified or &lt;em&gt;text&lt;/em&gt; is true. When used, the internal &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; object is automatically created with &lt;code&gt;stdin=PIPE&lt;/code&gt;, and the &lt;em&gt;stdin&lt;/em&gt; argument may not be used as well.</source>
          <target state="translated">该&lt;em&gt;输入&lt;/em&gt;参数被传递给&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;Popen.communicate()&lt;/code&gt; &lt;/a&gt;，并因此子进程的stdin。如果使用，则必须为字节序列，如果指定了&lt;em&gt;编码&lt;/em&gt;或&lt;em&gt;错误&lt;/em&gt;或&lt;em&gt;文本&lt;/em&gt;为true ，则必须为字符串。使用时，将使用 &lt;code&gt;stdin=PIPE&lt;/code&gt; 自动创建内部&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;对象，并且可能不使用&lt;em&gt;stdin&lt;/em&gt;参数。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="309add7406369c9e13cbbe07f0abac084c4aeac9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;interpreter&lt;/em&gt; argument specifies the name of the Python interpreter with which the archive will be executed. It is written as a &amp;ldquo;shebang&amp;rdquo; line at the start of the archive. On POSIX, this will be interpreted by the OS, and on Windows it will be handled by the Python launcher. Omitting the &lt;em&gt;interpreter&lt;/em&gt; results in no shebang line being written. If an interpreter is specified, and the target is a filename, the executable bit of the target file will be set.</source>
          <target state="translated">该&lt;em&gt;解释&lt;/em&gt;参数指定与归档将执行Python解释器的名称。在档案开始处将其写为&amp;ldquo; shebang&amp;rdquo;行。在POSIX上，这将由OS解释，而在Windows上，将由Python启动器处理。省略&lt;em&gt;解释器将&lt;/em&gt;不会写入任何shebang行。如果指定了解释器，并且目标是文件名，则将设置目标文件的可执行位。</target>
        </trans-unit>
        <trans-unit id="2bc413367ebb6cea357fcef201d058874ef7a2cd" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;keyencoding&lt;/em&gt; parameter is the encoding used to encode keys before they are used with the underlying dict.</source>
          <target state="translated">所述&lt;em&gt;keyencoding&lt;/em&gt;参数是它们与下面的字典使用之前用于编码密钥的编码。</target>
        </trans-unit>
        <trans-unit id="3e344c69f7b03d28b5ecf255f27851cd1ec1b42a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;limit&lt;/em&gt; argument is passed to &lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt;&lt;code&gt;get_stack()&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">该&lt;em&gt;极限&lt;/em&gt;参数传递给&lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt; &lt;code&gt;get_stack()&lt;/code&gt; &lt;/a&gt;直接。</target>
        </trans-unit>
        <trans-unit id="03da4d795bd5e7eacf03e419e5465b47a81aab14" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;limit&lt;/em&gt; argument sets the buffer limit for &lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; wrappers for &lt;code&gt;Process.stdout&lt;/code&gt; and &lt;code&gt;Process.stderr&lt;/code&gt; (if &lt;a href=&quot;subprocess#subprocess.PIPE&quot;&gt;&lt;code&gt;subprocess.PIPE&lt;/code&gt;&lt;/a&gt; is passed to &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; arguments).</source>
          <target state="translated">的&lt;em&gt;极限&lt;/em&gt;参数设置为缓冲区限制&lt;a href=&quot;asyncio-stream#asyncio.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; 的&lt;/a&gt;包装器 &lt;code&gt;Process.stdout&lt;/code&gt; 和 &lt;code&gt;Process.stderr&lt;/code&gt; （如果&lt;a href=&quot;subprocess#subprocess.PIPE&quot;&gt; &lt;code&gt;subprocess.PIPE&lt;/code&gt; &lt;/a&gt;被传递到&lt;em&gt;标准输出&lt;/em&gt;和&lt;em&gt;stderr的&lt;/em&gt;参数）。</target>
        </trans-unit>
        <trans-unit id="129e7c784b9b3ee51082a82585d3133b4d781544" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;loader_details&lt;/em&gt; argument is a variable number of 2-item tuples each containing a loader and a sequence of file suffixes the loader recognizes. The loaders are expected to be callables which accept two arguments of the module&amp;rsquo;s name and the path to the file found.</source>
          <target state="translated">所述&lt;em&gt;loader_details&lt;/em&gt;参数是两个项的可变数量的元组各自含有一个加载程序和文件的后缀序列加载器识别。加载程序应该是可调用的，可以接受模块名称和找到的文件路径的两个参数。</target>
        </trans-unit>
        <trans-unit id="c4075eb186f5064895077ca769fb8de129e00f4c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;loop&lt;/em&gt; argument is optional and can always be determined automatically when this function is awaited from a coroutine.</source>
          <target state="translated">所述&lt;em&gt;环路&lt;/em&gt;参数是可选的，并且当该功能是从一个协程等待总是可以自动地确定。</target>
        </trans-unit>
        <trans-unit id="73a8039d019649d2ee4bb760661a133481fe2941" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;loop&lt;/em&gt; argument is optional and can always be determined automatically when this method is awaited from a coroutine.</source>
          <target state="translated">&lt;em&gt;loop&lt;/em&gt;参数是可选的，当从协程等待该方法时，总是可以自动确定该参数。</target>
        </trans-unit>
        <trans-unit id="c152814f2f36109416e46a812106fb4bb59ade66" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;main&lt;/em&gt; argument specifies the name of a callable which will be used as the main program for the archive. It can only be specified if the source is a directory, and the source does not already contain a &lt;code&gt;__main__.py&lt;/code&gt; file. The &lt;em&gt;main&lt;/em&gt; argument should take the form &amp;ldquo;pkg.module:callable&amp;rdquo; and the archive will be run by importing &amp;ldquo;pkg.module&amp;rdquo; and executing the given callable with no arguments. It is an error to omit &lt;em&gt;main&lt;/em&gt; if the source is a directory and does not contain a &lt;code&gt;__main__.py&lt;/code&gt; file, as otherwise the resulting archive would not be executable.</source>
          <target state="translated">的&lt;em&gt;主要&lt;/em&gt;参数指定将被用作归档主程序调用的名称。仅当源是目录并且源不包含 &lt;code&gt;__main__.py&lt;/code&gt; 文件时才能指定。的&lt;em&gt;主要&lt;/em&gt;论点应采取的形式&amp;ldquo;pkg.module：调用&amp;rdquo;和存档将通过导入&amp;ldquo;pkg.module&amp;rdquo;，并执行给定的调用不带参数运行。如果源是目录并且不包含 &lt;code&gt;__main__.py&lt;/code&gt; 文件，则省略&lt;em&gt;main&lt;/em&gt;是一个错误，否则生成的存档将无法执行。</target>
        </trans-unit>
        <trans-unit id="a792d7ef7a7c58a9f18c32feedd94d015e4b0544" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;map&lt;/em&gt; parameter is a dictionary whose items are the channels to watch. As channels are closed they are deleted from their map. If &lt;em&gt;map&lt;/em&gt; is omitted, a global map is used. Channels (instances of &lt;a href=&quot;#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asynchat#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt; and subclasses thereof) can freely be mixed in the map.</source>
          <target state="translated">该&lt;em&gt;地图&lt;/em&gt;参数是一个字典，字典的项目是观看渠道。通道关闭后，会将其从地图中删除。如果&lt;em&gt;地图&lt;/em&gt;被省略，则使用一个全球性的地图。通道（&lt;a href=&quot;#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asynchat#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; &lt;/a&gt;及其子类的实例）可以在地图中自由混合。</target>
        </trans-unit>
        <trans-unit id="5de3df102b5a039ab9487bee97ffa75b5ffdf2c3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;maxlevels&lt;/em&gt; parameter is used to limit the depth of the recursion; it defaults to &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">所述&lt;em&gt;maxlevels&lt;/em&gt;参数用于限制递归的深度; 它默认为 &lt;code&gt;10&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b1e7f8bf782873ab6877666a267652d65709837" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;maxlevels&lt;/em&gt; parameter is used to limit the depth of the recursion; it defaults to &lt;code&gt;sys.getrecursionlimit()&lt;/code&gt;.</source>
          <target state="translated">所述&lt;em&gt;maxlevels&lt;/em&gt;参数用于限制递归的深度; 它默认为 &lt;code&gt;sys.getrecursionlimit()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb182bf741586c60f69a2721098eca2297c8d83d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;memLevel&lt;/em&gt; argument controls the amount of memory used for the internal compression state. Valid values range from &lt;code&gt;1&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt;. Higher values use more memory, but are faster and produce smaller output.</source>
          <target state="translated">所述&lt;em&gt;memLevel&lt;/em&gt;参数控制的存储器用于内部压缩状态的量。有效值的范围是 &lt;code&gt;1&lt;/code&gt; 到 &lt;code&gt;9&lt;/code&gt; 。较高的值使用更多的内存，但速度更快，并产生较小的输出。</target>
        </trans-unit>
        <trans-unit id="472e6487f68d04bf8fdb5f7c1716adfc521275a9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;memlimit&lt;/em&gt; argument specifies a limit (in bytes) on the amount of memory that the decompressor can use. When this argument is used, decompression will fail with an &lt;a href=&quot;#lzma.LZMAError&quot;&gt;&lt;code&gt;LZMAError&lt;/code&gt;&lt;/a&gt; if it is not possible to decompress the input within the given memory limit.</source>
          <target state="translated">的&lt;em&gt;MEMLIMIT&lt;/em&gt;参数指定的内存，该解压缩器可使用量的限制（以字节为单位）。使用此参数时，如果无法在给定的内存限制内对输入进行解压缩，则解压缩将失败并显示&lt;a href=&quot;#lzma.LZMAError&quot;&gt; &lt;code&gt;LZMAError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ed4f7ee0127a5c81a5c5fe6eca67c71e17a81c7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;message_set&lt;/em&gt; options to commands below is a string specifying one or more messages to be acted upon. It may be a simple message number (&lt;code&gt;'1'&lt;/code&gt;), a range of message numbers (&lt;code&gt;'2:4'&lt;/code&gt;), or a group of non-contiguous ranges separated by commas (&lt;code&gt;'1:3,6:9'&lt;/code&gt;). A range can contain an asterisk to indicate an infinite upper bound (&lt;code&gt;'3:*'&lt;/code&gt;).</source>
          <target state="translated">以下命令的&lt;em&gt;message_set&lt;/em&gt;选项是一个字符串，用于指定要执行的一条或多条消息。它可以是一个简单的消息号（ &lt;code&gt;'1'&lt;/code&gt; ），一个消息号范围（ &lt;code&gt;'2:4'&lt;/code&gt; ）或一组用逗号分隔的非连续范围（ &lt;code&gt;'1:3,6:9'&lt;/code&gt; ）。一个范围可以包含一个星号，以指示一个无限的上限（ &lt;code&gt;'3:*'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1ac518a8261cd76e3d572450cd69c2da8d19e734" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;method&lt;/em&gt; for computing quantiles can be varied depending on whether the &lt;em&gt;data&lt;/em&gt; includes or excludes the lowest and highest possible values from the population.</source>
          <target state="translated">计算分位数的&lt;em&gt;方法&lt;/em&gt;可以根据&lt;em&gt;数据&lt;/em&gt;是否包括总体中的最低和最高值而有所不同。</target>
        </trans-unit>
        <trans-unit id="8ecb6288199428438fe4ea40f2513dfb74080c75" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mock&lt;/em&gt; argument is the mock object to configure. If &lt;code&gt;None&lt;/code&gt; (the default) then a &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; will be created for you, with the API limited to methods or attributes available on standard file handles.</source>
          <target state="translated">该&lt;em&gt;模拟&lt;/em&gt;参数为模拟对象进行配置。如果 &lt;code&gt;None&lt;/code&gt; （默认），则将为您创建一个&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;，其API限于标准文件句柄上可用的方法或属性。</target>
        </trans-unit>
        <trans-unit id="895803f0fac68124dcdbdc694aeabdf8d07767b7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mod_name&lt;/em&gt; argument should be an absolute module name. If the module name refers to a package rather than a normal module, then that package is imported and the &lt;code&gt;__main__&lt;/code&gt; submodule within that package is then executed and the resulting module globals dictionary returned.</source>
          <target state="translated">该&lt;em&gt;mod_name&lt;/em&gt;参数应该是一个绝对的模块名称。如果模块名称引用的是软件包而不是普通模块，则导入该软件包，然后执行该软件包中的 &lt;code&gt;__main__&lt;/code&gt; 子模块，并返回生成的模块全局字典。</target>
        </trans-unit>
        <trans-unit id="a6df0bfcf373c1c06747418e51fd35f70f7733a3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be any of &lt;code&gt;&quot;r&quot;&lt;/code&gt;, &lt;code&gt;&quot;rb&quot;&lt;/code&gt;, &lt;code&gt;&quot;w&quot;&lt;/code&gt;, &lt;code&gt;&quot;wb&quot;&lt;/code&gt;, &lt;code&gt;&quot;x&quot;&lt;/code&gt;, &lt;code&gt;&quot;xb&quot;&lt;/code&gt;, &lt;code&gt;&quot;a&quot;&lt;/code&gt; or &lt;code&gt;&quot;ab&quot;&lt;/code&gt; for binary mode, or &lt;code&gt;&quot;rt&quot;&lt;/code&gt;, &lt;code&gt;&quot;wt&quot;&lt;/code&gt;, &lt;code&gt;&quot;xt&quot;&lt;/code&gt;, or &lt;code&gt;&quot;at&quot;&lt;/code&gt; for text mode. The default is &lt;code&gt;&quot;rb&quot;&lt;/code&gt;.</source>
          <target state="translated">所述&lt;em&gt;模式&lt;/em&gt;参数可以是任何的 &lt;code&gt;&quot;r&quot;&lt;/code&gt; ， &lt;code&gt;&quot;rb&quot;&lt;/code&gt; ， &lt;code&gt;&quot;w&quot;&lt;/code&gt; ， &lt;code&gt;&quot;wb&quot;&lt;/code&gt; ， &lt;code&gt;&quot;x&quot;&lt;/code&gt; ， &lt;code&gt;&quot;xb&quot;&lt;/code&gt; &amp;ldquo; &lt;code&gt;&quot;a&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;ab&quot;&lt;/code&gt; 为二进制模式，或 &lt;code&gt;&quot;rt&quot;&lt;/code&gt; ， &lt;code&gt;&quot;wt&quot;&lt;/code&gt; ， &lt;code&gt;&quot;xt&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;at&quot;&lt;/code&gt; 表示文本模式。默认值为 &lt;code&gt;&quot;rb&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d1ad98a2dd540caaea8a1f22878e9101d4e6629" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be any of &lt;code&gt;'r'&lt;/code&gt;, &lt;code&gt;'rb'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'ab'&lt;/code&gt;, &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'wb'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt; or &lt;code&gt;'xb'&lt;/code&gt; for binary mode, or &lt;code&gt;'rt'&lt;/code&gt;, &lt;code&gt;'at'&lt;/code&gt;, &lt;code&gt;'wt'&lt;/code&gt;, or &lt;code&gt;'xt'&lt;/code&gt; for text mode. The default is &lt;code&gt;'rb'&lt;/code&gt;.</source>
          <target state="translated">所述&lt;em&gt;模式&lt;/em&gt;参数可以是任何的 &lt;code&gt;'r'&lt;/code&gt; ， &lt;code&gt;'rb'&lt;/code&gt; ， &lt;code&gt;'a'&lt;/code&gt; ， &lt;code&gt;'ab'&lt;/code&gt; ， &lt;code&gt;'w'&lt;/code&gt; ， &lt;code&gt;'wb'&lt;/code&gt; ， &lt;code&gt;'x'&lt;/code&gt; 或 &lt;code&gt;'xb'&lt;/code&gt; 为二进制模式，或 &lt;code&gt;'rt'&lt;/code&gt; ， &lt;code&gt;'at'&lt;/code&gt; ， &lt;code&gt;'wt'&lt;/code&gt; 或 &lt;code&gt;'xt'&lt;/code&gt; 用于文本模式。默认值为 &lt;code&gt;'rb'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e823bc32f269eed5bbc36974b6041d7caeefce7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be any of &lt;code&gt;'r'&lt;/code&gt;, &lt;code&gt;'rb'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'ab'&lt;/code&gt;, &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'wb'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, or &lt;code&gt;'xb'&lt;/code&gt;, depending on whether the file will be read or written. The default is the mode of &lt;em&gt;fileobj&lt;/em&gt; if discernible; otherwise, the default is &lt;code&gt;'rb'&lt;/code&gt;.</source>
          <target state="translated">所述&lt;em&gt;模式&lt;/em&gt;参数可以是任何的 &lt;code&gt;'r'&lt;/code&gt; ， &lt;code&gt;'rb'&lt;/code&gt; ， &lt;code&gt;'a'&lt;/code&gt; ， &lt;code&gt;'ab'&lt;/code&gt; ， &lt;code&gt;'w'&lt;/code&gt; ， &lt;code&gt;'wb'&lt;/code&gt; ， &lt;code&gt;'x'&lt;/code&gt; ，或 &lt;code&gt;'xb'&lt;/code&gt; ，根据文件是否将被读出或写入。如果可以识别，则默认为&lt;em&gt;fileobj&lt;/em&gt;的模式。否则，默认值为 &lt;code&gt;'rb'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01e888834025d34e45dccf64510222906c9508c3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be any of &lt;code&gt;'r'&lt;/code&gt;, &lt;code&gt;'rb'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'ab'&lt;/code&gt;, &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'wb'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, or &lt;code&gt;'xb'&lt;/code&gt;, depending on whether the file will be read or written. The default is the mode of &lt;em&gt;fileobj&lt;/em&gt; if discernible; otherwise, the default is &lt;code&gt;'rb'&lt;/code&gt;. In future Python releases the mode of &lt;em&gt;fileobj&lt;/em&gt; will not be used. It is better to always specify &lt;em&gt;mode&lt;/em&gt; for writing.</source>
          <target state="translated">所述&lt;em&gt;模式&lt;/em&gt;参数可以是任何的 &lt;code&gt;'r'&lt;/code&gt; ， &lt;code&gt;'rb'&lt;/code&gt; ， &lt;code&gt;'a'&lt;/code&gt; ， &lt;code&gt;'ab'&lt;/code&gt; ， &lt;code&gt;'w'&lt;/code&gt; ， &lt;code&gt;'wb'&lt;/code&gt; ， &lt;code&gt;'x'&lt;/code&gt; ，或 &lt;code&gt;'xb'&lt;/code&gt; ，根据文件是否将被读出或写入。如果可以识别，则默认为&lt;em&gt;fileobj&lt;/em&gt;的模式。否则，默认值为 &lt;code&gt;'rb'&lt;/code&gt; 。在将来的Python版本中，将不使用&lt;em&gt;fileobj&lt;/em&gt;的模式。最好始终指定写入&lt;em&gt;模式&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="05f2a9cda1e91039c7b1edb582c41248bba08bd5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be any of &lt;code&gt;'r'&lt;/code&gt;, &lt;code&gt;'rb'&lt;/code&gt;, &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'wb'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, &lt;code&gt;'xb'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt; or &lt;code&gt;'ab'&lt;/code&gt; for binary mode, or &lt;code&gt;'rt'&lt;/code&gt;, &lt;code&gt;'wt'&lt;/code&gt;, &lt;code&gt;'xt'&lt;/code&gt;, or &lt;code&gt;'at'&lt;/code&gt; for text mode. The default is &lt;code&gt;'rb'&lt;/code&gt;.</source>
          <target state="translated">所述&lt;em&gt;模式&lt;/em&gt;参数可以是任何的 &lt;code&gt;'r'&lt;/code&gt; ， &lt;code&gt;'rb'&lt;/code&gt; ， &lt;code&gt;'w'&lt;/code&gt; ， &lt;code&gt;'wb'&lt;/code&gt; ， &lt;code&gt;'x'&lt;/code&gt; ， &lt;code&gt;'xb'&lt;/code&gt; ， &lt;code&gt;'a'&lt;/code&gt; 或 &lt;code&gt;'ab'&lt;/code&gt; 开始于二进制模式，或 &lt;code&gt;'rt'&lt;/code&gt; ， &lt;code&gt;'wt'&lt;/code&gt; ， &lt;code&gt;'xt'&lt;/code&gt; 或 &lt;code&gt;'at'&lt;/code&gt; 表示文本模式。默认是 &lt;code&gt;'rb'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f4dcb1c4c38de2058990b6b6c09d3880a922fe2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be either &lt;code&gt;&quot;r&quot;&lt;/code&gt; for reading (default), &lt;code&gt;&quot;w&quot;&lt;/code&gt; for overwriting, &lt;code&gt;&quot;x&quot;&lt;/code&gt; for exclusive creation, or &lt;code&gt;&quot;a&quot;&lt;/code&gt; for appending. These can equivalently be given as &lt;code&gt;&quot;rb&quot;&lt;/code&gt;, &lt;code&gt;&quot;wb&quot;&lt;/code&gt;, &lt;code&gt;&quot;xb&quot;&lt;/code&gt; and &lt;code&gt;&quot;ab&quot;&lt;/code&gt; respectively.</source>
          <target state="translated">所述&lt;em&gt;模式&lt;/em&gt;参数可以是 &lt;code&gt;&quot;r&quot;&lt;/code&gt; ，用于读取（默认值）， &lt;code&gt;&quot;w&quot;&lt;/code&gt; 进行重写， &lt;code&gt;&quot;x&quot;&lt;/code&gt; 为独占的创建，或 &lt;code&gt;&quot;a&quot;&lt;/code&gt; 用于附加。可以分别等效地将它们分别指定为 &lt;code&gt;&quot;rb&quot;&lt;/code&gt; ， &lt;code&gt;&quot;wb&quot;&lt;/code&gt; ， &lt;code&gt;&quot;xb&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;ab&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3bbeddbe7940e4c0cf370c80c9188d583fa75ae" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument can be either &lt;code&gt;'r'&lt;/code&gt; for reading (default), &lt;code&gt;'w'&lt;/code&gt; for overwriting, &lt;code&gt;'x'&lt;/code&gt; for exclusive creation, or &lt;code&gt;'a'&lt;/code&gt; for appending. These can equivalently be given as &lt;code&gt;'rb'&lt;/code&gt;, &lt;code&gt;'wb'&lt;/code&gt;, &lt;code&gt;'xb'&lt;/code&gt; and &lt;code&gt;'ab'&lt;/code&gt; respectively.</source>
          <target state="translated">所述&lt;em&gt;模式&lt;/em&gt;参数可以是 &lt;code&gt;'r'&lt;/code&gt; ，用于读取（默认值）， &lt;code&gt;'w'&lt;/code&gt; 进行重写， &lt;code&gt;'x'&lt;/code&gt; 为独占的创建，或 &lt;code&gt;'a'&lt;/code&gt; 为追加。可以分别等效地将它们分别指定为 &lt;code&gt;'rb'&lt;/code&gt; ， &lt;code&gt;'wb'&lt;/code&gt; ， &lt;code&gt;'xb'&lt;/code&gt; 和 &lt;code&gt;'ab'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e63d1cb834b1ab465f8f51a8d33b391f5ded1c0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; argument specifies what kind of code must be compiled; it can be &lt;code&gt;'exec'&lt;/code&gt; if &lt;em&gt;source&lt;/em&gt; consists of a sequence of statements, &lt;code&gt;'eval'&lt;/code&gt; if it consists of a single expression, or &lt;code&gt;'single'&lt;/code&gt; if it consists of a single interactive statement (in the latter case, expression statements that evaluate to something other than &lt;code&gt;None&lt;/code&gt; will be printed).</source>
          <target state="translated">该&lt;em&gt;模式&lt;/em&gt;参数指定必须编译什么样的代码; 如果&lt;em&gt;source&lt;/em&gt;由语句序列组成，则可以为 &lt;code&gt;'exec'&lt;/code&gt; 如果它由单个表达式组成，则可以为&amp;ldquo; &lt;code&gt;'eval'&lt;/code&gt; 如果它由单个交互语句组成，则可以为 &lt;code&gt;'single'&lt;/code&gt; （在后一种情况下，表达式语句的计算结果为某值）除 &lt;code&gt;None&lt;/code&gt; 以外，将被打印。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef0505b4bacc6ef52a11195116452b65f0988586" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; can be &lt;code&gt;'r'&lt;/code&gt;, &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt; or &lt;code&gt;'a'&lt;/code&gt; for reading (default), writing, exclusive creation or appending. The file will be created if it doesn&amp;rsquo;t exist when opened for writing or appending; it will be truncated when opened for writing. &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; will be raised if it already exists when opened for creating. Opening a file for creating implies writing, so this mode behaves in a similar way to &lt;code&gt;'w'&lt;/code&gt;. Add a &lt;code&gt;'+'&lt;/code&gt; to the mode to allow simultaneous reading and writing.</source>
          <target state="translated">该&lt;em&gt;模式&lt;/em&gt;可以是 &lt;code&gt;'r'&lt;/code&gt; ， &lt;code&gt;'w'&lt;/code&gt; ， &lt;code&gt;'x'&lt;/code&gt; 或 &lt;code&gt;'a'&lt;/code&gt; 用于读取（默认），编写，排他创建或附加。如果在打开以进行写入或追加时不存在该文件，则将创建该文件；打开书写时将被截断。如果在打开创建时已经存在&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; ,&lt;/a&gt;则将引发FileExistsError。打开文件进行创建意味着要进行写入，因此该模式的行为与 &lt;code&gt;'w'&lt;/code&gt; 相似。在模式中添加 &lt;code&gt;'+'&lt;/code&gt; 以允许同时读取和写入。</target>
        </trans-unit>
        <trans-unit id="c36342d9b2cd8356ce1d1833db576291385536ce" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; parameter can be used to specify how the library is loaded. For details, consult the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/dlopen(3)&quot;&gt;dlopen(3)&lt;/a&gt;&lt;/em&gt; manpage. On Windows, &lt;em&gt;mode&lt;/em&gt; is ignored. On posix systems, RTLD_NOW is always added, and is not configurable.</source>
          <target state="translated">该&lt;em&gt;模式&lt;/em&gt;参数可用于指定库的加载方式。有关详细信息，请查阅&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/dlopen(3)&quot;&gt;dlopen（3）&lt;/a&gt;&lt;/em&gt;联机帮助页。在Windows上，&lt;em&gt;模式将&lt;/em&gt;被忽略。在posix系统上，始终添加RTLD_NOW，并且不可配置。</target>
        </trans-unit>
        <trans-unit id="f9fa2d230db8cbbf537de152e5285ab6acbcd9db" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; parameter defaults to &lt;code&gt;'w+b'&lt;/code&gt; so that the file created can be read and written without being closed. Binary mode is used so that it behaves consistently on all platforms without regard for the data that is stored. &lt;em&gt;buffering&lt;/em&gt;, &lt;em&gt;encoding&lt;/em&gt;, &lt;em&gt;errors&lt;/em&gt; and &lt;em&gt;newline&lt;/em&gt; are interpreted as for &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;em&gt;模式&lt;/em&gt;参数的缺省值为 &lt;code&gt;'w+b'&lt;/code&gt; ，以便创建可以读出和写入，而不文件被关闭。使用二进制模式，因此它在所有平台上均表现一致，而无需考虑存储的数据。&lt;em&gt;缓冲&lt;/em&gt;，&lt;em&gt;编码&lt;/em&gt;，&lt;em&gt;错误&lt;/em&gt;和&lt;em&gt;换行符&lt;/em&gt;与&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; 相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12a05a95436429873a1482da4eed5e970b00fe32" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; parameter is passed to &lt;a href=&quot;#os.mkdir&quot;&gt;&lt;code&gt;mkdir()&lt;/code&gt;&lt;/a&gt; for creating the leaf directory; see &lt;a href=&quot;#mkdir-modebits&quot;&gt;the mkdir() description&lt;/a&gt; for how it is interpreted. To set the file permission bits of any newly-created parent directories you can set the umask before invoking &lt;a href=&quot;#os.makedirs&quot;&gt;&lt;code&gt;makedirs()&lt;/code&gt;&lt;/a&gt;. The file permission bits of existing parent directories are not changed.</source>
          <target state="translated">所述&lt;em&gt;模式&lt;/em&gt;参数被传递给&lt;a href=&quot;#os.mkdir&quot;&gt; &lt;code&gt;mkdir()&lt;/code&gt; &lt;/a&gt;用于创建叶目录; 有关如何解释的信息，请参见&lt;a href=&quot;#mkdir-modebits&quot;&gt;mkdir（）描述&lt;/a&gt;。要设置任何新创建的父目录的文件许可权位，可以在调用&lt;a href=&quot;#os.makedirs&quot;&gt; &lt;code&gt;makedirs()&lt;/code&gt; &lt;/a&gt;之前设置umask 。现有父目录的文件权限位不会更改。</target>
        </trans-unit>
        <trans-unit id="4d337cbd57242ea9761dc2650a1be72d8a8a94e3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mode&lt;/em&gt; parameter should be &lt;code&gt;'r'&lt;/code&gt; to read an existing file, &lt;code&gt;'w'&lt;/code&gt; to truncate and write a new file, &lt;code&gt;'a'&lt;/code&gt; to append to an existing file, or &lt;code&gt;'x'&lt;/code&gt; to exclusively create and write a new file. If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'x'&lt;/code&gt; and &lt;em&gt;file&lt;/em&gt; refers to an existing file, a &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; will be raised. If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'a'&lt;/code&gt; and &lt;em&gt;file&lt;/em&gt; refers to an existing ZIP file, then additional files are added to it. If &lt;em&gt;file&lt;/em&gt; does not refer to a ZIP file, then a new ZIP archive is appended to the file. This is meant for adding a ZIP archive to another file (such as &lt;code&gt;python.exe&lt;/code&gt;). If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'a'&lt;/code&gt; and the file does not exist at all, it is created. If &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'r'&lt;/code&gt; or &lt;code&gt;'a'&lt;/code&gt;, the file should be seekable.</source>
          <target state="translated">该&lt;em&gt;模式&lt;/em&gt;参数应该是 &lt;code&gt;'r'&lt;/code&gt; 读取现有的文件， &lt;code&gt;'w'&lt;/code&gt; 截断，写一个新的文件， &lt;code&gt;'a'&lt;/code&gt; 附加到现有的文件，或 &lt;code&gt;'x'&lt;/code&gt; 来专门创建并写入新文件。如果&lt;em&gt;mode&lt;/em&gt;为 &lt;code&gt;'x'&lt;/code&gt; 并且&lt;em&gt;文件&lt;/em&gt;引用现有文件，则将引发&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; &lt;/a&gt;。如果&lt;em&gt;mode&lt;/em&gt;为 &lt;code&gt;'a'&lt;/code&gt; 并且&lt;em&gt;文件&lt;/em&gt;引用了现有的ZIP文件，则会向其添加其他文件。如果&lt;em&gt;文件&lt;/em&gt;不引用ZIP文件，则将新的ZIP存档附加到该文件。这是为了将ZIP归档文件添加到另一个文件（例如 &lt;code&gt;python.exe&lt;/code&gt; ）。如果&lt;em&gt;mode&lt;/em&gt;为 &lt;code&gt;'a'&lt;/code&gt; 并且文件根本不存在，则会创建它。如果&lt;em&gt;mode&lt;/em&gt;为 &lt;code&gt;'r'&lt;/code&gt; 或 &lt;code&gt;'a'&lt;/code&gt; ，则该文件应可搜索。</target>
        </trans-unit>
        <trans-unit id="cd48b9ded8ca0d722432b92316f5d1e26f89e9e8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;module&lt;/em&gt; and &lt;em&gt;name&lt;/em&gt; arguments are the same as for function &lt;a href=&quot;#doctest.testsource&quot;&gt;&lt;code&gt;testsource()&lt;/code&gt;&lt;/a&gt; above. The synthesized Python script for the named object&amp;rsquo;s docstring is written to a temporary file, and then that file is run under the control of the Python debugger, &lt;a href=&quot;pdb#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;em&gt;模块&lt;/em&gt;和&lt;em&gt;名&lt;/em&gt;参数是相同功能&lt;a href=&quot;#doctest.testsource&quot;&gt; &lt;code&gt;testsource()&lt;/code&gt; &lt;/a&gt;的上方。用于命名对象的docstring的综合Python脚本将写入一个临时文件，然后在Python调试器&lt;a href=&quot;pdb#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; &lt;/a&gt;的控制下运行该文件。</target>
        </trans-unit>
        <trans-unit id="517f12b7316c7403a28c06c48d710faa268ca17d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;module&lt;/em&gt; argument takes a module that will be used instead of the module returned when you import &lt;a href=&quot;#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; whose filter will be protected. This argument exists primarily for testing the &lt;a href=&quot;#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module itself.</source>
          <target state="translated">当导入&lt;a href=&quot;#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;的过滤器将受到保护时，&lt;em&gt;module&lt;/em&gt;参数将使用将使用的模块，而不是返回的模块。该参数主要用于测试&lt;a href=&quot;#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;模块本身。</target>
        </trans-unit>
        <trans-unit id="d00f6e8f367001c13e02ed8c348b2926151b62a6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;mtime&lt;/em&gt; argument is an optional numeric timestamp to be written to the last modification time field in the stream when compressing. It should only be provided in compression mode. If omitted or &lt;code&gt;None&lt;/code&gt;, the current time is used. See the &lt;a href=&quot;#gzip.GzipFile.mtime&quot;&gt;&lt;code&gt;mtime&lt;/code&gt;&lt;/a&gt; attribute for more details.</source>
          <target state="translated">的&lt;em&gt;修改时间&lt;/em&gt;参数是压缩时将被写入到最后的修改时间字段中的数据流中的可选的数字时间戳记。仅应在压缩模式下提供。如果省略或为 &lt;code&gt;None&lt;/code&gt; ，则使用当前时间。有关更多详细信息，请参见&lt;a href=&quot;#gzip.GzipFile.mtime&quot;&gt; &lt;code&gt;mtime&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="a1d5693119572560e6e6dbcbc1051d1f559f7129" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; argument is optional. If specified it must be a string that will be used as the value returned by the &lt;a href=&quot;#datetime.datetime.tzname&quot;&gt;&lt;code&gt;datetime.tzname()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该&lt;em&gt;名称&lt;/em&gt;参数是可选。如果指定，则它必须是一个字符串，它将用作&lt;a href=&quot;#datetime.datetime.tzname&quot;&gt; &lt;code&gt;datetime.tzname()&lt;/code&gt; &lt;/a&gt;方法返回的值。</target>
        </trans-unit>
        <trans-unit id="fa307273ebb313531c87777abdad301164d885b3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; argument specifies the database name that will be copied: it must be a string containing either &lt;code&gt;&quot;main&quot;&lt;/code&gt;, the default, to indicate the main database, &lt;code&gt;&quot;temp&quot;&lt;/code&gt; to indicate the temporary database or the name specified after the &lt;code&gt;AS&lt;/code&gt; keyword in an &lt;code&gt;ATTACH DATABASE&lt;/code&gt; statement for an attached database.</source>
          <target state="translated">该&lt;em&gt;名&lt;/em&gt;参数指定将要复制的数据库名：它必须包含一个字符串 &lt;code&gt;&quot;main&quot;&lt;/code&gt; ，在默认情况下，指示主数据库， &lt;code&gt;&quot;temp&quot;&lt;/code&gt; 指示后，指定的临时数据库或名称 &lt;code&gt;AS&lt;/code&gt; 中的关键字附加数据库的 &lt;code&gt;ATTACH DATABASE&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="bfc8b3c755aaf4e07d8b3ad9aeb11f0bb28a5cf0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; can be one of two things:</source>
          <target state="translated">该&lt;em&gt;名称&lt;/em&gt;可以是一两件事情：</target>
        </trans-unit>
        <trans-unit id="fecd24072b185fb1c044fa851a04b4bb4c15cc73" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; parameter contains the name of the element type as a &lt;code&gt;(uri,
localname)&lt;/code&gt; tuple, the &lt;em&gt;qname&lt;/em&gt; parameter contains the raw XML 1.0 name used in the source document, and the &lt;em&gt;attrs&lt;/em&gt; parameter holds an instance of the &lt;code&gt;AttributesNS&lt;/code&gt; interface (see &lt;a href=&quot;xml.sax.reader#attributes-ns-objects&quot;&gt;The AttributesNS Interface&lt;/a&gt;) containing the attributes of the element. If no namespace is associated with the element, the &lt;em&gt;uri&lt;/em&gt; component of &lt;em&gt;name&lt;/em&gt; will be &lt;code&gt;None&lt;/code&gt;. The object passed as &lt;em&gt;attrs&lt;/em&gt; may be re-used by the parser; holding on to a reference to it is not a reliable way to keep a copy of the attributes. To keep a copy of the attributes, use the &lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; method of the &lt;em&gt;attrs&lt;/em&gt; object.</source>
          <target state="translated">的&lt;em&gt;名称&lt;/em&gt;参数包含的元素类型作为名称 &lt;code&gt;(uri, localname)&lt;/code&gt; 元组，所述&lt;em&gt;的QName&lt;/em&gt;参数包含原始XML源文档中使用1.0名称和&lt;em&gt;ATTRS&lt;/em&gt;参数保存的实例 &lt;code&gt;AttributesNS&lt;/code&gt; 接口（见&lt;a href=&quot;xml.sax.reader#attributes-ns-objects&quot;&gt;的AttributesNS接口&lt;/a&gt;）包含元素的属性。如果没有名称空间与该元素关联，则&lt;em&gt;name&lt;/em&gt;的&lt;em&gt;uri&lt;/em&gt;组件将为 &lt;code&gt;None&lt;/code&gt; 。解析器可能会重用作为&lt;em&gt;attrs&lt;/em&gt;传递的对象。保留对它的引用不是保留属性副本的可靠方法。要保留属性的副本，请使用&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;copy#module-copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;attrs&lt;/em&gt;对象的 copy（）方法。</target>
        </trans-unit>
        <trans-unit id="5686dcac020c22f354bee25b44d2e503d24cea05" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; parameter contains the name of the element type, just as with the &lt;a href=&quot;#xml.sax.handler.ContentHandler.startElement&quot;&gt;&lt;code&gt;startElement()&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">的&lt;em&gt;名称&lt;/em&gt;参数包含元素类型的名称，就像用&lt;a href=&quot;#xml.sax.handler.ContentHandler.startElement&quot;&gt; &lt;code&gt;startElement()&lt;/code&gt; &lt;/a&gt;事件。</target>
        </trans-unit>
        <trans-unit id="4e221dbdf5f7dd9b982f8886d4d96d71dfbcb1e4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; parameter contains the name of the element type, just as with the &lt;a href=&quot;#xml.sax.handler.ContentHandler.startElementNS&quot;&gt;&lt;code&gt;startElementNS()&lt;/code&gt;&lt;/a&gt; method, likewise the &lt;em&gt;qname&lt;/em&gt; parameter.</source>
          <target state="translated">的&lt;em&gt;名称&lt;/em&gt;参数包含元素类型的名称，就像用&lt;a href=&quot;#xml.sax.handler.ContentHandler.startElementNS&quot;&gt; &lt;code&gt;startElementNS()&lt;/code&gt; &lt;/a&gt;方法，同样地&lt;em&gt;的QName&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="c5dd95780a96ed373c7c08723087bc92012499d7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name&lt;/em&gt; parameter contains the raw XML 1.0 name of the element type as a string and the &lt;em&gt;attrs&lt;/em&gt; parameter holds an object of the &lt;code&gt;Attributes&lt;/code&gt; interface (see &lt;a href=&quot;xml.sax.reader#attributes-objects&quot;&gt;The Attributes Interface&lt;/a&gt;) containing the attributes of the element. The object passed as &lt;em&gt;attrs&lt;/em&gt; may be re-used by the parser; holding on to a reference to it is not a reliable way to keep a copy of the attributes. To keep a copy of the attributes, use the &lt;a href=&quot;copy#module-copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; method of the &lt;em&gt;attrs&lt;/em&gt; object.</source>
          <target state="translated">的&lt;em&gt;名称&lt;/em&gt;参数包含的元素类型为字符串和的原始XML 1.0名&lt;em&gt;ATTRS&lt;/em&gt;参数保存的目的 &lt;code&gt;Attributes&lt;/code&gt; 接口（参见&lt;a href=&quot;xml.sax.reader#attributes-objects&quot;&gt;Attributes接口&lt;/a&gt;）含有元素的属性。解析器可能会重用作为&lt;em&gt;attrs&lt;/em&gt;传递的对象。保留对它的引用不是保留属性副本的可靠方法。要保留属性的&lt;a href=&quot;copy#module-copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt;，请使用&lt;em&gt;attrs&lt;/em&gt;对象的copy（）方法。</target>
        </trans-unit>
        <trans-unit id="e827cc072d58a9231eccc94d7418aeb0f39c07c9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;name_of_module&lt;/em&gt; argument can specify (as a string or tuple thereof) what module(s) an API could be defined in order to be detected as a public API. One case for this is when &lt;em&gt;module&lt;/em&gt; imports part of its public API from other modules, possibly a C backend (like &lt;code&gt;csv&lt;/code&gt; and its &lt;code&gt;_csv&lt;/code&gt;).</source>
          <target state="translated">所述&lt;em&gt;name_of_module&lt;/em&gt;参数可以指定（为一个字符串或它们的元组）的API可以以顺序被定义为公共API待检测什么模块（一个或多个）。一种情况是&lt;em&gt;模块&lt;/em&gt;从其他模块（可能是C后端）（例如 &lt;code&gt;csv&lt;/code&gt; 及其 &lt;code&gt;_csv&lt;/code&gt; ）导入其公共API的一部分。</target>
        </trans-unit>
        <trans-unit id="6a1f53a033eeb2f5efeb8e128aa8a34ec6956a47" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;new_callable&lt;/em&gt; argument is useful where you want to use an alternative class to the default &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; for the created mock. For example, if you wanted a &lt;a href=&quot;#unittest.mock.NonCallableMock&quot;&gt;&lt;code&gt;NonCallableMock&lt;/code&gt;&lt;/a&gt; to be used:</source>
          <target state="translated">该&lt;em&gt;new_callable&lt;/em&gt;要使用替代类的默认参数是有用&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;所创建的模拟。例如，如果您要使用&lt;a href=&quot;#unittest.mock.NonCallableMock&quot;&gt; &lt;code&gt;NonCallableMock&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="2800104a4a73839c0a83410200ad71ab927a214b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;newline&lt;/em&gt; argument works like that of &lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt;, except that when writing output to the stream, if &lt;em&gt;newline&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, newlines are written as &lt;code&gt;\n&lt;/code&gt; on all platforms.</source>
          <target state="translated">该&lt;em&gt;新行&lt;/em&gt;参数的作品那样的&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; &lt;/a&gt;，除了输出写入到流时，如果&lt;em&gt;换行&lt;/em&gt;是 &lt;code&gt;None&lt;/code&gt; ，换行写为 &lt;code&gt;\n&lt;/code&gt; 在所有平台上。</target>
        </trans-unit>
        <trans-unit id="1c928def7d6f7fec2025663bfc3a4700caf1d2a7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;newline&lt;/em&gt; argument works like that of &lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt;. The default is to consider only &lt;code&gt;\n&lt;/code&gt; characters as ends of lines and to do no newline translation. If &lt;em&gt;newline&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt;, newlines are written as &lt;code&gt;\n&lt;/code&gt; on all platforms, but universal newline decoding is still performed when reading.</source>
          <target state="translated">该&lt;em&gt;新行&lt;/em&gt;的说法就像是的&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; &lt;/a&gt;。默认设置是仅将 &lt;code&gt;\n&lt;/code&gt; 字符视为行尾，并且不进行任何换行翻译。如果将&lt;em&gt;newline&lt;/em&gt;设置为 &lt;code&gt;None&lt;/code&gt; ，则在所有平台上将换行符写入 &lt;code&gt;\n&lt;/code&gt; ，但是在读取时仍会执行通用换行符解码。</target>
        </trans-unit>
        <trans-unit id="0bd8453f1fdcfd787ce338a47e0ea718dd8b6c75" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;object-or-type&lt;/em&gt; determines the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-method-resolution-order&quot;&gt;method resolution order&lt;/a&gt; to be searched. The search starts from the class right after the &lt;em&gt;type&lt;/em&gt;.</source>
          <target state="translated">的&lt;em&gt;对象或类型&lt;/em&gt;确定&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-method-resolution-order&quot;&gt;方法的解析顺序&lt;/a&gt;被搜索。从&lt;em&gt;类型&lt;/em&gt;之后的类开始搜索。</target>
        </trans-unit>
        <trans-unit id="c8745db3ba48731d82b6e52007d4d9530b1b01ca" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;object-or-type&lt;/em&gt; determines the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-method-resolution-order&quot;&gt;method resolution order&lt;/a&gt; to be searched. The search starts from the class right after the &lt;em&gt;type&lt;/em&gt;.</source>
          <target state="translated">&amp;ldquo;&lt;em&gt;对象或类型&amp;rdquo;&lt;/em&gt;确定要搜索的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-method-resolution-order&quot;&gt;方法解析顺序&lt;/a&gt;。搜索从&lt;em&gt;类型&lt;/em&gt;之后的&lt;em&gt;类开始&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ad83ccab5379d93ec053e2b163a548ae3d4e6b98" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;object_pairs_hook&lt;/em&gt; parameter can be used to alter this behavior.</source>
          <target state="translated">该&lt;em&gt;object_pairs_hook&lt;/em&gt;参数可以用来改变这种行为。</target>
        </trans-unit>
        <trans-unit id="835096ab0ab29d4008ca14710ddfaea3d6d22ec4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;offset&lt;/em&gt; argument must be specified as a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object representing the difference between the local time and UTC. It must be strictly between &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; and &lt;code&gt;timedelta(hours=24)&lt;/code&gt;, otherwise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">所述&lt;em&gt;偏移&lt;/em&gt;参数必须被指定为&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;表示本地时间和UTC之间的差对象。它必须严格在 &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; 和 &lt;code&gt;timedelta(hours=24)&lt;/code&gt; 之间，否则会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddd25287fdb9896e097a9db9e3706fae6e9da314" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;opener&lt;/em&gt; parameter was added.</source>
          <target state="translated">在&lt;em&gt;揭幕战&lt;/em&gt;中添加参数。</target>
        </trans-unit>
        <trans-unit id="03b092d93249375bcb0323a6702343bfbe9ceae6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;openhook&lt;/em&gt;, when given, must be a function that takes two arguments, &lt;em&gt;filename&lt;/em&gt; and &lt;em&gt;mode&lt;/em&gt;, and returns an accordingly opened file-like object. You cannot use &lt;em&gt;inplace&lt;/em&gt; and &lt;em&gt;openhook&lt;/em&gt; together.</source>
          <target state="translated">的&lt;em&gt;openhook&lt;/em&gt;，当给出时，必须是一个函数，它有两个参数，&lt;em&gt;文件名&lt;/em&gt;和&lt;em&gt;模式&lt;/em&gt;，并返回相应的打开的文件对象。您不能使用&lt;em&gt;就地&lt;/em&gt;和&lt;em&gt;openhook&lt;/em&gt;在一起。</target>
        </trans-unit>
        <trans-unit id="e5eb496e4b2c0fde320c695eb452f9ff1a917c58" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;optimization&lt;/em&gt; parameter is used to specify the optimization level of the bytecode file. An empty string represents no optimization, so &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; with an &lt;em&gt;optimization&lt;/em&gt; of &lt;code&gt;''&lt;/code&gt; will result in a bytecode path of &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt;. &lt;code&gt;None&lt;/code&gt; causes the interpreter&amp;rsquo;s optimization level to be used. Any other value&amp;rsquo;s string representation is used, so &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; with an &lt;em&gt;optimization&lt;/em&gt; of &lt;code&gt;2&lt;/code&gt; will lead to the bytecode path of &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.opt-2.pyc&lt;/code&gt;. The string representation of &lt;em&gt;optimization&lt;/em&gt; can only be alphanumeric, else &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">最&lt;em&gt;优化&lt;/em&gt;参数用于指定字节码文件的最优化级别。空字符串表示没有优化，因此 &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; 的&lt;em&gt;优化&lt;/em&gt;为 &lt;code&gt;''&lt;/code&gt; 会导致 &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.pyc&lt;/code&gt; 的字节码路径。 &lt;code&gt;None&lt;/code&gt; 导致使用解释器的优化级别。任何其他值的字符串表示法，所以 &lt;code&gt;/foo/bar/baz.py&lt;/code&gt; 与&lt;em&gt;优化&lt;/em&gt;的 &lt;code&gt;2&lt;/code&gt; 会导致字节码路径 &lt;code&gt;/foo/bar/__pycache__/baz.cpython-32.opt-2.pyc&lt;/code&gt; 。&lt;em&gt;优化&lt;/em&gt;的字符串表示形式&lt;em&gt;&lt;/em&gt;只能是字母数字，否则会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aeab2b3e4c0bce06083aef5c507ae9b49420eb23" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;password&lt;/em&gt; argument may be a function to call to get the password for decrypting the private key. It will only be called if the private key is encrypted and a password is necessary. It will be called with no arguments, and it should return a string, bytes, or bytearray. If the return value is a string it will be encoded as UTF-8 before using it to decrypt the key. Alternatively a string, bytes, or bytearray value may be supplied directly as the &lt;em&gt;password&lt;/em&gt; argument. It will be ignored if the private key is not encrypted and no password is needed.</source>
          <target state="translated">该&lt;em&gt;密码&lt;/em&gt;参数可以是一个函数来调用用于解密私钥获取密码。仅当私钥已加密并且需要密码时，才会调用该函数。它将不带任何参数地被调用，并且它应该返回一个字符串，字节或字节数组。如果返回值为字符串，则在使用它解密密钥之前，它将被编码为UTF-8。或者，可以直接将字符串，字节或字节数组值作为&lt;em&gt;password&lt;/em&gt;参数提供。如果私钥未加密并且不需要密码，它将被忽略。</target>
        </trans-unit>
        <trans-unit id="5894a49d9fd67c04eb2502774f6b556f37efb59f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;path&lt;/em&gt; argument is the directory for which the finder is in charge of searching.</source>
          <target state="translated">该&lt;em&gt;路径&lt;/em&gt;参数是其取景器是负责搜索的目录。</target>
        </trans-unit>
        <trans-unit id="5a0b8f2bc9289b37bab8872fee5877c84de68db7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;path&lt;/em&gt; parameter is the path to the executable file. The &lt;em&gt;path&lt;/em&gt; should contain a directory. Use &lt;a href=&quot;#os.posix_spawnp&quot;&gt;&lt;code&gt;posix_spawnp()&lt;/code&gt;&lt;/a&gt; to pass an executable file without directory.</source>
          <target state="translated">该&lt;em&gt;路径&lt;/em&gt;参数是路径的可执行文件。该&lt;em&gt;路径&lt;/em&gt;应包含一个目录。使用&lt;a href=&quot;#os.posix_spawnp&quot;&gt; &lt;code&gt;posix_spawnp()&lt;/code&gt; &lt;/a&gt;传递不带目录的可执行文件。</target>
        </trans-unit>
        <trans-unit id="b3b64714cf1d89975545a84417ebd84d5e337d0a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;path&lt;/em&gt; parameter is the path to the executable file.The &lt;em&gt;path&lt;/em&gt; should contain a directory.Use &lt;a href=&quot;#os.posix_spawnp&quot;&gt;&lt;code&gt;posix_spawnp()&lt;/code&gt;&lt;/a&gt; to pass an executable file without directory.</source>
          <target state="translated">该&lt;em&gt;路径&lt;/em&gt;参数是路径的可执行文件。该&lt;em&gt;路径&lt;/em&gt;应该包含一个directory.Use &lt;a href=&quot;#os.posix_spawnp&quot;&gt; &lt;code&gt;posix_spawnp()&lt;/code&gt; &lt;/a&gt;传递一个可执行文件，而无需目录。</target>
        </trans-unit>
        <trans-unit id="9c46f81dad7b34554c6c2af6f64f9d65570f63a5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;pax_headers&lt;/em&gt; argument is an optional dictionary of strings which will be added as a pax global header if &lt;em&gt;format&lt;/em&gt; is &lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt;&lt;code&gt;PAX_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;em&gt;pax_headers&lt;/em&gt;参数是将要添加作为PAX全局头如果串的一个可选的字典&lt;em&gt;格式&lt;/em&gt;是&lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt; &lt;code&gt;PAX_FORMAT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="385c9a120811afd54baa69bd7076c1e6f5593f01" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;payload&lt;/em&gt; is either a string or bytes object, in the case of simple message objects, or a list of &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; objects, for MIME container documents such as &lt;em&gt;multipart/*&lt;/em&gt; and &lt;em&gt;message/rfc822&lt;/em&gt; message objects.</source>
          <target state="translated">对于简单的邮件对象，&lt;em&gt;有效载荷&lt;/em&gt;可以是字符串对象或字节对象，对于MIME容器文档（例如&lt;em&gt;multipart / *&lt;/em&gt;和&lt;em&gt;message / rfc822&lt;/em&gt;邮件对象），&lt;em&gt;有效载荷&lt;/em&gt;可以是&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;对象的列表。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea70b7df974c3fb9e6c0547260aae38aa155e773" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;preamble&lt;/em&gt; attribute contains this leading extra-armor text for MIME documents. When the &lt;a href=&quot;email.parser#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; discovers some text after the headers but before the first boundary string, it assigns this text to the message&amp;rsquo;s &lt;em&gt;preamble&lt;/em&gt; attribute. When the &lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; is writing out the plain text representation of a MIME message, and it finds the message has a &lt;em&gt;preamble&lt;/em&gt; attribute, it will write this text in the area between the headers and the first boundary. See &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;email.parser&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.generator#module-email.generator&quot;&gt;&lt;code&gt;email.generator&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">在&lt;em&gt;序言&lt;/em&gt;属性包含MIME文件这导致额外的装甲文本。当&lt;a href=&quot;email.parser#email.parser.Parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt;在标头之后但在第一个边界字符串之前发现一些文本时，它将将此文本分配给消息的&lt;em&gt;preamble&lt;/em&gt;属性。当&lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;写出MIME消息的纯文本表示形式时，如果发现该消息具有&lt;em&gt;前导&lt;/em&gt;属性，则它将在标题和第一个边界之间的区域中写入此文本。有关详细信息，请参见&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;email.parser&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;email.generator#module-email.generator&quot;&gt; &lt;code&gt;email.generator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a54fdfb6b6943ecad12822e748b19740f664e27" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;precision&lt;/em&gt; is a decimal number indicating how many digits should be displayed after the decimal point for a floating point value formatted with &lt;code&gt;'f'&lt;/code&gt; and &lt;code&gt;'F'&lt;/code&gt;, or before and after the decimal point for a floating point value formatted with &lt;code&gt;'g'&lt;/code&gt; or &lt;code&gt;'G'&lt;/code&gt;. For non-number types the field indicates the maximum field size - in other words, how many characters will be used from the field content. The &lt;em&gt;precision&lt;/em&gt; is not allowed for integer values.</source>
          <target state="translated">的&lt;em&gt;精度&lt;/em&gt;是指示多少位数应的小数点与格式化的浮点值之后被显示的十进制数 &lt;code&gt;'f'&lt;/code&gt; 和 &lt;code&gt;'F'&lt;/code&gt; ，或之前和小数点用于与格式化的浮点值之后 &lt;code&gt;'g'&lt;/code&gt; 或 &lt;code&gt;'G'&lt;/code&gt; 。对于非数字类型，该字段指示最大字段大小-换句话说，将从字段内容中使用多少个字符。整数值不允许使用&lt;em&gt;精度&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9a42059a7398e0076eb8d110fcba8360dfcfb871" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;preexec_fn&lt;/em&gt; parameter is not safe to use in the presence of threads in your application. The child process could deadlock before exec is called. If you must use it, keep it trivial! Minimize the number of libraries you call into.</source>
          <target state="translated">如果应用程序中存在线程，则&lt;em&gt;preexec_fn&lt;/em&gt;参数不安全使用。在调用exec之前，子进程可能会死锁。如果必须使用它，请尽量不要使用它！最小化您要调用的库的数量。</target>
        </trans-unit>
        <trans-unit id="2117709fb8c29d93d11cbcd71421f2390c22da8d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;prefix&lt;/em&gt; may be any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">的&lt;em&gt;前缀&lt;/em&gt;可以是任何&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c2cc6abdc0befc2720b7ccef1d9ae061ce483f6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;prefix&lt;/em&gt;, &lt;em&gt;suffix&lt;/em&gt;, and &lt;em&gt;dir&lt;/em&gt; arguments are the same as for &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;前缀&lt;/em&gt;，&lt;em&gt;后缀&lt;/em&gt;和&lt;em&gt;DIR&lt;/em&gt;参数是相同&lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02180b4f716501a7667649b1f96c422fcb8aa64b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;preset&lt;/em&gt; argument (if provided) should be an integer between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;9&lt;/code&gt; (inclusive), optionally OR-ed with the constant &lt;code&gt;PRESET_EXTREME&lt;/code&gt;. If neither &lt;em&gt;preset&lt;/em&gt; nor &lt;em&gt;filters&lt;/em&gt; are given, the default behavior is to use &lt;code&gt;PRESET_DEFAULT&lt;/code&gt; (preset level &lt;code&gt;6&lt;/code&gt;). Higher presets produce smaller output, but make the compression process slower.</source>
          <target state="translated">的&lt;em&gt;预设&lt;/em&gt;参数（如果提供的话）应之间的整数 &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;9&lt;/code&gt; （含），任选OR-ED与恒定 &lt;code&gt;PRESET_EXTREME&lt;/code&gt; 。如果既未提供&lt;em&gt;预设&lt;/em&gt;也未提供&lt;em&gt;过滤器&lt;/em&gt;，则默认行为是使用 &lt;code&gt;PRESET_DEFAULT&lt;/code&gt; （预设级别 &lt;code&gt;6&lt;/code&gt; ）。较高的预设产生较小的输出，但会使压缩过程变慢。</target>
        </trans-unit>
        <trans-unit id="9895acc66c3f18475ff9f0db5201b4c6a71ff0e3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;protocol_factory&lt;/em&gt; must be a callable returning a subclass of the &lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol&quot;&gt;&lt;code&gt;SubprocessProtocol&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">该&lt;em&gt;protocol_factory&lt;/em&gt;必须返回的子类中的调用&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol&quot;&gt; &lt;code&gt;SubprocessProtocol&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="f711c66569fb5d19645c5457dbc47d4d07d6d7c3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;protocol_factory&lt;/em&gt; must be a callable returning a subclass of the &lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol&quot;&gt;&lt;code&gt;asyncio.SubprocessProtocol&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">该&lt;em&gt;protocol_factory&lt;/em&gt;必须返回的子类中的调用&lt;a href=&quot;asyncio-protocol#asyncio.SubprocessProtocol&quot;&gt; &lt;code&gt;asyncio.SubprocessProtocol&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="401443787918a85da5a18eb500ca9cde85fb13e3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;purpose&lt;/em&gt; flag specifies what kind of CA certificates are loaded. The default settings &lt;a href=&quot;#ssl.Purpose.SERVER_AUTH&quot;&gt;&lt;code&gt;Purpose.SERVER_AUTH&lt;/code&gt;&lt;/a&gt; loads certificates, that are flagged and trusted for TLS web server authentication (client side sockets). &lt;a href=&quot;#ssl.Purpose.CLIENT_AUTH&quot;&gt;&lt;code&gt;Purpose.CLIENT_AUTH&lt;/code&gt;&lt;/a&gt; loads CA certificates for client certificate verification on the server side.</source>
          <target state="translated">该&lt;em&gt;目的&lt;/em&gt;标志指定什么样的CA证书被加载。默认设置&lt;a href=&quot;#ssl.Purpose.SERVER_AUTH&quot;&gt; &lt;code&gt;Purpose.SERVER_AUTH&lt;/code&gt; &lt;/a&gt;加载用于TLS Web服务器身份验证（客户端套接字）的已标记并受信任的证书。&lt;a href=&quot;#ssl.Purpose.CLIENT_AUTH&quot;&gt; &lt;code&gt;Purpose.CLIENT_AUTH&lt;/code&gt; &lt;/a&gt;加载CA证书，以在服务器端进行客户端证书验证。</target>
        </trans-unit>
        <trans-unit id="4dc1ae68be8c928ff8ced55af039b97dee0f266d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;readrc&lt;/em&gt; argument defaults to true and controls whether Pdb will load .pdbrc files from the filesystem.</source>
          <target state="translated">该&lt;em&gt;readrc&lt;/em&gt;参数默认为真，控制是否将PDB从文件系统加载.pdbrc文件。</target>
        </trans-unit>
        <trans-unit id="46e14dc3cbadaa634897551ddab605eacd0ed865" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;request&lt;/em&gt; argument is as documented for &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;em&gt;请求&lt;/em&gt;参数作为文件化&lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd5524c970b27a1790f26c76be61a832fdb402cb" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;request&lt;/em&gt; object (usually a &lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt;&lt;code&gt;urllib.request.Request&lt;/code&gt;&lt;/a&gt; instance) must support the methods &lt;code&gt;get_full_url()&lt;/code&gt;, &lt;code&gt;get_host()&lt;/code&gt;, &lt;code&gt;get_type()&lt;/code&gt;, &lt;code&gt;unverifiable()&lt;/code&gt;, &lt;code&gt;has_header()&lt;/code&gt;, &lt;code&gt;get_header()&lt;/code&gt;, &lt;code&gt;header_items()&lt;/code&gt;, &lt;code&gt;add_unredirected_header()&lt;/code&gt; and &lt;code&gt;origin_req_host&lt;/code&gt; attribute as documented by &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;em&gt;请求&lt;/em&gt;对象（通常是&lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt; &lt;code&gt;urllib.request.Request&lt;/code&gt; &lt;/a&gt;实例）必须支持方法 &lt;code&gt;get_full_url()&lt;/code&gt; ， &lt;code&gt;get_host()&lt;/code&gt; ， &lt;code&gt;get_type()&lt;/code&gt; ， &lt;code&gt;unverifiable()&lt;/code&gt; ， &lt;code&gt;has_header()&lt;/code&gt; ， &lt;code&gt;get_header()&lt;/code&gt; ， &lt;code&gt;header_items()&lt;/code&gt; ， &lt;code&gt;add_unredirected_header()&lt;/code&gt; 和 &lt;code&gt;origin_req_host&lt;/code&gt; 属性由&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; 记录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6076db6f2a9e32f368a89ef0cd834117df42f630" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;request&lt;/em&gt; object (usually a &lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt;&lt;code&gt;urllib.request.Request&lt;/code&gt;&lt;/a&gt; instance) must support the methods &lt;code&gt;get_full_url()&lt;/code&gt;, &lt;code&gt;get_host()&lt;/code&gt;, &lt;code&gt;unverifiable()&lt;/code&gt;, and &lt;code&gt;origin_req_host&lt;/code&gt; attribute, as documented by &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt;. The request is used to set default values for cookie-attributes as well as for checking that the cookie is allowed to be set.</source>
          <target state="translated">所述&lt;em&gt;请求&lt;/em&gt;对象（通常是&lt;a href=&quot;urllib.request#urllib.request.Request&quot;&gt; &lt;code&gt;urllib.request.Request&lt;/code&gt; &lt;/a&gt;实例）必须支持方法 &lt;code&gt;get_full_url()&lt;/code&gt; ， &lt;code&gt;get_host()&lt;/code&gt; ， &lt;code&gt;unverifiable()&lt;/code&gt; 和 &lt;code&gt;origin_req_host&lt;/code&gt; 属性，如记录由&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; 里&lt;/a&gt;。该请求用于设置cookie属性的默认值以及检查是否允许设置cookie。</target>
        </trans-unit>
        <trans-unit id="e2f1c2f586a7c581cf5d92cb55cc5d4a2a88d0cd" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;request&lt;/em&gt; parameter is limited to values that can fit in 32-bits. Additional constants of interest for use as the &lt;em&gt;request&lt;/em&gt; argument can be found in the &lt;a href=&quot;termios#module-termios&quot;&gt;&lt;code&gt;termios&lt;/code&gt;&lt;/a&gt; module, under the same names as used in the relevant C header files.</source>
          <target state="translated">所述&lt;em&gt;请求&lt;/em&gt;参数被限制为可以容纳32位的值。可以在&lt;a href=&quot;termios#module-termios&quot;&gt; &lt;code&gt;termios&lt;/code&gt; &lt;/a&gt;模块中以与相关C头文件中使用的名称相同的名称找到用作&lt;em&gt;请求&lt;/em&gt;参数的其他感兴趣的常数。</target>
        </trans-unit>
        <trans-unit id="249de6ab2421958fe5451ea48601c9e94f9750cb" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;response&lt;/em&gt; object (usually the result of a call to &lt;a href=&quot;urllib.request#urllib.request.urlopen&quot;&gt;&lt;code&gt;urllib.request.urlopen()&lt;/code&gt;&lt;/a&gt;, or similar) should support an &lt;code&gt;info()&lt;/code&gt; method, which returns an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">该&lt;em&gt;响应&lt;/em&gt;对象（一个呼叫的通常结果&lt;a href=&quot;urllib.request#urllib.request.urlopen&quot;&gt; &lt;code&gt;urllib.request.urlopen()&lt;/code&gt; &lt;/a&gt;，或类似的）应支持的 &lt;code&gt;info()&lt;/code&gt; 方法，后者返回一个&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="04ce21268d40bc71f1f9a9083f103f2659796911" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;response&lt;/em&gt; that is returned as the first item in the return tuple of almost all methods is the server&amp;rsquo;s response: a string beginning with a three-digit code. If the server&amp;rsquo;s response indicates an error, the method raises one of the above exceptions.</source>
          <target state="translated">该&lt;em&gt;响应&lt;/em&gt;被返回的几乎所有方法的返回元组的第一项是服务器的响应：一个字符串开头的三位数代码。如果服务器的响应指示错误，则该方法将引发以上异常之一。</target>
        </trans-unit>
        <trans-unit id="2a08f6a3c82a95e392e1e6e160bcc0d359886a5e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;rounding&lt;/em&gt; option is one of the constants listed in the section &lt;a href=&quot;#rounding-modes&quot;&gt;Rounding Modes&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;舍入&lt;/em&gt;选项是&amp;ldquo; &lt;em&gt;舍&lt;/em&gt;&lt;a href=&quot;#rounding-modes&quot;&gt;入模式&lt;/a&gt; &amp;rdquo;部分中列出的常数之一。</target>
        </trans-unit>
        <trans-unit id="b6d46553ec93f51e386c82746a812fbd9cb5fc2e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;safe&lt;/em&gt;, &lt;em&gt;encoding&lt;/em&gt;, and &lt;em&gt;errors&lt;/em&gt; parameters are passed down to &lt;em&gt;quote_via&lt;/em&gt; (the &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters are only passed when a query element is a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在&lt;em&gt;安全&lt;/em&gt;，&lt;em&gt;编码&lt;/em&gt;和&lt;em&gt;错误&lt;/em&gt;参数传递到&lt;em&gt;quote_via&lt;/em&gt;（该&lt;em&gt;编码&lt;/em&gt;和&lt;em&gt;错误&lt;/em&gt;当查询元素是一个参数是唯一通过&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="45c6ec6d33577622f7757d14f0820e4e75833046" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;scheduler&lt;/em&gt; argument must be a tuple containing the (optional) scheduler policy and an instance of &lt;a href=&quot;#os.sched_param&quot;&gt;&lt;code&gt;sched_param&lt;/code&gt;&lt;/a&gt; with the scheduler parameters. A value of &lt;code&gt;None&lt;/code&gt; in the place of the scheduler policy indicates that is not being provided. This argument is a combination of the C library &lt;code&gt;POSIX_SPAWN_SETSCHEDPARAM&lt;/code&gt; and &lt;code&gt;POSIX_SPAWN_SETSCHEDULER&lt;/code&gt; flags.</source>
          <target state="translated">所述&lt;em&gt;调度器&lt;/em&gt;参数必须是含有（可选的）调度策略和实例的元组&lt;a href=&quot;#os.sched_param&quot;&gt; &lt;code&gt;sched_param&lt;/code&gt; &lt;/a&gt;与调度器的参数。在调度程序策略的位置，值为 &lt;code&gt;None&lt;/code&gt; 表示未提供该值。此参数是C库 &lt;code&gt;POSIX_SPAWN_SETSCHEDPARAM&lt;/code&gt; 和 &lt;code&gt;POSIX_SPAWN_SETSCHEDULER&lt;/code&gt; 标志的组合。</target>
        </trans-unit>
        <trans-unit id="7ec1f6a11cc0295f4e6de025d3da51e89252d526" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;scheme&lt;/em&gt; argument gives the default addressing scheme, to be used only if the URL does not specify one. It should be the same type (text or bytes) as &lt;em&gt;urlstring&lt;/em&gt;, except that the default value &lt;code&gt;''&lt;/code&gt; is always allowed, and is automatically converted to &lt;code&gt;b''&lt;/code&gt; if appropriate.</source>
          <target state="translated">该&lt;em&gt;方案&lt;/em&gt;论证给出了默认的寻址方案，将仅用于当URL不指定一个。它的类型（文本或字节）应与&lt;em&gt;urlstring相同&lt;/em&gt;，除了始终允许使用默认值 &lt;code&gt;''&lt;/code&gt; ，并且在适当的情况下会自动将其转换为 &lt;code&gt;b''&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c3d14f8574339300c0dd4daab37b014b3b42911" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;server_name_callback&lt;/em&gt; callback passed to &lt;a href=&quot;#ssl.SSLContext.set_servername_callback&quot;&gt;&lt;code&gt;SSLContext.set_servername_callback()&lt;/code&gt;&lt;/a&gt; will get an &lt;a href=&quot;#ssl.SSLObject&quot;&gt;&lt;code&gt;SSLObject&lt;/code&gt;&lt;/a&gt; instance instead of a &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; instance as its first parameter.</source>
          <target state="translated">传递给&lt;a href=&quot;#ssl.SSLContext.set_servername_callback&quot;&gt; &lt;code&gt;SSLContext.set_servername_callback()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;server_name_callback&lt;/em&gt;回调将获取一个&lt;a href=&quot;#ssl.SSLObject&quot;&gt; &lt;code&gt;SSLObject&lt;/code&gt; &lt;/a&gt;实例而不是&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;实例作为其第一个参数。</target>
        </trans-unit>
        <trans-unit id="9490a29cd2edeaa045d35fc7cad654528add8e39" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;server_side&lt;/em&gt;, &lt;em&gt;server_hostname&lt;/em&gt; and &lt;em&gt;session&lt;/em&gt; parameters have the same meaning as in &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;server_side&lt;/em&gt;，&lt;em&gt;server_hostname&lt;/em&gt;和&lt;em&gt;会话&lt;/em&gt;参数具有相同的含义&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a673e1ab33e5fd9a4b186a8ac8f33a5a9fa4ca7b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;setpgroup&lt;/em&gt; argument will set the process group of the child to the value specified. If the value specified is 0, the child&amp;rsquo;s process group ID will be made the same as its process ID. If the value of &lt;em&gt;setpgroup&lt;/em&gt; is not set, the child will inherit the parent&amp;rsquo;s process group ID. This argument corresponds to the C library &lt;code&gt;POSIX_SPAWN_SETPGROUP&lt;/code&gt; flag.</source>
          <target state="translated">该&lt;em&gt;setpgroup&lt;/em&gt;参数将孩子的进程组设置为指定的值。如果指定的值为0，则子进程的进程ID将与其子进程的ID相同。如果未设置&lt;em&gt;setpgroup&lt;/em&gt;的值，则子级将继承父级的进程组ID。此参数对应于C库 &lt;code&gt;POSIX_SPAWN_SETPGROUP&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="ff1d457cea9007b652c10d501e50abc8a21daa32" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;setsigmask&lt;/em&gt; argument will set the signal mask to the signal set specified. If the parameter is not used, then the child inherits the parent&amp;rsquo;s signal mask. This argument corresponds to the C library &lt;code&gt;POSIX_SPAWN_SETSIGMASK&lt;/code&gt; flag.</source>
          <target state="translated">该&lt;em&gt;setsigmask&lt;/em&gt;参数将设置信号掩码所指定的信号集。如果未使用该参数，则子级将继承父级的信号掩码。此参数对应于C库 &lt;code&gt;POSIX_SPAWN_SETSIGMASK&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="a24d31ceaa7c092d726d770a0cf41f125d0aebf5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;shallow&lt;/em&gt; parameter has the same meaning and default value as for &lt;a href=&quot;#filecmp.cmp&quot;&gt;&lt;code&gt;filecmp.cmp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;浅&lt;/em&gt;参数具有相同的含义和默认值作为&lt;a href=&quot;#filecmp.cmp&quot;&gt; &lt;code&gt;filecmp.cmp()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a80e01db550d1bd3a7bd6ebc74b18d968e849fe" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;shell&lt;/em&gt; argument (which defaults to &lt;code&gt;False&lt;/code&gt;) specifies whether to use the shell as the program to execute. If &lt;em&gt;shell&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, it is recommended to pass &lt;em&gt;args&lt;/em&gt; as a string rather than as a sequence.</source>
          <target state="translated">所述&lt;em&gt;壳&lt;/em&gt;参数（默认为 &lt;code&gt;False&lt;/code&gt; ）指定是否使用壳作为要执行的程序。如果&lt;em&gt;shell&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，建议将&lt;em&gt;args&lt;/em&gt;作为字符串而不是序列传递。</target>
        </trans-unit>
        <trans-unit id="64685938fa2858e93dc0ebb23445efd4d0c5e167" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sigdef&lt;/em&gt; argument will reset the disposition of all signals in the set specified. This argument corresponds to the C library &lt;code&gt;POSIX_SPAWN_SETSIGDEF&lt;/code&gt; flag.</source>
          <target state="translated">该&lt;em&gt;sigdef&lt;/em&gt;参数将重置所有信号的配置在给定的集合。此参数对应于C库 &lt;code&gt;POSIX_SPAWN_SETSIGDEF&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="6cab8b73313d2d8e8c5f669a403b631d6f400e9f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sign&lt;/em&gt; option is only valid for number types, and can be one of the following:</source>
          <target state="translated">该&lt;em&gt;标志&lt;/em&gt;的选择是仅适用于数字类型，可以是下列情况之一：</target>
        </trans-unit>
        <trans-unit id="a1b57cb9c563c9860f94c21c54bbaa756fd93cb9" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;signed&lt;/em&gt; argument determines whether two&amp;rsquo;s complement is used to represent the integer. If &lt;em&gt;signed&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; and a negative integer is given, an &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; is raised. The default value for &lt;em&gt;signed&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">带&lt;em&gt;符号的自&lt;/em&gt;变量确定是否使用二进制补码表示整数。如果&lt;em&gt;sign&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; 并给出一个负整数，则会引发&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;。为默认值&lt;em&gt;签字&lt;/em&gt;是 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="371f7246c775e34157c3af19c7e256b43858f6a2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;signed&lt;/em&gt; argument indicates whether two&amp;rsquo;s complement is used to represent the integer.</source>
          <target state="translated">带&lt;em&gt;符号的自&lt;/em&gt;变量指示是否使用二进制补码表示整数。</target>
        </trans-unit>
        <trans-unit id="c1af8aa11bb01ff7639b96a4988e666df7acd3f2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;size&lt;/em&gt; argument indicates the approximate maximum number of encoded bytes or code points to read for decoding. The decoder can modify this setting as appropriate. The default value -1 indicates to read and decode as much as possible. This parameter is intended to prevent having to decode huge files in one step.</source>
          <target state="translated">所述&lt;em&gt;尺寸&lt;/em&gt;参数指示来读取用于解码编码的字节或码点的近似最大数量。解码器可以适当修改此设置。默认值-1表示要尽可能多地读取和解码。此参数旨在避免必须一步解码大型文件。</target>
        </trans-unit>
        <trans-unit id="d355dd9c76833b2b080632c6620ca9de793f66dc" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;size&lt;/em&gt; argument is normally passed to the decorated test method as an extra argument. If &lt;em&gt;dry_run&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the value passed to the test method may be less than the requested value. If &lt;em&gt;dry_run&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, it means the test doesn&amp;rsquo;t support dummy runs when &lt;code&gt;-M&lt;/code&gt; is not specified.</source>
          <target state="translated">通常将&lt;em&gt;size&lt;/em&gt;参数作为附加参数传递给装饰的测试方法。如果&lt;em&gt;dry_run&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，则传递给测试方法的值可能小于请求的值。如果&lt;em&gt;dry_run&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ，则表示未指定 &lt;code&gt;-M&lt;/code&gt; 时测试不支持虚拟运行。</target>
        </trans-unit>
        <trans-unit id="151dde5b0ba7cb1869ce8877b126a35442579a25" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;skip&lt;/em&gt; argument, if given, must be an iterable of glob-style module name patterns. The debugger will not step into frames that originate in a module that matches one of these patterns. &lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">在&lt;em&gt;跳跃&lt;/em&gt;的说法，如果有，必须是一个迭代的通配符式样的模块名称模式。调试器将不会进入源自与这些模式之一匹配的模块的框架。&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;1个&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c97b4a14038331f376db5a76543fd70a20e5addc" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;skip&lt;/em&gt; argument, if given, must be an iterable of glob-style module name patterns. The debugger will not step into frames that originate in a module that matches one of these patterns. Whether a frame is considered to originate in a certain module is determined by the &lt;code&gt;__name__&lt;/code&gt; in the frame globals.</source>
          <target state="translated">在&lt;em&gt;跳跃&lt;/em&gt;的说法，如果有，必须是一个迭代的通配符式样的模块名称模式。调试器将不会进入源自与这些模式之一匹配的模块的框架。帧是否被认为起源于某个模块由帧全局变量中的 &lt;code&gt;__name__&lt;/code&gt; 确定。</target>
        </trans-unit>
        <trans-unit id="d44decd9d7b523509313fc74a2d69d1a2b290502" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sleep&lt;/em&gt; argument specifies the number of seconds to sleep by between successive attempts to backup remaining pages, can be specified either as an integer or a floating point value.</source>
          <target state="translated">该&lt;em&gt;睡眠&lt;/em&gt;参数指定的秒至睡眠通过连续尝试之间进行备份剩余页数，既可以指定为一个整数或浮点值。</target>
        </trans-unit>
        <trans-unit id="166a331e704e3a141fa3c371379efa856fe7128c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sni_callback&lt;/em&gt; function must return &lt;code&gt;None&lt;/code&gt; to allow the TLS negotiation to continue. If a TLS failure is required, a constant &lt;a href=&quot;#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR&quot;&gt;&lt;code&gt;ALERT_DESCRIPTION_*&lt;/code&gt;&lt;/a&gt; can be returned. Other return values will result in a TLS fatal error with &lt;a href=&quot;#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR&quot;&gt;&lt;code&gt;ALERT_DESCRIPTION_INTERNAL_ERROR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;sni_callback&lt;/em&gt;函数必须返回 &lt;code&gt;None&lt;/code&gt; 允许TLS协商继续。如果要求TLS失败，则可以返回常量&lt;a href=&quot;#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR&quot;&gt; &lt;code&gt;ALERT_DESCRIPTION_*&lt;/code&gt; &lt;/a&gt;。其他返回值将导致带有&lt;a href=&quot;#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR&quot;&gt; &lt;code&gt;ALERT_DESCRIPTION_INTERNAL_ERROR&lt;/code&gt; &lt;/a&gt;的TLS致命错误。</target>
        </trans-unit>
        <trans-unit id="955cb7b76408c61d468a2564832812df5fa5e51a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sound&lt;/em&gt; parameter is a sound association name from the registry. If the registry contains no such name, play the system default sound unless &lt;a href=&quot;#winsound.SND_NODEFAULT&quot;&gt;&lt;code&gt;SND_NODEFAULT&lt;/code&gt;&lt;/a&gt; is also specified. If no default sound is registered, raise &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;. Do not use with &lt;a href=&quot;#winsound.SND_FILENAME&quot;&gt;&lt;code&gt;SND_FILENAME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;声音&lt;/em&gt;参数是从注册表中声音的关联名称。如果注册表中没有这样的名称，除非也指定了&lt;a href=&quot;#winsound.SND_NODEFAULT&quot;&gt; &lt;code&gt;SND_NODEFAULT&lt;/code&gt; ,&lt;/a&gt;否则请播放系统默认声音。如果未注册任何默认声音，请引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。不要与&lt;a href=&quot;#winsound.SND_FILENAME&quot;&gt; &lt;code&gt;SND_FILENAME&lt;/code&gt; 一起&lt;/a&gt;使用。</target>
        </trans-unit>
        <trans-unit id="b134798684044ca68a3fcd2a983ed363cbdb1b27" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sound&lt;/em&gt; parameter is the name of a WAV file. Do not use with &lt;a href=&quot;#winsound.SND_ALIAS&quot;&gt;&lt;code&gt;SND_ALIAS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;声音&lt;/em&gt;参数是一个WAV文件的名称。不要与&lt;a href=&quot;#winsound.SND_ALIAS&quot;&gt; &lt;code&gt;SND_ALIAS&lt;/code&gt; 一起&lt;/a&gt;使用。</target>
        </trans-unit>
        <trans-unit id="494b12ba5734dc2ca9617a8112a2a9a15dd567ac" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sound&lt;/em&gt; parameter to &lt;a href=&quot;#winsound.PlaySound&quot;&gt;&lt;code&gt;PlaySound()&lt;/code&gt;&lt;/a&gt; is a memory image of a WAV file, as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#winsound.PlaySound&quot;&gt; &lt;code&gt;PlaySound()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;sound&lt;/em&gt;参数是WAV文件的存储映像，作为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节类似的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31a00f465debea4adb9d62708c108f58155f4a53" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;sound&lt;/em&gt; parameter to &lt;a href=&quot;#winsound.PlaySound&quot;&gt;&lt;code&gt;PlaySound()&lt;/code&gt;&lt;/a&gt; is a memory image of a WAV file, as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#winsound.PlaySound&quot;&gt; &lt;code&gt;PlaySound()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;sound&lt;/em&gt;参数是WAV文件的存储映像，为类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03f6dce2a0c575617067c550aeaa2aeb5a0a02ea" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;spawn&lt;/em&gt; and &lt;em&gt;forkserver&lt;/em&gt; start methods</source>
          <target state="translated">该&lt;em&gt;菌种&lt;/em&gt;和&lt;em&gt;forkserver&lt;/em&gt;启动方法</target>
        </trans-unit>
        <trans-unit id="812f74adf35e9bd9c0a7d57ac0e4adfe7af57bde" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;spec&lt;/em&gt; and &lt;em&gt;spec_set&lt;/em&gt; keyword arguments are passed to the &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; if patch is creating one for you.</source>
          <target state="translated">该&lt;em&gt;规范&lt;/em&gt;和&lt;em&gt;spec_set&lt;/em&gt;关键字参数传递给&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;如果补丁创建一个给你。</target>
        </trans-unit>
        <trans-unit id="bd76eed69117ffe302594bd904142e1af0f14d91" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stacklevel&lt;/em&gt; parameter is passed from code calling the &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; and other APIs. If greater than 1, the excess is used to skip stack frames before determining the values to be returned. This will generally be useful when calling logging APIs from helper/wrapper code, so that the information in the event log refers not to the helper/wrapper code, but to the code that calls it.</source>
          <target state="translated">该&lt;em&gt;stacklevel&lt;/em&gt;参数从代码中调用传递的&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;和其他API。如果大于1，则多余部分将用于跳过堆栈帧，然后再确定要返回的值。当从帮助程序/包装器代码调用日志记录API时，这通常很有用，因此事件日志中的信息不是指帮助器/包装器代码，而是指调用它的代码。</target>
        </trans-unit>
        <trans-unit id="49def39631fd237e8361aefad23b30365e03cf85" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;standalone&lt;/em&gt; argument behaves exactly as in &lt;code&gt;writexml()&lt;/code&gt;.</source>
          <target state="translated">该&lt;em&gt;独立&lt;/em&gt;参数的行为完全在 &lt;code&gt;writexml()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eee7bb5e1f93d0aa7def4b926657f815b96ba449" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;start_serving&lt;/em&gt; keyword-only parameter to &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt;&lt;code&gt;asyncio.start_server()&lt;/code&gt;&lt;/a&gt; allows creating a Server object that is not accepting connections initially. In this case &lt;code&gt;Server.start_serving()&lt;/code&gt;, or &lt;a href=&quot;#asyncio.Server.serve_forever&quot;&gt;&lt;code&gt;Server.serve_forever()&lt;/code&gt;&lt;/a&gt; can be used to make the Server start accepting connections.</source>
          <target state="translated">所述&lt;em&gt;start_serving&lt;/em&gt;唯一关键字参数&lt;a href=&quot;#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asyncio-stream#asyncio.start_server&quot;&gt; &lt;code&gt;asyncio.start_server()&lt;/code&gt; &lt;/a&gt;允许创建未接受连接开始一个服务器对象。在这种情况下，可以使用 &lt;code&gt;Server.start_serving()&lt;/code&gt; 或&lt;a href=&quot;#asyncio.Server.serve_forever&quot;&gt; &lt;code&gt;Server.serve_forever()&lt;/code&gt; &lt;/a&gt;来使服务器开始接受连接。</target>
        </trans-unit>
        <trans-unit id="ff845514b67e263cd929598b99bd6da9b00014a1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stmt&lt;/em&gt; and &lt;em&gt;setup&lt;/em&gt; parameters can also take objects that are callable without arguments. This will embed calls to them in a timer function that will then be executed by &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt;. Note that the timing overhead is a little larger in this case because of the extra function calls.</source>
          <target state="translated">该&lt;em&gt;语句&lt;/em&gt;和&lt;em&gt;设置&lt;/em&gt;参数也可以采取的是不带参数的可调用的对象。这会将对它们的调用嵌入到计时器函数中，然后由&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;执行。请注意，在这种情况下，由于额外的函数调用，时序开销会稍大一些。</target>
        </trans-unit>
        <trans-unit id="d459734c7b70a35885ce8138ec50017c8cb4923e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stream&lt;/em&gt; argument must be a file-like object open for reading text or binary data, as appropriate for the specific codec.</source>
          <target state="translated">的&lt;em&gt;流&lt;/em&gt;参数必须是一个类文件对象开放阅读文本或二进制数据，以适合特定的编解码器。</target>
        </trans-unit>
        <trans-unit id="e9421205ba92f1959114a601b65062efde304270" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stream&lt;/em&gt; argument must be a file-like object open for writing text or binary data, as appropriate for the specific codec.</source>
          <target state="translated">该&lt;em&gt;流&lt;/em&gt;参数必须是一个类似文件的对象开写文本或二进制数据，以适合特定的编解码器。</target>
        </trans-unit>
        <trans-unit id="a4f9796f885c7ccb144d9aef721b442954ff6936" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stream&lt;/em&gt; argument must be a file-like object.</source>
          <target state="translated">该&lt;em&gt;流&lt;/em&gt;参数必须是一个类似文件的对象。</target>
        </trans-unit>
        <trans-unit id="e23660071587e149c908f2b1a9eb0b91e48c3be1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;strict_timestamps&lt;/em&gt; argument, when set to &lt;code&gt;False&lt;/code&gt;, allows to zip files older than 1980-01-01 at the cost of setting the timestamp to 1980-01-01. Similar behavior occurs with files newer than 2107-12-31, the timestamp is also set to the limit.</source>
          <target state="translated">当&lt;em&gt;strict_timestamps&lt;/em&gt;参数设置为 &lt;code&gt;False&lt;/code&gt; 时，允许将早于1980-01-01的文件压缩为zip文件，但需要将时间戳设置为1980-01-01。对于高于2107-12-31的文件，也会发生类似的行为，时间戳也设置为限制。</target>
        </trans-unit>
        <trans-unit id="65a8ac3a449de8cf3f20f75dbe64dad0275a8b03" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stripdir&lt;/em&gt;, &lt;em&gt;prependdir&lt;/em&gt; and &lt;em&gt;limit_sl_dest&lt;/em&gt; arguments correspond to the &lt;code&gt;-s&lt;/code&gt;, &lt;code&gt;-p&lt;/code&gt; and &lt;code&gt;-e&lt;/code&gt; options described above. They may be specified as &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;bytes&lt;/code&gt; or &lt;a href=&quot;os#os.PathLike&quot;&gt;&lt;code&gt;os.PathLike&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">的&lt;em&gt;stripdir&lt;/em&gt;，&lt;em&gt;prependdir&lt;/em&gt;和&lt;em&gt;limit_sl_dest&lt;/em&gt;参数对应 &lt;code&gt;-s&lt;/code&gt; ， &lt;code&gt;-p&lt;/code&gt; 和 &lt;code&gt;-e&lt;/code&gt; 上述选项。它们可以指定为 &lt;code&gt;str&lt;/code&gt; ， &lt;code&gt;bytes&lt;/code&gt; 或&lt;a href=&quot;os#os.PathLike&quot;&gt; &lt;code&gt;os.PathLike&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4bd056fc144b78ef948e2d71b7ab2d9023d675c2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;style&lt;/em&gt; parameter can be one of &amp;lsquo;%&amp;rsquo;, &amp;lsquo;{&amp;lsquo; or &amp;lsquo;$&amp;rsquo; and determines how the format string will be merged with its data: using one of %-formatting, &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;string#string.Template&quot;&gt;&lt;code&gt;string.Template&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#formatting-styles&quot;&gt;Using particular formatting styles throughout your application&lt;/a&gt; for more information on using {- and $-formatting for log messages.</source>
          <target state="translated">该&lt;em&gt;风格&lt;/em&gt;参数可以是&amp;ldquo;％&amp;rdquo;之一，&amp;ldquo;{&amp;rdquo;或&amp;ldquo;$&amp;rdquo;，并确定如何格式字符串将其数据合并：使用％-formatting，一个&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;string#string.Template&quot;&gt; &lt;code&gt;string.Template&lt;/code&gt; &lt;/a&gt;。请参阅&lt;a href=&quot;https://docs.python.org/3.8/howto/logging-cookbook.html#formatting-styles&quot;&gt;在整个应用程序中使用特定的格式样式，&lt;/a&gt;以获取有关对日志消息使用{和$格式的更多信息。</target>
        </trans-unit>
        <trans-unit id="980dc29e4498aad66835fc503d747dd8233e2d1d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;style&lt;/em&gt; parameter can be one of &amp;lsquo;%&amp;rsquo;, &amp;lsquo;{&amp;lsquo; or &amp;lsquo;$&amp;rsquo; and determines how the format string will be merged with its data: using one of %-formatting, &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;string#string.Template&quot;&gt;&lt;code&gt;string.Template&lt;/code&gt;&lt;/a&gt;. This only applies to the format string &lt;em&gt;fmt&lt;/em&gt; (e.g. &lt;code&gt;'%(message)s'&lt;/code&gt; or &lt;code&gt;{message}&lt;/code&gt;), not to the actual log messages passed to &lt;code&gt;Logger.debug&lt;/code&gt; etc; see &lt;a href=&quot;https://docs.python.org/3.9/howto/logging-cookbook.html#formatting-styles&quot;&gt;Using particular formatting styles throughout your application&lt;/a&gt; for more information on using {- and $-formatting for log messages.</source>
          <target state="translated">该&lt;em&gt;风格&lt;/em&gt;参数可以是&amp;ldquo;％&amp;rdquo;之一，&amp;ldquo;{&amp;rdquo;或&amp;ldquo;$&amp;rdquo;，并确定如何格式字符串将其数据合并：使用％-formatting，一个&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;string#string.Template&quot;&gt; &lt;code&gt;string.Template&lt;/code&gt; &lt;/a&gt;。这仅适用于格式字符串&lt;em&gt;fmt&lt;/em&gt;（例如 &lt;code&gt;'%(message)s'&lt;/code&gt; 或 &lt;code&gt;{message}&lt;/code&gt; ），不适用于传递给 &lt;code&gt;Logger.debug&lt;/code&gt; 等的实际日志消息；有关在日志消息中使用{和$格式的更多信息，请参阅&lt;a href=&quot;https://docs.python.org/3.9/howto/logging-cookbook.html#formatting-styles&quot;&gt;在整个应用程序中使用特定的格式样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="818f61b3c97b7797753f6e70a4b3d69d5f55ff63" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;suffix&lt;/em&gt; may be any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">所述&lt;em&gt;后缀&lt;/em&gt;可以是任何&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节状物体&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f91bb789f435e7bbe9d7a96d06995f3f8d43b2f7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;symbol&lt;/em&gt; argument determines whether &lt;em&gt;source&lt;/em&gt; is compiled as a statement (&lt;code&gt;'single'&lt;/code&gt;, the default) or as an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-expression&quot;&gt;expression&lt;/a&gt; (&lt;code&gt;'eval'&lt;/code&gt;). Any other value will cause &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to be raised.</source>
          <target state="translated">所述&lt;em&gt;符号&lt;/em&gt;参数确定是否&lt;em&gt;源&lt;/em&gt;被编译为语句（ &lt;code&gt;'single'&lt;/code&gt; 作为，缺省值）或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-expression&quot;&gt;表达&lt;/a&gt;（ &lt;code&gt;'eval'&lt;/code&gt; ）。任何其他值将导致&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;引发。</target>
        </trans-unit>
        <trans-unit id="c69204d8b0b6fda613e8713bf735181dfac834c6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;symbol&lt;/em&gt; argument determines whether &lt;em&gt;source&lt;/em&gt; is compiled as a statement (&lt;code&gt;'single'&lt;/code&gt;, the default), as a sequence of statements (&lt;code&gt;'exec'&lt;/code&gt;) or as an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-expression&quot;&gt;expression&lt;/a&gt; (&lt;code&gt;'eval'&lt;/code&gt;). Any other value will cause &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to be raised.</source>
          <target state="translated">所述&lt;em&gt;符号&lt;/em&gt;参数确定是否&lt;em&gt;源&lt;/em&gt;被编译为语句（ &lt;code&gt;'single'&lt;/code&gt; ，缺省值），作为语句的序列（ &lt;code&gt;'exec'&lt;/code&gt; 作为一个）或&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-expression&quot;&gt;表达式&lt;/a&gt;（ &lt;code&gt;'eval'&lt;/code&gt; ）。任何其他值都将导致&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;升高。</target>
        </trans-unit>
        <trans-unit id="e44c727c722cd091526a9f92fdf653d13be39f3c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;table&lt;/em&gt; argument must be one of the predefined tables in the MSI schema, e.g. &lt;code&gt;'Feature'&lt;/code&gt;, &lt;code&gt;'File'&lt;/code&gt;, &lt;code&gt;'Component'&lt;/code&gt;, &lt;code&gt;'Dialog'&lt;/code&gt;, &lt;code&gt;'Control'&lt;/code&gt;, etc.</source>
          <target state="translated">所述&lt;em&gt;表&lt;/em&gt;参数必须是在MSI架构，例如，预定义表中的一个 &lt;code&gt;'Feature'&lt;/code&gt; ， &lt;code&gt;'File'&lt;/code&gt; ， &lt;code&gt;'Component'&lt;/code&gt; ， &lt;code&gt;'Dialog'&lt;/code&gt; ， &lt;code&gt;'Control'&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="43e5dbf1eb2f65e62249791eebe2af8f0a85e617" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tag&lt;/em&gt; argument is the name of the tag converted to lower case.</source>
          <target state="translated">的&lt;em&gt;标签&lt;/em&gt;参数是标记的名称转换为小写。</target>
        </trans-unit>
        <trans-unit id="678ee0b27d4f67663dcfba5935b84a5a9919a39f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tag&lt;/em&gt; argument is the name of the tag converted to lower case. The &lt;em&gt;attrs&lt;/em&gt; argument is a list of &lt;code&gt;(name, value)&lt;/code&gt; pairs containing the attributes found inside the tag&amp;rsquo;s &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; brackets. The &lt;em&gt;name&lt;/em&gt; will be translated to lower case, and quotes in the &lt;em&gt;value&lt;/em&gt; have been removed, and character and entity references have been replaced.</source>
          <target state="translated">的&lt;em&gt;标签&lt;/em&gt;参数是标记的名称转换为小写。所述&lt;em&gt;ATTRS&lt;/em&gt;参数是的列表 &lt;code&gt;(name, value)&lt;/code&gt; 包含的属性对中发现的标签的内部 &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; 支架。该&lt;em&gt;名称&lt;/em&gt;将被转换为小写，并在报价&lt;em&gt;价值&lt;/em&gt;已经被删除，字符和实体引用已被替换。</target>
        </trans-unit>
        <trans-unit id="8055f97fb11a0ac404880fc21479eb1700734e23" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tag&lt;/em&gt; values are strings, with these meanings:</source>
          <target state="translated">该&lt;em&gt;标签&lt;/em&gt;值是字符串，这些含义：</target>
        </trans-unit>
        <trans-unit id="b20f83bb0150a6498b1b44a47a57fb80da5c5a8a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;target&lt;/em&gt; argument determines where the resulting archive will be written:</source>
          <target state="translated">所述&lt;em&gt;目标&lt;/em&gt;参数确定所生成存档将被写入：</target>
        </trans-unit>
        <trans-unit id="1e10c168e7e125b3ad9c496694fc6cf4572a554e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tarinfo&lt;/em&gt; argument can be used to replace the default &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; class with a different one.</source>
          <target state="translated">所述&lt;em&gt;tarinfo&lt;/em&gt;参数可以用来替换默认&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;用不同的一类。</target>
        </trans-unit>
        <trans-unit id="526fb955ea344b7381f36e74d15dd0727d123ce0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;testLoader&lt;/em&gt; argument has to be a &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; instance, and defaults to &lt;a href=&quot;#unittest.defaultTestLoader&quot;&gt;&lt;code&gt;defaultTestLoader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;testLoader&lt;/em&gt;参数必须是一个&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; &lt;/a&gt;实例，并默认为&lt;a href=&quot;#unittest.defaultTestLoader&quot;&gt; &lt;code&gt;defaultTestLoader&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ee5fd830ce393d63a0fedec8d6d4ba56b87e218" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;testRunner&lt;/em&gt; argument can either be a test runner class or an already created instance of it. By default &lt;code&gt;main&lt;/code&gt; calls &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt; with an exit code indicating success or failure of the tests run.</source>
          <target state="translated">所述&lt;em&gt;的TestRunner&lt;/em&gt;参数可以是一个测试运行类或它的一个已创建的实例。默认情况下， &lt;code&gt;main&lt;/code&gt; 调用&lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt;带有退出代码，该退出代码指示测试运行成功或失败。</target>
        </trans-unit>
        <trans-unit id="f1d67f40b7914af3788448149baeacbe91461387" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;timeout&lt;/em&gt; argument is passed to &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;Popen.communicate()&lt;/code&gt;&lt;/a&gt;. If the timeout expires, the child process will be killed and waited for. The &lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt;&lt;code&gt;TimeoutExpired&lt;/code&gt;&lt;/a&gt; exception will be re-raised after the child process has terminated.</source>
          <target state="translated">在&lt;em&gt;超时&lt;/em&gt;参数传递给&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;Popen.communicate()&lt;/code&gt; &lt;/a&gt;。如果超时到期，子进程将被终止并等待。该&lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt; &lt;code&gt;TimeoutExpired&lt;/code&gt; &lt;/a&gt;异常将被重新提出的子进程终止后。</target>
        </trans-unit>
        <trans-unit id="7b693b5b8037c056a4f62f7c7c759475e832507e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;transport&lt;/em&gt; argument is the transport representing the connection. The protocol is responsible for storing the reference to its transport.</source>
          <target state="translated">该&lt;em&gt;传输&lt;/em&gt;参数是代表连接的传输。该协议负责存储对其传输的引用。</target>
        </trans-unit>
        <trans-unit id="53c2a3e3b3eb98863bde5d4305376d1fa9980862" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;traps&lt;/em&gt; and &lt;em&gt;flags&lt;/em&gt; fields list any signals to be set. Generally, new contexts should only set traps and leave the flags clear.</source>
          <target state="translated">该&lt;em&gt;陷阱&lt;/em&gt;和&lt;em&gt;标志&lt;/em&gt;字段列出任何信号进行设置。通常，新的上下文应仅设置陷阱并清除标志。</target>
        </trans-unit>
        <trans-unit id="4c741294182b97a2d1aa5f08589cea85a0af5c1d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tuple&lt;/em&gt; should be &lt;code&gt;(nchannels, sampwidth, framerate, nframes, comptype,
compname)&lt;/code&gt;, with values valid for the &lt;code&gt;set*()&lt;/code&gt; methods. Sets all parameters.</source>
          <target state="translated">的&lt;em&gt;元组&lt;/em&gt;应该是 &lt;code&gt;(nchannels, sampwidth, framerate, nframes, comptype, compname)&lt;/code&gt; ，与该值的有效 &lt;code&gt;set*()&lt;/code&gt; 方法。设置所有参数。</target>
        </trans-unit>
        <trans-unit id="b7ee36144f195c06ce56a0eda12cbb5df2802992" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;type&lt;/em&gt; of an enumeration member is the enumeration it belongs to:</source>
          <target state="translated">枚举成员的&lt;em&gt;类型&lt;/em&gt;是它所属的枚举：</target>
        </trans-unit>
        <trans-unit id="31f48dd378c2469953b274b9fc49aab7aa53a5d5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;unraisable&lt;/em&gt; argument has the following attributes:</source>
          <target state="translated">该&lt;em&gt;unraisable&lt;/em&gt;参数具有以下属性：</target>
        </trans-unit>
        <trans-unit id="08cc62e6a77cc57a42acffe8d231f2d3231ee2b4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;use_errno&lt;/em&gt; parameter, when set to true, enables a ctypes mechanism that allows accessing the system &lt;a href=&quot;errno#module-errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; error number in a safe way. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; maintains a thread-local copy of the systems &lt;a href=&quot;errno#module-errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; variable; if you call foreign functions created with &lt;code&gt;use_errno=True&lt;/code&gt; then the &lt;a href=&quot;errno#module-errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; value before the function call is swapped with the ctypes private copy, the same happens immediately after the function call.</source>
          <target state="translated">该&lt;em&gt;use_errno&lt;/em&gt;参数，当设置为true，使一个ctypes机制，允许访问系统&lt;a href=&quot;errno#module-errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt;以安全的方式错误号。&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;维护系统&lt;a href=&quot;errno#module-errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt;变量的线程本地副本；如果调用用 &lt;code&gt;use_errno=True&lt;/code&gt; 创建的外部函数，则函数调用之前的&lt;a href=&quot;errno#module-errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt;值将与ctypes私有副本交换，在函数调用之后立即发生相同的情况。</target>
        </trans-unit>
        <trans-unit id="86cfed265a7f536800ec9f3650cbd08a05b9bc49" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;use_last_error&lt;/em&gt; parameter, when set to true, enables the same mechanism for the Windows error code which is managed by the &lt;a href=&quot;#ctypes.GetLastError&quot;&gt;&lt;code&gt;GetLastError()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;SetLastError()&lt;/code&gt; Windows API functions; &lt;a href=&quot;#ctypes.get_last_error&quot;&gt;&lt;code&gt;ctypes.get_last_error()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ctypes.set_last_error&quot;&gt;&lt;code&gt;ctypes.set_last_error()&lt;/code&gt;&lt;/a&gt; are used to request and change the ctypes private copy of the windows error code.</source>
          <target state="translated">的&lt;em&gt;use_last_error&lt;/em&gt;参数，设置为true时，使能由所述管理Windows错误代码相同的机制&lt;a href=&quot;#ctypes.GetLastError&quot;&gt; &lt;code&gt;GetLastError()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;SetLastError()&lt;/code&gt; Windows API函数; &lt;a href=&quot;#ctypes.get_last_error&quot;&gt; &lt;code&gt;ctypes.get_last_error()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ctypes.set_last_error&quot;&gt; &lt;code&gt;ctypes.set_last_error()&lt;/code&gt; &lt;/a&gt;用于请求和更改Windows错误代码的ctypes专用副本。</target>
        </trans-unit>
        <trans-unit id="5423d3d6187ddeee811ab8af8e82496d2df3fc15" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;value&lt;/em&gt; argument can be any object, which is then converted to a string.</source>
          <target state="translated">所述&lt;em&gt;值&lt;/em&gt;参数可以是任何对象，然后将其转换为一个字符串。</target>
        </trans-unit>
        <trans-unit id="ae0ea92bd8512288395f2eac3ca31db0455c95fe" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;verbose&lt;/em&gt; argument is unused and deprecated.</source>
          <target state="translated">的&lt;em&gt;详细&lt;/em&gt;参数是未使用和废弃。</target>
        </trans-unit>
        <trans-unit id="6a3d598de8cb43d84c851a82d72602df8acab107" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;version&lt;/em&gt; argument indicates the data format that &lt;code&gt;dump&lt;/code&gt; should use (see below).</source>
          <target state="translated">该&lt;em&gt;版本&lt;/em&gt;的说法表示数据格式 &lt;code&gt;dump&lt;/code&gt; 应该使用（见下文）。</target>
        </trans-unit>
        <trans-unit id="915638ef494048f3a2b93140ef40d6b653d16e99" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;version&lt;/em&gt; argument indicates the data format that &lt;code&gt;dumps&lt;/code&gt; should use (see below).</source>
          <target state="translated">该&lt;em&gt;版本&lt;/em&gt;的说法表示数据格式 &lt;code&gt;dumps&lt;/code&gt; 应该使用（见下文）。</target>
        </trans-unit>
        <trans-unit id="ff231d54e756958842b7640abbcd92fef9fd13fa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;warnings&lt;/em&gt; argument specifies the &lt;a href=&quot;warnings#warning-filter&quot;&gt;warning filter&lt;/a&gt; that should be used while running the tests. If it&amp;rsquo;s not specified, it will remain &lt;code&gt;None&lt;/code&gt; if a &lt;code&gt;-W&lt;/code&gt; option is passed to &lt;strong&gt;python&lt;/strong&gt; (see &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-warnings&quot;&gt;Warning control&lt;/a&gt;), otherwise it will be set to &lt;code&gt;'default'&lt;/code&gt;.</source>
          <target state="translated">该&lt;em&gt;警告&lt;/em&gt;参数指定的&lt;a href=&quot;warnings#warning-filter&quot;&gt;警告过滤器&lt;/a&gt;应该在运行测试中使用。如果没有指定，它仍将 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;-W&lt;/code&gt; 选项传递给&lt;strong&gt;蟒蛇&lt;/strong&gt;（见&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-warnings&quot;&gt;警告控制&lt;/a&gt;），否则将被设置为 &lt;code&gt;'default'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7df7c34b80f15610fb6fcd42b9f8468c9f8eac2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;warnings&lt;/em&gt; argument specifies the &lt;a href=&quot;warnings#warning-filter&quot;&gt;warning filter&lt;/a&gt; that should be used while running the tests. If it&amp;rsquo;s not specified, it will remain &lt;code&gt;None&lt;/code&gt; if a &lt;code&gt;-W&lt;/code&gt; option is passed to &lt;strong&gt;python&lt;/strong&gt; (see &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-warnings&quot;&gt;Warning control&lt;/a&gt;), otherwise it will be set to &lt;code&gt;'default'&lt;/code&gt;.</source>
          <target state="translated">该&lt;em&gt;警告&lt;/em&gt;参数指定的&lt;a href=&quot;warnings#warning-filter&quot;&gt;警告过滤器&lt;/a&gt;应该在运行测试中使用。如果没有指定，它仍将 &lt;code&gt;None&lt;/code&gt; 如果 &lt;code&gt;-W&lt;/code&gt; 选项传递给&lt;strong&gt;蟒蛇&lt;/strong&gt;（见&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-warnings&quot;&gt;警告控制&lt;/a&gt;），否则将被设置为 &lt;code&gt;'default'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8821b03c739e7bb5a0c16c56cf4b025ee726fecf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;wbits&lt;/em&gt; argument controls the size of the history buffer (or the &amp;ldquo;window size&amp;rdquo;) used when compressing data, and whether a header and trailer is included in the output. It can take several ranges of values, defaulting to &lt;code&gt;15&lt;/code&gt; (MAX_WBITS):</source>
          <target state="translated">所述&lt;em&gt;WBITS&lt;/em&gt;参数控制历史缓冲器的大小（或&amp;ldquo;窗口大小&amp;rdquo;）压缩数据时所使用的，以及是否一个头和尾被包括在输出中。它可以采用多个值范围，默认为 &lt;code&gt;15&lt;/code&gt; （MAX_WBITS）：</target>
        </trans-unit>
        <trans-unit id="588d73b4848378951d405715f75f323ade2906e3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;wbits&lt;/em&gt; parameter controls the size of the history buffer (or &amp;ldquo;window size&amp;rdquo;), and what header and trailer format is expected. It is similar to the parameter for &lt;a href=&quot;#zlib.compressobj&quot;&gt;&lt;code&gt;compressobj()&lt;/code&gt;&lt;/a&gt;, but accepts more ranges of values:</source>
          <target state="translated">该&lt;em&gt;WBITS&lt;/em&gt;参数控制历史缓冲区的大小（或&amp;ldquo;窗口大小&amp;rdquo;），什么头和尾格式的预期。它类似于&lt;a href=&quot;#zlib.compressobj&quot;&gt; &lt;code&gt;compressobj()&lt;/code&gt; &lt;/a&gt;的参数，但接受更多范围的值：</target>
        </trans-unit>
        <trans-unit id="56f7b96f1606c2648c328d526d73fc9a757e342f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;wbits&lt;/em&gt; parameter controls the size of the history buffer (or the &amp;ldquo;window size&amp;rdquo;), and what header and trailer format is expected. It has the same meaning as &lt;a href=&quot;#decompress-wbits&quot;&gt;described for decompress()&lt;/a&gt;.</source>
          <target state="translated">该&lt;em&gt;WBITS&lt;/em&gt;参数控制历史缓冲区的大小（或&amp;ldquo;窗口大小&amp;rdquo;），什么头和尾格式的预期。它具有与&lt;a href=&quot;#decompress-wbits&quot;&gt;decompress（）&lt;/a&gt;相同的含义。</target>
        </trans-unit>
        <trans-unit id="a39abfdff05160cffd980e736dec49577cf18f65" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;weightA&lt;/em&gt; and &lt;em&gt;weightB&lt;/em&gt; arguments are parameters for a simple digital filter and default to &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; respectively.</source>
          <target state="translated">的&lt;em&gt;weightA&lt;/em&gt;和&lt;em&gt;weightB&lt;/em&gt;参数是一个简单的数字滤波器和默认参数以 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;0&lt;/code&gt; 分别。</target>
        </trans-unit>
        <trans-unit id="0f15ad7e8083bdb44b330eb9ab06069b23b0308f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;weights&lt;/em&gt; or &lt;em&gt;cum_weights&lt;/em&gt; can use any numeric type that interoperates with the &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; values returned by &lt;a href=&quot;#module-random&quot;&gt;&lt;code&gt;random()&lt;/code&gt;&lt;/a&gt; (that includes integers, floats, and fractions but excludes decimals). Behavior is undefined if any weight is negative. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if all weights are zero.</source>
          <target state="translated">的&lt;em&gt;权重&lt;/em&gt;或&lt;em&gt;cum_weights&lt;/em&gt;可以使用任何数值类型与该互操作&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;值返回由&lt;a href=&quot;#module-random&quot;&gt; &lt;code&gt;random()&lt;/code&gt; &lt;/a&gt;（其包括整数，浮点数，和分数，但不包括小数）。如果任何权重为负，则行为是不确定的。一个&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 异常&lt;/a&gt;，如果所有的权重都为零上升。</target>
        </trans-unit>
        <trans-unit id="2f53b362c6070875065143332b6ab04bce22e663" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;weights&lt;/em&gt; or &lt;em&gt;cum_weights&lt;/em&gt; can use any numeric type that interoperates with the &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt; values returned by &lt;a href=&quot;#module-random&quot;&gt;&lt;code&gt;random()&lt;/code&gt;&lt;/a&gt; (that includes integers, floats, and fractions but excludes decimals). Weights are assumed to be non-negative.</source>
          <target state="translated">的&lt;em&gt;权重&lt;/em&gt;或&lt;em&gt;cum_weights&lt;/em&gt;可以使用任何数值类型与该互操作&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;值返回由&lt;a href=&quot;#module-random&quot;&gt; &lt;code&gt;random()&lt;/code&gt; &lt;/a&gt;（其包括整数，浮点数，和分数，但不包括小数）。权重假定为非负数。</target>
        </trans-unit>
        <trans-unit id="3c17783948cbf0dc9055cd0a70b59a79f07178e5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;winmode&lt;/em&gt; parameter is used on Windows to specify how the library is loaded (since &lt;em&gt;mode&lt;/em&gt; is ignored). It takes any value that is valid for the Win32 API &lt;code&gt;LoadLibraryEx&lt;/code&gt; flags parameter. When omitted, the default is to use the flags that result in the most secure DLL load to avoiding issues such as DLL hijacking. Passing the full path to the DLL is the safest way to ensure the correct library and dependencies are loaded.</source>
          <target state="translated">该&lt;em&gt;winmode&lt;/em&gt;参数用于在Windows上指定库是如何装载（因为&lt;em&gt;模式&lt;/em&gt;被忽略）。它采用对Win32 API &lt;code&gt;LoadLibraryEx&lt;/code&gt; 标志参数有效的任何值。省略时，默认设置是使用导致最安全的DLL加载的标志，以避免DLL劫持等问题。将完整路径传递给DLL是确保加载正确的库和依赖项的最安全方法。</target>
        </trans-unit>
        <trans-unit id="d4c56f152b380a49d2010425932c120b11eb953a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;year&lt;/em&gt;, &lt;em&gt;month&lt;/em&gt; and &lt;em&gt;day&lt;/em&gt; arguments are required. &lt;em&gt;tzinfo&lt;/em&gt; may be &lt;code&gt;None&lt;/code&gt;, or an instance of a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass. The remaining arguments must be integers in the following ranges:</source>
          <target state="translated">必须提供&lt;em&gt;年&lt;/em&gt;，&lt;em&gt;月&lt;/em&gt;和&lt;em&gt;日&lt;/em&gt;参数。&lt;em&gt;tzinfo&lt;/em&gt;可以为 &lt;code&gt;None&lt;/code&gt; 或&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;子类的实例。其余参数必须是以下范围内的整数：</target>
        </trans-unit>
        <trans-unit id="d7cce18ab3585b4f15d60b0009c7d580585e27b7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;zdict&lt;/em&gt; parameter specifies a predefined compression dictionary. If provided, this must be the same dictionary as was used by the compressor that produced the data that is to be decompressed.</source>
          <target state="translated">所述&lt;em&gt;zdict&lt;/em&gt;参数指定的预定义压缩词典。如果提供的话，它必须与产生要解压缩数据的压缩器使用的字典相同。</target>
        </trans-unit>
        <trans-unit id="fcf90de0cf7d5a594641c5c96a73337eebf219b6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;preferred&lt;/strong&gt; function to get the running event loop.</source>
          <target state="translated">获取运行事件循环的&lt;strong&gt;首选&lt;/strong&gt;函数。</target>
        </trans-unit>
        <trans-unit id="f60d956207da8637154e9bb57b31087cb2d4d778" translate="yes" xml:space="preserve">
          <source>The ABC &lt;code&gt;MyIterable&lt;/code&gt; defines the standard iterable method, &lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt;, as an abstract method. The implementation given here can still be called from subclasses. The &lt;code&gt;get_iterator()&lt;/code&gt; method is also part of the &lt;code&gt;MyIterable&lt;/code&gt; abstract base class, but it does not have to be overridden in non-abstract derived classes.</source>
          <target state="translated">ABC &lt;code&gt;MyIterable&lt;/code&gt; 定义了标准的可迭代方法&lt;a href=&quot;stdtypes#iterator.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;作为抽象方法。此处给出的实现仍可以从子类中调用。所述 &lt;code&gt;get_iterator()&lt;/code&gt; 方法也是的一部分 &lt;code&gt;MyIterable&lt;/code&gt; 抽象基类，但它不具有在非抽象派生类被重写。</target>
        </trans-unit>
        <trans-unit id="faa22bc6bce0a5e04681e2a974e7cae8acce023c" translate="yes" xml:space="preserve">
          <source>The ADPCM coders have never been tried against other ADPCM coders, only against themselves. It could well be that I misinterpreted the standards in which case they will not be interoperable with the respective standards.</source>
          <target state="translated">ADPCM编码者从未与其他ADPCM编码者对抗,只是与他们自己对抗。很可能是我误解了标准,在这种情况下,他们将无法与各自的标准互操作。</target>
        </trans-unit>
        <trans-unit id="8528587fd89e0952d7a00dbb0e05d60038f18b25" translate="yes" xml:space="preserve">
          <source>The AF_* and SOCK_* constants are now &lt;code&gt;AddressFamily&lt;/code&gt; and &lt;code&gt;SocketKind&lt;/code&gt;&lt;a href=&quot;enum#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt; collections.</source>
          <target state="translated">AF_ *和SOCK_ *常量现在是 &lt;code&gt;AddressFamily&lt;/code&gt; 和 &lt;code&gt;SocketKind&lt;/code&gt; &lt;a href=&quot;enum#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; &lt;/a&gt;集合。</target>
        </trans-unit>
        <trans-unit id="1afb49999cdc36f38970839ccf0a7b7f6b8216b2" translate="yes" xml:space="preserve">
          <source>The API below differs from textbook heap algorithms in two aspects: (a) We use zero-based indexing. This makes the relationship between the index for a node and the indexes for its children slightly less obvious, but is more suitable since Python uses zero-based indexing. (b) Our pop method returns the smallest item, not the largest (called a &amp;ldquo;min heap&amp;rdquo; in textbooks; a &amp;ldquo;max heap&amp;rdquo; is more common in texts because of its suitability for in-place sorting).</source>
          <target state="translated">下面的API在两个方面与教科书堆算法不同：（a）我们使用基于零的索引。这使节点的索引与其子节点的索引之间的关系不太明显，但由于Python使用基于零的索引，因此更适合。（b）我们的pop方法返回的是最小的项目，而不是最大的项目（在教科书中称为&amp;ldquo;最小堆&amp;rdquo;；在文本中，&amp;ldquo;最大堆&amp;rdquo;由于其适合就地排序而更常见）。</target>
        </trans-unit>
        <trans-unit id="76f3b439a545c7eb9ff445a4bdd93b428bc75166" translate="yes" xml:space="preserve">
          <source>The API provided by this module is likely to change in future releases; such changes may not be backward compatible.</source>
          <target state="translated">该模块提供的API可能会在未来的版本中发生变化;这些变化可能不会向后兼容。</target>
        </trans-unit>
        <trans-unit id="e322260aafb4a2f2a2ca6cdac3c65b6a2316bc3a" translate="yes" xml:space="preserve">
          <source>The Any type</source>
          <target state="translated">任何类型</target>
        </trans-unit>
        <trans-unit id="e1f06186c630db765adc5cb7fa1d1a7415bae3ea" translate="yes" xml:space="preserve">
          <source>The AutoCompleteWindow (ACW) will open after a predefined delay (default is two seconds) after a &amp;lsquo;.&amp;rsquo; or (in a string) an os.sep is typed. If after one of those characters (plus zero or more other characters) a tab is typed the ACW will open immediately if a possible continuation is found.</source>
          <target state="translated">AutoCompleteWindow（ACW）将在&amp;ldquo;。&amp;rdquo;之后的预定义延迟（默认为两秒）后打开。或（在字符串中）输入os.sep。如果在这些字符之一（加上零个或多个其他字符）之后键入标签，则如果找到可能的延续，则ACW将立即打开。</target>
        </trans-unit>
        <trans-unit id="b2041194f9f02b3ffb833c005cb8c357700fb19a" translate="yes" xml:space="preserve">
          <source>The BCJ filters are intended to be applied to machine code. They convert relative branches, calls and jumps in the code to use absolute addressing, with the aim of increasing the redundancy that can be exploited by the compressor. These filters support one option, &lt;code&gt;start_offset&lt;/code&gt;. This specifies the address that should be mapped to the beginning of the input data. The default is 0.</source>
          <target state="translated">BCJ过滤器旨在应用于机器代码。它们转换代码中的相关分支，调用和跳转以使用绝对寻址，目的是增加压缩程序可以利用的冗余。这些过滤器支持一个选项 &lt;code&gt;start_offset&lt;/code&gt; 。这指定了应该映射到输入数据开头的地址。默认值为0。</target>
        </trans-unit>
        <trans-unit id="c2e8e2dc67f7620982af31145da08c3a0edd2e25" translate="yes" xml:space="preserve">
          <source>The BSD name for &lt;a href=&quot;#resource.RLIMIT_NOFILE&quot;&gt;&lt;code&gt;RLIMIT_NOFILE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#resource.RLIMIT_NOFILE&quot;&gt; &lt;code&gt;RLIMIT_NOFILE&lt;/code&gt; &lt;/a&gt;的BSD名称。</target>
        </trans-unit>
        <trans-unit id="8bd75df7a2ed31b671b15ba9f2a6053a27354cf7" translate="yes" xml:space="preserve">
          <source>The C API version for this interpreter. Programmers may find this useful when debugging version conflicts between Python and extension modules.</source>
          <target state="translated">这个解释器的 C API 版本。在调试 Python 和扩展模块之间的版本冲突时,程序员可能会发现这个版本很有用。</target>
        </trans-unit>
        <trans-unit id="e54c0cca00a30bb23c9c25454179867adcaae900" translate="yes" xml:space="preserve">
          <source>The C code was partly rewritten for Python by &lt;em&gt;Christian Heimes&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;Christian Heimes&lt;/em&gt;为Python重写了部分C代码。</target>
        </trans-unit>
        <trans-unit id="3987a1d7761e1a27305f1fc4189f71d26993d320" translate="yes" xml:space="preserve">
          <source>The C standard defines the locale as a program-wide property that may be relatively expensive to change. On top of that, some implementation are broken in such a way that frequent locale changes may cause core dumps. This makes the locale somewhat painful to use correctly.</source>
          <target state="translated">C标准将locale定义为一个程序范围内的属性,改变它的代价可能相对较高。最重要的是,一些实现被打破了,频繁地改变locale可能会导致核心转储。这使得locale的正确使用有些痛苦。</target>
        </trans-unit>
        <trans-unit id="8d971f33fa3546c84e58c819f6dfcf232e9c699b" translate="yes" xml:space="preserve">
          <source>The CSS class for a weekday occurring in the previous or coming month.</source>
          <target state="translated">上个月或下个月某个工作日的CSS课程。</target>
        </trans-unit>
        <trans-unit id="504a86218f68cab32113c8eb840de3669681f12d" translate="yes" xml:space="preserve">
          <source>The CSS class for the table head for the whole year (used by &lt;a href=&quot;#calendar.HTMLCalendar.formatyear&quot;&gt;&lt;code&gt;formatyear()&lt;/code&gt;&lt;/a&gt;). The default value is &lt;code&gt;&quot;year&quot;&lt;/code&gt;.</source>
          <target state="translated">全年表头的CSS类（由&lt;a href=&quot;#calendar.HTMLCalendar.formatyear&quot;&gt; &lt;code&gt;formatyear()&lt;/code&gt; 使用&lt;/a&gt;）。默认值为 &lt;code&gt;&quot;year&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ee09fe1f5481a133063a3d6ee9e619dcd1e87e5" translate="yes" xml:space="preserve">
          <source>The CSS class for the whole month&amp;rsquo;s table (used by &lt;a href=&quot;#calendar.HTMLCalendar.formatmonth&quot;&gt;&lt;code&gt;formatmonth()&lt;/code&gt;&lt;/a&gt;). The default value is &lt;code&gt;&quot;month&quot;&lt;/code&gt;.</source>
          <target state="translated">整个月表的CSS类（由&lt;a href=&quot;#calendar.HTMLCalendar.formatmonth&quot;&gt; &lt;code&gt;formatmonth()&lt;/code&gt; 使用&lt;/a&gt;）。默认值为 &lt;code&gt;&quot;month&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="772191c229f3b2e05ab1df0d074ffe18b8d47d83" translate="yes" xml:space="preserve">
          <source>The CSS class for the whole year&amp;rsquo;s table of tables (used by &lt;a href=&quot;#calendar.HTMLCalendar.formatyear&quot;&gt;&lt;code&gt;formatyear()&lt;/code&gt;&lt;/a&gt;). The default value is &lt;code&gt;&quot;year&quot;&lt;/code&gt;.</source>
          <target state="translated">全年表的CSS类（由&lt;a href=&quot;#calendar.HTMLCalendar.formatyear&quot;&gt; &lt;code&gt;formatyear()&lt;/code&gt; 使用&lt;/a&gt;）。默认值为 &lt;code&gt;&quot;year&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7103ea431534ee4b79f98427b6116337e9dc5615" translate="yes" xml:space="preserve">
          <source>The Catalog constructor</source>
          <target state="translated">目录构造函数</target>
        </trans-unit>
        <trans-unit id="96cf03cbb4d0932be4497cf99cf72eade4d3bc41" translate="yes" xml:space="preserve">
          <source>The DOM Level 2 recommendation defines a single exception, &lt;a href=&quot;#xml.dom.DOMException&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt;, and a number of constants that allow applications to determine what sort of error occurred. &lt;a href=&quot;#xml.dom.DOMException&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; instances carry a &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; attribute that provides the appropriate value for the specific exception.</source>
          <target state="translated">DOM Level 2建议定义了一个异常&lt;a href=&quot;#xml.dom.DOMException&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;，以及一些常量，这些常量使应用程序可以确定发生了哪种错误。&lt;a href=&quot;#xml.dom.DOMException&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;实例带有一个&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;属性，该属性为特定的异常提供适当的值。</target>
        </trans-unit>
        <trans-unit id="947495ed5aa7070a06069dcaba8341b2fcdc9d42" translate="yes" xml:space="preserve">
          <source>The DOM Level 2 recommendation defines one method and one attribute for these objects:</source>
          <target state="translated">DOM Level 2建议为这些对象定义了一个方法和一个属性。</target>
        </trans-unit>
        <trans-unit id="b5ba2f5f1b68b0824d76ea1829d1ce34696f29a6" translate="yes" xml:space="preserve">
          <source>The DOM is extremely useful for random-access applications. SAX only allows you a view of one bit of the document at a time. If you are looking at one SAX element, you have no access to another. If you are looking at a text node, you have no access to a containing element. When you write a SAX application, you need to keep track of your program&amp;rsquo;s position in the document somewhere in your own code. SAX does not do it for you. Also, if you need to look ahead in the XML document, you are just out of luck.</source>
          <target state="translated">DOM对于随机访问应用程序非常有用。SAX一次只允许您查看一份文档。如果您正在查看一个SAX元素，则无权访问另一个元素。如果您正在查看文本节点，则无权访问包含元素。编写SAX应用程序时，需要在自己的代码中的某个位置跟踪程序在文档中的位置。SAX不会为您这样做。另外，如果您需要在XML文档中放眼未来，那您就很不走运。</target>
        </trans-unit>
        <trans-unit id="6f03607955e97fbc57d05556b36ae065c2787ae3" translate="yes" xml:space="preserve">
          <source>The Document Object Model is being defined by the W3C in stages, or &amp;ldquo;levels&amp;rdquo; in their terminology. The Python mapping of the API is substantially based on the DOM Level 2 recommendation.</source>
          <target state="translated">W3C正在分阶段（或术语的&amp;ldquo;层次&amp;rdquo;）定义文档对象模型。API的Python映射基本上基于DOM Level 2建议。</target>
        </trans-unit>
        <trans-unit id="3e5ece1120688047118eff8518636d6814ff5e85" translate="yes" xml:space="preserve">
          <source>The Document Object Model, or &amp;ldquo;DOM,&amp;rdquo; is a cross-language API from the World Wide Web Consortium (W3C) for accessing and modifying XML documents. A DOM implementation presents an XML document as a tree structure, or allows client code to build such a structure from scratch. It then gives access to the structure through a set of objects which provided well-known interfaces.</source>
          <target state="translated">文档对象模型或&amp;ldquo; DOM&amp;rdquo;是来自万维网联盟（W3C）的一种跨语言API，用于访问和修改XML文档。DOM实现将XML文档呈现为树结构，或者允许客户端代码从头开始构建这种结构。然后，它通过一组对象提供对结构的访问，这些对象提供了众所周知的接口。</target>
        </trans-unit>
        <trans-unit id="1ce2ab8c2362dbe23653589b17cfaf7def8ffd50" translate="yes" xml:space="preserve">
          <source>The ElementInclude module replaces the &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; element with the root element from the &lt;strong&gt;source.xml&lt;/strong&gt; document. The result might look something like this:</source>
          <target state="translated">ElementInclude模块将 &lt;code&gt;{http://www.w3.org/2001/XInclude}include&lt;/code&gt; 元素替换为&lt;strong&gt;source.xml&lt;/strong&gt;文档中的根元素。结果可能如下所示：</target>
        </trans-unit>
        <trans-unit id="9af5016a363dd95d607deaf0cfed0a4507aba7fa" translate="yes" xml:space="preserve">
          <source>The Ellipsis Object</source>
          <target state="translated">省略号对象</target>
        </trans-unit>
        <trans-unit id="f32c4d6597786d2d5b11af91f776181bf1e19cc5" translate="yes" xml:space="preserve">
          <source>The Enum members. This can be a whitespace or comma separated string (values will start at 1 unless otherwise specified):</source>
          <target state="translated">Enum成员。这可以是一个空格或逗号分隔的字符串(除非另有规定,否则值将从1开始)。</target>
        </trans-unit>
        <trans-unit id="9ea9c857f769b13c24616d563b892a00d4487c4a" translate="yes" xml:space="preserve">
          <source>The Expat XML Parser</source>
          <target state="translated">Expat XML解析器</target>
        </trans-unit>
        <trans-unit id="87d6d8f851f8a21b755e3b2015fc0f3520bceff4" translate="yes" xml:space="preserve">
          <source>The FAQ for the &lt;strong&gt;fetchmail&lt;/strong&gt; POP/IMAP client collects information on POP3 server variations and RFC noncompliance that may be useful if you need to write an application based on the POP protocol.</source>
          <target state="translated">&lt;strong&gt;fetchmail&lt;/strong&gt; POP / IMAP客户端的FAQ 收集有关POP3服务器版本和RFC不兼容的信息，如果您需要编写基于POP协议的应用程序，这可能会很有用。</target>
        </trans-unit>
        <trans-unit id="3b7b076070cfeaac7ce8d6b6005200d5cc7bf13d" translate="yes" xml:space="preserve">
          <source>The FIPS 180-2 publication on Secure Hash Algorithms.</source>
          <target state="translated">关于安全散列算法的FIPS 180-2出版物。</target>
        </trans-unit>
        <trans-unit id="a740e018f19ed6fd64cc21ac3ef422a76d04f855" translate="yes" xml:space="preserve">
          <source>The Future object was designed to mimic &lt;a href=&quot;concurrent.futures#concurrent.futures.Future&quot;&gt;&lt;code&gt;concurrent.futures.Future&lt;/code&gt;&lt;/a&gt;. Key differences include:</source>
          <target state="translated">Future对象被设计为模仿&lt;a href=&quot;concurrent.futures#concurrent.futures.Future&quot;&gt; &lt;code&gt;concurrent.futures.Future&lt;/code&gt; &lt;/a&gt;。主要区别包括：</target>
        </trans-unit>
        <trans-unit id="f8b73749b9403577a859cf4146436530c3030907" translate="yes" xml:space="preserve">
          <source>The GC classifies objects into three generations depending on how many collection sweeps they have survived. New objects are placed in the youngest generation (generation &lt;code&gt;0&lt;/code&gt;). If an object survives a collection it is moved into the next older generation. Since generation &lt;code&gt;2&lt;/code&gt; is the oldest generation, objects in that generation remain there after a collection. In order to decide when to run, the collector keeps track of the number object allocations and deallocations since the last collection. When the number of allocations minus the number of deallocations exceeds &lt;em&gt;threshold0&lt;/em&gt;, collection starts. Initially only generation &lt;code&gt;0&lt;/code&gt; is examined. If generation &lt;code&gt;0&lt;/code&gt; has been examined more than &lt;em&gt;threshold1&lt;/em&gt; times since generation &lt;code&gt;1&lt;/code&gt; has been examined, then generation &lt;code&gt;1&lt;/code&gt; is examined as well. Similarly, &lt;em&gt;threshold2&lt;/em&gt; controls the number of collections of generation &lt;code&gt;1&lt;/code&gt; before collecting generation &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">GC根据对象存活的收集扫描次数将其分为三代。新对象放置在最年轻的一代（第 &lt;code&gt;0&lt;/code&gt; 代）中。如果对象在集合中幸存下来，则将其移入下一代。由于第 &lt;code&gt;2&lt;/code&gt; 代是最老的一代，因此该代中的对象在收集后仍保留在那里。为了确定何时运行，收集器会跟踪自上次收集以来的数字对象分配和释放。当分配数减去取消分配数超过&lt;em&gt;threshold0时&lt;/em&gt;，收集开始。最初仅检查第 &lt;code&gt;0&lt;/code&gt; 代。如果检查了第 &lt;code&gt;0&lt;/code&gt; 代是否超过&lt;em&gt;阈值1&lt;/em&gt;自从检查了第 &lt;code&gt;1&lt;/code&gt; 代以来，已经检查了1次，然后也检查了第 &lt;code&gt;1&lt;/code&gt; 代。同样，&lt;em&gt;threshold2&lt;/em&gt;在收集第 &lt;code&gt;2&lt;/code&gt; 代之前控制第 &lt;code&gt;1&lt;/code&gt; 代的收集数量。</target>
        </trans-unit>
        <trans-unit id="d7291b8c8289f762ff278427161e9bf1949a8b43" translate="yes" xml:space="preserve">
          <source>The GC classifies objects into three generations depending on how many collection sweeps they have survived. New objects are placed in the youngest generation (generation &lt;code&gt;0&lt;/code&gt;). If an object survives a collection it is moved into the next older generation. Since generation &lt;code&gt;2&lt;/code&gt; is the oldest generation, objects in that generation remain there after a collection. In order to decide when to run, the collector keeps track of the number object allocations and deallocations since the last collection. When the number of allocations minus the number of deallocations exceeds &lt;em&gt;threshold0&lt;/em&gt;, collection starts. Initially only generation &lt;code&gt;0&lt;/code&gt; is examined. If generation &lt;code&gt;0&lt;/code&gt; has been examined more than &lt;em&gt;threshold1&lt;/em&gt; times since generation &lt;code&gt;1&lt;/code&gt; has been examined, then generation &lt;code&gt;1&lt;/code&gt; is examined as well. With the third generation, things are a bit more complicated, see &lt;a href=&quot;https://devguide.python.org/garbage_collector/#collecting-the-oldest-generation&quot;&gt;Collecting the oldest generation&lt;/a&gt; for more information.</source>
          <target state="translated">GC根据对象存活的收集扫描次数将其分为三代。新对象放置在最年轻的一代（第 &lt;code&gt;0&lt;/code&gt; 代）中。如果对象在集合中幸存下来，则将其移入下一代。由于第 &lt;code&gt;2&lt;/code&gt; 代是最老的一代，因此该代中的对象在收集后仍保留在那里。为了决定何时运行，收集器会跟踪自上次收集以来的数字对象分配和释放。当分配数量减去取消分配数量超过&lt;em&gt;threshold0时&lt;/em&gt;，收集开始。最初仅检查第 &lt;code&gt;0&lt;/code&gt; 代。如果检查了第 &lt;code&gt;0&lt;/code&gt; 代是否超过&lt;em&gt;阈值1&lt;/em&gt;自从检查了第 &lt;code&gt;1&lt;/code&gt; 代以来，已经检查了3次，然后也检查了第 &lt;code&gt;1&lt;/code&gt; 代。对于第三代，情况要复杂一些，请参阅&lt;a href=&quot;https://devguide.python.org/garbage_collector/#collecting-the-oldest-generation&quot;&gt;收集最旧的一代&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="1ae2bdc70c1e8e7581209a0a31a94868a49311af" translate="yes" xml:space="preserve">
          <source>The GNU tar format (&lt;a href=&quot;#tarfile.GNU_FORMAT&quot;&gt;&lt;code&gt;GNU_FORMAT&lt;/code&gt;&lt;/a&gt;). It supports long filenames and linknames, files bigger than 8 GiB and sparse files. It is the de facto standard on GNU/Linux systems. &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; fully supports the GNU tar extensions for long names, sparse file support is read-only.</source>
          <target state="translated">GNU tar格式（&lt;a href=&quot;#tarfile.GNU_FORMAT&quot;&gt; &lt;code&gt;GNU_FORMAT&lt;/code&gt; &lt;/a&gt;）。它支持长文件名和链接名，大于8 GiB的文件和稀疏文件。它是GNU / Linux系统上的事实上的标准。&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;完全支持GNU tar扩展名（长名称），稀疏文件支持为只读。</target>
        </trans-unit>
        <trans-unit id="112e6111d5aee2deded99838bec29a35f5e5765a" translate="yes" xml:space="preserve">
          <source>The HKEY object implements &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; and thus supports the context protocol for the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">HKEY对象实现&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;和__exit __（），因此支持&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的上下文协议：</target>
        </trans-unit>
        <trans-unit id="353c9d21e7aafdea603b2defaa25e8d5b51b3663" translate="yes" xml:space="preserve">
          <source>The HKEY object implements &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; and thus supports the context protocol for the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">HKEY对象实现&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;和__exit __（），因此支持&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的上下文协议：</target>
        </trans-unit>
        <trans-unit id="c71c33c40ba7395c73110a285fefd5bc28a566e0" translate="yes" xml:space="preserve">
          <source>The HTML rendering, and some liberal editing, was produced from a FrameMaker version by Ken Manheimer.</source>
          <target state="translated">HTML渲染和一些自由的编辑,是由Ken Manheimer根据FrameMaker版本制作的。</target>
        </trans-unit>
        <trans-unit id="895c87c33e6e85565a15be7d071b5d53c67b0b24" translate="yes" xml:space="preserve">
          <source>The HTTP headers used for error responses. This should be a list of WSGI response headers (&lt;code&gt;(name, value)&lt;/code&gt; tuples), as described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;. The default list just sets the content type to &lt;code&gt;text/plain&lt;/code&gt;.</source>
          <target state="translated">用于错误响应的HTTP标头。这应该是WSGI响应标头（ &lt;code&gt;(name, value)&lt;/code&gt; 元组）的列表，如&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 3333中所述&lt;/strong&gt;&lt;/a&gt;。默认列表仅将内容类型设置为 &lt;code&gt;text/plain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc84f6a14e073ef0781e89812bc11bcc21df30a7" translate="yes" xml:space="preserve">
          <source>The HTTP request method to use. By default its value is &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, which means that &lt;a href=&quot;#urllib.request.Request.get_method&quot;&gt;&lt;code&gt;get_method()&lt;/code&gt;&lt;/a&gt; will do its normal computation of the method to be used. Its value can be set (thus overriding the default computation in &lt;a href=&quot;#urllib.request.Request.get_method&quot;&gt;&lt;code&gt;get_method()&lt;/code&gt;&lt;/a&gt;) either by providing a default value by setting it at the class level in a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; subclass, or by passing a value in to the &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; constructor via the &lt;em&gt;method&lt;/em&gt; argument.</source>
          <target state="translated">要使用的HTTP请求方法。默认情况下，其值为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，这意味着&lt;a href=&quot;#urllib.request.Request.get_method&quot;&gt; &lt;code&gt;get_method()&lt;/code&gt; &lt;/a&gt;将对要使用的方法进行常规计算。可以通过在&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;子类的类级别设置默认值来提供默认值，或通过&lt;em&gt;method&lt;/em&gt;参数将值传递给&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;构造函数来设置其值（从而覆盖&lt;a href=&quot;#urllib.request.Request.get_method&quot;&gt; &lt;code&gt;get_method()&lt;/code&gt; 中&lt;/a&gt;的默认计算）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="102e26b238faccf8b9327c868bff78cb340168c8" translate="yes" xml:space="preserve">
          <source>The HTTP response headers for the HTTP request that caused the &lt;a href=&quot;#urllib.error.HTTPError&quot;&gt;&lt;code&gt;HTTPError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">导致&lt;a href=&quot;#urllib.error.HTTPError&quot;&gt; &lt;code&gt;HTTPError&lt;/code&gt; &lt;/a&gt;的HTTP请求的HTTP响应标头。</target>
        </trans-unit>
        <trans-unit id="875aaefb3d305183b3f017feb60dceacc6899535" translate="yes" xml:space="preserve">
          <source>The HTTP status used for error responses. This should be a status string as defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;; it defaults to a 500 code and message.</source>
          <target state="translated">用于错误响应的HTTP状态。这应该是&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 3333中&lt;/strong&gt;&lt;/a&gt;定义的状态字符串；它默认为500个代码和消息。</target>
        </trans-unit>
        <trans-unit id="7ec9df72f5c095b2cb5ecc4f03530853db502b81" translate="yes" xml:space="preserve">
          <source>The I/O mode for the file, either &lt;code&gt;&quot;r&quot;&lt;/code&gt;, &lt;code&gt;&quot;rw&quot;&lt;/code&gt;, or &lt;code&gt;&quot;w&quot;&lt;/code&gt;.</source>
          <target state="translated">文件的I / O模式，即 &lt;code&gt;&quot;r&quot;&lt;/code&gt; ， &lt;code&gt;&quot;rw&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;w&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b613d88a17aac3a0fe826d3aec8b07e41aebbb46" translate="yes" xml:space="preserve">
          <source>The ID is a 4-byte string which identifies the type of chunk.</source>
          <target state="translated">ID是一个4字节的字符串,用于标识块的类型。</target>
        </trans-unit>
        <trans-unit id="221f6efb5eebf643c4c6862eda19d65b5773f066" translate="yes" xml:space="preserve">
          <source>The ID of the integrity check used by the input stream. This may be &lt;code&gt;CHECK_UNKNOWN&lt;/code&gt; until enough of the input has been decoded to determine what integrity check it uses.</source>
          <target state="translated">输入流使用的完整性检查的ID。直到已对足够多的输入进行解码以确定其使用的完整性检查之前，这可能是 &lt;code&gt;CHECK_UNKNOWN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d699dfb29e673ac9b34d385b78f0cb6477d087f" translate="yes" xml:space="preserve">
          <source>The IDL definitions do not fully embody the requirements of the W3C DOM API, such as the notion of certain objects, such as the return value of &lt;code&gt;getElementsByTagName()&lt;/code&gt;, being &amp;ldquo;live&amp;rdquo;. The Python DOM API does not require implementations to enforce such requirements.</source>
          <target state="translated">IDL定义没有完全体现W3C DOM API的要求，例如某些对象的概念，例如&amp;ldquo;活动&amp;rdquo; 的 &lt;code&gt;getElementsByTagName()&lt;/code&gt; 的返回值。Python DOM API不需要实现来强制执行此类要求。</target>
        </trans-unit>
        <trans-unit id="73534adea22ef371fa587b81eb62e33afe03dae6" translate="yes" xml:space="preserve">
          <source>The IDL types used in the DOM specification are mapped to Python types according to the following table.</source>
          <target state="translated">DOM规范中使用的IDL类型根据下表被映射到Python类型。</target>
        </trans-unit>
        <trans-unit id="9e8e9b8afe37760ceaad6d8ab19fbe4d24ba22a6" translate="yes" xml:space="preserve">
          <source>The IDLE code running in the execution process adds frames to the call stack that would not be there otherwise. IDLE wraps &lt;code&gt;sys.getrecursionlimit&lt;/code&gt; and &lt;code&gt;sys.setrecursionlimit&lt;/code&gt; to reduce the effect of the additional stack frames.</source>
          <target state="translated">在执行过程中运行的IDLE代码会将帧添加到调用堆栈中，否则这些帧将不存在。IDLE包装 &lt;code&gt;sys.getrecursionlimit&lt;/code&gt; 和 &lt;code&gt;sys.setrecursionlimit&lt;/code&gt; 以减少其他堆栈帧的影响。</target>
        </trans-unit>
        <trans-unit id="4f9a8214de2797a406bbc420c4dc6181a8c731c9" translate="yes" xml:space="preserve">
          <source>The IEEE 754 binary16 &amp;ldquo;half precision&amp;rdquo; type was introduced in the 2008 revision of the &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_floating_point#IEEE_754-2008&quot;&gt;IEEE 754 standard&lt;/a&gt;. It has a sign bit, a 5-bit exponent and 11-bit precision (with 10 bits explicitly stored), and can represent numbers between approximately &lt;code&gt;6.1e-05&lt;/code&gt; and &lt;code&gt;6.5e+04&lt;/code&gt; at full precision. This type is not widely supported by C compilers: on a typical machine, an unsigned short can be used for storage, but not for math operations. See the Wikipedia page on the &lt;a href=&quot;https://en.wikipedia.org/wiki/Half-precision_floating-point_format&quot;&gt;half-precision floating-point format&lt;/a&gt; for more information.</source>
          <target state="translated">在2008年修订的&lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_floating_point#IEEE_754-2008&quot;&gt;IEEE 754标准中&lt;/a&gt;引入了IEEE 754 binary16&amp;ldquo;半精度&amp;rdquo;类型。它具有符号位，5位指数和11位精度（明确存储了10位），并且可以全精度表示介于 &lt;code&gt;6.5e+04&lt;/code&gt; &lt;code&gt;6.1e-05&lt;/code&gt; 和6.5e + 04之间的数字。这种类型不受C编译器的广泛支持：在典型的计算机上，无符号的short可以用于存储，但不能用于数学运算。有关更多信息，请参见&lt;a href=&quot;https://en.wikipedia.org/wiki/Half-precision_floating-point_format&quot;&gt;半精度浮点格式&lt;/a&gt;的Wikipedia页面。</target>
        </trans-unit>
        <trans-unit id="b24db9631befbb1d797b6887700ff491fc6cb519" translate="yes" xml:space="preserve">
          <source>The IEEE 754 special values of &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;inf&lt;/code&gt;, and &lt;code&gt;-inf&lt;/code&gt; will be handled according to IEEE rules. Specifically, &lt;code&gt;NaN&lt;/code&gt; is not considered close to any other value, including &lt;code&gt;NaN&lt;/code&gt;. &lt;code&gt;inf&lt;/code&gt; and &lt;code&gt;-inf&lt;/code&gt; are only considered close to themselves.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; ， &lt;code&gt;inf&lt;/code&gt; 和 &lt;code&gt;-inf&lt;/code&gt; 的IEEE 754特殊值将根据IEEE规则进行处理。具体而言，不认为 &lt;code&gt;NaN&lt;/code&gt; 接近任何其他值，包括 &lt;code&gt;NaN&lt;/code&gt; 。 &lt;code&gt;inf&lt;/code&gt; 和 &lt;code&gt;-inf&lt;/code&gt; 仅被认为与自己很接近。</target>
        </trans-unit>
        <trans-unit id="2623b34e7e6ad22abb7cc5f224cc233ff2421da0" translate="yes" xml:space="preserve">
          <source>The ISO calendar is a widely used variant of the Gregorian calendar. &lt;a href=&quot;#id7&quot; id=&quot;id3&quot;&gt;3&lt;/a&gt;</source>
          <target state="translated">ISO日历是公历的一种广泛使用的变体。&lt;a href=&quot;#id7&quot; id=&quot;id3&quot;&gt;3&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e5ad6d935091f9e83d009d71f64cd300714d7ea" translate="yes" xml:space="preserve">
          <source>The ISO year consists of 52 or 53 full weeks, and where a week starts on a Monday and ends on a Sunday. The first week of an ISO year is the first (Gregorian) calendar week of a year containing a Thursday. This is called week number 1, and the ISO year of that Thursday is the same as its Gregorian year.</source>
          <target state="translated">国际标准化组织年由52或53个整周组成,每周从周一开始,周日结束。一个ISO年的第一周是一年中包含星期四的第一个(公历)日历周。这被称为第1周,该星期四的ISO年与其公历年相同。</target>
        </trans-unit>
        <trans-unit id="1f9f1f2433b85fce4cb660f34278dfa1065ffa23" translate="yes" xml:space="preserve">
          <source>The JSON document being parsed.</source>
          <target state="translated">正在解析的JSON文档。</target>
        </trans-unit>
        <trans-unit id="9334515a214a3518850a43c548ab10b96e20d520" translate="yes" xml:space="preserve">
          <source>The JSON file to be validated or pretty-printed:</source>
          <target state="translated">要验证或漂亮打印的JSON文件。</target>
        </trans-unit>
        <trans-unit id="cb1b5cf7601644b9782c510e837b5298f18e72db" translate="yes" xml:space="preserve">
          <source>The JSON format is specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc7159.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt; and by &lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA-404&lt;/a&gt;. This section details this module&amp;rsquo;s level of compliance with the RFC. For simplicity, &lt;a href=&quot;#json.JSONEncoder&quot;&gt;&lt;code&gt;JSONEncoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#json.JSONDecoder&quot;&gt;&lt;code&gt;JSONDecoder&lt;/code&gt;&lt;/a&gt; subclasses, and parameters other than those explicitly mentioned, are not considered.</source>
          <target state="translated">JSON格式由&lt;a href=&quot;https://tools.ietf.org/html/rfc7159.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA-404指定&lt;/a&gt;。本节详细介绍了此模块与RFC的符合性级别。为简单起见，不考虑&lt;a href=&quot;#json.JSONEncoder&quot;&gt; &lt;code&gt;JSONEncoder&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#json.JSONDecoder&quot;&gt; &lt;code&gt;JSONDecoder&lt;/code&gt; &lt;/a&gt;子类以及未明确提及的参数。</target>
        </trans-unit>
        <trans-unit id="5c30b3f35c7b82510d7dc41f5ea00ab2ec0eee0f" translate="yes" xml:space="preserve">
          <source>The JSON format is specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc7159.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt; and by &lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA-404&lt;/a&gt;. This section details this module&amp;rsquo;s level of compliance with the RFC. For simplicity, &lt;a href=&quot;#json.JSONEncoder&quot;&gt;&lt;code&gt;JSONEncoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#json.JSONDecoder&quot;&gt;&lt;code&gt;JSONDecoder&lt;/code&gt;&lt;/a&gt; subclasses, and parameters other than those explicitly mentioned, are not considered.</source>
          <target state="translated">JSON格式由&lt;a href=&quot;https://tools.ietf.org/html/rfc7159.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 7159&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA-404指定&lt;/a&gt;。本节详细介绍了此模块与RFC的符合性级别。为了简单起见，不考虑&lt;a href=&quot;#json.JSONEncoder&quot;&gt; &lt;code&gt;JSONEncoder&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#json.JSONDecoder&quot;&gt; &lt;code&gt;JSONDecoder&lt;/code&gt; &lt;/a&gt;子类以及未明确提及的参数。</target>
        </trans-unit>
        <trans-unit id="876e1c3c101a9ec9b7e2f177815520f974d7df87" translate="yes" xml:space="preserve">
          <source>The Julian day &lt;em&gt;n&lt;/em&gt; (1 &amp;lt;= &lt;em&gt;n&lt;/em&gt; &amp;lt;= 365). Leap days are not counted, so in all years February 28 is day 59 and March 1 is day 60.</source>
          <target state="translated">儒略日&lt;em&gt;n&lt;/em&gt;（1 &amp;lt;= &lt;em&gt;n&lt;/em&gt; &amp;lt;= 365）。不计算日，因此在所有年份中，2月28日是第59天，3月1日是第60天。</target>
        </trans-unit>
        <trans-unit id="e536171d6fc7a17689f9e357f627d94a3ea3655f" translate="yes" xml:space="preserve">
          <source>The LMTP protocol, which is very similar to ESMTP, is heavily based on the standard SMTP client. It&amp;rsquo;s common to use Unix sockets for LMTP, so our &lt;code&gt;connect()&lt;/code&gt; method must support that as well as a regular host:port server. The optional arguments local_hostname and source_address have the same meaning as they do in the &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; class. To specify a Unix socket, you must use an absolute path for &lt;em&gt;host&lt;/em&gt;, starting with a &amp;lsquo;/&amp;rsquo;.</source>
          <target state="translated">LMTP协议与ESMTP非常相似，它很大程度上基于标准的SMTP客户端。将Unix套接字用于LMTP是很常见的，因此我们的 &lt;code&gt;connect()&lt;/code&gt; 方法必须支持该套接字以及常规的host：port服务器。可选参数local_hostname和source_address具有与&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;类中相同的含义。要指定Unix套接字，必须为&lt;em&gt;host&lt;/em&gt;使用绝对路径，以'/'开头。</target>
        </trans-unit>
        <trans-unit id="d3fba6ce34a94ace0a97a85e907800f74b784af9" translate="yes" xml:space="preserve">
          <source>The LogRecord has a number of attributes, most of which are derived from the parameters to the constructor. (Note that the names do not always correspond exactly between the LogRecord constructor parameters and the LogRecord attributes.) These attributes can be used to merge data from the record into the format string. The following table lists (in alphabetical order) the attribute names, their meanings and the corresponding placeholder in a %-style format string.</source>
          <target state="translated">LogRecord 有许多属性,其中大部分属性来自于构造函数的参数。(注意,LogRecord 构造函数参数和 LogRecord 属性之间的名称并不总是完全对应。)这些属性可以用来将记录中的数据合并到格式字符串中。下表列出了(按字母顺序)属性名称、它们的含义和%样式格式字符串中的相应占位符。</target>
        </trans-unit>
        <trans-unit id="b7fd284826bbd625b7ac5342e8ef0b2f60f602e7" translate="yes" xml:space="preserve">
          <source>The Maildir specification requires the use of a colon (&lt;code&gt;':'&lt;/code&gt;) in certain message file names. However, some operating systems do not permit this character in file names, If you wish to use a Maildir-like format on such an operating system, you should specify another character to use instead. The exclamation point (&lt;code&gt;'!'&lt;/code&gt;) is a popular choice. For example:</source>
          <target state="translated">Maildir规范要求在某些消息文件名中使用冒号（ &lt;code&gt;':'&lt;/code&gt; ）。但是，某些操作系统不允许在文件名中使用此字符。如果希望在此类操作系统上使用类似Maildir的格式，则应指定另一个字符来代替。感叹号（ &lt;code&gt;'!'&lt;/code&gt; ）是一个流行的选择。例如：</target>
        </trans-unit>
        <trans-unit id="2ca8704e898feadac45b47aecee721d7345b424d" translate="yes" xml:space="preserve">
          <source>The Mock Class</source>
          <target state="translated">模拟班</target>
        </trans-unit>
        <trans-unit id="155fcae67f36b1120104c28ff0aa6a2ca6ef2a6c" translate="yes" xml:space="preserve">
          <source>The Namespace object</source>
          <target state="translated">命名空间对象</target>
        </trans-unit>
        <trans-unit id="c244a1998ff5b9fbc3c32a89fe8abcf93cbcfce5" translate="yes" xml:space="preserve">
          <source>The Netscape protocol with the bugs fixed. Uses &lt;em&gt;Set-Cookie2&lt;/em&gt; in place of &lt;em&gt;Set-Cookie&lt;/em&gt;. Not widely used.</source>
          <target state="translated">已修复错误的Netscape协议。使用&lt;em&gt;Set-Cookie2&lt;/em&gt;代替&lt;em&gt;Set-Cookie&lt;/em&gt;。没有被广泛使用。</target>
        </trans-unit>
        <trans-unit id="9e811022cd0aac44894b0fa01dda129f51245480" translate="yes" xml:space="preserve">
          <source>The NotImplemented Object</source>
          <target state="translated">未执行的对象</target>
        </trans-unit>
        <trans-unit id="2d88e55940ba65789bd478289ba5ef66aaa6476b" translate="yes" xml:space="preserve">
          <source>The Null Object</source>
          <target state="translated">虚无对象</target>
        </trans-unit>
        <trans-unit id="d8d19c38b56784ca153a1dfbfff3704006a6f7d7" translate="yes" xml:space="preserve">
          <source>The Numeric Python extension (NumPy) defines another array type; see &lt;a href=&quot;http://www.numpy.org/&quot;&gt;http://www.numpy.org/&lt;/a&gt; for further information about Numerical Python.</source>
          <target state="translated">Numeric Python扩展（NumPy）定义了另一种数组类型。有关数值Python的更多信息，请参见&lt;a href=&quot;http://www.numpy.org/&quot;&gt;http://www.numpy.org/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9091f6e24d2d0854ab6c76b62e57e3967563560b" translate="yes" xml:space="preserve">
          <source>The Numeric Python extension (NumPy) defines another array type; see &lt;a href=&quot;https://www.numpy.org/&quot;&gt;http://www.numpy.org/&lt;/a&gt; for further information about Numerical Python.</source>
          <target state="translated">Numeric Python扩展（NumPy）定义了另一种数组类型。有关数值Python的更多信息，请参见&lt;a href=&quot;https://www.numpy.org/&quot;&gt;http://www.numpy.org/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9e2cd6058ec976a36128b743cd36be50deb3c81" translate="yes" xml:space="preserve">
          <source>The Numerical Python Documentation</source>
          <target state="translated">Numerical Python 文档</target>
        </trans-unit>
        <trans-unit id="29a8f4d932090adf9fba37b9d15fe98be224e869" translate="yes" xml:space="preserve">
          <source>The PEP to add the import hooks that help this module work.</source>
          <target state="translated">PEP来添加导入钩子,帮助这个模块工作。</target>
        </trans-unit>
        <trans-unit id="cd4be1c13c5613f15135d4c42fb4d6960f2b081a" translate="yes" xml:space="preserve">
          <source>The POP3 TOP command this method uses, unlike the RETR command, doesn&amp;rsquo;t set the message&amp;rsquo;s seen flag; unfortunately, TOP is poorly specified in the RFCs and is frequently broken in off-brand servers. Test this method by hand against the POP3 servers you will use before trusting it.</source>
          <target state="translated">与RETR命令不同，此方法使用的POP3 TOP命令不设置邮件的seeed标志。不幸的是，TOP在RFC中指定不明确，并且在品牌外服务器中经常被破坏。信任它之前，请先对将要使用的POP3服务器测试此方法。</target>
        </trans-unit>
        <trans-unit id="c8a2773313a96e78dc753d28c768a2fee670d084" translate="yes" xml:space="preserve">
          <source>The POSIX.1-1988 ustar format (&lt;a href=&quot;#tarfile.USTAR_FORMAT&quot;&gt;&lt;code&gt;USTAR_FORMAT&lt;/code&gt;&lt;/a&gt;). It supports filenames up to a length of at best 256 characters and linknames up to 100 characters. The maximum file size is 8 GiB. This is an old and limited but widely supported format.</source>
          <target state="translated">POSIX.1-1988 ustar格式（&lt;a href=&quot;#tarfile.USTAR_FORMAT&quot;&gt; &lt;code&gt;USTAR_FORMAT&lt;/code&gt; &lt;/a&gt;）。它支持的文件名最大长度为256个字符，而链接名的最大长度为100个字符。最大文件大小为8 GiB。这是一种古老且有限但受广泛支持的格式。</target>
        </trans-unit>
        <trans-unit id="3a2b7ddf5592736fae745667d84bd41548545653" translate="yes" xml:space="preserve">
          <source>The POSIX.1-2001 pax format (&lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt;&lt;code&gt;PAX_FORMAT&lt;/code&gt;&lt;/a&gt;). It is the most flexible format with virtually no limits. It supports long filenames and linknames, large files and stores pathnames in a portable way. Modern tar implementations, including GNU tar, bsdtar/libarchive and star, fully support extended &lt;em&gt;pax&lt;/em&gt; features; some old or unmaintained libraries may not, but should treat &lt;em&gt;pax&lt;/em&gt; archives as if they were in the universally-supported &lt;em&gt;ustar&lt;/em&gt; format. It is the current default format for new archives.</source>
          <target state="translated">POSIX.1-2001 pax格式（&lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt; &lt;code&gt;PAX_FORMAT&lt;/code&gt; &lt;/a&gt;）。这是最灵活的格式，几乎没有限制。它支持长文件名和链接名，大文件，并以可移植的方式存储路径名。包括GNU tar，bsdtar / libarchive和star在内的现代tar实现完全支持扩展的&lt;em&gt;pax&lt;/em&gt;功能；某些旧的或未维护的库可能不会，但是应该将&lt;em&gt;pax&lt;/em&gt;存档视为通用支持的&lt;em&gt;ustar&lt;/em&gt;格式。这是新档案的当前默认格式。</target>
        </trans-unit>
        <trans-unit id="48f55ddcf8c21fcd18b7aab7a650f356e579978f" translate="yes" xml:space="preserve">
          <source>The Packer</source>
          <target state="translated">包装机</target>
        </trans-unit>
        <trans-unit id="4d3cbd26cc18d883fce3423f3e8a2d5ef0540f3d" translate="yes" xml:space="preserve">
          <source>The Parser will call this method to report each chunk of character data. SAX parsers may return all contiguous character data in a single chunk, or they may split it into several chunks; however, all of the characters in any single event must come from the same external entity so that the Locator provides useful information.</source>
          <target state="translated">解析器将调用这个方法来报告每个字符数据的分块。SAX解析器可以在一个分块中返回所有连续的字符数据,也可以将其分割成多个分块;但是,任何一个事件中的所有字符都必须来自同一个外部实体,这样Locator才能提供有用的信息。</target>
        </trans-unit>
        <trans-unit id="4ae9d67de63ced48ddf55430725d32dedbe9dfd5" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method once for each entity skipped. Non-validating processors may skip entities if they have not seen the declarations (because, for example, the entity was declared in an external DTD subset). All processors may skip external entities, depending on the values of the &lt;code&gt;feature_external_ges&lt;/code&gt; and the &lt;code&gt;feature_external_pes&lt;/code&gt; properties.</source>
          <target state="translated">解析器将为每个跳过的实体调用一次此方法。如果非验证处理器没有看到声明，则它们可能会跳过实体（例如，因为该实体是在外部DTD子集中声明的）。所有处理器都可以跳过外部实体，具体取决于 &lt;code&gt;feature_external_ges&lt;/code&gt; 和 &lt;code&gt;feature_external_pes&lt;/code&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="3cc97f14d1c6ed34640e855f6a0e48fc1a501ede" translate="yes" xml:space="preserve">
          <source>The Parser will invoke this method once for each processing instruction found: note that processing instructions may occur before or after the main document element.</source>
          <target state="translated">解析器将对每一条找到的处理指令调用一次该方法:注意,处理指令可能出现在主文档元素之前或之后。</target>
        </trans-unit>
        <trans-unit id="76bb55a33805478d33597a12af8474cc775cdba2" translate="yes" xml:space="preserve">
          <source>The Plural formula is taken from the catalog header. It is a C or Python expression that has a free variable &lt;em&gt;n&lt;/em&gt;; the expression evaluates to the index of the plural in the catalog. See &lt;a href=&quot;https://www.gnu.org/software/gettext/manual/gettext.html&quot;&gt;the GNU gettext documentation&lt;/a&gt; for the precise syntax to be used in &lt;code&gt;.po&lt;/code&gt; files and the formulas for a variety of languages.</source>
          <target state="translated">复数公式取自目录标题。它是具有自由变量&lt;em&gt;n&lt;/em&gt;的C或Python表达式；该表达式计算目录中的复数索引。有关在 &lt;code&gt;.po&lt;/code&gt; 文件中使用的确切语法以及各种语言的公式，请参见&lt;a href=&quot;https://www.gnu.org/software/gettext/manual/gettext.html&quot;&gt;GNU gettext文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d85809a7ab1199bed21e4d02a17dc8bc8a8d5f44" translate="yes" xml:space="preserve">
          <source>The Python &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module by default issues a &lt;code&gt;BEGIN&lt;/code&gt; statement implicitly before a Data Modification Language (DML) statement (i.e. &lt;code&gt;INSERT&lt;/code&gt;/&lt;code&gt;UPDATE&lt;/code&gt;/&lt;code&gt;DELETE&lt;/code&gt;/&lt;code&gt;REPLACE&lt;/code&gt;).</source>
          <target state="translated">默认情况下，Python &lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;模块在数据修改语言（DML）语句（即 &lt;code&gt;INSERT&lt;/code&gt; / &lt;code&gt;UPDATE&lt;/code&gt; / &lt;code&gt;DELETE&lt;/code&gt; / &lt;code&gt;REPLACE&lt;/code&gt; ）之前隐式发出 &lt;code&gt;BEGIN&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="f50658b2df65ef37c2e5e3a28feec3af7c6b2de4" translate="yes" xml:space="preserve">
          <source>The Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;global interpreter lock&lt;/a&gt; is released before calling any function exported by these libraries, and reacquired afterwards.</source>
          <target state="translated">在调用这些库导出的任何函数之前，先释放Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;全局解释器锁&lt;/a&gt;，然后再重新获取。</target>
        </trans-unit>
        <trans-unit id="aaf00a982b5185fc219976f2e0f2d91ce1140a6d" translate="yes" xml:space="preserve">
          <source>The Python &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-global-interpreter-lock&quot;&gt;global interpreter lock&lt;/a&gt; is released before calling any function exported by these libraries, and reacquired afterwards.</source>
          <target state="translated">在调用这些库导出的任何函数之前，先释放Python&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-global-interpreter-lock&quot;&gt;全局解释器锁&lt;/a&gt;，然后再重新获取。</target>
        </trans-unit>
        <trans-unit id="2e3b3878e6b1514addea56227281a773c6e515ca" translate="yes" xml:space="preserve">
          <source>The Python DOM API, however, &lt;em&gt;does&lt;/em&gt; require that normal attribute access work. This means that the typical surrogates generated by Python IDL compilers are not likely to work, and wrapper objects may be needed on the client if the DOM objects are accessed via CORBA. While this does require some additional consideration for CORBA DOM clients, the implementers with experience using DOM over CORBA from Python do not consider this a problem. Attributes that are declared &lt;code&gt;readonly&lt;/code&gt; may not restrict write access in all DOM implementations.</source>
          <target state="translated">但是，Python DOM API &lt;em&gt;确实&lt;/em&gt;需要正常的属性访问工作。这意味着由Python IDL编译器生成的典型代理不太可能起作用，并且如果通过CORBA访问DOM对象，则可能在客户端上需要包装对象。尽管这确实需要对CORBA DOM客户端进行一些其他考虑，但是具有使用Python上的CORBA上的DOM经验的实现者并不认为这是一个问题。声明为 &lt;code&gt;readonly&lt;/code&gt; 属性可能不会限制所有DOM实现中的写访问。</target>
        </trans-unit>
        <trans-unit id="a206098364b484165e8287cb349dce95f61567a5" translate="yes" xml:space="preserve">
          <source>The Python DOM interface provides the constants, but also expands the set of exceptions so that a specific exception exists for each of the exception codes defined by the DOM. The implementations must raise the appropriate specific exception, each of which carries the appropriate value for the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">Python DOM接口提供了常量，但也扩展了异常集，因此DOM定义的每个异常代码都存在特定的异常。实现必须引发适当的特定异常，每个异常都带有&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;属性的适当值。</target>
        </trans-unit>
        <trans-unit id="ff06059e8081fc663e82b8eee56da2ac2048ebbe" translate="yes" xml:space="preserve">
          <source>The Python Development Mode does not enable the &lt;a href=&quot;tracemalloc#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module by default, because the overhead cost (to performance and memory) would be too large. Enabling the &lt;a href=&quot;tracemalloc#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; module provides additional information on the origin of some errors. For example, &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; logs the traceback where the resource was allocated, and a buffer overflow error logs the traceback where the memory block was allocated.</source>
          <target state="translated">Python开发模式默认情况下不启用&lt;a href=&quot;tracemalloc#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;模块，因为开销（性能和内存）开销太大。启用&lt;a href=&quot;tracemalloc#module-tracemalloc&quot;&gt; &lt;code&gt;tracemalloc&lt;/code&gt; &lt;/a&gt;模块可提供有关某些错误起因的其他信息。例如，&lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt;将追溯记录记录在分配资源的位置，而缓冲区溢出错误将追溯记录记录在分配内存块的位置。</target>
        </trans-unit>
        <trans-unit id="4a4a45dbf7be9619ba4c52ac7c38ca433cb07dd4" translate="yes" xml:space="preserve">
          <source>The Python Development Mode does not prevent the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; command line option from removing &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statements nor from setting &lt;a href=&quot;constants#__debug__&quot;&gt;&lt;code&gt;__debug__&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">Python开发模式不会阻止&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;命令行选项删除&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt;语句，也不会阻止将&lt;a href=&quot;constants#__debug__&quot;&gt; &lt;code&gt;__debug__&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0eaf9f3b95a141a2cdfebe0564a255b7acfde4d5" translate="yes" xml:space="preserve">
          <source>The Python Development Mode introduces additional runtime checks that are too expensive to be enabled by default. It should not be more verbose than the default if the code is correct; new warnings are only emitted when an issue is detected.</source>
          <target state="translated">Python开发模式引入了额外的运行时检查,这些检查的成本太高,默认情况下无法启用。如果代码是正确的,它不应该比默认情况下更啰嗦;只有在发现问题时才会发出新的警告。</target>
        </trans-unit>
        <trans-unit id="f5039de57801a391facd6174cbaed212a98ba5e4" translate="yes" xml:space="preserve">
          <source>The Python Development Mode shows a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; and logs a &amp;ldquo;Bad file descriptor&amp;rdquo; error when finalizing the file object:</source>
          <target state="translated">Python开发模式显示&lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt;并在最终确定文件对象时记录&amp;ldquo;错误的文件描述符&amp;rdquo;错误：</target>
        </trans-unit>
        <trans-unit id="3623e9f5502ae30e63b6ff1528d1650f4f52886f" translate="yes" xml:space="preserve">
          <source>The Python Enhancement Proposal which proposed this addition to Python.</source>
          <target state="translated">Python增强提案,提出了对Python的这一补充。</target>
        </trans-unit>
        <trans-unit id="16a4aad38a3322fd0c7f6a1a39fbd8541bd549de" translate="yes" xml:space="preserve">
          <source>The Python Profilers</source>
          <target state="translated">Python Profilers</target>
        </trans-unit>
        <trans-unit id="68c54fa443db89d7ca0f9bbdbd9b7297be40a028" translate="yes" xml:space="preserve">
          <source>The Python Testing Tools Taxonomy</source>
          <target state="translated">Python测试工具分类法</target>
        </trans-unit>
        <trans-unit id="a80a8e5314f2596cc8e38aeb9211edeb47d6195d" translate="yes" xml:space="preserve">
          <source>The Python Tkinter Topic Guide provides a great deal of information on using Tk from Python and links to other sources of information on Tk.</source>
          <target state="translated">Python Tkinter主题指南提供了大量关于如何使用Python中的Tk的信息,并提供了有关Tk的其他信息源的链接。</target>
        </trans-unit>
        <trans-unit id="fc0b7656660df44baec5ab40803f65464e6222e3" translate="yes" xml:space="preserve">
          <source>The Python Zip Application Archive Format</source>
          <target state="translated">Python Zip应用程序存档格式</target>
        </trans-unit>
        <trans-unit id="24305685b310d869a7c6bf7e92bb45e946c72628" translate="yes" xml:space="preserve">
          <source>The Python byte compiler can be invoked on an ST object to produce code objects which can be used as part of a call to the built-in &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;functions#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; functions. This function provides the interface to the compiler, passing the internal parse tree from &lt;em&gt;st&lt;/em&gt; to the parser, using the source file name specified by the &lt;em&gt;filename&lt;/em&gt; parameter. The default value supplied for &lt;em&gt;filename&lt;/em&gt; indicates that the source was an ST object.</source>
          <target state="translated">可以在ST对象上调用Python字节编译器以生成代码对象，这些代码对象可用作对内置&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;functions#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;函数的调用的一部分。此函数提供了编译器的接口，使用&lt;em&gt;filename&lt;/em&gt;参数指定的源文件名将内部解析树从&lt;em&gt;st&lt;/em&gt;传递到解析器。为&lt;em&gt;文件名&lt;/em&gt;提供的默认值指示源是ST对象。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9aed821ec2313afc84ef94ac17cfa17e343147d7" translate="yes" xml:space="preserve">
          <source>The Python compiler currently generates the following bytecode instructions.</source>
          <target state="translated">Python 编译器目前生成以下字节码指令。</target>
        </trans-unit>
        <trans-unit id="84bb1ebb68c17bfe88d2ed5dd2f381d99feff246" translate="yes" xml:space="preserve">
          <source>The Python files which contain certificates can contain a sequence of certificates, sometimes called a &lt;em&gt;certificate chain&lt;/em&gt;. This chain should start with the specific certificate for the principal who &amp;ldquo;is&amp;rdquo; the client or server, and then the certificate for the issuer of that certificate, and then the certificate for the issuer of &lt;em&gt;that&lt;/em&gt; certificate, and so on up the chain till you get to a certificate which is &lt;em&gt;self-signed&lt;/em&gt;, that is, a certificate which has the same subject and issuer, sometimes called a &lt;em&gt;root certificate&lt;/em&gt;. The certificates should just be concatenated together in the certificate file. For example, suppose we had a three certificate chain, from our server certificate to the certificate of the certification authority that signed our server certificate, to the root certificate of the agency which issued the certification authority&amp;rsquo;s certificate:</source>
          <target state="translated">包含证书的Python文件可以包含一系列证书，有时也称为&lt;em&gt;证书链&lt;/em&gt;。这个链应该与校长谁&amp;ldquo;是&amp;rdquo;客户端或服务器，然后该证书的颁发的证书，然后对发行人的证书的特定证书启动&lt;em&gt;该&lt;/em&gt;证书，依此类推，直到链，直到你获得&lt;em&gt;自签名&lt;/em&gt;证书，即具有相同主题和颁发者的&lt;em&gt;证书&lt;/em&gt;，有时称为&lt;em&gt;根证书&lt;/em&gt;。证书应仅在证书文件中串联在一起。例如，假设我们具有三个证书链，从我们的服务器证书到签署我们的服务器证书的证书颁发机构的证书，再到颁发证书颁发机构的证书的代理机构的根证书：</target>
        </trans-unit>
        <trans-unit id="d668df70b1012a771ce85c79c768bca15d3a2ee7" translate="yes" xml:space="preserve">
          <source>The Python installers for the Windows platform usually include the entire standard library and often also include many additional components. For Unix-like operating systems Python is normally provided as a collection of packages, so it may be necessary to use the packaging tools provided with the operating system to obtain some or all of the optional components.</source>
          <target state="translated">Windows 平台的 Python 安装程序通常包括整个标准库,并且通常还包括许多附加组件。对于类似 Unix 的操作系统,Python 通常是作为一个包的集合提供的,所以可能需要使用操作系统提供的打包工具来获得一些或全部的可选组件。</target>
        </trans-unit>
        <trans-unit id="e39381baeb675becc61bfe651b0384d01c0ecc02" translate="yes" xml:space="preserve">
          <source>The Python interface is a straightforward transliteration of the Unix system call and library interface for sockets to Python&amp;rsquo;s object-oriented style: the &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt; function returns a &lt;em&gt;socket object&lt;/em&gt; whose methods implement the various socket system calls. Parameter types are somewhat higher-level than in the C interface: as with &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt; operations on Python files, buffer allocation on receive operations is automatic, and buffer length is implicit on send operations.</source>
          <target state="translated">Python接口是Unix系统调用和库接口的直接转译，用于将套接字转换为Python的面向对象样式：&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt;函数返回一个&lt;em&gt;套接字对象，&lt;/em&gt;其方法实现了各种套接字系统调用。参数类型比C接口中的级别更高：与Python文件上的 &lt;code&gt;read()&lt;/code&gt; 和 &lt;code&gt;write()&lt;/code&gt; 操作一样，接收操作上的缓冲区分配是自动的，而发送操作上的缓冲区长度是隐式的。</target>
        </trans-unit>
        <trans-unit id="a0c4a529f0722167f2c4ba898392f0015bfae784" translate="yes" xml:space="preserve">
          <source>The Python interpreter has a number of functions and types built into it that are always available. They are listed here in alphabetical order.</source>
          <target state="translated">Python 解释器有许多内置的函数和类型,它们总是可用的。它们按字母顺序在这里列出。</target>
        </trans-unit>
        <trans-unit id="9326ea45f498d239e80ceb0e3060d4907816c0fb" translate="yes" xml:space="preserve">
          <source>The Python module providing secure hash functions.</source>
          <target state="translated">提供安全哈希函数的Python模块。</target>
        </trans-unit>
        <trans-unit id="69ec84e4a26a013077dff8474060c5d8050964a0" translate="yes" xml:space="preserve">
          <source>The Python runtime does not enforce &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-annotation&quot;&gt;type annotations&lt;/a&gt;. This extends to generic types and their type parameters. When creating an object from a &lt;code&gt;GenericAlias&lt;/code&gt;, container elements are not checked against their type. For example, the following code is discouraged, but will run without errors:</source>
          <target state="translated">Python运行时不强制使用&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-annotation&quot;&gt;类型注释&lt;/a&gt;。这扩展到泛型类型及其类型参数。从 &lt;code&gt;GenericAlias&lt;/code&gt; 创建对象时，不会根据容器的类型检查容器的元素。例如，不建议使用以下代码，但可以正常运行：</target>
        </trans-unit>
        <trans-unit id="5c70b76112bff8f234c081d6c7a3acbb6832303b" translate="yes" xml:space="preserve">
          <source>The Python runtime does not enforce function and variable type annotations. They can be used by third party tools such as type checkers, IDEs, linters, etc.</source>
          <target state="translated">Python 运行时并不强制执行函数和变量类型注释,它们可以被第三方工具使用,如类型检查器、IDE、linters 等。它们可以被第三方工具使用,如类型检查器、IDE、linters等。</target>
        </trans-unit>
        <trans-unit id="20e932146154996d93ed84e9bb70077634ce4a18" translate="yes" xml:space="preserve">
          <source>The Python standard library provides two different implementations of the same profiling interface:</source>
          <target state="translated">Python标准库为相同的剖析接口提供了两种不同的实现。</target>
        </trans-unit>
        <trans-unit id="00c57304482cc2aeefdb4600f8e3ef9b77b1caa7" translate="yes" xml:space="preserve">
          <source>The RFC does not explicitly forbid JSON strings which contain byte sequences that don&amp;rsquo;t correspond to valid Unicode characters (e.g. unpaired UTF-16 surrogates), but it does note that they may cause interoperability problems. By default, this module accepts and outputs (when present in the original &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;) code points for such sequences.</source>
          <target state="translated">RFC没有明确禁止包含不与有效Unicode字符相对应的字节序列的JSON字符串（例如，未配对的UTF-16替代），但是它确实指出它们可能会导致互操作性问题。默认情况下，此模块接受并输出此类序列的代码点（如果存在于原始&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; 中&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a21611c1abaea76578ca01231f4e34f3cea77291" translate="yes" xml:space="preserve">
          <source>The RFC does not permit the representation of infinite or NaN number values. Despite that, by default, this module accepts and outputs &lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt;, and &lt;code&gt;NaN&lt;/code&gt; as if they were valid JSON number literal values:</source>
          <target state="translated">RFC不允许表示无限或NaN数字值。尽管如此，默认情况下，此模块仍接受并输出 &lt;code&gt;Infinity&lt;/code&gt; ， &lt;code&gt;-Infinity&lt;/code&gt; 和 &lt;code&gt;NaN&lt;/code&gt; ，就像它们是有效的JSON数字文字值一样：</target>
        </trans-unit>
        <trans-unit id="1d56e81c90cade5d7a8cd14714bd520f16d520a4" translate="yes" xml:space="preserve">
          <source>The RFC prohibits adding a byte order mark (BOM) to the start of a JSON text, and this module&amp;rsquo;s serializer does not add a BOM to its output. The RFC permits, but does not require, JSON deserializers to ignore an initial BOM in their input. This module&amp;rsquo;s deserializer raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when an initial BOM is present.</source>
          <target state="translated">RFC禁止在JSON文本的开头添加字节顺序标记（BOM），并且此模块的序列化程序不会在其输出中添加BOM。RFC允许但不要求JSON解串器忽略其输入中的初始BOM。存在初始BOM表时，此模块的反序列化器将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28a0c061baaa6d098aea953c60411ddd94747207" translate="yes" xml:space="preserve">
          <source>The RFC requires that JSON be represented using either UTF-8, UTF-16, or UTF-32, with UTF-8 being the recommended default for maximum interoperability.</source>
          <target state="translated">RFC要求JSON使用UTF-8、UTF-16或UTF-32来表示,为了实现最大的互操作性,推荐使用UTF-8作为默认值。</target>
        </trans-unit>
        <trans-unit id="23658f6ac2fddbb213f90b08b1d920e9ec72edc0" translate="yes" xml:space="preserve">
          <source>The RFC specifies that the names within a JSON object should be unique, but does not mandate how repeated names in JSON objects should be handled. By default, this module does not raise an exception; instead, it ignores all but the last name-value pair for a given name:</source>
          <target state="translated">RFC规定JSON对象中的名称应该是唯一的,但没有规定如何处理JSON对象中的重复名称。默认情况下,该模块不会引发异常;相反,除了最后一个名-值对之外,该模块会忽略给定名称中的所有其他名称。</target>
        </trans-unit>
        <trans-unit id="ebb53a0bf22d95c16083195b220ed98dcd13adc1" translate="yes" xml:space="preserve">
          <source>The Rmail manual, with some information on Babyl semantics.</source>
          <target state="translated">Rmail手册,有一些关于Babyl语义的信息。</target>
        </trans-unit>
        <trans-unit id="1e7b89846a8ae03eb96b19c9bea0cacf3c76d698" translate="yes" xml:space="preserve">
          <source>The SAX API defines four kinds of handlers: content handlers, DTD handlers, error handlers, and entity resolvers. Applications normally only need to implement those interfaces whose events they are interested in; they can implement the interfaces in a single object or in multiple objects. Handler implementations should inherit from the base classes provided in the module &lt;a href=&quot;#module-xml.sax.handler&quot;&gt;&lt;code&gt;xml.sax.handler&lt;/code&gt;&lt;/a&gt;, so that all methods get default implementations.</source>
          <target state="translated">SAX API定义了四种处理程序：内容处理程序，DTD处理程序，错误处理程序和实体解析器。应用程序通常只需要实现其事件感兴趣的那些接口即可。他们可以在单个对象或多个对象中实现接口。处理程序实现应从&lt;a href=&quot;#module-xml.sax.handler&quot;&gt; &lt;code&gt;xml.sax.handler&lt;/code&gt; &lt;/a&gt;模块中提供的基类继承，以便所有方法均获得默认实现。</target>
        </trans-unit>
        <trans-unit id="8e45a78d79d0524145dc4edd32e06f22f85cede3" translate="yes" xml:space="preserve">
          <source>The SAX parser will ignore this if there is also a character stream specified, but it will use a byte stream in preference to opening a URI connection itself.</source>
          <target state="translated">如果还指定了字符流,SAX解析器将忽略这一点,但它将使用字节流,而不是自己打开一个URI连接。</target>
        </trans-unit>
        <trans-unit id="707dc789f59e976c73fe4ffebb33bc0207ccae0c" translate="yes" xml:space="preserve">
          <source>The SAX parser will invoke this method only once, and it will be the last method invoked during the parse. The parser shall not invoke this method until it has either abandoned parsing (because of an unrecoverable error) or reached the end of input.</source>
          <target state="translated">SAX解析器将只调用该方法一次,它将是解析过程中最后一个调用的方法。解析器在放弃解析(因为不可恢复的错误)或到达输入的终点之前,不会调用这个方法。</target>
        </trans-unit>
        <trans-unit id="12f3a1297e14e9b828efc8bdfb73d80a8d01bec8" translate="yes" xml:space="preserve">
          <source>The SAX parser will invoke this method only once, before any other methods in this interface or in DTDHandler (except for &lt;a href=&quot;#xml.sax.handler.ContentHandler.setDocumentLocator&quot;&gt;&lt;code&gt;setDocumentLocator()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">SAX解析器仅在此接口或DTDHandler中的任何其他方法（&lt;a href=&quot;#xml.sax.handler.ContentHandler.setDocumentLocator&quot;&gt; &lt;code&gt;setDocumentLocator()&lt;/code&gt; &lt;/a&gt;除外）之前调用一次此方法。</target>
        </trans-unit>
        <trans-unit id="7e8e8330c21b74043b8205ded9ff9a5829bf01f2" translate="yes" xml:space="preserve">
          <source>The SKIP flag can also be used for temporarily &amp;ldquo;commenting out&amp;rdquo; examples.</source>
          <target state="translated">SKIP标志还可以用于临时&amp;ldquo;注释&amp;rdquo;示例。</target>
        </trans-unit>
        <trans-unit id="f4390f432eb2ffe2df3a4d9609866a7b2b82664d" translate="yes" xml:space="preserve">
          <source>The SMTP server refused to accept the message data.</source>
          <target state="translated">SMTP服务器拒绝接受信息数据。</target>
        </trans-unit>
        <trans-unit id="963f7e97b0fccc8fe8ffa791fe316f759f135cf9" translate="yes" xml:space="preserve">
          <source>The SQLite web page; the documentation describes the syntax and the available data types for the supported SQL dialect.</source>
          <target state="translated">SQLite网页;文档描述了支持的SQL方言的语法和可用的数据类型。</target>
        </trans-unit>
        <trans-unit id="beffeb6dadecb40fadf90c17df812ca7ad08d63c" translate="yes" xml:space="preserve">
          <source>The SSL context created above will only allow TLSv1.2 and later (if supported by your system) connections to a server. &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt;&lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt;&lt;/a&gt; implies certificate validation and hostname checks by default. You have to load certificates into the context.</source>
          <target state="translated">上面创建的SSL上下文仅允许TLSv1.2及更高版本（如果系统支持）连接到服务器。默认情况下，&lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt; &lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt; &lt;/a&gt;表示证书验证和主机名检查。您必须将证书加载到上下文中。</target>
        </trans-unit>
        <trans-unit id="a0e2d72a60f11662a8e29849a7b2b192660b7e39" translate="yes" xml:space="preserve">
          <source>The SSL handshake itself will be non-blocking: the &lt;a href=&quot;#ssl.SSLSocket.do_handshake&quot;&gt;&lt;code&gt;SSLSocket.do_handshake()&lt;/code&gt;&lt;/a&gt; method has to be retried until it returns successfully. Here is a synopsis using &lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt; to wait for the socket&amp;rsquo;s readiness:</source>
          <target state="translated">SSL握手本身将是非阻塞的：必须重试&lt;a href=&quot;#ssl.SSLSocket.do_handshake&quot;&gt; &lt;code&gt;SSLSocket.do_handshake()&lt;/code&gt; &lt;/a&gt;方法，直到成功返回为止。这是使用&lt;a href=&quot;select#select.select&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;等待套接字准备就绪的摘要：</target>
        </trans-unit>
        <trans-unit id="7fb047f21fae24e28383d98ea942a6e80e264d6c" translate="yes" xml:space="preserve">
          <source>The SSL version to use (defaults to &lt;a href=&quot;ssl#ssl.PROTOCOL_SSLv23&quot;&gt;&lt;code&gt;ssl.PROTOCOL_SSLv23&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">要使用的SSL版本（默认为&lt;a href=&quot;ssl#ssl.PROTOCOL_SSLv23&quot;&gt; &lt;code&gt;ssl.PROTOCOL_SSLv23&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4c7e282a13558a44891e2e101c6cf6d12c13e561" translate="yes" xml:space="preserve">
          <source>The ST objects are not required to support the functionality of this module, but are provided for three purposes: to allow an application to amortize the cost of processing complex parse trees, to provide a parse tree representation which conserves memory space when compared to the Python list or tuple representation, and to ease the creation of additional modules in C which manipulate parse trees. A simple &amp;ldquo;wrapper&amp;rdquo; class may be created in Python to hide the use of ST objects.</source>
          <target state="translated">不需要ST对象来支持此模块的功能，而是出于以下三个目的提供ST对象：允许应用程序分摊处理复杂解析树的成本；提供与Python相比节省内存空间的解析树表示形式列表或元组表示形式，并简化了用C操纵解析树的其他模块的创建。可以在Python中创建一个简单的&amp;ldquo;包装&amp;rdquo;类，以隐藏ST对象的使用。</target>
        </trans-unit>
        <trans-unit id="c9c355f4b21e15033d897535af6a95e51399ced7" translate="yes" xml:space="preserve">
          <source>The Shell window also has an output squeezing facility explained in the &lt;em&gt;Python Shell window&lt;/em&gt; subsection below.</source>
          <target state="translated">Shell窗口还具有输出压缩功能，这在下面的&lt;em&gt;Python Shell窗口&lt;/em&gt;小节中进行了说明。</target>
        </trans-unit>
        <trans-unit id="1ea690a46ecf07b29fe276979038395655dc2267" translate="yes" xml:space="preserve">
          <source>The Signature object represents the call signature of a callable object and its return annotation. To retrieve a Signature object, use the &lt;a href=&quot;#inspect.signature&quot;&gt;&lt;code&gt;signature()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Signature对象表示可调用对象的调用签名及其返回注释。要检索签名对象，请使用&lt;a href=&quot;#inspect.signature&quot;&gt; &lt;code&gt;signature()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="f14d6f9e95b7ec47f48e2395c9457f82042675cb" translate="yes" xml:space="preserve">
          <source>The Solaris OS has a &lt;code&gt;CLOCK_HIGHRES&lt;/code&gt; timer that attempts to use an optimal hardware source, and may give close to nanosecond resolution. &lt;code&gt;CLOCK_HIGHRES&lt;/code&gt; is the nonadjustable, high-resolution clock.</source>
          <target state="translated">Solaris OS具有一个 &lt;code&gt;CLOCK_HIGHRES&lt;/code&gt; 计时器，该计时器尝试使用最佳的硬件源，并且可能提供接近纳秒的分辨率。 &lt;code&gt;CLOCK_HIGHRES&lt;/code&gt; 是不可调节的高分辨率时钟。</target>
        </trans-unit>
        <trans-unit id="cc3eb93ee8c21fc37dd86535f775f5eb431b9c88" translate="yes" xml:space="preserve">
          <source>The Solaris operating system defines its own binary &lt;code&gt;.mo&lt;/code&gt; file format, but since no documentation can be found on this format, it is not supported at this time.</source>
          <target state="translated">Solaris操作系统定义了自己的二进制 &lt;code&gt;.mo&lt;/code&gt; 文件格式，但是由于找不到该格式的文档，因此目前不支持该格式。</target>
        </trans-unit>
        <trans-unit id="d0ac37e8315bdb7114c046319dce82f883d628c8" translate="yes" xml:space="preserve">
          <source>The SunOS tar extended format. This format is a variant of the POSIX.1-2001 pax format, but is not compatible.</source>
          <target state="translated">SunOS 的 tar 扩展格式。这种格式是POSIX.1-2001 pax格式的变体,但不兼容。</target>
        </trans-unit>
        <trans-unit id="aae4bcef34361e87d65094c443ec2ddf605108ac" translate="yes" xml:space="preserve">
          <source>The TZ search path can also be configured at runtime using the &lt;a href=&quot;#zoneinfo.reset_tzpath&quot;&gt;&lt;code&gt;reset_tzpath()&lt;/code&gt;&lt;/a&gt; function. This is generally not an advisable operation, though it is reasonable to use it in test functions that require the use of a specific time zone path (or require disabling access to the system time zones).</source>
          <target state="translated">TZ搜索路径也可以在运行时使用&lt;a href=&quot;#zoneinfo.reset_tzpath&quot;&gt; &lt;code&gt;reset_tzpath()&lt;/code&gt; &lt;/a&gt;函数进行配置。尽管建议在需要使用特定时区路径（或要求禁用对系统时区的访问）的测试功能中使用它是合理的，但这通常不是建议的操作。</target>
        </trans-unit>
        <trans-unit id="4c6064fcd51da76a4b8688cbb79d85ed3cbe6902" translate="yes" xml:space="preserve">
          <source>The Task is &lt;em&gt;cancelled&lt;/em&gt; when the cancellation was requested with &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;cancel()&lt;/code&gt;&lt;/a&gt; and the wrapped coroutine propagated the &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt; exception thrown into it.</source>
          <target state="translated">当使用&lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;cancel()&lt;/code&gt; &lt;/a&gt;请求&lt;em&gt;取消&lt;/em&gt;时，任务被&lt;em&gt;取消&lt;/em&gt;，并且包装的协程传播了抛出其中的&lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt; &lt;code&gt;CancelledError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="c832c625e27d27b2df4a2f2747f5f1ffb11ed665" translate="yes" xml:space="preserve">
          <source>The Time Zone Database (often called tz, tzdata or zoneinfo) contains code and data that represent the history of local time for many representative locations around the globe. It is updated periodically to reflect changes made by political bodies to time zone boundaries, UTC offsets, and daylight-saving rules.</source>
          <target state="translated">时区数据库(通常称为tz、tzdata或zoneinfo)包含代表全球许多有代表性地点的当地时间历史的代码和数据。它定期更新,以反映政治机构对时区边界、世界协调时偏移和夏令时规则的改变。</target>
        </trans-unit>
        <trans-unit id="90e26b26d9a0af28886fde0a18d530daf10ace98" translate="yes" xml:space="preserve">
          <source>The Tk part of the Tk Widgets implement the final mapping to &amp;hellip;</source>
          <target state="translated">Tk小部件的Tk部分实现了对&amp;hellip;&amp;hellip;的最终映射。</target>
        </trans-unit>
        <trans-unit id="a8035c8d4a76baa8e0c5f30604affaf05adf9c98" translate="yes" xml:space="preserve">
          <source>The Tk/Tcl development is largely taking place at ActiveState.</source>
          <target state="translated">Tk/Tcl的开发主要在ActiveState进行。</target>
        </trans-unit>
        <trans-unit id="bb2e0c5b0d8a8fbb506b26541482bf9fad625ee9" translate="yes" xml:space="preserve">
          <source>The Treeview widget generates the following virtual events.</source>
          <target state="translated">Treeview小组件会生成以下虚拟事件。</target>
        </trans-unit>
        <trans-unit id="197ec35dbcf1ac2c21896fa47f315993bf446dd5" translate="yes" xml:space="preserve">
          <source>The Treeview widget supports horizontal and vertical scrolling, according to the options described in &lt;a href=&quot;#scrollable-widget-options&quot;&gt;Scrollable Widget Options&lt;/a&gt; and the methods &lt;a href=&quot;#tkinter.ttk.Treeview.xview&quot;&gt;&lt;code&gt;Treeview.xview()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tkinter.ttk.Treeview.yview&quot;&gt;&lt;code&gt;Treeview.yview()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;#scrollable-widget-options&quot;&gt;Scrollable Widget Options中&lt;/a&gt;描述的选项以及&lt;a href=&quot;#tkinter.ttk.Treeview.xview&quot;&gt; &lt;code&gt;Treeview.xview()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#tkinter.ttk.Treeview.yview&quot;&gt; &lt;code&gt;Treeview.yview()&lt;/code&gt; &lt;/a&gt;方法，Treeview小部件支持水平和垂直滚动。</target>
        </trans-unit>
        <trans-unit id="c6114ecf3800a7be16c1cceda8f0ef24d4070d2d" translate="yes" xml:space="preserve">
          <source>The URI authority, typically a host, but may also contain a port separated by a colon.</source>
          <target state="translated">URI授权,通常是一个主机,但也可能包含一个端口,用冒号分隔。</target>
        </trans-unit>
        <trans-unit id="28b94c4c5d2f79c9e8d639c6cdb0ef5a62f7c53c" translate="yes" xml:space="preserve">
          <source>The URI of the XHTML namespace as defined by &lt;a href=&quot;https://www.w3.org/TR/xhtml1/&quot;&gt;XHTML 1.0: The Extensible HyperText Markup Language&lt;/a&gt; (section 3.1.1).</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xhtml1/&quot;&gt;XHTML 1.0：可扩展超文本标记语言&lt;/a&gt;（第3.1.1节）定义的XHTML名称空间的URI 。</target>
        </trans-unit>
        <trans-unit id="46e2b896a8750fe169be7a5ca65a3f1110bc2ba4" translate="yes" xml:space="preserve">
          <source>The URI or URL that triggered the error.</source>
          <target state="translated">触发错误的URI或URL。</target>
        </trans-unit>
        <trans-unit id="675c281e0cb1795bfbcb6b86336646e2a1113c23" translate="yes" xml:space="preserve">
          <source>The URI path. If the &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; uses a proxy, then selector will be the full URL that is passed to the proxy.</source>
          <target state="translated">URI路径。如果&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;使用代理，则选择器将是传递给代理的完整URL。</target>
        </trans-unit>
        <trans-unit id="f2c63ee71e5d56e82a263265f0b8cfef06ac654b" translate="yes" xml:space="preserve">
          <source>The URI scheme.</source>
          <target state="translated">URI方案。</target>
        </trans-unit>
        <trans-unit id="4a032d6b5843fa436cc4c90b072280e903ed7533" translate="yes" xml:space="preserve">
          <source>The URL parsing functions focus on splitting a URL string into its components, or on combining URL components into a URL string.</source>
          <target state="translated">URL解析功能的重点是将一个URL字符串分割成其组件,或者将URL组件组合成一个URL字符串。</target>
        </trans-unit>
        <trans-unit id="0da793b6172e55a10633bab2dfb6db89e488f43e" translate="yes" xml:space="preserve">
          <source>The URL parsing functions were originally designed to operate on character strings only. In practice, it is useful to be able to manipulate properly quoted and encoded URLs as sequences of ASCII bytes. Accordingly, the URL parsing functions in this module all operate on &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; objects in addition to &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">URL解析功能最初旨在仅对字符串进行操作。实际上，能够将正确引用和编码的URL作为ASCII字节序列进行操作非常有用。因此，除了&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;对象外，此模块中的URL解析函数还对&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;对象进行操作。</target>
        </trans-unit>
        <trans-unit id="767746494e5992b19ee4215ca1c553ccc7ef02b6" translate="yes" xml:space="preserve">
          <source>The URL quoting functions focus on taking program data and making it safe for use as URL components by quoting special characters and appropriately encoding non-ASCII text. They also support reversing these operations to recreate the original data from the contents of a URL component if that task isn&amp;rsquo;t already covered by the URL parsing functions above.</source>
          <target state="translated">URL引用功能着重于通过引用特殊字符并适当地编码非ASCII文本来获取程序数据并使其安全地用作URL组件。如果上面的URL解析功能尚未涵盖该任务，它们还支持逆转这些操作以从URL组件的内容重新创建原始数据。</target>
        </trans-unit>
        <trans-unit id="54066892316ef33a7c80c7cc0ef79d07ebc23fea" translate="yes" xml:space="preserve">
          <source>The UTC timezone, &lt;code&gt;timezone(timedelta(0))&lt;/code&gt;.</source>
          <target state="translated">UTC时区 &lt;code&gt;timezone(timedelta(0))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="230fce554aaa73006fcdc744072561d1b035264b" translate="yes" xml:space="preserve">
          <source>The UUID as a 128-bit integer.</source>
          <target state="translated">UUID为128位整数。</target>
        </trans-unit>
        <trans-unit id="ada1c18a51eb3eac79e65818a624c02eaee85742" translate="yes" xml:space="preserve">
          <source>The UUID as a 16-byte string (containing the six integer fields in big-endian byte order).</source>
          <target state="translated">UUID是一个16字节的字符串(包含6个整数字段,按大字节顺序排列)。</target>
        </trans-unit>
        <trans-unit id="2381ab9006b77ecac0111ea046ff0cb7e8dfd5d1" translate="yes" xml:space="preserve">
          <source>The UUID as a 16-byte string (with &lt;em&gt;time_low&lt;/em&gt;, &lt;em&gt;time_mid&lt;/em&gt;, and &lt;em&gt;time_hi_version&lt;/em&gt; in little-endian byte order).</source>
          <target state="translated">UUID为16字节的字符串（具有&lt;em&gt;little_endian&lt;/em&gt;字节顺序的&lt;em&gt;time_low&lt;/em&gt;，&lt;em&gt;time_mid&lt;/em&gt;和&lt;em&gt;time_hi_version&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="1c6aa8c5331e6dfe4b2198d9e5600b8c7ebfc894" translate="yes" xml:space="preserve">
          <source>The UUID as a 32-character hexadecimal string.</source>
          <target state="translated">UUID是一个32个字符的十六进制字符串。</target>
        </trans-unit>
        <trans-unit id="177533cf244a77a50c952f3fbe78b63c34c13f4c" translate="yes" xml:space="preserve">
          <source>The UUID as a URN as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">UUID作为&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 4122中&lt;/strong&gt;&lt;/a&gt;指定的URN 。</target>
        </trans-unit>
        <trans-unit id="4ce88db58d1bd2cff41f02584142c4d5b6236bbd" translate="yes" xml:space="preserve">
          <source>The UUID variant, which determines the internal layout of the UUID. This will be one of the constants &lt;a href=&quot;#uuid.RESERVED_NCS&quot;&gt;&lt;code&gt;RESERVED_NCS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.RFC_4122&quot;&gt;&lt;code&gt;RFC_4122&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.RESERVED_MICROSOFT&quot;&gt;&lt;code&gt;RESERVED_MICROSOFT&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#uuid.RESERVED_FUTURE&quot;&gt;&lt;code&gt;RESERVED_FUTURE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">UUID变体，用于确定UUID的内部布局。这将是常量&lt;a href=&quot;#uuid.RESERVED_NCS&quot;&gt; &lt;code&gt;RESERVED_NCS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#uuid.RFC_4122&quot;&gt; &lt;code&gt;RFC_4122&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#uuid.RESERVED_MICROSOFT&quot;&gt; &lt;code&gt;RESERVED_MICROSOFT&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#uuid.RESERVED_FUTURE&quot;&gt; &lt;code&gt;RESERVED_FUTURE&lt;/code&gt; 之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c342fe24c4cbcb0d257de674ff4759e57b22adbe" translate="yes" xml:space="preserve">
          <source>The UUID version number (1 through 5, meaningful only when the variant is &lt;a href=&quot;#uuid.RFC_4122&quot;&gt;&lt;code&gt;RFC_4122&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">UUID版本号（1到5，仅在变体为&lt;a href=&quot;#uuid.RFC_4122&quot;&gt; &lt;code&gt;RFC_4122&lt;/code&gt; &lt;/a&gt;时才有意义）。</target>
        </trans-unit>
        <trans-unit id="a51363554bd414c12851cae7faea9edf2a962fd9" translate="yes" xml:space="preserve">
          <source>The UUID was generated by the platform in a multiprocessing-safe way.</source>
          <target state="translated">UUID由平台以多处理安全的方式生成。</target>
        </trans-unit>
        <trans-unit id="47a9a2e59e442cbdb8a457590010b0cf856f5044" translate="yes" xml:space="preserve">
          <source>The UUID was not generated in a multiprocessing-safe way.</source>
          <target state="translated">UUID没有以多处理安全的方式生成。</target>
        </trans-unit>
        <trans-unit id="2a47f74b6e550e89792615dcf5953a8088aa9f2e" translate="yes" xml:space="preserve">
          <source>The Unicode standard defines various normalization forms of a Unicode string, based on the definition of canonical equivalence and compatibility equivalence. In Unicode, several characters can be expressed in various way. For example, the character U+00C7 (LATIN CAPITAL LETTER C WITH CEDILLA) can also be expressed as the sequence U+0043 (LATIN CAPITAL LETTER C) U+0327 (COMBINING CEDILLA).</source>
          <target state="translated">Unicode标准在定义规范等效和兼容等效的基础上,定义了Unicode字符串的各种规范化形式。在Unicode中,一些字符可以用不同的方式表达。例如,字符U+00C7(LATIN CAPITAL LETTER C WITH CEDILLA)也可以表示为U+0043(LATIN CAPITAL LETTER C)U+0327(COMBINING CEDILLA)的序列。</target>
        </trans-unit>
        <trans-unit id="c04d63dca6dbfa35a8eb332fbd0e71599ed04307" translate="yes" xml:space="preserve">
          <source>The Unix man page for &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/getrlimit(2)&quot;&gt;getrlimit(2)&lt;/a&gt;&lt;/em&gt; lists the available resources. Note that not all systems use the same symbol or same value to denote the same resource. This module does not attempt to mask platform differences &amp;mdash; symbols not defined for a platform will not be available from this module on that platform.</source>
          <target state="translated">&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/getrlimit(2)&quot;&gt;getrlimit（2）&lt;/a&gt;&lt;/em&gt;的Unix手册页列出了可用资源。请注意，并非所有系统都使用相同的符号或相同的值来表示相同的资源。该模块不会尝试掩盖平台差异-未为平台定义的符号将无法从该平台上的该模块中获得。</target>
        </trans-unit>
        <trans-unit id="5a7c44388893db174e9ea999556cdbef90f21c4a" translate="yes" xml:space="preserve">
          <source>The W3C recommendation for the DOM supported by &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; &lt;/a&gt;支持的DOM的W3C建议。</target>
        </trans-unit>
        <trans-unit id="12834e293d8b743cd66ae767c77319fb9cdda8c3" translate="yes" xml:space="preserve">
          <source>The W3C recommendation for the DOM supported by &lt;a href=&quot;xml.dom.minidom#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;xml.dom.minidom#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; &lt;/a&gt;支持的DOM的W3C建议。</target>
        </trans-unit>
        <trans-unit id="31da42b88e14c17335b5f3c69d5530c7bbb076fe" translate="yes" xml:space="preserve">
          <source>The W3C recommendation upon which the Python DOM API is based.</source>
          <target state="translated">Python DOM API所基于的W3C建议。</target>
        </trans-unit>
        <trans-unit id="7f9e002ad4780ba707a87e87fd969fb608c7c36f" translate="yes" xml:space="preserve">
          <source>The Warnings Filter</source>
          <target state="translated">警告过滤器</target>
        </trans-unit>
        <trans-unit id="10331ee2cc67db663d1588e865683c3ef36476ce" translate="yes" xml:space="preserve">
          <source>The Web Server Gateway Interface (WSGI) is a standard interface between web server software and web applications written in Python. Having a standard interface makes it easy to use an application that supports WSGI with a number of different web servers.</source>
          <target state="translated">Web服务器网关接口(WSGI)是Web服务器软件和用Python编写的Web应用程序之间的标准接口。有了标准接口,就可以很容易地将支持WSGI的应用程序与一些不同的Web服务器一起使用。</target>
        </trans-unit>
        <trans-unit id="2ae5961df21f86344f6e296a655c0d9ff73bdfd3" translate="yes" xml:space="preserve">
          <source>The Window Manager</source>
          <target state="translated">窗口管理器</target>
        </trans-unit>
        <trans-unit id="65c6ce80c74663bba1681b82368d9ef75309faf6" translate="yes" xml:space="preserve">
          <source>The XML format for plist files.</source>
          <target state="translated">plist文件的XML格式。</target>
        </trans-unit>
        <trans-unit id="fc2e75c413853f6e04459cc96ca7e162e334c720" translate="yes" xml:space="preserve">
          <source>The XML handling submodules are:</source>
          <target state="translated">XML处理子模块为:。</target>
        </trans-unit>
        <trans-unit id="ee22895916a9fd9bfc78eca970b52547580e8558" translate="yes" xml:space="preserve">
          <source>The XML modules are not secure against erroneous or maliciously constructed data. If you need to parse untrusted or unauthenticated data see the &lt;a href=&quot;#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt; and &lt;a href=&quot;#defused-packages&quot;&gt;The defusedxml and defusedexpat Packages&lt;/a&gt; sections.</source>
          <target state="translated">XML模块对于错误或恶意构建的数据并不安全。如果您需要解析不可信或未经身份验证的数据，请参见&lt;a href=&quot;#xml-vulnerabilities&quot;&gt;XML漏洞&lt;/a&gt;和&lt;a href=&quot;#defused-packages&quot;&gt;defusedxml和defusedexpat软件包&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="f858c2f3f477a724c30f050829c83421c11efe4f" translate="yes" xml:space="preserve">
          <source>The XML modules are not secure against erroneous or maliciously constructed data. If you need to parse untrusted or unauthenticated data see the &lt;a href=&quot;#xml-vulnerabilities&quot;&gt;XML vulnerabilities&lt;/a&gt; and &lt;a href=&quot;#defusedxml-package&quot;&gt;The defusedxml Package&lt;/a&gt; sections.</source>
          <target state="translated">XML模块对于错误或恶意构建的数据是不安全的。如果您需要解析不可信或未经身份验证的数据，请参见&lt;a href=&quot;#xml-vulnerabilities&quot;&gt;XML漏洞&lt;/a&gt;和&lt;a href=&quot;#defusedxml-package&quot;&gt;defusedxml程序包&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="9c0f2cf621a14c2bbdbfa819908f6b587d931318" translate="yes" xml:space="preserve">
          <source>The XML processing modules are not secure against maliciously constructed data. An attacker can abuse XML features to carry out denial of service attacks, access local files, generate network connections to other machines, or circumvent firewalls.</source>
          <target state="translated">XML处理模块对恶意构建的数据并不安全。攻击者可以滥用XML功能进行拒绝服务攻击,访问本地文件,生成与其他机器的网络连接,或绕过防火墙。</target>
        </trans-unit>
        <trans-unit id="252486bd245ee68d35a40ade01a5e1d9f61f7038" translate="yes" xml:space="preserve">
          <source>The ZIP file format does not support timestamps before 1980.</source>
          <target state="translated">ZIP文件格式不支持1980年前的时间戳。</target>
        </trans-unit>
        <trans-unit id="c63b3aee37e3a038e39805f29c23907870ffa3ea" translate="yes" xml:space="preserve">
          <source>The ZIP file format is a common archive and compression standard. This module provides tools to create, read, write, append, and list a ZIP file. Any advanced use of this module will require an understanding of the format, as defined in &lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt;PKZIP Application Note&lt;/a&gt;.</source>
          <target state="translated">ZIP文件格式是一种常见的存档和压缩标准。该模块提供了用于创建，读取，写入，附加和列出ZIP文件的工具。对该模块的任何高级使用都需要了解&lt;a href=&quot;https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT&quot;&gt;PKZIP应用笔记中&lt;/a&gt;定义的格式。</target>
        </trans-unit>
        <trans-unit id="442d8cccd431e779c9116f151ef53c174751f57b" translate="yes" xml:space="preserve">
          <source>The ZIP file format specification has included support for bzip2 compression since 2001, and for LZMA compression since 2006. However, some tools (including older Python releases) do not support these compression methods, and may either refuse to process the ZIP file altogether, or fail to extract individual files.</source>
          <target state="translated">自2001年以来,ZIP文件格式规范已经包含了对bzip2压缩的支持,自2006年以来支持LZMA压缩。然而,一些工具(包括旧的Python版本)不支持这些压缩方法,可能会完全拒绝处理ZIP文件,或者无法提取单个文件。</target>
        </trans-unit>
        <trans-unit id="98199ae838f2d5784421f8c9d0b795a0bb8b257d" translate="yes" xml:space="preserve">
          <source>The above &lt;a href=&quot;#module-bisect&quot;&gt;&lt;code&gt;bisect()&lt;/code&gt;&lt;/a&gt; functions are useful for finding insertion points but can be tricky or awkward to use for common searching tasks. The following five functions show how to transform them into the standard lookups for sorted lists:</source>
          <target state="translated">上面的&lt;a href=&quot;#module-bisect&quot;&gt; &lt;code&gt;bisect()&lt;/code&gt; &lt;/a&gt;函数对于查找插入点很有用，但对于常见的搜索任务而言可能会有些棘手或笨拙。以下五个函数显示了如何将它们转换为排序列表的标准查找：</target>
        </trans-unit>
        <trans-unit id="407e21ba6d5dd1ee8eee311341a7ab707eb91302" translate="yes" xml:space="preserve">
          <source>The above YAML snippet defines three formatters. The first, with id &lt;code&gt;brief&lt;/code&gt;, is a standard &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;logging.Formatter&lt;/code&gt;&lt;/a&gt; instance with the specified format string. The second, with id &lt;code&gt;default&lt;/code&gt;, has a longer format and also defines the time format explicitly, and will result in a &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;logging.Formatter&lt;/code&gt;&lt;/a&gt; initialized with those two format strings. Shown in Python source form, the &lt;code&gt;brief&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; formatters have configuration sub-dictionaries:</source>
          <target state="translated">上面的YAML代码段定义了三个格式化程序。第一个ID为 &lt;code&gt;brief&lt;/code&gt; ，是具有指定格式字符串的标准&lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;logging.Formatter&lt;/code&gt; &lt;/a&gt;实例。第二个ID为 &lt;code&gt;default&lt;/code&gt; ，具有更长的格式，并且还显式定义了时间格式，并将导致使用这两个格式字符串初始化的&lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;logging.Formatter&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;brief&lt;/code&gt; 和 &lt;code&gt;default&lt;/code&gt; 格式化程序以Python源代码形式显示，具有配置子词典：</target>
        </trans-unit>
        <trans-unit id="e62cbf4b6548b919e4fdec7b561bc7cfed74c41b" translate="yes" xml:space="preserve">
          <source>The above action would run &lt;a href=&quot;re#re.compile&quot;&gt;&lt;code&gt;re.compile()&lt;/code&gt;&lt;/a&gt; and print profile results like the following:</source>
          <target state="translated">上面的操作将运行&lt;a href=&quot;re#re.compile&quot;&gt; &lt;code&gt;re.compile()&lt;/code&gt; &lt;/a&gt;并打印配置文件结果，如下所示：</target>
        </trans-unit>
        <trans-unit id="cb5b571b0f55359c686525ade99c560ac76753ed" translate="yes" xml:space="preserve">
          <source>The above code print a series of &lt;code&gt;0 0&lt;/code&gt; lines, because the array contents is initialized to zeros.</source>
          <target state="translated">上面的代码打印了一系列 &lt;code&gt;0 0&lt;/code&gt; 行，因为数组内容被初始化为零。</target>
        </trans-unit>
        <trans-unit id="61e4b2d674d629816be9e5499f8d6280a73b0d50" translate="yes" xml:space="preserve">
          <source>The above constants are available on Unix and Windows.</source>
          <target state="translated">以上常量在Unix和Windows上都可以使用。</target>
        </trans-unit>
        <trans-unit id="8f7cdc222bbf8c590edefed4e2c6e102f38a77a0" translate="yes" xml:space="preserve">
          <source>The above constants are extensions and not present if they are not defined by the C library.</source>
          <target state="translated">以上常量是扩展,如果C库没有定义,则不存在。</target>
        </trans-unit>
        <trans-unit id="e2f9edc72b7c0f0352c1e5c0fd791c1214095743" translate="yes" xml:space="preserve">
          <source>The above constants are only available on Unix.</source>
          <target state="translated">以上常量仅在Unix上可用。</target>
        </trans-unit>
        <trans-unit id="26b1ca703884f216a942e677e3510315043cacee" translate="yes" xml:space="preserve">
          <source>The above constants are only available on Windows.</source>
          <target state="translated">以上常量仅在Windows上可用。</target>
        </trans-unit>
        <trans-unit id="3ed3f8c425e1cebe6ddfe02fdc52e00207f48926" translate="yes" xml:space="preserve">
          <source>The above example defines a read-only property; you can also define a read-write abstract property by appropriately marking one or more of the underlying methods as abstract:</source>
          <target state="translated">上面的例子定义了一个只读属性;你也可以通过适当地将一个或多个底层方法标记为抽象方法来定义一个读写抽象属性。</target>
        </trans-unit>
        <trans-unit id="05d7f78147c227eb5aae0acc97674a01a9ebf658" translate="yes" xml:space="preserve">
          <source>The above examples show the most commonly used &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; features which are sufficient to meet many everyday testing needs. The remainder of the documentation explores the full feature set from first principles.</source>
          <target state="translated">以上的例子显示了最常用的&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;这些都足以满足许多日常测试需求的功能。本文档的其余部分从第一个原理探讨了完整的功能集。</target>
        </trans-unit>
        <trans-unit id="bc890161681692d39ad0a02051269ccf8961c8a2" translate="yes" xml:space="preserve">
          <source>The above implicitly extends to text files, since the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function will wrap a buffered object inside a &lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt;. This includes standard streams and therefore affects the built-in &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function as well.</source>
          <target state="translated">上面的内容隐含地扩展到文本文件，因为&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数会将缓冲的对象包装在&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; 中&lt;/a&gt;。这包括标准流，因此也会影响内置的&lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="74957a5b993467a874f6d190c9036f6da0f9c8fd" translate="yes" xml:space="preserve">
          <source>The above implicitly extends to text files, since the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function will wrap a buffered object inside a &lt;a href=&quot;#io.TextIOWrapper&quot;&gt;&lt;code&gt;TextIOWrapper&lt;/code&gt;&lt;/a&gt;. This includes standard streams and therefore affects the built-in function &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; as well.</source>
          <target state="translated">上面的内容隐含地扩展到文本文件，因为&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数会将缓冲的对象包装在&lt;a href=&quot;#io.TextIOWrapper&quot;&gt; &lt;code&gt;TextIOWrapper&lt;/code&gt; 中&lt;/a&gt;。这包括标准流，因此也会影响内置函数&lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef1df1ceccbb344550c1134611aa680a6ca57474" translate="yes" xml:space="preserve">
          <source>The above module-level convenience functions, which delegate to the root logger, call &lt;a href=&quot;#logging.basicConfig&quot;&gt;&lt;code&gt;basicConfig()&lt;/code&gt;&lt;/a&gt; to ensure that at least one handler is available. Because of this, they should &lt;em&gt;not&lt;/em&gt; be used in threads, in versions of Python earlier than 2.7.1 and 3.2, unless at least one handler has been added to the root logger &lt;em&gt;before&lt;/em&gt; the threads are started. In earlier versions of Python, due to a thread safety shortcoming in &lt;a href=&quot;#logging.basicConfig&quot;&gt;&lt;code&gt;basicConfig()&lt;/code&gt;&lt;/a&gt;, this can (under rare circumstances) lead to handlers being added multiple times to the root logger, which can in turn lead to multiple messages for the same event.</source>
          <target state="translated">上面的模块级便捷函数委托给root记录器，调用&lt;a href=&quot;#logging.basicConfig&quot;&gt; &lt;code&gt;basicConfig()&lt;/code&gt; &lt;/a&gt;以确保至少有一个处理程序可用。正因为如此，他们应该&lt;em&gt;不&lt;/em&gt;被在线程之前使用，在Python版本2.7.1比3.2，除非至少有一个处理程序已被添加到根记录&lt;em&gt;之前&lt;/em&gt;的线程启动。在Python的早期版本中，由于&lt;a href=&quot;#logging.basicConfig&quot;&gt; &lt;code&gt;basicConfig()&lt;/code&gt; 中&lt;/a&gt;的线程安全性不足，这可能（在极少数情况下）导致将处理程序多次添加到root记录器中，从而可能导致同一事件的多个消息。</target>
        </trans-unit>
        <trans-unit id="0d8d492094673232d29c1078b172cdc265b56e9a" translate="yes" xml:space="preserve">
          <source>The above snippet indicates that logger named &lt;code&gt;foo.bar.baz&lt;/code&gt; should have two handlers attached to it, which are described by the handler ids &lt;code&gt;h1&lt;/code&gt; and &lt;code&gt;h2&lt;/code&gt;. The formatter for &lt;code&gt;h1&lt;/code&gt; is that described by id &lt;code&gt;brief&lt;/code&gt;, and the formatter for &lt;code&gt;h2&lt;/code&gt; is that described by id &lt;code&gt;precise&lt;/code&gt;.</source>
          <target state="translated">上面的代码片段指示名为 &lt;code&gt;foo.bar.baz&lt;/code&gt; 的记录器应附加两个处理程序，这些处理程序由处理程序ID &lt;code&gt;h1&lt;/code&gt; 和 &lt;code&gt;h2&lt;/code&gt; 进行描述。 &lt;code&gt;h1&lt;/code&gt; 的格式化程序由id &lt;code&gt;brief&lt;/code&gt; 描述， &lt;code&gt;h2&lt;/code&gt; 的格式化程序由id &lt;code&gt;precise&lt;/code&gt; 描述。</target>
        </trans-unit>
        <trans-unit id="434241b2ca1f428e5d843d599082aaac24ecf848" translate="yes" xml:space="preserve">
          <source>The above three functions provide dialogs that prompt the user to enter a value of the desired type.</source>
          <target state="translated">上述三个功能提供了对话框,提示用户输入所需类型的值。</target>
        </trans-unit>
        <trans-unit id="03e6b648fca66ed81d2e30bf11726d8cc4ccb34b" translate="yes" xml:space="preserve">
          <source>The above two classes provide native dialog windows for saving and loading files.</source>
          <target state="translated">以上两个类提供了保存和加载文件的本地对话窗口。</target>
        </trans-unit>
        <trans-unit id="7964aebd001d43335a90b9bdf71dbd85e19014d8" translate="yes" xml:space="preserve">
          <source>The above two functions create an &lt;a href=&quot;#tkinter.filedialog.Open&quot;&gt;&lt;code&gt;Open&lt;/code&gt;&lt;/a&gt; dialog and return the opened file object(s) in read-only mode.</source>
          <target state="translated">上面的两个函数创建一个&amp;ldquo;&lt;a href=&quot;#tkinter.filedialog.Open&quot;&gt; &lt;code&gt;Open&lt;/code&gt; &lt;/a&gt;对话框，并以只读模式返回打开的文件对象。</target>
        </trans-unit>
        <trans-unit id="f872c4361e9eb16fb1403436c69ad42e32ef3dec" translate="yes" xml:space="preserve">
          <source>The above two functions create an &lt;a href=&quot;#tkinter.filedialog.Open&quot;&gt;&lt;code&gt;Open&lt;/code&gt;&lt;/a&gt; dialog and return the selected filename(s) that correspond to existing file(s).</source>
          <target state="translated">上面的两个函数创建一个&amp;ldquo;&lt;a href=&quot;#tkinter.filedialog.Open&quot;&gt; &lt;code&gt;Open&lt;/code&gt; &lt;/a&gt;对话框，并返回与现有文件相对应的所选文件名。</target>
        </trans-unit>
        <trans-unit id="5afdd19ff2762aaad15324735d06fbba48a09f88" translate="yes" xml:space="preserve">
          <source>The above will add a header that looks like this:</source>
          <target state="translated">上面会添加一个像这样的头。</target>
        </trans-unit>
        <trans-unit id="f25ebcb4ed21c461f51c70e01467241e07cea134" translate="yes" xml:space="preserve">
          <source>The above will execute &lt;code&gt;somefile.py&lt;/code&gt; and generate annotated listings of all Python modules imported during the execution into the current directory.</source>
          <target state="translated">上面的代码将执行 &lt;code&gt;somefile.py&lt;/code&gt; 并生成在执行过程中导入到当前目录中的所有Python模块的带注释的列表。</target>
        </trans-unit>
        <trans-unit id="ce5bd96b918301cb95de685eaccadac99a16c5c7" translate="yes" xml:space="preserve">
          <source>The abstract base class defining the interface of finder objects on &lt;a href=&quot;#sys.meta_path&quot;&gt;&lt;code&gt;meta_path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">定义&lt;a href=&quot;#sys.meta_path&quot;&gt; &lt;code&gt;meta_path&lt;/code&gt; &lt;/a&gt;上finder对象的接口的抽象基类。</target>
        </trans-unit>
        <trans-unit id="cd5f23b2d3c373fb28eef9fa8f1f6d899e6031e2" translate="yes" xml:space="preserve">
          <source>The abstract base class for all I/O classes, acting on streams of bytes. There is no public constructor.</source>
          <target state="translated">所有I/O类的抽象基类,作用于字节流。没有公共构造函数。</target>
        </trans-unit>
        <trans-unit id="c659b88cd8236075a43a087f99d1f6f299c2eadd" translate="yes" xml:space="preserve">
          <source>The abstract base classes also provide default implementations of some methods in order to help implementation of concrete stream classes. For example, &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt; provides unoptimized implementations of &lt;code&gt;readinto()&lt;/code&gt; and &lt;a href=&quot;#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">抽象基类还提供某些方法的默认实现，以帮助实现具体的流类。例如，&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;提供 &lt;code&gt;readinto()&lt;/code&gt; 和&lt;a href=&quot;#io.IOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; 的&lt;/a&gt;未优化实现。</target>
        </trans-unit>
        <trans-unit id="1f9fe10078c0b0af1e6a6803c79431e9d237a736" translate="yes" xml:space="preserve">
          <source>The abstract base classes making up the numeric tower.</source>
          <target state="translated">组成数字塔的抽象基类。</target>
        </trans-unit>
        <trans-unit id="12970d447a92441a5a1d2b06c8dbb27151950e72" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; defines the interface expected of finders by Python&amp;rsquo;s import system. &lt;code&gt;importlib.metadata&lt;/code&gt; extends this protocol by looking for an optional &lt;code&gt;find_distributions&lt;/code&gt; callable on the finders from &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt; and presents this extended interface as the &lt;code&gt;DistributionFinder&lt;/code&gt; abstract base class, which defines this abstract method:</source>
          <target state="translated">抽象类&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt;定义Python的导入系统期望的查找器接口。 &lt;code&gt;importlib.metadata&lt;/code&gt; 通过寻找一个可选扩展该协议 &lt;code&gt;find_distributions&lt;/code&gt; 从发现者可调用&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; &lt;/a&gt;和呈现该扩展接口作为 &lt;code&gt;DistributionFinder&lt;/code&gt; 抽象基类，它定义该抽象方法：</target>
        </trans-unit>
        <trans-unit id="5433534b54436760d1f4d8f1c5502666c388c4e5" translate="yes" xml:space="preserve">
          <source>The abstract class &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder&quot;&gt;&lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt;&lt;/a&gt; defines the interface expected of finders by Python&amp;rsquo;s import system. &lt;code&gt;importlib.metadata&lt;/code&gt; extends this protocol by looking for an optional &lt;code&gt;find_distributions&lt;/code&gt; callable on the finders from &lt;code&gt;sys.meta_path&lt;/code&gt; and presents this extended interface as the &lt;code&gt;DistributionFinder&lt;/code&gt; abstract base class, which defines this abstract method:</source>
          <target state="translated">抽象类&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder&quot;&gt; &lt;code&gt;importlib.abc.MetaPathFinder&lt;/code&gt; &lt;/a&gt;定义Python的导入系统期望的查找器接口。 &lt;code&gt;importlib.metadata&lt;/code&gt; 通过寻找一个可选扩展该协议 &lt;code&gt;find_distributions&lt;/code&gt; 从发现者可调用 &lt;code&gt;sys.meta_path&lt;/code&gt; 和呈现该扩展接口作为 &lt;code&gt;DistributionFinder&lt;/code&gt; 抽象基类，它定义该抽象方法：</target>
        </trans-unit>
        <trans-unit id="997702cd66ff1ee75f7fe9b2315881a481a29682" translate="yes" xml:space="preserve">
          <source>The abstract event loop policy base class is defined as follows:</source>
          <target state="translated">抽象的事件循环策略基类定义如下。</target>
        </trans-unit>
        <trans-unit id="b822e2129fda13f824b88f911238744a0942dfa9" translate="yes" xml:space="preserve">
          <source>The abstract grammar is currently defined as follows:</source>
          <target state="translated">目前,抽象语法的定义如下:</target>
        </trans-unit>
        <trans-unit id="22685ed5927596fd28d7ba1c6153d574f910d052" translate="yes" xml:space="preserve">
          <source>The abstract method returns an iterable of no items.</source>
          <target state="translated">该抽象方法返回一个没有项目的迭代。</target>
        </trans-unit>
        <trans-unit id="2d8da79b65eb77d7ab2dbbc1e796e48b7e1aa054" translate="yes" xml:space="preserve">
          <source>The abstract methods defined by this class are to add optional bytecode file support. Not implementing these optional methods (or causing them to raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;) causes the loader to only work with source code. Implementing the methods allows the loader to work with source &lt;em&gt;and&lt;/em&gt; bytecode files; it does not allow for &lt;em&gt;sourceless&lt;/em&gt; loading where only bytecode is provided. Bytecode files are an optimization to speed up loading by removing the parsing step of Python&amp;rsquo;s compiler, and so no bytecode-specific API is exposed.</source>
          <target state="translated">此类定义的抽象方法是添加可选的字节码文件支持。不实现这些可选方法（或导致它们引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;）将导致加载程序仅使用源代码。实现这些方法使加载程序可以处理源文件&lt;em&gt;和&lt;/em&gt;字节码文件。它不允许仅提供字节码的&lt;em&gt;无源&lt;/em&gt;加载。字节码文件是一种优化方法，它通过删除Python编译器的解析步骤来加快加载速度，因此没有公开特定于字节码的API。</target>
        </trans-unit>
        <trans-unit id="bac918bfaa9fbf1f60536a1f9a285735540a9661" translate="yes" xml:space="preserve">
          <source>The actual messages are inspected to determine which labels exist in the mailbox rather than consulting the list of labels in the Babyl options section, but the Babyl section is updated whenever the mailbox is modified.</source>
          <target state="translated">检查实际的邮件以确定邮箱中存在哪些标签,而不是咨询Babyl选项部分的标签列表,但每当邮箱被修改时,Babyl部分就会更新。</target>
        </trans-unit>
        <trans-unit id="ec59d57f13dbc7f6e8f220cf7108a96c7845d01c" translate="yes" xml:space="preserve">
          <source>The actual representation of values is determined by the machine architecture (strictly speaking, by the C implementation). The actual size can be accessed through the &lt;code&gt;itemsize&lt;/code&gt; attribute.</source>
          <target state="translated">值的实际表示形式由机器体系结构（严格来说，由C实现）确定。可以通过 &lt;code&gt;itemsize&lt;/code&gt; 属性访问实际大小。</target>
        </trans-unit>
        <trans-unit id="8bbd67fedc62d6744e578e383acd313d41f0348f" translate="yes" xml:space="preserve">
          <source>The add_argument() method</source>
          <target state="translated">add_argument()方法</target>
        </trans-unit>
        <trans-unit id="6162253165783060c2db0f1fb8a4141706505e29" translate="yes" xml:space="preserve">
          <source>The addition of new required attributes must go through the normal PEP process. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0421&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 421&lt;/strong&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">必须在正常的PEP过程中添加新的必需属性。有关更多信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0421&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 421&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b41a5938a7e2614a804f163135567243094cedf" translate="yes" xml:space="preserve">
          <source>The addition of new required attributes must go through the normal PEP process. See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0421&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 421&lt;/strong&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">必须在正常的PEP过程中添加新的必需属性。有关更多信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0421&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;PEP 421&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55a0169a9941fb11dafda49bd2ffe19ca9ee69cc" translate="yes" xml:space="preserve">
          <source>The address (&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt;&lt;code&gt;IPv4Address&lt;/code&gt;&lt;/a&gt;) without network information.</source>
          <target state="translated">没有网络信息的地址（&lt;a href=&quot;#ipaddress.IPv4Address&quot;&gt; &lt;code&gt;IPv4Address&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="341c8834b822a019f9534dcafa2d84b7b101ecd9" translate="yes" xml:space="preserve">
          <source>The address format required by a particular socket object is automatically selected based on the address family specified when the socket object was created. Socket addresses are represented as follows:</source>
          <target state="translated">根据创建套接字对象时指定的地址族,自动选择特定套接字对象所需的地址格式。套接字地址的表示方法如下:</target>
        </trans-unit>
        <trans-unit id="4cb6e2569f1a198791a025941f4508602c56ffb5" translate="yes" xml:space="preserve">
          <source>The address from which the last accepted connection came. If this is unavailable then it is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">最后接受的连接来自的地址。如果不可用，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9eb11849699377b31e52eceb4abebe16ec4ad447" translate="yes" xml:space="preserve">
          <source>The address of an &lt;a href=&quot;#socket.AF_UNIX&quot;&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/a&gt; socket bound to a file system node is represented as a string, using the file system encoding and the &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 383&lt;/strong&gt;&lt;/a&gt;). An address in Linux&amp;rsquo;s abstract namespace is returned as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; with an initial null byte; note that sockets in this namespace can communicate with normal file system sockets, so programs intended to run on Linux may need to deal with both types of address. A string or bytes-like object can be used for either type of address when passing it as an argument.</source>
          <target state="translated">绑定到文件系统节点的&lt;a href=&quot;#socket.AF_UNIX&quot;&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/a&gt;套接字的地址使用文件系统编码和 &lt;code&gt;'surrogateescape'&lt;/code&gt; 错误处理程序（请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 383&lt;/strong&gt;&lt;/a&gt;）表示为字符串。 Linux的抽象名称空间中的地址将作为类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;返回，且初始字节为空；请注意，此命名空间中的套接字可以与普通文件系统套接字通信，因此要在Linux上运行的程序可能需要处理两种类型的地址。当将其作为参数传递时，可以将字符串或类似字节的对象用于任何一种地址。</target>
        </trans-unit>
        <trans-unit id="6d7567a509be70cd97cbefca60944e55dd85a17e" translate="yes" xml:space="preserve">
          <source>The address of an &lt;a href=&quot;#socket.AF_UNIX&quot;&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/a&gt; socket bound to a file system node is represented as a string, using the file system encoding and the &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 383&lt;/strong&gt;&lt;/a&gt;). An address in Linux&amp;rsquo;s abstract namespace is returned as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; with an initial null byte; note that sockets in this namespace can communicate with normal file system sockets, so programs intended to run on Linux may need to deal with both types of address. A string or bytes-like object can be used for either type of address when passing it as an argument.</source>
          <target state="translated">使用文件系统编码和 &lt;code&gt;'surrogateescape'&lt;/code&gt; 错误处理程序，将绑定到文件系统节点的&lt;a href=&quot;#socket.AF_UNIX&quot;&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/a&gt;套接字的地址表示为字符串（请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 383&lt;/strong&gt;&lt;/a&gt;）。Linux的抽象名称空间中的地址以&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象的&lt;/a&gt;形式返回，并带有一个初始的空字节。请注意，此命名空间中的套接字可以与普通文件系统套接字通信，因此，要在Linux上运行的程序可能需要处理两种类型的地址。当将其作为参数传递时，可以将字符串或类似字节的对象用于任何一种地址类型。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77c6e2e4aa0afd9f0da731748d6868e43cbbddde" translate="yes" xml:space="preserve">
          <source>The address on which the server is listening. The format of addresses varies depending on the protocol family; see the documentation for the &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module for details. For Internet protocols, this is a tuple containing a string giving the address, and an integer port number: &lt;code&gt;('127.0.0.1', 80)&lt;/code&gt;, for example.</source>
          <target state="translated">服务器正在监听的地址。地址的格式因协议系列而异。有关详细信息，请参见&lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;模块的文档。对于Internet协议，这是一个元组，例如包含给出地址的字符串和整数端口号：（ &lt;code&gt;('127.0.0.1', 80)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="caadcf5c749441fdfeb412491158e95d616c65f2" translate="yes" xml:space="preserve">
          <source>The address used by the manager.</source>
          <target state="translated">经理使用的地址。</target>
        </trans-unit>
        <trans-unit id="48fc7614dc7d8c1c17cef309edaa19277c62a924" translate="yes" xml:space="preserve">
          <source>The address which is being used by the Listener object.</source>
          <target state="translated">监听对象正在使用的地址。</target>
        </trans-unit>
        <trans-unit id="0a2d1ad99859dd0fa1ab93fa74d153ed148b3f11" translate="yes" xml:space="preserve">
          <source>The advanced API revolves around two container classes, which are used to store the interactive examples extracted from doctest cases:</source>
          <target state="translated">高级API围绕着两个容器类,用于存储从doctest案例中提取的交互式例子。</target>
        </trans-unit>
        <trans-unit id="0fc8b7f68557d45d430eb3ca143cc623a95cbbb8" translate="yes" xml:space="preserve">
          <source>The advantage of the &lt;a href=&quot;#range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; type over a regular &lt;a href=&quot;#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; is that a &lt;a href=&quot;#range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; object will always take the same (small) amount of memory, no matter the size of the range it represents (as it only stores the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt; and &lt;code&gt;step&lt;/code&gt; values, calculating individual items and subranges as needed).</source>
          <target state="translated">与常规&lt;a href=&quot;#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;相比，&lt;a href=&quot;#range&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;类型的优势在于，&lt;a href=&quot;#range&quot;&gt; &lt;code&gt;range&lt;/code&gt; &lt;/a&gt;对象将始终占用相同（较小）的内存量，无论其表示的范围大小如何（因为它仅存储 &lt;code&gt;start&lt;/code&gt; ， &lt;code&gt;stop&lt;/code&gt; 和 &lt;code&gt;step&lt;/code&gt; 值） ，根据需要计算单个项目和子范围）。</target>
        </trans-unit>
        <trans-unit id="9d8f4a6fe7a31398136778071ccf8af380a56654" translate="yes" xml:space="preserve">
          <source>The advantage over the standard traceback is that source lines in the compiled template will be displayed. The optional &lt;em&gt;file&lt;/em&gt; argument directs where the traceback is sent; it defaults to &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与标准回溯相比的优势在于，将显示已编译模板中的源代码行。可选的&lt;em&gt;file&lt;/em&gt;参数指示向何处发送回溯。它默认为&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="389d9047d4c01bea441e0465f8bdadf31d1765e6" translate="yes" xml:space="preserve">
          <source>The aggregate class must implement a &lt;code&gt;step&lt;/code&gt; method, which accepts the number of parameters &lt;em&gt;num_params&lt;/em&gt; (if &lt;em&gt;num_params&lt;/em&gt; is -1, the function may take any number of arguments), and a &lt;code&gt;finalize&lt;/code&gt; method which will return the final result of the aggregate.</source>
          <target state="translated">聚合类必须实现一个 &lt;code&gt;step&lt;/code&gt; 方法，该方法接受参数&lt;em&gt;num_params&lt;/em&gt;的数量（如果&lt;em&gt;num_params&lt;/em&gt;为-1，则该函数可以采用任意数量的参数），以及一个 &lt;code&gt;finalize&lt;/code&gt; 方法，该方法将返回聚合的最终结果。</target>
        </trans-unit>
        <trans-unit id="c81a91b366c2ca5f6e3514aebee395b76c6e737f" translate="yes" xml:space="preserve">
          <source>The algorithm uses a simple language-independent definition of a word as groups of consecutive letters. The definition works in many contexts but it means that apostrophes in contractions and possessives form word boundaries, which may not be the desired result:</source>
          <target state="translated">该算法使用一个简单的语言无关的定义,将一个单词定义为连续的字母组。该定义在许多情况下都适用,但这意味着收缩词和占有词中的撇号会形成词的边界,这可能不是预期的结果。</target>
        </trans-unit>
        <trans-unit id="1ea76dcb40c4b9fd7e68dc2ee0f71417668bf322" translate="yes" xml:space="preserve">
          <source>The algorithm&amp;rsquo;s accuracy depends on IEEE-754 arithmetic guarantees and the typical case where the rounding mode is half-even. On some non-Windows builds, the underlying C library uses extended precision addition and may occasionally double-round an intermediate sum causing it to be off in its least significant bit.</source>
          <target state="translated">该算法的准确性取决于IEEE-754算术保证以及舍入模式为半对数的典型情况。在某些非Windows版本中，基础C库使用扩展的精度加法，并且有时可能会对中间和进行双取整，从而导致其最低有效位不正确。</target>
        </trans-unit>
        <trans-unit id="5606a01152f52f4dc81a70ca0b1f2ca9568376be" translate="yes" xml:space="preserve">
          <source>The alternate form causes a leading &lt;code&gt;'0x'&lt;/code&gt; or &lt;code&gt;'0X'&lt;/code&gt; (depending on whether the &lt;code&gt;'x'&lt;/code&gt; or &lt;code&gt;'X'&lt;/code&gt; format was used) to be inserted before the first digit.</source>
          <target state="translated">备用格式导致在第一个数字之前插入前导 &lt;code&gt;'0x'&lt;/code&gt; 或 &lt;code&gt;'0X'&lt;/code&gt; （取决于使用的是 &lt;code&gt;'x'&lt;/code&gt; 还是 &lt;code&gt;'X'&lt;/code&gt; 格式）。</target>
        </trans-unit>
        <trans-unit id="d42a4d8ad1a3383ee5320a3a16eb31b75813d0d6" translate="yes" xml:space="preserve">
          <source>The alternate form causes a leading octal specifier (&lt;code&gt;'0o'&lt;/code&gt;) to be inserted before the first digit.</source>
          <target state="translated">备用格式导致在第一个数字之前插入前导八进制说明符（ &lt;code&gt;'0o'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="14d9acf2bea379bd058e7c06b2fff1c83daa4669" translate="yes" xml:space="preserve">
          <source>The alternate form causes the result to always contain a decimal point, and trailing zeroes are not removed as they would otherwise be.</source>
          <target state="translated">交替的形式导致结果总是包含一个小数点,而尾部的零不会像其他形式那样被删除。</target>
        </trans-unit>
        <trans-unit id="a98cf5f39210ac846eda4b14e995b3862902ef83" translate="yes" xml:space="preserve">
          <source>The alternate form causes the result to always contain a decimal point, even if no digits follow it.</source>
          <target state="translated">交替形式使结果总是包含一个小数点,即使后面没有数字。</target>
        </trans-unit>
        <trans-unit id="2b2e794a1178ef7414daa6fc5f835215e754345d" translate="yes" xml:space="preserve">
          <source>The ancient V7 format. This is the first tar format from Unix Seventh Edition, storing only regular files and directories. Names must not be longer than 100 characters, there is no user/group name information. Some archives have miscalculated header checksums in case of fields with non-ASCII characters.</source>
          <target state="translated">古老的V7格式。这是Unix第七版的第一个tar格式,只存储常规文件和目录。名称不能超过100个字符,没有用户/组名信息。有些档案在有非ASCII字符的字段时,会计算错误的头部校验和。</target>
        </trans-unit>
        <trans-unit id="10c51d8f800517ca58ba2468a6c02fd8a7104b3b" translate="yes" xml:space="preserve">
          <source>The annotation for the parameter. If the parameter has no annotation, this attribute is set to &lt;a href=&quot;#inspect.Parameter.empty&quot;&gt;&lt;code&gt;Parameter.empty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参数的注释。如果参数没有注释，则此属性设置为&lt;a href=&quot;#inspect.Parameter.empty&quot;&gt; &lt;code&gt;Parameter.empty&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33bada18ff53849b6ee3f7316070d7ee69b27b87" translate="yes" xml:space="preserve">
          <source>The appropriate version number: &lt;code&gt;4&lt;/code&gt; for IPv4, &lt;code&gt;6&lt;/code&gt; for IPv6.</source>
          <target state="translated">适当的版本号：对于IPv4 为 &lt;code&gt;4&lt;/code&gt; ，对于IPv6 为 &lt;code&gt;6&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e8292e76576f5b761b335d8aabbcc591cdfb09e" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;bytes&lt;/em&gt; must either be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or an iterable producing bytes.</source>
          <target state="translated">参数&lt;em&gt;字节&lt;/em&gt;必须是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;或可迭代的生成字节。</target>
        </trans-unit>
        <trans-unit id="30287e735ebad313fd7a2d00ad83f7bf645bcee9" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;bytes&lt;/em&gt; must either be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or an iterable producing bytes.</source>
          <target state="translated">参数&lt;em&gt;字节&lt;/em&gt;必须是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;或可迭代的生成字节。</target>
        </trans-unit>
        <trans-unit id="d8890dbba084fa181e02072ab15efd96356246f1" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;file&lt;/em&gt; must have three methods, a read() method that takes an integer argument, a readinto() method that takes a buffer argument and a readline() method that requires no arguments, as in the &lt;a href=&quot;io#io.BufferedIOBase&quot;&gt;&lt;code&gt;io.BufferedIOBase&lt;/code&gt;&lt;/a&gt; interface. Thus &lt;em&gt;file&lt;/em&gt; can be an on-disk file opened for binary reading, an &lt;a href=&quot;io#io.BytesIO&quot;&gt;&lt;code&gt;io.BytesIO&lt;/code&gt;&lt;/a&gt; object, or any other custom object that meets this interface.</source>
          <target state="translated">参数&lt;em&gt;文件&lt;/em&gt;必须具有三种方法，如&lt;a href=&quot;io#io.BufferedIOBase&quot;&gt; &lt;code&gt;io.BufferedIOBase&lt;/code&gt; &lt;/a&gt;接口中的方法（带整数参数的read（）方法，带缓冲区参数的readinto（）方法和不带参数的readline（）方法）。因此，&lt;em&gt;文件&lt;/em&gt;可以是为二进制读取而打开的磁盘文件，&lt;a href=&quot;io#io.BytesIO&quot;&gt; &lt;code&gt;io.BytesIO&lt;/code&gt; &lt;/a&gt;对象或满足此接口的任何其他自定义对象。</target>
        </trans-unit>
        <trans-unit id="41dee21e7ee0cafe46125a9e6fc36855c2f04d0a" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;optimize&lt;/em&gt; specifies the optimization level of the compiler; the default value of &lt;code&gt;-1&lt;/code&gt; selects the optimization level of the interpreter as given by &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; options. Explicit levels are &lt;code&gt;0&lt;/code&gt; (no optimization; &lt;code&gt;__debug__&lt;/code&gt; is true), &lt;code&gt;1&lt;/code&gt; (asserts are removed, &lt;code&gt;__debug__&lt;/code&gt; is false) or &lt;code&gt;2&lt;/code&gt; (docstrings are removed too).</source>
          <target state="translated">参数&lt;em&gt;optimize&lt;/em&gt;指定编译器的优化级别；缺省值 &lt;code&gt;-1&lt;/code&gt; 选择&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;选项给定的解释器的优化级别。显式级别为 &lt;code&gt;0&lt;/code&gt; （无优化； &lt;code&gt;__debug__&lt;/code&gt; 为true）， &lt;code&gt;1&lt;/code&gt; （断言， &lt;code&gt;__debug__&lt;/code&gt; 为false）或 &lt;code&gt;2&lt;/code&gt; （也删除了文档字符串）。</target>
        </trans-unit>
        <trans-unit id="c22acf730072d8dbfb0242d9248f26491f463abe" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;optimize&lt;/em&gt; specifies the optimization level of the compiler; the default value of &lt;code&gt;-1&lt;/code&gt; selects the optimization level of the interpreter as given by &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; options. Explicit levels are &lt;code&gt;0&lt;/code&gt; (no optimization; &lt;code&gt;__debug__&lt;/code&gt; is true), &lt;code&gt;1&lt;/code&gt; (asserts are removed, &lt;code&gt;__debug__&lt;/code&gt; is false) or &lt;code&gt;2&lt;/code&gt; (docstrings are removed too).</source>
          <target state="translated">参数&lt;em&gt;optimize&lt;/em&gt;指定编译器的优化级别；缺省值 &lt;code&gt;-1&lt;/code&gt; 选择&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;选项给定的解释器的优化级别。显式级别为 &lt;code&gt;0&lt;/code&gt; （无优化； &lt;code&gt;__debug__&lt;/code&gt; 为true）， &lt;code&gt;1&lt;/code&gt; （声明已删除， &lt;code&gt;__debug__&lt;/code&gt; 为false）或 &lt;code&gt;2&lt;/code&gt; （也删除了文档字符串）。</target>
        </trans-unit>
        <trans-unit id="3deabf3aa9abdc670f9e79ed2b9d15db402ea8d0" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;workers&lt;/em&gt; specifies how many workers are used to compile files in parallel. The default is to not use multiple workers. If the platform can&amp;rsquo;t use multiple workers and &lt;em&gt;workers&lt;/em&gt; argument is given, then sequential compilation will be used as a fallback. If &lt;em&gt;workers&lt;/em&gt; is 0, the number of cores in the system is used. If &lt;em&gt;workers&lt;/em&gt; is lower than &lt;code&gt;0&lt;/code&gt;, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="translated">参数&lt;em&gt;worker&lt;/em&gt;指定使用多少个并行编译文件。默认为不使用多个工作程序。如果平台不能使用多个worker并给出了&lt;em&gt;worker&lt;/em&gt;参数，则顺序编译将用作后备。如果&lt;em&gt;worker&lt;/em&gt;为0，则使用系统中的内核数。如果&lt;em&gt;worker&lt;/em&gt;小于 &lt;code&gt;0&lt;/code&gt; ，则将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be43a16008bbf7f5842dd3fda9c5c730dc968fa1" translate="yes" xml:space="preserve">
          <source>The argument is either an exception object or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. The latter means a regular EOF is received, or the connection was aborted or closed by this side of the connection.</source>
          <target state="translated">该参数可以是异常对象，也可以是&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。后者表示已收到常规EOF，或者连接的这一侧已中止或关闭了连接。</target>
        </trans-unit>
        <trans-unit id="6a211995914e53c0ffa8f7f501f1d50e2819dbbf" translate="yes" xml:space="preserve">
          <source>The arguments &lt;em&gt;server_side&lt;/em&gt;, &lt;em&gt;do_handshake_on_connect&lt;/em&gt;, and &lt;em&gt;suppress_ragged_eofs&lt;/em&gt; have the same meaning as &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这些参数&lt;em&gt;server_side&lt;/em&gt;，&lt;em&gt;do_handshake_on_connect&lt;/em&gt;和&lt;em&gt;suppress_ragged_eofs&lt;/em&gt;具有相同的含义&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c66f3eebc3d176e9c1b552e8a8c2895de8a2a96" translate="yes" xml:space="preserve">
          <source>The arguments are a string and optional globals and locals. If provided, &lt;em&gt;globals&lt;/em&gt; must be a dictionary. If provided, &lt;em&gt;locals&lt;/em&gt; can be any mapping object.</source>
          <target state="translated">参数是一个字符串以及可选的全局变量和局部变量。如果提供，则&lt;em&gt;全局变量&lt;/em&gt;必须是字典。如果提供的话，&lt;em&gt;本地变量&lt;/em&gt;可以是任何映射对象。</target>
        </trans-unit>
        <trans-unit id="c69cfb296a29db62964592dbb716832142521412" translate="yes" xml:space="preserve">
          <source>The arguments are an object and a string. The result is &lt;code&gt;True&lt;/code&gt; if the string is the name of one of the object&amp;rsquo;s attributes, &lt;code&gt;False&lt;/code&gt; if not. (This is implemented by calling &lt;code&gt;getattr(object, name)&lt;/code&gt; and seeing whether it raises an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; or not.)</source>
          <target state="translated">参数是一个对象和一个字符串。如果字符串是对象属性之一的名称，则结果为 &lt;code&gt;True&lt;/code&gt; ,否则为 &lt;code&gt;False&lt;/code&gt; 。（这是通过调用 &lt;code&gt;getattr(object, name)&lt;/code&gt; 并查看它是否引发&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; 来实现的&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="be56149bda6c7546999f067085edf5b3a937c31c" translate="yes" xml:space="preserve">
          <source>The arguments are the components that make up a class definition header: the class name, the base classes (in order) and the keyword arguments (such as &lt;code&gt;metaclass&lt;/code&gt;).</source>
          <target state="translated">参数是构成类定义头的组件：类名称，基类（按顺序）和关键字参数（如 &lt;code&gt;metaclass&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cf499ded5fc70830e3d43eddf2d6cc8d63297fa7" translate="yes" xml:space="preserve">
          <source>The arguments for a function.</source>
          <target state="translated">一个函数的参数。</target>
        </trans-unit>
        <trans-unit id="e7c93246599d96c035a94a1928bc7c60c28e3fdf" translate="yes" xml:space="preserve">
          <source>The arguments for the logging message.</source>
          <target state="translated">记录信息的参数。</target>
        </trans-unit>
        <trans-unit id="fa6396e70f630f892434a48120296055f84dd5e2" translate="yes" xml:space="preserve">
          <source>The arguments for this method are the same as those for the &lt;a href=&quot;#difflib.HtmlDiff.make_file&quot;&gt;&lt;code&gt;make_file()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法的参数与&lt;a href=&quot;#difflib.HtmlDiff.make_file&quot;&gt; &lt;code&gt;make_file()&lt;/code&gt; &lt;/a&gt;方法的参数相同。</target>
        </trans-unit>
        <trans-unit id="fed5e86f10a7fbd166030f1e196e3f269c1fcfc8" translate="yes" xml:space="preserve">
          <source>The arguments must be types and there must be at least one.</source>
          <target state="translated">参数必须是类型,而且必须至少有一个。</target>
        </trans-unit>
        <trans-unit id="f69c3cdc02ca8f80c2baba13a605a2fbc228eaa5" translate="yes" xml:space="preserve">
          <source>The arguments must have numeric types. With mixed operand types, the coercion rules for binary arithmetic operators apply. For &lt;a href=&quot;#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; operands, the result has the same type as the operands (after coercion) unless the second argument is negative; in that case, all arguments are converted to float and a float result is delivered. For example, &lt;code&gt;10**2&lt;/code&gt; returns &lt;code&gt;100&lt;/code&gt;, but &lt;code&gt;10**-2&lt;/code&gt; returns &lt;code&gt;0.01&lt;/code&gt;.</source>
          <target state="translated">参数必须具有数字类型。对于混合操作数类型，适用于二进制算术运算符的强制规则。对于&lt;a href=&quot;#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;操作数，除非第二个参数为负，否则结果与操作数具有相同的类型（强制后）。在这种情况下，所有参数都将转换为float并传递float结果。例如， &lt;code&gt;10**2&lt;/code&gt; 返回 &lt;code&gt;100&lt;/code&gt; ，但是 &lt;code&gt;10**-2&lt;/code&gt; 返回 &lt;code&gt;0.01&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae91bd9ff1ecbb16b6d067052bf6873482f52192" translate="yes" xml:space="preserve">
          <source>The arguments provided (if any) can be used to limit the list down to the significant entries. Initially, the list is taken to be the complete set of profiled functions. Each restriction is either an integer (to select a count of lines), or a decimal fraction between 0.0 and 1.0 inclusive (to select a percentage of lines), or a string that will interpreted as a regular expression (to pattern match the standard name that is printed). If several restrictions are provided, then they are applied sequentially. For example:</source>
          <target state="translated">提供的参数(如果有的话)可以用来限制列表中的重要条目。最初,列表是完整的剖析函数集。每个限制条件可以是一个整数(选择行数),也可以是一个介于0.0和1.0之间的小数点(选择行数的百分比),还可以是一个将被解释为正则表达式的字符串(与打印的标准名称进行模式匹配)。如果提供了几个限制条件,那么它们将依次应用。例如,如果提供了几个限制条件,那么它们将依次应用。</target>
        </trans-unit>
        <trans-unit id="87f25b82b9642ea89296265907e6ccc346f4cbea" translate="yes" xml:space="preserve">
          <source>The arguments shown above are merely some common ones. The full function signature is largely the same as that of &lt;a href=&quot;#subprocess.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; - most arguments are passed directly through to that interface. However, explicitly passing &lt;code&gt;input=None&lt;/code&gt; to inherit the parent&amp;rsquo;s standard input file handle is not supported.</source>
          <target state="translated">上面显示的参数仅仅是一些常见的参数。完整的函数签名与&lt;a href=&quot;#subprocess.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; 的&lt;/a&gt;签名基本相同-大多数参数直接传递给该接口。但是，不支持显式传递 &lt;code&gt;input=None&lt;/code&gt; 来继承父级的标准输入文件句柄。</target>
        </trans-unit>
        <trans-unit id="2043e37b5d3a7c056dc2f3ac3ded2b83680185c6" translate="yes" xml:space="preserve">
          <source>The arguments shown above are merely some common ones. The full function signature is the same as that of the &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; constructor - this function passes all supplied arguments other than &lt;em&gt;timeout&lt;/em&gt; directly through to that interface.</source>
          <target state="translated">上面显示的参数仅仅是一些常见的参数。完整函数签名与&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;构造函数的签名相同-该函数将除&lt;em&gt;超时&lt;/em&gt;以外的所有提供的参数直接传递给该接口。</target>
        </trans-unit>
        <trans-unit id="f78dbd2fcda8d7db784dd89d094ca5c7188a12e9" translate="yes" xml:space="preserve">
          <source>The arguments shown above are merely the most common ones, described below in &lt;a href=&quot;#frequently-used-arguments&quot;&gt;Frequently Used Arguments&lt;/a&gt; (hence the use of keyword-only notation in the abbreviated signature). The full function signature is largely the same as that of the &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; constructor - most of the arguments to this function are passed through to that interface. (&lt;em&gt;timeout&lt;/em&gt;, &lt;em&gt;input&lt;/em&gt;, &lt;em&gt;check&lt;/em&gt;, and &lt;em&gt;capture_output&lt;/em&gt; are not.)</source>
          <target state="translated">上面显示的参数只是最常用的参数，下面在&amp;ldquo; &lt;a href=&quot;#frequently-used-arguments&quot;&gt;常用参数&amp;rdquo;中进行了&lt;/a&gt;描述（因此在缩写签名中使用仅关键字表示法）。完整函数签名与&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;构造函数的签名基本相同-该函数的大多数参数都传递给该接口。 （&lt;em&gt;timeout&lt;/em&gt;，&lt;em&gt;input&lt;/em&gt;，&lt;em&gt;check&lt;/em&gt;和&lt;em&gt;capture_output&lt;/em&gt;不是。）</target>
        </trans-unit>
        <trans-unit id="a8d3dbfa6a2a64fda3f1f33232ef56b7a73086d5" translate="yes" xml:space="preserve">
          <source>The arguments to the range constructor must be integers (either built-in &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; or any object that implements the &lt;code&gt;__index__&lt;/code&gt; special method). If the &lt;em&gt;step&lt;/em&gt; argument is omitted, it defaults to &lt;code&gt;1&lt;/code&gt;. If the &lt;em&gt;start&lt;/em&gt; argument is omitted, it defaults to &lt;code&gt;0&lt;/code&gt;. If &lt;em&gt;step&lt;/em&gt; is zero, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">范围构造函数的参数必须是整数（内置&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;或实现 &lt;code&gt;__index__&lt;/code&gt; 特殊方法的任何对象）。如果省略&lt;em&gt;step&lt;/em&gt;参数，则默认为 &lt;code&gt;1&lt;/code&gt; 。如果省略了&lt;em&gt;start&lt;/em&gt;参数，则默认为 &lt;code&gt;0&lt;/code&gt; 。如果&lt;em&gt;step&lt;/em&gt;为零，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="392a22c741f2ff789b1aa5cfae6c8530e0bcedb5" translate="yes" xml:space="preserve">
          <source>The arguments used to launch the process. This may be a list or a string.</source>
          <target state="translated">用于启动进程的参数。可以是一个列表或字符串。</target>
        </trans-unit>
        <trans-unit id="6eaf471383801c20f082c922e184753ba6eeb675" translate="yes" xml:space="preserve">
          <source>The arithmetic mean is the sum of the data divided by the number of data points. It is commonly called &amp;ldquo;the average&amp;rdquo;, although it is only one of many different mathematical averages. It is a measure of the central location of the data.</source>
          <target state="translated">算术平均值是数据之和除以数据点数。尽管它只是许多不同的数学平均值之一，但通常称为&amp;ldquo;平均值&amp;rdquo;。它是数据中心位置的度量。</target>
        </trans-unit>
        <trans-unit id="6a4efce9426389d16ea55fb24f2a2130bb207613" translate="yes" xml:space="preserve">
          <source>The assert passes if the mock has &lt;em&gt;ever&lt;/em&gt; been called, unlike &lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt;&lt;code&gt;assert_called_with()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt;&lt;code&gt;assert_called_once_with()&lt;/code&gt;&lt;/a&gt; that only pass if the call is the most recent one, and in the case of &lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt;&lt;code&gt;assert_called_once_with()&lt;/code&gt;&lt;/a&gt; it must also be the only call.</source>
          <target state="translated">如果&lt;em&gt;曾经&lt;/em&gt;调用&lt;em&gt;过&lt;/em&gt;该模拟，则断言会通过，而不同于&lt;a href=&quot;#unittest.mock.Mock.assert_called_with&quot;&gt; &lt;code&gt;assert_called_with()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt; &lt;code&gt;assert_called_once_with()&lt;/code&gt; &lt;/a&gt;仅在调用是最近一次调用时才通过，而在&lt;a href=&quot;#unittest.mock.Mock.assert_called_once_with&quot;&gt; &lt;code&gt;assert_called_once_with()&lt;/code&gt; &lt;/a&gt;情况下，它也必须是唯一的调用。</target>
        </trans-unit>
        <trans-unit id="55baf18423476bc2f5cb22bc735bf84833a2ded6" translate="yes" xml:space="preserve">
          <source>The associated child window will be displayed, and the previously-selected window (if different) is unmapped. If &lt;em&gt;tab_id&lt;/em&gt; is omitted, returns the widget name of the currently selected pane.</source>
          <target state="translated">将显示关联的子窗口，并且未映射先前选择的窗口（如果不同）。如果省略&lt;em&gt;tab_id&lt;/em&gt;，则返回当前所选窗格的窗口小部件名称。</target>
        </trans-unit>
        <trans-unit id="1ebc6759ec468be9cd5ca8641b23467e5c0dcc16" translate="yes" xml:space="preserve">
          <source>The asynchronous execution can be performed with threads, using &lt;a href=&quot;#concurrent.futures.ThreadPoolExecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;, or separate processes, using &lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt;. Both implement the same interface, which is defined by the abstract &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">可以使用&lt;a href=&quot;#concurrent.futures.ThreadPoolExecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;通过线程执行异步执行，或者使用&lt;a href=&quot;#concurrent.futures.ProcessPoolExecutor&quot;&gt; &lt;code&gt;ProcessPoolExecutor&lt;/code&gt; &lt;/a&gt;通过单独的进程执行异步执行。两者都实现了相同的接口，该接口由抽象的&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;类定义。</target>
        </trans-unit>
        <trans-unit id="3ccad3e454a2b6bbe8bd6d9030a1c9f1ee44f789" translate="yes" xml:space="preserve">
          <source>The asynchronous input buffer size (default &lt;code&gt;4096&lt;/code&gt;).</source>
          <target state="translated">异步输入缓冲区的大小（默认为 &lt;code&gt;4096&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="648cf457811b8fb2322a6e0f67989021d19d68db" translate="yes" xml:space="preserve">
          <source>The asynchronous output buffer size (default &lt;code&gt;4096&lt;/code&gt;).</source>
          <target state="translated">异步输出缓冲区大小（默认为 &lt;code&gt;4096&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1b3cd46b2d23224528d0f92919781b3cb4fb638a" translate="yes" xml:space="preserve">
          <source>The attribute &lt;code&gt;httponly&lt;/code&gt; specifies that the cookie is only transferred in HTTP requests, and is not accessible through JavaScript. This is intended to mitigate some forms of cross-site scripting.</source>
          <target state="translated">属性 &lt;code&gt;httponly&lt;/code&gt; 指定cookie仅在HTTP请求中传输，并且不能通过JavaScript访问。目的是减轻某些形式的跨站点脚本编写。</target>
        </trans-unit>
        <trans-unit id="8edf79b23d57e5bcd86427cee16457915983e577" translate="yes" xml:space="preserve">
          <source>The attribute &lt;code&gt;samesite&lt;/code&gt; specifies that the browser is not allowed to send the cookie along with cross-site requests. This helps to mitigate CSRF attacks. Valid values for this attribute are &amp;ldquo;Strict&amp;rdquo; and &amp;ldquo;Lax&amp;rdquo;.</source>
          <target state="translated">属性 &lt;code&gt;samesite&lt;/code&gt; 指定不允许浏览器将cookie与跨站点请求一起发送。这有助于减轻CSRF攻击。此属性的有效值为&amp;ldquo; Strict&amp;rdquo;和&amp;ldquo; Lax&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f6ce7ef8307bed2a756ba73ac5ba362e481ae023" translate="yes" xml:space="preserve">
          <source>The attribute &lt;code&gt;sys.float_info.dig&lt;/code&gt; needs further explanation. If &lt;code&gt;s&lt;/code&gt; is any string representing a decimal number with at most &lt;code&gt;sys.float_info.dig&lt;/code&gt; significant digits, then converting &lt;code&gt;s&lt;/code&gt; to a float and back again will recover a string representing the same decimal value:</source>
          <target state="translated">&lt;code&gt;sys.float_info.dig&lt;/code&gt; 属性需要进一步说明。如果 &lt;code&gt;s&lt;/code&gt; 是代表最多为 &lt;code&gt;sys.float_info.dig&lt;/code&gt; 有效数字的十进制数字的任何字符串，则将 &lt;code&gt;s&lt;/code&gt; 转换为float并再次返回将恢复代表相同十进制值的字符串：</target>
        </trans-unit>
        <trans-unit id="80c36253735c07d920791417fa7a7a1a529dab82" translate="yes" xml:space="preserve">
          <source>The attribute name. In a namespace-using document it may include a colon.</source>
          <target state="translated">属性名称。在使用命名空间的文件中,它可以包括一个冒号。</target>
        </trans-unit>
        <trans-unit id="34c7c2faa30f7bd05bfb9c7041417be557d23784" translate="yes" xml:space="preserve">
          <source>The attribute of every character in the window is changed to the new background attribute.</source>
          <target state="translated">窗口中每个字符的属性都改为新的背景属性。</target>
        </trans-unit>
        <trans-unit id="07392340727348ac2f4a66a50ef8232a5df7f9aa" translate="yes" xml:space="preserve">
          <source>The attributes &lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt;&lt;code&gt;maximum_version&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.SSLContext.minimum_version&quot;&gt;&lt;code&gt;minimum_version&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.options&quot;&gt;&lt;code&gt;SSLContext.options&lt;/code&gt;&lt;/a&gt; all affect the supported SSL and TLS versions of the context. The implementation does not prevent invalid combination. For example a context with &lt;a href=&quot;#ssl.OP_NO_TLSv1_2&quot;&gt;&lt;code&gt;OP_NO_TLSv1_2&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;#ssl.SSLContext.options&quot;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt;&lt;code&gt;maximum_version&lt;/code&gt;&lt;/a&gt; set to &lt;a href=&quot;#ssl.TLSVersion.TLSv1_2&quot;&gt;&lt;code&gt;TLSVersion.TLSv1_2&lt;/code&gt;&lt;/a&gt; will not be able to establish a TLS 1.2 connection.</source>
          <target state="translated">属性&lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt; &lt;code&gt;maximum_version&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ssl.SSLContext.minimum_version&quot;&gt; &lt;code&gt;minimum_version&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ssl.SSLContext.options&quot;&gt; &lt;code&gt;SSLContext.options&lt;/code&gt; &lt;/a&gt;都会影响上下文的受支持的SSL和TLS版本。该实现不防止无效组合。例如，在&lt;a href=&quot;#ssl.SSLContext.options&quot;&gt; &lt;code&gt;options&lt;/code&gt; &lt;/a&gt;中具有&lt;a href=&quot;#ssl.OP_NO_TLSv1_2&quot;&gt; &lt;code&gt;OP_NO_TLSv1_2&lt;/code&gt; &lt;/a&gt;且将&lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt; &lt;code&gt;maximum_version&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;#ssl.TLSVersion.TLSv1_2&quot;&gt; &lt;code&gt;TLSVersion.TLSv1_2&lt;/code&gt; 的上下文&lt;/a&gt;将无法建立TLS 1.2连接。</target>
        </trans-unit>
        <trans-unit id="4d2a6e5c3540f613e4a515b7af1ff266b0046448" translate="yes" xml:space="preserve">
          <source>The attributes &lt;code&gt;Color.RED&lt;/code&gt;, &lt;code&gt;Color.GREEN&lt;/code&gt;, etc., are &lt;em&gt;enumeration members&lt;/em&gt; (or &lt;em&gt;enum members&lt;/em&gt;) and are functionally constants.</source>
          <target state="translated">属性 &lt;code&gt;Color.RED&lt;/code&gt; ， &lt;code&gt;Color.GREEN&lt;/code&gt; 等是&lt;em&gt;枚举成员&lt;/em&gt;（或&lt;em&gt;enum成员&lt;/em&gt;），并且是功能常数。</target>
        </trans-unit>
        <trans-unit id="91a4811aba038c398e725d4c575b44d92daff913" translate="yes" xml:space="preserve">
          <source>The audio device objects returned by &lt;a href=&quot;#ossaudiodev.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; define the following methods and (read-only) attributes:</source>
          <target state="translated">&lt;a href=&quot;#ossaudiodev.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;返回的音频设备对象定义以下方法和（只读）属性：</target>
        </trans-unit>
        <trans-unit id="98de9a021c35453cb0dd0fe7c3d9218d4cd603d9" translate="yes" xml:space="preserve">
          <source>The audit event only occurs for direct instantiation of function objects, and is not raised for normal compilation.</source>
          <target state="translated">审计事件只发生在函数对象的直接实例化中,正常编译时不会引发。</target>
        </trans-unit>
        <trans-unit id="04d9760b94e9697b28062a4f0fcfb4a6a38d064d" translate="yes" xml:space="preserve">
          <source>The authors strongly suggest getting a copy of the Tk man pages. Specifically, the man pages in the &lt;code&gt;manN&lt;/code&gt; directory are most useful. The &lt;code&gt;man3&lt;/code&gt; man pages describe the C interface to the Tk library and thus are not especially helpful for script writers.</source>
          <target state="translated">作者强烈建议获得一份Tk手册页的副本。具体来说， &lt;code&gt;manN&lt;/code&gt; 目录中的手册页最有用。该 &lt;code&gt;man3&lt;/code&gt; 手册页描述C接口Tk库，因此不为脚本编写者特别有用。</target>
        </trans-unit>
        <trans-unit id="64330833d6daf7d99e3cc896f57c75f2eeab2fd3" translate="yes" xml:space="preserve">
          <source>The available exception and functions in this module are:</source>
          <target state="translated">本模块中可用的异常和函数有:</target>
        </trans-unit>
        <trans-unit id="45e4ec41244c100fe61e74f34e82a254e2fcc455" translate="yes" xml:space="preserve">
          <source>The available integer presentation types are:</source>
          <target state="translated">可用的整数表现类型有:</target>
        </trans-unit>
        <trans-unit id="f9c8d6e8588482313d7f2606674509cd39c2ade3" translate="yes" xml:space="preserve">
          <source>The available presentation types for floating point and decimal values are:</source>
          <target state="translated">浮点和十进制值的可用显示类型是:。</target>
        </trans-unit>
        <trans-unit id="cf7e6f76bb90144b319d33f3985485d202d127c2" translate="yes" xml:space="preserve">
          <source>The available string presentation types are:</source>
          <target state="translated">可用的字符串表现类型有:</target>
        </trans-unit>
        <trans-unit id="e1cc522ce200b02d1be94463c7dbc8f36cdd953e" translate="yes" xml:space="preserve">
          <source>The barrier can be reused any number of times for the same number of threads.</source>
          <target state="translated">同样数量的线程,屏障可以重复使用任何次数。</target>
        </trans-unit>
        <trans-unit id="1d64881eda8fb439140210f929f502081dc3c6e3" translate="yes" xml:space="preserve">
          <source>The base &lt;code&gt;Codec&lt;/code&gt; class defines these methods which also define the function interfaces of the stateless encoder and decoder:</source>
          <target state="translated">基本的 &lt;code&gt;Codec&lt;/code&gt; 类定义了这些方法，这些方法还定义了无状态编码器和解码器的功能接口：</target>
        </trans-unit>
        <trans-unit id="d36539260f7d520c14f309593d9749c7167bf7a1" translate="yes" xml:space="preserve">
          <source>The base class for all built-in exceptions. It is not meant to be directly inherited by user-defined classes (for that, use &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;). If &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; is called on an instance of this class, the representation of the argument(s) to the instance are returned, or the empty string when there were no arguments.</source>
          <target state="translated">所有内置异常的基类。它并不意味着被用户定义的类直接继承（为此，请使用&lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;）。如果在此类的实例上调用&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;，则返回该实例的参数表示形式；如果没有参数，则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="f6b603a8cfad88dbda8b243486bb16f6a7a25762" translate="yes" xml:space="preserve">
          <source>The base class for custom dialogs.</source>
          <target state="translated">自定义对话框的基类。</target>
        </trans-unit>
        <trans-unit id="37d870854fd3e6d86ede1e5e4056a04f59674dcc" translate="yes" xml:space="preserve">
          <source>The base class for implementing datagram (UDP) protocols.</source>
          <target state="translated">实现数据报(UDP)协议的基类。</target>
        </trans-unit>
        <trans-unit id="e6edb4bd859a927d0a782f77b29c7e76d77dfc75" translate="yes" xml:space="preserve">
          <source>The base class for implementing protocols communicating with child processes (unidirectional pipes).</source>
          <target state="translated">用于实现与子进程(单向管道)通信的协议的基类。</target>
        </trans-unit>
        <trans-unit id="037876c88a29da839e41f411005cef5212fc3b7d" translate="yes" xml:space="preserve">
          <source>The base class for implementing streaming protocols (TCP, Unix sockets, etc).</source>
          <target state="translated">实现流媒体协议(TCP、Unix套接字等)的基类。</target>
        </trans-unit>
        <trans-unit id="720a5bb3a4d291051b191f1d34b8551facac8967" translate="yes" xml:space="preserve">
          <source>The base class for the exceptions that are raised when a key or index used on a mapping or sequence is invalid: &lt;a href=&quot;#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt;. This can be raised directly by &lt;a href=&quot;codecs#codecs.lookup&quot;&gt;&lt;code&gt;codecs.lookup()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当在映射或序列上使用的键或索引无效时引发的异常的基类：&lt;a href=&quot;#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。这可以通过&lt;a href=&quot;codecs#codecs.lookup&quot;&gt; &lt;code&gt;codecs.lookup()&lt;/code&gt; &lt;/a&gt;直接提出。</target>
        </trans-unit>
        <trans-unit id="d91f7435686fb107d68c4bacb73c9970d4f18e58" translate="yes" xml:space="preserve">
          <source>The base class for those built-in exceptions that are raised for various arithmetic errors: &lt;a href=&quot;#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ZeroDivisionError&quot;&gt;&lt;code&gt;ZeroDivisionError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#FloatingPointError&quot;&gt;&lt;code&gt;FloatingPointError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于各种算术错误引发的那些内置异常的基类：&lt;a href=&quot;#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ZeroDivisionError&quot;&gt; &lt;code&gt;ZeroDivisionError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#FloatingPointError&quot;&gt; &lt;code&gt;FloatingPointError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5be1b03a2559b8dbbf5e82b0787d6c7a0613ed82" translate="yes" xml:space="preserve">
          <source>The base class of all &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; exceptions.</source>
          <target state="translated">所有&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;异常的基类。</target>
        </trans-unit>
        <trans-unit id="0d598c1c31072f1d5bb7fce71b965147de8b6233" translate="yes" xml:space="preserve">
          <source>The base class of the other exceptions in this module. It is a subclass of &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此模块中其他异常的基类。它是&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="e9d7127298b4ff6be01bcb830aa1f5c9b7b8e1ea" translate="yes" xml:space="preserve">
          <source>The base exception class. &lt;a href=&quot;#xdrlib.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; has a single public attribute &lt;code&gt;msg&lt;/code&gt; containing the description of the error.</source>
          <target state="translated">基本异常类。&lt;a href=&quot;#xdrlib.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;具有包含错误描述的单个公共属性 &lt;code&gt;msg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="478754849bb693c84213dee13796bc23b118363e" translate="yes" xml:space="preserve">
          <source>The base implementation formats the record to merge the message, arguments, and exception information, if present. It also removes unpickleable items from the record in-place.</source>
          <target state="translated">基本实现将记录格式化,以合并消息、参数和异常信息(如果存在)。它还可以就地从记录中删除不可拾取的项目。</target>
        </trans-unit>
        <trans-unit id="e08426a91a7035e4c2d72c85c9c7b7cd719829df" translate="yes" xml:space="preserve">
          <source>The base implementation uses &lt;code&gt;get()&lt;/code&gt;. You may want to override this method if you want to use timeouts or work with custom queue implementations.</source>
          <target state="translated">基本实现使用 &lt;code&gt;get()&lt;/code&gt; 。如果要使用超时或使用自定义队列实现，则可能要覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="cb9a116b8103bca120218fe5a882926ba73692a3" translate="yes" xml:space="preserve">
          <source>The based class for all other module-specific exceptions.</source>
          <target state="translated">所有其他模块特定异常的基础类。</target>
        </trans-unit>
        <trans-unit id="d4f200fcdf75b7beb6b2c030a2febabba55c0a7d" translate="yes" xml:space="preserve">
          <source>The basic API is a simple wrapper that&amp;rsquo;s intended to make doctest easy to use. It is fairly flexible, and should meet most users&amp;rsquo; needs; however, if you require more fine-grained control over testing, or wish to extend doctest&amp;rsquo;s capabilities, then you should use the advanced API.</source>
          <target state="translated">基本API是一个简单的包装程序，旨在使doctest易于使用。它相当灵活，应该可以满足大多数用户的需求；但是，如果您需要对测试进行更细粒度的控制，或者希望扩展doctest的功能，则应该使用高级API。</target>
        </trans-unit>
        <trans-unit id="c46a98898a854487d370b50e8f5e79d547a5abf6" translate="yes" xml:space="preserve">
          <source>The basic building blocks of unit testing are &lt;em&gt;test cases&lt;/em&gt; &amp;mdash; single scenarios that must be set up and checked for correctness. In &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;, test cases are represented by &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;unittest.TestCase&lt;/code&gt;&lt;/a&gt; instances. To make your own test cases you must write subclasses of &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; or use &lt;a href=&quot;#unittest.FunctionTestCase&quot;&gt;&lt;code&gt;FunctionTestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">单元测试的基本构建模块是&lt;em&gt;测试用例&lt;/em&gt; &amp;mdash;必须设置单个场景并检查其正确性。在&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; 中&lt;/a&gt;，测试用例由&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;unittest.TestCase&lt;/code&gt; &lt;/a&gt;实例表示。要创建自己的测试用例，必须编写&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; 的&lt;/a&gt;子类或使用&lt;a href=&quot;#unittest.FunctionTestCase&quot;&gt; &lt;code&gt;FunctionTestCase&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1631527b4d4b04ac30516c30c03bdc201a159063" translate="yes" xml:space="preserve">
          <source>The basic classes defined by the module, together with their functions, are listed below.</source>
          <target state="translated">该模块定义的基本类及其功能如下。</target>
        </trans-unit>
        <trans-unit id="0621714f64d694606df173391b93313eeac34756" translate="yes" xml:space="preserve">
          <source>The basic data compression module needed to support the &lt;strong&gt;gzip&lt;/strong&gt; file format.</source>
          <target state="translated">支持&lt;strong&gt;gzip&lt;/strong&gt;文件格式所需的基本数据压缩模块。</target>
        </trans-unit>
        <trans-unit id="f3ea23849e09db81b8cf44483296cfa966e4cf09" translate="yes" xml:space="preserve">
          <source>The basic idea behind both modules is to create one or more network &lt;em&gt;channels&lt;/em&gt;, instances of class &lt;a href=&quot;#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asynchat#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt;. Creating the channels adds them to a global map, used by the &lt;a href=&quot;#asyncore.loop&quot;&gt;&lt;code&gt;loop()&lt;/code&gt;&lt;/a&gt; function if you do not provide it with your own &lt;em&gt;map&lt;/em&gt;.</source>
          <target state="translated">这两个模块的基本思想是创建一个或多个网络&lt;em&gt;通道&lt;/em&gt;，即类&lt;a href=&quot;#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asynchat#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; 的&lt;/a&gt;实例。创建通道会将它们添加到全局地图，如果您没有为&lt;em&gt;地图&lt;/em&gt;提供自己的&lt;em&gt;map&lt;/em&gt;，则由&lt;a href=&quot;#asyncore.loop&quot;&gt; &lt;code&gt;loop()&lt;/code&gt; &lt;/a&gt;函数使用。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2ffd84d87aba9b9e8fc01342a423d56d02dd44a" translate="yes" xml:space="preserve">
          <source>The basic idea for &lt;a href=&quot;#module-tkinter.ttk&quot;&gt;&lt;code&gt;tkinter.ttk&lt;/code&gt;&lt;/a&gt; is to separate, to the extent possible, the code implementing a widget&amp;rsquo;s behavior from the code implementing its appearance.</source>
          <target state="translated">&lt;a href=&quot;#module-tkinter.ttk&quot;&gt; &lt;code&gt;tkinter.ttk&lt;/code&gt; &lt;/a&gt;的基本思想是，在可能的情况下，将实现小部件行为的代码与实现其外观的代码分开。</target>
        </trans-unit>
        <trans-unit id="16e9e78405f309044c1b7fe1bffdce4599a86f91" translate="yes" xml:space="preserve">
          <source>The basic principle is that you patch where an object is &lt;em&gt;looked up&lt;/em&gt;, which is not necessarily the same place as where it is defined. A couple of examples will help to clarify this.</source>
          <target state="translated">基本原理是，您修补在其中&lt;em&gt;查找&lt;/em&gt;对象的位置，该对象不一定与定义对象的位置相同。几个例子将有助于阐明这一点。</target>
        </trans-unit>
        <trans-unit id="35a19f280d80a953c16e49e081b424d6cbff98c0" translate="yes" xml:space="preserve">
          <source>The basic type used for binary data read from or written to a file is &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. Other &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; are accepted as method arguments too. Text I/O classes work with &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data.</source>
          <target state="translated">从文件读取或写入文件的二进制数据的基本类型是&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。其他类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;也可以用作方法参数。文本I / O类可用于&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;数据。</target>
        </trans-unit>
        <trans-unit id="232d526053763da166d71f7d5a980e0adc829266" translate="yes" xml:space="preserve">
          <source>The basic type used for binary data read from or written to a file is &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. Other &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt; are accepted as method arguments too. Text I/O classes work with &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; data.</source>
          <target state="translated">从文件读取或写入文件的二进制数据的基本类型是&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。其他类似&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;也可以用作方法参数。文本I / O类可用于&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;数据。</target>
        </trans-unit>
        <trans-unit id="1a0089a139acba0f4ef316c21fe484b7943e9402" translate="yes" xml:space="preserve">
          <source>The behavior is same as &lt;a href=&quot;#urllib.request.HTTPErrorProcessor.http_response&quot;&gt;&lt;code&gt;http_response()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">行为与&lt;a href=&quot;#urllib.request.HTTPErrorProcessor.http_response&quot;&gt; &lt;code&gt;http_response()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="509167a2d22d3e262915b45c8a13aa32c0c6f112" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;a href=&quot;#mailbox.Mailbox.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt; is unlike that of dictionaries, which iterate over keys.</source>
          <target state="translated">&lt;a href=&quot;#mailbox.Mailbox.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;的行为不同于对键进行迭代的字典的行为。</target>
        </trans-unit>
        <trans-unit id="7ed5e3c6e5fccac07bc7e1871b7a1d111d3de3c4" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;a href=&quot;#round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt; for floats can be surprising: for example, &lt;code&gt;round(2.675, 2)&lt;/code&gt; gives &lt;code&gt;2.67&lt;/code&gt; instead of the expected &lt;code&gt;2.68&lt;/code&gt;. This is not a bug: it&amp;rsquo;s a result of the fact that most decimal fractions can&amp;rsquo;t be represented exactly as a float. See &lt;a href=&quot;https://docs.python.org/3.8/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;Floating Point Arithmetic: Issues and Limitations&lt;/a&gt; for more information.</source>
          <target state="translated">float 的&lt;a href=&quot;#round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; &lt;/a&gt;行为可能令人惊讶：例如， &lt;code&gt;round(2.675, 2)&lt;/code&gt; 给出 &lt;code&gt;2.67&lt;/code&gt; 而不是预期的 &lt;code&gt;2.68&lt;/code&gt; 。这不是错误：这是由于大多数十进制小数不能完全表示为浮点数的结果。有关更多信息，请参见&lt;a href=&quot;https://docs.python.org/3.8/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;浮点算法：问题和限制&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63f8382284018272eb13a971d55c56571d63b667" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;a href=&quot;#round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt; for floats can be surprising: for example, &lt;code&gt;round(2.675, 2)&lt;/code&gt; gives &lt;code&gt;2.67&lt;/code&gt; instead of the expected &lt;code&gt;2.68&lt;/code&gt;. This is not a bug: it&amp;rsquo;s a result of the fact that most decimal fractions can&amp;rsquo;t be represented exactly as a float. See &lt;a href=&quot;https://docs.python.org/3.9/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;Floating Point Arithmetic: Issues and Limitations&lt;/a&gt; for more information.</source>
          <target state="translated">float的&lt;a href=&quot;#round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; &lt;/a&gt;行为可能令人惊讶：例如， &lt;code&gt;round(2.675, 2)&lt;/code&gt; 给出 &lt;code&gt;2.67&lt;/code&gt; 而不是预期的 &lt;code&gt;2.68&lt;/code&gt; 。这不是错误：这是由于大多数十进制小数不能精确地表示为浮点数的结果。有关更多信息，请参见&lt;a href=&quot;https://docs.python.org/3.9/tutorial/floatingpoint.html#tut-fp-issues&quot;&gt;浮点算法：问题和限制&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c9031477af7e15d083a487073bb2d0a4eb97e4c9" translate="yes" xml:space="preserve">
          <source>The behavior of Python&amp;rsquo;s comparison operators can be a little surprising where a &lt;code&gt;NaN&lt;/code&gt; is involved. A test for equality where one of the operands is a quiet or signaling &lt;code&gt;NaN&lt;/code&gt; always returns &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; (even when doing &lt;code&gt;Decimal('NaN')==Decimal('NaN')&lt;/code&gt;), while a test for inequality always returns &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;. An attempt to compare two Decimals using any of the &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;gt;=&lt;/code&gt; operators will raise the &lt;a href=&quot;#decimal.InvalidOperation&quot;&gt;&lt;code&gt;InvalidOperation&lt;/code&gt;&lt;/a&gt; signal if either operand is a &lt;code&gt;NaN&lt;/code&gt;, and return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; if this signal is not trapped. Note that the General Decimal Arithmetic specification does not specify the behavior of direct comparisons; these rules for comparisons involving a &lt;code&gt;NaN&lt;/code&gt; were taken from the IEEE 854 standard (see Table 3 in section 5.7). To ensure strict standards-compliance, use the &lt;code&gt;compare()&lt;/code&gt; and &lt;code&gt;compare-signal()&lt;/code&gt; methods instead.</source>
          <target state="translated">涉及 &lt;code&gt;NaN&lt;/code&gt; 的地方，Python比较运算符的行为可能会有些令人惊讶。对于其中一个操作数为安静或发信号 &lt;code&gt;NaN&lt;/code&gt; 相等性测试，总是返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;（即使执行 &lt;code&gt;Decimal('NaN')==Decimal('NaN')&lt;/code&gt; ），而对于不等式的测试也总是返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。如果任何一个操作数为 &lt;code&gt;NaN&lt;/code&gt; ，则尝试使用 &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;gt;=&lt;/code&gt; 运算符比较两个十进制数将引发&lt;a href=&quot;#decimal.InvalidOperation&quot;&gt; &lt;code&gt;InvalidOperation&lt;/code&gt; &lt;/a&gt;信号，并返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;如果没有捕获此信号。请注意，&amp;ldquo;通用十进制算术&amp;rdquo;规范未指定直接比较的行为。这些涉及 &lt;code&gt;NaN&lt;/code&gt; 的比较规则取自IEEE 854标准（请参见5.7节中的表3）。为了确保严格遵守标准，请改用 &lt;code&gt;compare()&lt;/code&gt; 和 &lt;code&gt;compare-signal()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="89a6bf36e0e2f9919f25455cc22845313051bcc0" translate="yes" xml:space="preserve">
          <source>The behavior of a &lt;code&gt;ZoneInfo&lt;/code&gt; file depends on how it was constructed:</source>
          <target state="translated">&lt;code&gt;ZoneInfo&lt;/code&gt; 文件的行为取决于其构造方式：</target>
        </trans-unit>
        <trans-unit id="2cc2a05a47982852d6024377eba4e6d10a25ebe4" translate="yes" xml:space="preserve">
          <source>The behavior of the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is&quot;&gt;&lt;code&gt;is&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is-not&quot;&gt;&lt;code&gt;is not&lt;/code&gt;&lt;/a&gt; operators cannot be customized; also they can be applied to any two objects and never raise an exception.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is&quot;&gt; &lt;code&gt;is&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is-not&quot;&gt; &lt;code&gt;is not&lt;/code&gt; &lt;/a&gt;运算符的行为无法自定义；它们也可以应用于任何两个对象，并且永远不会引发异常。</target>
        </trans-unit>
        <trans-unit id="83e631b5b7132abea66dbccd9fe12d6e92d08ebc" translate="yes" xml:space="preserve">
          <source>The behavior of the &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#is&quot;&gt;&lt;code&gt;is&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#is-not&quot;&gt;&lt;code&gt;is not&lt;/code&gt;&lt;/a&gt; operators cannot be customized; also they can be applied to any two objects and never raise an exception.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#is&quot;&gt; &lt;code&gt;is&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#is-not&quot;&gt; &lt;code&gt;is not&lt;/code&gt; &lt;/a&gt;运算符的行为无法自定义；它们也可以应用于任何两个对象，并且永远不会引发异常。</target>
        </trans-unit>
        <trans-unit id="544260a58eab8deefccf4a61698b8f81198ba13f" translate="yes" xml:space="preserve">
          <source>The behavior of the call is dependent on the value of &lt;em&gt;how&lt;/em&gt;, as follows.</source>
          <target state="translated">调用的行为取决于&lt;em&gt;how&lt;/em&gt;的值，如下所示。</target>
        </trans-unit>
        <trans-unit id="40956b4e017ec60e6e630696961357aedfdf755a" translate="yes" xml:space="preserve">
          <source>The behavior of this function may be overridden by an earlier call to the &lt;a href=&quot;https://docs.python.org/3.8/c-api/file.html#c.PyFile_SetOpenCodeHook&quot;&gt;&lt;code&gt;PyFile_SetOpenCodeHook()&lt;/code&gt;&lt;/a&gt;, however, it should always be considered interchangeable with &lt;code&gt;open(path, 'rb')&lt;/code&gt;. Overriding the behavior is intended for additional validation or preprocessing of the file.</source>
          <target state="translated">可以通过更早调用&lt;a href=&quot;https://docs.python.org/3.8/c-api/file.html#c.PyFile_SetOpenCodeHook&quot;&gt; &lt;code&gt;PyFile_SetOpenCodeHook()&lt;/code&gt; &lt;/a&gt;来覆盖此函数的行为，但是，应始终将其视为与 &lt;code&gt;open(path, 'rb')&lt;/code&gt; 可互换。覆盖行为是为了对文件进行其他验证或预处理。</target>
        </trans-unit>
        <trans-unit id="6d32237fe6c13dd58c30fefde2fa89b66a6a1e1e" translate="yes" xml:space="preserve">
          <source>The behavior of this function may be overridden by an earlier call to the &lt;a href=&quot;https://docs.python.org/3.9/c-api/file.html#c.PyFile_SetOpenCodeHook&quot;&gt;&lt;code&gt;PyFile_SetOpenCodeHook()&lt;/code&gt;&lt;/a&gt;. However, assuming that &lt;code&gt;path&lt;/code&gt; is a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and an absolute path, &lt;code&gt;open_code(path)&lt;/code&gt; should always behave the same as &lt;code&gt;open(path, 'rb')&lt;/code&gt;. Overriding the behavior is intended for additional validation or preprocessing of the file.</source>
          <target state="translated">可以通过更早调用&lt;a href=&quot;https://docs.python.org/3.9/c-api/file.html#c.PyFile_SetOpenCodeHook&quot;&gt; &lt;code&gt;PyFile_SetOpenCodeHook()&lt;/code&gt; &lt;/a&gt;来覆盖此函数的行为。但是，假设 &lt;code&gt;path&lt;/code&gt; 是&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;和绝对路径，则 &lt;code&gt;open_code(path)&lt;/code&gt; 的行为应始终与 &lt;code&gt;open(path, 'rb')&lt;/code&gt; 。覆盖行为是为了对文件进行其他验证或预处理。</target>
        </trans-unit>
        <trans-unit id="b73eb81df2ab1d8f8cce0693e52a357a71025f62" translate="yes" xml:space="preserve">
          <source>The behaviour described in this section applies only to the URL parsing functions. The URL quoting functions use their own rules when producing or consuming byte sequences as detailed in the documentation of the individual URL quoting functions.</source>
          <target state="translated">本节中描述的行为只适用于URL解析函数,URL引用函数在产生或消耗字节序列时使用自己的规则,详见各个URL引用函数的文档。URL引用函数在产生或消耗字节序列时使用自己的规则,详见各个URL引用函数的文档。</target>
        </trans-unit>
        <trans-unit id="870d091adef72b6c80ca5010f416ba0fc8d77382" translate="yes" xml:space="preserve">
          <source>The below classes are used for creating file/directory windows from scratch. These do not emulate the native look-and-feel of the platform.</source>
          <target state="translated">下面的类用于从头开始创建文件/目录窗口。这些类并不模拟平台的原生外观和感觉。</target>
        </trans-unit>
        <trans-unit id="8730e9a7b67874ca6652e03dde7ce57808dbc4ad" translate="yes" xml:space="preserve">
          <source>The below functions when called create a modal, native look-and-feel dialog, wait for the user&amp;rsquo;s selection, then return the selected value(s) or &lt;code&gt;None&lt;/code&gt; to the caller.</source>
          <target state="translated">调用以下函数时，将创建一个模态的本机外观对话框，等待用户选择，然后将所选值或 &lt;code&gt;None&lt;/code&gt; 返回给调用者。</target>
        </trans-unit>
        <trans-unit id="fccb0864af618f1eda4209875389b23fdd17be04" translate="yes" xml:space="preserve">
          <source>The best (no more than &lt;em&gt;n&lt;/em&gt;) matches among the possibilities are returned in a list, sorted by similarity score, most similar first.</source>
          <target state="translated">可能性中的最佳匹配（不超过&lt;em&gt;n个&lt;/em&gt;）以列表形式返回，按相似性得分排序，最相似的为第一。</target>
        </trans-unit>
        <trans-unit id="6e16ef4c7892d882d4fb24850f803bc72293e9c1" translate="yes" xml:space="preserve">
          <source>The binary data encapsulated by the &lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt; instance. The data is provided as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt; &lt;code&gt;Binary&lt;/code&gt; &lt;/a&gt;实例封装的二进制数据。数据作为&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象提供。</target>
        </trans-unit>
        <trans-unit id="4b2c516a69d7acb2c687bf6c7fbf1597a2d16d23" translate="yes" xml:space="preserve">
          <source>The binary format for plist files</source>
          <target state="translated">plist文件的二进制格式</target>
        </trans-unit>
        <trans-unit id="252ee8840198291e490d998e86244d7d8e35b498" translate="yes" xml:space="preserve">
          <source>The binary representation of this address - a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object of the appropriate length (most significant octet first). This is 4 bytes for IPv4 and 16 bytes for IPv6.</source>
          <target state="translated">此地址的二进制表示形式- 适当长度的&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象（最重要的八位字节在前）。IPv4为4个字节，IPv6为16个字节。</target>
        </trans-unit>
        <trans-unit id="0812f781105763b6ad83547e0dd0926227d1acb3" translate="yes" xml:space="preserve">
          <source>The binary sequence of byte values to remove may be any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">要删除的字节值的二进制序列可以是任何&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a5de986a8b76cfa8659f1ade0eb9546eb3442d2f" translate="yes" xml:space="preserve">
          <source>The binary sequence of byte values to remove may be any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;.</source>
          <target state="translated">要删除的字节值的二进制序列可以是任何&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1dd26f9df9ca5078794e7b2c1b2ed799938d4d7" translate="yes" xml:space="preserve">
          <source>The binary sequence of byte values to remove may be any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. See &lt;a href=&quot;#bytes.removeprefix&quot;&gt;&lt;code&gt;removeprefix()&lt;/code&gt;&lt;/a&gt; for a method that will remove a single prefix string rather than all of a set of characters. For example:</source>
          <target state="translated">要删除的字节值的二进制序列可以是任何&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;。请参阅&lt;a href=&quot;#bytes.removeprefix&quot;&gt; &lt;code&gt;removeprefix()&lt;/code&gt; &lt;/a&gt;以获取将删除单个前缀字符串而不是所有字符集的方法。例如：</target>
        </trans-unit>
        <trans-unit id="ab528ebc486418a97f34b71250ce80d6bc25202b" translate="yes" xml:space="preserve">
          <source>The binary sequence of byte values to remove may be any &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. See &lt;a href=&quot;#bytes.removesuffix&quot;&gt;&lt;code&gt;removesuffix()&lt;/code&gt;&lt;/a&gt; for a method that will remove a single suffix string rather than all of a set of characters. For example:</source>
          <target state="translated">要删除的字节值的二进制序列可以是任何&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;。请参见&lt;a href=&quot;#bytes.removesuffix&quot;&gt; &lt;code&gt;removesuffix()&lt;/code&gt; &lt;/a&gt;，该方法将删除单个后缀字符串而不是所有字符集。例如：</target>
        </trans-unit>
        <trans-unit id="79985ad5b74e6b2174133e206b38c0aac43f893a" translate="yes" xml:space="preserve">
          <source>The binary stream API is described in detail in the docs of &lt;a href=&quot;#io.BufferedIOBase&quot;&gt;&lt;code&gt;BufferedIOBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#io.BufferedIOBase&quot;&gt; &lt;code&gt;BufferedIOBase&lt;/code&gt; &lt;/a&gt;的文档中详细描述了二进制流API 。</target>
        </trans-unit>
        <trans-unit id="4bbdb4bdfe9695f4a095f27b2e5074bc83e4388e" translate="yes" xml:space="preserve">
          <source>The bind method from the widget command allows you to watch for certain events and to have a callback function trigger when that event type occurs. The form of the bind method is:</source>
          <target state="translated">小组件命令中的绑定方法允许您观察某些事件,并在该事件类型发生时触发回调函数。绑定方法的形式是</target>
        </trans-unit>
        <trans-unit id="e93fbed83a2a6d08231b63e0601395b4e1d9ac92" translate="yes" xml:space="preserve">
          <source>The bootstrapping process has side effects on both &lt;code&gt;sys.path&lt;/code&gt; and &lt;code&gt;os.environ&lt;/code&gt;. Invoking the command line interface in a subprocess instead allows these side effects to be avoided.</source>
          <target state="translated">引导过程对 &lt;code&gt;sys.path&lt;/code&gt; 和 &lt;code&gt;os.environ&lt;/code&gt; 都有副作用。而是在子进程中调用命令行界面可以避免这些副作用。</target>
        </trans-unit>
        <trans-unit id="f515285eaaa8a5dd687b8c8d9114206f8ad89259" translate="yes" xml:space="preserve">
          <source>The bootstrapping process may install additional modules required by &lt;code&gt;pip&lt;/code&gt;, but other software should not assume those dependencies will always be present by default (as the dependencies may be removed in a future version of &lt;code&gt;pip&lt;/code&gt;).</source>
          <target state="translated">引导过程可能会安装 &lt;code&gt;pip&lt;/code&gt; 所需的其他模块，但其他软件不应假定默认情况下始终存在这些依赖项（因为在以后的 &lt;code&gt;pip&lt;/code&gt; 版本中可能会删除这些依赖项）。</target>
        </trans-unit>
        <trans-unit id="c5d92c927226a7e06bd64aa8058a997143922e20" translate="yes" xml:space="preserve">
          <source>The breakpoint hit count.</source>
          <target state="translated">断点打数。</target>
        </trans-unit>
        <trans-unit id="1cba654c3d7f4efba7391fd33ea1f1150e43af8b" translate="yes" xml:space="preserve">
          <source>The breakpoint number.</source>
          <target state="translated">断点号。</target>
        </trans-unit>
        <trans-unit id="53bf604092d847435ec91583c0ecb4652c552bdb" translate="yes" xml:space="preserve">
          <source>The broadcast address for the network. Packets sent to the broadcast address should be received by every host on the network.</source>
          <target state="translated">网络的广播地址。发送到该广播地址的数据包应被网络上的每个主机接收。</target>
        </trans-unit>
        <trans-unit id="7d40ac1836068b896d22f880fb080c4129bf0cf8" translate="yes" xml:space="preserve">
          <source>The built in configuration would correspond to the following turtle.cfg:</source>
          <target state="translated">内置的配置将对应于以下turtle.cfg。</target>
        </trans-unit>
        <trans-unit id="e7fa923936d6d1b71a2acb45dbdbd4cb369c9d51" translate="yes" xml:space="preserve">
          <source>The built-in &lt;a href=&quot;#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; function is guaranteed to be stable. A sort is stable if it guarantees not to change the relative order of elements that compare equal &amp;mdash; this is helpful for sorting in multiple passes (for example, sort by department, then by salary grade).</source>
          <target state="translated">内置的&lt;a href=&quot;#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;函数保证稳定。如果可以保证不更改比较相等的元素的相对顺序，则排序是稳定的-这有助于多次通过排序（例如，按部门排序，然后按薪级等级排序）。</target>
        </trans-unit>
        <trans-unit id="a0892e50ab43cc568814a6df06313480188876dd" translate="yes" xml:space="preserve">
          <source>The built-in default configuration mimics the appearance and behaviour of the old turtle module in order to retain best possible compatibility with it.</source>
          <target state="translated">内建的默认配置模仿了旧的turtle模块的外观和行为,以便尽可能地保持与它的兼容性。</target>
        </trans-unit>
        <trans-unit id="eb1483a41a7a356efe8918b5b9cc6c72b5b93268" translate="yes" xml:space="preserve">
          <source>The built-in exception classes can be subclassed to define new exceptions; programmers are encouraged to derive new exceptions from the &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class or one of its subclasses, and not from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt;. More information on defining exceptions is available in the Python Tutorial under &lt;a href=&quot;https://docs.python.org/3.8/tutorial/errors.html#tut-userexceptions&quot;&gt;User-defined Exceptions&lt;/a&gt;.</source>
          <target state="translated">内置的异常类可以被子类化以定义新的异常。鼓励程序员从&lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;类或其子类之一而不是&lt;a href=&quot;#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt;派生新的异常。有关定义异常的更多信息，请参见Python教程中的&lt;a href=&quot;https://docs.python.org/3.8/tutorial/errors.html#tut-userexceptions&quot;&gt;用户定义的异常&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="df6d30505531c427957e36648253a107979af802" translate="yes" xml:space="preserve">
          <source>The built-in exception classes can be subclassed to define new exceptions; programmers are encouraged to derive new exceptions from the &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class or one of its subclasses, and not from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt;. More information on defining exceptions is available in the Python Tutorial under &lt;a href=&quot;https://docs.python.org/3.9/tutorial/errors.html#tut-userexceptions&quot;&gt;User-defined Exceptions&lt;/a&gt;.</source>
          <target state="translated">内置的异常类可以被子类化以定义新的异常。鼓励程序员从&lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;类或其子类之一而不是&lt;a href=&quot;#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt;派生新的异常。有关定义异常的更多信息，请参见Python教程中的&lt;a href=&quot;https://docs.python.org/3.9/tutorial/errors.html#tut-userexceptions&quot;&gt;用户定义的异常&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3828a20aa9a305e843887279463a549fc13bad92" translate="yes" xml:space="preserve">
          <source>The built-in exceptions listed below can be generated by the interpreter or built-in functions. Except where mentioned, they have an &amp;ldquo;associated value&amp;rdquo; indicating the detailed cause of the error. This may be a string or a tuple of several items of information (e.g., an error code and a string explaining the code). The associated value is usually passed as arguments to the exception class&amp;rsquo;s constructor.</source>
          <target state="translated">下面列出的内置异常可以由解释器或内置函数生成。除非另有说明，否则它们具有&amp;ldquo;关联值&amp;rdquo;，指示错误的详细原因。这可以是字符串或多个信息项的元组（例如，错误代码和解释该代码的字符串）。通常将关联的值作为参数传递给异常类的构造函数。</target>
        </trans-unit>
        <trans-unit id="ce16b2d882c9465a0733bec038b7dbc1af59c9ba" translate="yes" xml:space="preserve">
          <source>The built-in function &lt;a href=&quot;functions#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt; invokes the online help system in the interactive interpreter, which uses &lt;a href=&quot;#module-pydoc&quot;&gt;&lt;code&gt;pydoc&lt;/code&gt;&lt;/a&gt; to generate its documentation as text on the console. The same text documentation can also be viewed from outside the Python interpreter by running &lt;strong&gt;pydoc&lt;/strong&gt; as a script at the operating system&amp;rsquo;s command prompt. For example, running</source>
          <target state="translated">内置函数&lt;a href=&quot;functions#help&quot;&gt; &lt;code&gt;help()&lt;/code&gt; &lt;/a&gt;在交互式解释器中调用联机帮助系统，该系统使用&lt;a href=&quot;#module-pydoc&quot;&gt; &lt;code&gt;pydoc&lt;/code&gt; &lt;/a&gt;在控制台上以文本形式生成其文档。通过在操作系统的命令提示符处将&lt;strong&gt;pydoc&lt;/strong&gt;作为脚本运行，也可以从Python解释器外部查看相同的文本文档。例如，跑步</target>
        </trans-unit>
        <trans-unit id="2032bd3ab7af47f02c71e038cf4e4ffa2d3f7fc7" translate="yes" xml:space="preserve">
          <source>The built-in functions &lt;a href=&quot;#globals&quot;&gt;&lt;code&gt;globals()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locals&quot;&gt;&lt;code&gt;locals()&lt;/code&gt;&lt;/a&gt; return the current global and local dictionary, respectively, which may be useful to pass around for use as the second and third argument to &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">内置函数&lt;a href=&quot;#globals&quot;&gt; &lt;code&gt;globals()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#locals&quot;&gt; &lt;code&gt;locals()&lt;/code&gt; 分别&lt;/a&gt;返回当前的全局字典和局部字典，这对于传递给&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;的第二个和第三个参数可能很有用。</target>
        </trans-unit>
        <trans-unit id="ad5e8010d0807348a7e3e895536079ec4ac5755b" translate="yes" xml:space="preserve">
          <source>The built-in string class provides the ability to do complex variable substitutions and value formatting via the &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; method described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3101&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3101&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; class in the &lt;a href=&quot;#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; module allows you to create and customize your own string formatting behaviors using the same implementation as the built-in &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">内置的字符串类提供了通过&lt;a href=&quot;https://www.python.org/dev/peps/pep-3101&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3101中&lt;/strong&gt;&lt;/a&gt;描述的&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;方法进行复杂的变量替换和值格式化的功能。&lt;a href=&quot;#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;模块中的&lt;a href=&quot;#string.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;类允许您使用与内置&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;方法相同的实现来创建和自定义自己的字符串格式设置行为。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afc06e18bc2379dac4ffc9d5696c4410f8337b35" translate="yes" xml:space="preserve">
          <source>The builtin functions &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions#issubclass&quot;&gt;&lt;code&gt;issubclass()&lt;/code&gt;&lt;/a&gt; do not accept &lt;code&gt;GenericAlias&lt;/code&gt; types for their second argument:</source>
          <target state="translated">内置函数&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;functions#issubclass&quot;&gt; &lt;code&gt;issubclass()&lt;/code&gt; &lt;/a&gt;的第二个参数不接受 &lt;code&gt;GenericAlias&lt;/code&gt; 类型：</target>
        </trans-unit>
        <trans-unit id="7779d62430e6d828e7796b70c889aebdd5d5b2a7" translate="yes" xml:space="preserve">
          <source>The bytearray version of this method does &lt;em&gt;not&lt;/em&gt; operate in place - it always produces a new object, even if no changes were made.</source>
          <target state="translated">此方法的字节数组版本&lt;em&gt;未&lt;/em&gt;就地操作-即使没有进行任何更改，它始终会产生一个新对象。</target>
        </trans-unit>
        <trans-unit id="825f32039ec2b8c6f1ad7632fe9653dd855a0a80" translate="yes" xml:space="preserve">
          <source>The bytecode analysis API allows pieces of Python code to be wrapped in a &lt;a href=&quot;#dis.Bytecode&quot;&gt;&lt;code&gt;Bytecode&lt;/code&gt;&lt;/a&gt; object that provides easy access to details of the compiled code.</source>
          <target state="translated">字节码分析API允许将Python代码片段包装在&lt;a href=&quot;#dis.Bytecode&quot;&gt; &lt;code&gt;Bytecode&lt;/code&gt; &lt;/a&gt;对象中，该对象可轻松访问已编译代码的详细信息。</target>
        </trans-unit>
        <trans-unit id="f4e72ff3f77625381d6ebb85da38770f77d7d8d2" translate="yes" xml:space="preserve">
          <source>The bytes contained in &lt;em&gt;fp&lt;/em&gt; must be formatted as a block of &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; (or, if &lt;code&gt;utf8&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt;) style headers and header continuation lines, optionally preceded by an envelope header. The header block is terminated either by the end of the data or by a blank line. Following the header block is the body of the message (which may contain MIME-encoded subparts, including subparts with a &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; of &lt;code&gt;8bit&lt;/code&gt;).</source>
          <target state="translated">&lt;em&gt;fp中&lt;/em&gt;包含的字节必须格式化为&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;（或者，如果 &lt;code&gt;utf8&lt;/code&gt; 为 &lt;code&gt;True&lt;/code&gt; ，则&lt;a href=&quot;https://tools.ietf.org/html/rfc6532.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 6532&lt;/strong&gt;&lt;/a&gt;）样式的标头和标头延续行的块，可以选择在其前加上信封标头。标题块以数据结尾或空行结尾。标头块之后是消息的正文（可能包含MIME编码的子部分，包括&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;为 &lt;code&gt;8bit&lt;/code&gt; 的子部分）。</target>
        </trans-unit>
        <trans-unit id="72979803b3b76ceaedcd3e763678e9c5bdfe19e9" translate="yes" xml:space="preserve">
          <source>The bytes which represent the bytecode version number. If you need help with loading/writing bytecode then consider &lt;a href=&quot;#importlib.abc.SourceLoader&quot;&gt;&lt;code&gt;importlib.abc.SourceLoader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">代表字节码版本号的字节。如果您需要有关加载/编写字节码的帮助，请考虑&lt;a href=&quot;#importlib.abc.SourceLoader&quot;&gt; &lt;code&gt;importlib.abc.SourceLoader&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63b8460a5fd05daeaaaaeca07ed037cc843d40ae" translate="yes" xml:space="preserve">
          <source>The cache (or part of it) can be cleared manually if a rescan of &lt;a href=&quot;sys#sys.path_hooks&quot;&gt;&lt;code&gt;sys.path_hooks&lt;/code&gt;&lt;/a&gt; is necessary.</source>
          <target state="translated">如果需要重新扫描&lt;a href=&quot;sys#sys.path_hooks&quot;&gt; &lt;code&gt;sys.path_hooks&lt;/code&gt; ,&lt;/a&gt;则可以手动清除缓存（或缓存的一部分）。</target>
        </trans-unit>
        <trans-unit id="ed9c68f517e26b2e6a3625184bdd623a5e8c02e6" translate="yes" xml:space="preserve">
          <source>The caching feature of &lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt; has been disabled until someone finds the time to hack proper processing of Expiration time headers.</source>
          <target state="translated">除非有人找到时间来适当处理Expiration时间标头，&lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; &lt;/a&gt;的缓存功能已被禁用。</target>
        </trans-unit>
        <trans-unit id="4c502152227f3ef8521b4fb7861c4b965c780d96" translate="yes" xml:space="preserve">
          <source>The calculated size of the struct (and hence of the bytes object produced by the &lt;a href=&quot;#struct.pack&quot;&gt;&lt;code&gt;pack()&lt;/code&gt;&lt;/a&gt; method) corresponding to &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对应于&lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt;的结构的计算大小（以及由此&lt;a href=&quot;#struct.pack&quot;&gt; &lt;code&gt;pack()&lt;/code&gt; &lt;/a&gt;方法产生的bytes对象的大小）。</target>
        </trans-unit>
        <trans-unit id="c83bb87cd08de64e758cd798a710959973f92aa3" translate="yes" xml:space="preserve">
          <source>The callback function will be called with three arguments; the first being the &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;, the second is a string that represents the server name that the client is intending to communicate (or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if the TLS Client Hello does not contain a server name) and the third argument is the original &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt;. The server name argument is text. For internationalized domain name, the server name is an IDN A-label (&lt;code&gt;&quot;xn--pythn-mua.org&quot;&lt;/code&gt;).</source>
          <target state="translated">回调函数将使用三个参数来调用。第一个是&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;，第二个是表示客户端打算通信的服务器名称的字符串（如果TLS客户端Hello不包含服务器名称，则为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;），第三个参数是原始&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;。服务器名称参数是文本。对于国际化域名，服务器名称是IDN A标签（ &lt;code&gt;&quot;xn--pythn-mua.org&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cd8e655e9eed9b74bde977375823ab681334e73c" translate="yes" xml:space="preserve">
          <source>The callback will be invoked by &lt;em&gt;loop&lt;/em&gt;, along with other queued callbacks and runnable coroutines of that event loop. Unlike signal handlers registered using &lt;a href=&quot;signal#signal.signal&quot;&gt;&lt;code&gt;signal.signal()&lt;/code&gt;&lt;/a&gt;, a callback registered with this function is allowed to interact with the event loop.</source>
          <target state="translated">该回调将由&lt;em&gt;loop&lt;/em&gt;以及该事件循环的其他排队回调和可运行协程一起调用。与使用&lt;a href=&quot;signal#signal.signal&quot;&gt; &lt;code&gt;signal.signal()&lt;/code&gt; &lt;/a&gt;注册的信号处理程序不同，允许使用此函数注册的回调与事件循环进行交互。</target>
        </trans-unit>
        <trans-unit id="22bd53399975bb33fc06872aa0715a547b88ac9e" translate="yes" xml:space="preserve">
          <source>The caller may release or mutate &lt;em&gt;b&lt;/em&gt; after this method returns, so the implementation should only access &lt;em&gt;b&lt;/em&gt; during the method call.</source>
          <target state="translated">调用者可以在此方法返回之后释放&lt;em&gt;b&lt;/em&gt;或对其进行突变，因此，实现应仅在方法调用期间访问&lt;em&gt;b&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="84f728122cbc2164626d67a5c5bfe8cd2b6d9334" translate="yes" xml:space="preserve">
          <source>The calltip consists of the function&amp;rsquo;s signature and docstring up to the latter&amp;rsquo;s first blank line or the fifth non-blank line. (Some builtin functions lack an accessible signature.) A &amp;lsquo;/&amp;rsquo; or &amp;lsquo;*&amp;rsquo; in the signature indicates that the preceding or following arguments are passed by position or name (keyword) only. Details are subject to change.</source>
          <target state="translated">调用提示由函数的签名和docstring组成，直至该函数的第一行空白或第五行非空白行。（某些内置函数缺少可访问的签名。）签名中的'/'或'*'表示前面或后面的参数仅按位置或名称（关键字）传递。细节可能随时更改。</target>
        </trans-unit>
        <trans-unit id="eff6d403c84e9dd6cfb7f05890938d3f3448560b" translate="yes" xml:space="preserve">
          <source>The canonical form of the filename which contains the frame.</source>
          <target state="translated">包含框架的文件名的规范形式。</target>
        </trans-unit>
        <trans-unit id="c8533238eda8a62e9128958e4776c77a39312314" translate="yes" xml:space="preserve">
          <source>The canonical name of this HMAC, always lowercase, e.g. &lt;code&gt;hmac-md5&lt;/code&gt;.</source>
          <target state="translated">此HMAC的规范名称，始终为小写，例如 &lt;code&gt;hmac-md5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff8c6491e39ff96156d9120d3205f0365e5d01cf" translate="yes" xml:space="preserve">
          <source>The canonical name of this hash, always lowercase and always suitable as a parameter to &lt;a href=&quot;#hashlib.new&quot;&gt;&lt;code&gt;new()&lt;/code&gt;&lt;/a&gt; to create another hash of this type.</source>
          <target state="translated">此哈希的规范名称，始终为小写字母，并且始终适合作为&lt;a href=&quot;#hashlib.new&quot;&gt; &lt;code&gt;new()&lt;/code&gt; &lt;/a&gt;的参数来创建此类型的另一个哈希。</target>
        </trans-unit>
        <trans-unit id="86383e1461d35f27675e6567047706ab486a7820" translate="yes" xml:space="preserve">
          <source>The casefolding algorithm is described in section 3.13 of the Unicode Standard.</source>
          <target state="translated">案例折叠算法在Unicode标准的3.13节中有描述。</target>
        </trans-unit>
        <trans-unit id="09bc2e18042eda7d06b3a19559cc299378be13d8" translate="yes" xml:space="preserve">
          <source>The ceiling for the process&amp;rsquo;s nice level (calculated as 20 - rlim_cur).</source>
          <target state="translated">进程的良好级别的上限（计算为20-rlim_cur）。</target>
        </trans-unit>
        <trans-unit id="8ce6ab2c12963a27ddd741a54afdd9198d059d94" translate="yes" xml:space="preserve">
          <source>The ceiling of the real-time priority.</source>
          <target state="translated">实时优先权的上限。</target>
        </trans-unit>
        <trans-unit id="639203ac4f7750e330cf2cd16c6fd78a1b956598" translate="yes" xml:space="preserve">
          <source>The central class in the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package is the &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class, imported from the &lt;a href=&quot;#module-email.message&quot;&gt;&lt;code&gt;email.message&lt;/code&gt;&lt;/a&gt; module. It is the base class for the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; object model. &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; provides the core functionality for setting and querying header fields, for accessing message bodies, and for creating or modifying structured messages.</source>
          <target state="translated">&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;包中的中心类是从&lt;a href=&quot;#module-email.message&quot;&gt; &lt;code&gt;email.message&lt;/code&gt; &lt;/a&gt;模块导入的&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;类。它是&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;对象模型的基类。&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;提供了用于设置和查询标题字段，访问消息正文以及创建或修改结构化消息的核心功能。</target>
        </trans-unit>
        <trans-unit id="4e36386588c7d08f4857bc3785fb1d4d5c17d9fa" translate="yes" xml:space="preserve">
          <source>The central component of the package is an &amp;ldquo;object model&amp;rdquo; that represents email messages. An application interacts with the package primarily through the object model interface defined in the &lt;a href=&quot;email.message#module-email.message&quot;&gt;&lt;code&gt;message&lt;/code&gt;&lt;/a&gt; sub-module. The application can use this API to ask questions about an existing email, to construct a new email, or to add or remove email subcomponents that themselves use the same object model interface. That is, following the nature of email messages and their MIME subcomponents, the email object model is a tree structure of objects that all provide the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">软件包的中心组件是代表电子邮件的&amp;ldquo;对象模型&amp;rdquo;。应用程序主要通过&lt;a href=&quot;email.message#module-email.message&quot;&gt; &lt;code&gt;message&lt;/code&gt; &lt;/a&gt;子模块中定义的对象模型接口与包进行交互。应用程序可以使用此API来询问有关现有电子邮件的问题，构建新电子邮件，或者添加或删除本身使用相同对象模型接口的电子邮件子组件。也就是说，遵循电子邮件及其MIME子组件的性质，电子邮件对象模型是所有提供&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt; API 的对象的树状结构。</target>
        </trans-unit>
        <trans-unit id="b8ad1ef8b31c9d3d4272c53dd49dd5587dde6ea9" translate="yes" xml:space="preserve">
          <source>The channel continues to collect data forever</source>
          <target state="translated">渠道继续收集数据,直到永远</target>
        </trans-unit>
        <trans-unit id="990b5a1da94f1bd10326a2f8f9f4f2d725871e25" translate="yes" xml:space="preserve">
          <source>The character conventionally used by the operating system to separate search path components (as in &lt;code id=&quot;index-44&quot;&gt;PATH&lt;/code&gt;), such as &lt;code&gt;':'&lt;/code&gt; for POSIX or &lt;code&gt;';'&lt;/code&gt; for Windows. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">操作系统通常用于分隔搜索路径组件（如 &lt;code id=&quot;index-44&quot;&gt;PATH&lt;/code&gt; ）的字符，例如POSIX的 &lt;code&gt;':'&lt;/code&gt; 或 &lt;code&gt;';'&lt;/code&gt; 对于Windows。也可以通过&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; 获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="716210fcc9aa0e92a7aeddcad3baa26c435be48c" translate="yes" xml:space="preserve">
          <source>The character conventionally used by the operating system to separate search path components (as in &lt;code id=&quot;index-46&quot;&gt;PATH&lt;/code&gt;), such as &lt;code&gt;':'&lt;/code&gt; for POSIX or &lt;code&gt;';'&lt;/code&gt; for Windows. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">操作系统通常用于分隔搜索路径组件（如 &lt;code id=&quot;index-46&quot;&gt;PATH&lt;/code&gt; ）的字符，例如POSIX的 &lt;code&gt;':'&lt;/code&gt; 或 &lt;code&gt;';'&lt;/code&gt; 对于Windows。也可以通过&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; 获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3d99da8fe6d18c618150889ebc5804acc1de27a2" translate="yes" xml:space="preserve">
          <source>The character encoding is platform-dependent. Non-Windows platforms use the locale encoding (see &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt;&lt;code&gt;locale.getpreferredencoding()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">字符编码取决于平台。非Windows平台使用语言环境编码（请参阅&lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt; &lt;code&gt;locale.getpreferredencoding()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bfc93a686eda7c49ec3507891da13ae0c98e36c9" translate="yes" xml:space="preserve">
          <source>The character set, &lt;a href=&quot;string#string.ascii_letters&quot;&gt;&lt;code&gt;string.ascii_letters&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;string#string.digits&quot;&gt;&lt;code&gt;string.digits&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;!#$%&amp;amp;'*+-.^_`|~:&lt;/code&gt; denote the set of valid characters allowed by this module in Cookie name (as &lt;a href=&quot;#http.cookies.Morsel.key&quot;&gt;&lt;code&gt;key&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">字符集&lt;a href=&quot;string#string.ascii_letters&quot;&gt; &lt;code&gt;string.ascii_letters&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;string#string.digits&quot;&gt; &lt;code&gt;string.digits&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;!#$%&amp;amp;'*+-.^_`|~:&lt;/code&gt; _` |〜：表示此模块在Cookie名称（作为&lt;a href=&quot;#http.cookies.Morsel.key&quot;&gt; &lt;code&gt;key&lt;/code&gt; &lt;/a&gt;）中允许的有效字符集。</target>
        </trans-unit>
        <trans-unit id="f3c8562e2db6ea59a857d6692fcd05b5595aad09" translate="yes" xml:space="preserve">
          <source>The character used by the operating system to separate pathname components. This is &lt;code&gt;'/'&lt;/code&gt; for POSIX and &lt;code&gt;'\\'&lt;/code&gt; for Windows. Note that knowing this is not sufficient to be able to parse or concatenate pathnames &amp;mdash; use &lt;a href=&quot;os.path#os.path.split&quot;&gt;&lt;code&gt;os.path.split()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os.path#os.path.join&quot;&gt;&lt;code&gt;os.path.join()&lt;/code&gt;&lt;/a&gt; &amp;mdash; but it is occasionally useful. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">操作系统用来分隔路径名组件的字符。对于POSIX，这是 &lt;code&gt;'/'&lt;/code&gt; ；对于Windows，这是&amp;ldquo; &lt;code&gt;'\\'&lt;/code&gt; 。请注意，仅了解这一点不足以解析或连接路径名（使用&lt;a href=&quot;os.path#os.path.split&quot;&gt; &lt;code&gt;os.path.split()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;os.path#os.path.join&quot;&gt; &lt;code&gt;os.path.join()&lt;/code&gt; )&lt;/a&gt;，但有时它很有用。也可以通过&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; 获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="309bb84393dbc6c91d360c133c257980087f7321" translate="yes" xml:space="preserve">
          <source>The character used to draw separator lines under the help-message headers. If empty, no ruler line is drawn. It defaults to &lt;code&gt;'='&lt;/code&gt;.</source>
          <target state="translated">用于在帮助消息标题下绘制分隔线的字符。如果为空，则不绘制标尺线。默认为 &lt;code&gt;'='&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ea51325acbd5404b45bf3a9645468bed81b871e" translate="yes" xml:space="preserve">
          <source>The character which separates the base filename from the extension; for example, the &lt;code&gt;'.'&lt;/code&gt; in &lt;code&gt;os.py&lt;/code&gt;. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将基本文件名与扩展名分开的字符；例如， &lt;code&gt;'.'&lt;/code&gt; 在 &lt;code&gt;os.py&lt;/code&gt; 中。也可以通过&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; 获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f625dcb310956d459da71c49e55907d5aaf7c87f" translate="yes" xml:space="preserve">
          <source>The child process is not killed if the timeout expires, so in order to cleanup properly a well-behaved application should kill the child process and finish communication:</source>
          <target state="translated">如果超时了,子进程不会被杀死,所以为了正确清理,一个行为良好的应用程序应该杀死子进程并完成通信。</target>
        </trans-unit>
        <trans-unit id="6548909ff9d18497967c143ac6e0f73e274ac502" translate="yes" xml:space="preserve">
          <source>The child return code, set by &lt;a href=&quot;#subprocess.Popen.poll&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#subprocess.Popen.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; (and indirectly by &lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt;&lt;code&gt;communicate()&lt;/code&gt;&lt;/a&gt;). A &lt;code&gt;None&lt;/code&gt; value indicates that the process hasn&amp;rsquo;t terminated yet.</source>
          <target state="translated">子级返回代码，由&lt;a href=&quot;#subprocess.Popen.poll&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#subprocess.Popen.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; 设置&lt;/a&gt;（并由&lt;a href=&quot;#subprocess.Popen.communicate&quot;&gt; &lt;code&gt;communicate()&lt;/code&gt; &lt;/a&gt;间接设置）。一个 &lt;code&gt;None&lt;/code&gt; 值表示进程尚未结束。</target>
        </trans-unit>
        <trans-unit id="249b5d2d494ab6f926a71d2362ead22383753022" translate="yes" xml:space="preserve">
          <source>The child&amp;rsquo;s exit code. This will be &lt;code&gt;None&lt;/code&gt; if the process has not yet terminated. A negative value &lt;em&gt;-N&lt;/em&gt; indicates that the child was terminated by signal &lt;em&gt;N&lt;/em&gt;.</source>
          <target state="translated">孩子的退出代码。如果进程尚未终止，则将为&amp;ldquo; &lt;code&gt;None&lt;/code&gt; &amp;rdquo;。负值&lt;em&gt;-N&lt;/em&gt;表示孩子被信号&lt;em&gt;N&lt;/em&gt;终止。</target>
        </trans-unit>
        <trans-unit id="9af0a298b9377133612268a925c4f34815a13348" translate="yes" xml:space="preserve">
          <source>The children are yielded in arbitrary order, and the special entries &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt; are not included. If a file is removed from or added to the directory after creating the iterator, whether an path object for that file be included is unspecified.</source>
          <target state="translated">子级以任意顺序产生，特殊条目为 &lt;code&gt;'.'&lt;/code&gt; 和 &lt;code&gt;'..'&lt;/code&gt; 不包括在内。如果在创建迭代器后将文件从目录中删除或添加到目录中，则不确定是否包含该文件的路径对象。</target>
        </trans-unit>
        <trans-unit id="0c7e9fdca9f228eaff4bb459dac6747ec6ddefb6" translate="yes" xml:space="preserve">
          <source>The choice of which database package will be used (such as &lt;a href=&quot;dbm#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;dbm#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt;) depends on which interface is available. Therefore it is not safe to open the database directly using &lt;a href=&quot;dbm#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt;. The database is also (unfortunately) subject to the limitations of &lt;a href=&quot;dbm#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt;, if it is used &amp;mdash; this means that (the pickled representation of) the objects stored in the database should be fairly small, and in rare cases key collisions may cause the database to refuse updates.</source>
          <target state="translated">使用哪种数据库包（例如&lt;a href=&quot;dbm#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;dbm#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt;）的选择取决于哪个接口可用。因此，直接使用&lt;a href=&quot;dbm#module-dbm&quot;&gt; &lt;code&gt;dbm&lt;/code&gt; &lt;/a&gt;打开数据库是不安全的。如果使用数据库，则数据库也（不幸地）受到&lt;a href=&quot;dbm#module-dbm&quot;&gt; &lt;code&gt;dbm&lt;/code&gt; &lt;/a&gt;的限制-这意味着存储在数据库中的对象（的腌制形式）应该很小，在极少数情况下，键冲突可能导致数据库崩溃。拒绝更新。</target>
        </trans-unit>
        <trans-unit id="641b5aed9850d067945c10edf2925a45f43bfb8b" translate="yes" xml:space="preserve">
          <source>The chronological synopsis of the underlying operation is as follows:</source>
          <target state="translated">按时间顺序排列的基本行动概要如下:</target>
        </trans-unit>
        <trans-unit id="d5e64182f2236479d6838cc99f8595dca788e504" translate="yes" xml:space="preserve">
          <source>The class &lt;a href=&quot;#msilib.CAB&quot;&gt;&lt;code&gt;CAB&lt;/code&gt;&lt;/a&gt; represents a CAB file. During MSI construction, files will be added simultaneously to the &lt;code&gt;Files&lt;/code&gt; table, and to a CAB file. Then, when all files have been added, the CAB file can be written, then added to the MSI file.</source>
          <target state="translated">&lt;a href=&quot;#msilib.CAB&quot;&gt; &lt;code&gt;CAB&lt;/code&gt; &lt;/a&gt;类代表一个CAB文件。在MSI构建期间，文件将同时添加到&amp;ldquo; &lt;code&gt;Files&lt;/code&gt; 表和CAB文件中。然后，在添加完所有文件后，可以写入CAB文件，然后将其添加到MSI文件中。</target>
        </trans-unit>
        <trans-unit id="4fc389f3d71edbec0527ca0760a3cd2d7c5166d0" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;Color&lt;/code&gt; is an &lt;em&gt;enumeration&lt;/em&gt; (or &lt;em&gt;enum&lt;/em&gt;)</source>
          <target state="translated">&lt;code&gt;Color&lt;/code&gt; 类是一个&lt;em&gt;枚举&lt;/em&gt;（或&lt;em&gt;enum&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="f9d013c76081da9c5c270257f29700914efbf655" translate="yes" xml:space="preserve">
          <source>The class attribute &lt;code&gt;C.z&lt;/code&gt; will be &lt;code&gt;10&lt;/code&gt;, the class attribute &lt;code&gt;C.t&lt;/code&gt; will be &lt;code&gt;20&lt;/code&gt;, and the class attributes &lt;code&gt;C.x&lt;/code&gt; and &lt;code&gt;C.y&lt;/code&gt; will not be set.</source>
          <target state="translated">类属性 &lt;code&gt;C.z&lt;/code&gt; 将为 &lt;code&gt;10&lt;/code&gt; ，类属性 &lt;code&gt;C.t&lt;/code&gt; 将为 &lt;code&gt;20&lt;/code&gt; ，并且将不设置类属性 &lt;code&gt;C.x&lt;/code&gt; 和 &lt;code&gt;C.y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35421f70e067873d5f1e6c9a350a9cd53c04e5f2" translate="yes" xml:space="preserve">
          <source>The class can be used to simulate nested scopes and is useful in templating.</source>
          <target state="translated">该类可用于模拟嵌套的作用域,在模板制作中非常有用。</target>
        </trans-unit>
        <trans-unit id="36961ba5b73fc5b81b86c2c4a82a8030e61ec555" translate="yes" xml:space="preserve">
          <source>The class for reading and writing ZIP files. See section &lt;a href=&quot;#zipfile-objects&quot;&gt;ZipFile Objects&lt;/a&gt; for constructor details.</source>
          <target state="translated">用于读取和写入ZIP文件的类。有关构造函数的详细信息，请参见&amp;ldquo; &lt;a href=&quot;#zipfile-objects&quot;&gt;ZipFile对象&amp;rdquo;&lt;/a&gt;一节。</target>
        </trans-unit>
        <trans-unit id="0307e59dd4313119463d297b8087437a252b55eb" translate="yes" xml:space="preserve">
          <source>The class has one attribute:</source>
          <target state="translated">该类有一个属性。</target>
        </trans-unit>
        <trans-unit id="d13bab7dac8afe400af05e5ac5c428448bda17c6" translate="yes" xml:space="preserve">
          <source>The class hierarchy for built-in exceptions is:</source>
          <target state="translated">内置异常的类层次结构是:。</target>
        </trans-unit>
        <trans-unit id="f62ddfd2faaa7f84859ae34b4dabf08d739e4525" translate="yes" xml:space="preserve">
          <source>The class hierarchy looks complicated, but in actual practice, application programmers almost always refer to the classes at the very bottom of the hierarchy.</source>
          <target state="translated">类的层次结构看起来很复杂,但在实际操作中,应用程序员几乎都是指层次结构最底层的类。</target>
        </trans-unit>
        <trans-unit id="11acc8f9993621da6ab27b43e0137b38b7b7a4a1" translate="yes" xml:space="preserve">
          <source>The class implementing primitive lock objects. Once a thread has acquired a lock, subsequent attempts to acquire it block, until it is released; any thread may release it.</source>
          <target state="translated">实现原始锁对象的类。一旦一个线程获得了一个锁,后续对它的获取尝试就会阻塞,直到它被释放;任何线程都可以释放它。</target>
        </trans-unit>
        <trans-unit id="ef66003d51e216bb78a2d8467a0936166bacf799" translate="yes" xml:space="preserve">
          <source>The class is designed to easily support parallel processing of the nodes as they become ready. For instance:</source>
          <target state="translated">该类的设计是为了在节点准备好后,轻松支持节点的并行处理。例如:</target>
        </trans-unit>
        <trans-unit id="97d60cfb78fc29a2188c1e8e530bba513612e7fc" translate="yes" xml:space="preserve">
          <source>The class must define one of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt;. In addition, the class should supply an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">的类必须定义之一&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt; &lt;code&gt;__gt__()&lt;/code&gt; &lt;/a&gt;，或&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt;。另外，该类应提供&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="a862b9e810d8086555b97234b47771d59ab40bb0" translate="yes" xml:space="preserve">
          <source>The class must define one of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt;. In addition, the class should supply an &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">的类必须定义之一&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__gt__&quot;&gt; &lt;code&gt;__gt__()&lt;/code&gt; &lt;/a&gt;，或&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt;。另外，该类应提供&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="a554b687dbf11ba71cc8de41c11ea71e511af98b" translate="yes" xml:space="preserve">
          <source>The class of the original traceback.</source>
          <target state="translated">原始回溯的类。</target>
        </trans-unit>
        <trans-unit id="6f41a7aa24987af381eb3cfdc36177bde5d48ab8" translate="yes" xml:space="preserve">
          <source>The class of the result returned by &lt;a href=&quot;#multiprocessing.pool.Pool.apply_async&quot;&gt;&lt;code&gt;Pool.apply_async()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.pool.Pool.map_async&quot;&gt;&lt;code&gt;Pool.map_async()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#multiprocessing.pool.Pool.apply_async&quot;&gt; &lt;code&gt;Pool.apply_async()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#multiprocessing.pool.Pool.map_async&quot;&gt; &lt;code&gt;Pool.map_async()&lt;/code&gt; &lt;/a&gt;返回的结果的类。</target>
        </trans-unit>
        <trans-unit id="f996acfc2842340ff19f3be54d9a7bbdc048eb8b" translate="yes" xml:space="preserve">
          <source>The class provides the following concrete implementations of the abstract methods of &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">该类提供&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;的抽象方法的以下具体实现：</target>
        </trans-unit>
        <trans-unit id="5dccf24c2a64fd1d1642a87c5b4ceefbc8b4548b" translate="yes" xml:space="preserve">
          <source>The class setting can be overridden in individual test methods by assigning an instance attribute, self.longMessage, to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; before calling the assert methods.</source>
          <target state="translated">通过在调用assert方法之前将实例属性self.longMessage分配给 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; ，可以在各个测试方法中覆盖类设置。</target>
        </trans-unit>
        <trans-unit id="4fb7f174a74b65f3dd94a096df16ea30953a0068" translate="yes" xml:space="preserve">
          <source>The class setting gets reset before each test call.</source>
          <target state="translated">在每次测试调用之前,类设置会被重置。</target>
        </trans-unit>
        <trans-unit id="9f589d651376efd47cd3c71b4a534513e314e255" translate="yes" xml:space="preserve">
          <source>The class to which a class instance belongs.</source>
          <target state="translated">类实例所属的类。</target>
        </trans-unit>
        <trans-unit id="355cb42d141ca89adac71b050c3ab2434b32b6ee" translate="yes" xml:space="preserve">
          <source>The class used to represent an address group. The general form of an address group is:</source>
          <target state="translated">用于表示地址组的类。地址组的一般形式是:</target>
        </trans-unit>
        <trans-unit id="e4a0b7dcb2051eb55138851ecdd24023ca364443" translate="yes" xml:space="preserve">
          <source>The class used to represent an email address. The general form of an address is:</source>
          <target state="translated">用于表示电子邮件地址的类。地址的一般形式是:</target>
        </trans-unit>
        <trans-unit id="bfa706500f9a8aaf4d9b36f7e8cf2f4edccd139d" translate="yes" xml:space="preserve">
          <source>The class which implements the sequence behavior provided by the module is available for subclassing as well:</source>
          <target state="translated">实现模块提供的序列行为的类也可以进行子类化。</target>
        </trans-unit>
        <trans-unit id="aae6ed8b229fce1c1f5a84dd0061e129c39af6d2" translate="yes" xml:space="preserve">
          <source>The class will however, run the CGI script, instead of serving it as a file, if it guesses it to be a CGI script. Only directory-based CGI are used &amp;mdash; the other common server configuration is to treat special extensions as denoting CGI scripts.</source>
          <target state="translated">但是，如果类认为它是CGI脚本，则将运行CGI脚本，而不是将其用作文件。仅使用基于目录的CGI-其他常见的服务器配置是将特殊扩展视为表示CGI脚本。</target>
        </trans-unit>
        <trans-unit id="14895e9455625ea3905a043291b8d94e88a9a62c" translate="yes" xml:space="preserve">
          <source>The class, &lt;a href=&quot;#collections.UserDict&quot;&gt;&lt;code&gt;UserDict&lt;/code&gt;&lt;/a&gt; acts as a wrapper around dictionary objects. The need for this class has been partially supplanted by the ability to subclass directly from &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;; however, this class can be easier to work with because the underlying dictionary is accessible as an attribute.</source>
          <target state="translated">&lt;a href=&quot;#collections.UserDict&quot;&gt; &lt;code&gt;UserDict&lt;/code&gt; &lt;/a&gt;类充当字典对象的包装器。对此类的需求已被直接从&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; 继承&lt;/a&gt;的能力所取代; 但是，由于可以将底层字典作为属性来访问，因此可以更轻松地使用此类。</target>
        </trans-unit>
        <trans-unit id="d174a1d7f851da4b93f967fb6954b8658cb60437" translate="yes" xml:space="preserve">
          <source>The class, &lt;a href=&quot;#collections.UserString&quot;&gt;&lt;code&gt;UserString&lt;/code&gt;&lt;/a&gt; acts as a wrapper around string objects. The need for this class has been partially supplanted by the ability to subclass directly from &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;; however, this class can be easier to work with because the underlying string is accessible as an attribute.</source>
          <target state="translated">&lt;a href=&quot;#collections.UserString&quot;&gt; &lt;code&gt;UserString&lt;/code&gt; &lt;/a&gt;类充当字符串对象的包装器。直接从&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; 继承&lt;/a&gt;子类的能力已部分取代了对此类的需要；但是，由于可以将基础字符串作为属性访问，因此可以更轻松地使用此类。</target>
        </trans-unit>
        <trans-unit id="5500c02e097010b4c8f6204fff9a65578fc826eb" translate="yes" xml:space="preserve">
          <source>The class-based API of the &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module gives you more flexibility and greater convenience than the GNU &lt;strong&gt;gettext&lt;/strong&gt; API. It is the recommended way of localizing your Python applications and modules. &lt;code&gt;gettext&lt;/code&gt; defines a &lt;a href=&quot;#gettext.GNUTranslations&quot;&gt;&lt;code&gt;GNUTranslations&lt;/code&gt;&lt;/a&gt; class which implements the parsing of GNU &lt;code&gt;.mo&lt;/code&gt; format files, and has methods for returning strings. Instances of this class can also install themselves in the built-in namespace as the function &lt;code&gt;_()&lt;/code&gt;.</source>
          <target state="translated">与GNU &lt;strong&gt;gettext&lt;/strong&gt; API 相比，&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; &lt;/a&gt;模块的基于类的API 为您提供了更大的灵活性和更大的便利性。这是本地化Python应用程序和模块的推荐方法。 &lt;code&gt;gettext&lt;/code&gt; 定义了一个&lt;a href=&quot;#gettext.GNUTranslations&quot;&gt; &lt;code&gt;GNUTranslations&lt;/code&gt; &lt;/a&gt;类，该类实现了GNU &lt;code&gt;.mo&lt;/code&gt; 格式文件的解析，并具有返回字符串的方法。此类的实例也可以将自身作为函数 &lt;code&gt;_()&lt;/code&gt; 安装在内置名称空间中。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c13471f17673e1d2e66bc6085c5a5e90090a6bc9" translate="yes" xml:space="preserve">
          <source>The client code for the preceding server:</source>
          <target state="translated">前一个服务器的客户端代码。</target>
        </trans-unit>
        <trans-unit id="b1f854376f85fdbc545caa4175dd50a74dcba07c" translate="yes" xml:space="preserve">
          <source>The client gets the image and saves it to a file:</source>
          <target state="translated">客户端获取图像并保存到文件中。</target>
        </trans-unit>
        <trans-unit id="4ab7c3dd55c07004f21171421d1885b6e9798e35" translate="yes" xml:space="preserve">
          <source>The client that interacts with the above server is included in &lt;code&gt;Lib/xmlrpc/client.py&lt;/code&gt;:</source>
          <target state="translated">与上述服务器进行交互的客户端包含在 &lt;code&gt;Lib/xmlrpc/client.py&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="608024e3b56c218bd3b7db1f81cc2c4367596096" translate="yes" xml:space="preserve">
          <source>The clipboard functions are also available in context menus.</source>
          <target state="translated">剪贴板功能也可以在上下文菜单中使用。</target>
        </trans-unit>
        <trans-unit id="60463a3de47534f196bb050046587ea8de1a88f2" translate="yes" xml:space="preserve">
          <source>The code for &lt;a href=&quot;#itertools.combinations&quot;&gt;&lt;code&gt;combinations()&lt;/code&gt;&lt;/a&gt; can be also expressed as a subsequence of &lt;a href=&quot;#itertools.permutations&quot;&gt;&lt;code&gt;permutations()&lt;/code&gt;&lt;/a&gt; after filtering entries where the elements are not in sorted order (according to their position in the input pool):</source>
          <target state="translated">在过滤元素不按排序顺序（根据它们在输入池中的位置&lt;a href=&quot;#itertools.permutations&quot;&gt; &lt;code&gt;permutations()&lt;/code&gt; &lt;/a&gt;条目之后，&lt;a href=&quot;#itertools.combinations&quot;&gt; &lt;code&gt;combinations()&lt;/code&gt; &lt;/a&gt;的代码也可以表示为permutations（）的子序列：</target>
        </trans-unit>
        <trans-unit id="42d5eab0dfe9ab9a1feea6f7f8bc6b66cd010c25" translate="yes" xml:space="preserve">
          <source>The code for &lt;a href=&quot;#itertools.combinations_with_replacement&quot;&gt;&lt;code&gt;combinations_with_replacement()&lt;/code&gt;&lt;/a&gt; can be also expressed as a subsequence of &lt;a href=&quot;#itertools.product&quot;&gt;&lt;code&gt;product()&lt;/code&gt;&lt;/a&gt; after filtering entries where the elements are not in sorted order (according to their position in the input pool):</source>
          <target state="translated">过滤元素不按顺序排列的条目（根据它们在输入池中的位置&lt;a href=&quot;#itertools.product&quot;&gt; &lt;code&gt;product()&lt;/code&gt; &lt;/a&gt;之后，&lt;a href=&quot;#itertools.combinations_with_replacement&quot;&gt; &lt;code&gt;combinations_with_replacement()&lt;/code&gt; &lt;/a&gt;的代码也可以表示为product（）的子序列：</target>
        </trans-unit>
        <trans-unit id="5d24621b4d5417bdfdf2582fa71fca0ab60793e2" translate="yes" xml:space="preserve">
          <source>The code for &lt;a href=&quot;#itertools.permutations&quot;&gt;&lt;code&gt;permutations()&lt;/code&gt;&lt;/a&gt; can be also expressed as a subsequence of &lt;a href=&quot;#itertools.product&quot;&gt;&lt;code&gt;product()&lt;/code&gt;&lt;/a&gt;, filtered to exclude entries with repeated elements (those from the same position in the input pool):</source>
          <target state="translated">&lt;a href=&quot;#itertools.permutations&quot;&gt; &lt;code&gt;permutations()&lt;/code&gt; &lt;/a&gt;的代码也可以表示为&lt;a href=&quot;#itertools.product&quot;&gt; &lt;code&gt;product()&lt;/code&gt; &lt;/a&gt;的子序列，对其进行过滤以排除具有重复元素的条目（输入池中相同位置的元素）：</target>
        </trans-unit>
        <trans-unit id="703d509dc902a2797f32a1cd580178bc07de8485" translate="yes" xml:space="preserve">
          <source>The code for the sample CGI used in the above example is:</source>
          <target state="translated">上例中使用的示例CGI的代码是。</target>
        </trans-unit>
        <trans-unit id="85fb1e301318f4a3be03adcd9de36da57823dfa5" translate="yes" xml:space="preserve">
          <source>The code handling the FTP protocol cannot differentiate between a file and a directory. This can lead to unexpected behavior when attempting to read a URL that points to a file that is not accessible. If the URL ends in a &lt;code&gt;/&lt;/code&gt;, it is assumed to refer to a directory and will be handled accordingly. But if an attempt to read a file leads to a 550 error (meaning the URL cannot be found or is not accessible, often for permission reasons), then the path is treated as a directory in order to handle the case when a directory is specified by a URL but the trailing &lt;code&gt;/&lt;/code&gt; has been left off. This can cause misleading results when you try to fetch a file whose read permissions make it inaccessible; the FTP code will try to read it, fail with a 550 error, and then perform a directory listing for the unreadable file. If fine-grained control is needed, consider using the &lt;a href=&quot;ftplib#module-ftplib&quot;&gt;&lt;code&gt;ftplib&lt;/code&gt;&lt;/a&gt; module, subclassing &lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt;&lt;code&gt;FancyURLopener&lt;/code&gt;&lt;/a&gt;, or changing &lt;em&gt;_urlopener&lt;/em&gt; to meet your needs.</source>
          <target state="translated">处理FTP协议的代码无法区分文件和目录。尝试读取指向不可访问文件的URL时，这可能导致意外行为。如果URL以 &lt;code&gt;/&lt;/code&gt; 结束，则假定引用目录，并将对其进行相应处理。但是，如果尝试读取文件导致550错误（意味着出于权限原因，通常找不到URL或无法访问该URL），那么该路径将被视为目录，以便处理指定目录的情况通过URL，但末尾 &lt;code&gt;/&lt;/code&gt; 已被取消。当您尝试获取其读取权限使其无法访问的文件时，这可能会导致误导结果。FTP代码将尝试读取它，并以550错误失败，然后对不可读文件执行目录列表。如果需要细粒度的控制，请考虑使用&lt;a href=&quot;ftplib#module-ftplib&quot;&gt; &lt;code&gt;ftplib&lt;/code&gt; &lt;/a&gt;模块，将&lt;em&gt;FancyURLopener&lt;/em&gt;子类&lt;a href=&quot;#urllib.request.FancyURLopener&quot;&gt; &lt;code&gt;FancyURLopener&lt;/code&gt; &lt;/a&gt;或更改&lt;em&gt;_urlopener&lt;/em&gt;以满足您的需求。</target>
        </trans-unit>
        <trans-unit id="4fd6893c62a4fe9dae88f1c3b04f9d6d6548dc2b" translate="yes" xml:space="preserve">
          <source>The code object has a variable keyword parameter (&lt;code&gt;**kwargs&lt;/code&gt;-like).</source>
          <target state="translated">代码对象具有可变关键字参数（ &lt;code&gt;**kwargs&lt;/code&gt; -like）。</target>
        </trans-unit>
        <trans-unit id="0979e7acdfaef407b5b5097fc26f4a26bcb8cdf1" translate="yes" xml:space="preserve">
          <source>The code object has a variable positional parameter (&lt;code&gt;*args&lt;/code&gt;-like).</source>
          <target state="translated">代码对象具有可变的位置参数（ &lt;code&gt;*args&lt;/code&gt; -like）。</target>
        </trans-unit>
        <trans-unit id="080cac35a0f36ed235e2876fd22854eef029be12" translate="yes" xml:space="preserve">
          <source>The code object is optimized, using fast locals.</source>
          <target state="translated">代码对象进行了优化,使用快速定位。</target>
        </trans-unit>
        <trans-unit id="47a377ea1cb4376dfc822cfb1e3d5bc1d7585dd2" translate="yes" xml:space="preserve">
          <source>The code supports &lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt;, plus the &lt;a href=&quot;https://tools.ietf.org/html/rfc1870.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1870&lt;/strong&gt;&lt;/a&gt; SIZE and &lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt; SMTPUTF8 extensions.</source>
          <target state="translated">该代码支持&lt;a href=&quot;https://tools.ietf.org/html/rfc5321.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5321&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://tools.ietf.org/html/rfc1870.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1870&lt;/strong&gt;&lt;/a&gt; SIZE和&lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt; SMTPUTF8扩展。</target>
        </trans-unit>
        <trans-unit id="4817874f40ce2ab856a7cb1cf5cd601ddcb8bfd6" translate="yes" xml:space="preserve">
          <source>The collections module offers the following &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;ABCs&lt;/a&gt;:</source>
          <target state="translated">收款模块提供以下&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;ABC&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="b5c5836457aa5e87fb87c4d5e999582100548205" translate="yes" xml:space="preserve">
          <source>The collections module offers the following &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;ABCs&lt;/a&gt;:</source>
          <target state="translated">收款模块提供以下&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;ABC&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3e84acb27476c2c05eba0a4f4a824cd8ec501c13" translate="yes" xml:space="preserve">
          <source>The column corresponding to &lt;em&gt;pos&lt;/em&gt; (may be &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="translated">对应于&lt;em&gt;pos&lt;/em&gt;的列（可以为 &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a56243341a69d0e12d71b0d910747be9b8112c7b" translate="yes" xml:space="preserve">
          <source>The column corresponding to &lt;em&gt;pos&lt;/em&gt;.</source>
          <target state="translated">对应于&lt;em&gt;pos&lt;/em&gt;的列。</target>
        </trans-unit>
        <trans-unit id="20a73c1901f7e6b3d6e485b823b0e3a3a85d3b98" translate="yes" xml:space="preserve">
          <source>The combination tuples are emitted in lexicographic ordering according to the order of the input &lt;em&gt;iterable&lt;/em&gt;. So, if the input &lt;em&gt;iterable&lt;/em&gt; is sorted, the combination tuples will be produced in sorted order.</source>
          <target state="translated">根据输入&lt;em&gt;iterable&lt;/em&gt;的顺序，按字典顺序发出组合元组。因此，如果对输入的&lt;em&gt;iterable&lt;/em&gt;进行排序，则将按排序顺序生成组合元组。</target>
        </trans-unit>
        <trans-unit id="52291400b098238a6b1adf88eaf1c290f1adcf33" translate="yes" xml:space="preserve">
          <source>The combobox widgets generates a &lt;strong&gt;&amp;lt;&amp;lt;ComboboxSelected&amp;gt;&amp;gt;&lt;/strong&gt; virtual event when the user selects an element from the list of values.</source>
          <target state="translated">当用户从值列表中选择一个元素时，组合框窗口小部件会生成一个&lt;strong&gt;&amp;lt;&amp;lt; ComboboxSelected &amp;gt;&amp;gt;&lt;/strong&gt;虚拟事件。</target>
        </trans-unit>
        <trans-unit id="0a0ffc5780ada254563235dcef8afc5b94088687" translate="yes" xml:space="preserve">
          <source>The command line can also be used for test discovery, for running all of the tests in a project or just a subset.</source>
          <target state="translated">该命令行还可以用于测试发现,运行一个项目中的所有测试或只是一个子集。</target>
        </trans-unit>
        <trans-unit id="9d6a9ddd026e421ebebeb4fd4a12d14a163fea6c" translate="yes" xml:space="preserve">
          <source>The command line interface is invoked using the interpreter&amp;rsquo;s &lt;code&gt;-m&lt;/code&gt; switch.</source>
          <target state="translated">使用解释器的 &lt;code&gt;-m&lt;/code&gt; 开关调用命令行界面。</target>
        </trans-unit>
        <trans-unit id="0ad815c39bd5fc01a37786842578018d08d7a616" translate="yes" xml:space="preserve">
          <source>The command or option attempted is not supported by the server.</source>
          <target state="translated">试图执行的命令或选项不被服务器支持。</target>
        </trans-unit>
        <trans-unit id="4b2372b300214e5a9d80b5b465939fec489d9cce" translate="yes" xml:space="preserve">
          <source>The command, if run with &lt;code&gt;-h&lt;/code&gt;, will show the available options:</source>
          <target state="translated">该命令（如果与 &lt;code&gt;-h&lt;/code&gt; 一起运行）将显示可用选项：</target>
        </trans-unit>
        <trans-unit id="6e345e636adf7e9a665df637497de8ab138640b2" translate="yes" xml:space="preserve">
          <source>The commands recognized by the debugger are listed below. Most commands can be abbreviated to one or two letters as indicated; e.g. &lt;code&gt;h(elp)&lt;/code&gt; means that either &lt;code&gt;h&lt;/code&gt; or &lt;code&gt;help&lt;/code&gt; can be used to enter the help command (but not &lt;code&gt;he&lt;/code&gt; or &lt;code&gt;hel&lt;/code&gt;, nor &lt;code&gt;H&lt;/code&gt; or &lt;code&gt;Help&lt;/code&gt; or &lt;code&gt;HELP&lt;/code&gt;). Arguments to commands must be separated by whitespace (spaces or tabs). Optional arguments are enclosed in square brackets (&lt;code&gt;[]&lt;/code&gt;) in the command syntax; the square brackets must not be typed. Alternatives in the command syntax are separated by a vertical bar (&lt;code&gt;|&lt;/code&gt;).</source>
          <target state="translated">下面列出了调试器可以识别的命令。多数命令可以缩写为一个或两个字母，如所示；例如 &lt;code&gt;h(elp)&lt;/code&gt; 意味着可以使用 &lt;code&gt;h&lt;/code&gt; 或 &lt;code&gt;help&lt;/code&gt; 输入帮助命令（但不能输入 &lt;code&gt;he&lt;/code&gt; 或 &lt;code&gt;hel&lt;/code&gt; ，也不能输入 &lt;code&gt;H&lt;/code&gt; 或 &lt;code&gt;Help&lt;/code&gt; 或 &lt;code&gt;HELP&lt;/code&gt; ）。命令的参数必须用空格（空格或制表符）分隔。可选参数用命令语法括在方括号（ &lt;code&gt;[]&lt;/code&gt; ）中。禁止输入方括号。命令语法中的替代选项由竖线（ &lt;code&gt;|&lt;/code&gt; ）分隔。</target>
        </trans-unit>
        <trans-unit id="1b0c4e95df2cc092cf548fbafd773a5feced6509" translate="yes" xml:space="preserve">
          <source>The comment associated with the ZIP file as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. If assigning a comment to a &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; instance created with mode &lt;code&gt;'w'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt; or &lt;code&gt;'a'&lt;/code&gt;, it should be no longer than 65535 bytes. Comments longer than this will be truncated.</source>
          <target state="translated">与ZIP文件关联的注释作为&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。如果将注释分配&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt; &lt;code&gt;'w'&lt;/code&gt; ， &lt;code&gt;'x'&lt;/code&gt; 或 &lt;code&gt;'a'&lt;/code&gt; 模式创建的ZipFile实例，则其长度不得超过65535字节。超过此长度的评论将被截断。</target>
        </trans-unit>
        <trans-unit id="c3d4ab182c2db8443dd330fa9a538692f30951a8" translate="yes" xml:space="preserve">
          <source>The comparison between expected outputs and actual outputs is done by an &lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt;. This comparison may be customized with a number of option flags; see section &lt;a href=&quot;#doctest-options&quot;&gt;Option Flags&lt;/a&gt; for more information. If the option flags are insufficient, then the comparison may also be customized by passing a subclass of &lt;a href=&quot;#doctest.OutputChecker&quot;&gt;&lt;code&gt;OutputChecker&lt;/code&gt;&lt;/a&gt; to the constructor.</source>
          <target state="translated">预期输出与实际输出之间的比较由&lt;a href=&quot;#doctest.OutputChecker&quot;&gt; &lt;code&gt;OutputChecker&lt;/code&gt; &lt;/a&gt;完成。可以使用许多选项标记来自定义此比较。有关更多信息，请参见&lt;a href=&quot;#doctest-options&quot;&gt;选项标志&lt;/a&gt;部分。如果选项标志不足，则还可以通过将&lt;a href=&quot;#doctest.OutputChecker&quot;&gt; &lt;code&gt;OutputChecker&lt;/code&gt; &lt;/a&gt;的子类传递给构造函数来自定义比较。</target>
        </trans-unit>
        <trans-unit id="79c38cc9654a2b0cf446da2a3b3b6ba57617ee75" translate="yes" xml:space="preserve">
          <source>The comparisons &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt;&lt;em&gt;always&lt;/em&gt; return a &lt;a href=&quot;functions#bool&quot;&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/a&gt;, no matter the type of the compared object:</source>
          <target state="translated">比较 &lt;code&gt;==&lt;/code&gt; 或 &lt;code&gt;!=&lt;/code&gt; &lt;em&gt;总是&lt;/em&gt;返回&lt;a href=&quot;functions#bool&quot;&gt; &lt;code&gt;bool&lt;/code&gt; &lt;/a&gt;，无论所比较对象的类型如何：</target>
        </trans-unit>
        <trans-unit id="8f4b16d657cdc57fcbb86894a1bc1965b3eac791" translate="yes" xml:space="preserve">
          <source>The compiled code object.</source>
          <target state="translated">编译后的代码对象。</target>
        </trans-unit>
        <trans-unit id="cffbd898eeee4166206889c430a7c4f2732ae94c" translate="yes" xml:space="preserve">
          <source>The compiled versions of the most recent format strings passed to &lt;a href=&quot;#struct.Struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; and the module-level functions are cached, so programs that use only a few format strings needn&amp;rsquo;t worry about reusing a single &lt;a href=&quot;#struct.Struct&quot;&gt;&lt;code&gt;Struct&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">传递给&lt;a href=&quot;#struct.Struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; 的&lt;/a&gt;最新格式字符串的编译版本和模块级函数将被缓存，因此仅使用少数格式字符串的程序不必担心重用单个&lt;a href=&quot;#struct.Struct&quot;&gt; &lt;code&gt;Struct&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="ab52247f4c90217fe220c0e00be40b43bc3d4ecb" translate="yes" xml:space="preserve">
          <source>The compiled versions of the most recent patterns passed to &lt;a href=&quot;#re.compile&quot;&gt;&lt;code&gt;re.compile()&lt;/code&gt;&lt;/a&gt; and the module-level matching functions are cached, so programs that use only a few regular expressions at a time needn&amp;rsquo;t worry about compiling regular expressions.</source>
          <target state="translated">传递给&lt;a href=&quot;#re.compile&quot;&gt; &lt;code&gt;re.compile()&lt;/code&gt; 的&lt;/a&gt;最新模式的编译版本和模块级匹配函数将被缓存，因此一次仅使用几个正则表达式的程序不必担心会编译正则表达式。</target>
        </trans-unit>
        <trans-unit id="5a86d93007da3d0cb6dd563da533af1864349897" translate="yes" xml:space="preserve">
          <source>The complete signature is:</source>
          <target state="translated">完整的签名是:</target>
        </trans-unit>
        <trans-unit id="52f0ad2782ff79ba1413d52ccaa72b70245608bf" translate="yes" xml:space="preserve">
          <source>The complex type is described in &lt;a href=&quot;stdtypes#typesnumeric&quot;&gt;Numeric Types &amp;mdash; int, float, complex&lt;/a&gt;.</source>
          <target state="translated">复杂类型在&lt;a href=&quot;stdtypes#typesnumeric&quot;&gt;数字类型中进行了&lt;/a&gt;描述-int，float，complex。</target>
        </trans-unit>
        <trans-unit id="8423b10aee34a14219c852ad4786792dda570ef3" translate="yes" xml:space="preserve">
          <source>The compression settings can be specified either as a preset compression level (with the &lt;em&gt;preset&lt;/em&gt; argument), or in detail as a custom filter chain (with the &lt;em&gt;filters&lt;/em&gt; argument).</source>
          <target state="translated">可以将压缩设置指定为预设压缩级别（使用&lt;em&gt;预置&lt;/em&gt;参数），也可以指定为自定义过滤器链（使用&lt;em&gt;滤镜&lt;/em&gt;参数）。</target>
        </trans-unit>
        <trans-unit id="aa97a83ece05b5a0a5d5b194b33927d529e0027e" translate="yes" xml:space="preserve">
          <source>The compressor cannot be used after this method has been called.</source>
          <target state="translated">本方法被调用后,压缩机不能使用。</target>
        </trans-unit>
        <trans-unit id="0f2141b3d65ba701015cb35367a7f27ebd2455cf" translate="yes" xml:space="preserve">
          <source>The compressor object may not be used after this method has been called.</source>
          <target state="translated">压缩机对象在本方法被调用后不得使用。</target>
        </trans-unit>
        <trans-unit id="64c7be1f9a57000f18a2a61a8fefda7d5860289a" translate="yes" xml:space="preserve">
          <source>The concatenation of the &lt;a href=&quot;#string.ascii_lowercase&quot;&gt;&lt;code&gt;ascii_lowercase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#string.ascii_uppercase&quot;&gt;&lt;code&gt;ascii_uppercase&lt;/code&gt;&lt;/a&gt; constants described below. This value is not locale-dependent.</source>
          <target state="translated">下面描述的&lt;a href=&quot;#string.ascii_lowercase&quot;&gt; &lt;code&gt;ascii_lowercase&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#string.ascii_uppercase&quot;&gt; &lt;code&gt;ascii_uppercase&lt;/code&gt; &lt;/a&gt;常数的串联。此值不依赖于语言环境。</target>
        </trans-unit>
        <trans-unit id="ca85ed6988e6d21605f779695c181fffd7ea4c90" translate="yes" xml:space="preserve">
          <source>The concatenation of the drive and root:</source>
          <target state="translated">驱动器和根的连接。</target>
        </trans-unit>
        <trans-unit id="e092972f0114d0d2ff37172e3be9c56bde7107c7" translate="yes" xml:space="preserve">
          <source>The conceptual model provided by a &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; object is that of an ordered dictionary of headers with additional methods for accessing both specialized information from the headers, for accessing the payload, for generating a serialized version of the message, and for recursively walking over the object tree. Note that duplicate headers are supported but special methods must be used to access them.</source>
          <target state="translated">&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;对象提供的概念模型是标题的有序字典，其中包含用于从标题访问专用信息，访问有效负载，生成消息的序列化版本以及递归遍历对象树的其他方法。请注意，支持重复的标头，但必须使用特殊的方法来访问它们。</target>
        </trans-unit>
        <trans-unit id="aa9fdff52eeada3a2000fe3606dc76d6f1a9438c" translate="yes" xml:space="preserve">
          <source>The conceptual model provided by an &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; object is that of an ordered dictionary of headers coupled with a &lt;em&gt;payload&lt;/em&gt; that represents the &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; body of the message, which might be a list of sub-&lt;code&gt;EmailMessage&lt;/code&gt; objects. In addition to the normal dictionary methods for accessing the header names and values, there are methods for accessing specialized information from the headers (for example the MIME content type), for operating on the payload, for generating a serialized version of the message, and for recursively walking over the object tree.</source>
          <target state="translated">&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;对象提供的概念模型是标题的有序字典的模型，再加上表示消息的&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;正文的&lt;em&gt;有效负载&lt;/em&gt;，该&lt;em&gt;有效负载&lt;/em&gt;可能是子 &lt;code&gt;EmailMessage&lt;/code&gt; 对象的列表。除了用于访问标头名称和值的普通词典方法之外，还有一些方法可以从标头访问特殊信息（例如MIME内容类型），对有效负载进行操作，生成消息的序列化版本以及递归地遍历对象树。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a7ce1e8829b2baa1cee35ef7caa7def938910c0" translate="yes" xml:space="preserve">
          <source>The concrete class which &lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt;&lt;code&gt;find_spec()&lt;/code&gt;&lt;/a&gt; should return instances of.</source>
          <target state="translated">&lt;a href=&quot;importlib#importlib.abc.MetaPathFinder.find_spec&quot;&gt; &lt;code&gt;find_spec()&lt;/code&gt; &lt;/a&gt;应该返回其实例的具体类。</target>
        </trans-unit>
        <trans-unit id="8b47d19d847be464de32c419aa4cb13a86a81fe9" translate="yes" xml:space="preserve">
          <source>The concurrent package</source>
          <target state="translated">并发包</target>
        </trans-unit>
        <trans-unit id="570b777eec02b54837ba5c38cb8c956eb69457cf" translate="yes" xml:space="preserve">
          <source>The condition that causes a break.</source>
          <target state="translated">导致断裂的状况。</target>
        </trans-unit>
        <trans-unit id="12bf8455ae3938296c7e397895720025d423f807" translate="yes" xml:space="preserve">
          <source>The configuration &lt;em&gt;options&lt;/em&gt; are as follows:</source>
          <target state="translated">配置&lt;em&gt;选项&lt;/em&gt;如下：</target>
        </trans-unit>
        <trans-unit id="59c7bb6eed19501d87b1a0d7f39e43f6d3d05ab2" translate="yes" xml:space="preserve">
          <source>The configuration file for &lt;code&gt;libedit&lt;/code&gt; is different from that of GNU readline. If you programmatically load configuration strings you can check for the text &amp;ldquo;libedit&amp;rdquo; in &lt;code&gt;readline.__doc__&lt;/code&gt; to differentiate between GNU readline and libedit.</source>
          <target state="translated">&lt;code&gt;libedit&lt;/code&gt; 的配置文件与GNU readline 的配置文件不同。如果以编程方式加载配置字符串，则可以在 &lt;code&gt;readline.__doc__&lt;/code&gt; 检查文本&amp;ldquo; libedit&amp;rdquo;，以区分GNU readline和libedit。</target>
        </trans-unit>
        <trans-unit id="53b52acbb2a777e6ab327fff01a2fbdb919c5154" translate="yes" xml:space="preserve">
          <source>The configuration file format understood by &lt;a href=&quot;#logging.config.fileConfig&quot;&gt;&lt;code&gt;fileConfig()&lt;/code&gt;&lt;/a&gt; is based on &lt;a href=&quot;configparser#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt; functionality. The file must contain sections called &lt;code&gt;[loggers]&lt;/code&gt;, &lt;code&gt;[handlers]&lt;/code&gt; and &lt;code&gt;[formatters]&lt;/code&gt; which identify by name the entities of each type which are defined in the file. For each such entity, there is a separate section which identifies how that entity is configured. Thus, for a logger named &lt;code&gt;log01&lt;/code&gt; in the &lt;code&gt;[loggers]&lt;/code&gt; section, the relevant configuration details are held in a section &lt;code&gt;[logger_log01]&lt;/code&gt;. Similarly, a handler called &lt;code&gt;hand01&lt;/code&gt; in the &lt;code&gt;[handlers]&lt;/code&gt; section will have its configuration held in a section called &lt;code&gt;[handler_hand01]&lt;/code&gt;, while a formatter called &lt;code&gt;form01&lt;/code&gt; in the &lt;code&gt;[formatters]&lt;/code&gt; section will have its configuration specified in a section called &lt;code&gt;[formatter_form01]&lt;/code&gt;. The root logger configuration must be specified in a section called &lt;code&gt;[logger_root]&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#logging.config.fileConfig&quot;&gt; &lt;code&gt;fileConfig()&lt;/code&gt; &lt;/a&gt;可以理解的配置文件格式基于&lt;a href=&quot;configparser#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt;功能。该文件必须包含称为 &lt;code&gt;[loggers]&lt;/code&gt; ， &lt;code&gt;[handlers]&lt;/code&gt; 和 &lt;code&gt;[formatters]&lt;/code&gt; 的部分，这些部分通过名称标识文件中定义的每种类型的实体。对于每个此类实体，都有一个单独的部分来标识该实体的配置方式。因此，对于记录命名 &lt;code&gt;log01&lt;/code&gt; 在 &lt;code&gt;[loggers]&lt;/code&gt; 部分，相关配置细节的部分举行 &lt;code&gt;[logger_log01]&lt;/code&gt; 。同样， &lt;code&gt;[handlers]&lt;/code&gt; 中的一个名为 &lt;code&gt;hand01&lt;/code&gt; 的处理程序节将在一个叫做节举行其配置 &lt;code&gt;[handler_hand01]&lt;/code&gt; ，而一个格式器称为 &lt;code&gt;form01&lt;/code&gt; 在 &lt;code&gt;[formatters]&lt;/code&gt; 段将具有在一个叫做部分指定其配置 &lt;code&gt;[formatter_form01]&lt;/code&gt; 。根记录器配置必须在 &lt;code&gt;[logger_root]&lt;/code&gt; 部分中指定。</target>
        </trans-unit>
        <trans-unit id="e9b651af8db79babcce4e20eeaec528de157decc" translate="yes" xml:space="preserve">
          <source>The configuration options in Tk are given in lists of hyphened tags followed by values. In Tkinter, options are specified as keyword-arguments in the instance constructor, and keyword-args for configure calls or as instance indices, in dictionary style, for established instances. See section &lt;a href=&quot;#tkinter-setting-options&quot;&gt;Setting Options&lt;/a&gt; on setting options.</source>
          <target state="translated">Tk中的配置选项在连字符标签列表中给出，后跟数值。在Tkinter中，选项在实例构造函数中指定为关键字参数，而在配置调用中指定关键字-args用于配置调用，或在字典样式中指定为实例索引。有关&lt;a href=&quot;#tkinter-setting-options&quot;&gt;设置选项&lt;/a&gt;，请参阅设置选项部分。</target>
        </trans-unit>
        <trans-unit id="c1a61b4a52925d6e4ff824c49fb0c8d7e73702dc" translate="yes" xml:space="preserve">
          <source>The configuring dict is searched for keys &lt;code&gt;format&lt;/code&gt; and &lt;code&gt;datefmt&lt;/code&gt; (with defaults of &lt;code&gt;None&lt;/code&gt;) and these are used to construct a &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">在配置字典中搜索键 &lt;code&gt;format&lt;/code&gt; 和 &lt;code&gt;datefmt&lt;/code&gt; （默认值为 &lt;code&gt;None&lt;/code&gt; ），这些键用于构造&lt;a href=&quot;logging#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="05ad2ef2a6dd6a0426dfded13d5ea25a19a75ea1" translate="yes" xml:space="preserve">
          <source>The configuring dict is searched for the following keys:</source>
          <target state="translated">配置dict会搜索以下键。</target>
        </trans-unit>
        <trans-unit id="d6070b1488ec8a72afe1a4161755ca71fa01d4f9" translate="yes" xml:space="preserve">
          <source>The configuring dict is searched for the key &lt;code&gt;name&lt;/code&gt; (defaulting to the empty string) and this is used to construct a &lt;a href=&quot;logging#logging.Filter&quot;&gt;&lt;code&gt;logging.Filter&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">在配置dict中搜索键 &lt;code&gt;name&lt;/code&gt; （默认为空字符串），该键用于构造&lt;a href=&quot;logging#logging.Filter&quot;&gt; &lt;code&gt;logging.Filter&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="22098bdd88d261e748ed7287ce44dd49d82e7d6e" translate="yes" xml:space="preserve">
          <source>The connection is established and a &lt;a href=&quot;asyncio-protocol#asyncio-transport&quot;&gt;transport&lt;/a&gt; is created for it.</source>
          <target state="translated">建立连接并为其创建&lt;a href=&quot;asyncio-protocol#asyncio-transport&quot;&gt;传输&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad28af9c1892c375346d6b75312ea79291b1c88f" translate="yes" xml:space="preserve">
          <source>The constant string used by the operating system to refer to the current directory. This is &lt;code&gt;'.'&lt;/code&gt; for Windows and POSIX. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">操作系统用来引用当前目录的常量字符串。这是 &lt;code&gt;'.'&lt;/code&gt; 适用于Windows和POSIX。也可以通过&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; 获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83f1f1fda282af44b7cfb075ada1e9aaf0f04e93" translate="yes" xml:space="preserve">
          <source>The constant string used by the operating system to refer to the parent directory. This is &lt;code&gt;'..'&lt;/code&gt; for Windows and POSIX. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">操作系统用来引用父目录的常量字符串。对于Windows和POSIX，这是 &lt;code&gt;'..'&lt;/code&gt; 。也可以通过&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; 获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01770734e88c7a4ab5e6980d5f00daa7ef0c1c5f" translate="yes" xml:space="preserve">
          <source>The constants defined in this module are:</source>
          <target state="translated">本模块中定义的常数有:</target>
        </trans-unit>
        <trans-unit id="b08a2e82bd5dc334f732ff6ab5b3f9da3808da16" translate="yes" xml:space="preserve">
          <source>The constants in the model type group are:</source>
          <target state="translated">模型类型组中的常数是:</target>
        </trans-unit>
        <trans-unit id="9ddd636a4f621e05ed2865944f1e483ab09fd535" translate="yes" xml:space="preserve">
          <source>The constants in the quantifier group are:</source>
          <target state="translated">量词组中的常数是:</target>
        </trans-unit>
        <trans-unit id="0a15e83ade8de633314e05199e3e1378b4c6379a" translate="yes" xml:space="preserve">
          <source>The constants in this section are only relevant for the C module. They are also included in the pure Python version for compatibility.</source>
          <target state="translated">本节中的常量只与 C 模块相关。为了兼容性,它们也包含在纯 Python 版本中。</target>
        </trans-unit>
        <trans-unit id="4cb2fb40748577c1742ac7584db3943ced5d2257" translate="yes" xml:space="preserve">
          <source>The constructor accepts any object with a truth value.</source>
          <target state="translated">构造函数接受任何具有真值的对象。</target>
        </trans-unit>
        <trans-unit id="de65c1ef0adbf85286791da99438ac61fbc8f3c0" translate="yes" xml:space="preserve">
          <source>The constructor builds a list whose items are the same and in the same order as &lt;em&gt;iterable&lt;/em&gt;&amp;rsquo;s items. &lt;em&gt;iterable&lt;/em&gt; may be either a sequence, a container that supports iteration, or an iterator object. If &lt;em&gt;iterable&lt;/em&gt; is already a list, a copy is made and returned, similar to &lt;code&gt;iterable[:]&lt;/code&gt;. For example, &lt;code&gt;list('abc')&lt;/code&gt; returns &lt;code&gt;['a', 'b', 'c']&lt;/code&gt; and &lt;code&gt;list( (1, 2, 3) )&lt;/code&gt; returns &lt;code&gt;[1, 2, 3]&lt;/code&gt;. If no argument is given, the constructor creates a new empty list, &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">构造函数将构建一个列表，该列表的项与&lt;em&gt;可迭代&lt;/em&gt;的项相同且顺序相同。&lt;em&gt;iterable&lt;/em&gt;可以是序列，支持迭代的容器或迭代器对象。如果&lt;em&gt;iterable&lt;/em&gt;已经是一个列表，则复制并返回一个副本，类似于 &lt;code&gt;iterable[:]&lt;/code&gt; 。例如， &lt;code&gt;list('abc')&lt;/code&gt; 返回 &lt;code&gt;['a', 'b', 'c']&lt;/code&gt; ， &lt;code&gt;list( (1, 2, 3) )&lt;/code&gt; 返回 &lt;code&gt;[1, 2, 3]&lt;/code&gt; 。如果未提供任何参数，则构造函数将创建一个新的空列表 &lt;code&gt;[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29519469d10505e3d049e63dd290612ed49fc46c" translate="yes" xml:space="preserve">
          <source>The constructor builds a tuple whose items are the same and in the same order as &lt;em&gt;iterable&lt;/em&gt;&amp;rsquo;s items. &lt;em&gt;iterable&lt;/em&gt; may be either a sequence, a container that supports iteration, or an iterator object. If &lt;em&gt;iterable&lt;/em&gt; is already a tuple, it is returned unchanged. For example, &lt;code&gt;tuple('abc')&lt;/code&gt; returns &lt;code&gt;('a', 'b', 'c')&lt;/code&gt; and &lt;code&gt;tuple( [1, 2, 3] )&lt;/code&gt; returns &lt;code&gt;(1, 2, 3)&lt;/code&gt;. If no argument is given, the constructor creates a new empty tuple, &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">构造函数会构建一个元组，其元素与&lt;em&gt;可迭代&lt;/em&gt;的元素相同，并且顺序相同。&lt;em&gt;iterable&lt;/em&gt;可以是序列，支持迭代的容器或迭代器对象。如果&lt;em&gt;iterable&lt;/em&gt;已经是一个元组，则将其保持不变。例如， &lt;code&gt;tuple('abc')&lt;/code&gt; 返回 &lt;code&gt;('a', 'b', 'c')&lt;/code&gt; 而 &lt;code&gt;tuple( [1, 2, 3] )&lt;/code&gt; 返回 &lt;code&gt;(1, 2, 3)&lt;/code&gt; 。如果未提供任何参数，则构造函数将创建一个新的空元组 &lt;code&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9dd0eda3540f657a7e0a9a4a8c77a6032885080" translate="yes" xml:space="preserve">
          <source>The constructor creates a &lt;a href=&quot;#io.BufferedReader&quot;&gt;&lt;code&gt;BufferedReader&lt;/code&gt;&lt;/a&gt; for the given readable &lt;em&gt;raw&lt;/em&gt; stream and &lt;em&gt;buffer_size&lt;/em&gt;. If &lt;em&gt;buffer_size&lt;/em&gt; is omitted, &lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt;&lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">构造函数为给定的可读&lt;em&gt;原始&lt;/em&gt;流和&lt;em&gt;buffer_size&lt;/em&gt;创建一个&lt;a href=&quot;#io.BufferedReader&quot;&gt; &lt;code&gt;BufferedReader&lt;/code&gt; &lt;/a&gt;。如果省略&lt;em&gt;buffer_size&lt;/em&gt;，则使用&lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt; &lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5ff054c7924dc7261d0aed35f217835da758c86" translate="yes" xml:space="preserve">
          <source>The constructor creates a &lt;a href=&quot;#io.BufferedWriter&quot;&gt;&lt;code&gt;BufferedWriter&lt;/code&gt;&lt;/a&gt; for the given writeable &lt;em&gt;raw&lt;/em&gt; stream. If the &lt;em&gt;buffer_size&lt;/em&gt; is not given, it defaults to &lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt;&lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">构造函数为给定的可写&lt;em&gt;原始&lt;/em&gt;流创建一个&lt;a href=&quot;#io.BufferedWriter&quot;&gt; &lt;code&gt;BufferedWriter&lt;/code&gt; &lt;/a&gt;。如果未指定&lt;em&gt;buffer_size&lt;/em&gt;，则默认为&lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt; &lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6dbdbc1d7bc6e3588721a37331f619e648a20ac7" translate="yes" xml:space="preserve">
          <source>The constructor creates a reader and writer for a seekable raw stream, given in the first argument. If the &lt;em&gt;buffer_size&lt;/em&gt; is omitted it defaults to &lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt;&lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">构造函数为第一个参数中给出的可搜索原始流创建一个读取器和写入器。如果省略&lt;em&gt;buffer_size&lt;/em&gt;，则默认为&lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt; &lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09fba04fdb03d601e27ad6e5c1a62a7c6837bb41" translate="yes" xml:space="preserve">
          <source>The constructor for this class is:</source>
          <target state="translated">这个类的构造函数是。</target>
        </trans-unit>
        <trans-unit id="27d963a1efe9374acd799a7437355a7f128b6742" translate="yes" xml:space="preserve">
          <source>The constructor of a class &lt;code&gt;ast.T&lt;/code&gt; parses its arguments as follows:</source>
          <target state="translated">&lt;code&gt;ast.T&lt;/code&gt; 类的构造函数将其参数解析如下：</target>
        </trans-unit>
        <trans-unit id="bd786e1e93280b6a0e5b1a1fd99c22ce347e8d8f" translate="yes" xml:space="preserve">
          <source>The constructor of a policy class can be passed various keyword arguments. The arguments that may be specified are any non-method properties on this class, plus any additional non-method properties on the concrete class. A value specified in the constructor will override the default value for the corresponding attribute.</source>
          <target state="translated">策略类的构造函数可以传递各种关键字参数。可以指定的参数是这个类上的任何非方法属性,加上具体类上的任何附加非方法属性。在构造函数中指定的值将覆盖相应属性的默认值。</target>
        </trans-unit>
        <trans-unit id="3ee2574b5d9e6bcc9b944e93fc5b27e68e52b42e" translate="yes" xml:space="preserve">
          <source>The constructor often actually returns a subclass of &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, as described in &lt;a href=&quot;#os-exceptions&quot;&gt;OS exceptions&lt;/a&gt; below. The particular subclass depends on the final &lt;a href=&quot;#OSError.errno&quot;&gt;&lt;code&gt;errno&lt;/code&gt;&lt;/a&gt; value. This behaviour only occurs when constructing &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; directly or via an alias, and is not inherited when subclassing.</source>
          <target state="translated">构造函数通常实际上返回&lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;的子类，如下面的&lt;a href=&quot;#os-exceptions&quot;&gt;OS异常&lt;/a&gt;所述。特定的子类取决于最终的&lt;a href=&quot;#OSError.errno&quot;&gt; &lt;code&gt;errno&lt;/code&gt; &lt;/a&gt;值。此行为仅在直接或通过别名构造&lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;时发生，并且在子类化时不会继承。</target>
        </trans-unit>
        <trans-unit id="34da053fc68df3d3c1c7315428ce28358a25e31e" translate="yes" xml:space="preserve">
          <source>The constructor parameters have the same meaning as for &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt;, with the exception of &lt;em&gt;return_value&lt;/em&gt; and &lt;em&gt;side_effect&lt;/em&gt; which have no meaning on a non-callable mock.</source>
          <target state="translated">构造函数参数与&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;具有相同的含义，但&lt;em&gt;return_value&lt;/em&gt;和&lt;em&gt;side_effect&lt;/em&gt;除外，它们在不可调用的模拟中没有任何意义。</target>
        </trans-unit>
        <trans-unit id="92a4c4d75e4bbfdb57df8a0f0ff2b7e566c251f3" translate="yes" xml:space="preserve">
          <source>The constructor parameters have the same meaning as for &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">构造函数参数与&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;具有相同的含义。</target>
        </trans-unit>
        <trans-unit id="2a6b7b5892a6a7371b6a7eb794526e89b84a8ce7" translate="yes" xml:space="preserve">
          <source>The constructor sets this attribute to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">构造函数将此属性设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82938dfd4d3b4884cceee3e3895d3aed984dc32f" translate="yes" xml:space="preserve">
          <source>The constructor should always be called with keyword arguments. &lt;em&gt;group&lt;/em&gt; should always be &lt;code&gt;None&lt;/code&gt;; it exists solely for compatibility with &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;threading.Thread&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;target&lt;/em&gt; is the callable object to be invoked by the &lt;a href=&quot;#multiprocessing.Process.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method. It defaults to &lt;code&gt;None&lt;/code&gt;, meaning nothing is called. &lt;em&gt;name&lt;/em&gt; is the process name (see &lt;a href=&quot;#multiprocessing.Process.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; for more details). &lt;em&gt;args&lt;/em&gt; is the argument tuple for the target invocation. &lt;em&gt;kwargs&lt;/em&gt; is a dictionary of keyword arguments for the target invocation. If provided, the keyword-only &lt;em&gt;daemon&lt;/em&gt; argument sets the process &lt;a href=&quot;#multiprocessing.Process.daemon&quot;&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/a&gt; flag to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;None&lt;/code&gt; (the default), this flag will be inherited from the creating process.</source>
          <target state="translated">构造函数应始终使用关键字参数进行调用。&lt;em&gt;组&lt;/em&gt;应该始终为 &lt;code&gt;None&lt;/code&gt; ;它仅用于与&lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;threading.Thread&lt;/code&gt; &lt;/a&gt;兼容。&lt;em&gt;target&lt;/em&gt;是要由&lt;a href=&quot;#multiprocessing.Process.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法调用的可调用对象。它默认为 &lt;code&gt;None&lt;/code&gt; ，表示什么都没有被调用。&lt;em&gt;name&lt;/em&gt;是进程名称（有关更多详细信息，请参见&lt;a href=&quot;#multiprocessing.Process.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;）。&lt;em&gt;args&lt;/em&gt;是目标调用的参数元组。&lt;em&gt;kwargs&lt;/em&gt;是用于目标调用的关键字参数的字典。如果提供，则仅关键字&lt;em&gt;守护程序&lt;/em&gt;参数将进程&lt;a href=&quot;#multiprocessing.Process.daemon&quot;&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;/a&gt;标志设置为 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 。如果为 &lt;code&gt;None&lt;/code&gt; （默认），则此标志将从创建过程中继承。</target>
        </trans-unit>
        <trans-unit id="32a46ef7f69310a283260ddb83ad03cfa971b3e1" translate="yes" xml:space="preserve">
          <source>The constructor takes a single argument which is the template string.</source>
          <target state="translated">构造函数只接受一个参数,即模板字符串。</target>
        </trans-unit>
        <trans-unit id="85fb777e8dbaf45dd04245b451b4e3b6e600f758" translate="yes" xml:space="preserve">
          <source>The constructor takes a statement to be timed, an additional statement used for setup, and a timer function. Both statements default to &lt;code&gt;'pass'&lt;/code&gt;; the timer function is platform-dependent (see the module doc string). &lt;em&gt;stmt&lt;/em&gt; and &lt;em&gt;setup&lt;/em&gt; may also contain multiple statements separated by &lt;code&gt;;&lt;/code&gt; or newlines, as long as they don&amp;rsquo;t contain multi-line string literals. The statement will by default be executed within timeit&amp;rsquo;s namespace; this behavior can be controlled by passing a namespace to &lt;em&gt;globals&lt;/em&gt;.</source>
          <target state="translated">构造函数接受一条要计时的语句，一条用于设置的附加语句以及一个计时器函数。这两个语句默认为 &lt;code&gt;'pass'&lt;/code&gt; ; 计时器功能取决于平台（请参阅模块文档字符串）。&lt;em&gt;stmt&lt;/em&gt;和&lt;em&gt;setup&lt;/em&gt;也可能包含多个由 &lt;code&gt;;&lt;/code&gt; 分隔的语句。或换行符，只要它们不包含多行字符串文字即可。默认情况下，该语句将在其名称空间中执行；可以通过将名称空间传递给&lt;em&gt;globals&lt;/em&gt;来控制此行为。</target>
        </trans-unit>
        <trans-unit id="e82026a9486f07bedd914a704cc5bdb81ae8b863" translate="yes" xml:space="preserve">
          <source>The constructors &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;functions#complex&quot;&gt;&lt;code&gt;complex()&lt;/code&gt;&lt;/a&gt; can be used to produce numbers of a specific type.</source>
          <target state="translated">构造函数&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;functions#complex&quot;&gt; &lt;code&gt;complex()&lt;/code&gt; &lt;/a&gt;可以用于生成特定类型的数字。</target>
        </trans-unit>
        <trans-unit id="faeaf3d519344bfb81584ecfbe3e2e030553ca32" translate="yes" xml:space="preserve">
          <source>The constructors for both classes work the same:</source>
          <target state="translated">两个类的构造函数工作原理相同。</target>
        </trans-unit>
        <trans-unit id="16bddd8e166a7aa3664f7fc3cb9f30d4b8d6972f" translate="yes" xml:space="preserve">
          <source>The content of &lt;code&gt;script&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; elements is returned as is, without further parsing:</source>
          <target state="translated">&lt;code&gt;script&lt;/code&gt; 和 &lt;code&gt;style&lt;/code&gt; 元素的内容按原样返回，而无需进一步分析：</target>
        </trans-unit>
        <trans-unit id="b885742c99fa8fa5d295658e3b1e7a351b43c4b6" translate="yes" xml:space="preserve">
          <source>The content of Internet Explorer conditional comments (condcoms) will also be sent to this method, so, for &lt;code&gt;&amp;lt;!--[if IE 9]&amp;gt;IE9-specific content&amp;lt;![endif]--&amp;gt;&lt;/code&gt;, this method will receive &lt;code&gt;'[if IE 9]&amp;gt;IE9-specific content&amp;lt;![endif]'&lt;/code&gt;.</source>
          <target state="translated">Internet Explorer条件注释（condcoms）的内容也将发送到此方法，因此，对于 &lt;code&gt;&amp;lt;!--[if IE 9]&amp;gt;IE9-specific content&amp;lt;![endif]--&amp;gt;&lt;/code&gt; ，此方法将收到 &lt;code&gt;'[if IE 9]&amp;gt;IE9-specific content&amp;lt;![endif]'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ffbbe2070577e91a7c0b3ac8a7f6a190c051ef3" translate="yes" xml:space="preserve">
          <source>The content of the comment as a string. The attribute contains all characters between the leading &lt;code&gt;&amp;lt;!-&lt;/code&gt;&lt;code&gt;-&lt;/code&gt; and trailing &lt;code&gt;-&lt;/code&gt;&lt;code&gt;-&amp;gt;&lt;/code&gt;, but does not include them.</source>
          <target state="translated">注释的内容为字符串。该属性包含的所有字符的龙头之间的 &lt;code&gt;&amp;lt;!-&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; 和结尾 &lt;code&gt;-&lt;/code&gt; &lt;code&gt;-&amp;gt;&lt;/code&gt; ，但不包括它们。</target>
        </trans-unit>
        <trans-unit id="23414cbc9467ed1198fa805e0f5a50cf39d17661" translate="yes" xml:space="preserve">
          <source>The content of the processing instruction following the first whitespace character.</source>
          <target state="translated">第一个空格字符后的处理指令内容。</target>
        </trans-unit>
        <trans-unit id="c57db44960c79dd27aae70094f1d2c24fd86db14" translate="yes" xml:space="preserve">
          <source>The content of the processing instruction up to the first whitespace character. This is a read-only attribute.</source>
          <target state="translated">处理指令的内容,直到第一个空格字符。这是一个只读属性。</target>
        </trans-unit>
        <trans-unit id="462b31a1bee4d3987ae97dfe20b6bb46bc905084" translate="yes" xml:space="preserve">
          <source>The content of the text node as a string.</source>
          <target state="translated">文本节点的内容为字符串。</target>
        </trans-unit>
        <trans-unit id="43ad9f96468af5b1c07ea10a5a72713aa31ff0be" translate="yes" xml:space="preserve">
          <source>The content type string, in the form &lt;code&gt;maintype/subtype&lt;/code&gt;.</source>
          <target state="translated">内容类型字符串，格式为 &lt;code&gt;maintype/subtype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3b150ca1eb633d638b6149b49714354917314a8" translate="yes" xml:space="preserve">
          <source>The contents of this dictionary should not be modified; changes may not affect the values of local and free variables used by the interpreter.</source>
          <target state="translated">这个字典的内容不应该被修改,修改可能不会影响解释器使用的局部变量和自由变量的值。</target>
        </trans-unit>
        <trans-unit id="8d72744048e2ef7304cd545255ca3e4d86637d15" translate="yes" xml:space="preserve">
          <source>The context diff format normally has a header for filenames and modification times. Any or all of these may be specified using strings for &lt;em&gt;fromfile&lt;/em&gt;, &lt;em&gt;tofile&lt;/em&gt;, &lt;em&gt;fromfiledate&lt;/em&gt;, and &lt;em&gt;tofiledate&lt;/em&gt;. The modification times are normally expressed in the ISO 8601 format. If not specified, the strings default to blanks.</source>
          <target state="translated">上下文差异格式通常具有文件名和修改时间的标头。可以使用字符串&lt;em&gt;fromfile&lt;/em&gt;，&lt;em&gt;tofile&lt;/em&gt;，&lt;em&gt;fromfiledate&lt;/em&gt;和&lt;em&gt;tofiledate&lt;/em&gt;来指定其中的任何一个或全部。修改时间通常以ISO 8601格式表示。如果未指定，则字符串默认为空白。</target>
        </trans-unit>
        <trans-unit id="ae74fa43390909c47e9bab374fdc0e7d65c183ae" translate="yes" xml:space="preserve">
          <source>The context flag is set whenever the condition is encountered. After the computation, flags may be checked for informational purposes (for instance, to determine whether a computation was exact). After checking the flags, be sure to clear all flags before starting the next computation.</source>
          <target state="translated">每当遇到条件时,就会设置上下文标志。计算结束后,可以为了信息目的检查标志(例如,确定计算是否精确)。检查完标志后,一定要在开始下一次计算前清除所有标志。</target>
        </trans-unit>
        <trans-unit id="09eded2e636fd012ef76bbb3909bd7a364dad9e0" translate="yes" xml:space="preserve">
          <source>The context for arithmetic is an environment specifying precision, rounding rules, limits on exponents, flags indicating the results of operations, and trap enablers which determine whether signals are treated as exceptions. Rounding options include &lt;a href=&quot;#decimal.ROUND_CEILING&quot;&gt;&lt;code&gt;ROUND_CEILING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_DOWN&quot;&gt;&lt;code&gt;ROUND_DOWN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_FLOOR&quot;&gt;&lt;code&gt;ROUND_FLOOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_HALF_DOWN&quot;&gt;&lt;code&gt;ROUND_HALF_DOWN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt;&lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.ROUND_UP&quot;&gt;&lt;code&gt;ROUND_UP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#decimal.ROUND_05UP&quot;&gt;&lt;code&gt;ROUND_05UP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">算术的上下文是一个环境，用于指定精度，舍入规则，指数限制，指示运算结果的标志以及确定信号是否被视为异常的陷阱启用器。舍入选项包括&lt;a href=&quot;#decimal.ROUND_CEILING&quot;&gt; &lt;code&gt;ROUND_CEILING&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#decimal.ROUND_DOWN&quot;&gt; &lt;code&gt;ROUND_DOWN&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#decimal.ROUND_FLOOR&quot;&gt; &lt;code&gt;ROUND_FLOOR&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#decimal.ROUND_HALF_DOWN&quot;&gt; &lt;code&gt;ROUND_HALF_DOWN&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt; &lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#decimal.ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#decimal.ROUND_UP&quot;&gt; &lt;code&gt;ROUND_UP&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#decimal.ROUND_05UP&quot;&gt; &lt;code&gt;ROUND_05UP&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bafd7adbe3cc9b05aa5e0e3dcce674dac350bfa8" translate="yes" xml:space="preserve">
          <source>The context management protocol can be used for a similar effect, using the &lt;code&gt;with&lt;/code&gt; statement:</source>
          <target state="translated">可以使用 &lt;code&gt;with&lt;/code&gt; 语句将上下文管理协议用于类似的效果：</target>
        </trans-unit>
        <trans-unit id="8ba17141915382244ea967ecdf5422870a5b2122" translate="yes" xml:space="preserve">
          <source>The context manager creates a temporary directory in the current directory with name &lt;em&gt;name&lt;/em&gt; before temporarily changing the current working directory. If &lt;em&gt;name&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the temporary directory is created using &lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt;&lt;code&gt;tempfile.mkdtemp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">上下文管理器在临时更改当前工作目录之前，在名称为&lt;em&gt;name&lt;/em&gt;的当前目录中创建一个临时目录。如果&lt;em&gt;name&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则使用&lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt; &lt;code&gt;tempfile.mkdtemp()&lt;/code&gt; &lt;/a&gt;创建临时目录。</target>
        </trans-unit>
        <trans-unit id="6e83b5b1e4a02d60f54d38e4c14284f0b9e0c2f5" translate="yes" xml:space="preserve">
          <source>The context manager is designed to be used like this:</source>
          <target state="translated">上下文管理器被设计成这样使用。</target>
        </trans-unit>
        <trans-unit id="c93372b7d432a94a90013fda0f1e81f91883d191" translate="yes" xml:space="preserve">
          <source>The context manager will store the caught exception object in its &lt;code&gt;exception&lt;/code&gt; attribute. This can be useful if the intention is to perform additional checks on the exception raised:</source>
          <target state="translated">上下文管理器会将捕获的异常对象存储在其 &lt;code&gt;exception&lt;/code&gt; 属性中。如果要对引发的异常执行其他检查，这将很有用：</target>
        </trans-unit>
        <trans-unit id="a8a527687a59be5f54b43bf5cdbcd3a25dd1f0a6" translate="yes" xml:space="preserve">
          <source>The context manager will store the caught warning object in its &lt;code&gt;warning&lt;/code&gt; attribute, and the source line which triggered the warnings in the &lt;code&gt;filename&lt;/code&gt; and &lt;code&gt;lineno&lt;/code&gt; attributes. This can be useful if the intention is to perform additional checks on the warning caught:</source>
          <target state="translated">上下文管理器会将捕获到的警告对象存储在其 &lt;code&gt;warning&lt;/code&gt; 属性中，并将触发警告的源代码行存储在 &lt;code&gt;filename&lt;/code&gt; 和 &lt;code&gt;lineno&lt;/code&gt; 属性中。如果要对捕获到的警告进行其他检查，这将很有用：</target>
        </trans-unit>
        <trans-unit id="6527b1864910862f2bd57bbab086cffc836efcd7" translate="yes" xml:space="preserve">
          <source>The context must be adapted for exact arbitrary precision arithmetic. &lt;code&gt;Emin&lt;/code&gt; and &lt;code&gt;Emax&lt;/code&gt; should always be set to the maximum values, &lt;code&gt;clamp&lt;/code&gt; should always be 0 (the default). Setting &lt;code&gt;prec&lt;/code&gt; requires some care.</source>
          <target state="translated">上下文必须适用于精确的任意精度算术。 &lt;code&gt;Emin&lt;/code&gt; 和 &lt;code&gt;Emax&lt;/code&gt; 应始终设置为最大值， &lt;code&gt;clamp&lt;/code&gt; 应始终为0（默认值）。设置 &lt;code&gt;prec&lt;/code&gt; 需要一定的注意。</target>
        </trans-unit>
        <trans-unit id="b1be860097b2ea275b23bb066160fdd50362d1e4" translate="yes" xml:space="preserve">
          <source>The control component is the &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; module. Every &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;, every &lt;a href=&quot;email.generator#module-email.generator&quot;&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/a&gt;, and every &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; has an associated &lt;a href=&quot;email.policy#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; object that controls its behavior. Usually an application only needs to specify the policy when an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; is created, either by directly instantiating an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; to create a new email, or by parsing an input stream using a &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt;. But the policy can be changed when the message is serialized using a &lt;a href=&quot;email.generator#module-email.generator&quot;&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/a&gt;. This allows, for example, a generic email message to be parsed from disk, but to serialize it using standard SMTP settings when sending it to an email server.</source>
          <target state="translated">控制组件是&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;模块。每个&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;，每个&lt;a href=&quot;email.generator#module-email.generator&quot;&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/a&gt;和每个&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;都有一个控制其行为的关联&lt;a href=&quot;email.policy#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;对象。通常，应用程序仅需要在创建&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;时指定策略，方法是直接实例化&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;来创建新电子邮件，或者使用&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;解析输入流。但是，当使用&lt;a href=&quot;email.generator#module-email.generator&quot;&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/a&gt;序列化消息时，可以更改策略。例如，这允许从磁盘解析通用电子邮件，但在将其发送到电子邮件服务器时使用标准SMTP设置对其进行序列化。</target>
        </trans-unit>
        <trans-unit id="4ea8900935978cab09e01ef7e63ae696b49a52ac" translate="yes" xml:space="preserve">
          <source>The control-c handling signal handler attempts to remain compatible with code or tests that install their own &lt;a href=&quot;signal#signal.SIGINT&quot;&gt;&lt;code&gt;signal.SIGINT&lt;/code&gt;&lt;/a&gt; handler. If the &lt;code&gt;unittest&lt;/code&gt; handler is called but &lt;em&gt;isn&amp;rsquo;t&lt;/em&gt; the installed &lt;a href=&quot;signal#signal.SIGINT&quot;&gt;&lt;code&gt;signal.SIGINT&lt;/code&gt;&lt;/a&gt; handler, i.e. it has been replaced by the system under test and delegated to, then it calls the default handler. This will normally be the expected behavior by code that replaces an installed handler and delegates to it. For individual tests that need &lt;code&gt;unittest&lt;/code&gt; control-c handling disabled the &lt;a href=&quot;#unittest.removeHandler&quot;&gt;&lt;code&gt;removeHandler()&lt;/code&gt;&lt;/a&gt; decorator can be used.</source>
          <target state="translated">控件c处理信号处理程序尝试与安装自己的&lt;a href=&quot;signal#signal.SIGINT&quot;&gt; &lt;code&gt;signal.SIGINT&lt;/code&gt; &lt;/a&gt;处理程序的代码或测试保持兼容。如果调用了 &lt;code&gt;unittest&lt;/code&gt; 处理程序但&lt;em&gt;不是&lt;/em&gt;已安装的&lt;a href=&quot;signal#signal.SIGINT&quot;&gt; &lt;code&gt;signal.SIGINT&lt;/code&gt; &lt;/a&gt;处理程序，即它已被测试系统替换并委托给它，则它将调用默认处理程序。通过替换已安装的处理程序并委托给它的代码，这通常是预期的行为。对于需要禁用 &lt;code&gt;unittest&lt;/code&gt; control-c处理的单个测试，可以使用&lt;a href=&quot;#unittest.removeHandler&quot;&gt; &lt;code&gt;removeHandler()&lt;/code&gt; &lt;/a&gt;装饰器。</target>
        </trans-unit>
        <trans-unit id="42d9a5e0285e83ad97753c1affe2e30fd3b5c598" translate="yes" xml:space="preserve">
          <source>The control-c handling signal handler attempts to remain compatible with code or tests that install their own &lt;code&gt;signal.SIGINT&lt;/code&gt; handler. If the &lt;code&gt;unittest&lt;/code&gt; handler is called but &lt;em&gt;isn&amp;rsquo;t&lt;/em&gt; the installed &lt;code&gt;signal.SIGINT&lt;/code&gt; handler, i.e. it has been replaced by the system under test and delegated to, then it calls the default handler. This will normally be the expected behavior by code that replaces an installed handler and delegates to it. For individual tests that need &lt;code&gt;unittest&lt;/code&gt; control-c handling disabled the &lt;a href=&quot;#unittest.removeHandler&quot;&gt;&lt;code&gt;removeHandler()&lt;/code&gt;&lt;/a&gt; decorator can be used.</source>
          <target state="translated">控件c处理信号处理程序尝试与安装自己的 &lt;code&gt;signal.SIGINT&lt;/code&gt; 处理程序的代码或测试保持兼容。如果调用了 &lt;code&gt;unittest&lt;/code&gt; 处理程序但&lt;em&gt;不是&lt;/em&gt;已安装的 &lt;code&gt;signal.SIGINT&lt;/code&gt; 处理程序，即它已被测试系统替换并委托给它，则它将调用默认处理程序。通过替换已安装的处理程序并委托给它的代码，这通常是预期的行为。对于需要禁用 &lt;code&gt;unittest&lt;/code&gt; control-c处理的单个测试，可以使用&lt;a href=&quot;#unittest.removeHandler&quot;&gt; &lt;code&gt;removeHandler()&lt;/code&gt; &lt;/a&gt;装饰器。</target>
        </trans-unit>
        <trans-unit id="f0fec426b51ce6460abf94b5b235156f847e881d" translate="yes" xml:space="preserve">
          <source>The convenience functions are:</source>
          <target state="translated">方便的功能是:</target>
        </trans-unit>
        <trans-unit id="56531a899db00e70169892fd06fed6a16f80619f" translate="yes" xml:space="preserve">
          <source>The convention has been adopted that subclasses defining &lt;code&gt;&amp;lt;protocol&amp;gt;_request()&lt;/code&gt; or &lt;code&gt;&amp;lt;protocol&amp;gt;_response()&lt;/code&gt; methods are named &lt;code&gt;*Processor&lt;/code&gt;; all others are named &lt;code&gt;*Handler&lt;/code&gt;.</source>
          <target state="translated">已经采用了将定义 &lt;code&gt;&amp;lt;protocol&amp;gt;_request()&lt;/code&gt; 或 &lt;code&gt;&amp;lt;protocol&amp;gt;_response()&lt;/code&gt; 方法的子类命名为 &lt;code&gt;*Processor&lt;/code&gt; 的约定。所有其他命名为 &lt;code&gt;*Handler&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04aed1935d025bbe545d917616fb5a05a7966b05" translate="yes" xml:space="preserve">
          <source>The convention of allowing a special section of default values for other sections or interpolation purposes is a powerful concept of this library, letting users create complex declarative configurations. This section is normally called &lt;code&gt;&quot;DEFAULT&quot;&lt;/code&gt; but this can be customized to point to any other valid section name. Some typical values include: &lt;code&gt;&quot;general&quot;&lt;/code&gt; or &lt;code&gt;&quot;common&quot;&lt;/code&gt;. The name provided is used for recognizing default sections when reading from any source and is used when writing configuration back to a file. Its current value can be retrieved using the &lt;code&gt;parser_instance.default_section&lt;/code&gt; attribute and may be modified at runtime (i.e. to convert files from one format to another).</source>
          <target state="translated">允许将默认值的特殊部分用于其他部分或插值的惯例是该库的强大概念，可让用户创建复杂的声明性配置。此部分通常称为 &lt;code&gt;&quot;DEFAULT&quot;&lt;/code&gt; 但可以对其进行自定义以指向任何其他有效的部分名称。一些典型值包括： &lt;code&gt;&quot;general&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;common&quot;&lt;/code&gt; 。提供的名称用于在从任何源读取时识别默认部分，并在将配置写回文件时使用。可以使用 &lt;code&gt;parser_instance.default_section&lt;/code&gt; 属性检索其当前值，并且可以在运行时进行修改（即，将文件从一种格式转换为另一种格式）。</target>
        </trans-unit>
        <trans-unit id="04f50c40567ef791799d2985a7c9a953f20d7dc2" translate="yes" xml:space="preserve">
          <source>The conversion flag characters are:</source>
          <target state="translated">转换标志字符为:</target>
        </trans-unit>
        <trans-unit id="a7662277ad21af100a1d5f044a71168e6f8c38a0" translate="yes" xml:space="preserve">
          <source>The conversion is exact. Raise OverflowError on infinities and ValueError on NaNs.</source>
          <target state="translated">转换是精确的。在无穷大时引发溢出错误,在NaNs时引发ValueError。</target>
        </trans-unit>
        <trans-unit id="9a0858db8166719a0548328bc9ef5c570f7cfad8" translate="yes" xml:space="preserve">
          <source>The conversion types are:</source>
          <target state="translated">转换类型有:</target>
        </trans-unit>
        <trans-unit id="105b71d0f8e9a7689ed5c98aeb32a3a6cbc24366" translate="yes" xml:space="preserve">
          <source>The conversion will be zero padded for numeric values.</source>
          <target state="translated">转换后的数值将被填充为零。</target>
        </trans-unit>
        <trans-unit id="7703cc3d251bd654ea393b2b50dea7fa2568320d" translate="yes" xml:space="preserve">
          <source>The converted value is left adjusted (overrides the &lt;code&gt;'0'&lt;/code&gt; conversion if both are given).</source>
          <target state="translated">转换后的值将进行左调整（如果都给出，则覆盖 &lt;code&gt;'0'&lt;/code&gt; 转换）。</target>
        </trans-unit>
        <trans-unit id="232d6e721f1a28fd8262831489f11e15ce117ac5" translate="yes" xml:space="preserve">
          <source>The core built-in types for manipulating binary data are &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;. They are supported by &lt;a href=&quot;#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; which uses the &lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;buffer protocol&lt;/a&gt; to access the memory of other binary objects without needing to make a copy.</source>
          <target state="translated">处理二进制数据的核心内置类型是&lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;。它们由&lt;a href=&quot;#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; &lt;/a&gt;支持，该视图使用&lt;a href=&quot;https://docs.python.org/3.8/c-api/buffer.html#bufferobjects&quot;&gt;缓冲区协议&lt;/a&gt;访问其他二进制对象的内存，而无需进行复制。</target>
        </trans-unit>
        <trans-unit id="aff399bd4a4dfbace4eb3d199a751459af713c7e" translate="yes" xml:space="preserve">
          <source>The core built-in types for manipulating binary data are &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;. They are supported by &lt;a href=&quot;#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; which uses the &lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;buffer protocol&lt;/a&gt; to access the memory of other binary objects without needing to make a copy.</source>
          <target state="translated">操纵二进制数据的核心内置类型是&lt;a href=&quot;#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;。它们由&lt;a href=&quot;#memoryview&quot;&gt; &lt;code&gt;memoryview&lt;/code&gt; &lt;/a&gt;支持，该视图使用&lt;a href=&quot;https://docs.python.org/3.9/c-api/buffer.html#bufferobjects&quot;&gt;缓冲区协议&lt;/a&gt;访问其他二进制对象的内存，而无需进行复制。</target>
        </trans-unit>
        <trans-unit id="dc4d92fe7f0a481b0cfb48417959be4f39e5294d" translate="yes" xml:space="preserve">
          <source>The coroutine then has a chance to clean up or even deny the request by suppressing the exception with a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; &amp;hellip; &amp;hellip; &lt;code&gt;except CancelledError&lt;/code&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block. Therefore, unlike &lt;a href=&quot;asyncio-future#asyncio.Future.cancel&quot;&gt;&lt;code&gt;Future.cancel()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;Task.cancel()&lt;/code&gt;&lt;/a&gt; does not guarantee that the Task will be cancelled, although suppressing cancellation completely is not common and is actively discouraged.</source>
          <target state="translated">然后，协程有机会通过&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt;抑制异常来清理甚至拒绝请求&amp;hellip;&amp;hellip;&amp;hellip; &lt;code&gt;except CancelledError&lt;/code&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;阻塞。因此，与&lt;a href=&quot;asyncio-future#asyncio.Future.cancel&quot;&gt; &lt;code&gt;Future.cancel()&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;Task.cancel()&lt;/code&gt; &lt;/a&gt;不能保证取消任务，尽管完全抑制取消并不常见，并且积极劝阻。</target>
        </trans-unit>
        <trans-unit id="2dbd7b5d35ba022537e75df5de5c69f4ba45b31a" translate="yes" xml:space="preserve">
          <source>The coroutine then has a chance to clean up or even deny the request by suppressing the exception with a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; &amp;hellip; &amp;hellip; &lt;code&gt;except CancelledError&lt;/code&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block. Therefore, unlike &lt;a href=&quot;asyncio-future#asyncio.Future.cancel&quot;&gt;&lt;code&gt;Future.cancel()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.Task.cancel&quot;&gt;&lt;code&gt;Task.cancel()&lt;/code&gt;&lt;/a&gt; does not guarantee that the Task will be cancelled, although suppressing cancellation completely is not common and is actively discouraged.</source>
          <target state="translated">然后，协程有机会通过&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt;抑制异常来清理甚至拒绝请求&amp;hellip;&amp;hellip;&amp;hellip; &lt;code&gt;except CancelledError&lt;/code&gt; &amp;hellip;&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;阻塞。因此，与&lt;a href=&quot;asyncio-future#asyncio.Future.cancel&quot;&gt; &lt;code&gt;Future.cancel()&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;#asyncio.Task.cancel&quot;&gt; &lt;code&gt;Task.cancel()&lt;/code&gt; &lt;/a&gt;不能保证取消Task，尽管完全抑制取消并不常见，并且积极劝阻。</target>
        </trans-unit>
        <trans-unit id="bc1b5bbe66f8d0dac7e549cc0180896743986591" translate="yes" xml:space="preserve">
          <source>The corresponding error message, as provided by the operating system. It is formatted by the C functions &lt;code&gt;perror()&lt;/code&gt; under POSIX, and &lt;code&gt;FormatMessage()&lt;/code&gt; under Windows.</source>
          <target state="translated">相应的错误消息，由操作系统提供。它由POSIX下的C函数 &lt;code&gt;perror()&lt;/code&gt; 和Windows下的 &lt;code&gt;FormatMessage()&lt;/code&gt; 格式化。</target>
        </trans-unit>
        <trans-unit id="70d5450d9e84a7624d246a14f8334e480e6ee9b1" translate="yes" xml:space="preserve">
          <source>The corresponding simplest possible writing example is:</source>
          <target state="translated">相应的最简单的可能的写作范例是:。</target>
        </trans-unit>
        <trans-unit id="99ba8850b932395d55f5c7b65d46a83173ec0e7a" translate="yes" xml:space="preserve">
          <source>The count of unfinished tasks goes up whenever an item is added to the queue. The count goes down whenever a consumer calls &lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; to indicate that the item was retrieved and all work on it is complete. When the count of unfinished tasks drops to zero, &lt;a href=&quot;queue#queue.Queue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; unblocks.</source>
          <target state="translated">每当将项目添加到队列时，未完成任务的数量就会增加。每当使用者调用&lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; &lt;/a&gt;表示已检索到该项目并且该项目的所有工作已完成时，该计数就会减少。当未完成的任务数降至零时，&lt;a href=&quot;queue#queue.Queue.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; 会&lt;/a&gt;解除阻止。</target>
        </trans-unit>
        <trans-unit id="b83253d660a4a6f7f73e5535fc2a5ea3481eca66" translate="yes" xml:space="preserve">
          <source>The count of unfinished tasks goes up whenever an item is added to the queue. The count goes down whenever a consumer coroutine calls &lt;a href=&quot;#asyncio.Queue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; to indicate that the item was retrieved and all work on it is complete. When the count of unfinished tasks drops to zero, &lt;a href=&quot;#asyncio.Queue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; unblocks.</source>
          <target state="translated">每当将项目添加到队列时，未完成任务的数量就会增加。每当消费者协程调用&lt;a href=&quot;#asyncio.Queue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; &lt;/a&gt;表示已检索到该物品并且该物品的所有工作完成时，该计数就会减少。当未完成的任务数降至零时，&lt;a href=&quot;#asyncio.Queue.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; 会&lt;/a&gt;解除阻止。</target>
        </trans-unit>
        <trans-unit id="39ba1f2977ddb0979cf75b4e181dad95efd3edcb" translate="yes" xml:space="preserve">
          <source>The count of unfinished tasks goes up whenever an item is added to the queue. The count goes down whenever a consumer thread calls &lt;a href=&quot;#queue.Queue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; to indicate that the item was retrieved and all work on it is complete. When the count of unfinished tasks drops to zero, &lt;a href=&quot;#queue.Queue.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; unblocks.</source>
          <target state="translated">每当将项目添加到队列时，未完成任务的数量就会增加。每当使用者线程调用&lt;a href=&quot;#queue.Queue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; &lt;/a&gt;表示已检索到该项目并且该项目的所有工作均已完成时，该计数就会减少。当未完成的任务数降至零时，&lt;a href=&quot;#queue.Queue.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; 会&lt;/a&gt;解除阻止。</target>
        </trans-unit>
        <trans-unit id="e08e1d045e84c6cb3e0262a5e1278aaaa956caeb" translate="yes" xml:space="preserve">
          <source>The created &lt;code&gt;pyvenv.cfg&lt;/code&gt; file also includes the &lt;code&gt;include-system-site-packages&lt;/code&gt; key, set to &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;venv&lt;/code&gt; is run with the &lt;code&gt;--system-site-packages&lt;/code&gt; option, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">创建的 &lt;code&gt;pyvenv.cfg&lt;/code&gt; 文件还包含 &lt;code&gt;include-system-site-packages&lt;/code&gt; 密钥，如果 &lt;code&gt;venv&lt;/code&gt; 使用 &lt;code&gt;--system-site-packages&lt;/code&gt; 选项运行，则设置为 &lt;code&gt;true&lt;/code&gt; ，否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4361350e28309ad8fede5d4bbb572c800f97e105" translate="yes" xml:space="preserve">
          <source>The created transport is an implementation-dependent bidirectional stream.</source>
          <target state="translated">所创建的传输是一个依赖于实现的双向流。</target>
        </trans-unit>
        <trans-unit id="b42a75b2b3e3e154cd9c1ea1403f52e8177428d0" translate="yes" xml:space="preserve">
          <source>The crux of each test is a call to &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt; to check for an expected result; &lt;a href=&quot;#unittest.TestCase.assertTrue&quot;&gt;&lt;code&gt;assertTrue()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestCase.assertFalse&quot;&gt;&lt;code&gt;assertFalse()&lt;/code&gt;&lt;/a&gt; to verify a condition; or &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt; to verify that a specific exception gets raised. These methods are used instead of the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement so the test runner can accumulate all test results and produce a report.</source>
          <target state="translated">每个测试的症结在于对&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;的调用以检查预期结果。&lt;a href=&quot;#unittest.TestCase.assertTrue&quot;&gt; &lt;code&gt;assertTrue()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#unittest.TestCase.assertFalse&quot;&gt; &lt;code&gt;assertFalse()&lt;/code&gt; &lt;/a&gt;来验证条件；或&lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; &lt;/a&gt;来验证是否引发了特定异常。使用这些方法代替&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt;语句，因此测试运行器可以累积所有测试结果并生成报告。</target>
        </trans-unit>
        <trans-unit id="a391d77ae3244434edc4f526bb86bccb44f9dea6" translate="yes" xml:space="preserve">
          <source>The crux of each test is a call to &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt; to check for an expected result; &lt;a href=&quot;#unittest.TestCase.assertTrue&quot;&gt;&lt;code&gt;assertTrue()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestCase.assertFalse&quot;&gt;&lt;code&gt;assertFalse()&lt;/code&gt;&lt;/a&gt; to verify a condition; or &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt; to verify that a specific exception gets raised. These methods are used instead of the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement so the test runner can accumulate all test results and produce a report.</source>
          <target state="translated">每个测试的症结在于对&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;的调用以检查期望的结果。&lt;a href=&quot;#unittest.TestCase.assertTrue&quot;&gt; &lt;code&gt;assertTrue()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#unittest.TestCase.assertFalse&quot;&gt; &lt;code&gt;assertFalse()&lt;/code&gt; &lt;/a&gt;来验证条件；或&lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; &lt;/a&gt;来验证是否引发了特定异常。使用这些方法代替&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt;语句，因此测试运行器可以累积所有测试结果并生成报告。</target>
        </trans-unit>
        <trans-unit id="029b9273dbb02b6ea7417a3252afee02f4033d0b" translate="yes" xml:space="preserve">
          <source>The current algorithm has an early-out when it encounters a zero in the input. This means that the subsequent inputs are not tested for validity. (This behavior may change in the future.)</source>
          <target state="translated">当前算法在输入中遇到零时,会有一个提前退出的现象。这意味着后续的输入不进行有效性测试。这种行为将来可能会改变)。</target>
        </trans-unit>
        <trans-unit id="3d8bb9e42cfd6a06200a85ffbadb0aae65550388" translate="yes" xml:space="preserve">
          <source>The current implementation wakes up exactly &lt;em&gt;n&lt;/em&gt; threads, if at least &lt;em&gt;n&lt;/em&gt; threads are waiting. However, it&amp;rsquo;s not safe to rely on this behavior. A future, optimized implementation may occasionally wake up more than &lt;em&gt;n&lt;/em&gt; threads.</source>
          <target state="translated">如果至少有&lt;em&gt;n个&lt;/em&gt;线程正在等待，则当前实现将恰好唤醒&lt;em&gt;n &lt;/em&gt;&lt;em&gt;个&lt;/em&gt;线程。但是，依靠这种行为并不安全。未来的优化实现有时可能会唤醒&lt;em&gt;n个以上的&lt;/em&gt;线程。</target>
        </trans-unit>
        <trans-unit id="52a436678a1020bde214c0d97cdeb64bf8a1589a" translate="yes" xml:space="preserve">
          <source>The current internal state of the generator can also be queried. This is mostly useful for testing purposes, to ensure that internal state is being updated as expected:</source>
          <target state="translated">也可以查询发生器当前的内部状态。这主要是用于测试目的,以确保内部状态按照预期更新。</target>
        </trans-unit>
        <trans-unit id="b161fdbf8f8dfdde9548c335694aae4ea27b9243" translate="yes" xml:space="preserve">
          <source>The current line in the current frame is indicated by &lt;code&gt;-&amp;gt;&lt;/code&gt;. If an exception is being debugged, the line where the exception was originally raised or propagated is indicated by &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, if it differs from the current line.</source>
          <target state="translated">当前帧中的当前行由 &lt;code&gt;-&amp;gt;&lt;/code&gt; 表示。如果正在调试异常，则与当前行不同的地方是 &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 来表示最初引发或传播异常的行。</target>
        </trans-unit>
        <trans-unit id="68241a388af98feb65b13ec5fad01a05b24e1abb" translate="yes" xml:space="preserve">
          <source>The current process is replaced immediately. Open file objects and descriptors are not flushed, so if there may be data buffered on these open files, you should flush them using &lt;code&gt;sys.stdout.flush()&lt;/code&gt; or &lt;a href=&quot;#os.fsync&quot;&gt;&lt;code&gt;os.fsync()&lt;/code&gt;&lt;/a&gt; before calling an &lt;a href=&quot;#os.execl&quot;&gt;&lt;code&gt;exec*&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">当前过程将立即替换。打开文件对象和描述符不会刷新，因此，如果这些打开文件上有缓冲数据，则应在调用&lt;a href=&quot;#os.execl&quot;&gt; &lt;code&gt;exec*&lt;/code&gt; &lt;/a&gt;函数之前使用 &lt;code&gt;sys.stdout.flush()&lt;/code&gt; 或&lt;a href=&quot;#os.fsync&quot;&gt; &lt;code&gt;os.fsync()&lt;/code&gt; &lt;/a&gt;刷新它们。</target>
        </trans-unit>
        <trans-unit id="dc9aa1e766143ced63bf297199daa209252dd44e" translate="yes" xml:space="preserve">
          <source>The current value of the progress bar. In &amp;ldquo;determinate&amp;rdquo; mode, this represents the amount of work completed. In &amp;ldquo;indeterminate&amp;rdquo; mode, it is interpreted as modulo &lt;em&gt;maximum&lt;/em&gt;; that is, the progress bar completes one &amp;ldquo;cycle&amp;rdquo; when its value increases by &lt;em&gt;maximum&lt;/em&gt;.</source>
          <target state="translated">进度栏的当前值。在&amp;ldquo;确定&amp;rdquo;模式下，这表示完成的工作量。在&amp;ldquo;不确定&amp;rdquo;模式下，它被解释为模&lt;em&gt;最大&lt;/em&gt;；也就是说，进度条的值&lt;em&gt;最大&lt;/em&gt;增加时，它完成一个&amp;ldquo;周期&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="44c920e93ea8d45fdfebab1da8fb98b10091f105" translate="yes" xml:space="preserve">
          <source>The current-value setting of some widgets (like text entry widgets) can be connected directly to application variables by using special options. These options are &lt;code&gt;variable&lt;/code&gt;, &lt;code&gt;textvariable&lt;/code&gt;, &lt;code&gt;onvalue&lt;/code&gt;, &lt;code&gt;offvalue&lt;/code&gt;, and &lt;code&gt;value&lt;/code&gt;. This connection works both ways: if the variable changes for any reason, the widget it&amp;rsquo;s connected to will be updated to reflect the new value.</source>
          <target state="translated">某些小部件（例如文本输入小部件）的当前值设置可以通过使用特殊选项直接连接到应用程序变量。这些选项是 &lt;code&gt;variable&lt;/code&gt; ， &lt;code&gt;textvariable&lt;/code&gt; ， &lt;code&gt;onvalue&lt;/code&gt; ， &lt;code&gt;offvalue&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 。这种连接有两种作用：如果变量由于任何原因发生变化，则所连接的小部件将被更新以反映新值。</target>
        </trans-unit>
        <trans-unit id="a44b4e7cf28e49605dc244254c36f226b6f6a70e" translate="yes" xml:space="preserve">
          <source>The curses library does &amp;ldquo;line-breakout optimization&amp;rdquo; by looking for typeahead periodically while updating the screen. If input is found, and it is coming from a tty, the current update is postponed until refresh or doupdate is called again, allowing faster response to commands typed in advance. This function allows specifying a different file descriptor for typeahead checking.</source>
          <target state="translated">curses库通过在更新屏幕时定期查找预先输入来进行&amp;ldquo;行突破优化&amp;rdquo;。如果找到输入，并且它来自tty，则将当前更新推迟到再次刷新或再次调用doupdate时，以更快地响应预先输入的命令。此功能允许为预输入检查指定其他文件描述符。</target>
        </trans-unit>
        <trans-unit id="b01dfa066d22cfd22c2fff03df93dd7ff0910062" translate="yes" xml:space="preserve">
          <source>The cursor method accepts a single optional parameter &lt;em&gt;factory&lt;/em&gt;. If supplied, this must be a callable returning an instance of &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; or its subclasses.</source>
          <target state="translated">cursor方法接受单个可选参数&lt;em&gt;factory&lt;/em&gt;。如果提供，则必须是可调用的，返回&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;或其子类的实例。</target>
        </trans-unit>
        <trans-unit id="b06811008992340fc2dc7c59bbd5693bc9ce0ee4" translate="yes" xml:space="preserve">
          <source>The cursor will be unusable from this point forward; a &lt;a href=&quot;#sqlite3.ProgrammingError&quot;&gt;&lt;code&gt;ProgrammingError&lt;/code&gt;&lt;/a&gt; exception will be raised if any operation is attempted with the cursor.</source>
          <target state="translated">从现在开始，光标将无法使用。一个&lt;a href=&quot;#sqlite3.ProgrammingError&quot;&gt; &lt;code&gt;ProgrammingError&lt;/code&gt; &lt;/a&gt;如果任何操作试图用光标将引发异常。</target>
        </trans-unit>
        <trans-unit id="2adfa03e9423251347d2ddec72ca24f15adda1d8" translate="yes" xml:space="preserve">
          <source>The cut points are linearly interpolated from the two nearest data points. For example, if a cut point falls one-third of the distance between two sample values, &lt;code&gt;100&lt;/code&gt; and &lt;code&gt;112&lt;/code&gt;, the cut-point will evaluate to &lt;code&gt;104&lt;/code&gt;.</source>
          <target state="translated">切割点是从两个最近的数据点线性插值的。例如，如果切割点落在两个样本值 &lt;code&gt;100&lt;/code&gt; 和 &lt;code&gt;112&lt;/code&gt; 之间的距离的三分之一，则切割点的值将为 &lt;code&gt;104&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3acee39c7abbab9115fc8f08a2afc5d777a683e" translate="yes" xml:space="preserve">
          <source>The data compression is provided by the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">数据压缩由&lt;a href=&quot;zlib#module-zlib&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt;模块提供。</target>
        </trans-unit>
        <trans-unit id="4732c01492e63cdd9d7c665f57a987ee799fc855" translate="yes" xml:space="preserve">
          <source>The data format used by &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; is Python-specific. This has the advantage that there are no restrictions imposed by external standards such as JSON or XDR (which can&amp;rsquo;t represent pointer sharing); however it means that non-Python programs may not be able to reconstruct pickled Python objects.</source>
          <target state="translated">&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;使用的数据格式是特定于Python的。这样做的优点是不受外部标准（例如JSON或XDR）的限制（不能表示指针共享）；但是，这意味着非Python程序可能无法重建腌制的Python对象。</target>
        </trans-unit>
        <trans-unit id="ad490902b06ce6c474539cea2f88c4d882fde489" translate="yes" xml:space="preserve">
          <source>The data read is buffered in memory, so do not use this method if the data size is large or unlimited.</source>
          <target state="translated">读取的数据在内存中是有缓冲的,所以如果数据量大或无限制,请不要使用此方法。</target>
        </trans-unit>
        <trans-unit id="381273eadd2ef918438fcbe00869dea87bc7b0ee" translate="yes" xml:space="preserve">
          <source>The data returned by &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt; is the raw data returned by the server. This may be binary data (such as an image), plain text or (for example) HTML. The HTTP protocol provides type information in the reply header, which can be inspected by looking at the &lt;em&gt;Content-Type&lt;/em&gt; header. If the returned data is HTML, you can use the module &lt;a href=&quot;html.parser#module-html.parser&quot;&gt;&lt;code&gt;html.parser&lt;/code&gt;&lt;/a&gt; to parse it.</source>
          <target state="translated">返回的数据&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; &lt;/a&gt;是由服务器返回的原始数据。这可以是二进制数据（例如图像），纯文本或（例如）HTML。HTTP协议在回复标头中提供类型信息，可以通过查看&lt;em&gt;Content-Type&lt;/em&gt;标头来检查该信息。如果返回的数据是HTML，则可以使用模块&lt;a href=&quot;html.parser#module-html.parser&quot;&gt; &lt;code&gt;html.parser&lt;/code&gt; 对其&lt;/a&gt;进行解析。</target>
        </trans-unit>
        <trans-unit id="cb6758afc9485fe5a6fb81c1866b77aa22d9b3e5" translate="yes" xml:space="preserve">
          <source>The data you&amp;rsquo;ve saved is persistent and is available in subsequent sessions:</source>
          <target state="translated">您保存的数据是永久性的，可以在后续会话中使用：</target>
        </trans-unit>
        <trans-unit id="07798be371fad61c3fb93bf3ac316396b61294ce" translate="yes" xml:space="preserve">
          <source>The database will contain just the schema and the validation records when this function returns.</source>
          <target state="translated">当这个函数返回时,数据库将只包含模式和验证记录。</target>
        </trans-unit>
        <trans-unit id="d274876e4079ca20009328bf8e5cde4e56d7abf9" translate="yes" xml:space="preserve">
          <source>The debugger is extensible &amp;ndash; it is actually defined as the class &lt;a href=&quot;#pdb.Pdb&quot;&gt;&lt;code&gt;Pdb&lt;/code&gt;&lt;/a&gt;. This is currently undocumented but easily understood by reading the source. The extension interface uses the modules &lt;a href=&quot;bdb#module-bdb&quot;&gt;&lt;code&gt;bdb&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmd#module-cmd&quot;&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">调试器是可扩展的&amp;ndash;实际上定义为类&lt;a href=&quot;#pdb.Pdb&quot;&gt; &lt;code&gt;Pdb&lt;/code&gt; &lt;/a&gt;。目前尚无记录，但通过阅读源代码很容易理解。扩展接口使用模块&lt;a href=&quot;bdb#module-bdb&quot;&gt; &lt;code&gt;bdb&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;cmd#module-cmd&quot;&gt; &lt;code&gt;cmd&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="095b5670be6e411b1e73958df31e2f6ac1da2d0c" translate="yes" xml:space="preserve">
          <source>The debugger supports &lt;a href=&quot;#debugger-aliases&quot;&gt;aliases&lt;/a&gt;. Aliases can have parameters which allows one a certain level of adaptability to the context under examination.</source>
          <target state="translated">调试器支持&lt;a href=&quot;#debugger-aliases&quot;&gt;别名&lt;/a&gt;。别名可以具有允许对被检查的上下文有一定程度的适应性的参数。</target>
        </trans-unit>
        <trans-unit id="6427247e8f8887424311f6b6d15aa4b617225615" translate="yes" xml:space="preserve">
          <source>The debugger&amp;rsquo;s prompt is &lt;code&gt;(Pdb)&lt;/code&gt;. Typical usage to run a program under control of the debugger is:</source>
          <target state="translated">调试器的提示是 &lt;code&gt;(Pdb)&lt;/code&gt; 。在调试器的控制下运行程序的典型用法是：</target>
        </trans-unit>
        <trans-unit id="5def3aa4d7a228de01c175df183f95bac9ef0b71" translate="yes" xml:space="preserve">
          <source>The debugging flags necessary for the collector to print information about a leaking program (equal to &lt;code&gt;DEBUG_COLLECTABLE | DEBUG_UNCOLLECTABLE |
DEBUG_SAVEALL&lt;/code&gt;).</source>
          <target state="translated">收集器打印有关泄漏程序的信息所必需的调试标志（等于 &lt;code&gt;DEBUG_COLLECTABLE | DEBUG_UNCOLLECTABLE | DEBUG_SAVEALL&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="90287af497864716aa30b5d7a8cbe1542d08cbc7" translate="yes" xml:space="preserve">
          <source>The decimal module incorporates a notion of significant places so that &lt;code&gt;1.30
+ 1.20&lt;/code&gt; is &lt;code&gt;2.50&lt;/code&gt;. The trailing zero is kept to indicate significance. This is the customary presentation for monetary applications. For multiplication, the &amp;ldquo;schoolbook&amp;rdquo; approach uses all the figures in the multiplicands. For instance, &lt;code&gt;1.3 * 1.2&lt;/code&gt; gives &lt;code&gt;1.56&lt;/code&gt; while &lt;code&gt;1.30 *
1.20&lt;/code&gt; gives &lt;code&gt;1.5600&lt;/code&gt;.</source>
          <target state="translated">十进制模块包含有效位的概念，因此 &lt;code&gt;1.30 + 1.20&lt;/code&gt; 为 &lt;code&gt;2.50&lt;/code&gt; 。尾随零将保留以指示重要性。这是货币应用程序的惯用表示。对于乘法，&amp;ldquo;教科书&amp;rdquo;方法使用被乘数中的所有数字。例如， &lt;code&gt;1.3 * 1.2&lt;/code&gt; 给出 &lt;code&gt;1.56&lt;/code&gt; ,而 &lt;code&gt;1.30 * 1.20&lt;/code&gt; 给出 &lt;code&gt;1.5600&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc5331a4ec577ee10bc6dc4f46c2d0c2800f6ff8" translate="yes" xml:space="preserve">
          <source>The decimal module was designed to support &amp;ldquo;without prejudice, both exact unrounded decimal arithmetic (sometimes called fixed-point arithmetic) and rounded floating-point arithmetic.&amp;rdquo; &amp;ndash; excerpt from the decimal arithmetic specification.</source>
          <target state="translated">十进制模块被设计为支持&amp;ldquo;在不存在偏见的情况下，精确的无舍入十进制算术（有时称为定点算术）和舍入浮点算术。&amp;rdquo; &amp;ndash;摘自十进制算术规范。</target>
        </trans-unit>
        <trans-unit id="fcd953820c180c8fd51fd721bc40a9145788703c" translate="yes" xml:space="preserve">
          <source>The decoder must be able to handle zero length input and return an empty object of the output object type in this situation.</source>
          <target state="translated">解码器必须能够处理零长度输入,并在这种情况下返回一个输出对象类型的空对象。</target>
        </trans-unit>
        <trans-unit id="4370c4771bb3ea3eff3bcc09178bfbdc4274e2bd" translate="yes" xml:space="preserve">
          <source>The decorated method will take in the &lt;strong&gt;name&lt;/strong&gt; of the module to be loaded as expected for a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;. If the module is not found in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt; then a new one is constructed. Regardless of where the module came from, &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt;&lt;code&gt;__loader__&lt;/code&gt;&lt;/a&gt; set to &lt;strong&gt;self&lt;/strong&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt; is set based on what &lt;a href=&quot;#importlib.abc.InspectLoader.is_package&quot;&gt;&lt;code&gt;importlib.abc.InspectLoader.is_package()&lt;/code&gt;&lt;/a&gt; returns (if available). These attributes are set unconditionally to support reloading.</source>
          <target state="translated">装饰方法将在&lt;strong&gt;名&lt;/strong&gt;人们所期待的要加载的模块的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;加载器&lt;/a&gt;。如果在&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中&lt;/a&gt;找不到该模块，则将构建一个新模块。无论从模块来到那里&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__loader__&quot;&gt; &lt;code&gt;__loader__&lt;/code&gt; &lt;/a&gt;设定为&lt;strong&gt;自身&lt;/strong&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; &lt;/a&gt;是基于怎样的设定&lt;a href=&quot;#importlib.abc.InspectLoader.is_package&quot;&gt; &lt;code&gt;importlib.abc.InspectLoader.is_package()&lt;/code&gt; &lt;/a&gt;返回（如果可用）。这些属性是无条件设置的，以支持重新加载。</target>
        </trans-unit>
        <trans-unit id="b24c82180702500e76309b022bd08cdb12282f6b" translate="yes" xml:space="preserve">
          <source>The decorated method will take in the &lt;strong&gt;name&lt;/strong&gt; of the module to be loaded as expected for a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;. If the module is not found in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt; then a new one is constructed. Regardless of where the module came from, &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__loader__&quot;&gt;&lt;code&gt;__loader__&lt;/code&gt;&lt;/a&gt; set to &lt;strong&gt;self&lt;/strong&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__package__&quot;&gt;&lt;code&gt;__package__&lt;/code&gt;&lt;/a&gt; is set based on what &lt;a href=&quot;#importlib.abc.InspectLoader.is_package&quot;&gt;&lt;code&gt;importlib.abc.InspectLoader.is_package()&lt;/code&gt;&lt;/a&gt; returns (if available). These attributes are set unconditionally to support reloading.</source>
          <target state="translated">装饰方法将在&lt;strong&gt;名&lt;/strong&gt;人们所期待的要加载的模块的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;加载器&lt;/a&gt;。如果在&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中&lt;/a&gt;找不到该模块，则将构造一个新模块。无论从模块来到那里&lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__loader__&quot;&gt; &lt;code&gt;__loader__&lt;/code&gt; &lt;/a&gt;设定为&lt;strong&gt;自身&lt;/strong&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#__package__&quot;&gt; &lt;code&gt;__package__&lt;/code&gt; &lt;/a&gt;是基于怎样的设定&lt;a href=&quot;#importlib.abc.InspectLoader.is_package&quot;&gt; &lt;code&gt;importlib.abc.InspectLoader.is_package()&lt;/code&gt; &lt;/a&gt;返回（如果可用）。这些属性是无条件设置的，以支持重新加载。</target>
        </trans-unit>
        <trans-unit id="5cffc98a45b4b4fc8fac139e7a5b9aef8a25d0d4" translate="yes" xml:space="preserve">
          <source>The decorator also provides a &lt;code&gt;cache_clear()&lt;/code&gt; function for clearing or invalidating the cache.</source>
          <target state="translated">装饰器还提供用于清除或使高速缓存无效的 &lt;code&gt;cache_clear()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="9241d41c4f3d0d35ed609d927b5431512d3a0115" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; mechanism behaves differently with different types of objects, as it attempts to produce the most relevant, rather than complete, information:</source>
          <target state="translated">默认的&lt;a href=&quot;#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;机制对不同类型的对象的行为有所不同，因为它试图产生最相关的信息，而不是完整的信息：</target>
        </trans-unit>
        <trans-unit id="d84a97fb732f65d135a8de533f5d2309e5002866" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; iterator iterates over message representations, not keys as the default dictionary iterator does. Moreover, modification of a mailbox during iteration is safe and well-defined. Messages added to the mailbox after an iterator is created will not be seen by the iterator. Messages removed from the mailbox before the iterator yields them will be silently skipped, though using a key from an iterator may result in a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception if the corresponding message is subsequently removed.</source>
          <target state="translated">默认的&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;迭代器遍历邮件表示形式，而不是像默认的字典迭代器那样遍历键。此外，在迭代过程中修改邮箱是安全且定义明确的。创建迭代器后，添加到邮箱的邮件将不会被迭代器看到。在迭代器生成之前从邮箱中删除的消息将被静默跳过，尽管如果随后删除了相应的消息，则使用来自迭代器的键可能会导致&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="7023b4c42786b06e66d2c26c5b1ab41a4737daa9" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;#random.random&quot;&gt;&lt;code&gt;random()&lt;/code&gt;&lt;/a&gt; returns multiples of 2⁻⁵&amp;sup3; in the range &lt;em&gt;0.0 &amp;le; x &amp;lt; 1.0&lt;/em&gt;. All such numbers are evenly spaced and are exactly representable as Python floats. However, many other representable floats in that interval are not possible selections. For example, &lt;code&gt;0.05954861408025609&lt;/code&gt; isn&amp;rsquo;t an integer multiple of 2⁻⁵&amp;sup3;.</source>
          <target state="translated">默认的&lt;a href=&quot;#random.random&quot;&gt; &lt;code&gt;random()&lt;/code&gt; &lt;/a&gt;返回2⁻⁵&amp;sup3;的倍数，范围为0.0&amp;le;x &lt;em&gt;&amp;lt;1.0&lt;/em&gt;。所有这些数字均等距分布，并且可以精确地表示为Python浮点数。但是，该间隔中的许多其他可表示的浮点数都不是可能的选择。例如， &lt;code&gt;0.05954861408025609&lt;/code&gt; 不是2 &amp;times;3的整数倍。</target>
        </trans-unit>
        <trans-unit id="e15110f55746d7dd1c750929856c5c1b270b72ba" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;#zoneinfo.TZPATH&quot;&gt;&lt;code&gt;TZPATH&lt;/code&gt;&lt;/a&gt; includes several common deployment locations for the time zone database (except on Windows, where there are no &amp;ldquo;well-known&amp;rdquo; locations for time zone data). On POSIX systems, downstream distributors and those building Python from source who know where their system time zone data is deployed may change the default time zone path by specifying the compile-time option &lt;code&gt;TZPATH&lt;/code&gt; (or, more likely, the &lt;code&gt;configure&lt;/code&gt; flag &lt;code&gt;--with-tzpath&lt;/code&gt;), which should be a string delimited by &lt;a href=&quot;os#os.pathsep&quot;&gt;&lt;code&gt;os.pathsep&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认的&lt;a href=&quot;#zoneinfo.TZPATH&quot;&gt; &lt;code&gt;TZPATH&lt;/code&gt; &lt;/a&gt;包括时区数据库的几个常见部署位置（Windows上除外，在Windows上没有时区数据的&amp;ldquo;已知&amp;rdquo;位置）。在POSIX系统中，下游的分销商和来自源的建设的Python谁知道他们的系统时区数据部署可以通过指定编译时选项更改默认的时区路径 &lt;code&gt;TZPATH&lt;/code&gt; （或者，更可能的是， &lt;code&gt;configure&lt;/code&gt; 标志 &lt;code&gt;--with-tzpath&lt;/code&gt; ），它应该是一个由&lt;a href=&quot;os#os.pathsep&quot;&gt; &lt;code&gt;os.pathsep&lt;/code&gt; &lt;/a&gt;分隔的字符串。</target>
        </trans-unit>
        <trans-unit id="236a0e626d5c5d12c8775257081e57eb6e890e38" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;#zoneinfo.TZPATH&quot;&gt;&lt;code&gt;TZPATH&lt;/code&gt;&lt;/a&gt; when not otherwise specified can be configured at &lt;a href=&quot;#zoneinfo-data-compile-time-config&quot;&gt;compile time&lt;/a&gt;.</source>
          <target state="translated">如果未另行指定，则默认的&lt;a href=&quot;#zoneinfo.TZPATH&quot;&gt; &lt;code&gt;TZPATH&lt;/code&gt; &lt;/a&gt;可以在&lt;a href=&quot;#zoneinfo-data-compile-time-config&quot;&gt;编译时&lt;/a&gt;进行配置。</target>
        </trans-unit>
        <trans-unit id="9f6bd331cdd8851c589608705300fea060ae29b3" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;PathFinder&lt;/code&gt; for Python includes a hook that calls into &lt;code&gt;importlib.metadata.MetadataPathFinder&lt;/code&gt; for finding distributions loaded from typical file-system-based paths.</source>
          <target state="translated">Python 的默认 &lt;code&gt;PathFinder&lt;/code&gt; 包含一个钩子，该钩子调用 &lt;code&gt;importlib.metadata.MetadataPathFinder&lt;/code&gt; ,以查找从典型的基于文件系统的路径加载的发行版。</target>
        </trans-unit>
        <trans-unit id="e08f1b8ed360aa3fdbcb31fe8c46e2aefb98f856" translate="yes" xml:space="preserve">
          <source>The default &lt;em&gt;format_spec&lt;/em&gt; is an empty string which usually gives the same effect as calling &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str(value)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认的&lt;em&gt;format_spec&lt;/em&gt;是一个空字符串，通常产生与调用&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str(value)&lt;/code&gt; &lt;/a&gt;相同的效果。</target>
        </trans-unit>
        <trans-unit id="916e4b68347b1b5b55f8b8dfbbfb3aa9f77bde33" translate="yes" xml:space="preserve">
          <source>The default &lt;em&gt;locals&lt;/em&gt; act as described for function &lt;a href=&quot;#locals&quot;&gt;&lt;code&gt;locals()&lt;/code&gt;&lt;/a&gt; below: modifications to the default &lt;em&gt;locals&lt;/em&gt; dictionary should not be attempted. Pass an explicit &lt;em&gt;locals&lt;/em&gt; dictionary if you need to see effects of the code on &lt;em&gt;locals&lt;/em&gt; after function &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; returns.</source>
          <target state="translated">默认的&lt;em&gt;本地&lt;/em&gt;变量的行为如下面对函数&lt;a href=&quot;#locals&quot;&gt; &lt;code&gt;locals()&lt;/code&gt; 的&lt;/a&gt;描述：不应尝试对默认的&lt;em&gt;本地&lt;/em&gt;变量字典进行修改。传递一个明确的&lt;em&gt;当地人&lt;/em&gt;解释，如果你需要看到的代码的作用&lt;em&gt;当地人&lt;/em&gt;后功能&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;的回报。</target>
        </trans-unit>
        <trans-unit id="fcc1fc4b3a3ae0a82e1e9c7f968eba8efba69cd8" translate="yes" xml:space="preserve">
          <source>The default &lt;em&gt;method&lt;/em&gt; is &amp;ldquo;exclusive&amp;rdquo; and is used for data sampled from a population that can have more extreme values than found in the samples. The portion of the population falling below the &lt;em&gt;i-th&lt;/em&gt; of &lt;em&gt;m&lt;/em&gt; sorted data points is computed as &lt;code&gt;i / (m + 1)&lt;/code&gt;. Given nine sample values, the method sorts them and assigns the following percentiles: 10%, 20%, 30%, 40%, 50%, 60%, 70%, 80%, 90%.</source>
          <target state="translated">默认&lt;em&gt;方法&lt;/em&gt;是&amp;ldquo;排他性&amp;rdquo;，用于从总体中抽取的极端值可能比样本中发现的更多的数据。人口落入下方的所述部分&lt;em&gt;的第i个&lt;/em&gt;的&lt;em&gt;米&lt;/em&gt;排序的数据点计算为 &lt;code&gt;i / (m + 1)&lt;/code&gt; 。给定九个样本值，该方法对它们进行排序并分配以下百分位数：10％，20％，30％，40％，50％，60％，70％，80％，90％。</target>
        </trans-unit>
        <trans-unit id="cc26c9794d7c7424fc9e7bc14e214666252c9274" translate="yes" xml:space="preserve">
          <source>The default asyncio event loop implementation on &lt;strong&gt;Windows&lt;/strong&gt; does not support subprocesses. Subprocesses are available for Windows if a &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; is used. See &lt;a href=&quot;asyncio-platforms#asyncio-windows-subprocess&quot;&gt;Subprocess Support on Windows&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;Windows&lt;/strong&gt;上的默认asyncio事件循环实现不支持子进程。如果使用&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; ,&lt;/a&gt;则子过程可用于Windows 。有关详细信息，请参见&lt;a href=&quot;asyncio-platforms#asyncio-windows-subprocess&quot;&gt;Windows上的子进程支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="73f9f71a010dfccdb59de7aba2ccdae124aedfba" translate="yes" xml:space="preserve">
          <source>The default asyncio event loop on &lt;strong&gt;Windows&lt;/strong&gt; does not support subprocesses. See &lt;a href=&quot;asyncio-platforms#asyncio-windows-subprocess&quot;&gt;Subprocess Support on Windows&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;Windows&lt;/strong&gt;上的默认asyncio事件循环不支持子进程。有关详细信息，请参见&lt;a href=&quot;asyncio-platforms#asyncio-windows-subprocess&quot;&gt;Windows上的子进程支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="320d764d5f91986c0ce197a99b5dafc84e75fdbe" translate="yes" xml:space="preserve">
          <source>The default asyncio policy. Uses &lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; on Unix and &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; on Windows.</source>
          <target state="translated">默认的异步策略。在Unix 上使用&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; &lt;/a&gt;，在Windows 上使用&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99843d8504993a7ac9fb3c4008f6662e1e83ea6f" translate="yes" xml:space="preserve">
          <source>The default category for &lt;a href=&quot;#warnings.warn&quot;&gt;&lt;code&gt;warn()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#warnings.warn&quot;&gt; &lt;code&gt;warn()&lt;/code&gt; &lt;/a&gt;的默认类别。</target>
        </trans-unit>
        <trans-unit id="32f43bb65b67ab4e0064d8679c4a8ed6f5c74251" translate="yes" xml:space="preserve">
          <source>The default character encoding: &lt;code&gt;'utf-8'&lt;/code&gt; on Windows, the value returned by &lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">默认字符编码：Windows上的 &lt;code&gt;'utf-8'&lt;/code&gt; ，否则为&lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt; &lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt; &lt;/a&gt;返回的值。</target>
        </trans-unit>
        <trans-unit id="699b9c61ff10c5e5fb972c7c169896f4dd36a566" translate="yes" xml:space="preserve">
          <source>The default converters are registered under the name &amp;ldquo;date&amp;rdquo; for &lt;a href=&quot;datetime#datetime.date&quot;&gt;&lt;code&gt;datetime.date&lt;/code&gt;&lt;/a&gt; and under the name &amp;ldquo;timestamp&amp;rdquo; for &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认的转换器以名称&amp;ldquo;日期&amp;rdquo;为注册&lt;a href=&quot;datetime#datetime.date&quot;&gt; &lt;code&gt;datetime.date&lt;/code&gt; &lt;/a&gt;和以名称&amp;ldquo;时间戳&amp;rdquo;为&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2494a42ce8bba5dc27f841ef5b2c492ffdeada25" translate="yes" xml:space="preserve">
          <source>The default encoding is UTF-8, following &lt;a href=&quot;https://tools.ietf.org/html/rfc2640.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2640&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">遵循&lt;a href=&quot;https://tools.ietf.org/html/rfc2640.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2640&lt;/strong&gt;&lt;/a&gt;的默认编码为UTF-8 。</target>
        </trans-unit>
        <trans-unit id="3141ba81acf49f8773568f9b1b5765ab02702638" translate="yes" xml:space="preserve">
          <source>The default environment variables to be included in every request&amp;rsquo;s WSGI environment. By default, this is a copy of &lt;code&gt;os.environ&lt;/code&gt; at the time that &lt;a href=&quot;#module-wsgiref.handlers&quot;&gt;&lt;code&gt;wsgiref.handlers&lt;/code&gt;&lt;/a&gt; was imported, but subclasses can either create their own at the class or instance level. Note that the dictionary should be considered read-only, since the default value is shared between multiple classes and instances.</source>
          <target state="translated">每个请求的WSGI环境中将包含的默认环境变量。默认情况下，这是&lt;a href=&quot;#module-wsgiref.handlers&quot;&gt; &lt;code&gt;wsgiref.handlers&lt;/code&gt; &lt;/a&gt;导入时 &lt;code&gt;os.environ&lt;/code&gt; 的副本，但是子类可以在类或实例级别创建自己的副本。请注意，字典应被视为只读，因为默认值在多个类和实例之间共享。</target>
        </trans-unit>
        <trans-unit id="767891311ec1c9837f1ed84b97b20ded10b66b5a" translate="yes" xml:space="preserve">
          <source>The default exception handler implementation.</source>
          <target state="translated">默认的异常处理程序实现。</target>
        </trans-unit>
        <trans-unit id="3d5425253eafabfc0e77cfbd292665f236078454" translate="yes" xml:space="preserve">
          <source>The default for &lt;em&gt;start&lt;/em&gt; is 0, which means to start at the beginning of the file. The default for &lt;em&gt;len&lt;/em&gt; is 0 which means to lock to the end of the file. The default for &lt;em&gt;whence&lt;/em&gt; is also 0.</source>
          <target state="translated">&lt;em&gt;start&lt;/em&gt;的默认值为0，表示从文件的开头开始。&lt;em&gt;len&lt;/em&gt;的默认值为0，表示锁定到文件末尾。&lt;em&gt;wherece&lt;/em&gt;的默认值也是0。</target>
        </trans-unit>
        <trans-unit id="abe205ba756ba81b25d657d298d23ad7a01daa01" translate="yes" xml:space="preserve">
          <source>The default format for creating archives. This is currently &lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt;&lt;code&gt;PAX_FORMAT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于创建档案的默认格式。当前是&lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt; &lt;code&gt;PAX_FORMAT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c9c328c8250ee7fbc742006787cb7e770c62bb77" translate="yes" xml:space="preserve">
          <source>The default hook formats &lt;em&gt;err_msg&lt;/em&gt; and &lt;em&gt;object&lt;/em&gt; as: &lt;code&gt;f'{err_msg}: {object!r}'&lt;/code&gt;; use &amp;ldquo;Exception ignored in&amp;rdquo; error message if &lt;em&gt;err_msg&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">默认挂钩将&lt;em&gt;err_msg&lt;/em&gt;和&lt;em&gt;object的&lt;/em&gt;格式设置为： &lt;code&gt;f'{err_msg}: {object!r}'&lt;/code&gt; ; 如果&lt;em&gt;err_msg&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ,则使用&amp;ldquo;忽略异常中&amp;rdquo;错误消息。</target>
        </trans-unit>
        <trans-unit id="1589b3dd1729a28688aa3d39f228898b217d6cf6" translate="yes" xml:space="preserve">
          <source>The default implementation appends a tuple &lt;code&gt;(test, formatted_err)&lt;/code&gt; to the instance&amp;rsquo;s &lt;a href=&quot;#unittest.TestResult.errors&quot;&gt;&lt;code&gt;errors&lt;/code&gt;&lt;/a&gt; attribute, where &lt;em&gt;formatted_err&lt;/em&gt; is a formatted traceback derived from &lt;em&gt;err&lt;/em&gt;.</source>
          <target state="translated">默认实现将一个元组 &lt;code&gt;(test, formatted_err)&lt;/code&gt; 附加到实例的&lt;a href=&quot;#unittest.TestResult.errors&quot;&gt; &lt;code&gt;errors&lt;/code&gt; &lt;/a&gt;属性，其中&lt;em&gt;formatted_err&lt;/em&gt;是从&lt;em&gt;err&lt;/em&gt;派生的格式化回溯。</target>
        </trans-unit>
        <trans-unit id="b56f4f78eb0697ad959e9a5452169aa756143e2d" translate="yes" xml:space="preserve">
          <source>The default implementation appends a tuple &lt;code&gt;(test, formatted_err)&lt;/code&gt; to the instance&amp;rsquo;s &lt;a href=&quot;#unittest.TestResult.expectedFailures&quot;&gt;&lt;code&gt;expectedFailures&lt;/code&gt;&lt;/a&gt; attribute, where &lt;em&gt;formatted_err&lt;/em&gt; is a formatted traceback derived from &lt;em&gt;err&lt;/em&gt;.</source>
          <target state="translated">默认实现将一个元组 &lt;code&gt;(test, formatted_err)&lt;/code&gt; 附加到实例的&lt;a href=&quot;#unittest.TestResult.expectedFailures&quot;&gt; &lt;code&gt;expectedFailures&lt;/code&gt; &lt;/a&gt;属性，其中&lt;em&gt;formatted_err&lt;/em&gt;是从&lt;em&gt;err&lt;/em&gt;派生的格式化回溯。</target>
        </trans-unit>
        <trans-unit id="21d58dd74e7a05377422bda965cebdafd7e57ccd" translate="yes" xml:space="preserve">
          <source>The default implementation appends a tuple &lt;code&gt;(test, formatted_err)&lt;/code&gt; to the instance&amp;rsquo;s &lt;a href=&quot;#unittest.TestResult.failures&quot;&gt;&lt;code&gt;failures&lt;/code&gt;&lt;/a&gt; attribute, where &lt;em&gt;formatted_err&lt;/em&gt; is a formatted traceback derived from &lt;em&gt;err&lt;/em&gt;.</source>
          <target state="translated">默认实现将一个元组 &lt;code&gt;(test, formatted_err)&lt;/code&gt; 附加到实例的&lt;a href=&quot;#unittest.TestResult.failures&quot;&gt; &lt;code&gt;failures&lt;/code&gt; &lt;/a&gt;属性，其中&lt;em&gt;formatted_err&lt;/em&gt;是从&lt;em&gt;err&lt;/em&gt;派生的格式化跟踪。</target>
        </trans-unit>
        <trans-unit id="43823f6cabcd0ef79ab62b973c7aee77f8f732d4" translate="yes" xml:space="preserve">
          <source>The default implementation appends a tuple &lt;code&gt;(test, reason)&lt;/code&gt; to the instance&amp;rsquo;s &lt;a href=&quot;#unittest.TestResult.skipped&quot;&gt;&lt;code&gt;skipped&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">默认实现将元组 &lt;code&gt;(test, reason)&lt;/code&gt; 附加到实例的&lt;a href=&quot;#unittest.TestResult.skipped&quot;&gt; &lt;code&gt;skipped&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="a68c1418f74a6200967462b2f59268c9e36ca435" translate="yes" xml:space="preserve">
          <source>The default implementation appends the test to the instance&amp;rsquo;s &lt;a href=&quot;#unittest.TestResult.unexpectedSuccesses&quot;&gt;&lt;code&gt;unexpectedSuccesses&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">默认实现将测试附加到实例的&lt;a href=&quot;#unittest.TestResult.unexpectedSuccesses&quot;&gt; &lt;code&gt;unexpectedSuccesses&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="85209bebc3f90535b12a5ecb3ddcc009e82c4607" translate="yes" xml:space="preserve">
          <source>The default implementation calls the &amp;lsquo;namer&amp;rsquo; attribute of the handler, if it&amp;rsquo;s callable, passing the default name to it. If the attribute isn&amp;rsquo;t callable (the default is &lt;code&gt;None&lt;/code&gt;), the name is returned unchanged.</source>
          <target state="translated">默认实现调用处理程序的'namer'属性（如果可以调用），并将默认名称传递给该属性。如果该属性不可调用（默认值为 &lt;code&gt;None&lt;/code&gt; ），则名称将保持不变。</target>
        </trans-unit>
        <trans-unit id="cc7fe6b93c4fa5530304a79d65cec6508761d9ab" translate="yes" xml:space="preserve">
          <source>The default implementation calls the &amp;lsquo;rotator&amp;rsquo; attribute of the handler, if it&amp;rsquo;s callable, passing the source and dest arguments to it. If the attribute isn&amp;rsquo;t callable (the default is &lt;code&gt;None&lt;/code&gt;), the source is simply renamed to the destination.</source>
          <target state="translated">默认实现调用处理程序的'rotator'属性（如果可以调用的话），并将source和dest参数传递给它。如果该属性不可调用（默认值为 &lt;code&gt;None&lt;/code&gt; ），则仅将源重命名为目标。</target>
        </trans-unit>
        <trans-unit id="8abbab4876bdfe46805a30d39840791095f498ce" translate="yes" xml:space="preserve">
          <source>The default implementation calls the &lt;code&gt;append&lt;/code&gt; method of the &lt;code&gt;defects&lt;/code&gt; attribute of &lt;em&gt;obj&lt;/em&gt;. When the email package calls &lt;a href=&quot;#email.policy.Policy.handle_defect&quot;&gt;&lt;code&gt;handle_defect&lt;/code&gt;&lt;/a&gt;, &lt;em&gt;obj&lt;/em&gt; will normally have a &lt;code&gt;defects&lt;/code&gt; attribute that has an &lt;code&gt;append&lt;/code&gt; method. Custom object types used with the email package (for example, custom &lt;code&gt;Message&lt;/code&gt; objects) should also provide such an attribute, otherwise defects in parsed messages will raise unexpected errors.</source>
          <target state="translated">默认实现调用&lt;em&gt;obj&lt;/em&gt;的 &lt;code&gt;defects&lt;/code&gt; 属性的 &lt;code&gt;append&lt;/code&gt; 方法。当电子邮件包调用&lt;a href=&quot;#email.policy.Policy.handle_defect&quot;&gt; &lt;code&gt;handle_defect&lt;/code&gt; 时&lt;/a&gt;，&lt;em&gt;obj&lt;/em&gt;通常将具有一个带有 &lt;code&gt;append&lt;/code&gt; 方法的 &lt;code&gt;defects&lt;/code&gt; 属性。与电子邮件包一起使用的自定义对象类型（例如，自定义 &lt;code&gt;Message&lt;/code&gt; 对象）也应提供这样的属性，否则解析的消息中的缺陷将引发意外错误。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd2beae2a9d6bd5ba6ba29d1fa217c82f8717685" translate="yes" xml:space="preserve">
          <source>The default implementation checks the &lt;a href=&quot;#email.policy.Policy.raise_on_defect&quot;&gt;&lt;code&gt;raise_on_defect&lt;/code&gt;&lt;/a&gt; flag. If it is &lt;code&gt;True&lt;/code&gt;, &lt;em&gt;defect&lt;/em&gt; is raised as an exception. If it is &lt;code&gt;False&lt;/code&gt; (the default), &lt;em&gt;obj&lt;/em&gt; and &lt;em&gt;defect&lt;/em&gt; are passed to &lt;a href=&quot;#email.policy.Policy.register_defect&quot;&gt;&lt;code&gt;register_defect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认实现检查一下&lt;a href=&quot;#email.policy.Policy.raise_on_defect&quot;&gt; &lt;code&gt;raise_on_defect&lt;/code&gt; &lt;/a&gt;标志。如果是 &lt;code&gt;True&lt;/code&gt; ，&lt;em&gt;缺陷&lt;/em&gt;会抛出一个例外。如果它为 &lt;code&gt;False&lt;/code&gt; （默认值），则&lt;em&gt;obj&lt;/em&gt;和&lt;em&gt;缺陷&lt;/em&gt;将传递给&lt;a href=&quot;#email.policy.Policy.register_defect&quot;&gt; &lt;code&gt;register_defect()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4694874ec5c0e9b8375091742765ef75ea74e946" translate="yes" xml:space="preserve">
          <source>The default implementation decides how to dispatch a frame, depending on the type of event (passed as a string) that is about to be executed. &lt;em&gt;event&lt;/em&gt; can be one of the following:</source>
          <target state="translated">默认实现取决于将要执行的事件类型（作为字符串传递）决定如何调度帧。&lt;em&gt;事件&lt;/em&gt;可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="61b526d9bcd0fde98e256c446b3ae46e0b58b532" translate="yes" xml:space="preserve">
          <source>The default implementation defers to &lt;a href=&quot;#io.RawIOBase.readall&quot;&gt;&lt;code&gt;readall()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt;&lt;code&gt;readinto()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认实现遵从&lt;a href=&quot;#io.RawIOBase.readall&quot;&gt; &lt;code&gt;readall()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#io.RawIOBase.readinto&quot;&gt; &lt;code&gt;readinto()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="30e7acef377f89e7b6c8ef2a0dae31deb9d115cc" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing when the outcome is a success, and records subtest failures as normal failures.</source>
          <target state="translated">当结果为成功时,默认的实现不做任何事情,并将子测试的失败记录为正常的失败。</target>
        </trans-unit>
        <trans-unit id="917b792910290b9f104f9e9bb1c1c376f6e62a1b" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing.</source>
          <target state="translated">默认的实现什么也不做。</target>
        </trans-unit>
        <trans-unit id="67df62e256ec06c97f02e23b90b57d437ba78502" translate="yes" xml:space="preserve">
          <source>The default implementation first consults the environment variable &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt;&lt;/a&gt;. If that is set to &lt;code&gt;&quot;0&quot;&lt;/code&gt; then this function returns immediately; i.e. it is a no-op. If the environment variable is not set, or is set to the empty string, &lt;code&gt;pdb.set_trace()&lt;/code&gt; is called. Otherwise this variable should name a function to run, using Python&amp;rsquo;s dotted-import nomenclature, e.g. &lt;code&gt;package.subpackage.module.function&lt;/code&gt;. In this case, &lt;code&gt;package.subpackage.module&lt;/code&gt; would be imported and the resulting module must have a callable named &lt;code&gt;function()&lt;/code&gt;. This is run, passing in &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kws&lt;/code&gt;, and whatever &lt;code&gt;function()&lt;/code&gt; returns, &lt;code&gt;sys.breakpointhook()&lt;/code&gt; returns to the built-in &lt;a href=&quot;functions#breakpoint&quot;&gt;&lt;code&gt;breakpoint()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">默认实现首先查询环境变量&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-2&quot;&gt; &lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt; &lt;/a&gt;。如果将其设置为 &lt;code&gt;&quot;0&quot;&lt;/code&gt; 则此函数立即返回；否则，返回0。即它是一个无人值守。如果未设置环境变量或将其设置为空字符串， &lt;code&gt;pdb.set_trace()&lt;/code&gt; 调用pdb.set_trace（）。否则，此变量应使用Python的点导入命名法来命名要运行的函数，例如 &lt;code&gt;package.subpackage.module.function&lt;/code&gt; 。在这种情况下，将导入 &lt;code&gt;package.subpackage.module&lt;/code&gt; ，并且生成的模块必须具有可调用的名为 &lt;code&gt;function()&lt;/code&gt; 的名称。运行，传入 &lt;code&gt;*args&lt;/code&gt; 和 &lt;code&gt;**kws&lt;/code&gt; ，无论 &lt;code&gt;function()&lt;/code&gt; 返回什么， &lt;code&gt;sys.breakpointhook()&lt;/code&gt; 返回到内置的&lt;a href=&quot;functions#breakpoint&quot;&gt; &lt;code&gt;breakpoint()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="a9acce94f55cfc47e4713699518ed5d331490110" translate="yes" xml:space="preserve">
          <source>The default implementation first consults the environment variable &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt;&lt;/a&gt;. If that is set to &lt;code&gt;&quot;0&quot;&lt;/code&gt; then this function returns immediately; i.e. it is a no-op. If the environment variable is not set, or is set to the empty string, &lt;code&gt;pdb.set_trace()&lt;/code&gt; is called. Otherwise this variable should name a function to run, using Python&amp;rsquo;s dotted-import nomenclature, e.g. &lt;code&gt;package.subpackage.module.function&lt;/code&gt;. In this case, &lt;code&gt;package.subpackage.module&lt;/code&gt; would be imported and the resulting module must have a callable named &lt;code&gt;function()&lt;/code&gt;. This is run, passing in &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kws&lt;/code&gt;, and whatever &lt;code&gt;function()&lt;/code&gt; returns, &lt;code&gt;sys.breakpointhook()&lt;/code&gt; returns to the built-in &lt;a href=&quot;functions#breakpoint&quot;&gt;&lt;code&gt;breakpoint()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">默认实现首先查询环境变量&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt; &lt;/a&gt;。如果将其设置为 &lt;code&gt;&quot;0&quot;&lt;/code&gt; 则此函数立即返回；否则，返回0。即它是一个无人值守。如果未设置环境变量或将其设置为空字符串， &lt;code&gt;pdb.set_trace()&lt;/code&gt; 调用pdb.set_trace（）。否则，此变量应使用Python的点导入命名法来命名要运行的函数，例如 &lt;code&gt;package.subpackage.module.function&lt;/code&gt; 。在这种情况下，将导入 &lt;code&gt;package.subpackage.module&lt;/code&gt; ，并且生成的模块必须具有可调用的名为 &lt;code&gt;function()&lt;/code&gt; 的名称。运行该函数，传入 &lt;code&gt;*args&lt;/code&gt; 和 &lt;code&gt;**kws&lt;/code&gt; ，无论 &lt;code&gt;function()&lt;/code&gt; 返回什么， &lt;code&gt;sys.breakpointhook()&lt;/code&gt; 返回到内置的&lt;a href=&quot;functions#breakpoint&quot;&gt; &lt;code&gt;breakpoint()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="f74656a8a819a518271e05ab776cc077ee5133d3" translate="yes" xml:space="preserve">
          <source>The default implementation for both functions will read and return up to 1024 bytes each time the function is called. The &lt;em&gt;master_read&lt;/em&gt; callback is passed the pseudoterminal&amp;rsquo;s master file descriptor to read output from the child process, and &lt;em&gt;stdin_read&lt;/em&gt; is passed file descriptor 0, to read from the parent process&amp;rsquo;s standard input.</source>
          <target state="translated">每次调用该函数时，这两个函数的默认实现都会读取并返回多达1024个字节。将&lt;em&gt;master_read&lt;/em&gt;回调传递给伪&lt;em&gt;终端&lt;/em&gt;的主文件描述符，以从子进程中读取输出，将&lt;em&gt;stdin_read&lt;/em&gt;传递给文件描述符0，以从父进程的标准输入中读取。</target>
        </trans-unit>
        <trans-unit id="b33ae6a6fa76317fab7538fb2a3cca4c005e4023" translate="yes" xml:space="preserve">
          <source>The default implementation just uses the &lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_status&quot;&gt;&lt;code&gt;error_status&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_headers&quot;&gt;&lt;code&gt;error_headers&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_body&quot;&gt;&lt;code&gt;error_body&lt;/code&gt;&lt;/a&gt; attributes to generate an output page. Subclasses can override this to produce more dynamic error output.</source>
          <target state="translated">默认实现只使用&lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_status&quot;&gt; &lt;code&gt;error_status&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_headers&quot;&gt; &lt;code&gt;error_headers&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#wsgiref.handlers.BaseHandler.error_body&quot;&gt; &lt;code&gt;error_body&lt;/code&gt; &lt;/a&gt;属性来生成输出页面。子类可以覆盖它，以产生更多的动态错误输出。</target>
        </trans-unit>
        <trans-unit id="90a3901aebe023145f5de84c1fe64e79959585c1" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; raises &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; &lt;/a&gt;的默认实现引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16085cdaef9820e3e043c1b7e4309f2a7ae3234c" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;a href=&quot;#datetime.tzinfo.tzname&quot;&gt;&lt;code&gt;tzname()&lt;/code&gt;&lt;/a&gt; raises &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#datetime.tzinfo.tzname&quot;&gt; &lt;code&gt;tzname()&lt;/code&gt; &lt;/a&gt;的默认实现引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eaa2ded4dfd4b8b4517a84086b0a0546ef2a859e" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; raises &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;的默认实现引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82debffda06a601a8240a52d0811cf0e418c2167" translate="yes" xml:space="preserve">
          <source>The default implementation of this method does not strictly follow &lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;, which says that 301 and 302 responses to &lt;code&gt;POST&lt;/code&gt; requests must not be automatically redirected without confirmation by the user. In reality, browsers do allow automatic redirection of these responses, changing the POST to a &lt;code&gt;GET&lt;/code&gt;, and the default implementation reproduces this behavior.</source>
          <target state="translated">此方法的默认实现未严格遵循&lt;a href=&quot;https://tools.ietf.org/html/rfc2616.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2616&lt;/strong&gt;&lt;/a&gt;，&lt;strong&gt;RFC 2616&lt;/strong&gt;指出对 &lt;code&gt;POST&lt;/code&gt; 请求的301和302响应必须在未经用户确认的情况下自动重定向。实际上，浏览器确实允许这些响应的自动重定向，将POST更改为 &lt;code&gt;GET&lt;/code&gt; ，并且默认实现重现此行为。</target>
        </trans-unit>
        <trans-unit id="13b55b955e1b08c46172d6efc871c03e0099cb57" translate="yes" xml:space="preserve">
          <source>The default implementation returns &lt;code&gt;None&lt;/code&gt; for all header names.</source>
          <target state="translated">默认实现为所有标头名称返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="725d6d53b5cf3c3613770adb4e50064aa80e4e7a" translate="yes" xml:space="preserve">
          <source>The default implementation used by &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt;. It enables values to contain format strings which refer to other values in the same section, or values in the special default section &lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt;1&lt;/a&gt;. Additional default values can be provided on initialization.</source>
          <target state="translated">&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;使用的默认实现。它使值可以包含引用同一部分中其他值或特殊默认部分&lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt;1&lt;/a&gt;中的值的格式字符串。初始化时可以提供其他默认值。</target>
        </trans-unit>
        <trans-unit id="cd0ce3c256ee146bb362a470cd49483296837acf" translate="yes" xml:space="preserve">
          <source>The default is &amp;ldquo;tree headings&amp;rdquo;, i.e., show all elements.</source>
          <target state="translated">默认值为&amp;ldquo;树标题&amp;rdquo;，即显示所有元素。</target>
        </trans-unit>
        <trans-unit id="4a764b527c8c39c412a231d74d381ecae9e42fbc" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b02b629dda45d997c18db19eedefdbf65477e98" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6adf493e6a470999107813b5f58c8e48e3d6d25" translate="yes" xml:space="preserve">
          <source>The default locale directory is system dependent; for example, on RedHat Linux it is &lt;code&gt;/usr/share/locale&lt;/code&gt;, but on Solaris it is &lt;code&gt;/usr/lib/locale&lt;/code&gt;. The &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module does not try to support these system dependent defaults; instead its default is &lt;code&gt;&lt;em&gt;sys.base_prefix&lt;/em&gt;/share/locale&lt;/code&gt; (see &lt;a href=&quot;sys#sys.base_prefix&quot;&gt;&lt;code&gt;sys.base_prefix&lt;/code&gt;&lt;/a&gt;). For this reason, it is always best to call &lt;a href=&quot;#gettext.bindtextdomain&quot;&gt;&lt;code&gt;bindtextdomain()&lt;/code&gt;&lt;/a&gt; with an explicit absolute path at the start of your application.</source>
          <target state="translated">默认的语言环境目录是系统相关的。例如，在RedHat Linux上，它是 &lt;code&gt;/usr/share/locale&lt;/code&gt; ，但是在Solaris上，它是 &lt;code&gt;/usr/lib/locale&lt;/code&gt; 。该&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; 的&lt;/a&gt;模块不尽力支持这些系统相关的默认值; 相反，它的默认值为 &lt;code&gt;&lt;em&gt;sys.base_prefix&lt;/em&gt;/share/locale&lt;/code&gt; （请参阅&lt;a href=&quot;sys#sys.base_prefix&quot;&gt; &lt;code&gt;sys.base_prefix&lt;/code&gt; &lt;/a&gt;）。因此，始终最好在应用程序的开始使用明确的绝对路径调用&lt;a href=&quot;#gettext.bindtextdomain&quot;&gt; &lt;code&gt;bindtextdomain()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="814a9a510f2c1120c69400a1ceca8ba606beab6f" translate="yes" xml:space="preserve">
          <source>The default locale directory is system dependent; for example, on RedHat Linux it is &lt;code&gt;/usr/share/locale&lt;/code&gt;, but on Solaris it is &lt;code&gt;/usr/lib/locale&lt;/code&gt;. The &lt;a href=&quot;#module-gettext&quot;&gt;&lt;code&gt;gettext&lt;/code&gt;&lt;/a&gt; module does not try to support these system dependent defaults; instead its default is &lt;code&gt;&lt;em&gt;sys.prefix&lt;/em&gt;/share/locale&lt;/code&gt; (see &lt;a href=&quot;sys#sys.prefix&quot;&gt;&lt;code&gt;sys.prefix&lt;/code&gt;&lt;/a&gt;). For this reason, it is always best to call &lt;a href=&quot;#gettext.bindtextdomain&quot;&gt;&lt;code&gt;bindtextdomain()&lt;/code&gt;&lt;/a&gt; with an explicit absolute path at the start of your application.</source>
          <target state="translated">默认的语言环境目录是系统相关的。例如，在RedHat Linux上为 &lt;code&gt;/usr/share/locale&lt;/code&gt; ，在Solaris上为 &lt;code&gt;/usr/lib/locale&lt;/code&gt; 。该&lt;a href=&quot;#module-gettext&quot;&gt; &lt;code&gt;gettext&lt;/code&gt; 的&lt;/a&gt;模块不尽力支持这些系统相关的默认值; 相反，其默认值为 &lt;code&gt;&lt;em&gt;sys.prefix&lt;/em&gt;/share/locale&lt;/code&gt; （请参阅&lt;a href=&quot;sys#sys.prefix&quot;&gt; &lt;code&gt;sys.prefix&lt;/code&gt; &lt;/a&gt;）。因此，始终最好在应用程序的开始使用明确的绝对路径调用&lt;a href=&quot;#gettext.bindtextdomain&quot;&gt; &lt;code&gt;bindtextdomain()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="794f48952ceef8edd0efaf6e7f1edca546f6b6ec" translate="yes" xml:space="preserve">
          <source>The default log level is &lt;code&gt;logging.INFO&lt;/code&gt;, which can be easily adjusted:</source>
          <target state="translated">默认日志级别为 &lt;code&gt;logging.INFO&lt;/code&gt; ，可以轻松调整：</target>
        </trans-unit>
        <trans-unit id="c10a46682ece55208f06ff3244ee92307d192950" translate="yes" xml:space="preserve">
          <source>The default mappings are:</source>
          <target state="translated">默认的映射是:</target>
        </trans-unit>
        <trans-unit id="bf79d526fbfe64d1c7da84c2d5bc4927946eb59b" translate="yes" xml:space="preserve">
          <source>The default message can be overridden with the &lt;code&gt;usage=&lt;/code&gt; keyword argument:</source>
          <target state="translated">可以 &lt;code&gt;usage=&lt;/code&gt; 关键字参数覆盖默认消息：</target>
        </trans-unit>
        <trans-unit id="141a3d8b5d2695d6fbe0a56d367c38aab3863374" translate="yes" xml:space="preserve">
          <source>The default mode is &lt;code&gt;'r'&lt;/code&gt; (open for reading text, synonym of &lt;code&gt;'rt'&lt;/code&gt;). Modes &lt;code&gt;'w+'&lt;/code&gt; and &lt;code&gt;'w+b'&lt;/code&gt; open and truncate the file. Modes &lt;code&gt;'r+'&lt;/code&gt; and &lt;code&gt;'r+b'&lt;/code&gt; open the file with no truncation.</source>
          <target state="translated">默认模式为 &lt;code&gt;'r'&lt;/code&gt; （打开以阅读文本，为 &lt;code&gt;'rt'&lt;/code&gt; 同义词）。模式 &lt;code&gt;'w+'&lt;/code&gt; 和 &lt;code&gt;'w+b'&lt;/code&gt; 打开并截断文件。模式 &lt;code&gt;'r+'&lt;/code&gt; 和 &lt;code&gt;'r+b'&lt;/code&gt; 可以无截断地打开文件。</target>
        </trans-unit>
        <trans-unit id="03390741ae3195ccf5b5eb50f31c643c59a729d2" translate="yes" xml:space="preserve">
          <source>The default mode which is used to load shared libraries. On OSX 10.3, this is &lt;em&gt;RTLD_GLOBAL&lt;/em&gt;, otherwise it is the same as &lt;em&gt;RTLD_LOCAL&lt;/em&gt;.</source>
          <target state="translated">用于加载共享库的默认模式。在OSX 10.3上，这是&lt;em&gt;RTLD_GLOBAL&lt;/em&gt;，否则与&lt;em&gt;RTLD_LOCAL&lt;/em&gt;相同。</target>
        </trans-unit>
        <trans-unit id="73d6ea81836b7e091d9707bef84bfc523b16338a" translate="yes" xml:space="preserve">
          <source>The default opener raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;urllib.Request&lt;/code&gt; with arguments &lt;code&gt;fullurl&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt; taken from the request object.</source>
          <target state="translated">默认的打开程序将引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;urllib.Request&lt;/code&gt; ,其中带有来自请求对象的参数 &lt;code&gt;fullurl&lt;/code&gt; ， &lt;code&gt;data&lt;/code&gt; ， &lt;code&gt;headers&lt;/code&gt; 和 &lt;code&gt;method&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39acba55dd14c83398ea0bbfc6e7d2a50c30c9e7" translate="yes" xml:space="preserve">
          <source>The default ordering of tests created by the unittest test loaders is to group all tests from the same modules and classes together. This will lead to &lt;code&gt;setUpClass&lt;/code&gt; / &lt;code&gt;setUpModule&lt;/code&gt; (etc) being called exactly once per class and module. If you randomize the order, so that tests from different modules and classes are adjacent to each other, then these shared fixture functions may be called multiple times in a single test run.</source>
          <target state="translated">unittest测试加载程序创建的测试的默认顺序是将来自相同模块和类的所有测试组合在一起。这将导致每个类和模块仅一次调用 &lt;code&gt;setUpClass&lt;/code&gt; / &lt;code&gt;setUpModule&lt;/code&gt; （等）。如果您将顺序随机化，以使来自不同模块和类的测试彼此相邻，则可以在一次测试运行中多次调用这些共享的夹具功能。</target>
        </trans-unit>
        <trans-unit id="a58a0491ff3eb550980796cd579ce9dfd157abf1" translate="yes" xml:space="preserve">
          <source>The default port for the HTTP protocol (always &lt;code&gt;80&lt;/code&gt;).</source>
          <target state="translated">HTTP协议的默认端口（始终为 &lt;code&gt;80&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="425beadae2e2f6a2971a75d3712f9625b055af90" translate="yes" xml:space="preserve">
          <source>The default port for the HTTPS protocol (always &lt;code&gt;443&lt;/code&gt;).</source>
          <target state="translated">HTTPS协议的默认端口（总是 &lt;code&gt;443&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="30751022518c3e586bbf05c4dc10e57e1471f76b" translate="yes" xml:space="preserve">
          <source>The default return value is a mock object and you can configure it in the normal way:</source>
          <target state="translated">默认的返回值是一个mock对象,你可以用正常的方式配置它。</target>
        </trans-unit>
        <trans-unit id="24a346496310974b8e67170483456ec9392111fd" translate="yes" xml:space="preserve">
          <source>The default scheduling policy.</source>
          <target state="translated">默认的调度策略。</target>
        </trans-unit>
        <trans-unit id="c002f3ffcf614b415ab0107e01446f36339d947d" translate="yes" xml:space="preserve">
          <source>The default search path used by &lt;a href=&quot;#os.execl&quot;&gt;&lt;code&gt;exec*p*&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*p*&lt;/code&gt;&lt;/a&gt; if the environment doesn&amp;rsquo;t have a &lt;code&gt;'PATH'&lt;/code&gt; key. Also available via &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果环境没有 &lt;code&gt;'PATH'&lt;/code&gt; 键，则&lt;a href=&quot;#os.execl&quot;&gt; &lt;code&gt;exec*p*&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*p*&lt;/code&gt; &lt;/a&gt;使用的默认搜索路径。也可以通过&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; 获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3efa5b275105c170638fc7b7f17c83558f25e9f6" translate="yes" xml:space="preserve">
          <source>The default selector class, using the most efficient implementation available on the current platform. This should be the default choice for most users.</source>
          <target state="translated">默认的选择器类,使用当前平台上最有效的实现。这应该是大多数用户的默认选择。</target>
        </trans-unit>
        <trans-unit id="3ca70f786f3be38669a0f5f13987139bc5f61d99" translate="yes" xml:space="preserve">
          <source>The default setting is determined by calling &lt;a href=&quot;#locale.getdefaultlocale&quot;&gt;&lt;code&gt;getdefaultlocale()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;category&lt;/em&gt; defaults to &lt;a href=&quot;#locale.LC_ALL&quot;&gt;&lt;code&gt;LC_ALL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认设置是通过调用&lt;a href=&quot;#locale.getdefaultlocale&quot;&gt; &lt;code&gt;getdefaultlocale()&lt;/code&gt; &lt;/a&gt;来确定的。&lt;em&gt;类别&lt;/em&gt;默认为&lt;a href=&quot;#locale.LC_ALL&quot;&gt; &lt;code&gt;LC_ALL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="043146855b6cd351175d4c3c050e9e53a9299fde" translate="yes" xml:space="preserve">
          <source>The default timer, which is always &lt;a href=&quot;time#time.perf_counter&quot;&gt;&lt;code&gt;time.perf_counter()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认计时器，始终为&lt;a href=&quot;time#time.perf_counter&quot;&gt; &lt;code&gt;time.perf_counter()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e880a55fe07fce5b685fc9b8ca7365567a017ce2" translate="yes" xml:space="preserve">
          <source>The default traceback display code shows these chained exceptions in addition to the traceback for the exception itself. An explicitly chained exception in &lt;code&gt;__cause__&lt;/code&gt; is always shown when present. An implicitly chained exception in &lt;code&gt;__context__&lt;/code&gt; is shown only if &lt;code&gt;__cause__&lt;/code&gt; is &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;__suppress_context__&lt;/code&gt; is false.</source>
          <target state="translated">默认的回溯显示代码除了显示异常本身的回溯之外，还显示这些链接的异常。如果存在，则始终显示 &lt;code&gt;__cause__&lt;/code&gt; 中的显式链接异常。仅当 &lt;code&gt;__cause__&lt;/code&gt; 为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;且 &lt;code&gt;__suppress_context__&lt;/code&gt; 为false时，才会显示 &lt;code&gt;__context__&lt;/code&gt; 中的隐式链接异常。</target>
        </trans-unit>
        <trans-unit id="7a3e28e031082803bf5f54778e88107b6b7e3956" translate="yes" xml:space="preserve">
          <source>The default value for the &lt;a href=&quot;#email.policy.Policy.message_factory&quot;&gt;&lt;code&gt;message_factory&lt;/code&gt;&lt;/a&gt; attribute is &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#email.policy.Policy.message_factory&quot;&gt; &lt;code&gt;message_factory&lt;/code&gt; &lt;/a&gt;属性的默认值为&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1e2dbad85c6df37fd7251dd032bd384d20f99676" translate="yes" xml:space="preserve">
          <source>The default value for the &lt;em&gt;policy&lt;/em&gt; keyword for the &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;email.parser&lt;/code&gt;&lt;/a&gt; classes and the parser convenience functions &lt;strong&gt;will be changing&lt;/strong&gt; in a future version of Python. Therefore you should &lt;strong&gt;always specify explicitly which policy you want to use&lt;/strong&gt; when calling any of the classes and functions described in the &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;email.parser&lt;/code&gt; &lt;/a&gt;类和分析器便捷功能的&lt;em&gt;policy&lt;/em&gt;关键字的默认值&lt;strong&gt;将&lt;/strong&gt;在Python的未来版本中&lt;strong&gt;更改&lt;/strong&gt;。因此&lt;strong&gt;，&lt;/strong&gt;在调用&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;模块中描述的任何类和函数时&lt;strong&gt;，&lt;/strong&gt;应&lt;strong&gt;始终明确指定要使用的策略&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="144a7dcfe8a056320c86d88ccef9dfb777d3754c" translate="yes" xml:space="preserve">
          <source>The default value for the parameter. If the parameter has no default value, this attribute is set to &lt;a href=&quot;#inspect.Parameter.empty&quot;&gt;&lt;code&gt;Parameter.empty&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参数的默认值。如果参数没有默认值，则此属性设置为&lt;a href=&quot;#inspect.Parameter.empty&quot;&gt; &lt;code&gt;Parameter.empty&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa35640f1a27bf8e96f3301b8c8fd0e1450703e6" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;True&lt;/code&gt; if the environment variable &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONASYNCIODEBUG&quot; id=&quot;index-5&quot;&gt;&lt;code&gt;PYTHONASYNCIODEBUG&lt;/code&gt;&lt;/a&gt; is set to a non-empty string, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果环境变量&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONASYNCIODEBUG&quot; id=&quot;index-5&quot;&gt; &lt;code&gt;PYTHONASYNCIODEBUG&lt;/code&gt; &lt;/a&gt;设置为非空字符串，则默认值为 &lt;code&gt;True&lt;/code&gt; ;否则为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3603eee73c330b9a1bef1d08c127271a7b88a7a7" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;True&lt;/code&gt; if the environment variable &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONASYNCIODEBUG&quot; id=&quot;index-5&quot;&gt;&lt;code&gt;PYTHONASYNCIODEBUG&lt;/code&gt;&lt;/a&gt; is set to a non-empty string, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">如果环境变量&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONASYNCIODEBUG&quot; id=&quot;index-5&quot;&gt; &lt;code&gt;PYTHONASYNCIODEBUG&lt;/code&gt; &lt;/a&gt;设置为非空字符串，则默认值为 &lt;code&gt;True&lt;/code&gt; ;否则为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9336faf1c603958f822c42cea3dc2d15a071eee3" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;True&lt;/code&gt;. If Python is compiled &lt;code&gt;--without-decimal-contextvar&lt;/code&gt;, the C version uses a thread-local rather than a coroutine-local context and the value is &lt;code&gt;False&lt;/code&gt;. This is slightly faster in some nested context scenarios.</source>
          <target state="translated">默认值为 &lt;code&gt;True&lt;/code&gt; 。如果Python编译 &lt;code&gt;--without-decimal-contextvar&lt;/code&gt; ，则C版本使用线程局部而不是协程局部上下文，并且值为 &lt;code&gt;False&lt;/code&gt; 。在某些嵌套上下文场景中，这会稍微快一些。</target>
        </trans-unit>
        <trans-unit id="ca3fe88381a2828f01851afbbbb72484af83f4b3" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;True&lt;/code&gt;. If Python is compiled without threads, the C version automatically disables the expensive thread local context machinery. In this case, the value is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;True&lt;/code&gt; 。如果Python是在没有线程的情况下编译的，则C版本会自动禁用昂贵的线程本地上下文机制。在这种情况下，该值为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e1de354cd457579854e47a6cc794e8c9ac39320" translate="yes" xml:space="preserve">
          <source>The default values are &lt;code&gt;prec&lt;/code&gt;=&lt;code&gt;28&lt;/code&gt;, &lt;code&gt;rounding&lt;/code&gt;=&lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt;&lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt;&lt;/a&gt;, and enabled traps for &lt;a href=&quot;#decimal.Overflow&quot;&gt;&lt;code&gt;Overflow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.InvalidOperation&quot;&gt;&lt;code&gt;InvalidOperation&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#decimal.DivisionByZero&quot;&gt;&lt;code&gt;DivisionByZero&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;prec&lt;/code&gt; = &lt;code&gt;28&lt;/code&gt; ， &lt;code&gt;rounding&lt;/code&gt; = &lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt; &lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt; &lt;/a&gt;，以及为&lt;a href=&quot;#decimal.Overflow&quot;&gt; &lt;code&gt;Overflow&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#decimal.InvalidOperation&quot;&gt; &lt;code&gt;InvalidOperation&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#decimal.DivisionByZero&quot;&gt; &lt;code&gt;DivisionByZero&lt;/code&gt; &lt;/a&gt;启用的陷阱。</target>
        </trans-unit>
        <trans-unit id="7299c60092b16e730787f8b6c4a0d4d274cb1509" translate="yes" xml:space="preserve">
          <source>The defaults are implementation-specific. If only the high watermark is given, the low watermark defaults to an implementation-specific value less than or equal to the high watermark. Setting &lt;em&gt;high&lt;/em&gt; to zero forces &lt;em&gt;low&lt;/em&gt; to zero as well, and causes &lt;a href=&quot;#asyncio.BaseProtocol.pause_writing&quot;&gt;&lt;code&gt;pause_writing()&lt;/code&gt;&lt;/a&gt; to be called whenever the buffer becomes non-empty. Setting &lt;em&gt;low&lt;/em&gt; to zero causes &lt;a href=&quot;#asyncio.BaseProtocol.resume_writing&quot;&gt;&lt;code&gt;resume_writing()&lt;/code&gt;&lt;/a&gt; to be called only once the buffer is empty. Use of zero for either limit is generally sub-optimal as it reduces opportunities for doing I/O and computation concurrently.</source>
          <target state="translated">默认值是特定于实现的。如果仅给出高水印，则低水印默认为特定于实现的值，该值小于或等于高水印。将&lt;em&gt;高&lt;/em&gt;设置为零也会强制将&lt;em&gt;低&lt;/em&gt;设置为零，并且每当缓冲区变为非空时都会导致&lt;a href=&quot;#asyncio.BaseProtocol.pause_writing&quot;&gt; &lt;code&gt;pause_writing()&lt;/code&gt; &lt;/a&gt;。设置为零为&lt;em&gt;低&lt;/em&gt;将导致仅在缓冲区为空时调用&lt;a href=&quot;#asyncio.BaseProtocol.resume_writing&quot;&gt; &lt;code&gt;resume_writing()&lt;/code&gt; &lt;/a&gt;。对于任一限制使用零通常不是最佳选择，因为它减少了同时执行I / O和计算的机会。</target>
        </trans-unit>
        <trans-unit id="221847e9edd5eaa3b267e4d1c2549650caad5b6f" translate="yes" xml:space="preserve">
          <source>The definition of the DOM API for Python is given as part of the &lt;a href=&quot;xml.dom#module-xml.dom&quot;&gt;&lt;code&gt;xml.dom&lt;/code&gt;&lt;/a&gt; module documentation. This section lists the differences between the API and &lt;a href=&quot;#module-xml.dom.minidom&quot;&gt;&lt;code&gt;xml.dom.minidom&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Python的DOM API的定义在&lt;a href=&quot;xml.dom#module-xml.dom&quot;&gt; &lt;code&gt;xml.dom&lt;/code&gt; &lt;/a&gt;模块文档中给出。本节列出了API和&lt;a href=&quot;#module-xml.dom.minidom&quot;&gt; &lt;code&gt;xml.dom.minidom&lt;/code&gt; &lt;/a&gt;之间的区别。</target>
        </trans-unit>
        <trans-unit id="943baea73b814dec74b8d72bb621d33b0bfe1d54" translate="yes" xml:space="preserve">
          <source>The definitive documentation for the DOM is the DOM specification from the W3C.</source>
          <target state="translated">DOM的权威文档是W3C的DOM规范。</target>
        </trans-unit>
        <trans-unit id="5e673798c7b447103357a31e16119d6dac467057" translate="yes" xml:space="preserve">
          <source>The delta filter stores the differences between bytes, producing more repetitive input for the compressor in certain circumstances. It supports one option, &lt;code&gt;dist&lt;/code&gt;. This indicates the distance between bytes to be subtracted. The default is 1, i.e. take the differences between adjacent bytes.</source>
          <target state="translated">增量过滤器存储字节之间的差异，从而在某些情况下为压缩器产生更多重复的输入。它支持一个选项 &lt;code&gt;dist&lt;/code&gt; 。这表明要减去的字节之间的距离。默认值为1，即取相邻字节之间的差。</target>
        </trans-unit>
        <trans-unit id="0b079df41b809fa4419856c946739f02648c68a2" translate="yes" xml:space="preserve">
          <source>The demo scripts are:</source>
          <target state="translated">演示脚本是:</target>
        </trans-unit>
        <trans-unit id="72a1f3568dcde909669b4dded97dc9ed9fa432f0" translate="yes" xml:space="preserve">
          <source>The deprecated types will be removed from the &lt;a href=&quot;#module-typing&quot;&gt;&lt;code&gt;typing&lt;/code&gt;&lt;/a&gt; module in the first Python version released 5 years after the release of Python 3.9.0. See details in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0585&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 585&lt;/strong&gt;&lt;/a&gt;&amp;mdash;&lt;em&gt;Type Hinting Generics In Standard Collections&lt;/em&gt;.</source>
          <target state="translated">在Python 3.9.0发行5年后的第一个Python版本中，不赞成使用的类型将从&lt;a href=&quot;#module-typing&quot;&gt; &lt;code&gt;typing&lt;/code&gt; &lt;/a&gt;模块中删除。有关详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0585&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 585&lt;/strong&gt;&lt;/a&gt; &amp;mdash;&amp;ldquo;&lt;em&gt;标准集合中的类型提示泛型&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cf9ee77bb8cddcf823d4f4ddb3095b093bcd8b4a" translate="yes" xml:space="preserve">
          <source>The descriptors returned by these functions are instances of Function and Class classes. Users are not expected to create instances of these classes.</source>
          <target state="translated">这些函数返回的描述符是Function和Class类的实例。用户不应该创建这些类的实例。</target>
        </trans-unit>
        <trans-unit id="0da76bef1aa2212782aa0ff026cf66c2f179b048" translate="yes" xml:space="preserve">
          <source>The design is such that one can use the factory functions returned by the &lt;a href=&quot;#codecs.lookup&quot;&gt;&lt;code&gt;lookup()&lt;/code&gt;&lt;/a&gt; function to construct the instance.</source>
          <target state="translated">这种设计使得可以使用&lt;a href=&quot;#codecs.lookup&quot;&gt; &lt;code&gt;lookup()&lt;/code&gt; &lt;/a&gt;函数返回的工厂函数来构造实例。</target>
        </trans-unit>
        <trans-unit id="e304666702c62ac9c3cf811c3a927f2350dc8077" translate="yes" xml:space="preserve">
          <source>The design of all built-in operating system dependent modules of Python is such that as long as the same functionality is available, it uses the same interface; for example, the function &lt;code&gt;os.stat(path)&lt;/code&gt; returns stat information about &lt;em&gt;path&lt;/em&gt; in the same format (which happens to have originated with the POSIX interface).</source>
          <target state="translated">Python的所有依赖于操作系统的内置模块的设计都是这样，只要有相同的功能可用，它就使用相同的接口。例如，函数 &lt;code&gt;os.stat(path)&lt;/code&gt; 以相同格式（恰好起源于POSIX接口）返回有关&lt;em&gt;路径的&lt;/em&gt;统计信息。</target>
        </trans-unit>
        <trans-unit id="906a6d45a451c5d5583451af0ec9ab63f8309bb8" translate="yes" xml:space="preserve">
          <source>The design of this module is loosely based on Java&amp;rsquo;s threading model. However, where Java makes locks and condition variables basic behavior of every object, they are separate objects in Python. Python&amp;rsquo;s &lt;a href=&quot;#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; class supports a subset of the behavior of Java&amp;rsquo;s Thread class; currently, there are no priorities, no thread groups, and threads cannot be destroyed, stopped, suspended, resumed, or interrupted. The static methods of Java&amp;rsquo;s Thread class, when implemented, are mapped to module-level functions.</source>
          <target state="translated">该模块的设计大致基于Java的线程模型。但是，在Java使锁和条件变量成为每个对象的基本行为的地方，它们是Python中单独的对象。Python的&lt;a href=&quot;#threading.Thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt;类支持Java的Thread类的行为的子集。当前，没有优先级，没有线程组，并且无法破坏，停止，挂起，恢复或中断线程。Java的Thread类的静态方法在实现后会映射到模块级函数。</target>
        </trans-unit>
        <trans-unit id="c00c1643f45af0e7e9eae104f3f428178b879e63" translate="yes" xml:space="preserve">
          <source>The destination format is restricted to a single element native format in &lt;a href=&quot;struct#module-struct&quot;&gt;&lt;code&gt;struct&lt;/code&gt;&lt;/a&gt; syntax. One of the formats must be a byte format (&amp;lsquo;B&amp;rsquo;, &amp;lsquo;b&amp;rsquo; or &amp;lsquo;c&amp;rsquo;). The byte length of the result must be the same as the original length.</source>
          <target state="translated">在&lt;a href=&quot;struct#module-struct&quot;&gt; &lt;code&gt;struct&lt;/code&gt; &lt;/a&gt;语法中，目标格式仅限于单个元素的本机格式。格式之一必须是字节格式（&amp;ldquo; B&amp;rdquo;，&amp;ldquo; b&amp;rdquo;或&amp;ldquo; c&amp;rdquo;）。结果的字节长度必须与原始长度相同。</target>
        </trans-unit>
        <trans-unit id="853310cf1caf3d9ea6dbb0a860eb9bb473765452" translate="yes" xml:space="preserve">
          <source>The destination location must be writable; otherwise, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception will be raised. If &lt;em&gt;dst&lt;/em&gt; already exists, it will be replaced. Special files such as character or block devices and pipes cannot be copied with this function.</source>
          <target state="translated">目标位置必须是可写的；否则，将引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;异常。如果&lt;em&gt;dst&lt;/em&gt;已经存在，它将被替换。无法使用此功能复制特殊文件，例如字符或块设备以及管道。</target>
        </trans-unit>
        <trans-unit id="12a01ce48953ff6624ef00113b65baf1192d859c" translate="yes" xml:space="preserve">
          <source>The detailed specification, implementation details and examples.</source>
          <target state="translated">详细的规范、实施细节和实例。</target>
        </trans-unit>
        <trans-unit id="a567d6a1a9be2c908411e43745159c73a975ef4b" translate="yes" xml:space="preserve">
          <source>The details of character conversion in &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; are controlled by the &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; keyword arguments of the &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;中字符转换的详细信息由&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;类的&lt;em&gt;encoding&lt;/em&gt;和&lt;em&gt;errors&lt;/em&gt;关键字参数控制。</target>
        </trans-unit>
        <trans-unit id="c38c8475bca1181e5dbbe41548c5059c93a7fb35" translate="yes" xml:space="preserve">
          <source>The details of the syntax:</source>
          <target state="translated">语法的细节。</target>
        </trans-unit>
        <trans-unit id="34da012fa9dff8518788c0b3d7cb092045825a91" translate="yes" xml:space="preserve">
          <source>The details of this function differ on Unix and Windows.</source>
          <target state="translated">这个功能的细节在Unix和Windows上有所不同。</target>
        </trans-unit>
        <trans-unit id="4ded0604d98dde6a19acf451fe014b9c6c68f10c" translate="yes" xml:space="preserve">
          <source>The detected cycle can be accessed via the second element in the &lt;code&gt;args&lt;/code&gt; attribute of the exception instance and consists in a list of nodes, such that each node is, in the graph, an immediate predecessor of the next node in the list. In the reported list, the first and the last node will be the same, to make it clear that it is cyclic.</source>
          <target state="translated">可以通过异常实例的 &lt;code&gt;args&lt;/code&gt; 属性中的第二个元素访问检测到的循环，该循环包含在节点列表中，这样，每个节点在图中都是该列表中下一个节点的直接前任。在报告的列表中，第一个节点和最后一个节点将相同，以使其清楚是循环的。</target>
        </trans-unit>
        <trans-unit id="a14d6055539d17fe330c28c0379041872d8cb00d" translate="yes" xml:space="preserve">
          <source>The determination whether to issue a warning message is controlled by the &lt;a href=&quot;#warning-filter&quot;&gt;warning filter&lt;/a&gt;, which is a sequence of matching rules and actions. Rules can be added to the filter by calling &lt;a href=&quot;#warnings.filterwarnings&quot;&gt;&lt;code&gt;filterwarnings()&lt;/code&gt;&lt;/a&gt; and reset to its default state by calling &lt;a href=&quot;#warnings.resetwarnings&quot;&gt;&lt;code&gt;resetwarnings()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">是否发出警告消息的确定由&lt;a href=&quot;#warning-filter&quot;&gt;警告过滤器&lt;/a&gt;控制，警告过滤器是一系列匹配的规则和动作。规则可以通过调用被添加到过滤器&lt;a href=&quot;#warnings.filterwarnings&quot;&gt; &lt;code&gt;filterwarnings()&lt;/code&gt; &lt;/a&gt;，并通过调用重置为默认状态&lt;a href=&quot;#warnings.resetwarnings&quot;&gt; &lt;code&gt;resetwarnings()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="73dca0bcff737d2d3b02394f5fe723496528dac5" translate="yes" xml:space="preserve">
          <source>The dictionary passed to &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt; must contain the following keys:</source>
          <target state="translated">传递给&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; &lt;/a&gt;的字典必须包含以下键：</target>
        </trans-unit>
        <trans-unit id="a309b10a0ef1998ea5956b5985c47332b3ca7484" translate="yes" xml:space="preserve">
          <source>The difference between shallow and deep copying is only relevant for compound objects (objects that contain other objects, like lists or class instances):</source>
          <target state="translated">浅层复制和深层复制的区别只与复合对象(包含其他对象的对象,如列表或类实例)有关。</target>
        </trans-unit>
        <trans-unit id="f13a9d0f0f57f180befad466255cd497424b6d22" translate="yes" xml:space="preserve">
          <source>The difference is that the &lt;code&gt;readline()&lt;/code&gt; call in the second handler will call &lt;code&gt;recv()&lt;/code&gt; multiple times until it encounters a newline character, while the single &lt;code&gt;recv()&lt;/code&gt; call in the first handler will just return what has been sent from the client in one &lt;code&gt;sendall()&lt;/code&gt; call.</source>
          <target state="translated">区别在于第二个处理程序中的 &lt;code&gt;readline()&lt;/code&gt; 调用将多次调用 &lt;code&gt;recv()&lt;/code&gt; 直到遇到换行符，而第一个处理程序中的单个 &lt;code&gt;recv()&lt;/code&gt; 调用将仅返回客户端发送的内容。 &lt;code&gt;sendall()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="2fc273f694debf0a788d27b77d44aa4b6ce63e71" translate="yes" xml:space="preserve">
          <source>The different font weights and slants are:</source>
          <target state="translated">不同的字体权重和斜度是。</target>
        </trans-unit>
        <trans-unit id="7f4ce614fc3c5ce47e342e7509a9fcd6e2263cba" translate="yes" xml:space="preserve">
          <source>The dircmp class</source>
          <target state="translated">dircmp类</target>
        </trans-unit>
        <trans-unit id="5b186c9536ac444951a67e97a0ba165a32d7d506" translate="yes" xml:space="preserve">
          <source>The directories are allowed to exist (for when an existing environment is being upgraded).</source>
          <target state="translated">允许目录存在(用于现有环境升级时)。</target>
        </trans-unit>
        <trans-unit id="3ed7571611b51b5a7d9d0b2c98a40156f70c51d5" translate="yes" xml:space="preserve">
          <source>The directory &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="translated">目录&lt;em&gt;a&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="39cd511f81d10b80603aff273f9c039527add995" translate="yes" xml:space="preserve">
          <source>The directory &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="translated">目录&lt;em&gt;b&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2d510cfc449c5e8636e56f356ec78fb5d4b7cfca" translate="yes" xml:space="preserve">
          <source>The directory can be explicitly cleaned up by calling the &lt;code&gt;cleanup()&lt;/code&gt; method.</source>
          <target state="translated">可以通过调用 &lt;code&gt;cleanup()&lt;/code&gt; 方法显式清除目录。</target>
        </trans-unit>
        <trans-unit id="6990eba23c2a267e829ead12a6b14c528cdac3d4" translate="yes" xml:space="preserve">
          <source>The directory is opaque when viewed through a union stack.</source>
          <target state="translated">通过联合堆栈查看时,该目录是不透明的。</target>
        </trans-unit>
        <trans-unit id="2357d402069095a1d69201172b2c12576d482c6c" translate="yes" xml:space="preserve">
          <source>The directory name can be retrieved from the &lt;code&gt;name&lt;/code&gt; attribute of the returned object. When the returned object is used as a context manager, the &lt;code&gt;name&lt;/code&gt; will be assigned to the target of the &lt;code&gt;as&lt;/code&gt; clause in the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, if there is one.</source>
          <target state="translated">可以从返回的对象的 &lt;code&gt;name&lt;/code&gt; 属性中检索目录名称。当返回的对象用作上下文管理器时，该 &lt;code&gt;name&lt;/code&gt; 将分配给&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句中 &lt;code&gt;as&lt;/code&gt; 子句的目标（如果有）。</target>
        </trans-unit>
        <trans-unit id="269d29dfe20e61d331f6adfa1c133446ae5fa004" translate="yes" xml:space="preserve">
          <source>The directory name can be retrieved from the &lt;code&gt;name&lt;/code&gt; attribute of the returned object. When the returned object is used as a context manager, the &lt;code&gt;name&lt;/code&gt; will be assigned to the target of the &lt;code&gt;as&lt;/code&gt; clause in the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, if there is one.</source>
          <target state="translated">可以从返回对象的 &lt;code&gt;name&lt;/code&gt; 属性中检索目录名称。当返回的对象用作上下文管理器时，该 &lt;code&gt;name&lt;/code&gt; 将被分配给&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句中 &lt;code&gt;as&lt;/code&gt; 子句的目标（如果有的话）。</target>
        </trans-unit>
        <trans-unit id="b35f56c191faad6472c0141b116290aca2391a78" translate="yes" xml:space="preserve">
          <source>The directory named by the &lt;code id=&quot;index-1&quot;&gt;TMPDIR&lt;/code&gt; environment variable.</source>
          <target state="translated">由 &lt;code id=&quot;index-1&quot;&gt;TMPDIR&lt;/code&gt; 环境变量命名的目录。</target>
        </trans-unit>
        <trans-unit id="29814fe7aa509a2b063de5230c93f3cba90feca2" translate="yes" xml:space="preserve">
          <source>The directory named by the &lt;code id=&quot;index-2&quot;&gt;TEMP&lt;/code&gt; environment variable.</source>
          <target state="translated">&lt;code id=&quot;index-2&quot;&gt;TEMP&lt;/code&gt; 环境变量命名的目录。</target>
        </trans-unit>
        <trans-unit id="4f86539184fc4d2d2f0f9bffd91b762cb482c710" translate="yes" xml:space="preserve">
          <source>The directory named by the &lt;code id=&quot;index-3&quot;&gt;TMP&lt;/code&gt; environment variable.</source>
          <target state="translated">由 &lt;code id=&quot;index-3&quot;&gt;TMP&lt;/code&gt; 环境变量命名的目录。</target>
        </trans-unit>
        <trans-unit id="bd4aec7dd167f631c8a4341121b8d6994d521f9b" translate="yes" xml:space="preserve">
          <source>The disadvantage of a self-signed certificate is that it is its own root certificate, and no one else will have it in their cache of known (and trusted) root certificates.</source>
          <target state="translated">自签证书的缺点是它是自己的根证书,其他人不会在他们已知(和可信)的根证书缓存中拥有它。</target>
        </trans-unit>
        <trans-unit id="e4d43bffa96f6204d6ae5629ccd514e5d9ce5afe" translate="yes" xml:space="preserve">
          <source>The disassembly is written as text to the supplied &lt;em&gt;file&lt;/em&gt; argument if provided and to &lt;code&gt;sys.stdout&lt;/code&gt; otherwise.</source>
          <target state="translated">如果提供反汇编，则将其作为文本写入提供的&lt;em&gt;文件&lt;/em&gt;参数，否则，写入 &lt;code&gt;sys.stdout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b60e6af892f070f5741292c864890daf4177c61" translate="yes" xml:space="preserve">
          <source>The disk balancing algorithms which are current, nowadays, are more annoying than clever, and this is a consequence of the seeking capabilities of the disks. On devices which cannot seek, like big tape drives, the story was quite different, and one had to be very clever to ensure (far in advance) that each tape movement will be the most effective possible (that is, will best participate at &amp;ldquo;progressing&amp;rdquo; the merge). Some tapes were even able to read backwards, and this was also used to avoid the rewinding time. Believe me, real good tape sorts were quite spectacular to watch! From all times, sorting has always been a Great Art! :-)</source>
          <target state="translated">如今，当前的磁盘平衡算法比聪明的算法更令人讨厌，这是磁盘寻求功能的结果。在无法找到的设备上（例如大型磁带机），情况就大不相同了，必须非常聪明地确保（提前）确保每次磁带移动都将是最有效的（也就是说，最好参加&amp;ldquo;进行&amp;rdquo;合并）。某些磁带甚至可以向后读取，这也可以避免倒带时间。相信我，观看真正的好磁带种类非常壮观！一直以来，分类一直是一门伟大的艺术！:-)</target>
        </trans-unit>
        <trans-unit id="de4509458b5999b814732a12ee716e1291daa74d" translate="yes" xml:space="preserve">
          <source>The display name portion of the address, if any, with all quoting removed. If the address does not have a display name, this attribute will be an empty string.</source>
          <target state="translated">地址的显示名称部分(如果有的话),去掉所有引号。如果地址没有显示名称,该属性将是一个空字符串。</target>
        </trans-unit>
        <trans-unit id="b3ffe664da088c28c4dfb305539a430b26d2cd27" translate="yes" xml:space="preserve">
          <source>The distinction between aware and naive doesn&amp;rsquo;t apply to &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">感知和天真之间的区别不适用于&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="a88b02874a2183ab63db978cb3d089c5c1c77714" translate="yes" xml:space="preserve">
          <source>The docstrings of the functions which are derived from methods have a modified form:</source>
          <target state="translated">从方法派生出来的函数的 docstrings 有一个修改的形式。</target>
        </trans-unit>
        <trans-unit id="15a57359f59d33fd95cd9fd1878284e1c5612b40" translate="yes" xml:space="preserve">
          <source>The doctest command line accepts the option &lt;code&gt;-f&lt;/code&gt; as a shorthand for &lt;code&gt;-o
FAIL_FAST&lt;/code&gt;.</source>
          <target state="translated">doctest命令行接受选项 &lt;code&gt;-f&lt;/code&gt; 作为 &lt;code&gt;-o FAIL_FAST&lt;/code&gt; 的简写。</target>
        </trans-unit>
        <trans-unit id="f7edc27c9b251af25f08e439a5fa1ae563449aee" translate="yes" xml:space="preserve">
          <source>The document attempted to remove the namespace declaration associated with a prefix.</source>
          <target state="translated">该文件试图删除与前缀相关的命名空间声明。</target>
        </trans-unit>
        <trans-unit id="10a2ff25b70c156c1132e77ce7ede7c43d4ef115" translate="yes" xml:space="preserve">
          <source>The document contained no document element at all.</source>
          <target state="translated">该文件根本不包含任何文件内容。</target>
        </trans-unit>
        <trans-unit id="8b1d05974dee6ddfa33f763e960cb8596c6c89b6" translate="yes" xml:space="preserve">
          <source>The document contains no elements (XML requires all documents to contain exactly one top-level element)..</source>
          <target state="translated">该文档不包含任何元素(XML要求所有文档只包含一个顶层元素)。</target>
        </trans-unit>
        <trans-unit id="0e022fadcd6ebdd4dce2b1340fd4cc2d36f4effa" translate="yes" xml:space="preserve">
          <source>The document encoding is not supported by Expat.</source>
          <target state="translated">Expat不支持文档编码。</target>
        </trans-unit>
        <trans-unit id="45eb94f8f738860eeb2b172bec8e84ce78dc6574" translate="yes" xml:space="preserve">
          <source>The documentation for &lt;a href=&quot;https://pypi.org/project/defusedxml/&quot;&gt;defusedxml&lt;/a&gt; on PyPI has further information about all known attack vectors with examples and references.</source>
          <target state="translated">PyPI上的&lt;a href=&quot;https://pypi.org/project/defusedxml/&quot;&gt;defusedxml&lt;/a&gt;文档提供了有关所有已知攻击媒介的更多信息，并提供了示例和参考。</target>
        </trans-unit>
        <trans-unit id="52d6ee35bc489f9c966545e9c6e4189b68230cec" translate="yes" xml:space="preserve">
          <source>The documentation for the &lt;a href=&quot;xml.dom#module-xml.dom&quot;&gt;&lt;code&gt;xml.dom&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;xml.sax#module-xml.sax&quot;&gt;&lt;code&gt;xml.sax&lt;/code&gt;&lt;/a&gt; packages are the definition of the Python bindings for the DOM and SAX interfaces.</source>
          <target state="translated">&lt;a href=&quot;xml.dom#module-xml.dom&quot;&gt; &lt;code&gt;xml.dom&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;xml.sax#module-xml.sax&quot;&gt; &lt;code&gt;xml.sax&lt;/code&gt; &lt;/a&gt;软件包的文档是DOM和SAX接口的Python绑定的定义。</target>
        </trans-unit>
        <trans-unit id="98dc23305981bc90fc36fd9227d9b674c345d97d" translate="yes" xml:space="preserve">
          <source>The earlier SAX 1 interface provided by the Python XML Special Interest Group used a more Java-like interface for this method. Since most parsers used from Python did not take advantage of the older interface, the simpler signature was chosen to replace it. To convert old code to the new interface, use &lt;em&gt;content&lt;/em&gt; instead of slicing content with the old &lt;em&gt;offset&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; parameters.</source>
          <target state="translated">Python XML特别兴趣小组提供的较早的SAX 1接口对该方法使用了更类似于Java的接口。由于大多数从Python使用的解析器没有利用旧的接口，因此选择了较简单的签名来代替它。要将旧代码转换为新接口，请使用&lt;em&gt;内容，&lt;/em&gt;而不是使用旧的&lt;em&gt;offset&lt;/em&gt;和&lt;em&gt;length&lt;/em&gt;参数对&lt;em&gt;内容&lt;/em&gt;进行切片。</target>
        </trans-unit>
        <trans-unit id="76ec6d13cceb3b560d2ffecdd1e137e7f039d3d4" translate="yes" xml:space="preserve">
          <source>The earliest representable &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;datetime(MINYEAR, 1, 1,
tzinfo=None)&lt;/code&gt;.</source>
          <target state="translated">最早可表示的&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;datetime(MINYEAR, 1, 1, tzinfo=None)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9003e875acf880f08070ec4d1db25f2fc4aa782b" translate="yes" xml:space="preserve">
          <source>The earliest representable &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;time(0, 0, 0, 0)&lt;/code&gt;.</source>
          <target state="translated">最早可表示&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;time(0, 0, 0, 0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47c650a99a648604cd819bc36b58ac25362286da" translate="yes" xml:space="preserve">
          <source>The earliest representable date, &lt;code&gt;date(MINYEAR, 1, 1)&lt;/code&gt;.</source>
          <target state="translated">最早的可表示日期 &lt;code&gt;date(MINYEAR, 1, 1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05430a852b21c5e9152499419cfcc1dedc4dbcad" translate="yes" xml:space="preserve">
          <source>The easiest approach for trying out bignum arithmetic is to use the maximum value for &lt;code&gt;prec&lt;/code&gt; as well &lt;a href=&quot;#id5&quot; id=&quot;id3&quot;&gt;2&lt;/a&gt;:</source>
          <target state="translated">对于尝试BIGNUM算术的最简单的方法是使用最大值 &lt;code&gt;prec&lt;/code&gt; 以及&lt;a href=&quot;#id5&quot; id=&quot;id3&quot;&gt;2&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="bef193c5f3fa08733d4d4cd070fcd5c19da9c977" translate="yes" xml:space="preserve">
          <source>The easiest way to create a binary stream is with &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;'b'&lt;/code&gt; in the mode string:</source>
          <target state="translated">创建二进制流的最简单方法是使用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;在模式字符串中带有 &lt;code&gt;'b'&lt;/code&gt; 的位置：</target>
        </trans-unit>
        <trans-unit id="d1d8d451e096581c982d771f39ecd4c6c3d239d0" translate="yes" xml:space="preserve">
          <source>The easiest way to create a text stream is with &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, optionally specifying an encoding:</source>
          <target state="translated">创建文本流的最简单方法是使用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;，可以选择指定一种编码：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
