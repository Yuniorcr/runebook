<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="44f1c1068fb3f75ecb6e1e324e661782e6111e57" translate="yes" xml:space="preserve">
          <source>If the path that &lt;em&gt;cfile&lt;/em&gt; becomes (either explicitly specified or computed) is a symlink or non-regular file, &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; will be raised. This is to act as a warning that import will turn those paths into regular files if it is allowed to write byte-compiled files to those paths. This is a side-effect of import using file renaming to place the final byte-compiled file into place to prevent concurrent file writing issues.</source>
          <target state="translated">如果&lt;em&gt;cfile&lt;/em&gt;变为（明确指定或计算）的路径是符号链接或非常规文件，则将引发&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; &lt;/a&gt;。这是作为警告，如果允许导入将字节编译的文件写入这些路径，则导入会将这些路径转换为常规文件。这是使用文件重命名将最终的字节编译文件放置到位以防止并发文件写入问题的导入的副作用。</target>
        </trans-unit>
        <trans-unit id="ae2d2687ad3551ef8bd1472c724bb07372b1e0e7" translate="yes" xml:space="preserve">
          <source>If the platform supports the &lt;a href=&quot;#os.putenv&quot;&gt;&lt;code&gt;putenv()&lt;/code&gt;&lt;/a&gt; function, this mapping may be used to modify the environment as well as query the environment. &lt;a href=&quot;#os.putenv&quot;&gt;&lt;code&gt;putenv()&lt;/code&gt;&lt;/a&gt; will be called automatically when the mapping is modified.</source>
          <target state="translated">如果平台支持&lt;a href=&quot;#os.putenv&quot;&gt; &lt;code&gt;putenv()&lt;/code&gt; &lt;/a&gt;函数，则此映射可用于修改环境以及查询环境。修改映射后，将自动调用&lt;a href=&quot;#os.putenv&quot;&gt; &lt;code&gt;putenv()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="359b0fc2d0ac172f51521bc634e7ed8e651ae47d" translate="yes" xml:space="preserve">
          <source>If the platform supports the &lt;a href=&quot;#os.unsetenv&quot;&gt;&lt;code&gt;unsetenv()&lt;/code&gt;&lt;/a&gt; function, you can delete items in this mapping to unset environment variables. &lt;a href=&quot;#os.unsetenv&quot;&gt;&lt;code&gt;unsetenv()&lt;/code&gt;&lt;/a&gt; will be called automatically when an item is deleted from &lt;code&gt;os.environ&lt;/code&gt;, and when one of the &lt;code&gt;pop()&lt;/code&gt; or &lt;code&gt;clear()&lt;/code&gt; methods is called.</source>
          <target state="translated">如果平台支持&lt;a href=&quot;#os.unsetenv&quot;&gt; &lt;code&gt;unsetenv()&lt;/code&gt; &lt;/a&gt;函数，则可以删除此映射中的项以取消设置环境变量。当从 &lt;code&gt;os.environ&lt;/code&gt; 中删除一项时，以及当 &lt;code&gt;pop()&lt;/code&gt; 或 &lt;code&gt;clear()&lt;/code&gt; 方法之一被调用时，&lt;a href=&quot;#os.unsetenv&quot;&gt; &lt;code&gt;unsetenv()&lt;/code&gt; &lt;/a&gt;将被自动调用。</target>
        </trans-unit>
        <trans-unit id="c98e4ced54c3de726831a13682ac05eaffe4094a" translate="yes" xml:space="preserve">
          <source>If the priority of a task changes, how do you move it to a new position in the heap?</source>
          <target state="translated">如果一个任务的优先级发生变化,如何将其移动到堆中的新位置?</target>
        </trans-unit>
        <trans-unit id="a498076041fadf1d07bb9300b846a643e776f60f" translate="yes" xml:space="preserve">
          <source>If the process does not terminate after &lt;em&gt;timeout&lt;/em&gt; seconds, a &lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt;&lt;code&gt;TimeoutExpired&lt;/code&gt;&lt;/a&gt; exception will be raised. Catching this exception and retrying communication will not lose any output.</source>
          <target state="translated">如果该过程在&lt;em&gt;超时&lt;/em&gt;秒后仍未终止，则将引发&lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt; &lt;code&gt;TimeoutExpired&lt;/code&gt; &lt;/a&gt;异常。捕获此异常并重试通信不会丢失任何输出。</target>
        </trans-unit>
        <trans-unit id="1d9458f7fed96d843f923a0a12238a4b1050fd9f" translate="yes" xml:space="preserve">
          <source>If the process does not terminate after &lt;em&gt;timeout&lt;/em&gt; seconds, raise a &lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt;&lt;code&gt;TimeoutExpired&lt;/code&gt;&lt;/a&gt; exception. It is safe to catch this exception and retry the wait.</source>
          <target state="translated">如果该过程在&lt;em&gt;超时&lt;/em&gt;秒后仍未终止，请引发&lt;a href=&quot;#subprocess.TimeoutExpired&quot;&gt; &lt;code&gt;TimeoutExpired&lt;/code&gt; &lt;/a&gt;异常。捕获此异常并重试等待是安全的。</target>
        </trans-unit>
        <trans-unit id="29bf9cf7b23c8ae6d712f6a347508cd693444005" translate="yes" xml:space="preserve">
          <source>If the process exited normally (if &lt;code&gt;WIFEXITED(status)&lt;/code&gt; is true), return the process exit status (return &lt;code&gt;WEXITSTATUS(status)&lt;/code&gt;): result greater than or equal to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053fd58ab602e7071a8906f099acb443c648c32b" translate="yes" xml:space="preserve">
          <source>If the process runs longer than &lt;em&gt;timeout&lt;/em&gt; seconds (&lt;a href=&quot;#test.support.SHORT_TIMEOUT&quot;&gt;&lt;code&gt;SHORT_TIMEOUT&lt;/code&gt;&lt;/a&gt; by default), kill the process and raise an &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;. The timeout feature is not available on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ed2fec98f279431226b0412fb7368d8cbf983e" translate="yes" xml:space="preserve">
          <source>If the process was terminated by a signal (if &lt;code&gt;WIFSIGNALED(status)&lt;/code&gt; is true), return &lt;code&gt;-signum&lt;/code&gt; where &lt;em&gt;signum&lt;/em&gt; is the number of the signal that caused the process to terminate (return &lt;code&gt;-WTERMSIG(status)&lt;/code&gt;): result less than 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7262122dc4b6b829f446558da074d130b2a5add" translate="yes" xml:space="preserve">
          <source>If the queue was initialized with &lt;code&gt;maxsize=0&lt;/code&gt; (the default), then &lt;a href=&quot;#asyncio.Queue.full&quot;&gt;&lt;code&gt;full()&lt;/code&gt;&lt;/a&gt; never returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果队列使用 &lt;code&gt;maxsize=0&lt;/code&gt; （默认值）初始化，则&lt;a href=&quot;#asyncio.Queue.full&quot;&gt; &lt;code&gt;full()&lt;/code&gt; &lt;/a&gt;永远不会返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d78a8ec352511b839919bc03232ce959083bf45a" translate="yes" xml:space="preserve">
          <source>If the referent is unpicklable then this will raise an exception.</source>
          <target state="translated">如果引用是不可picklable,那么这将引发一个异常。</target>
        </trans-unit>
        <trans-unit id="91ada59b96a0d8cfa6712ce3f61b93c29c1b67a6" translate="yes" xml:space="preserve">
          <source>If the referent no longer exists, calling the reference object returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果引用对象不再存在，则调用引用对象将返回&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="909c01304c9716dba0fff5875fca0ce88ce2dc59" translate="yes" xml:space="preserve">
          <source>If the regular expression uses the &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; syntax, the &lt;em&gt;groupN&lt;/em&gt; arguments may also be strings identifying groups by their group name. If a string argument is not used as a group name in the pattern, an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">如果正则表达式使用 &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; 语法，则&lt;em&gt;groupN&lt;/em&gt;参数也可以是通过组名标识组的字符串。如果在模式中未将字符串参数用作组名，则会引发&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="9150bc1a07c7bb0e57bdc9eaf32d4f61f9798eda" translate="yes" xml:space="preserve">
          <source>If the reply matches the digest of the message using &lt;em&gt;authkey&lt;/em&gt; as the key then a welcome message is sent to the other end of the connection. Otherwise &lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt;&lt;code&gt;AuthenticationError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">如果答复与使用&lt;em&gt;authkey&lt;/em&gt;作为密钥的消息摘要匹配，则将欢迎消息发送到连接的另一端。否则会引发&lt;a href=&quot;#multiprocessing.AuthenticationError&quot;&gt; &lt;code&gt;AuthenticationError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="335f0408ae4594f8d3341768174fc78d95715a5d" translate="yes" xml:space="preserve">
          <source>If the request was mapped to a directory, the directory is checked for a file named &lt;code&gt;index.html&lt;/code&gt; or &lt;code&gt;index.htm&lt;/code&gt; (in that order). If found, the file&amp;rsquo;s contents are returned; otherwise a directory listing is generated by calling the &lt;code&gt;list_directory()&lt;/code&gt; method. This method uses &lt;a href=&quot;os#os.listdir&quot;&gt;&lt;code&gt;os.listdir()&lt;/code&gt;&lt;/a&gt; to scan the directory, and returns a &lt;code&gt;404&lt;/code&gt; error response if the &lt;a href=&quot;os#os.listdir&quot;&gt;&lt;code&gt;listdir()&lt;/code&gt;&lt;/a&gt; fails.</source>
          <target state="translated">如果请求已映射到目录，则将在目录中检查名为 &lt;code&gt;index.html&lt;/code&gt; 或 &lt;code&gt;index.htm&lt;/code&gt; 的文件（按此顺序）。如果找到，则返回文件的内容；否则，通过调用 &lt;code&gt;list_directory()&lt;/code&gt; 方法生成目录列表。此方法使用&lt;a href=&quot;os#os.listdir&quot;&gt; &lt;code&gt;os.listdir()&lt;/code&gt; &lt;/a&gt;扫描目录，如果&lt;a href=&quot;os#os.listdir&quot;&gt; &lt;code&gt;listdir()&lt;/code&gt; &lt;/a&gt;失败，则返回 &lt;code&gt;404&lt;/code&gt; 错误响应。</target>
        </trans-unit>
        <trans-unit id="785b81ecc43784be1a5372c2c81457edd17d9681" translate="yes" xml:space="preserve">
          <source>If the request was mapped to a file, it is opened. Any &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception in opening the requested file is mapped to a &lt;code&gt;404&lt;/code&gt;, &lt;code&gt;'File not found'&lt;/code&gt; error. If there was a &lt;code&gt;'If-Modified-Since'&lt;/code&gt; header in the request, and the file was not modified after this time, a &lt;code&gt;304&lt;/code&gt;, &lt;code&gt;'Not Modified'&lt;/code&gt; response is sent. Otherwise, the content type is guessed by calling the &lt;code&gt;guess_type()&lt;/code&gt; method, which in turn uses the &lt;em&gt;extensions_map&lt;/em&gt; variable, and the file contents are returned.</source>
          <target state="translated">如果请求已映射到文件，则将其打开。任何&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;在打开的pool异常映射到 &lt;code&gt;404&lt;/code&gt; ， &lt;code&gt;'File not found'&lt;/code&gt; 的错误。如果请求中包含 &lt;code&gt;'If-Modified-Since'&lt;/code&gt; 标头，并且在此之后未修改文件，则发送 &lt;code&gt;304&lt;/code&gt; ， &lt;code&gt;'Not Modified'&lt;/code&gt; 响应。否则，通过调用 &lt;code&gt;guess_type()&lt;/code&gt; 方法来猜测内容类型，该方法又使用&lt;em&gt;extensions_map&lt;/em&gt;变量，并返回文件内容。</target>
        </trans-unit>
        <trans-unit id="164f68a4853c0030aecaf77543f70404dffd338d" translate="yes" xml:space="preserve">
          <source>If the requested module already exists in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;, that module should be used and reloaded. Otherwise the loader should create a new module and insert it into &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt; before any loading begins, to prevent recursion from the import. If the loader inserted a module and the load fails, it must be removed by the loader from &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt;; modules already in &lt;a href=&quot;sys#sys.modules&quot;&gt;&lt;code&gt;sys.modules&lt;/code&gt;&lt;/a&gt; before the loader began execution should be left alone (see &lt;a href=&quot;#importlib.util.module_for_loader&quot;&gt;&lt;code&gt;importlib.util.module_for_loader()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">如果&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中&lt;/a&gt;已经存在请求的模块，则应使用该模块并重新加载。否则，加载程序应创建一个新模块，并在开始任何加载之前将其插入&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中&lt;/a&gt;，以防止从导入中递归。如果加载程序插入了模块而加载失败，则加载程序必须将其从&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中&lt;/a&gt;删除；在加载程序开始执行之前，已经在&lt;a href=&quot;sys#sys.modules&quot;&gt; &lt;code&gt;sys.modules&lt;/code&gt; 中的&lt;/a&gt;模块应该被保留（请参阅&lt;a href=&quot;#importlib.util.module_for_loader&quot;&gt; &lt;code&gt;importlib.util.module_for_loader()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="03b4e196b2e9acd5ba4a384dea909aa2a6ee615a" translate="yes" xml:space="preserve">
          <source>If the resource cannot be found, &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">如果找不到资源，则会引发&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0df3e09c5b36021f773ac46f41a2c43194c9fca6" translate="yes" xml:space="preserve">
          <source>If the resource cleanup isn&amp;rsquo;t already neatly bundled into a standalone function, then it is still possible to use the decorator form of &lt;a href=&quot;#contextlib.ExitStack.callback&quot;&gt;&lt;code&gt;ExitStack.callback()&lt;/code&gt;&lt;/a&gt; to declare the resource cleanup in advance:</source>
          <target state="translated">如果资源清理还没有整齐地捆绑到一个独立的函数中，那么仍然可以使用&lt;a href=&quot;#contextlib.ExitStack.callback&quot;&gt; &lt;code&gt;ExitStack.callback()&lt;/code&gt; &lt;/a&gt;的修饰符形式提前声明资源清理：</target>
        </trans-unit>
        <trans-unit id="da1ab5f376bf69b7b54158c8e22471cb84fdbe8d" translate="yes" xml:space="preserve">
          <source>If the resource does not concretely exist on the file system, raise &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果该资源在文件系统上不存在，请引发&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e8f1ce475d9c36397896ac205e613c6b1f406f21" translate="yes" xml:space="preserve">
          <source>If the result is zero then its sign will be the sign of &lt;em&gt;self&lt;/em&gt;.</source>
          <target state="translated">如果结果为零，则其符号将为&lt;em&gt;self&lt;/em&gt;的符号。</target>
        </trans-unit>
        <trans-unit id="5a98dda2c1e7c49ba619d9723afd406089bc22f0" translate="yes" xml:space="preserve">
          <source>If the return code was non-zero it raises a &lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt;&lt;code&gt;CalledProcessError&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt;&lt;code&gt;CalledProcessError&lt;/code&gt;&lt;/a&gt; object will have the return code in the &lt;a href=&quot;#subprocess.CalledProcessError.returncode&quot;&gt;&lt;code&gt;returncode&lt;/code&gt;&lt;/a&gt; attribute and any output in the &lt;a href=&quot;#subprocess.CalledProcessError.output&quot;&gt;&lt;code&gt;output&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">如果返回码非零，则引发&lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt; &lt;code&gt;CalledProcessError&lt;/code&gt; &lt;/a&gt;。该&lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt; &lt;code&gt;CalledProcessError&lt;/code&gt; &lt;/a&gt;对象将在返回的代码&lt;a href=&quot;#subprocess.CalledProcessError.returncode&quot;&gt; &lt;code&gt;returncode&lt;/code&gt; &lt;/a&gt;属性，在任何输出&lt;a href=&quot;#subprocess.CalledProcessError.output&quot;&gt; &lt;code&gt;output&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="1499f9fffce42eacfcc4c16359b64bca87b01b5c" translate="yes" xml:space="preserve">
          <source>If the return value &lt;em&gt;is&lt;/em&gt; an iterator, then iterating over it once will consume it and subsequent iterations will result in an empty list:</source>
          <target state="translated">如果返回值&lt;em&gt;是&lt;/em&gt;一个迭代器，则对其进行一次迭代将消耗它，随后的迭代将导致一个空列表：</target>
        </trans-unit>
        <trans-unit id="108f2d44c66943b7534256bc63b5f502b9a8ba5a" translate="yes" xml:space="preserve">
          <source>If the root is reached, and it has a level of NOTSET, then all messages will be processed. Otherwise, the root&amp;rsquo;s level will be used as the effective level.</source>
          <target state="translated">如果到达根目录，并且其级别为NOTSET，则将处理所有消息。否则，将使用根的级别作为有效级别。</target>
        </trans-unit>
        <trans-unit id="09d539352f4b8bde471c4c7a5b1b7605d75d424f" translate="yes" xml:space="preserve">
          <source>If the sample size is larger than the population size, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">如果样本大小大于总体大小，则会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d4676a6fdc2402cf5a3dbbb4a4b2ed50deb25ed" translate="yes" xml:space="preserve">
          <source>If the second argument is omitted, the super object returned is unbound. If the second argument is an object, &lt;code&gt;isinstance(obj, type)&lt;/code&gt; must be true. If the second argument is a type, &lt;code&gt;issubclass(type2, type)&lt;/code&gt; must be true (this is useful for classmethods).</source>
          <target state="translated">如果省略第二个参数，则返回的超级对象是未绑定的。如果第二个参数是一个对象，则 &lt;code&gt;isinstance(obj, type)&lt;/code&gt; 必须为true。如果第二个参数是类型，则 &lt;code&gt;issubclass(type2, type)&lt;/code&gt; 必须为true（这对于类方法很有用）。</target>
        </trans-unit>
        <trans-unit id="5001076d001501658658c23588861355b9db6f5b" translate="yes" xml:space="preserve">
          <source>If the signal is not trapped (default), mixing floats and Decimals is permitted in the &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; constructor, &lt;a href=&quot;#decimal.Context.create_decimal&quot;&gt;&lt;code&gt;create_decimal()&lt;/code&gt;&lt;/a&gt; and all comparison operators. Both conversion and comparisons are exact. Any occurrence of a mixed operation is silently recorded by setting &lt;a href=&quot;#decimal.FloatOperation&quot;&gt;&lt;code&gt;FloatOperation&lt;/code&gt;&lt;/a&gt; in the context flags. Explicit conversions with &lt;a href=&quot;#decimal.Decimal.from_float&quot;&gt;&lt;code&gt;from_float()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#decimal.Context.create_decimal_from_float&quot;&gt;&lt;code&gt;create_decimal_from_float()&lt;/code&gt;&lt;/a&gt; do not set the flag.</source>
          <target state="translated">如果未捕获信号（默认），则在&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;构造函数，&lt;a href=&quot;#decimal.Context.create_decimal&quot;&gt; &lt;code&gt;create_decimal()&lt;/code&gt; &lt;/a&gt;和所有比较运算符中允许混合使用float和Decimals 。转换和比较都是准确的。通过在上下文标志中设置&lt;a href=&quot;#decimal.FloatOperation&quot;&gt; &lt;code&gt;FloatOperation&lt;/code&gt; &lt;/a&gt;，可以静默记录任何混合操作的发生。使用&lt;a href=&quot;#decimal.Decimal.from_float&quot;&gt; &lt;code&gt;from_float()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#decimal.Context.create_decimal_from_float&quot;&gt; &lt;code&gt;create_decimal_from_float()&lt;/code&gt; &lt;/a&gt;进行的显式转换不会设置该标志。</target>
        </trans-unit>
        <trans-unit id="5eb98687458be9bdfcd1779f07871d42fe11615b" translate="yes" xml:space="preserve">
          <source>If the specified check is not supported, an &lt;a href=&quot;#lzma.LZMAError&quot;&gt;&lt;code&gt;LZMAError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">如果不支持指定的检查，&lt;a href=&quot;#lzma.LZMAError&quot;&gt; &lt;code&gt;LZMAError&lt;/code&gt; &lt;/a&gt;引发LZMAError。</target>
        </trans-unit>
        <trans-unit id="5b54c9f0cfe02eb7352da72b9945e23c261ee5f4" translate="yes" xml:space="preserve">
          <source>If the specified sound cannot be found, do not play the system default sound.</source>
          <target state="translated">如果找不到指定的声音,不要播放系统默认的声音。</target>
        </trans-unit>
        <trans-unit id="778c39a7849194812f3b69dbd53ec4638f531eda" translate="yes" xml:space="preserve">
          <source>If the specified value is &lt;code&gt;True&lt;/code&gt;, the configuration is processed as described in the section on &lt;a href=&quot;#logging-config-dict-incremental&quot;&gt;Incremental Configuration&lt;/a&gt;.</source>
          <target state="translated">如果指定的值为 &lt;code&gt;True&lt;/code&gt; ，则按照&amp;ldquo; &lt;a href=&quot;#logging-config-dict-incremental&quot;&gt;增量配置&lt;/a&gt; &amp;rdquo;部分中的描述处理配置。</target>
        </trans-unit>
        <trans-unit id="06cc8f856e11dad88ac598335b513ab61be78c92" translate="yes" xml:space="preserve">
          <source>If the start method has not been fixed and &lt;em&gt;allow_none&lt;/em&gt; is false, then the start method is fixed to the default and the name is returned. If the start method has not been fixed and &lt;em&gt;allow_none&lt;/em&gt; is true then &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">如果尚未固定启动方法，并且&lt;em&gt;allow_none&lt;/em&gt;为false，则将启动方法固定为默认值，并返回名称。如果启动方法尚未修复且&lt;em&gt;allow_none&lt;/em&gt;为true，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8dc33b40746a00e1cdecb86672318e2613660654" translate="yes" xml:space="preserve">
          <source>If the string ends with the &lt;em&gt;suffix&lt;/em&gt; string and that &lt;em&gt;suffix&lt;/em&gt; is not empty, return &lt;code&gt;string[:-len(suffix)]&lt;/code&gt;. Otherwise, return a copy of the original string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4843e8d12f8d5f0a56e982e7b90def6480848b" translate="yes" xml:space="preserve">
          <source>If the string starts with the &lt;em&gt;prefix&lt;/em&gt; string, return &lt;code&gt;string[len(prefix):]&lt;/code&gt;. Otherwise, return a copy of the original string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8c9208a62d78a294576a65a53059a1c5f6f17a" translate="yes" xml:space="preserve">
          <source>If the subclass overrides the constructor, it must make sure to invoke the base class constructor (&lt;code&gt;Thread.__init__()&lt;/code&gt;) before doing anything else to the thread.</source>
          <target state="translated">如果子类重写了构造函数，则必须确保在对 &lt;code&gt;Thread.__init__()&lt;/code&gt; 执行其他任何操作之前，先调用基类的构造函数（Thread .__ init __（））。</target>
        </trans-unit>
        <trans-unit id="acce8b93fe985a72766f9ac89c69d8af02e986e6" translate="yes" xml:space="preserve">
          <source>If the submitted form data contains more than one field with the same name, the object retrieved by &lt;code&gt;form[key]&lt;/code&gt; is not a &lt;code&gt;FieldStorage&lt;/code&gt; or &lt;code&gt;MiniFieldStorage&lt;/code&gt; instance but a list of such instances. Similarly, in this situation, &lt;code&gt;form.getvalue(key)&lt;/code&gt; would return a list of strings. If you expect this possibility (when your HTML form contains multiple fields with the same name), use the &lt;a href=&quot;#cgi.FieldStorage.getlist&quot;&gt;&lt;code&gt;getlist()&lt;/code&gt;&lt;/a&gt; method, which always returns a list of values (so that you do not need to special-case the single item case). For example, this code concatenates any number of username fields, separated by commas:</source>
          <target state="translated">如果提交的表单数据包含多个同名字段，则由 &lt;code&gt;form[key]&lt;/code&gt; 检索的对象不是 &lt;code&gt;FieldStorage&lt;/code&gt; 或 &lt;code&gt;MiniFieldStorage&lt;/code&gt; 实例，而是此类实例的列表。同样，在这种情况下， &lt;code&gt;form.getvalue(key)&lt;/code&gt; 将返回字符串列表。如果您期望这种可能性（当您的HTML表单包含具有相同名称的多个字段时），请使用&lt;a href=&quot;#cgi.FieldStorage.getlist&quot;&gt; &lt;code&gt;getlist()&lt;/code&gt; &lt;/a&gt;方法，该方法始终返回值列表（这样就无需对单个项目的大小写进行特殊处理）。例如，此代码连接任意数量的用户名字段，并用逗号分隔：</target>
        </trans-unit>
        <trans-unit id="5ca69890189daafd25a2e36e6b3b7787040e88e4" translate="yes" xml:space="preserve">
          <source>If the subprocess hasn&amp;rsquo;t returned yet, and close transports of &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt;, and &lt;em&gt;stderr&lt;/em&gt; pipes.</source>
          <target state="translated">如果子进程尚未返回，则关闭&lt;em&gt;stdin&lt;/em&gt;，&lt;em&gt;stdout&lt;/em&gt;和&lt;em&gt;stderr&lt;/em&gt;管道的传输。</target>
        </trans-unit>
        <trans-unit id="97b2ccdb92b73cedf9597250b83de25464d1e506" translate="yes" xml:space="preserve">
          <source>If the supplied path directly references a script file (whether as source or as precompiled byte code), then &lt;code&gt;__file__&lt;/code&gt; will be set to the supplied path, and &lt;code&gt;__spec__&lt;/code&gt;, &lt;code&gt;__cached__&lt;/code&gt;, &lt;code&gt;__loader__&lt;/code&gt; and &lt;code&gt;__package__&lt;/code&gt; will all be set to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果提供的路径直接引用脚本文件（无论是作为源文件还是作为预编译的字节码），则将 &lt;code&gt;__file__&lt;/code&gt; 设置为提供的路径，并将 &lt;code&gt;__spec__&lt;/code&gt; ， &lt;code&gt;__cached__&lt;/code&gt; ， &lt;code&gt;__loader__&lt;/code&gt; 和 &lt;code&gt;__package__&lt;/code&gt; 都设置为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c60916833581a918770fd11c43105b09a19f5fd3" translate="yes" xml:space="preserve">
          <source>If the supplied path is a reference to a valid sys.path entry, then &lt;code&gt;__spec__&lt;/code&gt; will be set appropriately for the imported &lt;code&gt;__main__&lt;/code&gt; module (that is, &lt;code&gt;__spec__.name&lt;/code&gt; will always be &lt;code&gt;__main__&lt;/code&gt;). &lt;code&gt;__file__&lt;/code&gt;, &lt;code&gt;__cached__&lt;/code&gt;, &lt;code&gt;__loader__&lt;/code&gt; and &lt;code&gt;__package__&lt;/code&gt; will be &lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#import-mod-attrs&quot;&gt;set as normal&lt;/a&gt; based on the module spec.</source>
          <target state="translated">如果提供的路径是对有效sys.path条目的引用，则将为导入的 &lt;code&gt;__main__&lt;/code&gt; 模块适当地设置 &lt;code&gt;__spec__&lt;/code&gt; （即 &lt;code&gt;__spec__.name&lt;/code&gt; 始终为 &lt;code&gt;__main__&lt;/code&gt; ）。 &lt;code&gt;__file__&lt;/code&gt; ， &lt;code&gt;__cached__&lt;/code&gt; ， &lt;code&gt;__loader__&lt;/code&gt; 和 &lt;code&gt;__package__&lt;/code&gt; 将被&lt;a href=&quot;https://docs.python.org/3.8/reference/import.html#import-mod-attrs&quot;&gt;设定为正常&lt;/a&gt;基于模块规范。</target>
        </trans-unit>
        <trans-unit id="0f2aeb9c49d543acbef15ce0272a7d7b10a0003a" translate="yes" xml:space="preserve">
          <source>If the supplied path is a reference to a valid sys.path entry, then &lt;code&gt;__spec__&lt;/code&gt; will be set appropriately for the imported &lt;code&gt;__main__&lt;/code&gt; module (that is, &lt;code&gt;__spec__.name&lt;/code&gt; will always be &lt;code&gt;__main__&lt;/code&gt;). &lt;code&gt;__file__&lt;/code&gt;, &lt;code&gt;__cached__&lt;/code&gt;, &lt;code&gt;__loader__&lt;/code&gt; and &lt;code&gt;__package__&lt;/code&gt; will be &lt;a href=&quot;https://docs.python.org/3.9/reference/import.html#import-mod-attrs&quot;&gt;set as normal&lt;/a&gt; based on the module spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adf55313515a9d46f4badde3d9f05bb3bac807d" translate="yes" xml:space="preserve">
          <source>If the system call is interrupted and the signal handler does not raise an exception, the function now retries the system call instead of raising an &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt; exception (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt; for the rationale).</source>
          <target state="translated">如果系统调用被中断并且信号处理程序没有引发异常，则该函数现在重试系统调用，而不是引发&lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt;异常（有关原理，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0475&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 475&lt;/strong&gt;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a6d43cf81da71fff4123417dbbd417d2066dd963" translate="yes" xml:space="preserve">
          <source>If the system has little free memory, snapshots can be written on disk using the &lt;a href=&quot;#tracemalloc.Snapshot.dump&quot;&gt;&lt;code&gt;Snapshot.dump()&lt;/code&gt;&lt;/a&gt; method to analyze the snapshot offline. Then use the &lt;a href=&quot;#tracemalloc.Snapshot.load&quot;&gt;&lt;code&gt;Snapshot.load()&lt;/code&gt;&lt;/a&gt; method reload the snapshot.</source>
          <target state="translated">如果系统的可用内存很少，则可以使用&lt;a href=&quot;#tracemalloc.Snapshot.dump&quot;&gt; &lt;code&gt;Snapshot.dump()&lt;/code&gt; &lt;/a&gt;方法将快照写入磁盘，以离线分析快照。然后使用&lt;a href=&quot;#tracemalloc.Snapshot.load&quot;&gt; &lt;code&gt;Snapshot.load()&lt;/code&gt; &lt;/a&gt;方法重新加载快照。</target>
        </trans-unit>
        <trans-unit id="31f84dc9d5116f5e6dfe6a1466f5a476a9188d05" translate="yes" xml:space="preserve">
          <source>If the target is omitted (or &lt;code&gt;None&lt;/code&gt;), the source must be a directory and the target will be a file with the same name as the source, with a &lt;code&gt;.pyz&lt;/code&gt; extension added.</source>
          <target state="translated">如果省略了目标（或 &lt;code&gt;None&lt;/code&gt; ），则源必须是目录，并且目标将是与源同名的文件，并添加 &lt;code&gt;.pyz&lt;/code&gt; 扩展名。</target>
        </trans-unit>
        <trans-unit id="a81ad72c0eb0b73e6a8f61b1a3e045791f08818e" translate="yes" xml:space="preserve">
          <source>If the terminal size cannot be successfully queried, either because the system doesn&amp;rsquo;t support querying, or because we are not connected to a terminal, the value given in &lt;code&gt;fallback&lt;/code&gt; parameter is used. &lt;code&gt;fallback&lt;/code&gt; defaults to &lt;code&gt;(80, 24)&lt;/code&gt; which is the default size used by many terminal emulators.</source>
          <target state="translated">如果由于系统不支持查询或由于我们未连接到终端而无法成功查询终端大小，则使用 &lt;code&gt;fallback&lt;/code&gt; 参数中给出的值。 &lt;code&gt;fallback&lt;/code&gt; 的默认值为 &lt;code&gt;(80, 24)&lt;/code&gt; ，这是许多终端仿真器使用的默认大小。</target>
        </trans-unit>
        <trans-unit id="2de2938d3bd0d33a2753ba4337962dd33d95e0ce" translate="yes" xml:space="preserve">
          <source>If the testing strategy changes, there is no need to change the source code.</source>
          <target state="translated">如果测试策略发生变化,不需要修改源代码。</target>
        </trans-unit>
        <trans-unit id="bcd64126f5fb037416eebb3476593dfc24805624" translate="yes" xml:space="preserve">
          <source>If the transport has a buffer for outgoing data, buffered data will be flushed asynchronously. No more data will be received. After all buffered data is flushed, the protocol&amp;rsquo;s &lt;a href=&quot;#asyncio.BaseProtocol.connection_lost&quot;&gt;&lt;code&gt;protocol.connection_lost()&lt;/code&gt;&lt;/a&gt; method will be called with &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; as its argument.</source>
          <target state="translated">如果传输具有用于传出数据的缓冲区，则将异步刷新缓冲的数据。不会再收到任何数据。刷新所有缓冲的数据后，将以&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;为参数调用协议的&lt;a href=&quot;#asyncio.BaseProtocol.connection_lost&quot;&gt; &lt;code&gt;protocol.connection_lost()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="3f1d6afc6fe93a09cfe3361f1b4868b729dcdad9" translate="yes" xml:space="preserve">
          <source>If the two operands are unequal, return the number closest to the first operand in the direction of the second operand. If both operands are numerically equal, return a copy of the first operand with the sign set to be the same as the sign of the second operand.</source>
          <target state="translated">如果两个操作数不相等,则在第二个操作数的方向上返回最接近第一个操作数的数字。如果两个操作数都相等,则返回第一个操作数的副本,但符号设置为与第二个操作数的符号相同。</target>
        </trans-unit>
        <trans-unit id="5a546ad02eac6e07241889e84cea3b1a7f283a82" translate="yes" xml:space="preserve">
          <source>If the underlying object is writable, the memoryview supports one-dimensional slice assignment. Resizing is not allowed:</source>
          <target state="translated">如果底层对象是可写的,内存视图支持一维分片分配。不允许调整大小。</target>
        </trans-unit>
        <trans-unit id="348a791e58f575f17b67e607cf2cfc4ed4735592" translate="yes" xml:space="preserve">
          <source>If the user would like catch errors manually, the feature can be enable by setting &lt;code&gt;exit_on_error&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1896841bb368d293e9660afd2874585397d59819" translate="yes" xml:space="preserve">
          <source>If the value &amp;ldquo;using_IDLE&amp;rdquo; in the configuration dictionary is &lt;code&gt;False&lt;/code&gt; (default value), also enter mainloop. Remark: If IDLE with the &lt;code&gt;-n&lt;/code&gt; switch (no subprocess) is used, this value should be set to &lt;code&gt;True&lt;/code&gt; in &lt;code&gt;turtle.cfg&lt;/code&gt;. In this case IDLE&amp;rsquo;s own mainloop is active also for the client script.</source>
          <target state="translated">如果配置字典中的&amp;ldquo; using_IDLE&amp;rdquo;值为 &lt;code&gt;False&lt;/code&gt; （默认值），则还要输入mainloop。备注：如果使用带 &lt;code&gt;-n&lt;/code&gt; 开关的IDLE （无子 &lt;code&gt;turtle.cfg&lt;/code&gt; ），则应在turtle.cfg中将此值设置为 &lt;code&gt;True&lt;/code&gt; 。在这种情况下，IDLE自己的mainloop对于客户端脚本也是活动的。</target>
        </trans-unit>
        <trans-unit id="89e5de1d1a57cbd9a0fc9d4e4a4217ecc10e0356" translate="yes" xml:space="preserve">
          <source>If the value contains binary data, it is converted into a &lt;a href=&quot;email.header#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; object using the &lt;code&gt;unknown-8bit&lt;/code&gt; charset. Otherwise it is returned unmodified.</source>
          <target state="translated">如果该值包含二进制数据，则使用 &lt;code&gt;unknown-8bit&lt;/code&gt; 字符集将其转换为&lt;a href=&quot;email.header#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;对象。否则，将返回原样。</target>
        </trans-unit>
        <trans-unit id="3065c24d18047dbd8738a4165aafe7e2b3d722cb" translate="yes" xml:space="preserve">
          <source>If the value contains non-ASCII characters, the charset and language may be explicitly controlled by specifying the value as a three tuple in the format &lt;code&gt;(CHARSET, LANGUAGE, VALUE)&lt;/code&gt;, where &lt;code&gt;CHARSET&lt;/code&gt; is a string naming the charset to be used to encode the value, &lt;code&gt;LANGUAGE&lt;/code&gt; can usually be set to &lt;code&gt;None&lt;/code&gt; or the empty string (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt; for other possibilities), and &lt;code&gt;VALUE&lt;/code&gt; is the string value containing non-ASCII code points. If a three tuple is not passed and the value contains non-ASCII characters, it is automatically encoded in &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt; format using a &lt;code&gt;CHARSET&lt;/code&gt; of &lt;code&gt;utf-8&lt;/code&gt; and a &lt;code&gt;LANGUAGE&lt;/code&gt; of &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">如果值包含非ASCII字符，则可以通过将值指定为三个元组来显式地控制字符集和语言，格式为 &lt;code&gt;(CHARSET, LANGUAGE, VALUE)&lt;/code&gt; ，其中 &lt;code&gt;CHARSET&lt;/code&gt; 是一个字符串，用于命名将用于编码字符集的字符集值， &lt;code&gt;LANGUAGE&lt;/code&gt; 通常可以设置为 &lt;code&gt;None&lt;/code&gt; 或空字符串（有关其他可能性，请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;），而 &lt;code&gt;VALUE&lt;/code&gt; 是包含非ASCII代码点的字符串值。如果三元组不通过与所述值包含非ASCII字符，它将自动在编码&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;格式使用 &lt;code&gt;CHARSET&lt;/code&gt; 的 &lt;code&gt;utf-8&lt;/code&gt; 和 &lt;code&gt;LANGUAGE&lt;/code&gt; 的 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8fcbdf6220f66ea7da06b9cbc74f6b8c7af4352" translate="yes" xml:space="preserve">
          <source>If the value contains non-ASCII characters, the charset and language may be explicitly specified using the optional &lt;em&gt;charset&lt;/em&gt; and &lt;em&gt;language&lt;/em&gt; parameters. Optional &lt;em&gt;language&lt;/em&gt; specifies the &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt; language, defaulting to the empty string. Both &lt;em&gt;charset&lt;/em&gt; and &lt;em&gt;language&lt;/em&gt; should be strings. The default is to use the &lt;code&gt;utf8&lt;/code&gt;&lt;em&gt;charset&lt;/em&gt; and &lt;code&gt;None&lt;/code&gt; for the &lt;em&gt;language&lt;/em&gt;.</source>
          <target state="translated">如果该值包含非ASCII字符，则可以使用可选的&lt;em&gt;charset&lt;/em&gt;和&lt;em&gt;language&lt;/em&gt;参数明确指定&lt;em&gt;字符集&lt;/em&gt;和&lt;em&gt;语言&lt;/em&gt;。可选&lt;em&gt;语言&lt;/em&gt;指定&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;语言，默认为空字符串。这两个&lt;em&gt;字符集&lt;/em&gt;和&lt;em&gt;语言&lt;/em&gt;应弦。默认设置是使用 &lt;code&gt;utf8&lt;/code&gt; &lt;em&gt;字符集，&lt;/em&gt;并且对该&lt;em&gt;语言&lt;/em&gt;使用 &lt;code&gt;None&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd5432d4a79d323ca399133a88c268b9b6146b6f" translate="yes" xml:space="preserve">
          <source>If the value for a header in the &lt;code&gt;Message&lt;/code&gt; object originated from a &lt;a href=&quot;email.parser#module-email.parser&quot;&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/a&gt; (as opposed to being set by a program), this attribute indicates whether or not a generator should refold that value when transforming the message back into serialized form. The possible values are:</source>
          <target state="translated">如果 &lt;code&gt;Message&lt;/code&gt; 对象中标头的值源自&lt;a href=&quot;email.parser#module-email.parser&quot;&gt; &lt;code&gt;parser&lt;/code&gt; &lt;/a&gt;（而不是由程序设置），则此属性指示在将消息转换回序列化形式时，生成器是否应重新折叠该值。可能的值为：</target>
        </trans-unit>
        <trans-unit id="61f619f6c6e535a52f8e51d5c113f91f23edb137" translate="yes" xml:space="preserve">
          <source>If the value has (or contains an object that has) an unsupported type, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception is raised &amp;mdash; but garbage data will also be written to the file. The object will not be properly read back by &lt;a href=&quot;#marshal.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果该值具有（或包含具有不支持的类型的）对象类型，则会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;异常-但垃圾数据也将写入该文件。&lt;a href=&quot;#marshal.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;将无法正确读取该对象。</target>
        </trans-unit>
        <trans-unit id="ac70e682ecd6b9523bcc00452173d51c8483ed90" translate="yes" xml:space="preserve">
          <source>If the value has a &lt;code&gt;name&lt;/code&gt; attribute, it is returned to unmodified. Otherwise the &lt;em&gt;name&lt;/em&gt;, and the &lt;em&gt;value&lt;/em&gt; with any CR or LF characters removed, are passed to the &lt;code&gt;header_factory&lt;/code&gt;, and the resulting header object is returned. Any surrogateescaped bytes get turned into the unicode unknown-character glyph.</source>
          <target state="translated">如果该值具有 &lt;code&gt;name&lt;/code&gt; 属性，则将其返回未修改状态。否则，将&lt;em&gt;name&lt;/em&gt;和删除了任何CR或LF字符的&lt;em&gt;值&lt;/em&gt;传递给 &lt;code&gt;header_factory&lt;/code&gt; ，并返回生成的标头对象。任何替代的转义字节都会变成Unicode未知字符字形。</target>
        </trans-unit>
        <trans-unit id="ecac18b5d34fc503358e09e7a4c0d8959266d301" translate="yes" xml:space="preserve">
          <source>If the wait is cancelled, the future &lt;em&gt;aw&lt;/em&gt; is also cancelled.</source>
          <target state="translated">如果等待被取消，则将来的&lt;em&gt;aw&lt;/em&gt;也将被取消。</target>
        </trans-unit>
        <trans-unit id="56c5f97d09e31156fff54feae27ef3f4943d5433" translate="yes" xml:space="preserve">
          <source>If the watcher was previously attached to an event loop, then it is first detached before attaching to the new loop.</source>
          <target state="translated">如果watcher之前被连接到一个事件循环,那么在连接到新的循环之前,会先将其分离。</target>
        </trans-unit>
        <trans-unit id="2bf203d12061685d40f0461125be7723191a6603" translate="yes" xml:space="preserve">
          <source>If the whole &lt;em&gt;string&lt;/em&gt; matches the regular expression &lt;em&gt;pattern&lt;/em&gt;, return a corresponding &lt;a href=&quot;#match-objects&quot;&gt;match object&lt;/a&gt;. Return &lt;code&gt;None&lt;/code&gt; if the string does not match the pattern; note that this is different from a zero-length match.</source>
          <target state="translated">如果整个&lt;em&gt;字符串&lt;/em&gt;与正则表达式&lt;em&gt;模式&lt;/em&gt;匹配，则返回相应的&lt;a href=&quot;#match-objects&quot;&gt;match对象&lt;/a&gt;。如果字符串与模式不匹配，则返回 &lt;code&gt;None&lt;/code&gt; ;否则返回false。请注意，这与零长度匹配不同。</target>
        </trans-unit>
        <trans-unit id="59c52023f4547acb57c7c8cf28c845aed9e66702" translate="yes" xml:space="preserve">
          <source>If the whole &lt;em&gt;string&lt;/em&gt; matches this regular expression, return a corresponding &lt;a href=&quot;#match-objects&quot;&gt;match object&lt;/a&gt;. Return &lt;code&gt;None&lt;/code&gt; if the string does not match the pattern; note that this is different from a zero-length match.</source>
          <target state="translated">如果整个&lt;em&gt;字符串都&lt;/em&gt;与此正则表达式匹配，则返回相应的&lt;a href=&quot;#match-objects&quot;&gt;match对象&lt;/a&gt;。如果字符串与模式不匹配，则返回 &lt;code&gt;None&lt;/code&gt; ;否则返回false。请注意，这与零长度匹配不同。</target>
        </trans-unit>
        <trans-unit id="4d277c1615b59061e36b6cff551c4b7615a3cee8" translate="yes" xml:space="preserve">
          <source>If the wrapped coroutine is not done, this returns the stack where it is suspended. If the coroutine has completed successfully or was cancelled, this returns an empty list. If the coroutine was terminated by an exception, this returns the list of traceback frames.</source>
          <target state="translated">如果封装的coroutine没有完成,则返回它被暂停的栈。如果coroutine已经成功完成或被取消,则返回一个空列表。如果coroutine被异常终止,则返回跟踪帧列表。</target>
        </trans-unit>
        <trans-unit id="18bdf0075a155b02791d5a0bac71eb783654ca33" translate="yes" xml:space="preserve">
          <source>If the wrapped coroutine raised an exception that exception is returned. If the wrapped coroutine returned normally this method returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">如果包装的协程引发了异常，则返回该异常。如果包装好的协程正常返回，则此方法返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f7728d4c859a24cbc45d6d58427ec4561648e7f" translate="yes" xml:space="preserve">
          <source>If there are any exceptions raised during one of the shared fixture functions the test is reported as an error. Because there is no corresponding test instance an &lt;code&gt;_ErrorHolder&lt;/code&gt; object (that has the same interface as a &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt;) is created to represent the error. If you are just using the standard unittest test runner then this detail doesn&amp;rsquo;t matter, but if you are a framework author it may be relevant.</source>
          <target state="translated">如果在共享夹具功能之一期间引发任何异常，则将测试报告为错误。因为没有对应的测试实例，所以 &lt;code&gt;_ErrorHolder&lt;/code&gt; 了_ErrorHolder对象（与&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;具有相同的接口）来表示错误。如果您只是使用标准的单元测试测试运行程序，则此细节无关紧要，但是，如果您是框架作者，则可能很重要。</target>
        </trans-unit>
        <trans-unit id="60d4834d5062c8d19bbd59417935a75681b0f714" translate="yes" xml:space="preserve">
          <source>If there are arguments:</source>
          <target state="translated">如果有争论。</target>
        </trans-unit>
        <trans-unit id="afe713097f513403e4602cccddaf88e097fca7b5" translate="yes" xml:space="preserve">
          <source>If there are capturing groups in the separator and it matches at the start of the string, the result will start with an empty string. The same holds for the end of the string:</source>
          <target state="translated">如果在分隔符中有捕获组,并且它与字符串的开头相匹配,结果将以空字符串开始。同样的情况也适用于字符串的末端。</target>
        </trans-unit>
        <trans-unit id="b105dd89905ca457b0617942c150ccc9ce8c2ecd" translate="yes" xml:space="preserve">
          <source>If there are keyword arguments, they will set the attributes of the same names to the given values.</source>
          <target state="translated">如果有关键字参数,则会将相同名称的属性设置为给定值。</target>
        </trans-unit>
        <trans-unit id="06875e271bfc97aca9aed5132911283e876fd1e3" translate="yes" xml:space="preserve">
          <source>If there are multiple modes with the same frequency, returns the first one encountered in the &lt;em&gt;data&lt;/em&gt;. If the smallest or largest of those is desired instead, use &lt;code&gt;min(multimode(data))&lt;/code&gt; or &lt;code&gt;max(multimode(data))&lt;/code&gt;. If the input &lt;em&gt;data&lt;/em&gt; is empty, &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">如果存在多个具有相同频率的模式，则返回&lt;em&gt;data中&lt;/em&gt;遇到的第一个模式。如果需要最小或最大的值，请使用 &lt;code&gt;min(multimode(data))&lt;/code&gt; 或 &lt;code&gt;max(multimode(data))&lt;/code&gt; 。如果输入&lt;em&gt;数据&lt;/em&gt;为空，则会引发&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f44c76149f8456dfb2f9b8dc82d343dcb9e7029d" translate="yes" xml:space="preserve">
          <source>If there are no remaining path segments in &lt;code&gt;PATH_INFO&lt;/code&gt;, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">如果在没有剩余的路径段 &lt;code&gt;PATH_INFO&lt;/code&gt; ， &lt;code&gt;None&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="70b04fc0fe654b81856797a63a15dc517bb87a72" translate="yes" xml:space="preserve">
          <source>If there are positional arguments, there must be as many as there are items in &lt;code&gt;T._fields&lt;/code&gt;; they will be assigned as attributes of these names.</source>
          <target state="translated">如果有位置参数，则 &lt;code&gt;T._fields&lt;/code&gt; 中的项数必须与之相等。它们将被分配为这些名称的属性。</target>
        </trans-unit>
        <trans-unit id="0f42d2c2054cdfdb7413a7243a89893529ac2223" translate="yes" xml:space="preserve">
          <source>If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to &lt;code&gt;None&lt;/code&gt; in the result.</source>
          <target state="translated">如果有两个参数，则它们必须是长度相等的字符串，并且在结果字典中，x中的每个字符都将映射到y中相同位置的字符。如果有第三个参数，则必须是一个字符串，其字符将在结果中映射为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="710f0541779e51ddda266bf2e4665a21cc66a9aa" translate="yes" xml:space="preserve">
          <source>If there has been no previous &lt;code&gt;EHLO&lt;/code&gt; or &lt;code&gt;HELO&lt;/code&gt; command this session, this method tries ESMTP &lt;code&gt;EHLO&lt;/code&gt; first.</source>
          <target state="translated">如果此会话之前没有以前的 &lt;code&gt;EHLO&lt;/code&gt; 或 &lt;code&gt;HELO&lt;/code&gt; 命令，则此方法首先尝试ESMTP &lt;code&gt;EHLO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1386edd9abb7368a780ead9fa2633755d22aab5e" translate="yes" xml:space="preserve">
          <source>If there has been no previous &lt;code&gt;EHLO&lt;/code&gt; or &lt;code&gt;HELO&lt;/code&gt; command this session, this method tries ESMTP &lt;code&gt;EHLO&lt;/code&gt; first. If the server does ESMTP, message size and each of the specified options will be passed to it (if the option is in the feature set the server advertises). If &lt;code&gt;EHLO&lt;/code&gt; fails, &lt;code&gt;HELO&lt;/code&gt; will be tried and ESMTP options suppressed.</source>
          <target state="translated">如果此会话之前没有以前的 &lt;code&gt;EHLO&lt;/code&gt; 或 &lt;code&gt;HELO&lt;/code&gt; 命令，则此方法首先尝试ESMTP &lt;code&gt;EHLO&lt;/code&gt; 。如果服务器使用ESMTP，则将向其传递邮件大小和每个指定的选项（如果该选项在服务器发布的功能集中）。如果 &lt;code&gt;EHLO&lt;/code&gt; 失败，将尝试 &lt;code&gt;HELO&lt;/code&gt; 并取消显示ESMTP选项。</target>
        </trans-unit>
        <trans-unit id="8264923428e93189de3d9488f3d02a8d83fd11ec" translate="yes" xml:space="preserve">
          <source>If there is a character stream specified, the SAX parser will ignore any byte stream and will not attempt to open a URI connection to the system identifier.</source>
          <target state="translated">如果指定了字符流,SAX解析器将忽略任何字节流,并且不会尝试打开与系统标识符的URI连接。</target>
        </trans-unit>
        <trans-unit id="7846e0ef14d60bd28e7efa81ee77d44a8c2917bd" translate="yes" xml:space="preserve">
          <source>If there is a problem with &lt;em&gt;source&lt;/em&gt;, an exception will be raised. &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; is raised if there is invalid Python syntax, and &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if there is an invalid literal.</source>
          <target state="translated">如果&lt;em&gt;source&lt;/em&gt;有问题，将引发异常。如果Python语法无效，则引发&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;；如果文本文字无效，则引发&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c624ff3e0c15c1748938e12da19d4755d79f2928" translate="yes" xml:space="preserve">
          <source>If there is an decoding error on the server name, the TLS connection will terminate with an &lt;a href=&quot;#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR&quot;&gt;&lt;code&gt;ALERT_DESCRIPTION_INTERNAL_ERROR&lt;/code&gt;&lt;/a&gt; fatal TLS alert message to the client.</source>
          <target state="translated">如果服务器名称上存在解码错误，则TLS连接将终止，&lt;a href=&quot;#ssl.ALERT_DESCRIPTION_INTERNAL_ERROR&quot;&gt; &lt;code&gt;ALERT_DESCRIPTION_INTERNAL_ERROR&lt;/code&gt; &lt;/a&gt;客户端发送ALERT_DESCRIPTION_INTERNAL_ERROR致命TLS警报消息。</target>
        </trans-unit>
        <trans-unit id="c08a28ed04606b4fe20cd569bde11df730c25ffd" translate="yes" xml:space="preserve">
          <source>If there is an error opening the terminal, the underlying curses library may cause the interpreter to exit.</source>
          <target state="translated">如果打开终端出现错误,底层的诅咒库可能会导致解释器退出。</target>
        </trans-unit>
        <trans-unit id="20d9f9895dc923352fb368d4bf728ee9c56de965" translate="yes" xml:space="preserve">
          <source>If there is any error occurred in the trace function, it will be unset, just like &lt;code&gt;settrace(None)&lt;/code&gt; is called.</source>
          <target state="translated">如果跟踪函数中发生任何错误，则将取消设置该错误，就像 &lt;code&gt;settrace(None)&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="0926a91c9853e7eeca2a1fc656ef6115ed6a1bf4" translate="yes" xml:space="preserve">
          <source>If there is no certificate for the peer on the other end of the connection, return &lt;code&gt;None&lt;/code&gt;. If the SSL handshake hasn&amp;rsquo;t been done yet, raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果在连接的另一端没有对等方的证书，则返回 &lt;code&gt;None&lt;/code&gt; 。如果尚未完成SSL握手，请引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a481584adca4c60e65b9d654251ba60c649258fd" translate="yes" xml:space="preserve">
          <source>If there is no current event loop set in the current OS thread, the OS thread is main, and &lt;a href=&quot;#asyncio.set_event_loop&quot;&gt;&lt;code&gt;set_event_loop()&lt;/code&gt;&lt;/a&gt; has not yet been called, asyncio will create a new event loop and set it as the current one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16e417025a92b683985a38322a1cd0d3d0859ca" translate="yes" xml:space="preserve">
          <source>If there is no existing &lt;em&gt;MIME-Version&lt;/em&gt; header one will be added. If there is no existing &lt;em&gt;Content-Type&lt;/em&gt; header, one will be added with a value of &lt;em&gt;text/plain&lt;/em&gt;. Whether the &lt;em&gt;Content-Type&lt;/em&gt; header already exists or not, its &lt;code&gt;charset&lt;/code&gt; parameter will be set to &lt;em&gt;charset.output_charset&lt;/em&gt;. If &lt;em&gt;charset.input_charset&lt;/em&gt; and &lt;em&gt;charset.output_charset&lt;/em&gt; differ, the payload will be re-encoded to the &lt;em&gt;output_charset&lt;/em&gt;. If there is no existing &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header, then the payload will be transfer-encoded, if needed, using the specified &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt;, and a header with the appropriate value will be added. If a &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header already exists, the payload is assumed to already be correctly encoded using that &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; and is not modified.</source>
          <target state="translated">如果没有现有的&lt;em&gt;MIME版本&lt;/em&gt;标头，则将添加一个。如果不存在&lt;em&gt;Content-Type&lt;/em&gt;标头，则会添加一个&lt;em&gt;text / plain&lt;/em&gt;值。无论&lt;em&gt;Content-Type&lt;/em&gt;标头是否已经存在，其 &lt;code&gt;charset&lt;/code&gt; 参数都将设置为&lt;em&gt;charset.output_charset&lt;/em&gt;。如果&lt;em&gt;charset.input_charset&lt;/em&gt;和&lt;em&gt;charset.output_charset&lt;/em&gt;不同，则有效负载将重新编码为&lt;em&gt;output_charset&lt;/em&gt;。如果没有现有的&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头，则有效载荷将根据需要使用指定的&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;进行传输编码，并将添加具有适当值的标头。如果&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头已经存在，则假定已使用该&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;对有效负载进行了正确编码，并且未对其进行修改。</target>
        </trans-unit>
        <trans-unit id="668457ccf6ecd6f3a813b38d49f7b92435618884" translate="yes" xml:space="preserve">
          <source>If there is no running event loop a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised. This function can only be called from a coroutine or a callback.</source>
          <target state="translated">如果没有运行事件循环，则会引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。只能从协程或回调中调用此函数。</target>
        </trans-unit>
        <trans-unit id="69cac254e6b298fe4270f509ae2413d5927fd1a9" translate="yes" xml:space="preserve">
          <source>If there is no value for the variable in the current context, the method will:</source>
          <target state="translated">如果当前上下文中的变量没有值,该方法将。</target>
        </trans-unit>
        <trans-unit id="80c2dc75a994416645ae1c9380a6d0ceb3f65147" translate="yes" xml:space="preserve">
          <source>If there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters (strings of length 1) to Unicode ordinals, strings (of arbitrary lengths) or &lt;code&gt;None&lt;/code&gt;. Character keys will then be converted to ordinals.</source>
          <target state="translated">如果只有一个参数，则它必须是将Unicode序数（整数）或字符（长度为1的字符串）映射到Unicode序数，任意长度的字符串或 &lt;code&gt;None&lt;/code&gt; 的字典。然后，字符键将转换为普通字符。</target>
        </trans-unit>
        <trans-unit id="4b89ec1a8424896e51072da33f9efe49e974e577" translate="yes" xml:space="preserve">
          <source>If there is only one possible completion for the characters entered, a</source>
          <target state="translated">如果输入的字符只有一种可能的完成方式,则会有一个</target>
        </trans-unit>
        <trans-unit id="8b2610dd6d4564147cdc6a071edbeae596a215ec" translate="yes" xml:space="preserve">
          <source>If these attributes are marked as optional in the grammar (using a question mark), the value might be &lt;code&gt;None&lt;/code&gt;. If the attributes can have zero-or-more values (marked with an asterisk), the values are represented as Python lists. All possible attributes must be present and have valid values when compiling an AST with &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果在语法中将这些属性标记为可选（使用问号），则该值可能为 &lt;code&gt;None&lt;/code&gt; 。如果属性可以具有零个或多个值（标有星号），则这些值将表示为Python列表。使用&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;编译AST时，所有可能的属性都必须存在并且具有有效值。</target>
        </trans-unit>
        <trans-unit id="4cc8f6301859f9ffe9df6772bfd5316c956f6429" translate="yes" xml:space="preserve">
          <source>If this attribute evaluates to true, events logged to this logger will be passed to the handlers of higher level (ancestor) loggers, in addition to any handlers attached to this logger. Messages are passed directly to the ancestor loggers&amp;rsquo; handlers - neither the level nor filters of the ancestor loggers in question are considered.</source>
          <target state="translated">如果此属性的值为true，则除了附加到此记录器的任何处理程序外，记录到该记录器的事件还将传递到更高级别（祖先）记录器的处理程序。消息直接传递给祖先记录器的处理程序-既不考虑所讨论的祖先记录器的级别或过滤器。</target>
        </trans-unit>
        <trans-unit id="abdb9590d870789abfb1d2c6cd1c630b5f260a6c" translate="yes" xml:space="preserve">
          <source>If this attribute is accessed before the end of the stream has been reached, its value will be &lt;code&gt;b''&lt;/code&gt;.</source>
          <target state="translated">如果在到达流的末尾之前访问此属性，则其值为 &lt;code&gt;b''&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57abef9824fea6e680f0e895e49db397a22940bc" translate="yes" xml:space="preserve">
          <source>If this attribute is not &lt;code&gt;None&lt;/code&gt; (the default), all test methods to be included in test suites must match one of the patterns in this list. Note that matches are always performed using &lt;a href=&quot;fnmatch#fnmatch.fnmatchcase&quot;&gt;&lt;code&gt;fnmatch.fnmatchcase()&lt;/code&gt;&lt;/a&gt;, so unlike patterns passed to the &lt;code&gt;-v&lt;/code&gt; option, simple substring patterns will have to be converted using &lt;code&gt;*&lt;/code&gt; wildcards.</source>
          <target state="translated">如果此属性不是 &lt;code&gt;None&lt;/code&gt; （默认值），则要包含在测试套件中的所有测试方法必须与该列表中的模式之一匹配。请注意，匹配始终使用&lt;a href=&quot;fnmatch#fnmatch.fnmatchcase&quot;&gt; &lt;code&gt;fnmatch.fnmatchcase()&lt;/code&gt; 进行&lt;/a&gt;，因此与传递给 &lt;code&gt;-v&lt;/code&gt; 选项的模式不同，简单的子字符串模式必须使用 &lt;code&gt;*&lt;/code&gt; 通配符进行转换。</target>
        </trans-unit>
        <trans-unit id="0e0a95050375345febb5eec5f5dd1307acaa7573" translate="yes" xml:space="preserve">
          <source>If this attribute is numeric and &lt;code&gt;1&lt;/code&gt; or more, a &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; instance will print verbose progress output on its behavior. If you need to use this, you can read the module source code to learn the details.</source>
          <target state="translated">如果此属性是数字属性且为 &lt;code&gt;1&lt;/code&gt; 或更大，则&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;实例将在其行为上输出详细的进度输出。如果需要使用它，可以阅读模块源代码以了解详细信息。</target>
        </trans-unit>
        <trans-unit id="b804a91b5f1f64f8e7129df9975fc4040a040277" translate="yes" xml:space="preserve">
          <source>If this attribute is set to a callable, the &lt;a href=&quot;#logging.handlers.BaseRotatingHandler.rotate&quot;&gt;&lt;code&gt;rotate()&lt;/code&gt;&lt;/a&gt; method delegates to this callable. The parameters passed to the callable are those passed to &lt;a href=&quot;#logging.handlers.BaseRotatingHandler.rotate&quot;&gt;&lt;code&gt;rotate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果此属性设置为可调用的，则&lt;a href=&quot;#logging.handlers.BaseRotatingHandler.rotate&quot;&gt; &lt;code&gt;rotate()&lt;/code&gt; &lt;/a&gt;方法委托给此可调用的对象。传递给可调用对象的参数是传递给&lt;a href=&quot;#logging.handlers.BaseRotatingHandler.rotate&quot;&gt; &lt;code&gt;rotate()&lt;/code&gt; 的参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ebbb6f8f84980f280f393669d0bd62b9cd2bef9" translate="yes" xml:space="preserve">
          <source>If this attribute is set to a callable, the &lt;a href=&quot;#logging.handlers.BaseRotatingHandler.rotation_filename&quot;&gt;&lt;code&gt;rotation_filename()&lt;/code&gt;&lt;/a&gt; method delegates to this callable. The parameters passed to the callable are those passed to &lt;a href=&quot;#logging.handlers.BaseRotatingHandler.rotation_filename&quot;&gt;&lt;code&gt;rotation_filename()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果此属性设置为可调用的，则&lt;a href=&quot;#logging.handlers.BaseRotatingHandler.rotation_filename&quot;&gt; &lt;code&gt;rotation_filename()&lt;/code&gt; &lt;/a&gt;方法委托给此可调用的对象。传递给可调用对象的参数是传递给&lt;a href=&quot;#logging.handlers.BaseRotatingHandler.rotation_filename&quot;&gt; &lt;code&gt;rotation_filename()&lt;/code&gt; 的参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dff1b29a4811ae4a2758c854c0086cdf364b91aa" translate="yes" xml:space="preserve">
          <source>If this bit is set, then random bytes are drawn from the &lt;code&gt;/dev/random&lt;/code&gt; pool instead of the &lt;code&gt;/dev/urandom&lt;/code&gt; pool.</source>
          <target state="translated">如果设置了此位，那么将从 &lt;code&gt;/dev/random&lt;/code&gt; 池而不是 &lt;code&gt;/dev/urandom&lt;/code&gt; 池中提取随机字节。</target>
        </trans-unit>
        <trans-unit id="90bb6faa5b3834263ad7c4573939b37c5a542a65" translate="yes" xml:space="preserve">
          <source>If this evaluates to false, logging messages are not passed to the handlers of ancestor loggers.</source>
          <target state="translated">如果该值为false,则不会将日志记录消息传递给祖先日志记录器的处理程序。</target>
        </trans-unit>
        <trans-unit id="017d3d68f19210726c382bec27e52a2d417c3981" translate="yes" xml:space="preserve">
          <source>If this function raises an exception, &lt;a href=&quot;sys#sys.excepthook&quot;&gt;&lt;code&gt;sys.excepthook()&lt;/code&gt;&lt;/a&gt; is called to handle it.</source>
          <target state="translated">如果此函数引发异常，&lt;a href=&quot;sys#sys.excepthook&quot;&gt; &lt;code&gt;sys.excepthook()&lt;/code&gt; &lt;/a&gt;调用sys.excepthook（）进行处理。</target>
        </trans-unit>
        <trans-unit id="58d8a99c356472fc70700f6ecb9c84865af60bb2" translate="yes" xml:space="preserve">
          <source>If this gives an error of type 404, the server cannot find the script &amp;ndash; perhaps you need to install it in a different directory. If it gives another error, there&amp;rsquo;s an installation problem that you should fix before trying to go any further. If you get a nicely formatted listing of the environment and form content (in this example, the fields should be listed as &amp;ldquo;addr&amp;rdquo; with value &amp;ldquo;At Home&amp;rdquo; and &amp;ldquo;name&amp;rdquo; with value &amp;ldquo;Joe Blow&amp;rdquo;), the &lt;code&gt;cgi.py&lt;/code&gt; script has been installed correctly. If you follow the same procedure for your own script, you should now be able to debug it.</source>
          <target state="translated">如果这给出了类型404的错误，则服务器找不到脚本-也许您需要将其安装在其他目录中。如果出现另一个错误，则存在安装问题，您应先尝试解决此问题。如果您获得格式正确的环境和表单内容列表（在此示例中，字段应被列为&amp;ldquo; addr&amp;rdquo;，其值为&amp;ldquo; At Home&amp;rdquo;，而&amp;ldquo; name&amp;rdquo;的值为&amp;ldquo; Joe Blow&amp;rdquo;），请使用 &lt;code&gt;cgi.py&lt;/code&gt; 脚本已正确安装。如果您对自己的脚本执行相同的过程，则现在应该可以对其进行调试。</target>
        </trans-unit>
        <trans-unit id="f8f7b6501e5b158a220ae98c2d595a7087ee640a" translate="yes" xml:space="preserve">
          <source>If this handler is not provided, external entities are reported by the &lt;a href=&quot;#xml.parsers.expat.xmlparser.DefaultHandler&quot;&gt;&lt;code&gt;DefaultHandler&lt;/code&gt;&lt;/a&gt; callback, if provided.</source>
          <target state="translated">如果未提供此处理程序，则由&lt;a href=&quot;#xml.parsers.expat.xmlparser.DefaultHandler&quot;&gt; &lt;code&gt;DefaultHandler&lt;/code&gt; &lt;/a&gt;回调报告外部实体（如果提供）。</target>
        </trans-unit>
        <trans-unit id="85450d770d6418bc4deec157d80a4e51aa30db87" translate="yes" xml:space="preserve">
          <source>If this heap invariant is protected at all time, index 0 is clearly the overall winner. The simplest algorithmic way to remove it and find the &amp;ldquo;next&amp;rdquo; winner is to move some loser (let&amp;rsquo;s say cell 30 in the diagram above) into the 0 position, and then percolate this new 0 down the tree, exchanging values, until the invariant is re-established. This is clearly logarithmic on the total number of items in the tree. By iterating over all items, you get an O(n log n) sort.</source>
          <target state="translated">如果这个堆不变式始终受到保护，则索引0显然是整体赢家。删除它并找到&amp;ldquo;下一个&amp;rdquo;获胜者的最简单算法是将一些失败者（上图中的单元格30）移到0位置，然后将这个新的0渗透到树上，交换值，直到不变重新建立。这显然是树中项目总数的对数。通过遍历所有项，可以得到O（n log n）排序。</target>
        </trans-unit>
        <trans-unit id="7a3e8042246e5ac5ba9685632876ea8a3d42c4e7" translate="yes" xml:space="preserve">
          <source>If this is set (not &lt;code&gt;None&lt;/code&gt;), Python will write bytecode-cache &lt;code&gt;.pyc&lt;/code&gt; files to (and read them from) a parallel directory tree rooted at this directory, rather than from &lt;code&gt;__pycache__&lt;/code&gt; directories in the source code tree. Any &lt;code&gt;__pycache__&lt;/code&gt; directories in the source code tree will be ignored and new &lt;code&gt;.pyc&lt;/code&gt; files written within the pycache prefix. Thus if you use &lt;a href=&quot;compileall#module-compileall&quot;&gt;&lt;code&gt;compileall&lt;/code&gt;&lt;/a&gt; as a pre-build step, you must ensure you run it with the same pycache prefix (if any) that you will use at runtime.</source>
          <target state="translated">如果设置了该选项（不是 &lt;code&gt;None&lt;/code&gt; ），Python会将bytecode-cache &lt;code&gt;.pyc&lt;/code&gt; 文件写入到以该目录为根的并行目录树中（并从中读取），而不是从源代码树中的 &lt;code&gt;__pycache__&lt;/code&gt; 目录中读取。源代码树中的所有 &lt;code&gt;__pycache__&lt;/code&gt; 目录都将被忽略，并在pycache前缀内写入新的 &lt;code&gt;.pyc&lt;/code&gt; 文件。因此，如果将&lt;a href=&quot;compileall#module-compileall&quot;&gt; &lt;code&gt;compileall&lt;/code&gt; &lt;/a&gt;用作预构建步骤，则必须确保使用与运行时相同的pycache前缀（如果有）运行它。</target>
        </trans-unit>
        <trans-unit id="6b26511950bcfbe88174f69e9200e69454a2056a" translate="yes" xml:space="preserve">
          <source>If this is true, Python won&amp;rsquo;t try to write &lt;code&gt;.pyc&lt;/code&gt; files on the import of source modules. This value is initially set to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; depending on the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id1&quot;&gt;&lt;code&gt;-B&lt;/code&gt;&lt;/a&gt; command line option and the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE&quot; id=&quot;index-5&quot;&gt;&lt;code&gt;PYTHONDONTWRITEBYTECODE&lt;/code&gt;&lt;/a&gt; environment variable, but you can set it yourself to control bytecode file generation.</source>
          <target state="translated">如果是这样，Python将不会尝试在导入源模块时编写 &lt;code&gt;.pyc&lt;/code&gt; 文件。取决于&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id1&quot;&gt; &lt;code&gt;-B&lt;/code&gt; &lt;/a&gt;命令行选项和&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE&quot; id=&quot;index-5&quot;&gt; &lt;code&gt;PYTHONDONTWRITEBYTECODE&lt;/code&gt; &lt;/a&gt;环境变量，该值最初设置为 &lt;code&gt;True&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; ，但是您可以自己设置以控制字节码文件的生成。</target>
        </trans-unit>
        <trans-unit id="5bd48090fe0de6b291f7c4b9445251f4d4d19a92" translate="yes" xml:space="preserve">
          <source>If this is true, Python won&amp;rsquo;t try to write &lt;code&gt;.pyc&lt;/code&gt; files on the import of source modules. This value is initially set to &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; depending on the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id1&quot;&gt;&lt;code&gt;-B&lt;/code&gt;&lt;/a&gt; command line option and the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONDONTWRITEBYTECODE&quot; id=&quot;index-6&quot;&gt;&lt;code&gt;PYTHONDONTWRITEBYTECODE&lt;/code&gt;&lt;/a&gt; environment variable, but you can set it yourself to control bytecode file generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0dd1aeea5c5afb047695d1317c4d638f1f777fa" translate="yes" xml:space="preserve">
          <source>If this keyword argument is specified along with &lt;em&gt;filename&lt;/em&gt;, its value is used when the FileHandler is created, and thus used when opening the output file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27123f72ebcf16d16ff750ae37510194e2bb8114" translate="yes" xml:space="preserve">
          <source>If this keyword argument is specified along with &lt;em&gt;filename&lt;/em&gt;, its value is used when the FileHandler is created, and thus used when opening the output file. If not specified, the value &amp;lsquo;backslashreplace&amp;rsquo; is used. Note that if &lt;code&gt;None&lt;/code&gt; is specified, it will be passed as such to func:&lt;code&gt;open&lt;/code&gt;, which means that it will be treated the same as passing &amp;lsquo;errors&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3314650337b2349372ab978feed37d7432cf9791" translate="yes" xml:space="preserve">
          <source>If this keyword argument is specified as true, any existing handlers attached to the root logger are removed and closed, before carrying out the configuration as specified by the other arguments.</source>
          <target state="translated">如果将此关键字参数指定为 &quot;true&quot;,则在执行其他参数所指定的配置之前,将删除并关闭连接到根记录器的任何现有处理程序。</target>
        </trans-unit>
        <trans-unit id="11e62c76d42fa37b48327413f77512cf4b5df592" translate="yes" xml:space="preserve">
          <source>If this method is used when the associated process is using a pipe or queue then the pipe or queue is liable to become corrupted and may become unusable by other process. Similarly, if the process has acquired a lock or semaphore etc. then terminating it is liable to cause other processes to deadlock.</source>
          <target state="translated">如果在相关进程使用管道或队列时使用这种方法,那么管道或队列就有可能被破坏,并可能被其他进程使用。同样,如果进程获得了锁或信号体等,那么终止它就有可能导致其他进程死锁。</target>
        </trans-unit>
        <trans-unit id="40b84b7c2b8cd75da3b54cede5c5b30cfe17179e" translate="yes" xml:space="preserve">
          <source>If true, load cookies lazily from disk. This attribute should not be assigned to. This is only a hint, since this only affects performance, not behaviour (unless the cookies on disk are changing). A &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; object may ignore it. None of the &lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt;&lt;code&gt;FileCookieJar&lt;/code&gt;&lt;/a&gt; classes included in the standard library lazily loads cookies.</source>
          <target state="translated">如果为true，则从磁盘延迟加载cookie。不应将此属性分配给该属性。这只是一个提示，因为这只会影响性能，而不会影响行为（除非磁盘上的cookie发生变化）。甲&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt;对象可以忽略它。标准库中包含的&lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt; &lt;code&gt;FileCookieJar&lt;/code&gt; &lt;/a&gt;类都不延迟加载cookie。</target>
        </trans-unit>
        <trans-unit id="4b776e3e6964e37b47588161e44e80da43328cd0" translate="yes" xml:space="preserve">
          <source>If true, request that the &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; instance downgrade &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; cookies (ie. cookies received in a &lt;em&gt;Set-Cookie&lt;/em&gt; header with a version cookie-attribute of 1) to Netscape cookies by setting the version attribute of the &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instance to 0. The default value is &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, in which case RFC 2109 cookies are downgraded if and only if &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; handling is turned off. Therefore, RFC 2109 cookies are downgraded by default.</source>
          <target state="translated">如果为true，则通过将&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt;实例的版本属性设置为0 ，请求&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt;实例将&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; cookie（即，在版本cookie属性为1 的&lt;em&gt;Set-Cookie&lt;/em&gt;标头中接收的cookie）降级为Netscape cookie。为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，在这种情况下，仅当关闭&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-16&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;处理时，RFC 2109 cookie才会降级。因此，默认情况下会降级RFC 2109 cookie。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae1121f9e45a9703c97a6bf40a561f0b607ea007" translate="yes" xml:space="preserve">
          <source>If turtleshape is a polygon, outline and interior of that polygon is drawn with the newly set colors.</source>
          <target state="translated">如果turtleshape是一个多边形,则用新设置的颜色绘制该多边形的轮廓和内部。</target>
        </trans-unit>
        <trans-unit id="6b992dbf815e5a48ca08b90300fa3a4771a7068e" translate="yes" xml:space="preserve">
          <source>If turtleshape is a polygon, the interior of that polygon is drawn with the newly set fillcolor.</source>
          <target state="translated">如果turtleshape是一个多边形,则用新设置的fillcolor绘制该多边形的内部。</target>
        </trans-unit>
        <trans-unit id="be2827a5012b6740877e0b7b0e62c1a742812bf7" translate="yes" xml:space="preserve">
          <source>If turtleshape is a polygon, the outline of that polygon is drawn with the newly set pencolor.</source>
          <target state="translated">如果turtleshape是一个多边形,则用新设置的pencolor绘制该多边形的轮廓。</target>
        </trans-unit>
        <trans-unit id="0c29d653e6b038e2fe7684142d34103dcd03b42e" translate="yes" xml:space="preserve">
          <source>If two &lt;a href=&quot;#sqlite3.Row&quot;&gt;&lt;code&gt;Row&lt;/code&gt;&lt;/a&gt; objects have exactly the same columns and their members are equal, they compare equal.</source>
          <target state="translated">如果两个&lt;a href=&quot;#sqlite3.Row&quot;&gt; &lt;code&gt;Row&lt;/code&gt; &lt;/a&gt;对象具有完全相同的列，并且它们的成员相等，则它们比较相等。</target>
        </trans-unit>
        <trans-unit id="afa6f3422eefaa81266da99523269e7f496b8eab" translate="yes" xml:space="preserve">
          <source>If two &lt;code&gt;.pyc&lt;/code&gt; files with different optimization level have the same content, use hard links to consolidate duplicate files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260d0a1b06a2d521034b375df46c28e25cc4e075" translate="yes" xml:space="preserve">
          <source>If used, this function should be called before &lt;a href=&quot;#curses.initscr&quot;&gt;&lt;code&gt;initscr()&lt;/code&gt;&lt;/a&gt; or newterm are called. When &lt;em&gt;flag&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, the values of lines and columns specified in the terminfo database will be used, even if environment variables &lt;code id=&quot;index-5&quot;&gt;LINES&lt;/code&gt; and &lt;code id=&quot;index-6&quot;&gt;COLUMNS&lt;/code&gt; (used by default) are set, or if curses is running in a window (in which case default behavior would be to use the window size if &lt;code id=&quot;index-7&quot;&gt;LINES&lt;/code&gt; and &lt;code id=&quot;index-8&quot;&gt;COLUMNS&lt;/code&gt; are not set).</source>
          <target state="translated">如果使用此函数，则应在调用&lt;a href=&quot;#curses.initscr&quot;&gt; &lt;code&gt;initscr()&lt;/code&gt; &lt;/a&gt;或newterm 之前调用此函数。当&lt;em&gt;flag&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; 时，即使设置了环境变量 &lt;code id=&quot;index-5&quot;&gt;LINES&lt;/code&gt; 和 &lt;code id=&quot;index-6&quot;&gt;COLUMNS&lt;/code&gt; （默认情况下使用）或curses在窗口中运行（在这种情况下，默认行为也是如此），都会使用terminfo数据库中指定的行和列的值（如果未设置 &lt;code id=&quot;index-7&quot;&gt;LINES&lt;/code&gt; 和 &lt;code id=&quot;index-8&quot;&gt;COLUMNS&lt;/code&gt; ,则使用窗口大小）。</target>
        </trans-unit>
        <trans-unit id="b09a2a72ca9eebcfaf2f7a111fffa10693a0be54" translate="yes" xml:space="preserve">
          <source>If using this module as part of a multi-processed application (using, for example the &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;concurrent.futures#module-concurrent.futures&quot;&gt;&lt;code&gt;concurrent.futures&lt;/code&gt;&lt;/a&gt; modules), be aware that OpenSSL&amp;rsquo;s internal random number generator does not properly handle forked processes. Applications must change the PRNG state of the parent process if they use any SSL feature with &lt;a href=&quot;os#os.fork&quot;&gt;&lt;code&gt;os.fork()&lt;/code&gt;&lt;/a&gt;. Any successful call of &lt;a href=&quot;#ssl.RAND_add&quot;&gt;&lt;code&gt;RAND_add()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.RAND_bytes&quot;&gt;&lt;code&gt;RAND_bytes()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ssl.RAND_pseudo_bytes&quot;&gt;&lt;code&gt;RAND_pseudo_bytes()&lt;/code&gt;&lt;/a&gt; is sufficient.</source>
          <target state="translated">如果将此模块用作多进程应用程序的一部分（例如，使用&lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;concurrent.futures#module-concurrent.futures&quot;&gt; &lt;code&gt;concurrent.futures&lt;/code&gt; &lt;/a&gt;模块），请注意OpenSSL的内部随机数生成器无法正确处理派生的进程。如果应用程序对&lt;a href=&quot;os#os.fork&quot;&gt; &lt;code&gt;os.fork()&lt;/code&gt; &lt;/a&gt;使用任何SSL功能，则它们必须更改父进程的PRNG状态。任何成功调用&lt;a href=&quot;#ssl.RAND_add&quot;&gt; &lt;code&gt;RAND_add()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ssl.RAND_bytes&quot;&gt; &lt;code&gt;RAND_bytes()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#ssl.RAND_pseudo_bytes&quot;&gt; &lt;code&gt;RAND_pseudo_bytes()&lt;/code&gt; &lt;/a&gt;都足够。</target>
        </trans-unit>
        <trans-unit id="40cadaadf40f8d88630127c112a5dbe1fa546685" translate="yes" xml:space="preserve">
          <source>If we make the decimal place and everything after it optional, not all groups might participate in the match. These groups will default to &lt;code&gt;None&lt;/code&gt; unless the &lt;em&gt;default&lt;/em&gt; argument is given:</source>
          <target state="translated">如果我们将小数位及其后的所有内容设为可选，则并非所有组都可以参加比赛。除非给出&lt;em&gt;默认&lt;/em&gt;参数，否则这些组将默认为&amp;ldquo; &lt;code&gt;None&lt;/code&gt; &amp;rdquo; ：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="21252e699b38c9bde015d527adf98063ea9f956c" translate="yes" xml:space="preserve">
          <source>If we were sent the message from the last example, here is one way we could process it:</source>
          <target state="translated">如果我们收到了上一个例子中的消息,这里有一种方法可以处理它。</target>
        </trans-unit>
        <trans-unit id="6bfdd750da38ffcee31dea60ae619912d24791e2" translate="yes" xml:space="preserve">
          <source>If window is currently managed by the notebook but hidden, it is restored to its previous position.</source>
          <target state="translated">如果窗口当前由笔记本管理但被隐藏,则恢复到之前的位置。</target>
        </trans-unit>
        <trans-unit id="aec5c8d5afc40ab554ad46b385c383363932d7b7" translate="yes" xml:space="preserve">
          <source>If wrapping a shared library with &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;, it &lt;em&gt;may&lt;/em&gt; be better to determine the shared library name at development time, and hardcode that into the wrapper module instead of using &lt;code&gt;find_library()&lt;/code&gt; to locate the library at runtime.</source>
          <target state="translated">如果包装与共享库&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; 的&lt;/a&gt;，它&lt;em&gt;可以&lt;/em&gt;更好地确定在开发时共享库的名字，并硬编码到封装模块，而不是使用 &lt;code&gt;find_library()&lt;/code&gt; 在运行时查找库。</target>
        </trans-unit>
        <trans-unit id="f6e263b3d734f898bddb0b90497009b949e688c7" translate="yes" xml:space="preserve">
          <source>If you (or your students) want to use &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; with online help in your native language, you have to translate the docstrings and save the resulting file as e.g. &lt;code&gt;turtle_docstringdict_german.py&lt;/code&gt;.</source>
          <target state="translated">如果您（或您的学生）希望将&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;与母语的在线帮助一起使用，则必须翻译文档字符串并将结果文件另存为 &lt;code&gt;turtle_docstringdict_german.py&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="681001f9dedd39553c496bc8278d37c4dfe3445e" translate="yes" xml:space="preserve">
          <source>If you access a method (a function defined in a class namespace) through an instance, you get a special object: a &lt;em&gt;bound method&lt;/em&gt; (also called &lt;em&gt;instance method&lt;/em&gt;) object. When called, it will add the &lt;code&gt;self&lt;/code&gt; argument to the argument list. Bound methods have two special read-only attributes: &lt;code&gt;m.__self__&lt;/code&gt; is the object on which the method operates, and &lt;code&gt;m.__func__&lt;/code&gt; is the function implementing the method. Calling &lt;code&gt;m(arg-1, arg-2, ..., arg-n)&lt;/code&gt; is completely equivalent to calling &lt;code&gt;m.__func__(m.__self__, arg-1, arg-2, ...,
arg-n)&lt;/code&gt;.</source>
          <target state="translated">如果通过实例访问方法（在类命名空间中定义的函数），则会得到一个特殊对象：&lt;em&gt;绑定方法&lt;/em&gt;（也称为&lt;em&gt;实例方法&lt;/em&gt;）对象。调用时，它将 &lt;code&gt;self&lt;/code&gt; 参数添加到参数列表。绑定方法具有两个特殊的只读属性： &lt;code&gt;m.__self__&lt;/code&gt; 是操作该方法的对象，而 &lt;code&gt;m.__func__&lt;/code&gt; 是实现该方法的函数。调用 &lt;code&gt;m(arg-1, arg-2, ..., arg-n)&lt;/code&gt; 完全等同于调用 &lt;code&gt;m.__func__(m.__self__, arg-1, arg-2, ..., arg-n)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a1f07de56da7ccfad9978d85c56532e9c3232e2" translate="yes" xml:space="preserve">
          <source>If you are dynamically importing a module that was created since the interpreter began execution (e.g., created a Python source file), you may need to call &lt;a href=&quot;#importlib.invalidate_caches&quot;&gt;&lt;code&gt;invalidate_caches()&lt;/code&gt;&lt;/a&gt; in order for the new module to be noticed by the import system.</source>
          <target state="translated">如果要动态导入自解释程序开始执行以来创建的模块（例如，创建了Python源文件），则可能需要调用&lt;a href=&quot;#importlib.invalidate_caches&quot;&gt; &lt;code&gt;invalidate_caches()&lt;/code&gt; &lt;/a&gt;以便导入系统注意到新模块。</target>
        </trans-unit>
        <trans-unit id="7a4f0de1719448ed4a63c40279ef044d3f941a85" translate="yes" xml:space="preserve">
          <source>If you are going to create a server that provides SSL-encrypted connection services, you will need to acquire a certificate for that service. There are many ways of acquiring appropriate certificates, such as buying one from a certification authority. Another common practice is to generate a self-signed certificate. The simplest way to do this is with the OpenSSL package, using something like the following:</source>
          <target state="translated">如果你要创建一个提供SSL加密连接服务的服务器,你需要为该服务获取一个证书。获取相应证书的方法有很多,比如从认证机构购买证书。另一种常见的做法是生成一个自签名的证书。最简单的方法是使用OpenSSL包,使用类似下面的方法。</target>
        </trans-unit>
        <trans-unit id="48d6cd7b9afb257bc9891717d33d65b967870ac6" translate="yes" xml:space="preserve">
          <source>If you are going to require validation of the other side of the connection&amp;rsquo;s certificate, you need to provide a &amp;ldquo;CA certs&amp;rdquo; file, filled with the certificate chains for each issuer you are willing to trust. Again, this file just contains these chains concatenated together. For validation, Python will use the first chain it finds in the file which matches. The platform&amp;rsquo;s certificates file can be used by calling &lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt;&lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt;&lt;/a&gt;, this is done automatically with &lt;a href=&quot;#ssl.create_default_context&quot;&gt;&lt;code&gt;create_default_context()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您需要验证连接证书的另一端，则需要提供一个&amp;ldquo; CA certs&amp;rdquo;文件，其中包含您愿意信任的每个颁发者的证书链。同样，此文件仅包含这些串联在一起的链。为了进行验证，Python将使用它在文件中找到的匹配的第一条链。可以通过调用&lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt; &lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt; &lt;/a&gt;使用平台的证书文件，这是通过&lt;a href=&quot;#ssl.create_default_context&quot;&gt; &lt;code&gt;create_default_context()&lt;/code&gt; &lt;/a&gt;自动完成的。</target>
        </trans-unit>
        <trans-unit id="2f73a6f10ffa7b443163f14e92196bc1fc4490c7" translate="yes" xml:space="preserve">
          <source>If you are implementing a CGI-based handler of your own, you probably want to use this routine instead of just copying values out of &lt;code&gt;os.environ&lt;/code&gt; directly.</source>
          <target state="translated">如果要实现自己的基于CGI的处理程序，则可能要使用此例程，而不是直接从 &lt;code&gt;os.environ&lt;/code&gt; 中复制值。</target>
        </trans-unit>
        <trans-unit id="7b970e3329e89a382ded0086b19b66d215dd892f" translate="yes" xml:space="preserve">
          <source>If you are implementing asynchronous signal handlers using the &lt;a href=&quot;signal#module-signal&quot;&gt;&lt;code&gt;signal&lt;/code&gt;&lt;/a&gt; module, you may not be able to use logging from within such handlers. This is because lock implementations in the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module are not always re-entrant, and so cannot be invoked from such signal handlers.</source>
          <target state="translated">如果要使用&lt;a href=&quot;signal#module-signal&quot;&gt; &lt;code&gt;signal&lt;/code&gt; &lt;/a&gt;模块实现异步信号处理程序，则可能无法使用此类处理程序中的日志记录。这是因为&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;模块中的锁实现并不总是可重入的，因此不能从此类信号处理程序中调用。</target>
        </trans-unit>
        <trans-unit id="4f3cb106b921f87d2d40c7d80ff67464e95e3f8e" translate="yes" xml:space="preserve">
          <source>If you are localizing your application, you can install the &lt;code&gt;_()&lt;/code&gt; function globally into the built-in namespace, usually in the main driver file of your application. This will let all your application-specific files just use &lt;code&gt;_('...')&lt;/code&gt; without having to explicitly install it in each file.</source>
          <target state="translated">如果要本地化应用程序，则可以将 &lt;code&gt;_()&lt;/code&gt; 函数全局安装到内置名称空间中，通常在应用程序的主驱动程序文件中。这将使您所有特定于应用程序的文件仅使用 &lt;code&gt;_('...')&lt;/code&gt; ,而不必在每个文件中都明确安装它。</target>
        </trans-unit>
        <trans-unit id="1c5e00d28ce108672fa04f99996f53e40842cac4" translate="yes" xml:space="preserve">
          <source>If you are localizing your module, you must take care not to make global changes, e.g. to the built-in namespace. You should not use the GNU &lt;strong&gt;gettext&lt;/strong&gt; API but instead the class-based API.</source>
          <target state="translated">如果要本地化模块，则必须注意不要进行全局更改，例如，对内置名称空间进行更改。您不应使用GNU &lt;strong&gt;gettext&lt;/strong&gt; API，而应使用基于类的API。</target>
        </trans-unit>
        <trans-unit id="11373b731524ebbb3396ed6f424ed35b172c4f94" translate="yes" xml:space="preserve">
          <source>If you are running an entropy-gathering daemon (EGD) somewhere, and &lt;em&gt;path&lt;/em&gt; is the pathname of a socket connection open to it, this will read 256 bytes of randomness from the socket, and add it to the SSL pseudo-random number generator to increase the security of generated secret keys. This is typically only necessary on systems without better sources of randomness.</source>
          <target state="translated">如果您在某个地方运行熵收集守护程序（EGD），并且&lt;em&gt;path&lt;/em&gt;是向其打开的套接字连接的路径名，则它将从套接字读取256个字节的随机性，并将其添加到SSL伪随机数生成器中，以增加生成的秘密密钥的安全性。通常仅在没有更好随机性的系统上才需要这样做。</target>
        </trans-unit>
        <trans-unit id="5d915c3ac798b1162027d4b78ee74eb32aecf245" translate="yes" xml:space="preserve">
          <source>If you are shipping a Windows executable as described above, you either need to ensure that your users have &lt;code&gt;python3.dll&lt;/code&gt; on their PATH (which is not the default behaviour of the installer) or you should bundle your application with the embedded distribution.</source>
          <target state="translated">如果如上所述 &lt;code&gt;python3.dll&lt;/code&gt; Windows可执行文件，则需要确保用户的PATH上具有python3.dll（这不是安装程序的默认行为），或者应将应用程序与嵌入式发行版捆绑在一起。</target>
        </trans-unit>
        <trans-unit id="b3c30a5d84ebc01f28c65df6e216a65d2921455f" translate="yes" xml:space="preserve">
          <source>If you are thinking of defining your own levels, please see the section on &lt;a href=&quot;https://docs.python.org/3.8/howto/logging.html#custom-levels&quot;&gt;Custom Levels&lt;/a&gt;.</source>
          <target state="translated">如果您想定义自己的级别，请参阅&amp;ldquo; &lt;a href=&quot;https://docs.python.org/3.8/howto/logging.html#custom-levels&quot;&gt;自定义级别&lt;/a&gt; &amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="0213022b07a4316b98d4138edf72e870b144d96a" translate="yes" xml:space="preserve">
          <source>If you are thinking of defining your own levels, please see the section on &lt;a href=&quot;https://docs.python.org/3.9/howto/logging.html#custom-levels&quot;&gt;Custom Levels&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e3cbf5ea7b5f0ea71d8bc500fc226c950f1779" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; to create a mock for you then it will be returned by the call to &lt;code&gt;patcher.start&lt;/code&gt;.</source>
          <target state="translated">如果您使用&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;为您创建一个模拟，那么它将通过调用 &lt;code&gt;patcher.start&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="364049631376a2a1d8911fd5401507c7f5516ee6" translate="yes" xml:space="preserve">
          <source>If you are using code that you know will raise a warning, such as a deprecated function, but do not want to see the warning (even when warnings have been explicitly configured via the command line), then it is possible to suppress the warning using the &lt;a href=&quot;#warnings.catch_warnings&quot;&gt;&lt;code&gt;catch_warnings&lt;/code&gt;&lt;/a&gt; context manager:</source>
          <target state="translated">如果您正在使用知道会发出警告的代码（例如已弃用的函数），但又不想看到该警告（即使已通过命令行明确配置了警告），则可以使用来禁止显示该警告。在&lt;a href=&quot;#warnings.catch_warnings&quot;&gt; &lt;code&gt;catch_warnings&lt;/code&gt; &lt;/a&gt;上下文管理器：</target>
        </trans-unit>
        <trans-unit id="0c3d77e1b4bf3414b19d6e3647400caf29838bae" translate="yes" xml:space="preserve">
          <source>If you are using {}-formatting (&lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt;), you can use &lt;code&gt;{attrname}&lt;/code&gt; as the placeholder in the format string. If you are using $-formatting (&lt;a href=&quot;string#string.Template&quot;&gt;&lt;code&gt;string.Template&lt;/code&gt;&lt;/a&gt;), use the form &lt;code&gt;${attrname}&lt;/code&gt;. In both cases, of course, replace &lt;code&gt;attrname&lt;/code&gt; with the actual attribute name you want to use.</source>
          <target state="translated">如果使用{}格式（&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;），则可以使用 &lt;code&gt;{attrname}&lt;/code&gt; 作为格式字符串中的占位符。如果使用$格式（&lt;a href=&quot;string#string.Template&quot;&gt; &lt;code&gt;string.Template&lt;/code&gt; &lt;/a&gt;），则使用 &lt;code&gt;${attrname}&lt;/code&gt; 形式。当然，在两种情况下，都用您要使用的实际属性名称替换 &lt;code&gt;attrname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6c36be2e20c5d0cd71ba05a7b714e1c1aa79df2" translate="yes" xml:space="preserve">
          <source>If you attach a handler to a logger &lt;em&gt;and&lt;/em&gt; one or more of its ancestors, it may emit the same record multiple times. In general, you should not need to attach a handler to more than one logger - if you just attach it to the appropriate logger which is highest in the logger hierarchy, then it will see all events logged by all descendant loggers, provided that their propagate setting is left set to &lt;code&gt;True&lt;/code&gt;. A common scenario is to attach handlers only to the root logger, and to let propagation take care of the rest.</source>
          <target state="translated">如果将处理程序附加到记录器&lt;em&gt;及其&lt;/em&gt;一个或多个祖先，则它可能会多次发出相同的记录。通常，您不需要将一个处理程序附加到多个记录器上-如果仅将它附加到记录器层次结构中最高的适当记录器上，那么它将看到所有后代记录器记录的所有事件，前提是它们的传播设置保留为 &lt;code&gt;True&lt;/code&gt; 。一种常见的情况是仅将处理程序附加到根记录器，并让传播来处理其余部分。</target>
        </trans-unit>
        <trans-unit id="71db1cfc049ed9436b58c3258dd2abae66bed7a0" translate="yes" xml:space="preserve">
          <source>If you call getpass from within IDLE, the input may be done in the terminal you launched IDLE from rather than the idle window itself.</source>
          <target state="translated">如果您在IDLE中调用getpass,那么输入可能是在您启动IDLE的终端中进行,而不是在空闲窗口中进行。</target>
        </trans-unit>
        <trans-unit id="dcfe31f0c3025ba1247b84cd55bce06307c9aaab" translate="yes" xml:space="preserve">
          <source>If you choose to use these attributes in logged messages, you need to exercise some care. In the above example, for instance, the &lt;a href=&quot;#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; has been set up with a format string which expects &amp;lsquo;clientip&amp;rsquo; and &amp;lsquo;user&amp;rsquo; in the attribute dictionary of the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt;. If these are missing, the message will not be logged because a string formatting exception will occur. So in this case, you always need to pass the &lt;em&gt;extra&lt;/em&gt; dictionary with these keys.</source>
          <target state="translated">如果选择在已记录的消息中使用这些属性，则需要格外小心。例如，在上面的示例中，&lt;a href=&quot;#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;已设置为带有格式字符串，该字符串在&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;的属性字典中期望为&amp;ldquo; clientip&amp;rdquo;和&amp;ldquo; user&amp;rdquo; 。如果缺少这些内容，则将不会记录该消息，因为会发生字符串格式化异常。因此，在这种情况下，您始终需要使用这些键传递&lt;em&gt;额外的&lt;/em&gt;字典。</target>
        </trans-unit>
        <trans-unit id="9a9e4560c049a5fff3d7922f2065fe9c4f0bab32" translate="yes" xml:space="preserve">
          <source>If you choose to use these attributes in logged messages, you need to exercise some care. In the above example, for instance, the &lt;a href=&quot;#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; has been set up with a format string which expects &amp;lsquo;clientip&amp;rsquo; and &amp;lsquo;user&amp;rsquo; in the attribute dictionary of the LogRecord. If these are missing, the message will not be logged because a string formatting exception will occur. So in this case, you always need to pass the &lt;em&gt;extra&lt;/em&gt; dictionary with these keys.</source>
          <target state="translated">如果选择在已记录的消息中使用这些属性，则需要格外小心。例如，在上面的示例中，&lt;a href=&quot;#logging.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;已设置为带有格式字符串的格式字符串，该字符串在LogRecord的属性字典中期望为&amp;ldquo; clientip&amp;rdquo;和&amp;ldquo; user&amp;rdquo;。如果缺少这些内容，则将不会记录该消息，因为会发生字符串格式化异常。因此，在这种情况下，您始终需要使用这些键传递&lt;em&gt;额外的&lt;/em&gt;字典。</target>
        </trans-unit>
        <trans-unit id="c553bc4df8103396b1cf2c4eb7ef7300e63b8315" translate="yes" xml:space="preserve">
          <source>If you code or decode textfiles on non-Macintosh platforms they will still use the old Macintosh newline convention (carriage-return as end of line).</source>
          <target state="translated">如果您在非Macintosh平台上对文本文件进行编码或解码,它们仍将使用旧的Macintosh换行约定(回车作为行尾)。</target>
        </trans-unit>
        <trans-unit id="5d1ed81961b6cb7496a0e0f060cff06cad3d1812" translate="yes" xml:space="preserve">
          <source>If you continue a line via backslashing in an interactive session, or for any other reason use a backslash, you should use a raw docstring, which will preserve your backslashes exactly as you type them:</source>
          <target state="translated">如果您在交互式会话中通过反斜线继续一行,或者出于任何其他原因使用反斜线,您应该使用原始 docstring,它将保留您输入的反斜线。</target>
        </trans-unit>
        <trans-unit id="5cac94944ad97618e4be13390591255007102a1f" translate="yes" xml:space="preserve">
          <source>If you create a finalizer object in a daemonic thread just as the program exits then there is the possibility that the finalizer does not get called at exit. However, in a daemonic thread &lt;a href=&quot;atexit#atexit.register&quot;&gt;&lt;code&gt;atexit.register()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;try: ... finally: ...&lt;/code&gt; and &lt;code&gt;with: ...&lt;/code&gt; do not guarantee that cleanup occurs either.</source>
          <target state="translated">如果在程序退出时在守护线程中创建终结器对象，则有可能在退出时未调用终结器。但是，在守护线程&lt;a href=&quot;atexit#atexit.register&quot;&gt; &lt;code&gt;atexit.register()&lt;/code&gt; 中&lt;/a&gt;， &lt;code&gt;try: ... finally: ...&lt;/code&gt; 和 &lt;code&gt;with: ...&lt;/code&gt; 都不保证清除也会发生。</target>
        </trans-unit>
        <trans-unit id="a460562d42a2a11f6a379108a05dfc43f47c1591" translate="yes" xml:space="preserve">
          <source>If you define the &lt;code&gt;WINDOWS&lt;/code&gt; preprocessor symbol, this will generate a GUI executable, and without it, a console executable.</source>
          <target state="translated">如果定义 &lt;code&gt;WINDOWS&lt;/code&gt; 预处理程序符号，则将生成GUI可执行文件，而没有它，则将生成控制台可执行文件。</target>
        </trans-unit>
        <trans-unit id="2b8d268659c0afbd91ab53443b6a751cff765c3b" translate="yes" xml:space="preserve">
          <source>If you do not want that behavior, preprocess the &lt;em&gt;url&lt;/em&gt; with &lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt;&lt;code&gt;urlsplit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#urllib.parse.urlunsplit&quot;&gt;&lt;code&gt;urlunsplit()&lt;/code&gt;&lt;/a&gt;, removing possible &lt;em&gt;scheme&lt;/em&gt; and &lt;em&gt;netloc&lt;/em&gt; parts.</source>
          <target state="translated">如果您不希望出现这种情况，请使用&lt;a href=&quot;#urllib.parse.urlsplit&quot;&gt; &lt;code&gt;urlsplit()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#urllib.parse.urlunsplit&quot;&gt; &lt;code&gt;urlunsplit()&lt;/code&gt; &lt;/a&gt;预处理&lt;em&gt;url&lt;/em&gt;，删除可能的&lt;em&gt;方案&lt;/em&gt;和&lt;em&gt;netloc&lt;/em&gt;部分。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="75f973cadf33dbb5346b31c20f9455a09e62a539" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t know whether a &lt;a href=&quot;#winreg.FlushKey&quot;&gt;&lt;code&gt;FlushKey()&lt;/code&gt;&lt;/a&gt; call is required, it probably isn&amp;rsquo;t.</source>
          <target state="translated">如果您不知道是否需要&lt;a href=&quot;#winreg.FlushKey&quot;&gt; &lt;code&gt;FlushKey()&lt;/code&gt; &lt;/a&gt;调用，则可能不需要。</target>
        </trans-unit>
        <trans-unit id="8e329f1a76521b4e0c106f18d644a53b002a016b" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t like the ACW popping up unbidden, simply make the delay longer or disable the extension.</source>
          <target state="translated">如果您不希望ACW突然弹出，只需延长延迟时间或禁用扩展即可。</target>
        </trans-unit>
        <trans-unit id="07407a9c866063255f749a7211d292d84fbd66bb" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want a newline termination, you can set the handler instance&amp;rsquo;s &lt;code&gt;terminator&lt;/code&gt; attribute to the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b378bb20bf0aa3247056c249ea998b15eb65e8" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to store the instance&amp;rsquo;s data in the &lt;code&gt;_as_parameter_&lt;/code&gt; instance variable, you could define a &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property&lt;/code&gt;&lt;/a&gt; which makes the attribute available on request.</source>
          <target state="translated">如果您不想将实例的数据存储在 &lt;code&gt;_as_parameter_&lt;/code&gt; 实例变量中，则可以定义一个&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property&lt;/code&gt; &lt;/a&gt;，该属性可应要求提供该属性。</target>
        </trans-unit>
        <trans-unit id="7a8d040851b0915051f326bd15d54a88ae21e65f" translate="yes" xml:space="preserve">
          <source>If you find that when certain older clients or servers attempt to connect with a &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; created by this function that they get an error stating &amp;ldquo;Protocol or cipher suite mismatch&amp;rdquo;, it may be that they only support SSL3.0 which this function excludes using the &lt;a href=&quot;#ssl.OP_NO_SSLv3&quot;&gt;&lt;code&gt;OP_NO_SSLv3&lt;/code&gt;&lt;/a&gt;. SSL3.0 is widely considered to be &lt;a href=&quot;https://en.wikipedia.org/wiki/POODLE&quot;&gt;completely broken&lt;/a&gt;. If you still wish to continue to use this function but still allow SSL 3.0 connections you can re-enable them using:</source>
          <target state="translated">如果您发现某些较旧的客户端或服务器尝试与此功能创建的&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;连接时收到错误消息，指出&amp;ldquo;协议或密码套件不匹配&amp;rdquo;，则可能是它们仅支持SSL3.0，而该功能不使用&lt;a href=&quot;#ssl.OP_NO_SSLv3&quot;&gt; &lt;code&gt;OP_NO_SSLv3&lt;/code&gt; &lt;/a&gt;。SSL3.0被广泛认为是&lt;a href=&quot;https://en.wikipedia.org/wiki/POODLE&quot;&gt;完全被破坏的&lt;/a&gt;。如果您仍然希望继续使用此功能但仍允许SSL 3.0连接，则可以使用以下方法重新启用它们：</target>
        </trans-unit>
        <trans-unit id="fe9aa74952f83bd4d51d51d4e83cebc44b0b2fe0" translate="yes" xml:space="preserve">
          <source>If you give your &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; subclass extra methods, like the &lt;a href=&quot;#planet&quot;&gt;Planet&lt;/a&gt; class above, those methods will show up in a &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; of the member, but not of the class:</source>
          <target state="translated">如果为&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;子类提供额外的方法，例如上面的&lt;a href=&quot;#planet&quot;&gt;Planet&lt;/a&gt;类，则这些方法将显示在成员的&lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;中，而不显示在该类的dir（）中：</target>
        </trans-unit>
        <trans-unit id="ddea48c736e63a88242d988d2f93ca78d7b3b84d" translate="yes" xml:space="preserve">
          <source>If you have XML in a string, you can use the &lt;a href=&quot;#xml.dom.minidom.parseString&quot;&gt;&lt;code&gt;parseString()&lt;/code&gt;&lt;/a&gt; function instead:</source>
          <target state="translated">如果字符串中包含XML，则可以改用&lt;a href=&quot;#xml.dom.minidom.parseString&quot;&gt; &lt;code&gt;parseString()&lt;/code&gt; &lt;/a&gt;函数：</target>
        </trans-unit>
        <trans-unit id="68b99e8b222c2278454b1cadc38d91ffc4b68997" translate="yes" xml:space="preserve">
          <source>If you have XML in a string, you can use the &lt;a href=&quot;#xml.dom.pulldom.parseString&quot;&gt;&lt;code&gt;parseString()&lt;/code&gt;&lt;/a&gt; function instead:</source>
          <target state="translated">如果字符串中包含XML，则可以改用&lt;a href=&quot;#xml.dom.pulldom.parseString&quot;&gt; &lt;code&gt;parseString()&lt;/code&gt; &lt;/a&gt;函数：</target>
        </trans-unit>
        <trans-unit id="e75dc8b8eb57f89ef2cc0c8f2d61866415c62ce9" translate="yes" xml:space="preserve">
          <source>If you have a choice, you are better off choosing a smaller constant, and then your results will &amp;ldquo;less often&amp;rdquo; show up as negative in profile statistics.</source>
          <target state="translated">如果可以选择，最好选择一个较小的常数，然后结果在配置文件统计信息中将&amp;ldquo;较少出现&amp;rdquo;为负数。</target>
        </trans-unit>
        <trans-unit id="08f422ccd0761694976f4b7f344ccca267ef692c" translate="yes" xml:space="preserve">
          <source>If you have a package installed globally and attempt test discovery on a different copy of the package then the import &lt;em&gt;could&lt;/em&gt; happen from the wrong place. If this happens test discovery will warn you and exit.</source>
          <target state="translated">如果您在全球范围内安装了某个软件包，并尝试在该软件包的其他副本上进行测试发现，则&lt;em&gt;可能&lt;/em&gt;会从错误的位置进行导入。如果发生这种情况，测试发现将警告您并退出。</target>
        </trans-unit>
        <trans-unit id="fdc90a074f4d5efa53ede11d8bcd3da1d1900c9c" translate="yes" xml:space="preserve">
          <source>If you have advanced security requirements, fine-tuning of the ciphers enabled when negotiating a SSL session is possible through the &lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt;&lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt;&lt;/a&gt; method. Starting from Python 3.2.3, the ssl module disables certain weak ciphers by default, but you may want to further restrict the cipher choice. Be sure to read OpenSSL&amp;rsquo;s documentation about the &lt;a href=&quot;https://www.openssl.org/docs/manmaster/man1/ciphers.html#CIPHER-LIST-FORMAT&quot;&gt;cipher list format&lt;/a&gt;. If you want to check which ciphers are enabled by a given cipher list, use &lt;a href=&quot;#ssl.SSLContext.get_ciphers&quot;&gt;&lt;code&gt;SSLContext.get_ciphers()&lt;/code&gt;&lt;/a&gt; or the &lt;code&gt;openssl ciphers&lt;/code&gt; command on your system.</source>
          <target state="translated">如果您具有高级安全性要求，则可以通过&lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt; &lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt; &lt;/a&gt;方法对在SSL会话进行协商时启用的密码进行微调。从Python 3.2.3开始，ssl模块默认情况下禁用某些弱密码，但是您可能希望进一步限制密码的选择。请务必阅读有关&lt;a href=&quot;https://www.openssl.org/docs/manmaster/man1/ciphers.html#CIPHER-LIST-FORMAT&quot;&gt;密码列表格式的&lt;/a&gt; OpenSSL文档。如果要检查给定密码列表启用了哪些密码，请在系统上使用&lt;a href=&quot;#ssl.SSLContext.get_ciphers&quot;&gt; &lt;code&gt;SSLContext.get_ciphers()&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;openssl ciphers&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="f1e86f5dd0e423a473b0f05f43d4240f3be40b1e" translate="yes" xml:space="preserve">
          <source>If you have already calculated the mean of your data, you can pass it as the optional second argument &lt;em&gt;mu&lt;/em&gt; to avoid recalculation:</source>
          <target state="translated">如果您已经计算出数据的平均值，则可以将其作为可选的第二个参数&lt;em&gt;mu&lt;/em&gt;传递，以避免重新计算：</target>
        </trans-unit>
        <trans-unit id="4f65249585348639b163a15c90fb125aadfb0a99" translate="yes" xml:space="preserve">
          <source>If you have already calculated the mean of your data, you can pass it as the optional second argument &lt;em&gt;xbar&lt;/em&gt; to avoid recalculation:</source>
          <target state="translated">如果已经计算出数据平均值，则可以将其作为可选的第二个参数&lt;em&gt;xbar&lt;/em&gt;传递，以避免重新计算：</target>
        </trans-unit>
        <trans-unit id="6b5f4691daf2771d8fbe481e68889a589550470c" translate="yes" xml:space="preserve">
          <source>If you have an appropriate entry in your &lt;code&gt;turtle.cfg&lt;/code&gt; file this dictionary will be read in at import time and will replace the original English docstrings.</source>
          <target state="translated">如果您在 &lt;code&gt;turtle.cfg&lt;/code&gt; 文件中有适当的条目，则该词典将在导入时读取，并将替换原始的英语文档字符串。</target>
        </trans-unit>
        <trans-unit id="0a1e2776fdb2c280f99d04fa6d3f9aadbbdd2668" translate="yes" xml:space="preserve">
          <source>If you have an enum member and need its &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;value&lt;/code&gt;:</source>
          <target state="translated">如果您有枚举成员，并且需要其 &lt;code&gt;name&lt;/code&gt; 或 &lt;code&gt;value&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="adddc6c47cf6a214332d2bba1e6dcbb1cf7609c4" translate="yes" xml:space="preserve">
          <source>If you have carried out a lot of deletions and would like to shrink the space used by the &lt;code&gt;gdbm&lt;/code&gt; file, this routine will reorganize the database. &lt;code&gt;gdbm&lt;/code&gt; objects will not shorten the length of a database file except by using this reorganization; otherwise, deleted file space will be kept and reused as new (key, value) pairs are added.</source>
          <target state="translated">如果您执行了许多删除操作，并希望缩小 &lt;code&gt;gdbm&lt;/code&gt; 文件使用的空间，则此例程将重新组织数据库。 &lt;code&gt;gdbm&lt;/code&gt; 对象将不会缩短数据库文件的长度，除非使用此重组。否则，删除的文件空间将保留并在添加新的（键，值）对时重复使用。</target>
        </trans-unit>
        <trans-unit id="f3941a6c86792842a0db1694694d8d40f3510d0d" translate="yes" xml:space="preserve">
          <source>If you have defined your own classes which you pass to function calls, you have to implement a &lt;code&gt;from_param()&lt;/code&gt; class method for them to be able to use them in the &lt;code&gt;argtypes&lt;/code&gt; sequence. The &lt;code&gt;from_param()&lt;/code&gt; class method receives the Python object passed to the function call, it should do a typecheck or whatever is needed to make sure this object is acceptable, and then return the object itself, its &lt;code&gt;_as_parameter_&lt;/code&gt; attribute, or whatever you want to pass as the C function argument in this case. Again, the result should be an integer, string, bytes, a &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; instance, or an object with an &lt;code&gt;_as_parameter_&lt;/code&gt; attribute.</source>
          <target state="translated">如果定义了自己的传递给函数调用的类，则必须实现 &lt;code&gt;from_param()&lt;/code&gt; 类方法，以使其能够在 &lt;code&gt;argtypes&lt;/code&gt; 序列中使用。该 &lt;code&gt;from_param()&lt;/code&gt; 类方法接收传给函数的Python对象，它做一个类型检测，或者是需要确保这个对象是可接受的，然后返回对象本身，其 &lt;code&gt;_as_parameter_&lt;/code&gt; 任何你想传递的属性，或在这种情况下作为C函数参数。同样，结果应为整数，字符串，字节，&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;实例或具有 &lt;code&gt;_as_parameter_&lt;/code&gt; 属性的对象。</target>
        </trans-unit>
        <trans-unit id="c7ba5f87f67362e164e00c45234b25b88116bc45" translate="yes" xml:space="preserve">
          <source>If you have positional arguments that must begin with &lt;code&gt;-&lt;/code&gt; and don&amp;rsquo;t look like negative numbers, you can insert the pseudo-argument &lt;code&gt;'--'&lt;/code&gt; which tells &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; that everything after that is a positional argument:</source>
          <target state="translated">如果您的位置参数必须以 &lt;code&gt;-&lt;/code&gt; 开头并且看起来不像负数，则可以插入伪参数 &lt;code&gt;'--'&lt;/code&gt; ，该参数告诉&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;之后的所有内容都是位置参数：</target>
        </trans-unit>
        <trans-unit id="a1ad6fc06b4f04b51136dd86e77cdf44c2345475" translate="yes" xml:space="preserve">
          <source>If you instantiate any of these types, note that signatures may vary between Python versions.</source>
          <target state="translated">如果您实例化了这些类型,请注意不同 Python 版本的签名可能不同。</target>
        </trans-unit>
        <trans-unit id="0ee2c99f3c1ce008b2482f9a4bd039eac988eb85" translate="yes" xml:space="preserve">
          <source>If you merely want to attach a time zone object &lt;em&gt;tz&lt;/em&gt; to a datetime &lt;em&gt;dt&lt;/em&gt; without adjustment of date and time data, use &lt;code&gt;dt.replace(tzinfo=tz)&lt;/code&gt;. If you merely want to remove the time zone object from an aware datetime &lt;em&gt;dt&lt;/em&gt; without conversion of date and time data, use &lt;code&gt;dt.replace(tzinfo=None)&lt;/code&gt;.</source>
          <target state="translated">如果仅要将时区对象&lt;em&gt;tz&lt;/em&gt;附加到datetime &lt;em&gt;dt&lt;/em&gt;而不调整日期和时间数据，请使用 &lt;code&gt;dt.replace(tzinfo=tz)&lt;/code&gt; 。如果只想从已知的datetime &lt;em&gt;dt中&lt;/em&gt;删除时区对象而不转换日期和时间数据，请使用 &lt;code&gt;dt.replace(tzinfo=None)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc6c75c360131321b14d956646dcffde70eca5a7" translate="yes" xml:space="preserve">
          <source>If you need a fully populated element, look for &amp;ldquo;end&amp;rdquo; events instead.</source>
          <target state="translated">如果您需要一个完全填充的元素，请查找&amp;ldquo;结束&amp;rdquo;事件。</target>
        </trans-unit>
        <trans-unit id="86368d19f69c93150072272046943f1484ff2526" translate="yes" xml:space="preserve">
          <source>If you need to find out if a module can be imported without actually doing the import, then you should use &lt;a href=&quot;#importlib.util.find_spec&quot;&gt;&lt;code&gt;importlib.util.find_spec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果需要确定是否可以在不实际执行导入的情况下导入模块，则应使用&lt;a href=&quot;#importlib.util.find_spec&quot;&gt; &lt;code&gt;importlib.util.find_spec()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4101124fa4b09fc6cc1ef68bc64b034b218ec7e6" translate="yes" xml:space="preserve">
          <source>If you need to free memory, for example, allocated by an extension module with a call to the &lt;code&gt;free(void *)&lt;/code&gt;, it is important that you use the function in the same library that allocated the memory.</source>
          <target state="translated">例如，如果需要释放内存（由扩展模块通过调用 &lt;code&gt;free(void *)&lt;/code&gt; 进行分配），则必须在分配内存的同一库中使用该函数。</target>
        </trans-unit>
        <trans-unit id="6ca61f6332d6d58306dfe4cd895fbd3ec252e9fa" translate="yes" xml:space="preserve">
          <source>If you need to know if a class is an instance of a dataclass (and not a dataclass itself), then add a further check for &lt;code&gt;not
isinstance(obj, type)&lt;/code&gt;:</source>
          <target state="translated">如果您需要知道一个类是否是数据类的实例（而不是数据类本身），则添加一个进一步的检查，是否 &lt;code&gt;not isinstance(obj, type)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9fbb0aa423003d7733fbd8694a32a308d63c2747" translate="yes" xml:space="preserve">
          <source>If you need to load modules from a directory which is not on Python&amp;rsquo;s default module search path, you can change the path in your script, before importing other modules. For example:</source>
          <target state="translated">如果需要从不在Python默认模块搜索路径上的目录中加载模块，则可以在导入其他模块之前在脚本中更改路径。例如：</target>
        </trans-unit>
        <trans-unit id="1cf32b7cc15737ca5c3f1bc7291a3230ef00b4ed" translate="yes" xml:space="preserve">
          <source>If you need to make more significant changes to rotation processing, you can override the methods.</source>
          <target state="translated">如果你需要对旋转处理进行更重大的改变,你可以覆盖这些方法。</target>
        </trans-unit>
        <trans-unit id="d96003b130e0abd7634352c365ff1181febdd21c" translate="yes" xml:space="preserve">
          <source>If you need to modify the environment for the child use the &lt;em&gt;env&lt;/em&gt; parameter rather than doing it in a &lt;em&gt;preexec_fn&lt;/em&gt;. The &lt;em&gt;start_new_session&lt;/em&gt; parameter can take the place of a previously common use of &lt;em&gt;preexec_fn&lt;/em&gt; to call os.setsid() in the child.</source>
          <target state="translated">如果您需要为孩子修改环境，请使用&lt;em&gt;env&lt;/em&gt;参数，而不要在&lt;em&gt;preexec_fn&lt;/em&gt;中使用&lt;em&gt;它&lt;/em&gt;。该&lt;em&gt;start_new_session&lt;/em&gt;参数可以采用以前普遍使用的地点&lt;em&gt;preexec_fn&lt;/em&gt;调用os.setsid（）的孩子。</target>
        </trans-unit>
        <trans-unit id="f304fd08cfd78b8854b1fd29f66f112cd5c13e1e" translate="yes" xml:space="preserve">
          <source>If you need to set the locale directory, you can pass it into the &lt;a href=&quot;#gettext.install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">如果需要设置语言环境目录，可以将其传递给&lt;a href=&quot;#gettext.install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt;函数：</target>
        </trans-unit>
        <trans-unit id="989b83d5f423a04c98cf18328ded12c8c1f9993b" translate="yes" xml:space="preserve">
          <source>If you pass a relative pathname, don&amp;rsquo;t change the current working directory between resumptions of &lt;a href=&quot;#os.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#os.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt; never changes the current directory, and assumes that its caller doesn&amp;rsquo;t either.</source>
          <target state="translated">如果传递相对路径名，请不要在恢复&lt;a href=&quot;#os.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt;之间更改当前的工作目录。&lt;a href=&quot;#os.walk&quot;&gt; &lt;code&gt;walk()&lt;/code&gt; &lt;/a&gt;永远不会更改当前目录，并假定其调用者也不会更改。</target>
        </trans-unit>
        <trans-unit id="14e992d9d4752d16d4f2db4c0441e7739cd4616d" translate="yes" xml:space="preserve">
          <source>If you pass in a file-like object, the wave object will not close it when its &lt;code&gt;close()&lt;/code&gt; method is called; it is the caller&amp;rsquo;s responsibility to close the file object.</source>
          <target state="translated">如果传入文件状对象，则在调用wave对象的 &lt;code&gt;close()&lt;/code&gt; 方法时，wave对象不会将其关闭；关闭文件对象是调用者的责任。</target>
        </trans-unit>
        <trans-unit id="bce6fbed23eb5dcd1301360b71b6c428b6101471" translate="yes" xml:space="preserve">
          <source>If you pass in a function it will be called with same arguments as the mock and unless the function returns the &lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/a&gt; singleton the call to the mock will then return whatever the function returns. If the function returns &lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/a&gt; then the mock will return its normal value (from the &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt;&lt;code&gt;return_value&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">如果您传入一个函数，它将以与模拟相同的参数进行调用，除非该函数返回&lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt; &lt;code&gt;DEFAULT&lt;/code&gt; &lt;/a&gt;单例，否则对该模拟的调用将返回该函数返回的所有内容。如果函数返回&lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt; &lt;code&gt;DEFAULT&lt;/code&gt; ,&lt;/a&gt;则模拟将返回其正常值（来自&lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt; &lt;code&gt;return_value&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a5bcec43963bc6522bf0a067657c871d04e72c94" translate="yes" xml:space="preserve">
          <source>If you pass in an iterable, it is used to retrieve an iterator which must yield a value on every call. This value can either be an exception instance to be raised, or a value to be returned from the call to the mock (&lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/a&gt; handling is identical to the function case).</source>
          <target state="translated">如果传入一个Iterable，它将用于检索一个迭代器，该迭代器必须在每次调用时产生一个值。该值可以是要引发的异常实例，也可以是从对模拟的调用中返回的值（&lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt; &lt;code&gt;DEFAULT&lt;/code&gt; &lt;/a&gt;处理与函数情况相同）。</target>
        </trans-unit>
        <trans-unit id="e8f98dd86ae9edd376ec292daf25469e857090bc" translate="yes" xml:space="preserve">
          <source>If you prefer to tune security settings yourself, you might create a context from scratch (but beware that you might not get the settings right):</source>
          <target state="translated">如果你喜欢自己调整安全设置,你可能会从头开始创建一个上下文(但要注意,你可能不会得到正确的设置)。</target>
        </trans-unit>
        <trans-unit id="13d9f70eafdbcb60562762894f8800d86df24ae3" translate="yes" xml:space="preserve">
          <source>If you ran the process with &lt;code&gt;stderr=subprocess.STDOUT&lt;/code&gt;, stdout and stderr will be combined in this attribute, and &lt;a href=&quot;#subprocess.CompletedProcess.stderr&quot;&gt;&lt;code&gt;stderr&lt;/code&gt;&lt;/a&gt; will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">如果使用 &lt;code&gt;stderr=subprocess.STDOUT&lt;/code&gt; 运行该进程，则stdout和stderr将合并到该属性中，并且&lt;a href=&quot;#subprocess.CompletedProcess.stderr&quot;&gt; &lt;code&gt;stderr&lt;/code&gt; &lt;/a&gt;将为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="097c1b21b4dc383068accbc4c009da7628ba1b98" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;example.py&lt;/code&gt; directly from the command line, &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; works its magic:</source>
          <target state="translated">如果直接从命令行运行 &lt;code&gt;example.py&lt;/code&gt; ，则&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;可以发挥其魔力：</target>
        </trans-unit>
        <trans-unit id="4f231c383bc8b650abcdc023f68a52b9b627363e" translate="yes" xml:space="preserve">
          <source>If you set e.g. &lt;code&gt;language = italian&lt;/code&gt; the docstringdict &lt;code&gt;turtle_docstringdict_italian.py&lt;/code&gt; will be loaded at import time (if present on the import path, e.g. in the same directory as &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果设置例如 &lt;code&gt;language = italian&lt;/code&gt; 则docstringdict &lt;code&gt;turtle_docstringdict_italian.py&lt;/code&gt; 将在导入时加载（如果存在于导入路径中，例如在与&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;相同的目录中）。</target>
        </trans-unit>
        <trans-unit id="9f9ca74752ebe3e1cde63708838074a0ef64b8ab" translate="yes" xml:space="preserve">
          <source>If you simply want to import a module (potentially within a package) by name, use &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果只想按名称导入模块（可能在包中），请使用&lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eadedf4eaab1c80ba2f6a6ef7e45a206594d656a" translate="yes" xml:space="preserve">
          <source>If you somehow know the actual population mean &amp;mu; you should pass it to the &lt;a href=&quot;#statistics.pvariance&quot;&gt;&lt;code&gt;pvariance()&lt;/code&gt;&lt;/a&gt; function as the &lt;em&gt;mu&lt;/em&gt; parameter to get the variance of a sample.</source>
          <target state="translated">如果您以某种方式知道实际总体均值&amp;mu;，则应将其作为&lt;em&gt;mu&lt;/em&gt;参数传递给&lt;a href=&quot;#statistics.pvariance&quot;&gt; &lt;code&gt;pvariance()&lt;/code&gt; &lt;/a&gt;函数以获取样本的方差。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6158aab4724beaceaa6e79b29d9be8382f2e23f9" translate="yes" xml:space="preserve">
          <source>If you somehow know the true population mean &amp;mu;, you may use this function to calculate the variance of a sample, giving the known population mean as the second argument. Provided the data points are a random sample of the population, the result will be an unbiased estimate of the population variance.</source>
          <target state="translated">如果您以某种方式知道真实的总体平均值&amp;mu;，则可以使用此函数来计算样本的方差，将已知的总体平均值作为第二个参数。假设数据点是总体的随机样本，则结果将是总体方差的无偏估计。</target>
        </trans-unit>
        <trans-unit id="c10de555c4449d7964f6af5647d563052cabd068" translate="yes" xml:space="preserve">
          <source>If you supply the start directory as a package name rather than a path to a directory then discover assumes that whichever location it imports from is the location you intended, so you will not get the warning.</source>
          <target state="translated">如果你提供启动目录作为包名,而不是一个目录的路径,那么discover就会认为它从哪个位置导入的就是你想要的位置,所以你不会收到警告。</target>
        </trans-unit>
        <trans-unit id="9bc2a6c7429466d8bb8a989fdc7ce4cc694cd926" translate="yes" xml:space="preserve">
          <source>If you suspect that there may be a problem in importing the &lt;a href=&quot;cgitb#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; module, you can use an even more robust approach (which only uses built-in modules):</source>
          <target state="translated">如果您怀疑导入&lt;a href=&quot;cgitb#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; &lt;/a&gt;模块时可能存在问题，则可以使用一种更可靠的方法（仅使用内置模块）：</target>
        </trans-unit>
        <trans-unit id="50de709429c8c96a2fb6b6fdf0e8b44acd7d7e0a" translate="yes" xml:space="preserve">
          <source>If you use &amp;ldquo;/usr/bin/env python&amp;rdquo; (or other forms of the &amp;ldquo;python&amp;rdquo; command, such as &amp;ldquo;/usr/bin/python&amp;rdquo;), you need to consider that your users may have either Python 2 or Python 3 as their default, and write your code to work under both versions.</source>
          <target state="translated">如果您使用&amp;ldquo; / usr / bin / env python&amp;rdquo;（或&amp;ldquo; python&amp;rdquo;命令的其他形式，例如&amp;ldquo; / usr / bin / python&amp;rdquo;），则需要考虑您的用户可能拥有Python 2或Python 3作为它们的默认设置，并编写您的代码以在这两个版本下工作。</target>
        </trans-unit>
        <trans-unit id="3327948dd8642cd268b3754e1a2f4b14a2babf7c" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;#multiprocessing.JoinableQueue&quot;&gt;&lt;code&gt;JoinableQueue&lt;/code&gt;&lt;/a&gt; then you &lt;strong&gt;must&lt;/strong&gt; call &lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt;&lt;code&gt;JoinableQueue.task_done()&lt;/code&gt;&lt;/a&gt; for each task removed from the queue or else the semaphore used to count the number of unfinished tasks may eventually overflow, raising an exception.</source>
          <target state="translated">如果使用&lt;a href=&quot;#multiprocessing.JoinableQueue&quot;&gt; &lt;code&gt;JoinableQueue&lt;/code&gt; ,&lt;/a&gt;则&lt;strong&gt;必须&lt;/strong&gt;为从队列中删除的每个任务调用&lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt; &lt;code&gt;JoinableQueue.task_done()&lt;/code&gt; &lt;/a&gt;，否则用于计数未完成任务数的信号量最终可能会溢出，从而引发异常。</target>
        </trans-unit>
        <trans-unit id="8f4f2a66699a6ccb9a802c6a128aa2a5c76c7e61" translate="yes" xml:space="preserve">
          <source>If you use &lt;em&gt;editline&lt;/em&gt;/&lt;code&gt;libedit&lt;/code&gt; readline emulation on macOS, the initialization file located in your home directory is named &lt;code&gt;.editrc&lt;/code&gt;. For example, the following content in &lt;code&gt;~/.editrc&lt;/code&gt; will turn ON &lt;em&gt;vi&lt;/em&gt; keybindings and TAB completion:</source>
          <target state="translated">如果在macOS上使用&lt;em&gt;editline&lt;/em&gt; / &lt;code&gt;libedit&lt;/code&gt; readline仿真，则位于主目录中的初始化文件名​​为 &lt;code&gt;.editrc&lt;/code&gt; 。例如， &lt;code&gt;~/.editrc&lt;/code&gt; 的以下内容将打开&lt;em&gt;vi&lt;/em&gt;键绑定和TAB完成：</target>
        </trans-unit>
        <trans-unit id="c3d4a93e13f71d80556de33a53d4ec361fe070d9" translate="yes" xml:space="preserve">
          <source>If you use &lt;em&gt;spec&lt;/em&gt; or &lt;em&gt;spec_set&lt;/em&gt; and &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; is replacing a &lt;em&gt;class&lt;/em&gt;, then the return value of the created mock will have the same spec.</source>
          <target state="translated">如果使用&lt;em&gt;spec&lt;/em&gt;或&lt;em&gt;spec_set&lt;/em&gt;并且&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;替换了&lt;em&gt;class&lt;/em&gt;，则创建的模拟的返回值将具有相同的spec。</target>
        </trans-unit>
        <trans-unit id="514f9487f7b2350c961e01f947173c311579e162" translate="yes" xml:space="preserve">
          <source>If you use a hostname in the &lt;em&gt;host&lt;/em&gt; portion of IPv4/v6 socket address, the program may show a nondeterministic behavior, as Python uses the first address returned from the DNS resolution. The socket address will be resolved differently into an actual IPv4/v6 address, depending on the results from DNS resolution and/or the host configuration. For deterministic behavior use a numeric address in &lt;em&gt;host&lt;/em&gt; portion.</source>
          <target state="translated">如果在IPv4 / v6套接字地址的&lt;em&gt;主机&lt;/em&gt;部分中使用主机名，则该程序可能会显示不确定的行为，因为Python使用从DNS解析返回的第一个地址。套接字地址将根据DNS解析和/或主机配置的结果不同地解析为实际的IPv4 / v6地址。对于确定性行为，请在&lt;em&gt;主机&lt;/em&gt;部分使用数字地址。</target>
        </trans-unit>
        <trans-unit id="96ea7b1cf88562cf80e633c2b1c94203e479e327" translate="yes" xml:space="preserve">
          <source>If you use an explicit version, for example &amp;ldquo;/usr/bin/env python3&amp;rdquo; your application will not work for users who do not have that version. (This may be what you want if you have not made your code Python 2 compatible).</source>
          <target state="translated">如果使用显式版本，例如&amp;ldquo; / usr / bin / env python3&amp;rdquo;，则您的应用程序将不适用于没有该版本的用户。（如果您没有使代码与Python 2兼容，这可能就是您想要的）。</target>
        </trans-unit>
        <trans-unit id="6997de2e41b96b52ebe4782063e52556ff05a848" translate="yes" xml:space="preserve">
          <source>If you use the &amp;lsquo;silent&amp;rsquo; command in the command list, the usual message about stopping at a breakpoint is not printed. This may be desirable for breakpoints that are to print a specific message and then continue. If none of the other commands print anything, you see no sign that the breakpoint was reached.</source>
          <target state="translated">如果在命令列表中使用&amp;ldquo; silent&amp;rdquo;命令，则不会打印有关在断点处停止的常规消息。对于要打印特定消息然后继续的断点，这可能是理想的。如果没有其他命令可以打印任何内容，则看不到已达到断点的迹象。</target>
        </trans-unit>
        <trans-unit id="f69dd2dd959b985277dcf16e4c5303ee3dde0861" translate="yes" xml:space="preserve">
          <source>If you use the &lt;em&gt;spec&lt;/em&gt; keyword argument to create a mock then attempting to set a magic method that isn&amp;rsquo;t in the spec will raise an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果使用&lt;em&gt;spec&lt;/em&gt;关键字参数创建模拟，则尝试设置规范中未包含的魔术方法将引发&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="353ad31e4d774964063f5b58ea1776698ab8f303" translate="yes" xml:space="preserve">
          <source>If you use the &lt;em&gt;spec&lt;/em&gt; or &lt;em&gt;spec_set&lt;/em&gt; arguments then &lt;em&gt;only&lt;/em&gt; magic methods that exist in the spec will be created.</source>
          <target state="translated">如果使用&lt;em&gt;spec&lt;/em&gt;或&lt;em&gt;spec_set&lt;/em&gt;参数，则&lt;em&gt;仅&lt;/em&gt;会创建存在于spec中的魔术方法。</target>
        </trans-unit>
        <trans-unit id="3be1784a6b9e18d186acdce6908f38010e51c9ef" translate="yes" xml:space="preserve">
          <source>If you use the ADPCM coder to build network packets and you want your protocol to be stateless (i.e. to be able to tolerate packet loss) you should not only transmit the data but also the state. Note that you should send the &lt;em&gt;initial&lt;/em&gt; state (the one you passed to &lt;a href=&quot;#audioop.lin2adpcm&quot;&gt;&lt;code&gt;lin2adpcm()&lt;/code&gt;&lt;/a&gt;) along to the decoder, not the final state (as returned by the coder). If you want to use &lt;a href=&quot;struct#struct.Struct&quot;&gt;&lt;code&gt;struct.Struct&lt;/code&gt;&lt;/a&gt; to store the state in binary you can code the first element (the predicted value) in 16 bits and the second (the delta index) in 8.</source>
          <target state="translated">如果您使用ADPCM编码器构建网络数据包，并且希望协议是无状态的（即能够容忍数据包丢失），则不仅应该传输数据，还应该传输状态。请注意，您应该将&lt;em&gt;初始&lt;/em&gt;状态（传递给&lt;a href=&quot;#audioop.lin2adpcm&quot;&gt; &lt;code&gt;lin2adpcm()&lt;/code&gt; 的状态&lt;/a&gt;）发送给解码器，而不是最终状态（由编码器返回）。如果要使用&lt;a href=&quot;struct#struct.Struct&quot;&gt; &lt;code&gt;struct.Struct&lt;/code&gt; &lt;/a&gt;将状态存储为二进制，则可以将第一个元素（预测值）用16位编码，将第二个元素（预测值）用8位编码。</target>
        </trans-unit>
        <trans-unit id="9c83d7f1f379ed7a6cf04574d6c921d79a111100" translate="yes" xml:space="preserve">
          <source>If you use this technique you must ensure that the patching is &amp;ldquo;undone&amp;rdquo; by calling &lt;code&gt;stop&lt;/code&gt;. This can be fiddlier than you might think, because if an exception is raised in the &lt;code&gt;setUp&lt;/code&gt; then &lt;code&gt;tearDown&lt;/code&gt; is not called. &lt;a href=&quot;unittest#unittest.TestCase.addCleanup&quot;&gt;&lt;code&gt;unittest.TestCase.addCleanup()&lt;/code&gt;&lt;/a&gt; makes this easier:</source>
          <target state="translated">如果使用此技术，则必须通过调用 &lt;code&gt;stop&lt;/code&gt; 来确保补丁被&amp;ldquo;撤消&amp;rdquo; 。这可能比你想象的fiddlier，因为如果一个异常在升起 &lt;code&gt;setUp&lt;/code&gt; 然后 &lt;code&gt;tearDown&lt;/code&gt; 不叫。&lt;a href=&quot;unittest#unittest.TestCase.addCleanup&quot;&gt; &lt;code&gt;unittest.TestCase.addCleanup()&lt;/code&gt; &lt;/a&gt;使此操作更容易：</target>
        </trans-unit>
        <trans-unit id="75bf0749f0dd727a13fcc6a835a82d9cd272d1fc" translate="yes" xml:space="preserve">
          <source>If you want &lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt; to create mocks for you, then you can use &lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/a&gt; as the value. If you use &lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt;&lt;code&gt;patch.multiple()&lt;/code&gt;&lt;/a&gt; as a decorator then the created mocks are passed into the decorated function by keyword.</source>
          <target state="translated">如果希望&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt; &lt;code&gt;patch.multiple()&lt;/code&gt; &lt;/a&gt;为您创建模拟，则可以使用&lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt; &lt;code&gt;DEFAULT&lt;/code&gt; &lt;/a&gt;作为值。如果使用&lt;a href=&quot;#unittest.mock.patch.multiple&quot;&gt; &lt;code&gt;patch.multiple()&lt;/code&gt; &lt;/a&gt;作为装饰器，则创建的模拟将通过关键字传递到装饰的函数中。</target>
        </trans-unit>
        <trans-unit id="6a385ee3f431c0cf8aa5476eab766bc532450fe5" translate="yes" xml:space="preserve">
          <source>If you want a given &lt;em&gt;stdin&lt;/em&gt; to be used, make sure to set the instance&amp;rsquo;s &lt;a href=&quot;#cmd.Cmd.use_rawinput&quot;&gt;&lt;code&gt;use_rawinput&lt;/code&gt;&lt;/a&gt; attribute to &lt;code&gt;False&lt;/code&gt;, otherwise &lt;em&gt;stdin&lt;/em&gt; will be ignored.</source>
          <target state="translated">如果要使用给定的&lt;em&gt;stdin&lt;/em&gt;，请确保将实例的&lt;a href=&quot;#cmd.Cmd.use_rawinput&quot;&gt; &lt;code&gt;use_rawinput&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;False&lt;/code&gt; ，否则&lt;em&gt;stdin&lt;/em&gt;将被忽略。</target>
        </trans-unit>
        <trans-unit id="d7bcf54413bb963aa019597f5acad81401f292e6" translate="yes" xml:space="preserve">
          <source>If you want cross-platform overwriting of the destination, use &lt;a href=&quot;#os.replace&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要跨平台覆盖目标，请使用&lt;a href=&quot;#os.replace&quot;&gt; &lt;code&gt;replace()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a129089344fee48b88396b82f4d19b77ca7fc4d" translate="yes" xml:space="preserve">
          <source>If you want more functionality, you&amp;rsquo;re going to have to read the manual, or guess what the following functions do:</source>
          <target state="translated">如果需要更多功能，则必须阅读手册，或猜测以下功能的作用：</target>
        </trans-unit>
        <trans-unit id="8ae975db4dc6412041430b1daafaa6c1c0e31b5d" translate="yes" xml:space="preserve">
          <source>If you want the &lt;code&gt;setUpClass&lt;/code&gt; and &lt;code&gt;tearDownClass&lt;/code&gt; on base classes called then you must call up to them yourself. The implementations in &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; are empty.</source>
          <target state="translated">如果要在基类上调用 &lt;code&gt;setUpClass&lt;/code&gt; 和 &lt;code&gt;tearDownClass&lt;/code&gt; ，则必须自己调用它们。&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;中的实现为空。</target>
        </trans-unit>
        <trans-unit id="8fc69a19f6a319eafed02a83645ae1ec1683cb6c" translate="yes" xml:space="preserve">
          <source>If you want the adler32 or crc32 hash functions, they are available in the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">如果需要adler32或crc32哈希函数，则可以在&lt;a href=&quot;zlib#module-zlib&quot;&gt; &lt;code&gt;zlib&lt;/code&gt; &lt;/a&gt;模块中使用它们。</target>
        </trans-unit>
        <trans-unit id="4cc2b2701ce617852e01ad2fdbb4d98e0e062510" translate="yes" xml:space="preserve">
          <source>If you want the mock to still return the default return value (a new mock), or any set return value, then there are two ways of doing this. Either return &lt;code&gt;mock.return_value&lt;/code&gt; from inside &lt;code&gt;side_effect&lt;/code&gt;, or return &lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您希望模拟仍返回默认返回值（新模拟）或任何设置的返回值，则有两种方法可以执行此操作。要么返回 &lt;code&gt;mock.return_value&lt;/code&gt; 从内 &lt;code&gt;side_effect&lt;/code&gt; 或返回&lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt; &lt;code&gt;DEFAULT&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c2e7b29010c2bd4bd3a7b2186800720ade7653a7" translate="yes" xml:space="preserve">
          <source>If you want to access enum members by &lt;em&gt;name&lt;/em&gt;, use item access:</source>
          <target state="translated">如果要按&lt;em&gt;名称&lt;/em&gt;访问枚举成员，请使用项目访问权限：</target>
        </trans-unit>
        <trans-unit id="2c2d72cb023b23999d092f07ff8849d8edf000d1" translate="yes" xml:space="preserve">
          <source>If you want to avoid the &lt;code&gt;ord(&quot;x&quot;)&lt;/code&gt; calls above, you can set the &lt;code&gt;argtypes&lt;/code&gt; attribute, and the second argument will be converted from a single character Python bytes object into a C char:</source>
          <target state="translated">如果要避免上面的 &lt;code&gt;ord(&quot;x&quot;)&lt;/code&gt; 调用，可以设置 &lt;code&gt;argtypes&lt;/code&gt; 属性，第二个参数将从单个字符的Python字节对象转换为C字符：</target>
        </trans-unit>
        <trans-unit id="279c29c89aa9656f84b48678016178fbd67cb71c" translate="yes" xml:space="preserve">
          <source>If you want to change how current time is determined (for example, to force use of wall-clock time or elapsed process time), pass the timing function you want to the &lt;code&gt;Profile&lt;/code&gt; class constructor:</source>
          <target state="translated">如果要更改确定当前时间的方式（例如，强制使用壁钟时间或经过的处理时间），请将所需的计时函数传递给 &lt;code&gt;Profile&lt;/code&gt; 类构造函数：</target>
        </trans-unit>
        <trans-unit id="73a589407368c78ec530e2f941e80cc64760ae2f" translate="yes" xml:space="preserve">
          <source>If you want to clear any previously installed progress handler, call the method with &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; for &lt;em&gt;handler&lt;/em&gt;.</source>
          <target state="translated">如果要清除任何以前安装的进度处理程序，请使用&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;作为&lt;em&gt;处理程序&lt;/em&gt;调用该方法。</target>
        </trans-unit>
        <trans-unit id="b85687d6933b3a0fe36fbb7a49d525fedab74695" translate="yes" xml:space="preserve">
          <source>If you want to convert an integer number to an uppercase or lower hexadecimal string with prefix or not, you can use either of the following ways:</source>
          <target state="translated">如果你想把一个整数转换成一个大写或小写的带前缀或不带前缀的十六进制字符串,你可以使用以下任何一种方法。</target>
        </trans-unit>
        <trans-unit id="555dbff41f37109f588fa5abd198ada8e8af5c33" translate="yes" xml:space="preserve">
          <source>If you want to convert an integer number to octal string either with prefix &amp;ldquo;0o&amp;rdquo; or not, you can use either of the following ways.</source>
          <target state="translated">如果要将整数转换为带或不带前缀&amp;ldquo; 0o&amp;rdquo;的八进制字符串，则可以使用以下两种方式之一。</target>
        </trans-unit>
        <trans-unit id="8a7e395a436c737fb4f983babcb85c37f7ffba2a" translate="yes" xml:space="preserve">
          <source>If you want to create a memory-mapping for a writable, buffered file, you should &lt;a href=&quot;io#io.IOBase.flush&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; the file first. This is necessary to ensure that local modifications to the buffers are actually available to the mapping.</source>
          <target state="translated">如果要为可写的缓冲文件创建内存映射，则应首先&lt;a href=&quot;io#io.IOBase.flush&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt;该文件。必须确保对缓冲区的本地修改实际上可用于映射。</target>
        </trans-unit>
        <trans-unit id="8c96548f19f99190ded12d511ae463febe2b5258" translate="yes" xml:space="preserve">
          <source>If you want to create a new ZIP archive, specify its name after the &lt;a href=&quot;#cmdoption-zipfile-c&quot;&gt;&lt;code&gt;-c&lt;/code&gt;&lt;/a&gt; option and then list the filename(s) that should be included:</source>
          <target state="translated">如果要创建新的ZIP归档文件，请在&lt;a href=&quot;#cmdoption-zipfile-c&quot;&gt; &lt;code&gt;-c&lt;/code&gt; &lt;/a&gt;选项后指定其名称，然后列出应包含的文件名：</target>
        </trans-unit>
        <trans-unit id="b106ae412fab326b87e70a6ef024d49bf607babb" translate="yes" xml:space="preserve">
          <source>If you want to create a new tar archive, specify its name after the &lt;a href=&quot;#cmdoption-tarfile-c&quot;&gt;&lt;code&gt;-c&lt;/code&gt;&lt;/a&gt; option and then list the filename(s) that should be included:</source>
          <target state="translated">如果要创建新的tar归档文件，请在&lt;a href=&quot;#cmdoption-tarfile-c&quot;&gt; &lt;code&gt;-c&lt;/code&gt; &lt;/a&gt;选项后指定其名称，然后列出应包括的文件名：</target>
        </trans-unit>
        <trans-unit id="7c1a46617f45e12138983a57722199d3eb708a28" translate="yes" xml:space="preserve">
          <source>If you want to extract a ZIP archive into the specified directory, use the &lt;a href=&quot;#cmdoption-zipfile-e&quot;&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/a&gt; option:</source>
          <target state="translated">如果要将ZIP压缩文件解压缩到指定目录中，请使用&lt;a href=&quot;#cmdoption-zipfile-e&quot;&gt; &lt;code&gt;-e&lt;/code&gt; &lt;/a&gt;选项：</target>
        </trans-unit>
        <trans-unit id="700b384e128d1fbde8cf4400e885f3cf8732d78d" translate="yes" xml:space="preserve">
          <source>If you want to extract a tar archive into the current directory, use the &lt;a href=&quot;#cmdoption-tarfile-e&quot;&gt;&lt;code&gt;-e&lt;/code&gt;&lt;/a&gt; option:</source>
          <target state="translated">如果要将tar归档文件解压缩到当前目录中，请使用&lt;a href=&quot;#cmdoption-tarfile-e&quot;&gt; &lt;code&gt;-e&lt;/code&gt; &lt;/a&gt;选项：</target>
        </trans-unit>
        <trans-unit id="58588189cff4519d00d0897d652e2f735d514b04" translate="yes" xml:space="preserve">
          <source>If you want to include non-ASCII characters in your email headers, say in the &lt;em&gt;Subject&lt;/em&gt; or &lt;em&gt;To&lt;/em&gt; fields, you should use the &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; class and assign the field in the &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; object to an instance of &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instead of using a string for the header value. Import the &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; class from the &lt;a href=&quot;#module-email.header&quot;&gt;&lt;code&gt;email.header&lt;/code&gt;&lt;/a&gt; module. For example:</source>
          <target state="translated">如果要在电子邮件标题中包含非ASCII字符，例如在&amp;ldquo; &lt;em&gt;主题&amp;rdquo;&lt;/em&gt;或&amp;ldquo; &lt;em&gt;收件人&amp;rdquo;&lt;/em&gt;字段中说，则应使用&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;类，并将&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;对象中的字段分配给&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;实例，而不是使用字符串作为标题值。从&lt;a href=&quot;#module-email.header&quot;&gt; &lt;code&gt;email.header&lt;/code&gt; &lt;/a&gt;模块导入&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;类。例如：</target>
        </trans-unit>
        <trans-unit id="24ec3c78c55c3f145a14ab40bbeb1ab84cc85d19" translate="yes" xml:space="preserve">
          <source>If you want to keep the frame around (for example to print a traceback later), you can also break reference cycles by using the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#frame.clear&quot;&gt;&lt;code&gt;frame.clear()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果要保留框架（例如稍后打印回溯），也可以使用&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#frame.clear&quot;&gt; &lt;code&gt;frame.clear()&lt;/code&gt; &lt;/a&gt;方法中断参考循环。</target>
        </trans-unit>
        <trans-unit id="f475512fa10ce12ef3e23d2a5ca9d598d54ca1d9" translate="yes" xml:space="preserve">
          <source>If you want to keep the frame around (for example to print a traceback later), you can also break reference cycles by using the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#frame.clear&quot;&gt;&lt;code&gt;frame.clear()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6549b472b422a2e03ce43ff8ed3f5196f818e1c" translate="yes" xml:space="preserve">
          <source>If you want to know how to change the first sequence into the second, use &lt;code&gt;get_opcodes()&lt;/code&gt;:</source>
          <target state="translated">如果您想知道如何将第一个序列更改为第二个序列，请使用 &lt;code&gt;get_opcodes()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cd6b6c79b6bb6752c1926957d748425869a9d94e" translate="yes" xml:space="preserve">
          <source>If you want to locate a match anywhere in &lt;em&gt;string&lt;/em&gt;, use &lt;a href=&quot;#re.Pattern.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; instead (see also &lt;a href=&quot;#search-vs-match&quot;&gt;search() vs. match()&lt;/a&gt;).</source>
          <target state="translated">如果要在&lt;em&gt;字符串&lt;/em&gt;中的任意位置找到匹配项，请改用&lt;a href=&quot;#re.Pattern.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;（另请参见&lt;a href=&quot;#search-vs-match&quot;&gt;search（）vs. match（）&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="90b7dc5b7c7d64eb5dcf8c64af54da317f615167" translate="yes" xml:space="preserve">
          <source>If you want to locate a match anywhere in &lt;em&gt;string&lt;/em&gt;, use &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; instead (see also &lt;a href=&quot;#search-vs-match&quot;&gt;search() vs. match()&lt;/a&gt;).</source>
          <target state="translated">如果要在&lt;em&gt;字符串&lt;/em&gt;中的任意位置找到匹配项，请改用&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;（另请参见&lt;a href=&quot;#search-vs-match&quot;&gt;search（）vs. match（）&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7691cb3a9d42f9132cc69c1d67bf2035399d4696" translate="yes" xml:space="preserve">
          <source>If you want to make the hex string easier to read, you can specify a single character separator &lt;em&gt;sep&lt;/em&gt; parameter to include in the output. By default between each byte. A second optional &lt;em&gt;bytes_per_sep&lt;/em&gt; parameter controls the spacing. Positive values calculate the separator position from the right, negative values from the left.</source>
          <target state="translated">如果要使十六进制字符串更易于阅读，则可以指定单个字符分隔符&lt;em&gt;sep&lt;/em&gt;参数以包括在输出中。默认情况下，每个字节之间。第二个可选的&lt;em&gt;bytes_per_sep&lt;/em&gt;参数控制间距。正值从右开始计算分隔符位置，负号从左开始计算负值。</target>
        </trans-unit>
        <trans-unit id="7f82f6a50d02c1f8accc0d99988bbd66002ab317" translate="yes" xml:space="preserve">
          <source>If you want to manipulate Windows paths on a Unix machine (or vice versa). You cannot instantiate a &lt;a href=&quot;#pathlib.WindowsPath&quot;&gt;&lt;code&gt;WindowsPath&lt;/code&gt;&lt;/a&gt; when running on Unix, but you can instantiate &lt;a href=&quot;#pathlib.PureWindowsPath&quot;&gt;&lt;code&gt;PureWindowsPath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要在Unix计算机上操作Windows路径（反之亦然）。在Unix上运行时，不能实例化&lt;a href=&quot;#pathlib.WindowsPath&quot;&gt; &lt;code&gt;WindowsPath&lt;/code&gt; &lt;/a&gt;，但是可以实例化&lt;a href=&quot;#pathlib.PureWindowsPath&quot;&gt; &lt;code&gt;PureWindowsPath&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b7de6afd3109312dd2620f94a9fb410828a34c7" translate="yes" xml:space="preserve">
          <source>If you want to parse Python code into its AST representation, see &lt;a href=&quot;ast#ast.parse&quot;&gt;&lt;code&gt;ast.parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要将Python代码解析为AST表示形式，请参见&lt;a href=&quot;ast#ast.parse&quot;&gt; &lt;code&gt;ast.parse()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8826f07288ab3dad612019804c049ce5ddd0e19a" translate="yes" xml:space="preserve">
          <source>If you want to perform multiple patches then you can simply stack up the decorators.</source>
          <target state="translated">如果你想执行多个补丁,那么你可以简单地将装饰器堆叠起来。</target>
        </trans-unit>
        <trans-unit id="4f79361e9cfffc79417f13f6a383a9717a273aa3" translate="yes" xml:space="preserve">
          <source>If you want to reflect the turtle its state, you have to use &lt;code&gt;resizemode =
auto&lt;/code&gt;.</source>
          <target state="translated">如果要反映乌龟的状态，则必须使用 &lt;code&gt;resizemode = auto&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f28c7d51ec7d8d10c742281de629eb006ff45c11" translate="yes" xml:space="preserve">
          <source>If you want to send configurations to the listener which don&amp;rsquo;t disable existing loggers, you will need to use a JSON format for the configuration, which will use &lt;a href=&quot;#logging.config.dictConfig&quot;&gt;&lt;code&gt;dictConfig()&lt;/code&gt;&lt;/a&gt; for configuration. This method allows you to specify &lt;code&gt;disable_existing_loggers&lt;/code&gt; as &lt;code&gt;False&lt;/code&gt; in the configuration you send.</source>
          <target state="translated">如果要将配置发送给侦听器而不禁用现有的记录器，则需要使用JSON格式进行配置，该格式将使用&lt;a href=&quot;#logging.config.dictConfig&quot;&gt; &lt;code&gt;dictConfig()&lt;/code&gt; &lt;/a&gt;进行配置。此方法允许您在发送的配置中将 &lt;code&gt;disable_existing_loggers&lt;/code&gt; 指定为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ebc31a3f94e9849595d45e456c192050750c4e3" translate="yes" xml:space="preserve">
          <source>If you want to specify a subject line which is record-dependent, override this method.</source>
          <target state="translated">如果你想指定一个依赖于记录的主题行,可以覆盖这个方法。</target>
        </trans-unit>
        <trans-unit id="745b19cebcf113a8d5f26626ff17bb861b6e043f" translate="yes" xml:space="preserve">
          <source>If you want to use a different configuration which better reflects the features of this module or which better fits to your needs, e.g. for use in a classroom, you can prepare a configuration file &lt;code&gt;turtle.cfg&lt;/code&gt; which will be read at import time and modify the configuration according to its settings.</source>
          <target state="translated">如果要使用其他配置更好地反映此模块的功能或更好地满足您的需求（例如在教室中使用），则可以准备一个配置文件 &lt;code&gt;turtle.cfg&lt;/code&gt; ，该文件将在导入时读取，并修改根据其设置进行配置。</target>
        </trans-unit>
        <trans-unit id="6b8dc840c342df51fe5ce8af14007a99dd5c3a47" translate="yes" xml:space="preserve">
          <source>If you want to use a different prefix for your test, you can inform the patchers of the different prefix by setting &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt;. For more details about how to change the value of see &lt;a href=&quot;#test-prefix&quot;&gt;TEST_PREFIX&lt;/a&gt;.</source>
          <target state="translated">如果要对测试使用其他前缀，则可以通过设置 &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt; 来通知修补程序该不同的前缀。有关如何更改值的更多详细信息，请参见&lt;a href=&quot;#test-prefix&quot;&gt;TEST_PREFIX&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4fad4732a998a9e23ea176b65c3a718c625cdcc4" translate="yes" xml:space="preserve">
          <source>If you want to use no fillcolor (i.e. make the turtle transparent), you have to write &lt;code&gt;fillcolor = &quot;&quot;&lt;/code&gt; (but all nonempty strings must not have quotes in the cfg-file).</source>
          <target state="translated">如果您不想使用fillcolor（即使乌龟透明），则必须编写 &lt;code&gt;fillcolor = &quot;&quot;&lt;/code&gt; （但cfg文件中的所有非空字符串都不能带有引号）。</target>
        </trans-unit>
        <trans-unit id="0f8f3a435f429e1cd523ef833f8de0aef1f31607" translate="yes" xml:space="preserve">
          <source>If you want to walk an arbitrary filesystem path upwards, it is recommended to first call &lt;a href=&quot;#pathlib.Path.resolve&quot;&gt;&lt;code&gt;Path.resolve()&lt;/code&gt;&lt;/a&gt; so as to resolve symlinks and eliminate &lt;code&gt;&amp;ldquo;..&amp;rdquo;&lt;/code&gt; components.</source>
          <target state="translated">如果要向上走任意文件系统路径，建议先调用&lt;a href=&quot;#pathlib.Path.resolve&quot;&gt; &lt;code&gt;Path.resolve()&lt;/code&gt; &lt;/a&gt;以便解析符号链接并消除 &lt;code&gt;&amp;ldquo;..&amp;rdquo;&lt;/code&gt; 组件。</target>
        </trans-unit>
        <trans-unit id="70ac8ffb536e6d85123fe960473989eb7a059ddc" translate="yes" xml:space="preserve">
          <source>If you were looking to see what functions were looping a lot, and taking a lot of time, you would do:</source>
          <target state="translated">如果你想看看有哪些函数在大量循环,并花费大量时间,你会做。</target>
        </trans-unit>
        <trans-unit id="acf8d273366df0fb10eec018a0ee0ccd5949445d" translate="yes" xml:space="preserve">
          <source>If you wondered what functions called the above functions, you could now (&lt;code&gt;p&lt;/code&gt; is still sorted according to the last criteria) do:</source>
          <target state="translated">如果您想知道调用上述函数的函数是什么，您现在可以（仍然根据最后一个条件 &lt;code&gt;p&lt;/code&gt; 进行排序）：</target>
        </trans-unit>
        <trans-unit id="a0bf217f357783caa209594b9bcd75c3ce805fda" translate="yes" xml:space="preserve">
          <source>If you write a file-like object and implement your own caching, you can make it fork-safe by storing the pid whenever you append to the cache, and discarding the cache when the pid changes. For example:</source>
          <target state="translated">如果你写了一个类似于文件的对象,并实现了自己的缓存,你可以通过在每次追加缓存时存储pid,并在pid改变时丢弃缓存来使其成为fork-safe。比如说</target>
        </trans-unit>
        <trans-unit id="fe0eb8d599c47b7f3926f4416144dc29d275eb9e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using a raw string to express the pattern, remember that Python also uses the backslash as an escape sequence in string literals; if the escape sequence isn&amp;rsquo;t recognized by Python&amp;rsquo;s parser, the backslash and subsequent character are included in the resulting string. However, if Python would recognize the resulting sequence, the backslash should be repeated twice. This is complicated and hard to understand, so it&amp;rsquo;s highly recommended that you use raw strings for all but the simplest expressions.</source>
          <target state="translated">如果您不使用原始字符串来表达模式，请记住Python还使用反斜杠作为字符串文字中的转义序列。如果Python的解析器无法识别转义序列，则结果字符串中将包含反斜杠和后续字符。但是，如果Python能够识别出结果序列，则应将反斜杠重复两次。这是复杂且难以理解的，因此强烈建议您对除最简单的表达式以外的所有表达式使用原始字符串。</target>
        </trans-unit>
        <trans-unit id="63ba1bb5f63d28b0a2652e45a8f7caac7c895c2a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re only interested in where the sequences match, &lt;code&gt;get_matching_blocks()&lt;/code&gt; is handy:</source>
          <target state="translated">如果您只对序列匹配的位置感兴趣， &lt;code&gt;get_matching_blocks()&lt;/code&gt; 会很方便：</target>
        </trans-unit>
        <trans-unit id="f936f48bc81e3933728945057465fe8b1eaf71cf" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re starting with a buffered Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;f&lt;/em&gt;, first do &lt;code&gt;f.flush()&lt;/code&gt;, and then do &lt;code&gt;os.fsync(f.fileno())&lt;/code&gt;, to ensure that all internal buffers associated with &lt;em&gt;f&lt;/em&gt; are written to disk.</source>
          <target state="translated">如果您从缓冲的Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;&lt;em&gt;f开始&lt;/em&gt;，请首先执行 &lt;code&gt;f.flush()&lt;/code&gt; ，然后执行 &lt;code&gt;os.fsync(f.fileno())&lt;/code&gt; ，以确保与&lt;em&gt;f&lt;/em&gt;关联的所有内部缓冲区都写入磁盘。</target>
        </trans-unit>
        <trans-unit id="d778b78bee2934d35641a5cafddaed1a351d977e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re starting with a buffered Python &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;&lt;em&gt;f&lt;/em&gt;, first do &lt;code&gt;f.flush()&lt;/code&gt;, and then do &lt;code&gt;os.fsync(f.fileno())&lt;/code&gt;, to ensure that all internal buffers associated with &lt;em&gt;f&lt;/em&gt; are written to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32e5e3d701ca2fc3b2aabba2d5788af273dfeb3" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve never used this module before or just aren&amp;rsquo;t sure which class is right for your task, &lt;a href=&quot;#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; is most likely what you need. It instantiates a &lt;a href=&quot;#concrete-paths&quot;&gt;concrete path&lt;/a&gt; for the platform the code is running on.</source>
          <target state="translated">如果您以前从未使用过此模块，或者不确定不确定哪个类适合您的任务，则很可能需要&lt;a href=&quot;#pathlib.Path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;。它为代码在其上运行的平台实例化一条&lt;a href=&quot;#concrete-paths&quot;&gt;具体路径&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f33f0fe74a1d8aa8c68e244e2bc5362d95964bbf" translate="yes" xml:space="preserve">
          <source>If your application depends on a package that includes a C extension, that package cannot be run from a zip file (this is an OS limitation, as executable code must be present in the filesystem for the OS loader to load it). In this case, you can exclude that dependency from the zipfile, and either require your users to have it installed, or ship it alongside your zipfile and add code to your &lt;code&gt;__main__.py&lt;/code&gt; to include the directory containing the unzipped module in &lt;code&gt;sys.path&lt;/code&gt;. In this case, you will need to make sure to ship appropriate binaries for your target architecture(s) (and potentially pick the correct version to add to &lt;code&gt;sys.path&lt;/code&gt; at runtime, based on the user&amp;rsquo;s machine).</source>
          <target state="translated">如果您的应用程序依赖于包含C扩展名的软件包，则该软件包不能从zip文件运行（这是OS的限制，因为文件系统中必须存在可执行代码才能由OS loader加载）。在这种情况下，您可以从zip文件中排除该依赖关系，或者要求用户安装该依赖关系，或者将其与zip文件一起运送，然后将代码添加到 &lt;code&gt;__main__.py&lt;/code&gt; 中,以在 &lt;code&gt;sys.path&lt;/code&gt; 中包含包含解压缩模块的目录。在这种情况下，您将需要确保为目标体系结构提供适当的二进制文件（并有可能根据用户的计算机，在运行时选择正确的版本以添加到 &lt;code&gt;sys.path&lt;/code&gt; 中）。</target>
        </trans-unit>
        <trans-unit id="2a11020c14c0b00c5484221191c5a40664dd44bf" translate="yes" xml:space="preserve">
          <source>If your application doesn&amp;rsquo;t care whether the parameter was encoded as in &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;, you can collapse the parameter value by calling &lt;a href=&quot;email.utils#email.utils.collapse_rfc2231_value&quot;&gt;&lt;code&gt;email.utils.collapse_rfc2231_value()&lt;/code&gt;&lt;/a&gt;, passing in the return value from &lt;a href=&quot;#email.message.Message.get_param&quot;&gt;&lt;code&gt;get_param()&lt;/code&gt;&lt;/a&gt;. This will return a suitably decoded Unicode string when the value is a tuple, or the original string unquoted if it isn&amp;rsquo;t. For example:</source>
          <target state="translated">如果您的应用程序不关心参数是否按照&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;进行编码，则可以通过调用&lt;a href=&quot;email.utils#email.utils.collapse_rfc2231_value&quot;&gt; &lt;code&gt;email.utils.collapse_rfc2231_value()&lt;/code&gt; &lt;/a&gt;并从&lt;a href=&quot;#email.message.Message.get_param&quot;&gt; &lt;code&gt;get_param()&lt;/code&gt; &lt;/a&gt;返回返回值来折叠参数值。当该值是一个元组时，它将返回经过适当解码的Unicode字符串；如果不是，则返回未引用的原始字符串。例如：</target>
        </trans-unit>
        <trans-unit id="7027931b44d28707bd4c664ebc8956c5af833c14" translate="yes" xml:space="preserve">
          <source>If your application needs specific settings, you should create a &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; and apply the settings yourself.</source>
          <target state="translated">如果您的应用程序需要特定的设置，则应创建一个&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;并自己应用设置。</target>
        </trans-unit>
        <trans-unit id="5edf794d03c4b2ffd7486fd7e128bf5e002387d1" translate="yes" xml:space="preserve">
          <source>If your generator will only yield values, set the &lt;code&gt;SendType&lt;/code&gt; and &lt;code&gt;ReturnType&lt;/code&gt; to &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">如果生成器仅产生值，则将 &lt;code&gt;SendType&lt;/code&gt; 和 &lt;code&gt;ReturnType&lt;/code&gt; 设置为 &lt;code&gt;None&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3a6fc9f504fb9ac47a5e232ec8b3e5d967c1d094" translate="yes" xml:space="preserve">
          <source>If your generator will only yield values, set the &lt;code&gt;SendType&lt;/code&gt; to &lt;code&gt;None&lt;/code&gt;:</source>
          <target state="translated">如果生成器仅产生值，则将 &lt;code&gt;SendType&lt;/code&gt; 设置为 &lt;code&gt;None&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ae8a1702501d5b127615e973ca97f9e761c7eb59" translate="yes" xml:space="preserve">
          <source>If your operating system supports the &lt;code&gt;select()&lt;/code&gt; system call in its I/O library (and nearly all do), then you can use it to juggle multiple communication channels at once; doing other work while your I/O is taking place in the &amp;ldquo;background.&amp;rdquo; Although this strategy can seem strange and complex, especially at first, it is in many ways easier to understand and control than multi-threaded programming. The &lt;a href=&quot;#module-asyncore&quot;&gt;&lt;code&gt;asyncore&lt;/code&gt;&lt;/a&gt; module solves many of the difficult problems for you, making the task of building sophisticated high-performance network servers and clients a snap. For &amp;ldquo;conversational&amp;rdquo; applications and protocols the companion &lt;a href=&quot;asynchat#module-asynchat&quot;&gt;&lt;code&gt;asynchat&lt;/code&gt;&lt;/a&gt; module is invaluable.</source>
          <target state="translated">如果您的操作系统在其I / O库中支持 &lt;code&gt;select()&lt;/code&gt; 系统调用（几乎所有方法都支持），则可以使用它来同时处理多个通信通道；否则，您将无法使用它。在&amp;ldquo; I / O&amp;rdquo;发生在&amp;ldquo;后台&amp;rdquo;时进行其他工作。尽管这种策略看似奇怪且复杂，尤其是乍一看，但它在很多方面都比多线程编程更易于理解和控制。该&lt;a href=&quot;#module-asyncore&quot;&gt; &lt;code&gt;asyncore&lt;/code&gt; &lt;/a&gt;模块解决了许多对您的疑难问题，作出了建设先进的高性能网络服务器和客户端管理单元的任务。对于&amp;ldquo;对话&amp;rdquo;应用程序和协议，配套的&lt;a href=&quot;asynchat#module-asynchat&quot;&gt; &lt;code&gt;asynchat&lt;/code&gt; &lt;/a&gt;模块是非常宝贵的。</target>
        </trans-unit>
        <trans-unit id="955a544f9e1d26fd1d26d80d1022f0327fd7582e" translate="yes" xml:space="preserve">
          <source>If your program needs to support many languages at the same time, you may want to create multiple translation instances and then switch between them explicitly, like so:</source>
          <target state="translated">如果您的程序需要同时支持多种语言,您可能希望创建多个翻译实例,然后在它们之间显式切换,像这样。</target>
        </trans-unit>
        <trans-unit id="93490801dea0da95308cb5a5318fbdcbabcfcf7b" translate="yes" xml:space="preserve">
          <source>If your script does not have any syntax errors, try adding &lt;code&gt;import cgitb;
cgitb.enable()&lt;/code&gt; to the top of the script.</source>
          <target state="translated">如果您的脚本没有任何语法错误，请尝试添加 &lt;code&gt;import cgitb; cgitb.enable()&lt;/code&gt; 到脚本顶部。</target>
        </trans-unit>
        <trans-unit id="f31cb37df73b3125c3f57c9d809d3e1ed793e729" translate="yes" xml:space="preserve">
          <source>If your server supports the command, &lt;a href=&quot;#ftplib.FTP.mlsd&quot;&gt;&lt;code&gt;mlsd()&lt;/code&gt;&lt;/a&gt; offers a better API.</source>
          <target state="translated">如果您的服务器支持该命令，则&lt;a href=&quot;#ftplib.FTP.mlsd&quot;&gt; &lt;code&gt;mlsd()&lt;/code&gt; &lt;/a&gt;提供更好的API。</target>
        </trans-unit>
        <trans-unit id="cbbc5ab274a4717efc6cc381b10937fbe7d77265" translate="yes" xml:space="preserve">
          <source>If zero or more characters at the &lt;em&gt;beginning&lt;/em&gt; of &lt;em&gt;string&lt;/em&gt; match this regular expression, return a corresponding &lt;a href=&quot;#match-objects&quot;&gt;match object&lt;/a&gt;. Return &lt;code&gt;None&lt;/code&gt; if the string does not match the pattern; note that this is different from a zero-length match.</source>
          <target state="translated">如果&lt;em&gt;字符串&lt;/em&gt;&lt;em&gt;开头&lt;/em&gt;的零个或多个字符与此正则表达式匹配，则返回相应的&lt;a href=&quot;#match-objects&quot;&gt;match对象&lt;/a&gt;。如果字符串与模式不匹配，则返回 &lt;code&gt;None&lt;/code&gt; ;否则返回false。请注意，这与零长度匹配不同。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b4350db35f3b9bbabeaa05f2baf19f9fc617cb2" translate="yes" xml:space="preserve">
          <source>If zero or more characters at the beginning of &lt;em&gt;string&lt;/em&gt; match the regular expression &lt;em&gt;pattern&lt;/em&gt;, return a corresponding &lt;a href=&quot;#match-objects&quot;&gt;match object&lt;/a&gt;. Return &lt;code&gt;None&lt;/code&gt; if the string does not match the pattern; note that this is different from a zero-length match.</source>
          <target state="translated">如果&lt;em&gt;字符串&lt;/em&gt;开头的零个或多个字符与正则表达式&lt;em&gt;模式&lt;/em&gt;匹配，则返回相应的&lt;a href=&quot;#match-objects&quot;&gt;匹配对象&lt;/a&gt;。如果字符串与模式不匹配，则返回 &lt;code&gt;None&lt;/code&gt; ;否则返回false。请注意，这与零长度匹配不同。</target>
        </trans-unit>
        <trans-unit id="092f14f1f8cb7d25b3e6d70dcd0a46d04a6819c6" translate="yes" xml:space="preserve">
          <source>If, that is, we ignore the effects of Relativity</source>
          <target state="translated">如果,也就是说,我们忽略了相对论的影响</target>
        </trans-unit>
        <trans-unit id="2fa5b809a29b75e222e19a786786494e855b9b8b" translate="yes" xml:space="preserve">
          <source>If, when coding a module for general use, you need a locale independent version of an operation that is affected by the locale (such as certain formats used with &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt;), you will have to find a way to do it without using the standard library routine. Even better is convincing yourself that using locale settings is okay. Only as a last resort should you document that your module is not compatible with non-&lt;code&gt;C&lt;/code&gt; locale settings.</source>
          <target state="translated">如果在编写通用模块的代码时，需要一个受语言环境影响的独立于语言环境的版本（例如，与&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;一起使用的某些格式），那么您将必须找到一种方法来避免这种情况使用标准库例程。更令人信服的是，您可以使用语言环境设置。仅在万不得已的情况下，才应证明您的模块与非 &lt;code&gt;C&lt;/code&gt; 语言环境设置不兼容。</target>
        </trans-unit>
        <trans-unit id="9964433f6a0266bdf9fa6725a19e41fef8b37330" translate="yes" xml:space="preserve">
          <source>If/how &lt;em&gt;atTime&lt;/em&gt; is used</source>
          <target state="translated">如果/如何&lt;em&gt;atTime&lt;/em&gt;使用</target>
        </trans-unit>
        <trans-unit id="1c210c82683143a51cb6e3ad028c9f8883a010ad" translate="yes" xml:space="preserve">
          <source>Ignore all modules and packages in the named directory and subdirectories. The argument can be a list of directories separated by &lt;a href=&quot;os#os.pathsep&quot;&gt;&lt;code&gt;os.pathsep&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">忽略命名目录和子目录中的所有模块和软件包。该参数可以是由&lt;a href=&quot;os#os.pathsep&quot;&gt; &lt;code&gt;os.pathsep&lt;/code&gt; &lt;/a&gt;分隔的目录的列表。</target>
        </trans-unit>
        <trans-unit id="1fce84b920d19c50aa58d91da2a36c60b8c2de65" translate="yes" xml:space="preserve">
          <source>Ignore cookies in Set-Cookie: headers that have names starting with &lt;code&gt;'$'&lt;/code&gt;.</source>
          <target state="translated">忽略名称以 &lt;code&gt;'$'&lt;/code&gt; 开头的Set-Cookie：头中的cookie 。</target>
        </trans-unit>
        <trans-unit id="c2855bf1eb59ace3c404c75993cf42a4581a04c3" translate="yes" xml:space="preserve">
          <source>Ignore each of the given module names and its submodules (if it is a package). The argument can be a list of names separated by a comma.</source>
          <target state="translated">忽略每一个给定的模块名和它的子模块(如果它是一个包)。参数可以是一个用逗号分隔的名称列表。</target>
        </trans-unit>
        <trans-unit id="d22e72dfca7f1eccbdaea639b681b1107c6155b3" translate="yes" xml:space="preserve">
          <source>Ignore symlinks pointing outside the given directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930fbf8a76be290144b9247e218920a109183ddb" translate="yes" xml:space="preserve">
          <source>Ignore the malformed data and continue without further notice. Implemented in &lt;a href=&quot;#codecs.ignore_errors&quot;&gt;&lt;code&gt;ignore_errors()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">忽略格式错误的数据，继续进行操作，恕不另行通知。在&lt;a href=&quot;#codecs.ignore_errors&quot;&gt; &lt;code&gt;ignore_errors()&lt;/code&gt; 中实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78fee1435d74666b84850cd5e82c18229351da5d" translate="yes" xml:space="preserve">
          <source>Ignored</source>
          <target state="translated">Ignored</target>
        </trans-unit>
        <trans-unit id="b30440d1e9dd87dae90b9f8d3aaae5ca500551e0" translate="yes" xml:space="preserve">
          <source>Ignored by the default warning filters, except in the &lt;code&gt;__main__&lt;/code&gt; module (&lt;a href=&quot;https://www.python.org/dev/peps/pep-0565&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;PEP 565&lt;/strong&gt;&lt;/a&gt;). Enabling the &lt;a href=&quot;devmode#devmode&quot;&gt;Python Development Mode&lt;/a&gt; shows this warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a51ffc3d539875d40be96f2779ae79c4c16a61" translate="yes" xml:space="preserve">
          <source>Ignored by the default warning filters. Enabling the &lt;a href=&quot;devmode#devmode&quot;&gt;Python Development Mode&lt;/a&gt; shows this warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e65bb4eca2d3c71529c96890a4b735eb7dafeac" translate="yes" xml:space="preserve">
          <source>Ignored.</source>
          <target state="translated">Ignored.</target>
        </trans-unit>
        <trans-unit id="b90e620c5d88940bfdd404823e410652bfa5a956" translate="yes" xml:space="preserve">
          <source>Ignoring the timeout feature, calling this method is roughly equivalent to writing:</source>
          <target state="translated">忽略超时功能,调用这个方法大致相当于写。</target>
        </trans-unit>
        <trans-unit id="e769494ea641bd01735c8978b12dae80bc631fc2" translate="yes" xml:space="preserve">
          <source>Illegal byte sequence</source>
          <target state="translated">不合法的字节序列</target>
        </trans-unit>
        <trans-unit id="50fbe4bdce881188b73937ba1a6e17e22e879c8e" translate="yes" xml:space="preserve">
          <source>Illegal instruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3176fdb344f7026fb9cd9da003d83547cd35fc12" translate="yes" xml:space="preserve">
          <source>Illegal seek</source>
          <target state="translated">非法寻衅滋事</target>
        </trans-unit>
        <trans-unit id="e221fe5a3e6f4ff124e28b73d70e7afa9ab3f313" translate="yes" xml:space="preserve">
          <source>Image Types</source>
          <target state="translated">图像类型</target>
        </trans-unit>
        <trans-unit id="c177d6ae70be09c0df8491f4bb934a1ebcbac143" translate="yes" xml:space="preserve">
          <source>Image format</source>
          <target state="translated">图像格式</target>
        </trans-unit>
        <trans-unit id="42de00097c89c82d17336b2d87ec32e4f21480ff" translate="yes" xml:space="preserve">
          <source>Image shapes &lt;em&gt;do not&lt;/em&gt; rotate when turning the turtle, so they do not display the heading of the turtle!</source>
          <target state="translated">转动乌龟时图像形状&lt;em&gt;不会&lt;/em&gt;旋转，因此它们不会显示乌龟的标题！</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="70b3cbc7767df833fa045e36e82910b275002110" translate="yes" xml:space="preserve">
          <source>Images of different formats can be created through the corresponding subclass of &lt;code&gt;tkinter.Image&lt;/code&gt;:</source>
          <target state="translated">可以通过 &lt;code&gt;tkinter.Image&lt;/code&gt; 的相应子类创建不同格式的图像：</target>
        </trans-unit>
        <trans-unit id="a13a369729af2332fed8dda8e39f614910984143" translate="yes" xml:space="preserve">
          <source>Imagine a robotic turtle starting at (0, 0) in the x-y plane. After an &lt;code&gt;import turtle&lt;/code&gt;, give it the command &lt;code&gt;turtle.forward(15)&lt;/code&gt;, and it moves (on-screen!) 15 pixels in the direction it is facing, drawing a line as it moves. Give it the command &lt;code&gt;turtle.right(25)&lt;/code&gt;, and it rotates in-place 25 degrees clockwise.</source>
          <target state="translated">想象一下在xy平面中从（0，0）开始的机器乌龟。一个后 &lt;code&gt;import turtle&lt;/code&gt; ，给它的命令 &lt;code&gt;turtle.forward(15)&lt;/code&gt; ，并将其移动（屏幕！）在方向15个像素它正面临，画线随着其移动。给它命令 &lt;code&gt;turtle.right(25)&lt;/code&gt; ，它顺时针旋转25度。</target>
        </trans-unit>
        <trans-unit id="687db08c82f3ad0c17cb55a8e0f53abf69ca4195" translate="yes" xml:space="preserve">
          <source>Imagine we have a project that we want to test with the following structure:</source>
          <target state="translated">想象一下,我们有一个项目,我们想用以下结构进行测试。</target>
        </trans-unit>
        <trans-unit id="40c36dcfc5b7dc5aaaaa183a438e2f62f6e25008" translate="yes" xml:space="preserve">
          <source>Immediately stop playing or recording and return the device to a state where it can accept commands. The OSS documentation recommends closing and re-opening the device after calling &lt;a href=&quot;#ossaudiodev.oss_audio_device.reset&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">立即停止播放或录制，并将设备返回到可以接受命令的状态。OSS文档建议在调用&lt;a href=&quot;#ossaudiodev.oss_audio_device.reset&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;之后关闭并重新打开设备。</target>
        </trans-unit>
        <trans-unit id="80cb7526f8f17d0e625c37d38a71d1b8b176c45b" translate="yes" xml:space="preserve">
          <source>Immediately unwinds the callback stack, invoking callbacks in the reverse order of registration. For any context managers and exit callbacks registered, the arguments passed in will indicate that no exception occurred.</source>
          <target state="translated">立即释放回调堆栈,按照注册的相反顺序调用回调。对于任何已注册的上下文管理器和退出回调,传递进来的参数将表明没有发生异常。</target>
        </trans-unit>
        <trans-unit id="42e8811b32cc14bd73ca1c7cf254e434ca1c4be2" translate="yes" xml:space="preserve">
          <source>Immutable Sequence Types</source>
          <target state="translated">不可更改的序列类型</target>
        </trans-unit>
        <trans-unit id="7d364b632538803974da1c9485bc7401ef2fd2eb" translate="yes" xml:space="preserve">
          <source>Implement &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">实施&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;协议。</target>
        </trans-unit>
        <trans-unit id="876c8f17da52cca0c2c72876d566383804f060a0" translate="yes" xml:space="preserve">
          <source>Implement &lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3490&lt;/strong&gt;&lt;/a&gt;, see also &lt;a href=&quot;#module-encodings.idna&quot;&gt;&lt;code&gt;encodings.idna&lt;/code&gt;&lt;/a&gt;. Only &lt;code&gt;errors='strict'&lt;/code&gt; is supported.</source>
          <target state="translated">实施&lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3490&lt;/strong&gt;&lt;/a&gt;，另请参见&lt;a href=&quot;#module-encodings.idna&quot;&gt; &lt;code&gt;encodings.idna&lt;/code&gt; &lt;/a&gt;。仅支持 &lt;code&gt;errors='strict'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4dbe2ee30f05a84b86d098b6ad21ef61bde254e0" translate="yes" xml:space="preserve">
          <source>Implement &lt;a href=&quot;https://tools.ietf.org/html/rfc3492.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 3492&lt;/strong&gt;&lt;/a&gt;. Stateful codecs are not supported.</source>
          <target state="translated">实施&lt;a href=&quot;https://tools.ietf.org/html/rfc3492.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 3492&lt;/strong&gt;&lt;/a&gt;。不支持有状态编解码器。</target>
        </trans-unit>
        <trans-unit id="cb9ce8751f48a6114c443a4bb2aac9cb2915809a" translate="yes" xml:space="preserve">
          <source>Implement Netscape protocol.</source>
          <target state="translated">执行网景协议。</target>
        </trans-unit>
        <trans-unit id="1ed133685773097940d3cf663208ebc50eb17709" translate="yes" xml:space="preserve">
          <source>Implement checking for unused arguments if desired. The arguments to this function is the set of all argument keys that were actually referred to in the format string (integers for positional arguments, and strings for named arguments), and a reference to the &lt;em&gt;args&lt;/em&gt; and &lt;em&gt;kwargs&lt;/em&gt; that was passed to vformat. The set of unused args can be calculated from these parameters. &lt;a href=&quot;#string.Formatter.check_unused_args&quot;&gt;&lt;code&gt;check_unused_args()&lt;/code&gt;&lt;/a&gt; is assumed to raise an exception if the check fails.</source>
          <target state="translated">如果需要，实现检查未使用的参数。该函数的参数是在格式字符串中实际引用的所有参数键的集合（位置参数为整数，命名参数为字符串），以及对传递给vformat 的&lt;em&gt;args&lt;/em&gt;和&lt;em&gt;kwargs的&lt;/em&gt;引用。可以从这些参数中计算出未使用的参数集。如果检查失败，则假设&lt;a href=&quot;#string.Formatter.check_unused_args&quot;&gt; &lt;code&gt;check_unused_args()&lt;/code&gt; &lt;/a&gt;引发异常。</target>
        </trans-unit>
        <trans-unit id="fd8c27461faf491446b966e22536bdd5517a900e" translate="yes" xml:space="preserve">
          <source>Implement this method in a subclass such that it returns a serializable object for &lt;em&gt;o&lt;/em&gt;, or calls the base implementation (to raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在子类中实现此方法，以使其返回&lt;em&gt;o&lt;/em&gt;的可序列化对象，或调用基本实现（引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6372052045f8af6340009762eb4a097bf006bc91" translate="yes" xml:space="preserve">
          <source>Implementation Limitations</source>
          <target state="translated">实施限制</target>
        </trans-unit>
        <trans-unit id="a928eb642e8d69164143d07e134772861cb6056c" translate="yes" xml:space="preserve">
          <source>Implementation note: Some of the mixin methods, such as &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__reversed__&quot;&gt;&lt;code&gt;__reversed__()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;index()&lt;/code&gt;, make repeated calls to the underlying &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method. Consequently, if &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; is implemented with constant access speed, the mixin methods will have linear performance; however, if the underlying method is linear (as it would be with a linked list), the mixins will have quadratic performance and will likely need to be overridden.</source>
          <target state="translated">实施说明：一些混合方法，例如&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__iter__&quot;&gt; &lt;code&gt;__iter__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__reversed__&quot;&gt; &lt;code&gt;__reversed__()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;index()&lt;/code&gt; ，对底层的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;方法进行了重复调用。因此，如果以恒定的访问速度实现&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;，则mixin方法将具有线性性能；但是，如果基础方法是线性的（如链表那样），则混合将具有二次性能，并且可能需要重写。</target>
        </trans-unit>
        <trans-unit id="8cbceb2272fc90a9136eaf0b5779494a174c66fa" translate="yes" xml:space="preserve">
          <source>Implementation note: Some of the mixin methods, such as &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__iter__&quot;&gt;&lt;code&gt;__iter__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__reversed__&quot;&gt;&lt;code&gt;__reversed__()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;index()&lt;/code&gt;, make repeated calls to the underlying &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method. Consequently, if &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; is implemented with constant access speed, the mixin methods will have linear performance; however, if the underlying method is linear (as it would be with a linked list), the mixins will have quadratic performance and will likely need to be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602e467a96a4864b3e865c151d6768f89e1f6c9a" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;#importlib.abc.Loader.exec_module&quot;&gt;&lt;code&gt;Loader.exec_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">实施&lt;a href=&quot;#importlib.abc.Loader.exec_module&quot;&gt; &lt;code&gt;Loader.exec_module()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b24035207ed54bd400485a1684e18bf3533d78a" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt;&lt;code&gt;Loader.load_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">实施&lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt; &lt;code&gt;Loader.load_module()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20977e3c93bce44f3af2c831893e3343efa9bf7c" translate="yes" xml:space="preserve">
          <source>Implementations of &lt;code&gt;process_message&lt;/code&gt; should use the &lt;code&gt;**kwargs&lt;/code&gt; signature to accept arbitrary keyword arguments, since future feature enhancements may add keys to the kwargs dictionary.</source>
          <target state="translated">&lt;code&gt;process_message&lt;/code&gt; 的实现应使用 &lt;code&gt;**kwargs&lt;/code&gt; 签名接受任意关键字参数，因为将来的功能增强可能会向kwargs字典添加键。</target>
        </trans-unit>
        <trans-unit id="1d8b1b41137285f8c4de39c176a278d9f49ddf2e" translate="yes" xml:space="preserve">
          <source>Implementing the arithmetic operations</source>
          <target state="translated">实现算术运算</target>
        </trans-unit>
        <trans-unit id="ca6c4d83cb31522562758f2caae6de20eb026979" translate="yes" xml:space="preserve">
          <source>Implementors should be careful to make equal numbers equal and hash them to the same values. This may be subtle if there are two different extensions of the real numbers. For example, &lt;a href=&quot;fractions#fractions.Fraction&quot;&gt;&lt;code&gt;fractions.Fraction&lt;/code&gt;&lt;/a&gt; implements &lt;a href=&quot;functions#hash&quot;&gt;&lt;code&gt;hash()&lt;/code&gt;&lt;/a&gt; as follows:</source>
          <target state="translated">实现者应注意使相等的数字相等，并将它们散列为相同的值。如果实数有两个不同的扩展名，这可能是微妙的。例如，&lt;a href=&quot;fractions#fractions.Fraction&quot;&gt; &lt;code&gt;fractions.Fraction&lt;/code&gt; &lt;/a&gt;如下实现&lt;a href=&quot;functions#hash&quot;&gt; &lt;code&gt;hash()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d903524c1ea6aa12c931b0a6c641b3778b3888a8" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;PUSH(get_awaitable(TOS.__anext__()))&lt;/code&gt;. See &lt;code&gt;GET_AWAITABLE&lt;/code&gt; for details about &lt;code&gt;get_awaitable&lt;/code&gt;</source>
          <target state="translated">实现 &lt;code&gt;PUSH(get_awaitable(TOS.__anext__()))&lt;/code&gt; 。有关 &lt;code&gt;GET_AWAITABLE&lt;/code&gt; 的详细信息，请参见 &lt;code&gt;get_awaitable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3cb421f905057ea14812c7d7b55740f7dcb3aa14" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = +TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = +TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f8030dd288cf838d962bc81cf0b1e710e59dab6" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = -TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = -TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23caf167f55ab86f7acf8ef10a08029547ccae56" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS.__aiter__()&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS.__aiter__()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6804ffbe6ca6db0446550f606e8c3b827c72019d" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 % TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 % TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ccd836db2748a42cdb6568840d6b34ab7680997" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 &amp;amp; TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 &amp;amp; TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98b212dadbaf80fff0c651d73234d968ff6d57ff" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 &amp;gt;&amp;gt; TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 &amp;gt;&amp;gt; TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a92a967387ba75f1c824f8c282c1b389323c1c12" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 &amp;lt;&amp;lt; TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 &amp;lt;&amp;lt; TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe06b1264a086dd70cc373eb95043d5b61c0bdec" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 * TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 * TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7727e8610b32769f888b796569df51894a6e1a4" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 ** TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 ** TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a68a686d5d97ef25da29ba50188cfe812c2b160c" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 + TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 + TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b7f98171174dff07ba4794fcfc188a2b547babd" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 - TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 - TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e03d1b043f5b83ce06f326b9be67568ba2593f09" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 / TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 / TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54632e771c9265cca4e71a87f0788919f6c1a468" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 // TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 // TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4ff4094536277707470df447fbf4ac881111c43" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 @ TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 @ TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70062ec736c872ff9695663f40f72ab315ef9ddf" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 ^ TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 ^ TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed9a0b5ebb7afed19c96ac5e2a783c31cb5f2376" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1 | TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1 | TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a435cd9e0a8ca34e1604fda39f5b0f09b410d773" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = TOS1[TOS]&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = TOS1[TOS]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a55222ca989584dee87037902ae61c754d1433ea" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = get_awaitable(TOS)&lt;/code&gt;, where &lt;code&gt;get_awaitable(o)&lt;/code&gt; returns &lt;code&gt;o&lt;/code&gt; if &lt;code&gt;o&lt;/code&gt; is a coroutine object or a generator object with the CO_ITERABLE_COROUTINE flag, or resolves &lt;code&gt;o.__await__&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = get_awaitable(TOS)&lt;/code&gt; ，如果 &lt;code&gt;o&lt;/code&gt; 是协程对象或带有CO_ITERABLE_COROUTINE标志的生成器对象，则get_awaitable &lt;code&gt;get_awaitable(o)&lt;/code&gt; 返回 &lt;code&gt;o&lt;/code&gt; ，或者解析 &lt;code&gt;o.__await__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e24956a48bbfdcc09d0cf754f3dad5634e36ef6" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = iter(TOS)&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = iter(TOS)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7127e3da317dbd834e1c9fa4d150709b0595c38c" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = not TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = not TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6aefd62fa0df0b5ae152afef20eb6a2be7bc7fe1" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS = ~TOS&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS = ~TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f729d424456b44dfd8d226e0748fec98a45f659" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS.name = TOS1&lt;/code&gt;, where &lt;em&gt;namei&lt;/em&gt; is the index of name in &lt;code&gt;co_names&lt;/code&gt;.</source>
          <target state="translated">器具 &lt;code&gt;TOS.name = TOS1&lt;/code&gt; ，其中&lt;em&gt;对虾&lt;/em&gt;是名称的索引 &lt;code&gt;co_names&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7674022864a24bfc63ce8ce10c8db53e65eff9f" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;TOS1[TOS] = TOS2&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;TOS1[TOS] = TOS2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47c788dc833478a625bb744ec09e58aea9fc10d4" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;del TOS.name&lt;/code&gt;, using &lt;em&gt;namei&lt;/em&gt; as index into &lt;code&gt;co_names&lt;/code&gt;.</source>
          <target state="translated">器具 &lt;code&gt;del TOS.name&lt;/code&gt; ，用&lt;em&gt;那枚&lt;/em&gt;作为索引 &lt;code&gt;co_names&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab97a7e60a0b065d453ed23af196b35ed6d71cfd" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;del TOS1[TOS]&lt;/code&gt;.</source>
          <target state="translated">实现 &lt;code&gt;del TOS1[TOS]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6cb3ef10de23ff06b085fdd4bd8df8cca8edb2e" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;del name&lt;/code&gt;, where &lt;em&gt;namei&lt;/em&gt; is the index into &lt;code&gt;co_names&lt;/code&gt; attribute of the code object.</source>
          <target state="translated">实现 &lt;code&gt;del name&lt;/code&gt; ，其中&lt;em&gt;namei&lt;/em&gt;是代码对象的 &lt;code&gt;co_names&lt;/code&gt; 属性的索引。</target>
        </trans-unit>
        <trans-unit id="0e9bf63b19593d04613e29b26ddb368205c21880" translate="yes" xml:space="preserve">
          <source>Implements &lt;code&gt;name = TOS&lt;/code&gt;. &lt;em&gt;namei&lt;/em&gt; is the index of &lt;em&gt;name&lt;/em&gt; in the attribute &lt;code&gt;co_names&lt;/code&gt; of the code object. The compiler tries to use &lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#opcode-STORE_GLOBAL&quot;&gt;&lt;code&gt;STORE_GLOBAL&lt;/code&gt;&lt;/a&gt; if possible.</source>
          <target state="translated">实现 &lt;code&gt;name = TOS&lt;/code&gt; 。&lt;em&gt;namei&lt;/em&gt;是代码对象的属性 &lt;code&gt;co_names&lt;/code&gt; 中的&lt;em&gt;名称&lt;/em&gt;索引。如果可能，编译器将尝试使用&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#opcode-STORE_GLOBAL&quot;&gt; &lt;code&gt;STORE_GLOBAL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3bb12d25ddb30f12352643b960eb58634dcff262" translate="yes" xml:space="preserve">
          <source>Implements a mutex lock for asyncio tasks. Not thread-safe.</source>
          <target state="translated">为asyncio任务实现一个mutex锁。不是线程安全的。</target>
        </trans-unit>
        <trans-unit id="f127d7511ab821d90fc0d9e0415de725710e1c0e" translate="yes" xml:space="preserve">
          <source>Implements assignment with a starred target: Unpacks an iterable in TOS into individual values, where the total number of values can be smaller than the number of items in the iterable: one of the new values will be a list of all leftover items.</source>
          <target state="translated">实施带有星标的赋值。将TOS中的一个迭代项解包为单个值,值的总数可以小于迭代项中的项目数:其中一个新值将是所有剩余项目的清单。</target>
        </trans-unit>
        <trans-unit id="ad8c71c60917e28ec70cc6e72ac5aba785cd2533" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 % TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 % TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34a2e00a28f9e41709e5a409debe9f70047ccfa5" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 &amp;amp; TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 &amp;amp; TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58c41048e48b098a8662937aa13eba0fb458de61" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 &amp;gt;&amp;gt; TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 &amp;gt;&amp;gt; TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa04e754a31d6027a7f4daa4b4fdd702965038b1" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 &amp;lt;&amp;lt; TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 &amp;lt;&amp;lt; TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ee8bdd10bfb59d1de1b7233652a10a6aebf648c" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 * TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 * TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="239c416c5552e24e40b0c3f5a8da8834a4549b9c" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 ** TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 ** TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b92e466e855a22dcee87a299d9f506bd0bd45e91" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 + TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 + TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4a87fbd97f23bdda16b8cf5fe0fe1fd3bb5bef6" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 - TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 - TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b26e08c65cff3d8460f7b64f132529ac3dc22be" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 / TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 / TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44d86e1dd26553b877ecf8c640b2c2b6832071f1" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 // TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 // TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b416ab2beeb3c3d6516c059eeb07d58936d0e6df" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 @ TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 @ TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9962e5508639fbb25594a1f43d3b5f76b2afc27" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 ^ TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 ^ TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3896caff55805b902dd285f3c899f9096710e046" translate="yes" xml:space="preserve">
          <source>Implements in-place &lt;code&gt;TOS = TOS1 | TOS&lt;/code&gt;.</source>
          <target state="translated">实现就地 &lt;code&gt;TOS = TOS1 | TOS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85bad2fb59570e2a5eef60329848ed4622403300" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;'backslashreplace'&lt;/code&gt; error handling (for &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt; only): malformed data is replaced by a backslashed escape sequence.</source>
          <target state="translated">实现 &lt;code&gt;'backslashreplace'&lt;/code&gt; 替换&amp;rdquo;错误处理（仅适用于&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;）：格式错误的数据将由反斜杠转义序列替换。</target>
        </trans-unit>
        <trans-unit id="3972f7d57316db3c0510f582bfb45840e982174e" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;'backslashreplace'&lt;/code&gt; error handling (for &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt; only): malformed data is replaced by a backslashed escape sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c10a6bbb7422a691823579f3081bab9b0e71d9" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;'ignore'&lt;/code&gt; error handling: malformed data is ignored and encoding or decoding is continued without further notice.</source>
          <target state="translated">实现 &lt;code&gt;'ignore'&lt;/code&gt; 错误处理：格式错误的数据将被忽略，编码或解码将继续进行，恕不另行通知。</target>
        </trans-unit>
        <trans-unit id="c7d23f24683ac08882aaa07d91874ed6ef4c6dd2" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;'namereplace'&lt;/code&gt; error handling (for encoding with &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt; only): the unencodable character is replaced by a &lt;code&gt;\N{...}&lt;/code&gt; escape sequence.</source>
          <target state="translated">实现 &lt;code&gt;'namereplace'&lt;/code&gt; 错误处理（仅适用于&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;）：无法编码的字符由 &lt;code&gt;\N{...}&lt;/code&gt; 转义序列代替。</target>
        </trans-unit>
        <trans-unit id="146edfb679a3a850e62b2106533b0b8a80465bec" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;'namereplace'&lt;/code&gt; error handling (for encoding with &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt; only): the unencodable character is replaced by a &lt;code&gt;\N{...}&lt;/code&gt; escape sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663edbb12a782a964e38e6f015a8ae61e59c5cb6" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;'replace'&lt;/code&gt; error handling (for &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt; only): substitutes &lt;code&gt;'?'&lt;/code&gt; for encoding errors (to be encoded by the codec), and &lt;code&gt;'\ufffd'&lt;/code&gt; (the Unicode replacement character) for decoding errors.</source>
          <target state="translated">实现 &lt;code&gt;'replace'&lt;/code&gt; 错误处理（仅适用于&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;）：替换 &lt;code&gt;'?'&lt;/code&gt; 表示编码错误（由编解码器编码）， &lt;code&gt;'\ufffd'&lt;/code&gt; （Unicode替换字符）表示解码错误。</target>
        </trans-unit>
        <trans-unit id="ecc4389e49af9fb077022493ee402ac0f38b7c02" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;'replace'&lt;/code&gt; error handling (for &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt; only): substitutes &lt;code&gt;'?'&lt;/code&gt; for encoding errors (to be encoded by the codec), and &lt;code&gt;'\ufffd'&lt;/code&gt; (the Unicode replacement character) for decoding errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a478a6a191e85196bdcece7d24cdbeb8b90bb3e4" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;'strict'&lt;/code&gt; error handling: each encoding or decoding error raises a &lt;a href=&quot;exceptions#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">实现 &lt;code&gt;'strict'&lt;/code&gt; 错误处理：每个编码或解码错误都会引发&lt;a href=&quot;exceptions#UnicodeError&quot;&gt; &lt;code&gt;UnicodeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45e09434edbbb004dd6529a8c664f47c18ec9c8a" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;'xmlcharrefreplace'&lt;/code&gt; error handling (for encoding with &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt; only): the unencodable character is replaced by an appropriate XML character reference.</source>
          <target state="translated">实现 &lt;code&gt;'xmlcharrefreplace'&lt;/code&gt; 错误处理（仅适用于&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;）：无法编码的字符替换为适当的XML字符引用。</target>
        </trans-unit>
        <trans-unit id="1fa3a0d7eb90310b93b3485af23ace408575d97f" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;'xmlcharrefreplace'&lt;/code&gt; error handling (for encoding with &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt; only): the unencodable character is replaced by an appropriate XML character reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4589678f737340f266ad3c03c880cd6693ba765b" translate="yes" xml:space="preserve">
          <source>Implements the expression statement for the interactive mode. TOS is removed from the stack and printed. In non-interactive mode, an expression statement is terminated with &lt;a href=&quot;#opcode-POP_TOP&quot;&gt;&lt;code&gt;POP_TOP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为交互模式实现表达式语句。从堆栈中删除TOS并进行打印。在非交互模式下，表达式语句以&lt;a href=&quot;#opcode-POP_TOP&quot;&gt; &lt;code&gt;POP_TOP&lt;/code&gt; &lt;/a&gt;终止。</target>
        </trans-unit>
        <trans-unit id="431d2662e4cf482dbbd51ee873a2bf4d4dbe506a" translate="yes" xml:space="preserve">
          <source>Implements the standard rules for accepting and returning cookies.</source>
          <target state="translated">执行接受和返回cookies的标准规则。</target>
        </trans-unit>
        <trans-unit id="357be719dc69e352146cd9351979e2f88b18aa53" translate="yes" xml:space="preserve">
          <source>Implicit namespace packages</source>
          <target state="translated">隐式命名空间包</target>
        </trans-unit>
        <trans-unit id="3d1027d5bfea0f5b907c45a2719ba20af2951bac" translate="yes" xml:space="preserve">
          <source>Implicitly via the declared type</source>
          <target state="translated">通过声明的类型隐式</target>
        </trans-unit>
        <trans-unit id="87b9fc3f346510b76b17999f7a146e2b1534c297" translate="yes" xml:space="preserve">
          <source>Implied by a read event on a listening socket</source>
          <target state="translated">由监听套接字上的读取事件所隐含</target>
        </trans-unit>
        <trans-unit id="4698e1d5e35f008f6196e32547364bf825c475dc" translate="yes" xml:space="preserve">
          <source>Implied by a read event with no data available</source>
          <target state="translated">由无数据的读取事件暗示。</target>
        </trans-unit>
        <trans-unit id="21611d57f0838ec535115caab52079c6fc745f43" translate="yes" xml:space="preserve">
          <source>Implied by the first read or write event</source>
          <target state="translated">由第一次读或写事件暗示</target>
        </trans-unit>
        <trans-unit id="da96b428d292acbbe72df9e50d4e769cb28b7b27" translate="yes" xml:space="preserve">
          <source>Import &lt;em&gt;module&lt;/em&gt; if necessary and return the object called &lt;em&gt;name&lt;/em&gt; from it, where the &lt;em&gt;module&lt;/em&gt; and &lt;em&gt;name&lt;/em&gt; arguments are &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects. Note, unlike its name suggests, &lt;a href=&quot;#pickle.Unpickler.find_class&quot;&gt;&lt;code&gt;find_class()&lt;/code&gt;&lt;/a&gt; is also used for finding functions.</source>
          <target state="translated">如有必要，导入&lt;em&gt;模块&lt;/em&gt;并从中返回名为&lt;em&gt;name&lt;/em&gt;的对象，其中&lt;em&gt;module&lt;/em&gt;和&lt;em&gt;name&lt;/em&gt;参数是&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;对象。注意，与其名称暗示的一样，&lt;a href=&quot;#pickle.Unpickler.find_class&quot;&gt; &lt;code&gt;find_class()&lt;/code&gt; &lt;/a&gt;也用于查找函数。</target>
        </trans-unit>
        <trans-unit id="b52818d6d21a3617010654286ad1530ac0e14b13" translate="yes" xml:space="preserve">
          <source>Import a module. The &lt;em&gt;name&lt;/em&gt; argument specifies what module to import in absolute or relative terms (e.g. either &lt;code&gt;pkg.mod&lt;/code&gt; or &lt;code&gt;..mod&lt;/code&gt;). If the name is specified in relative terms, then the &lt;em&gt;package&lt;/em&gt; argument must be set to the name of the package which is to act as the anchor for resolving the package name (e.g. &lt;code&gt;import_module('..mod', 'pkg.subpkg')&lt;/code&gt; will import &lt;code&gt;pkg.mod&lt;/code&gt;).</source>
          <target state="translated">导入模块。该&lt;em&gt;名&lt;/em&gt;参数指定哪些模块在绝对或相对而言进口（例如，无论是 &lt;code&gt;pkg.mod&lt;/code&gt; 或 &lt;code&gt;..mod&lt;/code&gt; ）。如果使用相对术语指定名称，则必须将&lt;em&gt;package&lt;/em&gt;参数设置为充当解析包名称的锚点的包的名称（例如 &lt;code&gt;import_module('..mod', 'pkg.subpkg')&lt;/code&gt; 将导入 &lt;code&gt;pkg.mod&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="509eb07f39761a76413d728e8002d91cab5669f9" translate="yes" xml:space="preserve">
          <source>Import as few modules as possible and do it as soon as possible. This minimizes external dependencies of tests and also minimizes possible anomalous behavior from side-effects of importing a module.</source>
          <target state="translated">尽可能少地导入模块,并尽快导入。这样可以最大限度地减少测试的外部依赖性,也可以最大限度地减少导入模块的副作用可能带来的异常行为。</target>
        </trans-unit>
        <trans-unit id="ebf453241874ae9140f1c4fba4572af23be16d96" translate="yes" xml:space="preserve">
          <source>Import itself is implemented in Python code, making it possible to expose most of the import machinery through importlib. The following helps illustrate the various APIs that importlib exposes by providing an approximate implementation of &lt;a href=&quot;#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt; (Python 3.4 and newer for the importlib usage, Python 3.6 and newer for other parts of the code).</source>
          <target state="translated">导入本身是用Python代码实现的，因此可以通过importlib公开大多数导入机制。以下内容通过提供&lt;a href=&quot;#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt;的近似实现（用于importlib的Python 3.4和更高版本，对于代码其他部分的Python 3.6和更高版本），来帮助说明importlib公开的各种API 。</target>
        </trans-unit>
        <trans-unit id="eb7d80557274b41c25be1de7f2b2a9c69daa9de1" translate="yes" xml:space="preserve">
          <source>Import on Case-Insensitive Platforms</source>
          <target state="translated">在不区分大小写的平台上导入。</target>
        </trans-unit>
        <trans-unit id="51a0d1e201d38ceab71bb750a252b512b10de5c2" translate="yes" xml:space="preserve">
          <source>Import resolution and custom importers</source>
          <target state="translated">进口决议和定制进口商</target>
        </trans-unit>
        <trans-unit id="b46dda0f3af0f364b45aca902f93a2030e1d6cf0" translate="yes" xml:space="preserve">
          <source>Import resolution, by default, uses the builtin &lt;a href=&quot;functions#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; function to do its importing. You may want to replace this with your own importing mechanism: if so, you can replace the &lt;code&gt;importer&lt;/code&gt; attribute of the &lt;code&gt;DictConfigurator&lt;/code&gt; or its superclass, the &lt;code&gt;BaseConfigurator&lt;/code&gt; class. However, you need to be careful because of the way functions are accessed from classes via descriptors. If you are using a Python callable to do your imports, and you want to define it at class level rather than instance level, you need to wrap it with &lt;a href=&quot;functions#staticmethod&quot;&gt;&lt;code&gt;staticmethod()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">默认情况下，导入解析使用内置的&lt;a href=&quot;functions#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;函数进行导入。您可能希望用自己的导入机制替换它：如果是这样，则可以替换 &lt;code&gt;DictConfigurator&lt;/code&gt; 或 &lt;code&gt;BaseConfigurator&lt;/code&gt; 类BaseConfigurator类的 &lt;code&gt;importer&lt;/code&gt; 属性。但是，由于需要通过描述符从类访问函数的方式，因此需要小心。如果您使用Python可调用函数进行导入，并且想在类级别而不是实例级别定义它，则需要使用&lt;a href=&quot;functions#staticmethod&quot;&gt; &lt;code&gt;staticmethod()&lt;/code&gt; &lt;/a&gt;包装它。例如：</target>
        </trans-unit>
        <trans-unit id="ed9b8c2261e65d838380f42dc0d920d3b56a2dfe" translate="yes" xml:space="preserve">
          <source>Import this class from the &lt;a href=&quot;#module-email.charset&quot;&gt;&lt;code&gt;email.charset&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">从&lt;a href=&quot;#module-email.charset&quot;&gt; &lt;code&gt;email.charset&lt;/code&gt; &lt;/a&gt;模块导入此类。</target>
        </trans-unit>
        <trans-unit id="361838ee748707501d1086cda1d546a0bca541ea" translate="yes" xml:space="preserve">
          <source>ImportError</source>
          <target state="translated">ImportError</target>
        </trans-unit>
        <trans-unit id="d88d4c76f774a45881449d93cfdd576af021e9ee" translate="yes" xml:space="preserve">
          <source>ImportWarning</source>
          <target state="translated">ImportWarning</target>
        </trans-unit>
        <trans-unit id="4b6d6a30150a506f9b79caf45da5aecb76b0018e" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="translated">Important</target>
        </trans-unit>
        <trans-unit id="90ab5ed3bb3e27748d586ad9b9b11e2ab9efaaf8" translate="yes" xml:space="preserve">
          <source>Importing</source>
          <target state="translated">Importing</target>
        </trans-unit>
        <trans-unit id="fe0f554fef6d8bbe2bada744a7a99611cdfdc416" translate="yes" xml:space="preserve">
          <source>Importing Modules</source>
          <target state="translated">导入模块</target>
        </trans-unit>
        <trans-unit id="7d7d20fec55d874b61e9a23d4848e2fe11f9ac1d" translate="yes" xml:space="preserve">
          <source>Importing a source file directly</source>
          <target state="translated">直接导入源文件</target>
        </trans-unit>
        <trans-unit id="c638d5fe75ce243c593fb88053ccdfc251f4221c" translate="yes" xml:space="preserve">
          <source>Importing programmatically</source>
          <target state="translated">程序化导入</target>
        </trans-unit>
        <trans-unit id="da4b6fd661f8f0ff59c6e77bf0660d2518b7404d" translate="yes" xml:space="preserve">
          <source>Importing the main class:</source>
          <target state="translated">导入主类。</target>
        </trans-unit>
        <trans-unit id="1ab6816ef80ddd057eefbe256b51f340873b1f96" translate="yes" xml:space="preserve">
          <source>Importing this module will append site-specific paths to the module search path and add a few builtins, unless &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; was used. In that case, this module can be safely imported with no automatic modifications to the module search path or additions to the builtins. To explicitly trigger the usual site-specific additions, call the &lt;a href=&quot;#site.main&quot;&gt;&lt;code&gt;site.main()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">除非使用&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;，否则导入此模块会将站点特定的路径附加到模块搜索路径并添加一些内置函数。在这种情况下，可以安全地导入该模块，而无需自动修改模块搜索路径或添加内置函数。要显式触发通常针对特定站点的添加，请调用&lt;a href=&quot;#site.main&quot;&gt; &lt;code&gt;site.main()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="6952e83bb227bfc12f4069d649cedd8e49d9af47" translate="yes" xml:space="preserve">
          <source>Importing this module will append site-specific paths to the module search path and add a few builtins, unless &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; was used. In that case, this module can be safely imported with no automatic modifications to the module search path or additions to the builtins. To explicitly trigger the usual site-specific additions, call the &lt;a href=&quot;#site.main&quot;&gt;&lt;code&gt;site.main()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42328ac01cd03a47978f064c93b392caf3861f0" translate="yes" xml:space="preserve">
          <source>Imports</source>
          <target state="translated">Imports</target>
        </trans-unit>
        <trans-unit id="f16b4231e3d6ba6a1713c3f5cbbd7c9a26c500c5" translate="yes" xml:space="preserve">
          <source>Imports the module &lt;code&gt;co_names[namei]&lt;/code&gt;. TOS and TOS1 are popped and provide the &lt;em&gt;fromlist&lt;/em&gt; and &lt;em&gt;level&lt;/em&gt; arguments of &lt;a href=&quot;functions#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt;. The module object is pushed onto the stack. The current namespace is not affected: for a proper import statement, a subsequent &lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt; instruction modifies the namespace.</source>
          <target state="translated">导入模块 &lt;code&gt;co_names[namei]&lt;/code&gt; 。弹出TOS和TOS1并提供&lt;a href=&quot;functions#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;fromlist&lt;/em&gt;和&lt;em&gt;level&lt;/em&gt;参数。模块对象被压入堆栈。当前的名称空间不受影响：对于正确的import语句，随后的&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt;指令将修改该名称空间。</target>
        </trans-unit>
        <trans-unit id="3a067f8e863950831516af1d650bd9d3d58d9c6c" translate="yes" xml:space="preserve">
          <source>Imports: Multi-Line and Absolute/Relative</source>
          <target state="translated">进口。多线和绝对/相对</target>
        </trans-unit>
        <trans-unit id="e34afa4c6c43fdf304519c4cf65d27d88a721571" translate="yes" xml:space="preserve">
          <source>Improved Compatibility with Shells</source>
          <target state="translated">提高与壳牌的兼容性</target>
        </trans-unit>
        <trans-unit id="089354fe34004fc9de595d32a05e79153d2c456c" translate="yes" xml:space="preserve">
          <source>In 3.8, the two primary ways DLLs are loaded now explicitly override the process-wide behavior to ensure consistency. See the &lt;a href=&quot;https://docs.python.org/3.8/whatsnew/3.8.html#bpo-36085-whatsnew&quot;&gt;porting notes&lt;/a&gt; for information on updating libraries.</source>
          <target state="translated">在3.8中，DLL的两种主要加载方式现在显式覆盖了整个进程的行为，以确保一致性。请参阅&lt;a href=&quot;https://docs.python.org/3.8/whatsnew/3.8.html#bpo-36085-whatsnew&quot;&gt;移植说明，&lt;/a&gt;以获取有关更新库的信息。</target>
        </trans-unit>
        <trans-unit id="7add8af49918249d99a966a65f5a983db6ab28fa" translate="yes" xml:space="preserve">
          <source>In 3.8, the two primary ways DLLs are loaded now explicitly override the process-wide behavior to ensure consistency. See the &lt;a href=&quot;https://docs.python.org/3.9/whatsnew/3.8.html#bpo-36085-whatsnew&quot;&gt;porting notes&lt;/a&gt; for information on updating libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b2f076615a334a17aaf9a55dfdf31ef870f1d5" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt;, this is the same as &lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; 中&lt;/a&gt;，这与&lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="b38fe556a6e29923e6bee3656f92a012825b5239" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt;, this is the same as &lt;a href=&quot;#io.BufferedIOBase.readinto&quot;&gt;&lt;code&gt;readinto()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; 中&lt;/a&gt;，这与&lt;a href=&quot;#io.BufferedIOBase.readinto&quot;&gt; &lt;code&gt;readinto()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="cb4f5fa376dc3e2057a73ea4e8efbb45b9541ac5" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt;, processes are spawned by creating a &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object and then calling its &lt;a href=&quot;#multiprocessing.Process.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; follows the API of &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;threading.Thread&lt;/code&gt;&lt;/a&gt;. A trivial example of a multiprocess program is</source>
          <target state="translated">在&lt;a href=&quot;#module-multiprocessing&quot;&gt; &lt;code&gt;multiprocessing&lt;/code&gt; &lt;/a&gt;处理中，通过创建&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;对象然后调用其&lt;a href=&quot;#multiprocessing.Process.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;方法来生成进程。&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;遵循&lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;threading.Thread&lt;/code&gt; &lt;/a&gt;的API 。多进程程序的一个简单示例是</target>
        </trans-unit>
        <trans-unit id="a41975f414337b4161e766ea1a36bb88654c31c4" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;, an unstructured header is a run of arbitrary text in the ASCII character set. &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;, however, has an &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; compatible mechanism for encoding non-ASCII text as ASCII characters within a header value. When a &lt;em&gt;value&lt;/em&gt; containing encoded words is passed to the constructor, the &lt;code&gt;UnstructuredHeader&lt;/code&gt; parser converts such encoded words into unicode, following the &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; rules for unstructured text. The parser uses heuristics to attempt to decode certain non-compliant encoded words. Defects are registered in such cases, as well as defects for issues such as invalid characters within the encoded words or the non-encoded text.</source>
          <target state="translated">在&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 5322中&lt;/strong&gt;&lt;/a&gt;，非结构化标头是ASCII字符集中的任意文本的一部分。但是，&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;具有&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;兼容机制，用于将非ASCII文本编码为标头值内的ASCII字符。当将包含编码词的&lt;em&gt;值&lt;/em&gt;传递给构造函数时， &lt;code&gt;UnstructuredHeader&lt;/code&gt; 解析器会按照&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;针对非结构化文本的规则将此类编码词转换为unicode 。解析器使用试探法尝试对某些不符合要求的编码字进行解码。在这种情况下，将记录缺陷以及诸如编码字或非编码文本中无效字符之类的问题的缺陷。</target>
        </trans-unit>
        <trans-unit id="6551877af47b9396e87eaa7a777f7c956f3407a3" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;[0, 1]&lt;/code&gt;. Used to disambiguate wall times during a repeated interval. (A repeated interval occurs when clocks are rolled back at the end of daylight saving time or when the UTC offset for the current zone is decreased for political reasons.) The value 0 (1) represents the earlier (later) of the two moments with the same wall time representation.</source>
          <target state="translated">在 &lt;code&gt;[0, 1]&lt;/code&gt; 。用于消除重复时间间隔内的墙壁时间。（当在夏令时结束时回滚时钟或出于政治原因减小当前区域的UTC偏移量时，会出现一个重复的间隔。）值0（1）表示两个时刻中的较早（较晚）相同的墙时间表示。</target>
        </trans-unit>
        <trans-unit id="93133f5ae9ab6ab0577f712c1e104727b3ae2cfc" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;range(1000000)&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;range(1000000)&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="0618520a9a19fea1f2fc3b1e38952ba554e40a73" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;range(24)&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;range(24)&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="6e20d8913c951c136cbfa4ba9fbeb279dcb3126a" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;range(60)&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;range(60)&lt;/code&gt; 内。</target>
        </trans-unit>
        <trans-unit id="edc259786c7b74fe3206daa43e1739b00d2659a2" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;strftime()&lt;/code&gt;, &lt;code&gt;%Z&lt;/code&gt; is replaced by an empty string if &lt;code&gt;tzname()&lt;/code&gt; returns &lt;code&gt;None&lt;/code&gt;; otherwise &lt;code&gt;%Z&lt;/code&gt; is replaced by the returned value, which must be a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cddb7b7e3874d06e76f8eb562205fbd3b77d3e" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;blocking mode&lt;/em&gt;, operations block until complete or the system returns an error (such as connection timed out).</source>
          <target state="translated">在&lt;em&gt;阻止模式下&lt;/em&gt;，操作将阻止直到完成或系统返回错误（例如连接超时）。</target>
        </trans-unit>
        <trans-unit id="6d6a9efba04a47d4781b6de1610f6fe37834e4f6" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;non-blocking mode&lt;/em&gt;, operations fail (with an error that is unfortunately system-dependent) if they cannot be completed immediately: functions from the &lt;a href=&quot;select#module-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; can be used to know when and whether a socket is available for reading or writing.</source>
          <target state="translated">在&lt;em&gt;非阻塞模式下&lt;/em&gt;，如果操作无法立即完成，则操作将失败（不幸的是，错误取决于系统）：&lt;a href=&quot;select#module-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; 中的&lt;/a&gt;函数可用于了解套接字何时以及是否可用于读取或写入。</target>
        </trans-unit>
        <trans-unit id="1de600e7748b1b2c637dacf9c402ecc59c2e3930" translate="yes" xml:space="preserve">
          <source>In &lt;em&gt;timeout mode&lt;/em&gt;, operations fail if they cannot be completed within the timeout specified for the socket (they raise a &lt;a href=&quot;#socket.timeout&quot;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt; exception) or if the system returns an error.</source>
          <target state="translated">在&lt;em&gt;超时模式下&lt;/em&gt;，如果无法在为套接字指定的超时内完成操作（它们会引发&lt;a href=&quot;#socket.timeout&quot;&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/a&gt;异常）或系统返回错误，则操作将失败。</target>
        </trans-unit>
        <trans-unit id="93e4a4e56d6d1e50756bb9c6e4bc1bc4ccb5eed5" translate="yes" xml:space="preserve">
          <source>In BLAKE2 the salt is processed as a one-time input to the hash function during initialization, rather than as an input to each compression function.</source>
          <target state="translated">在BLAKE2中,盐在初始化时作为一次性输入到哈希函数中,而不是作为每个压缩函数的输入进行处理。</target>
        </trans-unit>
        <trans-unit id="9c7d0b0868fac88a221721ed400ce1bb944f7db5" translate="yes" xml:space="preserve">
          <source>In Babyl mailboxes, the headers of a message are not stored contiguously with the body of the message. To generate a file-like representation, the headers and body are copied together into an &lt;a href=&quot;io#io.BytesIO&quot;&gt;&lt;code&gt;io.BytesIO&lt;/code&gt;&lt;/a&gt; instance, which has an API identical to that of a file. As a result, the file-like object is truly independent of the underlying mailbox but does not save memory compared to a string representation.</source>
          <target state="translated">在Babyl邮箱中，邮件的标题不与邮件的正文连续存储。为了生成类似文件的表示形式，将标头和正文一起复制到&lt;a href=&quot;io#io.BytesIO&quot;&gt; &lt;code&gt;io.BytesIO&lt;/code&gt; &lt;/a&gt;实例中，该实例的API与文件的API相同。结果，类似于文件的对象实际上独立于基础邮箱，但是与字符串表示形式相比，不节省内存。</target>
        </trans-unit>
        <trans-unit id="a441fd784df981e42da3513e4f1b407c066fa595" translate="yes" xml:space="preserve">
          <source>In Boolean contexts, a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object is always considered to be true.</source>
          <target state="translated">在布尔上下文中，&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;对象始终被认为是真实的。</target>
        </trans-unit>
        <trans-unit id="3c9b44f6dcf172af2afd8e8696bebf4c5016d825" translate="yes" xml:space="preserve">
          <source>In Boolean contexts, a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object is considered to be true if and only if it isn&amp;rsquo;t equal to &lt;code&gt;timedelta(0)&lt;/code&gt;.</source>
          <target state="translated">在布尔上下文中，当且仅当&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;对象不等于 &lt;code&gt;timedelta(0)&lt;/code&gt; 时，才认为它是true 。</target>
        </trans-unit>
        <trans-unit id="6f761eb1aa256d436b20321c9c6e424dc4749847" translate="yes" xml:space="preserve">
          <source>In Boolean contexts, all &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; objects are considered to be true.</source>
          <target state="translated">在布尔上下文中，所有&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;对象都被认为是真实的。</target>
        </trans-unit>
        <trans-unit id="4133c1559bb69d3748ad119bc549a3b63e788a0f" translate="yes" xml:space="preserve">
          <source>In CPython, generator-based coroutines (generators decorated with &lt;a href=&quot;types#types.coroutine&quot;&gt;&lt;code&gt;types.coroutine()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asyncio-task#asyncio.coroutine&quot;&gt;&lt;code&gt;asyncio.coroutine()&lt;/code&gt;&lt;/a&gt;) are &lt;em&gt;awaitables&lt;/em&gt;, even though they do not have an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;isinstance(gencoro, Awaitable)&lt;/code&gt; for them will return &lt;code&gt;False&lt;/code&gt;. Use &lt;a href=&quot;inspect#inspect.isawaitable&quot;&gt;&lt;code&gt;inspect.isawaitable()&lt;/code&gt;&lt;/a&gt; to detect them.</source>
          <target state="translated">在CPython中，即使没有&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;方法，也可以&lt;em&gt;等待&lt;/em&gt;基于生成器的协程（用&lt;a href=&quot;types#types.coroutine&quot;&gt; &lt;code&gt;types.coroutine()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;asyncio-task#asyncio.coroutine&quot;&gt; &lt;code&gt;asyncio.coroutine()&lt;/code&gt; &lt;/a&gt;装饰的生成器）。为它们使用 &lt;code&gt;isinstance(gencoro, Awaitable)&lt;/code&gt; 将返回 &lt;code&gt;False&lt;/code&gt; 。使用&lt;a href=&quot;inspect#inspect.isawaitable&quot;&gt; &lt;code&gt;inspect.isawaitable()&lt;/code&gt; &lt;/a&gt;进行检测。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3cae09edf26f6e37b7e750f76e28a3e8c3c44cf6" translate="yes" xml:space="preserve">
          <source>In CPython, generator-based coroutines (generators decorated with &lt;a href=&quot;types#types.coroutine&quot;&gt;&lt;code&gt;types.coroutine()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asyncio-task#asyncio.coroutine&quot;&gt;&lt;code&gt;asyncio.coroutine()&lt;/code&gt;&lt;/a&gt;) are &lt;em&gt;awaitables&lt;/em&gt;, even though they do not have an &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;isinstance(gencoro, Coroutine)&lt;/code&gt; for them will return &lt;code&gt;False&lt;/code&gt;. Use &lt;a href=&quot;inspect#inspect.isawaitable&quot;&gt;&lt;code&gt;inspect.isawaitable()&lt;/code&gt;&lt;/a&gt; to detect them.</source>
          <target state="translated">在CPython中，即使没有&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;方法，也可以&lt;em&gt;等待&lt;/em&gt;基于生成器的协程（用&lt;a href=&quot;types#types.coroutine&quot;&gt; &lt;code&gt;types.coroutine()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;asyncio-task#asyncio.coroutine&quot;&gt; &lt;code&gt;asyncio.coroutine()&lt;/code&gt; &lt;/a&gt;装饰的生成器）。对它们使用 &lt;code&gt;isinstance(gencoro, Coroutine)&lt;/code&gt; 将返回 &lt;code&gt;False&lt;/code&gt; 。使用&lt;a href=&quot;inspect#inspect.isawaitable&quot;&gt; &lt;code&gt;inspect.isawaitable()&lt;/code&gt; &lt;/a&gt;进行检测。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56d54f98bb66071bd6c7b1eeeb243fafda3cb1f7" translate="yes" xml:space="preserve">
          <source>In CPython, generator-based coroutines (generators decorated with &lt;a href=&quot;types#types.coroutine&quot;&gt;&lt;code&gt;types.coroutine()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asyncio-task#asyncio.coroutine&quot;&gt;&lt;code&gt;asyncio.coroutine()&lt;/code&gt;&lt;/a&gt;) are &lt;em&gt;awaitables&lt;/em&gt;, even though they do not have an &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;isinstance(gencoro, Awaitable)&lt;/code&gt; for them will return &lt;code&gt;False&lt;/code&gt;. Use &lt;a href=&quot;inspect#inspect.isawaitable&quot;&gt;&lt;code&gt;inspect.isawaitable()&lt;/code&gt;&lt;/a&gt; to detect them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3453678e2ae192dfd7aeaddc930dd47bdbabb5" translate="yes" xml:space="preserve">
          <source>In CPython, generator-based coroutines (generators decorated with &lt;a href=&quot;types#types.coroutine&quot;&gt;&lt;code&gt;types.coroutine()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asyncio-task#asyncio.coroutine&quot;&gt;&lt;code&gt;asyncio.coroutine()&lt;/code&gt;&lt;/a&gt;) are &lt;em&gt;awaitables&lt;/em&gt;, even though they do not have an &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;isinstance(gencoro, Coroutine)&lt;/code&gt; for them will return &lt;code&gt;False&lt;/code&gt;. Use &lt;a href=&quot;inspect#inspect.isawaitable&quot;&gt;&lt;code&gt;inspect.isawaitable()&lt;/code&gt;&lt;/a&gt; to detect them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631366628298d4582a6ee037a9362b871c3234a2" translate="yes" xml:space="preserve">
          <source>In Python 2 code the &lt;code&gt;_order_&lt;/code&gt; attribute is necessary as definition order is lost before it can be recorded.</source>
          <target state="translated">在Python 2代码中， &lt;code&gt;_order_&lt;/code&gt; 属性是必需的，因为定义顺序在记录之前就丢失了。</target>
        </trans-unit>
        <trans-unit id="3bc7f7458422d2effbdbed743271c2b54fbb7402" translate="yes" xml:space="preserve">
          <source>In Python, all exceptions must be instances of a class that derives from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt;. In a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statement with an &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt;&lt;code&gt;except&lt;/code&gt;&lt;/a&gt; clause that mentions a particular class, that clause also handles any exception classes derived from that class (but not exception classes from which &lt;em&gt;it&lt;/em&gt; is derived). Two exception classes that are not related via subclassing are never equivalent, even if they have the same name.</source>
          <target state="translated">在Python中，所有异常必须是从&lt;a href=&quot;#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt;派生的类的实例。在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#try&quot;&gt; &lt;code&gt;try&lt;/code&gt; &lt;/a&gt;用一个声明&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#except&quot;&gt; &lt;code&gt;except&lt;/code&gt; &lt;/a&gt;条款，提到了特定的类，该条款还处理来自类（从中但也不例外类派生的任何异常类&lt;em&gt;它&lt;/em&gt;派生）。通过子类不相关的两个异常类即使名称相同，也永远不会等效。</target>
        </trans-unit>
        <trans-unit id="0436c697fe5d187310c263a3a2c639d554d1677c" translate="yes" xml:space="preserve">
          <source>In Python, all exceptions must be instances of a class that derives from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt;. In a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#try&quot;&gt;&lt;code&gt;try&lt;/code&gt;&lt;/a&gt; statement with an &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#except&quot;&gt;&lt;code&gt;except&lt;/code&gt;&lt;/a&gt; clause that mentions a particular class, that clause also handles any exception classes derived from that class (but not exception classes from which &lt;em&gt;it&lt;/em&gt; is derived). Two exception classes that are not related via subclassing are never equivalent, even if they have the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e22094af023753a3f8645474baf7875adb216c" translate="yes" xml:space="preserve">
          <source>In Python, file names, command line arguments, and environment variables are represented using the string type. On some systems, decoding these strings to and from bytes is necessary before passing them to the operating system. Python uses the file system encoding to perform this conversion (see &lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在Python中，文件名，命令行参数和环境变量使用字符串类型表示。在某些系统上，在将这些字符串传递给操作系统之前，有必要对这些字符串进行解码。Python使用文件系统编码来执行此转换（请参阅&lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt; &lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4a265e5614bc913aa2b5d3df9ffa283db482f3d1" translate="yes" xml:space="preserve">
          <source>In Python, since there is an interpreter active during execution, the presence of instrumented code is not required in order to do deterministic profiling. Python automatically provides a &lt;em&gt;hook&lt;/em&gt; (optional callback) for each event. In addition, the interpreted nature of Python tends to add so much overhead to execution, that deterministic profiling tends to only add small processing overhead in typical applications. The result is that deterministic profiling is not that expensive, yet provides extensive run time statistics about the execution of a Python program.</source>
          <target state="translated">在Python中，由于在执行过程中有活动的解释器，因此不需要执行检测代码即可进行确定性分析。 Python自动为每个事件提供一个&lt;em&gt;钩子&lt;/em&gt;（可选的回调）。此外，Python的解释性性质往往会增加执行开销，以至于确定性分析往往只会增加典型应用程序中的少量处理开销。结果是确定性分析并没有那么昂贵，但是提供了有关Python程序执行的大量运行时统计信息。</target>
        </trans-unit>
        <trans-unit id="5d2c2a794123158f78bff5ac03b8fc94de396956" translate="yes" xml:space="preserve">
          <source>In Shell, the accessible functions depends on what modules have been imported into the user process, including those imported by Idle itself, and which definitions have been run, all since the last restart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ba9e60148d18758b640f6ed814832833d34be7" translate="yes" xml:space="preserve">
          <source>In Tk, there is a utility command, &lt;code&gt;wm&lt;/code&gt;, for interacting with the window manager. Options to the &lt;code&gt;wm&lt;/code&gt; command allow you to control things like titles, placement, icon bitmaps, and the like. In &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt;, these commands have been implemented as methods on the &lt;code&gt;Wm&lt;/code&gt; class. Toplevel widgets are subclassed from the &lt;code&gt;Wm&lt;/code&gt; class, and so can call the &lt;code&gt;Wm&lt;/code&gt; methods directly.</source>
          <target state="translated">在Tk中，有一个实用程序命令 &lt;code&gt;wm&lt;/code&gt; ，用于与窗口管理器进行交互。 &lt;code&gt;wm&lt;/code&gt; 命令的选项使您可以控制标题，位置，图标位图等。在&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; 中&lt;/a&gt;，这些命令已实现为 &lt;code&gt;Wm&lt;/code&gt; 类上的方法。顶级窗口小部件是 &lt;code&gt;Wm&lt;/code&gt; 类的子类，因此可以直接调用 &lt;code&gt;Wm&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="e4bf65333e7dc9c2da7ca99bbab91025e00bf167" translate="yes" xml:space="preserve">
          <source>In Tk, to perform an action on a widget, use the widget name as a command, and follow it with an action name, possibly with arguments (options). In Tkinter, you call methods on the class instance to invoke actions on the widget. The actions (methods) that a given widget can perform are listed in &lt;code&gt;tkinter/__init__.py&lt;/code&gt;.</source>
          <target state="translated">在Tk中，要对窗口小部件执行操作，请使用窗口小部件名称作为命令，并在其后加上操作名称，可能还带有参数（选项）。在Tkinter中，您可以在类实例上调用方法来调用小部件上的操作。给定窗口小部件可以执行的动作（方法）在 &lt;code&gt;tkinter/__init__.py&lt;/code&gt; 中列出。</target>
        </trans-unit>
        <trans-unit id="62b35e4b6aee318c8476142aafce45b3919ab5f7" translate="yes" xml:space="preserve">
          <source>In a mailcap file, the &amp;ldquo;test&amp;rdquo; field can optionally be specified to test some external condition (such as the machine architecture, or the window system in use) to determine whether or not the mailcap line applies. &lt;a href=&quot;#mailcap.findmatch&quot;&gt;&lt;code&gt;findmatch()&lt;/code&gt;&lt;/a&gt; will automatically check such conditions and skip the entry if the check fails.</source>
          <target state="translated">在mailcap文件中，可以选择指定&amp;ldquo; test&amp;rdquo;字段以测试某些外部条件（例如，计算机体系结构或使用中的窗口系统），以确定mailcap行是否适用。&lt;a href=&quot;#mailcap.findmatch&quot;&gt; &lt;code&gt;findmatch()&lt;/code&gt; &lt;/a&gt;将自动检查此类条件，如果检查失败，则跳过该条目。</target>
        </trans-unit>
        <trans-unit id="dff27fd73d9cbfd83fc3861e07e29a5ce9fa9b2c" translate="yes" xml:space="preserve">
          <source>In a model generated from bytes, any header values that (in contravention of the RFCs) contain non-ASCII bytes will, when retrieved through this interface, be represented as &lt;a href=&quot;email.header#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; objects with a charset of &lt;code&gt;unknown-8bit&lt;/code&gt;.</source>
          <target state="translated">在根据字节生成的模型中，任何通过非接口（违反RFC）包含非ASCII字节的标头值，当通过此接口检索时，都将被表示为具有 &lt;code&gt;unknown-8bit&lt;/code&gt; 字符集的&lt;a href=&quot;email.header#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="bcdf824d25e196bd0265599e5fc259b9d7a7343d" translate="yes" xml:space="preserve">
          <source>In a multithreaded process, use caution to avoid leaking handles that are marked inheritable when combining this feature with concurrent calls to other process creation functions that inherit all handles such as &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;os.system()&lt;/code&gt;&lt;/a&gt;. This also applies to standard handle redirection, which temporarily creates inheritable handles.</source>
          <target state="translated">在多线程进程中，当将此功能与并发调用继承其他句柄的其他进程创建函数&lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;os.system()&lt;/code&gt; &lt;/a&gt;如os.system（））结合使用时，请小心避免泄漏标记为可继承的句柄。这也适用于标准句柄重定向，它临时创建可继承的句柄。</target>
        </trans-unit>
        <trans-unit id="29450dfd4c15b79ba3d022659c17515b216a2723" translate="yes" xml:space="preserve">
          <source>In a script, &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will typically be called with no arguments, and the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; will automatically determine the command-line arguments from &lt;a href=&quot;sys#sys.argv&quot;&gt;&lt;code&gt;sys.argv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在脚本中，通常将不带任何参数调用&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;，并且&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;将从&lt;a href=&quot;sys#sys.argv&quot;&gt; &lt;code&gt;sys.argv&lt;/code&gt; 中&lt;/a&gt;自动确定命令行参数。</target>
        </trans-unit>
        <trans-unit id="b3bcc045679addb686c190d0e988b9e965c3a92d" translate="yes" xml:space="preserve">
          <source>In a script, typical usage is something like this:</source>
          <target state="translated">在脚本中,典型的用法是这样的。</target>
        </trans-unit>
        <trans-unit id="e2b64a4d09137b4b9dd59b9330a2c7d91bb6320b" translate="yes" xml:space="preserve">
          <source>In a word, heaps are useful memory structures to know. I use them in a few applications, and I think it is good to keep a &amp;lsquo;heap&amp;rsquo; module around. :-)</source>
          <target state="translated">总之，堆是有用的内存结构。我在一些应用程序中使用了它们，我认为最好保留一个&amp;ldquo;堆&amp;rdquo;模块。:-)</target>
        </trans-unit>
        <trans-unit id="9f2f0f5240c4f2006c555b058d4decb08fc35f55" translate="yes" xml:space="preserve">
          <source>In accordance with the standard, the &lt;a href=&quot;#module-decimal&quot;&gt;&lt;code&gt;decimal&lt;/code&gt;&lt;/a&gt; module provides two ready to use standard contexts, &lt;a href=&quot;#decimal.BasicContext&quot;&gt;&lt;code&gt;BasicContext&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#decimal.ExtendedContext&quot;&gt;&lt;code&gt;ExtendedContext&lt;/code&gt;&lt;/a&gt;. The former is especially useful for debugging because many of the traps are enabled:</source>
          <target state="translated">按照该标准，&lt;a href=&quot;#module-decimal&quot;&gt; &lt;code&gt;decimal&lt;/code&gt; &lt;/a&gt;模块提供了两个准备使用的标准上下文，&lt;a href=&quot;#decimal.BasicContext&quot;&gt; &lt;code&gt;BasicContext&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#decimal.ExtendedContext&quot;&gt; &lt;code&gt;ExtendedContext&lt;/code&gt; &lt;/a&gt;。前者对于调试特别有用，因为启用了许多陷阱：</target>
        </trans-unit>
        <trans-unit id="d46ae7189ab259286c168e0b80b2fd3235fd9aed" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;, &lt;code&gt;'base64_codec'&lt;/code&gt; also accepts ASCII-only instances of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; for decoding</source>
          <target state="translated">除了&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象外&lt;/a&gt;， &lt;code&gt;'base64_codec'&lt;/code&gt; 还接受&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;的纯ASCII实例进行解码</target>
        </trans-unit>
        <trans-unit id="f45bed92bb166b8633bf88c26503575048712087" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;, &lt;code&gt;'base64_codec'&lt;/code&gt; also accepts ASCII-only instances of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; for decoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b20715c6c20497ac319a68d7016a8f75ae620e" translate="yes" xml:space="preserve">
          <source>In addition to being more CPU-intensive, compression with higher presets also requires much more memory (and produces output that needs more memory to decompress). With preset &lt;code&gt;9&lt;/code&gt; for example, the overhead for an &lt;a href=&quot;#lzma.LZMACompressor&quot;&gt;&lt;code&gt;LZMACompressor&lt;/code&gt;&lt;/a&gt; object can be as high as 800 MiB. For this reason, it is generally best to stick with the default preset.</source>
          <target state="translated">除了占用更多的CPU资源外，使用更高的预设进行压缩还需要更多的内存（并且产生需要更多内存进行解压缩的输出）。例如，使用预设 &lt;code&gt;9&lt;/code&gt; ，&lt;a href=&quot;#lzma.LZMACompressor&quot;&gt; &lt;code&gt;LZMACompressor&lt;/code&gt; &lt;/a&gt;对象的开销可能高达800 MiB。因此，通常最好坚持使用默认预设。</target>
        </trans-unit>
        <trans-unit id="62f40ff2f60f38cdc6a391277467f1c0b2fc7189" translate="yes" xml:space="preserve">
          <source>In addition to enabling the debug mode, consider also:</source>
          <target state="translated">除了启用调试模式外,还可以考虑。</target>
        </trans-unit>
        <trans-unit id="9b6341c25f3405f85d37bcad24b0b303303d029c" translate="yes" xml:space="preserve">
          <source>In addition to implementing the methods above, implementations of the &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; interface must also supply the following attributes, indicating which protocols should be used, and how. All of these attributes may be assigned to.</source>
          <target state="translated">除了实现上述方法之外，&lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt;接口的实现还必须提供以下属性，指示应使用哪些协议以及如何使用。所有这些属性都可以分配给它。</target>
        </trans-unit>
        <trans-unit id="0b8600bc88afada2a15d07e3d3b860294a40b1a7" translate="yes" xml:space="preserve">
          <source>In addition to many functions described in the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module documentation, &lt;a href=&quot;#module-posix&quot;&gt;&lt;code&gt;posix&lt;/code&gt;&lt;/a&gt; defines the following data item:</source>
          <target state="translated">除了所描述的许多功能&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;模块文档，&lt;a href=&quot;#module-posix&quot;&gt; &lt;code&gt;posix&lt;/code&gt; &lt;/a&gt;定义了下面的数据项：</target>
        </trans-unit>
        <trans-unit id="ea70a6e7df22f6334f5444417337936e1629f2a1" translate="yes" xml:space="preserve">
          <source>In addition to method lookups, &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; also works for attribute lookups. One possible use case for this is calling &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;descriptors&lt;/a&gt; in a parent or sibling class.</source>
          <target state="translated">除了方法查找之外，&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;也适用于属性查找。一种可能的用例是在父类或同级类中调用&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;描述符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1965ac98680dc2ab968a88603f1f60f2040d74b" translate="yes" xml:space="preserve">
          <source>In addition to method lookups, &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; also works for attribute lookups. One possible use case for this is calling &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-descriptor&quot;&gt;descriptors&lt;/a&gt; in a parent or sibling class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcad6a5eb6d0ad37696a20f7d2411fda996f3b45" translate="yes" xml:space="preserve">
          <source>In addition to size-limiting tools, the module also provides a decorator for detecting recursive calls to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; and substituting a placeholder string instead.</source>
          <target state="translated">除了大小限制工具之外，该模块还提供了一个装饰器，用于检测对&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;递归调用并代替一个占位符字符串。</target>
        </trans-unit>
        <trans-unit id="e17c10a55d72817f47e5bcb96cd1072311145fea" translate="yes" xml:space="preserve">
          <source>In addition to size-limiting tools, the module also provides a decorator for detecting recursive calls to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; and substituting a placeholder string instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d830c6765c9dc0300fe6b5cbc2b3e8460866e69" translate="yes" xml:space="preserve">
          <source>In addition to supporting the methods and operations of mappings, &lt;a href=&quot;#collections.UserDict&quot;&gt;&lt;code&gt;UserDict&lt;/code&gt;&lt;/a&gt; instances provide the following attribute:</source>
          <target state="translated">除了支持映射的方法和操作之外，&lt;a href=&quot;#collections.UserDict&quot;&gt; &lt;code&gt;UserDict&lt;/code&gt; &lt;/a&gt;实例还提供以下属性：</target>
        </trans-unit>
        <trans-unit id="a8807f211b2460760255a1709766f0a3137c6dab" translate="yes" xml:space="preserve">
          <source>In addition to supporting the methods and operations of mutable sequences, &lt;a href=&quot;#collections.UserList&quot;&gt;&lt;code&gt;UserList&lt;/code&gt;&lt;/a&gt; instances provide the following attribute:</source>
          <target state="translated">除了支持可变序列的方法和操作之外，&lt;a href=&quot;#collections.UserList&quot;&gt; &lt;code&gt;UserList&lt;/code&gt; &lt;/a&gt;实例还提供以下属性：</target>
        </trans-unit>
        <trans-unit id="04aa2e8b62d41221e69b20a54dc36f3e6372ea8e" translate="yes" xml:space="preserve">
          <source>In addition to supporting the methods and operations of strings, &lt;a href=&quot;#collections.UserString&quot;&gt;&lt;code&gt;UserString&lt;/code&gt;&lt;/a&gt; instances provide the following attribute:</source>
          <target state="translated">除了支持字符串的方法和操作外，&lt;a href=&quot;#collections.UserString&quot;&gt; &lt;code&gt;UserString&lt;/code&gt; &lt;/a&gt;实例还提供以下属性：</target>
        </trans-unit>
        <trans-unit id="2cf43345efe70766c6640171cc92f01b4817ca97" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;threading.Thread&lt;/code&gt;&lt;/a&gt; API, &lt;a href=&quot;#multiprocessing.Process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; objects also support the following attributes and methods:</source>
          <target state="translated">除了&lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;threading.Thread&lt;/code&gt; &lt;/a&gt; API，&lt;a href=&quot;#multiprocessing.Process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;对象还支持以下属性和方法：</target>
        </trans-unit>
        <trans-unit id="3537cce0770809bd80cddc6370639f4675c1c292" translate="yes" xml:space="preserve">
          <source>In addition to the Tk interface module, &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; includes a number of Python modules, &lt;code&gt;tkinter.constants&lt;/code&gt; being one of the most important. Importing &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; will automatically import &lt;code&gt;tkinter.constants&lt;/code&gt;, so, usually, to use Tkinter all you need is a simple import statement:</source>
          <target state="translated">除了Tk的接口模块，&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;包括多个Python模块， &lt;code&gt;tkinter.constants&lt;/code&gt; 是最重要的问题之一。导入&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;会自动导入 &lt;code&gt;tkinter.constants&lt;/code&gt; ，所以，通常情况下，使用Tkinter的所有你需要的是一个简单的import语句：</target>
        </trans-unit>
        <trans-unit id="9690476654ee5a2736c4ceafa04629e93b08060a" translate="yes" xml:space="preserve">
          <source>In addition to the above methods, the &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; must also inherit all other methods and attributes from the underlying stream.</source>
          <target state="translated">除上述方法外，&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;还必须从基础流继承所有其他方法和属性。</target>
        </trans-unit>
        <trans-unit id="222314dc286fea8c88b16cc332dcefcec6c56990" translate="yes" xml:space="preserve">
          <source>In addition to the above methods, the &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; must also inherit all other methods and attributes from the underlying stream.</source>
          <target state="translated">除上述方法外，&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;还必须从基础流继承所有其他方法和属性。</target>
        </trans-unit>
        <trans-unit id="1720f463c1df0d0fe9311a603541746810b18c89" translate="yes" xml:space="preserve">
          <source>In addition to the above presentation types, integers can be formatted with the floating point presentation types listed below (except &lt;code&gt;'n'&lt;/code&gt; and &lt;code&gt;None&lt;/code&gt;). When doing so, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float()&lt;/code&gt;&lt;/a&gt; is used to convert the integer to a floating point number before formatting.</source>
          <target state="translated">除了上述表示类型外，整数还可以使用下面列出的浮点表示类型进行格式化（ &lt;code&gt;'n'&lt;/code&gt; 和 &lt;code&gt;None&lt;/code&gt; 除外）。这样做时，&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float()&lt;/code&gt; &lt;/a&gt;用于在格式化之前将整数转换为浮点数。</target>
        </trans-unit>
        <trans-unit id="cfa4995b269e79140bbd715d66781cc2d6ced577" translate="yes" xml:space="preserve">
          <source>In addition to the above, &lt;a href=&quot;#logging.LoggerAdapter&quot;&gt;&lt;code&gt;LoggerAdapter&lt;/code&gt;&lt;/a&gt; supports the following methods of &lt;a href=&quot;#logging.Logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;#logging.Logger.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.Logger.info&quot;&gt;&lt;code&gt;info()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.Logger.warning&quot;&gt;&lt;code&gt;warning()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.Logger.error&quot;&gt;&lt;code&gt;error()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.Logger.exception&quot;&gt;&lt;code&gt;exception()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.Logger.critical&quot;&gt;&lt;code&gt;critical()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.Logger.log&quot;&gt;&lt;code&gt;log()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.Logger.isEnabledFor&quot;&gt;&lt;code&gt;isEnabledFor()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.Logger.getEffectiveLevel&quot;&gt;&lt;code&gt;getEffectiveLevel()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.Logger.setLevel&quot;&gt;&lt;code&gt;setLevel()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#logging.Logger.hasHandlers&quot;&gt;&lt;code&gt;hasHandlers()&lt;/code&gt;&lt;/a&gt;. These methods have the same signatures as their counterparts in &lt;a href=&quot;#logging.Logger&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt;, so you can use the two types of instances interchangeably.</source>
          <target state="translated">除上述内容外，&lt;a href=&quot;#logging.LoggerAdapter&quot;&gt; &lt;code&gt;LoggerAdapter&lt;/code&gt; 还&lt;/a&gt;支持&lt;a href=&quot;#logging.Logger&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt;的以下方法：&lt;a href=&quot;#logging.Logger.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.Logger.info&quot;&gt; &lt;code&gt;info()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.Logger.warning&quot;&gt; &lt;code&gt;warning()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.Logger.error&quot;&gt; &lt;code&gt;error()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.Logger.exception&quot;&gt; &lt;code&gt;exception()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.Logger.critical&quot;&gt; &lt;code&gt;critical()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.Logger.log&quot;&gt; &lt;code&gt;log()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.Logger.isEnabledFor&quot;&gt; &lt;code&gt;isEnabledFor()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.Logger.getEffectiveLevel&quot;&gt; &lt;code&gt;getEffectiveLevel()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.Logger.setLevel&quot;&gt; &lt;code&gt;setLevel()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#logging.Logger.hasHandlers&quot;&gt; &lt;code&gt;hasHandlers()&lt;/code&gt; &lt;/a&gt;。这些方法与&lt;a href=&quot;#logging.Logger&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; 中的&lt;/a&gt;方法具有相同的签名，因此您可以互换使用两种类型的实例。</target>
        </trans-unit>
        <trans-unit id="3d50c1e6c07de1acc4db99246c84c882aabeeb1c" translate="yes" xml:space="preserve">
          <source>In addition to the above, deques support iteration, pickling, &lt;code&gt;len(d)&lt;/code&gt;, &lt;code&gt;reversed(d)&lt;/code&gt;, &lt;code&gt;copy.copy(d)&lt;/code&gt;, &lt;code&gt;copy.deepcopy(d)&lt;/code&gt;, membership testing with the &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator, and subscript references such as &lt;code&gt;d[0]&lt;/code&gt; to access the first element. Indexed access is O(1) at both ends but slows to O(n) in the middle. For fast random access, use lists instead.</source>
          <target state="translated">除上述内容外，双端队列支持迭代，酸洗， &lt;code&gt;len(d)&lt;/code&gt; ， &lt;code&gt;reversed(d)&lt;/code&gt; ， &lt;code&gt;copy.copy(d)&lt;/code&gt; ， &lt;code&gt;copy.deepcopy(d)&lt;/code&gt; ，使用&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;运算符的成员资格测试以及下标引用（例如 &lt;code&gt;d[0]&lt;/code&gt; 访问第一个元素。索引访问在两端均为O（1），但在中间则减慢为O（n）。为了快速随机访问，请改用列表。</target>
        </trans-unit>
        <trans-unit id="ce85ce1fe4acf8b50a9a8f4381ff0d9e65beb534" translate="yes" xml:space="preserve">
          <source>In addition to the above, deques support iteration, pickling, &lt;code&gt;len(d)&lt;/code&gt;, &lt;code&gt;reversed(d)&lt;/code&gt;, &lt;code&gt;copy.copy(d)&lt;/code&gt;, &lt;code&gt;copy.deepcopy(d)&lt;/code&gt;, membership testing with the &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator, and subscript references such as &lt;code&gt;d[0]&lt;/code&gt; to access the first element. Indexed access is O(1) at both ends but slows to O(n) in the middle. For fast random access, use lists instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebaf021a38f23d1b3be305231ce1cfa6bc43bf01" translate="yes" xml:space="preserve">
          <source>In addition to the attributes and methods from &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#io.FileIO&quot;&gt;&lt;code&gt;FileIO&lt;/code&gt;&lt;/a&gt; provides the following data attributes:</source>
          <target state="translated">除了&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;的属性和方法外，&lt;a href=&quot;#io.FileIO&quot;&gt; &lt;code&gt;FileIO&lt;/code&gt; &lt;/a&gt;还提供以下数据属性：</target>
        </trans-unit>
        <trans-unit id="14586c995a780d78561f97624099b8e4ec9b4105" translate="yes" xml:space="preserve">
          <source>In addition to the attributes and methods from &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; provides the following methods:</source>
          <target state="translated">除了&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;的属性和方法外，&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;还提供以下方法：</target>
        </trans-unit>
        <trans-unit id="52fd5a33b320649b6f1060489177810635c6ea92" translate="yes" xml:space="preserve">
          <source>In addition to the classes described above, there are a number of module-level functions.</source>
          <target state="translated">除了上述的类,还有一些模块级的函数。</target>
        </trans-unit>
        <trans-unit id="c1112b3c989ed862bdeb0f82d3c1bc4efa761003" translate="yes" xml:space="preserve">
          <source>In addition to the dictionary-like methods, &lt;code&gt;gdbm&lt;/code&gt; objects have the following methods:</source>
          <target state="translated">除了类似字典的方法外， &lt;code&gt;gdbm&lt;/code&gt; 对象还具有以下方法：</target>
        </trans-unit>
        <trans-unit id="6226060e492ea216f0e7f78ce7856fca0eebffd1" translate="yes" xml:space="preserve">
          <source>In addition to the dictionary-like methods, &lt;code&gt;ndbm&lt;/code&gt; objects provide the following method:</source>
          <target state="translated">除了类似于字典的方法外， &lt;code&gt;ndbm&lt;/code&gt; 对象还提供以下方法：</target>
        </trans-unit>
        <trans-unit id="cea61bcebf3b4dd67f209d89e9e334cbef2a059e" translate="yes" xml:space="preserve">
          <source>In addition to the environment functions above, the &lt;a href=&quot;#module-wsgiref.util&quot;&gt;&lt;code&gt;wsgiref.util&lt;/code&gt;&lt;/a&gt; module also provides these miscellaneous utilities:</source>
          <target state="translated">除了上述环境功能之外，&lt;a href=&quot;#module-wsgiref.util&quot;&gt; &lt;code&gt;wsgiref.util&lt;/code&gt; &lt;/a&gt;模块还提供了以下杂项实用程序：</target>
        </trans-unit>
        <trans-unit id="858dce34107f4186993a5996db613388f2631800" translate="yes" xml:space="preserve">
          <source>In addition to the examples below, more examples are given in &lt;a href=&quot;https://docs.python.org/3.8/howto/urllib2.html#urllib-howto&quot;&gt;HOWTO Fetch Internet Resources Using The urllib Package&lt;/a&gt;.</source>
          <target state="translated">除以下示例外，&lt;a href=&quot;https://docs.python.org/3.8/howto/urllib2.html#urllib-howto&quot;&gt;HOWTO使用urllib包获取Internet资源中&lt;/a&gt;还提供了更多示例。</target>
        </trans-unit>
        <trans-unit id="c5073ea358d6afe8999722a058dc8df468ab48cd" translate="yes" xml:space="preserve">
          <source>In addition to the examples below, more examples are given in &lt;a href=&quot;https://docs.python.org/3.9/howto/urllib2.html#urllib-howto&quot;&gt;HOWTO Fetch Internet Resources Using The urllib Package&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b096e1520c7229739493907c163d5aa90e2c7fd3" translate="yes" xml:space="preserve">
          <source>In addition to the features required to implement the &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; interface, this class allows you to block and allow domains from setting and receiving cookies. There are also some strictness switches that allow you to tighten up the rather loose Netscape protocol rules a little bit (at the cost of blocking some benign cookies).</source>
          <target state="translated">除了实现&lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt;接口所需的功能之外，此类还允许您阻止和允许域设置和接收Cookie。还有一些严格性开关，使您可以稍微加强一些比较宽松的Netscape协议规则（以阻止某些良性cookie为代价）。</target>
        </trans-unit>
        <trans-unit id="1dc8d82427b096c43fc2e7d5213bd591f0d85590" translate="yes" xml:space="preserve">
          <source>In addition to the literal forms, bytes objects can be created in a number of other ways:</source>
          <target state="translated">除了文字形式外,字节对象还可以用其他一些方式创建。</target>
        </trans-unit>
        <trans-unit id="c64e42d0dab883c69e970748044e9e77b97cb7a8" translate="yes" xml:space="preserve">
          <source>In addition to the methods inherited from tuples, named tuples support three additional methods and two attributes. To prevent conflicts with field names, the method and attribute names start with an underscore.</source>
          <target state="translated">除了从元组继承的方法外,命名的元组还支持三个附加方法和两个属性。为了防止与字段名冲突,方法和属性名都以下划线开始。</target>
        </trans-unit>
        <trans-unit id="e2f6ddf1bf12cf34152fec328d39c9d8ce0a989d" translate="yes" xml:space="preserve">
          <source>In addition to the methods provided by the &lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt;&lt;code&gt;collections.abc.MutableMapping&lt;/code&gt;&lt;/a&gt; class, &lt;code&gt;dumbdbm&lt;/code&gt; objects provide the following methods:</source>
          <target state="translated">除了&lt;a href=&quot;collections.abc#collections.abc.MutableMapping&quot;&gt; &lt;code&gt;collections.abc.MutableMapping&lt;/code&gt; &lt;/a&gt;类提供的方法之外， &lt;code&gt;dumbdbm&lt;/code&gt; 对象还提供以下方法：</target>
        </trans-unit>
        <trans-unit id="49c9b324d276aba55bfa28551beee12479bf0531" translate="yes" xml:space="preserve">
          <source>In addition to the operations listed above, &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; objects support certain additions and subtractions with &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; objects (see below).</source>
          <target state="translated">除了上面列出的操作外，&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;对象还支持对&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;时间对象进行某些加法和减法（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="8c4c56f4ca00cb6b6be40eba948fd85089f6ade4" translate="yes" xml:space="preserve">
          <source>In addition to the settable attributes listed above that apply to all policies, this policy adds the following additional attributes:</source>
          <target state="translated">除了上述适用于所有政策的可设置属性外,本政策还增加了以下附加属性:</target>
        </trans-unit>
        <trans-unit id="7d6fe1a1b1f7fcd5eef30c9780f9e8758b294753" translate="yes" xml:space="preserve">
          <source>In addition to the standard library, there is a growing collection of several thousand components (from individual programs and modules to packages and entire application development frameworks), available from the &lt;a href=&quot;https://pypi.org&quot;&gt;Python Package Index&lt;/a&gt;.</source>
          <target state="translated">除了标准库之外，&lt;a href=&quot;https://pypi.org&quot;&gt;Python软件包索引还&lt;/a&gt;提供了数千种组件的集合（从单个程序和模块到软件包以及整个应用程序开发框架）。</target>
        </trans-unit>
        <trans-unit id="37b1282f5319fc90d1ae0fbf402438654f72c8b7" translate="yes" xml:space="preserve">
          <source>In addition to the standard numeric properties, decimal floating point objects also have a number of specialized methods:</source>
          <target state="translated">除了标准的数值属性外,十进制浮点对象还有一些专门的方法。</target>
        </trans-unit>
        <trans-unit id="20844ff85a7de274374759963a07f03ca0ec2fa4" translate="yes" xml:space="preserve">
          <source>In addition to the three supplied contexts, new contexts can be created with the &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">除了提供的三个上下文外，还可以使用&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;构造函数创建新的上下文。</target>
        </trans-unit>
        <trans-unit id="032befaca731d1da6b9f55a3d41598ab32bb42d3" translate="yes" xml:space="preserve">
          <source>In addition to the two signed zeros which are distinct yet equal, there are various representations of zero with differing precisions yet equivalent in value. This takes a bit of getting used to. For an eye accustomed to normalized floating point representations, it is not immediately obvious that the following calculation returns a value equal to zero:</source>
          <target state="translated">除了两个有符号的0是不同的,但又是相等的,还有各种不同精度的零的表示方法,但价值是相等的。这需要一点时间来适应。对于一个习惯于用标准化浮点表示的人来说,下面的计算并不能立即看出返回一个等于零的值。</target>
        </trans-unit>
        <trans-unit id="470a6fd8b7a670e99e5471d463edd75a822561e0" translate="yes" xml:space="preserve">
          <source>In addition to the usual mapping methods, ordered dictionaries also support reverse iteration using &lt;a href=&quot;functions#reversed&quot;&gt;&lt;code&gt;reversed()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">除了常用的映射方法外，有序词典还支持使用&lt;a href=&quot;functions#reversed&quot;&gt; &lt;code&gt;reversed()&lt;/code&gt; 进行&lt;/a&gt;反向迭代。</target>
        </trans-unit>
        <trans-unit id="1f6056a668fa6b597cd5e06fbb9eab25b2a47143" translate="yes" xml:space="preserve">
          <source>In addition to their mapping interface and formatting features, &lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; objects also have the following methods for querying and adding multi-valued headers, and for adding headers with MIME parameters:</source>
          <target state="translated">除了其映射界面和格式设置功能外，&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt;对象还具有以下方法用于查询和添加多值标头以及添加带有MIME参数的标头：</target>
        </trans-unit>
        <trans-unit id="b37effc66593dde7858807d6c481046b5424a851" translate="yes" xml:space="preserve">
          <source>In addition to these classes, &lt;a href=&quot;#module-xml.sax&quot;&gt;&lt;code&gt;xml.sax&lt;/code&gt;&lt;/a&gt; provides the following exception classes.</source>
          <target state="translated">除了这些类之外，&lt;a href=&quot;#module-xml.sax&quot;&gt; &lt;code&gt;xml.sax&lt;/code&gt; &lt;/a&gt;还提供以下异常类。</target>
        </trans-unit>
        <trans-unit id="3c5fc990cbc73c12c0b40300fad7df5e7ee287cd" translate="yes" xml:space="preserve">
          <source>In addition to these classes, &lt;a href=&quot;#module-xml.sax.handler&quot;&gt;&lt;code&gt;xml.sax.handler&lt;/code&gt;&lt;/a&gt; provides symbolic constants for the feature and property names.</source>
          <target state="translated">除了这些类之外，&lt;a href=&quot;#module-xml.sax.handler&quot;&gt; &lt;code&gt;xml.sax.handler&lt;/code&gt; &lt;/a&gt;还为要素和属性名称提供符号常量。</target>
        </trans-unit>
        <trans-unit id="398bda298534a149091a837cc6c784d269a2e413" translate="yes" xml:space="preserve">
          <source>In addition to these methods, lock objects can also be used via the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, e.g.:</source>
          <target state="translated">除了这些方法之外，还可以通过&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句使用锁对象，例如：</target>
        </trans-unit>
        <trans-unit id="59b4fba6609849f4bb2b33444f99b785fc17caf1" translate="yes" xml:space="preserve">
          <source>In addition to these methods, lock objects can also be used via the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324d7520dd2db34f14989622298b9a50942c0a6b" translate="yes" xml:space="preserve">
          <source>In addition to these two forms, there are two additional normal forms based on compatibility equivalence. In Unicode, certain characters are supported which normally would be unified with other characters. For example, U+2160 (ROMAN NUMERAL ONE) is really the same thing as U+0049 (LATIN CAPITAL LETTER I). However, it is supported in Unicode for compatibility with existing character sets (e.g. gb2312).</source>
          <target state="translated">除了这两种形式外,还有两种基于兼容性等价的正常形式。在Unicode中,支持某些字符,这些字符通常会与其他字符统一。例如,U+2160(ROMAN NUMERAL ONE)与U+0049(LATIN CAPITAL LETTER I)其实是一回事。然而,在Unicode中,为了与现有的字符集(如gb2312)兼容,它被支持。</target>
        </trans-unit>
        <trans-unit id="9e0c6060f180bd1be434b002c3a8e1bb629b28ba" translate="yes" xml:space="preserve">
          <source>In addition to those of &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; can have one more attribute:</source>
          <target state="translated">除了&lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; 之外&lt;/a&gt;，&lt;a href=&quot;#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; &lt;/a&gt;还可以具有一个以上属性：</target>
        </trans-unit>
        <trans-unit id="58b602fd4657546b90e8bec1feb16284ddd90bfc" translate="yes" xml:space="preserve">
          <source>In addition you can pass &lt;code&gt;spec=True&lt;/code&gt; or &lt;code&gt;spec_set=True&lt;/code&gt;, which causes patch to pass in the object being mocked as the spec/spec_set object.</source>
          <target state="translated">另外，您可以传递 &lt;code&gt;spec=True&lt;/code&gt; 或 &lt;code&gt;spec_set=True&lt;/code&gt; ，这会导致补丁将要模拟的对象作为spec / spec_set对象传递。</target>
        </trans-unit>
        <trans-unit id="1538a099b36c536517432c89a4b9de9737c1b154" translate="yes" xml:space="preserve">
          <source>In addition, &lt;a href=&quot;#module-tkinter.tix&quot;&gt;&lt;code&gt;tkinter.tix&lt;/code&gt;&lt;/a&gt; augments &lt;a href=&quot;tkinter#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; by providing:</source>
          <target state="translated">此外，&lt;a href=&quot;#module-tkinter.tix&quot;&gt; &lt;code&gt;tkinter.tix&lt;/code&gt; &lt;/a&gt;增强部&lt;a href=&quot;tkinter#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;提供：</target>
        </trans-unit>
        <trans-unit id="ad37a6225b74614726b479be7666d6240684d671" translate="yes" xml:space="preserve">
          <source>In addition, &lt;a href=&quot;#module-xml.dom&quot;&gt;&lt;code&gt;xml.dom&lt;/code&gt;&lt;/a&gt; contains a base &lt;code&gt;Node&lt;/code&gt; class and the DOM exception classes. The &lt;code&gt;Node&lt;/code&gt; class provided by this module does not implement any of the methods or attributes defined by the DOM specification; concrete DOM implementations must provide those. The &lt;code&gt;Node&lt;/code&gt; class provided as part of this module does provide the constants used for the &lt;code&gt;nodeType&lt;/code&gt; attribute on concrete &lt;code&gt;Node&lt;/code&gt; objects; they are located within the class rather than at the module level to conform with the DOM specifications.</source>
          <target state="translated">另外，&lt;a href=&quot;#module-xml.dom&quot;&gt; &lt;code&gt;xml.dom&lt;/code&gt; &lt;/a&gt;包含一个基本的 &lt;code&gt;Node&lt;/code&gt; 类和DOM异常类。该模块提供的 &lt;code&gt;Node&lt;/code&gt; 类不实现DOM规范定义的任何方法或属性；具体的DOM实现必须提供这些实现。作为此模块的一部分提供的 &lt;code&gt;Node&lt;/code&gt; 类确实提供了用于具体 &lt;code&gt;Node&lt;/code&gt; 对象上的 &lt;code&gt;nodeType&lt;/code&gt; 属性的常量；它们位于类中而不是模块级别，以符合DOM规范。</target>
        </trans-unit>
        <trans-unit id="c5d44ab30dfa1f3ce24fbe120b70c25d4d0b4cc1" translate="yes" xml:space="preserve">
          <source>In addition, &lt;a href=&quot;#venv.EnvBuilder&quot;&gt;&lt;code&gt;EnvBuilder&lt;/code&gt;&lt;/a&gt; provides this utility method that can be called from &lt;a href=&quot;#venv.EnvBuilder.setup_scripts&quot;&gt;&lt;code&gt;setup_scripts()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#venv.EnvBuilder.post_setup&quot;&gt;&lt;code&gt;post_setup()&lt;/code&gt;&lt;/a&gt; in subclasses to assist in installing custom scripts into the virtual environment.</source>
          <target state="translated">此外，&lt;a href=&quot;#venv.EnvBuilder&quot;&gt; &lt;code&gt;EnvBuilder&lt;/code&gt; &lt;/a&gt;提供了此实用程序方法，可以从子类的&lt;a href=&quot;#venv.EnvBuilder.setup_scripts&quot;&gt; &lt;code&gt;setup_scripts()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#venv.EnvBuilder.post_setup&quot;&gt; &lt;code&gt;post_setup()&lt;/code&gt; &lt;/a&gt;中调用该方法，以帮助将自定义脚本安装到虚拟环境中。</target>
        </trans-unit>
        <trans-unit id="8d5378207c9afa23bfe1afa0e6e3ef8b7515d910" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;Tk&lt;/code&gt; also loads a startup file if it is present. Note that the Tk file is loaded unconditionally. This additional file is &lt;code&gt;.Idle.py&lt;/code&gt; and is looked for in the user&amp;rsquo;s home directory. Statements in this file will be executed in the Tk namespace, so this file is not useful for importing functions to be used from IDLE&amp;rsquo;s Python shell.</source>
          <target state="translated">此外， &lt;code&gt;Tk&lt;/code&gt; 还会加载启动文件（如果存在）。请注意，Tk文件是无条件加载的。该附加文件是 &lt;code&gt;.Idle.py&lt;/code&gt; ,并在用户的主目录中查找。该文件中的语句将在Tk命名空间中执行，因此该文件对于从IDLE的Python shell导入要使用的函数没有用。</target>
        </trans-unit>
        <trans-unit id="714413f1caa3214664dffb1034eb3924cd14e3f3" translate="yes" xml:space="preserve">
          <source>In addition, a custom &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; object can provide the following methods:</source>
          <target state="translated">此外，自定义&lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; &lt;/a&gt;对象可以提供以下方法：</target>
        </trans-unit>
        <trans-unit id="ffffc9f25603a24b2ca6858559ed5b2e495ca947" translate="yes" xml:space="preserve">
          <source>In addition, each channel delegates or extends many of the socket methods. Most of these are nearly identical to their socket partners.</source>
          <target state="translated">此外,每个通道委托或扩展了许多套接字方法。其中大部分方法与它们的套接字伙伴几乎相同。</target>
        </trans-unit>
        <trans-unit id="83b47f7b397cc2558e44945a3d76d7c85179444e" translate="yes" xml:space="preserve">
          <source>In addition, enabling &lt;a href=&quot;tracemalloc#module-tracemalloc&quot;&gt;&lt;code&gt;tracemalloc&lt;/code&gt;&lt;/a&gt; shows the line where the file was opened:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c412f65e105df43e1227481dd3222239a0aaaa6f" translate="yes" xml:space="preserve">
          <source>In addition, every data type that can be packed with a &lt;a href=&quot;#xdrlib.Packer&quot;&gt;&lt;code&gt;Packer&lt;/code&gt;&lt;/a&gt;, can be unpacked with an &lt;a href=&quot;#xdrlib.Unpacker&quot;&gt;&lt;code&gt;Unpacker&lt;/code&gt;&lt;/a&gt;. Unpacking methods are of the form &lt;code&gt;unpack_type()&lt;/code&gt;, and take no arguments. They return the unpacked object.</source>
          <target state="translated">另外，可以用&lt;a href=&quot;#xdrlib.Packer&quot;&gt; &lt;code&gt;Packer&lt;/code&gt; 打包的&lt;/a&gt;每种数据类型都可以用&lt;a href=&quot;#xdrlib.Unpacker&quot;&gt; &lt;code&gt;Unpacker&lt;/code&gt; &lt;/a&gt;打包。解包方法的形式为 &lt;code&gt;unpack_type()&lt;/code&gt; ，并且不带参数。他们返回解包的对象。</target>
        </trans-unit>
        <trans-unit id="7ba3a9a49cc3e12a995a955c9b502b49ba170e63" translate="yes" xml:space="preserve">
          <source>In addition, if &lt;code&gt;M.__test__&lt;/code&gt; exists and &amp;ldquo;is true&amp;rdquo;, it must be a dict, and each entry maps a (string) name to a function object, class object, or string. Function and class object docstrings found from &lt;code&gt;M.__test__&lt;/code&gt; are searched, and strings are treated as if they were docstrings. In output, a key &lt;code&gt;K&lt;/code&gt; in &lt;code&gt;M.__test__&lt;/code&gt; appears with name</source>
          <target state="translated">另外，如果 &lt;code&gt;M.__test__&lt;/code&gt; 存在且&amp;ldquo;为true&amp;rdquo;，则它必须是字典，并且每个条目都将（字符串）名称映射到函数对象，类对象或字符串。搜索从 &lt;code&gt;M.__test__&lt;/code&gt; 找到的函数和类对象文档字符串，并将字符串视为文档字符串。在输出，一键 &lt;code&gt;K&lt;/code&gt; 在 &lt;code&gt;M.__test__&lt;/code&gt; 出现与名称</target>
        </trans-unit>
        <trans-unit id="7c4f27b629e481e3b68eabacd3944479c69ebbb1" translate="yes" xml:space="preserve">
          <source>In addition, if &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;'func_type'&lt;/code&gt;, the input syntax is modified to correspond to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; &amp;ldquo;signature type comments&amp;rdquo;, e.g. &lt;code&gt;(str, int) -&amp;gt; List[str]&lt;/code&gt;.</source>
          <target state="translated">另外，如果 &lt;code&gt;mode&lt;/code&gt; 为 &lt;code&gt;'func_type'&lt;/code&gt; ，则修改输入语法以对应于&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; &amp;ldquo;签名类型注释&amp;rdquo;，例如 &lt;code&gt;(str, int) -&amp;gt; List[str]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30c6bed1ea7380108e2ca8ee55afe3a1b3931b43" translate="yes" xml:space="preserve">
          <source>In addition, if &lt;em&gt;first&lt;/em&gt; and &lt;em&gt;second&lt;/em&gt; are the exact same type and one of list, tuple, dict, set, frozenset or str or any type that a subclass registers with &lt;a href=&quot;#unittest.TestCase.addTypeEqualityFunc&quot;&gt;&lt;code&gt;addTypeEqualityFunc()&lt;/code&gt;&lt;/a&gt; the type-specific equality function will be called in order to generate a more useful default error message (see also the &lt;a href=&quot;#type-specific-methods&quot;&gt;list of type-specific methods&lt;/a&gt;).</source>
          <target state="translated">此外，如果&lt;em&gt;first&lt;/em&gt;和&lt;em&gt;second&lt;/em&gt;是完全相同的类型，并且是list，tuple，dict，set，frozenset或str或子类通过&lt;a href=&quot;#unittest.TestCase.addTypeEqualityFunc&quot;&gt; &lt;code&gt;addTypeEqualityFunc()&lt;/code&gt; &lt;/a&gt;注册的任何类型之一，则将调用特定于类型的相等函数以生成更有用的默认错误消息（另请参见&lt;a href=&quot;#type-specific-methods&quot;&gt;类型特定方法&lt;/a&gt;的列表）。</target>
        </trans-unit>
        <trans-unit id="0e854c4d4c93154cb656dd7533a63f2e464a95d5" translate="yes" xml:space="preserve">
          <source>In addition, if a function argument is explicitly declared to be a pointer type (such as &lt;code&gt;POINTER(c_int)&lt;/code&gt;) in &lt;code&gt;argtypes&lt;/code&gt;, an object of the pointed type (&lt;code&gt;c_int&lt;/code&gt; in this case) can be passed to the function. ctypes will apply the required &lt;a href=&quot;#ctypes.byref&quot;&gt;&lt;code&gt;byref()&lt;/code&gt;&lt;/a&gt; conversion in this case automatically.</source>
          <target state="translated">另外，如果在 &lt;code&gt;argtypes&lt;/code&gt; &lt;code&gt;POINTER(c_int)&lt;/code&gt; 函数参数明确声明为指针类型（例如POINTER（c_int）），则可以将指向类型的对象（在这种情况下为 &lt;code&gt;c_int&lt;/code&gt; ）传递给函数。在这种情况下，ctypes将自动应用所需的&lt;a href=&quot;#ctypes.byref&quot;&gt; &lt;code&gt;byref()&lt;/code&gt; &lt;/a&gt;转换。</target>
        </trans-unit>
        <trans-unit id="be2d0ea0907cf041df70ca4f4e655493e7b46100" translate="yes" xml:space="preserve">
          <source>In addition, if proxy settings are detected (for example, when a &lt;code&gt;*_proxy&lt;/code&gt; environment variable like &lt;code id=&quot;index-0&quot;&gt;http_proxy&lt;/code&gt; is set), &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt; is default installed and makes sure the requests are handled through the proxy.</source>
          <target state="translated">另外，如果检测到代理设置（例如，当设置了 &lt;code&gt;*_proxy&lt;/code&gt; 环境变量（例如 &lt;code id=&quot;index-0&quot;&gt;http_proxy&lt;/code&gt; ）时），则默认安装&lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt; &lt;code&gt;ProxyHandler&lt;/code&gt; &lt;/a&gt;并确保通过代理处理请求。</target>
        </trans-unit>
        <trans-unit id="7b6bed6910e60de13a0aa73a3eceff08d688367d" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;a href=&quot;#string.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; defines a number of methods that are intended to be replaced by subclasses:</source>
          <target state="translated">此外，&lt;a href=&quot;#string.Formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;定义了许多打算由子类替换的方法：</target>
        </trans-unit>
        <trans-unit id="c9ff53ab4ada69f7c64d6901e8e9786692449da2" translate="yes" xml:space="preserve">
          <source>In addition, the Python DOM interface requires that some additional support is provided to allow &lt;code&gt;NodeList&lt;/code&gt; objects to be used as Python sequences. All &lt;code&gt;NodeList&lt;/code&gt; implementations must include support for &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;; this allows iteration over the &lt;code&gt;NodeList&lt;/code&gt; in &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; statements and proper support for the &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt; built-in function.</source>
          <target state="translated">另外，Python DOM接口要求提供一些附加支持，以允许将 &lt;code&gt;NodeList&lt;/code&gt; 对象用作Python序列。所有 &lt;code&gt;NodeList&lt;/code&gt; 实现必须包括对&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__len__&quot;&gt; &lt;code&gt;__len__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;；这允许在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;语句中的 &lt;code&gt;NodeList&lt;/code&gt; 上进行迭代，并为&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; &lt;/a&gt;内置函数提供适当的支持。</target>
        </trans-unit>
        <trans-unit id="b6d37d6e1400b9af0d3c9c888ffe6df3d77fcdda" translate="yes" xml:space="preserve">
          <source>In addition, the Python DOM interface requires that some additional support is provided to allow &lt;code&gt;NodeList&lt;/code&gt; objects to be used as Python sequences. All &lt;code&gt;NodeList&lt;/code&gt; implementations must include support for &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__len__&quot;&gt;&lt;code&gt;__len__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;; this allows iteration over the &lt;code&gt;NodeList&lt;/code&gt; in &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; statements and proper support for the &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt; built-in function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01bd464654d85025080875761ac5e61133f11b9" translate="yes" xml:space="preserve">
          <source>In addition, the following constants are defined:</source>
          <target state="translated">此外,还定义了以下常数:</target>
        </trans-unit>
        <trans-unit id="b6828d60770f39f7550e18f2180b31c38e1ba2b8" translate="yes" xml:space="preserve">
          <source>In addition, the following error handler is specific to the given codecs:</source>
          <target state="translated">此外,以下错误处理程序是特定于给定编解码器的。</target>
        </trans-unit>
        <trans-unit id="a7d6c3e3ae1f40f0b841f0ae9fa2ce8b4b2c827e" translate="yes" xml:space="preserve">
          <source>In addition, the following methods unpack strings, bytes, and opaque data:</source>
          <target state="translated">此外,以下方法还可以解压字符串、字节和不透明数据。</target>
        </trans-unit>
        <trans-unit id="8f79591ef67ae18b0ee2f6ad572507855d4aebe8" translate="yes" xml:space="preserve">
          <source>In addition, the module exposes the following constant:</source>
          <target state="translated">此外,该模块还公开了以下常量:</target>
        </trans-unit>
        <trans-unit id="7202589f315636dd521931132570107c0e2975e5" translate="yes" xml:space="preserve">
          <source>In addition, the module implements a &amp;ldquo;simple&amp;rdquo;</source>
          <target state="translated">另外，该模块实现了&amp;ldquo;简单&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="65768f8c8e36ecf98d8bfdf5c170282437244a45" translate="yes" xml:space="preserve">
          <source>In addition, the replacements using &lt;a href=&quot;#subprocess.check_output&quot;&gt;&lt;code&gt;check_output()&lt;/code&gt;&lt;/a&gt; will fail with a &lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt;&lt;code&gt;CalledProcessError&lt;/code&gt;&lt;/a&gt; if the requested operation produces a non-zero return code. The output is still available as the &lt;a href=&quot;#subprocess.CalledProcessError.output&quot;&gt;&lt;code&gt;output&lt;/code&gt;&lt;/a&gt; attribute of the raised exception.</source>
          <target state="translated">此外，如果所请求的操作产生的返回码非零，则使用&lt;a href=&quot;#subprocess.check_output&quot;&gt; &lt;code&gt;check_output()&lt;/code&gt; 进行&lt;/a&gt;的替换将失败，并显示&lt;a href=&quot;#subprocess.CalledProcessError&quot;&gt; &lt;code&gt;CalledProcessError&lt;/code&gt; &lt;/a&gt;。输出仍然可用作引发的异常的&lt;a href=&quot;#subprocess.CalledProcessError.output&quot;&gt; &lt;code&gt;output&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="24d6f5e76f333b5e2721aafc94f1e5f93dcadd61" translate="yes" xml:space="preserve">
          <source>In addition, those methods can raise &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; if the underlying raw stream is in non-blocking mode and cannot take or give enough data; unlike their &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; counterparts, they will never return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">此外，如果基础原始流处于非阻塞模式并且无法获取或提供足够的数据，则这些方法会引发&lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; &lt;/a&gt;。与&lt;a href=&quot;#io.RawIOBase&quot;&gt; &lt;code&gt;RawIOBase&lt;/code&gt; &lt;/a&gt;对应对象不同，它们永远不会返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0c8203792cc7837023ccc2f6c27be6b401948da" translate="yes" xml:space="preserve">
          <source>In all but the last case, behaviour is as for the &lt;a href=&quot;#fcntl.fcntl&quot;&gt;&lt;code&gt;fcntl()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">在除最后一种情况以外的所有情况下，行为与&lt;a href=&quot;#fcntl.fcntl&quot;&gt; &lt;code&gt;fcntl()&lt;/code&gt; &lt;/a&gt;函数相同。</target>
        </trans-unit>
        <trans-unit id="692d29dfab8ab67219a17ecaca49c353f09b7b11" translate="yes" xml:space="preserve">
          <source>In all cases, if the optional parts are omitted, the code is executed in the current scope. If only &lt;em&gt;globals&lt;/em&gt; is provided, it must be a dictionary (and not a subclass of dictionary), which will be used for both the global and the local variables. If &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt; are given, they are used for the global and local variables, respectively. If provided, &lt;em&gt;locals&lt;/em&gt; can be any mapping object. Remember that at module level, globals and locals are the same dictionary. If exec gets two separate objects as &lt;em&gt;globals&lt;/em&gt; and &lt;em&gt;locals&lt;/em&gt;, the code will be executed as if it were embedded in a class definition.</source>
          <target state="translated">在所有情况下，如果省略了可选部分，则代码将在当前范围内执行。如果仅提供&lt;em&gt;全局变量&lt;/em&gt;，则它必须是字典（而不是字典的子类），该字典将用于全局变量和局部变量。如果&lt;em&gt;全局&lt;/em&gt;和&lt;em&gt;当地人&lt;/em&gt;给出，它们分别用于全局和局部变量。如果提供的话，&lt;em&gt;本地变量&lt;/em&gt;可以是任何映射对象。请记住，在模块级别，全局变量和局部变量是相同的字典。如果exec获得了两个单独的对象作为&lt;em&gt;globals&lt;/em&gt;和&lt;em&gt;locals&lt;/em&gt;，则代码将像嵌入在类定义中一样被执行。</target>
        </trans-unit>
        <trans-unit id="4ce297ce9195276151aae56fb9d8405d81d59aba" translate="yes" xml:space="preserve">
          <source>In an editor, import statements have no effect until one runs the file. One might want to run a file after writing import statements, after adding function definitions, or after opening an existing file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e125a1f4b01ec045b13c222789290bf79d3655aa" translate="yes" xml:space="preserve">
          <source>In an editor, import statements have no effect until one runs the file. One might want to run a file after writing the import statements at the top, or immediately run an existing file before editing.</source>
          <target state="translated">在编辑器中,导入语句在运行文件之前是没有效果的。人们可能希望在顶部写完导入语句后运行文件,或者在编辑前立即运行一个现有的文件。</target>
        </trans-unit>
        <trans-unit id="7585fd505655ba1d8efec7b44c9872a4847511d0" translate="yes" xml:space="preserve">
          <source>In any case, the parameter value (either the returned string, or the &lt;code&gt;VALUE&lt;/code&gt; item in the 3-tuple) is always unquoted, unless &lt;em&gt;unquote&lt;/em&gt; is set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">在任何情况下，除非将&lt;em&gt;unquote&lt;/em&gt;设置为 &lt;code&gt;False&lt;/code&gt; ，否则始终将参数值（返回的字符串或三元组中的 &lt;code&gt;VALUE&lt;/code&gt; 项）取消引用。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ea5e474a620a942ee44b6caa68731405ccc53b7" translate="yes" xml:space="preserve">
          <source>In asyncio, child processes are created with &lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt;&lt;code&gt;create_subprocess_exec()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">在asyncio中，子进程是使用&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt; &lt;code&gt;create_subprocess_exec()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;函数创建的。</target>
        </trans-unit>
        <trans-unit id="ee9c6189bdb6109a3314f3a6fa2e8324565b928c" translate="yes" xml:space="preserve">
          <source>In calls to &lt;a href=&quot;#time.mktime&quot;&gt;&lt;code&gt;mktime()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;tm_isdst&lt;/code&gt; may be set to 1 when daylight savings time is in effect, and 0 when it is not. A value of -1 indicates that this is not known, and will usually result in the correct state being filled in.</source>
          <target state="translated">在对&lt;a href=&quot;#time.mktime&quot;&gt; &lt;code&gt;mktime()&lt;/code&gt; 的&lt;/a&gt;调用中，夏令时生效时， &lt;code&gt;tm_isdst&lt;/code&gt; 可以设置为1 ，反之则可以设置为0。值-1表示这是未知的，通常会导致填写正确的状态。</target>
        </trans-unit>
        <trans-unit id="1319e988c1be1fbecde5f67e0f759a6ee96a90b4" translate="yes" xml:space="preserve">
          <source>In case just an immediate sorting of the nodes in the graph is required and no parallelism is involved, the convenience method &lt;a href=&quot;#graphlib.TopologicalSorter.static_order&quot;&gt;&lt;code&gt;TopologicalSorter.static_order()&lt;/code&gt;&lt;/a&gt; can be used directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc48b1dca0b1da787a928b9dd93dc589bfde5754" translate="yes" xml:space="preserve">
          <source>In cases when only the library handle is available rather than the object, accessing a function raises an auditing event &lt;code&gt;ctypes.dlsym/handle&lt;/code&gt; with arguments &lt;code&gt;handle&lt;/code&gt; (the raw library handle) and &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">在只有库句柄而不是对象可用的情况下，访问函数会引发带有参数 &lt;code&gt;handle&lt;/code&gt; （原始库句柄）和 &lt;code&gt;name&lt;/code&gt; 的审核事件 &lt;code&gt;ctypes.dlsym/handle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30db5ca10a27995819aa59775e12a2ebd80f3013" translate="yes" xml:space="preserve">
          <source>In cases where canonical output is not applicable but a specific attribute order is still desirable on output, code should aim for creating the attributes directly in the desired order, to avoid perceptual mismatches for readers of the code. In cases where this is difficult to achieve, a recipe like the following can be applied prior to serialisation to enforce an order independently from the Element creation:</source>
          <target state="translated">如果规范输出不适用,但在输出时仍希望有特定的属性顺序,代码应以直接按所需顺序创建属性为目标,以避免代码的读者出现感知上的不匹配。在难以实现的情况下,可以在序列化之前应用类似下面的配方,以强制执行独立于元素创建的顺序。</target>
        </trans-unit>
        <trans-unit id="9a76a269c9a0813ca8158d4ca521d20cd58a501b" translate="yes" xml:space="preserve">
          <source>In config parsers, values can span multiple lines as long as they are indented more than the key that holds them. By default parsers also let empty lines to be parts of values. At the same time, keys can be arbitrarily indented themselves to improve readability. In consequence, when configuration files get big and complex, it is easy for the user to lose track of the file structure. Take for instance:</source>
          <target state="translated">在配置解析器中,只要值的缩进量大于存放值的键,就可以跨越多行。默认情况下,解析器也允许空行成为值的一部分。同时,键本身也可以任意缩进,以提高可读性。因此,当配置文件变得很大很复杂时,用户很容易对文件结构失去兴趣。举个例子</target>
        </trans-unit>
        <trans-unit id="4474384d258039b476c26e51f3dc73c8e1621318" translate="yes" xml:space="preserve">
          <source>In contrast, &lt;code&gt;NewType&lt;/code&gt; declares one type to be a &lt;em&gt;subtype&lt;/em&gt; of another. Doing &lt;code&gt;Derived = NewType('Derived', Original)&lt;/code&gt; will make the static type checker treat &lt;code&gt;Derived&lt;/code&gt; as a &lt;em&gt;subclass&lt;/em&gt; of &lt;code&gt;Original&lt;/code&gt;, which means a value of type &lt;code&gt;Original&lt;/code&gt; cannot be used in places where a value of type &lt;code&gt;Derived&lt;/code&gt; is expected. This is useful when you want to prevent logic errors with minimal runtime cost.</source>
          <target state="translated">相反， &lt;code&gt;NewType&lt;/code&gt; 将一种&lt;em&gt;类型&lt;/em&gt;声明为另一种类型的&lt;em&gt;子类型&lt;/em&gt;。这样做 &lt;code&gt;Derived = NewType('Derived', Original)&lt;/code&gt; 会使静态类型检查治疗 &lt;code&gt;Derived&lt;/code&gt; 作为&lt;em&gt;子类&lt;/em&gt;的 &lt;code&gt;Original&lt;/code&gt; 的，这意味着类型的值 &lt;code&gt;Original&lt;/code&gt; 不能在类型的值的地方可以使用 &lt;code&gt;Derived&lt;/code&gt; 的预期。当您希望以最小的运行时间成本来防止逻辑错误时，这很有用。</target>
        </trans-unit>
        <trans-unit id="808194d88f87f062e3f917a77c2fd08a648ff57f" translate="yes" xml:space="preserve">
          <source>In debug builds, the list of default warning filters is empty.</source>
          <target state="translated">在调试构建中,默认的警告过滤器列表为空。</target>
        </trans-unit>
        <trans-unit id="acc6dc48ce98dfe1787544928804d1351131ed2d" translate="yes" xml:space="preserve">
          <source>In developing fixed-point applications, it is convenient to define functions to handle the &lt;code&gt;quantize()&lt;/code&gt; step:</source>
          <target state="translated">在开发定点应用程序时，可以方便地定义一些函数来处理 &lt;code&gt;quantize()&lt;/code&gt; 步骤：</target>
        </trans-unit>
        <trans-unit id="c77a995d67e443f20620e90b24b791b5af7d08e6" translate="yes" xml:space="preserve">
          <source>In earlier versions, the terminator was hardcoded as &lt;code&gt;'\n'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c977d792bc856342f19c64cada581050dd1e4694" translate="yes" xml:space="preserve">
          <source>In either case, the exception itself is always shown after any chained exceptions so that the final line of the traceback always shows the last exception that was raised.</source>
          <target state="translated">无论是哪种情况,异常本身总是显示在任何链状异常之后,因此回溯的最后一行总是显示最后引发的异常。</target>
        </trans-unit>
        <trans-unit id="22384914a04d22b7049ea2fa018ad8b0c6e7dc2b" translate="yes" xml:space="preserve">
          <source>In either case, when producing an &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;-compliant header using &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; rules, the string will be encoded using the output codec of the charset. If the string cannot be encoded using the output codec, a UnicodeError will be raised.</source>
          <target state="translated">在任何一种情况下，当使用&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;规则生成与&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;兼容的标头时，将使用字符集的输出编解码器对字符串进行编码。如果无法使用输出编解码器对字符串进行编码，则会引发UnicodeError。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="245fefefdc72a1779e932cbff8e651714d2e5fec" translate="yes" xml:space="preserve">
          <source>In emergencies this method will discard any data held in the input and/or output buffers and the producer queue.</source>
          <target state="translated">在紧急情况下,该方法将丢弃输入和/或输出缓冲区和生产者队列中的任何数据。</target>
        </trans-unit>
        <trans-unit id="965c8af21ae4828757fda71d55deb0166d6df2fd" translate="yes" xml:space="preserve">
          <source>In essence, a Condition object combines the functionality of an &lt;a href=&quot;#asyncio.Event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;#asyncio.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt;. It is possible to have multiple Condition objects share one Lock, which allows coordinating exclusive access to a shared resource between different tasks interested in particular states of that shared resource.</source>
          <target state="translated">本质上，Condition对象结合了&lt;a href=&quot;#asyncio.Event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; 的功能&lt;/a&gt;。可能有多个条件对象共享一个锁，这允许在对共享资源的特定状态感兴趣的不同任务之间协调对共享资源的互斥访问。</target>
        </trans-unit>
        <trans-unit id="aab7997c363058025f4902dd79fa90e9d4f7cc8a" translate="yes" xml:space="preserve">
          <source>In fact, the above algorithm is first tried for methods named &lt;code&gt;default_open()&lt;/code&gt;. If all such methods return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the algorithm is repeated for methods named like &lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt;. If all such methods return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the algorithm is repeated for methods named &lt;code&gt;unknown_open()&lt;/code&gt;.</source>
          <target state="translated">实际上，首先对名为 &lt;code&gt;default_open()&lt;/code&gt; 的方法尝试了上述算法。如果所有此类方法都返回&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，则对名为 &lt;code&gt;&amp;lt;protocol&amp;gt;_open()&lt;/code&gt; 的方法重复该算法。如果所有此类方法都返回&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，则对名为 &lt;code&gt;unknown_open()&lt;/code&gt; 的方法重复该算法。</target>
        </trans-unit>
        <trans-unit id="1a31e0e92af099e0fc4c6092b67160da2329774b" translate="yes" xml:space="preserve">
          <source>In general (and especially on systems without overallocation), it is recommended to estimate even tighter bounds and set the &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt; trap if all calculations are expected to be exact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26db7d03f5d7b2f8484e83cc9df341e5fcb76c6d" translate="yes" xml:space="preserve">
          <source>In general, &lt;em&gt;t1&lt;/em&gt; * i == &lt;em&gt;t1&lt;/em&gt; * (i-1) + &lt;em&gt;t1&lt;/em&gt; is true. (1)</source>
          <target state="translated">通常，&lt;em&gt;t1&lt;/em&gt; * i == &lt;em&gt;t1&lt;/em&gt; *（i-1）+ &lt;em&gt;t1&lt;/em&gt;为真。（1）</target>
        </trans-unit>
        <trans-unit id="0506d07a792bdf1420c6f5ee2d8683b4bb973f20" translate="yes" xml:space="preserve">
          <source>In general, it should be the case that &lt;a href=&quot;#http.cookies.BaseCookie.value_encode&quot;&gt;&lt;code&gt;value_encode()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookies.BaseCookie.value_decode&quot;&gt;&lt;code&gt;value_decode()&lt;/code&gt;&lt;/a&gt; are inverses on the range of &lt;em&gt;value_decode&lt;/em&gt;.</source>
          <target state="translated">通常，应该是&lt;a href=&quot;#http.cookies.BaseCookie.value_encode&quot;&gt; &lt;code&gt;value_encode()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#http.cookies.BaseCookie.value_decode&quot;&gt; &lt;code&gt;value_decode()&lt;/code&gt; &lt;/a&gt;在&lt;em&gt;value_decode&lt;/em&gt;的范围上是逆的&lt;em&gt;情况&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="df0b5cf5765724139c03b2e68725a9a7fc0cadf5" translate="yes" xml:space="preserve">
          <source>In general, protocol implementations that use transport-based APIs such as &lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt; are faster than implementations that work with sockets directly. However, there are some use cases when performance is not critical, and working with &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; objects directly is more convenient.</source>
          <target state="translated">通常，使用基于传输的API的协议实现&lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;例如loop.create_connection（）和&lt;a href=&quot;#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; )&lt;/a&gt;比直接使用套接字的实现更快。但是，在一些用例中，性能并不是很关键，直接使用&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;对象更为方便。</target>
        </trans-unit>
        <trans-unit id="20cd72495b8797b1b45d990ccd4902f5c5f42a41" translate="yes" xml:space="preserve">
          <source>In general, the &lt;a href=&quot;#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module assumes that flags like &lt;code&gt;-f&lt;/code&gt; and &lt;code&gt;--bar&lt;/code&gt; indicate &lt;em&gt;optional&lt;/em&gt; arguments, which can always be omitted at the command line. To make an option &lt;em&gt;required&lt;/em&gt;, &lt;code&gt;True&lt;/code&gt; can be specified for the &lt;code&gt;required=&lt;/code&gt; keyword argument to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">通常，&lt;a href=&quot;#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;模块假定 &lt;code&gt;-f&lt;/code&gt; 和 &lt;code&gt;--bar&lt;/code&gt; 之类的标志表示&lt;em&gt;可选&lt;/em&gt;参数，可以在命令行中始终忽略它们。为了使选项成为&lt;em&gt;必需&lt;/em&gt;，可以为&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;required=&lt;/code&gt; 关键字参数指定 &lt;code&gt;True&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c4db8812f85eaab112b76e9bb72d0ea809a10832" translate="yes" xml:space="preserve">
          <source>In general, the LRU cache should only be used when you want to reuse previously computed values. Accordingly, it doesn&amp;rsquo;t make sense to cache functions with side-effects, functions that need to create distinct mutable objects on each call, or impure functions such as time() or random().</source>
          <target state="translated">通常，仅当您要重用先前计算的值时，才应使用LRU缓存。因此，缓存具有副作用的函数，需要在每次调用时创建不同的可变对象的函数或不纯函数（例如time（）或random（））都是没有意义的。</target>
        </trans-unit>
        <trans-unit id="0855957cf96cc591654edbae97ba73e1a179c2a2" translate="yes" xml:space="preserve">
          <source>In general, this function should be preferred over &lt;a href=&quot;os#os.getlogin&quot;&gt;&lt;code&gt;os.getlogin()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常，此功能应优于&lt;a href=&quot;os#os.getlogin&quot;&gt; &lt;code&gt;os.getlogin()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="440426040cf7cbfc6d96c968361e3b6f6f71b8cf" translate="yes" xml:space="preserve">
          <source>In general, user code should try not to depend on a specific ordering of attributes, given that the &lt;a href=&quot;https://www.w3.org/TR/xml-infoset/&quot;&gt;XML Information Set&lt;/a&gt; explicitly excludes the attribute order from conveying information. Code should be prepared to deal with any ordering on input. In cases where deterministic XML output is required, e.g. for cryptographic signing or test data sets, canonical serialisation is available with the &lt;a href=&quot;#xml.etree.ElementTree.canonicalize&quot;&gt;&lt;code&gt;canonicalize()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">通常，假设&lt;a href=&quot;https://www.w3.org/TR/xml-infoset/&quot;&gt;XML信息集&lt;/a&gt;明确将属性顺序从传达信息中排除，则用户代码应尽量不依赖于属性的特定顺序。应该准备代码以处理输入的任何顺序。在需要确定性XML输出的情况下（例如，对于加密签名或测试数据集），可以使用&lt;a href=&quot;#xml.etree.ElementTree.canonicalize&quot;&gt; &lt;code&gt;canonicalize()&lt;/code&gt; &lt;/a&gt;函数进行规范序列化。</target>
        </trans-unit>
        <trans-unit id="c8e833685e558fad9e6d2aed4b5edd8ed53ab53a" translate="yes" xml:space="preserve">
          <source>In general, you can pack any of the most common XDR data types by calling the appropriate &lt;code&gt;pack_type()&lt;/code&gt; method. Each method takes a single argument, the value to pack. The following simple data type packing methods are supported: &lt;code&gt;pack_uint()&lt;/code&gt;, &lt;code&gt;pack_int()&lt;/code&gt;, &lt;code&gt;pack_enum()&lt;/code&gt;, &lt;code&gt;pack_bool()&lt;/code&gt;, &lt;code&gt;pack_uhyper()&lt;/code&gt;, and &lt;code&gt;pack_hyper()&lt;/code&gt;.</source>
          <target state="translated">通常，可以通过调用适当的 &lt;code&gt;pack_type()&lt;/code&gt; 方法来打包任何最常见的XDR数据类型。每个方法采用一个参数，即要打包的值。支持以下简单的数据类型打包方法： &lt;code&gt;pack_uint()&lt;/code&gt; ， &lt;code&gt;pack_int()&lt;/code&gt; ， &lt;code&gt;pack_enum()&lt;/code&gt; ， &lt;code&gt;pack_bool()&lt;/code&gt; ， &lt;code&gt;pack_uhyper()&lt;/code&gt; 和 &lt;code&gt;pack_hyper()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7051fb77a6d138d8bb42933ac13b4fab45cc061e" translate="yes" xml:space="preserve">
          <source>In general, you will want to use the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package&amp;rsquo;s features to construct an email message, which you can then send via &lt;a href=&quot;#smtplib.SMTP.send_message&quot;&gt;&lt;code&gt;send_message()&lt;/code&gt;&lt;/a&gt;; see &lt;a href=&quot;email.examples#email-examples&quot;&gt;email: Examples&lt;/a&gt;.</source>
          <target state="translated">通常，您将需要使用&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;包的功能来构造电子邮件，然后可以通过&lt;a href=&quot;#smtplib.SMTP.send_message&quot;&gt; &lt;code&gt;send_message()&lt;/code&gt; &lt;/a&gt;发送该电子邮件；请参阅&lt;a href=&quot;email.examples#email-examples&quot;&gt;电子邮件：示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="840dd19adeba7204bf237688be99f304d742eb60" translate="yes" xml:space="preserve">
          <source>In its basic form, &lt;a href=&quot;#module-pprint&quot;&gt;&lt;code&gt;pprint()&lt;/code&gt;&lt;/a&gt; shows the whole object:</source>
          <target state="translated">&lt;a href=&quot;#module-pprint&quot;&gt; &lt;code&gt;pprint()&lt;/code&gt; 的&lt;/a&gt;基本形式显示了整个对象：</target>
        </trans-unit>
        <trans-unit id="70cdc658f4f5ab332fd8069815a9324e25e35d83" translate="yes" xml:space="preserve">
          <source>In less formal terms, the replacement field can start with a &lt;em&gt;field_name&lt;/em&gt; that specifies the object whose value is to be formatted and inserted into the output instead of the replacement field. The &lt;em&gt;field_name&lt;/em&gt; is optionally followed by a &lt;em&gt;conversion&lt;/em&gt; field, which is preceded by an exclamation point &lt;code&gt;'!'&lt;/code&gt;, and a &lt;em&gt;format_spec&lt;/em&gt;, which is preceded by a colon &lt;code&gt;':'&lt;/code&gt;. These specify a non-default format for the replacement value.</source>
          <target state="translated">用不太正式的术语来说，替换字段可以以&lt;em&gt;field_name&lt;/em&gt;开头，该字段指定要格式化其值并将其插入输出的对象，而不是替换字段。可以选择在&lt;em&gt;field_name&lt;/em&gt;后面跟一个&lt;em&gt;转换&lt;/em&gt;字段，在其前面加上一个感叹号 &lt;code&gt;'!'&lt;/code&gt; 。以及&lt;em&gt;format_spec&lt;/em&gt;，&lt;em&gt;后跟&lt;/em&gt;冒号 &lt;code&gt;':'&lt;/code&gt; 。这些指定替换值的非默认格式。</target>
        </trans-unit>
        <trans-unit id="207eed5cab33c7fd44f50216fdcd9b7ae0089e35" translate="yes" xml:space="preserve">
          <source>In less ideal cases, applications can be checked for use of deprecated interfaces by passing &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-Wd&lt;/code&gt;&lt;/a&gt; to the Python interpreter (this is shorthand for &lt;code&gt;-W default&lt;/code&gt;) or setting &lt;code&gt;PYTHONWARNINGS=default&lt;/code&gt; in the environment. This enables default handling for all warnings, including those that are ignored by default. To change what action is taken for encountered warnings you can change what argument is passed to &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-W&lt;/code&gt;&lt;/a&gt; (e.g. &lt;code&gt;-W error&lt;/code&gt;). See the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-W&lt;/code&gt;&lt;/a&gt; flag for more details on what is possible.</source>
          <target state="translated">在不太理想的情况下，可以通过将&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-w&quot;&gt; &lt;code&gt;-Wd&lt;/code&gt; &lt;/a&gt;传递给Python解释器（这是 &lt;code&gt;-W default&lt;/code&gt; 的简写）或在环境中设置 &lt;code&gt;PYTHONWARNINGS=default&lt;/code&gt; 来检查应用程序是否已弃用接口。这将启用所有警告的默认处理，包括默认情况下被忽略的警告。要更改针对遇到的警告采取的操作，您可以更改传递给&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-w&quot;&gt; &lt;code&gt;-W&lt;/code&gt; 的&lt;/a&gt;参数（例如 &lt;code&gt;-W error&lt;/code&gt; ）。有关可能的更多详细信息，请参见&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-w&quot;&gt; &lt;code&gt;-W&lt;/code&gt; &lt;/a&gt;标志。</target>
        </trans-unit>
        <trans-unit id="5deeb99b968c8e414257704717db80af0082601c" translate="yes" xml:space="preserve">
          <source>In less ideal cases, applications can be checked for use of deprecated interfaces by passing &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-Wd&lt;/code&gt;&lt;/a&gt; to the Python interpreter (this is shorthand for &lt;code&gt;-W default&lt;/code&gt;) or setting &lt;code&gt;PYTHONWARNINGS=default&lt;/code&gt; in the environment. This enables default handling for all warnings, including those that are ignored by default. To change what action is taken for encountered warnings you can change what argument is passed to &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-W&lt;/code&gt;&lt;/a&gt; (e.g. &lt;code&gt;-W error&lt;/code&gt;). See the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-W&lt;/code&gt;&lt;/a&gt; flag for more details on what is possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534991bf3a76b961bedcef085ae867583416a5d2" translate="yes" xml:space="preserve">
          <source>In many cases you will just be able to add &lt;code&gt;autospec=True&lt;/code&gt; to your existing &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; calls and then be protected against bugs due to typos and api changes.</source>
          <target state="translated">在许多情况下，您只需将 &lt;code&gt;autospec=True&lt;/code&gt; 添加到现有的&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;调用中，然后就可以防止由于拼写错误和api更改而导致的错误。</target>
        </trans-unit>
        <trans-unit id="cd8b6f5d72094bed2a418a171229c3a3461791a6" translate="yes" xml:space="preserve">
          <source>In many use-cases one doesn&amp;rsquo;t care what the actual value of an enumeration is. There are several ways to define this type of simple enumeration:</source>
          <target state="translated">在许多用例中，人们并不关心枚举的实际值是多少。有几种方法可以定义这种简单的枚举类型：</target>
        </trans-unit>
        <trans-unit id="683dda921eb9dde69c65282fd8a1442adc4883df" translate="yes" xml:space="preserve">
          <source>In most cases a copy-and-paste of an interactive console session works fine, but doctest isn&amp;rsquo;t trying to do an exact emulation of any specific Python shell.</source>
          <target state="translated">在大多数情况下，交互式控制台会话的复制和粘贴效果很好，但是doctest并没有尝试对任何特定的Python shell进行精确的仿真。</target>
        </trans-unit>
        <trans-unit id="3c95379866d99798cdc6b44f569e45b47b03caff" translate="yes" xml:space="preserve">
          <source>In most cases, end users of Python shouldn&amp;rsquo;t need to invoke this module directly (as &lt;code&gt;pip&lt;/code&gt; should be bootstrapped by default), but it may be needed if installing &lt;code&gt;pip&lt;/code&gt; was skipped when installing Python (or when creating a virtual environment) or after explicitly uninstalling &lt;code&gt;pip&lt;/code&gt;.</source>
          <target state="translated">在大多数情况下，Python的最终用户不需要直接调用此模块（默认情况下应自举 &lt;code&gt;pip&lt;/code&gt; ），但是如果在安装Python（或创建虚拟环境）时或之后跳过了安装 &lt;code&gt;pip&lt;/code&gt; ，则可能需要明确卸载 &lt;code&gt;pip&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="976b8e0f0142bf68fb963efdbb1f64f443c3a2d4" translate="yes" xml:space="preserve">
          <source>In most cases, no additional code is needed to make instances picklable. By default, pickle will retrieve the class and the attributes of an instance via introspection. When a class instance is unpickled, its &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method is usually &lt;em&gt;not&lt;/em&gt; invoked. The default behaviour first creates an uninitialized instance and then restores the saved attributes. The following code shows an implementation of this behaviour:</source>
          <target state="translated">在大多数情况下，不需要其他代码即可使实例可腌制。默认情况下，pickle将通过自省检索实例的类和属性。当取消实例化类实例时，通常&lt;em&gt;不&lt;/em&gt;调用其&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;方法。默认行为首先创建一个未初始化的实例，然后还原保存的属性。下面的代码显示了此行为的实现：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cabb038d56d4da17821816a55c6f8a5a0d8697d5" translate="yes" xml:space="preserve">
          <source>In most cases, no additional code is needed to make instances picklable. By default, pickle will retrieve the class and the attributes of an instance via introspection. When a class instance is unpickled, its &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method is usually &lt;em&gt;not&lt;/em&gt; invoked. The default behaviour first creates an uninitialized instance and then restores the saved attributes. The following code shows an implementation of this behaviour:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4529cbb146eb6065739aafbd505c95e547aa3ac8" translate="yes" xml:space="preserve">
          <source>In most coding situations, strings are translated where they are coded. Occasionally however, you need to mark strings for translation, but defer actual translation until later. A classic example is:</source>
          <target state="translated">在大多数编码情况下,字符串在编码的地方被翻译。然而,偶尔您需要标记字符串进行翻译,但将实际翻译推迟到以后。一个典型的例子是:</target>
        </trans-unit>
        <trans-unit id="c31666ba6595f7dfef709e3c800c98df8b264362" translate="yes" xml:space="preserve">
          <source>In most of the cases the syntax is similar to the old &lt;code&gt;%&lt;/code&gt;-formatting, with the addition of the &lt;code&gt;{}&lt;/code&gt; and with &lt;code&gt;:&lt;/code&gt; used instead of &lt;code&gt;%&lt;/code&gt;. For example, &lt;code&gt;'%03.2f'&lt;/code&gt; can be translated to &lt;code&gt;'{:03.2f}'&lt;/code&gt;.</source>
          <target state="translated">在大多数情况下，语法是类似于旧 &lt;code&gt;%&lt;/code&gt; -formatting，增加的 &lt;code&gt;{}&lt;/code&gt; 与 &lt;code&gt;:&lt;/code&gt; 用来代替 &lt;code&gt;%&lt;/code&gt; 。例如，可以将 &lt;code&gt;'%03.2f'&lt;/code&gt; 转换为 &lt;code&gt;'{:03.2f}'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1d67672f1befe30b1ea6b9c0e813f8ca041dc72" translate="yes" xml:space="preserve">
          <source>In most situations, however, there&amp;rsquo;s only one form control with a particular name in a form and then you expect and need only one value associated with this name. So you write a script containing for example this code:</source>
          <target state="translated">但是，在大多数情况下，表单中只有一个具有特定名称的表单控件，然后您期望并且仅需要一个与此名称相关联的值。因此，您编写了一个包含以下代码的脚本：</target>
        </trans-unit>
        <trans-unit id="183e56009447f48c5edb38c8e56a603f6df422c3" translate="yes" xml:space="preserve">
          <source>In most typical applications, &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will take care of formatting and printing any usage or error messages. However, several formatting methods are available:</source>
          <target state="translated">在大多数典型应用程序中，&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;将负责格式化和打印任何用法或错误消息。但是，有几种格式化方法可用：</target>
        </trans-unit>
        <trans-unit id="b6110d599bf96dfc74514b0a56521412fa449261" translate="yes" xml:space="preserve">
          <source>In normal operation it should not be necessary to call this method explicitly. It is used to implement other methods and may be useful for testing private extensions.</source>
          <target state="translated">在正常的操作中,应该没有必要显式地调用这个方法。它被用来实现其他方法,可能对测试私有扩展很有用。</target>
        </trans-unit>
        <trans-unit id="f8321d4dc57900cf19439382b3532766a68fb010" translate="yes" xml:space="preserve">
          <source>In normal operation it should not be necessary to call this method explicitly. It will be implicitly called by the &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt; when necessary.</source>
          <target state="translated">在正常操作中，不必显式调用此方法。必要时将由&lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;sendmail()&lt;/code&gt; &lt;/a&gt;隐式调用它。</target>
        </trans-unit>
        <trans-unit id="a16e8babf22923c28939e3500c17a67bb3cff77f" translate="yes" xml:space="preserve">
          <source>In order for a class to define its own copy implementation, it can define special methods &lt;code&gt;__copy__()&lt;/code&gt; and &lt;code&gt;__deepcopy__()&lt;/code&gt;. The former is called to implement the shallow copy operation; no additional arguments are passed. The latter is called to implement the deep copy operation; it is passed one argument, the &lt;code&gt;memo&lt;/code&gt; dictionary. If the &lt;code&gt;__deepcopy__()&lt;/code&gt; implementation needs to make a deep copy of a component, it should call the &lt;a href=&quot;#copy.deepcopy&quot;&gt;&lt;code&gt;deepcopy()&lt;/code&gt;&lt;/a&gt; function with the component as first argument and the memo dictionary as second argument.</source>
          <target state="translated">为了让一个类定义自己的副本实现，它可以定义特殊的方法 &lt;code&gt;__copy__()&lt;/code&gt; 和 &lt;code&gt;__deepcopy__()&lt;/code&gt; 。前者被称为实现浅拷贝操作；没有传递其他参数。后者被称为实现深度复制操作。它传递了一个参数，即 &lt;code&gt;memo&lt;/code&gt; 字典。如果 &lt;code&gt;__deepcopy__()&lt;/code&gt; 实现需要复制组件的深层副本，则应使用该组件作为第一个参数，并使用备注字典作为第二个参数来调用&lt;a href=&quot;#copy.deepcopy&quot;&gt; &lt;code&gt;deepcopy()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="2e949fa3a8f8fff7c3917f737f8813ee6973dfb5" translate="yes" xml:space="preserve">
          <source>In order to correctly interoperate with the abstract base class machinery, the descriptor must identify itself as abstract using &lt;code&gt;__isabstractmethod__&lt;/code&gt;. In general, this attribute should be &lt;code&gt;True&lt;/code&gt; if any of the methods used to compose the descriptor are abstract. For example, Python&amp;rsquo;s built-in &lt;a href=&quot;functions#property&quot;&gt;&lt;code&gt;property&lt;/code&gt;&lt;/a&gt; does the equivalent of:</source>
          <target state="translated">为了正确地与抽象基类机制进行互操作，描述符必须使用 &lt;code&gt;__isabstractmethod__&lt;/code&gt; 将自身标识为抽象。通常，如果用于构成描述符的任何方法都是抽象的，则此属性应为 &lt;code&gt;True&lt;/code&gt; 。例如，Python的内置&lt;a href=&quot;functions#property&quot;&gt; &lt;code&gt;property&lt;/code&gt; &lt;/a&gt;等效于：</target>
        </trans-unit>
        <trans-unit id="c467fc7d115d441ac819d2c9cc479eaeade84679" translate="yes" xml:space="preserve">
          <source>In order to find objects and their documentation, &lt;a href=&quot;#module-pydoc&quot;&gt;&lt;code&gt;pydoc&lt;/code&gt;&lt;/a&gt; imports the module(s) to be documented. Therefore, any code on module level will be executed on that occasion. Use an &lt;code&gt;if __name__ == '__main__':&lt;/code&gt; guard to only execute code when a file is invoked as a script and not just imported.</source>
          <target state="translated">为了找到对象及其文档，&lt;a href=&quot;#module-pydoc&quot;&gt; &lt;code&gt;pydoc&lt;/code&gt; &lt;/a&gt;导入要记录的模块。因此，此时将执行模块级别的任何代码。使用 &lt;code&gt;if __name__ == '__main__':&lt;/code&gt; 防护仅在将文件作为脚本调用而不仅仅是导入时才执行代码。</target>
        </trans-unit>
        <trans-unit id="397d9ba9a94e1a39ad054c3d3560e0518f095dd9" translate="yes" xml:space="preserve">
          <source>In order to prepare your code for I18N, you need to look at all the strings in your files. Any string that needs to be translated should be marked by wrapping it in &lt;code&gt;_('...')&lt;/code&gt; &amp;mdash; that is, a call to the function &lt;code&gt;_()&lt;/code&gt;. For example:</source>
          <target state="translated">为了准备I18N的代码，您需要查看文件中的所有字符串。任何需要翻译的字符串都应通过将其包装在 &lt;code&gt;_('...')&lt;/code&gt; 中进行标记，即对函数 &lt;code&gt;_()&lt;/code&gt; 的调用。例如：</target>
        </trans-unit>
        <trans-unit id="7a53010fccc6cd571ec768b9ab052d773d9305f6" translate="yes" xml:space="preserve">
          <source>In order to preserve backwards compatibility, enum values are also present in the &lt;a href=&quot;http.client#module-http.client&quot;&gt;&lt;code&gt;http.client&lt;/code&gt;&lt;/a&gt; module in the form of constants. The enum name is equal to the constant name (i.e. &lt;code&gt;http.HTTPStatus.OK&lt;/code&gt; is also available as &lt;code&gt;http.client.OK&lt;/code&gt;).</source>
          <target state="translated">为了保持向后兼容性，枚举值也以常量的形式出现在&lt;a href=&quot;http.client#module-http.client&quot;&gt; &lt;code&gt;http.client&lt;/code&gt; &lt;/a&gt;模块中。枚举名称等于常量名称（即， &lt;code&gt;http.HTTPStatus.OK&lt;/code&gt; 也可以作为 &lt;code&gt;http.client.OK&lt;/code&gt; 使用）。</target>
        </trans-unit>
        <trans-unit id="481a2a420e5dd7f44eee0da58267e4d5486f1e6a" translate="yes" xml:space="preserve">
          <source>In order to stop comparison from falling back to the default scheme of comparing object addresses, datetime comparison normally raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if the other comparand isn&amp;rsquo;t also a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object. However, &lt;code&gt;NotImplemented&lt;/code&gt; is returned instead if the other comparand has a &lt;code&gt;timetuple()&lt;/code&gt; attribute. This hook gives other kinds of date objects a chance at implementing mixed-type comparison. If not, when a &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object is compared to an object of a different type, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised unless the comparison is &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt;. The latter cases return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, respectively.</source>
          <target state="translated">为了防止比较返回到比较对象地址的默认方案，如果另一个比较符也不是&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象，则日期时间比较通常会引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。但是，如果另一个比较 &lt;code&gt;timetuple()&lt;/code&gt; 具有timetuple（）属性，则返回 &lt;code&gt;NotImplemented&lt;/code&gt; 。该挂钩为其他日期对象提供了实现混合类型比较的机会。如果不是，则将&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象与其他类型的对象进行比较时，除非比较 &lt;code&gt;==&lt;/code&gt; 或 &lt;code&gt;!=&lt;/code&gt; ,否则&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。后面的情况分别返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07c225cf30fe4108ef791e90675347d57b8d70e1" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;date1 &amp;lt; date2&lt;/code&gt; if and only if &lt;code&gt;date1.toordinal() &amp;lt;
date2.toordinal()&lt;/code&gt;. Date comparison raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if the other comparand isn&amp;rsquo;t also a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object. However, &lt;code&gt;NotImplemented&lt;/code&gt; is returned instead if the other comparand has a &lt;code&gt;timetuple()&lt;/code&gt; attribute. This hook gives other kinds of date objects a chance at implementing mixed-type comparison. If not, when a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object is compared to an object of a different type, &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is raised unless the comparison is &lt;code&gt;==&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt;. The latter cases return &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, respectively.</source>
          <target state="translated">换句话说，当且仅当 &lt;code&gt;date1.toordinal() &amp;lt; date2.toordinal()&lt;/code&gt; ， &lt;code&gt;date1 &amp;lt; date2&lt;/code&gt; 。如果另一个比较符也不是&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;对象，则日期比较会引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。但是，如果另一个比较 &lt;code&gt;timetuple()&lt;/code&gt; 具有timetuple（）属性，则返回 &lt;code&gt;NotImplemented&lt;/code&gt; 。该挂钩为其他日期对象提供了实现混合类型比较的机会。如果不是，则将&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;对象与其他类型的对象进行比较时，除非比较 &lt;code&gt;==&lt;/code&gt; 或 &lt;code&gt;!=&lt;/code&gt; ,否则&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。后面的情况分别返回&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e300da15620669a3f28958bece86c7a1fd76bbb5" translate="yes" xml:space="preserve">
          <source>In particular, &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; should be used in preference to the default pseudo-random number generator in the &lt;a href=&quot;random#module-random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; module, which is designed for modelling and simulation, not security or cryptography.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c07f61ca6c800f6888e2710a82a85e90f50bcc3" translate="yes" xml:space="preserve">
          <source>In particular, &lt;a href=&quot;#textwrap.fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt; accepts exactly the same keyword arguments as &lt;a href=&quot;#textwrap.wrap&quot;&gt;&lt;code&gt;wrap()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特别地，&lt;a href=&quot;#textwrap.fill&quot;&gt; &lt;code&gt;fill()&lt;/code&gt; &lt;/a&gt;接受与&lt;a href=&quot;#textwrap.wrap&quot;&gt; &lt;code&gt;wrap()&lt;/code&gt; &lt;/a&gt;完全相同的关键字参数。</target>
        </trans-unit>
        <trans-unit id="1fa9bd11ecdf21c870d5be8de14f439777d27d8a" translate="yes" xml:space="preserve">
          <source>In particularly, &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; should be used in preference to the default pseudo-random number generator in the &lt;a href=&quot;random#module-random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; module, which is designed for modelling and simulation, not security or cryptography.</source>
          <target state="translated">特别是，应优先使用&lt;a href=&quot;random#module-random&quot;&gt; &lt;code&gt;random&lt;/code&gt; &lt;/a&gt;模块中默认的伪随机数生成器使用的&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;，该生成器是为建模和仿真而设计的，而不是安全性或加密技术。</target>
        </trans-unit>
        <trans-unit id="bed46a3402b9eb2783c1eff866fc79b96a61f33e" translate="yes" xml:space="preserve">
          <source>In previous versions &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; did not start the manager&amp;rsquo;s server process if it was not already started.</source>
          <target state="translated">在以前的版本中，&lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;尚未启动管理器的服务器进程（如果尚未启动）。</target>
        </trans-unit>
        <trans-unit id="24635c5fed7456cbfad369f24972f6f06dd072a4" translate="yes" xml:space="preserve">
          <source>In protocols 2 and newer, classes that implements the &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt; method can dictate the values passed to the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling. The method must return a pair &lt;code&gt;(args, kwargs)&lt;/code&gt; where &lt;em&gt;args&lt;/em&gt; is a tuple of positional arguments and &lt;em&gt;kwargs&lt;/em&gt; a dictionary of named arguments for constructing the object. Those will be passed to the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling.</source>
          <target state="translated">在协议2和更高版本中，实现&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;方法的类可以规定&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;传递给__new __（）方法的值。该方法必须返回一对 &lt;code&gt;(args, kwargs)&lt;/code&gt; ，其中&lt;em&gt;args&lt;/em&gt;是位置参数的元组，而&lt;em&gt;kwargs&lt;/em&gt;是用于构造对象的命名参数的字典。取消选择时，这些将被传递给&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="c2d2d2615a8545e55e8010e6c482ce85ea1d3a7d" translate="yes" xml:space="preserve">
          <source>In protocols 2 and newer, classes that implements the &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt; method can dictate the values passed to the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling. The method must return a pair &lt;code&gt;(args, kwargs)&lt;/code&gt; where &lt;em&gt;args&lt;/em&gt; is a tuple of positional arguments and &lt;em&gt;kwargs&lt;/em&gt; a dictionary of named arguments for constructing the object. Those will be passed to the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6463b988a254956fa89396a7c22c32f2fa351eb6" translate="yes" xml:space="preserve">
          <source>In regular release builds, the default warning filter has the following entries (in order of precedence):</source>
          <target state="translated">在常规版本的构建中,默认的警告过滤器有以下条目(按优先顺序排列)。</target>
        </trans-unit>
        <trans-unit id="197d3ed98970db4c06270429cf9d72971fdb552f" translate="yes" xml:space="preserve">
          <source>In server mode, a client certificate request is sent to the client. The client may either ignore the request or send a certificate in order perform TLS client cert authentication. If the client chooses to send a certificate, it is verified. Any verification error immediately aborts the TLS handshake.</source>
          <target state="translated">在服务器模式下,客户端的证书请求会被发送到客户端,客户端可以忽略该请求,也可以发送证书,以便执行TLS客户端证书认证。客户端可以忽略该请求,也可以发送证书来执行TLS客户端证书认证。如果客户端选择发送证书,那么证书将被验证。任何验证错误都会立即中止TLS握手。</target>
        </trans-unit>
        <trans-unit id="784d3051d9c6418372556580d85a0525b4b27c71" translate="yes" xml:space="preserve">
          <source>In server mode, if you want to authenticate your clients using the SSL layer (rather than using a higher-level authentication mechanism), you&amp;rsquo;ll also have to specify &lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt;&lt;code&gt;CERT_REQUIRED&lt;/code&gt;&lt;/a&gt; and similarly check the client certificate.</source>
          <target state="translated">在服务器模式下，如果要使用SSL层（而不是使用更高级别的身份验证机制）对客户端进行身份验证，则还必须指定&lt;a href=&quot;#ssl.CERT_REQUIRED&quot;&gt; &lt;code&gt;CERT_REQUIRED&lt;/code&gt; &lt;/a&gt;并类似地检查客户端证书。</target>
        </trans-unit>
        <trans-unit id="7fcdfdefb8a40ad8a9c6f3c87a3f6215890319ef" translate="yes" xml:space="preserve">
          <source>In server mode, no certificate is requested from the client, so the client does not send any for client cert authentication.</source>
          <target state="translated">在服务器模式下,不需要向客户端申请证书,所以客户端不发送任何证书用于客户端证书认证。</target>
        </trans-unit>
        <trans-unit id="2aaa992863bbf78157aa977a683358ca504509cc" translate="yes" xml:space="preserve">
          <source>In short, those are: a conversion to &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math#math.trunc&quot;&gt;&lt;code&gt;math.trunc()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#round&quot;&gt;&lt;code&gt;round()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math#math.floor&quot;&gt;&lt;code&gt;math.floor()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;math#math.ceil&quot;&gt;&lt;code&gt;math.ceil()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;functions#divmod&quot;&gt;&lt;code&gt;divmod()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;//&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt;.</source>
          <target state="translated">简而言之，它们是：转换为&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;math#math.trunc&quot;&gt; &lt;code&gt;math.trunc()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;functions#round&quot;&gt; &lt;code&gt;round()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;math#math.floor&quot;&gt; &lt;code&gt;math.floor()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;math#math.ceil&quot;&gt; &lt;code&gt;math.ceil()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;functions#divmod&quot;&gt; &lt;code&gt;divmod()&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;//&lt;/code&gt; ， &lt;code&gt;%&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31dcfc591206e9e4f3d38c565f3b33cf822b6daf" translate="yes" xml:space="preserve">
          <source>In single threaded environments, it is preferable to not use this context at all. Instead, simply create contexts explicitly as described below.</source>
          <target state="translated">在单线程环境中,最好完全不使用这个上下文。相反,只需按照下面的描述显式创建上下文即可。</target>
        </trans-unit>
        <trans-unit id="828ef2d26cdb8bf2d36789116eed3ec4cdddbe9d" translate="yes" xml:space="preserve">
          <source>In some audio formats, such as .WAV files, 16, 24 and 32 bit samples are signed, but 8 bit samples are unsigned. So when converting to 8 bit wide samples for these formats, you need to also add 128 to the result:</source>
          <target state="translated">在一些音频格式中,如.WAV文件,16、24和32位的样本是有符号的,但8位的样本是无符号的。所以在这些格式转换为8位宽采样时,还需要在结果中加入128。</target>
        </trans-unit>
        <trans-unit id="b38f289e088de73aef52f5145e4194895bf3fc55" translate="yes" xml:space="preserve">
          <source>In some cases, it is desirable not to parse an input source at once, but to feed chunks of the document as they get available. Note that the reader will normally not read the entire file, but read it in chunks as well; still &lt;code&gt;parse()&lt;/code&gt; won&amp;rsquo;t return until the entire document is processed. So these interfaces should be used if the blocking behaviour of &lt;code&gt;parse()&lt;/code&gt; is not desirable.</source>
          <target state="translated">在某些情况下，希望不要立即解析输入源，而是在文档块可用时提供它们。请注意，阅读器通常不会读取整个文件，但也会分块读取它。仍然 &lt;code&gt;parse()&lt;/code&gt; 将不会返回，直到整个文档处理。因此，如果不希望 &lt;code&gt;parse()&lt;/code&gt; 的阻塞行为，则应使用这些接口。</target>
        </trans-unit>
        <trans-unit id="4d666daec390d8674c0e643958a689e1dd07bc25" translate="yes" xml:space="preserve">
          <source>In some cases, it may be appropriate to process part of a request synchronously, but to finish processing in a forked child depending on the request data. This can be implemented by using a synchronous server and doing an explicit fork in the request handler class &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">在某些情况下，同步处理请求的一部分可能很合适，但根据请求数据来完成分叉的子代中的处理可能是合适的。这可以通过使用同步服务器并在请求处理程序类&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;方法中进行显式派生来实现。</target>
        </trans-unit>
        <trans-unit id="f0c333efd73cd8e595b6e8b60656420e48337e96" translate="yes" xml:space="preserve">
          <source>In some cases, the existing tests may have been written using the &lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; module. If so, &lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; provides a &lt;code&gt;DocTestSuite&lt;/code&gt; class that can automatically build &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;unittest.TestSuite&lt;/code&gt;&lt;/a&gt; instances from the existing &lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;-based tests.</source>
          <target state="translated">在某些情况下，现有测试可能是使用&lt;a href=&quot;doctest#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;模块编写的。如果是这样，则&lt;a href=&quot;doctest#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;提供了 &lt;code&gt;DocTestSuite&lt;/code&gt; 类，该类可以从现有的基于&lt;a href=&quot;doctest#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;的测试中自动构建&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;unittest.TestSuite&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="13ca056dd65f97d35e7322d84682a7bdc64b0f33" translate="yes" xml:space="preserve">
          <source>In some contexts, the &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module is used to transfer massive amounts of data. Therefore, it can be important to minimize the number of memory copies, to preserve performance and resource consumption. However, normal operation of the &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module, as it transforms a graph-like structure of objects into a sequential stream of bytes, intrinsically involves copying data to and from the pickle stream.</source>
          <target state="translated">在某些情况下，&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块用于传输大量数据。因此，重要的是最小化内存副本的数量，以保持性能和资源消耗。但是，&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块的正常操作是将对象的图形化结构转换为顺序的字节流，因此从本质上讲涉及到与泡菜流之间来回复制数据。</target>
        </trans-unit>
        <trans-unit id="762bcb14ce3c58747a56f114dd90a102eeed2096" translate="yes" xml:space="preserve">
          <source>In string-type &lt;em&gt;repl&lt;/em&gt; arguments, in addition to the character escapes and backreferences described above, &lt;code&gt;\g&amp;lt;name&amp;gt;&lt;/code&gt; will use the substring matched by the group named &lt;code&gt;name&lt;/code&gt;, as defined by the &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; syntax. &lt;code&gt;\g&amp;lt;number&amp;gt;&lt;/code&gt; uses the corresponding group number; &lt;code&gt;\g&amp;lt;2&amp;gt;&lt;/code&gt; is therefore equivalent to &lt;code&gt;\2&lt;/code&gt;, but isn&amp;rsquo;t ambiguous in a replacement such as &lt;code&gt;\g&amp;lt;2&amp;gt;0&lt;/code&gt;. &lt;code&gt;\20&lt;/code&gt; would be interpreted as a reference to group 20, not a reference to group 2 followed by the literal character &lt;code&gt;'0'&lt;/code&gt;. The backreference &lt;code&gt;\g&amp;lt;0&amp;gt;&lt;/code&gt; substitutes in the entire substring matched by the RE.</source>
          <target state="translated">在字符串类型的&lt;em&gt;repl&lt;/em&gt;参数中，除了上述的字符转义和反向引用之外， &lt;code&gt;\g&amp;lt;name&amp;gt;&lt;/code&gt; 还将使用由 &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; 语法定义的名为 &lt;code&gt;name&lt;/code&gt; 的组匹配的子字符串。 &lt;code&gt;\g&amp;lt;number&amp;gt;&lt;/code&gt; 使用相应的组号； &lt;code&gt;\g&amp;lt;2&amp;gt;&lt;/code&gt; 等效于 &lt;code&gt;\2&lt;/code&gt; ，但在诸如 &lt;code&gt;\g&amp;lt;2&amp;gt;0&lt;/code&gt; 类的替换中并没有歧义。 &lt;code&gt;\20&lt;/code&gt; 将被解释为对组20的引用，而不是对组2的引用，后跟文字字符 &lt;code&gt;'0'&lt;/code&gt; 。反向引用 &lt;code&gt;\g&amp;lt;0&amp;gt;&lt;/code&gt; 替换RE匹配的整个子字符串。</target>
        </trans-unit>
        <trans-unit id="91032350df9be823abddd9974a0ded34862f00b1" translate="yes" xml:space="preserve">
          <source>In the Python DOM API, accessor functions are not required. If provided, they should take the form defined by the Python IDL mapping, but these methods are considered unnecessary since the attributes are accessible directly from Python. &amp;ldquo;Set&amp;rdquo; accessors should never be provided for &lt;code&gt;readonly&lt;/code&gt; attributes.</source>
          <target state="translated">在Python DOM API中，不需要访问器函数。如果提供的话，它们应该采用Python IDL映射定义的形式，但是这些属性被认为是不必要的，因为可以直接从Python访问这些属性。切勿为 &lt;code&gt;readonly&lt;/code&gt; 属性提供&amp;ldquo;设置&amp;rdquo;访问器。</target>
        </trans-unit>
        <trans-unit id="4e4271bc7aa921a4604f70acbcc32e5e1ad1a872" translate="yes" xml:space="preserve">
          <source>In the Python use of certificates, a client or server can use a certificate to prove who they are. The other side of a network connection can also be required to produce a certificate, and that certificate can be validated to the satisfaction of the client or server that requires such validation. The connection attempt can be set to raise an exception if the validation fails. Validation is done automatically, by the underlying OpenSSL framework; the application need not concern itself with its mechanics. But the application does usually need to provide sets of certificates to allow this process to take place.</source>
          <target state="translated">在Python使用证书的过程中,客户端或服务器可以使用证书来证明他们是谁。网络连接的另一方也可以被要求出示证书,并且该证书可以被验证,使需要这种验证的客户端或服务器满意。如果验证失败,连接尝试可以被设置为引发异常。验证是由底层的OpenSSL框架自动完成的,应用程序不需要关心它的机制。但是,应用程序通常需要提供一组证书,以允许这个过程发生。</target>
        </trans-unit>
        <trans-unit id="54b6896bea707355902a22e27a3a48a322ff4f93" translate="yes" xml:space="preserve">
          <source>In the UTF-8 mode, the encoding is &lt;code&gt;utf-8&lt;/code&gt; on any platform.</source>
          <target state="translated">在UTF-8模式下，在任何平台上的编码均为 &lt;code&gt;utf-8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cee2bffb2eb3a640bd33edd4c2273abf15d7944e" translate="yes" xml:space="preserve">
          <source>In the case of a &lt;em&gt;MandatoryRelease&lt;/em&gt; that has not yet occurred, &lt;em&gt;MandatoryRelease&lt;/em&gt; predicts the release in which the feature will become part of the language.</source>
          <target state="translated">在的情况下&lt;em&gt;MandatoryRelease&lt;/em&gt;尚未发生，&lt;em&gt;MandatoryRelease&lt;/em&gt;预测发布该特征将成为语言的一部分。</target>
        </trans-unit>
        <trans-unit id="b18036aece5d58aa31914b030641e2dd49980e5c" translate="yes" xml:space="preserve">
          <source>In the case of {}-formatting, you can specify formatting flags by placing them after the attribute name, separated from it with a colon. For example: a placeholder of &lt;code&gt;{msecs:03d}&lt;/code&gt; would format a millisecond value of &lt;code&gt;4&lt;/code&gt; as &lt;code&gt;004&lt;/code&gt;. Refer to the &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; documentation for full details on the options available to you.</source>
          <target state="translated">如果是{}格式，则可以通过将格式标记放在属性名称后（用冒号与之分开）来指定格式标记。例如： &lt;code&gt;{msecs:03d}&lt;/code&gt; 的占位符会将毫秒值 &lt;code&gt;4&lt;/code&gt; 设置为 &lt;code&gt;004&lt;/code&gt; 。有关可用选项的完整详细信息，请参考&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="4de630fdc03f685b1b1a89c3374aa3f0cc3e42c5" translate="yes" xml:space="preserve">
          <source>In the case where the metadata file listing files (RECORD or SOURCES.txt) is missing, &lt;code&gt;files()&lt;/code&gt; will return &lt;code&gt;None&lt;/code&gt;. The caller may wish to wrap calls to &lt;code&gt;files()&lt;/code&gt; in &lt;a href=&quot;https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.always_iterable&quot;&gt;always_iterable&lt;/a&gt; or otherwise guard against this condition if the target distribution is not known to have the metadata present.</source>
          <target state="translated">在缺少元数据文件列表文件（RECORD或SOURCES.txt）的情况下， &lt;code&gt;files()&lt;/code&gt; 将返回 &lt;code&gt;None&lt;/code&gt; 。调用者可能希望&lt;a href=&quot;https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.always_iterable&quot;&gt;将对&lt;/a&gt; &lt;code&gt;files()&lt;/code&gt; 的调用包装在always_iterable中，否则，如果不知道目标分发中存在元数据，则可以防止这种情况。</target>
        </trans-unit>
        <trans-unit id="bc1e2dbd142a208749274bd7580c8ed640f3d885" translate="yes" xml:space="preserve">
          <source>In the default Task implementation, the name will be visible in the &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; output of a task object.</source>
          <target state="translated">在默认的Task实现中，该名称将在任务对象的&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;输出中可见。</target>
        </trans-unit>
        <trans-unit id="535fa5a6ec217819ca7ba659179db533e7a167c0" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; with &lt;em&gt;interpolation&lt;/em&gt; set to &lt;code&gt;BasicInterpolation()&lt;/code&gt; would resolve &lt;code&gt;%(home_dir)s&lt;/code&gt; to the value of &lt;code&gt;home_dir&lt;/code&gt; (&lt;code&gt;/Users&lt;/code&gt; in this case). &lt;code&gt;%(my_dir)s&lt;/code&gt; in effect would resolve to &lt;code&gt;/Users/lumberjack&lt;/code&gt;. All interpolations are done on demand so keys used in the chain of references do not have to be specified in any specific order in the configuration file.</source>
          <target state="translated">在上面的例子，&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;与&lt;em&gt;插&lt;/em&gt;套到 &lt;code&gt;BasicInterpolation()&lt;/code&gt; 将解析 &lt;code&gt;%(home_dir)s&lt;/code&gt; 到的值 &lt;code&gt;home_dir&lt;/code&gt; （ &lt;code&gt;/Users&lt;/code&gt; 在这种情况下）。 &lt;code&gt;%(my_dir)s&lt;/code&gt; 实际上将解析为 &lt;code&gt;/Users/lumberjack&lt;/code&gt; 。所有插值均按需完成，因此不必在配置文件中以任何特定顺序指定引用链中使用的键。</target>
        </trans-unit>
        <trans-unit id="5236764c8f4f33c47eb89b309f5c121471d4faba" translate="yes" xml:space="preserve">
          <source>In the final archive, &lt;code&gt;please_add.txt&lt;/code&gt; should be included, but &lt;code&gt;do_not_add.txt&lt;/code&gt; should not. Therefore we use the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d863919b7beef0b7bffcfd48a2859d814cc5049" translate="yes" xml:space="preserve">
          <source>In the first approach, we read the data out of the fd&amp;rsquo;s buffer, and the byte values give you the signal numbers. This is simple, but in rare cases it can run into a problem: generally the fd will have a limited amount of buffer space, and if too many signals arrive too quickly, then the buffer may become full, and some signals may be lost. If you use this approach, then you should set &lt;code&gt;warn_on_full_buffer=True&lt;/code&gt;, which will at least cause a warning to be printed to stderr when signals are lost.</source>
          <target state="translated">在第一种方法中，我们从fd的缓冲区中读取数据，字节值为您提供信号编号。这很简单，但是在极少数情况下会遇到问题：通常fd的缓冲区空间有限，并且如果太多信号到达得太快，则缓冲区可能变满，并且某些信号可能会丢失。如果使用此方法，则应设置 &lt;code&gt;warn_on_full_buffer=True&lt;/code&gt; ，这将在信号丢失时至少导致向stderr打印警告。</target>
        </trans-unit>
        <trans-unit id="b1f405b7b60dec7ef0ccbbabf3d071abe0435edb" translate="yes" xml:space="preserve">
          <source>In the following &lt;a href=&quot;https://docs.python.org/3.8/_downloads/6b45dc135219d1404be49d606589a11d/tzinfo_examples.py&quot;&gt;&lt;code&gt;tzinfo_examples.py&lt;/code&gt;&lt;/a&gt; file there are some examples of &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; classes:</source>
          <target state="translated">在以下&lt;a href=&quot;https://docs.python.org/3.8/_downloads/6b45dc135219d1404be49d606589a11d/tzinfo_examples.py&quot;&gt; &lt;code&gt;tzinfo_examples.py&lt;/code&gt; &lt;/a&gt;文件中，有一些&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;类的示例：</target>
        </trans-unit>
        <trans-unit id="a54874ff53863bf6a4f06c4b54eda59c0a2820a8" translate="yes" xml:space="preserve">
          <source>In the following &lt;a href=&quot;https://docs.python.org/3.9/_downloads/6b45dc135219d1404be49d606589a11d/tzinfo_examples.py&quot;&gt;&lt;code&gt;tzinfo_examples.py&lt;/code&gt;&lt;/a&gt; file there are some examples of &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff95d881b0899b985ba27eea20bbabb5d0f7f41" translate="yes" xml:space="preserve">
          <source>In the following documentation the argument list for functions is given. Methods, of course, have the additional first argument &lt;em&gt;self&lt;/em&gt; which is omitted here.</source>
          <target state="translated">在以下文档中，给出了函数的参数列表。当然，方法具有附加的第一个参数&lt;em&gt;self&lt;/em&gt;，在此将其省略。</target>
        </trans-unit>
        <trans-unit id="ccfb56fcc1d858991309ad5c738b0606a30bbfb4" translate="yes" xml:space="preserve">
          <source>In the following example we&amp;rsquo;re going to intentionally cause a &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt;&lt;code&gt;Fault&lt;/code&gt;&lt;/a&gt; by returning a complex type object. The server code:</source>
          <target state="translated">在下面的示例中，我们将通过返回复杂类型对象有意导致&lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt; &lt;code&gt;Fault&lt;/code&gt; &lt;/a&gt;。服务器代码：</target>
        </trans-unit>
        <trans-unit id="e2223ff4a598cefedbdd585097e57edaf62fd136" translate="yes" xml:space="preserve">
          <source>In the following example we&amp;rsquo;re going to intentionally cause a &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt;&lt;code&gt;ProtocolError&lt;/code&gt;&lt;/a&gt; by providing an invalid URI:</source>
          <target state="translated">在下面的示例中，我们将通过提供无效的URI 故意导致&lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt; &lt;code&gt;ProtocolError&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1b98fb6821e17d529d323fbb51fcfeba5d9f117e" translate="yes" xml:space="preserve">
          <source>In the following example, the data are rounded, so that each value represents the midpoint of data classes, e.g. 1 is the midpoint of the class 0.5&amp;ndash;1.5, 2 is the midpoint of 1.5&amp;ndash;2.5, 3 is the midpoint of 2.5&amp;ndash;3.5, etc. With the data given, the middle value falls somewhere in the class 3.5&amp;ndash;4.5, and interpolation is used to estimate it:</source>
          <target state="translated">在下面的示例中，对数据进行了四舍五入，因此每个值都代表数据类的中点，例如1是类0.5-1.5的中点，2是1.5-2.5的中点，3是2.5-3.5的中点等给定数据，中间值落在3.5-4.5类中的某个位置，并使用插值法对其进行估计：</target>
        </trans-unit>
        <trans-unit id="533603ba0650e5f7228aa22ac8ec4f95a8bd54f1" translate="yes" xml:space="preserve">
          <source>In the following example, we are sending a data-stream to the stdin of a CGI and reading the data it returns to us. Note that this example will only work when the Python installation supports SSL.</source>
          <target state="translated">在下面的例子中,我们向一个CGI的stdin发送一个数据流,并读取它返回给我们的数据。请注意,这个例子只有在Python安装支持SSL的情况下才能使用。</target>
        </trans-unit>
        <trans-unit id="1fa008487812ea35726b9061adefa221aa756af2" translate="yes" xml:space="preserve">
          <source>In the following examples, we assume that the relevant functions have already been imported from the &lt;a href=&quot;#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">在以下示例中，我们假设相关功能已从&lt;a href=&quot;#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;模块中导入。</target>
        </trans-unit>
        <trans-unit id="8f9fe91e9abf59bd1adbaa56c89770d56c827a8d" translate="yes" xml:space="preserve">
          <source>In the following, &lt;em&gt;events&lt;/em&gt; is a bitwise mask indicating which I/O events should be waited for on a given file object. It can be a combination of the modules constants below:</source>
          <target state="translated">在下文中，&lt;em&gt;事件&lt;/em&gt;是按位屏蔽，指示应在给定文件对象上等待哪些I / O事件。它可以是以下模块常量的组合：</target>
        </trans-unit>
        <trans-unit id="7ed55c5626284f0ef492f74cae3ebfc7bd5bdeb3" translate="yes" xml:space="preserve">
          <source>In the following, the term &lt;em&gt;referent&lt;/em&gt; means the object which is referred to by a weak reference.</source>
          <target state="translated">在下文中，该术语&lt;em&gt;所指&lt;/em&gt;是指通过弱引用所引用的对象。</target>
        </trans-unit>
        <trans-unit id="26053a87fbd2fcc58b5429c7f78fea5394e32809" translate="yes" xml:space="preserve">
          <source>In the function &lt;code&gt;greeting&lt;/code&gt;, the argument &lt;code&gt;name&lt;/code&gt; is expected to be of type &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and the return type &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. Subtypes are accepted as arguments.</source>
          <target state="translated">在函数 &lt;code&gt;greeting&lt;/code&gt; 中，参数 &lt;code&gt;name&lt;/code&gt; 应为&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;类型，返回类型为&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;类型。子类型被接受为参数。</target>
        </trans-unit>
        <trans-unit id="58b661df5e22d9142f3da0d96532be500b1aac4f" translate="yes" xml:space="preserve">
          <source>In the general case, the steps required to perform the sorting of a given graph are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ac6b1e58da82a23a5cbc8050342436b8ca25b0" translate="yes" xml:space="preserve">
          <source>In the ideal case, the code will have a suitable test suite, and the test runner will take care of implicitly enabling all warnings when running tests (the test runner provided by the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module does this).</source>
          <target state="translated">在理想情况下，代码将具有合适的测试套件，并且测试运行器将在运行测试时隐式启用所有警告（由&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;模块提供的测试运行器执行此操作）。</target>
        </trans-unit>
        <trans-unit id="eaf314b605ee1e93c7ef662a0fcaed6c7faecc98" translate="yes" xml:space="preserve">
          <source>In the next example (simple implementation of &lt;a href=&quot;shutil#shutil.rmtree&quot;&gt;&lt;code&gt;shutil.rmtree()&lt;/code&gt;&lt;/a&gt;), walking the tree bottom-up is essential, &lt;a href=&quot;#os.rmdir&quot;&gt;&lt;code&gt;rmdir()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t allow deleting a directory before the directory is empty:</source>
          <target state="translated">在下一个示例（&lt;a href=&quot;shutil#shutil.rmtree&quot;&gt; &lt;code&gt;shutil.rmtree()&lt;/code&gt; 的&lt;/a&gt;简单实现）中，使树自下而上是必不可少的，&lt;a href=&quot;#os.rmdir&quot;&gt; &lt;code&gt;rmdir()&lt;/code&gt; &lt;/a&gt;不允许在目录为空之前删除目录：</target>
        </trans-unit>
        <trans-unit id="274c72518f8a919afc6da55f424febbdf2ea74bb" translate="yes" xml:space="preserve">
          <source>In the next example, walking the tree bottom-up is essential: &lt;a href=&quot;#os.rmdir&quot;&gt;&lt;code&gt;rmdir()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t allow deleting a directory before the directory is empty:</source>
          <target state="translated">在下一个示例中，使树自下而上是必不可少的：&lt;a href=&quot;#os.rmdir&quot;&gt; &lt;code&gt;rmdir()&lt;/code&gt; &lt;/a&gt;不允许在目录为空之前删除目录：</target>
        </trans-unit>
        <trans-unit id="17c1ee7708d83a788fb54edf47914b0f5328b88f" translate="yes" xml:space="preserve">
          <source>In the option list above, &amp;ldquo;a set&amp;rdquo; refers to any collection or iterable of strings, no ordering is expected.</source>
          <target state="translated">在上面的选项列表中，&amp;ldquo;集合&amp;rdquo;是指任何字符串的集合或可迭代的字符串，不需要排序。</target>
        </trans-unit>
        <trans-unit id="54385cf5bdff670b83f3d300aefcf33fbb344d3c" translate="yes" xml:space="preserve">
          <source>In the previous section, you learned to write following code anytime you expected a user to post more than one value under one name:</source>
          <target state="translated">在上一节中,你学会了在你希望一个用户在一个名字下发布多个值的时候编写以下代码。</target>
        </trans-unit>
        <trans-unit id="233a7a8805657d96bca6651321789f9af3a538c2" translate="yes" xml:space="preserve">
          <source>In the second approach, we use the wakeup fd &lt;em&gt;only&lt;/em&gt; for wakeups, and ignore the actual byte values. In this case, all we care about is whether the fd&amp;rsquo;s buffer is empty or non-empty; a full buffer doesn&amp;rsquo;t indicate a problem at all. If you use this approach, then you should set &lt;code&gt;warn_on_full_buffer=False&lt;/code&gt;, so that your users are not confused by spurious warning messages.</source>
          <target state="translated">在第二种方法中，我们&lt;em&gt;仅&lt;/em&gt;将唤醒fd 用于唤醒，而忽略实际的字节值。在这种情况下，我们关心的只是fd的缓冲区是空还是非空。完整的缓冲区根本不表示问题。如果使用这种方法，则应设置 &lt;code&gt;warn_on_full_buffer=False&lt;/code&gt; ，以使用户不会被虚假的警告消息所迷惑。</target>
        </trans-unit>
        <trans-unit id="a8aa6122f62e104f1eaf23b08163261f3b40a9ba" translate="yes" xml:space="preserve">
          <source>In the second form, the caller makes the division point clear through the provision of a single colon: the dotted name to the left of the colon is a package to be imported, and the dotted name to the right is the object hierarchy within that package. Only one import is needed in this form. If it ends with the colon, then a module object is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bc0401466a52c7fb4e1247c6f71a447d41beff" translate="yes" xml:space="preserve">
          <source>In the serializer, the &lt;em&gt;allow_nan&lt;/em&gt; parameter can be used to alter this behavior. In the deserializer, the &lt;em&gt;parse_constant&lt;/em&gt; parameter can be used to alter this behavior.</source>
          <target state="translated">在序列化程序中，&lt;em&gt;allow_nan&lt;/em&gt;参数可用于更改此行为。在解串器中，&lt;em&gt;parse_constant&lt;/em&gt;参数可用于更改此行为。</target>
        </trans-unit>
        <trans-unit id="38626b257d0d2b41bc10b255929643d1d13e8835" translate="yes" xml:space="preserve">
          <source>In the simple case then, you need only add the following bit of code to the main driver file of your application:</source>
          <target state="translated">在简单的情况下,你只需要在应用程序的主驱动文件中添加以下代码。</target>
        </trans-unit>
        <trans-unit id="cf29865f18bcaf9638d0168c8132a6142805a764" translate="yes" xml:space="preserve">
          <source>In the table &lt;em&gt;s&lt;/em&gt; is an instance of a mutable sequence type, &lt;em&gt;t&lt;/em&gt; is any iterable object and &lt;em&gt;x&lt;/em&gt; is an arbitrary object that meets any type and value restrictions imposed by &lt;em&gt;s&lt;/em&gt; (for example, &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; only accepts integers that meet the value restriction &lt;code&gt;0 &amp;lt;= x &amp;lt;= 255&lt;/code&gt;).</source>
          <target state="translated">在表中&lt;em&gt;s&lt;/em&gt;是可变序列类型的实例，&lt;em&gt;t&lt;/em&gt;是任何可迭代对象，&lt;em&gt;x&lt;/em&gt;是满足&lt;em&gt;s&lt;/em&gt;施加的任何类型和值限制的任意对象（例如，&lt;a href=&quot;#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;仅接受满足值限制的整数 &lt;code&gt;0 &amp;lt;= x &amp;lt;= 255&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bd508f1ee529ccf68344f530644e56df47707298" translate="yes" xml:space="preserve">
          <source>In the tree above, each cell &lt;em&gt;k&lt;/em&gt; is topping &lt;code&gt;2*k+1&lt;/code&gt; and &lt;code&gt;2*k+2&lt;/code&gt;. In a usual binary tournament we see in sports, each cell is the winner over the two cells it tops, and we can trace the winner down the tree to see all opponents s/he had. However, in many computer applications of such tournaments, we do not need to trace the history of a winner. To be more memory efficient, when a winner is promoted, we try to replace it by something else at a lower level, and the rule becomes that a cell and the two cells it tops contain three different items, but the top cell &amp;ldquo;wins&amp;rdquo; over the two topped cells.</source>
          <target state="translated">在上面的树中，每个单元&lt;em&gt;k&lt;/em&gt;都在 &lt;code&gt;2*k+1&lt;/code&gt; 和 &lt;code&gt;2*k+2&lt;/code&gt; 之上。在体育比赛中我们看到的通常的二元锦标赛中，每个单元格都是其顶部两个单元格的赢家，我们可以在树上追踪赢家，以查看所有对手。但是，在此类比赛的许多计算机应用程序中，我们不需要跟踪获胜者的历史。为了提高存储效率，当提升获胜者时，我们尝试以较低的级别替换为其他东西，规则变成一个单元格和其顶部的两个单元格包含三个不同的项目，但顶部的单元格&amp;ldquo;获胜&amp;rdquo;在两个顶部的单元格上。</target>
        </trans-unit>
        <trans-unit id="1defc52a5fe9f0a43f30bd5d3e26fbc4e063c451" translate="yes" xml:space="preserve">
          <source>In the typical usage of a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; object, the &lt;a href=&quot;#unittest.TestSuite.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method is invoked by a &lt;code&gt;TestRunner&lt;/code&gt; rather than by the end-user test harness.</source>
          <target state="translated">在&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;对象的典型用法中，&lt;a href=&quot;#unittest.TestSuite.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法由 &lt;code&gt;TestRunner&lt;/code&gt; 而不是最终用户测试工具调用。</target>
        </trans-unit>
        <trans-unit id="5e430d29f738b72ec9b1e05af5395066734b68a2" translate="yes" xml:space="preserve">
          <source>In these tuples, &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, &lt;em&gt;proto&lt;/em&gt; are all integers and are meant to be passed to the &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt; function. &lt;em&gt;canonname&lt;/em&gt; will be a string representing the canonical name of the &lt;em&gt;host&lt;/em&gt; if &lt;code&gt;AI_CANONNAME&lt;/code&gt; is part of the &lt;em&gt;flags&lt;/em&gt; argument; else &lt;em&gt;canonname&lt;/em&gt; will be empty. &lt;em&gt;sockaddr&lt;/em&gt; is a tuple describing a socket address, whose format depends on the returned &lt;em&gt;family&lt;/em&gt; (a &lt;code&gt;(address, port)&lt;/code&gt; 2-tuple for &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;(address, port, flow info, scope id)&lt;/code&gt; 4-tuple for &lt;a href=&quot;#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt;), and is meant to be passed to the &lt;a href=&quot;#socket.socket.connect&quot;&gt;&lt;code&gt;socket.connect()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">在这些元组中，&lt;em&gt;family&lt;/em&gt;，&lt;em&gt;type&lt;/em&gt;，&lt;em&gt;proto&lt;/em&gt;都是整数，并打算传递给&lt;a href=&quot;#socket.socket&quot;&gt; &lt;code&gt;socket()&lt;/code&gt; &lt;/a&gt;函数。如果 &lt;code&gt;AI_CANONNAME&lt;/code&gt; 是&lt;em&gt;flags&lt;/em&gt;参数的一部分，&lt;em&gt;canonname&lt;/em&gt;将是代表&lt;em&gt;主机&lt;/em&gt;规范名称的字符串。否则&lt;em&gt;canonname&lt;/em&gt;将为空。&lt;em&gt;sockaddr&lt;/em&gt;是描述套接字地址的元组，其格式取决于返回的&lt;em&gt;族&lt;/em&gt;（对于&lt;a href=&quot;#socket.AF_INET&quot;&gt; &lt;code&gt;AF_INET&lt;/code&gt; &lt;/a&gt;，是一个 &lt;code&gt;(address, port)&lt;/code&gt; 2个元组，对于&lt;a href=&quot;#socket.AF_INET6&quot;&gt; &lt;code&gt;AF_INET6&lt;/code&gt; &lt;/a&gt;，是一个 &lt;code&gt;(address, port, flow info, scope id)&lt;/code&gt; 4个元组&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;），并应传递给&lt;a href=&quot;#socket.socket.connect&quot;&gt; &lt;code&gt;socket.connect()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="4e88e0c7696c45209bd288d5a08d4350de9a5c69" translate="yes" xml:space="preserve">
          <source>In these tuples, &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, &lt;em&gt;proto&lt;/em&gt; are all integers and are meant to be passed to the &lt;a href=&quot;#socket.socket&quot;&gt;&lt;code&gt;socket()&lt;/code&gt;&lt;/a&gt; function. &lt;em&gt;canonname&lt;/em&gt; will be a string representing the canonical name of the &lt;em&gt;host&lt;/em&gt; if &lt;code&gt;AI_CANONNAME&lt;/code&gt; is part of the &lt;em&gt;flags&lt;/em&gt; argument; else &lt;em&gt;canonname&lt;/em&gt; will be empty. &lt;em&gt;sockaddr&lt;/em&gt; is a tuple describing a socket address, whose format depends on the returned &lt;em&gt;family&lt;/em&gt; (a &lt;code&gt;(address, port)&lt;/code&gt; 2-tuple for &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;(address, port, flowinfo, scope_id)&lt;/code&gt; 4-tuple for &lt;a href=&quot;#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt;), and is meant to be passed to the &lt;a href=&quot;#socket.socket.connect&quot;&gt;&lt;code&gt;socket.connect()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f03f8295d4401efbee1454b689f377054911af8" translate="yes" xml:space="preserve">
          <source>In this case &lt;code&gt;MyDict&lt;/code&gt; has a single parameter, &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">在这种情况下 &lt;code&gt;MyDict&lt;/code&gt; 具有单个参数， &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cbbe287f089dc8f706ae99f0052a682074dcad2" translate="yes" xml:space="preserve">
          <source>In this case all warnings are caught and no errors are raised.</source>
          <target state="translated">在这种情况下,所有的警告都会被捕获,不会出现错误。</target>
        </trans-unit>
        <trans-unit id="1c62940c22ee32d3fd980aa25414be64f0948aab" translate="yes" xml:space="preserve">
          <source>In this case if either warning was not raised, or some other warning was raised, &lt;a href=&quot;#test.support.check_warnings&quot;&gt;&lt;code&gt;check_warnings()&lt;/code&gt;&lt;/a&gt; would raise an error.</source>
          <target state="translated">在这种情况下，如果未发出警告或发出了其他警告，则&lt;a href=&quot;#test.support.check_warnings&quot;&gt; &lt;code&gt;check_warnings()&lt;/code&gt; &lt;/a&gt;会引发错误。</target>
        </trans-unit>
        <trans-unit id="bb0757ca7b63d5e5a2bcaf0b7ed3ffc59abc635d" translate="yes" xml:space="preserve">
          <source>In this case no &lt;code&gt;*&lt;/code&gt; specifiers may occur in a format (since they require a sequential parameter list).</source>
          <target state="translated">在这种情况下， &lt;code&gt;*&lt;/code&gt; 指示符可能不会以某种格式出现（因为它们需要顺序的参数列表）。</target>
        </trans-unit>
        <trans-unit id="c4457d16ba5e9b6c681760e973da7e71471b05ca" translate="yes" xml:space="preserve">
          <source>In this case, &lt;a href=&quot;#dataclasses.fields&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt; will return &lt;a href=&quot;#dataclasses.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; objects for &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt;, but not for &lt;code&gt;database&lt;/code&gt;.</source>
          <target state="translated">在这种情况下，&lt;a href=&quot;#dataclasses.fields&quot;&gt; &lt;code&gt;fields()&lt;/code&gt; &lt;/a&gt;将为 &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;j&lt;/code&gt; 返回&lt;a href=&quot;#dataclasses.Field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;对象，但不会为 &lt;code&gt;database&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="79e6ea472a32e4246827af3631820637ed0278c5" translate="yes" xml:space="preserve">
          <source>In this case, you are marking translatable strings with the function &lt;code&gt;N_()&lt;/code&gt;, which won&amp;rsquo;t conflict with any definition of &lt;code&gt;_()&lt;/code&gt;. However, you will need to teach your message extraction program to look for translatable strings marked with &lt;code&gt;N_()&lt;/code&gt;. &lt;strong&gt;xgettext&lt;/strong&gt;, &lt;strong&gt;pygettext&lt;/strong&gt;, &lt;code&gt;pybabel extract&lt;/code&gt;, and &lt;strong&gt;xpot&lt;/strong&gt; all support this through the use of the &lt;code&gt;-k&lt;/code&gt; command-line switch. The choice of &lt;code&gt;N_()&lt;/code&gt; here is totally arbitrary; it could have just as easily been &lt;code&gt;MarkThisStringForTranslation()&lt;/code&gt;.</source>
          <target state="translated">在这种情况下，将使用函数 &lt;code&gt;N_()&lt;/code&gt; 标记可翻译的字符串，该函数不会与 &lt;code&gt;_()&lt;/code&gt; 的任何定义冲突。但是，您将需要教您的消息提取程序来查找标记为 &lt;code&gt;N_()&lt;/code&gt; 的可翻译字符串。&lt;strong&gt;xgettext&lt;/strong&gt;，&lt;strong&gt;pygettext&lt;/strong&gt;， &lt;code&gt;pybabel extract&lt;/code&gt; 和&lt;strong&gt;xpot&lt;/strong&gt;都通过使用 &lt;code&gt;-k&lt;/code&gt; 命令行开关来支持此功能。这里的 &lt;code&gt;N_()&lt;/code&gt; 选择完全是任意的；它可能就像 &lt;code&gt;MarkThisStringForTranslation()&lt;/code&gt; 一样容易。</target>
        </trans-unit>
        <trans-unit id="08bfb79410a7dd7df492ec826030edd1454851bb" translate="yes" xml:space="preserve">
          <source>In this documentation the term &amp;ldquo;coroutine&amp;rdquo; can be used for two closely related concepts:</source>
          <target state="translated">在本文档中，术语&amp;ldquo;协程&amp;rdquo;可用于两个紧密相关的概念：</target>
        </trans-unit>
        <trans-unit id="bdbd41293f905fe5e804f0cde22491ea56d4aad3" translate="yes" xml:space="preserve">
          <source>In this example we monkey patch &lt;code&gt;method&lt;/code&gt; to return &lt;code&gt;sentinel.some_object&lt;/code&gt;:</source>
          <target state="translated">在此示例中，我们使用猴子补丁 &lt;code&gt;method&lt;/code&gt; 返回 &lt;code&gt;sentinel.some_object&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0cb1f4c4966c211b894b9eddb03c77f1514eec4f" translate="yes" xml:space="preserve">
          <source>In this example, both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will be included in the added &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method, which will be defined as:</source>
          <target state="translated">在此示例中， &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 都将包含在添加的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;方法中，该方法定义为：</target>
        </trans-unit>
        <trans-unit id="fda6bd28cc033b50a0b8814524b1219024bf6ae2" translate="yes" xml:space="preserve">
          <source>In this example, both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will be included in the added &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; method, which will be defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c864378a7365c48cdd1ee95b362aa30d2db7c6fa" translate="yes" xml:space="preserve">
          <source>In this example, similar to the &lt;a href=&quot;#shutil-archiving-example&quot;&gt;one above&lt;/a&gt;, we show how to use &lt;a href=&quot;#shutil.make_archive&quot;&gt;&lt;code&gt;make_archive()&lt;/code&gt;&lt;/a&gt;, but this time with the usage of &lt;em&gt;base_dir&lt;/em&gt;. We now have the following directory structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3d5cd546b56dd82f8608e853a7baf739475096" translate="yes" xml:space="preserve">
          <source>In this example, the string &lt;code&gt;'writing a log message'&lt;/code&gt; is marked as a candidate for translation, while the strings &lt;code&gt;'mylog.txt'&lt;/code&gt; and &lt;code&gt;'w'&lt;/code&gt; are not.</source>
          <target state="translated">在此示例中，字符串 &lt;code&gt;'writing a log message'&lt;/code&gt; 被标记为翻译的候选者，而字符串 &lt;code&gt;'mylog.txt'&lt;/code&gt; 和 &lt;code&gt;'w'&lt;/code&gt; 则不被翻译。</target>
        </trans-unit>
        <trans-unit id="c7def4d1e263f8bcd184ca5ff886690b3b0a0295" translate="yes" xml:space="preserve">
          <source>In this example, the unpickler imports the &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;os.system()&lt;/code&gt;&lt;/a&gt; function and then apply the string argument &amp;ldquo;echo hello world&amp;rdquo;. Although this example is inoffensive, it is not difficult to imagine one that could damage your system.</source>
          <target state="translated">在此示例中，&lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;os.system()&lt;/code&gt; &lt;/a&gt;导入os.system（）函数，然后应用字符串参数&amp;ldquo; echo hello world&amp;rdquo;。尽管此示例没有冒犯性，但不难想象会损坏系统的示例。</target>
        </trans-unit>
        <trans-unit id="e522fd7d7c94512496913a1631fcf4f5c248305d" translate="yes" xml:space="preserve">
          <source>In this example, we create a gzip&amp;rsquo;ed tar-file archive containing all files found in the &lt;code&gt;.ssh&lt;/code&gt; directory of the user:</source>
          <target state="translated">在此示例中，我们创建了一个包含用户在 &lt;code&gt;.ssh&lt;/code&gt; 目录中找到的所有文件的gzip压缩tar文件档案：</target>
        </trans-unit>
        <trans-unit id="6ad2b90f1a4c574c3b7216fa3f340a8bbed08661" translate="yes" xml:space="preserve">
          <source>In this example, we&amp;rsquo;ll use the following helper function to display match objects a little more gracefully:</source>
          <target state="translated">在此示例中，我们将使用以下帮助函数来更优雅地显示匹配对象：</target>
        </trans-unit>
        <trans-unit id="ba2da0e1a0b23d485c22fd691fbc6b825bea722c" translate="yes" xml:space="preserve">
          <source>In this module, shared memory refers to &amp;ldquo;System V style&amp;rdquo; shared memory blocks (though is not necessarily implemented explicitly as such) and does not refer to &amp;ldquo;distributed shared memory&amp;rdquo;. This style of shared memory permits distinct processes to potentially read and write to a common (or shared) region of volatile memory. Processes are conventionally limited to only have access to their own process memory space but shared memory permits the sharing of data between processes, avoiding the need to instead send messages between processes containing that data. Sharing data directly via memory can provide significant performance benefits compared to sharing data via disk or socket or other communications requiring the serialization/deserialization and copying of data.</source>
          <target state="translated">在此模块中，共享内存是指&amp;ldquo; System V样式&amp;rdquo;共享内存块（尽管不一定如此明确实现），而不是&amp;ldquo;分布式共享内存&amp;rdquo;。这种共享存储器的样式允许不同的进程潜在地读写易失性存储器的公共（或共享）区域。常规上，进程被限制为只能访问其自己的进程存储空间，但是共享内存允许进程之间共享数据，从而避免了在包含该数据的进程之间发送消息的需求。与通过磁盘或插槽或其他需要序列化/反序列化和复制数据的通信共享数据相比，直接通过内存共享数据可以提供显着的性能优势。</target>
        </trans-unit>
        <trans-unit id="ec3672efb81510d5a09d403c05abc447f604c84f" translate="yes" xml:space="preserve">
          <source>In this section, &amp;ldquo;a becomes b&amp;rdquo; means that b can be used as a replacement for a.</source>
          <target state="translated">在本节中，&amp;ldquo; a变为b&amp;rdquo;表示b可以替代a。</target>
        </trans-unit>
        <trans-unit id="21e480a14f4cd9a1149fed8cca6a4c7d111a42ea" translate="yes" xml:space="preserve">
          <source>In this section, &amp;lsquo;C&amp;rsquo; refers to the</source>
          <target state="translated">在本节中，&amp;ldquo; C&amp;rdquo;是指</target>
        </trans-unit>
        <trans-unit id="876936e3c1b8574b0dd98372c0c2aa05d7cc3d86" translate="yes" xml:space="preserve">
          <source>In this section, we describe the general mechanisms available to you to define, customize, and control how class instances are pickled and unpickled.</source>
          <target state="translated">在本节中,我们描述了可供您定义、自定义和控制类实例如何被腌制和取消腌制的一般机制。</target>
        </trans-unit>
        <trans-unit id="609a689db13972f91eaeffe399356954f6e29a03" translate="yes" xml:space="preserve">
          <source>In those examples, note that when an in-place method is called, the computation and assignment are performed in two separate steps. The in-place functions listed below only do the first step, calling the in-place method. The second step, assignment, is not handled.</source>
          <target state="translated">在这些例子中,请注意,当调用就地方法时,计算和赋值是分两步进行的。下面列出的就地函数只做第一步,即调用就地方法。第二步,即赋值,则不做处理。</target>
        </trans-unit>
        <trans-unit id="f3e67f78459f05a24ed8968a34d4f51980839f13" translate="yes" xml:space="preserve">
          <source>In traditional Unix the field &lt;code&gt;pw_passwd&lt;/code&gt; usually contains a password encrypted with a DES derived algorithm (see module &lt;a href=&quot;crypt#module-crypt&quot;&gt;&lt;code&gt;crypt&lt;/code&gt;&lt;/a&gt;). However most modern unices use a so-called &lt;em&gt;shadow password&lt;/em&gt; system. On those unices the &lt;em&gt;pw_passwd&lt;/em&gt; field only contains an asterisk (&lt;code&gt;'*'&lt;/code&gt;) or the letter &lt;code&gt;'x'&lt;/code&gt; where the encrypted password is stored in a file &lt;code&gt;/etc/shadow&lt;/code&gt; which is not world readable. Whether the &lt;em&gt;pw_passwd&lt;/em&gt; field contains anything useful is system-dependent. If available, the &lt;a href=&quot;spwd#module-spwd&quot;&gt;&lt;code&gt;spwd&lt;/code&gt;&lt;/a&gt; module should be used where access to the encrypted password is required.</source>
          <target state="translated">在传统的Unix中，字段 &lt;code&gt;pw_passwd&lt;/code&gt; 通常包含使用DES派生算法加密的密码（请参阅模块&lt;a href=&quot;crypt#module-crypt&quot;&gt; &lt;code&gt;crypt&lt;/code&gt; &lt;/a&gt;）。然而，大多数现代大学使用所谓的&lt;em&gt;影子密码&lt;/em&gt;系统。在那些&lt;em&gt;unices上，pw_passwd&lt;/em&gt;字段仅包含一个星号（ &lt;code&gt;'*'&lt;/code&gt; ）或一个字母 &lt;code&gt;'x'&lt;/code&gt; ，其中，加密密码存储在文件 &lt;code&gt;/etc/shadow&lt;/code&gt; 中，该文件在世界范围内都不可读。&lt;em&gt;pw_passwd&lt;/em&gt;字段是否包含有用的内容取决于系统。如果可用，应在需要访问加密密码的地方使用&lt;a href=&quot;spwd#module-spwd&quot;&gt; &lt;code&gt;spwd&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="4db947ef6cd05225fe3e644d287ef1d201b7690c" translate="yes" xml:space="preserve">
          <source>In-memory binary streams are also available as &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">内存中的二进制流也可以作为&lt;a href=&quot;#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt;对象使用：</target>
        </trans-unit>
        <trans-unit id="b6cfcf9ff1be78ddbf5f88cac85851468eeaa139" translate="yes" xml:space="preserve">
          <source>In-memory streams</source>
          <target state="translated">内存流</target>
        </trans-unit>
        <trans-unit id="f1e0a688070a40f2e2db3ffb57db4a1558ede0ec" translate="yes" xml:space="preserve">
          <source>In-memory text streams are also available as &lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">内存中文本流也可用作&lt;a href=&quot;#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt;对象：</target>
        </trans-unit>
        <trans-unit id="62f47cd6536074a736c1c116ad6886a50b7748af" translate="yes" xml:space="preserve">
          <source>In-place Operators</source>
          <target state="translated">就地操作人员</target>
        </trans-unit>
        <trans-unit id="8fde0e675981692ca7b1da663a1cf0845aae8f30" translate="yes" xml:space="preserve">
          <source>In-place operations are like binary operations, in that they remove TOS and TOS1, and push the result back on the stack, but the operation is done in-place when TOS1 supports it, and the resulting TOS may be (but does not have to be) the original TOS1.</source>
          <target state="translated">就地操作和二进制操作一样,都是把TOS和TOS1去掉,然后把结果推回堆栈,但操作是在TOS1支持的情况下就地完成的,得到的TOS可能是(但不一定是)原来的TOS1。</target>
        </trans-unit>
        <trans-unit id="8af4b79f6c3a07f98f4ba1fb79d2c37561daffe3" translate="yes" xml:space="preserve">
          <source>Inability to resolve to an internal or external object.</source>
          <target state="translated">无法解析到内部或外部对象。</target>
        </trans-unit>
        <trans-unit id="feb4a11c090061a50eb132ad1c6939bdf6f2540a" translate="yes" xml:space="preserve">
          <source>Include attributes such as line numbers and column offsets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6c755eb982a2f54a4da7973c3f73c77717a36d" translate="yes" xml:space="preserve">
          <source>Incomplete Types</source>
          <target state="translated">不完整类型</target>
        </trans-unit>
        <trans-unit id="e6fd210ecfa24de959ef25c81cb5be14a187e9d4" translate="yes" xml:space="preserve">
          <source>Increment the line number and end line number of each node in the tree starting at &lt;em&gt;node&lt;/em&gt; by &lt;em&gt;n&lt;/em&gt;. This is useful to &amp;ldquo;move code&amp;rdquo; to a different location in a file.</source>
          <target state="translated">递增开始在树中的每个节点的行号和结束行号&lt;em&gt;节点&lt;/em&gt;通过&lt;em&gt;&amp;Ntilde;&lt;/em&gt;。这对于将代码&amp;ldquo;移动&amp;rdquo;到文件中的其他位置很有用。</target>
        </trans-unit>
        <trans-unit id="fc380757d8f1313c5e79738a01b95f0245ea2bcd" translate="yes" xml:space="preserve">
          <source>Incremental (de)compression</source>
          <target state="translated">增量(减量)压缩</target>
        </trans-unit>
        <trans-unit id="c0e4d91a0ac93c5179d6274198eca54354c0112e" translate="yes" xml:space="preserve">
          <source>Incremental Configuration</source>
          <target state="translated">增量配置</target>
        </trans-unit>
        <trans-unit id="714de6e8dcb31cacd8f82e698735cc996d909c17" translate="yes" xml:space="preserve">
          <source>Incremental Encoding and Decoding</source>
          <target state="translated">增量式编码和解码</target>
        </trans-unit>
        <trans-unit id="a70d136600a290d7d648bcefe4f894034d7a33c9" translate="yes" xml:space="preserve">
          <source>Incremental compression:</source>
          <target state="translated">递增式压缩。</target>
        </trans-unit>
        <trans-unit id="a7f4a498ec26fd59fab8b07468072d9f25dbafa4" translate="yes" xml:space="preserve">
          <source>Incremental encoder and decoder classes or factory functions. These have to provide the interface defined by the base classes &lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt;&lt;code&gt;IncrementalEncoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt;&lt;code&gt;IncrementalDecoder&lt;/code&gt;&lt;/a&gt;, respectively. Incremental codecs can maintain state.</source>
          <target state="translated">增量编码器和解码器类或工厂功能。它们必须提供分别由基类&lt;a href=&quot;#codecs.IncrementalEncoder&quot;&gt; &lt;code&gt;IncrementalEncoder&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#codecs.IncrementalDecoder&quot;&gt; &lt;code&gt;IncrementalDecoder&lt;/code&gt; &lt;/a&gt;定义的接口。增量编解码器可以维持状态。</target>
        </trans-unit>
        <trans-unit id="cfc78b0aec9ec9307500e4e82c03e65603530f3f" translate="yes" xml:space="preserve">
          <source>IncrementalDecoder Objects</source>
          <target state="translated">递增式解码器对象</target>
        </trans-unit>
        <trans-unit id="eda65be020f7ce434c41db14bb91b12c39b505b4" translate="yes" xml:space="preserve">
          <source>IncrementalEncoder Objects</source>
          <target state="translated">IncrementalEncoder对象</target>
        </trans-unit>
        <trans-unit id="4807b06d3e0ef5d4c1c771970fa1c0c8a1d5ba1f" translate="yes" xml:space="preserve">
          <source>IncrementalParser Objects</source>
          <target state="translated">IncrementalParser对象</target>
        </trans-unit>
        <trans-unit id="f757e0a955188780b83c7c9c785807ad53aaa78c" translate="yes" xml:space="preserve">
          <source>Increments bytecode counter by &lt;em&gt;delta&lt;/em&gt;.</source>
          <target state="translated">将字节码计数器递增&lt;em&gt;delta&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9f38f8487043353879d3ca62212ab364189a37fc" translate="yes" xml:space="preserve">
          <source>Increments the progress bar&amp;rsquo;s value by &lt;em&gt;amount&lt;/em&gt;.</source>
          <target state="translated">按&lt;em&gt;数量&lt;/em&gt;增加进度条的值。</target>
        </trans-unit>
        <trans-unit id="bc9cdd48c3b4bc260e24e340e9220a7006377fb5" translate="yes" xml:space="preserve">
          <source>Indent Region</source>
          <target state="translated">缩进区域</target>
        </trans-unit>
        <trans-unit id="ba2fcfc71d761c5016af09f688576fdc3dc2595c" translate="yes" xml:space="preserve">
          <source>Indentation of nodes in AST (number of spaces).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4844c6e4e3fdb04af9405295e30a7c41ae4efc" translate="yes" xml:space="preserve">
          <source>IndentationError</source>
          <target state="translated">IndentationError</target>
        </trans-unit>
        <trans-unit id="3cd6cb1c3ba0aa8ae172917a71df16fc02b82ac0" translate="yes" xml:space="preserve">
          <source>Independent of its category, each concrete stream object will also have various capabilities: it can be read-only, write-only, or read-write. It can also allow arbitrary random access (seeking forwards or backwards to any location), or only sequential access (for example in the case of a socket or pipe).</source>
          <target state="translated">独立于其类别,每个具体的流对象还将具有各种能力:它可以是只读、只写或读写。它还可以允许任意随机访问(向前或向后寻找任何位置),或只允许顺序访问(例如在套接字或管道的情况下)。</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="383b324a3291b51f1e54ef9c0d763010fbc5e171" translate="yes" xml:space="preserve">
          <source>IndexError</source>
          <target state="translated">IndexError</target>
        </trans-unit>
        <trans-unit id="04f77b5a53e8914ea949c0d3dbe59ff927176c3a" translate="yes" xml:space="preserve">
          <source>Indexed Assignment</source>
          <target state="translated">指数化作业</target>
        </trans-unit>
        <trans-unit id="181136c2e116ea448074c254b778be7e9dec6c9a" translate="yes" xml:space="preserve">
          <source>Indexed Deletion</source>
          <target state="translated">索引删除</target>
        </trans-unit>
        <trans-unit id="6dabd048a18ebfcff9a07def85323d4996693e98" translate="yes" xml:space="preserve">
          <source>Indexed databases of objects; uses &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">索引的对象数据库；使用&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="6face659f95ee23785ce3d17089bd3d63183d57c" translate="yes" xml:space="preserve">
          <source>Indicate that a formerly enqueued task is complete.</source>
          <target state="translated">表示以前排队的任务已经完成。</target>
        </trans-unit>
        <trans-unit id="9433ffdce775eecb1add8a4a73f1d9fde76ac24a" translate="yes" xml:space="preserve">
          <source>Indicate that a formerly enqueued task is complete. Used by queue consumer threads. For each &lt;a href=&quot;#queue.Queue.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; used to fetch a task, a subsequent call to &lt;a href=&quot;#queue.Queue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; tells the queue that the processing on the task is complete.</source>
          <target state="translated">表示先前排队的任务已完成。由队列使用者线程使用。对于用于提取任务的每个&lt;a href=&quot;#queue.Queue.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;，随后对&lt;a href=&quot;#queue.Queue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; 的&lt;/a&gt;调用将告诉队列该任务的处理已完成。</target>
        </trans-unit>
        <trans-unit id="ccfdc69dc0a7d14a2b1d58743e040b3b8aaf8ad5" translate="yes" xml:space="preserve">
          <source>Indicate that a formerly enqueued task is complete. Used by queue consumers. For each &lt;a href=&quot;#multiprocessing.Queue.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; used to fetch a task, a subsequent call to &lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt;&lt;code&gt;task_done()&lt;/code&gt;&lt;/a&gt; tells the queue that the processing on the task is complete.</source>
          <target state="translated">表示先前排队的任务已完成。由队列使用者使用。对于用于提取任务的每个&lt;a href=&quot;#multiprocessing.Queue.get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;，随后对&lt;a href=&quot;#multiprocessing.JoinableQueue.task_done&quot;&gt; &lt;code&gt;task_done()&lt;/code&gt; 的&lt;/a&gt;调用将告诉队列该任务的处理已完成。</target>
        </trans-unit>
        <trans-unit id="4ca6309605e634742c386580b3f395d337f036d3" translate="yes" xml:space="preserve">
          <source>Indicate that no more data will be put on this queue by the current process. The background thread will quit once it has flushed all buffered data to the pipe. This is called automatically when the queue is garbage collected.</source>
          <target state="translated">表示当前进程不会再将数据放在这个队列上。后台线程一旦将所有缓冲数据刷新到管道,就会退出。当队列被垃圾回收时,会自动调用这个功能。</target>
        </trans-unit>
        <trans-unit id="254811cd35f7a531bb479a6926167434a7f0d4ff" translate="yes" xml:space="preserve">
          <source>Indicate that the &lt;em&gt;num&lt;/em&gt; screen lines, starting at line &lt;em&gt;beg&lt;/em&gt;, are corrupted and should be completely redrawn on the next &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">指示从行&lt;em&gt;beg&lt;/em&gt;开始的&lt;em&gt;num&lt;/em&gt;屏幕行已损坏，应在下一次&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;调用时完全重绘。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f187f4b63c4e285d79b6d0cf7c7d659b0be99d5" translate="yes" xml:space="preserve">
          <source>Indicates if a message of severity &lt;em&gt;level&lt;/em&gt; would be processed by this logger. This method checks first the module-level level set by &lt;code&gt;logging.disable(level)&lt;/code&gt; and then the logger&amp;rsquo;s effective level as determined by &lt;a href=&quot;#logging.Logger.getEffectiveLevel&quot;&gt;&lt;code&gt;getEffectiveLevel()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指示此记录器是否将处理严重性&lt;em&gt;级别&lt;/em&gt;的消息。此方法首先检查由 &lt;code&gt;logging.disable(level)&lt;/code&gt; 设置的模块级别级别，然后检查由&lt;a href=&quot;#logging.Logger.getEffectiveLevel&quot;&gt; &lt;code&gt;getEffectiveLevel()&lt;/code&gt; &lt;/a&gt;确定的记录器的有效级别。</target>
        </trans-unit>
        <trans-unit id="c5c853728e2e1fe3705b4dcef5fcbee47c970151" translate="yes" xml:space="preserve">
          <source>Indicates that an application on 64-bit Windows should operate on the 32-bit registry view.</source>
          <target state="translated">表示64位Windows上的应用程序应在32位注册表视图上运行。</target>
        </trans-unit>
        <trans-unit id="be2a690bd039486d70a78d040e16e00e5454af4b" translate="yes" xml:space="preserve">
          <source>Indicates that an application on 64-bit Windows should operate on the 64-bit registry view.</source>
          <target state="translated">表示64位Windows上的应用程序应在64位注册表视图上运行。</target>
        </trans-unit>
        <trans-unit id="44029812f3a615dab4b941a3d7aa5ae966773df5" translate="yes" xml:space="preserve">
          <source>Indicates that an operation was requested that does not make sense. If not trapped, returns &lt;code&gt;NaN&lt;/code&gt;. Possible causes include:</source>
          <target state="translated">表示请求的操作没有意义。如果未捕获，则返回 &lt;code&gt;NaN&lt;/code&gt; 。可能的原因包括：</target>
        </trans-unit>
        <trans-unit id="4e5e3976df705a424101261da27cd2fde9d3de10" translate="yes" xml:space="preserve">
          <source>Indicates that rounding occurred and the result is not exact.</source>
          <target state="translated">表示发生了四舍五入,结果不准确。</target>
        </trans-unit>
        <trans-unit id="cc981c0e44e076ce06474425971fe7b0ad7144fe" translate="yes" xml:space="preserve">
          <source>Indicates the effective level for this logger. If a value other than &lt;code&gt;NOTSET&lt;/code&gt; has been set using &lt;a href=&quot;#logging.Logger.setLevel&quot;&gt;&lt;code&gt;setLevel()&lt;/code&gt;&lt;/a&gt;, it is returned. Otherwise, the hierarchy is traversed towards the root until a value other than &lt;code&gt;NOTSET&lt;/code&gt; is found, and that value is returned. The value returned is an integer, typically one of &lt;code&gt;logging.DEBUG&lt;/code&gt;, &lt;code&gt;logging.INFO&lt;/code&gt; etc.</source>
          <target state="translated">指示此记录器的有效级别。如果使用&lt;a href=&quot;#logging.Logger.setLevel&quot;&gt; &lt;code&gt;setLevel()&lt;/code&gt; &lt;/a&gt;设置了 &lt;code&gt;NOTSET&lt;/code&gt; 以外的其他值，则将其返回。否则，将层次结构遍历到根，直到找到非 &lt;code&gt;NOTSET&lt;/code&gt; 的值，然后返回该值。返回的值是一个整数，通常是 &lt;code&gt;logging.DEBUG&lt;/code&gt; ， &lt;code&gt;logging.INFO&lt;/code&gt; 等之一。</target>
        </trans-unit>
        <trans-unit id="c05b1808b79cd233f656fe2bcfce9be7819d7036" translate="yes" xml:space="preserve">
          <source>Indicates the exponent is larger than &lt;code&gt;Emax&lt;/code&gt; after rounding has occurred. If not trapped, the result depends on the rounding mode, either pulling inward to the largest representable finite number or rounding outward to &lt;code&gt;Infinity&lt;/code&gt;. In either case, &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#decimal.Rounded&quot;&gt;&lt;code&gt;Rounded&lt;/code&gt;&lt;/a&gt; are also signaled.</source>
          <target state="translated">表示四舍五入后的指数大于 &lt;code&gt;Emax&lt;/code&gt; 。如果未捕获，则结果取决于舍入模式，是向内拉到可表示的最大有限数，还是向外舍入到 &lt;code&gt;Infinity&lt;/code&gt; 。无论哪种情况，也会发出&lt;a href=&quot;#decimal.Inexact&quot;&gt; &lt;code&gt;Inexact&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#decimal.Rounded&quot;&gt; &lt;code&gt;Rounded&lt;/code&gt; &lt;/a&gt;的信号。</target>
        </trans-unit>
        <trans-unit id="4f77f7a5be2f4f6bec024a7ca688eadb9d8cde39" translate="yes" xml:space="preserve">
          <source>Indicates the fastest compression method (less compression).</source>
          <target state="translated">表示最快的压缩方式(压缩程度较低)。</target>
        </trans-unit>
        <trans-unit id="d526feb8426100dd5e8960080eb37e1f6c7c0e18" translate="yes" xml:space="preserve">
          <source>Indicates the format that the module uses. Version 0 is the historical format, version 1 shares interned strings and version 2 uses a binary format for floating point numbers. Version 3 adds support for object instancing and recursion. The current version is 4.</source>
          <target state="translated">表示该模块使用的格式,版本0是历史格式,版本1共享内部字符串,版本2使用浮点数字的二进制格式。版本0是历史格式,版本1共享内部字符串,版本2使用浮点数的二进制格式。版本3增加了对对象实例化和递归的支持。目前的版本是4。</target>
        </trans-unit>
        <trans-unit id="f9f6bc8bf59e204af2bcdfb956cb28921fb1424b" translate="yes" xml:space="preserve">
          <source>Indicates the slowest compression method (best compression).</source>
          <target state="translated">表示最慢的压缩方法(最佳压缩)。</target>
        </trans-unit>
        <trans-unit id="aac4c15b0b527f0bc39db2750782e41d6353de23" translate="yes" xml:space="preserve">
          <source>Indicates unpack completion. Raises an &lt;a href=&quot;#xdrlib.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; exception if all of the data has not been unpacked.</source>
          <target state="translated">表示解包完成。如果尚未解压缩所有数据，则引发&lt;a href=&quot;#xdrlib.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="a7b874949185225675d995e483ef8e34af9b6cac" translate="yes" xml:space="preserve">
          <source>Indicates when to change to and back from DST. The format of the start and end dates are one of the following:</source>
          <target state="translated">表示何时改成和改回DST。开始和结束日期的格式为以下之一:</target>
        </trans-unit>
        <trans-unit id="9f62777df7523c5650cedcd6ae329dd3027c6d33" translate="yes" xml:space="preserve">
          <source>Indicates whether the current platform and implementation provides a symlink attack resistant version of &lt;a href=&quot;#shutil.rmtree&quot;&gt;&lt;code&gt;rmtree()&lt;/code&gt;&lt;/a&gt;. Currently this is only true for platforms supporting fd-based directory access functions.</source>
          <target state="translated">指示当前平台和实现是否提供&lt;a href=&quot;#shutil.rmtree&quot;&gt; &lt;code&gt;rmtree()&lt;/code&gt; 的&lt;/a&gt;抗符号链接攻击版本。当前，这仅适用于支持基于fd的目录访问功能的平台。</target>
        </trans-unit>
        <trans-unit id="3de1857c33236705a23bac0cbecb919c2388633f" translate="yes" xml:space="preserve">
          <source>Indicates whether the named &lt;em&gt;section&lt;/em&gt; is present in the configuration. The &lt;em&gt;default section&lt;/em&gt; is not acknowledged.</source>
          <target state="translated">指示配置中是否存在命名&lt;em&gt;部分&lt;/em&gt;。该&lt;em&gt;默认部分&lt;/em&gt;没有被确认。</target>
        </trans-unit>
        <trans-unit id="74f019ba984a0205ae5ca7d205233a0d659108ee" translate="yes" xml:space="preserve">
          <source>Individual flags should have values that are powers of two (1, 2, 4, 8, &amp;hellip;), while combinations of flags won&amp;rsquo;t:</source>
          <target state="translated">各个标志的值应为2的幂（1、2、4、8，...），而标志的组合则不会：</target>
        </trans-unit>
        <trans-unit id="bb56100c551a80a406351b1238fb04cd7a795a80" translate="yes" xml:space="preserve">
          <source>Individual traps are set using the dictionary in the &lt;code&gt;traps&lt;/code&gt; field of a context:</source>
          <target state="translated">使用字典在上下文的 &lt;code&gt;traps&lt;/code&gt; 字段中设置各个陷阱：</target>
        </trans-unit>
        <trans-unit id="7d7a2f3db28391fcf21d52da3f6b53e0db11323d" translate="yes" xml:space="preserve">
          <source>Individual warnings filters are specified as a sequence of fields separated by colons:</source>
          <target state="translated">单个警告过滤器被指定为一个由冒号分隔的字段序列。</target>
        </trans-unit>
        <trans-unit id="11d6c70d3b61eb2adec653bae13969c8702afd21" translate="yes" xml:space="preserve">
          <source>Infinite and NaN Number Values</source>
          <target state="translated">无限和NaN数值</target>
        </trans-unit>
        <trans-unit id="fdae9d30d05df13f4736716cf3012faf5a343e86" translate="yes" xml:space="preserve">
          <source>Infinite and NaN number values are accepted and output;</source>
          <target state="translated">接受并输出无限和NaN数值。</target>
        </trans-unit>
        <trans-unit id="208f6a4e901648e152bff0d37fcf84f2558c7fa3" translate="yes" xml:space="preserve">
          <source>Infinities can be constructed directly with: &lt;code&gt;Decimal('Infinity')&lt;/code&gt;. Also, they can arise from dividing by zero when the &lt;a href=&quot;#decimal.DivisionByZero&quot;&gt;&lt;code&gt;DivisionByZero&lt;/code&gt;&lt;/a&gt; signal is not trapped. Likewise, when the &lt;a href=&quot;#decimal.Overflow&quot;&gt;&lt;code&gt;Overflow&lt;/code&gt;&lt;/a&gt; signal is not trapped, infinity can result from rounding beyond the limits of the largest representable number.</source>
          <target state="translated">无限性可以直接通过以下方式构造： &lt;code&gt;Decimal('Infinity')&lt;/code&gt; 。此外，当不捕获&lt;a href=&quot;#decimal.DivisionByZero&quot;&gt; &lt;code&gt;DivisionByZero&lt;/code&gt; &lt;/a&gt;信号时，它们可能由零除而产生。同样，当未捕获&lt;a href=&quot;#decimal.Overflow&quot;&gt; &lt;code&gt;Overflow&lt;/code&gt; &lt;/a&gt;信号时，四舍五入可能会超出最大可表示数量的限制，从而导致无穷大。</target>
        </trans-unit>
        <trans-unit id="ed5b789236efcc14059ac13c746c6bf63a446511" translate="yes" xml:space="preserve">
          <source>Info-ZIP Home Page</source>
          <target state="translated">信息产业园首页</target>
        </trans-unit>
        <trans-unit id="f1a9ffafc271a884fe1c56d1e91026a9afac1d59" translate="yes" xml:space="preserve">
          <source>Information about how the &lt;a href=&quot;#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module can be used to replace these modules and functions can be found in the following sections.</source>
          <target state="translated">在以下各节中，将找到有关如何使用&lt;a href=&quot;#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;模块替换这些模块和功能的信息。</target>
        </trans-unit>
        <trans-unit id="73dc9ae5bb811ec4a81b13ac14f9d0600c74bdc0" translate="yes" xml:space="preserve">
          <source>Information about the Info-ZIP project&amp;rsquo;s ZIP archive programs and development libraries.</source>
          <target state="translated">有关Info-ZIP项目的ZIP存档程序和开发库的信息。</target>
        </trans-unit>
        <trans-unit id="5dca2a23bec2c3f3823dba848b63caa3ddd34f46" translate="yes" xml:space="preserve">
          <source>Information about the declarations needed to process a document.</source>
          <target state="translated">处理文件所需的申报信息。</target>
        </trans-unit>
        <trans-unit id="37721dc7ffd07b44f936ed4938598a4206ad258c" translate="yes" xml:space="preserve">
          <source>Information about the notations and entities declared by a document (including the external subset if the parser uses it and can provide the information) is available from a &lt;code&gt;DocumentType&lt;/code&gt; object. The &lt;code&gt;DocumentType&lt;/code&gt; for a document is available from the &lt;code&gt;Document&lt;/code&gt; object&amp;rsquo;s &lt;code&gt;doctype&lt;/code&gt; attribute; if there is no &lt;code&gt;DOCTYPE&lt;/code&gt; declaration for the document, the document&amp;rsquo;s &lt;code&gt;doctype&lt;/code&gt; attribute will be set to &lt;code&gt;None&lt;/code&gt; instead of an instance of this interface.</source>
          <target state="translated">可从 &lt;code&gt;DocumentType&lt;/code&gt; 对象获得有关文档声明的符号和实体的信息（如果解析器使用它，并且可以提供信息，则包括外部子集）。所述 &lt;code&gt;DocumentType&lt;/code&gt; 为一个文件是可从 &lt;code&gt;Document&lt;/code&gt; 对象的 &lt;code&gt;doctype&lt;/code&gt; 属性; 如果文档没有 &lt;code&gt;DOCTYPE&lt;/code&gt; 声明，则文档的 &lt;code&gt;doctype&lt;/code&gt; 属性将设置为 &lt;code&gt;None&lt;/code&gt; ,而不是此接口的实例。</target>
        </trans-unit>
        <trans-unit id="cce32b3d49301f675170423df0e3a5fe42a9f458" translate="yes" xml:space="preserve">
          <source>Information about the version of the zlib library in use is available through the following constants:</source>
          <target state="translated">关于正在使用的zlib库的版本信息可以通过以下常量获得。</target>
        </trans-unit>
        <trans-unit id="3dc195259320a72e072f4ede32b54adf6cc49ee6" translate="yes" xml:space="preserve">
          <source>Informs the logging system to perform an orderly shutdown by flushing and closing all handlers. This should be called at application exit and no further use of the logging system should be made after this call.</source>
          <target state="translated">通知日志系统通过刷新和关闭所有处理程序来执行有序关闭。此操作应在应用程序退出时调用,调用后不应再使用记录系统。</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="8c3b7e7bdfb6a623a8eb23a0493ea3c67706b89d" translate="yes" xml:space="preserve">
          <source>Inheritance of File Descriptors</source>
          <target state="translated">文件描述符的继承</target>
        </trans-unit>
        <trans-unit id="6bce323c70ebeda273b76b4deb2d56162be0c2e0" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#collections.abc.Mapping&quot;&gt;&lt;code&gt;Mapping&lt;/code&gt;&lt;/a&gt; methods and &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;popitem&lt;/code&gt;, &lt;code&gt;clear&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;setdefault&lt;/code&gt;</source>
          <target state="translated">继承的&lt;a href=&quot;#collections.abc.Mapping&quot;&gt; &lt;code&gt;Mapping&lt;/code&gt; &lt;/a&gt;方法以及 &lt;code&gt;pop&lt;/code&gt; ， &lt;code&gt;popitem&lt;/code&gt; ， &lt;code&gt;clear&lt;/code&gt; ， &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;setdefault&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06211f7ed37f2fb2fd3d0b096255e56986486d8f" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#collections.abc.Sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt; methods</source>
          <target state="translated">继承&lt;a href=&quot;#collections.abc.Sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;方法</target>
        </trans-unit>
        <trans-unit id="6c8ee095532c52fa04b5b2f4774ee70078537885" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#collections.abc.Sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt; methods and &lt;code&gt;append&lt;/code&gt;, &lt;code&gt;reverse&lt;/code&gt;, &lt;code&gt;extend&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, and &lt;code&gt;__iadd__&lt;/code&gt;</source>
          <target state="translated">继承的&lt;a href=&quot;#collections.abc.Sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;方法以及 &lt;code&gt;append&lt;/code&gt; ， &lt;code&gt;reverse&lt;/code&gt; ， &lt;code&gt;extend&lt;/code&gt; ， &lt;code&gt;pop&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; 和 &lt;code&gt;__iadd__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d51fda0d61054bbf60003067c334dea455e6a456" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; methods and &lt;code&gt;clear&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;__ior__&lt;/code&gt;, &lt;code&gt;__iand__&lt;/code&gt;, &lt;code&gt;__ixor__&lt;/code&gt;, and &lt;code&gt;__isub__&lt;/code&gt;</source>
          <target state="translated">继承的&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;方法以及 &lt;code&gt;clear&lt;/code&gt; ， &lt;code&gt;pop&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; ， &lt;code&gt;__ior__&lt;/code&gt; ， &lt;code&gt;__iand__&lt;/code&gt; ， &lt;code&gt;__ixor__&lt;/code&gt; 和 &lt;code&gt;__isub__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="379c6401d036c1fd4201479a5a98fa61950fb477" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; methods, &lt;code&gt;encoding&lt;/code&gt;, &lt;code&gt;errors&lt;/code&gt;, and &lt;code&gt;newlines&lt;/code&gt;</source>
          <target state="translated">继承的&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;方法， &lt;code&gt;encoding&lt;/code&gt; ， &lt;code&gt;errors&lt;/code&gt; 和 &lt;code&gt;newlines&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f9245eee96edcd8825a2046422c07072497cf0f" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; methods, &lt;code&gt;read&lt;/code&gt;, and &lt;code&gt;readall&lt;/code&gt;</source>
          <target state="translated">继承的&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;方法 &lt;code&gt;read&lt;/code&gt; 和 &lt;code&gt;readall&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a95bfb8966052c1a0ceee8247e352fac2cbbb068" translate="yes" xml:space="preserve">
          <source>Inherited &lt;a href=&quot;#io.IOBase&quot;&gt;&lt;code&gt;IOBase&lt;/code&gt;&lt;/a&gt; methods, &lt;code&gt;readinto&lt;/code&gt;, and &lt;code&gt;readinto1&lt;/code&gt;</source>
          <target state="translated">继承的&lt;a href=&quot;#io.IOBase&quot;&gt; &lt;code&gt;IOBase&lt;/code&gt; &lt;/a&gt;方法 &lt;code&gt;readinto&lt;/code&gt; 和 &lt;code&gt;readinto1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2f86a0622771a4fe382df1bdcb5afbbe667c715" translate="yes" xml:space="preserve">
          <source>Inherits</source>
          <target state="translated">Inherits</target>
        </trans-unit>
        <trans-unit id="b22e7705af8c8d03aae22d1b8adde6a0eccc1637" translate="yes" xml:space="preserve">
          <source>Inherits from</source>
          <target state="translated">继承自</target>
        </trans-unit>
        <trans-unit id="2bc75738f31d4cad0d4af9bafd60101443b8a470" translate="yes" xml:space="preserve">
          <source>Init file</source>
          <target state="translated">启动文件</target>
        </trans-unit>
        <trans-unit id="a84f9ff878eec42e40bd18840ce1e8b26a925aef" translate="yes" xml:space="preserve">
          <source>Init-only variables</source>
          <target state="translated">只需初始化变量</target>
        </trans-unit>
        <trans-unit id="f5d6a89f24c042aeeed4c674d462173e914e969f" translate="yes" xml:space="preserve">
          <source>Init-only variables without default values, if any exist, must be specified on the call to &lt;a href=&quot;#dataclasses.replace&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt; so that they can be passed to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;__post_init__()&lt;/code&gt;.</source>
          <target state="translated">没有默认值的仅初始化变量（如果存在）必须在调用&lt;a href=&quot;#dataclasses.replace&quot;&gt; &lt;code&gt;replace()&lt;/code&gt; 时&lt;/a&gt;指定，以便可以将它们传递给&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;__post_init__()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00d9484a203c55d062115756023f903da303882a" translate="yes" xml:space="preserve">
          <source>Init-only variables without default values, if any exist, must be specified on the call to &lt;a href=&quot;#dataclasses.replace&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt; so that they can be passed to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;__post_init__()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae7812ad31389ab36e054e9b5c81ee4355c0c33" translate="yes" xml:space="preserve">
          <source>Initial turtle heading</source>
          <target state="translated">最初的海龟方向</target>
        </trans-unit>
        <trans-unit id="9c053c5a31de248a3fe3887d73e022ca74699147" translate="yes" xml:space="preserve">
          <source>Initialize curses and call another callable object, &lt;em&gt;func&lt;/em&gt;, which should be the rest of your curses-using application. If the application raises an exception, this function will restore the terminal to a sane state before re-raising the exception and generating a traceback. The callable object &lt;em&gt;func&lt;/em&gt; is then passed the main window &amp;lsquo;stdscr&amp;rsquo; as its first argument, followed by any other arguments passed to &lt;code&gt;wrapper()&lt;/code&gt;. Before calling &lt;em&gt;func&lt;/em&gt;, &lt;code&gt;wrapper()&lt;/code&gt; turns on cbreak mode, turns off echo, enables the terminal keypad, and initializes colors if the terminal has color support. On exit (whether normally or by exception) it restores cooked mode, turns on echo, and disables the terminal keypad.</source>
          <target state="translated">初始化curses并调用另一个可调用对象&lt;em&gt;func&lt;/em&gt;，该对象应该是使用curses的应用程序的其余部分。如果应用程序引发异常，此功能将在重新引发异常并生成回溯之前将终端恢复为正常状态。然后将可调用对象&lt;em&gt;func&lt;/em&gt;传递给主窗口&amp;ldquo; stdscr&amp;rdquo;作为其第一个参数，然后再传递给 &lt;code&gt;wrapper()&lt;/code&gt; 的任何其他参数。在调用&lt;em&gt;func&lt;/em&gt;之前， &lt;code&gt;wrapper()&lt;/code&gt; 打开cbreak模式，关闭echo，启用终端键盘，并在终端支持颜色的情况下初始化颜色。在退出时（无论是正常还是异常），它都将恢复烹饪模式，打开回显，并禁用终端键盘。</target>
        </trans-unit>
        <trans-unit id="3c39102c3fa06222a5c163727b0377eb39a67e1f" translate="yes" xml:space="preserve">
          <source>Initialize the internal data structures. If given, &lt;em&gt;files&lt;/em&gt; must be a sequence of file names which should be used to augment the default type map. If omitted, the file names to use are taken from &lt;a href=&quot;#mimetypes.knownfiles&quot;&gt;&lt;code&gt;knownfiles&lt;/code&gt;&lt;/a&gt;; on Windows, the current registry settings are loaded. Each file named in &lt;em&gt;files&lt;/em&gt; or &lt;a href=&quot;#mimetypes.knownfiles&quot;&gt;&lt;code&gt;knownfiles&lt;/code&gt;&lt;/a&gt; takes precedence over those named before it. Calling &lt;a href=&quot;#mimetypes.init&quot;&gt;&lt;code&gt;init()&lt;/code&gt;&lt;/a&gt; repeatedly is allowed.</source>
          <target state="translated">初始化内部数据结构。如果给定，&lt;em&gt;文件&lt;/em&gt;必须是一系列文件名，应使用这些文件名来扩展默认类型映射。如果省略，则使用的文件名取自&lt;a href=&quot;#mimetypes.knownfiles&quot;&gt; &lt;code&gt;knownfiles&lt;/code&gt; &lt;/a&gt;；在Windows上，将加载当前的注册表设置。在&lt;em&gt;文件&lt;/em&gt;或&lt;a href=&quot;#mimetypes.knownfiles&quot;&gt; &lt;code&gt;knownfiles&lt;/code&gt; &lt;/a&gt;文件中命名的每个文件优先于在其之前命名的&lt;em&gt;文件&lt;/em&gt;。允许重复调用&lt;a href=&quot;#mimetypes.init&quot;&gt; &lt;code&gt;init()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="67a777e10b60c9589ca15590b09a5cec97aaa843" translate="yes" xml:space="preserve">
          <source>Initialize the library. Return a &lt;a href=&quot;#curses-window-objects&quot;&gt;window&lt;/a&gt; object which represents the whole screen.</source>
          <target state="translated">初始化库。返回一个代表整个屏幕的&lt;a href=&quot;#curses-window-objects&quot;&gt;窗口&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="48428a849fbd7ccb672616c8d11dd86f3867404a" translate="yes" xml:space="preserve">
          <source>Initialize the random number generator.</source>
          <target state="translated">初始化随机数发生器。</target>
        </trans-unit>
        <trans-unit id="70995d6f7eecb673c201a63dd47d29c6584b9166" translate="yes" xml:space="preserve">
          <source>Initialize the terminal. &lt;em&gt;term&lt;/em&gt; is a string giving the terminal name, or &lt;code&gt;None&lt;/code&gt;; if omitted or &lt;code&gt;None&lt;/code&gt;, the value of the &lt;code id=&quot;index-1&quot;&gt;TERM&lt;/code&gt; environment variable will be used. &lt;em&gt;fd&lt;/em&gt; is the file descriptor to which any initialization sequences will be sent; if not supplied or &lt;code&gt;-1&lt;/code&gt;, the file descriptor for &lt;code&gt;sys.stdout&lt;/code&gt; will be used.</source>
          <target state="translated">初始化终端。&lt;em&gt;term&lt;/em&gt;是给出终端名称的字符串，或者 &lt;code&gt;None&lt;/code&gt; ；如果省略或为 &lt;code&gt;None&lt;/code&gt; ，则将使用 &lt;code id=&quot;index-1&quot;&gt;TERM&lt;/code&gt; 环境变量的值。&lt;em&gt;fd&lt;/em&gt;是任何初始化序列将发送到的文件描述符；如果未提供或为 &lt;code&gt;-1&lt;/code&gt; ，则将使用 &lt;code&gt;sys.stdout&lt;/code&gt; 的文件描述符。</target>
        </trans-unit>
        <trans-unit id="ab79211166494a5373743e60ba9599daf58a2af2" translate="yes" xml:space="preserve">
          <source>Initializers of the correct type can also be specified:</source>
          <target state="translated">也可以指定正确类型的初始化器。</target>
        </trans-unit>
        <trans-unit id="3cc9f180e9eb479c565d2e3c4fd6ce05ca9e580e" translate="yes" xml:space="preserve">
          <source>Initializes a thread lock which can be used to serialize access to underlying I/O functionality which may not be threadsafe.</source>
          <target state="translated">初始化一个线程锁,它可以用来序列化对底层I/O功能的访问,而底层I/O功能可能不是线程安全的。</target>
        </trans-unit>
        <trans-unit id="3852a908d7c934410ea309c7ea1ea46af8743103" translate="yes" xml:space="preserve">
          <source>Initializes instance of &lt;a href=&quot;#difflib.HtmlDiff&quot;&gt;&lt;code&gt;HtmlDiff&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">初始化&lt;a href=&quot;#difflib.HtmlDiff&quot;&gt; &lt;code&gt;HtmlDiff&lt;/code&gt; 的&lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="f5885aef6f5096d972360ad2af443e94000e495a" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;a href=&quot;#logging.Handler&quot;&gt;&lt;code&gt;Handler&lt;/code&gt;&lt;/a&gt; instance by setting its level, setting the list of filters to the empty list and creating a lock (using &lt;a href=&quot;#logging.Handler.createLock&quot;&gt;&lt;code&gt;createLock()&lt;/code&gt;&lt;/a&gt;) for serializing access to an I/O mechanism.</source>
          <target state="translated">通过设置其级别，将过滤器列表设置为空列表并创建锁（使用&lt;a href=&quot;#logging.Handler.createLock&quot;&gt; &lt;code&gt;createLock()&lt;/code&gt; &lt;/a&gt;）来序列化对I / O机制的访问，来初始化&lt;a href=&quot;#logging.Handler&quot;&gt; &lt;code&gt;Handler&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="891e93a281cdc0ae8bd4cb4966bc1555092cc9eb" translate="yes" xml:space="preserve">
          <source>Initializes the given module object in accordance with &lt;a href=&quot;https://www.python.org/dev/peps/pep-0489&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;PEP 489&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;https://www.python.org/dev/peps/pep-0489&quot; id=&quot;index-20&quot;&gt;&lt;strong&gt;PEP 489&lt;/strong&gt;&lt;/a&gt;初始化给定的模块对象。</target>
        </trans-unit>
        <trans-unit id="76391f6bbc3769470e5c6904d1885bcf07a8f838" translate="yes" xml:space="preserve">
          <source>Initializes the handler with a buffer of the specified capacity. Here, &lt;em&gt;capacity&lt;/em&gt; means the number of logging records buffered.</source>
          <target state="translated">使用指定容量的缓冲区初始化处理程序。在这里，&lt;em&gt;容量&lt;/em&gt;是指缓冲的日志记录数。</target>
        </trans-unit>
        <trans-unit id="6a4659852d66e1b08bbacb99cd059b9b5779e858" translate="yes" xml:space="preserve">
          <source>Initially &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt; defined Python static type system as using &lt;em&gt;nominal subtyping&lt;/em&gt;. This means that a class &lt;code&gt;A&lt;/code&gt; is allowed where a class &lt;code&gt;B&lt;/code&gt; is expected if and only if &lt;code&gt;A&lt;/code&gt; is a subclass of &lt;code&gt;B&lt;/code&gt;.</source>
          <target state="translated">最初，&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;将Python静态类型系统定义为使用&lt;em&gt;名义子类型&lt;/em&gt;。这意味着，类 &lt;code&gt;A&lt;/code&gt; 允许其中的一类 &lt;code&gt;B&lt;/code&gt; 预计当且仅当 &lt;code&gt;A&lt;/code&gt; 是的一个子类 &lt;code&gt;B&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="651e55be975986e7fd15535125aa6f9af6b714d3" translate="yes" xml:space="preserve">
          <source>Initially, when a program is started, the locale is the &lt;code&gt;C&lt;/code&gt; locale, no matter what the user&amp;rsquo;s preferred locale is. There is one exception: the &lt;a href=&quot;#locale.LC_CTYPE&quot;&gt;&lt;code&gt;LC_CTYPE&lt;/code&gt;&lt;/a&gt; category is changed at startup to set the current locale encoding to the user&amp;rsquo;s preferred locale encoding. The program must explicitly say that it wants the user&amp;rsquo;s preferred locale settings for other categories by calling &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt;.</source>
          <target state="translated">最初，启动程序时，无论用户首选的语言环境是什么，语言环境都是 &lt;code&gt;C&lt;/code&gt; 语言环境。有一个例外：启动时更改&lt;a href=&quot;#locale.LC_CTYPE&quot;&gt; &lt;code&gt;LC_CTYPE&lt;/code&gt; &lt;/a&gt;类别，以将当前语言环境编码设置为用户的首选语言环境编码。该程序必须通过调用 &lt;code&gt;setlocale(LC_ALL, '')&lt;/code&gt; 明确表示它希望用户为其他类别设置首选的语言环境设置。</target>
        </trans-unit>
        <trans-unit id="b6d8ad6283ed79c07a911360e0d9b48d60fca9b3" translate="yes" xml:space="preserve">
          <source>Initiate a transfer over the data connection. If the transfer is active, send an &lt;code&gt;EPRT&lt;/code&gt; or &lt;code&gt;PORT&lt;/code&gt; command and the transfer command specified by &lt;em&gt;cmd&lt;/em&gt;, and accept the connection. If the server is passive, send an &lt;code&gt;EPSV&lt;/code&gt; or &lt;code&gt;PASV&lt;/code&gt; command, connect to it, and start the transfer command. Either way, return the socket for the connection.</source>
          <target state="translated">通过数据连接启动传输。如果传输处于活动状态，请发送 &lt;code&gt;EPRT&lt;/code&gt; 或 &lt;code&gt;PORT&lt;/code&gt; 命令以及&lt;em&gt;cmd&lt;/em&gt;指定的传输命令，并接受连接。如果服务器是被动服务器，请发送 &lt;code&gt;EPSV&lt;/code&gt; 或 &lt;code&gt;PASV&lt;/code&gt; 命令，连接到服务器，然后启动传输命令。无论哪种方式，请返回用于连接的套接字。</target>
        </trans-unit>
        <trans-unit id="a3b934f82fa9691663fe5cc49e6c91ec415ce86a" translate="yes" xml:space="preserve">
          <source>Inode number.</source>
          <target state="translated">节点号。</target>
        </trans-unit>
        <trans-unit id="61f3e06ef66f729eb248fc28dbd015725fbd26d3" translate="yes" xml:space="preserve">
          <source>Inode protection mode.</source>
          <target state="translated">节点保护模式。</target>
        </trans-unit>
        <trans-unit id="abc398c151cedbf682a4e32b5fe1f87a91547da5" translate="yes" xml:space="preserve">
          <source>Input methods</source>
          <target state="translated">输入方法</target>
        </trans-unit>
        <trans-unit id="3bac6667a1606f6aae5b9d31130c86a61ea3e529" translate="yes" xml:space="preserve">
          <source>Input parameter which defaults to the integer zero.</source>
          <target state="translated">输入参数,默认为整数0。</target>
        </trans-unit>
        <trans-unit id="f0dadaeaa1a0521f244cb0c7817109df239c4e4a" translate="yes" xml:space="preserve">
          <source>Input/ouput</source>
          <target state="translated">Input/ouput</target>
        </trans-unit>
        <trans-unit id="cfb6ac42c15bfc315aef836b57bb90c22f4f147f" translate="yes" xml:space="preserve">
          <source>InputSource Objects</source>
          <target state="translated">输入源对象</target>
        </trans-unit>
        <trans-unit id="98cceba3103286deb746764afbe409454e752550" translate="yes" xml:space="preserve">
          <source>Inputs as in &lt;a href=&quot;#turtle.pencolor&quot;&gt;&lt;code&gt;pencolor()&lt;/code&gt;&lt;/a&gt;, set both, fillcolor and pencolor, to the given value.</source>
          <target state="translated">与&lt;a href=&quot;#turtle.pencolor&quot;&gt; &lt;code&gt;pencolor()&lt;/code&gt; 中的&lt;/a&gt;输入一样，将fillcolor和pencolor都设置为给定值。</target>
        </trans-unit>
        <trans-unit id="95802daab3a23990338179f72248350c1434cf39" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="translated">Insert</target>
        </trans-unit>
        <trans-unit id="5c6157626eaa443a7d46529cadb0898d243cf4bf" translate="yes" xml:space="preserve">
          <source>Insert ## in front of selected lines.</source>
          <target state="translated">在所选行前插入##号。</target>
        </trans-unit>
        <trans-unit id="771d3a8e81fd09fb95d718f0e07e3c3ed54b1cb1" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;nlines&lt;/em&gt; lines into the specified window above the current line. The &lt;em&gt;nlines&lt;/em&gt; bottom lines are lost. For negative &lt;em&gt;nlines&lt;/em&gt;, delete &lt;em&gt;nlines&lt;/em&gt; lines starting with the one under the cursor, and move the remaining lines up. The bottom &lt;em&gt;nlines&lt;/em&gt; lines are cleared. The current cursor position remains the same.</source>
          <target state="translated">将&lt;em&gt;nlines&lt;/em&gt;行插入到当前行上方的指定窗口中。该&lt;em&gt;nlines&lt;/em&gt;底线都将丢失。对于负&lt;em&gt;nlines&lt;/em&gt;，删除从光标下方的&lt;em&gt;nlines&lt;/em&gt;开始的&lt;em&gt;nlines&lt;/em&gt;行，然后将其余的行向上移动。底部的&lt;em&gt;nlines&lt;/em&gt;行被清除。当前光标位置保持不变。</target>
        </trans-unit>
        <trans-unit id="9ab25aba32579e4cbe82e3445dbc2750c5f19e2d" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;a&lt;/em&gt; in sorted order. This is equivalent to &lt;code&gt;a.insert(bisect.bisect_left(a, x, lo, hi), x)&lt;/code&gt; assuming that &lt;em&gt;a&lt;/em&gt; is already sorted. Keep in mind that the O(log n) search is dominated by the slow O(n) insertion step.</source>
          <target state="translated">插入&lt;em&gt;X&lt;/em&gt;在&lt;em&gt;一个&lt;/em&gt;排序顺序。假设&lt;em&gt;a&lt;/em&gt;已经排序 &lt;code&gt;a.insert(bisect.bisect_left(a, x, lo, hi), x)&lt;/code&gt; 则等效于a.insert（bisect.bisect_left（a，x，lo，hi），x）。请记住，O（log n）搜索由缓慢的O（n）插入步骤主导。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ffe19f9b53fcc062222865d04ee695208ba7423" translate="yes" xml:space="preserve">
          <source>Insert &lt;em&gt;x&lt;/em&gt; into the deque at position &lt;em&gt;i&lt;/em&gt;.</source>
          <target state="translated">将&lt;em&gt;x&lt;/em&gt;插入双端队列中的位置&lt;em&gt;i&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e69d0858508dfc3e6620fa59f50ef0662785e9c6" translate="yes" xml:space="preserve">
          <source>Insert CGI variables for the current request into the &lt;code&gt;environ&lt;/code&gt; attribute.</source>
          <target state="translated">将当前请求的CGI变量插入到 &lt;code&gt;environ&lt;/code&gt; 属性中。</target>
        </trans-unit>
        <trans-unit id="11cf289408f544e7431d78ef915fdb066ede3d6a" translate="yes" xml:space="preserve">
          <source>Insert a blank line at cursor location.</source>
          <target state="translated">在光标位置插入一个空行。</target>
        </trans-unit>
        <trans-unit id="428b27b44b5679a5100cbb0f2b51ce75dd8a5bf2" translate="yes" xml:space="preserve">
          <source>Insert a blank line under the cursor. All following lines are moved down by one line.</source>
          <target state="translated">在光标下插入一个空行。下面的所有行都向下移动一行。</target>
        </trans-unit>
        <trans-unit id="8cc41d420c2a48fb3dbe04ee4c88fa790360f745" translate="yes" xml:space="preserve">
          <source>Insert a character string (as many characters as will fit on the line) before the character under the cursor, up to &lt;em&gt;n&lt;/em&gt; characters. If &lt;em&gt;n&lt;/em&gt; is zero or negative, the entire string is inserted. All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost. The cursor position does not change (after moving to &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;x&lt;/em&gt;, if specified).</source>
          <target state="translated">在光标下方的字符之前插入一个字符串（尽可能多的字符），直到&lt;em&gt;n个&lt;/em&gt;字符为止。如果&lt;em&gt;n&lt;/em&gt;为零或负数，则插入整个字符串。光标右边的所有字符都会向右移动，而该行上最右边的字符将丢失。光标位置不变（移动到&lt;em&gt;y&lt;/em&gt;，&lt;em&gt;x后&lt;/em&gt;，如果已指定）。</target>
        </trans-unit>
        <trans-unit id="52ef5c0b09949330d13e4bb951c2c108148e5ec6" translate="yes" xml:space="preserve">
          <source>Insert a character string (as many characters as will fit on the line) before the character under the cursor. All characters to the right of the cursor are shifted right, with the rightmost characters on the line being lost. The cursor position does not change (after moving to &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;x&lt;/em&gt;, if specified).</source>
          <target state="translated">在光标下方的字符之前插入一个字符串（该行中的字符数尽可能多）。光标右边的所有字符都会向右移动，而该行上最右边的字符将丢失。光标位置不变（移动到&lt;em&gt;y&lt;/em&gt;，&lt;em&gt;x后&lt;/em&gt;，如果已指定）。</target>
        </trans-unit>
        <trans-unit id="2cd230c1b957b61fbeafaadd6ef3bd7966d963f4" translate="yes" xml:space="preserve">
          <source>Insert a new child node before an existing child. It must be the case that &lt;em&gt;refChild&lt;/em&gt; is a child of this node; if not, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised. &lt;em&gt;newChild&lt;/em&gt; is returned. If &lt;em&gt;refChild&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, it inserts &lt;em&gt;newChild&lt;/em&gt; at the end of the children&amp;rsquo;s list.</source>
          <target state="translated">在现有子节点之前插入一个新的子节点。一定是&lt;em&gt;refChild&lt;/em&gt;是此节点的子级；如果不是，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;newChild&lt;/em&gt;返回。如果&lt;em&gt;refChild&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则它将&lt;em&gt;newChild&lt;/em&gt;插入子级列表的末尾。</target>
        </trans-unit>
        <trans-unit id="dbbded73e99c71141ac74230b61b365295b11341" translate="yes" xml:space="preserve">
          <source>Insert a new item with value &lt;em&gt;x&lt;/em&gt; in the array before position &lt;em&gt;i&lt;/em&gt;. Negative values are treated as being relative to the end of the array.</source>
          <target state="translated">在位置&lt;em&gt;i&lt;/em&gt;之前的数组中插入一个值为&lt;em&gt;x&lt;/em&gt;的新项。负值被视为相对于数组末端。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6442b4677754abf24013415cfc0b02328c37bf8d" translate="yes" xml:space="preserve">
          <source>Insert a simple entry into the list of &lt;a href=&quot;#warning-filter&quot;&gt;warnings filter specifications&lt;/a&gt;. The meaning of the function parameters is as for &lt;a href=&quot;#warnings.filterwarnings&quot;&gt;&lt;code&gt;filterwarnings()&lt;/code&gt;&lt;/a&gt;, but regular expressions are not needed as the filter inserted always matches any message in any module as long as the category and line number match.</source>
          <target state="translated">在&lt;a href=&quot;#warning-filter&quot;&gt;警告过滤器规格&lt;/a&gt;列表中插入一个简单的条目。函数参数的含义与&lt;a href=&quot;#warnings.filterwarnings&quot;&gt; &lt;code&gt;filterwarnings()&lt;/code&gt; 相同&lt;/a&gt;，但是不需要正则表达式，因为插入的过滤器始终匹配任何模块中的任何消息，只要类别和行号匹配即可。</target>
        </trans-unit>
        <trans-unit id="be8c8abeab9182b5ad4c0936ac5747b095eb532b" translate="yes" xml:space="preserve">
          <source>Insert an &lt;em&gt;ms&lt;/em&gt; millisecond pause in output.</source>
          <target state="translated">在输出中插入&lt;em&gt;ms&lt;/em&gt;毫秒的暂停。</target>
        </trans-unit>
        <trans-unit id="73267e5ac5110513448a2a6d6f16738aaf106dd8" translate="yes" xml:space="preserve">
          <source>Insert an entry into the list of &lt;a href=&quot;#warning-filter&quot;&gt;warnings filter specifications&lt;/a&gt;. The entry is inserted at the front by default; if &lt;em&gt;append&lt;/em&gt; is true, it is inserted at the end. This checks the types of the arguments, compiles the &lt;em&gt;message&lt;/em&gt; and &lt;em&gt;module&lt;/em&gt; regular expressions, and inserts them as a tuple in the list of warnings filters. Entries closer to the front of the list override entries later in the list, if both match a particular warning. Omitted arguments default to a value that matches everything.</source>
          <target state="translated">在&lt;a href=&quot;#warning-filter&quot;&gt;警告过滤器规格&lt;/a&gt;列表中插入一个条目。默认情况下，该条目插入在最前面；如果&lt;em&gt;append&lt;/em&gt;为true，则将其插入到末尾。这将检查参数的类型，编译&lt;em&gt;消息&lt;/em&gt;和&lt;em&gt;模块&lt;/em&gt;正则表达式，并将它们作为元组插入警告过滤器列表中。如果两个列表均与特定警告匹配，则更靠近列表开头的条目将覆盖列表后面的条目。省略的参数默认为匹配所有内容的值。</target>
        </trans-unit>
        <trans-unit id="ff80a5974b23d77a5c2b2ad834261e49b5ed7b09" translate="yes" xml:space="preserve">
          <source>Insert char or enter insert mode</source>
          <target state="translated">插入字符或进入插入模式</target>
        </trans-unit>
        <trans-unit id="e1b4dd9343d0aec1500078fcc20dfa87ecdaec8c" translate="yes" xml:space="preserve">
          <source>Insert contents of the system-wide clipboard into the current window.</source>
          <target state="translated">将系统范围内的剪贴板内容插入到当前窗口中。</target>
        </trans-unit>
        <trans-unit id="1d9d9fcb3881a1a7b2f39fbd44148815f8ffb775" translate="yes" xml:space="preserve">
          <source>Insert line</source>
          <target state="translated">插入一行</target>
        </trans-unit>
        <trans-unit id="85b1c3bfc9615f38c45334ce27a2c3874f427470" translate="yes" xml:space="preserve">
          <source>Insert text into the line buffer at the cursor position. This calls &lt;code&gt;rl_insert_text()&lt;/code&gt; in the underlying library, but ignores the return value.</source>
          <target state="translated">将文本插入到光标位置的行缓冲区中。这将在基础库中调用 &lt;code&gt;rl_insert_text()&lt;/code&gt; ，但忽略返回值。</target>
        </trans-unit>
        <trans-unit id="321a83365ddb728f137f24e4d0374b111b7a89d6" translate="yes" xml:space="preserve">
          <source>Inserts &lt;em&gt;subelement&lt;/em&gt; at the given position in this element. Raises &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;subelement&lt;/em&gt; is not an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此元素的给定位置插入&lt;em&gt;子&lt;/em&gt;元素。如果&lt;em&gt;subelement&lt;/em&gt;不是&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; ,&lt;/a&gt;则引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07136851031cb8faca3df628c368a5d3f07c5e9a" translate="yes" xml:space="preserve">
          <source>Inserts a pane at the specified position.</source>
          <target state="translated">在指定位置插入一个窗格。</target>
        </trans-unit>
        <trans-unit id="ba601e0ab0345ba7e2ea9c966cfb362c3e4da835" translate="yes" xml:space="preserve">
          <source>Inspect area below mouse for target objects while drag is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603a69de2ef615fc4774dc5a531b0478d24bd0ba" translate="yes" xml:space="preserve">
          <source>Install a timer that calls &lt;em&gt;fun&lt;/em&gt; after &lt;em&gt;t&lt;/em&gt; milliseconds.</source>
          <target state="translated">安装一个计时器，该计时器在&lt;em&gt;t&lt;/em&gt;毫秒后调用&lt;em&gt;fun&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d804377ba7463dd5b6eaba5ccaaad14a63c4069" translate="yes" xml:space="preserve">
          <source>Install all of your application&amp;rsquo;s dependencies into the &lt;code&gt;myapp&lt;/code&gt; directory, using pip:</source>
          <target state="translated">使用pip 将应用程序的所有依赖项安装到 &lt;code&gt;myapp&lt;/code&gt; 目录中：</target>
        </trans-unit>
        <trans-unit id="520b157afbe331621bce1a360a6f018e0e187fbb" translate="yes" xml:space="preserve">
          <source>Install an &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; instance as the default global opener. Installing an opener is only necessary if you want urlopen to use that opener; otherwise, simply call &lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt;&lt;code&gt;OpenerDirector.open()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;. The code does not check for a real &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;, and any class with the appropriate interface will work.</source>
          <target state="translated">安装一个&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;实例作为默认的全局打开器。仅当您希望urlopen使用该打开程序时，才需要安装打开程序。否则，只需调用&lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt; &lt;code&gt;OpenerDirector.open()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; 即可&lt;/a&gt;。该代码不会检查真正的&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;，任何具有适当接口的类都可以使用。</target>
        </trans-unit>
        <trans-unit id="964c4c7deeb02bca66bce575984f247809b17ee8" translate="yes" xml:space="preserve">
          <source>Install debug hooks on memory allocators to check for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e330f724f7fcf65d8b68bd41b82aaa46b9f715" translate="yes" xml:space="preserve">
          <source>Install the control-c handler. When a &lt;a href=&quot;signal#signal.SIGINT&quot;&gt;&lt;code&gt;signal.SIGINT&lt;/code&gt;&lt;/a&gt; is received (usually in response to the user pressing control-c) all registered results have &lt;a href=&quot;#unittest.TestResult.stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455b086ac3298a91870a87090996554bb11b3083" translate="yes" xml:space="preserve">
          <source>Install the control-c handler. When a &lt;code&gt;signal.SIGINT&lt;/code&gt; is received (usually in response to the user pressing control-c) all registered results have &lt;a href=&quot;#unittest.TestResult.stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; called.</source>
          <target state="translated">安装control-c处理程序。当 &lt;code&gt;signal.SIGINT&lt;/code&gt; 被接收（通常响应于用户按压控制-c）的所有已注册的结果有&lt;a href=&quot;#unittest.TestResult.stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="9d9844ff0d9d22475c61112c01b5f0c916b24483" translate="yes" xml:space="preserve">
          <source>Installation paths</source>
          <target state="translated">安装路径</target>
        </trans-unit>
        <trans-unit id="e23f8bdbda721b9cbed1f844f7307a95d9b58116" translate="yes" xml:space="preserve">
          <source>Installing Python Modules</source>
          <target state="translated">安装Python模块</target>
        </trans-unit>
        <trans-unit id="a5aa044edf2a4b23b0600882b63f3573a49708ee" translate="yes" xml:space="preserve">
          <source>Installing Python Modules (Legacy version)</source>
          <target state="translated">安装Python模块 (旧版)</target>
        </trans-unit>
        <trans-unit id="71e27cbe55c7ee739cd8deca3e2c0f21cd96ea3e" translate="yes" xml:space="preserve">
          <source>Installing your CGI script on a Unix system</source>
          <target state="translated">在Unix系统上安装你的CGI脚本。</target>
        </trans-unit>
        <trans-unit id="c1d91ffedb22549df648586a28db755e96527174" translate="yes" xml:space="preserve">
          <source>Installs activation scripts appropriate to the platform into the virtual environment.</source>
          <target state="translated">将适合平台的激活脚本安装到虚拟环境中。</target>
        </trans-unit>
        <trans-unit id="02d9da332f931b3a6a11cc4f1b01fd46bbfd85c7" translate="yes" xml:space="preserve">
          <source>Instance attributes (read-only):</source>
          <target state="translated">实例属性(只读)。</target>
        </trans-unit>
        <trans-unit id="cef505a4b9b67a0b31ca83b3b269c5533fa33c8d" translate="yes" xml:space="preserve">
          <source>Instance method</source>
          <target state="translated">实例方法</target>
        </trans-unit>
        <trans-unit id="7a3c19110538625e1e983c1581301c5d59f09ead" translate="yes" xml:space="preserve">
          <source>Instance methods:</source>
          <target state="translated">实例方法。</target>
        </trans-unit>
        <trans-unit id="f5e5a85bed7028b78978acbd1aaddcd815f1c067" translate="yes" xml:space="preserve">
          <source>Instance of the &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; class intended to be shared. If no customization of the &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; is needed, this instance can be used instead of repeatedly creating new instances.</source>
          <target state="translated">打算共享的&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; &lt;/a&gt;类的实例。如果不需要自定义&lt;a href=&quot;#unittest.TestLoader&quot;&gt; &lt;code&gt;TestLoader&lt;/code&gt; &lt;/a&gt;，则可以使用此实例，而不必重复创建新实例。</target>
        </trans-unit>
        <trans-unit id="66006b01de7b00fd125d534c85307c7025d31754" translate="yes" xml:space="preserve">
          <source>Instances are a context manager that raises &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt;&lt;code&gt;ResourceDenied&lt;/code&gt;&lt;/a&gt; if the specified exception type is raised. Any keyword arguments are treated as attribute/value pairs to be compared against any exception raised within the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. Only if all pairs match properly against attributes on the exception is &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt;&lt;code&gt;ResourceDenied&lt;/code&gt;&lt;/a&gt; raised.</source>
          <target state="translated">实例是上下文管理器，如果引发了指定的异常类型，则引发&lt;a href=&quot;#test.support.ResourceDenied&quot;&gt; &lt;code&gt;ResourceDenied&lt;/code&gt; &lt;/a&gt;。任何关键字参数都被视为属性/值对，用于与&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句中引发的任何异常进行比较。仅当所有对与异常上的属性正确匹配时，才会引发&lt;a href=&quot;#test.support.ResourceDenied&quot;&gt; &lt;code&gt;ResourceDenied&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b2ca9758b0f12ce392282b3b02b3fb6078d315a" translate="yes" xml:space="preserve">
          <source>Instances are a context manager that raises &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt;&lt;code&gt;ResourceDenied&lt;/code&gt;&lt;/a&gt; if the specified exception type is raised. Any keyword arguments are treated as attribute/value pairs to be compared against any exception raised within the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. Only if all pairs match properly against attributes on the exception is &lt;a href=&quot;#test.support.ResourceDenied&quot;&gt;&lt;code&gt;ResourceDenied&lt;/code&gt;&lt;/a&gt; raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c702b9ba47b1a29abe7f9b14424131410786fc9" translate="yes" xml:space="preserve">
          <source>Instances are created in the usual way, by calling the class:</source>
          <target state="translated">实例是以通常的方式创建的,通过调用该类。</target>
        </trans-unit>
        <trans-unit id="e36624384482780c99f8cf1e80e08d4dbffcccda" translate="yes" xml:space="preserve">
          <source>Instances are replaced with an appropriate value for Enum members.</source>
          <target state="translated">实例被替换为Enum成员的适当值。</target>
        </trans-unit>
        <trans-unit id="678f569c8a49c3e89e6407c01796479ffad36db3" translate="yes" xml:space="preserve">
          <source>Instances are replaced with an appropriate value for Enum members. By default, the initial value starts at 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977046f0ab67d4d0e4e35706464d8171ca16252f" translate="yes" xml:space="preserve">
          <source>Instances have a single attribute:</source>
          <target state="translated">实例有一个单一的属性。</target>
        </trans-unit>
        <trans-unit id="af4676b1bcc4624e7da45d7a5ff8eacd0bf3c33c" translate="yes" xml:space="preserve">
          <source>Instances have one method in addition to those of &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="translated">除了&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;对象的实例外，实例还有一种方法：</target>
        </trans-unit>
        <trans-unit id="9356878128c51826b54b444b3b3d1f7304b466d9" translate="yes" xml:space="preserve">
          <source>Instances have the following methods and attributes:</source>
          <target state="translated">实例有以下方法和属性。</target>
        </trans-unit>
        <trans-unit id="4836c2b7b89edcfc83e32a7e01ec4c9ebbb5e79a" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt; subclasses have some public instance variables:</source>
          <target state="translated">实例&lt;a href=&quot;#cmd.Cmd&quot;&gt; &lt;code&gt;Cmd&lt;/code&gt; 的&lt;/a&gt;子类有一些公共的实例变量：</target>
        </trans-unit>
        <trans-unit id="e0fbdb8f7a773261c049a9a5c3586d5acb9eee33" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt;&lt;code&gt;FileCookieJar&lt;/code&gt;&lt;/a&gt; raise this exception on failure to load cookies from a file. &lt;a href=&quot;#http.cookiejar.LoadError&quot;&gt;&lt;code&gt;LoadError&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt; &lt;code&gt;FileCookieJar&lt;/code&gt; 的&lt;/a&gt;实例在无法从文件加载cookie时引发此异常。&lt;a href=&quot;#http.cookiejar.LoadError&quot;&gt; &lt;code&gt;LoadError&lt;/code&gt; &lt;/a&gt;是&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="0c3af14ce90e18c0cd86060643d0a376c7566d62" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#netrc.netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt; have public instance variables:</source>
          <target state="translated">实例&lt;a href=&quot;#netrc.netrc&quot;&gt; &lt;code&gt;netrc&lt;/code&gt; &lt;/a&gt;具有公共实例变量：</target>
        </trans-unit>
        <trans-unit id="56e3aee8ff0d6c01108a6a06292032304f1239fb" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#poplib.POP3_SSL&quot;&gt;&lt;code&gt;POP3_SSL&lt;/code&gt;&lt;/a&gt; have no additional methods. The interface of this subclass is identical to its parent.</source>
          <target state="translated">&lt;a href=&quot;#poplib.POP3_SSL&quot;&gt; &lt;code&gt;POP3_SSL&lt;/code&gt; 的&lt;/a&gt;实例没有其他方法。该子类的接口与其父类相同。</target>
        </trans-unit>
        <trans-unit id="6a270da5a938701cf4bfb5b00e63f7b889296e57" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt; provide the following operations:</source>
          <target state="translated">&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#frozenset&quot;&gt; &lt;code&gt;frozenset&lt;/code&gt; &lt;/a&gt;实例提供以下操作：</target>
        </trans-unit>
        <trans-unit id="99ef98d14b1f3f5f16c5b4358f8ece80d4b0bb22" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; are compared to instances of &lt;a href=&quot;#frozenset&quot;&gt;&lt;code&gt;frozenset&lt;/code&gt;&lt;/a&gt; based on their members. For example, &lt;code&gt;set('abc') == frozenset('abc')&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt; and so does &lt;code&gt;set('abc') in set([frozenset('abc')])&lt;/code&gt;.</source>
          <target state="translated">根据其成员将&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;实例与&lt;a href=&quot;#frozenset&quot;&gt; &lt;code&gt;frozenset&lt;/code&gt; &lt;/a&gt;实例进行比较。例如， &lt;code&gt;set('abc') == frozenset('abc')&lt;/code&gt; 返回 &lt;code&gt;True&lt;/code&gt; ， &lt;code&gt;set('abc') in set([frozenset('abc')])&lt;/code&gt; 中的set（'abc'）也返回True。</target>
        </trans-unit>
        <trans-unit id="5bad8405386be273c519f37d5de7d1af43fd2371" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; subclasses have some public instance variables which either control lexical analysis or can be used for debugging:</source>
          <target state="translated">实例&lt;a href=&quot;#shlex.shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;子类有一些公共实例变量，无论是控制词法分析，也可以用于调试：</target>
        </trans-unit>
        <trans-unit id="3a114067119bf39dea4018ea438842b0e1df5bc4" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; must be created using the &lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt;&lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">必须使用&lt;a href=&quot;#ssl.SSLContext.wrap_socket&quot;&gt; &lt;code&gt;SSLContext.wrap_socket()&lt;/code&gt; &lt;/a&gt;方法创建&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="6232c7c11311e2dbaabeb35f7f01aef1268d5f26" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#statistics.NormalDist&quot;&gt;&lt;code&gt;NormalDist&lt;/code&gt;&lt;/a&gt; support addition, subtraction, multiplication and division by a constant. These operations are used for translation and scaling. For example:</source>
          <target state="translated">&lt;a href=&quot;#statistics.NormalDist&quot;&gt; &lt;code&gt;NormalDist&lt;/code&gt; &lt;/a&gt;实例支持通过常数进行加，减，乘和除。这些操作用于转换和缩放。例如：</target>
        </trans-unit>
        <trans-unit id="e4fca6b7030888ac58e9781d764d833f2fa42ad1" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#xml.sax.xmlreader.IncrementalParser&quot;&gt;&lt;code&gt;IncrementalParser&lt;/code&gt;&lt;/a&gt; offer the following additional methods:</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.xmlreader.IncrementalParser&quot;&gt; &lt;code&gt;IncrementalParser&lt;/code&gt; 的&lt;/a&gt;实例提供以下其他方法：</target>
        </trans-unit>
        <trans-unit id="c9c13ace643e3c6e869ce828dec5a9ec44914c1b" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;#xml.sax.xmlreader.Locator&quot;&gt;&lt;code&gt;Locator&lt;/code&gt;&lt;/a&gt; provide these methods:</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.xmlreader.Locator&quot;&gt; &lt;code&gt;Locator&lt;/code&gt; 的&lt;/a&gt;实例提供以下方法：</target>
        </trans-unit>
        <trans-unit id="804f8454e9538af6b77807d86e343f3fb23e2b60" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ast.expr&lt;/code&gt; and &lt;code&gt;ast.stmt&lt;/code&gt; subclasses have &lt;a href=&quot;#ast.AST.lineno&quot;&gt;&lt;code&gt;lineno&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ast.AST.col_offset&quot;&gt;&lt;code&gt;col_offset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ast.AST.lineno&quot;&gt;&lt;code&gt;lineno&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#ast.AST.col_offset&quot;&gt;&lt;code&gt;col_offset&lt;/code&gt;&lt;/a&gt; attributes. The &lt;a href=&quot;#ast.AST.lineno&quot;&gt;&lt;code&gt;lineno&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ast.AST.end_lineno&quot;&gt;&lt;code&gt;end_lineno&lt;/code&gt;&lt;/a&gt; are the first and last line numbers of source text span (1-indexed so the first line is line 1) and the &lt;a href=&quot;#ast.AST.col_offset&quot;&gt;&lt;code&gt;col_offset&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ast.AST.end_col_offset&quot;&gt;&lt;code&gt;end_col_offset&lt;/code&gt;&lt;/a&gt; are the corresponding UTF-8 byte offsets of the first and last tokens that generated the node. The UTF-8 offset is recorded because the parser uses UTF-8 internally.</source>
          <target state="translated">&lt;code&gt;ast.expr&lt;/code&gt; 和 &lt;code&gt;ast.stmt&lt;/code&gt; 子类的实例具有&lt;a href=&quot;#ast.AST.lineno&quot;&gt; &lt;code&gt;lineno&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ast.AST.col_offset&quot;&gt; &lt;code&gt;col_offset&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ast.AST.lineno&quot;&gt; &lt;code&gt;lineno&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ast.AST.col_offset&quot;&gt; &lt;code&gt;col_offset&lt;/code&gt; &lt;/a&gt;属性。的&lt;a href=&quot;#ast.AST.lineno&quot;&gt; &lt;code&gt;lineno&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ast.AST.end_lineno&quot;&gt; &lt;code&gt;end_lineno&lt;/code&gt; &lt;/a&gt;是源文本跨度（1-索引，以便第一行是第1行）和所述的第一和最后行号&lt;a href=&quot;#ast.AST.col_offset&quot;&gt; &lt;code&gt;col_offset&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ast.AST.end_col_offset&quot;&gt; &lt;code&gt;end_col_offset&lt;/code&gt; &lt;/a&gt;被生成该节点对应的第一和最后一个令牌的UTF-8字节偏移。记录UTF-8偏移量是因为解析器在内部使用UTF-8。</target>
        </trans-unit>
        <trans-unit id="5d95f68c80ce0e510ee590b3846279063b4a2aa5" translate="yes" xml:space="preserve">
          <source>Instances of Action (or return value of any callable to the &lt;code&gt;action&lt;/code&gt; parameter) should have attributes &amp;ldquo;dest&amp;rdquo;, &amp;ldquo;option_strings&amp;rdquo;, &amp;ldquo;default&amp;rdquo;, &amp;ldquo;type&amp;rdquo;, &amp;ldquo;required&amp;rdquo;, &amp;ldquo;help&amp;rdquo;, etc. defined. The easiest way to ensure these attributes are defined is to call &lt;code&gt;Action.__init__&lt;/code&gt;.</source>
          <target state="translated">Action实例（或可调用 &lt;code&gt;action&lt;/code&gt; 参数的任何返回值）应具有定义的属性&amp;ldquo; dest&amp;rdquo;，&amp;ldquo; option_strings&amp;rdquo;，&amp;ldquo; default&amp;rdquo;，&amp;ldquo; type&amp;rdquo;，&amp;ldquo; required&amp;rdquo;，&amp;ldquo; help&amp;rdquo;等。确保定义这些属性的最简单方法是调用 &lt;code&gt;Action.__init__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d188b0cbbecd67a4203389ad78cd336997dc157" translate="yes" xml:space="preserve">
          <source>Instances of a class cannot be ordered with respect to other instances of the same class, or other types of object, unless the class defines enough of the methods &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt; (in general, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; are sufficient, if you want the conventional meanings of the comparison operators).</source>
          <target state="translated">一个类的实例不能相对于同一类的其他实例，或其他类型的对象进行排序，除非类定义足够的方法&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__le__&quot;&gt; &lt;code&gt;__le__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__gt__&quot;&gt; &lt;code&gt;__gt__()&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ge__&quot;&gt; &lt;code&gt;__ge__()&lt;/code&gt; &lt;/a&gt;（通常，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__lt__&quot;&gt; &lt;code&gt;__lt__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;就足够了，如果您需要比较运算符的常规含义）。</target>
        </trans-unit>
        <trans-unit id="0ae71dda80f08a0ad9d6529fa485e3bf580f7096" translate="yes" xml:space="preserve">
          <source>Instances of a class cannot be ordered with respect to other instances of the same class, or other types of object, unless the class defines enough of the methods &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__le__&quot;&gt;&lt;code&gt;__le__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__gt__&quot;&gt;&lt;code&gt;__gt__()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__ge__&quot;&gt;&lt;code&gt;__ge__()&lt;/code&gt;&lt;/a&gt; (in general, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__lt__&quot;&gt;&lt;code&gt;__lt__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; are sufficient, if you want the conventional meanings of the comparison operators).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5dcf1058b351c38261d04ca320dda4b3f25f2d" translate="yes" xml:space="preserve">
          <source>Instances of class &lt;code&gt;_Feature&lt;/code&gt; have two corresponding methods, &lt;code&gt;getOptionalRelease()&lt;/code&gt; and &lt;code&gt;getMandatoryRelease()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_Feature&lt;/code&gt; 类的实例具有两个对应的方法， &lt;code&gt;getOptionalRelease()&lt;/code&gt; 和 &lt;code&gt;getMandatoryRelease()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e6c634a0edffb9d61a7365311bea34ffe79ec57" translate="yes" xml:space="preserve">
          <source>Instances of foreign functions are also C compatible data types; they represent C function pointers.</source>
          <target state="translated">外来函数的实例也是C兼容的数据类型,它们代表C函数指针。</target>
        </trans-unit>
        <trans-unit id="a8afbcc19adfe2bbe9b22c2815e4299724822e37" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; class have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;类的实例具有以下方法：</target>
        </trans-unit>
        <trans-unit id="3a9546d42fe8710c49b46e747a53a869881a8867" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; class represent the logical test units in the &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; universe. This class is intended to be used as a base class, with specific tests being implemented by concrete subclasses. This class implements the interface needed by the test runner to allow it to drive the tests, and methods that the test code can use to check for and report various kinds of failure.</source>
          <target state="translated">所述的实例&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;类代表在所述逻辑测试单元&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;宇宙。该类旨在用作基类，具体测试由具体的子类实现。此类实现测试运行程序所需的接口，以使其能够驱动测试，以及测试代码可用于检查和报告各种故障的方法。</target>
        </trans-unit>
        <trans-unit id="c68784d7b74127503c1abd5f3c46123eaca45a23" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;a href=&quot;#zipfile.ZipInfo&quot;&gt;&lt;code&gt;ZipInfo&lt;/code&gt;&lt;/a&gt; class are returned by the &lt;a href=&quot;#zipfile.ZipFile.getinfo&quot;&gt;&lt;code&gt;getinfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#zipfile.ZipFile.infolist&quot;&gt;&lt;code&gt;infolist()&lt;/code&gt;&lt;/a&gt; methods of &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; objects. Each object stores information about a single member of the ZIP archive.</source>
          <target state="translated">&lt;a href=&quot;#zipfile.ZipInfo&quot;&gt; &lt;code&gt;ZipInfo&lt;/code&gt; &lt;/a&gt;类的实例由&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;#zipfile.ZipFile.getinfo&quot;&gt; &lt;code&gt;getinfo()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#zipfile.ZipFile.infolist&quot;&gt; &lt;code&gt;infolist()&lt;/code&gt; &lt;/a&gt;方法返回。每个对象都存储有关ZIP存档的单个成员的信息。</target>
        </trans-unit>
        <trans-unit id="7bcb1ef59d54b0ecd47451fa339ebb50def36131" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;em&gt;DatagramTransport&lt;/em&gt; class are returned from the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt;&lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt;&lt;/a&gt; event loop method.</source>
          <target state="translated">从&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_datagram_endpoint&quot;&gt; &lt;code&gt;loop.create_datagram_endpoint()&lt;/code&gt; &lt;/a&gt;事件循环方法返回&lt;em&gt;DatagramTransport&lt;/em&gt;类的实例。</target>
        </trans-unit>
        <trans-unit id="586088455e5044d9a461dfedd040a8e305fa706e" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;em&gt;ReadTransport&lt;/em&gt; class are returned from the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt;&lt;code&gt;loop.connect_read_pipe()&lt;/code&gt;&lt;/a&gt; event loop method and are also used by subprocess-related methods like &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ReadTransport&lt;/em&gt;类的实例从&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_read_pipe&quot;&gt; &lt;code&gt;loop.connect_read_pipe()&lt;/code&gt; &lt;/a&gt;事件循环方法返回，并且还与子&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;相关的方法（例如loop.subprocess_exec（））使用。</target>
        </trans-unit>
        <trans-unit id="2c1f936b1157bd672393e5f1fcb46b2dc8e3cf90" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;em&gt;SubprocessTransport&lt;/em&gt; class are returned from event loop methods &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt;&lt;code&gt;loop.subprocess_shell()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从事件循环方法&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt; &lt;code&gt;loop.subprocess_shell()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;返回&lt;em&gt;SubprocessTransport&lt;/em&gt;类的实例。</target>
        </trans-unit>
        <trans-unit id="67256cc8f2e8e404f6172497df055c8737b58bdb" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;em&gt;Transport&lt;/em&gt; class are returned from or used by event loop methods like &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt;&lt;code&gt;loop.create_unix_connection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt;&lt;code&gt;loop.create_server()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;asyncio-eventloop#asyncio.loop.sendfile&quot;&gt;&lt;code&gt;loop.sendfile()&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="translated">&lt;em&gt;Transport&lt;/em&gt;类的实例从事件循环方法（例如&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_unix_connection&quot;&gt; &lt;code&gt;loop.create_unix_connection()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_server&quot;&gt; &lt;code&gt;loop.create_server()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;asyncio-eventloop#asyncio.loop.sendfile&quot;&gt; &lt;code&gt;loop.sendfile()&lt;/code&gt; &lt;/a&gt;等）返回或使用。</target>
        </trans-unit>
        <trans-unit id="b5fb2b433087bffe30f4818f8930283b1d33a135" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;em&gt;WriteTransport&lt;/em&gt; class are returned from the &lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt;&lt;code&gt;loop.connect_write_pipe()&lt;/code&gt;&lt;/a&gt; event loop method and are also used by subprocess-related methods like &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;WriteTransport&lt;/em&gt;类的实例从&lt;a href=&quot;asyncio-eventloop#asyncio.loop.connect_write_pipe&quot;&gt; &lt;code&gt;loop.connect_write_pipe()&lt;/code&gt; &lt;/a&gt;事件循环方法返回，并且还与子&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;相关的方法（例如loop.subprocess_exec（））使用。</target>
        </trans-unit>
        <trans-unit id="4cbaede1df11dc6a6a6c405d9432098c3bd45c5c" translate="yes" xml:space="preserve">
          <source>Instances of these classes have no public methods. Functions exported by the shared library can be accessed as attributes or by index. Please note that accessing the function through an attribute caches the result and therefore accessing it repeatedly returns the same object each time. On the other hand, accessing it through an index returns a new object each time:</source>
          <target state="translated">这些类的实例没有公共方法。共享库导出的函数可以作为属性或通过索引来访问。请注意,通过属性访问函数会缓存结果,因此每次访问都会重复返回同一个对象。另一方面,通过索引访问它,每次都返回一个新的对象。</target>
        </trans-unit>
        <trans-unit id="1a4d2d21f791021b6819e5841a2fccc5056ea44a" translate="yes" xml:space="preserve">
          <source>Instances of this class behave like &lt;a href=&quot;#ctypes.CDLL&quot;&gt;&lt;code&gt;CDLL&lt;/code&gt;&lt;/a&gt; instances, except that the Python GIL is &lt;em&gt;not&lt;/em&gt; released during the function call, and after the function execution the Python error flag is checked. If the error flag is set, a Python exception is raised.</source>
          <target state="translated">此类的实例的行为类似于&lt;a href=&quot;#ctypes.CDLL&quot;&gt; &lt;code&gt;CDLL&lt;/code&gt; &lt;/a&gt;实例，但在函数调用期间&lt;em&gt;未&lt;/em&gt;释放Python GIL ，并且在函数执行后将检查Python错误标志。如果设置了错误标志，则会引发Python异常。</target>
        </trans-unit>
        <trans-unit id="d0b4eb84d866c4aa98cf000e08ff3a6c3d081018" translate="yes" xml:space="preserve">
          <source>Instances of this class can be used as both a context manager:</source>
          <target state="translated">该类的实例既可以作为上下文管理器使用。</target>
        </trans-unit>
        <trans-unit id="f609df77c7087014c66efc5131badef500e89bea" translate="yes" xml:space="preserve">
          <source>Instances of this class have &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; methods identical in signature to &lt;a href=&quot;#codeop.compile_command&quot;&gt;&lt;code&gt;compile_command()&lt;/code&gt;&lt;/a&gt;; the difference is that if the instance compiles program text containing a &lt;code&gt;__future__&lt;/code&gt; statement, the instance &amp;lsquo;remembers&amp;rsquo; and compiles all subsequent program texts with the statement in force.</source>
          <target state="translated">此类的实例具有&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;方法，其签名与&lt;a href=&quot;#codeop.compile_command&quot;&gt; &lt;code&gt;compile_command()&lt;/code&gt; &lt;/a&gt;相同；不同之处在于，如果实例编译包含 &lt;code&gt;__future__&lt;/code&gt; 语句的程序文本，则该实例&amp;ldquo;记住&amp;rdquo;并使用有效的语句编译所有后续程序文本。</target>
        </trans-unit>
        <trans-unit id="925a0c7a76a57e11d3f263578f0021165d4947c0" translate="yes" xml:space="preserve">
          <source>Instances of this class have &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; methods identical in signature to the built-in function &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;, but with the difference that if the instance compiles program text containing a &lt;a href=&quot;__future__#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; statement, the instance &amp;lsquo;remembers&amp;rsquo; and compiles all subsequent program texts with the statement in force.</source>
          <target state="translated">该类的实例具有&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt; &lt;code&gt;__call__()&lt;/code&gt; &lt;/a&gt;方法，其签名与内置函数&lt;a href=&quot;functions#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; 相同&lt;/a&gt;，但不同之处在于，如果该实例编译包含&lt;a href=&quot;__future__#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; &lt;/a&gt;语句的程序文本，则该实例&amp;ldquo;记住&amp;rdquo;并使用以下命令编译所有后续程序文本。有效声明。</target>
        </trans-unit>
        <trans-unit id="c02f8932c379c69e1ca59cd35ffe68b14cc70934" translate="yes" xml:space="preserve">
          <source>Instances of this class have &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; methods identical in signature to &lt;a href=&quot;#codeop.compile_command&quot;&gt;&lt;code&gt;compile_command()&lt;/code&gt;&lt;/a&gt;; the difference is that if the instance compiles program text containing a &lt;code&gt;__future__&lt;/code&gt; statement, the instance &amp;lsquo;remembers&amp;rsquo; and compiles all subsequent program texts with the statement in force.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd73e7c79938ba23bc1108f706bd345af9af765" translate="yes" xml:space="preserve">
          <source>Instances of this class have &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; methods identical in signature to the built-in function &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;, but with the difference that if the instance compiles program text containing a &lt;a href=&quot;__future__#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt; statement, the instance &amp;lsquo;remembers&amp;rsquo; and compiles all subsequent program texts with the statement in force.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cea02a40f1382d313c478a7d347bf77afc22680" translate="yes" xml:space="preserve">
          <source>Instances of this class have attributes &lt;code&gt;filename&lt;/code&gt;, &lt;code&gt;lineno&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt; for easier access to the details. &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; of the exception instance returns only the message.</source>
          <target state="translated">此类的实例具有 &lt;code&gt;filename&lt;/code&gt; ， &lt;code&gt;lineno&lt;/code&gt; ， &lt;code&gt;offset&lt;/code&gt; 和 &lt;code&gt;text&lt;/code&gt; 属性，以便更轻松地访问详细信息。异常实例的&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;仅返回消息。</target>
        </trans-unit>
        <trans-unit id="e9552998fad2e04265127b613f40d80668c89fe3" translate="yes" xml:space="preserve">
          <source>Instances of this class represent loaded shared libraries. Functions in these libraries use the standard C calling convention, and are assumed to return &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">此类的实例表示已加载的共享库。这些库中的函数使用标准的C调用约定，并假定返回 &lt;code&gt;int&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1092250393de1231514a87858fe06d28af28725a" translate="yes" xml:space="preserve">
          <source>Instant User&amp;rsquo;s Manual</source>
          <target state="translated">即时用户手册</target>
        </trans-unit>
        <trans-unit id="574cb265821ad17477fe1f76be69bb3a65511224" translate="yes" xml:space="preserve">
          <source>Instantiate a socket from data obtained from the &lt;a href=&quot;#socket.socket.share&quot;&gt;&lt;code&gt;socket.share()&lt;/code&gt;&lt;/a&gt; method. The socket is assumed to be in blocking mode.</source>
          <target state="translated">根据从&lt;a href=&quot;#socket.socket.share&quot;&gt; &lt;code&gt;socket.share()&lt;/code&gt; &lt;/a&gt;方法获得的数据实例化套接字。假定套接字处于阻止模式。</target>
        </trans-unit>
        <trans-unit id="6cc2c38c57dd41a65fc68bb18ba93a896f33546b" translate="yes" xml:space="preserve">
          <source>Instantiate the bytes object &lt;em&gt;str&lt;/em&gt; with the supplied parameters, where &lt;em&gt;str&lt;/em&gt; should be a parameterized string obtained from the terminfo database. E.g. &lt;code&gt;tparm(tigetstr(&quot;cup&quot;), 5, 3)&lt;/code&gt; could result in &lt;code&gt;b'\033[6;4H'&lt;/code&gt;, the exact result depending on terminal type.</source>
          <target state="translated">使用提供的参数实例化byte对象&lt;em&gt;str&lt;/em&gt;，其中&lt;em&gt;str&lt;/em&gt;应该是从terminfo数据库获得的参数化字符串。例如 &lt;code&gt;tparm(tigetstr(&quot;cup&quot;), 5, 3)&lt;/code&gt; 可能会导致 &lt;code&gt;b'\033[6;4H'&lt;/code&gt; ，确切的结果取决于终端类型。</target>
        </trans-unit>
        <trans-unit id="be1f69e0247ba6c30dc81d6522ec5b9dfbbb54e4" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;autospec=True&lt;/code&gt; you can pass &lt;code&gt;autospec=some_object&lt;/code&gt; to use an arbitrary object as the spec instead of the one being replaced.</source>
          <target state="translated">代替 &lt;code&gt;autospec=True&lt;/code&gt; ,您可以传递 &lt;code&gt;autospec=some_object&lt;/code&gt; ,以使用任意对象作为规范，而不是被替换的规范。</target>
        </trans-unit>
        <trans-unit id="c5c2e9f6e6835a11ba9448dc7766ab78368e93af" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;parser.readfp(fp)&lt;/code&gt; use &lt;code&gt;parser.read_file(readline_generator(fp))&lt;/code&gt;.</source>
          <target state="translated">代替 &lt;code&gt;parser.readfp(fp)&lt;/code&gt; 使用 &lt;code&gt;parser.read_file(readline_generator(fp))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3335f1cb058452ae970d6a5f6d030ab421d2b7a5" translate="yes" xml:space="preserve">
          <source>Instead of passing &lt;code&gt;True&lt;/code&gt; as the value for the punctuation_chars parameter, you can pass a string with specific characters, which will be used to determine which characters constitute punctuation. For example:</source>
          <target state="translated">可以传递带有特定字符的字符串，而不是传递 &lt;code&gt;True&lt;/code&gt; 作为punctuation_chars参数的值，该字符串将用于确定构成标点的字符。例如：</target>
        </trans-unit>
        <trans-unit id="bfe94486b315d1f59be6456fc99c6885002b55bd" translate="yes" xml:space="preserve">
          <source>Instead of printing the output at the end of the profile run, you can save the results to a file by specifying a filename to the &lt;code&gt;run()&lt;/code&gt; function:</source>
          <target state="translated">您可以通过在 &lt;code&gt;run()&lt;/code&gt; 函数中指定文件名来将结果保存到文件中，而不是在概要文件运行结束时打印输出：</target>
        </trans-unit>
        <trans-unit id="6962965673ba6e30d7da60e2b13234969e6aa223" translate="yes" xml:space="preserve">
          <source>Instead of reading the profile data from a file, a &lt;code&gt;cProfile.Profile&lt;/code&gt; or &lt;a href=&quot;#profile.Profile&quot;&gt;&lt;code&gt;profile.Profile&lt;/code&gt;&lt;/a&gt; object can be used as the profile data source.</source>
          <target state="translated">代替从文件读取概要文件数据，可以将 &lt;code&gt;cProfile.Profile&lt;/code&gt; 或&lt;a href=&quot;#profile.Profile&quot;&gt; &lt;code&gt;profile.Profile&lt;/code&gt; &lt;/a&gt;对象用作概要文件数据源。</target>
        </trans-unit>
        <trans-unit id="1ab3ecc1e0fcedf8c861d9c035dc31010b7ed532" translate="yes" xml:space="preserve">
          <source>Instead of waiting, or after a box is closed, open a completion box immediately with Show Completions on the Edit menu. The default hot key is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f3292cd4df9827802ae460d7bf0d817b1c06d4" translate="yes" xml:space="preserve">
          <source>Instead one should protect the &amp;ldquo;entry point&amp;rdquo; of the program by using &lt;code&gt;if
__name__ == '__main__':&lt;/code&gt; as follows:</source>
          <target state="translated">相反，应该使用 &lt;code&gt;if __name__ == '__main__':&lt;/code&gt; 来保护程序的&amp;ldquo;入口点&amp;rdquo; ：</target>
        </trans-unit>
        <trans-unit id="96d5f6e166357195ec9d7a25ec7a7cc3761d5193" translate="yes" xml:space="preserve">
          <source>Instead, it is better to search a list of precomputed keys to find the index of the record in question:</source>
          <target state="translated">相反,最好是搜索一个预先计算好的键列表来寻找相关记录的索引。</target>
        </trans-unit>
        <trans-unit id="c0c218a2e12a68573c0a6efe87b144bd67b29216" translate="yes" xml:space="preserve">
          <source>Instead, use the DB-API&amp;rsquo;s parameter substitution. Put &lt;code&gt;?&lt;/code&gt; as a placeholder wherever you want to use a value, and then provide a tuple of values as the second argument to the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method. (Other database modules may use a different placeholder, such as &lt;code&gt;%s&lt;/code&gt; or &lt;code&gt;:1&lt;/code&gt;.) For example:</source>
          <target state="translated">而是使用DB-API的参数替换。放 &lt;code&gt;?&lt;/code&gt; 作为要使用值的位置的占位符，然后提供值的元组作为游标的&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt;方法的第二个参数。（其他数据库模块可以使用其他占位符，例如 &lt;code&gt;%s&lt;/code&gt; 或 &lt;code&gt;:1&lt;/code&gt; 。）例如：</target>
        </trans-unit>
        <trans-unit id="c639969c05d984ea055d9d4f757063936b210288" translate="yes" xml:space="preserve">
          <source>Instructions for non-Unix systems will vary; check your HTTP server&amp;rsquo;s documentation (it will usually have a section on CGI scripts).</source>
          <target state="translated">非Unix系统的说明会有所不同；检查HTTP服务器的文档（通常会有关于CGI脚本的部分）。</target>
        </trans-unit>
        <trans-unit id="1442021d1e6e277098afc29be0d45b6f7adc68dc" translate="yes" xml:space="preserve">
          <source>Instructs &lt;a href=&quot;#csv.reader&quot;&gt;&lt;code&gt;reader&lt;/code&gt;&lt;/a&gt; to perform no special processing of quote characters.</source>
          <target state="translated">指示&lt;a href=&quot;#csv.reader&quot;&gt; &lt;code&gt;reader&lt;/code&gt; &lt;/a&gt;不对引号字符进行特殊处理。</target>
        </trans-unit>
        <trans-unit id="047e505fbfb736e9c1925bb8f8dfaa7c490f8277" translate="yes" xml:space="preserve">
          <source>Instructs &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects to never quote fields. When the current &lt;em&gt;delimiter&lt;/em&gt; occurs in output data it is preceded by the current &lt;em&gt;escapechar&lt;/em&gt; character. If &lt;em&gt;escapechar&lt;/em&gt; is not set, the writer will raise &lt;a href=&quot;#csv.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; if any characters that require escaping are encountered.</source>
          <target state="translated">指示&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;对象从不引用字段。当前&lt;em&gt;定界符&lt;/em&gt;出现在输出数据中时，其前面是当前&lt;em&gt;转义&lt;/em&gt;符。如果未设置&lt;em&gt;escapechar&lt;/em&gt;，则在遇到任何需要转义的字符时，&lt;em&gt;编写&lt;/em&gt;器将引发&lt;a href=&quot;#csv.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b10705ce857dbeced06f0e80b06d1258b1c3559" translate="yes" xml:space="preserve">
          <source>Instructs &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects to only quote those fields which contain special characters such as &lt;em&gt;delimiter&lt;/em&gt;, &lt;em&gt;quotechar&lt;/em&gt; or any of the characters in &lt;em&gt;lineterminator&lt;/em&gt;.</source>
          <target state="translated">指示&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;对象仅引用那些包含特殊字符（例如&lt;em&gt;定界符&lt;/em&gt;，&lt;em&gt;quotechar&lt;/em&gt;或&lt;em&gt;lineterminator中的&lt;/em&gt;任何字符）的&lt;em&gt;字段&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a28899561f1860e0cebbdf8e6feef81d417287ee" translate="yes" xml:space="preserve">
          <source>Instructs &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects to quote all fields.</source>
          <target state="translated">指示&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;对象引用所有字段。</target>
        </trans-unit>
        <trans-unit id="0e13df308f51e63d2ca55d3485fd8b7d669b80d7" translate="yes" xml:space="preserve">
          <source>Instructs &lt;a href=&quot;#csv.writer&quot;&gt;&lt;code&gt;writer&lt;/code&gt;&lt;/a&gt; objects to quote all non-numeric fields.</source>
          <target state="translated">指示&lt;a href=&quot;#csv.writer&quot;&gt; &lt;code&gt;writer&lt;/code&gt; &lt;/a&gt;对象引用所有非数字字段。</target>
        </trans-unit>
        <trans-unit id="68a9f1416c044b9eb3ae50c77e7087fc5bdcfec6" translate="yes" xml:space="preserve">
          <source>Instructs the reader to convert all non-quoted fields to type &lt;em&gt;float&lt;/em&gt;.</source>
          <target state="translated">指示读者将所有未引用的字段转换为&lt;em&gt;float&lt;/em&gt;类型。</target>
        </trans-unit>
        <trans-unit id="9f9ac0fbc7f32aa66d8b0df0a6752da89865807f" translate="yes" xml:space="preserve">
          <source>IntEnum</source>
          <target state="translated">IntEnum</target>
        </trans-unit>
        <trans-unit id="a7dcebc39b9a6200e72e040ddb4b56fbab680190" translate="yes" xml:space="preserve">
          <source>IntFlag</source>
          <target state="translated">IntFlag</target>
        </trans-unit>
        <trans-unit id="32597b26633647b2d319add4525291d5919eb5f2" translate="yes" xml:space="preserve">
          <source>Integer expiry date in seconds since epoch, or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. See also the &lt;a href=&quot;#http.cookiejar.Cookie.is_expired&quot;&gt;&lt;code&gt;is_expired()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">整数，自纪元以来以秒为单位的到期日期，或者为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。另请参见&lt;a href=&quot;#http.cookiejar.Cookie.is_expired&quot;&gt; &lt;code&gt;is_expired()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="370fb883669c7c619884fcfa764167a7b1ba29d8" translate="yes" xml:space="preserve">
          <source>Integer or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. Netscape cookies have &lt;a href=&quot;#http.cookiejar.Cookie.version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; 0. &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; cookies have a &lt;code&gt;version&lt;/code&gt; cookie-attribute of 1. However, note that &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; may &amp;lsquo;downgrade&amp;rsquo; RFC 2109 cookies to Netscape cookies, in which case &lt;a href=&quot;#http.cookiejar.Cookie.version&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt; is 0.</source>
          <target state="translated">整数或&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。Netscape cookie的&lt;a href=&quot;#http.cookiejar.Cookie.version&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt;为&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-22&quot;&gt;&lt;strong&gt;0。RFC2965&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-23&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; cookie的 &lt;code&gt;version&lt;/code&gt; cookie属性为1。但是，请注意，&lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; &lt;/a&gt;可能会将RFC 2109 cookie降级为Netscape cookie，在这种情况下，&lt;a href=&quot;#http.cookiejar.Cookie.version&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt;为0。</target>
        </trans-unit>
        <trans-unit id="b2586bd79fe20fc085091ee4c039323ab91a2931" translate="yes" xml:space="preserve">
          <source>Integer specifying the handle of the Python DLL.</source>
          <target state="translated">整数,指定Python DLL的句柄。</target>
        </trans-unit>
        <trans-unit id="4be890d08d451686a7899dac00d8db91fbaa5012" translate="yes" xml:space="preserve">
          <source>Integer value to control debugging output. The initialize value is taken from the module variable &lt;code&gt;Debug&lt;/code&gt;. Values greater than three trace each command.</source>
          <target state="translated">整数值，用于控制调试输出。初始化值来自模块变量 &lt;code&gt;Debug&lt;/code&gt; 。大于3的值将跟踪每个命令。</target>
        </trans-unit>
        <trans-unit id="0af14c05371406c3bfd30e44309da86d10408fca" translate="yes" xml:space="preserve">
          <source>Integers can be added to or subtracted from address objects. Some examples:</source>
          <target state="translated">整数可以在地址对象中加减。一些例子:</target>
        </trans-unit>
        <trans-unit id="d6ab8a868612d7d4c1a82a75ee51d447ac3ad36d" translate="yes" xml:space="preserve">
          <source>Integration with the warnings module</source>
          <target state="translated">与警告模块整合</target>
        </trans-unit>
        <trans-unit id="542505ecbda45c153abc5ccd78db35ec4f174034" translate="yes" xml:space="preserve">
          <source>Interact with process:</source>
          <target state="translated">与流程互动。</target>
        </trans-unit>
        <trans-unit id="80be62166e7de013309afd54472bc1797dd47e7f" translate="yes" xml:space="preserve">
          <source>Interact with process: Send data to stdin. Read data from stdout and stderr, until end-of-file is reached. Wait for process to terminate and set the &lt;a href=&quot;#subprocess.Popen.returncode&quot;&gt;&lt;code&gt;returncode&lt;/code&gt;&lt;/a&gt; attribute. The optional &lt;em&gt;input&lt;/em&gt; argument should be data to be sent to the child process, or &lt;code&gt;None&lt;/code&gt;, if no data should be sent to the child. If streams were opened in text mode, &lt;em&gt;input&lt;/em&gt; must be a string. Otherwise, it must be bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b5cc2308bf821e6cd84802cf3b9067390dca9f" translate="yes" xml:space="preserve">
          <source>Interact with process: Send data to stdin. Read data from stdout and stderr, until end-of-file is reached. Wait for process to terminate. The optional &lt;em&gt;input&lt;/em&gt; argument should be data to be sent to the child process, or &lt;code&gt;None&lt;/code&gt;, if no data should be sent to the child. If streams were opened in text mode, &lt;em&gt;input&lt;/em&gt; must be a string. Otherwise, it must be bytes.</source>
          <target state="translated">与进程交互：将数据发送到stdin。从stdout和stderr读取数据，直到到达文件末尾。等待进程终止。可选的&lt;em&gt;输入&lt;/em&gt;参数应该是要发送到子进程的数据，如果没有数据应该发送到子进程，则为 &lt;code&gt;None&lt;/code&gt; 。如果以文本模式打开流，则&lt;em&gt;输入&lt;/em&gt;必须为字符串。否则，它必须是字节。</target>
        </trans-unit>
        <trans-unit id="c32c2296489969b7635662c3bc8e006192df7595" translate="yes" xml:space="preserve">
          <source>Interacting with Subprocesses</source>
          <target state="translated">与子进程的交互</target>
        </trans-unit>
        <trans-unit id="0fa8e4485c2202467e61698e8d5ba21575b8a864" translate="yes" xml:space="preserve">
          <source>Interaction function, emulates a very dumb Telnet client.</source>
          <target state="translated">交互功能,模拟一个很笨的Telnet客户端。</target>
        </trans-unit>
        <trans-unit id="ecb2b41b88adb0386e2e88e0cb9c56f459a0f7eb" translate="yes" xml:space="preserve">
          <source>Interactive Console Objects</source>
          <target state="translated">交互式控制台对象</target>
        </trans-unit>
        <trans-unit id="3cfa87a88446a39b489c704cac79d06af1b86206" translate="yes" xml:space="preserve">
          <source>Interactive Interpreter Objects</source>
          <target state="translated">交互式解释器对象</target>
        </trans-unit>
        <trans-unit id="2cadb5b7ff0248d2b78142447a263943598198ad" translate="yes" xml:space="preserve">
          <source>Interesting examples</source>
          <target state="translated">有趣的例子</target>
        </trans-unit>
        <trans-unit id="7b4db7ef1fa23cfb5e115a2a2c89d46a6a2ebc4a" translate="yes" xml:space="preserve">
          <source>Interface</source>
          <target state="translated">Interface</target>
        </trans-unit>
        <trans-unit id="8f852726c2cf35cbc0da9c364c92d16e46188ec0" translate="yes" xml:space="preserve">
          <source>Interface for a sequence of nodes.</source>
          <target state="translated">节点序列的接口。</target>
        </trans-unit>
        <trans-unit id="1c4db4b0abc2834a17fec9e2358468e1c7283350" translate="yes" xml:space="preserve">
          <source>Interface for associating a SAX event with a document location. A locator object will return valid results only during calls to DocumentHandler methods; at any other time, the results are unpredictable. If information is not available, methods may return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">用于将SAX事件与文档位置相关联的界面。定位器对象仅在调用DocumentHandler方法期间才返回有效结果。在任何其他时间，结果都是不可预测的。如果没有可用信息，则方法可能返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5aa34ab8218f9e4e220f7344dabd8786a5fdb30e" translate="yes" xml:space="preserve">
          <source>Interface objects</source>
          <target state="translated">接口对象</target>
        </trans-unit>
        <trans-unit id="8815c1714243ec8fd3c5703aaa179285d61a547d" translate="yes" xml:space="preserve">
          <source>Interface objects are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;, so they can be used as keys in dictionaries.</source>
          <target state="translated">接口对象是可&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;散列的&lt;/a&gt;，因此它们可用作字典中的键。</target>
        </trans-unit>
        <trans-unit id="029ae727719c0190c4fc3e6c2815b79437cef934" translate="yes" xml:space="preserve">
          <source>Interface objects are &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;, so they can be used as keys in dictionaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2972dba464e3ec39c3f8d844bc8f4665db76466" translate="yes" xml:space="preserve">
          <source>Interface objects can be compared with the usual set of logical operators.</source>
          <target state="translated">接口对象可以与通常的逻辑运算符集进行比较。</target>
        </trans-unit>
        <trans-unit id="5af8df7a7a4069a4a7e8da32faa2198a5bc0ef82" translate="yes" xml:space="preserve">
          <source>Interface objects support some operators. Unless stated otherwise, operators can only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 with IPv6).</source>
          <target state="translated">接口对象支持一些运算符。除非另有说明,否则运算符只能在兼容对象之间应用(即IPv4与IPv4、IPv6与IPv6)。</target>
        </trans-unit>
        <trans-unit id="009aeb4117871f36b8d07dbea81e88efde3f84c2" translate="yes" xml:space="preserve">
          <source>Interface representing a bidirectional transport, such as a TCP connection.</source>
          <target state="translated">代表双向传输的接口,如TCP连接。</target>
        </trans-unit>
        <trans-unit id="bae0f7875489c70ff870e51bf1acd5af5cd84f7f" translate="yes" xml:space="preserve">
          <source>Interface summary:</source>
          <target state="translated">界面总结。</target>
        </trans-unit>
        <trans-unit id="0d7c663f31a9f2ac91921862b41886ab434c27c9" translate="yes" xml:space="preserve">
          <source>Interface to the scheduler</source>
          <target state="translated">与调度器的接口</target>
        </trans-unit>
        <trans-unit id="e3596470b1be1228bdbe04e547e2ae1f770f41b2" translate="yes" xml:space="preserve">
          <source>Interface to the underlying implementation.</source>
          <target state="translated">底层实现的接口。</target>
        </trans-unit>
        <trans-unit id="fb0b9bed2c76a555927ef2712dd54850772edaa0" translate="yes" xml:space="preserve">
          <source>Interface used by the parser to present error and warning messages to the application. The methods of this object control whether errors are immediately converted to exceptions or are handled in some other way.</source>
          <target state="translated">解析器用于向应用程序提供错误和警告信息的接口。该对象的方法控制错误是否立即转换为异常或以其他方式处理。</target>
        </trans-unit>
        <trans-unit id="7e3a30fb53d88d0640de6d5babfe7057584ac5ad" translate="yes" xml:space="preserve">
          <source>Interfaces are accessed through instance objects. Applications should not instantiate the classes themselves; they should use the creator functions available on the &lt;code&gt;Document&lt;/code&gt; object. Derived interfaces support all operations (and attributes) from the base interfaces, plus any new operations.</source>
          <target state="translated">通过实例对象访问接口。应用程序不应实例化类本身；他们应该使用 &lt;code&gt;Document&lt;/code&gt; 对象上可用的创建函数。派生接口支持基本接口中的所有操作（和属性），以及所有新操作。</target>
        </trans-unit>
        <trans-unit id="70e0c022e8ef3548815e6ce09157b2f9fed238ce" translate="yes" xml:space="preserve">
          <source>Intermixed parsing</source>
          <target state="translated">混合解析</target>
        </trans-unit>
        <trans-unit id="9881c711f8b7d79a62e6a62f87a03b1baa3849a7" translate="yes" xml:space="preserve">
          <source>Internal Objects</source>
          <target state="translated">内部对象</target>
        </trans-unit>
        <trans-unit id="a047b417e339277c6847b0fd6036b5d0c0ae1549" translate="yes" xml:space="preserve">
          <source>Internal attributes.</source>
          <target state="translated">内部属性:</target>
        </trans-unit>
        <trans-unit id="8846061f5d538bb327da6a9444390ad20122717a" translate="yes" xml:space="preserve">
          <source>Internally, function creates a &lt;a href=&quot;#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; with protocol &lt;em&gt;ssl_version&lt;/em&gt; and &lt;a href=&quot;#ssl.SSLContext.options&quot;&gt;&lt;code&gt;SSLContext.options&lt;/code&gt;&lt;/a&gt; set to &lt;em&gt;cert_reqs&lt;/em&gt;. If parameters &lt;em&gt;keyfile&lt;/em&gt;, &lt;em&gt;certfile&lt;/em&gt;, &lt;em&gt;ca_certs&lt;/em&gt; or &lt;em&gt;ciphers&lt;/em&gt; are set, then the values are passed to &lt;a href=&quot;#ssl.SSLContext.load_cert_chain&quot;&gt;&lt;code&gt;SSLContext.load_cert_chain()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt;&lt;code&gt;SSLContext.load_verify_locations()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt;&lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在内部，函数创建一个&lt;a href=&quot;#ssl.SSLContext&quot;&gt; &lt;code&gt;SSLContext&lt;/code&gt; &lt;/a&gt;，协议&lt;em&gt;ssl_version&lt;/em&gt;和&lt;a href=&quot;#ssl.SSLContext.options&quot;&gt; &lt;code&gt;SSLContext.options&lt;/code&gt; &lt;/a&gt;设置为&lt;em&gt;cert_reqs&lt;/em&gt;。如果设置了参数&lt;em&gt;keyfile&lt;/em&gt;，&lt;em&gt;certfile&lt;/em&gt;，&lt;em&gt;ca_certs&lt;/em&gt;或&lt;em&gt;ciphers&lt;/em&gt;，则将这些值传递到&lt;a href=&quot;#ssl.SSLContext.load_cert_chain&quot;&gt; &lt;code&gt;SSLContext.load_cert_chain()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt; &lt;code&gt;SSLContext.load_verify_locations()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt; &lt;code&gt;SSLContext.set_ciphers()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="580ada3f664fbd8faa4d39879e7b77c24136608a" translate="yes" xml:space="preserve">
          <source>Internally, those three types of queues use locks to temporarily block competing threads; however, they are not designed to handle reentrancy within a thread.</source>
          <target state="translated">在内部,这三种类型的队列使用锁来暂时阻断竞争的线程;但是,它们并不是为了处理线程内的重入而设计的。</target>
        </trans-unit>
        <trans-unit id="28d5848a333b0a47913fe57a73d442ce4518c08c" translate="yes" xml:space="preserve">
          <source>International Atomic Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0acc2a482d5d44565ff4ebc0b9139b2dc39c506b" translate="yes" xml:space="preserve">
          <source>International currency symbol.</source>
          <target state="translated">国际货币符号:</target>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="54c981b9e80576e421c708ac83d965bd9c4c3152" translate="yes" xml:space="preserve">
          <source>Internationalization (I18N) refers to the operation by which a program is made aware of multiple languages. Localization (L10N) refers to the adaptation of your program, once internationalized, to the local language and cultural habits. In order to provide multilingual messages for your Python programs, you need to take the following steps:</source>
          <target state="translated">国际化(I18N)指的是让程序了解多种语言的操作。本地化(L10N)指的是您的程序在国际化后,适应当地的语言和文化习惯。为了给您的Python程序提供多语言信息,您需要采取以下步骤。</target>
        </trans-unit>
        <trans-unit id="75170006f623fbe183bf840cf6119bbd14972198" translate="yes" xml:space="preserve">
          <source>Internationalization services. The locale setting affects the interpretation of many format specifiers in &lt;a href=&quot;#time.strftime&quot;&gt;&lt;code&gt;strftime()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#time.strptime&quot;&gt;&lt;code&gt;strptime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">国际化服务。语言环境设置会影响&lt;a href=&quot;#time.strftime&quot;&gt; &lt;code&gt;strftime()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#time.strptime&quot;&gt; &lt;code&gt;strptime()&lt;/code&gt; &lt;/a&gt;中许多格式说明符的解释。</target>
        </trans-unit>
        <trans-unit id="230139ad0ce1adb0b931fe547c69c78a03a243e2" translate="yes" xml:space="preserve">
          <source>Internationalizing your programs and modules</source>
          <target state="translated">课程和模块的国际化</target>
        </trans-unit>
        <trans-unit id="d790826b4ae3ed725698ee4ed89c70a28abd95d5" translate="yes" xml:space="preserve">
          <source>Interned strings are not immortal; you must keep a reference to the return value of &lt;a href=&quot;#sys.intern&quot;&gt;&lt;code&gt;intern()&lt;/code&gt;&lt;/a&gt; around to benefit from it.</source>
          <target state="translated">实习弦不是不朽的。您必须保留对&lt;a href=&quot;#sys.intern&quot;&gt; &lt;code&gt;intern()&lt;/code&gt; &lt;/a&gt;返回值的引用，以从中受益。</target>
        </trans-unit>
        <trans-unit id="66c06c11d179e39c42e5e800f99b57865822cf68" translate="yes" xml:space="preserve">
          <source>Internet</source>
          <target state="translated">Internet</target>
        </trans-unit>
        <trans-unit id="8f1678405b5bf8f7b3c9be250ba0b2b4566bc2af" translate="yes" xml:space="preserve">
          <source>Internet Data</source>
          <target state="translated">互联网数据</target>
        </trans-unit>
        <trans-unit id="c1aebf7c813f788884574a6f7046f553aa035ab6" translate="yes" xml:space="preserve">
          <source>Internet Data Handling</source>
          <target state="translated">互联网数据处理</target>
        </trans-unit>
        <trans-unit id="efedd1f6d18388871beb5b8937b0af027d8bf044" translate="yes" xml:space="preserve">
          <source>Internet Protocols and Support</source>
          <target state="translated">互联网协议和支持</target>
        </trans-unit>
        <trans-unit id="57c33a7c8b9764293298d03366937218c60d2a49" translate="yes" xml:space="preserve">
          <source>Interpolation behaviour may be customized by providing a custom handler through the &lt;em&gt;interpolation&lt;/em&gt; argument. &lt;code&gt;None&lt;/code&gt; can be used to turn off interpolation completely, &lt;code&gt;ExtendedInterpolation()&lt;/code&gt; provides a more advanced variant inspired by &lt;code&gt;zc.buildout&lt;/code&gt;. More on the subject in the &lt;a href=&quot;#interpolation-of-values&quot;&gt;dedicated documentation section&lt;/a&gt;.</source>
          <target state="translated">可以通过通过&lt;em&gt;插值&lt;/em&gt;参数提供自定义处理程序来定制插值行为。 &lt;code&gt;None&lt;/code&gt; 可以完全用来关闭插值， &lt;code&gt;ExtendedInterpolation()&lt;/code&gt; 提供了一个受 &lt;code&gt;zc.buildout&lt;/code&gt; 启发的更高级的变量。有关&lt;a href=&quot;#interpolation-of-values&quot;&gt;专用&lt;/a&gt;主题的更多信息，请参见专用文档部分。</target>
        </trans-unit>
        <trans-unit id="1f615e3d514dcbd13ad91a79d1d845b1973ce635" translate="yes" xml:space="preserve">
          <source>Interpolation behaviour may be customized by providing a custom handler through the &lt;em&gt;interpolation&lt;/em&gt; argument. &lt;code&gt;None&lt;/code&gt; can be used to turn off interpolation completely, &lt;code&gt;ExtendedInterpolation()&lt;/code&gt; provides a more advanced variant inspired by &lt;code&gt;zc.buildout&lt;/code&gt;. More on the subject in the &lt;a href=&quot;#interpolation-of-values&quot;&gt;dedicated documentation section&lt;/a&gt;. &lt;a href=&quot;#configparser.RawConfigParser&quot;&gt;&lt;code&gt;RawConfigParser&lt;/code&gt;&lt;/a&gt; has a default value of &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">可以通过通过&lt;em&gt;插值&lt;/em&gt;参数提供自定义处理程序来定制插值行为。 &lt;code&gt;None&lt;/code&gt; 可以完全用来关闭插值， &lt;code&gt;ExtendedInterpolation()&lt;/code&gt; 提供了一个受 &lt;code&gt;zc.buildout&lt;/code&gt; 启发的更高级的变体。有关&lt;a href=&quot;#interpolation-of-values&quot;&gt;专用&lt;/a&gt;主题的更多信息，请参见专用文档部分。&lt;a href=&quot;#configparser.RawConfigParser&quot;&gt; &lt;code&gt;RawConfigParser&lt;/code&gt; &lt;/a&gt;的默认值为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd2b15bb1774a577513ecc617124a7b368669881" translate="yes" xml:space="preserve">
          <source>Interpolation of values</source>
          <target state="translated">值的内插</target>
        </trans-unit>
        <trans-unit id="d568ce51e6576d8c0979772561e24281b364cfad" translate="yes" xml:space="preserve">
          <source>Interpret the argument as though it had been typed in response to the prompt. This may be overridden, but should not normally need to be; see the &lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt;&lt;code&gt;precmd()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt; methods for useful execution hooks. The return value is a flag indicating whether interpretation of commands by the interpreter should stop. If there is a &lt;code&gt;do_*()&lt;/code&gt; method for the command &lt;em&gt;str&lt;/em&gt;, the return value of that method is returned, otherwise the return value from the &lt;a href=&quot;#cmd.Cmd.default&quot;&gt;&lt;code&gt;default()&lt;/code&gt;&lt;/a&gt; method is returned.</source>
          <target state="translated">解释该参数，就像已根据提示键入该参数一样。这可能会被覆盖，但通常不需要这么做；有关有用的执行挂钩，请参见&lt;a href=&quot;#cmd.Cmd.precmd&quot;&gt; &lt;code&gt;precmd()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; &lt;/a&gt;方法。返回值是一个标志，指示是否应停止解释程序对命令的解释。如果命令&lt;em&gt;str&lt;/em&gt;有一个 &lt;code&gt;do_*()&lt;/code&gt; 方法，则返回该方法的返回值，否则返回&lt;a href=&quot;#cmd.Cmd.default&quot;&gt; &lt;code&gt;default()&lt;/code&gt; &lt;/a&gt;方法的返回值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d3c148819e9e54cd74c9c94b3ef056e575eee05" translate="yes" xml:space="preserve">
          <source>Interpreters</source>
          <target state="translated">Interpreters</target>
        </trans-unit>
        <trans-unit id="46d6db31f6f2547122e3f17c21631f666601ba12" translate="yes" xml:space="preserve">
          <source>Interrupt Execution</source>
          <target state="translated">中断执行</target>
        </trans-unit>
        <trans-unit id="d4033f48de0ba4899aed36c08fc403f168f4ea15" translate="yes" xml:space="preserve">
          <source>Interrupt from keyboard (CTRL + BREAK).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cbfdace7f8635278d0d4b9c5ba72e6d4fce84c" translate="yes" xml:space="preserve">
          <source>Interrupt from keyboard (CTRL + C).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8815302accf46070d40572381df17ae0b24087f8" translate="yes" xml:space="preserve">
          <source>Interrupted system call should be restarted</source>
          <target state="translated">中断的系统调用应重新启动</target>
        </trans-unit>
        <trans-unit id="b06a3395105be1465d6b1697af03d4431eac6c71" translate="yes" xml:space="preserve">
          <source>Interrupted system call.</source>
          <target state="translated">中断的系统调用。</target>
        </trans-unit>
        <trans-unit id="09dc03559a67ff5107d10fad944393ea3f877c07" translate="yes" xml:space="preserve">
          <source>InterruptedError</source>
          <target state="translated">InterruptedError</target>
        </trans-unit>
        <trans-unit id="0943ef2ada12e3e7dc287b50717ddb75bc6da8ed" translate="yes" xml:space="preserve">
          <source>Interruption</source>
          <target state="translated">Interruption</target>
        </trans-unit>
        <trans-unit id="4e36c74154decbcc22ec9de613c329458fb47795" translate="yes" xml:space="preserve">
          <source>Interruption during the decompression, such as pressing control-C or killing the decompression process may result in incomplete decompression of the archive.</source>
          <target state="translated">在解压过程中中断,如按控制键C或终止解压过程,可能会导致档案的解压不完整。</target>
        </trans-unit>
        <trans-unit id="42c071214f97d5c4afff6973aa5aa8c312d9737c" translate="yes" xml:space="preserve">
          <source>Intro from the Apache HTTP Server documentation</source>
          <target state="translated">Apache HTTP服务器文档中的介绍</target>
        </trans-unit>
        <trans-unit id="74f37218ef8634d6f18ddbe27efca22ced57c811" translate="yes" xml:space="preserve">
          <source>Introduced the &lt;code&gt;__prepare__&lt;/code&gt; namespace hook</source>
          <target state="translated">引入了 &lt;code&gt;__prepare__&lt;/code&gt; 名称空间挂钩</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="12b2799a6c697d71c79a7458b9ff32a936f76a1a" translate="yes" xml:space="preserve">
          <source>Introduction to the profilers</source>
          <target state="translated">剖析师介绍</target>
        </trans-unit>
        <trans-unit id="0047e79057a6dadcd1958b908f6296f6079753b9" translate="yes" xml:space="preserve">
          <source>Introspecting callables with the Signature object</source>
          <target state="translated">用Signature对象介绍可调用对象</target>
        </trans-unit>
        <trans-unit id="b3b4d20d3dfe4ef78d0bf43a93aa7f57bae176c5" translate="yes" xml:space="preserve">
          <source>Introspection</source>
          <target state="translated">Introspection</target>
        </trans-unit>
        <trans-unit id="1c6c69ff716037a9df5d099d2d192521b1e9a13d" translate="yes" xml:space="preserve">
          <source>Introspection helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ff4427a9f1fb0c18cbcdf6b26d6a2d22f2df2f" translate="yes" xml:space="preserve">
          <source>Invalid argument</source>
          <target state="translated">无效参数</target>
        </trans-unit>
        <trans-unit id="f8d3e8e47ede7d1e1d63b90adac4163f137f5fbd" translate="yes" xml:space="preserve">
          <source>Invalid arguments</source>
          <target state="translated">无效参数</target>
        </trans-unit>
        <trans-unit id="0659862d18cc2aab0d2c79d54ece0b588cefda81" translate="yes" xml:space="preserve">
          <source>Invalid exchange</source>
          <target state="translated">无效交换</target>
        </trans-unit>
        <trans-unit id="b7ebb17aae68fc96bde7bec88689e59f80c276a6" translate="yes" xml:space="preserve">
          <source>Invalid internal state of &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; 的&lt;/a&gt;内部状态无效。</target>
        </trans-unit>
        <trans-unit id="e5a79f3df5c8af3ba8a7813c333e1a6a9466a6b5" translate="yes" xml:space="preserve">
          <source>Invalid request code</source>
          <target state="translated">无效的请求代码</target>
        </trans-unit>
        <trans-unit id="921238b4baa4c7c3a24c3d63e0e9afc770fd916a" translate="yes" xml:space="preserve">
          <source>Invalid request descriptor</source>
          <target state="translated">无效的请求描述符</target>
        </trans-unit>
        <trans-unit id="ac9eda2543c0cdfa22d49b3ce87554f9fa67c95e" translate="yes" xml:space="preserve">
          <source>Invalid request: descriptor not open</source>
          <target state="translated">无效请求:描述符未打开</target>
        </trans-unit>
        <trans-unit id="6684b6eeddecb3f9f1296f418af07f2108c4ba7a" translate="yes" xml:space="preserve">
          <source>Invalid slot</source>
          <target state="translated">无效插槽</target>
        </trans-unit>
        <trans-unit id="ac39f10f2b107f4005a05fd5034e22c350ce91cd" translate="yes" xml:space="preserve">
          <source>Invalidate the internal caches of finders stored at &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt;. If a finder implements &lt;code&gt;invalidate_caches()&lt;/code&gt; then it will be called to perform the invalidation. This function should be called if any modules are created/installed while your program is running to guarantee all finders will notice the new module&amp;rsquo;s existence.</source>
          <target state="translated">使存储在&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; &lt;/a&gt;的查找器的内部缓存无效。如果查找程序实现了 &lt;code&gt;invalidate_caches()&lt;/code&gt; ，则将调用它来执行无效操作。如果在程序运行时创建/安装了任何模块，则应调用此函数，以确保所有查找者都将注意到新模块的存在。</target>
        </trans-unit>
        <trans-unit id="ba67563ea1b90363b3f3e36d5c60e13c4df6670d" translate="yes" xml:space="preserve">
          <source>Invert all the digits in &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="translated">反转&lt;em&gt;x中的&lt;/em&gt;所有数字。</target>
        </trans-unit>
        <trans-unit id="fd084280a98a8cc9427a473124b409ada9c6b2a3" translate="yes" xml:space="preserve">
          <source>Invisible or blank mode</source>
          <target state="translated">隐形或空白模式</target>
        </trans-unit>
        <trans-unit id="3bf010a72c53420609032016c83dfcf503ce6948" translate="yes" xml:space="preserve">
          <source>Invoke &lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;ZipFile.open()&lt;/code&gt;&lt;/a&gt; on the current path. Accepts the same arguments as &lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;ZipFile.open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在当前路径上调用&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt; &lt;code&gt;ZipFile.open()&lt;/code&gt; &lt;/a&gt;。接受与&lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt; &lt;code&gt;ZipFile.open()&lt;/code&gt; &lt;/a&gt;相同的参数。</target>
        </trans-unit>
        <trans-unit id="e1b5816db7fc9e3046813d2dcfcddbfc9f951064" translate="yes" xml:space="preserve">
          <source>Invoke &lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;ZipFile.open()&lt;/code&gt;&lt;/a&gt; on the current path. Allows opening for read or write, text or binary through supported modes: &amp;lsquo;r&amp;rsquo;, &amp;lsquo;w&amp;rsquo;, &amp;lsquo;rb&amp;rsquo;, &amp;lsquo;wb&amp;rsquo;. Positional and keyword arguments are passed through to &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt; when opened as text and ignored otherwise. &lt;code&gt;pwd&lt;/code&gt; is the &lt;code&gt;pwd&lt;/code&gt; parameter to &lt;a href=&quot;#zipfile.ZipFile.open&quot;&gt;&lt;code&gt;ZipFile.open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423894e2a4eefe4fc84b32affe9b7e263601406b" translate="yes" xml:space="preserve">
          <source>Invoke a callback &lt;em&gt;after&lt;/em&gt; the given time.</source>
          <target state="translated">在给定时间&lt;em&gt;后&lt;/em&gt;调用回调。</target>
        </trans-unit>
        <trans-unit id="6d5c67cd19bdfed187292858862c10f228bb5045" translate="yes" xml:space="preserve">
          <source>Invoke a callback &lt;em&gt;at&lt;/em&gt; the given time.</source>
          <target state="translated">&lt;em&gt;在&lt;/em&gt;给定时间调用回调。</target>
        </trans-unit>
        <trans-unit id="76c3be08bb7afa5e12d91ae6bbae4d9ceb1bf847" translate="yes" xml:space="preserve">
          <source>Invoke a callback soon.</source>
          <target state="translated">尽快调用回调。</target>
        </trans-unit>
        <trans-unit id="02465213be1ac7e5af0e05eec89ae1f987088775" translate="yes" xml:space="preserve">
          <source>Invoke the built-in help system. (This function is intended for interactive use.) If no argument is given, the interactive help system starts on the interpreter console. If the argument is a string, then the string is looked up as the name of a module, function, class, method, keyword, or documentation topic, and a help page is printed on the console. If the argument is any other kind of object, a help page on the object is generated.</source>
          <target state="translated">调用内置帮助系统。(此函数用于交互式使用。)如果没有给出参数,交互式帮助系统在解释器控制台启动。如果参数是一个字符串,那么这个字符串将被查询为一个模块、函数、类、方法、关键字或文档主题的名称,并在控制台上打印一个帮助页面。如果参数是任何其他类型的对象,则会生成该对象的帮助页。</target>
        </trans-unit>
        <trans-unit id="6844b46c8699594aabdbedb9cb340a297a5875b2" translate="yes" xml:space="preserve">
          <source>Invoked as a script, the &lt;a href=&quot;#module-pstats&quot;&gt;&lt;code&gt;pstats&lt;/code&gt;&lt;/a&gt; module is a statistics browser for reading and examining profile dumps. It has a simple line-oriented interface (implemented using &lt;a href=&quot;cmd#module-cmd&quot;&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/a&gt;) and interactive help.</source>
          <target state="translated">作为脚本调用的&lt;a href=&quot;#module-pstats&quot;&gt; &lt;code&gt;pstats&lt;/code&gt; &lt;/a&gt;模块是一个统计浏览器，用于读取和检查配置文件转储。它具有简单的面向行的界面（使用&lt;a href=&quot;cmd#module-cmd&quot;&gt; &lt;code&gt;cmd&lt;/code&gt; &lt;/a&gt;实现）和交互式帮助。</target>
        </trans-unit>
        <trans-unit id="4bd2a50918821ef3e207e7ae794bd6f6284c7b2f" translate="yes" xml:space="preserve">
          <source>Invoking &amp;lsquo;Show Completions&amp;rsquo;, or hitting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ee2ea09ca943e50fb0b3c932a9cca14117e8c5" translate="yes" xml:space="preserve">
          <source>Invoking this function may change the semantics of datetimes using &lt;code&gt;ZoneInfo&lt;/code&gt; in surprising ways; this modifies process-wide global state and thus may have wide-ranging effects. Only use it if you know that you need to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726a8b660b71615a82f862249de26d56cd18e129" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;True&lt;/code&gt; if the stream is closed.</source>
          <target state="translated">是 &lt;code&gt;True&lt;/code&gt; ，如果流被关闭。</target>
        </trans-unit>
        <trans-unit id="d82b06adf1a876d702b6a3905d8d56b51827e40e" translate="yes" xml:space="preserve">
          <source>Is a directory</source>
          <target state="translated">是一个目录</target>
        </trans-unit>
        <trans-unit id="b9271431abbe409f3af4140e02d0f15a9328cd88" translate="yes" xml:space="preserve">
          <source>Is a generic constructor that takes the string &lt;em&gt;name&lt;/em&gt; of the desired algorithm as its first parameter. It also exists to allow access to the above listed hashes as well as any other algorithms that your OpenSSL library may offer. The named constructors are much faster than &lt;a href=&quot;#hashlib.new&quot;&gt;&lt;code&gt;new()&lt;/code&gt;&lt;/a&gt; and should be preferred.</source>
          <target state="translated">是一个通用构造函数，它将所需算法的字符串&lt;em&gt;名称&lt;/em&gt;作为其第一个参数。它也可以访问上面列出的散列以及您的OpenSSL库可能提供的任何其他算法。命名构造函数比&lt;a href=&quot;#hashlib.new&quot;&gt; &lt;code&gt;new()&lt;/code&gt; &lt;/a&gt;快得多，因此应首选。</target>
        </trans-unit>
        <trans-unit id="0bf5e0f29c754cc24aba94217c9a03a8d1bd88d7" translate="yes" xml:space="preserve">
          <source>Is a named type file</source>
          <target state="translated">是一个命名类型的文件</target>
        </trans-unit>
        <trans-unit id="bee2b08fdf889353624d0f8c23e090efd5200001" translate="yes" xml:space="preserve">
          <source>Is called after the &lt;code&gt;end()&lt;/code&gt; callback of an element that declared a namespace prefix mapping, with the name of the &lt;em&gt;prefix&lt;/em&gt; that went out of scope.</source>
          <target state="translated">在之后被称为 &lt;code&gt;end()&lt;/code&gt; 该声明的命名空间前缀映射，用的名称的元素的回调&lt;em&gt;前缀&lt;/em&gt;是去的范围了。</target>
        </trans-unit>
        <trans-unit id="30d2df16b87401fece6e95883b5b9ea7ed5ee83b" translate="yes" xml:space="preserve">
          <source>Is called whenever the parser encounters a new namespace declaration, before the &lt;code&gt;start()&lt;/code&gt; callback for the opening element that defines it. &lt;em&gt;prefix&lt;/em&gt; is &lt;code&gt;''&lt;/code&gt; for the default namespace and the declared namespace prefix name otherwise. &lt;em&gt;uri&lt;/em&gt; is the namespace URI.</source>
          <target state="translated">每当解析器在定义它的开始元素的 &lt;code&gt;start()&lt;/code&gt; 回调之前遇到新的名称空间声明时，都会调用此方法。&lt;em&gt;前缀&lt;/em&gt;就是 &lt;code&gt;''&lt;/code&gt; 默认命名空间和声明命名空间前缀，否则名称。&lt;em&gt;uri&lt;/em&gt;是名称空间URI。</target>
        </trans-unit>
        <trans-unit id="b0eda3fd7457c0fb4308b75d0bf6df3d4719aced" translate="yes" xml:space="preserve">
          <source>Is equivalent to:</source>
          <target state="translated">相当于:</target>
        </trans-unit>
        <trans-unit id="faccc474f96ec465b21b84d73c34160d716e3f91" translate="yes" xml:space="preserve">
          <source>Is raised by &lt;a href=&quot;#tarfile.TarInfo.frombuf&quot;&gt;&lt;code&gt;TarInfo.frombuf()&lt;/code&gt;&lt;/a&gt; if the buffer it gets is invalid.</source>
          <target state="translated">如果它获取的缓冲区无效，则由&lt;a href=&quot;#tarfile.TarInfo.frombuf&quot;&gt; &lt;code&gt;TarInfo.frombuf()&lt;/code&gt; &lt;/a&gt;引发。</target>
        </trans-unit>
        <trans-unit id="18a7000c3669054a5c3429b5bca7b29f3a62b417" translate="yes" xml:space="preserve">
          <source>Is raised for &lt;em&gt;non-fatal&lt;/em&gt; errors when using &lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt;&lt;code&gt;TarFile.extract()&lt;/code&gt;&lt;/a&gt;, but only if &lt;code&gt;TarFile.errorlevel&lt;/code&gt;&lt;code&gt;== 2&lt;/code&gt;.</source>
          <target state="translated">当使用&lt;a href=&quot;#tarfile.TarFile.extract&quot;&gt; &lt;code&gt;TarFile.extract()&lt;/code&gt; &lt;/a&gt;时引发&lt;em&gt;非致命&lt;/em&gt;错误，但仅当 &lt;code&gt;TarFile.errorlevel&lt;/code&gt; &lt;code&gt;== 2&lt;/code&gt; 才会引发。</target>
        </trans-unit>
        <trans-unit id="18715da6dd78d77038e6918bcd213c664251a25c" translate="yes" xml:space="preserve">
          <source>Is raised for the limitations that are typical for stream-like &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">针对类似流的&lt;a href=&quot;#tarfile.TarFile&quot;&gt; &lt;code&gt;TarFile&lt;/code&gt; &lt;/a&gt;对象的典型限制而提出。</target>
        </trans-unit>
        <trans-unit id="b4dfe73679ab1a5e17ff73652a8048ca83d1123c" translate="yes" xml:space="preserve">
          <source>Is raised when a compression method is not supported or when the data cannot be decoded properly.</source>
          <target state="translated">当不支持压缩方法或数据不能正确解码时,会被触发。</target>
        </trans-unit>
        <trans-unit id="3c229c84cdb83be81adf3d14e2f27db1ff9323b8" translate="yes" xml:space="preserve">
          <source>Is raised when a tar archive is opened, that either cannot be handled by the &lt;a href=&quot;#module-tarfile&quot;&gt;&lt;code&gt;tarfile&lt;/code&gt;&lt;/a&gt; module or is somehow invalid.</source>
          <target state="translated">在打开tar归档文件时引发，该归档文件无法由&lt;a href=&quot;#module-tarfile&quot;&gt; &lt;code&gt;tarfile&lt;/code&gt; &lt;/a&gt;模块处理或由于某种原因无效。</target>
        </trans-unit>
        <trans-unit id="0d9f275d0e44d3c8f374404212109840194aa96b" translate="yes" xml:space="preserve">
          <source>Is the specified record to be logged? Returns zero for no, nonzero for yes. If deemed appropriate, the record may be modified in-place by this method.</source>
          <target state="translated">是否要记录指定的记录?返回0表示没有,非零表示有。如果认为合适,可以通过本方法在原地修改记录。</target>
        </trans-unit>
        <trans-unit id="b8d1927814fec93e6de191ddf4a54f49e0a8a5f4" translate="yes" xml:space="preserve">
          <source>IsADirectoryError</source>
          <target state="translated">IsADirectoryError</target>
        </trans-unit>
        <trans-unit id="5aaeb6752e0a30b5836a9fdc9113966711e2d7a5" translate="yes" xml:space="preserve">
          <source>Issue a warning, or maybe ignore it or raise an exception. The &lt;em&gt;category&lt;/em&gt; argument, if given, must be a &lt;a href=&quot;#warning-categories&quot;&gt;warning category class&lt;/a&gt;; it defaults to &lt;a href=&quot;exceptions#UserWarning&quot;&gt;&lt;code&gt;UserWarning&lt;/code&gt;&lt;/a&gt;. Alternatively, &lt;em&gt;message&lt;/em&gt; can be a &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; instance, in which case &lt;em&gt;category&lt;/em&gt; will be ignored and &lt;code&gt;message.__class__&lt;/code&gt; will be used. In this case, the message text will be &lt;code&gt;str(message)&lt;/code&gt;. This function raises an exception if the particular warning issued is changed into an error by the &lt;a href=&quot;#warning-filter&quot;&gt;warnings filter&lt;/a&gt;. The &lt;em&gt;stacklevel&lt;/em&gt; argument can be used by wrapper functions written in Python, like this:</source>
          <target state="translated">发出警告，或者忽略它或引发异常。该&lt;em&gt;类别&lt;/em&gt;的说法，如果有，一定要&lt;a href=&quot;#warning-categories&quot;&gt;报警类别类&lt;/a&gt; ;它默认为&lt;a href=&quot;exceptions#UserWarning&quot;&gt; &lt;code&gt;UserWarning&lt;/code&gt; &lt;/a&gt;。另外，&lt;em&gt;message&lt;/em&gt;可以是&lt;a href=&quot;exceptions#Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt;实例，在这种情况下，&lt;em&gt;类别&lt;/em&gt;将被忽略，并使用 &lt;code&gt;message.__class__&lt;/code&gt; 。在这种情况下，消息文本将为 &lt;code&gt;str(message)&lt;/code&gt; 。如果&lt;a href=&quot;#warning-filter&quot;&gt;警告过滤器&lt;/a&gt;将发出的特定警告更改为错误，则此函数引发异常。该&lt;em&gt;stacklevel&lt;/em&gt;参数可以使用Python编写包装函数，如下所示：</target>
        </trans-unit>
        <trans-unit id="2acc379f1d9efba7c573cb292f79779105a94baa" translate="yes" xml:space="preserve">
          <source>Issue an &lt;code&gt;SMTP&lt;/code&gt;&lt;code&gt;AUTH&lt;/code&gt; command for the specified authentication &lt;em&gt;mechanism&lt;/em&gt;, and handle the challenge response via &lt;em&gt;authobject&lt;/em&gt;.</source>
          <target state="translated">发出用于指定身份验证&lt;em&gt;机制&lt;/em&gt;的 &lt;code&gt;SMTP&lt;/code&gt; &lt;code&gt;AUTH&lt;/code&gt; 命令，并通过&lt;em&gt;authobject&lt;/em&gt;处理质询响应。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="131d53be7d06b29d352aeb037a9507988702c57d" translate="yes" xml:space="preserve">
          <source>Issue with file descriptors</source>
          <target state="translated">文件描述符的问题</target>
        </trans-unit>
        <trans-unit id="e46c8a5eede1acdf3c821975f3ebca0b3fba6963" translate="yes" xml:space="preserve">
          <source>It also defines names for some object types that are used by the standard Python interpreter, but not exposed as builtins like &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; are.</source>
          <target state="translated">它还定义了标准Python解释器使用的某些对象类型的名称，但没有像&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt; are 这样的内置函数公开。</target>
        </trans-unit>
        <trans-unit id="03d0fa505bb145a8b508318b5166e2f593fc8b4f" translate="yes" xml:space="preserve">
          <source>It also has children nodes over which we can iterate:</source>
          <target state="translated">它也有子节点,我们可以在这些子节点上进行迭代。</target>
        </trans-unit>
        <trans-unit id="ba93dd24e6158dc460f6e66524c0fca4f667b666" translate="yes" xml:space="preserve">
          <source>It also looks for &lt;code&gt;*.pkg&lt;/code&gt; files beginning where &lt;code&gt;*&lt;/code&gt; matches the &lt;em&gt;name&lt;/em&gt; argument. This feature is similar to &lt;code&gt;*.pth&lt;/code&gt; files (see the &lt;a href=&quot;site#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; module for more information), except that it doesn&amp;rsquo;t special-case lines starting with &lt;code&gt;import&lt;/code&gt;. A &lt;code&gt;*.pkg&lt;/code&gt; file is trusted at face value: apart from checking for duplicates, all entries found in a &lt;code&gt;*.pkg&lt;/code&gt; file are added to the path, regardless of whether they exist on the filesystem. (This is a feature.)</source>
          <target state="translated">它还会查找 &lt;code&gt;*.pkg&lt;/code&gt; 文件，其中 &lt;code&gt;*&lt;/code&gt; 匹配&lt;em&gt;name&lt;/em&gt;参数。此功能类似于 &lt;code&gt;*.pth&lt;/code&gt; 文件（有关更多信息，请参见&lt;a href=&quot;site#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt;模块），不同之处在于它不是以 &lt;code&gt;import&lt;/code&gt; 开头的特殊情况。一个 &lt;code&gt;*.pkg&lt;/code&gt; 文件是可信任的面值：除了检查重复，所有参赛作品在发现 &lt;code&gt;*.pkg&lt;/code&gt; 文件被添加到路径，不管他们是否在文件系统中存在。（这是一个功能。）</target>
        </trans-unit>
        <trans-unit id="ac049eee8e098efbf97dcda725fb4ce89501bd33" translate="yes" xml:space="preserve">
          <source>It also supports certain of Python&amp;rsquo;s built-in operators through &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ne__&quot;&gt;&lt;code&gt;__ne__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">它还通过&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__ne__&quot;&gt; &lt;code&gt;__ne__()&lt;/code&gt; &lt;/a&gt;方法支持某些Python的内置运算符。</target>
        </trans-unit>
        <trans-unit id="72eb8ad6cd37cb5f52e4a1a044e775d59251623a" translate="yes" xml:space="preserve">
          <source>It also supports certain of Python&amp;rsquo;s built-in operators through &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__ne__&quot;&gt;&lt;code&gt;__ne__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08324cda6eda4c504aa9a823d617b47aa532d2d" translate="yes" xml:space="preserve">
          <source>It also supports certain of Python&amp;rsquo;s built-in operators through rich comparison and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">它还通过丰富的比较和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;方法支持某些Python的内置运算符。</target>
        </trans-unit>
        <trans-unit id="842ed03a56a6f506cf11d486992609fafd42c6d4" translate="yes" xml:space="preserve">
          <source>It also supports certain of Python&amp;rsquo;s built-in operators through rich comparison and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1186ed492c366eaa388b29b3083c0e6d09f9e556" translate="yes" xml:space="preserve">
          <source>It also understands &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt;, and &lt;code&gt;-Infinity&lt;/code&gt; as their corresponding &lt;code&gt;float&lt;/code&gt; values, which is outside the JSON spec.</source>
          <target state="translated">它还将 &lt;code&gt;NaN&lt;/code&gt; ， &lt;code&gt;Infinity&lt;/code&gt; 和 &lt;code&gt;-Infinity&lt;/code&gt; 理解为它们对应的 &lt;code&gt;float&lt;/code&gt; 值，这在JSON规范之外。</target>
        </trans-unit>
        <trans-unit id="94b40a001adb648db1d34b0c19e9d0480830df9e" translate="yes" xml:space="preserve">
          <source>It behaves as if the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-w&quot;&gt;&lt;code&gt;-W default&lt;/code&gt;&lt;/a&gt; command line option is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97d143e1ed5833a5ffae18d0d146c9b4a3160c8" translate="yes" xml:space="preserve">
          <source>It behaves as if the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONASYNCIODEBUG&quot; id=&quot;index-5&quot;&gt;&lt;code&gt;PYTHONASYNCIODEBUG&lt;/code&gt;&lt;/a&gt; environment variable is set to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74741be2e55387e02182ff501814cbceadec398" translate="yes" xml:space="preserve">
          <source>It behaves as if the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONMALLOC&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;PYTHONMALLOC&lt;/code&gt;&lt;/a&gt; environment variable is set to &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3223643d116973b3df651fdfb1a63a8fda9e729e" translate="yes" xml:space="preserve">
          <source>It behaves as if the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X faulthandler&lt;/code&gt;&lt;/a&gt; command line option is used or if the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-4&quot;&gt;&lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt;&lt;/a&gt; environment variable is set to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec1493a57b4d7fa45bea1b3298210ad9be4bf5b" translate="yes" xml:space="preserve">
          <source>It can also be used to restore the actual files to known working file objects in case they have been overwritten with a broken object. However, the preferred way to do this is to explicitly save the previous stream before replacing it, and restore the saved object.</source>
          <target state="translated">它也可以用来恢复实际文件到已知的工作文件对象,以防它们被一个破碎的对象覆盖。不过,首选的方法是在替换之前明确保存之前的流,并恢复保存的对象。</target>
        </trans-unit>
        <trans-unit id="8de172274d40b1578d3c4b46f50eae9a471e5a68" translate="yes" xml:space="preserve">
          <source>It can be 16 bits or 32 bits depending on the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cab5b41999a73bfdfbaad2711310f0344a5211" translate="yes" xml:space="preserve">
          <source>It can be enabled using the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X dev&lt;/code&gt;&lt;/a&gt; command line option or by setting the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONDEVMODE&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONDEVMODE&lt;/code&gt;&lt;/a&gt; environment variable to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e025bf37372974d8506acabf4c6c27f0517393" translate="yes" xml:space="preserve">
          <source>It cannot be caught, blocked, or ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f3acc604f0bf942399f638a855b169564bcc7f" translate="yes" xml:space="preserve">
          <source>It defines a &lt;a href=&quot;#selectors.BaseSelector&quot;&gt;&lt;code&gt;BaseSelector&lt;/code&gt;&lt;/a&gt; abstract base class, along with several concrete implementations (&lt;a href=&quot;#selectors.KqueueSelector&quot;&gt;&lt;code&gt;KqueueSelector&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#selectors.EpollSelector&quot;&gt;&lt;code&gt;EpollSelector&lt;/code&gt;&lt;/a&gt;&amp;hellip;), that can be used to wait for I/O readiness notification on multiple file objects. In the following, &amp;ldquo;file object&amp;rdquo; refers to any object with a &lt;code&gt;fileno()&lt;/code&gt; method, or a raw file descriptor. See &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">它定义了&lt;a href=&quot;#selectors.BaseSelector&quot;&gt; &lt;code&gt;BaseSelector&lt;/code&gt; &lt;/a&gt;抽象基类，以及几个具体的实现（&lt;a href=&quot;#selectors.KqueueSelector&quot;&gt; &lt;code&gt;KqueueSelector&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#selectors.EpollSelector&quot;&gt; &lt;code&gt;EpollSelector&lt;/code&gt; &lt;/a&gt; &amp;hellip;），可用于等待多个文件对象的I / O准备就绪通知。在下文中，&amp;ldquo;文件对象&amp;rdquo;是指具有 &lt;code&gt;fileno()&lt;/code&gt; 方法或原始文件描述符的任何对象。参见&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f27f526ef94f520ad493a876be3577831360f945" translate="yes" xml:space="preserve">
          <source>It defines a &lt;a href=&quot;#selectors.BaseSelector&quot;&gt;&lt;code&gt;BaseSelector&lt;/code&gt;&lt;/a&gt; abstract base class, along with several concrete implementations (&lt;a href=&quot;#selectors.KqueueSelector&quot;&gt;&lt;code&gt;KqueueSelector&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#selectors.EpollSelector&quot;&gt;&lt;code&gt;EpollSelector&lt;/code&gt;&lt;/a&gt;&amp;hellip;), that can be used to wait for I/O readiness notification on multiple file objects. In the following, &amp;ldquo;file object&amp;rdquo; refers to any object with a &lt;code&gt;fileno()&lt;/code&gt; method, or a raw file descriptor. See &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86490549662868112f136678359ce261e7fbf4a" translate="yes" xml:space="preserve">
          <source>It defines the following items:</source>
          <target state="translated">它规定了以下项目:</target>
        </trans-unit>
        <trans-unit id="86cf8e626a8b6c0e4daf5e5c5001af4e595a1aaf" translate="yes" xml:space="preserve">
          <source>It detects the encoding from the presence of a UTF-8 BOM or an encoding cookie as specified in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0263&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 263&lt;/strong&gt;&lt;/a&gt;. If both a BOM and a cookie are present, but disagree, a &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; will be raised. Note that if the BOM is found, &lt;code&gt;'utf-8-sig'&lt;/code&gt; will be returned as an encoding.</source>
          <target state="translated">它会根据&lt;a href=&quot;https://www.python.org/dev/peps/pep-0263&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 263中&lt;/strong&gt;&lt;/a&gt;指定的UTF-8 BOM或编码cookie的存在来检测编码。如果同时存在BOM和cookie，但不同意，则将引发&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;。请注意，如果找到BOM，则将以编码形式返回 &lt;code&gt;'utf-8-sig'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a6d7e8dc33830431ce4274e88f610528d52ec30" translate="yes" xml:space="preserve">
          <source>It extends the existing &lt;em&gt;ustar&lt;/em&gt; format with extra headers for information that cannot be stored otherwise. There are two flavours of pax headers: Extended headers only affect the subsequent file header, global headers are valid for the complete archive and affect all following files. All the data in a pax header is encoded in &lt;em&gt;UTF-8&lt;/em&gt; for portability reasons.</source>
          <target state="translated">它使用额外的标头扩展了现有的&lt;em&gt;ustar&lt;/em&gt;格式，以存储否则无法存储的信息。Pax标头有两种形式：扩展标头仅影响后续文件标头，全局标头对完整存档有效，并影响所有后续文件。出于可移植性原因，pax标头中的所有数据均以&lt;em&gt;UTF-8&lt;/em&gt;编码。</target>
        </trans-unit>
        <trans-unit id="3ffd7e38afe55390aae7754992e18f89ae1644e1" translate="yes" xml:space="preserve">
          <source>It has no other methods besides the ones inherited from &lt;code&gt;ttk.Widget&lt;/code&gt;.</source>
          <target state="translated">除了从 &lt;code&gt;ttk.Widget&lt;/code&gt; 继承的方法外，它没有其他方法。</target>
        </trans-unit>
        <trans-unit id="0951e90496403cdeaa51c98298faafd64552fecb" translate="yes" xml:space="preserve">
          <source>It has one attribute, &lt;code&gt;data&lt;/code&gt;, that can be used to retrieve the Python bytes object stored in it.</source>
          <target state="translated">它具有一个属性 &lt;code&gt;data&lt;/code&gt; ，可用于检索存储在其中的Python字节对象。</target>
        </trans-unit>
        <trans-unit id="3780db06a7fc7e80db01f0dc24e060618d78221a" translate="yes" xml:space="preserve">
          <source>It has one attribute, &lt;code&gt;data&lt;/code&gt;, which can be used to retrieve the int value of the UID. &lt;code&gt;data&lt;/code&gt; must be in the range &lt;code&gt;0 &amp;lt;= data &amp;lt; 2**64&lt;/code&gt;.</source>
          <target state="translated">它具有一个属性 &lt;code&gt;data&lt;/code&gt; ，可用于检索UID的int值。 &lt;code&gt;data&lt;/code&gt; 必须在 &lt;code&gt;0 &amp;lt;= data &amp;lt; 2**64&lt;/code&gt; 范围内。</target>
        </trans-unit>
        <trans-unit id="23306eadb9dad4ad03f07be8c0a83f188ab18bb4" translate="yes" xml:space="preserve">
          <source>It is a simplified &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; type, very close to a locked &lt;a href=&quot;#multiprocessing.Pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这是一种简化的&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;类型，非常靠近锁定的&lt;a href=&quot;#multiprocessing.Pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ae066ca641a4bc8990133345ec5ed5570fe1167" translate="yes" xml:space="preserve">
          <source>It is advisable to use the &lt;a href=&quot;#nntplib.decode_header&quot;&gt;&lt;code&gt;decode_header()&lt;/code&gt;&lt;/a&gt; function on header values when they may contain non-ASCII characters:</source>
          <target state="translated">当标头值可能包含非ASCII字符时，建议对它们使用&lt;a href=&quot;#nntplib.decode_header&quot;&gt; &lt;code&gt;decode_header()&lt;/code&gt; &lt;/a&gt;函数：</target>
        </trans-unit>
        <trans-unit id="753d5be67d0389392a814b65b9ab13072b3bc426" translate="yes" xml:space="preserve">
          <source>It is allowable for many weak references to be constructed for the same object. Callbacks registered for each weak reference will be called from the most recently registered callback to the oldest registered callback.</source>
          <target state="translated">允许为同一个对象构造许多弱引用。为每个弱引用注册的回调将从最近注册的回调到最老注册的回调进行调用。</target>
        </trans-unit>
        <trans-unit id="c594fee7fb081acf751161f581d98f6ddeb8a51f" translate="yes" xml:space="preserve">
          <source>It is also legal to pass strings as parameters; these should be keys in &lt;code&gt;sys.modules&lt;/code&gt;. Each associated module will be scanned by &lt;code&gt;unittest.TestLoader.loadTestsFromModule()&lt;/code&gt;. This is usually seen in the following &lt;code&gt;test_main()&lt;/code&gt; function:</source>
          <target state="translated">传递字符串作为参数也是合法的；这些应该是 &lt;code&gt;sys.modules&lt;/code&gt; 中的键。每个关联的模块将通过 &lt;code&gt;unittest.TestLoader.loadTestsFromModule()&lt;/code&gt; 进行扫描。这通常在以下 &lt;code&gt;test_main()&lt;/code&gt; 函数中看到：</target>
        </trans-unit>
        <trans-unit id="9198580629b375ecb6cd20a7e7294c4ca6e5fd99" translate="yes" xml:space="preserve">
          <source>It is also possible to achieve the same result without using the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; approach.</source>
          <target state="translated">不使用&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;上下文管理器&lt;/a&gt;方法也可以实现相同的结果。</target>
        </trans-unit>
        <trans-unit id="a898afa2992cd8e912c575a2536dec4453ed7a3c" translate="yes" xml:space="preserve">
          <source>It is also possible to achieve the same result without using the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1255f8f5c1717c7558bffa794a4d3503ba88bf1" translate="yes" xml:space="preserve">
          <source>It is also possible to check the production of exceptions, warnings, and log messages using the following methods:</source>
          <target state="translated">也可以使用以下方法检查异常、警告和日志消息的产生。</target>
        </trans-unit>
        <trans-unit id="bfda1e856e7a541fee3a382fde7564093efe53b2" translate="yes" xml:space="preserve">
          <source>It is also possible to create temporary directories; see the &lt;a href=&quot;tempfile#module-tempfile&quot;&gt;&lt;code&gt;tempfile&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt;&lt;code&gt;tempfile.mkdtemp()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">也可以创建临时目录。请参阅&lt;a href=&quot;tempfile#module-tempfile&quot;&gt; &lt;code&gt;tempfile&lt;/code&gt; &lt;/a&gt;模块的&lt;a href=&quot;tempfile#tempfile.mkdtemp&quot;&gt; &lt;code&gt;tempfile.mkdtemp()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="6422bf6800c39267f0e3ec0b62764a762df242b2" translate="yes" xml:space="preserve">
          <source>It is also possible to name the combinations:</source>
          <target state="translated">也可以命名组合。</target>
        </trans-unit>
        <trans-unit id="798d456bd66adc337600fb619c61f4bd509b080b" translate="yes" xml:space="preserve">
          <source>It is also possible to stop all patches which have been started by using &lt;a href=&quot;#unittest.mock.patch.stopall&quot;&gt;&lt;code&gt;patch.stopall()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">也可以使用&lt;a href=&quot;#unittest.mock.patch.stopall&quot;&gt; &lt;code&gt;patch.stopall()&lt;/code&gt; &lt;/a&gt;停止所有已启动的补丁程序。</target>
        </trans-unit>
        <trans-unit id="ecc27f258f5c82cae432552d9efba051f52376ec" translate="yes" xml:space="preserve">
          <source>It is also possible to use a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; as a file for both reading and writing. For strings &lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; can be used like a file opened in text mode. &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt; can be used like a file opened in binary mode. Both provide full read-write capabilities with random access.</source>
          <target state="translated">也可以使用&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;类似字节的对象&lt;/a&gt;作为文件进行读取和写入。对于字符串，&lt;a href=&quot;#io.StringIO&quot;&gt; &lt;code&gt;StringIO&lt;/code&gt; &lt;/a&gt;可以像在文本模式下打开的文件一样使用。&lt;a href=&quot;#io.BytesIO&quot;&gt; &lt;code&gt;BytesIO&lt;/code&gt; &lt;/a&gt;可以像在二进制模式下打开的文件一样使用。两者均具有随机访问的全部读写功能。</target>
        </trans-unit>
        <trans-unit id="c2f64b3927e28c8bd9e49f0275fac190fac8e34d" translate="yes" xml:space="preserve">
          <source>It is also possible to use a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; as a file for both reading and writing. For strings &lt;a href=&quot;#io.StringIO&quot;&gt;&lt;code&gt;StringIO&lt;/code&gt;&lt;/a&gt; can be used like a file opened in text mode. &lt;a href=&quot;#io.BytesIO&quot;&gt;&lt;code&gt;BytesIO&lt;/code&gt;&lt;/a&gt; can be used like a file opened in binary mode. Both provide full read-write capabilities with random access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58451ee77d03223f613fe1da224a8696f7ed0741" translate="yes" xml:space="preserve">
          <source>It is also possible to use indexes different from 0, but you must know what you&amp;rsquo;re doing, just as in C: You can access or change arbitrary memory locations. Generally you only use this feature if you receive a pointer from a C function, and you &lt;em&gt;know&lt;/em&gt; that the pointer actually points to an array instead of a single item.</source>
          <target state="translated">也可以使用不同于0的索引，但是您必须知道自己在做什么，就像在C语言中一样：您可以访问或更改任意内存位置。通常，仅当您从C函数收到指针时才使用此功能，并且您&lt;em&gt;知道&lt;/em&gt;指针实际上指向数组而不是单个项。</target>
        </trans-unit>
        <trans-unit id="7f8863324723aab745603c612674ad8820136acc" translate="yes" xml:space="preserve">
          <source>It is an error for &lt;code&gt;changes&lt;/code&gt; to contain any fields that are defined as having &lt;code&gt;init=False&lt;/code&gt;. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised in this case.</source>
          <target state="translated">这是一个错误 &lt;code&gt;changes&lt;/code&gt; 以包含定义为具有任何字段 &lt;code&gt;init=False&lt;/code&gt; 。一个&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 异常&lt;/a&gt;会在这种情况下提出的。</target>
        </trans-unit>
        <trans-unit id="c40beea80b192f98b4ef0d6e82a60946f7b0973f" translate="yes" xml:space="preserve">
          <source>It is an error if &lt;em&gt;buffer_callback&lt;/em&gt; is not None and &lt;em&gt;protocol&lt;/em&gt; is None or smaller than 5.</source>
          <target state="translated">如果&lt;em&gt;buffer_callback&lt;/em&gt;不为None并且&lt;em&gt;协议&lt;/em&gt;为None或小于5 ，则为错误。</target>
        </trans-unit>
        <trans-unit id="400a0f3110c595609b6c3b419668f8a9a2d9e88b" translate="yes" xml:space="preserve">
          <source>It is an error if &lt;em&gt;themename&lt;/em&gt; already exists. If &lt;em&gt;parent&lt;/em&gt; is specified, the new theme will inherit styles, elements and layouts from the parent theme. If &lt;em&gt;settings&lt;/em&gt; are present they are expected to have the same syntax used for &lt;a href=&quot;#tkinter.ttk.Style.theme_settings&quot;&gt;&lt;code&gt;theme_settings()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果&lt;em&gt;主题名称&lt;/em&gt;已经存在，这是一个错误。如果指定了&lt;em&gt;parent&lt;/em&gt;，则新主题将从父主题继承样式，元素和布局。如果存在&lt;em&gt;设置&lt;/em&gt;，则期望它们具有与&lt;a href=&quot;#tkinter.ttk.Style.theme_settings&quot;&gt; &lt;code&gt;theme_settings()&lt;/code&gt; &lt;/a&gt;相同的语法。</target>
        </trans-unit>
        <trans-unit id="3cc9474ae763da1597037edc834b029615b066bd" translate="yes" xml:space="preserve">
          <source>It is an error to specify tuples for both &lt;em&gt;times&lt;/em&gt; and &lt;em&gt;ns&lt;/em&gt;.</source>
          <target state="translated">为&lt;em&gt;time&lt;/em&gt;和&lt;em&gt;ns&lt;/em&gt;指定元组是错误的。</target>
        </trans-unit>
        <trans-unit id="4b49de4f66d59503ff78e81f00969dd43035654c" translate="yes" xml:space="preserve">
          <source>It is assumed that &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; is a sequence. Items of &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; that are not strings referring to existing directories are ignored. Unicode items on &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; that cause errors when used as filenames may cause this function to raise an exception (in line with &lt;a href=&quot;os.path#os.path.isdir&quot;&gt;&lt;code&gt;os.path.isdir()&lt;/code&gt;&lt;/a&gt; behavior).</source>
          <target state="translated">假定&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;是一个序列。不是字符串的&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;项引用现有目录。&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;上的Unicode项在用作文件名时会导致错误，可能会导致此函数引发异常（与&lt;a href=&quot;os.path#os.path.isdir&quot;&gt; &lt;code&gt;os.path.isdir()&lt;/code&gt; &lt;/a&gt;行为一致）。</target>
        </trans-unit>
        <trans-unit id="0198f7955aa686bfda71617994f6d44009f39351" translate="yes" xml:space="preserve">
          <source>It is difficult to provide complete flexibility for incremental configuration. For example, because objects such as filters and formatters are anonymous, once a configuration is set up, it is not possible to refer to such anonymous objects when augmenting a configuration.</source>
          <target state="translated">很难为增量配置提供完全的灵活性。例如,由于过滤器和格式化器等对象是匿名的,因此一旦配置设置完毕,在增量配置时就无法引用这些匿名对象。</target>
        </trans-unit>
        <trans-unit id="9c9831b435206f2d98bf30605d962090f4a4c0bb" translate="yes" xml:space="preserve">
          <source>It is equal to &lt;code&gt;&quot;lib&quot;&lt;/code&gt; on most platforms. On Fedora and SuSE, it is equal to &lt;code&gt;&quot;lib64&quot;&lt;/code&gt; on 64-bit platforms which gives the following &lt;code&gt;sys.path&lt;/code&gt; paths (where &lt;code&gt;X.Y&lt;/code&gt; is the Python &lt;code&gt;major.minor&lt;/code&gt; version):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e876d5b634ed2ac0febedb41255584db8cd5eec6" translate="yes" xml:space="preserve">
          <source>It is expected that &lt;em&gt;name&lt;/em&gt; will be a string in one of the following formats, where W is shorthand for a valid Python identifier and dot stands for a literal period in these pseudo-regexes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8d428b0665acaca4a8a5c4e599c5757fb9e58f" translate="yes" xml:space="preserve">
          <source>It is for historical reasons that &lt;em&gt;dirname&lt;/em&gt; is named as such rather than &lt;em&gt;path&lt;/em&gt;.</source>
          <target state="translated">出于历史原因，将&lt;em&gt;dirname&lt;/em&gt;命名为as而不是&lt;em&gt;path&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8aa1103190ac27a640efe27d8f90def24b585ee7" translate="yes" xml:space="preserve">
          <source>It is generally a bad idea to call &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; in some library routine, since as a side effect it affects the entire program. Saving and restoring it is almost as bad: it is expensive and affects other threads that happen to run before the settings have been restored.</source>
          <target state="translated">在某些库例程中调用&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt;通常是一个坏主意，因为它的副作用是会影响整个程序。保存和还原它几乎是一件坏事：它很昂贵，并且会影响在还原设置之前碰巧正在运行的其他线程。</target>
        </trans-unit>
        <trans-unit id="99fa0df2b3316d6bf82c33997b4364c06d01242a" translate="yes" xml:space="preserve">
          <source>It is generally not very useful to reload built-in or dynamically loaded modules. Reloading &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;__main__#module-__main__&quot;&gt;&lt;code&gt;__main__&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; and other key modules is not recommended. In many cases extension modules are not designed to be initialized more than once, and may fail in arbitrary ways when reloaded.</source>
          <target state="translated">通常，重新加载内置或动态加载的模块不是很有用。不建议重新加载&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;__main__#module-__main__&quot;&gt; &lt;code&gt;__main__&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;和其他关键模块。在许多情况下，扩展模块不会被初始化一次以上，并且在重新加载时可能会以任意方式失败。</target>
        </trans-unit>
        <trans-unit id="fb0ca349a42e3b12e5d41231c5073aad2d937d17" translate="yes" xml:space="preserve">
          <source>It is illegal to move an item under one of its descendants. If &lt;em&gt;index&lt;/em&gt; is less than or equal to zero, &lt;em&gt;item&lt;/em&gt; is moved to the beginning; if greater than or equal to the number of children, it is moved to the end. If &lt;em&gt;item&lt;/em&gt; was detached it is reattached.</source>
          <target state="translated">将物品移到其后代之一下是非法的。如果&lt;em&gt;索引&lt;/em&gt;小于或等于零，则将&lt;em&gt;项目&lt;/em&gt;移到开头；否则，将&lt;em&gt;项目&lt;/em&gt;移到开头。如果大于或等于子代数，则将其移动到末尾。如果&lt;em&gt;项目&lt;/em&gt;已分离，则将其重新连接。</target>
        </trans-unit>
        <trans-unit id="95714223e048e09765010a9f06704454985fe259" translate="yes" xml:space="preserve">
          <source>It is important to ensure that &lt;em&gt;func&lt;/em&gt;, &lt;em&gt;args&lt;/em&gt; and &lt;em&gt;kwargs&lt;/em&gt; do not own any references to &lt;em&gt;obj&lt;/em&gt;, either directly or indirectly, since otherwise &lt;em&gt;obj&lt;/em&gt; will never be garbage collected. In particular, &lt;em&gt;func&lt;/em&gt; should not be a bound method of &lt;em&gt;obj&lt;/em&gt;.</source>
          <target state="translated">重要的是要确保&lt;em&gt;func&lt;/em&gt;，&lt;em&gt;args&lt;/em&gt;和&lt;em&gt;kwargs&lt;/em&gt;不拥有对&lt;em&gt;obj的&lt;/em&gt;任何直接或间接引用，因为否则&lt;em&gt;obj&lt;/em&gt;将永远不会被垃圾回收。特别地，&lt;em&gt;func&lt;/em&gt;不应是&lt;em&gt;obj&lt;/em&gt;的绑定方法。</target>
        </trans-unit>
        <trans-unit id="cb8f43a85dd413c6cde8de7ffa05ec877b1e553b" translate="yes" xml:space="preserve">
          <source>It is important to note that modules in the &lt;a href=&quot;#module-xml&quot;&gt;&lt;code&gt;xml&lt;/code&gt;&lt;/a&gt; package require that there be at least one SAX-compliant XML parser available. The Expat parser is included with Python, so the &lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; module will always be available.</source>
          <target state="translated">重要的是要注意，&lt;a href=&quot;#module-xml&quot;&gt; &lt;code&gt;xml&lt;/code&gt; &lt;/a&gt;包中的模块要求至少有一个可用的SAX兼容XML解析器。Expat解析器包含在Python中，因此&lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt;模块将始终可用。</target>
        </trans-unit>
        <trans-unit id="95c82506febe72f22188b7f00df4e1ec93e22d7a" translate="yes" xml:space="preserve">
          <source>It is important to note that most regular expression operations are available as module-level functions and methods on &lt;a href=&quot;#re-objects&quot;&gt;compiled regular expressions&lt;/a&gt;. The functions are shortcuts that don&amp;rsquo;t require you to compile a regex object first, but miss some fine-tuning parameters.</source>
          <target state="translated">重要的是要注意，大多数正则表达式操作都可以作为模块级函数和方法用于&lt;a href=&quot;#re-objects&quot;&gt;编译后的正则表达式&lt;/a&gt;。这些函数是快捷方式，不需要您首先编译一个regex对象，但是会错过一些微调参数。</target>
        </trans-unit>
        <trans-unit id="624e6ff33f7bfbc731179c57fb95772ca83eb019" translate="yes" xml:space="preserve">
          <source>It is limited to 100 frames and 100 threads.</source>
          <target state="translated">它的限制是100帧和100线。</target>
        </trans-unit>
        <trans-unit id="2865105771b6160f23eac9cb92cba66e1d8cd1a0" translate="yes" xml:space="preserve">
          <source>It is long enough to reduce the risk of test failure on the slowest Python buildbots. It should not be used to mark a test as failed if the test takes &amp;ldquo;too long&amp;rdquo;. The timeout value depends on the regrtest &lt;code&gt;--timeout&lt;/code&gt; command line option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4093ccc8e1fc34ca326724ab26e7be0883220a09" translate="yes" xml:space="preserve">
          <source>It is meant to be used for functions that may accept any kind of string without allowing different kinds of strings to mix. For example:</source>
          <target state="translated">它的目的是用于可以接受任何种类的字符串而不允许不同种类的字符串混合的函数。例如:</target>
        </trans-unit>
        <trans-unit id="0cb324071c8468030d58c64739521f9f962b39e8" translate="yes" xml:space="preserve">
          <source>It is not necessary to call &lt;a href=&quot;#winreg.FlushKey&quot;&gt;&lt;code&gt;FlushKey()&lt;/code&gt;&lt;/a&gt; to change a key. Registry changes are flushed to disk by the registry using its lazy flusher. Registry changes are also flushed to disk at system shutdown. Unlike &lt;a href=&quot;#winreg.CloseKey&quot;&gt;&lt;code&gt;CloseKey()&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#winreg.FlushKey&quot;&gt;&lt;code&gt;FlushKey()&lt;/code&gt;&lt;/a&gt; method returns only when all the data has been written to the registry. An application should only call &lt;a href=&quot;#winreg.FlushKey&quot;&gt;&lt;code&gt;FlushKey()&lt;/code&gt;&lt;/a&gt; if it requires absolute certainty that registry changes are on disk.</source>
          <target state="translated">不必调用&lt;a href=&quot;#winreg.FlushKey&quot;&gt; &lt;code&gt;FlushKey()&lt;/code&gt; &lt;/a&gt;来更改密钥。注册表更改通过注册表使用其惰性刷新程序刷新到磁盘。注册表更改还会在系统关闭时刷新到磁盘。与&lt;a href=&quot;#winreg.CloseKey&quot;&gt; &lt;code&gt;CloseKey()&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;#winreg.FlushKey&quot;&gt; &lt;code&gt;FlushKey()&lt;/code&gt; &lt;/a&gt;方法仅在所有数据都已写入注册表后才返回。如果应用程序需要绝对确定注册表更改在磁盘上，则仅应调用&lt;a href=&quot;#winreg.FlushKey&quot;&gt; &lt;code&gt;FlushKey()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cda47d8387a594b66517d4092e4e115ad892fbe9" translate="yes" xml:space="preserve">
          <source>It is not possible to change the encoding or newline if some data has already been read from the stream. On the other hand, changing encoding after write is possible.</source>
          <target state="translated">如果已经从流中读取了一些数据,则不可能更改编码或换行。另一方面,在写入后可以改变编码。</target>
        </trans-unit>
        <trans-unit id="d740e3156e0552c31a2af22e49ad436d6f79d68d" translate="yes" xml:space="preserve">
          <source>It is not possible to create truly immutable Python objects. However, by passing &lt;code&gt;frozen=True&lt;/code&gt; to the &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator you can emulate immutability. In that case, dataclasses will add &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setattr__&quot;&gt;&lt;code&gt;__setattr__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delattr__&quot;&gt;&lt;code&gt;__delattr__()&lt;/code&gt;&lt;/a&gt; methods to the class. These methods will raise a &lt;a href=&quot;#dataclasses.FrozenInstanceError&quot;&gt;&lt;code&gt;FrozenInstanceError&lt;/code&gt;&lt;/a&gt; when invoked.</source>
          <target state="translated">无法创建真正不变的Python对象。但是，通过将 &lt;code&gt;frozen=True&lt;/code&gt; 传递给&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;装饰器，您可以模拟不变性。在这种情况下，数据类将向&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__setattr__&quot;&gt; &lt;code&gt;__setattr__()&lt;/code&gt; &lt;/a&gt;添加__setattr __（）和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__delattr__&quot;&gt; &lt;code&gt;__delattr__()&lt;/code&gt; &lt;/a&gt;方法。这些方法在调用时将引发一个&lt;a href=&quot;#dataclasses.FrozenInstanceError&quot;&gt; &lt;code&gt;FrozenInstanceError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ac77add23b717e9d3af735f69af402dbc3a7c9b" translate="yes" xml:space="preserve">
          <source>It is not possible to create truly immutable Python objects. However, by passing &lt;code&gt;frozen=True&lt;/code&gt; to the &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; decorator you can emulate immutability. In that case, dataclasses will add &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__setattr__&quot;&gt;&lt;code&gt;__setattr__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__delattr__&quot;&gt;&lt;code&gt;__delattr__()&lt;/code&gt;&lt;/a&gt; methods to the class. These methods will raise a &lt;a href=&quot;#dataclasses.FrozenInstanceError&quot;&gt;&lt;code&gt;FrozenInstanceError&lt;/code&gt;&lt;/a&gt; when invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c8b8a4e69ed2aef84c5a02c66e3da2e510e6b7" translate="yes" xml:space="preserve">
          <source>It is not possible to interrupt the &lt;code&gt;acquire()&lt;/code&gt; method on a lock &amp;mdash; the &lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt;&lt;code&gt;KeyboardInterrupt&lt;/code&gt;&lt;/a&gt; exception will happen after the lock has been acquired.</source>
          <target state="translated">无法中断锁的 &lt;code&gt;acquire()&lt;/code&gt; 方法－获取锁后将发生&lt;a href=&quot;exceptions#KeyboardInterrupt&quot;&gt; &lt;code&gt;KeyboardInterrupt&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="24ff4ffa82b2b892ee254ff767fd50df824c9ec4" translate="yes" xml:space="preserve">
          <source>It is not recommended to instantiate &lt;em&gt;StreamReader&lt;/em&gt; objects directly; use &lt;a href=&quot;#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">不建议直接实例化&lt;em&gt;StreamReader&lt;/em&gt;对象。使用&lt;a href=&quot;#asyncio.open_connection&quot;&gt; &lt;code&gt;open_connection()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.start_server&quot;&gt; &lt;code&gt;start_server()&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="9c8eb1dc59babd5bb45a6542412c6c2dbef60bec" translate="yes" xml:space="preserve">
          <source>It is not recommended to instantiate &lt;em&gt;StreamWriter&lt;/em&gt; objects directly; use &lt;a href=&quot;#asyncio.open_connection&quot;&gt;&lt;code&gt;open_connection()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.start_server&quot;&gt;&lt;code&gt;start_server()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">不建议直接实例化&lt;em&gt;StreamWriter&lt;/em&gt;对象。使用&lt;a href=&quot;#asyncio.open_connection&quot;&gt; &lt;code&gt;open_connection()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.start_server&quot;&gt; &lt;code&gt;start_server()&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="f7c86d9042354a4a12010ffbf2e6c79a46e63619" translate="yes" xml:space="preserve">
          <source>It is occasionally desirable to catch exceptions from an &lt;code&gt;__enter__&lt;/code&gt; method implementation, &lt;em&gt;without&lt;/em&gt; inadvertently catching exceptions from the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement body or the context manager&amp;rsquo;s &lt;code&gt;__exit__&lt;/code&gt; method. By using &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; the steps in the context management protocol can be separated slightly in order to allow this:</source>
          <target state="translated">偶尔希望从 &lt;code&gt;__enter__&lt;/code&gt; 方法实现中捕获异常，&lt;em&gt;而不会&lt;/em&gt;无意中从&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句主体或上下文管理器的 &lt;code&gt;__exit__&lt;/code&gt; 方法中捕获异常。通过使用&lt;a href=&quot;#contextlib.ExitStack&quot;&gt; &lt;code&gt;ExitStack&lt;/code&gt; &lt;/a&gt;，可以略微分离上下文管理协议中的步骤，以实现以下目的：</target>
        </trans-unit>
        <trans-unit id="e25f46cefd68c273b90476861ac7cb60e39c31cc" translate="yes" xml:space="preserve">
          <source>It is occasionally desirable to catch exceptions from an &lt;code&gt;__enter__&lt;/code&gt; method implementation, &lt;em&gt;without&lt;/em&gt; inadvertently catching exceptions from the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement body or the context manager&amp;rsquo;s &lt;code&gt;__exit__&lt;/code&gt; method. By using &lt;a href=&quot;#contextlib.ExitStack&quot;&gt;&lt;code&gt;ExitStack&lt;/code&gt;&lt;/a&gt; the steps in the context management protocol can be separated slightly in order to allow this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17abe925d75df3e6434e095da340d7b3d585efbb" translate="yes" xml:space="preserve">
          <source>It is possible (but not likely) that the parser stops parsing with a successful outcome before reaching the end of the source; in this case, trailing symbols may be ignored instead of causing an error. For example, a backslash followed by two newlines may be followed by arbitrary garbage. This will be fixed once the API for the parser is better.</source>
          <target state="translated">解析器有可能(但不可能)在到达源的结尾之前就停止解析,并获得成功的结果;在这种情况下,尾部的符号可能会被忽略,而不会导致错误。例如,一个反斜杠后面的两个换行符可能会被任意的垃圾符号所跟随。一旦解析器的 API 变得更好,这个问题就会得到解决。</target>
        </trans-unit>
        <trans-unit id="c6d4dc91e3e444d1207eacfb1b8c9b7d64f669d0" translate="yes" xml:space="preserve">
          <source>It is possible that you want to use a different prefix for your tests. You can inform the patchers of the different prefix by setting &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt;:</source>
          <target state="translated">您可能想为测试使用其他前缀。您可以通过设置 &lt;code&gt;patch.TEST_PREFIX&lt;/code&gt; 来通知修补程序不同的前缀：</target>
        </trans-unit>
        <trans-unit id="e82dbe871f90899f7a19bde1d2a710623cd64537" translate="yes" xml:space="preserve">
          <source>It is possible to add a node with no dependencies (&lt;em&gt;predecessors&lt;/em&gt; is not provided) or to provide a dependency twice. If a node that has not been provided before is included among &lt;em&gt;predecessors&lt;/em&gt; it will be automatically added to the graph with no predecessors of its own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78bc02a5d38d5ce034759672aa988ab58493d7c" translate="yes" xml:space="preserve">
          <source>It is possible to assign a callable Python object that is not a ctypes type, in this case the function is assumed to return a C &lt;code&gt;int&lt;/code&gt;, and the callable will be called with this integer, allowing further processing or error checking. Using this is deprecated, for more flexible post processing or error checking use a ctypes data type as &lt;a href=&quot;#ctypes._FuncPtr.restype&quot;&gt;&lt;code&gt;restype&lt;/code&gt;&lt;/a&gt; and assign a callable to the &lt;a href=&quot;#ctypes._FuncPtr.errcheck&quot;&gt;&lt;code&gt;errcheck&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">可以分配一个非ctypes类型的可调用Python对象，在这种情况下，假定该函数返回C &lt;code&gt;int&lt;/code&gt; ，并且将使用该整数调用该可调用对象，从而允许进行进一步的处理或错误检查。不建议使用此方法，为了更灵活地进行后期处理或错误检查，请使用ctypes数据类型作为&lt;a href=&quot;#ctypes._FuncPtr.restype&quot;&gt; &lt;code&gt;restype&lt;/code&gt; &lt;/a&gt;并将可调用项分配给&lt;a href=&quot;#ctypes._FuncPtr.errcheck&quot;&gt; &lt;code&gt;errcheck&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="a0369df82e65498d9a61cbbea72fb5715a7cfcd6" translate="yes" xml:space="preserve">
          <source>It is possible to construct malicious pickle data which will &lt;strong&gt;execute arbitrary code during unpickling&lt;/strong&gt;. Never unpickle data that could have come from an untrusted source, or that could have been tampered with.</source>
          <target state="translated">可以构造恶意的腌制数据，该数据将&lt;strong&gt;在解&lt;/strong&gt;腌&lt;strong&gt;期间执行任意代码&lt;/strong&gt;。永远不要挑剔那些可能来自不可信来源或被篡改的数据。</target>
        </trans-unit>
        <trans-unit id="6ffefb08180256f54248ce087946347d3dc7ebe6" translate="yes" xml:space="preserve">
          <source>It is possible to crash the Python interpreter when loading a database with a sufficiently large/complex entry due to stack depth limitations in Python&amp;rsquo;s AST compiler.</source>
          <target state="translated">由于Python AST编译器中的堆栈深度限制，在加载具有足够大/复杂条目的数据库时，可能会使Python解释器崩溃。</target>
        </trans-unit>
        <trans-unit id="1e9b153eb1d2d572d629baf0a1dcd8a08f67d846" translate="yes" xml:space="preserve">
          <source>It is possible to crash the Python interpreter with a sufficiently large/complex string due to stack depth limitations in Python&amp;rsquo;s AST compiler.</source>
          <target state="translated">由于Python AST编译器中的堆栈深度限制，使用足够大/复杂的字符串可能会使Python解释器崩溃。</target>
        </trans-unit>
        <trans-unit id="667abe8e68a549284d45ff70fd062fc2cf5fac92" translate="yes" xml:space="preserve">
          <source>It is possible to crash the Python interpreter with a sufficiently large/complex string when compiling to an AST object due to stack depth limitations in Python&amp;rsquo;s AST compiler.</source>
          <target state="translated">由于AST的堆栈深度限制，在编译为AST对象时，使用足够大/复杂的字符串可能会使Python解释器崩溃。</target>
        </trans-unit>
        <trans-unit id="3f5b20068a1b037beccc1359b62759b16ab15b78" translate="yes" xml:space="preserve">
          <source>It is possible to create shared objects using shared memory which can be inherited by child processes.</source>
          <target state="translated">可以使用共享内存创建共享对象,这些共享对象可以由子进程继承。</target>
        </trans-unit>
        <trans-unit id="9c5f47167a007557bb807d93cb531c2ebd09d5d5" translate="yes" xml:space="preserve">
          <source>It is possible to create structures and unions containing bit fields. Bit fields are only possible for integer fields, the bit width is specified as the third item in the &lt;code&gt;_fields_&lt;/code&gt; tuples:</source>
          <target state="translated">可以创建包含位字段的结构和联合。位域仅适用于整数域，位宽指定为 &lt;code&gt;_fields_&lt;/code&gt; 元组中的第三项：</target>
        </trans-unit>
        <trans-unit id="db8a275af694f0dd377aeb7a61522ec616a0f705" translate="yes" xml:space="preserve">
          <source>It is possible to declare the return type of a callable without specifying the call signature by substituting a literal ellipsis for the list of arguments in the type hint: &lt;code&gt;Callable[..., ReturnType]&lt;/code&gt;.</source>
          <target state="translated">通过用文字省略号代替类型提示中的参数列表，可以声明可调用函数的返回类型而无需指定调用签名： &lt;code&gt;Callable[..., ReturnType]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66dbfac9c9ecbf0f3ba234b858bf45197be29989" translate="yes" xml:space="preserve">
          <source>It is possible to define sub-subclasses of structure types, they inherit the fields of the base class plus the &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; defined in the sub-subclass, if any.</source>
          <target state="translated">可以定义结构类型的子子类，它们继承基类的字段以及子子类中定义的&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;（如果有）。</target>
        </trans-unit>
        <trans-unit id="52e02a5e8d810a438d07f3c505bb28740bdb60d9" translate="yes" xml:space="preserve">
          <source>It is possible to define sub-subclasses of structures, they inherit the fields of the base class. If the subclass definition has a separate &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; variable, the fields specified in this are appended to the fields of the base class.</source>
          <target state="translated">可以定义结构的子子类，它们继承基类的字段。如果子类定义具有单独的&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;变量，则在此变量中指定的字段将附加到基类的字段中。</target>
        </trans-unit>
        <trans-unit id="479dec54822844d5952dff407e0c75c4abf7dfbc" translate="yes" xml:space="preserve">
          <source>It is possible to define the &lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt;&lt;code&gt;_fields_&lt;/code&gt;&lt;/a&gt; class variable &lt;em&gt;after&lt;/em&gt; the class statement that defines the Structure subclass, this allows creating data types that directly or indirectly reference themselves:</source>
          <target state="translated">可以在定义Structure子类的类语句&lt;em&gt;之后&lt;/em&gt;定义&lt;a href=&quot;#ctypes.Structure._fields_&quot;&gt; &lt;code&gt;_fields_&lt;/code&gt; &lt;/a&gt;类变量，这允许创建直接或间接引用自身的数据类型：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41dc430c996cb5dba1d5b954f315a11cad50c234" translate="yes" xml:space="preserve">
          <source>It is possible to modify how Enum members are pickled/unpickled by defining &lt;a href=&quot;pickle#object.__reduce_ex__&quot;&gt;&lt;code&gt;__reduce_ex__()&lt;/code&gt;&lt;/a&gt; in the enumeration class.</source>
          <target state="translated">通过在枚举类中定义&lt;a href=&quot;pickle#object.__reduce_ex__&quot;&gt; &lt;code&gt;__reduce_ex__()&lt;/code&gt; &lt;/a&gt;，可以修改如何对Enum成员进行酸洗/不酸洗。</target>
        </trans-unit>
        <trans-unit id="5c6a93b23d9d0ef75736ca0a792ff0ce4b6aa42c" translate="yes" xml:space="preserve">
          <source>It is possible to provide a setup statement that is executed only once at the beginning:</source>
          <target state="translated">可以提供一个在开始时只执行一次的设置语句。</target>
        </trans-unit>
        <trans-unit id="4aaa2207bb2559e1c452bea74e3b02c4226e1a08" translate="yes" xml:space="preserve">
          <source>It is possible to run a manager server on one machine and have clients use it from other machines (assuming that the firewalls involved allow it).</source>
          <target state="translated">可以在一台机器上运行管理器服务器,并让客户从其他机器上使用它(假设相关防火墙允许)。</target>
        </trans-unit>
        <trans-unit id="57b2132f9f4ecae5672296c54e7165dcd43d470b" translate="yes" xml:space="preserve">
          <source>It is possible to specify the required argument types of functions exported from DLLs by setting the &lt;code&gt;argtypes&lt;/code&gt; attribute.</source>
          <target state="translated">通过设置 &lt;code&gt;argtypes&lt;/code&gt; 属性，可以指定从DLL导出的函数所需的参数类型。</target>
        </trans-unit>
        <trans-unit id="870efee18a65f0470db8320acfa65e0397dea3dc" translate="yes" xml:space="preserve">
          <source>It is preferred that tests that use the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; module follow a few guidelines. One is to name the test module by starting it with &lt;code&gt;test_&lt;/code&gt; and end it with the name of the module being tested. The test methods in the test module should start with &lt;code&gt;test_&lt;/code&gt; and end with a description of what the method is testing. This is needed so that the methods are recognized by the test driver as test methods. Also, no documentation string for the method should be included. A comment (such as &lt;code&gt;# Tests function returns only True or False&lt;/code&gt;) should be used to provide documentation for test methods. This is done because documentation strings get printed out if they exist and thus what test is being run is not stated.</source>
          <target state="translated">使用&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;模块的测试最好遵循一些准则。一种是通过以 &lt;code&gt;test_&lt;/code&gt; 开头并以被测试模块的名称结尾来命名测试模块。测试模块中的测试方法应以 &lt;code&gt;test_&lt;/code&gt; 开头，并以对该方法进行测试的描述结尾。这是必需的，以便测试驱动程序将这些方法识别为测试方法。另外，不应包含该方法的文档字符串。应使用注释（例如 &lt;code&gt;# Tests function returns only True or False&lt;/code&gt; ）来提供测试方法的文档。这样做是因为会打印出文档字符串（如果存在），因此不会说明正在运行的测试。</target>
        </trans-unit>
        <trans-unit id="4437dd782d3aa5f4d33ce55912438ab2de9ddb49" translate="yes" xml:space="preserve">
          <source>It is probably best to stick to using queues or pipes for communication between processes rather than using the lower level synchronization primitives.</source>
          <target state="translated">最好的办法可能是坚持使用队列或管道在进程之间进行通信,而不是使用低级别的同步基元。</target>
        </trans-unit>
        <trans-unit id="3513dd531e92db2dd18418ab9200aa8630263c69" translate="yes" xml:space="preserve">
          <source>It is recommended that you use TestCase implementations to group tests together according to the features they test. &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; provides a mechanism for this: the &lt;em&gt;test suite&lt;/em&gt;, represented by &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; class. In most cases, calling &lt;a href=&quot;#unittest.main&quot;&gt;&lt;code&gt;unittest.main()&lt;/code&gt;&lt;/a&gt; will do the right thing and collect all the module&amp;rsquo;s test cases for you and execute them.</source>
          <target state="translated">建议您使用TestCase实现将测试根据其测试的功能分组在一起。&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;为此提供了一种机制：&lt;em&gt;测试套件&lt;/em&gt;，由&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;类表示。在大多数情况下，调用&lt;a href=&quot;#unittest.main&quot;&gt; &lt;code&gt;unittest.main()&lt;/code&gt; &lt;/a&gt;将做正确的事情，并为您收集所有模块的测试用例并执行它们。</target>
        </trans-unit>
        <trans-unit id="7ee962c8bcd7baffe9ba130a3118c335c829f4d0" translate="yes" xml:space="preserve">
          <source>It is responsible for calling all the cleanup functions added by &lt;a href=&quot;#unittest.TestCase.addCleanup&quot;&gt;&lt;code&gt;addCleanup()&lt;/code&gt;&lt;/a&gt;. If you need cleanup functions to be called &lt;em&gt;prior&lt;/em&gt; to &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt; then you can call &lt;a href=&quot;#unittest.TestCase.doCleanups&quot;&gt;&lt;code&gt;doCleanups()&lt;/code&gt;&lt;/a&gt; yourself.</source>
          <target state="translated">它负责调用&lt;a href=&quot;#unittest.TestCase.addCleanup&quot;&gt; &lt;code&gt;addCleanup()&lt;/code&gt; &lt;/a&gt;添加的所有清除函数。如果你需要清除函数被调用&lt;em&gt;之前&lt;/em&gt;到&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;，那么你可以调用&lt;a href=&quot;#unittest.TestCase.doCleanups&quot;&gt; &lt;code&gt;doCleanups()&lt;/code&gt; &lt;/a&gt;自己。</target>
        </trans-unit>
        <trans-unit id="66da881a51744abc2d365ae7a19e8866de644b04" translate="yes" xml:space="preserve">
          <source>It is responsible for calling all the cleanup functions added by &lt;code&gt;addCleanupClass()&lt;/code&gt;. If you need cleanup functions to be called &lt;em&gt;prior&lt;/em&gt; to &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt; then you can call &lt;code&gt;doCleanupsClass()&lt;/code&gt; yourself.</source>
          <target state="translated">它负责调用 &lt;code&gt;addCleanupClass()&lt;/code&gt; 添加的所有清除函数。如果你需要清除函数被调用&lt;em&gt;之前&lt;/em&gt;到&lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; &lt;/a&gt;，那么你可以调用 &lt;code&gt;doCleanupsClass()&lt;/code&gt; 自己。</target>
        </trans-unit>
        <trans-unit id="44bfa96d5424e117886453b18001094b089f64bd" translate="yes" xml:space="preserve">
          <source>It is responsible for calling all the cleanup functions added by &lt;code&gt;addCleanupModule()&lt;/code&gt;. If you need cleanup functions to be called &lt;em&gt;prior&lt;/em&gt; to &lt;code&gt;tearDownModule()&lt;/code&gt; then you can call &lt;a href=&quot;#unittest.doModuleCleanups&quot;&gt;&lt;code&gt;doModuleCleanups()&lt;/code&gt;&lt;/a&gt; yourself.</source>
          <target state="translated">它负责调用 &lt;code&gt;addCleanupModule()&lt;/code&gt; 添加的所有清除函数。如果你需要清除函数被调用&lt;em&gt;之前&lt;/em&gt;到 &lt;code&gt;tearDownModule()&lt;/code&gt; ，那么你可以调用&lt;a href=&quot;#unittest.doModuleCleanups&quot;&gt; &lt;code&gt;doModuleCleanups()&lt;/code&gt; &lt;/a&gt;自己。</target>
        </trans-unit>
        <trans-unit id="40d076e54c14795bf1009ae955624fb9ee075980" translate="yes" xml:space="preserve">
          <source>It is set for &lt;code&gt;SELECT&lt;/code&gt; statements without any matching rows as well.</source>
          <target state="translated">它是为 &lt;code&gt;SELECT&lt;/code&gt; 语句设置的，也没有任何匹配的行。</target>
        </trans-unit>
        <trans-unit id="e4892c14dd8e03e95f7b9a46c2b927e82c3de81e" translate="yes" xml:space="preserve">
          <source>It is similar to &lt;a href=&quot;#opcode-END_FINALLY&quot;&gt;&lt;code&gt;END_FINALLY&lt;/code&gt;&lt;/a&gt;, but doesn&amp;rsquo;t change the bytecode counter nor raise an exception. Used for implementing &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#continue&quot;&gt;&lt;code&gt;continue&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">它类似于&lt;a href=&quot;#opcode-END_FINALLY&quot;&gt; &lt;code&gt;END_FINALLY&lt;/code&gt; &lt;/a&gt;，但不更改字节码计数器也不引发异常。用于实现&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#continue&quot;&gt; &lt;code&gt;continue&lt;/code&gt; &lt;/a&gt;并在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;块中&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42d9754d1dda336bfe25a9c6e63c2992d8307a7e" translate="yes" xml:space="preserve">
          <source>It is straightforward to create an ordered dictionary variant that remembers the order the keys were &lt;em&gt;last&lt;/em&gt; inserted. If a new entry overwrites an existing entry, the original insertion position is changed and moved to the end:</source>
          <target state="translated">创建一个有序的字典变体很容易，它可以记住键的&lt;em&gt;最后&lt;/em&gt;插入顺序。如果新条目覆盖现有条目，则原始插入位置将更改并移至末尾：</target>
        </trans-unit>
        <trans-unit id="b290678be018032e40bcd30baa36d13bcef66f17" translate="yes" xml:space="preserve">
          <source>It is the application&amp;rsquo;s responsibility to ensure that all whitespace and special characters are quoted appropriately to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell injection&lt;/a&gt; vulnerabilities. The &lt;a href=&quot;shlex#shlex.quote&quot;&gt;&lt;code&gt;shlex.quote()&lt;/code&gt;&lt;/a&gt; function can be used to properly escape whitespace and special characters in strings that are going to be used to construct shell commands.</source>
          <target state="translated">应用程序有责任确保所有空格和特殊字符都被正确引用，以避免&lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell注入&lt;/a&gt;漏洞。该&lt;a href=&quot;shlex#shlex.quote&quot;&gt; &lt;code&gt;shlex.quote()&lt;/code&gt; &lt;/a&gt;函数可用于适当逃避那将要用来构建shell命令字符串空格和特殊字符。</target>
        </trans-unit>
        <trans-unit id="83308bc4ef3c9f055207277d114b19f86e753316" translate="yes" xml:space="preserve">
          <source>It is the application&amp;rsquo;s responsibility to ensure that all whitespace and special characters are quoted appropriately to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell injection&lt;/a&gt; vulnerabilities. The &lt;a href=&quot;shlex#shlex.quote&quot;&gt;&lt;code&gt;shlex.quote()&lt;/code&gt;&lt;/a&gt; function can be used to properly escape whitespace and special shell characters in strings that are going to be used to construct shell commands.</source>
          <target state="translated">应用程序有责任确保所有空格和特殊字符都被正确引用，以避免&lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell注入&lt;/a&gt;漏洞。该&lt;a href=&quot;shlex#shlex.quote&quot;&gt; &lt;code&gt;shlex.quote()&lt;/code&gt; &lt;/a&gt;函数可以用来妥善逃避串空白和特殊的shell字符都将被用来构建shell命令。</target>
        </trans-unit>
        <trans-unit id="ba77524bde6cf6c11d179f96eb65e17908025854" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;Ellipsis&lt;/code&gt; or &lt;code&gt;...&lt;/code&gt;.</source>
          <target state="translated">这是写的 &lt;code&gt;Ellipsis&lt;/code&gt; 或 &lt;code&gt;...&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c82f78122d7edace8ca573121d93f7a6333cafc" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">它写为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
