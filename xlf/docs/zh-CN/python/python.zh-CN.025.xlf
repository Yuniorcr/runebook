<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="0180b25a093580d58646f91f83b8f7e9cbab599d" translate="yes" xml:space="preserve">
          <source>This class implements the actual POP3 protocol. The connection is created when the instance is initialized. If &lt;em&gt;port&lt;/em&gt; is omitted, the standard POP3 port (110) is used. The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for the connection attempt (if not specified, the global default timeout setting will be used).</source>
          <target state="translated">此类实现实际的POP3协议。实例初始化时创建连接。如果省略&lt;em&gt;端口&lt;/em&gt;，则使用标准的POP3端口（110）。可选的&lt;em&gt;timeout&lt;/em&gt;参数指定连接尝试的超时时间（以秒为单位）（如果未指定，将使用全局默认超时设置）。</target>
        </trans-unit>
        <trans-unit id="3a79142561e96a9c93e4a6f25d9a885ccc0ed19a" translate="yes" xml:space="preserve">
          <source>This class implements the portion of the &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; interface which allows the test runner to drive the test, but does not provide the methods which test code can use to check and report errors. This is used to create test cases using legacy test code, allowing it to be integrated into a &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;-based test framework.</source>
          <target state="translated">此类实现&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;接口的一部分，该部分允许测试运行程序进行测试，但不提供测试代码可用来检查和报告错误的方法。这是用来创建使用旧的测试代码的测试用例，允许它被集成到一个&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;为基础的测试框架。</target>
        </trans-unit>
        <trans-unit id="1b5d0a87fabd812ddac703c4acba87065679d185" translate="yes" xml:space="preserve">
          <source>This class is &lt;a href=&quot;asyncio-dev#asyncio-multithreading&quot;&gt;not thread safe&lt;/a&gt;.</source>
          <target state="translated">此类&lt;a href=&quot;asyncio-dev#asyncio-multithreading&quot;&gt;不是线程安全的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99bb71c8691256ec79b26eef0240bf9f20850bd6" translate="yes" xml:space="preserve">
          <source>This class is a dictionary-like object whose keys are strings and whose values are &lt;a href=&quot;#http.cookies.Morsel&quot;&gt;&lt;code&gt;Morsel&lt;/code&gt;&lt;/a&gt; instances. Note that upon setting a key to a value, the value is first converted to a &lt;a href=&quot;#http.cookies.Morsel&quot;&gt;&lt;code&gt;Morsel&lt;/code&gt;&lt;/a&gt; containing the key and the value.</source>
          <target state="translated">此类是类似于字典的对象，其键是字符串，其值是&lt;a href=&quot;#http.cookies.Morsel&quot;&gt; &lt;code&gt;Morsel&lt;/code&gt; &lt;/a&gt;实例。请注意，在将键设置为值时，该值首先转换为包含键和值的&lt;a href=&quot;#http.cookies.Morsel&quot;&gt; &lt;code&gt;Morsel&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0ca616b29a0013c8896bdb2f5eebfbd623fd044" translate="yes" xml:space="preserve">
          <source>This class is a subclass of &lt;a href=&quot;#asyncio.Handle&quot;&gt;&lt;code&gt;Handle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此类是&lt;a href=&quot;#asyncio.Handle&quot;&gt; &lt;code&gt;Handle&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="bc1a4fba51c4143a764de9b3702c6dad4e57616d" translate="yes" xml:space="preserve">
          <source>This class is a subclass of &lt;a href=&quot;#wsgiref.handlers.BaseCGIHandler&quot;&gt;&lt;code&gt;BaseCGIHandler&lt;/code&gt;&lt;/a&gt; that sets &lt;code&gt;wsgi.run_once&lt;/code&gt; to true, &lt;code&gt;wsgi.multithread&lt;/code&gt; to false, and &lt;code&gt;wsgi.multiprocess&lt;/code&gt; to true, and always uses &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; to obtain the necessary CGI streams and environment.</source>
          <target state="translated">这个类的子类&lt;a href=&quot;#wsgiref.handlers.BaseCGIHandler&quot;&gt; &lt;code&gt;BaseCGIHandler&lt;/code&gt; &lt;/a&gt;该套 &lt;code&gt;wsgi.run_once&lt;/code&gt; 为true， &lt;code&gt;wsgi.multithread&lt;/code&gt; 为假，并 &lt;code&gt;wsgi.multiprocess&lt;/code&gt; 为true，并且始终使用&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;，以获得必要的CGI流和环境。</target>
        </trans-unit>
        <trans-unit id="8380c0b548cc2e264460ea64612afb578b6a25a2" translate="yes" xml:space="preserve">
          <source>This class is a subclass of &lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;. It overrides the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;get_stdin()&lt;/code&gt;, &lt;code&gt;get_stderr()&lt;/code&gt;, &lt;code&gt;add_cgi_vars()&lt;/code&gt;, &lt;code&gt;_write()&lt;/code&gt;, and &lt;code&gt;_flush()&lt;/code&gt; methods to support explicitly setting the environment and streams via the constructor. The supplied environment and streams are stored in the &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, &lt;code&gt;stderr&lt;/code&gt;, and &lt;code&gt;environ&lt;/code&gt; attributes.</source>
          <target state="translated">此类是&lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;的子类。它覆盖了&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;get_stdin()&lt;/code&gt; ， &lt;code&gt;get_stderr()&lt;/code&gt; ， &lt;code&gt;add_cgi_vars()&lt;/code&gt; ， &lt;code&gt;_write()&lt;/code&gt; ，和 &lt;code&gt;_flush()&lt;/code&gt; 方法来支持明确设置通过构造环境和溪流。提供的环境和流存储在 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; ， &lt;code&gt;stderr&lt;/code&gt; 和 &lt;code&gt;environ&lt;/code&gt; 属性中。</target>
        </trans-unit>
        <trans-unit id="e1548ced0e2c22f69a3171c551d6503b32f508fd" translate="yes" xml:space="preserve">
          <source>This class is a subclass of &lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;. It overrides the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;get_stdin()&lt;/code&gt;, &lt;code&gt;get_stderr()&lt;/code&gt;, &lt;code&gt;add_cgi_vars()&lt;/code&gt;, &lt;code&gt;_write()&lt;/code&gt;, and &lt;code&gt;_flush()&lt;/code&gt; methods to support explicitly setting the environment and streams via the constructor. The supplied environment and streams are stored in the &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, &lt;code&gt;stderr&lt;/code&gt;, and &lt;code&gt;environ&lt;/code&gt; attributes.</source>
          <target state="translated">此类是&lt;a href=&quot;#wsgiref.handlers.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;的子类。它覆盖了&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;get_stdin()&lt;/code&gt; ， &lt;code&gt;get_stderr()&lt;/code&gt; ， &lt;code&gt;add_cgi_vars()&lt;/code&gt; ， &lt;code&gt;_write()&lt;/code&gt; ，和 &lt;code&gt;_flush()&lt;/code&gt; 方法来支持明确设置通过构造环境和溪流。提供的环境和流存储在 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; ， &lt;code&gt;stderr&lt;/code&gt; 和 &lt;code&gt;environ&lt;/code&gt; 属性中。</target>
        </trans-unit>
        <trans-unit id="9e951623508bbecd101c96001b60f6dffab7df5d" translate="yes" xml:space="preserve">
          <source>This class is a subclass of &lt;a href=&quot;#wsgiref.handlers.SimpleHandler&quot;&gt;&lt;code&gt;SimpleHandler&lt;/code&gt;&lt;/a&gt; intended for use with software other than HTTP &amp;ldquo;origin servers&amp;rdquo;. If you are writing a gateway protocol implementation (such as CGI, FastCGI, SCGI, etc.) that uses a &lt;code&gt;Status:&lt;/code&gt; header to send an HTTP status, you probably want to subclass this instead of &lt;a href=&quot;#wsgiref.handlers.SimpleHandler&quot;&gt;&lt;code&gt;SimpleHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此类是&lt;a href=&quot;#wsgiref.handlers.SimpleHandler&quot;&gt; &lt;code&gt;SimpleHandler&lt;/code&gt; &lt;/a&gt;的子类，旨在与HTTP&amp;ldquo;起源服务器&amp;rdquo;以外的软件一起使用。如果您正在编写使用 &lt;code&gt;Status:&lt;/code&gt; 标头发送HTTP状态的网关协议实现（例如CGI，FastCGI，SCGI等），则可能要对此子类化，而不是&lt;a href=&quot;#wsgiref.handlers.SimpleHandler&quot;&gt; &lt;code&gt;SimpleHandler&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c92ecd5d85f70cf680d95261e8d2ae49751975a2" translate="yes" xml:space="preserve">
          <source>This class is an abstract subclass of &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt;. To make practical use of the code you must subclass &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt;, providing meaningful &lt;a href=&quot;#asynchat.async_chat.collect_incoming_data&quot;&gt;&lt;code&gt;collect_incoming_data()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asynchat.async_chat.found_terminator&quot;&gt;&lt;code&gt;found_terminator()&lt;/code&gt;&lt;/a&gt; methods. The &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt; methods can be used, although not all make sense in a message/response context.</source>
          <target state="translated">此类是&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;的抽象子类。要实际使用该代码，您必须将&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;子类化，提供有意义的&lt;a href=&quot;#asynchat.async_chat.collect_incoming_data&quot;&gt; &lt;code&gt;collect_incoming_data()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asynchat.async_chat.found_terminator&quot;&gt; &lt;code&gt;found_terminator()&lt;/code&gt; &lt;/a&gt;方法。所述&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;方法可用于，虽然不是在消息/响应上下文的所有有意义。</target>
        </trans-unit>
        <trans-unit id="087906235606c3c8fcaffe0693c559a88547f320" translate="yes" xml:space="preserve">
          <source>This class is an abstraction of a URL request.</source>
          <target state="translated">这个类是一个URL请求的抽象。</target>
        </trans-unit>
        <trans-unit id="0c6a034b6a98360f469f65a28d42a14f807ea562" translate="yes" xml:space="preserve">
          <source>This class is deliberately simple, just an &lt;a href=&quot;functions#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; subclass with a readable string representation. If you prefer to have dict-like view of the attributes, you can use the standard Python idiom, &lt;a href=&quot;functions#vars&quot;&gt;&lt;code&gt;vars()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">此类是故意简化的，只是具有可读字符串表示形式的&lt;a href=&quot;functions#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;子类。如果您更喜欢具有类似dict的属性视图，则可以使用标准的Python习惯用法&lt;a href=&quot;functions#vars&quot;&gt; &lt;code&gt;vars()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a5fcd1581caf40e9e0df5f205f111b1168737d46" translate="yes" xml:space="preserve">
          <source>This class is designed to have a similar API to the &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; class, but there are some notable differences:</source>
          <target state="translated">此类设计为具有与&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt;类类似的API ，但有一些显着区别：</target>
        </trans-unit>
        <trans-unit id="548e5fba14e42ef23c63d6ed78e4af70b26ae4c7" translate="yes" xml:space="preserve">
          <source>This class is designed to sit between an &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; and the client application&amp;rsquo;s event handlers. By default, it does nothing but pass requests up to the reader and events on to the handlers unmodified, but subclasses can override specific methods to modify the event stream or the configuration requests as they pass through.</source>
          <target state="translated">此类设计为位于&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;与客户端应用程序的事件处理程序之间。默认情况下，它什么都不做，只是将请求传递到读取器，并将事件未经修改地传递到处理程序，但是子类可以覆盖特定的方法，以在事件流或配置请求通过时修改它们。</target>
        </trans-unit>
        <trans-unit id="efbe53f191c0337a6044ecda5cb8ff2affeb594f" translate="yes" xml:space="preserve">
          <source>This class is identical to HTTPServer but uses threads to handle requests by using the &lt;a href=&quot;socketserver#socketserver.ThreadingMixIn&quot;&gt;&lt;code&gt;ThreadingMixIn&lt;/code&gt;&lt;/a&gt;. This is useful to handle web browsers pre-opening sockets, on which &lt;a href=&quot;#http.server.HTTPServer&quot;&gt;&lt;code&gt;HTTPServer&lt;/code&gt;&lt;/a&gt; would wait indefinitely.</source>
          <target state="translated">此类与HTTPServer相同，但是使用线程通过&lt;a href=&quot;socketserver#socketserver.ThreadingMixIn&quot;&gt; &lt;code&gt;ThreadingMixIn&lt;/code&gt; &lt;/a&gt;处理请求。这对于处理预打开套接字的Web浏览器很有用，&lt;a href=&quot;#http.server.HTTPServer&quot;&gt; &lt;code&gt;HTTPServer&lt;/code&gt; &lt;/a&gt;会无限期等待该套接字。</target>
        </trans-unit>
        <trans-unit id="782b34777524d6fe446584f87d0601af4116f199" translate="yes" xml:space="preserve">
          <source>This class is meant to be subclassed, with the subclass adding visitor methods.</source>
          <target state="translated">这个类是要被子类化的,子类要增加访问者方法。</target>
        </trans-unit>
        <trans-unit id="f0df1f01557aa8ffb4f27cded6abda03c3defe24" translate="yes" xml:space="preserve">
          <source>This class is normally only used if more precise control over profiling is needed than what the &lt;code&gt;cProfile.run()&lt;/code&gt; function provides.</source>
          <target state="translated">通常仅在需要对配置文件进行比 &lt;code&gt;cProfile.run()&lt;/code&gt; 函数提供的功能更精确的控制时，才使用此类。</target>
        </trans-unit>
        <trans-unit id="dedbc6f4178266f9137c0a6e0806aaa414d428e9" translate="yes" xml:space="preserve">
          <source>This class is parallel to &lt;a href=&quot;#email.parser.BytesParser&quot;&gt;&lt;code&gt;BytesParser&lt;/code&gt;&lt;/a&gt;, but handles string input.</source>
          <target state="translated">此类与&lt;a href=&quot;#email.parser.BytesParser&quot;&gt; &lt;code&gt;BytesParser&lt;/code&gt; &lt;/a&gt;并行，但处理字符串输入。</target>
        </trans-unit>
        <trans-unit id="27e7cca9674c69cbae553d2787cd0068cccf6b1d" translate="yes" xml:space="preserve">
          <source>This class is rarely used as emitting a warning about a possible upcoming deprecation is unusual, and &lt;a href=&quot;#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; is preferred for already active deprecations.</source>
          <target state="translated">很少使用此类，因为发出关于可能即将发生的弃用的警告是不寻常的，并且对于已经处于活动状态的弃用，首选&lt;a href=&quot;#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d95705b4a873383b5806c6228d0f0b76c0192a86" translate="yes" xml:space="preserve">
          <source>This class is responsible for deciding whether each cookie should be accepted from / returned to the server.</source>
          <target state="translated">该类负责决定每个cookie是否应该从服务器接受/返回。</target>
        </trans-unit>
        <trans-unit id="3fa43e85129f543fb2802d9d69d28e5ae356d069" translate="yes" xml:space="preserve">
          <source>This class is the low-level building block of the module. It uses &lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt;&lt;code&gt;xml.parsers.expat&lt;/code&gt;&lt;/a&gt; for efficient, event-based parsing of XML. It can be fed XML data incrementally with the &lt;a href=&quot;#xml.etree.ElementTree.XMLParser.feed&quot;&gt;&lt;code&gt;feed()&lt;/code&gt;&lt;/a&gt; method, and parsing events are translated to a push API - by invoking callbacks on the &lt;em&gt;target&lt;/em&gt; object. If &lt;em&gt;target&lt;/em&gt; is omitted, the standard &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; is used. If &lt;em&gt;encoding&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id8&quot;&gt;1&lt;/a&gt; is given, the value overrides the encoding specified in the XML file.</source>
          <target state="translated">此类是模块的低级构建块。它使用&lt;a href=&quot;pyexpat#module-xml.parsers.expat&quot;&gt; &lt;code&gt;xml.parsers.expat&lt;/code&gt; &lt;/a&gt;进行有效的，基于事件的XML解析。可以使用&lt;a href=&quot;#xml.etree.ElementTree.XMLParser.feed&quot;&gt; &lt;code&gt;feed()&lt;/code&gt; &lt;/a&gt;方法以增量方式馈送XML数据，并将解析事件转换为推送API-通过在&lt;em&gt;目标&lt;/em&gt;对象上调用回调。如果省略&lt;em&gt;target&lt;/em&gt;，则使用标准&lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; &lt;/a&gt;。如果指定了&lt;em&gt;编码&lt;/em&gt;&lt;a href=&quot;#id9&quot; id=&quot;id8&quot;&gt;1&lt;/a&gt;，则该值将覆盖XML文件中指定的编码。</target>
        </trans-unit>
        <trans-unit id="a8d4e4a2b443c0328627e07d8942450df6f9acd5" translate="yes" xml:space="preserve">
          <source>This class is used to compile information about which tests have succeeded and which have failed.</source>
          <target state="translated">该类用于编译有关哪些测试成功,哪些测试失败的信息。</target>
        </trans-unit>
        <trans-unit id="19c6d25e7d0520fa3fa0d6f7f3496202c2b9609d" translate="yes" xml:space="preserve">
          <source>This class is used to declare a new Context Variable, e.g.:</source>
          <target state="translated">该类用于声明一个新的上下文变量,例如。</target>
        </trans-unit>
        <trans-unit id="ea543c836937291f06020a0688e606be1c234c21" translate="yes" xml:space="preserve">
          <source>This class is used to handle the HTTP requests that arrive at the server. By itself, it cannot respond to any actual HTTP requests; it must be subclassed to handle each request method (e.g. GET or POST). &lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt;&lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; provides a number of class and instance variables, and methods for use by subclasses.</source>
          <target state="translated">此类用于处理到达服务器的HTTP请求。就其本身而言，它无法响应任何实际的HTTP请求。必须将其子类化以处理每种请求方法（例如GET或POST）。&lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt; &lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt; &lt;/a&gt;提供了许多类和实例变量，以及供子类使用的方法。</target>
        </trans-unit>
        <trans-unit id="6403a1c9fef53db5449f8e3ec933899d44b75e13" translate="yes" xml:space="preserve">
          <source>This class is used to manipulate the style database.</source>
          <target state="translated">该类用于操作样式数据库。</target>
        </trans-unit>
        <trans-unit id="ae41f6c700530ae3123c6899bdeb790bf978c70d" translate="yes" xml:space="preserve">
          <source>This class is used to serve either files or output of CGI scripts from the current directory and below. Note that mapping HTTP hierarchic structure to local directory structure is exactly as in &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt;&lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此类用于从当前目录和下方提供文件或CGI脚本的输出。请注意，将HTTP层次结构映射到本地目录结构与&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler&quot;&gt; &lt;code&gt;SimpleHTTPRequestHandler&lt;/code&gt; 中的&lt;/a&gt;完全相同。</target>
        </trans-unit>
        <trans-unit id="d73a28b6898088641cae4d2fb4ef19cb14030dc9" translate="yes" xml:space="preserve">
          <source>This class may be initialized from bytes data (which may include NULs). The primary access to the content of a &lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt; object is provided by an attribute:</source>
          <target state="translated">此类可以从字节数据（可能包括NUL）初始化。通过属性提供对&lt;a href=&quot;#xmlrpc.client.Binary&quot;&gt; &lt;code&gt;Binary&lt;/code&gt; &lt;/a&gt;对象内容的主要访问：</target>
        </trans-unit>
        <trans-unit id="e153045d5ef230e03be4d8fd269f06139bac488b" translate="yes" xml:space="preserve">
          <source>This class may be initialized with seconds since the epoch, a time tuple, an ISO 8601 time/date string, or a &lt;a href=&quot;datetime#datetime.datetime&quot;&gt;&lt;code&gt;datetime.datetime&lt;/code&gt;&lt;/a&gt; instance. It has the following methods, supported mainly for internal use by the marshalling/unmarshalling code:</source>
          <target state="translated">可以使用从纪元开始的秒数，时间元组，ISO 8601时间/日期字符串或&lt;a href=&quot;datetime#datetime.datetime&quot;&gt; &lt;code&gt;datetime.datetime&lt;/code&gt; &lt;/a&gt;实例初始化此类。它具有以下方法，编组/解组代码主要支持内部使用：</target>
        </trans-unit>
        <trans-unit id="e518e965c65cd6eb618dfd9b0ac0288dcc5ef8d9" translate="yes" xml:space="preserve">
          <source>This class may include information about the public identifier, system identifier, byte stream (possibly with character encoding information) and/or the character stream of an entity.</source>
          <target state="translated">该类可包括关于公共标识符、系统标识符、字节流(可能带有字符编码信息)和/或实体的字符流的信息。</target>
        </trans-unit>
        <trans-unit id="274d480a865d7adb6c54dc75d212c4d48857918f" translate="yes" xml:space="preserve">
          <source>This class method constructs a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; representing the exact value of &lt;em&gt;dec&lt;/em&gt;, which must be a &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">此类方法构造一个表示&lt;em&gt;dec&lt;/em&gt;精确值的&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;该值必须是一个&lt;a href=&quot;decimal#decimal.Decimal&quot;&gt; &lt;code&gt;decimal.Decimal&lt;/code&gt; &lt;/a&gt;实例。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3fd368dae9da5194b728f020cb469d8249732946" translate="yes" xml:space="preserve">
          <source>This class method constructs a &lt;a href=&quot;#fractions.Fraction&quot;&gt;&lt;code&gt;Fraction&lt;/code&gt;&lt;/a&gt; representing the exact value of &lt;em&gt;flt&lt;/em&gt;, which must be a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. Beware that &lt;code&gt;Fraction.from_float(0.3)&lt;/code&gt; is not the same value as &lt;code&gt;Fraction(3, 10)&lt;/code&gt;.</source>
          <target state="translated">此类方法构造一个&lt;a href=&quot;#fractions.Fraction&quot;&gt; &lt;code&gt;Fraction&lt;/code&gt; &lt;/a&gt;，该分数表示&lt;em&gt;flt&lt;/em&gt;的确切值，该值必须是&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;。要注意的是 &lt;code&gt;Fraction.from_float(0.3)&lt;/code&gt; 是不一样的值作为 &lt;code&gt;Fraction(3, 10)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c95eb91a808c54e72687a20b7b718fbb74eea5b6" translate="yes" xml:space="preserve">
          <source>This class method is not implemented for &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;#collections.Counter&quot;&gt; &lt;code&gt;Counter&lt;/code&gt; &lt;/a&gt;对象未实现此类方法。</target>
        </trans-unit>
        <trans-unit id="748288d24682412f0009c250de2e85bbeb99569b" translate="yes" xml:space="preserve">
          <source>This class provides &lt;a href=&quot;#modulefinder.ModuleFinder.run_script&quot;&gt;&lt;code&gt;run_script()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#modulefinder.ModuleFinder.report&quot;&gt;&lt;code&gt;report()&lt;/code&gt;&lt;/a&gt; methods to determine the set of modules imported by a script. &lt;em&gt;path&lt;/em&gt; can be a list of directories to search for modules; if not specified, &lt;code&gt;sys.path&lt;/code&gt; is used. &lt;em&gt;debug&lt;/em&gt; sets the debugging level; higher values make the class print debugging messages about what it&amp;rsquo;s doing. &lt;em&gt;excludes&lt;/em&gt; is a list of module names to exclude from the analysis. &lt;em&gt;replace_paths&lt;/em&gt; is a list of &lt;code&gt;(oldpath, newpath)&lt;/code&gt; tuples that will be replaced in module paths.</source>
          <target state="translated">此类提供&lt;a href=&quot;#modulefinder.ModuleFinder.run_script&quot;&gt; &lt;code&gt;run_script()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#modulefinder.ModuleFinder.report&quot;&gt; &lt;code&gt;report()&lt;/code&gt; &lt;/a&gt;方法来确定脚本导入的模块集。&lt;em&gt;path&lt;/em&gt;可以是用于搜索模块的目录列表；如果未指定，则使用 &lt;code&gt;sys.path&lt;/code&gt; 。&lt;em&gt;debug&lt;/em&gt;设置调试级别；较高的值使类打印有关其操作的调试消息。&lt;em&gt;excludes&lt;/em&gt;是要从分析中排除的模块名称的列表。&lt;em&gt;replace_paths&lt;/em&gt;是将在模块路径中替换的 &lt;code&gt;(oldpath, newpath)&lt;/code&gt; 路径，新路径）元组的列表。</target>
        </trans-unit>
        <trans-unit id="d834a754ee71425bdd757a24acd21616bac9cee6" translate="yes" xml:space="preserve">
          <source>This class provides a simple synchronization primitive for use by a fixed number of threads that need to wait for each other. Each of the threads tries to pass the barrier by calling the &lt;a href=&quot;#threading.Barrier.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; method and will block until all of the threads have made their &lt;a href=&quot;#threading.Barrier.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; calls. At this point, the threads are released simultaneously.</source>
          <target state="translated">此类提供了一个简单的同步原语，供需要互相等待的固定数量的线程使用。每个线程都试图通过调用&lt;a href=&quot;#threading.Barrier.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;方法来越过障碍，并且将阻塞直到所有线程都进行了&lt;a href=&quot;#threading.Barrier.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;调用。此时，线程将同时释放。</target>
        </trans-unit>
        <trans-unit id="08dad0580cbeaccad622fabb4161de4b7fe561bf" translate="yes" xml:space="preserve">
          <source>This class provides an API similar to &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; and also accepts coroutines as test functions.</source>
          <target state="translated">此类提供类似于&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;的API，并且也接受协程作为测试函数。</target>
        </trans-unit>
        <trans-unit id="c276e1c0e7d656e7cea1025636063d50ff0ad285" translate="yes" xml:space="preserve">
          <source>This class provides empty abstract implementations for many methods that derived classes can override selectively; the default implementations represent a file that cannot be read, written or seeked.</source>
          <target state="translated">该类为许多方法提供了空的抽象实现,派生类可以有选择地重载这些方法;默认的实现代表了一个不能读、写、寻的文件。</target>
        </trans-unit>
        <trans-unit id="d70311a21c8bcd74dcf12663d62377b18ed78824" translate="yes" xml:space="preserve">
          <source>This class provides information about the requirements imposed on email for a specific character set. It also provides convenience routines for converting between character sets, given the availability of the applicable codecs. Given a character set, it will do its best to provide information on how to use that character set in an email message in an RFC-compliant way.</source>
          <target state="translated">该类提供了有关电子邮件对特定字符集的要求的信息。考虑到适用的编解码器的可用性,它还提供了在字符集之间转换的方便例程。给定一个字符集,它将尽力提供如何在电子邮件中以符合RFC的方式使用该字符集的信息。</target>
        </trans-unit>
        <trans-unit id="ea7cddb548da1e6410ebeae8791fca85fc47a9ba" translate="yes" xml:space="preserve">
          <source>This class provides methods for creating and returning &lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; instances and for creating a list-like object (&lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.ShareableList&quot;&gt;&lt;code&gt;ShareableList&lt;/code&gt;&lt;/a&gt;) backed by shared memory.</source>
          <target state="translated">此类提供了用于创建和返回&lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;实例以及创建由共享内存支持的类似列表的对象（&lt;a href=&quot;#multiprocessing.managers.SharedMemoryManager.ShareableList&quot;&gt; &lt;code&gt;ShareableList&lt;/code&gt; &lt;/a&gt;）的方法。</target>
        </trans-unit>
        <trans-unit id="193f5372ace98009161fcd09d57d781b73d181ef" translate="yes" xml:space="preserve">
          <source>This class provides methods to read, parse and answer questions about the &lt;code&gt;robots.txt&lt;/code&gt; file at &lt;em&gt;url&lt;/em&gt;.</source>
          <target state="translated">此类提供了一些方法，可以读取，解析和回答有关&lt;em&gt;url上&lt;/em&gt;的 &lt;code&gt;robots.txt&lt;/code&gt; 文件的问题。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6028a52d014cdefa926e7af0fc1f466c66ee3def" translate="yes" xml:space="preserve">
          <source>This class represents Netscape, &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies. It is not expected that users of &lt;a href=&quot;#module-http.cookiejar&quot;&gt;&lt;code&gt;http.cookiejar&lt;/code&gt;&lt;/a&gt; construct their own &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instances. Instead, if necessary, call &lt;code&gt;make_cookies()&lt;/code&gt; on a &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">此类表示Netscape，&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookie。不应期望&lt;a href=&quot;#module-http.cookiejar&quot;&gt; &lt;code&gt;http.cookiejar&lt;/code&gt; 的&lt;/a&gt;用户构造自己的&lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt; &lt;code&gt;Cookie&lt;/code&gt; &lt;/a&gt;实例。相反，如有必要，请在&lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt; &lt;code&gt;CookieJar&lt;/code&gt; &lt;/a&gt;实例上调用 &lt;code&gt;make_cookies()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3fd2d200eb5006dc61a4b31bac6c557561c951b" translate="yes" xml:space="preserve">
          <source>This class represents a MIME-types database. By default, it provides access to the same database as the rest of this module. The initial database is a copy of that provided by the module, and may be extended by loading additional &lt;code&gt;mime.types&lt;/code&gt;-style files into the database using the &lt;a href=&quot;#mimetypes.MimeTypes.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt; methods. The mapping dictionaries may also be cleared before loading additional data if the default data is not desired.</source>
          <target state="translated">此类表示MIME类型数据库。默认情况下，它提供对与此模块其余部分相同数据库的访问。初始数据库是该模块提供的数据库的副本，可以通过使用&lt;a href=&quot;#mimetypes.MimeTypes.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; &lt;/a&gt;方法将其他 &lt;code&gt;mime.types&lt;/code&gt; 样式的文件加载到数据库中来进行扩展。如果不需要默认数据，则在加载其他数据之前也可以清除映射字典。</target>
        </trans-unit>
        <trans-unit id="a16f2fa4e9ca1f4b04f678175a55e8942c49241a" translate="yes" xml:space="preserve">
          <source>This class represents a subpart of a MIME message. It is identical to &lt;a href=&quot;#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt;, except that no &lt;em&gt;MIME-Version&lt;/em&gt; headers are added when &lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; is called, since sub-parts do not need their own &lt;em&gt;MIME-Version&lt;/em&gt; headers.</source>
          <target state="translated">此类表示MIME消息的子部分。它与&lt;a href=&quot;#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;相同，除了在&lt;a href=&quot;#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;时不添加&lt;em&gt;MIME版本&lt;/em&gt;标头，因为子部分不需要它们自己的&lt;em&gt;MIME版本&lt;/em&gt;标头。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="22f8e65bf7b5a8eada37fbd323ba83523d329661" translate="yes" xml:space="preserve">
          <source>This class represents an action that should be run only after a certain amount of time has passed &amp;mdash; a timer. &lt;a href=&quot;#threading.Timer&quot;&gt;&lt;code&gt;Timer&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#threading.Thread&quot;&gt;&lt;code&gt;Thread&lt;/code&gt;&lt;/a&gt; and as such also functions as an example of creating custom threads.</source>
          <target state="translated">此类表示仅在经过一定时间后才应执行的操作-计时器。&lt;a href=&quot;#threading.Timer&quot;&gt; &lt;code&gt;Timer&lt;/code&gt; &lt;/a&gt;是&lt;a href=&quot;#threading.Thread&quot;&gt; &lt;code&gt;Thread&lt;/code&gt; &lt;/a&gt;的子类，因此也可以用作创建自定义线程的示例。</target>
        </trans-unit>
        <trans-unit id="932c82e2e83abbd41e3929520e8f112fd5c73fbd" translate="yes" xml:space="preserve">
          <source>This class represents an aggregation of individual test cases and test suites. The class presents the interface needed by the test runner to allow it to be run as any other test case. Running a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; instance is the same as iterating over the suite, running each test individually.</source>
          <target state="translated">此类表示各个测试用例和测试套件的集合。该类提供测试运行程序所需的接口，以使其能够像其他任何测试用例一样运行。运行&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;实例与遍历套件（分别运行每个测试）相同。</target>
        </trans-unit>
        <trans-unit id="29e097cd340803b24a612fe148a5a39528edd250" translate="yes" xml:space="preserve">
          <source>This class represents tunable scheduling parameters used in &lt;a href=&quot;#os.sched_setparam&quot;&gt;&lt;code&gt;sched_setparam()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.sched_setscheduler&quot;&gt;&lt;code&gt;sched_setscheduler()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.sched_getparam&quot;&gt;&lt;code&gt;sched_getparam()&lt;/code&gt;&lt;/a&gt;. It is immutable.</source>
          <target state="translated">此类表示在&lt;a href=&quot;#os.sched_setparam&quot;&gt; &lt;code&gt;sched_setparam()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.sched_setscheduler&quot;&gt; &lt;code&gt;sched_setscheduler()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.sched_getparam&quot;&gt; &lt;code&gt;sched_getparam()&lt;/code&gt; 中&lt;/a&gt;使用的可调调度参数。这是一成不变的。</target>
        </trans-unit>
        <trans-unit id="73e7a16f5e1d0b8f46a771fc3488a73fef21a8e9" translate="yes" xml:space="preserve">
          <source>This class serves files from the current directory and below, directly mapping the directory structure to HTTP requests.</source>
          <target state="translated">该类服务于当前目录及以下的文件,直接将目录结构映射为HTTP请求。</target>
        </trans-unit>
        <trans-unit id="8f4d59250a2949ebcdb2c5415b61ebd0d2b8d4b7" translate="yes" xml:space="preserve">
          <source>This class takes care of the details of the trace facility; a derived class should implement user interaction. The standard debugger class (&lt;a href=&quot;pdb#pdb.Pdb&quot;&gt;&lt;code&gt;pdb.Pdb&lt;/code&gt;&lt;/a&gt;) is an example.</source>
          <target state="translated">此类负责跟踪工具的详细信息。派生类应实现用户交互。标准调试器类（&lt;a href=&quot;pdb#pdb.Pdb&quot;&gt; &lt;code&gt;pdb.Pdb&lt;/code&gt; &lt;/a&gt;）是一个示例。</target>
        </trans-unit>
        <trans-unit id="f37ba959190077672d1f15b3db66d2d7d1c6ff73" translate="yes" xml:space="preserve">
          <source>This class&amp;rsquo;s functionality requires a functioning shared semaphore implementation on the host operating system. Without one, the functionality in this class will be disabled, and attempts to instantiate a &lt;a href=&quot;#multiprocessing.Queue&quot;&gt;&lt;code&gt;Queue&lt;/code&gt;&lt;/a&gt; will result in an &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;https://bugs.python.org/issue3770&quot;&gt;bpo-3770&lt;/a&gt; for additional information. The same holds true for any of the specialized queue types listed below.</source>
          <target state="translated">此类的功能需要在主机操作系统上正常运行的共享信号量实现。没有一个，该类中的功能将被禁用，尝试实例化&lt;a href=&quot;#multiprocessing.Queue&quot;&gt; &lt;code&gt;Queue&lt;/code&gt; &lt;/a&gt;会导致&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;。有关其他信息，请参见&lt;a href=&quot;https://bugs.python.org/issue3770&quot;&gt;bpo-3770&lt;/a&gt;。对于以下列出的任何专用队列类型，这同样适用。</target>
        </trans-unit>
        <trans-unit id="a41d8654ea90612b336c64ac521c0b59963c7ad7" translate="yes" xml:space="preserve">
          <source>This client which interacts with the demo XMLRPC server can be invoked as:</source>
          <target state="translated">这个与演示XMLRPC服务器交互的客户端可以被调用为。</target>
        </trans-unit>
        <trans-unit id="d83a870c39ddf30740d2e358c4cdbc65c6a91d89" translate="yes" xml:space="preserve">
          <source>This closes the database connection. Note that this does not automatically call &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt;. If you just close your database connection without calling &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt; first, your changes will be lost!</source>
          <target state="translated">这将关闭数据库连接。请注意，这不会自动调用&lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt;。如果只关闭数据库连接而没有先调用&lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt;，则更改将丢失！</target>
        </trans-unit>
        <trans-unit id="b748ec83f84e7fc5c00bf2adb54dcda5003a9203" translate="yes" xml:space="preserve">
          <source>This code is actually automatically run when Python is run in &lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt; (see &lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline configuration&lt;/a&gt;).</source>
          <target state="translated">当Python以&lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;交互模式&lt;/a&gt;运行时，该代码实际上会自动运行（请参阅&lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline配置&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f5c07d22b235c3ab30af3ac6e65afbc6f9fe2d6d" translate="yes" xml:space="preserve">
          <source>This code is actually automatically run when Python is run in &lt;a href=&quot;https://docs.python.org/3.9/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt; (see &lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline configuration&lt;/a&gt;).</source>
          <target state="translated">当Python以&lt;a href=&quot;https://docs.python.org/3.9/tutorial/interpreter.html#tut-interactive&quot;&gt;交互模式&lt;/a&gt;运行时，该代码实际上会自动运行（请参阅&lt;a href=&quot;site#rlcompleter-config&quot;&gt;Readline配置&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="188ba6fbc8e6fe291e33a72f0675afd9594eb52a" translate="yes" xml:space="preserve">
          <source>This code is equivalent to:</source>
          <target state="translated">这个代码相当于:</target>
        </trans-unit>
        <trans-unit id="20b1f6a9a16308d3cf1b57b7bfba034f0203ec1e" translate="yes" xml:space="preserve">
          <source>This code is exactly equivalent to the first example. Be sure to give the additional functions the same name as the original property (&lt;code&gt;x&lt;/code&gt; in this case.)</source>
          <target state="translated">此代码与第一个示例完全等效。确保为附加功能赋予与原始属性相同的名称（在这种情况下为 &lt;code&gt;x&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7a72ea94a4bab4b14c20d25cdf441f6b5ef6aabf" translate="yes" xml:space="preserve">
          <source>This code pattern allows the testing suite to be run by &lt;code&gt;test.regrtest&lt;/code&gt;, on its own as a script that supports the &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; CLI, or via the &lt;code&gt;python -m unittest&lt;/code&gt; CLI.</source>
          <target state="translated">此代码模式允许测试套件由 &lt;code&gt;test.regrtest&lt;/code&gt; 单独运行，作为支持&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt; CLI 的脚本运行，也可以通过 &lt;code&gt;python -m unittest&lt;/code&gt; CLI运行。</target>
        </trans-unit>
        <trans-unit id="754e9cb8c3e6e8e331a6ffc92da78e28bd75069a" translate="yes" xml:space="preserve">
          <source>This code was contributed by Lance Ellinghouse, and modified by Jack Jansen.</source>
          <target state="translated">该代码由Lance Ellinghouse贡献,Jack Jansen修改。</target>
        </trans-unit>
        <trans-unit id="7cc17a1a45954846e0e7ca436ab70cd34d59503c" translate="yes" xml:space="preserve">
          <source>This command can return very large results, especially if &lt;em&gt;group_pattern&lt;/em&gt; is not specified. It is best to cache the results offline unless you really need to refresh them.</source>
          <target state="translated">该命令可以返回非常大的结果，尤其是在未指定&lt;em&gt;group_pattern的&lt;/em&gt;情况下。除非您确实需要刷新结果，否则最好将结果离线保存。</target>
        </trans-unit>
        <trans-unit id="0eb035f79d945c28dca579096d5869dcd935eb24" translate="yes" xml:space="preserve">
          <source>This command is frequently disabled by NNTP server administrators.</source>
          <target state="translated">这个命令经常被NNTP服务器管理员禁用。</target>
        </trans-unit>
        <trans-unit id="5dbea069ae4115ecbc17706143c788302a103ca5" translate="yes" xml:space="preserve">
          <source>This common limitation means that it is generally advisable to create context managers directly in the header of the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement where they are used (as shown in all of the usage examples above).</source>
          <target state="translated">这个共同的限制意味着通常建议直接在使用上下文的&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的标题中直接创建上下文管理器（如上述所有用法示例所示）。</target>
        </trans-unit>
        <trans-unit id="7714c77ded18400f3429fbbd721ee6fd52039336" translate="yes" xml:space="preserve">
          <source>This common limitation means that it is generally advisable to create context managers directly in the header of the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement where they are used (as shown in all of the usage examples above).</source>
          <target state="translated">这个共同的限制意味着通常建议直接在使用&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; 的&lt;/a&gt;语句的标题中直接创建上下文管理器（如上面所有用法示例所示）。</target>
        </trans-unit>
        <trans-unit id="61c2e658f60d1390cfe7ca8803a3ad8e80e90d95" translate="yes" xml:space="preserve">
          <source>This concrete &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; is the backward compatibility policy. It replicates the behavior of the email package in Python 3.2. The &lt;a href=&quot;#module-email.policy&quot;&gt;&lt;code&gt;policy&lt;/code&gt;&lt;/a&gt; module also defines an instance of this class, &lt;a href=&quot;#email.policy.compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt;, that is used as the default policy. Thus the default behavior of the email package is to maintain compatibility with Python 3.2.</source>
          <target state="translated">此具体&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;是向后兼容策略。它复制了Python 3.2中电子邮件包的行为。该&lt;a href=&quot;#module-email.policy&quot;&gt; &lt;code&gt;policy&lt;/code&gt; &lt;/a&gt;模块还定义了这个类的一个实例&lt;a href=&quot;#email.policy.compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt;，被用作默认策略。因此，电子邮件软件包的默认行为是保持与Python 3.2的兼容性。</target>
        </trans-unit>
        <trans-unit id="92d19da16d5a8553c7cb7e0f68f04a827f9e7f61" translate="yes" xml:space="preserve">
          <source>This concrete &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; provides behavior that is intended to be fully compliant with the current email RFCs. These include (but are not limited to) &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;, and the current MIME RFCs.</source>
          <target state="translated">该具体&lt;a href=&quot;#email.policy.Policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;提供了旨在完全符合当前电子邮件RFC的行为。这些包括（但不限于）&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;和当前的MIME RFC。</target>
        </trans-unit>
        <trans-unit id="80e6fc8925c6c5e7eaca5a6ad0a4fd81fd994085" translate="yes" xml:space="preserve">
          <source>This constant contains a boolean value which indicates if IPv6 is supported on this platform.</source>
          <target state="translated">这个常量包含一个布尔值,表示这个平台是否支持IPv6。</target>
        </trans-unit>
        <trans-unit id="3e2858f91cb9186fa1ca376fd637bf7c9e6e52d8" translate="yes" xml:space="preserve">
          <source>This constant is documented in the Linux documentation.</source>
          <target state="translated">这个常量在Linux文档中有所记载。</target>
        </trans-unit>
        <trans-unit id="fe32614311b23ebbbdfc9132f699e5b6f9f4ab2e" translate="yes" xml:space="preserve">
          <source>This constant is meant to be used with the &lt;em&gt;detect_types&lt;/em&gt; parameter of the &lt;a href=&quot;#sqlite3.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">该常数应与&lt;a href=&quot;#sqlite3.connect&quot;&gt; &lt;code&gt;connect()&lt;/code&gt; &lt;/a&gt;函数的&lt;em&gt;detect_types&lt;/em&gt;参数一起使用。</target>
        </trans-unit>
        <trans-unit id="85870d23cfed7a7265f4ba24695196830564152b" translate="yes" xml:space="preserve">
          <source>This constant is true if Python was not started with an &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; option. See also the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">如果Python没有以&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;选项启动，则此常量为true 。另请参见&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt;语句。</target>
        </trans-unit>
        <trans-unit id="7d8b43bae2d97d139786cacb0a8c20081186d79f" translate="yes" xml:space="preserve">
          <source>This constant is true if Python was not started with an &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; option. See also the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">如果Python没有以&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#cmdoption-o&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;选项启动，则此常数为true 。另请参见&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#assert&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt;语句。</target>
        </trans-unit>
        <trans-unit id="8db8774c7221bac7ad7292b78b6b055382d44cb4" translate="yes" xml:space="preserve">
          <source>This constraint can be eschewed if both the &lt;em&gt;provider&lt;/em&gt; (the implementation of the object types to be transferred) and the &lt;em&gt;consumer&lt;/em&gt; (the implementation of the communications system) support the out-of-band transfer facilities provided by pickle protocol 5 and higher.</source>
          <target state="translated">如果&lt;em&gt;提供者&lt;/em&gt;（要传输的对象类型的实现）和&lt;em&gt;消费者&lt;/em&gt;（通信系统的实现）都支持泡菜协议5和更高版本提供的带外传输功能，则可以避免此约束。</target>
        </trans-unit>
        <trans-unit id="e50b3a4fe127122b1c1be9fb32f8d7c4e9891d68" translate="yes" xml:space="preserve">
          <source>This constructor should always be called with keyword arguments. Arguments are:</source>
          <target state="translated">这个构造函数在调用时一定要使用关键字参数。参数有:</target>
        </trans-unit>
        <trans-unit id="eee83f35dcf09cd6810b2ed6630fade00f668e02" translate="yes" xml:space="preserve">
          <source>This content manager provides only a minimum interface beyond that provided by &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; itself: it deals only with text, raw byte strings, and &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; objects. Nevertheless, it provides significant advantages compared to the base API: &lt;code&gt;get_content&lt;/code&gt; on a text part will return a unicode string without the application needing to manually decode it, &lt;code&gt;set_content&lt;/code&gt; provides a rich set of options for controlling the headers added to a part and controlling the content transfer encoding, and it enables the use of the various &lt;code&gt;add_&lt;/code&gt; methods, thereby simplifying the creation of multipart messages.</source>
          <target state="translated">该内容管理器仅提供了&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;本身不提供的最小接口：它仅处理文本，原始字节字符串和&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;对象。但是，与基本API相比，它提供了显着的优势：文本部分上的 &lt;code&gt;get_content&lt;/code&gt; 将返回unicode字符串，而应用程序无需手动对其进行解码， &lt;code&gt;set_content&lt;/code&gt; 提供了丰富的选项集，用于控制添加到部件的标头和控制内容传输编码，并且可以使用各种 &lt;code&gt;add_&lt;/code&gt; 方法，从而简化了多部分消息的创建。</target>
        </trans-unit>
        <trans-unit id="e3f7dceef060c97974b4e4226c16041d9314af78" translate="yes" xml:space="preserve">
          <source>This context is most useful in multi-threaded environments. Changing one of the fields before threads are started has the effect of setting system-wide defaults. Changing the fields after threads have started is not recommended as it would require thread synchronization to prevent race conditions.</source>
          <target state="translated">这个上下文在多线程环境中最有用。在线程启动前更改其中一个字段,会产生设置全系统默认值的效果。不建议在线程启动后更改字段,因为这将需要线程同步以防止出现竞赛条件。</target>
        </trans-unit>
        <trans-unit id="056192954bc171b8b9375158ba2f55065c788c8e" translate="yes" xml:space="preserve">
          <source>This context is used by the &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; constructor as a prototype for new contexts. Changing a field (such a precision) has the effect of changing the default for new contexts created by the &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;构造函数将此上下文用作新上下文的原型。更改字段（这样的精度）具有更改由&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;构造函数创建的新上下文的默认值的作用。</target>
        </trans-unit>
        <trans-unit id="adfa9fe3b0226da7aaf4ee9312f722dce55e612a" translate="yes" xml:space="preserve">
          <source>This context manager is &lt;a href=&quot;#reentrant-cms&quot;&gt;reentrant&lt;/a&gt;.</source>
          <target state="translated">此上下文管理器是&lt;a href=&quot;#reentrant-cms&quot;&gt;可重入的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="587a63de629bfa8dd59dc368a12d35c0c91ebfc9" translate="yes" xml:space="preserve">
          <source>This convenience is provided to encourage &lt;a href=&quot;#module-shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; users to generate error messages in the standard, parseable format understood by Emacs and other Unix tools.</source>
          <target state="translated">提供此便利是为了鼓励&lt;a href=&quot;#module-shlex&quot;&gt; &lt;code&gt;shlex&lt;/code&gt; &lt;/a&gt;用户以Emacs和其他Unix工具理解的标准可解析格式生成错误消息。</target>
        </trans-unit>
        <trans-unit id="812edcca58e65f791d72238eb59be8a7fc8c8bb3" translate="yes" xml:space="preserve">
          <source>This copy is done without the additional cost of transferring data from the kernel to user space and then back into the kernel. Additionally, some filesystems could implement extra optimizations. The copy is done as if both files are opened as binary.</source>
          <target state="translated">这种复制是在没有额外的成本的情况下完成的,即把数据从内核传送到用户空间,然后再传送回内核。此外,一些文件系统可以实现额外的优化。复制的过程就像两个文件都是以二进制方式打开一样。</target>
        </trans-unit>
        <trans-unit id="fbdd11eca1826383b7073d5d09e2477fe27a9fdc" translate="yes" xml:space="preserve">
          <source>This coroutine function is primarily intended to be used for executing IO-bound functions/methods that would otherwise block the event loop if they were ran in the main thread. For example:</source>
          <target state="translated">这个coroutine函数主要用于执行IO绑定的函数/方法,否则这些函数/方法如果在主线程中运行,就会阻塞事件循环。例如</target>
        </trans-unit>
        <trans-unit id="951c20bdc9ca8ee62daa8ad49c6f7fb15c561414" translate="yes" xml:space="preserve">
          <source>This decorator enables legacy generator-based coroutines to be compatible with async/await code:</source>
          <target state="translated">该装饰器使基于生成器的传统coroutine能够与async/await代码兼容。</target>
        </trans-unit>
        <trans-unit id="9992dac3f3dff13b2f0ac6d879fbe3eae7add96f" translate="yes" xml:space="preserve">
          <source>This decorator is itself not available at runtime. It is mainly intended to mark classes that are defined in type stub files if an implementation returns an instance of a private class:</source>
          <target state="translated">这个装饰器本身在运行时是不可用的。它主要是用来标记在类型存根文件中定义的类,如果一个实现返回一个私有类的实例。</target>
        </trans-unit>
        <trans-unit id="fc1ff93c67faa61e74eb3e2bda4297a01530896c" translate="yes" xml:space="preserve">
          <source>This decorator requires that the &lt;code&gt;__dict__&lt;/code&gt; attribute on each instance be a mutable mapping. This means it will not work with some types, such as metaclasses (since the &lt;code&gt;__dict__&lt;/code&gt; attributes on type instances are read-only proxies for the class namespace), and those that specify &lt;code&gt;__slots__&lt;/code&gt; without including &lt;code&gt;__dict__&lt;/code&gt; as one of the defined slots (as such classes don&amp;rsquo;t provide a &lt;code&gt;__dict__&lt;/code&gt; attribute at all).</source>
          <target state="translated">该装饰器要求每个实例上的 &lt;code&gt;__dict__&lt;/code&gt; 属性是可变映射。这意味着它不适用于某些类型，例如元类（因为类型实例的 &lt;code&gt;__dict__&lt;/code&gt; 属性是类命名空间的只读代理），以及那些指定 &lt;code&gt;__slots__&lt;/code&gt; 而不将 &lt;code&gt;__dict__&lt;/code&gt; 作为定义的插槽之一的类（例如此类）根本不提供 &lt;code&gt;__dict__&lt;/code&gt; 属性）。</target>
        </trans-unit>
        <trans-unit id="c300d0d694010854de5f7492ad74271773977803" translate="yes" xml:space="preserve">
          <source>This decorator should not be used for &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; coroutines.</source>
          <target state="translated">此装饰器不应用于&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;协程。</target>
        </trans-unit>
        <trans-unit id="93cd9b064734dee81aa3a32c5926879d8b2b0c06" translate="yes" xml:space="preserve">
          <source>This decorator should not be used for &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; coroutines.</source>
          <target state="translated">此装饰器不应用于&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;协程。</target>
        </trans-unit>
        <trans-unit id="3b7ac610500209606a0a0139f3b647a4e463cfcb" translate="yes" xml:space="preserve">
          <source>This default value for the &lt;em&gt;policy&lt;/em&gt; keyword to &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; is the &lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; policy, via its pre-defined instance &lt;a href=&quot;#email.policy.default&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过预定义实例&lt;a href=&quot;#email.policy.default&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;policy&lt;/em&gt;关键字的默认值是&lt;a href=&quot;#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; &lt;/a&gt;策略。</target>
        </trans-unit>
        <trans-unit id="e21702e7206b1540ec13499c73a1d346fc076d6f" translate="yes" xml:space="preserve">
          <source>This defaults to &lt;code&gt;['/cgi-bin', '/htbin']&lt;/code&gt; and describes directories to treat as containing CGI scripts.</source>
          <target state="translated">默认为 &lt;code&gt;['/cgi-bin', '/htbin']&lt;/code&gt; 并描述要包含CGI脚本的目录。</target>
        </trans-unit>
        <trans-unit id="b5df6ab6eb381dc8f1c26576661cf9cf458d811a" translate="yes" xml:space="preserve">
          <source>This demonstrates how similar derived enumerations can be defined; for example a &lt;code&gt;StrEnum&lt;/code&gt; that mixes in &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这说明了如何定义相似的派生枚举。例如，一个 &lt;code&gt;StrEnum&lt;/code&gt; 混合了&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85da0637f33c740513754e7c543cab4e3c5fd9df" translate="yes" xml:space="preserve">
          <source>This dictionary can be used as argument for a subsequent call to &lt;a href=&quot;#turtle.pen&quot;&gt;&lt;code&gt;pen()&lt;/code&gt;&lt;/a&gt; to restore the former pen-state. Moreover one or more of these attributes can be provided as keyword-arguments. This can be used to set several pen attributes in one statement.</source>
          <target state="translated">该字典可用作后续调用&lt;a href=&quot;#turtle.pen&quot;&gt; &lt;code&gt;pen()&lt;/code&gt; 的&lt;/a&gt;参数，以恢复以前的笔状态。此外，这些属性中的一个或多个可以作为关键字参数提供。可用于在一个语句中设置多个笔属性。</target>
        </trans-unit>
        <trans-unit id="ce89b5732743cb6bcf141dd8012b3ff6141f9e13" translate="yes" xml:space="preserve">
          <source>This dictionary maps the HTTP 1.1 status codes to the W3C names.</source>
          <target state="translated">这个字典将HTTP 1.1状态码映射到W3C名称。</target>
        </trans-unit>
        <trans-unit id="9ddd1f324c17578c73e1a32273ebd7f0cdc6accd" translate="yes" xml:space="preserve">
          <source>This differs from the behaviour of &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; where SIGINT will be ignored while the equivalent blocking calls are in progress.</source>
          <target state="translated">这与&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;行为不同，在这种行为中，当进行等效的阻塞调用时，将忽略SIGINT。</target>
        </trans-unit>
        <trans-unit id="3068ba406f985162f6ef582ac392d3ccc0bfca5a" translate="yes" xml:space="preserve">
          <source>This document describes the behavior under the default (for &lt;a href=&quot;#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;) policy &lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt;&lt;code&gt;Compat32&lt;/code&gt;&lt;/a&gt;. If you are going to use another policy, you should be using the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class instead.</source>
          <target state="translated">本文档介绍默认（针对&lt;a href=&quot;#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;）策略&lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt; &lt;code&gt;Compat32&lt;/code&gt; &lt;/a&gt;下的行为。如果要使用其他策略，则应改用&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="32a3cafdce538e5b18df61742dfb8d4b171f69c3" translate="yes" xml:space="preserve">
          <source>This document explains how the theme engine works</source>
          <target state="translated">本文档解释了主题引擎如何工作</target>
        </trans-unit>
        <trans-unit id="6ea1780a291c39bade61c609ec38121b00edd92b" translate="yes" xml:space="preserve">
          <source>This documentation page contains the following sections:</source>
          <target state="translated">本文档页包含以下部分。</target>
        </trans-unit>
        <trans-unit id="4f3cd91e868bb20379048d1e01a95c878e0816d7" translate="yes" xml:space="preserve">
          <source>This documentation page covers both &lt;a href=&quot;#transports&quot;&gt;Transports&lt;/a&gt; and &lt;a href=&quot;#protocols&quot;&gt;Protocols&lt;/a&gt;.</source>
          <target state="translated">本文档页面涵盖了&lt;a href=&quot;#transports&quot;&gt;传输&lt;/a&gt;和&lt;a href=&quot;#protocols&quot;&gt;协议&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92bab0d11dc1fe34db31a7fa119d6a0aad2dfb5b" translate="yes" xml:space="preserve">
          <source>This does &lt;em&gt;not&lt;/em&gt; support parsing arbitrary ISO 8601 strings - it is only intended as the inverse operation of &lt;a href=&quot;#datetime.datetime.isoformat&quot;&gt;&lt;code&gt;datetime.isoformat()&lt;/code&gt;&lt;/a&gt;. A more full-featured ISO 8601 parser, &lt;code&gt;dateutil.parser.isoparse&lt;/code&gt; is available in the third-party package &lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/parser.html#dateutil.parser.isoparse&quot;&gt;dateutil&lt;/a&gt;.</source>
          <target state="translated">这并&lt;em&gt;不能&lt;/em&gt;支持解析任意ISO 8601字符串-它仅作为的逆运算&lt;a href=&quot;#datetime.datetime.isoformat&quot;&gt; &lt;code&gt;datetime.isoformat()&lt;/code&gt; &lt;/a&gt;。更全功能的ISO 8601的解析器， &lt;code&gt;dateutil.parser.isoparse&lt;/code&gt; 是在第三方封装&lt;a href=&quot;https://dateutil.readthedocs.io/en/stable/parser.html#dateutil.parser.isoparse&quot;&gt;dateutil&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d39cfcf67975976ed6d0852105f14c7bbd179606" translate="yes" xml:space="preserve">
          <source>This does &lt;em&gt;not&lt;/em&gt; support parsing arbitrary ISO 8601 strings. It is only intended as the inverse operation of &lt;a href=&quot;#datetime.time.isoformat&quot;&gt;&lt;code&gt;time.isoformat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这并&lt;em&gt;不能&lt;/em&gt;支持解析任意ISO 8601字符串。它仅用作&lt;a href=&quot;#datetime.time.isoformat&quot;&gt; &lt;code&gt;time.isoformat()&lt;/code&gt; &lt;/a&gt;的逆运算。</target>
        </trans-unit>
        <trans-unit id="a8d96811345bfb9f1ce5d798a0568d8c1532106c" translate="yes" xml:space="preserve">
          <source>This does nothing; it doesn&amp;rsquo;t even set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header.</source>
          <target state="translated">这什么也没做；它甚至没有设置&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头。</target>
        </trans-unit>
        <trans-unit id="0f118286f16ac96c73365a27b4b2e8dc31597b52" translate="yes" xml:space="preserve">
          <source>This doesn&amp;rsquo;t actually modify the message&amp;rsquo;s payload, but it does set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header to either &lt;code&gt;7bit&lt;/code&gt; or &lt;code&gt;8bit&lt;/code&gt; as appropriate, based on the payload data.</source>
          <target state="translated">这实际上并没有修改消息的有效负载，但是会根据有效负载数据将&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头设置为适当的 &lt;code&gt;7bit&lt;/code&gt; 或 &lt;code&gt;8bit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a82f68ab04c4d00089910c6eb4764da31cf6c7f8" translate="yes" xml:space="preserve">
          <source>This doesn&amp;rsquo;t include &lt;code&gt;not&lt;/code&gt;, which is a &lt;a href=&quot;#ast.UnaryOp&quot;&gt;&lt;code&gt;UnaryOp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这不包括 &lt;code&gt;not&lt;/code&gt; ，这是一个&lt;a href=&quot;#ast.UnaryOp&quot;&gt; &lt;code&gt;UnaryOp&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc9c32bbd592532e00cbc38e674970da7b46499a" translate="yes" xml:space="preserve">
          <source>This elides the response code from the server. If the response code is needed, use &lt;a href=&quot;#nntplib.NNTP.descriptions&quot;&gt;&lt;code&gt;descriptions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这消除了服务器的响应代码。如果需要响应代码，请使用&lt;a href=&quot;#nntplib.NNTP.descriptions&quot;&gt; &lt;code&gt;descriptions()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b98cf0f954a93782cde0031b12229cb211f39e9" translate="yes" xml:space="preserve">
          <source>This encoding is always ASCII-compatible.</source>
          <target state="translated">这种编码总是与ASCII兼容的。</target>
        </trans-unit>
        <trans-unit id="b2e9101400ad7ee4e55ed42180277b67f8cf0f57" translate="yes" xml:space="preserve">
          <source>This ensures that your mocks will fail in the same way as your production code if they are used incorrectly:</source>
          <target state="translated">这确保了如果你的mock使用错误,你的mock将以与你的生产代码相同的方式失败。</target>
        </trans-unit>
        <trans-unit id="84405dc340963074580e6158c072ba0de9baaf30" translate="yes" xml:space="preserve">
          <source>This error is mapped to the exception &lt;a href=&quot;exceptions#InterruptedError&quot;&gt;&lt;code&gt;InterruptedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此错误映射到异常&lt;a href=&quot;exceptions#InterruptedError&quot;&gt; &lt;code&gt;InterruptedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="782f94ac91ca671c983c4102c829d80211c23fb1" translate="yes" xml:space="preserve">
          <source>This example calls both functions with a &lt;code&gt;NULL&lt;/code&gt; pointer (&lt;code&gt;None&lt;/code&gt; should be used as the &lt;code&gt;NULL&lt;/code&gt; pointer):</source>
          <target state="translated">此示例使用 &lt;code&gt;NULL&lt;/code&gt; 指针调用这两个函数（应将 &lt;code&gt;None&lt;/code&gt; 用作 &lt;code&gt;NULL&lt;/code&gt; 指针）：</target>
        </trans-unit>
        <trans-unit id="a09c84b9d7833c97dd614df7daea0247b0acfc92" translate="yes" xml:space="preserve">
          <source>This example compares two strings, considering blanks to be &amp;ldquo;junk&amp;rdquo;:</source>
          <target state="translated">本示例比较两个字符串，并将空格视为&amp;ldquo;垃圾&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="044525c1b0f02f0079887e5bc92a57b5bc8aee0f" translate="yes" xml:space="preserve">
          <source>This example compares two texts. First we set up the texts, sequences of individual single-line strings ending with newlines (such sequences can also be obtained from the &lt;code&gt;readlines()&lt;/code&gt; method of file-like objects):</source>
          <target state="translated">本示例比较两个文本。首先，我们设置文本，以换行符结尾的单个单行字符串的序列（此类序列也可以从类似文件的对象的 &lt;code&gt;readlines()&lt;/code&gt; 方法获得）：</target>
        </trans-unit>
        <trans-unit id="4b2905cb398396cba10263a63f13db7111f72408" translate="yes" xml:space="preserve">
          <source>This example creates a Future object, creates and schedules an asynchronous Task to set result for the Future, and waits until the Future has a result:</source>
          <target state="translated">这个例子创建了一个Future对象,创建并调度了一个异步Task来为Future设置结果,并等待Future有结果。</target>
        </trans-unit>
        <trans-unit id="018978f4b59649c07ce86602d1484e00501f5987" translate="yes" xml:space="preserve">
          <source>This example creates a SSL context with the recommended security settings for client sockets, including automatic certificate verification:</source>
          <target state="translated">这个例子使用推荐的客户端套接字安全设置创建SSL上下文,包括自动证书验证。</target>
        </trans-unit>
        <trans-unit id="39ba95039e07988bb739e58971213fbb994f0bcc" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to wrap the Windows &lt;code&gt;MessageBoxW&lt;/code&gt; function so that it supports default parameters and named arguments. The C declaration from the windows header file is this:</source>
          <target state="translated">本示例演示如何包装Windows &lt;code&gt;MessageBoxW&lt;/code&gt; 函数，使其支持默认参数和命名参数。Windows头文件中的C声明是这样的：</target>
        </trans-unit>
        <trans-unit id="aa58ef83147938371c0a379ed8dc30747eca3d72" translate="yes" xml:space="preserve">
          <source>This example displays the number of bytes taken by non-directory files in each directory under the starting directory, except that it doesn&amp;rsquo;t look under any CVS subdirectory:</source>
          <target state="translated">此示例显示起始目录下每个目录中非目录文件占用的字节数，除了它不在任何CVS子目录下显示：</target>
        </trans-unit>
        <trans-unit id="13a5a113117f57607a533f5a8bed89cd81731c96" translate="yes" xml:space="preserve">
          <source>This example gets the python.org main page and displays the first 300 bytes of it.</source>
          <target state="translated">这个例子获取了python.org的主页面,并显示了其中的前300字节。</target>
        </trans-unit>
        <trans-unit id="f0c973599ef6d6281b47995acbaf5fa790a8c858" translate="yes" xml:space="preserve">
          <source>This example illustrates how to open a URL using your Netscape, Mozilla, or Lynx cookies (assumes Unix/Netscape convention for location of the cookies file):</source>
          <target state="translated">这个例子说明了如何使用Netscape、Mozilla或Lynx的cookie打开一个URL(假设cookie文件的位置是Unix/Netscape的惯例)。</target>
        </trans-unit>
        <trans-unit id="beb0e848071a51f42c8de87c4c5b82271cd652b5" translate="yes" xml:space="preserve">
          <source>This example is limited by the fact that &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; allocates its own memory: you cannot create a &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; instance that is backed by another object&amp;rsquo;s memory. However, third-party datatypes such as NumPy arrays do not have this limitation, and allow use of zero-copy pickling (or making as few copies as possible) when transferring between distinct processes or systems.</source>
          <target state="translated">该示例受&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;分配自己的内存的事实所限制：您不能创建由另一个对象的内存支持的&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;数组实例。但是，第三方数据类型（例如NumPy数组）没有此限制，并且在不同的流程或系统之间进行传输时允许使用零拷贝腌制（或制作尽可能少的副本）。</target>
        </trans-unit>
        <trans-unit id="026ec75fb1b97ca54f747abca8eb5568018e6f79" translate="yes" xml:space="preserve">
          <source>This example is the implementation of the &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt; function, described above, with the docstring omitted. It demonstrates many of the other functions provided by this module.</source>
          <target state="translated">此示例是上述&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;函数的实现，其中省略了文档字符串。它演示了此模块提供的许多其他功能。</target>
        </trans-unit>
        <trans-unit id="817efcdabbed81fd5a8d7128157922b1290e74ae" translate="yes" xml:space="preserve">
          <source>This example looks for a word following a hyphen:</source>
          <target state="translated">这个例子是在连字符后面找一个词。</target>
        </trans-unit>
        <trans-unit id="bc8fd01e0952c36a02e5bec07eb86980d4050c06" translate="yes" xml:space="preserve">
          <source>This example program is a fairly realistic example of a simple program. In this particular case, we do not take much advantage of the flexibility of the DOM.</source>
          <target state="translated">这个示例程序是一个相当现实的简单程序的例子。在这个特殊情况下,我们并没有利用DOM的灵活性。</target>
        </trans-unit>
        <trans-unit id="602035184a663fa6ac77e2c6161bb89ea08510cc" translate="yes" xml:space="preserve">
          <source>This example prompts the user for addresses needed in the message envelope (&amp;lsquo;To&amp;rsquo; and &amp;lsquo;From&amp;rsquo; addresses), and the message to be delivered. Note that the headers to be included with the message must be included in the message as entered; this example doesn&amp;rsquo;t do any processing of the &lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt; headers. In particular, the &amp;lsquo;To&amp;rsquo; and &amp;lsquo;From&amp;rsquo; addresses must be included in the message headers explicitly.</source>
          <target state="translated">本示例提示用户输入邮件信封中所需的地址（&amp;ldquo;收件人&amp;rdquo;和&amp;ldquo;发件人&amp;rdquo;地址）以及要传递的邮件。请注意，要包含在消息中的标头必须包含在输入的消息中；本示例不对&lt;a href=&quot;https://tools.ietf.org/html/rfc822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 822&lt;/strong&gt;&lt;/a&gt;标头进行任何处理。特别是，&amp;ldquo;收件人&amp;rdquo;和&amp;ldquo;发件人&amp;rdquo;地址必须明确包含在消息头中。</target>
        </trans-unit>
        <trans-unit id="d372344db0a88b9a62331f1afecea14cbc5e21cd" translate="yes" xml:space="preserve">
          <source>This example replaces the default &lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt;&lt;code&gt;ProxyHandler&lt;/code&gt;&lt;/a&gt; with one that uses programmatically-supplied proxy URLs, and adds proxy authorization support with &lt;a href=&quot;#urllib.request.ProxyBasicAuthHandler&quot;&gt;&lt;code&gt;ProxyBasicAuthHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">本示例将默认的&lt;a href=&quot;#urllib.request.ProxyHandler&quot;&gt; &lt;code&gt;ProxyHandler&lt;/code&gt; &lt;/a&gt;替换为使用以编程方式提供的代理URL的代理，并使用&lt;a href=&quot;#urllib.request.ProxyBasicAuthHandler&quot;&gt; &lt;code&gt;ProxyBasicAuthHandler&lt;/code&gt; &lt;/a&gt;添加代理授权支持。</target>
        </trans-unit>
        <trans-unit id="199f5f9a1a221f41ad61ef405ac46477978bb064" translate="yes" xml:space="preserve">
          <source>This example sets the date header to the current time and date using the current timezone offset.</source>
          <target state="translated">这个例子使用当前时区偏移将日期头设置为当前时间和日期。</target>
        </trans-unit>
        <trans-unit id="149d4f5895c99a4046ae6fe26db4a50dcbbe5da1" translate="yes" xml:space="preserve">
          <source>This example shows a simple way of using &lt;a href=&quot;#mmap.mmap&quot;&gt;&lt;code&gt;mmap&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">这个例子展示了使用&lt;a href=&quot;#mmap.mmap&quot;&gt; &lt;code&gt;mmap&lt;/code&gt; &lt;/a&gt;的简单方法：</target>
        </trans-unit>
        <trans-unit id="2c2e84d68d5adbd7f566f2d6ceb02815d482de30" translate="yes" xml:space="preserve">
          <source>This example shows how a subclass of &lt;a href=&quot;#weakref.ref&quot;&gt;&lt;code&gt;ref&lt;/code&gt;&lt;/a&gt; can be used to store additional information about an object and affect the value that&amp;rsquo;s returned when the referent is accessed:</source>
          <target state="translated">此示例说明&lt;a href=&quot;#weakref.ref&quot;&gt; &lt;code&gt;ref&lt;/code&gt; &lt;/a&gt;的子类如何用于存储有关对象的其他信息，以及如何影响访问引用对象时返回的值：</target>
        </trans-unit>
        <trans-unit id="4877278717bc43a6502484400cc4fee0faeb0e64" translate="yes" xml:space="preserve">
          <source>This example shows how to get a (hex-encoded) 128-bit authentication code for message &lt;code&gt;b'message data'&lt;/code&gt; with key &lt;code&gt;b'pseudorandom key'&lt;/code&gt;:</source>
          <target state="translated">此示例显示如何获取具有密钥 &lt;code&gt;b'pseudorandom key'&lt;/code&gt; 的消息 &lt;code&gt;b'message data'&lt;/code&gt; 的（十六进制编码）128位验证码：</target>
        </trans-unit>
        <trans-unit id="60cba076ed0f689a795d5c4df38be8c57a334080" translate="yes" xml:space="preserve">
          <source>This example shows how to remove a directory tree on Windows where some of the files have their read-only bit set. It uses the onerror callback to clear the readonly bit and reattempt the remove. Any subsequent failure will propagate.</source>
          <target state="translated">这个例子展示了如何在Windows上删除一个目录树,其中一些文件的只读位被设置了,它使用onerror回调来清除只读位,并重新尝试删除。它使用onerror回调来清除只读位并重新尝试删除。任何后续的失败都会被传播。</target>
        </trans-unit>
        <trans-unit id="c874d767b57899eb18aae7c1b3e35304836e0ba1" translate="yes" xml:space="preserve">
          <source>This example shows how to use difflib to create a &lt;code&gt;diff&lt;/code&gt;-like utility. It is also contained in the Python source distribution, as &lt;code&gt;Tools/scripts/diff.py&lt;/code&gt;.</source>
          <target state="translated">本示例说明如何使用difflib创建类似 &lt;code&gt;diff&lt;/code&gt; 的实用程序。它也包含在Python源分布， &lt;code&gt;Tools/scripts/diff.py&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="794f21932d1f601d70b331b1eb4caf3dbbb36379" translate="yes" xml:space="preserve">
          <source>This example sorts mail from several mailing lists into different mailboxes, being careful to avoid mail corruption due to concurrent modification by other programs, mail loss due to interruption of the program, or premature termination due to malformed messages in the mailbox:</source>
          <target state="translated">本例将几个邮件列表中的邮件分拣到不同的邮箱中,要注意避免因其他程序同时修改而导致的邮件损坏,因程序中断而导致的邮件丢失,或因邮箱中的邮件畸形而导致的提前终止。</target>
        </trans-unit>
        <trans-unit id="ae1a261bc1a23bc317bfbe070ca5019f36eaaca8" translate="yes" xml:space="preserve">
          <source>This example uses 64-byte internal digests, and returns the 32-byte final digest:</source>
          <target state="translated">这个例子使用64字节的内部摘要,并返回32字节的最终摘要。</target>
        </trans-unit>
        <trans-unit id="4f178cedeeecdf46a16a56bca9ff1c21e113376f" translate="yes" xml:space="preserve">
          <source>This example uses the iterator form:</source>
          <target state="translated">本例使用迭代器形式。</target>
        </trans-unit>
        <trans-unit id="756a7f6039de09d51d751e231a05b92875ae2f1b" translate="yes" xml:space="preserve">
          <source>This example will print all file names in the current directory with the extension &lt;code&gt;.txt&lt;/code&gt;:</source>
          <target state="translated">本示例将打印当前目录中所有扩展名为 &lt;code&gt;.txt&lt;/code&gt; 的文件名：</target>
        </trans-unit>
        <trans-unit id="cb5551e6bcc3809b3b5a499fdf51a6ac5f52fa14" translate="yes" xml:space="preserve">
          <source>This exception can be caught to perform custom operations when asyncio Tasks are cancelled. In almost all situations the exception must be re-raised.</source>
          <target state="translated">当asyncio Tasks被取消时,可以捕获这个异常来执行自定义操作。在几乎所有的情况下,这个异常都必须被重新引发。</target>
        </trans-unit>
        <trans-unit id="c2245ad8aaf85394acf3919fb1083c95fc2c5f50" translate="yes" xml:space="preserve">
          <source>This exception collects exceptions that are raised during a multi-file operation. For &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt;, the exception argument is a list of 3-tuples (&lt;em&gt;srcname&lt;/em&gt;, &lt;em&gt;dstname&lt;/em&gt;, &lt;em&gt;exception&lt;/em&gt;).</source>
          <target state="translated">此异常收集在多文件操作期间引发的异常。对于&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;，exception参数是一个三元组的列表（&lt;em&gt;srcname&lt;/em&gt;，&lt;em&gt;dstname&lt;/em&gt;，&lt;em&gt;exception&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="04ff319a12f67cfca8f5f539906ec49ee19dae8b" translate="yes" xml:space="preserve">
          <source>This exception is a subclass of &lt;a href=&quot;exceptions#EOFError&quot;&gt;&lt;code&gt;EOFError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此异常是&lt;a href=&quot;exceptions#EOFError&quot;&gt; &lt;code&gt;EOFError&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="e7736c85cc53a35d004f8b52b5afbc5eaaff8f8e" translate="yes" xml:space="preserve">
          <source>This exception is derived from &lt;a href=&quot;#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;. In user defined base classes, abstract methods should raise this exception when they require derived classes to override the method, or while the class is being developed to indicate that the real implementation still needs to be added.</source>
          <target state="translated">此异常派生自&lt;a href=&quot;#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。在用户定义的基类中，当抽象方法要求派生类覆盖该方法时，或者在开发该类以指示仍需要添加实际实现时，应引发此异常。</target>
        </trans-unit>
        <trans-unit id="c66b9d77cb46fec7211670e8e7cd4edf77c01cb2" translate="yes" xml:space="preserve">
          <source>This exception is derived from &lt;a href=&quot;#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;. It is raised when the interpreter detects that the maximum recursion depth (see &lt;a href=&quot;sys#sys.getrecursionlimit&quot;&gt;&lt;code&gt;sys.getrecursionlimit()&lt;/code&gt;&lt;/a&gt;) is exceeded.</source>
          <target state="translated">此异常派生自&lt;a href=&quot;#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。当解释器检测到超过最大递归深度（请参见&lt;a href=&quot;sys#sys.getrecursionlimit&quot;&gt; &lt;code&gt;sys.getrecursionlimit()&lt;/code&gt; &lt;/a&gt;）时，将引发此错误。</target>
        </trans-unit>
        <trans-unit id="3e9bf7a89c436eb9519f1ccd1f17934763da1eb1" translate="yes" xml:space="preserve">
          <source>This exception is different from the builtin &lt;a href=&quot;exceptions#TimeoutError&quot;&gt;&lt;code&gt;TimeoutError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">此异常与内置的&lt;a href=&quot;exceptions#TimeoutError&quot;&gt; &lt;code&gt;TimeoutError&lt;/code&gt; &lt;/a&gt;异常不同。</target>
        </trans-unit>
        <trans-unit id="5abfaa7cb1b6df31569bd73bec0753febb5ef38a" translate="yes" xml:space="preserve">
          <source>This exception is raised by the &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt; function. It inherits from &lt;a href=&quot;#BaseException&quot;&gt;&lt;code&gt;BaseException&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; so that it is not accidentally caught by code that catches &lt;a href=&quot;#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;. This allows the exception to properly propagate up and cause the interpreter to exit. When it is not handled, the Python interpreter exits; no stack traceback is printed. The constructor accepts the same optional argument passed to &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt;. If the value is an integer, it specifies the system exit status (passed to C&amp;rsquo;s &lt;code&gt;exit()&lt;/code&gt; function); if it is &lt;code&gt;None&lt;/code&gt;, the exit status is zero; if it has another type (such as a string), the object&amp;rsquo;s value is printed and the exit status is one.</source>
          <target state="translated">&lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt;函数引发此异常。它继承自&lt;a href=&quot;#BaseException&quot;&gt; &lt;code&gt;BaseException&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; ,&lt;/a&gt;因此捕获&lt;a href=&quot;#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;的代码不会意外捕获它。这样可以使异常正确传播并导致解释器退出。不处理时，Python解释器退出；不打印堆栈回溯。构造函数接受传递给&lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt;的相同可选参数。如果该值是整数，则它指定系统退出状态（传递给C的 &lt;code&gt;exit()&lt;/code&gt; 函数）；否则，返回0 。如果为 &lt;code&gt;None&lt;/code&gt; ，则退出状态为零；否则为0。如果它具有另一种类型（例如字符串），则将打印对象的值，并且退出状态为1。</target>
        </trans-unit>
        <trans-unit id="5d36d890204d231c3db5ed28f13b407944350b88" translate="yes" xml:space="preserve">
          <source>This exception is raised if source and destination in &lt;a href=&quot;#shutil.copyfile&quot;&gt;&lt;code&gt;copyfile()&lt;/code&gt;&lt;/a&gt; are the same file.</source>
          <target state="translated">如果&lt;a href=&quot;#shutil.copyfile&quot;&gt; &lt;code&gt;copyfile()&lt;/code&gt; &lt;/a&gt;中的源和目标是同一文件，则会引发此异常。</target>
        </trans-unit>
        <trans-unit id="8566ba7bb494d8af7e0fe1d383f3ef91ec51f1bd" translate="yes" xml:space="preserve">
          <source>This exception is raised on all errors, such as unknown number of bytes per sample, etc.</source>
          <target state="translated">所有的错误都会引发这个异常,比如每个样本的未知字节数等。</target>
        </trans-unit>
        <trans-unit id="b644672ef25e1f525a78a441c53893d63755b91a" translate="yes" xml:space="preserve">
          <source>This exception is raised on certain errors. The argument is a string describing what went wrong.</source>
          <target state="translated">这个异常是在某些错误时发生的。参数是一个描述错误原因的字符串。</target>
        </trans-unit>
        <trans-unit id="2cc85694ad091b3a955d9c3bd409e50ebf522e46" translate="yes" xml:space="preserve">
          <source>This exception is raised to skip a test.</source>
          <target state="translated">这个异常是为了跳过一个测试而提出的。</target>
        </trans-unit>
        <trans-unit id="58cc721a5d45f6183858fe989cca9698e1cc1fbe" translate="yes" xml:space="preserve">
          <source>This exception is raised when a foreign function call cannot convert one of the passed arguments.</source>
          <target state="translated">当一个外来函数调用不能转换其中一个传递的参数时,就会引发这个异常。</target>
        </trans-unit>
        <trans-unit id="9404360bffa18ed1bd67ec88d6463042c13d79a5" translate="yes" xml:space="preserve">
          <source>This exception is raised when a string parameter contains a character that is not permitted in the context it&amp;rsquo;s being used in by the XML 1.0 recommendation. For example, attempting to create an &lt;code&gt;Element&lt;/code&gt; node with a space in the element type name will cause this error to be raised.</source>
          <target state="translated">当字符串参数包含XML 1.0建议中在其上下文中不允许使用的字符时，将引发此异常。例如，尝试创建元素类型名称中带有空格的 &lt;code&gt;Element&lt;/code&gt; 节点将引起此错误。</target>
        </trans-unit>
        <trans-unit id="7ff9a579e9d83d01444b2f8d5100e032fc4e7952" translate="yes" xml:space="preserve">
          <source>This exception is raised when a system function returns a system-related error, including I/O failures such as &amp;ldquo;file not found&amp;rdquo; or &amp;ldquo;disk full&amp;rdquo; (not for illegal argument types or other incidental errors).</source>
          <target state="translated">当系统功能返回与系统相关的错误（包括&amp;ldquo;找不到文件&amp;rdquo;或&amp;ldquo;磁盘已满&amp;rdquo;之类的I / O故障（不适用于非法参数类型或其他偶然错误））时，引发此异常。</target>
        </trans-unit>
        <trans-unit id="1bc3c86de29d12b90a882aff98c2eec07bc27573" translate="yes" xml:space="preserve">
          <source>This exception is raised when a weak reference proxy, created by the &lt;a href=&quot;weakref#weakref.proxy&quot;&gt;&lt;code&gt;weakref.proxy()&lt;/code&gt;&lt;/a&gt; function, is used to access an attribute of the referent after it has been garbage collected. For more information on weak references, see the &lt;a href=&quot;weakref#module-weakref&quot;&gt;&lt;code&gt;weakref&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">当由&lt;a href=&quot;weakref#weakref.proxy&quot;&gt; &lt;code&gt;weakref.proxy()&lt;/code&gt; &lt;/a&gt;函数创建的弱引用代理用于垃圾回收后，用于访问引用对象的属性时，会引发此异常。有关弱引用的更多信息，请参见&lt;a href=&quot;weakref#module-weakref&quot;&gt; &lt;code&gt;weakref&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="4fc1681a2f2c890252c17685b7d4e33e329d940d" translate="yes" xml:space="preserve">
          <source>This exception is raised when a writable mailbox has its status changed by the server. This is a sub-class of &lt;a href=&quot;#imaplib.IMAP4.error&quot;&gt;&lt;code&gt;IMAP4.error&lt;/code&gt;&lt;/a&gt;. Some other client now has write permission, and the mailbox will need to be re-opened to re-obtain write permission.</source>
          <target state="translated">当可写邮箱的状态由服务器更改时，将引发此异常。这是&lt;a href=&quot;#imaplib.IMAP4.error&quot;&gt; &lt;code&gt;IMAP4.error&lt;/code&gt; &lt;/a&gt;的子类。现在，其他一些客户端具有写权限，并且邮箱将需要重新打开才能重新获得写权限。</target>
        </trans-unit>
        <trans-unit id="7d6ecff71782ef8d9e93a241e475f2b20a701dab" translate="yes" xml:space="preserve">
          <source>This exception is raised when an error occurs during compression or decompression, or while initializing the compressor/decompressor state.</source>
          <target state="translated">在压缩或解压缩过程中,或在初始化压缩/解压缩器状态时发生错误时,就会出现这种异常。</target>
        </trans-unit>
        <trans-unit id="2409514ae954bb0af533c244afcfa71dbd523cc2" translate="yes" xml:space="preserve">
          <source>This exception is raised when the &lt;a href=&quot;#asyncio.Queue.get_nowait&quot;&gt;&lt;code&gt;get_nowait()&lt;/code&gt;&lt;/a&gt; method is called on an empty queue.</source>
          <target state="translated">在空队列上调用&lt;a href=&quot;#asyncio.Queue.get_nowait&quot;&gt; &lt;code&gt;get_nowait()&lt;/code&gt; &lt;/a&gt;方法时会引发此异常。</target>
        </trans-unit>
        <trans-unit id="5102cc5a79e08a7c0452cc141b9537b61373b612" translate="yes" xml:space="preserve">
          <source>This exception is raised when the &lt;a href=&quot;urllib.request#urllib.request.urlretrieve&quot;&gt;&lt;code&gt;urlretrieve()&lt;/code&gt;&lt;/a&gt; function detects that the amount of the downloaded data is less than the expected amount (given by the &lt;em&gt;Content-Length&lt;/em&gt; header). The &lt;code&gt;content&lt;/code&gt; attribute stores the downloaded (and supposedly truncated) data.</source>
          <target state="translated">当&lt;a href=&quot;urllib.request#urllib.request.urlretrieve&quot;&gt; &lt;code&gt;urlretrieve()&lt;/code&gt; &lt;/a&gt;函数检测到下载的数据量小于预期的量（由&lt;em&gt;Content-Length&lt;/em&gt;标头提供）时，将引发此异常。在 &lt;code&gt;content&lt;/code&gt; 属性存储下载的（而且据称截断）数据。</target>
        </trans-unit>
        <trans-unit id="bdfe4875d5ba1070e830332816dd12241af8086e" translate="yes" xml:space="preserve">
          <source>This exception is raised when the server unexpectedly disconnects, or when an attempt is made to use the &lt;a href=&quot;#smtplib.SMTP&quot;&gt;&lt;code&gt;SMTP&lt;/code&gt;&lt;/a&gt; instance before connecting it to a server.</source>
          <target state="translated">如果服务器意外断开连接，或者在将&lt;a href=&quot;#smtplib.SMTP&quot;&gt; &lt;code&gt;SMTP&lt;/code&gt; &lt;/a&gt;实例连接到服务器之前尝试使用SMTP实例，则会引发此异常。</target>
        </trans-unit>
        <trans-unit id="542841d41f063cbb018245ada2a57db1142f7ad3" translate="yes" xml:space="preserve">
          <source>This exception may be raised by user code to indicate that an attempted operation on an object is not supported, and is not meant to be. If an object is meant to support a given operation but has not yet provided an implementation, &lt;a href=&quot;#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; is the proper exception to raise.</source>
          <target state="translated">用户代码可能会引发此异常，以指示不支持并且不意图支持对对象的尝试操作。如果某个对象旨在支持给定的操作但尚未提供实现，则&lt;a href=&quot;#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;是引发异常的合适方法。</target>
        </trans-unit>
        <trans-unit id="7a08b02abca8718c7204bf9f673ee79551dbb60d" translate="yes" xml:space="preserve">
          <source>This exception, a subclass of &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;, is raised when the &lt;a href=&quot;#threading.Barrier&quot;&gt;&lt;code&gt;Barrier&lt;/code&gt;&lt;/a&gt; object is reset or broken.</source>
          <target state="translated">重置或破坏&lt;a href=&quot;#threading.Barrier&quot;&gt; &lt;code&gt;Barrier&lt;/code&gt; &lt;/a&gt;对象时，将引发此异常（&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;的子类）。</target>
        </trans-unit>
        <trans-unit id="1c1aa14e9619480ad86d082fd229c59c6cd9c32c" translate="yes" xml:space="preserve">
          <source>This expression evaluates to &lt;code&gt;True&lt;/code&gt; if &lt;a href=&quot;#os.access&quot;&gt;&lt;code&gt;os.access()&lt;/code&gt;&lt;/a&gt; supports &lt;code&gt;effective_ids=True&lt;/code&gt; on the local platform:</source>
          <target state="translated">如果&lt;a href=&quot;#os.access&quot;&gt; &lt;code&gt;os.access()&lt;/code&gt; &lt;/a&gt;在本地平台上支持 &lt;code&gt;effective_ids=True&lt;/code&gt; ，则此表达式的计算结果为 &lt;code&gt;True&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="633ac41847f4e119da8fe6e2c132acd3ad7d6a6a" translate="yes" xml:space="preserve">
          <source>This factory function creates a function that can be used as a callable for &lt;a href=&quot;#shutil.copytree&quot;&gt;&lt;code&gt;copytree()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;em&gt;ignore&lt;/em&gt; argument, ignoring files and directories that match one of the glob-style &lt;em&gt;patterns&lt;/em&gt; provided. See the example below.</source>
          <target state="translated">此工厂函数创建一个函数，该函数可用作&lt;a href=&quot;#shutil.copytree&quot;&gt; &lt;code&gt;copytree()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;ignore&lt;/em&gt;参数的可调用函数，而忽略与提供的glob样式&lt;em&gt;模式&lt;/em&gt;之一匹配的文件和目录。请参见下面的示例。</target>
        </trans-unit>
        <trans-unit id="8163d2b1312f6d8e2b608937718b193c1bd6dec6" translate="yes" xml:space="preserve">
          <source>This factory function creates and returns a new ctypes pointer type. Pointer types are cached and reused internally, so calling this function repeatedly is cheap. &lt;em&gt;type&lt;/em&gt; must be a ctypes type.</source>
          <target state="translated">此工厂函数创建并返回新的ctypes指针类型。指针类型在内部缓存和重用，因此重复调用此函数很便宜。&lt;em&gt;type&lt;/em&gt;必须是ctypes类型。</target>
        </trans-unit>
        <trans-unit id="91c8c475d8b0ce7014c0cef96a207a73500c7165" translate="yes" xml:space="preserve">
          <source>This feature can be disabled by setting &lt;code&gt;allow_abbrev&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">可以通过将 &lt;code&gt;allow_abbrev&lt;/code&gt; 设置为 &lt;code&gt;False&lt;/code&gt; 来禁用此功能：</target>
        </trans-unit>
        <trans-unit id="0c7a0557b8a57ee027564f2bc023efbef1ba46a1" translate="yes" xml:space="preserve">
          <source>This feature is not available on Windows.</source>
          <target state="translated">此功能在Windows上不可用。</target>
        </trans-unit>
        <trans-unit id="88bd30c5ce87bf5e4843b4151adf98e7bf9c98c1" translate="yes" xml:space="preserve">
          <source>This features requires OpenSSL 0.9.8f or newer.</source>
          <target state="translated">此功能需要OpenSSL 0.9.8f或更新版本。</target>
        </trans-unit>
        <trans-unit id="140c6b2dbf9a419843c07939e4cad112713e18f4" translate="yes" xml:space="preserve">
          <source>This features requires OpenSSL 1.1.1 or newer.</source>
          <target state="translated">此功能需要OpenSSL 1.1.1或更新版本。</target>
        </trans-unit>
        <trans-unit id="3a49f557a9e7cd87ce6aae19a5ed6c4bfa6e3ab7" translate="yes" xml:space="preserve">
          <source>This flag allows you to write regular expressions that look nicer and are more readable by allowing you to visually separate logical sections of the pattern and add comments. Whitespace within the pattern is ignored, except when in a character class, or when preceded by an unescaped backslash, or within tokens like &lt;code&gt;*?&lt;/code&gt;, &lt;code&gt;(?:&lt;/code&gt; or &lt;code&gt;(?P&amp;lt;...&amp;gt;&lt;/code&gt;. When a line contains a &lt;code&gt;#&lt;/code&gt; that is not in a character class and is not preceded by an unescaped backslash, all characters from the leftmost such &lt;code&gt;#&lt;/code&gt; through the end of the line are ignored.</source>
          <target state="translated">该标志允许您直观地分隔模式的逻辑部分并添加注释，从而使您可以编写看起来更美观，更易读的正则表达式。模式中的空格将被忽略，除非在字符类中，或者在前加一个未转义的反斜杠，或者在诸如 &lt;code&gt;*?&lt;/code&gt; 的标记中 ， &lt;code&gt;(?:&lt;/code&gt; 或 &lt;code&gt;(?P&amp;lt;...&amp;gt;&lt;/code&gt; ..如果一行中包含的 &lt;code&gt;#&lt;/code&gt; 不在字符类中，并且前面没有未转义的反斜杠，则从最左端的此类 &lt;code&gt;#&lt;/code&gt; 到该行结尾的所有字符均为忽略了。</target>
        </trans-unit>
        <trans-unit id="6776e1560b68f5240a1ba4435437a318443994f3" translate="yes" xml:space="preserve">
          <source>This flag can be OR&amp;rsquo;ed with any other scheduling policy. When a process with this flag set forks, its child&amp;rsquo;s scheduling policy and priority are reset to the default.</source>
          <target state="translated">该标志可以与其他任何调度策略进行&amp;ldquo;或&amp;rdquo;运算。当设置了该标志的进程派生时，其子级的调度策略和优先级将重置为默认值。</target>
        </trans-unit>
        <trans-unit id="4bb5e8bac1bee574b48e95ad1269a90a6d72a2ab" translate="yes" xml:space="preserve">
          <source>This flag is ignored if &lt;a href=&quot;#subprocess.CREATE_NEW_CONSOLE&quot;&gt;&lt;code&gt;CREATE_NEW_CONSOLE&lt;/code&gt;&lt;/a&gt; is specified.</source>
          <target state="translated">如果指定了&lt;a href=&quot;#subprocess.CREATE_NEW_CONSOLE&quot;&gt; &lt;code&gt;CREATE_NEW_CONSOLE&lt;/code&gt; ,&lt;/a&gt;则忽略此标志。</target>
        </trans-unit>
        <trans-unit id="6a75f6aece8739456749d49d943dcd827dfddcd0" translate="yes" xml:space="preserve">
          <source>This flag is not supported on modern Windows platforms.</source>
          <target state="translated">现代Windows平台不支持该标志。</target>
        </trans-unit>
        <trans-unit id="43e3d95482fafc51295e5f9b744822dacdde2901" translate="yes" xml:space="preserve">
          <source>This follows the US convention of &lt;code&gt;DAY_1&lt;/code&gt; being Sunday, not the international convention (ISO 8601) that Monday is the first day of the week.</source>
          <target state="translated">这遵循美国的 &lt;code&gt;DAY_1&lt;/code&gt; 约定为星期日，而不是国际约定（ISO 8601），星期一为一周的第一天。</target>
        </trans-unit>
        <trans-unit id="b283665a2e4addf0f4b94b565264877c7b695f5f" translate="yes" xml:space="preserve">
          <source>This format is more limited than &lt;code&gt;.xz&lt;/code&gt; &amp;ndash; it does not support integrity checks or multiple filters.</source>
          <target state="translated">此格式比 &lt;code&gt;.xz&lt;/code&gt; 更受限制-它不支持完整性检查或多个过滤器。</target>
        </trans-unit>
        <trans-unit id="416c204cc1d425d9fead84292efcc4e9beda33c5" translate="yes" xml:space="preserve">
          <source>This format specifier does not support integrity checks, and requires that you always specify a custom filter chain (for both compression and decompression). Additionally, data compressed in this manner cannot be decompressed using &lt;code&gt;FORMAT_AUTO&lt;/code&gt; (see &lt;a href=&quot;#lzma.LZMADecompressor&quot;&gt;&lt;code&gt;LZMADecompressor&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">该格式说明符不支持完整性检查，并且要求您始终指定一个自定义过滤器链（用于压缩和解压缩）。另外，不能使用 &lt;code&gt;FORMAT_AUTO&lt;/code&gt; 对以这种方式压缩的数据进行解压缩（请参阅&lt;a href=&quot;#lzma.LZMADecompressor&quot;&gt; &lt;code&gt;LZMADecompressor&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="989faedbf517851e250011a0c82fce8ac57f5b92" translate="yes" xml:space="preserve">
          <source>This function accepts a parse tree represented as a sequence and builds an internal representation if possible. If it can validate that the tree conforms to the Python grammar and all nodes are valid node types in the host version of Python, an ST object is created from the internal representation and returned to the called. If there is a problem creating the internal representation, or if the tree cannot be validated, a &lt;a href=&quot;#parser.ParserError&quot;&gt;&lt;code&gt;ParserError&lt;/code&gt;&lt;/a&gt; exception is raised. An ST object created this way should not be assumed to compile correctly; normal exceptions raised by compilation may still be initiated when the ST object is passed to &lt;a href=&quot;#parser.compilest&quot;&gt;&lt;code&gt;compilest()&lt;/code&gt;&lt;/a&gt;. This may indicate problems not related to syntax (such as a &lt;a href=&quot;exceptions#MemoryError&quot;&gt;&lt;code&gt;MemoryError&lt;/code&gt;&lt;/a&gt; exception), but may also be due to constructs such as the result of parsing &lt;code&gt;del f(0)&lt;/code&gt;, which escapes the Python parser but is checked by the bytecode compiler.</source>
          <target state="translated">此函数接受表示为序列的解析树，并在可能的情况下构建内部表示。如果它可以验证树是否符合Python语法，并且所有节点在Python的宿主版本中都是有效的节点类型，则从内部表示形式创建一个ST对象，并将其返回给被调用对象。如果创建内部表示存在问题，或者无法验证树，则引发&lt;a href=&quot;#parser.ParserError&quot;&gt; &lt;code&gt;ParserError&lt;/code&gt; &lt;/a&gt;异常。以这种方式创建的ST对象不应被假定正确编译。将ST对象传递给&lt;a href=&quot;#parser.compilest&quot;&gt; &lt;code&gt;compilest()&lt;/code&gt; &lt;/a&gt;时，仍然可以启动由编译引发的常规异常。这可能表明与语法无关的问题（例如&lt;a href=&quot;exceptions#MemoryError&quot;&gt; &lt;code&gt;MemoryError&lt;/code&gt; &lt;/a&gt;异常），但也可能是由于诸如delf &lt;code&gt;del f(0)&lt;/code&gt; 的解析结果之类的结构而导致的，该结构逃逸了Python解析器，但由字节码编译器进行了检查。</target>
        </trans-unit>
        <trans-unit id="67cbaeac62e982b846f73d97f9e9a2e46abe862c" translate="yes" xml:space="preserve">
          <source>This function accepts an ST object from the caller in &lt;em&gt;st&lt;/em&gt; and returns a Python list representing the equivalent parse tree. The resulting list representation can be used for inspection or the creation of a new parse tree in list form. This function does not fail so long as memory is available to build the list representation. If the parse tree will only be used for inspection, &lt;a href=&quot;#parser.st2tuple&quot;&gt;&lt;code&gt;st2tuple()&lt;/code&gt;&lt;/a&gt; should be used instead to reduce memory consumption and fragmentation. When the list representation is required, this function is significantly faster than retrieving a tuple representation and converting that to nested lists.</source>
          <target state="translated">此函数从&lt;em&gt;st中&lt;/em&gt;的调用方接受一个ST对象，并返回一个表示等效解析树的Python列表。生成的列表表示形式可用于检查或以列表形式创建新的分析树。只要有可用的内存来构建列表表示，此功能就不会失败。如果解析树仅用于检查，&lt;a href=&quot;#parser.st2tuple&quot;&gt; &lt;code&gt;st2tuple()&lt;/code&gt; &lt;/a&gt;使用st2tuple（）来减少内存消耗和碎片。当需要列表表示形式时，此功能比检索元组表示形式并将其转换为嵌套列表要快得多。</target>
        </trans-unit>
        <trans-unit id="e9a7e450b07e96b8d37598fb40a161b3ec8ab42a" translate="yes" xml:space="preserve">
          <source>This function accepts an ST object from the caller in &lt;em&gt;st&lt;/em&gt; and returns a Python tuple representing the equivalent parse tree. Other than returning a tuple instead of a list, this function is identical to &lt;a href=&quot;#parser.st2list&quot;&gt;&lt;code&gt;st2list()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数从&lt;em&gt;st中&lt;/em&gt;的调用方接受ST对象，并返回表示等效解析树的Python元组。除了返回元组而不是列表之外，此函数与&lt;a href=&quot;#parser.st2list&quot;&gt; &lt;code&gt;st2list()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="321d86afeb1999f005b4db61414e6c09451e8851" translate="yes" xml:space="preserve">
          <source>This function allows for partial sends, which can happen when the network is busy.</source>
          <target state="translated">该功能允许部分发送,这在网络繁忙时可能发生。</target>
        </trans-unit>
        <trans-unit id="fe899672dab1e5e73d8fb72fca72c949a0360195" translate="yes" xml:space="preserve">
          <source>This function always creates a new event loop and closes it at the end. It should be used as a main entry point for asyncio programs, and should ideally only be called once.</source>
          <target state="translated">这个函数总是创建一个新的事件循环并在最后关闭它。它应该被用作asyncio程序的主要入口,并且最好只被调用一次。</target>
        </trans-unit>
        <trans-unit id="e046b276c5e0f6ce872efb15eac2bd1f19828574" translate="yes" xml:space="preserve">
          <source>This function always returns an object which can work as a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; and has methods such as</source>
          <target state="translated">此函数始终返回可以用作&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;上下文管理器&lt;/a&gt;的对象，并且该对象具有诸如</target>
        </trans-unit>
        <trans-unit id="88ebf835d256e7d1650d9a8e9148ec994873a52c" translate="yes" xml:space="preserve">
          <source>This function always returns an object which can work as a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; and has the properties &lt;em&gt;url&lt;/em&gt;, &lt;em&gt;headers&lt;/em&gt;, and &lt;em&gt;status&lt;/em&gt;. See &lt;a href=&quot;#urllib.response.addinfourl&quot;&gt;&lt;code&gt;urllib.response.addinfourl&lt;/code&gt;&lt;/a&gt; for more detail on these properties.</source>
          <target state="translated">该函数总是返回一个可以用作&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;上下文管理器&lt;/a&gt;的对象，该对象具有&lt;em&gt;url&lt;/em&gt;，&lt;em&gt;headers&lt;/em&gt;和&lt;em&gt;status&lt;/em&gt;属性。有关这些属性的更多详细信息，请参见&lt;a href=&quot;#urllib.response.addinfourl&quot;&gt; &lt;code&gt;urllib.response.addinfourl&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="afd0d330dff663f3dc120c9eb1f87d37d23d40ac" translate="yes" xml:space="preserve">
          <source>This function always supports &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;. Note however that, unlike other functions, the &lt;a href=&quot;#os.fwalk&quot;&gt;&lt;code&gt;fwalk()&lt;/code&gt;&lt;/a&gt; default value for &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">此函数始终支持&lt;a href=&quot;#dir-fd&quot;&gt;相对于目录描述符的路径&lt;/a&gt;，&lt;a href=&quot;#follow-symlinks&quot;&gt;而不&lt;/a&gt;支持符号链接。然而需要注意的是，不同于其他功能方面，&lt;a href=&quot;#os.fwalk&quot;&gt; &lt;code&gt;fwalk()&lt;/code&gt; &lt;/a&gt;为默认值&lt;em&gt;follow_symlinks&lt;/em&gt;是 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed1efc12979920dcd6c776bcfcdcc27d24754b6f" translate="yes" xml:space="preserve">
          <source>This function attempts to guess which of the several simple database modules available &amp;mdash; &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#module-dbm.dumb&quot;&gt;&lt;code&gt;dbm.dumb&lt;/code&gt;&lt;/a&gt; &amp;mdash; should be used to open a given file.</source>
          <target state="translated">该函数试图猜测可用的几个简单数据库模块中的&lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#module-dbm.dumb&quot;&gt; &lt;code&gt;dbm.dumb&lt;/code&gt; )&lt;/a&gt;应用于打开给定的文件。</target>
        </trans-unit>
        <trans-unit id="8ab5d1e1419c1e6e527c5b28e58d7f204d5d5901" translate="yes" xml:space="preserve">
          <source>This function calls &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; to do the actual work, see the documentation of &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;that function&lt;/code&gt;&lt;/a&gt; for an explanation of the keyword arguments.</source>
          <target state="translated">此函数调用&lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;进行实际工作，有关关键字参数的说明，请参见该&lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;that function&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="7643b642de54efb09acb94ff349ac141f3740543" translate="yes" xml:space="preserve">
          <source>This function can also be used to execute arbitrary code objects (such as those created by &lt;a href=&quot;#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt;). In this case pass a code object instead of a string. If the code object has been compiled with &lt;code&gt;'exec'&lt;/code&gt; as the &lt;em&gt;mode&lt;/em&gt; argument, &lt;a href=&quot;#eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s return value will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">此函数还可用于执行任意代码对象（例如由&lt;a href=&quot;#compile&quot;&gt; &lt;code&gt;compile()&lt;/code&gt; &lt;/a&gt;创建的代码对象）。在这种情况下，传递代码对象而不是字符串。如果代码对象已使用 &lt;code&gt;'exec'&lt;/code&gt; 作为&lt;em&gt;mode&lt;/em&gt;参数进行编译，则&lt;a href=&quot;#eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;的返回值为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c83a78a81f4633ef210bfad83d65ad3ed569eed4" translate="yes" xml:space="preserve">
          <source>This function can also support &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;.</source>
          <target state="translated">此功能还可以支持&lt;a href=&quot;#dir-fd&quot;&gt;相对于目录描述符的路径&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="246288c265a4e1776c81f6798f272763d36779b3" translate="yes" xml:space="preserve">
          <source>This function can also support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;; the file descriptor must refer to a directory.</source>
          <target state="translated">该函数还可以支持&lt;a href=&quot;#path-fd&quot;&gt;指定文件描述符&lt;/a&gt;；文件描述符必须引用目录。</target>
        </trans-unit>
        <trans-unit id="cb38baa42674aa3420a5ba84abf298951b8d79bb" translate="yes" xml:space="preserve">
          <source>This function can fail with the new directory structure made if you lack permissions needed to remove the leaf directory or file.</source>
          <target state="translated">如果缺乏删除叶子目录或文件所需的权限,这个功能可能会在新制作的目录结构下失败。</target>
        </trans-unit>
        <trans-unit id="24201f2bcec067a0cadef86b16eb4b56ccf09408" translate="yes" xml:space="preserve">
          <source>This function can raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; and subclasses such as &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#PermissionError&quot;&gt;&lt;code&gt;PermissionError&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;exceptions#NotADirectoryError&quot;&gt;&lt;code&gt;NotADirectoryError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数可以引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;和诸如&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;exceptions#PermissionError&quot;&gt; &lt;code&gt;PermissionError&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;exceptions#NotADirectoryError&quot;&gt; &lt;code&gt;NotADirectoryError&lt;/code&gt; 的&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="84dc07fa2ed11ef2486edb31b54936913c119158" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; with the &lt;em&gt;dir_fd&lt;/em&gt; parameter.</source>
          <target state="translated">此函数可以使用&lt;em&gt;dir_fd&lt;/em&gt;参数支持&lt;a href=&quot;#dir-fd&quot;&gt;相对于目录描述符的路径&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b68d682873763be0740e66ddb99f09801a4806ea" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;.</source>
          <target state="translated">该函数可以支持&lt;a href=&quot;#dir-fd&quot;&gt;相对于目录描述符的路径&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a372fc0e1775faa2f765a46dcfe627ccc5b0b02" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">此功能可以支持&lt;a href=&quot;#follow-symlinks&quot;&gt;不遵循符号链接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba43daecc37b3b1b1aaa02be05b7cbcd978d90b9" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">该函数可以支持&lt;a href=&quot;#path-fd&quot;&gt;指定文件描述符，&lt;/a&gt;而&lt;a href=&quot;#follow-symlinks&quot;&gt;不是遵循符号链接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a1de8b6398b0c357406d8ca517cc6964f787838" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;, &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">该函数可以支持&lt;a href=&quot;#path-fd&quot;&gt;指定文件描述符&lt;/a&gt;，&lt;a href=&quot;#dir-fd&quot;&gt;相对于目录描述符的路径，&lt;/a&gt;并且&lt;a href=&quot;#follow-symlinks&quot;&gt;不遵循符号链接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2d794dbe904f4089dea7a0681a102aab31ead7a" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;.</source>
          <target state="translated">该函数可以支持&lt;a href=&quot;#path-fd&quot;&gt;指定文件描述符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="080173ce67b107ec521fc1ec6fed9977e31919b9" translate="yes" xml:space="preserve">
          <source>This function can support &lt;a href=&quot;#path-fd&quot;&gt;specifying a file descriptor&lt;/a&gt;. The descriptor must refer to an opened directory, not an open file.</source>
          <target state="translated">该函数可以支持&lt;a href=&quot;#path-fd&quot;&gt;指定文件描述符&lt;/a&gt;。描述符必须引用打开的目录，而不是打开的文件。</target>
        </trans-unit>
        <trans-unit id="cb5e909c57dce7b157370491ade31ffad496f482" translate="yes" xml:space="preserve">
          <source>This function can support specifying &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt; and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">该函数可以支持指定&lt;a href=&quot;#dir-fd&quot;&gt;相对于目录描述符的路径，&lt;/a&gt;而&lt;a href=&quot;#follow-symlinks&quot;&gt;不是遵循符号链接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b687afc2a9b6992774dda2ac6ff5383d0e794ce7" translate="yes" xml:space="preserve">
          <source>This function can support specifying &lt;em&gt;src_dir_fd&lt;/em&gt; and/or &lt;em&gt;dst_dir_fd&lt;/em&gt; to supply &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;, and &lt;a href=&quot;#follow-symlinks&quot;&gt;not following symlinks&lt;/a&gt;.</source>
          <target state="translated">该函数可以支持指定&lt;em&gt;src_dir_fd&lt;/em&gt;和/或&lt;em&gt;dst_dir_fd&lt;/em&gt;来提供&lt;a href=&quot;#dir-fd&quot;&gt;相对于目录描述符的路径&lt;/a&gt;，并且&lt;a href=&quot;#follow-symlinks&quot;&gt;不遵循符号链接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f41ff7dbc91012c3c5b04b05b34a937ef7d76bc" translate="yes" xml:space="preserve">
          <source>This function can support specifying &lt;em&gt;src_dir_fd&lt;/em&gt; and/or &lt;em&gt;dst_dir_fd&lt;/em&gt; to supply &lt;a href=&quot;#dir-fd&quot;&gt;paths relative to directory descriptors&lt;/a&gt;.</source>
          <target state="translated">该函数可以支持指定&lt;em&gt;src_dir_fd&lt;/em&gt;和/或&lt;em&gt;dst_dir_fd&lt;/em&gt;来提供&lt;a href=&quot;#dir-fd&quot;&gt;相对于目录描述符的路径&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb07224e25025b731bf2f81e5c6d8118346c44be" translate="yes" xml:space="preserve">
          <source>This function cannot be called when another asyncio event loop is running in the same thread.</source>
          <target state="translated">当另一个asyncio事件循环在同一线程中运行时,不能调用该函数。</target>
        </trans-unit>
        <trans-unit id="a2b26c04e5c0956fc2606ac8c6a99fe5f3d8eb37" translate="yes" xml:space="preserve">
          <source>This function causes the &lt;a href=&quot;#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; module to take over the interpreter&amp;rsquo;s default handling for exceptions by setting the value of &lt;a href=&quot;sys#sys.excepthook&quot;&gt;&lt;code&gt;sys.excepthook&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数通过设置&lt;a href=&quot;sys#sys.excepthook&quot;&gt; &lt;code&gt;sys.excepthook&lt;/code&gt; &lt;/a&gt;的值使&lt;a href=&quot;#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; &lt;/a&gt;模块接管解释器对异常的默认处理。</target>
        </trans-unit>
        <trans-unit id="c529d55efe484171205ace1eaae0be4ead749532" translate="yes" xml:space="preserve">
          <source>This function checks the environment variables &lt;code id=&quot;index-0&quot;&gt;LOGNAME&lt;/code&gt;, &lt;code id=&quot;index-1&quot;&gt;USER&lt;/code&gt;, &lt;code id=&quot;index-2&quot;&gt;LNAME&lt;/code&gt; and &lt;code id=&quot;index-3&quot;&gt;USERNAME&lt;/code&gt;, in order, and returns the value of the first one which is set to a non-empty string. If none are set, the login name from the password database is returned on systems which support the &lt;a href=&quot;pwd#module-pwd&quot;&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/a&gt; module, otherwise, an exception is raised.</source>
          <target state="translated">此函数按顺序检查环境变量 &lt;code id=&quot;index-0&quot;&gt;LOGNAME&lt;/code&gt; ， &lt;code id=&quot;index-1&quot;&gt;USER&lt;/code&gt; ， &lt;code id=&quot;index-2&quot;&gt;LNAME&lt;/code&gt; 和 &lt;code id=&quot;index-3&quot;&gt;USERNAME&lt;/code&gt; ，并返回设置为非空字符串的第一个变量的值。如果未设置，则在支持&lt;a href=&quot;pwd#module-pwd&quot;&gt; &lt;code&gt;pwd&lt;/code&gt; &lt;/a&gt;模块的系统上返回密码数据库的登录名，否则会引发异常。</target>
        </trans-unit>
        <trans-unit id="c6efae03f969812467873fc7c658e4f8c65206e8" translate="yes" xml:space="preserve">
          <source>This function creates a mutable character buffer. The returned object is a ctypes array of &lt;a href=&quot;#ctypes.c_char&quot;&gt;&lt;code&gt;c_char&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数创建一个可变字符缓冲区。返回的对象是&lt;a href=&quot;#ctypes.c_char&quot;&gt; &lt;code&gt;c_char&lt;/code&gt; &lt;/a&gt;的ctypes数组。</target>
        </trans-unit>
        <trans-unit id="d85e1f7c1c7feb43831c932856b41d843b092294" translate="yes" xml:space="preserve">
          <source>This function creates a mutable unicode character buffer. The returned object is a ctypes array of &lt;a href=&quot;#ctypes.c_wchar&quot;&gt;&lt;code&gt;c_wchar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数创建一个可变的Unicode字符缓冲区。返回的对象是&lt;a href=&quot;#ctypes.c_wchar&quot;&gt; &lt;code&gt;c_wchar&lt;/code&gt; &lt;/a&gt;的ctypes数组。</target>
        </trans-unit>
        <trans-unit id="cc1bfdda8af45c4752ba7931dbfd50a06388950a" translate="yes" xml:space="preserve">
          <source>This function creates a new pointer instance, pointing to &lt;em&gt;obj&lt;/em&gt;. The returned object is of the type &lt;code&gt;POINTER(type(obj))&lt;/code&gt;.</source>
          <target state="translated">该函数创建一个指向&lt;em&gt;obj&lt;/em&gt;的新指针实例。返回的对象的类型为 &lt;code&gt;POINTER(type(obj))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="660ffac77bae61fa75e6d1bc0e35c474820d48c8" translate="yes" xml:space="preserve">
          <source>This function does not attempt to verify that you have passed the actual mean as &lt;em&gt;xbar&lt;/em&gt;. Using arbitrary values for &lt;em&gt;xbar&lt;/em&gt; can lead to invalid or impossible results.</source>
          <target state="translated">此函数不会尝试验证您是否已将实际平均值传递给&lt;em&gt;xbar&lt;/em&gt;。为&lt;em&gt;xbar&lt;/em&gt;使用任意值可能会导致无效或不可能的结果。</target>
        </trans-unit>
        <trans-unit id="35888f80b9cb879ee93d24c03d6a6db8aa2d710a" translate="yes" xml:space="preserve">
          <source>This function does not check whether the data points are at least &lt;em&gt;interval&lt;/em&gt; apart.</source>
          <target state="translated">此功能不检查数据点是否至少&lt;em&gt;间隔&lt;/em&gt;开。</target>
        </trans-unit>
        <trans-unit id="2c86a6e9fac8ee8c7c704554bc8964eb5395d74d" translate="yes" xml:space="preserve">
          <source>This function does nothing if the root logger already has handlers configured, unless the keyword argument &lt;em&gt;force&lt;/em&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果根记录器已经配置了处理程序，则此函数将不执行任何操作，除非将关键字参数&lt;em&gt;force&lt;/em&gt;设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="514c10027e6febd0ca9b4e0e8abae20168e49aa7" translate="yes" xml:space="preserve">
          <source>This function does the actual work of formatting. It is exposed as a separate function for cases where you want to pass in a predefined dictionary of arguments, rather than unpacking and repacking the dictionary as individual arguments using the &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kwargs&lt;/code&gt; syntax. &lt;a href=&quot;#string.Formatter.vformat&quot;&gt;&lt;code&gt;vformat()&lt;/code&gt;&lt;/a&gt; does the work of breaking up the format string into character data and replacement fields. It calls the various methods described below.</source>
          <target state="translated">此功能执行格式化的实际工作。对于要传递预定义的参数字典的情况，它是作为单独的函数公开的，而不是使用 &lt;code&gt;*args&lt;/code&gt; 和 &lt;code&gt;**kwargs&lt;/code&gt; 语法将字典作为单个参数解压缩和重新打包。&lt;a href=&quot;#string.Formatter.vformat&quot;&gt; &lt;code&gt;vformat()&lt;/code&gt; &lt;/a&gt;可以将格式字符串分解为字符数据和替换字段。它调用下面描述的各种方法。</target>
        </trans-unit>
        <trans-unit id="1957f99cb00cac22539008ce3672f35c832dcd45" translate="yes" xml:space="preserve">
          <source>This function drops you into the debugger at the call site. Specifically, it calls &lt;a href=&quot;sys#sys.breakpointhook&quot;&gt;&lt;code&gt;sys.breakpointhook()&lt;/code&gt;&lt;/a&gt;, passing &lt;code&gt;args&lt;/code&gt; and &lt;code&gt;kws&lt;/code&gt; straight through. By default, &lt;code&gt;sys.breakpointhook()&lt;/code&gt; calls &lt;a href=&quot;pdb#pdb.set_trace&quot;&gt;&lt;code&gt;pdb.set_trace()&lt;/code&gt;&lt;/a&gt; expecting no arguments. In this case, it is purely a convenience function so you don&amp;rsquo;t have to explicitly import &lt;a href=&quot;pdb#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt; or type as much code to enter the debugger. However, &lt;a href=&quot;sys#sys.breakpointhook&quot;&gt;&lt;code&gt;sys.breakpointhook()&lt;/code&gt;&lt;/a&gt; can be set to some other function and &lt;a href=&quot;#breakpoint&quot;&gt;&lt;code&gt;breakpoint()&lt;/code&gt;&lt;/a&gt; will automatically call that, allowing you to drop into the debugger of choice.</source>
          <target state="translated">此功能使您进入呼叫站点的调试器。具体来说，它调用&lt;a href=&quot;sys#sys.breakpointhook&quot;&gt; &lt;code&gt;sys.breakpointhook()&lt;/code&gt; &lt;/a&gt;，直接传递 &lt;code&gt;args&lt;/code&gt; 和 &lt;code&gt;kws&lt;/code&gt; 。默认情况下， &lt;code&gt;sys.breakpointhook()&lt;/code&gt; 调用&lt;a href=&quot;pdb#pdb.set_trace&quot;&gt; &lt;code&gt;pdb.set_trace()&lt;/code&gt; &lt;/a&gt;且不包含任何参数。在这种情况下，它纯粹是一个便利功能，因此您不必显式导入&lt;a href=&quot;pdb#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; &lt;/a&gt;或键入尽可能多的代码即可进入调试器。但是，可以将&lt;a href=&quot;sys#sys.breakpointhook&quot;&gt; &lt;code&gt;sys.breakpointhook()&lt;/code&gt; &lt;/a&gt;设置为其他函数，&lt;a href=&quot;#breakpoint&quot;&gt; &lt;code&gt;breakpoint()&lt;/code&gt; &lt;/a&gt;会自动调用该函数，从而使您可以进入所选的调试器。</target>
        </trans-unit>
        <trans-unit id="c27474e7234eb7c272689b2964d56cb90bf4a48b" translate="yes" xml:space="preserve">
          <source>This function expands XInclude directives. &lt;em&gt;elem&lt;/em&gt; is the root element. &lt;em&gt;loader&lt;/em&gt; is an optional resource loader. If omitted, it defaults to &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. If given, it should be a callable that implements the same interface as &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;base_url&lt;/em&gt; is base URL of the original file, to resolve relative include file references. &lt;em&gt;max_depth&lt;/em&gt; is the maximum number of recursive inclusions. Limited to reduce the risk of malicious content explosion. Pass a negative value to disable the limitation.</source>
          <target state="translated">此功能扩展了XInclude指令。&lt;em&gt;元素&lt;/em&gt;是根元素。&lt;em&gt;loader&lt;/em&gt;是可选的资源加载器。如果省略，则默认为&lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; &lt;/a&gt;。如果给定，它应该是一个可实现与&lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; &lt;/a&gt;相同的接口的可调用对象。&lt;em&gt;base_url&lt;/em&gt;是原始文件的基本URL，用于解析相对包含文件引用。&lt;em&gt;max_depth&lt;/em&gt;是递归包含的最大数量。限制减少恶意内容爆炸的风险。传递负值以禁用限制。</target>
        </trans-unit>
        <trans-unit id="10780002f9c2d93187c1df77ca7ace00a3742b52" translate="yes" xml:space="preserve">
          <source>This function expands XInclude directives. &lt;em&gt;elem&lt;/em&gt; is the root element. &lt;em&gt;loader&lt;/em&gt; is an optional resource loader. If omitted, it defaults to &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. If given, it should be a callable that implements the same interface as &lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt;&lt;code&gt;default_loader()&lt;/code&gt;&lt;/a&gt;. Returns the expanded resource. If the parse mode is &lt;code&gt;&quot;xml&quot;&lt;/code&gt;, this is an ElementTree instance. If the parse mode is &amp;ldquo;text&amp;rdquo;, this is a Unicode string. If the loader fails, it can return None or raise an exception.</source>
          <target state="translated">此功能扩展了XInclude指令。&lt;em&gt;元素&lt;/em&gt;是根元素。&lt;em&gt;loader&lt;/em&gt;是可选的资源加载器。如果省略，则默认为&lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; &lt;/a&gt;。如果给定，它应该是一个可实现与&lt;a href=&quot;#xml.etree.ElementTree.xml.etree.ElementInclude.default_loader&quot;&gt; &lt;code&gt;default_loader()&lt;/code&gt; &lt;/a&gt;相同的接口的可调用对象。返回扩展的资源。如果解析模式为 &lt;code&gt;&quot;xml&quot;&lt;/code&gt; ，则这是ElementTree实例。如果解析模式为&amp;ldquo;文本&amp;rdquo;，则为Unicode字符串。如果加载程序失败，它可以返回None或引发异常。</target>
        </trans-unit>
        <trans-unit id="2d183e0b0a1996b7d266deb457bb1c39a308cf71" translate="yes" xml:space="preserve">
          <source>This function handles UNC paths correctly.</source>
          <target state="translated">该函数正确处理UNC路径。</target>
        </trans-unit>
        <trans-unit id="39d613e79eca353689d0e33384eef7ca7c8b978f" translate="yes" xml:space="preserve">
          <source>This function handles an exception using the default settings (that is, show a report in the browser, but don&amp;rsquo;t log to a file). This can be used when you&amp;rsquo;ve caught an exception and want to report it using &lt;a href=&quot;#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt;. The optional &lt;em&gt;info&lt;/em&gt; argument should be a 3-tuple containing an exception type, exception value, and traceback object, exactly like the tuple returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;. If the &lt;em&gt;info&lt;/em&gt; argument is not supplied, the current exception is obtained from &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数使用默认设置处理异常（即，在浏览器中显示报告，但不登录文件）。当您捕获到异常并想要使用&lt;a href=&quot;#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; &lt;/a&gt;报告它时，可以使用此方法。可选的&lt;em&gt;info&lt;/em&gt;参数应该是一个包含异常类型，异常值和回溯对象的3元组，就像&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;返回的元组一样。如果未提供&lt;em&gt;info&lt;/em&gt;参数，则从&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;获得当前异常。</target>
        </trans-unit>
        <trans-unit id="95c638b427c88a31a4b477cb0d745500c128a308" translate="yes" xml:space="preserve">
          <source>This function handles the exception described by &lt;em&gt;info&lt;/em&gt; (a 3-tuple containing the result of &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;), formatting its traceback as HTML and returning the result as a string. The optional argument &lt;em&gt;context&lt;/em&gt; is the number of lines of context to display around the current line of source code in the traceback; this defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">此函数处理&lt;em&gt;info&lt;/em&gt;描述的异常（一个&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;组，其中包含sys.exc_info（）的结果），将其回溯格式设置为HTML，并将结果作为字符串返回。可选参数&lt;em&gt;context&lt;/em&gt;是在回溯中要在源代码的当前行周围显示的上下文行数；默认为 &lt;code&gt;5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ecec700fa8113f48e6cc0d41277de9fd36d4792" translate="yes" xml:space="preserve">
          <source>This function handles the exception described by &lt;em&gt;info&lt;/em&gt; (a 3-tuple containing the result of &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;), formatting its traceback as text and returning the result as a string. The optional argument &lt;em&gt;context&lt;/em&gt; is the number of lines of context to display around the current line of source code in the traceback; this defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">此函数处理&lt;em&gt;info&lt;/em&gt;描述的异常（一个&lt;a href=&quot;sys#sys.exc_info&quot;&gt; &lt;code&gt;sys.exc_info()&lt;/code&gt; &lt;/a&gt;组，其中包含sys.exc_info（）的结果），将其回溯格式设置为文本，并以字符串形式返回结果。可选参数&lt;em&gt;context&lt;/em&gt;是在回溯中要在源代码的当前行周围显示的上下文行数；默认为 &lt;code&gt;5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e68a59cb55c5c08ef9ff6ef164187eb8c36720fa" translate="yes" xml:space="preserve">
          <source>This function has been &lt;strong&gt;added in Python 3.7&lt;/strong&gt;. Prior to Python 3.7, the low-level &lt;a href=&quot;asyncio-future#asyncio.ensure_future&quot;&gt;&lt;code&gt;asyncio.ensure_future()&lt;/code&gt;&lt;/a&gt; function can be used instead:</source>
          <target state="translated">此功能已&lt;strong&gt;在Python 3.7中添加&lt;/strong&gt;。在Python 3.7之前，可以使用低级&lt;a href=&quot;asyncio-future#asyncio.ensure_future&quot;&gt; &lt;code&gt;asyncio.ensure_future()&lt;/code&gt; &lt;/a&gt;函数：</target>
        </trans-unit>
        <trans-unit id="c966fb5bb08388dce4957a9885cbfef7ae831e47" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">此功能是临时添加的（有关详细信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP411&lt;/strong&gt;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="4989c8386f245adaba6aaa59654b9b058450c784" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">暂时添加了此功能（有关详细信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP411&lt;/strong&gt;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="fc3352bd7899627742c5d818912f6834e1c6bd22" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">此功能是临时添加的（有关详细信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP411&lt;/strong&gt;&lt;/a&gt;。）仅将其用于调试目的。</target>
        </trans-unit>
        <trans-unit id="c694e13b17fe9b728776b26526d323d3236fee9a" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">此功能是临时添加的（有关详细信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP411&lt;/strong&gt;&lt;/a&gt;。）仅将其用于调试目的。</target>
        </trans-unit>
        <trans-unit id="f611ccb8e78599647e771c2dd3f8be5177e91535" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">此功能是临时添加的（有关详细信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;PEP411&lt;/strong&gt;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="d126d1a929fb38de978e3f8c18767068e6441258" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.)</source>
          <target state="translated">暂时添加了此功能（有关详细信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP411&lt;/strong&gt;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="ea1d284a0ca301e5f36ffb15fa62803f51745cd9" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">此功能是临时添加的（有关详细信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-29&quot;&gt;&lt;strong&gt;PEP411&lt;/strong&gt;&lt;/a&gt;。）仅将其用于调试目的。</target>
        </trans-unit>
        <trans-unit id="4f1cdae04c18641f66e088e05497aac72c454f82" translate="yes" xml:space="preserve">
          <source>This function has been added on a provisional basis (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;PEP 411&lt;/strong&gt;&lt;/a&gt; for details.) Use it only for debugging purposes.</source>
          <target state="translated">此功能是临时添加的（有关详细信息，请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0411&quot; id=&quot;index-30&quot;&gt;&lt;strong&gt;PEP411&lt;/strong&gt;&lt;/a&gt;。）仅将其用于调试目的。</target>
        </trans-unit>
        <trans-unit id="ef87984f54425c7e20ecc28f19c814ccf05ac527" translate="yes" xml:space="preserve">
          <source>This function implements the standard &lt;code&gt;.mo&lt;/code&gt; file search algorithm. It takes a &lt;em&gt;domain&lt;/em&gt;, identical to what &lt;a href=&quot;#gettext.textdomain&quot;&gt;&lt;code&gt;textdomain()&lt;/code&gt;&lt;/a&gt; takes. Optional &lt;em&gt;localedir&lt;/em&gt; is as in &lt;a href=&quot;#gettext.bindtextdomain&quot;&gt;&lt;code&gt;bindtextdomain()&lt;/code&gt;&lt;/a&gt;. Optional &lt;em&gt;languages&lt;/em&gt; is a list of strings, where each string is a language code.</source>
          <target state="translated">此函数实现标准的 &lt;code&gt;.mo&lt;/code&gt; 文件搜索算法。它需要一个&lt;em&gt;domain&lt;/em&gt;，与&lt;a href=&quot;#gettext.textdomain&quot;&gt; &lt;code&gt;textdomain()&lt;/code&gt; &lt;/a&gt;相同。可选&lt;em&gt;LOCALEDIR&lt;/em&gt;是在&lt;a href=&quot;#gettext.bindtextdomain&quot;&gt; &lt;code&gt;bindtextdomain()&lt;/code&gt; &lt;/a&gt;。可选&lt;em&gt;语言&lt;/em&gt;是字符串列表，其中每个字符串都是语言代码。</target>
        </trans-unit>
        <trans-unit id="172dadb9dc85c7a090d62a6f27fdb75709950244" translate="yes" xml:space="preserve">
          <source>This function imports and returns a fresh copy of the named Python module by removing the named module from &lt;code&gt;sys.modules&lt;/code&gt; before doing the import. Note that unlike &lt;code&gt;reload()&lt;/code&gt;, the original module is not affected by this operation.</source>
          <target state="translated">此函数通过在导入之前从 &lt;code&gt;sys.modules&lt;/code&gt; 中删除命名模块来导入并返回命名Python模块的新副本。请注意，与 &lt;code&gt;reload()&lt;/code&gt; 不同，原始模块不受此操作影响。</target>
        </trans-unit>
        <trans-unit id="e85250eaece03f8dc4805c01a0978aa0691dd7c0" translate="yes" xml:space="preserve">
          <source>This function imports and returns the named module. Unlike a normal import, this function raises &lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt;&lt;code&gt;unittest.SkipTest&lt;/code&gt;&lt;/a&gt; if the module cannot be imported.</source>
          <target state="translated">该函数导入并返回命名模块。与正常导入不同，此函数在无法导入模块时引发&lt;a href=&quot;unittest#unittest.SkipTest&quot;&gt; &lt;code&gt;unittest.SkipTest&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe663ee4d39048854bb84cb63b91ff780333b588" translate="yes" xml:space="preserve">
          <source>This function is Unix specific.</source>
          <target state="translated">这个功能是Unix特有的。</target>
        </trans-unit>
        <trans-unit id="9e01cbde143f3e80838cbf4287afc5bd594fa7e9" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-with&quot;&gt;&lt;code&gt;async with&lt;/code&gt;&lt;/a&gt; statement asynchronous context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;__aenter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;__aexit__()&lt;/code&gt;&lt;/a&gt; methods. It must be applied to an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">此函数是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;装饰器&lt;/a&gt;，可用于为&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-with&quot;&gt; &lt;code&gt;async with&lt;/code&gt; &lt;/a&gt;语句异步上下文管理器的异步定义工厂函数，而无需创建类或单独的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;__aenter__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;__aexit__()&lt;/code&gt; &lt;/a&gt;方法。它必须应用于&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-generator&quot;&gt;异步生成器&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="149b80885bdd0b63fad9b906d671077767527f43" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">这个函数是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;装饰&lt;/a&gt;，可以用来定义一个工厂函数&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句上下文管理，而无需创建一个类或单独&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="0c899e79e3c0eabc9cc8a8a015050464bb0041cf" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that is used to add generated &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s to classes, as described below.</source>
          <target state="translated">该函数是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;装饰器&lt;/a&gt;，用于将生成的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;特殊方法&lt;/a&gt;添加到类，如下所述。</target>
        </trans-unit>
        <trans-unit id="2e3fe8c538289c53d72e2454563eb1a5fc63abdc" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-with&quot;&gt;&lt;code&gt;async with&lt;/code&gt;&lt;/a&gt; statement asynchronous context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt;&lt;code&gt;__aenter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt;&lt;code&gt;__aexit__()&lt;/code&gt;&lt;/a&gt; methods. It must be applied to an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;asynchronous generator&lt;/a&gt; function.</source>
          <target state="translated">此函数是一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;装饰器&lt;/a&gt;，可用于为&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-with&quot;&gt; &lt;code&gt;async with&lt;/code&gt; &lt;/a&gt;语句异步上下文管理器的异步定义工厂函数，而无需创建类或单独的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aenter__&quot;&gt; &lt;code&gt;__aenter__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__aexit__&quot;&gt; &lt;code&gt;__aexit__()&lt;/code&gt; &lt;/a&gt;方法。必须将其应用于&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-generator&quot;&gt;异步生成器&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="4ca5630b6c336007b5871876d1ee539f6a42c7a2" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that can be used to define a factory function for &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement context managers, without needing to create a class or separate &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">这个函数是一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;装饰&lt;/a&gt;，可以用来定义一个工厂函数&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句上下文管理，而无需创建一个类或单独&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e011a2dbce915f12a3fd370d4abddfb575b29929" translate="yes" xml:space="preserve">
          <source>This function is a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; that is used to add generated &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s to classes, as described below.</source>
          <target state="translated">该函数是一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-decorator&quot;&gt;装饰器&lt;/a&gt;，用于将生成的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;特殊方法&lt;/a&gt;添加到类中，如下所述。</target>
        </trans-unit>
        <trans-unit id="faffa47c08d7418284e943db0a2194e64073b3a1" translate="yes" xml:space="preserve">
          <source>This function is a small but complete WSGI application that returns a text page containing the message &amp;ldquo;Hello world!&amp;rdquo; and a list of the key/value pairs provided in the &lt;em&gt;environ&lt;/em&gt; parameter. It&amp;rsquo;s useful for verifying that a WSGI server (such as &lt;a href=&quot;#module-wsgiref.simple_server&quot;&gt;&lt;code&gt;wsgiref.simple_server&lt;/code&gt;&lt;/a&gt;) is able to run a simple WSGI application correctly.</source>
          <target state="translated">该函数是一个小型但完整的WSGI应用程序，它返回一个包含消息&amp;ldquo; Hello world！&amp;rdquo;的文本页面。以及&lt;em&gt;environ&lt;/em&gt;参数中提供的键/值对的列表。这对于验证WSGI服务器（例如&lt;a href=&quot;#module-wsgiref.simple_server&quot;&gt; &lt;code&gt;wsgiref.simple_server&lt;/code&gt; &lt;/a&gt;）是否能够正确运行简单的WSGI应用程序很有用。</target>
        </trans-unit>
        <trans-unit id="d515f195df4ddcf5d5033ae67b93ed67290c7488" translate="yes" xml:space="preserve">
          <source>This function is added to the built-in namespace by the &lt;a href=&quot;site#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">该功能由&lt;a href=&quot;site#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt;模块添加到内置名称空间中。</target>
        </trans-unit>
        <trans-unit id="64628f06fee9b7aeeaa8847c7406b08c68a6b088" translate="yes" xml:space="preserve">
          <source>This function is analogous to &lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt;&lt;code&gt;getgeneratorlocals()&lt;/code&gt;&lt;/a&gt;, but works for coroutine objects created by &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">此函数类似于&lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt; &lt;code&gt;getgeneratorlocals()&lt;/code&gt; &lt;/a&gt;，但适用于由&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;函数创建的协程对象。</target>
        </trans-unit>
        <trans-unit id="0ed125fdde6671777d61cc5fcfbfba3affe8b52e" translate="yes" xml:space="preserve">
          <source>This function is analogous to &lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt;&lt;code&gt;getgeneratorlocals()&lt;/code&gt;&lt;/a&gt;, but works for coroutine objects created by &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt;&lt;code&gt;async def&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">此函数类似于&lt;a href=&quot;#inspect.getgeneratorlocals&quot;&gt; &lt;code&gt;getgeneratorlocals()&lt;/code&gt; &lt;/a&gt;，但适用于由&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#async-def&quot;&gt; &lt;code&gt;async def&lt;/code&gt; &lt;/a&gt;函数创建的协程对象。</target>
        </trans-unit>
        <trans-unit id="03648b49b7e97f2705e79f86b31e7423f5f4b8ad" translate="yes" xml:space="preserve">
          <source>This function is called if the &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt;&lt;code&gt;RequestHandlerClass&lt;/code&gt;&lt;/a&gt; instance raises an exception. The default action is to print the traceback to standard error and continue handling further requests.</source>
          <target state="translated">如果&lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt; &lt;code&gt;RequestHandlerClass&lt;/code&gt; &lt;/a&gt;实例的&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;方法引发异常，则调用此函数。默认操作是将回溯打印到标准错误，并继续处理其他请求。</target>
        </trans-unit>
        <trans-unit id="25f184942d28c9f4cf30b9129690c3f39a8da58c" translate="yes" xml:space="preserve">
          <source>This function is called unconditionally after &lt;code&gt;tearDownModule()&lt;/code&gt;, or after &lt;code&gt;setUpModule()&lt;/code&gt; if &lt;code&gt;setUpModule()&lt;/code&gt; raises an exception.</source>
          <target state="translated">该功能后无条件地称为 &lt;code&gt;tearDownModule()&lt;/code&gt; ，或在 &lt;code&gt;setUpModule()&lt;/code&gt; 如果 &lt;code&gt;setUpModule()&lt;/code&gt; 抛出一个例外。</target>
        </trans-unit>
        <trans-unit id="00dac4aa5f98112430b5f2dcd53d84ccb136fadf" translate="yes" xml:space="preserve">
          <source>This function is called when the &lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt; attribute has been set to a value other than &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; and the timeout period has passed with no requests being received. The default action for forking servers is to collect the status of any child processes that have exited, while in threading servers this method does nothing.</source>
          <target state="translated">当&lt;a href=&quot;#socketserver.BaseServer.timeout&quot;&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/a&gt;属性已设置为除&amp;ldquo; &lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;以外的其他值并且超时时间已过且没有收到请求时，将调用此函数。分叉服务器的默认操作是收集已退出的所有子进程的状态，而在线程服务器中，此方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="8ca63d1075eb1aceb700174dca580627844286b7" translate="yes" xml:space="preserve">
          <source>This function is identical to the &lt;a href=&quot;#fcntl.fcntl&quot;&gt;&lt;code&gt;fcntl()&lt;/code&gt;&lt;/a&gt; function, except that the argument handling is even more complicated.</source>
          <target state="translated">该函数与&lt;a href=&quot;#fcntl.fcntl&quot;&gt; &lt;code&gt;fcntl()&lt;/code&gt; &lt;/a&gt;函数相同，不同之处在于参数处理甚至更加复杂。</target>
        </trans-unit>
        <trans-unit id="58ba7af41df3064b3d3f217ed825d3dd8ed01388" translate="yes" xml:space="preserve">
          <source>This function is implemented using a watchdog thread.</source>
          <target state="translated">该功能使用看门狗线程实现。</target>
        </trans-unit>
        <trans-unit id="64cad07e3c93c343820394a2eee72ae7a507e0bd" translate="yes" xml:space="preserve">
          <source>This function is installed as the trace function of debugged frames. Its return value is the new trace function (in most cases, that is, itself).</source>
          <target state="translated">这个函数是作为调试帧的跟踪函数安装的,它的返回值是新的跟踪函数(大多数情况下,就是自己)。它的返回值是新的跟踪函数(在大多数情况下,也就是自己)。</target>
        </trans-unit>
        <trans-unit id="d0b78e0190c2580f2856b7455b5b0eafaf4ddb3d" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O and must be applied to a file descriptor as returned by &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.pipe&quot;&gt;&lt;code&gt;pipe()&lt;/code&gt;&lt;/a&gt;. To close a &amp;ldquo;file object&amp;rdquo; returned by the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;, use its &lt;a href=&quot;io#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此函数用于低级I / O，并且必须应用于&lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#os.pipe&quot;&gt; &lt;code&gt;pipe()&lt;/code&gt; &lt;/a&gt;返回的文件描述符。要关闭内置函数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt;返回的&amp;ldquo;文件对象&amp;rdquo; ，请使用其&lt;a href=&quot;io#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="ade6f6e290e3dc96f0eb9460be14368d6afe280c" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O and must be applied to a file descriptor as returned by &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.pipe&quot;&gt;&lt;code&gt;pipe()&lt;/code&gt;&lt;/a&gt;. To read a &amp;ldquo;file object&amp;rdquo; returned by the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;sys#sys.stdin&quot;&gt;&lt;code&gt;sys.stdin&lt;/code&gt;&lt;/a&gt;, use its &lt;code&gt;read()&lt;/code&gt; or &lt;code&gt;readline()&lt;/code&gt; methods.</source>
          <target state="translated">此函数用于低级I / O，并且必须应用于&lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#os.pipe&quot;&gt; &lt;code&gt;pipe()&lt;/code&gt; &lt;/a&gt;返回的文件描述符。要读取内置函数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;sys#sys.stdin&quot;&gt; &lt;code&gt;sys.stdin&lt;/code&gt; &lt;/a&gt;返回的&amp;ldquo;文件对象&amp;rdquo; ，请使用其 &lt;code&gt;read()&lt;/code&gt; 或 &lt;code&gt;readline()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="2c704116a76ce54c12e05f3b6967028eb14b6cc5" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O and must be applied to a file descriptor as returned by &lt;a href=&quot;#os.open&quot;&gt;&lt;code&gt;os.open()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.pipe&quot;&gt;&lt;code&gt;pipe()&lt;/code&gt;&lt;/a&gt;. To write a &amp;ldquo;file object&amp;rdquo; returned by the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; or by &lt;a href=&quot;#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt;, use its &lt;code&gt;write()&lt;/code&gt; method.</source>
          <target state="translated">此函数用于低级I / O，并且必须应用于&lt;a href=&quot;#os.open&quot;&gt; &lt;code&gt;os.open()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#os.pipe&quot;&gt; &lt;code&gt;pipe()&lt;/code&gt; &lt;/a&gt;返回的文件描述符。要编写由内置函数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; &lt;/a&gt;返回的&amp;ldquo;文件对象&amp;rdquo; ，请使用其 &lt;code&gt;write()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="bacd28868867d67c5d6723d7c3178c25e186f11d" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O. For normal usage, use the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, which returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; with &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt; methods (and many more). To wrap a file descriptor in a file object, use &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此功能适用于低级I / O。为了正常使用，请使用内置函数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;，该&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;函数&lt;/a&gt;使用 &lt;code&gt;read()&lt;/code&gt; 和 &lt;code&gt;write()&lt;/code&gt; 方法（以及更多方法）返回文件对象。要将文件描述符包装在文件对象中，请使用&lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="649aa99d11ac4fa14cd3cd72d6032323e479b243" translate="yes" xml:space="preserve">
          <source>This function is intended for low-level I/O. For normal usage, use the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, which returns a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; with &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;write()&lt;/code&gt; methods (and many more). To wrap a file descriptor in a file object, use &lt;a href=&quot;#os.fdopen&quot;&gt;&lt;code&gt;fdopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此功能适用于低级I / O。为了正常使用，请使用内置函数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;，该函数返回具有 &lt;code&gt;read()&lt;/code&gt; 和 &lt;code&gt;write()&lt;/code&gt; 方法（以及更多方法）的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。要将文件描述符包装在文件对象中，请使用&lt;a href=&quot;#os.fdopen&quot;&gt; &lt;code&gt;fdopen()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="60efcb44e54e053b402648036b9dc38b2898562c" translate="yes" xml:space="preserve">
          <source>This function is invoked by the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement. It can be replaced (by importing the &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; module and assigning to &lt;code&gt;builtins.__import__&lt;/code&gt;) in order to change semantics of the &lt;code&gt;import&lt;/code&gt; statement, but doing so is &lt;strong&gt;strongly&lt;/strong&gt; discouraged as it is usually simpler to use import hooks (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;) to attain the same goals and does not cause issues with code which assumes the default import implementation is in use. Direct use of &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; is also discouraged in favor of &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此功能由&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句调用。它可以取代（通过导入&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;模块，并分配给 &lt;code&gt;builtins.__import__&lt;/code&gt; ），以便在变化语义 &lt;code&gt;import&lt;/code&gt; 的声明，但这样做是&lt;strong&gt;极力&lt;/strong&gt;劝阻，因为它通常是易于使用进口挂钩（见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;）达到达到相同的目标，并且不会导致假定使用默认导入实现的代码出现问题。不建议直接使用&lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;来支持&lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7f0c76df06b8f2f73d67731eb7ed6c7ceae8224" translate="yes" xml:space="preserve">
          <source>This function is invoked by the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement. It can be replaced (by importing the &lt;a href=&quot;builtins#module-builtins&quot;&gt;&lt;code&gt;builtins&lt;/code&gt;&lt;/a&gt; module and assigning to &lt;code&gt;builtins.__import__&lt;/code&gt;) in order to change semantics of the &lt;code&gt;import&lt;/code&gt; statement, but doing so is &lt;strong&gt;strongly&lt;/strong&gt; discouraged as it is usually simpler to use import hooks (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;) to attain the same goals and does not cause issues with code which assumes the default import implementation is in use. Direct use of &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; is also discouraged in favor of &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数由&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句调用。它可以取代（通过导入&lt;a href=&quot;builtins#module-builtins&quot;&gt; &lt;code&gt;builtins&lt;/code&gt; &lt;/a&gt;模块，并分配给 &lt;code&gt;builtins.__import__&lt;/code&gt; ），以便在变化语义 &lt;code&gt;import&lt;/code&gt; 的声明，但这样做是&lt;strong&gt;极力&lt;/strong&gt;劝阻，因为它通常是易于使用进口挂钩（见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0302&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;PEP 302&lt;/strong&gt;&lt;/a&gt;）达到达到相同的目标，并且不会导致假定使用默认导入实现的代码出现问题。不建议直接使用&lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;来支持&lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51460bb18486d76dae169e7512a607a5c185a142" translate="yes" xml:space="preserve">
          <source>This function is meant to be called from a different OS thread than the one where the event loop is running. Example:</source>
          <target state="translated">这个函数是为了在不同的OS线程中调用,而不是在事件循环运行的线程中调用。例子:</target>
        </trans-unit>
        <trans-unit id="6474c1567381e3873ebbeca05d51f7ab42d23453" translate="yes" xml:space="preserve">
          <source>This function is not available on MacOS.</source>
          <target state="translated">此功能在MacOS上不可用。</target>
        </trans-unit>
        <trans-unit id="62d7cf1ebeba361fc0a928442d4acc718cf42922" translate="yes" xml:space="preserve">
          <source>This function is not strictly required, because any Python mechanism for creating a new class with &lt;code&gt;__annotations__&lt;/code&gt; can then apply the &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; function to convert that class to a dataclass. This function is provided as a convenience. For example:</source>
          <target state="translated">并非严格要求此函数，因为使用 &lt;code&gt;__annotations__&lt;/code&gt; 创建新类的任何Python机制都可以应用dataclass &lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;函数将该类转换为数据类。提供此功能是为了方便。例如：</target>
        </trans-unit>
        <trans-unit id="8105687cf78676b920dca7d0135677e8cf83f7b7" translate="yes" xml:space="preserve">
          <source>This function is preferred over &lt;a href=&quot;#datetime.datetime.today&quot;&gt;&lt;code&gt;today()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#datetime.datetime.utcnow&quot;&gt;&lt;code&gt;utcnow()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此功能优于&lt;a href=&quot;#datetime.datetime.today&quot;&gt; &lt;code&gt;today()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#datetime.datetime.utcnow&quot;&gt; &lt;code&gt;utcnow()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2534bb784a341d57cb3cfff1ca73e4950b0ffd8e" translate="yes" xml:space="preserve">
          <source>This function is preferred over using &lt;a href=&quot;types#types.ModuleType&quot;&gt;&lt;code&gt;types.ModuleType&lt;/code&gt;&lt;/a&gt; to create a new module as &lt;strong&gt;spec&lt;/strong&gt; is used to set as many import-controlled attributes on the module as possible.</source>
          <target state="translated">此功能优于使用&lt;a href=&quot;types#types.ModuleType&quot;&gt; &lt;code&gt;types.ModuleType&lt;/code&gt; &lt;/a&gt;来创建新模块，因为&lt;strong&gt;spec&lt;/strong&gt;用于在模块上设置尽可能多的导入控制属性。</target>
        </trans-unit>
        <trans-unit id="80d7cd1acc5c70b379682dbabb5d9e05ff3a4fdd" translate="yes" xml:space="preserve">
          <source>This function is roughly equivalent to the following code, except that the actual implementation does not build up intermediate results in memory:</source>
          <target state="translated">这个函数大致相当于下面的代码,只是实际实现时并没有在内存中建立中间结果。</target>
        </trans-unit>
        <trans-unit id="f913c0b361e7ba9728f0f9afaaf9d1c422afa44d" translate="yes" xml:space="preserve">
          <source>This function is semantically identical to &lt;a href=&quot;#os.unlink&quot;&gt;&lt;code&gt;unlink()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该函数在语义上与&lt;a href=&quot;#os.unlink&quot;&gt; &lt;code&gt;unlink()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="0d2662aab731484f469e5d0941ebd213855793da" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;a href=&quot;#profile.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;, with added arguments to supply the globals and locals dictionaries for the &lt;em&gt;command&lt;/em&gt; string. This routine executes:</source>
          <target state="translated">此函数类似于&lt;a href=&quot;#profile.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;，带有添加的参数来为&lt;em&gt;命令&lt;/em&gt;字符串提供全局和局部字典。该例程执行：</target>
        </trans-unit>
        <trans-unit id="fc117a48981b83bb2298193271331492a011693b" translate="yes" xml:space="preserve">
          <source>This function is similar to the cast operator in C. It returns a new instance of &lt;em&gt;type&lt;/em&gt; which points to the same memory block as &lt;em&gt;obj&lt;/em&gt;. &lt;em&gt;type&lt;/em&gt; must be a pointer type, and &lt;em&gt;obj&lt;/em&gt; must be an object that can be interpreted as a pointer.</source>
          <target state="translated">此函数类似于C中的强制转换运算符。它返回一个&lt;em&gt;类型&lt;/em&gt;新的实例，该实例指向与&lt;em&gt;obj&lt;/em&gt;相同的内存块。&lt;em&gt;type&lt;/em&gt;必须是指针类型，而&lt;em&gt;obj&lt;/em&gt;必须是可以解释为指针的对象。</target>
        </trans-unit>
        <trans-unit id="29760dd338313a7538bf9a66508800e3e6ec0a67" translate="yes" xml:space="preserve">
          <source>This function is the original interface and is only kept for back compatibility. It returns a filtered version of the following.</source>
          <target state="translated">这个函数是原来的接口,只是为了后面的兼容而保留。它返回一个过滤后的版本。</target>
        </trans-unit>
        <trans-unit id="c21cc18b67d5b59058325f10549a9243c64acf72" translate="yes" xml:space="preserve">
          <source>This function is used by &lt;a href=&quot;#tabnanny.check&quot;&gt;&lt;code&gt;check()&lt;/code&gt;&lt;/a&gt; to process tokens generated by the &lt;a href=&quot;tokenize#module-tokenize&quot;&gt;&lt;code&gt;tokenize&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;a href=&quot;#tabnanny.check&quot;&gt; &lt;code&gt;check()&lt;/code&gt; &lt;/a&gt;使用此函数来处理由&lt;a href=&quot;tokenize#module-tokenize&quot;&gt; &lt;code&gt;tokenize&lt;/code&gt; &lt;/a&gt;模块生成的令牌。</target>
        </trans-unit>
        <trans-unit id="f38d1e6f628d8e4e90ac779c811e7c28a0d89f12" translate="yes" xml:space="preserve">
          <source>This function is used internally by other functions (see below), but can also be useful when you want to transform an interactive Python session into a Python script.</source>
          <target state="translated">这个函数在内部被其他函数使用 (见下文),但当你想把一个交互式的 Python 会话转换为 Python 脚本时,这个函数也很有用。</target>
        </trans-unit>
        <trans-unit id="c5f42493be0aa8250eeba0fe74603ddafd1c1e22" translate="yes" xml:space="preserve">
          <source>This function is used to turn the capture of warnings by logging on and off.</source>
          <target state="translated">该功能用于通过登录开启和关闭捕获警告。</target>
        </trans-unit>
        <trans-unit id="0e291635b8b9e6f792c79b608f8ce39c024f95cf" translate="yes" xml:space="preserve">
          <source>This function is useful for programs that want to emulate Python&amp;rsquo;s interpreter main loop (a.k.a. the read-eval-print loop). The tricky part is to determine when the user has entered an incomplete command that can be completed by entering more text (as opposed to a complete command or a syntax error). This function &lt;em&gt;almost&lt;/em&gt; always makes the same decision as the real interpreter main loop.</source>
          <target state="translated">对于要模拟Python解释器主循环（又称为read-eval-print循环）的程序，此功能很有用。棘手的部分是确定用户何时输入了不完整的命令，可以通过输入更多文本来完成该命令（而不是完整的命令或语法错误）。这个函数&lt;em&gt;几乎&lt;/em&gt;总是做出与真实解释器主循环相同的决定。</target>
        </trans-unit>
        <trans-unit id="4346431163cf39d1256a2486c282563a29187752" translate="yes" xml:space="preserve">
          <source>This function is useful when creating a gateway that wraps CGI or a CGI-like protocol such as FastCGI. Typically, servers providing such protocols will include a &lt;code&gt;HTTPS&lt;/code&gt; variable with a value of &amp;ldquo;1&amp;rdquo;, &amp;ldquo;yes&amp;rdquo;, or &amp;ldquo;on&amp;rdquo; when a request is received via SSL. So, this function returns &amp;ldquo;https&amp;rdquo; if such a value is found, and &amp;ldquo;http&amp;rdquo; otherwise.</source>
          <target state="translated">当创建包装CGI或类似CGI的协议（如FastCGI）的网关时，此功能很有用。通常，当通过SSL接收到请求时，提供此类协议的服务器将包含一个 &lt;code&gt;HTTPS&lt;/code&gt; 变量，其值为&amp;ldquo; 1&amp;rdquo;，&amp;ldquo; yes&amp;rdquo;或&amp;ldquo; on&amp;rdquo;。因此，如果找到该值，此函数将返回&amp;ldquo; https&amp;rdquo;，否则返回&amp;ldquo; http&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5407416b354a3a637ec255aca17cebdd4a5f0bcb" translate="yes" xml:space="preserve">
          <source>This function is useful when generating attribute values for HTML or any SGML using the reference concrete syntax.</source>
          <target state="translated">当使用参考具体语法为HTML或任何SGML生成属性值时,该函数非常有用。</target>
        </trans-unit>
        <trans-unit id="60d507fa2bc53284a2d250ec94185652719e0652" translate="yes" xml:space="preserve">
          <source>This function looks for items in &lt;em&gt;bases&lt;/em&gt; that are not instances of &lt;a href=&quot;functions#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, and returns a tuple where each such object that has an &lt;code&gt;__mro_entries__&lt;/code&gt; method is replaced with an unpacked result of calling this method. If a &lt;em&gt;bases&lt;/em&gt; item is an instance of &lt;a href=&quot;functions#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, or it doesn&amp;rsquo;t have an &lt;code&gt;__mro_entries__&lt;/code&gt; method, then it is included in the return tuple unchanged.</source>
          <target state="translated">此函数在不是&lt;a href=&quot;functions#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;实例的&lt;em&gt;库&lt;/em&gt;中查找项目，并返回一个元组，其中将每个具有 &lt;code&gt;__mro_entries__&lt;/code&gt; 方法的此类对象替换为调用此方法的解压缩结果。如果&lt;em&gt;基础&lt;/em&gt;产品的实例&lt;a href=&quot;functions#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;，或者不具有 &lt;code&gt;__mro_entries__&lt;/code&gt; 方法，那么它被包含在返回的元组保持不变。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1eb9e57decc223afc31c89f7e7f3597b5606d185" translate="yes" xml:space="preserve">
          <source>This function may open a large number of files, as the best way to determine if a file on the time zone path is a valid time zone is to read the &amp;ldquo;magic string&amp;rdquo; at the beginning.</source>
          <target state="translated">此功能可能会打开大量文件，因为确定时区路径上的文件是否为有效时区的最佳方法是在开始时读取&amp;ldquo;魔术字符串&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f333259d8228afee74ea63cb8cf96d3f815a21d2" translate="yes" xml:space="preserve">
          <source>This function may return invalid paths because it works a character at a time. To obtain a valid path, see &lt;a href=&quot;#os.path.commonpath&quot;&gt;&lt;code&gt;commonpath()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数一次返回一个字符，因此可能返回无效路径。要获取有效路径，请参见&lt;a href=&quot;#os.path.commonpath&quot;&gt; &lt;code&gt;commonpath()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a01d7176187eda18b9374489bf46391852e732ec" translate="yes" xml:space="preserve">
          <source>This function mirrors &lt;a href=&quot;#parser.isexpr&quot;&gt;&lt;code&gt;isexpr()&lt;/code&gt;&lt;/a&gt; in that it reports whether an ST object represents an &lt;code&gt;'exec'&lt;/code&gt; form, commonly known as a &amp;ldquo;suite.&amp;rdquo; It is not safe to assume that this function is equivalent to &lt;code&gt;not isexpr(st)&lt;/code&gt;, as additional syntactic fragments may be supported in the future.</source>
          <target state="translated">此函数反映了&lt;a href=&quot;#parser.isexpr&quot;&gt; &lt;code&gt;isexpr()&lt;/code&gt; &lt;/a&gt;，因为它报告ST对象是否代表 &lt;code&gt;'exec'&lt;/code&gt; 形式，通常称为&amp;ldquo;套件&amp;rdquo;。不安全地假定此函数等效于 &lt;code&gt;not isexpr(st)&lt;/code&gt; ，这是不安全的，因为将来可能会支持其他语法片段。</target>
        </trans-unit>
        <trans-unit id="c38aaa319da4fa690e529cb8f63297f25c44ad44" translate="yes" xml:space="preserve">
          <source>This function must do all the work required to service a request. The default implementation does nothing. Several instance attributes are available to it; the request is available as &lt;code&gt;self.request&lt;/code&gt;; the client address as &lt;code&gt;self.client_address&lt;/code&gt;; and the server instance as &lt;code&gt;self.server&lt;/code&gt;, in case it needs access to per-server information.</source>
          <target state="translated">此功能必须完成服务请求所需的所有工作。默认实现不执行任何操作。它可以使用几个实例属性。该请求可以作为 &lt;code&gt;self.request&lt;/code&gt; 获得；客户地址为 &lt;code&gt;self.client_address&lt;/code&gt; ; 服务器实例为 &lt;code&gt;self.server&lt;/code&gt; ，以防需要访问每服务器信息。</target>
        </trans-unit>
        <trans-unit id="1d0fe82f383fe8455cd84dddbd167e438d74db76" translate="yes" xml:space="preserve">
          <source>This function must not be used for the replacement string in &lt;a href=&quot;#re.sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#re.subn&quot;&gt;&lt;code&gt;subn()&lt;/code&gt;&lt;/a&gt;, only backslashes should be escaped. For example:</source>
          <target state="translated">此函数不得用于&lt;a href=&quot;#re.sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#re.subn&quot;&gt; &lt;code&gt;subn()&lt;/code&gt; 中&lt;/a&gt;的替换字符串，只能转义反斜杠。例如：</target>
        </trans-unit>
        <trans-unit id="50da3b2b1a3e4d5d04267b56a098ab7684af854a" translate="yes" xml:space="preserve">
          <source>This function normally follows symlinks; to stat a symlink add the argument &lt;code&gt;follow_symlinks=False&lt;/code&gt;, or use &lt;a href=&quot;#os.lstat&quot;&gt;&lt;code&gt;lstat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此功能通常遵循符号链接。要统计符号链接，请添加参数 &lt;code&gt;follow_symlinks=False&lt;/code&gt; ，或使用&lt;a href=&quot;#os.lstat&quot;&gt; &lt;code&gt;lstat()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="21aa14b61079b0b0977f0bf126fc678541935681" translate="yes" xml:space="preserve">
          <source>This function only includes canonical zone names and does not include &amp;ldquo;special&amp;rdquo; zones such as those under the &lt;code&gt;posix/&lt;/code&gt; and &lt;code&gt;right/&lt;/code&gt; directories, or the &lt;code&gt;posixrules&lt;/code&gt; zone.</source>
          <target state="translated">此功能仅包括规范区域名称，不包括&amp;ldquo;特殊&amp;rdquo;区域，例如 &lt;code&gt;posix/&lt;/code&gt; 和 &lt;code&gt;right/&lt;/code&gt; 目录下的区域或 &lt;code&gt;posixrules&lt;/code&gt; 区域。</target>
        </trans-unit>
        <trans-unit id="61fc230cd44595c912517a969faf5b47d610995f" translate="yes" xml:space="preserve">
          <source>This function only modifies the recorded peak size, and does not modify or clear any traces, unlike &lt;a href=&quot;#tracemalloc.clear_traces&quot;&gt;&lt;code&gt;clear_traces()&lt;/code&gt;&lt;/a&gt;. Snapshots taken with &lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt;&lt;code&gt;take_snapshot()&lt;/code&gt;&lt;/a&gt; before a call to &lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt;&lt;code&gt;reset_peak()&lt;/code&gt;&lt;/a&gt; can be meaningfully compared to snapshots taken after the call.</source>
          <target state="translated">与&lt;a href=&quot;#tracemalloc.clear_traces&quot;&gt; &lt;code&gt;clear_traces()&lt;/code&gt; &lt;/a&gt;不同，此函数仅修改记录的峰大小，而不修改或清除任何迹线。与拍摄快照&lt;a href=&quot;#tracemalloc.take_snapshot&quot;&gt; &lt;code&gt;take_snapshot()&lt;/code&gt; &lt;/a&gt;来调用之前&lt;a href=&quot;#tracemalloc.reset_peak&quot;&gt; &lt;code&gt;reset_peak()&lt;/code&gt; &lt;/a&gt;可以进行有意义的比较的号召后的快照。</target>
        </trans-unit>
        <trans-unit id="d52d4a6b72fa52058f61845c53226f55f2864d31" translate="yes" xml:space="preserve">
          <source>This function operates exactly as &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt; does, except that data is spooled in memory until the file size exceeds &lt;em&gt;max_size&lt;/em&gt;, or until the file&amp;rsquo;s &lt;code&gt;fileno()&lt;/code&gt; method is called, at which point the contents are written to disk and operation proceeds as with &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数的操作与&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; &lt;/a&gt;完全相同，只是将数据假脱机到内存中，直到文件大小超过&lt;em&gt;max_size&lt;/em&gt;为止，或者直到调用文件的 &lt;code&gt;fileno()&lt;/code&gt; 方法为止，这时将内容写入磁盘，并且操作与&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b28cf0adbd47beaf5136380c661ee70913d0243" translate="yes" xml:space="preserve">
          <source>This function operates exactly as &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt; does, except that the file is guaranteed to have a visible name in the file system (on Unix, the directory entry is not unlinked). That name can be retrieved from the &lt;code&gt;name&lt;/code&gt; attribute of the returned file-like object. Whether the name can be used to open the file a second time, while the named temporary file is still open, varies across platforms (it can be so used on Unix; it cannot on Windows NT or later). If &lt;em&gt;delete&lt;/em&gt; is true (the default), the file is deleted as soon as it is closed. The returned object is always a file-like object whose &lt;code&gt;file&lt;/code&gt; attribute is the underlying true file object. This file-like object can be used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, just like a normal file.</source>
          <target state="translated">此函数的操作与&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; &lt;/a&gt;完全相同，只是保证文件在文件系统中具有可见的名称（在Unix上，目录条目未取消链接）。可以从返回的类似文件的对象的 &lt;code&gt;name&lt;/code&gt; 属性中检索该名称。在命名的临时文件仍处于打开状态时，是否可以使用该名称第二次打开文件，会因平台而异（可以在Unix上使用；在Windows NT或更高版本上不能使用）。如果&lt;em&gt;delete&lt;/em&gt;为true（默认设置），则在关闭文件后立即将其删除。返回的对象始终是类似文件的对象，其 &lt;code&gt;file&lt;/code&gt; 属性是基础真实文件对象。这个类文件对象可以被用在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 声明，就像普通文件一样。</target>
        </trans-unit>
        <trans-unit id="2f780a62bf02c136b6c254f307fd90d36186bafa" translate="yes" xml:space="preserve">
          <source>This function operates exactly as &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile()&lt;/code&gt;&lt;/a&gt; does, except that the file is guaranteed to have a visible name in the file system (on Unix, the directory entry is not unlinked). That name can be retrieved from the &lt;code&gt;name&lt;/code&gt; attribute of the returned file-like object. Whether the name can be used to open the file a second time, while the named temporary file is still open, varies across platforms (it can be so used on Unix; it cannot on Windows NT or later). If &lt;em&gt;delete&lt;/em&gt; is true (the default), the file is deleted as soon as it is closed. The returned object is always a file-like object whose &lt;code&gt;file&lt;/code&gt; attribute is the underlying true file object. This file-like object can be used in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement, just like a normal file.</source>
          <target state="translated">该函数的操作与&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile()&lt;/code&gt; &lt;/a&gt;完全相同，只是保证文件在文件系统中具有可见的名称（在Unix上，目录条目未取消链接）。可以从返回的类似文件的对象的 &lt;code&gt;name&lt;/code&gt; 属性中检索该名称。在命名的临时文件仍处于打开状态时，是否可以使用该名称第二次打开文件，会因平台而异（可以在Unix上使用；在Windows NT或更高版本上不能使用）。如果&lt;em&gt;delete&lt;/em&gt;为true（默认设置），则在关闭文件后立即将其删除。返回的对象始终是类似文件的对象，其 &lt;code&gt;file&lt;/code&gt; 属性是基础真实文件对象。这个类文件对象可以被用在&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt; 声明，就像普通文件一样。</target>
        </trans-unit>
        <trans-unit id="8a66c48b929d610e3db559cb30cbb31ccc42d7ac" translate="yes" xml:space="preserve">
          <source>This function passes &lt;code&gt;NULL&lt;/code&gt; for &lt;em&gt;security_attributes&lt;/em&gt; to the API.</source>
          <target state="translated">此函数将用于&lt;em&gt;security_attributes的&lt;/em&gt; &lt;code&gt;NULL&lt;/code&gt; 传递给API。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fde6b92d954d144ab8d68479a8fd1eafae433701" translate="yes" xml:space="preserve">
          <source>This function performs a call to &lt;a href=&quot;#multiprocessing.get_logger&quot;&gt;&lt;code&gt;get_logger()&lt;/code&gt;&lt;/a&gt; but in addition to returning the logger created by get_logger, it adds a handler which sends output to &lt;a href=&quot;sys#sys.stderr&quot;&gt;&lt;code&gt;sys.stderr&lt;/code&gt;&lt;/a&gt; using format &lt;code&gt;'[%(levelname)s/%(processName)s] %(message)s'&lt;/code&gt;.</source>
          <target state="translated">此函数执行对&lt;a href=&quot;#multiprocessing.get_logger&quot;&gt; &lt;code&gt;get_logger()&lt;/code&gt; &lt;/a&gt;的调用，但是除了返回由get_logger创建的记录器之外，它还添加了一个处理程序，该处理程序使用格式 &lt;code&gt;'[%(levelname)s/%(processName)s] %(message)s'&lt;/code&gt; 将输出发送到&lt;a href=&quot;sys#sys.stderr&quot;&gt; &lt;code&gt;sys.stderr&lt;/code&gt; &lt;/a&gt;。 ）s。</target>
        </trans-unit>
        <trans-unit id="d8bfadefc08d236f47565d11a8850b9788ddd116" translate="yes" xml:space="preserve">
          <source>This function prints out a given traceback and exception to &lt;code&gt;sys.stderr&lt;/code&gt;.</source>
          <target state="translated">此函数将给定的追溯和异常打印到 &lt;code&gt;sys.stderr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce4c56e9ebaef2be95f933821a82b6250096cf20" translate="yes" xml:space="preserve">
          <source>This function raises &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; if the compiled source is invalid, and &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if the source contains null bytes.</source>
          <target state="translated">如果编译的源无效，则此函数引发&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; ;&lt;/a&gt;如果源包含空字节，则引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8387f182301769ffb4d541325ec84e9397a2e7d8" translate="yes" xml:space="preserve">
          <source>This function raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;open&lt;/code&gt; with arguments &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;mode&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt;. The &lt;code&gt;mode&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; arguments may have been modified or inferred from the original call.</source>
          <target state="translated">此函数引发一个带有&lt;a href=&quot;sys#auditing&quot;&gt;事件&lt;/a&gt; &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;mode&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; &lt;code&gt;open&lt;/code&gt; 的审核事件。该 &lt;code&gt;mode&lt;/code&gt; 和 &lt;code&gt;flags&lt;/code&gt; 参数可能已被修改或从原来的呼叫推断。</target>
        </trans-unit>
        <trans-unit id="78e94a989e8572d53e6ff1d156dde94e63d8cdf5" translate="yes" xml:space="preserve">
          <source>This function requires that the codec accept &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects to decode. Therefore it does not support text-to-text encoders such as &lt;code&gt;rot_13&lt;/code&gt;, although &lt;code&gt;rot_13&lt;/code&gt; may be used equivalently with &lt;a href=&quot;#codecs.iterencode&quot;&gt;&lt;code&gt;iterencode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此功能要求编解码器接受&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象以进行解码。因此，尽管 &lt;code&gt;rot_13&lt;/code&gt; 可与&lt;a href=&quot;#codecs.iterencode&quot;&gt; &lt;code&gt;iterencode()&lt;/code&gt; &lt;/a&gt;等效使用，但它不支持诸如 &lt;code&gt;rot_13&lt;/code&gt; 之类的文本到文本编码器。</target>
        </trans-unit>
        <trans-unit id="ed7e6a53326800e0c99a24c7943af3979b042021" translate="yes" xml:space="preserve">
          <source>This function requires that the codec accept text &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; objects to encode. Therefore it does not support bytes-to-bytes encoders such as &lt;code&gt;base64_codec&lt;/code&gt;.</source>
          <target state="translated">此功能要求编解码器接受文本&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;对象进行编码。因此，它不支持基于字节的编码器，例如 &lt;code&gt;base64_codec&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca7b19d20b3fc70fd4a06f6eaf9f2609ffde0a21" translate="yes" xml:space="preserve">
          <source>This function resizes the internal memory buffer of &lt;em&gt;obj&lt;/em&gt;, which must be an instance of a ctypes type. It is not possible to make the buffer smaller than the native size of the objects type, as given by &lt;code&gt;sizeof(type(obj))&lt;/code&gt;, but it is possible to enlarge the buffer.</source>
          <target state="translated">此函数调整&lt;em&gt;obj&lt;/em&gt;的内部内存缓冲区的大小，该缓冲区必须是ctypes类型的实例。如 &lt;code&gt;sizeof(type(obj))&lt;/code&gt; 所给出的那样，不可能使缓冲区小于对象类型的本机大小，但是可以扩大缓冲区。</target>
        </trans-unit>
        <trans-unit id="a7666a23252f123adf92ecbb5fd3b070801019d8" translate="yes" xml:space="preserve">
          <source>This function returns &lt;em&gt;func&lt;/em&gt;, which makes it possible to use it as a decorator.</source>
          <target state="translated">该函数返回&lt;em&gt;func&lt;/em&gt;，从而可以将其用作装饰器。</target>
        </trans-unit>
        <trans-unit id="7db7474465da4003217948e1553874c4a2c0f3b3" translate="yes" xml:space="preserve">
          <source>This function returns a &lt;code&gt;typing.TextIO&lt;/code&gt; instance, a text I/O stream open for reading.</source>
          <target state="translated">这个函数返回一个 &lt;code&gt;typing.TextIO&lt;/code&gt; 实例，一个文本I / O流打开以供读取。</target>
        </trans-unit>
        <trans-unit id="11586ef5462bc5cc9bafb350e47c109a73f45482" translate="yes" xml:space="preserve">
          <source>This function returns a list of &lt;code&gt;(decoded_string, charset)&lt;/code&gt; pairs containing each of the decoded parts of the header. &lt;em&gt;charset&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; for non-encoded parts of the header, otherwise a lower case string containing the name of the character set specified in the encoded string.</source>
          <target state="translated">此函数返回一个列表，其中包含 &lt;code&gt;(decoded_string, charset)&lt;/code&gt; 对，这些对包含标头的每个解码部分。对于标头的未编码部分，&lt;em&gt;charset&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，否则为小写字符串，其中包含在编码字符串中指定的字符集的名称。</target>
        </trans-unit>
        <trans-unit id="c6b5a760d5b2d7a0cdc6a46768cb3ddd798abf48" translate="yes" xml:space="preserve">
          <source>This function returns a tuple of three values that give information about the exception that is currently being handled. The information returned is specific both to the current thread and to the current stack frame. If the current stack frame is not handling an exception, the information is taken from the calling stack frame, or its caller, and so on until a stack frame is found that is handling an exception. Here, &amp;ldquo;handling an exception&amp;rdquo; is defined as &amp;ldquo;executing an except clause.&amp;rdquo; For any stack frame, only information about the exception being currently handled is accessible.</source>
          <target state="translated">此函数返回三个值的元组，它们给出有关当前正在处理的异常的信息。返回的信息特定于当前线程和当前堆栈帧。如果当前堆栈帧没有处理异常，则从调用堆栈帧或其调用者等获取信息，依此类推，直到找到处理异常的堆栈帧为止。这里，&amp;ldquo;处理异常&amp;rdquo;被定义为&amp;ldquo;执行except子句&amp;rdquo;。对于任何堆栈帧，只能访问有关当前正在处理的异常的信息。</target>
        </trans-unit>
        <trans-unit id="8119a5093d30b11cd9b05ae9690966f552c52002" translate="yes" xml:space="preserve">
          <source>This function returns an instance of &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; that holds the header fields, but no payload (the same as &lt;a href=&quot;#http.client.HTTPResponse.msg&quot;&gt;&lt;code&gt;HTTPResponse.msg&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http.server#http.server.BaseHTTPRequestHandler.headers&quot;&gt;&lt;code&gt;http.server.BaseHTTPRequestHandler.headers&lt;/code&gt;&lt;/a&gt;). After returning, the file pointer &lt;em&gt;fp&lt;/em&gt; is ready to read the HTTP body.</source>
          <target state="translated">此函数返回 &lt;code&gt;http.client.HTTPMessage&lt;/code&gt; 的实例，该实例保存标头字段，但没有有效负载（与&lt;a href=&quot;#http.client.HTTPResponse.msg&quot;&gt; &lt;code&gt;HTTPResponse.msg&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;http.server#http.server.BaseHTTPRequestHandler.headers&quot;&gt; &lt;code&gt;http.server.BaseHTTPRequestHandler.headers&lt;/code&gt; &lt;/a&gt;相同）。返回后，文件指针&lt;em&gt;fp&lt;/em&gt;准备读取HTTP正文。</target>
        </trans-unit>
        <trans-unit id="9310ca486b065ef93bb150015e5c6c85fc6241cc" translate="yes" xml:space="preserve">
          <source>This function returns an object that describes the resources consumed by either the current process or its children, as specified by the &lt;em&gt;who&lt;/em&gt; parameter. The &lt;em&gt;who&lt;/em&gt; parameter should be specified using one of the &lt;code&gt;RUSAGE_*&lt;/code&gt; constants described below.</source>
          <target state="translated">该函数返回一个对象，该对象描述了由&lt;em&gt;who&lt;/em&gt;参数指定的当前进程或其子进程消耗的资源。该&lt;em&gt;谁&lt;/em&gt;参数应使用的一个指定 &lt;code&gt;RUSAGE_*&lt;/code&gt; 下面介绍的常量。</target>
        </trans-unit>
        <trans-unit id="3c98f1f0078fc7e488538849f2fe95f019b74e6e" translate="yes" xml:space="preserve">
          <source>This function returns names of the second form from the list, &lt;code&gt;ethernet_32770&lt;/code&gt; in this example case.</source>
          <target state="translated">此函数从列表中返回第二种形式的名称，在此示例情况下为 &lt;code&gt;ethernet_32770&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3389bceb4f4b217616df6b1450bc7411416e8c32" translate="yes" xml:space="preserve">
          <source>This function returns random bytes from an OS-specific randomness source. The returned data should be unpredictable enough for cryptographic applications, though its exact quality depends on the OS implementation.</source>
          <target state="translated">这个函数从操作系统特有的随机性源返回随机字节。返回的数据对于加密应用来说应该是不可预测的,尽管其确切的质量取决于操作系统的实现。</target>
        </trans-unit>
        <trans-unit id="c1b5c9eb8a860c921596d08ec2b539e7ca036ef7" translate="yes" xml:space="preserve">
          <source>This function returns the C string starting at memory address &lt;em&gt;address&lt;/em&gt; as a bytes object. If size is specified, it is used as size, otherwise the string is assumed to be zero-terminated.</source>
          <target state="translated">此函数以字节对象的形式返回从内存地址&lt;em&gt;地址&lt;/em&gt;开始的C字符串。如果指定了大小，则将其用作大小，否则假定字符串以零结尾。</target>
        </trans-unit>
        <trans-unit id="0275e415bdf66c562ae0a9793115bf8d4692dd28" translate="yes" xml:space="preserve">
          <source>This function returns the wide character string starting at memory address &lt;em&gt;address&lt;/em&gt; as a string. If &lt;em&gt;size&lt;/em&gt; is specified, it is used as the number of characters of the string, otherwise the string is assumed to be zero-terminated.</source>
          <target state="translated">此函数返回以内存地址&lt;em&gt;地址&lt;/em&gt;开头的宽字符串。如果指定了&lt;em&gt;size&lt;/em&gt;，则将其用作字符串的字符数，否则假定该字符串以零结尾。</target>
        </trans-unit>
        <trans-unit id="c26b6d13d8eeee602e191f75458ddf599459f7ad" translate="yes" xml:space="preserve">
          <source>This function runs the passed coroutine, taking care of managing the asyncio event loop and &lt;em&gt;finalizing asynchronous generators&lt;/em&gt;.</source>
          <target state="translated">此函数运行传递的协程，从而管理asyncio事件循环并&lt;em&gt;完成异步生成器&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="41a0b48769cb7e209f89511c2f68696cadb787be" translate="yes" xml:space="preserve">
          <source>This function runs the passed coroutine, taking care of managing the asyncio event loop, &lt;em&gt;finalizing asynchronous generators&lt;/em&gt;, and closing the threadpool.</source>
          <target state="translated">此函数运行传递的协程，负责管理asyncio事件循环，&lt;em&gt;完成异步生成器&lt;/em&gt;并关闭线程池。</target>
        </trans-unit>
        <trans-unit id="4771703fc1ce559310da22e7cd6065d893c64e7e" translate="yes" xml:space="preserve">
          <source>This function securely creates a temporary directory using the same rules as &lt;a href=&quot;#tempfile.mkdtemp&quot;&gt;&lt;code&gt;mkdtemp()&lt;/code&gt;&lt;/a&gt;. The resulting object can be used as a context manager (see &lt;a href=&quot;#tempfile-examples&quot;&gt;Examples&lt;/a&gt;). On completion of the context or destruction of the temporary directory object the newly created temporary directory and all its contents are removed from the filesystem.</source>
          <target state="translated">此函数使用与&lt;a href=&quot;#tempfile.mkdtemp&quot;&gt; &lt;code&gt;mkdtemp()&lt;/code&gt; &lt;/a&gt;相同的规则安全地创建一个临时目录。生成的对象可用作上下文管理器（请参见&lt;a href=&quot;#tempfile-examples&quot;&gt;示例&lt;/a&gt;）。在上下文完成或临时目录对象被破坏后，新创建的临时目录及其所有内容将从文件系统中删除。</target>
        </trans-unit>
        <trans-unit id="a3d02be868af88937c3058959c00f7f17a0f84b0" translate="yes" xml:space="preserve">
          <source>This function should be called from the main thread before other threads are started. In versions of Python prior to 2.7.1 and 3.2, if this function is called from multiple threads, it is possible (in rare circumstances) that a handler will be added to the root logger more than once, leading to unexpected results such as messages being duplicated in the log.</source>
          <target state="translated">这个函数应该在其他线程启动之前从主线程调用。在 Python 2.7.1 和 3.2 之前的版本中,如果从多个线程调用这个函数,则有可能 (在极少数情况下)将一个处理程序添加到根日志器中不止一次,从而导致意外的结果,如日志中的消息被重复。</target>
        </trans-unit>
        <trans-unit id="30c97aeaa35ec532c2b20093c15a7ccbd689f6e4" translate="yes" xml:space="preserve">
          <source>This function should be employed only if &lt;a href=&quot;#os.WIFEXITED&quot;&gt;&lt;code&gt;WIFEXITED()&lt;/code&gt;&lt;/a&gt; is true.</source>
          <target state="translated">仅当&lt;a href=&quot;#os.WIFEXITED&quot;&gt; &lt;code&gt;WIFEXITED()&lt;/code&gt; &lt;/a&gt;为true时，才应使用此函数。</target>
        </trans-unit>
        <trans-unit id="d34602c9a05f6fd43a9c201f414237f00fe689fd" translate="yes" xml:space="preserve">
          <source>This function should be employed only if &lt;a href=&quot;#os.WIFSIGNALED&quot;&gt;&lt;code&gt;WIFSIGNALED()&lt;/code&gt;&lt;/a&gt; is true.</source>
          <target state="translated">仅当&lt;a href=&quot;#os.WIFSIGNALED&quot;&gt; &lt;code&gt;WIFSIGNALED()&lt;/code&gt; &lt;/a&gt;为true时，才应使用此函数。</target>
        </trans-unit>
        <trans-unit id="55eee6614b9261ec463003cc0cb6c34fd7aab34a" translate="yes" xml:space="preserve">
          <source>This function should be employed only if &lt;a href=&quot;#os.WIFSTOPPED&quot;&gt;&lt;code&gt;WIFSTOPPED()&lt;/code&gt;&lt;/a&gt; is true.</source>
          <target state="translated">仅当&lt;a href=&quot;#os.WIFSTOPPED&quot;&gt; &lt;code&gt;WIFSTOPPED()&lt;/code&gt; &lt;/a&gt;为true时，才应使用此函数。</target>
        </trans-unit>
        <trans-unit id="9d20e60dd1d63a521945c30323e6b6bf138f6832" translate="yes" xml:space="preserve">
          <source>This function should be used for internal and specialized purposes only.</source>
          <target state="translated">该功能只应用于内部和专门用途。</target>
        </trans-unit>
        <trans-unit id="749a08b5be8d75cfdf7f3f1e09a35adb78c01024" translate="yes" xml:space="preserve">
          <source>This function supports dynamic execution of Python code. &lt;em&gt;object&lt;/em&gt; must be either a string or a code object. If it is a string, the string is parsed as a suite of Python statements which is then executed (unless a syntax error occurs). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; If it is a code object, it is simply executed. In all cases, the code that&amp;rsquo;s executed is expected to be valid as file input (see the section &amp;ldquo;File input&amp;rdquo; in the Reference Manual). Be aware that the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#yield&quot;&gt;&lt;code&gt;yield&lt;/code&gt;&lt;/a&gt; statements may not be used outside of function definitions even within the context of code passed to the &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function. The return value is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">该功能支持动态执行Python代码。&lt;em&gt;对象&lt;/em&gt;必须是字符串或代码对象。如果是字符串，则将该字符串解析为一组Python语句，然后执行该语句（除非发生语法错误）。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;如果它是代码对象，则只需执行即可。在所有情况下，执行的代码都可以作为文件输入有效（请参见《参考手册》中的&amp;ldquo;文件输入&amp;rdquo;一节）。请注意，即使在传递给&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;函数的代码上下文中，也不能在函数定义之外使用&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#yield&quot;&gt; &lt;code&gt;yield&lt;/code&gt; &lt;/a&gt;语句。返回值为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b64e07fc9d486949c7572f80e56b02d2cf9c258e" translate="yes" xml:space="preserve">
          <source>This function supports dynamic execution of Python code. &lt;em&gt;object&lt;/em&gt; must be either a string or a code object. If it is a string, the string is parsed as a suite of Python statements which is then executed (unless a syntax error occurs). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; If it is a code object, it is simply executed. In all cases, the code that&amp;rsquo;s executed is expected to be valid as file input (see the section &amp;ldquo;File input&amp;rdquo; in the Reference Manual). Be aware that the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#yield&quot;&gt;&lt;code&gt;yield&lt;/code&gt;&lt;/a&gt; statements may not be used outside of function definitions even within the context of code passed to the &lt;a href=&quot;#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function. The return value is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">此功能支持动态执行Python代码。&lt;em&gt;对象&lt;/em&gt;必须是字符串或代码对象。如果是字符串，则将字符串解析为一组Python语句，然后执行该语句（除非发生语法错误）。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;如果它是代码对象，则只需执行即可。在所有情况下，执行的代码都可以作为文件输入有效（请参见《参考手册》中的&amp;ldquo;文件输入&amp;rdquo;一节）。请注意，即使在传递给&lt;a href=&quot;#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;函数的代码上下文中，也不能在函数定义之外使用&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#yield&quot;&gt; &lt;code&gt;yield&lt;/code&gt; &lt;/a&gt;语句。返回值为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="086ca74667d6bc1899c60ca7f2435203fff0e70a" translate="yes" xml:space="preserve">
          <source>This function takes a single argument that can be passed to the &lt;a href=&quot;functions#exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; function, and an optional file name. In all cases this routine executes:</source>
          <target state="translated">该函数采用一个可以传递给&lt;a href=&quot;functions#exec&quot;&gt; &lt;code&gt;exec()&lt;/code&gt; &lt;/a&gt;函数的参数，以及一个可选的文件名。在所有情况下，此例程都将执行：</target>
        </trans-unit>
        <trans-unit id="a8b457aa45063f9aaf0a8c9f77a5b594016e5868" translate="yes" xml:space="preserve">
          <source>This function takes an XML data string (&lt;em&gt;xml_data&lt;/em&gt;) or a file path or file-like object (&lt;em&gt;from_file&lt;/em&gt;) as input, converts it to the canonical form, and writes it out using the &lt;em&gt;out&lt;/em&gt; file(-like) object, if provided, or returns it as a text string if not. The output file receives text, not bytes. It should therefore be opened in text mode with &lt;code&gt;utf-8&lt;/code&gt; encoding.</source>
          <target state="translated">此函数将XML数据字符串（&lt;em&gt;xml_data&lt;/em&gt;）或文件路径或类似文件的对象（&lt;em&gt;from_file&lt;/em&gt;）作为输入，将其转换为规范形式，并使用&lt;em&gt;out&lt;/em&gt;类似文件的对象（如果提供）将其写出，或者如果不是，则将其作为文本字符串返回。输出文件接收文本，而不是字节。因此，应使用 &lt;code&gt;utf-8&lt;/code&gt; 编码以文本模式打开它。</target>
        </trans-unit>
        <trans-unit id="00c9ccc2e6efc7cdd2787a047411daf9d2586338" translate="yes" xml:space="preserve">
          <source>This function takes an input source and an optional base URL and returns a fully resolved &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; object ready for reading. The input source can be given as a string, a file-like object, or an &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; object; parsers will use this function to implement the polymorphic &lt;em&gt;source&lt;/em&gt; argument to their &lt;code&gt;parse()&lt;/code&gt; method.</source>
          <target state="translated">此函数采用输入源和可选的基本URL，并返回一个完全解析的&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;对象，可供读取。输入源可以以字符串，类似文件的对象或&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.InputSource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;对象的形式提供；解析器将使用此函数将多态&lt;em&gt;源&lt;/em&gt;参数实现为其 &lt;code&gt;parse()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="ed291263129461634749d085a422476c646a04fe" translate="yes" xml:space="preserve">
          <source>This function takes one of those sequence of pairs and returns a &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instance. Optional &lt;em&gt;maxlinelen&lt;/em&gt;, &lt;em&gt;header_name&lt;/em&gt;, and &lt;em&gt;continuation_ws&lt;/em&gt; are as in the &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">此函数采用这些对中的一个序列并返回&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;实例。可选&lt;em&gt;maxlinelen&lt;/em&gt;，&lt;em&gt;信头&lt;/em&gt;，和&lt;em&gt;continuation_ws&lt;/em&gt;如在&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;构造。</target>
        </trans-unit>
        <trans-unit id="aaefda6e8f08981b1040b46ed1a5b3313e13419a" translate="yes" xml:space="preserve">
          <source>This function transforms a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; function into a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt; which returns a generator-based coroutine. The generator-based coroutine is still a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator-iterator&quot;&gt;generator iterator&lt;/a&gt;, but is also considered to be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; object and is &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt;. However, it may not necessarily implement the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此函数将&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;函数转换为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine-function&quot;&gt;协程函数&lt;/a&gt;，该协程函数返回基于生成器的协程。基于&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator-iterator&quot;&gt;生成器&lt;/a&gt;的协程仍然是生成器迭代器，但也被视为&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-coroutine&quot;&gt;协程&lt;/a&gt;对象并且可以&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-awaitable&quot;&gt;等待&lt;/a&gt;。但是，它不一定实现&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="44261da948aa68769f30a01b8aebf1bfc3369b14" translate="yes" xml:space="preserve">
          <source>This function transforms a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generator&lt;/a&gt; function into a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;coroutine function&lt;/a&gt; which returns a generator-based coroutine. The generator-based coroutine is still a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator-iterator&quot;&gt;generator iterator&lt;/a&gt;, but is also considered to be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;coroutine&lt;/a&gt; object and is &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;awaitable&lt;/a&gt;. However, it may not necessarily implement the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt;&lt;code&gt;__await__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此函数将&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;函数转换为&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine-function&quot;&gt;协程函数&lt;/a&gt;，该协程函数返回基于生成器的协程。基于&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator-iterator&quot;&gt;生成器&lt;/a&gt;的协程仍然是生成器迭代器，但也被视为&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-coroutine&quot;&gt;协程&lt;/a&gt;对象，并且可以&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-awaitable&quot;&gt;等待&lt;/a&gt;。但是，它不一定实现&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__await__&quot;&gt; &lt;code&gt;__await__()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="dec68208c32ce4bef49692aaae7babc6b72520b3" translate="yes" xml:space="preserve">
          <source>This function uses a cache for past comparisons and the results, with cache entries invalidated if the &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; information for the file changes. The entire cache may be cleared using &lt;a href=&quot;#filecmp.clear_cache&quot;&gt;&lt;code&gt;clear_cache()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数将缓存用于过去的比较和结果，如果文件的&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;信息发生更改，则缓存条目将无效。可以使用&lt;a href=&quot;#filecmp.clear_cache&quot;&gt; &lt;code&gt;clear_cache()&lt;/code&gt; &lt;/a&gt;清除整个缓存。</target>
        </trans-unit>
        <trans-unit id="67621df8c29ab36ef48a10c6d3a54a11a295362f" translate="yes" xml:space="preserve">
          <source>This function uses a user-configurable function to convert the creation time to a tuple. By default, &lt;a href=&quot;time#time.localtime&quot;&gt;&lt;code&gt;time.localtime()&lt;/code&gt;&lt;/a&gt; is used; to change this for a particular formatter instance, set the &lt;code&gt;converter&lt;/code&gt; attribute to a function with the same signature as &lt;a href=&quot;time#time.localtime&quot;&gt;&lt;code&gt;time.localtime()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;time#time.gmtime&quot;&gt;&lt;code&gt;time.gmtime()&lt;/code&gt;&lt;/a&gt;. To change it for all formatters, for example if you want all logging times to be shown in GMT, set the &lt;code&gt;converter&lt;/code&gt; attribute in the &lt;code&gt;Formatter&lt;/code&gt; class.</source>
          <target state="translated">此函数使用用户可配置的函数将创建时间转换为元组。默认情况下，使用&lt;a href=&quot;time#time.localtime&quot;&gt; &lt;code&gt;time.localtime()&lt;/code&gt; &lt;/a&gt; ; 要针对特定​​格式化程序实例更改此设置，请将 &lt;code&gt;converter&lt;/code&gt; 属性设置为具有与&lt;a href=&quot;time#time.localtime&quot;&gt; &lt;code&gt;time.localtime()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;time#time.gmtime&quot;&gt; &lt;code&gt;time.gmtime()&lt;/code&gt; &lt;/a&gt;相同签名的函数。要为所有格式化程序更改它，例如，如果要在GMT中显示所有日志记录时间，请在 &lt;code&gt;Formatter&lt;/code&gt; 类中设置 &lt;code&gt;converter&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="c7d4a1b7043855edd960d108a4b03c2c7f26f78e" translate="yes" xml:space="preserve">
          <source>This function uses the same search technique as &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数使用与&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt;相同的搜索技术。</target>
        </trans-unit>
        <trans-unit id="dcc0f796b37da4661e9e567b1d70beab1a789887" translate="yes" xml:space="preserve">
          <source>This function was inadvertently marked as deprecated in Python 3.5.</source>
          <target state="translated">这个函数在Python 3.5中无意中被标记为弃用。</target>
        </trans-unit>
        <trans-unit id="fde76138b876f19a331c04c16e7173bc40335dae" translate="yes" xml:space="preserve">
          <source>This function will raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; if the named module cannot be imported.</source>
          <target state="translated">如果无法导入命名模块，则此函数将引发&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="695e7aa3774a50e5d41215db0f861e34960b2541" translate="yes" xml:space="preserve">
          <source>This function will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if an invalid &lt;em&gt;who&lt;/em&gt; parameter is specified. It may also raise &lt;a href=&quot;#resource.error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; exception in unusual circumstances.</source>
          <target state="translated">如果指定了无效的&lt;em&gt;who&lt;/em&gt;参数，则此函数将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。在异常情况下，它还可能引发&lt;a href=&quot;#resource.error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt;异常。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45f82931ab2a0fc2142776ea98ebb1c0e233a5e9" translate="yes" xml:space="preserve">
          <source>This function will raise the first exception raised by any hook. In general, these errors should not be handled and should terminate the process as quickly as possible.</source>
          <target state="translated">这个函数将引发任何钩子引发的第一个异常。一般来说,这些错误不应该被处理,应该尽快终止进程。</target>
        </trans-unit>
        <trans-unit id="d2f4a44ea4f4781c9ded6135bf54221ca4868d84" translate="yes" xml:space="preserve">
          <source>This function works best with Mark Hammond&amp;rsquo;s &lt;code&gt;win32all&lt;/code&gt; package installed, but also on Python 2.3 and later (support for this was added in Python 2.6). It obviously only runs on Win32 compatible platforms.</source>
          <target state="translated">此功能在安装Mark Hammond的 &lt;code&gt;win32all&lt;/code&gt; 软件包时效果最佳，但在Python 2.3和更高版本上也是如此（在Python 2.6中添加了对此功能的支持）。它显然只能在Win32兼容平台上运行。</target>
        </trans-unit>
        <trans-unit id="cdfe78946dbc3eb876b9e7ddc8990bd5dab0055a" translate="yes" xml:space="preserve">
          <source>This function works for ranges spanning a century change.</source>
          <target state="translated">该功能适用于跨世纪变化的范围。</target>
        </trans-unit>
        <trans-unit id="6d4a6aeb5830677c42af3b67d316903d7b69a1cf" translate="yes" xml:space="preserve">
          <source>This function works like &lt;a href=&quot;#module-getopt&quot;&gt;&lt;code&gt;getopt()&lt;/code&gt;&lt;/a&gt;, except that GNU style scanning mode is used by default. This means that option and non-option arguments may be intermixed. The &lt;a href=&quot;#module-getopt&quot;&gt;&lt;code&gt;getopt()&lt;/code&gt;&lt;/a&gt; function stops processing options as soon as a non-option argument is encountered.</source>
          <target state="translated">此功能与&lt;a href=&quot;#module-getopt&quot;&gt; &lt;code&gt;getopt()&lt;/code&gt; &lt;/a&gt;相似，但默认情况下使用GNU样式扫描模式。这意味着选项和非选项参数可以混合使用。一旦遇到非选项参数，&lt;a href=&quot;#module-getopt&quot;&gt; &lt;code&gt;getopt()&lt;/code&gt; &lt;/a&gt;函数就会停止处理选项。</target>
        </trans-unit>
        <trans-unit id="c53c65a872781ee36da0b6344b195ca8579a2152" translate="yes" xml:space="preserve">
          <source>This function wraps the Win32 &lt;code&gt;GetVersionEx()&lt;/code&gt; function; see the Microsoft documentation on &lt;code&gt;OSVERSIONINFOEX()&lt;/code&gt; for more information about these fields.</source>
          <target state="translated">该函数包装Win32 &lt;code&gt;GetVersionEx()&lt;/code&gt; 函数；有关这些字段的更多信息，请参见Microsoft &lt;code&gt;OSVERSIONINFOEX()&lt;/code&gt; 文档。</target>
        </trans-unit>
        <trans-unit id="9fa1f0ee315ee71ef09519d3983d61008b818bf1" translate="yes" xml:space="preserve">
          <source>This functionality can be used to inject your own values into a &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; at creation time. You can use the following pattern:</source>
          <target state="translated">此功能可用于在创建时将您自己的值注入&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;。您可以使用以下模式：</target>
        </trans-unit>
        <trans-unit id="f0ca610375353cdc0d5c751741d7a392b2aded01" translate="yes" xml:space="preserve">
          <source>This functionality is provisional and may deviate from the usual version semantics of the standard library.</source>
          <target state="translated">这个功能是临时的,可能会偏离标准库的通常版本语义。</target>
        </trans-unit>
        <trans-unit id="014671f13f1d15f016c7f3185f6694055488cde2" translate="yes" xml:space="preserve">
          <source>This functionality is used in numerous places in the standard library (see &lt;a href=&quot;https://bugs.python.org/issue12915&quot;&gt;bpo-12915&lt;/a&gt;) - and equivalent functionality is also in widely used third-party packages such as setuptools, Django and Pyramid.</source>
          <target state="translated">该功能在标准库的许多地方都可以使用（请参阅&lt;a href=&quot;https://bugs.python.org/issue12915&quot;&gt;bpo-12915&lt;/a&gt;）-等效的功能也被广泛使用的第三方软件包（如setuptools，Django和Pyramid）使用。</target>
        </trans-unit>
        <trans-unit id="f325c661123592c2ffbf04844b8b46e0e85687b6" translate="yes" xml:space="preserve">
          <source>This generator function uses the &lt;code&gt;co_firstlineno&lt;/code&gt; and &lt;code&gt;co_lnotab&lt;/code&gt; attributes of the code object &lt;em&gt;code&lt;/em&gt; to find the offsets which are starts of lines in the source code. They are generated as &lt;code&gt;(offset, lineno)&lt;/code&gt; pairs. See &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Objects/lnotab_notes.txt&quot;&gt;Objects/lnotab_notes.txt&lt;/a&gt; for the &lt;code&gt;co_lnotab&lt;/code&gt; format and how to decode it.</source>
          <target state="translated">该生成器函数使用代码目标&lt;em&gt;代码&lt;/em&gt;的 &lt;code&gt;co_firstlineno&lt;/code&gt; 和 &lt;code&gt;co_lnotab&lt;/code&gt; 属性来查找源代码中行首的偏移量。它们生成为 &lt;code&gt;(offset, lineno)&lt;/code&gt; 对。见&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Objects/lnotab_notes.txt&quot;&gt;对象/ lnotab_notes.txt&lt;/a&gt;为 &lt;code&gt;co_lnotab&lt;/code&gt; 格式以及如何将其解码。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0be55414e275a4a1c5dd59a5735b9e7e483fc983" translate="yes" xml:space="preserve">
          <source>This generator function uses the &lt;code&gt;co_firstlineno&lt;/code&gt; and &lt;code&gt;co_lnotab&lt;/code&gt; attributes of the code object &lt;em&gt;code&lt;/em&gt; to find the offsets which are starts of lines in the source code. They are generated as &lt;code&gt;(offset, lineno)&lt;/code&gt; pairs. See &lt;a href=&quot;https://github.com/python/cpython/tree/3.9/Objects/lnotab_notes.txt&quot;&gt;Objects/lnotab_notes.txt&lt;/a&gt; for the &lt;code&gt;co_lnotab&lt;/code&gt; format and how to decode it.</source>
          <target state="translated">该生成器函数使用代码目标&lt;em&gt;代码&lt;/em&gt;的 &lt;code&gt;co_firstlineno&lt;/code&gt; 和 &lt;code&gt;co_lnotab&lt;/code&gt; 属性来查找源代码中行首的偏移量。它们生成为 &lt;code&gt;(offset, lineno)&lt;/code&gt; 对。见&lt;a href=&quot;https://github.com/python/cpython/tree/3.9/Objects/lnotab_notes.txt&quot;&gt;对象/ lnotab_notes.txt&lt;/a&gt;为 &lt;code&gt;co_lnotab&lt;/code&gt; 格式以及如何将其解码。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="31e7ec1a6118bb6f4c7d19cb31c4eb16dbcf0646" translate="yes" xml:space="preserve">
          <source>This gives the same ordering as a series of &lt;a href=&quot;stdtypes#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt; calls starting with the last mapping:</source>
          <target state="translated">这与从最后一个映射开始的一系列&lt;a href=&quot;stdtypes#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; &lt;/a&gt;调用具有相同的顺序：</target>
        </trans-unit>
        <trans-unit id="358cfff4da4236e735a011c08d723d2e34737515" translate="yes" xml:space="preserve">
          <source>This handler is not appropriate for use under Windows, because under Windows open log files cannot be moved or renamed - logging opens the files with exclusive locks - and so there is no need for such a handler. Furthermore, &lt;em&gt;ST_INO&lt;/em&gt; is not supported under Windows; &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt; always returns zero for this value.</source>
          <target state="translated">该处理程序不适用于Windows，因为在Windows下无法移动或重命名打开的日志文件-日志记录使用排他锁打开文件-因此不需要这种处理程序。此外，Windows下不支持&lt;em&gt;ST_INO&lt;/em&gt;。&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt;始终为该值返回零。</target>
        </trans-unit>
        <trans-unit id="d2e794ef0fce7d4a030d7833706ed98762c476d0" translate="yes" xml:space="preserve">
          <source>This has a different meaning for each node type; see the DOM specification for details. The situation is similar to that with &lt;a href=&quot;#xml.dom.Node.nodeName&quot;&gt;&lt;code&gt;nodeName&lt;/code&gt;&lt;/a&gt;. The value is a string or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">对于每种节点类型，这都有不同的含义。有关详细信息，请参见DOM规范。这种情况类似于使用&lt;a href=&quot;#xml.dom.Node.nodeName&quot;&gt; &lt;code&gt;nodeName&lt;/code&gt; 的情况&lt;/a&gt;。该值为字符串或 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7cbbcfa82c4924ad5e9ced671d2f1dd378b2b19" translate="yes" xml:space="preserve">
          <source>This has a different meaning for each node type; see the DOM specification for details. You can always get the information you would get here from another property such as the &lt;code&gt;tagName&lt;/code&gt; property for elements or the &lt;code&gt;name&lt;/code&gt; property for attributes. For all node types, the value of this attribute will be either a string or &lt;code&gt;None&lt;/code&gt;. This is a read-only attribute.</source>
          <target state="translated">对于每种节点类型，这都有不同的含义。有关详细信息，请参见DOM规范。您总是可以从另一个属性（例如元素的 &lt;code&gt;tagName&lt;/code&gt; 属性或属性的 &lt;code&gt;name&lt;/code&gt; 属性）获得在此处获得的信息。对于所有节点类型，此属性的值将为字符串或 &lt;code&gt;None&lt;/code&gt; 。这是一个只读属性。</target>
        </trans-unit>
        <trans-unit id="d49f6a32c691ba4c1b6204e2157adf71d435017f" translate="yes" xml:space="preserve">
          <source>This has implications both for recursive objects and object sharing. Recursive objects are objects that contain references to themselves. These are not handled by marshal, and in fact, attempting to marshal recursive objects will crash your Python interpreter. Object sharing happens when there are multiple references to the same object in different places in the object hierarchy being serialized. &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; stores such objects only once, and ensures that all other references point to the master copy. Shared objects remain shared, which can be very important for mutable objects.</source>
          <target state="translated">这对于递归对象和对象共享都有影响。递归对象是包含对其自身的引用的对象。这些不是由编组处理的，实际上，尝试编组递归对象将使您的Python解释器崩溃。当在序列化的对象层次结构中的不同位置存在对同一对象的多个引用时，就会发生对象共享。&lt;a href=&quot;#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;仅将此类对象存储一次，并确保所有其他引用都指向主副本。共享的对象保持共享状态，这对于可变对象非常重要。</target>
        </trans-unit>
        <trans-unit id="1399ebc54c4c88eebed882277416783d2785e8e3" translate="yes" xml:space="preserve">
          <source>This has the direct benefit of using the new widgets which gives a better look and feel across platforms; however, the replacement widgets are not completely compatible. The main difference is that widget options such as &amp;ldquo;fg&amp;rdquo;, &amp;ldquo;bg&amp;rdquo; and others related to widget styling are no longer present in Ttk widgets. Instead, use the &lt;code&gt;ttk.Style&lt;/code&gt; class for improved styling effects.</source>
          <target state="translated">使用新的窗口小部件的直接好处是可以在各个平台上提供更好的外观和感觉。但是，替换小部件并不完全兼容。主要区别在于，Ttk小部件中不再存在诸如&amp;ldquo; fg&amp;rdquo;，&amp;ldquo; bg&amp;rdquo;之类的小部件选项以及其他与小部件样式相关的选项。相反，请使用 &lt;code&gt;ttk.Style&lt;/code&gt; 类来改善样式效果。</target>
        </trans-unit>
        <trans-unit id="1e87d7da41d7ad71206613b0e5e393ce4a5a42bd" translate="yes" xml:space="preserve">
          <source>This has the same issue as the original example using class &lt;code&gt;C&lt;/code&gt;. That is, two instances of class &lt;code&gt;D&lt;/code&gt; that do not specify a value for &lt;code&gt;x&lt;/code&gt; when creating a class instance will share the same copy of &lt;code&gt;x&lt;/code&gt;. Because dataclasses just use normal Python class creation they also share this behavior. There is no general way for Data Classes to detect this condition. Instead, dataclasses will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if it detects a default parameter of type &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, or &lt;code&gt;set&lt;/code&gt;. This is a partial solution, but it does protect against many common errors.</source>
          <target state="translated">这与使用类 &lt;code&gt;C&lt;/code&gt; 的原始示例具有相同的问题。也就是说，创建类实例时未为 &lt;code&gt;x&lt;/code&gt; 指定值的两个类 &lt;code&gt;D&lt;/code&gt; 实例将共享 &lt;code&gt;x&lt;/code&gt; 的相同副本。因为数据类仅使用常规的Python类创建，所以它们也共享此行为。数据类没有检测这种情况的通用方法。相反，如果数据类检测到类型为 &lt;code&gt;list&lt;/code&gt; ， &lt;code&gt;dict&lt;/code&gt; 或 &lt;code&gt;set&lt;/code&gt; 的默认参数，则它将&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。这是部分解决方案，但确实可以防止许多常见错误。</target>
        </trans-unit>
        <trans-unit id="15fd1d9b07f7514f7cf5eb3c49b420f63b3b5f83" translate="yes" xml:space="preserve">
          <source>This header type provides no additional attributes.</source>
          <target state="translated">该头类型不提供任何附加属性。</target>
        </trans-unit>
        <trans-unit id="f8a8c30ab87345447e975d80dc8bc170b1bc77f0" translate="yes" xml:space="preserve">
          <source>This header type provides the following additional attributes:</source>
          <target state="translated">该头类型提供以下附加属性:</target>
        </trans-unit>
        <trans-unit id="9f71ac2855dc5cb60a48f538bcab9c6cdf2af6c3" translate="yes" xml:space="preserve">
          <source>This helper function returns a dictionary of scheme to proxy server URL mappings. It scans the environment for variables named &lt;code&gt;&amp;lt;scheme&amp;gt;_proxy&lt;/code&gt;, in a case insensitive approach, for all operating systems first, and when it cannot find it, looks for proxy information from Mac OSX System Configuration for Mac OS X and Windows Systems Registry for Windows. If both lowercase and uppercase environment variables exist (and disagree), lowercase is preferred.</source>
          <target state="translated">此辅助函数将方案字典返回到代理服务器URL映射。它以不区分大小写的方式在环境中扫描名称为 &lt;code&gt;&amp;lt;scheme&amp;gt;_proxy&lt;/code&gt; 的变量，首先对所有操作系统进行扫描，如果找不到，请从Mac OS X的Mac OSX系统配置和Windows的Windows系统注册表中查找代理信息。 。如果小写和大写环境变量都存在（并且不同意），则首选小写。</target>
        </trans-unit>
        <trans-unit id="53a5ee201fe7aa42751eeb86e24842797e265154" translate="yes" xml:space="preserve">
          <source>This hook function is called by built-in &lt;a href=&quot;functions#breakpoint&quot;&gt;&lt;code&gt;breakpoint()&lt;/code&gt;&lt;/a&gt;. By default, it drops you into the &lt;a href=&quot;pdb#module-pdb&quot;&gt;&lt;code&gt;pdb&lt;/code&gt;&lt;/a&gt; debugger, but it can be set to any other function so that you can choose which debugger gets used.</source>
          <target state="translated">该挂钩函数由内置的&lt;a href=&quot;functions#breakpoint&quot;&gt; &lt;code&gt;breakpoint()&lt;/code&gt; &lt;/a&gt;调用。默认情况下，它将带您进入&lt;a href=&quot;pdb#module-pdb&quot;&gt; &lt;code&gt;pdb&lt;/code&gt; &lt;/a&gt;调试器，但可以将其设置为任何其他函数，以便您选择使用哪个调试器。</target>
        </trans-unit>
        <trans-unit id="5b43c40f486c2ec49629b4760fedb3dc28cd7fac" translate="yes" xml:space="preserve">
          <source>This hook is exposed so that you can use it to implement directory search paths, addition of file extensions, and other namespace hacks. There is no corresponding &amp;lsquo;close&amp;rsquo; hook, but a shlex instance will call the &lt;a href=&quot;io#io.IOBase.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method of the sourced input stream when it returns EOF.</source>
          <target state="translated">该挂钩是公开的，因此您可以使用它来实现目录搜索路径，添加文件扩展名和其他名称空间黑客。没有相应的&amp;ldquo;关闭&amp;rdquo;钩子，但是shlex实例将在返回EOF时调用源输入流的&lt;a href=&quot;io#io.IOBase.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="14a8a4310f49249faa0c97df760d4f86f9f20bfd" translate="yes" xml:space="preserve">
          <source>This idiom would be unsafe:</source>
          <target state="translated">这个成语就不安全了。</target>
        </trans-unit>
        <trans-unit id="3712ae89c928266d43f7b324f245cd2bd71916f9" translate="yes" xml:space="preserve">
          <source>This implementation just returns the passed-in record. You may want to override this method if you need to do any custom marshalling or manipulation of the record before passing it to the handlers.</source>
          <target state="translated">这个实现只是返回传入的记录。如果你需要在将记录传递给处理程序之前,对记录进行任何自定义的编排或操作,你可能需要重写这个方法。</target>
        </trans-unit>
        <trans-unit id="917e7805862587e91db53a744cdd1f1c98f6c549" translate="yes" xml:space="preserve">
          <source>This implementation polls process file descriptors (pidfds) to await child process termination. In some respects, &lt;a href=&quot;#asyncio.PidfdChildWatcher&quot;&gt;&lt;code&gt;PidfdChildWatcher&lt;/code&gt;&lt;/a&gt; is a &amp;ldquo;Goldilocks&amp;rdquo; child watcher implementation. It doesn&amp;rsquo;t require signals or threads, doesn&amp;rsquo;t interfere with any processes launched outside the event loop, and scales linearly with the number of subprocesses launched by the event loop. The main disadvantage is that pidfds are specific to Linux, and only work on recent (5.3+) kernels.</source>
          <target state="translated">此实现轮询进程文件描述符（pidfds）以等待子进程终止。在某些方面，&lt;a href=&quot;#asyncio.PidfdChildWatcher&quot;&gt; &lt;code&gt;PidfdChildWatcher&lt;/code&gt; &lt;/a&gt;是&amp;ldquo; Goldilocks&amp;rdquo;儿童观察程序的实现。它不需要信号或线程，不会干扰事件循环之外启动的任何进程，并且与事件循环启动的子进程的数量呈线性比例关系。主要缺点是pidfds特定于Linux，并且只能在最新的（5.3+）内核上运行。</target>
        </trans-unit>
        <trans-unit id="777834ae53352a725347928a6858bafea05f6ec0" translate="yes" xml:space="preserve">
          <source>This implementation reaps every terminated processes by calling &lt;code&gt;os.waitpid(-1)&lt;/code&gt; directly, possibly breaking other code spawning processes and waiting for their termination.</source>
          <target state="translated">此实现通过直接调用 &lt;code&gt;os.waitpid(-1)&lt;/code&gt; 来获取每个终止的进程，从而可能破坏其他代码生成进程并等待其终止。</target>
        </trans-unit>
        <trans-unit id="d5fc161d4fd402329da4ef4c42d9348e3c0b7f9b" translate="yes" xml:space="preserve">
          <source>This implementation registers a &lt;code&gt;SIGCHLD&lt;/code&gt; signal handler on instantiation. That can break third-party code that installs a custom handler for &lt;code&gt;SIGCHLD&lt;/code&gt; signal.</source>
          <target state="translated">此实现在实例化时注册 &lt;code&gt;SIGCHLD&lt;/code&gt; 信号处理程序。这可能会破坏为 &lt;code&gt;SIGCHLD&lt;/code&gt; 信号安装自定义处理程序的第三方代码。</target>
        </trans-unit>
        <trans-unit id="e66f626d3049620372cb155540f6631b45554cd8" translate="yes" xml:space="preserve">
          <source>This implementation registers a &lt;code&gt;SIGCHLD&lt;/code&gt; signal handler on instantiation. That can break third-party code that installs a custom handler for &lt;code&gt;SIGCHLD&lt;/code&gt;. signal).</source>
          <target state="translated">此实现在实例化时注册 &lt;code&gt;SIGCHLD&lt;/code&gt; 信号处理程序。这可能会破坏为 &lt;code&gt;SIGCHLD&lt;/code&gt; 安装自定义处理程序的第三方代码。信号）。</target>
        </trans-unit>
        <trans-unit id="edd393e2fc27d7014d2911d6a54565f5099ffca5" translate="yes" xml:space="preserve">
          <source>This implementation starts a new waiting thread for every subprocess spawn.</source>
          <target state="translated">本实现为每一个子进程产卵启动一个新的等待线程。</target>
        </trans-unit>
        <trans-unit id="ef609bd0f65de7996847176aad6c4872816f0096" translate="yes" xml:space="preserve">
          <source>This implementation uses active event loop from the main thread to handle &lt;code&gt;SIGCHLD&lt;/code&gt; signal. If the main thread has no running event loop another thread cannot spawn a subprocess (&lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised).</source>
          <target state="translated">此实现使用来自主线程的活动事件循环来处理 &lt;code&gt;SIGCHLD&lt;/code&gt; 信号。如果主线程没有运行事件循环，则另一个线程无法生成子进程（引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b9fd2d3b23621ed74495b3c520170639252c1cb8" translate="yes" xml:space="preserve">
          <source>This installs the function &lt;code&gt;_()&lt;/code&gt; in Python&amp;rsquo;s builtins namespace, based on &lt;em&gt;domain&lt;/em&gt;, &lt;em&gt;localedir&lt;/em&gt;, and &lt;em&gt;codeset&lt;/em&gt; which are passed to the function &lt;a href=&quot;#gettext.translation&quot;&gt;&lt;code&gt;translation()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这将根据传递给函数&lt;a href=&quot;#gettext.translation&quot;&gt; &lt;code&gt;translation()&lt;/code&gt; 的&lt;/a&gt;&lt;em&gt; domain&lt;/em&gt;，&lt;em&gt;localedir&lt;/em&gt;和&lt;em&gt;codeset&lt;/em&gt;将函数 &lt;code&gt;_()&lt;/code&gt; 安装在Python的内建名称空间中。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c2e2c274c1f4f231ffb4b3c188adf438144d914" translate="yes" xml:space="preserve">
          <source>This interface is a subtype of the &lt;code&gt;Attributes&lt;/code&gt; interface (see section &lt;a href=&quot;#attributes-objects&quot;&gt;The Attributes Interface&lt;/a&gt;). All methods supported by that interface are also available on &lt;code&gt;AttributesNS&lt;/code&gt; objects.</source>
          <target state="translated">此接口是 &lt;code&gt;Attributes&lt;/code&gt; 接口的子类型（请参阅&lt;a href=&quot;#attributes-objects&quot;&gt;Attributes接口&lt;/a&gt;部分）。该接口支持的所有方法在 &lt;code&gt;AttributesNS&lt;/code&gt; 对象上也可用。</target>
        </trans-unit>
        <trans-unit id="69e1f3c707f5dccfcafc540b279aa49c7ac7c0b2" translate="yes" xml:space="preserve">
          <source>This interface specifies only those DTD events required for basic parsing (unparsed entities and attributes).</source>
          <target state="translated">这个接口只指定基本解析所需的DTD事件(未解析的实体和属性)。</target>
        </trans-unit>
        <trans-unit id="4bfef769a5c6fd1c3d4f6d5ae1a3d088e11a2056" translate="yes" xml:space="preserve">
          <source>This invocation will install &lt;code&gt;pip&lt;/code&gt; if it is not already installed, but otherwise does nothing. To ensure the installed version of &lt;code&gt;pip&lt;/code&gt; is at least as recent as the one bundled with &lt;code&gt;ensurepip&lt;/code&gt;, pass the &lt;code&gt;--upgrade&lt;/code&gt; option:</source>
          <target state="translated">如果尚未安装，则此调用将安装 &lt;code&gt;pip&lt;/code&gt; ，否则不执行任何操作。为了确保安装版本 &lt;code&gt;pip&lt;/code&gt; 至少为最近的一个捆绑 &lt;code&gt;ensurepip&lt;/code&gt; ，通过 &lt;code&gt;--upgrade&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="fb20184489faa55d2426651ba4b6f1ea8d80ec92" translate="yes" xml:space="preserve">
          <source>This is a &lt;code&gt;NamedNodeMap&lt;/code&gt; giving the definitions of external entities. For entity names defined more than once, only the first definition is provided (others are ignored as required by the XML recommendation). This may be &lt;code&gt;None&lt;/code&gt; if the information is not provided by the parser, or if no entities are defined.</source>
          <target state="translated">这是一个 &lt;code&gt;NamedNodeMap&lt;/code&gt; ,提供了外部实体的定义。对于多次定义的实体名称，仅提供第一个定义（根据XML建议的要求，其他定义将被忽略）。如果解析器未提供信息，或者未定义任何实体，则可能为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ccd5839ee601e99f6f394c59c1c5d21a1f62f7d" translate="yes" xml:space="preserve">
          <source>This is a &lt;code&gt;NamedNodeMap&lt;/code&gt; giving the definitions of notations. For notation names defined more than once, only the first definition is provided (others are ignored as required by the XML recommendation). This may be &lt;code&gt;None&lt;/code&gt; if the information is not provided by the parser, or if no notations are defined.</source>
          <target state="translated">这是一个 &lt;code&gt;NamedNodeMap&lt;/code&gt; ,提供了符号的定义。对于不止一次定义的符号名称，仅提供第一个定义（根据XML建议的要求，其他名称将被忽略）。如果解析器未提供信息，或者未定义符号，则该字段可以为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a0e8bb08b951bc0ca7e9c250421a010f6ad466d" translate="yes" xml:space="preserve">
          <source>This is a Linux-specific &lt;em&gt;idtype&lt;/em&gt; that indicates that &lt;em&gt;id&lt;/em&gt; is a file descriptor that refers to a process.</source>
          <target state="translated">这是特定于Linux的&lt;em&gt;idtype&lt;/em&gt;，指示&lt;em&gt;id&lt;/em&gt;是引用进程的文件描述符。</target>
        </trans-unit>
        <trans-unit id="3b5208e374d58ef0d15cd53fa00dca754440a5fc" translate="yes" xml:space="preserve">
          <source>This is a Python type object that represents the socket object type. It is the same as &lt;code&gt;type(socket(...))&lt;/code&gt;.</source>
          <target state="translated">这是一个表示套接字对象类型的Python类型对象。它与 &lt;code&gt;type(socket(...))&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="1dee36bf4f5451b3dde8adb8abdefc1876d4de9e" translate="yes" xml:space="preserve">
          <source>This is a backwards compatibility wrapper around &lt;a href=&quot;importlib#importlib.util.find_spec&quot;&gt;&lt;code&gt;importlib.util.find_spec()&lt;/code&gt;&lt;/a&gt; that converts most failures to &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt; and only returns the loader rather than the full &lt;code&gt;ModuleSpec&lt;/code&gt;.</source>
          <target state="translated">这是对&lt;a href=&quot;importlib#importlib.util.find_spec&quot;&gt; &lt;code&gt;importlib.util.find_spec()&lt;/code&gt; &lt;/a&gt;的向后兼容包装，该包装将大多数故障转换为&lt;a href=&quot;exceptions#ImportError&quot;&gt; &lt;code&gt;ImportError&lt;/code&gt; ,&lt;/a&gt;并且仅返回加载程序，而不是完整的 &lt;code&gt;ModuleSpec&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4853227db3f995082df7ac50dcf7aaaf84b7041" translate="yes" xml:space="preserve">
          <source>This is a class for comparing sequences of lines of text, and producing human-readable differences or deltas. Differ uses &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; both to compare sequences of lines, and to compare sequences of characters within similar (near-matching) lines.</source>
          <target state="translated">这是一类用于比较文本行序列并产生人类可读的差异或增量的类。Differ使用&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt; &lt;code&gt;SequenceMatcher&lt;/code&gt; &lt;/a&gt;来比较行序列，并比较相似（近匹配）行中的字符序列。</target>
        </trans-unit>
        <trans-unit id="a8fa4665c3a9797ed6410afb94e30d45735e5a34" translate="yes" xml:space="preserve">
          <source>This is a compatibility alias for the builtin &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">这是内置的&lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; &lt;/a&gt;异常的兼容性别名。</target>
        </trans-unit>
        <trans-unit id="37837f0ec1ef400d3ebf35665f34cf4e36eefe80" translate="yes" xml:space="preserve">
          <source>This is a convenience function for invoking &lt;a href=&quot;#functools.update_wrapper&quot;&gt;&lt;code&gt;update_wrapper()&lt;/code&gt;&lt;/a&gt; as a function decorator when defining a wrapper function. It is equivalent to &lt;code&gt;partial(update_wrapper, wrapped=wrapped, assigned=assigned, updated=updated)&lt;/code&gt;. For example:</source>
          <target state="translated">这是一个方便的函数，用于在定义包装函数时调用&lt;a href=&quot;#functools.update_wrapper&quot;&gt; &lt;code&gt;update_wrapper()&lt;/code&gt; &lt;/a&gt;作为函数装饰器。它等效于 &lt;code&gt;partial(update_wrapper, wrapped=wrapped, assigned=assigned, updated=updated)&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="67ef0177e990584ce72a8564cff23e66f1dd9f9a" translate="yes" xml:space="preserve">
          <source>This is a convenience function that calls &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; repeatedly so that the total time &amp;gt;= 0.2 second, returning the eventual (number of loops, time taken for that number of loops). It calls &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; with increasing numbers from the sequence 1, 2, 5, 10, 20, 50, &amp;hellip; until the time taken is at least 0.2 second.</source>
          <target state="translated">这是一个便捷函数，它反复调用&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;，以使总时间&amp;gt; = 0.2秒，并返回最终值（循环数，该循环数花费的时间）。它从序列&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;以递增的数字调用timeit（），直到花费的时间至少为0.2秒。</target>
        </trans-unit>
        <trans-unit id="938872e7160a22a30969daf820e4a0b8ebd24e14" translate="yes" xml:space="preserve">
          <source>This is a convenience function that calls the &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; repeatedly, returning a list of results. The first argument specifies how many times to call &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt;. The second argument specifies the &lt;em&gt;number&lt;/em&gt; argument for &lt;a href=&quot;#timeit.Timer.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这是一个便捷函数，它反复调用&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;并返回结果列表。第一个参数指定调用&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; 的次数&lt;/a&gt;。第二个参数指定&lt;a href=&quot;#timeit.Timer.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;number&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="cf3d30edfa064a563ec303c042f7eac8623ee99e" translate="yes" xml:space="preserve">
          <source>This is a convenience method for calling &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt; with the message represented by an &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;email.message.Message&lt;/code&gt;&lt;/a&gt; object. The arguments have the same meaning as for &lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;sendmail()&lt;/code&gt;&lt;/a&gt;, except that &lt;em&gt;msg&lt;/em&gt; is a &lt;code&gt;Message&lt;/code&gt; object.</source>
          <target state="translated">这是一种方便的方法，用于通过&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;email.message.Message&lt;/code&gt; &lt;/a&gt;对象表示的消息调用&lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;sendmail()&lt;/code&gt; &lt;/a&gt;。除了&lt;em&gt;msg&lt;/em&gt;是 &lt;code&gt;Message&lt;/code&gt; 对象之外，这些参数与&lt;a href=&quot;#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;sendmail()&lt;/code&gt; 的&lt;/a&gt;含义相同。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="980d084f94f1a1f05dbcfb9a33957714c6c2fb1a" translate="yes" xml:space="preserve">
          <source>This is a convenience wrapper around many of the functions listed below, most notably &lt;a href=&quot;#dis.get_instructions&quot;&gt;&lt;code&gt;get_instructions()&lt;/code&gt;&lt;/a&gt;, as iterating over a &lt;a href=&quot;#dis.Bytecode&quot;&gt;&lt;code&gt;Bytecode&lt;/code&gt;&lt;/a&gt; instance yields the bytecode operations as &lt;a href=&quot;#dis.Instruction&quot;&gt;&lt;code&gt;Instruction&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">这是对下面列出的许多函数的方便包装，其中最著名的是&lt;a href=&quot;#dis.get_instructions&quot;&gt; &lt;code&gt;get_instructions()&lt;/code&gt; &lt;/a&gt;，因为对&lt;a href=&quot;#dis.Bytecode&quot;&gt; &lt;code&gt;Bytecode&lt;/code&gt; &lt;/a&gt;实例进行迭代会产生与&lt;a href=&quot;#dis.Instruction&quot;&gt; &lt;code&gt;Instruction&lt;/code&gt; &lt;/a&gt;实例相同的字节码操作。</target>
        </trans-unit>
        <trans-unit id="498284187cd398ea132a44f93919c4008100e92c" translate="yes" xml:space="preserve">
          <source>This is a convenient shorthand for &lt;code&gt;print(code_info(x), file=file)&lt;/code&gt;, intended for interactive exploration at the interpreter prompt.</source>
          <target state="translated">这是 &lt;code&gt;print(code_info(x), file=file)&lt;/code&gt; 的方便快捷方式，旨在在解释器提示下进行交互式探索。</target>
        </trans-unit>
        <trans-unit id="8edf4f348b71a4a03b0b1fe5e2efdd8e50b78e09" translate="yes" xml:space="preserve">
          <source>This is a descriptor, used to define attributes that act differently when accessed through an instance and through a class. Instance access remains normal, but access to an attribute through a class will be routed to the class&amp;rsquo;s __getattr__ method; this is done by raising AttributeError.</source>
          <target state="translated">这是一个描述符，用于定义通过实例和类访问时行为不同的属性。实例访问仍​​然是正常的，但是通过类对属性的访问将被路由到类的__getattr__方法。这是通过引发AttributeError来完成的。</target>
        </trans-unit>
        <trans-unit id="af3bb3689f2aed5ed632d859ff4360df92b4652f" translate="yes" xml:space="preserve">
          <source>This is a dictionary that maps module names to modules which have already been loaded. This can be manipulated to force reloading of modules and other tricks. However, replacing the dictionary will not necessarily work as expected and deleting essential items from the dictionary may cause Python to fail.</source>
          <target state="translated">这是一个将模块名称映射到已经加载的模块的字典。这可以被操纵来强制重新加载模块和其它技巧。然而,替换字典不一定能达到预期的效果,从字典中删除必要的项目可能会导致 Python 失败。</target>
        </trans-unit>
        <trans-unit id="9a8e1dd0c6a91e83f3589db589be616dad107d0a" translate="yes" xml:space="preserve">
          <source>This is a factory method which allows subclasses to define the precise type of socket they want. The default implementation creates a TCP socket (&lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt;&lt;code&gt;socket.SOCK_STREAM&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">这是一种工厂方法，允许子类定义所需的确切套接字类型。默认实现创建一个TCP套接字（&lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt; &lt;code&gt;socket.SOCK_STREAM&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b26ec592d29731c63ae2c68e17de8b091431aaea" translate="yes" xml:space="preserve">
          <source>This is a factory method which can be overridden in subclasses to create specialized &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">这是一种工厂方法，可以在子类中对其进行重写以创建专门的&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="5843574bbe9da7d6b6838eb28296d0456a38c5fb" translate="yes" xml:space="preserve">
          <source>This is a flexible class for comparing pairs of sequences of any type, so long as the sequence elements are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;. The basic algorithm predates, and is a little fancier than, an algorithm published in the late 1980&amp;rsquo;s by Ratcliff and Obershelp under the hyperbolic name &amp;ldquo;gestalt pattern matching.&amp;rdquo; The idea is to find the longest contiguous matching subsequence that contains no &amp;ldquo;junk&amp;rdquo; elements; these &amp;ldquo;junk&amp;rdquo; elements are ones that are uninteresting in some sense, such as blank lines or whitespace. (Handling junk is an extension to the Ratcliff and Obershelp algorithm.) The same idea is then applied recursively to the pieces of the sequences to the left and to the right of the matching subsequence. This does not yield minimal edit sequences, but does tend to yield matches that &amp;ldquo;look right&amp;rdquo; to people.</source>
          <target state="translated">这是用于比较任何类型的序列对的灵活类，只要序列元素是可&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;哈希的即可&lt;/a&gt;。基本算法早于1980年代末由Ratcliff和Obershelp在双曲线名称&amp;ldquo;格式塔模式匹配&amp;rdquo;下发布，并且比此算法更新颖。这个想法是找到最长的不包含&amp;ldquo;垃圾&amp;rdquo;元素的连续匹配子序列。这些&amp;ldquo;垃圾&amp;rdquo;元素在某种意义上是无趣的，例如空白行或空白。 （处理垃圾是对Ratcliff和Obershelp算法的扩展。）然后，将相同的思想递归应用于匹配子序列左侧和右侧的片段。这不会产生最少的编辑序列，但是会产生对人&amp;ldquo;看起来正确&amp;rdquo;的匹配。</target>
        </trans-unit>
        <trans-unit id="7cad347fa9579dce44e440630ee250078fa104f6" translate="yes" xml:space="preserve">
          <source>This is a flexible class for comparing pairs of sequences of any type, so long as the sequence elements are &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt;. The basic algorithm predates, and is a little fancier than, an algorithm published in the late 1980&amp;rsquo;s by Ratcliff and Obershelp under the hyperbolic name &amp;ldquo;gestalt pattern matching.&amp;rdquo; The idea is to find the longest contiguous matching subsequence that contains no &amp;ldquo;junk&amp;rdquo; elements; these &amp;ldquo;junk&amp;rdquo; elements are ones that are uninteresting in some sense, such as blank lines or whitespace. (Handling junk is an extension to the Ratcliff and Obershelp algorithm.) The same idea is then applied recursively to the pieces of the sequences to the left and to the right of the matching subsequence. This does not yield minimal edit sequences, but does tend to yield matches that &amp;ldquo;look right&amp;rdquo; to people.</source>
          <target state="translated">这是一个灵活的类，用于比较任何类型的序列对，只要序列元素是可&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;哈希的即可&lt;/a&gt;。基本算法早于1980年代末由Ratcliff和Obershelp在双曲线名称&amp;ldquo;格式塔模式匹配&amp;rdquo;下发布的算法，并且比在以前的算法更新颖。这个想法是找到最长的不包含&amp;ldquo;垃圾&amp;rdquo;元素的连续匹配子序列。这些&amp;ldquo;垃圾&amp;rdquo;元素在某种意义上是无趣的，例如空白行或空白。（处理垃圾是对Ratcliff和Obershelp算法的扩展。）然后，将相同的思想递归应用于匹配子序列左侧和右侧的片段。这不会产生最少的编辑序列，但会产生对人&amp;ldquo;看起来正确&amp;rdquo;的匹配。</target>
        </trans-unit>
        <trans-unit id="34e62d716ed9ec49d64591a2d7f599e917d029d8" translate="yes" xml:space="preserve">
          <source>This is a flow control method that interacts with the underlying IO write buffer. When the size of the buffer reaches the high watermark, &lt;em&gt;drain()&lt;/em&gt; blocks until the size of the buffer is drained down to the low watermark and writing can be resumed. When there is nothing to wait for, the &lt;a href=&quot;#asyncio.StreamWriter.drain&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt; returns immediately.</source>
          <target state="translated">这是一种与基础IO写缓冲区交互的流控制方法。当缓冲区的大小达到高水位线时，&lt;em&gt;rain（）会&lt;/em&gt;阻塞，直到缓冲区的大小排空到低水位线为止，然后才能恢复写入。当没有什么可等待的时，&lt;a href=&quot;#asyncio.StreamWriter.drain&quot;&gt; &lt;code&gt;drain()&lt;/code&gt; &lt;/a&gt;立即返回。</target>
        </trans-unit>
        <trans-unit id="ee578e8a96ae7b79e56215ce0608af10bb1a6d51" translate="yes" xml:space="preserve">
          <source>This is a generic method; for specific types, specialized methods are provided.</source>
          <target state="translated">这是一种通用方法;对于特定类型,提供了专门的方法。</target>
        </trans-unit>
        <trans-unit id="c70fb04836ec95e115ea761b0a42390505b21010" translate="yes" xml:space="preserve">
          <source>This is a good approach if you write the class yourself. Let&amp;rsquo;s suppose you have a class like this:</source>
          <target state="translated">如果您自己编写该类，那么这是一个好方法。假设您有一个像这样的类：</target>
        </trans-unit>
        <trans-unit id="3fd22d2ebc9d1630fe3251b581127c5fa25ec2ef" translate="yes" xml:space="preserve">
          <source>This is a legacy API retained for backwards compatibility. When possible, you should use &lt;a href=&quot;#ssl.SSLContext.sni_callback&quot;&gt;&lt;code&gt;sni_callback&lt;/code&gt;&lt;/a&gt; instead. The given &lt;em&gt;server_name_callback&lt;/em&gt; is similar to &lt;em&gt;sni_callback&lt;/em&gt;, except that when the server hostname is an IDN-encoded internationalized domain name, the &lt;em&gt;server_name_callback&lt;/em&gt; receives a decoded U-label (&lt;code&gt;&quot;pyth&amp;ouml;n.org&quot;&lt;/code&gt;).</source>
          <target state="translated">这是为向后兼容保留的旧版API。如果可能，应改为使用&lt;a href=&quot;#ssl.SSLContext.sni_callback&quot;&gt; &lt;code&gt;sni_callback&lt;/code&gt; &lt;/a&gt;。给定的&lt;em&gt;server_name_callback&lt;/em&gt;与&lt;em&gt;sni_callback&lt;/em&gt;相似，不同之处在于，当服务器主机名是IDN编码的国际化域名时，&lt;em&gt;server_name_callback&lt;/em&gt;会收到一个解码的U标签（ &lt;code&gt;&quot;pyth&amp;ouml;n.org&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="928b464bfb8b1d3da5461ee431b2aebe894ae69d" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class it always returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">这是传统方法。在 &lt;code&gt;EmailMessage&lt;/code&gt; 类上，它始终返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="560364aea437ea98e565fe17e2a387401b67f453" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by &lt;a href=&quot;email.message#email.message.EmailMessage.get_content&quot;&gt;&lt;code&gt;get_content()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这是传统方法。在 &lt;code&gt;EmailMessage&lt;/code&gt; 类上，其功能由&lt;a href=&quot;email.message#email.message.EmailMessage.get_content&quot;&gt; &lt;code&gt;get_content()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="0adf6390e428a55bd96ef1ee56b56b179f8271a9" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; and the related &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;add&lt;/code&gt; methods.</source>
          <target state="translated">这是传统方法。在 &lt;code&gt;EmailMessage&lt;/code&gt; 类上，其功能由&lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;和相关的 &lt;code&gt;make&lt;/code&gt; 和 &lt;code&gt;add&lt;/code&gt; 方法代替。</target>
        </trans-unit>
        <trans-unit id="63b9d63fb4198d07361b2b2c61a42bbefcb8d10e" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这是传统方法。在 &lt;code&gt;EmailMessage&lt;/code&gt; 类上，其功能由&lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="27a2aa515d5423d4affd0779521e3b5fafa11340" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by the &lt;code&gt;make_&lt;/code&gt; and &lt;code&gt;add_&lt;/code&gt; methods.</source>
          <target state="translated">这是传统方法。在 &lt;code&gt;EmailMessage&lt;/code&gt; 类上，其功能由 &lt;code&gt;make_&lt;/code&gt; 和 &lt;code&gt;add_&lt;/code&gt; 方法代替。</target>
        </trans-unit>
        <trans-unit id="dfc629871289e0e65b56c5cbfe2f4ace662c8ec2" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by the &lt;em&gt;charset&lt;/em&gt; parameter of the &lt;code&gt;email.emailmessage.EmailMessage.set_content()&lt;/code&gt; method.</source>
          <target state="translated">这是传统方法。在 &lt;code&gt;EmailMessage&lt;/code&gt; 类上，其功能 &lt;code&gt;email.emailmessage.EmailMessage.set_content()&lt;/code&gt; 方法的&lt;em&gt;charset&lt;/em&gt;参数代替。</target>
        </trans-unit>
        <trans-unit id="a6fae13c077a979f25a3a7f031bc51558b673c47" translate="yes" xml:space="preserve">
          <source>This is a legacy method. On the &lt;code&gt;EmailMessage&lt;/code&gt; class its functionality is replaced by the &lt;em&gt;params&lt;/em&gt; property of the individual header objects returned by the header access methods.</source>
          <target state="translated">这是传统方法。在 &lt;code&gt;EmailMessage&lt;/code&gt; 类上，其功能由标头访问方法返回的各个标头对象的&lt;em&gt;params&lt;/em&gt;属性代替。</target>
        </trans-unit>
        <trans-unit id="a99c5dcc9ab288704491edaec84b894542f3acf7" translate="yes" xml:space="preserve">
          <source>This is a list of all the awaits made to the mock object in sequence (so the length of the list is the number of times it has been awaited). Before any awaits have been made it is an empty list.</source>
          <target state="translated">这是一个按顺序列出所有对mock对象进行的等待的列表(所以列表的长度就是它被等待的次数)。在进行任何等待之前,它是一个空列表。</target>
        </trans-unit>
        <trans-unit id="1b902cf8994e14c83ab2966f3101a37cf2ebc6f1" translate="yes" xml:space="preserve">
          <source>This is a list of all the calls made to the mock object in sequence (so the length of the list is the number of times it has been called). Before any calls have been made it is an empty list. The &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; object can be used for conveniently constructing lists of calls to compare with &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这是按顺序对模拟对象进行的所有调用的列表（因此列表的长度是其被调用的次数）。在进行任何呼叫之前，它是一个空列表。该&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt;对象可用于构建方便地调用与之比较的清单&lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;call_args_list&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc997d8da827766226a9a1b8cbef46aa4082f5c7" translate="yes" xml:space="preserve">
          <source>This is a low-level interface to the functionality of &lt;a href=&quot;#warnings.warn&quot;&gt;&lt;code&gt;warn()&lt;/code&gt;&lt;/a&gt;, passing in explicitly the message, category, filename and line number, and optionally the module name and the registry (which should be the &lt;code&gt;__warningregistry__&lt;/code&gt; dictionary of the module). The module name defaults to the filename with &lt;code&gt;.py&lt;/code&gt; stripped; if no registry is passed, the warning is never suppressed. &lt;em&gt;message&lt;/em&gt; must be a string and &lt;em&gt;category&lt;/em&gt; a subclass of &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; or &lt;em&gt;message&lt;/em&gt; may be a &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt; instance, in which case &lt;em&gt;category&lt;/em&gt; will be ignored.</source>
          <target state="translated">这是&lt;a href=&quot;#warnings.warn&quot;&gt; &lt;code&gt;warn()&lt;/code&gt; &lt;/a&gt;功能的低级接口，显式传递消息，类别，文件名和行号，以及可选的模块名称和注册表（应为模块的 &lt;code&gt;__warningregistry__&lt;/code&gt; 字典）。模块名称默认为带 &lt;code&gt;.py&lt;/code&gt; 的文件名。如果没有通过注册表，则永远不会取消该警告。&lt;em&gt;message&lt;/em&gt;必须是字符串和&lt;em&gt;类别&lt;/em&gt;，&lt;a href=&quot;exceptions#Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt;的子类或&lt;em&gt;message&lt;/em&gt;可能是&lt;a href=&quot;exceptions#Warning&quot;&gt; &lt;code&gt;Warning&lt;/code&gt; &lt;/a&gt;实例，在这种情况下，&lt;em&gt;类别&lt;/em&gt;将被忽略。</target>
        </trans-unit>
        <trans-unit id="a073c4a90d19a2d3d955e9d04e18a32015661680" translate="yes" xml:space="preserve">
          <source>This is a measure of the power in an audio signal.</source>
          <target state="translated">这是对音频信号中功率的衡量。</target>
        </trans-unit>
        <trans-unit id="4320eee4f82e48a26f22142603adb9abf481fd04" translate="yes" xml:space="preserve">
          <source>This is a mixin class that helps with HTTP authentication, both to the remote host and to a proxy. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported.</source>
          <target state="translated">这是一个混合类，可帮助对远程主机和代理进行HTTP身份验证。如果指定&lt;em&gt;password_mgr&lt;/em&gt;，则应与&lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt;兼容；有关必须支持的接口的信息，请参阅&lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr对象&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="94093b21ff1d5ab0d668c6a7f43229fb8ec28b23" translate="yes" xml:space="preserve">
          <source>This is a mixin class that helps with HTTP authentication, both to the remote host and to a proxy. &lt;em&gt;password_mgr&lt;/em&gt;, if given, should be something that is compatible with &lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt;&lt;code&gt;HTTPPasswordMgr&lt;/code&gt;&lt;/a&gt;; refer to section &lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr Objects&lt;/a&gt; for information on the interface that must be supported. If &lt;em&gt;passwd_mgr&lt;/em&gt; also provides &lt;code&gt;is_authenticated&lt;/code&gt; and &lt;code&gt;update_authenticated&lt;/code&gt; methods (see &lt;a href=&quot;#http-password-mgr-with-prior-auth&quot;&gt;HTTPPasswordMgrWithPriorAuth Objects&lt;/a&gt;), then the handler will use the &lt;code&gt;is_authenticated&lt;/code&gt; result for a given URI to determine whether or not to send authentication credentials with the request. If &lt;code&gt;is_authenticated&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt; for the URI, credentials are sent. If &lt;code&gt;is_authenticated&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, credentials are not sent, and then if a &lt;code&gt;401&lt;/code&gt; response is received the request is re-sent with the authentication credentials. If authentication succeeds, &lt;code&gt;update_authenticated&lt;/code&gt; is called to set &lt;code&gt;is_authenticated&lt;/code&gt;&lt;code&gt;True&lt;/code&gt; for the URI, so that subsequent requests to the URI or any of its super-URIs will automatically include the authentication credentials.</source>
          <target state="translated">这是一个混合类，可帮助对远程主机和代理进行HTTP身份验证。如果指定&lt;em&gt;password_mgr&lt;/em&gt;，则应与&lt;a href=&quot;#urllib.request.HTTPPasswordMgr&quot;&gt; &lt;code&gt;HTTPPasswordMgr&lt;/code&gt; &lt;/a&gt;兼容；有关必须支持的接口的信息，请参阅&lt;a href=&quot;#http-password-mgr&quot;&gt;HTTPPasswordMgr对象&lt;/a&gt;部分。如果&lt;em&gt;passwd_mgr&lt;/em&gt;还提供 &lt;code&gt;is_authenticated&lt;/code&gt; 和 &lt;code&gt;update_authenticated&lt;/code&gt; 方法（请参阅&lt;a href=&quot;#http-password-mgr-with-prior-auth&quot;&gt;HTTPPasswordMgrWithPriorAuth对象&lt;/a&gt;），则处理程序将使用 &lt;code&gt;is_authenticated&lt;/code&gt; 结果用于给定的URI，以确定是否随请求发送身份验证凭据。如果 &lt;code&gt;is_authenticated&lt;/code&gt; 返回 &lt;code&gt;True&lt;/code&gt; 对于URI，将发送凭据。如果 &lt;code&gt;is_authenticated&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt; ，则不发送凭据，然后，如果收到 &lt;code&gt;401&lt;/code&gt; 响应，则使用身份验证凭据重新发送请求。如果身份验证成功，则将调用 &lt;code&gt;update_authenticated&lt;/code&gt; 为URI 设置 &lt;code&gt;is_authenticated&lt;/code&gt; &lt;code&gt;True&lt;/code&gt; ，以便对URI或其任何超级URI的后续请求将自动包含身份验证凭据。</target>
        </trans-unit>
        <trans-unit id="996f13e7670dd2a8817147764b715d5a9ebb7999" translate="yes" xml:space="preserve">
          <source>This is a module-global setting, and affects all future doctests run by module &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;: the &lt;code&gt;runTest()&lt;/code&gt; method of &lt;code&gt;DocTestCase&lt;/code&gt; looks at the option flags specified for the test case when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed. If no reporting flags were specified (which is the typical and expected case), &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;bitwise ORed&lt;/a&gt; into the option flags, and the option flags so augmented are passed to the &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; instance created to run the doctest. If any reporting flags were specified when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed, &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are ignored.</source>
          <target state="translated">这是一个模块全局设置，并影响所有未来的doctests通过模块运行&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;：在 &lt;code&gt;runTest()&lt;/code&gt; 的方法 &lt;code&gt;DocTestCase&lt;/code&gt; 外观在测试用例中指定的选项标记的时候 &lt;code&gt;DocTestCase&lt;/code&gt; 实例构造。如果未指定报告标志（这是典型的情况和预期的情况），&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;报告标志&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#bitwise&quot;&gt;按位进行&amp;ldquo;或&amp;rdquo;运算&lt;/a&gt;到选项标志中，并将如此扩充的选项标志传递给创建的&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;实例，以运行doctest。如果在构造 &lt;code&gt;DocTestCase&lt;/code&gt; 实例时指定了任何报告标记，则&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;报告标志将被忽略。</target>
        </trans-unit>
        <trans-unit id="33e3135f5132e1fcfd517ce657e31b052e3db982" translate="yes" xml:space="preserve">
          <source>This is a module-global setting, and affects all future doctests run by module &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;: the &lt;code&gt;runTest()&lt;/code&gt; method of &lt;code&gt;DocTestCase&lt;/code&gt; looks at the option flags specified for the test case when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed. If no reporting flags were specified (which is the typical and expected case), &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;bitwise ORed&lt;/a&gt; into the option flags, and the option flags so augmented are passed to the &lt;a href=&quot;#doctest.DocTestRunner&quot;&gt;&lt;code&gt;DocTestRunner&lt;/code&gt;&lt;/a&gt; instance created to run the doctest. If any reporting flags were specified when the &lt;code&gt;DocTestCase&lt;/code&gt; instance was constructed, &lt;a href=&quot;#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; reporting flags are ignored.</source>
          <target state="translated">这是一个模块全局设置，并影响所有未来的doctests通过模块运行&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;：在 &lt;code&gt;runTest()&lt;/code&gt; 的方法 &lt;code&gt;DocTestCase&lt;/code&gt; 外观在测试用例中指定的选项标记的时候 &lt;code&gt;DocTestCase&lt;/code&gt; 实例构造。如果未指定报告标志（这是典型的情况和预期的情况），&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;报告标志&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#bitwise&quot;&gt;按位进行&amp;ldquo;或&amp;rdquo;运算&lt;/a&gt;到选项标志中，并将如此扩充的选项标志传递给创建的&lt;a href=&quot;#doctest.DocTestRunner&quot;&gt; &lt;code&gt;DocTestRunner&lt;/code&gt; &lt;/a&gt;实例，以运行doctest。如果在构造 &lt;code&gt;DocTestCase&lt;/code&gt; 实例时指定了任何报告标志，则&lt;a href=&quot;#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;报告标志将被忽略。</target>
        </trans-unit>
        <trans-unit id="bd579c90746112b0e9a715bf70500cdbf4cb8b4c" translate="yes" xml:space="preserve">
          <source>This is a nonstandard convenience method for executing multiple SQL statements at once. It issues a &lt;code&gt;COMMIT&lt;/code&gt; statement first, then executes the SQL script it gets as a parameter.</source>
          <target state="translated">这是一次同时执行多个SQL语句的非标准便捷方法。它首先发出 &lt;code&gt;COMMIT&lt;/code&gt; 语句，然后执行作为参数获取的SQL脚本。</target>
        </trans-unit>
        <trans-unit id="f25f408676466832f9ff8f647196311789c1a7ad" translate="yes" xml:space="preserve">
          <source>This is a nonstandard shortcut that creates a cursor object by calling the &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;cursor()&lt;/code&gt;&lt;/a&gt; method, calls the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method with the &lt;em&gt;parameters&lt;/em&gt; given, and returns the cursor.</source>
          <target state="translated">这是一个非标准的快捷方式，它通过调用&lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;cursor()&lt;/code&gt; &lt;/a&gt;方法创建游标对象，使用给定的&lt;em&gt;参数&lt;/em&gt;调用游标的&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt;方法，然后返回游标。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f026b3fde6844ad7ddf3c6cb9c30cb2c9296424" translate="yes" xml:space="preserve">
          <source>This is a nonstandard shortcut that creates a cursor object by calling the &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;cursor()&lt;/code&gt;&lt;/a&gt; method, calls the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt;&lt;code&gt;executemany()&lt;/code&gt;&lt;/a&gt; method with the &lt;em&gt;parameters&lt;/em&gt; given, and returns the cursor.</source>
          <target state="translated">这是一个非标准的快捷方式，它通过调用&lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;cursor()&lt;/code&gt; &lt;/a&gt;方法创建游标对象，使用给定的&lt;em&gt;参数&lt;/em&gt;调用游标的&lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt; &lt;code&gt;executemany()&lt;/code&gt; &lt;/a&gt;方法，然后返回游标。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f07d18339dec09d14b91f6da8c999bb831d41d7" translate="yes" xml:space="preserve">
          <source>This is a nonstandard shortcut that creates a cursor object by calling the &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;cursor()&lt;/code&gt;&lt;/a&gt; method, calls the cursor&amp;rsquo;s &lt;a href=&quot;#sqlite3.Cursor.executescript&quot;&gt;&lt;code&gt;executescript()&lt;/code&gt;&lt;/a&gt; method with the given &lt;em&gt;sql_script&lt;/em&gt;, and returns the cursor.</source>
          <target state="translated">这是一个非标准的快捷方式，它通过调用&lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;cursor()&lt;/code&gt; &lt;/a&gt;方法创建游标对象，并使用给定的&lt;em&gt;sql_script&lt;/em&gt;调用游标的&lt;em&gt;executescript &lt;/em&gt;&lt;a href=&quot;#sqlite3.Cursor.executescript&quot;&gt; &lt;code&gt;executescript()&lt;/code&gt; &lt;/a&gt;方法，然后返回游标。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ac73b34e4853d2c7555adf61229da0b29863e37" translate="yes" xml:space="preserve">
          <source>This is a possible value for the flags argument in &lt;a href=&quot;#os.setxattr&quot;&gt;&lt;code&gt;setxattr()&lt;/code&gt;&lt;/a&gt;. It indicates the operation must create an attribute.</source>
          <target state="translated">这是&lt;a href=&quot;#os.setxattr&quot;&gt; &lt;code&gt;setxattr()&lt;/code&gt; 中&lt;/a&gt; flags参数的可能值。它指示该操作必须创建一个属性。</target>
        </trans-unit>
        <trans-unit id="96540e48fc82860097be205c93b6abd3606e07c1" translate="yes" xml:space="preserve">
          <source>This is a possible value for the flags argument in &lt;a href=&quot;#os.setxattr&quot;&gt;&lt;code&gt;setxattr()&lt;/code&gt;&lt;/a&gt;. It indicates the operation must replace an existing attribute.</source>
          <target state="translated">这是&lt;a href=&quot;#os.setxattr&quot;&gt; &lt;code&gt;setxattr()&lt;/code&gt; 中&lt;/a&gt; flags参数的可能值。它指示该操作必须替换现有属性。</target>
        </trans-unit>
        <trans-unit id="f6e80deb781542d74711015086c8206e50356e00" translate="yes" xml:space="preserve">
          <source>This is a purely lexical operation, hence the following behaviour:</source>
          <target state="translated">这是一个纯粹的词性操作,因此有以下行为。</target>
        </trans-unit>
        <trans-unit id="e43ca65c0fdbbd61accd8b6277bbb2c59aba9401" translate="yes" xml:space="preserve">
          <source>This is a read-only &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-attribute&quot;&gt;attribute&lt;/a&gt; that returns the value of &lt;code&gt;key&lt;/code&gt; passed to the constructor, which should be a lookup key in the IANA time zone database (e.g. &lt;code&gt;America/New_York&lt;/code&gt;, &lt;code&gt;Europe/Paris&lt;/code&gt; or &lt;code&gt;Asia/Tokyo&lt;/code&gt;).</source>
          <target state="translated">这是一个只读&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-attribute&quot;&gt;属性&lt;/a&gt;，返回传递给构造函数的 &lt;code&gt;key&lt;/code&gt; 的值，该值应该是IANA时区数据库（例如 &lt;code&gt;America/New_York&lt;/code&gt; ， &lt;code&gt;Europe/Paris&lt;/code&gt; 或 &lt;code&gt;Asia/Tokyo&lt;/code&gt; ）中的查找键。</target>
        </trans-unit>
        <trans-unit id="79b9ada7f8d4fc3182b2d3f64af63694e2a47bf2" translate="yes" xml:space="preserve">
          <source>This is a relative of &lt;a href=&quot;#setattr&quot;&gt;&lt;code&gt;setattr()&lt;/code&gt;&lt;/a&gt;. The arguments are an object and a string. The string must be the name of one of the object&amp;rsquo;s attributes. The function deletes the named attribute, provided the object allows it. For example, &lt;code&gt;delattr(x, 'foobar')&lt;/code&gt; is equivalent to &lt;code&gt;del x.foobar&lt;/code&gt;.</source>
          <target state="translated">这是&lt;a href=&quot;#setattr&quot;&gt; &lt;code&gt;setattr()&lt;/code&gt; &lt;/a&gt;的亲戚。参数是一个对象和一个字符串。该字符串必须是对象属性之一的名称。如果对象允许，该函数将删除命名属性。例如， &lt;code&gt;delattr(x, 'foobar')&lt;/code&gt; 等同于 &lt;code&gt;del x.foobar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9715e416b1df859f446f99f56d2aa08145ae5cce" translate="yes" xml:space="preserve">
          <source>This is a relatively low level API that takes care of the details of correctly unwinding the stack of exit callbacks. It provides a suitable foundation for higher level context managers that manipulate the exit stack in application specific ways.</source>
          <target state="translated">这是一个相对较低级的API,它负责处理正确释放退出回调栈的细节。它为更高级别的上下文管理器提供了一个合适的基础,这些上下文管理器以应用程序特定的方式操纵退出栈。</target>
        </trans-unit>
        <trans-unit id="2dbf3692d221f94721c68226699f011fa8c60193" translate="yes" xml:space="preserve">
          <source>This is a short tutorial for using &lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt;&lt;code&gt;xml.etree.ElementTree&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;ET&lt;/code&gt; in short). The goal is to demonstrate some of the building blocks and basic concepts of the module.</source>
          <target state="translated">这是使用&lt;a href=&quot;#module-xml.etree.ElementTree&quot;&gt; &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; &lt;/a&gt;（简称 &lt;code&gt;ET&lt;/code&gt; ）的简短教程。目的是演示该模块的一些构建块和基本概念。</target>
        </trans-unit>
        <trans-unit id="fa365b626b798e07b34b9f21c141cb183f10539a" translate="yes" xml:space="preserve">
          <source>This is a short-circuit operator, so it only evaluates the second argument if the first one is false.</source>
          <target state="translated">这是一个短路操作符,所以只有当第一个参数为假时,它才会评估第二个参数。</target>
        </trans-unit>
        <trans-unit id="dc5e590500f62fbd4dc8ebdd79a793c1c71615c0" translate="yes" xml:space="preserve">
          <source>This is a short-circuit operator, so it only evaluates the second argument if the first one is true.</source>
          <target state="translated">这是一个短路操作符,所以只有当第一个参数为真时,它才会评估第二个参数。</target>
        </trans-unit>
        <trans-unit id="9f41bbe9d27e4a677b830d37db3fb2b9e6f876eb" translate="yes" xml:space="preserve">
          <source>This is a shorthand for &lt;code&gt;print_exception(*sys.exc_info(), limit, file,
chain)&lt;/code&gt;.</source>
          <target state="translated">这是 &lt;code&gt;print_exception(*sys.exc_info(), limit, file, chain)&lt;/code&gt; 的简写。</target>
        </trans-unit>
        <trans-unit id="a9296be127dc4a3b4f48abe6df80c8c1d08c7d67" translate="yes" xml:space="preserve">
          <source>This is a shorthand for &lt;code&gt;print_exception(sys.last_type, sys.last_value,
sys.last_traceback, limit, file, chain)&lt;/code&gt;. In general it will work only after an exception has reached an interactive prompt (see &lt;a href=&quot;sys#sys.last_type&quot;&gt;&lt;code&gt;sys.last_type&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">这是 &lt;code&gt;print_exception(sys.last_type, sys.last_value, sys.last_traceback, limit, file, chain)&lt;/code&gt; 的简写。通常，它仅在异常到达交互式提示&lt;a href=&quot;sys#sys.last_type&quot;&gt; &lt;code&gt;sys.last_type&lt;/code&gt; &lt;/a&gt;（请参见sys.last_type）。</target>
        </trans-unit>
        <trans-unit id="4e593684971c7ffd714930ffa9422d5c50b3b1cf" translate="yes" xml:space="preserve">
          <source>This is a standard context defined by the General Decimal Arithmetic Specification. Precision is set to nine. Rounding is set to &lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt;&lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt;&lt;/a&gt;. All flags are cleared. No traps are enabled (so that exceptions are not raised during computations).</source>
          <target state="translated">这是通用十进制算术规范定义的标准上下文。精度设置为九。舍入设置为&lt;a href=&quot;#decimal.ROUND_HALF_EVEN&quot;&gt; &lt;code&gt;ROUND_HALF_EVEN&lt;/code&gt; &lt;/a&gt;。所有标志被清除。没有启用陷阱（因此在计算过程中不会引发异常）。</target>
        </trans-unit>
        <trans-unit id="2da625cd53289b672f7014ba22ac20aee7685a56" translate="yes" xml:space="preserve">
          <source>This is a standard context defined by the General Decimal Arithmetic Specification. Precision is set to nine. Rounding is set to &lt;a href=&quot;#decimal.ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;. All flags are cleared. All traps are enabled (treated as exceptions) except &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#decimal.Rounded&quot;&gt;&lt;code&gt;Rounded&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#decimal.Subnormal&quot;&gt;&lt;code&gt;Subnormal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这是通用十进制算术规范定义的标准上下文。精度设置为九。舍入设置为&lt;a href=&quot;#decimal.ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt;。所有标志被清除。除&lt;a href=&quot;#decimal.Inexact&quot;&gt; &lt;code&gt;Inexact&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#decimal.Rounded&quot;&gt; &lt;code&gt;Rounded&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#decimal.Subnormal&quot;&gt; &lt;code&gt;Subnormal&lt;/code&gt; &lt;/a&gt;之外，所有陷阱均已启用（视为异常）。</target>
        </trans-unit>
        <trans-unit id="a7930d7442fb88df54eb093e8c8ca59852bfaac7" translate="yes" xml:space="preserve">
          <source>This is a straightforward interface to the Unix &lt;code&gt;select()&lt;/code&gt; system call. The first three arguments are iterables of &amp;lsquo;waitable objects&amp;rsquo;: either integers representing file descriptors or objects with a parameterless method named &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; returning such an integer:</source>
          <target state="translated">这是Unix &lt;code&gt;select()&lt;/code&gt; 系统调用的直接接口。前三个参数是&amp;ldquo;等待对象&amp;rdquo;的可迭代对象：代表文件描述符的整数或具有名为&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;的无参数方法的对象返回的整数：</target>
        </trans-unit>
        <trans-unit id="cd336ee085cbeef7c437546cd6c8582a726fd7e2" translate="yes" xml:space="preserve">
          <source>This is a straightforward interface to the Unix &lt;code&gt;select()&lt;/code&gt; system call. The first three arguments are sequences of &amp;lsquo;waitable objects&amp;rsquo;: either integers representing file descriptors or objects with a parameterless method named &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; returning such an integer:</source>
          <target state="translated">这是Unix &lt;code&gt;select()&lt;/code&gt; 系统调用的直接接口。前三个参数是&amp;ldquo;等待对象&amp;rdquo;的序列：代表文件描述符的整数或带有名为&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;的无参数方法的对象返回这样的整数：</target>
        </trans-unit>
        <trans-unit id="a9653a53929c37a27ca2d3608cb98481b962cc2f" translate="yes" xml:space="preserve">
          <source>This is a string of the form &lt;code&gt;widthxheight&lt;/code&gt;, where width and height are measured in pixels for most widgets (in characters for widgets displaying text). For example: &lt;code&gt;fred[&quot;geometry&quot;] = &quot;200x100&quot;&lt;/code&gt;.</source>
          <target state="translated">这是一个格式为 &lt;code&gt;widthxheight&lt;/code&gt; 的字符串，其中，大多数小部件的宽度和高度以像素为单位（显示文本的小部件以字符为单位）。例如： &lt;code&gt;fred[&quot;geometry&quot;] = &quot;200x100&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2d23b43b3d9f7e926c09069e36030aeb6308947" translate="yes" xml:space="preserve">
          <source>This is a string with four space-delimited elements, each of which is a legal distance (see above). For example: &lt;code&gt;&quot;2 3 4 5&quot;&lt;/code&gt; and &lt;code&gt;&quot;3i 2i 4.5i 2i&quot;&lt;/code&gt; and &lt;code&gt;&quot;3c 2c 4c 10.43c&quot;&lt;/code&gt; are all legal regions.</source>
          <target state="translated">这是一个包含四个以空格分隔的元素的字符串，每个元素都是一个合法的距离（请参见上文）。例如： &lt;code&gt;&quot;2 3 4 5&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;3i 2i 4.5i 2i&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;3c 2c 4c 10.43c&quot;&lt;/code&gt; 都是合法区域。</target>
        </trans-unit>
        <trans-unit id="505a14132b19d890d214ba81ac33505c98cfb289" translate="yes" xml:space="preserve">
          <source>This is a subclass derived from &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; that connects over an SSL encrypted socket (to use this class you need a socket module that was compiled with SSL support). If &lt;em&gt;host&lt;/em&gt; is not specified, &lt;code&gt;''&lt;/code&gt; (the local host) is used. If &lt;em&gt;port&lt;/em&gt; is omitted, the standard IMAP4-over-SSL port (993) is used. &lt;em&gt;ssl_context&lt;/em&gt; is a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object which allows bundling SSL configuration options, certificates and private keys into a single (potentially long-lived) structure. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices.</source>
          <target state="translated">这是从&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;派生的子类，该子类通过SSL加密套接字进行连接（要使用此类，您需要使用SSL支持编译的套接字模块）。如果&lt;em&gt;主机&lt;/em&gt;没有指定， &lt;code&gt;''&lt;/code&gt; （本地主机）被使用。如果省略&lt;em&gt;端口&lt;/em&gt;，则使用标准的IMAP4-over-SSL端口（993）。&lt;em&gt;ssl_context&lt;/em&gt;是&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;对象，该对象允许将SSL配置选项，证书和私钥捆绑到单个（可能长期存在）的结构中。请阅读&lt;a href=&quot;ssl#ssl-security&quot;&gt;安全性注意事项&lt;/a&gt;以获取最佳实践。</target>
        </trans-unit>
        <trans-unit id="764f94ad39faf8459a1f96a15f7dd2ebd680f57d" translate="yes" xml:space="preserve">
          <source>This is a subclass derived from &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; that connects to the &lt;code&gt;stdin/stdout&lt;/code&gt; file descriptors created by passing &lt;em&gt;command&lt;/em&gt; to &lt;code&gt;subprocess.Popen()&lt;/code&gt;.</source>
          <target state="translated">这是从&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;派生的子类，该子类连接到通过将&lt;em&gt;命令&lt;/em&gt;传递给 &lt;code&gt;subprocess.Popen()&lt;/code&gt; 创建的 &lt;code&gt;stdin/stdout&lt;/code&gt; 文件描述符。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7dccb247bf4ce42730d244a4bcedb9e3a1d6f4a8" translate="yes" xml:space="preserve">
          <source>This is a subclass of &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; that connects to the server over an SSL encrypted socket. If &lt;em&gt;port&lt;/em&gt; is not specified, 995, the standard POP3-over-SSL port is used. &lt;em&gt;timeout&lt;/em&gt; works as in the &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; constructor. &lt;em&gt;context&lt;/em&gt; is an optional &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object which allows bundling SSL configuration options, certificates and private keys into a single (potentially long-lived) structure. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices.</source>
          <target state="translated">这是&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt;的子类，它通过SSL加密的套接字连接到服务器。如果未指定&lt;em&gt;端口&lt;/em&gt; 995，则使用标准的POP3-over-SSL端口。&lt;em&gt;超时&lt;/em&gt;在&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt;构造函数中起作用。&lt;em&gt;context&lt;/em&gt;是一个可选的&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;对象，它允许将SSL配置选项，证书和私钥捆绑到一个（可能长期存在）的结构中。请阅读&lt;a href=&quot;ssl#ssl-security&quot;&gt;安全性注意事项&lt;/a&gt;以获取最佳实践。</target>
        </trans-unit>
        <trans-unit id="ef9776734c2d67729c4aaf01a2cd2a9bbb54ab5e" translate="yes" xml:space="preserve">
          <source>This is a subclassable type rather than a factory function.</source>
          <target state="translated">这是一个可子类类型,而不是一个工厂函数。</target>
        </trans-unit>
        <trans-unit id="9765ce9944ccb97a9358dad6c89e4504fdbd8f6e" translate="yes" xml:space="preserve">
          <source>This is a symbolic constant used for different values returned by &lt;a href=&quot;#locale.localeconv&quot;&gt;&lt;code&gt;localeconv()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这是一个符号常量，用于由&lt;a href=&quot;#locale.localeconv&quot;&gt; &lt;code&gt;localeconv()&lt;/code&gt; &lt;/a&gt;返回的不同值。</target>
        </trans-unit>
        <trans-unit id="cc8d2a984c67cda6fb3471c60192bee35875336f" translate="yes" xml:space="preserve">
          <source>This is a useful example for subclassing Enum to add or change other behaviors as well as disallowing aliases. If the only desired change is disallowing aliases, the &lt;a href=&quot;#enum.unique&quot;&gt;&lt;code&gt;unique()&lt;/code&gt;&lt;/a&gt; decorator can be used instead.</source>
          <target state="translated">这是将Enum子类化以添加或更改其他行为以及禁止别名的有用示例。如果唯一所需的更改是禁止使用别名，则可以改用&lt;a href=&quot;#enum.unique&quot;&gt; &lt;code&gt;unique()&lt;/code&gt; &lt;/a&gt;装饰器。</target>
        </trans-unit>
        <trans-unit id="2f095373c041f749d13f3b152d79425bbe538a11" translate="yes" xml:space="preserve">
          <source>This is a working &amp;ldquo;Hello World&amp;rdquo; WSGI application:</source>
          <target state="translated">这是一个工作正常的&amp;ldquo; Hello World&amp;rdquo; WSGI应用程序：</target>
        </trans-unit>
        <trans-unit id="ed30072f4605977c71fd7205e1fd018e0d972eea" translate="yes" xml:space="preserve">
          <source>This is a wrapper for the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;get_data&lt;/code&gt;&lt;/a&gt; API. The &lt;em&gt;package&lt;/em&gt; argument should be the name of a package, in standard module format (&lt;code&gt;foo.bar&lt;/code&gt;). The &lt;em&gt;resource&lt;/em&gt; argument should be in the form of a relative filename, using &lt;code&gt;/&lt;/code&gt; as the path separator. The parent directory name &lt;code&gt;..&lt;/code&gt; is not allowed, and nor is a rooted name (starting with a &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">这是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-loader&quot;&gt;加载程序&lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;get_data&lt;/code&gt; &lt;/a&gt; API 的包装。所述&lt;em&gt;包&lt;/em&gt;参数应该是一个包的名称，在标准模块格式（ &lt;code&gt;foo.bar&lt;/code&gt; ）。所述&lt;em&gt;资源&lt;/em&gt;参数应该是在一个相对文件名的形式，使用 &lt;code&gt;/&lt;/code&gt; 作为路径分隔符。不允许使用父目录名称 &lt;code&gt;..&lt;/code&gt; ，也不能使用根目录名称（以 &lt;code&gt;/&lt;/code&gt; 开头）。</target>
        </trans-unit>
        <trans-unit id="892ee36af8eae80320a2354e62c1ef8a2a921aae" translate="yes" xml:space="preserve">
          <source>This is a wrapper for the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;loader&lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt;&lt;code&gt;get_data&lt;/code&gt;&lt;/a&gt; API. The &lt;em&gt;package&lt;/em&gt; argument should be the name of a package, in standard module format (&lt;code&gt;foo.bar&lt;/code&gt;). The &lt;em&gt;resource&lt;/em&gt; argument should be in the form of a relative filename, using &lt;code&gt;/&lt;/code&gt; as the path separator. The parent directory name &lt;code&gt;..&lt;/code&gt; is not allowed, and nor is a rooted name (starting with a &lt;code&gt;/&lt;/code&gt;).</source>
          <target state="translated">这是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-loader&quot;&gt;加载程序&lt;/a&gt;&lt;a href=&quot;importlib#importlib.abc.ResourceLoader.get_data&quot;&gt; &lt;code&gt;get_data&lt;/code&gt; &lt;/a&gt; API的包装。所述&lt;em&gt;包&lt;/em&gt;参数应该是一个包的名称，在标准模块格式（ &lt;code&gt;foo.bar&lt;/code&gt; ）。所述&lt;em&gt;资源&lt;/em&gt;参数应该是在一个相对文件名的形式，使用 &lt;code&gt;/&lt;/code&gt; 作为路径分隔符。不允许使用父目录名称 &lt;code&gt;..&lt;/code&gt; ，也不能使用根目录名称（以 &lt;code&gt;/&lt;/code&gt; 开头）。</target>
        </trans-unit>
        <trans-unit id="fbe8df11a8943e8d9f9b85f47cfd605f5644d080" translate="yes" xml:space="preserve">
          <source>This is almost always the &lt;code&gt;set()&lt;/code&gt; method of some scrollbar widget, but can be any widget method that takes a single argument.</source>
          <target state="translated">这几乎总是某些滚动条小部件的 &lt;code&gt;set()&lt;/code&gt; 方法，但是可以是任何带有单个参数的小部件方法。</target>
        </trans-unit>
        <trans-unit id="2555e7bf342a503beae512a726ce26265cc5be14" translate="yes" xml:space="preserve">
          <source>This is also the value returned by &lt;code&gt;str(addr)&lt;/code&gt; for IPv6 addresses.</source>
          <target state="translated">这也是 &lt;code&gt;str(addr)&lt;/code&gt; 为IPv6地址返回的值。</target>
        </trans-unit>
        <trans-unit id="9ef1b8548cedff987ad30e8dfdd3712f04390089" translate="yes" xml:space="preserve">
          <source>This is an &lt;a href=&quot;os#os.pathsep&quot;&gt;&lt;code&gt;os.pathsep&lt;/code&gt;&lt;/a&gt;-separated string containing the time zone search path to use. It must consist of only absolute rather than relative paths. Relative components specified in &lt;code&gt;PYTHONTZPATH&lt;/code&gt; will not be used, but otherwise the behavior when a relative path is specified is implementation-defined; CPython will raise &lt;a href=&quot;#zoneinfo.InvalidTZPathWarning&quot;&gt;&lt;code&gt;InvalidTZPathWarning&lt;/code&gt;&lt;/a&gt;, but other implementations are free to silently ignore the erroneous component or raise an exception.</source>
          <target state="translated">这是一个&lt;a href=&quot;os#os.pathsep&quot;&gt; &lt;code&gt;os.pathsep&lt;/code&gt; 分隔的&lt;/a&gt;字符串，其中包含要使用的时区搜索路径。它只能包含绝对路径，而不能包含相对路径。将不使用在 &lt;code&gt;PYTHONTZPATH&lt;/code&gt; 中指定的相对组件，但是否则，当指定相对路径时的行为是实现定义的；CPython将引发&lt;a href=&quot;#zoneinfo.InvalidTZPathWarning&quot;&gt; &lt;code&gt;InvalidTZPathWarning&lt;/code&gt; &lt;/a&gt;，但是其他实现可以随意忽略错误的组件或引发异常。</target>
        </trans-unit>
        <trans-unit id="7d5496a2a6eb94af65673cb0d50ad6bafe0ea28b" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;IMAP4rev1&lt;/code&gt; extension command.</source>
          <target state="translated">这是 &lt;code&gt;IMAP4rev1&lt;/code&gt; 扩展命令。</target>
        </trans-unit>
        <trans-unit id="7b34ee508bd103c5e0b8626cf2d804764b1677d4" translate="yes" xml:space="preserve">
          <source>This is an abstract base class for running WSGI applications. Each instance will handle a single HTTP request, although in principle you could create a subclass that was reusable for multiple requests.</source>
          <target state="translated">这是一个用于运行WSGI应用程序的抽象基类,每个实例将处理单个HTTP请求,但原则上你可以创建一个可重复使用的子类。每个实例将处理一个单一的HTTP请求,尽管原则上你可以创建一个可重用的子类来处理多个请求。</target>
        </trans-unit>
        <trans-unit id="a7592b3f4af1c675ae0461bbd0cd882d434a1f23" translate="yes" xml:space="preserve">
          <source>This is an abstract base class, meaning that this class should not be instantiated directly. Define a subclass of &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; to capture information about a particular time zone.</source>
          <target state="translated">这是一个抽象基类，意味着该类不应直接实例化。定义&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;的子类以捕获有关特定时区的信息。</target>
        </trans-unit>
        <trans-unit id="0fe0477da04d468c9bd5e5b663db76e9e220f768" translate="yes" xml:space="preserve">
          <source>This is an advanced function that is not needed in everyday Python programming, unlike &lt;a href=&quot;importlib#importlib.import_module&quot;&gt;&lt;code&gt;importlib.import_module()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;importlib#importlib.import_module&quot;&gt; &lt;code&gt;importlib.import_module()&lt;/code&gt; &lt;/a&gt;不同，这是日常Python编程中不需要的高级功能。</target>
        </trans-unit>
        <trans-unit id="5d2b4b1396ba18b3d152dc46f2f7110e19305e7b" translate="yes" xml:space="preserve">
          <source>This is an alias for the builtin &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">这是内置&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数的别名。</target>
        </trans-unit>
        <trans-unit id="2571e080d51d3b25b3470f01c190104b66dd3c80" translate="yes" xml:space="preserve">
          <source>This is an extension notation (a &lt;code&gt;'?'&lt;/code&gt; following a &lt;code&gt;'('&lt;/code&gt; is not meaningful otherwise). The first character after the &lt;code&gt;'?'&lt;/code&gt; determines what the meaning and further syntax of the construct is. Extensions usually do not create a new group; &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; is the only exception to this rule. Following are the currently supported extensions.</source>
          <target state="translated">这是一个扩展符号（一个 &lt;code&gt;'?'&lt;/code&gt; 之后的 &lt;code&gt;'('&lt;/code&gt; 是没有意义的，否则）后的第一个字符。 &lt;code&gt;'?'&lt;/code&gt; 决定了结构的意义和进一步的语法是什么扩展通常不会创建一个新组。 &lt;code&gt;(?P&amp;lt;name&amp;gt;...)&lt;/code&gt; 是该规则的唯一例外。以下是当前支持的扩展名。</target>
        </trans-unit>
        <trans-unit id="8f2d1a3f7686213bcb3e68f37c26e08de32ed2cd" translate="yes" xml:space="preserve">
          <source>This is an implementation detail of the warnings framework; do not modify this value. Refer to the &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module for more information on the warnings framework.</source>
          <target state="translated">这是警告框架的实现细节。请勿修改此值。有关警告框架的更多信息，请参考&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="8c538fda17e935aeeea92bf67a676d3e1bc51efb" translate="yes" xml:space="preserve">
          <source>This is an implementation of the &lt;code&gt;Attributes&lt;/code&gt; interface (see section &lt;a href=&quot;#attributes-objects&quot;&gt;The Attributes Interface&lt;/a&gt;). This is a dictionary-like object which represents the element attributes in a &lt;code&gt;startElement()&lt;/code&gt; call. In addition to the most useful dictionary operations, it supports a number of other methods as described by the interface. Objects of this class should be instantiated by readers; &lt;em&gt;attrs&lt;/em&gt; must be a dictionary-like object containing a mapping from attribute names to attribute values.</source>
          <target state="translated">这是 &lt;code&gt;Attributes&lt;/code&gt; 接口的实现（请参阅&lt;a href=&quot;#attributes-objects&quot;&gt;Attributes接口&lt;/a&gt;一节）。这是一个类似于字典的对象，代表 &lt;code&gt;startElement()&lt;/code&gt; 调用中的元素属性。除了最有用的字典操作外，它还支持接口所描述的许多其他方法。此类的对象应由读者实例化。&lt;em&gt;attrs&lt;/em&gt;必须是类似于字典的对象，其中包含从属性名称到属性值的映射。</target>
        </trans-unit>
        <trans-unit id="00330212cc541703cd5ff8aa5689877b2be61306" translate="yes" xml:space="preserve">
          <source>This is an instance of &lt;a href=&quot;#reprlib.Repr&quot;&gt;&lt;code&gt;Repr&lt;/code&gt;&lt;/a&gt; which is used to provide the &lt;a href=&quot;#reprlib.repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; function described below. Changing the attributes of this object will affect the size limits used by &lt;a href=&quot;#reprlib.repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; and the Python debugger.</source>
          <target state="translated">这是&lt;a href=&quot;#reprlib.Repr&quot;&gt; &lt;code&gt;Repr&lt;/code&gt; 的&lt;/a&gt;一个实例，用于提供以下所述的&lt;a href=&quot;#reprlib.repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;函数。更改此对象的属性将影响&lt;a href=&quot;#reprlib.repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;和Python调试器使用的大小限制。</target>
        </trans-unit>
        <trans-unit id="bc9d7efe1e111f4a3038022efcda5621f6b2ed82" translate="yes" xml:space="preserve">
          <source>This is an object that has the same methods as the entire module, but uses the Unicode database version 3.2 instead, for applications that require this specific version of the Unicode database (such as IDNA).</source>
          <target state="translated">这是一个对象,它的方法与整个模块相同,但使用Unicode数据库3.2版本代替,适用于需要Unicode数据库这个特定版本的应用(如IDNA)。</target>
        </trans-unit>
        <trans-unit id="11c3ea74a96f83696c34a897e968eb0226a1d9a9" translate="yes" xml:space="preserve">
          <source>This is another standard signal handler, which will simply ignore the given signal.</source>
          <target state="translated">这是另一个标准信号处理程序,它将简单地忽略给定的信号。</target>
        </trans-unit>
        <trans-unit id="28def8bed8d2bdaa1f2c7697b00c97beb3107dd0" translate="yes" xml:space="preserve">
          <source>This is any Python function that takes no arguments. For example:</source>
          <target state="translated">这是任何不接受参数的 Python 函数。例如</target>
        </trans-unit>
        <trans-unit id="ffe483266124d79a1a3157bbb4f1955342c8c1af" translate="yes" xml:space="preserve">
          <source>This is based on a proposed DOM Level 3 API which is still in the &amp;ldquo;working draft&amp;rdquo; stage, but this particular interface appears uncontroversial. Changes from the W3C will not necessarily affect this method in the Python DOM interface (though any new W3C API for this would also be supported).</source>
          <target state="translated">这基于提议的DOM Level 3 API，该API仍处于&amp;ldquo;工作草案&amp;rdquo;阶段，但是此特定接口似乎没有争议。从W3C进行的更改不一定会影响Python DOM接口中的此方法（尽管也将为此提供任何新的W3C API支持）。</target>
        </trans-unit>
        <trans-unit id="81372bd6ddf513a4aff4ec4908ff400e30f799f8" translate="yes" xml:space="preserve">
          <source>This is because the previous execution has left the socket in a &lt;code&gt;TIME_WAIT&lt;/code&gt; state, and can&amp;rsquo;t be immediately reused.</source>
          <target state="translated">这是因为先前的执行使套接字处于 &lt;code&gt;TIME_WAIT&lt;/code&gt; 状态，无法立即重用。</target>
        </trans-unit>
        <trans-unit id="4147f1a73ee64438aeb3d78ac0d958d8e52248aa" translate="yes" xml:space="preserve">
          <source>This is called &lt;code&gt;hexversion&lt;/code&gt; since it only really looks meaningful when viewed as the result of passing it to the built-in &lt;a href=&quot;functions#hex&quot;&gt;&lt;code&gt;hex()&lt;/code&gt;&lt;/a&gt; function. The &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt;&lt;code&gt;sys.version_info&lt;/code&gt;&lt;/a&gt; may be used for a more human-friendly encoding of the same information.</source>
          <target state="translated">之所以称为 &lt;code&gt;hexversion&lt;/code&gt; ,是因为将其传递给内置&lt;a href=&quot;functions#hex&quot;&gt; &lt;code&gt;hex()&lt;/code&gt; &lt;/a&gt;函数的结果只是看起来确实有意义。该&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;命名元组&lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt; &lt;code&gt;sys.version_info&lt;/code&gt; &lt;/a&gt;可用于相同信息的更人性化的编码。</target>
        </trans-unit>
        <trans-unit id="d8cbab9ac810e4c25ca1ac03e26845a188132593" translate="yes" xml:space="preserve">
          <source>This is called &lt;code&gt;hexversion&lt;/code&gt; since it only really looks meaningful when viewed as the result of passing it to the built-in &lt;a href=&quot;functions#hex&quot;&gt;&lt;code&gt;hex()&lt;/code&gt;&lt;/a&gt; function. The &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt;&lt;code&gt;sys.version_info&lt;/code&gt;&lt;/a&gt; may be used for a more human-friendly encoding of the same information.</source>
          <target state="translated">之所以称为 &lt;code&gt;hexversion&lt;/code&gt; ,是因为将其传递给内置的&lt;a href=&quot;functions#hex&quot;&gt; &lt;code&gt;hex()&lt;/code&gt; &lt;/a&gt;函数的结果只是看起来确实有意义。该&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;命名元组&lt;/a&gt;&lt;a href=&quot;#sys.version_info&quot;&gt; &lt;code&gt;sys.version_info&lt;/code&gt; &lt;/a&gt;可用于相同信息的更人性化的编码。</target>
        </trans-unit>
        <trans-unit id="7247eb7669c97fb110d163145704fe837c46400f" translate="yes" xml:space="preserve">
          <source>This is called automatically when the connection is garbage collected.</source>
          <target state="translated">当连接被垃圾回收时,会自动调用这个功能。</target>
        </trans-unit>
        <trans-unit id="5d3174cacbda7afe783d9c63633b1c116ccef9ac" translate="yes" xml:space="preserve">
          <source>This is called automatically when the iterator is exhausted or garbage collected, or when an error happens during iterating. However it is advisable to call it explicitly or use the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">当迭代器用尽或垃圾回收时，或在迭代过程中发生错误时，将自动调用此方法。但是，建议显式调用它或使用&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句。</target>
        </trans-unit>
        <trans-unit id="59ac3e4b7b297c325ae39dbbc755025b5c7cea78" translate="yes" xml:space="preserve">
          <source>This is called automatically when the iterator is exhausted or garbage collected, or when an error happens during iterating. However it is advisable to call it explicitly or use the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">当迭代器用尽或垃圾回收时，或在迭代过程中发生错误时，将自动调用此方法。但是，建议显式调用它或使用&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句。</target>
        </trans-unit>
        <trans-unit id="5999a3dc3b574752f1df7627f793ed276ddc5431" translate="yes" xml:space="preserve">
          <source>This is called from the default &lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt;&lt;code&gt;datetime.astimezone()&lt;/code&gt;&lt;/a&gt; implementation. When called from that, &lt;code&gt;dt.tzinfo&lt;/code&gt; is &lt;em&gt;self&lt;/em&gt;, and &lt;em&gt;dt&lt;/em&gt;&amp;rsquo;s date and time data are to be viewed as expressing a UTC time. The purpose of &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; is to adjust the date and time data, returning an equivalent datetime in &lt;em&gt;self&lt;/em&gt;&amp;rsquo;s local time.</source>
          <target state="translated">这是从默认的&lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt; &lt;code&gt;datetime.astimezone()&lt;/code&gt; &lt;/a&gt;实现中调用的。当从中调用时， &lt;code&gt;dt.tzinfo&lt;/code&gt; 是&lt;em&gt;self&lt;/em&gt;，并且&lt;em&gt;dt&lt;/em&gt;的日期和时间数据应视为表示UTC时间。&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt;的目的是调整日期和时间数据，并以&lt;em&gt;自身&lt;/em&gt;的本地时间返回等效的datetime 。</target>
        </trans-unit>
        <trans-unit id="f45a7baf47bfb2b113381808c519faae7853a34e" translate="yes" xml:space="preserve">
          <source>This is called in the &lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt;&lt;code&gt;serve_forever()&lt;/code&gt;&lt;/a&gt; loop. This method can be overridden by subclasses or mixin classes to perform actions specific to a given service, such as cleanup actions.</source>
          <target state="translated">这在&lt;a href=&quot;#socketserver.BaseServer.serve_forever&quot;&gt; &lt;code&gt;serve_forever()&lt;/code&gt; &lt;/a&gt;循环中被调用。子类或混合类可以重写此方法，以执行特定于给定服务的操作，例如清除操作。</target>
        </trans-unit>
        <trans-unit id="c5fc5d96310a3ced5b6cfd3ab67361662a6f8278" translate="yes" xml:space="preserve">
          <source>This is called when an exception occurs and no exception handler is set. This can be called by a custom exception handler that wants to defer to the default handler behavior.</source>
          <target state="translated">当发生异常且没有设置异常处理程序时,就会调用该函数。自定义的异常处理程序可以调用该函数,因为它希望延缓默认处理程序的行为。</target>
        </trans-unit>
        <trans-unit id="0faadeef90e30191e68184d130440c2fd9562e5a" translate="yes" xml:space="preserve">
          <source>This is designed to be used with &lt;code&gt;@unittest.skipIf()&lt;/code&gt; to annotate tests that need to use an &lt;code&gt;assert_python*()&lt;/code&gt; function to launch an isolated mode (&lt;code&gt;-I&lt;/code&gt;) or no environment mode (&lt;code&gt;-E&lt;/code&gt;) sub-interpreter process.</source>
          <target state="translated">它旨在与 &lt;code&gt;@unittest.skipIf()&lt;/code&gt; 一起使用，以注释需要使用 &lt;code&gt;assert_python*()&lt;/code&gt; 函数启动隔离模式（ &lt;code&gt;-I&lt;/code&gt; ）或无环境模式（ &lt;code&gt;-E&lt;/code&gt; ）子解释程序的测试。</target>
        </trans-unit>
        <trans-unit id="cd6da2b2fb65c65ba6fb4c1334c748833afa5902" translate="yes" xml:space="preserve">
          <source>This is due to the fact that &amp;ldquo;0&amp;rdquo; and &amp;ldquo;2&amp;rdquo; are in the same level in the graph (they would have been returned in the same call to &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;get_ready()&lt;/code&gt;&lt;/a&gt;) and the order between them is determined by the order of insertion.</source>
          <target state="translated">这是由于以下事实：&amp;ldquo; 0&amp;rdquo;和&amp;ldquo; 2&amp;rdquo;在图中处于同一级别（它们将在对&lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;get_ready()&lt;/code&gt; &lt;/a&gt;的同一调用中返回），并且它们之间的顺序由插入顺序确定。</target>
        </trans-unit>
        <trans-unit id="bfa80b779a073dbddfb027c4551bacdf6e96317a" translate="yes" xml:space="preserve">
          <source>This is easy to use but not much good if you are expecting megabytes to be uploaded &amp;mdash; in that case, use the &lt;code&gt;FieldStorage&lt;/code&gt; class instead which is much more flexible.</source>
          <target state="translated">这很容易使用，但如果您希望上传兆字节， &lt;code&gt;FieldStorage&lt;/code&gt; -在这种情况下，请使用FieldStorage类，它更加灵活。</target>
        </trans-unit>
        <trans-unit id="5a46664cff1edb9374b98b2675a73183f1e05af0" translate="yes" xml:space="preserve">
          <source>This is either &lt;code&gt;None&lt;/code&gt; (if the mock hasn&amp;rsquo;t been awaited), or the arguments that the mock was last awaited with. Functions the same as &lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt;&lt;code&gt;Mock.call_args&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这可以是 &lt;code&gt;None&lt;/code&gt; （如果尚未等待模拟），或者是最后等待模拟的参数。功能与&lt;a href=&quot;#unittest.mock.Mock.call_args&quot;&gt; &lt;code&gt;Mock.call_args&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="8ee7c7bddc5bfce27b7479c43c2e7d01522714be" translate="yes" xml:space="preserve">
          <source>This is either &lt;code&gt;None&lt;/code&gt; (if the mock hasn&amp;rsquo;t been called), or the arguments that the mock was last called with. This will be in the form of a tuple: the first member, which can also be accessed through the &lt;code&gt;args&lt;/code&gt; property, is any ordered arguments the mock was called with (or an empty tuple) and the second member, which can also be accessed through the &lt;code&gt;kwargs&lt;/code&gt; property, is any keyword arguments (or an empty dictionary).</source>
          <target state="translated">这可以是 &lt;code&gt;None&lt;/code&gt; （如果尚未调用该模拟），也可以是最后一次使用该模拟的参数。这将以元组的形式出现：第一个成员（也可以通过 &lt;code&gt;args&lt;/code&gt; 属性访问）是使用该模拟调用的任何有序参数（或空的元组），第二个成员也可以通过以下方式访问的 &lt;code&gt;kwargs&lt;/code&gt; 属性，是任何关键字参数（或空字典）。</target>
        </trans-unit>
        <trans-unit id="01e02c69372dc79d00a36b7f2f02229c79989833" translate="yes" xml:space="preserve">
          <source>This is either the string &lt;code&gt;quoted-printable&lt;/code&gt; or &lt;code&gt;base64&lt;/code&gt; depending on the encoding used, or it is a function, in which case you should call the function with a single argument, the Message object being encoded. The function should then set the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header itself to whatever is appropriate.</source>
          <target state="translated">根据所使用的编码，该字符串可以是 &lt;code&gt;quoted-printable&lt;/code&gt; 或 &lt;code&gt;base64&lt;/code&gt; 字符串，也可以是一个函数，在这种情况下，应使用单个参数调用该函数，并且要编码Message对象。然后，该函数应将&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头本身设置为适当的值。</target>
        </trans-unit>
        <trans-unit id="c6bb8e0c84066f126935cee989b98ba5d876c60f" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;BaseSelector.unregister(fileobj)()&lt;/code&gt; followed by &lt;code&gt;BaseSelector.register(fileobj, events, data)()&lt;/code&gt;, except that it can be implemented more efficiently.</source>
          <target state="translated">这等效于 &lt;code&gt;BaseSelector.unregister(fileobj)()&lt;/code&gt; 后跟 &lt;code&gt;BaseSelector.register(fileobj, events, data)()&lt;/code&gt; ，但可以更高效地实现。</target>
        </trans-unit>
        <trans-unit id="3319b448c1c6cbefa269d764020c1e9cc96a2779" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;date.fromtimestamp(time.time())&lt;/code&gt;.</source>
          <target state="translated">这等效于 &lt;code&gt;date.fromtimestamp(time.time())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa06639c9dada4d0f5953fda0a5c6997357afb40" translate="yes" xml:space="preserve">
          <source>This is equivalent to checking &lt;code&gt;socket.gettimeout() == 0&lt;/code&gt;.</source>
          <target state="translated">这等效于检查 &lt;code&gt;socket.gettimeout() == 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f60b0b66a93a2faa96a56fea405d2e1c3db7f538" translate="yes" xml:space="preserve">
          <source>This is equivalent to defining the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-30&quot;&gt;&lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt;&lt;/a&gt; environment variable before launching Python.</source>
          <target state="translated">这等效于在启动Python之前定义&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-30&quot;&gt; &lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt; &lt;/a&gt;环境变量。</target>
        </trans-unit>
        <trans-unit id="2d56fbd1cf97be24fb774416157697042d6e0ca4" translate="yes" xml:space="preserve">
          <source>This is equivalent to defining the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-31&quot;&gt;&lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt;&lt;/a&gt; environment variable before launching Python.</source>
          <target state="translated">这等效于在启动Python之前定义&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONLEGACYWINDOWSFSENCODING&quot; id=&quot;index-31&quot;&gt; &lt;code&gt;PYTHONLEGACYWINDOWSFSENCODING&lt;/code&gt; &lt;/a&gt;环境变量。</target>
        </trans-unit>
        <trans-unit id="dae21f956e04a558bc35743abc58b55502e439ff" translate="yes" xml:space="preserve">
          <source>This is equivalent to iterating over &lt;em&gt;tests&lt;/em&gt;, calling &lt;a href=&quot;#unittest.TestSuite.addTest&quot;&gt;&lt;code&gt;addTest()&lt;/code&gt;&lt;/a&gt; for each element.</source>
          <target state="translated">这等效于遍历&lt;em&gt;测试&lt;/em&gt;，为每个元素调用&lt;a href=&quot;#unittest.TestSuite.addTest&quot;&gt; &lt;code&gt;addTest()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="translated">这相当于:</target>
        </trans-unit>
        <trans-unit id="46af01db1ebbcf9280ef7a5d2036bb35ee1e92bc" translate="yes" xml:space="preserve">
          <source>This is essentially a wrapper around the &lt;a href=&quot;#fcntl.fcntl&quot;&gt;&lt;code&gt;fcntl()&lt;/code&gt;&lt;/a&gt; locking calls. &lt;em&gt;fd&lt;/em&gt; is the file descriptor (file objects providing a &lt;a href=&quot;io#io.IOBase.fileno&quot;&gt;&lt;code&gt;fileno()&lt;/code&gt;&lt;/a&gt; method are accepted as well) of the file to lock or unlock, and &lt;em&gt;cmd&lt;/em&gt; is one of the following values:</source>
          <target state="translated">本质上，这是&lt;a href=&quot;#fcntl.fcntl&quot;&gt; &lt;code&gt;fcntl()&lt;/code&gt; &lt;/a&gt;锁定调用的包装。&lt;em&gt;fd&lt;/em&gt;是要锁定或解锁的文件的文件描述符（也接受提供&lt;a href=&quot;io#io.IOBase.fileno&quot;&gt; &lt;code&gt;fileno()&lt;/code&gt; &lt;/a&gt;方法的文件对象），&lt;em&gt;cmd&lt;/em&gt;是以下值之一：</target>
        </trans-unit>
        <trans-unit id="1262e4d29623b67080bb0c2cf94682b57cb12bfd" translate="yes" xml:space="preserve">
          <source>This is exact and cannot overflow.</source>
          <target state="translated">这是确切的,不能溢出。</target>
        </trans-unit>
        <trans-unit id="fc74c5855f1c0d1c6999828120e71dcfa9e0e308" translate="yes" xml:space="preserve">
          <source>This is exact but may overflow.</source>
          <target state="translated">这是确切的,但可能会溢出。</target>
        </trans-unit>
        <trans-unit id="f6111a25eb387e271fc95a7e8286968c73da0202" translate="yes" xml:space="preserve">
          <source>This is exact, and cannot overflow. timedelta.seconds and timedelta.microseconds are 0, and date2 + timedelta == date1 after.</source>
          <target state="translated">这是精确的,不能溢出。timedelta.seconds和timedelta.microseconds为0,date2+timedelta==date1后。</target>
        </trans-unit>
        <trans-unit id="dcf5c506f0484cee378d4114bf8d9c3d093323cc" translate="yes" xml:space="preserve">
          <source>This is expensive to compute if &lt;a href=&quot;#difflib.SequenceMatcher.get_matching_blocks&quot;&gt;&lt;code&gt;get_matching_blocks()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#difflib.SequenceMatcher.get_opcodes&quot;&gt;&lt;code&gt;get_opcodes()&lt;/code&gt;&lt;/a&gt; hasn&amp;rsquo;t already been called, in which case you may want to try &lt;a href=&quot;#difflib.SequenceMatcher.quick_ratio&quot;&gt;&lt;code&gt;quick_ratio()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#difflib.SequenceMatcher.real_quick_ratio&quot;&gt;&lt;code&gt;real_quick_ratio()&lt;/code&gt;&lt;/a&gt; first to get an upper bound.</source>
          <target state="translated">如果&lt;a href=&quot;#difflib.SequenceMatcher.get_matching_blocks&quot;&gt; &lt;code&gt;get_matching_blocks()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#difflib.SequenceMatcher.get_opcodes&quot;&gt; &lt;code&gt;get_opcodes()&lt;/code&gt; ,&lt;/a&gt;则计算成本很高，在这种情况下，您可能&lt;a href=&quot;#difflib.SequenceMatcher.quick_ratio&quot;&gt; &lt;code&gt;quick_ratio()&lt;/code&gt; &lt;/a&gt;尝试quick_ratio（）或&lt;a href=&quot;#difflib.SequenceMatcher.real_quick_ratio&quot;&gt; &lt;code&gt;real_quick_ratio()&lt;/code&gt; &lt;/a&gt;以获得上限。</target>
        </trans-unit>
        <trans-unit id="bd9d6cb897df6f5b2d0449a69913f43eb00204ae" translate="yes" xml:space="preserve">
          <source>This is experimental and due to be deprecated when it is replaced with the Tk DND.</source>
          <target state="translated">这是试验性的,当它被Tk DND取代时,将被废弃。</target>
        </trans-unit>
        <trans-unit id="6a244913a01960d26b2ef91db13b57007d2d6acc" translate="yes" xml:space="preserve">
          <source>This is how SQLite types are converted to Python types by default:</source>
          <target state="translated">这就是SQLite类型默认转换为Python类型的方式。</target>
        </trans-unit>
        <trans-unit id="1b3e8d5208ddfd0f7c07e80cfbdba372f7f6082f" translate="yes" xml:space="preserve">
          <source>This is identical to &lt;code&gt;m.group(g)&lt;/code&gt;. This allows easier access to an individual group from a match:</source>
          <target state="translated">这与 &lt;code&gt;m.group(g)&lt;/code&gt; 相同。这样可以更轻松地从匹配项访问单个组：</target>
        </trans-unit>
        <trans-unit id="8e19e27afede528b8b1ac1b39ae6eb0b912701ac" translate="yes" xml:space="preserve">
          <source>This is identical to the creation of a normal socket, and will use the same options for creation. Refer to the &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; documentation for information on creating sockets.</source>
          <target state="translated">这与创建普通套接字相同，并且将使用相同的选项进行创建。有关创建套接字的信息，请参考&lt;a href=&quot;socket#module-socket&quot;&gt; &lt;code&gt;socket&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="318285d2e289fe33dad1c5808834712129e2974a" translate="yes" xml:space="preserve">
          <source>This is implemented using &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt;; see that class&amp;rsquo;s documentation for more powerful ways to manage and communicate with subprocesses.</source>
          <target state="translated">这是使用&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt;实现的；有关更强大的方法来管理子流程和与子流程进行通信，请参见该类的文档。</target>
        </trans-unit>
        <trans-unit id="e38dda8d9da39d64ec212271ef2e75c3501c8100" translate="yes" xml:space="preserve">
          <source>This is like &lt;a href=&quot;#datetime.datetime.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;, but returns the current UTC date and time, as a naive &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object. An aware current UTC datetime can be obtained by calling &lt;code&gt;datetime.now(timezone.utc)&lt;/code&gt;. See also &lt;a href=&quot;#datetime.datetime.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">类似于&lt;a href=&quot;#datetime.datetime.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt;，但返回当前UTC日期和时间，作为朴素的&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;对象。可以通过调用 &lt;code&gt;datetime.now(timezone.utc)&lt;/code&gt; 获得已知的当前UTC日期时间。另请参见&lt;a href=&quot;#datetime.datetime.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="169690a3743933d399ba7724490b8c5dc773a8be" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;print_exc(limit)&lt;/code&gt; but returns a string instead of printing to a file.</source>
          <target state="translated">就像 &lt;code&gt;print_exc(limit)&lt;/code&gt; 一样,但是返回一个字符串而不是打印到文件中。</target>
        </trans-unit>
        <trans-unit id="16a6c6328d73a547359435cc278b71a11fcab094" translate="yes" xml:space="preserve">
          <source>This is like calling &lt;a href=&quot;#pathlib.Path.glob&quot;&gt;&lt;code&gt;Path.glob()&lt;/code&gt;&lt;/a&gt; with &amp;ldquo;&lt;code&gt;**/&lt;/code&gt;&amp;rdquo; added in front of the given relative &lt;em&gt;pattern&lt;/em&gt;:</source>
          <target state="translated">这就像在给定相对&lt;em&gt;模式的&lt;/em&gt;前面加上&amp;ldquo; &lt;code&gt;**/&lt;/code&gt; &amp;rdquo; 调用&lt;a href=&quot;#pathlib.Path.glob&quot;&gt; &lt;code&gt;Path.glob()&lt;/code&gt; &lt;/a&gt;一样：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="03a0036c10d923d16a01721d2b94dc096c0c58c8" translate="yes" xml:space="preserve">
          <source>This is like function &lt;a href=&quot;#doctest.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt; above, except that a string containing doctest examples is specified directly, via the &lt;em&gt;src&lt;/em&gt; argument.</source>
          <target state="translated">类似于上面的&lt;a href=&quot;#doctest.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;函数，除了通过&lt;em&gt;src&lt;/em&gt;参数直接指定包含doctest示例的字符串。</target>
        </trans-unit>
        <trans-unit id="c0e58e2745c0e6f9d952d1bcb528a5a4aef91c49" translate="yes" xml:space="preserve">
          <source>This is most useful for debugging deadlock: this function does not require the deadlocked threads&amp;rsquo; cooperation, and such threads&amp;rsquo; call stacks are frozen for as long as they remain deadlocked. The frame returned for a non-deadlocked thread may bear no relationship to that thread&amp;rsquo;s current activity by the time calling code examines the frame.</source>
          <target state="translated">这对于调试死锁最有用：此函数不需要死锁线程的配合，并且只要这些线程的调用堆栈保持死锁状态，它们就会被冻结。在调用代码检查帧时，为非死锁线程返回的框架可能与该线程的当前活动没有任何关系。</target>
        </trans-unit>
        <trans-unit id="78939d394c86630532b9214b845b5f630569e297" translate="yes" xml:space="preserve">
          <source>This is nice and fine, but how would one access the additional elements contained in this array? Since the type still only knows about 4 elements, we get errors accessing other elements:</source>
          <target state="translated">这很好,但如何访问这个数组中包含的额外元素?由于该类型仍然只知道4个元素,所以我们在访问其他元素时出现错误。</target>
        </trans-unit>
        <trans-unit id="b1d69acd3115aceb80f8c64013384f31d9c19385" translate="yes" xml:space="preserve">
          <source>This is not a general &amp;ldquo;persistence&amp;rdquo; module. For general persistence and transfer of Python objects through RPC calls, see the modules &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;shelve#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#module-marshal&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; module exists mainly to support reading and writing the &amp;ldquo;pseudo-compiled&amp;rdquo; code for Python modules of &lt;code&gt;.pyc&lt;/code&gt; files. Therefore, the Python maintainers reserve the right to modify the marshal format in backward incompatible ways should the need arise. If you&amp;rsquo;re serializing and de-serializing Python objects, use the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module instead &amp;ndash; the performance is comparable, version independence is guaranteed, and pickle supports a substantially wider range of objects than marshal.</source>
          <target state="translated">这不是通用的&amp;ldquo;持久性&amp;rdquo;模块。有关通过RPC调用进行Python对象的一般持久性和传输的信息，请参见模块&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;shelve#module-shelve&quot;&gt; &lt;code&gt;shelve&lt;/code&gt; &lt;/a&gt;。存在的&lt;a href=&quot;#module-marshal&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;模块主要用于支持读写 &lt;code&gt;.pyc&lt;/code&gt; 文件的Python模块的&amp;ldquo;伪编译&amp;rdquo;代码。因此，如果需要，Python维护者保留以向后不兼容的方式修改封送格式的权利。如果要序列化和反序列化Python对象，请改用&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块-性能可比，可以保证版本独立性，并且pickle支持的对象范围远超过编组。</target>
        </trans-unit>
        <trans-unit id="14c34954803449e8b6ca12236775c11a28756231" translate="yes" xml:space="preserve">
          <source>This is not really an opcode. It identifies the dividing line between opcodes which don&amp;rsquo;t use their argument and those that do (&lt;code&gt;&amp;lt; HAVE_ARGUMENT&lt;/code&gt; and &lt;code&gt;&amp;gt;= HAVE_ARGUMENT&lt;/code&gt;, respectively).</source>
          <target state="translated">这不是真正的操作码。它标识了不使用参数和使用参数的操作码之间的分界线（分别为 &lt;code&gt;&amp;lt; HAVE_ARGUMENT&lt;/code&gt; 和 &lt;code&gt;&amp;gt;= HAVE_ARGUMENT&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8311c7ab3b4f6d1243c8202d9f68fbbacfaddec8" translate="yes" xml:space="preserve">
          <source>This is often the same as &lt;code&gt;obj.__annotations__&lt;/code&gt;. In addition, forward references encoded as string literals are handled by evaluating them in &lt;code&gt;globals&lt;/code&gt; and &lt;code&gt;locals&lt;/code&gt; namespaces. If necessary, &lt;code&gt;Optional[t]&lt;/code&gt; is added for function and method annotations if a default value equal to &lt;code&gt;None&lt;/code&gt; is set. For a class &lt;code&gt;C&lt;/code&gt;, return a dictionary constructed by merging all the &lt;code&gt;__annotations__&lt;/code&gt; along &lt;code&gt;C.__mro__&lt;/code&gt; in reverse order.</source>
          <target state="translated">这通常与 &lt;code&gt;obj.__annotations__&lt;/code&gt; 相同。此外，通过在 &lt;code&gt;globals&lt;/code&gt; 名称空间和 &lt;code&gt;locals&lt;/code&gt; 名称空间中对它们进行编码来处理编码为字符串文字的前向引用。如有必要，如果设置的默认值等于 &lt;code&gt;None&lt;/code&gt; ,则为函数和方法注释添加 &lt;code&gt;Optional[t]&lt;/code&gt; 。对于一类 &lt;code&gt;C&lt;/code&gt; ，返回通过合并所有的构造一个字典 &lt;code&gt;__annotations__&lt;/code&gt; 沿着 &lt;code&gt;C.__mro__&lt;/code&gt; 以相反的顺序。</target>
        </trans-unit>
        <trans-unit id="55f456f6150c016abb37654a92afed0dd5930c55" translate="yes" xml:space="preserve">
          <source>This is one of the oldest synchronization primitives in the history of computer science, invented by the early Dutch computer scientist Edsger W. Dijkstra (he used the names &lt;code&gt;P()&lt;/code&gt; and &lt;code&gt;V()&lt;/code&gt; instead of &lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#threading.Semaphore.release&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">这是计算机科学史上最古老的同步原语之一，它是由荷兰早期计算机科学家Edsger W. Dijkstra发明的（他使用名称 &lt;code&gt;P()&lt;/code&gt; 和 &lt;code&gt;V()&lt;/code&gt; 代替了&lt;a href=&quot;#threading.Semaphore.acquire&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#threading.Semaphore.release&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8ca326cbb935374f0ae3d5c7f95cf7afce128acc" translate="yes" xml:space="preserve">
          <source>This is one of the simplest mechanisms for communication between threads: one thread signals an event and other threads wait for it.</source>
          <target state="translated">这是线程之间最简单的一种通信机制:一个线程发出信号,其他线程等待事件发生。</target>
        </trans-unit>
        <trans-unit id="85bc3018b9b177c10f39f4bc387ed18b0837940e" translate="yes" xml:space="preserve">
          <source>This is one of two standard signal handling options; it will simply perform the default function for the signal. For example, on most systems the default action for &lt;code&gt;SIGQUIT&lt;/code&gt; is to dump core and exit, while the default action for &lt;a href=&quot;#signal.SIGCHLD&quot;&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/a&gt; is to simply ignore it.</source>
          <target state="translated">这是两个标准信号处理选项之一。它只会执行信号的默认功能。例如，在大多数系统上， &lt;code&gt;SIGQUIT&lt;/code&gt; 的默认操作是转储内核并退出，而&lt;a href=&quot;#signal.SIGCHLD&quot;&gt; &lt;code&gt;SIGCHLD&lt;/code&gt; &lt;/a&gt;的默认操作是简单地忽略它。</target>
        </trans-unit>
        <trans-unit id="86ba83444c95b331e504dbbe33363d01f2d21c52" translate="yes" xml:space="preserve">
          <source>This is one of two standard signal handling options; it will simply perform the default function for the signal. For example, on most systems the default action for &lt;code&gt;SIGQUIT&lt;/code&gt; is to dump core and exit, while the default action for &lt;code&gt;SIGCHLD&lt;/code&gt; is to simply ignore it.</source>
          <target state="translated">这是两个标准信号处理选项之一。它只会执行信号的默认功能。例如，在大多数系统上， &lt;code&gt;SIGQUIT&lt;/code&gt; 的默认操作是转储核心并退出，而 &lt;code&gt;SIGCHLD&lt;/code&gt; 的默认操作是简单地忽略它。</target>
        </trans-unit>
        <trans-unit id="0277b7fe4737cfb83edc05d2ac0b1e99b8eb5b48" translate="yes" xml:space="preserve">
          <source>This is provided so that a custom filename can be provided.</source>
          <target state="translated">这样就可以提供一个自定义的文件名。</target>
        </trans-unit>
        <trans-unit id="155e858c9f2971e28ff3407e7b9934beb0e04e92" translate="yes" xml:space="preserve">
          <source>This is raised if data is specified for a node which does not support data.</source>
          <target state="translated">如果为不支持数据的节点指定了数据,则会引发此问题。</target>
        </trans-unit>
        <trans-unit id="51ba11e2172daf21cf5dc1ec1c1df58005922e37" translate="yes" xml:space="preserve">
          <source>This is raised when an unrecognized option is found in the argument list or when an option requiring an argument is given none. The argument to the exception is a string indicating the cause of the error. For long options, an argument given to an option which does not require one will also cause this exception to be raised. The attributes &lt;code&gt;msg&lt;/code&gt; and &lt;code&gt;opt&lt;/code&gt; give the error message and related option; if there is no specific option to which the exception relates, &lt;code&gt;opt&lt;/code&gt; is an empty string.</source>
          <target state="translated">当在参数列表中找到无法识别的选项或不给需要参数的选项时，将引发此问题。异常的参数是指示错误原因的字符串。对于长期权，给予不需要期权的期权的自变量也会导致引发此异常。 &lt;code&gt;msg&lt;/code&gt; 和 &lt;code&gt;opt&lt;/code&gt; 属性给出错误消息和相关选项；如果没有与异常相关的特定选项，则 &lt;code&gt;opt&lt;/code&gt; 是一个空字符串。</target>
        </trans-unit>
        <trans-unit id="76312b639346c9f0ed81f7029a1eb2df8cf32e26" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#email.charset.Charset.header_encode&quot;&gt;&lt;code&gt;header_encode()&lt;/code&gt;&lt;/a&gt; except that the string is fit into maximum line lengths as given by the argument &lt;em&gt;maxlengths&lt;/em&gt;, which must be an iterator: each element returned from this iterator will provide the next maximum line length.</source>
          <target state="translated">这类似于&lt;a href=&quot;#email.charset.Charset.header_encode&quot;&gt; &lt;code&gt;header_encode()&lt;/code&gt; ,&lt;/a&gt;不同之处在于该字符串适合参数&lt;em&gt;maxlengths&lt;/em&gt;给出的最大行长度，该长度必须是一个迭代器：从此迭代器返回的每个元素都将提供下一个最大行长度。</target>
        </trans-unit>
        <trans-unit id="b615c7ad20b9138e70d1eb8b4dc44b2eb332b517" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_MAP_UNPACK&quot;&gt;&lt;code&gt;BUILD_MAP_UNPACK&lt;/code&gt;&lt;/a&gt;, but is used for &lt;code&gt;f(**x, **y, **z)&lt;/code&gt; call syntax. The stack item at position &lt;code&gt;count + 2&lt;/code&gt; should be the corresponding callable &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">这类似于&lt;a href=&quot;#opcode-BUILD_MAP_UNPACK&quot;&gt; &lt;code&gt;BUILD_MAP_UNPACK&lt;/code&gt; &lt;/a&gt;，但用于 &lt;code&gt;f(**x, **y, **z)&lt;/code&gt; 调用语法。位置 &lt;code&gt;count + 2&lt;/code&gt; 处的堆栈项应为对应的可调用 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="520c63df4ff805ac58b532a712ba8836cd814f03" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt;&lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt;&lt;/a&gt;, but is used for &lt;code&gt;f(*x, *y, *z)&lt;/code&gt; call syntax. The stack item at position &lt;code&gt;count + 1&lt;/code&gt; should be the corresponding callable &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">这类似于&lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt; &lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt; &lt;/a&gt;，但用于 &lt;code&gt;f(*x, *y, *z)&lt;/code&gt; 调用语法。位置 &lt;code&gt;count + 1&lt;/code&gt; 处的堆栈项应为对应的可调用 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0f001bdc4e257d8aab7e66c626f10b79ecf0cce" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt;&lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt;&lt;/a&gt;, but pushes a list instead of tuple. Implements iterable unpacking in list displays &lt;code&gt;[*x, *y, *z]&lt;/code&gt;.</source>
          <target state="translated">这类似于&lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt; &lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt; &lt;/a&gt;，但是推送列表而不是元组。在列表显示 &lt;code&gt;[*x, *y, *z]&lt;/code&gt; 实现可迭代的拆包。</target>
        </trans-unit>
        <trans-unit id="b3848d91dc2ff50aa1e4c02a35fac1c890e31626" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt;&lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt;&lt;/a&gt;, but pushes a set instead of tuple. Implements iterable unpacking in set displays &lt;code&gt;{*x, *y, *z}&lt;/code&gt;.</source>
          <target state="translated">这类似于&lt;a href=&quot;#opcode-BUILD_TUPLE_UNPACK&quot;&gt; &lt;code&gt;BUILD_TUPLE_UNPACK&lt;/code&gt; &lt;/a&gt;，但是推送一个集合而不是元组。在集合显示 &lt;code&gt;{*x, *y, *z}&lt;/code&gt; 实现可迭代的拆包。</target>
        </trans-unit>
        <trans-unit id="8a5ede386bb9b2612cf30934e9da4810b0bc33ed" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt;, but does not split the params from the URL. This should generally be used instead of &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt; if the more recent URL syntax allowing parameters to be applied to each segment of the &lt;em&gt;path&lt;/em&gt; portion of the URL (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt;) is wanted. A separate function is needed to separate the path segments and parameters. This function returns a 5-item &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;:</source>
          <target state="translated">这类似于&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt;，但不会从URL拆分参数。如果需要将参数应用于URL &lt;em&gt;路径&lt;/em&gt;部分的每个段（请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt;）的最新URL语法，通常应使用它代替&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt;。需要单独的功能来分隔路径段和参数。该函数返回一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;名为tuple&lt;/a&gt;的5项：&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="235443fe20c693b3738b90aee38788761d709674" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt;, but does not split the params from the URL. This should generally be used instead of &lt;a href=&quot;#urllib.parse.urlparse&quot;&gt;&lt;code&gt;urlparse()&lt;/code&gt;&lt;/a&gt; if the more recent URL syntax allowing parameters to be applied to each segment of the &lt;em&gt;path&lt;/em&gt; portion of the URL (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt;) is wanted. A separate function is needed to separate the path segments and parameters. This function returns a 5-item &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;:</source>
          <target state="translated">这类似于&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt;，但不会从URL拆分参数。如果需要将参数应用于URL&lt;em&gt;路径&lt;/em&gt;部分的每个段（请参阅&lt;a href=&quot;https://tools.ietf.org/html/rfc2396.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2396&lt;/strong&gt;&lt;/a&gt;）的最新URL语法，通常应使用它代替&lt;a href=&quot;#urllib.parse.urlparse&quot;&gt; &lt;code&gt;urlparse()&lt;/code&gt; &lt;/a&gt;。需要单独的功能来分隔路径段和参数。该函数返回一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;名为tuple&lt;/a&gt;的5项：&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="155c14dfe42c8135f201e1eba12ead1b14a1d498" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;sorted(iterable)&lt;/code&gt;, but unlike &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt;, this implementation is not stable.</source>
          <target state="translated">这类似于 &lt;code&gt;sorted(iterable)&lt;/code&gt; ，但与&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;不同，此实现不稳定。</target>
        </trans-unit>
        <trans-unit id="812a1f27c6c6d735c8d382bf216664f1474b94fa" translate="yes" xml:space="preserve">
          <source>This is similar to the standard library &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; class called with &lt;code&gt;shell=False&lt;/code&gt; and the list of strings passed as the first argument; however, where &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; takes a single argument which is list of strings, &lt;em&gt;subprocess_exec&lt;/em&gt; takes multiple string arguments.</source>
          <target state="translated">这类似于标准库&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt;类使用 &lt;code&gt;shell=False&lt;/code&gt; 调用，并将字符串列表作为第一个参数传递；但是，在&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;接受单个参数（它是字符串列表）的情况下，&lt;em&gt;subprocess_exec&lt;/em&gt;接受多个字符串参数。</target>
        </trans-unit>
        <trans-unit id="1b7e21c8133751241f1c19a21ebb0193ee2ef677" translate="yes" xml:space="preserve">
          <source>This is similar to the standard library &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; class called with &lt;code&gt;shell=True&lt;/code&gt;.</source>
          <target state="translated">这类似于使用 &lt;code&gt;shell=True&lt;/code&gt; 调用的标准库&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="cc5e49afeac866714bcab289ccdfaf9524cbc412" translate="yes" xml:space="preserve">
          <source>This is suited for when your data is discrete, and you don&amp;rsquo;t mind that the median may not be an actual data point.</source>
          <target state="translated">这适合于您的数据是离散的，并且您不必介意中位数可能不是实际的数据点。</target>
        </trans-unit>
        <trans-unit id="86b3510355c1fe9570b7071cc51a3472da435031" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;#reprlib.Repr.repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;aRepr&lt;/code&gt;. It returns a string similar to that returned by the built-in function of the same name, but with limits on most sizes.</source>
          <target state="translated">这是 &lt;code&gt;aRepr&lt;/code&gt; 的&lt;a href=&quot;#reprlib.Repr.repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;方法。它返回的字符串与同名内置函数返回的字符串相似，但对大多数大小有限制。</target>
        </trans-unit>
        <trans-unit id="ddba4b7153571fdf5c33ce2d048ae2ec9e729ec1" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for all policy classes. It provides default implementations for a couple of trivial methods, as well as the implementation of the immutability property, the &lt;a href=&quot;#email.policy.Policy.clone&quot;&gt;&lt;code&gt;clone()&lt;/code&gt;&lt;/a&gt; method, and the constructor semantics.</source>
          <target state="translated">这是所有策略类的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基&lt;/a&gt;类。它提供了一些简单方法的默认实现，以及不变性属性，&lt;a href=&quot;#email.policy.Policy.clone&quot;&gt; &lt;code&gt;clone()&lt;/code&gt; &lt;/a&gt;方法和构造函数语义的实现。</target>
        </trans-unit>
        <trans-unit id="103c4fa731bb79f76162f7afd5a51a6b2b64b808" translate="yes" xml:space="preserve">
          <source>This is the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base class&lt;/a&gt; for all policy classes. It provides default implementations for a couple of trivial methods, as well as the implementation of the immutability property, the &lt;a href=&quot;#email.policy.Policy.clone&quot;&gt;&lt;code&gt;clone()&lt;/code&gt;&lt;/a&gt; method, and the constructor semantics.</source>
          <target state="translated">这是所有策略类的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基&lt;/a&gt;类。它提供了一些简单方法的默认实现，以及不变性属性，&lt;a href=&quot;#email.policy.Policy.clone&quot;&gt; &lt;code&gt;clone()&lt;/code&gt; &lt;/a&gt;方法和构造函数语义的实现。</target>
        </trans-unit>
        <trans-unit id="d1107a365663105be7dfc2b72bf4a3c2259c5eeb" translate="yes" xml:space="preserve">
          <source>This is the &lt;em&gt;output_charset&lt;/em&gt; attribute if that is not &lt;code&gt;None&lt;/code&gt;, otherwise it is &lt;em&gt;input_charset&lt;/em&gt;.</source>
          <target state="translated">如果不是 &lt;code&gt;None&lt;/code&gt; ，则为&lt;em&gt;output_charset&lt;/em&gt;属性，否则为&lt;em&gt;input_charset&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a564908887b5551964c19be7d4e0a0b8f3d1b0a1" translate="yes" xml:space="preserve">
          <source>This is the XML file that is going to be manipulated:</source>
          <target state="translated">这是要操作的XML文件。</target>
        </trans-unit>
        <trans-unit id="7b01232b0fadd275694c8fe9a0cfcf63469b298d" translate="yes" xml:space="preserve">
          <source>This is the base class for all exceptions that the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package can raise. It is derived from the standard &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; class and defines no additional methods.</source>
          <target state="translated">这是&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;程序包可能引发的所有异常的基类。它是从标准&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;类派生的，并且没有定义其他方法。</target>
        </trans-unit>
        <trans-unit id="09a9c78f4b499866988037952e3b3e1103098b3f" translate="yes" xml:space="preserve">
          <source>This is the base class for all registered handlers &amp;mdash; and handles only the simple mechanics of registration.</source>
          <target state="translated">这是所有注册处理程序的基类，并且仅处理简单的注册机制。</target>
        </trans-unit>
        <trans-unit id="c702066b03625bc85fc0ff9e93c36c1a9f5f2451" translate="yes" xml:space="preserve">
          <source>This is the base class for all the MIME-specific subclasses of &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;. Ordinarily you won&amp;rsquo;t create instances specifically of &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt;, although you could. &lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt;&lt;code&gt;MIMEBase&lt;/code&gt;&lt;/a&gt; is provided primarily as a convenient base class for more specific MIME-aware subclasses.</source>
          <target state="translated">这是&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; 的&lt;/a&gt;所有MIME特定子类的基类。通常，尽管&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt;，但是您不会创建专门针对MIMEBase的实例。&lt;a href=&quot;#email.mime.base.MIMEBase&quot;&gt; &lt;code&gt;MIMEBase&lt;/code&gt; &lt;/a&gt;主要作为更方便的MIME感知子类的基类提供。</target>
        </trans-unit>
        <trans-unit id="63c3452ed9f479b409885d526d1d2f473fc0b1e6" translate="yes" xml:space="preserve">
          <source>This is the base class for exceptions raised by the &lt;a href=&quot;email.parser#email.parser.Parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; class. It is derived from &lt;a href=&quot;#email.errors.MessageError&quot;&gt;&lt;code&gt;MessageError&lt;/code&gt;&lt;/a&gt;. This class is also used internally by the parser used by &lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt;&lt;code&gt;headerregistry&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这是&lt;a href=&quot;email.parser#email.parser.Parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt;类引发的异常的基类。它是从&lt;a href=&quot;#email.errors.MessageError&quot;&gt; &lt;code&gt;MessageError&lt;/code&gt; &lt;/a&gt;派生的。&lt;a href=&quot;email.headerregistry#module-email.headerregistry&quot;&gt; &lt;code&gt;headerregistry&lt;/code&gt; &lt;/a&gt;使用的解析器也在内部使用此类。</target>
        </trans-unit>
        <trans-unit id="12d993cc451ecc15f464dda6a51ac3528a894f72" translate="yes" xml:space="preserve">
          <source>This is the base class for the other SAX exception classes.</source>
          <target state="translated">这是其他SAX异常类的基类。</target>
        </trans-unit>
        <trans-unit id="54578a7a3c812d9e6bd0a1b7b8c51329ad6f90a7" translate="yes" xml:space="preserve">
          <source>This is the base class of all warning category classes. It is a subclass of &lt;a href=&quot;exceptions#Exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这是所有警告类别类的基类。它是&lt;a href=&quot;exceptions#Exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;的子类。</target>
        </trans-unit>
        <trans-unit id="63a93b41a0b6373507338eb5d949f5335b6b3ddd" translate="yes" xml:space="preserve">
          <source>This is the base of all AST node classes. The actual node classes are derived from the &lt;code&gt;Parser/Python.asdl&lt;/code&gt; file, which is reproduced &lt;a href=&quot;#abstract-grammar&quot;&gt;below&lt;/a&gt;. They are defined in the &lt;code&gt;_ast&lt;/code&gt; C module and re-exported in &lt;a href=&quot;#module-ast&quot;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这是所有AST节点类的基础。实际的节点类是从 &lt;code&gt;Parser/Python.asdl&lt;/code&gt; 文件派生的，该文件&lt;a href=&quot;#abstract-grammar&quot;&gt;在下面&lt;/a&gt;复制。它们在 &lt;code&gt;_ast&lt;/code&gt; C模块中定义，并在&lt;a href=&quot;#module-ast&quot;&gt; &lt;code&gt;ast&lt;/code&gt; 中&lt;/a&gt;重新导出。</target>
        </trans-unit>
        <trans-unit id="8538deb00176d8d84916528140d7f030e4cc4f43" translate="yes" xml:space="preserve">
          <source>This is the client side:</source>
          <target state="translated">这是客户端。</target>
        </trans-unit>
        <trans-unit id="0995326a8a1a9b41b5401cc1a2e33ab049dd8d3d" translate="yes" xml:space="preserve">
          <source>This is the counterpart of &lt;a href=&quot;#getattr&quot;&gt;&lt;code&gt;getattr()&lt;/code&gt;&lt;/a&gt;. The arguments are an object, a string and an arbitrary value. The string may name an existing attribute or a new attribute. The function assigns the value to the attribute, provided the object allows it. For example, &lt;code&gt;setattr(x, 'foobar', 123)&lt;/code&gt; is equivalent to &lt;code&gt;x.foobar = 123&lt;/code&gt;.</source>
          <target state="translated">这是与&lt;a href=&quot;#getattr&quot;&gt; &lt;code&gt;getattr()&lt;/code&gt; &lt;/a&gt;相对应的。参数是一个对象，一个字符串和一个任意值。该字符串可以命名现有属性或新属性。该函数将值分配给属性（如果对象允许）。例如， &lt;code&gt;setattr(x, 'foobar', 123)&lt;/code&gt; 等效于 &lt;code&gt;x.foobar = 123&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0dcb8d939a5adb04c7d789dbf2733cb3107c014" translate="yes" xml:space="preserve">
          <source>This is the current standard (STD66). Any changes to urllib.parse module should conform to this. Certain deviations could be observed, which are mostly for backward compatibility purposes and for certain de-facto parsing requirements as commonly observed in major browsers.</source>
          <target state="translated">这是当前的标准(STD66)。任何对 urllib.parse 模块的修改都应该符合这个标准。可能会出现一些偏差,这些偏差主要是出于向后兼容的目的,以及主要浏览器中常见的某些事实上的解析要求。</target>
        </trans-unit>
        <trans-unit id="66c8088759f9087b738e1b70d1cf37c8a1aae852" translate="yes" xml:space="preserve">
          <source>This is the default format.</source>
          <target state="translated">这是默认格式。</target>
        </trans-unit>
        <trans-unit id="38e2d748255fc3c02a104699832e8769048dc2cf" translate="yes" xml:space="preserve">
          <source>This is the entry point you will normally use. It accepts editing keystrokes until one of the termination keystrokes is entered. If &lt;em&gt;validator&lt;/em&gt; is supplied, it must be a function. It will be called for each keystroke entered with the keystroke as a parameter; command dispatch is done on the result. This method returns the window contents as a string; whether blanks in the window are included is affected by the &lt;a href=&quot;#curses.textpad.Textbox.stripspaces&quot;&gt;&lt;code&gt;stripspaces&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">这是您通常使用的入口点。它接受编辑键击，直到输入了一个终止键击。如果提供了&lt;em&gt;验证器&lt;/em&gt;，则它必须是一个函数。对于以击键作为参数输入的每个击键，都会调用此方法。命令分派在结果上完成。该方法以字符串形式返回窗口内容。&lt;a href=&quot;#curses.textpad.Textbox.stripspaces&quot;&gt; &lt;code&gt;stripspaces&lt;/code&gt; &lt;/a&gt;属性会影响是否包含窗口中的空白。</target>
        </trans-unit>
        <trans-unit id="79959507c8268ef58c50a5dc61525d5211978203" translate="yes" xml:space="preserve">
          <source>This is the factory used by &lt;a href=&quot;email.policy#email.policy.EmailPolicy&quot;&gt;&lt;code&gt;EmailPolicy&lt;/code&gt;&lt;/a&gt; by default. &lt;code&gt;HeaderRegistry&lt;/code&gt; builds the class used to create a header instance dynamically, using &lt;em&gt;base_class&lt;/em&gt; and a specialized class retrieved from a registry that it holds. When a given header name does not appear in the registry, the class specified by &lt;em&gt;default_class&lt;/em&gt; is used as the specialized class. When &lt;em&gt;use_default_map&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; (the default), the standard mapping of header names to classes is copied in to the registry during initialization. &lt;em&gt;base_class&lt;/em&gt; is always the last class in the generated class&amp;rsquo;s &lt;code&gt;__bases__&lt;/code&gt; list.</source>
          <target state="translated">默认情况下，这是&lt;a href=&quot;email.policy#email.policy.EmailPolicy&quot;&gt; &lt;code&gt;EmailPolicy&lt;/code&gt; &lt;/a&gt;使用的工厂。 &lt;code&gt;HeaderRegistry&lt;/code&gt; 使用&lt;em&gt;base_class&lt;/em&gt;和从其持有的注册表中检索到的专用类，构建用于动态创建标头实例的类。如果给定的标头名称未出现在注册表中，则将&lt;em&gt;default_class&lt;/em&gt;指定的类用作专用类。当&lt;em&gt;use_default_map&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; （默认值）时，标头名称到类的标准映射将在初始化期间复制到注册表中。&lt;em&gt;base_class&lt;/em&gt;始终是生成的类的 &lt;code&gt;__bases__&lt;/code&gt; 列表中的最后一个类。</target>
        </trans-unit>
        <trans-unit id="051f8529efd087892a2a4ff0d6f02ba8048fe846" translate="yes" xml:space="preserve">
          <source>This is the full module API reference&amp;mdash;for an overview and introduction, see &lt;a href=&quot;https://docs.python.org/3.8/howto/ipaddress.html#ipaddress-howto&quot;&gt;An introduction to the ipaddress module&lt;/a&gt;.</source>
          <target state="translated">这是完整的模块API参考，有关概述和介绍，请参阅&lt;a href=&quot;https://docs.python.org/3.8/howto/ipaddress.html#ipaddress-howto&quot;&gt;ipaddress模块​​介绍&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24a3d0cb25dd9e84816e2611ba871f99d223fc47" translate="yes" xml:space="preserve">
          <source>This is the full module API reference&amp;mdash;for an overview and introduction, see &lt;a href=&quot;https://docs.python.org/3.9/howto/ipaddress.html#ipaddress-howto&quot;&gt;An introduction to the ipaddress module&lt;/a&gt;.</source>
          <target state="translated">这是完整的模块API参考，有关概述和介绍，请参阅&lt;a href=&quot;https://docs.python.org/3.9/howto/ipaddress.html#ipaddress-howto&quot;&gt;ipaddress模块​​介绍&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27cb2703cef928a010aa684a1cb6a3321bec9d97" translate="yes" xml:space="preserve">
          <source>This is the full set of data types supported by XML-RPC. Method calls may also raise a special &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt;&lt;code&gt;Fault&lt;/code&gt;&lt;/a&gt; instance, used to signal XML-RPC server errors, or &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt;&lt;code&gt;ProtocolError&lt;/code&gt;&lt;/a&gt; used to signal an error in the HTTP/HTTPS transport layer. Both &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt;&lt;code&gt;Fault&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt;&lt;code&gt;ProtocolError&lt;/code&gt;&lt;/a&gt; derive from a base class called &lt;code&gt;Error&lt;/code&gt;. Note that the xmlrpc client module currently does not marshal instances of subclasses of built-in types.</source>
          <target state="translated">这是XML-RPC支持的完整数据类型集。方法调用可能还会引发一个特殊的&lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt; &lt;code&gt;Fault&lt;/code&gt; &lt;/a&gt;实例，该实例用于表示XML-RPC服务器错误，或&lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt; &lt;code&gt;ProtocolError&lt;/code&gt; &lt;/a&gt;用于表示HTTP / HTTPS传输层中的错误。这两种&lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt; &lt;code&gt;Fault&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt; &lt;code&gt;ProtocolError&lt;/code&gt; &lt;/a&gt;从基类派生叫 &lt;code&gt;Error&lt;/code&gt; 。请注意，xmlrpc客户端模块当前不封送内置类型的子类的实例。</target>
        </trans-unit>
        <trans-unit id="d83bc29fd516747de82e555ef075ed666ec7ae21" translate="yes" xml:space="preserve">
          <source>This is the inverse function of &lt;a href=&quot;#time.localtime&quot;&gt;&lt;code&gt;localtime()&lt;/code&gt;&lt;/a&gt;. Its argument is the &lt;a href=&quot;#time.struct_time&quot;&gt;&lt;code&gt;struct_time&lt;/code&gt;&lt;/a&gt; or full 9-tuple (since the dst flag is needed; use &lt;code&gt;-1&lt;/code&gt; as the dst flag if it is unknown) which expresses the time in &lt;em&gt;local&lt;/em&gt; time, not UTC. It returns a floating point number, for compatibility with &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt;. If the input value cannot be represented as a valid time, either &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised (which depends on whether the invalid value is caught by Python or the underlying C libraries). The earliest date for which it can generate a time is platform-dependent.</source>
          <target state="translated">这是&lt;a href=&quot;#time.localtime&quot;&gt; &lt;code&gt;localtime()&lt;/code&gt; &lt;/a&gt;的反函数。它的参数是&lt;a href=&quot;#time.struct_time&quot;&gt; &lt;code&gt;struct_time&lt;/code&gt; &lt;/a&gt;或完整的9元组（因为需要dst标志；如果未知，请使用 &lt;code&gt;-1&lt;/code&gt; 作为dst标志），它表示&lt;em&gt;本地&lt;/em&gt;时间（而不是UTC）。它返回一个浮点数，以与&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;兼容。如果输入值不能表示为有效时间，则将引发&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;（这取决于Python还是底层C库捕获了无效值）。它可以生成时间的最早日期取决于平台。</target>
        </trans-unit>
        <trans-unit id="25952ff7c192298062c7c94fb2fb49d4252ac899" translate="yes" xml:space="preserve">
          <source>This is the inverse of &lt;a href=&quot;#datetime.date.fromisoformat&quot;&gt;&lt;code&gt;date.fromisoformat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这是&lt;a href=&quot;#datetime.date.fromisoformat&quot;&gt; &lt;code&gt;date.fromisoformat()&lt;/code&gt; &lt;/a&gt;的反函数。</target>
        </trans-unit>
        <trans-unit id="45477d6b414816ee23b1e85292dcc9da8541a2e5" translate="yes" xml:space="preserve">
          <source>This is the inverse of &lt;a href=&quot;#datetime.date.isoformat&quot;&gt;&lt;code&gt;date.isoformat()&lt;/code&gt;&lt;/a&gt;. It only supports the format &lt;code&gt;YYYY-MM-DD&lt;/code&gt;.</source>
          <target state="translated">这是&lt;a href=&quot;#datetime.date.isoformat&quot;&gt; &lt;code&gt;date.isoformat()&lt;/code&gt; &lt;/a&gt;的反函数。它仅支持格式 &lt;code&gt;YYYY-MM-DD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf97c2d88f89ba640b2d05161edb12e8643013b9" translate="yes" xml:space="preserve">
          <source>This is the main callback interface in SAX, and the one most important to applications. The order of events in this interface mirrors the order of the information in the document.</source>
          <target state="translated">这是SAX中的主要回调接口,也是对应用程序最重要的接口。该接口中事件的顺序反映了文档中信息的顺序。</target>
        </trans-unit>
        <trans-unit id="25c2af90efa3d54dc8077cc4e5001b757ee862ce" translate="yes" xml:space="preserve">
          <source>This is the name that could be used for performing a PTR lookup, not the resolved hostname itself.</source>
          <target state="translated">这是可用于执行PTR查找的名称,而不是解析主机名本身。</target>
        </trans-unit>
        <trans-unit id="387c82f524a84cb4d970741adb7a53c2b55ca754" translate="yes" xml:space="preserve">
          <source>This is the object passed to the constructor&amp;rsquo;s &lt;em&gt;template&lt;/em&gt; argument. In general, you shouldn&amp;rsquo;t change it, but read-only access is not enforced.</source>
          <target state="translated">这是传递给构造函数的&lt;em&gt;模板&lt;/em&gt;参数的对象。通常，您不应更改它，但不强制执行只读访问。</target>
        </trans-unit>
        <trans-unit id="a34eed16713b941a849879c228a4e75507e8cee6" translate="yes" xml:space="preserve">
          <source>This is the original source for the &lt;a href=&quot;#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package. The version of the package available from this site is suitable for use with Python 1.5.2, 2.1.x and 2.2.x, which do not include the &lt;a href=&quot;#module-logging&quot;&gt;&lt;code&gt;logging&lt;/code&gt;&lt;/a&gt; package in the standard library.</source>
          <target state="translated">这是&lt;a href=&quot;#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;程序包的原始来源。该站点提供的软件包版本适用于Python 1.5.2、2.1.x和2.2.x，它们在标准库中不包含&lt;a href=&quot;#module-logging&quot;&gt; &lt;code&gt;logging&lt;/code&gt; &lt;/a&gt;软件包。</target>
        </trans-unit>
        <trans-unit id="9c552faf3f40f576d4d85d3d7d48ed4c15002db5" translate="yes" xml:space="preserve">
          <source>This is the output of running the example above in verbose mode:</source>
          <target state="translated">这是在verbose模式下运行上述例子的输出。</target>
        </trans-unit>
        <trans-unit id="b14df329d9906c7fbcb90d2af4897d2c57320d08" translate="yes" xml:space="preserve">
          <source>This is the preferred way to create Futures in asyncio. This lets third-party event loops provide alternative implementations of the Future object (with better performance or instrumentation).</source>
          <target state="translated">这是在asyncio中创建Futures的首选方式。这可以让第三方事件循环提供Future对象的替代实现(具有更好的性能或工具)。</target>
        </trans-unit>
        <trans-unit id="69cfcab3a14463c73c17e763b38b52cd2336ac31" translate="yes" xml:space="preserve">
          <source>This is the same as the &lt;a href=&quot;#xml.parsers.expat.xmlparser.DefaultHandler&quot;&gt;&lt;code&gt;DefaultHandler()&lt;/code&gt;&lt;/a&gt;, but doesn&amp;rsquo;t inhibit expansion of internal entities. The entity reference will not be passed to the default handler.</source>
          <target state="translated">这与&lt;a href=&quot;#xml.parsers.expat.xmlparser.DefaultHandler&quot;&gt; &lt;code&gt;DefaultHandler()&lt;/code&gt; &lt;/a&gt;相同，但是不禁止内部实体的扩展。实体引用不会传递给默认处理程序。</target>
        </trans-unit>
        <trans-unit id="389a68f916573ccba3b39324a1dc41b7986f9183" translate="yes" xml:space="preserve">
          <source>This is the same function as &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt;. This entry point is maintained for backward compatibility.</source>
          <target state="translated">此功能与&lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt;相同。维护该入口点是为了向后兼容。</target>
        </trans-unit>
        <trans-unit id="25f22dab61a8af25218df92e4e7d0064cce134f2" translate="yes" xml:space="preserve">
          <source>This is the sample variance s&amp;sup2; with Bessel&amp;rsquo;s correction, also known as variance with N-1 degrees of freedom. Provided that the data points are representative (e.g. independent and identically distributed), the result should be an unbiased estimate of the true population variance.</source>
          <target state="translated">这是具有Bessel校正的样本方差s&amp;sup2;，也称为具有N-1自由度的方差。假设数据点具有代表性（例如独立且均匀分布），则结果应为真实总体方差的无偏估计。</target>
        </trans-unit>
        <trans-unit id="341ee391b304321c33512e1ca47d1b5d997e8b00" translate="yes" xml:space="preserve">
          <source>This is the server side:</source>
          <target state="translated">这是服务器端。</target>
        </trans-unit>
        <trans-unit id="616ff54fb339d5dc77cc6896ef1a784fa36685c0" translate="yes" xml:space="preserve">
          <source>This is the standard MSI schema for MSI 2.0, with the &lt;em&gt;tables&lt;/em&gt; variable providing a list of table definitions, and &lt;em&gt;_Validation_records&lt;/em&gt; providing the data for MSI validation.</source>
          <target state="translated">这是MSI 2.0的标准MSI架构，&lt;em&gt;表&lt;/em&gt;变量提供表定义的列表，而&lt;em&gt;_Validation_records&lt;/em&gt;提供用于MSI验证的数据。</target>
        </trans-unit>
        <trans-unit id="ccc570aa2319eff4f6519d490d8b14417d6139c0" translate="yes" xml:space="preserve">
          <source>This is the state management specification implemented by this module.</source>
          <target state="translated">这是本模块实现的状态管理规范。</target>
        </trans-unit>
        <trans-unit id="4323953ab6362c591027031f3f3ca25f400868fa" translate="yes" xml:space="preserve">
          <source>This is the superclass of all Server objects in the module. It defines the interface, given below, but does not implement most of the methods, which is done in subclasses. The two parameters are stored in the respective &lt;a href=&quot;#socketserver.BaseServer.server_address&quot;&gt;&lt;code&gt;server_address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt;&lt;code&gt;RequestHandlerClass&lt;/code&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">这是模块中所有Server对象的超类。它定义了下面给出的接口，但是没有实现大多数方法，这是在子类中完成的。这两个参数分别存储在&lt;a href=&quot;#socketserver.BaseServer.server_address&quot;&gt; &lt;code&gt;server_address&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socketserver.BaseServer.RequestHandlerClass&quot;&gt; &lt;code&gt;RequestHandlerClass&lt;/code&gt; &lt;/a&gt;属性中。</target>
        </trans-unit>
        <trans-unit id="9237177cdeb23cc7d84e7c1ca93d900094955002" translate="yes" xml:space="preserve">
          <source>This is the superclass of all request handler objects. It defines the interface, given below. A concrete request handler subclass must define a new &lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method, and can override any of the other methods. A new instance of the subclass is created for each request.</source>
          <target state="translated">这是所有请求处理程序对象的超类。它定义了接口，如下所示。具体的请求处理程序子类必须定义一个新的&lt;a href=&quot;#socketserver.BaseRequestHandler.handle&quot;&gt; &lt;code&gt;handle()&lt;/code&gt; &lt;/a&gt;方法，并且可以覆盖任何其他方法。将为每个请求创建一个新的子类实例。</target>
        </trans-unit>
        <trans-unit id="fdc1ccdadc662cedd90516cae609f70b8ee431d2" translate="yes" xml:space="preserve">
          <source>This is the type of lock objects.</source>
          <target state="translated">这是锁对象的类型。</target>
        </trans-unit>
        <trans-unit id="933248421ba03ff327c1ad6cab4bf70f50be04b0" translate="yes" xml:space="preserve">
          <source>This is typically used to install the sequence tables.</source>
          <target state="translated">这通常用于安装序列表。</target>
        </trans-unit>
        <trans-unit id="046ceaf4727b6ee744292cb707aecb0851c71b11" translate="yes" xml:space="preserve">
          <source>This is used mainly to distinguish platform-specific build directories and platform-specific built distributions. Typically includes the OS name and version and the architecture (as supplied by &amp;lsquo;os.uname()&amp;rsquo;), although the exact information included depends on the OS; e.g., on Linux, the kernel version isn&amp;rsquo;t particularly important.</source>
          <target state="translated">这主要用于区分特定于平台的构建目录和特定于平台的构建发行版。通常包括操作系统名称和版本以及体系结构（由&amp;ldquo; os.uname（）&amp;rdquo;提供），尽管所包含的确切信息取决于操作系统；例如，在Linux上，内核版本不是特别重要。</target>
        </trans-unit>
        <trans-unit id="ec42fa287ba1b2be0931da3b49e8350f384882a4" translate="yes" xml:space="preserve">
          <source>This is useful because constants are often given to a greater precision than is needed by the application. Another benefit is that rounding immediately eliminates unintended effects from digits beyond the current precision. In the following example, using unrounded inputs means that adding zero to a sum can change the result:</source>
          <target state="translated">这很有用,因为常量的精度往往比应用所需的精度更高。另一个好处是,四舍五入可以立即消除超出当前精度的数字带来的意外影响。在下面的例子中,使用未四舍五入的输入意味着在和上加零会改变结果。</target>
        </trans-unit>
        <trans-unit id="d66f84b77c15706a38e4c4ca53e6282aa811fcdf" translate="yes" xml:space="preserve">
          <source>This is usually a string explaining the reason for this error.</source>
          <target state="translated">这通常是一个解释该错误原因的字符串。</target>
        </trans-unit>
        <trans-unit id="2fcdb8b1d9772564fbf99b8c55ef224ea5312002" translate="yes" xml:space="preserve">
          <source>This is why &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#lambda&quot;&gt;&lt;code&gt;lambda&lt;/code&gt;&lt;/a&gt; functions cannot be pickled: all &lt;code&gt;lambda&lt;/code&gt; functions share the same name: &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">这就是为什么不能腌制&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#lambda&quot;&gt; &lt;code&gt;lambda&lt;/code&gt; &lt;/a&gt;函数的原因：所有 &lt;code&gt;lambda&lt;/code&gt; 函数共享相同的名称： &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="639399fee0a2268eedbc899c19e64eaccd627380" translate="yes" xml:space="preserve">
          <source>This is why &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#lambda&quot;&gt;&lt;code&gt;lambda&lt;/code&gt;&lt;/a&gt; functions cannot be pickled: all &lt;code&gt;lambda&lt;/code&gt; functions share the same name: &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">这就是为什么不能腌制&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#lambda&quot;&gt; &lt;code&gt;lambda&lt;/code&gt; &lt;/a&gt;函数的原因：所有 &lt;code&gt;lambda&lt;/code&gt; 函数共享相同的名称： &lt;code&gt;&amp;lt;lambda&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9229d39a2ae8521b2d3a535c1b9b07071a108294" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t without caveats and limitations however, which is why it is not the default behaviour. In order to know what attributes are available on the spec object, autospec has to introspect (access attributes) the spec. As you traverse attributes on the mock a corresponding traversal of the original object is happening under the hood. If any of your specced objects have properties or descriptors that can trigger code execution then you may not be able to use autospec. On the other hand it is much better to design your objects so that introspection is safe &lt;a href=&quot;#id12&quot; id=&quot;id11&quot;&gt;4&lt;/a&gt;.</source>
          <target state="translated">但是，这并非没有警告和限制，这就是为什么它不是默认行为的原因。为了知道spec对象上有哪些可用属性，autospec必须自检（访问属性）spec。当您遍历模拟对象的属性时，原始对象的对应遍历也在后台进行。如果任何指定对象具有可触发代码执行的属性或描述符，则您可能无法使用自动指定。另一方面，设计对象要好得多，这样自省是安全的&lt;a href=&quot;#id12&quot; id=&quot;id11&quot;&gt;4&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d207f3e3c1fb67cb63728a3af6a4675ea6f3832d" translate="yes" xml:space="preserve">
          <source>This iterates over all the payloads in all the subparts of &lt;em&gt;msg&lt;/em&gt;, returning the string payloads line-by-line. It skips over all the subpart headers, and it skips over any subpart with a payload that isn&amp;rsquo;t a Python string. This is somewhat equivalent to reading the flat text representation of the message from a file using &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt;, skipping over all the intervening headers.</source>
          <target state="translated">这将遍历&lt;em&gt;msg&lt;/em&gt;所有子部分中的所有有效负载，逐行返回字符串有效负载。它会跳过所有子部分的标题，并且会跳过带有不是Python字符串的有效负载的任何子部分。这在某种程度上等效于使用&lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt; &lt;code&gt;readline()&lt;/code&gt; &lt;/a&gt;从文件中读取消息的纯文本表示形式，跳过所有中间的标头。</target>
        </trans-unit>
        <trans-unit id="eb7822f26a5a0f18f548778163ce86fd0343f5b1" translate="yes" xml:space="preserve">
          <source>This iterates over all the subparts of &lt;em&gt;msg&lt;/em&gt;, returning only those subparts that match the MIME type specified by &lt;em&gt;maintype&lt;/em&gt; and &lt;em&gt;subtype&lt;/em&gt;.</source>
          <target state="translated">这将遍历&lt;em&gt;msg的&lt;/em&gt;所有子部分，仅返回与&lt;em&gt;maintype&lt;/em&gt;和&lt;em&gt;subtype&lt;/em&gt;指定的MIME类型匹配的那些&lt;em&gt;子部分&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3317b48233efdbea05d2c0138533c7822a99222c" translate="yes" xml:space="preserve">
          <source>This iterates over the lines of all files listed in &lt;code&gt;sys.argv[1:]&lt;/code&gt;, defaulting to &lt;code&gt;sys.stdin&lt;/code&gt; if the list is empty. If a filename is &lt;code&gt;'-'&lt;/code&gt;, it is also replaced by &lt;code&gt;sys.stdin&lt;/code&gt; and the optional arguments &lt;em&gt;mode&lt;/em&gt; and &lt;em&gt;openhook&lt;/em&gt; are ignored. To specify an alternative list of filenames, pass it as the first argument to &lt;a href=&quot;#fileinput.input&quot;&gt;&lt;code&gt;input()&lt;/code&gt;&lt;/a&gt;. A single file name is also allowed.</source>
          <target state="translated">这将遍历 &lt;code&gt;sys.argv[1:]&lt;/code&gt; 列出的所有文件的行，如果列表为空，则默认为 &lt;code&gt;sys.stdin&lt;/code&gt; 。如果文件名是 &lt;code&gt;'-'&lt;/code&gt; ，它也将被 &lt;code&gt;sys.stdin&lt;/code&gt; 替换，并且可选参数&lt;em&gt;mode&lt;/em&gt;和&lt;em&gt;openhook&lt;/em&gt;将被忽略。要指定文件名的替代列表，请将其作为第一个参数传递给&lt;a href=&quot;#fileinput.input&quot;&gt; &lt;code&gt;input()&lt;/code&gt; &lt;/a&gt;。也允许使用单个文件名。</target>
        </trans-unit>
        <trans-unit id="ac116f41d5b2fcd57891fc5192b5d3f2274dfd05" translate="yes" xml:space="preserve">
          <source>This itertool may require significant auxiliary storage (depending on how much temporary data needs to be stored). In general, if one iterator uses most or all of the data before another iterator starts, it is faster to use &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#itertools.tee&quot;&gt;&lt;code&gt;tee()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此itertool可能需要大量辅助存储（取决于需要存储多少临时数据）。通常，如果一个迭代器在另一个迭代器启动之前使用了大部分或全部数据，则使用&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#itertools.tee&quot;&gt; &lt;code&gt;tee()&lt;/code&gt; &lt;/a&gt;更快。</target>
        </trans-unit>
        <trans-unit id="2b78784d3778cf51f3cc37d1ca2c57415ae43db7" translate="yes" xml:space="preserve">
          <source>This just loops through the handlers offering them the record to handle. The actual object passed to the handlers is that which is returned from &lt;a href=&quot;#logging.handlers.QueueListener.prepare&quot;&gt;&lt;code&gt;prepare()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这只是遍历处理程序，为它们提供要处理的记录。传递给处理程序的实际对象是从&lt;a href=&quot;#logging.handlers.QueueListener.prepare&quot;&gt; &lt;code&gt;prepare()&lt;/code&gt; &lt;/a&gt;返回的对象。</target>
        </trans-unit>
        <trans-unit id="b297287359a92496a9e641ecaa5a2f4a199adf20" translate="yes" xml:space="preserve">
          <source>This key is not used in versions of Windows after 98.</source>
          <target state="translated">在98年以后的Windows版本中不使用此键。</target>
        </trans-unit>
        <trans-unit id="096ddddbe0447c0568cc1cc76f41f824414c52a4" translate="yes" xml:space="preserve">
          <source>This last example demonstrates the final few formatting functions:</source>
          <target state="translated">最后一个例子演示了最后几个格式化函数。</target>
        </trans-unit>
        <trans-unit id="a0de209ab52fa2c28eaba734255b35873e7ad687" translate="yes" xml:space="preserve">
          <source>This last example might require special privileges:</source>
          <target state="translated">最后这个例子可能需要特殊的权限。</target>
        </trans-unit>
        <trans-unit id="264097c0f8c82e537b9bf5cf995ed38e88f6ce1f" translate="yes" xml:space="preserve">
          <source>This library does &lt;em&gt;not&lt;/em&gt; interpret or write the value-type prefixes used in the Windows Registry extended version of INI syntax.</source>
          <target state="translated">这个库并&lt;em&gt;没有&lt;/em&gt;解释或编写在Windows注册表中使用的值类型前缀扩展INI语法的版本。</target>
        </trans-unit>
        <trans-unit id="ddecb5d41f26429b00b306addcfa72c1c21b1705" translate="yes" xml:space="preserve">
          <source>This limit is used to control the size of object types for which no specific formatting method is available on the &lt;a href=&quot;#reprlib.Repr&quot;&gt;&lt;code&gt;Repr&lt;/code&gt;&lt;/a&gt; object. It is applied in a similar manner as &lt;a href=&quot;#reprlib.Repr.maxstring&quot;&gt;&lt;code&gt;maxstring&lt;/code&gt;&lt;/a&gt;. The default is &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">此限制用于控制&lt;a href=&quot;#reprlib.Repr&quot;&gt; &lt;code&gt;Repr&lt;/code&gt; &lt;/a&gt;对象上没有特定格式设置方法的对象类型的大小。它的应用方式与&lt;a href=&quot;#reprlib.Repr.maxstring&quot;&gt; &lt;code&gt;maxstring&lt;/code&gt; &lt;/a&gt;相似。默认值为 &lt;code&gt;20&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6066e953f7076b88b95e2864a51729b2de6d74f8" translate="yes" xml:space="preserve">
          <source>This line sorts statistics with a primary key of time, and a secondary key of cumulative time, and then prints out some of the statistics. To be specific, the list is first culled down to 50% (re: &lt;code&gt;.5&lt;/code&gt;) of its original size, then only lines containing &lt;code&gt;init&lt;/code&gt; are maintained, and that sub-sub-list is printed.</source>
          <target state="translated">该行使用时间的主键和累积时间的辅助键对统计信息进行排序，然后输出一些统计信息。具体来说，首先将列表缩小到其原始大小的50％（re： &lt;code&gt;.5&lt;/code&gt; ），然后仅保留包含 &lt;code&gt;init&lt;/code&gt; 的行，并打印该子子列表。</target>
        </trans-unit>
        <trans-unit id="48b3c8021c68eee9cdfb9dba7da21091a3af1ca6" translate="yes" xml:space="preserve">
          <source>This loses information about &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookies, and also about newer or non-standard cookie-attributes such as &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">这会丢失有关&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt; cookie的信息，还会丢失有关更新或非标准cookie属性（例如 &lt;code&gt;port&lt;/code&gt; )的信息。</target>
        </trans-unit>
        <trans-unit id="d0d6d6740f3cc6b70d34b0e15297fa6447937aa1" translate="yes" xml:space="preserve">
          <source>This makes a copy of &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;, appends any directories given as positional arguments, then reverts &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; to the copied settings when the context ends.</source>
          <target state="translated">这将创建&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;的副本，追加作为位置参数给出的所有目录，然后在上下文结束时将&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;还原为复制的设置。</target>
        </trans-unit>
        <trans-unit id="2fec21315ec08b4fee9674feeb896233184a09bd" translate="yes" xml:space="preserve">
          <source>This makes it possible to distinguish between a properly-formed compressed stream, and an incomplete or truncated one.</source>
          <target state="translated">这使得它可以区分一个正确形成的压缩流和一个不完整或截断的压缩流。</target>
        </trans-unit>
        <trans-unit id="f54922022dd37999705ecf8e7311959f863f3c80" translate="yes" xml:space="preserve">
          <source>This makes the warning refer to &lt;code&gt;deprecation()&lt;/code&gt;&amp;rsquo;s caller, rather than to the source of &lt;code&gt;deprecation()&lt;/code&gt; itself (since the latter would defeat the purpose of the warning message).</source>
          <target state="translated">这使警告指向 &lt;code&gt;deprecation()&lt;/code&gt; 的调用者，而不是 &lt;code&gt;deprecation()&lt;/code&gt; 本身的来源（因为后者会破坏警告消息的目的）。</target>
        </trans-unit>
        <trans-unit id="73d9e444a3a60233d585593bee38869776f0d900" translate="yes" xml:space="preserve">
          <source>This mapping is captured the first time the &lt;a href=&quot;#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module is imported, typically during Python startup as part of processing &lt;code&gt;site.py&lt;/code&gt;. Changes to the environment made after this time are not reflected in &lt;code&gt;os.environ&lt;/code&gt;, except for changes made by modifying &lt;code&gt;os.environ&lt;/code&gt; directly.</source>
          <target state="translated">首次导入&lt;a href=&quot;#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;模块时（通常在Python启动期间作为处理 &lt;code&gt;site.py&lt;/code&gt; 的一部分）捕获此映射。此时间之后对环境所做的更改不会反映在 &lt;code&gt;os.environ&lt;/code&gt; 中，除非直接通过修改 &lt;code&gt;os.environ&lt;/code&gt; 进行更改。</target>
        </trans-unit>
        <trans-unit id="c90b598945883249d9e4304c638f9a4c5b6dbbe6" translate="yes" xml:space="preserve">
          <source>This mapping may be used to modify the environment as well as query the environment. &lt;a href=&quot;#os.putenv&quot;&gt;&lt;code&gt;putenv()&lt;/code&gt;&lt;/a&gt; will be called automatically when the mapping is modified.</source>
          <target state="translated">该映射可以用于修改环境以及查询环境。修改映射后，将自动调用&lt;a href=&quot;#os.putenv&quot;&gt; &lt;code&gt;putenv()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f9802628cadfd6a5dfb046256f12e0170526e3f" translate="yes" xml:space="preserve">
          <source>This matches the definition of the &amp;ldquo;proleptic Gregorian&amp;rdquo; calendar in Dershowitz and Reingold&amp;rsquo;s book &lt;em&gt;Calendrical Calculations&lt;/em&gt;, where it&amp;rsquo;s the base calendar for all computations. See the book for algorithms for converting between proleptic Gregorian ordinals and many other calendar systems.</source>
          <target state="translated">这与Dershowitz和Reingold的书《&lt;em&gt;Calendrical Calculations&lt;/em&gt;》中的&amp;ldquo;公历&amp;rdquo;日历的定义相匹配，它是所有计算的基础日历。请参阅本书，以了解在公历和其他日历系统之间进行转换的算法。</target>
        </trans-unit>
        <trans-unit id="973b8e85a014b10c75403c7a74282293136436c1" translate="yes" xml:space="preserve">
          <source>This may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, if the timestamp is out of the range of values supported by the platform C &lt;code&gt;gmtime()&lt;/code&gt; function, and &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;gmtime()&lt;/code&gt; failure. It&amp;rsquo;s common for this to be restricted to years in 1970 through 2038.</source>
          <target state="translated">如果时间戳超出平台C &lt;code&gt;gmtime()&lt;/code&gt; 函数支持的值范围，并且在 &lt;code&gt;gmtime()&lt;/code&gt; 失败时出现&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;，则可能会引发&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;。通常将其限制在1970年至2038年之间。</target>
        </trans-unit>
        <trans-unit id="6b1f92125637bbc55cff09da5df4d2e2c83cd615" translate="yes" xml:space="preserve">
          <source>This may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, if the timestamp is out of the range of values supported by the platform C &lt;code&gt;localtime()&lt;/code&gt; function, and &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;localtime()&lt;/code&gt; failure. It&amp;rsquo;s common for this to be restricted to years from 1970 through 2038. Note that on non-POSIX systems that include leap seconds in their notion of a timestamp, leap seconds are ignored by &lt;a href=&quot;#datetime.date.fromtimestamp&quot;&gt;&lt;code&gt;fromtimestamp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果时间戳超出平台C &lt;code&gt;localtime()&lt;/code&gt; 函数支持的值范围，并且在 &lt;code&gt;localtime()&lt;/code&gt; 失败时出现&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;，则可能会引发&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;。通常将其限制在从1970年到2038年的几年中。请注意，在非POSIX系统上，在时间戳概念中包含leap秒的情况下，&lt;a href=&quot;#datetime.date.fromtimestamp&quot;&gt; &lt;code&gt;fromtimestamp()&lt;/code&gt; &lt;/a&gt;会忽略leap秒。</target>
        </trans-unit>
        <trans-unit id="61488cca0cc578bae3cc99b33d231e72befb7e97" translate="yes" xml:space="preserve">
          <source>This means that a point2D TypedDict can have any of the keys omitted. A type checker is only expected to support a literal False or True as the value of the total argument. True is the default, and makes all items defined in the class body be required.</source>
          <target state="translated">这意味着一个point2D TypedDict可以省略任何一个键。一个类型检查器只需要支持False或True作为总参数的值。True是默认值,并且使得所有在类体中定义的项目都是必需的。</target>
        </trans-unit>
        <trans-unit id="4d37c0a7a6a3e6d70c0e783302ba789caf0c81d7" translate="yes" xml:space="preserve">
          <source>This means that if the remote listener starts up &lt;em&gt;after&lt;/em&gt; the handler has been used, you could lose messages (since the handler won&amp;rsquo;t even attempt a connection until the delay has elapsed, but just silently drop messages during the delay period).</source>
          <target state="translated">这意味着，如果&lt;em&gt;在&lt;/em&gt;使用处理程序&lt;em&gt;之后&lt;/em&gt;远程侦听器启动，则可能会丢失消息（因为在延迟时间过去之前，处理程序甚至不会尝试建立连接，而只是在延迟期间静默删除消息）。</target>
        </trans-unit>
        <trans-unit id="293f66ad739726417a512fb32791664b3935c5f9" translate="yes" xml:space="preserve">
          <source>This means that if you try joining that process you may get a deadlock unless you are sure that all items which have been put on the queue have been consumed. Similarly, if the child process is non-daemonic then the parent process may hang on exit when it tries to join all its non-daemonic children.</source>
          <target state="translated">这意味着,如果你试图加入那个进程,你可能会遇到一个死锁,除非你确定所有放在队列上的项目都被消耗了。同样,如果子进程是非守护进程,那么当父进程试图加入所有非守护进程的子进程时,它可能会在退出时挂起。</target>
        </trans-unit>
        <trans-unit id="884bf5479c83d452b098a597edcf03db4dacf679" translate="yes" xml:space="preserve">
          <source>This means that it is possible to perform any operation or method call on a value of type &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; and assign it to any variable:</source>
          <target state="translated">这意味着可以对&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;类型的值执行任何操作或方法调用，并将其分配给任何变量：</target>
        </trans-unit>
        <trans-unit id="3c2691ce7a2bb0ef524d6ac5d3f6a53e206d2c2d" translate="yes" xml:space="preserve">
          <source>This means that it is possible to perform any operation or method call on a value of type on &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; and assign it to any variable:</source>
          <target state="translated">这意味着可以对&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;上的类型的值执行任何操作或方法调用，并将其分配给任何变量：</target>
        </trans-unit>
        <trans-unit id="d454e9a9384d822a339503b805687181665a1335" translate="yes" xml:space="preserve">
          <source>This means that the two following regular expression objects that match a decimal number are functionally equal:</source>
          <target state="translated">这意味着下面两个与小数点相匹配的正则表达式对象在功能上是相等的。</target>
        </trans-unit>
        <trans-unit id="187d0bf1d6306583a1ebdb755911d7f2106320ea" translate="yes" xml:space="preserve">
          <source>This means that whenever you use a queue you need to make sure that all items which have been put on the queue will eventually be removed before the process is joined. Otherwise you cannot be sure that processes which have put items on the queue will terminate. Remember also that non-daemonic processes will be joined automatically.</source>
          <target state="translated">这意味着无论何时使用队列,都需要确保在加入进程之前,所有放在队列上的项目最终会被删除。否则,你就不能确保那些把项目放在队列中的进程会终止。还请记住,非daemonic的进程将被自动加入。</target>
        </trans-unit>
        <trans-unit id="9817fb9c501a121ab442e1e4282e427fff6978b6" translate="yes" xml:space="preserve">
          <source>This member is either &lt;code&gt;None&lt;/code&gt; or a dictionary containing Python objects that need to be kept alive so that the memory block contents is kept valid. This object is only exposed for debugging; never modify the contents of this dictionary.</source>
          <target state="translated">该成员可以是 &lt;code&gt;None&lt;/code&gt; 或包含需要保持活动状态以便使内存块内容保持有效的Python对象的字典。该对象仅用于调试；切勿修改该词典的内容。</target>
        </trans-unit>
        <trans-unit id="19498f3e018ff24394d0a46b95228fb1309cb56c" translate="yes" xml:space="preserve">
          <source>This method accepts a coroutine that can be used as a cleanup function.</source>
          <target state="translated">本方法接受一个可以作为清理函数使用的coroutine。</target>
        </trans-unit>
        <trans-unit id="92793d8fcf27264fb4882603d3336c40c35a73a1" translate="yes" xml:space="preserve">
          <source>This method acts like &lt;a href=&quot;#asyncio.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt;, but wakes up all waiting tasks.</source>
          <target state="translated">此方法的行为类似于&lt;a href=&quot;#asyncio.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;，但是唤醒所有等待的任务。</target>
        </trans-unit>
        <trans-unit id="83f0e2234ef971385137021b1ec6878c3710a2b1" translate="yes" xml:space="preserve">
          <source>This method adapts &lt;em&gt;obj&lt;/em&gt; to a ctypes type. It is called with the actual object used in a foreign function call when the type is present in the foreign function&amp;rsquo;s &lt;code&gt;argtypes&lt;/code&gt; tuple; it must return an object that can be used as a function call parameter.</source>
          <target state="translated">此方法使&lt;em&gt;obj&lt;/em&gt;适应ctypes类型。当外部函数的 &lt;code&gt;argtypes&lt;/code&gt; 元组中存在类型时，将使用在外部函数调用中使用的实际对象来调用它；它必须返回一个可用作函数调用参数的对象。</target>
        </trans-unit>
        <trans-unit id="de2226eb808a143726eafd45ebbb8317717428a5" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances for equality.</source>
          <target state="translated">此方法使您可以比较两个&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;实例的相等性。</target>
        </trans-unit>
        <trans-unit id="0b6dcc44c46e0069eff06e296235ec7e5da5bc2d" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instances for inequality.</source>
          <target state="translated">此方法使您可以比较两个&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;实例的不等式。</target>
        </trans-unit>
        <trans-unit id="3c994380cb521db6718872d973720d157f1919e6" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instances for equality.</source>
          <target state="translated">此方法使您可以比较两个&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;实例是否相等。</target>
        </trans-unit>
        <trans-unit id="1202fad2523717e5ef623e502b8584b2963f5fc1" translate="yes" xml:space="preserve">
          <source>This method allows you to compare two &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instances for inequality.</source>
          <target state="translated">此方法使您可以比较两个&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;实例的不相等性。</target>
        </trans-unit>
        <trans-unit id="c8e548622fefef31da8300c3b5dbc9f09fa411e9" translate="yes" xml:space="preserve">
          <source>This method always quotes &lt;em&gt;fullurl&lt;/em&gt; using &lt;a href=&quot;urllib.parse#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法始终使用&lt;a href=&quot;urllib.parse#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;引用全&lt;em&gt;URL&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="99aa254779e7ef574c52f729c661b871c547c933" translate="yes" xml:space="preserve">
          <source>This method always returns a list of values associated with form field &lt;em&gt;name&lt;/em&gt;. The method returns an empty list if no such form field or value exists for &lt;em&gt;name&lt;/em&gt;. It returns a list consisting of one item if only one such value exists.</source>
          <target state="translated">此方法始终返回与表单字段&lt;em&gt;名&lt;/em&gt;关联的值的列表。如果&lt;em&gt;name的&lt;/em&gt;表单字段或值不存在，则该方法返回一个空列表。如果只有一个这样的值，它将返回一个包含一个项目的列表。</target>
        </trans-unit>
        <trans-unit id="5c5df80f39d51ba66e8859be874c5de7d1b311c2" translate="yes" xml:space="preserve">
          <source>This method always returns only one value associated with form field &lt;em&gt;name&lt;/em&gt;. The method returns only the first value in case that more values were posted under such name. Please note that the order in which the values are received may vary from browser to browser and should not be counted on. &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt; If no such form field or value exists then the method returns the value specified by the optional parameter &lt;em&gt;default&lt;/em&gt;. This parameter defaults to &lt;code&gt;None&lt;/code&gt; if not specified.</source>
          <target state="translated">此方法始终仅返回与表单字段&lt;em&gt;名称&lt;/em&gt;关联的一个值。如果使用该名称发布了更多值，则该方法仅返回第一个值。请注意，各个浏览器接收值的顺序可能会有所不同，因此不能指望。&lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;如果不存在这样的表单字段或值，则该方法返回由可选参数&lt;em&gt;default&lt;/em&gt;指定的&lt;em&gt;值&lt;/em&gt;。如果未指定，则此参数默认为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab00db9f3f1ac5923263017d6c47d4a368ab0db0" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt;&lt;code&gt;ehlo()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#smtplib.SMTP.helo&quot;&gt;&lt;code&gt;helo()&lt;/code&gt;&lt;/a&gt; if there has been no previous &lt;code&gt;EHLO&lt;/code&gt; or &lt;code&gt;HELO&lt;/code&gt; command this session. It tries ESMTP &lt;code&gt;EHLO&lt;/code&gt; first.</source>
          <target state="translated">如果此会话之前没有 &lt;code&gt;EHLO&lt;/code&gt; 或 &lt;code&gt;HELO&lt;/code&gt; 命令，则此方法调用&lt;a href=&quot;#smtplib.SMTP.ehlo&quot;&gt; &lt;code&gt;ehlo()&lt;/code&gt; &lt;/a&gt;和/或&lt;a href=&quot;#smtplib.SMTP.helo&quot;&gt; &lt;code&gt;helo()&lt;/code&gt; &lt;/a&gt;。它首先尝试ESMTP &lt;code&gt;EHLO&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3d3c489ac6f9b1031182090b6d35d21fd51ab55" translate="yes" xml:space="preserve">
          <source>This method can access the current error information using &lt;code&gt;sys.exc_info()&lt;/code&gt;, and should pass that information to &lt;em&gt;start_response&lt;/em&gt; when calling it (as described in the &amp;ldquo;Error Handling&amp;rdquo; section of &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;).</source>
          <target state="translated">此方法可以使用 &lt;code&gt;sys.exc_info()&lt;/code&gt; 访问当前错误信息，并且在调用它时应将该信息传递给&lt;em&gt;start_response&lt;/em&gt;（如&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;的&amp;ldquo;错误处理&amp;rdquo;部分所述）。</target>
        </trans-unit>
        <trans-unit id="3fe72da74ea53d024f3c10009d6c535ecabca50f" translate="yes" xml:space="preserve">
          <source>This method can also be used as a decorator. When used as a decorator, &lt;em&gt;name&lt;/em&gt; can only be given as a keyword argument to register &lt;em&gt;function&lt;/em&gt; under &lt;em&gt;name&lt;/em&gt;. If no &lt;em&gt;name&lt;/em&gt; is given, &lt;code&gt;function.__name__&lt;/code&gt; will be used.</source>
          <target state="translated">此方法也可以用作装饰器。当用作装饰器时，只能将&lt;em&gt;name&lt;/em&gt;作为关键字参数指定给&lt;em&gt;name&lt;/em&gt;下的注册&lt;em&gt;函数&lt;/em&gt;。如果没有给出&lt;em&gt;名称&lt;/em&gt;，将使用 &lt;code&gt;function.__name__&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="05ba3520afb6b8d1c2cc9f5025b6e01795641a6b" translate="yes" xml:space="preserve">
          <source>This method can also load certification revocation lists (CRLs) in PEM or DER format. In order to make use of CRLs, &lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt;&lt;code&gt;SSLContext.verify_flags&lt;/code&gt;&lt;/a&gt; must be configured properly.</source>
          <target state="translated">此方法还可以加载PEM或DER格式的证书吊销列表（CRL）。为了使用CRL，必须正确配置&lt;a href=&quot;#ssl.SSLContext.verify_flags&quot;&gt; &lt;code&gt;SSLContext.verify_flags&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2cbf4b4a0062a4ab6d1ec363b05db41b262c8d75" translate="yes" xml:space="preserve">
          <source>This method can also set additional value and type information for the specified key. The key identified by the key parameter must have been opened with &lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt;&lt;code&gt;KEY_SET_VALUE&lt;/code&gt;&lt;/a&gt; access.</source>
          <target state="translated">此方法还可以为指定的键设置其他值和类型信息。由key参数标识的密钥必须已通过&lt;a href=&quot;#winreg.KEY_SET_VALUE&quot;&gt; &lt;code&gt;KEY_SET_VALUE&lt;/code&gt; &lt;/a&gt;访问权限打开。</target>
        </trans-unit>
        <trans-unit id="73a7fb88081ff7799c7aff867ccc6018119a704f" translate="yes" xml:space="preserve">
          <source>This method can be called if the server is already accepting connections. Only one &lt;code&gt;serve_forever&lt;/code&gt; task can exist per one &lt;em&gt;Server&lt;/em&gt; object.</source>
          <target state="translated">如果服务器已经接受连接，则可以调用此方法。每个1个&lt;em&gt;Server&lt;/em&gt;对象只能存在一个 &lt;code&gt;serve_forever&lt;/code&gt; 任务。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="407438304b114d9ae1fc43a76729553a9b36a0e0" translate="yes" xml:space="preserve">
          <source>This method can be called to signal that the set of tests being run should be aborted by setting the &lt;a href=&quot;#unittest.TestResult.shouldStop&quot;&gt;&lt;code&gt;shouldStop&lt;/code&gt;&lt;/a&gt; attribute to &lt;code&gt;True&lt;/code&gt;. &lt;code&gt;TestRunner&lt;/code&gt; objects should respect this flag and return without running any additional tests.</source>
          <target state="translated">通过将&lt;a href=&quot;#unittest.TestResult.shouldStop&quot;&gt; &lt;code&gt;shouldStop&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;True&lt;/code&gt; ，可以调用此方法来表示应该放弃正在运行的测试集。 &lt;code&gt;TestRunner&lt;/code&gt; 对象应遵守此标志并在不运行任何其他测试的情况下返回。</target>
        </trans-unit>
        <trans-unit id="10146130dff0e59381ebe13ea405d3f938543487" translate="yes" xml:space="preserve">
          <source>This method can be overridden by a metaclass to customize the method resolution order for its instances. It is called at class instantiation, and its result is stored in &lt;a href=&quot;#class.__mro__&quot;&gt;&lt;code&gt;__mro__&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">元类可以覆盖此方法，以为其实例自定义方法解析顺序。在类实例化时调用它，其结果存储在&lt;a href=&quot;#class.__mro__&quot;&gt; &lt;code&gt;__mro__&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55106137d8d33136ba4a5c819c765b0982b2c16a" translate="yes" xml:space="preserve">
          <source>This method can be used by servers that accept connections outside of asyncio but that use asyncio to handle them.</source>
          <target state="translated">这个方法可以被接受asyncio以外的连接但使用asyncio来处理的服务器使用。</target>
        </trans-unit>
        <trans-unit id="e0983394646b4255b9f804c3f4789957dcd10013" translate="yes" xml:space="preserve">
          <source>This method can be used to copy state between parsers.</source>
          <target state="translated">此方法可用于在解析器之间复制状态。</target>
        </trans-unit>
        <trans-unit id="6d5e0af7ffa6f4c1df88abb1f7b70552cbb5ba74" translate="yes" xml:space="preserve">
          <source>This method can deadlock when using &lt;code&gt;stdout=PIPE&lt;/code&gt; or &lt;code&gt;stderr=PIPE&lt;/code&gt; and the child process generates so much output that it blocks waiting for the OS pipe buffer to accept more data. Use the &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.communicate&quot;&gt;&lt;code&gt;communicate()&lt;/code&gt;&lt;/a&gt; method when using pipes to avoid this condition.</source>
          <target state="translated">当使用 &lt;code&gt;stdout=PIPE&lt;/code&gt; 或 &lt;code&gt;stderr=PIPE&lt;/code&gt; 时，此方法可能会死锁，并且子进程生成的输出太多，以至于阻塞了等待OS管道缓冲区接受更多数据的等待。使用管道时，请使用&lt;a href=&quot;#asyncio.asyncio.subprocess.Process.communicate&quot;&gt; &lt;code&gt;communicate()&lt;/code&gt; &lt;/a&gt;方法来避免这种情况。</target>
        </trans-unit>
        <trans-unit id="0b6651beb5c50a02eebbeaabab1f23c94c2bc904" translate="yes" xml:space="preserve">
          <source>This method can only be called before the &lt;a href=&quot;#xml.parsers.expat.xmlparser.Parse&quot;&gt;&lt;code&gt;Parse()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#xml.parsers.expat.xmlparser.ParseFile&quot;&gt;&lt;code&gt;ParseFile()&lt;/code&gt;&lt;/a&gt; methods are called; calling it after either of those have been called causes &lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt;&lt;code&gt;ExpatError&lt;/code&gt;&lt;/a&gt; to be raised with the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; attribute set to &lt;code&gt;errors.codes[errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING]&lt;/code&gt;.</source>
          <target state="translated">只能在调用&lt;a href=&quot;#xml.parsers.expat.xmlparser.Parse&quot;&gt; &lt;code&gt;Parse()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#xml.parsers.expat.xmlparser.ParseFile&quot;&gt; &lt;code&gt;ParseFile()&lt;/code&gt; &lt;/a&gt;方法之前调用此方法。在调用这两个方法中的任何一个之后调用它会导致&lt;a href=&quot;#xml.parsers.expat.ExpatError&quot;&gt; &lt;code&gt;ExpatError&lt;/code&gt; &lt;/a&gt;引发，并将&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;errors.codes[errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2086b47fb4d10716127e87469a74bd3b1a4a8119" translate="yes" xml:space="preserve">
          <source>This method can only be called once and cannot be called after &lt;a href=&quot;#concurrent.futures.Future.set_result&quot;&gt;&lt;code&gt;Future.set_result()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#concurrent.futures.Future.set_exception&quot;&gt;&lt;code&gt;Future.set_exception()&lt;/code&gt;&lt;/a&gt; have been called.</source>
          <target state="translated">只能调用一次此方法，并且在调用&lt;a href=&quot;#concurrent.futures.Future.set_result&quot;&gt; &lt;code&gt;Future.set_result()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#concurrent.futures.Future.set_exception&quot;&gt; &lt;code&gt;Future.set_exception()&lt;/code&gt; &lt;/a&gt;之后不能调用此方法。</target>
        </trans-unit>
        <trans-unit id="2cbd7d58d617b5e047b52fdaa579cb87df6296d7" translate="yes" xml:space="preserve">
          <source>This method can raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if the transport (e.g. SSL) doesn&amp;rsquo;t support half-closed connections.</source>
          <target state="translated">如果传输方式（例如SSL）不支持半封闭连接，则此方法会引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c195a6b614da560f82928764439dba94df4f8e23" translate="yes" xml:space="preserve">
          <source>This method can raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;exceptions#PermissionError&quot;&gt;&lt;code&gt;PermissionError&lt;/code&gt;&lt;/a&gt;, but &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; is caught and not raised.</source>
          <target state="translated">此方法可以引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;，例如&lt;a href=&quot;exceptions#PermissionError&quot;&gt; &lt;code&gt;PermissionError&lt;/code&gt; &lt;/a&gt;，但是&lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt; &lt;code&gt;FileNotFoundError&lt;/code&gt; &lt;/a&gt;被捕获并且没有引发。</target>
        </trans-unit>
        <trans-unit id="50c32059ccb282fc0aeaf5852f83c3180c54f927" translate="yes" xml:space="preserve">
          <source>This method can return before any file object becomes ready or the timeout has elapsed if the current process receives a signal: in this case, an empty list will be returned.</source>
          <target state="translated">这个方法可以在任何文件对象变得准备好之前返回,或者如果当前进程收到信号,超时已经过去:在这种情况下,将返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="552a056410da16d9e30d35242f865544f5b3c970" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;em&gt;frame&lt;/em&gt; is somewhere below &lt;code&gt;botframe&lt;/code&gt; in the call stack. &lt;code&gt;botframe&lt;/code&gt; is the frame in which debugging started.</source>
          <target state="translated">此方法检查&lt;em&gt;框架&lt;/em&gt;是否在调用堆栈中的 &lt;code&gt;botframe&lt;/code&gt; 下方。 &lt;code&gt;botframe&lt;/code&gt; 是开始调试的框架。</target>
        </trans-unit>
        <trans-unit id="ec7dec729e2fd25621dc1130cbf525c748669b5c" translate="yes" xml:space="preserve">
          <source>This method checks if there is a breakpoint in the filename and line belonging to &lt;em&gt;frame&lt;/em&gt; or, at least, in the current function. If the breakpoint is a temporary one, this method deletes it.</source>
          <target state="translated">此方法检查在属于&lt;em&gt;框架&lt;/em&gt;的文件名和行中是否存在断点，或者至少在当前函数中是否存在断点。如果断点是临时的，则此方法将其删除。</target>
        </trans-unit>
        <trans-unit id="4783154b5e95272a1ed6bc7a0f70e86690e5ac92" translate="yes" xml:space="preserve">
          <source>This method checks if there is a breakpoint in the filename of the current frame.</source>
          <target state="translated">此方法检查当前帧的文件名中是否有断点。</target>
        </trans-unit>
        <trans-unit id="1e7363c3caa003283906714b3fc1e39f30b891d3" translate="yes" xml:space="preserve">
          <source>This method chops the iterable into a number of chunks which it submits to the process pool as separate tasks. The (approximate) size of these chunks can be specified by setting &lt;em&gt;chunksize&lt;/em&gt; to a positive integer.</source>
          <target state="translated">此方法将可迭代项分为多个块，将其作为单独的任务提交给流程池。这些块的（大约）大小可以通过将&lt;em&gt;chunksize&lt;/em&gt;设置为正整数来指定。</target>
        </trans-unit>
        <trans-unit id="bd737781891d8c8772e3aff8b3ba708b987d4de2" translate="yes" xml:space="preserve">
          <source>This method clears all queues and shuts down the executor, but does not wait for the executor to finish.</source>
          <target state="translated">此方法清除所有队列并关闭执行器,但不等待执行器完成。</target>
        </trans-unit>
        <trans-unit id="c76f659ef31aff87035b3704b8e27300ed051239" translate="yes" xml:space="preserve">
          <source>This method closes the open mixer device file. Any further attempts to use the mixer after this file is closed will raise an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法关闭打开的混音器设备文件。关闭此文件后，再使用混合器的任何尝试都将引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dea536dd7b820dc65ea547cc98bb34d86563082b" translate="yes" xml:space="preserve">
          <source>This method commits the current transaction. If you don&amp;rsquo;t call this method, anything you did since the last call to &lt;code&gt;commit()&lt;/code&gt; is not visible from other database connections. If you wonder why you don&amp;rsquo;t see the data you&amp;rsquo;ve written to the database, please check you didn&amp;rsquo;t forget to call this method.</source>
          <target state="translated">此方法提交当前事务。如果不调用此方法，则从其他数据库连接 &lt;code&gt;commit()&lt;/code&gt; 不到自上次调用commit（）以来所做的任何操作。如果您想知道为什么看不到已写入数据库的数据，请检查您是否没有忘记调用此方法。</target>
        </trans-unit>
        <trans-unit id="38bab54e5484d9d6191a130b9832361ee4787af1" translate="yes" xml:space="preserve">
          <source>This method continues to send to the socket until either all data in &lt;em&gt;data&lt;/em&gt; has been sent or an error occurs. &lt;code&gt;None&lt;/code&gt; is returned on success. On error, an exception is raised. Additionally, there is no way to determine how much data, if any, was successfully processed by the receiving end of the connection.</source>
          <target state="translated">该方法继续，直到所有数据发送到套接字&lt;em&gt;数据&lt;/em&gt;已发送或发生错误。成功 &lt;code&gt;None&lt;/code&gt; 返回任何内容。如果出错，则会引发异常。此外，无法确定连接的接收端已成功处理了多少数据（如果有）。</target>
        </trans-unit>
        <trans-unit id="1fe15dbe299e6059c7cb4f652892203f2294ed3f" translate="yes" xml:space="preserve">
          <source>This method creates a ctypes instance, copying the buffer from the &lt;em&gt;source&lt;/em&gt; object buffer which must be readable. The optional &lt;em&gt;offset&lt;/em&gt; parameter specifies an offset into the source buffer in bytes; the default is zero. If the source buffer is not large enough a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">此方法创建一个ctypes实例，从必须可读的&lt;em&gt;源&lt;/em&gt;对象缓冲区中复制缓冲区。可选的&lt;em&gt;offset&lt;/em&gt;参数以字节为单位指定到源缓冲区的偏移量；默认值为零。如果源缓冲区不够大，则会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79e2c7a916c893d0cae05eee7a9e693d20944423" translate="yes" xml:space="preserve">
          <source>This method does an &lt;a href=&quot;#select.devpoll.unregister&quot;&gt;&lt;code&gt;unregister()&lt;/code&gt;&lt;/a&gt; followed by a &lt;a href=&quot;#select.devpoll.register&quot;&gt;&lt;code&gt;register()&lt;/code&gt;&lt;/a&gt;. It is (a bit) more efficient that doing the same explicitly.</source>
          <target state="translated">此方法先执行&lt;a href=&quot;#select.devpoll.unregister&quot;&gt; &lt;code&gt;unregister()&lt;/code&gt; ,&lt;/a&gt;然后执行&lt;a href=&quot;#select.devpoll.register&quot;&gt; &lt;code&gt;register()&lt;/code&gt; &lt;/a&gt;。显式地执行此操作（有点）效率更高。</target>
        </trans-unit>
        <trans-unit id="42dfa15b7a4aea5dabe3cc75fbe1eb5bf58cca52" translate="yes" xml:space="preserve">
          <source>This method does an implicit stream flush before setting the new parameters.</source>
          <target state="translated">本方法在设置新参数之前,先进行隐式流刷新。</target>
        </trans-unit>
        <trans-unit id="6309e3677b4c32db7759a47b019d92bd0f697365" translate="yes" xml:space="preserve">
          <source>This method does not block; it buffers the data and arranges for it to be sent out asynchronously.</source>
          <target state="translated">这个方法不阻塞,它缓冲数据并安排异步发送。</target>
        </trans-unit>
        <trans-unit id="39a877e637d53097551d0de19b8adfb6f42d8211" translate="yes" xml:space="preserve">
          <source>This method does nothing.</source>
          <target state="translated">这个方法什么都不做。</target>
        </trans-unit>
        <trans-unit id="13c34741b5804dbdc5a7f011bfea01867ca0bbd5" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints a list of all function that were called by the indicated function. Aside from this reversal of direction of calls (re: called vs was called by), the arguments and ordering are identical to the &lt;a href=&quot;#pstats.Stats.print_callers&quot;&gt;&lt;code&gt;print_callers()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;类的此方法将打印所指示函数调用的所有函数的列表。除了这种调用方向的反转（re：被调用vs被调用）之外，参数和顺序与&lt;a href=&quot;#pstats.Stats.print_callers&quot;&gt; &lt;code&gt;print_callers()&lt;/code&gt; &lt;/a&gt;方法相同。</target>
        </trans-unit>
        <trans-unit id="d1b2e760f26585a985b75f4056f33711aaf0b4c5" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints a list of all functions that called each function in the profiled database. The ordering is identical to that provided by &lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt;&lt;code&gt;print_stats()&lt;/code&gt;&lt;/a&gt;, and the definition of the restricting argument is also identical. Each caller is reported on its own line. The format differs slightly depending on the profiler that produced the stats:</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;类的此方法将打印所有概要文件数据库中调用每个函数的函数的列表。该顺序与&lt;a href=&quot;#pstats.Stats.print_stats&quot;&gt; &lt;code&gt;print_stats()&lt;/code&gt; &lt;/a&gt;提供的顺序相同，并且限制参数的定义也相同。每个呼叫者都在自己的线路上报告。格式略有不同，具体取决于生成统计信息的探查器：</target>
        </trans-unit>
        <trans-unit id="91f040b4faec2d515745438e522e71fd3894c37d" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class prints out a report as described in the &lt;a href=&quot;#profile.run&quot;&gt;&lt;code&gt;profile.run()&lt;/code&gt;&lt;/a&gt; definition.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;类的此方法按照&lt;a href=&quot;#profile.run&quot;&gt; &lt;code&gt;profile.run()&lt;/code&gt; &lt;/a&gt;定义中的描述打印报告。</target>
        </trans-unit>
        <trans-unit id="46c2ee0829732fa2fde7eb2dae1e52cfee073229" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class removes all leading path information from file names. It is very useful in reducing the size of the printout to fit within (close to) 80 columns. This method modifies the object, and the stripped information is lost. After performing a strip operation, the object is considered to have its entries in a &amp;ldquo;random&amp;rdquo; order, as it was just after object initialization and loading. If &lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt;&lt;code&gt;strip_dirs()&lt;/code&gt;&lt;/a&gt; causes two function names to be indistinguishable (they are on the same line of the same filename, and have the same function name), then the statistics for these two entries are accumulated into a single entry.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;类的此方法从文件名中删除所有前导路径信息。这对于减小打印输出的大小以适合（接近）80列非常有用。此方法修改对象，并且剥离的信息丢失。执行剥离操作后，对象被视为具有&amp;ldquo;随机&amp;rdquo;顺序的条目，就像对象初始化和加载之后一样。如果&lt;a href=&quot;#pstats.Stats.strip_dirs&quot;&gt; &lt;code&gt;strip_dirs()&lt;/code&gt; &lt;/a&gt;导致两个函数名无法区分（它们在同一文件名的同一行上，并且具有相同的函数名），则这两个条目的统计信息将累积到一个条目中。</target>
        </trans-unit>
        <trans-unit id="1409b161813035807a55bae77d9d7acbceace27b" translate="yes" xml:space="preserve">
          <source>This method for the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class reverses the ordering of the basic list within the object. Note that by default ascending vs descending order is properly selected based on the sort key of choice.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;类的此方法可反转对象中基本列表的顺序。请注意，默认情况下，根据选择的排序键正确选择了升序还是降序。</target>
        </trans-unit>
        <trans-unit id="accee55957c312a1850cca5c1863fffc7c622366" translate="yes" xml:space="preserve">
          <source>This method generates an error message leader in the format of a Unix C compiler error label; the format is &lt;code&gt;'&quot;%s&quot;, line %d: '&lt;/code&gt;, where the &lt;code&gt;%s&lt;/code&gt; is replaced with the name of the current source file and the &lt;code&gt;%d&lt;/code&gt; with the current input line number (the optional arguments can be used to override these).</source>
          <target state="translated">此方法以Unix C编译器错误标签的格式生成错误消息引导符；格式为 &lt;code&gt;'&quot;%s&quot;, line %d: '&lt;/code&gt; ，其中 &lt;code&gt;%s&lt;/code&gt; 被替换为当前源文件的名称，而 &lt;code&gt;%d&lt;/code&gt; 被替换为当前输入的行号（可选参数可用于覆盖它们） 。</target>
        </trans-unit>
        <trans-unit id="ab5e0cb7aa04565d02104cf51103e0e449b87a97" translate="yes" xml:space="preserve">
          <source>This method has to be called to ensure that underlying resources are cleaned-up.</source>
          <target state="translated">这个方法必须被调用,以确保底层资源被清理。</target>
        </trans-unit>
        <trans-unit id="331fcb4951405022dc8158f5e6b8f3643d5dcac8" translate="yes" xml:space="preserve">
          <source>This method implements the to-number operation of the IBM specification. If the argument is a string, no leading or trailing whitespace or underscores are permitted.</source>
          <target state="translated">这个方法实现了IBM规范中的to-number操作。如果参数是一个字符串,则不允许使用前导空格或尾部的下划线。</target>
        </trans-unit>
        <trans-unit id="ea7bc1d92f04efbde59e80bcc1aa6987de53f1ed" translate="yes" xml:space="preserve">
          <source>This method installs &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; into the built-in namespace, binding it to &lt;code&gt;_&lt;/code&gt;.</source>
          <target state="translated">此方法将&lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;安装到内置名称空间中，并将其绑定到 &lt;code&gt;_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b650bd083066fb7b32ea3a59211f198619f61efc" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to catch all URLs with no specific registered handler to open it.</source>
          <target state="translated">此方法&lt;em&gt;未&lt;/em&gt;在&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; 中&lt;/a&gt;定义，但是如果子类希望捕获所有没有特定注册处理程序的URL来打开它，则子类应定义该方法。</target>
        </trans-unit>
        <trans-unit id="1e0a5010ef1ad88b00b90339dfae674e6bb9136c" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to catch all URLs.</source>
          <target state="translated">这种方法是&lt;em&gt;不是&lt;/em&gt;定义&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;，但子类应当定义它，如果他们想赶上所有的URL。</target>
        </trans-unit>
        <trans-unit id="774438cdf07e39e3e6c8d23d09c95f16acf3695e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to handle URLs with the given protocol.</source>
          <target state="translated">这种方法是&lt;em&gt;不是&lt;/em&gt;定义&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;，但子类应当定义它，如果他们想处理与给定协议的URL。</target>
        </trans-unit>
        <trans-unit id="9a9cdb8234013d6e3c19e46c3246b2cc09d3442f" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to post-process responses of the given protocol.</source>
          <target state="translated">这种方法是&lt;em&gt;不是&lt;/em&gt;定义&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;，但子类应当定义它，如果他们想给定协议的后处理响应。</target>
        </trans-unit>
        <trans-unit id="2c75df0a7bff13cd0e3f5e4caa6aded657e9562e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should define it if they want to pre-process requests of the given protocol.</source>
          <target state="translated">这种方法是&lt;em&gt;不是&lt;/em&gt;定义&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; &lt;/a&gt;，但子类应当定义它，如果他们想预先处理给定协议的请求。</target>
        </trans-unit>
        <trans-unit id="3c7ad9f09ceaada2d47a78bd99c6bbb39e61d57e" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;not&lt;/em&gt; defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but subclasses should override it if they intend to provide a catch-all for otherwise unhandled HTTP errors. It will be called automatically by the &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; getting the error, and should not normally be called in other circumstances.</source>
          <target state="translated">该方法&lt;em&gt;未&lt;/em&gt;在&lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt; &lt;code&gt;BaseHandler&lt;/code&gt; 中&lt;/a&gt;定义，但是如果子类打算为所有未处理的HTTP错误提供全部保护，则子类应重写此方法。出现错误的&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;将自动调用它，并且在其他情况下通常不应调用它。</target>
        </trans-unit>
        <trans-unit id="dfa69d3953d3eb2beb1c0eca7aee210715c53a6e" translate="yes" xml:space="preserve">
          <source>This method is a WSGI application to generate an error page for the user. It is only invoked if an error occurs before headers are sent to the client.</source>
          <target state="translated">这个方法是一个WSGI应用程序,为用户生成一个错误页面。只有在头文件被发送到客户端之前发生错误时,才会调用该方法。</target>
        </trans-unit>
        <trans-unit id="6f12537a7fc1c2e7162c9359e9edb423ac1e11cb" translate="yes" xml:space="preserve">
          <source>This method is a convenient way of asserting that the last call has been made in a particular way:</source>
          <target state="translated">该方法是一种方便的方法,可以断言最后一次调用是以特定方式进行的。</target>
        </trans-unit>
        <trans-unit id="db33534558dd6010fe1a2ce1248cebf9374038a7" translate="yes" xml:space="preserve">
          <source>This method is a shorthand for certain &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt; calls:</source>
          <target state="translated">此方法是某些&lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt;调用的简写：</target>
        </trans-unit>
        <trans-unit id="4c26f67a97d1ef429fc2262c07876bc620c73fa6" translate="yes" xml:space="preserve">
          <source>This method is an optimization. It removes the need for checking every cookie with a particular domain (which might involve reading many files). Returning true from &lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt;&lt;code&gt;domain_return_ok()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt; leaves all the work to &lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt;&lt;code&gt;return_ok()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法是一种优化。它消除了检查带有特定域的每个cookie的需要（这可能涉及读取许多文件）。从&lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt; &lt;code&gt;domain_return_ok()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; &lt;/a&gt;返回true 会将所有工作&lt;a href=&quot;#http.cookiejar.CookiePolicy.return_ok&quot;&gt; &lt;code&gt;return_ok()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f13e10218d52bc14c398580fbb5847c80ef680a" translate="yes" xml:space="preserve">
          <source>This method is called after close has been called to reset the parser so that it is ready to parse new documents. The results of calling parse or feed after close without calling reset are undefined.</source>
          <target state="translated">这个方法在调用close后被调用,以重置解析器,使其准备好解析新文档。在没有调用reset的情况下,在close之后调用parse或feed的结果是未定义的。</target>
        </trans-unit>
        <trans-unit id="8f681be9592e79695afc941d306faad07ca7074f" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; class when the requested key is not found; whatever it returns or raises is then returned or raised by &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当找不到请求的键时，此方法由&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;方法调用；它返回或引发的所有内容都由&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;返回或引发。</target>
        </trans-unit>
        <trans-unit id="19a1c3fd2fc083c9f806fb14e71149f2e03d9489" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; class when the requested key is not found; whatever it returns or raises is then returned or raised by &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当找不到请求的键时，此方法由&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;方法调用；它返回或引发的所有内容都由&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;返回或引发。</target>
        </trans-unit>
        <trans-unit id="ca5cd597958a55feba59538cd823db6f1757425f" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_call&quot;&gt;&lt;code&gt;dispatch_call()&lt;/code&gt;&lt;/a&gt; when there is the possibility that a break might be necessary anywhere inside the called function.</source>
          <target state="translated">当有可能需要在被调用函数内的任何地方中断时，从&lt;a href=&quot;#bdb.Bdb.dispatch_call&quot;&gt; &lt;code&gt;dispatch_call()&lt;/code&gt; &lt;/a&gt;调用此方法。</target>
        </trans-unit>
        <trans-unit id="2a648f403a2f03bb18de23aaed8ae35a5ed0171d" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_exception&quot;&gt;&lt;code&gt;dispatch_exception()&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">当&lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; &lt;/a&gt;产生 &lt;code&gt;True&lt;/code&gt; 时，从&lt;a href=&quot;#bdb.Bdb.dispatch_exception&quot;&gt; &lt;code&gt;dispatch_exception()&lt;/code&gt; &lt;/a&gt;调用此方法。</target>
        </trans-unit>
        <trans-unit id="15dc6e44bad2f4483f0eb7df451d9c71e914b252" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_line&quot;&gt;&lt;code&gt;dispatch_line()&lt;/code&gt;&lt;/a&gt; when either &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#bdb.Bdb.break_here&quot;&gt;&lt;code&gt;break_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">当&lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#bdb.Bdb.break_here&quot;&gt; &lt;code&gt;break_here()&lt;/code&gt; &lt;/a&gt;产生 &lt;code&gt;True&lt;/code&gt; 时，从&lt;a href=&quot;#bdb.Bdb.dispatch_line&quot;&gt; &lt;code&gt;dispatch_line()&lt;/code&gt; &lt;/a&gt;调用此方法。</target>
        </trans-unit>
        <trans-unit id="98e84fb726ba7d465a759a50ecf0dc2de47d13ff" translate="yes" xml:space="preserve">
          <source>This method is called from &lt;a href=&quot;#bdb.Bdb.dispatch_return&quot;&gt;&lt;code&gt;dispatch_return()&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt;&lt;code&gt;stop_here()&lt;/code&gt;&lt;/a&gt; yields &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">当&lt;a href=&quot;#bdb.Bdb.stop_here&quot;&gt; &lt;code&gt;stop_here()&lt;/code&gt; &lt;/a&gt;产生 &lt;code&gt;True&lt;/code&gt; 时，从&lt;a href=&quot;#bdb.Bdb.dispatch_return&quot;&gt; &lt;code&gt;dispatch_return()&lt;/code&gt; &lt;/a&gt;调用此方法。</target>
        </trans-unit>
        <trans-unit id="0a02c40de1371e57d58beb2caa096cce464a3453" translate="yes" xml:space="preserve">
          <source>This method is called in rare conditions, when the transport (e.g. UDP) detects that a datagram could not be delivered to its recipient. In many conditions though, undeliverable datagrams will be silently dropped.</source>
          <target state="translated">在极少数情况下,当传输(如UDP)检测到数据报无法送达收件人时,会调用此方法。但在许多情况下,无法发送的数据报会被静静地丢弃。</target>
        </trans-unit>
        <trans-unit id="021d411ee8557a5431f25adec004b2c8f9a32dd5" translate="yes" xml:space="preserve">
          <source>This method is called to handle an HTML doctype declaration (e.g. &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">调用此方法来处理HTML doctype声明（例如 &lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fd8d299a2cd0f21cfa448069764a167e9c313432" translate="yes" xml:space="preserve">
          <source>This method is called to handle the end tag of an element (e.g. &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">调用此方法来处理元素的结束标记（例如 &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="60f522853fb2ae7781965ad938ace085974516d9" translate="yes" xml:space="preserve">
          <source>This method is called to handle the start of a tag (e.g. &lt;code&gt;&amp;lt;div id=&quot;main&quot;&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">调用此方法来处理标签的开头（例如 &lt;code&gt;&amp;lt;div id=&quot;main&quot;&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="78e8fd9b96db05d7a2b36f348576340eb21ea97e" translate="yes" xml:space="preserve">
          <source>This method is called to process a named character reference of the form &lt;code&gt;&amp;amp;name;&lt;/code&gt; (e.g. &lt;code&gt;&amp;amp;gt;&lt;/code&gt;), where &lt;em&gt;name&lt;/em&gt; is a general entity reference (e.g. &lt;code&gt;'gt'&lt;/code&gt;). This method is never called if &lt;em&gt;convert_charrefs&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">调用此方法以处理 &lt;code&gt;&amp;amp;name;&lt;/code&gt; 形式的命名字符引用。（例如 &lt;code&gt;&amp;amp;gt;&lt;/code&gt; ），其中&lt;em&gt;name&lt;/em&gt;是通用实体引用（例如 &lt;code&gt;'gt'&lt;/code&gt; ）。如果&lt;em&gt;convert_charrefs&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ,则永远不会调用此方法。</target>
        </trans-unit>
        <trans-unit id="fb85f0254c8bad935b85ebf8734852604581fb1b" translate="yes" xml:space="preserve">
          <source>This method is called to process arbitrary data (e.g. text nodes and the content of &lt;code&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">调用此方法来处理任意数据（例如，文本节点以及 &lt;code&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;&lt;/code&gt; 的内容）。</target>
        </trans-unit>
        <trans-unit id="6e9e01f728ac0f3b55f6b12a74a0191fb1f47305" translate="yes" xml:space="preserve">
          <source>This method is called to process decimal and hexadecimal numeric character references of the form &lt;code&gt;&amp;amp;#NNN;&lt;/code&gt; and &lt;code&gt;&amp;amp;#xNNN;&lt;/code&gt;. For example, the decimal equivalent for &lt;code&gt;&amp;amp;gt;&lt;/code&gt; is &lt;code&gt;&amp;amp;#62;&lt;/code&gt;, whereas the hexadecimal is &lt;code&gt;&amp;amp;#x3E;&lt;/code&gt;; in this case the method will receive &lt;code&gt;'62'&lt;/code&gt; or &lt;code&gt;'x3E'&lt;/code&gt;. This method is never called if &lt;em&gt;convert_charrefs&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">调用此方法以处理 &lt;code&gt;&amp;amp;#NNN;&lt;/code&gt; 形式的十进制和十六进制数字字符引用。和 &lt;code&gt;&amp;amp;#xNNN;&lt;/code&gt; 。例如， &lt;code&gt;&amp;amp;gt;&lt;/code&gt; 是 &lt;code&gt;&amp;amp;#62;&lt;/code&gt; ，而十六进制为 &lt;code&gt;&amp;amp;#x3E;&lt;/code&gt; ; 在这种情况下，该方法将接收 &lt;code&gt;'62'&lt;/code&gt; 或 &lt;code&gt;'x3E'&lt;/code&gt; 。如果&lt;em&gt;convert_charrefs&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ,则永远不会调用此方法。</target>
        </trans-unit>
        <trans-unit id="780c3c6664f5680442ea9564301d3230a6f7d6e3" translate="yes" xml:space="preserve">
          <source>This method is called unconditionally after &lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt;&lt;code&gt;tearDown()&lt;/code&gt;&lt;/a&gt;, or after &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; raises an exception.</source>
          <target state="translated">在&lt;a href=&quot;#unittest.TestCase.tearDown&quot;&gt; &lt;code&gt;tearDown()&lt;/code&gt; &lt;/a&gt;之后或&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;如果&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;引发异常的情况下无条件调用此方法。</target>
        </trans-unit>
        <trans-unit id="6f7e5a7533d2f0589f3c906a5b3e37e2cdfcac0b" translate="yes" xml:space="preserve">
          <source>This method is called unconditionally after &lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt;&lt;code&gt;tearDownClass()&lt;/code&gt;&lt;/a&gt;, or after &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt;&lt;code&gt;setUpClass()&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt;&lt;code&gt;setUpClass()&lt;/code&gt;&lt;/a&gt; raises an exception.</source>
          <target state="translated">在&lt;a href=&quot;#unittest.TestCase.tearDownClass&quot;&gt; &lt;code&gt;tearDownClass()&lt;/code&gt; &lt;/a&gt;之后或&lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt; &lt;code&gt;setUpClass()&lt;/code&gt; &lt;/a&gt;如果&lt;a href=&quot;#unittest.TestCase.setUpClass&quot;&gt; &lt;code&gt;setUpClass()&lt;/code&gt; &lt;/a&gt;引发异常后，将无条件调用此方法。</target>
        </trans-unit>
        <trans-unit id="6c401fde11b1d87c3294f0c6adb80e04c2f1324b" translate="yes" xml:space="preserve">
          <source>This method is called when a comment is encountered (e.g. &lt;code&gt;&amp;lt;!--comment--&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">遇到注释时调用此方法（例如 &lt;code&gt;&amp;lt;!--comment--&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="083f5bbf1b7fefcdcebe71d540d8eb6862687fcd" translate="yes" xml:space="preserve">
          <source>This method is called when an unrecognized declaration is read by the parser.</source>
          <target state="translated">当解析器读取到一个未识别的声明时,会调用这个方法。</target>
        </trans-unit>
        <trans-unit id="48ae32338e51d99f49068d32f552aa62126cb367" translate="yes" xml:space="preserve">
          <source>This method is different from &lt;a href=&quot;inspect#inspect.iscoroutine&quot;&gt;&lt;code&gt;inspect.iscoroutine()&lt;/code&gt;&lt;/a&gt; because it returns &lt;code&gt;True&lt;/code&gt; for generator-based coroutines.</source>
          <target state="translated">此方法与&lt;a href=&quot;inspect#inspect.iscoroutine&quot;&gt; &lt;code&gt;inspect.iscoroutine()&lt;/code&gt; &lt;/a&gt;不同，因为它对基于生成器的协程返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc40e25a45ba1a58708d3089e289be86a7db029b" translate="yes" xml:space="preserve">
          <source>This method is different from &lt;a href=&quot;inspect#inspect.iscoroutinefunction&quot;&gt;&lt;code&gt;inspect.iscoroutinefunction()&lt;/code&gt;&lt;/a&gt; because it returns &lt;code&gt;True&lt;/code&gt; for generator-based coroutine functions decorated with &lt;a href=&quot;#asyncio.coroutine&quot;&gt;&lt;code&gt;@coroutine&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法与&lt;a href=&quot;inspect#inspect.iscoroutinefunction&quot;&gt; &lt;code&gt;inspect.iscoroutinefunction()&lt;/code&gt; &lt;/a&gt;不同，因为对于使用&lt;a href=&quot;#asyncio.coroutine&quot;&gt; &lt;code&gt;@coroutine&lt;/code&gt; &lt;/a&gt;装饰的基于生成器的协程函数，它返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dddb9624f73389ca6bf646c24e53304c5b5057e6" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;#datetime.datetime.now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;, but without a &lt;code&gt;tz&lt;/code&gt; parameter.</source>
          <target state="translated">此方法在功能上等效于&lt;a href=&quot;#datetime.datetime.now&quot;&gt; &lt;code&gt;now()&lt;/code&gt; &lt;/a&gt;，但没有 &lt;code&gt;tz&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="b97d3051bc701554dcad211b236f67ff88970be3" translate="yes" xml:space="preserve">
          <source>This method is idempotent and irreversible. No other methods should be called after the event loop is closed.</source>
          <target state="translated">这个方法是幂等的,不可逆的。事件循环关闭后,不应调用其他方法。</target>
        </trans-unit>
        <trans-unit id="7892f36db958bf60c1b533b160c0617375239772" translate="yes" xml:space="preserve">
          <source>This method is idempotent, so it can be called when the server is already being serving.</source>
          <target state="translated">这个方法是幂等的,所以它可以在服务器已经在服务的时候被调用。</target>
        </trans-unit>
        <trans-unit id="9ae00641b6d229770d0d819ba1e3ef91e3d7719d" translate="yes" xml:space="preserve">
          <source>This method is not available if &lt;a href=&quot;#ssl.HAS_ECDH&quot;&gt;&lt;code&gt;HAS_ECDH&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;#ssl.HAS_ECDH&quot;&gt; &lt;code&gt;HAS_ECDH&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ,则此方法不可用。</target>
        </trans-unit>
        <trans-unit id="57ee157b53728379894b4f3c33a03f1d7afbf61f" translate="yes" xml:space="preserve">
          <source>This method is not called directly by &lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt;&lt;code&gt;assertEqual()&lt;/code&gt;&lt;/a&gt;, but it&amp;rsquo;s used to implement &lt;a href=&quot;#unittest.TestCase.assertListEqual&quot;&gt;&lt;code&gt;assertListEqual()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.TestCase.assertTupleEqual&quot;&gt;&lt;code&gt;assertTupleEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.TestCase.assertEqual&quot;&gt; &lt;code&gt;assertEqual()&lt;/code&gt; &lt;/a&gt;不会直接调用此方法，但是它用于实现&lt;a href=&quot;#unittest.TestCase.assertListEqual&quot;&gt; &lt;code&gt;assertListEqual()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#unittest.TestCase.assertTupleEqual&quot;&gt; &lt;code&gt;assertTupleEqual()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96313c3d6a35f154b39764123b93a03916b5cfad" translate="yes" xml:space="preserve">
          <source>This method is not thread-safe.</source>
          <target state="translated">这个方法不是线程安全的。</target>
        </trans-unit>
        <trans-unit id="0b1b157e68e0328b341b72985baa5aa977263159" translate="yes" xml:space="preserve">
          <source>This method is provided as a hook to allow subclasses to modify the way objects are converted to strings. The default implementation uses the internals of the &lt;a href=&quot;#pprint.saferepr&quot;&gt;&lt;code&gt;saferepr()&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">该方法作为一个挂钩提供，以允许子类修改将对象转换为字符串的方式。默认实现使用&lt;a href=&quot;#pprint.saferepr&quot;&gt; &lt;code&gt;saferepr()&lt;/code&gt; &lt;/a&gt;实现的内部。</target>
        </trans-unit>
        <trans-unit id="e4bdac2933048c44528e57a8429191db425bd284" translate="yes" xml:space="preserve">
          <source>This method is the main public interface to the &lt;code&gt;TextTestRunner&lt;/code&gt;. This method takes a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; instance. A &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; is created by calling &lt;a href=&quot;#unittest.TextTestRunner._makeResult&quot;&gt;&lt;code&gt;_makeResult()&lt;/code&gt;&lt;/a&gt; and the test(s) are run and the results printed to stdout.</source>
          <target state="translated">此方法是 &lt;code&gt;TextTestRunner&lt;/code&gt; 的主要公共接口。此方法采用&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;实例。通过调用&lt;a href=&quot;#unittest.TextTestRunner._makeResult&quot;&gt; &lt;code&gt;_makeResult()&lt;/code&gt; &lt;/a&gt;创建一个&lt;a href=&quot;#unittest.TestResult&quot;&gt; &lt;code&gt;TestResult&lt;/code&gt; &lt;/a&gt;，然后运行测试并将结果打印到stdout。</target>
        </trans-unit>
        <trans-unit id="9bd2fdab8cd5bcb3e3fbca53f4ef470344341c92" translate="yes" xml:space="preserve">
          <source>This method lets users assign non-string values to keys internally. This behaviour is unsupported and will cause errors when attempting to write to a file or get it in non-raw mode. &lt;strong&gt;Use the mapping protocol API&lt;/strong&gt; which does not allow such assignments to take place.</source>
          <target state="translated">此方法使用户可以在内部为键分配非字符串值。不支持此行为，并且在尝试写入文件或以非原始模式获取文件时会导致错误。&lt;strong&gt;使用&lt;/strong&gt;不允许进行此类分配&lt;strong&gt;的映射协议API&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="9e630d695c2a5ae538aa534d3f87ea68ff8127b6" translate="yes" xml:space="preserve">
          <source>This method makes a backup of a SQLite database even while it&amp;rsquo;s being accessed by other clients, or concurrently by the same connection. The copy will be written into the mandatory argument &lt;em&gt;target&lt;/em&gt;, that must be another &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">即使其他客户端正在访问该SQLite数据库，或者同一连接同时进行该方法，该方法仍会备份该SQLite数据库。该副本将被写入强制参数&lt;em&gt;target&lt;/em&gt;，该参数必须是另一个&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="8a02a1158ac4fe9ca33054075ba7d7b80db9ab50" translate="yes" xml:space="preserve">
          <source>This method may raise a &lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt;&lt;code&gt;BrokenBarrierError&lt;/code&gt;&lt;/a&gt; exception if the barrier is broken or reset while a thread is waiting.</source>
          <target state="translated">如果在线程等待时屏障被破坏或重置，则此方法可能引发&lt;a href=&quot;#threading.BrokenBarrierError&quot;&gt; &lt;code&gt;BrokenBarrierError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="c5c3086f7c1e4aa9151125cf96d263eefadc9725" translate="yes" xml:space="preserve">
          <source>This method may raise the following exceptions:</source>
          <target state="translated">本方法可能引发以下异常:</target>
        </trans-unit>
        <trans-unit id="8524f745e5bc38fb37ffab27510d6080ece56f38" translate="yes" xml:space="preserve">
          <source>This method may return a false value (including &lt;code&gt;None&lt;/code&gt;), in which case the transport will close itself. Conversely, if this method returns a true value, the protocol used determines whether to close the transport. Since the default implementation returns &lt;code&gt;None&lt;/code&gt;, it implicitly closes the connection.</source>
          <target state="translated">此方法可能返回错误的值（包括 &lt;code&gt;None&lt;/code&gt; ），在这种情况下，传输将自行关闭。相反，如果此方法返回一个真值，则使用的协议将确定是否关闭传输。由于默认实现返回 &lt;code&gt;None&lt;/code&gt; ，所以它隐式关闭了连接。</target>
        </trans-unit>
        <trans-unit id="fea30f06bff8ed9f1510d9b11d7230de71e381c5" translate="yes" xml:space="preserve">
          <source>This method modifies the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; object by sorting it according to the supplied criteria. The argument can be either a string or a SortKey enum identifying the basis of a sort (example: &lt;code&gt;'time'&lt;/code&gt;, &lt;code&gt;'name'&lt;/code&gt;, &lt;code&gt;SortKey.TIME&lt;/code&gt; or &lt;code&gt;SortKey.NAME&lt;/code&gt;). The SortKey enums argument have advantage over the string argument in that it is more robust and less error prone.</source>
          <target state="translated">此方法通过根据提供的条件对&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;对象进行排序来修改Stats对象。该参数可以是字符串或用于标识排序基础的SortKey枚举（例如： &lt;code&gt;'time'&lt;/code&gt; ， &lt;code&gt;'name'&lt;/code&gt; ， &lt;code&gt;SortKey.TIME&lt;/code&gt; 或 &lt;code&gt;SortKey.NAME&lt;/code&gt; ）。SortKey枚举参数比字符串参数具有优势，因为它更健壮且更不易出错。</target>
        </trans-unit>
        <trans-unit id="4b67339d7ffa22b6989fc78c8f895cf57a483d57" translate="yes" xml:space="preserve">
          <source>This method modifies the sequence in place for economy of space when sorting a large sequence. To remind users that it operates by side effect, it does not return the sorted sequence (use &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; to explicitly request a new sorted list instance).</source>
          <target state="translated">当对大序列进行排序时，此方法会修改序列以节省空间。为了提醒用户它具有副作用，它不会返回排序后的序列（使用&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;显式请求一个新的排序后的列表实例）。</target>
        </trans-unit>
        <trans-unit id="3d73c5e146a430709549e8f05dfe23e4b86723e9" translate="yes" xml:space="preserve">
          <source>This method must be implemented by derived classes.</source>
          <target state="translated">这个方法必须由派生类来实现。</target>
        </trans-unit>
        <trans-unit id="6427204bbe134d960e66ca16b4637f20a99011bf" translate="yes" xml:space="preserve">
          <source>This method of serialization requires that the time zone data for the required key be available on both the serializing and deserializing side, similar to the way that references to classes and functions are expected to exist in both the serializing and deserializing environments. It also means that no guarantees are made about the consistency of results when unpickling a &lt;code&gt;ZoneInfo&lt;/code&gt; pickled in an environment with a different version of the time zone data.</source>
          <target state="translated">这种序列化方法要求所需密钥的时区数据在序列化和反序列化方面均可用，这类似于在序列化和反序列化环境中都希望存在对类和函数的引用。这也意味着，在具有不同版本的时区数据的环境中 &lt;code&gt;ZoneInfo&lt;/code&gt; 腌制的ZoneInfo时，不保证结果的一致性。</target>
        </trans-unit>
        <trans-unit id="ecb603ce556cad65f00fa7a55aabb53317aee850" translate="yes" xml:space="preserve">
          <source>This method of the &lt;a href=&quot;#pstats.Stats&quot;&gt;&lt;code&gt;Stats&lt;/code&gt;&lt;/a&gt; class accumulates additional profiling information into the current profiling object. Its arguments should refer to filenames created by the corresponding version of &lt;a href=&quot;#profile.run&quot;&gt;&lt;code&gt;profile.run()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;cProfile.run()&lt;/code&gt;. Statistics for identically named (re: file, line, name) functions are automatically accumulated into single function statistics.</source>
          <target state="translated">&lt;a href=&quot;#pstats.Stats&quot;&gt; &lt;code&gt;Stats&lt;/code&gt; &lt;/a&gt;类的此方法将其他分析信息累积到当前分析对象中。其参数应引用由&lt;a href=&quot;#profile.run&quot;&gt; &lt;code&gt;profile.run()&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;cProfile.run()&lt;/code&gt; 的相应版本创建的文件名。具有相同名称（re：文件，行，名称）的函数的统计信息将自动累积到单个函数统计信息中。</target>
        </trans-unit>
        <trans-unit id="d9898a7b816caca92a7ca2b0496401b9be9be437" translate="yes" xml:space="preserve">
          <source>This method prints a usage message including the &lt;em&gt;message&lt;/em&gt; to the standard error and terminates the program with a status code of 2.</source>
          <target state="translated">此方法打印一条包含标准错误&lt;em&gt;消息&lt;/em&gt;的用法消息，并以状态代码2终止程序。</target>
        </trans-unit>
        <trans-unit id="5e6533f5a1c6b28e058a5b665ce396bbe1c50304" translate="yes" xml:space="preserve">
          <source>This method releases the underlying lock, and then blocks until it is awakened by a &lt;a href=&quot;#asyncio.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#asyncio.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; call. Once awakened, the Condition re-acquires its lock and this method returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">此方法释放基础锁，然后进行阻塞，直到被&lt;a href=&quot;#asyncio.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#asyncio.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;调用唤醒。唤醒后，Condition重新获取其锁定，并且此方法返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b82153b14d869f12ca5d555943198e9ddc07c795" translate="yes" xml:space="preserve">
          <source>This method releases the underlying lock, and then blocks until it is awakened by a &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; call for the same condition variable in another thread, or until the optional timeout occurs. Once awakened or timed out, it re-acquires the lock and returns.</source>
          <target state="translated">此方法释放基础锁，然后进行阻塞，直到被另一个线程中的相同条件变量的&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;调用唤醒，或直到发生可选的超时为止。一旦唤醒或超时，它将重新获取锁并返回。</target>
        </trans-unit>
        <trans-unit id="944988049561328736ecf5958b62fc42047b6f2b" translate="yes" xml:space="preserve">
          <source>This method replaces the &lt;em&gt;Content-Type&lt;/em&gt; header, keeping all the parameters in place. If &lt;em&gt;requote&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, this leaves the existing header&amp;rsquo;s quoting as is, otherwise the parameters will be quoted (the default).</source>
          <target state="translated">此方法替换&lt;em&gt;Content-Type&lt;/em&gt;标头，将所有参数保留在原位。如果&lt;em&gt;requote&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ，则&lt;em&gt;保留&lt;/em&gt;现有标头的引用不变，否则参数将被引用（默认）。</target>
        </trans-unit>
        <trans-unit id="fa06c018512ee37e541d1e43b0f387b23671b215" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;None&lt;/code&gt; for the lock, since there is no underlying I/O to which access needs to be serialized.</source>
          <target state="translated">该方法为锁返回 &lt;code&gt;None&lt;/code&gt; ，因为没有底层的I / O需要将访问序列化。</target>
        </trans-unit>
        <trans-unit id="0a8c42b63ebbe3579b9c96c4e3249c2dcec50aba" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;True&lt;/code&gt; if and only if the internal flag has been set to true, either before the wait call or after the wait starts, so it will always return &lt;code&gt;True&lt;/code&gt; except if a timeout is given and the operation times out.</source>
          <target state="translated">当且仅当内部标志在等待调用之前或等待开始之后设置为true时，此方法才返回 &lt;code&gt;True&lt;/code&gt; ，因此，除非给出了超时且操作超时，否则它将始终返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ff21d78bbca2c17f4b0d82e526fde8ca8233fe2" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;True&lt;/code&gt; just before the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method starts until just after the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method terminates. The module function &lt;a href=&quot;#threading.enumerate&quot;&gt;&lt;code&gt;enumerate()&lt;/code&gt;&lt;/a&gt; returns a list of all alive threads.</source>
          <target state="translated">该方法在&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法开始之前一直返回，直到&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法终止之后才返回 &lt;code&gt;True&lt;/code&gt; 。模块函数&lt;a href=&quot;#threading.enumerate&quot;&gt; &lt;code&gt;enumerate()&lt;/code&gt; &lt;/a&gt;返回所有活动线程的列表。</target>
        </trans-unit>
        <trans-unit id="9a190b6d357c92f8c7b4a848b7c388e4f2261012" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;asyncio.Future&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">此方法返回&lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt; &lt;code&gt;asyncio.Future&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="22aa37bf3e1d9f077cbe89f01a870cfdf0411629" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;Match(a, b, size)&lt;/code&gt;.</source>
          <target state="translated">此方法返回一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-named-tuple&quot;&gt;命名的元组&lt;/a&gt; &lt;code&gt;Match(a, b, size)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9228a481dfb5811e50b295f775925c61552270a" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;named tuple&lt;/a&gt;&lt;code&gt;Match(a, b, size)&lt;/code&gt;.</source>
          <target state="translated">此方法返回一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-named-tuple&quot;&gt;命名的元组&lt;/a&gt; &lt;code&gt;Match(a, b, size)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="342409adab7e89643138c3e03259c386365fe00e" translate="yes" xml:space="preserve">
          <source>This method returns a bitmask indicating which control(s) are currently being used as a recording source.</source>
          <target state="translated">此方法返回一个位掩码,表示当前哪个控件被用作记录源。</target>
        </trans-unit>
        <trans-unit id="aabfc7d3078e2a06d6d9b67f429a304a5721d434" translate="yes" xml:space="preserve">
          <source>This method returns a bitmask specifying the available mixer controls (&amp;ldquo;Control&amp;rdquo; being a specific mixable &amp;ldquo;channel&amp;rdquo;, such as &lt;code&gt;SOUND_MIXER_PCM&lt;/code&gt; or &lt;code&gt;SOUND_MIXER_SYNTH&lt;/code&gt;). This bitmask indicates a subset of all available mixer controls&amp;mdash;the &lt;code&gt;SOUND_MIXER_*&lt;/code&gt; constants defined at module level. To determine if, for example, the current mixer object supports a PCM mixer, use the following Python code:</source>
          <target state="translated">此方法返回一个位掩码，指定可用的混音器控件（&amp;ldquo; Control&amp;rdquo;是特定的可混音&amp;ldquo;通道&amp;rdquo;，例如 &lt;code&gt;SOUND_MIXER_PCM&lt;/code&gt; 或 &lt;code&gt;SOUND_MIXER_SYNTH&lt;/code&gt; ）。此位掩码指示所有可用的混音器控件的子集- 在模块级别定义的 &lt;code&gt;SOUND_MIXER_*&lt;/code&gt; 常量。例如，要确定当前的混音器对象是否支持PCM混音器，请使用以下Python代码：</target>
        </trans-unit>
        <trans-unit id="df978a925585d3eadcceedc0ad64b9fab01f1e83" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes instance that shares the buffer of the &lt;em&gt;source&lt;/em&gt; object. The &lt;em&gt;source&lt;/em&gt; object must support the writeable buffer interface. The optional &lt;em&gt;offset&lt;/em&gt; parameter specifies an offset into the source buffer in bytes; the default is zero. If the source buffer is not large enough a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">此方法返回共享&lt;em&gt;源&lt;/em&gt;对象缓冲区的ctypes实例。所述&lt;em&gt;源&lt;/em&gt;对象必须支持可写缓冲器接口。可选的&lt;em&gt;offset&lt;/em&gt;参数以字节为单位指定到源缓冲区的偏移量；默认值为零。如果源缓冲区不够大，则会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac71e792e2a9c33ac33b83b3b71a840f15b878ae" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes type instance exported by a shared library. &lt;em&gt;name&lt;/em&gt; is the name of the symbol that exports the data, &lt;em&gt;library&lt;/em&gt; is the loaded shared library.</source>
          <target state="translated">此方法返回由共享库导出的ctypes类型实例。&lt;em&gt;name&lt;/em&gt;是导出数据的符号的名称，&lt;em&gt;library&lt;/em&gt;是已加载的共享库。</target>
        </trans-unit>
        <trans-unit id="bb20e4aecb1fc974d47968af508b600ed3725864" translate="yes" xml:space="preserve">
          <source>This method returns a ctypes type instance using the memory specified by &lt;em&gt;address&lt;/em&gt; which must be an integer.</source>
          <target state="translated">此方法使用由&lt;em&gt;address&lt;/em&gt;指定的内存（必须为整数）返回ctypes类型实例。</target>
        </trans-unit>
        <trans-unit id="ec26fdb2340b8677da60daf61e4675ffcd3eae50" translate="yes" xml:space="preserve">
          <source>This method returns a list of 2-tuples of the form returned by &lt;code&gt;parseaddr()&lt;/code&gt;. &lt;em&gt;fieldvalues&lt;/em&gt; is a sequence of header field values as might be returned by &lt;a href=&quot;email.compat32-message#email.message.Message.get_all&quot;&gt;&lt;code&gt;Message.get_all&lt;/code&gt;&lt;/a&gt;. Here&amp;rsquo;s a simple example that gets all the recipients of a message:</source>
          <target state="translated">此方法返回由 &lt;code&gt;parseaddr()&lt;/code&gt; 返回的形式的2元组列表。&lt;em&gt;fieldvalues&lt;/em&gt;是由&lt;a href=&quot;email.compat32-message#email.message.Message.get_all&quot;&gt; &lt;code&gt;Message.get_all&lt;/code&gt; &lt;/a&gt;返回的标头字段值的序列。这是一个简单的示例，可获取邮件的所有收件人：</target>
        </trans-unit>
        <trans-unit id="73e29a95cda80e7acb29a92567265c1de92af438" translate="yes" xml:space="preserve">
          <source>This method returns a list of column names. Immediately after a query, it is the first member of each tuple in &lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt;&lt;code&gt;Cursor.description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法返回列名列表。查询之后，它立即成为&lt;a href=&quot;#sqlite3.Cursor.description&quot;&gt; &lt;code&gt;Cursor.description&lt;/code&gt; &lt;/a&gt;中每个元组的第一个成员。</target>
        </trans-unit>
        <trans-unit id="55bc27e05f930af9d7a7a49446bfdd2fb906a983" translate="yes" xml:space="preserve">
          <source>This method returns a list of strings, one for each (non-system) method supported by the XML-RPC server.</source>
          <target state="translated">这个方法返回一个字符串列表,每个XML-RPC服务器支持的(非系统)方法都有一个。</target>
        </trans-unit>
        <trans-unit id="bae21ab56be3b0ade0440fb014f62c8a8187470a" translate="yes" xml:space="preserve">
          <source>This method returns an instance of StatsProfile, which contains a mapping of function names to instances of FunctionProfile. Each FunctionProfile instance holds information related to the function&amp;rsquo;s profile such as how long the function took to run, how many times it was called, etc&amp;hellip;</source>
          <target state="translated">此方法返回StatsProfile实例，其中包含函数名称到FunctionProfile实例的映射。每个FunctionProfile实例都保存与功能配置文件相关的信息，例如功能运行了多长时间，被调用了多少次，等等&amp;hellip;&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="8b8fb986af78dbe250cc8c1951c634409b1ff5a1" translate="yes" xml:space="preserve">
          <source>This method returns the instance of &lt;code&gt;TestResult&lt;/code&gt; used by &lt;a href=&quot;#unittest.TextTestRunner.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt;. It is not intended to be called directly, but can be overridden in subclasses to provide a custom &lt;code&gt;TestResult&lt;/code&gt;.</source>
          <target state="translated">此方法返回&lt;a href=&quot;#unittest.TextTestRunner.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;使用的 &lt;code&gt;TestResult&lt;/code&gt; 实例。它不打算直接调用，但是可以在子类中重写以提供自定义 &lt;code&gt;TestResult&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="708531771914c1b22ac7adc98a0e783146aec79d" translate="yes" xml:space="preserve">
          <source>This method rolls back any changes to the database since the last call to &lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt;&lt;code&gt;commit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法回滚自上次调用&lt;a href=&quot;#sqlite3.Connection.commit&quot;&gt; &lt;code&gt;commit()&lt;/code&gt; &lt;/a&gt;以来对数据库的所有更改。</target>
        </trans-unit>
        <trans-unit id="14b5b4167215d3c5124bc8670df033b6ee05ce7b" translate="yes" xml:space="preserve">
          <source>This method serves a similar purpose as &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt;, but supports only positional arguments. It must return a tuple of arguments &lt;code&gt;args&lt;/code&gt; which will be passed to the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling.</source>
          <target state="translated">此方法的作用类似于&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;，但仅支持位置参数。它必须返回参数 &lt;code&gt;args&lt;/code&gt; 的元组，该参数将在&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;传递给__new __（）方法。</target>
        </trans-unit>
        <trans-unit id="bb9f7630faa4ba584cc2fcc2a9528f2d918a8feb" translate="yes" xml:space="preserve">
          <source>This method serves a similar purpose as &lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt;&lt;code&gt;__getnewargs_ex__()&lt;/code&gt;&lt;/a&gt;, but supports only positional arguments. It must return a tuple of arguments &lt;code&gt;args&lt;/code&gt; which will be passed to the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; method upon unpickling.</source>
          <target state="translated">此方法的作用类似于&lt;a href=&quot;#object.__getnewargs_ex__&quot;&gt; &lt;code&gt;__getnewargs_ex__()&lt;/code&gt; &lt;/a&gt;，但仅支持位置参数。它必须返回参数 &lt;code&gt;args&lt;/code&gt; 的元组，该参数将在&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;传递给__new __（）方法。</target>
        </trans-unit>
        <trans-unit id="1ca39179fbf1b58e9b5132d398a4ae61933bd01d" translate="yes" xml:space="preserve">
          <source>This method serves the &lt;code&gt;'HEAD'&lt;/code&gt; request type: it sends the headers it would send for the equivalent &lt;code&gt;GET&lt;/code&gt; request. See the &lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt;&lt;code&gt;do_GET()&lt;/code&gt;&lt;/a&gt; method for a more complete explanation of the possible headers.</source>
          <target state="translated">此方法服务于 &lt;code&gt;'HEAD'&lt;/code&gt; 请求类型：它发送将为等效的 &lt;code&gt;GET&lt;/code&gt; 请求发送的标头。有关可能的标头的更完整说明，请参见&lt;a href=&quot;#http.server.SimpleHTTPRequestHandler.do_GET&quot;&gt; &lt;code&gt;do_GET()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="f7dbd08df48e0a9432fc27f2d1dc359d154264c6" translate="yes" xml:space="preserve">
          <source>This method serves the &lt;code&gt;'POST'&lt;/code&gt; request type, only allowed for CGI scripts. Error 501, &amp;ldquo;Can only POST to CGI scripts&amp;rdquo;, is output when trying to POST to a non-CGI url.</source>
          <target state="translated">此方法提供 &lt;code&gt;'POST'&lt;/code&gt; 请求类型，仅CGI脚本允许。尝试POST到非CGI URL时，输出错误501&amp;ldquo;只能POST到CGI脚本&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d8c66f9b775088a9351abd971856f1005e64496a" translate="yes" xml:space="preserve">
          <source>This method sets &lt;em&gt;tb&lt;/em&gt; as the new traceback for the exception and returns the exception object. It is usually used in exception handling code like this:</source>
          <target state="translated">此方法将&lt;em&gt;tb&lt;/em&gt;设置为该异常的新回溯并返回异常对象。它通常用于如下的异常处理代码中：</target>
        </trans-unit>
        <trans-unit id="39b545ecb6df97965a21adfe6fe3076dc16d39bf" translate="yes" xml:space="preserve">
          <source>This method should be called from &lt;a href=&quot;functions#format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt; by a formatter which wants to make use of a formatted time. This method can be overridden in formatters to provide for any specific requirement, but the basic behavior is as follows: if &lt;em&gt;datefmt&lt;/em&gt; (a string) is specified, it is used with &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; to format the creation time of the record. Otherwise, the format &amp;lsquo;%Y-%m-%d %H:%M:%S,uuu&amp;rsquo; is used, where the uuu part is a millisecond value and the other letters are as per the &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; documentation. An example time in this format is &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt;. The resulting string is returned.</source>
          <target state="translated">该方法应由想要利用格式化时间的格式化程序从&lt;a href=&quot;functions#format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;调用。可以在格式化程序中重写此方法以提供任何特定要求，但是基本行为如下：如果指定了&lt;em&gt;datefmt&lt;/em&gt;（字符串），则它与&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;一起使用以格式化记录的创建时间。否则，使用格式'％Y-％m-％d％H：％M：％S，uuu'，其中uuu部分是毫秒值，其他字母按照&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;文档。此格式的示例时间是 &lt;code&gt;2003-01-23 00:29:50,411&lt;/code&gt; 。返回结果字符串。</target>
        </trans-unit>
        <trans-unit id="60a2e03ebc40f5256939419e575a070656ab940e" translate="yes" xml:space="preserve">
          <source>This method should be called from handlers when an exception is encountered during an &lt;a href=&quot;#logging.Handler.emit&quot;&gt;&lt;code&gt;emit()&lt;/code&gt;&lt;/a&gt; call. If the module-level attribute &lt;code&gt;raiseExceptions&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, exceptions get silently ignored. This is what is mostly wanted for a logging system - most users will not care about errors in the logging system, they are more interested in application errors. You could, however, replace this with a custom handler if you wish. The specified record is the one which was being processed when the exception occurred. (The default value of &lt;code&gt;raiseExceptions&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, as that is more useful during development).</source>
          <target state="translated">当在&lt;a href=&quot;#logging.Handler.emit&quot;&gt; &lt;code&gt;emit()&lt;/code&gt; &lt;/a&gt;调用期间遇到异常时，应从处理程序中调用此方法。如果模块级别的属性 &lt;code&gt;raiseExceptions&lt;/code&gt; 为 &lt;code&gt;False&lt;/code&gt; ，则异常将被忽略。这是日志系统最需要的-大多数用户不会关心日志系统中的错误，他们对应用程序错误更感兴趣。但是，您可以根据需要将其替换为自定义处理程序。指定的记录是发生异常时正在处理的记录。（默认值 &lt;code&gt;raiseExceptions&lt;/code&gt; 是 &lt;code&gt;True&lt;/code&gt; ，因为在开发过程中是比较有用）。</target>
        </trans-unit>
        <trans-unit id="a9d5481f5b1f23faa3969748474f218efddfdcb0" translate="yes" xml:space="preserve">
          <source>This method should never return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">此方法永远不应返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51cd700cee747b5ceb2075f98fd1f7dedbab9ae0" translate="yes" xml:space="preserve">
          <source>This method should not be overloaded in subclassed event loops. For custom exception handling, use the &lt;a href=&quot;#asyncio.loop.set_exception_handler&quot;&gt;&lt;code&gt;set_exception_handler()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法不应在子类事件循环中重载。对于自定义异常处理，请使用&lt;a href=&quot;#asyncio.loop.set_exception_handler&quot;&gt; &lt;code&gt;set_exception_handler()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="3eda0b07f66336a00c76b0b8ce3859da0cb22cfe" translate="yes" xml:space="preserve">
          <source>This method should not be used for generating security tokens. Use &lt;a href=&quot;secrets#secrets.token_bytes&quot;&gt;&lt;code&gt;secrets.token_bytes()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">此方法不应用于生成安全令牌。请改用&lt;a href=&quot;secrets#secrets.token_bytes&quot;&gt; &lt;code&gt;secrets.token_bytes()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a065c99a954c6fdd1c3f8befb55be10a4fe3a9e9" translate="yes" xml:space="preserve">
          <source>This method should only be called by &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; implementations before executing the work associated with the &lt;a href=&quot;#concurrent.futures.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; and by unit tests.</source>
          <target state="translated">仅在执行与&lt;a href=&quot;#concurrent.futures.Future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;相关的工作之前，由&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;实现调用此方法，并由单元测试调用。</target>
        </trans-unit>
        <trans-unit id="86c36ea786adb5a31a67ae740b8c3850457fbdb7" translate="yes" xml:space="preserve">
          <source>This method should only be used by &lt;a href=&quot;#concurrent.futures.Executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; implementations and unit tests.</source>
          <target state="translated">此方法仅应由&lt;a href=&quot;#concurrent.futures.Executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;实现和单元测试使用。</target>
        </trans-unit>
        <trans-unit id="99aa205c4cdbbfefed6ade284534cab4156444b9" translate="yes" xml:space="preserve">
          <source>This method should only be used in low-level callback-based code.</source>
          <target state="translated">这个方法只能用在基于回调的低级代码中。</target>
        </trans-unit>
        <trans-unit id="1c1813fe7424980ca70bdf5ec66a9e369a420208" translate="yes" xml:space="preserve">
          <source>This method should return &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt; or &lt;code&gt;NotImplemented&lt;/code&gt;. If it returns &lt;code&gt;True&lt;/code&gt;, the &lt;em&gt;subclass&lt;/em&gt; is considered a subclass of this ABC. If it returns &lt;code&gt;False&lt;/code&gt;, the &lt;em&gt;subclass&lt;/em&gt; is not considered a subclass of this ABC, even if it would normally be one. If it returns &lt;code&gt;NotImplemented&lt;/code&gt;, the subclass check is continued with the usual mechanism.</source>
          <target state="translated">此方法应返回 &lt;code&gt;True&lt;/code&gt; ， &lt;code&gt;False&lt;/code&gt; 或 &lt;code&gt;NotImplemented&lt;/code&gt; 。如果返回 &lt;code&gt;True&lt;/code&gt; ，则该&lt;em&gt;子类&lt;/em&gt;被视为此ABC的子类。如果返回 &lt;code&gt;False&lt;/code&gt; ，则即使该子类通常是一个&lt;em&gt;子类，&lt;/em&gt;也不会将该&lt;em&gt;子类&lt;/em&gt;视为该ABC的子类。如果返回 &lt;code&gt;NotImplemented&lt;/code&gt; ，则使用常规机制继续子类检查。</target>
        </trans-unit>
        <trans-unit id="599855f85a3a01b3230b2de2277a7a28ed0b8262" translate="yes" xml:space="preserve">
          <source>This method simplifies subclassing of &lt;a href=&quot;#inspect.Signature&quot;&gt;&lt;code&gt;Signature&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">此方法简化了&lt;a href=&quot;#inspect.Signature&quot;&gt; &lt;code&gt;Signature&lt;/code&gt; 的&lt;/a&gt;子类化：</target>
        </trans-unit>
        <trans-unit id="7e52a16096b5729df1d34566cf03f37c1f7b86c3" translate="yes" xml:space="preserve">
          <source>This method sorts the list in place, using only &lt;code&gt;&amp;lt;&lt;/code&gt; comparisons between items. Exceptions are not suppressed - if any comparison operations fail, the entire sort operation will fail (and the list will likely be left in a partially modified state).</source>
          <target state="translated">此方法仅使用 &lt;code&gt;&amp;lt;&lt;/code&gt; 项目之间的比较来对列表进行排序。异常不会被抑制-如果任何比较操作失败，则整个排序操作都会失败（并且列表很可能会处于部分修改的状态）。</target>
        </trans-unit>
        <trans-unit id="74613f7f1f1bca337b67bbd492f7c5eb7f319eab" translate="yes" xml:space="preserve">
          <source>This method splits on the following line boundaries. In particular, the boundaries are a superset of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt;.</source>
          <target state="translated">此方法在以下行边界上分割。特别是，边界是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-universal-newlines&quot;&gt;通用换行符&lt;/a&gt;的超集。</target>
        </trans-unit>
        <trans-unit id="cc412fbe85cc5444d1336061a20d0efe52aa3575" translate="yes" xml:space="preserve">
          <source>This method splits on the following line boundaries. In particular, the boundaries are a superset of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;universal newlines&lt;/a&gt;.</source>
          <target state="translated">此方法在以下行边界上分割。特别是，边界是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-universal-newlines&quot;&gt;通用换行符&lt;/a&gt;的超集。</target>
        </trans-unit>
        <trans-unit id="58a68da18b44c96bba6604dc7f18a0823ef4fdfd" translate="yes" xml:space="preserve">
          <source>This method supports hostname checking via &lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt;&lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;Server Name Indication&lt;/em&gt; (see &lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt;&lt;code&gt;ssl.HAS_SNI&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">此方法支持通过&lt;a href=&quot;ssl#ssl.SSLContext.check_hostname&quot;&gt; &lt;code&gt;ssl.SSLContext.check_hostname&lt;/code&gt; &lt;/a&gt;和&lt;em&gt;服务器名称指示&lt;/em&gt;（请参阅&lt;a href=&quot;ssl#ssl.HAS_SNI&quot;&gt; &lt;code&gt;ssl.HAS_SNI&lt;/code&gt; &lt;/a&gt;）进行主机名检查。</target>
        </trans-unit>
        <trans-unit id="cd8fdaf763e9fa8074cf2ca63bc90b4b3cda9085" translate="yes" xml:space="preserve">
          <source>This method takes a single argument &lt;em&gt;arg_line&lt;/em&gt; which is a string read from the argument file. It returns a list of arguments parsed from this string. The method is called once per line read from the argument file, in order.</source>
          <target state="translated">此方法采用单个参数&lt;em&gt;arg_line&lt;/em&gt;，该参数是从参数文件读取的字符串。它返回从该字符串解析的参数列表。从参数文件读取的每一行依次调用该方法一次。</target>
        </trans-unit>
        <trans-unit id="5c760fe49109a77818baccf2f47804b109f3c544" translate="yes" xml:space="preserve">
          <source>This method takes one parameter, the name of a method implemented by the XML-RPC server. It returns a documentation string describing the use of that method. If no such string is available, an empty string is returned. The documentation string may contain HTML markup.</source>
          <target state="translated">这个方法需要一个参数,即XML-RPC服务器实现的一个方法的名称。它返回一个描述该方法用途的文档字符串。如果没有这个字符串,则返回一个空字符串。文档字符串可能包含HTML标记。</target>
        </trans-unit>
        <trans-unit id="f5893c1e14198034d5092ae81f02a960d68bc8da" translate="yes" xml:space="preserve">
          <source>This method takes one parameter, the name of a method implemented by the XML-RPC server. It returns an array of possible signatures for this method. A signature is an array of types. The first of these types is the return type of the method, the rest are parameters.</source>
          <target state="translated">这个方法需要一个参数,即XML-RPC服务器实现的一个方法的名称。它返回这个方法的可能签名数组。一个签名是一个类型的数组,其中第一个类型是方法的返回类型,其余的是参数。这些类型中的第一个是方法的返回类型,其余的是参数。</target>
        </trans-unit>
        <trans-unit id="818723afff8c189eecbb4fe7facf10c8cc63fb17" translate="yes" xml:space="preserve">
          <source>This method terminates the program, exiting with the specified &lt;em&gt;status&lt;/em&gt; and, if given, it prints a &lt;em&gt;message&lt;/em&gt; before that. The user can override this method to handle these steps differently:</source>
          <target state="translated">此方法将终止程序，并以指定的&lt;em&gt;状态&lt;/em&gt;退出，并在给出&lt;em&gt;状态&lt;/em&gt;之前显示一条&lt;em&gt;消息&lt;/em&gt;。用户可以重写此方法以不同方式处理这些步骤：</target>
        </trans-unit>
        <trans-unit id="de6c72c35c2834f0369b1a4c798dc2bca2a384c4" translate="yes" xml:space="preserve">
          <source>This method transforms option names on every read, get, or set operation. The default converts the name to lowercase. This also means that when a configuration file gets written, all keys will be lowercase. Override this method if that&amp;rsquo;s unsuitable. For example:</source>
          <target state="translated">此方法在每次读取，获取或设置操作时都会转换选项名称。默认将名称转换为小写。这也意味着当写入配置文件时，所有键都将小写。如果不合适，请重写此方法。例如：</target>
        </trans-unit>
        <trans-unit id="1974694405c4c9389267ffd50b26d56c3503926c" translate="yes" xml:space="preserve">
          <source>This method waits until the lock is &lt;em&gt;unlocked&lt;/em&gt;, sets it to &lt;em&gt;locked&lt;/em&gt; and returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">此方法将等待，直到锁被&lt;em&gt;解锁&lt;/em&gt;，将其设置为&lt;em&gt;锁&lt;/em&gt;并返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65f3add9f9cd63e05cc5f580948a304e6648c4a7" translate="yes" xml:space="preserve">
          <source>This method waits until the underlying lock is &lt;em&gt;unlocked&lt;/em&gt;, sets it to &lt;em&gt;locked&lt;/em&gt; and returns &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">该方法等待直到底层锁被&lt;em&gt;解锁&lt;/em&gt;，将其设置为&lt;em&gt;锁定&lt;/em&gt;并返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="454a025121549fe2bea2c118dd6191bd13eb086c" translate="yes" xml:space="preserve">
          <source>This method wakes up at most &lt;em&gt;n&lt;/em&gt; of the threads waiting for the condition variable; it is a no-op if no threads are waiting.</source>
          <target state="translated">此方法最多唤醒&lt;em&gt;n个&lt;/em&gt;等待条件变量的线程；如果没有线程正在等待，则为空操作。</target>
        </trans-unit>
        <trans-unit id="9c2a082dfc19e539c561f64a6a5f07e702f02adc" translate="yes" xml:space="preserve">
          <source>This method will be called before any protocol-specific open method.</source>
          <target state="translated">该方法将在任何特定协议的开放方法之前被调用。</target>
        </trans-unit>
        <trans-unit id="6efbbee23467f399d8225dc8abd523590b461d19" translate="yes" xml:space="preserve">
          <source>This method will parse and dispatch the request to the appropriate &lt;code&gt;do_*()&lt;/code&gt; method. You should never need to override it.</source>
          <target state="translated">此方法将解析请求并将其分派到适当的 &lt;code&gt;do_*()&lt;/code&gt; 方法。您永远不需要覆盖它。</target>
        </trans-unit>
        <trans-unit id="cce13a8e7f0704d679b6f2119c6dcb9637067db5" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#ssl.HAS_ALPN&quot;&gt;&lt;code&gt;HAS_ALPN&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;#ssl.HAS_ALPN&quot;&gt; &lt;code&gt;HAS_ALPN&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ,则此方法将引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f46ac96b947124dc48db380e519a659d718834f5" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if &lt;a href=&quot;#ssl.HAS_NPN&quot;&gt;&lt;code&gt;HAS_NPN&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;#ssl.HAS_NPN&quot;&gt; &lt;code&gt;HAS_NPN&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; ,则此方法将引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2af3b76ebd9cb9d935d4351697b99510998fe707" translate="yes" xml:space="preserve">
          <source>This method will raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; if the OpenSSL library had OPENSSL_NO_TLSEXT defined when it was built.</source>
          <target state="translated">如果OpenSSL库在构建时已定义OPENSSL_NO_TLSEXT，则此方法将引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d4e07593c623f5c1c4618b8ae83e426642a79bb4" translate="yes" xml:space="preserve">
          <source>This method will raise a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; if called more than once on the same thread object.</source>
          <target state="translated">如果在同一线程对象上多次调用此方法，则会引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cae724061ea4a293baa1b5febb7652b6d04b5e39" translate="yes" xml:space="preserve">
          <source>This method will return normally if the mail is accepted for at least one recipient. Otherwise it will raise an exception. That is, if this method does not raise an exception, then someone should get your mail. If this method does not raise an exception, it returns a dictionary, with one entry for each recipient that was refused. Each entry contains a tuple of the SMTP error code and the accompanying error message sent by the server.</source>
          <target state="translated">如果至少有一个收件人的邮件被接受,这个方法将正常返回。否则它将引发一个异常。也就是说,如果这个方法没有引发异常,那么应该有人会收到你的邮件。如果这个方法没有引发异常,它将返回一个字典,每个被拒绝的收件人都有一个条目。每个条目都包含一个SMTP错误代码的元组和服务器发送的错误信息。</target>
        </trans-unit>
        <trans-unit id="74d1b69630acadad9b7316b4df18afcaf8f4226d" translate="yes" xml:space="preserve">
          <source>This method will return when the &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt; method returns a true value. The &lt;em&gt;stop&lt;/em&gt; argument to &lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt;&lt;code&gt;postcmd()&lt;/code&gt;&lt;/a&gt; is the return value from the command&amp;rsquo;s corresponding &lt;code&gt;do_*()&lt;/code&gt; method.</source>
          <target state="translated">当&lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; &lt;/a&gt;方法返回true值时，此方法将返回。&lt;a href=&quot;#cmd.Cmd.postcmd&quot;&gt; &lt;code&gt;postcmd()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;stop&lt;/em&gt;参数是命令的相应 &lt;code&gt;do_*()&lt;/code&gt; 方法的返回值。</target>
        </trans-unit>
        <trans-unit id="69b9279828888f5b4b6bbb18c43609074bb5f6ee" translate="yes" xml:space="preserve">
          <source>This method will try to establish the connection in the background. When successful, it returns a &lt;code&gt;(transport, protocol)&lt;/code&gt; pair.</source>
          <target state="translated">此方法将尝试在后台建立连接。成功后，它将返回 &lt;code&gt;(transport, protocol)&lt;/code&gt; 对。</target>
        </trans-unit>
        <trans-unit id="2662a58cbe744756d2713c9a530353fadec108dd" translate="yes" xml:space="preserve">
          <source>This method works regardless of the warning filters in place when it is called.</source>
          <target state="translated">无论调用时是否有警告过滤器,此方法都能发挥作用。</target>
        </trans-unit>
        <trans-unit id="7b56ad7816b033a457026b1ed0aa528822772c71" translate="yes" xml:space="preserve">
          <source>This method&amp;rsquo;s behavior is the same as &lt;a href=&quot;#asyncio.loop.call_later&quot;&gt;&lt;code&gt;call_later()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该方法的行为与&lt;a href=&quot;#asyncio.loop.call_later&quot;&gt; &lt;code&gt;call_later()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="e306011db50281eb5bb9fe7c8f6f67913bf9062d" translate="yes" xml:space="preserve">
          <source>This method, and others that indirectly call this method, raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.cdata&lt;/code&gt; with argument &lt;code&gt;address&lt;/code&gt;.</source>
          <target state="translated">此方法以及其他间接调用此方法的方法，将引发带有参数 &lt;code&gt;address&lt;/code&gt; 的&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.cdata&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11a5f76d1a1de12dfdacfbc20e9a68e9c9a3edcf" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;req&lt;/em&gt; will be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object. &lt;em&gt;response&lt;/em&gt; will be an object implementing the same interface as the return value of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;. The return value should implement the same interface as the return value of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果定义了此方法，则由父&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; 调用&lt;/a&gt;。&lt;em&gt;req&lt;/em&gt;将是一个&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;对象。&lt;em&gt;response&lt;/em&gt;将是一个对象，该对象实现与&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;的返回值相同的接口。返回值应实现与&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;的返回值相同的接口。</target>
        </trans-unit>
        <trans-unit id="c12714c6416b6db1ab32f9c47808d5ed1c2f903a" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;req&lt;/em&gt; will be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object. The return value should be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">如果定义了此方法，则由父&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; 调用&lt;/a&gt;。&lt;em&gt;req&lt;/em&gt;将是一个&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;对象。返回值应该是一个&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="c4c637f6f9eb7d72ffa0912f73fd5eb7c803c82b" translate="yes" xml:space="preserve">
          <source>This method, if defined, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. Return values should be the same as for &lt;code&gt;default_open()&lt;/code&gt;.</source>
          <target state="translated">如果定义了此方法，则由父&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; 调用&lt;/a&gt;。返回值应与 &lt;code&gt;default_open()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="91c65ff111e1b6434d9b1648e2e33858b7b6ac47" translate="yes" xml:space="preserve">
          <source>This method, if implemented, will be called by the &lt;a href=&quot;#urllib.request.BaseHandler.parent&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. Return values should be the same as for &lt;a href=&quot;#urllib.request.BaseHandler.default_open&quot;&gt;&lt;code&gt;default_open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果实现了此方法，则由&lt;a href=&quot;#urllib.request.BaseHandler.parent&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; 调用&lt;/a&gt;。返回值应与&lt;a href=&quot;#urllib.request.BaseHandler.default_open&quot;&gt; &lt;code&gt;default_open()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="c5568e01d897e76cde8a8512a2cf117dff860535" translate="yes" xml:space="preserve">
          <source>This method, if implemented, will be called by the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;. It should return a file-like object as described in the return value of the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;None&lt;/code&gt;. It should raise &lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt;&lt;code&gt;URLError&lt;/code&gt;&lt;/a&gt;, unless a truly exceptional thing happens (for example, &lt;a href=&quot;exceptions#MemoryError&quot;&gt;&lt;code&gt;MemoryError&lt;/code&gt;&lt;/a&gt; should not be mapped to &lt;code&gt;URLError&lt;/code&gt;).</source>
          <target state="translated">如果实现了此方法，则由父&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; 调用&lt;/a&gt;。作为返回值描述了它应该返回一个类文件对象&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;，或 &lt;code&gt;None&lt;/code&gt; 。它应该引发&lt;a href=&quot;urllib.error#urllib.error.URLError&quot;&gt; &lt;code&gt;URLError&lt;/code&gt; &lt;/a&gt;，除非发生真正异常的事情（例如，&lt;a href=&quot;exceptions#MemoryError&quot;&gt; &lt;code&gt;MemoryError&lt;/code&gt; &lt;/a&gt;不应映射到 &lt;code&gt;URLError&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1cadef953272decef8c8b33d266fff351c8a60bd" translate="yes" xml:space="preserve">
          <source>This mimics the &lt;code&gt;Traceback (most recent call last):&lt;/code&gt; which is used when displaying exception frames.</source>
          <target state="translated">这模仿了 &lt;code&gt;Traceback (most recent call last):&lt;/code&gt; 在显示异常帧时使用。</target>
        </trans-unit>
        <trans-unit id="f27374d3cea4c4b16cf991cf67775d4e667a191c" translate="yes" xml:space="preserve">
          <source>This module &lt;em&gt;does not&lt;/em&gt; access the internet. All of the components needed to bootstrap &lt;code&gt;pip&lt;/code&gt; are included as internal parts of the package.</source>
          <target state="translated">该模块&lt;em&gt;无法&lt;/em&gt;访问互联网。引导 &lt;code&gt;pip&lt;/code&gt; 所需的所有组件都包含在包装的内部。</target>
        </trans-unit>
        <trans-unit id="c0e744d6e6221a3e7f181931436252486b1aba6e" translate="yes" xml:space="preserve">
          <source>This module adds the ability to import Python modules (&lt;code&gt;*.py&lt;/code&gt;, &lt;code&gt;*.pyc&lt;/code&gt;) and packages from ZIP-format archives. It is usually not needed to use the &lt;a href=&quot;#module-zipimport&quot;&gt;&lt;code&gt;zipimport&lt;/code&gt;&lt;/a&gt; module explicitly; it is automatically used by the built-in &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; mechanism for &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; items that are paths to ZIP archives.</source>
          <target state="translated">该模块增加了从ZIP格式档案中导入Python模块（ &lt;code&gt;*.py&lt;/code&gt; ， &lt;code&gt;*.pyc&lt;/code&gt; ）和软件包的功能。通常不需要显式使用&lt;a href=&quot;#module-zipimport&quot;&gt; &lt;code&gt;zipimport&lt;/code&gt; &lt;/a&gt;模块；内置&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;机制会自动将它用作zip存档路径的&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;项目。</target>
        </trans-unit>
        <trans-unit id="3d0045b1a71aeae376eb9db26e5ff98175be2978" translate="yes" xml:space="preserve">
          <source>This module adds the ability to import Python modules (&lt;code&gt;*.py&lt;/code&gt;, &lt;code&gt;*.pyc&lt;/code&gt;) and packages from ZIP-format archives. It is usually not needed to use the &lt;a href=&quot;#module-zipimport&quot;&gt;&lt;code&gt;zipimport&lt;/code&gt;&lt;/a&gt; module explicitly; it is automatically used by the built-in &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; mechanism for &lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; items that are paths to ZIP archives.</source>
          <target state="translated">该模块增加了从ZIP格式档案中导入Python模块（ &lt;code&gt;*.py&lt;/code&gt; ， &lt;code&gt;*.pyc&lt;/code&gt; ）和软件包的功能。通常不需要显式使用&lt;a href=&quot;#module-zipimport&quot;&gt; &lt;code&gt;zipimport&lt;/code&gt; &lt;/a&gt;模块；内置&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;机制会自动将它用作zip存档路径的&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;项。</target>
        </trans-unit>
        <trans-unit id="f143dd25b8da97a54f728f8c06662f767545245d" translate="yes" xml:space="preserve">
          <source>This module allows a Python program to determine if a string is a &lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;keyword&lt;/a&gt;.</source>
          <target state="translated">该模块允许Python程序确定字符串是否为&lt;a href=&quot;https://docs.python.org/3.9/reference/lexical_analysis.html#keywords&quot;&gt;关键字&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b8b243423ae5bd9c91dd1e9a526289e44d74151" translate="yes" xml:space="preserve">
          <source>This module allows a Python program to determine if a string is a keyword.</source>
          <target state="translated">这个模块允许Python程序确定一个字符串是否是关键字。</target>
        </trans-unit>
        <trans-unit id="7a344df928c4cfb82fbfa17dc83438dd90f3e913" translate="yes" xml:space="preserve">
          <source>This module allows high-level and efficient I/O multiplexing, built upon the &lt;a href=&quot;select#module-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; module primitives. Users are encouraged to use this module instead, unless they want precise control over the OS-level primitives used.</source>
          <target state="translated">该模块允许在&lt;a href=&quot;select#module-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;模块原语的基础上进行高级且高效的I / O复用。鼓励用户改用此模块，除非他们希望对使用的OS级原语进行精确控制。</target>
        </trans-unit>
        <trans-unit id="2497fcaaad8ea0358d7a8a416fbf748a8e8d4ce1" translate="yes" xml:space="preserve">
          <source>This module allows you to access the OSS (Open Sound System) audio interface. OSS is available for a wide range of open-source and commercial Unices, and is the standard audio interface for Linux and recent versions of FreeBSD.</source>
          <target state="translated">这个模块允许您访问 OSS (Open Sound System)音频接口。OSS可用于广泛的开源和商业Unices,是Linux和最新版本FreeBSD的标准音频接口。</target>
        </trans-unit>
        <trans-unit id="3f201a3a0b0cb503f8a57a3dc19445c2c4016892" translate="yes" xml:space="preserve">
          <source>This module allows you to output calendars like the Unix &lt;strong&gt;cal&lt;/strong&gt; program, and provides additional useful functions related to the calendar. By default, these calendars have Monday as the first day of the week, and Sunday as the last (the European convention). Use &lt;a href=&quot;#calendar.setfirstweekday&quot;&gt;&lt;code&gt;setfirstweekday()&lt;/code&gt;&lt;/a&gt; to set the first day of the week to Sunday (6) or to any other weekday. Parameters that specify dates are given as integers. For related functionality, see also the &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">该模块允许您输出日历（如Unix &lt;strong&gt;cal&lt;/strong&gt;程序），并提供与日历相关的其他有用功能。默认情况下，这些日历将星期一作为一周的第一天，将星期日作为最后一天（欧洲惯例）。使用&lt;a href=&quot;#calendar.setfirstweekday&quot;&gt; &lt;code&gt;setfirstweekday()&lt;/code&gt; &lt;/a&gt;将一周的第一天设置为周日（6）或任何其他工作日。指定日期的参数以整数形式给出。有关相关功能，另请参见&lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;和时间模块。</target>
        </trans-unit>
        <trans-unit id="debb877f25fbd139c21cf06dbc17a54349a6899d" translate="yes" xml:space="preserve">
          <source>This module also defines all the constants needed to work with the functions provided here; these have the same name as their counterparts in C. Please refer to your system documentation for more information on using these terminal control interfaces.</source>
          <target state="translated">本模块还定义了所有需要使用这里提供的函数的常量;这些常量的名称与C语言中的相应常量相同,请参考您的系统文档以获得更多关于使用这些终端控制接口的信息。</target>
        </trans-unit>
        <trans-unit id="5343f12ad5e1686e3ae53b2b2900840cf269d422" translate="yes" xml:space="preserve">
          <source>This module also defines the following constant:</source>
          <target state="translated">本模块还定义了以下常数:</target>
        </trans-unit>
        <trans-unit id="b40ece587755cd89be338849c6922046774089a9" translate="yes" xml:space="preserve">
          <source>This module also provides one additional data object:</source>
          <target state="translated">本模块还提供一个额外的数据对象。</target>
        </trans-unit>
        <trans-unit id="23b455a7f66c43c727ec2c3899d0f41037a1b5dd" translate="yes" xml:space="preserve">
          <source>This module also provides the following helper function:</source>
          <target state="translated">本模块还提供以下辅助功能。</target>
        </trans-unit>
        <trans-unit id="453b9e5ac31c8143201074542d26931d4cb7ac6a" translate="yes" xml:space="preserve">
          <source>This module also provides the following legacy functions from the 2.x &lt;code&gt;commands&lt;/code&gt; module. These operations implicitly invoke the system shell and none of the guarantees described above regarding security and exception handling consistency are valid for these functions.</source>
          <target state="translated">该模块还从2.x &lt;code&gt;commands&lt;/code&gt; 模块提供以下旧功能。这些操作隐式调用系统外壳，并且上述关于安全性和异常处理一致性的保证对于这些功能均无效。</target>
        </trans-unit>
        <trans-unit id="67b52231769e79c56d292bad90dd4f9002d23b03" translate="yes" xml:space="preserve">
          <source>This module builds on the &lt;a href=&quot;asyncore#module-asyncore&quot;&gt;&lt;code&gt;asyncore&lt;/code&gt;&lt;/a&gt; infrastructure, simplifying asynchronous clients and servers and making it easier to handle protocols whose elements are terminated by arbitrary strings, or are of variable length. &lt;a href=&quot;#module-asynchat&quot;&gt;&lt;code&gt;asynchat&lt;/code&gt;&lt;/a&gt; defines the abstract class &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; that you subclass, providing implementations of the &lt;code&gt;collect_incoming_data()&lt;/code&gt; and &lt;code&gt;found_terminator()&lt;/code&gt; methods. It uses the same asynchronous loop as &lt;a href=&quot;asyncore#module-asyncore&quot;&gt;&lt;code&gt;asyncore&lt;/code&gt;&lt;/a&gt;, and the two types of channel, &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt;, can freely be mixed in the channel map. Typically an &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt; server channel generates new &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt; channel objects as it receives incoming connection requests.</source>
          <target state="translated">该模块建立在&lt;a href=&quot;asyncore#module-asyncore&quot;&gt; &lt;code&gt;asyncore&lt;/code&gt; &lt;/a&gt;基础结构的基础上，简化了异步客户端和服务器，并使处理元素以任意字符串终止或长度可变的协议变得更加容易。&lt;a href=&quot;#module-asynchat&quot;&gt; &lt;code&gt;asynchat&lt;/code&gt; &lt;/a&gt;定义了子类的抽象类&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;，提供了 &lt;code&gt;collect_incoming_data()&lt;/code&gt; 和 &lt;code&gt;found_terminator()&lt;/code&gt; 方法的实现。它使用与&lt;a href=&quot;asyncore#module-asyncore&quot;&gt; &lt;code&gt;asyncore&lt;/code&gt; &lt;/a&gt;相同的异步循环，并且两种通道类型&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; &lt;/a&gt;可以在通道图中自由混合。通常，&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;服务器通道会生成新的&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;asynchat.async_chat&lt;/code&gt; &lt;/a&gt;通道对象，因为它接收传入的连接请求。</target>
        </trans-unit>
        <trans-unit id="98f43e7da0a9f23b86507c38867da0294f836744" translate="yes" xml:space="preserve">
          <source>This module can be used with the &amp;ldquo;classic&amp;rdquo; ndbm interface or the GNU GDBM compatibility interface. On Unix, the &lt;strong&gt;configure&lt;/strong&gt; script will attempt to locate the appropriate header file to simplify building this module.</source>
          <target state="translated">该模块可与&amp;ldquo;经典&amp;rdquo; ndbm接口或GNU GDBM兼容性接口一起使用。在Unix上，&lt;strong&gt;configure&lt;/strong&gt;脚本将尝试查找适当的头文件以简化该模块的构建。</target>
        </trans-unit>
        <trans-unit id="d879b78f431d58b588b47163f45ee538b41d3e4e" translate="yes" xml:space="preserve">
          <source>This module can work as a script (using &lt;strong&gt;python -m compileall&lt;/strong&gt;) to compile Python sources.</source>
          <target state="translated">该模块可以作为脚本（使用&lt;strong&gt;python -m compileall&lt;/strong&gt;）来编译Python源代码。</target>
        </trans-unit>
        <trans-unit id="f19e9fa6736be7e193744521cb04edacae210533" translate="yes" xml:space="preserve">
          <source>This module constructs higher-level threading interfaces on top of the lower level &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module. See also the &lt;a href=&quot;queue#module-queue&quot;&gt;&lt;code&gt;queue&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">该模块在较低级别的&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;模块之上构造较高级别的线程接口。另请参阅&lt;a href=&quot;queue#module-queue&quot;&gt; &lt;code&gt;queue&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="861c68e15668a5b39d713349ea83ffbbd4181c50" translate="yes" xml:space="preserve">
          <source>This module contains definitions for the UIText and ActionText tables, for the standard installer actions.</source>
          <target state="translated">该模块包含标准安装程序动作的UIText和ActionText表的定义。</target>
        </trans-unit>
        <trans-unit id="3077916ec25e86b9e1f4841b136b1ecadd40c210" translate="yes" xml:space="preserve">
          <source>This module contains functions that can read and write Python values in a binary format. The format is specific to Python, but independent of machine architecture issues (e.g., you can write a Python value to a file on a PC, transport the file to a Sun, and read it back there). Details of the format are undocumented on purpose; it may change between Python versions (although it rarely does). &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">该模块包含可以以二进制格式读取和写入Python值的函数。该格式特定于Python，但与计算机体系结构问题无关（例如，您可以将Python值写入PC上的文件，将文件传输到Sun，然后在此处读取）。该格式的详细信息未有意记录在案；它可能会在Python版本之间进行更改（尽管很少更改）。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1个&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5039b7f4c8b295a097141026f69aa1f45aeae2f4" translate="yes" xml:space="preserve">
          <source>This module contains functions to dump Python tracebacks explicitly, on a fault, after a timeout, or on a user signal. Call &lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;faulthandler.enable()&lt;/code&gt;&lt;/a&gt; to install fault handlers for the &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGBUS&lt;/code&gt;, and &lt;code&gt;SIGILL&lt;/code&gt; signals. You can also enable them at startup by setting the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt;&lt;/a&gt; environment variable or by using the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;faulthandler&lt;/code&gt; command line option.</source>
          <target state="translated">该模块包含函数，可在发生故障，超时或用户信号后显式转储Python跟踪。调用&lt;a href=&quot;#faulthandler.enable&quot;&gt; &lt;code&gt;faulthandler.enable()&lt;/code&gt; &lt;/a&gt;以安装 &lt;code&gt;SIGSEGV&lt;/code&gt; ， &lt;code&gt;SIGFPE&lt;/code&gt; ， &lt;code&gt;SIGABRT&lt;/code&gt; ， &lt;code&gt;SIGBUS&lt;/code&gt; 和 &lt;code&gt;SIGILL&lt;/code&gt; 信号的故障处理程序。您也可以在启动时通过设置&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt; &lt;/a&gt;环境变量或使用&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;faulthandler&lt;/code&gt; 命令行选项来启用它们。</target>
        </trans-unit>
        <trans-unit id="b52a978975d71fcca58a0f40ff04d9cf68c4036e" translate="yes" xml:space="preserve">
          <source>This module contains functions to dump Python tracebacks explicitly, on a fault, after a timeout, or on a user signal. Call &lt;a href=&quot;#faulthandler.enable&quot;&gt;&lt;code&gt;faulthandler.enable()&lt;/code&gt;&lt;/a&gt; to install fault handlers for the &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGBUS&lt;/code&gt;, and &lt;code&gt;SIGILL&lt;/code&gt; signals. You can also enable them at startup by setting the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt;&lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt;&lt;/a&gt; environment variable or by using the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;faulthandler&lt;/code&gt; command line option.</source>
          <target state="translated">该模块包含在故障，超时后或在用户信号上显式转储Python跟踪的功能。调用&lt;a href=&quot;#faulthandler.enable&quot;&gt; &lt;code&gt;faulthandler.enable()&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;SIGSEGV&lt;/code&gt; ， &lt;code&gt;SIGFPE&lt;/code&gt; ， &lt;code&gt;SIGABRT&lt;/code&gt; ， &lt;code&gt;SIGBUS&lt;/code&gt; 和 &lt;code&gt;SIGILL&lt;/code&gt; 信号安装故障处理程序。您也可以在启动时通过设置&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONFAULTHANDLER&quot; id=&quot;index-0&quot;&gt; &lt;code&gt;PYTHONFAULTHANDLER&lt;/code&gt; &lt;/a&gt;环境变量或使用&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;faulthandler&lt;/code&gt; 命令行选项来启用它们。</target>
        </trans-unit>
        <trans-unit id="cc8882528ecb71642481be204e6186fd1051ed37" translate="yes" xml:space="preserve">
          <source>This module contains table contents for the standard sequence tables: &lt;em&gt;AdminExecuteSequence&lt;/em&gt;, &lt;em&gt;AdminUISequence&lt;/em&gt;, &lt;em&gt;AdvtExecuteSequence&lt;/em&gt;, &lt;em&gt;InstallExecuteSequence&lt;/em&gt;, and &lt;em&gt;InstallUISequence&lt;/em&gt;.</source>
          <target state="translated">此模块包含标准序列表的表内容：&lt;em&gt;AdminExecuteSequence&lt;/em&gt;，&lt;em&gt;AdminUISequence&lt;/em&gt;，&lt;em&gt;AdvtExecuteSequence&lt;/em&gt;，&lt;em&gt;InstallExecuteSequence&lt;/em&gt;和&lt;em&gt;InstallUISequence&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b9f903356d17a57da3cbd225b09902afef1cc9e4" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; find and load modules.</source>
          <target state="translated">该模块包含有助于&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;查找和加载模块的各种对象。</target>
        </trans-unit>
        <trans-unit id="07eb4a6cd418f5286cb52fb731527861274ba7e6" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; find and load modules.</source>
          <target state="translated">该模块包含有助于&lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;查找和加载模块的各种对象。</target>
        </trans-unit>
        <trans-unit id="42ecc856b406c93d72b3abcd42ac7453b164bdd7" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help in the construction of an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;.</source>
          <target state="translated">该模块包含有助于构建&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-importer&quot;&gt;进口商&lt;/a&gt;的各种对象。</target>
        </trans-unit>
        <trans-unit id="beb3ad2cbe52b6da763c19513f29af1ada22f232" translate="yes" xml:space="preserve">
          <source>This module contains the various objects that help in the construction of an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;importer&lt;/a&gt;.</source>
          <target state="translated">该模块包含有助于构建&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-importer&quot;&gt;进口商&lt;/a&gt;的各种对象。</target>
        </trans-unit>
        <trans-unit id="04c30f14c660f82a69840aef1a06450c1039fd25" translate="yes" xml:space="preserve">
          <source>This module contains various constants relating to the intimate details of the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module, some lengthy comments about the implementation, and a few useful functions for analyzing pickled data. The contents of this module are useful for Python core developers who are working on the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt;; ordinary users of the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module probably won&amp;rsquo;t find the &lt;a href=&quot;#module-pickletools&quot;&gt;&lt;code&gt;pickletools&lt;/code&gt;&lt;/a&gt; module relevant.</source>
          <target state="translated">该模块包含与&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块的详细信息有关的各种常量，有关实现的一些冗长注释以及一些用于分析腌制数据的有用功能。该模块的内容对于从事&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;工作的Python核心开发人员很有用; &lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块的普通用户可能不会找到相关的&lt;a href=&quot;#module-pickletools&quot;&gt; &lt;code&gt;pickletools&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="f4495708855b5105fbffdba645bc8b7765dc4e32" translate="yes" xml:space="preserve">
          <source>This module creates temporary files and directories. It works on all supported platforms. &lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt;&lt;code&gt;TemporaryFile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tempfile.NamedTemporaryFile&quot;&gt;&lt;code&gt;NamedTemporaryFile&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tempfile.TemporaryDirectory&quot;&gt;&lt;code&gt;TemporaryDirectory&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#tempfile.SpooledTemporaryFile&quot;&gt;&lt;code&gt;SpooledTemporaryFile&lt;/code&gt;&lt;/a&gt; are high-level interfaces which provide automatic cleanup and can be used as context managers. &lt;a href=&quot;#tempfile.mkstemp&quot;&gt;&lt;code&gt;mkstemp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tempfile.mkdtemp&quot;&gt;&lt;code&gt;mkdtemp()&lt;/code&gt;&lt;/a&gt; are lower-level functions which require manual cleanup.</source>
          <target state="translated">该模块创建临时文件和目录。它适用于所有受支持的平台。&lt;a href=&quot;#tempfile.TemporaryFile&quot;&gt; &lt;code&gt;TemporaryFile&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#tempfile.NamedTemporaryFile&quot;&gt; &lt;code&gt;NamedTemporaryFile&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#tempfile.TemporaryDirectory&quot;&gt; &lt;code&gt;TemporaryDirectory&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#tempfile.SpooledTemporaryFile&quot;&gt; &lt;code&gt;SpooledTemporaryFile&lt;/code&gt; &lt;/a&gt;是提供自动清理的高级接口，可以用作上下文管理器。&lt;a href=&quot;#tempfile.mkstemp&quot;&gt; &lt;code&gt;mkstemp()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#tempfile.mkdtemp&quot;&gt; &lt;code&gt;mkdtemp()&lt;/code&gt; &lt;/a&gt;是较低级别的函数，需要手动清除。</target>
        </trans-unit>
        <trans-unit id="1fb63ae15e15adc2fac701d486eb6ae65fd3a9db" translate="yes" xml:space="preserve">
          <source>This module defines a class &lt;a href=&quot;#html.parser.HTMLParser&quot;&gt;&lt;code&gt;HTMLParser&lt;/code&gt;&lt;/a&gt; which serves as the basis for parsing text files formatted in HTML (HyperText Mark-up Language) and XHTML.</source>
          <target state="translated">该模块定义了一个&lt;a href=&quot;#html.parser.HTMLParser&quot;&gt; &lt;code&gt;HTMLParser&lt;/code&gt; &lt;/a&gt;类，该类用作解析以HTML（超文本标记语言）和XHTML格式设置的文本文件的基础。</target>
        </trans-unit>
        <trans-unit id="c5b51fe9b44470a4a81daa6484a674a50d74f512" translate="yes" xml:space="preserve">
          <source>This module defines a class, &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt;, which encapsulates a connection to a POP3 server and implements the protocol as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; class supports both the minimal and optional command sets from &lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;#poplib.POP3&quot;&gt;&lt;code&gt;POP3&lt;/code&gt;&lt;/a&gt; class also supports the &lt;code&gt;STLS&lt;/code&gt; command introduced in &lt;a href=&quot;https://tools.ietf.org/html/rfc2595.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2595&lt;/strong&gt;&lt;/a&gt; to enable encrypted communication on an already established connection.</source>
          <target state="translated">该模块定义了&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt;类，该类封装了到POP3服务器的连接并实现了&lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1939中&lt;/strong&gt;&lt;/a&gt;定义的协议。该&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt;类支持无论是从最小的和可选的命令集&lt;a href=&quot;https://tools.ietf.org/html/rfc1939.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1939&lt;/strong&gt;&lt;/a&gt;。所述&lt;a href=&quot;#poplib.POP3&quot;&gt; &lt;code&gt;POP3&lt;/code&gt; &lt;/a&gt;类也支持 &lt;code&gt;STLS&lt;/code&gt; 在引入命令&lt;a href=&quot;https://tools.ietf.org/html/rfc2595.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2595&lt;/strong&gt;&lt;/a&gt;，以使已建立的连接上的加密通信。</target>
        </trans-unit>
        <trans-unit id="1618ac7e65a20cb21e0876627584ef0952f4e004" translate="yes" xml:space="preserve">
          <source>This module defines a number of classes, which are detailed in the sections below.</source>
          <target state="translated">本模块定义了一些类,在下面的章节中详细介绍。</target>
        </trans-unit>
        <trans-unit id="11a2a01ddba0f2fb875e220a02c816a36dd3839e" translate="yes" xml:space="preserve">
          <source>This module defines a number of utilities for use by CGI scripts written in Python.</source>
          <target state="translated">这个模块定义了一些实用程序,供用Python编写的CGI脚本使用。</target>
        </trans-unit>
        <trans-unit id="48800cb2b61c0cb68840665bc7065117a5b5c588" translate="yes" xml:space="preserve">
          <source>This module defines a standard interface to break Uniform Resource Locator (URL) strings up in components (addressing scheme, network location, path etc.), to combine the components back into a URL string, and to convert a &amp;ldquo;relative URL&amp;rdquo; to an absolute URL given a &amp;ldquo;base URL.&amp;rdquo;</source>
          <target state="translated">此模块定义了一个标准接口，用于分解组件中的统一资源定位符（URL）字符串（寻址方案，网络位置，路径等），将组件组合回URL字符串，并将&amp;ldquo;相对URL&amp;rdquo;转换为给出&amp;ldquo;基本URL&amp;rdquo;的绝对URL。</target>
        </trans-unit>
        <trans-unit id="cc5d1611a8f8acccc4d6cf1756c216896a066e42" translate="yes" xml:space="preserve">
          <source>This module defines an exception:</source>
          <target state="translated">这个模块定义了一个异常。</target>
        </trans-unit>
        <trans-unit id="872203bde3e3135352e338fe96a0f66f7787e1a6" translate="yes" xml:space="preserve">
          <source>This module defines an object type which can compactly represent an array of basic values: characters, integers, floating point numbers. Arrays are sequence types and behave very much like lists, except that the type of objects stored in them is constrained. The type is specified at object creation time by using a &lt;em&gt;type code&lt;/em&gt;, which is a single character. The following type codes are defined:</source>
          <target state="translated">该模块定义了一个对象类型，该对象类型可以紧凑地表示一个基本值数组：字符，整数，浮点数。数组是序列类型，其行为与列表非常相似，不同之处在于数组中存储的对象类型受到约束。类型是在对象创建时通过使用&lt;em&gt;类型代码&lt;/em&gt;（即单个字符）指定的。定义了以下类型代码：</target>
        </trans-unit>
        <trans-unit id="b6850df64d4f421a1439f98e4bd7078f7c6cd6c4" translate="yes" xml:space="preserve">
          <source>This module defines base classes for standard Python codecs (encoders and decoders) and provides access to the internal Python codec registry, which manages the codec and error handling lookup process. Most standard codecs are &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, which encode text to bytes, but there are also codecs provided that encode text to text, and bytes to bytes. Custom codecs may encode and decode between arbitrary types, but some module features are restricted to use specifically with &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, or with codecs that encode to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此模块为标准Python编解码器（编码器和解码器）定义基类，并提供对内部Python编解码器注册表的访问，该注册表管理编解码器和错误处理查找过程。大多数标准编解码器是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;，可将文本编码为字节，但也提供了将文本编码为文本，字节编码为字节的编解码器。定制编解码器可以在任意类型之间进行编码和解码，但是某些模块功能仅限于专门用于&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;或编码为&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; 的&lt;/a&gt;编解码器。</target>
        </trans-unit>
        <trans-unit id="ab7ad5c272bc9df1e33e06d24d65ae2e29bd9139" translate="yes" xml:space="preserve">
          <source>This module defines base classes for standard Python codecs (encoders and decoders) and provides access to the internal Python codec registry, which manages the codec and error handling lookup process. Most standard codecs are &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, which encode text to bytes, but there are also codecs provided that encode text to text, and bytes to bytes. Custom codecs may encode and decode between arbitrary types, but some module features are restricted to use specifically with &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;text encodings&lt;/a&gt;, or with codecs that encode to &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此模块为标准Python编解码器（编码器和解码器）定义基类，并提供对内部Python编解码器注册表的访问，该注册表管理编解码器和错误处理查找过程。大多数标准编解码器是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;，可将文本编码为字节，但也提供了将文本编码为文本，字节编码为字节的编解码器。定制编解码器可以在任意类型之间进行编码和解码，但是某些模块功能仅限于与&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-text-encoding&quot;&gt;文本编码&lt;/a&gt;或编码为&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; 的&lt;/a&gt;编解码器一起使用。</target>
        </trans-unit>
        <trans-unit id="78eff0b82345640196ebee3d8065f4a5a2881ddd" translate="yes" xml:space="preserve">
          <source>This module defines classes for implementing HTTP servers (Web servers).</source>
          <target state="translated">该模块定义了实现HTTP服务器(Web服务器)的类。</target>
        </trans-unit>
        <trans-unit id="de3d04d963619a18276579b0870d1fcddb37dadd" translate="yes" xml:space="preserve">
          <source>This module defines classes which implement the client side of the HTTP and HTTPS protocols. It is normally not used directly &amp;mdash; the module &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; uses it to handle URLs that use HTTP and HTTPS.</source>
          <target state="translated">该模块定义实现HTTP和HTTPS协议客户端的类。通常不直接使用它-模块&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;使用它来处理使用HTTP和HTTPS的URL。</target>
        </trans-unit>
        <trans-unit id="e8cdc9da4c49a5a72d18f9f680dbe51d429c4110" translate="yes" xml:space="preserve">
          <source>This module defines four dictionaries, &lt;a href=&quot;#html.entities.html5&quot;&gt;&lt;code&gt;html5&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#html.entities.name2codepoint&quot;&gt;&lt;code&gt;name2codepoint&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#html.entities.codepoint2name&quot;&gt;&lt;code&gt;codepoint2name&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#html.entities.entitydefs&quot;&gt;&lt;code&gt;entitydefs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这个模块定义了4本词典，&lt;a href=&quot;#html.entities.html5&quot;&gt; &lt;code&gt;html5&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#html.entities.name2codepoint&quot;&gt; &lt;code&gt;name2codepoint&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#html.entities.codepoint2name&quot;&gt; &lt;code&gt;codepoint2name&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#html.entities.entitydefs&quot;&gt; &lt;code&gt;entitydefs&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b3c1b33a5dc7198cf9a5077bb81a5d371ff01f8" translate="yes" xml:space="preserve">
          <source>This module defines four enumeration classes that can be used to define unique sets of names and values: &lt;a href=&quot;#enum.Enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#enum.IntEnum&quot;&gt;&lt;code&gt;IntEnum&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt;. It also defines one decorator, &lt;a href=&quot;#enum.unique&quot;&gt;&lt;code&gt;unique()&lt;/code&gt;&lt;/a&gt;, and one helper, &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块定义了可以用于定义名称和值的独特的套4枚举类：&lt;a href=&quot;#enum.Enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#enum.IntEnum&quot;&gt; &lt;code&gt;IntEnum&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;。它还定义了一个装饰器&lt;a href=&quot;#enum.unique&quot;&gt; &lt;code&gt;unique()&lt;/code&gt; &lt;/a&gt;和一个辅助器&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a43956eb1cff944bb000135e22a68e274523884e" translate="yes" xml:space="preserve">
          <source>This module defines functions and classes which implement a flexible event logging system for applications and libraries.</source>
          <target state="translated">这个模块定义了一些函数和类,这些函数和类为应用程序和库实现了一个灵活的事件记录系统。</target>
        </trans-unit>
        <trans-unit id="9a838d0810c484aa7da738cbc9408bd383a315fc" translate="yes" xml:space="preserve">
          <source>This module defines several types that are subclasses of pre-existing standard library classes which also extend &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt; to support type variables inside &lt;code&gt;[]&lt;/code&gt;. These types became redundant in Python 3.9 when the corresponding pre-existing classes were enhanced to support &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">这个模块定义了几种类型，它们是预先存在的标准库类的子类，它们也扩展了&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt;以支持 &lt;code&gt;[]&lt;/code&gt; 内部的类型变量。当相应的预先存在的类得到增强以支持 &lt;code&gt;[]&lt;/code&gt; 时，这些类型在Python 3.9中变得多余。</target>
        </trans-unit>
        <trans-unit id="d12ae48143188d0297420fe3e3e8355fa72a4d12" translate="yes" xml:space="preserve">
          <source>This module defines the class &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; and a few related items. The &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; class implements the client side of the FTP protocol. You can use this to write Python programs that perform a variety of automated FTP jobs, such as mirroring other FTP servers. It is also used by the module &lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt;&lt;code&gt;urllib.request&lt;/code&gt;&lt;/a&gt; to handle URLs that use FTP. For more information on FTP (File Transfer Protocol), see Internet &lt;a href=&quot;https://tools.ietf.org/html/rfc959.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 959&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">此模块定义&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt;类和一些相关项目。该&lt;a href=&quot;#ftplib.FTP&quot;&gt; &lt;code&gt;FTP&lt;/code&gt; &lt;/a&gt;类实现FTP协议的客户端。您可以使用它来编写执行各种自动FTP作业的Python程序，例如镜像其他FTP服务器。&lt;a href=&quot;urllib.request#module-urllib.request&quot;&gt; &lt;code&gt;urllib.request&lt;/code&gt; &lt;/a&gt;模块也使用它来处理使用FTP的URL。有关FTP（文件传输协议）的更多信息，请参见Internet &lt;a href=&quot;https://tools.ietf.org/html/rfc959.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 959&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2f424d44b755936adbe2988818177e31ae44d19" translate="yes" xml:space="preserve">
          <source>This module defines the class &lt;a href=&quot;#nntplib.NNTP&quot;&gt;&lt;code&gt;NNTP&lt;/code&gt;&lt;/a&gt; which implements the client side of the Network News Transfer Protocol. It can be used to implement a news reader or poster, or automated news processors. It is compatible with &lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt; as well as the older &lt;a href=&quot;https://tools.ietf.org/html/rfc977.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 977&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2980&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块定义了&lt;a href=&quot;#nntplib.NNTP&quot;&gt; &lt;code&gt;NNTP&lt;/code&gt; &lt;/a&gt;类，该类实现了网络新闻传输协议的客户端。它可以用于实现新闻阅读器或海报，或自动新闻处理程序。它与&lt;a href=&quot;https://tools.ietf.org/html/rfc3977.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3977&lt;/strong&gt;&lt;/a&gt;以及较旧的&lt;a href=&quot;https://tools.ietf.org/html/rfc977.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 977&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://tools.ietf.org/html/rfc2980.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2980&lt;/strong&gt;&lt;/a&gt;兼容。</target>
        </trans-unit>
        <trans-unit id="6075209a511cab6004ad5174fb8118d5ccd054f2" translate="yes" xml:space="preserve">
          <source>This module defines the following constants and functions:</source>
          <target state="translated">本模块定义了以下常量和函数。</target>
        </trans-unit>
        <trans-unit id="254e7f18807b69bc33340649efc7baade8104fad" translate="yes" xml:space="preserve">
          <source>This module defines the following exceptions:</source>
          <target state="translated">本模块定义了以下例外情况:</target>
        </trans-unit>
        <trans-unit id="d27a1500cefa039de958d9245d5b0b141f00314e" translate="yes" xml:space="preserve">
          <source>This module defines the following functions:</source>
          <target state="translated">本模块定义了以下功能:</target>
        </trans-unit>
        <trans-unit id="cbab75d4cc8fb1a71ebe6ad326eb328016713c4e" translate="yes" xml:space="preserve">
          <source>This module defines three classes, &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4_SSL&quot;&gt;&lt;code&gt;IMAP4_SSL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#imaplib.IMAP4_stream&quot;&gt;&lt;code&gt;IMAP4_stream&lt;/code&gt;&lt;/a&gt;, which encapsulate a connection to an IMAP4 server and implement a large subset of the IMAP4rev1 client protocol as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2060&lt;/strong&gt;&lt;/a&gt;. It is backward compatible with IMAP4 (&lt;a href=&quot;https://tools.ietf.org/html/rfc1730.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1730&lt;/strong&gt;&lt;/a&gt;) servers, but note that the &lt;code&gt;STATUS&lt;/code&gt; command is not supported in IMAP4.</source>
          <target state="translated">该模块定义了三个类，即&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#imaplib.IMAP4_SSL&quot;&gt; &lt;code&gt;IMAP4_SSL&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#imaplib.IMAP4_stream&quot;&gt; &lt;code&gt;IMAP4_stream&lt;/code&gt; &lt;/a&gt;，它们封装了与IMAP4服务器的连接并实现了&lt;a href=&quot;https://tools.ietf.org/html/rfc2060.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2060中&lt;/strong&gt;&lt;/a&gt;定义的IMAP4rev1客户端协议的较大子集。它与IMAP4（&lt;a href=&quot;https://tools.ietf.org/html/rfc1730.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 1730&lt;/strong&gt;&lt;/a&gt;）服务器向后兼容，但请注意，IMAP4不支持 &lt;code&gt;STATUS&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="0f29ba324535ab62c8f58447db607b753c98bae5" translate="yes" xml:space="preserve">
          <source>This module defines two classes, &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt;, for accessing and manipulating on-disk mailboxes and the messages they contain. &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; offers a dictionary-like mapping from keys to messages. &lt;a href=&quot;#mailbox.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; extends the &lt;a href=&quot;email.message#module-email.message&quot;&gt;&lt;code&gt;email.message&lt;/code&gt;&lt;/a&gt; module&amp;rsquo;s &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; class with format-specific state and behavior. Supported mailbox formats are Maildir, mbox, MH, Babyl, and MMDF.</source>
          <target state="translated">此模块定义了两个类&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;，用于访问和操作磁盘上的邮箱及其包含的消息。&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;提供了从键到消息的类似字典的映射。&lt;a href=&quot;#mailbox.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;使用特定于格式的状态和行为扩展了&lt;a href=&quot;email.message#module-email.message&quot;&gt; &lt;code&gt;email.message&lt;/code&gt; &lt;/a&gt;模块的&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;类。支持的邮箱格式为Maildir，mbox，MH，Babyl和MMDF。</target>
        </trans-unit>
        <trans-unit id="d8a489c3d0c7610957d387ee3a2556662944d293" translate="yes" xml:space="preserve">
          <source>This module defines utilities to manipulate HTML.</source>
          <target state="translated">这个模块定义了一些实用程序来操作HTML。</target>
        </trans-unit>
        <trans-unit id="dfe22c236ca9d8a5b76832ead4539edc455e0a34" translate="yes" xml:space="preserve">
          <source>This module defines utility functions to assist in dynamic creation of new types.</source>
          <target state="translated">本模块定义了实用函数,以协助动态创建新类型。</target>
        </trans-unit>
        <trans-unit id="e942318520019f6f5189c26f40c04ee87a02680c" translate="yes" xml:space="preserve">
          <source>This module does not comply with the RFC in a strict fashion, implementing some extensions that are valid JavaScript but not valid JSON. In particular:</source>
          <target state="translated">该模块并没有严格遵守RFC,实现了一些有效JavaScript但无效JSON的扩展。特别是:</target>
        </trans-unit>
        <trans-unit id="49e85895e7dc7efb294c76b52c1626af5e533a39" translate="yes" xml:space="preserve">
          <source>This module does not copy types like module, method, stack trace, stack frame, file, socket, window, array, or any similar types. It does &amp;ldquo;copy&amp;rdquo; functions and classes (shallow and deeply), by returning the original object unchanged; this is compatible with the way these are treated by the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">此模块不会复制模块，方法，堆栈跟踪，堆栈框架，文件，套接字，窗口，数组或任何类似类型的类型。它通过不变地返回原始对象来&amp;ldquo;复制&amp;rdquo;函数和类（浅层和深层）。这与&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块处理这些食物的方式兼容。</target>
        </trans-unit>
        <trans-unit id="17d030f61ef73253b8878c6ac00f0db6edfe90d3" translate="yes" xml:space="preserve">
          <source>This module does not currently handle multi-disk ZIP files. It can handle ZIP files that use the ZIP64 extensions (that is ZIP files that are more than 4 GiB in size). It supports decryption of encrypted files in ZIP archives, but it currently cannot create an encrypted file. Decryption is extremely slow as it is implemented in native Python rather than C.</source>
          <target state="translated">这个模块目前还不能处理多盘ZIP文件,它可以处理使用ZIP64扩展名的ZIP文件(也就是大小超过4GiB的ZIP文件)。它可以处理使用ZIP64扩展名的ZIP文件(也就是大小超过4GB的ZIP文件)。它支持对ZIP档案中的加密文件进行解密,但目前不能创建加密文件。解密速度极慢,因为它是用原生Python而不是C语言实现的。</target>
        </trans-unit>
        <trans-unit id="519d1b02a39806bc189ae28fe467295ef2dfa0a9" translate="yes" xml:space="preserve">
          <source>This module does not impose any such limits beyond those of the relevant Python datatypes themselves or the Python interpreter itself.</source>
          <target state="translated">这个模块没有施加任何超出相关 Python 数据类型本身或 Python 解释器本身的限制。</target>
        </trans-unit>
        <trans-unit id="4f7b84f93b9e849cdae302062aae810414c34807" translate="yes" xml:space="preserve">
          <source>This module does not support playing from a memory image asynchronously, so a combination of this flag and &lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt;&lt;code&gt;SND_ASYNC&lt;/code&gt;&lt;/a&gt; will raise &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块不支持从内存映像异步播放，因此此标志和&lt;a href=&quot;#winsound.SND_ASYNC&quot;&gt; &lt;code&gt;SND_ASYNC&lt;/code&gt; &lt;/a&gt;的组合将引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b343817bb9b838e5415a508a84ece8dffe81d92" translate="yes" xml:space="preserve">
          <source>This module encodes and decodes files in binhex4 format, a format allowing representation of Macintosh files in ASCII. Only the data fork is handled.</source>
          <target state="translated">该模块对binhex4格式的文件进行编码和解码,binhex4格式是一种允许用ASCII码表示Macintosh文件的格式。只有数据分叉被处理。</target>
        </trans-unit>
        <trans-unit id="dd03d811a7b08d214ea866929673d3a7471cc228" translate="yes" xml:space="preserve">
          <source>This module encodes and decodes files in uuencode format, allowing arbitrary binary data to be transferred over ASCII-only connections. Wherever a file argument is expected, the methods accept a file-like object. For backwards compatibility, a string containing a pathname is also accepted, and the corresponding file will be opened for reading and writing; the pathname &lt;code&gt;'-'&lt;/code&gt; is understood to mean the standard input or output. However, this interface is deprecated; it&amp;rsquo;s better for the caller to open the file itself, and be sure that, when required, the mode is &lt;code&gt;'rb'&lt;/code&gt; or &lt;code&gt;'wb'&lt;/code&gt; on Windows.</source>
          <target state="translated">此模块以uuencode格式编码和解码文件，从而允许通过仅ASCII的连接传输任意二进制数据。无论在哪里需要文件参数，这些方法都会接受一个类似文件的对象。为了向后兼容，还将接受包含路径名的字符串，并且将打开相应的文件以进行读取和写入。路径名 &lt;code&gt;'-'&lt;/code&gt; 理解为表示标准输入或输出。但是，不建议使用此接口。调用者最好自己打开文件，并确保在需要时在Windows上将模式设置为 &lt;code&gt;'rb'&lt;/code&gt; 或 &lt;code&gt;'wb'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f81a6cf8af5f605b58b6ac46efd33c502d783a0" translate="yes" xml:space="preserve">
          <source>This module exists for backwards compatibility only. For new code we recommend using &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">存在此模块仅是为了向后兼容。对于新代码，我们建议使用&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0db06efc0dbc72f83920d799f65e3722ebe14985" translate="yes" xml:space="preserve">
          <source>This module helps scripts to parse the command line arguments in &lt;code&gt;sys.argv&lt;/code&gt;. It supports the same conventions as the Unix &lt;code&gt;getopt()&lt;/code&gt; function (including the special meanings of arguments of the form &amp;lsquo;&lt;code&gt;-&lt;/code&gt;&amp;lsquo; and &amp;lsquo;&lt;code&gt;--&lt;/code&gt;&amp;lsquo;). Long options similar to those supported by GNU software may be used as well via an optional third argument.</source>
          <target state="translated">此模块可帮助脚本解析 &lt;code&gt;sys.argv&lt;/code&gt; 中的命令行参数。它支持与Unix &lt;code&gt;getopt()&lt;/code&gt; 函数相同的约定（包括形式为&amp;ldquo; &lt;code&gt;-&lt;/code&gt; &amp;rdquo;和&amp;ldquo; &lt;code&gt;--&lt;/code&gt; &amp;rdquo; 的参数的特殊含义）。也可以通过可选的第三个参数使用与GNU软件支持的长选项相似的长选项。</target>
        </trans-unit>
        <trans-unit id="121aa50a9e3129147a9accceb01472d79e19ffe1" translate="yes" xml:space="preserve">
          <source>This module implements &lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3490&lt;/strong&gt;&lt;/a&gt; (Internationalized Domain Names in Applications) and &lt;a href=&quot;https://tools.ietf.org/html/rfc3492.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 3492&lt;/strong&gt;&lt;/a&gt; (Nameprep: A Stringprep Profile for Internationalized Domain Names (IDN)). It builds upon the &lt;code&gt;punycode&lt;/code&gt; encoding and &lt;a href=&quot;stringprep#module-stringprep&quot;&gt;&lt;code&gt;stringprep&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此模块实现&lt;a href=&quot;https://tools.ietf.org/html/rfc3490.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3490&lt;/strong&gt;&lt;/a&gt;（应用程序中的国际化域名）和&lt;a href=&quot;https://tools.ietf.org/html/rfc3492.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 3492&lt;/strong&gt;&lt;/a&gt;（Nameprep：国际化域名（IDN）的Stringprep配置文件）。它基于 &lt;code&gt;punycode&lt;/code&gt; 编码和&lt;a href=&quot;stringprep#module-stringprep&quot;&gt; &lt;code&gt;stringprep&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b93c605058d9ac4610c0f66fcfaf0e7cc0668f2" translate="yes" xml:space="preserve">
          <source>This module implements a common interface to many different secure hash and message digest algorithms. Included are the FIPS secure hash algorithms SHA1, SHA224, SHA256, SHA384, and SHA512 (defined in FIPS 180-2) as well as RSA&amp;rsquo;s MD5 algorithm (defined in Internet &lt;a href=&quot;https://tools.ietf.org/html/rfc1321.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1321&lt;/strong&gt;&lt;/a&gt;). The terms &amp;ldquo;secure hash&amp;rdquo; and &amp;ldquo;message digest&amp;rdquo; are interchangeable. Older algorithms were called message digests. The modern term is secure hash.</source>
          <target state="translated">该模块为许多不同的安全哈希和消息摘要算法实现了一个通用接口。包括FIPS安全哈希算法SHA1，SHA224，SHA256，SHA384和SHA512（在FIPS 180-2中定义）以及RSA的MD5算法（在Internet &lt;a href=&quot;https://tools.ietf.org/html/rfc1321.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1321中&lt;/strong&gt;&lt;/a&gt;定义）。术语&amp;ldquo;安全哈希&amp;rdquo;和&amp;ldquo;消息摘要&amp;rdquo;是可以互换的。较旧的算法称为消息摘要。现代术语是安全哈希。</target>
        </trans-unit>
        <trans-unit id="9dc190db82f8040568b6d71e5d44f33a813a06d1" translate="yes" xml:space="preserve">
          <source>This module implements a helper class and functions to quickly write a loop over standard input or a list of files. If you just want to read or write one file see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块实现了一个帮助器类，并具有在标准输入或文件列表上快速编写循环的功能。如果您只想读取或写入一个文件，请参见&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddbb83da8fffc29ce3e4bfee653fa7dd031640c8" translate="yes" xml:space="preserve">
          <source>This module implements a number of &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; building blocks inspired by constructs from APL, Haskell, and SML. Each has been recast in a form suitable for Python.</source>
          <target state="translated">该模块实现了许多&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;构造块，这些构造块的灵感来自APL，Haskell和SML的构造。每个都已经以适合Python的形式进行了重铸。</target>
        </trans-unit>
        <trans-unit id="cd6319d8a7feaaf5d7a525e6f80a3e1d715a2b85" translate="yes" xml:space="preserve">
          <source>This module implements a number of &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; building blocks inspired by constructs from APL, Haskell, and SML. Each has been recast in a form suitable for Python.</source>
          <target state="translated">该模块实现了许多&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;构造块，这些构造块的灵感来自APL，Haskell和SML的构造。每个都已经以适合于Python的形式进行了重铸。</target>
        </trans-unit>
        <trans-unit id="3cfc63fd063d2db5a956c67a2c60b1984b185b20" translate="yes" xml:space="preserve">
          <source>This module implements a simple HTTP server (based on &lt;a href=&quot;http.server#module-http.server&quot;&gt;&lt;code&gt;http.server&lt;/code&gt;&lt;/a&gt;) that serves WSGI applications. Each server instance serves a single WSGI application on a given host and port. If you want to serve multiple applications on a single host and port, you should create a WSGI application that parses &lt;code&gt;PATH_INFO&lt;/code&gt; to select which application to invoke for each request. (E.g., using the &lt;code&gt;shift_path_info()&lt;/code&gt; function from &lt;a href=&quot;#module-wsgiref.util&quot;&gt;&lt;code&gt;wsgiref.util&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">该模块实现了一个简单的HTTP服务器（基于&lt;a href=&quot;http.server#module-http.server&quot;&gt; &lt;code&gt;http.server&lt;/code&gt; &lt;/a&gt;），该服务器为WSGI应用程序服务。每个服务器实例在给定的主机和端口上服务单个WSGI应用程序。如果要在单个主机和端口上提供多个应用程序，则应创建一个WSGI应用程序，该应用程序解析 &lt;code&gt;PATH_INFO&lt;/code&gt; 以选择为每个请求调用哪个应用程序。 （例如，使用&lt;a href=&quot;#module-wsgiref.util&quot;&gt; &lt;code&gt;wsgiref.util&lt;/code&gt; 中&lt;/a&gt;的 &lt;code&gt;shift_path_info()&lt;/code&gt; 函数。）</target>
        </trans-unit>
        <trans-unit id="5fd7dba47e22473c1f2a4635a0a3174c3d6c275b" translate="yes" xml:space="preserve">
          <source>This module implements a variant of the UTF-8 codec. On encoding, a UTF-8 encoded BOM will be prepended to the UTF-8 encoded bytes. For the stateful encoder this is only done once (on the first write to the byte stream). On decoding, an optional UTF-8 encoded BOM at the start of the data will be skipped.</source>
          <target state="translated">该模块实现了UTF-8编解码器的一个变体,在编码时,UTF-8编码的BOM将预置在UTF-8编码的字节上。在编码时,UTF-8编码的BOM将被预置到UTF-8编码的字节中。对于有状态的编码器,这只需要做一次(在第一次写入字节流的时候)。在解码时,数据开始处的UTF-8编码BOM将被跳过。</target>
        </trans-unit>
        <trans-unit id="1d4a5b8472e44e8855f5d68c663b14c77b8bcf34" translate="yes" xml:space="preserve">
          <source>This module implements an interface to the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt(3)&lt;/a&gt;&lt;/em&gt; routine, which is a one-way hash function based upon a modified DES algorithm; see the Unix man page for further details. Possible uses include storing hashed passwords so you can check passwords without storing the actual password, or attempting to crack Unix passwords with a dictionary.</source>
          <target state="translated">该模块实现了&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt（3）&lt;/a&gt;&lt;/em&gt;例程的接口，该接口是基于修改后的DES算法的单向哈希函数；有关更多详细信息，请参见Unix手册页。可能的用途包括存储哈希密码，以便您可以在不存储实际密码的情况下检查密码，或尝试使用字典破解Unix密码。</target>
        </trans-unit>
        <trans-unit id="3a2adf6a9a2bd23305d2c275bca19cae38c30374" translate="yes" xml:space="preserve">
          <source>This module implements pseudo-random number generators for various distributions.</source>
          <target state="translated">该模块实现了各种分布的伪随机数生成器。</target>
        </trans-unit>
        <trans-unit id="b0183d20598d8183a93f9529b78d2aebdeda8d60" translate="yes" xml:space="preserve">
          <source>This module implements some useful functions on pathnames. To read or write files see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, and for accessing the filesystem see the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module. The path parameters can be passed as either strings, or bytes. Applications are encouraged to represent file names as (Unicode) character strings. Unfortunately, some file names may not be representable as strings on Unix, so applications that need to support arbitrary file names on Unix should use bytes objects to represent path names. Vice versa, using bytes objects cannot represent all file names on Windows (in the standard &lt;code&gt;mbcs&lt;/code&gt; encoding), hence Windows applications should use string objects to access all files.</source>
          <target state="translated">该模块在路径名上实现了一些有用的功能。要读取或写入文件，请参见&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;；有关访问文件系统的信息，请参见&lt;a href=&quot;os#module-os&quot;&gt; &lt;code&gt;os&lt;/code&gt; &lt;/a&gt;模块。路径参数可以字符串或字节形式传递。鼓励应用程序将文件名表示为（Unicode）字符串。不幸的是，某些文件名在Unix上可能无法用字符串表示，因此需要在Unix上支持任意文件名的应用程序应使用字节对象表示路径名。反之亦然，使用字节对象不能代表Windows上的所有文件名（以标准 &lt;code&gt;mbcs&lt;/code&gt; 编码），因此Windows应用程序应使用字符串对象来访问所有文件。</target>
        </trans-unit>
        <trans-unit id="a2192c961f0f178501bb93fed052cb49b0b99007" translate="yes" xml:space="preserve">
          <source>This module implements specialized container datatypes providing alternatives to Python&amp;rsquo;s general purpose built-in containers, &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块实现了专门的容器数据类型，为Python的通用内置容器&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdtypes#list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdtypes#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stdtypes#tuple&quot;&gt; &lt;code&gt;tuple&lt;/code&gt; &lt;/a&gt;提供了替代方案。</target>
        </trans-unit>
        <trans-unit id="4736824d97338b1fd5868abcd3d3b1ebff178aa8" translate="yes" xml:space="preserve">
          <source>This module implements the ANSI codepage (CP_ACP).</source>
          <target state="translated">该模块实现了ANSI代码页(CP_ACP)。</target>
        </trans-unit>
        <trans-unit id="e68de6d1ff1f2163e087582161fc807dc52641fc" translate="yes" xml:space="preserve">
          <source>This module implements the HMAC algorithm as described by &lt;a href=&quot;https://tools.ietf.org/html/rfc2104.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2104&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块实现&lt;a href=&quot;https://tools.ietf.org/html/rfc2104.html&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 2104中&lt;/strong&gt;&lt;/a&gt;描述的HMAC算法。</target>
        </trans-unit>
        <trans-unit id="e2d84704e96b7291c63c1ac3efbb5f6664c424ce" translate="yes" xml:space="preserve">
          <source>This module is based on the &lt;code&gt;paste.lint&lt;/code&gt; module from Ian Bicking&amp;rsquo;s &amp;ldquo;Python Paste&amp;rdquo; library.</source>
          <target state="translated">该模块基于Ian Bicking的&amp;ldquo; Python Paste&amp;rdquo;库中的 &lt;code&gt;paste.lint&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="f013858815011cf856f770000ca4c7df309a157c" translate="yes" xml:space="preserve">
          <source>This module is deprecated in Python 3. The functions provided here should not be called explicitly since the &lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt;&lt;code&gt;MIMEText&lt;/code&gt;&lt;/a&gt; class sets the content type and CTE header using the &lt;em&gt;_subtype&lt;/em&gt; and &lt;em&gt;_charset&lt;/em&gt; values passed during the instaniation of that class.</source>
          <target state="translated">在Python 3中不推荐使用此模块。此处提供的函数不应显式调用，因为&lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt; &lt;code&gt;MIMEText&lt;/code&gt; &lt;/a&gt;类使用在&lt;em&gt;实例化&lt;/em&gt;&lt;em&gt;该类时&lt;/em&gt;传递的&lt;em&gt;_subtype&lt;/em&gt;和&lt;em&gt;_charset&lt;/em&gt;值来设置内容类型和CTE标头。</target>
        </trans-unit>
        <trans-unit id="1597919b5189f5941c86c782d5458623193d7aff" translate="yes" xml:space="preserve">
          <source>This module is deprecated in Python 3. The functions provided here should not be called explicitly since the &lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt;&lt;code&gt;MIMEText&lt;/code&gt;&lt;/a&gt; class sets the content type and CTE header using the &lt;em&gt;_subtype&lt;/em&gt; and &lt;em&gt;_charset&lt;/em&gt; values passed during the instantiation of that class.</source>
          <target state="translated">在Python 3中不推荐使用此模块。此处提供的函数不应显式调用，因为&lt;a href=&quot;email.mime#email.mime.text.MIMEText&quot;&gt; &lt;code&gt;MIMEText&lt;/code&gt; &lt;/a&gt;类使用在实例化该类的过程中传递的&lt;em&gt;_subtype&lt;/em&gt;和&lt;em&gt;_charset&lt;/em&gt;值来设置内容类型和CTE标头。</target>
        </trans-unit>
        <trans-unit id="0429cbe9aa597c0b69111a1d41b8921cc161a566" translate="yes" xml:space="preserve">
          <source>This module is not normally accessed explicitly by most applications, but can be useful in modules that provide objects with the same name as a built-in value, but in which the built-in of that name is also needed. For example, in a module that wants to implement an &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function that wraps the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, this module can be used directly:</source>
          <target state="translated">通常，大多数应用程序都不会显式访问此模块，但在提供与内置值同名的对象的模块中很有用，但其中还需要该名称的内置项。例如，要实施一个模块中&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数，它包装内置&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;，这个模块可以直接使用：</target>
        </trans-unit>
        <trans-unit id="2e6ab9db141dd804d00e434d702dfeb4bcde0dd7" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the current API encoding and decoding of headers is handled transparently by the dictionary-like API of the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class. In addition to uses in legacy code, this module can be useful in applications that need to completely control the character sets used when encoding headers.</source>
          <target state="translated">该模块是旧版（ &lt;code&gt;Compat32&lt;/code&gt; ）电子邮件API的一部分。在当前的API中，头的编码和解码由&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;类的类似于字典的API透明地处理。除了在旧代码中使用外，此模块还可用于需要完全控制在编码标头时使用的字符集的应用程序。</target>
        </trans-unit>
        <trans-unit id="180f900cae8d922dd98bae601f15771a481ee0ce" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the new API only the aliases table is used.</source>
          <target state="translated">该模块是旧版（ &lt;code&gt;Compat32&lt;/code&gt; ）电子邮件API的一部分。在新的API中，仅使用别名表。</target>
        </trans-unit>
        <trans-unit id="7cd2965c82b9a739b8830b1bfba981387bb8eef9" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. In the new API the functionality is provided by the &lt;em&gt;cte&lt;/em&gt; parameter of the &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该模块是旧版（ &lt;code&gt;Compat32&lt;/code&gt; ）电子邮件API的一部分。在新的API的功能是由提供&lt;em&gt;CTE&lt;/em&gt;的的参数&lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="27d84dff011c3a4e546bb4a84107261b06d95ee9" translate="yes" xml:space="preserve">
          <source>This module is part of the legacy (&lt;code&gt;Compat32&lt;/code&gt;) email API. Its functionality is partially replaced by the &lt;a href=&quot;email.contentmanager#module-email.contentmanager&quot;&gt;&lt;code&gt;contentmanager&lt;/code&gt;&lt;/a&gt; in the new API, but in certain applications these classes may still be useful, even in non-legacy code.</source>
          <target state="translated">该模块是旧版（ &lt;code&gt;Compat32&lt;/code&gt; ）电子邮件API的一部分。它的功能是部分被取代&lt;a href=&quot;email.contentmanager#module-email.contentmanager&quot;&gt; &lt;code&gt;contentmanager&lt;/code&gt; &lt;/a&gt;新的API中，但在某些应用中，这些类可能仍然是有用的，即使在非遗留代码。</target>
        </trans-unit>
        <trans-unit id="dfd1c33f39be668ad64a1446553d02f9a8cd6310" translate="yes" xml:space="preserve">
          <source>This module is quite similar to the &lt;a href=&quot;#module-dbm&quot;&gt;&lt;code&gt;dbm&lt;/code&gt;&lt;/a&gt; module, but uses the GNU library &lt;code&gt;gdbm&lt;/code&gt; instead to provide some additional functionality. Please note that the file formats created by &lt;a href=&quot;#module-dbm.gnu&quot;&gt;&lt;code&gt;dbm.gnu&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#module-dbm.ndbm&quot;&gt;&lt;code&gt;dbm.ndbm&lt;/code&gt;&lt;/a&gt; are incompatible.</source>
          <target state="translated">该模块与&lt;a href=&quot;#module-dbm&quot;&gt; &lt;code&gt;dbm&lt;/code&gt; &lt;/a&gt;模块非常相似，但是使用GNU库 &lt;code&gt;gdbm&lt;/code&gt; 来提供一些附加功能。请注意，&lt;a href=&quot;#module-dbm.gnu&quot;&gt; &lt;code&gt;dbm.gnu&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#module-dbm.ndbm&quot;&gt; &lt;code&gt;dbm.ndbm&lt;/code&gt; &lt;/a&gt;创建的文件格式不兼容。</target>
        </trans-unit>
        <trans-unit id="7b216268bb69c1fdf01b3213c4d03d0dea781f3b" translate="yes" xml:space="preserve">
          <source>This module leverages Python&amp;rsquo;s import system to provide access to &lt;em&gt;resources&lt;/em&gt; within &lt;em&gt;packages&lt;/em&gt;. If you can import a package, you can access resources within that package. Resources can be opened or read, in either binary or text mode.</source>
          <target state="translated">该模块利用Python的导入系统来提供对&lt;em&gt;包&lt;/em&gt;内&lt;em&gt;资源的&lt;/em&gt;访问。如果可以导入软件包，则可以访问该软件包中的资源。可以以二进制或文本模式打开或读取资源。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d567be3ffbb48af9ddd8e570ee9aca2bcd078e25" translate="yes" xml:space="preserve">
          <source>This module makes available standard &lt;code&gt;errno&lt;/code&gt; system symbols. The value of each symbol is the corresponding integer value. The names and descriptions are borrowed from &lt;code&gt;linux/include/errno.h&lt;/code&gt;, which should be pretty all-inclusive.</source>
          <target state="translated">该模块提供了可用的标准 &lt;code&gt;errno&lt;/code&gt; 系统符号。每个符号的值是相应的整数值。名称和描述是从 &lt;code&gt;linux/include/errno.h&lt;/code&gt; 借来的，应该十分全面。</target>
        </trans-unit>
        <trans-unit id="8177e37ca6fd47fc24221a5d337fc98fe8380b1b" translate="yes" xml:space="preserve">
          <source>This module offers classes representing filesystem paths with semantics appropriate for different operating systems. Path classes are divided between &lt;a href=&quot;#pure-paths&quot;&gt;pure paths&lt;/a&gt;, which provide purely computational operations without I/O, and &lt;a href=&quot;#concrete-paths&quot;&gt;concrete paths&lt;/a&gt;, which inherit from pure paths but also provide I/O operations.</source>
          <target state="translated">该模块提供了具有适用于不同操作系统的语义的表示文件系统路径的类。路径类分为&lt;a href=&quot;#pure-paths&quot;&gt;纯路径&lt;/a&gt;（提供纯计算而不提供I / O）和&lt;a href=&quot;#concrete-paths&quot;&gt;具体路径&lt;/a&gt;（从纯路径继承但也提供I / O操作）和纯路径。</target>
        </trans-unit>
        <trans-unit id="ed5c638dd819f880628830ab0ecc5d8641d533ba" translate="yes" xml:space="preserve">
          <source>This module offers several classes to implement SMTP (email) servers.</source>
          <target state="translated">这个模块提供了几个类来实现SMTP(电子邮件)服务器。</target>
        </trans-unit>
        <trans-unit id="5ce552dbf20b8c159b70061696daa935deadc19d" translate="yes" xml:space="preserve">
          <source>This module offers the following functions:</source>
          <target state="translated">该模块提供以下功能:</target>
        </trans-unit>
        <trans-unit id="d8a6bfc993b9c245ec8eb2cc7787eb9de4ea8adc" translate="yes" xml:space="preserve">
          <source>This module performs conversions between Python values and C structs represented as Python &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; objects. This can be used in handling binary data stored in files or from network connections, among other sources. It uses &lt;a href=&quot;#struct-format-strings&quot;&gt;Format Strings&lt;/a&gt; as compact descriptions of the layout of the C structs and the intended conversion to/from Python values.</source>
          <target state="translated">此模块在Python值和以Python &lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象表示的C结构之间执行转换。除其他来源外，它可用于处理文件或网络连接中存储的二进制数据。它使用&lt;a href=&quot;#struct-format-strings&quot;&gt;格式字符串&lt;/a&gt;作为C结构布局以及与Python值之间的预期转换的紧凑描述。</target>
        </trans-unit>
        <trans-unit id="b6eea1445534f2c5a7d57930c9064fef45e4cd14" translate="yes" xml:space="preserve">
          <source>This module performs file control and I/O control on file descriptors. It is an interface to the &lt;code&gt;fcntl()&lt;/code&gt; and &lt;code&gt;ioctl()&lt;/code&gt; Unix routines. For a complete description of these calls, see &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/fcntl(2)&quot;&gt;fcntl(2)&lt;/a&gt;&lt;/em&gt; and &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/ioctl(2)&quot;&gt;ioctl(2)&lt;/a&gt;&lt;/em&gt; Unix manual pages.</source>
          <target state="translated">该模块对文件描述符执行文件控制和I / O控制。它是 &lt;code&gt;fcntl()&lt;/code&gt; 和 &lt;code&gt;ioctl()&lt;/code&gt; Unix例程的接口。有关这些调用的完整说明，请参见&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/fcntl(2)&quot;&gt;fcntl（2）&lt;/a&gt;&lt;/em&gt;和&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/ioctl(2)&quot;&gt;ioctl（2）&lt;/a&gt;&lt;/em&gt; Unix手册页。</target>
        </trans-unit>
        <trans-unit id="887984972a32db5e99731e161e576fbca9e2f8cf" translate="yes" xml:space="preserve">
          <source>This module performs quoted-printable transport encoding and decoding, as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt;: &amp;ldquo;MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies&amp;rdquo;. The quoted-printable encoding is designed for data where there are relatively few nonprintable characters; the base64 encoding scheme available via the &lt;a href=&quot;base64#module-base64&quot;&gt;&lt;code&gt;base64&lt;/code&gt;&lt;/a&gt; module is more compact if there are many such characters, as when sending a graphics file.</source>
          <target state="translated">该模块执行带引号的可打印传输编码和解码，如&lt;a href=&quot;https://tools.ietf.org/html/rfc1521.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1521&lt;/strong&gt;&lt;/a&gt;：&amp;ldquo; MIME（多用途Internet邮件扩展）第一部分：用于指定和描述Internet消息正文格式的机制&amp;rdquo;中所定义。带引号的可打印编码设计用于不可打印字符相对较少的数据；如果有许多这样的字符（例如在发送图形文件时），则可通过&lt;a href=&quot;base64#module-base64&quot;&gt; &lt;code&gt;base64&lt;/code&gt; &lt;/a&gt;模块使用的base64编码方案更加紧凑。</target>
        </trans-unit>
        <trans-unit id="30c72eae525b4703153ea587e7608baa95a20091" translate="yes" xml:space="preserve">
          <source>This module provides &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; that can be used to test whether a class provides a particular interface; for example, whether it is hashable or whether it is a mapping.</source>
          <target state="translated">这个模块提供了&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象的基类&lt;/a&gt;，可以用来测试一个类是否提供了特定的接口。例如，它是否可散列还是映射。</target>
        </trans-unit>
        <trans-unit id="ae244de3501dc65b5e91de812f723a2a68347184" translate="yes" xml:space="preserve">
          <source>This module provides &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; that can be used to test whether a class provides a particular interface; for example, whether it is hashable or whether it is a mapping.</source>
          <target state="translated">这个模块提供了&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象的基类&lt;/a&gt;，可以用来测试一个类是否提供了一个特定的接口。例如，它是否可散列还是映射。</target>
        </trans-unit>
        <trans-unit id="13eafc2a82baf557013b08017f80bf530e415d08" translate="yes" xml:space="preserve">
          <source>This module provides APIs to manage, store, and access context-local state. The &lt;a href=&quot;#contextvars.ContextVar&quot;&gt;&lt;code&gt;ContextVar&lt;/code&gt;&lt;/a&gt; class is used to declare and work with &lt;em&gt;Context Variables&lt;/em&gt;. The &lt;a href=&quot;#contextvars.copy_context&quot;&gt;&lt;code&gt;copy_context()&lt;/code&gt;&lt;/a&gt; function and the &lt;a href=&quot;#contextvars.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; class should be used to manage the current context in asynchronous frameworks.</source>
          <target state="translated">该模块提供用于管理，存储和访问上下文本地状态的API。该&lt;a href=&quot;#contextvars.ContextVar&quot;&gt; &lt;code&gt;ContextVar&lt;/code&gt; &lt;/a&gt;类用于声明和工作与&lt;em&gt;上下文变量&lt;/em&gt;。所述&lt;a href=&quot;#contextvars.copy_context&quot;&gt; &lt;code&gt;copy_context()&lt;/code&gt; &lt;/a&gt;函数和&lt;a href=&quot;#contextvars.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;类应该被用来管理在异步框架当前上下文。</target>
        </trans-unit>
        <trans-unit id="703dfbdde3fe51b975924d146f5d433ed1e5cf30" translate="yes" xml:space="preserve">
          <source>This module provides a &lt;a href=&quot;#modulefinder.ModuleFinder&quot;&gt;&lt;code&gt;ModuleFinder&lt;/code&gt;&lt;/a&gt; class that can be used to determine the set of modules imported by a script. &lt;code&gt;modulefinder.py&lt;/code&gt; can also be run as a script, giving the filename of a Python script as its argument, after which a report of the imported modules will be printed.</source>
          <target state="translated">该模块提供一个&lt;a href=&quot;#modulefinder.ModuleFinder&quot;&gt; &lt;code&gt;ModuleFinder&lt;/code&gt; &lt;/a&gt;类，该类可用于确定脚本导入的模块集。 &lt;code&gt;modulefinder.py&lt;/code&gt; 也可以作为脚本运行，并以Python脚本的文件名作为参数，然后将打印导入模块的报告。</target>
        </trans-unit>
        <trans-unit id="9fb1a53a880fe52c91fddba4f125f09d0a187d0c" translate="yes" xml:space="preserve">
          <source>This module provides a class &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; for representing character sets and character set conversions in email messages, as well as a character set registry and several convenience methods for manipulating this registry. Instances of &lt;a href=&quot;#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; are used in several other modules within the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">此模块提供了一个&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;类，用于表示电子邮件中的字符集和字符集转换，以及字符集注册表和用于操纵该注册表的几种便捷方法。&lt;a href=&quot;#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;实例在&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;包中的其他几个模块中使用。</target>
        </trans-unit>
        <trans-unit id="213bc85d22b8633001facc52a601116b11e0ec9e" translate="yes" xml:space="preserve">
          <source>This module provides a class, &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt;, for the allocation and management of shared memory to be accessed by one or more processes on a multicore or symmetric multiprocessor (SMP) machine. To assist with the life-cycle management of shared memory especially across distinct processes, a &lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt;&lt;code&gt;BaseManager&lt;/code&gt;&lt;/a&gt; subclass, &lt;code&gt;SharedMemoryManager&lt;/code&gt;, is also provided in the &lt;code&gt;multiprocessing.managers&lt;/code&gt; module.</source>
          <target state="translated">此模块提供了一个类&lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;，用于分配和管理共享内存，以供多核或对称多处理器（SMP）计算机上的一个或多个进程访问。为了协助共享内存的生命周期管理，尤其是跨不同进程的共享内存的生命周期管理， &lt;code&gt;multiprocessing.managers&lt;/code&gt; 模块中还提供了&lt;a href=&quot;multiprocessing#multiprocessing.managers.BaseManager&quot;&gt; &lt;code&gt;BaseManager&lt;/code&gt; &lt;/a&gt;子类 &lt;code&gt;SharedMemoryManager&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9c95f438e44fc345a6538a8c4a4f76ac8ff8317" translate="yes" xml:space="preserve">
          <source>This module provides a class, &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;, which is derived from the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; type, and provides a socket-like wrapper that also encrypts and decrypts the data going over the socket with SSL. It supports additional methods such as &lt;code&gt;getpeercert()&lt;/code&gt;, which retrieves the certificate of the other side of the connection, and &lt;code&gt;cipher()&lt;/code&gt;, which retrieves the cipher being used for the secure connection.</source>
          <target state="translated">此模块提供了一个类&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;，该类派生自&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt;类型，并提供类似于套接字的包装器，该包装器还使用SSL对通过套接字的数据进行加密和解密。它支持其他方法，例如 &lt;code&gt;getpeercert()&lt;/code&gt; 和 &lt;code&gt;cipher()&lt;/code&gt; ，该方法检索连接另一侧的证书，而cipher（）检索用于安全连接的密码。</target>
        </trans-unit>
        <trans-unit id="90404141faf9f0c0e94247220f4a81789284c490" translate="yes" xml:space="preserve">
          <source>This module provides a class, &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;ssl.SSLSocket&lt;/code&gt;&lt;/a&gt;, which is derived from the &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; type, and provides a socket-like wrapper that also encrypts and decrypts the data going over the socket with SSL. It supports additional methods such as &lt;code&gt;getpeercert()&lt;/code&gt;, which retrieves the certificate of the other side of the connection, and &lt;code&gt;cipher()&lt;/code&gt;,which retrieves the cipher being used for the secure connection.</source>
          <target state="translated">此模块提供了一个类&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;ssl.SSLSocket&lt;/code&gt; &lt;/a&gt;，该类派生自&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt;类型，并提供类似于套接字的包装器，该包装器还使用SSL对通过套接字的数据进行加密和解密。它支持其他方法，例如 &lt;code&gt;getpeercert()&lt;/code&gt; 和 &lt;code&gt;cipher()&lt;/code&gt; ，该方法检索连接另一侧的证书，而cipher（）检索用于安全连接的密码。</target>
        </trans-unit>
        <trans-unit id="8f0ffcd572b3174eb3c8a270163a48792d8c1a64" translate="yes" xml:space="preserve">
          <source>This module provides a class, an instance, and a function:</source>
          <target state="translated">这个模块提供了一个类、一个实例和一个函数。</target>
        </trans-unit>
        <trans-unit id="7420a8c5a8b68bbee2a0537324852b74b6e93ea0" translate="yes" xml:space="preserve">
          <source>This module provides a comprehensive interface for compressing and decompressing data using the bzip2 compression algorithm.</source>
          <target state="translated">该模块为使用bzip2压缩算法压缩和解压数据提供了一个综合接口。</target>
        </trans-unit>
        <trans-unit id="85cdc6759a6295c61c57d18349a77a0e70ad451c" translate="yes" xml:space="preserve">
          <source>This module provides a decorator and functions for automatically adding generated &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s such as &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; to user-defined classes. It was originally described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块提供了一个装饰器和一些函数，用于将生成的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-special-method&quot;&gt;特殊方法&lt;/a&gt;（例如&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;自动添加到用户定义的类。它最初在&lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557中进行了&lt;/strong&gt;&lt;/a&gt;描述。</target>
        </trans-unit>
        <trans-unit id="916908c6c673e5b4a27730bf1c8cc2e81ec3fee3" translate="yes" xml:space="preserve">
          <source>This module provides a decorator and functions for automatically adding generated &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;special method&lt;/a&gt;s such as &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt;&lt;code&gt;__repr__()&lt;/code&gt;&lt;/a&gt; to user-defined classes. It was originally described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块提供了一个装饰器和一些函数，用于将生成的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-special-method&quot;&gt;特殊方法&lt;/a&gt;（例如&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__repr__&quot;&gt; &lt;code&gt;__repr__()&lt;/code&gt; &lt;/a&gt;自动添加到用户定义的类。它最初在&lt;a href=&quot;https://www.python.org/dev/peps/pep-0557&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 557中进行了&lt;/strong&gt;&lt;/a&gt;描述。</target>
        </trans-unit>
        <trans-unit id="7cd4efd6ed76589f3eff9b3aada6dff77c95ad36" translate="yes" xml:space="preserve">
          <source>This module provides a duplicate interface to the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module. It was meant to be imported when the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module was not provided on a platform.</source>
          <target state="translated">该模块为&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;模块提供了重复的接口。它是在平台上未提供&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;模块时导入的。</target>
        </trans-unit>
        <trans-unit id="3fef5cae12047ccc1374399baa4337c5fac7f2f3" translate="yes" xml:space="preserve">
          <source>This module provides a duplicate interface to the &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module. It was meant to be imported when the &lt;a href=&quot;_thread#module-_thread&quot;&gt;&lt;code&gt;_thread&lt;/code&gt;&lt;/a&gt; module was not provided on a platform.</source>
          <target state="translated">该模块为&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;模块提供了重复的接口。它是在平台上未提供&lt;a href=&quot;_thread#module-_thread&quot;&gt; &lt;code&gt;_thread&lt;/code&gt; &lt;/a&gt;模块时导入的。</target>
        </trans-unit>
        <trans-unit id="b8848396af147fc8383e103fb6d46929f1bef6b8" translate="yes" xml:space="preserve">
          <source>This module provides a portable way of using operating system dependent functionality. If you just want to read or write a file see &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;, if you want to manipulate paths, see the &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt; module, and if you want to read all the lines in all the files on the command line see the &lt;a href=&quot;fileinput#module-fileinput&quot;&gt;&lt;code&gt;fileinput&lt;/code&gt;&lt;/a&gt; module. For creating temporary files and directories see the &lt;a href=&quot;tempfile#module-tempfile&quot;&gt;&lt;code&gt;tempfile&lt;/code&gt;&lt;/a&gt; module, and for high-level file and directory handling see the &lt;a href=&quot;shutil#module-shutil&quot;&gt;&lt;code&gt;shutil&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">该模块提供了使用依赖于操作系统的功能的便携式方法。如果只想读取或写入文件，请参见&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;；如果要操纵路径，请参见&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;模块；如果要读取命令行中所有文件中的所有行，请参见&lt;a href=&quot;fileinput#module-fileinput&quot;&gt; &lt;code&gt;fileinput&lt;/code&gt; &lt;/a&gt;模块。 。有关创建临时文件和目录的信息，请参见&lt;a href=&quot;tempfile#module-tempfile&quot;&gt; &lt;code&gt;tempfile&lt;/code&gt; &lt;/a&gt;模块；有关高级文件和目录的处理的信息，请参见&lt;a href=&quot;shutil#module-shutil&quot;&gt; &lt;code&gt;shutil&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="f8f0c0c78932b5e209afaba9f5dcfdab7f59d3bd" translate="yes" xml:space="preserve">
          <source>This module provides a simple interface to compress and decompress files just like the GNU programs &lt;strong&gt;gzip&lt;/strong&gt; and &lt;strong&gt;gunzip&lt;/strong&gt; would.</source>
          <target state="translated">该模块提供了一个简单的界面来压缩和解压缩文件，就像GNU程序&lt;strong&gt;gzip&lt;/strong&gt;和&lt;strong&gt;gunzip&lt;/strong&gt;一样。</target>
        </trans-unit>
        <trans-unit id="72a987a70c302afe568cb8de1bfe5273c35907f2" translate="yes" xml:space="preserve">
          <source>This module provides a simple way to time small bits of Python code. It has both a &lt;a href=&quot;#timeit-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; as well as a &lt;a href=&quot;#python-interface&quot;&gt;callable&lt;/a&gt; one. It avoids a number of common traps for measuring execution times. See also Tim Peters&amp;rsquo; introduction to the &amp;ldquo;Algorithms&amp;rdquo; chapter in the &lt;em&gt;Python Cookbook&lt;/em&gt;, published by O&amp;rsquo;Reilly.</source>
          <target state="translated">该模块提供了一种计时少量Python代码的简单方法。它既具有&lt;a href=&quot;#timeit-command-line-interface&quot;&gt;命令行界面又&lt;/a&gt;具有&lt;a href=&quot;#python-interface&quot;&gt;可调用&lt;/a&gt;界面。它避免了许多用于测量执行时间的常见陷阱。另请参见O'Reilly出版的Tim Cooks对&lt;em&gt;Python Cookbook中&lt;/em&gt; &amp;ldquo;算法&amp;rdquo;一章的介绍。</target>
        </trans-unit>
        <trans-unit id="ac5624f85e8b62430d234b85484c3d823bb52291" translate="yes" xml:space="preserve">
          <source>This module provides a single class, &lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt;&lt;code&gt;RobotFileParser&lt;/code&gt;&lt;/a&gt;, which answers questions about whether or not a particular user agent can fetch a URL on the Web site that published the &lt;code&gt;robots.txt&lt;/code&gt; file. For more details on the structure of &lt;code&gt;robots.txt&lt;/code&gt; files, see &lt;a href=&quot;http://www.robotstxt.org/orig.html&quot;&gt;http://www.robotstxt.org/orig.html&lt;/a&gt;.</source>
          <target state="translated">该模块提供了单个类&lt;a href=&quot;#urllib.robotparser.RobotFileParser&quot;&gt; &lt;code&gt;RobotFileParser&lt;/code&gt; &lt;/a&gt;，它回答有关特定用户代理是否可以在发布了 &lt;code&gt;robots.txt&lt;/code&gt; 文件的网站上获取URL的问题。有关 &lt;code&gt;robots.txt&lt;/code&gt; 文件结构的更多详细信息，请参见&lt;a href=&quot;http://www.robotstxt.org/orig.html&quot;&gt;http://www.robotstxt.org/orig.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62e4158ef196326ed71c06f9c8cc82d27d3fbbcf" translate="yes" xml:space="preserve">
          <source>This module provides a single class, &lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt;, for convenient manipulation of WSGI response headers using a mapping-like interface.</source>
          <target state="translated">该模块提供了一个单独的类&lt;a href=&quot;#wsgiref.headers.Headers&quot;&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;/a&gt;，用于使用类似于映射的接口方便地操作WSGI响应头。</target>
        </trans-unit>
        <trans-unit id="6536d070903854775a48e95f262d42244862ad75" translate="yes" xml:space="preserve">
          <source>This module provides a standard interface to extract, format and print stack traces of Python programs. It exactly mimics the behavior of the Python interpreter when it prints a stack trace. This is useful when you want to print stack traces under program control, such as in a &amp;ldquo;wrapper&amp;rdquo; around the interpreter.</source>
          <target state="translated">该模块提供了一个标准接口，用于提取，格式化和打印Python程序的堆栈跟踪。它精确地模仿了Python解释器在打印堆栈跟踪时的行为。当您要在程序控制下打印堆栈跟踪时，例如在解释器周围的&amp;ldquo;包装器&amp;rdquo;中，此功能很有用。</target>
        </trans-unit>
        <trans-unit id="16801fcd2f87bd96df53f183ca91321a894b0cee" translate="yes" xml:space="preserve">
          <source>This module provides a variety of utility functions for working with WSGI environments. A WSGI environment is a dictionary containing HTTP request variables as described in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;. All of the functions taking an &lt;em&gt;environ&lt;/em&gt; parameter expect a WSGI-compliant dictionary to be supplied; please see &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; for a detailed specification.</source>
          <target state="translated">该模块提供了用于WSGI环境的各种实用程序功能。WSGI环境是包含HTTP请求变量的字典，如&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3333中所述&lt;/strong&gt;&lt;/a&gt;。所有带有&lt;em&gt;environ&lt;/em&gt;参数的函数都希望提供符合WSGI的字典；请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;了解详细规格。</target>
        </trans-unit>
        <trans-unit id="f47d51ea5443642e0cebe608bdfb649e783a95da" translate="yes" xml:space="preserve">
          <source>This module provides access to Transport Layer Security (often known as &amp;ldquo;Secure Sockets Layer&amp;rdquo;) encryption and peer authentication facilities for network sockets, both client-side and server-side. This module uses the OpenSSL library. It is available on all modern Unix systems, Windows, Mac OS X, and probably additional platforms, as long as OpenSSL is installed on that platform.</source>
          <target state="translated">此模块提供对客户端和服务器端网络套接字的传输层安全性（通常称为&amp;ldquo;安全套接字层&amp;rdquo;）加密和对等身份验证功能的访问。该模块使用OpenSSL库。只要在该平台上安装了OpenSSL，它就可以在所有现代Unix系统，Windows，Mac OS X以及可能的其他平台上使用。</target>
        </trans-unit>
        <trans-unit id="fb47dc23d4685117a20e275d440b82a71cb84040" translate="yes" xml:space="preserve">
          <source>This module provides access to mathematical functions for complex numbers. The functions in this module accept integers, floating-point numbers or complex numbers as arguments. They will also accept any Python object that has either a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt;&lt;code&gt;__complex__()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; method: these methods are used to convert the object to a complex or floating-point number, respectively, and the function is then applied to the result of the conversion.</source>
          <target state="translated">该模块提供对复数数学函数的访问。此模块中的函数接受整数，浮点数或复数作为参数。他们还将接受具有&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__complex__&quot;&gt; &lt;code&gt;__complex__()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;方法的任何Python对象：这些方法分别用于将对象转换为复数或浮点数，然后将该函数应用于的结果转换。</target>
        </trans-unit>
        <trans-unit id="5ee5d6474fef056704addcd34d8bf10030130a4a" translate="yes" xml:space="preserve">
          <source>This module provides access to mathematical functions for complex numbers. The functions in this module accept integers, floating-point numbers or complex numbers as arguments. They will also accept any Python object that has either a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__complex__&quot;&gt;&lt;code&gt;__complex__()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt;&lt;code&gt;__float__()&lt;/code&gt;&lt;/a&gt; method: these methods are used to convert the object to a complex or floating-point number, respectively, and the function is then applied to the result of the conversion.</source>
          <target state="translated">该模块提供对复数数学函数的访问。此模块中的函数接受整数，浮点数或复数作为参数。他们还将接受具有&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__complex__&quot;&gt; &lt;code&gt;__complex__()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__float__&quot;&gt; &lt;code&gt;__float__()&lt;/code&gt; &lt;/a&gt;方法的任何Python对象：这些方法分别用于将对象转换为复数或浮点数，然后将该函数应用于的结果转换。</target>
        </trans-unit>
        <trans-unit id="96bd06b62c229263aee7d4b310478ba4038faf46" translate="yes" xml:space="preserve">
          <source>This module provides access to operating system functionality that is standardized by the C Standard and the POSIX standard (a thinly disguised Unix interface).</source>
          <target state="translated">这个模块提供了对操作系统功能的访问,这些功能是由C标准和POSIX标准(一个伪装得很薄的Unix接口)标准化的。</target>
        </trans-unit>
        <trans-unit id="fc2f9ad21523dcef5a819d87ef202bea6b841856" translate="yes" xml:space="preserve">
          <source>This module provides access to some variables used or maintained by the interpreter and to functions that interact strongly with the interpreter. It is always available.</source>
          <target state="translated">该模块提供了对解释器使用或维护的一些变量的访问,以及与解释器紧密交互的函数。它是随时可用的。</target>
        </trans-unit>
        <trans-unit id="2bc2d795b2f5d56c42bc1fcccb682e4b1315d9ca" translate="yes" xml:space="preserve">
          <source>This module provides access to the &lt;code&gt;select()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; functions available in most operating systems, &lt;code&gt;devpoll()&lt;/code&gt; available on Solaris and derivatives, &lt;code&gt;epoll()&lt;/code&gt; available on Linux 2.5+ and &lt;code&gt;kqueue()&lt;/code&gt; available on most BSD. Note that on Windows, it only works for sockets; on other operating systems, it also works for other file types (in particular, on Unix, it works on pipes). It cannot be used on regular files to determine whether a file has grown since it was last read.</source>
          <target state="translated">该模块提供存取 &lt;code&gt;select()&lt;/code&gt; 和 &lt;code&gt;poll()&lt;/code&gt; 函数在大多数操作系统中可用， &lt;code&gt;devpoll()&lt;/code&gt; 在Solaris和衍生物，可用 &lt;code&gt;epoll()&lt;/code&gt; 在Linux可用2.5+和 &lt;code&gt;kqueue()&lt;/code&gt; 可以在大多数BSD。请注意，在Windows上，它仅适用于套接字。在其他操作系统上，它也适用于其他文件类型（特别是在Unix上，它适用于管道）。不能在常规文件上使用它来确定自上次读取文件以来文件是否已增长。</target>
        </trans-unit>
        <trans-unit id="f5ea14577acc1b35986f36f159c2c78929863d41" translate="yes" xml:space="preserve">
          <source>This module provides access to the BSD &lt;em&gt;socket&lt;/em&gt; interface. It is available on all modern Unix systems, Windows, MacOS, and probably additional platforms.</source>
          <target state="translated">该模块提供对BSD &lt;em&gt;套接字&lt;/em&gt;接口的访问。它在所有现代Unix系统，Windows，MacOS以及可能的其他平台上都可用。</target>
        </trans-unit>
        <trans-unit id="4edada6edb283e968b93e64d3bef29ca69397245" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unicode Character Database (UCD) which defines character properties for all Unicode characters. The data contained in this database is compiled from the &lt;a href=&quot;http://www.unicode.org/Public/12.1.0/ucd&quot;&gt;UCD version 12.1.0&lt;/a&gt;.</source>
          <target state="translated">此模块提供对Unicode字符数据库（UCD）的访问，该数据库定义了所有Unicode字符的字符属性。此数据库中包含的数据是从&lt;a href=&quot;http://www.unicode.org/Public/12.1.0/ucd&quot;&gt;UCD版本12.1.0&lt;/a&gt;编译的。</target>
        </trans-unit>
        <trans-unit id="1d725393b29ca98559a052531d2684647c496440" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unicode Character Database (UCD) which defines character properties for all Unicode characters. The data contained in this database is compiled from the &lt;a href=&quot;https://www.unicode.org/Public/13.0.0/ucd&quot;&gt;UCD version 13.0.0&lt;/a&gt;.</source>
          <target state="translated">此模块提供对Unicode字符数据库（UCD）的访问，该数据库定义了所有Unicode字符的字符属性。此数据库中包含的数据是从&lt;a href=&quot;https://www.unicode.org/Public/13.0.0/ucd&quot;&gt;UCD版本13.0.0&lt;/a&gt;编译而来的。</target>
        </trans-unit>
        <trans-unit id="30670ccef8e7fe81c71479df8b9249a53340baa3" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix group database. It is available on all Unix versions.</source>
          <target state="translated">该模块提供对Unix组数据库的访问。它在所有Unix版本上都可以使用。</target>
        </trans-unit>
        <trans-unit id="55f03ba226e0b0cb51540161e0864d43da374302" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix shadow password database. It is available on various Unix versions.</source>
          <target state="translated">该模块提供对Unix影子密码数据库的访问。它可以在各种Unix版本上使用。</target>
        </trans-unit>
        <trans-unit id="673e84aa5c6cb1086db76a154ca80c1cc47c2e40" translate="yes" xml:space="preserve">
          <source>This module provides access to the Unix user account and password database. It is available on all Unix versions.</source>
          <target state="translated">该模块提供对Unix用户账户和密码数据库的访问。它在所有Unix版本上都可以使用。</target>
        </trans-unit>
        <trans-unit id="58e68fc7fd3b84061fa6b4f1dc9c8b600f222438" translate="yes" xml:space="preserve">
          <source>This module provides access to the mathematical functions defined by the C standard.</source>
          <target state="translated">该模块提供了对C标准定义的数学函数的访问。</target>
        </trans-unit>
        <trans-unit id="469fcb73e532c33fb0f828785ab9c89776d66732" translate="yes" xml:space="preserve">
          <source>This module provides an implementation of the heap queue algorithm, also known as the priority queue algorithm.</source>
          <target state="translated">该模块提供了一个堆队列算法的实现,也就是所谓的优先级队列算法。</target>
        </trans-unit>
        <trans-unit id="7478b75b360305f4403684dd05c591302baf8208" translate="yes" xml:space="preserve">
          <source>This module provides an interface for reading and writing the &amp;ldquo;property list&amp;rdquo; files used by Apple, primarily on macOS and iOS. This module supports both binary and XML plist files.</source>
          <target state="translated">该模块提供了一个接口，用于读取和写入Apple主要在macOS和iOS上使用的&amp;ldquo;属性列表&amp;rdquo;文件。该模块支持二进制和XML plist文件。</target>
        </trans-unit>
        <trans-unit id="52af56f54da90f517f414639fe74fe94fa8a209d" translate="yes" xml:space="preserve">
          <source>This module provides an interface for reading and writing the &amp;ldquo;property list&amp;rdquo; files used mainly by Mac OS X and supports both binary and XML plist files.</source>
          <target state="translated">该模块提供了用于读写Mac OS X主要使用的&amp;ldquo;属性列表&amp;rdquo;文件的接口，并且支持二进制和XML plist文件。</target>
        </trans-unit>
        <trans-unit id="f7985b4122bdce70b370c7fd3cec918904d41ad1" translate="yes" xml:space="preserve">
          <source>This module provides an interface for reading files that use EA IFF 85 chunks. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; This format is used in at least the Audio Interchange File Format (AIFF/AIFF-C) and the Real Media File Format (RMFF). The WAVE audio file format is closely related and can also be read using this module.</source>
          <target state="translated">该模块提供了一个接口，用于读取使用EA IFF 85块的文件。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;此格式至少用于音频交换文件格式（AIFF / AIFF-C）和实际媒体文件格式（RMFF）。WAVE音频文件格式密切相关，也可以使用此模块读取。</target>
        </trans-unit>
        <trans-unit id="e5235c064e0fb34f3d9063e171a6e6c64d56db25" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the POSIX calls for tty I/O control. For a complete description of these calls, see &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/termios(3)&quot;&gt;termios(3)&lt;/a&gt;&lt;/em&gt; Unix manual page. It is only available for those Unix versions that support POSIX &lt;em&gt;termios&lt;/em&gt; style tty I/O control configured during installation.</source>
          <target state="translated">该模块为tty I / O控制提供了POSIX调用的接口。有关这些调用的完整说明，请参见&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/termios(3)&quot;&gt;termios（3）&lt;/a&gt;&lt;/em&gt; Unix手册页。它仅适用于支持在安装过程中配置的POSIX &lt;em&gt;termios&lt;/em&gt;样式tty I / O控制的Unix版本。</target>
        </trans-unit>
        <trans-unit id="086f3cc3f100e25677403b5b1acdc335886e31be" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the Unix &lt;code&gt;syslog&lt;/code&gt; library routines. Refer to the Unix manual pages for a detailed description of the &lt;code&gt;syslog&lt;/code&gt; facility.</source>
          <target state="translated">该模块提供了与Unix &lt;code&gt;syslog&lt;/code&gt; 库例程的接口。有关 &lt;code&gt;syslog&lt;/code&gt; 工具的详细说明，请参见Unix手册页。</target>
        </trans-unit>
        <trans-unit id="5767581be7b98c856708e68e4887a01ee5ed3ca7" translate="yes" xml:space="preserve">
          <source>This module provides an interface to the optional garbage collector. It provides the ability to disable the collector, tune the collection frequency, and set debugging options. It also provides access to unreachable objects that the collector found but cannot free. Since the collector supplements the reference counting already used in Python, you can disable the collector if you are sure your program does not create reference cycles. Automatic collection can be disabled by calling &lt;code&gt;gc.disable()&lt;/code&gt;. To debug a leaking program call &lt;code&gt;gc.set_debug(gc.DEBUG_LEAK)&lt;/code&gt;. Notice that this includes &lt;code&gt;gc.DEBUG_SAVEALL&lt;/code&gt;, causing garbage-collected objects to be saved in gc.garbage for inspection.</source>
          <target state="translated">该模块提供了到可选垃圾收集器的接口。它提供了禁用收集器，调整收集频率以及设置调试选项的功能。它还提供对收集器找到但无法释放的无法访问对象的访问。由于收集器是对Python中已经使用的引用计数的补充，因此，如果您确定程序未创建引用循环，则可以禁用收集器。可以通过调用 &lt;code&gt;gc.disable()&lt;/code&gt; 禁用自动收集。要调试泄漏的程序，请调用 &lt;code&gt;gc.set_debug(gc.DEBUG_LEAK)&lt;/code&gt; 。请注意，这包括 &lt;code&gt;gc.DEBUG_SAVEALL&lt;/code&gt; ，导致将垃圾收集的对象保存在gc.garbage中以进行检查。</target>
        </trans-unit>
        <trans-unit id="32207cdf053d4b53a02fec90b3f2fe847d2a3f32" translate="yes" xml:space="preserve">
          <source>This module provides base handler classes for implementing WSGI servers and gateways. These base classes handle most of the work of communicating with a WSGI application, as long as they are given a CGI-like environment, along with input, output, and error streams.</source>
          <target state="translated">这个模块提供了实现WSGI服务器和网关的基础处理程序类。这些基类处理了与WSGI应用程序通信的大部分工作,只要给它们一个类似CGI的环境,以及输入、输出和错误流。</target>
        </trans-unit>
        <trans-unit id="3d2d65711f29707dcf3c68b47576e06b5bb25708" translate="yes" xml:space="preserve">
          <source>This module provides basic mechanisms for measuring and controlling system resources utilized by a program.</source>
          <target state="translated">本模块提供了测量和控制程序利用的系统资源的基本机制。</target>
        </trans-unit>
        <trans-unit id="2074e4ed5cae8e3c02c907a6fb87896ca374907a" translate="yes" xml:space="preserve">
          <source>This module provides classes and convenience functions for compressing and decompressing data using the LZMA compression algorithm. Also included is a file interface supporting the &lt;code&gt;.xz&lt;/code&gt; and legacy &lt;code&gt;.lzma&lt;/code&gt; file formats used by the &lt;strong&gt;xz&lt;/strong&gt; utility, as well as raw compressed streams.</source>
          <target state="translated">该模块提供了用于使用LZMA压缩算法压缩和解压缩数据的类和便利功能。还包括一个文件接口，该文件接口支持&lt;strong&gt;xz&lt;/strong&gt;实用程序使用的 &lt;code&gt;.xz&lt;/code&gt; 和旧版 &lt;code&gt;.lzma&lt;/code&gt; 文件格式，以及原始压缩流。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b41ff6259a2809c3c85cfcb2d023518394f66db" translate="yes" xml:space="preserve">
          <source>This module provides classes and functions for comparing sequences. It can be used for example, for comparing files, and can produce difference information in various formats, including HTML and context and unified diffs. For comparing directories and files, see also, the &lt;a href=&quot;filecmp#module-filecmp&quot;&gt;&lt;code&gt;filecmp&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">此模块提供用于比较序列的类和功能。例如，它可以用于比较文件，并可以产生各种格式的差异信息，包括HTML和上下文以及统一的diff。要比较目录和文件，另请参见&lt;a href=&quot;filecmp#module-filecmp&quot;&gt; &lt;code&gt;filecmp&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="d723d85d9302b6f49e467234d1b51bfae004c9ed" translate="yes" xml:space="preserve">
          <source>This module provides classes and functions for comparing sequences. It can be used for example, for comparing files, and can produce information about file differences in various formats, including HTML and context and unified diffs. For comparing directories and files, see also, the &lt;a href=&quot;filecmp#module-filecmp&quot;&gt;&lt;code&gt;filecmp&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">该模块提供了用于比较序列的类和函数。例如，它可以用于比较文件，并可以生成有关各种格式（包括HTML和上下文以及统一差异）的文件差异的信息。要比较目录和文件，另请参见&lt;a href=&quot;filecmp#module-filecmp&quot;&gt; &lt;code&gt;filecmp&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="4d3a75e4fdf67641ed01276bf79ceb985728ca3f" translate="yes" xml:space="preserve">
          <source>This module provides constants which represent the numeric values of internal nodes of the parse tree. Unlike most Python constants, these use lower-case names. Refer to the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the Python distribution for the definitions of the names in the context of the language grammar. The specific numeric values which the names map to may change between Python versions.</source>
          <target state="translated">该模块提供了代表解析树内部节点的数值的常量。与大多数Python常数不同，它们使用小写名称。有关语言语法上下文中名称的定义，请参见Python发行版中的文件 &lt;code&gt;Grammar/Grammar&lt;/code&gt; 。名称映射到的特定数字值可能会在Python版本之间更改。</target>
        </trans-unit>
        <trans-unit id="0db1c58e5713700f3d18b08e3440f3ac8160539e" translate="yes" xml:space="preserve">
          <source>This module provides constants which represent the numeric values of leaf nodes of the parse tree (terminal tokens). Refer to the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the Python distribution for the definitions of the names in the context of the language grammar. The specific numeric values which the names map to may change between Python versions.</source>
          <target state="translated">该模块提供了代表解析树的叶节点（终端令牌）的数值的常量。有关语言语法上下文中名称的定义，请参见Python发行版中的文件 &lt;code&gt;Grammar/Grammar&lt;/code&gt; 。名称映射到的特定数字值可能会在Python版本之间更改。</target>
        </trans-unit>
        <trans-unit id="dc2f9c0b7237fe8976f75e5c839bcb70285d1a61" translate="yes" xml:space="preserve">
          <source>This module provides direct access to all &amp;lsquo;built-in&amp;rsquo; identifiers of Python; for example, &lt;code&gt;builtins.open&lt;/code&gt; is the full name for the built-in function &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;functions#built-in-funcs&quot;&gt;Built-in Functions&lt;/a&gt; and &lt;a href=&quot;constants#built-in-consts&quot;&gt;Built-in Constants&lt;/a&gt; for documentation.</source>
          <target state="translated">该模块可直接访问Python的所有&amp;ldquo;内置&amp;rdquo;标识符；例如， &lt;code&gt;builtins.open&lt;/code&gt; 是内置函数&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;的全名。有关文档，请参见&lt;a href=&quot;functions#built-in-funcs&quot;&gt;内置函数&lt;/a&gt;和&lt;a href=&quot;constants#built-in-consts&quot;&gt;内置常量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e1adbb5fba8bcb0dd3c5d2f87875121ca620833" translate="yes" xml:space="preserve">
          <source>This module provides functionality similar to &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html&quot;&gt;pkg_resources&lt;/a&gt;&lt;a href=&quot;http://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;Basic Resource Access&lt;/a&gt; without the performance overhead of that package. This makes reading resources included in packages easier, with more stable and consistent semantics.</source>
          <target state="translated">该模块提供的功能类似于&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html&quot;&gt;pkg_resources &lt;/a&gt;&lt;a href=&quot;http://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;基本资源访问，&lt;/a&gt;而没有该程序包的性能开销。这使阅读包中包含的资源变得更加容易，并且语义更加稳定和一致。</target>
        </trans-unit>
        <trans-unit id="28f4e52d42dd6044272b64cfb79640a0b313d568" translate="yes" xml:space="preserve">
          <source>This module provides functionality similar to &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html&quot;&gt;pkg_resources&lt;/a&gt;&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;Basic Resource Access&lt;/a&gt; without the performance overhead of that package. This makes reading resources included in packages easier, with more stable and consistent semantics.</source>
          <target state="translated">该模块提供的功能类似于&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html&quot;&gt;pkg_resources&lt;/a&gt;&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/pkg_resources.html#basic-resource-access&quot;&gt;基本资源访问，&lt;/a&gt;而没有该程序包的性能开销。这使阅读包中包含的资源变得更加容易，并且语义更加稳定和一致。</target>
        </trans-unit>
        <trans-unit id="4b5ca63a2aecc796e502235c6d48c1ae2106dc46" translate="yes" xml:space="preserve">
          <source>This module provides functions for calculating mathematical statistics of numeric (&lt;a href=&quot;numbers#numbers.Real&quot;&gt;&lt;code&gt;Real&lt;/code&gt;&lt;/a&gt;-valued) data.</source>
          <target state="translated">此模块提供了用于计算数字（&lt;a href=&quot;numbers#numbers.Real&quot;&gt; &lt;code&gt;Real&lt;/code&gt; &lt;/a&gt;值）数据的数学统计量的功能。</target>
        </trans-unit>
        <trans-unit id="75398ee52262755abb3726df7ae90cc9e462672d" translate="yes" xml:space="preserve">
          <source>This module provides functions for encoding binary data to printable ASCII characters and decoding such encodings back to binary data. It provides encoding and decoding functions for the encodings specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3548&lt;/strong&gt;&lt;/a&gt;, which defines the Base16, Base32, and Base64 algorithms, and for the de-facto standard Ascii85 and Base85 encodings.</source>
          <target state="translated">该模块提供了将二进制数据编码为可打印的ASCII字符并将这些编码解码回二进制数据的功能。它为&lt;a href=&quot;https://tools.ietf.org/html/rfc3548.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 3548中&lt;/strong&gt;&lt;/a&gt;指定的编码（定义了Base16，Base32和Base64算法）以及事实上的标准Ascii85和Base85编码提供了编码和解码功能。</target>
        </trans-unit>
        <trans-unit id="f9ee787249598374b8b03ab5d0feb31c2f56e5d8" translate="yes" xml:space="preserve">
          <source>This module provides immutable &lt;a href=&quot;#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; objects (the &lt;a href=&quot;#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt; class) and the functions &lt;a href=&quot;#uuid.uuid1&quot;&gt;&lt;code&gt;uuid1()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid3&quot;&gt;&lt;code&gt;uuid3()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid4&quot;&gt;&lt;code&gt;uuid4()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#uuid.uuid5&quot;&gt;&lt;code&gt;uuid5()&lt;/code&gt;&lt;/a&gt; for generating version 1, 3, 4, and 5 UUIDs as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 4122&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块提供了不变的&lt;a href=&quot;#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt;对象（&lt;a href=&quot;#uuid.UUID&quot;&gt; &lt;code&gt;UUID&lt;/code&gt; &lt;/a&gt;类）和函数&lt;a href=&quot;#uuid.uuid1&quot;&gt; &lt;code&gt;uuid1()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#uuid.uuid3&quot;&gt; &lt;code&gt;uuid3()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#uuid.uuid4&quot;&gt; &lt;code&gt;uuid4()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#uuid.uuid5&quot;&gt; &lt;code&gt;uuid5()&lt;/code&gt; &lt;/a&gt;来生成&lt;a href=&quot;https://tools.ietf.org/html/rfc4122.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 4122中&lt;/strong&gt;&lt;/a&gt;指定的版本1、3、4和5 。</target>
        </trans-unit>
        <trans-unit id="06c6eafc483d258beab85551b483806ae97c5c22" translate="yes" xml:space="preserve">
          <source>This module provides limited support for &lt;a href=&quot;https://www.w3.org/TR/xinclude/&quot;&gt;XInclude directives&lt;/a&gt;, via the &lt;code&gt;xml.etree.ElementInclude&lt;/code&gt; helper module. This module can be used to insert subtrees and text strings into element trees, based on information in the tree.</source>
          <target state="translated">该模块通过 &lt;code&gt;xml.etree.ElementInclude&lt;/code&gt; 帮助器模块提供了对&lt;a href=&quot;https://www.w3.org/TR/xinclude/&quot;&gt;XInclude指令的&lt;/a&gt;有限支持。该模块可用于根据树中的信息将子树和文本字符串插入到元素树中。</target>
        </trans-unit>
        <trans-unit id="8e2b5842f0ed4029e7a99dedd0e7121a9e735bad" translate="yes" xml:space="preserve">
          <source>This module provides limited support for &lt;a href=&quot;https://www.w3.org/TR/xpath&quot;&gt;XPath expressions&lt;/a&gt; for locating elements in a tree. The goal is to support a small subset of the abbreviated syntax; a full XPath engine is outside the scope of the module.</source>
          <target state="translated">该模块为&lt;a href=&quot;https://www.w3.org/TR/xpath&quot;&gt;XPath表达式&lt;/a&gt;提供了有限的支持，用于在树中定位元素。目标是支持缩写语法的一小部分。完整的XPath引擎不在模块范围内。</target>
        </trans-unit>
        <trans-unit id="0bf7ba3f5539cc8e4d1e744ec755fce3ecc09d6b" translate="yes" xml:space="preserve">
          <source>This module provides low-level primitives for working with multiple threads (also called &lt;em&gt;light-weight processes&lt;/em&gt; or &lt;em&gt;tasks&lt;/em&gt;) &amp;mdash; multiple threads of control sharing their global data space. For synchronization, simple locks (also called &lt;em&gt;mutexes&lt;/em&gt; or &lt;em&gt;binary semaphores&lt;/em&gt;) are provided. The &lt;a href=&quot;threading#module-threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module provides an easier to use and higher-level threading API built on top of this module.</source>
          <target state="translated">此模块提供了用于处理多个线程（也称为&lt;em&gt;轻量级进程&lt;/em&gt;或&lt;em&gt;任务&lt;/em&gt;）的低级原语-多个控件线程共享其全局数据空间。为了进行同步，提供了简单的锁（也称为&lt;em&gt;互斥体&lt;/em&gt;或&lt;em&gt;二进制信号量&lt;/em&gt;）。该&lt;a href=&quot;threading#module-threading&quot;&gt; &lt;code&gt;threading&lt;/code&gt; &lt;/a&gt;模块提供了一个易于使用和更高级别的线程API建立在这个模块的顶部。</target>
        </trans-unit>
        <trans-unit id="d00695c8d8aaeb3205a3ed627d8ec50cee6867c5" translate="yes" xml:space="preserve">
          <source>This module provides mechanisms to use signal handlers in Python.</source>
          <target state="translated">该模块提供了在Python中使用信号处理程序的机制。</target>
        </trans-unit>
        <trans-unit id="f569226472a737263efed126429393dd8a849aa0" translate="yes" xml:space="preserve">
          <source>This module provides names for many of the types that are required to implement a Python interpreter. It deliberately avoids including some of the types that arise only incidentally during processing such as the &lt;code&gt;listiterator&lt;/code&gt; type.</source>
          <target state="translated">该模块提供了实现Python解释器所需的许多类型的名称。故意避免包括某些仅在处理过程中偶然出现的类型，例如 &lt;code&gt;listiterator&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="dd6ac6c47b580fce484cd078e849be51aa1988ef" translate="yes" xml:space="preserve">
          <source>This module provides one exception and one type object:</source>
          <target state="translated">本模块提供一个异常和一个类型对象。</target>
        </trans-unit>
        <trans-unit id="9cf56c38d255b7eb6778dc5332911ee7531ebe53" translate="yes" xml:space="preserve">
          <source>This module provides regular expression matching operations similar to those found in Perl.</source>
          <target state="translated">这个模块提供了类似于Perl中的正则表达式匹配操作。</target>
        </trans-unit>
        <trans-unit id="4b49c61f0886b25155c2b3daf9b55f7958df6ab6" translate="yes" xml:space="preserve">
          <source>This module provides runtime support for type hints as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0544&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.python.org/dev/peps/pep-0589&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 589&lt;/strong&gt;&lt;/a&gt;, and &lt;a href=&quot;https://www.python.org/dev/peps/pep-0591&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 591&lt;/strong&gt;&lt;/a&gt;. The most fundamental support consists of the types &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Union&quot;&gt;&lt;code&gt;Union&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.Callable&quot;&gt;&lt;code&gt;Callable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#typing.TypeVar&quot;&gt;&lt;code&gt;TypeVar&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#typing.Generic&quot;&gt;&lt;code&gt;Generic&lt;/code&gt;&lt;/a&gt;. For full specification please see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;. For a simplified introduction to type hints see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0483&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 483&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">该模块为&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://www.python.org/dev/peps/pep-0544&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 544&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://www.python.org/dev/peps/pep-0586&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;PEP 586&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://www.python.org/dev/peps/pep-0589&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 589&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://www.python.org/dev/peps/pep-0591&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;PEP 591&lt;/strong&gt;&lt;/a&gt;指定的类型提示提供运行时支持。最基本的支持包括类型&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#typing.Union&quot;&gt; &lt;code&gt;Union&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#typing.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#typing.Callable&quot;&gt; &lt;code&gt;Callable&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#typing.TypeVar&quot;&gt; &lt;code&gt;TypeVar&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#typing.Generic&quot;&gt; &lt;code&gt;Generic&lt;/code&gt; &lt;/a&gt;。有关完整规范，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;。有关类型提示的简化介绍，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0483&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;PEP 483&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="532cca5468b0ad145e3eab39e13ea225f5dbce6f" translate="yes" xml:space="preserve">
          <source>This module provides some utility functions to support installing Python libraries. These functions compile Python source files in a directory tree. This module can be used to create the cached byte-code files at library installation time, which makes them available for use even by users who don&amp;rsquo;t have write permission to the library directories.</source>
          <target state="translated">该模块提供了一些实用程序功能来支持安装Python库。这些函数在目录树中编译Python源文件。此模块可用于在库安装时创建缓存的字节码文件，即使没有对库目录的写许可权的用户也可以使用它们。</target>
        </trans-unit>
        <trans-unit id="81a0615691bbce1f954726677409cc9bb8dfb30a" translate="yes" xml:space="preserve">
          <source>This module provides support for Unix shell-style wildcards, which are &lt;em&gt;not&lt;/em&gt; the same as regular expressions (which are documented in the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module). The special characters used in shell-style wildcards are:</source>
          <target state="translated">该模块提供用于Unix shell风格的通配符，这是支持&lt;em&gt;不&lt;/em&gt;一样的正则表达式（这是中记录&lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt;模块）。Shell样式通配符中使用的特殊字符为：</target>
        </trans-unit>
        <trans-unit id="5ea0af12bd69eb91fa994fc1c788ed7bbb0a0fa5" translate="yes" xml:space="preserve">
          <source>This module provides support for a-LAW, u-LAW and Intel/DVI ADPCM encodings.</source>
          <target state="translated">该模块提供对a-LAW、u-LAW和Intel/DVI ADPCM编码的支持。</target>
        </trans-unit>
        <trans-unit id="37579753c5f46d08ff6a65e6a62810dd661abff2" translate="yes" xml:space="preserve">
          <source>This module provides support for maintaining a list in sorted order without having to sort the list after each insertion. For long lists of items with expensive comparison operations, this can be an improvement over the more common approach. The module is called &lt;a href=&quot;#module-bisect&quot;&gt;&lt;code&gt;bisect&lt;/code&gt;&lt;/a&gt; because it uses a basic bisection algorithm to do its work. The source code may be most useful as a working example of the algorithm (the boundary conditions are already right!).</source>
          <target state="translated">此模块支持按排序顺序维护列表，而不必在每次插入后对列表进行排序。对于比较操作昂贵的长清单项目，这可能是对较常见方法的一种改进。该模块称为&lt;a href=&quot;#module-bisect&quot;&gt; &lt;code&gt;bisect&lt;/code&gt; ,&lt;/a&gt;因为它使用基本的二等分算法来完成其工作。源代码可能是最有用的算法示例（边界条件已经正确！）。</target>
        </trans-unit>
        <trans-unit id="2ac8792580c07542d59388d307ee83f6895e01e4" translate="yes" xml:space="preserve">
          <source>This module provides support for reading and writing AIFF and AIFF-C files. AIFF is Audio Interchange File Format, a format for storing digital audio samples in a file. AIFF-C is a newer version of the format that includes the ability to compress the audio data.</source>
          <target state="translated">本模块提供了对AIFF和AIFF-C文件的读写支持。AIFF是Audio Interchange File Format,是一种在文件中存储数字音频样本的格式。AIFF-C是一种较新版本的格式,包括压缩音频数据的能力。</target>
        </trans-unit>
        <trans-unit id="f619454e0cd883753f5aa29d59051c7efdc95c1c" translate="yes" xml:space="preserve">
          <source>This module provides the &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; class which implements a basic configuration language which provides a structure similar to what&amp;rsquo;s found in Microsoft Windows INI files. You can use this to write Python programs which can be customized by end users easily.</source>
          <target state="translated">该模块提供了&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; &lt;/a&gt;类，该类实现了一种基本配置语言，该语言提供的结构类似于Microsoft Windows INI文件中的结构。您可以使用它来编写可由最终用户轻松定制的Python程序。</target>
        </trans-unit>
        <trans-unit id="2196f022a345bbb2d0d9ec4089afe9f49eb7ee67" translate="yes" xml:space="preserve">
          <source>This module provides the basic infrastructure for writing asynchronous socket service clients and servers.</source>
          <target state="translated">该模块提供了编写异步套接字服务客户端和服务器的基本架构。</target>
        </trans-unit>
        <trans-unit id="5de5cc5107720c846f4c171dd1d059a801f1f751" translate="yes" xml:space="preserve">
          <source>This module provides the following function:</source>
          <target state="translated">本模块提供以下功能:</target>
        </trans-unit>
        <trans-unit id="0820fe444c091f886715862b85c51be5074c2d42" translate="yes" xml:space="preserve">
          <source>This module provides the infrastructure for defining &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; (ABCs) in Python, as outlined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119&lt;/strong&gt;&lt;/a&gt;; see the PEP for why this was added to Python. (See also &lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt; and the &lt;a href=&quot;numbers#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt; module regarding a type hierarchy for numbers based on ABCs.)</source>
          <target state="translated">该模块提供了用于在Python中定义&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;（ABC）的基础结构，如&lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119中所述&lt;/strong&gt;&lt;/a&gt;；有关为何将其添加到Python的信息，请参阅PEP。（另请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt;和有关基于ABC的数字的类型层次结构的&lt;a href=&quot;numbers#module-numbers&quot;&gt; &lt;code&gt;numbers&lt;/code&gt; &lt;/a&gt;模块。）</target>
        </trans-unit>
        <trans-unit id="57af032eecf847e31b6d20be78ab2f19d6d82731" translate="yes" xml:space="preserve">
          <source>This module provides the infrastructure for defining &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;abstract base classes&lt;/a&gt; (ABCs) in Python, as outlined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119&lt;/strong&gt;&lt;/a&gt;; see the PEP for why this was added to Python. (See also &lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt; and the &lt;a href=&quot;numbers#module-numbers&quot;&gt;&lt;code&gt;numbers&lt;/code&gt;&lt;/a&gt; module regarding a type hierarchy for numbers based on ABCs.)</source>
          <target state="translated">该模块提供了用于在Python中定义&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-abstract-base-class&quot;&gt;抽象基类&lt;/a&gt;（ABC）的基础结构，如&lt;a href=&quot;https://www.python.org/dev/peps/pep-3119&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3119中所述&lt;/strong&gt;&lt;/a&gt;；有关为什么将其添加到Python的信息，请参见PEP。（另请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-3141&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3141&lt;/strong&gt;&lt;/a&gt;和有关基于ABC的数字的类型层次结构的&lt;a href=&quot;numbers#module-numbers&quot;&gt; &lt;code&gt;numbers&lt;/code&gt; &lt;/a&gt;模块。）</target>
        </trans-unit>
        <trans-unit id="f69215bf3ed347a2cba2f5ecd0a5495f835fbb5b" translate="yes" xml:space="preserve">
          <source>This module provides the metaclass &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt; for defining ABCs and a helper class &lt;a href=&quot;#abc.ABC&quot;&gt;&lt;code&gt;ABC&lt;/code&gt;&lt;/a&gt; to alternatively define ABCs through inheritance:</source>
          <target state="translated">此模块提供用于定义ABC 的元类&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; 和&lt;/a&gt;用于通过继承来替代定义ABC 的辅助类&lt;a href=&quot;#abc.ABC&quot;&gt; &lt;code&gt;ABC&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="78b52d81ca4d921802dd5d8de6b28e9b2b042b84" translate="yes" xml:space="preserve">
          <source>This module provides tools to manage the creation of zip files containing Python code, which can be &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-interface-options&quot;&gt;executed directly by the Python interpreter&lt;/a&gt;. The module provides both a &lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; and a &lt;a href=&quot;#zipapp-python-api&quot;&gt;Python API&lt;/a&gt;.</source>
          <target state="translated">该模块提供了一些工具来管理包含Python代码的zip文件的创建，这些文件可以&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#using-on-interface-options&quot;&gt;由Python解释器直接执行&lt;/a&gt;。该模块提供了&lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;命令行界面&lt;/a&gt;和&lt;a href=&quot;#zipapp-python-api&quot;&gt;Python API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fbdfd5b2e7377c2332a86021c72d22630439b201" translate="yes" xml:space="preserve">
          <source>This module provides tools to manage the creation of zip files containing Python code, which can be &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-interface-options&quot;&gt;executed directly by the Python interpreter&lt;/a&gt;. The module provides both a &lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;Command-Line Interface&lt;/a&gt; and a &lt;a href=&quot;#zipapp-python-api&quot;&gt;Python API&lt;/a&gt;.</source>
          <target state="translated">该模块提供了一些工具来管理包含Python代码的zip文件的创建，这些文件可以&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#using-on-interface-options&quot;&gt;由Python解释器直接执行&lt;/a&gt;。该模块提供了&lt;a href=&quot;#zipapp-command-line-interface&quot;&gt;命令行界面&lt;/a&gt;和&lt;a href=&quot;#zipapp-python-api&quot;&gt;Python API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="53a874565a2be8671d555dddd96ba1951dc626bc" translate="yes" xml:space="preserve">
          <source>This module provides two functions and an exception:</source>
          <target state="translated">该模块提供了两个函数和一个异常。</target>
        </trans-unit>
        <trans-unit id="0c692d34344adf8940dacd20d0010b650d9e4c65" translate="yes" xml:space="preserve">
          <source>This module provides utilities for common tasks involving the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. For more information see also &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#context-managers&quot;&gt;With Statement Context Managers&lt;/a&gt;.</source>
          <target state="translated">该模块为涉及&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的常见任务提供实用程序。有关更多信息，另请参见&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;上下文管理器类型&lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#context-managers&quot;&gt;带语句上下文管理器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb5bfbe9a9c3613ce2efa4df6cc227770ea75a2b" translate="yes" xml:space="preserve">
          <source>This module provides utilities for common tasks involving the &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. For more information see also &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#context-managers&quot;&gt;With Statement Context Managers&lt;/a&gt;.</source>
          <target state="translated">该模块为涉及&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句的常见任务提供实用程序。有关更多信息，另请参见&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;上下文管理器类型&lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#context-managers&quot;&gt;With语句上下文管理器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="426dcc1cbaf25e58643c58a6a6297e1a618dac4e" translate="yes" xml:space="preserve">
          <source>This module provides utilities for the import system, in particular package support.</source>
          <target state="translated">该模块为导入系统提供了实用工具,特别是包支持。</target>
        </trans-unit>
        <trans-unit id="240bcd19bf3933f07143845b5b85dc5d035b4c64" translate="yes" xml:space="preserve">
          <source>This module provides various time-related functions. For related functionality, see also the &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#module-calendar&quot;&gt;&lt;code&gt;calendar&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">该模块提供各种与时间相关的功能。有关相关功能，另请参见&lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;calendar#module-calendar&quot;&gt; &lt;code&gt;calendar&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="ac4e99ea575234e3006a32d19f75118193efada6" translate="yes" xml:space="preserve">
          <source>This module uses the &lt;code&gt;pyexpat&lt;/code&gt; module to provide access to the Expat parser. Direct use of the &lt;code&gt;pyexpat&lt;/code&gt; module is deprecated.</source>
          <target state="translated">该模块使用 &lt;code&gt;pyexpat&lt;/code&gt; 模块提供对Expat解析器的访问。不建议直接使用 &lt;code&gt;pyexpat&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="31f73bbb9aa85c31966124e47f8da4d30bd39d6f" translate="yes" xml:space="preserve">
          <source>This module wraps the system &lt;code&gt;syslog&lt;/code&gt; family of routines. A pure Python library that can speak to a syslog server is available in the &lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt;&lt;code&gt;logging.handlers&lt;/code&gt;&lt;/a&gt; module as &lt;code&gt;SysLogHandler&lt;/code&gt;.</source>
          <target state="translated">此模块包装系统 &lt;code&gt;syslog&lt;/code&gt; 例程例程。&lt;a href=&quot;logging.handlers#module-logging.handlers&quot;&gt; &lt;code&gt;logging.handlers&lt;/code&gt; &lt;/a&gt;模块中提供了可以与syslog服务器对话的纯Python库，即 &lt;code&gt;SysLogHandler&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="170f67191f0a6157cc696b7d62194d8e091d8fba" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s encoders and decoders preserve input and output order by default. Order is only lost if the underlying containers are unordered.</source>
          <target state="translated">默认情况下，此模块的编码器和解码器保留输入和输出顺序。仅当基础容器未排序时，订单才会丢失。</target>
        </trans-unit>
        <trans-unit id="fe2fb497e72f94f41104bc9280245ecfb5cf62f7" translate="yes" xml:space="preserve">
          <source>This must be called at most once per process object. It arranges for the object&amp;rsquo;s &lt;a href=&quot;#multiprocessing.Process.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method to be invoked in a separate process.</source>
          <target state="translated">每个过程对象最多只能调用一次。它安排在单独的进程中调用对象的&lt;a href=&quot;#multiprocessing.Process.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="34820797f6502a43638f2f7818d676aebe5d8e98" translate="yes" xml:space="preserve">
          <source>This must be called to make sure that any underlying resource is freed. The selector shall not be used once it has been closed.</source>
          <target state="translated">必须调用该函数以确保任何底层资源被释放。选择器一旦被关闭,就不得使用。</target>
        </trans-unit>
        <trans-unit id="48f128b07ca17bd85e39bdec0199f67b2269762f" translate="yes" xml:space="preserve">
          <source>This mutates the function(s) in place.</source>
          <target state="translated">这将使函数的位置发生变化。</target>
        </trans-unit>
        <trans-unit id="e1dda5ba415b7dbd31f5962a5276f8c7e29e022d" translate="yes" xml:space="preserve">
          <source>This non-public class is the base class of all fundamental ctypes data types. It is mentioned here because it contains the common attributes of the fundamental ctypes data types. &lt;a href=&quot;#ctypes._SimpleCData&quot;&gt;&lt;code&gt;_SimpleCData&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#ctypes._CData&quot;&gt;&lt;code&gt;_CData&lt;/code&gt;&lt;/a&gt;, so it inherits their methods and attributes. ctypes data types that are not and do not contain pointers can now be pickled.</source>
          <target state="translated">此非公共类是所有基本ctypes数据类型的基类。这里提到它是因为它包含基本ctypes数据类型的公共属性。&lt;a href=&quot;#ctypes._SimpleCData&quot;&gt; &lt;code&gt;_SimpleCData&lt;/code&gt; &lt;/a&gt;是的子类&lt;a href=&quot;#ctypes._CData&quot;&gt; &lt;code&gt;_CData&lt;/code&gt; &lt;/a&gt;，所以它继承他们的方法和属性。现在可以腌制不包含指针的ctypes数据类型。</target>
        </trans-unit>
        <trans-unit id="c76670a6aef8581c98df691553b9d5b3bb79b20e" translate="yes" xml:space="preserve">
          <source>This non-public class is the common base class of all ctypes data types. Among other things, all ctypes type instances contain a memory block that hold C compatible data; the address of the memory block is returned by the &lt;a href=&quot;#ctypes.addressof&quot;&gt;&lt;code&gt;addressof()&lt;/code&gt;&lt;/a&gt; helper function. Another instance variable is exposed as &lt;a href=&quot;#ctypes._CData._objects&quot;&gt;&lt;code&gt;_objects&lt;/code&gt;&lt;/a&gt;; this contains other Python objects that need to be kept alive in case the memory block contains pointers.</source>
          <target state="translated">此非公共类是所有ctypes数据类型的通用基类。除其他外，所有ctypes类型实例都包含一个存储与C兼容的数据的内存块。内存块的地址由&lt;a href=&quot;#ctypes.addressof&quot;&gt; &lt;code&gt;addressof()&lt;/code&gt; &lt;/a&gt;辅助函数返回。另一个实例变量公开为&lt;a href=&quot;#ctypes._CData._objects&quot;&gt; &lt;code&gt;_objects&lt;/code&gt; &lt;/a&gt;；它包含其他Python对象，以防内存块包含指针。</target>
        </trans-unit>
        <trans-unit id="740946fe8f7e39fc96693fd9ee1e22af0668e216" translate="yes" xml:space="preserve">
          <source>This number is not equivalent to the number of CPUs the current process can use. The number of usable CPUs can be obtained with &lt;code&gt;len(os.sched_getaffinity(0))&lt;/code&gt;</source>
          <target state="translated">该数目不等于当前进程可以使用的CPU数目。可使用 &lt;code&gt;len(os.sched_getaffinity(0))&lt;/code&gt; 获得可用的CPU数量</target>
        </trans-unit>
        <trans-unit id="963cb426c9fe5ee3c933f73bb84480436af3d679" translate="yes" xml:space="preserve">
          <source>This object is commonly used by slicing (see &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#slicings&quot;&gt;Slicings&lt;/a&gt;). It supports no special operations. There is exactly one ellipsis object, named &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; (a built-in name). &lt;code&gt;type(Ellipsis)()&lt;/code&gt; produces the &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; singleton.</source>
          <target state="translated">切片通常使用此对象（请参阅&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#slicings&quot;&gt;切片&lt;/a&gt;）。它不支持任何特殊操作。恰好有一个省略号对象，名为&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;（内置名称）。 &lt;code&gt;type(Ellipsis)()&lt;/code&gt; 产生&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;单例。</target>
        </trans-unit>
        <trans-unit id="ab4deaf35fc353a14e19626266588abfee71ef58" translate="yes" xml:space="preserve">
          <source>This object is commonly used by slicing (see &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#slicings&quot;&gt;Slicings&lt;/a&gt;). It supports no special operations. There is exactly one ellipsis object, named &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; (a built-in name). &lt;code&gt;type(Ellipsis)()&lt;/code&gt; produces the &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; singleton.</source>
          <target state="translated">切片通常使用此对象（请参阅&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#slicings&quot;&gt;切片&lt;/a&gt;）。它不支持任何特殊操作。恰好有一个省略号对象，名为&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;（内置名称）。 &lt;code&gt;type(Ellipsis)()&lt;/code&gt; 产生&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;单例。</target>
        </trans-unit>
        <trans-unit id="b844f2c0b6c0d04b3d9d3222fe2598ca13a1ddaf" translate="yes" xml:space="preserve">
          <source>This object is returned by functions that don&amp;rsquo;t explicitly return a value. It supports no special operations. There is exactly one null object, named &lt;code&gt;None&lt;/code&gt; (a built-in name). &lt;code&gt;type(None)()&lt;/code&gt; produces the same singleton.</source>
          <target state="translated">该对象由未显式返回值的函数返回。它不支持任何特殊操作。恰好有一个空对象，名为 &lt;code&gt;None&lt;/code&gt; （一个内置名称）。 &lt;code&gt;type(None)()&lt;/code&gt; 产生相同的单例。</target>
        </trans-unit>
        <trans-unit id="373dd28a7f907a4136a7383316dd88a1c0e4e77a" translate="yes" xml:space="preserve">
          <source>This object is returned from comparisons and binary operations when they are asked to operate on types they don&amp;rsquo;t support. See &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information. There is exactly one &lt;code&gt;NotImplemented&lt;/code&gt; object. &lt;code&gt;type(NotImplemented)()&lt;/code&gt; produces the singleton instance.</source>
          <target state="translated">当要求它们对不支持的类型进行操作时，该对象将从比较和二进制操作返回。有关更多信息，请参见&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#comparisons&quot;&gt;比较&lt;/a&gt;。恰好有一个 &lt;code&gt;NotImplemented&lt;/code&gt; 对象。 &lt;code&gt;type(NotImplemented)()&lt;/code&gt; 产生单例实例。</target>
        </trans-unit>
        <trans-unit id="4b8c490a5ffaf5c5a318b1ff98f7e2b634edc506" translate="yes" xml:space="preserve">
          <source>This object is returned from comparisons and binary operations when they are asked to operate on types they don&amp;rsquo;t support. See &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#comparisons&quot;&gt;Comparisons&lt;/a&gt; for more information. There is exactly one &lt;code&gt;NotImplemented&lt;/code&gt; object. &lt;code&gt;type(NotImplemented)()&lt;/code&gt; produces the singleton instance.</source>
          <target state="translated">当要求它们对不支持的类型进行操作时，该对象将从比较和二进制操作中返回。有关更多信息，请参见&lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#comparisons&quot;&gt;比较&lt;/a&gt;。恰好有一个 &lt;code&gt;NotImplemented&lt;/code&gt; 对象。 &lt;code&gt;type(NotImplemented)()&lt;/code&gt; 产生单例实例。</target>
        </trans-unit>
        <trans-unit id="512161437251ac84d2bdd0e799c3a5434535b949" translate="yes" xml:space="preserve">
          <source>This object wraps a Windows HKEY object, automatically closing it when the object is destroyed. To guarantee cleanup, you can call either the &lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt;&lt;code&gt;Close()&lt;/code&gt;&lt;/a&gt; method on the object, or the &lt;a href=&quot;#winreg.CloseKey&quot;&gt;&lt;code&gt;CloseKey()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">该对象包装Windows HKEY对象，在销毁该对象时自动将其关闭。为了保证清理，您可以在对象上调用&lt;a href=&quot;#winreg.PyHKEY.Close&quot;&gt; &lt;code&gt;Close()&lt;/code&gt; &lt;/a&gt;方法，也可以调用&lt;a href=&quot;#winreg.CloseKey&quot;&gt; &lt;code&gt;CloseKey()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="3f694a7e94fdd2625c9751da67b75e646e6e0eee" translate="yes" xml:space="preserve">
          <source>This one step operation is more efficient than a &lt;a href=&quot;#heapq.heappop&quot;&gt;&lt;code&gt;heappop()&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;#heapq.heappush&quot;&gt;&lt;code&gt;heappush()&lt;/code&gt;&lt;/a&gt; and can be more appropriate when using a fixed-size heap. The pop/push combination always returns an element from the heap and replaces it with &lt;em&gt;item&lt;/em&gt;.</source>
          <target state="translated">这一步操作比更有效的&lt;a href=&quot;#heapq.heappop&quot;&gt; &lt;code&gt;heappop()&lt;/code&gt; &lt;/a&gt;后跟&lt;a href=&quot;#heapq.heappush&quot;&gt; &lt;code&gt;heappush()&lt;/code&gt; &lt;/a&gt;，并使用一个固定大小的堆时可以是更合适的。pop / push组合始终从堆中返回一个元素，并将其替换为&lt;em&gt;item&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a823fede68f63279bdb3b91e0ab2e8b71d8e4b25" translate="yes" xml:space="preserve">
          <source>This only applies to classes or already instantiated objects. Calling a mocked class to create a mock instance &lt;em&gt;does not&lt;/em&gt; create a real instance. It is only attribute lookups - along with calls to &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; - that are done.</source>
          <target state="translated">这仅适用于类或已实例化的对象。调用模拟类来创建模拟实例&lt;em&gt;不会&lt;/em&gt;创建真实实例。仅完成属性查找以及对&lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; 的&lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="7c1390712c98925d63c320a49629f3fecfdd36f9" translate="yes" xml:space="preserve">
          <source>This only works when native size and alignment are in effect; standard size and alignment does not enforce any alignment.</source>
          <target state="translated">这只有在本机尺寸和对齐方式有效时才有效;标准尺寸和对齐方式不强制执行任何对齐方式。</target>
        </trans-unit>
        <trans-unit id="8491f7168c80d0674be016b49eaa3606a3426c2f" translate="yes" xml:space="preserve">
          <source>This only works with functions that can be called without arguments.</source>
          <target state="translated">这只适用于没有参数就可以调用的函数。</target>
        </trans-unit>
        <trans-unit id="cac8febff77df306a94e5b6eb192f6b009ce3a64" translate="yes" xml:space="preserve">
          <source>This opcode performs several operations before a with block starts. First, it loads &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; from the context manager and pushes it onto the stack for later use by &lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt;&lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;&lt;/a&gt;. Then, &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; is called, and a finally block pointing to &lt;em&gt;delta&lt;/em&gt; is pushed. Finally, the result of calling the &lt;code&gt;__enter__()&lt;/code&gt; method is pushed onto the stack. The next opcode will either ignore it (&lt;a href=&quot;#opcode-POP_TOP&quot;&gt;&lt;code&gt;POP_TOP&lt;/code&gt;&lt;/a&gt;), or store it in (a) variable(s) (&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-STORE_NAME&quot;&gt;&lt;code&gt;STORE_NAME&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt;&lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">此操作码在with块开始之前执行若干操作。首先，它从上下文管理器中加载&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;并将其压入堆栈，以供&lt;a href=&quot;#opcode-WITH_CLEANUP_START&quot;&gt; &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; &lt;/a&gt;稍后使用。然后，调用&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;，并压入指向&lt;em&gt;delta&lt;/em&gt;的finally块。最后，调用 &lt;code&gt;__enter__()&lt;/code&gt; 方法的结果被压入堆栈。下一个操作码将忽略它（&lt;a href=&quot;#opcode-POP_TOP&quot;&gt; &lt;code&gt;POP_TOP&lt;/code&gt; &lt;/a&gt;），或将其存储在一个或多个变量中（&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#opcode-STORE_NAME&quot;&gt; &lt;code&gt;STORE_NAME&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt; &lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0634c0718f8471af7f575c9f0bbf22c9be0c9321" translate="yes" xml:space="preserve">
          <source>This opcode performs several operations before a with block starts. First, it loads &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; from the context manager and pushes it onto the stack for later use by &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt;. Then, &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; is called, and a finally block pointing to &lt;em&gt;delta&lt;/em&gt; is pushed. Finally, the result of calling the &lt;code&gt;__enter__()&lt;/code&gt; method is pushed onto the stack. The next opcode will either ignore it (&lt;a href=&quot;#opcode-POP_TOP&quot;&gt;&lt;code&gt;POP_TOP&lt;/code&gt;&lt;/a&gt;), or store it in (a) variable(s) (&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opcode-STORE_NAME&quot;&gt;&lt;code&gt;STORE_NAME&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt;&lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">此操作码在with块开始之前执行若干操作。首先，它从上下文管理器中加载&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;并将其推入堆栈，以供 &lt;code&gt;WITH_CLEANUP_START&lt;/code&gt; 稍后使用。然后，调用&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;，并压入指向&lt;em&gt;delta&lt;/em&gt;的finally块。最后，调用 &lt;code&gt;__enter__()&lt;/code&gt; 方法的结果被压入堆栈。下一个操作码将忽略它（&lt;a href=&quot;#opcode-POP_TOP&quot;&gt; &lt;code&gt;POP_TOP&lt;/code&gt; &lt;/a&gt;），或将其存储在一个或多个变量中（&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#opcode-STORE_NAME&quot;&gt; &lt;code&gt;STORE_NAME&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#opcode-UNPACK_SEQUENCE&quot;&gt; &lt;code&gt;UNPACK_SEQUENCE&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="313d9da8aace736fbdf7186c1695da7951657092" translate="yes" xml:space="preserve">
          <source>This operation is identical to the &lt;a href=&quot;#decimal.Decimal.compare&quot;&gt;&lt;code&gt;compare()&lt;/code&gt;&lt;/a&gt; method, except that all NaNs signal. That is, if neither operand is a signaling NaN then any quiet NaN operand is treated as though it were a signaling NaN.</source>
          <target state="translated">除了所有NaN信号外，此操作与&lt;a href=&quot;#decimal.Decimal.compare&quot;&gt; &lt;code&gt;compare()&lt;/code&gt; &lt;/a&gt;方法相同。也就是说，如果两个操作数都不是信令NaN，则将任何安静的NaN操作数都视为信令NaN。</target>
        </trans-unit>
        <trans-unit id="991deaeff8f34412ebcb4ce1e4126533013440db" translate="yes" xml:space="preserve">
          <source>This operation is not commutative; that is, the order in which the objects are added matters. To illustrate:</source>
          <target state="translated">这种操作不是换算的,也就是说,对象的添加顺序很重要。举例说明一下。</target>
        </trans-unit>
        <trans-unit id="aa630c07e9d7ab0e136db1e517de3ecc0ff9bd2c" translate="yes" xml:space="preserve">
          <source>This operation is unaffected by context and is quiet: no flags are changed and no rounding is performed. As an exception, the C version may raise InvalidOperation if the second operand cannot be converted exactly.</source>
          <target state="translated">这个操作不受上下文的影响,而且是安静的:不改变标志,不进行舍入。作为一个例外,如果第二个操作数不能精确转换,C版可能会引发InvalidOperation。</target>
        </trans-unit>
        <trans-unit id="176ced1eb3f5bf8845c639dbb51a09e9508afa25" translate="yes" xml:space="preserve">
          <source>This option accepts a dictionary of key-value pairs which will be initially put in the &lt;code&gt;DEFAULT&lt;/code&gt; section. This makes for an elegant way to support concise configuration files that don&amp;rsquo;t specify values which are the same as the documented default.</source>
          <target state="translated">此选项接受键值对的字典，该字典将最初放在 &lt;code&gt;DEFAULT&lt;/code&gt; 部分中。这提供了一种优雅的方式来支持简洁的配置文件，这些文件不指定与记录的默认值相同的值。</target>
        </trans-unit>
        <trans-unit id="f43ed818af4a0dd2fed506e4816b93171f3fb141" translate="yes" xml:space="preserve">
          <source>This option causes child processes to be reported if they have been continued from a job control stop since their status was last reported.</source>
          <target state="translated">如果子流程自上次报告状态后一直从作业控制停止后继续,该选项将导致报告子流程。</target>
        </trans-unit>
        <trans-unit id="4c173be1061ff8f92789c6a05bd6547238cbee92" translate="yes" xml:space="preserve">
          <source>This option causes child processes to be reported if they have been stopped but their current state has not been reported since they were stopped.</source>
          <target state="translated">如果子进程已被停止,但自停止后未报告其当前状态,则该选项将导致报告子进程。</target>
        </trans-unit>
        <trans-unit id="bd25c253ae0fbe8dac6cdfa6da993ae2705ef862" translate="yes" xml:space="preserve">
          <source>This option has a major impact on how the mapping protocol will behave and how the written configuration files look. With the standard dictionary, every section is stored in the order they were added to the parser. Same goes for options within sections.</source>
          <target state="translated">这个选项对映射协议的行为和写入的配置文件的外观有很大影响。在标准字典中,每个部分都是按照它们被添加到解析器中的顺序来存储的。节内的选项也是如此。</target>
        </trans-unit>
        <trans-unit id="16c96f0e42e4f0bff3231f79690ddc19085854f5" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.0.0 and later.</source>
          <target state="translated">这个选项只有在OpenSSL 1.0.0及以后的版本中才有。</target>
        </trans-unit>
        <trans-unit id="72bc5dd56d04de1e5181cb11caa2002a31734fdb" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.1.0h and later.</source>
          <target state="translated">这个选项只在OpenSSL 1.1.0h及以后的版本中可用。</target>
        </trans-unit>
        <trans-unit id="bebfe076248522a6111b1310b00379d95c7a89fb" translate="yes" xml:space="preserve">
          <source>This option is only available with OpenSSL 1.1.1 and later.</source>
          <target state="translated">这个选项只有在OpenSSL 1.1.1及以后的版本中才有。</target>
        </trans-unit>
        <trans-unit id="6c8bc57c8b0475c7eb59cb85bd797fcf73565e85" translate="yes" xml:space="preserve">
          <source>This option is useful when the &lt;code&gt;.pycs&lt;/code&gt; are kept up to date by some system external to Python like a build system.</source>
          <target state="translated">当 &lt;code&gt;.pycs&lt;/code&gt; 由Python外部的某些系统（例如构建系统）保持最新时，此选项很有用。</target>
        </trans-unit>
        <trans-unit id="4e1bd246b58f88c014640c5eb110fa16e17dbeb9" translate="yes" xml:space="preserve">
          <source>This package aims to provide complete access to all tables in an &lt;code&gt;.msi&lt;/code&gt; file, therefore, it is a fairly low-level API. Two primary applications of this package are the &lt;a href=&quot;distutils#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; command &lt;code&gt;bdist_msi&lt;/code&gt;, and the creation of Python installer package itself (although that currently uses a different version of &lt;code&gt;msilib&lt;/code&gt;).</source>
          <target state="translated">该软件包旨在提供对 &lt;code&gt;.msi&lt;/code&gt; 文件中所有表的完整访问权限，因此，它是一个相当低级的API。该软件包的两个主要应用是&lt;a href=&quot;distutils#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt;命令 &lt;code&gt;bdist_msi&lt;/code&gt; ，以及Python安装程序软件包本身的创建（尽管当前使用的是不同版本的 &lt;code&gt;msilib&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2f59df83b2650e44df89565daa6593f433915b0b" translate="yes" xml:space="preserve">
          <source>This package provides the following functionality via its public API.</source>
          <target state="translated">该包通过其公共API提供了以下功能。</target>
        </trans-unit>
        <trans-unit id="a4dcd679549a3569e0d901cdbbb0b336792e6f5b" translate="yes" xml:space="preserve">
          <source>This page contains only reference information. For tutorials, please see</source>
          <target state="translated">本页仅包含参考信息。有关教程,请参见</target>
        </trans-unit>
        <trans-unit id="99d5b0c64faa9b400278e91ba69343a0b5046a2b" translate="yes" xml:space="preserve">
          <source>This page contains the API reference information. For a more gentle introduction to Python command-line parsing, have a look at the &lt;a href=&quot;https://docs.python.org/3.8/howto/argparse.html#id1&quot;&gt;argparse tutorial&lt;/a&gt;.</source>
          <target state="translated">此页面包含API参考信息。有关Python命令行解析的更详尽介绍，请参阅&lt;a href=&quot;https://docs.python.org/3.8/howto/argparse.html#id1&quot;&gt;argparse教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10edc2184324079f85e7a47bf8d611be4bbb02bb" translate="yes" xml:space="preserve">
          <source>This page contains the API reference information. For a more gentle introduction to Python command-line parsing, have a look at the &lt;a href=&quot;https://docs.python.org/3.9/howto/argparse.html#id1&quot;&gt;argparse tutorial&lt;/a&gt;.</source>
          <target state="translated">此页面包含API参考信息。有关Python命令行解析的更详尽的介绍，请参阅&lt;a href=&quot;https://docs.python.org/3.9/howto/argparse.html#id1&quot;&gt;argparse教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d57afe6c7c2f694060b1b6dc9dffd606c3e2bd5d" translate="yes" xml:space="preserve">
          <source>This page contains the API reference information. For tutorial information and discussion of more advanced topics, see</source>
          <target state="translated">本页包含API参考信息。关于教程信息和更多高级主题的讨论,请参见</target>
        </trans-unit>
        <trans-unit id="abd99e93d1788287c10945f7bf1a3b651f0e4bbc" translate="yes" xml:space="preserve">
          <source>This page lists all high-level async/await enabled asyncio APIs.</source>
          <target state="translated">本页列出了所有高级异步/等待启用的异步API。</target>
        </trans-unit>
        <trans-unit id="af36919b0eb5898742194c69e579c9121a244ce2" translate="yes" xml:space="preserve">
          <source>This page lists all low-level asyncio APIs.</source>
          <target state="translated">本页列出了所有低级asyncio APIs。</target>
        </trans-unit>
        <trans-unit id="c59bcfe5efc3f66dd12c6e8c605fc2ec05d0ca87" translate="yes" xml:space="preserve">
          <source>This page lists common mistakes and traps and explains how to avoid them.</source>
          <target state="translated">本页列出了常见的错误和陷阱,并解释了如何避免它们。</target>
        </trans-unit>
        <trans-unit id="6a649998fc13cbb981eec7f1d51e9b5c806a8076" translate="yes" xml:space="preserve">
          <source>This parser does not check that end tags match start tags or call the end-tag handler for elements which are closed implicitly by closing an outer element.</source>
          <target state="translated">这个解析器不会检查结束标签是否与开始标签相匹配,也不会调用结束标签处理程序来处理那些通过关闭外部元素而隐式关闭的元素。</target>
        </trans-unit>
        <trans-unit id="251eac7a50085ef7a42d5d72edffe30c06f0d3d5" translate="yes" xml:space="preserve">
          <source>This password manager extends &lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt;&lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt;&lt;/a&gt; to support tracking URIs for which authentication credentials should always be sent.</source>
          <target state="translated">该密码管理器扩展了&lt;a href=&quot;#urllib.request.HTTPPasswordMgrWithDefaultRealm&quot;&gt; &lt;code&gt;HTTPPasswordMgrWithDefaultRealm&lt;/code&gt; ,&lt;/a&gt;以支持应始终为其发送身份验证凭据的跟踪URI。</target>
        </trans-unit>
        <trans-unit id="83824ec275a8bb0657762c62de305421c239b1c7" translate="yes" xml:space="preserve">
          <source>This pointer is initialized to point to an array of &lt;code&gt;struct _frozen&lt;/code&gt; records, terminated by one whose members are all &lt;code&gt;NULL&lt;/code&gt; or zero. When a frozen module is imported, it is searched in this table. Third-party code could play tricks with this to provide a dynamically created collection of frozen modules.</source>
          <target state="translated">该指针被初始化为指向一个 &lt;code&gt;struct _frozen&lt;/code&gt; 记录数组，该数组以成员均为 &lt;code&gt;NULL&lt;/code&gt; 或零的成员终止。导入冻结的模块后，将在此表中对其进行搜索。第三方代码可以以此来提供动态创建的冻结模块集合。</target>
        </trans-unit>
        <trans-unit id="8a179a8b88966d1778c24d39e80f26cc93c31609" translate="yes" xml:space="preserve">
          <source>This policy adds new header parsing and folding algorithms. Instead of simple strings, headers are &lt;code&gt;str&lt;/code&gt; subclasses with attributes that depend on the type of the field. The parsing and folding algorithm fully implement &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">此策略添加了新的标头解析和折叠算法。标题不是简单的字符串，而是 &lt;code&gt;str&lt;/code&gt; 子类，其属性取决于字段的类型。解析和折叠算法完全实现&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e3ec424cca6a1dcde14079306440b52ccfa4d39" translate="yes" xml:space="preserve">
          <source>This produces output similar to that of the traceback module for the frames retrieved by &lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt;&lt;code&gt;get_stack()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;#asyncio.Task.get_stack&quot;&gt; &lt;code&gt;get_stack()&lt;/code&gt; &lt;/a&gt;检索到的帧，这将产生与回溯模块相似的输出。</target>
        </trans-unit>
        <trans-unit id="c993a95e1beba698427bfb2774b0a105ae89b003" translate="yes" xml:space="preserve">
          <source>This protocol is not available if OpenSSL is compiled with the &lt;code&gt;OPENSSL_NO_SSL2&lt;/code&gt; flag.</source>
          <target state="translated">如果使用 &lt;code&gt;OPENSSL_NO_SSL2&lt;/code&gt; 标志编译OpenSSL，则此协议不可用。</target>
        </trans-unit>
        <trans-unit id="616b13c085995e597cd4f60e683f235ef1464679" translate="yes" xml:space="preserve">
          <source>This protocol is not be available if OpenSSL is compiled with the &lt;code&gt;OPENSSL_NO_SSLv3&lt;/code&gt; flag.</source>
          <target state="translated">如果使用 &lt;code&gt;OPENSSL_NO_SSLv3&lt;/code&gt; 标志编译OpenSSL，则此协议不可用。</target>
        </trans-unit>
        <trans-unit id="d167c001e1794993e4c845fbc35891fc1ca3d578" translate="yes" xml:space="preserve">
          <source>This puts &lt;code&gt;_()&lt;/code&gt; only in the module&amp;rsquo;s global namespace and so only affects calls within this module.</source>
          <target state="translated">这仅将 &lt;code&gt;_()&lt;/code&gt; 放在模块的全局名称空间中，因此仅影响此模块内的调用。</target>
        </trans-unit>
        <trans-unit id="cacca8764589cad4c523153eeccabc264b42124e" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the SQLite database &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; used by the &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; object. A &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; object created by calling &lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt;&lt;code&gt;con.cursor()&lt;/code&gt;&lt;/a&gt; will have a &lt;a href=&quot;#sqlite3.Cursor.connection&quot;&gt;&lt;code&gt;connection&lt;/code&gt;&lt;/a&gt; attribute that refers to &lt;em&gt;con&lt;/em&gt;:</source>
          <target state="translated">此只读属性提供&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;对象使用的SQLite数据库&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;。甲&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;通过调用创建的对象&lt;a href=&quot;#sqlite3.Connection.cursor&quot;&gt; &lt;code&gt;con.cursor()&lt;/code&gt; &lt;/a&gt;将有一个&lt;a href=&quot;#sqlite3.Cursor.connection&quot;&gt; &lt;code&gt;connection&lt;/code&gt; &lt;/a&gt;指代属性&lt;em&gt;CON&lt;/em&gt;：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="766c9f726ec4bbbc98ce6f105956610ea36d9b5f" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the column names of the last query. To remain compatible with the Python DB API, it returns a 7-tuple for each column where the last six items of each tuple are &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此只读属性提供最后一个查询的列名称。为了保持与Python DB API的兼容性，它为每个列返回一个7元组，其中每个元组的最后六个项目均为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09fc30cd152b579e4003b8e0468f289306536886" translate="yes" xml:space="preserve">
          <source>This read-only attribute provides the rowid of the last modified row. It is only set if you issued an &lt;code&gt;INSERT&lt;/code&gt; or a &lt;code&gt;REPLACE&lt;/code&gt; statement using the &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method. For operations other than &lt;code&gt;INSERT&lt;/code&gt; or &lt;code&gt;REPLACE&lt;/code&gt; or when &lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt;&lt;code&gt;executemany()&lt;/code&gt;&lt;/a&gt; is called, &lt;a href=&quot;#sqlite3.Cursor.lastrowid&quot;&gt;&lt;code&gt;lastrowid&lt;/code&gt;&lt;/a&gt; is set to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此只读属性提供最后修改的行的rowid。仅当您使用&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt;方法发出 &lt;code&gt;INSERT&lt;/code&gt; 或 &lt;code&gt;REPLACE&lt;/code&gt; 语句时才设置。对于 &lt;code&gt;INSERT&lt;/code&gt; 或 &lt;code&gt;REPLACE&lt;/code&gt; 以外的操作，或者在&lt;a href=&quot;#sqlite3.Cursor.executemany&quot;&gt; &lt;code&gt;executemany()&lt;/code&gt; &lt;/a&gt;时，&lt;a href=&quot;#sqlite3.Cursor.lastrowid&quot;&gt; &lt;code&gt;lastrowid&lt;/code&gt; &lt;/a&gt;设置为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80fda9d9d63e8a7fa3866afb84364c7cd8db4b60" translate="yes" xml:space="preserve">
          <source>This read-only attribute returns the callback currently associated to the weakref. If there is no callback or if the referent of the weakref is no longer alive then this attribute will have value &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">此只读属性返回当前与weakref相关联的回调。如果没有回调，或者弱引用的引用不再存在，则此属性将具有值 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48d8bbbbed6be36e2bb950ba0b30ddd5b2449618" translate="yes" xml:space="preserve">
          <source>This read-only variable is true when the ctypes data instance has allocated the memory block itself, false otherwise.</source>
          <target state="translated">当ctypes数据实例自己分配了内存块时,这个只读变量为真,否则为假。</target>
        </trans-unit>
        <trans-unit id="2d68cee5805da902a83d5bfa711dcff56eea7130" translate="yes" xml:space="preserve">
          <source>This relies on the Python interpreter to print the traceback. The content type of the output is set to plain text, which disables all HTML processing. If your script works, the raw HTML will be displayed by your client. If it raises an exception, most likely after the first two lines have been printed, a traceback will be displayed. Because no HTML interpretation is going on, the traceback will be readable.</source>
          <target state="translated">这依赖于Python解释器来打印回溯。输出的内容类型被设置为纯文本,它禁用了所有的HTML处理。如果你的脚本工作正常,客户端就会显示原始的 HTML。如果它引发了一个异常,很可能是在前两行被打印出来之后,就会显示一个回溯。因为没有进行HTML解释,所以回溯将是可读的。</target>
        </trans-unit>
        <trans-unit id="c21c6510876040958744e60b431038eb6290b8f1" translate="yes" xml:space="preserve">
          <source>This represents the &lt;em&gt;total&lt;/em&gt; offset from UTC; for example, if a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; object represents both time zone and DST adjustments, &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; should return their sum. If the UTC offset isn&amp;rsquo;t known, return &lt;code&gt;None&lt;/code&gt;. Else the value returned must be a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object strictly between &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; and &lt;code&gt;timedelta(hours=24)&lt;/code&gt; (the magnitude of the offset must be less than one day). Most implementations of &lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt;&lt;code&gt;utcoffset()&lt;/code&gt;&lt;/a&gt; will probably look like one of these two:</source>
          <target state="translated">这代表与UTC 的&lt;em&gt;总&lt;/em&gt;抵销；例如，如果&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;对象同时表示时区和DST调整，则&lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; &lt;/a&gt;应返回其总和。如果不知道UTC偏移量，则返回 &lt;code&gt;None&lt;/code&gt; 。否则，返回的值必须是严格在 &lt;code&gt;-timedelta(hours=24)&lt;/code&gt; 和 &lt;code&gt;timedelta(hours=24)&lt;/code&gt; 之间的&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;对象（偏移量的大小必须小于一天）。&lt;a href=&quot;#datetime.tzinfo.utcoffset&quot;&gt; &lt;code&gt;utcoffset()&lt;/code&gt; 的&lt;/a&gt;大多数实现可能看起来像这两个之一：</target>
        </trans-unit>
        <trans-unit id="ae2c026eab6c38212209d3da1f20eaeb88618525" translate="yes" xml:space="preserve">
          <source>This requirement previously also applied to abstract base classes, such as &lt;a href=&quot;#typing.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;. The problem with this approach is that a class had to be explicitly marked to support them, which is unpythonic and unlike what one would normally do in idiomatic dynamically typed Python code. For example, this conforms to the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">该要求以前也适用于抽象基类，例如&lt;a href=&quot;#typing.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;。这种方法的问题在于必须显式地标记一个类以支持它们，这是非Python的，并且不同于惯用的动态类型化Python代码通常会执行的操作。例如，这符合&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1db8b2b926d15fc9e5ff1b54f85ea91e17397161" translate="yes" xml:space="preserve">
          <source>This requirement previously also applied to abstract base classes, such as &lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt;&lt;code&gt;Iterable&lt;/code&gt;&lt;/a&gt;. The problem with this approach is that a class had to be explicitly marked to support them, which is unpythonic and unlike what one would normally do in idiomatic dynamically typed Python code. For example, this conforms to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;:</source>
          <target state="translated">以前，此要求也适用于抽象基类，例如&lt;a href=&quot;collections.abc#collections.abc.Iterable&quot;&gt; &lt;code&gt;Iterable&lt;/code&gt; &lt;/a&gt;。这种方法的问题在于必须显式地标记一个类以支持它们，这是非Python的，并且与惯用的动态类型化Python代码通常不一样。例如，这符合&lt;a href=&quot;https://www.python.org/dev/peps/pep-0484&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;PEP 484&lt;/strong&gt;&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="60d45c7cbcfc14553d15cc0afc5a5f55832cec95" translate="yes" xml:space="preserve">
          <source>This returns a 2-tuple composed of a numeric response code and the actual response line (multiline responses are joined into one long line.)</source>
          <target state="translated">这将返回一个由数字响应代码和实际响应行组成的 2-tuple(多行响应合并成一个长行)。</target>
        </trans-unit>
        <trans-unit id="ce494d42bf1945c6104888625a79831961bfb6b8" translate="yes" xml:space="preserve">
          <source>This returns a &lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt;&lt;code&gt;Mapping&lt;/code&gt;&lt;/a&gt; instance mapping registered file objects to their associated &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">这将返回一个&lt;a href=&quot;collections.abc#collections.abc.Mapping&quot;&gt; &lt;code&gt;Mapping&lt;/code&gt; &lt;/a&gt;实例，将注册的文件对象映射到其关联的&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="0ae1bfe78d9078946a543d2e004e8f2f33fc9494" translate="yes" xml:space="preserve">
          <source>This returns a list of &lt;code&gt;(key, events)&lt;/code&gt; tuples, one for each ready file object.</source>
          <target state="translated">这将返回 &lt;code&gt;(key, events)&lt;/code&gt; 元组的列表，每个就绪文件对象一个。</target>
        </trans-unit>
        <trans-unit id="a2461b890b46eff3e71a389342294683221b3c10" translate="yes" xml:space="preserve">
          <source>This returns a new &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in case of invalid event mask or file descriptor, or &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is already registered.</source>
          <target state="translated">这将返回一个新的&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;实例，或提出了一个&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 异常&lt;/a&gt;无效事件屏蔽或文件描述符，或时&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 异常&lt;/a&gt;，如果该文件对象已注册。</target>
        </trans-unit>
        <trans-unit id="f0af5f9c7d1e79bede98658b4c1872446e368501" translate="yes" xml:space="preserve">
          <source>This returns a new &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in case of invalid event mask or file descriptor, or &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is not registered.</source>
          <target state="translated">这将返回一个新的&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;实例，或提出了一个&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 异常&lt;/a&gt;无效事件屏蔽或文件描述符，或时&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 异常&lt;/a&gt;，如果该文件对象未注册。</target>
        </trans-unit>
        <trans-unit id="7ac3d8ec4193515be3bfc7e4584bb1a898663843" translate="yes" xml:space="preserve">
          <source>This returns the &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance associated to this file object, or raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the file object is not registered.</source>
          <target state="translated">这将返回与此文件对象关联的&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;实例，如果未注册文件对象，则引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c8889dc6fd5ab529008f5a135efbc51515a1644" translate="yes" xml:space="preserve">
          <source>This returns the associated &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance, or raises a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;fileobj&lt;/em&gt; is not registered. It will raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;fileobj&lt;/em&gt; is invalid (e.g. it has no &lt;code&gt;fileno()&lt;/code&gt; method or its &lt;code&gt;fileno()&lt;/code&gt; method has an invalid return value).</source>
          <target state="translated">这将返回相关&lt;a href=&quot;#selectors.SelectorKey&quot;&gt; &lt;code&gt;SelectorKey&lt;/code&gt; &lt;/a&gt;实例，或提出了一个&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 异常&lt;/a&gt;，如果&lt;em&gt;FileObj文件&lt;/em&gt;未注册。如果&lt;em&gt;fileobj&lt;/em&gt;无效（例如，它没有 &lt;code&gt;fileno()&lt;/code&gt; 方法或它的 &lt;code&gt;fileno()&lt;/code&gt; 方法具有无效的返回值），它将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="890171d76d69be7da385c6150dad06c5b69eae30" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.devpoll&quot;&gt;&lt;code&gt;select.devpoll()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">这将返回基础&lt;a href=&quot;select#select.devpoll&quot;&gt; &lt;code&gt;select.devpoll()&lt;/code&gt; &lt;/a&gt;对象使用的文件描述符。</target>
        </trans-unit>
        <trans-unit id="54137bf7adca252cdc57e4289272b49bb029a9a7" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.epoll&quot;&gt;&lt;code&gt;select.epoll()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">这将返回基础&lt;a href=&quot;select#select.epoll&quot;&gt; &lt;code&gt;select.epoll()&lt;/code&gt; &lt;/a&gt;对象使用的文件描述符。</target>
        </trans-unit>
        <trans-unit id="51d90f09c2ffca4ed06478c9f1bdb12b3c85819c" translate="yes" xml:space="preserve">
          <source>This returns the file descriptor used by the underlying &lt;a href=&quot;select#select.kqueue&quot;&gt;&lt;code&gt;select.kqueue()&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">这将返回基础&lt;a href=&quot;select#select.kqueue&quot;&gt; &lt;code&gt;select.kqueue()&lt;/code&gt; &lt;/a&gt;对象使用的文件描述符。</target>
        </trans-unit>
        <trans-unit id="58106684b347e2251ea09e0272c882c066c7dccd" translate="yes" xml:space="preserve">
          <source>This returns the value unchanged. To the type checker this signals that the return value has the designated type, but at runtime we intentionally don&amp;rsquo;t check anything (we want this to be as fast as possible).</source>
          <target state="translated">这将返回不变的值。对于类型检查器，这表明返回值具有指定的类型，但是在运行时我们有意不进行任何检查（我们希望此检查速度尽可能快）。</target>
        </trans-unit>
        <trans-unit id="dce193572792ff4f49cc2515deda79b3d1240361" translate="yes" xml:space="preserve">
          <source>This routine adds various parameters required for WSGI, including &lt;code&gt;HTTP_HOST&lt;/code&gt;, &lt;code&gt;SERVER_NAME&lt;/code&gt;, &lt;code&gt;SERVER_PORT&lt;/code&gt;, &lt;code&gt;REQUEST_METHOD&lt;/code&gt;, &lt;code&gt;SCRIPT_NAME&lt;/code&gt;, &lt;code&gt;PATH_INFO&lt;/code&gt;, and all of the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;-defined &lt;code&gt;wsgi.*&lt;/code&gt; variables. It only supplies default values, and does not replace any existing settings for these variables.</source>
          <target state="translated">该例程添加了WSGI所需的各种参数，包括 &lt;code&gt;HTTP_HOST&lt;/code&gt; ， &lt;code&gt;SERVER_NAME&lt;/code&gt; ， &lt;code&gt;SERVER_PORT&lt;/code&gt; ， &lt;code&gt;REQUEST_METHOD&lt;/code&gt; ， &lt;code&gt;SCRIPT_NAME&lt;/code&gt; ， &lt;code&gt;PATH_INFO&lt;/code&gt; 以及所有&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;定义的 &lt;code&gt;wsgi.*&lt;/code&gt; 变量。它仅提供默认值，并且不替换这些变量的任何现有设置。</target>
        </trans-unit>
        <trans-unit id="b8c17ece425d1c53c1e6d2e295e3ffa164046a05" translate="yes" xml:space="preserve">
          <source>This routine allows/disallows the SQLite engine to load SQLite extensions from shared libraries. SQLite extensions can define new functions, aggregates or whole new virtual table implementations. One well-known extension is the fulltext-search extension distributed with SQLite.</source>
          <target state="translated">这个例程允许/不允许SQLite引擎从共享库中加载SQLite扩展。SQLite扩展可以定义新的函数、聚合或全新的虚拟表实现。一个著名的扩展是与SQLite一起分发的全文搜索扩展。</target>
        </trans-unit>
        <trans-unit id="d1123f885c50d2316ac2017015f6afc8da26ba45" translate="yes" xml:space="preserve">
          <source>This routine is intended to make it easier for unit tests of WSGI servers and applications to set up dummy environments. It should NOT be used by actual WSGI servers or applications, since the data is fake!</source>
          <target state="translated">这个例程的目的是为了让WSGI服务器和应用程序的单元测试更容易设置虚拟环境。它不应该被实际的WSGI服务器或应用程序使用,因为数据是假的。</target>
        </trans-unit>
        <trans-unit id="378be7eabaecd105cf27a5a5348d58ac5d4009b6" translate="yes" xml:space="preserve">
          <source>This routine loads a SQLite extension from a shared library. You have to enable extension loading with &lt;a href=&quot;#sqlite3.Connection.enable_load_extension&quot;&gt;&lt;code&gt;enable_load_extension()&lt;/code&gt;&lt;/a&gt; before you can use this routine.</source>
          <target state="translated">此例程从共享库加载SQLite扩展。您必须先使用&lt;a href=&quot;#sqlite3.Connection.enable_load_extension&quot;&gt; &lt;code&gt;enable_load_extension()&lt;/code&gt; &lt;/a&gt;启用扩展加载，然后才能使用此例程。</target>
        </trans-unit>
        <trans-unit id="d788abec338f0943063ad095afb2980ab498b313" translate="yes" xml:space="preserve">
          <source>This routine registers a callback. The callback is invoked for each attempt to access a column of a table in the database. The callback should return &lt;code&gt;SQLITE_OK&lt;/code&gt; if access is allowed, &lt;code&gt;SQLITE_DENY&lt;/code&gt; if the entire SQL statement should be aborted with an error and &lt;code&gt;SQLITE_IGNORE&lt;/code&gt; if the column should be treated as a NULL value. These constants are available in the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">该例程注册一个回调。每次尝试访问数据库中表的列时都会调用该回调。回调应该返回 &lt;code&gt;SQLITE_OK&lt;/code&gt; 是否允许访问， &lt;code&gt;SQLITE_DENY&lt;/code&gt; 如果整个SQL语句应该有错误和中止 &lt;code&gt;SQLITE_IGNORE&lt;/code&gt; 如果列应为NULL值进行处理。这些常量在&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;模块中可用。</target>
        </trans-unit>
        <trans-unit id="c9474baef0d262e49cda55fd848e1f843ac1d207" translate="yes" xml:space="preserve">
          <source>This routine registers a callback. The callback is invoked for every &lt;em&gt;n&lt;/em&gt; instructions of the SQLite virtual machine. This is useful if you want to get called from SQLite during long-running operations, for example to update a GUI.</source>
          <target state="translated">该例程注册一个回调。对于SQLite虚拟机的每&lt;em&gt;n&lt;/em&gt;条指令，将调用一次回调。如果要在长时间运行的操作中从SQLite调用（例如更新GUI），此功能很有用。</target>
        </trans-unit>
        <trans-unit id="215de7d536e14c0ec534e867eb0bed570485a76d" translate="yes" xml:space="preserve">
          <source>This runs faster than the &lt;a href=&quot;#statistics.mean&quot;&gt;&lt;code&gt;mean()&lt;/code&gt;&lt;/a&gt; function and it always returns a &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;data&lt;/em&gt; may be a sequence or iterable. If the input dataset is empty, raises a &lt;a href=&quot;#statistics.StatisticsError&quot;&gt;&lt;code&gt;StatisticsError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">它的运行速度比&lt;a href=&quot;#statistics.mean&quot;&gt; &lt;code&gt;mean()&lt;/code&gt; &lt;/a&gt;函数快，并且始终返回&lt;a href=&quot;functions#float&quot;&gt; &lt;code&gt;float&lt;/code&gt; &lt;/a&gt;。该&lt;em&gt;数据&lt;/em&gt;可以是顺序或迭代。如果输入数据集为空，则引发&lt;a href=&quot;#statistics.StatisticsError&quot;&gt; &lt;code&gt;StatisticsError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31740e1f356225e9527182782ab65f90aa3b3442" translate="yes" xml:space="preserve">
          <source>This script is also available for download &lt;a href=&quot;https://gist.github.com/vsajip/4673395&quot;&gt;online&lt;/a&gt;.</source>
          <target state="translated">该脚本也可以&lt;a href=&quot;https://gist.github.com/vsajip/4673395&quot;&gt;在线&lt;/a&gt;下载。</target>
        </trans-unit>
        <trans-unit id="362b81a476a7e91e404db2c61e0da0c0266fd8f5" translate="yes" xml:space="preserve">
          <source>This search path is used when resolving dependencies for imported extension modules (the module itself is resolved through sys.path), and also by &lt;a href=&quot;ctypes#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解决导入的扩展模块（模块本身通过sys.path解析）以及&lt;a href=&quot;ctypes#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; 的&lt;/a&gt;依赖项时，将使用此搜索路径。</target>
        </trans-unit>
        <trans-unit id="a1987d966d658e949051757623c7980ace367f55" translate="yes" xml:space="preserve">
          <source>This section contains examples of the &lt;a href=&quot;stdtypes#str.format&quot;&gt;&lt;code&gt;str.format()&lt;/code&gt;&lt;/a&gt; syntax and comparison with the old &lt;code&gt;%&lt;/code&gt;-formatting.</source>
          <target state="translated">本节包含&lt;a href=&quot;stdtypes#str.format&quot;&gt; &lt;code&gt;str.format()&lt;/code&gt; &lt;/a&gt;语法的示例以及与旧 &lt;code&gt;%&lt;/code&gt; -formatting的比较。</target>
        </trans-unit>
        <trans-unit id="caa21db1421dcf117cd37e0c3689b0534dd1eafd" translate="yes" xml:space="preserve">
          <source>This section describes high-level async/await asyncio APIs to create and manage subprocesses.</source>
          <target state="translated">本节介绍了创建和管理子进程的高级async/await asyncio API。</target>
        </trans-unit>
        <trans-unit id="d7a523d820ebe70975810d89173fdd5eb434fe64" translate="yes" xml:space="preserve">
          <source>This section describes in depth the API of &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">本节深入介绍&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;的API 。</target>
        </trans-unit>
        <trans-unit id="558b5a3c6d2df134347c7df16cc29ff8ad425934" translate="yes" xml:space="preserve">
          <source>This section describes some examples and recipes for making effective use of the tools provided by &lt;a href=&quot;#module-contextlib&quot;&gt;&lt;code&gt;contextlib&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">本节描述了一些示例和秘诀，以有效利用&lt;a href=&quot;#module-contextlib&quot;&gt; &lt;code&gt;contextlib&lt;/code&gt; &lt;/a&gt;提供的工具。</target>
        </trans-unit>
        <trans-unit id="be3c37b9d39743f5da99e8a42612440f3ba28e7b" translate="yes" xml:space="preserve">
          <source>This section describes the API for configuring the logging module.</source>
          <target state="translated">本节介绍了配置日志模块的API。</target>
        </trans-unit>
        <trans-unit id="156a697bb0d3f10fd45e11f2465ce109feb52348" translate="yes" xml:space="preserve">
          <source>This section describes the conformance requirements and relationships between the Python DOM API, the W3C DOM recommendations, and the OMG IDL mapping for Python.</source>
          <target state="translated">这一节描述了Python DOM API、W3C DOM建议和OMG IDL对Python的映射之间的一致性要求和关系。</target>
        </trans-unit>
        <trans-unit id="8eeef4df7928680ba8f67bceaa4a14542597b485" translate="yes" xml:space="preserve">
          <source>This section discusses the performance of the provided concrete I/O implementations.</source>
          <target state="translated">本节讨论所提供的具体I/O实现的性能。</target>
        </trans-unit>
        <trans-unit id="607b3cfb7c46b7d396eba60d31432af9f7d8f677" translate="yes" xml:space="preserve">
          <source>This section documents the objects and functions in the &lt;code&gt;ssl&lt;/code&gt; module; for more general information about TLS, SSL, and certificates, the reader is referred to the documents in the &amp;ldquo;See Also&amp;rdquo; section at the bottom.</source>
          <target state="translated">本节介绍 &lt;code&gt;ssl&lt;/code&gt; 模块中的对象和功能。有关TLS，SSL和证书的更多常规信息，请参阅底部&amp;ldquo;另请参阅&amp;rdquo;部分中的文档。</target>
        </trans-unit>
        <trans-unit id="1c30eb3669356c7ec4ccfc215134676b33af7b3b" translate="yes" xml:space="preserve">
          <source>This section examines in detail how doctest works: which docstrings it looks at, how it finds interactive examples, what execution context it uses, how it handles exceptions, and how option flags can be used to control its behavior. This is the information that you need to know to write doctest examples; for information about actually running doctest on these examples, see the following sections.</source>
          <target state="translated">这一节详细介绍了doctest是如何工作的:它查看哪些docstrings,如何查找交互式示例,使用什么执行上下文,如何处理异常,以及如何使用选项标志来控制其行为。这是编写doctest例子所需要了解的信息;关于在这些例子上实际运行doctest的信息,请看下面的章节。</target>
        </trans-unit>
        <trans-unit id="70f26576b84f9e9c7ebedde34306a5ad087e6144" translate="yes" xml:space="preserve">
          <source>This section is designed in two parts: the first half (roughly) covers background material, while the second half can be taken to the keyboard as a handy reference.</source>
          <target state="translated">本部分设计为两部分:前半部分(大致)涵盖了背景材料,后半部分可以拿到键盘上作为方便的参考。</target>
        </trans-unit>
        <trans-unit id="1c854e243687db6fd2cf2c930ede6e8b64a9ed2f" translate="yes" xml:space="preserve">
          <source>This section is not designed to be an exhaustive tutorial on either Tk or Tkinter. Rather, it is intended as a stop gap, providing some introductory orientation on the system.</source>
          <target state="translated">本节并不是为了详尽介绍Tk或Tkinter。相反,它的目的是作为一个过渡,提供一些关于系统的介绍。</target>
        </trans-unit>
        <trans-unit id="0fbf10a91d27928b5c7b954152fd9b94bd39c230" translate="yes" xml:space="preserve">
          <source>This section is provided for users that &amp;ldquo;don&amp;rsquo;t want to read the manual.&amp;rdquo; It provides a very brief overview, and allows a user to rapidly perform profiling on an existing application.</source>
          <target state="translated">本部分适用于&amp;ldquo;不想阅读本手册&amp;rdquo;的用户。它提供了非常简短的概述，并允许用户快速对现有应用程序进行性能分析。</target>
        </trans-unit>
        <trans-unit id="6c5cd0414177de92e7fbb94b4034b625efcfd646" translate="yes" xml:space="preserve">
          <source>This section outlines high-level asyncio APIs to work with coroutines and Tasks.</source>
          <target state="translated">本节概述了与coroutine和Tasks一起工作的高级asyncio API。</target>
        </trans-unit>
        <trans-unit id="defa96b3e88910bfa50682641b6305dc34fca129" translate="yes" xml:space="preserve">
          <source>This section presents a simple example of how to build a shell around a few of the commands in the &lt;a href=&quot;turtle#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">本节提供了一个简单的示例，说明如何围绕&lt;a href=&quot;turtle#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;模块中的一些命令构建外壳。</target>
        </trans-unit>
        <trans-unit id="b0f81d28be12207c741e0c33582bce94a49c9adc" translate="yes" xml:space="preserve">
          <source>This section shows recipes and best practices for using &lt;a href=&quot;#module-secrets&quot;&gt;&lt;code&gt;secrets&lt;/code&gt;&lt;/a&gt; to manage a basic level of security.</source>
          <target state="translated">本节显示使用&lt;a href=&quot;#module-secrets&quot;&gt; &lt;code&gt;secrets&lt;/code&gt; &lt;/a&gt;管理基本安全级别的方法和最佳实践。</target>
        </trans-unit>
        <trans-unit id="d526a5a648c94cb75fcf6517b2a94c66d6c77c00" translate="yes" xml:space="preserve">
          <source>This section shows recipes for creating an extended toolset using the existing itertools as building blocks.</source>
          <target state="translated">本节介绍了使用现有的itertools作为构件创建扩展工具集的方法。</target>
        </trans-unit>
        <trans-unit id="1383ac76a2854ebc53757848481beccc1c9891e8" translate="yes" xml:space="preserve">
          <source>This section shows various approaches to working with chained maps.</source>
          <target state="translated">本节展示了处理链式地图的各种方法。</target>
        </trans-unit>
        <trans-unit id="df040f46fd980279c14fec4cda4247fcf05f72ef" translate="yes" xml:space="preserve">
          <source>This section shows various approaches to working with deques.</source>
          <target state="translated">本节介绍了处理deques的各种方法。</target>
        </trans-unit>
        <trans-unit id="4dd9bc73a0d82a9e97e43369211ae46a3180915d" translate="yes" xml:space="preserve">
          <source>This sets the locale for all categories to the user&amp;rsquo;s default setting (typically specified in the &lt;code id=&quot;index-1&quot;&gt;LANG&lt;/code&gt; environment variable). If the locale is not changed thereafter, using multithreading should not cause problems.</source>
          <target state="translated">这会将所有类别的语言环境设置为用户的默认设置（通常在 &lt;code id=&quot;index-1&quot;&gt;LANG&lt;/code&gt; 环境变量中指定）。如果此后未更改语言环境，则使用多线程不会引起问题。</target>
        </trans-unit>
        <trans-unit id="c45721624d3fcb370f2be8569bbab61c3319b06b" translate="yes" xml:space="preserve">
          <source>This setting doesn&amp;rsquo;t apply to client sockets. You can also use the &lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt;&lt;/a&gt; option to further improve security.</source>
          <target state="translated">此设置不适用于客户端套接字。您还可以使用&lt;a href=&quot;#ssl.OP_SINGLE_DH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_DH_USE&lt;/code&gt; &lt;/a&gt;选项进一步提高安全性。</target>
        </trans-unit>
        <trans-unit id="3ce459a925e80a56c1e647868604b4bf0d8366d6" translate="yes" xml:space="preserve">
          <source>This setting doesn&amp;rsquo;t apply to client sockets. You can also use the &lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt;&lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt;&lt;/a&gt; option to further improve security.</source>
          <target state="translated">此设置不适用于客户端套接字。您还可以使用&lt;a href=&quot;#ssl.OP_SINGLE_ECDH_USE&quot;&gt; &lt;code&gt;OP_SINGLE_ECDH_USE&lt;/code&gt; &lt;/a&gt;选项进一步提高安全性。</target>
        </trans-unit>
        <trans-unit id="e6fed8d315800e6b3b887f29c56368c13c909c37" translate="yes" xml:space="preserve">
          <source>This setting is thread-specific.</source>
          <target state="translated">这个设置是针对线程的。</target>
        </trans-unit>
        <trans-unit id="de8230cad107c382f2cb44a434b139507f3975fb" translate="yes" xml:space="preserve">
          <source>This should be the first call after the connection to the server has been made. It sends a line to the server consisting of the &lt;em&gt;method&lt;/em&gt; string, the &lt;em&gt;url&lt;/em&gt; string, and the HTTP version (&lt;code&gt;HTTP/1.1&lt;/code&gt;). To disable automatic sending of &lt;code&gt;Host:&lt;/code&gt; or &lt;code&gt;Accept-Encoding:&lt;/code&gt; headers (for example to accept additional content encodings), specify &lt;em&gt;skip_host&lt;/em&gt; or &lt;em&gt;skip_accept_encoding&lt;/em&gt; with non-False values.</source>
          <target state="translated">这应该是与服务器建立连接后的第一个呼叫。它向服务器发送一条由&lt;em&gt;方法&lt;/em&gt;字符串，&lt;em&gt;URL&lt;/em&gt;字符串和HTTP版本（ &lt;code&gt;HTTP/1.1&lt;/code&gt; ）组成的行。要禁用自动发送 &lt;code&gt;Host:&lt;/code&gt; 或 &lt;code&gt;Accept-Encoding:&lt;/code&gt; 标头（例如，接受其他内容编码），&lt;em&gt;请&lt;/em&gt;使用非False值指定&lt;em&gt;skip_host&lt;/em&gt;或&lt;em&gt;skip_accept_encoding&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5f7c62680666d8d0354a70774b620f0cfc3a23c2" translate="yes" xml:space="preserve">
          <source>This should not be reported to Python applications.</source>
          <target state="translated">这不应该被报告给Python应用程序。</target>
        </trans-unit>
        <trans-unit id="bd3d85e3d37c9e73e52b13fff11ec91a95c5f8b7" translate="yes" xml:space="preserve">
          <source>This should produce the same results as those gotten from installing the &lt;code&gt;cgi.py&lt;/code&gt; file itself.</source>
          <target state="translated">这将产生与安装 &lt;code&gt;cgi.py&lt;/code&gt; 文件本身相同的结果。</target>
        </trans-unit>
        <trans-unit id="a2f5181e6bc07cf2a06e008b2962ada26e303b7c" translate="yes" xml:space="preserve">
          <source>This should return a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; representing all the tests from the package. (&lt;code&gt;standard_tests&lt;/code&gt; will only contain tests collected from &lt;code&gt;__init__.py&lt;/code&gt;.)</source>
          <target state="translated">这应该返回一个&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; ,&lt;/a&gt;代表该包中的所有测试。（ &lt;code&gt;standard_tests&lt;/code&gt; 仅包含从 &lt;code&gt;__init__.py&lt;/code&gt; 收集的测试。）</target>
        </trans-unit>
        <trans-unit id="b617419bf001641a41f3ee636896b8e09558569d" translate="yes" xml:space="preserve">
          <source>This simple example implements a basic read-eval-print loop, similar to (but less useful than) the standard Python interactive interpreter loop. For a more complete implementation of the interpreter loop, refer to the &lt;a href=&quot;code#module-code&quot;&gt;&lt;code&gt;code&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">这个简单的示例实现了一个基本的read-eval-print循环，类似于（但比标准的Python交互式解释器循环有用）。有关解释器循环的更完整实现，请参见&lt;a href=&quot;code#module-code&quot;&gt; &lt;code&gt;code&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="1fad110fec75f0f6958a041c1017071a503dd913" translate="yes" xml:space="preserve">
          <source>This simple example shows how an application can use object IDs to retrieve objects that it has seen before. The IDs of the objects can then be used in other data structures without forcing the objects to remain alive, but the objects can still be retrieved by ID if they do.</source>
          <target state="translated">这个简单的例子展示了一个应用程序如何使用对象ID来检索之前看过的对象。然后,对象的ID可以在其他数据结构中使用,而不强迫对象保持活力,但如果对象保持活力,仍然可以通过ID检索。</target>
        </trans-unit>
        <trans-unit id="98547658e0e1aab7962e8a30c8538b1ef6afdfc8" translate="yes" xml:space="preserve">
          <source>This site is the focal point for the definition of the SAX API. It provides a Java implementation and online documentation. Links to implementations and historical information are also available.</source>
          <target state="translated">该网站是定义SAX API的协调中心。它提供了一个Java实现和在线文档。此外,还提供与实施和历史信息的链接。</target>
        </trans-unit>
        <trans-unit id="401b694add20f94820e8cb3c498a29fb6a883ca9" translate="yes" xml:space="preserve">
          <source>This situation is common for example when a form contains a group of multiple checkboxes with the same name:</source>
          <target state="translated">这种情况很常见,例如当一个表单包含一组名称相同的多个复选框时。</target>
        </trans-unit>
        <trans-unit id="79ca8c995a5a4457b8793fa31ef3820b296c6a65" translate="yes" xml:space="preserve">
          <source>This solution is as safe as &lt;a href=&quot;#asyncio.MultiLoopChildWatcher&quot;&gt;&lt;code&gt;MultiLoopChildWatcher&lt;/code&gt;&lt;/a&gt; and has the same &lt;em&gt;O(N)&lt;/em&gt; complexity but requires a running event loop in the main thread to work.</source>
          <target state="translated">该解决方案与&lt;a href=&quot;#asyncio.MultiLoopChildWatcher&quot;&gt; &lt;code&gt;MultiLoopChildWatcher&lt;/code&gt; &lt;/a&gt;一样安全，并且具有相同的&lt;em&gt;O（N）&lt;/em&gt;复杂度，但是需要在主线程中运行事件循环才能工作。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
