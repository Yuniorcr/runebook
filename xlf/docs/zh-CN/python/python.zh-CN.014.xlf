<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="40d076e54c14795bf1009ae955624fb9ee075980" translate="yes" xml:space="preserve">
          <source>It is set for &lt;code&gt;SELECT&lt;/code&gt; statements without any matching rows as well.</source>
          <target state="translated">它是为 &lt;code&gt;SELECT&lt;/code&gt; 语句设置的，也没有任何匹配的行。</target>
        </trans-unit>
        <trans-unit id="e4892c14dd8e03e95f7b9a46c2b927e82c3de81e" translate="yes" xml:space="preserve">
          <source>It is similar to &lt;a href=&quot;#opcode-END_FINALLY&quot;&gt;&lt;code&gt;END_FINALLY&lt;/code&gt;&lt;/a&gt;, but doesn&amp;rsquo;t change the bytecode counter nor raise an exception. Used for implementing &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#continue&quot;&gt;&lt;code&gt;continue&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; block.</source>
          <target state="translated">它类似于&lt;a href=&quot;#opcode-END_FINALLY&quot;&gt; &lt;code&gt;END_FINALLY&lt;/code&gt; &lt;/a&gt;，但不更改字节码计数器也不引发异常。用于实现&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#continue&quot;&gt; &lt;code&gt;continue&lt;/code&gt; &lt;/a&gt;并在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;块中&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42d9754d1dda336bfe25a9c6e63c2992d8307a7e" translate="yes" xml:space="preserve">
          <source>It is straightforward to create an ordered dictionary variant that remembers the order the keys were &lt;em&gt;last&lt;/em&gt; inserted. If a new entry overwrites an existing entry, the original insertion position is changed and moved to the end:</source>
          <target state="translated">创建一个有序的字典变体很容易，它可以记住键的&lt;em&gt;最后&lt;/em&gt;插入顺序。如果新条目覆盖现有条目，则原始插入位置将更改并移至末尾：</target>
        </trans-unit>
        <trans-unit id="b290678be018032e40bcd30baa36d13bcef66f17" translate="yes" xml:space="preserve">
          <source>It is the application&amp;rsquo;s responsibility to ensure that all whitespace and special characters are quoted appropriately to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell injection&lt;/a&gt; vulnerabilities. The &lt;a href=&quot;shlex#shlex.quote&quot;&gt;&lt;code&gt;shlex.quote()&lt;/code&gt;&lt;/a&gt; function can be used to properly escape whitespace and special characters in strings that are going to be used to construct shell commands.</source>
          <target state="translated">应用程序有责任确保所有空格和特殊字符都被正确引用，以避免&lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell注入&lt;/a&gt;漏洞。该&lt;a href=&quot;shlex#shlex.quote&quot;&gt; &lt;code&gt;shlex.quote()&lt;/code&gt; &lt;/a&gt;函数可用于适当逃避那将要用来构建shell命令字符串空格和特殊字符。</target>
        </trans-unit>
        <trans-unit id="83308bc4ef3c9f055207277d114b19f86e753316" translate="yes" xml:space="preserve">
          <source>It is the application&amp;rsquo;s responsibility to ensure that all whitespace and special characters are quoted appropriately to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell injection&lt;/a&gt; vulnerabilities. The &lt;a href=&quot;shlex#shlex.quote&quot;&gt;&lt;code&gt;shlex.quote()&lt;/code&gt;&lt;/a&gt; function can be used to properly escape whitespace and special shell characters in strings that are going to be used to construct shell commands.</source>
          <target state="translated">应用程序有责任确保所有空格和特殊字符都被正确引用，以避免&lt;a href=&quot;https://en.wikipedia.org/wiki/Shell_injection#Shell_injection&quot;&gt;shell注入&lt;/a&gt;漏洞。该&lt;a href=&quot;shlex#shlex.quote&quot;&gt; &lt;code&gt;shlex.quote()&lt;/code&gt; &lt;/a&gt;函数可以用来妥善逃避串空白和特殊的shell字符都将被用来构建shell命令。</target>
        </trans-unit>
        <trans-unit id="ba77524bde6cf6c11d179f96eb65e17908025854" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;Ellipsis&lt;/code&gt; or &lt;code&gt;...&lt;/code&gt;.</source>
          <target state="translated">这是写的 &lt;code&gt;Ellipsis&lt;/code&gt; 或 &lt;code&gt;...&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c82f78122d7edace8ca573121d93f7a6333cafc" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">它写为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a8ce0b24fe78f15c89a4a9c4becf84652288522" translate="yes" xml:space="preserve">
          <source>It is written as &lt;code&gt;NotImplemented&lt;/code&gt;.</source>
          <target state="translated">它写为 &lt;code&gt;NotImplemented&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="841555ab84a821d8592d3ba16982eb976c179de0" translate="yes" xml:space="preserve">
          <source>It makes it clear that the &lt;code&gt;cm&lt;/code&gt; applies to the whole function, rather than just a piece of it (and saving an indentation level is nice, too).</source>
          <target state="translated">很明显， &lt;code&gt;cm&lt;/code&gt; 适用于整个功能，而不仅仅是整个功能的一部分（保存缩进级别也很不错）。</target>
        </trans-unit>
        <trans-unit id="73f114d3bbc30556ce94eba580337d50515cee5f" translate="yes" xml:space="preserve">
          <source>It makes little sense to catch synchronous errors like &lt;a href=&quot;#signal.SIGFPE&quot;&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#signal.SIGSEGV&quot;&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;/a&gt; that are caused by an invalid operation in C code. Python will return from the signal handler to the C code, which is likely to raise the same signal again, causing Python to apparently hang. From Python 3.3 onwards, you can use the &lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt;&lt;code&gt;faulthandler&lt;/code&gt;&lt;/a&gt; module to report on synchronous errors.</source>
          <target state="translated">捕获由C代码中的无效操作引起的同步错误（如&lt;a href=&quot;#signal.SIGFPE&quot;&gt; &lt;code&gt;SIGFPE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#signal.SIGSEGV&quot;&gt; &lt;code&gt;SIGSEGV&lt;/code&gt; )&lt;/a&gt;几乎没有意义。Python将从信号处理程序返回到C代码，这很可能再次引发相同的信号，从而导致Python显然挂起。从Python 3.3开始，您可以使用&lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt; &lt;code&gt;faulthandler&lt;/code&gt; &lt;/a&gt;模块报告同步错误。</target>
        </trans-unit>
        <trans-unit id="cceaba8129fdd9cb6ff7d523e835d1be2a3900bb" translate="yes" xml:space="preserve">
          <source>It makes little sense to catch synchronous errors like &lt;code&gt;SIGFPE&lt;/code&gt; or &lt;code&gt;SIGSEGV&lt;/code&gt; that are caused by an invalid operation in C code. Python will return from the signal handler to the C code, which is likely to raise the same signal again, causing Python to apparently hang. From Python 3.3 onwards, you can use the &lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt;&lt;code&gt;faulthandler&lt;/code&gt;&lt;/a&gt; module to report on synchronous errors.</source>
          <target state="translated">捕获由C代码中的无效操作引起的同步错误（如 &lt;code&gt;SIGFPE&lt;/code&gt; 或 &lt;code&gt;SIGSEGV&lt;/code&gt; )几乎没有意义。Python将从信号处理程序返回到C代码，这很可能再次引发相同的信号，从而导致Python显然挂起。从Python 3.3开始，您可以使用&lt;a href=&quot;faulthandler#module-faulthandler&quot;&gt; &lt;code&gt;faulthandler&lt;/code&gt; &lt;/a&gt;模块报告同步错误。</target>
        </trans-unit>
        <trans-unit id="38e76705e1c36e7060b372d7e192caca143da51c" translate="yes" xml:space="preserve">
          <source>It may also be useful to have an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; assign attributes to an already existing object, rather than a new &lt;a href=&quot;#argparse.Namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; object. This can be achieved by specifying the &lt;code&gt;namespace=&lt;/code&gt; keyword argument:</source>
          <target state="translated">让&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;将属性分配给现有对象而不是新的&lt;a href=&quot;#argparse.Namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt;对象也可能很有用。这可以通过指定 &lt;code&gt;namespace=&lt;/code&gt; 关键字参数来实现：</target>
        </trans-unit>
        <trans-unit id="fba1d56f7a7c046d3fc4bbe63e3336e206c6db2d" translate="yes" xml:space="preserve">
          <source>It may be preferable to simply create the barrier with a sensible &lt;em&gt;timeout&lt;/em&gt; value to automatically guard against one of the threads going awry.</source>
          <target state="translated">可能更希望仅使用合理的&lt;em&gt;超时&lt;/em&gt;值创建屏障，以自动防止其中一个线程出现问题。</target>
        </trans-unit>
        <trans-unit id="4b07ba6ca89cd1aae3cc72549392d22b75675e8e" translate="yes" xml:space="preserve">
          <source>It may not be obvious how to break a shell command into a sequence of arguments, especially in complex cases. &lt;a href=&quot;shlex#shlex.split&quot;&gt;&lt;code&gt;shlex.split()&lt;/code&gt;&lt;/a&gt; can illustrate how to determine the correct tokenization for &lt;em&gt;args&lt;/em&gt;:</source>
          <target state="translated">如何将shell命令分解为一系列参数可能并不明显，尤其是在复杂的情况下。&lt;a href=&quot;shlex#shlex.split&quot;&gt; &lt;code&gt;shlex.split()&lt;/code&gt; &lt;/a&gt;可以说明如何为&lt;em&gt;args&lt;/em&gt;确定正确的标记化：</target>
        </trans-unit>
        <trans-unit id="ed6a077b4756775b9b29b2ea1e03ac9d700dfd8e" translate="yes" xml:space="preserve">
          <source>It must be called at most once per thread object. It arranges for the object&amp;rsquo;s &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method to be invoked in a separate thread of control.</source>
          <target state="translated">每个线程对象最多只能调用一次。它安排在单独的控制线程中调用对象的&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="daad8dfada880cb31549425a5ec3431b9222657b" translate="yes" xml:space="preserve">
          <source>It returns bytes, encoded using the &lt;a href=&quot;token#token.ENCODING&quot;&gt;&lt;code&gt;ENCODING&lt;/code&gt;&lt;/a&gt; token, which is the first token sequence output by &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt;. If there is no encoding token in the input, it returns a str instead.</source>
          <target state="translated">它返回使用&lt;a href=&quot;token#token.ENCODING&quot;&gt; &lt;code&gt;ENCODING&lt;/code&gt; &lt;/a&gt;令牌编码的字节，这是&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; &lt;/a&gt;输出的第一个令牌序列。如果输入中没有编码令牌，它将返回一个str。</target>
        </trans-unit>
        <trans-unit id="a8e3c74f6ede201d039fbecf6218111d0e334740" translate="yes" xml:space="preserve">
          <source>It should be noted that not all jumps are allowed &amp;ndash; for instance it is not possible to jump into the middle of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop or out of a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause.</source>
          <target state="translated">应该注意的是，并非所有的跳转都是允许的&amp;ndash;例如，不可能跳转到&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;循环的中间或&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;子句。</target>
        </trans-unit>
        <trans-unit id="2937b0e1593f0a67d3bf89f808ac34f1723db7c8" translate="yes" xml:space="preserve">
          <source>It should be noted that not all jumps are allowed &amp;ndash; for instance it is not possible to jump into the middle of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#for&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; loop or out of a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt;&lt;code&gt;finally&lt;/code&gt;&lt;/a&gt; clause.</source>
          <target state="translated">应该注意的是，并非所有的跳转都是允许的&amp;ndash;例如，不可能跳转到&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#for&quot;&gt; &lt;code&gt;for&lt;/code&gt; &lt;/a&gt;循环的中间或&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#finally&quot;&gt; &lt;code&gt;finally&lt;/code&gt; &lt;/a&gt;子句中。</target>
        </trans-unit>
        <trans-unit id="d00162c40ad44bcc91c01b39dbf4174206720406" translate="yes" xml:space="preserve">
          <source>It should not be used to indicate that an operator or method is not meant to be supported at all &amp;ndash; in that case either leave the operator / method undefined or, if a subclass, set it to &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">它不应用于表示完全不支持运算符或方法&amp;ndash;在这种情况下，请不要定义运算符/方法，或者如果是子类，请将其设置为&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ded5b6e9599dd1f5438c1647424ab89dfd2b577" translate="yes" xml:space="preserve">
          <source>It should return a &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">它应该返回一个&lt;a href=&quot;#unittest.TestSuite&quot;&gt; &lt;code&gt;TestSuite&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="726e6dfbe6b42488d80277b74ab1981ea0eb48c8" translate="yes" xml:space="preserve">
          <source>It starts by constructing up to four directories from a head and a tail part. For the head part, it uses &lt;code&gt;sys.prefix&lt;/code&gt; and &lt;code&gt;sys.exec_prefix&lt;/code&gt;; empty heads are skipped. For the tail part, it uses the empty string and then &lt;code&gt;lib/site-packages&lt;/code&gt; (on Windows) or &lt;code&gt;lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; (on Unix and Macintosh). For each of the distinct head-tail combinations, it sees if it refers to an existing directory, and if so, adds it to &lt;code&gt;sys.path&lt;/code&gt; and also inspects the newly added path for configuration files.</source>
          <target state="translated">它从头和尾部分开始最多构建四个目录。首先，它使用 &lt;code&gt;sys.prefix&lt;/code&gt; 和 &lt;code&gt;sys.exec_prefix&lt;/code&gt; ; 空头被跳过。对于尾部，它使用空字符串，然后使用 &lt;code&gt;lib/site-packages&lt;/code&gt; （在Windows上）或 &lt;code&gt;lib/python&lt;em&gt;X.Y&lt;/em&gt;/site-packages&lt;/code&gt; （在Unix和Macintosh上）。对于每个不同的首尾组合，它会查看它是否指向现有目录，如果是，则将其添加到 &lt;code&gt;sys.path&lt;/code&gt; 中，并检查新添加的配置文件路径。</target>
        </trans-unit>
        <trans-unit id="60e34e8fb6e7795d3b1478935c49f2271750a6ed" translate="yes" xml:space="preserve">
          <source>It supports mapping access by column name and index, iteration, representation, equality testing and &lt;a href=&quot;functions#len&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">它支持按列名和索引，迭代，表示形式，相等性测试和&lt;a href=&quot;functions#len&quot;&gt; &lt;code&gt;len()&lt;/code&gt; 进行&lt;/a&gt;映射访问。</target>
        </trans-unit>
        <trans-unit id="8ef92e73f369396214e54307628eb69b792a4bbe" translate="yes" xml:space="preserve">
          <source>It tries to keep the merits of the old turtle module and to be (nearly) 100% compatible with it. This means in the first place to enable the learning programmer to use all the commands, classes and methods interactively when using the module from within IDLE run with the &lt;code&gt;-n&lt;/code&gt; switch.</source>
          <target state="translated">它试图保持旧的Turtle模块的优点，并（几乎）与之兼容100％。首先，这意味着使学习程序员能够在通过 &lt;code&gt;-n&lt;/code&gt; 开关运行的IDLE中使用模块时，以交互方式使用所有命令，类和方法。</target>
        </trans-unit>
        <trans-unit id="5596437c51c08dd529f0316d43b2b71c787f8abe" translate="yes" xml:space="preserve">
          <source>It uses core algorithm from &lt;a href=&quot;https://cr.yp.to/chacha.html&quot;&gt;ChaCha&lt;/a&gt; cipher designed by &lt;em&gt;Daniel J. Bernstein&lt;/em&gt;.</source>
          <target state="translated">它使用&lt;em&gt;Daniel J. Bernstein&lt;/em&gt;设计的&lt;a href=&quot;https://cr.yp.to/chacha.html&quot;&gt;ChaCha&lt;/a&gt;密码的核心算法。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c3aba2968f744adcc41a20aa7e792d5ccd239a3f" translate="yes" xml:space="preserve">
          <source>It will also ignore the module name used in Python 3 doctest reports. Hence both of these variations will work with the flag specified, regardless of whether the test is run under Python 2.7 or Python 3.2 (or later versions):</source>
          <target state="translated">它也会忽略 Python 3 doctest 报告中使用的模块名。因此,无论测试是在Python 2.7还是Python 3.2 (或更高版本)下运行,这两种变化都将在指定的标志下工作。</target>
        </trans-unit>
        <trans-unit id="66a19358efe30907a9def33ebebbf43009608227" translate="yes" xml:space="preserve">
          <source>It will be called to process server continuation responses; the &lt;em&gt;response&lt;/em&gt; argument it is passed will be &lt;code&gt;bytes&lt;/code&gt;. It should return &lt;code&gt;bytes&lt;/code&gt;&lt;em&gt;data&lt;/em&gt; that will be base64 encoded and sent to the server. It should return &lt;code&gt;None&lt;/code&gt; if the client abort response &lt;code&gt;*&lt;/code&gt; should be sent instead.</source>
          <target state="translated">将调用它来处理服务器连续响应；传递的&lt;em&gt;响应&lt;/em&gt;参数将为 &lt;code&gt;bytes&lt;/code&gt; 。它应该返回将以base64编码并发送到服务器的 &lt;code&gt;bytes&lt;/code&gt; &lt;em&gt;数据&lt;/em&gt;。如果应改为发送客户端中止响应 &lt;code&gt;*&lt;/code&gt; ，则应返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b1ff9842d9447462c9c388a1d83d9a69c4059c5" translate="yes" xml:space="preserve">
          <source>It will call readline a maximum of twice, and return the encoding used (as a string) and a list of any lines (not decoded from bytes) it has read in.</source>
          <target state="translated">它最多调用两次readline,并返回所使用的编码(作为一个字符串)和它所读取的任何行的列表(没有从字节解码)。</target>
        </trans-unit>
        <trans-unit id="e412de0ab51fcff0e7d659b968642619518d0a22" translate="yes" xml:space="preserve">
          <source>It works reliably even when the asyncio event loop is run in a non-main OS thread.</source>
          <target state="translated">即使asyncio事件循环在非主操作系统线程中运行,它也能可靠地工作。</target>
        </trans-unit>
        <trans-unit id="318fb7d25f2176c7734d91b6446e33df1e3f8f6a" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easy to roll your own skipping decorators by making a decorator that calls &lt;a href=&quot;#unittest.skip&quot;&gt;&lt;code&gt;skip()&lt;/code&gt;&lt;/a&gt; on the test when it wants it to be skipped. This decorator skips the test unless the passed object has a certain attribute:</source>
          <target state="translated">通过使装饰器在需要&lt;a href=&quot;#unittest.skip&quot;&gt; &lt;code&gt;skip()&lt;/code&gt; &lt;/a&gt;测试时调用测试上的skip（），可以轻松滚动自己的跳过装饰器。除非传递的对象具有某个属性，否则此装饰器将跳过测试：</target>
        </trans-unit>
        <trans-unit id="cf33e52507dbef8f4d67e44c287b62148de7d34c" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not possible to parse empty strings, even if quoted.</source>
          <target state="translated">即使引用，也无法解析空字符串。</target>
        </trans-unit>
        <trans-unit id="e071ef257a84829dddd1b2021f2e352991af9cff" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to loop over every key in the database using this method and the &lt;a href=&quot;#dbm.gnu.gdbm.nextkey&quot;&gt;&lt;code&gt;nextkey()&lt;/code&gt;&lt;/a&gt; method. The traversal is ordered by &lt;code&gt;gdbm&lt;/code&gt;&amp;rsquo;s internal hash values, and won&amp;rsquo;t be sorted by the key values. This method returns the starting key.</source>
          <target state="translated">使用此方法和&lt;a href=&quot;#dbm.gnu.gdbm.nextkey&quot;&gt; &lt;code&gt;nextkey()&lt;/code&gt; &lt;/a&gt;方法可以遍历数据库中的每个键。遍历由 &lt;code&gt;gdbm&lt;/code&gt; 的内部哈希值排序，不会按键值排序。此方法返回开始键。</target>
        </trans-unit>
        <trans-unit id="79cf85d9f5bddaece698e10c86a31d6561698206" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s tempting to calculate mean and standard deviation from the result vector and report these. However, this is not very useful. In a typical case, the lowest value gives a lower bound for how fast your machine can run the given code snippet; higher values in the result vector are typically not caused by variability in Python&amp;rsquo;s speed, but by other processes interfering with your timing accuracy. So the &lt;a href=&quot;functions#min&quot;&gt;&lt;code&gt;min()&lt;/code&gt;&lt;/a&gt; of the result is probably the only number you should be interested in. After that, you should look at the entire vector and apply common sense rather than statistics.</source>
          <target state="translated">试图根据结果向量计算均值和标准差并报告这些值很诱人。但是，这不是很有用。在典型情况下，最小值给出了机器可以运行给定代码段的速度的下限；结果向量中较高的值通常不是由Python速度的变化引起的，而是由其他影响您的计时精度的过程引起的。因此，结果的&lt;a href=&quot;functions#min&quot;&gt; &lt;code&gt;min()&lt;/code&gt; &lt;/a&gt;可能是您应该感兴趣的唯一数字。在那之后，您应该查看整个向量，并应用常识而不是统计学。</target>
        </trans-unit>
        <trans-unit id="b2f79319d526f01fcd626f1555ae39d29870b549" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s up to the tool consuming the annotations to decide whether the client is allowed to have several annotations on one type and how to merge those annotations.</source>
          <target state="translated">由使用注释的工具决定是否允许客户端在一种类型上具有多个注释以及如何合并这些注释。</target>
        </trans-unit>
        <trans-unit id="f0b5c2cece26ef74815cda706410d529a21bd417" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s very helpful to use this feature during script development. The reports produced by &lt;a href=&quot;cgitb#module-cgitb&quot;&gt;&lt;code&gt;cgitb&lt;/code&gt;&lt;/a&gt; provide information that can save you a lot of time in tracking down bugs. You can always remove the &lt;code&gt;cgitb&lt;/code&gt; line later when you have tested your script and are confident that it works correctly.</source>
          <target state="translated">在脚本开发过程中使用此功能非常有帮助。&lt;a href=&quot;cgitb#module-cgitb&quot;&gt; &lt;code&gt;cgitb&lt;/code&gt; &lt;/a&gt;生成的报告提供的信息可以为您节省大量的时间来查找错误。测试脚本并确信其正确运行后，您随时可以在以后删除 &lt;code&gt;cgitb&lt;/code&gt; 行。</target>
        </trans-unit>
        <trans-unit id="22c515398dd54e978c320c9deb0d0268d495ea20" translate="yes" xml:space="preserve">
          <source>Italic mode</source>
          <target state="translated">斜体模式</target>
        </trans-unit>
        <trans-unit id="5cbdcd93f424472e328e1a57f47a17f48c00f33b" translate="yes" xml:space="preserve">
          <source>Item Options</source>
          <target state="translated">项目选项</target>
        </trans-unit>
        <trans-unit id="6202f13083abbb77f81ad8a1985547e0eaade10c" translate="yes" xml:space="preserve">
          <source>Item&amp;rsquo;s option values may be displayed in a different order than the order in which they are stored.</source>
          <target state="translated">项目的选项值可能以与存储顺序不同的顺序显示。</target>
        </trans-unit>
        <trans-unit id="814115a7a4ce068e1e313aab07088369d6491578" translate="yes" xml:space="preserve">
          <source>Iterating over a message object tree is fairly easy with the &lt;a href=&quot;email.compat32-message#email.message.Message.walk&quot;&gt;&lt;code&gt;Message.walk&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#module-email.iterators&quot;&gt;&lt;code&gt;email.iterators&lt;/code&gt;&lt;/a&gt; module provides some useful higher level iterations over message object trees.</source>
          <target state="translated">使用&lt;a href=&quot;email.compat32-message#email.message.Message.walk&quot;&gt; &lt;code&gt;Message.walk&lt;/code&gt; &lt;/a&gt;方法在消息对象树上进行迭代非常容易。所述&lt;a href=&quot;#module-email.iterators&quot;&gt; &lt;code&gt;email.iterators&lt;/code&gt; &lt;/a&gt;模块，提供了消息的对象树一些有用的更高级别的迭代。</target>
        </trans-unit>
        <trans-unit id="dc41d23f9c2b8b34eed362c2d5a66ec1341fc2fe" translate="yes" xml:space="preserve">
          <source>Iterating over the members of an enum does not provide the aliases:</source>
          <target state="translated">遍历一个枚举的成员并不提供别名。</target>
        </trans-unit>
        <trans-unit id="09a13476ca8a54e634b1c965592cc50659e1d997" translate="yes" xml:space="preserve">
          <source>Iterating views while adding or deleting entries in the dictionary may raise a &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; or fail to iterate over all entries.</source>
          <target state="translated">在字典中添加或删除条目时迭代视图可能会引发&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;或无法迭代所有条目。</target>
        </trans-unit>
        <trans-unit id="18905aab409cadb5b72681a650ec99001cb221e0" translate="yes" xml:space="preserve">
          <source>Iteration</source>
          <target state="translated">Iteration</target>
        </trans-unit>
        <trans-unit id="c8de7b3a4ba4a49d433b993cb2d78885338309d1" translate="yes" xml:space="preserve">
          <source>Iteratively unpack from the buffer &lt;em&gt;buffer&lt;/em&gt; according to the format string &lt;em&gt;format&lt;/em&gt;. This function returns an iterator which will read equally-sized chunks from the buffer until all its contents have been consumed. The buffer&amp;rsquo;s size in bytes must be a multiple of the size required by the format, as reflected by &lt;a href=&quot;#struct.calcsize&quot;&gt;&lt;code&gt;calcsize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">根据格式字符串&lt;em&gt;format&lt;/em&gt;迭代地从缓冲&lt;em&gt;缓冲区中&lt;/em&gt;解包。该函数返回一个迭代器，该迭代器将从缓冲区读取大小相等的块，直到其所有内容都被消耗为止。缓冲区的大小（以字节为单位）必须是格式要求的大小的倍数，如&lt;a href=&quot;#struct.calcsize&quot;&gt; &lt;code&gt;calcsize()&lt;/code&gt; &lt;/a&gt;所反映。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="translated">Iterator</target>
        </trans-unit>
        <trans-unit id="4bf9de45ad47d7c5378d6a6b4878a23abb027cf7" translate="yes" xml:space="preserve">
          <source>Iterator Types</source>
          <target state="translated">迭代器类型</target>
        </trans-unit>
        <trans-unit id="46761e79cfdea0019d907a53f45846a1ee9a6345" translate="yes" xml:space="preserve">
          <source>Itertool functions</source>
          <target state="translated">迭代工具功能</target>
        </trans-unit>
        <trans-unit id="6e54a0513216ff9ab3f49477b340232097393b29" translate="yes" xml:space="preserve">
          <source>Itertools Recipes</source>
          <target state="translated">Itertools 食谱</target>
        </trans-unit>
        <trans-unit id="145aa1575e52b7c70be4caf59f0df6c3926fe2de" translate="yes" xml:space="preserve">
          <source>Its default value is 1 minute.</source>
          <target state="translated">其默认值为1分钟。</target>
        </trans-unit>
        <trans-unit id="cf0c54b9eac44883aa5ea016a0936bae63b1471b" translate="yes" xml:space="preserve">
          <source>Its default value is 30 seconds.</source>
          <target state="translated">其默认值为30秒。</target>
        </trans-unit>
        <trans-unit id="6615a04b6ee93ef346e1b7e4c47b5858de4e7e29" translate="yes" xml:space="preserve">
          <source>Its default value is 5 minutes.</source>
          <target state="translated">其默认值为5分钟。</target>
        </trans-unit>
        <trans-unit id="abd75b8bd93dc8fe125c1d1c7e47d4f0550bbcb2" translate="yes" xml:space="preserve">
          <source>Its default value is 5 seconds.</source>
          <target state="translated">其默认值为5秒。</target>
        </trans-unit>
        <trans-unit id="dc3bdbc56788fad2aa8a182d78a9cdd53617a14d" translate="yes" xml:space="preserve">
          <source>Its file,line position.</source>
          <target state="translated">其文件,行的位置。</target>
        </trans-unit>
        <trans-unit id="715aa3328be5ee249a0969744b5351374ea7673e" translate="yes" xml:space="preserve">
          <source>Its methods create and return &lt;a href=&quot;#multiprocessing-proxy-objects&quot;&gt;Proxy Objects&lt;/a&gt; for a number of commonly used data types to be synchronized across processes. This notably includes shared lists and dictionaries.</source>
          <target state="translated">它的方法为许多常用的数据类型创建并返回&lt;a href=&quot;#multiprocessing-proxy-objects&quot;&gt;代理对象&lt;/a&gt;，以便跨进程进行同步。特别是，这包括共享列表和字典。</target>
        </trans-unit>
        <trans-unit id="2fff28012a7534f73380035c0ede53d295420a3b" translate="yes" xml:space="preserve">
          <source>JPEG data in JFIF or Exif formats</source>
          <target state="translated">JFIF或Exif格式的JPEG日期。</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="e73d3511fce24ebc291cfc1a0bf8fb3055e4b3c0" translate="yes" xml:space="preserve">
          <source>JSON is a subset of &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; 1.2. The JSON produced by this module&amp;rsquo;s default settings (in particular, the default &lt;em&gt;separators&lt;/em&gt; value) is also a subset of YAML 1.0 and 1.1. This module can thus also be used as a YAML serializer.</source>
          <target state="translated">JSON是&lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; 1.2 的子集。此模块的默认设置（特别是默认的&lt;em&gt;分隔符&lt;/em&gt;值）生成的JSON 也是YAML 1.0和1.1的子集。因此，此模块也可以用作YAML序列化器。</target>
        </trans-unit>
        <trans-unit id="74477a71066c32a03e3b5e0f372cb2d16bb5ab67" translate="yes" xml:space="preserve">
          <source>JSON is a text serialization format (it outputs unicode text, although most of the time it is then encoded to &lt;code&gt;utf-8&lt;/code&gt;), while pickle is a binary serialization format;</source>
          <target state="translated">JSON是一种文本序列化格式（尽管大多数情况下随后将其编码为 &lt;code&gt;utf-8&lt;/code&gt; ，但它输出unicode文本），而pickle是二进制序列化格式；</target>
        </trans-unit>
        <trans-unit id="88798c723bcb212288a6869233d3bcfab4c6e224" translate="yes" xml:space="preserve">
          <source>JSON is human-readable, while pickle is not;</source>
          <target state="translated">JSON是人类可读的,而pickle不是。</target>
        </trans-unit>
        <trans-unit id="26dcb3da6e496d8fa3c185868f494af19a08c8d6" translate="yes" xml:space="preserve">
          <source>JSON is interoperable and widely used outside of the Python ecosystem, while pickle is Python-specific;</source>
          <target state="translated">JSON是可互操作的,在Python生态系统之外被广泛使用,而pickle是Python特有的。</target>
        </trans-unit>
        <trans-unit id="b58d3fed6d6262143493b847936ace0c088070e9" translate="yes" xml:space="preserve">
          <source>JSON, by default, can only represent a subset of the Python built-in types, and no custom classes; pickle can represent an extremely large number of Python types (many of them automatically, by clever usage of Python&amp;rsquo;s introspection facilities; complex cases can be tackled by implementing &lt;a href=&quot;#pickle-inst&quot;&gt;specific object APIs&lt;/a&gt;);</source>
          <target state="translated">默认情况下，JSON只能表示Python内置类型的子集，而不能表示自定义类。pickle可以表示大量的Python类型（通过巧妙地使用Python的自省功能，其中的许多会自动实现；可以通过实现&lt;a href=&quot;#pickle-inst&quot;&gt;特定的对象API&lt;/a&gt;解决复杂的情况）；</target>
        </trans-unit>
        <trans-unit id="3c157bbba1c3c6dd4684d9e17bd5cbdd293fa040" translate="yes" xml:space="preserve">
          <source>James Henstridge</source>
          <target state="translated">James Henstridge</target>
        </trans-unit>
        <trans-unit id="aae47823aad5375bf33ac2c5178d07c30af7b55d" translate="yes" xml:space="preserve">
          <source>January 1 of year 1 is called day number 1, January 2 of year 1 is called day number 2, and so on. &lt;a href=&quot;#id6&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;</source>
          <target state="translated">第1年的1月1日称为第1天，第1年的1月2日称为第2天，依此类推。&lt;a href=&quot;#id6&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9239c22d1d1c990ca8c206cb408b345a3ec8114c" translate="yes" xml:space="preserve">
          <source>Japanese</source>
          <target state="translated">Japanese</target>
        </trans-unit>
        <trans-unit id="db10f36d9223f6e5b2b87cbc94ecdb4f6367b21d" translate="yes" xml:space="preserve">
          <source>Japanese, Korean, Simplified Chinese, Western Europe, Greek</source>
          <target state="translated">日语、韩语、简体中文、西欧、希腊语。</target>
        </trans-unit>
        <trans-unit id="da19e6ace2ea93a2694470984913cc9be9f8a78a" translate="yes" xml:space="preserve">
          <source>Java Platform</source>
          <target state="translated">Java平台</target>
        </trans-unit>
        <trans-unit id="24e07b1280211517893038a57e2fa614b51c83cb" translate="yes" xml:space="preserve">
          <source>Join a &lt;em&gt;thread&lt;/em&gt; within &lt;em&gt;timeout&lt;/em&gt;. Raise an &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; if thread is still alive after &lt;em&gt;timeout&lt;/em&gt; seconds.</source>
          <target state="translated">在&lt;em&gt;超时&lt;/em&gt;内加入&lt;em&gt;线程&lt;/em&gt;。如果线程在&lt;em&gt;超时&lt;/em&gt;秒后仍处于活动状态，则引发&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86ec87f8fcd9ef64d26787f07fb5fc64981fb9d0" translate="yes" xml:space="preserve">
          <source>Join adjacent text nodes so that all stretches of text are stored as single &lt;code&gt;Text&lt;/code&gt; instances. This simplifies processing text from a DOM tree for many applications.</source>
          <target state="translated">连接相邻的文本节点，以便所有文本段都存储为单个 &lt;code&gt;Text&lt;/code&gt; 实例。这简化了许多应用程序从DOM树处理文本的过程。</target>
        </trans-unit>
        <trans-unit id="60f2e868ffb015b783bfe34cd024cda4ded92d88" translate="yes" xml:space="preserve">
          <source>Join one or more path components intelligently. The return value is the concatenation of &lt;em&gt;path&lt;/em&gt; and any members of &lt;em&gt;*paths&lt;/em&gt; with exactly one directory separator (&lt;code&gt;os.sep&lt;/code&gt;) following each non-empty part except the last, meaning that the result will only end in a separator if the last part is empty. If a component is an absolute path, all previous components are thrown away and joining continues from the absolute path component.</source>
          <target state="translated">智能地连接一个或多个路径组件。返回值是&lt;em&gt;path&lt;/em&gt;和&lt;em&gt;* paths的&lt;/em&gt;任何成员的串联，除最后一个以外，每个非空部分后面都有一个目录分隔符（ &lt;code&gt;os.sep&lt;/code&gt; ），这意味着结果将仅在分隔符中结束（如果最后一部分为空） 。如果组件是绝对路径，则所有先前的组件都将被丢弃，并且连接将从绝对路径组件继续。</target>
        </trans-unit>
        <trans-unit id="eaf8550cd527a4aa5bcd750c5566f8a76a8a1f3f" translate="yes" xml:space="preserve">
          <source>Join the background thread. This can only be used after &lt;a href=&quot;#multiprocessing.Queue.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; has been called. It blocks until the background thread exits, ensuring that all data in the buffer has been flushed to the pipe.</source>
          <target state="translated">加入后台线程。仅在调用&lt;a href=&quot;#multiprocessing.Queue.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;之后才能使用此方法。它阻塞直到后台线程退出，以确保缓冲区中的所有数据都已刷新到管道中。</target>
        </trans-unit>
        <trans-unit id="fffc9a5e23a3f1b2ccacd3e4adf7ea7865062fbf" translate="yes" xml:space="preserve">
          <source>Joining processes that use queues</source>
          <target state="translated">加入使用队列的进程</target>
        </trans-unit>
        <trans-unit id="80c8c7d106ea49237f4b6ea2c4ae9879166d4287" translate="yes" xml:space="preserve">
          <source>Joining zombie processes</source>
          <target state="translated">加入僵尸进程</target>
        </trans-unit>
        <trans-unit id="a4bf8d21588e5176ca76cda88e2cd50069125501" translate="yes" xml:space="preserve">
          <source>Joins the applied CAN filters such that only CAN frames that match all given CAN filters are passed to user space.</source>
          <target state="translated">加入应用的CAN过滤器,这样只有与所有给定的CAN过滤器相匹配的CAN帧才会传递到用户空间。</target>
        </trans-unit>
        <trans-unit id="e3d34ba51db462866353060a6c3f2d483d8c7643" translate="yes" xml:space="preserve">
          <source>Juan David Ib&amp;aacute;&amp;ntilde;ez Palomar</source>
          <target state="translated">胡安&amp;middot;大卫&amp;middot;伊巴涅斯&amp;middot;帕洛玛</target>
        </trans-unit>
        <trans-unit id="e51d02293aa68e17eecb8aa544b483cf96c6fa49" translate="yes" xml:space="preserve">
          <source>Just returns 10, as this is Decimal, :)</source>
          <target state="translated">只是返回10,因为这是十进制,:)</target>
        </trans-unit>
        <trans-unit id="4f1fddc4dabd32f2e61ca9f91e0ca2bb68fd646f" translate="yes" xml:space="preserve">
          <source>Just returns self, this method is only to comply with the Decimal Specification.</source>
          <target state="translated">只是返回self,这个方法只是为了符合十进制规范。</target>
        </trans-unit>
        <trans-unit id="47d7416fd642efd47199c18f79129bbd51455d2c" translate="yes" xml:space="preserve">
          <source>KEY_DC</source>
          <target state="translated">KEY_DC</target>
        </trans-unit>
        <trans-unit id="033f3bd76e9037ed2eacdf745e1f381ae09e1e6e" translate="yes" xml:space="preserve">
          <source>KEY_END</source>
          <target state="translated">KEY_END</target>
        </trans-unit>
        <trans-unit id="e8b0bdc4a205564ace3e67b5d2590e9a7b3ebe0f" translate="yes" xml:space="preserve">
          <source>KEY_HOME</source>
          <target state="translated">KEY_HOME</target>
        </trans-unit>
        <trans-unit id="1ed0f4c565cdf40018aa6d1a7f2dffe8a57d07b7" translate="yes" xml:space="preserve">
          <source>KEY_IC</source>
          <target state="translated">KEY_IC</target>
        </trans-unit>
        <trans-unit id="f9606cdd29d726a1efc9306cd6515a746d5e9de8" translate="yes" xml:space="preserve">
          <source>KEY_NPAGE</source>
          <target state="translated">KEY_NPAGE</target>
        </trans-unit>
        <trans-unit id="817be3fc68df61d26f925ae492d47665d4ff3127" translate="yes" xml:space="preserve">
          <source>KEY_PPAGE</source>
          <target state="translated">KEY_PPAGE</target>
        </trans-unit>
        <trans-unit id="580b34c07a9b803a5f68c0e7990ba58269a92490" translate="yes" xml:space="preserve">
          <source>Kahan, W: Branch cuts for complex elementary functions; or, Much ado about nothing&amp;rsquo;s sign bit. In Iserles, A., and Powell, M. (eds.), The state of the art in numerical analysis. Clarendon Press (1987) pp165&amp;ndash;211.</source>
          <target state="translated">Kahan，W：复杂基本功能的分支削减；或者，很多事都没有。在A. Iserles和M. Powell（编辑）中，数值分析的最新技术。Clarendon Press（1987）第165&amp;ndash;211页。</target>
        </trans-unit>
        <trans-unit id="b9fedaa07b209e1f7a9c2d83295a76fe49f3b49f" translate="yes" xml:space="preserve">
          <source>Kazakh</source>
          <target state="translated">Kazakh</target>
        </trans-unit>
        <trans-unit id="24a946a3338502270c212fb158dbe6bb77ee0309" translate="yes" xml:space="preserve">
          <source>Keep a database of &lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; mappings.</source>
          <target state="translated">保留 &lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; 映射的数据库。</target>
        </trans-unit>
        <trans-unit id="37bfb81baa66440423c45f18f727362864a6cfce" translate="yes" xml:space="preserve">
          <source>Keep a database of &lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; mappings. A realm of &lt;code&gt;None&lt;/code&gt; is considered a catch-all realm, which is searched if no other realm fits.</source>
          <target state="translated">保留 &lt;code&gt;(realm, uri) -&amp;gt; (user, password)&lt;/code&gt; 映射的数据库。的境界 &lt;code&gt;None&lt;/code&gt; 被认为是一个包罗万象的境界，这是搜索，如果没有其他的境界配合。</target>
        </trans-unit>
        <trans-unit id="03de4413ffacf22791c546e17121674eadf9916d" translate="yes" xml:space="preserve">
          <source>Keep in mind that if the node you&amp;rsquo;re operating on has child nodes you must either transform the child nodes yourself or call the &lt;code&gt;generic_visit()&lt;/code&gt; method for the node first.</source>
          <target state="translated">请记住，如果您正在操作的节点具有子节点，则必须自己转换子节点或首先为该节点调用 &lt;code&gt;generic_visit()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c563af2eb52c22befb802b194ed5fde24ca2d3a7" translate="yes" xml:space="preserve">
          <source>Keep in mind that retrieving sub-objects from Structure, Unions, and Arrays doesn&amp;rsquo;t &lt;em&gt;copy&lt;/em&gt; the sub-object, instead it retrieves a wrapper object accessing the root-object&amp;rsquo;s underlying buffer.</source>
          <target state="translated">请记住，从&amp;ldquo;结构&amp;rdquo;，&amp;ldquo;联合&amp;rdquo;和&amp;ldquo;数组&amp;rdquo;中检索子对象不会&lt;em&gt;复制&lt;/em&gt;子对象，而是会检索访问根对象的基础缓冲区的包装对象。</target>
        </trans-unit>
        <trans-unit id="4298e303439a440ab55bf7bbf886c709ae66ef29" translate="yes" xml:space="preserve">
          <source>Keeping references to frame objects, as found in the first element of the frame records these functions return, can cause your program to create reference cycles. Once a reference cycle has been created, the lifespan of all objects which can be accessed from the objects which form the cycle can become much longer even if Python&amp;rsquo;s optional cycle detector is enabled. If such cycles must be created, it is important to ensure they are explicitly broken to avoid the delayed destruction of objects and increased memory consumption which occurs.</source>
          <target state="translated">在框架的第一个元素中记录到这些函数返回的内容时，保留对框架对象的引用可能会导致程序创建引用循环。创建参考循环后，即使启用了Python的可选循环检测器，也可以从构成循环的对象访问的所有对象的寿命变得更长。如果必须创建这样的循环，则重要的是要确保将其显式破坏，以避免延迟破坏对象和增加内存消耗。</target>
        </trans-unit>
        <trans-unit id="52a345e99e64b9ca6f928d5687177a892525371b" translate="yes" xml:space="preserve">
          <source>Kent Beck&amp;rsquo;s original paper on testing frameworks using the pattern shared by &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">肯特&amp;middot;贝克（Kent Beck）关于使用&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;共享模式的测试框架的原始论文。</target>
        </trans-unit>
        <trans-unit id="7267bbd8e2137364d4939e2071439e42d40f32fb" translate="yes" xml:space="preserve">
          <source>Kevent Objects</source>
          <target state="translated">Kevent对象</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="dbab391d4ec83ba2f4394be31de35a61669a5996" translate="yes" xml:space="preserve">
          <source>Key and values are always stored as bytes. This means that when strings are used they are implicitly converted to the default encoding before being stored.</source>
          <target state="translated">键和值总是以字节形式存储。这意味着当使用字符串时,它们在被存储之前会被隐含地转换为默认编码。</target>
        </trans-unit>
        <trans-unit id="2f019ec46ab9548a295fae40fb32bbf280932bb8" translate="yes" xml:space="preserve">
          <source>Key bindings</source>
          <target state="translated">钥匙扣</target>
        </trans-unit>
        <trans-unit id="f0cc3ad4ee33d02515db5713788523cd4cf74945" translate="yes" xml:space="preserve">
          <source>Key constant</source>
          <target state="translated">关键常数</target>
        </trans-unit>
        <trans-unit id="6bbbfa7e022b93aaca86b7e55f8cf9f9e9f25683" translate="yes" xml:space="preserve">
          <source>Key derivation</source>
          <target state="translated">关键派生</target>
        </trans-unit>
        <trans-unit id="4c6694a69ad0f467a3eb48c707287ff83fc7df0b" translate="yes" xml:space="preserve">
          <source>Key derivation and key stretching algorithms are designed for secure password hashing. Naive algorithms such as &lt;code&gt;sha1(password)&lt;/code&gt; are not resistant against brute-force attacks. A good password hashing function must be tunable, slow, and include a &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_%28cryptography%29&quot;&gt;salt&lt;/a&gt;.</source>
          <target state="translated">密钥派生和密钥扩展算法设计用于安全密码哈希。诸如 &lt;code&gt;sha1(password)&lt;/code&gt; 之类的天真算法不能抵抗暴力攻击。好的密码哈希函数必须是可调的，缓慢的，并且必须包含&lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_%28cryptography%29&quot;&gt;salt&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="99214c71e9133c70244f001bb7de7d4fe414b3a5" translate="yes" xml:space="preserve">
          <source>KeyboardInterrupt</source>
          <target state="translated">KeyboardInterrupt</target>
        </trans-unit>
        <trans-unit id="aba6df4879209d36e1a5a7eb8f2829348bfc1607" translate="yes" xml:space="preserve">
          <source>Keycap</source>
          <target state="translated">Keycap</target>
        </trans-unit>
        <trans-unit id="f431dd90bf1296fd6be5fc2fecca2fe9d70abb5f" translate="yes" xml:space="preserve">
          <source>Keyed hashing</source>
          <target state="translated">钥匙式散列</target>
        </trans-unit>
        <trans-unit id="914eeba5ce4ce3c00e9428b28f9ccf6cf0cce211" translate="yes" xml:space="preserve">
          <source>Keyed hashing can be used for authentication as a faster and simpler replacement for &lt;a href=&quot;https://en.wikipedia.org/wiki/Hash-based_message_authentication_code&quot;&gt;Hash-based message authentication code&lt;/a&gt; (HMAC). BLAKE2 can be securely used in prefix-MAC mode thanks to the indifferentiability property inherited from BLAKE.</source>
          <target state="translated">键控哈希可以用于身份验证，作为&lt;a href=&quot;https://en.wikipedia.org/wiki/Hash-based_message_authentication_code&quot;&gt;基于哈希的消息身份验证代码&lt;/a&gt;（HMAC）的更快，更简单的替代。由于从BLAKE继承了不可区分性属性，因此可以在前缀MAC模式下安全地使用BLAKE2。</target>
        </trans-unit>
        <trans-unit id="a9548bb855e07b59b91626cc17d69c771e2e87b2" translate="yes" xml:space="preserve">
          <source>Keys and values are iterated over in insertion order. This allows the creation of &lt;code&gt;(value, key)&lt;/code&gt; pairs using &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;pairs = zip(d.values(), d.keys())&lt;/code&gt;. Another way to create the same list is &lt;code&gt;pairs = [(v, k) for (k, v) in d.items()]&lt;/code&gt;.</source>
          <target state="translated">键和值按插入顺序进行迭代。这允许使用&lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt;创建 &lt;code&gt;(value, key)&lt;/code&gt; 对： &lt;code&gt;pairs = zip(d.values(), d.keys())&lt;/code&gt; 。创建相同列表的另一种方法是 &lt;code&gt;pairs = [(v, k) for (k, v) in d.items()]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c300864ed75026c1eb88a7a83759898d09c397b8" translate="yes" xml:space="preserve">
          <source>Keys are referred to by integer constants with names starting with &lt;code&gt;KEY_&lt;/code&gt;. The exact keycaps available are system dependent.</source>
          <target state="translated">键由名称以 &lt;code&gt;KEY_&lt;/code&gt; 开头的整数常量引用。可用的确切键帽取决于系统。</target>
        </trans-unit>
        <trans-unit id="228f5d286dcdd48b2fc18dd8734bb35bc953ff86" translate="yes" xml:space="preserve">
          <source>Keys in key/value pairs of JSON are always of the type &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. When a dictionary is converted into JSON, all the keys of the dictionary are coerced to strings. As a result of this, if a dictionary is converted into JSON and then back into a dictionary, the dictionary may not equal the original one. That is, &lt;code&gt;loads(dumps(x)) != x&lt;/code&gt; if x has non-string keys.</source>
          <target state="translated">JSON的键/值对中的键始终为&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;类型。当字典转换为JSON时，字典的所有键都被强制转换为字符串。结果，如果将字典转换为JSON然后又转换为字典，则该字典可能不等于原始字典。也就是说，如果x具有非字符串键，那么 &lt;code&gt;loads(dumps(x)) != x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="439a459f8af4300a3a5b519bbed313651ca1e4c1" translate="yes" xml:space="preserve">
          <source>Keys views are set-like since their entries are unique and hashable. If all values are hashable, so that &lt;code&gt;(key, value)&lt;/code&gt; pairs are unique and hashable, then the items view is also set-like. (Values views are not treated as set-like since the entries are generally not unique.) For set-like views, all of the operations defined for the abstract base class &lt;a href=&quot;collections.abc#collections.abc.Set&quot;&gt;&lt;code&gt;collections.abc.Set&lt;/code&gt;&lt;/a&gt; are available (for example, &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, or &lt;code&gt;^&lt;/code&gt;).</source>
          <target state="translated">键视图是集合式的，因为它们的条目是唯一且可哈希的。如果所有值都是可哈希的，因此 &lt;code&gt;(key, value)&lt;/code&gt; 对是唯一且可哈希的，则项目视图也将类似于集合。（由于条目通常不是唯一的，因此值视图不被视为类集合。）对于类集合视图，为抽象基类&lt;a href=&quot;collections.abc#collections.abc.Set&quot;&gt; &lt;code&gt;collections.abc.Set&lt;/code&gt; &lt;/a&gt;定义的所有操作均可用（例如 &lt;code&gt;==&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; 或 &lt;code&gt;^&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="72035afe680b44899ee30976fd5b486a93144c83" translate="yes" xml:space="preserve">
          <source>Keystroke</source>
          <target state="translated">Keystroke</target>
        </trans-unit>
        <trans-unit id="a0256d5e54265d1b99c70a9f07e115e966a973da" translate="yes" xml:space="preserve">
          <source>Keywords can be used in the &lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt;&lt;code&gt;patch.dict()&lt;/code&gt;&lt;/a&gt; call to set values in the dictionary:</source>
          <target state="translated">可以在&lt;a href=&quot;#unittest.mock.patch.dict&quot;&gt; &lt;code&gt;patch.dict()&lt;/code&gt; &lt;/a&gt;调用中使用关键字来设置字典中的值：</target>
        </trans-unit>
        <trans-unit id="bb850e24e1448951f9be9555cccb1e5c8e9aa4cf" translate="yes" xml:space="preserve">
          <source>Kill signal.</source>
          <target state="translated">杀死信号。</target>
        </trans-unit>
        <trans-unit id="b473142e64b2d483a80088f0192d814677f79849" translate="yes" xml:space="preserve">
          <source>Kill the child.</source>
          <target state="translated">杀了这个孩子。</target>
        </trans-unit>
        <trans-unit id="dfb8d10a715be56498bf3463ceb602e0c5f6cdfd" translate="yes" xml:space="preserve">
          <source>Kill the subprocess and close all pipes.</source>
          <target state="translated">杀掉子进程,关闭所有管道。</target>
        </trans-unit>
        <trans-unit id="bcef2d72d27a3ff305fd835a27596403d70aa65a" translate="yes" xml:space="preserve">
          <source>Kill the subprocess by calling the &lt;a href=&quot;#asyncio.SubprocessTransport.kill&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">通过调用&lt;a href=&quot;#asyncio.SubprocessTransport.kill&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt;方法来杀死子进程。</target>
        </trans-unit>
        <trans-unit id="5eea27376f6c77dd4e7d334cd247a3c6708d22ec" translate="yes" xml:space="preserve">
          <source>Kill the subprocess.</source>
          <target state="translated">杀死子进程。</target>
        </trans-unit>
        <trans-unit id="a9c2ee0789d81c2bfbe1a2dc41f783da5246898c" translate="yes" xml:space="preserve">
          <source>Kills the child. On POSIX OSs the function sends SIGKILL to the child. On Windows &lt;a href=&quot;#subprocess.Popen.kill&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">杀死孩子。在POSIX操作系统上，该功能将SIGKILL发送给子级。在Windows&lt;a href=&quot;#subprocess.Popen.kill&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt;是一个别名&lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f19c6828b717749bb8b678b96baba09b9afe4b9" translate="yes" xml:space="preserve">
          <source>Kills the child. On Posix OSs the function sends SIGKILL to the child. On Windows &lt;a href=&quot;#subprocess.Popen.kill&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt; is an alias for &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">杀死孩子。在Posix OS上，该功能将SIGKILL发送给子级。在Windows &lt;a href=&quot;#subprocess.Popen.kill&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt;是一个别名&lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dec66c5bf0f7fe4cc038ac871def8eb1ac31c146" translate="yes" xml:space="preserve">
          <source>Korean</source>
          <target state="translated">Korean</target>
        </trans-unit>
        <trans-unit id="6f4d7efd09292b580160cf054a1eb415aa098b83" translate="yes" xml:space="preserve">
          <source>Kqueue Objects</source>
          <target state="translated">Kqueue对象</target>
        </trans-unit>
        <trans-unit id="1ae87da77ec3d4df1eb9c1cc7937078e8fd86235" translate="yes" xml:space="preserve">
          <source>L-System</source>
          <target state="translated">L-System</target>
        </trans-unit>
        <trans-unit id="4935e8e440452679bb6e8677598051c98309501a" translate="yes" xml:space="preserve">
          <source>LIFO</source>
          <target state="translated">LIFO</target>
        </trans-unit>
        <trans-unit id="8f692914bc66ead997b8bc1788f89a45c63f1006" translate="yes" xml:space="preserve">
          <source>LIFO Queue</source>
          <target state="translated">LIFO队列</target>
        </trans-unit>
        <trans-unit id="e0ac7d929c8c9064651f3a5b472a916a78c16845" translate="yes" xml:space="preserve">
          <source>LOG_ALERT</source>
          <target state="translated">LOG_ALERT</target>
        </trans-unit>
        <trans-unit id="00a42081f87dfdb7c8750d2dc99a1c5a47afe15c" translate="yes" xml:space="preserve">
          <source>LOG_AUTH</source>
          <target state="translated">LOG_AUTH</target>
        </trans-unit>
        <trans-unit id="b059e128bbbf4abbc726cbc5b3dc15823fa1d3b0" translate="yes" xml:space="preserve">
          <source>LOG_AUTHPRIV</source>
          <target state="translated">LOG_AUTHPRIV</target>
        </trans-unit>
        <trans-unit id="3ea8e1cd8bec535a6b614c37476a25af434a2a64" translate="yes" xml:space="preserve">
          <source>LOG_CRIT</source>
          <target state="translated">LOG_CRIT</target>
        </trans-unit>
        <trans-unit id="e14c128e15575171dccf2a786c6c56cfe90aabfb" translate="yes" xml:space="preserve">
          <source>LOG_CRON</source>
          <target state="translated">LOG_CRON</target>
        </trans-unit>
        <trans-unit id="2db1ea382ae920e08017868d8ca7dc74f1e87577" translate="yes" xml:space="preserve">
          <source>LOG_DAEMON</source>
          <target state="translated">LOG_DAEMON</target>
        </trans-unit>
        <trans-unit id="e9132069aa3cd9868136c9eab4c9121997cd9261" translate="yes" xml:space="preserve">
          <source>LOG_DEBUG</source>
          <target state="translated">LOG_DEBUG</target>
        </trans-unit>
        <trans-unit id="5cbc989f5f6b54b988f6cf238d1dfcafddfe5df0" translate="yes" xml:space="preserve">
          <source>LOG_EMERG</source>
          <target state="translated">LOG_EMERG</target>
        </trans-unit>
        <trans-unit id="c25ebb67e3f524ee4cfb9f242122b115231b2969" translate="yes" xml:space="preserve">
          <source>LOG_ERR</source>
          <target state="translated">LOG_ERR</target>
        </trans-unit>
        <trans-unit id="7076f8e47c7f564a083cced7437884fc3de9c20e" translate="yes" xml:space="preserve">
          <source>LOG_FTP</source>
          <target state="translated">LOG_FTP</target>
        </trans-unit>
        <trans-unit id="508d693347703c9b1449225c00b44e2e84f15cce" translate="yes" xml:space="preserve">
          <source>LOG_INFO</source>
          <target state="translated">LOG_INFO</target>
        </trans-unit>
        <trans-unit id="147a80a7b7486a934d7581b0f33986ae6651bd87" translate="yes" xml:space="preserve">
          <source>LOG_KERN</source>
          <target state="translated">LOG_KERN</target>
        </trans-unit>
        <trans-unit id="4bf6ef93839f6872c9f92acc4f4b838c163bdc96" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL0</source>
          <target state="translated">LOG_LOCAL0</target>
        </trans-unit>
        <trans-unit id="1d85977d2d454e9c3494e61168702f4cbecf12c8" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL1</source>
          <target state="translated">LOG_LOCAL1</target>
        </trans-unit>
        <trans-unit id="e587b1ef1b9f3479ac96923decd64231690910bb" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL2</source>
          <target state="translated">LOG_LOCAL2</target>
        </trans-unit>
        <trans-unit id="ae76a49e2672fc55b235abad25133bc1cc0b3ad5" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL3</source>
          <target state="translated">LOG_LOCAL3</target>
        </trans-unit>
        <trans-unit id="a46daeebb6f0fc83ba853556f660485fc6464822" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL4</source>
          <target state="translated">LOG_LOCAL4</target>
        </trans-unit>
        <trans-unit id="f1df950575fc4b0c0074a0abb00861a8e08a3ed6" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL5</source>
          <target state="translated">LOG_LOCAL5</target>
        </trans-unit>
        <trans-unit id="a5d06673189a0f5f9d67757287d862777d523941" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL6</source>
          <target state="translated">LOG_LOCAL6</target>
        </trans-unit>
        <trans-unit id="f51ad7929d644389ddc043e95d9d787a20eb0f61" translate="yes" xml:space="preserve">
          <source>LOG_LOCAL7</source>
          <target state="translated">LOG_LOCAL7</target>
        </trans-unit>
        <trans-unit id="1ca5af74225a0e933cda1a23779b6b9b7534a5c0" translate="yes" xml:space="preserve">
          <source>LOG_LPR</source>
          <target state="translated">LOG_LPR</target>
        </trans-unit>
        <trans-unit id="3266bdf7a824a1128c05ff0a6eacbb163573bfdb" translate="yes" xml:space="preserve">
          <source>LOG_MAIL</source>
          <target state="translated">LOG_MAIL</target>
        </trans-unit>
        <trans-unit id="f460581d8a89631890f08c7c200582c071d9f348" translate="yes" xml:space="preserve">
          <source>LOG_NEWS</source>
          <target state="translated">LOG_NEWS</target>
        </trans-unit>
        <trans-unit id="fd9c5faaf23df86fefa8b46f512c8f9f2f910ea4" translate="yes" xml:space="preserve">
          <source>LOG_NOTICE</source>
          <target state="translated">LOG_NOTICE</target>
        </trans-unit>
        <trans-unit id="00b0b0f7b44d7be30d92b1245948b1df8d49d79b" translate="yes" xml:space="preserve">
          <source>LOG_SYSLOG</source>
          <target state="translated">LOG_SYSLOG</target>
        </trans-unit>
        <trans-unit id="cf326c7cb4d0b7bd59e5815a628a819974d8b6a6" translate="yes" xml:space="preserve">
          <source>LOG_USER</source>
          <target state="translated">LOG_USER</target>
        </trans-unit>
        <trans-unit id="b69a6c99cd1a6e6314b53f763c30ba82bc041bc6" translate="yes" xml:space="preserve">
          <source>LOG_UUCP</source>
          <target state="translated">LOG_UUCP</target>
        </trans-unit>
        <trans-unit id="d0479a4f305480aef0fe90fae83a03f4865e7fd9" translate="yes" xml:space="preserve">
          <source>LOG_WARNING</source>
          <target state="translated">LOG_WARNING</target>
        </trans-unit>
        <trans-unit id="74341e3c271df3c784e595b804b1f90be0f80429" translate="yes" xml:space="preserve">
          <source>Label</source>
          <target state="translated">Label</target>
        </trans-unit>
        <trans-unit id="011416c82c132a4f52517e4bbdc2375314f6f840" translate="yes" xml:space="preserve">
          <source>Label Options</source>
          <target state="translated">标签选项</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="db07be184479f34078cd4fc76d248dc0975720e9" translate="yes" xml:space="preserve">
          <source>Languages</source>
          <target state="translated">Languages</target>
        </trans-unit>
        <trans-unit id="21162f096b26204df6588bb5dc28d2f51868c501" translate="yes" xml:space="preserve">
          <source>Large File Support</source>
          <target state="translated">大文件支持</target>
        </trans-unit>
        <trans-unit id="314cf2f01043a4a7510f794394e0b8c96cda1587" translate="yes" xml:space="preserve">
          <source>Large file support is enabled in Python when the size of an &lt;code&gt;off_t&lt;/code&gt; is larger than a &lt;code&gt;long&lt;/code&gt; and the &lt;code&gt;long long&lt;/code&gt; is at least as large as an &lt;code&gt;off_t&lt;/code&gt;. It may be necessary to configure and compile Python with certain compiler flags to enable this mode. For example, it is enabled by default with recent versions of Irix, but with Solaris 2.6 and 2.7 you need to do something like:</source>
          <target state="translated">当 &lt;code&gt;off_t&lt;/code&gt; 的大小大于 &lt;code&gt;long&lt;/code&gt; 且 &lt;code&gt;long long&lt;/code&gt; 至少与 &lt;code&gt;off_t&lt;/code&gt; 一样大时，将在Python中启用大文件支持。可能需要使用某些编译器标志配置和编译Python才能启用此模式。例如，默认情况下，最新版本的Irix启用了此功能，但是对于Solaris 2.6和2.7，您需要执行以下操作：</target>
        </trans-unit>
        <trans-unit id="b4101486e371d681731851bb447c9aa495b0e247" translate="yes" xml:space="preserve">
          <source>Later, calling &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will return an object with two attributes, &lt;code&gt;integers&lt;/code&gt; and &lt;code&gt;accumulate&lt;/code&gt;. The &lt;code&gt;integers&lt;/code&gt; attribute will be a list of one or more ints, and the &lt;code&gt;accumulate&lt;/code&gt; attribute will be either the &lt;a href=&quot;functions#sum&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; function, if &lt;code&gt;--sum&lt;/code&gt; was specified at the command line, or the &lt;a href=&quot;functions#max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt; function if it was not.</source>
          <target state="translated">稍后，调用&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;将返回一个具有两个属性的对象，即 &lt;code&gt;integers&lt;/code&gt; 和 &lt;code&gt;accumulate&lt;/code&gt; 。的 &lt;code&gt;integers&lt;/code&gt; 属性将是一个或多个整数的列表，并且 &lt;code&gt;accumulate&lt;/code&gt; 属性将会是所述&lt;a href=&quot;functions#sum&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt;函数，如果 &lt;code&gt;--sum&lt;/code&gt; 在命令行中指定，或&lt;a href=&quot;functions#max&quot;&gt; &lt;code&gt;max()&lt;/code&gt; &lt;/a&gt;函数，如果它不是。</target>
        </trans-unit>
        <trans-unit id="220d5efc8654e9aa0bf6695beee6bfe664735911" translate="yes" xml:space="preserve">
          <source>Latin-1 encoding with &lt;code&gt;\uXXXX&lt;/code&gt; and &lt;code&gt;\UXXXXXXXX&lt;/code&gt; for other code points. Existing backslashes are not escaped in any way. It is used in the Python pickle protocol.</source>
          <target state="translated">其他代码点使用 &lt;code&gt;\uXXXX&lt;/code&gt; 和 &lt;code&gt;\UXXXXXXXX&lt;/code&gt; Latin-1编码。现有的反斜杠不会以任何方式转义。它在Python pickle协议中使用。</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="5304207bb67ab38f044a44e136564dadeaba0897" translate="yes" xml:space="preserve">
          <source>Leave cbreak mode. Return to normal &amp;ldquo;cooked&amp;rdquo; mode with line buffering.</source>
          <target state="translated">退出cbreak模式。使用行缓冲返回正常的&amp;ldquo;煮熟&amp;rdquo;模式。</target>
        </trans-unit>
        <trans-unit id="9b35aee8d3da8fd183e13a370b032dec769e9344" translate="yes" xml:space="preserve">
          <source>Leave echo mode. Echoing of input characters is turned off.</source>
          <target state="translated">离开回声模式。输入字符的回声被关闭。</target>
        </trans-unit>
        <trans-unit id="f604f6318f737fd0cd2341f0f6cdfab969737efb" translate="yes" xml:space="preserve">
          <source>Leave newline mode. Disable translation of return into newline on input, and disable low-level translation of newline into newline/return on output (but this does not change the behavior of &lt;code&gt;addch('\n')&lt;/code&gt;, which always does the equivalent of return and line feed on the virtual screen). With translation off, curses can sometimes speed up vertical motion a little; also, it will be able to detect the return key on input.</source>
          <target state="translated">离开换行模式。禁止在输入时将return转换为换行，并在输出中禁用将newline的低级转换/换行（但是这不会改变 &lt;code&gt;addch('\n')&lt;/code&gt; 的行为，该行为总是等同于return和换行在虚拟屏幕上）。关闭平移功能后，诅咒有时会稍微加快垂直运动的速度。此外，它将能够检测输入上的返回键。</target>
        </trans-unit>
        <trans-unit id="df80f393f0c1283bf1c2011a3966c84e42251e69" translate="yes" xml:space="preserve">
          <source>Leave raw mode. Return to normal &amp;ldquo;cooked&amp;rdquo; mode with line buffering.</source>
          <target state="translated">离开原始模式。使用行缓冲返回正常的&amp;ldquo;煮熟&amp;rdquo;模式。</target>
        </trans-unit>
        <trans-unit id="494064e70529e54389ad678d759801779c5c72df" translate="yes" xml:space="preserve">
          <source>Left Shift</source>
          <target state="translated">左移</target>
        </trans-unit>
        <trans-unit id="fa2ddfd65f207446dfb5c03f954efaeb99e51fad" translate="yes" xml:space="preserve">
          <source>Left highlight</source>
          <target state="translated">左侧高亮</target>
        </trans-unit>
        <trans-unit id="7459e2ff70b4a74b12b3b42dcc8898f1325c4607" translate="yes" xml:space="preserve">
          <source>Left side</source>
          <target state="translated">左侧</target>
        </trans-unit>
        <trans-unit id="4f21b710206cb813c042db5adab0dd62ed395300" translate="yes" xml:space="preserve">
          <source>Left-arrow</source>
          <target state="translated">Left-arrow</target>
        </trans-unit>
        <trans-unit id="fe4e2dded8cbb24225a5077d86ac26e1a4e77daa" translate="yes" xml:space="preserve">
          <source>Legacy API Examples</source>
          <target state="translated">传统API示例</target>
        </trans-unit>
        <trans-unit id="f9e9858ae5963ad7d5dac67bab79e2781ada4b1d" translate="yes" xml:space="preserve">
          <source>Legacy API:</source>
          <target state="translated">传统的API。</target>
        </trans-unit>
        <trans-unit id="e874dde2b7bd15782fc71bda63adbb0435cd8ff4" translate="yes" xml:space="preserve">
          <source>Legacy Shell Invocation Functions</source>
          <target state="translated">传统的Shell调用函数</target>
        </trans-unit>
        <trans-unit id="97830814b9202ba41e9b45589de2504e635919fe" translate="yes" xml:space="preserve">
          <source>Legacy interface</source>
          <target state="translated">遗留接口</target>
        </trans-unit>
        <trans-unit id="f3f33501b9f5989df40734cc741026886ffb8ebc" translate="yes" xml:space="preserve">
          <source>Legacy variant of the &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt;. It has interpolation disabled by default and allows for non-string section names, option names, and values via its unsafe &lt;code&gt;add_section&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods, as well as the legacy &lt;code&gt;defaults=&lt;/code&gt; keyword argument handling.</source>
          <target state="translated">&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; 的&lt;/a&gt;旧版本。它默认情况下禁用插值，并通过其不安全的 &lt;code&gt;add_section&lt;/code&gt; 和 &lt;code&gt;set&lt;/code&gt; 方法以及非传统的 &lt;code&gt;defaults=&lt;/code&gt; 关键字参数处理来允许非字符串节名称，选项名称和值。</target>
        </trans-unit>
        <trans-unit id="66133ee14edcb4e3bbb34ddd9f2cd0c81d9a82cf" translate="yes" xml:space="preserve">
          <source>Legal values are points of the compass: &lt;code&gt;&quot;n&quot;&lt;/code&gt;, &lt;code&gt;&quot;ne&quot;&lt;/code&gt;, &lt;code&gt;&quot;e&quot;&lt;/code&gt;, &lt;code&gt;&quot;se&quot;&lt;/code&gt;, &lt;code&gt;&quot;s&quot;&lt;/code&gt;, &lt;code&gt;&quot;sw&quot;&lt;/code&gt;, &lt;code&gt;&quot;w&quot;&lt;/code&gt;, &lt;code&gt;&quot;nw&quot;&lt;/code&gt;, and also &lt;code&gt;&quot;center&quot;&lt;/code&gt;.</source>
          <target state="translated">合法值是指南针的点： &lt;code&gt;&quot;n&quot;&lt;/code&gt; ， &lt;code&gt;&quot;ne&quot;&lt;/code&gt; ， &lt;code&gt;&quot;e&quot;&lt;/code&gt; ， &lt;code&gt;&quot;se&quot;&lt;/code&gt; ， &lt;code&gt;&quot;s&quot;&lt;/code&gt; ， &lt;code&gt;&quot;sw&quot;&lt;/code&gt; ， &lt;code&gt;&quot;w&quot;&lt;/code&gt; ， &lt;code&gt;&quot;nw&quot;&lt;/code&gt; 以及 &lt;code&gt;&quot;center&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="905f604fb13f295392bda39869104e2dd79e9fb2" translate="yes" xml:space="preserve">
          <source>Legal values are the strings: &lt;code&gt;&quot;left&quot;&lt;/code&gt;, &lt;code&gt;&quot;center&quot;&lt;/code&gt;, &lt;code&gt;&quot;right&quot;&lt;/code&gt;, and &lt;code&gt;&quot;fill&quot;&lt;/code&gt;.</source>
          <target state="translated">合法值是字符串： &lt;code&gt;&quot;left&quot;&lt;/code&gt; ， &lt;code&gt;&quot;center&quot;&lt;/code&gt; ， &lt;code&gt;&quot;right&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;fill&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb67484bf01ce5ec849415f285da75abc22265be" translate="yes" xml:space="preserve">
          <source>Legal values are: &lt;code&gt;'left'&lt;/code&gt;, &lt;code&gt;'right'&lt;/code&gt;, &lt;code&gt;'top'&lt;/code&gt;, &lt;code&gt;'bottom'&lt;/code&gt;.</source>
          <target state="translated">合法值是： &lt;code&gt;'left'&lt;/code&gt; ， &lt;code&gt;'right'&lt;/code&gt; ， &lt;code&gt;'top'&lt;/code&gt; ， &lt;code&gt;'bottom'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18beaa17df62904395685f10cb89a3d8e9391154" translate="yes" xml:space="preserve">
          <source>Legal values: &lt;code&gt;'x'&lt;/code&gt;, &lt;code&gt;'y'&lt;/code&gt;, &lt;code&gt;'both'&lt;/code&gt;, &lt;code&gt;'none'&lt;/code&gt;.</source>
          <target state="translated">合法值： &lt;code&gt;'x'&lt;/code&gt; ， &lt;code&gt;'y'&lt;/code&gt; ， &lt;code&gt;'both'&lt;/code&gt; ， &lt;code&gt;'none'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bade34ecbc5d996b2f301ebd4ba689e81c7c9ea" translate="yes" xml:space="preserve">
          <source>Length</source>
          <target state="translated">Length</target>
        </trans-unit>
        <trans-unit id="d45a6f38f95efbaf3f9f3b999e990d1c6f2db236" translate="yes" xml:space="preserve">
          <source>Length modifier (optional).</source>
          <target state="translated">长度修饰符(可选)。</target>
        </trans-unit>
        <trans-unit id="180a1018d9273fb3a58e3f201de1ac8a5b80b58d" translate="yes" xml:space="preserve">
          <source>Length of the network prefix, in bits.</source>
          <target state="translated">网络前缀的长度,以比特为单位。</target>
        </trans-unit>
        <trans-unit id="2c777c5db20151b1efdf932bcbcfebad8c2efc68" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s assume we initialize a table as in the example given above:</source>
          <target state="translated">假设我们像上面给出的示例那样初始化一个表：</target>
        </trans-unit>
        <trans-unit id="6b2e260007a1afb18b8a8c65668c11667d2da6f9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s go back to the &lt;code&gt;Point&lt;/code&gt; class. We stored the x and y coordinates separated via semicolons as strings in SQLite.</source>
          <target state="translated">让我们回到 &lt;code&gt;Point&lt;/code&gt; 类。我们将通过分号分隔的x和y坐标存储为SQLite中的字符串。</target>
        </trans-unit>
        <trans-unit id="cbaa1370b8e486f03058ade144aaa5ce766835fc" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s modify the above example and run two &lt;code&gt;say_after&lt;/code&gt; coroutines &lt;em&gt;concurrently&lt;/em&gt;:</source>
          <target state="translated">让我们修改上面的例子，运行两个 &lt;code&gt;say_after&lt;/code&gt; 协同程序&lt;em&gt;并行&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="a4e1bbd9caa78a7f8e196d6165ef1a43653ca2ce" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we want to add one to each country&amp;rsquo;s rank, and add an &lt;code&gt;updated&lt;/code&gt; attribute to the rank element:</source>
          <target state="translated">假设我们要在每个国家/地区的排名中添加一个，并向rank元素添加一个 &lt;code&gt;updated&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="78596e300b339fafdb3e77e4a728b5374ceee9c7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you wanted to get the version string for a package you&amp;rsquo;ve installed using &lt;code&gt;pip&lt;/code&gt;. We start by creating a virtual environment and installing something into it:</source>
          <target state="translated">假设您想获取使用 &lt;code&gt;pip&lt;/code&gt; 安装的软件包的版本字符串。我们首先创建一个虚拟环境并在其中安装一些东西：</target>
        </trans-unit>
        <trans-unit id="d5ae7ea3899f66437fb7e1aa7d7675f030894483" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say your module is called &amp;ldquo;spam&amp;rdquo; and the module&amp;rsquo;s various natural language translation &lt;code&gt;.mo&lt;/code&gt; files reside in &lt;code&gt;/usr/share/locale&lt;/code&gt; in GNU &lt;strong&gt;gettext&lt;/strong&gt; format. Here&amp;rsquo;s what you would put at the top of your module:</source>
          <target state="translated">假设您的模块称为&amp;ldquo;垃圾邮件&amp;rdquo;，并且模块的各种自然语言翻译 &lt;code&gt;.mo&lt;/code&gt; 文件以GNU &lt;strong&gt;gettext&lt;/strong&gt;格式驻留在 &lt;code&gt;/usr/share/locale&lt;/code&gt; 中。这是您放在模块顶部的内容：&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04863fa8b8b6c7cb4b82a58c35cc416cac590f6a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a very basic configuration file that looks like this:</source>
          <target state="translated">我们来看一个非常基本的配置文件，如下所示：</target>
        </trans-unit>
        <trans-unit id="5ecd68b4c43876be669cbe3592b08b9f4742b506" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it. We create two instances of &lt;code&gt;cell&lt;/code&gt;, and let them point to each other, and finally follow the pointer chain a few times:</source>
          <target state="translated">让我们尝试一下。我们创建 &lt;code&gt;cell&lt;/code&gt; 的两个实例，让它们指向彼此，最后跟随指针链几次：</target>
        </trans-unit>
        <trans-unit id="22165bce4fbe52f349dc3381930ba2ac63b3a5cb" translate="yes" xml:space="preserve">
          <source>Letting your object adapt itself</source>
          <target state="translated">让你的对象适应自己</target>
        </trans-unit>
        <trans-unit id="7c7f5d049fad2569721d446c4a811f9bd5da5393" translate="yes" xml:space="preserve">
          <source>Level</source>
          <target state="translated">Level</target>
        </trans-unit>
        <trans-unit id="6460ec4ddfef711100217c8f9826fd70701f2f56" translate="yes" xml:space="preserve">
          <source>Level 2 halted</source>
          <target state="translated">第2级停止</target>
        </trans-unit>
        <trans-unit id="60e40c81795763b2a8e72d44e5ad0f9199edc4bb" translate="yes" xml:space="preserve">
          <source>Level 2 not synchronized</source>
          <target state="translated">第2级不同步</target>
        </trans-unit>
        <trans-unit id="345040e0c10ed0376f2b7122fc4d53bc220369de" translate="yes" xml:space="preserve">
          <source>Level 3 halted</source>
          <target state="translated">第3级停止</target>
        </trans-unit>
        <trans-unit id="d42164449cc05890457a5e7c44effb895c6def14" translate="yes" xml:space="preserve">
          <source>Level 3 reset</source>
          <target state="translated">3级复位</target>
        </trans-unit>
        <trans-unit id="d7e796b80646b51566de3ce1d4e141f4e53a4ec8" translate="yes" xml:space="preserve">
          <source>Levels are internally integers (as they need to be compared in the logging logic). This function is used to convert between an integer level and the level name displayed in the formatted log output by means of the &lt;code&gt;%(levelname)s&lt;/code&gt; format specifier (see &lt;a href=&quot;#logrecord-attributes&quot;&gt;LogRecord attributes&lt;/a&gt;).</source>
          <target state="translated">级别是内部整数（因为它们需要在日志记录逻辑中进行比较）。此函数用于通过 &lt;code&gt;%(levelname)s&lt;/code&gt; 格式说明符在整数级别和格式化日志输出中显示的级别名称之间进行转换（请参阅&lt;a href=&quot;#logrecord-attributes&quot;&gt;LogRecord属性&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2d6380feb8c38ce90806082088bb8c2c55e37b83" translate="yes" xml:space="preserve">
          <source>Lexical scanner for Python source code.</source>
          <target state="translated">Python源代码的词法扫描器。</target>
        </trans-unit>
        <trans-unit id="392b455093b9fc95f72712c44846e250fe613928" translate="yes" xml:space="preserve">
          <source>LibreSSL &amp;gt;= 2.6.1 no longer supports NPN. The methods &lt;a href=&quot;#ssl.SSLContext.set_npn_protocols&quot;&gt;&lt;code&gt;SSLContext.set_npn_protocols()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLSocket.selected_npn_protocol&quot;&gt;&lt;code&gt;SSLSocket.selected_npn_protocol()&lt;/code&gt;&lt;/a&gt; are not available.</source>
          <target state="translated">LibreSSL&amp;gt; = 2.6.1不再支持NPN。方法&lt;a href=&quot;#ssl.SSLContext.set_npn_protocols&quot;&gt; &lt;code&gt;SSLContext.set_npn_protocols()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ssl.SSLSocket.selected_npn_protocol&quot;&gt; &lt;code&gt;SSLSocket.selected_npn_protocol()&lt;/code&gt; &lt;/a&gt;不可用。</target>
        </trans-unit>
        <trans-unit id="091cd70ef41f8240bd7c6a2fadb08e949b8160af" translate="yes" xml:space="preserve">
          <source>LibreSSL is a fork of OpenSSL 1.0.1. The ssl module has limited support for LibreSSL. Some features are not available when the ssl module is compiled with LibreSSL.</source>
          <target state="translated">LibreSSL是OpenSSL 1.0.1的一个分支。ssl 模块对 LibreSSL 的支持有限。当ssl模块与LibreSSL一起编译时,有些功能是不可用的。</target>
        </trans-unit>
        <trans-unit id="8509e2f82d3801c911e6a35b8391debf72767e0a" translate="yes" xml:space="preserve">
          <source>LibreSSL support</source>
          <target state="translated">支持FreeSSL</target>
        </trans-unit>
        <trans-unit id="d0454f8c64fa3e4e75abdf2e0c77b01474c4f39a" translate="yes" xml:space="preserve">
          <source>Licensed under the PSF License.</source>
          <target state="translated">根据PSF许可证授权。</target>
        </trans-unit>
        <trans-unit id="033df3d297c22e077f87acc4e5b0f910192e40c2" translate="yes" xml:space="preserve">
          <source>Lifecycle</source>
          <target state="translated">Lifecycle</target>
        </trans-unit>
        <trans-unit id="b7f9700444d85258af9741b1a784bb114500ccb1" translate="yes" xml:space="preserve">
          <source>Lifts second and third stack item one position up, moves top down to position three.</source>
          <target state="translated">将第二、三叠物品向上提升一个位置,自上而下移动到第三位置。</target>
        </trans-unit>
        <trans-unit id="128b57bf19d7494cf2406f4c9ad03a774a89db95" translate="yes" xml:space="preserve">
          <source>Lifts second, third and forth stack items one position up, moves top down to position four.</source>
          <target state="translated">将第二、三、四堆物品向上提升一个位置,从上向下移动到第四位置。</target>
        </trans-unit>
        <trans-unit id="769c851ff34e416533a93e1c54c044431fc336ec" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#aifc.aifc.writeframes&quot;&gt;&lt;code&gt;writeframes()&lt;/code&gt;&lt;/a&gt;, except that the header of the audio file is not updated.</source>
          <target state="translated">类似于&lt;a href=&quot;#aifc.aifc.writeframes&quot;&gt; &lt;code&gt;writeframes()&lt;/code&gt; &lt;/a&gt;，只是音频文件的头没有更新。</target>
        </trans-unit>
        <trans-unit id="5fba8ee1e116abbedfbf12ff32b815bda67a39bf" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#bytes.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;, but raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the subsequence is not found.</source>
          <target state="translated">与&lt;a href=&quot;#bytes.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;类似，但是在未找到子序列时引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18e9f70e3e0c024db75f15d3f7632da5d6ffb708" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#bytes.rfind&quot;&gt;&lt;code&gt;rfind()&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the subsequence &lt;em&gt;sub&lt;/em&gt; is not found.</source>
          <target state="translated">与&lt;a href=&quot;#bytes.rfind&quot;&gt; &lt;code&gt;rfind()&lt;/code&gt; &lt;/a&gt;类似，但是在未找到&lt;em&gt;子&lt;/em&gt;序列&lt;em&gt;子项&lt;/em&gt;时引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ed4630498d706bd9a3292cd5d7227b98132b4ad" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#curses.window.erase&quot;&gt;&lt;code&gt;erase()&lt;/code&gt;&lt;/a&gt;, but also cause the whole window to be repainted upon next call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">就像&lt;a href=&quot;#curses.window.erase&quot;&gt; &lt;code&gt;erase()&lt;/code&gt; &lt;/a&gt;一样，但是也会在下次调用&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; 时&lt;/a&gt;重新绘制整个窗口。</target>
        </trans-unit>
        <trans-unit id="b526a2ea540c4c9b052eb050e52db56633e28e9c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#doctest.testfile&quot;&gt;&lt;code&gt;testfile()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s verbosity can be set with the &lt;code&gt;-v&lt;/code&gt; command-line switch or with the optional keyword argument &lt;em&gt;verbose&lt;/em&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt;一样，&lt;a href=&quot;#doctest.testfile&quot;&gt; &lt;code&gt;testfile()&lt;/code&gt; &lt;/a&gt;的详细程度可以通过 &lt;code&gt;-v&lt;/code&gt; 命令行开关或可选的关键字参数&lt;em&gt;verbose设置&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c342450b7fbacddc0eb255ffe6a69e6f64b16e54" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#enum.IntFlag&quot;&gt;&lt;code&gt;IntFlag&lt;/code&gt;&lt;/a&gt;, if a combination of &lt;a href=&quot;#enum.Flag&quot;&gt;&lt;code&gt;Flag&lt;/code&gt;&lt;/a&gt; members results in no flags being set, the boolean evaluation is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">与&lt;a href=&quot;#enum.IntFlag&quot;&gt; &lt;code&gt;IntFlag&lt;/code&gt; &lt;/a&gt;一样，如果&lt;a href=&quot;#enum.Flag&quot;&gt; &lt;code&gt;Flag&lt;/code&gt; &lt;/a&gt;成员的组合导致未设置任何标志，则布尔值评估为&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a363ed4c02cbe749a71b8d13e6dc4264d840b400" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt;, but returns a tuple of the data connection and the expected size of the data. If the expected size could not be computed, &lt;code&gt;None&lt;/code&gt; will be returned as the expected size. &lt;em&gt;cmd&lt;/em&gt; and &lt;em&gt;rest&lt;/em&gt; means the same thing as in &lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt;&lt;code&gt;transfercmd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; &lt;/a&gt;类似，但返回数据连接的元组和数据的预期大小。如果预期的大小不能计算， &lt;code&gt;None&lt;/code&gt; 将返回为预期的大小。&lt;em&gt;cmd&lt;/em&gt;和&lt;em&gt;rest的&lt;/em&gt;含义与&lt;a href=&quot;#ftplib.FTP.transfercmd&quot;&gt; &lt;code&gt;transfercmd()&lt;/code&gt; 相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fed2080b9205761ae5ca1cb77a5a3913089b3943" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;, but consider plural forms. If a translation is found, apply the plural formula to &lt;em&gt;n&lt;/em&gt;, and return the resulting message (some languages have more than two plural forms). If no translation is found, return &lt;em&gt;singular&lt;/em&gt; if &lt;em&gt;n&lt;/em&gt; is 1; return &lt;em&gt;plural&lt;/em&gt; otherwise.</source>
          <target state="translated">类似于&lt;a href=&quot;#gettext.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;，但考虑复数形式。如果找到翻译，则将复数公式应用于&lt;em&gt;n&lt;/em&gt;，并返回结果消息（某些语言具有两种以上的复数形式）。如果未找到翻译，则如果&lt;em&gt;n&lt;/em&gt;为1 ，则返回&lt;em&gt;单数&lt;/em&gt;；否则，返回&lt;em&gt;奇数&lt;/em&gt;。否则返回&lt;em&gt;复数&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58099ee55f530af16bd98fd8c56efead48c30f96" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt;, but look the message up in the specified &lt;em&gt;domain&lt;/em&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#gettext.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;类似，但在指定的&lt;em&gt;domain中&lt;/em&gt;查找消息。</target>
        </trans-unit>
        <trans-unit id="0cc1846db165a1893d5de2a35351debcae960593" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#gettext.ngettext&quot;&gt;&lt;code&gt;ngettext()&lt;/code&gt;&lt;/a&gt;, but look the message up in the specified &lt;em&gt;domain&lt;/em&gt;.</source>
          <target state="translated">类似于&lt;a href=&quot;#gettext.ngettext&quot;&gt; &lt;code&gt;ngettext()&lt;/code&gt; &lt;/a&gt;，但是在指定的&lt;em&gt;domain中&lt;/em&gt;查找消息。</target>
        </trans-unit>
        <trans-unit id="68113eaaf87f00b3b1aab0ac0cfe07087577d9b5" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hashlib.hash.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string object of double length, containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">与&lt;a href=&quot;#hashlib.hash.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt;类似，不同之处在于摘要是作为双倍长度的字符串对象返回的，该字符串对象仅包含十六进制数字。这可用于在电子邮件或其他非二进制环境中安全地交换值。</target>
        </trans-unit>
        <trans-unit id="f6c8b81ebf600e9993da2ea7be87e2a91a7b9a0b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hashlib.shake.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string object of double length, containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">与&lt;a href=&quot;#hashlib.shake.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt;类似，不同之处在于摘要是作为双倍长度的字符串对象返回的，该字符串对象仅包含十六进制数字。这可用于在电子邮件或其他非二进制环境中安全地交换值。</target>
        </trans-unit>
        <trans-unit id="459945a9891e20c8dab70ede4f27fdf482e29c75" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#hmac.digest&quot;&gt;&lt;code&gt;digest()&lt;/code&gt;&lt;/a&gt; except the digest is returned as a string twice the length containing only hexadecimal digits. This may be used to exchange the value safely in email or other non-binary environments.</source>
          <target state="translated">与&lt;a href=&quot;#hmac.digest&quot;&gt; &lt;code&gt;digest()&lt;/code&gt; &lt;/a&gt;类似，区别在于摘要以字符串形式返回，该字符串的长度是仅包含十六进制数字的两倍。这可用于在电子邮件或其他非二进制环境中安全地交换值。</target>
        </trans-unit>
        <trans-unit id="d34ceda7fd93b02c772dcafa4d07c2be2558ca4c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;, multiple reads may be issued to the underlying raw stream, unless the latter is interactive.</source>
          <target state="translated">像&lt;a href=&quot;#io.BufferedIOBase.read&quot;&gt; &lt;code&gt;read()&lt;/code&gt; &lt;/a&gt;一样，可以向基础原始流发出多次读取，除非后者是交互式的。</target>
        </trans-unit>
        <trans-unit id="5f98ad8c9320d72e100566d3e840ecba162bb7ec" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#opcode-DICT_UPDATE&quot;&gt;&lt;code&gt;DICT_UPDATE&lt;/code&gt;&lt;/a&gt; but raises an exception for duplicate keys.</source>
          <target state="translated">类似于&lt;a href=&quot;#opcode-DICT_UPDATE&quot;&gt; &lt;code&gt;DICT_UPDATE&lt;/code&gt; ,&lt;/a&gt;但引发重复键的异常。</target>
        </trans-unit>
        <trans-unit id="d6711f9956856aade671cd7cf16a76fd76e19023" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#pathlib.Path.chmod&quot;&gt;&lt;code&gt;Path.chmod()&lt;/code&gt;&lt;/a&gt; but, if the path points to a symbolic link, the symbolic link&amp;rsquo;s mode is changed rather than its target&amp;rsquo;s.</source>
          <target state="translated">与&lt;a href=&quot;#pathlib.Path.chmod&quot;&gt; &lt;code&gt;Path.chmod()&lt;/code&gt; &lt;/a&gt;类似，但是，如果路径指向符号链接，则符号链接的模式将更改，而不是其目标模式。</target>
        </trans-unit>
        <trans-unit id="c80f0d44ded10dcee28c34bbfff9e27a30074634" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#pathlib.Path.stat&quot;&gt;&lt;code&gt;Path.stat()&lt;/code&gt;&lt;/a&gt; but, if the path points to a symbolic link, return the symbolic link&amp;rsquo;s information rather than its target&amp;rsquo;s.</source>
          <target state="translated">与&lt;a href=&quot;#pathlib.Path.stat&quot;&gt; &lt;code&gt;Path.stat()&lt;/code&gt; &lt;/a&gt;类似，但是，如果路径指向符号链接，则返回符号链接的信息，而不是其目标信息。</target>
        </trans-unit>
        <trans-unit id="76a03d0f714bbde9a8aae83d5eb4974b1956cc4b" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt;&lt;code&gt;CHECKED_HASH&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;.pyc&lt;/code&gt; file includes a hash of the source file content. However, Python will at runtime assume the &lt;code&gt;.pyc&lt;/code&gt; file is up to date and not validate the &lt;code&gt;.pyc&lt;/code&gt; against the source file at all.</source>
          <target state="translated">与&lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt; &lt;code&gt;CHECKED_HASH&lt;/code&gt; &lt;/a&gt;一样， &lt;code&gt;.pyc&lt;/code&gt; 文件包括源文件内容的哈希。但是，Python将在运行时假定 &lt;code&gt;.pyc&lt;/code&gt; 文件是最新的，并且根本不会针对源文件验证 &lt;code&gt;.pyc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a425706908190a3e1f79c502de35dede3098f552" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#quopri.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt;, except that it accepts a source &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and returns the corresponding decoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#quopri.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt;类似，不同之处在于它接受源&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;并返回相应的解码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54098cdee562ba9f230b42f10f40d70cf45edbf7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#quopri.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt;, except that it accepts a source &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and returns the corresponding encoded &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;. By default, it sends a &lt;code&gt;False&lt;/code&gt; value to &lt;em&gt;quotetabs&lt;/em&gt; parameter of the &lt;a href=&quot;#quopri.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">与&lt;a href=&quot;#quopri.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt;类似，除了它接受源&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;并返回相应的编码&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;。默认情况下，它将向&lt;em&gt;coder &lt;/em&gt;&lt;a href=&quot;#quopri.encode&quot;&gt; &lt;code&gt;encode()&lt;/code&gt; &lt;/a&gt;函数的&lt;em&gt;quotetabs&lt;/em&gt;参数发送一个 &lt;code&gt;False&lt;/code&gt; 值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b01d2bf404c98230b8ffd33055a42cf110e8594d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#signal.sigwaitinfo&quot;&gt;&lt;code&gt;sigwaitinfo()&lt;/code&gt;&lt;/a&gt;, but takes an additional &lt;em&gt;timeout&lt;/em&gt; argument specifying a timeout. If &lt;em&gt;timeout&lt;/em&gt; is specified as &lt;code&gt;0&lt;/code&gt;, a poll is performed. Returns &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt; if a timeout occurs.</source>
          <target state="translated">类似于&lt;a href=&quot;#signal.sigwaitinfo&quot;&gt; &lt;code&gt;sigwaitinfo()&lt;/code&gt; &lt;/a&gt;，但需要额外的&lt;em&gt;超时&lt;/em&gt;参数来指定超时。如果将&lt;em&gt;超时&lt;/em&gt;指定为 &lt;code&gt;0&lt;/code&gt; ，则执行轮询。如果发生超时，则返回&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b428dc227aecdac34a941af1b4c9e314010ceaa" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt;&lt;code&gt;SSLContext.maximum_version&lt;/code&gt;&lt;/a&gt; except it is the lowest supported version or &lt;a href=&quot;#ssl.TLSVersion.MINIMUM_SUPPORTED&quot;&gt;&lt;code&gt;TLSVersion.MINIMUM_SUPPORTED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#ssl.SSLContext.maximum_version&quot;&gt; &lt;code&gt;SSLContext.maximum_version&lt;/code&gt; &lt;/a&gt;类似，但它是受支持的最低版本或&lt;a href=&quot;#ssl.TLSVersion.MINIMUM_SUPPORTED&quot;&gt; &lt;code&gt;TLSVersion.MINIMUM_SUPPORTED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="034005e547ceeaab4b84301bb039ff5010f896a4" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#str.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;, but raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the substring is not found.</source>
          <target state="translated">与&lt;a href=&quot;#str.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;类似，但是在未找到子字符串时引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fffbdca90984707f8b141e5ee4a5c9e6f40bdf60" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#str.rfind&quot;&gt;&lt;code&gt;rfind()&lt;/code&gt;&lt;/a&gt; but raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; when the substring &lt;em&gt;sub&lt;/em&gt; is not found.</source>
          <target state="translated">与&lt;a href=&quot;#str.rfind&quot;&gt; &lt;code&gt;rfind()&lt;/code&gt; &lt;/a&gt;类似，但是在未找到子字符串&lt;em&gt;sub&lt;/em&gt;时引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2116b8fb57e3a35c142acd106bb28c5cbe992968" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#string.Template.substitute&quot;&gt;&lt;code&gt;substitute()&lt;/code&gt;&lt;/a&gt;, except that if placeholders are missing from &lt;em&gt;mapping&lt;/em&gt; and &lt;em&gt;kwds&lt;/em&gt;, instead of raising a &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; exception, the original placeholder will appear in the resulting string intact. Also, unlike with &lt;a href=&quot;#string.Template.substitute&quot;&gt;&lt;code&gt;substitute()&lt;/code&gt;&lt;/a&gt;, any other appearances of the &lt;code&gt;$&lt;/code&gt; will simply return &lt;code&gt;$&lt;/code&gt; instead of raising &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">就像&lt;a href=&quot;#string.Template.substitute&quot;&gt; &lt;code&gt;substitute()&lt;/code&gt; &lt;/a&gt;，但如果占位符是从缺少&lt;em&gt;映射&lt;/em&gt;和&lt;em&gt;kwds&lt;/em&gt;，而不是引发一个&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; 异常&lt;/a&gt;例外，原来的占位符将出现在结果字符串完好英寸 而且，与&lt;a href=&quot;#string.Template.substitute&quot;&gt; &lt;code&gt;substitute()&lt;/code&gt; &lt;/a&gt;不同， &lt;code&gt;$&lt;/code&gt; 的任何其他外观都将简单地返回 &lt;code&gt;$&lt;/code&gt; 而不是引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff608d7698e75a8850f2bbedb753f4de4a82170d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#subprocess.getstatusoutput&quot;&gt;&lt;code&gt;getstatusoutput()&lt;/code&gt;&lt;/a&gt;, except the exit code is ignored and the return value is a string containing the command&amp;rsquo;s output. Example:</source>
          <target state="translated">类似于&lt;a href=&quot;#subprocess.getstatusoutput&quot;&gt; &lt;code&gt;getstatusoutput()&lt;/code&gt; &lt;/a&gt;一样，除了退出代码被忽略并且返回值是包含命令输出的字符串之外。例：</target>
        </trans-unit>
        <trans-unit id="09325b0b81777f3949622af36b1caae2105c533a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#time.gmtime&quot;&gt;&lt;code&gt;gmtime()&lt;/code&gt;&lt;/a&gt; but converts to local time. If &lt;em&gt;secs&lt;/em&gt; is not provided or &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the current time as returned by &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; is used. The dst flag is set to &lt;code&gt;1&lt;/code&gt; when DST applies to the given time.</source>
          <target state="translated">与&lt;a href=&quot;#time.gmtime&quot;&gt; &lt;code&gt;gmtime()&lt;/code&gt; &lt;/a&gt;类似，但会转换为本地时间。如果未提供&lt;em&gt;secs&lt;/em&gt;或&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，则使用&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;返回的当前时间。当DST适用于给定时间时，dst标志设置为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e80bfe37b04d21e1316c6e6f6ac9868e0d1c6f93" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#tokenize.tokenize&quot;&gt;&lt;code&gt;tokenize()&lt;/code&gt;&lt;/a&gt;, the &lt;em&gt;readline&lt;/em&gt; argument is a callable returning a single line of input. However, &lt;a href=&quot;#tokenize.generate_tokens&quot;&gt;&lt;code&gt;generate_tokens()&lt;/code&gt;&lt;/a&gt; expects &lt;em&gt;readline&lt;/em&gt; to return a str object rather than bytes.</source>
          <target state="translated">像&lt;a href=&quot;#tokenize.tokenize&quot;&gt; &lt;code&gt;tokenize()&lt;/code&gt; 一样&lt;/a&gt;，&lt;em&gt;readline&lt;/em&gt;参数是可调用的，返回单行输入。但是，&lt;a href=&quot;#tokenize.generate_tokens&quot;&gt; &lt;code&gt;generate_tokens()&lt;/code&gt; &lt;/a&gt;期望&lt;em&gt;readline&lt;/em&gt;返回一个str对象而不是字节。</target>
        </trans-unit>
        <trans-unit id="1e25dc1f7a41401d6d2742977c0ec0eb4a4dab04" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt;&lt;code&gt;assertRaises()&lt;/code&gt;&lt;/a&gt; but also tests that &lt;em&gt;regex&lt;/em&gt; matches on the string representation of the raised exception. &lt;em&gt;regex&lt;/em&gt; may be a regular expression object or a string containing a regular expression suitable for use by &lt;a href=&quot;re#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt;. Examples:</source>
          <target state="translated">像&lt;a href=&quot;#unittest.TestCase.assertRaises&quot;&gt; &lt;code&gt;assertRaises()&lt;/code&gt; 一样&lt;/a&gt;，还测试&lt;em&gt;正则表达式是否&lt;/em&gt;与引发的异常的字符串表示形式匹配。&lt;em&gt;regex&lt;/em&gt;可以是正则表达式对象，也可以是包含适合&lt;a href=&quot;re#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt;使用的正则表达式的字符串。例子：</target>
        </trans-unit>
        <trans-unit id="88c91522876cdaf737cb13dc3682f59d6bfc40fe" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt;&lt;code&gt;assertWarns()&lt;/code&gt;&lt;/a&gt; but also tests that &lt;em&gt;regex&lt;/em&gt; matches on the message of the triggered warning. &lt;em&gt;regex&lt;/em&gt; may be a regular expression object or a string containing a regular expression suitable for use by &lt;a href=&quot;re#re.search&quot;&gt;&lt;code&gt;re.search()&lt;/code&gt;&lt;/a&gt;. Example:</source>
          <target state="translated">像&lt;a href=&quot;#unittest.TestCase.assertWarns&quot;&gt; &lt;code&gt;assertWarns()&lt;/code&gt; 一样&lt;/a&gt;，还测试触发警告消息中的&lt;em&gt;正则表达式是否&lt;/em&gt;匹配。&lt;em&gt;regex&lt;/em&gt;可以是正则表达式对象，也可以是包含适合&lt;a href=&quot;re#re.search&quot;&gt; &lt;code&gt;re.search()&lt;/code&gt; &lt;/a&gt;使用的正则表达式的字符串。例：</target>
        </trans-unit>
        <trans-unit id="71a6e3160e25bc7af2abbb4914c6e0c300c2d496" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;, but accepts a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object rather than a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, and does not perform string-to-bytes encoding.</source>
          <target state="translated">像&lt;a href=&quot;#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;一样，但是接受&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象而不是&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;，并且不执行字符串到字节的编码。</target>
        </trans-unit>
        <trans-unit id="33be7d39b7d017d814cc31038c4a163e3894971c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;, but also replace spaces by plus signs, as required for quoting HTML form values when building up a query string to go into a URL. Plus signs in the original string are escaped unless they are included in &lt;em&gt;safe&lt;/em&gt;. It also does not have &lt;em&gt;safe&lt;/em&gt; default to &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">像&lt;a href=&quot;#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;一样，但是也用加号替换空格，这是在建立查询字符串以进入URL时引用HTML表单值所必需的。加上原来的字符串迹象转义，除非它们被包括在&lt;em&gt;安全&lt;/em&gt;。它还没有&lt;em&gt;安全的&lt;/em&gt;默认值 &lt;code&gt;'/'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7dde13a692c60d9a200b59f535ca756e81d2715" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.quote&quot;&gt;&lt;code&gt;quote()&lt;/code&gt;&lt;/a&gt;, but also replace spaces with plus signs, as required for quoting HTML form values when building up a query string to go into a URL. Plus signs in the original string are escaped unless they are included in &lt;em&gt;safe&lt;/em&gt;. It also does not have &lt;em&gt;safe&lt;/em&gt; default to &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">像&lt;a href=&quot;#urllib.parse.quote&quot;&gt; &lt;code&gt;quote()&lt;/code&gt; &lt;/a&gt;一样，但是也需要用加号替换空格，这是在建立查询字符串以进入URL时引用HTML表单值所必需的。加上原来的字符串迹象转义，除非它们被包括在&lt;em&gt;安全&lt;/em&gt;。它也没有&lt;em&gt;安全的&lt;/em&gt;默认值 &lt;code&gt;'/'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="775c6c98d7b915a29eecf32e7d3a27905fc4598c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.unquote&quot;&gt;&lt;code&gt;unquote()&lt;/code&gt;&lt;/a&gt;, but also replace plus signs by spaces, as required for unquoting HTML form values.</source>
          <target state="translated">与&lt;a href=&quot;#urllib.parse.unquote&quot;&gt; &lt;code&gt;unquote()&lt;/code&gt; &lt;/a&gt;一样，但也需要用空格替换加号，这是取消引用HTML表单值所必需的。</target>
        </trans-unit>
        <trans-unit id="7537c6b95afac876f7603d1b2014408081a6f91e" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#urllib.parse.unquote&quot;&gt;&lt;code&gt;unquote()&lt;/code&gt;&lt;/a&gt;, but also replace plus signs with spaces, as required for unquoting HTML form values.</source>
          <target state="translated">像&lt;a href=&quot;#urllib.parse.unquote&quot;&gt; &lt;code&gt;unquote()&lt;/code&gt; &lt;/a&gt;一样，但也可以用空格替换加号，这是取消引用HTML表单值所必需的。</target>
        </trans-unit>
        <trans-unit id="f1cf5e7750804a8602426bc1702f1b0873f828cb" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt;&lt;code&gt;asyncore.dispatcher&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; defines a set of events that are generated by an analysis of socket conditions after a &lt;code&gt;select()&lt;/code&gt; call. Once the polling loop has been started the &lt;a href=&quot;#asynchat.async_chat&quot;&gt;&lt;code&gt;async_chat&lt;/code&gt;&lt;/a&gt; object&amp;rsquo;s methods are called by the event-processing framework with no action on the part of the programmer.</source>
          <target state="translated">与&lt;a href=&quot;asyncore#asyncore.dispatcher&quot;&gt; &lt;code&gt;asyncore.dispatcher&lt;/code&gt; &lt;/a&gt;一样，&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;定义了一组事件，这些事件是在 &lt;code&gt;select()&lt;/code&gt; 调用之后通过分析套接字条件而生成的。一旦轮询循环开始，事件处理框架将调用&lt;a href=&quot;#asynchat.async_chat&quot;&gt; &lt;code&gt;async_chat&lt;/code&gt; &lt;/a&gt;对象的方法，而程序员无需采取任何措施。</target>
        </trans-unit>
        <trans-unit id="ccba539e91e292f5838b503000ab1e741be5ca28" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; except that the elements of the &lt;em&gt;iterable&lt;/em&gt; are expected to be iterables that are unpacked as arguments.</source>
          <target state="translated">与&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;相似，除了&lt;em&gt;可迭代&lt;/em&gt;的元素应该是作为参数解压缩的可迭代对象。</target>
        </trans-unit>
        <trans-unit id="779b5a441a3fe2beee9d18262802a4b2251c9ae8" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;signal#signal.signal&quot;&gt;&lt;code&gt;signal.signal()&lt;/code&gt;&lt;/a&gt;, this function must be invoked in the main thread.</source>
          <target state="translated">像&lt;a href=&quot;signal#signal.signal&quot;&gt; &lt;code&gt;signal.signal()&lt;/code&gt; 一样&lt;/a&gt;，必须在主线程中调用此函数。</target>
        </trans-unit>
        <trans-unit id="4567b33a2aaefbaca856883085dae36ad2796c3c" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;connect(address)&lt;/code&gt;, but return an error indicator instead of raising an exception for errors returned by the C-level &lt;code&gt;connect()&lt;/code&gt; call (other problems, such as &amp;ldquo;host not found,&amp;rdquo; can still raise exceptions). The error indicator is &lt;code&gt;0&lt;/code&gt; if the operation succeeded, otherwise the value of the &lt;code&gt;errno&lt;/code&gt; variable. This is useful to support, for example, asynchronous connects.</source>
          <target state="translated">与 &lt;code&gt;connect(address)&lt;/code&gt; 类似，但是返回错误指示符而不是针对C级 &lt;code&gt;connect()&lt;/code&gt; 调用返回的错误引发异常（其他问题，例如&amp;ldquo;找不到主机&amp;rdquo;仍然可以引发异常）。如果操作成功，则错误指示符为 &lt;code&gt;0&lt;/code&gt; ，否则为 &lt;code&gt;errno&lt;/code&gt; 变量的值。这对于支持例如异步连接很有用。</target>
        </trans-unit>
        <trans-unit id="6e4099930d90cd8e644b9d1a35ce1781b7e55be5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;formatdate&lt;/code&gt;, but the input is a &lt;a href=&quot;datetime#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instance. If it is a naive datetime, it is assumed to be &amp;ldquo;UTC with no information about the source timezone&amp;rdquo;, and the conventional &lt;code&gt;-0000&lt;/code&gt; is used for the timezone. If it is an aware &lt;code&gt;datetime&lt;/code&gt;, then the numeric timezone offset is used. If it is an aware timezone with offset zero, then &lt;em&gt;usegmt&lt;/em&gt; may be set to &lt;code&gt;True&lt;/code&gt;, in which case the string &lt;code&gt;GMT&lt;/code&gt; is used instead of the numeric timezone offset. This provides a way to generate standards conformant HTTP date headers.</source>
          <target state="translated">类似于 &lt;code&gt;formatdate&lt;/code&gt; ，但是输入是&lt;a href=&quot;datetime#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;实例。如果是原始日期时间，则将其假定为&amp;ldquo;没有有关源时区的信息的UTC&amp;rdquo;，并且将常规 &lt;code&gt;-0000&lt;/code&gt; 用于该时区。如果它是 &lt;code&gt;datetime&lt;/code&gt; ，则使用数字时区偏移量。如果它是偏移量为零的感知时区，则&lt;em&gt;usegmt&lt;/em&gt;可以设置为 &lt;code&gt;True&lt;/code&gt; ，在这种情况下，将使用字符串 &lt;code&gt;GMT&lt;/code&gt; 而不是数字时区偏移量。这提供了一种生成符合标准HTTP日期标头的方法。</target>
        </trans-unit>
        <trans-unit id="e9a1056335b6d3c9144b41d21fddbcb8e38867e3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;max(self, other)&lt;/code&gt; except that the context rounding rule is applied before returning and that &lt;code&gt;NaN&lt;/code&gt; values are either signaled or ignored (depending on the context and whether they are signaling or quiet).</source>
          <target state="translated">像 &lt;code&gt;max(self, other)&lt;/code&gt; 一样，除了在返回之前应用上下文舍入规则并且用信号通知或忽略 &lt;code&gt;NaN&lt;/code&gt; 值（取决于上下文以及它们是发信号还是安静）。</target>
        </trans-unit>
        <trans-unit id="117f781381f825f29b7d7c7a130438f9e5b689da" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;min(self, other)&lt;/code&gt; except that the context rounding rule is applied before returning and that &lt;code&gt;NaN&lt;/code&gt; values are either signaled or ignored (depending on the context and whether they are signaling or quiet).</source>
          <target state="translated">与 &lt;code&gt;min(self, other)&lt;/code&gt; 相似，不同之处在于在返回之前应用了上下文舍入规则，并且用信号通知或忽略了 &lt;code&gt;NaN&lt;/code&gt; 值（取决于上下文以及它们是在发送信号还是在安静）。</target>
        </trans-unit>
        <trans-unit id="7679621dea96b42673a5ec004c0be808374679d1" translate="yes" xml:space="preserve">
          <source>Like a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; assumes the current Gregorian calendar extended in both directions; like a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object, &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; assumes there are exactly 3600*24 seconds in every day.</source>
          <target state="translated">像&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;对象一样，&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;假定当前的公历沿两个方向延伸；像&lt;a href=&quot;#datetime.time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;对象一样，&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;假设每天恰好有3600 * 24秒。</target>
        </trans-unit>
        <trans-unit id="10db946781916518b11ce546b2af0588ae19c249" translate="yes" xml:space="preserve">
          <source>Like all decorators, it is also possible to call &lt;code&gt;staticmethod&lt;/code&gt; as a regular function and do something with its result. This is needed in some cases where you need a reference to a function from a class body and you want to avoid the automatic transformation to instance method. For these cases, use this idiom:</source>
          <target state="translated">像所有装饰器一样，也可以将 &lt;code&gt;staticmethod&lt;/code&gt; 作为常规函数调用并对其结果进行处理。在某些情况下，当您需要从类主体中引用函数并且希望避免自动转换为实例方法时，这是必需的。对于这些情况，请使用以下惯用法：</target>
        </trans-unit>
        <trans-unit id="870a5dd7d5496171ef6a3e2aaab1057264f79b83" translate="yes" xml:space="preserve">
          <source>Like function objects, bound method objects support getting arbitrary attributes. However, since method attributes are actually stored on the underlying function object (&lt;code&gt;meth.__func__&lt;/code&gt;), setting method attributes on bound methods is disallowed. Attempting to set an attribute on a method results in an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; being raised. In order to set a method attribute, you need to explicitly set it on the underlying function object:</source>
          <target state="translated">与函数对象一样，绑定方法对象也支持获取任意属性。但是，由于方法属性实际上存储在基础函数对象（ &lt;code&gt;meth.__func__&lt;/code&gt; ）上，因此不允许在绑定方法上设置方法属性。尝试在方法上设置属性会导致引发&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;。为了设置方法属性，您需要在基础函数对象上显式设置它：</target>
        </trans-unit>
        <trans-unit id="1583a91516920ea6d292abedef0a0d4133d1f95d" translate="yes" xml:space="preserve">
          <source>Like other collections, sets support &lt;code&gt;x in set&lt;/code&gt;, &lt;code&gt;len(set)&lt;/code&gt;, and &lt;code&gt;for x in
set&lt;/code&gt;. Being an unordered collection, sets do not record element position or order of insertion. Accordingly, sets do not support indexing, slicing, or other sequence-like behavior.</source>
          <target state="translated">与其他集合一样，集合支持 &lt;code&gt;x in set&lt;/code&gt; ， &lt;code&gt;len(set)&lt;/code&gt; 和 &lt;code&gt;for x in set&lt;/code&gt; 。集是无序集合，不记录元素位置或插入顺序。因此，集合不支持索引，切片或其他类似序列的行为。</target>
        </trans-unit>
        <trans-unit id="619848ebfcfc900a4a75f4e75c5ae31dd1e46688" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#pdbcommand-p&quot;&gt;&lt;code&gt;p&lt;/code&gt;&lt;/a&gt; command, except the value of the expression is pretty-printed using the &lt;a href=&quot;pprint#module-pprint&quot;&gt;&lt;code&gt;pprint&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">类似于&lt;a href=&quot;#pdbcommand-p&quot;&gt; &lt;code&gt;p&lt;/code&gt; &lt;/a&gt;命令，除了使用&lt;a href=&quot;pprint#module-pprint&quot;&gt; &lt;code&gt;pprint&lt;/code&gt; &lt;/a&gt;模块漂亮地表达表达式的值外。</target>
        </trans-unit>
        <trans-unit id="7f637d2b0e3d0bc308b91dbb540751ed9989d02f" translate="yes" xml:space="preserve">
          <source>Likewise, the &lt;a href=&quot;#decimal.setcontext&quot;&gt;&lt;code&gt;setcontext()&lt;/code&gt;&lt;/a&gt; function automatically assigns its target to the current thread.</source>
          <target state="translated">同样，&lt;a href=&quot;#decimal.setcontext&quot;&gt; &lt;code&gt;setcontext()&lt;/code&gt; &lt;/a&gt;函数自动将其目标分配给当前线程。</target>
        </trans-unit>
        <trans-unit id="16f0b939506acc96b15c52be3f403f4c577d5555" translate="yes" xml:space="preserve">
          <source>Limit on the number of characters in the representation of the string. Note that the &amp;ldquo;normal&amp;rdquo; representation of the string is used as the character source: if escape sequences are needed in the representation, these may be mangled when the representation is shortened. The default is &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="translated">限制字符串表示中的字符数。请注意，字符串的&amp;ldquo;正常&amp;rdquo;表示形式用作字符源：如果表示形式中需要转义序列，则在缩短表示形式时可能会破坏它们。默认值为 &lt;code&gt;30&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="e0da5f32d1b078b4674313813ea6b1be4783c1f3" translate="yes" xml:space="preserve">
          <source>Limits on the number of entries represented for the named object type. The default is &lt;code&gt;4&lt;/code&gt; for &lt;a href=&quot;#reprlib.Repr.maxdict&quot;&gt;&lt;code&gt;maxdict&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;5&lt;/code&gt; for &lt;a href=&quot;#reprlib.Repr.maxarray&quot;&gt;&lt;code&gt;maxarray&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;6&lt;/code&gt; for the others.</source>
          <target state="translated">限制为命名对象类型表示的条目数。默认值是 &lt;code&gt;4&lt;/code&gt; 为&lt;a href=&quot;#reprlib.Repr.maxdict&quot;&gt; &lt;code&gt;maxdict&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;5&lt;/code&gt; 为&lt;a href=&quot;#reprlib.Repr.maxarray&quot;&gt; &lt;code&gt;maxarray&lt;/code&gt; &lt;/a&gt;，和 &lt;code&gt;6&lt;/code&gt; 为他人。</target>
        </trans-unit>
        <trans-unit id="5cba8dfc960db4abee81cde524f36a4c3a10d9d1" translate="yes" xml:space="preserve">
          <source>Line 5 and 6 correspond to the arguments of the method &lt;code&gt;Screen.screensize()&lt;/code&gt;.</source>
          <target state="translated">第5行和第6行对应于 &lt;code&gt;Screen.screensize()&lt;/code&gt; 方法的参数。</target>
        </trans-unit>
        <trans-unit id="2abd199292d800fa3a80bd3c37bdfccc94f580e6" translate="yes" xml:space="preserve">
          <source>Line Feed</source>
          <target state="translated">线路供给</target>
        </trans-unit>
        <trans-unit id="8063848dd725bd56f98d4d78213b9bcdc4a7dc13" translate="yes" xml:space="preserve">
          <source>Line Separator</source>
          <target state="translated">线路分离器</target>
        </trans-unit>
        <trans-unit id="2e24c77fd923a41a63ac5dc6de543f323222cd3c" translate="yes" xml:space="preserve">
          <source>Line Tabulation</source>
          <target state="translated">线路表法</target>
        </trans-unit>
        <trans-unit id="b6aab80f18f5fed0b9153b69b8095064354fb00e" translate="yes" xml:space="preserve">
          <source>Line buffer</source>
          <target state="translated">行缓冲器</target>
        </trans-unit>
        <trans-unit id="4f23e2d073d67acea8f123b42f84af035e27248d" translate="yes" xml:space="preserve">
          <source>Line feed</source>
          <target state="translated">线路供给</target>
        </trans-unit>
        <trans-unit id="562aae5d9e971e10b07ca699f4f04a970c307d4c" translate="yes" xml:space="preserve">
          <source>Line number (&lt;code&gt;int&lt;/code&gt;) of the filter. If &lt;em&gt;lineno&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, the filter matches any line number.</source>
          <target state="translated">过滤器的行号（ &lt;code&gt;int&lt;/code&gt; ）。如果&lt;em&gt;lineno&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则过滤器匹配任何行号。</target>
        </trans-unit>
        <trans-unit id="aeb38dd24a3a71da272f1f779d0387791de3d81e" translate="yes" xml:space="preserve">
          <source>Line number (&lt;code&gt;int&lt;/code&gt;).</source>
          <target state="translated">行号（ &lt;code&gt;int&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2ff2293358a32428ec942d4555635cc880cd4d12" translate="yes" xml:space="preserve">
          <source>Line number at which an error occurred.</source>
          <target state="translated">发生错误的行号。</target>
        </trans-unit>
        <trans-unit id="b4da991f94a24c99137fffe4424265997efd6ed0" translate="yes" xml:space="preserve">
          <source>Line number on which the error was detected. The first line is numbered &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">检测到错误的行号。第一行编号为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69f2575cae166f7e141a5f9bfed26ae7b3477899" translate="yes" xml:space="preserve">
          <source>Line-endings are implemented using the codec&amp;rsquo;s &lt;a href=&quot;#codecs.decode&quot;&gt;&lt;code&gt;decode()&lt;/code&gt;&lt;/a&gt; method and are included in the list entries if &lt;em&gt;keepends&lt;/em&gt; is true.</source>
          <target state="translated">行尾使用编&lt;a href=&quot;#codecs.decode&quot;&gt; &lt;code&gt;decode()&lt;/code&gt; &lt;/a&gt;器的&lt;em&gt;encode &lt;/em&gt;（）方法实现，如果&lt;em&gt;keepends&lt;/em&gt;为true，则将其包括在列表条目中。</target>
        </trans-unit>
        <trans-unit id="302f1117893400c611682ce09d6a46e296f097b2" translate="yes" xml:space="preserve">
          <source>Lines are returned with any newlines intact, which means that the last line in a file may not have one.</source>
          <target state="translated">返回的行中有完整的新行,这意味着文件的最后一行可能没有新行。</target>
        </trans-unit>
        <trans-unit id="cf75ffeff8d12fdd995dd6674c85fc5ee7a38554" translate="yes" xml:space="preserve">
          <source>Lines are separated by calling &lt;code&gt;text.splitlines(True)&lt;/code&gt;.</source>
          <target state="translated">通过调用 &lt;code&gt;text.splitlines(True)&lt;/code&gt; 来分隔行。</target>
        </trans-unit>
        <trans-unit id="b6185854ec82c5419438640c3884931bbe6dbd4b" translate="yes" xml:space="preserve">
          <source>Lines beginning with &amp;lsquo;&lt;code&gt;?&lt;/code&gt;&amp;rsquo; attempt to guide the eye to intraline differences, and were not present in either input sequence. These lines can be confusing if the sequences contain tab characters.</source>
          <target state="translated">以' &lt;code&gt;?&lt;/code&gt; 开头的行 尝试将眼睛引导至线内差异，并且两种输入序列均不存在。如果序列包含制表符，这些行可能会造成混淆。</target>
        </trans-unit>
        <trans-unit id="1119cda9075f6ea9b6d77bc2c527e01b0505ac69" translate="yes" xml:space="preserve">
          <source>Lines containing only whitespace are ignored in the input and normalized to a single newline character in the output.</source>
          <target state="translated">在输入中,只包含空格的行会被忽略,在输出中则归一化为单个换行符。</target>
        </trans-unit>
        <trans-unit id="8f51211d5882b7b1d7f5bacb8c562304994eec22" translate="yes" xml:space="preserve">
          <source>Link has been severed</source>
          <target state="translated">链接已被切断</target>
        </trans-unit>
        <trans-unit id="2e5686329f75b06ffaef20d4254ffaa821209705" translate="yes" xml:space="preserve">
          <source>Link number out of range</source>
          <target state="translated">链接号超出范围</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="0a2eda05e77dfe3f8ca694538c7808e144972c9f" translate="yes" xml:space="preserve">
          <source>Linux extended attributes</source>
          <target state="translated">Linux扩展属性</target>
        </trans-unit>
        <trans-unit id="65238285b798b8c333fd4b7618bf5f86a3d5d9d0" translate="yes" xml:space="preserve">
          <source>Linux-only support for TIPC is available using the &lt;code&gt;AF_TIPC&lt;/code&gt; address family. TIPC is an open, non-IP based networked protocol designed for use in clustered computer environments. Addresses are represented by a tuple, and the fields depend on the address type. The general tuple form is &lt;code&gt;(addr_type, v1, v2, v3 [, scope])&lt;/code&gt;, where:</source>
          <target state="translated">使用 &lt;code&gt;AF_TIPC&lt;/code&gt; 地址系列可以获得对TIPC的仅Linux支持。 TIPC是一种开放的，非基于IP的网络协议，旨在用于群集计算机环境中。地址由元组表示，并且字段取决于地址类型。常规元组形式为 &lt;code&gt;(addr_type, v1, v2, v3 [, scope])&lt;/code&gt; ，其中：</target>
        </trans-unit>
        <trans-unit id="6756f8fa45c66ce66565b44aeff373a153af3d17" translate="yes" xml:space="preserve">
          <source>List a directory in a standardized format by using &lt;code&gt;MLSD&lt;/code&gt; command (&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;). If &lt;em&gt;path&lt;/em&gt; is omitted the current directory is assumed. &lt;em&gt;facts&lt;/em&gt; is a list of strings representing the type of information desired (e.g. &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt;). Return a generator object yielding a tuple of two elements for every file found in path. First element is the file name, the second one is a dictionary containing facts about the file name. Content of this dictionary might be limited by the &lt;em&gt;facts&lt;/em&gt; argument but server is not guaranteed to return all requested facts.</source>
          <target state="translated">使用 &lt;code&gt;MLSD&lt;/code&gt; 命令（&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;）以标准格式列出目录。如果省略&lt;em&gt;路径，&lt;/em&gt;则使用当前目录。&lt;em&gt;facts&lt;/em&gt;是代表所需信息类型的字符串列表（例如 &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt; ）。返回一个生成器对象，该对象为在path中找到的每个文件生成两个元素的元组。第一个元素是文件名，第二个元素是包含有关文件名事实的字典。该词典的内容可能受&lt;em&gt;事实&lt;/em&gt;参数限制，但不能保证服务器返回所有请求的事实。</target>
        </trans-unit>
        <trans-unit id="52f8f2e23f573d0eb68d4dbc3d2fd2a7d074f68f" translate="yes" xml:space="preserve">
          <source>List a directory in a standardized format by using &lt;code&gt;MLSD&lt;/code&gt; command (&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;). If &lt;em&gt;path&lt;/em&gt; is omitted the current directory is assumed. &lt;em&gt;facts&lt;/em&gt; is a list of strings representing the type of information desired (e.g. &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt;). Return a generator object yielding a tuple of two elements for every file found in path. First element is the file name, the second one is a dictionary containing facts about the file name. Content of this dictionary might be limited by the &lt;em&gt;facts&lt;/em&gt; argument but server is not guaranteed to return all requested facts.</source>
          <target state="translated">使用 &lt;code&gt;MLSD&lt;/code&gt; 命令（&lt;a href=&quot;https://tools.ietf.org/html/rfc3659.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 3659&lt;/strong&gt;&lt;/a&gt;）以标准格式列出目录。如果省略&lt;em&gt;路径，&lt;/em&gt;则使用当前目录。&lt;em&gt;facts&lt;/em&gt;是代表所需信息类型的字符串列表（例如 &lt;code&gt;[&quot;type&quot;, &quot;size&quot;, &quot;perm&quot;]&lt;/code&gt; ）。返回一个生成器对象，对于在路径中找到的每个文件，该对象将生成两个元素的元组。第一个元素是文件名，第二个元素是包含有关文件名事实的字典。该词典的内容可能受&lt;em&gt;事实&lt;/em&gt;参数限制，但不能保证服务器返回所有请求的事实。</target>
        </trans-unit>
        <trans-unit id="12fba910c861b6473d219e30cab4ab0ddbb8c795" translate="yes" xml:space="preserve">
          <source>List all source code for the current function or frame. Interesting lines are marked as for &lt;a href=&quot;#pdbcommand-list&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">列出当前功能或框架的所有源代码。有趣的行标记为&lt;a href=&quot;#pdbcommand-list&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99c1d888dd84bd6bd4003b76aee6da2697bb0b77" translate="yes" xml:space="preserve">
          <source>List and set comprehensions, generator expressions, and dictionary comprehensions. &lt;code&gt;elt&lt;/code&gt; (or &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;) is a single node representing the part that will be evaluated for each item.</source>
          <target state="translated">列出并设置理解，生成器表达式和字典理解。 &lt;code&gt;elt&lt;/code&gt; （或 &lt;code&gt;key&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; ）是一个单个节点，代表将为每个项目评估的零件。</target>
        </trans-unit>
        <trans-unit id="d70266b0617125a334eb682496c42690e2f3d04c" translate="yes" xml:space="preserve">
          <source>List files in a tarfile.</source>
          <target state="translated">列出tar文件中的文件。</target>
        </trans-unit>
        <trans-unit id="5c622661583046960e0bb8731c1346ad7495dcc3" translate="yes" xml:space="preserve">
          <source>List files in a zipfile.</source>
          <target state="translated">在一个zip文件中列出文件。</target>
        </trans-unit>
        <trans-unit id="fa6a27ccedf9df11c9e8acab0ae9e0767d6f65fc" translate="yes" xml:space="preserve">
          <source>List mailbox names in &lt;em&gt;directory&lt;/em&gt; matching &lt;em&gt;pattern&lt;/em&gt;. &lt;em&gt;directory&lt;/em&gt; defaults to the top-level mail folder, and &lt;em&gt;pattern&lt;/em&gt; defaults to match anything. Returned data contains a list of &lt;code&gt;LIST&lt;/code&gt; responses.</source>
          <target state="translated">以&lt;em&gt;目录&lt;/em&gt;匹配&lt;em&gt;模式&lt;/em&gt;列出邮箱名称。&lt;em&gt;目录&lt;/em&gt;默认为顶级邮件文件夹，&lt;em&gt;模式&lt;/em&gt;默认为匹配任何内容。返回的数据包含 &lt;code&gt;LIST&lt;/code&gt; 响应列表。</target>
        </trans-unit>
        <trans-unit id="800331fecdd25e9674ace0cfb84a1e1381cf18b8" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; objects the server is listening on.</source>
          <target state="translated">服务器正在侦听的&lt;a href=&quot;socket#socket.socket&quot;&gt; &lt;code&gt;socket.socket&lt;/code&gt; &lt;/a&gt;对象的列表。</target>
        </trans-unit>
        <trans-unit id="4bbdd0f3d0f330c45f8c92c42b67ed3353e81dd6" translate="yes" xml:space="preserve">
          <source>List of Unix shell-style wildcard test name patterns that test methods have to match to be included in test suites (see &lt;code&gt;-v&lt;/code&gt; option).</source>
          <target state="translated">测试套件中必须包含测试方法必须匹配的Unix Shell样式通配符测试名称模式的列表（请参见 &lt;code&gt;-v&lt;/code&gt; 选项）。</target>
        </trans-unit>
        <trans-unit id="57db87f824923c6a6e85c41dda54ae743e739bdc" translate="yes" xml:space="preserve">
          <source>List of all features.</source>
          <target state="translated">所有功能的清单。</target>
        </trans-unit>
        <trans-unit id="da2bc44930e06125e26f0c874633811a8e00c51a" translate="yes" xml:space="preserve">
          <source>List of all known property names.</source>
          <target state="translated">所有已知财产名称的清单;</target>
        </trans-unit>
        <trans-unit id="faa04fad93c99ece21b96a05b9ce1aa911971898" translate="yes" xml:space="preserve">
          <source>List of directories ignored by &lt;a href=&quot;#filecmp.dircmp&quot;&gt;&lt;code&gt;dircmp&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;#filecmp.dircmp&quot;&gt; &lt;code&gt;dircmp&lt;/code&gt; &lt;/a&gt;忽略的目录列表。</target>
        </trans-unit>
        <trans-unit id="c9d8bdccc79a7bea28f18186c6779f053049d3e4" translate="yes" xml:space="preserve">
          <source>List of modes (most common values) of discrete or nomimal data.</source>
          <target state="translated">离散或名义数据的模式列表(最常见值)。</target>
        </trans-unit>
        <trans-unit id="2a6187ce53594c8b41f9b2648356dcd783d1eb99" translate="yes" xml:space="preserve">
          <source>List of strings for where to find submodules, if a package (&lt;code&gt;None&lt;/code&gt; otherwise).</source>
          <target state="translated">如果有软件包，则在何处查找子模块的字符串列表（否则为 &lt;code&gt;None&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f7e2b9e05ac716cd69cc94c5137d7e7daf29a300" translate="yes" xml:space="preserve">
          <source>List of supported TLS channel binding types. Strings in this list can be used as arguments to &lt;a href=&quot;#ssl.SSLSocket.get_channel_binding&quot;&gt;&lt;code&gt;SSLSocket.get_channel_binding()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">支持的TLS通道绑定类型列表。此列表中的字符串可用作&lt;a href=&quot;#ssl.SSLSocket.get_channel_binding&quot;&gt; &lt;code&gt;SSLSocket.get_channel_binding()&lt;/code&gt; 的&lt;/a&gt;参数。</target>
        </trans-unit>
        <trans-unit id="cfd0c4da7e055fb85f316a12860955e2e611d96f" translate="yes" xml:space="preserve">
          <source>List of type map file names commonly installed. These files are typically named &lt;code&gt;mime.types&lt;/code&gt; and are installed in different locations by different packages.</source>
          <target state="translated">通常安装的类型映射文件名称列表。这些文件通常称为 &lt;code&gt;mime.types&lt;/code&gt; ,并通过不同的软件包安装在不同的位置。</target>
        </trans-unit>
        <trans-unit id="252590ef4c3c27b7d91456da231c614540d98ed0" translate="yes" xml:space="preserve">
          <source>List source code for the current file. Without arguments, list 11 lines around the current line or continue the previous listing. With &lt;code&gt;.&lt;/code&gt; as argument, list 11 lines around the current line. With one argument, list 11 lines around at that line. With two arguments, list the given range; if the second argument is less than the first, it is interpreted as a count.</source>
          <target state="translated">列出当前文件的源代码。不带参数的情况下，在当前行周围列出11行，或继续上一个列表。用 &lt;code&gt;.&lt;/code&gt; 作为参数，在当前行周围列出11行。使用一个参数，在该行周围列出11行。用两个参数列出给定的范围；如果第二个参数小于第一个参数，则将其解释为一个计数。</target>
        </trans-unit>
        <trans-unit id="b76073e5ceffc46ca02895c2b2a65a33093b7119" translate="yes" xml:space="preserve">
          <source>List subscribed mailbox names in directory matching pattern. &lt;em&gt;directory&lt;/em&gt; defaults to the top level directory and &lt;em&gt;pattern&lt;/em&gt; defaults to match any mailbox. Returned data are tuples of message part envelope and data.</source>
          <target state="translated">以目录匹配模式列出订阅的邮箱名称。&lt;em&gt;目录&lt;/em&gt;默认为顶级目录，&lt;em&gt;模式&lt;/em&gt;默认为与任何邮箱匹配。返回的数据是消息部分信封和数据的元组。</target>
        </trans-unit>
        <trans-unit id="14794f6edf5dd70913a0dc13a15f54d846587e12" translate="yes" xml:space="preserve">
          <source>Listen for connections made to the socket. The &lt;em&gt;backlog&lt;/em&gt; argument specifies the maximum number of queued connections and should be at least 1; the maximum value is system-dependent (usually 5).</source>
          <target state="translated">侦听与套接字的连接。的&lt;em&gt;积压&lt;/em&gt;参数指定排队的最大连接数和应至少为1; 最大值取决于系统（通常为5）。</target>
        </trans-unit>
        <trans-unit id="59788472d65c6cb0cdf054e71f5b32c462ddafe5" translate="yes" xml:space="preserve">
          <source>Listener objects have the following read-only properties:</source>
          <target state="translated">监听器对象具有以下只读属性。</target>
        </trans-unit>
        <trans-unit id="7ca23c866857250c984c4db4e11455584d8f239e" translate="yes" xml:space="preserve">
          <source>Listeners and Clients</source>
          <target state="translated">听众和客户</target>
        </trans-unit>
        <trans-unit id="98711f268cb1239cc73201ecb0f34f28471e2e46" translate="yes" xml:space="preserve">
          <source>Listing Python source files in this directory tree:</source>
          <target state="translated">在这个目录树中列出Python源文件。</target>
        </trans-unit>
        <trans-unit id="78d2fd98237accde24de6f88a6a1f729f5aa17b3" translate="yes" xml:space="preserve">
          <source>Listing subdirectories:</source>
          <target state="translated">列出子目录。</target>
        </trans-unit>
        <trans-unit id="a00f1c75e1ab8588a44ac67163d8544008e2dedd" translate="yes" xml:space="preserve">
          <source>Listing the files in the resulting archive gives us:</source>
          <target state="translated">将文件列在所产生的存档中,我们得到。</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="d704786c02f4fcaf4a2e891ff8e18bad45ac10fd" translate="yes" xml:space="preserve">
          <source>Lists are mutable sequences, typically used to store collections of homogeneous items (where the precise degree of similarity will vary by application).</source>
          <target state="translated">列表是可突变的序列,通常用于存储同质项目的集合(其中精确的相似度将因应用而异)。</target>
        </trans-unit>
        <trans-unit id="c32ca8f5ba63672fe4a8182a4b217ecc9b9eb14c" translate="yes" xml:space="preserve">
          <source>Lists implement all of the &lt;a href=&quot;#typesseq-common&quot;&gt;common&lt;/a&gt; and &lt;a href=&quot;#typesseq-mutable&quot;&gt;mutable&lt;/a&gt; sequence operations. Lists also provide the following additional method:</source>
          <target state="translated">列表实现了所有&lt;a href=&quot;#typesseq-common&quot;&gt;常见的&lt;/a&gt;和&lt;a href=&quot;#typesseq-mutable&quot;&gt;可变的&lt;/a&gt;序列操作。列表还提供以下其他方法：</target>
        </trans-unit>
        <trans-unit id="fc6230b3f52b454e7bfc16f6d295dbd8a3f5614d" translate="yes" xml:space="preserve">
          <source>Lists may be constructed in several ways:</source>
          <target state="translated">列表可以用几种方式构建。</target>
        </trans-unit>
        <trans-unit id="c4b615b7707ee69f129d6b1543d98fed8ea5861c" translate="yes" xml:space="preserve">
          <source>Lists the names of all open windows; select one to bring it to the foreground (deiconifying it if necessary).</source>
          <target state="translated">列出所有打开的窗口的名称;选择一个将其置于前台(必要时去图标化)。</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="2b17c112445a7674729b2ac41ba9f07dc0cb6826" translate="yes" xml:space="preserve">
          <source>Load MIME information from a file named &lt;em&gt;filename&lt;/em&gt;. This uses &lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt; to parse the file.</source>
          <target state="translated">从名为&lt;em&gt;filename&lt;/em&gt;的文件中加载MIME信息。这使用&lt;a href=&quot;#mimetypes.MimeTypes.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; &lt;/a&gt;来解析文件。</target>
        </trans-unit>
        <trans-unit id="792824da62ac18b629f8e6b4e61bfdae14c5fd20" translate="yes" xml:space="preserve">
          <source>Load MIME type information from an open file &lt;em&gt;fp&lt;/em&gt;. The file must have the format of the standard &lt;code&gt;mime.types&lt;/code&gt; files.</source>
          <target state="translated">从打开的文件&lt;em&gt;fp&lt;/em&gt;加载MIME类型信息。该文件必须具有标准 &lt;code&gt;mime.types&lt;/code&gt; 文件的格式。</target>
        </trans-unit>
        <trans-unit id="0fd53188415ccfe79d44d4578cf2a8334a3d823f" translate="yes" xml:space="preserve">
          <source>Load MIME type information from the Windows registry.</source>
          <target state="translated">从Windows注册表加载MIME类型信息。</target>
        </trans-unit>
        <trans-unit id="d2ab95731c56b9a24f873b538755b0e5ea0d2829" translate="yes" xml:space="preserve">
          <source>Load a plist from a bytes object. See &lt;a href=&quot;#plistlib.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; for an explanation of the keyword arguments.</source>
          <target state="translated">从bytes对象加载plist。有关关键字参数的说明，请参见&lt;a href=&quot;#plistlib.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b08eb074a7b195edaa59eaed1cf5e8727d68fee" translate="yes" xml:space="preserve">
          <source>Load a private key and the corresponding certificate. The &lt;em&gt;certfile&lt;/em&gt; string must be the path to a single file in PEM format containing the certificate as well as any number of CA certificates needed to establish the certificate&amp;rsquo;s authenticity. The &lt;em&gt;keyfile&lt;/em&gt; string, if present, must point to a file containing the private key in. Otherwise the private key will be taken from &lt;em&gt;certfile&lt;/em&gt; as well. See the discussion of &lt;a href=&quot;#ssl-certificates&quot;&gt;Certificates&lt;/a&gt; for more information on how the certificate is stored in the &lt;em&gt;certfile&lt;/em&gt;.</source>
          <target state="translated">加载私钥和相应的证书。所述&lt;em&gt;certFile中&lt;/em&gt;字符串必须包含证书以及任何号码，以建立证书的真实性所需要的CA证书的路径到单个文件PEM格式。该&lt;em&gt;密钥文件&lt;/em&gt;的字符串，如果存在的话，必须指向包含私有密钥的文件，否则私钥将采取&lt;em&gt;certFile中&lt;/em&gt;也是如此。有关如何将证书存储在&lt;em&gt;certfile&lt;/em&gt;中的更多信息，请参见&lt;a href=&quot;#ssl-certificates&quot;&gt;证书&lt;/a&gt;的讨论。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0df7eb62baff888bf529433e660c5a399082980" translate="yes" xml:space="preserve">
          <source>Load a readline history file, and append it to the history list. The default filename is &lt;code&gt;~/.history&lt;/code&gt;. This calls &lt;code&gt;read_history()&lt;/code&gt; in the underlying library.</source>
          <target state="translated">加载readline历史记录文件，并将其附加到历史记录列表中。默认文件名是 &lt;code&gt;~/.history&lt;/code&gt; 。这将在基础库中调用 &lt;code&gt;read_history()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f58087190f63144704a753ee6b80f3cc73b183c" translate="yes" xml:space="preserve">
          <source>Load a set of &amp;ldquo;certification authority&amp;rdquo; (CA) certificates used to validate other peers&amp;rsquo; certificates when &lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt;&lt;code&gt;verify_mode&lt;/code&gt;&lt;/a&gt; is other than &lt;a href=&quot;#ssl.CERT_NONE&quot;&gt;&lt;code&gt;CERT_NONE&lt;/code&gt;&lt;/a&gt;. At least one of &lt;em&gt;cafile&lt;/em&gt; or &lt;em&gt;capath&lt;/em&gt; must be specified.</source>
          <target state="translated">当&lt;a href=&quot;#ssl.SSLContext.verify_mode&quot;&gt; &lt;code&gt;verify_mode&lt;/code&gt; &lt;/a&gt;不是&lt;a href=&quot;#ssl.CERT_NONE&quot;&gt; &lt;code&gt;CERT_NONE&lt;/code&gt; &lt;/a&gt;时，加载一组用于验证其他对等方证书的&amp;ldquo;证书颁发机构&amp;rdquo;（CA）证书。必须指定&lt;em&gt;cafile&lt;/em&gt;或&lt;em&gt;capath中的&lt;/em&gt;至少一个。</target>
        </trans-unit>
        <trans-unit id="6425be74b314ff59dd5ac88cdafe03db1813ef76" translate="yes" xml:space="preserve">
          <source>Load a set of default &amp;ldquo;certification authority&amp;rdquo; (CA) certificates from a filesystem path defined when building the OpenSSL library. Unfortunately, there&amp;rsquo;s no easy way to know whether this method succeeds: no error is returned if no certificates are to be found. When the OpenSSL library is provided as part of the operating system, though, it is likely to be configured properly.</source>
          <target state="translated">从构建OpenSSL库时定义的文件系统路径中加载一组默认的&amp;ldquo;证书颁发机构&amp;rdquo;（CA）证书。不幸的是，没有简单的方法可以知道该方法是否成功：如果找不到证书，则不会返回错误。但是，当OpenSSL库作为操作系统的一部分提供时，它可能已正确配置。</target>
        </trans-unit>
        <trans-unit id="b124fe19c645c5969eaba65d28b149a48d7f5bc8" translate="yes" xml:space="preserve">
          <source>Load a set of default &amp;ldquo;certification authority&amp;rdquo; (CA) certificates from default locations. On Windows it loads CA certs from the &lt;code&gt;CA&lt;/code&gt; and &lt;code&gt;ROOT&lt;/code&gt; system stores. On other systems it calls &lt;a href=&quot;#ssl.SSLContext.set_default_verify_paths&quot;&gt;&lt;code&gt;SSLContext.set_default_verify_paths()&lt;/code&gt;&lt;/a&gt;. In the future the method may load CA certificates from other locations, too.</source>
          <target state="translated">从默认位置加载一组默认的&amp;ldquo;证书颁发机构&amp;rdquo;（CA）证书。在Windows上，它从 &lt;code&gt;CA&lt;/code&gt; 和 &lt;code&gt;ROOT&lt;/code&gt; 系统存储中加载CA证书。在其他系统上，它调用&lt;a href=&quot;#ssl.SSLContext.set_default_verify_paths&quot;&gt; &lt;code&gt;SSLContext.set_default_verify_paths()&lt;/code&gt; &lt;/a&gt;。将来，该方法也可能会从其他位置加载CA证书。</target>
        </trans-unit>
        <trans-unit id="792f87e11df87af3501d49b8d196fb913af1e572" translate="yes" xml:space="preserve">
          <source>Load a shared library into the process and return it. This method always returns a new instance of the library.</source>
          <target state="translated">将一个共享库加载到进程中并返回它。这个方法总是返回一个新的库实例。</target>
        </trans-unit>
        <trans-unit id="c3ea81eee343a4d2df989dde2d08b3714fcbfd81" translate="yes" xml:space="preserve">
          <source>Load a snapshot from a file.</source>
          <target state="translated">从文件中加载快照。</target>
        </trans-unit>
        <trans-unit id="1c7f519dc3373f6a0d8fc97719f2948be78a3852" translate="yes" xml:space="preserve">
          <source>Load configuration from any object that provides a dict-like &lt;code&gt;items()&lt;/code&gt; method. Keys are section names, values are dictionaries with keys and values that should be present in the section. If the used dictionary type preserves order, sections and their keys will be added in order. Values are automatically converted to strings.</source>
          <target state="translated">从任何提供类似dict的 &lt;code&gt;items()&lt;/code&gt; 方法的对象中加载配置。键是部分名称，值是带有应在该部分中显示的键和值的字典。如果使用的字典类型保留顺序，则部分及其键将按顺序添加。值会自动转换为字符串。</target>
        </trans-unit>
        <trans-unit id="609771080ece00742363664de393857bf53c63b0" translate="yes" xml:space="preserve">
          <source>Load cookies from a file.</source>
          <target state="translated">从文件中加载cookie。</target>
        </trans-unit>
        <trans-unit id="d415a74437b2a8fde46291994b8fb27e74daafc0" translate="yes" xml:space="preserve">
          <source>Load the key generation parameters for Diffie-Hellman (DH) key exchange. Using DH key exchange improves forward secrecy at the expense of computational resources (both on the server and on the client). The &lt;em&gt;dhfile&lt;/em&gt; parameter should be the path to a file containing DH parameters in PEM format.</source>
          <target state="translated">加载用于Diffie-Hellman（DH）密钥交换的密钥生成参数。使用DH密钥交换可以提高前向保密性，但会消耗计算资源（在服务器和客户端上）。所述&lt;em&gt;dhfile&lt;/em&gt;参数应的路径包含PEM格式DH参数的文件。</target>
        </trans-unit>
        <trans-unit id="48d42fbf167299e3dd1e195e2e77c87b6142971f" translate="yes" xml:space="preserve">
          <source>Load the module specified by &lt;em&gt;fullname&lt;/em&gt;. &lt;em&gt;fullname&lt;/em&gt; must be the fully qualified (dotted) module name. It returns the imported module, or raises &lt;a href=&quot;#zipimport.ZipImportError&quot;&gt;&lt;code&gt;ZipImportError&lt;/code&gt;&lt;/a&gt; if it wasn&amp;rsquo;t found.</source>
          <target state="translated">加载&lt;em&gt;全名&lt;/em&gt;指定的模块。&lt;em&gt;fullname&lt;/em&gt;必须是完全限定（点分）的模块名称。它返回导入的模块，或者如果&lt;a href=&quot;#zipimport.ZipImportError&quot;&gt; &lt;code&gt;ZipImportError&lt;/code&gt; &lt;/a&gt;则引发ZipImportError。</target>
        </trans-unit>
        <trans-unit id="a3b67eabfacc63af222593625d5483dccb09f499" translate="yes" xml:space="preserve">
          <source>Load the type map given in the file &lt;em&gt;filename&lt;/em&gt;, if it exists. The type map is returned as a dictionary mapping filename extensions, including the leading dot (&lt;code&gt;'.'&lt;/code&gt;), to strings of the form &lt;code&gt;'type/subtype'&lt;/code&gt;. If the file &lt;em&gt;filename&lt;/em&gt; does not exist or cannot be read, &lt;code&gt;None&lt;/code&gt; is returned.</source>
          <target state="translated">加载文件&lt;em&gt;filename中&lt;/em&gt;给定的类型映射（如果存在）。类型映射作为字典映射文件名扩展名（包括前导点（ &lt;code&gt;'.'&lt;/code&gt; ））返回到形式为 &lt;code&gt;'type/subtype'&lt;/code&gt; 的字符串。如果文件&lt;em&gt;名&lt;/em&gt;不存在或无法读取，则返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5f23b0ce31d15663c44713bcd66b9c0b09a0934" translate="yes" xml:space="preserve">
          <source>Loadable extensions are disabled by default. See &lt;a href=&quot;#f1&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;.</source>
          <target state="translated">默认情况下，禁用可加载扩展。参见&lt;a href=&quot;#f1&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c47f6edd5e2c7e153595d9012f90395b664fad9" translate="yes" xml:space="preserve">
          <source>Loadable extensions are disabled by default. See &lt;a href=&quot;#f1&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;.</source>
          <target state="translated">默认情况下，禁用可加载扩展。参见&lt;a href=&quot;#f1&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e571b5d989d6291a8883f0e57e8a8c8f1bd18e89" translate="yes" xml:space="preserve">
          <source>Loaders that wish to support resource reading are expected to provide a method called &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; which returns an object implementing this ABC&amp;rsquo;s interface. If the module specified by fullname is not a package, this method should return &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. An object compatible with this ABC should only be returned when the specified module is a package.</source>
          <target state="translated">希望支持资源读取的 &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; 应该提供一种名为get_resource_reader（fullname）的方法，该方法返回实现此ABC接口的对象。如果全名指定的模块不是包，则此方法应返回&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;。仅当指定的模块是软件包时，才应返回与此ABC兼容的对象。</target>
        </trans-unit>
        <trans-unit id="378ce4564cfc961412915083fc6fe3d3a3ac4043" translate="yes" xml:space="preserve">
          <source>Loaders that wish to support resource reading should implement a &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; method as specified by &lt;a href=&quot;#importlib.abc.ResourceReader&quot;&gt;&lt;code&gt;importlib.abc.ResourceReader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">装载机希望支持资源读数应实行 &lt;code&gt;get_resource_reader(fullname)&lt;/code&gt; ，通过指定的方法&lt;a href=&quot;#importlib.abc.ResourceReader&quot;&gt; &lt;code&gt;importlib.abc.ResourceReader&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3a57f41eadfd6d867f90958cecb3a4047f1a4c3d" translate="yes" xml:space="preserve">
          <source>Loading a library through any of these objects raises an &lt;a href=&quot;sys#auditing&quot;&gt;auditing event&lt;/a&gt;&lt;code&gt;ctypes.dlopen&lt;/code&gt; with string argument &lt;code&gt;name&lt;/code&gt;, the name used to load the library.</source>
          <target state="translated">通过这些对象中的任何一个加载库都会引发&lt;a href=&quot;sys#auditing&quot;&gt;审核事件&lt;/a&gt; &lt;code&gt;ctypes.dlopen&lt;/code&gt; ，该事件的字符串参数 &lt;code&gt;name&lt;/code&gt; 是用于加载库的名称。</target>
        </trans-unit>
        <trans-unit id="6157b16025e97d941d88dc209da06d6279f10e6e" translate="yes" xml:space="preserve">
          <source>Loading and running tests</source>
          <target state="translated">加载和运行测试</target>
        </trans-unit>
        <trans-unit id="0f19a79e96a975070aa13b1f20b3d2bdd4d9dc24" translate="yes" xml:space="preserve">
          <source>Loading dynamic link libraries</source>
          <target state="translated">加载动态链接库</target>
        </trans-unit>
        <trans-unit id="d59529dbda456f2b5d95ed314e6b490be68e48e9" translate="yes" xml:space="preserve">
          <source>Loading shared libraries</source>
          <target state="translated">加载共享图书馆</target>
        </trans-unit>
        <trans-unit id="b90fef70cb5c4d40f44b0f88151132cf53bf667b" translate="yes" xml:space="preserve">
          <source>Loads a method named &lt;code&gt;co_names[namei]&lt;/code&gt; from TOS object. TOS is popped and method and TOS are pushed when interpreter can call unbound method directly. TOS will be used as the first argument (&lt;code&gt;self&lt;/code&gt;) by &lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt;&lt;code&gt;CALL_METHOD&lt;/code&gt;&lt;/a&gt;. Otherwise, &lt;code&gt;NULL&lt;/code&gt; and method is pushed (method is bound method or something else).</source>
          <target state="translated">从TOS对象加载名为 &lt;code&gt;co_names[namei]&lt;/code&gt; 的方法。当解释器可以直接调用未绑定方法时，将弹出TOS并推送方法和TOS。TOS将被&lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt; &lt;code&gt;CALL_METHOD&lt;/code&gt; &lt;/a&gt;用作第一个参数（ &lt;code&gt;self&lt;/code&gt; ）。否则， &lt;code&gt;NULL&lt;/code&gt; 和方法（方法是绑定方法或其他方法）。</target>
        </trans-unit>
        <trans-unit id="45c0dbdf01940684c2ae00c8ba836ba0a46f724e" translate="yes" xml:space="preserve">
          <source>Loads a method named &lt;code&gt;co_names[namei]&lt;/code&gt; from the TOS object. TOS is popped. This bytecode distinguishes two cases: if TOS has a method with the correct name, the bytecode pushes the unbound method and TOS. TOS will be used as the first argument (&lt;code&gt;self&lt;/code&gt;) by &lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt;&lt;code&gt;CALL_METHOD&lt;/code&gt;&lt;/a&gt; when calling the unbound method. Otherwise, &lt;code&gt;NULL&lt;/code&gt; and the object return by the attribute lookup are pushed.</source>
          <target state="translated">从TOS对象加载名为 &lt;code&gt;co_names[namei]&lt;/code&gt; 的方法。TOS弹出。此字节码区分两种情况：如果TOS具有名称正确的方法，则字节码将推送未绑定的方法和TOS。调用unbound方法时，&lt;a href=&quot;#opcode-CALL_METHOD&quot;&gt; &lt;code&gt;CALL_METHOD&lt;/code&gt; &lt;/a&gt;将TOS用作第一个参数（ &lt;code&gt;self&lt;/code&gt; ）。否则， &lt;code&gt;NULL&lt;/code&gt; 并推入由属性查找返回的对象。</target>
        </trans-unit>
        <trans-unit id="d27df2a4a2d21c1753293f40979140c7e27016e1" translate="yes" xml:space="preserve">
          <source>Loads all symbols not starting with &lt;code&gt;'_'&lt;/code&gt; directly from the module TOS to the local namespace. The module is popped after loading all names. This opcode implements &lt;code&gt;from module import *&lt;/code&gt;.</source>
          <target state="translated">将所有不以 &lt;code&gt;'_'&lt;/code&gt; 开头的符号直接从模块TOS 加载到本地名称空间。加载所有名称后，将弹出该模块。此操作码 &lt;code&gt;from module import *&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a73db01bcd9bbe68ec1dd85d66ba7ce5f2794388" translate="yes" xml:space="preserve">
          <source>Loads an external XML section into this element tree. &lt;em&gt;source&lt;/em&gt; is a file name or &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns the section root element.</source>
          <target state="translated">将外部XML节加载到此元素树中。&lt;em&gt;source&lt;/em&gt;是文件名或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。&lt;em&gt;parser&lt;/em&gt;是可选的解析器实例。如果未给出，则使用标准&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;解析器。返回节根元素。</target>
        </trans-unit>
        <trans-unit id="1952c7c28c165103bccf89650bf5868d447acff4" translate="yes" xml:space="preserve">
          <source>Loads an external XML section into this element tree. &lt;em&gt;source&lt;/em&gt; is a file name or &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;parser&lt;/em&gt; is an optional parser instance. If not given, the standard &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; parser is used. Returns the section root element.</source>
          <target state="translated">将外部XML部分加载到此元素树中。&lt;em&gt;source&lt;/em&gt;是文件名或&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。&lt;em&gt;解析器&lt;/em&gt;是可选的解析器实例。如果未给出，则使用标准&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;解析器。返回节的根元素。</target>
        </trans-unit>
        <trans-unit id="1f8a05fa121c3dfddca1eb9b12000164796d7f86" translate="yes" xml:space="preserve">
          <source>Loads the attribute &lt;code&gt;co_names[namei]&lt;/code&gt; from the module found in TOS. The resulting object is pushed onto the stack, to be subsequently stored by a &lt;a href=&quot;#opcode-STORE_FAST&quot;&gt;&lt;code&gt;STORE_FAST&lt;/code&gt;&lt;/a&gt; instruction.</source>
          <target state="translated">从TOS中找到的模块中加载属性 &lt;code&gt;co_names[namei]&lt;/code&gt; 。结果对象被压入堆栈，随后由&lt;a href=&quot;#opcode-STORE_FAST&quot;&gt; &lt;code&gt;STORE_FAST&lt;/code&gt; &lt;/a&gt;指令存储。</target>
        </trans-unit>
        <trans-unit id="9b348168c8362df88f869811fab229492225da54" translate="yes" xml:space="preserve">
          <source>Loads the cell contained in slot &lt;em&gt;i&lt;/em&gt; of the cell and free variable storage. Pushes a reference to the object the cell contains on the stack.</source>
          <target state="translated">加载包含在单元的插槽&lt;em&gt;i&lt;/em&gt;和可用变量存储中的单元。将引用推送到单元格包含在堆栈中的对象。</target>
        </trans-unit>
        <trans-unit id="07317685209bae8dc29b1177be533689623566aa" translate="yes" xml:space="preserve">
          <source>Loads the global named &lt;code&gt;co_names[namei]&lt;/code&gt; onto the stack.</source>
          <target state="translated">将全局名为 &lt;code&gt;co_names[namei]&lt;/code&gt; 加载到堆栈中。</target>
        </trans-unit>
        <trans-unit id="5e4196f78acb5e15163031bb305c6c69a7881387" translate="yes" xml:space="preserve">
          <source>Local currency symbol.</source>
          <target state="translated">当地货币符号:</target>
        </trans-unit>
        <trans-unit id="52009a3ea27db65f1cc4de20822dd34262e8738c" translate="yes" xml:space="preserve">
          <source>Local processes can also access that queue, using the code from above on the client to access it remotely:</source>
          <target state="translated">本地进程也可以访问该队列,在客户端使用上面的代码进行远程访问。</target>
        </trans-unit>
        <trans-unit id="3e985f42b4f2cb4a242c933c6cd4f71c10094544" translate="yes" xml:space="preserve">
          <source>Locale category for formatting numbers. The functions &lt;a href=&quot;#locale.format&quot;&gt;&lt;code&gt;format()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#locale.atoi&quot;&gt;&lt;code&gt;atoi()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#locale.atof&quot;&gt;&lt;code&gt;atof()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locale.str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module are affected by that category. All other numeric formatting operations are not affected.</source>
          <target state="translated">用于格式化数字的语言环境类别。的功能&lt;a href=&quot;#locale.format&quot;&gt; &lt;code&gt;format()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#locale.atoi&quot;&gt; &lt;code&gt;atoi()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#locale.atof&quot;&gt; &lt;code&gt;atof()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#locale.str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;的的&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;模块是由类的影响。所有其他数字格式设置操作均不受影响。</target>
        </trans-unit>
        <trans-unit id="e89698268d6ca826988ca2828f9a33ea91d9b28a" translate="yes" xml:space="preserve">
          <source>Locale category for formatting of monetary values. The available options are available from the &lt;a href=&quot;#locale.localeconv&quot;&gt;&lt;code&gt;localeconv()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">货币值格式的语言环境类别。可用的选项可从&lt;a href=&quot;#locale.localeconv&quot;&gt; &lt;code&gt;localeconv()&lt;/code&gt; &lt;/a&gt;函数获得。</target>
        </trans-unit>
        <trans-unit id="04a64c4c278c2187092935ce39d2099f68cb48c8" translate="yes" xml:space="preserve">
          <source>Locale category for message display. Python currently does not support application specific locale-aware messages. Messages displayed by the operating system, like those returned by &lt;a href=&quot;os#os.strerror&quot;&gt;&lt;code&gt;os.strerror()&lt;/code&gt;&lt;/a&gt; might be affected by this category.</source>
          <target state="translated">消息显示的语言环境类别。Python当前不支持特定于应用程序的区域感知消息。操作系统显示的消息，例如&lt;a href=&quot;os#os.strerror&quot;&gt; &lt;code&gt;os.strerror()&lt;/code&gt; &lt;/a&gt;返回的消息，可能会受到此类别的影响。</target>
        </trans-unit>
        <trans-unit id="ddd49d042ef959ad8740ad1439b50170f4a67803" translate="yes" xml:space="preserve">
          <source>Locale category for sorting strings. The functions &lt;a href=&quot;#locale.strcoll&quot;&gt;&lt;code&gt;strcoll()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#locale.strxfrm&quot;&gt;&lt;code&gt;strxfrm()&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;#module-locale&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; module are affected.</source>
          <target state="translated">用于对字符串进行排序的语言环境类别。的功能&lt;a href=&quot;#locale.strcoll&quot;&gt; &lt;code&gt;strcoll()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#locale.strxfrm&quot;&gt; &lt;code&gt;strxfrm()&lt;/code&gt; &lt;/a&gt;的的&lt;a href=&quot;#module-locale&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt;模块受到影响。</target>
        </trans-unit>
        <trans-unit id="cbbf73bf0b11794a60e800b47ab121a2dee00b07" translate="yes" xml:space="preserve">
          <source>Locale category for the character type functions. Depending on the settings of this category, the functions of module &lt;a href=&quot;string#module-string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; dealing with case change their behaviour.</source>
          <target state="translated">字符类型功能的语言环境类别。根据该类别的设置，处理&lt;a href=&quot;string#module-string&quot;&gt; &lt;code&gt;string&lt;/code&gt; &lt;/a&gt;的模块字符串的功能会更改其行为。</target>
        </trans-unit>
        <trans-unit id="b3402d90af0a871f59ee54dff6e494f7c57e091c" translate="yes" xml:space="preserve">
          <source>Locale category for the formatting of time. The function &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; follows these conventions.</source>
          <target state="translated">时间格式的语言环境类别。函数&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;遵循以下约定。</target>
        </trans-unit>
        <trans-unit id="73b793f3c64332c43debe3f45fccfa2080cec4a8" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s abbreviated month name.</source>
          <target state="translated">语言环境的缩写月份名称。</target>
        </trans-unit>
        <trans-unit id="c9afac89d2e328ab0ed56be9db5cfa0260851bff" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s abbreviated weekday name.</source>
          <target state="translated">语言环境的缩写工作日名称。</target>
        </trans-unit>
        <trans-unit id="46905c93036f1fc91beab4f6536669f4aa997a97" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate date and time representation.</source>
          <target state="translated">语言环境的适当日期和时间表示。</target>
        </trans-unit>
        <trans-unit id="13dd4044599b17dfb922c37d1bc883f07809d332" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate date representation.</source>
          <target state="translated">语言环境的适当日期表示形式。</target>
        </trans-unit>
        <trans-unit id="36487e73126def0235c7c9de6ec2356b44418976" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s appropriate time representation.</source>
          <target state="translated">语言环境的适当时间表示形式。</target>
        </trans-unit>
        <trans-unit id="f2fefc48256fa82bb994918d97f4d1273ceaaa82" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s equivalent of either AM or PM.</source>
          <target state="translated">相当于AM或PM的语言环境。</target>
        </trans-unit>
        <trans-unit id="6fd390382c5edc4503dc946a153a0cfc7197d046" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s full month name.</source>
          <target state="translated">语言环境的完整月份名称。</target>
        </trans-unit>
        <trans-unit id="07ec6fcd65ab62d1a5fc3d4b40fc1f0d429bee74" translate="yes" xml:space="preserve">
          <source>Locale&amp;rsquo;s full weekday name.</source>
          <target state="translated">语言环境的完整工作日名称。</target>
        </trans-unit>
        <trans-unit id="f1fb667e5d929e9a2ab0404441ece3a2b8b4ac94" translate="yes" xml:space="preserve">
          <source>Localizing your application</source>
          <target state="translated">本地化您的应用程序</target>
        </trans-unit>
        <trans-unit id="7e70bb97fb52037a6fc3c4f3daae9b44f1e4190f" translate="yes" xml:space="preserve">
          <source>Localizing your module</source>
          <target state="translated">本地化您的模块</target>
        </trans-unit>
        <trans-unit id="d2e95cdee60c00152032441855294fcdb5f25216" translate="yes" xml:space="preserve">
          <source>Locate the insertion point for &lt;em&gt;x&lt;/em&gt; in &lt;em&gt;a&lt;/em&gt; to maintain sorted order. The parameters &lt;em&gt;lo&lt;/em&gt; and &lt;em&gt;hi&lt;/em&gt; may be used to specify a subset of the list which should be considered; by default the entire list is used. If &lt;em&gt;x&lt;/em&gt; is already present in &lt;em&gt;a&lt;/em&gt;, the insertion point will be before (to the left of) any existing entries. The return value is suitable for use as the first parameter to &lt;code&gt;list.insert()&lt;/code&gt; assuming that &lt;em&gt;a&lt;/em&gt; is already sorted.</source>
          <target state="translated">找到了插入点&lt;em&gt;X&lt;/em&gt;在&lt;em&gt;一个&lt;/em&gt;维持有序。参数&lt;em&gt;lo&lt;/em&gt;和&lt;em&gt;hi&lt;/em&gt;可以用来指定应该考虑的列表子集。默认情况下，将使用整个列表。如果&lt;em&gt;x&lt;/em&gt;在&lt;em&gt;a中&lt;/em&gt;已经存在，则插入点将在任何现有条目之前（左侧）。假定已经对&lt;em&gt;a&lt;/em&gt;进行了排序，则该返回值适合用作 &lt;code&gt;list.insert()&lt;/code&gt; 的第一个参数。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c21d4b6cbd99b64624c0ae81363ca97a7b37eac" translate="yes" xml:space="preserve">
          <source>Locates a bitmap file of the name &lt;code&gt;name.xpm&lt;/code&gt; or &lt;code&gt;name&lt;/code&gt; in one of the bitmap directories (see the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt;&lt;code&gt;tix_addbitmapdir()&lt;/code&gt;&lt;/a&gt; method). By using &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt;&lt;code&gt;tix_getbitmap()&lt;/code&gt;&lt;/a&gt;, you can avoid hard coding the pathnames of the bitmap files in your application. When successful, it returns the complete pathname of the bitmap file, prefixed with the character &lt;code&gt;@&lt;/code&gt;. The returned value can be used to configure the &lt;code&gt;bitmap&lt;/code&gt; option of the Tk and Tix widgets.</source>
          <target state="translated">在一个位图目录中找到一个名称为 &lt;code&gt;name.xpm&lt;/code&gt; 或 &lt;code&gt;name&lt;/code&gt; 的位图文件（请参见&lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt; &lt;code&gt;tix_addbitmapdir()&lt;/code&gt; &lt;/a&gt;方法）。通过使用&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getbitmap&quot;&gt; &lt;code&gt;tix_getbitmap()&lt;/code&gt; &lt;/a&gt;，可以避免在应用程序中对位图文件的路径名进行硬编码。成功后，它将返回位图文件的完整路径名，并以字符 &lt;code&gt;@&lt;/code&gt; 开头。返回的值可用于配置Tk和Tix小部件的 &lt;code&gt;bitmap&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="7a6c0b8acf24a16e33c0f64184c64947bcfef879" translate="yes" xml:space="preserve">
          <source>Locates an image file of the name &lt;code&gt;name.xpm&lt;/code&gt;, &lt;code&gt;name.xbm&lt;/code&gt; or &lt;code&gt;name.ppm&lt;/code&gt; in one of the bitmap directories (see the &lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt;&lt;code&gt;tix_addbitmapdir()&lt;/code&gt;&lt;/a&gt; method above). If more than one file with the same name (but different extensions) exist, then the image type is chosen according to the depth of the X display: xbm images are chosen on monochrome displays and color images are chosen on color displays. By using &lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt;&lt;code&gt;tix_getimage()&lt;/code&gt;&lt;/a&gt;, you can avoid hard coding the pathnames of the image files in your application. When successful, this method returns the name of the newly created image, which can be used to configure the &lt;code&gt;image&lt;/code&gt; option of the Tk and Tix widgets.</source>
          <target state="translated">在一个位图目录中 &lt;code&gt;name.ppm&lt;/code&gt; 名称为 &lt;code&gt;name.xpm&lt;/code&gt; ， &lt;code&gt;name.xbm&lt;/code&gt; 或name.ppm的图像文件（请参见上面的&lt;a href=&quot;#tkinter.tix.tixCommand.tix_addbitmapdir&quot;&gt; &lt;code&gt;tix_addbitmapdir()&lt;/code&gt; &lt;/a&gt;方法）。如果存在多个具有相同名称（但扩展名不同）的文件，则根据X显示器的深度选择图像类型：在单色显示器上选择xbm图像，在彩色显示器上选择彩色图像。通过使用&lt;a href=&quot;#tkinter.tix.tixCommand.tix_getimage&quot;&gt; &lt;code&gt;tix_getimage()&lt;/code&gt; &lt;/a&gt;，可以避免在应用程序中对图像文件的路径名进行硬编码。成功后，此方法将返回新创建的图像的名称，该名称可用于配置Tk和Tix小部件的 &lt;code&gt;image&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="f8b0e21f5b3f01d9c1a093dcc7aebc48a221cf7a" translate="yes" xml:space="preserve">
          <source>Locator Objects</source>
          <target state="translated">定位器对象</target>
        </trans-unit>
        <trans-unit id="891ebccd5baa32daed16fb5a0825ca7a4464931f" translate="yes" xml:space="preserve">
          <source>Lock</source>
          <target state="translated">Lock</target>
        </trans-unit>
        <trans-unit id="5a9e42ea8ddb21d85da434d1d4df2d2f1efa57a3" translate="yes" xml:space="preserve">
          <source>Lock Objects</source>
          <target state="translated">锁定对象</target>
        </trans-unit>
        <trans-unit id="06f960cf76802c9e596f5a165b9c306033b8c337" translate="yes" xml:space="preserve">
          <source>Lock objects have the following methods:</source>
          <target state="translated">锁定对象有以下方法。</target>
        </trans-unit>
        <trans-unit id="0222c4646a5cac92401d4d0c07f15b59f773661e" translate="yes" xml:space="preserve">
          <source>Lock part of a file based on file descriptor &lt;em&gt;fd&lt;/em&gt; from the C runtime. Raises &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; on failure. The locked region of the file extends from the current file position for &lt;em&gt;nbytes&lt;/em&gt; bytes, and may continue beyond the end of the file. &lt;em&gt;mode&lt;/em&gt; must be one of the &lt;code&gt;LK_*&lt;/code&gt; constants listed below. Multiple regions in a file may be locked at the same time, but may not overlap. Adjacent regions are not merged; they must be unlocked individually.</source>
          <target state="translated">基于C运行时的文件描述符&lt;em&gt;fd&lt;/em&gt;锁定文件的一部分。失败时引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。文件的锁定区域从当前文件位置开始扩展了&lt;em&gt;nbytes&lt;/em&gt;个字节，并且可能会持续到文件末尾。&lt;em&gt;mode&lt;/em&gt;必须是下面列出的 &lt;code&gt;LK_*&lt;/code&gt; 常量之一。文件中的多个区域可以同时锁定，但不能重叠。相邻区域不合并；它们必须分别解锁。</target>
        </trans-unit>
        <trans-unit id="c528eeea30f8c7cdbf3dd9c943be567de116bc9e" translate="yes" xml:space="preserve">
          <source>Lock program segments into memory. The value of &lt;em&gt;op&lt;/em&gt; (defined in &lt;code&gt;&amp;lt;sys/lock.h&amp;gt;&lt;/code&gt;) determines which segments are locked.</source>
          <target state="translated">将程序段锁定到内存中。&lt;em&gt;op&lt;/em&gt;的值（在 &lt;code&gt;&amp;lt;sys/lock.h&amp;gt;&lt;/code&gt; 中定义）确定哪些段被锁定。</target>
        </trans-unit>
        <trans-unit id="d14148792cb2e70e25dadd8e130df4def697650f" translate="yes" xml:space="preserve">
          <source>Locks also support the &lt;a href=&quot;#with-locks&quot;&gt;context management protocol&lt;/a&gt;.</source>
          <target state="translated">锁还支持&lt;a href=&quot;#with-locks&quot;&gt;上下文管理协议&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4911bad28d3fb7972d5e7251b010d8af4491853" translate="yes" xml:space="preserve">
          <source>Locks the specified bytes. If the bytes cannot be locked, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">锁定指定的字节。如果不能锁定字节，则会引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9271e320c4c74de58382f17a37df89d94c970942" translate="yes" xml:space="preserve">
          <source>Locks the specified bytes. If the bytes cannot be locked, the program immediately tries again after 1 second. If, after 10 attempts, the bytes cannot be locked, &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">锁定指定的字节。如果无法锁定字节，则程序将在1秒后立即重试。如果在尝试10次之后无法锁定字节，则会引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf1602b3907bd203c789fd778d5036f56eb7eaa5" translate="yes" xml:space="preserve">
          <source>Log in as the given &lt;em&gt;user&lt;/em&gt;. The &lt;em&gt;passwd&lt;/em&gt; and &lt;em&gt;acct&lt;/em&gt; parameters are optional and default to the empty string. If no &lt;em&gt;user&lt;/em&gt; is specified, it defaults to &lt;code&gt;'anonymous'&lt;/code&gt;. If &lt;em&gt;user&lt;/em&gt; is &lt;code&gt;'anonymous'&lt;/code&gt;, the default &lt;em&gt;passwd&lt;/em&gt; is &lt;code&gt;'anonymous@'&lt;/code&gt;. This function should be called only once for each instance, after a connection has been established; it should not be called at all if a host and user were given when the instance was created. Most FTP commands are only allowed after the client has logged in. The &lt;em&gt;acct&lt;/em&gt; parameter supplies &amp;ldquo;accounting information&amp;rdquo;; few systems implement this.</source>
          <target state="translated">以给定&lt;em&gt;用户&lt;/em&gt;身份登录。将&lt;em&gt;passwd文件&lt;/em&gt;和&lt;em&gt;ACCT&lt;/em&gt;参数是可选的，默认为空字符串。如果未指定&lt;em&gt;用户&lt;/em&gt;，则默认为 &lt;code&gt;'anonymous'&lt;/code&gt; 。如果&lt;em&gt;用户&lt;/em&gt;为 &lt;code&gt;'anonymous'&lt;/code&gt; ，则默认&lt;em&gt;密码&lt;/em&gt;为 &lt;code&gt;'anonymous@'&lt;/code&gt; 。建立连接后，每个实例仅应调用一次此函数；如果在创建实例时给出了主机和用户，则根本不应该调用它。大多数FTP命令仅在客户端登录后才被允许&lt;em&gt;。acct&lt;/em&gt;参数提供&amp;ldquo;会计信息&amp;rdquo;。很少有系统实现这一点。</target>
        </trans-unit>
        <trans-unit id="492759de42716d33cbac9e1b9827c65dd042298c" translate="yes" xml:space="preserve">
          <source>Log in on an SMTP server that requires authentication. The arguments are the username and the password to authenticate with. If there has been no previous &lt;code&gt;EHLO&lt;/code&gt; or &lt;code&gt;HELO&lt;/code&gt; command this session, this method tries ESMTP &lt;code&gt;EHLO&lt;/code&gt; first. This method will return normally if the authentication was successful, or may raise the following exceptions:</source>
          <target state="translated">登录需要身份验证的SMTP服务器。参数是用于验证的用户名和密码。如果此会话之前没有以前的 &lt;code&gt;EHLO&lt;/code&gt; 或 &lt;code&gt;HELO&lt;/code&gt; 命令，则此方法将首先尝试ESMTP &lt;code&gt;EHLO&lt;/code&gt; 。如果身份验证成功，此方法将正常返回，或者可能引发以下异常：</target>
        </trans-unit>
        <trans-unit id="d77829d521e5852593ca42255d86ed2e7f8595be" translate="yes" xml:space="preserve">
          <source>Log normal distribution. If you take the natural logarithm of this distribution, you&amp;rsquo;ll get a normal distribution with mean &lt;em&gt;mu&lt;/em&gt; and standard deviation &lt;em&gt;sigma&lt;/em&gt;. &lt;em&gt;mu&lt;/em&gt; can have any value, and &lt;em&gt;sigma&lt;/em&gt; must be greater than zero.</source>
          <target state="translated">记录正态分布。如果采用此分布的自然对数，则将获得均值&lt;em&gt;mu&lt;/em&gt;和标准偏差&lt;em&gt;sigma的&lt;/em&gt;正态分布。&lt;em&gt;mu&lt;/em&gt;可以具有任何值，并且&lt;em&gt;sigma&lt;/em&gt;必须大于零。</target>
        </trans-unit>
        <trans-unit id="ec346ba8e376063f18c76a6a36fb7ed2f33b4610" translate="yes" xml:space="preserve">
          <source>Log options:</source>
          <target state="translated">日志选项:</target>
        </trans-unit>
        <trans-unit id="e403e316611e44a9d6be336eddc9b9eb85594a3c" translate="yes" xml:space="preserve">
          <source>Log the &lt;em&gt;exc_info&lt;/em&gt; tuple in the server log. &lt;em&gt;exc_info&lt;/em&gt; is a &lt;code&gt;(type, value,
traceback)&lt;/code&gt; tuple. The default implementation simply writes the traceback to the request&amp;rsquo;s &lt;code&gt;wsgi.errors&lt;/code&gt; stream and flushes it. Subclasses can override this method to change the format or retarget the output, mail the traceback to an administrator, or whatever other action may be deemed suitable.</source>
          <target state="translated">将&lt;em&gt;exc_info&lt;/em&gt;元组记录在服务器日志中。&lt;em&gt;exc_info&lt;/em&gt;是一个 &lt;code&gt;(type, value, traceback)&lt;/code&gt; 元组。默认实现只是将回溯写到请求的 &lt;code&gt;wsgi.errors&lt;/code&gt; 流中并刷新它。子类可以重写此方法，以更改格式或重新定向输出，将跟踪邮件发送给管理员或采取其他任何认为适当的措施。</target>
        </trans-unit>
        <trans-unit id="dc4e6d3876ad4a8a803d61a2a77cd5334fce93af" translate="yes" xml:space="preserve">
          <source>LogRecord Objects</source>
          <target state="translated">日志记录对象</target>
        </trans-unit>
        <trans-unit id="ccb5e46040b27f71ccff505e9a6e009e5d62de5b" translate="yes" xml:space="preserve">
          <source>LogRecord attributes</source>
          <target state="translated">日志记录属性</target>
        </trans-unit>
        <trans-unit id="fbead21275199ebeec83dafe0173b0929df9cb34" translate="yes" xml:space="preserve">
          <source>Logger Objects</source>
          <target state="translated">记录仪对象</target>
        </trans-unit>
        <trans-unit id="b5fc3005221abc4dacb66646e66e5f0b75230d22" translate="yes" xml:space="preserve">
          <source>LoggerAdapter Objects</source>
          <target state="translated">记录仪适配器对象</target>
        </trans-unit>
        <trans-unit id="15832f53aca8e4c130be5e20c44213f1a721a48e" translate="yes" xml:space="preserve">
          <source>Loggers expose the interface that application code directly uses.</source>
          <target state="translated">记录器暴露了应用程序代码直接使用的接口。</target>
        </trans-unit>
        <trans-unit id="efa3718c7750545c2778f507e22c3d6f661d113d" translate="yes" xml:space="preserve">
          <source>Loggers have the following attributes and methods. Note that Loggers should &lt;em&gt;NEVER&lt;/em&gt; be instantiated directly, but always through the module-level function &lt;code&gt;logging.getLogger(name)&lt;/code&gt;. Multiple calls to &lt;a href=&quot;#logging.getLogger&quot;&gt;&lt;code&gt;getLogger()&lt;/code&gt;&lt;/a&gt; with the same name will always return a reference to the same Logger object.</source>
          <target state="translated">记录器具有以下属性和方法。请注意，&lt;em&gt;永远不要&lt;/em&gt;直接实例化Logger ，而应始终通过模块级函数 &lt;code&gt;logging.getLogger(name)&lt;/code&gt; 实例化。多次调用具有相同名称的&lt;a href=&quot;#logging.getLogger&quot;&gt; &lt;code&gt;getLogger()&lt;/code&gt; &lt;/a&gt;将始终返回对同一Logger对象的引用。</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="718fbafd7688e11a4939390c7cefcf0e84b52cd7" translate="yes" xml:space="preserve">
          <source>Logging Cookbook</source>
          <target state="translated">测井食谱</target>
        </trans-unit>
        <trans-unit id="1fbc43bf18b2478288c7467471047ecb56ddfd53" translate="yes" xml:space="preserve">
          <source>Logging Levels</source>
          <target state="translated">登录级别</target>
        </trans-unit>
        <trans-unit id="1b01df6b50483f653377a29c09e0331101f1c193" translate="yes" xml:space="preserve">
          <source>Logging options of subsequent &lt;a href=&quot;#module-syslog&quot;&gt;&lt;code&gt;syslog()&lt;/code&gt;&lt;/a&gt; calls can be set by calling &lt;a href=&quot;#syslog.openlog&quot;&gt;&lt;code&gt;openlog()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#module-syslog&quot;&gt;&lt;code&gt;syslog()&lt;/code&gt;&lt;/a&gt; will call &lt;a href=&quot;#syslog.openlog&quot;&gt;&lt;code&gt;openlog()&lt;/code&gt;&lt;/a&gt; with no arguments if the log is not currently open.</source>
          <target state="translated">可以通过调用&lt;a href=&quot;#syslog.openlog&quot;&gt; &lt;code&gt;openlog()&lt;/code&gt; &lt;/a&gt;来设置后续&lt;a href=&quot;#module-syslog&quot;&gt; &lt;code&gt;syslog()&lt;/code&gt; &lt;/a&gt;调用的日志记录选项。如果当前未打开日志，则&lt;a href=&quot;#module-syslog&quot;&gt; &lt;code&gt;syslog()&lt;/code&gt; &lt;/a&gt;将不带任何参数调用&lt;a href=&quot;#syslog.openlog&quot;&gt; &lt;code&gt;openlog()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2c3bb3b5b0e703c74d0f552f84bc84df36cf3d0" translate="yes" xml:space="preserve">
          <source>Logical operands</source>
          <target state="translated">逻辑操作数</target>
        </trans-unit>
        <trans-unit id="a5da835bb3de6e8855950138a28dea23921e5aaa" translate="yes" xml:space="preserve">
          <source>Logical operators</source>
          <target state="translated">逻辑运算符</target>
        </trans-unit>
        <trans-unit id="68ee364c110a032900740118e24926681c70b88f" translate="yes" xml:space="preserve">
          <source>Login name</source>
          <target state="translated">登录名</target>
        </trans-unit>
        <trans-unit id="4793b19c165be78b5755bf851fe44408b3928735" translate="yes" xml:space="preserve">
          <source>Logs a message with integer level &lt;em&gt;level&lt;/em&gt; on this logger. The other arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">记录与整数级别的消息&lt;em&gt;级别&lt;/em&gt;上此记录器。其他参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="568da12654cb50668fd7df8728fdffeea5db8e4f" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;CRITICAL&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在根记录器上记录级别为 &lt;code&gt;CRITICAL&lt;/code&gt; 的消息。参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="13c90355ef29e3a334c5bf4bf41ddcfe4ea3bd96" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;CRITICAL&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此记录器上记录级别为 &lt;code&gt;CRITICAL&lt;/code&gt; 的消息。参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36f562459e6b0a68f0056bc85b76d0713156dd98" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on the root logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)</source>
          <target state="translated">在根记录器上记录级别为 &lt;code&gt;DEBUG&lt;/code&gt; 的消息。该&lt;em&gt;MSG&lt;/em&gt;是消息格式字符串，并且&lt;em&gt;ARGS&lt;/em&gt;是被合并到参数&lt;em&gt;MSG&lt;/em&gt;使用字符串格式化操作。（请注意，这意味着您可以在格式字符串中使用关键字以及单个字典参数。）</target>
        </trans-unit>
        <trans-unit id="5a4c1194427cd766c51025f3e34a599a0511d4b3" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on this logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)</source>
          <target state="translated">在此记录器上记录级别为 &lt;code&gt;DEBUG&lt;/code&gt; 的消息。该&lt;em&gt;MSG&lt;/em&gt;是消息格式字符串，并且&lt;em&gt;ARGS&lt;/em&gt;是被合并到参数&lt;em&gt;MSG&lt;/em&gt;使用字符串格式化操作。（请注意，这意味着您可以在格式字符串中使用关键字以及单个字典参数。）</target>
        </trans-unit>
        <trans-unit id="7ee298b777f0058b389d34b722b70a34d14afb80" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;DEBUG&lt;/code&gt; on this logger. The &lt;em&gt;msg&lt;/em&gt; is the message format string, and the &lt;em&gt;args&lt;/em&gt; are the arguments which are merged into &lt;em&gt;msg&lt;/em&gt; using the string formatting operator. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.) No % formatting operation is performed on &lt;em&gt;msg&lt;/em&gt; when no &lt;em&gt;args&lt;/em&gt; are supplied.</source>
          <target state="translated">在此记录器上记录级别为 &lt;code&gt;DEBUG&lt;/code&gt; 的消息。该&lt;em&gt;MSG&lt;/em&gt;是消息格式字符串，并且&lt;em&gt;ARGS&lt;/em&gt;是被合并到参数&lt;em&gt;MSG&lt;/em&gt;使用字符串格式化操作。（请注意，这意味着您可以在格式字符串中使用关键字以及单个字典参数。）当未提供&lt;em&gt;args&lt;/em&gt;时，不会对&lt;em&gt;msg&lt;/em&gt;执行％格式化操作。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f28267fec34519242b4f0b061529a74d9fd484db" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在根记录器上记录 &lt;code&gt;ERROR&lt;/code&gt; 级别为ERROR的消息。参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="063c8e0d066708dfaf5ffe371aa8fb8c4cc02f3c" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;. Exception info is added to the logging message. This function should only be called from an exception handler.</source>
          <target state="translated">在根记录器上记录 &lt;code&gt;ERROR&lt;/code&gt; 级别为ERROR的消息。参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。异常信息将添加到日志消息中。仅应从异常处理程序中调用此函数。</target>
        </trans-unit>
        <trans-unit id="6423ebbe3708cdc9d0f73b8e0a2a041b8f7201cd" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此记录器上记录 &lt;code&gt;ERROR&lt;/code&gt; 级别为ERROR的消息。参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88872c80d5ab754d614298ef5b916093cae7f7b7" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;ERROR&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;. Exception info is added to the logging message. This method should only be called from an exception handler.</source>
          <target state="translated">在此记录器上记录 &lt;code&gt;ERROR&lt;/code&gt; 级别为ERROR的消息。参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。异常信息将添加到日志消息中。仅应从异常处理程序中调用此方法。</target>
        </trans-unit>
        <trans-unit id="d0dc5301e94745236f4d358120d631126efcea6a" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;INFO&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在根记录器上记录 &lt;code&gt;INFO&lt;/code&gt; 级别的消息。参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="581dd2f78c21b5e17b02fc079ab480e252bfcc1d" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;INFO&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此记录器上记录 &lt;code&gt;INFO&lt;/code&gt; 级别的消息。参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f2f699842300d31569b0cd131e0992c77e4125c" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;WARNING&lt;/code&gt; on the root logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在根记录器上记录 &lt;code&gt;WARNING&lt;/code&gt; 级别为WARNING的消息。参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff4a3eae062ed036b2645240bea04e5509ea296a" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;code&gt;WARNING&lt;/code&gt; on this logger. The arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此记录器上记录一条 &lt;code&gt;WARNING&lt;/code&gt; 级别的消息。参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2899f8a5fde47519ab2a228961dc0b080847aeb5" translate="yes" xml:space="preserve">
          <source>Logs a message with level &lt;em&gt;level&lt;/em&gt; on the root logger. The other arguments are interpreted as for &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在根记录器上记录级别&lt;em&gt;级别&lt;/em&gt;的消息。其他参数解释为&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e88c984feb01158e83ba8164af3f59c55939f49a" translate="yes" xml:space="preserve">
          <source>Logs an accepted (successful) request. &lt;em&gt;code&lt;/em&gt; should specify the numeric HTTP code associated with the response. If a size of the response is available, then it should be passed as the &lt;em&gt;size&lt;/em&gt; parameter.</source>
          <target state="translated">记录接受（成功）的请求。&lt;em&gt;代码&lt;/em&gt;应指定与响应关联的数字HTTP代码。如果响应的大小可用，则应将其作为&lt;em&gt;大小&lt;/em&gt;参数传递。</target>
        </trans-unit>
        <trans-unit id="4c6dd21f141766e9553b34ec63e21d85a3b49703" translate="yes" xml:space="preserve">
          <source>Logs an arbitrary message to &lt;code&gt;sys.stderr&lt;/code&gt;. This is typically overridden to create custom error logging mechanisms. The &lt;em&gt;format&lt;/em&gt; argument is a standard printf-style format string, where the additional arguments to &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt;&lt;code&gt;log_message()&lt;/code&gt;&lt;/a&gt; are applied as inputs to the formatting. The client ip address and current date and time are prefixed to every message logged.</source>
          <target state="translated">将任意消息记录到 &lt;code&gt;sys.stderr&lt;/code&gt; 。通常将其覆盖以创建自定义错误日志记录机制。的&lt;em&gt;格式&lt;/em&gt;的参数是一个标准的printf风格格式的字符串，其中所述附加参数&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt; &lt;code&gt;log_message()&lt;/code&gt; &lt;/a&gt;被应用作为输入的格式。客户端ip地址以及当前日期和时间是每个记录的消息的前缀。</target>
        </trans-unit>
        <trans-unit id="e90924ba66bc7d377e31aed21afb101cba9a37c3" translate="yes" xml:space="preserve">
          <source>Logs an error when a request cannot be fulfilled. By default, it passes the message to &lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt;&lt;code&gt;log_message()&lt;/code&gt;&lt;/a&gt;, so it takes the same arguments (&lt;em&gt;format&lt;/em&gt; and additional values).</source>
          <target state="translated">无法满足请求时记录错误。默认情况下，它将消息传递给&lt;a href=&quot;#http.server.BaseHTTPRequestHandler.log_message&quot;&gt; &lt;code&gt;log_message()&lt;/code&gt; &lt;/a&gt;，因此它采用相同的参数（&lt;em&gt;格式&lt;/em&gt;和附加值）。</target>
        </trans-unit>
        <trans-unit id="f8ac632028735d423f992df756452f653d52c9aa" translate="yes" xml:space="preserve">
          <source>Look on the current line. with the cursor, and the line above for a filename and line number. If found, open the file if not already open, and show the line. Use this to view source lines referenced in an exception traceback and lines found by Find in Files. Also available in the context menu of the Shell window and Output windows.</source>
          <target state="translated">在当前行.上用光标查找,上面的行是否有文件名和行号。如果找到了,如果还没有打开文件,就打开文件,并显示该行。用它来查看异常回溯中引用的源行和在文件中查找找到的行。也可在Shell窗口和输出窗口的上下文菜单中使用。</target>
        </trans-unit>
        <trans-unit id="830541a609e4aebb4ca0ddc42697347ba279e0a5" translate="yes" xml:space="preserve">
          <source>Look up a handler function based on the &lt;code&gt;mimetype&lt;/code&gt; of &lt;em&gt;msg&lt;/em&gt; (see next paragraph), call it, passing through all arguments, and return the result of the call. The expectation is that the handler will extract the payload from &lt;em&gt;msg&lt;/em&gt; and return an object that encodes information about the extracted data.</source>
          <target state="translated">查一查基础上的处理函数 &lt;code&gt;mimetype&lt;/code&gt; 的&lt;em&gt;MSG&lt;/em&gt;（见下段），调用它，穿过所有的参数，并返回调用的结果。期望处理程序将从&lt;em&gt;msg中&lt;/em&gt;提取有效负载，并返回一个对有关提取的数据的信息进行编码的对象。</target>
        </trans-unit>
        <trans-unit id="02580224a4c7c76c987379f2bada22e0530b5592" translate="yes" xml:space="preserve">
          <source>Look up character by name. If a character with the given name is found, return the corresponding character. If not found, &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">通过名称查找字符。如果找到具有给定名称的字符，则返回相应的字符。如果找不到，则会引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab30e49eb23103b13863785d8c5f988a831d12c9" translate="yes" xml:space="preserve">
          <source>Look up the &lt;em&gt;context&lt;/em&gt; and &lt;em&gt;message&lt;/em&gt; id in the catalog and return the corresponding message string, as a Unicode string. If there is no entry in the catalog for the &lt;em&gt;message&lt;/em&gt; id and &lt;em&gt;context&lt;/em&gt;, and a fallback has been set, the look up is forwarded to the fallback&amp;rsquo;s &lt;a href=&quot;#gettext.pgettext&quot;&gt;&lt;code&gt;pgettext()&lt;/code&gt;&lt;/a&gt; method. Otherwise, the &lt;em&gt;message&lt;/em&gt; id is returned.</source>
          <target state="translated">在目录中查找&lt;em&gt;上下文&lt;/em&gt;和&lt;em&gt;消息&lt;/em&gt; ID，然后将相应的消息字符串作为Unicode字符串返回。如果目录中没有&lt;em&gt;消息&lt;/em&gt; ID和&lt;em&gt;context的&lt;/em&gt;条目，并且已设置后备，则将查找转发到后备的&lt;a href=&quot;#gettext.pgettext&quot;&gt; &lt;code&gt;pgettext()&lt;/code&gt; &lt;/a&gt;方法。否则，返回&lt;em&gt;消息&lt;/em&gt; ID。</target>
        </trans-unit>
        <trans-unit id="cb02656c464ac3ccae9eccf0e89b321d6923bdd6" translate="yes" xml:space="preserve">
          <source>Look up the &lt;em&gt;message&lt;/em&gt; id in the catalog and return the corresponding message string, as a Unicode string. If there is no entry in the catalog for the &lt;em&gt;message&lt;/em&gt; id, and a fallback has been set, the look up is forwarded to the fallback&amp;rsquo;s &lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt;&lt;code&gt;gettext()&lt;/code&gt;&lt;/a&gt; method. Otherwise, the &lt;em&gt;message&lt;/em&gt; id is returned.</source>
          <target state="translated">在目录中查找&lt;em&gt;消息&lt;/em&gt; ID，并以Unicode字符串的形式返回相应的消息字符串。如果目录中没有&lt;em&gt;消息&lt;/em&gt; ID 条目，并且设置了后备，则将查找转发到后备的&lt;a href=&quot;#gettext.NullTranslations.gettext&quot;&gt; &lt;code&gt;gettext()&lt;/code&gt; &lt;/a&gt;方法。否则，返回&lt;em&gt;消息&lt;/em&gt; ID。</target>
        </trans-unit>
        <trans-unit id="e3a556474e1ed457b70864b01a7298696a2ec2dd" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its &lt;a href=&quot;#codecs.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; class or factory function.</source>
          <target state="translated">查找给定编码的编解码器，并返回其&lt;a href=&quot;#codecs.StreamReader&quot;&gt; &lt;code&gt;StreamReader&lt;/code&gt; &lt;/a&gt;类或工厂函数。</target>
        </trans-unit>
        <trans-unit id="9d4ddc4438742263e3d5627291450220ce8cb31b" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its &lt;a href=&quot;#codecs.StreamWriter&quot;&gt;&lt;code&gt;StreamWriter&lt;/code&gt;&lt;/a&gt; class or factory function.</source>
          <target state="translated">查找给定编码的编解码器，并返回其&lt;a href=&quot;#codecs.StreamWriter&quot;&gt; &lt;code&gt;StreamWriter&lt;/code&gt; &lt;/a&gt;类或工厂函数。</target>
        </trans-unit>
        <trans-unit id="c84e896663516d28c7c27bb365ae80312c5e169f" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its decoder function.</source>
          <target state="translated">查找给定编码的编解码器并返回其解码函数。</target>
        </trans-unit>
        <trans-unit id="eb641b1a229c64cd02ce2ebfc05ae8a7c13b0596" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its encoder function.</source>
          <target state="translated">查找给定编码的编解码器,并返回其编码器函数。</target>
        </trans-unit>
        <trans-unit id="3655c5a141ca4acde5ad365207e8691d73d266bf" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its incremental decoder class or factory function.</source>
          <target state="translated">查找给定编码的编解码器,并返回其增量解码器类或工厂函数。</target>
        </trans-unit>
        <trans-unit id="6cc163fdbcd56d75ce77c6d6d85dc890d18b4429" translate="yes" xml:space="preserve">
          <source>Look up the codec for the given encoding and return its incremental encoder class or factory function.</source>
          <target state="translated">查找给定编码的编解码器,并返回其增量编码器类或工厂函数。</target>
        </trans-unit>
        <trans-unit id="78b595ac3ee12e89b27df3b7a98465df00426911" translate="yes" xml:space="preserve">
          <source>Looks up the codec info in the Python codec registry and returns a &lt;a href=&quot;#codecs.CodecInfo&quot;&gt;&lt;code&gt;CodecInfo&lt;/code&gt;&lt;/a&gt; object as defined below.</source>
          <target state="translated">在Python编解码器注册表中查找编解码器信息，并返回下面定义的&lt;a href=&quot;#codecs.CodecInfo&quot;&gt; &lt;code&gt;CodecInfo&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="cf82cd9963518dc21fb6c641a8de40d76056d5d3" translate="yes" xml:space="preserve">
          <source>Lookup &lt;em&gt;name&lt;/em&gt; in the table and return a &lt;a href=&quot;#symtable.Symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">在表中查找&lt;em&gt;名称&lt;/em&gt;，并返回一个&lt;a href=&quot;#symtable.Symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="f4485ea3acbc6dbce3acdb006f3d986acb5ab231" translate="yes" xml:space="preserve">
          <source>LookupError</source>
          <target state="translated">LookupError</target>
        </trans-unit>
        <trans-unit id="630ea782b7785663fd9d4f73dba3d3c77a23c0bd" translate="yes" xml:space="preserve">
          <source>Lookups search the underlying mappings successively until a key is found. In contrast, writes, updates, and deletions only operate on the first mapping.</source>
          <target state="translated">查找连续搜索底层映射,直到找到一个键。相反,写入、更新和删除只对第一个映射进行操作。</target>
        </trans-unit>
        <trans-unit id="153299db674345d8f2ca5d3d4f9e8e37247d6bf3" translate="yes" xml:space="preserve">
          <source>Loop over the format_string and return an iterable of tuples (&lt;em&gt;literal_text&lt;/em&gt;, &lt;em&gt;field_name&lt;/em&gt;, &lt;em&gt;format_spec&lt;/em&gt;, &lt;em&gt;conversion&lt;/em&gt;). This is used by &lt;a href=&quot;#string.Formatter.vformat&quot;&gt;&lt;code&gt;vformat()&lt;/code&gt;&lt;/a&gt; to break the string into either literal text, or replacement fields.</source>
          <target state="translated">遍历format_string并返回一个可迭代的元组（&lt;em&gt;literal_text&lt;/em&gt;，&lt;em&gt;field_name&lt;/em&gt;，&lt;em&gt;format_spec&lt;/em&gt;，&lt;em&gt;conversion&lt;/em&gt;）。这是用来通过&lt;a href=&quot;#string.Formatter.vformat&quot;&gt; &lt;code&gt;vformat()&lt;/code&gt; &lt;/a&gt;打破串入任一文字文本，或替换字段。</target>
        </trans-unit>
        <trans-unit id="817f983a7edb7dba44fd8f3324b46953d7169631" translate="yes" xml:space="preserve">
          <source>Low highlight</source>
          <target state="translated">低亮点</target>
        </trans-unit>
        <trans-unit id="127b603a1ef011bb89cc88a210069e24596383d1" translate="yes" xml:space="preserve">
          <source>Low level interface to kevent</source>
          <target state="translated">kevent的低级接口</target>
        </trans-unit>
        <trans-unit id="2eb47f09ef951de4242da56b37e0a0774375475b" translate="yes" xml:space="preserve">
          <source>Low median of data.</source>
          <target state="translated">数据的中位数偏低。</target>
        </trans-unit>
        <trans-unit id="8780223be91d8d1f6aff0eae226f7e6a9f597e78" translate="yes" xml:space="preserve">
          <source>Low-level API Index</source>
          <target state="translated">低级API指数</target>
        </trans-unit>
        <trans-unit id="b38b638f8a783319921b9ded343024596436ca9a" translate="yes" xml:space="preserve">
          <source>Low-level APIs</source>
          <target state="translated">低级API</target>
        </trans-unit>
        <trans-unit id="8b09ad35d513c57449768a8b41dddbe56fe84f67" translate="yes" xml:space="preserve">
          <source>Low-level I/O multiplexing module.</source>
          <target state="translated">低级I/O复用模块。</target>
        </trans-unit>
        <trans-unit id="598bc2f6658057b428f7e2f3e606eae47ac8e6d8" translate="yes" xml:space="preserve">
          <source>Low-level methods corresponding to the standard SMTP/ESMTP commands &lt;code&gt;HELP&lt;/code&gt;, &lt;code&gt;RSET&lt;/code&gt;, &lt;code&gt;NOOP&lt;/code&gt;, &lt;code&gt;MAIL&lt;/code&gt;, &lt;code&gt;RCPT&lt;/code&gt;, and &lt;code&gt;DATA&lt;/code&gt; are also supported. Normally these do not need to be called directly, so they are not documented here. For details, consult the module code.</source>
          <target state="translated">还支持与标准SMTP / ESMTP命令 &lt;code&gt;HELP&lt;/code&gt; ， &lt;code&gt;RSET&lt;/code&gt; ， &lt;code&gt;NOOP&lt;/code&gt; ， &lt;code&gt;MAIL&lt;/code&gt; ， &lt;code&gt;RCPT&lt;/code&gt; 和 &lt;code&gt;DATA&lt;/code&gt; 对应的低级方法。通常，这些不需要直接调用，因此这里没有记录。有关详细信息，请查阅模块代码。</target>
        </trans-unit>
        <trans-unit id="26766bff9d94e6567e710b2fea4f1511b662ea0d" translate="yes" xml:space="preserve">
          <source>Low-level terminal control interface.</source>
          <target state="translated">低级终端控制接口。</target>
        </trans-unit>
        <trans-unit id="3037eb1a5f56e2da85ac8efecced594163214b23" translate="yes" xml:space="preserve">
          <source>Low-level time related functions.</source>
          <target state="translated">低级时间相关功能。</target>
        </trans-unit>
        <trans-unit id="d9dd367f9bd9200fa80c2b2e15b69f5c2fd12a8e" translate="yes" xml:space="preserve">
          <source>Low-level transport abstraction over subprocesses. Returned by &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt;&lt;code&gt;loop.subprocess_exec()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt;&lt;code&gt;loop.subprocess_shell()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">子流程上的底层传输抽象。由&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_exec&quot;&gt; &lt;code&gt;loop.subprocess_exec()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asyncio-eventloop#asyncio.loop.subprocess_shell&quot;&gt; &lt;code&gt;loop.subprocess_shell()&lt;/code&gt; 返回&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="173e5fb322f03059e57865273bd7201fd7a87b77" translate="yes" xml:space="preserve">
          <source>Lower left of keypad</source>
          <target state="translated">键盘左下方</target>
        </trans-unit>
        <trans-unit id="1122f5f9b82dc0f050f315c32b632f532a7d070a" translate="yes" xml:space="preserve">
          <source>Lower right of keypad</source>
          <target state="translated">键盘右下方</target>
        </trans-unit>
        <trans-unit id="30c535ddb40e2b13bc291a7dfa8a8275334e95e7" translate="yes" xml:space="preserve">
          <source>Lowercase ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt;. Uppercase ASCII characters are those byte values in the sequence &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;.</source>
          <target state="translated">小写ASCII字符是序列 &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt; 中的那些字节值。大写ASCII字符是序列 &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; 中的那些字节值。</target>
        </trans-unit>
        <trans-unit id="50b863a5a287224249b5146b1cb8597ee4786665" translate="yes" xml:space="preserve">
          <source>Lowercase ASCII characters are those byte values in the sequence &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt;. Uppercase ASCII characters are those byte values in the sequence &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt;. All other byte values are uncased.</source>
          <target state="translated">小写ASCII字符是序列 &lt;code&gt;b'abcdefghijklmnopqrstuvwxyz'&lt;/code&gt; 中的那些字节值。大写ASCII字符是序列 &lt;code&gt;b'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&lt;/code&gt; 中的那些字节值。所有其他字节值都是无大小写的。</target>
        </trans-unit>
        <trans-unit id="2d097e417a0011309b9e3799cef284519c47f119" translate="yes" xml:space="preserve">
          <source>M. Matsumoto and T. Nishimura, &amp;ldquo;Mersenne Twister: A 623-dimensionally equidistributed uniform pseudorandom number generator&amp;rdquo;, ACM Transactions on Modeling and Computer Simulation Vol. 8, No. 1, January pp.3&amp;ndash;30 1998.</source>
          <target state="translated">M. Matsumoto和T. Nishimura，&amp;ldquo;梅森&amp;middot;扭曲（Mersenne Twister）：一个623维均匀分布的均匀伪随机数生成器&amp;rdquo;，《关于建模和计算机仿真的ACM交易》。第八卷，第1期，1998年1月3-30日。</target>
        </trans-unit>
        <trans-unit id="f9326dba9c79149b2bfa04e09a817e946200edd7" translate="yes" xml:space="preserve">
          <source>MADV_* Constants</source>
          <target state="translated">MADV_*常量</target>
        </trans-unit>
        <trans-unit id="0d8e8b084c29a8155c26beb49eacf204d8ae1d30" translate="yes" xml:space="preserve">
          <source>MAIL</source>
          <target state="translated">MAIL</target>
        </trans-unit>
        <trans-unit id="83f776c9895fa9933e9c8f01b0f9175fe4aba8f4" translate="yes" xml:space="preserve">
          <source>MH &amp;amp; nmh: Email for Users &amp;amp; Programmers</source>
          <target state="translated">MH＆nmh：给用户和程序员的电子邮件</target>
        </trans-unit>
        <trans-unit id="bfb78b95660e8a4437c74324bc0e18e512f5e11a" translate="yes" xml:space="preserve">
          <source>MH is a directory-based mailbox format invented for the MH Message Handling System, a mail user agent. Each message in an MH mailbox resides in its own file. An MH mailbox may contain other MH mailboxes (called &lt;em&gt;folders&lt;/em&gt;) in addition to messages. Folders may be nested indefinitely. MH mailboxes also support &lt;em&gt;sequences&lt;/em&gt;, which are named lists used to logically group messages without moving them to sub-folders. Sequences are defined in a file called &lt;code&gt;.mh_sequences&lt;/code&gt; in each folder.</source>
          <target state="translated">MH是为邮件用户代理MH消息处理系统发明的基于目录的邮箱格式。 MH邮箱中的每个邮件都驻留在其自己的文件中。 MH邮箱除邮件外，还可以包含其他MH邮箱（称为&lt;em&gt;folder&lt;/em&gt;）。文件夹可能无限期嵌套。 MH邮箱还支持&lt;em&gt;序列&lt;/em&gt;，这些&lt;em&gt;序列&lt;/em&gt;是命名列表，用于对消息进行逻辑分组而不将其移动到子文件夹。序列在每个文件夹的名为 &lt;code&gt;.mh_sequences&lt;/code&gt; 的文件中定义。</target>
        </trans-unit>
        <trans-unit id="9c05b8eba754105622f4f66f9c667c959eac038c" translate="yes" xml:space="preserve">
          <source>MH messages do not support marks or flags in the traditional sense, but they do support sequences, which are logical groupings of arbitrary messages. Some mail reading programs (although not the standard &lt;strong&gt;mh&lt;/strong&gt; and &lt;strong&gt;nmh&lt;/strong&gt;) use sequences in much the same way flags are used with other formats, as follows:</source>
          <target state="translated">MH消息不支持传统意义上的标记或标志，但支持序列，这是任意消息的逻辑分组。某些邮件阅读程序（尽管不是标准的&lt;strong&gt;mh&lt;/strong&gt;和&lt;strong&gt;nmh&lt;/strong&gt;）使用序列的方式与将标志与其他格式使用的方式几乎相同，如下所示：</target>
        </trans-unit>
        <trans-unit id="65da9389c1a77e41f94256ff46e83b4558f0d2c0" translate="yes" xml:space="preserve">
          <source>MIME headers all start with the prefix &amp;lsquo;Content-&amp;lsquo;. Each specific header has a certain value, described under the class for that header. Some can also take a list of supplemental parameters, which have a common format. This class serves as a base for all the MIME headers that take parameters.</source>
          <target state="translated">MIME标头均以前缀&amp;ldquo; Content-&amp;rdquo;开头。每个特定的标头都有一个特定的值，该值在该标头的类下描述。有些还可以采用一系列补充参数，这些参数具有通用格式。此类用作所有带有参数的MIME标头的基础。</target>
        </trans-unit>
        <trans-unit id="e780567389e1a67ac39a9aa3a2da100125cc437a" translate="yes" xml:space="preserve">
          <source>MIMEVersionHeader</source>
          <target state="translated">MIMEVersionHeader</target>
        </trans-unit>
        <trans-unit id="ac2781a30c636477d2571979c4dc8ae62e55b4a1" translate="yes" xml:space="preserve">
          <source>MMDF</source>
          <target state="translated">MMDF</target>
        </trans-unit>
        <trans-unit id="66116c893240b072c88886bdaaa797c52d0bc63e" translate="yes" xml:space="preserve">
          <source>MMDF is a single-file mailbox format invented for the Multichannel Memorandum Distribution Facility, a mail transfer agent. Each message is in the same form as an mbox message but is bracketed before and after by lines containing four Control-A (&lt;code&gt;'\001'&lt;/code&gt;) characters. As with the mbox format, the beginning of each message is indicated by a line whose first five characters are &amp;ldquo;From &amp;ldquo;, but additional occurrences of &amp;ldquo;From &amp;rdquo; are not transformed to &amp;ldquo;&amp;gt;From &amp;rdquo; when storing messages because the extra message separator lines prevent mistaking such occurrences for the starts of subsequent messages.</source>
          <target state="translated">MMDF是一种单文件邮箱格式，是为邮件传输代理多通道备忘录分发设施发明的。每条消息的格式与mbox消息的格式相同，但前后均用包含四个Control-A（ &lt;code&gt;'\001'&lt;/code&gt; ）字符的行括起来。与mbox格式一样，每条消息的开头由一行表示，该行的前五个字符为&amp;ldquo;发件人&amp;rdquo;，但是在存储消息时，附加出现的&amp;ldquo;发件人&amp;rdquo;不会转换为&amp;ldquo;&amp;gt;发件人&amp;rdquo;，因为多余的消息分隔符行会阻止将这种情况误认为是后续消息的开始。</target>
        </trans-unit>
        <trans-unit id="5481121da443813ed3ac24e7900056c8bc0a3492" translate="yes" xml:space="preserve">
          <source>MS Windows</source>
          <target state="translated">MS视窗</target>
        </trans-unit>
        <trans-unit id="7603491c0dcf610a151e7e878f3e66902074b1e1" translate="yes" xml:space="preserve">
          <source>MS Windows Specific Services</source>
          <target state="translated">MS Windows特定服务</target>
        </trans-unit>
        <trans-unit id="6f96f1c42882c7292e1fca57e1b53cd688b380b1" translate="yes" xml:space="preserve">
          <source>Mac OS Platform</source>
          <target state="translated">Mac OS平台</target>
        </trans-unit>
        <trans-unit id="7bd9422fbcc45a81bb4afd061a341076dea802f9" translate="yes" xml:space="preserve">
          <source>Mac OS X can return:</source>
          <target state="translated">Mac OS X可以返回。</target>
        </trans-unit>
        <trans-unit id="2ff28b996370a24ecb0833ef2246817e7ffb3e42" translate="yes" xml:space="preserve">
          <source>Machine is not on the network</source>
          <target state="translated">机器不在网络上</target>
        </trans-unit>
        <trans-unit id="bf55ab1cf5927f19f45290600b680716e5e32f16" translate="yes" xml:space="preserve">
          <source>Magenta (purplish red)</source>
          <target state="translated">洋红(紫红色)</target>
        </trans-unit>
        <trans-unit id="32c97d0530e5003fff0bec696fd2fde110dbea71" translate="yes" xml:space="preserve">
          <source>Magic Mock</source>
          <target state="translated">魔法模拟</target>
        </trans-unit>
        <trans-unit id="ba97bef2f5190237815682cb5c24de6d99b343b8" translate="yes" xml:space="preserve">
          <source>Magic methods &lt;em&gt;should&lt;/em&gt; be looked up on the class rather than the instance. Different versions of Python are inconsistent about applying this rule. The supported protocol methods should work with all supported versions of Python.</source>
          <target state="translated">魔术方法&lt;em&gt;应该&lt;/em&gt;在类而不是实例上查找。不同版本的Python在应用此规则方面不一致。受支持的协议方法应与所有受支持的Python版本一起使用。</target>
        </trans-unit>
        <trans-unit id="b04bd0c1375cb0c437085dcd22b5d776344cd11e" translate="yes" xml:space="preserve">
          <source>Magic methods that are supported but not setup by default in &lt;code&gt;MagicMock&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;MagicMock&lt;/code&gt; 支持但默认未设置的魔术方法是：</target>
        </trans-unit>
        <trans-unit id="9a1c07f78b75414a75fc974ca16b8c197d751801" translate="yes" xml:space="preserve">
          <source>MagicMock and magic method support</source>
          <target state="translated">支持MagicMock和魔术方法</target>
        </trans-unit>
        <trans-unit id="528cb2c5c793842fe4f6bbd5e875eb9ace62e872" translate="yes" xml:space="preserve">
          <source>Mailbox objects</source>
          <target state="translated">邮箱对象</target>
        </trans-unit>
        <trans-unit id="86634cd900d76e4a94c7afdeafd4189dde9eb547" translate="yes" xml:space="preserve">
          <source>Mailcap files are used to configure how MIME-aware applications such as mail readers and Web browsers react to files with different MIME types. (The name &amp;ldquo;mailcap&amp;rdquo; is derived from the phrase &amp;ldquo;mail capability&amp;rdquo;.) For example, a mailcap file might contain a line like &lt;code&gt;video/mpeg; xmpeg %s&lt;/code&gt;. Then, if the user encounters an email message or Web document with the MIME type &lt;em&gt;video/mpeg&lt;/em&gt;, &lt;code&gt;%s&lt;/code&gt; will be replaced by a filename (usually one belonging to a temporary file) and the &lt;strong&gt;xmpeg&lt;/strong&gt; program can be automatically started to view the file.</source>
          <target state="translated">Mailcap文件用于配置支持MIME的应用程序（例如邮件阅读器和Web浏览器）如何响应具有不同MIME类型的文件。 （名称&amp;ldquo; mailcap&amp;rdquo;源自短语&amp;ldquo;邮件功能&amp;rdquo;。）例如，mailcap文件可能包含诸如 &lt;code&gt;video/mpeg; xmpeg %s&lt;/code&gt; 类的行。 xmpeg％s。然后，如果用户遇到与MIME类型的电子邮件消息或Web文档&lt;em&gt;视频/ MPEG&lt;/em&gt;， &lt;code&gt;%s&lt;/code&gt; 将通过文件名（通常是一个属于一个临时文件）和替换&lt;strong&gt;XMPEG&lt;/strong&gt;程序可以被自动启动，以查看该文件。</target>
        </trans-unit>
        <trans-unit id="451a9be697ddead11775c85e4cdec2e8e1e7fccf" translate="yes" xml:space="preserve">
          <source>Maildir is a directory-based mailbox format invented for the qmail mail transfer agent and now widely supported by other programs. Messages in a Maildir mailbox are stored in separate files within a common directory structure. This design allows Maildir mailboxes to be accessed and modified by multiple unrelated programs without data corruption, so file locking is unnecessary.</source>
          <target state="translated">Maildir是一种基于目录的邮箱格式,是为qmail邮件传输代理发明的,现在被其他程序广泛支持。Maildir邮箱中的邮件被存储在一个共同的目录结构中的独立文件中。这种设计使得Maildir邮箱可以被多个不相关的程序访问和修改,而不会造成数据损坏,所以文件锁定是不必要的。</target>
        </trans-unit>
        <trans-unit id="b40e5216a6cda56e75561046f7fd7ba0f11c7e63" translate="yes" xml:space="preserve">
          <source>Maildir mailboxes contain three subdirectories, namely: &lt;code&gt;tmp&lt;/code&gt;, &lt;code&gt;new&lt;/code&gt;, and &lt;code&gt;cur&lt;/code&gt;. Messages are created momentarily in the &lt;code&gt;tmp&lt;/code&gt; subdirectory and then moved to the &lt;code&gt;new&lt;/code&gt; subdirectory to finalize delivery. A mail user agent may subsequently move the message to the &lt;code&gt;cur&lt;/code&gt; subdirectory and store information about the state of the message in a special &amp;ldquo;info&amp;rdquo; section appended to its file name.</source>
          <target state="translated">Maildir邮箱包含三个子目录，即： &lt;code&gt;tmp&lt;/code&gt; ， &lt;code&gt;new&lt;/code&gt; 和 &lt;code&gt;cur&lt;/code&gt; 。在 &lt;code&gt;tmp&lt;/code&gt; 子目录中暂时创建消息，然后将其移到 &lt;code&gt;new&lt;/code&gt; 子目录中以完成传递。邮件用户代理可以随后将邮件移动到 &lt;code&gt;cur&lt;/code&gt; 子目录，并将有关邮件状态的信息存储在附加到其文件名的特殊&amp;ldquo;信息&amp;rdquo;部分中。</target>
        </trans-unit>
        <trans-unit id="71f497ebb214b9ce15eb874a873e5a71df6ed9c7" translate="yes" xml:space="preserve">
          <source>Maildir mailboxes do not support (or require) locking, so these methods do nothing.</source>
          <target state="translated">Maildir邮箱不支持(或要求)锁定,所以这些方法没有任何作用。</target>
        </trans-unit>
        <trans-unit id="cc72f9949f161493c90aa33b348af41b8717a0cf" translate="yes" xml:space="preserve">
          <source>MailmanProxy Objects</source>
          <target state="translated">MailmanProxy对象</target>
        </trans-unit>
        <trans-unit id="e4e1dbd94f7dcdd2adca3669f8c832e535d92107" translate="yes" xml:space="preserve">
          <source>Main module explicit relative imports</source>
          <target state="translated">主模块显式相对导入</target>
        </trans-unit>
        <trans-unit id="a63ee5a0ffd4ee7e4f1505d1af22daf8da80898f" translate="yes" xml:space="preserve">
          <source>Main options</source>
          <target state="translated">主要选项</target>
        </trans-unit>
        <trans-unit id="29c2fbf90a10af24cbd4c4648db9d6379273181c" translate="yes" xml:space="preserve">
          <source>Mainly because of backwards compatibility concerns, &lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt; provides also a legacy API with explicit &lt;code&gt;get&lt;/code&gt;/&lt;code&gt;set&lt;/code&gt; methods. While there are valid use cases for the methods outlined below, mapping protocol access is preferred for new projects. The legacy API is at times more advanced, low-level and downright counterintuitive.</source>
          <target state="translated">主要是&lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt;向后兼容性的考虑，configparser还提供了具有显式 &lt;code&gt;get&lt;/code&gt; / &lt;code&gt;set&lt;/code&gt; 方法的旧式API 。尽管存在以下概述的方法的有效用例，但对于新项目，首选映射协议访问。遗留API有时更高级，底层且完全违反直觉。</target>
        </trans-unit>
        <trans-unit id="4823e55cd98dad58bd2be122640b91ad2d5ed814" translate="yes" xml:space="preserve">
          <source>Major cross-platform (Windows, Mac OS X, Unix-like) GUI toolkits are available for Python:</source>
          <target state="translated">主要的跨平台 (Windows,Mac OS X,Unix-like)GUI 工具包都可以用于 Python。</target>
        </trans-unit>
        <trans-unit id="79d238209c2cada151fcd2a72d589d9730730983" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\W&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\B&lt;/code&gt; and case-insensitive matching dependent on the current locale. This flag can be used only with bytes patterns. The use of this flag is discouraged as the locale mechanism is very unreliable, it only handles one &amp;ldquo;culture&amp;rdquo; at a time, and it only works with 8-bit locales. Unicode matching is already enabled by default in Python 3 for Unicode (str) patterns, and it is able to handle different locales/languages. Corresponds to the inline flag &lt;code&gt;(?L)&lt;/code&gt;.</source>
          <target state="translated">使 &lt;code&gt;\w&lt;/code&gt; ， &lt;code&gt;\W&lt;/code&gt; ， &lt;code&gt;\b&lt;/code&gt; ， &lt;code&gt;\B&lt;/code&gt; 和不区分大小写的匹配取决于当前的语言环境。该标志只能与字节模式一起使用。不鼓励使用此标志，因为语言环境机制非常不可靠，它一次仅处理一种&amp;ldquo;区域性&amp;rdquo;，并且仅适用于8位语言环境。默认情况下，Python 3中已为Unicode（str）模式启用了Unicode匹配，并且能够处理不同的语言环境/语言。对应于内联标志 &lt;code&gt;(?L)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4094168c6f13dde8d4a1402e6d2e892f00c22016" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\W&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\B&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\D&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt; and &lt;code&gt;\S&lt;/code&gt; perform ASCII-only matching instead of full Unicode matching. This is only meaningful for Unicode patterns, and is ignored for byte patterns. Corresponds to the inline flag &lt;code&gt;(?a)&lt;/code&gt;.</source>
          <target state="translated">使 &lt;code&gt;\w&lt;/code&gt; ， &lt;code&gt;\W&lt;/code&gt; ， &lt;code&gt;\b&lt;/code&gt; ， &lt;code&gt;\B&lt;/code&gt; ， &lt;code&gt;\d&lt;/code&gt; ， &lt;code&gt;\D&lt;/code&gt; ， &lt;code&gt;\s&lt;/code&gt; 和 &lt;code&gt;\S&lt;/code&gt; 执行仅ASCII匹配，而不是完全Unicode匹配。这仅对Unicode模式有意义，而对于字节模式则忽略。对应于内联标志 &lt;code&gt;(?a)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2859945e3ed955c0801940559aa8f2fa3e430461" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;ControlCondition&lt;/code&gt; table for this control.</source>
          <target state="translated">在此控件的 &lt;code&gt;ControlCondition&lt;/code&gt; 表中输入一个条目。</target>
        </trans-unit>
        <trans-unit id="e78f1ddb4700c5c26bc5d606246d4a1ea1478dca" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;ControlEvent&lt;/code&gt; table for this control.</source>
          <target state="translated">在此控件的 &lt;code&gt;ControlEvent&lt;/code&gt; 表中输入一个条目。</target>
        </trans-unit>
        <trans-unit id="22e44c261988ea1b3403fdf3cfd43ae89d29b9c4" translate="yes" xml:space="preserve">
          <source>Make an entry into the &lt;code&gt;EventMapping&lt;/code&gt; table for this control.</source>
          <target state="translated">在此控件的 &lt;code&gt;EventMapping&lt;/code&gt; 表中输入一个条目。</target>
        </trans-unit>
        <trans-unit id="4968d67864606429422562e4bfe072750713dd88" translate="yes" xml:space="preserve">
          <source>Make an iterator returning elements from the iterable and saving a copy of each. When the iterable is exhausted, return elements from the saved copy. Repeats indefinitely. Roughly equivalent to:</source>
          <target state="translated">制作一个迭代器,从可迭代的元素中返回元素,并为每个元素保存一份副本。当迭代器用完时,从保存的副本中返回元素。无限次重复。大致相当于。</target>
        </trans-unit>
        <trans-unit id="a9ae1a5a9224338d48d85639bd5fbf1307db3d17" translate="yes" xml:space="preserve">
          <source>Make an iterator that aggregates elements from each of the iterables.</source>
          <target state="translated">做一个迭代器,将每个可迭代的元素聚合起来。</target>
        </trans-unit>
        <trans-unit id="4ecc79480f8b7a91f54bcaea359c899bb7d5a944" translate="yes" xml:space="preserve">
          <source>Make an iterator that aggregates elements from each of the iterables. If the iterables are of uneven length, missing values are filled-in with &lt;em&gt;fillvalue&lt;/em&gt;. Iteration continues until the longest iterable is exhausted. Roughly equivalent to:</source>
          <target state="translated">创建一个迭代器，以聚合每个可迭代对象中的元素。如果可迭代项的长度不均匀，则用&lt;em&gt;fillvalue&lt;/em&gt;填充缺失值。迭代一直持续到最长的可迭代耗尽为止。大致相当于：</target>
        </trans-unit>
        <trans-unit id="f6d54f93918e62244f26c512e7a161b6bca8eb5a" translate="yes" xml:space="preserve">
          <source>Make an iterator that computes the function using arguments obtained from the iterable. Used instead of &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; when argument parameters are already grouped in tuples from a single iterable (the data has been &amp;ldquo;pre-zipped&amp;rdquo;). The difference between &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#itertools.starmap&quot;&gt;&lt;code&gt;starmap()&lt;/code&gt;&lt;/a&gt; parallels the distinction between &lt;code&gt;function(a,b)&lt;/code&gt; and &lt;code&gt;function(*c)&lt;/code&gt;. Roughly equivalent to:</source>
          <target state="translated">创建一个迭代器，该迭代器使用从迭代器获得的参数来计算函数。当参数参数已经从单个可迭代项的元组中分组时（数据已&amp;ldquo;预压缩&amp;rdquo;），而不是&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;）。之间的差值&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#itertools.starmap&quot;&gt; &lt;code&gt;starmap()&lt;/code&gt; &lt;/a&gt;平行的区分 &lt;code&gt;function(a,b)&lt;/code&gt; 和 &lt;code&gt;function(*c)&lt;/code&gt; 。大致相当于：</target>
        </trans-unit>
        <trans-unit id="8c96615ae41b720b59370f4efd4451ca2077afbf" translate="yes" xml:space="preserve">
          <source>Make an iterator that drops elements from the iterable as long as the predicate is true; afterwards, returns every element. Note, the iterator does not produce &lt;em&gt;any&lt;/em&gt; output until the predicate first becomes false, so it may have a lengthy start-up time. Roughly equivalent to:</source>
          <target state="translated">只要谓词为真，就创建一个迭代器，从迭代器中删除元素。之后，返回每个元素。注意，在谓词首先变为假之前，迭代器不会产生&lt;em&gt;任何&lt;/em&gt;输出，因此它可能需要很长的启动时间。大致相当于：</target>
        </trans-unit>
        <trans-unit id="892281d3f769ea7deb689777f71449bced9b383a" translate="yes" xml:space="preserve">
          <source>Make an iterator that filters elements from &lt;em&gt;data&lt;/em&gt; returning only those that have a corresponding element in &lt;em&gt;selectors&lt;/em&gt; that evaluates to &lt;code&gt;True&lt;/code&gt;. Stops when either the &lt;em&gt;data&lt;/em&gt; or &lt;em&gt;selectors&lt;/em&gt; iterables has been exhausted. Roughly equivalent to:</source>
          <target state="translated">创建一个迭代器，该迭代器从&lt;em&gt;数据&lt;/em&gt;中筛选出仅返回&lt;em&gt;选择器&lt;/em&gt;中具有相应元素且返回值为 &lt;code&gt;True&lt;/code&gt; 的元素。当&lt;em&gt;数据&lt;/em&gt;或&lt;em&gt;选择器&lt;/em&gt;可迭代项用尽时停止。大致相当于：</target>
        </trans-unit>
        <trans-unit id="ffb72f4d4622e4e02475b473a321a110e46112f1" translate="yes" xml:space="preserve">
          <source>Make an iterator that filters elements from iterable returning only those for which the predicate is &lt;code&gt;False&lt;/code&gt;. If &lt;em&gt;predicate&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, return the items that are false. Roughly equivalent to:</source>
          <target state="translated">创建一个迭代器，以从可迭代的元素中筛选出仅返回谓词为 &lt;code&gt;False&lt;/code&gt; 的元素。如果&lt;em&gt;谓词&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，则返回错误的项目。大致相当于：</target>
        </trans-unit>
        <trans-unit id="a957feb62063c86973f86240f6f0031887c5e9cb" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns &lt;em&gt;object&lt;/em&gt; over and over again. Runs indefinitely unless the &lt;em&gt;times&lt;/em&gt; argument is specified. Used as argument to &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; for invariant parameters to the called function. Also used with &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; to create an invariant part of a tuple record.</source>
          <target state="translated">创建一个迭代器，该迭代器一次又一次返回&lt;em&gt;对象&lt;/em&gt;。除非指定了&lt;em&gt;times&lt;/em&gt;参数，否则将无限期运行。用作&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;的参数，以获取被调用函数的不变参数。还与&lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt;一起使用以创建元组记录的不变部分。</target>
        </trans-unit>
        <trans-unit id="5b008cc279ea80916bda0cbd332d0aa7ba0556ec" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns accumulated sums, or accumulated results of other binary functions (specified via the optional &lt;em&gt;func&lt;/em&gt; argument).</source>
          <target state="translated">使迭代器返回累加的总和或其他二进制函数的累加结果（通过可选的&lt;em&gt;func&lt;/em&gt;参数指定）。</target>
        </trans-unit>
        <trans-unit id="9f714338584f0b2134e7468a019823beae5537be" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns consecutive keys and groups from the &lt;em&gt;iterable&lt;/em&gt;. The &lt;em&gt;key&lt;/em&gt; is a function computing a key value for each element. If not specified or is &lt;code&gt;None&lt;/code&gt;, &lt;em&gt;key&lt;/em&gt; defaults to an identity function and returns the element unchanged. Generally, the iterable needs to already be sorted on the same key function.</source>
          <target state="translated">使一个迭代器从&lt;em&gt;iterable&lt;/em&gt;返回连续的键和组。的&lt;em&gt;关键&lt;/em&gt;是计算每个元素的密钥值的函数。如果未指定或为 &lt;code&gt;None&lt;/code&gt; ，则&lt;em&gt;键&lt;/em&gt;默认为标识函数，并返回不变的元素。通常，可迭代项需要已经在相同的键功能上进行了排序。</target>
        </trans-unit>
        <trans-unit id="59c6932f4ea38a9adb405d00c88d62c4ce199417" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns elements from the first iterable until it is exhausted, then proceeds to the next iterable, until all of the iterables are exhausted. Used for treating consecutive sequences as a single sequence. Roughly equivalent to:</source>
          <target state="translated">制作一个迭代器,从第一个迭代器中返回元素,直到用完为止,然后继续下一个迭代器,直到所有的迭代器都用完为止。用于将连续的序列作为一个单一序列来处理。大致等同于。</target>
        </trans-unit>
        <trans-unit id="db17bd2fa6e28e684f31b9a14e54b77456d66135" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns elements from the iterable as long as the predicate is true. Roughly equivalent to:</source>
          <target state="translated">做一个迭代器,只要谓词为真,就从可迭代的元素中返回。大致相当于:</target>
        </trans-unit>
        <trans-unit id="0843933413e67d1e5cac3980b5f29ff765b66dc1" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns evenly spaced values starting with number &lt;em&gt;start&lt;/em&gt;. Often used as an argument to &lt;a href=&quot;functions#map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; to generate consecutive data points. Also, used with &lt;a href=&quot;functions#zip&quot;&gt;&lt;code&gt;zip()&lt;/code&gt;&lt;/a&gt; to add sequence numbers. Roughly equivalent to:</source>
          <target state="translated">制作一个迭代器，该迭代器返回以number &lt;em&gt;start开头的&lt;/em&gt;均匀间隔的值。通常用作&lt;a href=&quot;functions#map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt;的参数以生成连续的数据点。另外，与&lt;a href=&quot;functions#zip&quot;&gt; &lt;code&gt;zip()&lt;/code&gt; &lt;/a&gt;一起使用以添加序列号。大致相当于：</target>
        </trans-unit>
        <trans-unit id="4994f0ea994acf88c67fba065692eb6b5778a17e" translate="yes" xml:space="preserve">
          <source>Make an iterator that returns selected elements from the iterable. If &lt;em&gt;start&lt;/em&gt; is non-zero, then elements from the iterable are skipped until start is reached. Afterward, elements are returned consecutively unless &lt;em&gt;step&lt;/em&gt; is set higher than one which results in items being skipped. If &lt;em&gt;stop&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then iteration continues until the iterator is exhausted, if at all; otherwise, it stops at the specified position. Unlike regular slicing, &lt;a href=&quot;#itertools.islice&quot;&gt;&lt;code&gt;islice()&lt;/code&gt;&lt;/a&gt; does not support negative values for &lt;em&gt;start&lt;/em&gt;, &lt;em&gt;stop&lt;/em&gt;, or &lt;em&gt;step&lt;/em&gt;. Can be used to extract related fields from data where the internal structure has been flattened (for example, a multi-line report may list a name field on every third line). Roughly equivalent to:</source>
          <target state="translated">使一个迭代器返回可迭代对象中的选定元素。如果&lt;em&gt;start&lt;/em&gt;不为零，则跳过iterable中的元素，直到到达start为止。此后，除非将&lt;em&gt;步骤&lt;/em&gt;设置为高于一个&lt;em&gt;步骤&lt;/em&gt;（导致导致项目被跳过），否则元素将连续返回。如果&lt;em&gt;stop&lt;/em&gt;为 &lt;code&gt;None&lt;/code&gt; ，那么迭代将一直持续到迭代器耗尽为止。否则，它将停在指定位置。与常规切片不同，&lt;a href=&quot;#itertools.islice&quot;&gt; &lt;code&gt;islice()&lt;/code&gt; &lt;/a&gt;不支持&lt;em&gt;start&lt;/em&gt;，&lt;em&gt;stop&lt;/em&gt;或&lt;em&gt;step的&lt;/em&gt;负值。&lt;em&gt;&lt;/em&gt;。可用于从内部结构已经展平的数据中提取相关字段（例如，多行报告可能会在每三行列出一个名称字段）。大致相当于：</target>
        </trans-unit>
        <trans-unit id="617ef530212f8cbf0f6f805993299c48051459de" translate="yes" xml:space="preserve">
          <source>Make sure &lt;em&gt;nframes&lt;/em&gt; is correct, and close the file if it was opened by &lt;a href=&quot;#module-wave&quot;&gt;&lt;code&gt;wave&lt;/code&gt;&lt;/a&gt;. This method is called upon object collection. It will raise an exception if the output stream is not seekable and &lt;em&gt;nframes&lt;/em&gt; does not match the number of frames actually written.</source>
          <target state="translated">确保&lt;em&gt;nframe&lt;/em&gt;是正确的，如果用&lt;a href=&quot;#module-wave&quot;&gt; &lt;code&gt;wave&lt;/code&gt; &lt;/a&gt;打开了文件，则将其关闭。在对象收集时调用此方法。如果输出流不可搜索并且&lt;em&gt;nframe&lt;/em&gt;与实际写入的帧数不匹配，它将引发异常。</target>
        </trans-unit>
        <trans-unit id="c69a4de6caa709ef6bb8a12e9677e657aca1ef6b" translate="yes" xml:space="preserve">
          <source>Make sure all possible values are tested including invalid ones. This makes sure that not only all valid values are acceptable but also that improper values are handled correctly.</source>
          <target state="translated">确保所有可能的值都被测试,包括无效的值。这确保不仅所有有效值都是可接受的,而且不适当的值也能得到正确的处理。</target>
        </trans-unit>
        <trans-unit id="a627b5bf841e1ea88d28165d37b866a0870f3704" translate="yes" xml:space="preserve">
          <source>Make sure that any files your script needs to read or write are readable or writable, respectively, by &amp;ldquo;others&amp;rdquo; &amp;mdash; their mode should be &lt;code&gt;0o644&lt;/code&gt; for readable and &lt;code&gt;0o666&lt;/code&gt; for writable. This is because, for security reasons, the HTTP server executes your script as user &amp;ldquo;nobody&amp;rdquo;, without any special privileges. It can only read (write, execute) files that everybody can read (write, execute). The current directory at execution time is also different (it is usually the server&amp;rsquo;s cgi-bin directory) and the set of environment variables is also different from what you get when you log in. In particular, don&amp;rsquo;t count on the shell&amp;rsquo;s search path for executables (&lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt;) or the Python module search path (&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;) to be set to anything interesting.</source>
          <target state="translated">确保您的脚本需要读取或写入的任何文件分别由&amp;ldquo;其他&amp;rdquo;可读或可写&amp;ndash;其模式应为 &lt;code&gt;0o644&lt;/code&gt; （可读）和 &lt;code&gt;0o666&lt;/code&gt; （可写）。这是因为出于安全原因，HTTP服务器以&amp;ldquo; nobody&amp;rdquo;用户的身份执行脚本，而没有任何特殊权限。它只能读取（写入，执行）每个人都可以读取（写入，执行）的文件。执行时的当前目录也有所不同（通常是服务器的cgi-bin目录），并且环境变量集也与您登录时所获得的不同。特别是，不要指望shell的搜索路径将可执行文件（ &lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt; ）或Python模块搜索路径（&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;）设置为任何有趣的东西。</target>
        </trans-unit>
        <trans-unit id="37b6b7519c1bdb855d4363f0027cc454504fbe47" translate="yes" xml:space="preserve">
          <source>Make sure that any files your script needs to read or write are readable or writable, respectively, by &amp;ldquo;others&amp;rdquo; &amp;mdash; their mode should be &lt;code&gt;0o644&lt;/code&gt; for readable and &lt;code&gt;0o666&lt;/code&gt; for writable. This is because, for security reasons, the HTTP server executes your script as user &amp;ldquo;nobody&amp;rdquo;, without any special privileges. It can only read (write, execute) files that everybody can read (write, execute). The current directory at execution time is also different (it is usually the server&amp;rsquo;s cgi-bin directory) and the set of environment variables is also different from what you get when you log in. In particular, don&amp;rsquo;t count on the shell&amp;rsquo;s search path for executables (&lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt;) or the Python module search path (&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/a&gt;) to be set to anything interesting.</source>
          <target state="translated">确保脚本&amp;ldquo;其他&amp;rdquo;分别需要可读或可写的文件-它们的模式应为 &lt;code&gt;0o644&lt;/code&gt; （可读）和 &lt;code&gt;0o666&lt;/code&gt; （可写）。这是因为出于安全原因，HTTP服务器以&amp;ldquo; nobody&amp;rdquo;用户的身份执行脚本，而没有任何特殊特权。它只能读取（写入，执行）每个人都可以读取（写入，执行）的文件。执行时的当前目录也不同（通常是服务器的cgi-bin目录），并且环境变量集也与登录时获得的不同。特别是，不要指望shell的搜索路径将可执行文件（ &lt;code id=&quot;index-2&quot;&gt;PATH&lt;/code&gt; ）或Python模块搜索路径（&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONPATH&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONPATH&lt;/code&gt; &lt;/a&gt;）设置为任何有趣的东西。</target>
        </trans-unit>
        <trans-unit id="5de2f6daf567300ef46271ec132a2987bda55e91" translate="yes" xml:space="preserve">
          <source>Make sure that the main module can be safely imported by a new Python interpreter without causing unintended side effects (such a starting a new process).</source>
          <target state="translated">确保主模块可以被一个新的 Python 解释器安全地导入,而不会引起意外的副作用 (比如启动一个新的进程)。</target>
        </trans-unit>
        <trans-unit id="9731ad27072d870a7da69ae18e9bb36d5c3dbee3" translate="yes" xml:space="preserve">
          <source>Make sure that your script is readable and executable by &amp;ldquo;others&amp;rdquo;; the Unix file mode should be &lt;code&gt;0o755&lt;/code&gt; octal (use &lt;code&gt;chmod 0755 filename&lt;/code&gt;). Make sure that the first line of the script contains &lt;code&gt;#!&lt;/code&gt; starting in column 1 followed by the pathname of the Python interpreter, for instance:</source>
          <target state="translated">确保您的脚本可以被&amp;ldquo;其他&amp;rdquo;读取并执行；Unix文件模式应为八进制 &lt;code&gt;0o755&lt;/code&gt; （使用 &lt;code&gt;chmod 0755 filename&lt;/code&gt; ）。确保脚本的第一行包含 &lt;code&gt;#!&lt;/code&gt; 从第1列开始，后跟Python解释器的路径名，例如：</target>
        </trans-unit>
        <trans-unit id="b965c16ca041ae1288bd1a67be9784d3d10d7ad4" translate="yes" xml:space="preserve">
          <source>Make sure the Python interpreter exists and is executable by &amp;ldquo;others&amp;rdquo;.</source>
          <target state="translated">确保Python解释器存在并且可以被&amp;ldquo;其他&amp;rdquo;执行。</target>
        </trans-unit>
        <trans-unit id="cbab57598b799819458d4a0023b9d15232b16ecd" translate="yes" xml:space="preserve">
          <source>Make sure to clean up after your tests (such as close and remove all temporary files).</source>
          <target state="translated">确保在测试后进行清理(如关闭和删除所有临时文件)。</target>
        </trans-unit>
        <trans-unit id="c886a4dcc067f50183f6d9e536df375c4dda88c4" translate="yes" xml:space="preserve">
          <source>Make sure you keep references to &lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt;&lt;code&gt;CFUNCTYPE()&lt;/code&gt;&lt;/a&gt; objects as long as they are used from C code. &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t, and if you don&amp;rsquo;t, they may be garbage collected, crashing your program when a callback is made.</source>
          <target state="translated">确保保留对&lt;a href=&quot;#ctypes.CFUNCTYPE&quot;&gt; &lt;code&gt;CFUNCTYPE()&lt;/code&gt; &lt;/a&gt;对象的引用，只要它们是从C代码中使用的即可。&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;不会，如果您不这样做，则可能会被垃圾回收，从而使您的程序在进行回调时崩溃。</target>
        </trans-unit>
        <trans-unit id="6d98adddef5c8372a92668121d843f7b67ce4928" translate="yes" xml:space="preserve">
          <source>Make the &lt;code&gt;'.'&lt;/code&gt; special character match any character at all, including a newline; without this flag, &lt;code&gt;'.'&lt;/code&gt; will match anything &lt;em&gt;except&lt;/em&gt; a newline. Corresponds to the inline flag &lt;code&gt;(?s)&lt;/code&gt;.</source>
          <target state="translated">标记为 &lt;code&gt;'.'&lt;/code&gt; 特殊字符完全可以与任何字符匹配，包括换行符；没有此标志， &lt;code&gt;'.'&lt;/code&gt; 将匹配换行符&lt;em&gt;以外&lt;/em&gt;的任何内容。对应于内联标志 &lt;code&gt;(?s)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1821d7bf0229ac06606d233650d7f9a8ac16a46b" translate="yes" xml:space="preserve">
          <source>Make the path absolute, resolving any symlinks. A new path object is returned:</source>
          <target state="translated">将路径设为绝对路径,解析所有的符号链接。返回一个新的路径对象。</target>
        </trans-unit>
        <trans-unit id="bb60557d6278b81f58c0e2a368efe17839683f2c" translate="yes" xml:space="preserve">
          <source>Make the turtle invisible. It&amp;rsquo;s a good idea to do this while you&amp;rsquo;re in the middle of doing some complex drawing, because hiding the turtle speeds up the drawing observably.</source>
          <target state="translated">使乌龟不可见。在您进行一些复杂绘图时，这样做是个好主意，因为隐藏海龟可以明显地加快绘图速度。</target>
        </trans-unit>
        <trans-unit id="8425653f95186dae7b16793ba9c5e6c775aa6fa7" translate="yes" xml:space="preserve">
          <source>Make the turtle visible.</source>
          <target state="translated">让乌龟可见。</target>
        </trans-unit>
        <trans-unit id="2b104edc6adc907e507b80dfe4df5940691e17d0" translate="yes" xml:space="preserve">
          <source>Make this feature the current feature of &lt;a href=&quot;#module-msilib&quot;&gt;&lt;code&gt;msilib&lt;/code&gt;&lt;/a&gt;. New components are automatically added to the default feature, unless a feature is explicitly specified.</source>
          <target state="translated">使此功能成为&lt;a href=&quot;#module-msilib&quot;&gt; &lt;code&gt;msilib&lt;/code&gt; &lt;/a&gt;的当前功能。除非明确指定功能，否则新组件会自动添加到默认功能。</target>
        </trans-unit>
        <trans-unit id="817dde39e08bc70031f6cc0c99bde032f0727edc" translate="yes" xml:space="preserve">
          <source>Make this path a symbolic link to &lt;em&gt;target&lt;/em&gt;. Under Windows, &lt;em&gt;target_is_directory&lt;/em&gt; must be true (default &lt;code&gt;False&lt;/code&gt;) if the link&amp;rsquo;s target is a directory. Under POSIX, &lt;em&gt;target_is_directory&lt;/em&gt;&amp;rsquo;s value is ignored.</source>
          <target state="translated">使此路径成为&lt;em&gt;target&lt;/em&gt;的符号链接。在Windows下，如果链接的目标是目录，则&lt;em&gt;target_is_directory&lt;/em&gt;必须为true（默认为 &lt;code&gt;False&lt;/code&gt; ）。在POSIX下，&lt;em&gt;target_is_directory&lt;/em&gt;的值将被忽略。</target>
        </trans-unit>
        <trans-unit id="0589ca0705dbb10c03f08251a6b8ad92b9066e42" translate="yes" xml:space="preserve">
          <source>Makes a normal distribution instance with &lt;em&gt;mu&lt;/em&gt; and &lt;em&gt;sigma&lt;/em&gt; parameters estimated from the &lt;em&gt;data&lt;/em&gt; using &lt;a href=&quot;#statistics.fmean&quot;&gt;&lt;code&gt;fmean()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#statistics.stdev&quot;&gt;&lt;code&gt;stdev()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使得正态分布实例与&lt;em&gt;亩&lt;/em&gt;和&lt;em&gt;西格玛&lt;/em&gt;从所估计的参数&lt;em&gt;数据&lt;/em&gt;使用&lt;a href=&quot;#statistics.fmean&quot;&gt; &lt;code&gt;fmean()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#statistics.stdev&quot;&gt; &lt;code&gt;stdev()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74478c83d77f7f9d3b16b8e25a30c78af412de6d" translate="yes" xml:space="preserve">
          <source>Making a Phonebook</source>
          <target state="translated">制作电话簿</target>
        </trans-unit>
        <trans-unit id="5c927175b3add69e1fe7dc7bfe7e29837fc73c90" translate="yes" xml:space="preserve">
          <source>Making a Windows executable</source>
          <target state="translated">制作Windows可执行文件</target>
        </trans-unit>
        <trans-unit id="855506ce6753b0d9a5b09ffd99dfc10fa3696ea0" translate="yes" xml:space="preserve">
          <source>Manager Widgets</source>
          <target state="translated">经理小部件</target>
        </trans-unit>
        <trans-unit id="2a361c4c32a8b1dcdd56014985b930dd04f772a1" translate="yes" xml:space="preserve">
          <source>Manager processes will be shutdown as soon as they are garbage collected or their parent process exits. The manager classes are defined in the &lt;a href=&quot;#module-multiprocessing.managers&quot;&gt;&lt;code&gt;multiprocessing.managers&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">一旦垃圾回收或退出父进程，管理器进程将立即关闭。管理器类在&lt;a href=&quot;#module-multiprocessing.managers&quot;&gt; &lt;code&gt;multiprocessing.managers&lt;/code&gt; &lt;/a&gt;模块中定义：</target>
        </trans-unit>
        <trans-unit id="4f7b3cfa4fbefb6a7d1086c0a97bc4ea23175a55" translate="yes" xml:space="preserve">
          <source>Managers</source>
          <target state="translated">Managers</target>
        </trans-unit>
        <trans-unit id="146be58ae4c0ee3d8c972415be0e7c22bae315f6" translate="yes" xml:space="preserve">
          <source>Managers provide a way to create data which can be shared between different processes, including sharing over a network between processes running on different machines. A manager object controls a server process which manages &lt;em&gt;shared objects&lt;/em&gt;. Other processes can access the shared objects by using proxies.</source>
          <target state="translated">管理器提供了一种创建可以在不同进程之间共享的数据的方法，包括通过网络在不同机器上运行的进程之间共享。管理器对象控制管理&lt;em&gt;共享对象&lt;/em&gt;的服务器进程。其他进程可以使用代理访问共享对象。</target>
        </trans-unit>
        <trans-unit id="9da4dac0b16742ede0cd08c5d71857dc8b235645" translate="yes" xml:space="preserve">
          <source>Manual Context Management</source>
          <target state="translated">手动上下文管理</target>
        </trans-unit>
        <trans-unit id="5be972ee604abf1abcdd9643e605d5e6677470aa" translate="yes" xml:space="preserve">
          <source>Manual settings</source>
          <target state="translated">手动设置</target>
        </trans-unit>
        <trans-unit id="343daa0eb5e43f021e62c3c8801d5b10743a76d4" translate="yes" xml:space="preserve">
          <source>Many constants of these forms, documented in the Linux documentation, are also defined in the socket module.</source>
          <target state="translated">这些形式的许多常量,在Linux文档中都有记载,在socket模块中也有定义。</target>
        </trans-unit>
        <trans-unit id="c9a81759bd6fd007d62861d3fabb2bd9fbcb88bd" translate="yes" xml:space="preserve">
          <source>Many constants of these forms, documented in the Unix documentation on sockets and/or the IP protocol, are also defined in the socket module. They are generally used in arguments to the &lt;code&gt;setsockopt()&lt;/code&gt; and &lt;code&gt;getsockopt()&lt;/code&gt; methods of socket objects. In most cases, only those symbols that are defined in the Unix header files are defined; for a few symbols, default values are provided.</source>
          <target state="translated">在套接字模块和/或IP协议的Unix文档中记录的这些形式的许多常量也在套接字模块中定义。它们通常用于套接字对象的 &lt;code&gt;setsockopt()&lt;/code&gt; 和 &lt;code&gt;getsockopt()&lt;/code&gt; 方法的参数中。在大多数情况下，只定义那些在Unix头文件中定义的符号；对于一些符号，提供了默认值。</target>
        </trans-unit>
        <trans-unit id="510dd560760442cac504a2b167911b6a0ab8aa23" translate="yes" xml:space="preserve">
          <source>Many non-threadsafe asyncio APIs (such as &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_at&quot;&gt;&lt;code&gt;loop.call_at()&lt;/code&gt;&lt;/a&gt; methods) raise an exception if they are called from a wrong thread.</source>
          <target state="translated">如果从错误的线程调用了许多非线程安全的异步API（例如&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asyncio-eventloop#asyncio.loop.call_at&quot;&gt; &lt;code&gt;loop.call_at()&lt;/code&gt; &lt;/a&gt;方法），则会引发异常。</target>
        </trans-unit>
        <trans-unit id="815297a48147fd3991e217e62ae1a5520c0cbce5" translate="yes" xml:space="preserve">
          <source>Many of the above classes also have a &lt;code&gt;Unique&lt;/code&gt; variant (for example, &lt;code&gt;UniqueUnstructuredHeader&lt;/code&gt;). The only difference is that in the &lt;code&gt;Unique&lt;/code&gt; variant, &lt;a href=&quot;#email.headerregistry.BaseHeader.max_count&quot;&gt;&lt;code&gt;max_count&lt;/code&gt;&lt;/a&gt; is set to 1.</source>
          <target state="translated">上面的许多类都有一个 &lt;code&gt;Unique&lt;/code&gt; 变体（例如， &lt;code&gt;UniqueUnstructuredHeader&lt;/code&gt; ）。唯一的区别是，在&amp;ldquo; &lt;code&gt;Unique&lt;/code&gt; 变量中，&lt;a href=&quot;#email.headerregistry.BaseHeader.max_count&quot;&gt; &lt;code&gt;max_count&lt;/code&gt; &lt;/a&gt;设置为1。</target>
        </trans-unit>
        <trans-unit id="2163dea9d3d8731a332014be1542cdabce604244" translate="yes" xml:space="preserve">
          <source>Many of the character sets support the same languages. They vary in individual characters (e.g. whether the EURO SIGN is supported or not), and in the assignment of characters to code positions. For the European languages in particular, the following variants typically exist:</source>
          <target state="translated">许多字符集支持相同的语言。它们在单个字符(例如,是否支持EURO SIGN)以及在将字符分配到代码位置方面有所不同。特别是对于欧洲语言,通常存在以下变体:</target>
        </trans-unit>
        <trans-unit id="30ccfa60e5e5281ef43935b1343f2bf376660936" translate="yes" xml:space="preserve">
          <source>Many of the following methods take an optional keyword-only argument &lt;em&gt;file&lt;/em&gt;. When the &lt;em&gt;file&lt;/em&gt; argument is supplied, it must be either a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary writing, or the name of an on-disk file to be written to. The method will then write any data returned by the server (except for the response line and the terminating dot) to the file; any list of lines, tuples or objects that the method normally returns will be empty.</source>
          <target state="translated">以下许多方法采用可选的仅关键字参数&lt;em&gt;文件&lt;/em&gt;。当&lt;em&gt;文件&lt;/em&gt;被提供的参数，它必须是一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;打开的二进制写，或将被写入到磁盘上的文件的名称。然后，该方法会将服务器返回的所有数据（响应行和终止点除外）写入文件；该方法通常返回的任何行，元组或对象列表将为空。</target>
        </trans-unit>
        <trans-unit id="d204b199705e1c56c7625c18f39cb3eba8456ca2" translate="yes" xml:space="preserve">
          <source>Many of the following methods take an optional keyword-only argument &lt;em&gt;file&lt;/em&gt;. When the &lt;em&gt;file&lt;/em&gt; argument is supplied, it must be either a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt; opened for binary writing, or the name of an on-disk file to be written to. The method will then write any data returned by the server (except for the response line and the terminating dot) to the file; any list of lines, tuples or objects that the method normally returns will be empty.</source>
          <target state="translated">以下许多方法采用可选的仅关键字参数&lt;em&gt;文件&lt;/em&gt;。当&lt;em&gt;文件&lt;/em&gt;被提供的参数，它必须是一个&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;打开的二进制写，或将被写入到磁盘上的文件的名称。然后，该方法会将服务器返回的所有数据（响应行和终止点除外）写入文件；该方法通常返回的任何行，元组或对象列表将为空。</target>
        </trans-unit>
        <trans-unit id="ffa4bc0d6f566c5f847060ae6ead4557c906984b" translate="yes" xml:space="preserve">
          <source>Many of the not-very-useful (private to &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt; rather than the thing being mocked) underscore and double underscore prefixed attributes have been filtered from the result of calling &lt;a href=&quot;functions#dir&quot;&gt;&lt;code&gt;dir()&lt;/code&gt;&lt;/a&gt; on a &lt;a href=&quot;#unittest.mock.Mock&quot;&gt;&lt;code&gt;Mock&lt;/code&gt;&lt;/a&gt;. If you dislike this behaviour you can switch it off by setting the module level switch &lt;a href=&quot;#unittest.mock.FILTER_DIR&quot;&gt;&lt;code&gt;FILTER_DIR&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">许多不是非常有用的（私有的&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;，而不是被嘲笑的东西），下划线和双下划线前缀属性已经从调用的结果过滤&lt;a href=&quot;functions#dir&quot;&gt; &lt;code&gt;dir()&lt;/code&gt; &lt;/a&gt;上的&lt;a href=&quot;#unittest.mock.Mock&quot;&gt; &lt;code&gt;Mock&lt;/code&gt; &lt;/a&gt;。如果您不喜欢这种行为，可以通过设置模块级别开关&lt;a href=&quot;#unittest.mock.FILTER_DIR&quot;&gt; &lt;code&gt;FILTER_DIR&lt;/code&gt; &lt;/a&gt;将其关闭：</target>
        </trans-unit>
        <trans-unit id="d9a47225407eea7973acc57a86154fda62e2e8ed" translate="yes" xml:space="preserve">
          <source>Many operations have an &amp;ldquo;in-place&amp;rdquo; version. Listed below are functions providing a more primitive access to in-place operators than the usual syntax does; for example, the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;&lt;code&gt;x += y&lt;/code&gt; is equivalent to &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt;. Another way to put it is to say that &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; is equivalent to the compound statement &lt;code&gt;z = x; z += y&lt;/code&gt;.</source>
          <target state="translated">许多操作都有&amp;ldquo;就地&amp;rdquo;版本。下面列出的函数比通常的语法提供对原始操作符的更多原始访问；例如，&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-statement&quot;&gt;语句&lt;/a&gt; &lt;code&gt;x += y&lt;/code&gt; 等效于 &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt; 。另一种表达方式是说 &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; 等效于复合语句 &lt;code&gt;z = x; z += y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d7987eba2d592dbc971e76e99b6ece135aef826" translate="yes" xml:space="preserve">
          <source>Many operations have an &amp;ldquo;in-place&amp;rdquo; version. Listed below are functions providing a more primitive access to in-place operators than the usual syntax does; for example, the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-statement&quot;&gt;statement&lt;/a&gt;&lt;code&gt;x += y&lt;/code&gt; is equivalent to &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt;. Another way to put it is to say that &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; is equivalent to the compound statement &lt;code&gt;z = x; z += y&lt;/code&gt;.</source>
          <target state="translated">许多操作都有&amp;ldquo;就地&amp;rdquo;版本。下面列出的函数比通常的语法提供对原始操作符的更原始的访问；例如，&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-statement&quot;&gt;语句&lt;/a&gt; &lt;code&gt;x += y&lt;/code&gt; 等效于 &lt;code&gt;x = operator.iadd(x, y)&lt;/code&gt; 。另一种表达方式是说 &lt;code&gt;z = operator.iadd(x, y)&lt;/code&gt; 等效于复合语句 &lt;code&gt;z = x; z += y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0775e95d12acf1c76496fc0019dec4ccce66e92a" translate="yes" xml:space="preserve">
          <source>Many other operations also produce lists, including the &lt;a href=&quot;functions#sorted&quot;&gt;&lt;code&gt;sorted()&lt;/code&gt;&lt;/a&gt; built-in.</source>
          <target state="translated">许多其他操作也会产生列表，包括内置的&lt;a href=&quot;functions#sorted&quot;&gt; &lt;code&gt;sorted()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3892486ba2ca4c1adde5de5ad35763a15238b251" translate="yes" xml:space="preserve">
          <source>Many programs split up their functionality into a number of sub-commands, for example, the &lt;code&gt;svn&lt;/code&gt; program can invoke sub-commands like &lt;code&gt;svn
checkout&lt;/code&gt;, &lt;code&gt;svn update&lt;/code&gt;, and &lt;code&gt;svn commit&lt;/code&gt;. Splitting up functionality this way can be a particularly good idea when a program performs several different functions which require different kinds of command-line arguments. &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; supports the creation of such sub-commands with the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method. The &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method is normally called with no arguments and returns a special action object. This object has a single method, &lt;code&gt;add_parser()&lt;/code&gt;, which takes a command name and any &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; constructor arguments, and returns an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; object that can be modified as usual.</source>
          <target state="translated">许多程序将其功能分成许多子命令，例如 &lt;code&gt;svn&lt;/code&gt; 程序可以调用子命令，如 &lt;code&gt;svn checkout&lt;/code&gt; ， &lt;code&gt;svn update&lt;/code&gt; 和 &lt;code&gt;svn commit&lt;/code&gt; 。当程序执行需要不同种类命令行参数的几种不同功能时，以这种方式拆分功能可能是一个特别好的主意。&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;支持使用&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;方法创建此类子命令。所述&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;方法通常称为不带参数，并返回一个特殊的操作对象。该对象具有单个方法 &lt;code&gt;add_parser()&lt;/code&gt; ，该方法采用命令名称和任何&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;构造函数参数，并返回可以照常修改的&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="842c3a3980d59e2ccc8a6587608bb5e288adaa34" translate="yes" xml:space="preserve">
          <source>Many sites disable SMTP &lt;code&gt;VRFY&lt;/code&gt; in order to foil spammers.</source>
          <target state="translated">许多站点禁用SMTP &lt;code&gt;VRFY&lt;/code&gt; 来阻止垃圾邮件发送者。</target>
        </trans-unit>
        <trans-unit id="84d090f9a4b10c8e70604e91d362e68e7d1715a8" translate="yes" xml:space="preserve">
          <source>Map character sets to their email properties.</source>
          <target state="translated">将字符集映射到其电子邮件属性。</target>
        </trans-unit>
        <trans-unit id="7c158793b0576eb0e99170737dcf651e9b593ba3" translate="yes" xml:space="preserve">
          <source>Mapping Basic Tk into Tkinter</source>
          <target state="translated">将基本Tk映射到Tkinter中</target>
        </trans-unit>
        <trans-unit id="29b99d5bba5dcab3d3f32602bec9b94930d68f31" translate="yes" xml:space="preserve">
          <source>Mapping Operators to Functions</source>
          <target state="translated">操作符到函数的映射</target>
        </trans-unit>
        <trans-unit id="18d3adef974e9e8a9c707b5522d4ceef6e880500" translate="yes" xml:space="preserve">
          <source>Mapping Protocol Access</source>
          <target state="translated">映射协议访问</target>
        </trans-unit>
        <trans-unit id="ebd82d89b582db2203963681055d49cb2fdde5e8" translate="yes" xml:space="preserve">
          <source>Mapping Types &amp;mdash; &lt;code&gt;dict&lt;/code&gt;</source>
          <target state="translated">映射类型&amp;mdash; &lt;code&gt;dict&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5781654b4505c67ba0da3a9924958b822ec242bc" translate="yes" xml:space="preserve">
          <source>Mapping Types &amp;mdash; dict</source>
          <target state="translated">映射类型&amp;mdash; dict</target>
        </trans-unit>
        <trans-unit id="0bf0ef93e58f3620e84487a6484aef9dbeeb1def" translate="yes" xml:space="preserve">
          <source>Mapping class that references keys weakly. Entries in the dictionary will be discarded when there is no longer a strong reference to the key. This can be used to associate additional data with an object owned by other parts of an application without adding attributes to those objects. This can be especially useful with objects that override attribute accesses.</source>
          <target state="translated">弱引用键的映射类。当不再有对键的强引用时,字典中的条目将被丢弃。这可以用于将额外的数据与应用程序的其他部分所拥有的对象关联起来,而无需向这些对象添加属性。这对于覆盖属性访问的对象特别有用。</target>
        </trans-unit>
        <trans-unit id="d7046eea20884db0b40984559cdb957133a9a851" translate="yes" xml:space="preserve">
          <source>Mapping class that references values weakly. Entries in the dictionary will be discarded when no strong reference to the value exists any more.</source>
          <target state="translated">弱引用值的映射类。当不再存在对值的强引用时,字典中的条目将被丢弃。</target>
        </trans-unit>
        <trans-unit id="15922488c98b6104b02093ae02b8e9a1520e3912" translate="yes" xml:space="preserve">
          <source>Mapping key (optional), consisting of a parenthesised sequence of characters (for example, &lt;code&gt;(somename)&lt;/code&gt;).</source>
          <target state="translated">映射键（可选），由带括号的字符序列组成（例如 &lt;code&gt;(somename)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ffbd3fab4e4bbef4f2e2b4baa2dbf3d3454ab70b" translate="yes" xml:space="preserve">
          <source>Mapping protocol access is a generic name for functionality that enables using custom objects as if they were dictionaries. In case of &lt;a href=&quot;#module-configparser&quot;&gt;&lt;code&gt;configparser&lt;/code&gt;&lt;/a&gt;, the mapping interface implementation is using the &lt;code&gt;parser['section']['option']&lt;/code&gt; notation.</source>
          <target state="translated">映射协议访问是功能的通用名称，该功能使用户可以像使用字典一样使用自定义对象。如果是&lt;a href=&quot;#module-configparser&quot;&gt; &lt;code&gt;configparser&lt;/code&gt; &lt;/a&gt;，则映射接口实现将使用 &lt;code&gt;parser['section']['option']&lt;/code&gt; 表示法。</target>
        </trans-unit>
        <trans-unit id="fc5f87a388e33c8327e76fb56366eadca8297613" translate="yes" xml:space="preserve">
          <source>Maps a logging level name to a syslog priority name. You may need to override this if you are using custom levels, or if the default algorithm is not suitable for your needs. The default algorithm maps &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt; and &lt;code&gt;CRITICAL&lt;/code&gt; to the equivalent syslog names, and all other level names to &amp;lsquo;warning&amp;rsquo;.</source>
          <target state="translated">将日志记录级别名称映射到系统日志优先级名称。如果您使用自定义级别，或者默认算法不适合您的需求，则可能需要覆盖此设置。默认算法将 &lt;code&gt;DEBUG&lt;/code&gt; ， &lt;code&gt;INFO&lt;/code&gt; ， &lt;code&gt;WARNING&lt;/code&gt; ， &lt;code&gt;ERROR&lt;/code&gt; 和 &lt;code&gt;CRITICAL&lt;/code&gt; 映射到等效的syslog名称，并将所有其他级别的名称映射为'warning'。</target>
        </trans-unit>
        <trans-unit id="76ccf4240d86fc261192b90e86fb8e3d610a0808" translate="yes" xml:space="preserve">
          <source>Marc-Andr&amp;eacute; Lemburg</source>
          <target state="translated">马克&amp;middot;安德烈&amp;middot;伦堡</target>
        </trans-unit>
        <trans-unit id="31e9697d43a1a66f2e45db652019fb9a6216df22" translate="yes" xml:space="preserve">
          <source>Mark</source>
          <target state="translated">Mark</target>
        </trans-unit>
        <trans-unit id="78b4b0fca0a8558cdba8df445fed06a9f493ddd2" translate="yes" xml:space="preserve">
          <source>Mark a protocol class as a runtime protocol.</source>
          <target state="translated">将一个协议类标记为运行时协议。</target>
        </trans-unit>
        <trans-unit id="bdc16c3d4446aea587c961d5bd660311653c4972" translate="yes" xml:space="preserve">
          <source>Mark all lines in the window as unchanged since the last call to &lt;a href=&quot;#curses.window.refresh&quot;&gt;&lt;code&gt;refresh()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">自上次调用&lt;a href=&quot;#curses.window.refresh&quot;&gt; &lt;code&gt;refresh()&lt;/code&gt; &lt;/a&gt;以来，将窗口中的所有行标记为未更改。</target>
        </trans-unit>
        <trans-unit id="b902da44d0895caa8231cc9e0384c86417f1ce22" translate="yes" xml:space="preserve">
          <source>Mark for refresh but wait. This function updates the data structure representing the desired state of the window, but does not force an update of the physical screen. To accomplish that, call &lt;a href=&quot;#curses.doupdate&quot;&gt;&lt;code&gt;doupdate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">标记为刷新，但请等待。此功能更新表示窗口所需状态的数据结构，但不强制更新物理屏幕。为此，请调用&lt;a href=&quot;#curses.doupdate&quot;&gt; &lt;code&gt;doupdate()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e559ee62a3983226dcbd83616d76d03181ae0a0b" translate="yes" xml:space="preserve">
          <source>Mark the Future as &lt;em&gt;done&lt;/em&gt; and set an exception.</source>
          <target state="translated">将&amp;ldquo;将来&amp;rdquo;标记为已&lt;em&gt;完成&lt;/em&gt;并设置例外。</target>
        </trans-unit>
        <trans-unit id="645ca0c18193b0ded87798fc215d9dd6ea2d332b" translate="yes" xml:space="preserve">
          <source>Mark the Future as &lt;em&gt;done&lt;/em&gt; and set its result.</source>
          <target state="translated">将未来标记为已&lt;em&gt;完成&lt;/em&gt;并设置结果。</target>
        </trans-unit>
        <trans-unit id="a99df56423ec62f1dfba367c986811c41a5f6a69" translate="yes" xml:space="preserve">
          <source>Mark the breakpoint as disabled.</source>
          <target state="translated">将断点标记为禁用。</target>
        </trans-unit>
        <trans-unit id="e3cef4076875b3fcfd897d8fd8f8b835f2539450" translate="yes" xml:space="preserve">
          <source>Mark the breakpoint as enabled.</source>
          <target state="translated">将断点标记为启用。</target>
        </trans-unit>
        <trans-unit id="a61cfadccb7dbb909178bf6d48e30d04525fa479" translate="yes" xml:space="preserve">
          <source>Mark the graph as finished and check for cycles in the graph. If any cycle is detected, &lt;a href=&quot;#graphlib.CycleError&quot;&gt;&lt;code&gt;CycleError&lt;/code&gt;&lt;/a&gt; will be raised, but &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;get_ready()&lt;/code&gt;&lt;/a&gt; can still be used to obtain as many nodes as possible until cycles block more progress. After a call to this function, the graph cannot be modified, and therefore no more nodes can be added using &lt;a href=&quot;#graphlib.TopologicalSorter.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将图形标记为完成，然后检查图形中的循环。如果检测到任何周期，&lt;a href=&quot;#graphlib.CycleError&quot;&gt; &lt;code&gt;CycleError&lt;/code&gt; &lt;/a&gt;将提高，但&lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;get_ready()&lt;/code&gt; &lt;/a&gt;仍然可以用于获得尽可能多的节点尽可能直到周期阻挡更多的进展。调用此函数后，无法修改图形，因此无法使用&lt;a href=&quot;#graphlib.TopologicalSorter.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; 添加&lt;/a&gt;更多节点。</target>
        </trans-unit>
        <trans-unit id="ef57eb325f600134e0961a71843953dac27f2aa5" translate="yes" xml:space="preserve">
          <source>Mark the socket closed. The underlying system resource (e.g. a file descriptor) is also closed when all file objects from &lt;a href=&quot;#socket.socket.makefile&quot;&gt;&lt;code&gt;makefile()&lt;/code&gt;&lt;/a&gt; are closed. Once that happens, all future operations on the socket object will fail. The remote end will receive no more data (after queued data is flushed).</source>
          <target state="translated">将插座标记为关闭。当关闭&lt;a href=&quot;#socket.socket.makefile&quot;&gt; &lt;code&gt;makefile()&lt;/code&gt; &lt;/a&gt;中的所有文件对象时，基础系统资源（例如文件描述符）也将关闭。一旦发生这种情况，以后对套接字对象的所有操作将失败。远端将不再接收任何数据（在清除排队的数据之后）。</target>
        </trans-unit>
        <trans-unit id="91570de3be09b7c281d418e67e319eb7eac4ceb0" translate="yes" xml:space="preserve">
          <source>Mark the test as an expected failure. If the test fails it will be considered a success. If the test passes, it will be considered a failure.</source>
          <target state="translated">将测试标记为预期失败。如果测试失败,将被视为成功。如果测试通过,则视为失败。</target>
        </trans-unit>
        <trans-unit id="fb33120620b42e4c6568086b4548bf56c1a0ef93" translate="yes" xml:space="preserve">
          <source>Marked as important</source>
          <target state="translated">标为重要</target>
        </trans-unit>
        <trans-unit id="07e5aae18cb637acd22f163aa224ab431ff10cb0" translate="yes" xml:space="preserve">
          <source>Marked for subsequent deletion</source>
          <target state="translated">标记为以后删除</target>
        </trans-unit>
        <trans-unit id="279c544e4838a63b639d33288ccef17eeb35736b" translate="yes" xml:space="preserve">
          <source>Marks a set of nodes returned by &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt;&lt;/a&gt; as processed, unblocking any successor of each node in &lt;em&gt;nodes&lt;/em&gt; for being returned in the future by a call to &lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt;&lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">标记一组由返回的节点的&lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt; &lt;/a&gt;作为处理的，未遮挡的每个节点的任何后继在&lt;em&gt;节点&lt;/em&gt;用于通过呼叫在未来被返回到&lt;a href=&quot;#graphlib.TopologicalSorter.get_ready&quot;&gt; &lt;code&gt;TopologicalSorter.get_ready()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e44d1a49ab6471526e55a08a843c13a0050773d" translate="yes" xml:space="preserve">
          <source>Martin von L&amp;ouml;wis</source>
          <target state="translated">马丁&amp;middot;冯&amp;middot;洛维斯</target>
        </trans-unit>
        <trans-unit id="3a6db205066d4b1bbdc6724346fcfa1af498ef02" translate="yes" xml:space="preserve">
          <source>Mask for file owner permissions.</source>
          <target state="translated">文件所有者权限的屏蔽。</target>
        </trans-unit>
        <trans-unit id="b5fc0001fa738ddce48f31c45c0d3794679d1545" translate="yes" xml:space="preserve">
          <source>Mask for group permissions.</source>
          <target state="translated">组权限的屏蔽。</target>
        </trans-unit>
        <trans-unit id="450210d9790fb16d1dbe9733f4212fbc9774479d" translate="yes" xml:space="preserve">
          <source>Mask for permissions for others (not in group).</source>
          <target state="translated">屏蔽他人(不在组内)的权限。</target>
        </trans-unit>
        <trans-unit id="0826b4ceb6778b296bb3f36f65361f0cb844377a" translate="yes" xml:space="preserve">
          <source>Match &lt;em&gt;test&lt;/em&gt; to patterns set in &lt;a href=&quot;#test.support.set_match_tests&quot;&gt;&lt;code&gt;set_match_tests()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将&lt;em&gt;测试&lt;/em&gt;与&lt;a href=&quot;#test.support.set_match_tests&quot;&gt; &lt;code&gt;set_match_tests()&lt;/code&gt; 中&lt;/a&gt;设置的模式匹配。</target>
        </trans-unit>
        <trans-unit id="bb305e9c61f18de73442b09968fd63313bd41a06" translate="yes" xml:space="preserve">
          <source>Match Objects</source>
          <target state="translated">匹配对象</target>
        </trans-unit>
        <trans-unit id="93224cb05b372360e7ead31f8491156ed05f4cc5" translate="yes" xml:space="preserve">
          <source>Match objects always have a boolean value of &lt;code&gt;True&lt;/code&gt;. Since &lt;a href=&quot;#re.Pattern.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#re.Pattern.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; return &lt;code&gt;None&lt;/code&gt; when there is no match, you can test whether there was a match with a simple &lt;code&gt;if&lt;/code&gt; statement:</source>
          <target state="translated">匹配对象的布尔值始终为 &lt;code&gt;True&lt;/code&gt; 。由于&lt;a href=&quot;#re.Pattern.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#re.Pattern.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;在没有匹配项时返回 &lt;code&gt;None&lt;/code&gt; ，因此可以使用简单的 &lt;code&gt;if&lt;/code&gt; 语句测试是否存在匹配项：</target>
        </trans-unit>
        <trans-unit id="c7d3fdaa1b461ec568f838ede0d4a6626d22e9f8" translate="yes" xml:space="preserve">
          <source>Match objects support the following methods and attributes:</source>
          <target state="translated">Match对象支持以下方法和属性。</target>
        </trans-unit>
        <trans-unit id="949fae956dd5c3ab00023592a8026f4d3f8d83a0" translate="yes" xml:space="preserve">
          <source>Match this path against the provided glob-style pattern. Return &lt;code&gt;True&lt;/code&gt; if matching is successful, &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="translated">将此路径与提供的glob样式模式匹配。如果匹配成功，则返回 &lt;code&gt;True&lt;/code&gt; ，否则返回 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="179f5245f2bff101b819b11ca265a7859b9b8741" translate="yes" xml:space="preserve">
          <source>Matches Unicode whitespace characters (which includes &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt;, and also many other characters, for example the non-breaking spaces mandated by typography rules in many languages). If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used, only &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; is matched.</source>
          <target state="translated">匹配Unicode空格字符（包括 &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; 以及许多其他字符，例如，印刷规则由多种语言规定的不间断空格）。如果使用&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;标志，则仅匹配 &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d38947cd9f594564bec8a24b3a93f3632f7ac2c" translate="yes" xml:space="preserve">
          <source>Matches Unicode word characters; this includes most characters that can be part of a word in any language, as well as numbers and the underscore. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used, only &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; is matched.</source>
          <target state="translated">匹配Unicode单词字符；其中包括可以用任何语言组成的单词的大多数字符，以及数字和下划线。如果使用&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;标志，则仅匹配 &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a02ff78bb9f573d06ae9b31f950bd8ca71d47da4" translate="yes" xml:space="preserve">
          <source>Matches any Unicode decimal digit (that is, any character in Unicode character category [Nd]). This includes &lt;code&gt;[0-9]&lt;/code&gt;, and also many other digit characters. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used only &lt;code&gt;[0-9]&lt;/code&gt; is matched.</source>
          <target state="translated">匹配任何Unicode十进制数字（即Unicode字符类别[Nd]中的任何字符）。这包括 &lt;code&gt;[0-9]&lt;/code&gt; 以及许多其他数字字符。如果使用&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;标志，则仅匹配 &lt;code&gt;[0-9]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6faa8f9895eeaa59ee824b76c6784280c5d25e28" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a decimal digit. This is the opposite of &lt;code&gt;\d&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^0-9]&lt;/code&gt;.</source>
          <target state="translated">匹配非十进制数字的任何字符。这与 &lt;code&gt;\d&lt;/code&gt; 相反。如果使用&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;标志，则等效于 &lt;code&gt;[^0-9]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="506ee12774fd4c8b11b499d0991f2faec4d49031" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a whitespace character. This is the opposite of &lt;code&gt;\s&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^ \t\n\r\f\v]&lt;/code&gt;.</source>
          <target state="translated">匹配不是空格字符的任何字符。这与 &lt;code&gt;\s&lt;/code&gt; 相反。如果使用&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;标志，则等效于 &lt;code&gt;[^ \t\n\r\f\v]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb667e499cd951fea4ed70cad16b482c6b171c37" translate="yes" xml:space="preserve">
          <source>Matches any character which is not a word character. This is the opposite of &lt;code&gt;\w&lt;/code&gt;. If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used this becomes the equivalent of &lt;code&gt;[^a-zA-Z0-9_]&lt;/code&gt;. If the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used, matches characters which are neither alphanumeric in the current locale nor the underscore.</source>
          <target state="translated">匹配不是单词字符的任何字符。这与 &lt;code&gt;\w&lt;/code&gt; 相反。如果使用&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;标志，则等同于 &lt;code&gt;[^a-zA-Z0-9_]&lt;/code&gt; 。如果使用&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt;标志，则匹配在当前语言环境和下划线中都不是字母数字的字符。</target>
        </trans-unit>
        <trans-unit id="d684d6a5303e5b104e9d7e1feebac2fca2e629fd" translate="yes" xml:space="preserve">
          <source>Matches any decimal digit; this is equivalent to &lt;code&gt;[0-9]&lt;/code&gt;.</source>
          <target state="translated">匹配任何十进制数字；这等效于 &lt;code&gt;[0-9]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ec81b9258c564d40fd0ace5573c147f0fc89717" translate="yes" xml:space="preserve">
          <source>Matches characters considered alphanumeric in the ASCII character set; this is equivalent to &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt;. If the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used, matches characters considered alphanumeric in the current locale and the underscore.</source>
          <target state="translated">匹配ASCII字符集中的字母数字字符；这等效于 &lt;code&gt;[a-zA-Z0-9_]&lt;/code&gt; 。如果使用了&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt;标志，则匹配在当前语言环境和下划线中视为字母数字的字符。</target>
        </trans-unit>
        <trans-unit id="79e224040ee5cddbfb21a4d52e1d10cdcc916f03" translate="yes" xml:space="preserve">
          <source>Matches characters considered whitespace in the ASCII character set; this is equivalent to &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt;.</source>
          <target state="translated">匹配ASCII字符集中被视为空格的字符；这等效于 &lt;code&gt;[ \t\n\r\f\v]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5760ea3990de7a6de7c5094a464f1ee8146a643" translate="yes" xml:space="preserve">
          <source>Matches if &lt;code&gt;...&lt;/code&gt; doesn&amp;rsquo;t match next. This is a &lt;em&gt;negative lookahead assertion&lt;/em&gt;. For example, &lt;code&gt;Isaac (?!Asimov)&lt;/code&gt; will match &lt;code&gt;'Isaac '&lt;/code&gt; only if it&amp;rsquo;s &lt;em&gt;not&lt;/em&gt; followed by &lt;code&gt;'Asimov'&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;...&lt;/code&gt; 下一个不匹配则匹配。这是一个&lt;em&gt;否定的前瞻性断言&lt;/em&gt;。例如，仅当 &lt;code&gt;Isaac (?!Asimov)&lt;/code&gt; 后面&lt;em&gt;没有&lt;/em&gt; &lt;code&gt;'Asimov'&lt;/code&gt; 时,它才会与 &lt;code&gt;'Isaac '&lt;/code&gt; 匹配。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="645a3b740373b49f15f59d4fb0d89acad2b7e416" translate="yes" xml:space="preserve">
          <source>Matches if &lt;code&gt;...&lt;/code&gt; matches next, but doesn&amp;rsquo;t consume any of the string. This is called a &lt;em&gt;lookahead assertion&lt;/em&gt;. For example, &lt;code&gt;Isaac (?=Asimov)&lt;/code&gt; will match &lt;code&gt;'Isaac '&lt;/code&gt; only if it&amp;rsquo;s followed by &lt;code&gt;'Asimov'&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;...&lt;/code&gt; 匹配，则匹配，但不使用任何字符串。这称为&lt;em&gt;先行断言&lt;/em&gt;。例如，仅当 &lt;code&gt;Isaac (?=Asimov)&lt;/code&gt; 后接 &lt;code&gt;'Asimov'&lt;/code&gt; 时,它才会与 &lt;code&gt;'Isaac '&lt;/code&gt; 匹配。</target>
        </trans-unit>
        <trans-unit id="9841ece5b3fb751e15c8bcf3e454136a92d6ad87" translate="yes" xml:space="preserve">
          <source>Matches if the current position in the string is not preceded by a match for &lt;code&gt;...&lt;/code&gt;. This is called a &lt;em&gt;negative lookbehind assertion&lt;/em&gt;. Similar to positive lookbehind assertions, the contained pattern must only match strings of some fixed length. Patterns which start with negative lookbehind assertions may match at the beginning of the string being searched.</source>
          <target state="translated">如果字符串中的当前位置之前没有 &lt;code&gt;...&lt;/code&gt; 的匹配项，则匹配。这称为&lt;em&gt;否定性后向断言&lt;/em&gt;。类似于肯定的后置断言，所包含的模式必须仅匹配某个固定长度的字符串。以否定式后向断言开头的模式可能与要搜索的字符串的开头匹配。</target>
        </trans-unit>
        <trans-unit id="47ac2333577ba84b6d03fe92bd867d24bbd26ed7" translate="yes" xml:space="preserve">
          <source>Matches if the current position in the string is preceded by a match for &lt;code&gt;...&lt;/code&gt; that ends at the current position. This is called a &lt;em&gt;positive lookbehind assertion&lt;/em&gt;. &lt;code&gt;(?&amp;lt;=abc)def&lt;/code&gt; will find a match in &lt;code&gt;'abcdef'&lt;/code&gt;, since the lookbehind will back up 3 characters and check if the contained pattern matches. The contained pattern must only match strings of some fixed length, meaning that &lt;code&gt;abc&lt;/code&gt; or &lt;code&gt;a|b&lt;/code&gt; are allowed, but &lt;code&gt;a*&lt;/code&gt; and &lt;code&gt;a{3,4}&lt;/code&gt; are not. Note that patterns which start with positive lookbehind assertions will not match at the beginning of the string being searched; you will most likely want to use the &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; function rather than the &lt;a href=&quot;#re.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">如果字符串中的当前位置前面有一个 &lt;code&gt;...&lt;/code&gt; 的匹配项（在当前位置结束），则匹配。这称为&lt;em&gt;肯定隐式断言&lt;/em&gt;。 &lt;code&gt;(?&amp;lt;=abc)def&lt;/code&gt; 将在 &lt;code&gt;'abcdef'&lt;/code&gt; 中找到一个匹配项，因为后向将备份3个字符并检查所包含的模式是否匹配。包含的模式必须仅匹配某个固定长度的字符串，这意味着允许 &lt;code&gt;abc&lt;/code&gt; 或 &lt;code&gt;a|b&lt;/code&gt; ，但不允许 &lt;code&gt;a*&lt;/code&gt; 和 &lt;code&gt;a{3,4}&lt;/code&gt; 。注意，以正向后断言开头的模式在搜索字符串的开头将不匹配；您很可能想使用&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;函数而不是&lt;a href=&quot;#re.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;函数：</target>
        </trans-unit>
        <trans-unit id="8552016e487b5c84ddf4be20f70b50e5f4e56d47" translate="yes" xml:space="preserve">
          <source>Matches only at the end of the string.</source>
          <target state="translated">只在字符串的末端匹配。</target>
        </trans-unit>
        <trans-unit id="de268deff53557a1f18b43b0cc932e4c34479169" translate="yes" xml:space="preserve">
          <source>Matches only at the start of the string.</source>
          <target state="translated">只在字符串的开始处匹配。</target>
        </trans-unit>
        <trans-unit id="c08d22497155abd5fe50f74938140c4799fbcef4" translate="yes" xml:space="preserve">
          <source>Matches the contents of the group of the same number. Groups are numbered starting from 1. For example, &lt;code&gt;(.+) \1&lt;/code&gt; matches &lt;code&gt;'the the'&lt;/code&gt; or &lt;code&gt;'55 55'&lt;/code&gt;, but not &lt;code&gt;'thethe'&lt;/code&gt; (note the space after the group). This special sequence can only be used to match one of the first 99 groups. If the first digit of &lt;em&gt;number&lt;/em&gt; is 0, or &lt;em&gt;number&lt;/em&gt; is 3 octal digits long, it will not be interpreted as a group match, but as the character with octal value &lt;em&gt;number&lt;/em&gt;. Inside the &lt;code&gt;'['&lt;/code&gt; and &lt;code&gt;']'&lt;/code&gt; of a character class, all numeric escapes are treated as characters.</source>
          <target state="translated">匹配相同编号组的内容。组从1开始编号。例如， &lt;code&gt;(.+) \1&lt;/code&gt; 匹配 &lt;code&gt;'the the'&lt;/code&gt; 或 &lt;code&gt;'55 55'&lt;/code&gt; ，但不匹配 &lt;code&gt;'thethe'&lt;/code&gt; （请注意组后的空格）。此特殊序列只能用于匹配前99个组之一。如果&lt;em&gt;number&lt;/em&gt;的第一位&lt;em&gt;数字&lt;/em&gt;为0，或者&lt;em&gt;number的&lt;/em&gt;长度为3个八进制数字，则不会被解释为组匹配，而是被解释为具有八进制值&lt;em&gt;number&lt;/em&gt;的字符。在字符类 &lt;code&gt;'['&lt;/code&gt; 和 &lt;code&gt;']'&lt;/code&gt; 内部，所有数字转义符都被视为字符。</target>
        </trans-unit>
        <trans-unit id="2eb5aca7d251d2a0725128c63c23538a7b27cad2" translate="yes" xml:space="preserve">
          <source>Matches the empty string, but only at the beginning or end of a word. A word is defined as a sequence of word characters. Note that formally, &lt;code&gt;\b&lt;/code&gt; is defined as the boundary between a &lt;code&gt;\w&lt;/code&gt; and a &lt;code&gt;\W&lt;/code&gt; character (or vice versa), or between &lt;code&gt;\w&lt;/code&gt; and the beginning/end of the string. This means that &lt;code&gt;r'\bfoo\b'&lt;/code&gt; matches &lt;code&gt;'foo'&lt;/code&gt;, &lt;code&gt;'foo.'&lt;/code&gt;, &lt;code&gt;'(foo)'&lt;/code&gt;, &lt;code&gt;'bar foo baz'&lt;/code&gt; but not &lt;code&gt;'foobar'&lt;/code&gt; or &lt;code&gt;'foo3'&lt;/code&gt;.</source>
          <target state="translated">匹配空字符串，但仅匹配单词的开头或结尾。单词定义为单词字符序列。请注意，形式上， &lt;code&gt;\b&lt;/code&gt; 定义为 &lt;code&gt;\w&lt;/code&gt; 和 &lt;code&gt;\W&lt;/code&gt; 字符之间的边界（反之亦然）或 &lt;code&gt;\w&lt;/code&gt; 与字符串的开头/结尾之间的边界。这意味着 &lt;code&gt;r'\bfoo\b'&lt;/code&gt; 与 &lt;code&gt;'foo'&lt;/code&gt; ， &lt;code&gt;'foo.'&lt;/code&gt; '匹配。， &lt;code&gt;'(foo)'&lt;/code&gt; ， &lt;code&gt;'bar foo baz'&lt;/code&gt; 而不是 &lt;code&gt;'foobar'&lt;/code&gt; 或 &lt;code&gt;'foo3'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c04099b042264b3596a7797564409e8942492883" translate="yes" xml:space="preserve">
          <source>Matches the empty string, but only when it is &lt;em&gt;not&lt;/em&gt; at the beginning or end of a word. This means that &lt;code&gt;r'py\B'&lt;/code&gt; matches &lt;code&gt;'python'&lt;/code&gt;, &lt;code&gt;'py3'&lt;/code&gt;, &lt;code&gt;'py2'&lt;/code&gt;, but not &lt;code&gt;'py'&lt;/code&gt;, &lt;code&gt;'py.'&lt;/code&gt;, or &lt;code&gt;'py!'&lt;/code&gt;. &lt;code&gt;\B&lt;/code&gt; is just the opposite of &lt;code&gt;\b&lt;/code&gt;, so word characters in Unicode patterns are Unicode alphanumerics or the underscore, although this can be changed by using the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag. Word boundaries are determined by the current locale if the &lt;a href=&quot;#re.LOCALE&quot;&gt;&lt;code&gt;LOCALE&lt;/code&gt;&lt;/a&gt; flag is used.</source>
          <target state="translated">匹配空字符串，但仅当它&lt;em&gt;不在&lt;/em&gt;单词的开头或结尾时才匹配。这意味着 &lt;code&gt;r'py\B'&lt;/code&gt; 匹配 &lt;code&gt;'python'&lt;/code&gt; ， &lt;code&gt;'py3'&lt;/code&gt; ， &lt;code&gt;'py2'&lt;/code&gt; ，但不匹配 &lt;code&gt;'py'&lt;/code&gt; ， &lt;code&gt;'py.'&lt;/code&gt; 或 &lt;code&gt;'py!'&lt;/code&gt; 。 &lt;code&gt;\B&lt;/code&gt; 与 &lt;code&gt;\b&lt;/code&gt; 恰好相反，因此Unicode模式中的单词字符是Unicode字母数字或下划线，尽管可以通过使用&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;标志进行更改。如果使用&lt;a href=&quot;#re.LOCALE&quot;&gt; &lt;code&gt;LOCALE&lt;/code&gt; &lt;/a&gt;标志，则字边界由当前语言环境确定。</target>
        </trans-unit>
        <trans-unit id="8ce88cc650b7fe8f97b845a2321d7c2b877f1d7c" translate="yes" xml:space="preserve">
          <source>Matches the end of the string or just before the newline at the end of the string, and in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode also matches before a newline. &lt;code&gt;foo&lt;/code&gt; matches both &amp;lsquo;foo&amp;rsquo; and &amp;lsquo;foobar&amp;rsquo;, while the regular expression &lt;code&gt;foo$&lt;/code&gt; matches only &amp;lsquo;foo&amp;rsquo;. More interestingly, searching for &lt;code&gt;foo.$&lt;/code&gt; in &lt;code&gt;'foo1\nfoo2\n'&lt;/code&gt; matches &amp;lsquo;foo2&amp;rsquo; normally, but &amp;lsquo;foo1&amp;rsquo; in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode; searching for a single &lt;code&gt;$&lt;/code&gt; in &lt;code&gt;'foo\n'&lt;/code&gt; will find two (empty) matches: one just before the newline, and one at the end of the string.</source>
          <target state="translated">匹配字符串的末尾或在字符串末尾的换行符之前，并且在&lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;模式下也匹配换行符的前面。 &lt;code&gt;foo&lt;/code&gt; 同时匹配'foo'和'foobar'，而正则表达式 &lt;code&gt;foo$&lt;/code&gt; 仅匹配'foo'。更有趣的是，在 &lt;code&gt;'foo1\nfoo2\n'&lt;/code&gt; 中搜索 &lt;code&gt;foo.$&lt;/code&gt; 通常与'foo2'匹配，但是在&lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;模式中搜索'foo1' ；在 &lt;code&gt;'foo\n'&lt;/code&gt; 搜索单个 &lt;code&gt;$&lt;/code&gt; 将发现两个（空）匹配项：一个在换行符之前，另一个在字符串末尾。</target>
        </trans-unit>
        <trans-unit id="2f40daaf0bea10cd0df0f8186bdb340e8b731567" translate="yes" xml:space="preserve">
          <source>Matches whatever regular expression is inside the parentheses, and indicates the start and end of a group; the contents of a group can be retrieved after a match has been performed, and can be matched later in the string with the &lt;code&gt;\number&lt;/code&gt; special sequence, described below. To match the literals &lt;code&gt;'('&lt;/code&gt; or &lt;code&gt;')'&lt;/code&gt;, use &lt;code&gt;\(&lt;/code&gt; or &lt;code&gt;\)&lt;/code&gt;, or enclose them inside a character class: &lt;code&gt;[(]&lt;/code&gt;, &lt;code&gt;[)]&lt;/code&gt;.</source>
          <target state="translated">匹配括号内的任何正则表达式，并指示组的开始和结束；可以在执行匹配后检索组的内容，并且以后可以在字符串中使用 &lt;code&gt;\number&lt;/code&gt; 特殊序列进行匹配，如下所述。要匹配文字 &lt;code&gt;'('&lt;/code&gt; 或 &lt;code&gt;')'&lt;/code&gt; ，请使用 &lt;code&gt;\(&lt;/code&gt; 或 &lt;code&gt;\)&lt;/code&gt; ，或将它们括在字符类中： &lt;code&gt;[(]&lt;/code&gt; ， &lt;code&gt;[)]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b4c6577035e177562eb7b5ddae73d04f12d9983" translate="yes" xml:space="preserve">
          <source>Math argument out of domain of func</source>
          <target state="translated">数学参数在func的域外</target>
        </trans-unit>
        <trans-unit id="10aa065593dbf60ae5f473eae4958b71572dc4ff" translate="yes" xml:space="preserve">
          <source>Math result not representable</source>
          <target state="translated">数学结果无法表示</target>
        </trans-unit>
        <trans-unit id="50d207959d02b2a34b183cd7d25f1e0c68bf9ddb" translate="yes" xml:space="preserve">
          <source>Matrix Multiplication</source>
          <target state="translated">矩阵乘法</target>
        </trans-unit>
        <trans-unit id="e6d0832e2740dd4bc270c8fb3b3635030afe668d" translate="yes" xml:space="preserve">
          <source>Maximum digest size that the hash function can output.</source>
          <target state="translated">哈希函数可以输出的最大摘要大小。</target>
        </trans-unit>
        <trans-unit id="8b4aa5d3e601b7665580a557fd7d301ef9dff186" translate="yes" xml:space="preserve">
          <source>Maximum key size.</source>
          <target state="translated">最大密钥大小。</target>
        </trans-unit>
        <trans-unit id="014ad729ec1a3537d14c4c998116e97cae28939e" translate="yes" xml:space="preserve">
          <source>Maximum key value</source>
          <target state="translated">最大键值</target>
        </trans-unit>
        <trans-unit id="fa26260fb5c11969aae03fca4bf169c742f8d389" translate="yes" xml:space="preserve">
          <source>Maximum number of characters in the representation for an integer. Digits are dropped from the middle. The default is &lt;code&gt;40&lt;/code&gt;.</source>
          <target state="translated">表示形式中的最大字符数。数字从中间掉落。默认值为 &lt;code&gt;40&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f05dad23c52cc0273d437ffe0b4a8a5b8a0e80ef" translate="yes" xml:space="preserve">
          <source>Maximum number of days between changes</source>
          <target state="translated">变化之间的最长天数</target>
        </trans-unit>
        <trans-unit id="16b74af98dc16ddf608395028b518cb175ab18cd" translate="yes" xml:space="preserve">
          <source>Maximum number of frames stored in the traceback of &lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt;&lt;code&gt;traces&lt;/code&gt;&lt;/a&gt;: result of the &lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt;&lt;code&gt;get_traceback_limit()&lt;/code&gt;&lt;/a&gt; when the snapshot was taken.</source>
          <target state="translated">存储在所述追逆帧的最大数量&lt;a href=&quot;#tracemalloc.Snapshot.traces&quot;&gt; &lt;code&gt;traces&lt;/code&gt; &lt;/a&gt;：所述的结果&lt;a href=&quot;#tracemalloc.get_traceback_limit&quot;&gt; &lt;code&gt;get_traceback_limit()&lt;/code&gt; &lt;/a&gt;时拍摄的快照。</target>
        </trans-unit>
        <trans-unit id="3750177b2f369715ab06bcee508f2caa6b2a6f98" translate="yes" xml:space="preserve">
          <source>Maximum size of a deque or &lt;code&gt;None&lt;/code&gt; if unbounded.</source>
          <target state="translated">一个双端队列的最大尺寸或 &lt;code&gt;None&lt;/code&gt; ，如果无界。</target>
        </trans-unit>
        <trans-unit id="edc09d71b5252f3ee59a839aac0b3a820b72242c" translate="yes" xml:space="preserve">
          <source>May be set to &amp;ldquo;normal&amp;rdquo; or &amp;ldquo;disabled&amp;rdquo; to control the &amp;ldquo;disabled&amp;rdquo; state bit. This is a write-only option: setting it changes the widget state, but the &lt;a href=&quot;#tkinter.ttk.Widget.state&quot;&gt;&lt;code&gt;Widget.state()&lt;/code&gt;&lt;/a&gt; method does not affect this option.</source>
          <target state="translated">可以设置为&amp;ldquo;正常&amp;rdquo;或&amp;ldquo;禁用&amp;rdquo;以控制&amp;ldquo;禁用&amp;rdquo;状态位。这是一个只写选项：设置它会更改小部件状态，但&lt;a href=&quot;#tkinter.ttk.Widget.state&quot;&gt; &lt;code&gt;Widget.state()&lt;/code&gt; &lt;/a&gt;方法不会影响此选项。</target>
        </trans-unit>
        <trans-unit id="44a80b227c8f186870813bca412da9ebe084f150" translate="yes" xml:space="preserve">
          <source>May be used to specify a custom widget style.</source>
          <target state="translated">可用于指定自定义小组件样式。</target>
        </trans-unit>
        <trans-unit id="31c4d73c6f4d4e4fbb6fe638e8af4924410068ed" translate="yes" xml:space="preserve">
          <source>May raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可能会引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="16093585733797b25f46218a91e9a1ef038fedd8" translate="yes" xml:space="preserve">
          <source>Measures of spread</source>
          <target state="translated">扩散措施</target>
        </trans-unit>
        <trans-unit id="b628e9468e6b5c28d9838c0202c4f602cfb4f6b1" translate="yes" xml:space="preserve">
          <source>Measures the agreement between two normal probability distributions. Returns a value between 0.0 and 1.0 giving &lt;a href=&quot;https://www.rasch.org/rmt/rmt101r.htm&quot;&gt;the overlapping area for the two probability density functions&lt;/a&gt;.</source>
          <target state="translated">测量两个正态概率分布之间的一致性。返回介于0.0和1.0之间的值，给出&lt;a href=&quot;https://www.rasch.org/rmt/rmt101r.htm&quot;&gt;两个概率密度函数的重叠区域&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2898c2eb7b2e66e1c44ea89bdae559774210425b" translate="yes" xml:space="preserve">
          <source>Median (middle value) of data.</source>
          <target state="translated">数据的中位数(中间值)。</target>
        </trans-unit>
        <trans-unit id="b6a8553e4cbb05abe2fbc605e92f832712ef5d58" translate="yes" xml:space="preserve">
          <source>Median, or 50th percentile, of grouped data.</source>
          <target state="translated">中位数,或分组数据的第50百分位数。</target>
        </trans-unit>
        <trans-unit id="47c80fcea8456971f1641f17561f060ec99c498a" translate="yes" xml:space="preserve">
          <source>Member values can be anything: &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, etc.. If the exact value is unimportant you may use &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; instances and an appropriate value will be chosen for you. Care must be taken if you mix &lt;a href=&quot;#enum.auto&quot;&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/a&gt; with other values.</source>
          <target state="translated">成员值可以是任何值：&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;等。如果确切值不重要，则可以使用&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;实例，并且将为您选择一个适当的值。如果将&lt;a href=&quot;#enum.auto&quot;&gt; &lt;code&gt;auto&lt;/code&gt; &lt;/a&gt;与其他值混合使用，则必须小心。</target>
        </trans-unit>
        <trans-unit id="f10615a852f71e51e70484e62589e76d80a6cbee" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt;&lt;code&gt;call_args_list&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.call_args_list&quot;&gt; &lt;code&gt;call_args_list&lt;/code&gt; 的&lt;/a&gt;成员是&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt;对象。这些可以作为元组解包，以获取各个参数。见&lt;a href=&quot;#calls-as-tuples&quot;&gt;电话元组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd0eafe15e6e45f2a4f843e0333ccf3a417c5e3c" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt;&lt;code&gt;method_calls&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.method_calls&quot;&gt; &lt;code&gt;method_calls&lt;/code&gt; 的&lt;/a&gt;成员是&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt;对象。这些可以作为元组解包，以获取各个参数。见&lt;a href=&quot;#calls-as-tuples&quot;&gt;电话元组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba39158a8386393f5da73f9deb9c5f902a6dd693" translate="yes" xml:space="preserve">
          <source>Members of &lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt;&lt;code&gt;mock_calls&lt;/code&gt;&lt;/a&gt; are &lt;a href=&quot;#unittest.mock.call&quot;&gt;&lt;code&gt;call&lt;/code&gt;&lt;/a&gt; objects. These can be unpacked as tuples to get at the individual arguments. See &lt;a href=&quot;#calls-as-tuples&quot;&gt;calls as tuples&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unittest.mock.Mock.mock_calls&quot;&gt; &lt;code&gt;mock_calls&lt;/code&gt; 的&lt;/a&gt;成员是&lt;a href=&quot;#unittest.mock.call&quot;&gt; &lt;code&gt;call&lt;/code&gt; &lt;/a&gt;对象。这些可以作为元组解包，以获取各个参数。见&lt;a href=&quot;#calls-as-tuples&quot;&gt;电话元组&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5d52065f33aba0940b046e017d4e1dcd357c9062" translate="yes" xml:space="preserve">
          <source>Members of the population need not be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; or unique. If the population contains repeats, then each occurrence is a possible selection in the sample.</source>
          <target state="translated">总体成员不必是&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-hashable&quot;&gt;哈希值&lt;/a&gt;或唯一值。如果总体包含重复，则每次出现都是样本中的可能选择。</target>
        </trans-unit>
        <trans-unit id="b7e64c99814ae5c318f3597600e15beb2186266e" translate="yes" xml:space="preserve">
          <source>Members of the population need not be &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;hashable&lt;/a&gt; or unique. If the population contains repeats, then each occurrence is a possible selection in the sample.</source>
          <target state="translated">人口成员不必是&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-hashable&quot;&gt;散列的&lt;/a&gt;或唯一的。如果总体中包含重复，则每次出现都是样本中的一个可能选择。</target>
        </trans-unit>
        <trans-unit id="1e0dfc18cc7a4d06e7cad57a7f6fafa7090ff04a" translate="yes" xml:space="preserve">
          <source>Memory BIO Support</source>
          <target state="translated">内存BIO支持</target>
        </trans-unit>
        <trans-unit id="e80f9fe1d0c17d864aa78913d1c28ea30f56c51b" translate="yes" xml:space="preserve">
          <source>Memory Views</source>
          <target state="translated">记忆视图</target>
        </trans-unit>
        <trans-unit id="906b5cd58552183dba7d71de987e1f1ddd52b1ec" translate="yes" xml:space="preserve">
          <source>Memory allocator API violation</source>
          <target state="translated">违反内存分配器API</target>
        </trans-unit>
        <trans-unit id="f72fc48377945075aece3d0f77f039dde8e3ab08" translate="yes" xml:space="preserve">
          <source>Memory-mapped file objects behave like both &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; and like &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. You can use mmap objects in most places where &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; are expected; for example, you can use the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module to search through a memory-mapped file. You can also change a single byte by doing &lt;code&gt;obj[index] = 97&lt;/code&gt;, or change a subsequence by assigning to a slice: &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt;. You can also read and write data starting at the current file position, and &lt;code&gt;seek()&lt;/code&gt; through the file to different positions.</source>
          <target state="translated">内存映射的文件对象的行为类似于&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。您可以在大多数需要&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;地方使用mmap对象。例如，您可以使用&lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt;模块搜索内存映射文件。您还可以通过 &lt;code&gt;obj[index] = 97&lt;/code&gt; 来更改单个字节，或者通过分配给切片来更改子序列： &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt; 。您还可以从当前文件位置开始读取和写入数据，并通过文件到其他位置 &lt;code&gt;seek()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff563e3596f9ee71c70e8e02d53ed09fdac683ea" translate="yes" xml:space="preserve">
          <source>Memory-mapped file objects behave like both &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; and like &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;. You can use mmap objects in most places where &lt;a href=&quot;stdtypes#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt; are expected; for example, you can use the &lt;a href=&quot;re#module-re&quot;&gt;&lt;code&gt;re&lt;/code&gt;&lt;/a&gt; module to search through a memory-mapped file. You can also change a single byte by doing &lt;code&gt;obj[index] = 97&lt;/code&gt;, or change a subsequence by assigning to a slice: &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt;. You can also read and write data starting at the current file position, and &lt;code&gt;seek()&lt;/code&gt; through the file to different positions.</source>
          <target state="translated">内存映射的文件对象的行为类似于&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。您可以在大多数需要&lt;a href=&quot;stdtypes#bytearray&quot;&gt; &lt;code&gt;bytearray&lt;/code&gt; &lt;/a&gt;地方使用mmap对象。例如，您可以使用&lt;a href=&quot;re#module-re&quot;&gt; &lt;code&gt;re&lt;/code&gt; &lt;/a&gt;模块搜索内存映射文件。您还可以通过执行 &lt;code&gt;obj[index] = 97&lt;/code&gt; 来更改单个字节，或通过分配给切片来更改子序列： &lt;code&gt;obj[i1:i2] = b'...'&lt;/code&gt; 。您也可以从当前文件位置开始读取和写入数据，并通过文件将 &lt;code&gt;seek()&lt;/code&gt; 移到其他位置。</target>
        </trans-unit>
        <trans-unit id="05dce2bca4952d4d30be9caea65daf4119c522a0" translate="yes" xml:space="preserve">
          <source>Memory-mapped file objects support the following methods:</source>
          <target state="translated">内存映射的文件对象支持以下方法。</target>
        </trans-unit>
        <trans-unit id="ccdfc54c3dfcff33f3b84cd29c470c9f9dd72513" translate="yes" xml:space="preserve">
          <source>MemoryError</source>
          <target state="translated">MemoryError</target>
        </trans-unit>
        <trans-unit id="042180098555538da1846becefee4991e4e008c7" translate="yes" xml:space="preserve">
          <source>MemoryHandler</source>
          <target state="translated">MemoryHandler</target>
        </trans-unit>
        <trans-unit id="3a9d4b4b179ca00907fee8d914427c890923e689" translate="yes" xml:space="preserve">
          <source>Menu indexes (menu.invoke(), menu.entryconfig(), etc.)</source>
          <target state="translated">索引菜单(menu.invoke(),menu.entryconfig()等)</target>
        </trans-unit>
        <trans-unit id="e7c3800e31ff2e7695b9f5bed95a6de6715dca44" translate="yes" xml:space="preserve">
          <source>Menus</source>
          <target state="translated">Menus</target>
        </trans-unit>
        <trans-unit id="cc82aa47255cb19590a5531d1e61e840f195f669" translate="yes" xml:space="preserve">
          <source>Merge in data from another &lt;a href=&quot;#trace.CoverageResults&quot;&gt;&lt;code&gt;CoverageResults&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">合并来自另一个&lt;a href=&quot;#trace.CoverageResults&quot;&gt; &lt;code&gt;CoverageResults&lt;/code&gt; &lt;/a&gt;对象的数据。</target>
        </trans-unit>
        <trans-unit id="fc96ea9dd703090ebbbff6f4d36c249d4f4d2c14" translate="yes" xml:space="preserve">
          <source>Merge multiple sorted inputs into a single sorted output (for example, merge timestamped entries from multiple log files). Returns an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over the sorted values.</source>
          <target state="translated">将多个排序的输入合并到一个排序的输出中（例如，合并多个日志文件中带有时间戳的条目）。返回排序后的值的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="464d8b2c9358d3daab907884b63ea2624a1a5cc2" translate="yes" xml:space="preserve">
          <source>Merge multiple sorted inputs into a single sorted output (for example, merge timestamped entries from multiple log files). Returns an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;iterator&lt;/a&gt; over the sorted values.</source>
          <target state="translated">将多个排序的输入合并到一个排序的输出中（例如，合并多个日志文件中带有时间戳的条目）。返回排序后的值的&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-iterator&quot;&gt;迭代器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68f4145fee7dde76afceb910165924ad14cf0d00" translate="yes" xml:space="preserve">
          <source>Message</source>
          <target state="translated">Message</target>
        </trans-unit>
        <trans-unit id="80b747cc58c65b15d89258f4e17a95d87d10f509" translate="yes" xml:space="preserve">
          <source>Message object structures can be created in one of two ways: they can be created from whole cloth by creating an &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; object, adding headers using the dictionary interface, and adding payload(s) using &lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt;&lt;code&gt;set_content()&lt;/code&gt;&lt;/a&gt; and related methods, or they can be created by parsing a serialized representation of the email message.</source>
          <target state="translated">可以通过以下两种方式之一来创建消息对象结构：可以通过创建&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;对象，使用字典接口添加标头以及使用&lt;a href=&quot;email.message#email.message.EmailMessage.set_content&quot;&gt; &lt;code&gt;set_content()&lt;/code&gt; &lt;/a&gt;和相关方法添加有效负载来从整体上创建消息对象结构，或者可以将它们通过解析电子邮件的序列化表示来创建。</target>
        </trans-unit>
        <trans-unit id="7e80a85b81acb5bcf8134a2999833f3f872f8a62" translate="yes" xml:space="preserve">
          <source>Message objects</source>
          <target state="translated">信息对象</target>
        </trans-unit>
        <trans-unit id="6bf991e7854ed942e57f7a8ae958526d710e4851" translate="yes" xml:space="preserve">
          <source>Message too long</source>
          <target state="translated">信息太长</target>
        </trans-unit>
        <trans-unit id="ae3fac3d770c2302e7b6a1ae541c61804b4bbb02" translate="yes" xml:space="preserve">
          <source>MessageIDHeader</source>
          <target state="translated">MessageIDHeader</target>
        </trans-unit>
        <trans-unit id="8ca731184f3581459cebf23959eca61bfdee5621" translate="yes" xml:space="preserve">
          <source>Messages in a Babyl mailbox have two sets of headers, original headers and so-called visible headers. Visible headers are typically a subset of the original headers that have been reformatted or abridged to be more attractive. Each message in a Babyl mailbox also has an accompanying list of &lt;em&gt;labels&lt;/em&gt;, or short strings that record extra information about the message, and a list of all user-defined labels found in the mailbox is kept in the Babyl options section.</source>
          <target state="translated">Babyl邮箱中的邮件具有两组标题，原始标题和所谓的可见标题。可见标头通常是原始标头的子集，这些标头已被重新格式化或删节以使其更具吸引力。 Babyl邮箱中的每封邮件还具有随附的&lt;em&gt;标签&lt;/em&gt;列表，或记录有关该邮件的额外信息的短字符串，并且在Babyl选项部分中保留了邮箱中找到的所有用户定义标签的列表。</target>
        </trans-unit>
        <trans-unit id="1677ab0cd3601cac9f7ad62eb5f484d8b6a9b975" translate="yes" xml:space="preserve">
          <source>Messages in an mbox mailbox are stored together in a single file. The sender&amp;rsquo;s envelope address and the time of delivery are typically stored in a line beginning with &amp;ldquo;From &amp;rdquo; that is used to indicate the start of a message, though there is considerable variation in the exact format of this data among mbox implementations. Flags that indicate the state of the message, such as whether it has been read or marked as important, are typically stored in &lt;em&gt;Status&lt;/em&gt; and &lt;em&gt;X-Status&lt;/em&gt; headers.</source>
          <target state="translated">mbox邮箱中的邮件一起存储在一个文件中。发件人的信封地址和传递时间通常存储在以&amp;ldquo;发件人&amp;rdquo;开头的行中，该行用于指示消息的开始，尽管在mbox实现中此数据的确切格式存在很大差异。指示消息状态的标志（例如，已读取消息或将其标记为重要消息）通常存储在&lt;em&gt;Status&lt;/em&gt;和&lt;em&gt;X-Status&lt;/em&gt;标头中。</target>
        </trans-unit>
        <trans-unit id="ce502b237ed2952032c06cc66fddcfdbf0466da2" translate="yes" xml:space="preserve">
          <source>Messages may be added to a &lt;a href=&quot;#mailbox.Mailbox&quot;&gt;&lt;code&gt;Mailbox&lt;/code&gt;&lt;/a&gt; instance using the set-like method &lt;a href=&quot;#mailbox.Mailbox.add&quot;&gt;&lt;code&gt;add()&lt;/code&gt;&lt;/a&gt; and removed using a &lt;code&gt;del&lt;/code&gt; statement or the set-like methods &lt;a href=&quot;#mailbox.Mailbox.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mailbox.Mailbox.discard&quot;&gt;&lt;code&gt;discard()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用类似set的方法&lt;a href=&quot;#mailbox.Mailbox.add&quot;&gt; &lt;code&gt;add()&lt;/code&gt; 将&lt;/a&gt;消息添加到&lt;a href=&quot;#mailbox.Mailbox&quot;&gt; &lt;code&gt;Mailbox&lt;/code&gt; &lt;/a&gt;实例，并使用 &lt;code&gt;del&lt;/code&gt; 语句或使用类似于set的方法&lt;a href=&quot;#mailbox.Mailbox.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#mailbox.Mailbox.discard&quot;&gt; &lt;code&gt;discard()&lt;/code&gt; &lt;/a&gt;来删除消息。</target>
        </trans-unit>
        <trans-unit id="4b1f88ec82e011a2e8176b28aacc80eda529a767" translate="yes" xml:space="preserve">
          <source>Metaclass for defining Abstract Base Classes (ABCs).</source>
          <target state="translated">用于定义抽象基类(ABC)的元类。</target>
        </trans-unit>
        <trans-unit id="a49c9e99a5c2fca29b2700a9772373e6a22ccee7" translate="yes" xml:space="preserve">
          <source>Metaclasses</source>
          <target state="translated">Metaclasses</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="1ad6284b73b0f911633f1c682d1bd1a0d2a1d3e3" translate="yes" xml:space="preserve">
          <source>Method Name</source>
          <target state="translated">方法名称</target>
        </trans-unit>
        <trans-unit id="7397c74c7f3015f9c8b78018a46b8693a78d3d77" translate="yes" xml:space="preserve">
          <source>Method called immediately after the test method has been called and the result recorded. This is called before &lt;code&gt;tearDown()&lt;/code&gt;. This is called even if the test method raised an exception, so the implementation in subclasses may need to be particularly careful about checking internal state. Any exception, other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, raised by this method will be considered an additional error rather than a test failure (thus increasing the total number of reported errors). This method will only be called if the &lt;a href=&quot;#unittest.IsolatedAsyncioTestCase.asyncSetUp&quot;&gt;&lt;code&gt;asyncSetUp()&lt;/code&gt;&lt;/a&gt; succeeds, regardless of the outcome of the test method. The default implementation does nothing.</source>
          <target state="translated">调用测试方法并记录结果后立即调用的方法。这在 &lt;code&gt;tearDown()&lt;/code&gt; 之前被调用。即使测试方法引发了异常，也将调用此方法，因此子类中的实现可能需要特别注意检查内部状态。此方法引发的任何异常（&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; 除外)&lt;/a&gt;都将被视为附加错误，而不是测试失败（因此会增加报告的错误总数）。不管测试方法的结果如何，仅当&lt;a href=&quot;#unittest.IsolatedAsyncioTestCase.asyncSetUp&quot;&gt; &lt;code&gt;asyncSetUp()&lt;/code&gt; &lt;/a&gt;成功时才会调用此方法。默认实现不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="5dbbd8f81d018eed640981cd64112d0d9e54bc10" translate="yes" xml:space="preserve">
          <source>Method called immediately after the test method has been called and the result recorded. This is called even if the test method raised an exception, so the implementation in subclasses may need to be particularly careful about checking internal state. Any exception, other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, raised by this method will be considered an additional error rather than a test failure (thus increasing the total number of reported errors). This method will only be called if the &lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt;&lt;code&gt;setUp()&lt;/code&gt;&lt;/a&gt; succeeds, regardless of the outcome of the test method. The default implementation does nothing.</source>
          <target state="translated">调用测试方法并记录结果后立即调用的方法。即使测试方法引发了异常，也将调用此方法，因此子类中的实现可能需要特别注意检查内部状态。此方法引发的任何异常（&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; 除外)&lt;/a&gt;都将被视为附加错误，而不是测试失败（因此会增加报告的错误总数）。仅在&lt;a href=&quot;#unittest.TestCase.setUp&quot;&gt; &lt;code&gt;setUp()&lt;/code&gt; &lt;/a&gt;成功的情况下才调用此方法，而不管测试方法的结果如何。默认实现不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="649399ca8ea45b90bb86cca66b9e51f7b179886c" translate="yes" xml:space="preserve">
          <source>Method called on an input line when the command prefix is not recognized. If this method is not overridden, it prints an error message and returns.</source>
          <target state="translated">当命令前缀未被识别时,在输入行上调用的方法。如果这个方法没有被覆盖,它会打印一个错误信息并返回。</target>
        </trans-unit>
        <trans-unit id="b83ae09e4143ec55d36cfc4cb6caafc420c049b4" translate="yes" xml:space="preserve">
          <source>Method called to complete an input line when no command-specific &lt;code&gt;complete_*()&lt;/code&gt; method is available. By default, it returns an empty list.</source>
          <target state="translated">当没有特定 &lt;code&gt;complete_*()&lt;/code&gt; 命令的complete _ *（）方法可用时，调用此方法以完成输入行。默认情况下，它返回一个空列表。</target>
        </trans-unit>
        <trans-unit id="e63efa71573eeb573342934f9e04a35f636518cc" translate="yes" xml:space="preserve">
          <source>Method called to prepare the test fixture. This is called after &lt;code&gt;setUp()&lt;/code&gt;. This is called immediately before calling the test method; other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, any exception raised by this method will be considered an error rather than a test failure. The default implementation does nothing.</source>
          <target state="translated">调用准备测试夹具的方法。在 &lt;code&gt;setUp()&lt;/code&gt; 之后调用此方法。在调用测试方法之前立即调用该方法。除了&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt;之外，此方法引发的任何异常都将被视为错误而不是测试失败。默认实现不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="8ba475e032ec26577941b02aa8180ec211fee641" translate="yes" xml:space="preserve">
          <source>Method called to prepare the test fixture. This is called immediately before calling the test method; other than &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#unittest.SkipTest&quot;&gt;&lt;code&gt;SkipTest&lt;/code&gt;&lt;/a&gt;, any exception raised by this method will be considered an error rather than a test failure. The default implementation does nothing.</source>
          <target state="translated">调用准备测试夹具的方法。在调用测试方法之前立即调用该方法。除了&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#unittest.SkipTest&quot;&gt; &lt;code&gt;SkipTest&lt;/code&gt; &lt;/a&gt;之外，此方法引发的任何异常都将被视为错误而不是测试失败。默认实现不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="37a3391d3e50f08fbc5f1dc6bfe9fb76fdbd1e6e" translate="yes" xml:space="preserve">
          <source>Method called when a processing instruction is encountered. The &lt;em&gt;data&lt;/em&gt; parameter will contain the entire processing instruction. For example, for the processing instruction &lt;code&gt;&amp;lt;?proc color='red'&amp;gt;&lt;/code&gt;, this method would be called as &lt;code&gt;handle_pi(&quot;proc color='red'&quot;)&lt;/code&gt;. It is intended to be overridden by a derived class; the base class implementation does nothing.</source>
          <target state="translated">遇到处理指令时调用的方法。该&lt;em&gt;数据&lt;/em&gt;参数将包含整个处理指令。例如，对于处理指令 &lt;code&gt;&amp;lt;?proc color='red'&amp;gt;&lt;/code&gt; ，此方法将称为 &lt;code&gt;handle_pi(&quot;proc color='red'&quot;)&lt;/code&gt; 。它旨在被派生类覆盖；基类实现不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="0288a5f7ccd8cc496ea12f8fbcdaa51a282fa56f" translate="yes" xml:space="preserve">
          <source>Method called when an empty line is entered in response to the prompt. If this method is not overridden, it repeats the last nonempty command entered.</source>
          <target state="translated">当输入空行以响应提示音时调用的方法。如果此方法没有被覆盖,它将重复上次输入的非空命令。</target>
        </trans-unit>
        <trans-unit id="e24fcca75d4001a50a3952dc15cf0af185ccf066" translate="yes" xml:space="preserve">
          <source>Method of</source>
          <target state="translated">方法</target>
        </trans-unit>
        <trans-unit id="c7659f5d6aa5a918feaa57fcebe08395c1db51d9" translate="yes" xml:space="preserve">
          <source>Method representing the process&amp;rsquo;s activity.</source>
          <target state="translated">表示流程活动的方法。</target>
        </trans-unit>
        <trans-unit id="599bc23d73a1edefe369be9db61c7ca34ff8a7cb" translate="yes" xml:space="preserve">
          <source>Method representing the thread&amp;rsquo;s activity.</source>
          <target state="translated">表示线程活动的方法。</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="8d4aa5000379004bcc4aff6105bab534cc12d577" translate="yes" xml:space="preserve">
          <source>Methods and attributes for &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;&amp;rsquo;s &amp;ldquo;Optional Platform-Specific File Handling&amp;rdquo; feature:</source>
          <target state="translated">&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-15&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;的&amp;ldquo;可选的特定于平台的文件处理&amp;rdquo;功能的方法和属性：</target>
        </trans-unit>
        <trans-unit id="0da2ffd7bd9a87acd1c5cd9576e17a1cb3b019f6" translate="yes" xml:space="preserve">
          <source>Methods and attributes for customizing exception handling:</source>
          <target state="translated">用于自定义异常处理的方法和属性。</target>
        </trans-unit>
        <trans-unit id="1f97bbd5be402e144dea36fabf7319751aeb1da1" translate="yes" xml:space="preserve">
          <source>Methods and properties</source>
          <target state="translated">方法和属性</target>
        </trans-unit>
        <trans-unit id="b954e3daaa50f78aaaff2c7fa0f441c94145e8b7" translate="yes" xml:space="preserve">
          <source>Methods and their defaults:</source>
          <target state="translated">方法及其默认值。</target>
        </trans-unit>
        <trans-unit id="7cc2af8c2f86f770582029b10e3b40de2255d2a7" translate="yes" xml:space="preserve">
          <source>Methods are functions that are called using the attribute notation. There are two flavors: built-in methods (such as &lt;code&gt;append()&lt;/code&gt; on lists) and class instance methods. Built-in methods are described with the types that support them.</source>
          <target state="translated">方法是使用属性符号调用的函数。有两种类型：内置方法（例如列表上的 &lt;code&gt;append()&lt;/code&gt; ）和类实例方法。描述了内置方法及其支持的类型。</target>
        </trans-unit>
        <trans-unit id="157469193b5d41d954e73f13258439fe6beb778e" translate="yes" xml:space="preserve">
          <source>Methods described in this subsections are low-level. In regular async/await code consider using the high-level &lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_shell&quot;&gt;&lt;code&gt;asyncio.create_subprocess_shell()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt;&lt;code&gt;asyncio.create_subprocess_exec()&lt;/code&gt;&lt;/a&gt; convenience functions instead.</source>
          <target state="translated">本小节中描述的方法是低级方法。在常规的异步/等待代码中，请考虑使用高级&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_shell&quot;&gt; &lt;code&gt;asyncio.create_subprocess_shell()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asyncio-subprocess#asyncio.create_subprocess_exec&quot;&gt; &lt;code&gt;asyncio.create_subprocess_exec()&lt;/code&gt; &lt;/a&gt;便捷函数。</target>
        </trans-unit>
        <trans-unit id="0965a16d87bebafaef05da87be1917226fdd0b9d" translate="yes" xml:space="preserve">
          <source>Methods implemented via descriptors that also pass one of the other tests return &lt;code&gt;False&lt;/code&gt; from the &lt;a href=&quot;#inspect.ismethoddescriptor&quot;&gt;&lt;code&gt;ismethoddescriptor()&lt;/code&gt;&lt;/a&gt; test, simply because the other tests promise more &amp;ndash; you can, e.g., count on having the &lt;code&gt;__func__&lt;/code&gt; attribute (etc) when an object passes &lt;a href=&quot;#inspect.ismethod&quot;&gt;&lt;code&gt;ismethod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过描述符执行的方法还通过了其他测试之一，则从&lt;a href=&quot;#inspect.ismethoddescriptor&quot;&gt; &lt;code&gt;ismethoddescriptor()&lt;/code&gt; &lt;/a&gt;测试返回 &lt;code&gt;False&lt;/code&gt; ，这仅仅是因为其他测试承诺了更多&amp;ndash;例如，当对象通过&lt;a href=&quot;#inspect.ismethod&quot;&gt; &lt;code&gt;ismethod()&lt;/code&gt; &lt;/a&gt;时，您可以指望拥有 &lt;code&gt;__func__&lt;/code&gt; 属性（等）。</target>
        </trans-unit>
        <trans-unit id="e9100cdec520f2115d829aad91ecbf2d3a3c46d0" translate="yes" xml:space="preserve">
          <source>Methods in the first group (running the test) are:</source>
          <target state="translated">第一组(运行测试)的方法是:</target>
        </trans-unit>
        <trans-unit id="5a45ab4a3e2a82c9598ef6d35c55326d75ba801c" translate="yes" xml:space="preserve">
          <source>Methods of RawTurtle/Turtle and corresponding functions</source>
          <target state="translated">RawTurtle/Turtle的方法和相应的函数。</target>
        </trans-unit>
        <trans-unit id="02c2ec68b20d39a2feafa7d1d898a028041eb4f1" translate="yes" xml:space="preserve">
          <source>Methods of TurtleScreen/Screen</source>
          <target state="translated">TurtleScreen/Screen的方法</target>
        </trans-unit>
        <trans-unit id="020f9d7bdaf4f831aeffeaaaeea5da2050a62b4e" translate="yes" xml:space="preserve">
          <source>Methods of TurtleScreen/Screen and corresponding functions</source>
          <target state="translated">TurtleScreen/Screen的方法和相应的功能。</target>
        </trans-unit>
        <trans-unit id="74870948cfdac56fe627ac3f9017759f080dd5ad" translate="yes" xml:space="preserve">
          <source>Methods specific to Screen</source>
          <target state="translated">特定于屏幕的方法</target>
        </trans-unit>
        <trans-unit id="ed10df094e649397ec44790d691389289e610494" translate="yes" xml:space="preserve">
          <source>Methods specific to Screen, not inherited from TurtleScreen</source>
          <target state="translated">Screen特有的方法,不从TurtleScreen继承。</target>
        </trans-unit>
        <trans-unit id="c659b6a8d84e8b57729160efb981e97738f69a55" translate="yes" xml:space="preserve">
          <source>Microsecond as a decimal number, zero-padded on the left.</source>
          <target state="translated">微秒为小数,左边垫零。</target>
        </trans-unit>
        <trans-unit id="27380d20cf0052fb068648454674c0487d921401" translate="yes" xml:space="preserve">
          <source>Mike Clarkson converted the documentation to LaTeX, and compiled the User Interface chapter of the reference manual.</source>
          <target state="translated">Mike Clarkson将文档转换为LaTeX,并编写了参考手册的用户界面一章。</target>
        </trans-unit>
        <trans-unit id="27af939f79765f408e27d70736e746c0d48d9a0c" translate="yes" xml:space="preserve">
          <source>Millisecond portion of the time when the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; was created.</source>
          <target state="translated">创建&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt;的时间的毫秒部分。</target>
        </trans-unit>
        <trans-unit id="dccbd93c0e8d8f9988adced2fe258f1e1532b0c5" translate="yes" xml:space="preserve">
          <source>MimeTypes Objects</source>
          <target state="translated">MimeTypes对象</target>
        </trans-unit>
        <trans-unit id="9efbdba622b2dadfd43fa42e2a291351db71d49c" translate="yes" xml:space="preserve">
          <source>Minimal number of days between changes</source>
          <target state="translated">变化之间的最少天数</target>
        </trans-unit>
        <trans-unit id="10937ed4b37b67fa14b13edd3d7e271abb8fa9aa" translate="yes" xml:space="preserve">
          <source>Minimum field width (optional). If specified as an &lt;code&gt;'*'&lt;/code&gt; (asterisk), the actual width is read from the next element of the tuple in &lt;em&gt;values&lt;/em&gt;, and the object to convert comes after the minimum field width and optional precision.</source>
          <target state="translated">最小字段宽度（可选）。如果指定为 &lt;code&gt;'*'&lt;/code&gt; （星号），则从&lt;em&gt;值&lt;/em&gt;的元组的下一个元素读取实际宽度，并且要转换的对象位于最小字段宽度和可选精度之后。</target>
        </trans-unit>
        <trans-unit id="b823f84a7a7baed339dafffa8b2988e08ee82d18" translate="yes" xml:space="preserve">
          <source>Minimum key value</source>
          <target state="translated">最小键值</target>
        </trans-unit>
        <trans-unit id="b9bea4e62057406a848ed5d0422b9238d8ab04ce" translate="yes" xml:space="preserve">
          <source>Minimum size in bytes</source>
          <target state="translated">最小尺寸(单位:字节)</target>
        </trans-unit>
        <trans-unit id="6506540f28a982451f07fe2b992f3fdcae62b53d" translate="yes" xml:space="preserve">
          <source>Minus corresponds to the unary prefix minus operator in Python.</source>
          <target state="translated">Minus对应于Python中的单数前缀减号运算符。</target>
        </trans-unit>
        <trans-unit id="2b6196c452bc75192cad3b9bbe7b45fccf953c66" translate="yes" xml:space="preserve">
          <source>Minute as a decimal number [00,59].</source>
          <target state="translated">分为十进制数[00,59]。</target>
        </trans-unit>
        <trans-unit id="04796ca1f6aacaabf17bb7220586582c19201712" translate="yes" xml:space="preserve">
          <source>Minute as a zero-padded decimal number.</source>
          <target state="translated">分作为一个零填充的十进制数。</target>
        </trans-unit>
        <trans-unit id="092f99ea11a34a8490e7a767a83a42fc45634f82" translate="yes" xml:space="preserve">
          <source>Minutes</source>
          <target state="translated">Minutes</target>
        </trans-unit>
        <trans-unit id="edb2ab561b48557288fb17a60a42f5fe203a8b9c" translate="yes" xml:space="preserve">
          <source>Minutes (zero-based)</source>
          <target state="translated">分钟(零基)</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="e34e8783c8b5d62f8e56a6c5cad9c3189996ba14" translate="yes" xml:space="preserve">
          <source>Miscellaneous Services</source>
          <target state="translated">杂项服务</target>
        </trans-unit>
        <trans-unit id="43274253a78afe031d6f6358c749c28e750ad3ba" translate="yes" xml:space="preserve">
          <source>Miscellaneous System Information</source>
          <target state="translated">杂项系统信息</target>
        </trans-unit>
        <trans-unit id="2cacc40bbba670255923cac65963686bb7f6e8fa" translate="yes" xml:space="preserve">
          <source>Miscellaneous Widgets</source>
          <target state="translated">杂项小工具</target>
        </trans-unit>
        <trans-unit id="b80881a19ff8cf751c3f41f6a0bbae4d2fa4b957" translate="yes" xml:space="preserve">
          <source>Miscellaneous methods and attributes:</source>
          <target state="translated">杂项方法和属性。</target>
        </trans-unit>
        <trans-unit id="1be5ce0f6da11db26ce77b075f6f409fed55bed0" translate="yes" xml:space="preserve">
          <source>Mitigating round-off error with increased precision</source>
          <target state="translated">提高精度,减少舍入误差</target>
        </trans-unit>
        <trans-unit id="fbb183ab6d5eb981bdb6b26cfc5bc04b44dbf9ef" translate="yes" xml:space="preserve">
          <source>Mix the given &lt;em&gt;bytes&lt;/em&gt; into the SSL pseudo-random number generator. The parameter &lt;em&gt;entropy&lt;/em&gt; (a float) is a lower bound on the entropy contained in string (so you can always use &lt;code&gt;0.0&lt;/code&gt;). See &lt;a href=&quot;https://tools.ietf.org/html/rfc1750.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1750&lt;/strong&gt;&lt;/a&gt; for more information on sources of entropy.</source>
          <target state="translated">将给定的&lt;em&gt;字节&lt;/em&gt;混合到SSL伪随机数生成器中。参数&lt;em&gt;entropy&lt;/em&gt;（浮点数）是字符串中包含的熵的下限（因此您始终可以使用 &lt;code&gt;0.0&lt;/code&gt; ）。有关熵源的更多信息，请参见&lt;a href=&quot;https://tools.ietf.org/html/rfc1750.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 1750&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08cde62b7bf975bbde5b97246a5722dd5b75c745" translate="yes" xml:space="preserve">
          <source>Mixer Device Objects</source>
          <target state="translated">混合器设备对象</target>
        </trans-unit>
        <trans-unit id="1cdbdedcba3074069f36e236c409fb7bd1ae38c6" translate="yes" xml:space="preserve">
          <source>Mixin Methods</source>
          <target state="translated">混合方法</target>
        </trans-unit>
        <trans-unit id="9cb6196c924e579cfebfa9d20714ab12efb27976" translate="yes" xml:space="preserve">
          <source>Mixin Methods and Properties</source>
          <target state="translated">混合方法和属性</target>
        </trans-unit>
        <trans-unit id="eff64571433b5d5f6c30bbfd893c2be61001c6a7" translate="yes" xml:space="preserve">
          <source>Mock Patching Methods</source>
          <target state="translated">模拟修补方法</target>
        </trans-unit>
        <trans-unit id="a3f6662904906028997ca7c9f0b62eded70f9d87" translate="yes" xml:space="preserve">
          <source>Mock allows you to assign functions (or other Mock instances) to magic methods and they will be called appropriately. The &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; class is just a Mock variant that has all of the magic methods pre-created for you (well, all the useful ones anyway).</source>
          <target state="translated">Mock允许您将函数（或其他Mock实例）分配给魔术方法，它们将被适当地调用。该&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;类仅仅是对你所有的魔术方法已经建好了（当然，所有有用的反正）进行模拟变体。</target>
        </trans-unit>
        <trans-unit id="cd40a569044d5954e317d074d7665541eb9c7c41" translate="yes" xml:space="preserve">
          <source>Mock for Method Calls on an Object</source>
          <target state="translated">对对象进行方法调用的Mock</target>
        </trans-unit>
        <trans-unit id="ad02912ae468a4be2e695c5d469c4a5f0380c99b" translate="yes" xml:space="preserve">
          <source>Mock has many other ways you can configure it and control its behaviour. For example the &lt;em&gt;spec&lt;/em&gt; argument configures the mock to take its specification from another object. Attempting to access attributes or methods on the mock that don&amp;rsquo;t exist on the spec will fail with an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">模拟还有许多其他方式可以配置和控制其行为。例如，&lt;em&gt;spec&lt;/em&gt;参数将模拟程序配置为从另一个对象获取其规范。尝试访问规范中不存在的模拟属性或方法将失败，并显示&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6465c7a575090539f19523ea47c493eba308187f" translate="yes" xml:space="preserve">
          <source>Mock is very easy to use and is designed for use with &lt;a href=&quot;unittest#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt;. Mock is based on the &amp;lsquo;action -&amp;gt; assertion&amp;rsquo; pattern instead of &amp;lsquo;record -&amp;gt; replay&amp;rsquo; used by many mocking frameworks.</source>
          <target state="translated">Mock非常易于使用，并且设计用于&lt;a href=&quot;unittest#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;。模拟基于&amp;ldquo;动作-&amp;gt;断言&amp;rdquo;模式，而不是许多模拟框架所使用的&amp;ldquo;记录-&amp;gt;重放&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a33279ac6a1d4f11a964719fd8b938904220c3f2" translate="yes" xml:space="preserve">
          <source>Mock names and the name attribute</source>
          <target state="translated">模拟名称和名称属性</target>
        </trans-unit>
        <trans-unit id="297d74ca0e3cf788f8845b7bffff3c689ae98bb8" translate="yes" xml:space="preserve">
          <source>Mock objects are callable. The call will return the value set as the &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt;&lt;code&gt;return_value&lt;/code&gt;&lt;/a&gt; attribute. The default return value is a new Mock object; it is created the first time the return value is accessed (either explicitly or by calling the Mock) - but it is stored and the same one returned each time.</source>
          <target state="translated">模拟对象是可调用的。该调用将返回设置为&lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt; &lt;code&gt;return_value&lt;/code&gt; &lt;/a&gt;属性的值。默认的返回值是一个新的Mock对象。它是在首次访问返回值（显式或通过调用Mock）时创建的-但是它被存储并且每次都返回相同的值。</target>
        </trans-unit>
        <trans-unit id="f9d9cf297397c83b1c1f81d316fa2ec3e341da36" translate="yes" xml:space="preserve">
          <source>Mock objects create attributes on demand. This allows them to pretend to be objects of any type.</source>
          <target state="translated">Mock对象可以根据需求创建属性。这使得它们可以假装成任何类型的对象。</target>
        </trans-unit>
        <trans-unit id="e775774d5b183cd27cc35f774581d60bd2a447c3" translate="yes" xml:space="preserve">
          <source>Mock objects that use a class or an instance as a &lt;code&gt;spec&lt;/code&gt; or &lt;code&gt;spec_set&lt;/code&gt; are able to pass &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; tests:</source>
          <target state="translated">使用类或实例作为 &lt;code&gt;spec&lt;/code&gt; 或 &lt;code&gt;spec_set&lt;/code&gt; 的模拟对象能够通过&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;测试：</target>
        </trans-unit>
        <trans-unit id="f9e1deeb7a9ee5f850fe86eecbde6fcdcdde263d" translate="yes" xml:space="preserve">
          <source>Mock subclasses and their attributes</source>
          <target state="translated">Mock子类及其属性</target>
        </trans-unit>
        <trans-unit id="7d6354b13984c9353fd8091e3574d84d2ae7bff2" translate="yes" xml:space="preserve">
          <source>Mock supports the mocking of Python &lt;a href=&quot;#magic-methods&quot;&gt;magic methods&lt;/a&gt;. The easiest way of using magic methods is with the &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; class. It allows you to do things like:</source>
          <target state="translated">Mock支持模拟Python &lt;a href=&quot;#magic-methods&quot;&gt;魔术方法&lt;/a&gt;。使用魔术方法的最简单方法是使用&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; &lt;/a&gt;类。它允许您执行以下操作：</target>
        </trans-unit>
        <trans-unit id="442dbf157ba95db3e914bc2e408149e5cd398207" translate="yes" xml:space="preserve">
          <source>Mocking Classes</source>
          <target state="translated">慕课</target>
        </trans-unit>
        <trans-unit id="9c8d301fe549f44ad1715a27813e8f92b2397116" translate="yes" xml:space="preserve">
          <source>Mocking Magic Methods</source>
          <target state="translated">嘲讽魔术方法</target>
        </trans-unit>
        <trans-unit id="c72f61e205c323791b33c0bccba66e2eb04fbb68" translate="yes" xml:space="preserve">
          <source>Mocking Unbound Methods</source>
          <target state="translated">嘲讽非绑定方法</target>
        </trans-unit>
        <trans-unit id="c0498faab975f9dec8b132168e6c508f7f74f956" translate="yes" xml:space="preserve">
          <source>Mocking a Generator Method</source>
          <target state="translated">嘲笑一个生成器方法</target>
        </trans-unit>
        <trans-unit id="631d0520a6e791d2c5663b5421225becab5962da" translate="yes" xml:space="preserve">
          <source>Mocking a dictionary with MagicMock</source>
          <target state="translated">用MagicMock嘲讽一本字典</target>
        </trans-unit>
        <trans-unit id="a35b06a5a88f1663407e0afcc28d593f48d020de" translate="yes" xml:space="preserve">
          <source>Mocking asynchronous context manager</source>
          <target state="translated">模拟异步上下文管理器</target>
        </trans-unit>
        <trans-unit id="9a90be214817c7625129004dae96c161fa6d1b8f" translate="yes" xml:space="preserve">
          <source>Mocking asynchronous iterators</source>
          <target state="translated">嘲讽异步迭代器</target>
        </trans-unit>
        <trans-unit id="21c9b59bfaaa2939d61edf0de7e54d2b77191fcb" translate="yes" xml:space="preserve">
          <source>Mocking chained calls</source>
          <target state="translated">嘲笑链式呼叫</target>
        </trans-unit>
        <trans-unit id="077151c5dfce974cc6f624aaa441016501984bcd" translate="yes" xml:space="preserve">
          <source>Mocking context managers with a &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; is common enough and fiddly enough that a helper function is useful.</source>
          <target state="translated">用&lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt; &lt;code&gt;MagicMock&lt;/code&gt; 模拟&lt;/a&gt;上下文管理器很常见，也很笨拙，以至于助手功能很有用。</target>
        </trans-unit>
        <trans-unit id="7c7ee5cc465310c6d4c3ad7b378ba9b12a5a62d8" translate="yes" xml:space="preserve">
          <source>Mocking imports with patch.dict</source>
          <target state="translated">用patch.dict模拟导入</target>
        </trans-unit>
        <trans-unit id="365779533ffb4a7f946eeb0ebce48c8d4a000a5b" translate="yes" xml:space="preserve">
          <source>Mocks can also be called with arbitrary keyword arguments. These will be used to set attributes on the mock after it is created. See the &lt;a href=&quot;#unittest.mock.Mock.configure_mock&quot;&gt;&lt;code&gt;configure_mock()&lt;/code&gt;&lt;/a&gt; method for details.</source>
          <target state="translated">还可以使用任意关键字参数来调用模仿。创建模拟后，将使用它们来设置属性。有关详细信息，请参见&lt;a href=&quot;#unittest.mock.Mock.configure_mock&quot;&gt; &lt;code&gt;configure_mock()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="2cbdd4fc62fd73dd9af51cb0370400f47d6de4ca" translate="yes" xml:space="preserve">
          <source>Mocks created for you by &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; are automatically given names. To attach mocks that have names to a parent you use the &lt;a href=&quot;#unittest.mock.Mock.attach_mock&quot;&gt;&lt;code&gt;attach_mock()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">由&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;为您创建的模拟文件会自动命名。要将具有名称的&lt;a href=&quot;#unittest.mock.Mock.attach_mock&quot;&gt; &lt;code&gt;attach_mock()&lt;/code&gt; &lt;/a&gt;附加到父级，请使用attach_mock（）方法：</target>
        </trans-unit>
        <trans-unit id="a7b93d2128e820f861fc8dfccd9f5521e89ad21f" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">Mode</target>
        </trans-unit>
        <trans-unit id="de84d7a663bae517f4b489470b51febd30e66c30" translate="yes" xml:space="preserve">
          <source>Mode &amp;ldquo;standard&amp;rdquo; is compatible with old &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt;. Mode &amp;ldquo;logo&amp;rdquo; is compatible with most Logo turtle graphics. Mode &amp;ldquo;world&amp;rdquo; uses user-defined &amp;ldquo;world coordinates&amp;rdquo;. &lt;strong&gt;Attention&lt;/strong&gt;: in this mode angles appear distorted if &lt;code&gt;x/y&lt;/code&gt; unit-ratio doesn&amp;rsquo;t equal 1.</source>
          <target state="translated">模式&amp;ldquo;标准&amp;rdquo;与旧&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;兼容。模式&amp;ldquo;徽标&amp;rdquo;与大多数徽标龟图形兼容。模式&amp;ldquo;世界&amp;rdquo;使用用户定义的&amp;ldquo;世界坐标&amp;rdquo;。&lt;strong&gt;注意&lt;/strong&gt;：在此模式下，如果 &lt;code&gt;x/y&lt;/code&gt; 单位比不等于1，则角度会失真。</target>
        </trans-unit>
        <trans-unit id="92d399cc66de7cf367f31ade723cb8b6691c5bdf" translate="yes" xml:space="preserve">
          <source>Models which represent a series of models which follow one after the other are indicated with this model type. This is used for models such as &lt;code&gt;(A, B, C)&lt;/code&gt;.</source>
          <target state="translated">用这种模型类型表示代表一系列彼此接连的模型的模型。这用于诸如 &lt;code&gt;(A, B, C)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59ce22dee5a92a32f030e3b34445688bcbabd4d7" translate="yes" xml:space="preserve">
          <source>Modern Tkinter for Busy Python Developers</source>
          <target state="translated">忙碌的Python开发者的现代Tkinter。</target>
        </trans-unit>
        <trans-unit id="59eeb274f6d5a5d8796b7fb0f22a558b81af0ba0" translate="yes" xml:space="preserve">
          <source>Modern macOS versions are fully supported.</source>
          <target state="translated">完全支持现代macOS版本。</target>
        </trans-unit>
        <trans-unit id="77c81a24b3232f4341cb83b7f39ce945fe4ff3fb" translate="yes" xml:space="preserve">
          <source>Modified by the user</source>
          <target state="translated">由用户修改</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="32cd9ef050293cc9b2ea16140453d0cb9eba9e0e" translate="yes" xml:space="preserve">
          <source>Modifies an already registered fd. This has the same effect as &lt;code&gt;register(fd, eventmask)&lt;/code&gt;. Attempting to modify a file descriptor that was never registered causes an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; exception with errno &lt;code&gt;ENOENT&lt;/code&gt; to be raised.</source>
          <target state="translated">修改已注册的fd。这与 &lt;code&gt;register(fd, eventmask)&lt;/code&gt; 具有相同的效果。尝试修改从未注册的文件描述符会导致&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;异常，并引发errno &lt;code&gt;ENOENT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6cc4f46aa243a25741c6b3f64809ea24113b97cc" translate="yes" xml:space="preserve">
          <source>Modifies the message and/or keyword arguments passed to a logging call in order to insert contextual information. This implementation takes the object passed as &lt;em&gt;extra&lt;/em&gt; to the constructor and adds it to &lt;em&gt;kwargs&lt;/em&gt; using key &amp;lsquo;extra&amp;rsquo;. The return value is a (&lt;em&gt;msg&lt;/em&gt;, &lt;em&gt;kwargs&lt;/em&gt;) tuple which has the (possibly modified) versions of the arguments passed in.</source>
          <target state="translated">修改传递给日志记录调用的消息和/或关键字参数，以插入上下文信息。此实现将传递给构造函数的对象作为&lt;em&gt;额外&lt;/em&gt;对象，并使用键&amp;ldquo; extra&amp;rdquo; 将其添加到&lt;em&gt;kwargs中&lt;/em&gt;。返回值是一个（&lt;em&gt;msg&lt;/em&gt;，&lt;em&gt;kwargs&lt;/em&gt;）元组，具有传入的（可能已修改的）参数版本。</target>
        </trans-unit>
        <trans-unit id="32de46524638c4aca576e999a7d9c22055939413" translate="yes" xml:space="preserve">
          <source>Modify a registered file descriptor.</source>
          <target state="translated">修改已注册的文件描述符。</target>
        </trans-unit>
        <trans-unit id="3fd4218c1234d8d4fd1679ae718d689ef01b2df1" translate="yes" xml:space="preserve">
          <source>Modify attributes of the font.</source>
          <target state="translated">修改字体的属性。</target>
        </trans-unit>
        <trans-unit id="4578c669df0697b22dfd8c519fd4e58ce7cdd60a" translate="yes" xml:space="preserve">
          <source>Modify or inquire widget state. If &lt;em&gt;statespec&lt;/em&gt; is specified, sets the widget state according to it and return a new &lt;em&gt;statespec&lt;/em&gt; indicating which flags were changed. If &lt;em&gt;statespec&lt;/em&gt; is not specified, returns the currently-enabled state flags.</source>
          <target state="translated">修改或查询窗口小部件状态。如果指定了&lt;em&gt;statespec，&lt;/em&gt;则根据其设置窗口小部件状态，并返回一个新的&lt;em&gt;statespec来&lt;/em&gt;指示更改了哪些标志。如果未指定&lt;em&gt;statespec&lt;/em&gt;，则返回当前启用的状态标志。</target>
        </trans-unit>
        <trans-unit id="0e86176ca1442040dd82f620317ec50cbc92d6c8" translate="yes" xml:space="preserve">
          <source>Modify the filename of a log file when rotating.</source>
          <target state="translated">旋转时修改日志文件的文件名。</target>
        </trans-unit>
        <trans-unit id="bf1c865f30cbb3976816405737bd964fbc2fa0de" translate="yes" xml:space="preserve">
          <source>Modify the view, by calling &lt;code&gt;MsiViewModify()&lt;/code&gt;. &lt;em&gt;kind&lt;/em&gt; can be one of &lt;code&gt;MSIMODIFY_SEEK&lt;/code&gt;, &lt;code&gt;MSIMODIFY_REFRESH&lt;/code&gt;, &lt;code&gt;MSIMODIFY_INSERT&lt;/code&gt;, &lt;code&gt;MSIMODIFY_UPDATE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_ASSIGN&lt;/code&gt;, &lt;code&gt;MSIMODIFY_REPLACE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_MERGE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_DELETE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_INSERT_TEMPORARY&lt;/code&gt;, &lt;code&gt;MSIMODIFY_VALIDATE&lt;/code&gt;, &lt;code&gt;MSIMODIFY_VALIDATE_NEW&lt;/code&gt;, &lt;code&gt;MSIMODIFY_VALIDATE_FIELD&lt;/code&gt;, or &lt;code&gt;MSIMODIFY_VALIDATE_DELETE&lt;/code&gt;.</source>
          <target state="translated">通过调用 &lt;code&gt;MsiViewModify()&lt;/code&gt; 来修改视图。&lt;em&gt;一种&lt;/em&gt;可以是一个 &lt;code&gt;MSIMODIFY_SEEK&lt;/code&gt; ， &lt;code&gt;MSIMODIFY_REFRESH&lt;/code&gt; ， &lt;code&gt;MSIMODIFY_INSERT&lt;/code&gt; ， &lt;code&gt;MSIMODIFY_UPDATE&lt;/code&gt; ， &lt;code&gt;MSIMODIFY_ASSIGN&lt;/code&gt; ， &lt;code&gt;MSIMODIFY_REPLACE&lt;/code&gt; ， &lt;code&gt;MSIMODIFY_MERGE&lt;/code&gt; ， &lt;code&gt;MSIMODIFY_DELETE&lt;/code&gt; ， &lt;code&gt;MSIMODIFY_INSERT_TEMPORARY&lt;/code&gt; ， &lt;code&gt;MSIMODIFY_VALIDATE&lt;/code&gt; ， &lt;code&gt;MSIMODIFY_VALIDATE_NEW&lt;/code&gt; ， &lt;code&gt;MSIMODIFY_VALIDATE_FIELD&lt;/code&gt; ，或 &lt;code&gt;MSIMODIFY_VALIDATE_DELETE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf8f52d6faa8b1275eba9c831dbbef1ed90879cc" translate="yes" xml:space="preserve">
          <source>Modifying an XML File</source>
          <target state="translated">修改XML文件</target>
        </trans-unit>
        <trans-unit id="84c3d768a8d5770c62abdea208959d6592bb41c2" translate="yes" xml:space="preserve">
          <source>Modifying this dictionary does not affect the string environment passed on by &lt;a href=&quot;os#os.execv&quot;&gt;&lt;code&gt;execv()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt;; if you need to change the environment, pass &lt;code&gt;environ&lt;/code&gt; to &lt;a href=&quot;os#os.execve&quot;&gt;&lt;code&gt;execve()&lt;/code&gt;&lt;/a&gt; or add variable assignments and export statements to the command string for &lt;a href=&quot;os#os.system&quot;&gt;&lt;code&gt;system()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.popen&quot;&gt;&lt;code&gt;popen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">修改此字典不会影响&lt;a href=&quot;os#os.execv&quot;&gt; &lt;code&gt;execv()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;os#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt;传递的字符串环境；如果您需要更改环境，请将 &lt;code&gt;environ&lt;/code&gt; 传递给&lt;a href=&quot;os#os.execve&quot;&gt; &lt;code&gt;execve()&lt;/code&gt; &lt;/a&gt;或添加变量分配，并将语句导出到&lt;a href=&quot;os#os.system&quot;&gt; &lt;code&gt;system()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;os#os.popen&quot;&gt; &lt;code&gt;popen()&lt;/code&gt; &lt;/a&gt;的命令字符串。</target>
        </trans-unit>
        <trans-unit id="978b5a43a650471c75f8350ef7774ba329f2f3fe" translate="yes" xml:space="preserve">
          <source>Module (name portion of &lt;code&gt;filename&lt;/code&gt;).</source>
          <target state="translated">模块（ &lt;code&gt;filename&lt;/code&gt; 的名称部分）。</target>
        </trans-unit>
        <trans-unit id="b4a2aa27448f7d0da42e7887a48a75e0b25fb6eb" translate="yes" xml:space="preserve">
          <source>Module &lt;a href=&quot;#module-aifc&quot;&gt;&lt;code&gt;aifc&lt;/code&gt;&lt;/a&gt; defines the following function:</source>
          <target state="translated">模块&lt;a href=&quot;#module-aifc&quot;&gt; &lt;code&gt;aifc&lt;/code&gt; &lt;/a&gt;定义以下功能：</target>
        </trans-unit>
        <trans-unit id="2e90a7416ba8632b458a1755a2a52518580a6402" translate="yes" xml:space="preserve">
          <source>Module &lt;a href=&quot;site#module-site&quot;&gt;&lt;code&gt;site&lt;/code&gt;&lt;/a&gt; This describes how to use .pth files to extend &lt;a href=&quot;#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">模块&lt;a href=&quot;site#module-site&quot;&gt; &lt;code&gt;site&lt;/code&gt; &lt;/a&gt;这描述了如何使用.pth文件扩展&lt;a href=&quot;#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ee83fed2e8bf53e577b314dd959ae5c55d31275" translate="yes" xml:space="preserve">
          <source>Module API</source>
          <target state="translated">模块API</target>
        </trans-unit>
        <trans-unit id="9c3f2aba6913de8da00faed8e2df2428bb1257b7" translate="yes" xml:space="preserve">
          <source>Module Attributes</source>
          <target state="translated">模块属性</target>
        </trans-unit>
        <trans-unit id="d4c1069b1d33fd7a5bbcf140560e3a8a4cc1d1fd" translate="yes" xml:space="preserve">
          <source>Module Contents</source>
          <target state="translated">模块内容</target>
        </trans-unit>
        <trans-unit id="6395f8327bd07812babbe38b248c6564d3e3499a" translate="yes" xml:space="preserve">
          <source>Module Functions</source>
          <target state="translated">模块功能</target>
        </trans-unit>
        <trans-unit id="34bdda02dde5bc12bbc7235959c04177e16c821e" translate="yes" xml:space="preserve">
          <source>Module Interface</source>
          <target state="translated">模块接口</target>
        </trans-unit>
        <trans-unit id="92fdd8d530e964e456294b900fa883ff826caa46" translate="yes" xml:space="preserve">
          <source>Module and package deprecation messages are suppressed during this import if &lt;em&gt;deprecated&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">如果模块和封装弃用消息这个导入期间抑制&lt;em&gt;弃用&lt;/em&gt;是 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37e90fc9b9d2ea5592629e3ac0763109ff09df33" translate="yes" xml:space="preserve">
          <source>Module and package deprecation messages are suppressed during this import if &lt;em&gt;deprecated&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;. If a module is required on a platform but optional for others, set &lt;em&gt;required_on&lt;/em&gt; to an iterable of platform prefixes which will be compared against &lt;a href=&quot;sys#sys.platform&quot;&gt;&lt;code&gt;sys.platform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果模块和封装弃用消息这个导入期间抑制&lt;em&gt;弃用&lt;/em&gt;是 &lt;code&gt;True&lt;/code&gt; 。如果平台上需要模块，而其他模块是可选的，则将&lt;em&gt;required_on&lt;/em&gt;设置为可迭代的平台前缀，并将其与&lt;a href=&quot;sys#sys.platform&quot;&gt; &lt;code&gt;sys.platform&lt;/code&gt; &lt;/a&gt;进行比较。</target>
        </trans-unit>
        <trans-unit id="8fb52752185bff1afa3095dd1ee054b10a8741dd" translate="yes" xml:space="preserve">
          <source>Module contents</source>
          <target state="translated">模块内容</target>
        </trans-unit>
        <trans-unit id="92e9d0a965eb0a3f69212e87aeb376c3817bace5" translate="yes" xml:space="preserve">
          <source>Module docs for core modules are assumed to reside in &lt;code&gt;https://docs.python.org/X.Y/library/&lt;/code&gt; where &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; are the major and minor version numbers of the Python interpreter. This can be overridden by setting the &lt;code id=&quot;index-2&quot;&gt;PYTHONDOCS&lt;/code&gt; environment variable to a different URL or to a local directory containing the Library Reference Manual pages.</source>
          <target state="translated">假定核心模块的模块文档位于 &lt;code&gt;https://docs.python.org/X.Y/library/&lt;/code&gt; ，其中 &lt;code&gt;X&lt;/code&gt; 和 &lt;code&gt;Y&lt;/code&gt; 是Python解释器的主要和次要版本号。通过将 &lt;code id=&quot;index-2&quot;&gt;PYTHONDOCS&lt;/code&gt; 环境变量设置为其他URL或包含&amp;ldquo;图书馆参考手册&amp;rdquo;页面的本地目录，可以覆盖此设置。</target>
        </trans-unit>
        <trans-unit id="1ef1dd98e4cfd7a9708f2569eff22f5637fb8bc6" translate="yes" xml:space="preserve">
          <source>Module functions and constants</source>
          <target state="translated">模块功能和常量</target>
        </trans-unit>
        <trans-unit id="9ef7884387f3e4f0b36275d92cdf793323d304a1" translate="yes" xml:space="preserve">
          <source>Module which provides function to parse and escape command lines.</source>
          <target state="translated">提供解析和转义命令行功能的模块。</target>
        </trans-unit>
        <trans-unit id="c383a8897cd1716700d1c6ce4d55ad2fcebbab29" translate="yes" xml:space="preserve">
          <source>Module-Level Attributes</source>
          <target state="translated">模块级属性</target>
        </trans-unit>
        <trans-unit id="f6833370d46becabc41cf08b0e482dee5c655b31" translate="yes" xml:space="preserve">
          <source>Module-Level Functions</source>
          <target state="translated">模块级功能</target>
        </trans-unit>
        <trans-unit id="72f4be7481838d35b49b8de2e9a7fee6249d8e61" translate="yes" xml:space="preserve">
          <source>Module-level decorators, classes, and functions</source>
          <target state="translated">模块级装饰器、类和函数</target>
        </trans-unit>
        <trans-unit id="0912cb95ac0d180a81219825c72ec9eb605ea300" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.application&lt;/code&gt;</source>
          <target state="translated">模块： &lt;code&gt;email.mime.application&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb79c7e1617398068225f2820c0c3459cc440e65" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.audio&lt;/code&gt;</source>
          <target state="translated">模组： &lt;code&gt;email.mime.audio&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94725cd99078c801f5574ad6d6ea78ee9a024ea3" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.base&lt;/code&gt;</source>
          <target state="translated">模块： &lt;code&gt;email.mime.base&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ea4be398009cc8d6de590b862d7f3009c1b810f" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.image&lt;/code&gt;</source>
          <target state="translated">模块： &lt;code&gt;email.mime.image&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93b775199744840d67da16eb9ccb4cd9bbae2050" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.message&lt;/code&gt;</source>
          <target state="translated">模块： &lt;code&gt;email.mime.message&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="441e7562ed5fe7a1630841c1a22bdc73a4f3d757" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.multipart&lt;/code&gt;</source>
          <target state="translated">模块： &lt;code&gt;email.mime.multipart&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d510569ecc8d71a91a86a65c09928a0f4ef8f5d5" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.nonmultipart&lt;/code&gt;</source>
          <target state="translated">模块： &lt;code&gt;email.mime.nonmultipart&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="127f26a281cad66280273f6515132d982225e9cf" translate="yes" xml:space="preserve">
          <source>Module: &lt;code&gt;email.mime.text&lt;/code&gt;</source>
          <target state="translated">模块： &lt;code&gt;email.mime.text&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4dc7c7ee2e220614ae05c4256b05b12812ad8cf9" translate="yes" xml:space="preserve">
          <source>ModuleNotFoundError</source>
          <target state="translated">ModuleNotFoundError</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="7ce8b9ff9d2e4b6f5530707c5224f523b8323151" translate="yes" xml:space="preserve">
          <source>Modules &lt;a href=&quot;tkinter.messagebox#module-tkinter.messagebox&quot;&gt;&lt;code&gt;tkinter.messagebox&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/tutorial/inputoutput.html#tut-files&quot;&gt;Reading and Writing Files&lt;/a&gt;</source>
          <target state="translated">模块&lt;a href=&quot;tkinter.messagebox#module-tkinter.messagebox&quot;&gt; &lt;code&gt;tkinter.messagebox&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.9/tutorial/inputoutput.html#tut-files&quot;&gt;读写文件&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e118e0912a01f24a429ac2012ae97cc544249d59" translate="yes" xml:space="preserve">
          <source>Modules built into the interpreter are written like this: &lt;code&gt;&amp;lt;module 'sys'
(built-in)&amp;gt;&lt;/code&gt;. If loaded from a file, they are written as &lt;code&gt;&amp;lt;module 'os' from
'/usr/local/lib/pythonX.Y/os.pyc'&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">解释器中内置的模块的编写方式如下： &lt;code&gt;&amp;lt;module 'sys' (built-in)&amp;gt;&lt;/code&gt; 。如果从文件加载，它们将从 &lt;code&gt;&amp;lt;module 'os' from '/usr/local/lib/pythonX.Y/os.pyc'&amp;gt;&lt;/code&gt; 编写为&amp;lt;module'os'。</target>
        </trans-unit>
        <trans-unit id="1911b7883b819819b6db37c8e8e2824d20e1cc32" translate="yes" xml:space="preserve">
          <source>Modules or packages can customize how tests are loaded from them during normal test runs or test discovery by implementing a function called &lt;code&gt;load_tests&lt;/code&gt;.</source>
          <target state="translated">模块或软件包可以通过实现一个称为 &lt;code&gt;load_tests&lt;/code&gt; 的功能来自定义在正常测试运行或测试发现期间如何从中加载测试。</target>
        </trans-unit>
        <trans-unit id="87a40520b4026078c79efca77f06437b79124739" translate="yes" xml:space="preserve">
          <source>Modulo</source>
          <target state="translated">Modulo</target>
        </trans-unit>
        <trans-unit id="5d0d78dc5224fd4f6862f5f7a9fb54a486fd390b" translate="yes" xml:space="preserve">
          <source>Monitor for completion with a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">使用 &lt;code&gt;for&lt;/code&gt; 循环监视完成情况。</target>
        </trans-unit>
        <trans-unit id="ed5abdf1184868f05915cfc662a0097b73af5db0" translate="yes" xml:space="preserve">
          <source>Monitor for completion.</source>
          <target state="translated">监测完成情况。</target>
        </trans-unit>
        <trans-unit id="496c793822576e70e527412a984554382d2aebe7" translate="yes" xml:space="preserve">
          <source>Month (one-based)</source>
          <target state="translated">月(单价)</target>
        </trans-unit>
        <trans-unit id="742b33d400ddeeabce686bc1c2413ddb0c448e2a" translate="yes" xml:space="preserve">
          <source>Month as a decimal number [01,12].</source>
          <target state="translated">月份为十进制数[01,12]。</target>
        </trans-unit>
        <trans-unit id="f2ebd646406d99068e09d2f4e14fbbffed228a7d" translate="yes" xml:space="preserve">
          <source>Month as a zero-padded decimal number.</source>
          <target state="translated">月份为零填充的十进制数。</target>
        </trans-unit>
        <trans-unit id="4b69dcb0d93760210c273e2a1abcde796903be87" translate="yes" xml:space="preserve">
          <source>Month as locale&amp;rsquo;s abbreviated name.</source>
          <target state="translated">月作为语言环境的缩写名称。</target>
        </trans-unit>
        <trans-unit id="fea5423e8f5a25290885c0d0e12a775f3fd61281" translate="yes" xml:space="preserve">
          <source>Month as locale&amp;rsquo;s full name.</source>
          <target state="translated">月作为语言环境的全名。</target>
        </trans-unit>
        <trans-unit id="e202399e2af6ae3d8e2fdbf89c95c2518eee70d8" translate="yes" xml:space="preserve">
          <source>More advanced customization may be achieved by overriding default values of these parser attributes. The defaults are defined on the classes, so they may be overridden by subclasses or by attribute assignment.</source>
          <target state="translated">通过覆盖这些解析器属性的默认值,可以实现更高级的自定义。默认值是在类上定义的,所以它们可以被子类或属性分配所覆盖。</target>
        </trans-unit>
        <trans-unit id="76f2ac8fa6191d0a7752f0403130e23050b322b6" translate="yes" xml:space="preserve">
          <source>More complex argument matching</source>
          <target state="translated">更复杂的参数匹配</target>
        </trans-unit>
        <trans-unit id="a4edbe5aa58310b4837dc402b6725527f1000abe" translate="yes" xml:space="preserve">
          <source>More condensed:</source>
          <target state="translated">更加凝练。</target>
        </trans-unit>
        <trans-unit id="af27293770923a34ccc5524c23d8989922e0488b" translate="yes" xml:space="preserve">
          <source>More details of &lt;code&gt;hexversion&lt;/code&gt; can be found at &lt;a href=&quot;https://docs.python.org/3.8/c-api/apiabiversion.html#apiabiversion&quot;&gt;API and ABI Versioning&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;hexversion&lt;/code&gt; 的更多详细信息可以在&lt;a href=&quot;https://docs.python.org/3.8/c-api/apiabiversion.html#apiabiversion&quot;&gt;API和ABI版本控制中找到&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bea97050a9753fa861ba82b70cd980e773dd094e" translate="yes" xml:space="preserve">
          <source>More details of &lt;code&gt;hexversion&lt;/code&gt; can be found at &lt;a href=&quot;https://docs.python.org/3.9/c-api/apiabiversion.html#apiabiversion&quot;&gt;API and ABI Versioning&lt;/a&gt;.</source>
          <target state="translated">可以在&lt;a href=&quot;https://docs.python.org/3.9/c-api/apiabiversion.html#apiabiversion&quot;&gt;API和ABI版本控制中&lt;/a&gt;找到 &lt;code&gt;hexversion&lt;/code&gt; 的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="35c58ae0fd8a7e1329fa05386d5d2de6a083afbd" translate="yes" xml:space="preserve">
          <source>More drawing control</source>
          <target state="translated">更多图纸控制</target>
        </trans-unit>
        <trans-unit id="f73f1a20168b82e8d86b3b46baab234a74659e99" translate="yes" xml:space="preserve">
          <source>More examples of working with &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;更多示例：</target>
        </trans-unit>
        <trans-unit id="bda595d7c3822cdddfd4e7f95e4ba1fe77eef18d" translate="yes" xml:space="preserve">
          <source>More information about color spaces can be found at &lt;a href=&quot;http://poynton.ca/ColorFAQ.html&quot;&gt;http://poynton.ca/ColorFAQ.html&lt;/a&gt; and &lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&lt;/a&gt;.</source>
          <target state="translated">有关颜色空间的更多信息，&lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;请&lt;/a&gt;访问&lt;a href=&quot;http://poynton.ca/ColorFAQ.html&quot;&gt;http://poynton.ca/ColorFAQ.html&lt;/a&gt;和https://www.cambridgeincolour.com/tutorials/color-spaces.htm。</target>
        </trans-unit>
        <trans-unit id="ebd0327ac3aa99b06dcfeba3d93e47172fbb094e" translate="yes" xml:space="preserve">
          <source>More information about color spaces can be found at &lt;a href=&quot;https://poynton.ca/ColorFAQ.html&quot;&gt;https://poynton.ca/ColorFAQ.html&lt;/a&gt; and &lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&lt;/a&gt;.</source>
          <target state="translated">有关色彩空间的更多信息，&lt;a href=&quot;https://poynton.ca/ColorFAQ.html&quot;&gt;请&lt;/a&gt;访问https://poynton.ca/ColorFAQ.html和&lt;a href=&quot;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&quot;&gt;https://www.cambridgeincolour.com/tutorials/color-spaces.htm&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1cf8e91c8e08ed18b8e45a5ac7ba72687719075d" translate="yes" xml:space="preserve">
          <source>More information about this feature, including a list of recognized options, can be found in the &lt;a href=&quot;https://www.sqlite.org/uri.html&quot;&gt;SQLite URI documentation&lt;/a&gt;.</source>
          <target state="translated">有关此功能的更多信息，包括公认选项的列表，可以在&lt;a href=&quot;https://www.sqlite.org/uri.html&quot;&gt;SQLite URI文档中找到&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f7f884738e96b308c393050b48c8b8755a6d24c" translate="yes" xml:space="preserve">
          <source>More object-oriented interface to dates and times.</source>
          <target state="translated">更多面向对象的日期和时间接口。</target>
        </trans-unit>
        <trans-unit id="b4302b5e109b770c6a0ea76fbd2882a8bc6db8b6" translate="yes" xml:space="preserve">
          <source>More picklability</source>
          <target state="translated">更多腌制性</target>
        </trans-unit>
        <trans-unit id="0d62cf081bc641ff89c8b59069e0d5d811e8757a" translate="yes" xml:space="preserve">
          <source>More precisely, if &lt;code&gt;x&lt;/code&gt; is nonzero, then &lt;code&gt;x.bit_length()&lt;/code&gt; is the unique positive integer &lt;code&gt;k&lt;/code&gt; such that &lt;code&gt;2**(k-1) &amp;lt;= abs(x) &amp;lt; 2**k&lt;/code&gt;. Equivalently, when &lt;code&gt;abs(x)&lt;/code&gt; is small enough to have a correctly rounded logarithm, then &lt;code&gt;k = 1 + int(log(abs(x), 2))&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is zero, then &lt;code&gt;x.bit_length()&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">更准确地说，如果 &lt;code&gt;x&lt;/code&gt; 为非零，则 &lt;code&gt;x.bit_length()&lt;/code&gt; 是唯一的正整数 &lt;code&gt;k&lt;/code&gt; ，使得 &lt;code&gt;2**(k-1) &amp;lt;= abs(x) &amp;lt; 2**k&lt;/code&gt; 。等效地，当 &lt;code&gt;abs(x)&lt;/code&gt; 足够小以具有正确舍入的对数时，则 &lt;code&gt;k = 1 + int(log(abs(x), 2))&lt;/code&gt; 。如果 &lt;code&gt;x&lt;/code&gt; 为零，则 &lt;code&gt;x.bit_length()&lt;/code&gt; 返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ced1f1a5abe7721a13a8ffbf16d63ff492b8f140" translate="yes" xml:space="preserve">
          <source>More precisely, the expression &lt;code&gt;some_value is Derived(some_value)&lt;/code&gt; is always true at runtime.</source>
          <target state="translated">更准确地说，表达式 &lt;code&gt;some_value is Derived(some_value)&lt;/code&gt; 在运行时始终为true。</target>
        </trans-unit>
        <trans-unit id="afcfcf646cf0d59e75aa3efa0a7dca7907775b81" translate="yes" xml:space="preserve">
          <source>More sophisticated context managers may be &amp;ldquo;reentrant&amp;rdquo;. These context managers can not only be used in multiple &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements, but may also be used &lt;em&gt;inside&lt;/em&gt; a &lt;code&gt;with&lt;/code&gt; statement that is already using the same context manager.</source>
          <target state="translated">更复杂的上下文管理器可能是&amp;ldquo;可重入的&amp;rdquo;。这些上下文管理器不仅可以在多个&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句中使用，而且还可以&lt;em&gt;在&lt;/em&gt;已经在使用同一上下文管理器的 &lt;code&gt;with&lt;/code&gt; 语句&lt;em&gt;内部&lt;/em&gt;使用。</target>
        </trans-unit>
        <trans-unit id="05a30554854e73f54c7ece4a3f1e002fd46afc4d" translate="yes" xml:space="preserve">
          <source>More sophisticated context managers may be &amp;ldquo;reentrant&amp;rdquo;. These context managers can not only be used in multiple &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statements, but may also be used &lt;em&gt;inside&lt;/em&gt; a &lt;code&gt;with&lt;/code&gt; statement that is already using the same context manager.</source>
          <target state="translated">更复杂的上下文管理器可能是&amp;ldquo;可重入的&amp;rdquo;。这些上下文管理器不仅可以在多个&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句中使用，而且还可以&lt;em&gt;在&lt;/em&gt;已经在使用同一上下文管理器的 &lt;code&gt;with&lt;/code&gt; 语句&lt;em&gt;内部&lt;/em&gt;使用。</target>
        </trans-unit>
        <trans-unit id="bec52d0bf3df1fe2b7028c4e46728b05b6585a7b" translate="yes" xml:space="preserve">
          <source>More sophisticated specification of which elements to look for is possible by using &lt;a href=&quot;#elementtree-xpath&quot;&gt;XPath&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;#elementtree-xpath&quot;&gt;XPath&lt;/a&gt;可以更精确地指定要查找的元素。</target>
        </trans-unit>
        <trans-unit id="44cce591f12835a93d72e2725773defea428923d" translate="yes" xml:space="preserve">
          <source>Moreover, by subclassing a special class &lt;a href=&quot;#typing.Protocol&quot;&gt;&lt;code&gt;Protocol&lt;/code&gt;&lt;/a&gt;, a user can define new custom protocols to fully enjoy structural subtyping (see examples below).</source>
          <target state="translated">此外，通过将特殊类&lt;a href=&quot;#typing.Protocol&quot;&gt; &lt;code&gt;Protocol&lt;/code&gt; &lt;/a&gt;子类化，用户可以定义新的自定义协议以充分享受结构化子类型化（请参见下面的示例）。</target>
        </trans-unit>
        <trans-unit id="c7c6427f00dc397938f8e9415a2f590774699402" translate="yes" xml:space="preserve">
          <source>Moreover, if you output the 0&amp;rsquo;th item on disk and get an input which may not fit in the current tournament (because the value &amp;ldquo;wins&amp;rdquo; over the last output value), it cannot fit in the heap, so the size of the heap decreases. The freed memory could be cleverly reused immediately for progressively building a second heap, which grows at exactly the same rate the first heap is melting. When the first heap completely vanishes, you switch heaps and start a new run. Clever and quite effective!</source>
          <target state="translated">此外，如果您在磁盘上输出第0个项目并获得了可能不适合当前锦标赛的输入（因为值&amp;ldquo;胜过&amp;rdquo;了最后一个输出值），则它无法容纳在堆中，因此，堆减少。可以立即巧妙地重用释放的内存，以逐步构建第二个堆，该堆的增长速度与第一个堆正在融化的速度完全相同。当第一个堆完全消失时，切换堆并开始新的运行。聪明又有效！</target>
        </trans-unit>
        <trans-unit id="223a97db4a13581b9f40926ba9bf06631a533426" translate="yes" xml:space="preserve">
          <source>Morsel Objects</source>
          <target state="translated">Morsel Objects</target>
        </trans-unit>
        <trans-unit id="aab9d541f9999319a8925c74373dfaf9120edff4" translate="yes" xml:space="preserve">
          <source>Morsels are dictionary-like objects, whose set of keys is constant &amp;mdash; the valid &lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt; attributes, which are</source>
          <target state="translated">杂项是类字典的对象，其键集是恒定的，即有效的&lt;a href=&quot;https://tools.ietf.org/html/rfc2109.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2109&lt;/strong&gt;&lt;/a&gt;属性，即</target>
        </trans-unit>
        <trans-unit id="12e365ba43d20a735f475457d6d67ad170f2ddc0" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; actions add some value as an attribute of the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt;. The name of this attribute is determined by the &lt;code&gt;dest&lt;/code&gt; keyword argument of &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;. For positional argument actions, &lt;code&gt;dest&lt;/code&gt; is normally supplied as the first argument to &lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt;&lt;code&gt;add_argument()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">大多数&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;操作会添加一些值作为&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;返回的对象的属性。此属性的名称由&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;dest&lt;/code&gt; 关键字参数确定。对于位置参数操作，通常将 &lt;code&gt;dest&lt;/code&gt; 作为第一个参数提供给&lt;a href=&quot;#argparse.ArgumentParser.add_argument&quot;&gt; &lt;code&gt;add_argument()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="0b8a1ba8e18b5f5019a5d4312dc314b8b2c9954f" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclasses should be able to inherit the default &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; implementation without problems. It&amp;rsquo;s strong enough to handle fixed-offset time zones, and time zones accounting for both standard and daylight time, and the latter even if the DST transition times differ in different years. An example of a time zone the default &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; implementation may not handle correctly in all cases is one where the standard offset (from UTC) depends on the specific date and time passed, which can happen for political reasons. The default implementations of &lt;code&gt;astimezone()&lt;/code&gt; and &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;fromutc()&lt;/code&gt;&lt;/a&gt; may not produce the result you want if the result is one of the hours straddling the moment the standard offset changes.</source>
          <target state="translated">大多数&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;子类都应该能够继承默认的&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt;实现，而不会出现问题。它具有足够的能力来处理固定偏移的时区，并且时区同时考虑了标准时间和夏令时，即使DST转换时间在不同年份有所不同，后者也是如此。默认的&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt;实现可能无法在所有情况下正确处理的时区示例是标准偏移量（来自UTC）取决于所经过的特定日期和时间的情况，这可能是出于政治原因。如果 &lt;code&gt;astimezone()&lt;/code&gt; 和&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;fromutc()&lt;/code&gt; &lt;/a&gt;的默认实现是标准偏移量发生变化的时间之一，则可能不会产生您想要的结果。</target>
        </trans-unit>
        <trans-unit id="fa3c05e44820db4266ade0ef0b637c16f15b20d4" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;#ssl.SSLSocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt; methods will raise either &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; if an I/O operation would block. &lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt;&lt;code&gt;SSLWantReadError&lt;/code&gt;&lt;/a&gt; will be raised if a read operation on the underlying socket is necessary, and &lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt;&lt;code&gt;SSLWantWriteError&lt;/code&gt;&lt;/a&gt; for a write operation on the underlying socket. Note that attempts to &lt;em&gt;write&lt;/em&gt; to an SSL socket may require &lt;em&gt;reading&lt;/em&gt; from the underlying socket first, and attempts to &lt;em&gt;read&lt;/em&gt; from the SSL socket may require a prior &lt;em&gt;write&lt;/em&gt; to the underlying socket.</source>
          <target state="translated">如果I / O操作会阻塞，大多数&lt;a href=&quot;#ssl.SSLSocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;方法将引发&lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#ssl.SSLWantReadError&quot;&gt; &lt;code&gt;SSLWantReadError&lt;/code&gt; &lt;/a&gt;如果底层套接字进行读操作是必要的，而且将提高&lt;a href=&quot;#ssl.SSLWantWriteError&quot;&gt; &lt;code&gt;SSLWantWriteError&lt;/code&gt; &lt;/a&gt;为基础套接字上的写操作。需要注意的是试图&lt;em&gt;写&lt;/em&gt;至SSL套接字可能需要&lt;em&gt;读取&lt;/em&gt;从底层插座中，并试图&lt;em&gt;读取&lt;/em&gt;从SSL套接字可能要求之前&lt;em&gt;写入&lt;/em&gt;到底层插座。</target>
        </trans-unit>
        <trans-unit id="bd522bac8b9e11ce49eeb2583e8f07839a03488c" translate="yes" xml:space="preserve">
          <source>Most &lt;a href=&quot;asyncio#module-asyncio&quot;&gt;&lt;code&gt;asyncio&lt;/code&gt;&lt;/a&gt; scheduling functions don&amp;rsquo;t allow passing keyword arguments. To do that, use &lt;a href=&quot;functools#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">大多数&lt;a href=&quot;asyncio#module-asyncio&quot;&gt; &lt;code&gt;asyncio&lt;/code&gt; &lt;/a&gt;调度功能都不允许传递关键字参数。为此，请使用&lt;a href=&quot;functools#functools.partial&quot;&gt; &lt;code&gt;functools.partial()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="bd51bb63feffbfa7148f18472384cc0b94c13ee7" translate="yes" xml:space="preserve">
          <source>Most HTTP servers buffer the output from CGI scripts until the script is completed. This means that it is not possible to display a progress report on the client&amp;rsquo;s display while the script is running.</source>
          <target state="translated">大多数HTTP服务器会缓冲CGI脚本的输出，直到脚本完成为止。这意味着在脚本运行时无法在客户端的显示器上显示进度报告。</target>
        </trans-unit>
        <trans-unit id="89262a759f5c4450ccbba1d7e972a20eb9d6f62d" translate="yes" xml:space="preserve">
          <source>Most Python users will &lt;em&gt;not&lt;/em&gt; want to use this module directly, but instead use the cross-version tools maintained by the Python Packaging Authority. In particular, &lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;setuptools&lt;/a&gt; is an enhanced alternative to &lt;a href=&quot;#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; that provides:</source>
          <target state="translated">大多数Python用户将&lt;em&gt;不&lt;/em&gt;希望直接使用这个模块，而是使用由Python包装管理局保持跨版本的工具。特别是，&lt;a href=&quot;https://setuptools.readthedocs.io/en/latest/&quot;&gt;setuptools&lt;/a&gt;是&lt;a href=&quot;#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt;的增强替代方案，它提供：</target>
        </trans-unit>
        <trans-unit id="b4ff9c4f943c838658554972d2715c1911832530" translate="yes" xml:space="preserve">
          <source>Most built-in types implement the following options for format specifications, although some of the formatting options are only supported by the numeric types.</source>
          <target state="translated">大多数内置类型实现了以下格式规范的选项,尽管有些格式选项只被数字类型所支持。</target>
        </trans-unit>
        <trans-unit id="4671a5faa2bb50d6521e2b74a0ac603b3e8ea2c0" translate="yes" xml:space="preserve">
          <source>Most built-in types support a common formatting mini-language, which is described in the next section.</source>
          <target state="translated">大多数内置类型都支持一种通用的格式化小语言,下一节将对其进行描述。</target>
        </trans-unit>
        <trans-unit id="9f333f2038f1ecde46179e5361647a36ea955c1a" translate="yes" xml:space="preserve">
          <source>Most calls to the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; constructor will use the &lt;code&gt;description=&lt;/code&gt; keyword argument. This argument gives a brief description of what the program does and how it works. In help messages, the description is displayed between the command-line usage string and the help messages for the various arguments:</source>
          <target state="translated">对&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;构造函数的大多数调用将使用 &lt;code&gt;description=&lt;/code&gt; 关键字参数。该参数简要说明了程序的功能及其工作方式。在帮助消息中，描述显示在命令行用法字符串和各种参数的帮助消息之间：</target>
        </trans-unit>
        <trans-unit id="d721b333c77edec8818b7d94960eeed847aceea5" translate="yes" xml:space="preserve">
          <source>Most command-line options will use &lt;code&gt;-&lt;/code&gt; as the prefix, e.g. &lt;code&gt;-f/--foo&lt;/code&gt;. Parsers that need to support different or additional prefix characters, e.g. for options like &lt;code&gt;+f&lt;/code&gt; or &lt;code&gt;/foo&lt;/code&gt;, may specify them using the &lt;code&gt;prefix_chars=&lt;/code&gt; argument to the ArgumentParser constructor:</source>
          <target state="translated">大多数命令行选项将使用 &lt;code&gt;-&lt;/code&gt; 作为前缀，例如 &lt;code&gt;-f/--foo&lt;/code&gt; 。需要支持不同或其他前缀字符的解析器，例如 &lt;code&gt;+f&lt;/code&gt; 或 &lt;code&gt;/foo&lt;/code&gt; 之类的选项，可以使用ArgumentParser构造函数的 &lt;code&gt;prefix_chars=&lt;/code&gt; 参数指定它们：</target>
        </trans-unit>
        <trans-unit id="8c59d2f4304b47bbe5f9025fc2719f37eb21fc59" translate="yes" xml:space="preserve">
          <source>Most commands are available as &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;tkinter.ttk#module-tkinter.ttk&quot;&gt;&lt;code&gt;tkinter.ttk&lt;/code&gt;&lt;/a&gt; classes. Change &amp;lsquo;8.6&amp;rsquo; to match the version of your Tcl/Tk installation.</source>
          <target state="translated">大多数命令可以通过&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;tkinter.ttk#module-tkinter.ttk&quot;&gt; &lt;code&gt;tkinter.ttk&lt;/code&gt; &lt;/a&gt;类。更改&amp;ldquo; 8.6&amp;rdquo;以匹配您的Tcl / Tk安装版本。</target>
        </trans-unit>
        <trans-unit id="09e1be6a3a08fdd80447facaa6e35fc4dcf067a7" translate="yes" xml:space="preserve">
          <source>Most configuration options apply to all windows or all future windows. The option items below only apply to the active window.</source>
          <target state="translated">大多数配置选项适用于所有窗口或所有未来窗口。以下选项项仅适用于活动窗口。</target>
        </trans-unit>
        <trans-unit id="5d738b94492588389087414a01d9272752be1e6c" translate="yes" xml:space="preserve">
          <source>Most context managers are written in a way that means they can only be used effectively in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement once. These single use context managers must be created afresh each time they&amp;rsquo;re used - attempting to use them a second time will trigger an exception or otherwise not work correctly.</source>
          <target state="translated">大多数上下文管理器的编写方式意味着它们只能在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句中有效地使用一次。这些一次性使用的上下文管理器必须在每次使用时都重新创建-尝试再次使用它们将触发异常，否则将无法正常工作。</target>
        </trans-unit>
        <trans-unit id="23350a9beba010cf4d08f3543501ebbc29d7d449" translate="yes" xml:space="preserve">
          <source>Most context managers are written in a way that means they can only be used effectively in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement once. These single use context managers must be created afresh each time they&amp;rsquo;re used - attempting to use them a second time will trigger an exception or otherwise not work correctly.</source>
          <target state="translated">大多数上下文管理器的编写方式意味着它们只能在&lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句中有效地使用一次。这些一次性使用的上下文管理器必须在每次使用时都重新创建-再次尝试使用它们会触发异常，否则将无法正常工作。</target>
        </trans-unit>
        <trans-unit id="acd4fa21da07450f40a52f6949201b55436a1a6a" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt;&lt;code&gt;dst()&lt;/code&gt;&lt;/a&gt; will probably look like one of these two:</source>
          <target state="translated">&lt;a href=&quot;#datetime.tzinfo.dst&quot;&gt; &lt;code&gt;dst()&lt;/code&gt; 的&lt;/a&gt;大多数实现可能看起来像这两个之一：</target>
        </trans-unit>
        <trans-unit id="aea2023d714ec31a854470fd3ecf8d9355c053c4" translate="yes" xml:space="preserve">
          <source>Most importantly, a good understanding of the Python grammar processed by the internal parser is required. For full information on the language syntax, refer to &lt;a href=&quot;https://docs.python.org/3.8/reference/index.html#reference-index&quot;&gt;The Python Language Reference&lt;/a&gt;. The parser itself is created from a grammar specification defined in the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the standard Python distribution. The parse trees stored in the ST objects created by this module are the actual output from the internal parser when created by the &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; functions, described below. The ST objects created by &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt; faithfully simulate those structures. Be aware that the values of the sequences which are considered &amp;ldquo;correct&amp;rdquo; will vary from one version of Python to another as the formal grammar for the language is revised. However, transporting code from one Python version to another as source text will always allow correct parse trees to be created in the target version, with the only restriction being that migrating to an older version of the interpreter will not support more recent language constructs. The parse trees are not typically compatible from one version to another, though source code has usually been forward-compatible within a major release series.</source>
          <target state="translated">最重要的是，需要对内部解析器处理的Python语法有充分的了解。有关语言语法的完整信息，请参见&lt;a href=&quot;https://docs.python.org/3.8/reference/index.html#reference-index&quot;&gt;《 Python语言参考》&lt;/a&gt;。解析器本身是根据标准Python发行版中文件 &lt;code&gt;Grammar/Grammar&lt;/code&gt; 中定义的语法规范创建的。当由&lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt;函数创建时，此模块创建的ST对象中存储的解析树是内部解析器的实际输出，如下所述。由&lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt;创建的ST对象忠实地模拟那些结构。请注意，随着Python正式语法的修订，被认为是&amp;ldquo;正确&amp;rdquo;的序列的值在一个版本的Python中会有所不同。但是，将代码从一个Python版本传输到另一个Python版本作为源文本将始终允许在目标版本中创建正确的解析树，唯一的限制是迁移到较旧版本的解释器将不支持较新的语言构造。尽管源代码在主要发行系列中通常是前向兼容的，但解析树通常无法从一个版本到另一个版本兼容。</target>
        </trans-unit>
        <trans-unit id="9a4d8998d8b1d8d4c5a06a28620ed45ee9d8c662" translate="yes" xml:space="preserve">
          <source>Most importantly, a good understanding of the Python grammar processed by the internal parser is required. For full information on the language syntax, refer to &lt;a href=&quot;https://docs.python.org/3.9/reference/index.html#reference-index&quot;&gt;The Python Language Reference&lt;/a&gt;. The parser itself is created from a grammar specification defined in the file &lt;code&gt;Grammar/Grammar&lt;/code&gt; in the standard Python distribution. The parse trees stored in the ST objects created by this module are the actual output from the internal parser when created by the &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; functions, described below. The ST objects created by &lt;a href=&quot;#parser.sequence2st&quot;&gt;&lt;code&gt;sequence2st()&lt;/code&gt;&lt;/a&gt; faithfully simulate those structures. Be aware that the values of the sequences which are considered &amp;ldquo;correct&amp;rdquo; will vary from one version of Python to another as the formal grammar for the language is revised. However, transporting code from one Python version to another as source text will always allow correct parse trees to be created in the target version, with the only restriction being that migrating to an older version of the interpreter will not support more recent language constructs. The parse trees are not typically compatible from one version to another, though source code has usually been forward-compatible within a major release series.</source>
          <target state="translated">最重要的是，需要对内部解析器处理的Python语法有一个很好的了解。有关语言语法的完整信息，请参见&lt;a href=&quot;https://docs.python.org/3.9/reference/index.html#reference-index&quot;&gt;《 Python语言参考》&lt;/a&gt;。解析器本身是根据标准Python发行版中文件 &lt;code&gt;Grammar/Grammar&lt;/code&gt; 中定义的语法规范创建的。当由&lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt;函数创建时，此模块创建的ST对象中存储的解析树是内部解析器的实际输出，如下所述。由&lt;a href=&quot;#parser.sequence2st&quot;&gt; &lt;code&gt;sequence2st()&lt;/code&gt; &lt;/a&gt;创建的ST对象忠实地模拟这些结构。请注意，随着Python正式语法的修订，被认为&amp;ldquo;正确&amp;rdquo;的序列的值在一个版本的Python中会有所不同。但是，将代码从一个Python版本传输到另一个Python版本作为源文本将始终允许在目标版本中创建正确的解析树，唯一的限制是迁移到较旧版本的解释器将不支持较新的语言构造。尽管源代码在主要发行系列中通常是前向兼容的，但解析树通常无法从一个版本到另一个版本兼容。</target>
        </trans-unit>
        <trans-unit id="91b41d0992c76daa7e6ce1cb34f492287f10c4f0" translate="yes" xml:space="preserve">
          <source>Most locales do not define this value. An example of a locale which does define this value is the Japanese one. In Japan, the traditional representation of dates includes the name of the era corresponding to the then-emperor&amp;rsquo;s reign.</source>
          <target state="translated">大多数语言环境未定义此值。定义此值的语言环境的一个示例是日语。在日本，日期的传统表示法包括当时皇帝统治时期的时代名称。</target>
        </trans-unit>
        <trans-unit id="7e2559cd2f7c66c93f9db240a7fc5efb17e9d6cc" translate="yes" xml:space="preserve">
          <source>Most messages with a content type of &lt;em&gt;message/*&lt;/em&gt; (such as &lt;em&gt;message/delivery-status&lt;/em&gt; and &lt;em&gt;message/rfc822&lt;/em&gt;) will also be parsed as container object containing a list payload of length 1. Their &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt; method will return &lt;code&gt;True&lt;/code&gt;. The single element yielded by &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt; will be a sub-message object.</source>
          <target state="translated">大多数内容类型为&lt;em&gt;message / *&lt;/em&gt;的&lt;em&gt;消息&lt;/em&gt;（例如&lt;em&gt;message / delivery-status&lt;/em&gt;和&lt;em&gt;message / rfc822&lt;/em&gt;）也将被解析为包含长度为1的列表有效负载的容器对象。它们的&lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;方法将返回 &lt;code&gt;True&lt;/code&gt; 。由&lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt;产生的单个元素将是一个子消息对象。</target>
        </trans-unit>
        <trans-unit id="0bbab5f6cfbae51ba73420b5d82749fd2992f95e" translate="yes" xml:space="preserve">
          <source>Most non-&lt;em&gt;multipart&lt;/em&gt; type messages are parsed as a single message object with a string payload. These objects will return &lt;code&gt;False&lt;/code&gt; for &lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt;&lt;code&gt;is_multipart()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt;&lt;code&gt;iter_parts()&lt;/code&gt;&lt;/a&gt; will yield an empty list.</source>
          <target state="translated">大多数非&lt;em&gt;多部分&lt;/em&gt;类型的消息都被解析为带有字符串有效负载的单个消息对象。这些对象将返回 &lt;code&gt;False&lt;/code&gt; 的&lt;a href=&quot;email.message#email.message.EmailMessage.is_multipart&quot;&gt; &lt;code&gt;is_multipart()&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;email.message#email.message.EmailMessage.iter_parts&quot;&gt; &lt;code&gt;iter_parts()&lt;/code&gt; &lt;/a&gt;将产生一个空列表。</target>
        </trans-unit>
        <trans-unit id="c2841625ce82d29906f55ae50358119d7bcc13ad" translate="yes" xml:space="preserve">
          <source>Most of connection oriented event loop methods (such as &lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;loop.create_connection()&lt;/code&gt;&lt;/a&gt;) usually accept a &lt;em&gt;protocol_factory&lt;/em&gt; argument used to create a &lt;em&gt;Protocol&lt;/em&gt; object for an accepted connection, represented by a &lt;em&gt;Transport&lt;/em&gt; object. Such methods usually return a tuple of &lt;code&gt;(transport, protocol)&lt;/code&gt;.</source>
          <target state="translated">大多数面向连接的事件循环方法（例如&lt;a href=&quot;asyncio-eventloop#asyncio.loop.create_connection&quot;&gt; &lt;code&gt;loop.create_connection()&lt;/code&gt; &lt;/a&gt;）通常都接受一个&lt;em&gt;protocol_factory&lt;/em&gt;参数，该参数用于为一个接受的连接创建一个&lt;em&gt;Protocol&lt;/em&gt;对象，该对象由&lt;em&gt;Transport&lt;/em&gt;对象表示。这样的方法通常返回 &lt;code&gt;(transport, protocol)&lt;/code&gt; 的元组。</target>
        </trans-unit>
        <trans-unit id="81f7d7d5c7660933a30dd70b5115a9493350bf31" translate="yes" xml:space="preserve">
          <source>Most of the examples in this section refer to a Turtle instance called &lt;code&gt;turtle&lt;/code&gt;.</source>
          <target state="translated">大多数本节中的示例引用称为龟实例 &lt;code&gt;turtle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00f06901ce4c8554bb321be3baaa0d6f5ae7c8b3" translate="yes" xml:space="preserve">
          <source>Most of the examples in this section refer to a TurtleScreen instance called &lt;code&gt;screen&lt;/code&gt;.</source>
          <target state="translated">本节中的大多数示例都引用了一个名为 &lt;code&gt;screen&lt;/code&gt; 的TurtleScreen实例。</target>
        </trans-unit>
        <trans-unit id="6a2fb976c0f061ef5f5627769d911fef317c03b7" translate="yes" xml:space="preserve">
          <source>Most of the random module&amp;rsquo;s algorithms and seeding functions are subject to change across Python versions, but two aspects are guaranteed not to change:</source>
          <target state="translated">大多数随机模块的算法和种子函数在Python版本之间可能会发生变化，但保证有两个方面不变：</target>
        </trans-unit>
        <trans-unit id="7745b7926e51bd60c61099df7ea2085b449eedf0" translate="yes" xml:space="preserve">
          <source>Most of the standard escapes supported by Python string literals are also accepted by the regular expression parser:</source>
          <target state="translated">Python 字符支持的大多数标准转义也被正则表达式解析器所接受。</target>
        </trans-unit>
        <trans-unit id="566d54a039879a714c6a3632228f8ac12ebf75df" translate="yes" xml:space="preserve">
          <source>Most of the time, &lt;a href=&quot;#module-tkinter&quot;&gt;&lt;code&gt;tkinter&lt;/code&gt;&lt;/a&gt; is all you really need, but a number of additional modules are available as well. The Tk interface is located in a binary module named &lt;code&gt;_tkinter&lt;/code&gt;. This module contains the low-level interface to Tk, and should never be used directly by application programmers. It is usually a shared library (or DLL), but might in some cases be statically linked with the Python interpreter.</source>
          <target state="translated">大多数时候，&lt;a href=&quot;#module-tkinter&quot;&gt; &lt;code&gt;tkinter&lt;/code&gt; &lt;/a&gt;才是您真正需要的，但是也可以使用许多其他模块。Tk接口位于名为 &lt;code&gt;_tkinter&lt;/code&gt; 的二进制模块中。该模块包含到Tk的低级接口，并且绝对不能被应用程序程序员直接使用。它通常是一个共享库（或DLL），但在某些情况下可能与Python解释器静态链接。</target>
        </trans-unit>
        <trans-unit id="cd5bad467beb5b7fbd87a238c1288e8d07b19cf1" translate="yes" xml:space="preserve">
          <source>Most of the time, the attributes of the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will be fully determined by inspecting the command-line arguments and the argument actions. &lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt;&lt;code&gt;set_defaults()&lt;/code&gt;&lt;/a&gt; allows some additional attributes that are determined without any inspection of the command line to be added:</source>
          <target state="translated">在大多数情况下，&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;返回的对象的属性将通过检查命令行参数和参数操作来完全确定。&lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt; &lt;code&gt;set_defaults()&lt;/code&gt; &lt;/a&gt;允许添加一些无需检查命令行即可确定的其他属性：</target>
        </trans-unit>
        <trans-unit id="1089f5c7ed3d0c68bfe01bebe0674b2ea0fa5e89" translate="yes" xml:space="preserve">
          <source>Most of these reflect information in the XML document that is not of general utility to most DOM users.</source>
          <target state="translated">其中大部分反映了XML文档中的信息,这些信息对大多数DOM用户来说并不具有普遍的效用。</target>
        </trans-unit>
        <trans-unit id="13b592a4e1b821b7d19f58aba800d1b83c05c87f" translate="yes" xml:space="preserve">
          <source>Most often, CGI scripts live in the server&amp;rsquo;s special &lt;code&gt;cgi-bin&lt;/code&gt; directory. The HTTP server places all sorts of information about the request (such as the client&amp;rsquo;s hostname, the requested URL, the query string, and lots of other goodies) in the script&amp;rsquo;s shell environment, executes the script, and sends the script&amp;rsquo;s output back to the client.</source>
          <target state="translated">通常，CGI脚本位于服务器的特殊 &lt;code&gt;cgi-bin&lt;/code&gt; 目录中。 HTTP服务器将有关请求的各种信息（例如客户端的主机名，请求的URL，查询字符串以及许多其他东西）放置在脚本的外壳环境中，执行脚本，并将脚本的输出发送回给客户。</target>
        </trans-unit>
        <trans-unit id="84948582795acb691856110e5ae66ef32acdd219" translate="yes" xml:space="preserve">
          <source>Most parsing functions provided by this module require the whole document to be read at once before returning any result. It is possible to use an &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; and feed data into it incrementally, but it is a push API that calls methods on a callback target, which is too low-level and inconvenient for most needs. Sometimes what the user really wants is to be able to parse XML incrementally, without blocking operations, while enjoying the convenience of fully constructed &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">此模块提供的大多数解析功能都要求在返回任何结果之前立即读取整个文档。可以使用&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;并以增量方式将数据馈入其中，但这是一个推API，它在回调目标上调用方法，该方法太底层了，对于大多数需求而言不方便。有时，用户真正想要的是能够逐步解析XML，而不会阻塞操作，同时享受完全构造的&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;对象的便利。</target>
        </trans-unit>
        <trans-unit id="793641b11ec9edf6536ef14e14a17a202ba37fd0" translate="yes" xml:space="preserve">
          <source>Most programs adjust the current context only once, at the beginning of the program. And, in many applications, data is converted to &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; with a single cast inside a loop. With context set and decimals created, the bulk of the program manipulates the data no differently than with other Python numeric types.</source>
          <target state="translated">大多数程序在程序开始时只调整一次当前上下文。而且，在许多应用程序中，只需在循环内进行一次&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;转换就可以将数据转换为十进制。创建上下文集和创建小数后，程序的大部分操作数据便与使用其他Python数字类型一样。</target>
        </trans-unit>
        <trans-unit id="bed33f38a8121d67d831a08ac6160cf7fca8b25f" translate="yes" xml:space="preserve">
          <source>Most programs should find that using one of these weak container types or &lt;a href=&quot;#weakref.finalize&quot;&gt;&lt;code&gt;finalize&lt;/code&gt;&lt;/a&gt; is all they need &amp;ndash; it&amp;rsquo;s not usually necessary to create your own weak references directly. The low-level machinery is exposed by the &lt;a href=&quot;#module-weakref&quot;&gt;&lt;code&gt;weakref&lt;/code&gt;&lt;/a&gt; module for the benefit of advanced uses.</source>
          <target state="translated">大多数程序应该发现，只需要使用这些弱容器类型之一或&lt;a href=&quot;#weakref.finalize&quot;&gt; &lt;code&gt;finalize&lt;/code&gt; &lt;/a&gt;操作即可&amp;ndash;通常不必直接创建自己的弱引用。&lt;a href=&quot;#module-weakref&quot;&gt; &lt;code&gt;weakref&lt;/code&gt; &lt;/a&gt;模块将低级机械暴露在外，以实现高级用途。</target>
        </trans-unit>
        <trans-unit id="1e33a7247ba2cdbfe9e4c5eadcda0b6fb6940dfb" translate="yes" xml:space="preserve">
          <source>Most tkinter programs run &lt;code&gt;root.mainloop()&lt;/code&gt;, which usually does not return until the tk app is destroyed. If the program is run with &lt;code&gt;python -i&lt;/code&gt; or from an IDLE editor, a &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; shell prompt does not appear until &lt;code&gt;mainloop()&lt;/code&gt; returns, at which time there is nothing left to interact with.</source>
          <target state="translated">大多数 &lt;code&gt;root.mainloop()&lt;/code&gt; 程序运行root.mainloop（），它通常在tk应用程序被销毁之前不会返回。如果程序是使用 &lt;code&gt;python -i&lt;/code&gt; 或从IDLE编辑器运行的，则在 &lt;code&gt;mainloop()&lt;/code&gt; 返回之前， &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; shell提示符不会出现，此时没有任何可交互的内容。</target>
        </trans-unit>
        <trans-unit id="467bcc5b3e2170db615ed243a7771ae192662925" translate="yes" xml:space="preserve">
          <source>Most users should use &lt;a href=&quot;subprocess#subprocess.run&quot;&gt;&lt;code&gt;subprocess.run()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#os.posix_spawn&quot;&gt;&lt;code&gt;posix_spawn()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">大多数用户应使用&lt;a href=&quot;subprocess#subprocess.run&quot;&gt; &lt;code&gt;subprocess.run()&lt;/code&gt; &lt;/a&gt;代替&lt;a href=&quot;#os.posix_spawn&quot;&gt; &lt;code&gt;posix_spawn()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7022d092d568159a8deb2f5345b042987cdc731a" translate="yes" xml:space="preserve">
          <source>Mouse event has occurred</source>
          <target state="translated">鼠标事件已经发生</target>
        </trans-unit>
        <trans-unit id="76cdb950721642b6b8596d36d5a39f7705028b99" translate="yes" xml:space="preserve">
          <source>Move</source>
          <target state="translated">Move</target>
        </trans-unit>
        <trans-unit id="59b381f9ae62e71a6e656f888600974d66a2a445" translate="yes" xml:space="preserve">
          <source>Move a &lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt;/&lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt; pyc file to its legacy pyc location and return the file system path to the legacy pyc file. The &lt;em&gt;source&lt;/em&gt; value is the file system path to the source file. It does not need to exist, however the PEP 3147/488 pyc file must exist.</source>
          <target state="translated">将&lt;a href=&quot;https://www.python.org/dev/peps/pep-3147&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3147&lt;/strong&gt;&lt;/a&gt; / &lt;a href=&quot;https://www.python.org/dev/peps/pep-0488&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 488&lt;/strong&gt;&lt;/a&gt; pyc文件移动到其旧版pyc位置，然后将文件系统路径返​​回到旧版pyc文件。的&lt;em&gt;源&lt;/em&gt;值是文件系统路径的源文件。它不需要存在，但是PEP 3147/488 pyc文件必须存在。</target>
        </trans-unit>
        <trans-unit id="34fb02884cc45eb332edf96e82c7d3d89690c570" translate="yes" xml:space="preserve">
          <source>Move an existing &lt;em&gt;key&lt;/em&gt; to either end of an ordered dictionary. The item is moved to the right end if &lt;em&gt;last&lt;/em&gt; is true (the default) or to the beginning if &lt;em&gt;last&lt;/em&gt; is false. Raises &lt;a href=&quot;exceptions#KeyError&quot;&gt;&lt;code&gt;KeyError&lt;/code&gt;&lt;/a&gt; if the &lt;em&gt;key&lt;/em&gt; does not exist:</source>
          <target state="translated">将现有&lt;em&gt;键&lt;/em&gt;移到有序字典的任一端。该项目被移动到右端，如果&lt;em&gt;最后&lt;/em&gt;是真（默认），或一开始，如果&lt;em&gt;最后一个&lt;/em&gt;是假的。如果&lt;em&gt;密钥&lt;/em&gt;不存在，则引发&lt;a href=&quot;exceptions#KeyError&quot;&gt; &lt;code&gt;KeyError&lt;/code&gt; &lt;/a&gt;：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a9241b7a62db251595ec94a8670f8492cc79c5f0" translate="yes" xml:space="preserve">
          <source>Move and draw</source>
          <target state="translated">移动和绘制</target>
        </trans-unit>
        <trans-unit id="ef3b0cebd03fd191bbc4cb8897a06eaaba33d4fe" translate="yes" xml:space="preserve">
          <source>Move cursor to &lt;code&gt;(new_y, new_x)&lt;/code&gt;.</source>
          <target state="translated">将光标移动到 &lt;code&gt;(new_y, new_x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="601b26f56eb7f3dd5627e0542377e2380db7e481" translate="yes" xml:space="preserve">
          <source>Move cursor to the line number requested and make that line visible.</source>
          <target state="translated">将光标移动到所要求的行号,使该行可见。</target>
        </trans-unit>
        <trans-unit id="00de7b574f0ca4dca2db05f7ac95cf8fa926cd45" translate="yes" xml:space="preserve">
          <source>Move operations do nothing if the cursor is at an edge where the movement is not possible. The following synonyms are supported where possible:</source>
          <target state="translated">如果光标在一个不可能移动的边缘,移动操作将不做任何操作。在可能的情况下,我们支持以下同义词。</target>
        </trans-unit>
        <trans-unit id="f14c08ec9cc70b053ef1452c74150f8bece0b93f" translate="yes" xml:space="preserve">
          <source>Move the current frame &lt;em&gt;count&lt;/em&gt; (default one) levels down in the stack trace (to a newer frame).</source>
          <target state="translated">移动当前帧&lt;em&gt;计数&lt;/em&gt;（默认的）水平向下在堆栈跟踪（到较新的帧）。</target>
        </trans-unit>
        <trans-unit id="1f999beea6e1d8614d33e214187f8c14de783371" translate="yes" xml:space="preserve">
          <source>Move the current frame &lt;em&gt;count&lt;/em&gt; (default one) levels up in the stack trace (to an older frame).</source>
          <target state="translated">在堆栈跟踪中将当前帧&lt;em&gt;计数&lt;/em&gt;（默认为一个）上移（至较旧的帧）。</target>
        </trans-unit>
        <trans-unit id="cbcadba9b748dd50e27e7929dd7eba8bdc251d08" translate="yes" xml:space="preserve">
          <source>Move the cursor to the beginning of the line requested and make that line visible. A request past the end of the file goes to the end. Clear any selection and update the line and column status.</source>
          <target state="translated">将光标移动到请求行的开头,使该行可见。过了文件末尾的请求会进入末尾。清除任何选择并更新行和列的状态。</target>
        </trans-unit>
        <trans-unit id="bddc2d8cac88c0e16d0d15e699390e1c93202c14" translate="yes" xml:space="preserve">
          <source>Move the panel to the screen coordinates &lt;code&gt;(y, x)&lt;/code&gt;.</source>
          <target state="translated">将面板移至屏幕坐标 &lt;code&gt;(y, x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="366616b5769d49d8c4989ea2123f0635dfd476c9" translate="yes" xml:space="preserve">
          <source>Move the turtle backward by &lt;em&gt;distance&lt;/em&gt;, opposite to the direction the turtle is headed. Do not change the turtle&amp;rsquo;s heading.</source>
          <target state="translated">向后移动乌龟&lt;em&gt;一定距离&lt;/em&gt;，与乌龟前进的方向相反。不要改变乌龟的方向。</target>
        </trans-unit>
        <trans-unit id="5bb8f30d63462cf640df95fdfb728a8ffba5f530" translate="yes" xml:space="preserve">
          <source>Move the turtle forward by the specified &lt;em&gt;distance&lt;/em&gt;, in the direction the turtle is headed.</source>
          <target state="translated">按照乌龟前进的方向，将乌龟向前移动指定的&lt;em&gt;距离&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="606392f9ada71eee7694589f863fe49c6c953eb7" translate="yes" xml:space="preserve">
          <source>Move the window inside its parent window. The screen-relative parameters of the window are not changed. This routine is used to display different parts of the parent window at the same physical position on the screen.</source>
          <target state="translated">将窗口移动到其父窗口内。窗口的屏幕相关参数不会改变。此例程用于在屏幕上同一物理位置显示父窗口的不同部分。</target>
        </trans-unit>
        <trans-unit id="9b4cc9d6cf91904a69809b29953b1b97a8cb436c" translate="yes" xml:space="preserve">
          <source>Move the window so its upper-left corner is at &lt;code&gt;(new_y, new_x)&lt;/code&gt;.</source>
          <target state="translated">移动窗口，使其左上角位于 &lt;code&gt;(new_y, new_x)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ae1c0cedf7a7f6220f5e9b65d8d117ba2c19e75" translate="yes" xml:space="preserve">
          <source>Move turtle to an absolute position. If the pen is down, draw line. Do not change the turtle&amp;rsquo;s orientation.</source>
          <target state="translated">将乌龟移到绝对位置。如果笔向下，则画线。不要改变乌龟的方向。</target>
        </trans-unit>
        <trans-unit id="22468681bb2cde570129a7bbf809a05431bc555d" translate="yes" xml:space="preserve">
          <source>Move turtle to the origin &amp;ndash; coordinates (0,0) &amp;ndash; and set its heading to its start-orientation (which depends on the mode, see &lt;a href=&quot;#turtle.mode&quot;&gt;&lt;code&gt;mode()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">将海龟移动到原点&amp;ndash;坐标（0,0）&amp;ndash;并将其标题设置为其开始方向（取决于模式，请参见&lt;a href=&quot;#turtle.mode&quot;&gt; &lt;code&gt;mode()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5be33704c954094f90870e7ed96a149ee7bd9c74" translate="yes" xml:space="preserve">
          <source>Moves &lt;em&gt;item&lt;/em&gt; to position &lt;em&gt;index&lt;/em&gt; in &lt;em&gt;parent&lt;/em&gt;&amp;rsquo;s list of children.</source>
          <target state="translated">移动&lt;em&gt;项目&lt;/em&gt;到位置&lt;em&gt;指数&lt;/em&gt;在&lt;em&gt;父母&lt;/em&gt;的孩子的名单。</target>
        </trans-unit>
        <trans-unit id="d83016dd56e9bf9199d175870ff56ee77659cfb7" translate="yes" xml:space="preserve">
          <source>Mozilla</source>
          <target state="translated">Mozilla</target>
        </trans-unit>
        <trans-unit id="77bb2f79a7eb833c24226c0fc4afbc0065f7bae3" translate="yes" xml:space="preserve">
          <source>Mozilla&amp;rsquo;s Server Side TLS recommendations</source>
          <target state="translated">Mozilla的服务器端TLS建议</target>
        </trans-unit>
        <trans-unit id="34e4e3490cfd5d827b6939f20b6812fc7ab81c0a" translate="yes" xml:space="preserve">
          <source>Much like &lt;a href=&quot;#opcode-LOAD_DEREF&quot;&gt;&lt;code&gt;LOAD_DEREF&lt;/code&gt;&lt;/a&gt; but first checks the locals dictionary before consulting the cell. This is used for loading free variables in class bodies.</source>
          <target state="translated">与&lt;a href=&quot;#opcode-LOAD_DEREF&quot;&gt; &lt;code&gt;LOAD_DEREF&lt;/code&gt; 相似,&lt;/a&gt;但在查询单元之前先检查locals字典。这用于在类主体中加载自由变量。</target>
        </trans-unit>
        <trans-unit id="330f90a4a7f8697f732d832206c87a0c80b1e817" translate="yes" xml:space="preserve">
          <source>Multi-dimensional arrays:</source>
          <target state="translated">多维数组。</target>
        </trans-unit>
        <trans-unit id="e286be50d1c645889d37cc60a961288d4708698c" translate="yes" xml:space="preserve">
          <source>Multi-phase extension module initialization</source>
          <target state="translated">多阶段扩展模块初始化</target>
        </trans-unit>
        <trans-unit id="3a17483ef417b9f9729e4d5407d6224ba50cae48" translate="yes" xml:space="preserve">
          <source>Multi-processing</source>
          <target state="translated">Multi-processing</target>
        </trans-unit>
        <trans-unit id="4df9252fd5d4911ee5eb1c96d25797e8cf043b28" translate="yes" xml:space="preserve">
          <source>Multi-threading</source>
          <target state="translated">Multi-threading</target>
        </trans-unit>
        <trans-unit id="775f46e5feac2a655ca3c0f4647af4e10f6b1405" translate="yes" xml:space="preserve">
          <source>MultiCall Objects</source>
          <target state="translated">多呼对象</target>
        </trans-unit>
        <trans-unit id="d9e13b473f0ae3bd1e957746112d999190ceed57" translate="yes" xml:space="preserve">
          <source>Multihop attempted</source>
          <target state="translated">多跳尝试</target>
        </trans-unit>
        <trans-unit id="82dabd0bba3a5f611035c568eaa03187a7117693" translate="yes" xml:space="preserve">
          <source>Multimedia</source>
          <target state="translated">Multimedia</target>
        </trans-unit>
        <trans-unit id="4e13023947484ddbe09e9dcd00133156cd68392c" translate="yes" xml:space="preserve">
          <source>Multimedia Services</source>
          <target state="translated">多媒体服务</target>
        </trans-unit>
        <trans-unit id="bb2ec50bee2ac650f14f5c5ab53fb76fb7fa35c2" translate="yes" xml:space="preserve">
          <source>Multiple commands may be entered on a single line, separated by &lt;code&gt;;;&lt;/code&gt;. (A single &lt;code&gt;;&lt;/code&gt; is not used as it is the separator for multiple commands in a line that is passed to the Python parser.) No intelligence is applied to separating the commands; the input is split at the first &lt;code&gt;;;&lt;/code&gt; pair, even if it is in the middle of a quoted string.</source>
          <target state="translated">可以在一行上输入多个命令，并以 &lt;code&gt;;;&lt;/code&gt; 分隔。。（不使用单个 &lt;code&gt;;&lt;/code&gt; ,因为它是传递给Python解析器的一行中多个命令的分隔符。）没有智能可用于分隔命令；输入在第一个分割 &lt;code&gt;;;&lt;/code&gt; 对，即使它位于带引号的字符串中间。</target>
        </trans-unit>
        <trans-unit id="3d09adb7f1de6110bb767281eb6fabdd98f6a2d7" translate="yes" xml:space="preserve">
          <source>Multiple directives can be used on a single physical line, separated by commas:</source>
          <target state="translated">一条物理线上可以使用多条指令,用逗号隔开。</target>
        </trans-unit>
        <trans-unit id="43f323662dad6544bb6a1fc9e74c9e4f71909ea4" translate="yes" xml:space="preserve">
          <source>Multiple nodes in &lt;code&gt;targets&lt;/code&gt; represents assigning the same value to each. Unpacking is represented by putting a &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.List&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; within &lt;code&gt;targets&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;targets&lt;/code&gt; 多个节点表示为每个节点分配相同的值。拆开包装是通过将一个代表&lt;a href=&quot;#ast.Tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#ast.List&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;中 &lt;code&gt;targets&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7299187e78acfeb10e1b49723ae100be4c64b0fe" translate="yes" xml:space="preserve">
          <source>Multiple notebooks in a single toplevel may be enabled for traversal, including nested notebooks. However, notebook traversal only works properly if all panes have the notebook they are in as master.</source>
          <target state="translated">一个toplevel中的多个笔记本可以被启用以进行遍历,包括嵌套的笔记本。但是,只有当所有的窗格都将它们所在的笔记本作为主控时,笔记本遍历才能正常工作。</target>
        </trans-unit>
        <trans-unit id="5162321020c32ce61d50bae28086dd890680e982" translate="yes" xml:space="preserve">
          <source>Multiple paths can be given to &lt;code&gt;venv&lt;/code&gt;, in which case an identical virtual environment will be created, according to the given options, at each provided path.</source>
          <target state="translated">可以给 &lt;code&gt;venv&lt;/code&gt; 提供多个路径，在这种情况下，将根据给定的选项在每个提供的路径上创建相同的虚拟环境。</target>
        </trans-unit>
        <trans-unit id="4573ed2f0edb61983a51e72e312c05e99fea31c4" translate="yes" xml:space="preserve">
          <source>Multiple scripts demonstrating different features of the &lt;a href=&quot;#module-turtle&quot;&gt;&lt;code&gt;turtle&lt;/code&gt;&lt;/a&gt; module. Examples can be accessed via the Examples menu. They can also be run standalone.</source>
          <target state="translated">多个脚本演示了&lt;a href=&quot;#module-turtle&quot;&gt; &lt;code&gt;turtle&lt;/code&gt; &lt;/a&gt;模块的不同功能。可以通过&amp;ldquo;示例&amp;rdquo;菜单访问示例。它们也可以独立运行。</target>
        </trans-unit>
        <trans-unit id="a66007c83d7e252602c3da75c4c341aa9e54c57e" translate="yes" xml:space="preserve">
          <source>Multiple type annotations are supported (&lt;code&gt;Annotated&lt;/code&gt; supports variadic arguments):</source>
          <target state="translated">支持多种类型的注释（ &lt;code&gt;Annotated&lt;/code&gt; 支持可变参数）：</target>
        </trans-unit>
        <trans-unit id="2b9ee6e2b5fcdbd970e8f069acf17877e49e0441" translate="yes" xml:space="preserve">
          <source>Multiplication</source>
          <target state="translated">Multiplication</target>
        </trans-unit>
        <trans-unit id="7a49abf6458e7554b14dad6ea5826909852a08c1" translate="yes" xml:space="preserve">
          <source>Multithreaded version of &lt;a href=&quot;#telnetlib.Telnet.interact&quot;&gt;&lt;code&gt;interact()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#telnetlib.Telnet.interact&quot;&gt; &lt;code&gt;interact()&lt;/code&gt; 的&lt;/a&gt;多线程版本。</target>
        </trans-unit>
        <trans-unit id="8a86acdcb9f782d0a3ed3f193ab37879a5d757d7" translate="yes" xml:space="preserve">
          <source>Multithreading</source>
          <target state="translated">Multithreading</target>
        </trans-unit>
        <trans-unit id="cab30ed902fc7da4b75c082dca1f14cef46149ff" translate="yes" xml:space="preserve">
          <source>Multithreading note: When two threads call this function simultaneously, it is possible that they will receive the same return value. This can be avoided in three ways. 1) Have each thread use a different instance of the random number generator. 2) Put locks around all calls. 3) Use the slower, but thread-safe &lt;a href=&quot;#random.normalvariate&quot;&gt;&lt;code&gt;normalvariate()&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="translated">多线程注释：当两个线程同时调用此函数时，它们可能会收到相同的返回值。可以通过三种方式避免这种情况。1）让每个线程使用随机数生成器的不同实例。2）将所有通话锁定。3）而是使用速度较慢但线程安全的&lt;a href=&quot;#random.normalvariate&quot;&gt; &lt;code&gt;normalvariate()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="e84051d950065a19888b9a4b65dd834b3ca5708a" translate="yes" xml:space="preserve">
          <source>Must accept a request from the socket, and return a 2-tuple containing the &lt;em&gt;new&lt;/em&gt; socket object to be used to communicate with the client, and the client&amp;rsquo;s address.</source>
          <target state="translated">必须接受来自套接字的请求，并返回一个2元组，其中包含要用于与客户端进行通信的&lt;em&gt;新&lt;/em&gt;套接字对象以及客户端的地址。</target>
        </trans-unit>
        <trans-unit id="4747a0250917ddc1dc2a0d4fc6b92b4e01de5dd8" translate="yes" xml:space="preserve">
          <source>Must be called if the programmer wants to use colors, and before any other color manipulation routine is called. It is good practice to call this routine right after &lt;a href=&quot;#curses.initscr&quot;&gt;&lt;code&gt;initscr()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果程序员要使用颜色，则必须在调用任何其他颜色操作例程之前调用它。优良作法是在&lt;a href=&quot;#curses.initscr&quot;&gt; &lt;code&gt;initscr()&lt;/code&gt; &lt;/a&gt;之后立即调用此例程。</target>
        </trans-unit>
        <trans-unit id="ff7e72021a763f0ee5ccf9301a43b444b5e95394" translate="yes" xml:space="preserve">
          <source>Must be one of: &lt;code&gt;&quot;none&quot;&lt;/code&gt;, &lt;code&gt;&quot;char&quot;&lt;/code&gt;, or &lt;code&gt;&quot;word&quot;&lt;/code&gt;.</source>
          <target state="translated">必须是以下之一： &lt;code&gt;&quot;none&quot;&lt;/code&gt; ， &lt;code&gt;&quot;char&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;word&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebf1dc0566c10e0139b5df0505eb1e78b6fd3569" translate="yes" xml:space="preserve">
          <source>Must be raised by &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__anext__&quot;&gt;&lt;code&gt;__anext__()&lt;/code&gt;&lt;/a&gt; method of an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt; object to stop the iteration.</source>
          <target state="translated">必须由&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-asynchronous-iterator&quot;&gt;异步迭代器&lt;/a&gt;对象的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__anext__&quot;&gt; &lt;code&gt;__anext__()&lt;/code&gt; &lt;/a&gt;方法引发以停止迭代。</target>
        </trans-unit>
        <trans-unit id="bc41839a8b9fd667d2f66f5bddeaaf2f835151c4" translate="yes" xml:space="preserve">
          <source>Must be raised by &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__anext__&quot;&gt;&lt;code&gt;__anext__()&lt;/code&gt;&lt;/a&gt; method of an &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterator&quot;&gt;asynchronous iterator&lt;/a&gt; object to stop the iteration.</source>
          <target state="translated">必须由&lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-asynchronous-iterator&quot;&gt;异步迭代器&lt;/a&gt;对象的&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__anext__&quot;&gt; &lt;code&gt;__anext__()&lt;/code&gt; &lt;/a&gt;方法引发以停止迭代。</target>
        </trans-unit>
        <trans-unit id="adf6c9fd4760a31bfbf5ba31fc932d1f5a3f031e" translate="yes" xml:space="preserve">
          <source>Must be zero.</source>
          <target state="translated">必须是零。</target>
        </trans-unit>
        <trans-unit id="ae91554455709a10c47572fb3081826f1c8d9b10" translate="yes" xml:space="preserve">
          <source>Must return a Boolean value; if the value is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, the request will be processed, and if it&amp;rsquo;s &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt;, the request will be denied. This function can be overridden to implement access controls for a server. The default implementation always returns &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">必须返回一个布尔值；如果值为&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;，则将处理请求；如果值为&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;，则将拒绝请求。可以重写此功能以实现服务器的访问控制。默认实现始终返回&lt;a href=&quot;constants#True&quot;&gt; &lt;code&gt;True&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a5c56949118e7bbfa4e5df14253fa9c206b4ced" translate="yes" xml:space="preserve">
          <source>Mutable Sequence Types</source>
          <target state="translated">可变序列类型</target>
        </trans-unit>
        <trans-unit id="59a777ead597ed74ce5de4536307c0d1ace10414" translate="yes" xml:space="preserve">
          <source>Mutable default values</source>
          <target state="translated">可变的默认值</target>
        </trans-unit>
        <trans-unit id="bd89464f515bc7c1945f885ef807721ee91c256b" translate="yes" xml:space="preserve">
          <source>Mutual exclusion</source>
          <target state="translated">相互排斥</target>
        </trans-unit>
        <trans-unit id="e48c93a9558b1df10e9386a808b36396efbdc949" translate="yes" xml:space="preserve">
          <source>Mutually exclusive options for whitespace control.</source>
          <target state="translated">相互排斥的空白控制选项;</target>
        </trans-unit>
        <trans-unit id="f1dae7604a00897f0a4fd9c9086372f8cb686e88" translate="yes" xml:space="preserve">
          <source>MyStruct(4, 6)</source>
          <target state="translated">MyStruct(4,6)</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="f3b6e147d97b483fedd25cc8dfa6e8453dae0246" translate="yes" xml:space="preserve">
          <source>NNTP (Net News Transport Protocol) client</source>
          <target state="translated">网络新闻传输协议客户端</target>
        </trans-unit>
        <trans-unit id="79c75ca6272ee59fef0850ac71420be0538f2b61" translate="yes" xml:space="preserve">
          <source>NNTP Objects</source>
          <target state="translated">NNTP对象</target>
        </trans-unit>
        <trans-unit id="d1dc5a1761f453c4a0fd7017ba832bc17fd8ad13" translate="yes" xml:space="preserve">
          <source>NOOP</source>
          <target state="translated">NOOP</target>
        </trans-unit>
        <trans-unit id="36bdc187848ec66c05c294f3ec9cf824ecdaa127" translate="yes" xml:space="preserve">
          <source>NOTE: This function is part of &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt; and works with strings. It does not check or access the underlying file structure.</source>
          <target state="translated">注意：此函数是&lt;a href=&quot;#pathlib.PurePath&quot;&gt; &lt;code&gt;PurePath&lt;/code&gt; 的&lt;/a&gt;一部分，可与字符串一起使用。它不检查或访问基础文件结构。</target>
        </trans-unit>
        <trans-unit id="51374517cce15cf30e5fafe081ab605aef775d59" translate="yes" xml:space="preserve">
          <source>NTEventLogHandler</source>
          <target state="translated">NTEventLogHandler</target>
        </trans-unit>
        <trans-unit id="96cd9da0c6e1ccdfcc159d790597f9c5ab44b9f9" translate="yes" xml:space="preserve">
          <source>Naive &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instances are assumed to represent local time and this method relies on the platform C &lt;code&gt;mktime()&lt;/code&gt; function to perform the conversion. Since &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; supports wider range of values than &lt;code&gt;mktime()&lt;/code&gt; on many platforms, this method may raise &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; for times far in the past or far in the future.</source>
          <target state="translated">假定朴素的&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;实例表示本地时间，并且此方法依赖于平台C &lt;code&gt;mktime()&lt;/code&gt; 函数执行转换。由于在许多平台上，&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;比 &lt;code&gt;mktime()&lt;/code&gt; 支持更大范围的值，因此此方法可能会在过去或将来的&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;时间引发OverflowError。</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="c27442e14dcf480c5096062467b3aa70532fef60" translate="yes" xml:space="preserve">
          <source>Name (string)</source>
          <target state="translated">姓名(字符串)</target>
        </trans-unit>
        <trans-unit id="f749babb57e6226126151fa3ff0dcb49a37a4566" translate="yes" xml:space="preserve">
          <source>Name and version of the thread library. It is a string, or &lt;code&gt;None&lt;/code&gt; if this information is unknown.</source>
          <target state="translated">线程库的名称和版本。它是一个字符串，如果此信息未知，则为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd0eba018b32a3fc8bf5757f41e9d39ed4d796bd" translate="yes" xml:space="preserve">
          <source>Name not unique on network</source>
          <target state="translated">名称在网络上不唯一</target>
        </trans-unit>
        <trans-unit id="6b9e670759af04e3a29cb11b387ac0af4c4ba79a" translate="yes" xml:space="preserve">
          <source>Name of a file to accumulate counts over several tracing runs. Should be used with the &lt;a href=&quot;#cmdoption-trace-c&quot;&gt;&lt;code&gt;--count&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">要在多个跟踪运行中累积计数的文件名。应与&lt;a href=&quot;#cmdoption-trace-c&quot;&gt; &lt;code&gt;--count&lt;/code&gt; &lt;/a&gt;选项一起使用。</target>
        </trans-unit>
        <trans-unit id="1f41d04af7c00689d29db73e5e39ccec3d7f4baa" translate="yes" xml:space="preserve">
          <source>Name of a file where the output should be written.</source>
          <target state="translated">编写输出的文件名。</target>
        </trans-unit>
        <trans-unit id="909d50c1d59e7f6872cd42d8d690e7a67cfddf5e" translate="yes" xml:space="preserve">
          <source>Name of function containing the logging call.</source>
          <target state="translated">包含记录调用的函数名称。</target>
        </trans-unit>
        <trans-unit id="a4e437038133290bc84db0a7901dbdac884887ac" translate="yes" xml:space="preserve">
          <source>Name of the &lt;code&gt;ndbm&lt;/code&gt; implementation library used.</source>
          <target state="translated">使用的 &lt;code&gt;ndbm&lt;/code&gt; 实现库的名称。</target>
        </trans-unit>
        <trans-unit id="b82dd6dc18736a73581a12357aabc36155aa0044" translate="yes" xml:space="preserve">
          <source>Name of the ZIP file.</source>
          <target state="translated">ZIP文件的名称。</target>
        </trans-unit>
        <trans-unit id="7bd737364faf0eec56bb0fc421ccc3c610d6ed65" translate="yes" xml:space="preserve">
          <source>Name of the archive member.</source>
          <target state="translated">档案成员的姓名。</target>
        </trans-unit>
        <trans-unit id="2c902fcfc808584d112a3ceeb4eb2bc1f3619bea" translate="yes" xml:space="preserve">
          <source>Name of the file in the archive.</source>
          <target state="translated">档案中的文件名称。</target>
        </trans-unit>
        <trans-unit id="3f4f64a593b458f13706273b6df06d01e90dabff" translate="yes" xml:space="preserve">
          <source>Name of the file in which the class is defined.</source>
          <target state="translated">定义该类的文件名。</target>
        </trans-unit>
        <trans-unit id="52c4cd4fff87ccdc917ab79849a30f112d326420" translate="yes" xml:space="preserve">
          <source>Name of the file in which the function is defined.</source>
          <target state="translated">定义函数的文件名。</target>
        </trans-unit>
        <trans-unit id="479b58a3698cd8bdd2749e826438a6efb9a37443" translate="yes" xml:space="preserve">
          <source>Name of the kernel filter.</source>
          <target state="translated">内核过滤器的名称。</target>
        </trans-unit>
        <trans-unit id="557389192cfcd5c2bf918ddbf712bd3b1d343b90" translate="yes" xml:space="preserve">
          <source>Name of the lock implementation:</source>
          <target state="translated">锁的实施名称。</target>
        </trans-unit>
        <trans-unit id="e5bcc652602bbe94f6a9ebcc11b4cb38e6c0ea60" translate="yes" xml:space="preserve">
          <source>Name of the logger used to log the call.</source>
          <target state="translated">用于记录呼叫的记录器的名称。</target>
        </trans-unit>
        <trans-unit id="1ac5bb9ec4a87c7e2e4d424b152dffc6dceb92f8" translate="yes" xml:space="preserve">
          <source>Name of the module the loader supports.</source>
          <target state="translated">载入器支持的模块名称。</target>
        </trans-unit>
        <trans-unit id="88649ef30eca2eef544db1a703bfa26a7680062b" translate="yes" xml:space="preserve">
          <source>Name of the place from which the module is loaded, e.g. &amp;ldquo;builtin&amp;rdquo; for built-in modules and the filename for modules loaded from source. Normally &amp;ldquo;origin&amp;rdquo; should be set, but it may be &lt;code&gt;None&lt;/code&gt; (the default) which indicates it is unspecified (e.g. for namespace packages).</source>
          <target state="translated">加载模块的位置的名称，例如，内置模块的&amp;ldquo; builtin&amp;rdquo;和源代码加载的模块的文件名。通常应设置&amp;ldquo; origin&amp;rdquo;，但它可以为 &lt;code&gt;None&lt;/code&gt; （默认值），表示未指定（例如，用于名称空间包）。</target>
        </trans-unit>
        <trans-unit id="e3bd6f6c479eab3e41e2c002fa4ce6ad97ac5a4a" translate="yes" xml:space="preserve">
          <source>Name of the platform-specific library directory. It is used to build the path of standard library and the paths of installed extension modules.</source>
          <target state="translated">平台专用库目录的名称。它用于建立标准库的路径和安装的扩展模块的路径。</target>
        </trans-unit>
        <trans-unit id="3add1cd07c9747dd5701cddb479a22e098f8ef27" translate="yes" xml:space="preserve">
          <source>Name of the target file name, which is only present in &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; objects of type &lt;code&gt;LNKTYPE&lt;/code&gt; and &lt;code&gt;SYMTYPE&lt;/code&gt;.</source>
          <target state="translated">目标文件名，这是只有在目前的名称&lt;a href=&quot;#tarfile.TarInfo&quot;&gt; &lt;code&gt;TarInfo&lt;/code&gt; &lt;/a&gt;类型的对象 &lt;code&gt;LNKTYPE&lt;/code&gt; 和 &lt;code&gt;SYMTYPE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c8a8acd0a715e63879cf8add7d8952be75bc26b" translate="yes" xml:space="preserve">
          <source>Name of the thread implementation:</source>
          <target state="translated">线程实现的名称。</target>
        </trans-unit>
        <trans-unit id="552b247919a3a4142c7193f3218e6c006dc56731" translate="yes" xml:space="preserve">
          <source>NameError</source>
          <target state="translated">NameError</target>
        </trans-unit>
        <trans-unit id="9aded8be679f83c11f74ee1bff7f85682a20e807" translate="yes" xml:space="preserve">
          <source>Named groups can also be referred to by their index:</source>
          <target state="translated">被命名的组也可以用其索引来表示。</target>
        </trans-unit>
        <trans-unit id="c28e1ee5f518cf29efb67d882148a0b1e5416250" translate="yes" xml:space="preserve">
          <source>Named groups can be referenced in three contexts. If the pattern is &lt;code&gt;(?P&amp;lt;quote&amp;gt;['&quot;]).*?(?P=quote)&lt;/code&gt; (i.e. matching a string quoted with either single or double quotes):</source>
          <target state="translated">可以在三个上下文中引用命名组。如果模式是 &lt;code&gt;(?P&amp;lt;quote&amp;gt;['&quot;]).*?(?P=quote)&lt;/code&gt; （即匹配用单引号或双引号引起来的字符串）：</target>
        </trans-unit>
        <trans-unit id="f16a4120b764cba8959d773cf7f3b0e19c88a175" translate="yes" xml:space="preserve">
          <source>Named tuple instances do not have per-instance dictionaries, so they are lightweight and require no more memory than regular tuples.</source>
          <target state="translated">命名元组实例没有每个实例的字典,所以它们是轻量级的,不比普通元组需要更多的内存。</target>
        </trans-unit>
        <trans-unit id="f512fe216c8d2627c3f288b9c1b60f1f0813d360" translate="yes" xml:space="preserve">
          <source>Named tuples are especially useful for assigning field names to result tuples returned by the &lt;a href=&quot;csv#module-csv&quot;&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sqlite3#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; modules:</source>
          <target state="translated">命名元组对于将字段名称分配给由&lt;a href=&quot;csv#module-csv&quot;&gt; &lt;code&gt;csv&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;sqlite3#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;模块返回的结果元组特别有用：</target>
        </trans-unit>
        <trans-unit id="d560ba60fd40808c605c894ca61edab52b60a8f7" translate="yes" xml:space="preserve">
          <source>Named tuples assign meaning to each position in a tuple and allow for more readable, self-documenting code. They can be used wherever regular tuples are used, and they add the ability to access fields by name instead of position index.</source>
          <target state="translated">命名的元组为元组中的每个位置分配了意义,并允许更可读的、自文档化的代码。它们可以在使用常规元组的地方使用,并且它们增加了通过名称而不是位置索引访问字段的能力。</target>
        </trans-unit>
        <trans-unit id="138d23bf87d91f2cf8e499a38b28a27198431782" translate="yes" xml:space="preserve">
          <source>NamedNodeMap Objects</source>
          <target state="translated">NamedNodeMap对象</target>
        </trans-unit>
        <trans-unit id="79151ef5523cbb3688933e1d2359c827b97b6dba" translate="yes" xml:space="preserve">
          <source>Names in both &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, such that the type differs between the directories, or names for which &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; reports an error.</source>
          <target state="translated">&lt;em&gt;a&lt;/em&gt;和&lt;em&gt;b中的&lt;/em&gt;名称，以使目录之间的类型不同，或者&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;报告错误的名称。</target>
        </trans-unit>
        <trans-unit id="0a0bec580c91a0db0dd9741e0f59ccc6c55e7006" translate="yes" xml:space="preserve">
          <source>Namespace-aware variant of &lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt;&lt;code&gt;AttributesImpl&lt;/code&gt;&lt;/a&gt;, which will be passed to &lt;code&gt;startElementNS()&lt;/code&gt;. It is derived from &lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt;&lt;code&gt;AttributesImpl&lt;/code&gt;&lt;/a&gt;, but understands attribute names as two-tuples of &lt;em&gt;namespaceURI&lt;/em&gt; and &lt;em&gt;localname&lt;/em&gt;. In addition, it provides a number of methods expecting qualified names as they appear in the original document. This class implements the &lt;code&gt;AttributesNS&lt;/code&gt; interface (see section &lt;a href=&quot;#attributes-ns-objects&quot;&gt;The AttributesNS Interface&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt; &lt;code&gt;AttributesImpl&lt;/code&gt; 的&lt;/a&gt;名称空间感知变体，将传递给 &lt;code&gt;startElementNS()&lt;/code&gt; 。它从&lt;a href=&quot;#xml.sax.xmlreader.AttributesImpl&quot;&gt; &lt;code&gt;AttributesImpl&lt;/code&gt; &lt;/a&gt;派生，但将属性名称理解为&lt;em&gt;namespaceURI&lt;/em&gt;和&lt;em&gt;localname&lt;/em&gt;的二元组。此外，它提供了许多方法，这些方法期望在原始文档中出现合格名称。此类实现 &lt;code&gt;AttributesNS&lt;/code&gt; 接口（请参阅&lt;a href=&quot;#attributes-ns-objects&quot;&gt;AttributesNS接口&lt;/a&gt;一节）。</target>
        </trans-unit>
        <trans-unit id="3fac676b9daa5e7147af0e960a2d8869c1122f19" translate="yes" xml:space="preserve">
          <source>Naming your mocks</source>
          <target state="translated">命名你的嘲讽</target>
        </trans-unit>
        <trans-unit id="388dc744456493550fdfa18219ddbd88540e38ab" translate="yes" xml:space="preserve">
          <source>Native Load/Save Dialogs</source>
          <target state="translated">本地加载/保存对话框</target>
        </trans-unit>
        <trans-unit id="3e8980fc43ff1044a18189e78dedc1df9a62b49e" translate="yes" xml:space="preserve">
          <source>Native byte order is big-endian or little-endian, depending on the host system. For example, Intel x86 and AMD64 (x86-64) are little-endian; Motorola 68000 and PowerPC G5 are big-endian; ARM and Intel Itanium feature switchable endianness (bi-endian). Use &lt;code&gt;sys.byteorder&lt;/code&gt; to check the endianness of your system.</source>
          <target state="translated">本地字节顺序为大端或小端，具体取决于主机系统。例如，Intel x86和AMD64（x86-64）是低位字节序；摩托罗拉68000和PowerPC G5是大端的；ARM和Intel Itanium具有可切换的字节序（bi-endian）。使用 &lt;code&gt;sys.byteorder&lt;/code&gt; 检查系统的字节顺序。</target>
        </trans-unit>
        <trans-unit id="48f10fdc477f6339c64bce4467bf56cec228d333" translate="yes" xml:space="preserve">
          <source>Native size and alignment are determined using the C compiler&amp;rsquo;s &lt;code&gt;sizeof&lt;/code&gt; expression. This is always combined with native byte order.</source>
          <target state="translated">原始大小和对齐方式是使用C编译器的 &lt;code&gt;sizeof&lt;/code&gt; 表达式确定的。这始终与本机字节顺序结合在一起。</target>
        </trans-unit>
        <trans-unit id="517a1d8d49b78127b5bb2acf6015f7707345aa2e" translate="yes" xml:space="preserve">
          <source>Navigating inside a directory tree:</source>
          <target state="translated">在目录树内进行导航。</target>
        </trans-unit>
        <trans-unit id="987fc48a30ea30d92d41a6019a3ed94eb415d66d" translate="yes" xml:space="preserve">
          <source>Negation (Arithmetic)</source>
          <target state="translated">否定(算术)</target>
        </trans-unit>
        <trans-unit id="627e9d13ddc6c294f7ec2e115eee5c51e4b0a37a" translate="yes" xml:space="preserve">
          <source>Negation (Logical)</source>
          <target state="translated">否定(逻辑)</target>
        </trans-unit>
        <trans-unit id="b55a8cef5977e78a89ae2e69772eef902ec4a5a5" translate="yes" xml:space="preserve">
          <source>Negative acknowledgement</source>
          <target state="translated">否定承认</target>
        </trans-unit>
        <trans-unit id="34c7643d5f745ab08c69c16dd12140498edf58a7" translate="yes" xml:space="preserve">
          <source>Negative shift counts are illegal and cause a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to be raised.</source>
          <target state="translated">负移位计数是非法的，并且会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cca6e5f1a6c7a865ba230eeff90e2702a0fd7fe3" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;Annotated&lt;/code&gt; types are flattened, with metadata ordered starting with the innermost annotation:</source>
          <target state="translated">嵌套 &lt;code&gt;Annotated&lt;/code&gt; 类型被展平，元数据从最里面的注释开始进行排序：</target>
        </trans-unit>
        <trans-unit id="32487c26ecab149a196fce5321757c6b3bf4b876" translate="yes" xml:space="preserve">
          <source>Nested structures can also be initialized in the constructor in several ways:</source>
          <target state="translated">嵌套结构也可以通过几种方式在构造函数中进行初始化。</target>
        </trans-unit>
        <trans-unit id="6b24ed9821e96a2648c5646b75130ceb97178a4c" translate="yes" xml:space="preserve">
          <source>Nesting Patch Decorators</source>
          <target state="translated">嵌套补丁装饰器</target>
        </trans-unit>
        <trans-unit id="ea31f50cab713b0f124052f1b7a16defcb810ab2" translate="yes" xml:space="preserve">
          <source>Nesting Patches</source>
          <target state="translated">嵌套补丁</target>
        </trans-unit>
        <trans-unit id="48f4eff85da085dead78d399f32b4afe378e5d2d" translate="yes" xml:space="preserve">
          <source>Nesting arguments and more complex examples:</source>
          <target state="translated">嵌套论证和更复杂的例子。</target>
        </trans-unit>
        <trans-unit id="387c36a7e2c55b1e37b061b1ad887cc307968414" translate="yes" xml:space="preserve">
          <source>Netscape protocol strictness switches:</source>
          <target state="translated">网景协议严格性开关。</target>
        </trans-unit>
        <trans-unit id="8baad1cbc284c12f56ea33b670eb34325f6b8199" translate="yes" xml:space="preserve">
          <source>Network IO</source>
          <target state="translated">网络IO</target>
        </trans-unit>
        <trans-unit id="82a92bfa4dd74a7c277b6e280e7993e24e6bd37b" translate="yes" xml:space="preserve">
          <source>Network dropped connection because of reset</source>
          <target state="translated">网络因复位而中断连接</target>
        </trans-unit>
        <trans-unit id="ea849e260b8735345217e4f53f113c9fcde5b394" translate="yes" xml:space="preserve">
          <source>Network is down</source>
          <target state="translated">网络瘫痪</target>
        </trans-unit>
        <trans-unit id="d34a1412dd6535ceabe7960d72728113a96b875c" translate="yes" xml:space="preserve">
          <source>Network is unreachable</source>
          <target state="translated">网络无法连接</target>
        </trans-unit>
        <trans-unit id="f1187f91a6b9526e3ad1f52e3394c4d7df1155f3" translate="yes" xml:space="preserve">
          <source>Network location part</source>
          <target state="translated">网络位置部分</target>
        </trans-unit>
        <trans-unit id="a94bfe6962e04d8964bb10b7ee9c6ed49863a34f" translate="yes" xml:space="preserve">
          <source>Network objects</source>
          <target state="translated">网络对象</target>
        </trans-unit>
        <trans-unit id="d002009562d56b5b62febaf56a1d9b00d7976530" translate="yes" xml:space="preserve">
          <source>Network objects can act as containers of addresses. Some examples:</source>
          <target state="translated">网络对象可以作为地址的容器。一些例子:</target>
        </trans-unit>
        <trans-unit id="20fcf7eba0d4de1e05964bd5839c098f8acebea8" translate="yes" xml:space="preserve">
          <source>Network objects can be compared with the usual set of logical operators. Network objects are ordered first by network address, then by net mask.</source>
          <target state="translated">网络对象可以用通常的逻辑运算符集进行比较。网络对象首先按网络地址排序,然后按网络掩码排序。</target>
        </trans-unit>
        <trans-unit id="9fb3a6d9875537b1c0c38a2431cc632cb829f8a7" translate="yes" xml:space="preserve">
          <source>Network objects can be iterated to list all the addresses belonging to the network. For iteration, &lt;em&gt;all&lt;/em&gt; hosts are returned, including unusable hosts (for usable hosts, use the &lt;a href=&quot;#ipaddress.IPv4Network.hosts&quot;&gt;&lt;code&gt;hosts()&lt;/code&gt;&lt;/a&gt; method). An example:</source>
          <target state="translated">可以迭代网络对象以列出属于该网络的所有地址。对于迭代，将返回&lt;em&gt;所有&lt;/em&gt;主机，包括不可用的主机（对于可用的主机，请使用&lt;a href=&quot;#ipaddress.IPv4Network.hosts&quot;&gt; &lt;code&gt;hosts()&lt;/code&gt; &lt;/a&gt;方法）。一个例子：</target>
        </trans-unit>
        <trans-unit id="1c620c8b990249735711860cb7b51cafd949fab4" translate="yes" xml:space="preserve">
          <source>Network objects support some operators. Unless stated otherwise, operators can only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 with IPv6).</source>
          <target state="translated">网络对象支持一些运营商。除非另有说明,否则运营商只能在兼容对象之间应用(即IPv4与IPv4、IPv6与IPv6)。</target>
        </trans-unit>
        <trans-unit id="94d3480ab302bd240a4a2e92c94a41facba908a0" translate="yes" xml:space="preserve">
          <source>Networking &amp;amp; Interprocess Communication</source>
          <target state="translated">网络与进程间通信</target>
        </trans-unit>
        <trans-unit id="173aff8fcb77fae19c3b7a5cfe41672fc9b21ae0" translate="yes" xml:space="preserve">
          <source>Networking and IPC</source>
          <target state="translated">网络和IPC</target>
        </trans-unit>
        <trans-unit id="7696b1c0a533c955797df8c40d2eb34ddf93894d" translate="yes" xml:space="preserve">
          <source>Networking and Interprocess Communication</source>
          <target state="translated">网络和进程间通信</target>
        </trans-unit>
        <trans-unit id="4136d3e620eed1009afaac5766d22a562ea45d95" translate="yes" xml:space="preserve">
          <source>Networks as containers of addresses</source>
          <target state="translated">作为地址容器的网络</target>
        </trans-unit>
        <trans-unit id="1b2021fe3ae1d663f2ee43b16a7c7f0fc183cecc" translate="yes" xml:space="preserve">
          <source>Never extract archives from untrusted sources without prior inspection. It is possible that files are created outside of &lt;em&gt;path&lt;/em&gt;, e.g. members that have absolute filenames starting with &lt;code&gt;&quot;/&quot;&lt;/code&gt; or filenames with two dots &lt;code&gt;&quot;..&quot;&lt;/code&gt;.</source>
          <target state="translated">未经事先检查，切勿从不受信任的来源提取档案。可能在&lt;em&gt;路径&lt;/em&gt;之外创建文件，例如，具有以 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 开头的绝对文件名或以两个点 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 开头的文件名的成员。</target>
        </trans-unit>
        <trans-unit id="c62e809819381e83090bced1e2173f918be1f3b0" translate="yes" xml:space="preserve">
          <source>Never extract archives from untrusted sources without prior inspection. It is possible that files are created outside of &lt;em&gt;path&lt;/em&gt;, e.g. members that have absolute filenames starting with &lt;code&gt;&quot;/&quot;&lt;/code&gt; or filenames with two dots &lt;code&gt;&quot;..&quot;&lt;/code&gt;. This module attempts to prevent that. See &lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt;&lt;code&gt;extract()&lt;/code&gt;&lt;/a&gt; note.</source>
          <target state="translated">未经事先检查，切勿从不受信任的来源中提取档案。可能在&lt;em&gt;路径&lt;/em&gt;之外创建文件，例如，具有以 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 开头的绝对文件名或以两个点 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 开头的文件名的成员。该模块试图防止这种情况。请参见&lt;a href=&quot;#zipfile.ZipFile.extract&quot;&gt; &lt;code&gt;extract()&lt;/code&gt; &lt;/a&gt;注意。</target>
        </trans-unit>
        <trans-unit id="ccaf85ee75327fc748e39faca2166199011de41a" translate="yes" xml:space="preserve">
          <source>New File</source>
          <target state="translated">新文件</target>
        </trans-unit>
        <trans-unit id="409292424eb18087ed2f720f75aa3dc7008467fa" translate="yes" xml:space="preserve">
          <source>New Import Hooks</source>
          <target state="translated">新的进口挂钩</target>
        </trans-unit>
        <trans-unit id="f67997d268c1af98301a345d50239d3f892a0eb7" translate="yes" xml:space="preserve">
          <source>New Indent Width</source>
          <target state="translated">新的缩进宽度</target>
        </trans-unit>
        <trans-unit id="12a8cecf358397da137dcdd0fe30e38555ec9cfd" translate="yes" xml:space="preserve">
          <source>New contexts can also be created using the &lt;a href=&quot;#decimal.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; constructor described below. In addition, the module provides three pre-made contexts:</source>
          <target state="translated">也可以使用下面描述的&lt;a href=&quot;#decimal.Context&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;构造函数创建新的上下文。此外，该模块提供了三个预制的上下文：</target>
        </trans-unit>
        <trans-unit id="7a1d94154a6598cae8341b022c23e40f99e28431" translate="yes" xml:space="preserve">
          <source>New hash objects are created by calling constructor functions:</source>
          <target state="translated">新的哈希对象是通过调用构造函数来创建的。</target>
        </trans-unit>
        <trans-unit id="f0e3ef54012ca2003232ea452f70d451c14796eb" translate="yes" xml:space="preserve">
          <source>New in</source>
          <target state="translated">新产品</target>
        </trans-unit>
        <trans-unit id="3044731cb14928152cff1cf7dc1f4fa6c076e116" translate="yes" xml:space="preserve">
          <source>New in version 3.1.</source>
          <target state="translated">3.1版本的新内容。</target>
        </trans-unit>
        <trans-unit id="3490f0090dbcdc45af81e4d62ca30e6b962ba596" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Added under the name &lt;code&gt;assertRaisesRegexp&lt;/code&gt;.</source>
          <target state="translated">3.1版中的新增功能：以 &lt;code&gt;assertRaisesRegexp&lt;/code&gt; 名称添加。</target>
        </trans-unit>
        <trans-unit id="5aaafe02546b7ea7e8be1083e6726b39beceb3be" translate="yes" xml:space="preserve">
          <source>New in version 3.1: Added under the name &lt;code&gt;assertRegexpMatches&lt;/code&gt;.</source>
          <target state="translated">3.1版中的新功能：以 &lt;code&gt;assertRegexpMatches&lt;/code&gt; 的名称添加。</target>
        </trans-unit>
        <trans-unit id="0cdd0395e78a0dc6664ff5b4d4ec37a63a481081" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;code&gt;'surrogateescape'&lt;/code&gt; and &lt;code&gt;'surrogatepass'&lt;/code&gt; error handlers.</source>
          <target state="translated">3.1版中的新功能： &lt;code&gt;'surrogateescape'&lt;/code&gt; 和 &lt;code&gt;'surrogatepass'&lt;/code&gt; 错误处理程序。</target>
        </trans-unit>
        <trans-unit id="32c6d6c31b4876c85b341703ff1176d48fc1033d" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;code&gt;SEEK_*&lt;/code&gt; constants.</source>
          <target state="translated">版本3.1中的新功能： &lt;code&gt;SEEK_*&lt;/code&gt; 常量。</target>
        </trans-unit>
        <trans-unit id="ff81f06c49fb2cc34747b6d94a1ad63a6cf4f4f3" translate="yes" xml:space="preserve">
          <source>New in version 3.1: The &lt;em&gt;skip&lt;/em&gt; argument.</source>
          <target state="translated">版本3.1中的新增功能：&lt;em&gt;skip&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="aec3464ceeab8cf46a16efea3d5d6d17ad876e19" translate="yes" xml:space="preserve">
          <source>New in version 3.2.</source>
          <target state="translated">3.2版本的新内容。</target>
        </trans-unit>
        <trans-unit id="db31bd421783154e9fc48afcb4954a828a5d37e2" translate="yes" xml:space="preserve">
          <source>New in version 3.2.3: The &lt;code&gt;hash_randomization&lt;/code&gt; attribute.</source>
          <target state="translated">版本3.2.3中的 &lt;code&gt;hash_randomization&lt;/code&gt; ：hash_randomization属性。</target>
        </trans-unit>
        <trans-unit id="c0dcdf7c449d4eea6b69af79b67c72ca17c53ff2" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;a href=&quot;#array.array.fromstring&quot;&gt;&lt;code&gt;fromstring()&lt;/code&gt;&lt;/a&gt; is renamed to &lt;a href=&quot;#array.array.frombytes&quot;&gt;&lt;code&gt;frombytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">新版本3.2：&lt;a href=&quot;#array.array.fromstring&quot;&gt; &lt;code&gt;fromstring()&lt;/code&gt; &lt;/a&gt;更名为&lt;a href=&quot;#array.array.frombytes&quot;&gt; &lt;code&gt;frombytes()&lt;/code&gt; &lt;/a&gt;的清晰度。</target>
        </trans-unit>
        <trans-unit id="488e827468c8402f0be6892563ca51a7f7278aa7" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;a href=&quot;#array.array.tostring&quot;&gt;&lt;code&gt;tostring()&lt;/code&gt;&lt;/a&gt; is renamed to &lt;a href=&quot;#array.array.tobytes&quot;&gt;&lt;code&gt;tobytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">3.2版中的新功能：为清晰起见，&lt;a href=&quot;#array.array.tostring&quot;&gt; &lt;code&gt;tostring()&lt;/code&gt; &lt;/a&gt;重命名为&lt;a href=&quot;#array.array.tobytes&quot;&gt; &lt;code&gt;tobytes()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="65be5f1abc346b5a084ab6611d2dcd14b97b4c5c" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;a href=&quot;#unittest.TestCase.assertNotRegex&quot;&gt;&lt;code&gt;assertNotRegex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">版本3.2中的新功能：&lt;a href=&quot;#unittest.TestCase.assertNotRegex&quot;&gt; &lt;code&gt;assertNotRegex()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9df3735582c48b073e7a16fa82ca6c9e225bf665" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;code&gt;fromstring()&lt;/code&gt; is renamed to &lt;a href=&quot;#array.array.frombytes&quot;&gt;&lt;code&gt;frombytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">新版本3.2： &lt;code&gt;fromstring()&lt;/code&gt; 更名为&lt;a href=&quot;#array.array.frombytes&quot;&gt; &lt;code&gt;frombytes()&lt;/code&gt; &lt;/a&gt;的清晰度。</target>
        </trans-unit>
        <trans-unit id="8b17191ede606c26b4c8116dfbc25448c9f8f280" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;code&gt;pdb.py&lt;/code&gt; now accepts a &lt;code&gt;-c&lt;/code&gt; option that executes commands as if given in a &lt;code&gt;.pdbrc&lt;/code&gt; file, see &lt;a href=&quot;#debugger-commands&quot;&gt;Debugger Commands&lt;/a&gt;.</source>
          <target state="translated">3.2版中的新增功能： &lt;code&gt;pdb.py&lt;/code&gt; 现在接受 &lt;code&gt;-c&lt;/code&gt; 选项，该选项执行命令的方式与 &lt;code&gt;.pdbrc&lt;/code&gt; 文件中给出的方式相同，请参见&lt;a href=&quot;#debugger-commands&quot;&gt;Debugger Commands&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95685927977b9dcf02e0264bd2425c95cb43cd4d" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;code&gt;tostring()&lt;/code&gt; is renamed to &lt;a href=&quot;#array.array.tobytes&quot;&gt;&lt;code&gt;tobytes()&lt;/code&gt;&lt;/a&gt; for clarity.</source>
          <target state="translated">3.2版中的新功能：为清晰起见， &lt;code&gt;tostring()&lt;/code&gt; 重命名为&lt;a href=&quot;#array.array.tobytes&quot;&gt; &lt;code&gt;tobytes()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc5a5d84b89ad5a4ba8ce3020321268ef0fa4d48" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;em&gt;body&lt;/em&gt; can now be an iterable.</source>
          <target state="translated">3.2版中的新功能：&lt;em&gt;body&lt;/em&gt;现在可以迭代。</target>
        </trans-unit>
        <trans-unit id="8a92a77a7766db733546c9b77cd133915e1079c0" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;em&gt;data&lt;/em&gt; can be an iterable object.</source>
          <target state="translated">3.2版中的新功能：&lt;em&gt;数据&lt;/em&gt;可以是可迭代的对象。</target>
        </trans-unit>
        <trans-unit id="492fab092548a082cfe9773b6e25423f9e425e63" translate="yes" xml:space="preserve">
          <source>New in version 3.2: &lt;em&gt;maxtasksperchild&lt;/em&gt;</source>
          <target state="translated">版本3.2中的新功能：&lt;em&gt;maxtasksperchild&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9af04aa0a51b0152280c245269d849a5d155aaa7" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Added support for the context management protocol.</source>
          <target state="translated">3.2版本的新内容:增加了对上下文管理协议的支持。</target>
        </trans-unit>
        <trans-unit id="c7e70655ae33c518c88446ef6624470fc4ce9d29" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Added the ability to use &lt;a href=&quot;#zipfile.ZipFile&quot;&gt;&lt;code&gt;ZipFile&lt;/code&gt;&lt;/a&gt; as a context manager.</source>
          <target state="translated">3.2版中的新增功能：添加了将&lt;a href=&quot;#zipfile.ZipFile&quot;&gt; &lt;code&gt;ZipFile&lt;/code&gt; &lt;/a&gt;用作上下文管理器的功能。</target>
        </trans-unit>
        <trans-unit id="d09766d62b8d99b219d60b276118965866ee5426" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Automatic addition of the &lt;code&gt;__wrapped__&lt;/code&gt; attribute.</source>
          <target state="translated">3.2版中的新功能：自动添加 &lt;code&gt;__wrapped__&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="6a2cb5a7143cca2378773c116c1731a3835404ed" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Context manager support.</source>
          <target state="translated">3.2版新增:支持上下文管理器。</target>
        </trans-unit>
        <trans-unit id="e4691f22ec6af8115c8ef643b32bf896e13020ae" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Copying of the &lt;code&gt;__annotations__&lt;/code&gt; attribute by default.</source>
          <target state="translated">3.2版中的新功能：默认情况下，复制 &lt;code&gt;__annotations__&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="d43b8283dd2a98a7af1fa11e7c76adbd21232c7c" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Optional &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;lineno&lt;/code&gt; attributes and arguments to &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; were added.</source>
          <target state="translated">3.2版中的新增功能：添加了可选的 &lt;code&gt;source&lt;/code&gt; 和 &lt;code&gt;lineno&lt;/code&gt; 属性以及&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;参数。</target>
        </trans-unit>
        <trans-unit id="00f6a39f554667e5933437ffc7d786f06f42d1ca" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Optional &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;lineno&lt;/code&gt; attributes and arguments to &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; were added.</source>
          <target state="translated">3.2版中的新功能： &lt;code&gt;lineno&lt;/code&gt; 了&lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;可选 &lt;code&gt;source&lt;/code&gt; 和lineno属性以及参数。</target>
        </trans-unit>
        <trans-unit id="fafccb4e9a5405ae3b834787685cd7c2b125b7e3" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Replaces &lt;a href=&quot;#configparser.ConfigParser.readfp&quot;&gt;&lt;code&gt;readfp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">版本3.2中的新功能：替换&lt;a href=&quot;#configparser.ConfigParser.readfp&quot;&gt; &lt;code&gt;readfp()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28b0f51bd56d33241ea9b5ddcc94c77be36c2020" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Restoration of the &lt;code&gt;rot_13&lt;/code&gt; text transform.</source>
          <target state="translated">版本3.2中的新功能：恢复 &lt;code&gt;rot_13&lt;/code&gt; 文本转换。</target>
        </trans-unit>
        <trans-unit id="970ab611ee1b762f1709817732af44838b6f66a1" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Restoration of the binary transforms.</source>
          <target state="translated">3.2版新增:恢复二进制变换。</target>
        </trans-unit>
        <trans-unit id="9dcceb3168131b28f25a8473e7a17f54fc795c88" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; marker.</source>
          <target state="translated">版本3.2中的新功能： &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="b402819ef1b2aed8bcd076ddf219c4cc93fd00a5" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;annotate&lt;/em&gt; argument.</source>
          <target state="translated">版本3.2中的新功能：带&lt;em&gt;注释的&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="e55bd4f980e8fc073a71ff35dfc24e9dd75e20d9" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;autojunk&lt;/em&gt; parameter.</source>
          <target state="translated">版本3.2中的新功能：&lt;em&gt;autojunk&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="2de34420d3f8e77e82c57b967288676e7b162df3" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;bjunk&lt;/em&gt; and &lt;em&gt;bpopular&lt;/em&gt; attributes.</source>
          <target state="translated">3.2版中的新功能：&lt;em&gt;bjunk&lt;/em&gt;和&lt;em&gt;bpopular&lt;/em&gt;属性。</target>
        </trans-unit>
        <trans-unit id="07dfce94408fc7eb43edf07bf810590d083842d0" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;encoding&lt;/em&gt; parameter. Previously, all files were read using the default encoding for &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">版本3.2中的新功能：&lt;em&gt;编码&lt;/em&gt;参数。以前，所有文件都是使用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;的默认编码读取的。</target>
        </trans-unit>
        <trans-unit id="e00307d0d1ac1787c787512ca063499efdae81fb" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;exist_ok&lt;/em&gt; parameter.</source>
          <target state="translated">版本3.2中的新功能：&lt;em&gt;exist_ok&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="5eff261c50725aaf56234c60b7ad321e0b6d7a28" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;nosigint&lt;/em&gt; argument. Previously, a SIGINT handler was never set by Pdb.</source>
          <target state="translated">版本3.2中的新功能：&lt;em&gt;nosigint&lt;/em&gt;参数。以前，Pdb从未设置过SIGINT处理程序。</target>
        </trans-unit>
        <trans-unit id="d9d3ff17279278f1fbe533d1cb8d4a4e101a51cb" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;optimize&lt;/em&gt; parameter.</source>
          <target state="translated">版本3.2中的新功能：&lt;em&gt;优化&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="e360c3f1e3102b0b5025a254db53852cc697487a" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The &lt;em&gt;short_empty_elements&lt;/em&gt; parameter.</source>
          <target state="translated">版本3.2中的新功能：&lt;em&gt;short_empty_elements&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="0d065c9ae385620cf6d16a31d56d0cbb370df8a1" translate="yes" xml:space="preserve">
          <source>New in version 3.2: The command-line options &lt;code&gt;-b&lt;/code&gt;, &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;-f&lt;/code&gt; were added.</source>
          <target state="translated">版本3.2中的新增功能：添加了命令行选项 &lt;code&gt;-b&lt;/code&gt; ， &lt;code&gt;-c&lt;/code&gt; 和 &lt;code&gt;-f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a75b199eafd71fb28b679c45575e353e48ba2b36" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This class was previously named &lt;code&gt;_TextTestResult&lt;/code&gt;. The old name still exists as an alias but is deprecated.</source>
          <target state="translated">版本3.2中的新功能：此类以前称为 &lt;code&gt;_TextTestResult&lt;/code&gt; 。旧名称仍然作为别名存在，但已过时。</target>
        </trans-unit>
        <trans-unit id="82b107c9c10c5a55aee4a0e3debb2416f6131861" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This function has been provided, along with &lt;a href=&quot;#logging.getLogRecordFactory&quot;&gt;&lt;code&gt;getLogRecordFactory()&lt;/code&gt;&lt;/a&gt;, to allow developers more control over how the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; representing a logging event is constructed.</source>
          <target state="translated">3.2版中的新增功能：此函数与&lt;a href=&quot;#logging.getLogRecordFactory&quot;&gt; &lt;code&gt;getLogRecordFactory()&lt;/code&gt; &lt;/a&gt;一起提供，以允许开发人员更好地控制表示日志记录事件的&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; 的&lt;/a&gt;构造方式。</target>
        </trans-unit>
        <trans-unit id="196f39022abdb30b19d21c28520cda8cdeace93c" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This function has been provided, along with &lt;a href=&quot;#logging.setLogRecordFactory&quot;&gt;&lt;code&gt;setLogRecordFactory()&lt;/code&gt;&lt;/a&gt;, to allow developers more control over how the &lt;a href=&quot;#logging.LogRecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; representing a logging event is constructed.</source>
          <target state="translated">3.2版中的新增功能：此函数与&lt;a href=&quot;#logging.setLogRecordFactory&quot;&gt; &lt;code&gt;setLogRecordFactory()&lt;/code&gt; &lt;/a&gt;一起提供，以使开发人员可以更好地控制表示记录事件的&lt;a href=&quot;#logging.LogRecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; 的&lt;/a&gt;构造方式。</target>
        </trans-unit>
        <trans-unit id="5feff224bf3a58e8d61eacdd8a8522e0dbed87b0" translate="yes" xml:space="preserve">
          <source>New in version 3.2: This function was first removed in Python 3.0 and then brought back in Python 3.2.</source>
          <target state="translated">3.2 版的新内容:这个函数在 Python 3.0 中首先被删除,然后在 Python 3.2 中又被带回来。</target>
        </trans-unit>
        <trans-unit id="da106e3ee3289214b471fcbb56de045708a54150" translate="yes" xml:space="preserve">
          <source>New in version 3.2: Windows support.</source>
          <target state="translated">3.2版本的新内容:支持Windows。</target>
        </trans-unit>
        <trans-unit id="e656aeccfdd3bd906cae00fa7c0478f89eb5d3a9" translate="yes" xml:space="preserve">
          <source>New in version 3.3.</source>
          <target state="translated">3.3版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="f3e98ffdcb282b0853dcb031735ce601012ab4f1" translate="yes" xml:space="preserve">
          <source>New in version 3.3: &lt;code&gt;clear()&lt;/code&gt; and &lt;code&gt;copy()&lt;/code&gt; methods.</source>
          <target state="translated">3.3版的新增功能： &lt;code&gt;clear()&lt;/code&gt; 和 &lt;code&gt;copy()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c5e4a238bfa33077d729fa48ecf1b789826f4102" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as a file descriptor on some platforms.</source>
          <target state="translated">版本3.3中的新增功能：在某些平台上增加了对将&lt;em&gt;路径&lt;/em&gt;指定为文件描述符的支持。</target>
        </trans-unit>
        <trans-unit id="16af71ee4e36ec0cae6b181b694b7f51956f7a0c" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor for &lt;a href=&quot;#os.execve&quot;&gt;&lt;code&gt;execve()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">3.3版的新增功能：添加了对将&lt;em&gt;路径&lt;/em&gt;指定为&lt;a href=&quot;#os.execve&quot;&gt; &lt;code&gt;execve()&lt;/code&gt; &lt;/a&gt;的打开文件描述符的支持。</target>
        </trans-unit>
        <trans-unit id="038d2a2d4a390798684aa8f618e2a86258a63438" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor, and the &lt;em&gt;dir_fd&lt;/em&gt; and &lt;em&gt;follow_symlinks&lt;/em&gt; arguments.</source>
          <target state="translated">3.3版的新增功能：添加了对将&lt;em&gt;路径&lt;/em&gt;指定为打开文件描述符以及&lt;em&gt;dir_fd&lt;/em&gt;和&lt;em&gt;follow_symlinks&lt;/em&gt;参数的支持。</target>
        </trans-unit>
        <trans-unit id="c61f8f029e31102256de167c06ecfbdb5b027ab4" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor, and the &lt;em&gt;dir_fd&lt;/em&gt;, &lt;em&gt;follow_symlinks&lt;/em&gt;, and &lt;em&gt;ns&lt;/em&gt; parameters.</source>
          <target state="translated">3.3版中的新增功能：添加了对将&lt;em&gt;路径&lt;/em&gt;指定为打开文件描述符以及&lt;em&gt;dir_fd&lt;/em&gt;，&lt;em&gt;follow_symlinks&lt;/em&gt;和&lt;em&gt;ns&lt;/em&gt;参数的支持。</target>
        </trans-unit>
        <trans-unit id="c25592d4be380fcbfc21e2a7e95a3669a8c8becd" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for specifying &lt;em&gt;path&lt;/em&gt; as an open file descriptor.</source>
          <target state="translated">版本3.3中的新增功能：添加了对将&lt;em&gt;路径&lt;/em&gt;指定为打开文件描述符的支持。</target>
        </trans-unit>
        <trans-unit id="76739bbab39d5c2710046bf45eec1397909326fd" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added support for unary plus, unary minus, and in-place multiset operations.</source>
          <target state="translated">3.3版的新内容:增加了对单数加、单数减和原地多集运算的支持。</target>
        </trans-unit>
        <trans-unit id="046d02c5d1094d36422bcd5465bc69373e23f681" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;a href=&quot;#os.stat_result.st_atime_ns&quot;&gt;&lt;code&gt;st_atime_ns&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.stat_result.st_mtime_ns&quot;&gt;&lt;code&gt;st_mtime_ns&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#os.stat_result.st_ctime_ns&quot;&gt;&lt;code&gt;st_ctime_ns&lt;/code&gt;&lt;/a&gt; members.</source>
          <target state="translated">3.3版中的新增功能：添加了&lt;a href=&quot;#os.stat_result.st_atime_ns&quot;&gt; &lt;code&gt;st_atime_ns&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.stat_result.st_mtime_ns&quot;&gt; &lt;code&gt;st_mtime_ns&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.stat_result.st_ctime_ns&quot;&gt; &lt;code&gt;st_ctime_ns&lt;/code&gt; &lt;/a&gt;成员。</target>
        </trans-unit>
        <trans-unit id="7a588e30cae71f1b15d920765c3d80c0bf7800b8" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;em&gt;dir_fd&lt;/em&gt; and &lt;em&gt;follow_symlinks&lt;/em&gt; arguments, specifying a file descriptor instead of a path.</source>
          <target state="translated">3.3版的新增功能：添加了&lt;em&gt;dir_fd&lt;/em&gt;和&lt;em&gt;follow_symlinks&lt;/em&gt;参数，指定了文件描述符而不是路径。</target>
        </trans-unit>
        <trans-unit id="216100c31adc18c23bb9e9b560bc677eca6633bd" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;em&gt;dir_fd&lt;/em&gt; argument, and now allow &lt;em&gt;target_is_directory&lt;/em&gt; on non-Windows platforms.</source>
          <target state="translated">3.3版中的新增功能：添加了&lt;em&gt;dir_fd&lt;/em&gt;参数，现在允许在非Windows平台上使用&lt;em&gt;target_is_directory&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cb1fa9f44f4b3e986271d3360090ef64263dfa98" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Added the &lt;em&gt;src_dir_fd&lt;/em&gt;, &lt;em&gt;dst_dir_fd&lt;/em&gt;, and &lt;em&gt;follow_symlinks&lt;/em&gt; arguments.</source>
          <target state="translated">3.3版中的新增功能：添加了&lt;em&gt;src_dir_fd&lt;/em&gt;，&lt;em&gt;dst_dir_fd&lt;/em&gt;和&lt;em&gt;follow_symlinks&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="690563f7aa9f77702829a99858275338d41ffc11" translate="yes" xml:space="preserve">
          <source>New in version 3.3: All the above &lt;a href=&quot;#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; subclasses were added.</source>
          <target state="translated">版本3.3 中的新增功能：添加了上述所有&lt;a href=&quot;#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="d7c35a84efd3292c4e322bb6cd08bf0c445e5d0c" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Connection objects now support the context management protocol &amp;ndash; see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;. &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; returns the connection object, and &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#multiprocessing.connection.Connection.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">版本3.3中的新增功能：连接对象现在支持上下文管理协议&amp;ndash;请参阅&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;上下文管理器类型&lt;/a&gt;。&lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;返回连接对象，而&lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;调用&lt;a href=&quot;#multiprocessing.connection.Connection.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43b79ec2cfdf493c4c7ba024e42791b064af21b0" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Formerly, this module was part of the &lt;a href=&quot;collections#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">版本3.3中的新增功能：以前，此模块是&lt;a href=&quot;collections#module-collections&quot;&gt; &lt;code&gt;collections&lt;/code&gt; &lt;/a&gt;模块的一部分。</target>
        </trans-unit>
        <trans-unit id="7ebcbd28e34b67cd966b999669d0242ada456632" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Listener objects now support the context management protocol &amp;ndash; see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;. &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; returns the listener object, and &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#multiprocessing.connection.Listener.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">3.3版中的新增功能：侦听器对象现在支持上下文管理协议&amp;ndash;请参阅&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;。&lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;返回侦听器对象，而&lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;调用&lt;a href=&quot;#multiprocessing.connection.Listener.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70103fb68f7f0cfa32aba69ba39031a736a2d76b" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Pool objects now support the context management protocol &amp;ndash; see &lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;Context Manager Types&lt;/a&gt;. &lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt; returns the pool object, and &lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt; calls &lt;a href=&quot;#multiprocessing.pool.Pool.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">版本3.3中的新增功能：池对象现在支持上下文管理协议&amp;ndash;请参阅&lt;a href=&quot;stdtypes#typecontextmanager&quot;&gt;上下文管理器类型&lt;/a&gt;。&lt;a href=&quot;stdtypes#contextmanager.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;返回池对象，而&lt;a href=&quot;stdtypes#contextmanager.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;调用Terminate &lt;a href=&quot;#multiprocessing.pool.Pool.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0564ad09da5d11fa74ab8521856c7a0ee08a4a38" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Some operating systems could support additional values, like &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; or &lt;code&gt;os.SEEK_DATA&lt;/code&gt;.</source>
          <target state="translated">3.3版的新增功能：某些操作系统可能支持其他值，例如 &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; 或 &lt;code&gt;os.SEEK_DATA&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28848c417a2cec6f368a3d64351da7441b8eda2f" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Some operating systems could support additional values, like &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; or &lt;code&gt;os.SEEK_DATA&lt;/code&gt;. The valid values for a file could depend on it being open in text or binary mode.</source>
          <target state="translated">3.3版的新增功能：某些操作系统可能支持其他值，例如 &lt;code&gt;os.SEEK_HOLE&lt;/code&gt; 或 &lt;code&gt;os.SEEK_DATA&lt;/code&gt; 。文件的有效值可能取决于以文本或二进制模式打开的文件。</target>
        </trans-unit>
        <trans-unit id="e8db3552cce786db5f51c5e10688a0e7ea38316b" translate="yes" xml:space="preserve">
          <source>New in version 3.3: Support for Chrome/Chromium has been added.</source>
          <target state="translated">3.3版本的新内容:增加了对Chrome/Chromium的支持。</target>
        </trans-unit>
        <trans-unit id="e3a14a6878f1d57e3a61755e1e35f512ac6cf6a9" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;a href=&quot;#range.start&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#range.stop&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#range.step&quot;&gt;&lt;code&gt;step&lt;/code&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">3.3版的新增功能：&lt;a href=&quot;#range.start&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#range.stop&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#range.step&quot;&gt; &lt;code&gt;step&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="738beaa1df24e84cceeec4368cebe369172c2a07" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;a href=&quot;#subprocess.SubprocessError&quot;&gt;&lt;code&gt;SubprocessError&lt;/code&gt;&lt;/a&gt; base class was added.</source>
          <target state="translated">版本3.3中的新增功能：添加了&lt;a href=&quot;#subprocess.SubprocessError&quot;&gt; &lt;code&gt;SubprocessError&lt;/code&gt; &lt;/a&gt;基类。</target>
        </trans-unit>
        <trans-unit id="bd2ee4ce23d4cda751ffdf5ed2ab607d0320d229" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;dir_fd&lt;/em&gt; argument.</source>
          <target state="translated">版本3.3中的&lt;em&gt;新增功能&lt;/em&gt;：&lt;em&gt;dir_fd&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="8bbb7dcfc93a3256da3e77e30128896f8934e79e" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;dir_fd&lt;/em&gt; parameter.</source>
          <target state="translated">版本3.3中的&lt;em&gt;新增功能&lt;/em&gt;：&lt;em&gt;dir_fd&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="8e3679a20a6466e36ee13269b95778590402cdc8" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;follow_symlinks&lt;/em&gt; argument.</source>
          <target state="translated">版本3.3中的&lt;em&gt;新增功能&lt;/em&gt;：&lt;em&gt;follow_symlinks&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="f5a1bcb4d58f63caf511ef4af7b5a61495f919de" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;src_dir_fd&lt;/em&gt; and &lt;em&gt;dst_dir_fd&lt;/em&gt; arguments.</source>
          <target state="translated">版本3.3中的&lt;em&gt;新增功能&lt;/em&gt;：&lt;em&gt;src_dir_fd&lt;/em&gt;和&lt;em&gt;dst_dir_fd&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="959865bf3e479ce8479a65e679ed0d30ba7e0c4b" translate="yes" xml:space="preserve">
          <source>New in version 3.3: The &lt;em&gt;timeout&lt;/em&gt; argument was added.</source>
          <target state="translated">版本3.3 中的新增功能：添加了&lt;em&gt;timeout&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="ff5f89afe35355ca3e836deef3c91bc2e3c948b4" translate="yes" xml:space="preserve">
          <source>New in version 3.3: This error used to be a subtype of &lt;a href=&quot;exceptions#IOError&quot;&gt;&lt;code&gt;IOError&lt;/code&gt;&lt;/a&gt;, which is now an alias of &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">3.3版的新增功能：此错误曾经是&lt;a href=&quot;exceptions#IOError&quot;&gt; &lt;code&gt;IOError&lt;/code&gt; &lt;/a&gt;的子类型，现在是&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="41224dc3ad1482785fdd83d4be25d59287870563" translate="yes" xml:space="preserve">
          <source>New in version 3.4.</source>
          <target state="translated">3.4版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="c2d2413b8a3a54c5ac894c0e648d044eed2cfc3a" translate="yes" xml:space="preserve">
          <source>New in version 3.4.2.</source>
          <target state="translated">3.4.2版本的新内容。</target>
        </trans-unit>
        <trans-unit id="3d45319c8b08d09575a413772fc1dfd31f6be0bd" translate="yes" xml:space="preserve">
          <source>New in version 3.4.4.</source>
          <target state="translated">3.4.4版本的新内容。</target>
        </trans-unit>
        <trans-unit id="d3fc5c5c6b68de9938f037f211d874194800b33d" translate="yes" xml:space="preserve">
          <source>New in version 3.4: &lt;code&gt;--bind&lt;/code&gt; argument was introduced.</source>
          <target state="translated">3.4版中的新功能：引入了 &lt;code&gt;--bind&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="04e6b7704b4197ee6a706885b339be509977b09a" translate="yes" xml:space="preserve">
          <source>New in version 3.4: &lt;code&gt;fish&lt;/code&gt; and &lt;code&gt;csh&lt;/code&gt; activation scripts.</source>
          <target state="translated">3.4版中的新功能： &lt;code&gt;fish&lt;/code&gt; 和 &lt;code&gt;csh&lt;/code&gt; 激活脚本。</target>
        </trans-unit>
        <trans-unit id="07c6d19e4ee989f8d0d6e80bb2cbc4015ab1781f" translate="yes" xml:space="preserve">
          <source>New in version 3.4: &lt;em&gt;context&lt;/em&gt;</source>
          <target state="translated">3.4版的新功能：&lt;em&gt;上下文&lt;/em&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
