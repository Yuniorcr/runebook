<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="9f6e0effa06c3e5c138d8490e703f490b0039368" translate="yes" xml:space="preserve">
          <source>New in version 3.4: is_global</source>
          <target state="translated">3.4版新增:is_global。</target>
        </trans-unit>
        <trans-unit id="1f837cd28063a6c218f31e72720b5003175aed01" translate="yes" xml:space="preserve">
          <source>New in version 3.5.</source>
          <target state="translated">3.5版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="1fa95c8a406c55887ed636be5dccd00a7a0fa295" translate="yes" xml:space="preserve">
          <source>New in version 3.5.1.</source>
          <target state="translated">3.5.1版本的新内容。</target>
        </trans-unit>
        <trans-unit id="8b612aef28c4f185839e563a8a96375f82700410" translate="yes" xml:space="preserve">
          <source>New in version 3.5.2.</source>
          <target state="translated">3.5.2版本的新内容。</target>
        </trans-unit>
        <trans-unit id="2c7957076db9f4d38f7ee1ad92950f56a72edea9" translate="yes" xml:space="preserve">
          <source>New in version 3.5.3.</source>
          <target state="translated">3.5.3版本的新内容。</target>
        </trans-unit>
        <trans-unit id="07321da105ae55ff5d5709eae1f53e75964ddc33" translate="yes" xml:space="preserve">
          <source>New in version 3.5.4.</source>
          <target state="translated">3.5.4版本的新内容。</target>
        </trans-unit>
        <trans-unit id="3fbc5dfdcbe6f0de84bdbc30382ee50720861f9c" translate="yes" xml:space="preserve">
          <source>New in version 3.5: &lt;code&gt;follow_wrapped&lt;/code&gt; parameter. Pass &lt;code&gt;False&lt;/code&gt; to get a signature of &lt;code&gt;callable&lt;/code&gt; specifically (&lt;code&gt;callable.__wrapped__&lt;/code&gt; will not be used to unwrap decorated callables.)</source>
          <target state="translated">3.5版中的新功能： &lt;code&gt;follow_wrapped&lt;/code&gt; 参数。传递 &lt;code&gt;False&lt;/code&gt; 以获得 &lt;code&gt;callable&lt;/code&gt; 的签名（ &lt;code&gt;callable.__wrapped__&lt;/code&gt; 不会用于包装修饰的可调用对象。）</target>
        </trans-unit>
        <trans-unit id="9e2d52bce291ba21a1b94d4b005b1cf7dc019b90" translate="yes" xml:space="preserve">
          <source>New in version 3.5: &lt;em&gt;quote_via&lt;/em&gt; parameter.</source>
          <target state="translated">3.5版中的新功能：&lt;em&gt;quote_via&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="0a2103b4477c36713c1b4425a3142a28baa40aa4" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Added &lt;code&gt;is_authenticated&lt;/code&gt; support.</source>
          <target state="translated">3.5版的新增功能：添加了 &lt;code&gt;is_authenticated&lt;/code&gt; 支持。</target>
        </trans-unit>
        <trans-unit id="0178c262a4c0123cec8f5bef7190a7211f72daae" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Added the &lt;a href=&quot;#os.stat_result.st_file_attributes&quot;&gt;&lt;code&gt;st_file_attributes&lt;/code&gt;&lt;/a&gt; member on Windows.</source>
          <target state="translated">3.5版的新增功能：在Windows上添加了&lt;a href=&quot;#os.stat_result.st_file_attributes&quot;&gt; &lt;code&gt;st_file_attributes&lt;/code&gt; &lt;/a&gt;成员。</target>
        </trans-unit>
        <trans-unit id="8df129ebe6df04e6f5367d827d4028abd2387a31" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Previously, &lt;a href=&quot;#http.client.BadStatusLine&quot;&gt;&lt;code&gt;BadStatusLine&lt;/code&gt;&lt;/a&gt;&lt;code&gt;('')&lt;/code&gt; was raised.</source>
          <target state="translated">版本3.5中的新增功能：以前，已引发&lt;a href=&quot;#http.client.BadStatusLine&quot;&gt; &lt;code&gt;BadStatusLine&lt;/code&gt; &lt;/a&gt; &lt;code&gt;('')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9180aafc542f6e962e2074854b1f38f5061dcdf6" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Previously, a plain &lt;a href=&quot;#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; was raised.</source>
          <target state="translated">3.5版的新增功能：以前，提出了一个普通的&lt;a href=&quot;#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b54ddd1a8adfffd3e1ed259fed23234d3a80add" translate="yes" xml:space="preserve">
          <source>New in version 3.5: Support for internationalized addresses (&lt;code&gt;SMTPUTF8&lt;/code&gt;).</source>
          <target state="translated">3.5版的新增功能：支持国际化地址（ &lt;code&gt;SMTPUTF8&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="146b7ebb3f774b3f489ea95a898318e2a4680f5a" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The &lt;a href=&quot;#imaplib.IMAP4.enable&quot;&gt;&lt;code&gt;enable()&lt;/code&gt;&lt;/a&gt; method itself, and &lt;a href=&quot;https://tools.ietf.org/html/rfc6855.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 6855&lt;/strong&gt;&lt;/a&gt; support.</source>
          <target state="translated">3.5版中的新功能：&lt;a href=&quot;#imaplib.IMAP4.enable&quot;&gt; &lt;code&gt;enable()&lt;/code&gt; &lt;/a&gt;方法本身以及&lt;a href=&quot;https://tools.ietf.org/html/rfc6855.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 6855&lt;/strong&gt;&lt;/a&gt;支持。</target>
        </trans-unit>
        <trans-unit id="3d5702ae33ccc35d4ec27c96ab0f6748c1bfbbce" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The &lt;code&gt;'namereplace'&lt;/code&gt; error handler.</source>
          <target state="translated">版本3.5中的新增功能： &lt;code&gt;'namereplace'&lt;/code&gt; 错误处理程序。</target>
        </trans-unit>
        <trans-unit id="c97b2effe0e40cd82111946917872bd69cee668e" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The &lt;em&gt;decode_data&lt;/em&gt; and &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; constructor parameters, and the &lt;em&gt;kwargs&lt;/em&gt; parameter to &lt;a href=&quot;#smtpd.SMTPServer.process_message&quot;&gt;&lt;code&gt;process_message()&lt;/code&gt;&lt;/a&gt; when &lt;em&gt;decode_data&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">3.5版中的新增功能：当&lt;em&gt;decode_data&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; 时，&lt;em&gt;decode_data&lt;/em&gt;和&lt;em&gt;enable_SMTPUTF8&lt;/em&gt;构造函数参数以及&lt;a href=&quot;#smtpd.SMTPServer.process_message&quot;&gt; &lt;code&gt;process_message()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;kwargs&lt;/em&gt;参数。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="503c88f7cc88d9c109004b72250f22c5abdb8141" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The &lt;em&gt;exr&lt;/em&gt; and &lt;em&gt;webp&lt;/em&gt; formats were added.</source>
          <target state="translated">3.5版的新功能：添加了&lt;em&gt;exr&lt;/em&gt;和&lt;em&gt;webp&lt;/em&gt;格式。</target>
        </trans-unit>
        <trans-unit id="3cfbf13ed17363441f3df8820387841a221acb2f" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The &lt;em&gt;mangle_from_&lt;/em&gt; parameter.</source>
          <target state="translated">3.5版中的新功能：&lt;em&gt;mangle_from_&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="b705147dd17b73bdb5144032054ce3ee0a848bed" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The SMTPUTF8 extension (&lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;) is now supported.</source>
          <target state="translated">版本3.5中的新增功能：现在支持SMTPUTF8扩展（&lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4071071236fe8569928d891b12576f7b86895ed7" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The command-line option &lt;code&gt;--locals&lt;/code&gt;.</source>
          <target state="translated">3.5版的新功能：命令行选项 &lt;code&gt;--locals&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f069158efc3960b336f0767e900a4a5a3e81e366" translate="yes" xml:space="preserve">
          <source>New in version 3.5: The name &lt;code&gt;assertNotRegexpMatches&lt;/code&gt; is a deprecated alias for &lt;a href=&quot;#unittest.TestCase.assertNotRegex&quot;&gt;&lt;code&gt;assertNotRegex()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">版本3.5中的新增功能：名称 &lt;code&gt;assertNotRegexpMatches&lt;/code&gt; 是&lt;a href=&quot;#unittest.TestCase.assertNotRegex&quot;&gt; &lt;code&gt;assertNotRegex()&lt;/code&gt; &lt;/a&gt;的不赞成使用的别名。</target>
        </trans-unit>
        <trans-unit id="19bf2295406fe646f85406c7590ce23f4c62ad62" translate="yes" xml:space="preserve">
          <source>New in version 3.6.</source>
          <target state="translated">3.6版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="90349cc2f262d4c23d65ab39676f28264f9ab398" translate="yes" xml:space="preserve">
          <source>New in version 3.6.0.</source>
          <target state="translated">3.6.0版本的新内容。</target>
        </trans-unit>
        <trans-unit id="45594f8e6c19eac8ab677c7056e00b26cfb95c1f" translate="yes" xml:space="preserve">
          <source>New in version 3.6.1.</source>
          <target state="translated">在3.6.1版本中新增。</target>
        </trans-unit>
        <trans-unit id="5a7ee2ea584d1e3940ee533dbeaa4e452bd13404" translate="yes" xml:space="preserve">
          <source>New in version 3.6.1: The &lt;em&gt;filenames&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">版本3.6.1中的新功能：&lt;em&gt;filenames&lt;/em&gt;参数接受类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径的对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05a9dd80d7229228d769b87c1f8dedd762ef825f" translate="yes" xml:space="preserve">
          <source>New in version 3.6.1: The &lt;em&gt;filenames&lt;/em&gt; parameter accepts a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7a6843b86d2ae87bc59ed04e6f809cf47c50e6" translate="yes" xml:space="preserve">
          <source>New in version 3.6.2.</source>
          <target state="translated">在3.6.2版本中新增。</target>
        </trans-unit>
        <trans-unit id="80dfc6066f14bf6496d45305c08af7a4c450a97c" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;a href=&quot;#hashlib.blake2b&quot;&gt;&lt;code&gt;blake2b()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hashlib.blake2s&quot;&gt;&lt;code&gt;blake2s()&lt;/code&gt;&lt;/a&gt; were added.</source>
          <target state="translated">3.6版中的新功能：添加了&lt;a href=&quot;#hashlib.blake2b&quot;&gt; &lt;code&gt;blake2b()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#hashlib.blake2s&quot;&gt; &lt;code&gt;blake2s()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4340416fdc1fa009b4460cbe3e9816c6f0043daf" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</source>
          <target state="translated">3.6版的新功能：&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2feeb245024eb57add73d00ab775abcb904e866" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;code&gt;%G&lt;/code&gt;, &lt;code&gt;%u&lt;/code&gt; and &lt;code&gt;%V&lt;/code&gt; were added.</source>
          <target state="translated">3.6版中的新功能：添加了 &lt;code&gt;%G&lt;/code&gt; ， &lt;code&gt;%u&lt;/code&gt; 和 &lt;code&gt;%V&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c218c216bff866c0b87e532df3da0d215cc23a5f" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;code&gt;EPOLLEXCLUSIVE&lt;/code&gt; was added. It&amp;rsquo;s only supported by Linux Kernel 4.5 or later.</source>
          <target state="translated">3.6版中的新功能：添加了 &lt;code&gt;EPOLLEXCLUSIVE&lt;/code&gt; 。仅Linux Kernel 4.5或更高版本支持。</target>
        </trans-unit>
        <trans-unit id="67f3b398e277e32be1c6a0466247dee478994e07" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;code&gt;Flag&lt;/code&gt;, &lt;code&gt;IntFlag&lt;/code&gt;, &lt;code&gt;auto&lt;/code&gt;</source>
          <target state="translated">3.6版的新功能： &lt;code&gt;Flag&lt;/code&gt; ， &lt;code&gt;IntFlag&lt;/code&gt; ， &lt;code&gt;auto&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d27e2376c72696bcc77e2fe6f41dd1602bc5773c" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;code&gt;_missing_&lt;/code&gt;, &lt;code&gt;_order_&lt;/code&gt;, &lt;code&gt;_generate_next_value_&lt;/code&gt;</source>
          <target state="translated">新版本3.6： &lt;code&gt;_missing_&lt;/code&gt; ， &lt;code&gt;_order_&lt;/code&gt; ， &lt;code&gt;_generate_next_value_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b10e005437ad547a8fd8e2ccd4b8b20d9e4c5dff" translate="yes" xml:space="preserve">
          <source>New in version 3.6: &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; were added.</source>
          <target state="translated">3.6版中的新功能：添加了&lt;em&gt;编码&lt;/em&gt;和&lt;em&gt;错误&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="12ace1f101bca9a308b177329a35f1d66d6db703" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; parameters.</source>
          <target state="translated">3.6版的新功能：添加了&lt;em&gt;编码&lt;/em&gt;和&lt;em&gt;错误&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="e301bee116d339912a92c894a8a22f3f1fa59962" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added support for the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and the &lt;a href=&quot;#os.scandir.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method. If a &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; iterator is neither exhausted nor explicitly closed a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; will be emitted in its destructor.</source>
          <target state="translated">3.6版中的新功能：添加了对&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;上下文管理器&lt;/a&gt;协议和&lt;a href=&quot;#os.scandir.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;方法的支持。如果&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;迭代器既没有耗尽也没有明确关闭，则它将在其析构函数中发出&lt;a href=&quot;exceptions#ResourceWarning&quot;&gt; &lt;code&gt;ResourceWarning&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5b4eead1f21e0be519048e687407e0242c63c73" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added support for the &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol and the &lt;a href=&quot;#os.scandir.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method. If a &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; iterator is neither exhausted nor explicitly closed a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt; will be emitted in its destructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b402613c2d781a5a7bb0dd32b82d79f1ecb4727b" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added the &lt;code&gt;fold&lt;/code&gt; argument.</source>
          <target state="translated">3.6版的新功能：添加了 &lt;code&gt;fold&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="00930151a8d899f4720871c54b11a77ab5264e8f" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added the &lt;code&gt;prompt&lt;/code&gt; parameter</source>
          <target state="translated">3.6版的新功能：添加了 &lt;code&gt;prompt&lt;/code&gt; 参数</target>
        </trans-unit>
        <trans-unit id="5f1a9af93f36ac766f8daa131d6c0d3f78622179" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Added the &lt;em&gt;timespec&lt;/em&gt; argument.</source>
          <target state="translated">3.6版的新功能：添加了&lt;em&gt;timespec&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="7066aa1da03dd2863a3d30aa190f6000662f4314" translate="yes" xml:space="preserve">
          <source>New in version 3.6: Chunked encoding support. The &lt;em&gt;encode_chunked&lt;/em&gt; parameter was added.</source>
          <target state="translated">3.6版的新功能：块编码支持。该&lt;em&gt;encode_chunked&lt;/em&gt;加入参数。</target>
        </trans-unit>
        <trans-unit id="a58ba40e7a25c57becebc3eef2d13a66d5397af8" translate="yes" xml:space="preserve">
          <source>New in version 3.6: SHA3 (Keccak) and SHAKE constructors &lt;code&gt;sha3_224()&lt;/code&gt;, &lt;code&gt;sha3_256()&lt;/code&gt;, &lt;code&gt;sha3_384()&lt;/code&gt;, &lt;code&gt;sha3_512()&lt;/code&gt;, &lt;code&gt;shake_128()&lt;/code&gt;, &lt;code&gt;shake_256()&lt;/code&gt;.</source>
          <target state="translated">3.6版中的新功能：SHA3（Keccak）和SHAKE构造函数 &lt;code&gt;sha3_224()&lt;/code&gt; ， &lt;code&gt;sha3_256()&lt;/code&gt; ， &lt;code&gt;sha3_384()&lt;/code&gt; ， &lt;code&gt;sha3_512()&lt;/code&gt; ， &lt;code&gt;shake_128()&lt;/code&gt; ， &lt;code&gt;shake_256()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba67193ad20bf5f9e114ef18a7615f3b1a6f3fc7" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">3.6版的新功能：有关更多详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-11&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6bd06fa71e11edc99f68e21763a25ff9db9b852" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a8a06257d0d3aa4bc5a3c9830582cf1e8ac1b0" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-27&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details, and for a reference example of a &lt;em&gt;finalizer&lt;/em&gt; method see the implementation of &lt;code&gt;asyncio.Loop.shutdown_asyncgens&lt;/code&gt; in &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_events.py&quot;&gt;Lib/asyncio/base_events.py&lt;/a&gt;</source>
          <target state="translated">新的3.6版：见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-27&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt;了解更多详情，并为一个参考例子&lt;em&gt;终结&lt;/em&gt;方法参见实施 &lt;code&gt;asyncio.Loop.shutdown_asyncgens&lt;/code&gt; 在&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_events.py&quot;&gt;库/ ASYNCIO / base_events.py&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84632b7133b2afb86ab03dd6882451587698652f" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0525&quot; id=&quot;index-28&quot;&gt;&lt;strong&gt;PEP 525&lt;/strong&gt;&lt;/a&gt; for more details, and for a reference example of a &lt;em&gt;finalizer&lt;/em&gt; method see the implementation of &lt;code&gt;asyncio.Loop.shutdown_asyncgens&lt;/code&gt; in &lt;a href=&quot;https://github.com/python/cpython/tree/3.9/Lib/asyncio/base_events.py&quot;&gt;Lib/asyncio/base_events.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0029940bca23ccdb728fe00850c420e066576083" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-31&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">3.6版的新功能：有关更多详细信息，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-31&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e7dd86913abfca211bf3678e445f5e8d9da9a64" translate="yes" xml:space="preserve">
          <source>New in version 3.6: See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0529&quot; id=&quot;index-32&quot;&gt;&lt;strong&gt;PEP 529&lt;/strong&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4aac78a8599305666d1bcd98d489c9b474ee017" translate="yes" xml:space="preserve">
          <source>New in version 3.6: The &lt;em&gt;strict&lt;/em&gt; argument (pre-3.6 behavior is strict).</source>
          <target state="translated">3.6版中的新功能：&lt;em&gt;严格&lt;/em&gt;参数（3.6之前的行为是严格的）。</target>
        </trans-unit>
        <trans-unit id="ed2cdfb400d26244abead12bdb67496c73a450a0" translate="yes" xml:space="preserve">
          <source>New in version 3.6: The &lt;em&gt;thread_name_prefix&lt;/em&gt; argument was added to allow users to control the &lt;a href=&quot;threading#threading.Thread&quot;&gt;&lt;code&gt;threading.Thread&lt;/code&gt;&lt;/a&gt; names for worker threads created by the pool for easier debugging.</source>
          <target state="translated">3.6版中的新增功能：增加了&lt;em&gt;thread_name_prefix&lt;/em&gt;参数，以允许用户控制&lt;a href=&quot;threading#threading.Thread&quot;&gt; &lt;code&gt;threading.Thread&lt;/code&gt; &lt;/a&gt;。由池创建的工作线程的线程名称&lt;em&gt;可简化&lt;/em&gt;调试。</target>
        </trans-unit>
        <trans-unit id="bd28c614713bbf071342d57c2928588052675b48" translate="yes" xml:space="preserve">
          <source>New in version 3.7.</source>
          <target state="translated">3.7版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="ab8b0d832441ec9f8afe55c3080968bfbf5d3b44" translate="yes" xml:space="preserve">
          <source>New in version 3.7.1.</source>
          <target state="translated">在3.7.1版本中新增。</target>
        </trans-unit>
        <trans-unit id="c9fd11c42763cb36ec0c19d3ced88d96a640764b" translate="yes" xml:space="preserve">
          <source>New in version 3.7.2.</source>
          <target state="translated">在3.7.2版本中新增。</target>
        </trans-unit>
        <trans-unit id="9a57a48cac73d938901b1d889265048d7b45f13b" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;code&gt;--directory&lt;/code&gt; specify alternate directory</source>
          <target state="translated">新的版本3.7： &lt;code&gt;--directory&lt;/code&gt; 指定替代目录</target>
        </trans-unit>
        <trans-unit id="2909fbd69c7afbaa6cf6f31b68ba8de890bc59f0" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;code&gt;A_ITALIC&lt;/code&gt; was added.</source>
          <target state="translated">3.7版中的新功能：添加了 &lt;code&gt;A_ITALIC&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a466235e323520983f5de7f81ecbc6daa3c3354" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;code&gt;_ignore_&lt;/code&gt;</source>
          <target state="translated">3.7版中的新功能： &lt;code&gt;_ignore_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="adde274e405e80348f0778a3079bdac06f47c1e9" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;code&gt;pdb.py&lt;/code&gt; now accepts a &lt;code&gt;-m&lt;/code&gt; option that execute modules similar to the way &lt;code&gt;python3 -m&lt;/code&gt; does. As with a script, the debugger will pause execution just before the first line of the module.</source>
          <target state="translated">3.7版中的新功能： &lt;code&gt;pdb.py&lt;/code&gt; 现在接受 &lt;code&gt;-m&lt;/code&gt; 选项，该选项执行类似于 &lt;code&gt;python3 -m&lt;/code&gt; 的模块。与脚本一样，调试器将在模块第一行之前暂停执行。</target>
        </trans-unit>
        <trans-unit id="0348eea632d38a741b35d7722942981b7e29f1ce" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;em&gt;text&lt;/em&gt; was added as a more readable alias for &lt;em&gt;universal_newlines&lt;/em&gt;.</source>
          <target state="translated">3.7版中的新功能：&lt;em&gt;文本&lt;/em&gt;被添加为&lt;em&gt;Universal_newlines的&lt;/em&gt;可读性更高的别名。</target>
        </trans-unit>
        <trans-unit id="5f0baef37767767dd3f2cb730f45d1b063439fc7" translate="yes" xml:space="preserve">
          <source>New in version 3.7: &lt;strong&gt;Important:&lt;/strong&gt; this has been added to asyncio in Python 3.7 &lt;em&gt;on a provisional basis&lt;/em&gt;! This is as an experimental API that might be changed or removed completely in Python 3.8.</source>
          <target state="translated">3.7版中的新功能：&lt;strong&gt;重要说明：&lt;/strong&gt;这已&lt;em&gt;临时&lt;/em&gt;添加到Python 3.7中的asyncio中！这是一个实验性API，可能会在Python 3.8中完全更改或删除。</target>
        </trans-unit>
        <trans-unit id="f3a4eca7b00b876cf18c98faef57e563aee90833" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added &lt;code&gt;f_fsid&lt;/code&gt;.</source>
          <target state="translated">3.7版中的新功能：添加了 &lt;code&gt;f_fsid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acbec27175c9a57e694aea3647f0f2d4e44b15b1" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added &lt;em&gt;ssl_handshake_timeout&lt;/em&gt; and &lt;em&gt;start_serving&lt;/em&gt; parameters.</source>
          <target state="translated">3.7版中的新功能：添加了&lt;em&gt;ssl_handshake_timeout&lt;/em&gt;和&lt;em&gt;start_serving&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="02404564795309b1c84708a7dc54ae19f294229e" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the &lt;a href=&quot;#os.stat_result.st_fstype&quot;&gt;&lt;code&gt;st_fstype&lt;/code&gt;&lt;/a&gt; member to Solaris/derivatives.</source>
          <target state="translated">3.7版的新增功能：在Solaris /衍生产品中添加了&lt;a href=&quot;#os.stat_result.st_fstype&quot;&gt; &lt;code&gt;st_fstype&lt;/code&gt; &lt;/a&gt;成员。</target>
        </trans-unit>
        <trans-unit id="4825919b8ce59ba82d22b5bba489218e7eb00e42" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the &lt;code&gt;-m&lt;/code&gt; option to &lt;a href=&quot;#module-cProfile&quot;&gt;&lt;code&gt;cProfile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">3.7版中的新增功能：在&lt;a href=&quot;#module-cProfile&quot;&gt; &lt;code&gt;cProfile&lt;/code&gt; 中&lt;/a&gt;添加了 &lt;code&gt;-m&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="08036b38411b712da487efc5c9de3f5c019a9bfd" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the &lt;em&gt;filter&lt;/em&gt; and &lt;em&gt;compressed&lt;/em&gt; arguments.</source>
          <target state="translated">版本3.7中的新增功能：添加了&lt;em&gt;过滤器&lt;/em&gt;和&lt;em&gt;压缩&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="ce490b7adba761d51637a993e78564658a585b7c" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the &lt;em&gt;text&lt;/em&gt; parameter as an alias for &lt;em&gt;universal_newlines&lt;/em&gt;.</source>
          <target state="translated">版本3.7中的新增功能：添加了&lt;em&gt;text&lt;/em&gt;参数作为&lt;em&gt;Universal_newlines&lt;/em&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="b546280fb3d0cd05c36e366475e058b3bfb9e3cf" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Added the SortKey enum.</source>
          <target state="translated">3.7版的新内容:增加了SortKey枚举。</target>
        </trans-unit>
        <trans-unit id="410aff229467eac243173224687c8e5967e89a41" translate="yes" xml:space="preserve">
          <source>New in version 3.7: Descriptors for nested definitions. They are accessed through the new children attribute. Each has a new parent attribute.</source>
          <target state="translated">3.7版新增:嵌套定义的描述符。它们通过new children属性被访问。每个定义都有一个新的父属性。</target>
        </trans-unit>
        <trans-unit id="a30a5ef6e12e6aa72ab9eaa507a8c20cae7e496f" translate="yes" xml:space="preserve">
          <source>New in version 3.7: The &lt;em&gt;filenames&lt;/em&gt; parameter accepts a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">版本3.7中的新增功能：&lt;em&gt;filenames&lt;/em&gt;参数接受一个&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="493a985537bd7b9d798cb8594ee5777373a89a86" translate="yes" xml:space="preserve">
          <source>New in version 3.7: The &lt;em&gt;ssl_handshake_timeout&lt;/em&gt; and &lt;em&gt;start_serving&lt;/em&gt; parameters.</source>
          <target state="translated">3.7版中的新功能：&lt;em&gt;ssl_handshake_timeout&lt;/em&gt;和&lt;em&gt;start_serving&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="f67f29ad67b51dd6b7b13f7df829ff2ca08cd222" translate="yes" xml:space="preserve">
          <source>New in version 3.7: The &lt;em&gt;ssl_handshake_timeout&lt;/em&gt; parameter.</source>
          <target state="translated">3.7版中的新功能：&lt;em&gt;ssl_handshake_timeout&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="338f24ef253909c3bf5579f812dd70f28bc15ad5" translate="yes" xml:space="preserve">
          <source>New in version 3.7: The built-in &lt;a href=&quot;functions#breakpoint&quot;&gt;&lt;code&gt;breakpoint()&lt;/code&gt;&lt;/a&gt;, when called with defaults, can be used instead of &lt;code&gt;import pdb; pdb.set_trace()&lt;/code&gt;.</source>
          <target state="translated">3.7版的新功能：内置的&lt;a href=&quot;functions#breakpoint&quot;&gt; &lt;code&gt;breakpoint()&lt;/code&gt; &lt;/a&gt;默认调用时，可以代替 &lt;code&gt;import pdb; pdb.set_trace()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b44bee6a8a9a71004cf5c288fd7ae64eb6f752b" translate="yes" xml:space="preserve">
          <source>New in version 3.7: The command-line option &lt;code&gt;-k&lt;/code&gt;.</source>
          <target state="translated">3.7版中的新功能：命令行选项 &lt;code&gt;-k&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0aef538c8351307b1d3b281db6329d7cb7bec872" translate="yes" xml:space="preserve">
          <source>New in version 3.7: __breakpointhook__</source>
          <target state="translated">3.7版新增:__breakpointhook__。</target>
        </trans-unit>
        <trans-unit id="d47b26a1d8dd776fc7c16b2a5c0deac1fe3b72d5" translate="yes" xml:space="preserve">
          <source>New in version 3.8.</source>
          <target state="translated">3.8版本中的新功能。</target>
        </trans-unit>
        <trans-unit id="cd6669aa182efb34ab7412c772c8149990945b82" translate="yes" xml:space="preserve">
          <source>New in version 3.8: &lt;code&gt;--bind&lt;/code&gt; argument enhanced to support IPv6</source>
          <target state="translated">3.8版中的新增功能：-- &lt;code&gt;--bind&lt;/code&gt; 参数得到增强，以支持IPv6</target>
        </trans-unit>
        <trans-unit id="152fbdc9d06de500d8f88db67583d3d091f0e3fe" translate="yes" xml:space="preserve">
          <source>New in version 3.8: &lt;code&gt;ast.PyCF_ALLOW_TOP_LEVEL_AWAIT&lt;/code&gt; can now be passed in flags to enable support for top-level &lt;code&gt;await&lt;/code&gt;, &lt;code&gt;async for&lt;/code&gt;, and &lt;code&gt;async with&lt;/code&gt;.</source>
          <target state="translated">3.8版中的新功能： &lt;code&gt;ast.PyCF_ALLOW_TOP_LEVEL_AWAIT&lt;/code&gt; 现在可以在标志中传递，以启用对顶级 &lt;code&gt;await&lt;/code&gt; ， &lt;code&gt;async for&lt;/code&gt; 和 &lt;code&gt;async with&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f75a638f151f376d645945dad75c62bc6c93b237" translate="yes" xml:space="preserve">
          <source>New in version 3.8: &lt;em&gt;order&lt;/em&gt; can be {&amp;lsquo;C&amp;rsquo;, &amp;lsquo;F&amp;rsquo;, &amp;lsquo;A&amp;rsquo;}. When &lt;em&gt;order&lt;/em&gt; is &amp;lsquo;C&amp;rsquo; or &amp;lsquo;F&amp;rsquo;, the data of the original array is converted to C or Fortran order. For contiguous views, &amp;lsquo;A&amp;rsquo; returns an exact copy of the physical memory. In particular, in-memory Fortran order is preserved. For non-contiguous views, the data is converted to C first. &lt;em&gt;order=None&lt;/em&gt; is the same as &lt;em&gt;order=&amp;rsquo;C&amp;rsquo;&lt;/em&gt;.</source>
          <target state="translated">3.8版中的新功能：&lt;em&gt;订单&lt;/em&gt;可以为{'C'，'F'，'A'}。当&lt;em&gt;订单&lt;/em&gt;为&amp;ldquo; C&amp;rdquo;或&amp;ldquo; F&amp;rdquo;时，原始数组的数据将转换为C或Fortran订单。对于连续视图，&amp;ldquo; A&amp;rdquo;返回物理内存的精确副本。特别是，保留了内存中的Fortran顺序。对于非连续视图，数据首先转换为C。&lt;em&gt;order = None&lt;/em&gt;与&lt;em&gt;order ='C'相同&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2cff40a0917f8f2171e5ff8c7704c205ac772d99" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added &lt;code&gt;--module&lt;/code&gt; option that allows to run an executable module.</source>
          <target state="translated">3.8版中的新增功能：添加了 &lt;code&gt;--module&lt;/code&gt; 选项，该选项允许运行可执行模块。</target>
        </trans-unit>
        <trans-unit id="9ec5376ab9dcf06a2c4b76dd85864c5f7f72d6f3" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added &lt;code&gt;451 UNAVAILABLE_FOR_LEGAL_REASONS&lt;/code&gt; status code.</source>
          <target state="translated">版本3.8中的新增功能：添加了 &lt;code&gt;451 UNAVAILABLE_FOR_LEGAL_REASONS&lt;/code&gt; 状态代码。</target>
        </trans-unit>
        <trans-unit id="186ccced30c0596281d99c06878fe06f5cba4d05" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added the &lt;a href=&quot;#os.stat_result.st_reparse_tag&quot;&gt;&lt;code&gt;st_reparse_tag&lt;/code&gt;&lt;/a&gt; member on Windows.</source>
          <target state="translated">3.8版中的新增功能：在Windows上添加了&lt;a href=&quot;#os.stat_result.st_reparse_tag&quot;&gt; &lt;code&gt;st_reparse_tag&lt;/code&gt; &lt;/a&gt;成员。</target>
        </trans-unit>
        <trans-unit id="31ad6246322e02482cc2675a0a61de73a9615090" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added the &lt;code&gt;-m&lt;/code&gt; option to &lt;a href=&quot;#module-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">3.8版中的新增功能：在&lt;a href=&quot;#module-profile&quot;&gt; &lt;code&gt;profile&lt;/code&gt; 中&lt;/a&gt;添加了 &lt;code&gt;-m&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="d4f26ceaddd42d6cbf676fedbd2a6fc746d292b5" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Added the &lt;em&gt;happy_eyeballs_delay&lt;/em&gt; and &lt;em&gt;interleave&lt;/em&gt; parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e84a13854d39d8a4e632a89b58cf02e628570f" translate="yes" xml:space="preserve">
          <source>New in version 3.8: PowerShell activation scripts installed under POSIX for PowerShell Core support.</source>
          <target state="translated">在3.8版本中新增。安装在POSIX下的PowerShell激活脚本支持PowerShell Core。</target>
        </trans-unit>
        <trans-unit id="f6946e0aad7bd1d3aa73545d7a267c0b448f75c6" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Previous versions of CPython would resolve DLLs using the default behavior for the current process. This led to inconsistencies, such as only sometimes searching &lt;code id=&quot;index-25&quot;&gt;PATH&lt;/code&gt; or the current working directory, and OS functions such as &lt;code&gt;AddDllDirectory&lt;/code&gt; having no effect.</source>
          <target state="translated">3.8版的新功能：早期版本的CPython将使用当前进程的默认行为来解析DLL。这导致不一致，例如有时仅搜索 &lt;code id=&quot;index-25&quot;&gt;PATH&lt;/code&gt; 或当前工作目录，而OS功能（例如 &lt;code&gt;AddDllDirectory&lt;/code&gt; )无效。</target>
        </trans-unit>
        <trans-unit id="92b71d0989b5e2766fd9e7a24391532ddf29ff85" translate="yes" xml:space="preserve">
          <source>New in version 3.8: Previous versions of CPython would resolve DLLs using the default behavior for the current process. This led to inconsistencies, such as only sometimes searching &lt;code id=&quot;index-27&quot;&gt;PATH&lt;/code&gt; or the current working directory, and OS functions such as &lt;code&gt;AddDllDirectory&lt;/code&gt; having no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f977a95a81a55a1784f791e2a58c544b6b5481e3" translate="yes" xml:space="preserve">
          <source>New in version 3.8: The &lt;em&gt;dirs_exist_ok&lt;/em&gt; parameter.</source>
          <target state="translated">3.8版中的新功能：&lt;em&gt;dirs_exist_ok&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="b713cbde69ae2c18b39ec28507e206c345a918bd" translate="yes" xml:space="preserve">
          <source>New in version 3.8: The &lt;em&gt;happy_eyeballs_delay&lt;/em&gt; and &lt;em&gt;interleave&lt;/em&gt; parameters.</source>
          <target state="translated">3.8版中的新功能：&lt;em&gt;happy_eyeballs_delay&lt;/em&gt;和&lt;em&gt;interleave&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="bce6b595725e42c8ce0117c78ce8cc089343e237" translate="yes" xml:space="preserve">
          <source>New in version 3.8: The &lt;em&gt;strict_timestamps&lt;/em&gt; keyword-only argument</source>
          <target state="translated">3.8版中的新功能：&lt;em&gt;strict_timestamps&lt;/em&gt;仅关键字参数</target>
        </trans-unit>
        <trans-unit id="aeec7f4f480fc32e5c189622f501015e66103fc7" translate="yes" xml:space="preserve">
          <source>New in version 3.8: The &lt;em&gt;xml_declaration&lt;/em&gt; and &lt;em&gt;default_namespace&lt;/em&gt; parameters.</source>
          <target state="translated">3.8版中的新功能：&lt;em&gt;xml_declaration&lt;/em&gt;和&lt;em&gt;default_namespace&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="4207315e68011a4c07693dcc3f18b88787928c23" translate="yes" xml:space="preserve">
          <source>New in version 3.8: The optional sixth tuple item, &lt;code&gt;(obj, state)&lt;/code&gt;, was added.</source>
          <target state="translated">版本3.8中的新增功能：添加了可选的第六个元组项 &lt;code&gt;(obj, state)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="381a2e6108c8c4e584e3ed66c51e452dbe93d8f5" translate="yes" xml:space="preserve">
          <source>New in version 3.8: __unraisablehook__</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d32fcf91915e623de562b2552462516032461ba" translate="yes" xml:space="preserve">
          <source>New in version 3.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8710071aa58c3bea26135b1e09e5d0b4b1be68" translate="yes" xml:space="preserve">
          <source>New in version 3.9: Added &lt;code&gt;103 EARLY_HINTS&lt;/code&gt;, &lt;code&gt;418 IM_A_TEAPOT&lt;/code&gt; and &lt;code&gt;425 TOO_EARLY&lt;/code&gt; status codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda6243acf3aaa4d2adb9a50ee4fc2d504a36940" translate="yes" xml:space="preserve">
          <source>New in version 3.9: Added the &lt;code&gt;upgrade_deps&lt;/code&gt; parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b7484a9ab24438dc27afbac38d3298eac7733f" translate="yes" xml:space="preserve">
          <source>New in version 3.9: Added the following dataclasses: StatsProfile, FunctionProfile. Added the following function: get_stats_profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afe712c1a6039a74e4243e19a702080b616b8d2" translate="yes" xml:space="preserve">
          <source>New in version 3.9: Added the function &lt;code&gt;cache_parameters()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc84a24cf8af514ea6370d8af094d8feadb68261" translate="yes" xml:space="preserve">
          <source>New in version 3.9: The &lt;em&gt;base_url&lt;/em&gt; and &lt;em&gt;max_depth&lt;/em&gt; parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c6534808a333ea947d2e95376ff2e9bd752a08" translate="yes" xml:space="preserve">
          <source>New in version 3.9: backported to 3.7 and 3.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1101fa4c967ee98df4f4734b3541a4560182d08f" translate="yes" xml:space="preserve">
          <source>New: It is now possible to put items in argtypes which are not ctypes types, but each item must have a &lt;code&gt;from_param()&lt;/code&gt; method which returns a value usable as argument (integer, string, ctypes instance). This allows defining adapters that can adapt custom objects as function parameters.</source>
          <target state="translated">新增：现在可以将项目放入不是ctypes类型的 &lt;code&gt;from_param()&lt;/code&gt; ，但是每个项目都必须具有from_param（）方法，该方法返回可用作参数的值（整数，字符串，ctypes实例）。这允许定义适配器，这些适配器可以将自定义对象用作功能参数。</target>
        </trans-unit>
        <trans-unit id="540f7186c4d530bac579f69bb157fd5e121529cc" translate="yes" xml:space="preserve">
          <source>NewType</source>
          <target state="translated">NewType</target>
        </trans-unit>
        <trans-unit id="1f243883e19f81b334c75128a8750ed8afdcc9d0" translate="yes" xml:space="preserve">
          <source>Newer RFC that provides a revised definition of XDR.</source>
          <target state="translated">较新的RFC,提供了XDR的修订定义。</target>
        </trans-unit>
        <trans-unit id="bc981983e7f547dc62e19a1e383acfe00782a6d5" translate="yes" xml:space="preserve">
          <source>Next</source>
          <target state="translated">Next</target>
        </trans-unit>
        <trans-unit id="3fd8fdbb697f927d539f398a34de5c84c0407d98" translate="yes" xml:space="preserve">
          <source>Next History</source>
          <target state="translated">下一个历史</target>
        </trans-unit>
        <trans-unit id="7012977a58ea8b287c205fbbab7e5434b3642c46" translate="yes" xml:space="preserve">
          <source>Next Line (C1 Control Code)</source>
          <target state="translated">下一行(C1控制代码</target>
        </trans-unit>
        <trans-unit id="4bfc194b68a3369d53aadcddc4f891771d91a3d9" translate="yes" xml:space="preserve">
          <source>Next page</source>
          <target state="translated">下一页</target>
        </trans-unit>
        <trans-unit id="233213a348a3467a9713a7d089885546d38eba8b" translate="yes" xml:space="preserve">
          <source>Next we instantiate a Differ object:</source>
          <target state="translated">接下来我们实例化一个Different对象。</target>
        </trans-unit>
        <trans-unit id="b9fac927a58027f98332aa47670afe3b77e6d6a4" translate="yes" xml:space="preserve">
          <source>Next, we encounter a new person whose feature measurements are known but whose gender is unknown:</source>
          <target state="translated">接下来,我们会遇到一个新的人,他的特征测量值是已知的,但其性别是未知的。</target>
        </trans-unit>
        <trans-unit id="cd608f08ab177c1073a159dda57f4a0251fcd9d9" translate="yes" xml:space="preserve">
          <source>No CSI structure available</source>
          <target state="translated">没有CSI结构</target>
        </trans-unit>
        <trans-unit id="bf8647669a8695bdc05a11d401d6432a9f88b641" translate="yes" xml:space="preserve">
          <source>No XENIX semaphores available</source>
          <target state="translated">没有可用的XENIX信号词</target>
        </trans-unit>
        <trans-unit id="7c45a435d178e3e2e2c3ba71f0b27f7074852c14" translate="yes" xml:space="preserve">
          <source>No anode</source>
          <target state="translated">无阳极</target>
        </trans-unit>
        <trans-unit id="b599ea3e9f4d15ca66ad3df24a2527224a8ea2d5" translate="yes" xml:space="preserve">
          <source>No argument is converted, results in a &lt;code&gt;'%'&lt;/code&gt; character in the result.</source>
          <target state="translated">不转换任何参数，结果为 &lt;code&gt;'%'&lt;/code&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="e792e65ee8a80fd8989ad1b66325f180ccd8b365" translate="yes" xml:space="preserve">
          <source>No buffer space available</source>
          <target state="translated">没有可用的缓冲空间</target>
        </trans-unit>
        <trans-unit id="099e11888438840a8566c983d5b1e6de2dad8524" translate="yes" xml:space="preserve">
          <source>No child processes</source>
          <target state="translated">没有子程序</target>
        </trans-unit>
        <trans-unit id="0cfc430ad5192c2568f967923954cde952307fa4" translate="yes" xml:space="preserve">
          <source>No data available</source>
          <target state="translated">无数据</target>
        </trans-unit>
        <trans-unit id="5921088185a40f1dda6c07e51735aa215a517c81" translate="yes" xml:space="preserve">
          <source>No defined value type.</source>
          <target state="translated">没有定义价值类型。</target>
        </trans-unit>
        <trans-unit id="5cb62108d46698f5697c85ab801ad27a8ef1fbf6" translate="yes" xml:space="preserve">
          <source>No distinction between standard and widget-specific options is made in this document. Some options don&amp;rsquo;t apply to some kinds of widgets. Whether a given widget responds to a particular option depends on the class of the widget; buttons have a &lt;code&gt;command&lt;/code&gt; option, labels do not.</source>
          <target state="translated">在本文档中，没有对标准选项和特定于窗口小部件的选项进行区分。某些选项不适用于某些类型的小部件。给定的窗口小部件是否响应特定选项取决于窗口小部件的类。按钮具有 &lt;code&gt;command&lt;/code&gt; 选项，标签则没有。</target>
        </trans-unit>
        <trans-unit id="3a8258b97ca1863297badad1b0273640969901f7" translate="yes" xml:space="preserve">
          <source>No feature description will ever be deleted from &lt;a href=&quot;#module-__future__&quot;&gt;&lt;code&gt;__future__&lt;/code&gt;&lt;/a&gt;. Since its introduction in Python 2.1 the following features have found their way into the language using this mechanism:</source>
          <target state="translated">永远不会从&lt;a href=&quot;#module-__future__&quot;&gt; &lt;code&gt;__future__&lt;/code&gt; 中&lt;/a&gt;删除功能描述。自从Python 2.1引入以来，以下功能已使用此机制进入了语言：</target>
        </trans-unit>
        <trans-unit id="f45ab0b8375bdf5386e021a0b31d679497a33d5c" translate="yes" xml:space="preserve">
          <source>No message of desired type</source>
          <target state="translated">没有所需类型的信息</target>
        </trans-unit>
        <trans-unit id="19ae1fe9004b24354abb4ed1dcb0717c604a6346" translate="yes" xml:space="preserve">
          <source>No modifier is given, so it can appear exactly once, as for &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">没有给出修饰符，因此它只能像 &lt;code&gt;A&lt;/code&gt; 一样出现一次。</target>
        </trans-unit>
        <trans-unit id="7498d9819e38f5924fea12d89303afac91d07387" translate="yes" xml:space="preserve">
          <source>No padding is added when using non-native size and alignment, e.g. with &amp;lsquo;&amp;lt;&amp;rsquo;, &amp;lsquo;&amp;gt;&amp;rsquo;, &amp;lsquo;=&amp;rsquo;, and &amp;lsquo;!&amp;rsquo;.</source>
          <target state="translated">使用非本机大小和对齐方式（例如，使用'&amp;lt;'，'&amp;gt;'，'='和'！'）时，不添加填充。</target>
        </trans-unit>
        <trans-unit id="3ab4c24c0255ad55292cf986980b47b2ee3d453f" translate="yes" xml:space="preserve">
          <source>No problem, provided that the traceback is the only output produced by the example: just paste in the traceback. &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt; Since tracebacks contain details that are likely to change rapidly (for example, exact file paths and line numbers), this is one case where doctest works hard to be flexible in what it accepts.</source>
          <target state="translated">没问题，只要该示例产生的唯一输出是回溯即可：只需粘贴回溯即可。&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;由于回溯包含可能会快速更改的详细信息（例如，确切的文件路径和行号），因此在这种情况下，doctest很难灵活地接受其内容。</target>
        </trans-unit>
        <trans-unit id="ab134dfa754cd3657dd291f57f80c528eeaa381a" translate="yes" xml:space="preserve">
          <source>No record locks available</source>
          <target state="translated">没有可用的记录锁</target>
        </trans-unit>
        <trans-unit id="62c6526007299ca03f778b5b7ce0d726354cae0d" translate="yes" xml:space="preserve">
          <source>No route to host</source>
          <target state="translated">没有通往主机的路线</target>
        </trans-unit>
        <trans-unit id="5c0580667d6055e92a026b8c67fa943060b2c89d" translate="yes" xml:space="preserve">
          <source>No space left on device</source>
          <target state="translated">设备上没有剩余空间</target>
        </trans-unit>
        <trans-unit id="8affcec2bb7338bba6a528b37e279cb979510364" translate="yes" xml:space="preserve">
          <source>No special efforts are made to achieve exact results. (However, this may change in the future.)</source>
          <target state="translated">没有特别的努力来达到确切的结果。(不过,今后可能会有所改变)</target>
        </trans-unit>
        <trans-unit id="e5feee0204f5532e0cb04d5be298f4c467c05e6f" translate="yes" xml:space="preserve">
          <source>No such device</source>
          <target state="translated">没有这种装置</target>
        </trans-unit>
        <trans-unit id="112765ee706d5c7ea20d7309d6bf892b8a5aa7eb" translate="yes" xml:space="preserve">
          <source>No such device or address</source>
          <target state="translated">没有这种设备或地址</target>
        </trans-unit>
        <trans-unit id="8a6cb568f806ffae868a77b519003a5df95ec0c3" translate="yes" xml:space="preserve">
          <source>No such file or directory</source>
          <target state="translated">没有这样的文件或目录</target>
        </trans-unit>
        <trans-unit id="0cf4a772e5ca24befae7ddee66e425eeaa8130aa" translate="yes" xml:space="preserve">
          <source>No such process</source>
          <target state="translated">没有这种程序</target>
        </trans-unit>
        <trans-unit id="589aa359449804b5cecdf6ad3c2674828c4925a4" translate="yes" xml:space="preserve">
          <source>No suitable authentication method was found.</source>
          <target state="translated">没有找到合适的认证方法。</target>
        </trans-unit>
        <trans-unit id="0e86c9e3430455ac090ffb5eaf4ae106dd193246" translate="yes" xml:space="preserve">
          <source>No-op in the base class, this method takes file object &lt;em&gt;fp&lt;/em&gt;, and reads the data from the file, initializing its message catalog. If you have an unsupported message catalog file format, you should override this method to parse your format.</source>
          <target state="translated">在基类中没有操作，此方法采用文件对象&lt;em&gt;fp&lt;/em&gt;，并从文件中读取数据，从而初始化其消息目录。如果具有不受支持的消息目录文件格式，则应重写此方法以解析格式。</target>
        </trans-unit>
        <trans-unit id="b17a6c458741a86bf04ade61ad9a14f7ac61215b" translate="yes" xml:space="preserve">
          <source>Node Objects</source>
          <target state="translated">节点对象</target>
        </trans-unit>
        <trans-unit id="7e378cbf407e94014d60a68e1eb16b7d4cc0b6a2" translate="yes" xml:space="preserve">
          <source>Node classes</source>
          <target state="translated">节点类</target>
        </trans-unit>
        <trans-unit id="ee401dbf3ea65531fb1e6ce98168be3027792e5e" translate="yes" xml:space="preserve">
          <source>Node representing a single formatting field in an f-string. If the string contains a single formatting field and nothing else the node can be isolated otherwise it appears in &lt;a href=&quot;#ast.JoinedStr&quot;&gt;&lt;code&gt;JoinedStr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14144ba530975f0eb39fc2d9e3b0c8023d821c70" translate="yes" xml:space="preserve">
          <source>NodeList Objects</source>
          <target state="translated">节点列表对象</target>
        </trans-unit>
        <trans-unit id="750728f3a8917784306697d947d7258635f9568e" translate="yes" xml:space="preserve">
          <source>Nodes containing textual content from the document.</source>
          <target state="translated">包含文档中文字内容的节点。</target>
        </trans-unit>
        <trans-unit id="bdc7ab16126589f949098e57c1b5539a8ac176ed" translate="yes" xml:space="preserve">
          <source>Nomenclature</source>
          <target state="translated">Nomenclature</target>
        </trans-unit>
        <trans-unit id="56c04398e9678198426e682b1f9d96427b74b23b" translate="yes" xml:space="preserve">
          <source>Nominal vs structural subtyping</source>
          <target state="translated">名义与结构分型</target>
        </trans-unit>
        <trans-unit id="35d3f82350431652e47bdcf8c933cca085703f88" translate="yes" xml:space="preserve">
          <source>Non-blocking mode is supported through &lt;a href=&quot;#socket.socket.setblocking&quot;&gt;&lt;code&gt;setblocking()&lt;/code&gt;&lt;/a&gt;. A generalization of this based on timeouts is supported through &lt;a href=&quot;#socket.socket.settimeout&quot;&gt;&lt;code&gt;settimeout()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;#socket.socket.setblocking&quot;&gt; &lt;code&gt;setblocking()&lt;/code&gt; &lt;/a&gt;支持非阻塞模式。通过&lt;a href=&quot;#socket.socket.settimeout&quot;&gt; &lt;code&gt;settimeout()&lt;/code&gt; &lt;/a&gt;支持基于超时的通用化。</target>
        </trans-unit>
        <trans-unit id="4c6473f2b77717e9eaefce19afcd71fb87fcc938" translate="yes" xml:space="preserve">
          <source>Non-empty sets (not frozensets) can be created by placing a comma-separated list of elements within braces, for example: &lt;code&gt;{'jack', 'sjoerd'}&lt;/code&gt;, in addition to the &lt;a href=&quot;#set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">除了&lt;a href=&quot;#set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;构造函数外，还可以通过在括号内放置以逗号分隔的元素列表来创建非空集合（非冻结集合），例如： &lt;code&gt;{'jack', 'sjoerd'}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4aa0a99e9276d0e78ac1248387e6c6b9c79d9b2a" translate="yes" xml:space="preserve">
          <source>Non-identical instances of a class normally compare as non-equal unless the class defines the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">通常，除非类定义&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__eq__&quot;&gt; &lt;code&gt;__eq__()&lt;/code&gt; &lt;/a&gt;方法，否则类的不同实例通常比较为不相等。</target>
        </trans-unit>
        <trans-unit id="f95d02252b0089d1c261319bc20168f160fde1cf" translate="yes" xml:space="preserve">
          <source>Non-identical instances of a class normally compare as non-equal unless the class defines the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__eq__&quot;&gt;&lt;code&gt;__eq__()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5432efc874ee04f0f27783979ffafd974c2144c4" translate="yes" xml:space="preserve">
          <source>Non-quoted escape characters (e.g. &lt;code&gt;'\'&lt;/code&gt;) preserve the literal value of the next character that follows;</source>
          <target state="translated">不带引号的转义字符（例如 &lt;code&gt;'\'&lt;/code&gt; ）保留下一个字符的字面值；</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="7e5255a130b91c89dba736489c8c648b0ae932c0" translate="yes" xml:space="preserve">
          <source>Nonzero if a DST timezone is defined. See note below.</source>
          <target state="translated">如果定义了DST时区,则为非零。见下文说明。</target>
        </trans-unit>
        <trans-unit id="5d6248d1d5c865a0048cbc0bf21dcb388cd91a77" translate="yes" xml:space="preserve">
          <source>Nordic languages</source>
          <target state="translated">北欧语言</target>
        </trans-unit>
        <trans-unit id="02e21f33972d3ea6d360c18684f08ac13010544f" translate="yes" xml:space="preserve">
          <source>Normal and error output are generally kept separate (on separate lines) from code input and each other. They each get different highlight colors.</source>
          <target state="translated">正常输出和错误输出通常与代码输入和彼此分开(在单独的行上)。它们各自得到不同的高亮颜色。</target>
        </trans-unit>
        <trans-unit id="170f10d24b0b85cf90e96608630df2d96c9b4817" translate="yes" xml:space="preserve">
          <source>Normal attribute</source>
          <target state="translated">正常属性</target>
        </trans-unit>
        <trans-unit id="f1f743126e0f5dd0902750180da22c23c53778c8" translate="yes" xml:space="preserve">
          <source>Normal distribution. &lt;em&gt;mu&lt;/em&gt; is the mean, and &lt;em&gt;sigma&lt;/em&gt; is the standard deviation.</source>
          <target state="translated">正态分布。&lt;em&gt;mu&lt;/em&gt;是平均值，而&lt;em&gt;sigma&lt;/em&gt;是标准偏差。</target>
        </trans-unit>
        <trans-unit id="3d1612e1a01af8e8718757fe0eb13a0da18713da" translate="yes" xml:space="preserve">
          <source>Normal distributions arise from the &lt;a href=&quot;https://en.wikipedia.org/wiki/Central_limit_theorem&quot;&gt;Central Limit Theorem&lt;/a&gt; and have a wide range of applications in statistics.</source>
          <target state="translated">正态分布由&lt;a href=&quot;https://en.wikipedia.org/wiki/Central_limit_theorem&quot;&gt;中央极限定理&lt;/a&gt;产生，在统计中有广泛的应用。</target>
        </trans-unit>
        <trans-unit id="f96b6e7e93b1ee612bdc5459b1b4c4ed51951b3b" translate="yes" xml:space="preserve">
          <source>Normal distributions can be used to approximate &lt;a href=&quot;http://mathworld.wolfram.com/BinomialDistribution.html&quot;&gt;Binomial distributions&lt;/a&gt; when the sample size is large and when the probability of a successful trial is near 50%.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe823566d89d09d65bf2172f99f78ec17aa83bd8" translate="yes" xml:space="preserve">
          <source>Normal distributions commonly arise in machine learning problems.</source>
          <target state="translated">正态分布通常出现在机器学习问题中。</target>
        </trans-unit>
        <trans-unit id="6b2153c60470208f45dcfdc29d655f5a4049324a" translate="yes" xml:space="preserve">
          <source>NormalDist objects</source>
          <target state="translated">NormalDist对象</target>
        </trans-unit>
        <trans-unit id="691b62ff89f4b08738f81953df74ff8ae6e26204" translate="yes" xml:space="preserve">
          <source>Normalize a pathname by collapsing redundant separators and up-level references so that &lt;code&gt;A//B&lt;/code&gt;, &lt;code&gt;A/B/&lt;/code&gt;, &lt;code&gt;A/./B&lt;/code&gt; and &lt;code&gt;A/foo/../B&lt;/code&gt; all become &lt;code&gt;A/B&lt;/code&gt;. This string manipulation may change the meaning of a path that contains symbolic links. On Windows, it converts forward slashes to backward slashes. To normalize case, use &lt;a href=&quot;#os.path.normcase&quot;&gt;&lt;code&gt;normcase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">规格化通过折叠冗余分离器和上一级的引用这样的路径名 &lt;code&gt;A//B&lt;/code&gt; ， &lt;code&gt;A/B/&lt;/code&gt; ， &lt;code&gt;A/./B&lt;/code&gt; 和 &lt;code&gt;A/foo/../B&lt;/code&gt; 所有成为 &lt;code&gt;A/B&lt;/code&gt; 。此字符串操作可能会更改包含符号链接的路径的含义。在Windows上，它将正斜杠转换为反斜杠。要规范大小写，请使用&lt;a href=&quot;#os.path.normcase&quot;&gt; &lt;code&gt;normcase()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4de47e1cb4db52e6f0ace31520ebf2d73cf5200f" translate="yes" xml:space="preserve">
          <source>Normalize the case of a pathname. On Windows, convert all characters in the pathname to lowercase, and also convert forward slashes to backward slashes. On other operating systems, return the path unchanged.</source>
          <target state="translated">规范路径名的大小写。在Windows系统中,将路径名中的所有字符转换为小写,并将前斜杠转换为后斜杠。在其他操作系统上,返回路径的大小写不变。</target>
        </trans-unit>
        <trans-unit id="5bb740d481f263379151a90b9e11e2b6fdb345e7" translate="yes" xml:space="preserve">
          <source>Normalize the number by stripping the rightmost trailing zeros and converting any result equal to &lt;code&gt;Decimal('0')&lt;/code&gt; to &lt;code&gt;Decimal('0e0')&lt;/code&gt;. Used for producing canonical values for attributes of an equivalence class. For example, &lt;code&gt;Decimal('32.100')&lt;/code&gt; and &lt;code&gt;Decimal('0.321000e+2')&lt;/code&gt; both normalize to the equivalent value &lt;code&gt;Decimal('32.1')&lt;/code&gt;.</source>
          <target state="translated">通过去除最右边的尾随零并将所有等于 &lt;code&gt;Decimal('0')&lt;/code&gt; 的结果转换为 &lt;code&gt;Decimal('0e0')&lt;/code&gt; 来对数字进行归一化。用于为等效类的属性生成规范值。例如， &lt;code&gt;Decimal('32.100')&lt;/code&gt; 和 &lt;code&gt;Decimal('0.321000e+2')&lt;/code&gt; 都归一化为等效值 &lt;code&gt;Decimal('32.1')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f52a413a99343944d32b2af1d020b8d0b1acd04" translate="yes" xml:space="preserve">
          <source>Normally &lt;strong&gt;there is no need&lt;/strong&gt; to create Future objects at the application level code.</source>
          <target state="translated">通常&lt;strong&gt;，不需要&lt;/strong&gt;在应用程序级别的代码中创建Future对象。</target>
        </trans-unit>
        <trans-unit id="d90ea54070ee394f637e437d868344967800111e" translate="yes" xml:space="preserve">
          <source>Normally derived classes don&amp;rsquo;t override the following methods, but they may if they want to redefine the definition of stopping and breakpoints.</source>
          <target state="translated">通常派生的类不会重写以下方法，但是如果要重新定义停止点和断点的定义，则可以。</target>
        </trans-unit>
        <trans-unit id="e7e3e4198625d7397897fc42c4d0f77e2c31eff8" translate="yes" xml:space="preserve">
          <source>Normally it should not be necessary to use this value directly. Specifying the &lt;code&gt;E&lt;/code&gt; modifier in their format strings causes the &lt;a href=&quot;time#time.strftime&quot;&gt;&lt;code&gt;time.strftime()&lt;/code&gt;&lt;/a&gt; function to use this information. The format of the returned string is not specified, and therefore you should not assume knowledge of it on different systems.</source>
          <target state="translated">通常，没有必要直接使用此值。在其格式字符串中指定 &lt;code&gt;E&lt;/code&gt; 修饰符会使&lt;a href=&quot;time#time.strftime&quot;&gt; &lt;code&gt;time.strftime()&lt;/code&gt; &lt;/a&gt;函数使用此信息。未指定返回字符串的格式，因此，您不应在其他系统上假设它的知识。</target>
        </trans-unit>
        <trans-unit id="2dd8b4f218db00ed4e30efd72f3a335858fe6269" translate="yes" xml:space="preserve">
          <source>Normally the &lt;a href=&quot;#unittest.mock.Mock.__class__&quot;&gt;&lt;code&gt;__class__&lt;/code&gt;&lt;/a&gt; attribute of an object will return its type. For a mock object with a &lt;code&gt;spec&lt;/code&gt;, &lt;code&gt;__class__&lt;/code&gt; returns the spec class instead. This allows mock objects to pass &lt;a href=&quot;functions#isinstance&quot;&gt;&lt;code&gt;isinstance()&lt;/code&gt;&lt;/a&gt; tests for the object they are replacing / masquerading as:</source>
          <target state="translated">通常，对象的&lt;a href=&quot;#unittest.mock.Mock.__class__&quot;&gt; &lt;code&gt;__class__&lt;/code&gt; &lt;/a&gt;属性将返回其类型。对于具有 &lt;code&gt;spec&lt;/code&gt; 的模拟对象， &lt;code&gt;__class__&lt;/code&gt; 返回spec类。这允许模拟对象通过&lt;a href=&quot;functions#isinstance&quot;&gt; &lt;code&gt;isinstance()&lt;/code&gt; &lt;/a&gt;测试，以将其替换/伪装为：</target>
        </trans-unit>
        <trans-unit id="5aa93ae111a762d37226903d82a74d9b1f47e777" translate="yes" xml:space="preserve">
          <source>Normally you should use the socket API methods like &lt;a href=&quot;socket#socket.socket.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;socket#socket.socket.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; instead of these methods.</source>
          <target state="translated">通常，您应该使用套接字API方法（例如&lt;a href=&quot;socket#socket.socket.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;socket#socket.socket.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; )&lt;/a&gt;代替这些方法。</target>
        </trans-unit>
        <trans-unit id="8d529dbb8b442b62924e944a3daf4b0e0711efec" translate="yes" xml:space="preserve">
          <source>Normally, however, you do not need to use these additional methods, as &lt;a href=&quot;#wsgiref.simple_server.WSGIServer.set_app&quot;&gt;&lt;code&gt;set_app()&lt;/code&gt;&lt;/a&gt; is normally called by &lt;a href=&quot;#wsgiref.simple_server.make_server&quot;&gt;&lt;code&gt;make_server()&lt;/code&gt;&lt;/a&gt;, and the &lt;a href=&quot;#wsgiref.simple_server.WSGIServer.get_app&quot;&gt;&lt;code&gt;get_app()&lt;/code&gt;&lt;/a&gt; exists mainly for the benefit of request handler instances.</source>
          <target state="translated">但是，通常不需要使用这些其他方法，因为&lt;a href=&quot;#wsgiref.simple_server.WSGIServer.set_app&quot;&gt; &lt;code&gt;set_app()&lt;/code&gt; &lt;/a&gt;通常由&lt;a href=&quot;#wsgiref.simple_server.make_server&quot;&gt; &lt;code&gt;make_server()&lt;/code&gt; &lt;/a&gt;调用，而&lt;a href=&quot;#wsgiref.simple_server.WSGIServer.get_app&quot;&gt; &lt;code&gt;get_app()&lt;/code&gt; &lt;/a&gt;主要是为了请求处理程序实例而存在。</target>
        </trans-unit>
        <trans-unit id="cebe4c16e9be06cdb74c935e7bf03afce6ac0db3" translate="yes" xml:space="preserve">
          <source>Normally, the above warnings are filtered by the default &lt;a href=&quot;warnings#describing-warning-filters&quot;&gt;warning filters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0788443a411022d37bd9d9d545b151030497a024" translate="yes" xml:space="preserve">
          <source>Normally, the generator emits a single string; however, for &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; exceptions, it emits several lines that (when printed) display detailed information about where the syntax error occurred.</source>
          <target state="translated">通常，生成器发出一个字符串。但是，对于&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;异常，它发出几行（在打印时）显示有关语法错误发生位置的详细信息。</target>
        </trans-unit>
        <trans-unit id="23ff9f150633c592aa535d8b9f1a3400f42cda0e" translate="yes" xml:space="preserve">
          <source>Normally, this method first strips any quotes off the argument. If the result is an absolute pathname, or there was no previous source request in effect, or the previous source was a stream (such as &lt;code&gt;sys.stdin&lt;/code&gt;), the result is left alone. Otherwise, if the result is a relative pathname, the directory part of the name of the file immediately before it on the source inclusion stack is prepended (this behavior is like the way the C preprocessor handles &lt;code&gt;#include
&quot;file.h&quot;&lt;/code&gt;).</source>
          <target state="translated">通常，此方法首先会删除参数中的所有引号。如果结果是绝对路径名，或者没有有效的先前的源请求，或者先前的源是流（例如 &lt;code&gt;sys.stdin&lt;/code&gt; ），则结果将保留。否则，如果结果是相对路径名，则在源包含堆栈上紧接在文件名之前的文件名的目录部分会被加上前缀（此行为类似于C预处理器处理 &lt;code&gt;#include &quot;file.h&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0fde105c2e0c2c34defc4b3e3f0d9044ebf54e00" translate="yes" xml:space="preserve">
          <source>Normally, when you pass an argument list to the &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method of an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;, it &lt;a href=&quot;#prefix-matching&quot;&gt;recognizes abbreviations&lt;/a&gt; of long options.</source>
          <target state="translated">通常，当您将参数列表传递给&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;方法时，它将&lt;a href=&quot;#prefix-matching&quot;&gt;识别&lt;/a&gt;长选项的缩写。</target>
        </trans-unit>
        <trans-unit id="c8cb9467d1b3a535d48d7b80b7ce51003fd94c2c" translate="yes" xml:space="preserve">
          <source>Normally, when you pass an invalid argument list to the &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; method of an &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;, it will exit with error info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db1844f9d4e3e923c05588f67a7669bd03d89f7" translate="yes" xml:space="preserve">
          <source>Normally, you would use the &lt;code&gt;os.path.is*()&lt;/code&gt; functions for testing the type of a file; the functions here are useful when you are doing multiple tests of the same file and wish to avoid the overhead of the &lt;code&gt;stat()&lt;/code&gt; system call for each test. These are also useful when checking for information about a file that isn&amp;rsquo;t handled by &lt;a href=&quot;os.path#module-os.path&quot;&gt;&lt;code&gt;os.path&lt;/code&gt;&lt;/a&gt;, like the tests for block and character devices.</source>
          <target state="translated">通常，您可以使用 &lt;code&gt;os.path.is*()&lt;/code&gt; 函数来测试文件的类型。当您对同一个文件进行多个测试并且希望避免每个测试的 &lt;code&gt;stat()&lt;/code&gt; 系统调用的开销时，此处的功能非常有用。当检查有关&lt;a href=&quot;os.path#module-os.path&quot;&gt; &lt;code&gt;os.path&lt;/code&gt; &lt;/a&gt;未处理的文件的信息（例如对块和字符设备的测试）时，这些功能也很有用。</target>
        </trans-unit>
        <trans-unit id="bb0c92aed320c99f3cf5a7b36f620aee6bc3d350" translate="yes" xml:space="preserve">
          <source>Not a XENIX named type file</source>
          <target state="translated">不是一个XENIX命名的类型文件</target>
        </trans-unit>
        <trans-unit id="16362f559ca4bab86e57b8b31308ce0876579def" translate="yes" xml:space="preserve">
          <source>Not a data message</source>
          <target state="translated">不是数据信息</target>
        </trans-unit>
        <trans-unit id="338469a733ebda5aa0e30bb1db80e0e157e51892" translate="yes" xml:space="preserve">
          <source>Not a directory</source>
          <target state="translated">不是目录</target>
        </trans-unit>
        <trans-unit id="8c67b4de17834c13bd6e4d2b12aca324d453a11f" translate="yes" xml:space="preserve">
          <source>Not a typewriter</source>
          <target state="translated">不是打字机</target>
        </trans-unit>
        <trans-unit id="2c7846a67eb11ab196b9e6f6d7a69ff03be54a85" translate="yes" xml:space="preserve">
          <source>Not all Python object types are supported; in general, only objects whose value is independent from a particular invocation of Python can be written and read by this module. The following types are supported: booleans, integers, floating point numbers, complex numbers, strings, bytes, bytearrays, tuples, lists, sets, frozensets, dictionaries, and code objects, where it should be understood that tuples, lists, sets, frozensets and dictionaries are only supported as long as the values contained therein are themselves supported. The singletons &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;constants#Ellipsis&quot;&gt;&lt;code&gt;Ellipsis&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exceptions#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; can also be marshalled and unmarshalled. For format &lt;em&gt;version&lt;/em&gt; lower than 3, recursive lists, sets and dictionaries cannot be written (see below).</source>
          <target state="translated">并非所有Python对象类型都受支持；通常，此模块只能读写其值与特定的Python调用无关的对象。支持以下类型：布尔值，整数，浮点数，复数，字符串，字节，字节数组，元组，列表，集合，frozenset，字典和代码对象，应理解为元组，列表，集合，frozenset仅支持字典和字典，只要其中包含的值本身受支持即可。单身人士&lt;a href=&quot;constants#None&quot;&gt; &lt;code&gt;None&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;constants#Ellipsis&quot;&gt; &lt;code&gt;Ellipsis&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;exceptions#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;也可以进行编组和解组。对于低于3的格式&lt;em&gt;版本&lt;/em&gt;，无法编写递归列表，集合和词典（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="a3e1b1287060e9ba795d51d985b235049aa105ed" translate="yes" xml:space="preserve">
          <source>Not all elements of the XML input will end up as elements of the parsed tree. Currently, this module skips over any XML comments, processing instructions, and document type declarations in the input. Nevertheless, trees built using this module&amp;rsquo;s API rather than parsing from XML text can have comments and processing instructions in them; they will be included when generating XML output. A document type declaration may be accessed by passing a custom &lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt;&lt;code&gt;TreeBuilder&lt;/code&gt;&lt;/a&gt; instance to the &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">并非XML输入的所有元素最终都将作为已解析树的元素。当前，该模块会跳过输入中的任何XML注释，处理指令和文档类型声明。但是，使用此模块的API构建的树（而不是从XML文本进行解析）可以在其中包含注释和处理指令。它们将在生成XML输出时包括在内。可以通过将自定义&lt;a href=&quot;#xml.etree.ElementTree.TreeBuilder&quot;&gt; &lt;code&gt;TreeBuilder&lt;/code&gt; &lt;/a&gt;实例传递给&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; &lt;/a&gt;构造函数来访问文档类型声明。</target>
        </trans-unit>
        <trans-unit id="7451951009f7df728b6f3d4aa4cb2d7ba85029ba" translate="yes" xml:space="preserve">
          <source>Not all flags are valid for all versions of &lt;code&gt;gdbm&lt;/code&gt;. The module constant &lt;code&gt;open_flags&lt;/code&gt; is a string of supported flag characters. The exception &lt;a href=&quot;#dbm.gnu.error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; is raised if an invalid flag is specified.</source>
          <target state="translated">并非所有标志对于 &lt;code&gt;gdbm&lt;/code&gt; 的所有版本均有效。模块常量 &lt;code&gt;open_flags&lt;/code&gt; 是支持的标志字符的字符串。如果指定了无效标志，则会引发异常&lt;a href=&quot;#dbm.gnu.error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5642009188b00b4b1401ca4b9758d17920df1198" translate="yes" xml:space="preserve">
          <source>Not all objects can be weakly referenced; those objects which can include class instances, functions written in Python (but not in C), instance methods, sets, frozensets, some &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;generators&lt;/a&gt;, type objects, sockets, arrays, deques, regular expression pattern objects, and code objects.</source>
          <target state="translated">并非所有对象都可以弱引用。这些对象可以包括类实例，用Python（但不是用C语言编写）的函数，实例方法，集合，frozenset，一些&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-generator&quot;&gt;生成器&lt;/a&gt;，类型对象，套接字，数组，双端队列，正则表达式模式对象和代码对象。</target>
        </trans-unit>
        <trans-unit id="fe190fcc0f6bb0c755a4b3a9ec568d6b7568e446" translate="yes" xml:space="preserve">
          <source>Not all objects can be weakly referenced; those objects which can include class instances, functions written in Python (but not in C), instance methods, sets, frozensets, some &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-generator&quot;&gt;generators&lt;/a&gt;, type objects, sockets, arrays, deques, regular expression pattern objects, and code objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c849ef61574f048a53a41ad5a4327d9310750e" translate="yes" xml:space="preserve">
          <source>Not all platforms provide the ability to examine and modify symbolic links. Python itself can tell you what functionality is locally available.</source>
          <target state="translated">并非所有的平台都提供了检查和修改符号链接的功能。Python本身可以告诉你本地有哪些功能。</target>
        </trans-unit>
        <trans-unit id="a45153922480b755eeb20a8cd5a5df84141dc176" translate="yes" xml:space="preserve">
          <source>Not available on Windows.</source>
          <target state="translated">在Windows上不可用。</target>
        </trans-unit>
        <trans-unit id="6f9880fe552d25583bff0e051c2af11b02253f33" translate="yes" xml:space="preserve">
          <source>Not closing a resource explicitly can leave a resource open for way longer than expected; it can cause severe issues upon exiting Python. It is bad in CPython, but it is even worse in PyPy. Closing resources explicitly makes an application more deterministic and more reliable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2c4692797b1c72c2490c0e81cb931fc786ce55" translate="yes" xml:space="preserve">
          <source>Not currently used.</source>
          <target state="translated">目前没有使用。</target>
        </trans-unit>
        <trans-unit id="ac08186824133d19452b6a51a06060ff36e3034e" translate="yes" xml:space="preserve">
          <source>Not for complex numbers. Instead convert to floats using &lt;a href=&quot;functions#abs&quot;&gt;&lt;code&gt;abs()&lt;/code&gt;&lt;/a&gt; if appropriate.</source>
          <target state="translated">不适用于复数。如果合适，请使用&lt;a href=&quot;functions#abs&quot;&gt; &lt;code&gt;abs()&lt;/code&gt; &lt;/a&gt;转换为浮点数。</target>
        </trans-unit>
        <trans-unit id="c8587c1a0a933c635a00ae69af27b2446cfdae1c" translate="yes" xml:space="preserve">
          <source>Not knowing the default extraction behaviors can cause unexpected decompression results. For example, when extracting the same archive twice, it overwrites files without asking.</source>
          <target state="translated">如果不知道默认的提取行为,会导致意外的解压结果。例如,当提取同一个存档两次时,它不问青红皂白就会覆盖文件。</target>
        </trans-unit>
        <trans-unit id="edfda3842ea6fbe6f744c728779b1389a38d845f" translate="yes" xml:space="preserve">
          <source>Not read, but previously detected by MUA</source>
          <target state="translated">未读,但此前已被管理当局检测到</target>
        </trans-unit>
        <trans-unit id="68572512d58f5572f216f0e3f449070bb1b9602b" translate="yes" xml:space="preserve">
          <source>NotADirectoryError</source>
          <target state="translated">NotADirectoryError</target>
        </trans-unit>
        <trans-unit id="5ceae088184ecb2a3d44c94c6258a6f897118f5f" translate="yes" xml:space="preserve">
          <source>NotImplemented</source>
          <target state="translated">NotImplemented</target>
        </trans-unit>
        <trans-unit id="8850b3bd61499741c05bd500ea7929ed489941ca" translate="yes" xml:space="preserve">
          <source>NotImplementedError</source>
          <target state="translated">NotImplementedError</target>
        </trans-unit>
        <trans-unit id="028373739f7f8068eb474265d2fb30ef33c2b72c" translate="yes" xml:space="preserve">
          <source>Notable Module Contents</source>
          <target state="translated">值得注意的模块内容</target>
        </trans-unit>
        <trans-unit id="b5ae56c0c64d23ceb8b79ad6407cefba354d2d9f" translate="yes" xml:space="preserve">
          <source>Notably, this &amp;ldquo;ignored by default&amp;rdquo; list includes &lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt;&lt;code&gt;DeprecationWarning&lt;/code&gt;&lt;/a&gt; (for every module except &lt;code&gt;__main__&lt;/code&gt;), which means developers should make sure to test their code with typically ignored warnings made visible in order to receive timely notifications of future breaking API changes (whether in the standard library or third party packages).</source>
          <target state="translated">值得注意的是，此&amp;ldquo;默认情况下被忽略&amp;rdquo;列表包括&lt;a href=&quot;exceptions#DeprecationWarning&quot;&gt; &lt;code&gt;DeprecationWarning&lt;/code&gt; &lt;/a&gt;（针对 &lt;code&gt;__main__&lt;/code&gt; 之外的每个模块），这意味着开发人员应确保使用可见的通常被忽略的警告来测试其代码，以便及时收到有关将来API发生重大更改的通知（无论是否在标准库或第三方软件包）。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="eaaf5966f427f3dea82bee61a4387fc35eceff0f" translate="yes" xml:space="preserve">
          <source>Note &lt;code&gt;Decimal.from_float(0.1)&lt;/code&gt; is not the same as &lt;code&gt;Decimal(&amp;lsquo;0.1&amp;rsquo;)&lt;/code&gt;. Since 0.1 is not exactly representable in binary floating point, the value is stored as the nearest representable value which is &lt;code&gt;0x1.999999999999ap-4&lt;/code&gt;. That equivalent value in decimal is &lt;code&gt;0.1000000000000000055511151231257827021181583404541015625&lt;/code&gt;.</source>
          <target state="translated">注意 &lt;code&gt;Decimal.from_float(0.1)&lt;/code&gt; 与 &lt;code&gt;Decimal(&amp;lsquo;0.1&amp;rsquo;)&lt;/code&gt; 。由于在二进制浮点中不能精确表示0.1，因此该值存储为最接近的可表示值 &lt;code&gt;0x1.999999999999ap-4&lt;/code&gt; 。十进制的等效值是 &lt;code&gt;0.1000000000000000055511151231257827021181583404541015625&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a228a03ba762c109dde9253a8ec3fc25b50a1c65" translate="yes" xml:space="preserve">
          <source>Note also that being reentrant is &lt;em&gt;not&lt;/em&gt; the same thing as being thread safe. &lt;a href=&quot;#contextlib.redirect_stdout&quot;&gt;&lt;code&gt;redirect_stdout()&lt;/code&gt;&lt;/a&gt;, for example, is definitely not thread safe, as it makes a global modification to the system state by binding &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; to a different stream.</source>
          <target state="translated">还要注意，重入线程与线程安全&lt;em&gt;不是&lt;/em&gt;一回事。例如，&lt;a href=&quot;#contextlib.redirect_stdout&quot;&gt; &lt;code&gt;redirect_stdout()&lt;/code&gt; &lt;/a&gt;绝对不是线程安全的，因为它通过将&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;绑定到其他流来对系统状态进行全局修改。</target>
        </trans-unit>
        <trans-unit id="f61fec861c768279fab36f6f5c37291126c064a6" translate="yes" xml:space="preserve">
          <source>Note how &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; returns the toplevel module here because this is the object that is bound to a name by the &lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">注意这里&lt;a href=&quot;#__import__&quot;&gt; &lt;code&gt;__import__()&lt;/code&gt; &lt;/a&gt;如何返回顶层模块，因为这是由&lt;a href=&quot;https://docs.python.org/3.8/reference/simple_stmts.html#import&quot;&gt; &lt;code&gt;import&lt;/code&gt; &lt;/a&gt;语句绑定到名称的对象。</target>
        </trans-unit>
        <trans-unit id="f06e840efa6e07a42d60a9d72a43d7cc2a569dc0" translate="yes" xml:space="preserve">
          <source>Note how &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; returns the toplevel module here because this is the object that is bound to a name by the &lt;a href=&quot;https://docs.python.org/3.9/reference/simple_stmts.html#import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a7d5217c5c02cfeb8a4550c216b87b699db0c2" translate="yes" xml:space="preserve">
          <source>Note however that &lt;a href=&quot;#timeit.timeit&quot;&gt;&lt;code&gt;timeit()&lt;/code&gt;&lt;/a&gt; will automatically determine the number of repetitions only when the command-line interface is used. In the &lt;a href=&quot;#timeit-examples&quot;&gt;Examples&lt;/a&gt; section you can find more advanced examples.</source>
          <target state="translated">但是请注意，只有在使用命令行界面时，&lt;a href=&quot;#timeit.timeit&quot;&gt; &lt;code&gt;timeit()&lt;/code&gt; &lt;/a&gt;才会自动确定重复次数。在&amp;ldquo; &lt;a href=&quot;#timeit-examples&quot;&gt;示例&amp;rdquo;&lt;/a&gt;部分中，您可以找到更多高级示例。</target>
        </trans-unit>
        <trans-unit id="f54f228df230f0474c98b205804fa448f5fe875b" translate="yes" xml:space="preserve">
          <source>Note however that in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode &lt;a href=&quot;#re.match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt; only matches at the beginning of the string, whereas using &lt;a href=&quot;#re.search&quot;&gt;&lt;code&gt;search()&lt;/code&gt;&lt;/a&gt; with a regular expression beginning with &lt;code&gt;'^'&lt;/code&gt; will match at the beginning of each line.</source>
          <target state="translated">但是请注意，在&lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;模式下，&lt;a href=&quot;#re.match&quot;&gt; &lt;code&gt;match()&lt;/code&gt; &lt;/a&gt;仅在字符串的开头匹配，而将&lt;a href=&quot;#re.search&quot;&gt; &lt;code&gt;search()&lt;/code&gt; &lt;/a&gt;与以 &lt;code&gt;'^'&lt;/code&gt; 开头的正则表达式一起使用将在每一行的开头匹配。</target>
        </trans-unit>
        <trans-unit id="05beb81acbbd60ea7c3692e5bef7179c9b5915a3" translate="yes" xml:space="preserve">
          <source>Note in particular that an exception will be raised if &lt;em&gt;methodname&lt;/em&gt; has not been &lt;em&gt;exposed&lt;/em&gt;.</source>
          <target state="translated">请特别注意，如果未&lt;em&gt;公开&lt;/em&gt;&lt;em&gt;methodname，&lt;/em&gt;则会引发异常。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bcb9bc5733348cf84603de82545dd9a70a1be5f4" translate="yes" xml:space="preserve">
          <source>Note in particular that options (such as &lt;em&gt;-input&lt;/em&gt;) and arguments (such as &lt;em&gt;eggs.txt&lt;/em&gt;) that are separated by whitespace in the shell go in separate list elements, while arguments that need quoting or backslash escaping when used in the shell (such as filenames containing spaces or the &lt;em&gt;echo&lt;/em&gt; command shown above) are single list elements.</source>
          <target state="translated">特别要注意的是，在外壳程序中由空格分隔的选项（例如&lt;em&gt;-input&lt;/em&gt;）和参数（例如&lt;em&gt;eggs.txt&lt;/em&gt;）位于单独的列表元素中，而在外壳中使用时，需要用引号或反斜杠转义的参数（例如包含空格的文件名或上面显示的&lt;em&gt;echo&lt;/em&gt;命令）是单个列表元素。</target>
        </trans-unit>
        <trans-unit id="facb49e906f58a2995d4a0cf64fd63f312feb840" translate="yes" xml:space="preserve">
          <source>Note on SIGPIPE</source>
          <target state="translated">关于SIGPIPE的说明</target>
        </trans-unit>
        <trans-unit id="93d7b55b91dfb84b963b538a0f61240812a059a0" translate="yes" xml:space="preserve">
          <source>Note on VxWorks, this function doesn&amp;rsquo;t return &lt;code&gt;-signal&lt;/code&gt; when the new process is killed. Instead it raises OSError exception.</source>
          <target state="translated">请注意，在VxWorks上，新进程被 &lt;code&gt;-signal&lt;/code&gt; 时，此函数不会返回-signal。相反，它将引发OSError异常。</target>
        </trans-unit>
        <trans-unit id="2e7e41fdb90e46b885d4fc21bb32cf0b77b1568d" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; objects only remove an action if all of its option strings are overridden. So, in the example above, the old &lt;code&gt;-f/--foo&lt;/code&gt; action is retained as the &lt;code&gt;-f&lt;/code&gt; action, because only the &lt;code&gt;--foo&lt;/code&gt; option string was overridden.</source>
          <target state="translated">注意，&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;对象仅在所有选项字符串都被覆盖时才删除操作。因此，在上面的示例中，旧的 &lt;code&gt;-f/--foo&lt;/code&gt; 操作保留为 &lt;code&gt;-f&lt;/code&gt; 操作，因为仅 &lt;code&gt;--foo&lt;/code&gt; 选项字符串被覆盖。</target>
        </trans-unit>
        <trans-unit id="bbabc92aff4ed81b97fa59772d1100b9a7b02ef9" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#asyncore.dispatcher.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt; may raise &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; , even though &lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select.select()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;select#select.poll&quot;&gt;&lt;code&gt;select.poll()&lt;/code&gt;&lt;/a&gt; has reported the socket ready for reading.</source>
          <target state="translated">需要注意的是&lt;a href=&quot;#asyncore.dispatcher.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt;可能会提高&lt;a href=&quot;exceptions#BlockingIOError&quot;&gt; &lt;code&gt;BlockingIOError&lt;/code&gt; &lt;/a&gt;，即使&lt;a href=&quot;select#select.select&quot;&gt; &lt;code&gt;select.select()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;select#select.poll&quot;&gt; &lt;code&gt;select.poll()&lt;/code&gt; &lt;/a&gt;报道插座准备阅读。</target>
        </trans-unit>
        <trans-unit id="21a214d994f16e1f90118d934dbbf9725f16b159" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#collections.defaultdict.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; called for any operations besides &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;. This means that &lt;code&gt;get()&lt;/code&gt; will, like normal dictionaries, return &lt;code&gt;None&lt;/code&gt; as a default rather than using &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，除了&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getitem__&quot;&gt; &lt;code&gt;__getitem__()&lt;/code&gt; &lt;/a&gt;之外，任何其他操作都&lt;em&gt;不会&lt;/em&gt;调用&lt;a href=&quot;#collections.defaultdict.__missing__&quot;&gt; &lt;code&gt;__missing__()&lt;/code&gt; &lt;/a&gt;__（）。这意味着 &lt;code&gt;get()&lt;/code&gt; 像普通字典一样，将默认返回 &lt;code&gt;None&lt;/code&gt; 而不是使用&lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt; &lt;code&gt;default_factory&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04676b632fb8896008db73e1dcf56396a8424248" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#collections.defaultdict.__missing__&quot;&gt;&lt;code&gt;__missing__()&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; called for any operations besides &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getitem__&quot;&gt;&lt;code&gt;__getitem__()&lt;/code&gt;&lt;/a&gt;. This means that &lt;code&gt;get()&lt;/code&gt; will, like normal dictionaries, return &lt;code&gt;None&lt;/code&gt; as a default rather than using &lt;a href=&quot;#collections.defaultdict.default_factory&quot;&gt;&lt;code&gt;default_factory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0481906125c173c6e85bed62a526281abaa1516a" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt;-generated deltas make no claim to be &lt;strong&gt;minimal&lt;/strong&gt; diffs. To the contrary, minimal diffs are often counter-intuitive, because they synch up anywhere possible, sometimes accidental matches 100 pages apart. Restricting synch points to contiguous matches preserves some notion of locality, at the occasional cost of producing a longer diff.</source>
          <target state="translated">请注意，&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; &lt;/a&gt;生成的增量并未声称是&lt;strong&gt;最小&lt;/strong&gt;差异。相反，最小差异通常是违反直觉的，因为它们尽可能地同步，有时偶然相距100页。将同步点限制为连续匹配可保留局部性的概念，但偶尔会产生较长的差异。</target>
        </trans-unit>
        <trans-unit id="dd69c68c8e1ff03113702c7b4183ad050851c7e0" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt;&lt;code&gt;ELLIPSIS&lt;/code&gt;&lt;/a&gt; can also be used to ignore the details of the exception message, but such a test may still fail based on whether or not the module details are printed as part of the exception name. Using &lt;a href=&quot;#doctest.IGNORE_EXCEPTION_DETAIL&quot;&gt;&lt;code&gt;IGNORE_EXCEPTION_DETAIL&lt;/code&gt;&lt;/a&gt; and the details from Python 2.3 is also the only clear way to write a doctest that doesn&amp;rsquo;t care about the exception detail yet continues to pass under Python 2.3 or earlier (those releases do not support &lt;a href=&quot;#doctest-directives&quot;&gt;doctest directives&lt;/a&gt; and ignore them as irrelevant comments). For example:</source>
          <target state="translated">请注意，&lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt; &lt;code&gt;ELLIPSIS&lt;/code&gt; &lt;/a&gt;也可以用于忽略异常消息的详细信息，但是根据模块详细信息是否作为异常名称的一部分打印，这样的测试仍然可能失败。使用&lt;a href=&quot;#doctest.IGNORE_EXCEPTION_DETAIL&quot;&gt; &lt;code&gt;IGNORE_EXCEPTION_DETAIL&lt;/code&gt; &lt;/a&gt;和Python 2.3中的详细信息也是编写不关心异常详细信息但仍在Python 2.3或更早版本下继续通过的doctest的唯一清晰方法（这些版本不支持&lt;a href=&quot;#doctest-directives&quot;&gt;doctest指令，&lt;/a&gt;并忽略它们作为无关的注释）。例如：</target>
        </trans-unit>
        <trans-unit id="8e63f31f55e12cdee25e7b08fb73243d54374458" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#float.hex&quot;&gt;&lt;code&gt;float.hex()&lt;/code&gt;&lt;/a&gt; is an instance method, while &lt;a href=&quot;#float.fromhex&quot;&gt;&lt;code&gt;float.fromhex()&lt;/code&gt;&lt;/a&gt; is a class method.</source>
          <target state="translated">请注意，&lt;a href=&quot;#float.hex&quot;&gt; &lt;code&gt;float.hex()&lt;/code&gt; &lt;/a&gt;是一个实例方法，而&lt;a href=&quot;#float.fromhex&quot;&gt; &lt;code&gt;float.fromhex()&lt;/code&gt; &lt;/a&gt;是一个类方法。</target>
        </trans-unit>
        <trans-unit id="8a0c31b2a17d1253675bf81f567abe1a01487d1b" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt;&lt;code&gt;domain_return_ok()&lt;/code&gt;&lt;/a&gt; is called for every &lt;em&gt;cookie&lt;/em&gt; domain, not just for the &lt;em&gt;request&lt;/em&gt; domain. For example, the function might be called with both &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt; and &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; if the request domain is &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt;. The same goes for &lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt;&lt;code&gt;path_return_ok()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，不仅为&lt;em&gt;请求&lt;/em&gt;域，还为每个&lt;em&gt;cookie&lt;/em&gt;域调用&lt;a href=&quot;#http.cookiejar.CookiePolicy.domain_return_ok&quot;&gt; &lt;code&gt;domain_return_ok()&lt;/code&gt; &lt;/a&gt;。例如，如果请求域为 &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; ，则可以同时使用 &lt;code&gt;&quot;.example.com&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;www.example.com&quot;&lt;/code&gt; 来调用该函数。这同样适用于&lt;a href=&quot;#http.cookiejar.CookiePolicy.path_return_ok&quot;&gt; &lt;code&gt;path_return_ok()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="adc891a129f72cc10502357d2a58f83d2b041536" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#inspect.signature&quot;&gt;&lt;code&gt;signature()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#inspect-signature-object&quot;&gt;Signature Object&lt;/a&gt; provide the recommended API for callable introspection, and support additional behaviours (like positional-only arguments) that are sometimes encountered in extension module APIs. This function is retained primarily for use in code that needs to maintain compatibility with the Python 2 &lt;code&gt;inspect&lt;/code&gt; module API.</source>
          <target state="translated">请注意，&lt;a href=&quot;#inspect.signature&quot;&gt; &lt;code&gt;signature()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#inspect-signature-object&quot;&gt;Signature Object&lt;/a&gt;为可调用的自省提供了推荐的API，并支持扩展模块API中有时会遇到的其他行为（如仅位置参数）。保留此功能主要是为了在需要与Python 2 &lt;code&gt;inspect&lt;/code&gt; module API 保持兼容性的代码中使用。</target>
        </trans-unit>
        <trans-unit id="ddd48ccb5c495507a52bd279914fdcc7d41317f6" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#math.frexp&quot;&gt;&lt;code&gt;frexp()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#math.modf&quot;&gt;&lt;code&gt;modf()&lt;/code&gt;&lt;/a&gt; have a different call/return pattern than their C equivalents: they take a single argument and return a pair of values, rather than returning their second return value through an &amp;lsquo;output parameter&amp;rsquo; (there is no such thing in Python).</source>
          <target state="translated">请注意，&lt;a href=&quot;#math.frexp&quot;&gt; &lt;code&gt;frexp()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#math.modf&quot;&gt; &lt;code&gt;modf()&lt;/code&gt; &lt;/a&gt;的调用/返回模式与C等效项不同：它们采用单个参数并返回一对值，而不是通过&amp;ldquo;输出参数&amp;rdquo;返回它们的第二个返回值（没有Python中的此类内容）。</target>
        </trans-unit>
        <trans-unit id="c47ac53dbffb6c7e920e0e9c3a5bd7e68f910640" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; does not have OOR (original object return), it constructs a new, equivalent object each time you retrieve an attribute:</source>
          <target state="translated">请注意，&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;没有OOR（原始对象返回），它在每次检索属性时都会构造一个新的等效对象：</target>
        </trans-unit>
        <trans-unit id="021cbf64fa7daa47a193a25312368fd1063a8ec4" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#multiprocessing.Lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; is actually a factory function which returns an instance of &lt;code&gt;multiprocessing.synchronize.Lock&lt;/code&gt; initialized with a default context.</source>
          <target state="translated">请注意，&lt;a href=&quot;#multiprocessing.Lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;实际上是一个工厂函数，它返回用默认上下文初始化的 &lt;code&gt;multiprocessing.synchronize.Lock&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="35bd8a5288450aef9ec563731c03552420d81a78" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#multiprocessing.RLock&quot;&gt;&lt;code&gt;RLock&lt;/code&gt;&lt;/a&gt; is actually a factory function which returns an instance of &lt;code&gt;multiprocessing.synchronize.RLock&lt;/code&gt; initialized with a default context.</source>
          <target state="translated">请注意，&lt;a href=&quot;#multiprocessing.RLock&quot;&gt; &lt;code&gt;RLock&lt;/code&gt; &lt;/a&gt;实际上是一个工厂函数，它返回用默认上下文初始化的 &lt;code&gt;multiprocessing.synchronize.RLock&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="9325e13fae2a61a60a73c50f96336405ee30e5aa" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#pkgutil.ImpImporter&quot;&gt;&lt;code&gt;ImpImporter&lt;/code&gt;&lt;/a&gt; does not currently support being used by placement on &lt;a href=&quot;sys#sys.meta_path&quot;&gt;&lt;code&gt;sys.meta_path&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">需要注意的是&lt;a href=&quot;#pkgutil.ImpImporter&quot;&gt; &lt;code&gt;ImpImporter&lt;/code&gt; &lt;/a&gt;目前不支持正在使用的位置上&lt;a href=&quot;sys#sys.meta_path&quot;&gt; &lt;code&gt;sys.meta_path&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="beaaa22c5ee17911c79acb082b3767365455460e" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#socketserver.UnixDatagramServer&quot;&gt;&lt;code&gt;UnixDatagramServer&lt;/code&gt;&lt;/a&gt; derives from &lt;a href=&quot;#socketserver.UDPServer&quot;&gt;&lt;code&gt;UDPServer&lt;/code&gt;&lt;/a&gt;, not from &lt;a href=&quot;#socketserver.UnixStreamServer&quot;&gt;&lt;code&gt;UnixStreamServer&lt;/code&gt;&lt;/a&gt; &amp;mdash; the only difference between an IP and a Unix stream server is the address family, which is simply repeated in both Unix server classes.</source>
          <target state="translated">需要注意的是&lt;a href=&quot;#socketserver.UnixDatagramServer&quot;&gt; &lt;code&gt;UnixDatagramServer&lt;/code&gt; &lt;/a&gt;派生自&lt;a href=&quot;#socketserver.UDPServer&quot;&gt; &lt;code&gt;UDPServer&lt;/code&gt; &lt;/a&gt;，而不是从&lt;a href=&quot;#socketserver.UnixStreamServer&quot;&gt; &lt;code&gt;UnixStreamServer&lt;/code&gt; &lt;/a&gt; -一个IP和Unix的流服务器之间的唯一区别是地址的家庭，这简直是在这两个Unix服务器类重复。</target>
        </trans-unit>
        <trans-unit id="778f82ffcb2b485246b0e53ae55c103c932424fb" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; is implemented as part of the binding process for explicit dotted attribute lookups such as &lt;code&gt;super().__getitem__(name)&lt;/code&gt;. It does so by implementing its own &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattribute__&quot;&gt;&lt;code&gt;__getattribute__()&lt;/code&gt;&lt;/a&gt; method for searching classes in a predictable order that supports cooperative multiple inheritance. Accordingly, &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; is undefined for implicit lookups using statements or operators such as &lt;code&gt;super()[name]&lt;/code&gt;.</source>
          <target state="translated">请注意，&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;是作为绑定过程的一部分实现的，该绑定过程用于显式的点分属性查找，例如 &lt;code&gt;super().__getitem__(name)&lt;/code&gt; 。为此，它实现了自己的&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattribute__&quot;&gt; &lt;code&gt;__getattribute__()&lt;/code&gt; &lt;/a&gt;方法，以可预测的顺序搜索类，以支持协作多重继承。因此，&lt;a href=&quot;#super&quot;&gt; &lt;code&gt;super()&lt;/code&gt; &lt;/a&gt;是未定义使用语句或运算符，如隐查找 &lt;code&gt;super()[name]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7795ea5c7b9b9b0af2a5a2436bccd2cc8092c3e" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; is implemented as part of the binding process for explicit dotted attribute lookups such as &lt;code&gt;super().__getitem__(name)&lt;/code&gt;. It does so by implementing its own &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattribute__&quot;&gt;&lt;code&gt;__getattribute__()&lt;/code&gt;&lt;/a&gt; method for searching classes in a predictable order that supports cooperative multiple inheritance. Accordingly, &lt;a href=&quot;#super&quot;&gt;&lt;code&gt;super()&lt;/code&gt;&lt;/a&gt; is undefined for implicit lookups using statements or operators such as &lt;code&gt;super()[name]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d150903542528eb29c182959a6e94d9657319e" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; skips over comments in the input instead of creating comment objects for them. An &lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt; will only contain comment nodes if they have been inserted into to the tree using one of the &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">请注意，&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; 会&lt;/a&gt;跳过输入中的注释，而不是为其创建注释对象。一个&lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt; &lt;code&gt;ElementTree&lt;/code&gt; 的&lt;/a&gt;将只包含注释节点，如果他们已经被插入到使用的一个树&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;的方法。</target>
        </trans-unit>
        <trans-unit id="7733b443aa3ad7da3792a2988711f38bba4a2a03" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt;&lt;code&gt;XMLParser&lt;/code&gt;&lt;/a&gt; skips over processing instructions in the input instead of creating comment objects for them. An &lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt;&lt;code&gt;ElementTree&lt;/code&gt;&lt;/a&gt; will only contain processing instruction nodes if they have been inserted into to the tree using one of the &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">请注意，&lt;a href=&quot;#xml.etree.ElementTree.XMLParser&quot;&gt; &lt;code&gt;XMLParser&lt;/code&gt; 会&lt;/a&gt;跳过输入中的处理指令，而不是为其创建注释对象。如果&lt;a href=&quot;#xml.etree.ElementTree.ElementTree&quot;&gt; &lt;code&gt;ElementTree&lt;/code&gt; &lt;/a&gt;已使用&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;方法之一插入到树中，则它们仅包含处理指令节点。</target>
        </trans-unit>
        <trans-unit id="0a0e52a29264a10a0ed33e3ee017893c317f8a46" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#xml.sax.handler.ContentHandler.startPrefixMapping&quot;&gt;&lt;code&gt;startPrefixMapping()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#xml.sax.handler.ContentHandler.endPrefixMapping&quot;&gt;&lt;code&gt;endPrefixMapping()&lt;/code&gt;&lt;/a&gt; events are not guaranteed to be properly nested relative to each-other: all &lt;a href=&quot;#xml.sax.handler.ContentHandler.startPrefixMapping&quot;&gt;&lt;code&gt;startPrefixMapping()&lt;/code&gt;&lt;/a&gt; events will occur before the corresponding &lt;a href=&quot;#xml.sax.handler.ContentHandler.startElement&quot;&gt;&lt;code&gt;startElement()&lt;/code&gt;&lt;/a&gt; event, and all &lt;a href=&quot;#xml.sax.handler.ContentHandler.endPrefixMapping&quot;&gt;&lt;code&gt;endPrefixMapping()&lt;/code&gt;&lt;/a&gt; events will occur after the corresponding &lt;a href=&quot;#xml.sax.handler.ContentHandler.endElement&quot;&gt;&lt;code&gt;endElement()&lt;/code&gt;&lt;/a&gt; event, but their order is not guaranteed.</source>
          <target state="translated">请注意，不能保证&lt;a href=&quot;#xml.sax.handler.ContentHandler.startPrefixMapping&quot;&gt; &lt;code&gt;startPrefixMapping()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#xml.sax.handler.ContentHandler.endPrefixMapping&quot;&gt; &lt;code&gt;endPrefixMapping()&lt;/code&gt; &lt;/a&gt;事件相对于彼此正确地嵌套：所有&lt;a href=&quot;#xml.sax.handler.ContentHandler.startPrefixMapping&quot;&gt; &lt;code&gt;startPrefixMapping()&lt;/code&gt; &lt;/a&gt;事件将在相应的&lt;a href=&quot;#xml.sax.handler.ContentHandler.startElement&quot;&gt; &lt;code&gt;startElement()&lt;/code&gt; &lt;/a&gt;事件之前发生，并且所有&lt;a href=&quot;#xml.sax.handler.ContentHandler.endPrefixMapping&quot;&gt; &lt;code&gt;endPrefixMapping()&lt;/code&gt; &lt;/a&gt;事件将在相应的&lt;a href=&quot;#xml.sax.handler.ContentHandler.endElement&quot;&gt; &lt;code&gt;endElement()&lt;/code&gt; &lt;/a&gt;之后发生（）事件，但不能保证其顺序。</target>
        </trans-unit>
        <trans-unit id="47444f992c8f787e5218f00f598cb803627da402" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;'a:gz'&lt;/code&gt;, &lt;code&gt;'a:bz2'&lt;/code&gt; or &lt;code&gt;'a:xz'&lt;/code&gt; is not possible. If &lt;em&gt;mode&lt;/em&gt; is not suitable to open a certain (compressed) file for reading, &lt;a href=&quot;#tarfile.ReadError&quot;&gt;&lt;code&gt;ReadError&lt;/code&gt;&lt;/a&gt; is raised. Use &lt;em&gt;mode&lt;/em&gt;&lt;code&gt;'r'&lt;/code&gt; to avoid this. If a compression method is not supported, &lt;a href=&quot;#tarfile.CompressionError&quot;&gt;&lt;code&gt;CompressionError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">请注意， &lt;code&gt;'a:gz'&lt;/code&gt; ， &lt;code&gt;'a:bz2'&lt;/code&gt; 或 &lt;code&gt;'a:xz'&lt;/code&gt; 是不可能的。如果&lt;em&gt;mode&lt;/em&gt;不适合打开某个（压缩的）文件进行读取，&lt;a href=&quot;#tarfile.ReadError&quot;&gt; &lt;code&gt;ReadError&lt;/code&gt; &lt;/a&gt;引发ReadError。使用&lt;em&gt;模式&lt;/em&gt; &lt;code&gt;'r'&lt;/code&gt; 可以避免这种情况。如果不支持压缩方法，则会引发&lt;a href=&quot;#tarfile.CompressionError&quot;&gt; &lt;code&gt;CompressionError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1cc69e2c68bc296e588d8f892981cbd43a28c6e1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Lock&lt;/code&gt; is actually a factory function which returns an instance of the most efficient version of the concrete Lock class that is supported by the platform.</source>
          <target state="translated">请注意， &lt;code&gt;Lock&lt;/code&gt; 实际上是一个工厂函数，它返回平台支持的具体Lock类的最高效版本的实例。</target>
        </trans-unit>
        <trans-unit id="ee6451008c83ce88b9e80fafc4e7537e799843ea" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;None&lt;/code&gt; as a type hint is a special case and is replaced by &lt;code&gt;type(None)&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;None&lt;/code&gt; 作为类型提示是一种特殊情况，并由 &lt;code&gt;type(None)&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="57fae4790fdc5439f742aac77bc9daa66d83e4d4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;None&lt;/code&gt; may be returned if no handler handles the request (though the default installed global &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#urllib.request.UnknownHandler&quot;&gt;&lt;code&gt;UnknownHandler&lt;/code&gt;&lt;/a&gt; to ensure this never happens).</source>
          <target state="translated">请注意，如果没有处理程序处理该请求，则可能不会返回 &lt;code&gt;None&lt;/code&gt; （尽管默认安装的全局&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;使用&lt;a href=&quot;#urllib.request.UnknownHandler&quot;&gt; &lt;code&gt;UnknownHandler&lt;/code&gt; &lt;/a&gt;来确保永远不会发生）。</target>
        </trans-unit>
        <trans-unit id="236fa39ea36e5dba046de057b39ac4f3d0d57af9" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;RLock&lt;/code&gt; is actually a factory function which returns an instance of the most efficient version of the concrete RLock class that is supported by the platform.</source>
          <target state="translated">请注意， &lt;code&gt;RLock&lt;/code&gt; 实际上是工厂函数，它返回平台支持的具体RLock类的最高效版本的实例。</target>
        </trans-unit>
        <trans-unit id="9ed32062270ce11074feca5a6bc1d17484d5ca1f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Type[C]&lt;/code&gt; is covariant:</source>
          <target state="translated">请注意， &lt;code&gt;Type[C]&lt;/code&gt; 是协变的：</target>
        </trans-unit>
        <trans-unit id="5b9cfa59b4f04a3b3e5fb4f6cd1086211b01f3d0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;bletch&lt;/code&gt; is omitted because it doesn&amp;rsquo;t exist; the &lt;code&gt;bar&lt;/code&gt; directory precedes the &lt;code&gt;foo&lt;/code&gt; directory because &lt;code&gt;bar.pth&lt;/code&gt; comes alphabetically before &lt;code&gt;foo.pth&lt;/code&gt;; and &lt;code&gt;spam&lt;/code&gt; is omitted because it is not mentioned in either path configuration file.</source>
          <target state="translated">请注意，省略了 &lt;code&gt;bletch&lt;/code&gt; ，因为它不存在。在 &lt;code&gt;bar&lt;/code&gt; 目录之前的 &lt;code&gt;foo&lt;/code&gt; 的目录，因为 &lt;code&gt;bar.pth&lt;/code&gt; 之前谈到的字母顺序 &lt;code&gt;foo.pth&lt;/code&gt; ; 并省略了 &lt;code&gt;spam&lt;/code&gt; ，因为在两个路径配置文件中均未提及。</target>
        </trans-unit>
        <trans-unit id="d33be2cd5b4983695dd8516ab51e58c98eb1cabb" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;filter(function, iterable)&lt;/code&gt; is equivalent to the generator expression &lt;code&gt;(item for item in iterable if function(item))&lt;/code&gt; if function is not &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;(item for item in iterable if item)&lt;/code&gt; if function is &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;filter(function, iterable)&lt;/code&gt; 等于生成器表达式 &lt;code&gt;(item for item in iterable if function(item))&lt;/code&gt; 如果function不为 &lt;code&gt;None&lt;/code&gt; ， &lt;code&gt;(item for item in iterable if item)&lt;/code&gt; 如果function为 &lt;code&gt;None&lt;/code&gt; ，则等于（item的item项的item）；如果function为None。</target>
        </trans-unit>
        <trans-unit id="85efeca034605ee9db13f57e747d94bb977067bc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;fork()&lt;/code&gt; calls made by third-party C code may not call those functions, unless it explicitly calls &lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_BeforeFork&quot;&gt;&lt;code&gt;PyOS_BeforeFork()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_AfterFork_Parent&quot;&gt;&lt;code&gt;PyOS_AfterFork_Parent()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_AfterFork_Child&quot;&gt;&lt;code&gt;PyOS_AfterFork_Child()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，由第三方C代码进行的 &lt;code&gt;fork()&lt;/code&gt; 调用可能不会调用这些函数，除非它显式调用&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_BeforeFork&quot;&gt; &lt;code&gt;PyOS_BeforeFork()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_AfterFork_Parent&quot;&gt; &lt;code&gt;PyOS_AfterFork_Parent()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://docs.python.org/3.8/c-api/sys.html#c.PyOS_AfterFork_Child&quot;&gt; &lt;code&gt;PyOS_AfterFork_Child()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71c7f255fffeef1206d1f6a0f035d3c0897d35b0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;fork()&lt;/code&gt; calls made by third-party C code may not call those functions, unless it explicitly calls &lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PyOS_BeforeFork&quot;&gt;&lt;code&gt;PyOS_BeforeFork()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PyOS_AfterFork_Parent&quot;&gt;&lt;code&gt;PyOS_AfterFork_Parent()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3.9/c-api/sys.html#c.PyOS_AfterFork_Child&quot;&gt;&lt;code&gt;PyOS_AfterFork_Child()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ba61f0ef9cfc007a2b6f8bfd3fbe4f04edd595" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;m.start(group)&lt;/code&gt; will equal &lt;code&gt;m.end(group)&lt;/code&gt; if &lt;em&gt;group&lt;/em&gt; matched a null string. For example, after &lt;code&gt;m = re.search('b(c?)', 'cba')&lt;/code&gt;, &lt;code&gt;m.start(0)&lt;/code&gt; is 1, &lt;code&gt;m.end(0)&lt;/code&gt; is 2, &lt;code&gt;m.start(1)&lt;/code&gt; and &lt;code&gt;m.end(1)&lt;/code&gt; are both 2, and &lt;code&gt;m.start(2)&lt;/code&gt; raises an &lt;a href=&quot;exceptions#IndexError&quot;&gt;&lt;code&gt;IndexError&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">请注意，如果&lt;em&gt;组&lt;/em&gt;与空字符串匹配，则 &lt;code&gt;m.start(group)&lt;/code&gt; 将等于 &lt;code&gt;m.end(group)&lt;/code&gt; 。例如，在 &lt;code&gt;m = re.search('b(c?)', 'cba')&lt;/code&gt; ， &lt;code&gt;m.start(0)&lt;/code&gt; 为1， &lt;code&gt;m.end(0)&lt;/code&gt; 为2， &lt;code&gt;m.start(1)&lt;/code&gt; 和 &lt;code&gt;m.end(1)&lt;/code&gt; 均为2，并且 &lt;code&gt;m.start(2)&lt;/code&gt; 引发&lt;a href=&quot;exceptions#IndexError&quot;&gt; &lt;code&gt;IndexError&lt;/code&gt; &lt;/a&gt;异常。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a801fa594d8a089d333c1d08dda4b81a98110981" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;metavar&lt;/code&gt; only changes the &lt;em&gt;displayed&lt;/em&gt; name - the name of the attribute on the &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; object is still determined by the &lt;a href=&quot;#dest&quot;&gt;dest&lt;/a&gt; value.</source>
          <target state="translated">请注意， &lt;code&gt;metavar&lt;/code&gt; 仅更改&lt;em&gt;显示的&lt;/em&gt;名称&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;对象上的属性名称仍由&lt;a href=&quot;#dest&quot;&gt;dest&lt;/a&gt;值确定。</target>
        </trans-unit>
        <trans-unit id="36e3e839ce2533fb32ef0684d4636235258670ad" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;nargs=1&lt;/code&gt; produces a list of one item. This is different from the default, in which the item is produced by itself.</source>
          <target state="translated">请注意， &lt;code&gt;nargs=1&lt;/code&gt; 会生成一个项的列表。这与默认情况不同，在默认情况下，项目是自己生产的。</target>
        </trans-unit>
        <trans-unit id="6cb4d80564b60cb42824f340ae271f84acf512f2" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;quote(string, safe, encoding, errors)&lt;/code&gt; is equivalent to &lt;code&gt;quote_from_bytes(string.encode(encoding, errors), safe)&lt;/code&gt;.</source>
          <target state="translated">请注意 &lt;code&gt;quote(string, safe, encoding, errors)&lt;/code&gt; 等同于 &lt;code&gt;quote_from_bytes(string.encode(encoding, errors), safe)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc85143f0c8971e93992f10750203e06ab969614" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;temp0&lt;/code&gt; and &lt;code&gt;temp1&lt;/code&gt; are objects still using the internal buffer of the &lt;code&gt;rc&lt;/code&gt; object above. So executing &lt;code&gt;rc.a = temp0&lt;/code&gt; copies the buffer contents of &lt;code&gt;temp0&lt;/code&gt; into &lt;code&gt;rc&lt;/code&gt; &amp;lsquo;s buffer. This, in turn, changes the contents of &lt;code&gt;temp1&lt;/code&gt;. So, the last assignment &lt;code&gt;rc.b = temp1&lt;/code&gt;, doesn&amp;rsquo;t have the expected effect.</source>
          <target state="translated">请注意， &lt;code&gt;temp0&lt;/code&gt; 和 &lt;code&gt;temp1&lt;/code&gt; 是仍在使用上面 &lt;code&gt;rc&lt;/code&gt; 对象的内部缓冲区的对象。执行这样 &lt;code&gt;rc.a = temp0&lt;/code&gt; 副本的缓冲器内容 &lt;code&gt;temp0&lt;/code&gt; 到 &lt;code&gt;rc&lt;/code&gt; 的缓冲器。反过来，这会更改 &lt;code&gt;temp1&lt;/code&gt; 的内容。因此，最后一次分配 &lt;code&gt;rc.b = temp1&lt;/code&gt; 并没有达到预期的效果。</target>
        </trans-unit>
        <trans-unit id="7f362e945054667a3816f573ef83bd7edea53f2a" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;all&lt;/em&gt;&lt;a href=&quot;sys#sys.path&quot;&gt;&lt;code&gt;sys.path&lt;/code&gt;&lt;/a&gt; modifications in the body of the context manager, including replacement of the object, will be reverted at the end of the block.</source>
          <target state="translated">注意，上下文管理器主体中的&lt;em&gt;所有&lt;/em&gt;&lt;a href=&quot;sys#sys.path&quot;&gt; &lt;code&gt;sys.path&lt;/code&gt; &lt;/a&gt;修改，包括对象的替换，都将在该块的末尾还原。</target>
        </trans-unit>
        <trans-unit id="ce5fc6b37538034752807f8815ba613f8bc848ab" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;lock&lt;/em&gt; is a keyword only argument.</source>
          <target state="translated">请注意，&lt;em&gt;lock&lt;/em&gt;是仅关键字参数。</target>
        </trans-unit>
        <trans-unit id="3b2234a6dca333d6acda4ece1514b447bb223c5d" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;lock&lt;/em&gt; is a keyword-only argument.</source>
          <target state="translated">请注意，&lt;em&gt;lock&lt;/em&gt;是仅关键字参数。</target>
        </trans-unit>
        <trans-unit id="3e5897049932333313c37f96477a83c9d676a2c7" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;mapname&lt;/em&gt; is first checked if it is an alias to another name.</source>
          <target state="translated">请注意，首先检查&lt;em&gt;mapname&lt;/em&gt;是否是另一个名称的别名。</target>
        </trans-unit>
        <trans-unit id="0bf52d3f07d9f7c54657bde5e8753068a541df3d" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;subtype&lt;/em&gt; is optional; if omitted, then subpart MIME type matching is done only with the main type. &lt;em&gt;maintype&lt;/em&gt; is optional too; it defaults to &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="translated">注意，&lt;em&gt;子类型&lt;/em&gt;是可选的。如果省略，则仅对主类型进行子部分MIME类型匹配。&lt;em&gt;主类型&lt;/em&gt;也是可选的；它默认为&lt;em&gt;text&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="185bf61bd6bed1a3aeabce3b0e19da1aead89726" translate="yes" xml:space="preserve">
          <source>Note that CGI scripts will be run with UID of user nobody, for security reasons. Problems with the CGI script will be translated to error 403.</source>
          <target state="translated">请注意,出于安全考虑,CGI 脚本将以用户 nobody 的 UID 运行。如果CGI脚本出现问题,将转化为错误403。</target>
        </trans-unit>
        <trans-unit id="2d9d2deaf97052c0294923500df788d9b644ff07" translate="yes" xml:space="preserve">
          <source>Note that DOM attributes may also be manipulated as nodes instead of as simple strings. It is fairly rare that you must do this, however, so this usage is not yet documented.</source>
          <target state="translated">请注意,DOM属性也可以作为节点而不是简单的字符串来操作。然而,你必须这样做的情况相当少见,所以这种用法还没有被记录下来。</target>
        </trans-unit>
        <trans-unit id="f0c209dc694d0046aa169702d84ba458e5877b53" translate="yes" xml:space="preserve">
          <source>Note that GNU &lt;strong&gt;gettext&lt;/strong&gt; also defines a &lt;code&gt;dcgettext()&lt;/code&gt; method, but this was deemed not useful and so it is currently unimplemented.</source>
          <target state="translated">请注意，GNU &lt;strong&gt;gettext&lt;/strong&gt;还定义了 &lt;code&gt;dcgettext()&lt;/code&gt; 方法，但是这被认为没有用，因此目前未实现。</target>
        </trans-unit>
        <trans-unit id="ac3a38393892122ad7e515b32aa73f768974848c" translate="yes" xml:space="preserve">
          <source>Note that IMAP4 message numbers change as the mailbox changes; in particular, after an &lt;code&gt;EXPUNGE&lt;/code&gt; command performs deletions the remaining messages are renumbered. So it is highly advisable to use UIDs instead, with the UID command.</source>
          <target state="translated">请注意，随着邮箱的更改，IMAP4消息号也会更改。特别是，在 &lt;code&gt;EXPUNGE&lt;/code&gt; 命令执行删除操作后，其余消息将重新编号。因此，强烈建议使用UID命令代替UID。</target>
        </trans-unit>
        <trans-unit id="b2c88144df43e9fa2a3b8a94deba5ba70c305ffa" translate="yes" xml:space="preserve">
          <source>Note that IPv6 scoped addresses are converted to integers without scope zone ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171726c431e5e57c0ba8ef895a87dd12a2775147" translate="yes" xml:space="preserve">
          <source>Note that POP3, though widely supported, is obsolescent. The implementation quality of POP3 servers varies widely, and too many are quite poor. If your mailserver supports IMAP, you would be better off using the &lt;a href=&quot;imaplib#imaplib.IMAP4&quot;&gt;&lt;code&gt;imaplib.IMAP4&lt;/code&gt;&lt;/a&gt; class, as IMAP servers tend to be better implemented.</source>
          <target state="translated">请注意，尽管POP3得到了广泛支持，但已过时。POP3服务器的实现质量差异很大，而且太多都太差了。如果您的邮件服务器支持IMAP，则最好使用&lt;a href=&quot;imaplib#imaplib.IMAP4&quot;&gt; &lt;code&gt;imaplib.IMAP4&lt;/code&gt; &lt;/a&gt;类，因为IMAP服务器倾向于更好地实现。</target>
        </trans-unit>
        <trans-unit id="b0976769a6f63c576221d99c17d735ec72b6244d" translate="yes" xml:space="preserve">
          <source>Note that Python makes no effort to distinguish signaling NaNs from quiet NaNs, and behavior for signaling NaNs remains unspecified. Typical behavior is to treat all NaNs as though they were quiet.</source>
          <target state="translated">请注意,Python 并没有努力区分信号型 NaNs 和安静型 NaNs,而且对于信号型 NaNs 的行为仍未明确。典型的行为是把所有的NaNs当作安静的。</target>
        </trans-unit>
        <trans-unit id="9296f2c1170009e8779568448d5aef2bd32ea765" translate="yes" xml:space="preserve">
          <source>Note that SSL-on-563 is discouraged per &lt;a href=&quot;https://tools.ietf.org/html/rfc4642.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 4642&lt;/strong&gt;&lt;/a&gt;, in favor of STARTTLS as described below. However, some servers only support the former.</source>
          <target state="translated">请注意，根据&lt;a href=&quot;https://tools.ietf.org/html/rfc4642.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 4642&lt;/strong&gt;&lt;/a&gt;建议不要使用SSL-on-563 ，而建议使用STARTTLS，如下所述。但是，某些服务器仅支持前者。</target>
        </trans-unit>
        <trans-unit id="0d544a9bc75ffdcf42bb88359222d7a7b4debd33" translate="yes" xml:space="preserve">
          <source>Note that a daemonic process is not allowed to create child processes. Otherwise a daemonic process would leave its children orphaned if it gets terminated when its parent process exits. Additionally, these are &lt;strong&gt;not&lt;/strong&gt; Unix daemons or services, they are normal processes that will be terminated (and not joined) if non-daemonic processes have exited.</source>
          <target state="translated">请注意，不允许守护进程创建子进程。否则，如果守护进程在其父进程退出时被终止，它将使其子进程变成孤儿。此外，这些&lt;strong&gt;不是&lt;/strong&gt; Unix守护程序或服务，它们是正常的进程，如果非守护进程退出，它们将终止（而不加入）。</target>
        </trans-unit>
        <trans-unit id="b3ab68b2d6d6352eec66994675336fc958445858" translate="yes" xml:space="preserve">
          <source>Note that a queue created using a manager does not have this issue. See &lt;a href=&quot;#multiprocessing-programming&quot;&gt;Programming guidelines&lt;/a&gt;.</source>
          <target state="translated">请注意，使用管理器创建的队列不存在此问题。请参阅&lt;a href=&quot;#multiprocessing-programming&quot;&gt;编程指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83b09fa4d37d211dda63c2257b5bbfcc0eea346c" translate="yes" xml:space="preserve">
          <source>Note that a single name can be bound to multiple objects. If the result is &lt;code&gt;True&lt;/code&gt;, the name may also be bound to other objects, like an int or list, that does not introduce a new namespace.</source>
          <target state="translated">请注意，一个名称可以绑定到多个对象。如果结果为 &lt;code&gt;True&lt;/code&gt; ，则该名称也可以绑定到其他对象，例如int或list，而这些对象不会引入新的名称空间。</target>
        </trans-unit>
        <trans-unit id="cc7182d710470dc2eccc4f80d44d9c3c8590984b" translate="yes" xml:space="preserve">
          <source>Note that accessing the ctypes object through the wrapper can be a lot slower than accessing the raw ctypes object.</source>
          <target state="translated">请注意,通过包装器访问ctypes对象会比访问原始ctypes对象慢很多。</target>
        </trans-unit>
        <trans-unit id="cfff56aec00da48d3760fdc8fdc321170625cd65" translate="yes" xml:space="preserve">
          <source>Note that additional file formats which can be decompressed by the &lt;strong&gt;gzip&lt;/strong&gt; and &lt;strong&gt;gunzip&lt;/strong&gt; programs, such as those produced by &lt;strong&gt;compress&lt;/strong&gt; and &lt;strong&gt;pack&lt;/strong&gt;, are not supported by this module.</source>
          <target state="translated">请注意，此模块不支持可由&lt;strong&gt;gzip&lt;/strong&gt;和&lt;strong&gt;gunzip&lt;/strong&gt;程序解压缩的其他文件格式，例如由&lt;strong&gt;compress&lt;/strong&gt;和&lt;strong&gt;pack&lt;/strong&gt;生成的文件格式。</target>
        </trans-unit>
        <trans-unit id="29cc14f3bb61b303c6e569ab997e5a9c2519db07" translate="yes" xml:space="preserve">
          <source>Note that all examples in this section &lt;strong&gt;purposefully&lt;/strong&gt; show how to use the low-level event loop APIs, such as &lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt;&lt;code&gt;loop.run_forever()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt;&lt;code&gt;loop.call_soon()&lt;/code&gt;&lt;/a&gt;. Modern asyncio applications rarely need to be written this way; consider using the high-level functions like &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;asyncio.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意，在本节的所有例子&lt;strong&gt;故意&lt;/strong&gt;展示了如何使用低级别事件循环的API，如&lt;a href=&quot;#asyncio.loop.run_forever&quot;&gt; &lt;code&gt;loop.run_forever()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.loop.call_soon&quot;&gt; &lt;code&gt;loop.call_soon()&lt;/code&gt; &lt;/a&gt;。现代异步应用程序很少需要以这种方式编写；考虑使用像&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;asyncio.run()&lt;/code&gt; &lt;/a&gt;这样的高级功能。</target>
        </trans-unit>
        <trans-unit id="52b13893f67d7ba58e9280b940186eb07db6ac12" translate="yes" xml:space="preserve">
          <source>Note that all sorts on statistics are in descending order (placing most time consuming items first), where as name, file, and line number searches are in ascending order (alphabetical). The subtle distinction between &lt;code&gt;SortKey.NFL&lt;/code&gt; and &lt;code&gt;SortKey.STDNAME&lt;/code&gt; is that the standard name is a sort of the name as printed, which means that the embedded line numbers get compared in an odd way. For example, lines 3, 20, and 40 would (if the file names were the same) appear in the string order 20, 3 and 40. In contrast, &lt;code&gt;SortKey.NFL&lt;/code&gt; does a numeric compare of the line numbers. In fact, &lt;code&gt;sort_stats(SortKey.NFL)&lt;/code&gt; is the same as &lt;code&gt;sort_stats(SortKey.NAME, SortKey.FILENAME, SortKey.LINE)&lt;/code&gt;.</source>
          <target state="translated">请注意，统计信息上的所有排序均以降序排列（首先放置大多数耗时的项），其中名称，文件和行号搜索按升序排列（字母顺序）。 &lt;code&gt;SortKey.NFL&lt;/code&gt; 和 &lt;code&gt;SortKey.STDNAME&lt;/code&gt; 之间的细微区别是，标准名称是打印时的名称的一种，这意味着以奇怪的方式比较了嵌入的行号。例如，如果文件名相同，第 &lt;code&gt;SortKey.NFL&lt;/code&gt; 和40 行将出现在字符串顺序20、3和40中。相反，SortKey.NFL对行号进行数字比较。实际上， &lt;code&gt;sort_stats(SortKey.NFL)&lt;/code&gt; 与 &lt;code&gt;sort_stats(SortKey.NAME, SortKey.FILENAME, SortKey.LINE)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0c40fc37a9bf565a857f29ad723c19c596a97f9" translate="yes" xml:space="preserve">
          <source>Note that all these functions check ordinal bit values derived from the character of the string you pass in; they do not actually know anything about the host machine&amp;rsquo;s character encoding.</source>
          <target state="translated">请注意，所有这些函数都会检查从您传入的字符串的字符派生的序数位值；他们实际上对主机的字符编码一无所知。</target>
        </trans-unit>
        <trans-unit id="0102294a10326ceacdc04ecf27b97bae220074cc" translate="yes" xml:space="preserve">
          <source>Note that alternative event loop implementations might have own limitations; please refer to their documentation.</source>
          <target state="translated">请注意,其他的事件循环实现可能有自己的限制,请参考他们的文档。</target>
        </trans-unit>
        <trans-unit id="45152f2b702b262fbbfcdce7c55047081266ed37" translate="yes" xml:space="preserve">
          <source>Note that although the naming for the above described class attributes is singular (e.g. &lt;code&gt;cssclass_month&lt;/code&gt;&lt;code&gt;cssclass_noday&lt;/code&gt;), one can replace the single CSS class with a space separated list of CSS classes, for example:</source>
          <target state="translated">请注意，尽管上述类属性的命名是单数（例如 &lt;code&gt;cssclass_month&lt;/code&gt; &lt;code&gt;cssclass_noday&lt;/code&gt; ），但是可以用空格分隔的CSS类列表替换单个CSS类，例如：</target>
        </trans-unit>
        <trans-unit id="cc788fedc235ef380745686ed580eadd15bb5571" translate="yes" xml:space="preserve">
          <source>Note that an array of &lt;a href=&quot;ctypes#ctypes.c_char&quot;&gt;&lt;code&gt;ctypes.c_char&lt;/code&gt;&lt;/a&gt; has &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;raw&lt;/code&gt; attributes which allow one to use it to store and retrieve strings &amp;ndash; see documentation for &lt;a href=&quot;ctypes#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，&lt;a href=&quot;ctypes#ctypes.c_char&quot;&gt; &lt;code&gt;ctypes.c_char&lt;/code&gt; &lt;/a&gt;数组具有 &lt;code&gt;value&lt;/code&gt; 和 &lt;code&gt;raw&lt;/code&gt; 属性，允许它们使用它存储和检索字符串-请参阅&lt;a href=&quot;ctypes#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="dbc239128181b638fbd4155908a13241b2705d34" translate="yes" xml:space="preserve">
          <source>Note that an array of &lt;a href=&quot;ctypes#ctypes.c_char&quot;&gt;&lt;code&gt;ctypes.c_char&lt;/code&gt;&lt;/a&gt; has &lt;em&gt;value&lt;/em&gt; and &lt;em&gt;raw&lt;/em&gt; attributes which allow one to use it to store and retrieve strings.</source>
          <target state="translated">请注意，一个&lt;a href=&quot;ctypes#ctypes.c_char&quot;&gt; &lt;code&gt;ctypes.c_char&lt;/code&gt; &lt;/a&gt;数组具有&lt;em&gt;value&lt;/em&gt;和&lt;em&gt;raw&lt;/em&gt;属性，使它们可以使用它存储和检索字符串。</target>
        </trans-unit>
        <trans-unit id="0725d9c7542906970da6bf54619129ddce9a488b" translate="yes" xml:space="preserve">
          <source>Note that an equivalent command line interface could be produced with less code and more informative help and error messages by using the &lt;a href=&quot;argparse#module-argparse&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">请注意，使用&lt;a href=&quot;argparse#module-argparse&quot;&gt; &lt;code&gt;argparse&lt;/code&gt; &lt;/a&gt;模块，可以用更少的代码和更多有用的帮助和错误消息来生成等效的命令行界面：</target>
        </trans-unit>
        <trans-unit id="d79de2b4a69fab3541bfc76151735d65f04d953a" translate="yes" xml:space="preserve">
          <source>Note that any arguments not in your user-defined groups will end up back in the usual &amp;ldquo;positional arguments&amp;rdquo; and &amp;ldquo;optional arguments&amp;rdquo; sections.</source>
          <target state="translated">请注意，不在用户定义组中的所有参数都将返回到通常的&amp;ldquo;位置参数&amp;rdquo;和&amp;ldquo;可选参数&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="68a57b0f8502dd0b76f40e988de13524a3dc9d6d" translate="yes" xml:space="preserve">
          <source>Note that any data following the terminator will be available for reading by the channel after &lt;a href=&quot;#asynchat.async_chat.found_terminator&quot;&gt;&lt;code&gt;found_terminator()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">请注意，在&lt;a href=&quot;#asynchat.async_chat.found_terminator&quot;&gt; &lt;code&gt;found_terminator()&lt;/code&gt; &lt;/a&gt;之后，终止符之后的任何数据将可供通道读取。</target>
        </trans-unit>
        <trans-unit id="10e132ee6084002c7b0a817968e06f5f4037ab02" translate="yes" xml:space="preserve">
          <source>Note that any string beginning with two backslashes is assumed by default to be an &lt;code&gt;'AF_PIPE'&lt;/code&gt; address rather than an &lt;code&gt;'AF_UNIX'&lt;/code&gt; address.</source>
          <target state="translated">请注意，默认情况下，任何以两个反斜杠开头的字符串都假定为 &lt;code&gt;'AF_PIPE'&lt;/code&gt; 地址，而不是 &lt;code&gt;'AF_UNIX'&lt;/code&gt; 地址。</target>
        </trans-unit>
        <trans-unit id="27d20a06c7ebcc2a74c0dcd2eec75504ff20d0c8" translate="yes" xml:space="preserve">
          <source>Note that as an exception is propagated down the chain of callers, an &lt;code&gt;'exception'&lt;/code&gt; event is generated at each level.</source>
          <target state="translated">请注意，由于异常是沿着调用者链传播的，因此在每个级别都会生成一个 &lt;code&gt;'exception'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="f9800dc40fc6ed2861610fc1c540d6d1d8733fe1" translate="yes" xml:space="preserve">
          <source>Note that calling any method (even inquiries) on a closed stream is undefined. Implementations may raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; in this case.</source>
          <target state="translated">请注意，在关闭的流上调用任何方法（甚至查询）都是未定义的。在这种情况下，实现可能会引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7982f207f5b326c1a5b9df38ed760b57b9caf0aa" translate="yes" xml:space="preserve">
          <source>Note that child nodes of nodes that have a custom visitor method won&amp;rsquo;t be visited unless the visitor calls &lt;a href=&quot;#ast.NodeVisitor.generic_visit&quot;&gt;&lt;code&gt;generic_visit()&lt;/code&gt;&lt;/a&gt; or visits them itself.</source>
          <target state="translated">请注意，除非访问者调用&lt;a href=&quot;#ast.NodeVisitor.generic_visit&quot;&gt; &lt;code&gt;generic_visit()&lt;/code&gt; &lt;/a&gt;或自身访问它们，否则将不会访问具有自定义访问者方法的节点的子节点。</target>
        </trans-unit>
        <trans-unit id="1119ecb23602acd8caeffa5d000794f1eba1757c" translate="yes" xml:space="preserve">
          <source>Note that concurrent modification while iterating can lead to problems, just like when iterating and modifying Python lists or dicts. Therefore, the example first collects all matching elements with &lt;code&gt;root.findall()&lt;/code&gt;, and only then iterates over the list of matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d382ed6dd9eab4df2994bedfb13e3537561f992" translate="yes" xml:space="preserve">
          <source>Note that currently expanded netmasks are not supported. That means &lt;code&gt;2001:db00::0/24&lt;/code&gt; is a valid argument while &lt;code&gt;2001:db00::0/ffff:ff00::&lt;/code&gt; not.</source>
          <target state="translated">请注意，当前不支持扩展的网络掩码。这意味着 &lt;code&gt;2001:db00::0/24&lt;/code&gt; 是有效参数，而 &lt;code&gt;2001:db00::0/ffff:ff00::&lt;/code&gt; 不是。</target>
        </trans-unit>
        <trans-unit id="4db3f43ffbaa9cce83c5e9797f11ee3784e159b1" translate="yes" xml:space="preserve">
          <source>Note that currently mutually exclusive argument groups do not support the &lt;em&gt;title&lt;/em&gt; and &lt;em&gt;description&lt;/em&gt; arguments of &lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt;&lt;code&gt;add_argument_group()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，当前互斥的参数组不支持&lt;a href=&quot;#argparse.ArgumentParser.add_argument_group&quot;&gt; &lt;code&gt;add_argument_group()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;title&lt;/em&gt;和&lt;em&gt;description&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="4ba81a2a12ca2905b7e3bc3e32ecb856013a86f5" translate="yes" xml:space="preserve">
          <source>Note that descendant processes of the process will &lt;em&gt;not&lt;/em&gt; be terminated &amp;ndash; they will simply become orphaned.</source>
          <target state="translated">请注意，该进程的后代进程&lt;em&gt;不会&lt;/em&gt;终止-它们只会变成孤立的。</target>
        </trans-unit>
        <trans-unit id="b3a3be6e16147e9e8fd7d6862b1baa360c9c8ab4" translate="yes" xml:space="preserve">
          <source>Note that encoding with &lt;a href=&quot;#email.encoders.encode_quopri&quot;&gt;&lt;code&gt;encode_quopri()&lt;/code&gt;&lt;/a&gt; also encodes all tabs and space characters in the data.</source>
          <target state="translated">注意，使用&lt;a href=&quot;#email.encoders.encode_quopri&quot;&gt; &lt;code&gt;encode_quopri()&lt;/code&gt; 进行&lt;/a&gt;编码还可以对数据中的所有制表符和空格字符进行编码。</target>
        </trans-unit>
        <trans-unit id="8858707f6b738b8eec7bc257425fec239a5f9e41" translate="yes" xml:space="preserve">
          <source>Note that even for small &lt;code&gt;len(x)&lt;/code&gt;, the total number of permutations of &lt;em&gt;x&lt;/em&gt; can quickly grow larger than the period of most random number generators. This implies that most permutations of a long sequence can never be generated. For example, a sequence of length 2080 is the largest that can fit within the period of the Mersenne Twister random number generator.</source>
          <target state="translated">请注意，即使对于 &lt;code&gt;len(x)&lt;/code&gt; 小，&lt;em&gt;x&lt;/em&gt;的排列总数也可以比大多数随机数生成器的周期迅速增大。这意味着长序列的大多数排列永远不会生成。例如，长度为2080的序列是最大的序列，可以在Mersenne Twister随机数生成器的周期内进行拟合。</target>
        </trans-unit>
        <trans-unit id="c135e18157f388a32703b9e0b8ce0fcf98a88ef9" translate="yes" xml:space="preserve">
          <source>Note that even in &lt;a href=&quot;#re.MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode, &lt;a href=&quot;#re.match&quot;&gt;&lt;code&gt;re.match()&lt;/code&gt;&lt;/a&gt; will only match at the beginning of the string and not at the beginning of each line.</source>
          <target state="translated">请注意，即使在&lt;a href=&quot;#re.MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;模式下，&lt;a href=&quot;#re.match&quot;&gt; &lt;code&gt;re.match()&lt;/code&gt; &lt;/a&gt;也只会在字符串的开头而不是每行的开头进行匹配。</target>
        </trans-unit>
        <trans-unit id="c248f2777a5cff0833e5e1f56ce05642e54cb886" translate="yes" xml:space="preserve">
          <source>Note that even though the time is always returned as a floating point number, not all systems provide time with a better precision than 1 second. While this function normally returns non-decreasing values, it can return a lower value than a previous call if the system clock has been set back between the two calls.</source>
          <target state="translated">请注意,尽管时间总是以浮点数形式返回,但并不是所有系统都提供了精度高于1秒的时间。虽然这个函数通常返回非递减值,但如果系统时钟在两次调用之间被调回,它可能返回一个比前一次调用更低的值。</target>
        </trans-unit>
        <trans-unit id="8979e2f2b1b29e83666a8cd201294ac167294831" translate="yes" xml:space="preserve">
          <source>Note that existing parameter values of headers may be accessed through the &lt;code&gt;params&lt;/code&gt; attribute of the header value (for example, &lt;code&gt;msg['Content-Type'].params['charset']&lt;/code&gt;).</source>
          <target state="translated">注意，可以通过标头值的 &lt;code&gt;params&lt;/code&gt; 属性访问标头的现有参数值（例如， &lt;code&gt;msg['Content-Type'].params['charset']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5786a82a8493b79c96451e2f0e8ff1a491a88f3b" translate="yes" xml:space="preserve">
          <source>Note that expected output now shows that the snippet runs 1 second faster than before:</source>
          <target state="translated">请注意,现在的预期输出显示,该代码段的运行速度比之前快了1秒。</target>
        </trans-unit>
        <trans-unit id="356743d5b08962bffdeebdb7d374e8d296f8aa3d" translate="yes" xml:space="preserve">
          <source>Note that filters attached to handlers are consulted before an event is emitted by the handler, whereas filters attached to loggers are consulted whenever an event is logged (using &lt;a href=&quot;#logging.debug&quot;&gt;&lt;code&gt;debug()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#logging.info&quot;&gt;&lt;code&gt;info()&lt;/code&gt;&lt;/a&gt;, etc.), before sending an event to handlers. This means that events which have been generated by descendant loggers will not be filtered by a logger&amp;rsquo;s filter setting, unless the filter has also been applied to those descendant loggers.</source>
          <target state="translated">请注意，在处理程序发出事件之前，将先查询附加到处理程序的过滤器，而在将事件发送到处理程序之前，无论何时记录事件（使用&lt;a href=&quot;#logging.debug&quot;&gt; &lt;code&gt;debug()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#logging.info&quot;&gt; &lt;code&gt;info()&lt;/code&gt; &lt;/a&gt;等），都将查询附加到记录器的过滤器。这意味着由后代记录器生成的事件将不会被记录器的过滤器设置过滤，除非该过滤器也已应用于这些后代记录器。</target>
        </trans-unit>
        <trans-unit id="61a0f268ab225e4ac517bd285248bf03bd4c499e" translate="yes" xml:space="preserve">
          <source>Note that for backward compatibility, the &lt;code&gt;re.U&lt;/code&gt; flag still exists (as well as its synonym &lt;code&gt;re.UNICODE&lt;/code&gt; and its embedded counterpart &lt;code&gt;(?u)&lt;/code&gt;), but these are redundant in Python 3 since matches are Unicode by default for strings (and Unicode matching isn&amp;rsquo;t allowed for bytes).</source>
          <target state="translated">请注意，为了向后兼容， &lt;code&gt;re.U&lt;/code&gt; 标志仍然存在（以及其同义词 &lt;code&gt;re.UNICODE&lt;/code&gt; 和嵌入的对等物 &lt;code&gt;(?u)&lt;/code&gt; ），但是它们在Python 3中是多余的，因为默认情况下字符串（和Unicode）的匹配是Unicode不允许字节匹配）。</target>
        </trans-unit>
        <trans-unit id="465c176dc885bd97b79a8361a2bbae22c1b4e34c" translate="yes" xml:space="preserve">
          <source>Note that for processes created by the &lt;a href=&quot;#asyncio.create_subprocess_shell&quot;&gt;&lt;code&gt;create_subprocess_shell()&lt;/code&gt;&lt;/a&gt; function, this attribute is the PID of the spawned shell.</source>
          <target state="translated">请注意，对于由&lt;a href=&quot;#asyncio.create_subprocess_shell&quot;&gt; &lt;code&gt;create_subprocess_shell()&lt;/code&gt; &lt;/a&gt;函数创建的进程，此属性是生成的shell的PID。</target>
        </trans-unit>
        <trans-unit id="3882e94a24c32a31d35cc2a1b007f11e37659571" translate="yes" xml:space="preserve">
          <source>Note that for some non-Unix systems, &lt;code&gt;sys.prefix&lt;/code&gt; and &lt;code&gt;sys.exec_prefix&lt;/code&gt; are empty, and the path manipulations are skipped; however the import of &lt;code&gt;sitecustomize&lt;/code&gt; and &lt;code&gt;usercustomize&lt;/code&gt; is still attempted.</source>
          <target state="translated">请注意，对于某些非Unix系统， &lt;code&gt;sys.prefix&lt;/code&gt; 和 &lt;code&gt;sys.exec_prefix&lt;/code&gt; 为空，并且跳过了路径操作。但是，仍尝试导入 &lt;code&gt;sitecustomize&lt;/code&gt; 和 &lt;code&gt;usercustomize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8fd33ef4d4d5e2689d3ced573aea2f56a54160ad" translate="yes" xml:space="preserve">
          <source>Note that for very large time intervals (greater than 270 years on most platforms) this method will lose microsecond accuracy.</source>
          <target state="translated">请注意,对于非常大的时间间隔(在大多数平台上大于270年),这种方法将失去微秒的准确性。</target>
        </trans-unit>
        <trans-unit id="840170e277d815baed7c66a50d417357022d75d1" translate="yes" xml:space="preserve">
          <source>Note that functions (built-in and user-defined) are pickled by &amp;ldquo;fully qualified&amp;rdquo; name reference, not by value. &lt;a href=&quot;#id8&quot; id=&quot;id3&quot;&gt;2&lt;/a&gt; This means that only the function name is pickled, along with the name of the module the function is defined in. Neither the function&amp;rsquo;s code, nor any of its function attributes are pickled. Thus the defining module must be importable in the unpickling environment, and the module must contain the named object, otherwise an exception will be raised. &lt;a href=&quot;#id9&quot; id=&quot;id4&quot;&gt;3&lt;/a&gt;</source>
          <target state="translated">请注意，函数（内置的和用户定义的）是通过&amp;ldquo;完全限定&amp;rdquo;的名称引用而不是值进行酸洗的。&lt;a href=&quot;#id8&quot; id=&quot;id3&quot;&gt;2&lt;/a&gt;这意味着仅对功能名称以及定义该功能的模块的名称进行酸洗。不对函数的代码或其任何函数属性进行酸洗。因此，定义模块必须在解酸环境中是可导入的，并且该模块必须包含命名对象，否则将引发异常。&lt;a href=&quot;#id9&quot; id=&quot;id4&quot;&gt;3&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb1ee9a91608b1283fe0ceec10e559f6fc6844a7" translate="yes" xml:space="preserve">
          <source>Note that if a slash(/) appears in the parameter list of a function, when invoking &lt;a href=&quot;#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt;, it means that the parameters prior to the slash are positional-only. For more info, see &lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-positional-only-arguments&quot;&gt;the FAQ entry on positional-only parameters&lt;/a&gt;.</source>
          <target state="translated">请注意，如果在函数的参数列表中出现斜杠（/），则在调用&lt;a href=&quot;#help&quot;&gt; &lt;code&gt;help()&lt;/code&gt; 时&lt;/a&gt;，这意味着斜杠之前的参数仅是位置参数。有关更多信息，请参阅&lt;a href=&quot;https://docs.python.org/3.8/faq/programming.html#faq-positional-only-arguments&quot;&gt;仅位置参数上的FAQ条目&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ec568535fd150acb01c00b677671e9fb6fee5f9" translate="yes" xml:space="preserve">
          <source>Note that if a slash(/) appears in the parameter list of a function, when invoking &lt;a href=&quot;#help&quot;&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/a&gt;, it means that the parameters prior to the slash are positional-only. For more info, see &lt;a href=&quot;https://docs.python.org/3.9/faq/programming.html#faq-positional-only-arguments&quot;&gt;the FAQ entry on positional-only parameters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba29bc642962688bd93f7d7440bdc3d09b1a14c" translate="yes" xml:space="preserve">
          <source>Note that if anything goes wrong while importing the callable named by &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;exceptions#RuntimeWarning&quot;&gt;&lt;code&gt;RuntimeWarning&lt;/code&gt;&lt;/a&gt; is reported and the breakpoint is ignored.</source>
          <target state="translated">请注意，如果在导入由&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-3&quot;&gt; &lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt; &lt;/a&gt;命名的可调用对象时发生任何错误，&lt;a href=&quot;exceptions#RuntimeWarning&quot;&gt; &lt;code&gt;RuntimeWarning&lt;/code&gt; &lt;/a&gt;报告RuntimeWarning并忽略断点。</target>
        </trans-unit>
        <trans-unit id="97cb6a869aebbfa67f78bc839290dc18ba9514f9" translate="yes" xml:space="preserve">
          <source>Note that if anything goes wrong while importing the callable named by &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONBREAKPOINT&quot; id=&quot;index-4&quot;&gt;&lt;code&gt;PYTHONBREAKPOINT&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;exceptions#RuntimeWarning&quot;&gt;&lt;code&gt;RuntimeWarning&lt;/code&gt;&lt;/a&gt; is reported and the breakpoint is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37b5b457c0e579a56a9008b596dcf0daed0c531" translate="yes" xml:space="preserve">
          <source>Note that if the message object has no preamble, the &lt;em&gt;preamble&lt;/em&gt; attribute will be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">请注意，如果消息对象没有前导，则&lt;em&gt;前导&lt;/em&gt;属性将为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c57b574c5b42a4687029f512f3b789f966aa395d" translate="yes" xml:space="preserve">
          <source>Note that if the named field appears more than once in the message&amp;rsquo;s headers, exactly which of those field values will be returned is undefined. Use the &lt;a href=&quot;#email.message.EmailMessage.get_all&quot;&gt;&lt;code&gt;get_all()&lt;/code&gt;&lt;/a&gt; method to get the values of all the extant headers named &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="translated">请注意，如果命名字段在消息的标题中多次出现，则将不确定返回哪个字段值。使用&lt;a href=&quot;#email.message.EmailMessage.get_all&quot;&gt; &lt;code&gt;get_all()&lt;/code&gt; &lt;/a&gt;方法获取名为&lt;em&gt;name&lt;/em&gt;的所有现有标头的值。</target>
        </trans-unit>
        <trans-unit id="15161d213ea81ba024de0a076644d1272635e94d" translate="yes" xml:space="preserve">
          <source>Note that if the named field appears more than once in the message&amp;rsquo;s headers, exactly which of those field values will be returned is undefined. Use the &lt;a href=&quot;#email.message.Message.get_all&quot;&gt;&lt;code&gt;get_all()&lt;/code&gt;&lt;/a&gt; method to get the values of all the extant named headers.</source>
          <target state="translated">请注意，如果命名字段在消息的标题中多次出现，则将不确定返回哪个字段值。使用&lt;a href=&quot;#email.message.Message.get_all&quot;&gt; &lt;code&gt;get_all()&lt;/code&gt; &lt;/a&gt;方法可获取所有现存命名报头的值。</target>
        </trans-unit>
        <trans-unit id="87ae25219d92f70d8ce3d6068ac05c1ccc107875" translate="yes" xml:space="preserve">
          <source>Note that if you have defined any custom logging level higher than &lt;code&gt;CRITICAL&lt;/code&gt; (this is not recommended), you won&amp;rsquo;t be able to rely on the default value for the &lt;em&gt;level&lt;/em&gt; parameter, but will have to explicitly supply a suitable value.</source>
          <target state="translated">请注意，如果您定义了高于 &lt;code&gt;CRITICAL&lt;/code&gt; 的任何自定义日志记录级别（不建议这样做），则您将不能依赖&lt;em&gt;level&lt;/em&gt;参数的默认值，而必须显式提供合适的值。</target>
        </trans-unit>
        <trans-unit id="2465633c732bfdca544359da14ee59c714468eb0" translate="yes" xml:space="preserve">
          <source>Note that if you set the &lt;em&gt;shell&lt;/em&gt; argument to &lt;code&gt;True&lt;/code&gt;, this is the process ID of the spawned shell.</source>
          <target state="translated">请注意，如果将&lt;em&gt;shell&lt;/em&gt;参数设置为 &lt;code&gt;True&lt;/code&gt; ，则这是生成的shell的进程ID。</target>
        </trans-unit>
        <trans-unit id="95edd926d0c8f963e4c8a0f19295c25236bc7bfd" translate="yes" xml:space="preserve">
          <source>Note that if you specify an interpreter and then distribute your application archive, you need to ensure that the interpreter used is portable. The Python launcher for Windows supports most common forms of POSIX &lt;code&gt;#!&lt;/code&gt; line, but there are other issues to consider:</source>
          <target state="translated">请注意，如果您指定一个解释器然后分发您的应用程序档案，则需要确保使用的解释器是可移植的。Windows的Python启动器支持POSIX &lt;code&gt;#!&lt;/code&gt; 的最常见形式。行，但还有其他要考虑的问题：</target>
        </trans-unit>
        <trans-unit id="aababa3d966c7b1183bc1e3bb713ff94a4b803c7" translate="yes" xml:space="preserve">
          <source>Note that if you want to send data to the process&amp;rsquo;s stdin, you need to create the Popen object with &lt;code&gt;stdin=PIPE&lt;/code&gt;. Similarly, to get anything other than &lt;code&gt;None&lt;/code&gt; in the result tuple, you need to give &lt;code&gt;stdout=PIPE&lt;/code&gt; and/or &lt;code&gt;stderr=PIPE&lt;/code&gt; too.</source>
          <target state="translated">请注意，如果要将数据发送到进程的stdin，则需要使用 &lt;code&gt;stdin=PIPE&lt;/code&gt; 创建Popen对象。同样，要在结果元组中获得除 &lt;code&gt;None&lt;/code&gt; 以外的任何内容，您还需要提供 &lt;code&gt;stdout=PIPE&lt;/code&gt; 和/或 &lt;code&gt;stderr=PIPE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d30eb9f3b524dd91c924b480ac665ceea172bbd3" translate="yes" xml:space="preserve">
          <source>Note that if your server is not listening on UDP port 514, &lt;a href=&quot;#logging.handlers.SysLogHandler&quot;&gt;&lt;code&gt;SysLogHandler&lt;/code&gt;&lt;/a&gt; may appear not to work. In that case, check what address you should be using for a domain socket - it&amp;rsquo;s system dependent. For example, on Linux it&amp;rsquo;s usually &amp;lsquo;/dev/log&amp;rsquo; but on OS/X it&amp;rsquo;s &amp;lsquo;/var/run/syslog&amp;rsquo;. You&amp;rsquo;ll need to check your platform and use the appropriate address (you may need to do this check at runtime if your application needs to run on several platforms). On Windows, you pretty much have to use the UDP option.</source>
          <target state="translated">请注意，如果您的服务器未在UDP端口514上侦听，则&lt;a href=&quot;#logging.handlers.SysLogHandler&quot;&gt; &lt;code&gt;SysLogHandler&lt;/code&gt; &lt;/a&gt;可能似乎无法正常工作。在这种情况下，请检查您应该为域套接字使用的地址-与系统有关。例如，在Linux上通常是&amp;ldquo; / dev / log&amp;rdquo;，在OS / X上通常是&amp;ldquo; / var / run / syslog&amp;rdquo;。您需要检查平台并使用适当的地址（如果您的应用程序需要在多个平台上运行，则可能需要在运行时进行此检查）。在Windows上，您几乎必须使用UDP选项。</target>
        </trans-unit>
        <trans-unit id="7e6d6ccf640c4a7fd68532b2415ba6bb4f3714d8" translate="yes" xml:space="preserve">
          <source>Note that in all cases, any envelope header present in the message is not included in the mapping interface.</source>
          <target state="translated">请注意,在所有情况下,消息中存在的任何信封头都不包括在映射接口中。</target>
        </trans-unit>
        <trans-unit id="ba327349434f8a3d52b3e4e613f26c146b8940c2" translate="yes" xml:space="preserve">
          <source>Note that in order to test something, we use one of the &lt;code&gt;assert*()&lt;/code&gt; methods provided by the &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; base class. If the test fails, an exception will be raised with an explanatory message, and &lt;a href=&quot;#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; will identify the test case as a &lt;em&gt;failure&lt;/em&gt;. Any other exceptions will be treated as &lt;em&gt;errors&lt;/em&gt;.</source>
          <target state="translated">请注意，为了测试某些内容，我们使用&lt;a href=&quot;#unittest.TestCase&quot;&gt; &lt;code&gt;TestCase&lt;/code&gt; &lt;/a&gt;基类提供的 &lt;code&gt;assert*()&lt;/code&gt; 方法之一。如果测试失败，则会引发异常并带有一条解释性消息，而&lt;a href=&quot;#module-unittest&quot;&gt; &lt;code&gt;unittest&lt;/code&gt; &lt;/a&gt;会将测试用例标识为&lt;em&gt;失败&lt;/em&gt;。其他任何异常都将被视为&lt;em&gt;错误&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e2963c39aeb1fbe44d9106170763ccfab16bbab6" translate="yes" xml:space="preserve">
          <source>Note that in the first example the return value variable &lt;em&gt;rv&lt;/em&gt; will hold an integer value; in the second example it will hold a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object. The structure lay-out for the &lt;em&gt;lockdata&lt;/em&gt; variable is system dependent &amp;mdash; therefore using the &lt;a href=&quot;#fcntl.flock&quot;&gt;&lt;code&gt;flock()&lt;/code&gt;&lt;/a&gt; call may be better.</source>
          <target state="translated">请注意，在第一个示例中，返回值变量&lt;em&gt;rv&lt;/em&gt;将保存一个整数值；在第二个示例中，它将保存一个&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象。&lt;em&gt;lockdata&lt;/em&gt;变量的结构布局取决于系统，因此使用&lt;a href=&quot;#fcntl.flock&quot;&gt; &lt;code&gt;flock()&lt;/code&gt; &lt;/a&gt;调用可能会更好。</target>
        </trans-unit>
        <trans-unit id="e76d82ec0cfb558c63a1e08054c8f07fa0699635" translate="yes" xml:space="preserve">
          <source>Note that inclusion in the &lt;em&gt;choices&lt;/em&gt; container is checked after any &lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; conversions have been performed, so the type of the objects in the &lt;em&gt;choices&lt;/em&gt; container should match the &lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt; specified:</source>
          <target state="translated">请注意，在执行任何&lt;a href=&quot;#type&quot;&gt;类型&lt;/a&gt;转换之后，将检查是否包含在&lt;em&gt;选项&lt;/em&gt;容器中，因此，&lt;em&gt;选项&lt;/em&gt;容器中的对象&lt;a href=&quot;#type&quot;&gt;类型&lt;/a&gt;应与指定的类型匹配：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a424e123046b9f2ba0f16ae4ec8e158536158450" translate="yes" xml:space="preserve">
          <source>Note that installing a signal handler with &lt;a href=&quot;#module-signal&quot;&gt;&lt;code&gt;signal()&lt;/code&gt;&lt;/a&gt; will reset the restart behaviour to interruptible by implicitly calling &lt;code&gt;siginterrupt()&lt;/code&gt; with a true &lt;em&gt;flag&lt;/em&gt; value for the given signal.</source>
          <target state="translated">请注意，使用&lt;a href=&quot;#module-signal&quot;&gt; &lt;code&gt;signal()&lt;/code&gt; &lt;/a&gt;安装信号处理程序将通过为给定信号隐式调用带有true &lt;em&gt;标志&lt;/em&gt;值的 &lt;code&gt;siginterrupt()&lt;/code&gt; 将重启行为重置为可中断的。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd995b47911c934ecbce7db6be1c427a4ba9cc9f" translate="yes" xml:space="preserve">
          <source>Note that is &lt;strong&gt;not correct&lt;/strong&gt; to rely on the garbage colletor to destroy the pool as CPython does not assure that the finalizer of the pool will be called (see &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__del__&quot;&gt;&lt;code&gt;object.__del__()&lt;/code&gt;&lt;/a&gt; for more information).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f60fa0720b86d1dcdc718ca772ee8cca933f15" translate="yes" xml:space="preserve">
          <source>Note that it does not allow read/write WAV files.</source>
          <target state="translated">请注意,它不允许读/写WAV文件。</target>
        </trans-unit>
        <trans-unit id="b37732e38cdf4751eb314377a55436fbd87b874f" translate="yes" xml:space="preserve">
          <source>Note that it is actually the comma which makes a tuple, not the parentheses. The parentheses are optional, except in the empty tuple case, or when they are needed to avoid syntactic ambiguity. For example, &lt;code&gt;f(a, b, c)&lt;/code&gt; is a function call with three arguments, while &lt;code&gt;f((a, b, c))&lt;/code&gt; is a function call with a 3-tuple as the sole argument.</source>
          <target state="translated">请注意，实际上是组成元组的逗号，而不是括号。括号是可选的，除了在空元组的情况下，或者在需要它们以避免语法歧义的情况下。例如， &lt;code&gt;f(a, b, c)&lt;/code&gt; 是带有三个参数的函数调用，而 &lt;code&gt;f((a, b, c))&lt;/code&gt; 是带有3个元组作为唯一参数的函数调用。</target>
        </trans-unit>
        <trans-unit id="c1142fa9322d5765d4454b6dfb466ee0b2fdb642" translate="yes" xml:space="preserve">
          <source>Note that it is invalid to set any parameters after calling &lt;code&gt;writeframes()&lt;/code&gt; or &lt;code&gt;writeframesraw()&lt;/code&gt;, and any attempt to do so will raise &lt;a href=&quot;#wave.Error&quot;&gt;&lt;code&gt;wave.Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，在调用 &lt;code&gt;writeframes()&lt;/code&gt; 或 &lt;code&gt;writeframesraw()&lt;/code&gt; 之后设置任何参数都是无效的，任何尝试都会引发&lt;a href=&quot;#wave.Error&quot;&gt; &lt;code&gt;wave.Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8bccd4b29f1a54b5e303c1a916237118b7ad7ec0" translate="yes" xml:space="preserve">
          <source>Note that it may cause high memory usage for very long iterables. Consider using &lt;a href=&quot;#multiprocessing.pool.Pool.imap&quot;&gt;&lt;code&gt;imap()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#multiprocessing.pool.Pool.imap_unordered&quot;&gt;&lt;code&gt;imap_unordered()&lt;/code&gt;&lt;/a&gt; with explicit &lt;em&gt;chunksize&lt;/em&gt; option for better efficiency.</source>
          <target state="translated">请注意，这可能会导致很长的迭代次数占用大量内存。考虑将&lt;a href=&quot;#multiprocessing.pool.Pool.imap&quot;&gt; &lt;code&gt;imap()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#multiprocessing.pool.Pool.imap_unordered&quot;&gt; &lt;code&gt;imap_unordered()&lt;/code&gt; &lt;/a&gt;与显式&lt;em&gt;chunksize&lt;/em&gt;选项一起使用，以提高效率。</target>
        </trans-unit>
        <trans-unit id="bc1c75d4508d9bbf24ec9e11eb857898269d1eae" translate="yes" xml:space="preserve">
          <source>Note that it&amp;rsquo;s already possible to iterate on file objects using &lt;code&gt;for
line in file: ...&lt;/code&gt; without calling &lt;code&gt;file.readlines()&lt;/code&gt;.</source>
          <target state="translated">请注意，使用 &lt;code&gt;for line in file: ...&lt;/code&gt; 可以迭代文件对象，而无需调用 &lt;code&gt;file.readlines()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05a2b045555cd68924e93f59f7b760be26ddd68b" translate="yes" xml:space="preserve">
          <source>Note that many of these have little practical significance in modern usage. The mnemonics derive from teleprinter conventions that predate digital computers.</source>
          <target state="translated">请注意,其中许多在现代使用中没有什么实际意义。这些记忆符号来自于数字计算机之前的电传打印机惯例。</target>
        </trans-unit>
        <trans-unit id="9ed4f4956d2d64f5ed11cfc83c3e2520067e2797" translate="yes" xml:space="preserve">
          <source>Note that methods of asyncio queues don&amp;rsquo;t have a &lt;em&gt;timeout&lt;/em&gt; parameter; use &lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt;&lt;code&gt;asyncio.wait_for()&lt;/code&gt;&lt;/a&gt; function to do queue operations with a timeout.</source>
          <target state="translated">注意，异步队列的方法没有&lt;em&gt;超时&lt;/em&gt;参数。使用&lt;a href=&quot;asyncio-task#asyncio.wait_for&quot;&gt; &lt;code&gt;asyncio.wait_for()&lt;/code&gt; &lt;/a&gt;函数执行带有超时的队列操作。</target>
        </trans-unit>
        <trans-unit id="9d7173aaff46eece39c6ad050dacaca07a346492" translate="yes" xml:space="preserve">
          <source>Note that most parent parsers will specify &lt;code&gt;add_help=False&lt;/code&gt;. Otherwise, the &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt; will see two &lt;code&gt;-h/--help&lt;/code&gt; options (one in the parent and one in the child) and raise an error.</source>
          <target state="translated">请注意，大多数父解析器将指定 &lt;code&gt;add_help=False&lt;/code&gt; 。否则，&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;将看到两个 &lt;code&gt;-h/--help&lt;/code&gt; 选项（一个在父项中，一个在子项中）并引发错误。</target>
        </trans-unit>
        <trans-unit id="ec5c2fc42c63d4c02f722210f01d284542c94cdd" translate="yes" xml:space="preserve">
          <source>Note that multiple connection objects may be polled at once by using &lt;a href=&quot;#multiprocessing.connection.wait&quot;&gt;&lt;code&gt;multiprocessing.connection.wait()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，可以使用&lt;a href=&quot;#multiprocessing.connection.wait&quot;&gt; &lt;code&gt;multiprocessing.connection.wait()&lt;/code&gt; &lt;/a&gt;一次轮询多个连接对象。</target>
        </trans-unit>
        <trans-unit id="5aad7f2fe356ddb37a2958193ffcc95757955613" translate="yes" xml:space="preserve">
          <source>Note that no external programs are called from this function, giving it portability and efficiency.</source>
          <target state="translated">需要注意的是,这个函数不会调用外部程序,使其具有可移植性和效率。</target>
        </trans-unit>
        <trans-unit id="73e56395f79c913850173ac7c4bbd0a531342117" translate="yes" xml:space="preserve">
          <source>Note that no stream repositioning should take place. This method is primarily intended to be able to recover from decoding errors.</source>
          <target state="translated">请注意,不应进行流的重新定位。这种方法主要是为了能够从解码错误中恢复。</target>
        </trans-unit>
        <trans-unit id="9b04c87d02c729d2b34d36ed6364a0bf9a50ea51" translate="yes" xml:space="preserve">
          <source>Note that normalization of negative values may be surprising at first. For example:</source>
          <target state="translated">请注意,负值的归一化最初可能会令人惊讶。例如:</target>
        </trans-unit>
        <trans-unit id="08827e39a2581735ab237416a511e4b4882c7aff" translate="yes" xml:space="preserve">
          <source>Note that objects related to one context may not be compatible with processes for a different context. In particular, locks created using the &lt;em&gt;fork&lt;/em&gt; context cannot be passed to processes started using the &lt;em&gt;spawn&lt;/em&gt; or &lt;em&gt;forkserver&lt;/em&gt; start methods.</source>
          <target state="translated">注意，与一个上下文有关的对象可能与另一上下文的过程不兼容。特别是，使用&lt;em&gt;fork&lt;/em&gt;上下文创建的锁不能传递给使用&lt;em&gt;spawn&lt;/em&gt;或&lt;em&gt;forkserver&lt;/em&gt; start方法启动的进程。</target>
        </trans-unit>
        <trans-unit id="eda4961590997a45a1e79372239074265d25ed88" translate="yes" xml:space="preserve">
          <source>Note that objects which have already been dereferenced, but which live in cycles and have not yet been collected by the garbage collector can be listed among the resulting referrers. To get only currently live objects, call &lt;a href=&quot;#gc.collect&quot;&gt;&lt;code&gt;collect()&lt;/code&gt;&lt;/a&gt; before calling &lt;a href=&quot;#gc.get_referrers&quot;&gt;&lt;code&gt;get_referrers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，可以在结果引用程序中列出已经被取消引用但处于循环中并且尚未被垃圾收集器收集的对象。要获得目前唯一存活的对象，调用&lt;a href=&quot;#gc.collect&quot;&gt; &lt;code&gt;collect()&lt;/code&gt; &lt;/a&gt;调用之前&lt;a href=&quot;#gc.get_referrers&quot;&gt; &lt;code&gt;get_referrers()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d01f60caa4137debd7332962680da8372d67729" translate="yes" xml:space="preserve">
          <source>Note that on Windows child processes will only inherit the level of the parent process&amp;rsquo;s logger &amp;ndash; any other customization of the logger will not be inherited.</source>
          <target state="translated">请注意，在Windows上，子进程将仅继承父进程的记录器级别，而不会继承记录器的任何其他自定义设置。</target>
        </trans-unit>
        <trans-unit id="71665cc8043f3efa68e4485fe250bc5b29c8a385" translate="yes" xml:space="preserve">
          <source>Note that on some platforms, trying to open a filename using this function, may work and start the operating system&amp;rsquo;s associated program. However, this is neither supported nor portable.</source>
          <target state="translated">请注意，在某些平台上，尝试使用此功能打开文件名可能有效并启动操作系统的关联程序。但是，既不支持也不是可移植的。</target>
        </trans-unit>
        <trans-unit id="2c5a9e4b55caffc98aca4b11598a9c875e9057ec" translate="yes" xml:space="preserve">
          <source>Note that one can also create a shared queue by using a manager object &amp;ndash; see &lt;a href=&quot;#multiprocessing-managers&quot;&gt;Managers&lt;/a&gt;.</source>
          <target state="translated">请注意，也可以使用管理器对象创建共享队列-请参阅&lt;a href=&quot;#multiprocessing-managers&quot;&gt;Managers&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11489b229a9332af75273ce34ce4bbce75cf8ef6" translate="yes" xml:space="preserve">
          <source>Note that one can also create synchronization primitives by using a manager object &amp;ndash; see &lt;a href=&quot;#multiprocessing-managers&quot;&gt;Managers&lt;/a&gt;.</source>
          <target state="translated">请注意，还可以使用管理器对象来创建同步原语&amp;ndash;请参阅&lt;a href=&quot;#multiprocessing-managers&quot;&gt;Managers&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3d73f2e5696ae1abc027da2033b4b034e5b6843a" translate="yes" xml:space="preserve">
          <source>Note that operations such as &lt;a href=&quot;#audioop.mul&quot;&gt;&lt;code&gt;mul()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#audioop.max&quot;&gt;&lt;code&gt;max()&lt;/code&gt;&lt;/a&gt; make no distinction between mono and stereo fragments, i.e. all samples are treated equal. If this is a problem the stereo fragment should be split into two mono fragments first and recombined later. Here is an example of how to do that:</source>
          <target state="translated">请注意，诸如&lt;a href=&quot;#audioop.mul&quot;&gt; &lt;code&gt;mul()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#audioop.max&quot;&gt; &lt;code&gt;max()&lt;/code&gt; 之类的操作&lt;/a&gt;在单声道和立体声片段之间没有区别，即所有样本均被等同对待。如果存在问题，则应先将立体声片段分为两个单声道片段，然后再进行重组。这是如何执行此操作的示例：</target>
        </trans-unit>
        <trans-unit id="9b16370266d750c139819b213ca33ad0c71c90be" translate="yes" xml:space="preserve">
          <source>Note that other exceptions may also be raised during unpickling, including (but not necessarily limited to) AttributeError, EOFError, ImportError, and IndexError.</source>
          <target state="translated">请注意,在取消pickling过程中还可能引发其他异常,包括(但不一定限于)AttributeError、EOFError、ImportError和IndexError。</target>
        </trans-unit>
        <trans-unit id="c14ddea7d8a40390395369e4d9bf692d2a322f31" translate="yes" xml:space="preserve">
          <source>Note that parser-level defaults always override argument-level defaults:</source>
          <target state="translated">请注意,解析器级别的默认值总是覆盖参数级别的默认值。</target>
        </trans-unit>
        <trans-unit id="7eb9240d51fab27d432be3b59cc8d057375a5d25" translate="yes" xml:space="preserve">
          <source>Note that pickles aren&amp;rsquo;t completely secure. If you are concerned about security, you may want to override this method to implement a more secure mechanism. For example, you can sign pickles using HMAC and then verify them on the receiving end, or alternatively you can disable unpickling of global objects on the receiving end.</source>
          <target state="translated">请注意，泡菜并不完全安全。如果您担心安全性，则可能需要重写此方法以实现更安全的机制。例如，您可以使用HMAC对泡菜进行签名，然后在接收端对其进行验证，或者可以在接收端禁用对全局对象的取消酸洗。</target>
        </trans-unit>
        <trans-unit id="bcb90d29aeda61d23a983d5f5ed8686703c50549" translate="yes" xml:space="preserve">
          <source>Note that printf prints to the real standard output channel, &lt;em&gt;not&lt;/em&gt; to &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt;, so these examples will only work at the console prompt, not from within &lt;em&gt;IDLE&lt;/em&gt; or &lt;em&gt;PythonWin&lt;/em&gt;:</source>
          <target state="translated">注意的printf打印到实际的标准输出通道，&lt;em&gt;不&lt;/em&gt;向&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; 的&lt;/a&gt;，所以这些例子只是在控制台的工作提示，而不是从内&lt;em&gt;IDLE&lt;/em&gt;或&lt;em&gt;PythonWin的&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="dbe8dc287e2d3ac27238f225b2b077ec51310c3b" translate="yes" xml:space="preserve">
          <source>Note that profiling will only work if the called command/function actually returns. If the interpreter is terminated (e.g. via a &lt;a href=&quot;sys#sys.exit&quot;&gt;&lt;code&gt;sys.exit()&lt;/code&gt;&lt;/a&gt; call during the called command/function execution) no profiling results will be printed.</source>
          <target state="translated">请注意，只有在被调用的命令/函数实际返回时，性能分析才起作用。如果解释器终止（例如，在被调用的命令/函数执行期间通过&lt;a href=&quot;sys#sys.exit&quot;&gt; &lt;code&gt;sys.exit()&lt;/code&gt; &lt;/a&gt;调用），则不会打印任何分析结果。</target>
        </trans-unit>
        <trans-unit id="de353d4750a5cdba4018be858fb797f69441158f" translate="yes" xml:space="preserve">
          <source>Note that returning instances of private classes is not recommended. It is usually preferable to make such classes public.</source>
          <target state="translated">请注意,不推荐返回私有类的实例。通常情况下,最好是将这些类公开。</target>
        </trans-unit>
        <trans-unit id="bae0d8a27b12e898d4d9a61e003f0408e393752d" translate="yes" xml:space="preserve">
          <source>Note that setting and getting an element is potentially non-atomic &amp;ndash; use &lt;a href=&quot;#multiprocessing.sharedctypes.Array&quot;&gt;&lt;code&gt;Array()&lt;/code&gt;&lt;/a&gt; instead to make sure that access is automatically synchronized using a lock.</source>
          <target state="translated">请注意，设置和获取元素可能是非原子的&amp;ndash; 而是使用&lt;a href=&quot;#multiprocessing.sharedctypes.Array&quot;&gt; &lt;code&gt;Array()&lt;/code&gt; &lt;/a&gt;来确保使用锁自动同步访问。</target>
        </trans-unit>
        <trans-unit id="fba826635b3c9adedafaa20e7c85f3678b0d3888" translate="yes" xml:space="preserve">
          <source>Note that setting and getting the value is potentially non-atomic &amp;ndash; use &lt;a href=&quot;#multiprocessing.sharedctypes.Value&quot;&gt;&lt;code&gt;Value()&lt;/code&gt;&lt;/a&gt; instead to make sure that access is automatically synchronized using a lock.</source>
          <target state="translated">请注意，设置和获取值可能是非原子的&amp;ndash;请改用&lt;a href=&quot;#multiprocessing.sharedctypes.Value&quot;&gt; &lt;code&gt;Value()&lt;/code&gt; &lt;/a&gt;来确保使用锁自动使访问同步。</target>
        </trans-unit>
        <trans-unit id="a0a4d937d898d6dae87b372469dc8ecdc5efcd60" translate="yes" xml:space="preserve">
          <source>Note that shared fixtures do not play well with [potential] features like test parallelization and they break test isolation. They should be used with care.</source>
          <target state="translated">请注意,共享夹具不能很好地发挥[潜在的]功能,如测试并行化,它们会破坏测试隔离。应该谨慎使用它们。</target>
        </trans-unit>
        <trans-unit id="3a3a80c8445850d90d40639df2476d5a77bd29df" translate="yes" xml:space="preserve">
          <source>Note that simply calling a coroutine will not schedule it to be executed:</source>
          <target state="translated">请注意,简单地调用一个coroutine不会安排它被执行。</target>
        </trans-unit>
        <trans-unit id="68956186d48d42443b6758d13e6916e94a8cef68" translate="yes" xml:space="preserve">
          <source>Note that since all options are disabled by default, and directives apply only to the example they appear in, enabling options (via &lt;code&gt;+&lt;/code&gt; in a directive) is usually the only meaningful choice. However, option flags can also be passed to functions that run doctests, establishing different defaults. In such cases, disabling an option via &lt;code&gt;-&lt;/code&gt; in a directive can be useful.</source>
          <target state="translated">请注意，由于默认情况下所有选项都是禁用的，并且伪指令仅适用于它们出现的示例，因此启用选项（通过伪指令中的 &lt;code&gt;+&lt;/code&gt; ）通常是唯一有意义的选择。但是，选项标志也可以传递给运行doctests的函数，从而建立不同的默认值。在这种情况下，在指令中通过 &lt;code&gt;-&lt;/code&gt; 禁用选项可能会很有用。</target>
        </trans-unit>
        <trans-unit id="d486f123342853ccfe49cff51f3b937ee427e3c1" translate="yes" xml:space="preserve">
          <source>Note that some platforms including FreeBSD &amp;lt;= 6.3 and Cygwin have known issues when using &lt;code&gt;fork()&lt;/code&gt; from a thread.</source>
          <target state="translated">请注意，当从线程中使用 &lt;code&gt;fork()&lt;/code&gt; 时，包括FreeBSD &amp;lt;= 6.3和Cygwin在内的某些平台都存在已知问题。</target>
        </trans-unit>
        <trans-unit id="4eebda1ed9cbd631d501f51d602004fcc0df5dce" translate="yes" xml:space="preserve">
          <source>Note that some recent versions of the HTML specification do state what order the field values should be supplied in, but knowing whether a request was received from a conforming browser, or even from a browser at all, is tedious and error-prone.</source>
          <target state="translated">需要注意的是,一些最新版本的HTML规范确实规定了字段值的提供顺序,但要知道一个请求是否从符合要求的浏览器中收到,甚至根本不是从浏览器中收到,是很繁琐且容易出错的。</target>
        </trans-unit>
        <trans-unit id="e49765d68859e961a6e270321dec95f459b3abf4" translate="yes" xml:space="preserve">
          <source>Note that some systems might support ancillary data without providing this function. Also note that setting the buffer size using the results of this function may not precisely limit the amount of ancillary data that can be received, since additional data may be able to fit into the padding area.</source>
          <target state="translated">请注意,有些系统可能不提供此功能而支持辅助数据。此外,请注意,使用该函数的结果设置缓冲区大小可能无法精确限制可接收的辅助数据量,因为额外的数据可能会适合填充区域。</target>
        </trans-unit>
        <trans-unit id="aa8a9295a9dbce0828c8e847a08e997833350743" translate="yes" xml:space="preserve">
          <source>Note that tabs and spaces are both treated as whitespace, but they are not equal: the lines &lt;code&gt;&quot;&amp;nbsp; hello&quot;&lt;/code&gt; and &lt;code&gt;&quot;\thello&quot;&lt;/code&gt; are considered to have no common leading whitespace.</source>
          <target state="translated">请注意，制表符和空格都被视为空格，但它们并不相等： &lt;code&gt;&quot;&amp;nbsp; hello&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;\thello&quot;&lt;/code&gt; 被认为没有共同的前导空格。</target>
        </trans-unit>
        <trans-unit id="d9458e3f856c8568d276b2ccc17c59d5c9e0de3b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; instances that differ only by the value of the &lt;a href=&quot;#datetime.datetime.fold&quot;&gt;&lt;code&gt;fold&lt;/code&gt;&lt;/a&gt; attribute are considered equal in comparisons.</source>
          <target state="translated">请注意，在比较中仅将&lt;a href=&quot;#datetime.datetime.fold&quot;&gt; &lt;code&gt;fold&lt;/code&gt; &lt;/a&gt;属性值不同的&lt;a href=&quot;#datetime.datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;实例视为相等。</target>
        </trans-unit>
        <trans-unit id="6e00171800132e17b717121535b8def5b8c707ca" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;#multiprocessing.Process.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Process.join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Process.is_alive&quot;&gt;&lt;code&gt;is_alive()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#multiprocessing.Process.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#multiprocessing.Process.exitcode&quot;&gt;&lt;code&gt;exitcode&lt;/code&gt;&lt;/a&gt; methods should only be called by the process that created the process object.</source>
          <target state="translated">注意，&lt;a href=&quot;#multiprocessing.Process.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.Process.join&quot;&gt; &lt;code&gt;join()&lt;/code&gt; 方法&lt;/a&gt;，&lt;a href=&quot;#multiprocessing.Process.is_alive&quot;&gt; &lt;code&gt;is_alive()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#multiprocessing.Process.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#multiprocessing.Process.exitcode&quot;&gt; &lt;code&gt;exitcode&lt;/code&gt; &lt;/a&gt;方法应该只由创建进程对象的过程中被调用。</target>
        </trans-unit>
        <trans-unit id="76be1da5963fc00b55ce37e0edfebe2ece5a230b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;save()&lt;/code&gt; method won&amp;rsquo;t save session cookies anyway, unless you ask otherwise by passing a true &lt;em&gt;ignore_discard&lt;/em&gt; argument.</source>
          <target state="translated">请注意，除非您通过传递真正的&lt;em&gt;ignore_discard&lt;/em&gt;参数询问，否则 &lt;code&gt;save()&lt;/code&gt; 方法无论如何都不会保存会话cookie 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d128adeddb15c243a31ce0c09ab30c3100bf9aa" translate="yes" xml:space="preserve">
          <source>Note that the application code and tag bindings can set the selection however they wish, regardless of the value of this option.</source>
          <target state="translated">请注意,无论此选项的值是多少,应用程序代码和标记绑定都可以随意设置选择。</target>
        </trans-unit>
        <trans-unit id="5c688652d419206207ca4fcfbba08a17cc1b4d53" translate="yes" xml:space="preserve">
          <source>Note that the audited arguments may not match the names or positions required by the initializer.</source>
          <target state="translated">请注意,经审核的参数可能与初始化器所要求的名称或位置不一致。</target>
        </trans-unit>
        <trans-unit id="c830f23c52b697abf037e27edcdf6e7c6b75ed04" translate="yes" xml:space="preserve">
          <source>Note that the audited arguments may not match the names or positions required by the initializer. The audit event only occurs for direct instantiation of code objects, and is not raised for normal compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1deb77e6b0aedeb954896c3aa4ddbd679ed1b4d5" translate="yes" xml:space="preserve">
          <source>Note that the behaviour of &lt;a href=&quot;#asyncio.get_event_loop&quot;&gt;&lt;code&gt;get_event_loop()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asyncio.set_event_loop&quot;&gt;&lt;code&gt;set_event_loop()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#asyncio.new_event_loop&quot;&gt;&lt;code&gt;new_event_loop()&lt;/code&gt;&lt;/a&gt; functions can be altered by &lt;a href=&quot;asyncio-policy#asyncio-policies&quot;&gt;setting a custom event loop policy&lt;/a&gt;.</source>
          <target state="translated">请注意，可以通过&lt;a href=&quot;asyncio-policy#asyncio-policies&quot;&gt;设置自定义事件循环策略&lt;/a&gt;来更改&lt;a href=&quot;#asyncio.get_event_loop&quot;&gt; &lt;code&gt;get_event_loop()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#asyncio.set_event_loop&quot;&gt; &lt;code&gt;set_event_loop()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#asyncio.new_event_loop&quot;&gt; &lt;code&gt;new_event_loop()&lt;/code&gt; &lt;/a&gt;函数的行为。</target>
        </trans-unit>
        <trans-unit id="c66dde87415197d1cc25303a3cb3f7fea45cb7cf" translate="yes" xml:space="preserve">
          <source>Note that the callable will get its parameters as Python bytestrings, which will normally be encoded in UTF-8.</source>
          <target state="translated">请注意,可调用的参数将以 Python bytestrings 的形式获得,通常以 UTF-8 编码。</target>
        </trans-unit>
        <trans-unit id="e0ce1087d446a80a298883ee298079809ee68d3a" translate="yes" xml:space="preserve">
          <source>Note that the decorators are applied from the bottom upwards. This is the standard way that Python applies decorators. The order of the created mocks passed into your test function matches this order.</source>
          <target state="translated">请注意,装饰符是从底部向上应用的。这是 Python 应用装饰符的标准方式。传递到您的测试函数中的创建的 mocks 的顺序与这个顺序一致。</target>
        </trans-unit>
        <trans-unit id="e97d1070ca60575742bafcaf80da75c01c5d2f24" translate="yes" xml:space="preserve">
          <source>Note that the default &lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt;&lt;code&gt;tzinfo.fromutc()&lt;/code&gt;&lt;/a&gt; method can be overridden in a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass to affect the result returned by &lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt;&lt;code&gt;astimezone()&lt;/code&gt;&lt;/a&gt;. Ignoring error cases, &lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt;&lt;code&gt;astimezone()&lt;/code&gt;&lt;/a&gt; acts like:</source>
          <target state="translated">请注意，可以在&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;子类中覆盖默认的&lt;a href=&quot;#datetime.tzinfo.fromutc&quot;&gt; &lt;code&gt;tzinfo.fromutc()&lt;/code&gt; &lt;/a&gt;方法，以影响&lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt; &lt;code&gt;astimezone()&lt;/code&gt; &lt;/a&gt;返回的结果。忽略错误情况，&lt;a href=&quot;#datetime.datetime.astimezone&quot;&gt; &lt;code&gt;astimezone()&lt;/code&gt; 的&lt;/a&gt;行为类似于：</target>
        </trans-unit>
        <trans-unit id="1cdde200b54fdac2ca71696d1fcd9ec16758fa9f" translate="yes" xml:space="preserve">
          <source>Note that the end positions are not required by the compiler and are therefore optional. The end offset is &lt;em&gt;after&lt;/em&gt; the last symbol, for example one can get the source segment of a one-line expression node using &lt;code&gt;source_line[node.col_offset : node.end_col_offset]&lt;/code&gt;.</source>
          <target state="translated">注意，编译器不需要结束位置，因此是可选的。结束偏移量是&lt;em&gt;后&lt;/em&gt;的最后一个符号，例如，一个可使用得到的单行表达式节点的源段 &lt;code&gt;source_line[node.col_offset : node.end_col_offset]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eec0865e31dfa1bea83fd13d92d1b7c2e61986db" translate="yes" xml:space="preserve">
          <source>Note that the exact contents of code info strings are highly implementation dependent and they may change arbitrarily across Python VMs or Python releases.</source>
          <target state="translated">请注意,代码信息字符串的确切内容是高度依赖于实现的,它们可能会在不同的 Python 虚拟机或 Python 版本中任意改变。</target>
        </trans-unit>
        <trans-unit id="164b1f59a18e5c8abf18fac5ba8c576d24f04885" translate="yes" xml:space="preserve">
          <source>Note that the exact times you set here may not be returned by a subsequent &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt; call, depending on the resolution with which your operating system records access and modification times; see &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;. The best way to preserve exact times is to use the &lt;em&gt;st_atime_ns&lt;/em&gt; and &lt;em&gt;st_mtime_ns&lt;/em&gt; fields from the &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; result object with the &lt;em&gt;ns&lt;/em&gt; parameter to &lt;code&gt;utime&lt;/code&gt;.</source>
          <target state="translated">请注意，根据操作系统记录访问和修改时间的分辨率，后续的&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt;调用可能不会返回您在此处设置的确切时间。参见&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt;。保留准确时间的最佳方法是使用&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;结果对象中的&lt;em&gt;st_atime_ns&lt;/em&gt;和&lt;em&gt;st_mtime_ns&lt;/em&gt;字段，并将&lt;em&gt;ns&lt;/em&gt;参数设置为 &lt;code&gt;utime&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b5bbdf77d63ecd9abde1ce3e6def80c3014baa1" translate="yes" xml:space="preserve">
          <source>Note that the exponent is written in decimal rather than hexadecimal, and that it gives the power of 2 by which to multiply the coefficient. For example, the hexadecimal string &lt;code&gt;0x3.a7p10&lt;/code&gt; represents the floating-point number &lt;code&gt;(3 + 10./16 + 7./16**2) * 2.0**10&lt;/code&gt;, or &lt;code&gt;3740.0&lt;/code&gt;:</source>
          <target state="translated">请注意，指数用十进制而不是十六进制表示，并且乘以2的幂乘以系数。例如，十六进制字符串 &lt;code&gt;0x3.a7p10&lt;/code&gt; 表示浮点数 &lt;code&gt;(3 + 10./16 + 7./16**2) * 2.0**10&lt;/code&gt; 或 &lt;code&gt;3740.0&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="eabb40ec8d9514ff31867d76604ec09c63b3f62f" translate="yes" xml:space="preserve">
          <source>Note that the file is always opened in binary mode. To open a compressed file in text mode, use &lt;a href=&quot;#gzip.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; (or wrap your &lt;a href=&quot;#gzip.GzipFile&quot;&gt;&lt;code&gt;GzipFile&lt;/code&gt;&lt;/a&gt; with an &lt;a href=&quot;io#io.TextIOWrapper&quot;&gt;&lt;code&gt;io.TextIOWrapper&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">请注意，该文件始终以二进制模式打开。要以文本模式打开一个压缩文件，使用&lt;a href=&quot;#gzip.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;（或者换你&lt;a href=&quot;#gzip.GzipFile&quot;&gt; &lt;code&gt;GzipFile&lt;/code&gt; 中&lt;/a&gt;有&lt;a href=&quot;io#io.TextIOWrapper&quot;&gt; &lt;code&gt;io.TextIOWrapper&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2d4d5de3b61f6ba7f6afbe52eb7e703b5895b919" translate="yes" xml:space="preserve">
          <source>Note that the filename separator (&lt;code&gt;'/'&lt;/code&gt; on Unix) is &lt;em&gt;not&lt;/em&gt; special to this module. See module &lt;a href=&quot;glob#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; for pathname expansion (&lt;a href=&quot;glob#module-glob&quot;&gt;&lt;code&gt;glob&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#fnmatch.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; to match pathname segments). Similarly, filenames starting with a period are not special for this module, and are matched by the &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; patterns.</source>
          <target state="translated">请注意，文件名分隔符（在Unix上为 &lt;code&gt;'/'&lt;/code&gt; ）对于此模块而言&lt;em&gt;不是&lt;/em&gt;特殊的。请参阅模块&lt;a href=&quot;glob#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;中的路径名扩展（&lt;a href=&quot;glob#module-glob&quot;&gt; &lt;code&gt;glob&lt;/code&gt; &lt;/a&gt;使用&lt;a href=&quot;#fnmatch.filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt;来匹配路径名段）。同样，以句点开头的文件名在该模块中不是特殊的，并且由 &lt;code&gt;*&lt;/code&gt; 和 &lt;code&gt;?&lt;/code&gt; 匹配。模式。</target>
        </trans-unit>
        <trans-unit id="1992a5171785db5fc3c20b9338bd90d43b3a8008" translate="yes" xml:space="preserve">
          <source>Note that the first type annotation must be enclosed in quotes, making it a &amp;ldquo;forward reference&amp;rdquo;, to hide the &lt;code&gt;expensive_mod&lt;/code&gt; reference from the interpreter runtime. Type annotations for local variables are not evaluated, so the second annotation does not need to be enclosed in quotes.</source>
          <target state="translated">请注意，第一种类型注释必须用引号引起来，使其成为&amp;ldquo;前向引用&amp;rdquo;，以在解释器运行时中隐藏 &lt;code&gt;expensive_mod&lt;/code&gt; 引用。不会评估局部变量的类型注释，因此不需要将第二个注释用引号引起来。</target>
        </trans-unit>
        <trans-unit id="59a1de269ac77e8f64ef50ba801d5c66b9db1422" translate="yes" xml:space="preserve">
          <source>Note that the functions &lt;a href=&quot;#parser.compilest&quot;&gt;&lt;code&gt;compilest()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#parser.expr&quot;&gt;&lt;code&gt;expr()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#parser.suite&quot;&gt;&lt;code&gt;suite()&lt;/code&gt;&lt;/a&gt; may raise exceptions which are normally raised by the parsing and compilation process. These include the built in exceptions &lt;a href=&quot;exceptions#MemoryError&quot;&gt;&lt;code&gt;MemoryError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#SyntaxError&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;exceptions#SystemError&quot;&gt;&lt;code&gt;SystemError&lt;/code&gt;&lt;/a&gt;. In these cases, these exceptions carry all the meaning normally associated with them. Refer to the descriptions of each function for detailed information.</source>
          <target state="translated">请注意，函数&lt;a href=&quot;#parser.compilest&quot;&gt; &lt;code&gt;compilest()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#parser.expr&quot;&gt; &lt;code&gt;expr()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#parser.suite&quot;&gt; &lt;code&gt;suite()&lt;/code&gt; &lt;/a&gt;可能会引发异常，这些异常通常是由解析和编译过程引发的。这些包括内置的异常&lt;a href=&quot;exceptions#MemoryError&quot;&gt; &lt;code&gt;MemoryError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;exceptions#OverflowError&quot;&gt; &lt;code&gt;OverflowError&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;exceptions#SyntaxError&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;exceptions#SystemError&quot;&gt; &lt;code&gt;SystemError&lt;/code&gt; &lt;/a&gt;。在这些情况下，这些异常具有通常与其相关的所有含义。有关详细信息，请参阅每个功能的说明。</target>
        </trans-unit>
        <trans-unit id="cba8c1dab1231c0e020d29f555ee5fe18e0dc2a0" translate="yes" xml:space="preserve">
          <source>Note that the global side effect on &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; means that this context manager is not suitable for use in library code and most threaded applications. It also has no effect on the output of subprocesses. However, it is still a useful approach for many utility scripts.</source>
          <target state="translated">请注意，对&lt;a href=&quot;sys#sys.stdout&quot;&gt; &lt;code&gt;sys.stdout&lt;/code&gt; &lt;/a&gt;的全局副作用意味着此上下文管理器不适合在库代码和大多数线程应用程序中使用。它还对子流程的输出没有影响。但是，对于许多实用程序脚本，它仍然是一种有用的方法。</target>
        </trans-unit>
        <trans-unit id="256291afcdf663f4ee7f5d169948e8c4e068a3ea" translate="yes" xml:space="preserve">
          <source>Note that the implementation of these methods may involve calls of the parent &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt; instance&amp;rsquo;s &lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#urllib.request.OpenerDirector.error&quot;&gt;&lt;code&gt;error()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">请注意，这些方法的实现可能涉及父&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;实例的&lt;a href=&quot;#urllib.request.OpenerDirector.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#urllib.request.OpenerDirector.error&quot;&gt; &lt;code&gt;error()&lt;/code&gt; &lt;/a&gt;方法的调用。</target>
        </trans-unit>
        <trans-unit id="db96e2903bb03526d487ef5f0e7a28904d91b153" translate="yes" xml:space="preserve">
          <source>Note that the last tuple returned by &lt;code&gt;get_matching_blocks()&lt;/code&gt; is always a dummy, &lt;code&gt;(len(a), len(b), 0)&lt;/code&gt;, and this is the only case in which the last tuple element (number of elements matched) is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">请注意，由 &lt;code&gt;get_matching_blocks()&lt;/code&gt; 返回的最后一个元组始终是一个哑元 &lt;code&gt;(len(a), len(b), 0)&lt;/code&gt; ，这是唯一一个最后一个元组元素（匹配的元素数）为 &lt;code&gt;0&lt;/code&gt; 的情况。</target>
        </trans-unit>
        <trans-unit id="5d9efcbb8db4d5059e437fd61cf5752e8f008ac4" translate="yes" xml:space="preserve">
          <source>Note that the length of this list must be seven items.</source>
          <target state="translated">注意,这个清单的长度必须是7项。</target>
        </trans-unit>
        <trans-unit id="cc6ae65cf6a2c6b690528b4be599e5bed47ef7e9" translate="yes" xml:space="preserve">
          <source>Note that the locator will return correct information only during the invocation of the events in this interface. The application should not attempt to use it at any other time.</source>
          <target state="translated">请注意,只有在调用该接口中的事件时,定位器才会返回正确的信息。应用程序不应试图在任何其他时间使用它。</target>
        </trans-unit>
        <trans-unit id="4e632c3015ab8a0ba3453634da1b41b96d4c11e9" translate="yes" xml:space="preserve">
          <source>Note that the man pages list &amp;ldquo;STANDARD OPTIONS&amp;rdquo; and &amp;ldquo;WIDGET SPECIFIC OPTIONS&amp;rdquo; for each widget. The former is a list of options that are common to many widgets, the latter are the options that are idiosyncratic to that particular widget. The Standard Options are documented on the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/options(3)&quot;&gt;options(3)&lt;/a&gt;&lt;/em&gt; man page.</source>
          <target state="translated">请注意，手册页为每个窗口小部件列出了&amp;ldquo;标准选项&amp;rdquo;和&amp;ldquo;窗口特定选项&amp;rdquo;。前者是许多窗口小部件共有的选项列表，后者是该特定窗口小部件特有的选项。标准选项记录在&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/options(3)&quot;&gt;options（3）&lt;/a&gt;&lt;/em&gt;手册页上。</target>
        </trans-unit>
        <trans-unit id="0aa16e828033b4f45947239c8dad63dfd83cf58b" translate="yes" xml:space="preserve">
          <source>Note that the methods of a pool should only ever be used by the process which created it.</source>
          <target state="translated">请注意,池的方法只能由创建它的进程使用。</target>
        </trans-unit>
        <trans-unit id="403f74ccffe9160e93df16ee60fb1936940a68d7" translate="yes" xml:space="preserve">
          <source>Note that the methods of the pool object should only be called by the process which created the pool.</source>
          <target state="translated">请注意,池对象的方法只能由创建池的进程调用。</target>
        </trans-unit>
        <trans-unit id="072ef7e2339f223029bd2baf38337de36c7889d9" translate="yes" xml:space="preserve">
          <source>Note that the object name, &lt;code&gt;.fred&lt;/code&gt;, starts with a dot.</source>
          <target state="translated">请注意，对象名称 &lt;code&gt;.fred&lt;/code&gt; 以点开头。</target>
        </trans-unit>
        <trans-unit id="dd5e150e0b095725b6075fcce13020fbe7fbe7d6" translate="yes" xml:space="preserve">
          <source>Note that the object returned by &lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt;&lt;code&gt;parse_args()&lt;/code&gt;&lt;/a&gt; will only contain attributes for the main parser and the subparser that was selected by the command line (and not any other subparsers). So in the example above, when the &lt;code&gt;a&lt;/code&gt; command is specified, only the &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; attributes are present, and when the &lt;code&gt;b&lt;/code&gt; command is specified, only the &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt; attributes are present.</source>
          <target state="translated">请注意，由&lt;a href=&quot;#argparse.ArgumentParser.parse_args&quot;&gt; &lt;code&gt;parse_args()&lt;/code&gt; &lt;/a&gt;返回的对象将仅包含主解析器和由命令行选择的子解析器的属性（而不包含任何其他子解析器）。因此，在上面的示例中，当指定 &lt;code&gt;a&lt;/code&gt; 命令时，仅存在 &lt;code&gt;foo&lt;/code&gt; 和 &lt;code&gt;bar&lt;/code&gt; 属性，而当指定 &lt;code&gt;b&lt;/code&gt; 命令时，仅存在 &lt;code&gt;foo&lt;/code&gt; 和 &lt;code&gt;baz&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="833ae3938a6f5fe64221af69a439e4759ab70b12" translate="yes" xml:space="preserve">
          <source>Note that the order of the (states, value) sequences for an option does matter, if the order is changed to &lt;code&gt;[('active', 'blue'), ('pressed',
'red')]&lt;/code&gt; in the foreground option, for example, the result would be a blue foreground when the widget were in active or pressed states.</source>
          <target state="translated">请注意，如果在前台选项中将顺序更改为 &lt;code&gt;[('active', 'blue'), ('pressed', 'red')]&lt;/code&gt; ，则选项的（状态，值）序列的顺序确实很重要，例如，当小部件处于活动或按下状态时，结果将是蓝色前景。</target>
        </trans-unit>
        <trans-unit id="01a23cd9ecbf3257e28cf9b896b0dcad21defe07" translate="yes" xml:space="preserve">
          <source>Note that the parser can be extended in limited ways, and of course you can implement your own parser completely from scratch. All of the logic that connects the &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package&amp;rsquo;s bundled parser and the &lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; class is embodied in the &lt;code&gt;policy&lt;/code&gt; class, so a custom parser can create message object trees any way it finds necessary by implementing custom versions of the appropriate &lt;code&gt;policy&lt;/code&gt; methods.</source>
          <target state="translated">请注意，解析器可以以有限的方式扩展，当然，您可以完全从头开始实现自己的解析器。连接&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;包的捆绑解析器和&lt;a href=&quot;email.message#email.message.EmailMessage&quot;&gt; &lt;code&gt;EmailMessage&lt;/code&gt; &lt;/a&gt;类的所有逻辑都包含在 &lt;code&gt;policy&lt;/code&gt; 类中，因此自定义解析器可以通过实现适当 &lt;code&gt;policy&lt;/code&gt; 方法的自定义版本，以其认为必要的任何方式创建消息对象树。</target>
        </trans-unit>
        <trans-unit id="1eb8965b25ea5257a0aa1f9f0bb3c11a3367f9de" translate="yes" xml:space="preserve">
          <source>Note that the parser only accepts the Unix-style end of line convention. If you are reading the code from a file, make sure to use newline conversion mode to convert Windows or Mac-style newlines.</source>
          <target state="translated">请注意,解析器只接受Unix风格的行尾约定。如果您从文件中读取代码,请确保使用换行转换模式来转换Windows或Mac风格的换行。</target>
        </trans-unit>
        <trans-unit id="34bc7518b3bc42848108ade424e482f1e8016982" translate="yes" xml:space="preserve">
          <source>Note that the program name, whether determined from &lt;code&gt;sys.argv[0]&lt;/code&gt; or from the &lt;code&gt;prog=&lt;/code&gt; argument, is available to help messages using the &lt;code&gt;%(prog)s&lt;/code&gt; format specifier.</source>
          <target state="translated">请注意，无论是从 &lt;code&gt;sys.argv[0]&lt;/code&gt; 还是从 &lt;code&gt;prog=&lt;/code&gt; 参数确定的程序名称，都可用于使用 &lt;code&gt;%(prog)s&lt;/code&gt; 格式说明符的帮助消息。</target>
        </trans-unit>
        <trans-unit id="b19c49eed7c2426d8842fd07e5e1a3d9193ed340" translate="yes" xml:space="preserve">
          <source>Note that the second use of &lt;code&gt;_()&lt;/code&gt; will not identify &amp;ldquo;a&amp;rdquo; as being translatable to the &lt;strong&gt;gettext&lt;/strong&gt; program, because the parameter is not a string literal.</source>
          <target state="translated">请注意， &lt;code&gt;_()&lt;/code&gt; 的第二次使用不会将&amp;ldquo; a&amp;rdquo;标识为可翻译为&lt;strong&gt;gettext&lt;/strong&gt;程序，因为该参数不是字符串文字。</target>
        </trans-unit>
        <trans-unit id="750397ea45aa11b67082fae179f2b2c630c4ca79" translate="yes" xml:space="preserve">
          <source>Note that the selection of functions is similar, but not identical, to that in module &lt;a href=&quot;math#module-math&quot;&gt;&lt;code&gt;math&lt;/code&gt;&lt;/a&gt;. The reason for having two modules is that some users aren&amp;rsquo;t interested in complex numbers, and perhaps don&amp;rsquo;t even know what they are. They would rather have &lt;code&gt;math.sqrt(-1)&lt;/code&gt; raise an exception than return a complex number. Also note that the functions defined in &lt;a href=&quot;#module-cmath&quot;&gt;&lt;code&gt;cmath&lt;/code&gt;&lt;/a&gt; always return a complex number, even if the answer can be expressed as a real number (in which case the complex number has an imaginary part of zero).</source>
          <target state="translated">请注意，函数的选择与模块&lt;a href=&quot;math#module-math&quot;&gt; &lt;code&gt;math&lt;/code&gt; &lt;/a&gt;中的选择相似但不相同。之所以拥有两个模块，是因为有些用户对复数不感兴趣，甚至不知道它们是什么。他们宁愿让 &lt;code&gt;math.sqrt(-1)&lt;/code&gt; 引发异常，也不愿返回复数。还要注意，即使答案可以表示为实数，在&lt;a href=&quot;#module-cmath&quot;&gt; &lt;code&gt;cmath&lt;/code&gt; 中&lt;/a&gt;定义的函数始终返回复数（在这种情况下，复数的虚部为零）。</target>
        </trans-unit>
        <trans-unit id="81dcea5e7b8c2cdc13cbbc4c1f112a24bc49255e" translate="yes" xml:space="preserve">
          <source>Note that the sign of the timezone offset is the opposite of the sign of the &lt;code&gt;time.timezone&lt;/code&gt; variable for the same timezone; the latter variable follows the POSIX standard while this module follows &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">注意，时区偏移量的符号与相同时区的 &lt;code&gt;time.timezone&lt;/code&gt; 变量的符号相反。后一个变量遵循POSIX标准，而该模块遵循&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-10&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e162688246d240a8c716dca372b82c4250936fa7" translate="yes" xml:space="preserve">
          <source>Note that the two instances of class &lt;code&gt;C&lt;/code&gt; share the same class variable &lt;code&gt;x&lt;/code&gt;, as expected.</source>
          <target state="translated">请注意，类 &lt;code&gt;C&lt;/code&gt; 的两个实例按预期共享相同的类变量 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd586d754c27e8997ced1a5ea4a1abad329acacc" translate="yes" xml:space="preserve">
          <source>Note that the type of &lt;a href=&quot;#abc.ABC&quot;&gt;&lt;code&gt;ABC&lt;/code&gt;&lt;/a&gt; is still &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt;, therefore inheriting from &lt;a href=&quot;#abc.ABC&quot;&gt;&lt;code&gt;ABC&lt;/code&gt;&lt;/a&gt; requires the usual precautions regarding metaclass usage, as multiple inheritance may lead to metaclass conflicts. One may also define an abstract base class by passing the metaclass keyword and using &lt;a href=&quot;#abc.ABCMeta&quot;&gt;&lt;code&gt;ABCMeta&lt;/code&gt;&lt;/a&gt; directly, for example:</source>
          <target state="translated">请注意，&lt;a href=&quot;#abc.ABC&quot;&gt; &lt;code&gt;ABC&lt;/code&gt; &lt;/a&gt;的类型仍然是&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; &lt;/a&gt;，因此从&lt;a href=&quot;#abc.ABC&quot;&gt; &lt;code&gt;ABC&lt;/code&gt; &lt;/a&gt;继承需要有关元类使用的常规预防措施，因为多重继承可能会导致元类冲突。也可以通过传递metaclass关键字并直接使用&lt;a href=&quot;#abc.ABCMeta&quot;&gt; &lt;code&gt;ABCMeta&lt;/code&gt; 来&lt;/a&gt;定义抽象基类，例如：</target>
        </trans-unit>
        <trans-unit id="2fc591820a47265f251fd7af3b9597e91511cf6a" translate="yes" xml:space="preserve">
          <source>Note that there are no methods &lt;code&gt;read()&lt;/code&gt; or &lt;code&gt;write()&lt;/code&gt;; use &lt;a href=&quot;#socket.socket.recv&quot;&gt;&lt;code&gt;recv()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.socket.send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; without &lt;em&gt;flags&lt;/em&gt; argument instead.</source>
          <target state="translated">注意，没有方法 &lt;code&gt;read()&lt;/code&gt; 或 &lt;code&gt;write()&lt;/code&gt; ；请改用&lt;a href=&quot;#socket.socket.recv&quot;&gt; &lt;code&gt;recv()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socket.socket.send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;而没有&lt;em&gt;flags&lt;/em&gt;参数。</target>
        </trans-unit>
        <trans-unit id="36630936cce6573d3d4dc4a543a2ef65fc12897f" translate="yes" xml:space="preserve">
          <source>Note that there are unavoidable subtleties twice per year in a &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; subclass accounting for both standard and daylight time, at the DST transition points. For concreteness, consider US Eastern (UTC -0500), where EDT begins the minute after 1:59 (EST) on the second Sunday in March, and ends the minute after 1:59 (EDT) on the first Sunday in November:</source>
          <target state="translated">请注意，在DST过渡点，&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;子类中每年不可避免地会有两次细微的变化，包括标准时间和夏时制。具体而言，请考虑美国东部（UTC -0500），EDT在三月的第二个星期日的1:59（EST）之后的分钟开始，并在11月的第一个星期日的1:59（EDT）之后的分钟结束：</target>
        </trans-unit>
        <trans-unit id="15592c72a8f6f854d7f0dbccf4a1703e76bd673a" translate="yes" xml:space="preserve">
          <source>Note that there is a nice correspondence between several attributes and methods of &lt;code&gt;os.DirEntry&lt;/code&gt; and of &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt;. In particular, the &lt;code&gt;name&lt;/code&gt; attribute has the same meaning, as do the &lt;code&gt;is_dir()&lt;/code&gt;, &lt;code&gt;is_file()&lt;/code&gt;, &lt;code&gt;is_symlink()&lt;/code&gt; and &lt;code&gt;stat()&lt;/code&gt; methods.</source>
          <target state="translated">注意， &lt;code&gt;os.DirEntry&lt;/code&gt; 和&lt;a href=&quot;pathlib#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; 的&lt;/a&gt;几个属性和方法之间存在很好的对应关系。特别是， &lt;code&gt;name&lt;/code&gt; 属性与 &lt;code&gt;is_dir()&lt;/code&gt; ， &lt;code&gt;is_file()&lt;/code&gt; ， &lt;code&gt;is_symlink()&lt;/code&gt; 和 &lt;code&gt;stat()&lt;/code&gt; 方法具有相同的含义。</target>
        </trans-unit>
        <trans-unit id="8df01b5cba256bfe26308cfbe1ebdc3f6c2def0b" translate="yes" xml:space="preserve">
          <source>Note that there is no need to call this function when &lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt;&lt;code&gt;asyncio.run()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">请注意，使用&lt;a href=&quot;asyncio-task#asyncio.run&quot;&gt; &lt;code&gt;asyncio.run()&lt;/code&gt; &lt;/a&gt;时无需调用此函数。</target>
        </trans-unit>
        <trans-unit id="b57144e5df9df62e17e080fadafa48aa0596258b" translate="yes" xml:space="preserve">
          <source>Note that there is no specific slot for any of these methods in the type structure for Python objects in the Python/C API. Extension types wanting to define these methods must provide them as a normal Python accessible method. Compared to the overhead of setting up the runtime context, the overhead of a single class dictionary lookup is negligible.</source>
          <target state="translated">请注意,在 Python/C API 的 Python 对象的类型结构中,并没有这些方法的特定插槽。想要定义这些方法的扩展类型必须将它们作为一个普通的 Python 可访问方法来提供。与设置运行时上下文的开销相比,单个类字典查找的开销可以忽略不计。</target>
        </trans-unit>
        <trans-unit id="9a02df7e02b3ab3b4f010591f5ece20d6e24dd6b" translate="yes" xml:space="preserve">
          <source>Note that there is one additional limitation when using context managers as function decorators: there&amp;rsquo;s no way to access the return value of &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt;. If that value is needed, then it is still necessary to use an explicit &lt;code&gt;with&lt;/code&gt; statement.</source>
          <target state="translated">请注意，将上下文管理器用作函数装饰器时还存在一个附加限制：无法访问&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__enter__&quot;&gt; &lt;code&gt;__enter__()&lt;/code&gt; &lt;/a&gt;的返回值。如果需要该值，那么仍然有必要使用显式 &lt;code&gt;with&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="fde38b61d1d62820ebcfd27fe4d5d63de63de348" translate="yes" xml:space="preserve">
          <source>Note that there is one additional limitation when using context managers as function decorators: there&amp;rsquo;s no way to access the return value of &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__enter__&quot;&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/a&gt;. If that value is needed, then it is still necessary to use an explicit &lt;code&gt;with&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a0bc324af393bbb5dd82800c76c036cbda0f5f" translate="yes" xml:space="preserve">
          <source>Note that these checks are enforced only by the static type checker. At runtime, the statement &lt;code&gt;Derived = NewType('Derived', Base)&lt;/code&gt; will make &lt;code&gt;Derived&lt;/code&gt; a function that immediately returns whatever parameter you pass it. That means the expression &lt;code&gt;Derived(some_value)&lt;/code&gt; does not create a new class or introduce any overhead beyond that of a regular function call.</source>
          <target state="translated">请注意，这些检查仅由静态类型检查器强制执行。在运行时，语句 &lt;code&gt;Derived = NewType('Derived', Base)&lt;/code&gt; 将使 &lt;code&gt;Derived&lt;/code&gt; 函数立即返回您传递的任何参数。这意味着表达式 &lt;code&gt;Derived(some_value)&lt;/code&gt; 不会创建新类或引入任何常规函数调用之外的开销。</target>
        </trans-unit>
        <trans-unit id="472bb74ea73045e483510b2cd999d2e021bf1acc" translate="yes" xml:space="preserve">
          <source>Note that these functions are not meaningful for a multipart message. They must be applied to individual subparts instead, and will raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if passed a message whose type is multipart.</source>
          <target state="translated">请注意，这些功能对于多部分消息没有意义。必须将它们应用于各个子部分，如果传递的消息是多部分类型，则会引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="30d1675de10cd2d2ad0bc712bec13688a9a6c970" translate="yes" xml:space="preserve">
          <source>Note that these methods must &lt;em&gt;not&lt;/em&gt; be called during parsing, that is, after parse has been called and before it returns.</source>
          <target state="translated">请注意，在解析期间（即，在调用解析之后且返回之前）&lt;em&gt;不得&lt;/em&gt;调用这些方法。</target>
        </trans-unit>
        <trans-unit id="d29fa93c8852c067f1d3f1f3ca06f2de2869049f" translate="yes" xml:space="preserve">
          <source>Note that this adds a sixth attribute (&lt;a href=&quot;#platform.processor&quot;&gt;&lt;code&gt;processor&lt;/code&gt;&lt;/a&gt;) not present in the &lt;a href=&quot;os#os.uname&quot;&gt;&lt;code&gt;os.uname()&lt;/code&gt;&lt;/a&gt; result. Also, the attribute names are different for the first two attributes; &lt;a href=&quot;os#os.uname&quot;&gt;&lt;code&gt;os.uname()&lt;/code&gt;&lt;/a&gt; names them &lt;code&gt;sysname&lt;/code&gt; and &lt;code&gt;nodename&lt;/code&gt;.</source>
          <target state="translated">请注意，这会添加&lt;a href=&quot;os#os.uname&quot;&gt; &lt;code&gt;os.uname()&lt;/code&gt; &lt;/a&gt;结果中不存在的第六个属性（&lt;a href=&quot;#platform.processor&quot;&gt; &lt;code&gt;processor&lt;/code&gt; &lt;/a&gt;）。此外，前两个属性的属性名称不同；&lt;a href=&quot;os#os.uname&quot;&gt; &lt;code&gt;os.uname()&lt;/code&gt; &lt;/a&gt;将它们命名为 &lt;code&gt;sysname&lt;/code&gt; 和 &lt;code&gt;nodename&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d46886958797cfa9907ad4c6425e0ae6791da66" translate="yes" xml:space="preserve">
          <source>Note that this does &lt;em&gt;not&lt;/em&gt; overwrite or delete any existing header with the same name. If you want to ensure that the new header is the only one present in the message with field name &lt;em&gt;name&lt;/em&gt;, delete the field first, e.g.:</source>
          <target state="translated">请注意，这并&lt;em&gt;不能&lt;/em&gt;覆盖或删除任何现有的头名称相同。如果要确保新标头是消息中字段名称为&lt;em&gt;name&lt;/em&gt;的唯一标题，请首先删除该字段，例如：</target>
        </trans-unit>
        <trans-unit id="b79b943f472b0275b7ad6a51da0c669884bba25f" translate="yes" xml:space="preserve">
          <source>Note that this function &lt;em&gt;only&lt;/em&gt; returns a meaningful name for actual Python modules - paths that potentially refer to Python packages will still return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">请注意，此函数&lt;em&gt;仅为&lt;/em&gt;实际的Python模块返回有意义的名称-可能引用Python包的路径仍将返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e5f27a50e7211ff256009dee22a78b6d7a48364" translate="yes" xml:space="preserve">
          <source>Note that this function does not raise &lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt;&lt;code&gt;asyncio.TimeoutError&lt;/code&gt;&lt;/a&gt;. Futures or Tasks that aren&amp;rsquo;t done when the timeout occurs are simply returned in the second set.</source>
          <target state="translated">请注意，此函数不会引发&lt;a href=&quot;asyncio-exceptions#asyncio.TimeoutError&quot;&gt; &lt;code&gt;asyncio.TimeoutError&lt;/code&gt; &lt;/a&gt;。发生超时时未完成的期货或任务仅在第二组中返回。</target>
        </trans-unit>
        <trans-unit id="f6e96664f646c10e89d795c433800d7c1e4544c3" translate="yes" xml:space="preserve">
          <source>Note that this function has intimate knowledge of how different libc versions add symbols to the executable is probably only usable for executables compiled using &lt;strong&gt;gcc&lt;/strong&gt;.</source>
          <target state="translated">请注意，此函数对不同的libc版本如何向可执行文件添加符号有深入了解，可能仅适用于使用&lt;strong&gt;gcc&lt;/strong&gt;编译的可执行文件。</target>
        </trans-unit>
        <trans-unit id="45f629527ef98fcd33c266ca1c4678e0ef5157a6" translate="yes" xml:space="preserve">
          <source>Note that this function must import all &lt;em&gt;packages&lt;/em&gt; (&lt;em&gt;not&lt;/em&gt; all modules!) on the given &lt;em&gt;path&lt;/em&gt;, in order to access the &lt;code&gt;__path__&lt;/code&gt; attribute to find submodules.</source>
          <target state="translated">请注意，此函数必须导入给定&lt;em&gt;路径&lt;/em&gt;上的所有&lt;em&gt;软件包&lt;/em&gt;（&lt;em&gt;不是&lt;/em&gt;所有模块！），以便访问 &lt;code&gt;__path__&lt;/code&gt; 属性以查找子模块。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a589457ce4b7eed1abc8c3023b9a61ab3a1a55e6" translate="yes" xml:space="preserve">
          <source>Note that this function will not work with the &amp;lsquo;C&amp;rsquo; locale, so you have to set a locale via &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; first.</source>
          <target state="translated">请注意，此功能不适用于'C'语言环境，因此您必须首先通过&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt;设置语言环境。</target>
        </trans-unit>
        <trans-unit id="c7fbd744392c36926075a26d9e3ab559ef32a1e2" translate="yes" xml:space="preserve">
          <source>Note that this is &lt;em&gt;not&lt;/em&gt; a sandbox module - all code is executed in the current process, and any side effects (such as cached imports of other modules) will remain in place after the functions have returned.</source>
          <target state="translated">请注意，这&lt;em&gt;不是&lt;/em&gt;沙盒模块-所有代码均在当前进程中执行，并且在函数返回后，任何副作用（例如，其他模块的缓存导入）都将保留在原位。</target>
        </trans-unit>
        <trans-unit id="5db5a52cc1e7c561c7837d97bc61981bd4e2bf44" translate="yes" xml:space="preserve">
          <source>Note that this is another reason why you need integration tests as well as unit tests. Testing everything in isolation is all fine and dandy, but if you don&amp;rsquo;t test how your units are &amp;ldquo;wired together&amp;rdquo; there is still lots of room for bugs that tests might have caught.</source>
          <target state="translated">请注意，这是您需要集成测试和单元测试的另一个原因。单独测试所有内容都是好事，但如果您不测试如何将单元&amp;ldquo;连接在一起&amp;rdquo;，那么仍然存在很多可能会捕获测试错误的空间。</target>
        </trans-unit>
        <trans-unit id="b965eef784d4d104baee666239b49d8cae11dad4" translate="yes" xml:space="preserve">
          <source>Note that this is equivalent to &lt;code&gt;bool(expr) is True&lt;/code&gt; and not to &lt;code&gt;expr
is True&lt;/code&gt; (use &lt;code&gt;assertIs(expr, True)&lt;/code&gt; for the latter). This method should also be avoided when more specific methods are available (e.g. &lt;code&gt;assertEqual(a, b)&lt;/code&gt; instead of &lt;code&gt;assertTrue(a == b)&lt;/code&gt;), because they provide a better error message in case of failure.</source>
          <target state="translated">请注意，这等效于 &lt;code&gt;bool(expr) is True&lt;/code&gt; 而不是 &lt;code&gt;expr is True&lt;/code&gt; （后者使用 &lt;code&gt;assertIs(expr, True)&lt;/code&gt; ）。当有更多特定的方法可用时（例如 &lt;code&gt;assertEqual(a, b)&lt;/code&gt; 而不是 &lt;code&gt;assertTrue(a == b)&lt;/code&gt; ），也应避免使用此方法，因为在失败的情况下它们可以提供更好的错误消息。</target>
        </trans-unit>
        <trans-unit id="5e6fff084be385dbf0bc1a43435632a2295ef2a7" translate="yes" xml:space="preserve">
          <source>Note that this is not the same concept as an optional argument, which is one that has a default. An optional argument with a default does not require the &lt;code&gt;Optional&lt;/code&gt; qualifier on its type annotation just because it is optional. For example:</source>
          <target state="translated">Note that this is not the same concept as an optional argument, which is one that has a default. An optional argument with a default does not require the &lt;code&gt;Optional&lt;/code&gt; qualifier on its type annotation just because it is optional. For example:</target>
        </trans-unit>
        <trans-unit id="497db1e409c9d5535b9f7799396b336c6bf26c17" translate="yes" xml:space="preserve">
          <source>Note that this is only one way, albeit the most convenient way, to make the &lt;code&gt;_()&lt;/code&gt; function available to your application. Because it affects the entire application globally, and specifically the built-in namespace, localized modules should never install &lt;code&gt;_()&lt;/code&gt;. Instead, they should use this code to make &lt;code&gt;_()&lt;/code&gt; available to their module:</source>
          <target state="translated">Note that this is only one way, albeit the most convenient way, to make the &lt;code&gt;_()&lt;/code&gt; function available to your application. Because it affects the entire application globally, and specifically the built-in namespace, localized modules should never install &lt;code&gt;_()&lt;/code&gt; . Instead, they should use this code to make &lt;code&gt;_()&lt;/code&gt; available to their module:</target>
        </trans-unit>
        <trans-unit id="c5dd52f7d1a18d76b5b1670ad4b672dfed972deb" translate="yes" xml:space="preserve">
          <source>Note that this manipulation of &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; is not thread-safe. Other threads may see the partially initialised module, as well as the altered list of arguments. It is recommended that the &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; module be left alone when invoking this function from threaded code.</source>
          <target state="translated">请注意，对&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; 的&lt;/a&gt;这种操作不是线程安全的。其他线程可能会看到部分初始化的模块，以及更改后的参数列表。从线程代码中调用该函数时，建议单独放置&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="ad60b5a4d53caa42fe4b708c2e6654939094b20a" translate="yes" xml:space="preserve">
          <source>Note that this may not be done after authentication information has been transmitted, and authentication occurs by default if possible during a &lt;a href=&quot;#nntplib.NNTP&quot;&gt;&lt;code&gt;NNTP&lt;/code&gt;&lt;/a&gt; object initialization. See &lt;a href=&quot;#nntplib.NNTP.login&quot;&gt;&lt;code&gt;NNTP.login()&lt;/code&gt;&lt;/a&gt; for information on suppressing this behavior.</source>
          <target state="translated">请注意，在发送了身份验证信息之后，可能无法完成此操作，并且在&lt;a href=&quot;#nntplib.NNTP&quot;&gt; &lt;code&gt;NNTP&lt;/code&gt; &lt;/a&gt;对象初始化期间，如果可能的话，默认情况下会进行身份验证。有关抑制此行为的信息，请参见&lt;a href=&quot;#nntplib.NNTP.login&quot;&gt; &lt;code&gt;NNTP.login()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ca198d21563fd5cf167242f8f7abad568ca45e5" translate="yes" xml:space="preserve">
          <source>Note that this may raise &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; on Unix platforms like Mac OS X where &lt;code&gt;sem_getvalue()&lt;/code&gt; is not implemented.</source>
          <target state="translated">请注意，这可能会在未实现 &lt;code&gt;sem_getvalue()&lt;/code&gt; 的 Unix平台（如Mac OS X ）上引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46df65154fc5779c9a8d8169de6b544a5033f917" translate="yes" xml:space="preserve">
          <source>Note that this method differs from &lt;a href=&quot;#email.message.Message.get_charset&quot;&gt;&lt;code&gt;get_charset()&lt;/code&gt;&lt;/a&gt; which returns the &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance for the default encoding of the message body.</source>
          <target state="translated">请注意，此方法与&lt;a href=&quot;#email.message.Message.get_charset&quot;&gt; &lt;code&gt;get_charset()&lt;/code&gt; &lt;/a&gt;不同，后者返回消息集的默认编码的&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="7ec37bb1f92cbf01a7d78829d33f077a718bc081" translate="yes" xml:space="preserve">
          <source>Note that this method is automatically added to the class: it is not directly specified in the &lt;code&gt;InventoryItem&lt;/code&gt; definition shown above.</source>
          <target state="translated">请注意，此方法会自动添加到类中：上面显示的 &lt;code&gt;InventoryItem&lt;/code&gt; 定义中未直接指定此方法。</target>
        </trans-unit>
        <trans-unit id="2d0305ac41e9e98f465e3a09a7a321fde7592591" translate="yes" xml:space="preserve">
          <source>Note that this method is provided as a convenience and may not always format the message the way you want. For example, by default it does not do the mangling of lines that begin with &lt;code&gt;From&lt;/code&gt; that is required by the unix mbox format. For more flexibility, instantiate a &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;BytesGenerator&lt;/code&gt;&lt;/a&gt; instance and use its &lt;a href=&quot;email.generator#email.generator.BytesGenerator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method directly. For example:</source>
          <target state="translated">请注意，此方法是为方便起见而提供的，不一定总是按照您希望的方式格式化消息。例如，默认情况下，它不处理unix mbox格式要求的以 &lt;code&gt;From&lt;/code&gt; 开头的行。为了获得更大的灵活性，请实例化&lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;BytesGenerator&lt;/code&gt; &lt;/a&gt;实例并直接使用其&lt;a href=&quot;email.generator#email.generator.BytesGenerator.flatten&quot;&gt; &lt;code&gt;flatten()&lt;/code&gt; &lt;/a&gt;方法。例如：</target>
        </trans-unit>
        <trans-unit id="bc1e53b42c929782edab5f61e605edfc1b232f1f" translate="yes" xml:space="preserve">
          <source>Note that this method is provided as a convenience and may not always format the message the way you want. For example, by default it does not do the mangling of lines that begin with &lt;code&gt;From&lt;/code&gt; that is required by the unix mbox format. For more flexibility, instantiate a &lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; instance and use its &lt;a href=&quot;email.generator#email.generator.Generator.flatten&quot;&gt;&lt;code&gt;flatten()&lt;/code&gt;&lt;/a&gt; method directly. For example:</source>
          <target state="translated">请注意，此方法是为方便起见而提供的，不一定总是按照您希望的方式格式化消息。例如，默认情况下，它不处理unix mbox格式要求的以 &lt;code&gt;From&lt;/code&gt; 开头的行。为了获得更大的灵活性，请实例化&lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;实例并直接使用其&lt;a href=&quot;email.generator#email.generator.Generator.flatten&quot;&gt; &lt;code&gt;flatten()&lt;/code&gt; &lt;/a&gt;方法。例如：</target>
        </trans-unit>
        <trans-unit id="914ac925c90ce0481ed0d7bcee5c22d8232a27d1" translate="yes" xml:space="preserve">
          <source>Note that this method is provided as a convenience and may not be the most useful way to serialize messages in your application, especially if you are dealing with multiple messages. See &lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt;&lt;code&gt;email.generator.BytesGenerator&lt;/code&gt;&lt;/a&gt; for a more flexible API for serializing messages.</source>
          <target state="translated">请注意，此方法是为了方便起见而提供的，可能不是在应用程序中序列化消息的最有用的方法，尤其是在处理多个消息时。有关用于序列化消息的更灵活的API，请参见&lt;a href=&quot;email.generator#email.generator.BytesGenerator&quot;&gt; &lt;code&gt;email.generator.BytesGenerator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0569aab75ed3c326d1e3ad45e468b2d9a967ffbc" translate="yes" xml:space="preserve">
          <source>Note that this method is provided as a convenience and may not be the most useful way to serialize messages in your application, especially if you are dealing with multiple messages. See &lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt;&lt;code&gt;email.generator.Generator&lt;/code&gt;&lt;/a&gt; for a more flexible API for serializing messages. Note also that this method is restricted to producing messages serialized as &amp;ldquo;7 bit clean&amp;rdquo; when &lt;a href=&quot;email.policy#email.policy.EmailPolicy.utf8&quot;&gt;&lt;code&gt;utf8&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, which is the default.</source>
          <target state="translated">请注意，此方法是为了方便起见而提供的，可能不是在应用程序中序列化消息的最有用的方法，尤其是在处理多个消息时。有关用于序列化消息的更灵活的API，请参见&lt;a href=&quot;email.generator#email.generator.Generator&quot;&gt; &lt;code&gt;email.generator.Generator&lt;/code&gt; &lt;/a&gt;。还要注意，此方法仅限于在&lt;a href=&quot;email.policy#email.policy.EmailPolicy.utf8&quot;&gt; &lt;code&gt;utf8&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;False&lt;/code&gt; 时生成序列化为&amp;ldquo; 7 bit clean&amp;rdquo;的消息，这是默认设置。</target>
        </trans-unit>
        <trans-unit id="4863202591f117b45079183ed253d97469614cfd" translate="yes" xml:space="preserve">
          <source>Note that this should be called at most once, and it should be protected inside the &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; clause of the main module.</source>
          <target state="translated">请注意，这最多应调用一次，并且应该在主模块的 &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; 子句中进行保护。</target>
        </trans-unit>
        <trans-unit id="5f023dfbaa5e7784ac868d744c9df4db74a2b0f4" translate="yes" xml:space="preserve">
          <source>Note that this utility does not guarantee complete &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt; compliance; an absence of errors from this module does not necessarily mean that errors do not exist. However, if this module does produce an error, then it is virtually certain that either the server or application is not 100% compliant.</source>
          <target state="translated">请注意，该实用程序不能保证完全符合&lt;a href=&quot;https://www.python.org/dev/peps/pep-3333&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;PEP 3333&lt;/strong&gt;&lt;/a&gt;；该模块中没有错误并不一定意味着不存在错误。但是，如果此模块确实产生错误，则实际上可以确定服务器或应用程序不是100％兼容的。</target>
        </trans-unit>
        <trans-unit id="392655359709b780ff1bb9da7fb1ff72dc351b8b" translate="yes" xml:space="preserve">
          <source>Note that tracebacks are treated very specially. In particular, in the rewritten example, the use of &lt;code&gt;...&lt;/code&gt; is independent of doctest&amp;rsquo;s &lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt;&lt;code&gt;ELLIPSIS&lt;/code&gt;&lt;/a&gt; option. The ellipsis in that example could be left out, or could just as well be three (or three hundred) commas or digits, or an indented transcript of a Monty Python skit.</source>
          <target state="translated">请注意，对回溯的处理非常特殊。特别是，在改写的例子中，使用的 &lt;code&gt;...&lt;/code&gt; 是独立的文档测试的的&lt;a href=&quot;#doctest.ELLIPSIS&quot;&gt; &lt;code&gt;ELLIPSIS&lt;/code&gt; &lt;/a&gt;选项。在该示例中，省略号可以省略，也可以是三个（或三百个）逗号或数字，或者是Monty Python标记的缩进抄本。</target>
        </trans-unit>
        <trans-unit id="953d734e119512ee18a0a9392b9f9b9d6d4df366" translate="yes" xml:space="preserve">
          <source>Note that unclosed single-quoted strings do not cause an error to be raised. They are tokenized as &lt;a href=&quot;token#token.ERRORTOKEN&quot;&gt;&lt;code&gt;ERRORTOKEN&lt;/code&gt;&lt;/a&gt;, followed by the tokenization of their contents.</source>
          <target state="translated">请注意，未封闭的单引号字符串不会引起错误。它们被标记为&lt;a href=&quot;token#token.ERRORTOKEN&quot;&gt; &lt;code&gt;ERRORTOKEN&lt;/code&gt; &lt;/a&gt;，随后对其内容进行标记。</target>
        </trans-unit>
        <trans-unit id="025bc18a2bc141ea4af9a1700e4ee039cbf3bd9f" translate="yes" xml:space="preserve">
          <source>Note that unless a minimum field width is defined, the field width will always be the same size as the data to fill it, so that the alignment option has no meaning in this case.</source>
          <target state="translated">请注意,除非定义了最小的字段宽度,否则字段宽度将始终与填充它的数据大小相同,所以在这种情况下,对齐选项没有意义。</target>
        </trans-unit>
        <trans-unit id="f0733676794f7d6ac39c0d22a2a452465ab6a556" translate="yes" xml:space="preserve">
          <source>Note that unlike many other generics in the typing module, the &lt;code&gt;SendType&lt;/code&gt; of &lt;a href=&quot;#typing.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; behaves contravariantly, not covariantly or invariantly.</source>
          <target state="translated">请注意，与类型模块中的许多其他泛型不同，&lt;a href=&quot;#typing.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;SendType&lt;/code&gt; 的行为是相反的，而不是协变的或不变的。</target>
        </trans-unit>
        <trans-unit id="a6e9cb78d9006ba4f85f82103063e16f601f2f04" translate="yes" xml:space="preserve">
          <source>Note that unlike the &lt;a href=&quot;#csv.DictReader&quot;&gt;&lt;code&gt;DictReader&lt;/code&gt;&lt;/a&gt; class, the &lt;em&gt;fieldnames&lt;/em&gt; parameter of the &lt;a href=&quot;#csv.DictWriter&quot;&gt;&lt;code&gt;DictWriter&lt;/code&gt;&lt;/a&gt; class is not optional.</source>
          <target state="translated">请注意，与&lt;a href=&quot;#csv.DictReader&quot;&gt; &lt;code&gt;DictReader&lt;/code&gt; &lt;/a&gt;类的&lt;em&gt;字段名&lt;/em&gt;的参数&lt;a href=&quot;#csv.DictWriter&quot;&gt; &lt;code&gt;DictWriter&lt;/code&gt; &lt;/a&gt;类是不可选的。</target>
        </trans-unit>
        <trans-unit id="b92a04f3a0309df577dbc705f08776279130e14e" translate="yes" xml:space="preserve">
          <source>Note that unlike the C structure, the month value is a range of [1, 12], not [0, 11].</source>
          <target state="translated">注意,与C结构不同的是,月值是[1,12]的范围,而不是[0,11]。</target>
        </trans-unit>
        <trans-unit id="8eede2ce0b3d8e2c9335916e2ca2bc70c1345924" translate="yes" xml:space="preserve">
          <source>Note that unlike the Python &lt;code&gt;sys.version&lt;/code&gt;, the returned value will always include the patchlevel (it defaults to 0).</source>
          <target state="translated">请注意，与Python &lt;code&gt;sys.version&lt;/code&gt; 不同，返回值将始终包含补丁程序级别（默认为0）。</target>
        </trans-unit>
        <trans-unit id="a0e44189a3d936dd2974b45ad2423d66b85bbb11" translate="yes" xml:space="preserve">
          <source>Note that unlike the Python &lt;code&gt;sys.version&lt;/code&gt;, the returned value will always include the patchlevel (it defaults to &lt;code&gt;'0'&lt;/code&gt;).</source>
          <target state="translated">请注意，与Python &lt;code&gt;sys.version&lt;/code&gt; 不同，返回值将始终包含patchlevel（默认值为 &lt;code&gt;'0'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="faae0ddf62d8d17e4575535b139e839cc1f2ad54" translate="yes" xml:space="preserve">
          <source>Note that urlopen returns a bytes object. This is because there is no way for urlopen to automatically determine the encoding of the byte stream it receives from the HTTP server. In general, a program will decode the returned bytes object to string once it determines or guesses the appropriate encoding.</source>
          <target state="translated">请注意,urlopen返回的是一个字节对象,这是因为urlopen没有办法自动确定从HTTP服务器接收到的字节流的编码。这是因为urlopen没有办法自动确定从HTTP服务器接收到的字节流的编码。一般来说,程序一旦确定或猜测到合适的编码,就会将返回的字节对象解码为字符串。</target>
        </trans-unit>
        <trans-unit id="fb5a04375d4dd30682512ce20dc834dd48ae4073" translate="yes" xml:space="preserve">
          <source>Note that using this function may require some external synchronization if there are other threads whose state is unknown. If a barrier is broken it may be better to just leave it and create a new one.</source>
          <target state="translated">请注意,如果有其他线程的状态未知,使用这个函数可能需要一些外部同步。如果一个障碍物被破坏了,最好是直接离开它,然后创建一个新的障碍物。</target>
        </trans-unit>
        <trans-unit id="9c6aed152d7d60b297ac12eb40378b5912ced5a2" translate="yes" xml:space="preserve">
          <source>Note that using this method is subtly different from deleting the old &lt;em&gt;Content-Type&lt;/em&gt; header and adding a new one with the new boundary via &lt;a href=&quot;#email.message.EmailMessage.add_header&quot;&gt;&lt;code&gt;add_header()&lt;/code&gt;&lt;/a&gt;, because &lt;a href=&quot;#email.message.EmailMessage.set_boundary&quot;&gt;&lt;code&gt;set_boundary()&lt;/code&gt;&lt;/a&gt; preserves the order of the &lt;em&gt;Content-Type&lt;/em&gt; header in the list of headers.</source>
          <target state="translated">请注意，使用此方法与通过&lt;a href=&quot;#email.message.EmailMessage.add_header&quot;&gt; &lt;code&gt;add_header()&lt;/code&gt; &lt;/a&gt;删除旧的&lt;em&gt;Content-Type&lt;/em&gt;标头并添加具有新边界的新方法有一点不同，因为&lt;a href=&quot;#email.message.EmailMessage.set_boundary&quot;&gt; &lt;code&gt;set_boundary()&lt;/code&gt; &lt;/a&gt;保留&lt;em&gt;Content-Type&lt;/em&gt;标头在标头列表中的顺序。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bd23778bbf355f16dc2a21579fe2ace4a93366b" translate="yes" xml:space="preserve">
          <source>Note that using this method is subtly different than deleting the old &lt;em&gt;Content-Type&lt;/em&gt; header and adding a new one with the new boundary via &lt;a href=&quot;#email.message.Message.add_header&quot;&gt;&lt;code&gt;add_header()&lt;/code&gt;&lt;/a&gt;, because &lt;a href=&quot;#email.message.Message.set_boundary&quot;&gt;&lt;code&gt;set_boundary()&lt;/code&gt;&lt;/a&gt; preserves the order of the &lt;em&gt;Content-Type&lt;/em&gt; header in the list of headers. However, it does &lt;em&gt;not&lt;/em&gt; preserve any continuation lines which may have been present in the original &lt;em&gt;Content-Type&lt;/em&gt; header.</source>
          <target state="translated">请注意，使用此方法与通过&lt;a href=&quot;#email.message.Message.add_header&quot;&gt; &lt;code&gt;add_header()&lt;/code&gt; &lt;/a&gt;删除旧的&lt;em&gt;Content-Type&lt;/em&gt;标头并添加具有新边界的新方法有所不同，因为&lt;a href=&quot;#email.message.Message.set_boundary&quot;&gt; &lt;code&gt;set_boundary()&lt;/code&gt; &lt;/a&gt;保留&lt;em&gt;Content-Type&lt;/em&gt;标头在标头列表中的顺序。但是，它并&lt;em&gt;没有&lt;/em&gt;保留这可能是存在于原始任何连续行&lt;em&gt;的Content-Type&lt;/em&gt;首部。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c91ae7008ef906071438192c9d712ce1afcb7577" translate="yes" xml:space="preserve">
          <source>Note that via &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; hooks, all attributes are computed lazily, so there is no speed penalty if only those attributes which are lightweight to compute are used.</source>
          <target state="translated">请注意，通过&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__getattr__&quot;&gt; &lt;code&gt;__getattr__()&lt;/code&gt; &lt;/a&gt;挂钩，所有属性都是延迟计算的，因此，如果仅使用那些轻量级的属性，则不会影响速度。</target>
        </trans-unit>
        <trans-unit id="a0f182aa4a9ed90d4fef85c4c311a272374c431d" translate="yes" xml:space="preserve">
          <source>Note that via &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__getattr__&quot;&gt;&lt;code&gt;__getattr__()&lt;/code&gt;&lt;/a&gt; hooks, all attributes are computed lazily, so there is no speed penalty if only those attributes which are lightweight to compute are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6620fed817fce6e58ea094966e81cd033a5e4010" translate="yes" xml:space="preserve">
          <source>Note that when instantiating a &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ&lt;/code&gt;&lt;/a&gt; object we may pass functions to filter out line and character &amp;ldquo;junk.&amp;rdquo; See the &lt;a href=&quot;#difflib.Differ&quot;&gt;&lt;code&gt;Differ()&lt;/code&gt;&lt;/a&gt; constructor for details.</source>
          <target state="translated">请注意，在实例化&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ&lt;/code&gt; &lt;/a&gt;对象时，我们可能会传递函数以过滤掉行和字符&amp;ldquo;垃圾&amp;rdquo;。有关详细信息，请参见&lt;a href=&quot;#difflib.Differ&quot;&gt; &lt;code&gt;Differ()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="dd02f589dec05a4f2acacc6d0ca5ede64ffc86f9" translate="yes" xml:space="preserve">
          <source>Note that when locals are captured, they are also shown in the traceback.</source>
          <target state="translated">请注意,当本地人被捕获时,它们也会显示在回溯中。</target>
        </trans-unit>
        <trans-unit id="502bb316d8bdb001894aeb3898845cca4d8900b3" translate="yes" xml:space="preserve">
          <source>Note that when reading configuration files, whitespace around the option names is stripped before &lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt;&lt;code&gt;optionxform()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">请注意，在读取配置文件时，在&lt;a href=&quot;#configparser.ConfigParser.optionxform&quot;&gt; &lt;code&gt;optionxform()&lt;/code&gt; &lt;/a&gt;之前会删除选项名称周围的空格。</target>
        </trans-unit>
        <trans-unit id="ea83e7983f7be281ec5a3262ffed3a7df409c2d9" translate="yes" xml:space="preserve">
          <source>Note that when the Unicode patterns &lt;code&gt;[a-z]&lt;/code&gt; or &lt;code&gt;[A-Z]&lt;/code&gt; are used in combination with the &lt;a href=&quot;#re.IGNORECASE&quot;&gt;&lt;code&gt;IGNORECASE&lt;/code&gt;&lt;/a&gt; flag, they will match the 52 ASCII letters and 4 additional non-ASCII letters: &amp;lsquo;İ&amp;rsquo; (U+0130, Latin capital letter I with dot above), &amp;lsquo;ı&amp;rsquo; (U+0131, Latin small letter dotless i), &amp;lsquo;ſ&amp;rsquo; (U+017F, Latin small letter long s) and &amp;lsquo;K&amp;rsquo; (U+212A, Kelvin sign). If the &lt;a href=&quot;#re.ASCII&quot;&gt;&lt;code&gt;ASCII&lt;/code&gt;&lt;/a&gt; flag is used, only letters &amp;lsquo;a&amp;rsquo; to &amp;lsquo;z&amp;rsquo; and &amp;lsquo;A&amp;rsquo; to &amp;lsquo;Z&amp;rsquo; are matched.</source>
          <target state="translated">请注意，当Unicode模式 &lt;code&gt;[a-z]&lt;/code&gt; 或 &lt;code&gt;[A-Z]&lt;/code&gt; 与&lt;a href=&quot;#re.IGNORECASE&quot;&gt; &lt;code&gt;IGNORECASE&lt;/code&gt; &lt;/a&gt;标志结合使用时，它们将匹配52个ASCII字母和4个其他非ASCII字母：'İ'（U + 0130，拉丁大写字母I，带有点上方），'ı'（U + 0131，拉丁小写字母无点i），'ſ'（U + 017F，拉丁小写字母long s）和&amp;ldquo; K&amp;rdquo;（U + 212A，开尔文符号）。如果使用&lt;a href=&quot;#re.ASCII&quot;&gt; &lt;code&gt;ASCII&lt;/code&gt; &lt;/a&gt;标志，则仅匹配字母&amp;ldquo; a&amp;rdquo;至&amp;ldquo; z&amp;rdquo;和&amp;ldquo; A&amp;rdquo;至&amp;ldquo; Z&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="941b2bd8c0fceca2a354dab3b47ce6850b8f3e86" translate="yes" xml:space="preserve">
          <source>Note that while &lt;a href=&quot;#xml.etree.ElementTree.iterparse&quot;&gt;&lt;code&gt;iterparse()&lt;/code&gt;&lt;/a&gt; builds the tree incrementally, it issues blocking reads on &lt;em&gt;source&lt;/em&gt; (or the file it names). As such, it&amp;rsquo;s unsuitable for applications where blocking reads can&amp;rsquo;t be made. For fully non-blocking parsing, see &lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt;&lt;code&gt;XMLPullParser&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，尽管&lt;a href=&quot;#xml.etree.ElementTree.iterparse&quot;&gt; &lt;code&gt;iterparse()&lt;/code&gt; &lt;/a&gt;逐步构建树，但它会在&lt;em&gt;源&lt;/em&gt;（或它命名的文件）上发出阻塞读取。因此，它不适用于无法进行分块读取的应用程序。有关完全无阻塞的分析，请参见&lt;a href=&quot;#xml.etree.ElementTree.XMLPullParser&quot;&gt; &lt;code&gt;XMLPullParser&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e2a3769eac1a1d1cf5224599e594a65402067fa" translate="yes" xml:space="preserve">
          <source>Note that widgets do not appear until they have had their geometry specified with a geometry manager. It&amp;rsquo;s a common early mistake to leave out the geometry specification, and then be surprised when the widget is created but nothing appears. A widget will appear only after it has had, for example, the packer&amp;rsquo;s &lt;code&gt;pack()&lt;/code&gt; method applied to it.</source>
          <target state="translated">请注意，只有在用几何图形管理器指定了几何图形后，窗口小部件才会出现。遗漏几何图形规范，然后在创建窗口小部件时却一无所获，这是一个常见的早期错误。窗口小部件仅在对其应用了 &lt;code&gt;pack()&lt;/code&gt; 的pack（）方法之后才会显示。</target>
        </trans-unit>
        <trans-unit id="2968c2dcd25aa32f9a9ffad2dfcf5c7c74536aa8" translate="yes" xml:space="preserve">
          <source>Note that win32 system dlls like &lt;code&gt;kernel32&lt;/code&gt; and &lt;code&gt;user32&lt;/code&gt; often export ANSI as well as UNICODE versions of a function. The UNICODE version is exported with an &lt;code&gt;W&lt;/code&gt; appended to the name, while the ANSI version is exported with an &lt;code&gt;A&lt;/code&gt; appended to the name. The win32 &lt;code&gt;GetModuleHandle&lt;/code&gt; function, which returns a &lt;em&gt;module handle&lt;/em&gt; for a given module name, has the following C prototype, and a macro is used to expose one of them as &lt;code&gt;GetModuleHandle&lt;/code&gt; depending on whether UNICODE is defined or not:</source>
          <target state="translated">请注意，像 &lt;code&gt;kernel32&lt;/code&gt; 和 &lt;code&gt;user32&lt;/code&gt; 这样的win32系统dll 通常会导出ANSI以及函数的UNICODE版本。导出的UNICODE版本的名称后面带有 &lt;code&gt;W&lt;/code&gt; ，而导出的ANSI版本的名称后面带有 &lt;code&gt;A&lt;/code&gt; 。win32 &lt;code&gt;GetModuleHandle&lt;/code&gt; 函数返回给定模块名称的&lt;em&gt;模块句柄&lt;/em&gt;，它具有以下C原型，并且根据是否定义了UNICODE，使用一个宏将其中一个作为 &lt;code&gt;GetModuleHandle&lt;/code&gt; 公开：</target>
        </trans-unit>
        <trans-unit id="2e484f1a68e220911d28f836ad1681a6e8b9beab" translate="yes" xml:space="preserve">
          <source>Note that you must have read the whole response before you can send a new request to the server.</source>
          <target state="translated">请注意,在向服务器发送新的请求之前,你必须先阅读整个响应。</target>
        </trans-unit>
        <trans-unit id="03c8f7f230406149e0b90ed811820d038dcfd819" translate="yes" xml:space="preserve">
          <source>Note that, as with floating point numbers, &lt;code&gt;v is w&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; imply &lt;code&gt;v == w&lt;/code&gt; for memoryview objects.</source>
          <target state="translated">需要注意的是，如浮点数， &lt;code&gt;v is w&lt;/code&gt; 并&lt;em&gt;没有&lt;/em&gt;暗示 &lt;code&gt;v == w&lt;/code&gt; 为memoryview对象。</target>
        </trans-unit>
        <trans-unit id="84e31b16758bcc976ec2d505de7ab96563d8cfa9" translate="yes" xml:space="preserve">
          <source>Note that, because of normalization, &lt;code&gt;timedelta.max&lt;/code&gt; &amp;gt; &lt;code&gt;-timedelta.min&lt;/code&gt;. &lt;code&gt;-timedelta.max&lt;/code&gt; is not representable as a &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">注意，由于标准化， &lt;code&gt;timedelta.max&lt;/code&gt; &amp;gt; &lt;code&gt;-timedelta.min&lt;/code&gt; 。 &lt;code&gt;-timedelta.max&lt;/code&gt; 不能表示为&lt;a href=&quot;#datetime.timedelta&quot;&gt; &lt;code&gt;timedelta&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="d2fa3178c8ace73525d94f281c6241f693463f13" translate="yes" xml:space="preserve">
          <source>Note that, unlike &lt;a href=&quot;#runpy.run_module&quot;&gt;&lt;code&gt;run_module()&lt;/code&gt;&lt;/a&gt;, the alterations made to &lt;a href=&quot;sys#module-sys&quot;&gt;&lt;code&gt;sys&lt;/code&gt;&lt;/a&gt; are not optional in this function as these adjustments are essential to allowing the execution of sys.path entries. As the thread-safety limitations still apply, use of this function in threaded code should be either serialised with the import lock or delegated to a separate process.</source>
          <target state="translated">请注意，与&lt;a href=&quot;#runpy.run_module&quot;&gt; &lt;code&gt;run_module()&lt;/code&gt; &lt;/a&gt;不同，对&lt;a href=&quot;sys#module-sys&quot;&gt; &lt;code&gt;sys&lt;/code&gt; &lt;/a&gt;所做的更改在此函数中不是可选的，因为这些调整对于允许执行sys.path项至关重要。由于线程安全限制仍然适用，因此应在线程代码中使用导入锁序列化此函数，或将其委派给单独的进程。</target>
        </trans-unit>
        <trans-unit id="f1c5a3a10c1525bb6f32e3ae69372905a7415c70" translate="yes" xml:space="preserve">
          <source>Note the difference between &lt;code&gt;'@'&lt;/code&gt; and &lt;code&gt;'='&lt;/code&gt;: both use native byte order, but the size and alignment of the latter is standardized.</source>
          <target state="translated">注意 &lt;code&gt;'@'&lt;/code&gt; 和 &lt;code&gt;'='&lt;/code&gt; 之间的区别：两者都使用本机字节顺序，但是后者的大小和对齐方式是标准化的。</target>
        </trans-unit>
        <trans-unit id="394e74fcbbfae11d61ce5fd9d0741b358dc5b679" translate="yes" xml:space="preserve">
          <source>Note the unusual calling syntax: the &lt;em&gt;first&lt;/em&gt; argument is optional, and the second is required. This is a historical artifact for compatibility with the older &lt;code&gt;linuxaudiodev&lt;/code&gt; module which &lt;a href=&quot;#module-ossaudiodev&quot;&gt;&lt;code&gt;ossaudiodev&lt;/code&gt;&lt;/a&gt; supersedes.</source>
          <target state="translated">请注意不同寻常的调用语法：第&lt;em&gt;一个&lt;/em&gt;参数是可选的，第二个参数是必需的。这是与&lt;a href=&quot;#module-ossaudiodev&quot;&gt; &lt;code&gt;ossaudiodev&lt;/code&gt; &lt;/a&gt;取代的旧版 &lt;code&gt;linuxaudiodev&lt;/code&gt; 模块兼容的历史产物。</target>
        </trans-unit>
        <trans-unit id="7af185c96012df581e5e0886681b5f83b41d3210" translate="yes" xml:space="preserve">
          <source>Note there are performance considerations involved with the &lt;em&gt;size&lt;/em&gt; parameter. For optimal performance, it is usually best to use the arraysize attribute. If the &lt;em&gt;size&lt;/em&gt; parameter is used, then it is best for it to retain the same value from one &lt;a href=&quot;#sqlite3.Cursor.fetchmany&quot;&gt;&lt;code&gt;fetchmany()&lt;/code&gt;&lt;/a&gt; call to the next.</source>
          <target state="translated">请注意，&lt;em&gt;大小&lt;/em&gt;参数涉及性能方面的考虑。为了获得最佳性能，通常最好使用arraysize属性。如果使用了&lt;em&gt;size&lt;/em&gt;参数，则最好从一个&lt;a href=&quot;#sqlite3.Cursor.fetchmany&quot;&gt; &lt;code&gt;fetchmany()&lt;/code&gt; &lt;/a&gt;调用到下一个调用保留相同的值。</target>
        </trans-unit>
        <trans-unit id="4fe587f2f04237cccac255c57a5d7d8af7041796" translate="yes" xml:space="preserve">
          <source>Note, however, that it&amp;rsquo;s not recommended from a security perspective to spit out diagnostics to any old user; ideally, you should have to do something special to enable diagnostic output, which is why the default implementation doesn&amp;rsquo;t include any.</source>
          <target state="translated">但是请注意，从安全角度来看，不建议向任何老用户吐出诊断信息。理想情况下，您必须执行一些特殊的操作才能启用诊断输出，这就是默认实现不包含任何内容的原因。</target>
        </trans-unit>
        <trans-unit id="762ab7548d9281c2411acf4c20182504bff18c33" translate="yes" xml:space="preserve">
          <source>Note, that the data read is buffered in memory, so do not use this method if the data size is large or unlimited.</source>
          <target state="translated">需要注意的是,读取的数据是在内存中缓冲的,所以如果数据量大或无限制,不要使用此方法。</target>
        </trans-unit>
        <trans-unit id="88aebce2f9074a5fa8e2b3fc150edc9adfd4b5a6" translate="yes" xml:space="preserve">
          <source>Note, the &lt;em&gt;default&lt;/em&gt; will be &lt;code&gt;None&lt;/code&gt; unless explicitly set to &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="translated">注意，在&lt;em&gt;默认情况下&lt;/em&gt;会 &lt;code&gt;None&lt;/code&gt; ，除非明确地设置为&lt;em&gt;0&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c1bc85960916ca65e7a3c8ddd82bfd13d344d14f" translate="yes" xml:space="preserve">
          <source>Note, the &lt;em&gt;elem&lt;/em&gt; argument to the &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#frozenset.discard&quot;&gt;&lt;code&gt;discard()&lt;/code&gt;&lt;/a&gt; methods may be a set. To support searching for an equivalent frozenset, a temporary one is created from &lt;em&gt;elem&lt;/em&gt;.</source>
          <target state="translated">注意，&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__contains__&quot;&gt; &lt;code&gt;__contains__()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#frozenset.remove&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#frozenset.discard&quot;&gt; &lt;code&gt;discard()&lt;/code&gt; &lt;/a&gt;方法的&lt;em&gt;elem&lt;/em&gt;参数可以是一个集合。为了支持搜索等效的冻结集，将从&lt;em&gt;elem&lt;/em&gt;创建一个临时集。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="20c05024379c7080e1a1d19313a4b57c40b19b31" translate="yes" xml:space="preserve">
          <source>Note, the &lt;em&gt;elem&lt;/em&gt; argument to the &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__contains__&quot;&gt;&lt;code&gt;__contains__()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.remove&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#frozenset.discard&quot;&gt;&lt;code&gt;discard()&lt;/code&gt;&lt;/a&gt; methods may be a set. To support searching for an equivalent frozenset, a temporary one is created from &lt;em&gt;elem&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce50e6ce36b2bce4757cdba44683aef09df0f6a" translate="yes" xml:space="preserve">
          <source>Note, the iteration order of a &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap()&lt;/code&gt;&lt;/a&gt; is determined by scanning the mappings last to first:</source>
          <target state="translated">注意，&lt;a href=&quot;#collections.ChainMap&quot;&gt; &lt;code&gt;ChainMap()&lt;/code&gt; &lt;/a&gt;的迭代顺序是通过扫描从最后到第一个的映射来确定的：</target>
        </trans-unit>
        <trans-unit id="ca3dedf0fa71983b6357e6e9bae7d93a1fd17b41" translate="yes" xml:space="preserve">
          <source>Note, the non-operator versions of &lt;a href=&quot;#frozenset.union&quot;&gt;&lt;code&gt;union()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.intersection&quot;&gt;&lt;code&gt;intersection()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.difference&quot;&gt;&lt;code&gt;difference()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#frozenset.symmetric_difference&quot;&gt;&lt;code&gt;symmetric_difference()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.issubset&quot;&gt;&lt;code&gt;issubset()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#frozenset.issuperset&quot;&gt;&lt;code&gt;issuperset()&lt;/code&gt;&lt;/a&gt; methods will accept any iterable as an argument. In contrast, their operator based counterparts require their arguments to be sets. This precludes error-prone constructions like &lt;code&gt;set('abc') &amp;amp; 'cbs'&lt;/code&gt; in favor of the more readable &lt;code&gt;set('abc').intersection('cbs')&lt;/code&gt;.</source>
          <target state="translated">请注意，&lt;a href=&quot;#frozenset.union&quot;&gt; &lt;code&gt;union()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#frozenset.intersection&quot;&gt; &lt;code&gt;intersection()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#frozenset.difference&quot;&gt; &lt;code&gt;difference()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#frozenset.symmetric_difference&quot;&gt; &lt;code&gt;symmetric_difference()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#frozenset.issubset&quot;&gt; &lt;code&gt;issubset()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#frozenset.issuperset&quot;&gt; &lt;code&gt;issuperset()&lt;/code&gt; &lt;/a&gt;方法的非运算符版本将接受任何可迭代的参数。相比之下，基于运算符的对应项要求将其参数设为集合。这排除了容易出错的结构（如 &lt;code&gt;set('abc') &amp;amp; 'cbs'&lt;/code&gt; ，而倾向于更具可读性的 &lt;code&gt;set('abc').intersection('cbs')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="051512041c44a2517e704de51f5530d92cd85cdd" translate="yes" xml:space="preserve">
          <source>Note, the non-operator versions of the &lt;a href=&quot;#frozenset.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.intersection_update&quot;&gt;&lt;code&gt;intersection_update()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#frozenset.difference_update&quot;&gt;&lt;code&gt;difference_update()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#frozenset.symmetric_difference_update&quot;&gt;&lt;code&gt;symmetric_difference_update()&lt;/code&gt;&lt;/a&gt; methods will accept any iterable as an argument.</source>
          <target state="translated">请注意，&lt;a href=&quot;#frozenset.update&quot;&gt; &lt;code&gt;update()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#frozenset.intersection_update&quot;&gt; &lt;code&gt;intersection_update()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#frozenset.difference_update&quot;&gt; &lt;code&gt;difference_update()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#frozenset.symmetric_difference_update&quot;&gt; &lt;code&gt;symmetric_difference_update()&lt;/code&gt; &lt;/a&gt;方法的非运算符版本将接受任何可迭代的参数。</target>
        </trans-unit>
        <trans-unit id="06c6acd1a7b124604a708af0e14a30f685c53d1e" translate="yes" xml:space="preserve">
          <source>Note, this decorator interferes with the operation of &lt;a href=&quot;https://www.python.org/dev/peps/pep-0412&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 412&lt;/strong&gt;&lt;/a&gt; key-sharing dictionaries. This means that instance dictionaries can take more space than usual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112b3520cc7fea120e7deb94779035341ecfd7d1" translate="yes" xml:space="preserve">
          <source>Note, this member of the toolkit may require significant auxiliary storage (depending on the length of the iterable).</source>
          <target state="translated">注意,工具箱中的这个成员可能需要大量的辅助存储(取决于可迭代的长度)。</target>
        </trans-unit>
        <trans-unit id="13a1e86095e2b68b8a7fa1905437c2cc90128cdc" translate="yes" xml:space="preserve">
          <source>Note: &lt;a href=&quot;#socket.gethostname&quot;&gt;&lt;code&gt;gethostname()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t always return the fully qualified domain name; use &lt;a href=&quot;#socket.getfqdn&quot;&gt;&lt;code&gt;getfqdn()&lt;/code&gt;&lt;/a&gt; for that.</source>
          <target state="translated">注意：&lt;a href=&quot;#socket.gethostname&quot;&gt; &lt;code&gt;gethostname()&lt;/code&gt; &lt;/a&gt;并不总是返回标准域名。&lt;a href=&quot;#socket.getfqdn&quot;&gt; &lt;code&gt;getfqdn()&lt;/code&gt; &lt;/a&gt;使用getfqdn（）。</target>
        </trans-unit>
        <trans-unit id="940b0549d5a0a4041429b4eecbc4dbeb233620a3" translate="yes" xml:space="preserve">
          <source>Note: &lt;strong&gt;The policy keyword should always be specified&lt;/strong&gt;; The default will change to &lt;a href=&quot;email.policy#email.policy.default&quot;&gt;&lt;code&gt;email.policy.default&lt;/code&gt;&lt;/a&gt; in a future version of Python.</source>
          <target state="translated">注意：&lt;strong&gt;应该始终指定policy关键字&lt;/strong&gt;；在将来的Python版本中，默认值将更改为&lt;a href=&quot;email.policy#email.policy.default&quot;&gt; &lt;code&gt;email.policy.default&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e2cbdd7a2167c420ef2fe1b094a5250391cb7403" translate="yes" xml:space="preserve">
          <source>Note: If you just want to pass a pointer to an object to a foreign function call, you should use &lt;code&gt;byref(obj)&lt;/code&gt; which is much faster.</source>
          <target state="translated">注意：如果只想将指向对象的指针传递给外部函数调用，则应使用 &lt;code&gt;byref(obj)&lt;/code&gt; ，这要快得多。</target>
        </trans-unit>
        <trans-unit id="77e52fe2400941c708aa213fb2c6d50d40a1c8b9" translate="yes" xml:space="preserve">
          <source>Note: Some code samples reference the ctypes &lt;a href=&quot;#ctypes.c_int&quot;&gt;&lt;code&gt;c_int&lt;/code&gt;&lt;/a&gt; type. On platforms where &lt;code&gt;sizeof(long) == sizeof(int)&lt;/code&gt; it is an alias to &lt;a href=&quot;#ctypes.c_long&quot;&gt;&lt;code&gt;c_long&lt;/code&gt;&lt;/a&gt;. So, you should not be confused if &lt;a href=&quot;#ctypes.c_long&quot;&gt;&lt;code&gt;c_long&lt;/code&gt;&lt;/a&gt; is printed if you would expect &lt;a href=&quot;#ctypes.c_int&quot;&gt;&lt;code&gt;c_int&lt;/code&gt;&lt;/a&gt; &amp;mdash; they are actually the same type.</source>
          <target state="translated">注意：一些代码示例引用了ctypes &lt;a href=&quot;#ctypes.c_int&quot;&gt; &lt;code&gt;c_int&lt;/code&gt; &lt;/a&gt;类型。在 &lt;code&gt;sizeof(long) == sizeof(int)&lt;/code&gt; 平台上，它是&lt;a href=&quot;#ctypes.c_long&quot;&gt; &lt;code&gt;c_long&lt;/code&gt; &lt;/a&gt;的别名。因此，如果&lt;a href=&quot;#ctypes.c_long&quot;&gt; &lt;code&gt;c_long&lt;/code&gt; &lt;/a&gt;则不要混淆是否打印&lt;a href=&quot;#ctypes.c_int&quot;&gt; &lt;code&gt;c_int&lt;/code&gt; &lt;/a&gt;，它们实际上是相同的类型。</target>
        </trans-unit>
        <trans-unit id="3e0eb9ee31e1587e739522fcda6c31ae3034a95a" translate="yes" xml:space="preserve">
          <source>Note: The code samples in this tutorial use &lt;a href=&quot;doctest#module-doctest&quot;&gt;&lt;code&gt;doctest&lt;/code&gt;&lt;/a&gt; to make sure that they actually work. Since some code samples behave differently under Linux, Windows, or Mac OS X, they contain doctest directives in comments.</source>
          <target state="translated">注意：本教程中的代码示例使用&lt;a href=&quot;doctest#module-doctest&quot;&gt; &lt;code&gt;doctest&lt;/code&gt; &lt;/a&gt;来确保它们确实有效。由于某些代码示例在Linux，Windows或Mac OS X下的行为不同，因此它们在注释中包含doctest指令。</target>
        </trans-unit>
        <trans-unit id="953b3d8abb71583778699e086e9ed766999d86c8" translate="yes" xml:space="preserve">
          <source>Note: The functions do not require the data given to them to be sorted. However, for reading convenience, most of the examples show sorted sequences.</source>
          <target state="translated">注:这些函数不要求给它们的数据进行排序。但是,为了方便阅读,大多数例子都显示了排序的序列。</target>
        </trans-unit>
        <trans-unit id="a1c53c3229edec4d12d1c96e481f3cb1be441c54" translate="yes" xml:space="preserve">
          <source>Note: an awakened thread does not actually return from its &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; call until it can reacquire the lock. Since &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; does not release the lock, its caller should.</source>
          <target state="translated">注意：唤醒的线程直到可以重新获取锁才真正从其&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;调用返回。由于&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;不会释放锁，因此它的调用者应该。</target>
        </trans-unit>
        <trans-unit id="0a990121c7b5c3a78884ba5ed2602b8ed6c392e4" translate="yes" xml:space="preserve">
          <source>Note: if your enumeration defines &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; then whatever value(s) were given to the enum member will be passed into those methods. See &lt;a href=&quot;#planet&quot;&gt;Planet&lt;/a&gt; for an example.</source>
          <target state="translated">注意：如果您的枚举定义了&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__new__&quot;&gt; &lt;code&gt;__new__()&lt;/code&gt; &lt;/a&gt;和/或&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__init__&quot;&gt; &lt;code&gt;__init__()&lt;/code&gt; &lt;/a&gt;则赋予枚举成员的任何值都将传递到这些方法中。有关示例，请参见&lt;a href=&quot;#planet&quot;&gt;Planet&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98eb683dd61fdd0bb9d904a6f22ab048a5a0792e" translate="yes" xml:space="preserve">
          <source>Note: if your enumeration defines &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__new__&quot;&gt;&lt;code&gt;__new__()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__init__&quot;&gt;&lt;code&gt;__init__()&lt;/code&gt;&lt;/a&gt; then any value(s) given to the enum member will be passed into those methods. See &lt;a href=&quot;#planet&quot;&gt;Planet&lt;/a&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bfb70d8bc59b6a601bb652e3e1e16fb71419ac" translate="yes" xml:space="preserve">
          <source>Note: loop may be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">注意：循环可能为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcbf716e0a93fc3a46f989b0950001ff549cbbb0" translate="yes" xml:space="preserve">
          <source>Note: the &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; methods don&amp;rsquo;t release the lock; this means that the thread or threads awakened will not return from their &lt;a href=&quot;#threading.Condition.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; call immediately, but only when the thread that called &lt;a href=&quot;#threading.Condition.notify&quot;&gt;&lt;code&gt;notify()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#threading.Condition.notify_all&quot;&gt;&lt;code&gt;notify_all()&lt;/code&gt;&lt;/a&gt; finally relinquishes ownership of the lock.</source>
          <target state="translated">注意：&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;方法不会释放锁；这意味着唤醒的一个或多个线程不会立即从其&lt;a href=&quot;#threading.Condition.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;调用中返回，而仅在调用&lt;a href=&quot;#threading.Condition.notify&quot;&gt; &lt;code&gt;notify()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#threading.Condition.notify_all&quot;&gt; &lt;code&gt;notify_all()&lt;/code&gt; &lt;/a&gt;的线程最终放弃该锁的所有权时才返回。</target>
        </trans-unit>
        <trans-unit id="20fdf933b6a8eed945310d963fa5e36f40c7100f" translate="yes" xml:space="preserve">
          <source>Note: this function may not be able to retrieve all attributes that getattr can fetch (like dynamically created attributes) and may find attributes that getattr can&amp;rsquo;t (like descriptors that raise AttributeError). It can also return descriptors objects instead of instance members.</source>
          <target state="translated">注意：此函数可能无法检索getattr可以获取的所有属性（如动态创建的属性），并且可能会找到getattr无法获取的属性（如引发AttributeError的描述符）。它还可以返回描述符对象而不是实例成员。</target>
        </trans-unit>
        <trans-unit id="cbe152fdfb8ac8116096c5833a5da72fe28dcdf6" translate="yes" xml:space="preserve">
          <source>Notebook</source>
          <target state="translated">Notebook</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="bd2179fffb660660b08dc66587d54c4693ebd949" translate="yes" xml:space="preserve">
          <source>Notes for type implementors</source>
          <target state="translated">类型实现者须知</target>
        </trans-unit>
        <trans-unit id="7d429a334eb57d5c3e2b4354221adcdf790abbaa" translate="yes" xml:space="preserve">
          <source>Notes on Maildir by its inventor. Includes an updated name-creation scheme and details on &amp;ldquo;info&amp;rdquo; semantics.</source>
          <target state="translated">Maildir的发明者的注释。包括更新的名称创建方案和有关&amp;ldquo;信息&amp;rdquo;语义的详细信息。</target>
        </trans-unit>
        <trans-unit id="39979ab954b5d6a8f0a293f5c81ebd913e2a234b" translate="yes" xml:space="preserve">
          <source>Notes on Reproducibility</source>
          <target state="translated">关于可重复性的说明</target>
        </trans-unit>
        <trans-unit id="994bfa04566317a983e1a93b7ff9716e4f306af7" translate="yes" xml:space="preserve">
          <source>Notes on availability</source>
          <target state="translated">关于可用性的说明</target>
        </trans-unit>
        <trans-unit id="96ea6c9601efc087de48baaaf665d4181463804b" translate="yes" xml:space="preserve">
          <source>Notes on non-blocking sockets</source>
          <target state="translated">非阻塞式插座的注意事项</target>
        </trans-unit>
        <trans-unit id="3529fba1dfaa4d96d92ade4092c1a3d7d76cb625" translate="yes" xml:space="preserve">
          <source>Notes on socket timeouts</source>
          <target state="translated">插座超时的注意事项</target>
        </trans-unit>
        <trans-unit id="4183ad6f00d027788e1933ebd67bd6184f44f2f1" translate="yes" xml:space="preserve">
          <source>Notes on the availability of these functions:</source>
          <target state="translated">关于这些功能可用性的说明。</target>
        </trans-unit>
        <trans-unit id="4ab3dde9df12858e1f1d64a466b42281fd1c43e0" translate="yes" xml:space="preserve">
          <source>Notes on using &lt;a href=&quot;#collections.abc.Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#collections.abc.MutableSet&quot;&gt;&lt;code&gt;MutableSet&lt;/code&gt;&lt;/a&gt; as a mixin:</source>
          <target state="translated">关于将&lt;a href=&quot;#collections.abc.Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#collections.abc.MutableSet&quot;&gt; &lt;code&gt;MutableSet&lt;/code&gt; &lt;/a&gt;用作混合的注意事项：</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="2174435297546a50c24c84751b2ef81fc8fb5831" translate="yes" xml:space="preserve">
          <source>Notes: (1) For most applications the only &lt;em&gt;preferencelist&lt;/em&gt; combinations that really make sense are &lt;code&gt;('plain',)&lt;/code&gt;, &lt;code&gt;('html', 'plain')&lt;/code&gt;, and the default &lt;code&gt;('related', 'html', 'plain')&lt;/code&gt;. (2) Because matching starts with the object on which &lt;code&gt;get_body&lt;/code&gt; is called, calling &lt;code&gt;get_body&lt;/code&gt; on a &lt;code&gt;multipart/related&lt;/code&gt; will return the object itself unless &lt;em&gt;preferencelist&lt;/em&gt; has a non-default value. (3) Messages (or message parts) that do not specify a &lt;em&gt;Content-Type&lt;/em&gt; or whose &lt;em&gt;Content-Type&lt;/em&gt; header is invalid will be treated as if they are of type &lt;code&gt;text/plain&lt;/code&gt;, which may occasionally cause &lt;code&gt;get_body&lt;/code&gt; to return unexpected results.</source>
          <target state="translated">注意：（1）对于大多数应用程序，唯一真正有意义的&lt;em&gt;首选项列表&lt;/em&gt;组合是 &lt;code&gt;('plain',)&lt;/code&gt; ， &lt;code&gt;('html', 'plain')&lt;/code&gt; 和默认值 &lt;code&gt;('related', 'html', 'plain')&lt;/code&gt; 。 （2）由于与对象的匹配开始在其上 &lt;code&gt;get_body&lt;/code&gt; 被调用时，调用 &lt;code&gt;get_body&lt;/code&gt; 上的 &lt;code&gt;multipart/related&lt;/code&gt; 将返回对象本身除非&lt;em&gt;preferencelist&lt;/em&gt;具有非默认值。 （3）未指定&lt;em&gt;Content-Type&lt;/em&gt;或&lt;em&gt;Content-Type&lt;/em&gt;标头无效的消息（或消息部分）将被视为 &lt;code&gt;text/plain&lt;/code&gt; 类型，有时可能会导致 &lt;code&gt;get_body&lt;/code&gt; 返回意外结果。</target>
        </trans-unit>
        <trans-unit id="409919d20a4d8cdab37ba3de46d6036e52228eae" translate="yes" xml:space="preserve">
          <source>Nothing is specified in this locale.</source>
          <target state="translated">在这个区域没有指定任何东西。</target>
        </trans-unit>
        <trans-unit id="f5c76d766938924c4560f425f6d8538403d340e8" translate="yes" xml:space="preserve">
          <source>Notice here how we wanted the &lt;em&gt;Subject&lt;/em&gt; field to contain a non-ASCII character? We did this by creating a &lt;a href=&quot;#email.header.Header&quot;&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/a&gt; instance and passing in the character set that the byte string was encoded in. When the subsequent &lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt;&lt;code&gt;Message&lt;/code&gt;&lt;/a&gt; instance was flattened, the &lt;em&gt;Subject&lt;/em&gt; field was properly &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; encoded. MIME-aware mail readers would show this header using the embedded ISO-8859-1 character.</source>
          <target state="translated">注意这里我们是如何希望&amp;ldquo; &lt;em&gt;主题&amp;rdquo;&lt;/em&gt;字段包含非ASCII字符的？为此，我们创建了一个&lt;a href=&quot;#email.header.Header&quot;&gt; &lt;code&gt;Header&lt;/code&gt; &lt;/a&gt;实例，并传入了用于编码字节字符串的字符集。当平整后续的&lt;a href=&quot;email.compat32-message#email.message.Message&quot;&gt; &lt;code&gt;Message&lt;/code&gt; &lt;/a&gt;实例时，&lt;em&gt;Subject&lt;/em&gt;字段已正确进行&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-8&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;编码。支持MIME的邮件阅读器将使用嵌入式ISO-8859-1字符显示此标头。</target>
        </trans-unit>
        <trans-unit id="30aaa667ceadb867eac4109ef078332b809dce4f" translate="yes" xml:space="preserve">
          <source>Notice how the widget field of the event is being accessed in the &lt;code&gt;turn_red()&lt;/code&gt; callback. This field contains the widget that caught the X event. The following table lists the other event fields you can access, and how they are denoted in Tk, which can be useful when referring to the Tk man pages.</source>
          <target state="translated">注意在 &lt;code&gt;turn_red()&lt;/code&gt; 回调中如何访问事件的窗口小部件字段。该字段包含捕获X事件的小部件。下表列出了您可以访问的其他事件字段，以及它们在Tk中的表示方式，这在参考Tk手册页时可能很有用。</target>
        </trans-unit>
        <trans-unit id="96b9beb737cf3231c7449d825ff3410688086c28" translate="yes" xml:space="preserve">
          <source>Notice that applying &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str()&lt;/code&gt;&lt;/a&gt; to a proxy will return the representation of the referent, whereas applying &lt;a href=&quot;functions#repr&quot;&gt;&lt;code&gt;repr()&lt;/code&gt;&lt;/a&gt; will return the representation of the proxy.</source>
          <target state="translated">请注意，将&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str()&lt;/code&gt; &lt;/a&gt;应用于代理将返回所引用对象的表示，而将&lt;a href=&quot;functions#repr&quot;&gt; &lt;code&gt;repr()&lt;/code&gt; &lt;/a&gt;应用于将返回代理的表示。</target>
        </trans-unit>
        <trans-unit id="aa30b318f59f62feb7be7cc735b127ba14e6692b" translate="yes" xml:space="preserve">
          <source>Notice that no typechecking is performed when assigning a value of type &lt;a href=&quot;#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt; to a more precise type. For example, the static type checker did not report an error when assigning &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;s&lt;/code&gt; even though &lt;code&gt;s&lt;/code&gt; was declared to be of type &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; and receives an &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; value at runtime!</source>
          <target state="translated">请注意，将类型&lt;a href=&quot;#typing.Any&quot;&gt; &lt;code&gt;Any&lt;/code&gt; &lt;/a&gt;的值分配给更精确的类型时，不会执行类型检查。例如，即使将 &lt;code&gt;s&lt;/code&gt; 声明为&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;类型并在运行时接收到&lt;a href=&quot;functions#int&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;值，静态类型检查器在向 &lt;code&gt;s&lt;/code&gt; 分配 &lt;code&gt;a&lt;/code&gt; 时也不会报告错误！</target>
        </trans-unit>
        <trans-unit id="376b3de67409d19233b0e4907b9f553ccc115c20" translate="yes" xml:space="preserve">
          <source>Notice that on Windows, it&amp;rsquo;s a much smaller set.</source>
          <target state="translated">请注意，在Windows上，它的设置要小得多。</target>
        </trans-unit>
        <trans-unit id="2cf0b6869f1edb55f90d57ea0a5832b1aa4e18b8" translate="yes" xml:space="preserve">
          <source>Notice that the behavior of this module depends on the actual implementation of the &lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt(3)&lt;/a&gt;&lt;/em&gt; routine in the running system. Therefore, any extensions available on the current implementation will also be available on this module.</source>
          <target state="translated">请注意，此模块的行为取决于正在运行的系统中&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/crypt(3)&quot;&gt;crypt（3）&lt;/a&gt;&lt;/em&gt;例程的实际实现。因此，当前实现上可用的任何扩展也将在此模块上可用。</target>
        </trans-unit>
        <trans-unit id="5c0c4d04cc2d3987360c07fbe4eeb4ed6e5e1e21" translate="yes" xml:space="preserve">
          <source>Now add the Shape to the Screen&amp;rsquo;s shapelist and use it:</source>
          <target state="translated">现在，将形状添加到屏幕的形状列表中并使用它：</target>
        </trans-unit>
        <trans-unit id="0b5aed1a03f8c35d4b559d5f5099d36802ea5696" translate="yes" xml:space="preserve">
          <source>Now that we have created and saved a configuration file, let&amp;rsquo;s read it back and explore the data it holds.</source>
          <target state="translated">现在我们已经创建并保存了配置文件，让我们回读它并浏览其中的数据。</target>
        </trans-unit>
        <trans-unit id="62f8769fc4f592eaaff3b60938b72976e8a63ca6" translate="yes" xml:space="preserve">
          <source>Now the SSL channel is established and the certificate verified, you can proceed to talk with the server:</source>
          <target state="translated">现在SSL通道已经建立,证书也验证了,你可以继续和服务器对话了。</target>
        </trans-unit>
        <trans-unit id="31924ee76d82b9e37715f009e523c241db6e0226" translate="yes" xml:space="preserve">
          <source>Now we can actually compare the two items and return a useful result:</source>
          <target state="translated">现在我们可以实际比较这两个项目,并返回一个有用的结果。</target>
        </trans-unit>
        <trans-unit id="f5eeebbc7cb554fdc7b5389ad448df86c1df182b" translate="yes" xml:space="preserve">
          <source>Now we plug &lt;a href=&quot;#sqlite3.Row&quot;&gt;&lt;code&gt;Row&lt;/code&gt;&lt;/a&gt; in:</source>
          <target state="translated">现在我们将&lt;a href=&quot;#sqlite3.Row&quot;&gt; &lt;code&gt;Row&lt;/code&gt; &lt;/a&gt;插入：</target>
        </trans-unit>
        <trans-unit id="8cb4116ac86e771beb460431be65c48158d5f51c" translate="yes" xml:space="preserve">
          <source>Now we want to test &lt;code&gt;some_function&lt;/code&gt; but we want to mock out &lt;code&gt;SomeClass&lt;/code&gt; using &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;. The problem is that when we import module b, which we will have to do then it imports &lt;code&gt;SomeClass&lt;/code&gt; from module a. If we use &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; to mock out &lt;code&gt;a.SomeClass&lt;/code&gt; then it will have no effect on our test; module b already has a reference to the &lt;em&gt;real&lt;/em&gt;&lt;code&gt;SomeClass&lt;/code&gt; and it looks like our patching had no effect.</source>
          <target state="translated">现在我们要测试 &lt;code&gt;some_function&lt;/code&gt; ,但是我们想使用&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;模拟出 &lt;code&gt;SomeClass&lt;/code&gt; 。问题在于，当我们导入模块b时（我们将必须执行此操作），它将从模块a 导入 &lt;code&gt;SomeClass&lt;/code&gt; 。如果我们使用&lt;a href=&quot;#unittest.mock.patch&quot;&gt; &lt;code&gt;patch()&lt;/code&gt; &lt;/a&gt;模拟 &lt;code&gt;a.SomeClass&lt;/code&gt; ,那么它将对我们的测试没有影响；模块b已经有一个对&lt;em&gt;真正的&lt;/em&gt; &lt;code&gt;SomeClass&lt;/code&gt; 的引用，看来我们的修补没有任何效果。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a1ed0c7c2d81859eda6b5cc833464eb0dd988f38" translate="yes" xml:space="preserve">
          <source>Now you need to make the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module know that what you select from the database is actually a point. There are two ways of doing this:</source>
          <target state="translated">现在，您需要使&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;模块知道从数据库中选择的内容实际上是一个重点。有两种方法可以做到这一点：</target>
        </trans-unit>
        <trans-unit id="d29ec33880afd873623e441fe4abecf453440c79" translate="yes" xml:space="preserve">
          <source>Now you want to store the point in a single SQLite column. First you&amp;rsquo;ll have to choose one of the supported types first to be used for representing the point. Let&amp;rsquo;s just use str and separate the coordinates using a semicolon. Then you need to give your class a method &lt;code&gt;__conform__(self, protocol)&lt;/code&gt; which must return the converted value. The parameter &lt;em&gt;protocol&lt;/em&gt; will be &lt;code&gt;PrepareProtocol&lt;/code&gt;.</source>
          <target state="translated">现在，您要将点存储在单个SQLite列中。首先，您必须先选择一种受支持的类型以用于表示该点。让我们只使用str并使用分号分隔坐标。然后，您需要为您的类提供 &lt;code&gt;__conform__(self, protocol)&lt;/code&gt; 方法，该方法必须返回转换后的值。参数&lt;em&gt;协议&lt;/em&gt;为 &lt;code&gt;PrepareProtocol&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2804678e12fe962caee888447dd00ac076fe71ea" translate="yes" xml:space="preserve">
          <source>Now you want to store the point in a single SQLite column. First you&amp;rsquo;ll have to choose one of the supported types to be used for representing the point. Let&amp;rsquo;s just use str and separate the coordinates using a semicolon. Then you need to give your class a method &lt;code&gt;__conform__(self, protocol)&lt;/code&gt; which must return the converted value. The parameter &lt;em&gt;protocol&lt;/em&gt; will be &lt;code&gt;PrepareProtocol&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6befe568a0abd7fa9cb859e17c6a8a729ffcf6a" translate="yes" xml:space="preserve">
          <source>Null-terminated string containing references to environment variables (&lt;code&gt;%PATH%&lt;/code&gt;).</source>
          <target state="translated">空终止的字符串，包含对环境变量（ &lt;code&gt;%PATH%&lt;/code&gt; ）的引用。</target>
        </trans-unit>
        <trans-unit id="19a9339a57b70f4cc49edd3bf00a059e1a50c395" translate="yes" xml:space="preserve">
          <source>NullHandler</source>
          <target state="translated">NullHandler</target>
        </trans-unit>
        <trans-unit id="fe1b2483239a18901875b04c1af675561eca1503" translate="yes" xml:space="preserve">
          <source>Number of 512-byte blocks allocated for file. This may be smaller than &lt;a href=&quot;#os.stat_result.st_size&quot;&gt;&lt;code&gt;st_size&lt;/code&gt;&lt;/a&gt;/512 when the file has holes.</source>
          <target state="translated">为文件分配的512字节块数。文件有孔时，它可能小于&lt;a href=&quot;#os.stat_result.st_size&quot;&gt; &lt;code&gt;st_size&lt;/code&gt; &lt;/a&gt; / 512。</target>
        </trans-unit>
        <trans-unit id="9bd9aeb87537b2525d0c88b89b62a820757528d3" translate="yes" xml:space="preserve">
          <source>Number of days after password expires until account is disabled</source>
          <target state="translated">密码过期后到账户被禁用的天数</target>
        </trans-unit>
        <trans-unit id="365942f74cce88224fdaf80b42555c03a1d840aa" translate="yes" xml:space="preserve">
          <source>Number of days before password expires to warn user about it</source>
          <target state="translated">密码到期前警告用户的天数。</target>
        </trans-unit>
        <trans-unit id="f1d107706720211290a9386c8812c2312f0e8823" translate="yes" xml:space="preserve">
          <source>Number of days since 1970-01-01 when account expires</source>
          <target state="translated">自1970-01-01以来账户到期的天数。</target>
        </trans-unit>
        <trans-unit id="a9ee5a8328ef8d145926d62850a8557baa3d4537" translate="yes" xml:space="preserve">
          <source>Number of fractional digits used in international formatting of monetary values.</source>
          <target state="translated">国际货币价值格式化中使用的小数位数。</target>
        </trans-unit>
        <trans-unit id="57778df03c86eae3d7455ab3c46c4fdf052bfc73" translate="yes" xml:space="preserve">
          <source>Number of fractional digits used in local formatting of monetary values.</source>
          <target state="translated">货币价值局部格式化中使用的小数位数。</target>
        </trans-unit>
        <trans-unit id="6c3cc540d70dfce9e01f95ffe47d1ef75ac135de" translate="yes" xml:space="preserve">
          <source>Number of hard links.</source>
          <target state="translated">硬链接的数量。</target>
        </trans-unit>
        <trans-unit id="c971530ee281315f241b2dd1d6ecd30f91644cee" translate="yes" xml:space="preserve">
          <source>Number of items allowed in the queue.</source>
          <target state="translated">允许排队的项目数量。</target>
        </trans-unit>
        <trans-unit id="a932b86c0474eba5db591ae5f5240a50c1458767" translate="yes" xml:space="preserve">
          <source>Number of links to the inode.</source>
          <target state="translated">链接到inode的数量。</target>
        </trans-unit>
        <trans-unit id="4bc5edcccc10a3e8720986ec609357b1e21973dc" translate="yes" xml:space="preserve">
          <source>Number of memory blocks (&lt;code&gt;int&lt;/code&gt;).</source>
          <target state="translated">内存块数​​（ &lt;code&gt;int&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4cac858ebc148236e0b1217a291cec1302b7e513" translate="yes" xml:space="preserve">
          <source>Number of memory blocks in the new snapshot (&lt;code&gt;int&lt;/code&gt;): &lt;code&gt;0&lt;/code&gt; if the memory blocks have been released in the new snapshot.</source>
          <target state="translated">新快照中的内存块数（ &lt;code&gt;int&lt;/code&gt; ）：如果已在新快照中释放了内存块，则为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7bc75d07118ba1efb51d5f92550d75df2499753" translate="yes" xml:space="preserve">
          <source>Number-theoretic and representation functions</source>
          <target state="translated">数字理论和表示函数</target>
        </trans-unit>
        <trans-unit id="27268cbddf6ca05f823a05275d4b43b80d3a4bb3" translate="yes" xml:space="preserve">
          <source>Number. This is the same as &lt;code&gt;'d'&lt;/code&gt;, except that it uses the current locale setting to insert the appropriate number separator characters.</source>
          <target state="translated">数。这与 &lt;code&gt;'d'&lt;/code&gt; 相同，除了它使用当前的语言环境设置来插入适当的数字分隔符。</target>
        </trans-unit>
        <trans-unit id="2247bb12f37411302dec8137671e6f42f4c568a3" translate="yes" xml:space="preserve">
          <source>Number. This is the same as &lt;code&gt;'g'&lt;/code&gt;, except that it uses the current locale setting to insert the appropriate number separator characters.</source>
          <target state="translated">数。这与 &lt;code&gt;'g'&lt;/code&gt; 相同，只是它使用当前的语言环境设置来插入适当的数字分隔符。</target>
        </trans-unit>
        <trans-unit id="29ab7f8b0894602500582c7973038069b78c9eaf" translate="yes" xml:space="preserve">
          <source>Numbers are created by numeric literals or as the result of built-in functions and operators. Unadorned integer literals (including hex, octal and binary numbers) yield integers. Numeric literals containing a decimal point or an exponent sign yield floating point numbers. Appending &lt;code&gt;'j'&lt;/code&gt; or &lt;code&gt;'J'&lt;/code&gt; to a numeric literal yields an imaginary number (a complex number with a zero real part) which you can add to an integer or float to get a complex number with real and imaginary parts.</source>
          <target state="translated">数字是通过数字文字或内置函数和运算符创建的。未经修饰的整数文字（包括十六进制，八进制和二进制数字）产生整数。包含小数点或指数符号的数字文字会产生浮点数。将 &lt;code&gt;'j'&lt;/code&gt; 或 &lt;code&gt;'J'&lt;/code&gt; 附加到数字文字上会产生一个虚数（一个实部为零的复数），您可以将其添加到整数或浮点数以获得具有实部和虚部的复数。</target>
        </trans-unit>
        <trans-unit id="9524713edf06bad44da0de5f83160b3103bf5ebf" translate="yes" xml:space="preserve">
          <source>Numbers of the form &lt;code&gt;I/2.**J&lt;/code&gt; are safe across all platforms, and I often contrive doctest examples to produce numbers of that form:</source>
          <target state="translated">&lt;code&gt;I/2.**J&lt;/code&gt; 形式的数字在所有平台上都是安全的，并且我经常构想doctest示例来产生该形式的数字：</target>
        </trans-unit>
        <trans-unit id="ae5a0b6b4520823e7613d9501888e3d11e368899" translate="yes" xml:space="preserve">
          <source>Numerator of the Fraction in lowest term.</source>
          <target state="translated">分数的分子是最低项。</target>
        </trans-unit>
        <trans-unit id="fe7c15f08e26c4968f404fff756bea4c29d294be" translate="yes" xml:space="preserve">
          <source>Numeric &amp;amp; Mathematical</source>
          <target state="translated">数值与数学</target>
        </trans-unit>
        <trans-unit id="9d18068578c94f717e14cf6e56443bc9d65ccc00" translate="yes" xml:space="preserve">
          <source>Numeric Types &amp;mdash; &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;complex&lt;/code&gt;</source>
          <target state="translated">数值类型 &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;float&lt;/code&gt; ， &lt;code&gt;complex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd0376c4852e68845ab3978d24b24f0cc35e578a" translate="yes" xml:space="preserve">
          <source>Numeric Types &amp;mdash; int, float, complex</source>
          <target state="translated">数值类型-整数，浮点数，复数</target>
        </trans-unit>
        <trans-unit id="77321ffd329dae8a0e37ae9894a49ded0d830d86" translate="yes" xml:space="preserve">
          <source>Numeric and Mathematical Modules</source>
          <target state="translated">数字和数学模块</target>
        </trans-unit>
        <trans-unit id="bd54554f02877d81fe4bebfe90fa1408d8cb1959" translate="yes" xml:space="preserve">
          <source>Numeric code specifying the problem. This value can be passed to the &lt;a href=&quot;#xml.parsers.expat.ErrorString&quot;&gt;&lt;code&gt;ErrorString()&lt;/code&gt;&lt;/a&gt; function, or compared to one of the constants defined in the &lt;code&gt;errors&lt;/code&gt; object.</source>
          <target state="translated">指定问题的数字代码。该值可以传递给&lt;a href=&quot;#xml.parsers.expat.ErrorString&quot;&gt; &lt;code&gt;ErrorString()&lt;/code&gt; &lt;/a&gt;函数，或者与在 &lt;code&gt;errors&lt;/code&gt; 对象中定义的常量之一进行比较。</target>
        </trans-unit>
        <trans-unit id="545ad8b75c0d30c78850cca48b34174137396861" translate="yes" xml:space="preserve">
          <source>Numeric conversion methods: &lt;code&gt;__complex__&lt;/code&gt;, &lt;code&gt;__int__&lt;/code&gt;, &lt;code&gt;__float__&lt;/code&gt; and &lt;code&gt;__index__&lt;/code&gt;</source>
          <target state="translated">数字转换方法： &lt;code&gt;__complex__&lt;/code&gt; ， &lt;code&gt;__int__&lt;/code&gt; ， &lt;code&gt;__float__&lt;/code&gt; 和 &lt;code&gt;__index__&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="871490f5f5a5ca6fd724e46e5e1c4d2eb2c25301" translate="yes" xml:space="preserve">
          <source>Numeric logging level for the message (&lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt;, &lt;code&gt;CRITICAL&lt;/code&gt;).</source>
          <target state="translated">消息的数字日志记录级别（ &lt;code&gt;DEBUG&lt;/code&gt; ， &lt;code&gt;INFO&lt;/code&gt; ， &lt;code&gt;WARNING&lt;/code&gt; ， &lt;code&gt;ERROR&lt;/code&gt; ， &lt;code&gt;CRITICAL&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3bd50801aaae4c7a3a8229dfe2023c97d0cb617c" translate="yes" xml:space="preserve">
          <source>Numeric value</source>
          <target state="translated">数字值</target>
        </trans-unit>
        <trans-unit id="b8563a86b2e247948408ea7ca2751b301105c385" translate="yes" xml:space="preserve">
          <source>Numerical group ID</source>
          <target state="translated">数值组ID</target>
        </trans-unit>
        <trans-unit id="d6feb6b63e4e9dedb1044129659dca2566b3a4d5" translate="yes" xml:space="preserve">
          <source>Numerical overflow.</source>
          <target state="translated">数值溢出。</target>
        </trans-unit>
        <trans-unit id="504a627804ef772d9d97c9da6cc14b33a6e1fd94" translate="yes" xml:space="preserve">
          <source>Numerical underflow with result rounded to zero.</source>
          <target state="translated">数值下溢,结果四舍五入为零。</target>
        </trans-unit>
        <trans-unit id="dae105dbfe6ba9515db517e2c22306eaf168a3ed" translate="yes" xml:space="preserve">
          <source>Numerical user ID</source>
          <target state="translated">数字化的用户ID</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="b8e649f839ee53ebcae7841aed5eddf9904a43fd" translate="yes" xml:space="preserve">
          <source>O flag</source>
          <target state="translated">O旗</target>
        </trans-unit>
        <trans-unit id="2081f9b4215b950149c134904322caba1359a7a3" translate="yes" xml:space="preserve">
          <source>OS exceptions</source>
          <target state="translated">操作系统异常</target>
        </trans-unit>
        <trans-unit id="495dc72791fecbe14725db696ffa42ad8b5edf3d" translate="yes" xml:space="preserve">
          <source>OSError</source>
          <target state="translated">OSError</target>
        </trans-unit>
        <trans-unit id="70bc67f09c2b2fce50ddd07b8816ca72d8245a13" translate="yes" xml:space="preserve">
          <source>OSError.errno</source>
          <target state="translated">OSError.errno</target>
        </trans-unit>
        <trans-unit id="6b00a948ec3f45fe825b1d53b803425a17d2bac9" translate="yes" xml:space="preserve">
          <source>OSError.filename</source>
          <target state="translated">OSError.filename</target>
        </trans-unit>
        <trans-unit id="87b0b664ad8163e07f5f101b197e001d4dadefba" translate="yes" xml:space="preserve">
          <source>OSError.filename2</source>
          <target state="translated">OSError.filename2</target>
        </trans-unit>
        <trans-unit id="1d64b19f5dacbeca7d89e999fabefa0257b25308" translate="yes" xml:space="preserve">
          <source>OSError.strerror</source>
          <target state="translated">OSError.strerror</target>
        </trans-unit>
        <trans-unit id="1252f72b16eb4033e6a82e45191bc3fa864d0cf2" translate="yes" xml:space="preserve">
          <source>OSError.winerror</source>
          <target state="translated">OSError.winerror</target>
        </trans-unit>
        <trans-unit id="fec57e31aba99aafb11659a650fe7e717b5c39f8" translate="yes" xml:space="preserve">
          <source>Object connections</source>
          <target state="translated">对象连接</target>
        </trans-unit>
        <trans-unit id="ba195d654d6092a3e9da8ddd541dd8c15779615b" translate="yes" xml:space="preserve">
          <source>Object is remote</source>
          <target state="translated">对象是远程的</target>
        </trans-unit>
        <trans-unit id="59b64b94151b6c193b42629c8e0da5f27de1d3fe" translate="yes" xml:space="preserve">
          <source>Object serialization used by &lt;a href=&quot;#module-shelve&quot;&gt;&lt;code&gt;shelve&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对象序列化使用的&lt;a href=&quot;#module-shelve&quot;&gt; &lt;code&gt;shelve&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94492e219ece2be2aab3f164513645039f660bea" translate="yes" xml:space="preserve">
          <source>Object that is equal to anything. Used to test mixed type comparison.</source>
          <target state="translated">等于任何东西的对象。用于测试混合类型比较。</target>
        </trans-unit>
        <trans-unit id="f503d8f51f7ba310bf7f45e5162a8633bb6e9f0e" translate="yes" xml:space="preserve">
          <source>Object that is greater than anything (except itself). Used to test mixed type comparison.</source>
          <target state="translated">比任何东西(除了它自己)都大的对象。用于测试混合类型比较。</target>
        </trans-unit>
        <trans-unit id="f0cd36b2dc674025e7e6b6873e4676f84304e54a" translate="yes" xml:space="preserve">
          <source>Object that is less than anything (except itself). Used to test mixed type comparison.</source>
          <target state="translated">小于任何东西的对象(除了自己)。用于测试混合类型比较。</target>
        </trans-unit>
        <trans-unit id="991224c72c842ab8ac1d85e688f924bd993632e3" translate="yes" xml:space="preserve">
          <source>Object that is not equal to anything (even to &lt;a href=&quot;#test.support.ALWAYS_EQ&quot;&gt;&lt;code&gt;ALWAYS_EQ&lt;/code&gt;&lt;/a&gt;). Used to test mixed type comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723f3e7fedc35db64092babeaa58ef63cd3624a6" translate="yes" xml:space="preserve">
          <source>Object that when printed, prints the message &amp;ldquo;Type license() to see the full license text&amp;rdquo;, and when called, displays the full license text in a pager-like fashion (one screen at a time).</source>
          <target state="translated">对象，在打印时将打印消息&amp;ldquo;输入license（）以查看完整的许可证文本&amp;rdquo;，并在调用该对象时以寻呼机的方式显示完整的许可证文本（一次显示一个屏幕）。</target>
        </trans-unit>
        <trans-unit id="6f46d65c8d10b203bddd0e21c7c84db68306a018" translate="yes" xml:space="preserve">
          <source>Object which represents an entire document.</source>
          <target state="translated">代表整个文件的对象。</target>
        </trans-unit>
        <trans-unit id="7d97a7f0b05a173dd169071a9c7f47af3300ccc5" translate="yes" xml:space="preserve">
          <source>Object whose attributes correspond roughly to the members of the &lt;code&gt;stat&lt;/code&gt; structure. It is used for the result of &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#os.fstat&quot;&gt;&lt;code&gt;os.fstat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">其属性大致对应于 &lt;code&gt;stat&lt;/code&gt; 结构成员的对象。它用于&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#os.fstat&quot;&gt; &lt;code&gt;os.fstat()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; 的结果&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92ddc22b65e8b5b40d370242a415cbe437e1fb5b" translate="yes" xml:space="preserve">
          <source>Object yielded by &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; to expose the file path and other file attributes of a directory entry.</source>
          <target state="translated">由&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;产生的对象，用于显示目录条目的文件路径和其他文件属性。</target>
        </trans-unit>
        <trans-unit id="b505394857cf752f097451f34e2de726a3519d1d" translate="yes" xml:space="preserve">
          <source>Object-oriented interface to dates and times with similar functionality to the &lt;a href=&quot;time#module-time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">面向对象的日期和时间接口，具有与&lt;a href=&quot;time#module-time&quot;&gt; &lt;code&gt;time&lt;/code&gt; &lt;/a&gt;模块类似的功能。</target>
        </trans-unit>
        <trans-unit id="533836a4f4e1947436d9ed59586d8720b0c3d38a" translate="yes" xml:space="preserve">
          <source>Objects created via this constructor cannot be pickled (see &lt;a href=&quot;#pickling&quot;&gt;pickling&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4143640e99d59e16fb46fad68725f854ec9f3433" translate="yes" xml:space="preserve">
          <source>Objects created via this constructor will also bypass the cache of a deserializing process when unpickled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de0194dce47b55f786136e7ca5d1d1e84495b24" translate="yes" xml:space="preserve">
          <source>Objects implementing the &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; interface have the following methods:</source>
          <target state="translated">实现&lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt; &lt;code&gt;CookiePolicy&lt;/code&gt; &lt;/a&gt;接口的对象具有以下方法：</target>
        </trans-unit>
        <trans-unit id="d203b8faa0a194771d07d8e7b897dfd529a11dc3" translate="yes" xml:space="preserve">
          <source>Objects in the DOM</source>
          <target state="translated">DOM中的对象</target>
        </trans-unit>
        <trans-unit id="1d2961eba3bc82e095ef8f99f120f340ffafacae" translate="yes" xml:space="preserve">
          <source>Objects instantiated from &lt;a href=&quot;#ctypes.c_char_p&quot;&gt;&lt;code&gt;c_char_p&lt;/code&gt;&lt;/a&gt; can only have their value set to bytes or integers.</source>
          <target state="translated">从&lt;a href=&quot;#ctypes.c_char_p&quot;&gt; &lt;code&gt;c_char_p&lt;/code&gt; &lt;/a&gt;实例化的对象只能将其值设置为字节或整数。</target>
        </trans-unit>
        <trans-unit id="942293f86c9c554a7407c6e383f6fb514f2d3c50" translate="yes" xml:space="preserve">
          <source>Objects of different types, except different numeric types, never compare equal. The &lt;code&gt;==&lt;/code&gt; operator is always defined but for some object types (for example, class objects) is equivalent to &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is&quot;&gt;&lt;code&gt;is&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;gt;=&lt;/code&gt; operators are only defined where they make sense; for example, they raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception when one of the arguments is a complex number.</source>
          <target state="translated">除不同的数字类型外，不同类型的对象永远不会比较相等。的 &lt;code&gt;==&lt;/code&gt; 操作者总是被定义但对于一些对象类型（例如，类对象）相当于&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#is&quot;&gt; &lt;code&gt;is&lt;/code&gt; &lt;/a&gt;。所述 &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&lt;/code&gt; ， &lt;code&gt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;gt;=&lt;/code&gt; 在那里它们是有意义运营商仅定义; 例如，当参数之一为复数时，它们会引发&lt;a href=&quot;exceptions#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="9e090b0f0c940e8935433854198df7f294fb1b61" translate="yes" xml:space="preserve">
          <source>Objects of different types, except different numeric types, never compare equal. The &lt;code&gt;==&lt;/code&gt; operator is always defined but for some object types (for example, class objects) is equivalent to &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#is&quot;&gt;&lt;code&gt;is&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;gt;=&lt;/code&gt; operators are only defined where they make sense; for example, they raise a &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception when one of the arguments is a complex number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844eb425fd6afc3bee0d0b6028be8ef6772711e2" translate="yes" xml:space="preserve">
          <source>Objects of the &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; type are always naive.</source>
          <target state="translated">&lt;a href=&quot;#datetime.date&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt;类型的对象总是幼稚的。</target>
        </trans-unit>
        <trans-unit id="bd7f72ab2249f983753a1d861db7908c8fcec575" translate="yes" xml:space="preserve">
          <source>Objects of these types are hashable, meaning that they can be used as dictionary keys.</source>
          <target state="translated">这些类型的对象是可哈希的,这意味着它们可以作为字典键使用。</target>
        </trans-unit>
        <trans-unit id="938221cef57f2475840b0471c4e70257edb6b048" translate="yes" xml:space="preserve">
          <source>Objects of these types are immutable.</source>
          <target state="translated">这些类型的对象是不可改变的。</target>
        </trans-unit>
        <trans-unit id="41b191879a423d793dfaba6e910a7801ce025caa" translate="yes" xml:space="preserve">
          <source>Objects of these types support efficient pickling via the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">这些类型的对象通过&lt;a href=&quot;pickle#module-pickle&quot;&gt; &lt;code&gt;pickle&lt;/code&gt; &lt;/a&gt;模块支持有效的酸洗。</target>
        </trans-unit>
        <trans-unit id="5f93dcf2a529620bad38d87c650a52874fefbf22" translate="yes" xml:space="preserve">
          <source>Objects of this class cannot be used to represent timezone information in the locations where different offsets are used in different days of the year or where historical changes have been made to civil time.</source>
          <target state="translated">该类对象不能用来表示一年中不同日子使用不同偏移量的地点的时区信息,也不能用来表示历史上民用时间的变化。</target>
        </trans-unit>
        <trans-unit id="214c213394b160163b319993661476db974e76ee" translate="yes" xml:space="preserve">
          <source>Objects returned by &lt;a href=&quot;#aifc.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; when a file is opened for reading have the following methods:</source>
          <target state="translated">&lt;a href=&quot;#aifc.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;文件进行读取时，open（）返回的对象具有以下方法：</target>
        </trans-unit>
        <trans-unit id="657eae2282d6e60f1300aee5c59552435401221e" translate="yes" xml:space="preserve">
          <source>Objects returned by &lt;a href=&quot;#aifc.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; when a file is opened for writing have all the above methods, except for &lt;code&gt;readframes()&lt;/code&gt; and &lt;code&gt;setpos()&lt;/code&gt;. In addition the following methods exist. The &lt;code&gt;get*()&lt;/code&gt; methods can only be called after the corresponding &lt;code&gt;set*()&lt;/code&gt; methods have been called. Before the first &lt;code&gt;writeframes()&lt;/code&gt; or &lt;code&gt;writeframesraw()&lt;/code&gt;, all parameters except for the number of frames must be filled in.</source>
          <target state="translated">&lt;a href=&quot;#aifc.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;文件进行写入时，open（）返回的对象具有上述所有方法，但 &lt;code&gt;readframes()&lt;/code&gt; 和 &lt;code&gt;setpos()&lt;/code&gt; 除外。另外，存在以下方法。该 &lt;code&gt;get*()&lt;/code&gt; 方法只能对应后，被称为 &lt;code&gt;set*()&lt;/code&gt; 方法被调用。在第一个 &lt;code&gt;writeframes()&lt;/code&gt; 或 &lt;code&gt;writeframesraw()&lt;/code&gt; 之前，必须填写除帧数以外的所有参数。</target>
        </trans-unit>
        <trans-unit id="89396d26028965648a3435a5a9a2e0de20223e3b" translate="yes" xml:space="preserve">
          <source>Objects such as modules and instances have an updateable &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attribute; however, other objects may have write restrictions on their &lt;a href=&quot;stdtypes#object.__dict__&quot;&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/a&gt; attributes (for example, classes use a &lt;a href=&quot;types#types.MappingProxyType&quot;&gt;&lt;code&gt;types.MappingProxyType&lt;/code&gt;&lt;/a&gt; to prevent direct dictionary updates).</source>
          <target state="translated">对象（例如模块和实例）具有可更新的&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;属性；但是，其他对象可能对其&lt;a href=&quot;stdtypes#object.__dict__&quot;&gt; &lt;code&gt;__dict__&lt;/code&gt; &lt;/a&gt;属性具有写限制（例如，类使用&lt;a href=&quot;types#types.MappingProxyType&quot;&gt; &lt;code&gt;types.MappingProxyType&lt;/code&gt; &lt;/a&gt;来防止直接字典更新）。</target>
        </trans-unit>
        <trans-unit id="24ddcc97acfc6e06b7be05736ede2846c52ff438" translate="yes" xml:space="preserve">
          <source>Objects that when printed or called, print the text of copyright or credits, respectively.</source>
          <target state="translated">当打印或调用时,分别打印版权或信用文字的对象。</target>
        </trans-unit>
        <trans-unit id="6aee9caab0ea803614d4bdec33d7d17a13eeeb34" translate="yes" xml:space="preserve">
          <source>Objects that when printed, print a message like &amp;ldquo;Use quit() or Ctrl-D (i.e. EOF) to exit&amp;rdquo;, and when called, raise &lt;a href=&quot;exceptions#SystemExit&quot;&gt;&lt;code&gt;SystemExit&lt;/code&gt;&lt;/a&gt; with the specified exit code.</source>
          <target state="translated">对象，在打印时会打印一条消息，例如&amp;ldquo;使用quit（）或Ctrl-D（即EOF）退出&amp;rdquo;，并在调用时使用指定的退出代码引发&lt;a href=&quot;exceptions#SystemExit&quot;&gt; &lt;code&gt;SystemExit&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="317ff8c9afd265b37a084319109dd329ff7e9ee9" translate="yes" xml:space="preserve">
          <source>Objects to be configured are described by dictionaries which detail their configuration. In some places, the logging system will be able to infer from the context how an object is to be instantiated, but when a user-defined object is to be instantiated, the system will not know how to do this. In order to provide complete flexibility for user-defined object instantiation, the user needs to provide a &amp;lsquo;factory&amp;rsquo; - a callable which is called with a configuration dictionary and which returns the instantiated object. This is signalled by an absolute import path to the factory being made available under the special key &lt;code&gt;'()'&lt;/code&gt;. Here&amp;rsquo;s a concrete example:</source>
          <target state="translated">用字典描述要配置的对象，并详细说明它们的配置。在某些地方，日志记录系统将能够从上下文中推断出如何实例化对象，但是当要实例化用户定义的对象时，系统将不知道如何执行此操作。为了为用户定义的对象实例化提供完全的灵活性，用户需要提供一个&amp;ldquo;工厂&amp;rdquo;（可调用对象），该对象可通过配置字典进行调用并返回实例化的对象。这可以通过在特殊键 &lt;code&gt;'()'&lt;/code&gt; 下可以使用的工厂绝对导入路径来表示。这是一个具体的例子：</target>
        </trans-unit>
        <trans-unit id="c09d2d2576e2197a44808fdb59140b84b2d6ab6c" translate="yes" xml:space="preserve">
          <source>Objects with this interface are used to receive error and warning information from the &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt;. If you create an object that implements this interface, then register the object with your &lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt;, the parser will call the methods in your object to report all warnings and errors. There are three levels of errors available: warnings, (possibly) recoverable errors, and unrecoverable errors. All methods take a &lt;code&gt;SAXParseException&lt;/code&gt; as the only parameter. Errors and warnings may be converted to an exception by raising the passed-in exception object.</source>
          <target state="translated">具有此接口的对象用于从&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;接收错误和警告信息。如果创建实现该接口的对象，然后使用&lt;a href=&quot;xml.sax.reader#xml.sax.xmlreader.XMLReader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;注册该对象，则解析器将调用该对象中的方法以报告所有警告和错误。可以使用三种级别的错误：警告，（可能）可恢复的错误和不可恢复的错误。所有方法都将 &lt;code&gt;SAXParseException&lt;/code&gt; 作为唯一参数。通过引发传入的异常对象，可以将错误和警告转换为异常。</target>
        </trans-unit>
        <trans-unit id="0ffd090521623011161357dcee2bcb6fbdee8700" translate="yes" xml:space="preserve">
          <source>Obsolete type &amp;ndash; it is identical to &lt;code&gt;'d'&lt;/code&gt;.</source>
          <target state="translated">过时的类型-与 &lt;code&gt;'d'&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="b63bbfd86cfd7432e9f0106c88858984af190c93" translate="yes" xml:space="preserve">
          <source>Obsoleted by &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;. Uses &lt;em&gt;Set-Cookie&lt;/em&gt; with version=1.</source>
          <target state="translated">被&lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;淘汰。使用版本为1的&lt;em&gt;Set-Cookie&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3f55ca62e4ccae40aeb50a0b093437b18720a007" translate="yes" xml:space="preserve">
          <source>Obtaining the Event Loop</source>
          <target state="translated">获取事件循环</target>
        </trans-unit>
        <trans-unit id="4f99bb290b9222ef321b66eb0aabb138fcf03891" translate="yes" xml:space="preserve">
          <source>Occasionally, it may be useful to disable the addition of this help option. This can be achieved by passing &lt;code&gt;False&lt;/code&gt; as the &lt;code&gt;add_help=&lt;/code&gt; argument to &lt;a href=&quot;#argparse.ArgumentParser&quot;&gt;&lt;code&gt;ArgumentParser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">有时，禁用此帮助选项的添加可能很有用。这可以通过将 &lt;code&gt;False&lt;/code&gt; 作为&lt;a href=&quot;#argparse.ArgumentParser&quot;&gt; &lt;code&gt;ArgumentParser&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;add_help=&lt;/code&gt; 参数传递来实现：</target>
        </trans-unit>
        <trans-unit id="126a6d3a842a574897ac64e80b2a2f96ded4709a" translate="yes" xml:space="preserve">
          <source>Occurs when a subnormal result is pushed to zero by rounding. &lt;a href=&quot;#decimal.Inexact&quot;&gt;&lt;code&gt;Inexact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#decimal.Subnormal&quot;&gt;&lt;code&gt;Subnormal&lt;/code&gt;&lt;/a&gt; are also signaled.</source>
          <target state="translated">通过舍入将非正规结果推为零时发生。还表示&lt;a href=&quot;#decimal.Inexact&quot;&gt; &lt;code&gt;Inexact&lt;/code&gt; &lt;/a&gt;和不&lt;a href=&quot;#decimal.Subnormal&quot;&gt; &lt;code&gt;Subnormal&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d2ba6a8e415086f99e2740841ad13a25c9e365c" translate="yes" xml:space="preserve">
          <source>Occurs when an operation result is subnormal (the exponent is too small). If not trapped, returns the result unchanged.</source>
          <target state="translated">发生在操作结果不正常时(指数太小)。如果没有被捕获,返回结果不变。</target>
        </trans-unit>
        <trans-unit id="8b690fa09f4c5b0f36d26f6bb8267ab0f5b1a04e" translate="yes" xml:space="preserve">
          <source>Octal escapes are included in a limited form. If the first digit is a 0, or if there are three octal digits, it is considered an octal escape. Otherwise, it is a group reference. As for string literals, octal escapes are always at most three digits in length.</source>
          <target state="translated">八进制转义以有限的形式包含在其中。如果第一个数字是0,或者有三个八进制数字,则认为是八进制转义。否则,它就是一个组引用。对于字符串字符,八进制转义符的长度总是最多三位。</target>
        </trans-unit>
        <trans-unit id="e48a55708577c922dfe1c8727c5015fe59dcd19c" translate="yes" xml:space="preserve">
          <source>Octal format. Outputs the number in base 8.</source>
          <target state="translated">八进制格式。输出基数为8的数字。</target>
        </trans-unit>
        <trans-unit id="0c41c8a61bc16d4027683f8db82ba66479208909" translate="yes" xml:space="preserve">
          <source>Of course, as email has been deployed worldwide, it has become internationalized, such that language specific character sets can now be used in email messages. The base standard still requires email messages to be transferred using only 7-bit ASCII characters, so a slew of RFCs have been written describing how to encode email containing non-ASCII characters into &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;-compliant format. These RFCs include &lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2046&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;, and &lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;. The &lt;a href=&quot;email#module-email&quot;&gt;&lt;code&gt;email&lt;/code&gt;&lt;/a&gt; package supports these standards in its &lt;a href=&quot;#module-email.header&quot;&gt;&lt;code&gt;email.header&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.charset#module-email.charset&quot;&gt;&lt;code&gt;email.charset&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">当然，随着电子邮件在全球范围内的部署，它已经国际化，因此特定于语言的字符集现在可以在电子邮件中使用。基本标准仍然要求仅使用7位ASCII字符传输电子邮件，因此编写了一系列RFC，描述了如何将包含非ASCII字符的电子邮件编码为&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;兼容格式。这些RFC包括&lt;a href=&quot;https://tools.ietf.org/html/rfc2045.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 2045&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://tools.ietf.org/html/rfc2046.html&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 2046&lt;/strong&gt;&lt;/a&gt;，&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-6&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;和&lt;a href=&quot;https://tools.ietf.org/html/rfc2231.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 2231&lt;/strong&gt;&lt;/a&gt;。该&lt;a href=&quot;email#module-email&quot;&gt; &lt;code&gt;email&lt;/code&gt; &lt;/a&gt;包支持的这些标准&lt;a href=&quot;#module-email.header&quot;&gt; &lt;code&gt;email.header&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;email.charset#module-email.charset&quot;&gt; &lt;code&gt;email.charset&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="2afb4718d7f7d394f419ceafea003a6616573fac" translate="yes" xml:space="preserve">
          <source>Of course, the dictionary printed will include all the options available and their values. This is meant only as an example.</source>
          <target state="translated">当然,打印出来的字典将包括所有可用的选项及其值。这只是作为一个例子。</target>
        </trans-unit>
        <trans-unit id="57957486097ed91a113e640adfd8aa89098b3192" translate="yes" xml:space="preserve">
          <source>Of course, tokens will be returned which are not valid for shells, and you&amp;rsquo;ll need to implement your own error checks on the returned tokens.</source>
          <target state="translated">当然，将返回对于shell无效的令牌，并且您将需要对返回的令牌实施自己的错误检查。</target>
        </trans-unit>
        <trans-unit id="8d96c2d35a34921bbc473cf1f63f5c7f7ce87d37" translate="yes" xml:space="preserve">
          <source>Of course, you still have to use your head! For instance, it makes no sense to use a forking server if the service contains state in memory that can be modified by different requests, since the modifications in the child process would never reach the initial state kept in the parent process and passed to each child. In this case, you can use a threading server, but you will probably have to use locks to protect the integrity of the shared data.</source>
          <target state="translated">当然,你还是要动动脑筋! 例如,如果服务在内存中包含了可以被不同请求修改的状态,那么使用分叉服务器是没有意义的,因为子进程中的修改永远不会达到保存在父进程中并传递给每个子进程的初始状态。在这种情况下,你可以使用线程服务器,但你可能不得不使用锁来保护共享数据的完整性。</target>
        </trans-unit>
        <trans-unit id="a189e90de7a831a297990fcc13eed8180febeaaf" translate="yes" xml:space="preserve">
          <source>Of the following list, symbols that are not used on the current platform are not defined by the module. The specific list of defined symbols is available as &lt;code&gt;errno.errorcode.keys()&lt;/code&gt;. Symbols available can include:</source>
          <target state="translated">在以下列表中，模块未定义当前平台上未使用的符号。定义的符号的特定列表可作为 &lt;code&gt;errno.errorcode.keys()&lt;/code&gt; 获得。可用的符号包括：</target>
        </trans-unit>
        <trans-unit id="d6d3eaaecea9032e886e0354de8e806c271d885c" translate="yes" xml:space="preserve">
          <source>Official BLAKE2 website.</source>
          <target state="translated">BLAKE2官网。</target>
        </trans-unit>
        <trans-unit id="ce667716547fa82bc8795ad7ef205e9410193ed0" translate="yes" xml:space="preserve">
          <source>Offset</source>
          <target state="translated">Offset</target>
        </trans-unit>
        <trans-unit id="db094d4468a2312d7105c1d93cf46de84f4525c2" translate="yes" xml:space="preserve">
          <source>Often the private key is stored in the same file as the certificate; in this case, only the &lt;code&gt;certfile&lt;/code&gt; parameter to &lt;a href=&quot;#ssl.SSLContext.load_cert_chain&quot;&gt;&lt;code&gt;SSLContext.load_cert_chain()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.wrap_socket&quot;&gt;&lt;code&gt;wrap_socket()&lt;/code&gt;&lt;/a&gt; needs to be passed. If the private key is stored with the certificate, it should come before the first certificate in the certificate chain:</source>
          <target state="translated">通常，私钥与证书存储在同一文件中。在这种情况下，仅需要传递&lt;a href=&quot;#ssl.SSLContext.load_cert_chain&quot;&gt; &lt;code&gt;SSLContext.load_cert_chain()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ssl.wrap_socket&quot;&gt; &lt;code&gt;wrap_socket()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;certfile&lt;/code&gt; 参数。如果私钥与证书一起存储，则它应位于证书链中的第一个证书之前：</target>
        </trans-unit>
        <trans-unit id="fbb3c38f7157933f1410deccc0c0bd46be6786fa" translate="yes" xml:space="preserve">
          <source>Old</source>
          <target state="translated">Old</target>
        </trans-unit>
        <trans-unit id="b921270420b7b08f1568f831c3397e52a38fa523" translate="yes" xml:space="preserve">
          <source>Old cookies are kept unless overwritten by newly loaded ones.</source>
          <target state="translated">除非被新加载的cookie覆盖,否则旧的cookie将被保留。</target>
        </trans-unit>
        <trans-unit id="7314a38341e89f90dcb4e508f3c78058527250f6" translate="yes" xml:space="preserve">
          <source>Old getter/setter API for &lt;a href=&quot;#threading.Thread.daemon&quot;&gt;&lt;code&gt;daemon&lt;/code&gt;&lt;/a&gt;; use it directly as a property instead.</source>
          <target state="translated">&lt;a href=&quot;#threading.Thread.daemon&quot;&gt; &lt;code&gt;daemon&lt;/code&gt; &lt;/a&gt;旧getter / setter API ；直接将其用作属性。</target>
        </trans-unit>
        <trans-unit id="c7dbcb06ab05ba98c6ef08633aa445b5c4081b42" translate="yes" xml:space="preserve">
          <source>Old getter/setter API for &lt;a href=&quot;#threading.Thread.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt;; use it directly as a property instead.</source>
          <target state="translated">旧的getter / setter方法为API &lt;a href=&quot;#threading.Thread.name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; ; 直接将其用作属性。</target>
        </trans-unit>
        <trans-unit id="a430408287831c43c01068e431ced99daedf6248" translate="yes" xml:space="preserve">
          <source>Older SQLite versions had issues with sharing connections between threads. That&amp;rsquo;s why the Python module disallows sharing connections and cursors between threads. If you still try to do so, you will get an exception at runtime.</source>
          <target state="translated">较旧的SQLite版本在共享线程之间存在连接问题。这就是Python模块不允许线程之间共享连接和游标的原因。如果仍然尝试这样做，则在运行时会出现异常。</target>
        </trans-unit>
        <trans-unit id="b798a5717d947276e99cddcb457e1602f3cac8b9" translate="yes" xml:space="preserve">
          <source>Older high-level API</source>
          <target state="translated">旧的高级API</target>
        </trans-unit>
        <trans-unit id="6b7df62ceb94ab7be4fe94caa4bfa594c93034e1" translate="yes" xml:space="preserve">
          <source>Omitting values</source>
          <target state="translated">省略数值</target>
        </trans-unit>
        <trans-unit id="1bb81bb7fe8c54a984481046ff452e9ec4cda5b2" translate="yes" xml:space="preserve">
          <source>On Android or in the UTF-8 mode (&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt; option), always return &lt;code&gt;'UTF-8'&lt;/code&gt;, the locale and the &lt;em&gt;do_setlocale&lt;/em&gt; argument are ignored.</source>
          <target state="translated">在Android或UTF-8模式下（&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt; &lt;code&gt;-X&lt;/code&gt; &lt;/a&gt; &lt;code&gt;utf8&lt;/code&gt; 选项），始终返回 &lt;code&gt;'UTF-8'&lt;/code&gt; ，语言环境和&lt;em&gt;do_setlocale&lt;/em&gt;参数将被忽略。</target>
        </trans-unit>
        <trans-unit id="203e6adb380fa1e83c671d16939d8c0b0b5f5fb7" translate="yes" xml:space="preserve">
          <source>On Android or in the UTF-8 mode (&lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;&lt;code&gt;utf8&lt;/code&gt; option), always return &lt;code&gt;'UTF-8'&lt;/code&gt;, the locale and the &lt;em&gt;do_setlocale&lt;/em&gt; argument are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4464bd203731f640095d017614727a2ce8882aa" translate="yes" xml:space="preserve">
          <source>On Android, the encoding is &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="translated">在Android上，编码为 &lt;code&gt;'utf-8'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdac50d7ab041ede3970502d373d1b546c0fc224" translate="yes" xml:space="preserve">
          <source>On BSD systems (macOS, FreeBSD, etc.) flow control is not supported for datagram protocols, because there is no reliable way to detect send failures caused by writing too many packets.</source>
          <target state="translated">在BSD系统(macOS、FreeBSD等)上,数据报协议不支持流控,因为没有可靠的方法来检测因写入太多数据包而导致的发送失败。</target>
        </trans-unit>
        <trans-unit id="5df68af755b4ca9998915a72600b113ea0a954b4" translate="yes" xml:space="preserve">
          <source>On Linux &lt;a href=&quot;os#os.sendfile&quot;&gt;&lt;code&gt;os.sendfile()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">在Linux上，使用&lt;a href=&quot;os#os.sendfile&quot;&gt; &lt;code&gt;os.sendfile()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b894a54ac738054398c257505814cbf2c23a93f5" translate="yes" xml:space="preserve">
          <source>On Linux, &lt;code&gt;find_library()&lt;/code&gt; tries to run external programs (&lt;code&gt;/sbin/ldconfig&lt;/code&gt;, &lt;code&gt;gcc&lt;/code&gt;, &lt;code&gt;objdump&lt;/code&gt; and &lt;code&gt;ld&lt;/code&gt;) to find the library file. It returns the filename of the library file.</source>
          <target state="translated">在Linux上， &lt;code&gt;find_library()&lt;/code&gt; 尝试运行外部程序（ &lt;code&gt;/sbin/ldconfig&lt;/code&gt; ， &lt;code&gt;gcc&lt;/code&gt; ， &lt;code&gt;objdump&lt;/code&gt; 和 &lt;code&gt;ld&lt;/code&gt; ）以查找库文件。它返回库文件的文件名。</target>
        </trans-unit>
        <trans-unit id="b7f5823f8fbd988d636ff83e069f2a210239fdad" translate="yes" xml:space="preserve">
          <source>On Linux, if &lt;em&gt;offset&lt;/em&gt; is given as &lt;code&gt;None&lt;/code&gt;, the bytes are read from the current position of &lt;em&gt;in&lt;/em&gt; and the position of &lt;em&gt;in&lt;/em&gt; is updated.</source>
          <target state="translated">在Linux上，如果&lt;em&gt;偏移&lt;/em&gt;给出 &lt;code&gt;None&lt;/code&gt; 的字节从当前位置读出&lt;em&gt;的&lt;/em&gt;和位置&lt;em&gt;的&lt;/em&gt;更新。</target>
        </trans-unit>
        <trans-unit id="8c474916fc600db3efbd1c743661bfc0f0b02e59" translate="yes" xml:space="preserve">
          <source>On Linux, if &lt;em&gt;offset&lt;/em&gt; is given as &lt;code&gt;None&lt;/code&gt;, the bytes are read from the current position of &lt;em&gt;in_fd&lt;/em&gt; and the position of &lt;em&gt;in_fd&lt;/em&gt; is updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e281758369d3e3022dacf8f57e2fcc73ab4a776b" translate="yes" xml:space="preserve">
          <source>On Linux, if the &lt;code&gt;getrandom()&lt;/code&gt; syscall is available, it is used in blocking mode: block until the system urandom entropy pool is initialized (128 bits of entropy are collected by the kernel). See the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0524&quot; id=&quot;index-45&quot;&gt;&lt;strong&gt;PEP 524&lt;/strong&gt;&lt;/a&gt; for the rationale. On Linux, the &lt;a href=&quot;#os.getrandom&quot;&gt;&lt;code&gt;getrandom()&lt;/code&gt;&lt;/a&gt; function can be used to get random bytes in non-blocking mode (using the &lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt;&lt;code&gt;GRND_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag) or to poll until the system urandom entropy pool is initialized.</source>
          <target state="translated">在Linux上，如果有 &lt;code&gt;getrandom()&lt;/code&gt; 系统调用可用，它将在阻塞模式下使用：阻塞直到初始化系统urandom熵池（内核收集了128位熵）。原理请参阅&lt;a href=&quot;https://www.python.org/dev/peps/pep-0524&quot; id=&quot;index-45&quot;&gt;&lt;strong&gt;PEP 524&lt;/strong&gt;&lt;/a&gt;。在Linux上，可以使用&lt;a href=&quot;#os.getrandom&quot;&gt; &lt;code&gt;getrandom()&lt;/code&gt; &lt;/a&gt;函数以非阻塞模式（使用&lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt; &lt;code&gt;GRND_NONBLOCK&lt;/code&gt; &lt;/a&gt;标志）获取随机字节，或者轮询直到初始化系统urandom熵池。</target>
        </trans-unit>
        <trans-unit id="c7cb52cf7de2620bbb70c3d6b54a151e8aa3360b" translate="yes" xml:space="preserve">
          <source>On Linux, if the &lt;code&gt;getrandom()&lt;/code&gt; syscall is available, it is used in blocking mode: block until the system urandom entropy pool is initialized (128 bits of entropy are collected by the kernel). See the &lt;a href=&quot;https://www.python.org/dev/peps/pep-0524&quot; id=&quot;index-47&quot;&gt;&lt;strong&gt;PEP 524&lt;/strong&gt;&lt;/a&gt; for the rationale. On Linux, the &lt;a href=&quot;#os.getrandom&quot;&gt;&lt;code&gt;getrandom()&lt;/code&gt;&lt;/a&gt; function can be used to get random bytes in non-blocking mode (using the &lt;a href=&quot;#os.GRND_NONBLOCK&quot;&gt;&lt;code&gt;GRND_NONBLOCK&lt;/code&gt;&lt;/a&gt; flag) or to poll until the system urandom entropy pool is initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34356f543169215adf877047fe8fe6de6815c500" translate="yes" xml:space="preserve">
          <source>On Linux, it is required to specify the filename &lt;em&gt;including&lt;/em&gt; the extension to load a library, so attribute access can not be used to load libraries. Either the &lt;code&gt;LoadLibrary()&lt;/code&gt; method of the dll loaders should be used, or you should load the library by creating an instance of CDLL by calling the constructor:</source>
          <target state="translated">在Linux上，需要指定文件名（&lt;em&gt;包括&lt;/em&gt;扩展名）来加载库，因此不能使用属性访问来加载库。应该使用dll加载器的 &lt;code&gt;LoadLibrary()&lt;/code&gt; 方法，或者应该通过调用构造函数创建CDLL实例来加载库：</target>
        </trans-unit>
        <trans-unit id="dc1364db7c80f222c6aa60a25008da922cb7a7e1" translate="yes" xml:space="preserve">
          <source>On Mac OS X (and perhaps other platforms), executable files may be universal files containing multiple architectures.</source>
          <target state="translated">在Mac OS X(或许还有其他平台)上,可执行文件可能是包含多种架构的通用文件。</target>
        </trans-unit>
        <trans-unit id="f3005d61cb9e9c1da2b366641dda8f652e63e021" translate="yes" xml:space="preserve">
          <source>On Mac OS X and FreeBSD, a value of 0 for &lt;em&gt;count&lt;/em&gt; specifies to send until the end of &lt;em&gt;in&lt;/em&gt; is reached.</source>
          <target state="translated">在Mac OS X和FreeBSD上，&lt;em&gt;count&lt;/em&gt;的值0 指定发送直到到达&lt;em&gt;in&lt;/em&gt;的末尾。</target>
        </trans-unit>
        <trans-unit id="f2b2d6a45e7bae7bbe9a46add85d282be2542161" translate="yes" xml:space="preserve">
          <source>On Mac OS X and FreeBSD, a value of &lt;code&gt;0&lt;/code&gt; for &lt;em&gt;count&lt;/em&gt; specifies to send until the end of &lt;em&gt;in_fd&lt;/em&gt; is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c284398b02650696dc28bb5b5b1f62ce624525" translate="yes" xml:space="preserve">
          <source>On Mac OS X, &lt;a href=&quot;#os.getgroups&quot;&gt;&lt;code&gt;getgroups()&lt;/code&gt;&lt;/a&gt; behavior differs somewhat from other Unix platforms. If the Python interpreter was built with a deployment target of &lt;code&gt;10.5&lt;/code&gt; or earlier, &lt;a href=&quot;#os.getgroups&quot;&gt;&lt;code&gt;getgroups()&lt;/code&gt;&lt;/a&gt; returns the list of effective group ids associated with the current user process; this list is limited to a system-defined number of entries, typically 16, and may be modified by calls to &lt;a href=&quot;#os.setgroups&quot;&gt;&lt;code&gt;setgroups()&lt;/code&gt;&lt;/a&gt; if suitably privileged. If built with a deployment target greater than &lt;code&gt;10.5&lt;/code&gt;, &lt;a href=&quot;#os.getgroups&quot;&gt;&lt;code&gt;getgroups()&lt;/code&gt;&lt;/a&gt; returns the current group access list for the user associated with the effective user id of the process; the group access list may change over the lifetime of the process, it is not affected by calls to &lt;a href=&quot;#os.setgroups&quot;&gt;&lt;code&gt;setgroups()&lt;/code&gt;&lt;/a&gt;, and its length is not limited to 16. The deployment target value, &lt;code&gt;MACOSX_DEPLOYMENT_TARGET&lt;/code&gt;, can be obtained with &lt;a href=&quot;sysconfig#sysconfig.get_config_var&quot;&gt;&lt;code&gt;sysconfig.get_config_var()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在Mac OS X上，&lt;a href=&quot;#os.getgroups&quot;&gt; &lt;code&gt;getgroups()&lt;/code&gt; 的&lt;/a&gt;行为与其他Unix平台有所不同。如果Python解释器的构建目标为 &lt;code&gt;10.5&lt;/code&gt; 或更早版本，则&lt;a href=&quot;#os.getgroups&quot;&gt; &lt;code&gt;getgroups()&lt;/code&gt; &lt;/a&gt;返回与当前用户进程关联的有效组ID的列表；否则，返回false。此列表限于系统定义的条目数，通常为16，并且可以通过调用&lt;a href=&quot;#os.setgroups&quot;&gt; &lt;code&gt;setgroups()&lt;/code&gt; (&lt;/a&gt;如果有适当的特权）进行修改。如果以大于 &lt;code&gt;10.5&lt;/code&gt; 的部署目标构建，则&lt;a href=&quot;#os.getgroups&quot;&gt; &lt;code&gt;getgroups()&lt;/code&gt; &lt;/a&gt;返回与该进程的有效用户ID相关联的用户的当前组访问列表；否则，该列表将为该用户返回当前组访问列表。组访问列表可能会在该过程的整个生命周期中发生变化，而不受&lt;a href=&quot;#os.setgroups&quot;&gt; &lt;code&gt;setgroups()&lt;/code&gt; &lt;/a&gt;调用的影响，并且其长度不限于16。可以使用&lt;a href=&quot;sysconfig#sysconfig.get_config_var&quot;&gt; &lt;code&gt;sysconfig.get_config_var()&lt;/code&gt; &lt;/a&gt;获得部署目标值 &lt;code&gt;MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6be300bd70052f23a866a27939e3f7e700d243e4" translate="yes" xml:space="preserve">
          <source>On Mac OS X, &lt;code&gt;sem_timedwait&lt;/code&gt; is unsupported, so calling &lt;code&gt;acquire()&lt;/code&gt; with a timeout will emulate that function&amp;rsquo;s behavior using a sleeping loop.</source>
          <target state="translated">在Mac OS X上，不支持 &lt;code&gt;sem_timedwait&lt;/code&gt; ，因此，调用带有超时的 &lt;code&gt;acquire()&lt;/code&gt; 将使用睡眠循环来模拟该函数的行为。</target>
        </trans-unit>
        <trans-unit id="02ec16ecfd2b354d814f70d8478dc9a7f0630d5a" translate="yes" xml:space="preserve">
          <source>On Mac OS X, the length of &lt;em&gt;groups&lt;/em&gt; may not exceed the system-defined maximum number of effective group ids, typically 16. See the documentation for &lt;a href=&quot;#os.getgroups&quot;&gt;&lt;code&gt;getgroups()&lt;/code&gt;&lt;/a&gt; for cases where it may not return the same group list set by calling setgroups().</source>
          <target state="translated">在Mac OS X上，&lt;em&gt;组&lt;/em&gt;的长度不得超过系统定义的最大有效组ID的最大数量，通常为16。有关其可能无法通过调用setgroups（）返回相同的组列表的情况，请参阅&lt;a href=&quot;#os.getgroups&quot;&gt; &lt;code&gt;getgroups()&lt;/code&gt; &lt;/a&gt;的文档。。</target>
        </trans-unit>
        <trans-unit id="d466ddfea82165c6998d2732d0fd966668af8aa8" translate="yes" xml:space="preserve">
          <source>On Mac OS X, this is indistinguishable from &lt;a href=&quot;#multiprocessing.Semaphore&quot;&gt;&lt;code&gt;Semaphore&lt;/code&gt;&lt;/a&gt; because &lt;code&gt;sem_getvalue()&lt;/code&gt; is not implemented on that platform.</source>
          <target state="translated">在Mac OS X上，这与&lt;a href=&quot;#multiprocessing.Semaphore&quot;&gt; &lt;code&gt;Semaphore&lt;/code&gt; &lt;/a&gt; &lt;code&gt;sem_getvalue()&lt;/code&gt; 区别，因为sem_getvalue（）未在该平台上实现。</target>
        </trans-unit>
        <trans-unit id="80a13c286aa16dd15254ee11f8acc93c6967fcac" translate="yes" xml:space="preserve">
          <source>On Mac OS systems, the following attributes may also be available:</source>
          <target state="translated">在Mac OS系统上,以下属性也可能可用。</target>
        </trans-unit>
        <trans-unit id="a1d8d30d955ec9defda1be84eda85bc8070a5a55" translate="yes" xml:space="preserve">
          <source>On MacOS X, toplevel windows automatically include a built-in size grip by default. Adding a &lt;code&gt;Sizegrip&lt;/code&gt; is harmless, since the built-in grip will just mask the widget.</source>
          <target state="translated">在MacOS X上，默认情况下，顶层窗口会自动包含内置的尺寸夹点。添加 &lt;code&gt;Sizegrip&lt;/code&gt; 是无害的，因为内置的握柄只会遮盖小部件。</target>
        </trans-unit>
        <trans-unit id="b03c534fbf38cbbeafe4e065b76b3779d0494ab0" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, it may be required to enable the &lt;code&gt;Activate.ps1&lt;/code&gt; script by setting the execution policy for the user. You can do this by issuing the following PowerShell command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047a505ac3a0bde5924ac34403621b5a7b16f3e7" translate="yes" xml:space="preserve">
          <source>On OS X, &lt;code&gt;find_library()&lt;/code&gt; tries several predefined naming schemes and paths to locate the library, and returns a full pathname if successful:</source>
          <target state="translated">在OS X上， &lt;code&gt;find_library()&lt;/code&gt; 尝试几种预定义的命名方案和路径来查找库，如果成功，则返回完整的路径名：</target>
        </trans-unit>
        <trans-unit id="ee3adeb42a6773c0b5a1d764561ba1bd5f6e5c81" translate="yes" xml:space="preserve">
          <source>On OpenSSL 1.1 and newer the cipher dict contains additional fields:</source>
          <target state="translated">在OpenSSL 1.1和更新的版本中,密码口令包含额外的字段。</target>
        </trans-unit>
        <trans-unit id="80e86175144551edf0014fe20868235165756774" translate="yes" xml:space="preserve">
          <source>On POSIX platforms the &lt;code&gt;SO_REUSEADDR&lt;/code&gt; socket option is set in order to immediately reuse previous sockets which were bound on the same &lt;em&gt;address&lt;/em&gt; and remained in TIME_WAIT state.</source>
          <target state="translated">在POSIX平台上，设置 &lt;code&gt;SO_REUSEADDR&lt;/code&gt; 套接字选项是为了立即重用以前绑定在同一&lt;em&gt;地址上&lt;/em&gt;并保持TIME_WAIT状态的套接字。</target>
        </trans-unit>
        <trans-unit id="14c00f7063151de1165f655a6bb2db8b60c068aa" translate="yes" xml:space="preserve">
          <source>On POSIX platforms, this means that file owner and group are lost as well as ACLs. On Mac OS, the resource fork and other metadata are not used. This means that resources will be lost and file type and creator codes will not be correct. On Windows, file owners, ACLs and alternate data streams are not copied.</source>
          <target state="translated">在POSIX平台上,这意味着文件所有者和组以及ACL都会丢失。在Mac OS上,资源分叉和其他元数据没有被使用。这意味着资源将丢失,文件类型和创建者代码将不正确。在Windows上,文件所有者、ACL和备用数据流不会被复制。</target>
        </trans-unit>
        <trans-unit id="c2f2b0fcb39984b264b9e73654fb68b4dce8860f" translate="yes" xml:space="preserve">
          <source>On POSIX systems this method sends &lt;a href=&quot;signal#signal.SIGTERM&quot;&gt;&lt;code&gt;signal.SIGTERM&lt;/code&gt;&lt;/a&gt; to the child process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ae7630db2b82bcf652d24e44fe7ab4a0226a3d" translate="yes" xml:space="preserve">
          <source>On POSIX systems this method sends &lt;code&gt;SIGKILL&lt;/code&gt; to the child process.</source>
          <target state="translated">在POSIX系统上，此方法将 &lt;code&gt;SIGKILL&lt;/code&gt; 发送到子进程。</target>
        </trans-unit>
        <trans-unit id="7eefcbd33acff5f55854147162274a89ed80a85f" translate="yes" xml:space="preserve">
          <source>On POSIX systems this method sends &lt;code&gt;signal.SIGTERM&lt;/code&gt; to the child process.</source>
          <target state="translated">在POSIX系统上，此方法将 &lt;code&gt;signal.SIGTERM&lt;/code&gt; 发送到子进程。</target>
        </trans-unit>
        <trans-unit id="d0ff6ad8e999cc10f48eff5c76d5f2a7188b214a" translate="yes" xml:space="preserve">
          <source>On POSIX systems where Python was built with the standard &lt;code&gt;configure&lt;/code&gt; script, this contains the ABI flags as specified by &lt;a href=&quot;https://www.python.org/dev/peps/pep-3149&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3149&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">在使用标准 &lt;code&gt;configure&lt;/code&gt; 脚本构建Python的POSIX系统上，它包含&lt;a href=&quot;https://www.python.org/dev/peps/pep-3149&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 3149&lt;/strong&gt;&lt;/a&gt;指定的ABI标志。</target>
        </trans-unit>
        <trans-unit id="b236dd13a030ed94e044d584c2fe8291e71001b9" translate="yes" xml:space="preserve">
          <source>On POSIX systems, the function sends SIGKILL to the subprocess. On Windows, this method is an alias for &lt;a href=&quot;#asyncio.SubprocessTransport.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在POSIX系统上，该函数将SIGKILL发送到子进程。在Windows上，此方法是Terminate &lt;a href=&quot;#asyncio.SubprocessTransport.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="f07a49e833d6a2c04f61073e69f1d34ae8d4879c" translate="yes" xml:space="preserve">
          <source>On POSIX systems, this method sends SIGTERM to the subprocess. On Windows, the Windows API function TerminateProcess() is called to stop the subprocess.</source>
          <target state="translated">在POSIX系统上,该方法向子进程发送SIGTERM。在Windows系统中,调用Windows API函数TerminateProcess()来停止子进程。</target>
        </trans-unit>
        <trans-unit id="39b54d200ee996c99872333f17e610ed05df0ab4" translate="yes" xml:space="preserve">
          <source>On POSIX with &lt;code&gt;shell=True&lt;/code&gt;, the shell defaults to &lt;code&gt;/bin/sh&lt;/code&gt;. If &lt;em&gt;args&lt;/em&gt; is a string, the string specifies the command to execute through the shell. This means that the string must be formatted exactly as it would be when typed at the shell prompt. This includes, for example, quoting or backslash escaping filenames with spaces in them. If &lt;em&gt;args&lt;/em&gt; is a sequence, the first item specifies the command string, and any additional items will be treated as additional arguments to the shell itself. That is to say, &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; does the equivalent of:</source>
          <target state="translated">在 &lt;code&gt;shell=True&lt;/code&gt; 的 POSIX上，shell默认为 &lt;code&gt;/bin/sh&lt;/code&gt; 。如果&lt;em&gt;args&lt;/em&gt;是字符串，则该字符串指定要通过外壳执行的命令。这意味着字符串的格式必须与在shell提示符下键入时的格式完全相同。例如，这包括在文件名中使用引号或反斜杠转义。如果&lt;em&gt;args&lt;/em&gt;是序列，则第一项指定命令字符串，任何其他项都将被视为shell本身的其他参数。也就是说，&lt;a href=&quot;#subprocess.Popen&quot;&gt; &lt;code&gt;Popen&lt;/code&gt; &lt;/a&gt;等效于：</target>
        </trans-unit>
        <trans-unit id="e0fbb44798e8fa6c268c46e281d4b570ead4545d" translate="yes" xml:space="preserve">
          <source>On POSIX, if &lt;em&gt;args&lt;/em&gt; is a string, the string is interpreted as the name or path of the program to execute. However, this can only be done if not passing arguments to the program.</source>
          <target state="translated">在POSIX上，如果&lt;em&gt;args&lt;/em&gt;是字符串，则将该字符串解释为要执行的程序的名称或路径。但是，只有在不将参数传递给程序的情况下才能执行此操作。</target>
        </trans-unit>
        <trans-unit id="042d4232a3ed266a5bf3c414e7d49bafb86c8327" translate="yes" xml:space="preserve">
          <source>On Solaris and derivatives, the following attributes may also be available:</source>
          <target state="translated">在Solaris及其衍生产品上,以下属性也可能可用。</target>
        </trans-unit>
        <trans-unit id="80cc19f9b1626f125dbd406b222352afad1074ce" translate="yes" xml:space="preserve">
          <source>On UNIX &lt;em&gt;child watchers&lt;/em&gt; are used for subprocess finish waiting, see &lt;a href=&quot;asyncio-policy#asyncio-watchers&quot;&gt;Process Watchers&lt;/a&gt; for more info.</source>
          <target state="translated">在UNIX上，&lt;em&gt;子监视&lt;/em&gt;程序用于子&lt;a href=&quot;asyncio-policy#asyncio-watchers&quot;&gt;进程&lt;/a&gt;完成等待，请参阅进程监视程序以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="061033fe6897a382e694d5ebd2c26f0de8aa24b9" translate="yes" xml:space="preserve">
          <source>On UNIX, &lt;a href=&quot;resource#resource.setrlimit&quot;&gt;&lt;code&gt;resource.setrlimit()&lt;/code&gt;&lt;/a&gt; is used to set &lt;a href=&quot;resource#resource.RLIMIT_CORE&quot;&gt;&lt;code&gt;resource.RLIMIT_CORE&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s soft limit to 0 to prevent coredump file creation.</source>
          <target state="translated">在UNIX上，&lt;a href=&quot;resource#resource.setrlimit&quot;&gt; &lt;code&gt;resource.setrlimit()&lt;/code&gt; &lt;/a&gt;用于将&lt;a href=&quot;resource#resource.RLIMIT_CORE&quot;&gt; &lt;code&gt;resource.RLIMIT_CORE&lt;/code&gt; &lt;/a&gt;的软限制设置为0，以防止创建coredump文件。</target>
        </trans-unit>
        <trans-unit id="5303fb5664f54ac196ff0624621bf3e9b937a218" translate="yes" xml:space="preserve">
          <source>On UNIX, non-inheritable file descriptors are closed in child processes at the execution of a new program, other file descriptors are inherited.</source>
          <target state="translated">在UNIX上,不可继承的文件描述符在执行新程序时在子进程中被关闭,其他文件描述符是继承的。</target>
        </trans-unit>
        <trans-unit id="8c0b4ce9edeaa46004c1ea89a47277ea82f428e7" translate="yes" xml:space="preserve">
          <source>On Unix and Windows, return the argument with an initial component of &lt;code&gt;~&lt;/code&gt; or &lt;code&gt;~user&lt;/code&gt; replaced by that &lt;em&gt;user&lt;/em&gt;&amp;rsquo;s home directory.</source>
          <target state="translated">在Unix和Windows上，返回带有 &lt;code&gt;~&lt;/code&gt; 或 &lt;code&gt;~user&lt;/code&gt; 初始部分的参数，并替换为该&lt;em&gt;用户&lt;/em&gt;的主目录。</target>
        </trans-unit>
        <trans-unit id="b4612ea5389981457aec60b2589e2c3358b80472" translate="yes" xml:space="preserve">
          <source>On Unix using the &lt;em&gt;fork&lt;/em&gt; start method, a child process can make use of a shared resource created in a parent process using a global resource. However, it is better to pass the object as an argument to the constructor for the child process.</source>
          <target state="translated">在使用&lt;em&gt;fork&lt;/em&gt; start方法的Unix上，子进程可以使用在使用全局资源的父进程中创建的共享资源。但是，最好将对象作为参数传递给子进程的构造函数。</target>
        </trans-unit>
        <trans-unit id="b0ccbae6c96cdea294fa24abe9f6be651948a8f9" translate="yes" xml:space="preserve">
          <source>On Unix using the &lt;em&gt;spawn&lt;/em&gt; or &lt;em&gt;forkserver&lt;/em&gt; start methods will also start a &lt;em&gt;resource tracker&lt;/em&gt; process which tracks the unlinked named system resources (such as named semaphores or &lt;a href=&quot;multiprocessing.shared_memory#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt; objects) created by processes of the program. When all processes have exited the resource tracker unlinks any remaining tracked object. Usually there should be none, but if a process was killed by a signal there may be some &amp;ldquo;leaked&amp;rdquo; resources. (Neither leaked semaphores nor shared memory segments will be automatically unlinked until the next reboot. This is problematic for both objects because the system allows only a limited number of named semaphores, and shared memory segments occupy some space in the main memory.)</source>
          <target state="translated">在Unix上，使用&lt;em&gt;spawn&lt;/em&gt;或&lt;em&gt;forkserver&lt;/em&gt; start方法还将启动&lt;em&gt;资源跟踪器&lt;/em&gt;进程，该进程跟踪由程序的进程创建的未链接的命名系统资源（例如，命名信号量或&lt;a href=&quot;multiprocessing.shared_memory#multiprocessing.shared_memory.SharedMemory&quot;&gt; &lt;code&gt;SharedMemory&lt;/code&gt; &lt;/a&gt;对象）。当所有进程都退出后，资源跟踪器将取消链接任何剩余的跟踪对象。通常不应该有任何资源，但是如果某个进程被信号杀死，则可能会有一些&amp;ldquo;泄漏&amp;rdquo;资源。 （泄漏的信号量和共享内存段都不会自动取消链接，直到下次重新启动为止。这对于两个对象都是有问题的，因为系统仅允许有限数量的命名信号量，并且共享内存段占据了主内存中的某些空间。）</target>
        </trans-unit>
        <trans-unit id="4fd6975fe19e134e6847e77c53014ea295e229e5" translate="yes" xml:space="preserve">
          <source>On Unix when a process finishes but has not been joined it becomes a zombie. There should never be very many because each time a new process starts (or &lt;a href=&quot;#multiprocessing.active_children&quot;&gt;&lt;code&gt;active_children()&lt;/code&gt;&lt;/a&gt; is called) all completed processes which have not yet been joined will be joined. Also calling a finished process&amp;rsquo;s &lt;a href=&quot;#multiprocessing.Process.is_alive&quot;&gt;&lt;code&gt;Process.is_alive&lt;/code&gt;&lt;/a&gt; will join the process. Even so it is probably good practice to explicitly join all the processes that you start.</source>
          <target state="translated">在Unix上，当进程完成但尚未加入时，它就变成了僵尸。永远不要有太多，因为每次启动新进程（或&lt;a href=&quot;#multiprocessing.active_children&quot;&gt; &lt;code&gt;active_children()&lt;/code&gt; &lt;/a&gt;），所有尚未加入的已完成过程都将被加入。同时调用完成的流程的&lt;a href=&quot;#multiprocessing.Process.is_alive&quot;&gt; &lt;code&gt;Process.is_alive&lt;/code&gt; &lt;/a&gt;将加入该流程。即便如此，将您启动的所有过程明确地加入也可能是一个好习惯。</target>
        </trans-unit>
        <trans-unit id="20c7bf34a19e7e868e7d7ee4afbbdea045c0de94" translate="yes" xml:space="preserve">
          <source>On Unix, &lt;a href=&quot;#os.waitstatus_to_exitcode&quot;&gt;&lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt;&lt;/a&gt; can be used to convert the &lt;code&gt;close&lt;/code&gt; method result (exit status) into an exit code if it is not &lt;code&gt;None&lt;/code&gt;. On Windows, the &lt;code&gt;close&lt;/code&gt; method result is directly the exit code (or &lt;code&gt;None&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8df95362b8d364eb0e10e82548a253c70aea11" translate="yes" xml:space="preserve">
          <source>On Unix, &lt;a href=&quot;#os.waitstatus_to_exitcode&quot;&gt;&lt;code&gt;waitstatus_to_exitcode()&lt;/code&gt;&lt;/a&gt; can be used to convert the result (exit status) into an exit code. On Windows, the result is directly the exit code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac03dafabd5b9228353f47e1be8ab58e5322fe4" translate="yes" xml:space="preserve">
          <source>On Unix, an initial &lt;code&gt;~&lt;/code&gt; is replaced by the environment variable &lt;code id=&quot;index-3&quot;&gt;HOME&lt;/code&gt; if it is set; otherwise the current user&amp;rsquo;s home directory is looked up in the password directory through the built-in module &lt;a href=&quot;pwd#module-pwd&quot;&gt;&lt;code&gt;pwd&lt;/code&gt;&lt;/a&gt;. An initial &lt;code&gt;~user&lt;/code&gt; is looked up directly in the password directory.</source>
          <target state="translated">在Unix上，如果设置了首字母 &lt;code&gt;~&lt;/code&gt; ，则由环境变量 &lt;code id=&quot;index-3&quot;&gt;HOME&lt;/code&gt; 代替；否则，通过内置模块&lt;a href=&quot;pwd#module-pwd&quot;&gt; &lt;code&gt;pwd&lt;/code&gt; &lt;/a&gt;在密码目录中查找当前用户的主目录。初始 &lt;code&gt;~user&lt;/code&gt; 在密码目录直接抬起头来。</target>
        </trans-unit>
        <trans-unit id="90a3c08a07528042488b78006ddb2bd1f632d904" translate="yes" xml:space="preserve">
          <source>On Unix, command line arguments are passed by bytes from OS. Python decodes them with filesystem encoding and &amp;ldquo;surrogateescape&amp;rdquo; error handler. When you need original bytes, you can get it by &lt;code&gt;[os.fsencode(arg) for arg in sys.argv]&lt;/code&gt;.</source>
          <target state="translated">在Unix上，命令行参数由OS中的字节传递。 Python使用文件系统编码和&amp;ldquo; surrogateescape&amp;rdquo;错误处理程序对它们进行解码。当您需要原始字节时，可以通过 &lt;code&gt;[os.fsencode(arg) for arg in sys.argv]&lt;/code&gt; 来获取它。</target>
        </trans-unit>
        <trans-unit id="93002bc4f16ed4f7287d3b4688f861b295aba774" translate="yes" xml:space="preserve">
          <source>On Unix, if &lt;em&gt;src&lt;/em&gt; is a file and &lt;em&gt;dst&lt;/em&gt; is a directory or vice-versa, an &lt;a href=&quot;exceptions#IsADirectoryError&quot;&gt;&lt;code&gt;IsADirectoryError&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;exceptions#NotADirectoryError&quot;&gt;&lt;code&gt;NotADirectoryError&lt;/code&gt;&lt;/a&gt; will be raised respectively. If both are directories and &lt;em&gt;dst&lt;/em&gt; is empty, &lt;em&gt;dst&lt;/em&gt; will be silently replaced. If &lt;em&gt;dst&lt;/em&gt; is a non-empty directory, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised. If both are files, &lt;em&gt;dst&lt;/em&gt; it will be replaced silently if the user has permission. The operation may fail on some Unix flavors if &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt; are on different filesystems. If successful, the renaming will be an atomic operation (this is a POSIX requirement).</source>
          <target state="translated">在Unix上，如果&lt;em&gt;src&lt;/em&gt;是文件，而&lt;em&gt;dst&lt;/em&gt;是目录，反之亦然，则将分别引发&lt;a href=&quot;exceptions#IsADirectoryError&quot;&gt; &lt;code&gt;IsADirectoryError&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;exceptions#NotADirectoryError&quot;&gt; &lt;code&gt;NotADirectoryError&lt;/code&gt; &lt;/a&gt;。如果两个都是目录并且&lt;em&gt;dst&lt;/em&gt;为空，则&lt;em&gt;dst&lt;/em&gt;将被静默替换。如果&lt;em&gt;dst&lt;/em&gt;是非空目录，则会引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。如果这两个文件都是文件，则在用户具有权限的情况下，&lt;em&gt;dst&lt;/em&gt;将对其进行静默替换。如果&lt;em&gt;src&lt;/em&gt;和&lt;em&gt;dst&lt;/em&gt;在不同的文件系统上，则该操作在某些Unix风格上可能会失败。如果成功，重命名将是原子操作（这是POSIX要求）。</target>
        </trans-unit>
        <trans-unit id="8925c0a2f7ee268b25b69dc902bb3f8f5965b1b3" translate="yes" xml:space="preserve">
          <source>On Unix, if the process is being traced or if &lt;a href=&quot;#os.waitpid&quot;&gt;&lt;code&gt;waitpid()&lt;/code&gt;&lt;/a&gt; was called with &lt;a href=&quot;#os.WUNTRACED&quot;&gt;&lt;code&gt;WUNTRACED&lt;/code&gt;&lt;/a&gt; option, the caller must first check if &lt;code&gt;WIFSTOPPED(status)&lt;/code&gt; is true. This function must not be called if &lt;code&gt;WIFSTOPPED(status)&lt;/code&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8780f206d9a466abf25b51a1356f99b2ac3e12d8" translate="yes" xml:space="preserve">
          <source>On Unix, keys and values are decoded with &lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler. Use &lt;a href=&quot;#os.getenvb&quot;&gt;&lt;code&gt;os.getenvb()&lt;/code&gt;&lt;/a&gt; if you would like to use a different encoding.</source>
          <target state="translated">在Unix上，键和值使用&lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt; &lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;'surrogateescape'&lt;/code&gt; 错误处理程序进行解码。如果您想使用其他编码，请使用&lt;a href=&quot;#os.getenvb&quot;&gt; &lt;code&gt;os.getenvb()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2736be53c72c433fb105b8ad845ba0292116edf7" translate="yes" xml:space="preserve">
          <source>On Unix, keys and values use &lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler. Use &lt;a href=&quot;#os.environb&quot;&gt;&lt;code&gt;environb&lt;/code&gt;&lt;/a&gt; if you would like to use a different encoding.</source>
          <target state="translated">在Unix上，键和值使用&lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt; &lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;'surrogateescape'&lt;/code&gt; 错误处理程序。如果要使用其他编码，请使用&lt;a href=&quot;#os.environb&quot;&gt; &lt;code&gt;environb&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0c4f12b4b23fde3793d78231c974ebbe635b6cb" translate="yes" xml:space="preserve">
          <source>On Unix, the &lt;code&gt;myapp.pyz&lt;/code&gt; file is executable as it stands. You can rename the file to remove the &lt;code&gt;.pyz&lt;/code&gt; extension if you prefer a &amp;ldquo;plain&amp;rdquo; command name. On Windows, the &lt;code&gt;myapp.pyz[w]&lt;/code&gt; file is executable by virtue of the fact that the Python interpreter registers the &lt;code&gt;.pyz&lt;/code&gt; and &lt;code&gt;.pyzw&lt;/code&gt; file extensions when installed.</source>
          <target state="translated">在Unix上， &lt;code&gt;myapp.pyz&lt;/code&gt; 文件是可执行的。如果您希望使用&amp;ldquo;普通&amp;rdquo;命令名称，则可以重命名该文件以删除 &lt;code&gt;.pyz&lt;/code&gt; 扩展名。在Windows上，由于Python解释器在安装时会注册 &lt;code&gt;.pyz&lt;/code&gt; 和 &lt;code&gt;.pyzw&lt;/code&gt; 文件扩展名，因此可以执行 &lt;code&gt;myapp.pyz[w]&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="c8f756c834d5e154ecd1fc2f824c744c6fb65726" translate="yes" xml:space="preserve">
          <source>On Unix, the encoding is the locale encoding.</source>
          <target state="translated">在Unix上,编码是locale编码。</target>
        </trans-unit>
        <trans-unit id="4130f28e99fb9d275797c90efd13d5dc34107bb6" translate="yes" xml:space="preserve">
          <source>On Unix, the return value is the exit status of the process encoded in the format specified for &lt;a href=&quot;#os.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;. Note that POSIX does not specify the meaning of the return value of the C &lt;code&gt;system()&lt;/code&gt; function, so the return value of the Python function is system-dependent.</source>
          <target state="translated">在Unix上，返回值是以为&lt;a href=&quot;#os.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;指定的格式编码的进程的退出状态。请注意，POSIX没有指定C &lt;code&gt;system()&lt;/code&gt; 函数的返回值的含义，因此Python函数的返回值与系统有关。</target>
        </trans-unit>
        <trans-unit id="db73826f114b93339271a1e0fe842703c96cf902" translate="yes" xml:space="preserve">
          <source>On Unix, this method always requires a system call. On Windows, it only requires a system call if &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; and the entry is a reparse point (for example, a symbolic link or directory junction).</source>
          <target state="translated">在Unix上，此方法始终需要系统调用。在Windows上，只有在&lt;em&gt;follow_symlinks&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; 且该条目是重新分析点（例如，符号链接或目录结点）时，才需要系统调用。</target>
        </trans-unit>
        <trans-unit id="150170a27442f2fab1bfdced209dec9ff8347086" translate="yes" xml:space="preserve">
          <source>On Unix-based systems, &lt;a href=&quot;#os.scandir&quot;&gt;&lt;code&gt;scandir()&lt;/code&gt;&lt;/a&gt; uses the system&amp;rsquo;s &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/009695399/functions/opendir.html&quot;&gt;opendir()&lt;/a&gt; and &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/009695399/functions/readdir_r.html&quot;&gt;readdir()&lt;/a&gt; functions. On Windows, it uses the Win32 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364418(v=vs.85).aspx&quot;&gt;FindFirstFileW&lt;/a&gt; and &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364428(v=vs.85).aspx&quot;&gt;FindNextFileW&lt;/a&gt; functions.</source>
          <target state="translated">在基于Unix的系统上，&lt;a href=&quot;#os.scandir&quot;&gt; &lt;code&gt;scandir()&lt;/code&gt; &lt;/a&gt;使用系统的&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/009695399/functions/opendir.html&quot;&gt;opendir（）&lt;/a&gt;和&lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/009695399/functions/readdir_r.html&quot;&gt;readdir（）&lt;/a&gt;函数。在Windows上，它使用Win32 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364418(v=vs.85).aspx&quot;&gt;FindFirstFileW&lt;/a&gt;和&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa364428(v=vs.85).aspx&quot;&gt;FindNextFileW&lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="cd3be318054f0f7d3a78e6abe995f4e314388b7a" translate="yes" xml:space="preserve">
          <source>On Unix:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063f29033f1f42ed60a4000d40548820821c002e" translate="yes" xml:space="preserve">
          <source>On Unix: Wait for completion of a child process given by process id &lt;em&gt;pid&lt;/em&gt;, and return a tuple containing its process id and exit status indication (encoded as for &lt;a href=&quot;#os.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;). The semantics of the call are affected by the value of the integer &lt;em&gt;options&lt;/em&gt;, which should be &lt;code&gt;0&lt;/code&gt; for normal operation.</source>
          <target state="translated">在Unix上：等待进程id &lt;em&gt;pid&lt;/em&gt;给出的子进程完成，并返回一个包含其进程ID和退出状态指示的元组（编码为&lt;a href=&quot;#os.wait&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;）。调用的语义受整数&lt;em&gt;选项&lt;/em&gt;值的影响，对于常规操作，该值应为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6664197221cc90bd320057a225826f63dffde52" translate="yes" xml:space="preserve">
          <source>On VT100s and their software emulations, such as X terminal emulators, there are normally at least four function keys (&lt;code&gt;KEY_F1&lt;/code&gt;, &lt;code&gt;KEY_F2&lt;/code&gt;, &lt;code&gt;KEY_F3&lt;/code&gt;, &lt;code&gt;KEY_F4&lt;/code&gt;) available, and the arrow keys mapped to &lt;code&gt;KEY_UP&lt;/code&gt;, &lt;code&gt;KEY_DOWN&lt;/code&gt;, &lt;code&gt;KEY_LEFT&lt;/code&gt; and &lt;code&gt;KEY_RIGHT&lt;/code&gt; in the obvious way. If your machine has a PC keyboard, it is safe to expect arrow keys and twelve function keys (older PC keyboards may have only ten function keys); also, the following keypad mappings are standard:</source>
          <target state="translated">在VT100及其软件仿真（例如X终端仿真器）上，通常至少有四个功能键（ &lt;code&gt;KEY_F1&lt;/code&gt; ， &lt;code&gt;KEY_F2&lt;/code&gt; ， &lt;code&gt;KEY_F3&lt;/code&gt; ， &lt;code&gt;KEY_F4&lt;/code&gt; ）可用，并且箭头键以明显的方式映射到 &lt;code&gt;KEY_UP&lt;/code&gt; ， &lt;code&gt;KEY_DOWN&lt;/code&gt; ， &lt;code&gt;KEY_LEFT&lt;/code&gt; 和 &lt;code&gt;KEY_RIGHT&lt;/code&gt; 。如果您的计算机具有PC键盘，则可以安全地使用箭头键和十二个功能键（较旧的PC键盘可能只有十个功能键）；此外，以下键盘映射是标准的：</target>
        </trans-unit>
        <trans-unit id="3899987121cefa28d5ca881e747a27db892dca88" translate="yes" xml:space="preserve">
          <source>On VxWorks, os.fork, os.execv and os.spawn*p* are not supported.</source>
          <target state="translated">在 VxWorks 上,不支持 os.fork、os.execv 和 os.spawn*p*。</target>
        </trans-unit>
        <trans-unit id="6ee0d33d4266d631edea6f3c6725804aebe33d95" translate="yes" xml:space="preserve">
          <source>On VxWorks, the encoding is &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="translated">在VxWorks上，编码为 &lt;code&gt;'utf-8'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="203f05598318fc482dff2c5d330d5adcc5f6680a" translate="yes" xml:space="preserve">
          <source>On Windows &lt;a href=&quot;#shutil.copyfile&quot;&gt;&lt;code&gt;shutil.copyfile()&lt;/code&gt;&lt;/a&gt; uses a bigger default buffer size (1 MiB instead of 64 KiB) and a &lt;a href=&quot;stdtypes#memoryview&quot;&gt;&lt;code&gt;memoryview()&lt;/code&gt;&lt;/a&gt;-based variant of &lt;a href=&quot;#shutil.copyfileobj&quot;&gt;&lt;code&gt;shutil.copyfileobj()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">在Windows &lt;a href=&quot;#shutil.copyfile&quot;&gt; &lt;code&gt;shutil.copyfile()&lt;/code&gt; &lt;/a&gt;使用一个更大的缺省缓冲区大小（1 MIB代替64 KIB）和&lt;a href=&quot;stdtypes#memoryview&quot;&gt; &lt;code&gt;memoryview()&lt;/code&gt; &lt;/a&gt;的基变体&lt;a href=&quot;#shutil.copyfileobj&quot;&gt; &lt;code&gt;shutil.copyfileobj()&lt;/code&gt; &lt;/a&gt;被使用。</target>
        </trans-unit>
        <trans-unit id="8d9ce61f86eb4d4ac3c24d7367b804553ab20d7c" translate="yes" xml:space="preserve">
          <source>On Windows CE only the standard calling convention is used, for convenience the &lt;a href=&quot;#ctypes.WinDLL&quot;&gt;&lt;code&gt;WinDLL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ctypes.OleDLL&quot;&gt;&lt;code&gt;OleDLL&lt;/code&gt;&lt;/a&gt; use the standard calling convention on this platform.</source>
          <target state="translated">在Windows CE上，仅使用标准调用约定，为方便起见，&lt;a href=&quot;#ctypes.WinDLL&quot;&gt; &lt;code&gt;WinDLL&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ctypes.OleDLL&quot;&gt; &lt;code&gt;OleDLL&lt;/code&gt; &lt;/a&gt;在此平台上使用标准调用约定。</target>
        </trans-unit>
        <trans-unit id="fb04bf356ebd737c66dd73bb5259a054c9ae06c3" translate="yes" xml:space="preserve">
          <source>On Windows creating a &lt;a href=&quot;#ctypes.CDLL&quot;&gt;&lt;code&gt;CDLL&lt;/code&gt;&lt;/a&gt; instance may fail even if the DLL name exists. When a dependent DLL of the loaded DLL is not found, a &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; error is raised with the message &lt;em&gt;&amp;ldquo;[WinError 126] The specified module could not be found&amp;rdquo;.&lt;/em&gt; This error message does not contain the name of the missing DLL because the Windows API does not return this information making this error hard to diagnose. To resolve this error and determine which DLL is not found, you need to find the list of dependent DLLs and determine which one is not found using Windows debugging and tracing tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7681719513275f5101654d8f104bb0a386a1bf9b" translate="yes" xml:space="preserve">
          <source>On Windows network interfaces have different names in different contexts (all names are examples):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0867eba7d4a0405fe6540f206891d83e1500d5af" translate="yes" xml:space="preserve">
          <source>On Windows subprocesses are provided by &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; only (default), &lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; has no subprocess support.</source>
          <target state="translated">在Windows上，仅&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;提供子流程（默认），&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; &lt;/a&gt;不支持子流程。</target>
        </trans-unit>
        <trans-unit id="f8900df099d23fe4cefc3ed2ff747e1965dae1b2" translate="yes" xml:space="preserve">
          <source>On Windows systems, the following attributes are also available:</source>
          <target state="translated">在Windows系统中,还可以使用以下属性。</target>
        </trans-unit>
        <trans-unit id="ddfe0eef2e2f38ebe4f48d369d9ce1a6cca527aa" translate="yes" xml:space="preserve">
          <source>On Windows the Win32 API function &lt;code&gt;TerminateProcess()&lt;/code&gt; is called to stop the child process.</source>
          <target state="translated">在Windows上，将调用Win32 API函数 &lt;code&gt;TerminateProcess()&lt;/code&gt; 来停止子进程。</target>
        </trans-unit>
        <trans-unit id="737fe33437bc6a2ea80e837e0281f2030d4293e1" translate="yes" xml:space="preserve">
          <source>On Windows this method is an alias for &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在Windows上，此方法是Terminate &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="2a9d37ebffa50750cbeaa7ad01c13a30b0983c37" translate="yes" xml:space="preserve">
          <source>On Windows with &lt;code&gt;shell=True&lt;/code&gt;, the &lt;code id=&quot;index-2&quot;&gt;COMSPEC&lt;/code&gt; environment variable specifies the default shell. The only time you need to specify &lt;code&gt;shell=True&lt;/code&gt; on Windows is when the command you wish to execute is built into the shell (e.g. &lt;strong&gt;dir&lt;/strong&gt; or &lt;strong&gt;copy&lt;/strong&gt;). You do not need &lt;code&gt;shell=True&lt;/code&gt; to run a batch file or console-based executable.</source>
          <target state="translated">在 &lt;code&gt;shell=True&lt;/code&gt; 的 Windows上， &lt;code id=&quot;index-2&quot;&gt;COMSPEC&lt;/code&gt; 环境变量指定默认的Shell。在Windows上唯一需要指定 &lt;code&gt;shell=True&lt;/code&gt; 的时间是将要执行的命令内置到shell中（例如&lt;strong&gt;dir&lt;/strong&gt;或&lt;strong&gt;copy&lt;/strong&gt;）。您不需要 &lt;code&gt;shell=True&lt;/code&gt; 即可运行批处理文件或基于控制台的可执行文件。</target>
        </trans-unit>
        <trans-unit id="644fd389f0194cebaf7154a9a1f88aabdea9f63c" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;#module-ctypes&quot;&gt;&lt;code&gt;ctypes&lt;/code&gt;&lt;/a&gt; uses win32 structured exception handling to prevent crashes from general protection faults when functions are called with invalid argument values:</source>
          <target state="translated">在Windows上，&lt;a href=&quot;#module-ctypes&quot;&gt; &lt;code&gt;ctypes&lt;/code&gt; &lt;/a&gt;使用win32结构化异常处理来防止使用无效参数值调用函数时因一般保护错误而导致崩溃：</target>
        </trans-unit>
        <trans-unit id="e20bd18b01b22d756d7fbac009a31d413b902ceb" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;#module-signal&quot;&gt;&lt;code&gt;signal()&lt;/code&gt;&lt;/a&gt; can only be called with &lt;a href=&quot;#signal.SIGABRT&quot;&gt;&lt;code&gt;SIGABRT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIGFPE&quot;&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIGILL&quot;&gt;&lt;code&gt;SIGILL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIGINT&quot;&gt;&lt;code&gt;SIGINT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIGSEGV&quot;&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#signal.SIGTERM&quot;&gt;&lt;code&gt;SIGTERM&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#signal.SIGBREAK&quot;&gt;&lt;code&gt;SIGBREAK&lt;/code&gt;&lt;/a&gt;. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised in any other case. Note that not all systems define the same set of signal names; an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; will be raised if a signal name is not defined as &lt;code&gt;SIG*&lt;/code&gt; module level constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b11ed5ae47203f10f9e39c4677ebfc9b376f13c" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;#module-signal&quot;&gt;&lt;code&gt;signal()&lt;/code&gt;&lt;/a&gt; can only be called with &lt;code&gt;SIGABRT&lt;/code&gt;, &lt;code&gt;SIGFPE&lt;/code&gt;, &lt;code&gt;SIGILL&lt;/code&gt;, &lt;code&gt;SIGINT&lt;/code&gt;, &lt;code&gt;SIGSEGV&lt;/code&gt;, &lt;code&gt;SIGTERM&lt;/code&gt;, or &lt;code&gt;SIGBREAK&lt;/code&gt;. A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised in any other case. Note that not all systems define the same set of signal names; an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt; will be raised if a signal name is not defined as &lt;code&gt;SIG*&lt;/code&gt; module level constant.</source>
          <target state="translated">在Windows上，只能使用 &lt;code&gt;SIGABRT&lt;/code&gt; ， &lt;code&gt;SIGFPE&lt;/code&gt; ， &lt;code&gt;SIGILL&lt;/code&gt; ， &lt;code&gt;SIGINT&lt;/code&gt; ， &lt;code&gt;SIGSEGV&lt;/code&gt; ， &lt;code&gt;SIGTERM&lt;/code&gt; 或 &lt;code&gt;SIGBREAK&lt;/code&gt; 调用&lt;a href=&quot;#module-signal&quot;&gt; &lt;code&gt;signal()&lt;/code&gt; &lt;/a&gt;。一个&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; 异常&lt;/a&gt;将在任何其他情况下提出的。请注意，并非所有系统都定义相同的信号名称集。一个&lt;a href=&quot;exceptions#AttributeError&quot;&gt; &lt;code&gt;AttributeError&lt;/code&gt; 的&lt;/a&gt;如果信号名称不被定义为将升高 &lt;code&gt;SIG*&lt;/code&gt; 模块水平恒定。</target>
        </trans-unit>
        <trans-unit id="c63488f33cea6ed67ee2b396df2631f882861591" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code id=&quot;index-4&quot;&gt;USERPROFILE&lt;/code&gt; will be used if set, otherwise a combination of &lt;code id=&quot;index-5&quot;&gt;HOMEPATH&lt;/code&gt; and &lt;code id=&quot;index-6&quot;&gt;HOMEDRIVE&lt;/code&gt; will be used. An initial &lt;code&gt;~user&lt;/code&gt; is handled by stripping the last directory component from the created user path derived above.</source>
          <target state="translated">在Windows上，如果已设置，则将使用 &lt;code id=&quot;index-4&quot;&gt;USERPROFILE&lt;/code&gt; ，否则将使用 &lt;code id=&quot;index-5&quot;&gt;HOMEPATH&lt;/code&gt; 和 &lt;code id=&quot;index-6&quot;&gt;HOMEDRIVE&lt;/code&gt; 的组合。通过从上面派生的创建的用户路径中删除最后一个目录组件来处理初始 &lt;code&gt;~user&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78373ba9cc1e658aeb2f4b7766b4619af35de1bd" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;%name%&lt;/code&gt; expansions are supported in addition to &lt;code&gt;$name&lt;/code&gt; and &lt;code&gt;${name}&lt;/code&gt;.</source>
          <target state="translated">在Windows上，除了 &lt;code&gt;$name&lt;/code&gt; 和 &lt;code&gt;${name}&lt;/code&gt; 外，还支持 &lt;code&gt;%name%&lt;/code&gt; 扩展。</target>
        </trans-unit>
        <trans-unit id="b9eb07682cf8d7554c89ddc6eb7649bd072a9065" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;SIGTERM&lt;/code&gt; is an alias for &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;CTRL_C_EVENT&lt;/code&gt; and &lt;code&gt;CTRL_BREAK_EVENT&lt;/code&gt; can be sent to processes started with a &lt;em&gt;creationflags&lt;/em&gt; parameter which includes &lt;code&gt;CREATE_NEW_PROCESS_GROUP&lt;/code&gt;.</source>
          <target state="translated">在Windows上， &lt;code&gt;SIGTERM&lt;/code&gt; 是Terminate &lt;a href=&quot;#asyncio.asyncio.subprocess.Process.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;的别名。可以将 &lt;code&gt;CTRL_C_EVENT&lt;/code&gt; 和 &lt;code&gt;CTRL_BREAK_EVENT&lt;/code&gt; 发送到以&lt;em&gt;creationflags&lt;/em&gt;参数（包括 &lt;code&gt;CREATE_NEW_PROCESS_GROUP&lt;/code&gt; )启动的进程。</target>
        </trans-unit>
        <trans-unit id="b164d50e56bce46e5b506000cebb450ea480b3ac" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;TCP_KEEPIDLE&lt;/code&gt;, &lt;code&gt;TCP_KEEPINTVL&lt;/code&gt; appear if run-time Windows supports.</source>
          <target state="translated">在Windows上，如果运行时Windows支持，则会显示 &lt;code&gt;TCP_KEEPIDLE&lt;/code&gt; ， &lt;code&gt;TCP_KEEPINTVL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae142dbc5c5a17511c3df2343dcf4473e9997091" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;find_library()&lt;/code&gt; searches along the system search path, and returns the full pathname, but since there is no predefined naming scheme a call like &lt;code&gt;find_library(&quot;c&quot;)&lt;/code&gt; will fail and return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">在Windows上， &lt;code&gt;find_library()&lt;/code&gt; 沿系统搜索路径搜索，并返回完整路径名，但是由于没有预定义的命名方案，因此像 &lt;code&gt;find_library(&quot;c&quot;)&lt;/code&gt; 这样的调用将失败并返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c65155288185d4a2495f910b1a07cb130b3e4d7" translate="yes" xml:space="preserve">
          <source>On Windows, SIGTERM is an alias for &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt;&lt;code&gt;terminate()&lt;/code&gt;&lt;/a&gt;. CTRL_C_EVENT and CTRL_BREAK_EVENT can be sent to processes started with a &lt;em&gt;creationflags&lt;/em&gt; parameter which includes &lt;code&gt;CREATE_NEW_PROCESS_GROUP&lt;/code&gt;.</source>
          <target state="translated">在Windows上，SIGTERM是Terminate &lt;a href=&quot;#subprocess.Popen.terminate&quot;&gt; &lt;code&gt;terminate()&lt;/code&gt; &lt;/a&gt;的别名。可以将CTRL_C_EVENT和CTRL_BREAK_EVENT发送到以&lt;em&gt;creationflags&lt;/em&gt;参数（包括 &lt;code&gt;CREATE_NEW_PROCESS_GROUP&lt;/code&gt; )启动的进程。</target>
        </trans-unit>
        <trans-unit id="7f3b8e43dba078c733dd83c201ede25e60d579e5" translate="yes" xml:space="preserve">
          <source>On Windows, UTF-8 is used for the console device. Non-character devices such as disk files and pipes use the system locale encoding (i.e. the ANSI codepage). Non-console character devices such as NUL (i.e. where &lt;code&gt;isatty()&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt;) use the value of the console input and output codepages at startup, respectively for stdin and stdout/stderr. This defaults to the system locale encoding if the process is not initially attached to a console.</source>
          <target state="translated">在Windows上，UTF-8用于控制台设备。非字符设备（例如磁盘文件和管道）使用系统区域设置编码（即ANSI代码页）。非控制台字符设备（例如NUL）（即 &lt;code&gt;isatty()&lt;/code&gt; 返回 &lt;code&gt;True&lt;/code&gt; ）在启动时分别将控制台输入和输出代码页的值用于stdin和stdout / stderr。如果进程最初未附加到控制台，则默认为系统区域设置编码。</target>
        </trans-unit>
        <trans-unit id="b01b208cf55586de3c3689ead1e3a6f10f966e03" translate="yes" xml:space="preserve">
          <source>On Windows, a symlink represents either a file or a directory, and does not morph to the target dynamically. If the target is present, the type of the symlink will be created to match. Otherwise, the symlink will be created as a directory if &lt;em&gt;target_is_directory&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt; or a file symlink (the default) otherwise. On non-Windows platforms, &lt;em&gt;target_is_directory&lt;/em&gt; is ignored.</source>
          <target state="translated">在Windows上，符号链接表示文件或目录，并且不会动态变形为目标。如果存在目标，则将创建符号链接的类型以进行匹配。否则，如果&lt;em&gt;target_is_directory&lt;/em&gt;为 &lt;code&gt;True&lt;/code&gt; ，则将符号链接创建为目录，否则，将创建文件符号链接（默认值）。在非Windows平台上，&lt;em&gt;target_is_directory&lt;/em&gt;被忽略。</target>
        </trans-unit>
        <trans-unit id="c2d9aee7b296b4bb607ee17ff222cfff0af15e2d" translate="yes" xml:space="preserve">
          <source>On Windows, an &lt;em&gt;args&lt;/em&gt; sequence is converted to a string that can be parsed using the following rules (which correspond to the rules used by the MS C runtime):</source>
          <target state="translated">在Windows上，将&lt;em&gt;args&lt;/em&gt;序列转换为可以使用以下规则（与MS C运行时使用的规则相对应）进行解析的字符串：</target>
        </trans-unit>
        <trans-unit id="afd63b6fc8ddc6f6804a57f1784ecec5567ec0b8" translate="yes" xml:space="preserve">
          <source>On Windows, attempting to remove a file that is in use causes an exception to be raised; on Unix, the directory entry is removed but the storage allocated to the file is not made available until the original file is no longer in use.</source>
          <target state="translated">在Windows上,试图删除一个正在使用的文件会引起一个异常;在Unix上,目录条目被删除,但分配给文件的存储空间不会被使用,直到原始文件不再使用。</target>
        </trans-unit>
        <trans-unit id="324c0800a7c7e804335674d04ffb5659d07d9331" translate="yes" xml:space="preserve">
          <source>On Windows, if &lt;em&gt;args&lt;/em&gt; is a sequence, it will be converted to a string in a manner described in &lt;a href=&quot;#converting-argument-sequence&quot;&gt;Converting an argument sequence to a string on Windows&lt;/a&gt;. This is because the underlying &lt;code&gt;CreateProcess()&lt;/code&gt; operates on strings.</source>
          <target state="translated">在Windows上，如果&lt;em&gt;args&lt;/em&gt;是序列，它将以Windows 上将&lt;em&gt;参数&lt;/em&gt;序列转换为字符串中所述的方式&lt;a href=&quot;#converting-argument-sequence&quot;&gt;转换为字符串&lt;/a&gt;。这是因为基础的 &lt;code&gt;CreateProcess()&lt;/code&gt; 对字符串进行操作。</target>
        </trans-unit>
        <trans-unit id="1ca0b135ebc47d0ae31593b807a8b41656a98f18" translate="yes" xml:space="preserve">
          <source>On Windows, if &lt;em&gt;close_fds&lt;/em&gt; is true then no handles will be inherited by the child process unless explicitly passed in the &lt;code&gt;handle_list&lt;/code&gt; element of &lt;a href=&quot;#subprocess.STARTUPINFO.lpAttributeList&quot;&gt;&lt;code&gt;STARTUPINFO.lpAttributeList&lt;/code&gt;&lt;/a&gt;, or by standard handle redirection.</source>
          <target state="translated">在Windows上，如果&lt;em&gt;close_fds&lt;/em&gt;为true，则子进程将不会继承任何句柄，除非在&lt;a href=&quot;#subprocess.STARTUPINFO.lpAttributeList&quot;&gt; &lt;code&gt;STARTUPINFO.lpAttributeList&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;handle_list&lt;/code&gt; 元素中明确传递或通过标准句柄重定向来传递。</target>
        </trans-unit>
        <trans-unit id="58cdff6f38e8a2fc1c45a1396be1d9e11b5516bf" translate="yes" xml:space="preserve">
          <source>On Windows, if &lt;em&gt;dst&lt;/em&gt; exists a &lt;a href=&quot;exceptions#FileExistsError&quot;&gt;&lt;code&gt;FileExistsError&lt;/code&gt;&lt;/a&gt; is always raised.</source>
          <target state="translated">在Windows上，如果&lt;em&gt;dst&lt;/em&gt;存在，则始终引发&lt;a href=&quot;exceptions#FileExistsError&quot;&gt; &lt;code&gt;FileExistsError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="151772e095fb4521d0d15c163d22479ec518b344" translate="yes" xml:space="preserve">
          <source>On Windows, invoke the &lt;code&gt;venv&lt;/code&gt; command as follows:</source>
          <target state="translated">在Windows上，按以下方式调用 &lt;code&gt;venv&lt;/code&gt; 命令：</target>
        </trans-unit>
        <trans-unit id="9f8dcef9d943b988c3e3efd4a7635b6a0452bcf9" translate="yes" xml:space="preserve">
          <source>On Windows, it disables Windows Error Reporting dialogs using &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms680621.aspx&quot;&gt;SetErrorMode&lt;/a&gt;.</source>
          <target state="translated">在Windows上，它使用&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms680621.aspx&quot;&gt;SetErrorMode&lt;/a&gt;禁用Windows错误报告对话框。</target>
        </trans-unit>
        <trans-unit id="80f74d4a0cc9c87f486e6c7e5dfa2600066b3d59" translate="yes" xml:space="preserve">
          <source>On Windows, it will use &lt;code&gt;CryptGenRandom()&lt;/code&gt;.</source>
          <target state="translated">在Windows上，它将使用 &lt;code&gt;CryptGenRandom()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fdaa8220ca2781471b1bc92ae5261ce25d132d2" translate="yes" xml:space="preserve">
          <source>On Windows, non-inheritable handles and file descriptors are closed in child processes, except for standard streams (file descriptors 0, 1 and 2: stdin, stdout and stderr), which are always inherited. Using &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; functions, all inheritable handles and all inheritable file descriptors are inherited. Using the &lt;a href=&quot;subprocess#module-subprocess&quot;&gt;&lt;code&gt;subprocess&lt;/code&gt;&lt;/a&gt; module, all file descriptors except standard streams are closed, and inheritable handles are only inherited if the &lt;em&gt;close_fds&lt;/em&gt; parameter is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">在Windows上，不可继承的句柄和文件描述符在子进程中关闭，但始终继承的标准流（文件描述符0、1和2：stdin，stdout和stderr）除外。使用&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;函数，所有可继承的句柄和所有可继承的文件描述符都被继承。使用&lt;a href=&quot;subprocess#module-subprocess&quot;&gt; &lt;code&gt;subprocess&lt;/code&gt; &lt;/a&gt;模块，将关闭除标准流以外的所有文件描述符，并且仅当&lt;em&gt;close_fds&lt;/em&gt;参数为 &lt;code&gt;False&lt;/code&gt; 时才继承可继承的句柄。</target>
        </trans-unit>
        <trans-unit id="f9dbbca27b5bff454495040c1d717be7efc3364e" translate="yes" xml:space="preserve">
          <source>On Windows, opening a console buffer may return a subclass of &lt;a href=&quot;io#io.RawIOBase&quot;&gt;&lt;code&gt;io.RawIOBase&lt;/code&gt;&lt;/a&gt; other than &lt;a href=&quot;io#io.FileIO&quot;&gt;&lt;code&gt;io.FileIO&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在Windows上，打开控制台缓冲区可能会返回&lt;a href=&quot;io#io.RawIOBase&quot;&gt; &lt;code&gt;io.RawIOBase&lt;/code&gt; &lt;/a&gt;之外的&lt;a href=&quot;io#io.FileIO&quot;&gt; &lt;code&gt;io.FileIO&lt;/code&gt; &lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="cfe81378442524ce067312e393681abdbd697179" translate="yes" xml:space="preserve">
          <source>On Windows, passing &lt;code&gt;follow_symlinks=False&lt;/code&gt; will disable following all name-surrogate reparse points, which includes symlinks and directory junctions. Other types of reparse points that do not resemble links or that the operating system is unable to follow will be opened directly. When following a chain of multiple links, this may result in the original link being returned instead of the non-link that prevented full traversal. To obtain stat results for the final path in this case, use the &lt;a href=&quot;os.path#os.path.realpath&quot;&gt;&lt;code&gt;os.path.realpath()&lt;/code&gt;&lt;/a&gt; function to resolve the path name as far as possible and call &lt;a href=&quot;#os.lstat&quot;&gt;&lt;code&gt;lstat()&lt;/code&gt;&lt;/a&gt; on the result. This does not apply to dangling symlinks or junction points, which will raise the usual exceptions.</source>
          <target state="translated">在Windows上，传递 &lt;code&gt;follow_symlinks=False&lt;/code&gt; 将禁用所有名称代理重解析点，其中包括符号链接和目录结点。与链接不相似或操作系统无法遵循的其他类型的重新分析点将直接打开。当遵循多个链接的链时，这可能会导致返回原始链接，而不是阻止完全遍历的非链接。在这种情况下，要获取最终路径的统计结果，请使用&lt;a href=&quot;os.path#os.path.realpath&quot;&gt; &lt;code&gt;os.path.realpath()&lt;/code&gt; &lt;/a&gt;函数尽可能地解析路径名，并在结果上调用&lt;a href=&quot;#os.lstat&quot;&gt; &lt;code&gt;lstat()&lt;/code&gt; &lt;/a&gt;。这不适用于悬挂的符号链接或连接点，这会引发通常的异常。</target>
        </trans-unit>
        <trans-unit id="c6205a30ddac655e92925086962c3c5fcb701b9b" translate="yes" xml:space="preserve">
          <source>On Windows, registration of the &lt;code&gt;.pyz&lt;/code&gt; extension is optional, and furthermore, there are certain places that don&amp;rsquo;t recognise registered extensions &amp;ldquo;transparently&amp;rdquo; (the simplest example is that &lt;code&gt;subprocess.run(['myapp'])&lt;/code&gt; won&amp;rsquo;t find your application - you need to explicitly specify the extension).</source>
          <target state="translated">在Windows上， &lt;code&gt;.pyz&lt;/code&gt; 扩展名的注册是可选的，此外，某些地方无法&amp;ldquo;透明地&amp;rdquo;识别已注册的扩展名（最简单的示例是 &lt;code&gt;subprocess.run(['myapp'])&lt;/code&gt; 找不到您的应用程序-您需要明确指定扩展名）。</target>
        </trans-unit>
        <trans-unit id="b7cef7a8f7aec70f461146fb489c493eadecdb76" translate="yes" xml:space="preserve">
          <source>On Windows, return &lt;em&gt;status&lt;/em&gt; shifted right by 8 bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03e9ab7254bf5d9f3bb216b7f00876ce2b424a1" translate="yes" xml:space="preserve">
          <source>On Windows, some dlls export functions not by name but by ordinal. These functions can be accessed by indexing the dll object with the ordinal number:</source>
          <target state="translated">在Windows中,有些dll不是按名称而是按序号导出函数。这些函数可以通过用序号索引dll对象来访问。</target>
        </trans-unit>
        <trans-unit id="cf783f34ae011486fa108e118d4bbe59763b0114" translate="yes" xml:space="preserve">
          <source>On Windows, splits a pathname into drive/UNC sharepoint and relative path.</source>
          <target state="translated">在Windows上,将路径名分割成驱动器/UNC sharepoint和相对路径。</target>
        </trans-unit>
        <trans-unit id="68fb8e7f05cf4a3d74f2fa5903e1bafcce342f6e" translate="yes" xml:space="preserve">
          <source>On Windows, the &lt;code&gt;st_ino&lt;/code&gt;, &lt;code&gt;st_dev&lt;/code&gt; and &lt;code&gt;st_nlink&lt;/code&gt; attributes of the &lt;a href=&quot;#os.stat_result&quot;&gt;&lt;code&gt;stat_result&lt;/code&gt;&lt;/a&gt; are always set to zero. Call &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt; to get these attributes.</source>
          <target state="translated">在Windows中， &lt;code&gt;st_ino&lt;/code&gt; 中， &lt;code&gt;st_dev&lt;/code&gt; 和 &lt;code&gt;st_nlink&lt;/code&gt; 的属性&lt;a href=&quot;#os.stat_result&quot;&gt; &lt;code&gt;stat_result&lt;/code&gt; &lt;/a&gt;总是设置为零。调用&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;获得这些属性。</target>
        </trans-unit>
        <trans-unit id="66761d013cd2216b1b7b3cd2e296f227d596f61c" translate="yes" xml:space="preserve">
          <source>On Windows, the current directory is always prepended to the &lt;em&gt;path&lt;/em&gt; whether or not you use the default or provide your own, which is the behavior the command shell uses when finding executables. Additionally, when finding the &lt;em&gt;cmd&lt;/em&gt; in the &lt;em&gt;path&lt;/em&gt;, the &lt;code&gt;PATHEXT&lt;/code&gt; environment variable is checked. For example, if you call &lt;code&gt;shutil.which(&quot;python&quot;)&lt;/code&gt;, &lt;a href=&quot;#shutil.which&quot;&gt;&lt;code&gt;which()&lt;/code&gt;&lt;/a&gt; will search &lt;code&gt;PATHEXT&lt;/code&gt; to know that it should look for &lt;code&gt;python.exe&lt;/code&gt; within the &lt;em&gt;path&lt;/em&gt; directories. For example, on Windows:</source>
          <target state="translated">在Windows上，无论您使用默认目录还是提供自己的目录，当前目录始终位于&lt;em&gt;路径的&lt;/em&gt;前面，这是命令外壳在查找可执行文件时使用的行为。另外，在&lt;em&gt;路径中&lt;/em&gt;找到&lt;em&gt;cmd&lt;/em&gt;时，将检查 &lt;code&gt;PATHEXT&lt;/code&gt; 环境变量。例如，如果您调用 &lt;code&gt;shutil.which(&quot;python&quot;)&lt;/code&gt; ，则&lt;a href=&quot;#shutil.which&quot;&gt; &lt;code&gt;which()&lt;/code&gt; &lt;/a&gt;将搜索 &lt;code&gt;PATHEXT&lt;/code&gt; 来知道它应该在&lt;em&gt;路径&lt;/em&gt;目录中查找 &lt;code&gt;python.exe&lt;/code&gt; 。例如，在Windows上：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="983f7bfa681a3a9d17b8f9ddb50e0f8c76511264" translate="yes" xml:space="preserve">
          <source>On Windows, the default event loop &lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt;&lt;code&gt;ProactorEventLoop&lt;/code&gt;&lt;/a&gt; supports subprocesses, whereas &lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; does not.</source>
          <target state="translated">在Windows上，默认事件循环&lt;a href=&quot;asyncio-eventloop#asyncio.ProactorEventLoop&quot;&gt; &lt;code&gt;ProactorEventLoop&lt;/code&gt; &lt;/a&gt;支持子流程，而&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; &lt;/a&gt;不支持。</target>
        </trans-unit>
        <trans-unit id="9d6f7b60f53b56af7a399af55e0827b6d4cfd445" translate="yes" xml:space="preserve">
          <source>On Windows, the directories &lt;code&gt;C:\TEMP&lt;/code&gt;, &lt;code&gt;C:\TMP&lt;/code&gt;, &lt;code&gt;\TEMP&lt;/code&gt;, and &lt;code&gt;\TMP&lt;/code&gt;, in that order.</source>
          <target state="translated">在Windows上，目录 &lt;code&gt;C:\TEMP&lt;/code&gt; ， &lt;code&gt;C:\TMP&lt;/code&gt; ， &lt;code&gt;\TEMP&lt;/code&gt; 和 &lt;code&gt;\TMP&lt;/code&gt; 依次排列。</target>
        </trans-unit>
        <trans-unit id="54e0eb52cbdbb1158e147637462f36af394569b1" translate="yes" xml:space="preserve">
          <source>On Windows, the drive letter is not reset when an absolute path component (e.g., &lt;code&gt;r'\foo'&lt;/code&gt;) is encountered. If a component contains a drive letter, all previous components are thrown away and the drive letter is reset. Note that since there is a current directory for each drive, &lt;code&gt;os.path.join(&quot;c:&quot;, &quot;foo&quot;)&lt;/code&gt; represents a path relative to the current directory on drive &lt;code&gt;C:&lt;/code&gt; (&lt;code&gt;c:foo&lt;/code&gt;), not &lt;code&gt;c:\foo&lt;/code&gt;.</source>
          <target state="translated">在Windows上，遇到绝对路径成分（例如 &lt;code&gt;r'\foo'&lt;/code&gt; ）时，不会重置驱动器号。如果某个组件包含驱动器号，则会丢弃所有先前的组件，并重置驱动器号。请注意，由于每个驱动器都有一个当前目录，所以 &lt;code&gt;os.path.join(&quot;c:&quot;, &quot;foo&quot;)&lt;/code&gt; 表示相对于驱动器 &lt;code&gt;C:&lt;/code&gt; （ &lt;code&gt;c:foo&lt;/code&gt; ）上当前目录的路径，而不是 &lt;code&gt;c:\foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3df504605e52e9837e62d0e690a03b408496ac1" translate="yes" xml:space="preserve">
          <source>On Windows, the encoding may be &lt;code&gt;'utf-8'&lt;/code&gt; or &lt;code&gt;'mbcs'&lt;/code&gt;, depending on user configuration.</source>
          <target state="translated">在Windows 上，根据用户配置，编码可能为 &lt;code&gt;'utf-8'&lt;/code&gt; 或 &lt;code&gt;'mbcs'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77f58003eb530e09c101d14120e7527b154308b9" translate="yes" xml:space="preserve">
          <source>On Windows, the file-like object created by &lt;a href=&quot;#socket.socket.makefile&quot;&gt;&lt;code&gt;makefile()&lt;/code&gt;&lt;/a&gt; cannot be used where a file object with a file descriptor is expected, such as the stream arguments of &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在Windows上，不能在需要带有文件描述符的文件对象（例如&lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt; &lt;code&gt;subprocess.Popen()&lt;/code&gt; &lt;/a&gt;的流参数）使用&lt;a href=&quot;#socket.socket.makefile&quot;&gt; &lt;code&gt;makefile()&lt;/code&gt; &lt;/a&gt;创建的类似文件的对象。</target>
        </trans-unit>
        <trans-unit id="0d2f852baab8a06d37a6a99be399f20b228e0595" translate="yes" xml:space="preserve">
          <source>On Windows, the following constants are available for comparing against the &lt;code&gt;st_reparse_tag&lt;/code&gt; member returned by &lt;a href=&quot;os#os.lstat&quot;&gt;&lt;code&gt;os.lstat()&lt;/code&gt;&lt;/a&gt;. These are well-known constants, but are not an exhaustive list.</source>
          <target state="translated">在Windows上，可以使用以下常量与&lt;a href=&quot;os#os.lstat&quot;&gt; &lt;code&gt;os.lstat()&lt;/code&gt; &lt;/a&gt;返回的 &lt;code&gt;st_reparse_tag&lt;/code&gt; 成员进行比较。这些是众所周知的常数，但并非详尽列表。</target>
        </trans-unit>
        <trans-unit id="548033f4f74edd90159967683a7e43861d78a74e" translate="yes" xml:space="preserve">
          <source>On Windows, the following file attribute constants are available for use when testing bits in the &lt;code&gt;st_file_attributes&lt;/code&gt; member returned by &lt;a href=&quot;os#os.stat&quot;&gt;&lt;code&gt;os.stat()&lt;/code&gt;&lt;/a&gt;. See the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117.aspx&quot;&gt;Windows API documentation&lt;/a&gt; for more detail on the meaning of these constants.</source>
          <target state="translated">在Windows上，当测试&lt;a href=&quot;os#os.stat&quot;&gt; &lt;code&gt;os.stat()&lt;/code&gt; &lt;/a&gt;返回的 &lt;code&gt;st_file_attributes&lt;/code&gt; 成员中的位时，可以使用以下文件属性常数。有关这些常量的含义的更多详细信息，请参见&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/gg258117.aspx&quot;&gt;Windows API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c96823b6f593e3c93fa502eb83c4b5bb1b5a0af" translate="yes" xml:space="preserve">
          <source>On Windows, the return value is that returned by the system shell after running &lt;em&gt;command&lt;/em&gt;. The shell is given by the Windows environment variable &lt;code id=&quot;index-35&quot;&gt;COMSPEC&lt;/code&gt;: it is usually &lt;strong&gt;cmd.exe&lt;/strong&gt;, which returns the exit status of the command run; on systems using a non-native shell, consult your shell documentation.</source>
          <target state="translated">在Windows上，返回值是在运行&lt;em&gt;command&lt;/em&gt;之后由系统外壳返回的值。该外壳由Windows环境变量 &lt;code id=&quot;index-35&quot;&gt;COMSPEC&lt;/code&gt; 给出：它通常是&lt;strong&gt;cmd.exe&lt;/strong&gt;，它返回命令运行的退出状态。在使用非本机Shell的系统上，请查阅您的Shell文档。</target>
        </trans-unit>
        <trans-unit id="e476f5cdebcf0629f48aebee8947070a3e92fcbe" translate="yes" xml:space="preserve">
          <source>On Windows, the return value is that returned by the system shell after running &lt;em&gt;command&lt;/em&gt;. The shell is given by the Windows environment variable &lt;code id=&quot;index-37&quot;&gt;COMSPEC&lt;/code&gt;: it is usually &lt;strong&gt;cmd.exe&lt;/strong&gt;, which returns the exit status of the command run; on systems using a non-native shell, consult your shell documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1b0007f46b6c5205cec2ccc2367335b248f69b" translate="yes" xml:space="preserve">
          <source>On Windows, therefore, it is often preferable to create an executable from the zipapp. This is relatively easy, although it does require a C compiler. The basic approach relies on the fact that zipfiles can have arbitrary data prepended, and Windows exe files can have arbitrary data appended. So by creating a suitable launcher and tacking the &lt;code&gt;.pyz&lt;/code&gt; file onto the end of it, you end up with a single-file executable that runs your application.</source>
          <target state="translated">因此，在Windows上，通常最好从zipapp创建可执行文件。尽管确实需要C编译器，但这相对容易。基本方法依赖于以下事实：zip文件可以带有任意数据，而Windows exe文件可以带有任意数据。因此，通过创建合适的启动器并将 &lt;code&gt;.pyz&lt;/code&gt; 文件添加到文件末尾，您最终将获得运行应用程序的单文件可执行文件。</target>
        </trans-unit>
        <trans-unit id="37dc40ac402c8823d0b71dfd8517ae8bdca2012b" translate="yes" xml:space="preserve">
          <source>On Windows, this is an OS handle usable with the &lt;code&gt;WaitForSingleObject&lt;/code&gt; and &lt;code&gt;WaitForMultipleObjects&lt;/code&gt; family of API calls. On Unix, this is a file descriptor usable with primitives from the &lt;a href=&quot;select#module-select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">在Windows上，这是OS句柄，可与API 的 &lt;code&gt;WaitForSingleObject&lt;/code&gt; 和 &lt;code&gt;WaitForMultipleObjects&lt;/code&gt; 系列一起使用。在Unix上，这是一个文件描述符，可与&lt;a href=&quot;select#module-select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;模块中的原语一起使用。</target>
        </trans-unit>
        <trans-unit id="97e0c647fa3b8fd69df5ae6d02b841041c7dc102" translate="yes" xml:space="preserve">
          <source>On Windows, when a foreign function call raises a system exception (for example, due to an access violation), it will be captured and replaced with a suitable Python exception. Further, an auditing event &lt;code&gt;ctypes.seh_exception&lt;/code&gt; with argument &lt;code&gt;code&lt;/code&gt; will be raised, allowing an audit hook to replace the exception with its own.</source>
          <target state="translated">在Windows上，当外部函数调用引发系统异常（例如，由于访问冲突）时，将捕获该异常并将其替换为合适的Python异常。此外，将 &lt;code&gt;ctypes.seh_exception&lt;/code&gt; 带有自变量 &lt;code&gt;code&lt;/code&gt; 的审核事件ctypes.seh_exception，从而允许审核挂钩用其自身替换异常。</target>
        </trans-unit>
        <trans-unit id="10b5f3f739606c767f0a53174c343344eb123b63" translate="yes" xml:space="preserve">
          <source>On Windows, when duplicating a standard stream (0: stdin, 1: stdout, 2: stderr), the new file descriptor is &lt;a href=&quot;#fd-inheritance&quot;&gt;inheritable&lt;/a&gt;.</source>
          <target state="translated">在Windows上，当复制标准流（0：stdin，1：stdout，2：stderr）时，新文件描述符是&lt;a href=&quot;#fd-inheritance&quot;&gt;可继承的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb6115c799330ee3de4f9e4a92324f487e44ec5f" translate="yes" xml:space="preserve">
          <source>On Windows: Wait for completion of a process given by process handle &lt;em&gt;pid&lt;/em&gt;, and return a tuple containing &lt;em&gt;pid&lt;/em&gt;, and its exit status shifted left by 8 bits (shifting makes cross-platform use of the function easier). A &lt;em&gt;pid&lt;/em&gt; less than or equal to &lt;code&gt;0&lt;/code&gt; has no special meaning on Windows, and raises an exception. The value of integer &lt;em&gt;options&lt;/em&gt; has no effect. &lt;em&gt;pid&lt;/em&gt; can refer to any process whose id is known, not necessarily a child process. The &lt;a href=&quot;#os.spawnl&quot;&gt;&lt;code&gt;spawn*&lt;/code&gt;&lt;/a&gt; functions called with &lt;a href=&quot;#os.P_NOWAIT&quot;&gt;&lt;code&gt;P_NOWAIT&lt;/code&gt;&lt;/a&gt; return suitable process handles.</source>
          <target state="translated">在Windows上：等待进程句柄&lt;em&gt;pid&lt;/em&gt;给定的进程完成，并返回一个包含&lt;em&gt;pid&lt;/em&gt;的元组，其退出状态向左移8位（这种移位使跨平台使用该函数更加容易）。一&lt;em&gt;的pid&lt;/em&gt;小于或等于 &lt;code&gt;0&lt;/code&gt; 了Windows上的特殊意义，并提出了一个例外。整数&lt;em&gt;选项&lt;/em&gt;的值无效。&lt;em&gt;pid&lt;/em&gt;可以引用ID已知的任何进程，不一定是子进程。用&lt;a href=&quot;#os.P_NOWAIT&quot;&gt; &lt;code&gt;P_NOWAIT&lt;/code&gt; &lt;/a&gt;调用的&lt;a href=&quot;#os.spawnl&quot;&gt; &lt;code&gt;spawn*&lt;/code&gt; &lt;/a&gt;函数返回适当的进程句柄。</target>
        </trans-unit>
        <trans-unit id="5f12c3a4544b46b4dcf9f6fec778669f13f9f9d3" translate="yes" xml:space="preserve">
          <source>On a Unix-like system, random bytes are read from the &lt;code&gt;/dev/urandom&lt;/code&gt; device. If the &lt;code&gt;/dev/urandom&lt;/code&gt; device is not available or not readable, the &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; exception is raised.</source>
          <target state="translated">在类Unix系统上，从 &lt;code&gt;/dev/urandom&lt;/code&gt; 设备读取随机字节。如果 &lt;code&gt;/dev/urandom&lt;/code&gt; 设备不可用或不可读，则会引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="2601d2cefa3f396475ef76603408eb2f24b04bbb" translate="yes" xml:space="preserve">
          <source>On all other platforms, the directories &lt;code&gt;/tmp&lt;/code&gt;, &lt;code&gt;/var/tmp&lt;/code&gt;, and &lt;code&gt;/usr/tmp&lt;/code&gt;, in that order.</source>
          <target state="translated">在所有其他平台上，该目录分别是 &lt;code&gt;/tmp&lt;/code&gt; ， &lt;code&gt;/var/tmp&lt;/code&gt; 和 &lt;code&gt;/usr/tmp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbc2d24ff952b9a8190a5c30dcfc6274d113abed" translate="yes" xml:space="preserve">
          <source>On all platforms, the configured value is available as the &lt;code&gt;TZPATH&lt;/code&gt; key in &lt;a href=&quot;sysconfig#sysconfig.get_config_var&quot;&gt;&lt;code&gt;sysconfig.get_config_var()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46dbf9b949c04044ffab0fab48aba4115d7ca33a" translate="yes" xml:space="preserve">
          <source>On both platforms, the old value is restored by &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在两个平台上，旧值都通过&lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__exit__&quot;&gt; &lt;code&gt;__exit__()&lt;/code&gt; &lt;/a&gt;恢复。</target>
        </trans-unit>
        <trans-unit id="17c3210130adf4765432271b8ea3db329dae5e0f" translate="yes" xml:space="preserve">
          <source>On both platforms, the old value is restored by &lt;a href=&quot;https://docs.python.org/3.9/reference/datamodel.html#object.__exit__&quot;&gt;&lt;code&gt;__exit__()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7006d98db74f1849b0b0e7ef365ada8d73e13e" translate="yes" xml:space="preserve">
          <source>On client connections, the optional parameter &lt;em&gt;server_hostname&lt;/em&gt; specifies the hostname of the service which we are connecting to. This allows a single server to host multiple SSL-based services with distinct certificates, quite similarly to HTTP virtual hosts. Specifying &lt;em&gt;server_hostname&lt;/em&gt; will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;server_side&lt;/em&gt; is true.</source>
          <target state="translated">在客户端连接上，可选参数&lt;em&gt;server_hostname&lt;/em&gt;指定我们要连接到的服务的主机名。这使得单个服务器可以使用不同的证书托管多个基于SSL的服务，这与HTTP虚拟主机非常相似。如果&lt;em&gt;server_side&lt;/em&gt;为true，则指定&lt;em&gt;server_hostname&lt;/em&gt;将引发&lt;a href=&quot;exceptions#ValueError&quot;&gt; &lt;code&gt;ValueError&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="67540c72da6a0c69935598617862e3eb3b0268da" translate="yes" xml:space="preserve">
          <source>On decoding, replace byte with individual surrogate code ranging from &lt;code&gt;U+DC80&lt;/code&gt; to &lt;code&gt;U+DCFF&lt;/code&gt;. This code will then be turned back into the same byte when the &lt;code&gt;'surrogateescape'&lt;/code&gt; error handler is used when encoding the data. (See &lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 383&lt;/strong&gt;&lt;/a&gt; for more.)</source>
          <target state="translated">解码时，将字节替换为范围从 &lt;code&gt;U+DC80&lt;/code&gt; 到 &lt;code&gt;U+DCFF&lt;/code&gt; 的单个代理代码。然后，在对数据进行编码时使用 &lt;code&gt;'surrogateescape'&lt;/code&gt; 错误处理程序时，此代码将转回相同的字节。（有关详情，请参见&lt;a href=&quot;https://www.python.org/dev/peps/pep-0383&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP383&lt;/strong&gt;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="40a675dc2422036bd8b6d3953dd22e9373dc65f0" translate="yes" xml:space="preserve">
          <source>On encountering an invalid cookie, &lt;a href=&quot;#http.cookies.CookieError&quot;&gt;&lt;code&gt;CookieError&lt;/code&gt;&lt;/a&gt; is raised, so if your cookie data comes from a browser you should always prepare for invalid data and catch &lt;a href=&quot;#http.cookies.CookieError&quot;&gt;&lt;code&gt;CookieError&lt;/code&gt;&lt;/a&gt; on parsing.</source>
          <target state="translated">遇到无效的Cookie时，会引发&lt;a href=&quot;#http.cookies.CookieError&quot;&gt; &lt;code&gt;CookieError&lt;/code&gt; &lt;/a&gt;，因此，如果您的Cookie数据来自浏览器，则应始终为无效数据做准备，并在解析时捕获&lt;a href=&quot;#http.cookies.CookieError&quot;&gt; &lt;code&gt;CookieError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34f29889fea4fa5095b6af09d7ca99a6568ae898" translate="yes" xml:space="preserve">
          <source>On entry to the context manager, a &lt;code&gt;WarningRecorder&lt;/code&gt; instance is returned. The underlying warnings list from &lt;a href=&quot;warnings#warnings.catch_warnings&quot;&gt;&lt;code&gt;catch_warnings()&lt;/code&gt;&lt;/a&gt; is available via the recorder object&amp;rsquo;s &lt;a href=&quot;warnings#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; attribute. As a convenience, the attributes of the object representing the most recent warning can also be accessed directly through the recorder object (see example below). If no warning has been raised, then any of the attributes that would otherwise be expected on an object representing a warning will return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">进入上下文管理器后，将返回 &lt;code&gt;WarningRecorder&lt;/code&gt; 实例。&lt;a href=&quot;warnings#warnings.catch_warnings&quot;&gt; &lt;code&gt;catch_warnings()&lt;/code&gt; &lt;/a&gt;的基础警告列表可通过记录器对象的&lt;a href=&quot;warnings#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt;属性获得。为方便起见，代表最新警告的对象的属性也可以直接通过记录器对象访问（请参见下面的示例）。如果没有引发警告，则表示警告的对象上原应具有的任何属性都将返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="689aca40c906c0122884f520ca113dd2d097568c" translate="yes" xml:space="preserve">
          <source>On large-file-capable Linux systems, this might work:</source>
          <target state="translated">在大文件容量的Linux系统上,这可能是可行的。</target>
        </trans-unit>
        <trans-unit id="6b7b3c25b067b29ff568eb64dceface5effcedb6" translate="yes" xml:space="preserve">
          <source>On macOS 10.6, 10.7 and 10.8, the default event loop uses &lt;a href=&quot;selectors#selectors.KqueueSelector&quot;&gt;&lt;code&gt;selectors.KqueueSelector&lt;/code&gt;&lt;/a&gt;, which does not support character devices on these versions. The &lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt;&lt;code&gt;SelectorEventLoop&lt;/code&gt;&lt;/a&gt; can be manually configured to use &lt;a href=&quot;selectors#selectors.SelectSelector&quot;&gt;&lt;code&gt;SelectSelector&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;selectors#selectors.PollSelector&quot;&gt;&lt;code&gt;PollSelector&lt;/code&gt;&lt;/a&gt; to support character devices on these older versions of macOS. Example:</source>
          <target state="translated">在macOS 10.6、10.7和10.8上，默认事件循环使用&lt;a href=&quot;selectors#selectors.KqueueSelector&quot;&gt; &lt;code&gt;selectors.KqueueSelector&lt;/code&gt; &lt;/a&gt;，这些版本不支持字符设备。可以手动将&lt;a href=&quot;asyncio-eventloop#asyncio.SelectorEventLoop&quot;&gt; &lt;code&gt;SelectorEventLoop&lt;/code&gt; &lt;/a&gt;配置为使用&lt;a href=&quot;selectors#selectors.SelectSelector&quot;&gt; &lt;code&gt;SelectSelector&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;selectors#selectors.PollSelector&quot;&gt; &lt;code&gt;PollSelector&lt;/code&gt; &lt;/a&gt;在这些旧版本的macOS上支持字符设备。例：</target>
        </trans-unit>
        <trans-unit id="59711c87f37f48c6b5ca1ccbf181736677303198" translate="yes" xml:space="preserve">
          <source>On macOS &lt;a href=&quot;http://www.manpagez.com/man/3/copyfile/&quot;&gt;fcopyfile&lt;/a&gt; is used to copy the file content (not metadata).</source>
          <target state="translated">在macOS上，&lt;a href=&quot;http://www.manpagez.com/man/3/copyfile/&quot;&gt;fcopyfile&lt;/a&gt;用于复制文件内容（而非元数据）。</target>
        </trans-unit>
        <trans-unit id="e0095f6ed60d065349c04b6eefb4d5ebe1925719" translate="yes" xml:space="preserve">
          <source>On macOS, the encoding is &lt;code&gt;'utf-8'&lt;/code&gt;.</source>
          <target state="translated">在macOS上，编码为 &lt;code&gt;'utf-8'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce1208192f171228b4901a07d6b02cdddfc85990" translate="yes" xml:space="preserve">
          <source>On macOS, there is one application menu. It dynamically changes according to the window currently selected. It has an IDLE menu, and some entries described below are moved around to conform to Apple guidelines.</source>
          <target state="translated">在macOS上,有一个应用程序菜单。它根据当前选择的窗口动态变化。它有一个IDLE菜单,下面描述的一些条目被移动,以符合苹果的指导方针。</target>
        </trans-unit>
        <trans-unit id="d215bf1c5b7b0def948c235e18bfe40621e88451" translate="yes" xml:space="preserve">
          <source>On many Unix systems (including *BSD, Linux, Solaris, and Darwin), it is more convenient to use the system&amp;rsquo;s zoneinfo (&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/tzfile(5)&quot;&gt;tzfile(5)&lt;/a&gt;&lt;/em&gt;) database to specify the timezone rules. To do this, set the &lt;code id=&quot;index-18&quot;&gt;TZ&lt;/code&gt; environment variable to the path of the required timezone datafile, relative to the root of the systems &amp;lsquo;zoneinfo&amp;rsquo; timezone database, usually located at &lt;code&gt;/usr/share/zoneinfo&lt;/code&gt;. For example, &lt;code&gt;'US/Eastern'&lt;/code&gt;, &lt;code&gt;'Australia/Melbourne'&lt;/code&gt;, &lt;code&gt;'Egypt'&lt;/code&gt; or &lt;code&gt;'Europe/Amsterdam'&lt;/code&gt;.</source>
          <target state="translated">在许多Unix系统（包括* BSD，Linux，Solaris和Darwin）上，使用系统的zoneinfo（&lt;em&gt;&lt;a href=&quot;https://manpages.debian.org/tzfile(5)&quot;&gt;tzfile（5）&lt;/a&gt;&lt;/em&gt;）数据库指定时区规则更为方便。为此，请将 &lt;code id=&quot;index-18&quot;&gt;TZ&lt;/code&gt; 环境变量设置为所需时区数据文件的路径，相对于系统&amp;ldquo; zoneinfo&amp;rdquo;时区数据库的根目录（通常位于 &lt;code&gt;/usr/share/zoneinfo&lt;/code&gt; )。例如， &lt;code&gt;'US/Eastern'&lt;/code&gt; ， &lt;code&gt;'Australia/Melbourne'&lt;/code&gt; ， &lt;code&gt;'Egypt'&lt;/code&gt; 或 &lt;code&gt;'Europe/Amsterdam'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04ba6be7d13c87b73b6437d8a6f57d4cef94efc0" translate="yes" xml:space="preserve">
          <source>On newer versions of Windows 10, unprivileged accounts can create symlinks if Developer Mode is enabled. When Developer Mode is not available/enabled, the &lt;em&gt;SeCreateSymbolicLinkPrivilege&lt;/em&gt; privilege is required, or the process must be run as an administrator.</source>
          <target state="translated">在Windows 10的较新版本上，如果启用了开发人员模式，则非特权帐户可以创建符号链接。如果开发人员模式不可用/未启用，则需要&lt;em&gt;SeCreateSymbolicLinkPrivilege&lt;/em&gt;特权，或者必须以管理员身份运行该过程。</target>
        </trans-unit>
        <trans-unit id="f7bf663d20ba88f3d3779656c2de6b087faad7b7" translate="yes" xml:space="preserve">
          <source>On other Unix systems (such as FreeBSD), the following attributes may be available (but may be only filled out if root tries to use them):</source>
          <target state="translated">在其他 Unix 系统上 (例如 FreeBSD),以下属性可能是可用的 (但只有在 root 尝试使用它们时才会被填写)。</target>
        </trans-unit>
        <trans-unit id="06c0e7561753d8281468dc3f168c40f9e9b2351d" translate="yes" xml:space="preserve">
          <source>On other platforms, the generic &lt;a href=&quot;fcntl#fcntl.fcntl&quot;&gt;&lt;code&gt;fcntl.fcntl()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fcntl#fcntl.ioctl&quot;&gt;&lt;code&gt;fcntl.ioctl()&lt;/code&gt;&lt;/a&gt; functions may be used; they accept a socket object as their first argument.</source>
          <target state="translated">在其他平台上，可以使用通用的&lt;a href=&quot;fcntl#fcntl.fcntl&quot;&gt; &lt;code&gt;fcntl.fcntl()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;fcntl#fcntl.ioctl&quot;&gt; &lt;code&gt;fcntl.ioctl()&lt;/code&gt; &lt;/a&gt;函数。他们接受套接字对象作为第一个参数。</target>
        </trans-unit>
        <trans-unit id="30fe0b6f68fa261e54a2b916d494101fac571654" translate="yes" xml:space="preserve">
          <source>On output, if &lt;em&gt;doublequote&lt;/em&gt; is &lt;a href=&quot;constants#False&quot;&gt;&lt;code&gt;False&lt;/code&gt;&lt;/a&gt; and no &lt;em&gt;escapechar&lt;/em&gt; is set, &lt;a href=&quot;#csv.Error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is raised if a &lt;em&gt;quotechar&lt;/em&gt; is found in a field.</source>
          <target state="translated">在输出时，如果&lt;em&gt;双引号&lt;/em&gt;是&lt;a href=&quot;constants#False&quot;&gt; &lt;code&gt;False&lt;/code&gt; &lt;/a&gt;，没有&lt;em&gt;escapechar&lt;/em&gt;设置，&lt;a href=&quot;#csv.Error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;是，如果凸起&lt;em&gt;quotechar&lt;/em&gt;是在现场发现的。</target>
        </trans-unit>
        <trans-unit id="c0af5b92888c4dc7ffac3572dfa0d442dabf0ede" translate="yes" xml:space="preserve">
          <source>On platforms that do not support symbolic links, this is an alias for &lt;a href=&quot;#os.stat&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在不支持符号链接的平台上，这是&lt;a href=&quot;#os.stat&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="835888031d7cef42de83709eee1579e07f8ea020" translate="yes" xml:space="preserve">
          <source>On platforms that support the necessary fd-based functions a symlink attack resistant version of &lt;a href=&quot;#shutil.rmtree&quot;&gt;&lt;code&gt;rmtree()&lt;/code&gt;&lt;/a&gt; is used by default. On other platforms, the &lt;a href=&quot;#shutil.rmtree&quot;&gt;&lt;code&gt;rmtree()&lt;/code&gt;&lt;/a&gt; implementation is susceptible to a symlink attack: given proper timing and circumstances, attackers can manipulate symlinks on the filesystem to delete files they wouldn&amp;rsquo;t be able to access otherwise. Applications can use the &lt;a href=&quot;#shutil.rmtree.avoids_symlink_attacks&quot;&gt;&lt;code&gt;rmtree.avoids_symlink_attacks&lt;/code&gt;&lt;/a&gt; function attribute to determine which case applies.</source>
          <target state="translated">在支持必要的基于fd的功能的平台上，默认情况下会使用&lt;a href=&quot;#shutil.rmtree&quot;&gt; &lt;code&gt;rmtree()&lt;/code&gt; &lt;/a&gt;的symlink抗攻击版本。在其他平台上，&lt;a href=&quot;#shutil.rmtree&quot;&gt; &lt;code&gt;rmtree()&lt;/code&gt; &lt;/a&gt;实现易受符号链接攻击：在适当的时机和环境下，攻击者可以操纵文件系统上的符号链接来删除否则将无法访问的文件。应用程序可以使用&lt;a href=&quot;#shutil.rmtree.avoids_symlink_attacks&quot;&gt; &lt;code&gt;rmtree.avoids_symlink_attacks&lt;/code&gt; &lt;/a&gt;函数属性来确定哪种情况适用。</target>
        </trans-unit>
        <trans-unit id="a2539c27ac2c42d14e6d76946d07ef981a8cc60c" translate="yes" xml:space="preserve">
          <source>On platforms using IEEE 754 binary floating-point, the result of this operation is always exactly representable: no rounding error is introduced.</source>
          <target state="translated">在使用IEEE 754二进制浮点的平台上,该操作的结果总是可以准确地表示出来:不会引入四舍五入错误。</target>
        </trans-unit>
        <trans-unit id="d0f67e7089bb8910b4e4fda4cf6b72e3df1c3c94" translate="yes" xml:space="preserve">
          <source>On platforms where some or all of this functionality is unavailable, when asked to modify a symbolic link, &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; will copy everything it can. &lt;a href=&quot;#shutil.copystat&quot;&gt;&lt;code&gt;copystat()&lt;/code&gt;&lt;/a&gt; never returns failure.</source>
          <target state="translated">在某些或所有此功能不可用的平台上，当要求修改符号链接时，&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;将复制所有可以的内容。&lt;a href=&quot;#shutil.copystat&quot;&gt; &lt;code&gt;copystat()&lt;/code&gt; &lt;/a&gt;从不返回失败。</target>
        </trans-unit>
        <trans-unit id="3c6b1f69887e623bddc661e6cae08b9b00d43caf" translate="yes" xml:space="preserve">
          <source>On platforms with hardware and system-level support for signed zeros, functions involving branch cuts are continuous on &lt;em&gt;both&lt;/em&gt; sides of the branch cut: the sign of the zero distinguishes one side of the branch cut from the other. On platforms that do not support signed zeros the continuity is as specified below.</source>
          <target state="translated">在硬件和系统级支持平台符号的零，涉及分支机构削减功能是连续&lt;em&gt;两个&lt;/em&gt;分支切割面：从另一个分支切割的零个区分一方的迹象。在不支持带符号零的平台上，连续性如下所示。</target>
        </trans-unit>
        <trans-unit id="cea002554b75820329fc15191d1a6a71d5584562" translate="yes" xml:space="preserve">
          <source>On platforms without &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;Completer&lt;/code&gt; class defined by this module can still be used for custom purposes.</source>
          <target state="translated">在没有&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; 的&lt;/a&gt;平台上，此模块定义的 &lt;code&gt;Completer&lt;/code&gt; 类仍可用于自定义目的。</target>
        </trans-unit>
        <trans-unit id="4c6a777251164aea8999f437ba7c8d0b926184ae" translate="yes" xml:space="preserve">
          <source>On some Unix platforms, many of these functions support one or more of these features:</source>
          <target state="translated">在一些Unix平台上,这些函数中的许多函数都支持其中的一个或多个功能。</target>
        </trans-unit>
        <trans-unit id="eaba699b79f7765281c28b47b3e0ec7e21c3ec5c" translate="yes" xml:space="preserve">
          <source>On some Unix systems (such as Linux), the following attributes may also be available:</source>
          <target state="translated">在某些Unix系统(如Linux)上,以下属性也可能可用。</target>
        </trans-unit>
        <trans-unit id="f0ae39c0ac3f68172a6d225258c4c362c47d6748" translate="yes" xml:space="preserve">
          <source>On some platforms, an optional field width and precision specification can immediately follow the initial &lt;code&gt;'%'&lt;/code&gt; of a directive in the following order; this is also not portable. The field width is normally 2 except for &lt;code&gt;%j&lt;/code&gt; where it is 3.</source>
          <target state="translated">在某些平台上，可选的字段宽度和精度规范可以按以下顺序立即跟随指令的初始 &lt;code&gt;'%'&lt;/code&gt; ；这也不是便携式的。字段宽度通常为2，除了 &lt;code&gt;%j&lt;/code&gt; 为3。</target>
        </trans-unit>
        <trans-unit id="49846f91b44b9eabca7917db8a10258a1a0b35cf" translate="yes" xml:space="preserve">
          <source>On some platforms, including FreeBSD and Mac OS X, setting &lt;code&gt;environ&lt;/code&gt; may cause memory leaks. Refer to the system documentation for &lt;code&gt;putenv()&lt;/code&gt;.</source>
          <target state="translated">在某些平台上，包括FreeBSD和Mac OS X，设置 &lt;code&gt;environ&lt;/code&gt; 可能会导致内存泄漏。请参阅系统文档以获取 &lt;code&gt;putenv()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58e337bb68a53e0e0fdf875e3f9a3ba499302b95" translate="yes" xml:space="preserve">
          <source>On some platforms, including FreeBSD and Mac OS X, setting &lt;code&gt;environ&lt;/code&gt; may cause memory leaks. Refer to the system documentation for putenv.</source>
          <target state="translated">在某些平台上，包括FreeBSD和Mac OS X，设置 &lt;code&gt;environ&lt;/code&gt; 可能会导致内存泄漏。请参阅系统文档以获取putenv。</target>
        </trans-unit>
        <trans-unit id="ce939615baf6b4e6e43bf427856a8f1921f68d68" translate="yes" xml:space="preserve">
          <source>On some systems, &lt;a href=&quot;#socket.socket.sendmsg&quot;&gt;&lt;code&gt;sendmsg()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; can be used to pass file descriptors between processes over an &lt;a href=&quot;#socket.AF_UNIX&quot;&gt;&lt;code&gt;AF_UNIX&lt;/code&gt;&lt;/a&gt; socket. When this facility is used (it is often restricted to &lt;a href=&quot;#socket.SOCK_STREAM&quot;&gt;&lt;code&gt;SOCK_STREAM&lt;/code&gt;&lt;/a&gt; sockets), &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; will return, in its ancillary data, items of the form &lt;code&gt;(socket.SOL_SOCKET,
socket.SCM_RIGHTS, fds)&lt;/code&gt;, where &lt;em&gt;fds&lt;/em&gt; is a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object representing the new file descriptors as a binary array of the native C &lt;code&gt;int&lt;/code&gt; type. If &lt;a href=&quot;#socket.socket.recvmsg&quot;&gt;&lt;code&gt;recvmsg()&lt;/code&gt;&lt;/a&gt; raises an exception after the system call returns, it will first attempt to close any file descriptors received via this mechanism.</source>
          <target state="translated">在某些系统上，可以使用&lt;a href=&quot;#socket.socket.sendmsg&quot;&gt; &lt;code&gt;sendmsg()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;通过&lt;a href=&quot;#socket.AF_UNIX&quot;&gt; &lt;code&gt;AF_UNIX&lt;/code&gt; &lt;/a&gt;套接字在进程之间传递文件描述符。使用此功能时（通常仅限于&lt;a href=&quot;#socket.SOCK_STREAM&quot;&gt; &lt;code&gt;SOCK_STREAM&lt;/code&gt; &lt;/a&gt;套接字），&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;将在其辅助数据中返回以下格式的项目 &lt;code&gt;(socket.SOL_SOCKET, socket.SCM_RIGHTS, fds)&lt;/code&gt; ，其中&lt;em&gt;fds&lt;/em&gt;是一个&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;对象，表示新文件描述符作为本机C &lt;code&gt;int&lt;/code&gt; 类型的二进制数组。如果在系统调用返回后&lt;a href=&quot;#socket.socket.recvmsg&quot;&gt; &lt;code&gt;recvmsg()&lt;/code&gt; &lt;/a&gt;引发异常，它将首先尝试关闭通过此机制接收到的所有文件描述符。</target>
        </trans-unit>
        <trans-unit id="0854fe514f9f478ef9200189533ba9f76d283b6e" translate="yes" xml:space="preserve">
          <source>On some systems, &lt;em&gt;mode&lt;/em&gt; is ignored. Where it is used, the current umask value is first masked out. If bits other than the last 9 (i.e. the last 3 digits of the octal representation of the &lt;em&gt;mode&lt;/em&gt;) are set, their meaning is platform-dependent. On some platforms, they are ignored and you should call &lt;a href=&quot;#os.chmod&quot;&gt;&lt;code&gt;chmod()&lt;/code&gt;&lt;/a&gt; explicitly to set them.</source>
          <target state="translated">在某些系统上，&lt;em&gt;模式&lt;/em&gt;被忽略。使用它时，当前的umask值首先被屏蔽掉。如果设置了除最后9个数字（即&lt;em&gt;模式&lt;/em&gt;的八进制表示形式的最后3位）以外的其他位，则它们的含义取决于平台。在某些平台上，它们会被忽略，您应该显式调用&lt;a href=&quot;#os.chmod&quot;&gt; &lt;code&gt;chmod()&lt;/code&gt; &lt;/a&gt;进行设置。</target>
        </trans-unit>
        <trans-unit id="91c09add15e3897cc71e4285cad983d35ae19c62" translate="yes" xml:space="preserve">
          <source>On some systems, it is necessary to invoke &lt;a href=&quot;#locale.setlocale&quot;&gt;&lt;code&gt;setlocale()&lt;/code&gt;&lt;/a&gt; to obtain the user preferences, so this function is not thread-safe. If invoking setlocale is not necessary or desired, &lt;em&gt;do_setlocale&lt;/em&gt; should be set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">在某些系统上，必须调用&lt;a href=&quot;#locale.setlocale&quot;&gt; &lt;code&gt;setlocale()&lt;/code&gt; &lt;/a&gt;以获得用户首选项，因此此函数不是线程安全的。如果不需要或不需要调用setlocale，则应将&lt;em&gt;do_setlocale&lt;/em&gt;设置为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6110a82223307cc8967bdb9b6a267ed5e823067" translate="yes" xml:space="preserve">
          <source>On success, the data and separator will be removed from the internal buffer (consumed). Returned data will include the separator at the end.</source>
          <target state="translated">成功后,数据和分离器将从内部缓冲区中移除(消耗)。返回的数据将包括最后的分隔符。</target>
        </trans-unit>
        <trans-unit id="81d3e77503079dc680941880acaf81e6572cb402" translate="yes" xml:space="preserve">
          <source>On systems that support &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;, this module will also import and configure the &lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module, if Python is started in &lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt; and without the &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; option. The default behavior is enable tab-completion and to use &lt;code&gt;~/.python_history&lt;/code&gt; as the history save file. To disable it, delete (or override) the &lt;a href=&quot;sys#sys.__interactivehook__&quot;&gt;&lt;code&gt;sys.__interactivehook__&lt;/code&gt;&lt;/a&gt; attribute in your &lt;code&gt;sitecustomize&lt;/code&gt; or &lt;code&gt;usercustomize&lt;/code&gt; module or your &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-7&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">在支持&lt;a href=&quot;readline#module-readline&quot;&gt; &lt;code&gt;readline&lt;/code&gt; 的&lt;/a&gt;系统上，如果Python以&lt;a href=&quot;https://docs.python.org/3.8/tutorial/interpreter.html#tut-interactive&quot;&gt;交互方式&lt;/a&gt;启动且没有&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt; &lt;code&gt;-S&lt;/code&gt; &lt;/a&gt;选项，则此模块还将导入并配置&lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt; &lt;code&gt;rlcompleter&lt;/code&gt; &lt;/a&gt;模块。默认行为是启用制表符完成功能，并使用 &lt;code&gt;~/.python_history&lt;/code&gt; 作为历史记录保存文件。要禁用它，请删除（或覆盖）您的 &lt;code&gt;sitecustomize&lt;/code&gt; 或 &lt;code&gt;usercustomize&lt;/code&gt; 模块或&lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-7&quot;&gt; &lt;code&gt;PYTHONSTARTUP&lt;/code&gt; &lt;/a&gt;文件中的&lt;a href=&quot;sys#sys.__interactivehook__&quot;&gt; &lt;code&gt;sys.__interactivehook__&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="9eb104f76bd96ade5a8176723ed9b7aea345a251" translate="yes" xml:space="preserve">
          <source>On systems that support &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline&lt;/code&gt;&lt;/a&gt;, this module will also import and configure the &lt;a href=&quot;rlcompleter#module-rlcompleter&quot;&gt;&lt;code&gt;rlcompleter&lt;/code&gt;&lt;/a&gt; module, if Python is started in &lt;a href=&quot;https://docs.python.org/3.9/tutorial/interpreter.html#tut-interactive&quot;&gt;interactive mode&lt;/a&gt; and without the &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; option. The default behavior is enable tab-completion and to use &lt;code&gt;~/.python_history&lt;/code&gt; as the history save file. To disable it, delete (or override) the &lt;a href=&quot;sys#sys.__interactivehook__&quot;&gt;&lt;code&gt;sys.__interactivehook__&lt;/code&gt;&lt;/a&gt; attribute in your &lt;code&gt;sitecustomize&lt;/code&gt; or &lt;code&gt;usercustomize&lt;/code&gt; module or your &lt;a href=&quot;https://docs.python.org/3.9/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-7&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce3a4c7161faf6a2733a2da667b68f080fb9ebe" translate="yes" xml:space="preserve">
          <source>On systems which support the &lt;code&gt;SCM_RIGHTS&lt;/code&gt; mechanism, the following function will receive up to &lt;em&gt;maxfds&lt;/em&gt; file descriptors, returning the message data and a list containing the descriptors (while ignoring unexpected conditions such as unrelated control messages being received). See also &lt;a href=&quot;#socket.socket.sendmsg&quot;&gt;&lt;code&gt;sendmsg()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在支持 &lt;code&gt;SCM_RIGHTS&lt;/code&gt; 机制的系统上，以下函数将最多接收&lt;em&gt;maxfds&lt;/em&gt;文件描述符，返回消息数据和包含描述符的列表（同时忽略意外情况，例如接收到无关的控制消息）。另请参见&lt;a href=&quot;#socket.socket.sendmsg&quot;&gt; &lt;code&gt;sendmsg()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0bd387ae56d8456aacef9c5c7039622bbd157974" translate="yes" xml:space="preserve">
          <source>On systems with overallocation (e.g. Linux), a more sophisticated approach is to adjust &lt;code&gt;prec&lt;/code&gt; to the amount of available RAM. Suppose that you have 8GB of RAM and expect 10 simultaneous operands using a maximum of 500MB each:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170fe28c30f87352badfea6a1b0adfa7979f0455" translate="yes" xml:space="preserve">
          <source>On the Font tab, see the text sample for the effect of font face and size on multiple characters in multiple languages. Edit the sample to add other characters of personal interest. Use the sample to select monospaced fonts. If particular characters have problems in Shell or an editor, add them to the top of the sample and try changing first size and then font.</source>
          <target state="translated">在 &quot;字体 &quot;选项卡上,查看文字样本,了解多语言中多个字符的字面和大小的效果。编辑样本,添加其他个人感兴趣的字符。使用样本来选择单间隔字体。如果特定字符在Shell或编辑器中出现问题,请将它们添加到样本顶部,并尝试先改变大小,然后改变字体。</target>
        </trans-unit>
        <trans-unit id="0b329dc6e9c4b674641af665ee59096dbcd8c046" translate="yes" xml:space="preserve">
          <source>On the Highlights and Keys tab, select a built-in or custom color theme and key set. To use a newer built-in color theme or key set with older IDLEs, save it as a new custom theme or key set and it well be accessible to older IDLEs.</source>
          <target state="translated">在 &quot;亮点和键 &quot;选项卡上,选择内置或自定义颜色主题和键集。要在旧的IDLEs中使用较新的内置颜色主题或键集,请将其保存为新的自定义主题或键集,它就可以被旧的IDLEs访问。</target>
        </trans-unit>
        <trans-unit id="bb9fb9ccc44f0f6638fed1a987aa33ae9f6959c6" translate="yes" xml:space="preserve">
          <source>On the POSIX compliant platforms, it is equivalent to the following expression:</source>
          <target state="translated">在符合POSIX标准的平台上,它相当于下面的表达式。</target>
        </trans-unit>
        <trans-unit id="8718a6ecfb2948f94e8214f2c029ea186b4fea26" translate="yes" xml:space="preserve">
          <source>On the consumer side, we can pickle those objects the usual way, which when unserialized will give us a copy of the original object:</source>
          <target state="translated">在消费端,我们可以用通常的方式来拾取这些对象,当未序列化时,会给我们一个原始对象的副本。</target>
        </trans-unit>
        <trans-unit id="491abdd927ace9b614d81c92dc19845f26b3d2e7" translate="yes" xml:space="preserve">
          <source>On the first, uncached call, a system call is required on Windows but not on Unix.</source>
          <target state="translated">在第一个未缓存的调用中,Windows上需要系统调用,但Unix上不需要。</target>
        </trans-unit>
        <trans-unit id="5cd90c0c17f384bfaab3cff8f5c166412c102c98" translate="yes" xml:space="preserve">
          <source>On the first, uncached call, no system call is required in most cases. Specifically, for non-symlinks, neither Windows or Unix require a system call, except on certain Unix file systems, such as network file systems, that return &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt;. If the entry is a symlink, a system call will be required to follow the symlink unless &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">在第一个未缓存的调用中，大多数情况下不需要系统调用。具体来说，对于非符号链接，Windows或Unix都不需要系统调用，除非某些Unix文件系统（例如网络文件系统）返回 &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt; 。如果该条目是符号链接，则除非符号&lt;em&gt;follow_symlinks&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; ,否则将要求系统调用以跟随符号链接。</target>
        </trans-unit>
        <trans-unit id="f9dac8ead05b600f65bb3a1c6b260cbf7bc2b51d" translate="yes" xml:space="preserve">
          <source>On the first, uncached call, no system call is required in most cases. Specifically, neither Windows or Unix require a system call, except on certain Unix file systems, such as network file systems, that return &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt;.</source>
          <target state="translated">在第一个未缓存的调用中，大多数情况下不需要系统调用。具体来说，Windows或Unix都不需要系统调用，除非某些Unix文件系统（例如网络文件系统）返回 &lt;code&gt;dirent.d_type == DT_UNKNOWN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e84ca525861c9e265cab3b438b32f029594120f" translate="yes" xml:space="preserve">
          <source>On the other hand, if an explicit value of &lt;code&gt;None&lt;/code&gt; is allowed, the use of &lt;code&gt;Optional&lt;/code&gt; is appropriate, whether the argument is optional or not. For example:</source>
          <target state="translated">另一方面，如果允许显式值 &lt;code&gt;None&lt;/code&gt; ，则无论参数是否可选，都可以使用 &lt;code&gt;Optional&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="bf9973b9d57271129427560d24c59bd726fbd904" translate="yes" xml:space="preserve">
          <source>On the other hand, if you are building an HTTP server where all data is stored externally (for instance, in the file system), a synchronous class will essentially render the service &amp;ldquo;deaf&amp;rdquo; while one request is being handled &amp;ndash; which may be for a very long time if a client is slow to receive all the data it has requested. Here a threading or forking server is appropriate.</source>
          <target state="translated">另一方面，如果要构建一个HTTP服务器，其中所有数据都存储在外部（例如，在文件系统中），则同步类实际上将在处理一个请求时将服务&amp;ldquo;聋&amp;rdquo;起来&amp;ndash;这可能是为了如果客户端接收请求的所有数据的速度很慢，则需要很长时间。在这里，线程服务器或分支服务器是合适的。</target>
        </trans-unit>
        <trans-unit id="9d9537632dbfd5ce7c3381fb8473c75296dfa687" translate="yes" xml:space="preserve">
          <source>On the other hand, the precision of &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#time.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt; is better than their Unix equivalents: times are expressed as floating point numbers, &lt;a href=&quot;#time.time&quot;&gt;&lt;code&gt;time()&lt;/code&gt;&lt;/a&gt; returns the most accurate time available (using Unix &lt;code&gt;gettimeofday()&lt;/code&gt; where available), and &lt;a href=&quot;#time.sleep&quot;&gt;&lt;code&gt;sleep()&lt;/code&gt;&lt;/a&gt; will accept a time with a nonzero fraction (Unix &lt;code&gt;select()&lt;/code&gt; is used to implement this, where available).</source>
          <target state="translated">另一方面，&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#time.sleep&quot;&gt; &lt;code&gt;sleep()&lt;/code&gt; &lt;/a&gt;的精度优于Unix上的精度：时间以浮点数表示，&lt;a href=&quot;#time.time&quot;&gt; &lt;code&gt;time()&lt;/code&gt; &lt;/a&gt;返回可用的最准确时间（使用Unix &lt;code&gt;gettimeofday()&lt;/code&gt; ），以及&lt;a href=&quot;#time.sleep&quot;&gt; &lt;code&gt;sleep()&lt;/code&gt; &lt;/a&gt;将接受一个非零分数的时间（Unix &lt;code&gt;select()&lt;/code&gt; 用于实现这一点，如果有的话）。</target>
        </trans-unit>
        <trans-unit id="2b4270c26ef431be82a119288026b915740bbad6" translate="yes" xml:space="preserve">
          <source>On the other hand, the statement &lt;code&gt;from spam.ham import eggs, sausage as
saus&lt;/code&gt; results in</source>
          <target state="translated">另一方面， &lt;code&gt;from spam.ham import eggs, sausage as saus&lt;/code&gt; 的声明则将鸡蛋，香肠作为香肠的结果</target>
        </trans-unit>
        <trans-unit id="302064ecd83cf854ce5daa489ae06236b2f77d49" translate="yes" xml:space="preserve">
          <source>On the real line, there are functions to compute uniform, normal (Gaussian), lognormal, negative exponential, gamma, and beta distributions. For generating distributions of angles, the von Mises distribution is available.</source>
          <target state="translated">在实线上,有计算均匀分布、正态分布(高斯)、对数正态分布、负指数分布、γ分布和β分布的函数。对于生成角的分布,可以使用von Mises分布。</target>
        </trans-unit>
        <trans-unit id="021f9c86cdcc2f4cf15e28ff86eb4c57b0b3ffd0" translate="yes" xml:space="preserve">
          <source>On the receiving side, it needs to pass a &lt;em&gt;buffers&lt;/em&gt; argument to &lt;a href=&quot;#pickle.Unpickler&quot;&gt;&lt;code&gt;Unpickler&lt;/code&gt;&lt;/a&gt; (or to the &lt;a href=&quot;#pickle.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pickle.loads&quot;&gt;&lt;code&gt;loads()&lt;/code&gt;&lt;/a&gt; function), which is an iterable of the buffers which were passed to &lt;em&gt;buffer_callback&lt;/em&gt;. That iterable should produce buffers in the same order as they were passed to &lt;em&gt;buffer_callback&lt;/em&gt;. Those buffers will provide the data expected by the reconstructors of the objects whose pickling produced the original &lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">在接收端，它需要将&lt;em&gt;缓冲区&lt;/em&gt;参数传递给&lt;a href=&quot;#pickle.Unpickler&quot;&gt; &lt;code&gt;Unpickler&lt;/code&gt; &lt;/a&gt;（或传递给&lt;a href=&quot;#pickle.load&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#pickle.loads&quot;&gt; &lt;code&gt;loads()&lt;/code&gt; &lt;/a&gt;函数），该参数是传递给&lt;em&gt;buffer_callback&lt;/em&gt;的缓冲区的可迭代&lt;em&gt;方法&lt;/em&gt;。该iterable应按与传递给&lt;em&gt;buffer_callback的&lt;/em&gt;顺序生成缓冲区。这些缓冲区将提供对象的&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt;期望的数据，这些对象的酸洗产生了原始的PickleBuffer对象。</target>
        </trans-unit>
        <trans-unit id="66db2c4de162079fa6ad1e56a412af6e40b12ff3" translate="yes" xml:space="preserve">
          <source>On the sending side, it needs to pass a &lt;em&gt;buffer_callback&lt;/em&gt; argument to &lt;a href=&quot;#pickle.Pickler&quot;&gt;&lt;code&gt;Pickler&lt;/code&gt;&lt;/a&gt; (or to the &lt;a href=&quot;#pickle.dump&quot;&gt;&lt;code&gt;dump()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#pickle.dumps&quot;&gt;&lt;code&gt;dumps()&lt;/code&gt;&lt;/a&gt; function), which will be called with each &lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; generated while pickling the object graph. Buffers accumulated by the &lt;em&gt;buffer_callback&lt;/em&gt; will not see their data copied into the pickle stream, only a cheap marker will be inserted.</source>
          <target state="translated">在发送方，它需要将&lt;em&gt;buffer_callback&lt;/em&gt;参数传递给&lt;a href=&quot;#pickle.Pickler&quot;&gt; &lt;code&gt;Pickler&lt;/code&gt; &lt;/a&gt;（或传递给&lt;a href=&quot;#pickle.dump&quot;&gt; &lt;code&gt;dump()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#pickle.PickleBuffer&quot;&gt; &lt;code&gt;PickleBuffer&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#pickle.dumps&quot;&gt; &lt;code&gt;dumps()&lt;/code&gt; &lt;/a&gt;函数），该参数将在对对象图进行酸洗时生成的每个PickleBuffer中调用。由&lt;em&gt;buffer_callback&lt;/em&gt;累积的缓冲区不会看到其数据被复制到pickle流中，只会插入便宜的标记。</target>
        </trans-unit>
        <trans-unit id="dfc3524ee9c52842ac68b4cbfd63f42ac55c13bf" translate="yes" xml:space="preserve">
          <source>On top of the core functionality, &lt;a href=&quot;#configparser.ConfigParser&quot;&gt;&lt;code&gt;ConfigParser&lt;/code&gt;&lt;/a&gt; supports interpolation. This means values can be preprocessed before returning them from &lt;code&gt;get()&lt;/code&gt; calls.</source>
          <target state="translated">除了核心功能之外，&lt;a href=&quot;#configparser.ConfigParser&quot;&gt; &lt;code&gt;ConfigParser&lt;/code&gt; 还&lt;/a&gt;支持插值。这意味着可以对值进行预处理，然后再从 &lt;code&gt;get()&lt;/code&gt; 调用中返回它们。</target>
        </trans-unit>
        <trans-unit id="6e0a89fb92ab1b6c953761430059ee14bf39ac4f" translate="yes" xml:space="preserve">
          <source>On unsupported Windows versions, &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">在不受支持的Windows版本上，引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7af216ac764a8e05fdb02285dd1f73ff0b4bf41" translate="yes" xml:space="preserve">
          <source>On-line reference material.</source>
          <target state="translated">在线参考资料。</target>
        </trans-unit>
        <trans-unit id="7ee9b6bbcd3fc003f8c514b8359b3b3d847b5991" translate="yes" xml:space="preserve">
          <source>On-line version of the man pages and reference material.</source>
          <target state="translated">人页和参考资料的在线版本。</target>
        </trans-unit>
        <trans-unit id="6aeb9a0eecc81b131da11166dd168337677c0196" translate="yes" xml:space="preserve">
          <source>On-line version of the programmer&amp;rsquo;s reference material.</source>
          <target state="translated">程序员参考资料的在线版本。</target>
        </trans-unit>
        <trans-unit id="d68ef1995b7e1837b6328a4152bbf582900b7c03" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;#itertools.tee&quot;&gt;&lt;code&gt;tee()&lt;/code&gt;&lt;/a&gt; has made a split, the original &lt;em&gt;iterable&lt;/em&gt; should not be used anywhere else; otherwise, the &lt;em&gt;iterable&lt;/em&gt; could get advanced without the tee objects being informed.</source>
          <target state="translated">一旦&lt;a href=&quot;#itertools.tee&quot;&gt; &lt;code&gt;tee()&lt;/code&gt; &lt;/a&gt;进行了拆分，原始的&lt;em&gt;可迭代对象就&lt;/em&gt;不应在其他任何地方使用；否则，&lt;em&gt;迭代器&lt;/em&gt;可能会提前，而不会通知tee对象。</target>
        </trans-unit>
        <trans-unit id="13355ef156e37b7df46841221634670e6bd21bf1" translate="yes" xml:space="preserve">
          <source>Once a thread object is created, its activity must be started by calling the thread&amp;rsquo;s &lt;a href=&quot;#threading.Thread.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. This invokes the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method in a separate thread of control.</source>
          <target state="translated">创建线程对象后，必须通过调用线程的&lt;a href=&quot;#threading.Thread.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;方法来启动其活动。这将在单独的控制线程中调用&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="207c91dde7ce754af70d86e35ca18a8bfb78b4b4" translate="yes" xml:space="preserve">
          <source>Once a virtual environment has been created, it can be &amp;ldquo;activated&amp;rdquo; using a script in the virtual environment&amp;rsquo;s binary directory. The invocation of the script is platform-specific (&lt;code&gt;&amp;lt;venv&amp;gt;&lt;/code&gt; must be replaced by the path of the directory containing the virtual environment):</source>
          <target state="translated">创建虚拟环境后，可以使用虚拟环境的二进制目录中的脚本&amp;ldquo;激活&amp;rdquo;它。该脚本的调用是特定于平台的（ &lt;code&gt;&amp;lt;venv&amp;gt;&lt;/code&gt; 必须替换为包含虚拟环境的目录的路径）：</target>
        </trans-unit>
        <trans-unit id="889abf09b206885a298b4b0048c82881bd8294ef" translate="yes" xml:space="preserve">
          <source>Once an iterator&amp;rsquo;s &lt;a href=&quot;#iterator.__next__&quot;&gt;&lt;code&gt;__next__()&lt;/code&gt;&lt;/a&gt; method raises &lt;a href=&quot;exceptions#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt;, it must continue to do so on subsequent calls. Implementations that do not obey this property are deemed broken.</source>
          <target state="translated">一旦迭代器的&lt;a href=&quot;#iterator.__next__&quot;&gt; &lt;code&gt;__next__()&lt;/code&gt; &lt;/a&gt;方法引发&lt;a href=&quot;exceptions#StopIteration&quot;&gt; &lt;code&gt;StopIteration&lt;/code&gt; &lt;/a&gt;，它就必须在后续调用中继续这样做。不遵守此属性的实现被视为已损坏。</target>
        </trans-unit>
        <trans-unit id="c8954a531e8e55ebee2fcb88a5f5f25aa89c78a2" translate="yes" xml:space="preserve">
          <source>Once constructed, &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; objects are immutable.</source>
          <target state="translated">构造后，&lt;a href=&quot;#decimal.Decimal&quot;&gt; &lt;code&gt;Decimal&lt;/code&gt; &lt;/a&gt;对象是不可变的。</target>
        </trans-unit>
        <trans-unit id="16be74f5902bbdc230632d054aabd873de1dda59" translate="yes" xml:space="preserve">
          <source>Once created one should call &lt;a href=&quot;#multiprocessing.managers.BaseManager.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;get_server().serve_forever()&lt;/code&gt; to ensure that the manager object refers to a started manager process.</source>
          <target state="translated">创建后，应调用&lt;a href=&quot;#multiprocessing.managers.BaseManager.start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;get_server().serve_forever()&lt;/code&gt; 以确保管理器对象引用已启动的管理器进程。</target>
        </trans-unit>
        <trans-unit id="ccc2cd016213a015dfbf70d995a4eef4403a9624" translate="yes" xml:space="preserve">
          <source>Once created, an &lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; object may be manipulated by directly changing its fields (such as &lt;a href=&quot;#xml.etree.ElementTree.Element.text&quot;&gt;&lt;code&gt;Element.text&lt;/code&gt;&lt;/a&gt;), adding and modifying attributes (&lt;a href=&quot;#xml.etree.ElementTree.Element.set&quot;&gt;&lt;code&gt;Element.set()&lt;/code&gt;&lt;/a&gt; method), as well as adding new children (for example with &lt;a href=&quot;#xml.etree.ElementTree.Element.append&quot;&gt;&lt;code&gt;Element.append()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">创建&lt;a href=&quot;#xml.etree.ElementTree.Element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;对象后，可以通过直接更改其字段（例如&lt;a href=&quot;#xml.etree.ElementTree.Element.text&quot;&gt; &lt;code&gt;Element.text&lt;/code&gt; &lt;/a&gt;），添加和修改属性（&lt;a href=&quot;#xml.etree.ElementTree.Element.set&quot;&gt; &lt;code&gt;Element.set()&lt;/code&gt; &lt;/a&gt;方法）以及添加新的子元素（例如，使用&lt;a href=&quot;#xml.etree.ElementTree.Element.append&quot;&gt; &lt;code&gt;Element.append()&lt;/code&gt; )来操作。&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d98f7cd89572d4bbe43871efa04dc25f912f9367" translate="yes" xml:space="preserve">
          <source>Once created, the pathname to the widget becomes a new command. This new &lt;em&gt;widget command&lt;/em&gt; is the programmer&amp;rsquo;s handle for getting the new widget to perform some &lt;em&gt;action&lt;/em&gt;. In C, you&amp;rsquo;d express this as someAction(fred, someOptions), in C++, you would express this as fred.someAction(someOptions), and in Tk, you say:</source>
          <target state="translated">创建后，小部件的路径名将成为新命令。这个新的&lt;em&gt;小部件命令&lt;/em&gt;是程序员用来使新的小部件执行某些&lt;em&gt;操作&lt;/em&gt;的句柄。在C中，您可以将其表示为someAction（fred，someOptions），在C ++中，您可以将其表示为fred.someAction（someOptions），在Tk中，您可以说：</target>
        </trans-unit>
        <trans-unit id="b88e8436dc34ad8ecac85ed9098e7930bd406ff6" translate="yes" xml:space="preserve">
          <source>Once executed the &lt;a href=&quot;#module-gzip&quot;&gt;&lt;code&gt;gzip&lt;/code&gt;&lt;/a&gt; module keeps the input file(s).</source>
          <target state="translated">一旦执行，&lt;a href=&quot;#module-gzip&quot;&gt; &lt;code&gt;gzip&lt;/code&gt; &lt;/a&gt;模块将保留输入文件。</target>
        </trans-unit>
        <trans-unit id="59bd0557426d252898ba83d74b3d08da5feeacce" translate="yes" xml:space="preserve">
          <source>Once spawned, worker threads call the semaphore&amp;rsquo;s acquire and release methods when they need to connect to the server:</source>
          <target state="translated">产生后，工作线程在需要连接到服务器时会调用信号量的获取和释放方法：</target>
        </trans-unit>
        <trans-unit id="9dc52253ba5d16f68a3458bf5594be6616430d42" translate="yes" xml:space="preserve">
          <source>Once the context manager exits, the warnings filter is restored to its state when the context was entered. This prevents tests from changing the warnings filter in unexpected ways between tests and leading to indeterminate test results. The &lt;a href=&quot;#warnings.showwarning&quot;&gt;&lt;code&gt;showwarning()&lt;/code&gt;&lt;/a&gt; function in the module is also restored to its original value. Note: this can only be guaranteed in a single-threaded application. If two or more threads use the &lt;a href=&quot;#warnings.catch_warnings&quot;&gt;&lt;code&gt;catch_warnings&lt;/code&gt;&lt;/a&gt; context manager at the same time, the behavior is undefined.</source>
          <target state="translated">上下文管理器退出后，警告过滤器将恢复为输入上下文时的状态。这样可以防止测试在测试之间以意外方式更改警告过滤器，并导致不确定的测试结果。模块中的&lt;a href=&quot;#warnings.showwarning&quot;&gt; &lt;code&gt;showwarning()&lt;/code&gt; &lt;/a&gt;函数也将恢复为其原始值。注意：只能在单线程应用程序中保证这一点。如果两个或多个线程同时使用&lt;a href=&quot;#warnings.catch_warnings&quot;&gt; &lt;code&gt;catch_warnings&lt;/code&gt; &lt;/a&gt;上下文管理器，则该行为是未定义的。</target>
        </trans-unit>
        <trans-unit id="4d5043f40e3990a632ef7cf48ff135c75a7ff554" translate="yes" xml:space="preserve">
          <source>Once the headers have been read, if the request is of type POST (indicating that further data are present in the input stream) then the &lt;code&gt;Content-Length:&lt;/code&gt; header is used to set a numeric terminator to read the right amount of data from the channel.</source>
          <target state="translated">读取标头后，如果请求的类型为POST（指示输入流中存在其他数据），则使用 &lt;code&gt;Content-Length:&lt;/code&gt; 标头设置数字终止符，以从通道读取正确数量的数据。</target>
        </trans-unit>
        <trans-unit id="3625bd42b562728df6287438cfb43f246eb75f17" translate="yes" xml:space="preserve">
          <source>Once the initial channel(s) is(are) created, calling the &lt;a href=&quot;#asyncore.loop&quot;&gt;&lt;code&gt;loop()&lt;/code&gt;&lt;/a&gt; function activates channel service, which continues until the last channel (including any that have been added to the map during asynchronous service) is closed.</source>
          <target state="translated">创建初始通道后，调用&lt;a href=&quot;#asyncore.loop&quot;&gt; &lt;code&gt;loop()&lt;/code&gt; &lt;/a&gt;函数将激活通道服务，该操作将一直持续到最后一个通道（包括异步服务期间已添加到映射中的任何通道）关闭为止。</target>
        </trans-unit>
        <trans-unit id="4a2546b8a5097fd780cdeb2adc6d3eb6f8ec8d23" translate="yes" xml:space="preserve">
          <source>Once the thread&amp;rsquo;s activity is started, the thread is considered &amp;lsquo;alive&amp;rsquo;. It stops being alive when its &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method terminates &amp;ndash; either normally, or by raising an unhandled exception. The &lt;a href=&quot;#threading.Thread.is_alive&quot;&gt;&lt;code&gt;is_alive()&lt;/code&gt;&lt;/a&gt; method tests whether the thread is alive.</source>
          <target state="translated">一旦线程的活动开始，该线程就被视为&amp;ldquo;活动&amp;rdquo;。当它的&lt;a href=&quot;#threading.Thread.run&quot;&gt; &lt;code&gt;run()&lt;/code&gt; &lt;/a&gt;方法终止时，它会停止存活&amp;ndash;是正常的，还是引发未处理的异常。该&lt;a href=&quot;#threading.Thread.is_alive&quot;&gt; &lt;code&gt;is_alive()&lt;/code&gt; &lt;/a&gt;方法测试是否线程处于活动状态。</target>
        </trans-unit>
        <trans-unit id="a235b9ded0ea3a43927ac13de68434d28c8fa6ae" translate="yes" xml:space="preserve">
          <source>Once you have a &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt;, you can create a &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; object and call its &lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt;&lt;code&gt;execute()&lt;/code&gt;&lt;/a&gt; method to perform SQL commands:</source>
          <target state="translated">一旦有了&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;，就可以创建一个&lt;a href=&quot;#sqlite3.Cursor&quot;&gt; &lt;code&gt;Cursor&lt;/code&gt; &lt;/a&gt;对象并调用其&lt;a href=&quot;#sqlite3.Cursor.execute&quot;&gt; &lt;code&gt;execute()&lt;/code&gt; &lt;/a&gt;方法来执行SQL命令：</target>
        </trans-unit>
        <trans-unit id="81002ef1c052dbc9b87479ed00026cc46e6b7f55" translate="yes" xml:space="preserve">
          <source>Once you have a DOM document object, you can access the parts of your XML document through its properties and methods. These properties are defined in the DOM specification. The main property of the document object is the &lt;code&gt;documentElement&lt;/code&gt; property. It gives you the main element in the XML document: the one that holds all others. Here is an example program:</source>
          <target state="translated">一旦有了DOM文档对象，就可以通过其属性和方法访问XML文档的各个部分。这些属性在DOM规范中定义。文档对象的主要属性是 &lt;code&gt;documentElement&lt;/code&gt; 属性。它为您提供XML文档中的主要元素：包含所有其他元素的元素。这是一个示例程序：</target>
        </trans-unit>
        <trans-unit id="570eb1dd3b2dc9c9893e632a6855fcb1892d470f" translate="yes" xml:space="preserve">
          <source>Once you have a DOM document object, you can access the parts of your XML document through its properties and methods. These properties are defined in the DOM specification; this portion of the reference manual describes the interpretation of the specification in Python.</source>
          <target state="translated">一旦你有了一个 DOM 文档对象,你就可以通过它的属性和方法来访问 XML 文档的各个部分。这些属性是在 DOM 规范中定义的;参考手册的这部分描述了在 Python 中对规范的解释。</target>
        </trans-unit>
        <trans-unit id="50a39d682c8b293bc2c1a0cd3988cb1316472ae2" translate="yes" xml:space="preserve">
          <source>Once you have the file, you can also read its contents:</source>
          <target state="translated">一旦你有了文件,你也可以读取其内容。</target>
        </trans-unit>
        <trans-unit id="b23c60dd5536314803c0f831966f5b1fc94290ea" translate="yes" xml:space="preserve">
          <source>One &lt;code&gt;for&lt;/code&gt; clause in a comprehension. &lt;code&gt;target&lt;/code&gt; is the reference to use for each element - typically a &lt;a href=&quot;#ast.Name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ast.Tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; node. &lt;code&gt;iter&lt;/code&gt; is the object to iterate over. &lt;code&gt;ifs&lt;/code&gt; is a list of test expressions: each &lt;code&gt;for&lt;/code&gt; clause can have multiple &lt;code&gt;ifs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f7ff6936f08d9dafa27c2a7c0ea9ece2945b6a" translate="yes" xml:space="preserve">
          <source>One can also cause all warnings to be exceptions by using &lt;code&gt;error&lt;/code&gt; instead of &lt;code&gt;always&lt;/code&gt;. One thing to be aware of is that if a warning has already been raised because of a &lt;code&gt;once&lt;/code&gt;/&lt;code&gt;default&lt;/code&gt; rule, then no matter what filters are set the warning will not be seen again unless the warnings registry related to the warning has been cleared.</source>
          <target state="translated">通过使用 &lt;code&gt;error&lt;/code&gt; 而不是 &lt;code&gt;always&lt;/code&gt; 使用错误，还可以使所有警告成为例外。要注意的一件事是，如果由于 &lt;code&gt;once&lt;/code&gt; / &lt;code&gt;default&lt;/code&gt; 规则已经引发了警告，那么，除非设置了与该警告相关的警告注册表，否则无论设置了什么过滤器，都不会再次看到该警告。</target>
        </trans-unit>
        <trans-unit id="412f97dfac468fe3c85abdccb1436f3c6754c211" translate="yes" xml:space="preserve">
          <source>One can create a pool of processes which will carry out tasks submitted to it with the &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">可以创建一个进程池，该池将执行通过&lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt; &lt;code&gt;Pool&lt;/code&gt; &lt;/a&gt;类提交给它的任务。</target>
        </trans-unit>
        <trans-unit id="3ad735603768448e20a288aa471831e1d3bf88e6" translate="yes" xml:space="preserve">
          <source>One class, &lt;a href=&quot;#http.server.HTTPServer&quot;&gt;&lt;code&gt;HTTPServer&lt;/code&gt;&lt;/a&gt;, is a &lt;a href=&quot;socketserver#socketserver.TCPServer&quot;&gt;&lt;code&gt;socketserver.TCPServer&lt;/code&gt;&lt;/a&gt; subclass. It creates and listens at the HTTP socket, dispatching the requests to a handler. Code to create and run the server looks like this:</source>
          <target state="translated">一个类&lt;a href=&quot;#http.server.HTTPServer&quot;&gt; &lt;code&gt;HTTPServer&lt;/code&gt; &lt;/a&gt;是&lt;a href=&quot;socketserver#socketserver.TCPServer&quot;&gt; &lt;code&gt;socketserver.TCPServer&lt;/code&gt; &lt;/a&gt;子类。它创建并侦听HTTP套接字，将请求分派给处理程序。创建和运行服务器的代码如下所示：</target>
        </trans-unit>
        <trans-unit id="7087184633e7181831a047d644ec560eea655368" translate="yes" xml:space="preserve">
          <source>One client can access the server as follows:</source>
          <target state="translated">一个客户端可以访问服务器,具体如下:</target>
        </trans-unit>
        <trans-unit id="4d4ef3d17dad8ff1ba572aeda5566878ba2d3416" translate="yes" xml:space="preserve">
          <source>One difference between this module and Henstridge&amp;rsquo;s: his catalog objects supported access through a mapping API, but this appears to be unused and so is not currently supported.</source>
          <target state="translated">该模块与Henstridge的模块之间的一个区别是：他的目录对象支持通过映射API进行访问，但是该对象似乎未使用，因此当前不受支持。</target>
        </trans-unit>
        <trans-unit id="5763c2d1a6c833df6c8067ce7085ffa547578913" translate="yes" xml:space="preserve">
          <source>One downside of these convenience functions is that the need to handle both IPv4 and IPv6 formats means that error messages provide minimal information on the precise error, as the functions don&amp;rsquo;t know whether the IPv4 or IPv6 format was intended. More detailed error reporting can be obtained by calling the appropriate version specific class constructors directly.</source>
          <target state="translated">这些便利功能的一个缺点是，需要同时处理IPv4和IPv6格式，这意味着错误消息只能提供有关精确错误的最少信息，因为这些功能不知道IPv4或IPv6格式是否适用。通过直接调用适当的版本特定的类构造函数，可以获得更详细的错误报告。</target>
        </trans-unit>
        <trans-unit id="2d3b96d4bd51e1e6c79ce329a792e822561bb377" translate="yes" xml:space="preserve">
          <source>One exception is defined as an attribute of the &lt;a href=&quot;#module-poplib&quot;&gt;&lt;code&gt;poplib&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">一个例外定义为&lt;a href=&quot;#module-poplib&quot;&gt; &lt;code&gt;poplib&lt;/code&gt; &lt;/a&gt;模块的属性：</target>
        </trans-unit>
        <trans-unit id="a72557fcbc3e55ff795f503fb908c1ad3cb3e7c3" translate="yes" xml:space="preserve">
          <source>One limitation has to do with accuracy of timing information. There is a fundamental problem with deterministic profilers involving accuracy. The most obvious restriction is that the underlying &amp;ldquo;clock&amp;rdquo; is only ticking at a rate (typically) of about .001 seconds. Hence no measurements will be more accurate than the underlying clock. If enough measurements are taken, then the &amp;ldquo;error&amp;rdquo; will tend to average out. Unfortunately, removing this first error induces a second source of error.</source>
          <target state="translated">一个限制与定时信息的准确性有关。确定性分析器存在一个涉及准确性的基本问题。最明显的限制是底层的&amp;ldquo;时钟&amp;rdquo;仅以大约.001秒的速率滴答（通常）。因此，没有任何测量比基础时钟更准确。如果进行了足够的测量，那么&amp;ldquo;误差&amp;rdquo;将趋于平均。不幸的是，消除此第一个错误会引起第二个错误源。</target>
        </trans-unit>
        <trans-unit id="5d30662d8771fa11b0017b4d40f87263cc12f04c" translate="yes" xml:space="preserve">
          <source>One method needs to be defined for container objects to provide iteration support:</source>
          <target state="translated">需要为容器对象定义一个方法来提供迭代支持。</target>
        </trans-unit>
        <trans-unit id="c275e97c9c5002e886d7fe72ea350785b0233d2a" translate="yes" xml:space="preserve">
          <source>One more support function is also defined:</source>
          <target state="translated">另外还定义了一个支持功能。</target>
        </trans-unit>
        <trans-unit id="33c0248d0f5b644a8ee6869c9c83e50620e88604" translate="yes" xml:space="preserve">
          <source>One more than the number of the highest signal number.</source>
          <target state="translated">比最高信号号的数量多一个。</target>
        </trans-unit>
        <trans-unit id="b14b841456d54340be37e877cf490ede6a8dc178" translate="yes" xml:space="preserve">
          <source>One more thing to be aware of is that the parser-level &lt;code&gt;get()&lt;/code&gt; method provides a custom, more complex interface, maintained for backwards compatibility. When using this method, a fallback value can be provided via the &lt;code&gt;fallback&lt;/code&gt; keyword-only argument:</source>
          <target state="translated">还有一点要注意的是，解析器级别的 &lt;code&gt;get()&lt;/code&gt; 方法提供了一个自定义的，更复杂的接口，该接口维护用于向后兼容。使用此方法时，可以通过仅 &lt;code&gt;fallback&lt;/code&gt; 关键字参数提供回退值：</target>
        </trans-unit>
        <trans-unit id="4dad841e0c8793fb2acecc194fc87215ceb56552" translate="yes" xml:space="preserve">
          <source>One needs to call this function straight after the &lt;code&gt;if __name__ ==
'__main__'&lt;/code&gt; line of the main module. For example:</source>
          <target state="translated">需要在主模块的 &lt;code&gt;if __name__ == '__main__'&lt;/code&gt; 行之后立即调用此函数。例如：</target>
        </trans-unit>
        <trans-unit id="c23c4fd93b19eb8a93ad4ea94f5022d7dccf40a4" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;determinate&amp;rdquo; or &amp;ldquo;indeterminate&amp;rdquo;.</source>
          <target state="translated">&amp;ldquo;确定&amp;rdquo;或&amp;ldquo;不确定&amp;rdquo;之一。</target>
        </trans-unit>
        <trans-unit id="792368d2ec0cc35704b6cdade00d87e0b1b51091" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;horizontal&amp;rdquo; or &amp;ldquo;vertical&amp;rdquo;. Specifies the orientation of the progress bar.</source>
          <target state="translated">&amp;ldquo;水平&amp;rdquo;或&amp;ldquo;垂直&amp;rdquo;之一。指定进度条的方向。</target>
        </trans-unit>
        <trans-unit id="413c6ea48d40de27918453c5164fccb674e90d4c" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;horizontal&amp;rdquo; or &amp;ldquo;vertical&amp;rdquo;. Specifies the orientation of the separator.</source>
          <target state="translated">&amp;ldquo;水平&amp;rdquo;或&amp;ldquo;垂直&amp;rdquo;之一。指定分隔符的方向。</target>
        </trans-unit>
        <trans-unit id="76cba3ca26e12a80e4964b3cd3c4c38e4f3792c1" translate="yes" xml:space="preserve">
          <source>One of &amp;ldquo;normal&amp;rdquo;, &amp;ldquo;readonly&amp;rdquo;, or &amp;ldquo;disabled&amp;rdquo;. In the &amp;ldquo;readonly&amp;rdquo; state, the value may not be edited directly, and the user can only selection of the values from the dropdown list. In the &amp;ldquo;normal&amp;rdquo; state, the text field is directly editable. In the &amp;ldquo;disabled&amp;rdquo; state, no interaction is possible.</source>
          <target state="translated">&amp;ldquo;正常&amp;rdquo;，&amp;ldquo;只读&amp;rdquo;或&amp;ldquo;禁用&amp;rdquo;之一。在&amp;ldquo;只读&amp;rdquo;状态下，可能无法直接编辑该值，并且用户只能从下拉列表中选择值。在&amp;ldquo;正常&amp;rdquo;状态下，文本字段可直接编辑。在&amp;ldquo;禁用&amp;rdquo;状态下，无法进行任何交互。</target>
        </trans-unit>
        <trans-unit id="b71680b34169ae274a157ce0f891fed86a995ab7" translate="yes" xml:space="preserve">
          <source>One of the more common uses of &lt;code&gt;nargs='?'&lt;/code&gt; is to allow optional input and output files:</source>
          <target state="translated">&lt;code&gt;nargs='?'&lt;/code&gt; 的较常见用法之一 是为了允许可选的输入和输出文件：</target>
        </trans-unit>
        <trans-unit id="5b55b53653ecf6bdee05bb4d9db6dde58eb35a46" translate="yes" xml:space="preserve">
          <source>One of the most common tasks is to generate the flat (serialized) version of the email message represented by a message object structure. You will need to do this if you want to send your message via &lt;a href=&quot;smtplib#smtplib.SMTP.sendmail&quot;&gt;&lt;code&gt;smtplib.SMTP.sendmail()&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;nntplib#module-nntplib&quot;&gt;&lt;code&gt;nntplib&lt;/code&gt;&lt;/a&gt; module, or print the message on the console. Taking a message object structure and producing a serialized representation is the job of the generator classes.</source>
          <target state="translated">最常见的任务之一是生成由消息对象结构表示的电子邮件的平面（序列化）版本。如果要通过&lt;a href=&quot;smtplib#smtplib.SMTP.sendmail&quot;&gt; &lt;code&gt;smtplib.SMTP.sendmail()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;nntplib#module-nntplib&quot;&gt; &lt;code&gt;nntplib&lt;/code&gt; &lt;/a&gt;模块发送消息，或在控制台上打印消息，则需要执行此操作。生成消息类结构并生成序列化表示是生成器类的工作。</target>
        </trans-unit>
        <trans-unit id="93c09cddaf4af85bdb82c014ec742b6b5d02f54f" translate="yes" xml:space="preserve">
          <source>One of two places where &lt;a href=&quot;#dataclasses.dataclass&quot;&gt;&lt;code&gt;dataclass()&lt;/code&gt;&lt;/a&gt; actually inspects the type of a field is to determine if a field is a class variable as defined in &lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 526&lt;/strong&gt;&lt;/a&gt;. It does this by checking if the type of the field is &lt;code&gt;typing.ClassVar&lt;/code&gt;. If a field is a &lt;code&gt;ClassVar&lt;/code&gt;, it is excluded from consideration as a field and is ignored by the dataclass mechanisms. Such &lt;code&gt;ClassVar&lt;/code&gt; pseudo-fields are not returned by the module-level &lt;a href=&quot;#dataclasses.fields&quot;&gt;&lt;code&gt;fields()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;#dataclasses.dataclass&quot;&gt; &lt;code&gt;dataclass()&lt;/code&gt; &lt;/a&gt;实际上检查字段类型的两个地方之一是确定字段是否是&lt;a href=&quot;https://www.python.org/dev/peps/pep-0526&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 526中&lt;/strong&gt;&lt;/a&gt;定义的类变量。它通过检查字段的类型是否为 &lt;code&gt;typing.ClassVar&lt;/code&gt; 做到这一点。如果字段是 &lt;code&gt;ClassVar&lt;/code&gt; ，则将其从字段中排除，并被数据类机制忽略。模块级&lt;a href=&quot;#dataclasses.fields&quot;&gt; &lt;code&gt;fields()&lt;/code&gt; &lt;/a&gt;函数不会返回此类 &lt;code&gt;ClassVar&lt;/code&gt; 伪字段。</target>
        </trans-unit>
        <trans-unit id="b4fa5b092d960caa5c98eb1763a721595959c032" translate="yes" xml:space="preserve">
          <source>One particularly effective way of handling sub-commands is to combine the use of the &lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt;&lt;code&gt;add_subparsers()&lt;/code&gt;&lt;/a&gt; method with calls to &lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt;&lt;code&gt;set_defaults()&lt;/code&gt;&lt;/a&gt; so that each subparser knows which Python function it should execute. For example:</source>
          <target state="translated">处理子命令的一种特别有效的方法是将&lt;a href=&quot;#argparse.ArgumentParser.add_subparsers&quot;&gt; &lt;code&gt;add_subparsers()&lt;/code&gt; &lt;/a&gt;方法的使用与对&lt;a href=&quot;#argparse.ArgumentParser.set_defaults&quot;&gt; &lt;code&gt;set_defaults()&lt;/code&gt; 的&lt;/a&gt;调用结合在一起，以便每个子解析器都知道应该执行哪个Python函数。例如：</target>
        </trans-unit>
        <trans-unit id="6265c9633edbf23fb81d92e275200b17517c24ee" translate="yes" xml:space="preserve">
          <source>One possible reason to set &lt;code&gt;hash=False&lt;/code&gt; but &lt;code&gt;compare=True&lt;/code&gt; would be if a field is expensive to compute a hash value for, that field is needed for equality testing, and there are other fields that contribute to the type&amp;rsquo;s hash value. Even if a field is excluded from the hash, it will still be used for comparisons.</source>
          <target state="translated">设置 &lt;code&gt;hash=False&lt;/code&gt; 但 &lt;code&gt;compare=True&lt;/code&gt; 的一个可能原因是，如果某个字段的哈希值计算成本很高，则该字段需要进行相等性测试，并且还有其他字段会影响该类型的哈希值。即使将字段从哈希中排除，该字段仍将用于比较。</target>
        </trans-unit>
        <trans-unit id="a226b0eaad4988e53ed4f880b8d7a128f07557e7" translate="yes" xml:space="preserve">
          <source>One should just use a copy of the referent instead when making comparisons.</source>
          <target state="translated">在进行比较的时候,应该直接用参照物的副本代替。</target>
        </trans-unit>
        <trans-unit id="c62e6f913693a5417011764c6f11e9c5f58e5593" translate="yes" xml:space="preserve">
          <source>One use case for this is for mocking objects used as context managers in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="translated">一个用例是在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句中模拟用作上下文管理器的对象：</target>
        </trans-unit>
        <trans-unit id="ab3e7193bd28fb961e976d99467bf8a10813836c" translate="yes" xml:space="preserve">
          <source>One use case for this is for mocking objects used as context managers in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db721d062a28eead2d894ec1cc32437698273d5" translate="yes" xml:space="preserve">
          <source>One useful application of the second form of &lt;a href=&quot;#iter&quot;&gt;&lt;code&gt;iter()&lt;/code&gt;&lt;/a&gt; is to build a block-reader. For example, reading fixed-width blocks from a binary database file until the end of file is reached:</source>
          <target state="translated">&lt;a href=&quot;#iter&quot;&gt; &lt;code&gt;iter()&lt;/code&gt; &lt;/a&gt;第二种形式的一个有用的应用程序是构建一个块读取器。例如，从二进制数据库文件读取固定宽度的块，直到到达文件末尾：</target>
        </trans-unit>
        <trans-unit id="941e0e22f8b46e0572e23109cb229b556c8c68de" translate="yes" xml:space="preserve">
          <source>One useful feature of the &lt;a href=&quot;#module-sqlite3&quot;&gt;&lt;code&gt;sqlite3&lt;/code&gt;&lt;/a&gt; module is the built-in &lt;a href=&quot;#sqlite3.Row&quot;&gt;&lt;code&gt;sqlite3.Row&lt;/code&gt;&lt;/a&gt; class designed to be used as a row factory.</source>
          <target state="translated">&lt;a href=&quot;#module-sqlite3&quot;&gt; &lt;code&gt;sqlite3&lt;/code&gt; &lt;/a&gt;模块的一个有用功能是内置的&lt;a href=&quot;#sqlite3.Row&quot;&gt; &lt;code&gt;sqlite3.Row&lt;/code&gt; &lt;/a&gt;类，旨在用作行工厂。</target>
        </trans-unit>
        <trans-unit id="fd18cd38e6a1b32596d71ef2b185bf3b797fb25f" translate="yes" xml:space="preserve">
          <source>One way to open a box is to type a key character and wait for a predefined interval. This defaults to 2 seconds; customize it in the settings dialog. (To prevent auto popups, set the delay to a large number of milliseconds, such as 100000000.) For imported module names or class or function attributes, type &amp;lsquo;.&amp;rsquo;. For filenames in the root directory, type &lt;a href=&quot;os#os.sep&quot;&gt;&lt;code&gt;os.sep&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;os#os.altsep&quot;&gt;&lt;code&gt;os.altsep&lt;/code&gt;&lt;/a&gt; immediately after an opening quote. (On Windows, one can specify a drive first.) Move into subdirectories by typing a directory name and a separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaef7b6555dea31b8a999a49a168f126d8d8fdaf" translate="yes" xml:space="preserve">
          <source>One way to search and explore this XML example is to manually add the URI to every tag or attribute in the xpath of a &lt;a href=&quot;#xml.etree.ElementTree.Element.find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#xml.etree.ElementTree.Element.findall&quot;&gt;&lt;code&gt;findall()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">搜索和浏览此XML示例的一种方法是将URI手动添加到&lt;a href=&quot;#xml.etree.ElementTree.Element.find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#xml.etree.ElementTree.Element.findall&quot;&gt; &lt;code&gt;findall()&lt;/code&gt; &lt;/a&gt;的xpath中的每个标记或属性中：</target>
        </trans-unit>
        <trans-unit id="685a8c4199bf6d2bcd91aafdcf97ef52c57e0bf8" translate="yes" xml:space="preserve">
          <source>One-dimensional memoryviews of hashable (read-only) types with formats &amp;lsquo;B&amp;rsquo;, &amp;lsquo;b&amp;rsquo; or &amp;lsquo;c&amp;rsquo; are also hashable. The hash is defined as &lt;code&gt;hash(m) == hash(m.tobytes())&lt;/code&gt;:</source>
          <target state="translated">格式为&amp;ldquo; B&amp;rdquo;，&amp;ldquo; b&amp;rdquo;或&amp;ldquo; c&amp;rdquo;的可哈希（只读）类型的一维内存视图也是可哈希的。哈希定义为 &lt;code&gt;hash(m) == hash(m.tobytes())&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4e2cd4c7e6f9d4fd20fd3009b486f148f36ad549" translate="yes" xml:space="preserve">
          <source>One-shot (de)compression</source>
          <target state="translated">一次性压缩</target>
        </trans-unit>
        <trans-unit id="e92a8f9a44d55a6fa57ab9d7f17030266d725e27" translate="yes" xml:space="preserve">
          <source>Online reference for tkinter supported by effbot.org.</source>
          <target state="translated">由 effbot.org 支持的 tkinter 在线参考。</target>
        </trans-unit>
        <trans-unit id="9dbb8fb37052c67451fd1294542a0777a48cd714" translate="yes" xml:space="preserve">
          <source>Only &lt;em&gt;days&lt;/em&gt;, &lt;em&gt;seconds&lt;/em&gt; and &lt;em&gt;microseconds&lt;/em&gt; are stored internally. Arguments are converted to those units:</source>
          <target state="translated">内部仅存储&lt;em&gt;天&lt;/em&gt;，&lt;em&gt;秒&lt;/em&gt;和&lt;em&gt;微秒&lt;/em&gt;。参数将转换为以下单位：</target>
        </trans-unit>
        <trans-unit id="e496096627294b6371ddb1a7da261de2d33baeed" translate="yes" xml:space="preserve">
          <source>Only ASCII characters are permitted in bytes literals (regardless of the declared source code encoding). Any binary values over 127 must be entered into bytes literals using the appropriate escape sequence.</source>
          <target state="translated">字节符中只允许输入ASCII字符(无论声明的源代码编码如何)。任何超过127的二进制值必须使用适当的转义序列输入到字节字元中。</target>
        </trans-unit>
        <trans-unit id="9bcb0283c49f6302675a6e970eee6fdb45189e87" translate="yes" xml:space="preserve">
          <source>Only ASCII is supported. The &lt;code&gt;backslashreplace&lt;/code&gt; error handler is used on encoding.</source>
          <target state="translated">仅支持ASCII。该 &lt;code&gt;backslashreplace&lt;/code&gt; 错误处理程序上使用编码。</target>
        </trans-unit>
        <trans-unit id="c6113a93896d56d6fd83ee494a739a1940a20027" translate="yes" xml:space="preserve">
          <source>Only authors of web servers and programming frameworks need to know every detail and corner case of the WSGI design. You don&amp;rsquo;t need to understand every detail of WSGI just to install a WSGI application or to write a web application using an existing framework.</source>
          <target state="translated">只有Web服务器和编程框架的作者才需要了解WSGI设计的每个细节和特殊情况。您无需仅安装WSGI应用程序或使用现有框架编写Web应用程序就了解WSGI的每个细节。</target>
        </trans-unit>
        <trans-unit id="5472056d6db2aa4b4e5fca6b6d943ffdc4c17bf0" translate="yes" xml:space="preserve">
          <source>Only available on Windows.</source>
          <target state="translated">只能在Windows上使用。</target>
        </trans-unit>
        <trans-unit id="9cff90a9caa5fca4e097eda23e08985099f6cbd6" translate="yes" xml:space="preserve">
          <source>Only available with OpenSSL 1.1.1 and TLS 1.3 enabled. Without TLS 1.3 support, the method raises &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">仅在启用OpenSSL 1.1.1和TLS 1.3的情况下可用。没有TLS 1.3支持，该方法将引发&lt;a href=&quot;exceptions#NotImplementedError&quot;&gt; &lt;code&gt;NotImplementedError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62a51d86e2878cfb5387b455ada7f61c5dffd8a7" translate="yes" xml:space="preserve">
          <source>Only available with OpenSSL 1.1.1 and TLS 1.3 enabled. Without TLS 1.3 support, the property value is None and can&amp;rsquo;t be modified</source>
          <target state="translated">仅在启用OpenSSL 1.1.1和TLS 1.3的情况下可用。如果没有TLS 1.3支持，则属性值为&amp;ldquo;无&amp;rdquo;，无法修改</target>
        </trans-unit>
        <trans-unit id="95c159d38cefff4dfee104a391e7876c9172be62" translate="yes" xml:space="preserve">
          <source>Only call this method when the calling process or thread owns the lock. An &lt;a href=&quot;exceptions#AssertionError&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is raised if this method is called by a process or thread other than the owner or if the lock is in an unlocked (unowned) state. Note that the type of exception raised in this situation differs from the implemented behavior in &lt;a href=&quot;threading#threading.RLock.release&quot;&gt;&lt;code&gt;threading.RLock.release()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">仅在调用进程或线程拥有锁时才调用此方法。一个&lt;a href=&quot;exceptions#AssertionError&quot;&gt; &lt;code&gt;AssertionError&lt;/code&gt; &lt;/a&gt;如果该方法是通过一个过程调用或线程以外的雇主或升高如果锁处于解锁（无主）的状态。请注意，在这种情况下引发的异常类型与&lt;a href=&quot;threading#threading.RLock.release&quot;&gt; &lt;code&gt;threading.RLock.release()&lt;/code&gt; 中&lt;/a&gt;已实现的行为不同。</target>
        </trans-unit>
        <trans-unit id="a1b68642ddd76fe9bd27aab5c4134b933957a9b2" translate="yes" xml:space="preserve">
          <source>Only call this method when the calling thread owns the lock. A &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised if this method is called when the lock is unlocked.</source>
          <target state="translated">仅在调用线程拥有锁时才调用此方法。甲&lt;a href=&quot;exceptions#RuntimeError&quot;&gt; &lt;code&gt;RuntimeError&lt;/code&gt; &lt;/a&gt;如果当锁被解锁被称为该方法升高。</target>
        </trans-unit>
        <trans-unit id="eb1874f752845c50ae749ab0610da40d6a9ed03f" translate="yes" xml:space="preserve">
          <source>Only class methods are defined by this class to alleviate the need for instantiation.</source>
          <target state="translated">该类只定义类方法,以减轻实例化的需要。</target>
        </trans-unit>
        <trans-unit id="c3bad470e2ecc603718c76f4c9074b5de3a88646" translate="yes" xml:space="preserve">
          <source>Only docstrings attached to objects belonging to module &lt;em&gt;m&lt;/em&gt; are searched.</source>
          <target state="translated">仅搜索附加到属于模块&lt;em&gt;m的&lt;/em&gt;对象的文档字符串。</target>
        </trans-unit>
        <trans-unit id="51af0077ba3cd9ef0693961e00abb68011fe16f6" translate="yes" xml:space="preserve">
          <source>Only on Mac OS X platform.</source>
          <target state="translated">仅在Mac OS X平台上。</target>
        </trans-unit>
        <trans-unit id="4052b81eb936f003d4ae4d67da6755035d5b6d2c" translate="yes" xml:space="preserve">
          <source>Only on Windows platforms.</source>
          <target state="translated">只有在Windows平台上。</target>
        </trans-unit>
        <trans-unit id="c739e35e3345aa2c864403c706892dacb2999ed6" translate="yes" xml:space="preserve">
          <source>Only one &lt;em&gt;ch&lt;/em&gt; can be pushed before &lt;code&gt;get_wch()&lt;/code&gt; is called.</source>
          <target state="translated">在 &lt;code&gt;get_wch()&lt;/code&gt; 之前，只能按下一个&lt;em&gt;ch&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0a0fe79f0e31124b5d7fe36b8522ebf56951357a" translate="yes" xml:space="preserve">
          <source>Only one &lt;em&gt;ch&lt;/em&gt; can be pushed before &lt;code&gt;getch()&lt;/code&gt; is called.</source>
          <target state="translated">在调用 &lt;code&gt;getch()&lt;/code&gt; 之前，只能推入一个&lt;em&gt;ch&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3bb6c14b3d23d2945eacea1ff6486fbffeceb261" translate="yes" xml:space="preserve">
          <source>Only one callback can be set per &lt;code&gt;SSLContext&lt;/code&gt;. If &lt;em&gt;sni_callback&lt;/em&gt; is set to &lt;code&gt;None&lt;/code&gt; then the callback is disabled. Calling this function a subsequent time will disable the previously registered callback.</source>
          <target state="translated">每个 &lt;code&gt;SSLContext&lt;/code&gt; 只能设置一个回调。如果&lt;em&gt;sni_callback&lt;/em&gt;设置为 &lt;code&gt;None&lt;/code&gt; ,则禁用回调。随后调用此函数将禁用以前注册的回调。</target>
        </trans-unit>
        <trans-unit id="921877f46f6c2f6c956d4c2b43d413ed0f256f18" translate="yes" xml:space="preserve">
          <source>Only one concrete &lt;a href=&quot;#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; class, the &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; class, is supplied by the &lt;a href=&quot;#module-datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; module. The &lt;a href=&quot;#datetime.timezone&quot;&gt;&lt;code&gt;timezone&lt;/code&gt;&lt;/a&gt; class can represent simple timezones with fixed offsets from UTC, such as UTC itself or North American EST and EDT timezones. Supporting timezones at deeper levels of detail is up to the application. The rules for time adjustment across the world are more political than rational, change frequently, and there is no standard suitable for every application aside from UTC.</source>
          <target state="translated">&lt;a href=&quot;#module-datetime&quot;&gt; &lt;code&gt;datetime&lt;/code&gt; &lt;/a&gt;模块仅提供一个具体的&lt;a href=&quot;#datetime.tzinfo&quot;&gt; &lt;code&gt;tzinfo&lt;/code&gt; &lt;/a&gt;类（&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;类）。该&lt;a href=&quot;#datetime.timezone&quot;&gt; &lt;code&gt;timezone&lt;/code&gt; &lt;/a&gt;级可以表示与UTC的固定偏移，如UTC本身或北美EST和EDT时区时区简单。在更详细的级别上支持时区取决于应用程序。全球范围内的时间调整规则更具政治性，而不是理性的，经常更改，除UTC之外，没有适用于所有应用程序的标准。</target>
        </trans-unit>
        <trans-unit id="b2694ff82c068ccb7ad25e6614404effc6e0e6dd" translate="yes" xml:space="preserve">
          <source>Only one stack frame is returned for a suspended coroutine.</source>
          <target state="translated">一个悬浮的coroutine只返回一个堆栈框架。</target>
        </trans-unit>
        <trans-unit id="45899a65083753942e402707d87a02ef650b8c6b" translate="yes" xml:space="preserve">
          <source>Only run test methods and classes that match the pattern or substring. This option may be used multiple times, in which case all test cases that match of the given patterns are included.</source>
          <target state="translated">只运行与模式或子串匹配的测试方法和类。这个选项可以被多次使用,在这种情况下,所有与给定模式匹配的测试用例都会被包含在内。</target>
        </trans-unit>
        <trans-unit id="b86acce0e0c3ada12f44f0e9d2c197184c46af52" translate="yes" xml:space="preserve">
          <source>Only the directives specified in the documentation are supported. Because &lt;code&gt;strftime()&lt;/code&gt; is implemented per platform it can sometimes offer more directives than those listed. But &lt;code&gt;strptime()&lt;/code&gt; is independent of any platform and thus does not necessarily support all directives available that are not documented as supported.</source>
          <target state="translated">仅支持文档中指定的指令。因为 &lt;code&gt;strftime()&lt;/code&gt; 是针对每个平台实现的，所以有时可以提供比列出的指令更多的指令。但是 &lt;code&gt;strptime()&lt;/code&gt; 独立于任何平台，因此不一定支持未记录为受支持的所有可用指令。</target>
        </trans-unit>
        <trans-unit id="16dec77f10fe170dae724bd68005e7aa2cc49646" translate="yes" xml:space="preserve">
          <source>Only the filename, the function name and the line number are displayed. (no source code)</source>
          <target state="translated">只显示文件名、函数名和行号。(无源代码)</target>
        </trans-unit>
        <trans-unit id="60d352aab6fcb944b7fc146c1abce5b6e9d139b1" translate="yes" xml:space="preserve">
          <source>Only the memory consumption directly attributed to the object is accounted for, not the memory consumption of objects it refers to.</source>
          <target state="translated">只核算直接归于该对象的内存消耗,不核算其所指对象的内存消耗。</target>
        </trans-unit>
        <trans-unit id="d182c5edf8d6af50c78e1101233e80d072394832" translate="yes" xml:space="preserve">
          <source>Only works for a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; which defines an &lt;code&gt;iter_modules()&lt;/code&gt; method. This interface is non-standard, so the module also provides implementations for &lt;a href=&quot;importlib#importlib.machinery.FileFinder&quot;&gt;&lt;code&gt;importlib.machinery.FileFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zipimport#zipimport.zipimporter&quot;&gt;&lt;code&gt;zipimport.zipimporter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">仅适用于定义了 &lt;code&gt;iter_modules()&lt;/code&gt; 方法的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-finder&quot;&gt;查找器&lt;/a&gt;。该接口是非标准的，因此该模块还提供了&lt;a href=&quot;importlib#importlib.machinery.FileFinder&quot;&gt; &lt;code&gt;importlib.machinery.FileFinder&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;zipimport#zipimport.zipimporter&quot;&gt; &lt;code&gt;zipimport.zipimporter&lt;/code&gt; 的实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd9a00ba5a14c9c2324fca22dccca7c5e146c055" translate="yes" xml:space="preserve">
          <source>Only works for a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-finder&quot;&gt;finder&lt;/a&gt; which defines an &lt;code&gt;iter_modules()&lt;/code&gt; method. This interface is non-standard, so the module also provides implementations for &lt;a href=&quot;importlib#importlib.machinery.FileFinder&quot;&gt;&lt;code&gt;importlib.machinery.FileFinder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zipimport#zipimport.zipimporter&quot;&gt;&lt;code&gt;zipimport.zipimporter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce35e3b95640fdd8783117c0d6b1bb2575dc0c6" translate="yes" xml:space="preserve">
          <source>Only writeable with OpenSSL 1.1.0 or higher.</source>
          <target state="translated">只能用OpenSSL 1.1.0或更高版本写入。</target>
        </trans-unit>
        <trans-unit id="94c549906c5562588206324bfc20c815277d21a5" translate="yes" xml:space="preserve">
          <source>Opcode collections</source>
          <target state="translated">操作码集合</target>
        </trans-unit>
        <trans-unit id="cf9b77061f7b3126b49d50a6fa68f7ca8c26b7a3" translate="yes" xml:space="preserve">
          <source>Open</source>
          <target state="translated">Open</target>
        </trans-unit>
        <trans-unit id="3fc17c6daa0379542d7b9c9064a83dc69e75bffb" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;file&lt;/em&gt; and return a corresponding &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. If the file cannot be opened, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="translated">打开&lt;em&gt;文件&lt;/em&gt;并返回相应的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。如果无法打开该文件，则会引发&lt;a href=&quot;exceptions#OSError&quot;&gt; &lt;code&gt;OSError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6767f6f97a36f678cadfed5ebab2204f4d3ef84f" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;file&lt;/em&gt; and return a corresponding &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. If the file cannot be opened, an &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; is raised. See &lt;a href=&quot;https://docs.python.org/3.9/tutorial/inputoutput.html#tut-files&quot;&gt;Reading and Writing Files&lt;/a&gt; for more examples of how to use this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0969da77d3b4939c7e92316eec745323136d4364" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;fullurl&lt;/em&gt; using the appropriate protocol. This method sets up cache and proxy information, then calls the appropriate open method with its input arguments. If the scheme is not recognized, &lt;a href=&quot;#urllib.request.URLopener.open_unknown&quot;&gt;&lt;code&gt;open_unknown()&lt;/code&gt;&lt;/a&gt; is called. The &lt;em&gt;data&lt;/em&gt; argument has the same meaning as the &lt;em&gt;data&lt;/em&gt; argument of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用适当的协议打开&lt;em&gt;fullurl&lt;/em&gt;。该方法设置缓存和代理信息，然后使用其输入参数调用相应的open方法。如果无法识别该方案，则调用&lt;a href=&quot;#urllib.request.URLopener.open_unknown&quot;&gt; &lt;code&gt;open_unknown()&lt;/code&gt; &lt;/a&gt;。&lt;em&gt;data&lt;/em&gt;参数与&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; &lt;/a&gt;的&lt;em&gt;data&lt;/em&gt;参数具有相同的含义。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ea233b21029cc672f31fe9b3997814419601cd0" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new page (&amp;ldquo;tab&amp;rdquo;) of the browser handled by this controller, if possible, otherwise equivalent to &lt;a href=&quot;#webbrowser.open_new&quot;&gt;&lt;code&gt;open_new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果可能，在此控制器处理的浏览器的新页面（&amp;ldquo;选项卡&amp;rdquo;）中打开&lt;em&gt;url&lt;/em&gt;，否则等效于&lt;a href=&quot;#webbrowser.open_new&quot;&gt; &lt;code&gt;open_new()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6693c0a4bbf0ab0047e8b16619f81dc52e9dab4" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new page (&amp;ldquo;tab&amp;rdquo;) of the default browser, if possible, otherwise equivalent to &lt;a href=&quot;#webbrowser.open_new&quot;&gt;&lt;code&gt;open_new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果可能，在默认浏览器的新页面（&amp;ldquo;选项卡&amp;rdquo;）中打开&lt;em&gt;url&lt;/em&gt;，否则等效于&lt;a href=&quot;#webbrowser.open_new&quot;&gt; &lt;code&gt;open_new()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8866b21bed2f90c7e0d0db5d81720b7915e2396" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new window of the browser handled by this controller, if possible, otherwise, open &lt;em&gt;url&lt;/em&gt; in the only browser window. Alias &lt;a href=&quot;#webbrowser.open_new&quot;&gt;&lt;code&gt;open_new()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打开&lt;em&gt;网址&lt;/em&gt;在浏览器中的一个新的窗口，通过该控制器处理，如果可能的话，否则，打开&lt;em&gt;URL&lt;/em&gt;中唯一的浏览器窗口。别名&lt;a href=&quot;#webbrowser.open_new&quot;&gt; &lt;code&gt;open_new()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80be1f0f5216d3c4d0013d4e332bf117ad7d0caf" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt; in a new window of the default browser, if possible, otherwise, open &lt;em&gt;url&lt;/em&gt; in the only browser window.</source>
          <target state="translated">打开&lt;em&gt;URL&lt;/em&gt;在默认浏览器的一个新窗口，如果可能的话，否则，打开&lt;em&gt;URL&lt;/em&gt;中唯一的浏览器窗口。</target>
        </trans-unit>
        <trans-unit id="c004943ea8325dbad5b0898f3d806b2cc79ada2b" translate="yes" xml:space="preserve">
          <source>Open &lt;em&gt;url&lt;/em&gt;. If open fails, raises &lt;a href=&quot;#test.support.TestFailed&quot;&gt;&lt;code&gt;TestFailed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打开&lt;em&gt;网址&lt;/em&gt;。如果打开失败，则引发&lt;a href=&quot;#test.support.TestFailed&quot;&gt; &lt;code&gt;TestFailed&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="167f647cfa354d55132f5f4c726947ab44e252e5" translate="yes" xml:space="preserve">
          <source>Open FTP URLs, keeping a cache of open FTP connections to minimize delays.</source>
          <target state="translated">打开FTP URL,保持打开FTP连接的缓存,以减少延迟。</target>
        </trans-unit>
        <trans-unit id="8d287b03a85c8b0ae6a80daba6bfee69f5e82fba" translate="yes" xml:space="preserve">
          <source>Open FTP URLs.</source>
          <target state="translated">打开FTP URL。</target>
        </trans-unit>
        <trans-unit id="83a9f9ab392f027e4bb05e016c0ac5b186fb79a0" translate="yes" xml:space="preserve">
          <source>Open Module&amp;hellip;</source>
          <target state="translated">打开模块&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="0a169583e6466c4bfd610a1b2484012408457535" translate="yes" xml:space="preserve">
          <source>Open Sound System Programmer&amp;rsquo;s Guide</source>
          <target state="translated">开放式声音系统程序员指南</target>
        </trans-unit>
        <trans-unit id="d650c621aed21d23bbb1a249e9d1ffa127b4a119" translate="yes" xml:space="preserve">
          <source>Open a &lt;code&gt;dumbdbm&lt;/code&gt; database and return a dumbdbm object. The &lt;em&gt;filename&lt;/em&gt; argument is the basename of the database file (without any specific extensions). When a dumbdbm database is created, files with &lt;code&gt;.dat&lt;/code&gt; and &lt;code&gt;.dir&lt;/code&gt; extensions are created.</source>
          <target state="translated">打开一个 &lt;code&gt;dumbdbm&lt;/code&gt; 数据库并返回一个dumbdbm对象。该&lt;em&gt;文件名&lt;/em&gt;参数是数据库文件的基本名称（没有任何具体的扩展）。创建dumbdbm数据库时，将创建扩展名为 &lt;code&gt;.dat&lt;/code&gt; 和 &lt;code&gt;.dir&lt;/code&gt; 的文件。</target>
        </trans-unit>
        <trans-unit id="e632fe179883b3d0338581a425671fd5094822ca" translate="yes" xml:space="preserve">
          <source>Open a &lt;code&gt;gdbm&lt;/code&gt; database and return a &lt;code&gt;gdbm&lt;/code&gt; object. The &lt;em&gt;filename&lt;/em&gt; argument is the name of the database file.</source>
          <target state="translated">打开一个 &lt;code&gt;gdbm&lt;/code&gt; 数据库并返回一个 &lt;code&gt;gdbm&lt;/code&gt; 对象。该&lt;em&gt;文件名&lt;/em&gt;参数是数据库文件的名称。</target>
        </trans-unit>
        <trans-unit id="4322583748a9c6421dfb4c09fcaf033d44e4d9da" translate="yes" xml:space="preserve">
          <source>Open a &lt;em&gt;stream&lt;/em&gt; of tar blocks for reading with transparent compression.</source>
          <target state="translated">打开一个&lt;em&gt;流&lt;/em&gt;焦油块用于与透明压缩读取。</target>
        </trans-unit>
        <trans-unit id="729abd50a19a9f17e3e7c4f19594ca97385dcc56" translate="yes" xml:space="preserve">
          <source>Open a &lt;em&gt;stream&lt;/em&gt; of uncompressed tar blocks for reading.</source>
          <target state="translated">打开未压缩的tar块&lt;em&gt;流&lt;/em&gt;以进行读取。</target>
        </trans-unit>
        <trans-unit id="0a595c5666012f5a73201a7ad3255c23528028d9" translate="yes" xml:space="preserve">
          <source>Open a TCP connection.</source>
          <target state="translated">打开一个TCP连接。</target>
        </trans-unit>
        <trans-unit id="dedbe01a1c7e4b40aa832642beeaa62e8071b7b2" translate="yes" xml:space="preserve">
          <source>Open a Unix socket connection.</source>
          <target state="translated">打开一个Unix套接字连接。</target>
        </trans-unit>
        <trans-unit id="c30333aca1528eaa7dec5dcc0b551102c76fb3bc" translate="yes" xml:space="preserve">
          <source>Open a ZIP file, where &lt;em&gt;file&lt;/em&gt; can be a path to a file (a string), a file-like object or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="translated">打开一个ZIP文件，其中&lt;em&gt;file&lt;/em&gt;可以是文件（字符串）的&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;路径，类似&lt;/a&gt;文件的对象或类似路径的对象。</target>
        </trans-unit>
        <trans-unit id="b844406e1d7fb2c84d714af40a1c0b56204e8098" translate="yes" xml:space="preserve">
          <source>Open a ZIP file, where &lt;em&gt;file&lt;/em&gt; can be a path to a file (a string), a file-like object or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769e263af17bbeb1d57314125f9ccfea5fdf9008" translate="yes" xml:space="preserve">
          <source>Open a bzip2 compressed &lt;em&gt;stream&lt;/em&gt; for reading.</source>
          <target state="translated">打开一个bzip2压缩&lt;em&gt;流&lt;/em&gt;以进行读取。</target>
        </trans-unit>
        <trans-unit id="d71b74051ccf64b5252b5579fb9f29f5d65d41ae" translate="yes" xml:space="preserve">
          <source>Open a bzip2 compressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">打开一个bzip2压缩&lt;em&gt;流&lt;/em&gt;进行写入。</target>
        </trans-unit>
        <trans-unit id="6c202a8f725c3966ee9eb45191a4f1f648fe6ef6" translate="yes" xml:space="preserve">
          <source>Open a bzip2-compressed file in binary mode.</source>
          <target state="translated">以二进制模式打开bzip2压缩文件。</target>
        </trans-unit>
        <trans-unit id="61e2bcd0c719fe1eff240cd130593bcf98e87f8b" translate="yes" xml:space="preserve">
          <source>Open a bzip2-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">以二进制或文本模式打开bzip2压缩文件，并返回&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c501141e20ca6f1bb67e9874109864e0151202e" translate="yes" xml:space="preserve">
          <source>Open a bzip2-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efeeb124691327df2e796c4e2f61fca215aaaf35" translate="yes" xml:space="preserve">
          <source>Open a column to the left of the edit window which shows the number of each line of text. The default is off, which may be changed in the preferences (see &lt;a href=&quot;#preferences&quot;&gt;Setting preferences&lt;/a&gt;).</source>
          <target state="translated">在编辑窗口的左侧打开一列，该列显示每行文本的数量。默认设置为off，可以在首选项中进行更改（请参阅&lt;a href=&quot;#preferences&quot;&gt;设置首选项&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5138f8e4961bfac889560919d28c3273c8242a35" translate="yes" xml:space="preserve">
          <source>Open a configuration dialog and change preferences for the following: fonts, indentation, keybindings, text color themes, startup windows and size, additional help sources, and extensions. On macOS, open the configuration dialog by selecting Preferences in the application menu. For more details, see &lt;a href=&quot;#preferences&quot;&gt;Setting preferences&lt;/a&gt; under Help and preferences.</source>
          <target state="translated">打开配置对话框，然后更改以下各项的首选项：字体，缩进，键绑定，文本颜色主题，启动窗口和大小，其他帮助源以及扩展名。在macOS上，通过在应用程序菜单中选择首选项来打开配置对话框。有关更多详细信息，请参阅&amp;ldquo;帮助和首&lt;a href=&quot;#preferences&quot;&gt;选项&amp;rdquo;&lt;/a&gt;下的&amp;ldquo; 设置首选项&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="bb78ee95466565bc19aba0319a23cbc54a1f5a4d" translate="yes" xml:space="preserve">
          <source>Open a context menu by right-clicking in a window (Control-click on macOS). Context menus have the standard clipboard functions also on the Edit menu.</source>
          <target state="translated">通过在窗口中右击打开上下文菜单(在macOS上单击Control-click)。上下文菜单具有标准剪贴板功能,也是编辑菜单上的功能。</target>
        </trans-unit>
        <trans-unit id="1364f2f6816d76d9a15863cac1e9715a393be440" translate="yes" xml:space="preserve">
          <source>Open a datagram (UDP) connection.</source>
          <target state="translated">打开一个数据报(UDP)连接。</target>
        </trans-unit>
        <trans-unit id="dab27c8f9d447246bffdf89284e45b057ad9df09" translate="yes" xml:space="preserve">
          <source>Open a dbm database and return a &lt;code&gt;ndbm&lt;/code&gt; object. The &lt;em&gt;filename&lt;/em&gt; argument is the name of the database file (without the &lt;code&gt;.dir&lt;/code&gt; or &lt;code&gt;.pag&lt;/code&gt; extensions).</source>
          <target state="translated">打开一个dbm数据库并返回一个 &lt;code&gt;ndbm&lt;/code&gt; 对象。该&lt;em&gt;文件名&lt;/em&gt;参数是数据库文件（没有名称 &lt;code&gt;.dir&lt;/code&gt; 或者 &lt;code&gt;.pag&lt;/code&gt; 扩展）。</target>
        </trans-unit>
        <trans-unit id="da0ecd35b7e06e2e10631de386f9db741d263580" translate="yes" xml:space="preserve">
          <source>Open a dialog to change indent width. The accepted default by the Python community is 4 spaces.</source>
          <target state="translated">打开一个对话框来改变缩进宽度。Python 社区接受的默认值是 4 个空格。</target>
        </trans-unit>
        <trans-unit id="ab3cd1f4cf6f887a03a632cf57e13ad36b7a697f" translate="yes" xml:space="preserve">
          <source>Open a dialog to switch between indenting with spaces and tabs.</source>
          <target state="translated">打开对话框,在空格和制表符之间切换缩进。</target>
        </trans-unit>
        <trans-unit id="a25e5b56a56e73584a7689c789c2a64cbda285d4" translate="yes" xml:space="preserve">
          <source>Open a file in read only mode using the encoding detected by &lt;a href=&quot;#tokenize.detect_encoding&quot;&gt;&lt;code&gt;detect_encoding()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;#tokenize.detect_encoding&quot;&gt; &lt;code&gt;detect_encoding()&lt;/code&gt; &lt;/a&gt;检测到的编码以只读模式打开文件。</target>
        </trans-unit>
        <trans-unit id="37ab3730c8e04788612d761f24c638eb97873272" translate="yes" xml:space="preserve">
          <source>Open a file search dialog. Put results in a new output window.</source>
          <target state="translated">打开文件搜索对话框。将结果放在一个新的输出窗口中。</target>
        </trans-unit>
        <trans-unit id="2eb14a6fd323b13d0beb8b8c63d260dee2458311" translate="yes" xml:space="preserve">
          <source>Open a gzip compressed &lt;em&gt;stream&lt;/em&gt; for reading.</source>
          <target state="translated">打开gzip压缩&lt;em&gt;流&lt;/em&gt;以供阅读。</target>
        </trans-unit>
        <trans-unit id="58de51c83b15bd0a90eb56d615d749c080c0428e" translate="yes" xml:space="preserve">
          <source>Open a gzip compressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">打开一个gzip压缩&lt;em&gt;流&lt;/em&gt;进行写入。</target>
        </trans-unit>
        <trans-unit id="5f9ebb796e4ce59f8458da340d1d52a456be5ef3" translate="yes" xml:space="preserve">
          <source>Open a gzip-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">以二进制或文本模式打开gzip压缩的文件，并返回一个&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="df9eaa58da31d44e870bff5c208ccabfb6e4d3cb" translate="yes" xml:space="preserve">
          <source>Open a gzip-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c017ce0258307bd561cc1c740687ba59474f0b" translate="yes" xml:space="preserve">
          <source>Open a list of recent files. Click one to open it.</source>
          <target state="translated">打开最近的文件列表。点击其中一个打开它。</target>
        </trans-unit>
        <trans-unit id="ca394801875e76928a12c9b6e408f346c581adf2" translate="yes" xml:space="preserve">
          <source>Open a mixer device and return an OSS mixer device object. &lt;em&gt;device&lt;/em&gt; is the mixer device filename to use. If it is not specified, this module first looks in the environment variable &lt;code id=&quot;index-1&quot;&gt;MIXERDEV&lt;/code&gt; for a device to use. If not found, it falls back to &lt;code&gt;/dev/mixer&lt;/code&gt;.</source>
          <target state="translated">打开混合器设备并返回OSS混合器设备对象。&lt;em&gt;设备&lt;/em&gt;是要使用的混音器设备文件名。如果未指定，则此模块首先在环境变量 &lt;code id=&quot;index-1&quot;&gt;MIXERDEV&lt;/code&gt; 中查找要使用的设备。如果未找到，它将回退到 &lt;code&gt;/dev/mixer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="124de94624e9d6235daba0288398e8d0eda77911" translate="yes" xml:space="preserve">
          <source>Open a new pseudo-terminal pair, using &lt;a href=&quot;os#os.openpty&quot;&gt;&lt;code&gt;os.openpty()&lt;/code&gt;&lt;/a&gt; if possible, or emulation code for generic Unix systems. Return a pair of file descriptors &lt;code&gt;(master, slave)&lt;/code&gt;, for the master and the slave end, respectively.</source>
          <target state="translated">如果可能，使用&lt;a href=&quot;os#os.openpty&quot;&gt; &lt;code&gt;os.openpty()&lt;/code&gt; &lt;/a&gt;或通用Unix系统的仿真代码打开一个新的伪终端对。返回分别用于主端和从端的一对文件描述符 &lt;code&gt;(master, slave)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0f92982986d32cddede6d079b18b515667e6c40" translate="yes" xml:space="preserve">
          <source>Open a new pseudo-terminal pair. Return a pair of file descriptors &lt;code&gt;(master, slave)&lt;/code&gt; for the pty and the tty, respectively. The new file descriptors are &lt;a href=&quot;#fd-inheritance&quot;&gt;non-inheritable&lt;/a&gt;. For a (slightly) more portable approach, use the &lt;a href=&quot;pty#module-pty&quot;&gt;&lt;code&gt;pty&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">打开一个新的伪终端对。分别返回pty和tty的一对文件描述符 &lt;code&gt;(master, slave)&lt;/code&gt; 。新的文件描述符是&lt;a href=&quot;#fd-inheritance&quot;&gt;不可继承的&lt;/a&gt;。对于（稍微）更可移植的方法，请使用&lt;a href=&quot;pty#module-pty&quot;&gt; &lt;code&gt;pty&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="310ce69a8bca050de2aaf114ea01dff137cc8b62" translate="yes" xml:space="preserve">
          <source>Open a pane at the top of the edit window which shows the block context of the code which has scrolled above the top of the window. See &lt;a href=&quot;#code-context&quot;&gt;Code Context&lt;/a&gt; in the Editing and Navigation section below.</source>
          <target state="translated">打开编辑窗口顶部的窗格，该窗格显示已滚动到窗口顶部上方的代码的块上下文。请参阅下面的&amp;ldquo;编辑和导航&amp;rdquo;部分中的&lt;a href=&quot;#code-context&quot;&gt;代码上下文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="961144629087d810690a8c197d9838fead119d99" translate="yes" xml:space="preserve">
          <source>Open a persistent dictionary. The filename specified is the base filename for the underlying database. As a side-effect, an extension may be added to the filename and more than one file may be created. By default, the underlying database file is opened for reading and writing. The optional &lt;em&gt;flag&lt;/em&gt; parameter has the same interpretation as the &lt;em&gt;flag&lt;/em&gt; parameter of &lt;a href=&quot;dbm#dbm.open&quot;&gt;&lt;code&gt;dbm.open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打开一个持久字典。指定的文件名是基础数据库的基本文件名。作为副作用，可以将扩展名添加到文件名中，并且可以创建多个文件。默认情况下，基础数据库文件被打开以进行读取和写入。可选的&lt;em&gt;flag&lt;/em&gt;参数与&lt;a href=&quot;dbm#dbm.open&quot;&gt; &lt;code&gt;dbm.open()&lt;/code&gt; 的&lt;/a&gt;&lt;em&gt; flag&lt;/em&gt;参数具有相同的解释。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e30bcb19f1f39f996dce7f6ad300b894ce70b960" translate="yes" xml:space="preserve">
          <source>Open a pipe to or from command &lt;em&gt;cmd&lt;/em&gt;. The return value is an open file object connected to the pipe, which can be read or written depending on whether &lt;em&gt;mode&lt;/em&gt; is &lt;code&gt;'r'&lt;/code&gt; (default) or &lt;code&gt;'w'&lt;/code&gt;. The &lt;em&gt;buffering&lt;/em&gt; argument has the same meaning as the corresponding argument to the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. The returned file object reads or writes text strings rather than bytes.</source>
          <target state="translated">打开到命令&lt;em&gt;cmd&lt;/em&gt;或来自命令&lt;em&gt;cmd&lt;/em&gt;的管道。返回值是连接到管道的打开文件对象，可以根据&lt;em&gt;mode&lt;/em&gt;是 &lt;code&gt;'r'&lt;/code&gt; （默认）还是 &lt;code&gt;'w'&lt;/code&gt; 对其进行读取或写入。的&lt;em&gt;缓冲&lt;/em&gt;参数的含义与相应的参数传递给内置的相同&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数。返回的文件对象读取或写入文本字符串，而不是字节。</target>
        </trans-unit>
        <trans-unit id="8c5fd40c145ccacef9428c87b2f9836894576731" translate="yes" xml:space="preserve">
          <source>Open a scrollable list allowing selection of existing names. See &lt;a href=&quot;#completions&quot;&gt;Completions&lt;/a&gt; in the Editing and navigation section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4303f9f37906dec81588a51089c928e75e68e4f" translate="yes" xml:space="preserve">
          <source>Open a scrollable list allowing selection of keywords and attributes. See &lt;a href=&quot;#completions&quot;&gt;Completions&lt;/a&gt; in the Editing and navigation section below.</source>
          <target state="translated">打开一个可滚动列表，允许选择关键字和属性。见&lt;a href=&quot;#completions&quot;&gt;完井&lt;/a&gt;在编辑和下面的导航部分。</target>
        </trans-unit>
        <trans-unit id="4217d0cef98e970f4e763e2abdcb21e0e9dba748" translate="yes" xml:space="preserve">
          <source>Open a search dialog with many options</source>
          <target state="translated">打开一个有多个选项的搜索对话框</target>
        </trans-unit>
        <trans-unit id="7d488b8ee4c8ad111ad3e0840a8cf0d33d625078" translate="yes" xml:space="preserve">
          <source>Open a search-and-replace dialog.</source>
          <target state="translated">打开搜索和替换对话框。</target>
        </trans-unit>
        <trans-unit id="ff5f177e11975357dd6078d245cc9e65ff7d469c" translate="yes" xml:space="preserve">
          <source>Open a streaming transport connection to a given address specified by &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt;.</source>
          <target state="translated">打开到&lt;em&gt;主机&lt;/em&gt;和&lt;em&gt;端口&lt;/em&gt;指定的给定地址的流传输连接。</target>
        </trans-unit>
        <trans-unit id="1744e1544566dcdbef4e0123916bae4c8ecaef7a" translate="yes" xml:space="preserve">
          <source>Open an AIFF or AIFF-C file and return an object instance with methods that are described below. The argument &lt;em&gt;file&lt;/em&gt; is either a string naming a file or a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;mode&lt;/em&gt; must be &lt;code&gt;'r'&lt;/code&gt; or &lt;code&gt;'rb'&lt;/code&gt; when the file must be opened for reading, or &lt;code&gt;'w'&lt;/code&gt; or &lt;code&gt;'wb'&lt;/code&gt; when the file must be opened for writing. If omitted, &lt;code&gt;file.mode&lt;/code&gt; is used if it exists, otherwise &lt;code&gt;'rb'&lt;/code&gt; is used. When used for writing, the file object should be seekable, unless you know ahead of time how many samples you are going to write in total and use &lt;code&gt;writeframesraw()&lt;/code&gt; and &lt;code&gt;setnframes()&lt;/code&gt;. The &lt;a href=&quot;#aifc.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function may be used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When the &lt;code&gt;with&lt;/code&gt; block completes, the &lt;a href=&quot;#aifc.aifc.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">打开AIFF或AIFF-C文件，并使用下面介绍的方法返回对象实例。参数&lt;em&gt;文件&lt;/em&gt;是命名文件或&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;的字符串。当必须打开文件进行读取时，&lt;em&gt;mode&lt;/em&gt;必须为 &lt;code&gt;'r'&lt;/code&gt; 或 &lt;code&gt;'rb'&lt;/code&gt; 当必须打开文件进行写入时，&lt;em&gt;mode&lt;/em&gt;为 &lt;code&gt;'w'&lt;/code&gt; 或 &lt;code&gt;'wb'&lt;/code&gt; 。如果省略，则使用 &lt;code&gt;file.mode&lt;/code&gt; （如果存在），否则使用 &lt;code&gt;'rb'&lt;/code&gt; 。当用于写入时，文件对象应该是可搜索的，除非您事先知道要总共写入多少样本并使用 &lt;code&gt;writeframesraw()&lt;/code&gt; 和 &lt;code&gt;setnframes()&lt;/code&gt; 。的&lt;a href=&quot;#aifc.open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数可以在&lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt; &lt;code&gt;with&lt;/code&gt; &lt;/a&gt;语句中使用。当 &lt;code&gt;with&lt;/code&gt; 块完成时，将调用&lt;a href=&quot;#aifc.aifc.close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="ddf92b972ba5b44c47eb08af4356977d6224354c" translate="yes" xml:space="preserve">
          <source>Open an AIFF or AIFF-C file and return an object instance with methods that are described below. The argument &lt;em&gt;file&lt;/em&gt; is either a string naming a file or a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;. &lt;em&gt;mode&lt;/em&gt; must be &lt;code&gt;'r'&lt;/code&gt; or &lt;code&gt;'rb'&lt;/code&gt; when the file must be opened for reading, or &lt;code&gt;'w'&lt;/code&gt; or &lt;code&gt;'wb'&lt;/code&gt; when the file must be opened for writing. If omitted, &lt;code&gt;file.mode&lt;/code&gt; is used if it exists, otherwise &lt;code&gt;'rb'&lt;/code&gt; is used. When used for writing, the file object should be seekable, unless you know ahead of time how many samples you are going to write in total and use &lt;code&gt;writeframesraw()&lt;/code&gt; and &lt;code&gt;setnframes()&lt;/code&gt;. The &lt;a href=&quot;#aifc.open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function may be used in a &lt;a href=&quot;https://docs.python.org/3.9/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When the &lt;code&gt;with&lt;/code&gt; block completes, the &lt;a href=&quot;#aifc.aifc.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c826d14c450bf65432c928fcd0ab030434d46051" translate="yes" xml:space="preserve">
          <source>Open an LZMA-compressed file in binary mode.</source>
          <target state="translated">以二进制模式打开一个LZMA压缩文件。</target>
        </trans-unit>
        <trans-unit id="e1faabe747c63d77a2b349aef83e34f029746298" translate="yes" xml:space="preserve">
          <source>Open an LZMA-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="translated">以二进制或文本模式打开LZMA压缩的文件，并返回&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3dc1a2e7448af77fafeaad4b56b7249fb522823e" translate="yes" xml:space="preserve">
          <source>Open an LZMA-compressed file in binary or text mode, returning a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c9941ee4cb89d2d889eb4b86133c79f4dbfe23" translate="yes" xml:space="preserve">
          <source>Open an audio device and return an OSS audio device object. This object supports many file-like methods, such as &lt;code&gt;read()&lt;/code&gt;, &lt;code&gt;write()&lt;/code&gt;, and &lt;code&gt;fileno()&lt;/code&gt; (although there are subtle differences between conventional Unix read/write semantics and those of OSS audio devices). It also supports a number of audio-specific methods; see below for the complete list of methods.</source>
          <target state="translated">打开音频设备并返回OSS音频设备对象。该对象支持许多类似文件的方法，例如 &lt;code&gt;read()&lt;/code&gt; ， &lt;code&gt;write()&lt;/code&gt; 和 &lt;code&gt;fileno()&lt;/code&gt; （尽管常规Unix读/写语义与OSS音频设备的语义之间存在细微的差异）。它还支持多种音频特定的方法。有关方法的完整列表，请参见下文。</target>
        </trans-unit>
        <trans-unit id="603bc2bb14d64c97ed149bdeb1f454a0cdee6bdf" translate="yes" xml:space="preserve">
          <source>Open an encoded file using the given &lt;em&gt;mode&lt;/em&gt; and return an instance of &lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt;&lt;code&gt;StreamReaderWriter&lt;/code&gt;&lt;/a&gt;, providing transparent encoding/decoding. The default file mode is &lt;code&gt;'r'&lt;/code&gt;, meaning to open the file in read mode.</source>
          <target state="translated">使用给定的&lt;em&gt;模式&lt;/em&gt;打开编码的文件，并返回&lt;a href=&quot;#codecs.StreamReaderWriter&quot;&gt; &lt;code&gt;StreamReaderWriter&lt;/code&gt; &lt;/a&gt;的实例，提供透明的编码/解码。默认文件模式为 &lt;code&gt;'r'&lt;/code&gt; ，这意味着以读取模式打开文件。</target>
        </trans-unit>
        <trans-unit id="70e42698ff3f06e64e68df6dd8b37bb0b559281d" translate="yes" xml:space="preserve">
          <source>Open an existing file with an Open dialog.</source>
          <target state="translated">用 &quot;打开 &quot;对话框打开现有文件。</target>
        </trans-unit>
        <trans-unit id="d98d15f410a1d6752590d2b11440fb75fb110d32" translate="yes" xml:space="preserve">
          <source>Open an existing module (searches sys.path).</source>
          <target state="translated">打开一个现有的模块(搜索sys.path)。</target>
        </trans-unit>
        <trans-unit id="0ee43539d00f6f0549ec54060b1769296318ac88" translate="yes" xml:space="preserve">
          <source>Open an lzma compressed &lt;em&gt;stream&lt;/em&gt; for reading.</source>
          <target state="translated">打开一个lzma压缩&lt;em&gt;流&lt;/em&gt;以进行读取。</target>
        </trans-unit>
        <trans-unit id="31602b490a7a64e6c2db5f868743fe69a5882ae0" translate="yes" xml:space="preserve">
          <source>Open an lzma compressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">打开一个lzma压缩&lt;em&gt;流&lt;/em&gt;进行写入。</target>
        </trans-unit>
        <trans-unit id="079b069912678bc0e9edc918427fbb1c6c90a22d" translate="yes" xml:space="preserve">
          <source>Open an uncompressed &lt;em&gt;stream&lt;/em&gt; for writing.</source>
          <target state="translated">打开未压缩的&lt;em&gt;流&lt;/em&gt;以进行写入。</target>
        </trans-unit>
        <trans-unit id="98a6f72f0f8ba4690a7074b4a4a5e9ed2745f83c" translate="yes" xml:space="preserve">
          <source>Open data URLs.</source>
          <target state="translated">开放数据URL。</target>
        </trans-unit>
        <trans-unit id="16d266be663a4baf112aaf41a72a96cf96f3a372" translate="yes" xml:space="preserve">
          <source>Open database for reading and writing, creating it if it doesn&amp;rsquo;t exist</source>
          <target state="translated">打开数据库进行读写，如果不存在则创建数据库</target>
        </trans-unit>
        <trans-unit id="781766b35fa1fffb57637176b0ab6b1592f6edda" translate="yes" xml:space="preserve">
          <source>Open existing database for reading and writing</source>
          <target state="translated">打开现有数据库进行读写</target>
        </trans-unit>
        <trans-unit id="410e2a4489d3a436b0413ceb110aca00b9d836e3" translate="yes" xml:space="preserve">
          <source>Open existing database for reading only (default)</source>
          <target state="translated">打开现有的数据库,只读(默认)。</target>
        </trans-unit>
        <trans-unit id="da8803e86851bcbc32ed1a652aec62b5acaa7e27" translate="yes" xml:space="preserve">
          <source>Open for appending with no compression. The file is created if it does not exist.</source>
          <target state="translated">打开进行追加,无压缩。如果文件不存在,则创建该文件。</target>
        </trans-unit>
        <trans-unit id="a92945eaf20e290447e2fee4702651291e88a7a8" translate="yes" xml:space="preserve">
          <source>Open for binary reading the &lt;em&gt;resource&lt;/em&gt; within &lt;em&gt;package&lt;/em&gt;.</source>
          <target state="translated">打开二进制阅读&lt;em&gt;资源&lt;/em&gt;内&lt;em&gt;包&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3d7a0fda614e078919dfeee281a77c3029b4cd8d" translate="yes" xml:space="preserve">
          <source>Open for bzip2 compressed writing.</source>
          <target state="translated">打开进行bzip2压缩写入。</target>
        </trans-unit>
        <trans-unit id="3be0b1cac4b854897b77bfa1ac3644fca43d5aa8" translate="yes" xml:space="preserve">
          <source>Open for gzip compressed writing.</source>
          <target state="translated">打开后可进行gzip压缩写入。</target>
        </trans-unit>
        <trans-unit id="e4536676ca1a607495256d83de74122a14e9f319" translate="yes" xml:space="preserve">
          <source>Open for lzma compressed writing.</source>
          <target state="translated">打开后可进行lzma压缩写入。</target>
        </trans-unit>
        <trans-unit id="e39a5b6a548b20c25318d8a7703ff10916012921" translate="yes" xml:space="preserve">
          <source>Open for reading exclusively without compression.</source>
          <target state="translated">打开阅读专一不压缩。</target>
        </trans-unit>
        <trans-unit id="5d2a4b3378fdbc3be17d246022eb416831821745" translate="yes" xml:space="preserve">
          <source>Open for reading with bzip2 compression.</source>
          <target state="translated">用bzip2压缩打开阅读。</target>
        </trans-unit>
        <trans-unit id="e27915e983e4971e83b72733d9272da24ed3062a" translate="yes" xml:space="preserve">
          <source>Open for reading with gzip compression.</source>
          <target state="translated">用gzip压缩打开阅读。</target>
        </trans-unit>
        <trans-unit id="2da82d3e5ef9f2ef062573cb554660a3c136498f" translate="yes" xml:space="preserve">
          <source>Open for reading with lzma compression.</source>
          <target state="translated">用lzma压缩打开阅读。</target>
        </trans-unit>
        <trans-unit id="e3a348820cc41064f1578562b070372b25c805da" translate="yes" xml:space="preserve">
          <source>Open for reading with transparent compression (recommended).</source>
          <target state="translated">开放阅读,透明压缩(推荐)。</target>
        </trans-unit>
        <trans-unit id="72bd4d78cdd6d40e6b66c653af1f6efc9092b2a0" translate="yes" xml:space="preserve">
          <source>Open for text reading the &lt;em&gt;resource&lt;/em&gt; within &lt;em&gt;package&lt;/em&gt;. By default, the resource is opened for reading as UTF-8.</source>
          <target state="translated">打开文本阅读&lt;em&gt;资源&lt;/em&gt;内&lt;em&gt;包&lt;/em&gt;。默认情况下，该资源被打开以作为UTF-8读取。</target>
        </trans-unit>
        <trans-unit id="5fbd33d2eb6cd4b2ececd950d2a289a68364e3b2" translate="yes" xml:space="preserve">
          <source>Open for uncompressed writing.</source>
          <target state="translated">打开后可进行非压缩写作。</target>
        </trans-unit>
        <trans-unit id="2d5629e9c9ad86de82f582a75bd5aac184a32a98" translate="yes" xml:space="preserve">
          <source>Open local files.</source>
          <target state="translated">打开本地文件。</target>
        </trans-unit>
        <trans-unit id="c31d0d8dc1af57114456f8a6995200302c826647" translate="yes" xml:space="preserve">
          <source>Open or wake up the Python Shell window.</source>
          <target state="translated">打开或唤醒Python Shell窗口。</target>
        </trans-unit>
        <trans-unit id="64e54bad7370d9dd3ea7ce90f39c116822954b3f" translate="yes" xml:space="preserve">
          <source>Open the FTP file indicated by &lt;em&gt;req&lt;/em&gt;. The login is always done with empty username and password.</source>
          <target state="translated">打开&lt;em&gt;req&lt;/em&gt;指示的FTP文件。登录始终使用空的用户名和密码完成。</target>
        </trans-unit>
        <trans-unit id="6bf0ac9893ebd85b77099d4a402423ddf3e569c0" translate="yes" xml:space="preserve">
          <source>Open the URL &lt;em&gt;url&lt;/em&gt;, which can be either a string or a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">打开URL &lt;em&gt;url&lt;/em&gt;，它可以是字符串或&lt;a href=&quot;#urllib.request.Request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="a2f57839feb75512fa819cec149b3ca923d075ec" translate="yes" xml:space="preserve">
          <source>Open the database file &lt;em&gt;file&lt;/em&gt; and return a corresponding object.</source>
          <target state="translated">打开数据库文件&lt;em&gt;文件&lt;/em&gt;并返回相应的对象。</target>
        </trans-unit>
        <trans-unit id="9778684242145c7e5980545da5305f1a835b31fd" translate="yes" xml:space="preserve">
          <source>Open the database in fast mode. Writes to the database will not be synchronized.</source>
          <target state="translated">以快速模式打开数据库。对数据库的写入将不会同步。</target>
        </trans-unit>
        <trans-unit id="0dc0480d0f4224d0fb02e5967e073c791476447a" translate="yes" xml:space="preserve">
          <source>Open the file &lt;em&gt;path&lt;/em&gt; and set various flags according to &lt;em&gt;flags&lt;/em&gt; and possibly its mode according to &lt;em&gt;mode&lt;/em&gt;. When computing &lt;em&gt;mode&lt;/em&gt;, the current umask value is first masked out. Return the file descriptor for the newly opened file. The new file descriptor is &lt;a href=&quot;#fd-inheritance&quot;&gt;non-inheritable&lt;/a&gt;.</source>
          <target state="translated">打开文件&lt;em&gt;路径，&lt;/em&gt;并根据&lt;em&gt;标志&lt;/em&gt;设置各种标志，并根据&lt;em&gt;mode&lt;/em&gt;可能设置其&lt;em&gt;模式&lt;/em&gt;。在计算&lt;em&gt;模式下&lt;/em&gt;，当前的umask值首先被屏蔽掉。返回新打开文件的文件描述符。新的文件描述符是&lt;a href=&quot;#fd-inheritance&quot;&gt;不可继承的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="caa52afce9506061d0fa4472348c0e95be91ed41" translate="yes" xml:space="preserve">
          <source>Open the file locally, if there is no host name, or the host name is &lt;code&gt;'localhost'&lt;/code&gt;.</source>
          <target state="translated">如果没有主机名，或者主机名是 &lt;code&gt;'localhost'&lt;/code&gt; ，则在本地打开文件。</target>
        </trans-unit>
        <trans-unit id="cfc513f94813f282c3c61b3a5c7b58c27fabbaa9" translate="yes" xml:space="preserve">
          <source>Open the file pointed to by the path, like the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function does:</source>
          <target state="translated">打开路径指向的文件，就像内置的&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;函数一样：</target>
        </trans-unit>
        <trans-unit id="5eba403538351b5c16610a19c57e8a8df88568dc" translate="yes" xml:space="preserve">
          <source>Open the file pointed to in bytes mode, write &lt;em&gt;data&lt;/em&gt; to it, and close the file:</source>
          <target state="translated">打开以字节模式指向的文件，向其中写入&lt;em&gt;数据&lt;/em&gt;，然后关闭文件：</target>
        </trans-unit>
        <trans-unit id="e701b16e8d36cd75f1fa0285568b0411ec651724" translate="yes" xml:space="preserve">
          <source>Open the file pointed to in text mode, write &lt;em&gt;data&lt;/em&gt; to it, and close the file:</source>
          <target state="translated">打开以文本模式指向的文件，向其中写入&lt;em&gt;数据&lt;/em&gt;，然后关闭文件：</target>
        </trans-unit>
        <trans-unit id="89b97b71d7fce960991c7dd1c07e2cdaec524088" translate="yes" xml:space="preserve">
          <source>Open the given &lt;em&gt;url&lt;/em&gt; (which can be a request object or a string), optionally passing the given &lt;em&gt;data&lt;/em&gt;. Arguments, return values and exceptions raised are the same as those of &lt;a href=&quot;#urllib.request.urlopen&quot;&gt;&lt;code&gt;urlopen()&lt;/code&gt;&lt;/a&gt; (which simply calls the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; method on the currently installed global &lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt;&lt;code&gt;OpenerDirector&lt;/code&gt;&lt;/a&gt;). The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for blocking operations like the connection attempt (if not specified, the global default timeout setting will be used). The timeout feature actually works only for HTTP, HTTPS and FTP connections).</source>
          <target state="translated">打开给定的&lt;em&gt;url&lt;/em&gt;（可以是请求对象或字符串），可以选择传递给定的&lt;em&gt;data&lt;/em&gt;。参数，返回值和引发的异常与&lt;a href=&quot;#urllib.request.urlopen&quot;&gt; &lt;code&gt;urlopen()&lt;/code&gt; 相同&lt;/a&gt;（后者仅在当前安装的全局&lt;a href=&quot;#urllib.request.OpenerDirector&quot;&gt; &lt;code&gt;OpenerDirector&lt;/code&gt; &lt;/a&gt;上调用&lt;a href=&quot;functions#open&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;方法）。可选的&lt;em&gt;timeout&lt;/em&gt;参数以秒为单位指定用于阻止连接尝试之类的操作的超时（如果未指定，将使用全局默认超时设置）。超时功能实际上仅适用于HTTP，HTTPS和FTP连接）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e1480c8605ef5bc7bd341fc4f6753a37e43a4d4" translate="yes" xml:space="preserve">
          <source>Open&amp;hellip;</source>
          <target state="translated">Open&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="01d60b1917be3088476a0cd4e28b367766a98677" translate="yes" xml:space="preserve">
          <source>OpenEXR Files</source>
          <target state="translated">打开EXR文件</target>
        </trans-unit>
        <trans-unit id="73728b14af6a4a2f3551f7cdac9f5c4d6228013b" translate="yes" xml:space="preserve">
          <source>OpenSSL 1.1.0 to 1.1.0e will abort the handshake and raise &lt;a href=&quot;#ssl.SSLError&quot;&gt;&lt;code&gt;SSLError&lt;/code&gt;&lt;/a&gt; when both sides support ALPN but cannot agree on a protocol. 1.1.0f+ behaves like 1.0.2, &lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt;&lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt;&lt;/a&gt; returns None.</source>
          <target state="translated">当双方都支持ALPN但无法达成协议时，OpenSSL 1.1.0到1.1.0e将中止握手并引发&lt;a href=&quot;#ssl.SSLError&quot;&gt; &lt;code&gt;SSLError&lt;/code&gt; &lt;/a&gt;。1.1.0f +的行为类似于1.0.2，&lt;a href=&quot;#ssl.SSLSocket.selected_alpn_protocol&quot;&gt; &lt;code&gt;SSLSocket.selected_alpn_protocol()&lt;/code&gt; &lt;/a&gt;返回None。</target>
        </trans-unit>
        <trans-unit id="608031ed74d99bf56acad6cfae3a559becd3fe58" translate="yes" xml:space="preserve">
          <source>OpenSSL 1.1.1 has TLS 1.3 cipher suites enabled by default. The suites cannot be disabled with &lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt;&lt;code&gt;set_ciphers()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认情况下，OpenSSL 1.1.1启用了TLS 1.3密码套件。无法使用&lt;a href=&quot;#ssl.SSLContext.set_ciphers&quot;&gt; &lt;code&gt;set_ciphers()&lt;/code&gt; &lt;/a&gt;禁用套件。</target>
        </trans-unit>
        <trans-unit id="87910396f08c825fecd3572b61ad32564c05b34d" translate="yes" xml:space="preserve">
          <source>OpenerDirector Objects</source>
          <target state="translated">OpenerDirector对象</target>
        </trans-unit>
        <trans-unit id="4fa7faa0fef5cd2e070617de5da06be08f27d93b" translate="yes" xml:space="preserve">
          <source>OpenerDirector objects open URLs in three stages:</source>
          <target state="translated">OpenerDirector对象分三个阶段打开URL。</target>
        </trans-unit>
        <trans-unit id="16d066a3fc9b4ed5f9b17e3224ef371f27c42ab1" translate="yes" xml:space="preserve">
          <source>Opening a file:</source>
          <target state="translated">打开一个文件。</target>
        </trans-unit>
        <trans-unit id="3b13dba20249cec4bebcc1e50c72c68162719b5f" translate="yes" xml:space="preserve">
          <source>Opening network connections</source>
          <target state="translated">打开网络连接</target>
        </trans-unit>
        <trans-unit id="2e4955dc64b4b6a99ad04615254b1e5dbed12175" translate="yes" xml:space="preserve">
          <source>Opens a connection to the SQLite database file &lt;em&gt;database&lt;/em&gt;. By default returns a &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; object, unless a custom &lt;em&gt;factory&lt;/em&gt; is given.</source>
          <target state="translated">打开与SQLite数据库文件&lt;em&gt;数据库&lt;/em&gt;的连接。默认情况下，返回&lt;a href=&quot;#sqlite3.Connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;对象，除非给出了自定义&lt;em&gt;工厂&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="85224a398354ea36e289250e0f429ab80eb410a3" translate="yes" xml:space="preserve">
          <source>Opens a new element. &lt;em&gt;tag&lt;/em&gt; is the element name. &lt;em&gt;attrs&lt;/em&gt; is a dictionary containing element attributes. Returns the opened element.</source>
          <target state="translated">打开一个新元素。&lt;em&gt;tag&lt;/em&gt;是元素名称。&lt;em&gt;attrs&lt;/em&gt;是包含元素属性的字典。返回打开的元素。</target>
        </trans-unit>
        <trans-unit id="5552ba1b994865292838a17cccf8d2f7dbeb693a" translate="yes" xml:space="preserve">
          <source>Opens socket to &lt;em&gt;port&lt;/em&gt; at &lt;em&gt;host&lt;/em&gt;. The optional &lt;em&gt;timeout&lt;/em&gt; parameter specifies a timeout in seconds for the connection attempt. If timeout is not given or is None, the global default socket timeout is used. Also note that if the &lt;em&gt;timeout&lt;/em&gt; parameter is set to be zero, it will raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to reject creating a non-blocking socket. This method is implicitly called by the &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; constructor. The connection objects established by this method will be used in the &lt;a href=&quot;#imaplib.IMAP4.read&quot;&gt;&lt;code&gt;IMAP4.read()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4.readline&quot;&gt;&lt;code&gt;IMAP4.readline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4.send&quot;&gt;&lt;code&gt;IMAP4.send()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#imaplib.IMAP4.shutdown&quot;&gt;&lt;code&gt;IMAP4.shutdown()&lt;/code&gt;&lt;/a&gt; methods. You may override this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabf2727e8cb0ec31b954ad851960d268b7966e2" translate="yes" xml:space="preserve">
          <source>Opens socket to &lt;em&gt;port&lt;/em&gt; at &lt;em&gt;host&lt;/em&gt;. This method is implicitly called by the &lt;a href=&quot;#imaplib.IMAP4&quot;&gt;&lt;code&gt;IMAP4&lt;/code&gt;&lt;/a&gt; constructor. The connection objects established by this method will be used in the &lt;a href=&quot;#imaplib.IMAP4.read&quot;&gt;&lt;code&gt;IMAP4.read()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4.readline&quot;&gt;&lt;code&gt;IMAP4.readline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#imaplib.IMAP4.send&quot;&gt;&lt;code&gt;IMAP4.send()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#imaplib.IMAP4.shutdown&quot;&gt;&lt;code&gt;IMAP4.shutdown()&lt;/code&gt;&lt;/a&gt; methods. You may override this method.</source>
          <target state="translated">开幕插座&lt;em&gt;端口&lt;/em&gt;的&lt;em&gt;主机&lt;/em&gt;。此方法由&lt;a href=&quot;#imaplib.IMAP4&quot;&gt; &lt;code&gt;IMAP4&lt;/code&gt; &lt;/a&gt;构造函数隐式调用。通过此方法建立的连接对象将在&lt;a href=&quot;#imaplib.IMAP4.read&quot;&gt; &lt;code&gt;IMAP4.read()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#imaplib.IMAP4.readline&quot;&gt; &lt;code&gt;IMAP4.readline()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#imaplib.IMAP4.send&quot;&gt; &lt;code&gt;IMAP4.send()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#imaplib.IMAP4.shutdown&quot;&gt; &lt;code&gt;IMAP4.shutdown()&lt;/code&gt; &lt;/a&gt;方法中使用。您可以覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="525d07220d0ff4234fa0ad51dedfb34d53d57012" translate="yes" xml:space="preserve">
          <source>Opens the provided file with mode &lt;code&gt;'rb'&lt;/code&gt;. This function should be used when the intent is to treat the contents as executable code.</source>
          <target state="translated">以 &lt;code&gt;'rb'&lt;/code&gt; 模式打开提供的文件。如果要将内容视为可执行代码，则应使用此功能。</target>
        </trans-unit>
        <trans-unit id="413464a07680bc80891d442ceee2443c353ed2dd" translate="yes" xml:space="preserve">
          <source>Opens the specified key, returning a &lt;a href=&quot;#handle-object&quot;&gt;handle object&lt;/a&gt;.</source>
          <target state="translated">打开指定的键，返回一个&lt;a href=&quot;#handle-object&quot;&gt;handle对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5ba86326755952233b0543acced2995e5faf457" translate="yes" xml:space="preserve">
          <source>Operating System</source>
          <target state="translated">操作系统</target>
        </trans-unit>
        <trans-unit id="8c04dd154019c144217096dfd3976827b05133f0" translate="yes" xml:space="preserve">
          <source>Operating system interfaces, including functions to work with files at a lower level than Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;.</source>
          <target state="translated">操作系统界面，包括用于处理文件的功能，其功能比Python &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;文件对象低&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fc87b7e16c60d713e7c730fe487c543126364e8" translate="yes" xml:space="preserve">
          <source>Operating system interfaces, including functions to work with files at a lower level than Python &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-file-object&quot;&gt;file objects&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="0fc51a5c314382c855158eda38ff5409a7e69535" translate="yes" xml:space="preserve">
          <source>Operation already in progress</source>
          <target state="translated">行动已在进行中</target>
        </trans-unit>
        <trans-unit id="25ef925607b43bca64c3829868d9989b76540d3a" translate="yes" xml:space="preserve">
          <source>Operation not permitted</source>
          <target state="translated">不允许操作</target>
        </trans-unit>
        <trans-unit id="43a0d8034edc13c8132ddaa1b799ae87a6565b50" translate="yes" xml:space="preserve">
          <source>Operation not supported on transport endpoint</source>
          <target state="translated">运输端点不支持操作</target>
        </trans-unit>
        <trans-unit id="8fdc938d87d0b18a567701392c335d0c883fa4b7" translate="yes" xml:space="preserve">
          <source>Operation now in progress</source>
          <target state="translated">行动正在进行中</target>
        </trans-unit>
        <trans-unit id="db648ff618df972b87b0f378a6996fcda48575ee" translate="yes" xml:space="preserve">
          <source>Operation would block</source>
          <target state="translated">行动将阻止</target>
        </trans-unit>
        <trans-unit id="3f36c3736abf81762323dd82f7d22a61738746fb" translate="yes" xml:space="preserve">
          <source>Operations and built-in functions that have a Boolean result always return &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; for false and &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;True&lt;/code&gt; for true, unless otherwise stated. (Important exception: the Boolean operations &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;and&lt;/code&gt; always return one of their operands.)</source>
          <target state="translated">除非另有说明，否则具有布尔结果的操作和内置函数总是返回 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;False&lt;/code&gt; 表示false，返回 &lt;code&gt;1&lt;/code&gt; 或 &lt;code&gt;True&lt;/code&gt; 表示true。（重要的例外：布尔运算符 &lt;code&gt;or&lt;/code&gt; 和 &lt;code&gt;and&lt;/code&gt; 始终返回其操作数之一。）</target>
        </trans-unit>
        <trans-unit id="b0a2a652140b72b9707efca49f6096fb106713ee" translate="yes" xml:space="preserve">
          <source>Operations are used as methods. Since the DOM uses only &lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; parameters, the arguments are passed in normal order (from left to right). There are no optional arguments. &lt;code&gt;void&lt;/code&gt; operations return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">操作用作方法。由于DOM仅&lt;a href=&quot;https://docs.python.org/3.8/reference/expressions.html#in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt;参数中使用，因此参数以正常顺序（从左到右）传递。没有可选参数。 &lt;code&gt;void&lt;/code&gt; 操作返回 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d6b35cab74cd4bff853d83e0a100977302a8b95" translate="yes" xml:space="preserve">
          <source>Operations are used as methods. Since the DOM uses only &lt;a href=&quot;https://docs.python.org/3.9/reference/expressions.html#in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; parameters, the arguments are passed in normal order (from left to right). There are no optional arguments. &lt;code&gt;void&lt;/code&gt; operations return &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5842137c602e8b1e20079af1475196379c2bc7a2" translate="yes" xml:space="preserve">
          <source>Operations like &lt;code&gt;+=&lt;/code&gt; which involve a read and write are not atomic. So if, for instance, you want to atomically increment a shared value it is insufficient to just do</source>
          <target state="translated">像操作 &lt;code&gt;+=&lt;/code&gt; 其中涉及一个读写不是原子。因此，例如，如果您想原子地增加共享值，则仅做不到</target>
        </trans-unit>
        <trans-unit id="f419c43f2273d35c973397ffc8873fd0cff6d1f6" translate="yes" xml:space="preserve">
          <source>Operations which work with sequences (some of them with mappings too) include:</source>
          <target state="translated">与序列有关的操作(其中一些也有映射)包括:</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="c431496d10314a298eb196699644e449631b5f2f" translate="yes" xml:space="preserve">
          <source>Option Flags</source>
          <target state="translated">选项标志</target>
        </trans-unit>
        <trans-unit id="e495fe30fe845f1d5517bc35c9d0601fa416e0f7" translate="yes" xml:space="preserve">
          <source>Option for &lt;a href=&quot;#ssl.create_default_context&quot;&gt;&lt;code&gt;create_default_context()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt;&lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt;&lt;/a&gt;. This value indicates that the context may be used to authenticate Web clients (therefore, it will be used to create server-side sockets).</source>
          <target state="translated">选项&lt;a href=&quot;#ssl.create_default_context&quot;&gt; &lt;code&gt;create_default_context()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt; &lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt; &lt;/a&gt;。此值指示上下文可以用于认证Web客户端（因此，它将用于创建服务器端套接字）。</target>
        </trans-unit>
        <trans-unit id="0ed5f390cd43fec0c1a9f5e969163e9713365adc" translate="yes" xml:space="preserve">
          <source>Option for &lt;a href=&quot;#ssl.create_default_context&quot;&gt;&lt;code&gt;create_default_context()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt;&lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt;&lt;/a&gt;. This value indicates that the context may be used to authenticate Web servers (therefore, it will be used to create client-side sockets).</source>
          <target state="translated">选项&lt;a href=&quot;#ssl.create_default_context&quot;&gt; &lt;code&gt;create_default_context()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ssl.SSLContext.load_default_certs&quot;&gt; &lt;code&gt;SSLContext.load_default_certs()&lt;/code&gt; &lt;/a&gt;。此值指示上下文可以用于认证Web服务器（因此，它将用于创建客户端套接字）。</target>
        </trans-unit>
        <trans-unit id="1dc214003b5cc3f6b308d940b627561092a1f7c2" translate="yes" xml:space="preserve">
          <source>Option value syntax</source>
          <target state="translated">选项值语法</target>
        </trans-unit>
        <trans-unit id="0877ad74bf360dfde627563dd4aa4b01f6ce3129" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_encoder&lt;/em&gt; is a callable (i.e. function) which will perform the actual encoding of the audio data for transport. This callable takes one argument, which is the &lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt;&lt;code&gt;MIMEAudio&lt;/code&gt;&lt;/a&gt; instance. It should use &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;get_payload()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; to change the payload to encoded form. It should also add any &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; or other headers to the message object as necessary. The default encoding is base64. See the &lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt;&lt;code&gt;email.encoders&lt;/code&gt;&lt;/a&gt; module for a list of the built-in encoders.</source>
          <target state="translated">可选的&lt;em&gt;_encoder&lt;/em&gt;是可调用的（即函数），它将执行音频数据的实际编码以进行传输。此可调用对象采用一个参数，即&lt;a href=&quot;#email.mime.audio.MIMEAudio&quot;&gt; &lt;code&gt;MIMEAudio&lt;/code&gt; &lt;/a&gt;实例。它应该使用&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;get_payload()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; &lt;/a&gt;将有效负载更改为编码形式。它还应根据需要将任何&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;或其他标头添加到消息对象。默认编码为base64。有关内置编码器的列表，请参阅&lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt; &lt;code&gt;email.encoders&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="ea5df2800bbbbd80f815acd541243fa31a50750a" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_encoder&lt;/em&gt; is a callable (i.e. function) which will perform the actual encoding of the data for transport. This callable takes one argument, which is the &lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt;&lt;code&gt;MIMEApplication&lt;/code&gt;&lt;/a&gt; instance. It should use &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;get_payload()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; to change the payload to encoded form. It should also add any &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; or other headers to the message object as necessary. The default encoding is base64. See the &lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt;&lt;code&gt;email.encoders&lt;/code&gt;&lt;/a&gt; module for a list of the built-in encoders.</source>
          <target state="translated">可选的&lt;em&gt;_encoder&lt;/em&gt;是可调用的（即函数），它将对要传输的数据执行实际的编码。此可调用对象采用一个参数，即&lt;a href=&quot;#email.mime.application.MIMEApplication&quot;&gt; &lt;code&gt;MIMEApplication&lt;/code&gt; &lt;/a&gt;实例。它应该使用&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;get_payload()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; &lt;/a&gt;将有效负载更改为编码形式。它还应根据需要将任何&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;或其他标头添加到消息对象。默认编码为base64。有关内置编码器的列表，请参阅&lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt; &lt;code&gt;email.encoders&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="f423d4e8b5e1e91960dd208dab5452be79d71fb8" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_encoder&lt;/em&gt; is a callable (i.e. function) which will perform the actual encoding of the image data for transport. This callable takes one argument, which is the &lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt;&lt;code&gt;MIMEImage&lt;/code&gt;&lt;/a&gt; instance. It should use &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;get_payload()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt;&lt;code&gt;set_payload()&lt;/code&gt;&lt;/a&gt; to change the payload to encoded form. It should also add any &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; or other headers to the message object as necessary. The default encoding is base64. See the &lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt;&lt;code&gt;email.encoders&lt;/code&gt;&lt;/a&gt; module for a list of the built-in encoders.</source>
          <target state="translated">可选的&lt;em&gt;_encoder&lt;/em&gt;是可调用的（即函数），它将对图像数据进行实际编码以进行传输。此可调用对象采用一个参数，即&lt;a href=&quot;#email.mime.image.MIMEImage&quot;&gt; &lt;code&gt;MIMEImage&lt;/code&gt; &lt;/a&gt;实例。它应该使用&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;get_payload()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;email.compat32-message#email.message.Message.set_payload&quot;&gt; &lt;code&gt;set_payload()&lt;/code&gt; &lt;/a&gt;将有效负载更改为编码形式。它还应根据需要将任何&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;或其他标头添加到消息对象。默认编码为base64。有关内置编码器的列表，请参阅&lt;a href=&quot;email.encoders#module-email.encoders&quot;&gt; &lt;code&gt;email.encoders&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="d1640c671992d66aa1ab94530cbf0176f120aa8b" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_mangle_from_&lt;/em&gt; and &lt;em&gt;maxheaderlen&lt;/em&gt; are as with the &lt;a href=&quot;#email.generator.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; base class.</source>
          <target state="translated">可选的&lt;em&gt;_mangle_from_&lt;/em&gt;和&lt;em&gt;maxheaderlen&lt;/em&gt;与&lt;a href=&quot;#email.generator.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;基类相同。</target>
        </trans-unit>
        <trans-unit id="c135f5214b837e44f2f6460a17880339144023cb" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;_subtype&lt;/em&gt; sets the subtype of the message; it defaults to &lt;em&gt;rfc822&lt;/em&gt;.</source>
          <target state="translated">可选的&lt;em&gt;_subtype&lt;/em&gt;设置消息的子类型；它默认为&lt;em&gt;rfc822&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="923ac92596f5e0b048764c0544725cb7d8315bfb" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;altchars&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; of at least length 2 (additional characters are ignored) which specifies an alternative alphabet for the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; characters. This allows an application to e.g. generate URL or filesystem safe Base64 strings. The default is &lt;code&gt;None&lt;/code&gt;, for which the standard Base64 alphabet is used.</source>
          <target state="translated">可选的&lt;em&gt;altchar&lt;/em&gt;必须是类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;，且长度至少为2（忽略其他字符），该对象指定 &lt;code&gt;+&lt;/code&gt; 和 &lt;code&gt;/&lt;/code&gt; 字符的替代字母。这允许应用程序例如生成URL或文件系统安全的Base64字符串。默认值为 &lt;code&gt;None&lt;/code&gt; ，使用默认的Base64字母。</target>
        </trans-unit>
        <trans-unit id="76bee86fbcac7650eb452298a6aece94136101d1" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;altchars&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or ASCII string of at least length 2 (additional characters are ignored) which specifies the alternative alphabet used instead of the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; characters.</source>
          <target state="translated">可选的&lt;em&gt;altchar&lt;/em&gt;必须是类似&lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;字节的对象&lt;/a&gt;或长度至少为2的ASCII字符串（忽略其他字符），该字符串指定使用替代字母代替 &lt;code&gt;+&lt;/code&gt; 和 &lt;code&gt;/&lt;/code&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="4fabfb6d04a5ebe03ff438990cb3d85dcdc7ef20" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;altchars&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; of at least length 2 (additional characters are ignored) which specifies an alternative alphabet for the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; characters. This allows an application to e.g. generate URL or filesystem safe Base64 strings. The default is &lt;code&gt;None&lt;/code&gt;, for which the standard Base64 alphabet is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ced3e3b797c1fa90962aca8b5c19deaa514379" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;altchars&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.9/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or ASCII string of at least length 2 (additional characters are ignored) which specifies the alternative alphabet used instead of the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt; characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4b9921d192cd1a45a6adc8e11889092e96883c" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;boundary&lt;/em&gt; is the multipart boundary string. When &lt;code&gt;None&lt;/code&gt; (the default), the boundary is calculated when needed (for example, when the message is serialized).</source>
          <target state="translated">可选&lt;em&gt;边界&lt;/em&gt;是多部分边界字符串。如果为 &lt;code&gt;None&lt;/code&gt; （默认），则在需要时（例如，消息序列化时）计算边界。</target>
        </trans-unit>
        <trans-unit id="83df4bdb171cf95d87daaeffb55e269018e15e7e" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;casefold&lt;/em&gt; is a flag specifying whether a lowercase alphabet is acceptable as input. For security purposes, the default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">可选的&lt;em&gt;casefold&lt;/em&gt;是一个标志，用于指定是否接受小写字母作为输入。为了安全起见，默认值为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3b940d26a790e7ff0f6bc05a182d4d5e74c6dad" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;charset&lt;/em&gt; is the character set that will be used in the &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; encoding of the &lt;code&gt;realname&lt;/code&gt; if the &lt;code&gt;realname&lt;/code&gt; contains non-ASCII characters. Can be an instance of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;utf-8&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;realname&lt;/code&gt; 包含非ASCII字符，则可选&lt;em&gt;字符集&lt;/em&gt;是将在 &lt;code&gt;realname&lt;/code&gt; 的&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;编码中使用的字符集。可以是&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;的实例。默认为 &lt;code&gt;utf-8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63ec82a1964cf6c1f24661387a4dc0633c206b42" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;charset&lt;/em&gt; serves two purposes: it has the same meaning as the &lt;em&gt;charset&lt;/em&gt; argument to the &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method. It also sets the default character set for all subsequent &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; calls that omit the &lt;em&gt;charset&lt;/em&gt; argument. If &lt;em&gt;charset&lt;/em&gt; is not provided in the constructor (the default), the &lt;code&gt;us-ascii&lt;/code&gt; character set is used both as &lt;em&gt;s&lt;/em&gt;&amp;rsquo;s initial charset and as the default for subsequent &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">可选&lt;em&gt;字符集有&lt;/em&gt;两个用途：它与&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;方法的&lt;em&gt;字符集&lt;/em&gt;参数含义相同。它还为所有省略&lt;em&gt;charset&lt;/em&gt;参数的所有后续&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;调用设置默认字符集。如果构造函数中未提供&lt;em&gt;字符集&lt;/em&gt;（默认设置），则 &lt;code&gt;us-ascii&lt;/code&gt; 字符集既用作&lt;em&gt;s&lt;/em&gt;的初始字符集，又用作后续&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;调用的默认字符集。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="642b9453af4c0269ab0ad7d0d8bcb29305105881" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;charset&lt;/em&gt;, if given, should be a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance (see &lt;a href=&quot;email.charset#module-email.charset&quot;&gt;&lt;code&gt;email.charset&lt;/code&gt;&lt;/a&gt;) or the name of a character set, which will be converted to a &lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; instance. A value of &lt;code&gt;None&lt;/code&gt; (the default) means that the &lt;em&gt;charset&lt;/em&gt; given in the constructor is used.</source>
          <target state="translated">可选的&lt;em&gt;charset&lt;/em&gt;（如果给出）应该是&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;实例（请参阅&lt;a href=&quot;email.charset#module-email.charset&quot;&gt; &lt;code&gt;email.charset&lt;/code&gt; &lt;/a&gt;）或字符集的名称，它将转换为&lt;a href=&quot;email.charset#email.charset.Charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;实例。的值 &lt;code&gt;None&lt;/code&gt; （缺省值）指该&lt;em&gt;字符集&lt;/em&gt;在给定的构造使用。</target>
        </trans-unit>
        <trans-unit id="3105978bd6f7423833b30c5cebf668aba1d75338" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;context&lt;/em&gt; parameter is an &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object; This is an alternative to using a keyfile and a certfile and if specified both &lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; should be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">可选的&lt;em&gt;上下文&lt;/em&gt;参数是&lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt; &lt;code&gt;ssl.SSLContext&lt;/code&gt; &lt;/a&gt;对象。这是使用密钥文件和certfile的替代方法，并且如果指定，&lt;em&gt;密钥文件&lt;/em&gt;和&lt;em&gt;certfile&lt;/em&gt;都应为 &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d99f38424b2c5ff22681c0c95a235051c8f5f6c" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;continuation_ws&lt;/em&gt; must be &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;-compliant folding whitespace, and is usually either a space or a hard tab character. This character will be prepended to continuation lines. &lt;em&gt;continuation_ws&lt;/em&gt; defaults to a single space character.</source>
          <target state="translated">可选的&lt;em&gt;continuation_ws&lt;/em&gt;必须是符合&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-9&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;的折叠空白，并且通常是空格或硬制表符。该字符将添加到续行之前。&lt;em&gt;continuationation_ws&lt;/em&gt;默认为单个空格字符。</target>
        </trans-unit>
        <trans-unit id="c67c2285f2ee3c267919b8e982d48c9f0e3fac16" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;decode&lt;/em&gt; is a flag indicating whether the payload should be decoded or not, according to the &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header. When &lt;code&gt;True&lt;/code&gt; and the message is not a multipart, the payload will be decoded if this header&amp;rsquo;s value is &lt;code&gt;quoted-printable&lt;/code&gt; or &lt;code&gt;base64&lt;/code&gt;. If some other encoding is used, or &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header is missing, the payload is returned as-is (undecoded). In all cases the returned value is binary data. If the message is a multipart and the &lt;em&gt;decode&lt;/em&gt; flag is &lt;code&gt;True&lt;/code&gt;, then &lt;code&gt;None&lt;/code&gt; is returned. If the payload is base64 and it was not perfectly formed (missing padding, characters outside the base64 alphabet), then an appropriate defect will be added to the message&amp;rsquo;s defect property (&lt;code&gt;InvalidBase64PaddingDefect&lt;/code&gt; or &lt;code&gt;InvalidBase64CharactersDefect&lt;/code&gt;, respectively).</source>
          <target state="translated">可选的&lt;em&gt;解码&lt;/em&gt;是一个标志，指示根据&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头是否对有效载荷进行解码。当 &lt;code&gt;True&lt;/code&gt; 且消息不是多部分消息时，如果此标头的值是 &lt;code&gt;quoted-printable&lt;/code&gt; 或 &lt;code&gt;base64&lt;/code&gt; ，则将对有效负载进行解码。如果使用其他某种编码，或者缺少&lt;em&gt;Content-Transfer-Encoding&lt;/em&gt;标头，则按原样（未&lt;em&gt;编码&lt;/em&gt;）返回有效载荷。在所有情况下，返回值都是二进制数据。如果消息是多部分，并且&lt;em&gt;解码&lt;/em&gt;标志为 &lt;code&gt;True&lt;/code&gt; ， &lt;code&gt;None&lt;/code&gt; 返回。如果有效载荷是base64且格式不完美（缺少填充，base64字母之外的字符），则将适当的缺陷添加到消息的缺陷属性（分别为 &lt;code&gt;InvalidBase64PaddingDefect&lt;/code&gt; 或 &lt;code&gt;InvalidBase64CharactersDefect&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="369dd5ecc7951cf49ed4b1356b49e703da098189" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;decode&lt;/em&gt; is passed through to &lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt;&lt;code&gt;Message.get_payload&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选的&lt;em&gt;解码&lt;/em&gt;传递到&lt;a href=&quot;email.compat32-message#email.message.Message.get_payload&quot;&gt; &lt;code&gt;Message.get_payload&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84972e509ca18de70cc29ad7afa6e0258541f329" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;errors&lt;/em&gt; is passed as the errors argument to the decode call if &lt;em&gt;s&lt;/em&gt; is a byte string.</source>
          <target state="translated">如果&lt;em&gt;s&lt;/em&gt;是字节字符串，则将可选&lt;em&gt;错误&lt;/em&gt;作为errors参数传递给解码调用。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cdfa3072d99360bc8281b6670d7022d51cad8c05" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;errors&lt;/em&gt; is passed straight through to the &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">可选&lt;em&gt;错误&lt;/em&gt;直接传递给&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="af5602daa1b8d69afae9c649f6b6721510f50598" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;failobj&lt;/em&gt; is the object to return if there is no &lt;em&gt;Content-Type&lt;/em&gt; header. Optional &lt;em&gt;header&lt;/em&gt; is the header to search instead of &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">如果没有&lt;em&gt;Content-Type&lt;/em&gt;标头，则可选的&lt;em&gt;failobj&lt;/em&gt;是要返回的对象。可选&lt;em&gt;标头&lt;/em&gt;是要搜索的标头，而不是&lt;em&gt;Content-Type&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c9958c82059fc6801aef502b2e8413f811d61fd" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;fp&lt;/em&gt; is a file-like object to print the output to. It must be suitable for Python&amp;rsquo;s &lt;a href=&quot;functions#print&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt; function. &lt;em&gt;level&lt;/em&gt; is used internally. &lt;em&gt;include_default&lt;/em&gt;, if true, prints the default type as well.</source>
          <target state="translated">可选的&lt;em&gt;fp&lt;/em&gt;是类似于文件的对象，用于将输出打印到该对象。它必须适合Python的&lt;a href=&quot;functions#print&quot;&gt; &lt;code&gt;print()&lt;/code&gt; &lt;/a&gt;函数。&lt;em&gt;级别&lt;/em&gt;在内部使用。&lt;em&gt;include_default&lt;/em&gt;，如果为true，则还打印默认类型。</target>
        </trans-unit>
        <trans-unit id="a8edc8339641cac835a5f65084c400648dd7bc38" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;header&lt;/em&gt; if given, specifies the message header to use instead of &lt;em&gt;Content-Type&lt;/em&gt;.</source>
          <target state="translated">如果提供了可选&lt;em&gt;标头&lt;/em&gt;，则指定要使用的消息标头，而不是&lt;em&gt;Content-Type&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="56ec783d1d1ef92af29b2b3bf0edfc7eeea59252" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;header&lt;/em&gt; specifies an alternative header to &lt;em&gt;Content-Type&lt;/em&gt;, and all parameters will be quoted as necessary unless optional &lt;em&gt;requote&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (the default is &lt;code&gt;True&lt;/code&gt;).</source>
          <target state="translated">Optional &lt;em&gt;标头&lt;/em&gt;指定&lt;em&gt;Content-Type&lt;/em&gt;的替代标头，除非可选的&lt;em&gt;requote&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; （默认值为 &lt;code&gt;True&lt;/code&gt; ），否则所有参数将根据需要使用引号引起来。</target>
        </trans-unit>
        <trans-unit id="d5523c1c7da4baa3419962027d50d39d8397401a" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;header_enc&lt;/em&gt; and &lt;em&gt;body_enc&lt;/em&gt; is either &lt;code&gt;Charset.QP&lt;/code&gt; for quoted-printable, &lt;code&gt;Charset.BASE64&lt;/code&gt; for base64 encoding, &lt;code&gt;Charset.SHORTEST&lt;/code&gt; for the shortest of quoted-printable or base64 encoding, or &lt;code&gt;None&lt;/code&gt; for no encoding. &lt;code&gt;SHORTEST&lt;/code&gt; is only valid for &lt;em&gt;header_enc&lt;/em&gt;. The default is &lt;code&gt;None&lt;/code&gt; for no encoding.</source>
          <target state="translated">可选的&lt;em&gt;header_enc&lt;/em&gt;和&lt;em&gt;body_enc&lt;/em&gt;是 &lt;code&gt;Charset.QP&lt;/code&gt; (用于带引号的可打印）， &lt;code&gt;Charset.BASE64&lt;/code&gt; (用于base64的编码）， &lt;code&gt;Charset.SHORTEST&lt;/code&gt; (用于最短的带引号的可打印或base64编码），或 &lt;code&gt;None&lt;/code&gt; （无）。 &lt;code&gt;SHORTEST&lt;/code&gt; 仅对&lt;em&gt;header_enc&lt;/em&gt;有效。默认为 &lt;code&gt;None&lt;/code&gt; ，表示不进行编码。</target>
        </trans-unit>
        <trans-unit id="348f37b616413a59290dc4137576e659b6b66805" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;headersonly&lt;/em&gt; is a flag specifying whether to stop parsing after reading the headers or not. The default is &lt;code&gt;False&lt;/code&gt;, meaning it parses the entire contents of the file.</source>
          <target state="translated">可选的&lt;em&gt;headersonly&lt;/em&gt;是一个标志，用于指定是否在读取标题后停止解析。默认值为 &lt;code&gt;False&lt;/code&gt; ，这意味着它将解析文件的全部内容。</target>
        </trans-unit>
        <trans-unit id="70ab572101a30eef47fe16af46c39372bde2e339" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;headersonly&lt;/em&gt; is as with the &lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">可选的&lt;em&gt;headersonly&lt;/em&gt;与&lt;a href=&quot;#email.parser.BytesParser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;方法相同。</target>
        </trans-unit>
        <trans-unit id="b729b7533028c3755db136b3ae706911b578a369" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;headersonly&lt;/em&gt; is as with the &lt;a href=&quot;#email.parser.Parser.parse&quot;&gt;&lt;code&gt;parse()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">可选的&lt;em&gt;headersonly&lt;/em&gt;与&lt;a href=&quot;#email.parser.Parser.parse&quot;&gt; &lt;code&gt;parse()&lt;/code&gt; &lt;/a&gt;方法相同。</target>
        </trans-unit>
        <trans-unit id="1300eb907c8a0950cd615120af8b9e9015e21490" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;input_charset&lt;/em&gt; is as described below; it is always coerced to lower case. After being alias normalized it is also used as a lookup into the registry of character sets to find out the header encoding, body encoding, and output conversion codec to be used for the character set. For example, if &lt;em&gt;input_charset&lt;/em&gt; is &lt;code&gt;iso-8859-1&lt;/code&gt;, then headers and bodies will be encoded using quoted-printable and no output conversion codec is necessary. If &lt;em&gt;input_charset&lt;/em&gt; is &lt;code&gt;euc-jp&lt;/code&gt;, then headers will be encoded with base64, bodies will not be encoded, but output text will be converted from the &lt;code&gt;euc-jp&lt;/code&gt; character set to the &lt;code&gt;iso-2022-jp&lt;/code&gt; character set.</source>
          <target state="translated">可选的&lt;em&gt;input_charset&lt;/em&gt;如下所述；它总是被强制为小写。别名标准化后，它还用作对字符集注册表的查找，以查找要用于字符集的标头编码，主体编码和输出转换编解码器。例如，如果&lt;em&gt;input_charset&lt;/em&gt;是 &lt;code&gt;iso-8859-1&lt;/code&gt; ，那么标题和正文将使用quoted-printable进行编码，并且不需要输出转换编解码器。如果&lt;em&gt;input_charset&lt;/em&gt;是 &lt;code&gt;euc-jp&lt;/code&gt; ，则标头将使用base64进行编码，主体将不进行编码，但是输出文本将从 &lt;code&gt;euc-jp&lt;/code&gt; 字符集转换为 &lt;code&gt;iso-2022-jp&lt;/code&gt; 字符集。</target>
        </trans-unit>
        <trans-unit id="7f0ac5d6eacc6d8910fdc79f834598dba5f7ecc0" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;localtime&lt;/em&gt; is a flag that when &lt;code&gt;True&lt;/code&gt;, interprets &lt;em&gt;timeval&lt;/em&gt;, and returns a date relative to the local timezone instead of UTC, properly taking daylight savings time into account. The default is &lt;code&gt;False&lt;/code&gt; meaning UTC is used.</source>
          <target state="translated">可选的&lt;em&gt;localtime&lt;/em&gt;是一个标志，当 &lt;code&gt;True&lt;/code&gt; 时，解释&lt;em&gt;timeval&lt;/em&gt;，并返回相对于本地时区而不是UTC的日期，并适当考虑了夏时制。默认值为 &lt;code&gt;False&lt;/code&gt; ,表示使用UTC。</target>
        </trans-unit>
        <trans-unit id="081534f96775eff49e5f20cd9241c5dc8464300b" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;output_charset&lt;/em&gt; is the character set that the output should be in. Conversions will proceed from input charset, to Unicode, to the output charset when the method &lt;code&gt;Charset.convert()&lt;/code&gt; is called. The default is to output in the same character set as the input.</source>
          <target state="translated">可选的&lt;em&gt;output_charset&lt;/em&gt;是输出应位于的字符集。调用 &lt;code&gt;Charset.convert()&lt;/code&gt; 方法时，转换将从输入字符集到Unicode，再到输出字符集。默认设置是输出与输入相同的字符集。</target>
        </trans-unit>
        <trans-unit id="27a289728023caa13d781ff4f3845ee08d743ebe" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;policy&lt;/em&gt; argument defaults to &lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt;&lt;code&gt;compat32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选&lt;em&gt;策略&lt;/em&gt;参数默认为&lt;a href=&quot;email.policy#email.policy.Compat32&quot;&gt; &lt;code&gt;compat32&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9de5adc35af35a2d0dbdc98b0b7dccae205e947" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;s&lt;/em&gt; is the initial header value. If &lt;code&gt;None&lt;/code&gt; (the default), the initial header value is not set. You can later append to the header with &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method calls. &lt;em&gt;s&lt;/em&gt; may be an instance of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, but see the &lt;a href=&quot;#email.header.Header.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; documentation for semantics.</source>
          <target state="translated">可选&lt;em&gt;s&lt;/em&gt;是初始标头值。如果为 &lt;code&gt;None&lt;/code&gt; （默认），则不设置初始标头值。您稍后可以使用&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;方法调用将其追加到标头。&lt;em&gt;s&lt;/em&gt;可以是&lt;a href=&quot;stdtypes#bytes&quot;&gt; &lt;code&gt;bytes&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;stdtypes#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;的实例，但是请参见&lt;a href=&quot;#email.header.Header.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;文档以获取语义。</target>
        </trans-unit>
        <trans-unit id="4a06aa49f277b03a309f72dd81f7730544395c46" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;splitchars&lt;/em&gt; is a string containing characters which should be given extra weight by the splitting algorithm during normal header wrapping. This is in very rough support of &lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;&amp;rsquo;s &amp;lsquo;higher level syntactic breaks&amp;rsquo;: split points preceded by a splitchar are preferred during line splitting, with the characters preferred in the order in which they appear in the string. Space and tab may be included in the string to indicate whether preference should be given to one over the other as a split point when other split chars do not appear in the line being split. Splitchars does not affect &lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt; encoded lines.</source>
          <target state="translated">可选的&lt;em&gt;splitchars&lt;/em&gt;是一个字符串，其中包含一些字符，在正常的标头换行过程中，拆分算法应为其赋予额外的权重。这是对&lt;a href=&quot;https://tools.ietf.org/html/rfc2822.html&quot; id=&quot;index-12&quot;&gt;&lt;strong&gt;RFC 2822&lt;/strong&gt;&lt;/a&gt;的&amp;ldquo;高级句法中断&amp;rdquo;的非常粗略的支持：在行分割期间，首选在分割点后加splitchar的分割点，并首选字符在字符串中出现的顺序。字符串中可以包含空格和制表符，以指示当其他拆分字符未出现在要拆分的行中时，是否应优先选择另一个作为拆分点。 Splitchars不会影响&lt;a href=&quot;https://tools.ietf.org/html/rfc2047.html&quot; id=&quot;index-13&quot;&gt;&lt;strong&gt;RFC 2047&lt;/strong&gt;&lt;/a&gt;编码的行。</target>
        </trans-unit>
        <trans-unit id="a3f21b8e8630f6eb8e4be7786fc506fc0f12e579" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;timeval&lt;/em&gt; if given is a floating point time value as accepted by &lt;a href=&quot;time#time.gmtime&quot;&gt;&lt;code&gt;time.gmtime()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;time#time.localtime&quot;&gt;&lt;code&gt;time.localtime()&lt;/code&gt;&lt;/a&gt;, otherwise the current time is used.</source>
          <target state="translated">如果给定的可选&lt;em&gt;timeval&lt;/em&gt;是&lt;a href=&quot;time#time.gmtime&quot;&gt; &lt;code&gt;time.gmtime()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;time#time.localtime&quot;&gt; &lt;code&gt;time.localtime()&lt;/code&gt; &lt;/a&gt;接受的浮点时间值，则使用当前时间。</target>
        </trans-unit>
        <trans-unit id="d94e2bee88984200593b6f6da3352d09ebd1bdf9" translate="yes" xml:space="preserve">
          <source>Optional &lt;em&gt;usegmt&lt;/em&gt; is a flag that when &lt;code&gt;True&lt;/code&gt;, outputs a date string with the timezone as an ascii string &lt;code&gt;GMT&lt;/code&gt;, rather than a numeric &lt;code&gt;-0000&lt;/code&gt;. This is needed for some protocols (such as HTTP). This only applies when &lt;em&gt;localtime&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;. The default is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">可选的&lt;em&gt;usegmt&lt;/em&gt;是一个标志，当为 &lt;code&gt;True&lt;/code&gt; 时，输出带有时区的日期字符串作为ascii字符串 &lt;code&gt;GMT&lt;/code&gt; ，而不是数字 &lt;code&gt;-0000&lt;/code&gt; 。对于某些协议（例如HTTP），这是必需的。仅当&lt;em&gt;localtime&lt;/em&gt;为 &lt;code&gt;False&lt;/code&gt; 时适用。默认值为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f1580e50d2eddf54a3ae07be51a03a3b611fbc6" translate="yes" xml:space="preserve">
          <source>Optional abstract method which returns a &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; containing metadata about the specified path. Supported dictionary keys are:</source>
          <target state="translated">可选的抽象方法，该方法返回包含有关指定路径的元数据的&lt;a href=&quot;stdtypes#dict&quot;&gt; &lt;code&gt;dict&lt;/code&gt; &lt;/a&gt;。支持的字典键是：</target>
        </trans-unit>
        <trans-unit id="95081d9d4e8221143e59084ea58753f21593f36b" translate="yes" xml:space="preserve">
          <source>Optional abstract method which returns the modification time for the specified path.</source>
          <target state="translated">可选的抽象方法,返回指定路径的修改时间。</target>
        </trans-unit>
        <trans-unit id="89231b5583c81ea0c69000746832d731cd8bae53" translate="yes" xml:space="preserve">
          <source>Optional abstract method which writes the specified bytes to a file path. Any intermediate directories which do not exist are to be created automatically.</source>
          <target state="translated">可选的抽象方法,将指定的字节写入文件路径。任何不存在的中间目录将被自动创建。</target>
        </trans-unit>
        <trans-unit id="44f898292a2dcbd773017d0c19c497a57f45394d" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;compileflags&lt;/em&gt; gives the set of flags that should be used by the Python compiler when running the examples. By default, or if &lt;code&gt;None&lt;/code&gt;, flags are deduced corresponding to the set of future features found in &lt;em&gt;globs&lt;/em&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;compileflags&lt;/em&gt;提供了运行示例时Python编译器应使用的标志集。默认情况下，如果为 &lt;code&gt;None&lt;/code&gt; ，则推导对应于&lt;em&gt;globs中&lt;/em&gt;发现的将来特征集的标志。</target>
        </trans-unit>
        <trans-unit id="a1d7c5227339a3dd1d8d5e5070885d664aae3a21" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;cutoff&lt;/em&gt; (default &lt;code&gt;0.6&lt;/code&gt;) is a float in the range [0, 1]. Possibilities that don&amp;rsquo;t score at least that similar to &lt;em&gt;word&lt;/em&gt; are ignored.</source>
          <target state="translated">可选参数&lt;em&gt;cutoff&lt;/em&gt;（默认值为 &lt;code&gt;0.6&lt;/code&gt; ）是[0，1]范围内的浮点数。得分至少不与&lt;em&gt;单词&lt;/em&gt;相似的可能性将被忽略。</target>
        </trans-unit>
        <trans-unit id="a241b6f1ed98aec382909620ac3173fbadb0aac1" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;encoding&lt;/em&gt; specifies an encoding that should be used to convert the file to unicode.</source>
          <target state="translated">可选的参数&lt;em&gt;encoding&lt;/em&gt;指定应用于将文件转换为unicode的编码。</target>
        </trans-unit>
        <trans-unit id="32822bcfb01fea87cd439dcc50837e241cd10492" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;exclude_empty&lt;/em&gt; defaults to false. If true, objects for which no doctests are found are excluded from consideration. The default is a backward compatibility hack, so that code still using &lt;code&gt;doctest.master.summarize()&lt;/code&gt; in conjunction with &lt;a href=&quot;#doctest.testmod&quot;&gt;&lt;code&gt;testmod()&lt;/code&gt;&lt;/a&gt; continues to get output for objects with no tests. The &lt;em&gt;exclude_empty&lt;/em&gt; argument to the newer &lt;a href=&quot;#doctest.DocTestFinder&quot;&gt;&lt;code&gt;DocTestFinder&lt;/code&gt;&lt;/a&gt; constructor defaults to true.</source>
          <target state="translated">可选参数&lt;em&gt;exclude_empty&lt;/em&gt;默认为false。如果为true，则不考虑未找到文档测试的对象。默认设置是向后兼容hack，因此仍将 &lt;code&gt;doctest.master.summarize()&lt;/code&gt; 与&lt;a href=&quot;#doctest.testmod&quot;&gt; &lt;code&gt;testmod()&lt;/code&gt; &lt;/a&gt;结合使用的代码将继续为没有测试的对象获取输出。较新的&lt;a href=&quot;#doctest.DocTestFinder&quot;&gt; &lt;code&gt;DocTestFinder&lt;/code&gt; &lt;/a&gt;构造函数的&lt;em&gt;exclude_empty&lt;/em&gt;参数默认为true。</target>
        </trans-unit>
        <trans-unit id="c56059e44a1695148c4922ca4f4a049c77eff06a" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;extraglobs&lt;/em&gt; gives a dict merged into the globals used to execute examples. This works like &lt;a href=&quot;stdtypes#dict.update&quot;&gt;&lt;code&gt;dict.update()&lt;/code&gt;&lt;/a&gt;: if &lt;em&gt;globs&lt;/em&gt; and &lt;em&gt;extraglobs&lt;/em&gt; have a common key, the associated value in &lt;em&gt;extraglobs&lt;/em&gt; appears in the combined dict. By default, or if &lt;code&gt;None&lt;/code&gt;, no extra globals are used. This is an advanced feature that allows parameterization of doctests. For example, a doctest can be written for a base class, using a generic name for the class, then reused to test any number of subclasses by passing an &lt;em&gt;extraglobs&lt;/em&gt; dict mapping the generic name to the subclass to be tested.</source>
          <target state="translated">可选参数&lt;em&gt;extraglobs&lt;/em&gt;给出了一个dict，该dict被合并到用于执行示例的全局变量中。这就像&lt;a href=&quot;stdtypes#dict.update&quot;&gt; &lt;code&gt;dict.update()&lt;/code&gt; &lt;/a&gt;：如果&lt;em&gt;水珠&lt;/em&gt;和&lt;em&gt;extraglobs&lt;/em&gt;有一个共同的关键，在相关值&lt;em&gt;extraglobs&lt;/em&gt;出现在合并字典。默认情况下，如果为 &lt;code&gt;None&lt;/code&gt; ，则不使用额外的全局变量。这是一项高级功能，允许对doctests进行参数化。例如，可以使用基类的通用名称为基类编写doctest，然后通过传递将通用名称映射到要测试的子类的&lt;em&gt;Extraglob&lt;/em&gt; dict 来重用以测试任意数量的子类。</target>
        </trans-unit>
        <trans-unit id="7fba34650a7fe8672d07c230f7d0e87f1c888f71" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;extraglobs&lt;/em&gt; specifies an extra set of global variables, which is merged into &lt;em&gt;globs&lt;/em&gt;. By default, no extra globals are used.</source>
          <target state="translated">可选参数&lt;em&gt;extraglobs&lt;/em&gt;指定了一组额外的全局变量，这些变量合并到&lt;em&gt;globs中&lt;/em&gt;。默认情况下，不使用任何额外的全局变量。</target>
        </trans-unit>
        <trans-unit id="47e27778c61b07e6d1aab3d14114ebc81c4fa2f2" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;globs&lt;/em&gt; gives a dict to be used as the globals when executing examples. A new shallow copy of this dict is created for the doctest, so its examples start with a clean slate. By default, or if &lt;code&gt;None&lt;/code&gt;, a new empty dict is used.</source>
          <target state="translated">可选参数&lt;em&gt;globs&lt;/em&gt;提供了一个在执行示例时用作全局变量的字典。将为doctest创建此dict的新浅表副本，因此其示例以整洁的形式开始。默认情况下，如果为 &lt;code&gt;None&lt;/code&gt; ，则使用新的空字典。</target>
        </trans-unit>
        <trans-unit id="e45842c5895e5ae4432fbb87c16f7cb0eeaec604" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;globs&lt;/em&gt; gives a dictionary to use as both local and global execution context. If not specified, or &lt;code&gt;None&lt;/code&gt;, an empty dictionary is used. If specified, a shallow copy of the dictionary is used.</source>
          <target state="translated">可选参数&lt;em&gt;globs&lt;/em&gt;提供了一个字典，可用作本地和全局执行上下文。如果未指定或为 &lt;code&gt;None&lt;/code&gt; ，则使用空字典。如果指定，将使用字典的浅表副本。</target>
        </trans-unit>
        <trans-unit id="ac2368691c9de6fd84091afdc4f7a61c1910faf1" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;globs&lt;/em&gt; is a dictionary containing the initial global variables for the tests. A new copy of this dictionary is created for each test. By default, &lt;em&gt;globs&lt;/em&gt; is a new empty dictionary.</source>
          <target state="translated">可选参数&lt;em&gt;globs&lt;/em&gt;是一个字典，其中包含测试的初始全局变量。将为每个测试创建此词典的新副本。默认情况下，&lt;em&gt;globs&lt;/em&gt;是一个新的空字典。</target>
        </trans-unit>
        <trans-unit id="fb750e9897e2507830eb1c28fae23ef3fcb29129" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;interval&lt;/em&gt; represents the class interval, and defaults to 1. Changing the class interval naturally will change the interpolation:</source>
          <target state="translated">可选的参数&lt;em&gt;interval&lt;/em&gt;表示类间隔，默认为1。自然更改类间隔将更改插值：</target>
        </trans-unit>
        <trans-unit id="3aac0b0b4936e97b6b254322e753031731854457" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;isjunk&lt;/em&gt; must be &lt;code&gt;None&lt;/code&gt; (the default) or a one-argument function that takes a sequence element and returns true if and only if the element is &amp;ldquo;junk&amp;rdquo; and should be ignored. Passing &lt;code&gt;None&lt;/code&gt; for &lt;em&gt;isjunk&lt;/em&gt; is equivalent to passing &lt;code&gt;lambda x: False&lt;/code&gt;; in other words, no elements are ignored. For example, pass:</source>
          <target state="translated">可选参数&lt;em&gt;isjunk&lt;/em&gt;必须为 &lt;code&gt;None&lt;/code&gt; （默认值），或者是一个带序列元素的单参数函数，当且仅当该元素为&amp;ldquo; junk&amp;rdquo;且应忽略时才返回true。为&lt;em&gt;isjunk&lt;/em&gt;传递 &lt;code&gt;None&lt;/code&gt; 等同于传递 &lt;code&gt;lambda x: False&lt;/code&gt; ; 换句话说，不会忽略任何元素。例如，传递：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74aea2ea98253e841261cf8043788a6866f1d3cf" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;module&lt;/em&gt; provides the module to be tested. It can be a module object or a (possibly dotted) module name. If not specified, the module calling this function is used.</source>
          <target state="translated">可选参数&lt;em&gt;模块&lt;/em&gt;提供要测试的模块。它可以是模块对象，也可以是（可能是虚线）模块名称。如果未指定，则使用调用此函数的模块。</target>
        </trans-unit>
        <trans-unit id="88fe4782e94348e9fdc401064c2ad56c8058b300" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;module_relative&lt;/em&gt; specifies how the filename should be interpreted:</source>
          <target state="translated">可选参数&lt;em&gt;module_relative&lt;/em&gt;指定应如何解释文件名：</target>
        </trans-unit>
        <trans-unit id="22ad18924a8191c36d6c5c768f2a1805167cb09a" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;module_relative&lt;/em&gt; specifies how the filenames in &lt;em&gt;paths&lt;/em&gt; should be interpreted:</source>
          <target state="translated">可选参数&lt;em&gt;module_relative&lt;/em&gt;指定应如何解释&lt;em&gt;路径中&lt;/em&gt;的文件名：</target>
        </trans-unit>
        <trans-unit id="c683e99d27fef7549d8e40a7457b3d344329fce8" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;em&gt;n&lt;/em&gt; (default &lt;code&gt;3&lt;/code&gt;) is the maximum number of close matches to return; &lt;em&gt;n&lt;/em&gt; must be greater than &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">可选参数&lt;em&gt;n&lt;/em&gt;（默认值为 &lt;code&gt;3&lt;/code&gt; ）是要返回的最大匹配数；&lt;em&gt;n&lt;/em&gt;必须大于 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
