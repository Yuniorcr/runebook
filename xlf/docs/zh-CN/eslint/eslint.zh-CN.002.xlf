<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="eslint">
    <body>
      <group id="eslint">
        <trans-unit id="c7d2155ac722addd7b831828181dec9624fb266f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt; or &lt;code&gt;commonjs&lt;/code&gt;&lt;a href=&quot;../user-guide/configuring#specifying-environments&quot;&gt;environments&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;node&lt;/code&gt; 或 &lt;code&gt;commonjs&lt;/code&gt; &lt;a href=&quot;../user-guide/configuring#specifying-environments&quot;&gt;环境&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a07b9025274fa2a033cbaaa5f69bb41ee5298f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodeType&lt;/code&gt; - the node or token type that was reported with the problem.</source>
          <target state="translated">&lt;code&gt;nodeType&lt;/code&gt; -与问题一起报告的节点或令牌类型。</target>
        </trans-unit>
        <trans-unit id="d44be12fed8fe4c7cdf7e5e2f4471a6555a7bc6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node_modules/&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;node_modules/&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="384f46cf64cff9e315b941696d4164896822a9be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; - do not check arguments.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; -不检查参数。</target>
        </trans-unit>
        <trans-unit id="b090ad91390c1df68b5f72575cec6e341afcc480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; - do not check error objects. This is the default setting.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; -不检查错误对象。这是默认设置。</target>
        </trans-unit>
        <trans-unit id="edf95455a983a2b97d5a9423077a46ed2e047538" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; - import module without exported bindings.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; -导入模块，不导出绑定。</target>
        </trans-unit>
        <trans-unit id="b78f70dc90333999fb966a4a706d4b0c96fba7c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; = import module without exported bindings.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; =不带导出绑定的导入模块。</target>
        </trans-unit>
        <trans-unit id="e64fb5321925e14b22452de710bc2de3275fe99f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nonwords&lt;/code&gt; - applies to unary operators such as: &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;, &lt;code&gt;++&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;!!&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;nonwords&lt;/code&gt; -适用于一元运算符，如： &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;--&lt;/code&gt; ， &lt;code&gt;++&lt;/code&gt; ， &lt;code&gt;!&lt;/code&gt; ， &lt;code&gt;!!&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="765880a399ab6f02e04b6c0d3debfd72a2e2cd4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;npm run test:cli&lt;/code&gt; is an alias of the Mocha cli in &lt;code&gt;./node_modules/.bin/mocha&lt;/code&gt;. &lt;a href=&quot;https://mochajs.org/#command-line-usage&quot;&gt;Options&lt;/a&gt; are available to be provided to help to better control the test to run.</source>
          <target state="translated">&lt;code&gt;npm run test:cli&lt;/code&gt; 是 &lt;code&gt;./node_modules/.bin/mocha&lt;/code&gt; 中 Mocha cli的别名。&lt;a href=&quot;https://mochajs.org/#command-line-usage&quot;&gt;提供的选项&lt;/a&gt;可帮助更好地控制测试的运行。</target>
        </trans-unit>
        <trans-unit id="a8873b6f96c7780858e869c9b7d9e5ca536c3736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectLiteralComputedProperties&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-computed-property-names&quot;&gt;computed object literal property names&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;objectLiteralComputedProperties&lt;/code&gt; -启用&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-computed-property-names&quot;&gt;计算对象文字属性名称&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c073dee9bb2bb831da6b0239d1d4997ff4bdd561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectLiteralDuplicateProperties&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-duplicate-object-literal-properties&quot;&gt;duplicate object literal properties&lt;/a&gt; in strict mode</source>
          <target state="translated">&lt;code&gt;objectLiteralDuplicateProperties&lt;/code&gt; -在严格模式下启用&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-duplicate-object-literal-properties&quot;&gt;重复的对象文字属性&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f8a75cc5423aa46591bea3ace7f2872c2417d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectLiteralShorthandMethods&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-method-initializer-shorthand&quot;&gt;object literal shorthand methods&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;objectLiteralShorthandMethods&lt;/code&gt; -启用&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-method-initializer-shorthand&quot;&gt;对象文字速记方法&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e695be0dd3d7735f420ad57736da2ee2cce8ad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectLiteralShorthandProperties&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-property-initializer-shorthand&quot;&gt;object literal shorthand properties&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;objectLiteralShorthandProperties&lt;/code&gt; -启用&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-property-initializer-shorthand&quot;&gt;对象文字速记属​​性&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4d20dd68438d09312041171ff8ab4750fa31cc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objects&lt;/code&gt; is for object literals and object patterns of destructuring. (e.g. &lt;code&gt;let {a,} = {a: 1};&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;objects&lt;/code&gt; 用于对象文字和对象模式的分解。（例如， &lt;code&gt;let {a,} = {a: 1};&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="07c69ddb32ebf1cbf36659f8f44586caaff53914" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectsInArrays&lt;/code&gt; sets the spacings between the curly braces and square brackets of object literals that are the first or last element in an array.</source>
          <target state="translated">&lt;code&gt;objectsInArrays&lt;/code&gt; 设置对象常量的大括号和方括号之间的间距，这些对象常量是数组中的第一个或最后一个元素。</target>
        </trans-unit>
        <trans-unit id="ce68e0b0c998b793c65ca22e5a473ec8ac9ff112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectsInObjects&lt;/code&gt; sets the spacing between the curly brace of an object literal that is the last element in an object and the curly brace of the containing object.</source>
          <target state="translated">&lt;code&gt;objectsInObjects&lt;/code&gt; 设置作为对象中最后一个元素的对象文字的花括号与包含对象的花括号之间的间距。</target>
        </trans-unit>
        <trans-unit id="2de0f458dbd19aff17f068e875602abd4e80b48f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;octalLiterals&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-octal-and-binary-literals&quot;&gt;octal literals&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;octalLiterals&lt;/code&gt; -启用&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-octal-and-binary-literals&quot;&gt;八进制文字&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fb7c667bb1b38e1b80c46eca65068eceefb9ef6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.allowInlineConfig&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.allowInlineConfig&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e23e5a4fdf6ef6798ecc9fc8657da0f084d12940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.baseConfig&lt;/code&gt; (&lt;code&gt;ConfigData | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.baseConfig&lt;/code&gt; （ &lt;code&gt;ConfigData | null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ccc5a9b6d45fd0fefaadfcc2537c6cc4593337ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.cache&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.cache&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="86a2f54aad0168d57705de1cd30e38ecb8232f73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.cacheLocation&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.cacheLocation&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="eebf4a42d17fbf7c8c352d57fe143c8f15f7853d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.cwd&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.cwd&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7ef25eaaba1b54180e9f6cd76cbe7e32e4efa9b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.errorOnUnmatchedPattern&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.errorOnUnmatchedPattern&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1ead31ee810459d2ed1d3eb5277d567b2d10c8df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.extensions&lt;/code&gt; (&lt;code&gt;string[] | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.extensions&lt;/code&gt; （ &lt;code&gt;string[] | null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6328ee48bb61b008a603dcee99fcec0d73a09b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.filePath&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.filePath&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="bc222f360b00c900c6a5fe4c62e7a72ca1383d7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.fix&lt;/code&gt; (&lt;code&gt;boolean | (message: LintMessage) =&amp;gt; boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.fix&lt;/code&gt; （ &lt;code&gt;boolean | (message: LintMessage) =&amp;gt; boolean&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8de54b2afaab07cc12a45d0bbead4cedc67202f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.fixTypes&lt;/code&gt; (&lt;code&gt;(&quot;problem&quot; | &quot;suggestion&quot; | &quot;layout&quot;)[] | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.fixTypes&lt;/code&gt; （ &lt;code&gt;(&quot;problem&quot; | &quot;suggestion&quot; | &quot;layout&quot;)[] | null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2444c2c65fd7e1b186d176cc6d7983f9c05afe46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.globInputPaths&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.globInputPaths&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7e33d5c782388edde327f82fa96f45c28dda35a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.ignore&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.ignore&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8daad7032846271f0bd78c7bc21d94bf72b12828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.ignorePath&lt;/code&gt; (&lt;code&gt;string | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.ignorePath&lt;/code&gt; （ &lt;code&gt;string | null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3a03057d59997f2d91e7723ea9e8144c9708659d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.overrideConfig&lt;/code&gt; (&lt;code&gt;ConfigData | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.overrideConfig&lt;/code&gt; （ &lt;code&gt;ConfigData | null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9c293007a3b0029d05e7a017db4ecc5205eb33c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.overrideConfigFile&lt;/code&gt; (&lt;code&gt;string | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.overrideConfigFile&lt;/code&gt; （ &lt;code&gt;string | null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c485f9477a4d2c0355b033fcec13727b78e98a1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.plugins&lt;/code&gt; (&lt;code&gt;Record&amp;lt;string, Plugin&amp;gt; | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.plugins&lt;/code&gt; （ &lt;code&gt;Record&amp;lt;string, Plugin&amp;gt; | null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d6fa4ea1d951ef00153475188de16da6846af5fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.reportUnusedDisableDirectives&lt;/code&gt; (&lt;code&gt;&quot;error&quot; | &quot;warn&quot; | &quot;off&quot; | null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.reportUnusedDisableDirectives&lt;/code&gt; （ &lt;code&gt;&quot;error&quot; | &quot;warn&quot; | &quot;off&quot; | null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8773d4b4dd2ccad9901ab5ce79a49cc34f928084" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.resolvePluginsRelativeTo&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.resolvePluginsRelativeTo&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6706f2dcb883c6ac6a6f21cebb3c365d142ef04f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.rulePaths&lt;/code&gt; (&lt;code&gt;string[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.rulePaths&lt;/code&gt; （ &lt;code&gt;string[]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="344312b77cf7df150641cfd05c1c18b7243d3484" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.useEslintrc&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.useEslintrc&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="97f933229f3cbd830f6e3b9d228fa646999b2f51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.warnIgnored&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;options.warnIgnored&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1f1eb81580fc13c3c53345c889589a701c11a131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; (array, optional): The options passed to the rule. The rule severity should not be included in this list.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; （数组，可选）：传递给规则的选项。规则严重性不应包含在此列表中。</target>
        </trans-unit>
        <trans-unit id="2b2b0f7963fc35570f1e7afb28b068b3074f0e95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; - (optional) Additional options for this run.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; -（可选）此运行的其他选项。</target>
        </trans-unit>
        <trans-unit id="3cfde74554784cd87b376036b229c10f24b876bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; - an array of rule options.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; -一组规则选项。</target>
        </trans-unit>
        <trans-unit id="953cca3d6e72a69e66f5bb55ea626d4968eea41a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; - an array of the &lt;a href=&quot;../user-guide/configuring#configuring-rules&quot;&gt;configured options&lt;/a&gt; for this rule. This array does not include the rule severity. For more information, see &lt;a href=&quot;#contextoptions&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; -此规则的&lt;a href=&quot;../user-guide/configuring#configuring-rules&quot;&gt;配置选项&lt;/a&gt;的数组。该数组不包括规则严重性。有关更多信息，请参见&lt;a href=&quot;#contextoptions&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02f824487a88f212cffad864ce4af1140650de14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;other&lt;/code&gt;: any other kind of declaration</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; ：任何其他形式的声明</target>
        </trans-unit>
        <trans-unit id="bc4477fbb65f6b8fcd53d64bb06b6c3629f2c357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; (&lt;code&gt;string | undefined&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; （ &lt;code&gt;string | undefined&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ca9650deea2a9d987054e7c74a4eb8ebd5059ca2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; (string): A code string representing the result of applying the suggestion fix to the input code</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; （字符串）：一个代码字符串，表示将建议修订应用于输入代码的结果</target>
        </trans-unit>
        <trans-unit id="6798006d75c739786f6b0047691c8976e28d2adc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; (string, optional): Asserts the output that will be produced when using this rule for a single pass of autofixing (e.g. with the &lt;code&gt;--fix&lt;/code&gt; command line flag). If this is &lt;code&gt;null&lt;/code&gt;, asserts that none of the reported problems suggest autofixes.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; （字符串，可选）：声明使用此规则进行单次自动修复时将产生的输出（例如，使用 &lt;code&gt;--fix&lt;/code&gt; 命令行标志）。如果为 &lt;code&gt;null&lt;/code&gt; ，则断言所报告的问题均未建议自动修复。</target>
        </trans-unit>
        <trans-unit id="1d4ec23e8add02587790fe0f2f9fbf4e5bde01de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; (string, required if the rule fixes code): Asserts the output that will be produced when using this rule for a single pass of autofixing (e.g. with the &lt;code&gt;--fix&lt;/code&gt; command line flag). If this is &lt;code&gt;null&lt;/code&gt;, asserts that none of the reported problems suggest autofixes.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; （字符串，如果该规则修复了代码，则为必需）：声明使用此规则进行单次自动修复时将产生的输出（例如，使用 &lt;code&gt;--fix&lt;/code&gt; 命令行标志）。如果为 &lt;code&gt;null&lt;/code&gt; ，则断言所报告的问题均未建议自动修复。</target>
        </trans-unit>
        <trans-unit id="0a71ecfa6375c836acf20e29f020847ba870e46f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; - Fixed code text (might be the same as input if no fixes were applied).</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; -固定的代码文本（如果未应用任何修订，则可能与输入相同）。</target>
        </trans-unit>
        <trans-unit id="12a06221f323f3b60d64937b61c3469af8706744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output&lt;/code&gt; - The source code for the given file with as many fixes applied as possible, so you can use that to rewrite the files if necessary. This property is omitted if no fix is available.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; -给定文件的源代码，并应用了尽可能多的修复程序，因此如有必要，可以使用该代码重写文件。如果没有可用的修复程序，则忽略此属性。</target>
        </trans-unit>
        <trans-unit id="c42883e5282e3b6113d27d5d9e52ff0ce418dbb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;overrides&lt;/code&gt; - specifies overwriting usage of spacing for each operator, word or non word. This is empty by default, but can be used to enforce or disallow spacing around operators. For example:</source>
          <target state="translated">&lt;code&gt;overrides&lt;/code&gt; -指定每个运算符，单词或非单词的间距的覆盖用法。默认情况下为空，但可用于强制或禁止运算符之间的间距。例如：</target>
        </trans-unit>
        <trans-unit id="df212a0b1562019fdac6fcc446b5e67163169952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt; (default: 1) enforces indentation level for parameters in a function declaration. This can either be a number indicating indentation level, or the string &lt;code&gt;&quot;first&quot;&lt;/code&gt; indicating that all parameters of the declaration must be aligned with the first parameter. This can also be set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; to disable checking for FunctionDeclaration parameters.</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; （默认值：1）对函数声明中的参数强制执行缩进级别。它可以是表示缩进级别的数字，也可以是表示声明的所有参数必须与第一个参数对齐的字符串 &lt;code&gt;&quot;first&quot;&lt;/code&gt; 。也可以将其设置为 &lt;code&gt;&quot;off&quot;&lt;/code&gt; 以禁用对FunctionDeclaration参数的检查。</target>
        </trans-unit>
        <trans-unit id="77267ac9c00c59606640d20dfda54ee67ffed0c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt; (default: 1) enforces indentation level for parameters in a function expression. This can either be a number indicating indentation level, or the string &lt;code&gt;&quot;first&quot;&lt;/code&gt; indicating that all parameters of the expression must be aligned with the first parameter. This can also be set to &lt;code&gt;&quot;off&quot;&lt;/code&gt; to disable checking for FunctionExpression parameters.</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; （默认值：1）对函数表达式中的参数强制执行缩进级别。它可以是表示缩进级别的数字，也可以是表示表达式的所有参数必须与第一个参数对齐的字符串 &lt;code&gt;&quot;first&quot;&lt;/code&gt; 。也可以将其设置为 &lt;code&gt;&quot;off&quot;&lt;/code&gt; 以禁用对FunctionExpression参数的检查。</target>
        </trans-unit>
        <trans-unit id="77af9e05de00995fa6b3a4d205aedf3f29ab3503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt; (off by default) enforces indentation level for parameters in a function declaration. This can either be a number indicating indentation level, or the string &lt;code&gt;&quot;first&quot;&lt;/code&gt; indicating that all parameters of the declaration must be aligned with the first parameter.</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; （默认情况下为禁用）对函数声明中的参数强制执行缩进级别。它可以是表示缩进级别的数字，也可以是表示声明的所有参数必须与第一个参数对齐的字符串 &lt;code&gt;&quot;first&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e834567550c48cf2d4a16eea1bc1483bce31889" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parameters&lt;/code&gt; (off by default) enforces indentation level for parameters in a function expression. This can either be a number indicating indentation level, or the string &lt;code&gt;&quot;first&quot;&lt;/code&gt; indicating that all parameters of the expression must be aligned with the first parameter.</source>
          <target state="translated">&lt;code&gt;parameters&lt;/code&gt; （默认情况下处于禁用状态）对函数表达式中的参数强制执行缩进级别。它可以是表示缩进级别的数字，也可以是表示表达式的所有参数必须与第一个参数对齐的字符串 &lt;code&gt;&quot;first&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc7bf95bd7ee592e11b5b6651deeda79fd043e22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parser&lt;/code&gt; - Specify the parser to be used (default: &lt;code&gt;espree&lt;/code&gt;). Corresponds to &lt;code&gt;--parser&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parser&lt;/code&gt; -指定要使用的解析器（默认值： &lt;code&gt;espree&lt;/code&gt; ）。对应于 &lt;code&gt;--parser&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e6ca3e81d6c40d0b5138a230ae23b36a2fe3e0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserOptions&lt;/code&gt; - An object containing parser options (default: empty object). Corresponds to &lt;code&gt;--parser-options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parserOptions&lt;/code&gt; -包含解析器选项的对象（默认：空对象）。对应于 &lt;code&gt;--parser-options&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62d9be7532f101375fff14421e22dedbe27cefdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserOptions&lt;/code&gt; - acts the same as &lt;code&gt;parserOptions&lt;/code&gt; in a configuration file.</source>
          <target state="translated">&lt;code&gt;parserOptions&lt;/code&gt; -与配置文件中的 &lt;code&gt;parserOptions&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="b6236986a6f2bbaa813cea15a098e7e04f174efb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserOptions&lt;/code&gt; - the parser options configured for this run (more details &lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;here&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;parserOptions&lt;/code&gt; -为此运行配置的解析器选项（&lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;此处有&lt;/a&gt;更多详细信息）。</target>
        </trans-unit>
        <trans-unit id="e957ea6aa911bb1036330b7acb419bd414111cf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserPath&lt;/code&gt; - the full path to the &lt;code&gt;parser&lt;/code&gt; from configuration.</source>
          <target state="translated">&lt;code&gt;parserPath&lt;/code&gt; -配置中 &lt;code&gt;parser&lt;/code&gt; 的完整路径。</target>
        </trans-unit>
        <trans-unit id="eb9333f61a7b9f3ac236224816f41102b1af0104" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserPath&lt;/code&gt; - the name of the &lt;code&gt;parser&lt;/code&gt; from configuration.</source>
          <target state="translated">&lt;code&gt;parserPath&lt;/code&gt; -配置中 &lt;code&gt;parser&lt;/code&gt; 的名称。</target>
        </trans-unit>
        <trans-unit id="c62035ea48d839d0d39478e294eb9dc8235bbc53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserServices&lt;/code&gt; - an object containing parser-provided services for rules. The default parser does not provide any services. However, if a rule is intended to be used with a custom parser, it could use &lt;code&gt;parserServices&lt;/code&gt; to access anything provided by that parser. (For example, a TypeScript parser could provide the ability to get the computed type of a given node.)</source>
          <target state="translated">&lt;code&gt;parserServices&lt;/code&gt; -包含解析器为规则提供的服务的对象。默认解析器不提供任何服务。但是，如果打算将规则与自定义解析器一起使用，则可以使用 &lt;code&gt;parserServices&lt;/code&gt; 访问该解析器提供的任何内容。（例如，TypeScript解析器可以提供获取给定节点的计算类型的能力。）</target>
        </trans-unit>
        <trans-unit id="22cbbb157d0e04d14c3d8ef457339050ae3dabd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;patterns&lt;/code&gt; (&lt;code&gt;string | string[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;patterns&lt;/code&gt; （ &lt;code&gt;string | string[]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="271b2c95f820e9ab84edb131af02224323f30ab7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;phantomjs&lt;/code&gt; - PhantomJS global variables.</source>
          <target state="translated">&lt;code&gt;phantomjs&lt;/code&gt; -PhantomJS全局变量。</target>
        </trans-unit>
        <trans-unit id="a1080ace528b98eb07dee2d43c91aaf7c8ad0224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plugins&lt;/code&gt; - An array of plugins to load (default: empty array). Corresponds to &lt;code&gt;--plugin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;plugins&lt;/code&gt; -要加载的插件数组（默认值：空数组）。对应于 &lt;code&gt;--plugin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8d92334d46a87258e7d759c441b3a69a315ff2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;postprocess&lt;/code&gt; - (optional) A function that &lt;a href=&quot;working-with-plugins#processors-in-plugins&quot;&gt;Processors in Plugins&lt;/a&gt; documentation describes as the &lt;code&gt;postprocess&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;postprocess&lt;/code&gt; -（可选）&lt;a href=&quot;working-with-plugins#processors-in-plugins&quot;&gt;插件&lt;/a&gt;文档中的 &lt;code&gt;postprocess&lt;/code&gt; 描述为后处理方法的功能。</target>
        </trans-unit>
        <trans-unit id="ce4ff3a6ad693db9b7f88ce66b482c27c2f6bb0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preprocess&lt;/code&gt; - (optional) A function that &lt;a href=&quot;working-with-plugins#processors-in-plugins&quot;&gt;Processors in Plugins&lt;/a&gt; documentation describes as the &lt;code&gt;preprocess&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;preprocess&lt;/code&gt; -（可选）&lt;a href=&quot;working-with-plugins#processors-in-plugins&quot;&gt;插件&lt;/a&gt;文档中的 &lt;code&gt;preprocess&lt;/code&gt; 描述为预处理方法的功能。</target>
        </trans-unit>
        <trans-unit id="83c103479177b2ca8bbd64b3b60366ab5cf9e137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prevSegments&lt;/code&gt; (&lt;code&gt;CodePathSegment[]&lt;/code&gt;) - The previous segments. If merging, there are two or more. If initial, there is nothing.</source>
          <target state="translated">&lt;code&gt;prevSegments&lt;/code&gt; （ &lt;code&gt;CodePathSegment[]&lt;/code&gt; ）-先前的段。如果合并，则有两个或多个。如果是初始的，则什么也没有。</target>
        </trans-unit>
        <trans-unit id="a48a350d7e90531b0eeb25b3e7e294822f866ae0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;problem&lt;/code&gt; - fix potential errors in the code</source>
          <target state="translated">&lt;code&gt;problem&lt;/code&gt; -修复代码中的潜在错误</target>
        </trans-unit>
        <trans-unit id="cd428966fd6374386740dd2c2d5d9219cb27af71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;propertyName&lt;/code&gt; sets the spacing in square brackets of computed member expressions.</source>
          <target state="translated">&lt;code&gt;propertyName&lt;/code&gt; 在计算的成员表达式的方括号中设置间距。</target>
        </trans-unit>
        <trans-unit id="23f8106c7ca5493c8b0b6adc3e39e383a688096e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;props&lt;/code&gt; - if this is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;no-self-assign&lt;/code&gt; rule warns self-assignments of properties. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;props&lt;/code&gt; -如果为 &lt;code&gt;true&lt;/code&gt; ， &lt;code&gt;no-self-assign&lt;/code&gt; 规则会警告属性的自我分配。默认值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e83860b52ce8d0cabec51837fbf8650b0f1e04be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prototypejs&lt;/code&gt; - Prototype.js global variables.</source>
          <target state="translated">&lt;code&gt;prototypejs&lt;/code&gt; -Prototype.js全局变量。</target>
        </trans-unit>
        <trans-unit id="e3c950d020992eb6c37fbfa53820cc9cbdf3598e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protractor&lt;/code&gt; - Protractor global variables.</source>
          <target state="translated">&lt;code&gt;protractor&lt;/code&gt; -量角器全局变量。</target>
        </trans-unit>
        <trans-unit id="a758b1fe1cfb1e786068a3d5f7c249a6a14be691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qunit&lt;/code&gt; - QUnit global variables.</source>
          <target state="translated">&lt;code&gt;qunit&lt;/code&gt; -QUnit全局变量。</target>
        </trans-unit>
        <trans-unit id="d18b3e513a0134dc0a99151f8041a45128d3688e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;range&lt;/code&gt; (&lt;code&gt;[number, number]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; （ &lt;code&gt;[number, number]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fdf3ffc780217c7b564e59898b21427c601c2ce4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;range&lt;/code&gt; (&lt;code&gt;number[]&lt;/code&gt;) is an array of two numbers. Both numbers are a 0-based index which is the position in the array of source code characters. The first is the start position of the node, the second is the end position of the node. &lt;code&gt;code.slice(node.range[0], node.range[1])&lt;/code&gt; must be the text of the node. This range does not include spaces/parentheses which are around the node.</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; （ &lt;code&gt;number[]&lt;/code&gt; ）是两个数字组成的数组。这两个数字都是从0开始的索引，它是源代码字符数组中的位置。第一个是节点的开始位置，第二个是节点的结束位置。 &lt;code&gt;code.slice(node.range[0], node.range[1])&lt;/code&gt; 必须是节点的文本。该范围不包括节点周围的空格/括号。</target>
        </trans-unit>
        <trans-unit id="3bc82911a5abe75dd7022089706356e45d1eff63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rangeOptions&lt;/code&gt; is an object which has 1 property: &lt;code&gt;includeComments&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rangeOptions&lt;/code&gt; 是一个具有1个属性的对象： &lt;code&gt;includeComments&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7784b4a1bdf14d9bb9593a19deaf3f2538bd8501" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raw&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;) is the source code of this literal. This is the same as &lt;code&gt;code.slice(node.range[0], node.range[1])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;raw&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; ）是此文字的源代码。这与 &lt;code&gt;code.slice(node.range[0], node.range[1])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a13eb46f5bba31eb6d1f8a661b482fadcc21bc89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reachable&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;) - A flag which shows whether or not it's reachable. This becomes &lt;code&gt;false&lt;/code&gt; when preceded by &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, or &lt;code&gt;continue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reachable&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）-一个标志，显示它是否可达。在 &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;throw&lt;/code&gt; ， &lt;code&gt;break&lt;/code&gt; 或 &lt;code&gt;continue&lt;/code&gt; 运算时，这将成为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8169fa75038493ba09bffa4d71ab00bdd4d51f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recommended&lt;/code&gt; (boolean) is whether the &lt;code&gt;&quot;extends&quot;: &quot;eslint:recommended&quot;&lt;/code&gt; property in a &lt;a href=&quot;../user-guide/configuring#extending-configuration-files&quot;&gt;configuration file&lt;/a&gt; enables the rule</source>
          <target state="translated">&lt;code&gt;recommended&lt;/code&gt; （布尔）是&lt;a href=&quot;../user-guide/configuring#extending-configuration-files&quot;&gt;配置文件中&lt;/a&gt;的 &lt;code&gt;&quot;extends&quot;: &quot;eslint:recommended&quot;&lt;/code&gt; 属性是否启用规则</target>
        </trans-unit>
        <trans-unit id="2ee047d1edaaf57a4131d4225af9a2587a45bf1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regexUFlag&lt;/code&gt; - enable the &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-regular-expression-u-flag&quot;&gt;regular expression &lt;code&gt;u&lt;/code&gt; flag&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;regexUFlag&lt;/code&gt; -启用&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-regular-expression-u-flag&quot;&gt;正则表达式 &lt;code&gt;u&lt;/code&gt; 标志&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8566d709a346d28d2b1faa01db650a08ab377add" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regexYFlag&lt;/code&gt; - enable the &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-regular-expression-y-flag&quot;&gt;regular expression &lt;code&gt;y&lt;/code&gt; flag&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;regexYFlag&lt;/code&gt; -启用&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-regular-expression-y-flag&quot;&gt;正则表达式 &lt;code&gt;y&lt;/code&gt; 标志&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="afd2d633c8d9807fdc3075c2fe07411ee2a058e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove(nodeOrToken)&lt;/code&gt; - removes the given node or token</source>
          <target state="translated">&lt;code&gt;remove(nodeOrToken)&lt;/code&gt; -删除给定的节点或令牌</target>
        </trans-unit>
        <trans-unit id="11d39baf6060a2ad476e6e8619b794300a847485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;removeRange(range)&lt;/code&gt; - removes text in the given range</source>
          <target state="translated">&lt;code&gt;removeRange(range)&lt;/code&gt; -删除给定范围内的文本</target>
        </trans-unit>
        <trans-unit id="42e61dda13ee147b1a62ef2c6293cff07b8b228f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replaceText(nodeOrToken, text)&lt;/code&gt; - replaces the text in the given node or token</source>
          <target state="translated">&lt;code&gt;replaceText(nodeOrToken, text)&lt;/code&gt; -替换给定节点或令牌中的文本</target>
        </trans-unit>
        <trans-unit id="a1e4e6752c215d2c65bb1e37dff8db13c743e532" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replaceTextRange(range, text)&lt;/code&gt; - replaces the text in the given range</source>
          <target state="translated">&lt;code&gt;replaceTextRange(range, text)&lt;/code&gt; -替换给定范围内的文本</target>
        </trans-unit>
        <trans-unit id="e5ef2a6db19c2d0173abd286cb3d83e827e95c9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacedBy&lt;/code&gt; (array) in the case of a deprecated rule, specifies replacement rule(s)</source>
          <target state="translated">&lt;code&gt;replacedBy&lt;/code&gt; （阵列）中已经被废弃的规则的情况下，指定替换规则（S）</target>
        </trans-unit>
        <trans-unit id="b3ca8cd8d276fad65094fd4cf491b4ebc6870f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacedBy&lt;/code&gt; - An array of rules that replace the deprecated rule (e.g. &lt;code&gt;[&quot;indent&quot;]&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;replacedBy&lt;/code&gt; 替换不推荐使用的规则的规则数组（例如 &lt;code&gt;[&quot;indent&quot;]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8b008f6034627aab91885c2e655a5f996fa972fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report(descriptor)&lt;/code&gt; - reports a problem in the code (see the &lt;a href=&quot;#context-report&quot;&gt;dedicated section&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;report(descriptor)&lt;/code&gt; -报告代码中的问题（请参阅&lt;a href=&quot;#context-report&quot;&gt;专用部分&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="673ed79127f467f90da4b20706efad40980cad39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report(descriptor)&lt;/code&gt; - reports a problem in the code (see the &lt;a href=&quot;#contextreport&quot;&gt;dedicated section&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;report(descriptor)&lt;/code&gt; -报告代码中的问题（请参阅&lt;a href=&quot;#contextreport&quot;&gt;专用部分&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="44be526c0bf07640ca73389d24943d2ba6402b30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report(descriptor)&lt;/code&gt; - reports a problem in the code.</source>
          <target state="translated">&lt;code&gt;report(descriptor)&lt;/code&gt; -报告代码中的问题。</target>
        </trans-unit>
        <trans-unit id="c1f576f0105a26406714f7c21c3d009aa937c466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report(node, [location], message)&lt;/code&gt; - reports a problem in the code.</source>
          <target state="translated">&lt;code&gt;report(node, [location], message)&lt;/code&gt; -报告代码中的问题。</target>
        </trans-unit>
        <trans-unit id="0e70a123d190ad73ab6a4108ddc3ce1435f12922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; - (optional) when set to &lt;code&gt;true&lt;/code&gt;, adds reported errors for unused &lt;code&gt;eslint-disable&lt;/code&gt; directives when no problems would be reported in the disabled area anyway.</source>
          <target state="translated">&lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; -（可选）设置为 &lt;code&gt;true&lt;/code&gt; 时，如果无论如何在禁用区域都不会报告任何问题，则为未使用的 &lt;code&gt;eslint-disable&lt;/code&gt; 指令添加报告的错误。</target>
        </trans-unit>
        <trans-unit id="44662217adc4a07fba54d6d07d774d1c9511d2d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; - When set to &lt;code&gt;true&lt;/code&gt;, adds reported errors for unused &lt;code&gt;eslint-disable&lt;/code&gt; directives when no problems would be reported in the disabled area anyway (default: false). Corresponds to &lt;code&gt;--report-unused-disable-directives&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; -设置为 &lt;code&gt;true&lt;/code&gt; 时，如果无论如何在禁用区域中都不会报告任何问题（默认值：false），则为未使用的 &lt;code&gt;eslint-disable&lt;/code&gt; 指令添加报告的错误。对应 &lt;code&gt;--report-unused-disable-directives&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="342e993def331cf204c8eb81611d758fe135c958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolvePluginsRelativeTo&lt;/code&gt; - Determines the folder where plugins should be resolved from. Should be used when an integration installs plugins and uses those plugins to lint code on behalf of the end user. Corresponds to &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;resolvePluginsRelativeTo&lt;/code&gt; -确定从中解析插件的文件夹。当集成安装插件并代表最终用户使用这些插件来填充代码时，应使用该插件。对应于 &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f08895232fda29a1d46906fbd76c41944a98b08b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;restParams&lt;/code&gt; - enable the &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-rest-parameters&quot;&gt;rest parameters&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;restParams&lt;/code&gt; -启用&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-rest-parameters&quot;&gt;rest参数&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="387ba243313b63a44f6fed3bf186a405dc18a3c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;results&lt;/code&gt; (&lt;code&gt;LintResult[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;results&lt;/code&gt; （ &lt;code&gt;LintResult[]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="bf8f5ae89641eff23950db05e8f16628d1f4b207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;returnedSegments&lt;/code&gt; (&lt;code&gt;CodePathSegment[]&lt;/code&gt;) - The final segments which includes only returned.</source>
          <target state="translated">&lt;code&gt;returnedSegments&lt;/code&gt; （ &lt;code&gt;CodePathSegment[]&lt;/code&gt; ）-最终段仅包括返回。</target>
        </trans-unit>
        <trans-unit id="d8a36ed1ea0df53b1d1108561ba04761d6a3f852" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ruleId&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;ruleId&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; | &lt;code&gt;null&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e7677439df7966be65f67970f0b081d5c60e994b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ruleId&lt;/code&gt; - The name of the rule (e.g. &lt;code&gt;indent-legacy&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ruleId&lt;/code&gt; -规则的名称（例如 &lt;code&gt;indent-legacy&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8f201397e61a1941d94949ce05e396f2eb6be892" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ruleId&lt;/code&gt; - the ID of the rule that triggered the messages (or null if &lt;code&gt;fatal&lt;/code&gt; is true).</source>
          <target state="translated">&lt;code&gt;ruleId&lt;/code&gt; -触发消息的规则的ID（如果 &lt;code&gt;fatal&lt;/code&gt; 值为true，则为null ）。</target>
        </trans-unit>
        <trans-unit id="448d5336b959502dad8f9091921de730cd52d6f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rulePaths&lt;/code&gt; - An array of directories to load custom rules from (default: empty array). Corresponds to &lt;code&gt;--rulesdir&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rulePaths&lt;/code&gt; -要从中加载自定义规则的目录数组（默认值：空数组）。对应于 &lt;code&gt;--rulesdir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e9e950b17b2f15687b78111419b093702a5f998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rules&lt;/code&gt; - An object of rules to use (default: null). Corresponds to &lt;code&gt;--rule&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rules&lt;/code&gt; -要使用的规则对象（默认值：null）。对应于 &lt;code&gt;--rule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb218e59d198a007db588129fdf4617116d0b205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rules&lt;/code&gt; - all source files defining rules</source>
          <target state="translated">&lt;code&gt;rules&lt;/code&gt; -所有定义规则的源文件</target>
        </trans-unit>
        <trans-unit id="033313294f0c24b5ba6cf94b3a35e48deb70bc28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rules&lt;/code&gt; - tests for the rules</source>
          <target state="translated">&lt;code&gt;rules&lt;/code&gt; -测试规则</target>
        </trans-unit>
        <trans-unit id="5244945f7f5609561b8d12a8e5d9113232f9758b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;schema&lt;/code&gt; (array) specifies the &lt;a href=&quot;#options-schemas&quot;&gt;options&lt;/a&gt; so ESLint can prevent invalid &lt;a href=&quot;../user-guide/configuring#configuring-rules&quot;&gt;rule configurations&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;schema&lt;/code&gt; （数组）指定&lt;a href=&quot;#options-schemas&quot;&gt;选项，&lt;/a&gt;以便ESLint可以防止无效的&lt;a href=&quot;../user-guide/configuring#configuring-rules&quot;&gt;规则配置&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1a4737446920852b8f131e6d7ae69b4a97c6ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scopeManager&lt;/code&gt; - the &lt;a href=&quot;scope-manager-interface#scopemanager-interface&quot;&gt;ScopeManager&lt;/a&gt; object of the code.</source>
          <target state="translated">&lt;code&gt;scopeManager&lt;/code&gt; -代码的&lt;a href=&quot;scope-manager-interface#scopemanager-interface&quot;&gt;ScopeManager&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="3d54fadc18a6887da37fa8545a87192989177d0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scopeManager&lt;/code&gt; can be a &lt;a href=&quot;scope-manager-interface&quot;&gt;ScopeManager&lt;/a&gt; object. Custom parsers can use customized scope analysis for experimental/enhancement syntaxes. Default is the &lt;code&gt;ScopeManager&lt;/code&gt; object which is created by &lt;a href=&quot;https://github.com/eslint/eslint-scope&quot;&gt;eslint-scope&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;scopeManager&lt;/code&gt; 可以是&lt;a href=&quot;scope-manager-interface&quot;&gt;ScopeManager&lt;/a&gt;对象。自定义解析器可以将自定义范围分析用于实验/增强语法。默认值为&lt;a href=&quot;https://github.com/eslint/eslint-scope&quot;&gt;eslint-scope&lt;/a&gt;创建的 &lt;code&gt;ScopeManager&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="4f8e07cc12ee3b5466a33cc3a5a2d3366bec5503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;services&lt;/code&gt; can contain any parser-dependent services (such as type checkers for nodes). The value of the &lt;code&gt;services&lt;/code&gt; property is available to rules as &lt;code&gt;context.parserServices&lt;/code&gt;. Default is an empty object.</source>
          <target state="translated">&lt;code&gt;services&lt;/code&gt; 可以包含任何与解析器相关的服务（例如，节点的类型检查器）。该值 &lt;code&gt;services&lt;/code&gt; 属性是提供给规则 &lt;code&gt;context.parserServices&lt;/code&gt; 。默认为空对象。</target>
        </trans-unit>
        <trans-unit id="dd02fb5dc08b8103fec9545d2aaeae2326a714d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serviceworker&lt;/code&gt; - Service Worker global variables.</source>
          <target state="translated">&lt;code&gt;serviceworker&lt;/code&gt; -服务工作者全局变量。</target>
        </trans-unit>
        <trans-unit id="b61808bb3f6746f75d108f844f3b4f545613c1d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setWithoutGet&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; will warn for setters without getters (Default &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;setWithoutGet&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 会警告没有getter的setter（默认为 &lt;code&gt;true&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c1098db1b64e3f105b8662a96224e640d047b839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;settings&lt;/code&gt; - the &lt;a href=&quot;../user-guide/configuring#adding-shared-settings&quot;&gt;shared settings&lt;/a&gt; from configuration.</source>
          <target state="translated">&lt;code&gt;settings&lt;/code&gt; -配置中的&lt;a href=&quot;../user-guide/configuring#adding-shared-settings&quot;&gt;共享设置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78b464593816361428618f91b97e7892b603ac13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;settings&lt;/code&gt; - the &lt;code&gt;settings&lt;/code&gt; from configuration.</source>
          <target state="translated">&lt;code&gt;settings&lt;/code&gt; -来自配置的 &lt;code&gt;settings&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed495021db0964352f84b2956da94665584ccc71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;severity&lt;/code&gt; (&lt;code&gt;1 | 2&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;severity&lt;/code&gt; （ &lt;code&gt;1 | 2&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="4b1505c7011f867593ec6ba31405c1d9d6786878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;severity&lt;/code&gt; - either 1 or 2, depending on your configuration.</source>
          <target state="translated">&lt;code&gt;severity&lt;/code&gt; -1或2，具体取决于您的配置。</target>
        </trans-unit>
        <trans-unit id="af2e074f2291e32a851386f6943c35c62691d3bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shared-node-browser&lt;/code&gt; - Globals common to both Node.js and Browser.</source>
          <target state="translated">&lt;code&gt;shared-node-browser&lt;/code&gt; -Node.js和浏览器通用的全局变量。</target>
        </trans-unit>
        <trans-unit id="2384792d9b4129dc8e3cd5aa0f33c7583190dd2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shelljs&lt;/code&gt; - ShellJS global variables.</source>
          <target state="translated">&lt;code&gt;shelljs&lt;/code&gt; -ShellJS全局变量。</target>
        </trans-unit>
        <trans-unit id="9c777d667874248097ecd8cebf907c1cbe0cea9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;single&lt;/code&gt; - import single member.</source>
          <target state="translated">&lt;code&gt;single&lt;/code&gt; -导入单个成员。</target>
        </trans-unit>
        <trans-unit id="d3e16e146a19049305bd1d48672791e81e83586c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;single&lt;/code&gt; = import single member.</source>
          <target state="translated">&lt;code&gt;single&lt;/code&gt; =导入单个成员。</target>
        </trans-unit>
        <trans-unit id="ba208adf6cb6bfa32e72d4683ef7409155bfc511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;singleValue&lt;/code&gt; sets the spacing of a single value inside of square brackets of an array.</source>
          <target state="translated">&lt;code&gt;singleValue&lt;/code&gt; 设置单个值在数组方括号内的间距。</target>
        </trans-unit>
        <trans-unit id="ffc60847f9ffed871ebb8e8a274977cb17506c82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skip&lt;/code&gt; is a positive integer, the number of skipping tokens. If &lt;code&gt;filter&lt;/code&gt; option is given at the same time, it doesn't count filtered tokens as skipped.</source>
          <target state="translated">&lt;code&gt;skip&lt;/code&gt; 是一个正整数，表示跳过令牌的数量。如果同时提供 &lt;code&gt;filter&lt;/code&gt; 选项，则不会将过滤的令牌计为跳过。</target>
        </trans-unit>
        <trans-unit id="d5bffd4721137f0668214feafc3f619665634c86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skipOptions&lt;/code&gt; is an object which has 3 properties; &lt;code&gt;skip&lt;/code&gt;, &lt;code&gt;includeComments&lt;/code&gt;, and &lt;code&gt;filter&lt;/code&gt;. Default is &lt;code&gt;{skip: 0, includeComments: false, filter: null}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;skipOptions&lt;/code&gt; 是一个具有3个属性的对象； &lt;code&gt;skip&lt;/code&gt; ， &lt;code&gt;includeComments&lt;/code&gt; 和 &lt;code&gt;filter&lt;/code&gt; 。默认值为 &lt;code&gt;{skip: 0, includeComments: false, filter: null}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e00a007f4c3ff0bb6d68e192c15a3b74a01ed24f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; (&lt;code&gt;string | undefined&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; （ &lt;code&gt;string | undefined&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e0e2ecc0406df38b1d1ccf1ecac779fa61ca0ce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; - The source code for the given file. This property is omitted if this file has no errors/warnings or if the &lt;code&gt;output&lt;/code&gt; property is present.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; -给定文件的源代码。如果此文件没有错误/警告或存在 &lt;code&gt;output&lt;/code&gt; 属性，则忽略此属性。</target>
        </trans-unit>
        <trans-unit id="8bab5102de076b0619a8aaab81f5b6bcd8aed840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceType&lt;/code&gt; - set to &lt;code&gt;&quot;script&quot;&lt;/code&gt; (default) or &lt;code&gt;&quot;module&quot;&lt;/code&gt; if your code is in ECMAScript modules.</source>
          <target state="translated">&lt;code&gt;sourceType&lt;/code&gt; -如果代码在ECMAScript模块中，则设置为 &lt;code&gt;&quot;script&quot;&lt;/code&gt; （默认）或 &lt;code&gt;&quot;module&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60fc3fa75a643143fec43ea1214963f7a3090f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spread&lt;/code&gt; - enable the &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-spread-operator&quot;&gt;spread operator&lt;/a&gt; for arrays</source>
          <target state="translated">&lt;code&gt;spread&lt;/code&gt; - 为数组启用&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-the-spread-operator&quot;&gt;扩展运算符&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a74498937d9da6989b3826fb3f822c1a0e6d8ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; - An object of the start location.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; -开始位置的对象。</target>
        </trans-unit>
        <trans-unit id="562c297214c3079c86643ee742a66325060aefce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suggestion&lt;/code&gt; (boolean) specifies whether rules can return suggestions (defaults to false if omitted)</source>
          <target state="translated">&lt;code&gt;suggestion&lt;/code&gt; （布尔值）指定规则是否可以返回建议（如果省略，默认为false）</target>
        </trans-unit>
        <trans-unit id="7001382730594d9af640d23183d826935097fc76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suggestion&lt;/code&gt; - apply fixes to the code that improve it</source>
          <target state="translated">&lt;code&gt;suggestion&lt;/code&gt; -将修补程序应用于改进它的代码</target>
        </trans-unit>
        <trans-unit id="a3841d6bcd3c378320e8c76cb8882a3092dfd451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suggestions&lt;/code&gt; (&lt;code&gt;{ desc: string; fix: EditInfo }[] | undefined&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;suggestions&lt;/code&gt; （ &lt;code&gt;{ desc: string; fix: EditInfo }[] | undefined&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="17e1bd8b89f512b7c4dcfb3986baec9ba3d73bd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suggestions&lt;/code&gt; (array): An array of objects with suggestion details to check. See &lt;a href=&quot;#testing-suggestions&quot;&gt;Testing Suggestions&lt;/a&gt; for details</source>
          <target state="translated">&lt;code&gt;suggestions&lt;/code&gt; （数组）：带有要检查的建议详细信息的对象数组。有关详细信息，请参见&lt;a href=&quot;#testing-suggestions&quot;&gt;测试建议&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01a9e2d4ed6fc53580ec1667bad9ffa002d21113" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suggestions&lt;/code&gt; - an array of objects describing possible lint fixes for editors to programmatically enable (see details in the &lt;a href=&quot;working-with-rules#providing-suggestions&quot;&gt;Working with Rules docs&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;suggestions&lt;/code&gt; -一组对象，描述可能的皮棉修复程序，以供编辑器以编程方式启用（请参阅&amp;ldquo; &lt;a href=&quot;working-with-rules#providing-suggestions&quot;&gt;使用规则&amp;rdquo;文档&lt;/a&gt;中的详细信息）。</target>
        </trans-unit>
        <trans-unit id="1318fab7248c2f4b39f6afd96e36cbc603af759a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;superInFunctions&lt;/code&gt; - enable &lt;code&gt;super&lt;/code&gt; references inside of functions</source>
          <target state="translated">&lt;code&gt;superInFunctions&lt;/code&gt; -在函数内部启用 &lt;code&gt;super&lt;/code&gt; 引用</target>
        </trans-unit>
        <trans-unit id="7d7e78c26943268d03f5a72365c1eb3015043d08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;templateStrings&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-template-strings&quot;&gt;template strings&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;templateStrings&lt;/code&gt; -启用&lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-template-strings&quot;&gt;模板字符串&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cbd54e9fd010557953cb7a0ef7ddae91972ffc35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tests&lt;/code&gt; - the main unit test folder</source>
          <target state="translated">&lt;code&gt;tests&lt;/code&gt; -主体测试文件夹</target>
        </trans-unit>
        <trans-unit id="b7eed2b6d45348b720e65fb837c1ff1203bc507f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; （ &lt;code&gt;string&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="08dcb9cef9adf8696d4c280589a87557cb5a4fd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text&lt;/code&gt; - the full text of the code being linted. Unicode BOM has been stripped from this text.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; -被替换的代码的全文本。Unicode BOM已从该文本中删除。</target>
        </trans-unit>
        <trans-unit id="816e619a8bf7c281ba92a529d4c0642f418078aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;throw&lt;/code&gt; statements.</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="b115b1a6144f77e6a5aa3d71ef3e7bf2f0dc3aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thrownSegments&lt;/code&gt; (&lt;code&gt;CodePathSegment[]&lt;/code&gt;) - The final segments which includes only thrown.</source>
          <target state="translated">&lt;code&gt;thrownSegments&lt;/code&gt; （ &lt;code&gt;CodePathSegment[]&lt;/code&gt; ）-仅包含thrown的最终段。</target>
        </trans-unit>
        <trans-unit id="7519d7afe92e54795456484fa28061d35ee23b0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tokens&lt;/code&gt; (&lt;code&gt;Token[]&lt;/code&gt;) is the array of tokens which affect the behavior of programs. Arbitrary spaces can exist between tokens, so rules check the &lt;code&gt;Token#range&lt;/code&gt; to detect spaces between tokens. This must be sorted by &lt;code&gt;Token#range[0]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tokens&lt;/code&gt; （ &lt;code&gt;Token[]&lt;/code&gt; ）是影响程序行为的令牌数组。令牌之间可以存在任意空间，因此规则会检查 &lt;code&gt;Token#range&lt;/code&gt; 以检测令牌之间的空间。必须按 &lt;code&gt;Token#range[0]&lt;/code&gt; 排序。</target>
        </trans-unit>
        <trans-unit id="85189a44e953487b618de67a3eb0fa859151682c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; (default) &lt;strong&gt;even if&lt;/strong&gt; the function or method does not have a &lt;code&gt;return&lt;/code&gt; statement (this option value does not apply to constructors)</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; （默认），&lt;strong&gt;即使&lt;/strong&gt;函数或方法没有 &lt;code&gt;return&lt;/code&gt; 语句（此选项值不适用于构造函数）</target>
        </trans-unit>
        <trans-unit id="398be4feb083902f29f8a7376d7e2c72ed38a618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; means there should be &lt;strong&gt;one or more spaces&lt;/strong&gt; and &lt;code&gt;false&lt;/code&gt; means &lt;strong&gt;no spaces&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 表示应该有&lt;strong&gt;一个或多个空格&lt;/strong&gt;， &lt;code&gt;false&lt;/code&gt; 表示&lt;strong&gt;没有空格&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="164473cb1bdffa8a6ee69e081b7955161d6ce2fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; relaxes the rule and accepts parenthesis as a valid &quot;confusion-preventing&quot; syntax.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 放宽规则，并接受括号作为有效的&amp;ldquo;防止混淆&amp;rdquo;语法。</target>
        </trans-unit>
        <trans-unit id="c110fc8578280c6d8b4187919d51e6880ee72955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;: requires at least one space between the colon and the value in object literals.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; ：在冒号和对象文字中的值之间至少需要一个空格。</target>
        </trans-unit>
        <trans-unit id="32c944022b8d6ef52bb3b58ed7186232da7a278a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;: requires at least one space between the key and the colon in object literals.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; ：在对象文字中，键和冒号之间至少需要一个空格。</target>
        </trans-unit>
        <trans-unit id="ed51de71320a2a1ea9139a4f6dac950b128ae463" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; (string) indicates the type of rule, which is one of &lt;code&gt;&quot;problem&quot;&lt;/code&gt;, &lt;code&gt;&quot;suggestion&quot;&lt;/code&gt;, or &lt;code&gt;&quot;layout&quot;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; （字符串）表示规则的类型，它是 &lt;code&gt;&quot;problem&quot;&lt;/code&gt; ， &lt;code&gt;&quot;suggestion&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;layout&quot;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ce2daaa0d1c129ced8360a8ffb8f746db1ac9b57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; (string): The type of the reported AST node</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; （字符串）：报告的AST节点的类型</target>
        </trans-unit>
        <trans-unit id="3e25050e2f24c7a7b3cbb85b0c2364d188dc9091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt; set to true will warn for variables used inside typeof check (Default false).</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; 如果将typeof设置为true，则会警告在typeof检查中使用的变量（默认为false）。</target>
        </trans-unit>
        <trans-unit id="5fdcb0790e9c597696da493f71389a15eb982651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt;. In this case, loads the &lt;code&gt;&quot;stylish&quot;&lt;/code&gt; built-in formatter.</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; 。在这种情况下，加载 &lt;code&gt;&quot;stylish&quot;&lt;/code&gt; 内置格式化程序。</target>
        </trans-unit>
        <trans-unit id="d447c639868163e0b6f3e7e087f1876514ec1b40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unicodeCodePointEscapes&lt;/code&gt; - enable &lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-escaping-non-bmp-characters&quot;&gt;code point escapes&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;unicodeCodePointEscapes&lt;/code&gt; -启用&lt;a href=&quot;https://leanpub.com/understandinges6/read/#leanpub-auto-escaping-non-bmp-characters&quot;&gt;代码点转义&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54b2b3dcae0bc3c1af73d9d3ed3faff1b71eb602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uninitialized&lt;/code&gt;: a declaration that is not initialized</source>
          <target state="translated">&lt;code&gt;uninitialized&lt;/code&gt; ：未初始化的声明</target>
        </trans-unit>
        <trans-unit id="b1b8fcea74b3c2723ae07350ad0c06fdf101540d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;upper&lt;/code&gt; (&lt;code&gt;CodePath|null&lt;/code&gt;) - The code path of the upper function/global scope.</source>
          <target state="translated">&lt;code&gt;upper&lt;/code&gt; （ &lt;code&gt;CodePath|null&lt;/code&gt; ）-上层函数/全局范围的代码路径。</target>
        </trans-unit>
        <trans-unit id="98dbb83ef9d84404723cc01fc7df3377147e2149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt; (string) specifies the URL at which the full documentation can be accessed</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; （字符串）指定可访问完整文档的URL</target>
        </trans-unit>
        <trans-unit id="d46d96d622b96dc5814ed780900e9336cc76ccc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;useEslintrc&lt;/code&gt; - Set to false to disable use of &lt;code&gt;.eslintrc&lt;/code&gt; files (default: true). Corresponds to &lt;code&gt;--no-eslintrc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;useEslintrc&lt;/code&gt; -设置为false以禁用 &lt;code&gt;.eslintrc&lt;/code&gt; 文件的使用（默认值：true）。对应于 &lt;code&gt;--no-eslintrc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ac85eaf2f1ba91a9f688fea05ef09cd71330015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;usedDeprecatedRules&lt;/code&gt; (&lt;code&gt;{ ruleId: string; replacedBy: string[] }[]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;usedDeprecatedRules&lt;/code&gt; （ &lt;code&gt;{ ruleId: string; replacedBy: string[] }[]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="bb54b2ac875e39c6a5c69fbe0057d558eb17a51a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; and &lt;code&gt;function&lt;/code&gt; declarations</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; 和 &lt;code&gt;function&lt;/code&gt; 声明</target>
        </trans-unit>
        <trans-unit id="788e44194d9b2e6f3dfac11727ce139725216787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; declarations in the global.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; 全局中的var声明。</target>
        </trans-unit>
        <trans-unit id="fd77df796b591255e602e82be482bd2c1aadcf02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variable.eslintExplicitGlobal&lt;/code&gt; (&lt;code&gt;boolean | undefined&lt;/code&gt;) ... If &lt;code&gt;true&lt;/code&gt;, this global variable was defined by a &lt;code&gt;/* globals */&lt;/code&gt; directive comment in the source code file.</source>
          <target state="translated">&lt;code&gt;variable.eslintExplicitGlobal&lt;/code&gt; （ &lt;code&gt;boolean | undefined&lt;/code&gt; ）...如果为 &lt;code&gt;true&lt;/code&gt; ，则此全局变量由源代码文件中的 &lt;code&gt;/* globals */&lt;/code&gt; 指令注释定义。</target>
        </trans-unit>
        <trans-unit id="41cdf97481d87a8abdd46b934132dc88e0f6bd53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variable.eslintExplicitGlobalComments&lt;/code&gt; (&lt;code&gt;Comment[] | undefined&lt;/code&gt;) ... The array of &lt;code&gt;/* globals */&lt;/code&gt; directive comments which defined this global variable in the source code file. This property is &lt;code&gt;undefined&lt;/code&gt; if there are no &lt;code&gt;/* globals */&lt;/code&gt; directive comments.</source>
          <target state="translated">&lt;code&gt;variable.eslintExplicitGlobalComments&lt;/code&gt; （ &lt;code&gt;Comment[] | undefined&lt;/code&gt; ）... &lt;code&gt;/* globals */&lt;/code&gt; 指令注释的数组，它们在源代码文件中定义了此全局变量。如果没有 &lt;code&gt;/* globals */&lt;/code&gt; 指令注释，则此属性 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8842bb6edd2d2a32b42577f5d2f9ff77c03dc964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variable.eslintImplicitGlobalSetting&lt;/code&gt; (&lt;code&gt;&quot;readonly&quot; | &quot;writable&quot; | undefined&lt;/code&gt;) ... The configured value in config files. This can be different from &lt;code&gt;variable.writeable&lt;/code&gt; if there are &lt;code&gt;/* globals */&lt;/code&gt; directive comments.</source>
          <target state="translated">&lt;code&gt;variable.eslintImplicitGlobalSetting&lt;/code&gt; （ &lt;code&gt;&quot;readonly&quot; | &quot;writable&quot; | undefined&lt;/code&gt; ）...配置文件中的配置值。如果存在 &lt;code&gt;/* globals */&lt;/code&gt; 指令注释，则此 &lt;code&gt;variable.writeable&lt;/code&gt; 可以不同于variable.writeable。</target>
        </trans-unit>
        <trans-unit id="8ab0a21f7c02edcdbaf94c592f26a9debce3a664" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variable.writeable&lt;/code&gt; (&lt;code&gt;boolean | undefined&lt;/code&gt;) ... If &lt;code&gt;true&lt;/code&gt;, this global variable can be assigned arbitrary value. If &lt;code&gt;false&lt;/code&gt;, this global variable is read-only.</source>
          <target state="translated">&lt;code&gt;variable.writeable&lt;/code&gt; （ &lt;code&gt;boolean | undefined&lt;/code&gt; ）...如果为 &lt;code&gt;true&lt;/code&gt; ，则可以为该全局变量分配任意值。如果为 &lt;code&gt;false&lt;/code&gt; ，则此全局变量为只读。</target>
        </trans-unit>
        <trans-unit id="5b8b2e84ad41c0b330735ef613256ce337ff37a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variables&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;) - This flag determines whether or not the rule checks variable declarations in upper scopes. If this is &lt;code&gt;true&lt;/code&gt;, the rule warns every reference to a variable before the variable declaration. Otherwise, the rule ignores a reference if the declaration is in an upper scope, while still reporting the reference if it's in the same scope as the declaration. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;variables&lt;/code&gt; （ &lt;code&gt;boolean&lt;/code&gt; ）-此标志确定规则是否检查上限范围内的变量声明。如果为 &lt;code&gt;true&lt;/code&gt; ，则规则在变量声明之前警告对变量的所有引用。否则，如果声明在较高范围内，则规则将忽略引用，而如果声明与声明在相同范围内，则规则仍将报告该引用。默认值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ad405cae17dce59bbce81dd34c8a9459d0da26e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;visitorKeys&lt;/code&gt; - the visitor keys to traverse this AST.</source>
          <target state="translated">&lt;code&gt;visitorKeys&lt;/code&gt; -遍历此AST的访客键。</target>
        </trans-unit>
        <trans-unit id="32c0307db470eaeab159b0b85167c1ef69de6382" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;visitorKeys&lt;/code&gt; can be an object to customize AST traversal. The keys of the object are the type of AST nodes. Each value is an array of the property names which should be traversed. Default is &lt;a href=&quot;https://github.com/eslint/eslint-visitor-keys#evkkeys&quot;&gt;KEYS of &lt;code&gt;eslint-visitor-keys&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;visitorKeys&lt;/code&gt; 可以是自定义AST遍历的对象。对象的键是AST节点的类型。每个值都是应遍历的属性名称的数组。默认为&lt;a href=&quot;https://github.com/eslint/eslint-visitor-keys#evkkeys&quot;&gt; &lt;code&gt;eslint-visitor-keys&lt;/code&gt; 的&lt;/a&gt; KEYS。</target>
        </trans-unit>
        <trans-unit id="38a5b477d008fa55f98a37d2b9c603d027c9b335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warningCount&lt;/code&gt; (&lt;code&gt;number&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;warningCount&lt;/code&gt; （ &lt;code&gt;number&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="45370b8098f934ae8cbddafa379e59a2d8b1a96b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;webextensions&lt;/code&gt; - WebExtensions globals.</source>
          <target state="translated">&lt;code&gt;webextensions&lt;/code&gt; -WebExtensions全局变量。</target>
        </trans-unit>
        <trans-unit id="e8318d7f2494338ee26e4f979f86bef08671fb6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;words&lt;/code&gt; - applies to unary word operators such as: &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;typeof&lt;/code&gt;, &lt;code&gt;void&lt;/code&gt;, &lt;code&gt;yield&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;words&lt;/code&gt; -适用于一元单词运算符，例如： &lt;code&gt;new&lt;/code&gt; ， &lt;code&gt;delete&lt;/code&gt; ， &lt;code&gt;typeof&lt;/code&gt; ， &lt;code&gt;void&lt;/code&gt; ， &lt;code&gt;yield&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8969774c77043e144aff4bf62101b043cce636d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;worker&lt;/code&gt; - web workers global variables.</source>
          <target state="translated">&lt;code&gt;worker&lt;/code&gt; -网络工作者的全局变量。</target>
        </trans-unit>
        <trans-unit id="300e058b27197d2fd30811e6a51b5c26466d8375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ &quot;allowNamedFunctions&quot;: true }&lt;/code&gt;&lt;strong&gt;will not&lt;/strong&gt; flag the following example:</source>
          <target state="translated">&lt;code&gt;{ &quot;allowNamedFunctions&quot;: true }&lt;/code&gt; &lt;strong&gt;不会&lt;/strong&gt;标记以下示例：</target>
        </trans-unit>
        <trans-unit id="be93815ae6cace6c54c18967749e32ebc2ca2fb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ &quot;allowTemplateLiterals&quot;: false }&lt;/code&gt; will not disallow the usage of all template literals. If you want to forbid any instance of template literals, use &lt;a href=&quot;no-restricted-syntax&quot;&gt;no-restricted-syntax&lt;/a&gt; and target the &lt;code&gt;TemplateLiteral&lt;/code&gt; selector.</source>
          <target state="translated">&lt;code&gt;{ &quot;allowTemplateLiterals&quot;: false }&lt;/code&gt; 不会禁止使用所有模板文字。如果要禁止模板文字的任何实例，请使用&lt;a href=&quot;no-restricted-syntax&quot;&gt;no-restricted-syntax&lt;/a&gt;并定位 &lt;code&gt;TemplateLiteral&lt;/code&gt; 选择器。</target>
        </trans-unit>
        <trans-unit id="26aa7eb76c77f36a5b4eef1017c7a9d4f09b8d1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ &quot;allowUnboundThis&quot;: false }&lt;/code&gt;&lt;strong&gt;will&lt;/strong&gt; flag the following examples:</source>
          <target state="translated">&lt;code&gt;{ &quot;allowUnboundThis&quot;: false }&lt;/code&gt; &lt;strong&gt;将&lt;/strong&gt;标记以下示例：</target>
        </trans-unit>
        <trans-unit id="85e2de4f7aaa1280b404b80f6d67d6de16259c8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ &quot;minItems&quot;: value }&lt;/code&gt; requires linebreaks inside function parentheses if the number of parameters/arguments is at least &lt;code&gt;value&lt;/code&gt;. Otherwise, it disallows linebreaks.</source>
          <target state="translated">&lt;code&gt;{ &quot;minItems&quot;: value }&lt;/code&gt; 如果参数/参数的数量至少为 &lt;code&gt;value&lt;/code&gt; ,则{&amp;ldquo; minItems&amp;rdquo;：value}在函数括号内需要换行。否则，它不允许换行。</target>
        </trans-unit>
        <trans-unit id="5bcbf5b0912aba565be18b51eb0ba63df89c59da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;before&quot;: false, &quot;after&quot;: false}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;neither&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&quot;before&quot;: false, &quot;after&quot;: false}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;neither&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7736fafa7d8c87cab4049ac35addef0742b055ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;before&quot;: false, &quot;after&quot;: true}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;after&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&quot;before&quot;: false, &quot;after&quot;: true}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;after&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd01b6771ae8b10b383444ed75ec0191ae1708e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;before&quot;: true, &quot;after&quot;: false}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;before&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&quot;before&quot;: true, &quot;after&quot;: false}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;before&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24ec96246a35f0fb25934ca1f382fdf207a71ec5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{&quot;before&quot;: true, &quot;after&quot;: true}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;both&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{&quot;before&quot;: true, &quot;after&quot;: true}&lt;/code&gt; &amp;rarr; &lt;code&gt;&quot;both&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="428a16477e45de88f5411d14063f1b262bf4c21e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~/.eslintrc.*&lt;/code&gt; files behave similarly to regular configuration files, with some exceptions:</source>
          <target state="translated">&lt;code&gt;~/.eslintrc.*&lt;/code&gt; 文件的行为与常规配置文件类似，但有一些例外：</target>
        </trans-unit>
        <trans-unit id="6579dd2d87db720cf5022eece35bcbc5152bc405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~/.eslintrc.*&lt;/code&gt; files load plugins from &lt;code&gt;$CWD/node_modules&lt;/code&gt; by default in order to identify plugins uniquely. If you want to use plugins with &lt;code&gt;~/.eslintrc.*&lt;/code&gt; files, plugins must be installed locally per project. Alternatively, you can use the &lt;a href=&quot;command-line-interface#--resolve-plugins-relative-to&quot;&gt;&lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; CLI option&lt;/a&gt; to change the location from which ESLint loads plugins.</source>
          <target state="translated">&lt;code&gt;~/.eslintrc.*&lt;/code&gt; 文件默认情况下从 &lt;code&gt;$CWD/node_modules&lt;/code&gt; 加载插件，以便唯一地标识插件。如果要使用具有 &lt;code&gt;~/.eslintrc.*&lt;/code&gt; 文件的插件，则必须在每个项目的本地安装插件。或者，您可以使用&lt;a href=&quot;command-line-interface#--resolve-plugins-relative-to&quot;&gt; &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; CLI选项&lt;/a&gt;来更改ESLint加载插件的位置。</target>
        </trans-unit>
        <trans-unit id="b95ef68d43736af87f87d494b9aa35117f6abd6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~/.eslintrc.*&lt;/code&gt; files load shareable configs and custom parsers from &lt;code&gt;~/node_modules/&lt;/code&gt; &amp;ndash; similarly to &lt;code&gt;require()&lt;/code&gt; &amp;ndash; in the user's home directory. Please note that it doesn't load global-installed packages.</source>
          <target state="translated">&lt;code&gt;~/.eslintrc.*&lt;/code&gt; 文件从 &lt;code&gt;~/node_modules/&lt;/code&gt; （类似于 &lt;code&gt;require()&lt;/code&gt; )在用户的主目录中加载可共享的配置和自定义解析器。请注意，它不会加载全局安装的软件包。</target>
        </trans-unit>
        <trans-unit id="7e650bf2ed65d3b6857b4caa24b44e2304666d78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~/&lt;/code&gt; refers to &lt;a href=&quot;https://nodejs.org/api/os.html#os_os_homedir&quot;&gt;the home directory of the current user on your preferred operating system&lt;/a&gt;. The personal configuration file being referred to here is &lt;code&gt;~/.eslintrc.*&lt;/code&gt; file, which is currently handled differently than other configuration files.</source>
          <target state="translated">&lt;code&gt;~/&lt;/code&gt; 指&lt;a href=&quot;https://nodejs.org/api/os.html#os_os_homedir&quot;&gt;您首选操作系统上当前用户的主目录&lt;/a&gt;。这里所指的个人配置文件是 &lt;code&gt;~/.eslintrc.*&lt;/code&gt; 文件，当前处理的方式与其他配置文件不同。</target>
        </trans-unit>
        <trans-unit id="dde79d0dfe135bbe249b7430587f5c88f439ddb2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;false negatives&lt;/em&gt; when this rule reports correct code, but the program calls the callback more than one time (which is incorrect behavior)</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;如果此规则报告正确的代码，但程序多次调用回调，则为&lt;em&gt;假否定&lt;/em&gt;（这是错误的行为）</target>
        </trans-unit>
        <trans-unit id="51dc182038cc3d39feed641c04dea65d51b78d8f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;false positives&lt;/em&gt; when this rule reports incorrect code, but the program calls the callback only one time (which is correct behavior)</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;当此规则报告不正确的代码，但程序仅调用回调一次（这是正确的行为）时，为&lt;em&gt;假肯定&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f95a880d3b307bb016a078ab0e2bc85db5ee24a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A character with Emoji modifiers:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;具有表情符号修饰符的角色：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15e0d475752ce95cade194ae748f9c3ca1809f39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A character with combining characters:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;具有组合字符的字符：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e3fab0654c27190e3d2eaab45ad1a04ef74343b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A pair of regional indicator symbols:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;一对区域指标符号：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a49a6d1dbffb69c2c9ac935a8c9954a3fcd707b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A surrogate pair without Unicode flag:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;没有Unicode标志的代理对：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="607fdb8cf66564d700da735af85d57e55ad73a2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Atomic.&lt;/strong&gt; Rules must function completely on their own. Rules are expressly forbidden from knowing about the state or presence of other rules.</source>
          <target state="translated">&lt;strong&gt;原子。&lt;/strong&gt;规则必须完全独立运作。明确禁止规则了解其他规则的状态或存在。</target>
        </trans-unit>
        <trans-unit id="b9a077df30f5baa6d17cb6042cbd8c3773fd3bb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bugs&lt;/strong&gt; - problems with the project are actively affecting users. We want to get these resolved as quickly as possible.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt; -项目问题正在积极影响用户。我们希望尽快解决这些问题。</target>
        </trans-unit>
        <trans-unit id="fba6712942524dcf51cb8aee2c59d1ed42e073a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Characters that ZWJ joins:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ZWJ加入的角色：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d08dc10fd87a158f990e8ab8a386b673f6b33bc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration Comments&lt;/strong&gt; - use JavaScript comments to embed configuration information directly into a file.</source>
          <target state="translated">&lt;strong&gt;配置注释&lt;/strong&gt; -使用JavaScript注释将配置信息直接嵌入文件中。</target>
        </trans-unit>
        <trans-unit id="14e063069850efd0f1fddb86fa1f07284d1ce23f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration File&lt;/strong&gt; - In JSCS, the configuration file is &lt;code&gt;.jscsrc&lt;/code&gt;, &lt;code&gt;.jscsrc.json&lt;/code&gt;, &lt;code&gt;.jscsrc.yaml&lt;/code&gt;, or &lt;code&gt;.jscsrs.js&lt;/code&gt;. In ESLint, the configuration file can be &lt;code&gt;.eslintrc.json&lt;/code&gt;, &lt;code&gt;.eslintrc.yml&lt;/code&gt;, &lt;code&gt;.eslintrc.yaml&lt;/code&gt;, or &lt;code&gt;.eslintrc.js&lt;/code&gt; (there is also a deprecated &lt;code&gt;.eslintrc&lt;/code&gt; file format).</source>
          <target state="translated">&lt;strong&gt;配置文件&lt;/strong&gt; -在JSCS中，配置文件是 &lt;code&gt;.jscsrc&lt;/code&gt; ， &lt;code&gt;.jscsrc.json&lt;/code&gt; ， &lt;code&gt;.jscsrc.yaml&lt;/code&gt; 或 &lt;code&gt;.jscsrs.js&lt;/code&gt; 。在ESLint中，配置文件可以是 &lt;code&gt;.eslintrc.json&lt;/code&gt; ， &lt;code&gt;.eslintrc.yml&lt;/code&gt; ， &lt;code&gt;.eslintrc.yaml&lt;/code&gt; 或 &lt;code&gt;.eslintrc.js&lt;/code&gt; （也已弃用的 &lt;code&gt;.eslintrc&lt;/code&gt; 文件格式）。</target>
        </trans-unit>
        <trans-unit id="7e7c60fdb40941a7c04650e930ca4ef5a27a43b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration Files&lt;/strong&gt; - use a JavaScript, JSON or YAML file to specify configuration information for an entire directory and all of its subdirectories. This can be in the form of an &lt;a href=&quot;#configuration-file-formats&quot;&gt;&lt;code&gt;.eslintrc.*&lt;/code&gt;&lt;/a&gt; file or an &lt;code&gt;eslintConfig&lt;/code&gt; field in a &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file, both of which ESLint will look for and read automatically, or you can specify a configuration file on the &lt;a href=&quot;command-line-interface&quot;&gt;command line&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;配置文件&lt;/strong&gt; -使用JavaScript，JSON或YAML文件为整个目录及其所有子目录指定配置信息。这可以是&lt;a href=&quot;#configuration-file-formats&quot;&gt; &lt;code&gt;.eslintrc.*&lt;/code&gt; &lt;/a&gt;文件的形式，也可以是&lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt;文件中的 &lt;code&gt;eslintConfig&lt;/code&gt; 字段的形式，ESLint会自动查找并读取这两个文件，或者您可以在&lt;a href=&quot;command-line-interface&quot;&gt;命令行&lt;/a&gt;上指定配置文件。</target>
        </trans-unit>
        <trans-unit id="8e8a5f8e101664426e49a35befa2755eaff5094c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Correct&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Correct&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="e6350cf7d6acc659eaca20917c1ca6ac8fd6666e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Instead of using this option use &quot;always&quot; and pass a &quot;null&quot; option property with value &quot;ignore&quot;. This will tell ESLint to always enforce strict equality except when comparing with the &lt;code&gt;null&lt;/code&gt; literal.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;代替使用此选项，使用&amp;ldquo; always&amp;rdquo;并传递值为&amp;ldquo; ignore&amp;rdquo;的&amp;ldquo; null&amp;rdquo;选项属性。这将告诉ESLint始终执行严格的相等性，除非与 &lt;code&gt;null&lt;/code&gt; 文字进行比较。</target>
        </trans-unit>
        <trans-unit id="e1fdd0ebbb5f72ace445a12113655c6a65804e0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The following methods on the &lt;code&gt;context&lt;/code&gt; object are deprecated. Please use the corresponding methods on &lt;code&gt;SourceCode&lt;/code&gt; instead:</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;不推荐使用 &lt;code&gt;context&lt;/code&gt; 对象上的以下方法。请改为在 &lt;code&gt;SourceCode&lt;/code&gt; 上使用相应的方法：</target>
        </trans-unit>
        <trans-unit id="c26c1066ca9b4bcf09dcd1520419ccd5123d266c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The object property &lt;code&gt;maximum&lt;/code&gt; is deprecated; please use the object property &lt;code&gt;max&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用object属性的 &lt;code&gt;maximum&lt;/code&gt; ；请改为使用对象属性 &lt;code&gt;max&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07808693d351c1bf3961179bc77d8228df0bcab3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The options &lt;code&gt;&quot;unix&quot;&lt;/code&gt; and &lt;code&gt;&quot;windows&quot;&lt;/code&gt; are deprecated. If you need to enforce a specific linebreak style, use this rule in conjunction with &lt;code&gt;linebreak-style&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;不推荐使用 &lt;code&gt;&quot;unix&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;windows&quot;&lt;/code&gt; 选项。如果您需要实施特定的换行样式，请将此规则与 &lt;code&gt;linebreak-style&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="f69cd7a86dfd50efb7075779240a06f30d11a5d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the object property &lt;code&gt;applyDefaultPatterns&lt;/code&gt; is deprecated. Please use the property &lt;code&gt;applyDefaultIgnorePatterns&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用对象属性 &lt;code&gt;applyDefaultPatterns&lt;/code&gt; 。请改用属性 &lt;code&gt;applyDefaultIgnorePatterns&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="121d74800370c721111cd7b62fec7a4c3526b7a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the object property &lt;code&gt;maximum&lt;/code&gt; is deprecated. Please use the property &lt;code&gt;max&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用object属性的 &lt;code&gt;maximum&lt;/code&gt; 。请改为使用属性 &lt;code&gt;max&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6318908ad3986add6a5e1e373df74f506549530" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt; - use &lt;code&gt;.eslintrc&lt;/code&gt;, which can be either JSON or YAML.</source>
          <target state="translated">&lt;strong&gt;不推荐使用&lt;/strong&gt; -使用 &lt;code&gt;.eslintrc&lt;/code&gt; ，它可以是JSON或YAML。</target>
        </trans-unit>
        <trans-unit id="6a411cecdb230e7393693a1f9d6fe3493cafaa02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt;: The object property &lt;code&gt;avoid-escape&lt;/code&gt; is deprecated; please use the object property &lt;code&gt;avoidEscape&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用&lt;/strong&gt;：不推荐使用对象属性 &lt;code&gt;avoid-escape&lt;/code&gt; ；请改为使用对象属性 &lt;code&gt;avoidEscape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c318c6dcba96b5fe81622562c4653a966b5f5d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; All scopes.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;所有作用域。</target>
        </trans-unit>
        <trans-unit id="1d63d07318ddd8f8176cae489ff8e9f2a3d7d8e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Get the scope of a given AST node. The gotten scope's &lt;code&gt;block&lt;/code&gt; property is the node. This method never returns &lt;code&gt;function-expression-name&lt;/code&gt; scope. If the node does not have their scope, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;获取给定AST节点的范围。得到的范围的 &lt;code&gt;block&lt;/code&gt; 属性是节点。此方法从不返回 &lt;code&gt;function-expression-name&lt;/code&gt; 范围。如果节点没有作用域，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2502e7c0b0ca04673f7399d46d8f900e247c4a30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Get the scopes of a given AST node. The gotten scopes' &lt;code&gt;block&lt;/code&gt; property is the node. If the node does not have their scope, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;获取给定AST节点的范围。得到的范围的 &lt;code&gt;block&lt;/code&gt; 属性是节点。如果节点没有作用域，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d363b3e91012022cd70cf852479f174a720188a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Get the variables that a given AST node defines. The gotten variables' &lt;code&gt;def[].node&lt;/code&gt;/&lt;code&gt;def[].parent&lt;/code&gt; property is the node. If the node does not define any variable, this returns an empty array.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;获取给定AST节点定义的变量。获得的变量的 &lt;code&gt;def[].node&lt;/code&gt; / &lt;code&gt;def[].parent&lt;/code&gt; 属性是节点。如果节点未定义任何变量，则返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="1d444ab979de6d99d2f0cd11b618cbf8e2ccfb36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Returns &lt;code&gt;!this.dynamic&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;返回 &lt;code&gt;!this.dynamic&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07297c7d844bcb4b55217d7bc274ac45715324d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Returns &lt;code&gt;this.references.find(r =&amp;gt; r.identifier === node)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;返回 &lt;code&gt;this.references.find(r =&amp;gt; r.identifier === node)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="007187a08867fb25c108f3639d15a1bea0e1d62a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; Returns &lt;code&gt;this.thisFound&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;返回 &lt;code&gt;this.thisFound&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ad9c69bb1dc7f531761819279c2fdd71461cf98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;Identifier&lt;/code&gt; node of this definition.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;此定义的&amp;ldquo; &lt;code&gt;Identifier&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="1e87c3a915049bb9ad1e911500554f02ce7b30ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;Identifier&lt;/code&gt; node of this reference.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;此引用的&amp;ldquo; &lt;code&gt;Identifier&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="79543808d3d3ad8c145b7efc175082ee5b89fcdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;Scope&lt;/code&gt; object that this reference is on.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;此引用所在的 &lt;code&gt;Scope&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="5353454d32fb26fa1a5e0e93c5ba931c946f60c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;Variable&lt;/code&gt; object that this reference refers. If such variable was not defined, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;此引用引用的 &lt;code&gt;Variable&lt;/code&gt; 对象。如果未定义该变量，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d1991cac1575dce694faec96e6d6752ac18ce19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;partial&lt;/code&gt; flag.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;将 &lt;code&gt;partial&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="5bfab1b4bccd169f5b14893af242e854123548d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;stack&lt;/code&gt; flag. (I'm not sure what this means.)</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;该 &lt;code&gt;stack&lt;/code&gt; 标志。（我不确定这是什么意思。）</target>
        </trans-unit>
        <trans-unit id="e9ebdac4b754584d17fe9ec564d80fb1092bcd79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The &lt;code&gt;tainted&lt;/code&gt; flag. (always &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;该 &lt;code&gt;tainted&lt;/code&gt; 标志。（总是 &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c932e741f1645e5cf3fa3ca9cd763120e9447732" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The AST node which created this scope.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;创建此作用域的AST节点。</target>
        </trans-unit>
        <trans-unit id="038d84337b46b25fee8f60dd2b0197373fa0a772" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The ASTNode object which is right-hand side.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;右侧的ASTNode对象。</target>
        </trans-unit>
        <trans-unit id="c9a11ff5c2342225e6f07d27d0bc2fe49c905df0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of &lt;code&gt;Identifier&lt;/code&gt; nodes which define this variable. If this variable is redeclared, this array includes two or more nodes.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;定义此变量的 &lt;code&gt;Identifier&lt;/code&gt; 节点的数组。如果重新声明此变量，则此数组包含两个或更多节点。</target>
        </trans-unit>
        <trans-unit id="0e083b8ba70a3a809f455f303d81a522e42a59ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of all references on this scope. This does not include references in child scopes.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;此范围内所有引用的数组。这不包括子作用域中的引用。</target>
        </trans-unit>
        <trans-unit id="8183238f4a04b2bad9ffb943be5777c9a692637f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of all variables which are defined on this scope. This does not include variables which are defined in child scopes.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;在此范围内定义的所有变量的数组。这不包括在子作用域中定义的变量。</target>
        </trans-unit>
        <trans-unit id="236d1509a87098d65558b21013cf936514b86213" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of child scopes. This does not include grandchild scopes.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;子作用域的数组。这不包括孙范围。</target>
        </trans-unit>
        <trans-unit id="6a37c4e52b7a84f2d803647b07615988738adb15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of references which could not be resolved in this scope.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;在此范围内无法解析的引用数组。</target>
        </trans-unit>
        <trans-unit id="30653239f2d91028d647f1ad7162ffeef9df6f30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of the definitions of this variable.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;此变量定义的数组。</target>
        </trans-unit>
        <trans-unit id="305a2395e825dbde278bed861652d19721e0cfad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The array of the references of this variable.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;此变量的引用数组。</target>
        </trans-unit>
        <trans-unit id="58fb1488df081af5b68cee135690c98d00735f21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The enclosing node of the name.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;名称的封闭节点。</target>
        </trans-unit>
        <trans-unit id="d8ed0a2d527f28125603b4b3b5c8d394d591f8f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The enclosing statement node of the name.</source>
          <target state="translated">&lt;strong&gt;描述：名称&lt;/strong&gt;的封闭语句节点。</target>
        </trans-unit>
        <trans-unit id="be4a767ff967dddfb8222aad16461f1910ee0ea1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The index in the declaration statement.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;声明语句中的索引。</target>
        </trans-unit>
        <trans-unit id="df195fad0ad68009fb0edecdec164d3a68408d4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The kind of the declaration statement.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;声明语句的种类。</target>
        </trans-unit>
        <trans-unit id="df67f02c6460a8e894f70afd9828d8ac31cfb053" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The map from variable names to &lt;code&gt;tainted&lt;/code&gt; flag.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;从变量名到 &lt;code&gt;tainted&lt;/code&gt; 标志的映射。</target>
        </trans-unit>
        <trans-unit id="1f4b8428bb328cbc24d4974827b464982c783b86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The map from variable names to variable objects.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;从变量名称到变量对象的映射。</target>
        </trans-unit>
        <trans-unit id="39e8bc09ba6281bf3aba9eda39636214bc5a8786" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The name of this variable.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;此变量的名称。</target>
        </trans-unit>
        <trans-unit id="fb4a7a61464fd8acd801b1f5b8c015729f2ac5e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The parent scope. If this is the global scope then this property is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;父范围。如果这是全局范围，则此属性为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9aca2fa95361a163dcc6e5d4f9ac2f5dea5fa996" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The root scope.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;根范围。</target>
        </trans-unit>
        <trans-unit id="c551be088c876b85479e2dd36895051838e06f37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The scope which hosts variables which are defined by &lt;code&gt;var&lt;/code&gt; declarations.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;托管由 &lt;code&gt;var&lt;/code&gt; 声明定义的变量的范围。</target>
        </trans-unit>
        <trans-unit id="20468fe1f2bfbcc9f2e03707a8d0aa6a6f82e303" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The type of this definition. One of &lt;code&gt;&quot;CatchClause&quot;&lt;/code&gt;, &lt;code&gt;&quot;ClassName&quot;&lt;/code&gt;, &lt;code&gt;&quot;FunctionName&quot;&lt;/code&gt;, &lt;code&gt;&quot;ImplicitGlobalVariable&quot;&lt;/code&gt;, &lt;code&gt;&quot;ImportBinding&quot;&lt;/code&gt;, &lt;code&gt;&quot;Parameter&quot;&lt;/code&gt;, and &lt;code&gt;&quot;Variable&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;此定义的类型。其中的 &lt;code&gt;&quot;CatchClause&quot;&lt;/code&gt; &amp;ldquo; &lt;code&gt;&quot;ClassName&quot;&lt;/code&gt; ， &lt;code&gt;&quot;FunctionName&quot;&lt;/code&gt; ， &lt;code&gt;&quot;ImplicitGlobalVariable&quot;&lt;/code&gt; ， &lt;code&gt;&quot;ImportBinding&quot;&lt;/code&gt; &amp;ldquo; &lt;code&gt;&quot;Parameter&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;Variable&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb7b205ac1c4de3b9fcd54fcf2f952a239cd24e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt; The type of this scope. This is one of &lt;code&gt;&quot;block&quot;&lt;/code&gt;, &lt;code&gt;&quot;catch&quot;&lt;/code&gt;, &lt;code&gt;&quot;class&quot;&lt;/code&gt;, &lt;code&gt;&quot;for&quot;&lt;/code&gt;, &lt;code&gt;&quot;function&quot;&lt;/code&gt;, &lt;code&gt;&quot;function-expression-name&quot;&lt;/code&gt;, &lt;code&gt;&quot;global&quot;&lt;/code&gt;, &lt;code&gt;&quot;module&quot;&lt;/code&gt;, &lt;code&gt;&quot;switch&quot;&lt;/code&gt;, &lt;code&gt;&quot;with&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;此范围的类型。这是 &lt;code&gt;&quot;block&quot;&lt;/code&gt; ， &lt;code&gt;&quot;catch&quot;&lt;/code&gt; ， &lt;code&gt;&quot;class&quot;&lt;/code&gt; ， &lt;code&gt;&quot;for&quot;&lt;/code&gt; ， &lt;code&gt;&quot;function&quot;&lt;/code&gt; ， &lt;code&gt;&quot;function-expression-name&quot;&lt;/code&gt; ， &lt;code&gt;&quot;global&quot;&lt;/code&gt; ， &lt;code&gt;&quot;module&quot;&lt;/code&gt; ， &lt;code&gt;&quot;switch&quot;&lt;/code&gt; ， &lt;code&gt;&quot;with&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a58c91eaa02a13f4df54db1d615c3e064e860983" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;1&lt;/code&gt; is reading, &lt;code&gt;2&lt;/code&gt; is writing, &lt;code&gt;3&lt;/code&gt; is reading/writing.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt; &lt;code&gt;1&lt;/code&gt; 是读取， &lt;code&gt;2&lt;/code&gt; 是写入， &lt;code&gt;3&lt;/code&gt; 是读取/写入。</target>
        </trans-unit>
        <trans-unit id="4cee383e7e07773e4a8112bf2c0a92da494d5121" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if a given name is used in variable names or reference names.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;如果给定名称用于变量名称或引用名称，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7894caac9879d2f195f04eb7f0745ebba5f4240d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this is a &lt;code&gt;&quot;function&quot;&lt;/code&gt; scope which has used &lt;code&gt;arguments&lt;/code&gt; variable.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;如果这是使用 &lt;code&gt;arguments&lt;/code&gt; 变量的 &lt;code&gt;&quot;function&quot;&lt;/code&gt; 范围，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36605474d8f010edf63b7f0fe28ab85323907ba4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this program is module.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;如果该程序是模块，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14b0b94037409dffb029ff1840fef7c70819c156" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this program is strict mode implicitly. I.e., &lt;code&gt;options.impliedStrict === true&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;如果该程序隐式为严格模式，则为 &lt;code&gt;true&lt;/code&gt; 。即 &lt;code&gt;options.impliedStrict === true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1053cc9be0aa9bb51f7f33ef4d47b041c266a14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this program supports strict mode. I.e., &lt;code&gt;options.ecmaVersion &amp;gt;= 5&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;如果此程序支持严格模式，则为 &lt;code&gt;true&lt;/code&gt; 。即， &lt;code&gt;options.ecmaVersion &amp;gt;= 5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8268f6830b81c4adb5dd52396c3c0d3dd9a35f46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is reading and writing.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;如果此参考是读写的，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5d2b3adc78b6d3caf6e7aba6afd631e3ab0da6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is reading but not writing.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;如果该参考是阅读但不是写作，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30a6f8f425d563354b1f0baf37d6b5825edd72c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is reading.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;如果正在阅读此参考文献，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b59b18e6bff230841784342f7042d2b53154dee0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is resolved statically.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;如果此引用是静态解析的，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd20eb7a275e9c8ab5581bbc0c1c586f64331ecd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is writing but not reading.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;如果该参考是写作但不是阅读，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1aba86f1bf531bae103ec9e3ff7bc4a4d3f7206" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this reference is writing.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;如果正在编写此参考文献，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a2ddd3a18cc341e823438611f09b6a959d5574e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this scope contains &lt;code&gt;eval()&lt;/code&gt; invocations.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;如果此范围包含 &lt;code&gt;eval()&lt;/code&gt; 调用，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a60b7f1e92c2caedd38861e969bb95ecd0ed131" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this scope contains &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;如果此范围包含 &lt;code&gt;this&lt;/code&gt; ,则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f506f32e92524b511ad88d3d8608cc02ae497b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this scope is &lt;code&gt;&quot;function-expression-name&quot;&lt;/code&gt; scope.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;如果此范围是 &lt;code&gt;&quot;function-expression-name&quot;&lt;/code&gt; 范围，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b19a491137b8c9b3b56cd0ed75d02e46d6e52eb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this scope is dynamic. I.e., the type of this scope is &lt;code&gt;&quot;global&quot;&lt;/code&gt; or &lt;code&gt;&quot;with&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;描述：&lt;/strong&gt;如果该范围是动态的，则为 &lt;code&gt;true&lt;/code&gt; 。即，此范围的类型为 &lt;code&gt;&quot;global&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;with&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd78455aefa04ad7b2c67b07777658d01b7730cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this scope is strict mode.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;如果此范围是严格模式，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a395bb54efa49db4c3ce533e066f657b8faec55e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; if this writing reference is a variable initializer or a default value.</source>
          <target state="translated">&lt;strong&gt;说明：&lt;/strong&gt;如果此写作参考是变量初始值设定项或默认值，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d583721fdee9eda617809d6d5f0932df533809dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Description&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98d77b848a0abc76e21193a499c216a7c96c4336" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Documentation&lt;/strong&gt; - documentation issues are a type of bug in that they actively affect current users. As such, we want to address documentation issues as quickly as possible.</source>
          <target state="translated">&lt;strong&gt;文档&lt;/strong&gt; -文档问题是一种错误，因为它们会积极影响当前用户。因此，我们希望尽快解决文档问题。</target>
        </trans-unit>
        <trans-unit id="cd8c901162291381cc0db68583bdf9faf0b01cf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ESLint Comment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ESLint评论&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b02977e23c10e3c214a0ce10d03e5be4439204f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ESLint Shareable Config&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ESLint共享配置&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb69c54f5fa4ad2445922301b88b27b35d084398" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Enhancements&lt;/strong&gt; - requested improvements for existing functionality.</source>
          <target state="translated">&lt;strong&gt;增强功能&lt;/strong&gt; -请求对现有功能进行改进。</target>
        </trans-unit>
        <trans-unit id="c797ac32aa4127046dcb874228b7074f7a5c0aab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Environments&lt;/strong&gt; - which environments your script is designed to run in. Each environment brings with it a certain set of predefined global variables.</source>
          <target state="translated">&lt;strong&gt;环境&lt;/strong&gt; -您的脚本旨在在其中运行的环境。每个环境都带有一组特定的预定义全局变量。</target>
        </trans-unit>
        <trans-unit id="db36483c04f51816464104f9336215d65f9a9de4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Features&lt;/strong&gt; - new functionality that will aid users in the future.</source>
          <target state="translated">&lt;strong&gt;功能&lt;/strong&gt; -将来会帮助用户的新功能。</target>
        </trans-unit>
        <trans-unit id="af207494644ef63da627d549729c12fe3b8c4ad1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generic.&lt;/strong&gt; Rules cannot be so specific that users will have trouble understanding when to use them. A rule is typically too specific if describing what it does requires more than two &quot;and&quot;s (if a and b and c and d, then this rule warns).</source>
          <target state="translated">&lt;strong&gt;通用。&lt;/strong&gt;规则不能太具体，以至于用户难以理解何时使用它们。如果描述一条规则需要两个以上的&amp;ldquo;和&amp;rdquo;（如果a和b以及c和d，则该规则会发出警告），则该规则通常过于具体。</target>
        </trans-unit>
        <trans-unit id="6689c7c184eb755bc66eded45689e48fbf168a2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Globals&lt;/strong&gt; - the additional global variables your script accesses during execution.</source>
          <target state="translated">&lt;strong&gt;全局&lt;/strong&gt;变量-脚本在执行过程中访问的其他全局变量。</target>
        </trans-unit>
        <trans-unit id="20f8d000c45d1a39c043aba161502703deeee9cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important note:&lt;/strong&gt; If the directory for the cache does not exist make sure you add a trailing &lt;code&gt;/&lt;/code&gt; on *nix systems or &lt;code&gt;\&lt;/code&gt; in windows. Otherwise the path will be assumed to be a file.</source>
          <target state="translated">&lt;strong&gt;重要说明：&lt;/strong&gt;如果不存在用于缓存的目录，请确保在* nix系统或Windows中的 &lt;code&gt;\&lt;/code&gt; 上添加尾随 &lt;code&gt;/&lt;/code&gt; 。否则，将假定该路径为文件。</target>
        </trans-unit>
        <trans-unit id="235d36d7dcc57be47171dc560e7d69f443d908c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; If you are upgrading from 0.x, please refer to &lt;a href=&quot;migrating-to-1.0.0&quot;&gt;Migrating to 1.0.0&lt;/a&gt; as your starting point.</source>
          <target state="translated">&lt;strong&gt;重要提示：&lt;/strong&gt;如果要从0.x升级，请以&amp;ldquo; &lt;a href=&quot;migrating-to-1.0.0&quot;&gt;迁移到1.0.0&amp;rdquo;&lt;/a&gt;为起点。</target>
        </trans-unit>
        <trans-unit id="ae2eaa51443c3258dd7e45dea4a5ac94bc4017db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; If you submit a &lt;strong&gt;core&lt;/strong&gt; rule to the ESLint repository, you &lt;strong&gt;must&lt;/strong&gt; follow some conventions explained below.</source>
          <target state="translated">&lt;strong&gt;重要说明：&lt;/strong&gt;如果将&lt;strong&gt;核心&lt;/strong&gt;规则提交到ESLint存储库，则&lt;strong&gt;必须&lt;/strong&gt;遵循以下解释的约定。</target>
        </trans-unit>
        <trans-unit id="ee492b684f6bb254969929ee2dd4880d1561b9fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; The &lt;code&gt;meta.fixable&lt;/code&gt; property is mandatory for fixable rules. ESLint will throw an error if a rule that implements &lt;code&gt;fix&lt;/code&gt; functions does not &lt;a href=&quot;#rule-basics&quot;&gt;export&lt;/a&gt; the &lt;code&gt;meta.fixable&lt;/code&gt; property.</source>
          <target state="translated">&lt;strong&gt;重要提示：&lt;/strong&gt;本 &lt;code&gt;meta.fixable&lt;/code&gt; 属性是强制性的可以解决的规则。ESLint将抛出一个错误，如果一个规则实现 &lt;code&gt;fix&lt;/code&gt; 功能，不&lt;a href=&quot;#rule-basics&quot;&gt;出口&lt;/a&gt;的 &lt;code&gt;meta.fixable&lt;/code&gt; 财产。</target>
        </trans-unit>
        <trans-unit id="b42040c1488043bf228b71702cca0584f230373b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; This configuration is &lt;strong&gt;not recommended for production use&lt;/strong&gt; because it changes with every minor and major version of ESLint. Use at your own risk.</source>
          <target state="translated">&lt;strong&gt;重要说明：&lt;/strong&gt;&lt;strong&gt;不建议&lt;/strong&gt;将此配置&lt;strong&gt;用于生产环境，&lt;/strong&gt;因为ESLint的每个次要和主要版本都会更改此配置。使用风险自负。</target>
        </trans-unit>
        <trans-unit id="84927636eae797794df96a60238b07a1ac6aff3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; Unless the rule &lt;a href=&quot;#rule-basics&quot;&gt;exports&lt;/a&gt; the &lt;code&gt;meta.fixable&lt;/code&gt; property, ESLint does not apply fixes even if the rule implements &lt;code&gt;fix&lt;/code&gt; functions.</source>
          <target state="translated">&lt;strong&gt;重要提示：&lt;/strong&gt;除非规则&lt;a href=&quot;#rule-basics&quot;&gt;出口&lt;/a&gt;的 &lt;code&gt;meta.fixable&lt;/code&gt; 财产，ESLint不适修复即使规则来实现的 &lt;code&gt;fix&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="69c7924d351034165acbbfab277838dd50f1a24a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; We strongly recommend always including a default config for your plugin to avoid errors.</source>
          <target state="translated">&lt;strong&gt;重要提示：&lt;/strong&gt;我们强烈建议您始终为插件添加默认配置，以避免出现错误。</target>
        </trans-unit>
        <trans-unit id="bb214ee6eb5c7dc12ee59389822b7d98da3bd6fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; We will not be updating the ESLint v2.x versions going forward. All bug fixes and enhancements will land in ESLint v3.x.</source>
          <target state="translated">&lt;strong&gt;重要提示：以后&lt;/strong&gt;我们将不会更新ESLint v2.x版本。所有错误修复和增强功能都将包含在ESLint v3.x中。</target>
        </trans-unit>
        <trans-unit id="af1973d3d7abb5403d4358d2d444c4653aef3ef0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; Without the &lt;code&gt;fixable&lt;/code&gt; property, ESLint does not &lt;a href=&quot;#applying-fixes&quot;&gt;apply fixes&lt;/a&gt; even if the rule implements &lt;code&gt;fix&lt;/code&gt; functions. Omit the &lt;code&gt;fixable&lt;/code&gt; property if the rule is not fixable.</source>
          <target state="translated">&lt;strong&gt;重要提示：&lt;/strong&gt;如果没有 &lt;code&gt;fixable&lt;/code&gt; 财产，ESLint不&lt;a href=&quot;#applying-fixes&quot;&gt;适用修复&lt;/a&gt;即使规则来实现的 &lt;code&gt;fix&lt;/code&gt; 功能。如果规则不可修复，请省略 &lt;code&gt;fixable&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="f318a381208ca097f538b4b037cad2f3286f2d39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; You must pass in the &lt;code&gt;results&lt;/code&gt; property of the report. Passing in &lt;code&gt;report&lt;/code&gt; directly will result in an error.</source>
          <target state="translated">&lt;strong&gt;重要提示：&lt;/strong&gt;您必须传递报告的 &lt;code&gt;results&lt;/code&gt; 属性。直接传递 &lt;code&gt;report&lt;/code&gt; 将导致错误。</target>
        </trans-unit>
        <trans-unit id="d1c6167374ff4343d0a7bd093fb7451884c580ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; the &lt;code&gt;fixable&lt;/code&gt; property is mandatory for fixable rules. If this property isn't specified, ESLint will throw an error whenever the rule attempts to produce a fix. Omit the &lt;code&gt;fixable&lt;/code&gt; property if the rule is not fixable.</source>
          <target state="translated">&lt;strong&gt;重要提示：&lt;/strong&gt;在 &lt;code&gt;fixable&lt;/code&gt; 属性是强制性的可以解决的规则。如果未指定此属性，则每当规则尝试产生修订时，ESLint都会引发错误。如果规则不可修复，请省略 &lt;code&gt;fixable&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="4ef58db4ffe765c889ba28c24dfbc531efe80a6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: Note that &lt;code&gt;node_modules&lt;/code&gt; directories in, for example, a &lt;code&gt;packages&lt;/code&gt; directory in a mono repo are &lt;em&gt;not&lt;/em&gt; ignored by default and need to be added to &lt;code&gt;.eslintignore&lt;/code&gt; explicitly.</source>
          <target state="translated">&lt;strong&gt;重要说明&lt;/strong&gt;：请注意，默认情况下，默认情况下&lt;em&gt;不会&lt;/em&gt;忽略（例如）单存储库中的 &lt;code&gt;packages&lt;/code&gt; 目录中的 &lt;code&gt;node_modules&lt;/code&gt; 目录，需要将 &lt;code&gt;.eslintignore&lt;/code&gt; 显式添加到.eslintignore。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06af978db0e74adafadd870923b8d60b542ceb0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incorrect&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Incorrect&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="5c2cebb95a12bc72dedb9ca39be6d153867f8883" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS Comment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS评论&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1f3fe61c5863162813e794c8b1b86796bc5e188" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS Preset&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS预设&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="875fa661818e2fa945668f13e89129e9902797bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterBlocks&quot;&gt;disallowPaddingNewLinesAfterBlocks&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterBlocks&quot;&gt;disallowPaddingNewLinesAfterBlocks&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1afdb12b91844a96b65e7fe73d8b3fe6d0a5bcf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterUseStrict&quot;&gt;disallowPaddingNewLinesAfterUseStrict&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterUseStrict&quot;&gt;disallowPaddingNewLinesAfterUseStrict&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23b929bd9e971dba75ed1fca7e96be672a7b5b82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesBeforeExport&quot;&gt;disallowPaddingNewLinesBeforeExport&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesBeforeExport&quot;&gt;disallowPaddingNewLinesBeforeExport&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ca621a4a90b373c75564885bff675dd36886635" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewlinesBeforeKeywords&quot;&gt;disallowPaddingNewlinesBeforeKeywords&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewlinesBeforeKeywords&quot;&gt;disallowPaddingNewlinesBeforeKeywords&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cf1f14ed21f7fd76bd4ea944770b2b1261ccc06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLineAfterVariableDeclaration&quot;&gt;requirePaddingNewLineAfterVariableDeclaration&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLineAfterVariableDeclaration&quot;&gt;requirePaddingNewLineAfterVariableDeclaration&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9238f9fbbd5e5293f233a55af524c54e7219926" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterBlocks&quot;&gt;requirePaddingNewLinesAfterBlocks&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterBlocks&quot;&gt;requirePaddingNewLinesAfterBlocks&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="096a0e921738b26458570243b333d4e31296e6e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterUseStrict&quot;&gt;requirePaddingNewLinesAfterUseStrict&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterUseStrict&quot;&gt;requirePaddingNewLinesAfterUseStrict&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74d28a0823e61957e5d2c5c16bede4f960cdf9ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesBeforeExport&quot;&gt;requirePaddingNewLinesBeforeExport&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesBeforeExport&quot;&gt;requirePaddingNewLinesBeforeExport&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="792713e14953df441ea953c5ccfabc5a465b6af2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewlinesBeforeKeywords&quot;&gt;requirePaddingNewlinesBeforeKeywords&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewlinesBeforeKeywords&quot;&gt;requirePaddingNewlinesBeforeKeywords&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6539cdeff7be733fe5f689599bef3381961e2a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/validateNewlineAfterArrayElements&quot;&gt;validateNewlineAfterArrayElements&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/validateNewlineAfterArrayElements&quot;&gt;validateNewlineAfterArrayElements&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b845858c98479877f5cd84e3e3d947a67cde0556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/validateOrderInObjectKeys&quot;&gt;validateOrderInObjectKeys&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS:&lt;/strong&gt;&lt;a href=&quot;https://jscs-dev.github.io/rule/validateOrderInObjectKeys&quot;&gt;validateOrderInObjectKeys&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92d02c2711b391996382780ce54c871ecfbcf61b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowAnonymousFunctions&quot;&gt;disallowAnonymousFunctions&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowAnonymousFunctions&quot;&gt;disallowAnonymousFunctions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5518cb0a8307c096ca6e5181b41c3f34ded248b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowCapitalizedComments&quot;&gt;disallowCapitalizedComments&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowCapitalizedComments&quot;&gt;disallowCapitalizedComments&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3fce6c2919f5a7f4128db723289f261b2579f50e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowIdenticalDestructuringNames&quot;&gt;disallowIdenticalDestructuringNames&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowIdenticalDestructuringNames&quot;&gt;disallowIdenticalDestructuringNames&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2779a0f1925b729c25143da366d2ea05a156057c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterUseStrict&quot;&gt;disallowPaddingNewLinesAfterUseStrict&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesAfterUseStrict&quot;&gt;disallowPaddingNewLinesAfterUseStrict&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc46dd82ef9a36adced582b80db251ee8098f353" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesInObjects&quot;&gt;disallowPaddingNewLinesInObjects&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowPaddingNewLinesInObjects&quot;&gt;disallowPaddingNewLinesInObjects&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b76c35c4dec8659858707ea0d74f38aeff893a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowSpacesInCallExpression&quot;&gt;disallowSpacesInCallExpression&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowSpacesInCallExpression&quot;&gt;disallowSpacesInCallExpression&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecefb37a09083aea3ec664483f3936076aa7ca67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowTabs&quot;&gt;disallowTabs&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowTabs&quot;&gt;disallowTabs&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0b29a889bfed4db9fd94315be32c286fd2eb4d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/maximumNumberOfLines&quot;&gt;maximumNumberOfLines&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/maximumNumberOfLines&quot;&gt;maximumNumberOfLines&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="524522c208c793d67df0d70c51a25321ca6ead53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireAnonymousFunctions&quot;&gt;requireAnonymousFunctions&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/requireAnonymousFunctions&quot;&gt;requireAnonymousFunctions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="186a02ade6372dc7fb4ce71dac0a15dd30047be7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireCapitalizedComments&quot;&gt;requireCapitalizedComments&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/requireCapitalizedComments&quot;&gt;requireCapitalizedComments&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c55f32f60480930c50ff24b3734d8f7612790aa2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireMatchingFunctionName&quot;&gt;requireMatchingFunctionName&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/requireMatchingFunctionName&quot;&gt;requireMatchingFunctionName&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f3b86e456fcc92f2d512f9b8198df3c5dd8ed28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireMultiLineTernary&quot;&gt;requireMultiLineTernary&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/requireMultiLineTernary&quot;&gt;requireMultiLineTernary&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="051352b9689b94454c403b5767b707d6004dd6d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireNumericLiterals&quot;&gt;requireNumericLiterals&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/requireNumericLiterals&quot;&gt;requireNumericLiterals&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e99f39f1e1bc94d80fc4189abd36d57e1c90285" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterUseStrict&quot;&gt;requirePaddingNewLinesAfterUseStrict&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesAfterUseStrict&quot;&gt;requirePaddingNewLinesAfterUseStrict&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9e8eff6880ee488abbd0548b83266d9d9ea8b17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesInObjects&quot;&gt;requirePaddingNewLinesInObjects&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/requirePaddingNewLinesInObjects&quot;&gt;requirePaddingNewLinesInObjects&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14c43f82c9f67bcd07edf26203adc57f971b82cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireSpacesInCallExpression&quot;&gt;requireSpacesInCallExpression&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/requireSpacesInCallExpression&quot;&gt;requireSpacesInCallExpression&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b01ba1c29dfda05eb2c7fc519aef9d76b7858fec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/validateCommentPosition&quot;&gt;validateCommentPosition&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/validateCommentPosition&quot;&gt;validateCommentPosition&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49b5a8cc5ef8759fcbb6679a20275bfc6b56da26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/validateIndentation&quot;&gt;validateIndentation&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/validateIndentation&quot;&gt;validateIndentation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f184acb203d5acc54ea98a65572c44f57115d4d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: &lt;a href=&quot;https://jscs-dev.github.io/rule/validateLineBreaks&quot;&gt;validateLineBreaks&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：&lt;a href=&quot;https://jscs-dev.github.io/rule/validateLineBreaks&quot;&gt;validateLineBreaks&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56c9d143227ac59dde41b0e45643f66838ae798d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: This rule option &lt;code&gt;separateRequires&lt;/code&gt; roughly maps to &lt;a href=&quot;https://jscs-dev.github.io/rule/requireMultipleVarDecl&quot;&gt;requireMultipleVarDecl&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：这个规则选项 &lt;code&gt;separateRequires&lt;/code&gt; 大致映射到&lt;a href=&quot;https://jscs-dev.github.io/rule/requireMultipleVarDecl&quot;&gt;requireMultipleVarDecl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ab1eb359d57bae17ce11110702185750e352610" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: This rule provides partial compatibility with &lt;a href=&quot;https://jscs-dev.github.io/rule/requireObjectKeysOnNewLine&quot;&gt;requireObjectKeysOnNewLine&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：此规则提供与&lt;a href=&quot;https://jscs-dev.github.io/rule/requireObjectKeysOnNewLine&quot;&gt;requireObjectKeysOnNewLine的&lt;/a&gt;部分兼容性。</target>
        </trans-unit>
        <trans-unit id="cbaa291b1efb6425a2e95e390e53229057de31bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSCS&lt;/strong&gt;: This rule roughly maps to &lt;a href=&quot;https://jscs-dev.github.io/rule/disallowMultipleVarDecl&quot;&gt;disallowMultipleVarDecl&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;JSCS&lt;/strong&gt;：此规则大致映射到&lt;a href=&quot;https://jscs-dev.github.io/rule/disallowMultipleVarDecl&quot;&gt;disallowMultipleVarDecl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a02d0f0790e678981318f34a951582534122cfce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSHint&lt;/strong&gt;: &lt;code&gt;indent&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;JSHint&lt;/strong&gt;： &lt;code&gt;indent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b29586ffa53e44f145de605c41b6a451d5a6782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSHint&lt;/strong&gt;: This rule corresponds to &lt;code&gt;scripturl&lt;/code&gt; rule of JSHint.</source>
          <target state="translated">&lt;strong&gt;JSHint&lt;/strong&gt;：此规则对应于JSHint的 &lt;code&gt;scripturl&lt;/code&gt; 规则。</target>
        </trans-unit>
        <trans-unit id="cee936d2f9a974901b4dba5c409d18cbe0656291" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSHint&lt;/strong&gt;: This rule maps to the &lt;code&gt;onevar&lt;/code&gt; JSHint rule, but allows &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; to be configured separately.</source>
          <target state="translated">&lt;strong&gt;JSHint&lt;/strong&gt;：此规则映射到 &lt;code&gt;onevar&lt;/code&gt; JSHint规则，但是允许 &lt;code&gt;let&lt;/code&gt; 和 &lt;code&gt;const&lt;/code&gt; 分别配置。</target>
        </trans-unit>
        <trans-unit id="2d89295b6bfd37b6a9a89be78ffac98e4a06adde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSHint&lt;/strong&gt;: W008, W047</source>
          <target state="translated">&lt;strong&gt;JSHint&lt;/strong&gt;：W008，W047</target>
        </trans-unit>
        <trans-unit id="58e9531777492d743c03a56b4bfa95723630ba9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSHint&lt;/strong&gt;: W115</source>
          <target state="translated">&lt;strong&gt;JSHint&lt;/strong&gt;：W115</target>
        </trans-unit>
        <trans-unit id="5df1d4948f9e69843f18fd06ce2f27dcf683bc4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSLint&lt;/strong&gt;: &lt;code&gt;continue&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;JSLint&lt;/strong&gt;： &lt;code&gt;continue&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03abc3186a2e3ec2e4b5da6a44ca7df7223a5832" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JSON&lt;/strong&gt; - use &lt;code&gt;.eslintrc.json&lt;/code&gt; to define the configuration structure. ESLint's JSON files also allow JavaScript-style comments.</source>
          <target state="translated">&lt;strong&gt;JSON&lt;/strong&gt; -使用 &lt;code&gt;.eslintrc.json&lt;/code&gt; 定义配置结构。ESLint的JSON文件还允许使用JavaScript样式的注释。</target>
        </trans-unit>
        <trans-unit id="bf3b1c209a92ab9329d04e6738466afd50f9f514" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JavaScript (ESM)&lt;/strong&gt; - use &lt;code&gt;.eslintrc.cjs&lt;/code&gt; when running ESLint in JavaScript packages that specify &lt;code&gt;&quot;type&quot;:&quot;module&quot;&lt;/code&gt; in their &lt;code&gt;package.json&lt;/code&gt;. Note that ESLint does not support ESM configuration at this time.</source>
          <target state="translated">&lt;strong&gt;JavaScript（ESM）&lt;/strong&gt; - 在JavaScript包中运行 &lt;code&gt;.eslintrc.cjs&lt;/code&gt; 时使用.eslintrc.cjs，这些JavaScript包在 &lt;code&gt;package.json&lt;/code&gt; 中指定了 &lt;code&gt;&quot;type&quot;:&quot;module&quot;&lt;/code&gt; 。请注意，ESLint目前不支持ESM配置。</target>
        </trans-unit>
        <trans-unit id="5fc92ffbd2f937c19368c31d09300ab30f115610" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;JavaScript&lt;/strong&gt; - use &lt;code&gt;.eslintrc.js&lt;/code&gt; and export an object containing your configuration.</source>
          <target state="translated">&lt;strong&gt;JavaScript-&lt;/strong&gt;使用 &lt;code&gt;.eslintrc.js&lt;/code&gt; 并导出包含您的配置的对象。</target>
        </trans-unit>
        <trans-unit id="97416c386b892ff9370bf9f0e2f0d31298565ade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Library agnostic.&lt;/strong&gt; Rules must be based solely on JavaScript runtime environments and not on specific libraries or frameworks. For example, core rules shouldn't only apply if you're using jQuery but we may have some rules that apply only if you're using Node.js (a runtime).</source>
          <target state="translated">&lt;strong&gt;不可知的图书馆。&lt;/strong&gt;规则必须仅基于JavaScript运行时环境，而不能基于特定的库或框架。例如，核心规则不仅应仅在使用jQuery时适用，还可能有些规则仅在使用Node.js（运行时）时适用。</target>
        </trans-unit>
        <trans-unit id="67e380d7569e0837d2446eb4b9acd155becbd4ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Make the regular expression handling UTF-16 surrogate pairs correctly.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;使正则表达式正确处理UTF-16代理对。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70fae8edd3e9c149517dc5c247e1ce7e56536122" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Make the regular expression throwing syntax errors early as disabling &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-regular-expressions-patterns&quot;&gt;Annex B extensions&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;在禁用&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-regular-expressions-patterns&quot;&gt;附件B扩展的&lt;/a&gt;早期，使正则表达式引发语法错误。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1810758c9168765d6922336525d960f9b55650a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No conflicts.&lt;/strong&gt; No rule must directly conflict with another rule. For example, if we have a rule requiring semicolons, we cannot also have a rule disallowing semicolons (which is why we have one rule, &lt;code&gt;semi&lt;/code&gt;, that does both).</source>
          <target state="translated">&lt;strong&gt;没有冲突。&lt;/strong&gt;任何规则都不能直接与另一个规则冲突。例如，如果我们有一个要求分号的规则，那么我们也不能有禁止分号的规则（这就是为什么我们有一个规则 &lt;code&gt;semi&lt;/code&gt; 的原因，而这两个都行）。</target>
        </trans-unit>
        <trans-unit id="beb0a89baebb7d7ff29d07c57e6d6233ed7646ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Also available as a static function on &lt;code&gt;CLIEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;也可以在 &lt;code&gt;CLIEngine&lt;/code&gt; 上用作静态函数。</target>
        </trans-unit>
        <trans-unit id="50455ab1a93fffcef57eabe19fc8429ed85ead31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Arrow functions can never have their &lt;code&gt;this&lt;/code&gt; value set using &lt;code&gt;bind()&lt;/code&gt;. This rule flags all uses of &lt;code&gt;bind()&lt;/code&gt; with arrow functions as a problem</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;箭头函数永远不能使用 &lt;code&gt;bind()&lt;/code&gt; 设置其 &lt;code&gt;this&lt;/code&gt; 值。此规则 &lt;code&gt;bind()&lt;/code&gt; 带箭头功能的bind（）的所有使用标记为问题</target>
        </trans-unit>
        <trans-unit id="8b0db7671e7884ec48eec75359ca82cf8bcab23c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; As of 2016, we accept only rules that are deemed extremely important for inclusion. We prefer that new rules be implemented in plugins.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;从2016年开始，我们仅接受被认为对纳入至关重要的规则。我们希望在插件中实现新规则。</target>
        </trans-unit>
        <trans-unit id="d281e2ec6a5c50e21574945636d77b62b8806afe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; As of 2020, we only accept rules related to new ECMAScript features. We prefer that new rules be implemented in plugins.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;自2020年起，我们仅接受与新ECMAScript功能相关的规则。我们希望在插件中实现新规则。</target>
        </trans-unit>
        <trans-unit id="5cd44b9d2b032786b403680c1e68b01291151ab8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Autofixed files are not placed in the cache. Subsequent linting that does not trigger an autofix will place it in the cache.</source>
          <target state="translated">&lt;strong&gt;注意：自动&lt;/strong&gt;修复的文件未放置在缓存中。随后的触发（不会触发自动修复）会将其放置在缓存中。</target>
        </trans-unit>
        <trans-unit id="5e8afacc1817ba9914741b0463066a4e02852c26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Comments that disable warnings for a portion of a file tell ESLint not to report rule violations for the disabled code. ESLint still parses the entire file, however, so disabled code still needs to be syntactically valid JavaScript.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;禁用文件部分警告的注释告诉ESLint不要报告禁用代码的规则违例。ESLint仍会解析整个文件，因此，禁用的代码仍然必须是语法上有效的JavaScript。</target>
        </trans-unit>
        <trans-unit id="65e9cb21deb1f3e9b10ff060e4c51d4130334479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Currently you need to use full JSON Schema object rather than array in case your schema has references ($ref), because in case of array format ESLint transforms this array into a single schema without updating references that makes them incorrect (they are ignored).</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;当前，您需要使用完整的JSON模式对象而不是数组，以防您的模式具有引用（$ ref），因为在数组格式的情况下，ESLint将此数组转换为单个模式而不更新使它们不正确的引用（它们将被忽略） ）。</target>
        </trans-unit>
        <trans-unit id="6581a69e00b07d618a535806a4a29285978cb0d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Do not combine fixes for multiple issues into one branch. Use a separate branch for each issue you're working on.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;不要将针对多个问题的修订合并到一个分支中。针对您正在处理的每个问题使用单独的分支。</target>
        </trans-unit>
        <trans-unit id="e9afe00ea0bd3a5d7887bc0b406ce66c850f9fcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Earlier versions of ESLint supported additional methods on the &lt;code&gt;context&lt;/code&gt; object. Those methods were removed in the new format and should not be relied upon.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;早期版本的ESLint支持 &lt;code&gt;context&lt;/code&gt; 对象上的其他方法。这些方法已以新格式删除，因此不应依赖。</target>
        </trans-unit>
        <trans-unit id="4f2b5e8d74798a74e1d71cd719e14b5d2efbbfd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Enable the &lt;a href=&quot;../rules/no-global-assign&quot;&gt;no-global-assign&lt;/a&gt; rule to disallow modifications to read-only global variables in your code.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;启用&lt;a href=&quot;../rules/no-global-assign&quot;&gt;no-global-assign&lt;/a&gt;规则以禁止修改代码中的只读全局变量。</target>
        </trans-unit>
        <trans-unit id="78f41789a9a1d7bd3b1dc89346014e3c63ca6aa5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you are coming from a version before 1.0.0 please see the &lt;a href=&quot;user-guide/migrating-to-1.0.0&quot;&gt;migration guide&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果您来自1.0.0之前的版本，请参阅&lt;a href=&quot;user-guide/migrating-to-1.0.0&quot;&gt;迁移指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a70a33e570e988ab48c7f6e6cc1e7f020ddfc32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you just have a question that won't necessarily result in a change to ESLint, such as asking how something works or how to contribute, please use the &lt;a href=&quot;https://groups.google.com/group/eslint&quot;&gt;mailing list&lt;/a&gt; or &lt;a href=&quot;https://eslint.org/chat&quot;&gt;chat&lt;/a&gt; instead of filing an issue.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果您有一个不一定会导致ESLint更改的问题，例如询问某项工作方式或贡献方式，请使用&lt;a href=&quot;https://groups.google.com/group/eslint&quot;&gt;邮件列表&lt;/a&gt;或&lt;a href=&quot;https://eslint.org/chat&quot;&gt;聊天，&lt;/a&gt;而不要提出问题。</target>
        </trans-unit>
        <trans-unit id="6d7f55b9ec463c0929ee2cc64c6034d205688a9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you just have a question that won't necessarily result in a change to ESLint, such as asking how something works or how to contribute, please use the &lt;a href=&quot;https://groups.google.com/group/eslint&quot;&gt;mailing list&lt;/a&gt; or &lt;a href=&quot;https://gitter.im/eslint/eslint&quot;&gt;chat&lt;/a&gt; instead of filing an issue.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果您有一个不一定会导致ESLint更改的问题，例如询问某项工作方式或贡献方式，请使用&lt;a href=&quot;https://groups.google.com/group/eslint&quot;&gt;邮件列表&lt;/a&gt;或&lt;a href=&quot;https://gitter.im/eslint/eslint&quot;&gt;聊天，&lt;/a&gt;而不要提出问题。</target>
        </trans-unit>
        <trans-unit id="d00083bc1ec54901ca5364535918d10c18eadbb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you run ESLint with &lt;code&gt;--cache&lt;/code&gt; and then run ESLint without &lt;code&gt;--cache&lt;/code&gt;, the &lt;code&gt;.eslintcache&lt;/code&gt; file will be deleted. This is necessary because the results of the lint might change and make &lt;code&gt;.eslintcache&lt;/code&gt; invalid. If you want to control when the cache file is deleted, then use &lt;code&gt;--cache-location&lt;/code&gt; to specify an alternate location for the cache file.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果使用 &lt;code&gt;--cache&lt;/code&gt; 运行ESLint，然后不使用 &lt;code&gt;--cache&lt;/code&gt; 运行ESLint，则 &lt;code&gt;.eslintcache&lt;/code&gt; 文件将被删除。这是必要的，因为棉绒的结果可能会改变并使 &lt;code&gt;.eslintcache&lt;/code&gt; 无效。如果要控制何时删除缓存文件，请使用 &lt;code&gt;--cache-location&lt;/code&gt; 指定缓存文件的备用位置。</target>
        </trans-unit>
        <trans-unit id="21ca9d817155df1e8a547f18bbb0946f1c55facc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It is expected for this rule to emit one error for each mixed operator in a pair. As a result, for each two consecutive mixed operators used, a distinct error will be displayed, pointing to where the specific operator that breaks the rule is used:</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;预期此规则会为一对中的每个混合运算符发出一个错误。结果，对于每两个连续使用的混合运算符，将显示一个明显的错误，指出使用违反该规则的特定运算符的位置：</target>
        </trans-unit>
        <trans-unit id="87444ecd21d0cd1926f69065aba4e403244297e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It's a good idea to re-rerun &lt;code&gt;npm install&lt;/code&gt; whenever you pull from the main repository to ensure you have the latest development dependencies.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;每当您从主存储库中拉出时，最好重新运行 &lt;code&gt;npm install&lt;/code&gt; ,以确保您具有最新的开发依赖性。</target>
        </trans-unit>
        <trans-unit id="53466a99b9f7764d55c642b573e7a64a30debf03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It's a good idea to re-run &lt;code&gt;npm install&lt;/code&gt; whenever you pull from the main repository to ensure you have the latest development dependencies.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;每当您从主存储库中拉出时，最好重新运行 &lt;code&gt;npm install&lt;/code&gt; ,以确保您具有最新的开发依赖性。</target>
        </trans-unit>
        <trans-unit id="f2a4088cbd3a367e41689d6e94ffe74efaffd701" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; One of the libraries adds AST node properties for comments - do not use these properties. Always use &lt;code&gt;sourceCode.getComments()&lt;/code&gt; as this is the only guaranteed API for accessing comments (we will likely change how comments are handled later).</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;其中一个库添加AST节点属性以进行注释-请勿使用这些属性。始终使用 &lt;code&gt;sourceCode.getComments()&lt;/code&gt; ,因为这是访问注释的唯一保证的API（我们可能会在以后更改注释的处理方式）。</target>
        </trans-unit>
        <trans-unit id="c521db88d92c84eb7d807bdf62cf2da54f024a3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Please note that configuration will not enable any of the plugin's rules by default, and instead should be treated as a standalone config. This means that you must specify your plugin name in the &lt;code&gt;plugins&lt;/code&gt; array as well as any rules you want to enable that are part of the plugin. Any plugin rules must be prefixed with the short or long plugin name. See &lt;a href=&quot;../user-guide/configuring#configuring-plugins&quot;&gt;Configuring Plugins&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;请注意，默认情况下，配置不会启用任何插件规则，而应将其视为独立配置。这意味着您必须在 &lt;code&gt;plugins&lt;/code&gt; 数组中指定您的插件名称，以及要启用的作为该插件一部分的任何规则。任何插件规则都必须以短插件名或长插件名作为前缀。有关更多信息，请参见&lt;a href=&quot;../user-guide/configuring#configuring-plugins&quot;&gt;配置插件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7faa123b30aef583c9cee838fcb46855b4a4bff2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Plugins are resolved relative to the current working directory of the ESLint process. In other words, ESLint will load the same plugin as a user would obtain by running &lt;code&gt;require('eslint-plugin-pluginname')&lt;/code&gt; in a Node REPL from their project root.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;相对于ESLint进程的当前工作目录来解析插件。换句话说，ESLint将加载与用户从其项目根目录的Node REPL中运行 &lt;code&gt;require('eslint-plugin-pluginname')&lt;/code&gt; 所获得的插件相同的插件。</target>
        </trans-unit>
        <trans-unit id="c45f807c1f211c7c24235b84d560cd87554ee515" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Polyjuice does a good job of creating a reasonable ESLint configuration from your JSCS configuration, but it may not be 100%. You may still see different warnings than you saw with JSCS, and so you may need to further modify your configuration after using Polyjuice. This is especially true if you're using inline comments to enable/disable certain rules in JSCS (you'll need to manually convert those to use ESLint-style comments instead, see &quot;Disabling Rules Inline&quot; later in this page).</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; Polyjuice可以很好地从JSCS配置中创建合理的ESLint配置，但可能不是100％。您可能仍然会看到与JSCS不同的警告，因此在使用Polyjuice之后，可能需要进一步修改配置。如果您使用内联注释来启用/禁用JSCS中的某些规则，则尤其如此（您需要手动将其转换为使用ESLint样式的注释，请参阅本页后面的&amp;ldquo;禁用内联规则&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="77611a061ac4806612783fac5430806211fdfab3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The full code coverage report is output into &lt;code&gt;/coverage&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;完整的代码覆盖率报告将输出到 &lt;code&gt;/coverage&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="8a5b7848fc50678575012888201f2e9e660f4fd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This option only applies when you pass directory paths to the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method. If you pass glob patterns like &lt;code&gt;lib/**/*&lt;/code&gt;, ESLint will lint all files matching the glob pattern regardless of extension.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;仅当您将目录路径传递给&lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt;方法时，此选项才适用。如果传递 &lt;code&gt;lib/**/*&lt;/code&gt; 之类的glob模式，则ESLint将清除所有与glob模式匹配的文件，而不管扩展名如何。</target>
        </trans-unit>
        <trans-unit id="5354a4574d8823c1a4a4f34ce28ceb4a97458241" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This page covers the most recent rule format for ESLint &amp;gt;= 3.0.0. There is also a &lt;a href=&quot;working-with-rules-deprecated&quot;&gt;deprecated rule format&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;此页面包含ESLint&amp;gt; = 3.0.0的最新规则格式。还有一种&lt;a href=&quot;working-with-rules-deprecated&quot;&gt;不赞成使用的规则格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a477572548696d26bce47e489626b8817978c1af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This rule does not support all of the Google Closure documentation tool's use cases. As such, some code such as &lt;code&gt;(/**number*/ n =&amp;gt; n * 2);&lt;/code&gt; will be flagged as missing appropriate function JSDoc comments even though &lt;code&gt;/**number*/&lt;/code&gt; is intended to be a type hint and not a documentation block for the function. We don't recommend using this rule if you use type hints in this way.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;此规则并不支持所有Google Closure文档工具的用例。因此，一些代码例如 &lt;code&gt;(/**number*/ n =&amp;gt; n * 2);&lt;/code&gt; 将被标记为缺少适当的功能JSDoc注释，即使 &lt;code&gt;/**number*/&lt;/code&gt; 旨在作为类型提示而不是该功能的文档块。如果您以这种方式使用类型提示，我们不建议您使用此规则。</target>
        </trans-unit>
        <trans-unit id="631d65af1a47adbb9d740eaf0589e40e089c670e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Use undocumented parts of the API at your own risk. Only those parts that are specifically mentioned in this document are approved for use and will remain stable and reliable. Anything left undocumented is unstable and may change or be removed at any point.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;使用API​​的未记录部分的风险自负。仅允许在本文档中明确提及的那些部分使用，并且这些部分将保持稳定和可靠。任何未记录的内容都是不稳定的，可能随时更改或删除。</target>
        </trans-unit>
        <trans-unit id="deda6c328c3804b27cfc41a400a33ce9851025db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When specifying rules from plugins, make sure to omit &lt;code&gt;eslint-plugin-&lt;/code&gt;. ESLint uses only the unprefixed name internally to locate rules.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;从插件指定规则时，请确保省略 &lt;code&gt;eslint-plugin-&lt;/code&gt; 。ESLint在内部仅使用非前缀名称来查找规则。</target>
        </trans-unit>
        <trans-unit id="c46e12d16db360f32eead01e7c08603bd2f9ecea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;--ext&lt;/code&gt; is only used when the arguments are directories. If you use glob patterns or file names, then &lt;code&gt;--ext&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;strong&gt;注意：-- &lt;/strong&gt; &lt;code&gt;--ext&lt;/code&gt; 仅在参数为目录时使用。如果使用全局模式或文件名，则 &lt;code&gt;--ext&lt;/code&gt; 将被忽略。</target>
        </trans-unit>
        <trans-unit id="a7ff4f83c7b436d3b4b5999c8c1d638627a60796" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;--init&lt;/code&gt; assumes you have a &lt;code&gt;package.json&lt;/code&gt; file already. If you don't, make sure to run &lt;code&gt;npm init&lt;/code&gt; or &lt;code&gt;yarn init&lt;/code&gt; beforehand.</source>
          <target state="translated">&lt;strong&gt;注意：-- &lt;/strong&gt; &lt;code&gt;--init&lt;/code&gt; 假定您已经有一个 &lt;code&gt;package.json&lt;/code&gt; 文件。如果不这样做，请确保事先运行 &lt;code&gt;npm init&lt;/code&gt; 或 &lt;code&gt;yarn init&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="344dad29f241da2762dd7f62cc25793873438929" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Although this ensures zero empty lines at the EOF, most editors will still show one empty line at the end if the file ends with a line break, as illustrated below. There is no empty line at the end of a file after the last &lt;code&gt;\n&lt;/code&gt;, although editors may show an additional line. A true additional line would be represented by &lt;code&gt;\n\n&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：尽管这样可以确保EOF处的空行为零，但是如果文件以换行符结尾，大多数编辑器仍将在末尾显示一个空行，如下图所示。最后一个 &lt;code&gt;\n&lt;/code&gt; 后面的文件末尾没有空行，尽管编辑器可能会显示另外一行。真正的附加行将用 &lt;code&gt;\n\n&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b54e0f954bc408384240a6020714081d3ec40f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If you want to lint text and have your configuration be read and processed, use CLIEngine's &lt;a href=&quot;#cliengineexecuteonfiles&quot;&gt;&lt;code&gt;executeOnFiles&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#cliengineexecuteontext&quot;&gt;&lt;code&gt;executeOnText&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果您要填充文本并读取和处理您的配置，请使用CLIEngine的&lt;a href=&quot;#cliengineexecuteonfiles&quot;&gt; &lt;code&gt;executeOnFiles&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#cliengineexecuteontext&quot;&gt; &lt;code&gt;executeOnText&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6dc8e3bfd92b4dd07b36e616a5276ef8284b6034" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: It is not possible to determine if a variable will be referring to an object or an array at runtime. This rule therefore guesses the assignment type by checking whether the key being accessed is an integer. This can lead to the following possibly confusing situations:</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：在运行时无法确定变量是引用对象还是数组。因此，该规则通过检查所访问的密钥是否为整数来猜测分配类型。这可能导致以下可能令人困惑的情况：</target>
        </trans-unit>
        <trans-unit id="ef937726101d6bbf1ea792d981c362dd127505c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Notes:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="277f9286419e058430f9a225cd4bc6a93b7b0f5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other&lt;/strong&gt; - anything else.</source>
          <target state="translated">&lt;strong&gt;其他&lt;/strong&gt; -其他。</target>
        </trans-unit>
        <trans-unit id="8cf6a6684f50f3ea7a170aa3398f4403873e6036" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parameters:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Parameters:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="478ebdcce0e7a6cf53a18ef6273ae4e36f4dc9ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Presets&lt;/strong&gt; - In JSCS, there were numerous predefined configurations shipped directly within JSCS. ESLint ships with just one predefined configuration (&lt;code&gt;eslint:recommended&lt;/code&gt;) that has no style rules enabled. However, ESLint does support &lt;a href=&quot;../developer-guide/shareable-configs&quot;&gt;shareable configs&lt;/a&gt;. Shareable configs are configurations that are published on their own to npm and there are shareable configs available for almost all of the JSCS presets (see the &quot;Converting Presets&quot; section below). Additionally, the &quot;preset&quot; option in a configuration file is the equivalent of the ESLint &quot;extends&quot; option.</source>
          <target state="translated">&lt;strong&gt;预设&lt;/strong&gt; -在JSCS中，直接在JSCS中提供了许多预定义的配置。ESLint仅附带一种未启用样式规则的预定义配置（ &lt;code&gt;eslint:recommended&lt;/code&gt; ）。但是，ESLint确实支持&lt;a href=&quot;../developer-guide/shareable-configs&quot;&gt;可共享的configs&lt;/a&gt;。共享配置是自行发布到npm的配置，几乎所有JSCS预设都有可用的共享配置（请参见下面的&amp;ldquo;转换预设&amp;rdquo;部分）。此外，配置文件中的&amp;ldquo;预设&amp;rdquo;选项等效于ESLint&amp;ldquo;扩展&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="9c696028f6af1644c6acfa8977f8a9d95ddde2d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/10125&quot;&gt;eslint/eslint#10125&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint/rfcs#7&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/10125&quot;&gt;eslint / eslint＃10125&lt;/a&gt;，&lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint / rfcs＃7&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d11743e23f5e0719add32b8626153c71ede5152" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/10768&quot;&gt;eslint/eslint#10768&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/eslint/issues/10873&quot;&gt;eslint/eslint#10873&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/10768&quot;&gt;eslint / eslint＃10768&lt;/a&gt;，&lt;a href=&quot;https://github.com/eslint/eslint/issues/10873&quot;&gt;eslint / eslint＃10873&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9570d7403523bee0649cc979233838054b90e0b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11201&quot;&gt;eslint/eslint#11201&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11201&quot;&gt;eslint / eslint＃11201&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a1352f364143f800b534ad49bf1b88afe8fb865" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11370&quot;&gt;eslint/eslint#11370&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/eslint/issues/11405&quot;&gt;eslint/eslint#11405&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11370&quot;&gt;eslint / eslint＃&lt;/a&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11405&quot;&gt;11370&lt;/a&gt;，eslint / eslint＃11405</target>
        </trans-unit>
        <trans-unit id="5cc19ee730984b2d00e99b9abe3a69195a55f2c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11423&quot;&gt;eslint/eslint#11423&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11423&quot;&gt;eslint / eslint＃11423&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb5c2b7ce826d5861457ba15a03402e7a5c6577d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11456&quot;&gt;eslint/eslint#11546&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11456&quot;&gt;eslint / eslint＃11546&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6b0ecaf60230944737d612577b682e88c9bbfa1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11473&quot;&gt;eslint/eslint#11473&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11473&quot;&gt;eslint / eslint＃11473&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5b6da2e886e1772f3ab4fec0748638891213bfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11502&quot;&gt;eslint/eslint#11502&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11502&quot;&gt;eslint / eslint＃11502&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6e01fb628e67b1c3164471cbb18bc9a5c8047a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11503&quot;&gt;eslint/eslint#11503&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11503&quot;&gt;eslint / eslint＃11503&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03f328443143182343b0e7102e74b6baec83b2a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11510&quot;&gt;eslint/eslint#11510&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11510&quot;&gt;eslint / eslint＃11510&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fbf167343a6bb2d759453c0907fd72f00eb08d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11728&quot;&gt;eslint/eslint#11728&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/eslint/issues/10125&quot;&gt;eslint/eslint#10125&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint/rfcs#7&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/11728&quot;&gt;eslint / eslint＃11728&lt;/a&gt;，&lt;a href=&quot;https://github.com/eslint/eslint/issues/10125&quot;&gt;eslint / eslint＃10125&lt;/a&gt;，&lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint / rfcs＃7&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26bf2e8da0d7f94ec626e45a80bb23f4ea7b2167" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9505&quot;&gt;eslint/eslint#9505&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9505&quot;&gt;eslint / eslint＃9505&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69a50620377c84cb31a397fd1730933e6876170d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9687&quot;&gt;eslint/eslint#9687&lt;/a&gt;, &lt;a href=&quot;https://github.com/eslint/espree/issues/384&quot;&gt;eslint/espree#384&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9687&quot;&gt;eslint / eslint＃9687&lt;/a&gt;，&lt;a href=&quot;https://github.com/eslint/espree/issues/384&quot;&gt;eslint / espree＃384&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d85f50272f097ff20a2462fcb341c1ec53d175c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9990&quot;&gt;eslint/eslint#9990&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/9990&quot;&gt;eslint / eslint＃9990&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8eae0a1381872f14248d2e837bdef9b8347dd237" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/rfcs/pull/17&quot;&gt;eslint/rfcs#17&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/rfcs/pull/17&quot;&gt;eslint / rfcs＃17&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbeb40a0dfa9d70841fc25cbea97d386230305a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Related issue(s):&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint/rfcs#7&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;相关问题：&lt;/strong&gt;&lt;a href=&quot;https://github.com/eslint/rfcs/pull/7&quot;&gt;eslint / rfcs＃7&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f13297e23427bb54e61678231e790974ac7f0f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return type:&lt;/strong&gt;&lt;code&gt;Reference | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;返回类型：&lt;/strong&gt; &lt;code&gt;Reference | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c600ac93f00bbe066199904ff634a04fb92e332" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return type:&lt;/strong&gt;&lt;code&gt;Scope | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;返回类型：&lt;/strong&gt; &lt;code&gt;Scope | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52aba0e4af1c9bc08abed1d9318fafb27d8d9ce7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return type:&lt;/strong&gt;&lt;code&gt;Scope[] | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;返回类型：&lt;/strong&gt; &lt;code&gt;Scope[] | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21755435f998b6c23cd26f2246c08dc01146210c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return type:&lt;/strong&gt;&lt;code&gt;Variable[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;返回类型：&lt;/strong&gt; &lt;code&gt;Variable[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bbfb63d32076d739044ec47055380412d316e10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Return type:&lt;/strong&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;返回类型：&lt;/strong&gt; &lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="332190df6c1c50af3cdd19c670dc2cb18f7acd4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rules&lt;/strong&gt; - which rules are enabled and at what error level.</source>
          <target state="translated">&lt;strong&gt;规则&lt;/strong&gt; -启用了哪些规则以及处于什么错误级别。</target>
        </trans-unit>
        <trans-unit id="09a065f720324325574daed8c05153981da617fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;postprocess&lt;/code&gt; method&lt;/strong&gt; takes a two-dimensional array of arrays of lint messages and the filename. Each item in the input array corresponds to the part that was returned from the &lt;code&gt;preprocess&lt;/code&gt; method. The &lt;code&gt;postprocess&lt;/code&gt; method must adjust the locations of all errors to correspond to locations in the original, unprocessed code, and aggregate them into a single flat array and return it.</source>
          <target state="translated">&lt;strong&gt;的 &lt;code&gt;postprocess&lt;/code&gt; 方法&lt;/strong&gt;采用棉绒消息和文件名的阵列的二维阵列。输入数组中的每个项目都对应于从 &lt;code&gt;preprocess&lt;/code&gt; 方法返回的部分。的 &lt;code&gt;postprocess&lt;/code&gt; 方法必须调整所有的错误对应的位置，以在原始的，未加工的代码位置，并聚集成一个单一的平阵列并将其返回。</target>
        </trans-unit>
        <trans-unit id="34b590b64e5aa79c3fa18b45a59322291a219656" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;preprocess&lt;/code&gt; method&lt;/strong&gt; takes the file contents and filename as arguments, and returns an array of code blocks to lint. The code blocks will be linted separately but still be registered to the filename.</source>
          <target state="translated">&lt;strong&gt;该 &lt;code&gt;preprocess&lt;/code&gt; 方法&lt;/strong&gt;需要文件内容和文件名作为参数，返回代码块的阵列，以棉绒。这些代码块将分别插入，但仍会注册到文件名中。</target>
        </trans-unit>
        <trans-unit id="b187a38081d30402a3978e56e14522b10ff436a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To Address:&lt;/strong&gt; You should be sure to use a configuration whenever you run ESLint. However, you can still run ESLint without a configuration by passing the &lt;code&gt;--no-eslintrc&lt;/code&gt; option on the command line or setting the &lt;code&gt;useEslintrc&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;CLIEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;运行ESLint时，应确保使用配置。但是，仍然可以通过在命令行上传递 &lt;code&gt;--no-eslintrc&lt;/code&gt; 选项或将 &lt;code&gt;useEslintrc&lt;/code&gt; 选项设置为 &lt;code&gt;false&lt;/code&gt; 来在没有配置的情况下运行 &lt;code&gt;CLIEngine&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="576dd716e844bba5b1c0b942527d1cda249b46a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;讲话：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dc9d28a70914ce9eea0e57267f86f3ec660c8322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; Convert all of your rule tests to use &lt;code&gt;RuleTester&lt;/code&gt;. If you have this as a test using &lt;code&gt;ESLintTester&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;将所有规则测试转换为使用 &lt;code&gt;RuleTester&lt;/code&gt; 。如果使用 &lt;code&gt;ESLintTester&lt;/code&gt; 将其作为测试：</target>
        </trans-unit>
        <trans-unit id="8930c23ebdc44f581f19994b612663831d90e7ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If &lt;code&gt;RuleTester&lt;/code&gt; starts reporting an error about an invalid default, you can remove the &lt;code&gt;default&lt;/code&gt; property at the indicated location in your rule schema, and the rule will behave the same way. (If this happens, you might also want to verify that the rule behaves correctly when no option value is provided in that location.)</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果 &lt;code&gt;RuleTester&lt;/code&gt; 开始报告有关无效默认值的错误，则可以在规则架构中指定的位置删除 &lt;code&gt;default&lt;/code&gt; 属性，并且规则的行为方式相同。（如果发生这种情况，当您在该位置未提供任何选项值时，您可能还想验证规则是否正确运行。）</target>
        </trans-unit>
        <trans-unit id="d6ec9d60e5c2c0d06391a63cbdb3384b8833762f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If this change results in more linting errors in your codebase, you should fix them or reconfigure the rule.</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果此更改导致代码库中出现更多掉毛错误，则应修复它们或重新配置规则。</target>
        </trans-unit>
        <trans-unit id="770c5f27964d415381e58600e246b6e2a45ca7fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are currently using &lt;code&gt;--reset&lt;/code&gt;, then you should stop passing &lt;code&gt;--reset&lt;/code&gt; on the command line; no other changes are necessary. If you are not using &lt;code&gt;--reset&lt;/code&gt;, then you should review your configuration to determine which rules should be on by default. You can partially restore some of the default behavior by adding the following to your configuration file:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您当前正在使用 &lt;code&gt;--reset&lt;/code&gt; ，则应停止在命令行上传递 &lt;code&gt;--reset&lt;/code&gt; ；无需其他更改。如果未使用 &lt;code&gt;--reset&lt;/code&gt; ，则应检查配置以确定默认情况下应启用哪些规则。您可以通过将以下内容添加到配置文件中来部分恢复某些默认行为：</target>
        </trans-unit>
        <trans-unit id="41f076cf8578b53e9f3a8986241de015ab8e0237" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are currently using &lt;code&gt;CLIEngine#executeOnText()&lt;/code&gt; in your project like this:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您当前正在项目中使用 &lt;code&gt;CLIEngine#executeOnText()&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="f807e75ac117796a23196980a6ad2170f058d220" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are exporting a rule schema that checks severity, you need to make several changes:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果要导出检查严重性的规则架构，则需要进行以下更改：</target>
        </trans-unit>
        <trans-unit id="b5e466b2d2419b0bad9ffaf3dce47a73933c8d0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are using &lt;code&gt;Scope#through&lt;/code&gt; to find references of a built-in global variable, you need to make several changes.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您使用 &lt;code&gt;Scope#through&lt;/code&gt; 查找内置全局变量的引用，则需要进行一些更改。</target>
        </trans-unit>
        <trans-unit id="6cade783a3085679f35a97ecde650748cfd3e0a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are using &lt;code&gt;SourceCode&lt;/code&gt; constructor in your code, please parse the source code after it stripped BOM:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您在代码中使用 &lt;code&gt;SourceCode&lt;/code&gt; 构造函数，请在剥离BOM后解析源代码：</target>
        </trans-unit>
        <trans-unit id="27ae4cbeef62973e69f3f62ff24d032e27e36eed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are using a plugin in your configuration file, you will need to manually enable the plugin rules in the configuration file.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您在配置文件中使用插件，则需要在配置文件中手动启用插件规则。</target>
        </trans-unit>
        <trans-unit id="ba194d634d55561e298dceae820c8d85ef7450c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are using any ECMAScript 6 feature flags in &lt;code&gt;ecmaFeatures&lt;/code&gt;, you'll need to use &lt;code&gt;ecmaVersion: 6&lt;/code&gt; instead. The ECMAScript 6 feature flags are:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您在 &lt;code&gt;ecmaFeatures&lt;/code&gt; 中使用任何ECMAScript 6功能标记，则需要改用 &lt;code&gt;ecmaVersion: 6&lt;/code&gt; 。ECMAScript 6功能标志是：</target>
        </trans-unit>
        <trans-unit id="2c99a6b84e038c0957a900f5de5d3eb5c3e6ebd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are using the exported &lt;code&gt;cli&lt;/code&gt; object, switch to using &lt;code&gt;CLIEngine&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您使用的是导出的 &lt;code&gt;cli&lt;/code&gt; 对象，请改用 &lt;code&gt;CLIEngine&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1fbd9e1e8eef6c0b85a3e5ac9a507ed4dae9ee5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you are writing ES6 code, enable the &lt;code&gt;es6&lt;/code&gt; environment if you have not already done so:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您正在编写ES6代码，请启用 &lt;code&gt;es6&lt;/code&gt; 环境（如果尚未这样做）：</target>
        </trans-unit>
        <trans-unit id="56ea7ad6e98d40915dba63a00e6e1b16f3173653" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you don't want dotfiles to be matched by an override, consider adding something like &lt;code&gt;excludedFiles: [&quot;.*&quot;]&lt;/code&gt; to that &lt;code&gt;overrides&lt;/code&gt; section. See the &lt;a href=&quot;configuring#configuration-based-on-glob-patterns&quot;&gt;documentation&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您不希望点文件被覆盖匹配，请考虑在该 &lt;code&gt;overrides&lt;/code&gt; 部分添加诸如 &lt;code&gt;excludedFiles: [&quot;.*&quot;]&lt;/code&gt; 内容。有关更多详细信息，请参见&lt;a href=&quot;configuring#configuration-based-on-glob-patterns&quot;&gt;文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8a8953f9702269d96836ee318313f6a9e43c294" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you don't want to be notified by those rules, you can simply disable those rules.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您不希望这些规则通知您，则只需禁用这些规则即可。</target>
        </trans-unit>
        <trans-unit id="cf8d63e22446253b1a28eb32a79b01dc479fdd5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you encounter an error about missing files after upgrading to ESLint v5, you may want to double-check that there are no typos in the paths you provide to ESLint. To make the error go away, you can simply remove the given files or globs from the list of arguments provided to ESLint on the command line.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果升级到ESLint v5后遇到有关丢失文件的错误，则可能需要仔细检查提供给ESLint的路径中是否没有错字。为了使错误消失，您可以简单地从命令行中提供给ESLint的参数列表中删除给定的文件或glob。</target>
        </trans-unit>
        <trans-unit id="587e0b5e7b7dde8c12b10a870eef785d9451aefe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you get rule option validation errors after upgrading, ensure that any regular expressions in your rule options have no invalid escape sequences.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果升级后出现规则选项验证错误，请确保规则选项中的任何正则表达式都没有无效的转义序列。</target>
        </trans-unit>
        <trans-unit id="6bcfec1746b4cc64153f8610dfa226533b06a680" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have a custom rule that depends on the &lt;code&gt;leadingComments&lt;/code&gt; or &lt;code&gt;trailingComments&lt;/code&gt; properties of an AST node, you can now use &lt;code&gt;sourceCode.getCommentsBefore()&lt;/code&gt; and &lt;code&gt;sourceCode.getCommentsAfter()&lt;/code&gt; instead, respectively.</source>
          <target state="translated">&lt;strong&gt;要地址：&lt;/strong&gt;如果您有依赖于自定义规则 &lt;code&gt;leadingComments&lt;/code&gt; 或 &lt;code&gt;trailingComments&lt;/code&gt; 的AST节点的属性，你现在可以使用 &lt;code&gt;sourceCode.getCommentsBefore()&lt;/code&gt; 和 &lt;code&gt;sourceCode.getCommentsAfter()&lt;/code&gt; 代替，分别。</target>
        </trans-unit>
        <trans-unit id="21c8ba13c4a7bc74d0557c888eb9c47ee3c701be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have a custom rule that performs operations on comments, some additional logic might be required to ensure that shebang comments are correctly handled or filtered out:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您有一个对注释执行操作的自定义规则，则可能需要一些其他逻辑来确保正确处理或过滤掉shebang注释：</target>
        </trans-unit>
        <trans-unit id="8c51915a6fb2ba3acc4a34393b020cc435abafff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have a formatter or integration which relies on using the &lt;code&gt;source&lt;/code&gt; property on individual linting messages, you should update it to use the &lt;code&gt;source&lt;/code&gt; property on file results objects instead.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您有一个格式化程序或集成程序，该格式程序或集成程序依赖于在单个lint消息上使用 &lt;code&gt;source&lt;/code&gt; 属性，则应更新它以在文件结果对象上使用 &lt;code&gt;source&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="907aefd8c1867f5c184569bdf1f2c733e0197711" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have an empty file in your project and you don't want it to be linted, consider adding it to an &lt;a href=&quot;configuring#ignoring-files-and-directories&quot;&gt;&lt;code&gt;.eslintignore&lt;/code&gt; file&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您的项目中有一个空文件，并且您不希望它被掉毛，请考虑将其添加到&lt;a href=&quot;configuring#ignoring-files-and-directories&quot;&gt; &lt;code&gt;.eslintignore&lt;/code&gt; 文件中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d207ee9fbb85e86882b82f80f1d1a22e454fda12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have an integration that deals with the ranges of reported problems, make sure you handle large report ranges in a user-friendly way.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您具有处理报告的问题范围的集成，请确保以用户友好的方式处理较大的报告范围。</target>
        </trans-unit>
        <trans-unit id="d13d1c2c0ec09db8e58e52cefe33f1faeca1e45d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have an integration that detects all problems with linting runs by checking whether the exit code is equal to 1, update it to check whether the exit code is nonzero instead.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您有一个集成，可以通过检查退出代码是否等于1来检测掉毛运行的所有问题，请对其进行更新以检查退出代码是否为非零。</target>
        </trans-unit>
        <trans-unit id="f196fb391f011f0260dd45968583f3c6afac7768" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have both an &lt;code&gt;.eslintrc.*&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; with ESLint configuration information in the same directory, combine your configurations into just one of those files.</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果在同一目录中同时具有 &lt;code&gt;.eslintrc.*&lt;/code&gt; 和 &lt;code&gt;package.json&lt;/code&gt; 及其ESLint配置信息，请将您的配置仅合并到这些文件之一。</target>
        </trans-unit>
        <trans-unit id="c2cf3a1f46a8b6afe2db3a742f155b210a48bf89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that enumerates all properties of an AST node, consider excluding the &lt;code&gt;parent&lt;/code&gt; property or implementing cycle detection to ensure that you obtain the correct result.</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果编写了枚举AST节点所有属性的自定义规则，请考虑排除 &lt;code&gt;parent&lt;/code&gt; 属性或实施周期检测以确保获得正确的结果。</target>
        </trans-unit>
        <trans-unit id="f0521f50b4ea0897fb5d9baf4c1aba7f6664d821" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that relies on rest operators having the &lt;code&gt;ExperimentalRestProperty&lt;/code&gt; type, you should update it to also work with rest operators that have the &lt;code&gt;RestElement&lt;/code&gt; type.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您编写的自定义规则依赖于具有 &lt;code&gt;ExperimentalRestProperty&lt;/code&gt; 类型的rest运算符，则应对其进行更新以使其与具有 &lt;code&gt;RestElement&lt;/code&gt; 类型的rest运算符一起使用。</target>
        </trans-unit>
        <trans-unit id="9a741a6e5457d1d703b33b668c213de4f3bd3949" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that relies on spread operators having the &lt;code&gt;ExperimentalSpreadProperty&lt;/code&gt; type, you should update it to also work with spread operators that have the &lt;code&gt;SpreadElement&lt;/code&gt; type.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您编写的自定义规则依赖于类型为 &lt;code&gt;ExperimentalSpreadProperty&lt;/code&gt; 的扩展操作符，则应对其进行更新以与具有 &lt;code&gt;SpreadElement&lt;/code&gt; 类型的扩展操作符一起使用。</target>
        </trans-unit>
        <trans-unit id="97813ca617db45c596b02040eff0d9c98cc91b10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that relies on text nodes in JSX elements having the &lt;code&gt;Literal&lt;/code&gt; type, you should update it to also work with nodes that have the &lt;code&gt;JSXText&lt;/code&gt; type.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果编写的自定义规则依赖于 &lt;code&gt;Literal&lt;/code&gt; 类型的JSX元素中的文本节点，则应对其进行更新以与 &lt;code&gt;JSXText&lt;/code&gt; 类型的节点一起使用。</target>
        </trans-unit>
        <trans-unit id="8655c1586aa80f6c2dac1db8eb7cfc6504d64456" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that reports a problem without providing a message, update it to provide a message along with the report.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您编写了自定义规则来报告问题而不提供消息，请对其进行更新以在报告中提供消息。</target>
        </trans-unit>
        <trans-unit id="93ce1b59082f4ae2bfb0511a01c79675050cbefb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you have written a custom rule that uses the &lt;code&gt;context.getScope()&lt;/code&gt; method in node handlers, you may need to update it to account for the modified scope information.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您编写了在节点处理程序中使用 &lt;code&gt;context.getScope()&lt;/code&gt; 方法的自定义规则，则可能需要对其进行更新以说明已修改的作用域信息。</target>
        </trans-unit>
        <trans-unit id="089b7d47a2cc86930b289472505870eba900db84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you maintain a rule that uses the &lt;code&gt;eslintExplicitGlobalComment&lt;/code&gt; property, update it to use the &lt;code&gt;eslintExplicitGlobalComments&lt;/code&gt; property as a list instead.</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果您维护使用 &lt;code&gt;eslintExplicitGlobalComment&lt;/code&gt; 属性的规则，请对其进行更新以将 &lt;code&gt;eslintExplicitGlobalComments&lt;/code&gt; 属性用作列表。</target>
        </trans-unit>
        <trans-unit id="e16a4648dea2db7e4da75269412175cb302a26b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you reference a scoped NPM package as a plugin in a config file, be sure to include the scope wherever you reference it.</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果在配置文件中将作用域NPM软件包作为插件引用，请确保在引用它的任何地方都包含作用域。</target>
        </trans-unit>
        <trans-unit id="b57576e9f49ccb97c8478c916cc243f245ca7b88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you rely on ESLint loading a package like &lt;code&gt;eslint-config-@foo&lt;/code&gt;, consider renaming the package to something else.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您依靠ESLint加载 &lt;code&gt;eslint-config-@foo&lt;/code&gt; 之类的软件包，请考虑将该软件包重命名为其他名称。</target>
        </trans-unit>
        <trans-unit id="771bfe5ae6ad01e83be3811455586a25bd1bf56c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you rely on enumerating all the properties of the &lt;code&gt;eslint&lt;/code&gt; object, use something like &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; to ensure that non-enumerable keys are captured.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您依靠枚举 &lt;code&gt;eslint&lt;/code&gt; 对象的所有属性，请使用诸如 &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; 之类的方法来确保捕获了不可枚举的键。</target>
        </trans-unit>
        <trans-unit id="df4862d99b16336ac052fbd7de6b937b384ff20c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you rely on enumerating the methods of ESLint's Node.js APIs, use a function that can also access non-enumerable properties such as &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您依靠枚举ESLint的Node.js API的方法，请使用还可以访问不可枚举的属性的函数，例如 &lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2753e48e2ff870bb5294ecd04c0ac32cf093503" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you see a config validation error after upgrading, verify that your config doesn't contain any typos. If you are using an unrecognized property, you should be able to remove it from your config to restore the previous behavior.</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果升级后看到配置验证错误，请确认您的配置不包含任何错字。如果您使用无法识别的属性，则应该能够将其从配​​置中删除，以恢复以前的行为。</target>
        </trans-unit>
        <trans-unit id="5d5035b705eda89a1ab0c7bd8c774c693536ecad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you see config validation errors related to globals after updating, ensure that all values configured for globals are either &lt;code&gt;readonly&lt;/code&gt;, &lt;code&gt;writable&lt;/code&gt;, or &lt;code&gt;off&lt;/code&gt;. (ESLint also accepts some alternate spellings and variants for compatibility.)</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果在更新后看到与全局变量相关的配置验证错误，请确保为全局变量配置的所有值均为 &lt;code&gt;readonly&lt;/code&gt; ， &lt;code&gt;writable&lt;/code&gt; 或 &lt;code&gt;off&lt;/code&gt; 。（ESLint还接受一些备用拼写和变体，以实现兼容性。）</target>
        </trans-unit>
        <trans-unit id="91438d242b64b6f41b78e018f2bebd3432720acc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you see new reported errors as a result of this change, ensure that your &lt;code&gt;eslint-disable-line&lt;/code&gt; directives only span a single line. Note that &quot;block comments&quot; (delimited by &lt;code&gt;/* */&lt;/code&gt;) are still allowed to be used for directives, provided that the block comments do not contain linebreaks.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果由于此更改而看到新报告的错误，请确保 &lt;code&gt;eslint-disable-line&lt;/code&gt; 指令仅跨一行。注意，如果块注释不包含换行符，则仍允许将&amp;ldquo;块注释&amp;rdquo;（由 &lt;code&gt;/* */&lt;/code&gt; 分隔）用于指令。</target>
        </trans-unit>
        <trans-unit id="d02aad4fe8cf3ae7e80f1541633f1af83882297d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use &lt;code&gt;RuleTester&lt;/code&gt; to write tests for your custom rules, make sure the expected values in your assertions are strictly equal to the actual values.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果使用 &lt;code&gt;RuleTester&lt;/code&gt; 为自定义规则编写测试，请确保断言中的期望值严格等于实际值。</target>
        </trans-unit>
        <trans-unit id="2def4683d622c7ca990f22929b3d8fd2ec129a28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use &lt;code&gt;parser&lt;/code&gt; property with package names in test cases, update it with &lt;code&gt;require.resolve()&lt;/code&gt; function to resolve the package name to the absolute path to the package.</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果在测试案例中将 &lt;code&gt;parser&lt;/code&gt; 属性与包名称一起使用，请使用 &lt;code&gt;require.resolve()&lt;/code&gt; 函数对其进行更新，以将包名称解析为包的绝对路径。</target>
        </trans-unit>
        <trans-unit id="8c04e4b55d08a823682aa96facbb1f620bc73449" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use a global installation of ESLint (e.g. installed with &lt;code&gt;npm install eslint --global&lt;/code&gt;) along with plugins, you should install those plugins locally in the projects where you run ESLint. If your config file extends shareable configs and/or parsers, you should ensure that those packages are installed as dependencies of the project containing the config file.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您使用ESLint的全局安装（例如，使用 &lt;code&gt;npm install eslint --global&lt;/code&gt; 安装）以及插件，则应在运行ESLint的项目中本地安装这些插件。如果您的配置文件扩展了可共享的配置和/或解析器，则应确保将这些软件包安装为包含该配置文件的项目的依赖项。</target>
        </trans-unit>
        <trans-unit id="932a8a0b5d53f352ef6e81141b400f1099c1cc90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use an &lt;code&gt;.eslintignore&lt;/code&gt; file and you frequently run ESLint from somewhere other than the project root, it's possible that the patterns will be matched differently. You should update the patterns in the &lt;code&gt;.eslintignore&lt;/code&gt; file to ensure they are relative to the file, not to the working directory.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您使用 &lt;code&gt;.eslintignore&lt;/code&gt; 文件，并且经常从项目根目录以外的其他位置运行ESLint，则模式的匹配方式可能会有所不同。您应该更新 &lt;code&gt;.eslintignore&lt;/code&gt; 文件中的模式，以确保它们相对于文件而不是相对于工作目录。</target>
        </trans-unit>
        <trans-unit id="2a41e765e3b022b9ee6cacf0dd0cc958e025067c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use deprecated globals in the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;browser&lt;/code&gt;, or &lt;code&gt;jest&lt;/code&gt; environments, you can add a &lt;code&gt;globals&lt;/code&gt; section to your configuration to re-enable any globals you need. For example:</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果在 &lt;code&gt;node&lt;/code&gt; ， &lt;code&gt;browser&lt;/code&gt; 或 &lt;code&gt;jest&lt;/code&gt; 环境中使用了不建议使用的全局变量，则可以在配置中添加一个 &lt;code&gt;globals&lt;/code&gt; 部分以重新启用所需的任何全局变量。例如：</target>
        </trans-unit>
        <trans-unit id="384c76e78f089df83dae56f3eaf33a46d087f0e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use the &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; option, you should be able to upgrade to ESLint v5 without any changes, but you will encounter a deprecation warning. To avoid the warning, use &lt;code&gt;ecmaVersion: 2018&lt;/code&gt; in your config file rather than &lt;code&gt;ecmaFeatures: { experimentalObjectRestSpread: true }&lt;/code&gt;. If you would like to disallow the use of other ES2018 features, consider using rules such as &lt;a href=&quot;../rules/no-restricted-syntax&quot;&gt;&lt;code&gt;no-restricted-syntax&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果使用 &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; 选项，则应该能够升级到ESLint v5，而无需进行任何更改，但是会遇到弃用警告。为避免警告，请在配置文件中使用 &lt;code&gt;ecmaVersion: 2018&lt;/code&gt; 而不是 &lt;code&gt;ecmaFeatures: { experimentalObjectRestSpread: true }&lt;/code&gt; 。如果您想禁止使用其他ES2018功能，请考虑使用诸如&lt;a href=&quot;../rules/no-restricted-syntax&quot;&gt; &lt;code&gt;no-restricted-syntax&lt;/code&gt; 之类的&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="01db37c8acaa658a6bb43b82b83e0401cb1ad69d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you use the &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; option, you should change your config to contain this instead:</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;如果使用 &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; 选项，则应更改配置以包含此配置：</target>
        </trans-unit>
        <trans-unit id="d4c689e103cb28d77f2578eb10b0a1a4a6cbe60d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you want to mimic how &lt;code&gt;eslint:recommended&lt;/code&gt; worked in v2.x, you can use the following:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您想模仿 &lt;code&gt;eslint:recommended&lt;/code&gt; 在v2.x中的工作方式，可以使用以下命令：</target>
        </trans-unit>
        <trans-unit id="d8019bb3aa93a5e4dae201b5bfa1578295dffe98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you were using the &lt;code&gt;global&lt;/code&gt; property, please use the &lt;code&gt;globals&lt;/code&gt; property instead, which does the same thing.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您使用的是 &lt;code&gt;global&lt;/code&gt; 属性，请改为使用 &lt;code&gt;globals&lt;/code&gt; 属性，该属性具有相同的作用。</target>
        </trans-unit>
        <trans-unit id="c27b3129b5cebb205cf63438684e2accda668e14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you would like to maintain the previous behavior, update your configuration for &lt;code&gt;no-multiple-empty-lines&lt;/code&gt; by adding &lt;code&gt;{&quot;max&quot;: 2}&lt;/code&gt;, and change &lt;code&gt;func-style&lt;/code&gt; to &lt;code&gt;&quot;declaration&quot;&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您希望保持以前的行为，请通过添加 &lt;code&gt;{&quot;max&quot;: 2}&lt;/code&gt; 更新 &lt;code&gt;no-multiple-empty-lines&lt;/code&gt; 的配置，并将 &lt;code&gt;func-style&lt;/code&gt; 更改为 &lt;code&gt;&quot;declaration&quot;&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="d063f796a1fd8df02ce0b2b81e55064b5aaf28f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you're using &lt;code&gt;Linter&lt;/code&gt; with a custom parser, use &lt;a href=&quot;../developer-guide/nodejs-api#linterdefineparser&quot;&gt;&lt;code&gt;Linter#defineParser&lt;/code&gt;&lt;/a&gt; to explicitly define the parser before linting any code.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您将 &lt;code&gt;Linter&lt;/code&gt; 与自定义解析器一起使用，&lt;a href=&quot;../developer-guide/nodejs-api#linterdefineparser&quot;&gt; &lt;code&gt;Linter#defineParser&lt;/code&gt; &lt;/a&gt;在添加任何代码之前使用Linter＃defineParser显式定义解析器。</target>
        </trans-unit>
        <trans-unit id="a657be2b85aec590670ffc3351944457ebd3919a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If you've created an editor integration, or a tool that had to correct the column number, you'll need to update to just pass through the column number from ESLint. Otherwise, no change is necessary.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您创建了编辑器集成或必须纠正列号的工具，则需要更新以仅通过ESLint传递列号。否则，无需更改。</target>
        </trans-unit>
        <trans-unit id="7b0f91e6af4c0a67887070073ef1922afdcd7e4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If your config sets &lt;code&gt;ecmaVersion&lt;/code&gt; to something other than a number, you can restore the previous behavior by removing &lt;code&gt;ecmaVersion&lt;/code&gt;. (However, you may want to double-check that your config is actually working as expected.) If your config sets &lt;code&gt;parserOptions: { sourceType: &quot;module&quot; }&lt;/code&gt; without also setting &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt;, you should add &lt;code&gt;parserOptions: { ecmaVersion: 2015 }&lt;/code&gt; to restore the previous behavior.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您的配置将 &lt;code&gt;ecmaVersion&lt;/code&gt; 设置为数字以外的其他值，则可以通过删除 &lt;code&gt;ecmaVersion&lt;/code&gt; 来恢复以前的行为。（但是，您可能要仔细检查您的配置是否确实按预期工作。）如果您的配置设置 &lt;code&gt;parserOptions: { sourceType: &quot;module&quot; }&lt;/code&gt; 而不同时设置 &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt; ，则应添加 &lt;code&gt;parserOptions: { ecmaVersion: 2015 }&lt;/code&gt; 恢复以前的行为。</target>
        </trans-unit>
        <trans-unit id="d6ff72762e9c2760c32f1fc4fc00dd7d80b6fbbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; If your tests for custom rules have extra properties, you should remove those properties.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;如果您的自定义规则测试具有其他属性，则应删除这些属性。</target>
        </trans-unit>
        <trans-unit id="f472fde2bcf15025ec6cea9c37475bc3a49d3fd3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; Instead of relying on &lt;code&gt;LineComment&lt;/code&gt; and &lt;code&gt;BlockComment&lt;/code&gt;, rules can now use &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; to get all comments in a file. To check all comments of a specific type, rules can use the following pattern:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;现在，规则 &lt;code&gt;LineComment&lt;/code&gt; 依赖LineComment和 &lt;code&gt;BlockComment&lt;/code&gt; ，而是可以使用 &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; 获取文件中的所有注释。要检查特定类型的所有注释，规则可以使用以下模式：</target>
        </trans-unit>
        <trans-unit id="3991457302791a2ccf0e89f9e9beb8a7e37d9b98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; Make sure you upgrade to at least Node.js 6 when using ESLint v5. If you are unable to upgrade, we recommend continuing to use ESLint v4.x until you are able to upgrade Node.js.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;使用ESLint v5时，请至少升级到Node.js 6。如果无法升级，建议您继续使用ESLint v4.x，直到能够升级Node.js。</target>
        </trans-unit>
        <trans-unit id="19b9dd9ffb0b3c605455b34509820a64afccf522" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; Make sure you upgrade to at least Node.js 8 when using ESLint v6. If you are unable to upgrade, we recommend continuing to use ESLint v5.x until you are able to upgrade Node.js.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;使用ESLint v6时，请确保至少升级到Node.js 8。如果无法升级，我们建议继续使用ESLint v5.x，直到能够升级Node.js。</target>
        </trans-unit>
        <trans-unit id="247eb16e84dcf6771a5cd04c4fa93f82225f23ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; To mimic the &lt;code&gt;eslint:recommended&lt;/code&gt; behavior from 3.x, you can disable these rules in a config file:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;要模仿3.x中的 &lt;code&gt;eslint:recommended&lt;/code&gt; 行为，可以在配置文件中禁用以下规则：</target>
        </trans-unit>
        <trans-unit id="1513d5e57c50f48dec7ed680ce7a5a40192356a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; To mimic the &lt;code&gt;eslint:recommended&lt;/code&gt; behavior from 4.x, you can disable these rules in a config file:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;要模仿4.x中的 &lt;code&gt;eslint:recommended&lt;/code&gt; 行为，可以在配置文件中禁用以下规则：</target>
        </trans-unit>
        <trans-unit id="54fc81d9e8a3e8a0668fcf3702d5750b98c0abf6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; To mimic the &lt;code&gt;eslint:recommended&lt;/code&gt; behavior from 5.x, you can explicitly disable/enable rules in a config file as follows:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;要模仿5.x中的 &lt;code&gt;eslint:recommended&lt;/code&gt; 行为，可以在配置文件中显式禁用/启用规则，如下所示：</target>
        </trans-unit>
        <trans-unit id="416d6ba52d8d24552229dac5193497ac7375e930" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; To mimic the default config from 3.x, you can use:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;要模仿3.x中的默认配置，可以使用：</target>
        </trans-unit>
        <trans-unit id="ec581a37ebf9accbf967fe0fabaa5354c89f24d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; To restore the rule behavior from ESLint v4, you can update your config file to include the previous options:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;要从ESLint v4恢复规则行为，可以更新配置文件以包括以前的选项：</target>
        </trans-unit>
        <trans-unit id="b5e334b9b8c1b05fd9a886cd98c56fc14f47ed1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; We expect the impact of this issue to be very low because most shareable configs don't use &lt;code&gt;overrides&lt;/code&gt; blocks. However, if you use a shareable config with &lt;code&gt;overrides&lt;/code&gt; blocks, you might encounter a change in behavior due to something that is explicitly specified in your config but was inactive until now. If you would rather inherit the behavior from the shareable config, simply remove the corresponding entry from your own config. (In the example above, the previous behavior could be restored by removing &lt;code&gt;semi: &quot;off&quot;&lt;/code&gt; from &lt;code&gt;.eslintrc.js&lt;/code&gt;.)</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;我们希望此问题的影响非常小，因为大多数可共享的配置都不使用 &lt;code&gt;overrides&lt;/code&gt; 块。但是，如果您使用带有 &lt;code&gt;overrides&lt;/code&gt; 块的可共享配置，则由于配置中已明确指定但直到现在仍处于非活动状态，您可能会遇到行为更改。如果您希望从可共享的配置中继承行为，只需从您自己的配置中删除相应的条目即可。 （在上面的示例中，可以通过从 &lt;code&gt;.eslintrc.js&lt;/code&gt; 中删除 &lt;code&gt;semi: &quot;off&quot;&lt;/code&gt; 来恢复以前的行为。）</target>
        </trans-unit>
        <trans-unit id="2eb7b39d41b7eba1b375099a8306c792b28a00a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; We recommend upgrading without changing your &lt;code&gt;indent&lt;/code&gt; configuration, and fixing any new indentation errors that appear in your codebase. However, if you want to mimic how the &lt;code&gt;indent&lt;/code&gt; rule worked in 3.x, you can update your configuration:</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;建议您升级而不更改 &lt;code&gt;indent&lt;/code&gt; 配置，并修复代码库中出现的所有新缩进错误。但是，如果要模拟 &lt;code&gt;indent&lt;/code&gt; 规则在3.x中的工作方式，则可以更新配置：</target>
        </trans-unit>
        <trans-unit id="5448e647d1e18b8d154e70830c65d3ca281f27ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; You can remove the non-existent rule in your (inline) config.</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;您可以在（内联）配置中删除不存在的规则。</target>
        </trans-unit>
        <trans-unit id="258d65c83b7009266afa690a745fa8360311a395" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; You can restore the previous default behavior of the rule with:</source>
          <target state="translated">&lt;strong&gt;要解决的问题：&lt;/strong&gt;您可以使用以下方法恢复规则的先前默认行为：</target>
        </trans-unit>
        <trans-unit id="6d86228b26c28b3684eba95a90b5647e0f918ed6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; You'll need to update your rule configurations to use the new rules. ESLint v1.0.0 will also warn you when you're using a rule that has been removed and will suggest the replacement rules. Hopefully, this will result in few surprises during the upgrade process.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;您需要更新规则配置以使用新规则。当您使用已删除的规则时，ESLint v1.0.0也会警告您，并会建议替换规则。希望这将在升级过程中带来一些惊喜。</target>
        </trans-unit>
        <trans-unit id="44c64f85451fdde8fc3e5c5ba6dd407f68548a57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To address:&lt;/strong&gt; You'll need to update your rule configurations to use the new rules. ESLint v2.0.0 will also warn you when you're using a rule that has been removed and will suggest the replacement rules. Hopefully, this will result in few surprises during the upgrade process.</source>
          <target state="translated">&lt;strong&gt;解决：&lt;/strong&gt;您需要更新规则配置以使用新规则。当您使用已删除的规则时，ESLint v2.0.0也会警告您，并会建议替换规则。希望这将在升级过程中带来一些惊喜。</target>
        </trans-unit>
        <trans-unit id="97a5526a5ada884ec86f1b6da70ee21b4903d17b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;类型：&lt;/strong&gt; &lt;code&gt;ASTNode | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ab6019f558b59757ac38ebadacdec6259b91761" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode | undefined | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;类型：&lt;/strong&gt; &lt;code&gt;ASTNode | undefined | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d6feb4f8364f23f0762c4393f5bbbb273cddcb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80fd28baa41a9e3c7c8727587a99aff5ec535f94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;ASTNode[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a378958772ebf1a161b9c3e72909a3a55ed82f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Definition[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Definition[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2da3b971c96f631825ad04dbf8b4d303c9967ffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Map&amp;lt;string, Variable&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;类型：&lt;/strong&gt; &lt;code&gt;Map&amp;lt;string, Variable&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2438c848579dbaa8779c8306f1c65c23fdeacd29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Map&amp;lt;string, boolean&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;类型：&lt;/strong&gt; &lt;code&gt;Map&amp;lt;string, boolean&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92251fe75e52951a303a026f484f69cfef77aa06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Reference[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Reference[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60abdbc401d84bb32a9cb0260d994a6ae6e2f1aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Scope | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;类型：&lt;/strong&gt; &lt;code&gt;Scope | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b121b96e01956cb2ea86298f8b70b0650f3cd36c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Scope&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Scope&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e9fdc725b8ea9f58f56be7c9222dd98788cc219" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Scope[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Scope[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9838d44d4785d1084ed93bf9fdef936c32cd25d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Variable | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;类型：&lt;/strong&gt; &lt;code&gt;Variable | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04e60ad93ca62b50f3f6e8c758fe0f26ffa69e40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Variable[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Variable[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="065aeffd64b55779e6665647b1f2bf408b580573" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a57f66aafb9f93efb062089ab9897cdf052d5120" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;number | undefined | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;类型：&lt;/strong&gt; &lt;code&gt;number | undefined | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="363e8dc93cca8bc600627e60044c5a563aae006f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef5e80bb801bf5debe255dec06519da8976703cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string | undefined | null&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;类型：&lt;/strong&gt; &lt;code&gt;string | undefined | null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a876dbc9023a0657cc28e3d65b8aab30cbad7834" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ec0a4b892636f7a0221b21073a02240fe72d8df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unique.&lt;/strong&gt; No two rules can produce the same warning. Overlapping rules confuse end users and there is an expectation that core ESLint rules do not overlap.</source>
          <target state="translated">&lt;strong&gt;独特。&lt;/strong&gt;没有两个规则可以产生相同的警告。重叠的规则会使最终用户感到困惑，并且人们期望核心ESLint规则不会重叠。</target>
        </trans-unit>
        <trans-unit id="cf67d99b50404ab4358e9e339b1b708bcab25ed7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: When using this option, it is possible that new errors will start being reported whenever ESLint or custom rules are upgraded. For example, suppose a rule has a bug that causes it to report a false positive, and an &lt;code&gt;eslint-disable&lt;/code&gt; comment is added to suppress the incorrect report. If the bug is then fixed in a patch release of ESLint, the &lt;code&gt;eslint-disable&lt;/code&gt; comment will become unused since ESLint is no longer generating an incorrect report. This will result in a new reported error for the unused directive if the &lt;code&gt;report-unused-disable-directives&lt;/code&gt; option is used.</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt;：使用此选项时，每当升级ESLint或自定义规则时，就有可能开始报告新错误。例如，假设某条规则存在一个错误，导致该错误报告为误报，并添加了禁止 &lt;code&gt;eslint-disable&lt;/code&gt; 注释以禁止错误报告。如果然后在ESLint的修补程序版本中修复了该错误，则由于ESLint不再生成错误的报告，因此 &lt;code&gt;eslint-disable&lt;/code&gt; 注释。如果使用 &lt;code&gt;report-unused-disable-directives&lt;/code&gt; 选项，这将为未使用的指令导致新的报告错误。</target>
        </trans-unit>
        <trans-unit id="690b7b8d94a1b3c9d962ba1e289c660831b66f06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Widely applicable.&lt;/strong&gt; The rules we distribute need to be of importance to a large number of developers. Individual preferences for uncommon patterns are not supported.</source>
          <target state="translated">&lt;strong&gt;广泛适用。&lt;/strong&gt;我们分发的规则对于大量开发人员而言至关重要。不支持针对不常见模式的个人首选项。</target>
        </trans-unit>
        <trans-unit id="b7e9f07f31c58b5e90255be8dd4e9357ec5ea649" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;YAML&lt;/strong&gt; - use &lt;code&gt;.eslintrc.yaml&lt;/code&gt; or &lt;code&gt;.eslintrc.yml&lt;/code&gt; to define the configuration structure.</source>
          <target state="translated">&lt;strong&gt;YAML&lt;/strong&gt; -使用 &lt;code&gt;.eslintrc.yaml&lt;/code&gt; 或 &lt;code&gt;.eslintrc.yml&lt;/code&gt; 定义配置结构。</target>
        </trans-unit>
        <trans-unit id="6317608d852f5d6ad914b27925033eb82c9a3e34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;column&lt;/strong&gt;: the column where the issue is located.</source>
          <target state="translated">&lt;strong&gt;column&lt;/strong&gt;：问题所在的列。</target>
        </trans-unit>
        <trans-unit id="c793f9da1e8e133aff3fa2bad00a6d31fdba9a7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;errorCount&lt;/strong&gt;: The number of errors for the given file.</source>
          <target state="translated">&lt;strong&gt;errorCount&lt;/strong&gt;：给定文件的错误数。</target>
        </trans-unit>
        <trans-unit id="6a543f31705d32791f173cab2adcad503f396575" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;filePath&lt;/strong&gt;: The absolute path to the file that was linted.</source>
          <target state="translated">&lt;strong&gt;filePath&lt;/strong&gt;：插入文件的绝对路径。</target>
        </trans-unit>
        <trans-unit id="cea4713b9a2a74cb12b6d5b5fe7828d0536c07ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;line&lt;/strong&gt;: the line where the issue is located.</source>
          <target state="translated">&lt;strong&gt;line&lt;/strong&gt;：问题所在的行。</target>
        </trans-unit>
        <trans-unit id="854fbee9878a2d6895114384f126d4f013d10900" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;message&lt;/strong&gt;: the human readable description of the error.</source>
          <target state="translated">&lt;strong&gt;消息&lt;/strong&gt;：错误的可读描述。</target>
        </trans-unit>
        <trans-unit id="2c17ea1c475856f663a432014483567ba55bb191" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;messages&lt;/strong&gt;: An array of &lt;code&gt;message&lt;/code&gt; objects. See below for more info about messages.</source>
          <target state="translated">&lt;strong&gt;messages&lt;/strong&gt;：一组 &lt;code&gt;message&lt;/code&gt; 对象。有关消息的更多信息，请参见下文。</target>
        </trans-unit>
        <trans-unit id="6765e88da537247c90435e6a324b1062059fc3fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nodeType&lt;/strong&gt;: the type of the node in the &lt;a href=&quot;https://github.com/estree/estree/blob/master/spec.md#node-objects&quot;&gt;AST&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;nodeType&lt;/strong&gt;：&lt;a href=&quot;https://github.com/estree/estree/blob/master/spec.md#node-objects&quot;&gt;AST中&lt;/a&gt;节点的类型</target>
        </trans-unit>
        <trans-unit id="ecaaa539bfcc75f4a627ffdf411f6db7d696f895" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;output&lt;/strong&gt;: The source code for the given file with as many fixes applied as possible. This property is omitted if no fix is available.</source>
          <target state="translated">&lt;strong&gt;输出&lt;/strong&gt;：给定文件的源代码，并应用了尽可能多的修复程序。如果没有可用的修复程序，则忽略此属性。</target>
        </trans-unit>
        <trans-unit id="edf4ab88e9d76bbc1db7e3e4f3a15e8073f7f66d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;package.json&lt;/strong&gt; - create an &lt;code&gt;eslintConfig&lt;/code&gt; property in your &lt;code&gt;package.json&lt;/code&gt; file and define your configuration there.</source>
          <target state="translated">&lt;strong&gt;package.json-&lt;/strong&gt;在 &lt;code&gt;package.json&lt;/code&gt; 文件中创建 &lt;code&gt;eslintConfig&lt;/code&gt; 属性，并在其中定义配置。</target>
        </trans-unit>
        <trans-unit id="0c36fc10e4db3d87c7e40b5bfcb948a6a13aa9fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ruleId&lt;/strong&gt;: the ID of the rule that produced the error or warning.</source>
          <target state="translated">&lt;strong&gt;ruleId&lt;/strong&gt;：产生错误或警告的规则的ID。</target>
        </trans-unit>
        <trans-unit id="c109eeec65f43a816559dc91fe2767810c7df9a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;severity&lt;/strong&gt;: the severity of the failure, &lt;code&gt;1&lt;/code&gt; for warnings and &lt;code&gt;2&lt;/code&gt; for errors.</source>
          <target state="translated">&lt;strong&gt;严重性&lt;/strong&gt;：故障的严重性， &lt;code&gt;1&lt;/code&gt; 表示警告， &lt;code&gt;2&lt;/code&gt; 表示错误。</target>
        </trans-unit>
        <trans-unit id="57dc6fa09a500c31ce3a0e575d3599f23582d063" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;source&lt;/strong&gt;: The source code for the given file. This property is omitted if this file has no errors/warnings or if the &lt;code&gt;output&lt;/code&gt; property is present.</source>
          <target state="translated">&lt;strong&gt;source&lt;/strong&gt;：给定文件的源代码。如果此文件没有错误/警告或存在 &lt;code&gt;output&lt;/code&gt; 属性，则忽略此属性。</target>
        </trans-unit>
        <trans-unit id="7d06a59a13d8a1e231cb9ac165a8acbbdd84a946" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;warningCount&lt;/strong&gt;: The number of warnings for the given file.</source>
          <target state="translated">&lt;strong&gt;warningCount&lt;/strong&gt;：给定文件的警告数。</target>
        </trans-unit>
        <trans-unit id="e5bb7e063e087e28e2ba54b1ad62519de9907a17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;※1&lt;/strong&gt; Only if the configured parser provided the block-scope feature. The default parser provides the block-scope feature if &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt; is not less than &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;※1&lt;/strong&gt;仅当配置的解析器提供了块范围功能时。如果 &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt; 不小于 &lt;code&gt;6&lt;/code&gt; ,则默认解析器提供块范围功能。</target>
        </trans-unit>
        <trans-unit id="6b5b1372f368e9f1781486b1cdf873f6b6e922da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;※2&lt;/strong&gt; Only if the &lt;code&gt;for&lt;/code&gt; statement defines the iteration variable as a block-scoped variable (E.g., &lt;code&gt;for (let i = 0;;) {}&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;※2&lt;/strong&gt;仅当 &lt;code&gt;for&lt;/code&gt; 语句将迭代变量定义为块范围变量时（例如， &lt;code&gt;for (let i = 0;;) {}&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="09f95d6c9ec993bf1003f5d6d554fb0443bff70d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;※3&lt;/strong&gt; The scope of the closest ancestor node which has own scope. If the closest ancestor node has multiple scopes then it chooses the innermost scope (E.g., the &lt;code&gt;Program&lt;/code&gt; node has a &lt;code&gt;global&lt;/code&gt; scope and a &lt;code&gt;module&lt;/code&gt; scope if &lt;code&gt;Program#sourceType&lt;/code&gt; is &lt;code&gt;&quot;module&quot;&lt;/code&gt;. The innermost scope is the &lt;code&gt;module&lt;/code&gt; scope.).</source>
          <target state="translated">&lt;strong&gt;※3&lt;/strong&gt;具有自己范围的最近祖节点的范围。如果最接近的祖先节点具有多个范围，则它选择最内部的范围（例如，如果 &lt;code&gt;Program#sourceType&lt;/code&gt; 为 &lt;code&gt;&quot;module&quot;&lt;/code&gt; ，则 &lt;code&gt;Program&lt;/code&gt; 节点具有 &lt;code&gt;global&lt;/code&gt; 范围和 &lt;code&gt;module&lt;/code&gt; 范围。最内部的范围是 &lt;code&gt;module&lt;/code&gt; 范围。）。</target>
        </trans-unit>
        <trans-unit id="02dd576fcd740e7b5e9d1205a01abf4062eb573e" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;The examples in this section were adapted from the &lt;a href=&quot;https://github.com/estools/esquery&quot;&gt;esquery&lt;/a&gt; documentation.&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;本节中的示例改编自&lt;a href=&quot;https://github.com/estools/esquery&quot;&gt;esquery&lt;/a&gt;文档。&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="03c6124784996ca17201568f44be632340e6b1a5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../developer-guide/shareable-configs&quot;&gt;sharable configuration&lt;/a&gt; is an npm package that exports a configuration object. Make sure the package has been installed to a directory where ESLint can require it.</source>
          <target state="translated">阿&lt;a href=&quot;../developer-guide/shareable-configs&quot;&gt;可共享的配置&lt;/a&gt;是一个NPM包出口的结构对象。确保该软件包已安装到ESLint可能需要的目录中。</target>
        </trans-unit>
        <trans-unit id="7e3808288d05eda6a0a0bc6617b661283e01236f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../developer-guide/working-with-plugins&quot;&gt;plugin&lt;/a&gt; is an npm package that usually exports rules. Some plugins also export one or more named &lt;a href=&quot;../developer-guide/working-with-plugins#configs-in-plugins&quot;&gt;configurations&lt;/a&gt;. Make sure the package has been installed to a directory where ESLint can require it.</source>
          <target state="translated">一个&lt;a href=&quot;../developer-guide/working-with-plugins&quot;&gt;插件&lt;/a&gt;是一个NPM包，通常出口规则。一些插件还导出一个或多个命名&lt;a href=&quot;../developer-guide/working-with-plugins#configs-in-plugins&quot;&gt;配置&lt;/a&gt;。确保该软件包已安装到ESLint可能需要的目录中。</target>
        </trans-unit>
        <trans-unit id="1a0fff9a243305a444f630687fb971bc9bdfe21c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;.eslintrc.js&lt;/code&gt;, &lt;code&gt;.eslintrc.json&lt;/code&gt;, &lt;code&gt;.eslintrc.yml&lt;/code&gt;, &lt;code&gt;.eslintrc.yaml&lt;/code&gt;, or &lt;code&gt;.eslintrc&lt;/code&gt; file either in your project or home directory.</source>
          <target state="translated">一个 &lt;code&gt;.eslintrc.js&lt;/code&gt; ， &lt;code&gt;.eslintrc.json&lt;/code&gt; ， &lt;code&gt;.eslintrc.yml&lt;/code&gt; ， &lt;code&gt;.eslintrc.yaml&lt;/code&gt; 或 &lt;code&gt;.eslintrc&lt;/code&gt; 在你的项目或主目录文件要么。</target>
        </trans-unit>
        <trans-unit id="f3619e056c08299691ba58f3ad597b15a5f58a85" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;catch&lt;/code&gt; clause that only rethrows the original error is redundant, and has no effect on the runtime behavior of the program. These redundant clauses can be a source of confusion and code bloat, so it's better to disallow these unnecessary &lt;code&gt;catch&lt;/code&gt; clauses.</source>
          <target state="translated">一 &lt;code&gt;catch&lt;/code&gt; ，只有重新抛出原来的错误条款是多余的，对程序运行时的行为没有任何影响。这些多余的子句可能会造成混乱和代码膨胀，因此最好不要使用这些不必要的 &lt;code&gt;catch&lt;/code&gt; 子句。</target>
        </trans-unit>
        <trans-unit id="0a389d325d348388839c0ea0782dd37813615760" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;fixing&lt;/code&gt; object.</source>
          <target state="translated">甲 &lt;code&gt;fixing&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="afc4e0872788b98de54fe4422f2e108e57fa3981" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;for&lt;/code&gt; loop with a stop condition that can never be reached, such as one with a counter that moves in the wrong direction, will run infinitely. While there are occasions when an infinite loop is intended, the convention is to construct such loops as &lt;code&gt;while&lt;/code&gt; loops. More typically, an infinite for loop is a bug.</source>
          <target state="translated">一个 &lt;code&gt;for&lt;/code&gt; 与永远无法达到停止条件，如一个用计数器在错误的方向上移动时，会无限循环运行。尽管有时会出现无限循环，但惯例是将此类循环构造为 &lt;code&gt;while&lt;/code&gt; 循环。更典型地，无限for循环是一个错误。</target>
        </trans-unit>
        <trans-unit id="2cd8c1349fe0d5d2b91629e8af2a67df9488040b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;return;&lt;/code&gt; statement with nothing after it is redundant, and has no effect on the runtime behavior of a function. This can be confusing, so it's better to disallow these redundant statements.</source>
          <target state="translated">一个 &lt;code&gt;return;&lt;/code&gt; 多余的语句，并且对函数的运行时行为没有影响。这可能会造成混淆，因此最好不要使用这些多余的语句。</target>
        </trans-unit>
        <trans-unit id="427cd3d37ea17c688301c4da2e2f301a2ab49185" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;yield&lt;/code&gt; or &lt;code&gt;await&lt;/code&gt; expression interrupts the assignment after the old value is read, and before the new value is set.</source>
          <target state="translated">甲 &lt;code&gt;yield&lt;/code&gt; 或 &lt;code&gt;await&lt;/code&gt; 表达中断旧值后的分配被读出，并且前的新值被设定。</target>
        </trans-unit>
        <trans-unit id="a8008f59ac6bd0272b139f77f91c4eaec29b91f9" translate="yes" xml:space="preserve">
          <source>A base configuration is provided to CLIEngine using the &lt;code&gt;baseConfig&lt;/code&gt; option.</source>
          <target state="translated">使用 &lt;code&gt;baseConfig&lt;/code&gt; 选项向CLIEngine提供了基本配置。</target>
        </trans-unit>
        <trans-unit id="e28f9cb5b2f38c73f333a34c925f89046619923e" translate="yes" xml:space="preserve">
          <source>A better coding convention for lists and object literals in JavaScript by isaacs</source>
          <target state="translated">一个更好的JavaScript中列表和对象素养的编码约定,作者:Isaacs。</target>
        </trans-unit>
        <trans-unit id="d49d168e597f86961f6dcfcf63c7b9fc77704bde" translate="yes" xml:space="preserve">
          <source>A blank space should appear after commas in argument lists.</source>
          <target state="translated">在参数列表中的逗号后面应该出现一个空格。</target>
        </trans-unit>
        <trans-unit id="ef78cae4223417784fc081e3049bf82c27f50e97" translate="yes" xml:space="preserve">
          <source>A boolean to specify if numbers used as array indexes are considered okay. &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">一个布尔值，用于指定用作数组索引的数字是否正确。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b7b9c7e87b07ab8e6b27ae07b3318b9229c238c" translate="yes" xml:space="preserve">
          <source>A boolean to specify if numbers used in default value assignments are considered okay. &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">一个布尔值，用于指定是否将默认值分配中使用的数字视为可以。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecfb57e8d83833b6672bf2fe7c3041c7c3250ac2" translate="yes" xml:space="preserve">
          <source>A boolean to specify if numbers used in the context of array indexes (e.g., &lt;code&gt;data[2]&lt;/code&gt;) are considered okay. &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">一个布尔值，用于指定在数组索引的上下文中使用的数字（例如 &lt;code&gt;data[2]&lt;/code&gt; ）是否被认为是可以的。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58cc5d7724902bc0ab2d7f5534386b2ad9db7d72" translate="yes" xml:space="preserve">
          <source>A boolean to specify if we should check for the const keyword in variable declaration of numbers. &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">一个布尔值，用于指定是否应在数字的变量声明中检查const关键字。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8cedb82f008edd3bab5474e2a26c1601087ba6d" translate="yes" xml:space="preserve">
          <source>A boolean to specify if we should detect numbers when setting object properties for example. &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">一个布尔值，用于指定例如在设置对象属性时是否应该检测数字。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25a836ff88ff9ac017f2c0ded333e7db070f9c18" translate="yes" xml:space="preserve">
          <source>A boolean value that defaults to &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;considerPropertyDescriptor&lt;/code&gt; is set to true, the check will take into account the use of &lt;code&gt;Object.create&lt;/code&gt;, &lt;code&gt;Object.defineProperty&lt;/code&gt;, &lt;code&gt;Object.defineProperties&lt;/code&gt;, and &lt;code&gt;Reflect.defineProperty&lt;/code&gt;.</source>
          <target state="translated">一个布尔值，默认为 &lt;code&gt;false&lt;/code&gt; 。如果 &lt;code&gt;considerPropertyDescriptor&lt;/code&gt; 设置为true，则检查将考虑使用 &lt;code&gt;Object.create&lt;/code&gt; ， &lt;code&gt;Object.defineProperty&lt;/code&gt; ， &lt;code&gt;Object.defineProperties&lt;/code&gt; 和 &lt;code&gt;Reflect.defineProperty&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5b15bec3881a375f3e36051b0e45319e9cb7dfa" translate="yes" xml:space="preserve">
          <source>A boolean value that defaults to &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;includeCommonJSModuleExports&lt;/code&gt; is set to true, &lt;code&gt;module.exports&lt;/code&gt; and &lt;code&gt;module[&quot;exports&quot;]&lt;/code&gt; will be checked by this rule.</source>
          <target state="translated">一个布尔值，默认为 &lt;code&gt;false&lt;/code&gt; 。如果 &lt;code&gt;includeCommonJSModuleExports&lt;/code&gt; 设置为true， &lt;code&gt;module.exports&lt;/code&gt; 此规则将检查module.exports和 &lt;code&gt;module[&quot;exports&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d392c027987959cf72d4b9853225e2e854601add" translate="yes" xml:space="preserve">
          <source>A code block has two properties &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;filename&lt;/code&gt;; the &lt;code&gt;text&lt;/code&gt; property is the content of the block and the &lt;code&gt;filename&lt;/code&gt; property is the name of the block. Name of the block can be anything, but should include the file extension, that would tell the linter how to process the current block. The linter will check &lt;a href=&quot;../user-guide/command-line-interface#--ext&quot;&gt;&lt;code&gt;--ext&lt;/code&gt; CLI option&lt;/a&gt; to see if the current block should be linted, and resolve &lt;code&gt;overrides&lt;/code&gt; configs to check how to process the current block.</source>
          <target state="translated">代码块具有两个属性 &lt;code&gt;text&lt;/code&gt; 和 &lt;code&gt;filename&lt;/code&gt; ；该 &lt;code&gt;text&lt;/code&gt; 属性块的内容和 &lt;code&gt;filename&lt;/code&gt; 属性块的名称。块的名称可以是任何东西，但应包含文件扩展名，该扩展名将告诉linter如何处理当前块。&lt;a href=&quot;../user-guide/command-line-interface#--ext&quot;&gt; &lt;code&gt;--ext&lt;/code&gt; &lt;/a&gt;将检查--ext CLI选项，以查看是否应该删除当前块，并解决 &lt;code&gt;overrides&lt;/code&gt; 配置以检查如何处理当前块。</target>
        </trans-unit>
        <trans-unit id="64eea8b8a1570a4ad89b64de14a057281d21a3ef" translate="yes" xml:space="preserve">
          <source>A common suggestion to avoid this problem would be to wrap the inside of the &lt;code&gt;for&lt;/code&gt; loop with &lt;code&gt;users.hasOwnProperty(id)&lt;/code&gt;. However, if this rule is strictly enforced throughout your codebase you won't need to take that step.</source>
          <target state="translated">避免此问题的常见建议是使用 &lt;code&gt;users.hasOwnProperty(id)&lt;/code&gt; 包装 &lt;code&gt;for&lt;/code&gt; 循环的内部。但是，如果在整个代码库中严格执行此规则，则无需采取此步骤。</target>
        </trans-unit>
        <trans-unit id="2d60456477141b8b709fcd647cee4d38da3405ac" translate="yes" xml:space="preserve">
          <source>A common use case for this option is to avoid useless renaming when the identifier is not intended to be used later in the code.</source>
          <target state="translated">这个选项的一个常见用例是,当标识符不打算在以后的代码中使用时,避免无用的重命名。</target>
        </trans-unit>
        <trans-unit id="a0b21754babbfe85667b0e2efa5cf5de9ec46843" translate="yes" xml:space="preserve">
          <source>A configuration file can extend the set of enabled rules from base configurations.</source>
          <target state="translated">一个配置文件可以从基础配置中扩展出一套启用规则。</target>
        </trans-unit>
        <trans-unit id="55883fdd5b9ae6a9a3a826f2405d1dbe3a0d2fed" translate="yes" xml:space="preserve">
          <source>A configuration file passed on the command line using &lt;code&gt;-c&lt;/code&gt; (or to CLIEngine using &lt;code&gt;configFile&lt;/code&gt;).</source>
          <target state="translated">使用 &lt;code&gt;-c&lt;/code&gt; 在命令行上传递的配置文件（或使用 &lt;code&gt;configFile&lt;/code&gt; 传递到CLIEngine ）。</target>
        </trans-unit>
        <trans-unit id="d16c6623d752e6bb2d6001c0a413fae9b0ced782" translate="yes" xml:space="preserve">
          <source>A configuration is an object which has 3 properties; &lt;code&gt;blankLine&lt;/code&gt;, &lt;code&gt;prev&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;. For example, &lt;code&gt;{ blankLine: &quot;always&quot;, prev: &quot;var&quot;, next: &quot;return&quot; }&lt;/code&gt; means &quot;one or more blank lines are required between a variable declaration and a &lt;code&gt;return&lt;/code&gt; statement.&quot; You can supply any number of configurations. If a statement pair matches multiple configurations, the last matched configuration will be used.</source>
          <target state="translated">配置是具有3个属性的对象。 &lt;code&gt;blankLine&lt;/code&gt; ， &lt;code&gt;prev&lt;/code&gt; 和 &lt;code&gt;next&lt;/code&gt; 。例如， &lt;code&gt;{ blankLine: &quot;always&quot;, prev: &quot;var&quot;, next: &quot;return&quot; }&lt;/code&gt; 表示&amp;ldquo;在变量声明和 &lt;code&gt;return&lt;/code&gt; 语句之间需要一个或多个空行。&amp;rdquo; 您可以提供任何数量的配置。如果一条语句对匹配多个配置，则将使用最后一个匹配的配置。</target>
        </trans-unit>
        <trans-unit id="20e05403cd1ed3924830384794a2169931e37d6c" translate="yes" xml:space="preserve">
          <source>A confusing aspect of JavaScript is that a function returns &lt;code&gt;undefined&lt;/code&gt; if any of the following are true:</source>
          <target state="translated">JavaScript的一个令人困惑的方面是，如果满足以下任一条件，则函数将返回 &lt;code&gt;undefined&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b6b8b178eb884eddcdef7dfcdc5d1458ee22bc10" translate="yes" xml:space="preserve">
          <source>A constant expression (for example, a literal) as a test condition might be a typo or development trigger for a specific behavior. For example, the following code looks as if it is not ready for production.</source>
          <target state="translated">作为测试条件的常量表达式(例如,一个文字)可能是一个排版错误或特定行为的开发触发。例如,下面的代码看起来好像还没有准备好用于生产。</target>
        </trans-unit>
        <trans-unit id="43ef8f442efa45ca28465cdb5709982cce56b8d9" translate="yes" xml:space="preserve">
          <source>A criticism of the Single Var Pattern in JavaScript, and a simple alternative</source>
          <target state="translated">对JavaScript中Single Var模式的批评,以及一个简单的替代方案。</target>
        </trans-unit>
        <trans-unit id="86af3e246df7da9e6606e3119d58789e53135d52" translate="yes" xml:space="preserve">
          <source>A file provided on the command line does not exist</source>
          <target state="translated">命令行提供的文件不存在。</target>
        </trans-unit>
        <trans-unit id="ac0f8365160b25f524152aaae9aa2a1eda0000c5" translate="yes" xml:space="preserve">
          <source>A formatter that only cares about the total count of errors and warnings will look like this:</source>
          <target state="translated">一个只关心错误和警告总数的formatter会是这样的。</target>
        </trans-unit>
        <trans-unit id="836d7f5bf58c6c5d4d4a624f7d1ee3a0a7646a0b" translate="yes" xml:space="preserve">
          <source>A getter and setter for the same property don't necessarily have to be defined adjacent to each other.</source>
          <target state="translated">同一属性的getter和setter不一定要相邻定义。</target>
        </trans-unit>
        <trans-unit id="5c7f11d210d922ba42114538c835a711d4da81d4" translate="yes" xml:space="preserve">
          <source>A glob or folder provided on the command line does not match any lintable files</source>
          <target state="translated">命令行中提供的 glob 或文件夹不匹配任何 lintable 文件。</target>
        </trans-unit>
        <trans-unit id="81ab6c931da3b6d371be8a93021d9e9b0d48645d" translate="yes" xml:space="preserve">
          <source>A glob specific configuration can have &lt;code&gt;extends&lt;/code&gt; setting, but the &lt;code&gt;root&lt;/code&gt; property in the extended configs is ignored. The &lt;code&gt;ignorePatterns&lt;/code&gt; property in the extended configs is used only for the files the glob specific configuration matched.</source>
          <target state="translated">特定于全局的配置可以具有 &lt;code&gt;extends&lt;/code&gt; 设置，但是扩展配置中的 &lt;code&gt;root&lt;/code&gt; 属性将被忽略。扩展配置中的 &lt;code&gt;ignorePatterns&lt;/code&gt; 属性仅用于glob特定配置匹配的文件。</target>
        </trans-unit>
        <trans-unit id="b522d213270e7f352fb5949b49df3ae85baa01a7" translate="yes" xml:space="preserve">
          <source>A glob specific configuration works almost the same as any other ESLint config. Override blocks can contain any configuration options that are valid in a regular config, with the exception of &lt;code&gt;root&lt;/code&gt; and &lt;code&gt;ignorePatterns&lt;/code&gt;.</source>
          <target state="translated">全局特定的配置几乎与任何其他ESLint配置相同。覆盖块可以包含在常规配置中有效的任何配置选项，但 &lt;code&gt;root&lt;/code&gt; 和 &lt;code&gt;ignorePatterns&lt;/code&gt; 除外。</target>
        </trans-unit>
        <trans-unit id="206b9feb0f4bbb8e333ef78a8e28833be8f4c5ae" translate="yes" xml:space="preserve">
          <source>A keyword followed by a parenthesis should be separated by a space.</source>
          <target state="translated">关键词后面的括号应该用空格隔开。</target>
        </trans-unit>
        <trans-unit id="a25b0a4a01a0fa0cb35fab86df6cc5fb0278bfe8" translate="yes" xml:space="preserve">
          <source>A line of code containing too many statements can be difficult to read. Code is generally read from the top down, especially when scanning, so limiting the number of statements allowed on a single line can be very beneficial for readability and maintainability.</source>
          <target state="translated">一行代码中包含过多的语句会让人难以阅读。代码一般都是自上而下地阅读,特别是在扫描时,所以限制单行允许的语句数量对可读性和可维护性非常有利。</target>
        </trans-unit>
        <trans-unit id="bfdb73170961eda63243d915f3c732b85dd2985f" translate="yes" xml:space="preserve">
          <source>A module in Node.js is a simple or complex functionality organized in a JavaScript file which can be reused throughout the Node.js application. The keyword &lt;code&gt;require&lt;/code&gt; is used in Node.js/CommonJS to import modules into an application. This way you can have dynamic loading where the loaded module name isn't predefined /static, or where you conditionally load a module only if it's &quot;truly required&quot;.</source>
          <target state="translated">Node.js中的模块是组织在JavaScript文件中的简单或复杂功能，可以在整个Node.js应用程序中重复使用。关键字 &lt;code&gt;require&lt;/code&gt; 在的Node.js / CommonJS的用于导入模块到一个应用程序。这样，您可以在未预定义的模块名称/ static的情况下动态加载，或者仅在&amp;ldquo;确实需要&amp;rdquo;模块时才有条件地加载模块。</target>
        </trans-unit>
        <trans-unit id="4e913c7680534d6cb99080f78a2661196f66cafe" translate="yes" xml:space="preserve">
          <source>A more complex report will look something like this:</source>
          <target state="translated">一个更复杂的报告会是这样的。</target>
        </trans-unit>
        <trans-unit id="308dd0db07bb7acf7df7d9b6b57f161aa88b87d2" translate="yes" xml:space="preserve">
          <source>A more detailed breakdown of supported patterns and directories ESLint ignores by default can be found in &lt;a href=&quot;configuring#ignoring-files-and-directories&quot;&gt;Configuring ESLint&lt;/a&gt;.</source>
          <target state="translated">默认情况下，ESLint会忽略所支持的模式和目录的详细分类，请参见&amp;ldquo; &lt;a href=&quot;configuring#ignoring-files-and-directories&quot;&gt;配置ESLint&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f24536f4837bf59d260b3c116ca923e95986c97" translate="yes" xml:space="preserve">
          <source>A name of &lt;a href=&quot;../user-guide/formatters/index&quot;&gt;built-in formatters&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../user-guide/formatters/index&quot;&gt;内置格式化程序的&lt;/a&gt;名称。</target>
        </trans-unit>
        <trans-unit id="575b2d931afc6e0399849bc47d0e35b312f3114f" translate="yes" xml:space="preserve">
          <source>A name of &lt;a href=&quot;https://www.npmjs.com/search?q=eslintformatter&quot;&gt;third-party formatters&lt;/a&gt;. For examples:</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/search?q=eslintformatter&quot;&gt;第三方格式化程序的&lt;/a&gt;名称。举些例子：</target>
        </trans-unit>
        <trans-unit id="11f95a5a52d06fa719a2b5d0e69c8f678b2e9461" translate="yes" xml:space="preserve">
          <source>A number of style guides require or disallow line breaks between arguments of a function call.</source>
          <target state="translated">许多样式指南要求或不允许在函数调用的参数之间换行。</target>
        </trans-unit>
        <trans-unit id="eacd1564ab62e8653cfd111bed2b118e40aadb40" translate="yes" xml:space="preserve">
          <source>A number of style guides require or disallow line breaks between array elements.</source>
          <target state="translated">一些样式指南要求或不允许在数组元素之间换行。</target>
        </trans-unit>
        <trans-unit id="b6daa5b1d39d0ececccc70c8f1cdb04d99e441cc" translate="yes" xml:space="preserve">
          <source>A number of style guides require or disallow line breaks inside of array brackets.</source>
          <target state="translated">一些样式指南要求或不允许在数组括号内换行。</target>
        </trans-unit>
        <trans-unit id="ba799235c50035c5b374a07ef2c2489a022d92f0" translate="yes" xml:space="preserve">
          <source>A number of style guides require or disallow line breaks inside of object braces and other tokens.</source>
          <target state="translated">一些样式指南要求或不允许在对象括号和其他标记内换行。</target>
        </trans-unit>
        <trans-unit id="0173ae7c66b71705fbe3bf702c3a75f916fc100b" translate="yes" xml:space="preserve">
          <source>A number of style guides require or disallow spaces between array brackets and other tokens. This rule applies to both array literals and destructuring assignments (ECMAScript 6).</source>
          <target state="translated">一些样式指南要求或不允许在数组括号和其他标记之间留有空格。这条规则适用于数组的字面意义和析构任务(ECMAScript 6)。</target>
        </trans-unit>
        <trans-unit id="6685f6247b9014739a73df049fb6cc36b0707e79" translate="yes" xml:space="preserve">
          <source>A path to the file that defines a formatter. The path must contain one or more path separators (&lt;code&gt;/&lt;/code&gt;) in order to distinguish if it's a path or not. For example, start with &lt;code&gt;./&lt;/code&gt;.</source>
          <target state="translated">定义格式化程序的文件路径。该路径必须包含一个或多个路径分隔符（ &lt;code&gt;/&lt;/code&gt; ），以便区分它是否是路径。例如，以 &lt;code&gt;./&lt;/code&gt; 开头。</target>
        </trans-unit>
        <trans-unit id="96e7763e5080c827a61b70944488cf0e26f29ada" translate="yes" xml:space="preserve">
          <source>A pattern that's becoming more common is to give function expressions names to aid in debugging. For example:</source>
          <target state="translated">一个越来越常见的模式是给函数表达式命名以帮助调试。例如</target>
        </trans-unit>
        <trans-unit id="ea5cdd669b54ca8ffb4b5b8c7c790d4b0d11fa08" translate="yes" xml:space="preserve">
          <source>A read-only global variable can be a built-in ES global (e.g. &lt;code&gt;Array&lt;/code&gt;), an environment specific global (e.g. &lt;code&gt;window&lt;/code&gt; in the browser environment), or a global variable defined as &lt;code&gt;readonly&lt;/code&gt; in the configuration file or in a &lt;code&gt;/*global */&lt;/code&gt; comment.</source>
          <target state="translated">只读全局变量可以是内置ES全局变量（例如 &lt;code&gt;Array&lt;/code&gt; ），特定于环境的全局变量（例如浏览器环境中的 &lt;code&gt;window&lt;/code&gt; ）或在配置文件或 &lt;code&gt;/*global */&lt;/code&gt; 定义为 &lt;code&gt;readonly&lt;/code&gt; 的全局变量。 /评论。</target>
        </trans-unit>
        <trans-unit id="9e0054f9727b38ae6114afa1db04f33844004776" translate="yes" xml:space="preserve">
          <source>A return statement with a value should not use parentheses unless they make the return value more obvious in some way. Example:</source>
          <target state="translated">带值的返回语句不应该使用括号,除非它们以某种方式使返回值更明显。例子:</target>
        </trans-unit>
        <trans-unit id="8f17ce2af731b0cf58f28e612f21a508401014a8" translate="yes" xml:space="preserve">
          <source>A rule can use the current node and its surrounding tree to report or fix problems.</source>
          <target state="translated">一个规则可以使用当前节点及其周围的树来报告或修复问题。</target>
        </trans-unit>
        <trans-unit id="4be5e6a9bd29b708e70db8babc0b03b78dbd1c85" translate="yes" xml:space="preserve">
          <source>A selector is a string that can be used to match nodes in an Abstract Syntax Tree (AST). This is useful for describing a particular syntax pattern in your code.</source>
          <target state="translated">选择器是一个字符串,可以用来匹配抽象语法树(AST)中的节点。这对于描述代码中的特定语法模式非常有用。</target>
        </trans-unit>
        <trans-unit id="6915f26f7dc1530331a66cc13216ce9e856f8f57" translate="yes" xml:space="preserve">
          <source>A simple fix for this problem could be to rewrite the offending line from scratch. This might also be a problem introduced by the text editor: if rewriting the line does not fix it, try using a different editor.</source>
          <target state="translated">对于这个问题,一个简单的解决方法就是从头开始重写违规的行。这也可能是文本编辑器带来的问题:如果重写该行不能解决这个问题,请尝试使用不同的编辑器。</target>
        </trans-unit>
        <trans-unit id="a3e71be966e5f1571ea9763af48e414a021cf939" translate="yes" xml:space="preserve">
          <source>A strict mode directive is a &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; literal at the beginning of a script or function body. It enables strict mode semantics.</source>
          <target state="translated">严格模式指令是脚本或函数体开头的 &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; 文字。它启用严格的模式语义。</target>
        </trans-unit>
        <trans-unit id="9c57440c6b4f6db8e00e8b319bccc1d1604f8ba4" translate="yes" xml:space="preserve">
          <source>A string which must be either &lt;code&gt;&quot;always&quot;&lt;/code&gt; (the default), to enforce initialization at declaration, or &lt;code&gt;&quot;never&quot;&lt;/code&gt; to disallow initialization during declaration. This rule applies to &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, and &lt;code&gt;const&lt;/code&gt; variables, however &lt;code&gt;&quot;never&quot;&lt;/code&gt; is ignored for &lt;code&gt;const&lt;/code&gt; variables, as unassigned &lt;code&gt;const&lt;/code&gt;s generate a parse error.</source>
          <target state="translated">一个字符串，必须为 &lt;code&gt;&quot;always&quot;&lt;/code&gt; （默认值）以在声明时强制初始化，或为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 以禁止声明时初始化。此规则适用于 &lt;code&gt;var&lt;/code&gt; ， &lt;code&gt;let&lt;/code&gt; 和 &lt;code&gt;const&lt;/code&gt; 的变量，但 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 为忽略 &lt;code&gt;const&lt;/code&gt; 的变量，未分配的 &lt;code&gt;const&lt;/code&gt; 小号产生解析错误。</target>
        </trans-unit>
        <trans-unit id="9575765dd4d7230fd057ffcbe983765b294ae80e" translate="yes" xml:space="preserve">
          <source>A test case is an object with the following properties:</source>
          <target state="translated">一个测试用例是一个具有以下属性的对象。</target>
        </trans-unit>
        <trans-unit id="25402932feca00f38e09e6ca5b7c31477fe21891" translate="yes" xml:space="preserve">
          <source>A variable &lt;code&gt;foo&lt;/code&gt; is considered to be used if any of the following are true:</source>
          <target state="translated">如果满足以下任一条件，则认为使用了变量 &lt;code&gt;foo&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d66ca9673a95b3a663eaf3f3446fa9ff9cf7c024" translate="yes" xml:space="preserve">
          <source>A variable declaration is permitted anywhere a statement can go, even nested deeply inside other blocks. This is often undesirable due to variable hoisting, and moving declarations to the root of the program or function body can increase clarity. Note that &lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-block-bindings&quot;&gt;block bindings&lt;/a&gt; (&lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;) are not hoisted and therefore they are not affected by this rule.</source>
          <target state="translated">允许在语句可以到达的任何位置进行变量声明，甚至可以将其嵌套在其他块中。由于变量提升，这通常是不希望的，将声明移至程序或函数主体的根目录可以提高清晰度。注意，&lt;a href=&quot;https://leanpub.com/understandinges6/read#leanpub-auto-block-bindings&quot;&gt;块绑定&lt;/a&gt;（ &lt;code&gt;let&lt;/code&gt; ， &lt;code&gt;const&lt;/code&gt; ）不会被悬挂，因此它们不受此规则的影响。</target>
        </trans-unit>
        <trans-unit id="c94d0d2ff85b4c8409e8498075e6309cbae9ef3f" translate="yes" xml:space="preserve">
          <source>A variable is &lt;em&gt;not&lt;/em&gt; considered to be used if it is only ever declared (&lt;code&gt;var foo = 5&lt;/code&gt;) or assigned to (&lt;code&gt;foo = 7&lt;/code&gt;).</source>
          <target state="translated">如果仅声明变量（ &lt;code&gt;var foo = 5&lt;/code&gt; ）或将变量赋给变量（ &lt;code&gt;foo = 7&lt;/code&gt; ），则认为该变量&lt;em&gt;不&lt;/em&gt;被使用。</target>
        </trans-unit>
        <trans-unit id="a874a11ae4a94e3610adc77e83b5927c07b204ca" translate="yes" xml:space="preserve">
          <source>A variable or property is reassigned to a new value which is based on its old value.</source>
          <target state="translated">一个变量或属性被重新分配到一个基于旧值的新值。</target>
        </trans-unit>
        <trans-unit id="7dd32e4a288d5369cb2e79caa2870b11139743be" translate="yes" xml:space="preserve">
          <source>A way to determine the node types as defined by &lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree&lt;/a&gt; is to use &lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST Explorer&lt;/a&gt; with the espree parser.</source>
          <target state="translated">确定&lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree&lt;/a&gt;定义的节点类型的一种方法是将&lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST Explorer&lt;/a&gt;与espree解析器一起使用。</target>
        </trans-unit>
        <trans-unit id="2271b14edc45904cc47bb0f92baf4a74500757a6" translate="yes" xml:space="preserve">
          <source>ALE</source>
          <target state="translated">ALE</target>
        </trans-unit>
        <trans-unit id="e70d4e47700375d0be401f693c74eef6991b7082" translate="yes" xml:space="preserve">
          <source>AST Node Type</source>
          <target state="translated">AST 节点类型</target>
        </trans-unit>
        <trans-unit id="c446c962a2b4445cdb957511e0b5cc3393b8d123" translate="yes" xml:space="preserve">
          <source>AST Nodes no longer have comment properties</source>
          <target state="translated">AST节点不再有注释属性</target>
        </trans-unit>
        <trans-unit id="d6692192c75f1af7938f07f9f1af0696b6f6b2d6" translate="yes" xml:space="preserve">
          <source>AST node type: &lt;code&gt;ForStatement&lt;/code&gt;</source>
          <target state="translated">AST节点类型： &lt;code&gt;ForStatement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9bf40cf26a73c367ed22afa40853e78a88516d25" translate="yes" xml:space="preserve">
          <source>AST nodes no longer have comment properties</source>
          <target state="translated">AST节点不再有注释属性</target>
        </trans-unit>
        <trans-unit id="bd34e75aa7865f007f08ac294fd329a2d8cd24e1" translate="yes" xml:space="preserve">
          <source>About &lt;code&gt;onCodePathSegmentLoop&lt;/code&gt;</source>
          <target state="translated">关于 &lt;code&gt;onCodePathSegmentLoop&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="062e0e828a9d9112137faebc7569d53ad6b18eaa" translate="yes" xml:space="preserve">
          <source>About Complexity</source>
          <target state="translated">关于复杂度</target>
        </trans-unit>
        <trans-unit id="b779c06c341c07ca1ffb8dd81ce10a4a085087a6" translate="yes" xml:space="preserve">
          <source>Accepting a Rule</source>
          <target state="translated">接受规则</target>
        </trans-unit>
        <trans-unit id="81be0e1ba0ee31f4985c9d67dada1b00da7487bc" translate="yes" xml:space="preserve">
          <source>Accepting a Rule Change</source>
          <target state="translated">接受规则变更</target>
        </trans-unit>
        <trans-unit id="ca36c601812025fe58057e92a05f6f683d6d84fa" translate="yes" xml:space="preserve">
          <source>Access further control over this rule's behavior via an options object.</source>
          <target state="translated">通过选项对象访问对该规则行为的进一步控制。</target>
        </trans-unit>
        <trans-unit id="2e08a06dd2fa9ae5c39052ab6543bc1691e9530b" translate="yes" xml:space="preserve">
          <source>Access the file system</source>
          <target state="translated">访问文件系统</target>
        </trans-unit>
        <trans-unit id="35b88db2f1e9e841f51c72fd0f61599541bb7876" translate="yes" xml:space="preserve">
          <source>Accessing Code Paths</source>
          <target state="translated">访问代码路径</target>
        </trans-unit>
        <trans-unit id="bfb10a773b7cebdf807ce0cc70fe3dc0fe02182e" translate="yes" xml:space="preserve">
          <source>Accessing Comments</source>
          <target state="translated">访问评论</target>
        </trans-unit>
        <trans-unit id="6d55809203eb5aff13f4e06c5c7e2bf1fb26217b" translate="yes" xml:space="preserve">
          <source>Accessing Shebangs</source>
          <target state="translated">进入谢邦斯</target>
        </trans-unit>
        <trans-unit id="7706485af3af832462d09475d2669526c29e13d8" translate="yes" xml:space="preserve">
          <source>Accessing an array element through a computed index will fall under the category &lt;code&gt;object&lt;/code&gt; destructuring.</source>
          <target state="translated">通过计算索引访问数组元素将属于类别 &lt;code&gt;object&lt;/code&gt; 解构。</target>
        </trans-unit>
        <trans-unit id="460c13f18291c5bc04269d7fad531d4041f17a30" translate="yes" xml:space="preserve">
          <source>Accessing an object property whose key is an integer will fall under the category &lt;code&gt;array&lt;/code&gt; destructuring.</source>
          <target state="translated">访问其键为整数的对象属性将属于类别 &lt;code&gt;array&lt;/code&gt; 解构。</target>
        </trans-unit>
        <trans-unit id="8a776847f4d167c1b25e573491e2e435b11aa5da" translate="yes" xml:space="preserve">
          <source>Accessing comments</source>
          <target state="translated">访问评论</target>
        </trans-unit>
        <trans-unit id="69ebcd59e2591617f7f8f6024f21a857d0c7360a" translate="yes" xml:space="preserve">
          <source>Actually labeled statements in JavaScript can be used with other than loop and switch statements. However, this way is ultra rare, not well-known, so this would be confusing developers.</source>
          <target state="translated">其实JavaScript中的标签语句除了循环和switch语句外,还可以和其他语句一起使用。但这种方式超少见,不为人知,所以这会让开发人员感到困惑。</target>
        </trans-unit>
        <trans-unit id="02c3b754dfbd93ab56540aade8e2c3f780191601" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;supportsAutofix: true&lt;/code&gt; property to the processor.</source>
          <target state="translated">向处理器添加 &lt;code&gt;supportsAutofix: true&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="00858d2635ba9c2a9c7ac282d89b7f6cbcebc9c4" translate="yes" xml:space="preserve">
          <source>Add these &lt;code&gt;keywords&lt;/code&gt; to help users find your formatter:</source>
          <target state="translated">添加以下 &lt;code&gt;keywords&lt;/code&gt; 以帮助用户找到您的格式化程序：</target>
        </trans-unit>
        <trans-unit id="b19ea4bd9e18d3a1a7038fa04e68cdf64a34ab3f" translate="yes" xml:space="preserve">
          <source>Add these keywords into your &lt;code&gt;package.json&lt;/code&gt; file to make it easy for others to find.</source>
          <target state="translated">将这些关键字添加到您的 &lt;code&gt;package.json&lt;/code&gt; 文件中，以方便其他人查找。</target>
        </trans-unit>
        <trans-unit id="3b0ba8ee04639b15125daec80a1aac00deaef410" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;:exit&lt;/code&gt; to the end of a selector will cause the listener to be called when the matching nodes are exited during traversal, rather than when they are entered.</source>
          <target state="translated">在选择器的末尾添加 &lt;code&gt;:exit&lt;/code&gt; 会导致在遍历过程中退出匹配节点而不是输入匹配节点时调用侦听器。</target>
        </trans-unit>
        <trans-unit id="b45b75823c55d8218979c87efd326a30b99d5341" translate="yes" xml:space="preserve">
          <source>Adding Shared Settings</source>
          <target state="translated">添加共享设置</target>
        </trans-unit>
        <trans-unit id="474d40db0ddeac1b2a8f15efaa569bdb7394c2a2" translate="yes" xml:space="preserve">
          <source>Adding newlines visibly separates the return statements from the previous lines, making it clear where the function exits and what value it returns:</source>
          <target state="translated">添加换行符明显地将返回语句与前几行分开,使函数在哪里退出,返回什么值,一目了然。</target>
        </trans-unit>
        <trans-unit id="f21fc61dc4820e7abd9d84a4d1d6ad03d3036bb0" translate="yes" xml:space="preserve">
          <source>Adding the second &lt;code&gt;bar&lt;/code&gt; in the above example is optional. If you leave off the function name then when the function throws an exception you are likely to get something similar to &lt;code&gt;anonymous function&lt;/code&gt; in the stack trace. If you provide the optional name for a function expression then you will get the name of the function expression in the stack trace.</source>
          <target state="translated">在上面的示例中添加第二个 &lt;code&gt;bar&lt;/code&gt; 是可选的。如果省略函数名称，则当函数引发异常时，您可能会在堆栈跟踪中得到类似于 &lt;code&gt;anonymous function&lt;/code&gt; 的信息。如果为函数表达式提供了可选名称，则将在堆栈跟踪中获得函数表达式的名称。</target>
        </trans-unit>
        <trans-unit id="7e15f7cd7c678492038a3fb0df79c3d8a550be82" translate="yes" xml:space="preserve">
          <source>Additional empty lines may be inserted to group related properties or otherwise improve readability.</source>
          <target state="translated">可以插入额外的空行,以便对相关属性进行分组或以其他方式提高可读性。</target>
        </trans-unit>
        <trans-unit id="6a56d991b0497bc7202cd311488f3455e1fb7855" translate="yes" xml:space="preserve">
          <source>Additionally, &lt;code&gt;context.getScope()&lt;/code&gt; incorrectly returned the parent scope of the proper scope on &lt;code&gt;CatchClause&lt;/code&gt; (in ES5), &lt;code&gt;ForStatement&lt;/code&gt; (in ≧ES2015), &lt;code&gt;ForInStatement&lt;/code&gt; (in ≧ES2015), &lt;code&gt;ForOfStatement&lt;/code&gt;, and &lt;code&gt;WithStatement&lt;/code&gt; nodes.</source>
          <target state="translated">此外， &lt;code&gt;context.getScope()&lt;/code&gt; 错误地返回了 &lt;code&gt;CatchClause&lt;/code&gt; （在ES5中）， &lt;code&gt;ForStatement&lt;/code&gt; （在ES2015中）， &lt;code&gt;ForInStatement&lt;/code&gt; （在ES2015中）， &lt;code&gt;ForOfStatement&lt;/code&gt; 和 &lt;code&gt;WithStatement&lt;/code&gt; 节点上适当范围的父范围。</target>
        </trans-unit>
        <trans-unit id="d71b0e551b8a05566bb571b697959c043848b0db" translate="yes" xml:space="preserve">
          <source>Additionally, arrow functions are:</source>
          <target state="translated">此外,箭头功能是。</target>
        </trans-unit>
        <trans-unit id="79ad21267e1505f504ad3b64cf80fe8e17376b42" translate="yes" xml:space="preserve">
          <source>Additionally, if you are using &lt;code&gt;context.ecmaFeatures&lt;/code&gt; inside of your rules, then you'll need to update your code in the following ways:</source>
          <target state="translated">此外，如果您在规则内使用 &lt;code&gt;context.ecmaFeatures&lt;/code&gt; ，则需要通过以下方式更新代码：</target>
        </trans-unit>
        <trans-unit id="23b72b358b52f3185d5a6b610477da5e25ee339c" translate="yes" xml:space="preserve">
          <source>Additionally, if you intend to access large array indices directly, like:</source>
          <target state="translated">此外,如果你打算直接访问大数组索引,比如。</target>
        </trans-unit>
        <trans-unit id="9eb5d082a2557226722f3bf4035b8c0c5d988b88" translate="yes" xml:space="preserve">
          <source>Additionally, if you see new errors for &lt;code&gt;global&lt;/code&gt; comments in your code, you should remove those comments.</source>
          <target state="translated">此外，如果在代码中看到 &lt;code&gt;global&lt;/code&gt; 注释的新错误，则应删除这些注释。</target>
        </trans-unit>
        <trans-unit id="6b39469792bfaba2ecb3083fe90ffe26058b9029" translate="yes" xml:space="preserve">
          <source>Additionally, objects can have properties that shadow the builtins on &lt;code&gt;Object.prototype&lt;/code&gt;, potentially causing unintended behavior or denial-of-service security vulnerabilities. For example, it would be unsafe for a webserver to parse JSON input from a client and call &lt;code&gt;hasOwnProperty&lt;/code&gt; directly on the resulting object, because a malicious client could send a JSON value like &lt;code&gt;{&quot;hasOwnProperty&quot;: 1}&lt;/code&gt; and cause the server to crash.</source>
          <target state="translated">此外，对象可以具有 &lt;code&gt;Object.prototype&lt;/code&gt; 上的内置对象的属性，从而可能导致意外行为或拒绝服务安全漏洞。例如，对于Web服务器来说，解析来自客户端的JSON输入并直接在结果对象上调用 &lt;code&gt;hasOwnProperty&lt;/code&gt; 是不安全的，因为恶意客户端可能会发送 &lt;code&gt;{&quot;hasOwnProperty&quot;: 1}&lt;/code&gt; 这样的JSON值，并导致服务器崩溃。</target>
        </trans-unit>
        <trans-unit id="8aeab93591ed32ce88269713a4483a31fbd7449f" translate="yes" xml:space="preserve">
          <source>Additionally, since the maximum &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length&quot;&gt;array length&lt;/a&gt; is 2&lt;sup&gt;32&lt;/sup&gt; - 1, all values above 2&lt;sup&gt;32&lt;/sup&gt; - 2 also represent just normal property names and are thus not considered to be array indexes.</source>
          <target state="translated">此外，由于最大&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/length&quot;&gt;数组长度&lt;/a&gt;为2 &lt;sup&gt;32-1&lt;/sup&gt;，因此所有高于2 &lt;sup&gt;32-2的&lt;/sup&gt;值也仅表示常规属性名称，因此不被视为数组索引。</target>
        </trans-unit>
        <trans-unit id="bd4b3925054b433c5116e43fc5991fd0d16a8d04" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;code&gt;context&lt;/code&gt; object has the following methods:</source>
          <target state="translated">此外， &lt;code&gt;context&lt;/code&gt; 对象具有以下方法：</target>
        </trans-unit>
        <trans-unit id="d8c87778f3cc603b2fb143ad17fcf5c72a8f9a63" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;code&gt;sourceCode&lt;/code&gt; object now also has &lt;code&gt;sourceCode.getCommentsInside()&lt;/code&gt; (which returns all the comments inside a node), &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; (which returns all the comments in the file), and allows comments to be accessed through various other token iterator methods (such as &lt;code&gt;getTokenBefore()&lt;/code&gt; and &lt;code&gt;getTokenAfter()&lt;/code&gt;) with the &lt;code&gt;{ includeComments: true }&lt;/code&gt; option.</source>
          <target state="translated">此外， &lt;code&gt;sourceCode&lt;/code&gt; 对象现在还具有 &lt;code&gt;sourceCode.getCommentsInside()&lt;/code&gt; （返回节点内的所有注释）， &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; （返回文件中的所有注释），并允许通过其他各种令牌访问注释带有 &lt;code&gt;{ includeComments: true }&lt;/code&gt; 选项的迭代器方法（例如 &lt;code&gt;getTokenBefore()&lt;/code&gt; 和 &lt;code&gt;getTokenAfter()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="955a15f42c7d00c744259f3cde915b716c8035f8" translate="yes" xml:space="preserve">
          <source>Additionally, the following rule has been &lt;em&gt;removed&lt;/em&gt; from &lt;code&gt;eslint:recommended&lt;/code&gt;:</source>
          <target state="translated">此外，以下规则已从 &lt;code&gt;eslint:recommended&lt;/code&gt; 中&lt;em&gt;删除&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="813d924654bdcea721c482bee96ad4a150a5affe" translate="yes" xml:space="preserve">
          <source>Additionally, the rule accepts an optional object option with an &lt;code&gt;&quot;overrides&quot;&lt;/code&gt; key. This can be used to specify a location for particular statements that override the default. For example:</source>
          <target state="translated">此外，该规则接受带有 &lt;code&gt;&quot;overrides&quot;&lt;/code&gt; 键的可选对象选项。这可用于为覆盖默认值的特定语句指定位置。例如：</target>
        </trans-unit>
        <trans-unit id="02fd36ee79b3c753873be3e875d89e688ed0058a" translate="yes" xml:space="preserve">
          <source>Additionally, the rule takes an optional object configuration:</source>
          <target state="translated">此外,该规则还采取了可选的对象配置。</target>
        </trans-unit>
        <trans-unit id="79ee2d95f84d63e0488662b62e6f527cc3ee9e35" translate="yes" xml:space="preserve">
          <source>Additionally, this rule allows further configurability via overrides per function type.</source>
          <target state="translated">此外,该规则允许通过每个功能类型的覆盖来进一步配置。</target>
        </trans-unit>
        <trans-unit id="bf52d0223b860a65d967da5e42817e7f5e564102" translate="yes" xml:space="preserve">
          <source>Adhere to the &lt;a href=&quot;new-rules#core-rule-guidelines&quot;&gt;Core Rule Guidelines&lt;/a&gt;</source>
          <target state="translated">遵守&lt;a href=&quot;new-rules#core-rule-guidelines&quot;&gt;核心规则准则&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed051adea84f976f94ec5df3e8c5e5ea11fec6fc" translate="yes" xml:space="preserve">
          <source>Adjust &lt;code&gt;maxItems&lt;/code&gt; by subtracting 1</source>
          <target state="translated">通过减去1来调整 &lt;code&gt;maxItems&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fb6a7a39ce6f2107737b7821e6cfbfb519b1b47d" translate="yes" xml:space="preserve">
          <source>Adjust &lt;code&gt;minItems&lt;/code&gt; from 1 to 0</source>
          <target state="translated">将 &lt;code&gt;minItems&lt;/code&gt; 从1 调整为0</target>
        </trans-unit>
        <trans-unit id="fb8d480c5ed2f86d6a0f15310e0eda94ae41bd4b" translate="yes" xml:space="preserve">
          <source>After a rule has been deprecated, the team will no longer do any work on it. This includes bug fixes, enhancements, and updates to the rule's documentation. Issues and pull requests related to deprecated rule will not be accepted and will be closed.</source>
          <target state="translated">在一条规则被废弃后,团队将不再对其进行任何工作。这包括bug修复、增强和更新规则的文档。与废弃规则相关的问题和拉取请求将不被接受,并将被关闭。</target>
        </trans-unit>
        <trans-unit id="2a8391a640da107879132ab537ce183095c10f9e" translate="yes" xml:space="preserve">
          <source>After rebasing, be sure to run all of the tests once again to make sure nothing broke:</source>
          <target state="translated">重定型后,一定要再次运行所有的测试,以确保没有任何损坏。</target>
        </trans-unit>
        <trans-unit id="0a19182877a954b877a6e382865f5256d4acb007" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;eslint --init&lt;/code&gt;, you'll have a &lt;code&gt;.eslintrc.{js,yml,json}&lt;/code&gt; file in your directory. In it, you'll see some rules configured like this:</source>
          <target state="translated">运行 &lt;code&gt;eslint --init&lt;/code&gt; 之后，您的目录中将有一个 &lt;code&gt;.eslintrc.{js,yml,json}&lt;/code&gt; 文件。在其中，您会看到一些配置如下的规则：</target>
        </trans-unit>
        <trans-unit id="6110b5332caa86a14f380ec237c4258e5ec6e3a9" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;eslint --init&lt;/code&gt;, you'll have a &lt;code&gt;.eslintrc&lt;/code&gt; file in your directory. In it, you'll see some rules configured like this:</source>
          <target state="translated">运行 &lt;code&gt;eslint --init&lt;/code&gt; 之后，您的目录中将有一个 &lt;code&gt;.eslintrc&lt;/code&gt; 文件。在其中，您将看到一些配置如下的规则：</target>
        </trans-unit>
        <trans-unit id="0d8faac586a3ebc8cdb26c6cc7a57c27e0364800" translate="yes" xml:space="preserve">
          <source>After that, you can run ESLint on any file or directory like this:</source>
          <target state="translated">之后,你可以像这样在任何文件或目录上运行ESLint。</target>
        </trans-unit>
        <trans-unit id="8d757cb6f51d9c5e443378778cc41cdf3b2c5c8b" translate="yes" xml:space="preserve">
          <source>After that, you're ready to start working on code.</source>
          <target state="translated">之后,你就可以开始编写代码了。</target>
        </trans-unit>
        <trans-unit id="35c30fe94a928157a94135acef729424ab12ea31" translate="yes" xml:space="preserve">
          <source>All ECMAScript 6 &lt;code&gt;ecmaFeatures&lt;/code&gt; flags have been removed in favor of a &lt;code&gt;ecmaVersion&lt;/code&gt; property under &lt;code&gt;parserOptions&lt;/code&gt; that can be set to 3, 5 (default), or 6.</source>
          <target state="translated">所有的ECMAScript 6 &lt;code&gt;ecmaFeatures&lt;/code&gt; 标志已经赞成的被除去 &lt;code&gt;ecmaVersion&lt;/code&gt; 属性下 &lt;code&gt;parserOptions&lt;/code&gt; 可以设置为3，5（默认值），或6。</target>
        </trans-unit>
        <trans-unit id="27168471545ed29e71d31a94a211caecdf8e0715" translate="yes" xml:space="preserve">
          <source>All Rules Off by Default</source>
          <target state="translated">所有规则默认为关闭</target>
        </trans-unit>
        <trans-unit id="21415cf206ac89c1ae9a5902f7fa084ec28c3c4e" translate="yes" xml:space="preserve">
          <source>All binary operators except dot (&lt;code&gt;.&lt;/code&gt;) should be separated from their operands by spaces. Blank spaces should never separate unary operators such as unary minus, increment (&lt;code&gt;++&lt;/code&gt;), and decrement (&lt;code&gt;--&lt;/code&gt;) from their operands.</source>
          <target state="translated">除点（ &lt;code&gt;.&lt;/code&gt; ）以外的所有二进制运算符都应与其操作数之间用空格分隔。空格绝对不能将一元运算符（例如一元减号，增量（ &lt;code&gt;++&lt;/code&gt; ）和减量（ &lt;code&gt;--&lt;/code&gt; ））与其操作数分开。</target>
        </trans-unit>
        <trans-unit id="c04e4bad4ab494fa9ae0caae96f8d872ba006651" translate="yes" xml:space="preserve">
          <source>All changes must be accompanied by tests, even if the feature you're working on previously had no tests.</source>
          <target state="translated">所有的更改都必须伴随着测试,即使你正在开发的功能之前没有测试。</target>
        </trans-unit>
        <trans-unit id="1fac9209227848cd5c566c056688fcbfeba1b6ec" translate="yes" xml:space="preserve">
          <source>All four options must be specified in the array, but you can customize their order.</source>
          <target state="translated">所有四个选项都必须在数组中指定,但你可以自定义它们的顺序。</target>
        </trans-unit>
        <trans-unit id="9f5c8e84361b28f241a1b31c82fca23efdb68a0d" translate="yes" xml:space="preserve">
          <source>All instances that should be flagged as warnings.</source>
          <target state="translated">所有应被标记为警告的情况;</target>
        </trans-unit>
        <trans-unit id="39a3c57a313f8a6f509ff9d3ffc36567771fb975" translate="yes" xml:space="preserve">
          <source>All nodes must have &lt;code&gt;range&lt;/code&gt; property.</source>
          <target state="translated">所有节点必须具有 &lt;code&gt;range&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="16bc8a2ef6d842f8d4078628bf71b055989417cb" translate="yes" xml:space="preserve">
          <source>All nodes:</source>
          <target state="translated">所有节点。</target>
        </trans-unit>
        <trans-unit id="380e6fbca39fdfd46a99f90e48d35959e1edf1ee" translate="yes" xml:space="preserve">
          <source>All of the above methods also work for plugin rules. For example, to disable &lt;code&gt;eslint-plugin-example&lt;/code&gt;'s &lt;code&gt;rule-name&lt;/code&gt; rule, combine the plugin's name (&lt;code&gt;example&lt;/code&gt;) and the rule's name (&lt;code&gt;rule-name&lt;/code&gt;) into &lt;code&gt;example/rule-name&lt;/code&gt;:</source>
          <target state="translated">以上所有方法也适用于插件规则。例如，要禁用 &lt;code&gt;eslint-plugin-example&lt;/code&gt; 的 &lt;code&gt;rule-name&lt;/code&gt; 规则，请将插件的名称（ &lt;code&gt;example&lt;/code&gt; ）和规则的名称（ &lt;code&gt;rule-name&lt;/code&gt; ）组合为 &lt;code&gt;example/rule-name&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d86729b4f455fbcd7ffc0551c382021ba83dc3f7" translate="yes" xml:space="preserve">
          <source>All of these options give you fine-grained control over how ESLint treats your code.</source>
          <target state="translated">所有这些选项都能让您精细地控制ESLint如何处理您的代码。</target>
        </trans-unit>
        <trans-unit id="b981df969032075eba25dbbe4f15f91c780d355d" translate="yes" xml:space="preserve">
          <source>All user-facing changes must be accompanied by appropriate documentation.</source>
          <target state="translated">所有面向用户的变化必须伴随着适当的文件。</target>
        </trans-unit>
        <trans-unit id="d6ed9c633f11b7ae73f9eb30856004c5aa615a9d" translate="yes" xml:space="preserve">
          <source>All variables should be declared before they are used. Variable declarations should take place at the beginning of a function using a single &lt;code&gt;var&lt;/code&gt; statement with one variable per line. All lines after the first should be indented one level so the variable names line up. Variables should be initialized when declared if applicable and the equals operator should be at a consistent indentation level. Initialized variables should come first followed by uninitialized variables.</source>
          <target state="translated">所有变量都应在使用前声明。变量声明应在函数的开头使用单个 &lt;code&gt;var&lt;/code&gt; 语句（每行一个变量）进行。第一行之后的所有行都应缩进一个级别，以便变量名称对齐。如果适用，则应在声明变量时初始化变量，并且equals运算符应处于一致的缩进级别。初始化变量应先跟随未初始化变量。</target>
        </trans-unit>
        <trans-unit id="d7ceb6fc7b2eb8ab3c194e1131ea568a7b616a92" translate="yes" xml:space="preserve">
          <source>Allowlist and denylist rules specified via &lt;code&gt;--ignore-pattern&lt;/code&gt; or &lt;code&gt;.eslintignore&lt;/code&gt; are prioritized above implicit ignore rules.</source>
          <target state="translated">通过 &lt;code&gt;--ignore-pattern&lt;/code&gt; 或 &lt;code&gt;.eslintignore&lt;/code&gt; 指定的allowlist和denylist规则的优先级高于隐式忽略规则。</target>
        </trans-unit>
        <trans-unit id="a5c0a91ce7688529b69563047855933d8f3fb1e8" translate="yes" xml:space="preserve">
          <source>Alphabetical list is maintained starting from the first variable and excluding any that are considered problems. So the following code will produce two problems:</source>
          <target state="translated">从第一个变量开始,按字母顺序排列,排除任何被认为是问题的变量。所以下面的代码将产生两个问题。</target>
        </trans-unit>
        <trans-unit id="2942eb64d68ab38cec3ef47c24c9ccfc2f1d7e6b" translate="yes" xml:space="preserve">
          <source>Also note in the above examples that if you switch a method to a static method, &lt;em&gt;instances&lt;/em&gt; of the class that call the static method (&lt;code&gt;let a = new A(); a.sayHi();&lt;/code&gt;) have to be updated to being a static call (&lt;code&gt;A.sayHi();&lt;/code&gt;) instead of having the instance of the &lt;em&gt;class&lt;/em&gt; call the method</source>
          <target state="translated">还要注意在上面的示例中，如果将方法切换为静态方法，则调用该静态方法的类的&lt;em&gt;实例&lt;/em&gt;（ &lt;code&gt;let a = new A(); a.sayHi();&lt;/code&gt; ）必须更新为静态方法。调用（ &lt;code&gt;A.sayHi();&lt;/code&gt; ）而不是让&lt;em&gt;类&lt;/em&gt;的实例调用方法</target>
        </trans-unit>
        <trans-unit id="f7f8d2e506fae97d44675fd599bec988987ee20c" translate="yes" xml:space="preserve">
          <source>Also, this rule does not disallow duplicate keys in object literals and class definitions, and in certain cases with duplicate keys might not report a missing pair for a getter/setter, like in the following example:</source>
          <target state="translated">另外,这条规则并不禁止对象字面和类定义中的重复键,在某些情况下,有重复键的情况下,可能不会报告getter/setter的缺失对,比如下面的例子。</target>
        </trans-unit>
        <trans-unit id="a5391918dbef9fd9c4d7cea0937d59ade63a7af6" translate="yes" xml:space="preserve">
          <source>Also, this rule does not report any warnings for properties that have duplicate getters or setters.</source>
          <target state="translated">此外,对于有重复的获取器或设置器的属性,该规则不会报告任何警告。</target>
        </trans-unit>
        <trans-unit id="6915f039925c6757b027241cf12e316770686bea" translate="yes" xml:space="preserve">
          <source>Alternate object option:</source>
          <target state="translated">备用对象选项:</target>
        </trans-unit>
        <trans-unit id="c6c5ca112da18ace260ba6bb33f4d3c4cc7dca10" translate="yes" xml:space="preserve">
          <source>Alternative: Creating Your Own Rules</source>
          <target state="translated">替代方案。创建你自己的规则</target>
        </trans-unit>
        <trans-unit id="87e7deb2c19c3eced3590ab12970d7dd12c45695" translate="yes" xml:space="preserve">
          <source>Alternatively, different configurations can be specified for array expressions and array patterns:</source>
          <target state="translated">另外,还可以为数组表达式和数组模式指定不同的配置。</target>
        </trans-unit>
        <trans-unit id="61b49ead1c63a69fdf7a8fef1d4e4527b0f4cbb6" translate="yes" xml:space="preserve">
          <source>Alternatively, the rule also accepts objects, where the global name and an optional custom message are specified:</source>
          <target state="translated">另外,该规则还接受对象,其中指定了全局名称和可选的自定义消息。</target>
        </trans-unit>
        <trans-unit id="b5ea439ae2fc25b1a8e4dc3f7821000550fb475e" translate="yes" xml:space="preserve">
          <source>Alternatively, the rule also accepts objects, where the selector and an optional custom message are specified:</source>
          <target state="translated">另外,该规则也接受对象,其中指定了选择器和一个可选的自定义消息。</target>
        </trans-unit>
        <trans-unit id="f42388818dce26fe88593798136ce9a613cefe72" translate="yes" xml:space="preserve">
          <source>Alternatively, you can relax the rule to allow brace-less single-line &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, or &lt;code&gt;do&lt;/code&gt;, while still enforcing the use of curly braces for other instances.</source>
          <target state="translated">另外，您可以放宽规则，以允许 &lt;code&gt;while&lt;/code&gt; &lt;code&gt;do&lt;/code&gt; 使用大括号的情况下使用单行 &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;else if&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ，while或do，同时仍对其他实例强制使用花括号。</target>
        </trans-unit>
        <trans-unit id="a86c240750580618ea8e68ab3ee67459999fb917" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use separate configurations for different assignment types. It accepts 2 other keys instead of &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">另外，您可以对不同的分配类型使用单独的配置。它接受另外两个键，而不是 &lt;code&gt;array&lt;/code&gt; 和 &lt;code&gt;object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf9170b524599785b7c0aeb65895885be13571ba" translate="yes" xml:space="preserve">
          <source>Alternatively, you may specify a single integer for the &lt;code&gt;max&lt;/code&gt; option:</source>
          <target state="translated">另外，您可以为 &lt;code&gt;max&lt;/code&gt; 选项指定一个整数：</target>
        </trans-unit>
        <trans-unit id="7925c2ccec5e609c97b9e24b12ce869df70db789" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;let b&lt;/code&gt; in the &lt;code&gt;if&lt;/code&gt; statement is before the &lt;em&gt;function&lt;/em&gt; declaration in the outer scope, it is incorrect.</source>
          <target state="translated">尽管 &lt;code&gt;if&lt;/code&gt; 语句中的 &lt;code&gt;let b&lt;/code&gt; 在外部作用域中的&lt;em&gt;函数&lt;/em&gt;声明之前，但这是不正确的。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="866f243570c8f44641b36ea00e456d84d75ed160" translate="yes" xml:space="preserve">
          <source>Although ASI allows for more freedom over your coding style, it can also make your code behave in an unexpected way, whether you use semicolons or not. Therefore, it is best to know when ASI takes place and when it does not, and have ESLint protect your code from these potentially unexpected cases. In short, as once described by Isaac Schlueter, a &lt;code&gt;\n&lt;/code&gt; character always ends a statement (just like a semicolon) unless one of the following is true:</source>
          <target state="translated">尽管ASI允许您在编码风格上享有更大的自由度，但无论是否使用分号，它都可以使您的代码以意外的方式运行。因此，最好知道何时发生ASI，何时不发生ASI，并让ESLint保护您的代码免受这些潜在的意外情况的影响。简而言之，正如Isaac Schlueter所描述的那样，除非满足以下条件之一，否则 &lt;code&gt;\n&lt;/code&gt; 字符总是结束一条语句（就像分号一样）：</target>
        </trans-unit>
        <trans-unit id="a4f299f7bd27b6590317d120fdc51aa0f781de8e" translate="yes" xml:space="preserve">
          <source>Although it's possible to wrap functions in parentheses, this can be confusing when the code also contains immediately-invoked function expressions (IIFEs) since parentheses are often used to make this distinction. For example:</source>
          <target state="translated">虽然可以用括号包裹函数,但当代码中还包含立即调用的函数表达式(IIFE)时,这可能会引起混淆,因为括号经常被用来区分这种情况。例如</target>
        </trans-unit>
        <trans-unit id="24d405c574edf2eaca4756329796edd9539cb601" translate="yes" xml:space="preserve">
          <source>Although not a syntax error, this format for numbers can make it difficult to distinguish between true decimal numbers and the dot operator. For this reason, some recommend that you should always include a number before and after a decimal point to make it clear the intent is to create a decimal number.</source>
          <target state="translated">虽然不是语法错误,但这种数字格式会使人难以区分真正的小数点数字和点运算符。出于这个原因,有些人建议你应该总是在小数点之前和之后加入一个数字,以明确其意图是创建一个十进制数。</target>
        </trans-unit>
        <trans-unit id="e81d773bf08a95ef47ad02f669bebf58abfe87c3" translate="yes" xml:space="preserve">
          <source>Although possible, there aren't any good reasons to use these primitive wrappers as constructors. They tend to confuse other developers more than anything else because they seem like they should act as primitives, but they do not. For example:</source>
          <target state="translated">尽管有可能,但并没有任何好的理由将这些基元封装器用作构造函数。它们往往会让其他开发者感到困惑,因为它们看起来应该像基元一样,但它们并没有。例如</target>
        </trans-unit>
        <trans-unit id="de8a9fd5b3850b78355ba59c0786ce342032800d" translate="yes" xml:space="preserve">
          <source>Although this code might seem like an error, it actually works fine because JavaScript engines hoist the &lt;code&gt;function&lt;/code&gt; declarations to the top of the scope. That means this code is treated as if the declaration came before the invocation.</source>
          <target state="translated">尽管这段代码看起来像是一个错误，但实际上可以正常工作，因为JavaScript引擎将 &lt;code&gt;function&lt;/code&gt; 声明提升到作用域的顶部。这意味着该代码被视为声明在调用之前。</target>
        </trans-unit>
        <trans-unit id="5553a9fdd742079120793eebc8d2221f6b891b20" translate="yes" xml:space="preserve">
          <source>Always declare variables. Implied globals should not be used.</source>
          <target state="translated">总是声明变量。不应使用隐含的 globals。</target>
        </trans-unit>
        <trans-unit id="10a7f009f495f80e7285c15fc4b4b3893ec6f362" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;extends&lt;/code&gt; property value &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt; enables a subset of core rules that report common problems, which have a check mark  on the &lt;a href=&quot;../rules/index&quot;&gt;rules page&lt;/a&gt;. The recommended subset can change only at major versions of ESLint.</source>
          <target state="translated">一个 &lt;code&gt;extends&lt;/code&gt; 属性值 &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt; 让那报告的共同问题，其中有一个对勾核心规则的一个子集&lt;a href=&quot;../rules/index&quot;&gt;规则页面&lt;/a&gt;。推荐的子集只能在主要版本的ESLint上更改。</target>
        </trans-unit>
        <trans-unit id="b0008c8dec87379b7985a8a544d103acfceac72e" translate="yes" xml:space="preserve">
          <source>An Open Letter to JavaScript Leaders Regarding Semicolons</source>
          <target state="translated">关于分号的一封致JavaScript领导者的公开信</target>
        </trans-unit>
        <trans-unit id="f6dfcf2a1b3453d2a0633aaf0e9c90f54b4a3cdf" translate="yes" xml:space="preserve">
          <source>An array of numbers to ignore. It's set to &lt;code&gt;[]&lt;/code&gt; by default. If provided, it must be an &lt;code&gt;Array&lt;/code&gt;.</source>
          <target state="translated">要忽略的数字数组。默认情况下设置为 &lt;code&gt;[]&lt;/code&gt; 。如果提供，则必须为 &lt;code&gt;Array&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a0a90c8970e8cd98eda8ee49e8140bb8398cb04" translate="yes" xml:space="preserve">
          <source>An array which includes &lt;code&gt;fixing&lt;/code&gt; objects.</source>
          <target state="translated">包含 &lt;code&gt;fixing&lt;/code&gt; 对象的数组。</target>
        </trans-unit>
        <trans-unit id="2b8611b9d9e5eaae2d252753440448d3feefcb89" translate="yes" xml:space="preserve">
          <source>An arrow function body can contain an implicit return as an expression instead of a block body. It can be useful to enforce a consistent location for the implicitly returned expression.</source>
          <target state="translated">一个箭头函数体可以包含一个隐式返回作为表达式,而不是块体。这对于为隐式返回的表达式执行一个一致的位置是很有用的。</target>
        </trans-unit>
        <trans-unit id="1884bdfcf4455f7e0f018c484d212b780f99886e" translate="yes" xml:space="preserve">
          <source>An environment defines global variables that are predefined. The available environments are:</source>
          <target state="translated">环境定义了预定义的全局变量。可用的环境有:</target>
        </trans-unit>
        <trans-unit id="4a993a714edad4c590ac5d9867159330b64ddc2c" translate="yes" xml:space="preserve">
          <source>An example configuration, with the defaults &lt;code&gt;VariableDeclarator&lt;/code&gt; and &lt;code&gt;AssignmentExpression&lt;/code&gt; filled in, looks like this:</source>
          <target state="translated">带有默认 &lt;code&gt;VariableDeclarator&lt;/code&gt; 和 &lt;code&gt;AssignmentExpression&lt;/code&gt; 的示例配置如下所示：</target>
        </trans-unit>
        <trans-unit id="341d56c5d6e304784de6633b08d9af06d30d0708" translate="yes" xml:space="preserve">
          <source>An example configuration, with the defaults &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt; filled in, looks like this:</source>
          <target state="translated">带有默认 &lt;code&gt;array&lt;/code&gt; 和 &lt;code&gt;object&lt;/code&gt; 的示例配置如下所示：</target>
        </trans-unit>
        <trans-unit id="dd6f63391e9d21a63c3ea41d1ba8a96a2efd4e1d" translate="yes" xml:space="preserve">
          <source>An example configuration:</source>
          <target state="translated">一个配置实例。</target>
        </trans-unit>
        <trans-unit id="d23f10e88a66188c21919014d33eeac201e7bb6e" translate="yes" xml:space="preserve">
          <source>An example of a configuration with overrides:</source>
          <target state="translated">一个带有覆盖的配置的例子。</target>
        </trans-unit>
        <trans-unit id="1d36764ba33569671f7edfa7cc1e47cbf393760a" translate="yes" xml:space="preserve">
          <source>An example of shorthand configuration:</source>
          <target state="translated">速记配置的一个例子。</target>
        </trans-unit>
        <trans-unit id="7033976c72e3e35c02fd8336248a55e6ab23e1eb" translate="yes" xml:space="preserve">
          <source>An example use case is to enforce comma style &lt;em&gt;only&lt;/em&gt; in var statements.</source>
          <target state="translated">一个示例用例是&lt;em&gt;仅&lt;/em&gt;在var语句中强制使用逗号样式。</target>
        </trans-unit>
        <trans-unit id="dddab7ddd0688573b5d9e27e8a285815d7261f07" translate="yes" xml:space="preserve">
          <source>An invalid pattern in a regular expression literal is a &lt;code&gt;SyntaxError&lt;/code&gt; when the code is parsed, but an invalid string in &lt;code&gt;RegExp&lt;/code&gt; constructors throws a &lt;code&gt;SyntaxError&lt;/code&gt; only when the code is executed.</source>
          <target state="translated">解析代码时，正则表达式文字中的无效模式是 &lt;code&gt;SyntaxError&lt;/code&gt; ，但是 &lt;code&gt;RegExp&lt;/code&gt; 构造函数中的无效字符串仅在执行代码时才引发 &lt;code&gt;SyntaxError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b476bef9567eb94c0088de30121faf7682d5623a" translate="yes" xml:space="preserve">
          <source>An iterable object which enumerates &lt;code&gt;fixing&lt;/code&gt; objects. Especially, the &lt;code&gt;fix()&lt;/code&gt; function can be a generator.</source>
          <target state="translated">枚举 &lt;code&gt;fixing&lt;/code&gt; 对象的可迭代对象。特别是， &lt;code&gt;fix()&lt;/code&gt; 函数可以是生成器。</target>
        </trans-unit>
        <trans-unit id="438d78e8f508d8dd7a89428814b76d0adf68590c" translate="yes" xml:space="preserve">
          <source>An npm-installed formatter is resolved with or without &lt;code&gt;eslint-formatter-&lt;/code&gt; prefix.</source>
          <target state="translated">可以使用带或不带 &lt;code&gt;eslint-formatter-&lt;/code&gt; 前缀来解析npm安装的格式化程序。</target>
        </trans-unit>
        <trans-unit id="e17d5deba51ad9da3d6d69e9127834d43c91175f" translate="yes" xml:space="preserve">
          <source>An object containing &lt;code&gt;valid&lt;/code&gt; and &lt;code&gt;invalid&lt;/code&gt; properties, each of which is an array containing test cases.</source>
          <target state="translated">包含 &lt;code&gt;valid&lt;/code&gt; 和 &lt;code&gt;invalid&lt;/code&gt; 属性的对象，每个属性都是包含测试用例的数组。</target>
        </trans-unit>
        <trans-unit id="7f65760ab68396ff18ca2c5e2cf5d15f9c0728d5" translate="yes" xml:space="preserve">
          <source>An object literal may be used as a third array item to specify exceptions, with the key &lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; and an array as the value. These exceptions work in the context of the first option. That is, if &lt;code&gt;&quot;always&quot;&lt;/code&gt; is set to enforce spacing, then any &quot;exception&quot; will &lt;em&gt;disallow&lt;/em&gt; spacing. Conversely, if &lt;code&gt;&quot;never&quot;&lt;/code&gt; is set to disallow spacing, then any &quot;exception&quot; will &lt;em&gt;enforce&lt;/em&gt; spacing.</source>
          <target state="translated">对象文字可以用作第三个数组项，以键 &lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; 和数组作为值来指定异常。这些例外在第一个选项的上下文中起作用。也就是说，如果将 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 设置为强制执行间距，则任何&amp;ldquo;例外&amp;rdquo;都将&lt;em&gt;不允许&lt;/em&gt;间距。相反，如果将 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 设置为不允许间隔，则任何&amp;ldquo;例外&amp;rdquo;都将&lt;em&gt;强制&lt;/em&gt;间隔。</target>
        </trans-unit>
        <trans-unit id="6e32a74ed5fb1438e5b7dc7286797ba7ef696aba" translate="yes" xml:space="preserve">
          <source>An object literal may be used as a third array item to specify spacing exceptions. These exceptions work in the context of the first option. That is, if &lt;code&gt;&quot;always&quot;&lt;/code&gt; is set to enforce spacing and an exception is set to &lt;code&gt;false&lt;/code&gt;, it will disallow spacing for cases matching the exception. Likewise, if &lt;code&gt;&quot;never&quot;&lt;/code&gt; is set to disallow spacing and an exception is set to &lt;code&gt;true&lt;/code&gt;, it will enforce spacing for cases matching the exception.</source>
          <target state="translated">对象文字可以用作第三个数组项，以指定间距异常。这些例外在第一个选项的上下文中起作用。也就是说，如果将 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 设置为强制间隔，并且将异常设置为 &lt;code&gt;false&lt;/code&gt; ，则它将在与该异常匹配的案例中不允许使用空格。同样，如果将 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 设置为不允许间隔，并且将异常设置为 &lt;code&gt;true&lt;/code&gt; ，则它将对与该异常匹配的个案强制执行间隔。</target>
        </trans-unit>
        <trans-unit id="4b176eca1a5e1018132cb2364182412c12d16e9d" translate="yes" xml:space="preserve">
          <source>An object that further controls the behavior of this rule. Currently, the only available parameter is &lt;code&gt;ignoreForLoopInit&lt;/code&gt;, which indicates if initialization at declaration is allowed in &lt;code&gt;for&lt;/code&gt; loops when &lt;code&gt;&quot;never&quot;&lt;/code&gt; is set, since it is a very typical use case.</source>
          <target state="translated">进一步控制此规则的行为的对象。当前，唯一可用的参数是 &lt;code&gt;ignoreForLoopInit&lt;/code&gt; ，它指示在设置 &lt;code&gt;for&lt;/code&gt; &lt;code&gt;&quot;never&quot;&lt;/code&gt; 时是否允许在for循环中的声明时进行初始化，因为这是一个非常典型的用例。</target>
        </trans-unit>
        <trans-unit id="76f218533f4fe1fb32f27068a4f20c9c3a16dfc3" translate="yes" xml:space="preserve">
          <source>An unused expression which has no effect on the state of the program indicates a logic error.</source>
          <target state="translated">未使用的表达式如果对程序的状态没有影响,则表示逻辑错误。</target>
        </trans-unit>
        <trans-unit id="49d4259045d26d22175e3f8251cfe300e5d181b6" translate="yes" xml:space="preserve">
          <source>And above of typed arrays.</source>
          <target state="translated">而上面的类型化数组。</target>
        </trans-unit>
        <trans-unit id="659290b631b70886723f30f43c495d7a9f19a9d7" translate="yes" xml:space="preserve">
          <source>And here is an example that autofixes lint problems:</source>
          <target state="translated">下面是一个自动修复掉毛问题的例子。</target>
        </trans-unit>
        <trans-unit id="4a2f05944f009f34fb2b41b47c60459ed7da7240" translate="yes" xml:space="preserve">
          <source>And in YAML:</source>
          <target state="translated">而在YAML。</target>
        </trans-unit>
        <trans-unit id="3a25dc5ee33e69f8b75c5fcba0c9db10f8928e94" translate="yes" xml:space="preserve">
          <source>And the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/8.0/index.html#sec-atomics-object&quot;&gt;ECMAScript 2017 specification&lt;/a&gt; makes it clear that &lt;code&gt;Atomics&lt;/code&gt; cannot be invoked:</source>
          <target state="translated">而且&lt;a href=&quot;https://www.ecma-international.org/ecma-262/8.0/index.html#sec-atomics-object&quot;&gt;ECMAScript 2017规范&lt;/a&gt;明确指出不能调用 &lt;code&gt;Atomics&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="05dc9d622e3015b6bfa8811e104b85bb8205e25f" translate="yes" xml:space="preserve">
          <source>And the option has shorthand as a string keyword:</source>
          <target state="translated">而该选项有速记为字符串关键字。</target>
        </trans-unit>
        <trans-unit id="9777a1e6d65b67eb72edafff1e10fe081003864e" translate="yes" xml:space="preserve">
          <source>And then you run:</source>
          <target state="translated">然后你就跑了。</target>
        </trans-unit>
        <trans-unit id="b25ceb4859dadbd732ae104b9a92498a1e1db184" translate="yes" xml:space="preserve">
          <source>And then you would modify your configuration file like this:</source>
          <target state="translated">然后你会像这样修改你的配置文件。</target>
        </trans-unit>
        <trans-unit id="775bd2afb33b18dbf1a41f0531b3507d20a625e6" translate="yes" xml:space="preserve">
          <source>And this rule allows &lt;code&gt;this&lt;/code&gt; keywords in functions below:</source>
          <target state="translated">此规则允许在以下函数中使用 &lt;code&gt;this&lt;/code&gt; 关键字：</target>
        </trans-unit>
        <trans-unit id="2a3de4a9dc7c9f3bd23b0b53226033777b1c013b" translate="yes" xml:space="preserve">
          <source>AngularJS</source>
          <target state="translated">AngularJS</target>
        </trans-unit>
        <trans-unit id="591268d3d3fe5a72c8827ac84ee70b58e8c3d3e2" translate="yes" xml:space="preserve">
          <source>Annotated ES5 &amp;sect;7.8.5 - Regular Expression Literals</source>
          <target state="translated">带注释的ES5&amp;sect;7.8.5-正则表达式文字</target>
        </trans-unit>
        <trans-unit id="80e28c8818d9491b3223341a49c734105d436df1" translate="yes" xml:space="preserve">
          <source>Annotated ES5 - &amp;sect;15.1.1</source>
          <target state="translated">带注释的ES5-&amp;sect;15.1.1</target>
        </trans-unit>
        <trans-unit id="d1483aa9f00c4b4bb5c32564c963065a2f0a0e12" translate="yes" xml:space="preserve">
          <source>Annotated ES5 - Annex C</source>
          <target state="translated">附加说明的ES5--附件C</target>
        </trans-unit>
        <trans-unit id="9b8565a92875ea54b3f07cae6ab323d0096e5706" translate="yes" xml:space="preserve">
          <source>Anonymous functions may be used for assignment of object methods or as arguments to other functions. There should be no space between the &lt;code&gt;function&lt;/code&gt; keyword and the opening parentheses.</source>
          <target state="translated">匿名函数可用于分配对象方法或用作其他函数的参数。 &lt;code&gt;function&lt;/code&gt; 关键字和右括号之间不应有空格。</target>
        </trans-unit>
        <trans-unit id="c4ad37defa448472e1ebec233962bd2d574a8d79" translate="yes" xml:space="preserve">
          <source>Another argument in favor of this style is that it improves the clarity of diffs when something in the method chain is changed:</source>
          <target state="translated">另一个支持这种风格的论点是,当方法链中的某些东西被改变时,它可以提高diffs的清晰度。</target>
        </trans-unit>
        <trans-unit id="284affa5f5f9ddb144dedea5ee6895aafa4a76f6" translate="yes" xml:space="preserve">
          <source>Another benefit of this rule is specificity of diffs when a property is changed:</source>
          <target state="translated">这条规则的另一个好处是,当一个属性被改变时,diffs的特殊性。</target>
        </trans-unit>
        <trans-unit id="68caf686c329b469a32cc27f694bcc136b6f4a77" translate="yes" xml:space="preserve">
          <source>Another case where you might not use this rule is if you want to enforce console calls and not console overwrites. For example:</source>
          <target state="translated">另一种你可能不使用这个规则的情况是,如果你想强制执行控制台调用而不是控制台覆盖。例如</target>
        </trans-unit>
        <trans-unit id="3390320f4be3c19e524e28b23472d6dbb6cc689f" translate="yes" xml:space="preserve">
          <source>Another common case is to minify code as &lt;code&gt;void 0&lt;/code&gt; is shorter than &lt;code&gt;undefined&lt;/code&gt;:</source>
          <target state="translated">另一个常见情况是最小化代码，因为 &lt;code&gt;void 0&lt;/code&gt; 比 &lt;code&gt;undefined&lt;/code&gt; 短：</target>
        </trans-unit>
        <trans-unit id="332efd74927ce8d1c939228b31fa1aaaba97f93a" translate="yes" xml:space="preserve">
          <source>Another common mistake is using a single variable as both the conditional test and the consequent. In such cases, the logical &lt;code&gt;OR&lt;/code&gt; can be used to provide the same functionality. Here is an example:</source>
          <target state="translated">另一个常见的错误是使用单个变量作为条件测试和结果测试。在这种情况下，逻辑 &lt;code&gt;OR&lt;/code&gt; 可用于提供相同的功能。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="80b5fcb5558eb477f24af2cd32b33af9f5ee37f2" translate="yes" xml:space="preserve">
          <source>Another common use case for this option is in combination with &lt;code&gt;{ &quot;properties&quot;: &quot;never&quot; }&lt;/code&gt;, when the identifier is intended to be used only as a property shorthand.</source>
          <target state="translated">当标识符仅用作属性速记时，此选项的另一个常见用例是与 &lt;code&gt;{ &quot;properties&quot;: &quot;never&quot; }&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="58af9b94d3f9837624df663f80036dcc5b7e920a" translate="yes" xml:space="preserve">
          <source>Another example where quotes do matter is when using numeric literals as property keys:</source>
          <target state="translated">另一个引号很重要的例子是当使用数字文字作为属性键时。</target>
        </trans-unit>
        <trans-unit id="1d1e1b0f8401d2b1c59b0f126cfa628ec7627bf2" translate="yes" xml:space="preserve">
          <source>Another solution would be to avoid using a mutable variable reference at all:</source>
          <target state="translated">另一个解决方案是完全避免使用可变变量引用。</target>
        </trans-unit>
        <trans-unit id="1d60372e402e0715e69db2e70551f8dd90a5d6e9" translate="yes" xml:space="preserve">
          <source>Another style is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Indent_style#Allman_style&quot;&gt;Allman&lt;/a&gt;, in which all the braces are expected to be on their own lines without any extra indentation. For example:</source>
          <target state="translated">另一种样式称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Indent_style#Allman_style&quot;&gt;Allman&lt;/a&gt;，其中所有的花括号都应该在自己的行上而没有任何额外的缩进。例如：</target>
        </trans-unit>
        <trans-unit id="87a768a020f736c807eb3cee1ca2d1f14df684e7" translate="yes" xml:space="preserve">
          <source>Any additional properties of a test case will be passed directly to the linter as config options. For example, a test case can have a &lt;code&gt;parserOptions&lt;/code&gt; property to configure parser behavior:</source>
          <target state="translated">测试用例的任何其他属性都将作为配置选项直接传递给linter。例如，一个测试用例可以具有 &lt;code&gt;parserOptions&lt;/code&gt; 属性来配置解析器行为：</target>
        </trans-unit>
        <trans-unit id="983552f9535f5fc056ba05e9fc491ecb6b8e9856" translate="yes" xml:space="preserve">
          <source>Any file that follows the standard ignore file format can be used. Keep in mind that specifying &lt;code&gt;--ignore-path&lt;/code&gt; means that any existing &lt;code&gt;.eslintignore&lt;/code&gt; file will not be used. Note that globbing rules in &lt;code&gt;.eslintignore&lt;/code&gt; follow those of &lt;code&gt;.gitignore&lt;/code&gt;.</source>
          <target state="translated">可以使用遵循标准忽略文件格式的任何文件。请记住，指定 &lt;code&gt;--ignore-path&lt;/code&gt; 表示将不使用任何现有的 &lt;code&gt;.eslintignore&lt;/code&gt; 文件。请注意， &lt;code&gt;.eslintignore&lt;/code&gt; 中的通配规则遵循 &lt;code&gt;.gitignore&lt;/code&gt; 的规则。</target>
        </trans-unit>
        <trans-unit id="3cf92fd782072e232ee87ae387b92f10f733a45f" translate="yes" xml:space="preserve">
          <source>Any reference to an undeclared variable causes a warning, unless the variable is explicitly mentioned in a &lt;code&gt;/*global ...*/&lt;/code&gt; comment, or specified in the &lt;a href=&quot;../user-guide/configuring#specifying-globals&quot;&gt;&lt;code&gt;globals&lt;/code&gt; key in the configuration file&lt;/a&gt;. A common use case for these is if you intentionally use globals that are defined elsewhere (e.g. in a script sourced from HTML).</source>
          <target state="translated">除非未在 &lt;code&gt;/*global ...*/&lt;/code&gt; 注释中明确提及该变量，或者&lt;a href=&quot;../user-guide/configuring#specifying-globals&quot;&gt;在配置文件&lt;/a&gt;的 &lt;code&gt;globals&lt;/code&gt; 键中指定了该变量，否则对未声明变量的任何引用都会引起警告。这些的常见用例是，如果您有意使用在其他地方定义的全局变量（例如，在源自HTML的脚本中）。</target>
        </trans-unit>
        <trans-unit id="0bb559fa969f749523424421aa9513fbc4bbf59e" translate="yes" xml:space="preserve">
          <source>Anyone not yet in an ES6 environment would not want to apply this rule. Others may find the terseness of the shorthand syntax harder to read and may not want to encourage it with this rule.</source>
          <target state="translated">任何尚未进入ES6环境的人都不希望应用这条规则。其他人可能会发现速记语法的繁琐难以阅读,可能不想用这一规则来鼓励它。</target>
        </trans-unit>
        <trans-unit id="301c21f7a6fb57bce654e5a9d38ef620e86123d7" translate="yes" xml:space="preserve">
          <source>Anything above Node.js 11.10.1</source>
          <target state="translated">任何高于Node.js 11.10.1的内容。</target>
        </trans-unit>
        <trans-unit id="9abfe4f65f0647e4ea0c5ac4810e9e579b855636" translate="yes" xml:space="preserve">
          <source>Anything above Node.js 9.10.0</source>
          <target state="translated">Node.js 9.10.0以上的任何东西。</target>
        </trans-unit>
        <trans-unit id="b22274513fcf59b01e075e91572dcaa215b399d2" translate="yes" xml:space="preserve">
          <source>Applying Fixes</source>
          <target state="translated">应用修复</target>
        </trans-unit>
        <trans-unit id="b040b4179b8b00702858fdb4c1afec3d6d284509" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">Architecture</target>
        </trans-unit>
        <trans-unit id="98436c6de89d4b1603f1e667da6c73ef406ed052" translate="yes" xml:space="preserve">
          <source>Arithmetic Operators: &lt;code&gt;&quot;+&quot;&lt;/code&gt;, &lt;code&gt;&quot;-&quot;&lt;/code&gt;, &lt;code&gt;&quot;*&quot;&lt;/code&gt;, &lt;code&gt;&quot;/&quot;&lt;/code&gt;, &lt;code&gt;&quot;%&quot;&lt;/code&gt;, &lt;code&gt;&quot;**&quot;&lt;/code&gt;</source>
          <target state="translated">算术运算符： &lt;code&gt;&quot;+&quot;&lt;/code&gt; ， &lt;code&gt;&quot;-&quot;&lt;/code&gt; ， &lt;code&gt;&quot;*&quot;&lt;/code&gt; ， &lt;code&gt;&quot;/&quot;&lt;/code&gt; ， &lt;code&gt;&quot;%&quot;&lt;/code&gt; ， &lt;code&gt;&quot;**&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73ef048c871e9426c677ce4026bf612fcbcc2927" translate="yes" xml:space="preserve">
          <source>ArrayExpression</source>
          <target state="translated">ArrayExpression</target>
        </trans-unit>
        <trans-unit id="732c5c8ecc734e72807c30052e877068cfabb79f" translate="yes" xml:space="preserve">
          <source>ArrayExpression and ArrayPattern</source>
          <target state="translated">ArrayExpression和ArrayPattern</target>
        </trans-unit>
        <trans-unit id="3ea5db1b781f5122a5eb2179ab2c211009c018a4" translate="yes" xml:space="preserve">
          <source>Arrays are objects, so they can have property names such as &lt;code&gt;&quot;-1&quot;&lt;/code&gt; or &lt;code&gt;&quot;2.5&quot;&lt;/code&gt;. However, those are just &quot;normal&quot; object properties that don't represent array elements. They don't influence the array's &lt;code&gt;length&lt;/code&gt;, and they are ignored by array methods like &lt;code&gt;.map&lt;/code&gt; or &lt;code&gt;.forEach&lt;/code&gt;.</source>
          <target state="translated">数组是对象，因此它们可以具有属性名称，例如 &lt;code&gt;&quot;-1&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;2.5&quot;&lt;/code&gt; 。但是，这些只是&amp;ldquo;普通&amp;rdquo;对象属性，不代表数组元素。它们不会影响数组的 &lt;code&gt;length&lt;/code&gt; ，并且会被 &lt;code&gt;.map&lt;/code&gt; 或 &lt;code&gt;.forEach&lt;/code&gt; 之类的数组方法忽略。</target>
        </trans-unit>
        <trans-unit id="f69ad151738c1fc440c6c498b7fc67ee1775b2df" translate="yes" xml:space="preserve">
          <source>Arrow functions (&lt;code&gt;=&amp;gt;&lt;/code&gt;) are similar in syntax to some comparison operators (&lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt;). This rule warns against using the arrow function syntax in places where a condition is expected. Even if the arguments of the arrow function are wrapped with parens, this rule still warns about it.</source>
          <target state="translated">箭头函数（ &lt;code&gt;=&amp;gt;&lt;/code&gt; ）的语法类似于某些比较运算符（ &lt;code&gt;&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&lt;/code&gt; 和 &lt;code&gt;&amp;gt;=&lt;/code&gt; ）。该规则警告不要在可能出现条件的地方使用箭头函数语法。即使arrow函数的参数用括号括起来，该规则仍会对其发出警告。</target>
        </trans-unit>
        <trans-unit id="4a3b43a8931184e9ca69c21c5bd72b49ed93b1e7" translate="yes" xml:space="preserve">
          <source>Arrow functions (&lt;code&gt;=&amp;gt;&lt;/code&gt;) are similar in syntax to some comparison operators (&lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, and &lt;code&gt;&amp;gt;=&lt;/code&gt;). This rule warns against using the arrow function syntax in places where it could be confused with a comparison operator.</source>
          <target state="translated">箭头函数（ &lt;code&gt;=&amp;gt;&lt;/code&gt; ）的语法类似于某些比较运算符（ &lt;code&gt;&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;=&lt;/code&gt; 和 &lt;code&gt;&amp;gt;=&lt;/code&gt; ）。该规则警告不要在可能与比较运算符混淆的地方使用箭头函数语法。</target>
        </trans-unit>
        <trans-unit id="bfd0c70c044d2f23664b1c4327d9b79430062401" translate="yes" xml:space="preserve">
          <source>Arrow functions can be an attractive alternative to function expressions for callbacks or function arguments.</source>
          <target state="translated">箭头函数可以成为回调或函数参数的函数表达式的一个有吸引力的替代方案。</target>
        </trans-unit>
        <trans-unit id="7e6cdc713a515de0161d2398e627f9ccf2d292b7" translate="yes" xml:space="preserve">
          <source>Arrow functions can omit parentheses when they have exactly one parameter. In all other cases the parameter(s) must be wrapped in parentheses. This rule enforces the consistent use of parentheses in arrow functions.</source>
          <target state="translated">当箭头函数只有一个参数时,可以省略括号。在所有其他情况下,参数必须用括号包起来。这条规则保证了箭头函数中括号的一致使用。</target>
        </trans-unit>
        <trans-unit id="86962e3d2106eae0514d3ca150fcb521360f7e33" translate="yes" xml:space="preserve">
          <source>Arrow functions have two syntactic forms for their function bodies. They may be defined with a &lt;em&gt;block&lt;/em&gt; body (denoted by curly braces) &lt;code&gt;() =&amp;gt; { ... }&lt;/code&gt; or with a single expression &lt;code&gt;() =&amp;gt; ...&lt;/code&gt;, whose value is implicitly returned.</source>
          <target state="translated">箭头函数的功能体有两种语法形式。它们可以用&lt;em&gt;块&lt;/em&gt;体（用花括号表示） &lt;code&gt;() =&amp;gt; { ... }&lt;/code&gt; 或单个表达式 &lt;code&gt;() =&amp;gt; ...&lt;/code&gt; ，其值隐式返回。</target>
        </trans-unit>
        <trans-unit id="ad88ac6681f3fba161f8f17b35402682ae6dfd20" translate="yes" xml:space="preserve">
          <source>As a result, it was difficult for an integration to distinguish between the two cases to determine whether it should try to extract linting results from the output.</source>
          <target state="translated">因此,集成体很难区分两种情况来决定是否应该尝试从输出中提取绒毛结果。</target>
        </trans-unit>
        <trans-unit id="cef53b4059e20deb2e5c46250f59e175341842d1" translate="yes" xml:space="preserve">
          <source>As a rule of thumb: With ESLint v6, plugins should always be installed locally, even if ESLint was installed globally. More precisely, ESLint v6 resolves plugins relative to the end user's project by default, and always resolves shareable configs and parsers relative to the location of the config file that imports them.</source>
          <target state="translated">作为一个经验法则。在ESLint v6中,即使ESLint是在全球范围内安装的,插件也应该始终安装在本地。更准确的说,ESLint v6默认是相对于最终用户的项目解析插件,并且总是相对于导入它们的配置文件的位置解析可共享配置和解析器。</target>
        </trans-unit>
        <trans-unit id="5ac2a5d22276a18b4b5cf02e2da7daf5734ca95f" translate="yes" xml:space="preserve">
          <source>As an alternative, you can use the &lt;a href=&quot;no-global-assign&quot;&gt;no-global-assign&lt;/a&gt; and &lt;a href=&quot;no-shadow-restricted-names&quot;&gt;no-shadow-restricted-names&lt;/a&gt; rules to prevent &lt;code&gt;undefined&lt;/code&gt; from being shadowed or assigned a different value. This ensures that &lt;code&gt;undefined&lt;/code&gt; will always hold its original, expected value.</source>
          <target state="translated">或者，您可以使用&lt;a href=&quot;no-global-assign&quot;&gt;no-global-assign&lt;/a&gt;和&lt;a href=&quot;no-shadow-restricted-names&quot;&gt;no-shadow-restricted-names&lt;/a&gt;规则来防止 &lt;code&gt;undefined&lt;/code&gt; 被遮盖或分配不同的值。这样可以确保 &lt;code&gt;undefined&lt;/code&gt; 始终保持其原始预期值。</target>
        </trans-unit>
        <trans-unit id="bfabdafd218d7722aa287977e6776b77c7c9d117" translate="yes" xml:space="preserve">
          <source>As an example, let's assume you're using the package name &lt;code&gt;eslint-config-myconfig&lt;/code&gt; and your package looks something like this:</source>
          <target state="translated">例如，假设您使用的软件包名称为 &lt;code&gt;eslint-config-myconfig&lt;/code&gt; ,并且该软件包的外观如下所示：</target>
        </trans-unit>
        <trans-unit id="1e03fe02a8a4faab337d273cf85be225f6274838" translate="yes" xml:space="preserve">
          <source>As an example, suppose that you are using the &lt;code&gt;airbnb&lt;/code&gt; preset, so your &lt;code&gt;.jscsrc&lt;/code&gt; file looks like this:</source>
          <target state="translated">例如，假设您使用的是 &lt;code&gt;airbnb&lt;/code&gt; 预设，那么您的 &lt;code&gt;.jscsrc&lt;/code&gt; 文件如下所示：</target>
        </trans-unit>
        <trans-unit id="92656dee77e92e2cde09e2ed85c732113bec847a" translate="yes" xml:space="preserve">
          <source>As an example, you can create a file called &lt;code&gt;my-special-config.js&lt;/code&gt; in the root of your npm package and export a config, such as:</source>
          <target state="translated">例如，您可以在npm包的根目录中创建一个名为 &lt;code&gt;my-special-config.js&lt;/code&gt; 的文件并导出配置，例如：</target>
        </trans-unit>
        <trans-unit id="ab00035935ca3b0baf7ecef1d9105a1cc7f8bbf3" translate="yes" xml:space="preserve">
          <source>As announced in &lt;a href=&quot;https://eslint.org/blog/2016/10/eslint-v3.8.0-released#additional-property-on-linting-results&quot;&gt;October 2016&lt;/a&gt;, the &lt;code&gt;source&lt;/code&gt; property has been removed from individual lint message objects.</source>
          <target state="translated">如&lt;a href=&quot;https://eslint.org/blog/2016/10/eslint-v3.8.0-released#additional-property-on-linting-results&quot;&gt;2016&lt;/a&gt;年10月所宣布， &lt;code&gt;source&lt;/code&gt; 属性已从单个lint消息对象中删除。</target>
        </trans-unit>
        <trans-unit id="cc89e27f98a865cd56617be1e005e0fbabcceb74" translate="yes" xml:space="preserve">
          <source>As another example, you can disallow calls to &lt;code&gt;require()&lt;/code&gt;:</source>
          <target state="translated">再举一个例子，您可以禁止调用 &lt;code&gt;require()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="35711e725121bb4daddca1b88df5389087578f01" translate="yes" xml:space="preserve">
          <source>As far as naming conventions for identifiers go, dangling underscores may be the most polarizing in JavaScript. Dangling underscores are underscores at either the beginning or end of an identifier, such as:</source>
          <target state="translated">就标识符的命名惯例而言,悬垂的下划线可能是JavaScript中最两极化的。悬垂的下划线是指标识符的开头或结尾的下划线,例如:</target>
        </trans-unit>
        <trans-unit id="359ddf699fe41e18d17c5cee4d7389854514dd09" translate="yes" xml:space="preserve">
          <source>As illustrated above, the &lt;code&gt;--fix&lt;/code&gt; option, applied to this rule, does not comply with other rules, such as &lt;code&gt;indent&lt;/code&gt;, but, if those other rules are also in effect, the option applies them, too.</source>
          <target state="translated">如上所示，应用于此规则的 &lt;code&gt;--fix&lt;/code&gt; 选项不符合其他规则，例如 &lt;code&gt;indent&lt;/code&gt; ，但是，如果这些其他规则也有效，则该选项也将适用它们。</target>
        </trans-unit>
        <trans-unit id="63c22f0243a6ef055657c0b394805c35de30c0bb" translate="yes" xml:space="preserve">
          <source>As long as you do not explicitly disallow empty parentheses using the &lt;code&gt;&quot;empty&quot;&lt;/code&gt; exception , &lt;code&gt;()&lt;/code&gt; will be allowed.</source>
          <target state="translated">只要您没有使用 &lt;code&gt;&quot;empty&quot;&lt;/code&gt; 例外明确禁止使用空括号，就可以使用 &lt;code&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36031e157974d6e4e95c8577f6c65001ba72eb53" translate="yes" xml:space="preserve">
          <source>As noted above, don't try to conform to user-defined styles.</source>
          <target state="translated">如上所述,不要试图符合用户定义的风格。</target>
        </trans-unit>
        <trans-unit id="6997d9f9481d3aa449f1f150ecff4a38d74cd109" translate="yes" xml:space="preserve">
          <source>As of April 2019, Node.js 6 will be at EOL and will no longer be receiving security updates. As a result, we have decided to drop support for it in ESLint v6. We now support the following versions of Node.js:</source>
          <target state="translated">从2019年4月起,Node.js 6将处于EOL状态,不再接受安全更新。因此,我们决定在ESLint v6中放弃对它的支持。我们现在支持以下版本的Node.js。</target>
        </trans-unit>
        <trans-unit id="b8e4d215a9b1053a82c1c3667c7e83f450b7e535" translate="yes" xml:space="preserve">
          <source>As of April 30th, 2018, Node.js 4 will be at EOL and will no longer be receiving security updates. As a result, we have decided to drop support for it in ESLint v5. We now support the following versions of Node.js:</source>
          <target state="translated">从2018年4月30日起,Node.js 4将处于EOL状态,不再接受安全更新。因此,我们决定在ESLint v5中放弃对它的支持。 我们现在支持以下版本的Node.js。</target>
        </trans-unit>
        <trans-unit id="639737c9a0fcdaaf4de4d62a4eb3832bf70ec145" translate="yes" xml:space="preserve">
          <source>As of the ECMAScript 5 specification, octal escape sequences in string literals are deprecated and should not be used. Unicode escape sequences should be used instead.</source>
          <target state="translated">从ECMAScript 5规范开始,字符串字元中的八进制转义序列已被废弃,不应使用。应该使用Unicode转义序列。</target>
        </trans-unit>
        <trans-unit id="e5f796d7f3a3af24d75131206d0abc1c2fc320e4" translate="yes" xml:space="preserve">
          <source>As of today there is no consistency in separating variable declarations from the rest of the code. Some developers leave an empty line between var statements and the rest of the code like:</source>
          <target state="translated">到今天为止,在将变量声明与代码的其他部分分开方面还没有一致性。有些开发人员在var语句和代码的其他部分之间留下了空行,比如:。</target>
        </trans-unit>
        <trans-unit id="919575f3efa6c0f02be94e623198fe4b3f3858de" translate="yes" xml:space="preserve">
          <source>As with other operators, whitespace is allowed between the rest or spread operator and the expression it is operating on, which can lead to inconsistent spacing within a codebase.</source>
          <target state="translated">与其他运算符一样,在休止符或扩展运算符与它所操作的表达式之间允许有空格,这可能导致代码库中的间距不一致。</target>
        </trans-unit>
        <trans-unit id="dcc322d290b8282a3ec6a0dcc7758c4cf606caee" translate="yes" xml:space="preserve">
          <source>Assignment to variables declared as function parameters can be misleading and lead to confusing behavior, as modifying function parameters will also mutate the &lt;code&gt;arguments&lt;/code&gt; object. Often, assignment to function parameters is unintended and indicative of a mistake or programmer error.</source>
          <target state="translated">分配给声明为函数参数的变量可能会产生误导，并导致混乱的行为，因为修改函数参数还会使 &lt;code&gt;arguments&lt;/code&gt; 对象发生变化。通常，对功能参数的分配是意料之外的，并且指示错误或编程错误。</target>
        </trans-unit>
        <trans-unit id="057d58c74d80136578cabbeee1b89206c3250bd4" translate="yes" xml:space="preserve">
          <source>Assignments</source>
          <target state="translated">Assignments</target>
        </trans-unit>
        <trans-unit id="5b6a96371479cd831de3c86df48d3f84797d4f2d" translate="yes" xml:space="preserve">
          <source>Asynchronous functions are designed to work with promises such that throwing an error will cause a promise's rejection handler (such as &lt;code&gt;catch()&lt;/code&gt;) to be called. For example:</source>
          <target state="translated">异步函数被设计为与Promise一起使用，从而引发错误将导致Promise的拒绝处理程序（例如 &lt;code&gt;catch()&lt;/code&gt; ）被调用。例如：</target>
        </trans-unit>
        <trans-unit id="5d9edce612edcef785910f3d8c06b7cc17be832d" translate="yes" xml:space="preserve">
          <source>Asynchronous functions in JavaScript behave differently than other functions in two important ways:</source>
          <target state="translated">JavaScript中的异步函数在两个重要方面与其他函数的行为不同。</target>
        </trans-unit>
        <trans-unit id="d07b283087747dcb783d2c5638a96fb74be3a055" translate="yes" xml:space="preserve">
          <source>Asynchronous functions that don't use &lt;code&gt;await&lt;/code&gt; might not need to be asynchronous functions and could be the unintentional result of refactoring.</source>
          <target state="translated">不使用 &lt;code&gt;await&lt;/code&gt; 异步功能可能不必是异步功能，并且可能是重构的意外结果。</target>
        </trans-unit>
        <trans-unit id="495cf70b3cb0e5d5ab7aca92fdf16ff61b730e2a" translate="yes" xml:space="preserve">
          <source>At a high level, there are a few key parts to ESLint:</source>
          <target state="translated">在高层次上,ESLint有几个关键部分。</target>
        </trans-unit>
        <trans-unit id="621a7b37086b2293090e367d567f731b096f33e9" translate="yes" xml:space="preserve">
          <source>At least one pattern that should &lt;strong&gt;not&lt;/strong&gt; be flagged as a warning.</source>
          <target state="translated">至少一个图案应该&lt;strong&gt;不是&lt;/strong&gt;被标记为警告。</target>
        </trans-unit>
        <trans-unit id="ceaa0640f64b301c62702fc1f3dbd78d5989a7d3" translate="yes" xml:space="preserve">
          <source>At the end of a line, describing the code before it.</source>
          <target state="translated">在一行的最后,描述前面的代码。</target>
        </trans-unit>
        <trans-unit id="72ebf06181ae179602daa4a6f7199df15311cc04" translate="yes" xml:space="preserve">
          <source>Atom: &lt;a href=&quot;https://atom.io/packages/linter-eslint&quot;&gt;linter-eslint&lt;/a&gt;</source>
          <target state="translated">原子：&lt;a href=&quot;https://atom.io/packages/linter-eslint&quot;&gt;短绒夹板&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="abe4bd9fe57b0bcc1427ef624d7c93cec300a520" translate="yes" xml:space="preserve">
          <source>Autofix</source>
          <target state="translated">Autofix</target>
        </trans-unit>
        <trans-unit id="d4cddfb1d29a73864682c265654bb0f2ef5476d3" translate="yes" xml:space="preserve">
          <source>Avoid any fixes that could change the runtime behavior of code and cause it to stop working.</source>
          <target state="translated">避免任何可能改变代码运行时行为并导致其停止工作的修复。</target>
        </trans-unit>
        <trans-unit id="306c84fc19df225b2358435f3ea8025274a539d7" translate="yes" xml:space="preserve">
          <source>BackboneJS</source>
          <target state="translated">BackboneJS</target>
        </trans-unit>
        <trans-unit id="29f6864f9d968127a39d6137bd517abb38085639" translate="yes" xml:space="preserve">
          <source>Bad Parts: Appendix B - JavaScript: The Good Parts by Douglas Crockford</source>
          <target state="translated">坏的部分。附录B -JavaScript。Douglas Crockford的《好的部分》</target>
        </trans-unit>
        <trans-unit id="9d235dc23d56ee7523bf4a3040b040809b5d9d05" translate="yes" xml:space="preserve">
          <source>Bad names can lead to hard-to-decipher code. Generic names, such as &lt;code&gt;data&lt;/code&gt;, don't infer much about the code and the values it receives. This rule allows you to configure a blacklist of bad identifier names, that you don't want to see in your code.</source>
          <target state="translated">不良名称可能导致难以解密的代码。通用名称（例如 &lt;code&gt;data&lt;/code&gt; )对代码及其接收的值的推断不多。通过此规则，您可以配置不想在代码中看到的错误的标识符名称黑名单。</target>
        </trans-unit>
        <trans-unit id="45e3efa2edac0571ee67321d4540c6b50542b0b5" translate="yes" xml:space="preserve">
          <source>Balancing the trade-offs of improving a tool and the frustration these changes can cause is a difficult task. One key area in which this affects our users is in the removal of rules.</source>
          <target state="translated">在改进工具和这些变化可能造成的挫折之间进行权衡是一项艰巨的任务。这对我们的用户产生影响的一个关键领域是删除规则。</target>
        </trans-unit>
        <trans-unit id="0a6c27b74b2f0cc0a381a8c3c2e72f8e524c139f" translate="yes" xml:space="preserve">
          <source>Base config: &lt;code&gt;&quot;eqeqeq&quot;: [&quot;error&quot;, &quot;allow-null&quot;]&lt;/code&gt;</source>
          <target state="translated">基本配置： &lt;code&gt;&quot;eqeqeq&quot;: [&quot;error&quot;, &quot;allow-null&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9860705f28896b947024df2984725f09dd6c922e" translate="yes" xml:space="preserve">
          <source>Base config: &lt;code&gt;&quot;quotes&quot;: [&quot;error&quot;, &quot;single&quot;, &quot;avoid-escape&quot;]&lt;/code&gt;</source>
          <target state="translated">基本配置： &lt;code&gt;&quot;quotes&quot;: [&quot;error&quot;, &quot;single&quot;, &quot;avoid-escape&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36c41688b96ebca8546b978b079367e1aa359e74" translate="yes" xml:space="preserve">
          <source>Basic configuration</source>
          <target state="translated">基本配置</target>
        </trans-unit>
        <trans-unit id="01687ec15ad6446d986f944c334f8c817b38eb6c" translate="yes" xml:space="preserve">
          <source>Basically, this rule checks whether or not a function containing &lt;code&gt;this&lt;/code&gt; keyword is a constructor or a method.</source>
          <target state="translated">基本上，此规则检查包含 &lt;code&gt;this&lt;/code&gt; 关键字的函数是构造函数还是方法。</target>
        </trans-unit>
        <trans-unit id="af7d13a9632df81e6cb39ca5e79cc4662290eec7" translate="yes" xml:space="preserve">
          <source>Be general enough so as to apply for a large number of developers.</source>
          <target state="translated">要有足够的通用性,这样才能申请到大量的开发商。</target>
        </trans-unit>
        <trans-unit id="79bbf1337c47348353685759495b7a45014d286e" translate="yes" xml:space="preserve">
          <source>Be important enough that rule is deemed incomplete without this change</source>
          <target state="translated">要足够重要,如果不做这一改动,规则就会被视为不完整。</target>
        </trans-unit>
        <trans-unit id="5a54350365702eabd89e1fe99647f988f3033e85" translate="yes" xml:space="preserve">
          <source>Be related to an ECMAScript feature that has reached stage 4 in the preceding 12 months</source>
          <target state="translated">与过去12个月内达到第4阶段的ECMAScript功能相关。</target>
        </trans-unit>
        <trans-unit id="f4b55e25ea090a046d084a971240dfd3507ebe89" translate="yes" xml:space="preserve">
          <source>Be sure to replace &lt;code&gt;eslint-config-myconfig&lt;/code&gt; with the actual name of your module.</source>
          <target state="translated">确保将 &lt;code&gt;eslint-config-myconfig&lt;/code&gt; 替换为模块的实际名称。</target>
        </trans-unit>
        <trans-unit id="1ea22322c908aaf33db86bfe16cff237c8212ad5" translate="yes" xml:space="preserve">
          <source>Be sure to replace the value of &lt;code&gt;&quot;no-with&quot;&lt;/code&gt; with your rule's ID. There are plenty of examples in the &lt;code&gt;tests/lib/rules/&lt;/code&gt; directory.</source>
          <target state="translated">请务必将 &lt;code&gt;&quot;no-with&quot;&lt;/code&gt; 的值替换为规则ID。 &lt;code&gt;tests/lib/rules/&lt;/code&gt; 目录中有很多示例。</target>
        </trans-unit>
        <trans-unit id="18aedaaa28198e2a59dec8437406e3c102dd1605" translate="yes" xml:space="preserve">
          <source>Be sure to run this after making changes and before sending a pull request with your changes.</source>
          <target state="translated">请确保在做完修改之后,以及在发送带有修改的拉取请求之前,执行这个命令。</target>
        </trans-unit>
        <trans-unit id="51bc61c6b074f9a10af3f6c5c9591384318e3d81" translate="yes" xml:space="preserve">
          <source>Be very important for ESLint users because it either catches a serious problem or allows styling of code in accordance with a popular style guide</source>
          <target state="translated">对ESLint用户来说非常重要,因为它要么能发现一个严重的问题,要么允许按照流行的样式指南对代码进行样式设计</target>
        </trans-unit>
        <trans-unit id="810e6eb159bb09246263948760aa70f2100cfe2c" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;NaN&lt;/code&gt; is unique in JavaScript by not being equal to anything, including itself, the results of comparisons to &lt;code&gt;NaN&lt;/code&gt; are confusing:</source>
          <target state="translated">由于 &lt;code&gt;NaN&lt;/code&gt; 在JavaScript中是不唯一的，因为它不等于任何东西，包括它本身，所以与 &lt;code&gt;NaN&lt;/code&gt; 的比较结果令人困惑：</target>
        </trans-unit>
        <trans-unit id="5df824196b86c8adee95b01269bc5eeb40dedbe4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;let a&lt;/code&gt; and &lt;code&gt;let b&lt;/code&gt; in the &lt;code&gt;if&lt;/code&gt; statement are before the declarations in the outer scope, they are correct.</source>
          <target state="translated">因为 &lt;code&gt;if&lt;/code&gt; 语句中的 &lt;code&gt;let a&lt;/code&gt; 和 &lt;code&gt;let b&lt;/code&gt; 在外部作用域中的声明之前，所以它们是正确的。</target>
        </trans-unit>
        <trans-unit id="5f0497ce3d58dfa25f479c41ca69d85c12b0f4d4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;let a&lt;/code&gt; in the &lt;code&gt;if&lt;/code&gt; statement is before the &lt;em&gt;variable&lt;/em&gt; declaration in the outer scope, it is correct.</source>
          <target state="translated">因为 &lt;code&gt;if&lt;/code&gt; 语句中的 &lt;code&gt;let a&lt;/code&gt; 在外部作用域中的&lt;em&gt;变量&lt;/em&gt;声明之前，所以它是正确的。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01b065ee83f0fe8d1c0b2ce8c11b0d2e7f30c46b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;undefined&lt;/code&gt; can be overwritten or shadowed, reading &lt;code&gt;undefined&lt;/code&gt; can give an unexpected value. (This is not the case for &lt;code&gt;null&lt;/code&gt;, which is a keyword that always produces the same value.) To guard against this, you can avoid all uses of &lt;code&gt;undefined&lt;/code&gt;, which is what some style guides recommend and what this rule enforces. Those style guides then also recommend:</source>
          <target state="translated">由于 &lt;code&gt;undefined&lt;/code&gt; 可能会被覆盖或遮盖，因此读取 &lt;code&gt;undefined&lt;/code&gt; 可能会产生意外的值。（对于 &lt;code&gt;null&lt;/code&gt; 而言并非如此，null始终会产生相同的值。）为防止这种情况，您可以避免对 &lt;code&gt;undefined&lt;/code&gt; 的所有使用，这是某些样式指南的建议以及该规则的强制要求。这些样式指南还建议：</target>
        </trans-unit>
        <trans-unit id="8a6961b1fc4ead961a35ac6fe169d9c4f639c4f8" translate="yes" xml:space="preserve">
          <source>Because ESLint knows to look for packages beginning with &lt;code&gt;eslint-formatter-&lt;/code&gt; when the specified formatter doesn't begin with a dot, there is no need to type &lt;code&gt;eslint-formatter-&lt;/code&gt; when using a packaged custom formatter.</source>
          <target state="translated">由于ESLint知道要查找以 &lt;code&gt;eslint-formatter-&lt;/code&gt; 开头的软件包（当指定的格式化程序不是以点开头时），因此在使用打包的自定义格式化 &lt;code&gt;eslint-formatter-&lt;/code&gt; 时，无需键入eslint- formatter。</target>
        </trans-unit>
        <trans-unit id="4fc7dc53a3528436b27976bf4104d8d5429b3eba" translate="yes" xml:space="preserve">
          <source>Because empty character classes in regular expressions do not match anything, they might be typing mistakes.</source>
          <target state="translated">因为正则表达式中的空字符类不匹配任何东西,所以可能是输入错误。</target>
        </trans-unit>
        <trans-unit id="193c90e929807d2fbef26a901a7c3ae14756f0af" translate="yes" xml:space="preserve">
          <source>Because it is difficult to understand the meaning of a program through static analysis, this rule has limitations:</source>
          <target state="translated">因为通过静态分析很难理解程序的含义,所以这个规则有局限性。</target>
        </trans-unit>
        <trans-unit id="fa8356d791c997a2386c33d523d57552d8123e0b" translate="yes" xml:space="preserve">
          <source>Because of historical reason, JavaScript regular expressions are tolerant of syntax errors. For example, &lt;code&gt;/\w{1, 2/&lt;/code&gt; is a syntax error, but JavaScript doesn't throw the error. It matches strings such as &lt;code&gt;&quot;a{1, 2&quot;&lt;/code&gt; instead. Such a recovering logic is defined in Annex B.</source>
          <target state="translated">由于历史原因，JavaScript正则表达式可以容忍语法错误。例如， &lt;code&gt;/\w{1, 2/&lt;/code&gt; 是语法错误，但是JavaScript不会引发该错误。它匹配诸如 &lt;code&gt;&quot;a{1, 2&quot;&lt;/code&gt; 字符串。这样的恢复逻辑在附件B中定义。</target>
        </trans-unit>
        <trans-unit id="829485c20f3847468a65057a424a82114baf209a" translate="yes" xml:space="preserve">
          <source>Because of this ambiguity, it's considered a best practice to not use assignment in &lt;code&gt;return&lt;/code&gt; statements.</source>
          <target state="translated">由于存在这种歧义，因此最好不要在 &lt;code&gt;return&lt;/code&gt; 语句中使用赋值。</target>
        </trans-unit>
        <trans-unit id="6bdcdf38242a7e8f4d4fcd5fc5368730a95fbd82" translate="yes" xml:space="preserve">
          <source>Because of this line, all of the rules marked &quot;&quot; on the &lt;a href=&quot;https://eslint.org/docs/rules&quot;&gt;rules page&lt;/a&gt; will be turned on. Alternatively, you can use configurations that others have created by searching for &quot;eslint-config&quot; on &lt;a href=&quot;https://www.npmjs.com/search?q=eslint-config&quot;&gt;npmjs.com&lt;/a&gt;. ESLint will not lint your code unless you extend from a shared configuration or explicitly turn rules on in your configuration.</source>
          <target state="translated">由于这一行，&lt;a href=&quot;https://eslint.org/docs/rules&quot;&gt;规则页面&lt;/a&gt;上标记为&amp;ldquo;&amp;rdquo;的所有规则都将打开。另外，您也可以使用配置，其他人都通过搜索的&amp;ldquo;eslint-配置&amp;rdquo;创建&lt;a href=&quot;https://www.npmjs.com/search?q=eslint-config&quot;&gt;npmjs.com&lt;/a&gt;。除非您从共享配置扩展或在配置中显式打开规则，否则ESLint不会对代码进行处理。</target>
        </trans-unit>
        <trans-unit id="c58cd425c976939ecd82b2995c639212a60ad578" translate="yes" xml:space="preserve">
          <source>Because rules are highly personal (and therefore very contentious), accepted rules should:</source>
          <target state="translated">因为规则是高度个人化的(因此争议很大),所以公认的规则应该:</target>
        </trans-unit>
        <trans-unit id="54ee4e3ecc629da796061aa811a204b0d0ede953" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, and &lt;code&gt;continue&lt;/code&gt; statements unconditionally exit a block of code, any statements after them cannot be executed. Unreachable statements are usually a mistake.</source>
          <target state="translated">因为 &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;throw&lt;/code&gt; ， &lt;code&gt;break&lt;/code&gt; 和 &lt;code&gt;continue&lt;/code&gt; 语句无条件退出代码块，所以它们之后的任何语句都无法执行。无法到达的语句通常是一个错误。</target>
        </trans-unit>
        <trans-unit id="96acc830fffba196b06148e83e6c35be6a3547ca" translate="yes" xml:space="preserve">
          <source>Because the default formatter does not output the fixed code, you'll have to use another one (e.g. &lt;code&gt;json&lt;/code&gt;) to get the fixes. Here's an example of this pattern:</source>
          <target state="translated">因为默认格式器不输出固定代码，所以您必须使用另一个格式器（例如 &lt;code&gt;json&lt;/code&gt; ）来获取修复程序。这是此模式的示例：</target>
        </trans-unit>
        <trans-unit id="2268244767d0a8979d97ea56564f6062501bc559" translate="yes" xml:space="preserve">
          <source>Because the leading zero which identifies an octal literal has been a source of confusion and error in JavaScript code, ECMAScript 5 deprecates the use of octal numeric literals.</source>
          <target state="translated">由于标识八进制文字的前导零一直是JavaScript代码中混乱和错误的来源,ECMAScript 5不允许使用八进制数字文字。</target>
        </trans-unit>
        <trans-unit id="8c82248abc6dfee06debb73cfce89a8e4f795a1b" translate="yes" xml:space="preserve">
          <source>Because the unary &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt; operators are subject to automatic semicolon insertion, differences in whitespace can change semantics of source code.</source>
          <target state="translated">由于一元 &lt;code&gt;++&lt;/code&gt; 和 &lt;code&gt;--&lt;/code&gt; 运算符会自动插入分号，因此空格之间的差异可能会更改源代码的语义。</target>
        </trans-unit>
        <trans-unit id="f604fe978a15911ed565d1015ff35e244c161a38" translate="yes" xml:space="preserve">
          <source>Before ES2015, one must use &lt;code&gt;Function.prototype.apply()&lt;/code&gt; to call variadic functions.</source>
          <target state="translated">在ES2015之前，必须使用 &lt;code&gt;Function.prototype.apply()&lt;/code&gt; 调用可变参数函数。</target>
        </trans-unit>
        <trans-unit id="04d85842fb0b6614fec5658d9178bccc19435047" translate="yes" xml:space="preserve">
          <source>Before a multi-line or single-line comment</source>
          <target state="translated">在多行或单行注释前</target>
        </trans-unit>
        <trans-unit id="6a8fc4a82c425da02c6e46947503f16797bbd31e" translate="yes" xml:space="preserve">
          <source>Before beginning the process of migrating to ESLint, it's helpful to understand some of the terminology that ESLint uses and how it relates to terminology that JSCS uses.</source>
          <target state="translated">在开始迁移到 ESLint 的过程之前,了解 ESLint 使用的一些术语以及它与 JSCS 使用的术语的关系是很有帮助的。</target>
        </trans-unit>
        <trans-unit id="793c8c352b760ab25f360bc8326c9bc71cd0b225" translate="yes" xml:space="preserve">
          <source>Before using the plugin, you have to install it using npm.</source>
          <target state="translated">在使用该插件之前,你必须使用npm安装它。</target>
        </trans-unit>
        <trans-unit id="6e511de50956811edeb578d59a0804fbfbe8dea8" translate="yes" xml:space="preserve">
          <source>Before you can get started developing, you'll need to have a couple of things installed:</source>
          <target state="translated">在你开始开发之前,你需要安装一些东西。</target>
        </trans-unit>
        <trans-unit id="0130cfac353bfd32d8fda0c8f1e2c0f0eea17e6d" translate="yes" xml:space="preserve">
          <source>Before you can get started, you'll need to get a copy of the ESLint source code. This section explains how to do that and a little about the source code structure.</source>
          <target state="translated">在您开始之前,您需要得到一份 ESLint 源代码的副本。本节将解释如何做到这一点,并介绍一下源代码的结构。</target>
        </trans-unit>
        <trans-unit id="995b6b46a3656fa3fd0e18ff29db167a9a0ad968" translate="yes" xml:space="preserve">
          <source>Before you send the pull request, be sure to rebase onto the upstream source. This ensures your code is running on the latest available code.</source>
          <target state="translated">在你发送拉取请求之前,请确保重新建立上游源码的基础。这将确保你的代码运行在最新的可用代码上。</target>
        </trans-unit>
        <trans-unit id="992e83579bc6ea6859e6f627be4f4eab97b057be" translate="yes" xml:space="preserve">
          <source>Behind the scenes in this example, a &lt;code&gt;String&lt;/code&gt; object is constructed. The &lt;code&gt;substring()&lt;/code&gt; method exists on &lt;code&gt;String.prototype&lt;/code&gt; and so is accessible to the string instance.</source>
          <target state="translated">在此示例的幕后，构造了一个 &lt;code&gt;String&lt;/code&gt; 对象。该 &lt;code&gt;substring()&lt;/code&gt; 方法存在于 &lt;code&gt;String.prototype&lt;/code&gt; ，所以是字符串实例访问。</target>
        </trans-unit>
        <trans-unit id="36de90e22d47f94d755a4b1bb70aaddc1bb47593" translate="yes" xml:space="preserve">
          <source>Best Practices</source>
          <target state="translated">最佳做法</target>
        </trans-unit>
        <trans-unit id="338ee79beaaaf18126ed94b8ed03f554024e0cfd" translate="yes" xml:space="preserve">
          <source>Best practices for fixes:</source>
          <target state="translated">修复的最佳做法。</target>
        </trans-unit>
        <trans-unit id="adf5c01b97b20119b71324bd7d7da5f8f31c07c4" translate="yes" xml:space="preserve">
          <source>Best practices for suggestions:</source>
          <target state="translated">建议的最佳做法。</target>
        </trans-unit>
        <trans-unit id="4386a3199d49f37540036167c2bb082a887d89c5" translate="yes" xml:space="preserve">
          <source>Between class and interface definitions</source>
          <target state="translated">在类和接口定义之间</target>
        </trans-unit>
        <trans-unit id="e4f1e78655d2e55a66e32e73e443e9bfa69aad3b" translate="yes" xml:space="preserve">
          <source>Between logical sections inside a method to improve readability</source>
          <target state="translated">在方法内的逻辑部分之间,以提高可读性。</target>
        </trans-unit>
        <trans-unit id="6d933ad8020c5b55ee20e6d8689eedf9c5360026" translate="yes" xml:space="preserve">
          <source>Between methods</source>
          <target state="translated">方法之间</target>
        </trans-unit>
        <trans-unit id="ef7e5a6d3249c554a4ce807b393edf17264edfd6" translate="yes" xml:space="preserve">
          <source>Between sections of a source file</source>
          <target state="translated">在源文件的各部分之间</target>
        </trans-unit>
        <trans-unit id="c6cc8a57f3e58d7cd4de8dbcbc697d3180b54db0" translate="yes" xml:space="preserve">
          <source>Between the local variables in a method and its first statement</source>
          <target state="translated">在方法中的局部变量和它的第一条声明之间</target>
        </trans-unit>
        <trans-unit id="bbf1b9521b28972220cbf79325e2c20617b6b053" translate="yes" xml:space="preserve">
          <source>Bitwise Operators: &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt;, &lt;code&gt;&quot;|&quot;&lt;/code&gt;, &lt;code&gt;&quot;^&quot;&lt;/code&gt;, &lt;code&gt;&quot;~&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;lt;&amp;lt;&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&quot;&lt;/code&gt;</source>
          <target state="translated">按位运算符： &lt;code&gt;&quot;&amp;amp;&quot;&lt;/code&gt; ， &lt;code&gt;&quot;|&quot;&lt;/code&gt; ， &lt;code&gt;&quot;^&quot;&lt;/code&gt; ， &lt;code&gt;&quot;~&quot;&lt;/code&gt; ， &lt;code&gt;&quot;&amp;lt;&amp;lt;&quot;&lt;/code&gt; ， &lt;code&gt;&quot;&amp;gt;&amp;gt;&quot;&lt;/code&gt; ， &lt;code&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e13b68b58d811fab318ca729a8f17b37d477b3d3" translate="yes" xml:space="preserve">
          <source>Blank lines improve readability by setting off sections of code that are logically related.</source>
          <target state="translated">空白行通过衬托逻辑上相关的代码部分来提高可读性。</target>
        </trans-unit>
        <trans-unit id="8cd96bd62f5564682b84ba6192bf191b1be28b43" translate="yes" xml:space="preserve">
          <source>Blank spaces should be used in the following circumstances:</source>
          <target state="translated">在下列情况下应使用空白处:</target>
        </trans-unit>
        <trans-unit id="81e3cc1d3b5e5b1c0ad4b801e19204c1fb3921fc" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;path.join()&lt;/code&gt; and &lt;code&gt;path.resolve()&lt;/code&gt; are suitable replacements for string concatenation wherever file or directory paths are being created.</source>
          <target state="translated">无论在何处创建文件或目录路径， &lt;code&gt;path.join()&lt;/code&gt; 和 &lt;code&gt;path.resolve()&lt;/code&gt; 都是字符串串联的合适替代。</target>
        </trans-unit>
        <trans-unit id="fc21e1e88cd5040eb200959e21d74c582122508b" translate="yes" xml:space="preserve">
          <source>Both JSCS and ESLint have command line arguments corresponding to many of their configuration options. The following are the ESLint equivalents of JSCS command line options.</source>
          <target state="translated">JSCS 和 ESLint 都有对应于许多配置选项的命令行参数。下面是相当于JSCS命令行选项的ESLint。</target>
        </trans-unit>
        <trans-unit id="097359be4adea4dcbabe6e8d3e40261ed26fa3b4" translate="yes" xml:space="preserve">
          <source>Both JSCS and ESLint use comments inside of files to disable rules around certain parts of your code. The following table lists out the JSCS inline configuration comments and their ESLint equivalents.</source>
          <target state="translated">JSCS 和 ESLint 都在文件中使用注释来禁用代码中某些部分的规则。下表列出了 JSCS 内联配置注释和它们的 ESLint 等价物。</target>
        </trans-unit>
        <trans-unit id="fcd59eef72f9e0322f0828949f6c01aa1aa8058e" translate="yes" xml:space="preserve">
          <source>Both flags are also supported by ESLint:</source>
          <target state="translated">ESLint也支持这两个标志。</target>
        </trans-unit>
        <trans-unit id="7eb400d0db2fc241e32273e1dc9da88bebb4f838" translate="yes" xml:space="preserve">
          <source>Both the JSON and YAML configuration file formats support comments (&lt;code&gt;package.json&lt;/code&gt; files should not include them). You can use JavaScript-style comments or YAML-style comments in either type of file and ESLint will safely ignore them. This allows your configuration files to be more human-friendly. For example:</source>
          <target state="translated">JSON和YAML配置文件格式均支持注释（ &lt;code&gt;package.json&lt;/code&gt; 文件不应包含注释）。您可以在两种文件类型中使用JavaScript样式的注释或YAML样式的注释，ESLint会安全地忽略它们。这使您的配置文件更加人性化。例如：</target>
        </trans-unit>
        <trans-unit id="7ca62df9fb4211495bebeb6ed476dbf24104a6bf" translate="yes" xml:space="preserve">
          <source>Brace style is closely related to &lt;a href=&quot;https://en.wikipedia.org/wiki/Indent_style&quot;&gt;indent style&lt;/a&gt; in programming and describes the placement of braces relative to their control statement and body. There are probably a dozen, if not more, brace styles in the world.</source>
          <target state="translated">括号样式与编程中的&lt;a href=&quot;https://en.wikipedia.org/wiki/Indent_style&quot;&gt;缩进样式&lt;/a&gt;紧密相关，并描述了括号相对于其控制语句和主体的位置。世界上可能有十二种（甚至更多）花括号样式。</target>
        </trans-unit>
        <trans-unit id="e376515dc59aa7f7420b054f55c95a72840be55b" translate="yes" xml:space="preserve">
          <source>Braces are used around all statements, even single statements, when they are part of a control structure, such as a &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;for&lt;/code&gt; statement. This makes it easier to add statements without accidentally introducing bugs due to forgetting to add braces.</source>
          <target state="translated">当括号是控制结构的一部分（例如， &lt;code&gt;if&lt;/code&gt; 或 &lt;code&gt;for&lt;/code&gt; 语句）时，括号用于所有语句，甚至单个语句。这使得添加语句更加容易，而不会由于忘记添加花括号而意外引入错误。</target>
        </trans-unit>
        <trans-unit id="6530074f50b1f9635a7588144e97521fd80531e4" translate="yes" xml:space="preserve">
          <source>Brackets: Included and &lt;a href=&quot;https://github.com/brackets-userland/brackets-eslint&quot;&gt;Brackets ESLint&lt;/a&gt;</source>
          <target state="translated">支架：包括和&lt;a href=&quot;https://github.com/brackets-userland/brackets-eslint&quot;&gt;支架ESLint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="340cf97750d96a23ba91ddb2d90b8154b27637af" translate="yes" xml:space="preserve">
          <source>Breaking changes for integration developers</source>
          <target state="translated">集成开发人员的突破性变化</target>
        </trans-unit>
        <trans-unit id="79e8db2e0b61dbfeb71d434b83b7fdf1e8353e53" translate="yes" xml:space="preserve">
          <source>Breaking changes for plugin/custom rule developers</source>
          <target state="translated">插件/自定义规则开发者的突破性变化</target>
        </trans-unit>
        <trans-unit id="0fbc2bcadf39845db18cc44b3b7cc8416c784aea" translate="yes" xml:space="preserve">
          <source>Breaking changes for users</source>
          <target state="translated">突破用户的改变</target>
        </trans-unit>
        <trans-unit id="18e01f9cc8e37b9339253d5f02203a453a4b8b23" translate="yes" xml:space="preserve">
          <source>Broccoli: &lt;a href=&quot;https://www.npmjs.com/package/broccoli-eslint&quot;&gt;broccoli-eslint&lt;/a&gt;</source>
          <target state="translated">西兰花：&lt;a href=&quot;https://www.npmjs.com/package/broccoli-eslint&quot;&gt;西兰花&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77fdd4bc652997ceee49d1ddc76041c440aafb4d" translate="yes" xml:space="preserve">
          <source>Browser-specific code is necessary but not obvious.</source>
          <target state="translated">浏览器专用代码是必要的,但不明显。</target>
        </trans-unit>
        <trans-unit id="13842e2cda464c6e5b2211b8fc003ba47776341d" translate="yes" xml:space="preserve">
          <source>Browserify: &lt;a href=&quot;https://www.npmjs.com/package/eslintify&quot;&gt;eslintify&lt;/a&gt;</source>
          <target state="translated">Browserify：&lt;a href=&quot;https://www.npmjs.com/package/eslintify&quot;&gt;附加&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba1c2edbe22a1404f5105d58fea00b02f1cef470" translate="yes" xml:space="preserve">
          <source>Brunch: &lt;a href=&quot;https://www.npmjs.com/package/eslint-brunch&quot;&gt;eslint-brunch&lt;/a&gt;</source>
          <target state="translated">早午餐：&lt;a href=&quot;https://www.npmjs.com/package/eslint-brunch&quot;&gt;埃斯林特-早午餐&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ad4810417150ac15e14a03f28bd425d2a3d5e0b" translate="yes" xml:space="preserve">
          <source>Buffer API documentation</source>
          <target state="translated">缓冲区API文档</target>
        </trans-unit>
        <trans-unit id="2c2ba055cfeabd97664f95c9afa9c9b3b42743eb" translate="yes" xml:space="preserve">
          <source>Buffer(number) is unsafe</source>
          <target state="translated">Buffer(number)不安全</target>
        </trans-unit>
        <trans-unit id="cb16822f3ab4a4b7c7befbf6b7a12d0f7072950e" translate="yes" xml:space="preserve">
          <source>Bug Reporting</source>
          <target state="translated">错误报告</target>
        </trans-unit>
        <trans-unit id="dec3feb7fd8b128570af46d194a8fd5cfea9b359" translate="yes" xml:space="preserve">
          <source>Build Next</source>
          <target state="translated">建立下一个</target>
        </trans-unit>
        <trans-unit id="822264b557dcda455c20fd570787ede9d1be28be" translate="yes" xml:space="preserve">
          <source>Build Scripts</source>
          <target state="translated">构建脚本</target>
        </trans-unit>
        <trans-unit id="2764e7dc64a6afa8f6572a70be9cc2ef88d207b2" translate="yes" xml:space="preserve">
          <source>Build tools</source>
          <target state="translated">构建工具</target>
        </trans-unit>
        <trans-unit id="2d3d56e9ff9b13595d5908c502bfb869204bdf51" translate="yes" xml:space="preserve">
          <source>Built-In Global Variables</source>
          <target state="translated">内置的全局变量</target>
        </trans-unit>
        <trans-unit id="d23289056db225350425b91c74287655e2695db4" translate="yes" xml:space="preserve">
          <source>But the modification is a mistake in most cases.</source>
          <target state="translated">但在大多数情况下,这种修改是错误的。</target>
        </trans-unit>
        <trans-unit id="c65cb686f365d97cef1431d92333403c589534f2" translate="yes" xml:space="preserve">
          <source>But this one, will only produce one:</source>
          <target state="translated">但这个人,只会产生一个。</target>
        </trans-unit>
        <trans-unit id="2faa4f26619721a43dbbcab57f8867c25e859b14" translate="yes" xml:space="preserve">
          <source>But until 1.x, the following variables and references had the wrong value (empty) in those properties:</source>
          <target state="translated">但在1.x之前,以下变量和引用在这些属性中的值是错误的(空)。</target>
        </trans-unit>
        <trans-unit id="a0a6bac896190981738cec1ee713180ff3599d1f" translate="yes" xml:space="preserve">
          <source>By activating the option &lt;code&gt;getWithoutSet&lt;/code&gt; it enforces the presence of a setter for every property which has a getter defined.</source>
          <target state="translated">通过激活选项 &lt;code&gt;getWithoutSet&lt;/code&gt; ,它为定义了getter的每个属性强制存在setter。</target>
        </trans-unit>
        <trans-unit id="53edaff02bbaaf04f6f1ca246edc0a309d984524" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;{ &quot;allowNamedFunctions&quot;: false }&lt;/code&gt;, this &lt;code&gt;boolean&lt;/code&gt; option prohibits using named functions as callbacks or function arguments.</source>
          <target state="translated">默认情况下 &lt;code&gt;{ &quot;allowNamedFunctions&quot;: false }&lt;/code&gt; ，此 &lt;code&gt;boolean&lt;/code&gt; 选项禁止使用命名函数作为回调或函数参数。</target>
        </trans-unit>
        <trans-unit id="142bee28961c86e6edb34112baf458575b649ec3" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;{ &quot;allowUnboundThis&quot;: true }&lt;/code&gt;, this &lt;code&gt;boolean&lt;/code&gt; option allows function expressions containing &lt;code&gt;this&lt;/code&gt; to be used as callbacks, as long as the function in question has not been explicitly bound.</source>
          <target state="translated">默认情况下 &lt;code&gt;{ &quot;allowUnboundThis&quot;: true }&lt;/code&gt; ，此 &lt;code&gt;boolean&lt;/code&gt; 选项允许包含 &lt;code&gt;this&lt;/code&gt; 函数表达式用作回调，只要所涉及的函数未明确绑定即可。</target>
        </trans-unit>
        <trans-unit id="a9064adcb0fa99df7486883b2e36cc34c841823b" translate="yes" xml:space="preserve">
          <source>By default this rule ignores comments starting with the following words: &lt;code&gt;eslint&lt;/code&gt;, &lt;code&gt;jshint&lt;/code&gt;, &lt;code&gt;jslint&lt;/code&gt;, &lt;code&gt;istanbul&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, &lt;code&gt;exported&lt;/code&gt;, &lt;code&gt;jscs&lt;/code&gt;, &lt;code&gt;falls through&lt;/code&gt;. An alternative regular expression can be provided.</source>
          <target state="translated">默认情况下，这个规则忽略开始用下面的话评论： &lt;code&gt;eslint&lt;/code&gt; ， &lt;code&gt;jshint&lt;/code&gt; ， &lt;code&gt;jslint&lt;/code&gt; ， &lt;code&gt;istanbul&lt;/code&gt; ， &lt;code&gt;global&lt;/code&gt; ， &lt;code&gt;exported&lt;/code&gt; ， &lt;code&gt;jscs&lt;/code&gt; ， &lt;code&gt;falls through&lt;/code&gt; 。可以提供替代的正则表达式。</target>
        </trans-unit>
        <trans-unit id="75f81ef36c9ff48cc1d11f83611fc3688316cd07" translate="yes" xml:space="preserve">
          <source>By default this rule ignores comments starting with the following words: &lt;code&gt;eslint&lt;/code&gt;, &lt;code&gt;jshint&lt;/code&gt;, &lt;code&gt;jslint&lt;/code&gt;, &lt;code&gt;istanbul&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, &lt;code&gt;exported&lt;/code&gt;, &lt;code&gt;jscs&lt;/code&gt;. An alternative regular expression can be provided.</source>
          <target state="translated">默认情况下，此规则将忽略以以下单词开头的注释： &lt;code&gt;eslint&lt;/code&gt; ， &lt;code&gt;jshint&lt;/code&gt; ， &lt;code&gt;jslint&lt;/code&gt; ， &lt;code&gt;istanbul&lt;/code&gt; ， &lt;code&gt;global&lt;/code&gt; ， &lt;code&gt;exported&lt;/code&gt; ， &lt;code&gt;jscs&lt;/code&gt; 。可以提供替代的正则表达式。</target>
        </trans-unit>
        <trans-unit id="85f3d7dcb470f23f669e925692e8b09340b505aa" translate="yes" xml:space="preserve">
          <source>By default this rule ignores comments starting with the following words: &lt;code&gt;eslint&lt;/code&gt;, &lt;code&gt;jshint&lt;/code&gt;, &lt;code&gt;jslint&lt;/code&gt;, &lt;code&gt;istanbul&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, &lt;code&gt;exported&lt;/code&gt;, &lt;code&gt;jscs&lt;/code&gt;. To ignore more comments in addition to the defaults, set the &lt;code&gt;ignorePattern&lt;/code&gt; option to a string pattern that will be passed to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt; constructor&lt;/a&gt;.</source>
          <target state="translated">默认情况下，此规则将忽略以以下单词开头的注释： &lt;code&gt;eslint&lt;/code&gt; ， &lt;code&gt;jshint&lt;/code&gt; ， &lt;code&gt;jslint&lt;/code&gt; ， &lt;code&gt;istanbul&lt;/code&gt; ， &lt;code&gt;global&lt;/code&gt; ， &lt;code&gt;exported&lt;/code&gt; ， &lt;code&gt;jscs&lt;/code&gt; 。除了默认值以外，要忽略更多注释，请将 &lt;code&gt;ignorePattern&lt;/code&gt; 选项设置为将传递给&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; 构造函数&lt;/a&gt;的字符串模式。</target>
        </trans-unit>
        <trans-unit id="b090fa11c439d6a006cf50f9adb2d2cad2b33cde" translate="yes" xml:space="preserve">
          <source>By default this rule is enabled with &lt;code&gt;all&lt;/code&gt; option for variables and &lt;code&gt;after-used&lt;/code&gt; for arguments.</source>
          <target state="translated">默认情况下，对 &lt;code&gt;all&lt;/code&gt; 变量启用此规则，并为参数 &lt;code&gt;after-used&lt;/code&gt; 规则。</target>
        </trans-unit>
        <trans-unit id="810c57ecacff43e1120c95269231677bb6903a5a" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;&quot;always&quot;&lt;/code&gt; does not allow newlines. To permit newlines when in &lt;code&gt;&quot;always&quot;&lt;/code&gt; mode, set the &lt;code&gt;allowNewlines&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;. Newlines are never required.</source>
          <target state="translated">默认情况下， &lt;code&gt;&quot;always&quot;&lt;/code&gt; 不允许换行。要在 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 模式下允许换行，请将 &lt;code&gt;allowNewlines&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 。不需要换行符。</target>
        </trans-unit>
        <trans-unit id="8149432d30bea2fb7ccff7235a0e92b208229579" translate="yes" xml:space="preserve">
          <source>By default, ESLint uses &lt;a href=&quot;https://github.com/eslint/espree&quot;&gt;Espree&lt;/a&gt; as its parser. You can optionally specify that a different parser should be used in your configuration file so long as the parser meets the following requirements:</source>
          <target state="translated">默认情况下，ESLint使用&lt;a href=&quot;https://github.com/eslint/espree&quot;&gt;Espree&lt;/a&gt;作为其解析器。您可以选择指定在配置文件中使用其他解析器，只要该解析器满足以下要求：</target>
        </trans-unit>
        <trans-unit id="9577e9a635e28c68c848f26eabef31dbaa320c91" translate="yes" xml:space="preserve">
          <source>By default, ESLint will look for configuration files in all parent folders up to the root directory. This can be useful if you want all of your projects to follow a certain convention, but can sometimes lead to unexpected results. To limit ESLint to a specific project, place &lt;code&gt;&quot;root&quot;: true&lt;/code&gt; inside the &lt;code&gt;eslintConfig&lt;/code&gt; field of the &lt;code&gt;package.json&lt;/code&gt; file or in the &lt;code&gt;.eslintrc.*&lt;/code&gt; file at your project's root level. ESLint will stop looking in parent folders once it finds a configuration with &lt;code&gt;&quot;root&quot;: true&lt;/code&gt;.</source>
          <target state="translated">默认情况下，ESLint将在所有父文件夹中寻找配置文件，直到根目录为止。如果您希望所有项目都遵循某种约定，则这很有用，但有时会导致意外结果。要将ESLint限制为特定项目，请在项目根目录级别的 &lt;code&gt;package.json&lt;/code&gt; 文件的 &lt;code&gt;eslintConfig&lt;/code&gt; 字段中或 &lt;code&gt;.eslintrc.*&lt;/code&gt; 文件中放置 &lt;code&gt;&quot;root&quot;: true&lt;/code&gt; 。一旦找到带有 &lt;code&gt;&quot;root&quot;: true&lt;/code&gt; 的配置，ESLint将停止在父文件夹中查找。</target>
        </trans-unit>
        <trans-unit id="d3d5e5b4f445e783b9f14a4ed45e390a3c7a870a" translate="yes" xml:space="preserve">
          <source>By default, ESLint will not perform autofixes when a processor is used, even when the &lt;code&gt;--fix&lt;/code&gt; flag is enabled on the command line. To allow ESLint to autofix code when using your processor, you should take the following additional steps:</source>
          <target state="translated">默认情况下，即使在命令行上启用了 &lt;code&gt;--fix&lt;/code&gt; 标志，使用处理器时，ESLint也不会执行自动修复。要在使用处理器时允许ESLint自动修复代码，应采取以下附加步骤：</target>
        </trans-unit>
        <trans-unit id="642f4676bf0bdf93c93b4f8b0ebfa00e1a8aab5a" translate="yes" xml:space="preserve">
          <source>By default, all options are set to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">默认情况下，所有选项都设置为 &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="328d8066eb8920bc57166e2447115dae7191b68f" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../rules/no-multi-spaces&quot;&gt;&lt;code&gt;no-multi-spaces&lt;/code&gt;&lt;/a&gt; rule will now disallow multiple spaces before comments at the end of a line. Previously, the rule did not check this case.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;../rules/no-multi-spaces&quot;&gt; &lt;code&gt;no-multi-spaces&lt;/code&gt; &lt;/a&gt;规则现在将禁止在行末注释之前使用多个空格。以前，该规则未检查此情况。</target>
        </trans-unit>
        <trans-unit id="3ead8bee8725b19464565c53ddd55a35932fff07" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../rules/padded-blocks&quot;&gt;&lt;code&gt;padded-blocks&lt;/code&gt;&lt;/a&gt; rule will now enforce padding in class bodies and switch statements. Previously, the rule would ignore these cases unless the user opted into enforcing them.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;../rules/padded-blocks&quot;&gt; &lt;code&gt;padded-blocks&lt;/code&gt; &lt;/a&gt;规则现在将在类主体和switch语句中强制执行填充。以前，除非用户选择强制执行，否则规则将忽略这些情况。</target>
        </trans-unit>
        <trans-unit id="cb25911cbcc93e8fb7965ef138c4639fb91fdaa5" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../rules/space-before-function-paren&quot;&gt;&lt;code&gt;space-before-function-paren&lt;/code&gt;&lt;/a&gt; rule will now enforce spacing for async arrow functions. Previously, the rule would ignore these cases unless the user opted into enforcing them.</source>
          <target state="translated">默认情况下，&amp;ldquo; &lt;a href=&quot;../rules/space-before-function-paren&quot;&gt; &lt;code&gt;space-before-function-paren&lt;/code&gt; &lt;/a&gt;规则现在将为异步箭头函数强制间隔。以前，除非用户选择强制执行，否则规则将忽略这些情况。</target>
        </trans-unit>
        <trans-unit id="40a5c9e45294a4926d673ca17be828f827737310" translate="yes" xml:space="preserve">
          <source>By default, this method uses the configuration that applies to files in the current working directory (the &lt;code&gt;cwd&lt;/code&gt; constructor option). If you want to use a different configuration, pass &lt;code&gt;options.filePath&lt;/code&gt;, and ESLint will load the same configuration that &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; would use for a file at &lt;code&gt;options.filePath&lt;/code&gt;.</source>
          <target state="translated">默认情况下，此方法使用适用于当前工作目录中文件的配置（ &lt;code&gt;cwd&lt;/code&gt; 构造函数选项）。如果要使用其他配置，请传递 &lt;code&gt;options.filePath&lt;/code&gt; 和ESLint将加载与&lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt;用于 &lt;code&gt;options.filePath&lt;/code&gt; 的文件相同的配置。</target>
        </trans-unit>
        <trans-unit id="299d530060273666dadde871098da08bda8d3120" translate="yes" xml:space="preserve">
          <source>By default, this rule always allows the use of &lt;code&gt;this&lt;/code&gt; in functions which name starts with an uppercase and anonymous functions that are assigned to a variable which name starts with an uppercase, assuming that those functions are used as constructor functions.</source>
          <target state="translated">默认情况下，此规则始终允许在名称以大写字母开头的函数中使用 &lt;code&gt;this&lt;/code&gt; 函数，并在分配给名称以大写字母开头的变量的匿名函数中使用这些函数（假定这些函数用作构造函数）。</target>
        </trans-unit>
        <trans-unit id="dcebc7dd5e599c1fa7a260257a99e17c1b7b4f41" translate="yes" xml:space="preserve">
          <source>By default, this rule checks only object literals and property descriptors. If you want this rule to also check class declarations and class expressions, activate the option &lt;code&gt;enforceForClassMembers&lt;/code&gt;.</source>
          <target state="translated">默认情况下，此规则仅检查对象文字和属性描述符。如果您希望该规则也检查类声明和类表达式，请激活选项 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac583d46910ce2df6b784c5422f86d84784d80b9" translate="yes" xml:space="preserve">
          <source>By default, this rule does not check &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; declarations.</source>
          <target state="translated">默认情况下，此规则不检查 &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;let&lt;/code&gt; 和 &lt;code&gt;class&lt;/code&gt; 声明。</target>
        </trans-unit>
        <trans-unit id="d26744eeae2a34bc64432a235df5802392705e54" translate="yes" xml:space="preserve">
          <source>By default, this rule does not check class declarations and class expressions, as the default value for &lt;code&gt;enforceForClassMembers&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认情况下，此规则不检查类声明和类表达式，作为默认值 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13b530f087cdcc901afdd2f0a3e8affc01b112e8" translate="yes" xml:space="preserve">
          <source>By default, this rule does not enforce getter/setter pairs in class declarations and class expressions, as the default value for &lt;code&gt;enforceForClassMembers&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认情况下，该规则并没有强制的getter /类声明和类表达式二传手对，作为默认值 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf0a6e019c5801a980d6436f9683c62ae6bbbd9c" translate="yes" xml:space="preserve">
          <source>By default, this rule doesn&amp;rsquo;t check when a regex literal is unnecessarily wrapped in a &lt;code&gt;RegExp&lt;/code&gt; constructor call. When the option &lt;code&gt;disallowRedundantWrapping&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the rule will also disallow such unnecessary patterns.</source>
          <target state="translated">默认情况下，此规则不检查正则表达式文字是否不必要地包装在 &lt;code&gt;RegExp&lt;/code&gt; 构造函数调用中。当选项 &lt;code&gt;disallowRedundantWrapping&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ，该规则也将禁止这种不必要的图案。</target>
        </trans-unit>
        <trans-unit id="046441d01afdaf53feee5d9148871aec290a8572" translate="yes" xml:space="preserve">
          <source>By default, this rule warns whenever &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, or &lt;code&gt;do&lt;/code&gt; are used without block statements as their body. However, you can specify that block statements should be used only when there are multiple statements in the block and warn when there is only one statement in the block.</source>
          <target state="translated">默认情况下，只要 &lt;code&gt;if&lt;/code&gt; &lt;code&gt;do&lt;/code&gt; 使用block语句作为主体的情况下使用， &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; 或do时，此规则都会发出警告。但是，可以指定仅当块中有多个语句时才使用块语句，并在块中只有一个语句时发出警告。</target>
        </trans-unit>
        <trans-unit id="f9fcf545318b2ef2da7a24419f1e2ac87e444cd1" translate="yes" xml:space="preserve">
          <source>By default, this rule will require a non-lowercase letter at the beginning of comments.</source>
          <target state="translated">默认情况下,本规则将要求在评论的开头使用非小写字母。</target>
        </trans-unit>
        <trans-unit id="b4eeaf5a9cfbd492c09302efd0a7e6ded91be252" translate="yes" xml:space="preserve">
          <source>By throwing an error in this way, other parts of the application have an opportunity to handle the error rather than stopping the application altogether. If the error bubbles all the way up to the process without being handled, then the process will exit and a non-zero exit code will returned, so the end result is the same.</source>
          <target state="translated">通过这种方式抛出一个错误,应用程序的其他部分就有机会处理这个错误,而不是完全停止应用程序。如果错误一直冒到进程而没有被处理,那么进程就会退出,并返回一个非零的退出代码,所以最终结果是一样的。</target>
        </trans-unit>
        <trans-unit id="39a10e6844263ca8909b3bbe0de5a3537cac5758" translate="yes" xml:space="preserve">
          <source>By using the module name:</source>
          <target state="translated">通过使用模块名称。</target>
        </trans-unit>
        <trans-unit id="ee2345f2e860e68629829d65710dd0df3385db35" translate="yes" xml:space="preserve">
          <source>CLIEngine</source>
          <target state="translated">CLIEngine</target>
        </trans-unit>
        <trans-unit id="fa84c30b67500e79c26e8f7e089f568a07247b99" translate="yes" xml:space="preserve">
          <source>CLIEngine (deprecated)</source>
          <target state="translated">CLIEngine(已弃用</target>
        </trans-unit>
        <trans-unit id="39f0383de17763d08ff9f37db2edc301741ecfbc" translate="yes" xml:space="preserve">
          <source>CLIEngine#addPlugin()</source>
          <target state="translated">CLIEngine#addPlugin()</target>
        </trans-unit>
        <trans-unit id="a22267246c77d6f4c878ebd617018969e47dd10a" translate="yes" xml:space="preserve">
          <source>CLIEngine#executeOnFiles()</source>
          <target state="translated">CLIEngine#executeOnFiles()</target>
        </trans-unit>
        <trans-unit id="8aaf006cc9141b559c5c527aa262abaa02da9a68" translate="yes" xml:space="preserve">
          <source>CLIEngine#executeOnText()</source>
          <target state="translated">CLIEngine#executeOnText()</target>
        </trans-unit>
        <trans-unit id="5119e7a9a0f06a066d338a2a5227f1de3f2a3ba8" translate="yes" xml:space="preserve">
          <source>CLIEngine#getConfigForFile()</source>
          <target state="translated">CLIEngine#getConfigForFile()</target>
        </trans-unit>
        <trans-unit id="f248c6ca75d279906a5e83e020e644d56c01bcb3" translate="yes" xml:space="preserve">
          <source>CLIEngine#getErrorResults()</source>
          <target state="translated">CLIEngine#getErrorResults()</target>
        </trans-unit>
        <trans-unit id="33e37a3ba68b62fd095c124f08a8da94d579dc5e" translate="yes" xml:space="preserve">
          <source>CLIEngine#getFormatter()</source>
          <target state="translated">CLIEngine#getFormatter()</target>
        </trans-unit>
        <trans-unit id="f3f32f607dc57705731e718beaa6e7541390ea19" translate="yes" xml:space="preserve">
          <source>CLIEngine#getRules()</source>
          <target state="translated">CLIEngine#getRules()</target>
        </trans-unit>
        <trans-unit id="f5d91f42db796ef9fccb3113c5f1b379eee1985b" translate="yes" xml:space="preserve">
          <source>CLIEngine#isPathIgnored()</source>
          <target state="translated">CLIEngine#isPathIgnored()</target>
        </trans-unit>
        <trans-unit id="2c38fe2163d1a1410cce4874628be155c5420a54" translate="yes" xml:space="preserve">
          <source>CLIEngine#outputFixes()</source>
          <target state="translated">CLIEngine#outputFixes()</target>
        </trans-unit>
        <trans-unit id="64fe410eb3907152812ba29b988371e8c10c7930" translate="yes" xml:space="preserve">
          <source>CLIEngine#resolveFileGlobPatterns()</source>
          <target state="translated">CLIEngine#resolveFileGlobPatterns()</target>
        </trans-unit>
        <trans-unit id="4bec04eda41c2467258cf63a83bbcc00c182f096" translate="yes" xml:space="preserve">
          <source>CLIEngine.version</source>
          <target state="translated">CLIEngine.version</target>
        </trans-unit>
        <trans-unit id="f8afe6bb118117d4b5d879f4d42f4e3d845f343e" translate="yes" xml:space="preserve">
          <source>Cache-related</source>
          <target state="translated">Cache-related</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="cef5cdfb0c3e16bdf7d599da18abc72413e061a5" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;console.log()&lt;/code&gt; or any other similar method</source>
          <target state="translated">调用 &lt;code&gt;console.log()&lt;/code&gt; 或任何其他类似方法</target>
        </trans-unit>
        <trans-unit id="84a75cd5066765fb2d890a1abed4765af529054c" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;process.exit()&lt;/code&gt; directly</source>
          <target state="translated">直接调用 &lt;code&gt;process.exit()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8bc7444f8724edf2b88bce5ed493cab18f0f53e6" translate="yes" xml:space="preserve">
          <source>CallExpression</source>
          <target state="translated">CallExpression</target>
        </trans-unit>
        <trans-unit id="c9e282305742d4307b1579b438b6b7173c0418e7" translate="yes" xml:space="preserve">
          <source>Can be rewritten as:</source>
          <target state="translated">可改写为:</target>
        </trans-unit>
        <trans-unit id="b517ab5d1cd37a417d38a4cf65c412ff68fbe5e1" translate="yes" xml:space="preserve">
          <source>Can't find just the right rule? Make your own &lt;a href=&quot;developer-guide/working-with-rules&quot;&gt;custom rule&lt;/a&gt;.</source>
          <target state="translated">找不到正确的规则？制定自己的&lt;a href=&quot;developer-guide/working-with-rules&quot;&gt;自定义规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e0f4ec3146a0731b4e0f2d9473519c2a5b1a229e" translate="yes" xml:space="preserve">
          <source>Care should be taken to name variables and functions properly. Names should be limited to alphanumeric characters and, in some cases, the underscore character. Do not use the dollar sign (&lt;code&gt;$&lt;/code&gt;) or back slash (&lt;code&gt;\&lt;/code&gt;) characters in any names.</source>
          <target state="translated">应注意正确命名变量和函数。名称应限制为字母数字字符，在某些情况下，应使用下划线字符。请勿在任何名称中使用美元符号（ &lt;code&gt;$&lt;/code&gt; ）或反斜杠（ &lt;code&gt;\&lt;/code&gt; ）字符。</target>
        </trans-unit>
        <trans-unit id="9a7ca4c1fab7a8bdcf5fbc36f2e29b71084829bd" translate="yes" xml:space="preserve">
          <source>Certain properties on objects may be disallowed in a codebase. This is useful for deprecating an API or restricting usage of a module's methods. For example, you may want to disallow using &lt;code&gt;describe.only&lt;/code&gt; when using Mocha or telling people to use &lt;code&gt;Object.assign&lt;/code&gt; instead of &lt;code&gt;_.extend&lt;/code&gt;.</source>
          <target state="translated">代码库中可能不允许对象的某些属性。这对于弃用API或限制模块方法的使用非常有用。例如，您可能希望使用不允许 &lt;code&gt;describe.only&lt;/code&gt; 采用摩卡或者告诉人们使用时 &lt;code&gt;Object.assign&lt;/code&gt; 代替 &lt;code&gt;_.extend&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d641a78fe9f4d6c7cfe86253552245024f63f5eb" translate="yes" xml:space="preserve">
          <source>Chained method calls on a single line without line breaks are harder to read, so some developers place a newline character after each method call in the chain to make it more readable and easy to maintain.</source>
          <target state="translated">在单行上没有换行符的链式方法调用比较难读,所以有些开发者在链式方法调用的每一个方法后都会放置一个新行符,以提高其可读性,便于维护。</target>
        </trans-unit>
        <trans-unit id="d9c4b291d717c5eaf1d0d316458e1b370d150f8f" translate="yes" xml:space="preserve">
          <source>Chaining the assignment of variables can lead to unexpected results and be difficult to read.</source>
          <target state="translated">变量的链式赋值可能会导致意想不到的结果,而且难以阅读。</target>
        </trans-unit>
        <trans-unit id="af9a9fa473109c352185514e7756f6ec081ef71e" translate="yes" xml:space="preserve">
          <source>Change Requests</source>
          <target state="translated">变更请求</target>
        </trans-unit>
        <trans-unit id="b6cf5afac16871b650ff6a87357172efdfa460a8" translate="yes" xml:space="preserve">
          <source>Changes the folder where plugins are resolved from. By default, plugins are resolved from the current working directory. This option should be used when plugins were installed by someone other than the end user. It should be set to the project directory of the project that has a dependency on the necessary plugins. For example:</source>
          <target state="translated">更改插件解析的文件夹。默认情况下,插件从当前工作目录解析。当插件是由最终用户以外的人安装时,应该使用这个选项。它应该被设置为对必要的插件有依赖性的项目目录。例如</target>
        </trans-unit>
        <trans-unit id="1ab7e9a4540dddf2bc3e6493f496e69ddbf71e09" translate="yes" xml:space="preserve">
          <source>Changes to &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt; 更改</target>
        </trans-unit>
        <trans-unit id="afb36713f70f34ba6d1fb8bd99cb3672abc0961e" translate="yes" xml:space="preserve">
          <source>Changes to &lt;code&gt;CLIEngine#executeOnText()&lt;/code&gt;</source>
          <target state="translated">对 &lt;code&gt;CLIEngine#executeOnText()&lt;/code&gt; 的更改</target>
        </trans-unit>
        <trans-unit id="095447aabddeac0d8a7df16e693b732d5fea7565" translate="yes" xml:space="preserve">
          <source>Changing this value to &lt;code&gt;true&lt;/code&gt; will reverse this option's behavior by allowing use of named functions without restriction.</source>
          <target state="translated">将此值更改为 &lt;code&gt;true&lt;/code&gt; 可以通过允许不受限制地使用命名函数来扭转此选项的行为。</target>
        </trans-unit>
        <trans-unit id="040ad6ac92ed227db6349ec645d53783b624cd42" translate="yes" xml:space="preserve">
          <source>Checking if a value is &lt;code&gt;undefined&lt;/code&gt; should be done with &lt;code&gt;typeof&lt;/code&gt;.</source>
          <target state="translated">检查值是否 &lt;code&gt;undefined&lt;/code&gt; 应使用 &lt;code&gt;typeof&lt;/code&gt; 完成。</target>
        </trans-unit>
        <trans-unit id="f92028ad17322f48fc90b63d905521dc748be675" translate="yes" xml:space="preserve">
          <source>Checks code coverage targets</source>
          <target state="translated">检查代码覆盖目标</target>
        </trans-unit>
        <trans-unit id="94ecadd605f6e4c20f69369c8c791bbdde62d160" translate="yes" xml:space="preserve">
          <source>Checks if a given path is ignored by ESLint.</source>
          <target state="translated">检查给定路径是否被ESLint忽略。</target>
        </trans-unit>
        <trans-unit id="66c89bace5c803e88659649c37de3028b2ac5e3c" translate="yes" xml:space="preserve">
          <source>Class declarations and class expressions.</source>
          <target state="translated">类声明和类表达式。</target>
        </trans-unit>
        <trans-unit id="ed1846afee3be21521286932b99e2aeae9e6414a" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>
        </trans-unit>
        <trans-unit id="f380e5d07ded1620db47a5ed2708b79c5a047d0a" translate="yes" xml:space="preserve">
          <source>Click on Profiles</source>
          <target state="translated">点击 &quot;配置文件&quot;。</target>
        </trans-unit>
        <trans-unit id="0bfa56b6c32ec5c8d0cf77f1a810aef94408d0da" translate="yes" xml:space="preserve">
          <source>Coalesce Operator: &lt;code&gt;&quot;??&quot;&lt;/code&gt;</source>
          <target state="translated">合并运算符： &lt;code&gt;&quot;??&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1683105284987a3ae83b25ff1f118eb7bdf7595" translate="yes" xml:space="preserve">
          <source>Code Climate CLI</source>
          <target state="translated">代码气候CLI</target>
        </trans-unit>
        <trans-unit id="e7dc1f58b1ebed71fbca665be08411c0b9cacaab" translate="yes" xml:space="preserve">
          <source>Code Conventions</source>
          <target state="translated">代码约定</target>
        </trans-unit>
        <trans-unit id="e574f8f018ffa16527ccc1b75d7fb58fb118883c" translate="yes" xml:space="preserve">
          <source>Code Path Analysis Details</source>
          <target state="translated">代码路径分析详情</target>
        </trans-unit>
        <trans-unit id="580546c9363cde6a5b33a366bcefc914f6ff2498" translate="yes" xml:space="preserve">
          <source>Code Path Examples</source>
          <target state="translated">代码路径示例</target>
        </trans-unit>
        <trans-unit id="647c6137a359d2959ee6cdb4a5286bf7116ae92a" translate="yes" xml:space="preserve">
          <source>Code is difficult to understand.</source>
          <target state="translated">代码很难理解。</target>
        </trans-unit>
        <trans-unit id="e909b7052999369ed0534cff25d0dc0b37c6d995" translate="yes" xml:space="preserve">
          <source>Column Numbers are 1-based</source>
          <target state="translated">列号以1为基础</target>
        </trans-unit>
        <trans-unit id="dad481f8d97686324bbafc62077e08ab2a687407" translate="yes" xml:space="preserve">
          <source>Comma First style, in which commas are placed at the start of the next line</source>
          <target state="translated">逗号优先式,即逗号放在下一行的开始。</target>
        </trans-unit>
        <trans-unit id="39dd3cc04c40c9a332158c95e35269c0929ad6af" translate="yes" xml:space="preserve">
          <source>Comma style (comma-style)</source>
          <target state="translated">逗号式</target>
        </trans-unit>
        <trans-unit id="14c818412d017dcc7f2635ecf050b64a83410b23" translate="yes" xml:space="preserve">
          <source>Command Line Interface</source>
          <target state="translated">命令行界面</target>
        </trans-unit>
        <trans-unit id="4b91918e82d5cef17a745f0886369f20996ba6c7" translate="yes" xml:space="preserve">
          <source>Command Line Options</source>
          <target state="translated">命令行选项</target>
        </trans-unit>
        <trans-unit id="1876987fa1a8f54ef9b28b3c2b0111b8b2e44d4a" translate="yes" xml:space="preserve">
          <source>Command Line Tools</source>
          <target state="translated">命令行工具</target>
        </trans-unit>
        <trans-unit id="0592b972c380e7e606d0a53966b0ff68a0453c1c" translate="yes" xml:space="preserve">
          <source>Command line options (or CLIEngine equivalents):</source>
          <target state="translated">命令行选项(或CLIEngine等价物)。</target>
        </trans-unit>
        <trans-unit id="e9303a3a7c7daf4c09eae8de6d13d8d831541fc8" translate="yes" xml:space="preserve">
          <source>Comment Annotations</source>
          <target state="translated">注释的方式</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="5fe0316b6ae9d702e7dbf115bb378278ffbaddd1" translate="yes" xml:space="preserve">
          <source>Comments are useful for leaving information for future developers. In order for that information to be useful and not distracting, it is sometimes desirable for comments to follow a particular style. One element of comment formatting styles is whether the first word of a comment should be capitalized or lowercase.</source>
          <target state="translated">评论对于为未来的开发者留下信息是有用的。为了使这些信息既有用又不分散注意力,有时最好让评论遵循一种特定的风格。评论格式风格的一个要素是评论的第一个字应该大写还是小写。</target>
        </trans-unit>
        <trans-unit id="7f06b20dcab0aff5704c842c598f9dfcd0455108" translate="yes" xml:space="preserve">
          <source>Comments in Configuration Files</source>
          <target state="translated">配置文件中的注释</target>
        </trans-unit>
        <trans-unit id="f0357ca1de3a2c1e41b225072c3ae58e313abf79" translate="yes" xml:space="preserve">
          <source>Comments inside the curly braces in JSX are allowed to be on the same line as the braces, but only if they are not on the same line with other code, and the braces do not enclose an actual expression.</source>
          <target state="translated">JSX中的大括号内的注释可以和大括号在同一行,但前提是不和其他代码在同一行,而且大括号内不包含一个实际的表达式。</target>
        </trans-unit>
        <trans-unit id="43c575a09fdacd956bc014b783c194f0a5c82e44" translate="yes" xml:space="preserve">
          <source>Comments may be used to annotate pieces of code with additional information. These annotations take the form of a single word followed by a colon. The acceptable annotations are:</source>
          <target state="translated">注释可用于用附加信息来注释代码片段。这些注释的形式是一个单字,后面加一个冒号。可接受的注释有:</target>
        </trans-unit>
        <trans-unit id="703eaaa66145aebfc6fb9e2dcf0469112d69267d" translate="yes" xml:space="preserve">
          <source>Comments on a line directly after var statements are treated like additional var statements.</source>
          <target state="translated">在var语句之后的行上的注释将被视为附加的var语句。</target>
        </trans-unit>
        <trans-unit id="c25c0b311a5988d7e130f54f188163a4ce9f26bd" translate="yes" xml:space="preserve">
          <source>Comparing a variable against itself is usually an error, either a typo or refactoring error. It is confusing to the reader and may potentially introduce a runtime error.</source>
          <target state="translated">将一个变量与自身进行比较通常是一个错误,要么是排版错误,要么是重构错误。这让读者感到困惑,并且可能会引入运行时错误。</target>
        </trans-unit>
        <trans-unit id="27bbabf9863dade6459d7cd65d288d55ad523bf4" translate="yes" xml:space="preserve">
          <source>Comparing against &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;null&lt;/code&gt; 比较</target>
        </trans-unit>
        <trans-unit id="3cbfe191b44761abe72c903dc68c5c8bcdebdb77" translate="yes" xml:space="preserve">
          <source>Comparing to &lt;code&gt;null&lt;/code&gt; without a type-checking operator (&lt;code&gt;==&lt;/code&gt; or &lt;code&gt;!=&lt;/code&gt;), can have unintended results as the comparison will evaluate to true when comparing to not just a &lt;code&gt;null&lt;/code&gt;, but also an &lt;code&gt;undefined&lt;/code&gt; value.</source>
          <target state="translated">相较于 &lt;code&gt;null&lt;/code&gt; 没有类型检查运算符（ &lt;code&gt;==&lt;/code&gt; 或 &lt;code&gt;!=&lt;/code&gt; ），可以产生意想不到的结果比较比较不只是个时间的值为true &lt;code&gt;null&lt;/code&gt; ，同时也是一个 &lt;code&gt;undefined&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="2d2f123387a2c9f00c23c76c07b00b0297d1dd1f" translate="yes" xml:space="preserve">
          <source>Comparing two literal values</source>
          <target state="translated">比较两个字面值</target>
        </trans-unit>
        <trans-unit id="6a123b6cd74bccf28ec149c293edc9ff8bb839df" translate="yes" xml:space="preserve">
          <source>Comparison Operators: &lt;code&gt;&quot;==&quot;&lt;/code&gt;, &lt;code&gt;&quot;!=&quot;&lt;/code&gt;, &lt;code&gt;&quot;===&quot;&lt;/code&gt;, &lt;code&gt;&quot;!==&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;gt;=&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt;, &lt;code&gt;&quot;&amp;lt;=&quot;&lt;/code&gt;</source>
          <target state="translated">比较运算符： &lt;code&gt;&quot;==&quot;&lt;/code&gt; ， &lt;code&gt;&quot;!=&quot;&lt;/code&gt; ， &lt;code&gt;&quot;===&quot;&lt;/code&gt; ， &lt;code&gt;&quot;!==&quot;&lt;/code&gt; ， &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; ， &lt;code&gt;&quot;&amp;gt;=&quot;&lt;/code&gt; ， &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; ， &lt;code&gt;&quot;&amp;lt;=&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d60c7dd62fdcf4abcc61a6a7d335b7117968b4d" translate="yes" xml:space="preserve">
          <source>Compatibility</source>
          <target state="translated">Compatibility</target>
        </trans-unit>
        <trans-unit id="5e22de54c6c14d3c1fd6b16beef446d0ab100418" translate="yes" xml:space="preserve">
          <source>Complex Argument Passing</source>
          <target state="translated">复杂参数传递</target>
        </trans-unit>
        <trans-unit id="59d9cf15f81bf409cdf559aa0a58b6382ca48d87" translate="yes" xml:space="preserve">
          <source>Complexity Analysis of JavaScript Code</source>
          <target state="translated">JavaScript代码的复杂度分析</target>
        </trans-unit>
        <trans-unit id="fb6884eb8992b62c7c1af30d600b40339c50155a" translate="yes" xml:space="preserve">
          <source>Compound Statements</source>
          <target state="translated">复合声明</target>
        </trans-unit>
        <trans-unit id="c70714def24eed02c974f5065578085314290afa" translate="yes" xml:space="preserve">
          <source>Compound statements are lists of statements enclosed inside of braces.</source>
          <target state="translated">复合语句是括号内的语句列表。</target>
        </trans-unit>
        <trans-unit id="2a731acf571864648fe825ad7f41f467ee967a7f" translate="yes" xml:space="preserve">
          <source>Concretely, the following function should be refactored as shown:</source>
          <target state="translated">具体来说,应重构如下函数,如图所示。</target>
        </trans-unit>
        <trans-unit id="9ce36b3146d830ed2f9929916e1077a0694b8641" translate="yes" xml:space="preserve">
          <source>Configs in Plugins</source>
          <target state="translated">插件中的配置</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="d08f9a283e38a276a0427e713b7b70848f862614" translate="yes" xml:space="preserve">
          <source>Configuration Based on Glob Patterns</source>
          <target state="translated">基于Glob模式的配置</target>
        </trans-unit>
        <trans-unit id="054d13d110e94c15fda09fa3b87ba15c0ffb578c" translate="yes" xml:space="preserve">
          <source>Configuration Cascading Changes</source>
          <target state="translated">配置级联变化</target>
        </trans-unit>
        <trans-unit id="637a597497ad1278a75e9c3cc4a37f73445fc358" translate="yes" xml:space="preserve">
          <source>Configuration Cascading and Hierarchy</source>
          <target state="translated">配置级联和层次结构</target>
        </trans-unit>
        <trans-unit id="3367a800fa7c45bf91e141f3b7a7690040cb711f" translate="yes" xml:space="preserve">
          <source>Configuration File Formats</source>
          <target state="translated">配置文件格式</target>
        </trans-unit>
        <trans-unit id="8d7918432f45ce1b5b9c42fe241fd155b57d3095" translate="yes" xml:space="preserve">
          <source>Configuration comments can include descriptions to explain why the comment is necessary. The description must occur after the configuration and is separated from the configuration by two or more consecutive &lt;code&gt;-&lt;/code&gt; characters. For example:</source>
          <target state="translated">配置注释可以包括说明，以解释为什么需要注释。描述中的配置后必须发生，并通过两个或多个连续从配置被分离 &lt;code&gt;-&lt;/code&gt; 字符。例如：</target>
        </trans-unit>
        <trans-unit id="f888285484327e1b26802fdfc517a3cdc283a16a" translate="yes" xml:space="preserve">
          <source>Configuration options passed on the command line using &lt;code&gt;--rule&lt;/code&gt; (or to CLIEngine using &lt;code&gt;rules&lt;/code&gt;).</source>
          <target state="translated">使用 &lt;code&gt;--rule&lt;/code&gt; 在命令行上传递的配置选项（或使用 &lt;code&gt;rules&lt;/code&gt; 传递给CLIEngine ）。</target>
        </trans-unit>
        <trans-unit id="4040faa0c40248a65b81d9d52f5e239c41634760" translate="yes" xml:space="preserve">
          <source>Configuration values for globals are now validated</source>
          <target state="translated">现在可以验证globals的配置值</target>
        </trans-unit>
        <trans-unit id="32bc3c22148beccab28adad18f452f24bed405a4" translate="yes" xml:space="preserve">
          <source>Configuring</source>
          <target state="translated">Configuring</target>
        </trans-unit>
        <trans-unit id="b14e099732b8bf6338cd1082d4971a5345420749" translate="yes" xml:space="preserve">
          <source>Configuring ESLint</source>
          <target state="translated">配置ESLint</target>
        </trans-unit>
        <trans-unit id="90aee3621dbd643b7a1e7615a22bd29a1bf4fa46" translate="yes" xml:space="preserve">
          <source>Configuring Inline Comment Behaviors</source>
          <target state="translated">配置内联评论行为</target>
        </trans-unit>
        <trans-unit id="ac9cfd78cf61a7fad9eac13d10a069961ae79993" translate="yes" xml:space="preserve">
          <source>Configuring Plugins</source>
          <target state="translated">配置插件</target>
        </trans-unit>
        <trans-unit id="4bf4a45b927dfcce828ce6776ec3d92df65de710" translate="yes" xml:space="preserve">
          <source>Configuring Rules</source>
          <target state="translated">配置规则</target>
        </trans-unit>
        <trans-unit id="f110a7ccdd4b47d412214514a5686b597e3f8569" translate="yes" xml:space="preserve">
          <source>Configuring this rule with one boolean option &lt;code&gt;true&lt;/code&gt; is deprecated.</source>
          <target state="translated">不建议使用一个布尔选项 &lt;code&gt;true&lt;/code&gt; 来配置此规则。</target>
        </trans-unit>
        <trans-unit id="ff58770cc1aa1258af1958af9c810dd60ffec1b2" translate="yes" xml:space="preserve">
          <source>Consider another scenario where you may want to run ESLint on a specific Dotfile or Dotfolder, but have forgotten to specifically allow those files in your &lt;code&gt;.eslintignore&lt;/code&gt; file. You would run something like this:</source>
          <target state="translated">考虑另一种情况，您可能想在特定的Dotfile或Dotfolder上运行ESLint，但是忘记了在 &lt;code&gt;.eslintignore&lt;/code&gt; 文件中专门允许这些文件。您将运行以下内容：</target>
        </trans-unit>
        <trans-unit id="b4647e6ee60c305c9dabe8168f89b6e60301a075" translate="yes" xml:space="preserve">
          <source>Consistency in placing a newline before or after the dot can greatly increase readability.</source>
          <target state="translated">把换行放在点前或点后的一致性,可以大大增加可读性。</target>
        </trans-unit>
        <trans-unit id="503aca9c53d9e27038ee3763f8c6a91d3531b09a" translate="yes" xml:space="preserve">
          <source>Consistency is an important part of any style guide. While it is a personal preference where to put the opening brace of blocks, it should be consistent across a whole project. Having an inconsistent style distracts the reader from seeing the important parts of the code.</source>
          <target state="translated">一致性是任何风格指南的重要组成部分。虽然将代码块的开头括号放在哪里是个人喜好,但在整个项目中应该保持一致。风格不一致会分散读者的注意力,使他们看不到代码的重要部分。</target>
        </trans-unit>
        <trans-unit id="8c039d9f3cbca82ba5423ca0597e4fd0200e8a7a" translate="yes" xml:space="preserve">
          <source>Constructor functions, those functions used with the &lt;code&gt;new&lt;/code&gt; operator to create new objects, should be formatted in camel case but must begin with an uppercase letter. Constructor function names should begin with a non-verb because &lt;code&gt;new&lt;/code&gt; is the action of creating an object instance.</source>
          <target state="translated">构造函数，与 &lt;code&gt;new&lt;/code&gt; 运算符一起使用的用于创建新对象的函数，应以驼峰格式设置，但必须以大写字母开头。构造函数名称应以非动词开头，因为 &lt;code&gt;new&lt;/code&gt; 是创建对象实例的动作。</target>
        </trans-unit>
        <trans-unit id="f1d09586ea37267aa69ef76a9f7c8bc0e29a0c72" translate="yes" xml:space="preserve">
          <source>Constructors of derived classes must call &lt;code&gt;super()&lt;/code&gt;. Constructors of non derived classes must not call &lt;code&gt;super()&lt;/code&gt;. If this is not observed, the JavaScript engine will raise a runtime error.</source>
          <target state="translated">派生类的构造函数必须调用 &lt;code&gt;super()&lt;/code&gt; 。非派生类的构造函数不得调用 &lt;code&gt;super()&lt;/code&gt; 。如果未观察到此情况，JavaScript引擎将引发运行时错误。</target>
        </trans-unit>
        <trans-unit id="1a1d18554936cd6e2390743e62910a063c5aa483" translate="yes" xml:space="preserve">
          <source>Continue searching for &lt;code&gt;.eslintrc&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; files in ancestor directories (parent has highest precedence, then grandparent, etc.), up to and including the root directory or until a config with &lt;code&gt;&quot;root&quot;: true&lt;/code&gt; is found.</source>
          <target state="translated">继续在祖先目录中搜索 &lt;code&gt;.eslintrc&lt;/code&gt; 和 &lt;code&gt;package.json&lt;/code&gt; 文件（父级具有最高优先级，然后祖父级等等），直到并包括根目录，或者直到找到带有 &lt;code&gt;&quot;root&quot;: true&lt;/code&gt; 的配置：true。</target>
        </trans-unit>
        <trans-unit id="527a09bcae64352259e895e37521e34bfd9a2d4c" translate="yes" xml:space="preserve">
          <source>Contribute code to ESLint</source>
          <target state="translated">为ESLint贡献代码</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Contributing</target>
        </trans-unit>
        <trans-unit id="d2b869a4fc5ecdb32995495586ade690a4e7f25f" translate="yes" xml:space="preserve">
          <source>Control Flow in Node</source>
          <target state="translated">节点的控制流程</target>
        </trans-unit>
        <trans-unit id="7d140e2dddfcbb8e672ff8053b01675a57d0ec7c" translate="yes" xml:space="preserve">
          <source>Control Flow in Node Part II</source>
          <target state="translated">节点的控制流程第二部分</target>
        </trans-unit>
        <trans-unit id="35139eebf1ac066c1555c9bf6199c9f7eac4d85d" translate="yes" xml:space="preserve">
          <source>Control characters are special, invisible characters in the ASCII range 0-31. These characters are rarely used in JavaScript strings so a regular expression containing these characters is most likely a mistake.</source>
          <target state="translated">控制字符是ASCII码范围0-31的特殊隐形字符。这些字符很少在JavaScript字符串中使用,所以包含这些字符的正则表达式很可能是一个错误。</target>
        </trans-unit>
        <trans-unit id="d0d571b1e9881fd0cf888f79914fb5ebfcbf482a" translate="yes" xml:space="preserve">
          <source>Control flow in Node.js</source>
          <target state="translated">Node.js中的控制流程</target>
        </trans-unit>
        <trans-unit id="afccb006c330732e4cff61f99359749160440bba" translate="yes" xml:space="preserve">
          <source>Convert Configuration Files Using Polyjuice</source>
          <target state="translated">使用Polyjuice转换配置文件</target>
        </trans-unit>
        <trans-unit id="ab58181014d84731967f50b05ed7c496f31e1d2a" translate="yes" xml:space="preserve">
          <source>Converting Presets</source>
          <target state="translated">转换预设</target>
        </trans-unit>
        <trans-unit id="6a3a7d8e52a6d2e6a4f18d3e7ab1334f3cd4d5b6" translate="yes" xml:space="preserve">
          <source>Core Rule Guidelines</source>
          <target state="translated">核心规则指南</target>
        </trans-unit>
        <trans-unit id="b3de192a6a07e167ef31fbab7ac9622023130027" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;../user-guide/configuring&quot;&gt;configuration file&lt;/a&gt; and specify your rule ID error level under the &lt;code&gt;rules&lt;/code&gt; key. Your rule will not run unless it has a value of &lt;code&gt;&quot;warn&quot;&lt;/code&gt; or &lt;code&gt;&quot;error&quot;&lt;/code&gt; in the configuration file.</source>
          <target state="translated">创建一个&lt;a href=&quot;../user-guide/configuring&quot;&gt;配置文件，&lt;/a&gt;并在 &lt;code&gt;rules&lt;/code&gt; 键下指定您的Rule ID错误级别。除非配置文件中的值 &lt;code&gt;&quot;warn&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;error&quot;&lt;/code&gt; ，否则您的规则将不会运行。</target>
        </trans-unit>
        <trans-unit id="95be29707180faf07146d398de09a6c4200d5320" translate="yes" xml:space="preserve">
          <source>Create a &lt;a href=&quot;../user-guide/configuring&quot;&gt;configuration file&lt;/a&gt; and specify your rule ID error level under the &lt;code&gt;rules&lt;/code&gt; key. Your rule will not run unless it has a value of &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; in the configuration file.</source>
          <target state="translated">创建一个&lt;a href=&quot;../user-guide/configuring&quot;&gt;配置文件，&lt;/a&gt;并在 &lt;code&gt;rules&lt;/code&gt; 键下指定您的Rule ID错误级别。除非您的规则在配置文件中的值为 &lt;code&gt;1&lt;/code&gt; 或 &lt;code&gt;2&lt;/code&gt; ，否则它将不会运行。</target>
        </trans-unit>
        <trans-unit id="9f3cb20251d79f003cd52ffc32fabdac22ef9f06" translate="yes" xml:space="preserve">
          <source>Create a Plugin</source>
          <target state="translated">创建一个插件</target>
        </trans-unit>
        <trans-unit id="784442c08b8848bdf9bb4551c61da1d1ee40bcf5" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;ESLint&lt;/code&gt; instance.</source>
          <target state="translated">创建一个新的 &lt;code&gt;ESLint&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="6bd3ef2d8c97297fd3ac40631a5866542c068428" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;index.js&lt;/code&gt; file and export an object containing your settings:</source>
          <target state="translated">创建一个新的 &lt;code&gt;index.js&lt;/code&gt; 文件并导出包含您的设置的对象：</target>
        </trans-unit>
        <trans-unit id="11b24d2d7edb54bbd46ce7884ebad9bcadbb5e97" translate="yes" xml:space="preserve">
          <source>Create a new branch</source>
          <target state="translated">创建一个新的分支</target>
        </trans-unit>
        <trans-unit id="d22b463025ed1c1b87b33c315b932364a70efd63" translate="yes" xml:space="preserve">
          <source>Create their own rules for ESLint</source>
          <target state="translated">为ESLint创建自己的规则</target>
        </trans-unit>
        <trans-unit id="a7a39d699ab72906f03ebeffbc60ea2aa1b3eeed" translate="yes" xml:space="preserve">
          <source>Creating a New Configuration From Scratch</source>
          <target state="translated">从头开始创建一个新的配置</target>
        </trans-unit>
        <trans-unit id="1bd92f8ba24ec7ef01b8b29783834176b3963fb9" translate="yes" xml:space="preserve">
          <source>Creating a Shareable Config</source>
          <target state="translated">创建一个可共享的配置</target>
        </trans-unit>
        <trans-unit id="482f648a7c151a3d617c673a13dd07998e557076" translate="yes" xml:space="preserve">
          <source>Creating an AST for the code</source>
          <target state="translated">为代码创建一个AST</target>
        </trans-unit>
        <trans-unit id="733e449fda546e3a8b129948f856e5d4cfc8e56b" translate="yes" xml:space="preserve">
          <source>Currently the sole method for telling ESLint which file extensions to lint is by specifying a comma separated list of extensions using the &lt;a href=&quot;command-line-interface#ext&quot;&gt;&lt;code&gt;--ext&lt;/code&gt;&lt;/a&gt; command line option. Note this flag only takes effect in conjunction with directories, and will be ignored if used with filenames or glob patterns.</source>
          <target state="translated">当前，告诉ESLint哪个文件扩展名为lint的唯一方法是使用&lt;a href=&quot;command-line-interface#ext&quot;&gt; &lt;code&gt;--ext&lt;/code&gt; &lt;/a&gt;命令行选项指定以逗号分隔的扩展列表。请注意，此标志仅与目录结合使用，并且与文件名或全局模式一起使用时将被忽略。</target>
        </trans-unit>
        <trans-unit id="d177cd85e91a4c278affcb9cde0b2fe2b8377110" translate="yes" xml:space="preserve">
          <source>Custom formatters can also be distributed through npm packages. To do so, create an npm package with a name in the format of &lt;code&gt;eslint-formatter-*&lt;/code&gt;, where &lt;code&gt;*&lt;/code&gt; is the name of your formatter (such as &lt;code&gt;eslint-formatter-awesome&lt;/code&gt;). Projects should then install the package and can use the custom formatter with the &lt;code&gt;-f&lt;/code&gt; (or &lt;code&gt;--format&lt;/code&gt;) flag like this:</source>
          <target state="translated">自定义格式器也可以通过npm软件包分发。为此，请创建一个名称为 &lt;code&gt;eslint-formatter-*&lt;/code&gt; 的npm软件包，其中 &lt;code&gt;*&lt;/code&gt; 是您的格式化程序的名称（例如 &lt;code&gt;eslint-formatter-awesome&lt;/code&gt; ）。然后，项目应安装该软件包，并可以将自定义格式程序与 &lt;code&gt;-f&lt;/code&gt; （或 &lt;code&gt;--format&lt;/code&gt; ）标志一起使用，如下所示：</target>
        </trans-unit>
        <trans-unit id="09fdbd253240e582c58bf7112d231f0aea07470b" translate="yes" xml:space="preserve">
          <source>Custom formatters can also be distributed through npm packages. To do so, create an npm package with a name in the format of &lt;code&gt;eslint-formatter-*&lt;/code&gt;, where &lt;code&gt;*&lt;/code&gt; is the name of your formatter (such as &lt;code&gt;eslint-formatter-awesome&lt;/code&gt;). Projects should then install the package and can use the custom formatter with the &lt;code&gt;-f&lt;/code&gt; (or &lt;code&gt;--formatter&lt;/code&gt;) flag like this:</source>
          <target state="translated">自定义格式器也可以通过npm软件包分发。为此，请创建一个名称为 &lt;code&gt;eslint-formatter-*&lt;/code&gt; 的npm软件包，其中 &lt;code&gt;*&lt;/code&gt; 是您的格式化程序的名称（例如 &lt;code&gt;eslint-formatter-awesome&lt;/code&gt; ）。然后，项目应安装该软件包，并可以将自定义格式程序与 &lt;code&gt;-f&lt;/code&gt; （或 &lt;code&gt;--formatter&lt;/code&gt; ）标志一起使用，如下所示：</target>
        </trans-unit>
        <trans-unit id="a49ca4f33339169f36b15576df0f6a281afa0ea0" translate="yes" xml:space="preserve">
          <source>Custom formatters have access to environment variables and so can change their behavior based on environment variable data. Here's an example that uses a &lt;code&gt;AF_SKIP_WARNINGS&lt;/code&gt; environment variable to determine whether or not to show warnings in the results:</source>
          <target state="translated">自定义格式器可以访问环境变量，因此可以根据环境变量数据更改其行为。这是一个使用 &lt;code&gt;AF_SKIP_WARNINGS&lt;/code&gt; 环境变量来确定是否在结果中显示警告的示例：</target>
        </trans-unit>
        <trans-unit id="7ff15870ecf0785cf1ed6f565432cb4eab789c25" translate="yes" xml:space="preserve">
          <source>Customizing RuleTester</source>
          <target state="translated">自定义RuleTester</target>
        </trans-unit>
        <trans-unit id="828863d4cbf7b3824c5a65d94542f5b6e50c30c6" translate="yes" xml:space="preserve">
          <source>Cyclomatic Complexity</source>
          <target state="translated">环形复杂度</target>
        </trans-unit>
        <trans-unit id="380d9bc0a9b56d3d4830a8ed4465765522454a9e" translate="yes" xml:space="preserve">
          <source>Cyclomatic complexity measures the number of linearly independent paths through a program's source code. This rule allows setting a cyclomatic complexity threshold.</source>
          <target state="translated">循环复杂度衡量的是程序源代码中线性独立路径的数量。该规则允许设置循环复杂度阈值。</target>
        </trans-unit>
        <trans-unit id="3dea78e2b42ff6c53cdfe32a0caf66a693083f61" translate="yes" xml:space="preserve">
          <source>Debugger</source>
          <target state="translated">Debugger</target>
        </trans-unit>
        <trans-unit id="3eff362745911d820434d922e99ea187252312d8" translate="yes" xml:space="preserve">
          <source>Declarations that create one or more variables in the global scope.</source>
          <target state="translated">在全局范围内创建一个或多个变量的声明。</target>
        </trans-unit>
        <trans-unit id="ae36edf0e14affd7d5d4b81d1097df1dbe09bdac" translate="yes" xml:space="preserve">
          <source>Default Changes When Using &lt;code&gt;eslint:recommended&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;eslint:recommended&lt;/code&gt; 默认更改：推荐</target>
        </trans-unit>
        <trans-unit id="cc5b08caa16422344217917ff185d24cf8e1bd8a" translate="yes" xml:space="preserve">
          <source>Default callback names</source>
          <target state="translated">默认回调名称</target>
        </trans-unit>
        <trans-unit id="d593d0478aa303348496061be603076710abf565" translate="yes" xml:space="preserve">
          <source>Default ignore patterns are applied even when &lt;code&gt;ignorePattern&lt;/code&gt; is provided. If you want to omit default patterns, set this option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">即使提供了 &lt;code&gt;ignorePattern&lt;/code&gt; ,也会应用默认的忽略模式。如果要省略默认模式，请将此选项设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e9c2225edfd884a60f52e23998677fc7ce228f5" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;.eslintcache&lt;/code&gt;. The &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method writes caches into this file.</source>
          <target state="translated">默认值为 &lt;code&gt;.eslintcache&lt;/code&gt; 。该&lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt;方法写入高速缓存到该文件。</target>
        </trans-unit>
        <trans-unit id="25c7bbf1b91e722e82b0d09e64d1596bc8d41673" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[&quot;none&quot;, &quot;all&quot;, &quot;multiple&quot;, &quot;single&quot;]&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;[&quot;none&quot;, &quot;all&quot;, &quot;multiple&quot;, &quot;single&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b71cb2860070f2fc3d338679c4d922d4e3a44b0" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[]&lt;/code&gt;. An array of paths to directories to load custom rules from.</source>
          <target state="translated">默认值为 &lt;code&gt;[]&lt;/code&gt; 。加载自定义规则的目录路径的数组。</target>
        </trans-unit>
        <trans-unit id="b16e15890d3d5add9f5075d6403813ccbaeb0554" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="598448b6fba9a28fcd37e1443c48fbce87e9516f" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt; is present, the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt;&lt;code&gt;eslint.lintText()&lt;/code&gt;&lt;/a&gt; methods work in autofix mode. If a predicate function is present, the methods pass each lint message to the function, then use only the lint messages for which the function returned &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;false&lt;/code&gt; 。如果存在 &lt;code&gt;true&lt;/code&gt; ，则&lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt; &lt;code&gt;eslint.lintText()&lt;/code&gt; &lt;/a&gt;方法在自动修复模式下工作。如果存在谓词函数，则方法将每个lint消息传递给函数，然后仅使用函数返回 &lt;code&gt;true&lt;/code&gt; 的lint消息。</target>
        </trans-unit>
        <trans-unit id="27c3d915faf3f91fab9b1494e842e5553b619de7" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt; is present, the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method caches lint results and uses it if each target file is not changed. Please mind that ESLint doesn't clear the cache when you upgrade ESLint plugins. In that case, you have to remove the cache file manually. The &lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt;&lt;code&gt;eslint.lintText()&lt;/code&gt;&lt;/a&gt; method doesn't use caches even if you pass the &lt;code&gt;options.filePath&lt;/code&gt; to the method.</source>
          <target state="translated">默认值为 &lt;code&gt;false&lt;/code&gt; 。如果存在 &lt;code&gt;true&lt;/code&gt; ，则&lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt;方法将缓存lint结果，并在每个目标文件未更改的情况下使用它。请注意，升级ESLint插件时，ESLint不会清除缓存。在这种情况下，您必须手动删除缓存文件。即使将 &lt;code&gt;options.filePath&lt;/code&gt; 传递给该方法，&lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt; &lt;code&gt;eslint.lintText()&lt;/code&gt; &lt;/a&gt;方法也不使用缓存。</target>
        </trans-unit>
        <trans-unit id="e0a023fac77be901f2566d4de14b51e9bebd6fba" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. &lt;a href=&quot;../user-guide/configuring&quot;&gt;Configuration object&lt;/a&gt;, extended by all configurations used with this instance. You can use this option to define the default settings that will be used if your configuration files don't configure it.</source>
          <target state="translated">默认为 &lt;code&gt;null&lt;/code&gt; 。&lt;a href=&quot;../user-guide/configuring&quot;&gt;配置对象&lt;/a&gt;，由与此实例一起使用的所有配置扩展。您可以使用此选项来定义在配置文件未配置时将使用的默认设置。</target>
        </trans-unit>
        <trans-unit id="1a41da4f6c453e3afabfc758a44eb4e66435e8bf" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. &lt;a href=&quot;../user-guide/configuring&quot;&gt;Configuration object&lt;/a&gt;, overrides all configurations used with this instance. You can use this option to define the settings that will be used even if your configuration files configure it.</source>
          <target state="translated">默认为 &lt;code&gt;null&lt;/code&gt; 。&lt;a href=&quot;../user-guide/configuring&quot;&gt;配置对象&lt;/a&gt;，覆盖此实例使用的所有配置。您可以使用此选项来定义将使用的设置，即使您的配置文件对其进行了配置。</target>
        </trans-unit>
        <trans-unit id="8451c4e028e9ea78a284e8b9c474611132f93be9" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. If you pass directory paths to the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method, ESLint checks the files in those directories that have the given extensions. For example, when passing the &lt;code&gt;src/&lt;/code&gt; directory and &lt;code&gt;extensions&lt;/code&gt; is &lt;code&gt;[&quot;.js&quot;, &quot;.ts&quot;]&lt;/code&gt;, ESLint will lint &lt;code&gt;*.js&lt;/code&gt; and &lt;code&gt;*.ts&lt;/code&gt; files in &lt;code&gt;src/&lt;/code&gt;. If &lt;code&gt;extensions&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, ESLint checks &lt;code&gt;*.js&lt;/code&gt; files and files that match &lt;code&gt;overrides[].files&lt;/code&gt; patterns in your configuration.</source>
          <target state="translated">默认为 &lt;code&gt;null&lt;/code&gt; 。如果将目录路径传递给&lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt;方法，则ESLint会检查那些具有给定扩展名的目录中的文件。例如，当传递 &lt;code&gt;src/&lt;/code&gt; 目录并且 &lt;code&gt;extensions&lt;/code&gt; 是 &lt;code&gt;[&quot;.js&quot;, &quot;.ts&quot;]&lt;/code&gt; ，ESLint将对 &lt;code&gt;src/&lt;/code&gt; &lt;code&gt;*.js&lt;/code&gt; 和 &lt;code&gt;*.ts&lt;/code&gt; 文件进行处理。如果 &lt;code&gt;extensions&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，ESLint检查 &lt;code&gt;*.js&lt;/code&gt; 文件的文件和文件相匹配的 &lt;code&gt;overrides[].files&lt;/code&gt; 在您的配置模式。</target>
        </trans-unit>
        <trans-unit id="66637e5e13f47d94c40ccc311c95cfbcd53e2a36" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The path to a configuration file, overrides all configurations used with this instance. The &lt;code&gt;options.overrideConfig&lt;/code&gt; option is applied after this option is applied.</source>
          <target state="translated">默认为 &lt;code&gt;null&lt;/code&gt; 。配置文件的路径将覆盖与此实例一起使用的所有配置。该 &lt;code&gt;options.overrideConfig&lt;/code&gt; 应用此选项后，选择应用。</target>
        </trans-unit>
        <trans-unit id="dd986bcfdec2af9b44b83c4105ffc317e82dc37b" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The path to a directory where plugins should be resolved from. If &lt;code&gt;null&lt;/code&gt; is present, ESLint loads plugins from the location of the configuration file that contains the plugin setting. If a path is present, ESLint loads all plugins from there.</source>
          <target state="translated">默认为 &lt;code&gt;null&lt;/code&gt; 。解析插件的目录路径。如果存在 &lt;code&gt;null&lt;/code&gt; ，则ESLint从包含插件设置的配置文件的位置加载插件。如果存在路径，ESLint将从那里加载所有插件。</target>
        </trans-unit>
        <trans-unit id="b93b986f74766044e908a0e0f9654f75bfd847e4" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The path to a file ESLint uses instead of &lt;code&gt;$CWD/.eslintignore&lt;/code&gt;. If a path is present and the file doesn't exist, this constructor will throw an error.</source>
          <target state="translated">默认为 &lt;code&gt;null&lt;/code&gt; 。ESLint使用的文件路径代替 &lt;code&gt;$CWD/.eslintignore&lt;/code&gt; 。如果存在路径而文件不存在，则此构造方法将引发错误。</target>
        </trans-unit>
        <trans-unit id="10ea587d1e8f386a5439adc92d903a83c1cc54f6" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The plugin implementations that ESLint uses for the &lt;code&gt;plugins&lt;/code&gt; setting of your configuration. This is a map-like object. Those keys are plugin IDs and each value is implementation.</source>
          <target state="translated">默认为 &lt;code&gt;null&lt;/code&gt; 。ESLint用于配置 &lt;code&gt;plugins&lt;/code&gt; 设置的插件实现。这是一个类似地图的对象。这些键是插件ID，每个值都是实现。</target>
        </trans-unit>
        <trans-unit id="6b91dc204a2b0e2c5e37eb9d594841adc25d68ed" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The severity to report unused eslint-disable directives. If this option is a severity, it overrides the &lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; setting in your configurations.</source>
          <target state="translated">默认为 &lt;code&gt;null&lt;/code&gt; 。报告未使用的eslint-disable指令的严重性。如果此选项是严重性，它将覆盖配置中的 &lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="3e22638a24af5c5205f2724c137f21e8ca25a3fb" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;null&lt;/code&gt;. The types of the rules that the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt;&lt;code&gt;eslint.lintText()&lt;/code&gt;&lt;/a&gt; methods use for autofix.</source>
          <target state="translated">默认为 &lt;code&gt;null&lt;/code&gt; 。&lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#-eslintlinttextcode-options&quot;&gt; &lt;code&gt;eslint.lintText()&lt;/code&gt; &lt;/a&gt;方法用于自动修复的规则的类型。</target>
        </trans-unit>
        <trans-unit id="d91adc91c2f78f221f941fae0914eb5347afb841" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;process.cwd()&lt;/code&gt;. The working directory. This must be an absolute path.</source>
          <target state="translated">默认值为 &lt;code&gt;process.cwd()&lt;/code&gt; 。工作目录。这必须是绝对路径。</target>
        </trans-unit>
        <trans-unit id="d8225cfda7d85f065c01c21ca1adebd0c97a5939" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;false&lt;/code&gt; is present, ESLint doesn't load configuration files (&lt;code&gt;.eslintrc.*&lt;/code&gt; files). Only the configuration of the constructor options is valid.</source>
          <target state="translated">默认值为 &lt;code&gt;true&lt;/code&gt; 。如果存在 &lt;code&gt;false&lt;/code&gt; ，则ESLint不会加载配置文件（ &lt;code&gt;.eslintrc.*&lt;/code&gt; 文件）。仅构造函数选项的配置有效。</target>
        </trans-unit>
        <trans-unit id="fcc58b35179718912edb0cdbff3d25e986675592" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;false&lt;/code&gt; is present, ESLint suppresses directive comments in source code. If this option is &lt;code&gt;false&lt;/code&gt;, it overrides the &lt;code&gt;noInlineConfig&lt;/code&gt; setting in your configurations.</source>
          <target state="translated">默认值为 &lt;code&gt;true&lt;/code&gt; 。如果存在 &lt;code&gt;false&lt;/code&gt; ，则ESLint将禁止源代码中的指令注释。如果此选项为 &lt;code&gt;false&lt;/code&gt; ，它将覆盖您配置中的 &lt;code&gt;noInlineConfig&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="f21d09d0c772e1d88c6aac405151585c851cc7d4" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;false&lt;/code&gt; is present, the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method doesn't interpret glob patterns.</source>
          <target state="translated">默认值为 &lt;code&gt;true&lt;/code&gt; 。如果存在 &lt;code&gt;false&lt;/code&gt; ，则&lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt;方法不会解释全局模式。</target>
        </trans-unit>
        <trans-unit id="1e4f9be584df6a71172ba8570141bcb2d1537b0b" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;false&lt;/code&gt; is present, the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method doesn't respect &lt;code&gt;.eslintignore&lt;/code&gt; files or &lt;code&gt;ignorePatterns&lt;/code&gt; in your configuration.</source>
          <target state="translated">默认值为 &lt;code&gt;true&lt;/code&gt; 。如果存在 &lt;code&gt;false&lt;/code&gt; ，则&lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt;方法在您的配置中不遵守 &lt;code&gt;.eslintignore&lt;/code&gt; 文件或 &lt;code&gt;ignorePatterns&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="068c00200a1ac88d2a52cd341c1f988f7c7f5d38" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;. Unless set to &lt;code&gt;false&lt;/code&gt;, the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method will throw an error when no target files are found.</source>
          <target state="translated">默认值为 &lt;code&gt;true&lt;/code&gt; 。除非设置为 &lt;code&gt;false&lt;/code&gt; ，否则在找不到目标文件时，&lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt;方法将引发错误。</target>
        </trans-unit>
        <trans-unit id="5db254bea50a14b0e9eb1a7b0b2d120ed7192f40" translate="yes" xml:space="preserve">
          <source>Default option settings are:</source>
          <target state="translated">默认选项设置为:</target>
        </trans-unit>
        <trans-unit id="57afbebd04d4d02458682eb7fa90339a9d41caac" translate="yes" xml:space="preserve">
          <source>Default settings</source>
          <target state="translated">默认设置</target>
        </trans-unit>
        <trans-unit id="7f9b50b419df7a7306166622f8485bc222304810" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;{ allowNamedFunctions: false, allowUnboundThis: true }&lt;/code&gt;</source>
          <target state="translated">默认值： &lt;code&gt;{ allowNamedFunctions: false, allowUnboundThis: true }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="451675c2ac1c560bdc9110dbf215c31e25d75d4b" translate="yes" xml:space="preserve">
          <source>Definition interface</source>
          <target state="translated">定义接口</target>
        </trans-unit>
        <trans-unit id="f0a4e82467fb83dc35208cbfc344efc585b6c0fe" translate="yes" xml:space="preserve">
          <source>Demonstrate a possible issue that can be resolved by rewriting the code.</source>
          <target state="translated">展示一个可能的问题,可以通过重写代码来解决。</target>
        </trans-unit>
        <trans-unit id="4b6d8366b797ab9ee8e0cc6db6b82788c4bc11e5" translate="yes" xml:space="preserve">
          <source>Depending on your coding conventions, you can choose either option by specifying it in your configuration:</source>
          <target state="translated">根据你的编码习惯,你可以在配置中指定其中一个选项。</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="600c4c32abbd0e6044d374f8d9f63e6c5b81d165" translate="yes" xml:space="preserve">
          <source>Deprecated APIs</source>
          <target state="translated">废弃的API</target>
        </trans-unit>
        <trans-unit id="c4f155b5226ef5ac72a09b1d5a0533269a381da6" translate="yes" xml:space="preserve">
          <source>Deprecated and Obsolete Features</source>
          <target state="translated">废弃和过时的功能</target>
        </trans-unit>
        <trans-unit id="bf4371ef922e51fe0fbf59bbe7402cdd622276e4" translate="yes" xml:space="preserve">
          <source>Deprecated globals have been removed from the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;browser&lt;/code&gt;, and &lt;code&gt;jest&lt;/code&gt; environments</source>
          <target state="translated">已从 &lt;code&gt;node&lt;/code&gt; ， &lt;code&gt;browser&lt;/code&gt; 和 &lt;code&gt;jest&lt;/code&gt; 环境中删除了已弃用的全局变量</target>
        </trans-unit>
        <trans-unit id="f9c460045501a8ea3d1357c1eef23be6e4ef8098" translate="yes" xml:space="preserve">
          <source>Deprecated members</source>
          <target state="translated">废弃的成员</target>
        </trans-unit>
        <trans-unit id="bd4941fe9de2de7fc433b3e9590719cbde5ce1aa" translate="yes" xml:space="preserve">
          <source>Deprecated rule</source>
          <target state="translated">废弃的规则</target>
        </trans-unit>
        <trans-unit id="75e97da83707a37248cd49df2d934d2760fd166a" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Function.prototype.apply()&lt;/code&gt; and &lt;code&gt;Function.prototype.call()&lt;/code&gt;</source>
          <target state="translated">弃用 &lt;code&gt;Function.prototype.apply()&lt;/code&gt; 和 &lt;code&gt;Function.prototype.call()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e96f0d28fd9c327f3a8bd126ed5ddf0e9d31362" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.defineProperty()&lt;/code&gt;</source>
          <target state="translated">弃用 &lt;code&gt;Object.defineProperty()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4651e4f11985967e23527250c22fcf73a7b68d2" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;</source>
          <target state="translated">弃用 &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c85da6d70b6b0f2080d1abb54f535bc82832569" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;</source>
          <target state="translated">弃用 &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6a80f0a943444763e9338742b33411b38ddfd03" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;</source>
          <target state="translated">弃用 &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f56df2f09f86a9f6a057489f7ceb4b1e0b1c8ac" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.isExtensible&lt;/code&gt;</source>
          <target state="translated">弃用 &lt;code&gt;Object.isExtensible&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b4a984ce7a52ddef7e2e804d2988e9b66ebb3da" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.preventExtensions()&lt;/code&gt;</source>
          <target state="translated">弃用 &lt;code&gt;Object.preventExtensions()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="697b260a0cee6bea439f0681489e15b057680498" translate="yes" xml:space="preserve">
          <source>Deprecates &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;</source>
          <target state="translated">弃用 &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5d843f5ea2093ccb6671aa0c04b0070848e9831" translate="yes" xml:space="preserve">
          <source>Deprecates the &lt;code&gt;delete&lt;/code&gt; keyword</source>
          <target state="translated">弃用 &lt;code&gt;delete&lt;/code&gt; 关键字</target>
        </trans-unit>
        <trans-unit id="c34fc5b3589467a8b7d78b90f9e856a1d025822a" translate="yes" xml:space="preserve">
          <source>Deprecating eslint-tester</source>
          <target state="translated">废弃的eslint-tester</target>
        </trans-unit>
        <trans-unit id="58326a4f36308b30e682115f0391f02ad1f1cb6a" translate="yes" xml:space="preserve">
          <source>Derived config: &lt;code&gt;&quot;eqeqeq&quot;: &quot;warn&quot;&lt;/code&gt;</source>
          <target state="translated">派生配置： &lt;code&gt;&quot;eqeqeq&quot;: &quot;warn&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50157f44d361dccb8b219046318d94280d12f251" translate="yes" xml:space="preserve">
          <source>Derived config: &lt;code&gt;&quot;quotes&quot;: [&quot;error&quot;, &quot;single&quot;]&lt;/code&gt;</source>
          <target state="translated">派生配置： &lt;code&gt;&quot;quotes&quot;: [&quot;error&quot;, &quot;single&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab7e9672823162cea83632332d7f5bb05a7b1d63" translate="yes" xml:space="preserve">
          <source>Describe the syntax for creating selectors</source>
          <target state="translated">描述创建选择器的语法。</target>
        </trans-unit>
        <trans-unit id="01680ee6453e68589c3aabb95cdb46608254dfb5" translate="yes" xml:space="preserve">
          <source>Describe what selectors can be used for</source>
          <target state="translated">说明选择器可用于哪些方面。</target>
        </trans-unit>
        <trans-unit id="d1c0aca59d56726527f2d287027312d0a2431f92" translate="yes" xml:space="preserve">
          <source>Despite being in an entirely different directory, you'll see that all &lt;code&gt;extends&lt;/code&gt; must use the full package path to the config file you wish to extend.</source>
          <target state="translated">尽管位于完全不同的目录中，但是您会看到所有 &lt;code&gt;extends&lt;/code&gt; 必须使用要扩展的配置文件的完整程序包路径。</target>
        </trans-unit>
        <trans-unit id="97de83a38aca7a49888fc2600669f90c3021604a" translate="yes" xml:space="preserve">
          <source>Destructuring Assignment (MDN)</source>
          <target state="translated">破坏性任务(MDN)</target>
        </trans-unit>
        <trans-unit id="1af4d3a9d765ca9815a04de048f7476eee434543" translate="yes" xml:space="preserve">
          <source>Destructuring and parameter handling in ECMAScript 6 (2ality blog)</source>
          <target state="translated">ECMAScript 6中的结构化和参数处理 (2ality博客)</target>
        </trans-unit>
        <trans-unit id="be8b6eb7c46e6f508b4952b114beaadc64f12f31" translate="yes" xml:space="preserve">
          <source>Detailed formatter</source>
          <target state="translated">详细格式化</target>
        </trans-unit>
        <trans-unit id="89d8307a053cef0b6777a2a38a4d8fb22f7faeb6" translate="yes" xml:space="preserve">
          <source>Details about each step are found below.</source>
          <target state="translated">关于每个步骤的细节如下。</target>
        </trans-unit>
        <trans-unit id="45e199c34f2e47d26bd6cf3b0bc418229f9353d7" translate="yes" xml:space="preserve">
          <source>Developer Guide</source>
          <target state="translated">开发者指南</target>
        </trans-unit>
        <trans-unit id="b48b68fd11698f8781f082afb08161421c5cb1fc" translate="yes" xml:space="preserve">
          <source>Developers often add comments to code which is not complete or needs review. Most likely you want to fix or review the code, and then remove the comment, before you consider the code to be production ready.</source>
          <target state="translated">开发人员经常在不完整或需要审查的代码中添加注释。最有可能的是,在你认为代码已经可以生产之前,你要先修复或审查代码,然后删除注释。</target>
        </trans-unit>
        <trans-unit id="e3f134b627d779aaad681c98b57de489c6fa39f9" translate="yes" xml:space="preserve">
          <source>Developing for ESLint is a bit different than running it on the command line. This section shows you how to set up a development environment and get you ready to write code.</source>
          <target state="translated">为 ESLint 开发与在命令行上运行 ESLint 有一点不同。本节将向您展示如何设置一个开发环境,并让您做好编写代码的准备。</target>
        </trans-unit>
        <trans-unit id="33b718e3426ebb543a11c3c5fcd59853368c8fdd" translate="yes" xml:space="preserve">
          <source>Development Environment</source>
          <target state="translated">发展环境</target>
        </trans-unit>
        <trans-unit id="8013f0bbec79ed59d47cf77e67c933aae7cc1124" translate="yes" xml:space="preserve">
          <source>Directives are used in JavaScript to indicate to the execution environment that a script would like to opt into a feature such as &lt;code&gt;&quot;strict mode&quot;&lt;/code&gt;. Directives are grouped together in a &lt;a href=&quot;https://www.ecma-international.org/ecma-262/7.0/#directive-prologue&quot;&gt;directive prologue&lt;/a&gt; at the top of either a file or function block and are applied to the scope in which they occur.</source>
          <target state="translated">指令在JavaScript中用于向执行环境指示脚本希望选择加入 &lt;code&gt;&quot;strict mode&quot;&lt;/code&gt; 。指令在文件或功能块顶部的&lt;a href=&quot;https://www.ecma-international.org/ecma-262/7.0/#directive-prologue&quot;&gt;指令序言&lt;/a&gt;中分组在一起，并应用于它们出现的范围。</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="translated">目录结构</target>
        </trans-unit>
        <trans-unit id="459ceaedc40826269ef60f711ebad6d9c5aade2c" translate="yes" xml:space="preserve">
          <source>Disable all rules</source>
          <target state="translated">禁用所有规则</target>
        </trans-unit>
        <trans-unit id="1befa33ecf40b3dc4e5f34847334167468085d4f" translate="yes" xml:space="preserve">
          <source>Disable multiple rules</source>
          <target state="translated">禁用多个规则</target>
        </trans-unit>
        <trans-unit id="dca98b5d9eebc53d965cc8adf37f4f58b6bed991" translate="yes" xml:space="preserve">
          <source>Disable one rule</source>
          <target state="translated">禁用一条规则</target>
        </trans-unit>
        <trans-unit id="bb0d9676523b61c6ad0b2165fb3aa81e81d0d170" translate="yes" xml:space="preserve">
          <source>Disable one rule on single line</source>
          <target state="translated">在单行上禁用一条规则</target>
        </trans-unit>
        <trans-unit id="287de7a611f443ad4166b545ab1f2bd47e9a0e4b" translate="yes" xml:space="preserve">
          <source>Disable this rule if sequence expressions with the comma operator are acceptable. Another case is where you might want to report all usages of the comma operator, even if they are wrapped in parentheses or in a for loop. You can achieve this using rule &lt;code&gt;no-restricted-syntax&lt;/code&gt;:</source>
          <target state="translated">如果可以接受使用逗号运算符的序列表达式，请禁用此规则。另一种情况是，您可能要报告逗号运算符的所有使用情况，即使它们用括号或for循环引起来也是如此。您可以使用 &lt;code&gt;no-restricted-syntax&lt;/code&gt; 规则来实现：</target>
        </trans-unit>
        <trans-unit id="bf3eb14ac0b636c4581b55b732a2fe4f35df8ba0" translate="yes" xml:space="preserve">
          <source>Disable this rule if the code is clearer without requiring the &lt;code&gt;else if&lt;/code&gt; form.</source>
          <target state="translated">如果代码，而不需要更清晰的禁用该规则 &lt;code&gt;else if&lt;/code&gt; 形式。</target>
        </trans-unit>
        <trans-unit id="d8737efd5806494af343de944cb08475ed8ca65e" translate="yes" xml:space="preserve">
          <source>Disables excluding of files from &lt;code&gt;.eslintignore&lt;/code&gt;, &lt;code&gt;--ignore-path&lt;/code&gt;, &lt;code&gt;--ignore-pattern&lt;/code&gt;, and &lt;code&gt;ignorePatterns&lt;/code&gt; property in config files.</source>
          <target state="translated">在配置文件中禁用排除 &lt;code&gt;.eslintignore&lt;/code&gt; ， &lt;code&gt;--ignore-path&lt;/code&gt; ignore -path， &lt;code&gt;--ignore-pattern&lt;/code&gt; &lt;code&gt;ignorePatterns&lt;/code&gt; -pattern和ignorePatterns属性中的文件。</target>
        </trans-unit>
        <trans-unit id="e0879e9fee4af87fa641a02d77d443c4f3580b8c" translate="yes" xml:space="preserve">
          <source>Disables use of configuration from &lt;code&gt;.eslintrc.*&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; files.</source>
          <target state="translated">禁止使用 &lt;code&gt;.eslintrc.*&lt;/code&gt; 和 &lt;code&gt;package.json&lt;/code&gt; 文件中的配置。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
