<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="eslint">
    <body>
      <group id="eslint">
        <trans-unit id="2e07ccde13ac7d3cc1e366526a62fc1dd9f6bdde" translate="yes" xml:space="preserve">
          <source>These examples allow &lt;code&gt;var1&lt;/code&gt; to be overwritten in your code, but disallow it for &lt;code&gt;var2&lt;/code&gt;.</source>
          <target state="translated">这些示例允许在代码中覆盖 &lt;code&gt;var1&lt;/code&gt; ，但不允许 &lt;code&gt;var2&lt;/code&gt; 覆盖它。</target>
        </trans-unit>
        <trans-unit id="5b4016a79f53202f5d9431f3853fbef74d3b8610" translate="yes" xml:space="preserve">
          <source>These methods return an array of comments that appear directly before, directly after, and inside nodes, respectively. They are useful for rules that need to check comments in relation to a given node or token.</source>
          <target state="translated">这些方法分别返回直接出现在节点之前、直接出现在节点之后和节点内部的注释数组。它们对于需要检查与给定节点或标记相关的注释的规则非常有用。</target>
        </trans-unit>
        <trans-unit id="9ebcefc4be23db9deefd68d4795e030b4db83239" translate="yes" xml:space="preserve">
          <source>These objects may not:</source>
          <target state="translated">这些物体可能不。</target>
        </trans-unit>
        <trans-unit id="b293d56025264cb725163337a97e77e49487f3f5" translate="yes" xml:space="preserve">
          <source>These objects' responsibilities are:</source>
          <target state="translated">这些对象的责任是:</target>
        </trans-unit>
        <trans-unit id="dd3da68786bd031bdc775145f224453e0dd6417c" translate="yes" xml:space="preserve">
          <source>These options allow unused expressions &lt;em&gt;only if all&lt;/em&gt; of the code paths either directly change the state (for example, assignment statement) or could have &lt;em&gt;side effects&lt;/em&gt; (for example, function call).</source>
          <target state="translated">&lt;em&gt;仅当所有&lt;/em&gt;代码路径都直接更改状态（例如，赋值语句）或可能有&lt;em&gt;副作用&lt;/em&gt;（例如，函数调用）时，这些选项才允许使用未使用的表达式。</target>
        </trans-unit>
        <trans-unit id="94897999a480e4ff48d62e51753e5de1561ff443" translate="yes" xml:space="preserve">
          <source>These rules from older versions of ESLint (before the &lt;a href=&quot;../user-guide/rule-deprecation&quot;&gt;deprecation policy&lt;/a&gt; existed) have been replaced by newer rules:</source>
          <target state="translated">来自旧版ESLint的这些规则（在存在&lt;a href=&quot;../user-guide/rule-deprecation&quot;&gt;弃用策略&lt;/a&gt;之前）已由新规则替换：</target>
        </trans-unit>
        <trans-unit id="d4ca9fe55e32c924b83ce46d998ac795270b1873" translate="yes" xml:space="preserve">
          <source>These rules from older versions of ESLint (before the [deprecation policy](/docs/user-guide/rule-deprecation) existed) have been replaced by newer rules:</source>
          <target state="translated">这些来自 ESLint 旧版本的规则(在 [deprecation policy](/docs/user-guide/rule-deprecation)存在之前)已经被新的规则所取代。</target>
        </trans-unit>
        <trans-unit id="65d41d4fc89b05eb3f426d905efb451686afc534" translate="yes" xml:space="preserve">
          <source>These rules have been deprecated in accordance with the &lt;a href=&quot;../user-guide/rule-deprecation&quot;&gt;deprecation policy&lt;/a&gt;, and replaced by newer rules:</source>
          <target state="translated">这些规则已根据&lt;a href=&quot;../user-guide/rule-deprecation&quot;&gt;弃用策略弃用&lt;/a&gt;，并由更新的规则代替：</target>
        </trans-unit>
        <trans-unit id="1c10097ffacc1c485ac6032b4e5f64b78ed11f9f" translate="yes" xml:space="preserve">
          <source>These rules have been deprecated in accordance with the [deprecation policy](/docs/user-guide/rule-deprecation), and replaced by newer rules:</source>
          <target state="translated">根据[弃用政策](/docs/user-guide/rule-deprecation),这些规则已被弃用,并被新规则取代。</target>
        </trans-unit>
        <trans-unit id="5b4a9c4f9cab970df6595988dd4e0581f563d2df" translate="yes" xml:space="preserve">
          <source>These rules relate to ES6, also known as ES2015:</source>
          <target state="translated">这些规则涉及ES6,也就是ES2015。</target>
        </trans-unit>
        <trans-unit id="94068d755b38f00b794f755ab1776f6ba8d5af3d" translate="yes" xml:space="preserve">
          <source>These rules relate to better ways of doing things to help you avoid problems:</source>
          <target state="translated">这些规则涉及到更好的做事方法,以帮助你避免问题。</target>
        </trans-unit>
        <trans-unit id="6407bf99d5998c9e0fef54717f8eb0ec5ebfd745" translate="yes" xml:space="preserve">
          <source>These rules relate to code running in Node.js, or in browsers with CommonJS:</source>
          <target state="translated">这些规则涉及到在Node.js中运行的代码,或者在使用CommonJS的浏览器中运行的代码。</target>
        </trans-unit>
        <trans-unit id="2c800b49f52cfb2c02793919534a03b1de5ad3a3" translate="yes" xml:space="preserve">
          <source>These rules relate to possible syntax or logic errors in JavaScript code:</source>
          <target state="translated">这些规则与JavaScript代码中可能出现的语法或逻辑错误有关。</target>
        </trans-unit>
        <trans-unit id="7d762fa25dfbf7bdd07460cee8d398e88a51d344" translate="yes" xml:space="preserve">
          <source>These rules relate to strict mode directives:</source>
          <target state="translated">这些规则与严格模式指令有关。</target>
        </trans-unit>
        <trans-unit id="c8321a3f35b15048cb55738fb106514521cfe231" translate="yes" xml:space="preserve">
          <source>These rules relate to style guidelines, and are therefore quite subjective:</source>
          <target state="translated">这些规则涉及到风格准则,因此是相当主观的。</target>
        </trans-unit>
        <trans-unit id="0d081ea96820ff5654d3db473d43162f105b1f8c" translate="yes" xml:space="preserve">
          <source>These rules relate to variable declarations:</source>
          <target state="translated">这些规则与变量声明有关。</target>
        </trans-unit>
        <trans-unit id="cfba5d7e75af3b7e2807c06e5034c9af4096fa98" translate="yes" xml:space="preserve">
          <source>Things to Avoid</source>
          <target state="translated">要避免的事情</target>
        </trans-unit>
        <trans-unit id="1988fde0b51715dd909d42c7a4aa01100331ad2f" translate="yes" xml:space="preserve">
          <source>Think you found a problem? We'd love to hear about it. This section explains how to submit a bug, the type of information we need to properly verify it, and the overall process.</source>
          <target state="translated">你认为你发现了一个问题?我们很乐意听到它。本节解释了如何提交错误,我们需要正确验证的信息类型,以及整体流程。</target>
        </trans-unit>
        <trans-unit id="f06f2b5e218ca06ae1bd67c1145935c9e1aabdba" translate="yes" xml:space="preserve">
          <source>Thinking of comments in the context of tokens is more predictable and easier to reason about than thinking about comment tokens in the context of AST nodes</source>
          <target state="translated">在标记的上下文中思考评论,比在AST节点的上下文中思考评论标记更可预测,也更容易推理。</target>
        </trans-unit>
        <trans-unit id="2050eef925ba3c231aec703d38a33757acef6aa9" translate="yes" xml:space="preserve">
          <source>Third, it creates the looping path from &lt;code&gt;body&lt;/code&gt; segment to &lt;code&gt;update&lt;/code&gt; segment. At this time, the next segment has existed already, so the &lt;code&gt;onCodePathSegmentStart&lt;/code&gt; event is not fired. It fires &lt;code&gt;onCodePathSegmentLoop&lt;/code&gt; instead.</source>
          <target state="translated">第三，它创建了从 &lt;code&gt;body&lt;/code&gt; 段到 &lt;code&gt;update&lt;/code&gt; 段的循环路径。目前，下一个段已经存在，因此不会触发 &lt;code&gt;onCodePathSegmentStart&lt;/code&gt; 事件。它会触发 &lt;code&gt;onCodePathSegmentLoop&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="415be4f10478e1046c67a83032a6f4a8f849fe2a" translate="yes" xml:space="preserve">
          <source>This allows you to avoid retyping error messages. It also prevents errors reported in different sections of your rule from having out-of-date messages.</source>
          <target state="translated">这样可以避免重新输入错误信息。它还可以防止在规则的不同部分报告的错误信息过期。</target>
        </trans-unit>
        <trans-unit id="13fa28b1d868c6cd569942c00fe12d33c91d2c69" translate="yes" xml:space="preserve">
          <source>This automatically starts Mocha and runs all tests in the &lt;code&gt;tests&lt;/code&gt; directory. You need only add yours and it will automatically be picked up when running tests.</source>
          <target state="translated">这会自动启动Mocha并运行 &lt;code&gt;tests&lt;/code&gt; 目录中的所有测试。您只需要添加您的内容，它将在运行测试时自动提取。</target>
        </trans-unit>
        <trans-unit id="cb4bd44fc1b6c85e9764f5ab63ec69c2b7dbea0b" translate="yes" xml:space="preserve">
          <source>This behavior was relying on comment attachment happening at the parser level, which does not happen anymore, to ensure that all comments would be accounted for</source>
          <target state="translated">这种行为依赖于在解析器级别上发生的注释附件,现在不会再发生了,以确保所有的注释都会被记录下来。</target>
        </trans-unit>
        <trans-unit id="f18fe7d0f8dbbc8445c9163810cbe362da97229f" translate="yes" xml:space="preserve">
          <source>This change was made to help new ESLint users who are frequently confused that ESLint does nothing by default besides reporting parser errors. We anticipate this change will have minimal impact on most established users because you're more likely to have configuration files already.</source>
          <target state="translated">这个变化是为了帮助ESLint的新用户,他们经常感到困惑,因为ESLint除了报告解析器错误之外,默认情况下什么也不做。我们预计这个变化对大多数老用户的影响很小,因为你更可能已经有了配置文件。</target>
        </trans-unit>
        <trans-unit id="eea20aaf3851e50d7d18c459c1d15f06a9f1fe7e" translate="yes" xml:space="preserve">
          <source>This class depends on the Node.js &lt;code&gt;fs&lt;/code&gt; module and the file system, so you cannot use it in browsers. If you want to lint code on browsers, use the &lt;a href=&quot;#linter&quot;&gt;Linter&lt;/a&gt; class instead.</source>
          <target state="translated">此类取决于Node.js &lt;code&gt;fs&lt;/code&gt; 模块和文件系统，因此您不能在浏览器中使用它。如果要在浏览器上添加代码，请改用&lt;a href=&quot;#linter&quot;&gt;Linter&lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="bc26638966505856d54d65c1178254da87bced09" translate="yes" xml:space="preserve">
          <source>This code could appear in any module and will stop the entire application when &lt;code&gt;somethingBadHappened&lt;/code&gt; is truthy. This doesn't give the application any chance to respond to the error. It's usually better to throw an error and allow the application to handle it appropriately:</source>
          <target state="translated">该代码可以出现在任何模块中，并且当 &lt;code&gt;somethingBadHappened&lt;/code&gt; 为真时，它将停止整个应用程序。这不会给应用程序任何机会响应该错误。通常最好抛出一个错误并允许应用程序适当地处理它：</target>
        </trans-unit>
        <trans-unit id="6a1a606524e7605868cb030ae98dda8a50f6c11c" translate="yes" xml:space="preserve">
          <source>This code is an example of a good use of &lt;code&gt;bind()&lt;/code&gt; for setting the value of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">这段代码很好地使用了 &lt;code&gt;bind()&lt;/code&gt; 来设置 &lt;code&gt;this&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="188ba6fbc8e6fe291e33a72f0675afd9594eb52a" translate="yes" xml:space="preserve">
          <source>This code is equivalent to:</source>
          <target state="translated">这个代码相当于:</target>
        </trans-unit>
        <trans-unit id="753da87c758e9ab0fcb2b2a117dfb70f5117fba4" translate="yes" xml:space="preserve">
          <source>This code is likely the result of refactoring where a variable was removed from the concatenation (such as &lt;code&gt;&quot;a&quot; + b + &quot;b&quot;&lt;/code&gt;). In such a case, the concatenation isn't important and the code can be rewritten as:</source>
          <target state="translated">该代码可能是重构从串联中删除变量的结果（例如 &lt;code&gt;&quot;a&quot; + b + &quot;b&quot;&lt;/code&gt; ）。在这种情况下，连接并不重要，可以将代码重写为：</target>
        </trans-unit>
        <trans-unit id="9f3828fead792474a4d824e09a1e9cb9a66c9622" translate="yes" xml:space="preserve">
          <source>This code looks like it will sum the results of calling &lt;code&gt;getPageLength(1)&lt;/code&gt; and &lt;code&gt;getPageLength(2)&lt;/code&gt;, but in reality the final value of &lt;code&gt;totalLength&lt;/code&gt; will only be the length of one of the two pages. The bug is in the statement &lt;code&gt;totalLength += await getPageLength(pageNum);&lt;/code&gt;. This statement first reads an initial value of &lt;code&gt;totalLength&lt;/code&gt;, then calls &lt;code&gt;getPageLength(pageNum)&lt;/code&gt; and waits for that Promise to fulfill. Finally, it sets the value of &lt;code&gt;totalLength&lt;/code&gt; to the sum of &lt;code&gt;await getPageLength(pageNum)&lt;/code&gt; and the &lt;em&gt;initial&lt;/em&gt; value of &lt;code&gt;totalLength&lt;/code&gt;. If the &lt;code&gt;totalLength&lt;/code&gt; variable is updated in a separate function call during the time that the &lt;code&gt;getPageLength(pageNum)&lt;/code&gt; Promise is pending, that update will be lost because the new value is overwritten without being read.</source>
          <target state="translated">此代码看起来将总结调用的结果 &lt;code&gt;getPageLength(1)&lt;/code&gt; 和 &lt;code&gt;getPageLength(2)&lt;/code&gt; ，但在现实中的终值 &lt;code&gt;totalLength&lt;/code&gt; 只会是两个网页其中之一的长度。该错误在语句 &lt;code&gt;totalLength += await getPageLength(pageNum);&lt;/code&gt; 。该声明首先读取的初始值 &lt;code&gt;totalLength&lt;/code&gt; ，然后调用 &lt;code&gt;getPageLength(pageNum)&lt;/code&gt; ，并在这个承诺履行等待。最后，它设置的值 &lt;code&gt;totalLength&lt;/code&gt; 到的总和 &lt;code&gt;await getPageLength(pageNum)&lt;/code&gt; 和&lt;em&gt;初始&lt;/em&gt;的值 &lt;code&gt;totalLength&lt;/code&gt; 。如果总 &lt;code&gt;totalLength&lt;/code&gt; 在 &lt;code&gt;getPageLength(pageNum)&lt;/code&gt; Promise待处理期间，将在单独的函数调用中更新变量，该更新将丢失，因为新值将被覆盖而不会被读取。</target>
        </trans-unit>
        <trans-unit id="684f202df475b56b50fb6fd729383d048e7a34fd" translate="yes" xml:space="preserve">
          <source>This command is used for intensive profiling of ESLint using Chrome Developer Tools. It starts a development server that runs through three profiles:</source>
          <target state="translated">该命令用于使用 Chrome 开发工具对 ESLint 进行密集剖析。它启动一个开发服务器,通过三个配置文件运行。</target>
        </trans-unit>
        <trans-unit id="ad05d4ce57e7c2b8d71120892681f0fd7b8a2986" translate="yes" xml:space="preserve">
          <source>This comment specifies the &quot;double&quot; option for the &lt;a href=&quot;../rules/quotes&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt; rule. The first item in the array is always the rule severity (number or string).</source>
          <target state="translated">此注释为&lt;a href=&quot;../rules/quotes&quot;&gt; &lt;code&gt;quotes&lt;/code&gt; &lt;/a&gt;规则指定&amp;ldquo;双&amp;rdquo;选项。数组中的第一项始终是规则严重性（数字或字符串）。</target>
        </trans-unit>
        <trans-unit id="c7f36a8542f8ca497d5ce67e7924c214e3e2553a" translate="yes" xml:space="preserve">
          <source>This configuration would require blank lines after all directive prologues, like the &lt;a href=&quot;lines-around-directive&quot;&gt;lines-around-directive&lt;/a&gt; rule.</source>
          <target state="translated">此配置在所有指令序言之后都需要空白行，例如，&lt;a href=&quot;lines-around-directive&quot;&gt;行周围指令&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="9dbff86ed4fd7400b47ff47a0dd5eda756a4d90b" translate="yes" xml:space="preserve">
          <source>This configuration would require blank lines after every sequence of variable declarations, like the &lt;a href=&quot;newline-after-var&quot;&gt;newline-after-var&lt;/a&gt; rule.</source>
          <target state="translated">此配置在每个变量声明序列之后都需要空白行，例如&lt;a href=&quot;newline-after-var&quot;&gt;newline-after-var&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="1e26ce16017121a05fb352bf06244e7be23d0979" translate="yes" xml:space="preserve">
          <source>This configuration would require blank lines before all &lt;code&gt;return&lt;/code&gt; statements, like the &lt;a href=&quot;newline-before-return&quot;&gt;newline-before-return&lt;/a&gt; rule.</source>
          <target state="translated">此配置在所有 &lt;code&gt;return&lt;/code&gt; 语句之前需要空白行，例如&lt;a href=&quot;newline-before-return&quot;&gt;newline-before-return&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="edd29e3ad0ea0fd7c3b1da1138e750163dfb1aad" translate="yes" xml:space="preserve">
          <source>This configuration would require blank lines between clauses in &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">此配置将需要 &lt;code&gt;switch&lt;/code&gt; 语句中子句之间的空白行。</target>
        </trans-unit>
        <trans-unit id="6b66a4e4cfa3e14529aa4fa898e5f7863716da98" translate="yes" xml:space="preserve">
          <source>This confusion led to the suggestion that you always use the radix parameter to &lt;code&gt;parseInt()&lt;/code&gt; to eliminate unintended consequences. So instead of doing this:</source>
          <target state="translated">这种混淆导致建议您始终使用基数参数 &lt;code&gt;parseInt()&lt;/code&gt; 来消除意外的后果。因此，不要这样做：</target>
        </trans-unit>
        <trans-unit id="83e16d377b13bc51965962233959b781d483d56b" translate="yes" xml:space="preserve">
          <source>This creates a &lt;code&gt;.eslintrc.json&lt;/code&gt; with the equivalent rules from &lt;code&gt;.jscsrc.json&lt;/code&gt;.</source>
          <target state="translated">这将创建一个 &lt;code&gt;.eslintrc.json&lt;/code&gt; 从等价规则 &lt;code&gt;.jscsrc.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35b6118aa09ead4292a552cdefd4bf660c36121a" translate="yes" xml:space="preserve">
          <source>This defines two global variables, &lt;code&gt;var1&lt;/code&gt; and &lt;code&gt;var2&lt;/code&gt;. If you want to optionally specify that these global variables can be written to (rather than only being read), then you can set each with a &lt;code&gt;&quot;writable&quot;&lt;/code&gt; flag:</source>
          <target state="translated">这定义了两个全局变量 &lt;code&gt;var1&lt;/code&gt; 和 &lt;code&gt;var2&lt;/code&gt; 。如果您希望有选择地指定可以写入这些全局变量（而不是仅读取它们），则可以为每个全局变量设置一个 &lt;code&gt;&quot;writable&quot;&lt;/code&gt; 标志：</target>
        </trans-unit>
        <trans-unit id="3ca397cac4d7710b96570663c5edc9bb83de7535" translate="yes" xml:space="preserve">
          <source>This document was written based on the implementation of &lt;a href=&quot;https://github.com/eslint/eslint-scope&quot;&gt;eslint-scope&lt;/a&gt;, a fork of &lt;a href=&quot;https://github.com/estools/escope&quot;&gt;escope&lt;/a&gt;, and deprecates some members ESLint is not using.</source>
          <target state="translated">本文档基于&lt;a href=&quot;https://github.com/eslint/eslint-scope&quot;&gt;eslint-scope&lt;/a&gt;的实现（escope的一个分支）而&lt;a href=&quot;https://github.com/estools/escope&quot;&gt;编写&lt;/a&gt;，并弃用了ESLint未使用的某些成员。</target>
        </trans-unit>
        <trans-unit id="2b59eaeb1ba84dbe4d0f62e580e35a843870fadf" translate="yes" xml:space="preserve">
          <source>This does not apply to ES modules since the module code is implicitly in &lt;code&gt;strict&lt;/code&gt; mode.</source>
          <target state="translated">这不适用于ES模块，因为模块代码隐式处于 &lt;code&gt;strict&lt;/code&gt; 模式下。</target>
        </trans-unit>
        <trans-unit id="98630f364b82526bebf7c8f187b15017bce5bf8a" translate="yes" xml:space="preserve">
          <source>This edit information means replacing the range of the &lt;code&gt;range&lt;/code&gt; property by the &lt;code&gt;text&lt;/code&gt; property value. It's like &lt;code&gt;sourceCodeText.slice(0, edit.range[0]) + edit.text + sourceCodeText.slice(edit.range[1])&lt;/code&gt;. Therefore, it's an add if the &lt;code&gt;range[0]&lt;/code&gt; and &lt;code&gt;range[1]&lt;/code&gt; property values are the same value, and it's removal if the &lt;code&gt;text&lt;/code&gt; property value is empty string.</source>
          <target state="translated">该编辑信息意味着用 &lt;code&gt;text&lt;/code&gt; 属性值替换 &lt;code&gt;range&lt;/code&gt; 属性的范围。就像 &lt;code&gt;sourceCodeText.slice(0, edit.range[0]) + edit.text + sourceCodeText.slice(edit.range[1])&lt;/code&gt; 。因此，如果 &lt;code&gt;range[0]&lt;/code&gt; 和 &lt;code&gt;range[1]&lt;/code&gt; 属性值相同，则为加号；如果 &lt;code&gt;text&lt;/code&gt; 属性值为空字符串，则将其移除。</target>
        </trans-unit>
        <trans-unit id="fb51c33d469f4a38ec64dfb8e217007e9ea2b0d3" translate="yes" xml:space="preserve">
          <source>This enables Node.js and Mocha environments.</source>
          <target state="translated">这样就可以实现Node.js和Mocha环境。</target>
        </trans-unit>
        <trans-unit id="96d81fc1760eedae232eea6c704c64e8eb216135" translate="yes" xml:space="preserve">
          <source>This error is raised to highlight a piece of code that may not work as you expect it to and could also indicate a misunderstanding of how the language works. Your code may run without any problems if you do not fix this error, but in some situations it could behave unexpectedly.</source>
          <target state="translated">该错误的出现是为了突出显示一段可能无法按照您的期望工作的代码,也可能表明对语言工作方式的误解。如果你不修复这个错误,你的代码可能会毫无问题地运行,但在某些情况下,它可能会出现意外的行为。</target>
        </trans-unit>
        <trans-unit id="1319046b42ad8a423f26271e5a8f9e3897afb48f" translate="yes" xml:space="preserve">
          <source>This error is raised to highlight a potentially confusing and potentially pointless piece of code. There are almost no situations in which you would need to compare something to itself.</source>
          <target state="translated">提出这个错误是为了强调一段可能会引起混淆和可能毫无意义的代码。几乎没有任何情况下,你需要将某物与自身进行比较。</target>
        </trans-unit>
        <trans-unit id="e531d4e1a4e5ab163fb0aa73581a1e29f4d1b370" translate="yes" xml:space="preserve">
          <source>This error is raised to highlight the use of a bad practice. By passing a string to the Function constructor, you are requiring the engine to parse that string much in the way it has to when you call the &lt;code&gt;eval&lt;/code&gt; function.</source>
          <target state="translated">出现此错误是为了突出说明不良做法的使用。通过将字符串传递给Function构造函数，您需要引擎以调用 &lt;code&gt;eval&lt;/code&gt; 函数时所需的方式来解析该字符串。</target>
        </trans-unit>
        <trans-unit id="f2f1895eb1d8a20e008d9ead1693d3546a812ebc" translate="yes" xml:space="preserve">
          <source>This error occurs when a label is used to mark a statement that is not an iteration or switch</source>
          <target state="translated">当一个标签被用来标记一个不是迭代或开关的语句时,就会出现这个错误。</target>
        </trans-unit>
        <trans-unit id="0066921471bb97a77df66b0fbbcd0a1701ecc926" translate="yes" xml:space="preserve">
          <source>This event is always fired when the next segment has existed already. That timing is the end of loops mainly.</source>
          <target state="translated">这个事件总是在下一段已经存在的时候被触发。这个时机主要是循环的结束。</target>
        </trans-unit>
        <trans-unit id="bb4b12cc9ff8e27a5e1e8dc331ee5e01a59914a3" translate="yes" xml:space="preserve">
          <source>This example doesn't need to include separators as &lt;code&gt;path.join()&lt;/code&gt; will do it in the most appropriate manner. Alternately, you can use &lt;code&gt;path.resolve()&lt;/code&gt; to retrieve the fully-qualified path:</source>
          <target state="translated">这个示例不需要包含分隔符，因为 &lt;code&gt;path.join()&lt;/code&gt; 将以最合适的方式进行分隔。另外，您可以使用 &lt;code&gt;path.resolve()&lt;/code&gt; 检索完全限定的路径：</target>
        </trans-unit>
        <trans-unit id="a1489f70baffad0b363356684d7ebc01fe6e95fe" translate="yes" xml:space="preserve">
          <source>This example is checking whether or not the parameter &lt;code&gt;cb&lt;/code&gt; is called in every path. Instances of &lt;code&gt;CodePath&lt;/code&gt; and &lt;code&gt;CodePathSegment&lt;/code&gt; are shared to every rule. So a rule must not modify those instances. Please use a map of information instead.</source>
          <target state="translated">本示例正在检查是否在每个路径中都调用了参数 &lt;code&gt;cb&lt;/code&gt; 。 &lt;code&gt;CodePath&lt;/code&gt; 和 &lt;code&gt;CodePathSegment&lt;/code&gt; 的实例共享给每个规则。因此，规则不得修改这些实例。请改用信息图。</target>
        </trans-unit>
        <trans-unit id="6b1cbc4d68b7ab7330711ad6c1fdf27c26b1979f" translate="yes" xml:space="preserve">
          <source>This example is the same as the last example, only it uses the numeric codes instead of the string values. The &lt;code&gt;eqeqeq&lt;/code&gt; rule is off and the &lt;code&gt;curly&lt;/code&gt; rule is set to be an error.</source>
          <target state="translated">此示例与上一个示例相同，只不过它使用数字代码而不是字符串值。该 &lt;code&gt;eqeqeq&lt;/code&gt; 规则是关闭和 &lt;code&gt;curly&lt;/code&gt; 规则设置为是一个错误。</target>
        </trans-unit>
        <trans-unit id="5b80ceb7cc1a3b04b54119a40781bdb6e7bf6522" translate="yes" xml:space="preserve">
          <source>This example uses the configuration file at &lt;code&gt;~/my-eslint.json&lt;/code&gt;.</source>
          <target state="translated">本示例使用位于 &lt;code&gt;~/my-eslint.json&lt;/code&gt; 的配置文件。</target>
        </trans-unit>
        <trans-unit id="5750c517a5090dcd054e93a3ee543572116cb885" translate="yes" xml:space="preserve">
          <source>This fixer can just select a quote type arbitrarily. If it guesses wrong, the resulting code will be automatically reported and fixed by the &lt;a href=&quot;../rules/quotes&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt; rule.</source>
          <target state="translated">该修复程序可以随意选择报价类型。如果猜错了，结果代码将自动被&lt;a href=&quot;../rules/quotes&quot;&gt; &lt;code&gt;quotes&lt;/code&gt; &lt;/a&gt;规则报告并修复。</target>
        </trans-unit>
        <trans-unit id="72e5ad7dfae2aad2273d8fb43485335becf7a8e7" translate="yes" xml:space="preserve">
          <source>This flag can be useful for integrations (e.g. editor plugins) which need to autofix text from the command line without saving it to the filesystem.</source>
          <target state="translated">这个标志对于需要从命令行自动修复文本而不需要将其保存到文件系统的集成(例如编辑器插件)非常有用。</target>
        </trans-unit>
        <trans-unit id="157309b8637b779bbae6ea2553e72ed4cf1ac2da" translate="yes" xml:space="preserve">
          <source>This guide is intended for anyone who wants to contribute to an ESLint project. Please read it carefully as it answers a lot of the questions many newcomers have when first working with our projects.</source>
          <target state="translated">本指南适用于任何想为ESLint项目做贡献的人。请仔细阅读它,因为它回答了许多新人在第一次使用我们的项目时的问题。</target>
        </trans-unit>
        <trans-unit id="253a5fabdebd34fd1ff274b7348e9288f83d7161" translate="yes" xml:space="preserve">
          <source>This guide is intended for those who wish to use ESLint as an end-user. If you're looking for how to extend ESLint or work with the ESLint source code, please see the &lt;a href=&quot;../developer-guide&quot;&gt;Developer Guide&lt;/a&gt;.</source>
          <target state="translated">本指南适用于希望使用ESLint作为最终用户的用户。如果您正在寻找如何扩展ESLint或使用ESLint源代码，请参见&lt;a href=&quot;../developer-guide&quot;&gt;开发人员指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="473f2b9ad42cc05ec316de78004da7a5bf503dd5" translate="yes" xml:space="preserve">
          <source>This guide is intended for those who wish to:</source>
          <target state="translated">本指南是为那些希望:</target>
        </trans-unit>
        <trans-unit id="9ce127fc5333e8fad7ca9180cee5cf2786869645" translate="yes" xml:space="preserve">
          <source>This installs the ESLint CLI from the npm repository. To run ESLint, use the following format:</source>
          <target state="translated">这将从 npm 资源库中安装 ESLint CLI。要运行ESLint,请使用以下格式。</target>
        </trans-unit>
        <trans-unit id="6d6a6a6ef3fa256f73c341751311b151c76aafa7" translate="yes" xml:space="preserve">
          <source>This is a convenience method similar to &lt;code&gt;Linter#defineRule&lt;/code&gt;, except that it allows you to define many rules at once using an object.</source>
          <target state="translated">这是类似于 &lt;code&gt;Linter#defineRule&lt;/code&gt; 的便捷方法，不同之处在于，它允许您使用一个对象一次定义许多规则。</target>
        </trans-unit>
        <trans-unit id="11670f5644a3f050b8ea016868b68ee8847819a8" translate="yes" xml:space="preserve">
          <source>This is a static function on &lt;code&gt;CLIEngine&lt;/code&gt; that is used to output fixes from &lt;code&gt;report&lt;/code&gt; to disk. It does by looking for files that have an &lt;code&gt;output&lt;/code&gt; property in their results. Here's an example:</source>
          <target state="translated">这是 &lt;code&gt;CLIEngine&lt;/code&gt; 上的静态函数，用于将修复程序从 &lt;code&gt;report&lt;/code&gt; 输出到磁盘。它通过查找结果中具有 &lt;code&gt;output&lt;/code&gt; 属性的文件来实现。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="1adc98f9996e37b1c7669ea22572879ca414a9b1" translate="yes" xml:space="preserve">
          <source>This is a static function on &lt;code&gt;CLIEngine&lt;/code&gt;. It can be used to filter out all the non error messages from the report object.</source>
          <target state="translated">这是 &lt;code&gt;CLIEngine&lt;/code&gt; 上的静态函数。它可用于过滤掉报表对象中的所有非错误消息。</target>
        </trans-unit>
        <trans-unit id="411339a1879450f98c5e40e4c8f17c9ae2ac5b07" translate="yes" xml:space="preserve">
          <source>This is a static function on &lt;code&gt;SourceCode&lt;/code&gt; that is used to split the source code text into an array of lines.</source>
          <target state="translated">这是 &lt;code&gt;SourceCode&lt;/code&gt; 上的静态函数，用于将源代码文本拆分为行数组。</target>
        </trans-unit>
        <trans-unit id="5fdecc207ab12083b97a7f33edbcb0861fcaf254" translate="yes" xml:space="preserve">
          <source>This is a static method.</source>
          <target state="translated">这是一种静态方法。</target>
        </trans-unit>
        <trans-unit id="9e3f9a85b2f15c8a384321357b89de4db88c52fb" translate="yes" xml:space="preserve">
          <source>This is a static property.</source>
          <target state="translated">这是一个静态属性。</target>
        </trans-unit>
        <trans-unit id="5c6b39c351ca401855c1034cdb4244faf9090c89" translate="yes" xml:space="preserve">
          <source>This is also valid:</source>
          <target state="translated">这也是有效的。</target>
        </trans-unit>
        <trans-unit id="05cabcf8fe7c5a7502ad5f2210a082e0f0df43f2" translate="yes" xml:space="preserve">
          <source>This is an option to avoid conflicting with &lt;code&gt;no-use-before-define&lt;/code&gt; rule (without &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; option). If &lt;code&gt;true&lt;/code&gt; is specified, this rule will ignore variables that are read between the declaration and the first assignment. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">这是一个避免与 &lt;code&gt;no-use-before-define&lt;/code&gt; 规则冲突的选项（不带 &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; 选项）。如果指定 &lt;code&gt;true&lt;/code&gt; ，则此规则将忽略在声明和第一个赋值之间读取的变量。默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f2e67931876380560ac0e1af9b3fd1d55a7d952" translate="yes" xml:space="preserve">
          <source>This is called a Yoda condition because it reads as, &quot;if red equals the color&quot;, similar to the way the Star Wars character Yoda speaks. Compare to the other way of arranging the operands:</source>
          <target state="translated">这被称为尤达条件,因为它的读法是:&quot;如果红色等于颜色&quot;,类似于星球大战人物尤达的说话方式。与另一种排列操作数的方式相比。</target>
        </trans-unit>
        <trans-unit id="f9f1cbf0a10293e94b068250d8c44dd714c9617f" translate="yes" xml:space="preserve">
          <source>This is considered an implied &lt;code&gt;eval()&lt;/code&gt; because a string of JavaScript code is passed in to be interpreted. The same can be done with &lt;code&gt;setInterval()&lt;/code&gt; and &lt;code&gt;execScript()&lt;/code&gt;. Both interpret the JavaScript code in the global scope. For both &lt;code&gt;setTimeout()&lt;/code&gt; and &lt;code&gt;setInterval()&lt;/code&gt;, the first argument can also be a function, and that is considered safer and is more performant:</source>
          <target state="translated">这被认为是隐含的 &lt;code&gt;eval()&lt;/code&gt; ,因为传入了JavaScript代码字符串以进行解释。使用 &lt;code&gt;setInterval()&lt;/code&gt; 和 &lt;code&gt;execScript()&lt;/code&gt; 可以完成相同的操作。两者都在全局范围内解释JavaScript代码。对于 &lt;code&gt;setTimeout()&lt;/code&gt; 和 &lt;code&gt;setInterval()&lt;/code&gt; ，第一个参数也可以是一个函数，并且被认为更安全且性能更高：</target>
        </trans-unit>
        <trans-unit id="885353f2c68ea0bab26fa60d3a09af64f1ec283e" translate="yes" xml:space="preserve">
          <source>This is considered by many to be a bad practice due to the difficulty in debugging and reading these types of functions.</source>
          <target state="translated">这被很多人认为是一种不好的做法,因为调试和读取这类函数很困难。</target>
        </trans-unit>
        <trans-unit id="71789ba820d3432452cd5210c7e76d1350d5fa8c" translate="yes" xml:space="preserve">
          <source>This is not expected to cause breakage. However, it will likely result in larger report locations than before. For example, if a rule reports the root node of the AST, the reported problem's range will be the entire program. In some integrations, this could result in a poor user experience (e.g. if the entire program is highlighted to indicate an error).</source>
          <target state="translated">预计这不会造成破损。然而,它可能会导致报告位置比以前更大。例如,如果一个规则报告AST的根节点,报告问题的范围将是整个程序。在一些集成中,这可能会导致糟糕的用户体验(例如,如果整个程序被突出显示以表示错误)。</target>
        </trans-unit>
        <trans-unit id="09772e314d49341cf87eb2642be70a9dc5fc7d9f" translate="yes" xml:space="preserve">
          <source>This is the default option.</source>
          <target state="translated">这是默认选项。</target>
        </trans-unit>
        <trans-unit id="d56606d1292924eedc2be3d66c63677095b21441" translate="yes" xml:space="preserve">
          <source>This is the default option. It disallows assignments unless they are enclosed in parentheses.</source>
          <target state="translated">这是默认选项。它不允许转让,除非将其放在括号中。</target>
        </trans-unit>
        <trans-unit id="9ee2c2a8cccc55fcecc1d76de320e24ae82e812d" translate="yes" xml:space="preserve">
          <source>This is the default option. It enforces spacing after semicolons and disallows spacing before semicolons.</source>
          <target state="translated">这是默认选项。它强制要求分号后的间距,不允许分号前的间距。</target>
        </trans-unit>
        <trans-unit id="8c3fab8ba68001a6f97fcb8826756ef27d34444f" translate="yes" xml:space="preserve">
          <source>This is used to disambiguate the division operator to not confuse users.</source>
          <target state="translated">这是为了消除除法运算符的歧义,以免用户混淆。</target>
        </trans-unit>
        <trans-unit id="34f305c3c8978f968bfdd0149b0fd14a4716185a" translate="yes" xml:space="preserve">
          <source>This is used to disambiguate the slash operator and facilitates more readable code.</source>
          <target state="translated">这是为了消除斜线操作符的歧义,方便代码的可读性。</target>
        </trans-unit>
        <trans-unit id="8bd301643debec8b3d995a82000f4930e1a7b0d5" translate="yes" xml:space="preserve">
          <source>This is valid as well:</source>
          <target state="translated">这也是有效的。</target>
        </trans-unit>
        <trans-unit id="3cad551b2177908dacdd49bf4d5fd3dc7d354609" translate="yes" xml:space="preserve">
          <source>This may look alright at first sight, but this code in fact throws a syntax error in ECMAScript 5 strict mode. This happens because &lt;code&gt;1e2&lt;/code&gt; and &lt;code&gt;100&lt;/code&gt; are coerced into strings before getting used as the property name. Both &lt;code&gt;String(1e2)&lt;/code&gt; and &lt;code&gt;String(100)&lt;/code&gt; happen to be equal to &lt;code&gt;&quot;100&quot;&lt;/code&gt;, which causes the &quot;Duplicate data property in object literal not allowed in strict mode&quot; error. Issues like that can be tricky to debug, so some prefer to require quotes around all property names.</source>
          <target state="translated">乍一看，这似乎还不错，但是实际上，此代码在ECMAScript 5严格模式下引发了语法错误。发生这种情况是因为 &lt;code&gt;1e2&lt;/code&gt; 和 &lt;code&gt;100&lt;/code&gt; 在用作属性名称之前被强制转换为字符串。两个 &lt;code&gt;String(1e2)&lt;/code&gt; 和 &lt;code&gt;String(100)&lt;/code&gt; 正好等于 &lt;code&gt;&quot;100&quot;&lt;/code&gt; ，这将导致错误&amp;ldquo;在对象的重复数据属性字面不严格模式中使用&amp;rdquo;。诸如此类的问题很难调试，因此有些人倾向于要求在所有属性名称周围都加上引号。</target>
        </trans-unit>
        <trans-unit id="5f324b335e29b3bc2325916661c3691bcbdcc494" translate="yes" xml:space="preserve">
          <source>This may look like a &lt;code&gt;return&lt;/code&gt; statement that returns an object literal, however, the JavaScript engine will interpret this code as:</source>
          <target state="translated">这看起来像是返回对象文字的 &lt;code&gt;return&lt;/code&gt; 语句，但是，JavaScript引擎会将以下代码解释为：</target>
        </trans-unit>
        <trans-unit id="9469e264aeefd6b881ec26f4966d916d417a81b0" translate="yes" xml:space="preserve">
          <source>This message occurs because ESLint is unsure if you wanted to actually lint the file or not. As the message indicates, you can use &lt;code&gt;--no-ignore&lt;/code&gt; to omit using the ignore rules.</source>
          <target state="translated">出现此消息的原因是，ESLint无法确定您是否希望实际对文件进行处理。如消息所示，您可以使用 &lt;code&gt;--no-ignore&lt;/code&gt; 来使用忽略规则来忽略。</target>
        </trans-unit>
        <trans-unit id="7ed6656e46098c1897ba8527d403fd684c0380f1" translate="yes" xml:space="preserve">
          <source>This messages occurs because, normally, this file would be ignored by ESLint's implicit ignore rules (as mentioned above). A negated ignore rule in your &lt;code&gt;.eslintignore&lt;/code&gt; file would override the implicit rule and reinclude this file for linting. Additionally, in this specific case, &lt;code&gt;--no-ignore&lt;/code&gt; could be used to lint the file as well.</source>
          <target state="translated">出现此消息的原因是，通常，ESLint的隐式忽略规则将忽略该文件（如上所述）。 &lt;code&gt;.eslintignore&lt;/code&gt; 文件中的否定忽略规则将覆盖隐式规则，并重新包含此文件以进行掉毛。此外，在这种特定情况下，-- &lt;code&gt;--no-ignore&lt;/code&gt; 也可以用于使文件皮绒化。</target>
        </trans-unit>
        <trans-unit id="f867c366ca9a1bb334663562667053f7de2a0669" translate="yes" xml:space="preserve">
          <source>This method calculates the configuration for a given file, which can be useful for debugging purposes.</source>
          <target state="translated">此方法计算给定文件的配置,这对调试很有用。</target>
        </trans-unit>
        <trans-unit id="a7dd3396c1130d34c892b1e3d8bacb6965d2065b" translate="yes" xml:space="preserve">
          <source>This method checks if a given file is ignored by your configuration.</source>
          <target state="translated">此方法检查给定的文件是否被你的配置所忽略。</target>
        </trans-unit>
        <trans-unit id="109e1593c69f07fac48037663698a5106e5a31cb" translate="yes" xml:space="preserve">
          <source>This method copies the given results and removes warnings. The returned value contains only errors.</source>
          <target state="translated">本方法复制给定的结果并删除警告。返回的值只包含错误。</target>
        </trans-unit>
        <trans-unit id="9acfa8cb4bab952e8f358b4acdd87a3e87086a7e" translate="yes" xml:space="preserve">
          <source>This method is similar to verify except that it also runs autofixing logic, similar to the &lt;code&gt;--fix&lt;/code&gt; flag on the command line. The result object will contain the autofixed code, along with any remaining linting messages for the code that were not autofixed.</source>
          <target state="translated">此方法类似于验证，除了它还运行自动修复逻辑之外，类似于命令行上的 &lt;code&gt;--fix&lt;/code&gt; 标志。结果对象将包含自动修复的代码，以及未自动修复的代码的其余所有掉毛消息。</target>
        </trans-unit>
        <trans-unit id="8bededf08e4fa23aa4f897b18009383e1a17507e" translate="yes" xml:space="preserve">
          <source>This method lints the files that match the glob patterns and then returns the results.</source>
          <target state="translated">此方法将符合glob模式的文件进行列举,然后返回结果。</target>
        </trans-unit>
        <trans-unit id="cad535c45bf2ff2094ab71adf2177547066cf4c7" translate="yes" xml:space="preserve">
          <source>This method lints the given source code text and then returns the results.</source>
          <target state="translated">本方法对给定的源代码文本进行线程处理,然后返回结果。</target>
        </trans-unit>
        <trans-unit id="3d0bfb45ed00f594f3627eb7b50b9004b42dfee5" translate="yes" xml:space="preserve">
          <source>This method loads a formatter. Formatters convert lint results to a human- or machine-readable string.</source>
          <target state="translated">本方法加载一个格式化程序。格式化器将绒毛结果转换为人类或机器可读的字符串。</target>
        </trans-unit>
        <trans-unit id="6e28456cfd122c5d695be0c36d1639aa0cd9e8fd" translate="yes" xml:space="preserve">
          <source>This method returns a map of all loaded rules.</source>
          <target state="translated">此方法返回所有加载规则的映射。</target>
        </trans-unit>
        <trans-unit id="96118f25ecbb0711c0de11b20891644868f6d5a0" translate="yes" xml:space="preserve">
          <source>This method returns a map of all loaded rules. Under the hood, it calls &lt;a href=&quot;#lintergetrules&quot;&gt;Linter#getRules&lt;/a&gt;.</source>
          <target state="translated">此方法返回所有已加载规则的映射。在&lt;a href=&quot;#lintergetrules&quot;&gt;后台&lt;/a&gt;，它称为Linter＃getRules。</target>
        </trans-unit>
        <trans-unit id="750daf348b86f808d9b8eaf3ba8fb5c90d1422b3" translate="yes" xml:space="preserve">
          <source>This method returns an array of all the comments found in the program. This is useful for rules that need to check all comments regardless of location.</source>
          <target state="translated">此方法返回一个包含程序中所有注释的数组。这对于需要检查所有注释的规则非常有用,无论其位置如何。</target>
        </trans-unit>
        <trans-unit id="cf8d820e1cad68596ca7105185382c1dd8c45533" translate="yes" xml:space="preserve">
          <source>This method returns the scope which has the following types:</source>
          <target state="translated">本方法返回具有以下类型的作用域。</target>
        </trans-unit>
        <trans-unit id="f42d076bb44d47d2f4da5ac68aa78fc1e1a6605c" translate="yes" xml:space="preserve">
          <source>This method writes code modified by ESLint's autofix feature into its respective file. If any of the modified files don't exist, this method does nothing.</source>
          <target state="translated">本方法将ESLint的自动修复功能所修改的代码写入相应的文件中。如果任何修改后的文件不存在,本方法不做任何操作。</target>
        </trans-unit>
        <trans-unit id="dbe677f233ad08e453df8fbf6a0cc972e5133856" translate="yes" xml:space="preserve">
          <source>This object may not:</source>
          <target state="translated">这个对象可能不。</target>
        </trans-unit>
        <trans-unit id="07af4924baef123f1b198a3210ee8db9f97b124a" translate="yes" xml:space="preserve">
          <source>This object's responsibilities include:</source>
          <target state="translated">该对象的职责包括:</target>
        </trans-unit>
        <trans-unit id="00ba367d9f14ddd30b21a382dcdfd9d0529fef21" translate="yes" xml:space="preserve">
          <source>This option allows only valid array indexes: numbers that will be coerced to one of &lt;code&gt;&quot;0&quot;&lt;/code&gt;, &lt;code&gt;&quot;1&quot;&lt;/code&gt;, &lt;code&gt;&quot;2&quot;&lt;/code&gt; ... &lt;code&gt;&quot;4294967294&quot;&lt;/code&gt;.</source>
          <target state="translated">该选项仅允许有效的数组索引：将被强制为 &lt;code&gt;&quot;0&quot;&lt;/code&gt; ， &lt;code&gt;&quot;1&quot;&lt;/code&gt; ， &lt;code&gt;&quot;2&quot;&lt;/code&gt; ... &lt;code&gt;&quot;4294967294&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddb66475e59df0061ea6486916187732183c2c35" translate="yes" xml:space="preserve">
          <source>This option allows references to function declarations. For function expressions and arrow functions, please see the &lt;a href=&quot;#variables&quot;&gt;&lt;code&gt;variables&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">此选项允许引用函数声明。有关函数表达式和箭头函数，请参见&lt;a href=&quot;#variables&quot;&gt; &lt;code&gt;variables&lt;/code&gt; &lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="e8c3a3349dc261fe599ac47a9d7990013dfe7db9" translate="yes" xml:space="preserve">
          <source>This option allows you to disable reporting on warnings. If you enable this option, only errors are reported by ESLint.</source>
          <target state="translated">此选项允许您禁用警告报告。如果启用该选项,ESLint只报告错误。</target>
        </trans-unit>
        <trans-unit id="85dd27a30c2a375f5a8fd794ae0e7f82e1be6296" translate="yes" xml:space="preserve">
          <source>This option allows you to specify a filename to process STDIN as. This is useful when processing files from STDIN and you have rules which depend on the filename.</source>
          <target state="translated">这个选项允许你指定一个文件名来处理STDIN。当处理 STDIN 中的文件,并且有依赖于文件名的规则时,这个选项很有用。</target>
        </trans-unit>
        <trans-unit id="186734fe42d275a33186e1772b91f3f61e44c344" translate="yes" xml:space="preserve">
          <source>This option allows you to specify a parser to be used by ESLint. By default, &lt;code&gt;espree&lt;/code&gt; will be used.</source>
          <target state="translated">此选项允许您指定ESLint使用的解析器。默认情况下，将使用 &lt;code&gt;espree&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74b60e3e65cac66b94ee54882199faebdc7d7526" translate="yes" xml:space="preserve">
          <source>This option allows you to specify a warning threshold, which can be used to force ESLint to exit with an error status if there are too many warning-level rule violations in your project.</source>
          <target state="translated">这个选项允许您指定一个警告阈值,如果您的项目中有太多的警告级规则违反,可以用这个阈值来强制ESLint以错误状态退出。</target>
        </trans-unit>
        <trans-unit id="d9cfbfc188b072be5cf23949f06fff9feb06dd57" translate="yes" xml:space="preserve">
          <source>This option allows you to specify an additional configuration file for ESLint (see &lt;a href=&quot;configuring&quot;&gt;Configuring ESLint&lt;/a&gt; for more).</source>
          <target state="translated">此选项使您可以为ESLint指定其他配置文件（有关更多信息，请参阅&lt;a href=&quot;configuring&quot;&gt;配置ESLint&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d39ed50a5fad1fe2517fc4c0e41bff667e641b14" translate="yes" xml:space="preserve">
          <source>This option allows you to specify another directory from which to load rules files. This allows you to dynamically load new rules at run time. This is useful when you have custom rules that aren't suitable for being bundled with ESLint.</source>
          <target state="translated">该选项允许您指定另一个目录来加载规则文件。这允许您在运行时动态加载新规则。当您有不适合与 ESLint 捆绑的自定义规则时,这很有用。</target>
        </trans-unit>
        <trans-unit id="1b65a3229193445946c07836b34241f12c03d02d" translate="yes" xml:space="preserve">
          <source>This option allows you to specify parser options to be used by ESLint. Note that the available parser options are determined by the parser being used.</source>
          <target state="translated">这个选项允许您指定ESLint要使用的解析器选项。请注意,可用的解析器选项由正在使用的解析器决定。</target>
        </trans-unit>
        <trans-unit id="106d9c8368dbe004a8c5fe9daebbd29c87af1e91" translate="yes" xml:space="preserve">
          <source>This option allows you to specify patterns of files to ignore (in addition to those in &lt;code&gt;.eslintignore&lt;/code&gt;). You can repeat the option to provide multiple patterns. The supported syntax is the same as for &lt;code&gt;.eslintignore&lt;/code&gt;&lt;a href=&quot;configuring#.eslintignore&quot;&gt;files&lt;/a&gt;, which use the same patterns as the &lt;code&gt;.gitignore&lt;/code&gt;&lt;a href=&quot;https://git-scm.com/docs/gitignore&quot;&gt;specification&lt;/a&gt;. You should quote your patterns in order to avoid shell interpretation of glob patterns.</source>
          <target state="translated">使用此选项，您可以指定要忽略的文件模式（ &lt;code&gt;.eslintignore&lt;/code&gt; 中的模式除外）。您可以重复该选项以提供多种模式。支持的语法与 &lt;code&gt;.eslintignore&lt;/code&gt; &lt;a href=&quot;configuring#.eslintignore&quot;&gt;文件的&lt;/a&gt;语法相同，后者使用与 &lt;code&gt;.gitignore&lt;/code&gt; &lt;a href=&quot;https://git-scm.com/docs/gitignore&quot;&gt;规范&lt;/a&gt;相同的模式。您应该引用您的模式，以避免shell解释glob模式。</target>
        </trans-unit>
        <trans-unit id="4e1a28f3ded9a3b9eb6475943dff5e4939f78ddd" translate="yes" xml:space="preserve">
          <source>This option allows you to specify the file to use as your &lt;code&gt;.eslintignore&lt;/code&gt;. By default, ESLint looks in the current working directory for &lt;code&gt;.eslintignore&lt;/code&gt;. You can override this behavior by providing a path to a different file.</source>
          <target state="translated">此选项使您可以指定用作 &lt;code&gt;.eslintignore&lt;/code&gt; 的文件。默认情况下，ESLint在当前工作目录中查找 &lt;code&gt;.eslintignore&lt;/code&gt; 。您可以通过提供其他文件的路径来覆盖此行为。</target>
        </trans-unit>
        <trans-unit id="c32bf7172dd146fc567e0246ac0c8ff17f262721" translate="yes" xml:space="preserve">
          <source>This option allows you to specify the type of fixes to apply when using either &lt;code&gt;--fix&lt;/code&gt; or &lt;code&gt;--fix-dry-run&lt;/code&gt;. The three types of fixes are:</source>
          <target state="translated">使用此选项，您可以指定使用 &lt;code&gt;--fix&lt;/code&gt; 或 &lt;code&gt;--fix-dry-run&lt;/code&gt; 时要应用的修补程序的类型。修复的三种类型是：</target>
        </trans-unit>
        <trans-unit id="c914fe341609fcaa321048e85e99b3c111eac45d" translate="yes" xml:space="preserve">
          <source>This option allows you to specify which file extensions ESLint will use when searching for JavaScript files in the directories you specify. By default, it uses &lt;code&gt;.js&lt;/code&gt; as the only file extension.</source>
          <target state="translated">使用此选项，您可以指定在指定目录中搜​​索JavaScript文件时，ESLint将使用哪些文件扩展名。默认情况下，它使用 &lt;code&gt;.js&lt;/code&gt; 作为唯一的文件扩展名。</target>
        </trans-unit>
        <trans-unit id="087953b73d82f7e89cdb39f3d87a42f93a84d83d" translate="yes" xml:space="preserve">
          <source>This option allows you to specify which file extensions ESLint will use when searching for target files in the directories you specify. By default, ESLint lints &lt;code&gt;*.js&lt;/code&gt; files and the files that match the &lt;code&gt;overrides&lt;/code&gt; entries of your configuration.</source>
          <target state="translated">使用此选项，您可以指定在指定目录中搜​​索目标文件时，ESLint将使用哪些文件扩展名。默认情况下，ESLint会掉 &lt;code&gt;*.js&lt;/code&gt; 文件以及与配置的 &lt;code&gt;overrides&lt;/code&gt; 条目匹配的文件。</target>
        </trans-unit>
        <trans-unit id="5cefe1392a8f9c174c272d0205d79e85976936f0" translate="yes" xml:space="preserve">
          <source>This option causes ESLint to report directive comments like &lt;code&gt;// eslint-disable-line&lt;/code&gt; when no errors would have been reported on that line anyway. This can be useful to prevent future errors from unexpectedly being suppressed, by cleaning up old &lt;code&gt;eslint-disable&lt;/code&gt; comments which are no longer applicable.</source>
          <target state="translated">如果该 &lt;code&gt;// eslint-disable-line&lt;/code&gt; 未报告任何错误，则此选项会使ESLint报告// // eslint-disable-line这样的指令注释。通过清除不再适用 &lt;code&gt;eslint-disable&lt;/code&gt; 旧注释，这对于防止将来的错误意外被抑制很有用。</target>
        </trans-unit>
        <trans-unit id="c661c2f3569528801054ee87219857863dcf11b9" translate="yes" xml:space="preserve">
          <source>This option checks methods with the given names, &lt;em&gt;even if&lt;/em&gt; the object which has the method is &lt;em&gt;not&lt;/em&gt; an array.</source>
          <target state="translated">&lt;em&gt;即使&lt;/em&gt;具有该方法的对象&lt;em&gt;不是&lt;/em&gt;数组，此选项&lt;em&gt;也会&lt;/em&gt;使用给定名称检查方法。</target>
        </trans-unit>
        <trans-unit id="fccdeab5132a30722aca041dac694817c9dc5d44" translate="yes" xml:space="preserve">
          <source>This option defines global variables so that they will not be flagged as undefined by the &lt;code&gt;no-undef&lt;/code&gt; rule. Any specified global variables are assumed to be read-only by default, but appending &lt;code&gt;:true&lt;/code&gt; to a variable's name ensures that &lt;code&gt;no-undef&lt;/code&gt; will also allow writes. To specify multiple global variables, separate them using commas, or use the option multiple times.</source>
          <target state="translated">此选项定义全局变量，以便它们不会被 &lt;code&gt;no-undef&lt;/code&gt; 规则标记为未定义。默认情况下，所有指定的全局变量都假定为只读，但是在变量名称后附加 &lt;code&gt;:true&lt;/code&gt; 可以确保 &lt;code&gt;no-undef&lt;/code&gt; 也将允许写入。要指定多个全局变量，请使用逗号分隔它们，或多次使用该选项。</target>
        </trans-unit>
        <trans-unit id="8ba2372568bac2be3ed8079d1b145a3ad1c564b1" translate="yes" xml:space="preserve">
          <source>This option disallows all assignments in &lt;code&gt;return&lt;/code&gt; statements. All assignments are treated as problems.</source>
          <target state="translated">此选项禁止在 &lt;code&gt;return&lt;/code&gt; 语句中进行所有分配。所有作业均视为问题。</target>
        </trans-unit>
        <trans-unit id="c64a3a7bb5ddd0c764741c6306006a0d08071747" translate="yes" xml:space="preserve">
          <source>This option enables specific environments. Details about the global variables defined by each environment are available on the &lt;a href=&quot;configuring&quot;&gt;configuration&lt;/a&gt; documentation. This option only enables environments; it does not disable environments set in other configuration files. To specify multiple environments, separate them using commas, or use the option multiple times.</source>
          <target state="translated">此选项启用特定的环境。有关每个环境定义的全局变量的详细信息，可在&lt;a href=&quot;configuring&quot;&gt;配置&lt;/a&gt;文档中找到。此选项仅启用环境。它不会禁用在其他配置文件中设置的环境。要指定多个环境，请使用逗号分隔它们，或多次使用该选项。</target>
        </trans-unit>
        <trans-unit id="ea6b9d897dea32cb3a7adac81f91222a4f84f0b0" translate="yes" xml:space="preserve">
          <source>This option enforces spacing before semicolons and disallows spacing after semicolons.</source>
          <target state="translated">这个选项强制执行分号前的间距,不允许分号后的间距。</target>
        </trans-unit>
        <trans-unit id="de4b303d3dec233dfe8862afdb1eb4eeb8a2fe5e" translate="yes" xml:space="preserve">
          <source>This option ensures that all function bodies are strict mode code, while global code is not. Particularly if a build step concatenates multiple scripts, a strict mode directive in global code of one script could unintentionally enable strict mode in another script that was not intended to be strict code.</source>
          <target state="translated">这个选项确保所有的函数体都是严格模式代码,而全局代码不是。特别是当一个构建步骤连接了多个脚本时,一个脚本的全局代码中的严格模式指令可能会无意中在另一个不打算成为严格代码的脚本中启用严格模式。</target>
        </trans-unit>
        <trans-unit id="e647d69856373f96f3407afed5013f48346bdfe2" translate="yes" xml:space="preserve">
          <source>This option ensures that all functions are executed in strict mode. A strict mode directive must be present in global code or in every top-level function declaration or expression. It does not concern itself with unnecessary strict mode directives in nested functions that are already strict, nor with multiple strict mode directives at the same level.</source>
          <target state="translated">这个选项确保所有函数都以严格模式执行。全局代码或每个顶层函数声明或表达式中都必须有严格模式指令。它不关心已经是严格模式的嵌套函数中不必要的严格模式指令,也不关心同一层次的多个严格模式指令。</target>
        </trans-unit>
        <trans-unit id="aa35f1a43f3c3018915a36e743fa5634d8ffb97c" translate="yes" xml:space="preserve">
          <source>This option forces the enabling/disabling of colorized output. You can use this to override the default behavior, which is to enable colorized output unless no TTY is detected, such as when piping &lt;code&gt;eslint&lt;/code&gt; through &lt;code&gt;cat&lt;/code&gt; or &lt;code&gt;less&lt;/code&gt;.</source>
          <target state="translated">此选项强制启用/禁用彩色输出。您可以使用它来覆盖默认行为，即除非未检测到TTY，否则将启用彩色输出，例如，通过 &lt;code&gt;eslint&lt;/code&gt; 通过 &lt;code&gt;cat&lt;/code&gt; 或 &lt;code&gt;less&lt;/code&gt; 小号管道输送时。</target>
        </trans-unit>
        <trans-unit id="4aca571b443c66494cfaa66d1259c007fcbd6a87" translate="yes" xml:space="preserve">
          <source>This option has no effect on code that uses a processor, unless the processor opts into allowing autofixes.</source>
          <target state="translated">这个选项对使用处理器的代码没有影响,除非处理器选择允许自动修复。</target>
        </trans-unit>
        <trans-unit id="930e8c0ad2927b8cda5d231d103927440d79a6ec" translate="yes" xml:space="preserve">
          <source>This option has the same effect as &lt;code&gt;--fix&lt;/code&gt; with one difference: the fixes are not saved to the file system. This makes it possible to fix code from &lt;code&gt;stdin&lt;/code&gt; (when used with the &lt;code&gt;--stdin&lt;/code&gt; flag).</source>
          <target state="translated">此选项与 &lt;code&gt;--fix&lt;/code&gt; 具有相同的效果，但有一个区别：修复未保存到文件系统。这样就可以修复来自 &lt;code&gt;stdin&lt;/code&gt; 的代码（当与 &lt;code&gt;--stdin&lt;/code&gt; 标志一起使用时）。</target>
        </trans-unit>
        <trans-unit id="9e29912dbfa3dcdc6bb50600a52b9ed9b3d16f1d" translate="yes" xml:space="preserve">
          <source>This option instructs ESLint to try to fix as many issues as possible. The fixes are made to the actual files themselves and only the remaining unfixed issues are output. Not all problems are fixable using this option, and the option does not work in these situations:</source>
          <target state="translated">此选项指示 ESLint 尽可能多地修复问题。修复的是实际文件本身,只输出剩余的未修复的问题。并非所有的问题都可以使用该选项进行修复,在这些情况下,该选项不起作用。</target>
        </trans-unit>
        <trans-unit id="a3916f03fe6ee5dfd351fc13d5bd08fbc91a2d7e" translate="yes" xml:space="preserve">
          <source>This option is an object that expects property names to be AST node types as defined by &lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree&lt;/a&gt;. The easiest way to determine the node types for &lt;code&gt;exceptions&lt;/code&gt; is to use &lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST Explorer&lt;/a&gt; with the espree parser.</source>
          <target state="translated">此选项是一个对象，期望属性名称是&lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree&lt;/a&gt;定义的AST节点类型。确定 &lt;code&gt;exceptions&lt;/code&gt; 的节点类型的最简单方法是将&lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST Explorer&lt;/a&gt;与espree解析器一起使用。</target>
        </trans-unit>
        <trans-unit id="159d5bb23b26711ee83d3678da55988d09236463" translate="yes" xml:space="preserve">
          <source>This option is helpful if you are using another program to format your code but you would still like ESLint to apply other types of fixes.</source>
          <target state="translated">如果您使用另一个程序来格式化您的代码,但您仍然希望ESLint应用其他类型的修复,这个选项很有帮助。</target>
        </trans-unit>
        <trans-unit id="989aa7bf5f70f7e2a3435a849e6284b29b04f576" translate="yes" xml:space="preserve">
          <source>This option is only applicable when used in conjunction with the &lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; option.</source>
          <target state="translated">仅当与 &lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; 选项一起使用时，此选项才适用。</target>
        </trans-unit>
        <trans-unit id="e46b21d025dfd75b6276b72215872d951e5d3ce7" translate="yes" xml:space="preserve">
          <source>This option outputs debugging information to the console. This information is useful when you're seeing a problem and having a hard time pinpointing it. The ESLint team may ask for this debugging information to help solve bugs.</source>
          <target state="translated">该选项将调试信息输出到控制台。当你看到一个问题,但很难确定它的位置时,这些信息很有用。ESLint 团队可能会要求提供这些调试信息来帮助解决错误。</target>
        </trans-unit>
        <trans-unit id="85f6c4676d557f8e8848d9f14da2b55b5cf4fe52" translate="yes" xml:space="preserve">
          <source>This option outputs information about the execution environment, including the version of Node, npm, and local and global installations of ESLint. The ESLint team may ask for this information to help solve bugs.</source>
          <target state="translated">这个选项输出有关执行环境的信息,包括Node、npm的版本,以及ESLint的本地和全局安装情况。ESLint团队可能会要求这些信息来帮助解决错误。</target>
        </trans-unit>
        <trans-unit id="79b6e22672dda2878136d9153ec178619788c515" translate="yes" xml:space="preserve">
          <source>This option outputs the configuration to be used for the file passed. When present, no linting is performed and only config-related options are valid.</source>
          <target state="translated">这个选项输出要用于传递文件的配置。当该选项存在时,不进行脱毛,只有与配置相关的选项才有效。</target>
        </trans-unit>
        <trans-unit id="4561c938534c79e5470a90cddc468484882c9f8a" translate="yes" xml:space="preserve">
          <source>This option outputs the current ESLint version onto the console. All other options are ignored when this is present.</source>
          <target state="translated">该选项将当前的ESLint版本输出到控制台。当该选项存在时,所有其他选项都被忽略。</target>
        </trans-unit>
        <trans-unit id="65771294e9a528c9fae00635bda7f17cf756ffd2" translate="yes" xml:space="preserve">
          <source>This option outputs the help menu, displaying all of the available options. All other options are ignored when this is present.</source>
          <target state="translated">此选项输出帮助菜单,显示所有可用的选项。当有此选项时,所有其他选项都会被忽略。</target>
        </trans-unit>
        <trans-unit id="014a955006c294dba1206349cb62b15f2fa55f4b" translate="yes" xml:space="preserve">
          <source>This option prevents errors when a quoted glob pattern or &lt;code&gt;--ext&lt;/code&gt; is unmatched. This will not prevent errors when your shell can't match a glob.</source>
          <target state="translated">当引用的glob模式或 &lt;code&gt;--ext&lt;/code&gt; 不匹配时，此选项可防止错误。当您的外壳无法匹配全局时，这将无法避免错误。</target>
        </trans-unit>
        <trans-unit id="cf662cff85e17bdc6570d9489d7e4f778a8da7a6" translate="yes" xml:space="preserve">
          <source>This option prevents inline comments like &lt;code&gt;/*eslint-disable*/&lt;/code&gt; or &lt;code&gt;/*global foo*/&lt;/code&gt; from having any effect. This allows you to set an ESLint config without files modifying it. All inline config comments are ignored, e.g.:</source>
          <target state="translated">此选项可防止 &lt;code&gt;/*eslint-disable*/&lt;/code&gt; 或 &lt;code&gt;/*global foo*/&lt;/code&gt; 之类的内联注释无效。这使您可以设置ESLint配置，而无需文件对其进行修改。所有内联配置注释将被忽略，例如：</target>
        </trans-unit>
        <trans-unit id="09d5ab8aec2ed9eac65dc2e722437afabedfeeda" translate="yes" xml:space="preserve">
          <source>This option specifies a plugin to load. You can omit the prefix &lt;code&gt;eslint-plugin-&lt;/code&gt; from the plugin name.</source>
          <target state="translated">此选项指定要加载的插件。您可以从插件名称中省略前缀 &lt;code&gt;eslint-plugin-&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecc4f96fd72856887578c22e2739205f34b01a7f" translate="yes" xml:space="preserve">
          <source>This option specifies rules to be used. These rules will be merged with any rules specified with configuration files. (You can use &lt;code&gt;--no-eslintrc&lt;/code&gt; to change that behavior.) To define multiple rules, separate them using commas, or use the option multiple times. The &lt;a href=&quot;https://github.com/gkz/levn#levn--&quot;&gt;levn&lt;/a&gt; format is used for specifying the rules.</source>
          <target state="translated">此选项指定要使用的规则。这些规则将与配置文件指定的任何规则合并。（您可以使用 &lt;code&gt;--no-eslintrc&lt;/code&gt; 更改该行为。）要定义多个规则，请使用逗号将它们分开，或多次使用该选项。该&lt;a href=&quot;https://github.com/gkz/levn#levn--&quot;&gt;平LevN&lt;/a&gt;格式被用于指定的规则。</target>
        </trans-unit>
        <trans-unit id="05912c8c31018cfdeb17e60450fe0d50675682cf" translate="yes" xml:space="preserve">
          <source>This option specifies the output format for the console. Possible formats are:</source>
          <target state="translated">这个选项指定了控制台的输出格式。可能的格式有:</target>
        </trans-unit>
        <trans-unit id="38e0c8b514c59731527607b405cb80b1143de6b5" translate="yes" xml:space="preserve">
          <source>This option tells ESLint to read and lint source code from STDIN instead of from files. You can use this to pipe code to ESLint.</source>
          <target state="translated">这个选项告诉 ESLint 从 STDIN 而不是从文件中读取和打印源代码。你可以用它来管代码到 ESLint。</target>
        </trans-unit>
        <trans-unit id="eedfdca0c59f3541f1d00d88f1dc3ea700e5c34e" translate="yes" xml:space="preserve">
          <source>This option throws an error when code is piped to ESLint.</source>
          <target state="translated">当代码被传送到ESLint时,这个选项会产生一个错误。</target>
        </trans-unit>
        <trans-unit id="cc2ef91e90fb16bf6596a58b63c2929f9ada53cb" translate="yes" xml:space="preserve">
          <source>This option will start config initialization wizard. It's designed to help new users quickly create .eslintrc file by answering a few questions, choosing a popular style guide, or inspecting your source files and attempting to automatically generate a suitable configuration.</source>
          <target state="translated">这个选项将启动配置初始化向导。它的目的是帮助新用户通过回答几个问题,选择一个流行的样式指南,或者检查你的源文件并尝试自动生成一个合适的配置来快速创建.eslintrc文件。</target>
        </trans-unit>
        <trans-unit id="3538e1fc4e1c6f22a20277c44b5ede4d53eb3ec8" translate="yes" xml:space="preserve">
          <source>This produces a different outcome than defining &lt;code&gt;var x = undefined&lt;/code&gt; in the loop, as &lt;code&gt;x&lt;/code&gt; is no longer reset to &lt;code&gt;undefined&lt;/code&gt; each time through the loop.</source>
          <target state="translated">与在循环中定义 &lt;code&gt;var x = undefined&lt;/code&gt; 相比，这产生了不同的结果，因为在每次循环中 &lt;code&gt;x&lt;/code&gt; 不再重置为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24feca745e6bc0163194940d4e596f152f9004dc" translate="yes" xml:space="preserve">
          <source>This rule &lt;em&gt;does not&lt;/em&gt; report any of the following less obvious approaches to modify the prototype of builtin objects:</source>
          <target state="translated">该规则&lt;em&gt;未&lt;/em&gt;报告以下任何不太明显的方法来修改内置对象的原型：</target>
        </trans-unit>
        <trans-unit id="6e2c9a67c2f55b28f4688bb17e111a3bc3326b22" translate="yes" xml:space="preserve">
          <source>This rule accepts &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; string as an option. &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; is the same as &lt;code&gt;{ &quot;functions&quot;: false, &quot;classes&quot;: true }&lt;/code&gt;.</source>
          <target state="translated">此规则接受 &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; 字符串作为选项。 &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; 与 &lt;code&gt;{ &quot;functions&quot;: false, &quot;classes&quot;: true }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d75185fcdd7fbc883b44ec2081157a43a2a98b9" translate="yes" xml:space="preserve">
          <source>This rule accepts &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; string as an option. &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; is the same as &lt;code&gt;{ &quot;functions&quot;: false, &quot;classes&quot;: true, &quot;variables&quot;: true }&lt;/code&gt;.</source>
          <target state="translated">此规则接受 &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; 字符串作为选项。 &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; 与 &lt;code&gt;{ &quot;functions&quot;: false, &quot;classes&quot;: true, &quot;variables&quot;: true }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06fc11c1fc9b22860393f1a9540cdc85723d2901" translate="yes" xml:space="preserve">
          <source>This rule accepts a configuration object with two options:</source>
          <target state="translated">该规则接受一个有两个选项的配置对象。</target>
        </trans-unit>
        <trans-unit id="b8239df1c5225b6270e03ba8dacfb109fb9d7ed5" translate="yes" xml:space="preserve">
          <source>This rule accepts a single options argument with the following defaults:</source>
          <target state="translated">这条规则接受一个选项参数,默认值如下。</target>
        </trans-unit>
        <trans-unit id="28da8e87fba0048902246ac61ce6db8b783253e1" translate="yes" xml:space="preserve">
          <source>This rule accepts a single options argument:</source>
          <target state="translated">本规则接受一个单一的选项参数。</target>
        </trans-unit>
        <trans-unit id="036f5a811a913e4a7dcd75bca8c0f804ba9473c6" translate="yes" xml:space="preserve">
          <source>This rule accepts a string option:</source>
          <target state="translated">该规则接受一个字符串选项。</target>
        </trans-unit>
        <trans-unit id="9343f1b69e9de70215bc3d173faca7334f9fc04a" translate="yes" xml:space="preserve">
          <source>This rule accepts an &lt;code&gt;exceptions&lt;/code&gt; option, which can be used to specify a list of builtins for which extensions will be allowed.</source>
          <target state="translated">该规则接受一个 &lt;code&gt;exceptions&lt;/code&gt; 选项，该选项可用于指定允许扩展的内建列表。</target>
        </trans-unit>
        <trans-unit id="2c4f097e6d73193e66a7d59e690145b7eda43865" translate="yes" xml:space="preserve">
          <source>This rule accepts an &lt;code&gt;exceptions&lt;/code&gt; option, which can be used to specify a list of builtins for which reassignments will be allowed:</source>
          <target state="translated">该规则接受一个 &lt;code&gt;exceptions&lt;/code&gt; 选项，该选项可用于指定允许重新分配的内置列表：</target>
        </trans-unit>
        <trans-unit id="5c4d59be86b758fee018aea0cff47e0cb013368c" translate="yes" xml:space="preserve">
          <source>This rule accepts an object with its properties as</source>
          <target state="translated">该规则接受一个对象,其属性为</target>
        </trans-unit>
        <trans-unit id="2b8ef0c60ad3557c3f770d7f127c29c889a75bc2" translate="yes" xml:space="preserve">
          <source>This rule aims to bring consistency to variable initializations and declarations.</source>
          <target state="translated">这条规则旨在使变量的初始化和声明保持一致。</target>
        </trans-unit>
        <trans-unit id="fdf2ca3bdb84cdf7771de92d50733bd97f5e3a66" translate="yes" xml:space="preserve">
          <source>This rule aims to create clearer code by disallowing the bad practice of creating a label that shares a name with a variable that is in scope.</source>
          <target state="translated">这条规则旨在创建更清晰的代码,不允许创建一个与范围内的变量共享名称的标签。</target>
        </trans-unit>
        <trans-unit id="082b8455e1ec0b9e8221bb19258d9bf25d7fc205" translate="yes" xml:space="preserve">
          <source>This rule aims to disallow async Promise executor functions.</source>
          <target state="translated">该规则旨在禁止异步Promise执行器函数。</target>
        </trans-unit>
        <trans-unit id="1ab33d4820af7bc07046f46739d6891755a40cd3" translate="yes" xml:space="preserve">
          <source>This rule aims to disallow multiple whitespace around logical expressions, conditional expressions, declarations, array elements, object properties, sequences and function parameters.</source>
          <target state="translated">这条规则旨在不允许在逻辑表达式、条件表达式、声明、数组元素、对象属性、序列和函数参数周围出现多个空格。</target>
        </trans-unit>
        <trans-unit id="5bdbb4fae36aec73469b0df2d2cfda42e720c8a1" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate assignments from &lt;code&gt;return&lt;/code&gt; statements. As such, it will warn whenever an assignment is found as part of &lt;code&gt;return&lt;/code&gt;.</source>
          <target state="translated">该规则旨在消除 &lt;code&gt;return&lt;/code&gt; 语句中的赋值。因此，只要找到作为 &lt;code&gt;return&lt;/code&gt; 一部分的赋值，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="60c130e79350c186199b9fd520e4228357e4b0c5" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate implied &lt;code&gt;eval()&lt;/code&gt; through the use of &lt;code&gt;setTimeout()&lt;/code&gt;, &lt;code&gt;setInterval()&lt;/code&gt; or &lt;code&gt;execScript()&lt;/code&gt;. As such, it will warn when either function is used with a string as the first argument.</source>
          <target state="translated">该规则旨在通过使用 &lt;code&gt;setTimeout()&lt;/code&gt; ， &lt;code&gt;setInterval()&lt;/code&gt; 或 &lt;code&gt;execScript()&lt;/code&gt; 消除隐含的 &lt;code&gt;eval()&lt;/code&gt; （）。这样，当将任一函数与字符串作为第一个参数一起使用时，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="ee8e3a04c82e7ee5427ed1829b4dacbec3fd6b59" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate shadowed variable declarations.</source>
          <target state="translated">该规则旨在消除影子变量声明。</target>
        </trans-unit>
        <trans-unit id="48d4ea04200e208a668599befd84b34f6eb5dfe7" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate the use of &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, and &lt;code&gt;Boolean&lt;/code&gt; with the &lt;code&gt;new&lt;/code&gt; operator. As such, it warns whenever it sees &lt;code&gt;new String&lt;/code&gt;, &lt;code&gt;new Number&lt;/code&gt;, or &lt;code&gt;new Boolean&lt;/code&gt;.</source>
          <target state="translated">该规则旨在消除在 &lt;code&gt;new&lt;/code&gt; 运算符中使用 &lt;code&gt;String&lt;/code&gt; ， &lt;code&gt;Number&lt;/code&gt; 和 &lt;code&gt;Boolean&lt;/code&gt; 。这样，只要看到 &lt;code&gt;new String&lt;/code&gt; ， &lt;code&gt;new Number&lt;/code&gt; 或 &lt;code&gt;new Boolean&lt;/code&gt; ，它就会发出警告。</target>
        </trans-unit>
        <trans-unit id="1ceaffe704a185e71600f586cd092634bbdc428f" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate the use of &lt;code&gt;undefined&lt;/code&gt;, and as such, generates a warning whenever it is used.</source>
          <target state="translated">此规则旨在消除对 &lt;code&gt;undefined&lt;/code&gt; 的使用，因此，每当使用undefined时都会生成警告。</target>
        </trans-unit>
        <trans-unit id="4a1e90a159c38bcad9dbea6c4a3426a3c8fe82df" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate the use of labeled statements in JavaScript. It will warn whenever a labeled statement is encountered and whenever &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; are used with a label.</source>
          <target state="translated">该规则旨在消除在JavaScript中使用带标签的语句。每当遇到带有标签的语句以及将 &lt;code&gt;break&lt;/code&gt; 或 &lt;code&gt;continue&lt;/code&gt; 与标签一起使用时，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="fbf95a07c8896cae54c5b32fab00ac676fef5a06" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate unnecessary and potentially confusing blocks at the top level of a script or within other blocks.</source>
          <target state="translated">这条规则的目的是消除脚本顶层或其他区块中不必要的和可能造成混乱的区块。</target>
        </trans-unit>
        <trans-unit id="7428d8b9c63ecd07f513e4d208a88842d2ea4291" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate unused expressions which have no effect on the state of the program.</source>
          <target state="translated">这条规则旨在消除对程序状态没有影响的未使用的表达式。</target>
        </trans-unit>
        <trans-unit id="f4592be8513a34c0ee9c31116baf895be639d00d" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate use of the &lt;code&gt;new require&lt;/code&gt; expression.</source>
          <target state="translated">该规则旨在消除对 &lt;code&gt;new require&lt;/code&gt; 表达式的使用。</target>
        </trans-unit>
        <trans-unit id="5c45676927d70f598783253e0bea435ad66234ed" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate use of void operator.</source>
          <target state="translated">这条规则旨在消除无效操作符的使用。</target>
        </trans-unit>
        <trans-unit id="48d1f57364c5256d0ae461b9199819e3a8b9a78b" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate variable declarations that initialize to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">该规则旨在消除初始化为 &lt;code&gt;undefined&lt;/code&gt; 的变量声明。</target>
        </trans-unit>
        <trans-unit id="fbcce07eac2aa6192b1ddc51290a27b70c2f04eb" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce a consistent location for an arrow function containing an implicit return.</source>
          <target state="translated">这条规则旨在为包含隐式返回的箭头函数执行一个一致的位置。</target>
        </trans-unit>
        <trans-unit id="eb1977fa84b455feda9d85eeaa544101fd9f3fbf" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce a consistent location for single-line statements.</source>
          <target state="translated">这条规则旨在对单行报表实施一致的定位。</target>
        </trans-unit>
        <trans-unit id="b867f1fa85c3f2e39f5c14f4c8ac390156b6d095" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce a consistent spacing after function names. It takes one argument. If it is &lt;code&gt;&quot;always&quot;&lt;/code&gt; then all function names must be followed by at least one space. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then there should be no spaces between the name and the parameter list. The default is &lt;code&gt;&quot;never&quot;&lt;/code&gt;.</source>
          <target state="translated">该规则旨在在函数名称后强制保持一致的间距。这需要一个论点。如果它是 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 则所有函数名都必须至少跟一个空格。如果 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则名称和参数列表之间不应有空格。默认值为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1a6efa92543cd5aa3a3a596f4883486404ece7e" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce a consistent style of comments across your codebase, specifically by either requiring or disallowing a capitalized letter as the first word character in a comment. This rule will not issue warnings when non-cased letters are used.</source>
          <target state="translated">这条规则的目的是在整个代码库中执行一致的注释风格,特别是通过要求或不允许将大写字母作为注释中的第一个单词字符。当使用非大写字母时,本规则不会发出警告。</target>
        </trans-unit>
        <trans-unit id="e791249ab8dca492c1f2141589f3eb6bc72cf3c8" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce a particular style for multiline comments.</source>
          <target state="translated">这条规则旨在为多行注释执行一种特殊的风格。</target>
        </trans-unit>
        <trans-unit id="6262c51d84ae60e80179b10f10d0c494db5871ba" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce consistent spacing before function parentheses and as such, will warn whenever whitespace doesn't match the preferences specified.</source>
          <target state="translated">这条规则的目的是在函数括号前执行一致的间距,因此,每当whitespace不符合指定的偏好时,就会发出警告。</target>
        </trans-unit>
        <trans-unit id="4b6f5f82c41166d5305feac3b424a64f24ec2de7" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce consistent spacing between rest and spread operators and their expressions. The rule also supports object rest and spread properties in ES2018:</source>
          <target state="translated">该规则旨在强制执行休止符和展开符及其表达式之间的一致间距。该规则还支持ES2018中的对象休止符和展开属性。</target>
        </trans-unit>
        <trans-unit id="4f731649e3b7f7e5efcc5565b59ac49bf339b9bd" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce consistent style of conditions which compare a variable to a literal value.</source>
          <target state="translated">这条规则的目的是执行一致的条件风格,将一个变量与一个字面值进行比较。</target>
        </trans-unit>
        <trans-unit id="2b6b2668cbac3cad09e1c9734a8a1441d9917508" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce newline consistency in member expressions. This rule prevents the use of mixed newlines around the dot in a member expression.</source>
          <target state="translated">这条规则旨在加强成员表达式中换行的一致性。这条规则防止在成员表达式中的点周围使用混合换行。</target>
        </trans-unit>
        <trans-unit id="2cffeea6a2a1e0f1c63e68ad1fed69c744d4cd42" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce spacing around a semicolon. This rule prevents the use of spaces before a semicolon in expressions.</source>
          <target state="translated">这条规则旨在强制执行分号周围的间距。这条规则防止在表达式中分号前使用空格。</target>
        </trans-unit>
        <trans-unit id="b22c8565bc9c79a0eb4dd976c541072f09cd27cb" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce spacing around the &lt;code&gt;*&lt;/code&gt; of generator functions.</source>
          <target state="translated">该规则旨在强制生成器函数 &lt;code&gt;*&lt;/code&gt; 周围的间距。</target>
        </trans-unit>
        <trans-unit id="c6c8cae0c3746b9ee1294846ab4deb169a03fb7e" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce the use of &lt;code&gt;u&lt;/code&gt; flag on regular expressions.</source>
          <target state="translated">该规则旨在强制在正则表达式上使用 &lt;code&gt;u&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="b724413bbc7774cb9e7213cadf0d9d98737efe2e" translate="yes" xml:space="preserve">
          <source>This rule aims to ensure that Promises are only rejected with &lt;code&gt;Error&lt;/code&gt; objects.</source>
          <target state="translated">该规则旨在确保Promises仅被 &lt;code&gt;Error&lt;/code&gt; 对象拒绝。</target>
        </trans-unit>
        <trans-unit id="2d2be7aea466d03ae53aad72ce5fdd33c3645ba7" translate="yes" xml:space="preserve">
          <source>This rule aims to flag any empty patterns in destructured objects and arrays, and as such, will report a problem whenever one is encountered.</source>
          <target state="translated">这条规则的目的是标记解构对象和数组中的任何空模式,因此,只要遇到问题,就会报告。</target>
        </trans-unit>
        <trans-unit id="a592c858175b10142eb43e999ebc64a50dcfe373" translate="yes" xml:space="preserve">
          <source>This rule aims to flag the concatenation of 2 literals when they could be combined into a single literal. Literals can be strings or template literals.</source>
          <target state="translated">这条规则的目的是,当2个字元可以组合成一个字元时,标记出它们的连接。字符可以是字符串或模板字符。</target>
        </trans-unit>
        <trans-unit id="214fb7b3fd0b5bc6164a95a24b81675437853823" translate="yes" xml:space="preserve">
          <source>This rule aims to flag usage of &lt;code&gt;this&lt;/code&gt; keywords outside of classes or class-like objects.</source>
          <target state="translated">该规则旨在标记在类或类对象之外的 &lt;code&gt;this&lt;/code&gt; 关键字的用法。</target>
        </trans-unit>
        <trans-unit id="24c3e70e3fae7f58f9b980f59921f130b41ed78b" translate="yes" xml:space="preserve">
          <source>This rule aims to keep all variable declarations in the leading series of statements. Allowing multiple declarations helps promote maintainability and is thus allowed.</source>
          <target state="translated">这条规则的目的是让所有的变量声明都在语句的前导系列中。允许多声明有助于促进可维护性,因此允许多声明。</target>
        </trans-unit>
        <trans-unit id="71e5f7302fd24c06c3efb5405b78c57959dcce5f" translate="yes" xml:space="preserve">
          <source>This rule aims to maintain consistency around the spacing between template tag functions and their template literals.</source>
          <target state="translated">这条规则旨在保持模板标签函数与其模板字元之间间距的一致性。</target>
        </trans-unit>
        <trans-unit id="150c5f9e13764b9a65e880ca75d609ec9ecae313" translate="yes" xml:space="preserve">
          <source>This rule aims to maintain consistency around the spacing inside of square brackets, either by disallowing spaces inside of brackets between the brackets and other tokens or enforcing spaces. Brackets that are separated from the adjacent value by a new line are excepted from this rule, as this is a common pattern. Object literals that are used as the first or last element in an array are also ignored.</source>
          <target state="translated">这条规则的目的是保持方括号内间距的一致性,要么不允许括号内与其他标记之间有空格,要么强制要求有空格。与相邻值之间用新行隔开的方括号不适用本规则,因为这是一种常见的模式。作为数组中第一个或最后一个元素的对象字元也会被忽略。</target>
        </trans-unit>
        <trans-unit id="36eab5f56c34b2954c3d688b8b69b5773b3b090b" translate="yes" xml:space="preserve">
          <source>This rule aims to maintain consistency around the spacing inside of template literals.</source>
          <target state="translated">这条规则的目的是保持模板字元内部间距的一致性。</target>
        </trans-unit>
        <trans-unit id="30783eb72cfbe7fb69dfa6cec962580e1d72bd33" translate="yes" xml:space="preserve">
          <source>This rule aims to prevent a likely common performance hazard due to a lack of understanding of the semantics of &lt;code&gt;async function&lt;/code&gt;.</source>
          <target state="translated">该规则旨在防止由于对 &lt;code&gt;async function&lt;/code&gt; 的语义缺乏了解而可能造成的常见性能危害。</target>
        </trans-unit>
        <trans-unit id="5e1ef57685846ed4d51c42c899ec1fd92fafeff6" translate="yes" xml:space="preserve">
          <source>This rule aims to prevent access to uninitialized lexical bindings as well as accessing hoisted functions across case clauses.</source>
          <target state="translated">这条规则的目的是防止访问未初始化的词汇绑定,以及跨大小写子句访问被挂起的函数。</target>
        </trans-unit>
        <trans-unit id="6e5eb8f772bf314b89f7928efd7b90f261f03737" translate="yes" xml:space="preserve">
          <source>This rule aims to prevent string concatenation of directory paths in Node.js</source>
          <target state="translated">这条规则的目的是防止Node.js中的目录路径的字符串连接</target>
        </trans-unit>
        <trans-unit id="cf1c4fed65963f6d5de090064570d7556a966719" translate="yes" xml:space="preserve">
          <source>This rule aims to prevent the use of &lt;code&gt;process.exit()&lt;/code&gt; in Node.js JavaScript. As such, it warns whenever &lt;code&gt;process.exit()&lt;/code&gt; is found in code.</source>
          <target state="translated">该规则旨在防止在Node.js JavaScript中使用 &lt;code&gt;process.exit()&lt;/code&gt; 。因此，只要在代码中找到 &lt;code&gt;process.exit()&lt;/code&gt; ，它都会发出警告。</target>
        </trans-unit>
        <trans-unit id="409f6777783015e5d446da7aabb24274cd2af6bc" translate="yes" xml:space="preserve">
          <source>This rule aims to prevent unintended behavior caused by modification or reassignment of function parameters.</source>
          <target state="translated">该规则旨在防止因修改或重新分配函数参数而引起的意外行为。</target>
        </trans-unit>
        <trans-unit id="e3d17d4fab4db7dafa21d53edc13a12c25850ade" translate="yes" xml:space="preserve">
          <source>This rule aims to reduce the scrolling required when reading through your code. It will warn when the maximum amount of empty lines has been exceeded.</source>
          <target state="translated">这个规则的目的是为了减少阅读代码时所需的滚动。当超过最大空行数时,它将发出警告。</target>
        </trans-unit>
        <trans-unit id="1f6fbb75638c174bd1e172892eb514a0a34a8d3f" translate="yes" xml:space="preserve">
          <source>This rule aims to reduce the usage of variables outside of their binding context and emulate traditional block scope from other languages. This is to help newcomers to the language avoid difficult bugs with variable hoisting.</source>
          <target state="translated">这条规则旨在减少变量在其绑定上下文之外的使用,并模仿其他语言的传统块范围。这是为了帮助语言新手避免变量提升的困难bug。</target>
        </trans-unit>
        <trans-unit id="b539890ebe3260afc1fcb09ef9f086c07d001574" translate="yes" xml:space="preserve">
          <source>This rule aims to report assignments to variables or properties where all of the following are true:</source>
          <target state="translated">这条规则的目的是报告下列所有情况下对变量或属性的赋值。</target>
        </trans-unit>
        <trans-unit id="93abe223f86c93c950b6940428eb85c499aebf5e" translate="yes" xml:space="preserve">
          <source>This rule aims to report redundant &lt;code&gt;return&lt;/code&gt; statements.</source>
          <target state="translated">该规则旨在报告多余的 &lt;code&gt;return&lt;/code&gt; 单。</target>
        </trans-unit>
        <trans-unit id="d867bee8c0ef9d1755baf36ec331ce21d92cfc42" translate="yes" xml:space="preserve">
          <source>This rule aims to require &lt;code&gt;default&lt;/code&gt; case in &lt;code&gt;switch&lt;/code&gt; statements. You may optionally include a &lt;code&gt;// no default&lt;/code&gt; after the last &lt;code&gt;case&lt;/code&gt; if there is no &lt;code&gt;default&lt;/code&gt; case. The comment may be in any desired case, such as &lt;code&gt;// No Default&lt;/code&gt;.</source>
          <target state="translated">该规则旨在要求 &lt;code&gt;switch&lt;/code&gt; 语句中使用 &lt;code&gt;default&lt;/code&gt; 大小写。如果 &lt;code&gt;// no default&lt;/code&gt; &lt;code&gt;case&lt;/code&gt; 则可以选择在最后一个情况之后添加//无默认 &lt;code&gt;default&lt;/code&gt; 。注释可以是任何所需的情况，例如 &lt;code&gt;// No Default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d516ffc4d6d0f8cdf67c20a1d6d200eecd43071" translate="yes" xml:space="preserve">
          <source>This rule aims to warn when a regular string contains what looks like a template literal placeholder. It will warn when it finds a string containing the template literal placeholder (&lt;code&gt;${something}&lt;/code&gt;) that uses either &lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt; for the quotes.</source>
          <target state="translated">该规则旨在警告常规字符串何时包含看起来像模板文字占位符的字符串。当找到包含使用 &lt;code&gt;&quot;&lt;/code&gt; 或 &lt;code&gt;'&lt;/code&gt; 作为引号的模板文字占位符（ &lt;code&gt;${something}&lt;/code&gt; ）的字符串时，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="d19a577c19b7a34026fabd0b591e6e9b824b7cea" translate="yes" xml:space="preserve">
          <source>This rule allows for more fine-grained control with the following options:</source>
          <target state="translated">该规则允许通过以下选项进行更精细的控制。</target>
        </trans-unit>
        <trans-unit id="f0c570d2beef2d1b384161fc0c0365ad5078f12d" translate="yes" xml:space="preserve">
          <source>This rule allows you to specify global variable names that you don't want to use in your application.</source>
          <target state="translated">这个规则允许你指定不想在应用程序中使用的全局变量名。</target>
        </trans-unit>
        <trans-unit id="1581ab10c7b99d0115b10189be184f7f111ada69" translate="yes" xml:space="preserve">
          <source>This rule allows you to specify imports that you don't want to use in your application.</source>
          <target state="translated">这条规则允许你指定你不想在你的应用程序中使用的导入。</target>
        </trans-unit>
        <trans-unit id="223ddf28af7da49a479aa6ebab902a45d421b7b1" translate="yes" xml:space="preserve">
          <source>This rule allows you to specify modules that you don&amp;rsquo;t want to use in your application.</source>
          <target state="translated">此规则允许您指定不想在应用程序中使用的模块。</target>
        </trans-unit>
        <trans-unit id="4008a4cdc8168bfe31edc5e762d717e7f1530720" translate="yes" xml:space="preserve">
          <source>This rule also accepts an additional &lt;code&gt;exceptions&lt;/code&gt; object:</source>
          <target state="translated">此规则还接受其他 &lt;code&gt;exceptions&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="7455ce82eafb5ac293e4c9c4e5d678aaa1247cb6" translate="yes" xml:space="preserve">
          <source>This rule also disallows redeclarations of read-only global variables and assigments to read-only global variables.</source>
          <target state="translated">这条规则也不允许重新声明只读全局变量和分配给只读全局变量。</target>
        </trans-unit>
        <trans-unit id="c1110648e756cad3c8745838275d01ef12a73315" translate="yes" xml:space="preserve">
          <source>This rule also disallows redeclarations of read-only global variables and assignments to read-only global variables.</source>
          <target state="translated">这条规则也不允许重新声明只读全局变量和对只读全局变量的赋值。</target>
        </trans-unit>
        <trans-unit id="8debc519e6ab3a215045f322d1aa6bee8909f42e" translate="yes" xml:space="preserve">
          <source>This rule also disallows the use of the &lt;code&gt;RegExp&lt;/code&gt; constructor function with template literals without expressions and &lt;code&gt;String.raw&lt;/code&gt; tagged template literals without expressions.</source>
          <target state="translated">此规则还不允许将 &lt;code&gt;RegExp&lt;/code&gt; 构造函数与带有表达式的模板文字和带有表达式的 &lt;code&gt;String.raw&lt;/code&gt; 标记模板文字一起使用。</target>
        </trans-unit>
        <trans-unit id="c4110644eef0e8575815d6b80c2512c44f922c3c" translate="yes" xml:space="preserve">
          <source>This rule also disallows using these objects as constructors with the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">该规则还不允许将这些对象与 &lt;code&gt;new&lt;/code&gt; 运算符一起用作构造函数。</target>
        </trans-unit>
        <trans-unit id="ff184a54582c14a5cd4c91bd6524497a01429bba" translate="yes" xml:space="preserve">
          <source>This rule also does not disallow redeclarations of global variables. See &lt;a href=&quot;no-redeclare&quot;&gt;no-redeclare&lt;/a&gt; if you also want to disallow those redeclarations.</source>
          <target state="translated">此规则也不允许重新声明全局变量。如果您还想禁止这些重新声明，请参见&lt;a href=&quot;no-redeclare&quot;&gt;no-&lt;/a&gt; redeclare。</target>
        </trans-unit>
        <trans-unit id="3960514471b8fdf632ccf99556046a71676b91a2" translate="yes" xml:space="preserve">
          <source>This rule always checks object literals and property descriptors. By default, it also checks class declarations and class expressions.</source>
          <target state="translated">这条规则总是检查对象字面意义和属性描述符,默认情况下,它还检查类声明和类表达式。默认情况下,它也会检查类声明和类表达式。</target>
        </trans-unit>
        <trans-unit id="379f7d883e132f615627eab94e7212c5b2fb0fc7" translate="yes" xml:space="preserve">
          <source>This rule always ignores extra parentheses around the following:</source>
          <target state="translated">这条规则总是忽略下面的额外括号。</target>
        </trans-unit>
        <trans-unit id="5ecf4c66ad5afb41dab6fa8f725a959d53498d0b" translate="yes" xml:space="preserve">
          <source>This rule analyzes code statically to check whether or not the &lt;code&gt;this&lt;/code&gt; argument is changed. So, if the &lt;code&gt;this&lt;/code&gt; argument is computed in a dynamic expression, this rule cannot detect a violation.</source>
          <target state="translated">该规则静态分析代码以检查 &lt;code&gt;this&lt;/code&gt; 参数是否被更改。因此，如果在动态表达式中计算 &lt;code&gt;this&lt;/code&gt; 参数，则该规则无法检测到违规。</target>
        </trans-unit>
        <trans-unit id="6772ffa8e5405f66988ea470070e631ecb94f272" translate="yes" xml:space="preserve">
          <source>This rule applies &lt;strong&gt;only&lt;/strong&gt; in strict mode. With &lt;code&gt;&quot;parserOptions&quot;: { &quot;sourceType&quot;: &quot;module&quot; }&lt;/code&gt; in the ESLint configuration, your code is in strict mode even without a &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; directive.</source>
          <target state="translated">此规则适用于&lt;strong&gt;仅&lt;/strong&gt;在严格模式。在ESLint配置中使用 &lt;code&gt;&quot;parserOptions&quot;: { &quot;sourceType&quot;: &quot;module&quot; }&lt;/code&gt; ，即使没有 &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; 指令，您的代码也处于严格模式。</target>
        </trans-unit>
        <trans-unit id="42e1226e4e68a477056e8578613cfc2481a8ae2b" translate="yes" xml:space="preserve">
          <source>This rule applies equally to all property specifications, regardless of notation, including:</source>
          <target state="translated">这一规则同样适用于所有财产规格,无论其符号如何,包括:</target>
        </trans-unit>
        <trans-unit id="fb5fdaa6a9ac15d93f4b4688421cd1224351eea5" translate="yes" xml:space="preserve">
          <source>This rule can also detect some cases where the conditions are not identical, but the branch can never execute due to the logic of &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operators.</source>
          <target state="translated">此规则还可以检测某些条件不相同的情况，但是由于 &lt;code&gt;||&lt;/code&gt; 的逻辑，该分支永远无法执行。和 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="1dd21d49f84a0e870fa7e592ae681de4ba00ad77" translate="yes" xml:space="preserve">
          <source>This rule can also take a 2nd option, an object with any of the following keys: &lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; and &lt;code&gt;&quot;markers&quot;&lt;/code&gt;.</source>
          <target state="translated">该规则还可以采用第二个选项，即具有以下任意键的对象： &lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;markers&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47163ca8b37e69af3ca7c7a8ac2331145d34d560" translate="yes" xml:space="preserve">
          <source>This rule can be also configured to fail when function parameters are modified. Side effects on parameters can cause counter-intuitive execution flow and make errors difficult to track down.</source>
          <target state="translated">该规则还可以配置为当函数参数被修改时失效。对参数的副作用会造成反直觉的执行流程,使错误难以追踪。</target>
        </trans-unit>
        <trans-unit id="6917cbcfe667e9bff37ed7e0213d14fa5f09907e" translate="yes" xml:space="preserve">
          <source>This rule can be disabled if you do not care about the grammatical style of comments in your codebase.</source>
          <target state="translated">如果你不关心代码库中注释的语法风格,这个规则可以被禁用。</target>
        </trans-unit>
        <trans-unit id="c86802043e5a42d0c87e5c400fd976b6b831fe79" translate="yes" xml:space="preserve">
          <source>This rule can enforce or disallow parentheses when invoking a constructor with no arguments using the &lt;code&gt;new&lt;/code&gt; keyword.</source>
          <target state="translated">使用 &lt;code&gt;new&lt;/code&gt; 关键字调用不带参数的构造函数时，此规则可以强制或禁止使用括号。</target>
        </trans-unit>
        <trans-unit id="fab043e44497127c421694342c9535fb8be7bb47" translate="yes" xml:space="preserve">
          <source>This rule can enforce or disallow the use of braces around arrow function body.</source>
          <target state="translated">该规则可以强制执行或不允许使用箭头功能体周围的括号。</target>
        </trans-unit>
        <trans-unit id="04625714952245a68d2406a7a314170f11304da3" translate="yes" xml:space="preserve">
          <source>This rule can enforce or disallow the use of named function expressions.</source>
          <target state="translated">该规则可以强制或禁止使用命名的函数表达式。</target>
        </trans-unit>
        <trans-unit id="c5ec60f85149782200572716052f0148287ff833" translate="yes" xml:space="preserve">
          <source>This rule can force usage of spacing &lt;em&gt;within&lt;/em&gt; the curly brace pair according to style guides.</source>
          <target state="translated">这条规则可以强制间距的使用&lt;em&gt;范围内&lt;/em&gt;，根据风格指南的大括号对。</target>
        </trans-unit>
        <trans-unit id="5044b90d330e4e48276fdf6f62933ee1db236245" translate="yes" xml:space="preserve">
          <source>This rule can have an object literal option whose two properties have &lt;code&gt;false&lt;/code&gt; values by default.</source>
          <target state="translated">该规则可以具有对象文字选项，其默认情况下两个属性的 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a683a6bea35295324d7b11ea6967959e557b903b" translate="yes" xml:space="preserve">
          <source>This rule can help you locate potential ReferenceErrors resulting from misspellings of variable and parameter names, or accidental implicit globals (for example, from forgetting the &lt;code&gt;var&lt;/code&gt; keyword in a &lt;code&gt;for&lt;/code&gt; loop initializer).</source>
          <target state="translated">此规则可以帮助您查找由于变量和参数名称的拼写错误或意外的隐式全局变量（例如，由于忘记了 &lt;code&gt;for&lt;/code&gt; 循环初始化程序中的 &lt;code&gt;var&lt;/code&gt; 关键字）而导致的潜在ReferenceErrors 。</target>
        </trans-unit>
        <trans-unit id="0e588784adf09e4f19f68f57898d33838bc7a949" translate="yes" xml:space="preserve">
          <source>This rule can safely be turned off if your project does not care about enforcing a consistent comma style.</source>
          <target state="translated">如果你的项目不在乎执行一致的逗号风格,可以放心地关闭这个规则。</target>
        </trans-unit>
        <trans-unit id="319f5e934b81217bc9c29599abc76f7283906fd1" translate="yes" xml:space="preserve">
          <source>This rule can safely be turned off if your project does not care about enforcing a consistent style for spacing within function calls.</source>
          <target state="translated">如果你的项目不关心函数调用中的间距是否一致,那么可以放心地关闭这一规则。</target>
        </trans-unit>
        <trans-unit id="83ca1852fd5b5577b23f89ba764e415c41463351" translate="yes" xml:space="preserve">
          <source>This rule can take a string option:</source>
          <target state="translated">该规则可以采用字符串选项。</target>
        </trans-unit>
        <trans-unit id="8d302b0d1a764b90336232c3d99344f4fdc595cc" translate="yes" xml:space="preserve">
          <source>This rule cannot catch renaming the global object. Such as:</source>
          <target state="translated">这条规则不能抓住重命名全局对象。如:</target>
        </trans-unit>
        <trans-unit id="b042ff6c22a4f912b8710d8d89d471d2c64a9753" translate="yes" xml:space="preserve">
          <source>This rule checks &lt;code&gt;BinaryExpression&lt;/code&gt;, &lt;code&gt;LogicalExpression&lt;/code&gt; and &lt;code&gt;ConditionalExpression&lt;/code&gt;.</source>
          <target state="translated">此规则检查 &lt;code&gt;BinaryExpression&lt;/code&gt; ， &lt;code&gt;LogicalExpression&lt;/code&gt; 和 &lt;code&gt;ConditionalExpression&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="552d53bde16bdfdc088eecfad939881ac483a06e" translate="yes" xml:space="preserve">
          <source>This rule checks &lt;code&gt;this&lt;/code&gt;/&lt;code&gt;super&lt;/code&gt; keywords in constructors, then reports those that are before &lt;code&gt;super()&lt;/code&gt;.</source>
          <target state="translated">该规则检查构造函数中的 &lt;code&gt;this&lt;/code&gt; / &lt;code&gt;super&lt;/code&gt; 关键字，然后报告在 &lt;code&gt;super()&lt;/code&gt; 之前的那些关键字。</target>
        </trans-unit>
        <trans-unit id="aa2a356daedef6b25dafdb09f404f4d9d7c534d7" translate="yes" xml:space="preserve">
          <source>This rule checks all import declarations and verifies that all imports are first sorted by the used member syntax and then alphabetically by the first member or alias name.</source>
          <target state="translated">这条规则检查所有的导入声明,并验证所有的导入都是先按使用的成员语法排序,再按第一个成员或别名的字母顺序排序。</target>
        </trans-unit>
        <trans-unit id="6681e24fe3cd4462b2847bf209c235fc7c6d321d" translate="yes" xml:space="preserve">
          <source>This rule checks all property definitions of object expressions and verifies that all variables are sorted alphabetically.</source>
          <target state="translated">该规则检查对象表达式的所有属性定义,并验证所有变量是否按字母顺序排序。</target>
        </trans-unit>
        <trans-unit id="53d282e2a6aaf0156f34e994a7a84c5ab9a8a2e9" translate="yes" xml:space="preserve">
          <source>This rule checks all variable declaration blocks and verifies that all variables are sorted alphabetically. The default configuration of the rule is case-sensitive.</source>
          <target state="translated">该规则检查所有变量声明块,并验证所有变量是否按字母顺序排序。该规则的默认配置是区分大小写的。</target>
        </trans-unit>
        <trans-unit id="8a9d030c6f262c0eb05f86406da9ee712e2a4036" translate="yes" xml:space="preserve">
          <source>This rule checks callback functions of methods with the given names, &lt;em&gt;even if&lt;/em&gt; the object which has the method is &lt;em&gt;not&lt;/em&gt; an array.</source>
          <target state="translated">该规则检查具有给定名称的方法的回调函数，&lt;em&gt;即使&lt;/em&gt;具有该方法的对象&lt;em&gt;不是&lt;/em&gt;数组也是如此。</target>
        </trans-unit>
        <trans-unit id="811ae4bbbf023aea470d76c49787ebc765fdeff0" translate="yes" xml:space="preserve">
          <source>This rule checks setters in:</source>
          <target state="translated">此规则检查设置者在。</target>
        </trans-unit>
        <trans-unit id="d7892d555202afc91fa47f11f40a615394d6c548" translate="yes" xml:space="preserve">
          <source>This rule checks whether or not there is a valid &lt;code&gt;super()&lt;/code&gt; call.</source>
          <target state="translated">此规则检查是否存在有效的 &lt;code&gt;super()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="54a78dbb7a9691a20f2fe781235eea5e6e80464a" translate="yes" xml:space="preserve">
          <source>This rule compares code statically to check whether or not &lt;code&gt;thisArg&lt;/code&gt; is changed. So if the code about &lt;code&gt;thisArg&lt;/code&gt; is a dynamic expression, this rule cannot judge correctly.</source>
          <target state="translated">此规则静态比较代码以检查 &lt;code&gt;thisArg&lt;/code&gt; 是否已更改。因此，如果有关 &lt;code&gt;thisArg&lt;/code&gt; 的代码是动态表达式，则此规则无法正确判断。</target>
        </trans-unit>
        <trans-unit id="d720df68abbde6371ccb336cb5b04c0b024bfcbe" translate="yes" xml:space="preserve">
          <source>This rule controls spacing around colons of &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses in &lt;code&gt;switch&lt;/code&gt; statements. This rule does the check only if the consecutive tokens exist on the same line.</source>
          <target state="translated">该规则控制 &lt;code&gt;switch&lt;/code&gt; 语句中 &lt;code&gt;case&lt;/code&gt; 和 &lt;code&gt;default&lt;/code&gt; 子句冒号的间距。仅当连续的令牌存在于同一行上时，此规则才进行检查。</target>
        </trans-unit>
        <trans-unit id="b65c5e0660507bcb1cbffa479d53cf9ef3130bb7" translate="yes" xml:space="preserve">
          <source>This rule disallow ternary operators when simpler alternatives exist.</source>
          <target state="translated">当存在更简单的替代方案时,这条规则不允许使用三元运算符。</target>
        </trans-unit>
        <trans-unit id="66c64e243d9c8b7f3d32d22b51791322b59152e1" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;Array&lt;/code&gt; constructors.</source>
          <target state="translated">该规则不允许使用 &lt;code&gt;Array&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="2d7b39e2d83b5189ce3fccae2add0fbca28323bd" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;Object&lt;/code&gt; constructors.</source>
          <target state="translated">该规则禁止 &lt;code&gt;Object&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="ba886c3768e8d461d7e6410ed45538405491259c" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;continue&lt;/code&gt; statements.</source>
          <target state="translated">该规则不允许 &lt;code&gt;continue&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="28e2d778ae331adafff9240ccbc8541573b702e3" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;debugger&lt;/code&gt; statements.</source>
          <target state="translated">该规则禁止 &lt;code&gt;debugger&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="77ecd18c853e79ca97242bc0e014a3d48e6bd0bf" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;if&lt;/code&gt; statements as the only statement in &lt;code&gt;else&lt;/code&gt; blocks.</source>
          <target state="translated">该规则不允许 &lt;code&gt;if&lt;/code&gt; 语句作为 &lt;code&gt;else&lt;/code&gt; 语句中的唯一语句。</target>
        </trans-unit>
        <trans-unit id="8b411438723201d602af01f2fac9be049875e964" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, and &lt;code&gt;continue&lt;/code&gt; statements inside &lt;code&gt;finally&lt;/code&gt; blocks. It allows indirect usages, such as in &lt;code&gt;function&lt;/code&gt; or &lt;code&gt;class&lt;/code&gt; definitions.</source>
          <target state="translated">该规则不允许在 &lt;code&gt;finally&lt;/code&gt; 块内使用 &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;throw&lt;/code&gt; ， &lt;code&gt;break&lt;/code&gt; 和 &lt;code&gt;continue&lt;/code&gt; 语句。它允许间接使用，例如在 &lt;code&gt;function&lt;/code&gt; 或 &lt;code&gt;class&lt;/code&gt; 定义中。</target>
        </trans-unit>
        <trans-unit id="aa3287e2e1ed725bd09a2a525b1226c93b3ee9a9" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;var&lt;/code&gt; and &lt;code&gt;function&lt;/code&gt; declarations at the top-level script scope. This does not apply to ES and CommonJS modules since they have a module scope.</source>
          <target state="translated">此规则不允许在顶级脚本作用域中进行 &lt;code&gt;var&lt;/code&gt; 和 &lt;code&gt;function&lt;/code&gt; 声明。这不适用于ES和CommonJS模块，因为它们具有模块范围。</target>
        </trans-unit>
        <trans-unit id="0accaadfc826cb02b40dc54ab44d8ca54d788318" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;with&lt;/code&gt; statements.</source>
          <target state="translated">该规则不允许 &lt;code&gt;with&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="d0816a4406a52dfe53dd2f26aaa6a218737e2e84" translate="yes" xml:space="preserve">
          <source>This rule disallows ambiguous assignment operators in test conditions of &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, and &lt;code&gt;do...while&lt;/code&gt; statements.</source>
          <target state="translated">在 &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; 和 &lt;code&gt;do...while&lt;/code&gt; 语句的测试条件下，该规则不允许模棱两可的赋值运算符。</target>
        </trans-unit>
        <trans-unit id="8677bdc954fa1f2eeec9ca7775cb8ed54d1de3dd" translate="yes" xml:space="preserve">
          <source>This rule disallows any function within a loop that contains unsafe references (e.g. to modified variables from the outer scope).</source>
          <target state="translated">这条规则不允许在循环中使用任何包含不安全引用的函数(例如,对外部作用域的修改变量)。</target>
        </trans-unit>
        <trans-unit id="757cbcf1d8da92458af55b0e8fce5ca71f270395" translate="yes" xml:space="preserve">
          <source>This rule disallows bitwise operators.</source>
          <target state="translated">这条规则不允许使用位运算符。</target>
        </trans-unit>
        <trans-unit id="2ba2e62f9853d2df763ddb95470409d3d5dadb00" translate="yes" xml:space="preserve">
          <source>This rule disallows calling and constructing the &lt;code&gt;Buffer()&lt;/code&gt; constructor.</source>
          <target state="translated">该规则不允许调用和构造 &lt;code&gt;Buffer()&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="d28eb4a3b01fbca8d586fe789a603987455b25ef" translate="yes" xml:space="preserve">
          <source>This rule disallows calling some &lt;code&gt;Object.prototype&lt;/code&gt; methods directly on object instances.</source>
          <target state="translated">此规则不允许直接在对象实例上调用某些 &lt;code&gt;Object.prototype&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="a65487f41b142bfc3ef920b6e2e939a9693a4060" translate="yes" xml:space="preserve">
          <source>This rule disallows calling the &lt;code&gt;Math&lt;/code&gt;, &lt;code&gt;JSON&lt;/code&gt;, &lt;code&gt;Reflect&lt;/code&gt; and &lt;code&gt;Atomics&lt;/code&gt; objects as functions.</source>
          <target state="translated">此规则不允许将 &lt;code&gt;Math&lt;/code&gt; ， &lt;code&gt;JSON&lt;/code&gt; ， &lt;code&gt;Reflect&lt;/code&gt; 和 &lt;code&gt;Atomics&lt;/code&gt; 对象称为函数。</target>
        </trans-unit>
        <trans-unit id="66519fe1823542f5bbdaf98053217a17d3a936db" translate="yes" xml:space="preserve">
          <source>This rule disallows calls to &lt;code&gt;Math.pow&lt;/code&gt; and suggests using the &lt;code&gt;**&lt;/code&gt; operator instead.</source>
          <target state="translated">该规则不允许调用 &lt;code&gt;Math.pow&lt;/code&gt; 并建议改用 &lt;code&gt;**&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="453af8a6b147940c91cf3d0f0f14518fdb22e680" translate="yes" xml:space="preserve">
          <source>This rule disallows calls to &lt;code&gt;parseInt()&lt;/code&gt; or &lt;code&gt;Number.parseInt()&lt;/code&gt; if called with two arguments: a string; and a radix option of 2 (binary), 8 (octal), or 16 (hexadecimal).</source>
          <target state="translated">如果使用两个参数调用此规则，则不允许调用 &lt;code&gt;parseInt()&lt;/code&gt; 或 &lt;code&gt;Number.parseInt()&lt;/code&gt; 。基数选项为2（二进制），8（八进制）或16（十六进制）。</target>
        </trans-unit>
        <trans-unit id="7c11518d5e9e53024b9db23ee18938c322abe1b8" translate="yes" xml:space="preserve">
          <source>This rule disallows calls to methods of the &lt;code&gt;console&lt;/code&gt; object.</source>
          <target state="translated">此规则不允许调用 &lt;code&gt;console&lt;/code&gt; 对象的方法。</target>
        </trans-unit>
        <trans-unit id="d9bf728f0d60d2ad1835867b881b066d84cc1a83" translate="yes" xml:space="preserve">
          <source>This rule disallows comments on the same line as code.</source>
          <target state="translated">这条规则不允许在代码的同一行上做注释。</target>
        </trans-unit>
        <trans-unit id="38acad92db5b12384568aaa44ce71bc077d91438" translate="yes" xml:space="preserve">
          <source>This rule disallows comparisons to 'NaN'.</source>
          <target state="translated">这条规则不允许与 &quot;NaN &quot;进行比较。</target>
        </trans-unit>
        <trans-unit id="6722af39ecadc9275de7d7950f1755fc3e1dc8a8" translate="yes" xml:space="preserve">
          <source>This rule disallows confusing multiline expressions where a newline looks like it is ending a statement, but is not.</source>
          <target state="translated">这条规则不允许混乱的多行表达式,即换行看起来像是语句的结尾,但实际上不是。</target>
        </trans-unit>
        <trans-unit id="258e15022990886cfb026d905dee4f4fa111f95d" translate="yes" xml:space="preserve">
          <source>This rule disallows constant expressions in the test condition of:</source>
          <target state="translated">这条规则不允许在以下的测试条件中使用常量表达式:。</target>
        </trans-unit>
        <trans-unit id="dd02e357765e8264ac8375fa6dba2d3a0f5d12e6" translate="yes" xml:space="preserve">
          <source>This rule disallows control characters in regular expressions.</source>
          <target state="translated">这条规则不允许在正则表达式中使用控制字符。</target>
        </trans-unit>
        <trans-unit id="d97267969958c3f085ea967e53b75c11c0399d94" translate="yes" xml:space="preserve">
          <source>This rule disallows dangling underscores in identifiers.</source>
          <target state="translated">这条规则不允许在标识符中出现下划线。</target>
        </trans-unit>
        <trans-unit id="9d7d30df17bc6a3759d4ec6107bf1a14e2331472" translate="yes" xml:space="preserve">
          <source>This rule disallows duplicate conditions in the same &lt;code&gt;if-else-if&lt;/code&gt; chain.</source>
          <target state="translated">该规则不允许在同一 &lt;code&gt;if-else-if&lt;/code&gt; 链中重复条件。</target>
        </trans-unit>
        <trans-unit id="669e6f096d22a6e0869257835432438a35f77244" translate="yes" xml:space="preserve">
          <source>This rule disallows duplicate keys in object literals.</source>
          <target state="translated">这条规则不允许在对象字面上出现重复的键。</target>
        </trans-unit>
        <trans-unit id="7636a3a8325f2f3b942229d4314412e8c9fe4000" translate="yes" xml:space="preserve">
          <source>This rule disallows duplicate parameter names in function declarations or expressions. It does not apply to arrow functions or class methods, because the parser reports the error.</source>
          <target state="translated">这条规则不允许在函数声明或表达式中出现重复的参数名。它不适用于箭头函数或类方法,因为解析器会报告错误。</target>
        </trans-unit>
        <trans-unit id="6c9a23985ede32b78311a6130f5daa7b5a0e5c70" translate="yes" xml:space="preserve">
          <source>This rule disallows duplicate test expressions in &lt;code&gt;case&lt;/code&gt; clauses of &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">该规则不允许在 &lt;code&gt;switch&lt;/code&gt; 语句的 &lt;code&gt;case&lt;/code&gt; 子句中使用重复的测试表达式。</target>
        </trans-unit>
        <trans-unit id="11a8595e3b7ff0becb4aa44a6f814356743892d7" translate="yes" xml:space="preserve">
          <source>This rule disallows empty block statements. This rule ignores block statements which contain a comment (for example, in an empty &lt;code&gt;catch&lt;/code&gt; or &lt;code&gt;finally&lt;/code&gt; block of a &lt;code&gt;try&lt;/code&gt; statement to indicate that execution should continue regardless of errors).</source>
          <target state="translated">该规则禁止空块语句。此规则将忽略包含注释的块语句（例如，在空 &lt;code&gt;catch&lt;/code&gt; 或 &lt;code&gt;try&lt;/code&gt; 语句的 &lt;code&gt;finally&lt;/code&gt; 块中，以指示无论错误如何都应继续执行）。</target>
        </trans-unit>
        <trans-unit id="2d86de4594606a9cd31df77cbc4cb951b0fa98e7" translate="yes" xml:space="preserve">
          <source>This rule disallows empty character classes in regular expressions.</source>
          <target state="translated">此规则不允许正则表达式中的空字符类。</target>
        </trans-unit>
        <trans-unit id="694dfe25fef30c26f5a1d76ea280c630e2f2d505" translate="yes" xml:space="preserve">
          <source>This rule disallows invalid regular expression strings in &lt;code&gt;RegExp&lt;/code&gt; constructors.</source>
          <target state="translated">此规则在 &lt;code&gt;RegExp&lt;/code&gt; 构造函数中不允许使用无效的正则表达式字符串。</target>
        </trans-unit>
        <trans-unit id="5714adb7d09b1a0bd6d25baa62df73e6d30886dd" translate="yes" xml:space="preserve">
          <source>This rule disallows lexical declarations (&lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt;) in &lt;code&gt;case&lt;/code&gt;/&lt;code&gt;default&lt;/code&gt; clauses. The reason is that the lexical declaration is visible in the entire switch block but it only gets initialized when it is assigned, which will only happen if the case where it is defined is reached.</source>
          <target state="translated">该规则禁止在 &lt;code&gt;case&lt;/code&gt; / &lt;code&gt;default&lt;/code&gt; 子句中进行词法声明（ &lt;code&gt;let&lt;/code&gt; ， &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;function&lt;/code&gt; 和 &lt;code&gt;class&lt;/code&gt; ）。原因是词汇声明在整个switch块中都是可见的，但是只有在分配时才被初始化，只有在达到定义的情况下才会发生。</target>
        </trans-unit>
        <trans-unit id="cba35921de730b64544fac2a4ad17c9226505407" translate="yes" xml:space="preserve">
          <source>This rule disallows mixed spaces and tabs for indentation.</source>
          <target state="translated">这条规则不允许在缩进时使用混合空格和制表符。</target>
        </trans-unit>
        <trans-unit id="3cfcfa6c88ec162c7f3d854aa2225d063abfb9d3" translate="yes" xml:space="preserve">
          <source>This rule disallows modifications to read-only global variables.</source>
          <target state="translated">这条规则不允许修改只读的全局变量。</target>
        </trans-unit>
        <trans-unit id="4703c528be92a0741324e06b06061b7ee7cce8b0" translate="yes" xml:space="preserve">
          <source>This rule disallows multiple spaces in regular expression literals.</source>
          <target state="translated">这条规则不允许在正则表达式字面中出现多个空格。</target>
        </trans-unit>
        <trans-unit id="a1a3b7b955c9a74f52aa8e49d111ff25d49f9646" translate="yes" xml:space="preserve">
          <source>This rule disallows negated conditions in either of the following:</source>
          <target state="translated">本规则不允许下列任何一种情况下的否定条件。</target>
        </trans-unit>
        <trans-unit id="2f9f8d13d0c314cf76143475b6613aba5359fcaa" translate="yes" xml:space="preserve">
          <source>This rule disallows negating the left operand in &lt;code&gt;in&lt;/code&gt; expressions.</source>
          <target state="translated">此规则不允许 &lt;code&gt;in&lt;/code&gt; 表达式中取反左操作数。</target>
        </trans-unit>
        <trans-unit id="2c4f50e13ddde727f6bc3fd3a0d4f4a043473808" translate="yes" xml:space="preserve">
          <source>This rule disallows negating the left operand of the following relational operators:</source>
          <target state="translated">这条规则不允许否定以下关系运算符的左操作数。</target>
        </trans-unit>
        <trans-unit id="740b99aac0bd437017d6910a9ae782e1f9212ca6" translate="yes" xml:space="preserve">
          <source>This rule disallows octal escape sequences in string literals.</source>
          <target state="translated">这条规则不允许在字符串文字中使用八进制转义序列。</target>
        </trans-unit>
        <trans-unit id="4bcfc1a7a7b96bced57ff984ffc562561897447d" translate="yes" xml:space="preserve">
          <source>This rule disallows reassigning &lt;code&gt;function&lt;/code&gt; declarations.</source>
          <target state="translated">此规则不允许重新分配 &lt;code&gt;function&lt;/code&gt; 声明。</target>
        </trans-unit>
        <trans-unit id="c91a55b890383ea5bda5e176f1ddc75d172d67fc" translate="yes" xml:space="preserve">
          <source>This rule disallows reassigning exceptions in &lt;code&gt;catch&lt;/code&gt; clauses.</source>
          <target state="translated">该规则不允许在 &lt;code&gt;catch&lt;/code&gt; 子句中重新分配异常。</target>
        </trans-unit>
        <trans-unit id="78996379b2829ba6163762ae3d6f36e1875d3851" translate="yes" xml:space="preserve">
          <source>This rule disallows return statements in the constructor of a class. Note that returning nothing with flow control is allowed.</source>
          <target state="translated">这条规则不允许在类的构造函数中使用返回语句。需要注意的是,允许在流控制下不返回任何内容。</target>
        </trans-unit>
        <trans-unit id="a4bc5ad478a3d1d339c1f1e60883a910aec68e9f" translate="yes" xml:space="preserve">
          <source>This rule disallows returning values from setters and reports &lt;code&gt;return&lt;/code&gt; statements in setter functions.</source>
          <target state="translated">此规则不允许从setter返回值，并在setter函数中报告 &lt;code&gt;return&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="12bb6672210db1555632eb13b90c2f0873ddab24" translate="yes" xml:space="preserve">
          <source>This rule disallows spacing between function identifiers and their applications.</source>
          <target state="translated">这条规则不允许函数标识符和它们的应用之间有间隔。</target>
        </trans-unit>
        <trans-unit id="21051882fd62b760206518e138fc00d233c6d34d" translate="yes" xml:space="preserve">
          <source>This rule disallows sparse array literals which have &quot;holes&quot; where commas are not preceded by elements. It does not apply to a trailing comma following the last element.</source>
          <target state="translated">这条规则不允许稀疏数组的字元有 &quot;洞&quot;,即逗号不在元素前。它不适用于最后一个元素后面的逗号。</target>
        </trans-unit>
        <trans-unit id="3e0f2dd02ecc28b0aedee1775ef621f78fda1928" translate="yes" xml:space="preserve">
          <source>This rule disallows specified (that is, user-defined) syntax.</source>
          <target state="translated">这条规则不允许使用指定(即用户定义)的语法。</target>
        </trans-unit>
        <trans-unit id="63c9ec1dc80420a119d382ef172cf2b9504b6a24" translate="yes" xml:space="preserve">
          <source>This rule disallows specified identifiers in assignments and &lt;code&gt;function&lt;/code&gt; definitions.</source>
          <target state="translated">该规则不允许在赋值和 &lt;code&gt;function&lt;/code&gt; 定义中使用指定的标识符。</target>
        </trans-unit>
        <trans-unit id="1d519e0d0176940478dbf4f9f334aba740ff368c" translate="yes" xml:space="preserve">
          <source>This rule disallows strict mode directives, no matter which option is specified, if ESLint configuration specifies either of the following as &lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;parser options&lt;/a&gt;:</source>
          <target state="translated">如果ESLint配置指定以下任何一项作为&lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;解析器选项&lt;/a&gt;，则无论指定了哪个选项，此规则都不允许使用严格的模式指令：</target>
        </trans-unit>
        <trans-unit id="1a70b94ae9b04895e4ea44427ce5ab6dcdea44b0" translate="yes" xml:space="preserve">
          <source>This rule disallows strict mode directives, no matter which option is specified, in functions with non-simple parameter lists (for example, parameter lists with default parameter values) because that is a syntax error in &lt;strong&gt;ECMAScript 2016&lt;/strong&gt; and later. See the examples of the &lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt; option.</source>
          <target state="translated">在具有非简单参数列表（例如，具有默认参数值的参数列表）的函数中，无论指定了哪个选项，此规则均不允许使用严格的模式指令，因为这是&lt;strong&gt;ECMAScript 2016&lt;/strong&gt;及更高版本中的语法错误。请参阅&lt;a href=&quot;#function&quot;&gt;函数&lt;/a&gt;选项的示例。</target>
        </trans-unit>
        <trans-unit id="0cdffcec301f66189ef3b947a2a41598b9b0919b" translate="yes" xml:space="preserve">
          <source>This rule disallows ternary operators.</source>
          <target state="translated">这条规则不允许使用三元运算符。</target>
        </trans-unit>
        <trans-unit id="83d62ca0b0fcaa5de115aa302c9698e355c71269" translate="yes" xml:space="preserve">
          <source>This rule disallows the following characters except where the options allow:</source>
          <target state="translated">除非选项允许,否则此规则不允许使用以下字符。</target>
        </trans-unit>
        <trans-unit id="7fe71ef647822616e6e09c0fbddfc5ff073d456e" translate="yes" xml:space="preserve">
          <source>This rule disallows the following:</source>
          <target state="translated">这条规则不允许下列行为:</target>
        </trans-unit>
        <trans-unit id="96600cfbb07e22bbb8ea489b40ead855d9df0a5e" translate="yes" xml:space="preserve">
          <source>This rule disallows the renaming of import, export, and destructured assignments to the same name.</source>
          <target state="translated">这条规则不允许将导入、导出和解构赋值重命名为同一名称。</target>
        </trans-unit>
        <trans-unit id="150e05b85ffac58a6b096426b18dc0b52ef5c458" translate="yes" xml:space="preserve">
          <source>This rule disallows the unary operators &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt;.</source>
          <target state="translated">此规则不允许一元运算符 &lt;code&gt;++&lt;/code&gt; 和 &lt;code&gt;--&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bb380ce8cb89a6cae85669483c509be1106c5e2" translate="yes" xml:space="preserve">
          <source>This rule disallows the use of &lt;code&gt;await&lt;/code&gt; within loop bodies.</source>
          <target state="translated">该规则不允许在循环体内使用 &lt;code&gt;await&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9f30ad1084b430f3c2c865d41a7bfcba40d9b5c" translate="yes" xml:space="preserve">
          <source>This rule disallows the use of the &lt;code&gt;RegExp&lt;/code&gt; constructor function with string literals as its arguments.</source>
          <target state="translated">此规则不允许使用 &lt;code&gt;RegExp&lt;/code&gt; 构造函数以字符串文字作为参数。</target>
        </trans-unit>
        <trans-unit id="63d0dd8fef754a025cbe22a509125657519bf520" translate="yes" xml:space="preserve">
          <source>This rule disallows the use of the &lt;code&gt;delete&lt;/code&gt; operator on variables.</source>
          <target state="translated">该规则不允许对变量使用 &lt;code&gt;delete&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="263c02405afaf24815681f5c6d01741fdc2585e9" translate="yes" xml:space="preserve">
          <source>This rule disallows trailing whitespace (spaces, tabs, and other Unicode whitespace characters) at the end of lines.</source>
          <target state="translated">这条规则不允许在行末出现尾部空白(空格、制表符和其他Unicode空白字符)。</target>
        </trans-unit>
        <trans-unit id="a7a7d428483dbf516170f0e6ac300fb053cdd144" translate="yes" xml:space="preserve">
          <source>This rule disallows unnecessary boolean casts.</source>
          <target state="translated">这条规则禁止不必要的布尔投。</target>
        </trans-unit>
        <trans-unit id="9db8d010e4b21df44b098f694c42f2dd4eab415c" translate="yes" xml:space="preserve">
          <source>This rule disallows unnecessary semicolons.</source>
          <target state="translated">这条规则不允许使用不必要的分号。</target>
        </trans-unit>
        <trans-unit id="d9ecfca8a1a798c2905361902e770ebaaeebbbf4" translate="yes" xml:space="preserve">
          <source>This rule disallows unnecessary usage of computed property keys.</source>
          <target state="translated">这条规则不允许不必要地使用计算的属性键。</target>
        </trans-unit>
        <trans-unit id="6a19f5c8490d1ba026ed2c643c3a4351a202d08f" translate="yes" xml:space="preserve">
          <source>This rule disallows unreachable code after &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, and &lt;code&gt;break&lt;/code&gt; statements.</source>
          <target state="translated">该规则禁止在 &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;throw&lt;/code&gt; ， &lt;code&gt;continue&lt;/code&gt; 和 &lt;code&gt;break&lt;/code&gt; 语句之后出现无法访问的代码。</target>
        </trans-unit>
        <trans-unit id="e63d4f3884bfa8fa4f27ddb207b05212dad647be" translate="yes" xml:space="preserve">
          <source>This rule disallows using multiple assignments within a single statement.</source>
          <target state="translated">这条规则不允许在单条语句中使用多个赋值。</target>
        </trans-unit>
        <trans-unit id="25bf4d847dfa2ff4961c001bb9780bc07382514c" translate="yes" xml:space="preserve">
          <source>This rule disallows whitespace around the dot or before the opening bracket before properties of objects if they are on the same line. This rule allows whitespace when the object and property are on separate lines, as it is common to add newlines to longer chains of properties:</source>
          <target state="translated">如果对象的属性在同一行,这条规则不允许在对象的点周围或在属性前的括号前留白。当对象和属性在不同的行上时,这条规则允许使用空格,因为通常在较长的属性链上添加换行。</target>
        </trans-unit>
        <trans-unit id="9e9a9afc266a9f1caa2064407f3d3f1037d9fe0e" translate="yes" xml:space="preserve">
          <source>This rule distinguishes between six kinds of variable declaration types:</source>
          <target state="translated">本规则区分了六种变量声明类型。</target>
        </trans-unit>
        <trans-unit id="cdbb91e3e92f7914450202f6764f5b77ba2a26f1" translate="yes" xml:space="preserve">
          <source>This rule does not apply in an &lt;code&gt;ArrayExpression&lt;/code&gt; or &lt;code&gt;ArrayPattern&lt;/code&gt; in either of the following cases:</source>
          <target state="translated">在以下两种情况下，此规则都不适用于 &lt;code&gt;ArrayExpression&lt;/code&gt; 或 &lt;code&gt;ArrayPattern&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="203d845e651b402a1ac8edc950ecd9464c5828ae" translate="yes" xml:space="preserve">
          <source>This rule does not apply in either of the following cases:</source>
          <target state="translated">本规则不适用于下列任何一种情况:</target>
        </trans-unit>
        <trans-unit id="3f490639d9b5cca1ffe33a6bc2bbf099505645ed" translate="yes" xml:space="preserve">
          <source>This rule does not apply to directives (which are in the form of literal string expressions such as &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; at the beginning of a script, module, or function).</source>
          <target state="translated">此规则不适用于指令（在脚本，模块或函数的开头，指令采用文字字符串表达式的形式，例如 &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="74c73caf5eb1d682942527e0676b6230a86733fc" translate="yes" xml:space="preserve">
          <source>This rule does not apply to function calls or constructor calls with the &lt;code&gt;new&lt;/code&gt; operator, because they could have &lt;em&gt;side effects&lt;/em&gt; on the state of the program.</source>
          <target state="translated">该规则不适用于使用 &lt;code&gt;new&lt;/code&gt; 运算符的函数调用或构造函数调用，因为它们可能会对程序状态&lt;em&gt;产生副作用&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3ad5609fd443c44c12476d22f78115240259d7d6" translate="yes" xml:space="preserve">
          <source>This rule does not enforce the existence of the pair for a getter or a setter. See &lt;a href=&quot;accessor-pairs&quot;&gt;accessor-pairs&lt;/a&gt; if you also want to enforce getter/setter pairs.</source>
          <target state="translated">此规则不会强制吸气剂或塞特剂存在配对。如果您还想强制执行getter / setter对，请参阅&lt;a href=&quot;accessor-pairs&quot;&gt;访问&lt;/a&gt;器对。</target>
        </trans-unit>
        <trans-unit id="854c2eba272fbba2377e73728b6e8e8a5ab8a7c8" translate="yes" xml:space="preserve">
          <source>This rule does not flag arrow functions inside of object literals. The following will &lt;em&gt;not&lt;/em&gt; warn:</source>
          <target state="translated">此规则不标记对象文字内部的箭头功能。以下内容&lt;em&gt;不会&lt;/em&gt;发出警告：</target>
        </trans-unit>
        <trans-unit id="86d082160176ea469e94732a9224b99947a25f26" translate="yes" xml:space="preserve">
          <source>This rule does not report empty character classes in the string argument of calls to the &lt;code&gt;RegExp&lt;/code&gt; constructor.</source>
          <target state="translated">此规则不会在对 &lt;code&gt;RegExp&lt;/code&gt; 构造函数的调用的字符串参数中报告空字符类。</target>
        </trans-unit>
        <trans-unit id="d27117920d1a4c3661be108f7fc91787931c11a3" translate="yes" xml:space="preserve">
          <source>This rule does not report missing JSDoc comments for classes, functions, or methods.</source>
          <target state="translated">这条规则不会报告类、函数或方法的JSDoc注释缺失。</target>
        </trans-unit>
        <trans-unit id="329e07b776a9b047bbee9ba7aeb1d91f67a6f539" translate="yes" xml:space="preserve">
          <source>This rule does nothing if no configurations are provided.</source>
          <target state="translated">如果没有提供配置,该规则就不会有任何作用。</target>
        </trans-unit>
        <trans-unit id="e35b9e62ac94294420d469553afbaf12b36ac992" translate="yes" xml:space="preserve">
          <source>This rule doesn't check spacing in the following cases:</source>
          <target state="translated">在下列情况下,该规则不检查间距。</target>
        </trans-unit>
        <trans-unit id="ed6ace70b69e1bae1fbb742835f6e9d160caa326" translate="yes" xml:space="preserve">
          <source>This rule enforce consistent comma style in array literals, object literals, and variable declarations.</source>
          <target state="translated">这条规则在数组文字、对象文字和变量声明中执行一致的逗号样式。</target>
        </trans-unit>
        <trans-unit id="5ee5487658a78c52a1bdf48fa389ad64744891d9" translate="yes" xml:space="preserve">
          <source>This rule enforces a coding style where empty lines are required or disallowed after &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;const&lt;/code&gt; statements to achieve a consistent coding style across the project.</source>
          <target state="translated">此规则强制执行一种编码样式，其中在 &lt;code&gt;var&lt;/code&gt; ， &lt;code&gt;let&lt;/code&gt; 或 &lt;code&gt;const&lt;/code&gt; 语句之后需要或不允许使用空行，以在整个项目中实现一致的编码样式。</target>
        </trans-unit>
        <trans-unit id="b3a30607c883a5da29ceb97f5b29fe497063b7f4" translate="yes" xml:space="preserve">
          <source>This rule enforces a consistent indentation style. The default style is &lt;code&gt;4 spaces&lt;/code&gt;.</source>
          <target state="translated">此规则强制使用一致的缩进样式。默认样式为 &lt;code&gt;4 spaces&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="053d9249665cec6c7a51225c330deea8b4d964fe" translate="yes" xml:space="preserve">
          <source>This rule enforces a consistent linebreak style for operators.</source>
          <target state="translated">这条规则为操作者实施了一致的断线风格。</target>
        </trans-unit>
        <trans-unit id="2dc207f7c0cdd5ec6f45d65ca43e291f84147958" translate="yes" xml:space="preserve">
          <source>This rule enforces a consistent newlines around variable declarations. This rule ignores variable declarations inside &lt;code&gt;for&lt;/code&gt; loop conditionals.</source>
          <target state="translated">该规则在变量声明周围强制使用一致的换行符。这条规则忽略内部的变量声明 &lt;code&gt;for&lt;/code&gt; 循环条件句。</target>
        </trans-unit>
        <trans-unit id="84f0362da7498b4295196fca6493ae7190176738" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum depth that blocks can be nested to reduce code complexity.</source>
          <target state="translated">这条规则规定了区块嵌套的最大深度,以降低代码的复杂性。</target>
        </trans-unit>
        <trans-unit id="4335e81d4479cc83b3771caa8aa5dff2eb5111a3" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum depth that callbacks can be nested to increase code clarity.</source>
          <target state="translated">这条规则规定了回调可以嵌套的最大深度,以提高代码的清晰度。</target>
        </trans-unit>
        <trans-unit id="4cfe7ab9be0d3cf7c4bd26c43cf9d145739278f3" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum line length to increase code readability and maintainability. The length of a line is defined as the number of Unicode characters in the line.</source>
          <target state="translated">这条规则规定了最大行长,以提高代码的可读性和可维护性。行的长度定义为行中Unicode字符的数量。</target>
        </trans-unit>
        <trans-unit id="ec9c52da0098b06b0b6d8526eddee3dc69ce058a" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum number of lines per file, in order to aid in maintainability and reduce complexity.</source>
          <target state="translated">这条规则规定了每个文件的最大行数,以帮助维护和减少复杂性。</target>
        </trans-unit>
        <trans-unit id="88b1bf1896fc036cbc88285ee2b031a3838d7474" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum number of lines per function, in order to aid in maintainability and reduce complexity.</source>
          <target state="translated">这条规则规定了每个函数的最大行数,以帮助维护和降低复杂性。</target>
        </trans-unit>
        <trans-unit id="44007589ecb2a4769b62fe380270b72abb99231d" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum number of parameters allowed in function definitions.</source>
          <target state="translated">该规则规定了函数定义中允许的最大参数数。</target>
        </trans-unit>
        <trans-unit id="101841de9bcf819f5ed87d837a7ea9eda3cccdfb" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum number of statements allowed in function blocks.</source>
          <target state="translated">这条规则规定了函数块中允许的最大语句数。</target>
        </trans-unit>
        <trans-unit id="f803854de3d5f4eb6dba4c3bad230da6dbe1073d" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum number of statements allowed per line.</source>
          <target state="translated">这条规则规定了每行允许的最大语句数。</target>
        </trans-unit>
        <trans-unit id="a08a080563efd2eec379c0e949b7107a0946a1c4" translate="yes" xml:space="preserve">
          <source>This rule enforces a minimum and/or maximum identifier length convention.</source>
          <target state="translated">该规则强制执行最小和/或最大标识符长度惯例。</target>
        </trans-unit>
        <trans-unit id="a12ae4058804b73570753830d04876debfe743a7" translate="yes" xml:space="preserve">
          <source>This rule enforces a nearly universal stylistic concern. That being said, this rule may be disabled if the constructor style is preferred.</source>
          <target state="translated">这条规则强制执行了一个几乎普遍的风格关注。也就是说,如果喜欢构造函数的风格,这条规则可以被禁用。</target>
        </trans-unit>
        <trans-unit id="f0177a6b9f488d9007a94ed192deb1738ff81f54" translate="yes" xml:space="preserve">
          <source>This rule enforces a particular type of &lt;code&gt;function&lt;/code&gt; style throughout a JavaScript file, either declarations or expressions. You can specify which you prefer in the configuration.</source>
          <target state="translated">该规则在整个JavaScript文件中强制使用一种特定类型的 &lt;code&gt;function&lt;/code&gt; 样式，即声明或表达式。您可以在配置中指定首选。</target>
        </trans-unit>
        <trans-unit id="7c62d8b9628e4222ce0de1cda323d56688f112a7" translate="yes" xml:space="preserve">
          <source>This rule enforces a style where it requires to have a getter for every property which has a setter defined.</source>
          <target state="translated">这条规则强制执行一种风格,它要求为每个定义了setter的属性设置一个getter。</target>
        </trans-unit>
        <trans-unit id="99a6b55cecafcb07815b6ce6b225784a37946856" translate="yes" xml:space="preserve">
          <source>This rule enforces at least one newline (or absence thereof) at the end of non-empty files.</source>
          <target state="translated">这条规则规定在非空文件的末尾至少要有一个新行(或没有新行)。</target>
        </trans-unit>
        <trans-unit id="c0f61cc113b072060777fa670e84b19c62761cb8" translate="yes" xml:space="preserve">
          <source>This rule enforces comparing &lt;code&gt;typeof&lt;/code&gt; expressions to valid string literals.</source>
          <target state="translated">该规则强制将 &lt;code&gt;typeof&lt;/code&gt; 表达式与有效的字符串文字进行比较。</target>
        </trans-unit>
        <trans-unit id="0d29e3bc583262a92e61b0df65bf87b587bc1245" translate="yes" xml:space="preserve">
          <source>This rule enforces consistency regarding the spaces after &lt;code&gt;words&lt;/code&gt; unary operators and after/before &lt;code&gt;nonwords&lt;/code&gt; unary operators.</source>
          <target state="translated">此规则加强了 &lt;code&gt;words&lt;/code&gt; 一元运算符之后和 &lt;code&gt;nonwords&lt;/code&gt; 单词一元运算符之后/之前的空格的一致性。</target>
        </trans-unit>
        <trans-unit id="4656356c361a67b0d4161201f70a8dde34f8fa7c" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent brace style for blocks.</source>
          <target state="translated">这条规则对区块执行一致的支架样式。</target>
        </trans-unit>
        <trans-unit id="c589693beabba7d58bd598910df76da4e9f1a779" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent empty line padding within blocks.</source>
          <target state="translated">这条规则强制执行块内一致的空行填充。</target>
        </trans-unit>
        <trans-unit id="595c763433e0de8f23a77358f7e01894f4ce51bb" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent line breaks inside braces of object literals or destructuring assignments.</source>
          <target state="translated">这条规则强制要求在对象字面或破坏性赋值的括号内进行一致的换行。</target>
        </trans-unit>
        <trans-unit id="dc1f9f7d14d39f611230db49960fece58ed587b8" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent line breaks inside parentheses of function parameters or arguments.</source>
          <target state="translated">这条规则在函数参数或参数的括号内强制执行一致的换行。</target>
        </trans-unit>
        <trans-unit id="cc3d5861ecc6d2c3252bac7222aab4bc2ecdea0d" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent line endings independent of operating system, VCS, or editor used across your codebase.</source>
          <target state="translated">这条规则强制执行一致的行尾,不受操作系统、VCS或整个代码库使用的编辑器的影响。</target>
        </trans-unit>
        <trans-unit id="3e6898a2307cfec7882640002567d17f03515ad3" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent position of line comments. Block comments are not affected by this rule. By default, this rule ignores comments starting with the following words: &lt;code&gt;eslint&lt;/code&gt;, &lt;code&gt;jshint&lt;/code&gt;, &lt;code&gt;jslint&lt;/code&gt;, &lt;code&gt;istanbul&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, &lt;code&gt;exported&lt;/code&gt;, &lt;code&gt;jscs&lt;/code&gt;, &lt;code&gt;falls through&lt;/code&gt;.</source>
          <target state="translated">该规则强制行注释的位置一致。阻止注释不受此规则影响。默认情况下，此规则将忽略以以下单词开头的注释： &lt;code&gt;eslint&lt;/code&gt; ， &lt;code&gt;jshint&lt;/code&gt; ， &lt;code&gt;jslint&lt;/code&gt; ， &lt;code&gt;istanbul&lt;/code&gt; ， &lt;code&gt;global&lt;/code&gt; ， &lt;code&gt;exported&lt;/code&gt; ， &lt;code&gt;jscs&lt;/code&gt; ， &lt;code&gt;falls through&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa1bfb395be1412e1e3fa7972879d7328ba00c44" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing around keywords and keyword-like tokens: &lt;code&gt;as&lt;/code&gt; (in module declarations), &lt;code&gt;async&lt;/code&gt; (of async functions), &lt;code&gt;await&lt;/code&gt; (of await expressions), &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;case&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, &lt;code&gt;debugger&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;export&lt;/code&gt;, &lt;code&gt;extends&lt;/code&gt;, &lt;code&gt;finally&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;from&lt;/code&gt; (in module declarations), &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt; (of getters), &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;, &lt;code&gt;instanceof&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;of&lt;/code&gt; (in for-of statements), &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt; (of setters), &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;super&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, &lt;code&gt;this&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;typeof&lt;/code&gt;, &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;void&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, and &lt;code&gt;yield&lt;/code&gt;. This rule is designed carefully not to conflict with other spacing rules: it does not apply to spacing where other rules report problems.</source>
          <target state="translated">该规则在关键字和类似关键字的标记周围强制保持一致的间距： &lt;code&gt;as&lt;/code&gt; （在模块声明中）， &lt;code&gt;async&lt;/code&gt; （在异步函数中）， &lt;code&gt;await&lt;/code&gt; （在await表达式中）， &lt;code&gt;break&lt;/code&gt; ， &lt;code&gt;case&lt;/code&gt; ， &lt;code&gt;catch&lt;/code&gt; ， &lt;code&gt;class&lt;/code&gt; ， &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;continue&lt;/code&gt; ， &lt;code&gt;debugger&lt;/code&gt; ， &lt;code&gt;default&lt;/code&gt; ， &lt;code&gt;delete&lt;/code&gt; ， &lt;code&gt;do&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;export&lt;/code&gt; ， &lt;code&gt;extends&lt;/code&gt; ， &lt;code&gt;finally&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;from&lt;/code&gt; （模块声明）， &lt;code&gt;function&lt;/code&gt; ， &lt;code&gt;get&lt;/code&gt; （getters）， &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;import&lt;/code&gt; ， &lt;code&gt;in&lt;/code&gt; ， &lt;code&gt;instanceof&lt;/code&gt; ， &lt;code&gt;let&lt;/code&gt; ， &lt;code&gt;new&lt;/code&gt; ， &lt;code&gt;of&lt;/code&gt; （在for-of语句中）， &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;set&lt;/code&gt; （of setters）， &lt;code&gt;static&lt;/code&gt; ， &lt;code&gt;super&lt;/code&gt; ， &lt;code&gt;switch&lt;/code&gt; ， &lt;code&gt;this&lt;/code&gt; ， &lt;code&gt;throw&lt;/code&gt; ， &lt;code&gt;try&lt;/code&gt; ， &lt;code&gt;typeof&lt;/code&gt; ， &lt;code&gt;var&lt;/code&gt; ， &lt;code&gt;void&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; ， &lt;code&gt;with&lt;/code&gt; 和 &lt;code&gt;yield&lt;/code&gt; 。该规则经过精心设计，不会与其他间距规则冲突：它不适用于其他规则报告问题的间距。</target>
        </trans-unit>
        <trans-unit id="98df4bc6fa104f9bb3d9aa58f24400b4ed78fce2" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing before and after commas in variable declarations, array literals, object literals, function parameters, and sequences.</source>
          <target state="translated">这条规则强制要求变量声明、数组文字、对象文字、函数参数和序列中逗号前后的间距一致。</target>
        </trans-unit>
        <trans-unit id="0169481661b301da11577f8f07f4bc6e9cbac18b" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing between keys and values in object literal properties. In the case of long lines, it is acceptable to add a new line wherever whitespace is allowed.</source>
          <target state="translated">这条规则规定了对象文字属性中键和值之间的间距一致。在长行的情况下,只要允许有空白,就可以添加新行。</target>
        </trans-unit>
        <trans-unit id="c0f2ba86bbe27d84065f88fc40130b40923b309e" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line.</source>
          <target state="translated">这条规则要求打开的区块标记和同一行的下一个标记之间的间距一致。这条规则还规定了近似块标记和同一行上一个标记的间距一致。</target>
        </trans-unit>
        <trans-unit id="2f13854e69ca2deaa522c152aaf7bd0dd0713f47" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing inside array brackets.</source>
          <target state="translated">这条规则强制要求数组括号内的间距一致。</target>
        </trans-unit>
        <trans-unit id="0c0ca4e3390fdfbc5ad1498ea9a232e65edb5d66" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing inside braces of object literals, destructuring assignments, and import/export specifiers.</source>
          <target state="translated">这条规则强制执行对象字元、拆解赋值和导入/导出指定符的括号内的一致间距。</target>
        </trans-unit>
        <trans-unit id="6d043db0d1826295530e2f014a6d61ea421394ad" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing inside computed property brackets.</source>
          <target state="translated">这条规则强制要求计算出的属性括号内的间距一致。</target>
        </trans-unit>
        <trans-unit id="96c5f8bf2c347a8c17cc9bc88351a31a250cb1dd" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent use of semicolons.</source>
          <target state="translated">这条规则规定了分号的一致使用。</target>
        </trans-unit>
        <trans-unit id="a59f3959596b245a73594e6be551df468e1d0019" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent use of trailing commas in object and array literals.</source>
          <target state="translated">这条规则强制要求在对象和数组字面中一致使用尾部的逗号。</target>
        </trans-unit>
        <trans-unit id="531a02291fc6e588ae212b7576b1a3890024effd" translate="yes" xml:space="preserve">
          <source>This rule enforces default parameters to be the last of parameters.</source>
          <target state="translated">该规则强制将默认参数作为参数的最后一个。</target>
        </trans-unit>
        <trans-unit id="5db3f9b56f56672b9a3126a59dac7ef87bdfc4fe" translate="yes" xml:space="preserve">
          <source>This rule enforces line breaks after opening and before closing array brackets.</source>
          <target state="translated">这条规则在打开和关闭数组括号之后和之前强制执行换行。</target>
        </trans-unit>
        <trans-unit id="f2049a535cbc77192d993c38ebac6ec6175c4b5c" translate="yes" xml:space="preserve">
          <source>This rule enforces line breaks between arguments of a function call.</source>
          <target state="translated">这条规则强制执行函数调用的参数之间的换行。</target>
        </trans-unit>
        <trans-unit id="e7ac9021b1e0472e05a8e46e25b3636bcc7f0646" translate="yes" xml:space="preserve">
          <source>This rule enforces line breaks between array elements.</source>
          <target state="translated">这条规则强制执行数组元素之间的换行。</target>
        </trans-unit>
        <trans-unit id="1c720f0d003344dc99467c044b35512793450286" translate="yes" xml:space="preserve">
          <source>This rule enforces or disallows newlines between operands of a ternary expression. Note: The location of the operators is not enforced by this rule. Please see the &lt;a href=&quot;operator-linebreak&quot;&gt;operator-linebreak&lt;/a&gt; rule if you are interested in enforcing the location of the operators themselves.</source>
          <target state="translated">该规则强制或禁止三元表达式的操作数之间的换行符。注意：操作员的位置不受此规则约束。如果您对加强操作员本身的位置感兴趣，请参阅&lt;a href=&quot;operator-linebreak&quot;&gt;操作员换行&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="2ded924af44d0b97c4617f94c5ba97a87c7c8944" translate="yes" xml:space="preserve">
          <source>This rule enforces parentheses around arrow function parameters regardless of arity. For example:</source>
          <target state="translated">这条规则在箭头函数参数周围执行括号,而不考虑arity。例如:</target>
        </trans-unit>
        <trans-unit id="bebe56e90b7c07354c98262213dfb3c803ec31b1" translate="yes" xml:space="preserve">
          <source>This rule enforces spacing around the &lt;code&gt;*&lt;/code&gt; in &lt;code&gt;yield*&lt;/code&gt; expressions.</source>
          <target state="translated">此规则在 &lt;code&gt;yield*&lt;/code&gt; 表达式中的 &lt;code&gt;*&lt;/code&gt; 周围强制使用空格。</target>
        </trans-unit>
        <trans-unit id="9f888babe47c50998c63a687a9d3e9e18eafd108" translate="yes" xml:space="preserve">
          <source>This rule enforces spacing around the colon in object literal properties. It can verify each property individually, or it can ensure horizontal alignment of adjacent properties in an object literal.</source>
          <target state="translated">这条规则强制执行对象文字属性中的冒号周围的间距,它可以单独验证每个属性,也可以确保对象文字属性中相邻属性的水平对齐。它可以单独验证每个属性,也可以确保对象文字中相邻属性的水平对齐。</target>
        </trans-unit>
        <trans-unit id="032e73c7fd1f30f1da604d9f589b30f380222412" translate="yes" xml:space="preserve">
          <source>This rule enforces that a return statement is present in property getters.</source>
          <target state="translated">这条规则强制要求在属性获取者中出现返回语句。</target>
        </trans-unit>
        <trans-unit id="ac3a9a1350618d263f65980c27c390928db1e9dd" translate="yes" xml:space="preserve">
          <source>This rule enforces that each file may contain only a particular number of classes and no more.</source>
          <target state="translated">这条规则规定,每个文件只能包含特定数量的类,不能再多。</target>
        </trans-unit>
        <trans-unit id="83dae79a63a7a63a48d5387400e7d317de58b017" translate="yes" xml:space="preserve">
          <source>This rule enforces that the &lt;code&gt;*&lt;/code&gt; is either placed next to the &lt;code&gt;function&lt;/code&gt; keyword or the name of the function. The single option for this rule is a string specifying the placement of the asterisk. For this option you may pass &lt;code&gt;&quot;start&quot;&lt;/code&gt;, &lt;code&gt;&quot;middle&quot;&lt;/code&gt; or &lt;code&gt;&quot;end&quot;&lt;/code&gt;. The default is &lt;code&gt;&quot;end&quot;&lt;/code&gt;.</source>
          <target state="translated">此规则强制将 &lt;code&gt;*&lt;/code&gt; 放在 &lt;code&gt;function&lt;/code&gt; 关键字旁边或函数名称旁边。此规则的单个选项是一个字符串，指定星号的位置。对于此选项，您可以传递 &lt;code&gt;&quot;start&quot;&lt;/code&gt; ， &lt;code&gt;&quot;middle&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 。默认值为 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f15cceed3a9ebc006b6f485b6d91b005b23ab944" translate="yes" xml:space="preserve">
          <source>This rule enforces the consistent use of either backticks, double, or single quotes.</source>
          <target state="translated">这条规则强制要求一致使用反引号、双引号或单引号。</target>
        </trans-unit>
        <trans-unit id="47d291563f5b8d3c1ba3c39163caddeb773cd7b3" translate="yes" xml:space="preserve">
          <source>This rule enforces the consistent use of either double or single quotes in JSX attributes.</source>
          <target state="translated">这条规则强制要求在JSX属性中一致使用双引号或单引号。</target>
        </trans-unit>
        <trans-unit id="73b3cab87eff32518800f9ef2b81d5e396da2f90" translate="yes" xml:space="preserve">
          <source>This rule enforces the use of the shorthand syntax. This applies to all methods (including generators) defined in object literals and any properties defined where the key name matches name of the assigned variable.</source>
          <target state="translated">这条规则强制使用速记语法。这适用于所有在对象字面定义的方法(包括生成器),以及键名与分配的变量名相匹配的任何属性。</target>
        </trans-unit>
        <trans-unit id="63e2f1f4c345ee69dced3e8e0c71c623687568b8" translate="yes" xml:space="preserve">
          <source>This rule enforces two things about variables with the designated alias names for &lt;code&gt;this&lt;/code&gt;:</source>
          <target state="translated">此规则强制执行关于与指定的别名变量两件事情 &lt;code&gt;this&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="444d122a441ceea0b5a30eb297b723a3dc9f2033" translate="yes" xml:space="preserve">
          <source>This rule enforces usage of &lt;code&gt;return&lt;/code&gt; statement in callbacks of array's methods.</source>
          <target state="translated">该规则在数组方法的回调中强制使用 &lt;code&gt;return&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="2d6e06e2a0cfada8309f5c13c8d158db7197aa95" translate="yes" xml:space="preserve">
          <source>This rule enforces usage of &lt;code&gt;return&lt;/code&gt; statement in callbacks of array's methods. Additionally, it may also enforce the &lt;code&gt;forEach&lt;/code&gt; array method callback to &lt;strong&gt;not&lt;/strong&gt; return a value by using the &lt;code&gt;checkForEach&lt;/code&gt; option.</source>
          <target state="translated">该规则在数组方法的回调中强制使用 &lt;code&gt;return&lt;/code&gt; 语句。此外，它还可以通过使用 &lt;code&gt;checkForEach&lt;/code&gt; 选项来强制 &lt;code&gt;forEach&lt;/code&gt; 数组方法回调&lt;strong&gt;不&lt;/strong&gt;返回值。</target>
        </trans-unit>
        <trans-unit id="238a9c1c0e3410b1c4e383ab10436cb8d26cbdb6" translate="yes" xml:space="preserve">
          <source>This rule enforces valid and consistent JSDoc comments. It reports any of the following problems:</source>
          <target state="translated">该规则强制执行有效和一致的JSDoc注释。它报告以下任何问题。</target>
        </trans-unit>
        <trans-unit id="f9d94e7695ada004444bae53825e6f669fd2ed50" translate="yes" xml:space="preserve">
          <source>This rule enforces variables to be declared either together or separately per function ( for &lt;code&gt;var&lt;/code&gt;) or block (for &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;) scope.</source>
          <target state="translated">此规则强制将变量声明为每个函数（对于 &lt;code&gt;var&lt;/code&gt; ）或块（对于 &lt;code&gt;let&lt;/code&gt; 和 &lt;code&gt;const&lt;/code&gt; ）范围一起声明或单独声明。</target>
        </trans-unit>
        <trans-unit id="18088de0cb810de950375f85f0f09acbaedce552" translate="yes" xml:space="preserve">
          <source>This rule expects that when you're using the callback pattern in Node.js you'll handle the error.</source>
          <target state="translated">这个规则期望当你在Node.js中使用回调模式时,你会处理错误。</target>
        </trans-unit>
        <trans-unit id="6d08f014599aaed138d7f0531cd956e14e5af7cf" translate="yes" xml:space="preserve">
          <source>This rule finds callback functions of the following methods, then checks usage of &lt;code&gt;return&lt;/code&gt; statement.</source>
          <target state="translated">该规则查找以下方法的回调函数，然后检查 &lt;code&gt;return&lt;/code&gt; 语句的用法。</target>
        </trans-unit>
        <trans-unit id="4de015a86c0eeee96f453acb9aeb00629487256a" translate="yes" xml:space="preserve">
          <source>This rule finds references which are inside of loop conditions, then checks the variables of those references are modified in the loop.</source>
          <target state="translated">这条规则可以找到在循环条件中的引用,然后检查这些引用的变量在循环中被修改。</target>
        </trans-unit>
        <trans-unit id="7dc5c04a1930c4229e3eef900e2e631d84f34e42" translate="yes" xml:space="preserve">
          <source>This rule flags class constructors that can be safely removed without changing how the class works.</source>
          <target state="translated">这条规则标志着可以在不改变类的工作方式的情况下安全地删除类构造函数。</target>
        </trans-unit>
        <trans-unit id="5d5510d64b1f962d0f715e17acd7b01cdebbb284" translate="yes" xml:space="preserve">
          <source>This rule flags escapes that can be safely removed without changing behavior.</source>
          <target state="translated">这条规则标志着可以在不改变行为的情况下安全删除的逃逸。</target>
        </trans-unit>
        <trans-unit id="66515436d54a3d03c45800e5600fc63e0c805a04" translate="yes" xml:space="preserve">
          <source>This rule forbids the use of the comma operator, with the following exceptions:</source>
          <target state="translated">这条规则禁止使用逗号运算符,但下列情况除外:</target>
        </trans-unit>
        <trans-unit id="752f68160927832b760bc0ca5bf1d1b31d519295" translate="yes" xml:space="preserve">
          <source>This rule generates warnings for generator functions that do not have the &lt;code&gt;yield&lt;/code&gt; keyword.</source>
          <target state="translated">此规则为不具有 &lt;code&gt;yield&lt;/code&gt; 关键字的生成器函数生成警告。</target>
        </trans-unit>
        <trans-unit id="6e4baecfeba69217207c672a7f95b5eb1b32dcb2" translate="yes" xml:space="preserve">
          <source>This rule has 2 options that are boolean value.</source>
          <target state="translated">这个规则有2个选项,都是布尔值。</target>
        </trans-unit>
        <trans-unit id="9b81f45580b708ab900651667d8eac17ae2aa1cd" translate="yes" xml:space="preserve">
          <source>This rule has 2 options.</source>
          <target state="translated">这条规则有2个选项。</target>
        </trans-unit>
        <trans-unit id="7f7a94f6d0862ad4b541f1ff11cc9e1506acb8a8" translate="yes" xml:space="preserve">
          <source>This rule has a mixed option:</source>
          <target state="translated">这个规则有一个混合选项。</target>
        </trans-unit>
        <trans-unit id="3a7b49741fdcbe3227285811a2145a024828ed28" translate="yes" xml:space="preserve">
          <source>This rule has a number or object option:</source>
          <target state="translated">该规则有一个数字或对象选项。</target>
        </trans-unit>
        <trans-unit id="bfc55f7c0830b8711cbf13cef899c1b734bd5933" translate="yes" xml:space="preserve">
          <source>This rule has a numeric option (defaulted to 1) to specify the maximum number of classes.</source>
          <target state="translated">该规则有一个数字选项(默认为1)来指定最大的类数。</target>
        </trans-unit>
        <trans-unit id="29f7ddc0e749392a26648c1cf72ed0933f445be7" translate="yes" xml:space="preserve">
          <source>This rule has a shorthand integer option for the &lt;code&gt;&quot;min&quot;&lt;/code&gt; object property.</source>
          <target state="translated">该规则具有 &lt;code&gt;&quot;min&quot;&lt;/code&gt; 对象属性的简写整数选项。</target>
        </trans-unit>
        <trans-unit id="f9b6b247413500cee0268031ac478171284bc1b7" translate="yes" xml:space="preserve">
          <source>This rule has a single object option:</source>
          <target state="translated">该规则有一个单一对象选项。</target>
        </trans-unit>
        <trans-unit id="f9cb8fc4aaf5947c491c622a34259791e36e56d8" translate="yes" xml:space="preserve">
          <source>This rule has a single option, which can either be a string or an object.</source>
          <target state="translated">这个规则只有一个选项,可以是字符串,也可以是对象。</target>
        </trans-unit>
        <trans-unit id="5f94691796172a25ab21a96670f27f9ad03de85a" translate="yes" xml:space="preserve">
          <source>This rule has a single string option:</source>
          <target state="translated">该规则有一个单字符串选项。</target>
        </trans-unit>
        <trans-unit id="b3f7cb49c96b78d738e5570bbaae300561ede995" translate="yes" xml:space="preserve">
          <source>This rule has a string option and an object one.</source>
          <target state="translated">这个规则有一个字符串选项和一个对象选项。</target>
        </trans-unit>
        <trans-unit id="1fdc543f514a45dc35817bd8a107deb20cf43858" translate="yes" xml:space="preserve">
          <source>This rule has a string option and an object option.</source>
          <target state="translated">该规则有一个字符串选项和一个对象选项。</target>
        </trans-unit>
        <trans-unit id="15009c7b86491fb0cd854bebe75b417b85f21787" translate="yes" xml:space="preserve">
          <source>This rule has a string option for the specified regular expression.</source>
          <target state="translated">该规则对指定的正则表达式有一个字符串选项。</target>
        </trans-unit>
        <trans-unit id="3c64e7764e3d5fce1031ea6e079ec3342bb3b38a" translate="yes" xml:space="preserve">
          <source>This rule has a string option or an object option:</source>
          <target state="translated">该规则有一个字符串选项或一个对象选项。</target>
        </trans-unit>
        <trans-unit id="ba5afeca0a5893f9126d0d008ac1c37a6ccd0f8d" translate="yes" xml:space="preserve">
          <source>This rule has a string option, which can have one of the following values:</source>
          <target state="translated">该规则有一个字符串选项,它可以有以下值之一:</target>
        </trans-unit>
        <trans-unit id="852afef235e861cde6503e9fa9f341ee032a0b57" translate="yes" xml:space="preserve">
          <source>This rule has a string option.</source>
          <target state="translated">该规则有一个字符串选项。</target>
        </trans-unit>
        <trans-unit id="f5bd93375b385530c03b8ebc157178d8d07f7212" translate="yes" xml:space="preserve">
          <source>This rule has a string option:</source>
          <target state="translated">该规则有一个字符串选项。</target>
        </trans-unit>
        <trans-unit id="9c39a55484c4b84bf6dfa5df5e0e53f6063212c9" translate="yes" xml:space="preserve">
          <source>This rule has an object option for an exception:</source>
          <target state="translated">这个规则有一个异常的对象选项。</target>
        </trans-unit>
        <trans-unit id="52dd73bca8602fba0879d49a6e8fc4a2cfb3821b" translate="yes" xml:space="preserve">
          <source>This rule has an object option for exceptions to the &lt;code&gt;&quot;all&quot;&lt;/code&gt; option:</source>
          <target state="translated">该规则有一个对象选项，用于 &lt;code&gt;&quot;all&quot;&lt;/code&gt; 选项的例外情况：</target>
        </trans-unit>
        <trans-unit id="e70c4892dedde6b638785b6c88fe4c0813afdf96" translate="yes" xml:space="preserve">
          <source>This rule has an object option for exceptions to the &lt;code&gt;&quot;always&quot;&lt;/code&gt; option:</source>
          <target state="translated">该规则有一个对象选项，用于 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 选项的例外情况：</target>
        </trans-unit>
        <trans-unit id="7201dcd2e7cfa36533a6e34dae235405ca73e080" translate="yes" xml:space="preserve">
          <source>This rule has an object option for exceptions to the &lt;code&gt;&quot;never&quot;&lt;/code&gt; option:</source>
          <target state="translated">对于 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 选项的例外情况，此规则具有一个对象选项：</target>
        </trans-unit>
        <trans-unit id="d9872be98d82a692df5d8a8b8578d4914805a58a" translate="yes" xml:space="preserve">
          <source>This rule has an object option for exceptions:</source>
          <target state="translated">这个规则有一个异常的对象选项。</target>
        </trans-unit>
        <trans-unit id="82ca18776efa4316bf999374dc6d7106d4b5ba56" translate="yes" xml:space="preserve">
          <source>This rule has an object option with one option:</source>
          <target state="translated">本规则有一个对象选项,有一个选项。</target>
        </trans-unit>
        <trans-unit id="6ad6fdc3c949dd957b61f76666484f847e8b4368" translate="yes" xml:space="preserve">
          <source>This rule has an object option, with one option:</source>
          <target state="translated">本规则有一个对象选项,有一个选项。</target>
        </trans-unit>
        <trans-unit id="2f67df2ade235e8d54be3342c40546c77988ff4f" translate="yes" xml:space="preserve">
          <source>This rule has an object option, with two options:</source>
          <target state="translated">这个规则有一个对象选项,有两个选项。</target>
        </trans-unit>
        <trans-unit id="3094029c213ee787cfbe2e63d5f34735e9fe502c" translate="yes" xml:space="preserve">
          <source>This rule has an object option.</source>
          <target state="translated">该规则有一个对象选项。</target>
        </trans-unit>
        <trans-unit id="951c0d8fb3776e9f35405a503895842b0d422784" translate="yes" xml:space="preserve">
          <source>This rule has an object option:</source>
          <target state="translated">该规则有一个对象选项。</target>
        </trans-unit>
        <trans-unit id="c4ac31fc845cd8efe5c02ca16935752b2eb4fa4a" translate="yes" xml:space="preserve">
          <source>This rule has an option to allow indirect calls to &lt;code&gt;eval&lt;/code&gt;. Indirect calls to &lt;code&gt;eval&lt;/code&gt; are less dangerous than direct calls to &lt;code&gt;eval&lt;/code&gt; because they cannot dynamically change the scope. Because of this, they also will not negatively impact performance to the degree of direct &lt;code&gt;eval&lt;/code&gt;.</source>
          <target state="translated">该规则具有允许间接调用 &lt;code&gt;eval&lt;/code&gt; 的选项。间接调用 &lt;code&gt;eval&lt;/code&gt; 比直接调用 &lt;code&gt;eval&lt;/code&gt; 危险性小，因为它们不能动态更改范围。因此，它们也不会在直接 &lt;code&gt;eval&lt;/code&gt; 的程度上对性能产生负面影响。</target>
        </trans-unit>
        <trans-unit id="ee5a0d877127f98f1f5190f49af0d5113ae140d3" translate="yes" xml:space="preserve">
          <source>This rule has an option to allow specific kinds of functions to be empty.</source>
          <target state="translated">该规则有一个选项,允许特定种类的函数为空。</target>
        </trans-unit>
        <trans-unit id="eebb9041a17bd060368074b436e2c4a3d528bc12" translate="yes" xml:space="preserve">
          <source>This rule has an option.</source>
          <target state="translated">这个规则有一个选项。</target>
        </trans-unit>
        <trans-unit id="48d1c64d5495a2e99f48e9b8332c8af255d85c2a" translate="yes" xml:space="preserve">
          <source>This rule has an optional object option &lt;code&gt;{ allowAtRootLevel: &amp;lt;boolean&amp;gt; }&lt;/code&gt;, which determines whether synchronous methods should be allowed at the top level of a file, outside of any functions. This option defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">该规则具有一个可选的对象选项 &lt;code&gt;{ allowAtRootLevel: &amp;lt;boolean&amp;gt; }&lt;/code&gt; ，该选项确定是否应在文件的顶层（任何函数之外）允许同步方法。此选项默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21b2603628fe9561d676f4902dfce22ac9deade7" translate="yes" xml:space="preserve">
          <source>This rule has an optional object option with the following properties:</source>
          <target state="translated">该规则有一个可选的对象选项,其属性如下。</target>
        </trans-unit>
        <trans-unit id="ced4a1d3ef7275e0df77c251e97ec06ab62b39ab" translate="yes" xml:space="preserve">
          <source>This rule has an options object literal:</source>
          <target state="translated">这条规则有一个选项对象的字面意思。</target>
        </trans-unit>
        <trans-unit id="d9e92c652ae0840e9d1a6ab9c4c2631180da05c6" translate="yes" xml:space="preserve">
          <source>This rule has built-in exceptions:</source>
          <target state="translated">这个规则有内置的例外。</target>
        </trans-unit>
        <trans-unit id="c1e899620d824db9c2de90df8c792d8a678b20fc" translate="yes" xml:space="preserve">
          <source>This rule has either a string option:</source>
          <target state="translated">该规则有任一字符串选项。</target>
        </trans-unit>
        <trans-unit id="7e832ec5ce4347a640ccca3da541ebc06af56135" translate="yes" xml:space="preserve">
          <source>This rule has one option which has either &lt;code&gt;&quot;never&quot;&lt;/code&gt; or &lt;code&gt;&quot;always&quot;&lt;/code&gt; as value.</source>
          <target state="translated">此规则有一个选项，其值为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="434cbdea5a2d3771f19900bdf532b25ee6bd3b10" translate="yes" xml:space="preserve">
          <source>This rule has one option whose value can be set to &lt;code&gt;&quot;never&quot;&lt;/code&gt; or &lt;code&gt;&quot;always&quot;&lt;/code&gt;</source>
          <target state="translated">此规则有一个选项，其值可以设置为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;always&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e5d3d8052d8d8f494f663e4fb4fa9e96f6509e0" translate="yes" xml:space="preserve">
          <source>This rule has one option, which can be a string option or an object option.</source>
          <target state="translated">这个规则有一个选项,可以是字符串选项,也可以是对象选项。</target>
        </trans-unit>
        <trans-unit id="c84c9d52925fbbf04d2847bdd02983266eac0f1d" translate="yes" xml:space="preserve">
          <source>This rule has one option. It can either be a string or an object:</source>
          <target state="translated">这条规则有一个选项。它可以是一个字符串,也可以是一个对象。</target>
        </trans-unit>
        <trans-unit id="a85aef4180d14627deda0141bfb2f37cfa9a170f" translate="yes" xml:space="preserve">
          <source>This rule has one or more string options:</source>
          <target state="translated">该规则有一个或多个字符串选项。</target>
        </trans-unit>
        <trans-unit id="fa0560ddbbfcd6c046cd8119f1d093fe1c4a3718" translate="yes" xml:space="preserve">
          <source>This rule has the following options that can be specified using an object:</source>
          <target state="translated">该规则有以下选项,可以使用对象来指定。</target>
        </trans-unit>
        <trans-unit id="933ccefd6eed6377af78dae0c80dd63dbc4981c2" translate="yes" xml:space="preserve">
          <source>This rule has the option to check properties as well.</source>
          <target state="translated">这个规则也有检查属性的选项。</target>
        </trans-unit>
        <trans-unit id="2f294aaaed5cde3a854dbd6565794eac6902bde5" translate="yes" xml:space="preserve">
          <source>This rule has three main options and one override option to allow some coercions as required.</source>
          <target state="translated">这条规则有三个主要选项和一个覆盖选项,允许根据需要进行一些强制。</target>
        </trans-unit>
        <trans-unit id="22b034be676241194793c07307d1b26caa995f81" translate="yes" xml:space="preserve">
          <source>This rule has three options:</source>
          <target state="translated">这条规则有三个选项。</target>
        </trans-unit>
        <trans-unit id="9cc484d75588b2521efd443a2fa950909fe567b8" translate="yes" xml:space="preserve">
          <source>This rule has two options, a string option and an object option.</source>
          <target state="translated">这个规则有两个选项,一个是字符串选项,一个是对象选项。</target>
        </trans-unit>
        <trans-unit id="ef2597dc19602c27c52cc77ab6d3826ed3d8ce10" translate="yes" xml:space="preserve">
          <source>This rule has two options, the first one can be a string option or an object option. The second one is an object option, it can allow exceptions.</source>
          <target state="translated">这个规则有两个选项,第一个可以是字符串选项,也可以是对象选项。第二个是对象选项,它可以允许异常。</target>
        </trans-unit>
        <trans-unit id="3f09a11456419342935fa96016d35ce66287c118" translate="yes" xml:space="preserve">
          <source>This rule has two options: a string value &lt;code&gt;&quot;always&quot;&lt;/code&gt; or &lt;code&gt;&quot;never&quot;&lt;/code&gt; which determines whether capitalization of the first word of a comment should be required or forbidden, and optionally an object containing more configuration parameters for the rule.</source>
          <target state="translated">该规则有两个选项：一个字符串值 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;never&quot;&lt;/code&gt; ，用于确定是否需要注释的第一个单词的大小写，以及一个可选对象，该对象包含该规则的更多配置参数。</target>
        </trans-unit>
        <trans-unit id="6367078058884cd6b4661c5442744bde3aaff215" translate="yes" xml:space="preserve">
          <source>This rule ignores spacing which is between &lt;code&gt;=&amp;gt;&lt;/code&gt; and a block. The spacing is handled by the &lt;code&gt;arrow-spacing&lt;/code&gt; rule.</source>
          <target state="translated">该规则忽略 &lt;code&gt;=&amp;gt;&lt;/code&gt; 和一个块之间的间距。间距由 &lt;code&gt;arrow-spacing&lt;/code&gt; 规则处理。</target>
        </trans-unit>
        <trans-unit id="bca8e8fa94e09adcc696245c84caed302ba5ef5c" translate="yes" xml:space="preserve">
          <source>This rule ignores spacing which is between a keyword and a block. The spacing is handled by the &lt;code&gt;keyword-spacing&lt;/code&gt; rule.</source>
          <target state="translated">该规则忽略关键字和块之间的间距。间距由 &lt;code&gt;keyword-spacing&lt;/code&gt; 规则处理。</target>
        </trans-unit>
        <trans-unit id="c18caf633548258ef7489062bbf1f1475035babe" translate="yes" xml:space="preserve">
          <source>This rule improves readability by enforcing lines between class members. It will not check empty lines before the first member and after the last member, since that is already taken care of by padded-blocks.</source>
          <target state="translated">这条规则通过强制执行类成员之间的行数来提高可读性,它不会检查第一个成员之前和最后一个成员之后的空行,因为这一点已经由padded-blocks处理了。它不会检查第一个成员之前和最后一个成员之后的空行,因为padded-blocks已经考虑到了这一点。</target>
        </trans-unit>
        <trans-unit id="067b8ac57f499b00eba00dc6f549da0fd318c726" translate="yes" xml:space="preserve">
          <source>This rule is a formatting preference and not following it won't negatively affect the quality of your code. If alphabetizing imports isn't a part of your coding standards, then you can leave this rule disabled.</source>
          <target state="translated">这条规则是一种格式偏好,不遵守它不会对你的代码质量产生负面影响。如果导入的字母化不是你的编码标准的一部分,那么你可以不使用这个规则。</target>
        </trans-unit>
        <trans-unit id="e13e8e8f93d2b3049fe0f98cc456cd8cb2c4c64a" translate="yes" xml:space="preserve">
          <source>This rule is a formatting preference and not following it won't negatively affect the quality of your code. If you alphabetizing variables isn't a part of your coding standards, then you can leave this rule off.</source>
          <target state="translated">这条规则是一种格式上的偏好,不遵守它不会对你的代码质量产生负面影响。如果你把变量字母化不是你编码标准的一部分,那么你可以不遵守这条规则。</target>
        </trans-unit>
        <trans-unit id="589d22b24ac15f05d684de370251ff86eab8c597" translate="yes" xml:space="preserve">
          <source>This rule is aimed at avoiding the unnecessary use of &lt;code&gt;bind()&lt;/code&gt; and as such will warn whenever an immediately-invoked function expression (IIFE) is using &lt;code&gt;bind()&lt;/code&gt; and doesn't have an appropriate &lt;code&gt;this&lt;/code&gt; value. This rule won't flag usage of &lt;code&gt;bind()&lt;/code&gt; that includes function argument binding.</source>
          <target state="translated">该规则旨在避免不必要地使用 &lt;code&gt;bind()&lt;/code&gt; ，因此，当立即调用的函数表达式（IIFE）使用 &lt;code&gt;bind()&lt;/code&gt; 并且没有适当的 &lt;code&gt;this&lt;/code&gt; 值时，它将发出警告。此规则不会标记包括函数参数绑定的 &lt;code&gt;bind()&lt;/code&gt; 的用法。</target>
        </trans-unit>
        <trans-unit id="8c70a2058d99c61f3b70746e9dac986e9a136f11" translate="yes" xml:space="preserve">
          <source>This rule is aimed at catching debugging code that should be removed and popup UI elements that should be replaced with less obtrusive, custom UIs. As such, it will warn when it encounters &lt;code&gt;alert&lt;/code&gt;, &lt;code&gt;prompt&lt;/code&gt;, and &lt;code&gt;confirm&lt;/code&gt; function calls which are not shadowed.</source>
          <target state="translated">此规则旨在捕获应删除的调试代码以及​​应使用不太引人注目的自定义UI替换的弹出UI元素。因此，当它遇到它将警告 &lt;code&gt;alert&lt;/code&gt; ， &lt;code&gt;prompt&lt;/code&gt; 和 &lt;code&gt;confirm&lt;/code&gt; 未阴影函数调用。</target>
        </trans-unit>
        <trans-unit id="7bfb43ff0ffe91b368f21ec10e26cfeec43d8538" translate="yes" xml:space="preserve">
          <source>This rule is aimed at catching invalid whitespace that is not a normal tab and space. Some of these characters may cause issues in modern browsers and others will be a debugging issue to spot.</source>
          <target state="translated">这条规则旨在捕捉无效的空白字符,这些字符不是正常的制表符和空格。其中一些字符可能会在现代浏览器中造成问题,而其他字符则是调试时需要发现的问题。</target>
        </trans-unit>
        <trans-unit id="2b634aa750ad9f7595ca71468ab4512d71e09bfc" translate="yes" xml:space="preserve">
          <source>This rule is aimed at detecting trailing commas in object literals. As such, it will warn whenever it encounters a trailing comma in an object literal.</source>
          <target state="translated">这条规则旨在检测对象文字中的尾部逗号。因此,每当遇到对象文字中的尾部逗号时,它就会发出警告。</target>
        </trans-unit>
        <trans-unit id="0e496dc6e0f7ecfc75282e800ae44b3ae2d20c0d" translate="yes" xml:space="preserve">
          <source>This rule is aimed at discouraging the use of &lt;code&gt;var&lt;/code&gt; and encouraging the use of &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; instead.</source>
          <target state="translated">此规则旨在阻止使用 &lt;code&gt;var&lt;/code&gt; 并鼓励使用 &lt;code&gt;const&lt;/code&gt; 或 &lt;code&gt;let&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="00e21f6b57d9223f33575e542a471d9015cb9895" translate="yes" xml:space="preserve">
          <source>This rule is aimed at discouraging the use of deprecated and sub-optimal code by disallowing the use of &lt;code&gt;arguments.caller&lt;/code&gt; and &lt;code&gt;arguments.callee&lt;/code&gt;. As such, it will warn when &lt;code&gt;arguments.caller&lt;/code&gt; and &lt;code&gt;arguments.callee&lt;/code&gt; are used.</source>
          <target state="translated">该规则旨在通过禁止使用 &lt;code&gt;arguments.caller&lt;/code&gt; 和 &lt;code&gt;arguments.callee&lt;/code&gt; 来阻止使用不建议使用的代码和次优代码。这样，它将在使用 &lt;code&gt;arguments.caller&lt;/code&gt; 和 &lt;code&gt;arguments.callee&lt;/code&gt; 时发出警告。</target>
        </trans-unit>
        <trans-unit id="fe7262e8e2a0e5d4d25bce407d84657aee9eb731" translate="yes" xml:space="preserve">
          <source>This rule is aimed at discouraging use of &lt;code&gt;process.env&lt;/code&gt; to avoid global dependencies. As such, it will warn whenever &lt;code&gt;process.env&lt;/code&gt; is used.</source>
          <target state="translated">该规则旨在防止使用 &lt;code&gt;process.env&lt;/code&gt; 以避免全局依赖性。因此，每当使用 &lt;code&gt;process.env&lt;/code&gt; 时，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="f38d792a703ef9f9d6a2c68f162519eb9d489852" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating empty functions. A function will not be considered a problem if it contains a comment.</source>
          <target state="translated">这条规则旨在消除空函数。如果一个函数包含注释,则不会被认为是一个问题。</target>
        </trans-unit>
        <trans-unit id="86048b16ce9efe6aadc447d1d1b69731d9850583" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating floating decimal points and will warn whenever a numeric value has a decimal point but is missing a number either before or after it.</source>
          <target state="translated">这条规则旨在消除浮动小数点,每当一个数值有小数点,但在小数点之前或之后缺少一个数字时,它就会发出警告。</target>
        </trans-unit>
        <trans-unit id="90246f5410906fbbdf2c6d7d267c1e4dfbcaa5ca" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating self assignments.</source>
          <target state="translated">这条规则旨在消除自我分配。</target>
        </trans-unit>
        <trans-unit id="a3d8ced820518227c86205cea7adabb8486f2d45" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating the type-unsafe equality operators.</source>
          <target state="translated">这条规则旨在消除类型不安全的平等运算符。</target>
        </trans-unit>
        <trans-unit id="fd707f1fffe20cc0665053f189146e3082919d53" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating the use of ECMAScript 3 keywords and reserved words as object literal keys. As such, it warns whenever an object key would throw an error in an ECMAScript 3 environment.</source>
          <target state="translated">这条规则旨在消除使用ECMAScript 3关键字和保留字作为对象文字键。因此,每当对象键在ECMAScript 3环境中出现错误时,它就会发出警告。</target>
        </trans-unit>
        <trans-unit id="6434e742662f465f2c60b84d6a9c01051ea938fa" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating unintentional fallthrough of one case to the other. As such, it flags any fallthrough scenarios that are not marked by a comment.</source>
          <target state="translated">这项规则旨在消除一种情况无意中转入另一种情况。因此,它标示出任何未加注释的穿插情况。</target>
        </trans-unit>
        <trans-unit id="260f2ba586d82725492f572de36fdd4d41d3910e" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating unnecessary labels.</source>
          <target state="translated">这一规则旨在消除不必要的标签。</target>
        </trans-unit>
        <trans-unit id="0366528693bff0ad732982de9702f6b7dc5b293b" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating unused labels.</source>
          <target state="translated">这一规则旨在消除未使用的标签。</target>
        </trans-unit>
        <trans-unit id="da7670eae14b162ea5192dc3ed57dd1608fe62e7" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating unused variables, functions, and function parameters.</source>
          <target state="translated">该规则旨在消除未使用的变量、函数和函数参数。</target>
        </trans-unit>
        <trans-unit id="02bb0cbd9de5fa8c51ec9d1f97a95452b48e34b0" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating variables that have multiple declarations in the same scope.</source>
          <target state="translated">这条规则旨在消除在同一范围内有多个声明的变量。</target>
        </trans-unit>
        <trans-unit id="0c05a6e7ca0dd2fe40b3e1941f532a5f5cf4d6e3" translate="yes" xml:space="preserve">
          <source>This rule is aimed at enforcing or eliminating variable initializations during declaration. For example, in the following code, &lt;code&gt;foo&lt;/code&gt; is initialized during declaration, while &lt;code&gt;bar&lt;/code&gt; is not.</source>
          <target state="translated">该规则旨在在声明期间强制或消除变量初始化。例如，在以下代码中，在声明期间初始化 &lt;code&gt;foo&lt;/code&gt; ，而没有初始化 &lt;code&gt;bar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2ec8ee15749e494465ab5b3d55baddc7a16afc4" translate="yes" xml:space="preserve">
          <source>This rule is aimed at ensuring that callbacks used outside of the main function block are always part-of or immediately preceding a &lt;code&gt;return&lt;/code&gt; statement. This rule decides what is a callback based on the name of the function being called.</source>
          <target state="translated">该规则旨在确保在主功能块外部使用的回调始终是 &lt;code&gt;return&lt;/code&gt; 语句的一部分或在return语句之前。该规则根据被调用函数的名称决定什么是回调。</target>
        </trans-unit>
        <trans-unit id="12fc4b12ff585b13beb05aab3ac97951c7198eea" translate="yes" xml:space="preserve">
          <source>This rule is aimed at ensuring there are spaces around infix operators.</source>
          <target state="translated">这条规则旨在确保infix操作符周围有空格。</target>
        </trans-unit>
        <trans-unit id="1a6387de3f3ea21e60c53ce842aae405efa22996" translate="yes" xml:space="preserve">
          <source>This rule is aimed at flagging variables that are declared using &lt;code&gt;let&lt;/code&gt; keyword, but never reassigned after the initial assignment.</source>
          <target state="translated">此规则旨在标记使用 &lt;code&gt;let&lt;/code&gt; 关键字声明的变量，但在初始赋值后永远不要重新赋值。</target>
        </trans-unit>
        <trans-unit id="6b1b96aa79a5746db0fddb54574f83ee098c170e" translate="yes" xml:space="preserve">
          <source>This rule is aimed at highlighting an unnecessary block of code following an &lt;code&gt;if&lt;/code&gt; containing a return statement. As such, it will warn when it encounters an &lt;code&gt;else&lt;/code&gt; following a chain of &lt;code&gt;if&lt;/code&gt;s, all of them containing a &lt;code&gt;return&lt;/code&gt; statement.</source>
          <target state="translated">该规则旨在突出显示 &lt;code&gt;if&lt;/code&gt; 包含return语句后的不必要的代码块。因此，当它遇到它将警告 &lt;code&gt;else&lt;/code&gt; 的连锁以下 &lt;code&gt;if&lt;/code&gt; S，个个包含 &lt;code&gt;return&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="3c125b77e2053954512dc9e0da4e09f674ed2077" translate="yes" xml:space="preserve">
          <source>This rule is aimed at highlighting possible typos and unexpected behavior in regular expressions which may arise from the use of empty character classes.</source>
          <target state="translated">这条规则旨在强调正则表达式中可能出现的排版错误和意外行为,这些错误和行为可能来自于空字符类的使用。</target>
        </trans-unit>
        <trans-unit id="8ce587787a5ec83605d0f57bdc841448b1724a7b" translate="yes" xml:space="preserve">
          <source>This rule is aimed at maintaining code consistency and improving code readability by encouraging use of the dot notation style whenever possible. As such, it will warn when it encounters an unnecessary use of square-bracket notation.</source>
          <target state="translated">这条规则旨在保持代码的一致性,并通过鼓励尽可能地使用点符号风格来提高代码的可读性。因此,当遇到不必要地使用方括号符号时,它将发出警告。</target>
        </trans-unit>
        <trans-unit id="c85cc225ae8c575af3c27684f51644a15dda6865" translate="yes" xml:space="preserve">
          <source>This rule is aimed at maintaining consistency and convention by disallowing constructor calls using the &lt;code&gt;new&lt;/code&gt; keyword that do not assign the resulting object to a variable.</source>
          <target state="translated">该规则旨在通过禁止使用不会将结果对象分配给变量的 &lt;code&gt;new&lt;/code&gt; 关键字进行构造函数调用来保持一致性和约定。</target>
        </trans-unit>
        <trans-unit id="c7f71b3a65be1d97541f2cb6028ca8b6ae826b20" translate="yes" xml:space="preserve">
          <source>This rule is aimed at maintaining consistency when throwing exception by disallowing to throw literals and other expressions which cannot possibly be an &lt;code&gt;Error&lt;/code&gt; object.</source>
          <target state="translated">此规则旨在通过禁止抛出可能不是 &lt;code&gt;Error&lt;/code&gt; 对象的文字和其他表达式来保持抛出异常时的一致性。</target>
        </trans-unit>
        <trans-unit id="cf77e127446fb71dc0302c64127a5f9f047d3592" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing bugs and increasing code clarity by ensuring that block statements are wrapped in curly braces. It will warn when it encounters blocks that omit curly braces.</source>
          <target state="translated">这条规则旨在通过确保块语句用大括号包装来防止错误和提高代码的清晰度。当遇到省略大括号的块时,它将发出警告。</target>
        </trans-unit>
        <trans-unit id="cc37a51fc3258e58ad6da2d081ed52d7b851fde8" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing errors that may arise from using the &lt;code&gt;__iterator__&lt;/code&gt; property, which is not implemented in several browsers. As such, it will warn whenever it encounters the &lt;code&gt;__iterator__&lt;/code&gt; property.</source>
          <target state="translated">该规则旨在防止由于使用 &lt;code&gt;__iterator__&lt;/code&gt; 属性而引起的错误，该属性未在多个浏览器中实现。这样，它会在遇到 &lt;code&gt;__iterator__&lt;/code&gt; 属性时发出警告。</target>
        </trans-unit>
        <trans-unit id="560f64042b31848c0a3db333f58d5b5e2588f733" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing potentially dangerous, unnecessary, and slow code by disallowing the use of the &lt;code&gt;eval()&lt;/code&gt; function. As such, it will warn whenever the &lt;code&gt;eval()&lt;/code&gt; function is used.</source>
          <target state="translated">该规则旨在通过禁止使用 &lt;code&gt;eval()&lt;/code&gt; 函数来防止潜在的危险，不必要和缓慢的代码。这样，无论何时使用 &lt;code&gt;eval()&lt;/code&gt; 函数，它都会发出警告。</target>
        </trans-unit>
        <trans-unit id="adf6b0cc4e71f7b12f6baf1f1a566a2f78392cec" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing synchronous methods from being called in Node.js. It looks specifically for the method suffix &quot;&lt;code&gt;Sync&lt;/code&gt;&quot; (as is the convention with Node.js operations).</source>
          <target state="translated">该规则旨在防止在Node.js中调用同步方法。它专门查找方法后缀&amp;ldquo; &lt;code&gt;Sync&lt;/code&gt; &amp;rdquo;（与Node.js操作的约定相同）。</target>
        </trans-unit>
        <trans-unit id="7540a244d6ef1b536d6c740e84f0c2c02785e878" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing the accidental calling of &lt;code&gt;Symbol&lt;/code&gt; with the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">此规则旨在防止意外调用 &lt;code&gt;Symbol&lt;/code&gt; 与 &lt;code&gt;new&lt;/code&gt; 运营商。</target>
        </trans-unit>
        <trans-unit id="469e6a65fc6fd9de2ace34ba2b94e32a85a0ef7a" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing the unintended conversion of a string to a number of a different base than intended or at preventing the redundant &lt;code&gt;10&lt;/code&gt; radix if targeting modern environments only.</source>
          <target state="translated">该规则的目的是防止将字符串意外地转换为与预期不同的其他基数，或者如果仅针对现代环境，则防止冗余的 &lt;code&gt;10&lt;/code&gt; 基数。</target>
        </trans-unit>
        <trans-unit id="6082ce56b65e7772c7b223e16d93e46ed1bfc67b" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing the use of multiline strings.</source>
          <target state="translated">该规则旨在防止使用多行字符串。</target>
        </trans-unit>
        <trans-unit id="33ac7800e287b6d68c276fe31df41e059176f86f" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing unexpected behavior in your program that may arise from a bug in IE 8 and earlier, in which the catch clause parameter can leak into outer scopes. This rule will warn whenever it encounters a catch clause parameter that has the same name as a variable in an outer scope.</source>
          <target state="translated">这条规则的目的是为了防止在你的程序中出现意外的行为,这可能是由于IE 8和更早的版本中的一个bug,其中catch子句参数可能会泄漏到外部作用域中。每当遇到与外部作用域中的变量同名的捕捉子句参数时,这条规则就会发出警告。</target>
        </trans-unit>
        <trans-unit id="0dbcaf4d0178e2b4de696fe49e174ac1200fc1b2" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing unexpected behavior that could arise from using a &lt;code&gt;for in&lt;/code&gt; loop without filtering the results in the loop. As such, it will warn when &lt;code&gt;for in&lt;/code&gt; loops do not filter their results with an &lt;code&gt;if&lt;/code&gt; statement.</source>
          <target state="translated">该规则旨在防止 &lt;code&gt;for in&lt;/code&gt; 不过滤循环结果的情况下使用for in循环而引起的意外行为。这样，它将在 &lt;code&gt;for in&lt;/code&gt; 循环中不使用 &lt;code&gt;if&lt;/code&gt; 语句过滤其结果时发出警告。</target>
        </trans-unit>
        <trans-unit id="3a93186eda9fc1ad5e2354c3aec9e22d64effac0" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing unnecessary &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; directives. As such, it will warn when it encounters a &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; directive when already in strict mode.</source>
          <target state="translated">该规则旨在防止不必要的 &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; 指令。因此，当遇到 &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; 时，它将发出警告；在严格模式下的指令。</target>
        </trans-unit>
        <trans-unit id="c75e9e0cef10da3b36758024c4ec0b7ab60d8f61" translate="yes" xml:space="preserve">
          <source>This rule is aimed at reducing code complexity by capping the amount of cyclomatic complexity allowed in a program. As such, it will warn when the cyclomatic complexity crosses the configured threshold (default is &lt;code&gt;20&lt;/code&gt;).</source>
          <target state="translated">该规则旨在通过限制程序中允许的循环复杂度来降低代码复杂度。这样，它将在圈复杂度超过配置的阈值（默认值为 &lt;code&gt;20&lt;/code&gt; ）时发出警告。</target>
        </trans-unit>
        <trans-unit id="1c9f3c003687bf5a00c45b29be601579c09529f1" translate="yes" xml:space="preserve">
          <source>This rule is aimed at using named capture groups instead of numbered capture groups in regular expressions.</source>
          <target state="translated">这条规则的目的是在正则表达式中使用命名的捕获组而不是编号的捕获组。</target>
        </trans-unit>
        <trans-unit id="e1f61236848decd6fad6b255224627f388f6ef5c" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag &lt;code&gt;this&lt;/code&gt;/&lt;code&gt;super&lt;/code&gt; keywords before &lt;code&gt;super()&lt;/code&gt; callings.</source>
          <target state="translated">此规则旨在在 &lt;code&gt;super()&lt;/code&gt; 调用之前标记 &lt;code&gt;this&lt;/code&gt; / &lt;code&gt;super&lt;/code&gt; 关键字。</target>
        </trans-unit>
        <trans-unit id="fbd358e28b01f27d52086bb527fafa61ec2d4f7f" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag class methods that do not use &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">此规则旨在标记不使用 &lt;code&gt;this&lt;/code&gt; 方法的类方法。</target>
        </trans-unit>
        <trans-unit id="ac40186b374e32b3e6012af68a62e2a5191a2d9a" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag invalid/missing &lt;code&gt;super()&lt;/code&gt; calls.</source>
          <target state="translated">此规则旨在标记无效/丢失的 &lt;code&gt;super()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="6c08c2c004052d5b64c974234aa06e6ffef93c62" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag modifying variables of class declarations.</source>
          <target state="translated">这条规则旨在标记修改类声明的变量。</target>
        </trans-unit>
        <trans-unit id="dfd92744aabb4c3693bd07a9fcd78bf0a22ec16d" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag modifying variables that are declared using &lt;code&gt;const&lt;/code&gt; keyword.</source>
          <target state="translated">此规则旨在标记使用 &lt;code&gt;const&lt;/code&gt; 关键字声明的修改变量。</target>
        </trans-unit>
        <trans-unit id="a3a1f9f8c364f4f2d38823a7ebaee68b7abc1d93" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag shorter notations for the type conversion, then suggest a more self-explanatory notation.</source>
          <target state="translated">这条规则的目的是为类型转换标记更短的符号,然后建议一个更自明的符号。</target>
        </trans-unit>
        <trans-unit id="0d483a51695be57209456cbf5a63f44d433ef8fd" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag the use of duplicate names in class members.</source>
          <target state="translated">这条规则旨在标记类成员中使用重复的名称。</target>
        </trans-unit>
        <trans-unit id="d6c794328277f0807f621415f1e32fb251dcbe5a" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag usage of &lt;code&gt;+&lt;/code&gt; operators with strings.</source>
          <target state="translated">此规则旨在标记字符串使用 &lt;code&gt;+&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="d2bbde19885322cbe4381d2e3df23145f2d289db" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag usage of &lt;code&gt;Function.prototype.apply()&lt;/code&gt; in situations where spread syntax could be used instead.</source>
          <target state="translated">该规则旨在在可以代替使用扩展语法的情况下标记 &lt;code&gt;Function.prototype.apply()&lt;/code&gt; 的用法。</target>
        </trans-unit>
        <trans-unit id="47e32fce626be8349cd3c6fcec19ea5364150d08" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag usage of &lt;code&gt;Function.prototype.call()&lt;/code&gt; and &lt;code&gt;Function.prototype.apply()&lt;/code&gt; that can be replaced with the normal function invocation.</source>
          <target state="translated">此规则旨在标记 &lt;code&gt;Function.prototype.call()&lt;/code&gt; 和 &lt;code&gt;Function.prototype.apply()&lt;/code&gt; 的用法，这些用法可以用普通的函数调用来替换。</target>
        </trans-unit>
        <trans-unit id="a84766a7048c8e0f0348021406e6bb0ead824db7" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag usage of &lt;code&gt;arguments&lt;/code&gt; variables.</source>
          <target state="translated">此规则旨在标记 &lt;code&gt;arguments&lt;/code&gt; 变量的使用。</target>
        </trans-unit>
        <trans-unit id="4c28d58028a6eec8a28d1185085e8ddf141802b5" translate="yes" xml:space="preserve">
          <source>This rule is mostly useful for browser scripts. Top-level declarations in ES modules and CommonJS modules create module-scoped variables. ES modules also have implicit &lt;code&gt;strict&lt;/code&gt; mode, which prevents global variable leaks.</source>
          <target state="translated">此规则对浏览器脚本最有用。ES模块和CommonJS模块中的顶级声明创建模块范围的变量。ES模块还具有隐式 &lt;code&gt;strict&lt;/code&gt; 模式，可以防止全局变量泄漏。</target>
        </trans-unit>
        <trans-unit id="8cd3bc81b47b2e4d1e8c9005b39185071a1dbee0" translate="yes" xml:space="preserve">
          <source>This rule is warning every &lt;code&gt;eval()&lt;/code&gt; even if the &lt;code&gt;eval&lt;/code&gt; is not global's. This behavior is in order to detect calls of direct &lt;code&gt;eval&lt;/code&gt;. Such as:</source>
          <target state="translated">该规则警告每个 &lt;code&gt;eval()&lt;/code&gt; ,即使 &lt;code&gt;eval&lt;/code&gt; 不是全局的。此行为是为了检测直接 &lt;code&gt;eval&lt;/code&gt; 的调用。如：</target>
        </trans-unit>
        <trans-unit id="8a92f926f4ed7ce1fe6115db133b5a9bbf22e1b4" translate="yes" xml:space="preserve">
          <source>This rule judges from following conditions whether or not the function is a constructor:</source>
          <target state="translated">本规则根据以下条件判断函数是否为构造函数。</target>
        </trans-unit>
        <trans-unit id="fc898e9b4c8ea102c28b80e26d75de9f92115480" translate="yes" xml:space="preserve">
          <source>This rule judges from following conditions whether or not the function is a method:</source>
          <target state="translated">该规则根据以下条件判断函数是否为方法。</target>
        </trans-unit>
        <trans-unit id="6343f914f331a1a209ff6afd1ff389afe41cd1b8" translate="yes" xml:space="preserve">
          <source>This rule locates function expressions used as callbacks or function arguments. An error will be produced for any that could be replaced by an arrow function without changing the result.</source>
          <target state="translated">这条规则定位作为回调或函数参数的函数表达式。对于任何可以被箭头函数替换而不改变结果的函数,都会产生错误。</target>
        </trans-unit>
        <trans-unit id="6ece644467d2a9c81b29d68c0b7edf838ce2a95c" translate="yes" xml:space="preserve">
          <source>This rule looks for accessing a given property key on a given object name, either when reading the property's value or invoking it as a function. You may specify an optional message to indicate an alternative API or a reason for the restriction.</source>
          <target state="translated">这条规则在读取属性值或作为函数调用属性时,查找对给定对象名的属性键的访问。你可以指定一个可选的消息来指示一个替代的API或限制的原因。</target>
        </trans-unit>
        <trans-unit id="aaf2ff078c424bc14e83623d32e969252a2c3994" translate="yes" xml:space="preserve">
          <source>This rule looks for any underscores (&lt;code&gt;_&lt;/code&gt;) located within the source code. It ignores leading and trailing underscores and only checks those in the middle of a variable name. If ESLint decides that the variable is a constant (all uppercase), then no warning will be thrown. Otherwise, a warning will be thrown. This rule only flags definitions and assignments but not function calls. In case of ES6 &lt;code&gt;import&lt;/code&gt; statements, this rule only targets the name of the variable that will be imported into the local module scope.</source>
          <target state="translated">该规则查找源代码中是否存在任何下划线（ &lt;code&gt;_&lt;/code&gt; ）。它忽略前导和尾随下划线，仅检查变量名中间的下划线。如果ESLint确定该变量是一个常量（全部大写），则不会引发警告。否则，将引发警告。该规则仅标记定义和分配，而不标记函数调用。对于ES6 &lt;code&gt;import&lt;/code&gt; 语句，此规则仅针对将要导入本地模块范围的变量的名称。</target>
        </trans-unit>
        <trans-unit id="e0626c81467713cb589ff34f137e8fb8cfd1e940" translate="yes" xml:space="preserve">
          <source>This rule looks for tabs anywhere inside a file: code, comments or anything else.</source>
          <target state="translated">这条规则可以查找文件中任何地方的标签:代码、注释或其他任何东西。</target>
        </trans-unit>
        <trans-unit id="fe6d5bb22323ad5d5647f61d91ef52f3f08fa9fe" translate="yes" xml:space="preserve">
          <source>This rule makes it possible to ensure, as some style guides require, that property specifications appear on separate lines for better readability. For example, you can prohibit all of these:</source>
          <target state="translated">这条规则可以像某些样式指南所要求的那样,确保属性规范出现在单独的行中,以提高可读性。例如,你可以禁止所有这些。</target>
        </trans-unit>
        <trans-unit id="e6c6fd0d733257023837aabbd888ed65fb93bb96" translate="yes" xml:space="preserve">
          <source>This rule may conflict with &lt;a href=&quot;no-extra-parens&quot;&gt;no-extra-parens&lt;/a&gt; rule. If you use both this and &lt;a href=&quot;no-extra-parens&quot;&gt;no-extra-parens&lt;/a&gt; rule together, you need to use the &lt;code&gt;nestedBinaryExpressions&lt;/code&gt; option of &lt;a href=&quot;no-extra-parens&quot;&gt;no-extra-parens&lt;/a&gt; rule.</source>
          <target state="translated">此规则可能与&lt;a href=&quot;no-extra-parens&quot;&gt;没有额外批准的&lt;/a&gt;规则冲突。如果同时使用此规则和&lt;a href=&quot;no-extra-parens&quot;&gt;无额外&lt;/a&gt;规则，则需要使用&lt;a href=&quot;no-extra-parens&quot;&gt;无额外&lt;/a&gt;规则的 &lt;code&gt;nestedBinaryExpressions&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="8037ce93151914686c514294bbb5a47669603902" translate="yes" xml:space="preserve">
          <source>This rule normalize style of spacing before/after an arrow function's arrow(&lt;code&gt;=&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">此规则规范了箭头函数的arrow（ &lt;code&gt;=&amp;gt;&lt;/code&gt; ）之前/之后的间距样式。</target>
        </trans-unit>
        <trans-unit id="464d96f575968e66e1eb040bc112bd7c57f4d84f" translate="yes" xml:space="preserve">
          <source>This rule optionally takes a second argument, which should be an object with the following supported properties:</source>
          <target state="translated">这个规则可以选择接受第二个参数,这个参数应该是一个具有以下支持属性的对象。</target>
        </trans-unit>
        <trans-unit id="9baace629bb134edd43e4c5267c9efc7ed36c31e" translate="yes" xml:space="preserve">
          <source>This rule permits you to restrict the locations of property specifications in object literals. You may prohibit any part of any property specification from appearing on the same line as any part of any other property specification. You may make this prohibition absolute, or, by invoking an object option, you may allow an exception, permitting an object literal to have all parts of all of its property specifications on a single line.</source>
          <target state="translated">这条规则允许您限制对象字面中属性规范的位置。您可以禁止任何属性规范的任何部分与任何其他属性规范的任何部分出现在同一行。您可以将这一禁止规定为绝对的,或者,通过调用对象选项,您可以允许一个例外,允许一个对象文字的所有属性规格的所有部分出现在同一行上。</target>
        </trans-unit>
        <trans-unit id="42e1fb9cb344e3a8741f57ed93b48a730c10e3e8" translate="yes" xml:space="preserve">
          <source>This rule prevents the use of spaces before a semicolon in expressions.</source>
          <target state="translated">这条规则防止在表达式中分号前使用空格。</target>
        </trans-unit>
        <trans-unit id="9344d4181d9d19d2241916e31b569c7283b76ebe" translate="yes" xml:space="preserve">
          <source>This rule provides compatibility with treatment of global variables in &lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt; and &lt;a href=&quot;http://www.jslint.com&quot;&gt;JSLint&lt;/a&gt;.</source>
          <target state="translated">这条规则提供了处理全局变量的兼容性&lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt;和&lt;a href=&quot;http://www.jslint.com&quot;&gt;JSLint的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b214579f0990ddb2ff473b51002db1c7d40b204" translate="yes" xml:space="preserve">
          <source>This rule reports &lt;code&gt;catch&lt;/code&gt; clauses that only &lt;code&gt;throw&lt;/code&gt; the caught error.</source>
          <target state="translated">此规则报告仅会 &lt;code&gt;throw&lt;/code&gt; 捕获的错误的 &lt;code&gt;catch&lt;/code&gt; 子句。</target>
        </trans-unit>
        <trans-unit id="86ccc54835bd27114caf48473e26f3403799e952" translate="yes" xml:space="preserve">
          <source>This rule reports comments that include any of the predefined terms specified in its configuration.</source>
          <target state="translated">该规则报告包含其配置中指定的任何预定义术语的注释。</target>
        </trans-unit>
        <trans-unit id="7203ab3e2552fc284d4c7e35257ffb49ab0e5bda" translate="yes" xml:space="preserve">
          <source>This rule reports line terminators around semicolons.</source>
          <target state="translated">该规则报告分号周围的行结束符。</target>
        </trans-unit>
        <trans-unit id="c31d1fb3de11835c7945c7c990282db76d0347ec" translate="yes" xml:space="preserve">
          <source>This rule reports the regular expressions which include multiple code point characters in character class syntax.</source>
          <target state="translated">该规则报告了字符类语法中包含多个码点字符的正则表达式。</target>
        </trans-unit>
        <trans-unit id="3dcc1bc4f904048de1bf50d6256dfff027039954" translate="yes" xml:space="preserve">
          <source>This rule reports the regular expressions which include multiple code point characters in character class syntax. This rule considers the following characters as multiple code point characters.</source>
          <target state="translated">本规则报告在字符类语法中包含多个码点字符的正则表达式。本规则认为下列字符为多码点字符。</target>
        </trans-unit>
        <trans-unit id="341b6ded2aa352fc643dd7e057d61170be9ad829" translate="yes" xml:space="preserve">
          <source>This rule requires &lt;code&gt;return&lt;/code&gt; statements to either always or never specify values. This rule ignores function definitions where the name begins with an uppercase letter, because constructors (when invoked with the &lt;code&gt;new&lt;/code&gt; operator) return the instantiated object implicitly if they do not return another object explicitly.</source>
          <target state="translated">该规则要求 &lt;code&gt;return&lt;/code&gt; 语句始终或永远不指定值。该规则将忽略名称以大写字母开头的函数定义，因为构造函数（当使用 &lt;code&gt;new&lt;/code&gt; 运算符调用时）如果未显式返回另一个对象，则隐式返回实例化的对象。</target>
        </trans-unit>
        <trans-unit id="ee3453de508c549ff19a5f0b11826be286a05d96" translate="yes" xml:space="preserve">
          <source>This rule requires JSDoc comments for specified nodes. Supported nodes:</source>
          <target state="translated">本规则要求指定节点的JSDoc注释。支持的节点。</target>
        </trans-unit>
        <trans-unit id="cec9a26dc266b4eb2c9c2da3663bcc6a85dec09a" translate="yes" xml:space="preserve">
          <source>This rule requires a newline after each call in a method chain or deep member access. Computed property accesses such as &lt;code&gt;instance[something]&lt;/code&gt; are excluded.</source>
          <target state="translated">在方法链或深层成员访问中的每次调用之后，此规则都需要换行符。排除计算属性访问，例如 &lt;code&gt;instance[something]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f95ad21be29bb1ede776ca2426d292d0dd3966e4" translate="yes" xml:space="preserve">
          <source>This rule requires all calls to &lt;code&gt;require()&lt;/code&gt; to be at the top level of the module, similar to ES6 &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; statements, which also can occur only at the top level.</source>
          <target state="translated">此规则要求对 &lt;code&gt;require()&lt;/code&gt; 的所有调用都在模块的顶层，类似于ES6 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 语句，后者也只能在顶层发生。</target>
        </trans-unit>
        <trans-unit id="0177d9705774367a5c4aa0718fbbf2bd9ba69779" translate="yes" xml:space="preserve">
          <source>This rule requires all immediately-invoked function expressions to be wrapped in parentheses.</source>
          <target state="translated">这条规则要求所有立即调用的函数表达式都要用括号包起来。</target>
        </trans-unit>
        <trans-unit id="e9e72f8218177dd1f7a1a226aff9535bffa2d8f5" translate="yes" xml:space="preserve">
          <source>This rule requires an empty line before &lt;code&gt;return&lt;/code&gt; statements to increase code clarity, except when the &lt;code&gt;return&lt;/code&gt; is alone inside a statement group (such as an if statement). In the latter case, the &lt;code&gt;return&lt;/code&gt; statement does not need to be delineated by virtue of it being alone. Comments are ignored and do not count as empty lines.</source>
          <target state="translated">该规则在 &lt;code&gt;return&lt;/code&gt; 语句之前需要一个空行以提高代码的清晰度，除非 &lt;code&gt;return&lt;/code&gt; 仅在语句组（例如if语句）内。在后一种情况下，不必仅通过 &lt;code&gt;return&lt;/code&gt; 语句来描述它。注释将被忽略，不算作空行。</target>
        </trans-unit>
        <trans-unit id="bf9d62bda82c79ce01bd453293ce707585038d1f" translate="yes" xml:space="preserve">
          <source>This rule requires constructor names to begin with a capital letter. Certain built-in identifiers are exempt from this rule. These identifiers are:</source>
          <target state="translated">这条规则要求构造函数名称以大写字母开头。某些内置的标识符不受此规则限制。这些标识符是:</target>
        </trans-unit>
        <trans-unit id="9b1667cd42998acba334e40e3675461c6f6ea647" translate="yes" xml:space="preserve">
          <source>This rule requires empty lines before and/or after comments. It can be enabled separately for both block (&lt;code&gt;/*&lt;/code&gt;) and line (&lt;code&gt;//&lt;/code&gt;) comments. This rule does not apply to comments that appear on the same line as code and does not require empty lines at the beginning or end of a file.</source>
          <target state="translated">此规则要求注释之前和/或之后的空白行。可以为块（ &lt;code&gt;/*&lt;/code&gt; ）和行（ &lt;code&gt;//&lt;/code&gt; ）注释分别启用它。此规则不适用于与代码显示在同一行上的注释，并且不需要在文件的开头或结尾使用空行。</target>
        </trans-unit>
        <trans-unit id="8b344cf66704dc0e8c5d9619033160b8935d092d" translate="yes" xml:space="preserve">
          <source>This rule requires function names to match the name of the variable or property to which they are assigned. The rule will ignore property assignments where the property name is a literal that is not a valid identifier in the ECMAScript version specified in your configuration (default ES5).</source>
          <target state="translated">这条规则要求函数名称与分配给它们的变量或属性名称相匹配。如果属性名是一个文字,而这个文字在你的配置中指定的ECMAScript版本中不是一个有效的标识符,那么这条规则将忽略属性分配(默认为ES5)。</target>
        </trans-unit>
        <trans-unit id="8e3ecea5100b9cfb30c6850203c63a3e999ae46a" translate="yes" xml:space="preserve">
          <source>This rule requires grouped definitions of accessor functions for the same property in object literals, class declarations and class expressions.</source>
          <target state="translated">该规则要求在对象字面、类声明和类表达式中对同一属性的访问函数进行分组定义。</target>
        </trans-unit>
        <trans-unit id="c6f6a421235f2b2c80fa80eed59abe0f68217d99" translate="yes" xml:space="preserve">
          <source>This rule requires identifiers in assignments and &lt;code&gt;function&lt;/code&gt; definitions to match a specified regular expression.</source>
          <target state="translated">此规则要求赋值和 &lt;code&gt;function&lt;/code&gt; 定义中的标识符与指定的正则表达式匹配。</target>
        </trans-unit>
        <trans-unit id="6c51336293652cc83ca8728f02c79367cda21e9d" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows assignment operator shorthand where possible.</source>
          <target state="translated">本规则要求或尽可能不允许转让操作符速记。</target>
        </trans-unit>
        <trans-unit id="22f10b36cba6586758eaf8ebcdbe60c0ebb48fbd" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows blank lines between the given 2 kinds of statements. Properly blank lines help developers to understand the code.</source>
          <target state="translated">这条规则要求或不允许在给定的2种语句之间空行。适当的空行有助于开发人员理解代码。</target>
        </trans-unit>
        <trans-unit id="5c859565f0d1ede643bfaafb3ac34fd0dc296134" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows blank newlines around directive prologues. This rule does not enforce any conventions about blank newlines between the individual directives. In addition, it does not require blank newlines before directive prologues unless they are preceded by a comment. Please use the &lt;a href=&quot;padded-blocks&quot;&gt;padded-blocks&lt;/a&gt; rule if this is a style you would like to enforce.</source>
          <target state="translated">该规则要求或禁止在指令序言周围使用空白换行符。此规则不强制执行有关各个指令之间的空白换行符的任何约定。此外，除非在指令序言之前加上注释，否则它不需要在指令序言之前留空换行符。如果您想强制使用这种样式，请使用&lt;a href=&quot;padded-blocks&quot;&gt;填充块&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="36f7341079241df9a4b2bc7451566985affaf21d" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows global strict mode invoked by a &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; pragma in the global scope.</source>
          <target state="translated">该规则要求或禁止由全局范围内的 &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; 程序调用的全局严格模式。</target>
        </trans-unit>
        <trans-unit id="1fc8f67c63328a85e17bae0b63d1e86f046a16cd" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows spaces between the function name and the opening parenthesis that calls it.</source>
          <target state="translated">这条规则要求或不允许在函数名和调用函数的开头括号之间留有空格。</target>
        </trans-unit>
        <trans-unit id="0ab58631693b6855e4a8251c15c028da7aefe4d3" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows strict mode directives.</source>
          <target state="translated">该规则要求或不允许严格的模式指令。</target>
        </trans-unit>
        <trans-unit id="57f0399ff9843ec83d529b9015c1a7cc83634568" translate="yes" xml:space="preserve">
          <source>This rule requires quotes around object literal property names.</source>
          <target state="translated">这条规则要求在对象文字属性名周围加引号。</target>
        </trans-unit>
        <trans-unit id="4ff93f7cafef4d6cf7e4c4ed239aaafdf010c4c0" translate="yes" xml:space="preserve">
          <source>This rule requires that all imports from a single module exists in a single &lt;code&gt;import&lt;/code&gt; statement.</source>
          <target state="translated">此规则要求所有来自单个模块的 &lt;code&gt;import&lt;/code&gt; 存在于单个import语句中。</target>
        </trans-unit>
        <trans-unit id="8e8edba64ba736d9f931bbdd0fd29d127cce08a0" translate="yes" xml:space="preserve">
          <source>This rule requires that function declarations and, optionally, variable declarations be in the root of a program or the body of a function.</source>
          <target state="translated">这条规则要求函数声明和变量声明必须在程序的根部或函数的主体中。</target>
        </trans-unit>
        <trans-unit id="53cfd9d729e8a263c0ddf818bb9f5eab7ee800a9" translate="yes" xml:space="preserve">
          <source>This rule restricts the use of parentheses to only where they are necessary.</source>
          <target state="translated">这条规则限制了括号的使用,只有在必要的情况下才能使用。</target>
        </trans-unit>
        <trans-unit id="cef2b23a2f6a1633d7f45584fec2639671e225c6" translate="yes" xml:space="preserve">
          <source>This rule restricts what can be thrown as an exception. When it was first created, it only prevented literals from being thrown (hence the name), but it has now been expanded to only allow expressions which have a possibility of being an &lt;code&gt;Error&lt;/code&gt; object.</source>
          <target state="translated">该规则限制了可以作为异常抛出的内容。初次创建时，它只能防止文字被抛出（因此而得名），但现在已被扩展为仅允许可能成为 &lt;code&gt;Error&lt;/code&gt; 对象的表达式。</target>
        </trans-unit>
        <trans-unit id="c24e65c6fcdc1b378a60d46be96c51dbb547de6d" translate="yes" xml:space="preserve">
          <source>This rule should not be used in ES3/5 environments.</source>
          <target state="translated">此规则不应在ES3/5环境中使用。</target>
        </trans-unit>
        <trans-unit id="24acb5e74167bd0bbfd66efd587e2707275f2d12" translate="yes" xml:space="preserve">
          <source>This rule should not be used in ES3/5 environments. In addition, this rule can be safely turned off if you don't want to enforce presence of &lt;code&gt;description&lt;/code&gt; when creating Symbols.</source>
          <target state="translated">在ES3 / 5环境中不应使用此规则。此外，如果您不想在创建符号时强制 &lt;code&gt;description&lt;/code&gt; 存在，则可以安全地关闭此规则。</target>
        </trans-unit>
        <trans-unit id="151c41d8b4dc7702d9553b44714eec4695467e52" translate="yes" xml:space="preserve">
          <source>This rule should not be used unless ES2016 is supported in your codebase.</source>
          <target state="translated">除非您的代码库中支持ES2016,否则不应使用此规则。</target>
        </trans-unit>
        <trans-unit id="0a5f78acac29dc36cd309e293b513159ad726d5a" translate="yes" xml:space="preserve">
          <source>This rule should not be used unless ES2018 is supported in your codebase.</source>
          <target state="translated">除非您的代码库中支持ES2018,否则不应使用此规则。</target>
        </trans-unit>
        <trans-unit id="ba5e010c2d80cf6332f4d78e262ee0df96cd6c16" translate="yes" xml:space="preserve">
          <source>This rule takes a list of objects, where the object name and property names are specified:</source>
          <target state="translated">该规则采用对象列表,其中指定对象名称和属性名称。</target>
        </trans-unit>
        <trans-unit id="0b02f979bb1e5b0404a2b2da410003ab016f4ebd" translate="yes" xml:space="preserve">
          <source>This rule takes a list of strings, where each string is a global to be restricted:</source>
          <target state="translated">这条规则接受一个字符串列表,其中每个字符串都是一个要限制的全局。</target>
        </trans-unit>
        <trans-unit id="b201ae39f465f167a6f7078200eb2b3626059f5e" translate="yes" xml:space="preserve">
          <source>This rule takes a list of strings, where each string is an AST selector:</source>
          <target state="translated">这条规则接受一个字符串列表,其中每个字符串是一个AST选择器。</target>
        </trans-unit>
        <trans-unit id="82b286a5fe6ed277f08bedb934e5ba7461eea738" translate="yes" xml:space="preserve">
          <source>This rule takes an object argument with &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; properties, each with a Boolean value.</source>
          <target state="translated">该规则采用一个对象参数，该参数具有 &lt;code&gt;before&lt;/code&gt; 和 &lt;code&gt;after&lt;/code&gt; 属性，每个属性均具有布尔值。</target>
        </trans-unit>
        <trans-unit id="ef7b35502490d4261fd8713f1ba41161625386de" translate="yes" xml:space="preserve">
          <source>This rule takes an optional string of &quot;always&quot; or &quot;never&quot; (when omitted, it defaults to &quot;always&quot;), and an optional options object with two properties &lt;code&gt;considerPropertyDescriptor&lt;/code&gt; and &lt;code&gt;includeCommonJSModuleExports&lt;/code&gt;.</source>
          <target state="translated">这条规则的&amp;ldquo;总是&amp;rdquo;或&amp;ldquo;从不&amp;rdquo;可选字符串（省略，则默认为&amp;ldquo;总是&amp;rdquo;时），和一个可选的选项具有两个属性对象 &lt;code&gt;considerPropertyDescriptor&lt;/code&gt; 和 &lt;code&gt;includeCommonJSModuleExports&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d95c86b835fd844af2faf1d625ccd11d336d790a" translate="yes" xml:space="preserve">
          <source>This rule takes one argument which can be a string or an object. The string settings are the same as those of the &lt;code&gt;vars&lt;/code&gt; property (explained below).</source>
          <target state="translated">此规则采用一个参数，该参数可以是字符串或对象。字符串设置与 &lt;code&gt;vars&lt;/code&gt; 属性的设置相同（如下所述）。</target>
        </trans-unit>
        <trans-unit id="61b52a64cc80497d13bf1f5087459fd9bf4f1964" translate="yes" xml:space="preserve">
          <source>This rule takes one argument, which can be a string or an object. The string settings are the same as those of the &lt;code&gt;position&lt;/code&gt; property (explained below). The object option has the following properties:</source>
          <target state="translated">此规则采用一个参数，可以是字符串或对象。字符串设置与 &lt;code&gt;position&lt;/code&gt; 属性的设置相同（如下所述）。对象选项具有以下属性：</target>
        </trans-unit>
        <trans-unit id="925c4aa1d0ad97e0afc5d3f1b41b3689f8b6569a" translate="yes" xml:space="preserve">
          <source>This rule takes one argument. If it is &lt;code&gt;&quot;always&quot;&lt;/code&gt; then blocks must always have at least one preceding space. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then all blocks should never have any preceding space. If different spacing is desired for function blocks, keyword blocks and classes, an optional configuration object can be passed as the rule argument to configure the cases separately. If any value in the configuration object is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, then neither style will be enforced for blocks of that kind.</source>
          <target state="translated">这条规则有一个论点。如果它是 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 则块必须始终至少有一个前面的空间。如果 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则所有块都不应再有任何前面的空间。如果功能块，关键字块和类需要不同的间距，则可以将可选的配置对象作为规则参数传递，以分别配置大小写。如果配置对象中的任何值都为 &lt;code&gt;&quot;off&quot;&lt;/code&gt; ，则不会对这种类型的块强制使用任何样式。</target>
        </trans-unit>
        <trans-unit id="0963778e2c1dedb94b331c8f2a270bc4d32e65ac" translate="yes" xml:space="preserve">
          <source>This rule takes one argument. If it is &lt;code&gt;&quot;always&quot;&lt;/code&gt; then the keywords must be followed by at least one space. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then there should be no spaces following. The default is &lt;code&gt;&quot;always&quot;&lt;/code&gt;.</source>
          <target state="translated">这条规则有一个论点。如果它是 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 则关键字后面必须至少有一个空格。如果 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则后面不应有空格。默认值为 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68e6e197c434d48e169b6986c95cbf5d52592e92" translate="yes" xml:space="preserve">
          <source>This rule takes one argument. If it is &lt;code&gt;&quot;always&quot;&lt;/code&gt;, which is the default option, all named functions and anonymous functions must have space before function parentheses. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then all named functions and anonymous functions must not have space before function parentheses. If you want different spacing for named and anonymous functions you can pass a configuration object as the rule argument to configure those separately (e. g. &lt;code&gt;{&quot;anonymous&quot;: &quot;always&quot;, &quot;named&quot;: &quot;never&quot;}&lt;/code&gt;).</source>
          <target state="translated">这条规则有一个论点。如果它是 &lt;code&gt;&quot;always&quot;&lt;/code&gt; （默认选项），则所有命名函数和匿名函数必须在函数括号前有空格。如果为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则所有命名函数和匿名函数在函数括号前都不能有空格。如果要给命名函数和匿名函数使用不同的间距，则可以将配置对象作为规则参数传递，以分别配置它们（例如 &lt;code&gt;{&quot;anonymous&quot;: &quot;always&quot;, &quot;named&quot;: &quot;never&quot;}&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3b267efe65f4c6431cd77e4ab353be6801239914" translate="yes" xml:space="preserve">
          <source>This rule takes one argument: &lt;code&gt;&quot;always&quot;&lt;/code&gt; or &lt;code&gt;&quot;never&quot;&lt;/code&gt;. If &lt;code&gt;&quot;always&quot;&lt;/code&gt; then the keywords must be preceded by at least one space. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then no spaces will be allowed before the keywords &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; (do...while), &lt;code&gt;finally&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt;. The default value is &lt;code&gt;&quot;always&quot;&lt;/code&gt;.</source>
          <target state="translated">该规则采用一个参数： &lt;code&gt;&quot;always&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 。如果 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 则关键字必须至少带有一个空格。如果为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则关键字 &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; （do ... while）， &lt;code&gt;finally&lt;/code&gt; 和 &lt;code&gt;catch&lt;/code&gt; 之前不允许有空格。默认值为 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="921f45928af93ba562b5555f1761103f8b63f93f" translate="yes" xml:space="preserve">
          <source>This rule takes one option, an object, with a boolean property &lt;code&gt;&quot;props&quot;&lt;/code&gt;, and arrays &lt;code&gt;&quot;ignorePropertyModificationsFor&quot;&lt;/code&gt; and &lt;code&gt;&quot;ignorePropertyModificationsForRegex&quot;&lt;/code&gt;. &lt;code&gt;&quot;props&quot;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; by default. If &lt;code&gt;&quot;props&quot;&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, this rule warns against the modification of parameter properties unless they're included in &lt;code&gt;&quot;ignorePropertyModificationsFor&quot;&lt;/code&gt; or &lt;code&gt;&quot;ignorePropertyModificationsForRegex&quot;&lt;/code&gt;, which is an empty array by default.</source>
          <target state="translated">该规则采用一个选项，即一个对象，该对象具有布尔属性 &lt;code&gt;&quot;props&quot;&lt;/code&gt; 以及数组 &lt;code&gt;&quot;ignorePropertyModificationsFor&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;ignorePropertyModificationsForRegex&quot;&lt;/code&gt; 。默认情况下， &lt;code&gt;&quot;props&quot;&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 。如果将 &lt;code&gt;&quot;props&quot;&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ，则此规则将警告您不要修改参数属性，除非它们包含在 &lt;code&gt;&quot;ignorePropertyModificationsFor&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;ignorePropertyModificationsForRegex&quot;&lt;/code&gt; ，默认情况下为空数组。</target>
        </trans-unit>
        <trans-unit id="1989e383b52a7c0690147a9f6a24292bd5b350e0" translate="yes" xml:space="preserve">
          <source>This rule takes one option, an object, with properties &lt;code&gt;&quot;builtinGlobals&quot;&lt;/code&gt;, &lt;code&gt;&quot;hoist&quot;&lt;/code&gt; and &lt;code&gt;&quot;allow&quot;&lt;/code&gt;.</source>
          <target state="translated">该规则采用一个选项，即对象，其属性为 &lt;code&gt;&quot;builtinGlobals&quot;&lt;/code&gt; ， &lt;code&gt;&quot;hoist&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;allow&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55cdaee2a0575694fdbef7580c26fdd32501b02c" translate="yes" xml:space="preserve">
          <source>This rule takes one option.</source>
          <target state="translated">这条规则采取一种方案。</target>
        </trans-unit>
        <trans-unit id="d772fa94c11bdcbaaf11da3960b9dad0c56b7287" translate="yes" xml:space="preserve">
          <source>This rule takes one option: a string with the value of &lt;code&gt;&quot;never&quot;&lt;/code&gt; or &lt;code&gt;&quot;always&quot;&lt;/code&gt;. The default value is &lt;code&gt;&quot;never&quot;&lt;/code&gt;.</source>
          <target state="translated">此规则采用一个选项：值为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 的字符串。默认值为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b91a4819236a2c8058289db3743ecb12444e779b" translate="yes" xml:space="preserve">
          <source>This rule takes one optional argument, an object with a boolean property &lt;code&gt;&quot;builtinGlobals&quot;&lt;/code&gt;. It defaults to &lt;code&gt;true&lt;/code&gt;. If set to &lt;code&gt;true&lt;/code&gt;, this rule also checks redeclaration of built-in globals, such as &lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;...</source>
          <target state="translated">该规则采用一个可选参数，即具有布尔属性 &lt;code&gt;&quot;builtinGlobals&quot;&lt;/code&gt; 的对象。默认为 &lt;code&gt;true&lt;/code&gt; 。如果设置为 &lt;code&gt;true&lt;/code&gt; ，则此规则还将检查内置全局变量的重新声明，例如 &lt;code&gt;Object&lt;/code&gt; ， &lt;code&gt;Array&lt;/code&gt; ， &lt;code&gt;Number&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="b9cbcc761c175da60e181849bac41abcfeb1eb54" translate="yes" xml:space="preserve">
          <source>This rule takes one optional argument, an object with a single key, &lt;code&gt;includeExports&lt;/code&gt; which is a &lt;code&gt;boolean&lt;/code&gt;. It defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">该规则采用一个可选参数，即具有单个键的对象， &lt;code&gt;includeExports&lt;/code&gt; 是 &lt;code&gt;boolean&lt;/code&gt; 。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b153c32b894cc5b1df1b907a860983e5820083f" translate="yes" xml:space="preserve">
          <source>This rule takes one optional object argument:</source>
          <target state="translated">这条规则需要一个可选的对象参数。</target>
        </trans-unit>
        <trans-unit id="30aa84ef31b2b0e9486effe6efc775992ca799f6" translate="yes" xml:space="preserve">
          <source>This rule takes two arguments. If the first is &lt;code&gt;&quot;always&quot;&lt;/code&gt; then the &lt;code&gt;//&lt;/code&gt; must be followed by at least once whitespace. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then there should be no whitespace following. The default is &lt;code&gt;&quot;always&quot;&lt;/code&gt;.</source>
          <target state="translated">该规则有两个参数。如果第一个是 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 则必须 &lt;code&gt;//&lt;/code&gt; 至少跟一个空格。如果 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则后面不应有空格。默认值为 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84d96e23bd49ca68e511d1e5e897131b026bcb0a" translate="yes" xml:space="preserve">
          <source>This rule takes two sets of configuration objects. The first object parameter determines what types of destructuring the rule applies to.</source>
          <target state="translated">该规则需要两组配置对象。第一个对象参数决定该规则适用于什么类型的拆解。</target>
        </trans-unit>
        <trans-unit id="ae727accc6952dffe9642e70d5d9f54ce013860e" translate="yes" xml:space="preserve">
          <source>This rule warns async functions which have no &lt;code&gt;await&lt;/code&gt; expression.</source>
          <target state="translated">该规则警告没有 &lt;code&gt;await&lt;/code&gt; 表达式的异步函数。</target>
        </trans-unit>
        <trans-unit id="74dd1649a62b8563503acf05aa42a909078345bb" translate="yes" xml:space="preserve">
          <source>This rule warns if setters are defined without getters. Using an option &lt;code&gt;getWithoutSet&lt;/code&gt;, it will warn if you have a getter without a setter also.</source>
          <target state="translated">如果没有使用getter定义setter时，此规则将发出警告。使用选项 &lt;code&gt;getWithoutSet&lt;/code&gt; ，如果您同时具有不带setter的getter，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="1569e1ee08e710a201d5fae646056142b968ec87" translate="yes" xml:space="preserve">
          <source>This rule warns the assignments, increments, and decrements of imported bindings.</source>
          <target state="translated">该规则对导入绑定的赋值、增量和减量进行警告。</target>
        </trans-unit>
        <trans-unit id="b525b7aa7a74d04de20905491b2a8c8941e9d6ab" translate="yes" xml:space="preserve">
          <source>This rule was &lt;a href=&quot;https://eslint.org/blog/2018/11/jsdoc-end-of-life&quot;&gt;&lt;strong&gt;deprecated&lt;/strong&gt;&lt;/a&gt; in ESLint v5.10.0.</source>
          <target state="translated">ESLint v5.10.0 中&lt;a href=&quot;https://eslint.org/blog/2018/11/jsdoc-end-of-life&quot;&gt;&lt;strong&gt;不推荐使用&lt;/strong&gt;&lt;/a&gt;此规则。</target>
        </trans-unit>
        <trans-unit id="97dcd4f368c345500c003b3e841d0a8400962324" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v3.3.0 and replaced by the &lt;a href=&quot;func-call-spacing&quot;&gt;func-call-spacing&lt;/a&gt; rule.</source>
          <target state="translated">此规则在ESLint v3.3.0 中&lt;strong&gt;已弃用&lt;/strong&gt;，并由&lt;a href=&quot;func-call-spacing&quot;&gt;func-call-spacing&lt;/a&gt;规则代替。</target>
        </trans-unit>
        <trans-unit id="8ff1d82e180ba1773cb4a72ab00704f0010e710d" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v3.3.0 and replaced by the &lt;a href=&quot;no-global-assign&quot;&gt;no-global-assign&lt;/a&gt; rule.</source>
          <target state="translated">此规则在ESLint v3.3.0 中&lt;strong&gt;已弃用&lt;/strong&gt;，并由&lt;a href=&quot;no-global-assign&quot;&gt;no-global-assign&lt;/a&gt;规则代替。</target>
        </trans-unit>
        <trans-unit id="1fb4dbae98047dd2a77e76468bbbd39dfc1c4441" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v3.3.0 and replaced by the &lt;a href=&quot;no-unsafe-negation&quot;&gt;no-unsafe-negation&lt;/a&gt; rule.</source>
          <target state="translated">此规则在ESLint v3.3.0 中&lt;strong&gt;已弃用&lt;/strong&gt;，并由&lt;a href=&quot;no-unsafe-negation&quot;&gt;no-unsafe-negation&lt;/a&gt;规则代替。</target>
        </trans-unit>
        <trans-unit id="6ba68fa34738bb389e81154d113b01d469e1d65a" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v3.9.0 and will not be replaced. The original intent of this rule now seems misguided as we have come to understand that &lt;code&gt;Reflect&lt;/code&gt; methods are not actually intended to replace the &lt;code&gt;Object&lt;/code&gt; counterparts the rule suggests, but rather exist as low-level primitives to be used with proxies in order to replicate the default behavior of various previously existing functionality.</source>
          <target state="translated">此规则在ESLint v3.9.0 中&lt;strong&gt;已弃用&lt;/strong&gt;，不会被替换。现在，该规则的初衷似乎被误导了，因为我们已经了解到， &lt;code&gt;Reflect&lt;/code&gt; 方法实际上并不是要替换该规则建议的 &lt;code&gt;Object&lt;/code&gt; 对应对象，而是作为低级原语存在，以与代理一起使用以复制默认值。各种现有功能的行为。</target>
        </trans-unit>
        <trans-unit id="ce83f16eb6dd78df693370a9b8ab5161bcba25c0" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v4.0.0 and replaced by the &lt;a href=&quot;padding-line-between-statements&quot;&gt;padding-line-between-statements&lt;/a&gt; rule.</source>
          <target state="translated">此规则在ESLint v4.0.0 中&lt;strong&gt;已弃用&lt;/strong&gt;，并由&lt;a href=&quot;padding-line-between-statements&quot;&gt;padding-line-between-statements&lt;/a&gt;规则代替。</target>
        </trans-unit>
        <trans-unit id="595a0b53c9e454f2413cf7e2261c656c0f5d6fdb" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v5.1.0.</source>
          <target state="translated">ESLint v5.1.0 中&lt;strong&gt;不推荐使用&lt;/strong&gt;此规则。</target>
        </trans-unit>
        <trans-unit id="5181dc7122d7d894602629de38f3da4418e3353f" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v7.0.0. Please use the corresponding rule in &lt;a href=&quot;https://github.com/mysticatea/eslint-plugin-node&quot;&gt;&lt;code&gt;eslint-plugin-node&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ESLint v7.0.0中&lt;strong&gt;不赞成使用&lt;/strong&gt;此规则。请在&lt;a href=&quot;https://github.com/mysticatea/eslint-plugin-node&quot;&gt; &lt;code&gt;eslint-plugin-node&lt;/code&gt; 中&lt;/a&gt;使用相应的规则。</target>
        </trans-unit>
        <trans-unit id="ac5a312f0cda349b78539a394ba1c7fd59148665" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v0.10.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;space-unary-ops&quot;&gt;space-unary-ops&lt;/a&gt; rule.</source>
          <target state="translated">该规则已在ESLint v0.10.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;space-unary-ops&quot;&gt;space-unary-ops&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="7acd7fc95d09451c1a526d7f453870f07f1aac69" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;comma-dangle&quot;&gt;comma-dangle&lt;/a&gt; rule.</source>
          <target state="translated">该规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;comma-dangle&quot;&gt;逗号&lt;/a&gt;分隔规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="9fea70d644ca508ec2677a3f96f76959ba74e28c" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;generator-star-spacing&quot;&gt;generator-star-spacing&lt;/a&gt; rule.</source>
          <target state="translated">该规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;generator-star-spacing&quot;&gt;generator-star-spacing&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="454a8fed474e9b1a63295584bcba33699571409b" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;no-empty-character-class&quot;&gt;no-empty-character-class&lt;/a&gt; rule.</source>
          <target state="translated">此规则在ESLint v1.0中已&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;no-empty-character-class&quot;&gt;no-empty-character-class&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="3a4df1f13d548677fdf37e3b26d0ecaaf861ecd9" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;no-extra-parens&quot;&gt;no-extra-parens&lt;/a&gt; rule. The &lt;code&gt;&quot;functions&quot;&lt;/code&gt; option in the new rule is equivalent to the removed rule.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;no-extra-parens&quot;&gt;无额外限制的&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。新规则中的 &lt;code&gt;&quot;functions&quot;&lt;/code&gt; 选项等效于已删除的规则。</target>
        </trans-unit>
        <trans-unit id="a5b108031efa91ff62ed16986898b592f2099523" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;object-curly-spacing&quot;&gt;object-curly-spacing&lt;/a&gt; and &lt;a href=&quot;array-bracket-spacing&quot;&gt;array-bracket-spacing&lt;/a&gt; rules.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;object-curly-spacing&quot;&gt;object-curly-spacing&lt;/a&gt;和&lt;a href=&quot;array-bracket-spacing&quot;&gt;array-bracket-spacing&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="15310b4262bdc098c85186e1c940ab4bc35713bd" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;quote-props&quot;&gt;quote-props&lt;/a&gt; rule.</source>
          <target state="translated">该规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;quote-props&quot;&gt;quote-props&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="806e99ea6529d453ff4fea7b67ef7d9411e7fc0b" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;semi-spacing&quot;&gt;semi-spacing&lt;/a&gt; rule.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;semi-spacing&quot;&gt;半间距&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="1433b9d464125b94ed46f2687a9a766095f2913f" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;space-before-function-paren&quot;&gt;space-before-function-paren&lt;/a&gt; rule.</source>
          <target state="translated">在此规则&lt;strong&gt;删除&lt;/strong&gt;在ESLint v1.0和&lt;strong&gt;更换&lt;/strong&gt;由&lt;a href=&quot;space-before-function-paren&quot;&gt;空间前方的功能括号&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="bfdf120e55f7a281a7a557f08326c688dd338dfd" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;space-before-function-paren&quot;&gt;space-before-function-paren&lt;/a&gt; rule. The name of the rule changed from &quot;parentheses&quot; to &quot;paren&quot; for consistency with the names of other rules.</source>
          <target state="translated">在此规则&lt;strong&gt;删除&lt;/strong&gt;在ESLint v1.0和&lt;strong&gt;更换&lt;/strong&gt;由&lt;a href=&quot;space-before-function-paren&quot;&gt;空间前方的功能括号&lt;/a&gt;规则。规则的名称从&amp;ldquo;括号&amp;rdquo;更改为&amp;ldquo;原谅&amp;rdquo;，以与其他规则的名称保持一致。</target>
        </trans-unit>
        <trans-unit id="86775760ef9fb1f3cfe8506df115fa50fad7b3da" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;spaced-comment&quot;&gt;spaced-comment&lt;/a&gt; rule.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;spaced-comment&quot;&gt;空格注释&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="4d22e86fae8a14e5447a82e7f0330e058279ab58" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;strict&quot;&gt;strict&lt;/a&gt; rule. The &lt;code&gt;&quot;global&quot;&lt;/code&gt; option in the new rule is most similar to the removed rule.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;strict&quot;&gt;严格&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。新规则中的 &lt;code&gt;&quot;global&quot;&lt;/code&gt; 选项与已删除规则最相似。</target>
        </trans-unit>
        <trans-unit id="9100ed1e2a807ef9327b2f5d35415892fa86cb22" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;strict&quot;&gt;strict&lt;/a&gt; rule. The &lt;code&gt;&quot;global&quot;&lt;/code&gt; or &lt;code&gt;&quot;function&quot;&lt;/code&gt; options in the new rule are similar to the removed rule.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;strict&quot;&gt;严格&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。新规则中的 &lt;code&gt;&quot;global&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;function&quot;&lt;/code&gt; 选项类似于已删除的规则。</target>
        </trans-unit>
        <trans-unit id="9f89e766710bf630ced43da3e69bce3992f2c41b" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v2.0 and &lt;strong&gt;replaced&lt;/strong&gt; by a combination of the &lt;a href=&quot;no-confusing-arrow&quot;&gt;no-confusing-arrow&lt;/a&gt; and &lt;a href=&quot;no-constant-condition&quot;&gt;no-constant-condition&lt;/a&gt; rules.</source>
          <target state="translated">此规则在ESLint v2.0中已&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;no-confusing-arrow&quot;&gt;无混淆箭头&lt;/a&gt;规则和&lt;a href=&quot;no-constant-condition&quot;&gt;无恒定条件&lt;/a&gt;规则的组合&lt;strong&gt;所取代&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="cda6801a02eb11d54e527ccd127c09f626d0664d" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v2.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;keyword-spacing&quot;&gt;keyword-spacing&lt;/a&gt; rule.</source>
          <target state="translated">此规则已在ESLint v2.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;keyword-spacing&quot;&gt;关键字间隔&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="b6bce407af2413b5937a155c9cf8c389ed6b52d2" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v2.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;no-labels&quot;&gt;no-labels&lt;/a&gt; rule.</source>
          <target state="translated">此规则已在ESLint v2.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;no-labels&quot;&gt;no-labels&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c97ed5e1976f6e59cbc5958266519e944e1e11e9" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v2.0 and replaced by the &lt;a href=&quot;keyword-spacing&quot;&gt;keyword-spacing&lt;/a&gt; rule.</source>
          <target state="translated">此规则已在ESLint v2.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;keyword-spacing&quot;&gt;关键字间隔&lt;/a&gt;规则代替。</target>
        </trans-unit>
        <trans-unit id="7acf56d92530caa8171a9b77894e82f22211e06d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.2.</source>
          <target state="translated">这条规则在ESLint 0.0.2中被引入。</target>
        </trans-unit>
        <trans-unit id="d56f12d0cea2af7dab30391b1c91a8c5e8611ab7" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.3-0.</source>
          <target state="translated">这个规则在ESLint 0.0.3-0中被引入。</target>
        </trans-unit>
        <trans-unit id="9f77090708a85102cf4f6ae95b7446a35a7e8831" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.5.</source>
          <target state="translated">这条规则在ESLint 0.0.5中被引入。</target>
        </trans-unit>
        <trans-unit id="f63ca588b6adc8183fd416864c5b42f2c04e1cbe" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.6.</source>
          <target state="translated">这条规则在ESLint 0.0.6中被引入。</target>
        </trans-unit>
        <trans-unit id="ee648d4cb2a57db16db2921c9d0df6db93140ef1" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.7.</source>
          <target state="translated">这条规则在ESLint 0.0.7中被引入。</target>
        </trans-unit>
        <trans-unit id="7be8f0d556f11e7552c5d03d635e15e1e2586501" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.9 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.0.9中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="991259711e9ffad37f494b317dc6ae1354d1cdec" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.9 and removed in 2.0.0-rc.0.</source>
          <target state="translated">这条规则在ESLint 0.0.9中引入,在2.0.0-rc.0中删除。</target>
        </trans-unit>
        <trans-unit id="3826e79f1a573577ff21706cad07239818dc97a8" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.9.</source>
          <target state="translated">这条规则在ESLint 0.0.9中被引入。</target>
        </trans-unit>
        <trans-unit id="104ee87c3025112a05265a39971ed20f008801f6" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.1.0.</source>
          <target state="translated">这条规则在ESLint 0.1.0中被引入。</target>
        </trans-unit>
        <trans-unit id="6841448b528ccb28441ee5853c18598a8bae3314" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.1.2.</source>
          <target state="translated">这条规则在ESLint 0.1.2中被引入。</target>
        </trans-unit>
        <trans-unit id="cc3311c1a58d2304884d53ec00bc0893123240e0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.1.4 and removed in 0.10.0.</source>
          <target state="translated">这条规则在ESLint 0.1.4中引入,在0.10.0中被删除。</target>
        </trans-unit>
        <trans-unit id="9cd085f82a271e1296933b1d84ab883da8dc5fdc" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.1.4 and removed in 2.0.0-beta.3.</source>
          <target state="translated">这条规则在ESLint 0.1.4中引入,在2.0.0-beta.3中被删除。</target>
        </trans-unit>
        <trans-unit id="35169537b6d06f161ebb07cee67997ec7015db46" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.1.4.</source>
          <target state="translated">这条规则在ESLint 0.1.4中被引入。</target>
        </trans-unit>
        <trans-unit id="f5f9cd2f36d4e67d1494162223864c9bde274c44" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.10.0.</source>
          <target state="translated">这条规则在ESLint 0.10.0中被引入。</target>
        </trans-unit>
        <trans-unit id="6e464e7cf6aff81ac969bfa7300628a1595dbcbc" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.11.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.11.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="f5e4e0c1277e58cff65243fba140eefd9e2dd691" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.12.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.12.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="8e1016eb2eb9e5e64bc0b0dd57ca31abaa8b284d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.12.0.</source>
          <target state="translated">这条规则在ESLint 0.12.0中被引入。</target>
        </trans-unit>
        <trans-unit id="ec82419ed7cd6cb2cf32d689705adcf1ef19580d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.14.0.</source>
          <target state="translated">这条规则在ESLint 0.14.0中被引入。</target>
        </trans-unit>
        <trans-unit id="b4c7ed1964bbb84cf265249574359050ead50197" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.15.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.15.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="022a60c1b9ae595ba84589e32239b3cc1abe85c0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.15.0.</source>
          <target state="translated">这条规则在ESLint 0.15.0中被引入。</target>
        </trans-unit>
        <trans-unit id="44b7c4a1ff6984989e180005d65c9ff021838b2b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.16.0.</source>
          <target state="translated">这条规则在ESLint 0.16.0中被引入。</target>
        </trans-unit>
        <trans-unit id="99811d057622f118ff8e5e3027a5aa79e7b5a1f8" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.17.0.</source>
          <target state="translated">这条规则在ESLint 0.17.0中被引入。</target>
        </trans-unit>
        <trans-unit id="a24ab8acce4089e462954a9a8d11f04ed7e83d14" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.18.0.</source>
          <target state="translated">这条规则在ESLint 0.18.0中被引入。</target>
        </trans-unit>
        <trans-unit id="22a4e79e1a7c4b86ae960caf61411eedb0cd54fe" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.19.0.</source>
          <target state="translated">这条规则在ESLint 0.19.0中被引入。</target>
        </trans-unit>
        <trans-unit id="3d144e044cff9cede85dd4fb4692a332f5a8c611" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.2.0.</source>
          <target state="translated">这条规则是在ESLint 0.2.0中引入的。</target>
        </trans-unit>
        <trans-unit id="d1d0165d60b8c8a9fcebfd14fbf09279a7f3f639" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.20.0.</source>
          <target state="translated">这条规则在ESLint 0.20.0中被引入。</target>
        </trans-unit>
        <trans-unit id="a2f350314ced59a62892af55c83b424897809d53" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.21.0.</source>
          <target state="translated">这条规则在ESLint 0.21.0中被引入。</target>
        </trans-unit>
        <trans-unit id="ab2dc7a9090814ada544a547dc63e19480771694" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.22.0.</source>
          <target state="translated">这条规则在ESLint 0.22.0中被引入。</target>
        </trans-unit>
        <trans-unit id="5e9ad892054ec8fd2a9b5a3d99565c92ebc8faa8" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.23.0.</source>
          <target state="translated">这条规则在ESLint 0.23.0中被引入。</target>
        </trans-unit>
        <trans-unit id="a15cf25a65f1772b83540ce070583db9f0bea046" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.24.0.</source>
          <target state="translated">这条规则在ESLint 0.24.0中被引入。</target>
        </trans-unit>
        <trans-unit id="4eb90bb8e8d0e4862e4c3c2110f52eabd22c5d95" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.3.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.3.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="d534051e14d0ae5f4e8d170369285c7a7a833d72" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.0.</source>
          <target state="translated">这条规则在ESLint 0.4.0中被引入。</target>
        </trans-unit>
        <trans-unit id="319d2d39aa4de595f2f2c47bce15edc744470e07" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.1 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.4.1中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="690f00bbc758ba76165c1909c568ddef3d528500" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.1.</source>
          <target state="translated">这条规则在ESLint 0.4.1中被引入。</target>
        </trans-unit>
        <trans-unit id="695fb83fb1f76ea78bd579fd8234746aef2c134b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.3 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.4.3中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="2104f264de79647569d42ba63afe56f30aaf6f4a" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.4.</source>
          <target state="translated">这个规则在ESLint 0.4.4中被引入。</target>
        </trans-unit>
        <trans-unit id="1e6ec86f8fa1f44a023019cea42bc0bc4e88bfe9" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.5.</source>
          <target state="translated">这条规则在ESLint 0.4.5中被引入。</target>
        </trans-unit>
        <trans-unit id="8f8be4f8a8eac1609244f86feda1f955f3651f40" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.5.0.</source>
          <target state="translated">这条规则在ESLint 0.5.0中被引入。</target>
        </trans-unit>
        <trans-unit id="b5bd41becec94711e7ccb19f43f55a58cb3e3dfa" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.5.1.</source>
          <target state="translated">这条规则在ESLint 0.5.1中被引入。</target>
        </trans-unit>
        <trans-unit id="6054666decb9a65e302b946e91edb674546d155d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.6.0 and removed in 2.0.0-beta.3.</source>
          <target state="translated">这条规则是在ESLint 0.6.0中引入的,在2.0.0-beta.3中被删除。</target>
        </trans-unit>
        <trans-unit id="fca55944c7f00c80eb956197f3f3aa9e06639fe8" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.6.0.</source>
          <target state="translated">这条规则在ESLint 0.6.0中被引入。</target>
        </trans-unit>
        <trans-unit id="612fad62eb56b4b3e86c60586d0f3c1dd4590c31" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.7.1.</source>
          <target state="translated">这条规则在ESLint 0.7.1中被引入。</target>
        </trans-unit>
        <trans-unit id="7f6b3af67baac6593755ed43d947a149ef34dbd3" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.8.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.8.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="9205461b44607eff74d1a2a6b6df2c77e39d4ef6" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.8.0 and removed in 1.0.0.</source>
          <target state="translated">这条规则在ESLint 0.8.0中引入,在1.0.0中被删除。</target>
        </trans-unit>
        <trans-unit id="2e0b51fe679fd742117998eff735fd41d10c73b5" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.8.0.</source>
          <target state="translated">这条规则在ESLint 0.8.0中被引入。</target>
        </trans-unit>
        <trans-unit id="24474dd83f68e5a7f601af202c31fa078bd00972" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.9.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.9.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="3f7b8b50cfbe149b58d16cd8e4f33ca11306175f" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.9.0.</source>
          <target state="translated">这条规则在ESLint 0.9.0中被引入。</target>
        </trans-unit>
        <trans-unit id="253a90a08f1d4c26446ac375c0c3081ea7dfdee7" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.0.0-rc-1.</source>
          <target state="translated">这个规则在ESLint 1.0.0-rc-1中被引入。</target>
        </trans-unit>
        <trans-unit id="0fae837ec3710a78127e4c46d18775e05d83bfab" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.0.0-rc-2.</source>
          <target state="translated">这个规则在ESLint 1.0.0-rc-2中被引入。</target>
        </trans-unit>
        <trans-unit id="e6d687a3ec8e9e5e2c006bebf2c6d39a9b9e193f" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.0.0.</source>
          <target state="translated">这个规则是在ESLint 1.0.0中引入的。</target>
        </trans-unit>
        <trans-unit id="fdd4dd0af0c7ac98b3bc3458e813f63eda54538b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.2.0.</source>
          <target state="translated">这条规则是在ESLint 1.2.0中引入的。</target>
        </trans-unit>
        <trans-unit id="6f9dca1480d72ed30fc7619ba2113159d7cd78bd" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.3.0.</source>
          <target state="translated">这条规则是在ESLint 1.3.0中引入的。</target>
        </trans-unit>
        <trans-unit id="cd566e50179c8aa41da415f9330a418b9f8fffa3" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.4.0 and removed in 2.0.0-beta.3.</source>
          <target state="translated">这条规则在ESLint 1.4.0中引入,在2.0.0-beta.3中删除。</target>
        </trans-unit>
        <trans-unit id="8a4e16aa119e73b5bbc5848edd61c1a62e29fd1a" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.4.0.</source>
          <target state="translated">这条规则是在ESLint 1.4.0中引入的。</target>
        </trans-unit>
        <trans-unit id="76a5946c97a32256435372bd726587b5ede25a95" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.6.0.</source>
          <target state="translated">这条规则是在ESLint 1.6.0中引入的。</target>
        </trans-unit>
        <trans-unit id="7464555ca2178196c3754e81bf1f843e65019ee6" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.7.0.</source>
          <target state="translated">这条规则是在ESLint 1.7.0中引入的。</target>
        </trans-unit>
        <trans-unit id="06c23ddc2b85915de8efc2547e0828ccb7698482" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.8.0 and removed in 2.0.0-beta.3.</source>
          <target state="translated">这条规则在ESLint 1.8.0中引入,在2.0.0-beta.3中删除。</target>
        </trans-unit>
        <trans-unit id="ecb498aeb472146953cb795acce90ce8cfbe658b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.8.0.</source>
          <target state="translated">这条规则在ESLint 1.8.0中被引入。</target>
        </trans-unit>
        <trans-unit id="d71bdb52847cd69a78bae99762742e55d3654047" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.9.0.</source>
          <target state="translated">这条规则是在ESLint 1.9.0中引入的。</target>
        </trans-unit>
        <trans-unit id="0846ea821f6cedd21e94c7e12adca7ddb223fafa" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-alpha-1.</source>
          <target state="translated">这个规则是在ESLint 2.0.0-alpha-1中引入的。</target>
        </trans-unit>
        <trans-unit id="c712a022971ad200dbe8c004c2be62c0b4e0b00f" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-alpha-2.</source>
          <target state="translated">这个规则是在ESLint 2.0.0-alpha-2中引入的。</target>
        </trans-unit>
        <trans-unit id="564f72fdde7e54d0c7b589c84bb0dd7853800b72" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-beta.1.</source>
          <target state="translated">这个规则是在ESLint 2.0.0-beta.1中引入的。</target>
        </trans-unit>
        <trans-unit id="94d6b360cd9ef42b0e62eaf087979490427823aa" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-beta.2.</source>
          <target state="translated">这个规则在ESLint 2.0.0-beta.2中被引入。</target>
        </trans-unit>
        <trans-unit id="9649c1088345801ecd6f589d52de6c1232d6307d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-beta.3.</source>
          <target state="translated">这个规则是在ESLint 2.0.0-beta.3中引入的。</target>
        </trans-unit>
        <trans-unit id="5d680d77d0beed833592689309422ca3ce2d7e21" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-rc.0.</source>
          <target state="translated">这个规则在ESLint 2.0.0-rc.0中被引入。</target>
        </trans-unit>
        <trans-unit id="66dbbf4920030e8d0cefe80a34b176ce05b61df0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0.</source>
          <target state="translated">这个规则是在ESLint 2.0.0中引入的。</target>
        </trans-unit>
        <trans-unit id="b71385ef3c3e927c991a219f64384c985c1fcf90" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.10.0.</source>
          <target state="translated">这条规则在ESLint 2.10.0中被引入。</target>
        </trans-unit>
        <trans-unit id="da405f0ddea9153a0ac587fe4e9d8164d01b0c16" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.11.0.</source>
          <target state="translated">这条规则是在ESLint 2.11.0中引入的。</target>
        </trans-unit>
        <trans-unit id="60862391299a40ab31b71b4b297983dc0f6e212b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.12.0.</source>
          <target state="translated">这条规则是在ESLint 2.12.0中引入的。</target>
        </trans-unit>
        <trans-unit id="d03b31c8000a442f60231fc039e08815e8282c25" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.3.0.</source>
          <target state="translated">这条规则是在ESLint 2.3.0中引入的。</target>
        </trans-unit>
        <trans-unit id="7f16b8950c0bde6bb34ed5b7207fdc0b738fb630" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.5.0.</source>
          <target state="translated">这条规则是在ESLint 2.5.0中引入的。</target>
        </trans-unit>
        <trans-unit id="3f8a58c3d4da99f78398d3b64a91632e74df4c87" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.9.0.</source>
          <target state="translated">这个规则是在ESLint 2.9.0中引入的。</target>
        </trans-unit>
        <trans-unit id="a434d13be726419640646ee9cfdb8bd1785581c4" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.1.0.</source>
          <target state="translated">这条规则是在ESLint 3.1.0中引入的。</target>
        </trans-unit>
        <trans-unit id="858b084f5692784698710e54970501ccf2defec3" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.10.0.</source>
          <target state="translated">这条规则在ESLint 3.10.0中被引入。</target>
        </trans-unit>
        <trans-unit id="36cd7ddeb04a21f5897e3d4b76cce15e87b7993f" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.11.0.</source>
          <target state="translated">这个规则是在ESLint 3.11.0中引入的。</target>
        </trans-unit>
        <trans-unit id="661306b0ad7d6ddb13c6aa40cfdba38f3593d8f0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.12.0.</source>
          <target state="translated">这个规则是在ESLint 3.12.0中引入的。</target>
        </trans-unit>
        <trans-unit id="d6cb22ee8de2bdb3f0e4c59288bcbc8a30e84670" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.13.0.</source>
          <target state="translated">这条规则是在ESLint 3.13.0中引入的。</target>
        </trans-unit>
        <trans-unit id="015933b00ddaf61622019f00b91df5be845849c0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.14.0.</source>
          <target state="translated">这条规则是在ESLint 3.14.0中引入的。</target>
        </trans-unit>
        <trans-unit id="c7d64c709b1b89ba9e136d3032dd0f5798649309" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.15.0.</source>
          <target state="translated">这条规则是在ESLint 3.15.0中引入的。</target>
        </trans-unit>
        <trans-unit id="27e706065fbfda963ea99d5bd446422094fd7668" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.17.0.</source>
          <target state="translated">这个规则是在ESLint 3.17.0中引入的。</target>
        </trans-unit>
        <trans-unit id="e09ff4e9278081df15e096fbf4e58b20f023a5ba" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.2.0.</source>
          <target state="translated">这个规则是在ESLint 3.2.0中引入的。</target>
        </trans-unit>
        <trans-unit id="a85d7cc0623d3501b8bca704f4e41164c09a7508" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.3.0.</source>
          <target state="translated">这个规则是在ESLint 3.3.0中引入的。</target>
        </trans-unit>
        <trans-unit id="b3fdf6d7d417b00e1c641b827ad2d5a23756333b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.4.0.</source>
          <target state="translated">这个规则是在ESLint 3.4.0中引入的。</target>
        </trans-unit>
        <trans-unit id="081f1321385ea2db9cfc13a7ef6150816e60cfdf" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.5.0.</source>
          <target state="translated">这个规则是在ESLint 3.5.0中引入的。</target>
        </trans-unit>
        <trans-unit id="249f7539fd800e4a3448bebbb2a5d06ae7bdfbb1" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.8.0.</source>
          <target state="translated">这条规则在ESLint 3.8.0中被引入。</target>
        </trans-unit>
        <trans-unit id="1d3a88f535dd46014212822bfcdb7b92057ec03c" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.9.0.</source>
          <target state="translated">这个规则是在ESLint 3.9.0中引入的。</target>
        </trans-unit>
        <trans-unit id="bc1167ff56b2f569216be1b53cbdda085c3f5925" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.0.0-alpha.0.</source>
          <target state="translated">这个规则在ESLint 4.0.0-alpha.0中被引入。</target>
        </trans-unit>
        <trans-unit id="8e66018d7d2a9d9a93f9a651e08a252a3934f02b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.0.0-alpha.1.</source>
          <target state="translated">这个规则在ESLint 4.0.0-alpha.1中被引入。</target>
        </trans-unit>
        <trans-unit id="2d0c5eb6d6e8a9c24913bcf68ed584d5108017be" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.0.0-beta.0.</source>
          <target state="translated">这个规则在ESLint 4.0.0-beta.0中被引入。</target>
        </trans-unit>
        <trans-unit id="4075da4b266c0716bb2a3425d000c5bcda9eba92" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.0.0-rc.0.</source>
          <target state="translated">这个规则在ESLint 4.0.0-rc.0中被引入。</target>
        </trans-unit>
        <trans-unit id="263b2d3768d21d7440422e01223bff30dee0ef66" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.10.0.</source>
          <target state="translated">这个规则在ESLint 4.10.0中被引入。</target>
        </trans-unit>
        <trans-unit id="23dfe0c95b1e5f030da59fd3fd60ce2334cd60e3" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.12.0.</source>
          <target state="translated">这个规则是在ESLint 4.12.0中引入的。</target>
        </trans-unit>
        <trans-unit id="d18235d7263ad097b73fc8033aad8ae250ea0e30" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.2.0.</source>
          <target state="translated">这个规则是在ESLint 4.2.0中引入的。</target>
        </trans-unit>
        <trans-unit id="4fcbf3e8c966c03a80f69bd99dc0d87087516dc6" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.6.0.</source>
          <target state="translated">这条规则在ESLint 4.6.0中被引入。</target>
        </trans-unit>
        <trans-unit id="c29a10377df13f0c37ec8db63b847477502e584e" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.9.0.</source>
          <target state="translated">这个规则是在ESLint 4.9.0中引入的。</target>
        </trans-unit>
        <trans-unit id="f8550879bfc78f693f7b041484cf06a1cd547e0e" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 5.0.0-alpha.3.</source>
          <target state="translated">这个规则在ESLint 5.0.0-alpha.3中被引入。</target>
        </trans-unit>
        <trans-unit id="418915a53d81a096edd9d904f41083006c174930" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 5.0.0.</source>
          <target state="translated">这个规则是在ESLint 5.0.0中引入的。</target>
        </trans-unit>
        <trans-unit id="8778f2ba95f794b36174b055c644cc679c9917a0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 5.11.0.</source>
          <target state="translated">这个规则是在ESLint 5.11.0中引入的。</target>
        </trans-unit>
        <trans-unit id="1254815cfd5ae6a3473c9ae4729105dfd35da19f" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 5.15.0.</source>
          <target state="translated">这条规则是在ESLint 5.15.0中引入的。</target>
        </trans-unit>
        <trans-unit id="30dee8cf16e05b494ff0f1c742f6ab52422c2d28" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 5.3.0.</source>
          <target state="translated">这个规则是在ESLint 5.3.0中引入的。</target>
        </trans-unit>
        <trans-unit id="56ed5ba939eaef08ee30a77ef55edc5b4b03b38e" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 6.2.0.</source>
          <target state="translated">这条规则是在ESLint 6.2.0中引入的。</target>
        </trans-unit>
        <trans-unit id="f164dff149cab207f752d65fc42fa78c1b1bf72c" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 6.4.0.</source>
          <target state="translated">这条规则在ESLint 6.4.0中被引入。</target>
        </trans-unit>
        <trans-unit id="6d5ce8145cb2e6d14c5a11d1bd60fe572558217d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 6.7.0.</source>
          <target state="translated">这条规则在ESLint 6.7.0中被引入。</target>
        </trans-unit>
        <trans-unit id="0272b678588e3464f83ebf3e50c047cd7c4566bf" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 7.4.0.</source>
          <target state="translated">这条规则在ESLint 7.4.0中被引入。</target>
        </trans-unit>
        <trans-unit id="505fc61fb68ad7eac9fbf317a8b027ff98db1afe" translate="yes" xml:space="preserve">
          <source>This rule will allow keywords to be preceded by an opening curly brace (&lt;code&gt;{&lt;/code&gt;). If you wish to alter this behavior, consider using the &lt;a href=&quot;block-spacing&quot;&gt;block-spacing&lt;/a&gt; rule.</source>
          <target state="translated">此规则将允许关键字前面带有一个大括号（ &lt;code&gt;{&lt;/code&gt; ）。如果要更改此行为，请考虑使用&lt;a href=&quot;block-spacing&quot;&gt;块间​​距&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="20fe84960dba868b1bee83459ec26e8090b503b5" translate="yes" xml:space="preserve">
          <source>This rule will catch blacklisted identifiers that are:</source>
          <target state="translated">这条规则将捕获黑名单上的标识符,这些标识符是。</target>
        </trans-unit>
        <trans-unit id="ace2e020df045c4b4290430e5453d75040eb46e7" translate="yes" xml:space="preserve">
          <source>This rule will catch disallowed identifiers that are:</source>
          <target state="translated">这条规则将捕获不允许的标识符,这些标识符是:</target>
        </trans-unit>
        <trans-unit id="7eb5eed91214ac1aae94e16a4b651e906d0ad590" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistency of spacing after the keywords &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt;, &lt;code&gt;finally&lt;/code&gt;, and &lt;code&gt;with&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; ， &lt;code&gt;do&lt;/code&gt; ， &lt;code&gt;switch&lt;/code&gt; ， &lt;code&gt;try&lt;/code&gt; ， &lt;code&gt;catch&lt;/code&gt; ， &lt;code&gt;finally&lt;/code&gt; ，以及 &lt;code&gt;with&lt;/code&gt; 规则，该规则将强制关键字后的间距一致。</target>
        </trans-unit>
        <trans-unit id="dcfcc88f46e54dda18d566394faa28bc296e5fe2" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistency of spacing after the start of a comment &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;/*&lt;/code&gt;. It also provides several exceptions for various documentation styles.</source>
          <target state="translated">此规则将在注释开始 &lt;code&gt;//&lt;/code&gt; /或 &lt;code&gt;/*&lt;/code&gt; 之后强制间隔的一致性。它还为各种文档样式提供了一些例外。</target>
        </trans-unit>
        <trans-unit id="8dfa11618d345f13d6dcd12dcc9d86af2a778106" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistency of spacing after the start of a line comment &lt;code&gt;//&lt;/code&gt;.</source>
          <target state="translated">此规则将强制在行注释 &lt;code&gt;//&lt;/code&gt; 之后开始间距的一致性。</target>
        </trans-unit>
        <trans-unit id="f5a3463495b63cee8f00d005edffd52a371dbf7b" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistency of spacing before blocks. It is only applied on blocks that don&amp;rsquo;t begin on a new line.</source>
          <target state="translated">该规则将强制在块之前保持间距的一致性。它仅适用于不以新行开头的块。</target>
        </trans-unit>
        <trans-unit id="899e832f0bb86e89cde9cb92bf01264670a49390" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistency of spacing before the keywords &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt;, &lt;code&gt;finally&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;yield&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt; and variable declarations (&lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;var&lt;/code&gt;) and label statements.</source>
          <target state="translated">此规则将强制关键字前间距的一致性 &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; ， &lt;code&gt;do&lt;/code&gt; ， &lt;code&gt;switch&lt;/code&gt; ， &lt;code&gt;throw&lt;/code&gt; ， &lt;code&gt;try&lt;/code&gt; ， &lt;code&gt;catch&lt;/code&gt; ， &lt;code&gt;finally&lt;/code&gt; ， &lt;code&gt;with&lt;/code&gt; ， &lt;code&gt;break&lt;/code&gt; ， &lt;code&gt;continue&lt;/code&gt; ， &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;function&lt;/code&gt; ， &lt;code&gt;yield&lt;/code&gt; ， &lt;code&gt;class&lt;/code&gt; 和变量声明（ &lt;code&gt;let&lt;/code&gt; ， &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;var&lt;/code&gt; ）和label语句。</target>
        </trans-unit>
        <trans-unit id="7ab2ddd96883c5601a31a0952609e729f28ed8c7" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistent spacing directly inside of parentheses, by disallowing or requiring one or more spaces to the right of &lt;code&gt;(&lt;/code&gt; and to the left of &lt;code&gt;)&lt;/code&gt;.</source>
          <target state="translated">通过禁止或要求在 &lt;code&gt;(&lt;/code&gt; 或 &lt;code&gt;)&lt;/code&gt; 左侧的一个或多个空格，此规则将直接在括号内强制使用一致的间距。</target>
        </trans-unit>
        <trans-unit id="64502d44699c8fd75b6ff60a9772a5b144874128" translate="yes" xml:space="preserve">
          <source>This rule will raise a warning when it encounters a function expression wrapped in parentheses with no following invoking parentheses.</source>
          <target state="translated">当遇到用括号包裹的函数表达式,后面没有调用括号时,这条规则会发出警告。</target>
        </trans-unit>
        <trans-unit id="3643c6350c621113de6e30185b7a4873c306ccc3" translate="yes" xml:space="preserve">
          <source>This rule will warn when it encounters a reference to an identifier that has not yet been declared.</source>
          <target state="translated">当遇到对尚未声明的标识符的引用时,该规则会发出警告。</target>
        </trans-unit>
        <trans-unit id="1aac283a5c8db3e909affa821ed372fee55531f6" translate="yes" xml:space="preserve">
          <source>This rule's configuration consists of an object with the following properties:</source>
          <target state="translated">该规则的配置由一个具有以下属性的对象组成。</target>
        </trans-unit>
        <trans-unit id="686680eef8d702bbfccdffade327d244725c31c8" translate="yes" xml:space="preserve">
          <source>This rule, in its default state, does not require any arguments. If you would like to enable one or more of the following you may pass an object with the options set as follows:</source>
          <target state="translated">该规则在其默认状态下不需要任何参数。如果您想启用以下一个或多个选项,您可以传递一个对象,其选项设置如下:</target>
        </trans-unit>
        <trans-unit id="f76749baa8bcf932d6af226607a409b5f06928d1" translate="yes" xml:space="preserve">
          <source>This rules requires a description when creating symbols.</source>
          <target state="translated">本规则在创建符号时需要说明。</target>
        </trans-unit>
        <trans-unit id="c0dfaa172d2d0fbecfbe10aea7c7cfdfe5fbe4fb" translate="yes" xml:space="preserve">
          <source>This saves the output into the &lt;code&gt;results.txt&lt;/code&gt; file.</source>
          <target state="translated">这会将输出保存到 &lt;code&gt;results.txt&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="3b159541e2337ac35e2095ddbe914c9d67ebbf08" translate="yes" xml:space="preserve">
          <source>This setting is similar to &lt;a href=&quot;command-line-interface#--no-inline-config&quot;&gt;--no-inline-config&lt;/a&gt; CLI option.</source>
          <target state="translated">此设置类似于&lt;a href=&quot;command-line-interface#--no-inline-config&quot;&gt;--no-inline-config&lt;/a&gt; CLI选项。</target>
        </trans-unit>
        <trans-unit id="70f0b4c78e3353c2cf50cf6616c689f7ee16a770" translate="yes" xml:space="preserve">
          <source>This setting is similar to &lt;a href=&quot;command-line-interface#--report-unused-disable-directives&quot;&gt;--report-unused-disable-directives&lt;/a&gt; CLI option, but doesn't fail linting (reports as &lt;code&gt;&quot;warn&quot;&lt;/code&gt; severity).</source>
          <target state="translated">此设置类似于&lt;a href=&quot;command-line-interface#--report-unused-disable-directives&quot;&gt;--report-unused-disable-directives&lt;/a&gt; CLI选项，但不会失败（报告为 &lt;code&gt;&quot;warn&quot;&lt;/code&gt; 严重性）。</target>
        </trans-unit>
        <trans-unit id="46894218d56351684b5188fefa742063dbd6acee" translate="yes" xml:space="preserve">
          <source>This setting mimics some of the default behavior from 0.x, but not all. If you don't want to use any of the recommended rules, you can delete this line.</source>
          <target state="translated">这个设置模仿了0.x的一些默认行为,但不是全部。如果你不想使用任何推荐的规则,你可以删除这一行。</target>
        </trans-unit>
        <trans-unit id="875fb57cf6d00cd8167af70a6cec4b5baceb791b" translate="yes" xml:space="preserve">
          <source>This should be rewritten like so:</source>
          <target state="translated">这应该是这样改写的。</target>
        </trans-unit>
        <trans-unit id="22d329895d12968d8e388d4a016d9447d24df47a" translate="yes" xml:space="preserve">
          <source>This syntax is very powerful, and can be used to precisely select many syntactic patterns in your code.</source>
          <target state="translated">这种语法非常强大,可以用来精确选择代码中的许多语法模式。</target>
        </trans-unit>
        <trans-unit id="c6fa14f74ba5c7c56fcdcd75a3d2c3a227de8b5a" translate="yes" xml:space="preserve">
          <source>This throws a &lt;code&gt;TypeError&lt;/code&gt; exception.</source>
          <target state="translated">这将引发 &lt;code&gt;TypeError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="7bf06011358f7568e5271850e42bc163cc698e3e" translate="yes" xml:space="preserve">
          <source>This typically reads, &quot;if the color equals red&quot;, which is arguably a more natural way to describe the comparison.</source>
          <target state="translated">这通常是 &quot;如果颜色等于红色&quot;,这可以说是一种比较自然的描述方式。</target>
        </trans-unit>
        <trans-unit id="f9a598ad54e5a40cedb347d08b1cc89bf10028a9" translate="yes" xml:space="preserve">
          <source>This was a roundabout way to find the variable because it was added after the fact by ESLint. The &lt;code&gt;window&lt;/code&gt; variable was in &lt;code&gt;Scope#through&lt;/code&gt; because the definition couldn't be found.</source>
          <target state="translated">这是查找变量的一种round回方式，因为它是ESLint在事实之后添加的。该 &lt;code&gt;window&lt;/code&gt; 变量是在 &lt;code&gt;Scope#through&lt;/code&gt; ，因为该定义未能找到。</target>
        </trans-unit>
        <trans-unit id="b95c2d2d9ce069899ffb2f9324062dd0c340f08c" translate="yes" xml:space="preserve">
          <source>This was confusing to rule developers as it seemed that rules shouldn't be in charge of validating their own severity. In 2.0.0, rules no longer need to check their own severity.</source>
          <target state="translated">这让规则开发者感到困惑,因为似乎规则不应该负责验证自己的严重性。在2.0.0中,规则不再需要检查自己的严重性。</target>
        </trans-unit>
        <trans-unit id="6a0a2571f7edd8fae2645c0661fe251dab9d8a80" translate="yes" xml:space="preserve">
          <source>This will affect you if you are extending from &lt;code&gt;eslint:recommended&lt;/code&gt;, and are enabling &lt;a href=&quot;../rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../rules/func-style&quot;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt; with only a severity, such as:</source>
          <target state="translated">如果您是从 &lt;code&gt;eslint:recommended&lt;/code&gt; 扩展而来，并且只启用严重性，则启用&lt;a href=&quot;../rules/no-multiple-empty-lines&quot;&gt; &lt;code&gt;no-multiple-empty-lines&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../rules/func-style&quot;&gt; &lt;code&gt;func-style&lt;/code&gt; &lt;/a&gt;，这将对您造成影响，例如：</target>
        </trans-unit>
        <trans-unit id="7922d7623662d9c671198216874744cb22441012" translate="yes" xml:space="preserve">
          <source>This will open up your editor so you can make changes. After that, you'll need to do a forced push to your branch:</source>
          <target state="translated">这将打开你的编辑器,这样你就可以进行修改。之后,你需要对你的分支进行强制推送。</target>
        </trans-unit>
        <trans-unit id="1e28b901c4ec23e324d1147022a9ffd9c884507c" translate="yes" xml:space="preserve">
          <source>Those can be replaced with the following code:</source>
          <target state="translated">这些可以用以下代码代替。</target>
        </trans-unit>
        <trans-unit id="b8fc349a6394c8ce4c8dac8225a5cc00409443c4" translate="yes" xml:space="preserve">
          <source>Those members are defined but not used in ESLint.</source>
          <target state="translated">这些成员被定义,但在ESLint中没有使用。</target>
        </trans-unit>
        <trans-unit id="79219f954c37e740f44b8eeedc1672e971acb7f4" translate="yes" xml:space="preserve">
          <source>Thus, the rule (without the object option) prohibits both of these:</source>
          <target state="translated">因此,该规则(不含对象选项)禁止这两种情况。</target>
        </trans-unit>
        <trans-unit id="92dfc8d078c02dadc9f36bf0c250a63d56acd93a" translate="yes" xml:space="preserve">
          <source>Tips for &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; 的提示：</target>
        </trans-unit>
        <trans-unit id="12248fedc6e3a517137e5a922a0d0e1269b1fca7" translate="yes" xml:space="preserve">
          <source>To add the upstream source for ESLint, run the following in your repository:</source>
          <target state="translated">要添加ESLint的上游源,请在你的仓库中运行以下代码。</target>
        </trans-unit>
        <trans-unit id="e12adbc2086a36a101b25ac6980400eced9fc9c9" translate="yes" xml:space="preserve">
          <source>To avoid conflicts between rules, this rule does not report non-error values used in &lt;code&gt;throw&lt;/code&gt; statements in async functions, even though these lead to Promise rejections. To lint for these cases, use the &lt;a href=&quot;no-throw-literal&quot;&gt;&lt;code&gt;no-throw-literal&lt;/code&gt;&lt;/a&gt; rule.</source>
          <target state="translated">为了避免规则之间的冲突，该规则不会报告异步函数中的 &lt;code&gt;throw&lt;/code&gt; 语句中使用的非错误值，即使这些值会导致Promise拒绝。要在这些情况下起毛，请使用&lt;a href=&quot;no-throw-literal&quot;&gt; &lt;code&gt;no-throw-literal&lt;/code&gt; &lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="538f66a6468f3d6c647b9926379987f5a2085e2e" translate="yes" xml:space="preserve">
          <source>To avoid contradictions with other rules that require multiple spaces, this rule has an &lt;code&gt;exceptions&lt;/code&gt; option to ignore certain nodes.</source>
          <target state="translated">为避免与需要多个空格的其他规则冲突，此规则具有 &lt;code&gt;exceptions&lt;/code&gt; 选项，可忽略某些节点。</target>
        </trans-unit>
        <trans-unit id="e5398e44e4a94ea4634ab5e90d6cb035b83c3671" translate="yes" xml:space="preserve">
          <source>To avoid subtle bugs like this, it's better to always call these methods from &lt;code&gt;Object.prototype&lt;/code&gt;. For example, &lt;code&gt;foo.hasOwnProperty(&quot;bar&quot;)&lt;/code&gt; should be replaced with &lt;code&gt;Object.prototype.hasOwnProperty.call(foo, &quot;bar&quot;)&lt;/code&gt;.</source>
          <target state="translated">为避免此类细微的错误，最好始终从 &lt;code&gt;Object.prototype&lt;/code&gt; 调用这些方法。例如， &lt;code&gt;foo.hasOwnProperty(&quot;bar&quot;)&lt;/code&gt; 应该替换为 &lt;code&gt;Object.prototype.hasOwnProperty.call(foo, &quot;bar&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58dc0124f1404afc0ef74d2cf10ed37334f28828" translate="yes" xml:space="preserve">
          <source>To avoid this ambiguity, in 4.0 references to scoped plugins must include the scope. The config from above should be fixed to:</source>
          <target state="translated">为了避免这种歧义,在4.0中,对作用域插件的引用必须包括作用域。上面的配置应该固定为。</target>
        </trans-unit>
        <trans-unit id="ee30a5b5044b5098a2eec0a3715fc0eeef745ddd" translate="yes" xml:space="preserve">
          <source>To avoid this issue, one might require all single-line &lt;code&gt;if&lt;/code&gt; statements to appear directly after the conditional, without a linebreak:</source>
          <target state="translated">为避免此问题，可能需要所有单行 &lt;code&gt;if&lt;/code&gt; 语句直接出现在条件语句之后，而没有换行符：</target>
        </trans-unit>
        <trans-unit id="aac8c73ad1cc50758b5de5f9a9bdff0e8124c6f3" translate="yes" xml:space="preserve">
          <source>To catch config errors earlier, ESLint v6 will report a linting error if you are trying to configure a non-existent rule.</source>
          <target state="translated">为了更早地发现配置错误,如果你试图配置一个不存在的规则,ESLint v6会报告一个linting错误。</target>
        </trans-unit>
        <trans-unit id="cb843e3d53981deb8abc7dc005824cdecd1ade2e" translate="yes" xml:space="preserve">
          <source>To check state of a code path</source>
          <target state="translated">检查代码路径的状态</target>
        </trans-unit>
        <trans-unit id="4ff92f7a6568bfcddaebb533847e4e8212496d5a" translate="yes" xml:space="preserve">
          <source>To check whether or not this is reachable</source>
          <target state="translated">要检查是否可以到达</target>
        </trans-unit>
        <trans-unit id="3a959c0a9d587954730ee7b4356f17c6e132b1a2" translate="yes" xml:space="preserve">
          <source>To compare against an initialized variable that may or may not have an object value.</source>
          <target state="translated">与一个初始化的变量进行比较,这个变量可能有也可能没有对象值。</target>
        </trans-unit>
        <trans-unit id="62c512b7180a7c74f351c08380b6705d3c61abc0" translate="yes" xml:space="preserve">
          <source>To configure a rule which is defined within a plugin you have to prefix the rule ID with the plugin name and a &lt;code&gt;/&lt;/code&gt;. For example:</source>
          <target state="translated">要配置在插件中定义的规则，您必须在规则ID前面加上插件名称和 &lt;code&gt;/&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="31d56a381f7ad5b91ad260fe2d353e306ee0ccb3" translate="yes" xml:space="preserve">
          <source>To configure global variables inside of a configuration file, set the &lt;code&gt;globals&lt;/code&gt; configuration property to an object containing keys named for each of the global variables you want to use. For each global variable key, set the corresponding value equal to &lt;code&gt;&quot;writable&quot;&lt;/code&gt; to allow the variable to be overwritten or &lt;code&gt;&quot;readonly&quot;&lt;/code&gt; to disallow overwriting. For example:</source>
          <target state="translated">要在配置文件中配置全局变量，请将 &lt;code&gt;globals&lt;/code&gt; 配置属性设置为一个对象，该对象包含为要使用的每个全局变量命名的键。对于每个全局变量键，将对应的值设置为等于 &lt;code&gt;&quot;writable&quot;&lt;/code&gt; 以允许变量被覆盖，或设置为 &lt;code&gt;&quot;readonly&quot;&lt;/code&gt; 以禁止覆盖。例如：</target>
        </trans-unit>
        <trans-unit id="038570de33ddc446fb32433dab83190e57eb2224" translate="yes" xml:space="preserve">
          <source>To configure plugins inside of a configuration file, use the &lt;code&gt;plugins&lt;/code&gt; key, which contains a list of plugin names. The &lt;code&gt;eslint-plugin-&lt;/code&gt; prefix can be omitted from the plugin name.</source>
          <target state="translated">要在配置文件中配置插件，请使用 &lt;code&gt;plugins&lt;/code&gt; 键，其中包含插件名称列表。该 &lt;code&gt;eslint-plugin-&lt;/code&gt; 前缀可以从插件名称被省略。</target>
        </trans-unit>
        <trans-unit id="f6b6a8aa347c25fe69bff51062679d168f8ac129" translate="yes" xml:space="preserve">
          <source>To configure rules inside of a configuration file, use the &lt;code&gt;rules&lt;/code&gt; key along with an error level and any options you want to use. For example:</source>
          <target state="translated">要在配置文件中配置规则，请使用 &lt;code&gt;rules&lt;/code&gt; 键以及错误级别和要使用的任何选项。例如：</target>
        </trans-unit>
        <trans-unit id="4ebbfe48acca16cf580ee75882233871cf409bb0" translate="yes" xml:space="preserve">
          <source>To configure rules inside of a file using configuration comments, use a comment in the following format:</source>
          <target state="translated">要使用配置注释在文件内配置规则,请使用以下格式的注释。</target>
        </trans-unit>
        <trans-unit id="4290412e19f3d42c2eb3bae9e46c3533963451fd" translate="yes" xml:space="preserve">
          <source>To convert your configuration file, pass in the location of your &lt;code&gt;.jscs.json&lt;/code&gt; file using the &lt;code&gt;--jscs&lt;/code&gt; flag:</source>
          <target state="translated">要转换您的配置文件，请使用 &lt;code&gt;--jscs&lt;/code&gt; 标志传递 &lt;code&gt;.jscs.json&lt;/code&gt; 文件的位置：</target>
        </trans-unit>
        <trans-unit id="77785dc236e7b19dd9bed6daf0cc68f44f276c56" translate="yes" xml:space="preserve">
          <source>To create a new configuration, use &lt;code&gt;eslint --init&lt;/code&gt;.</source>
          <target state="translated">要创建新配置，请使用 &lt;code&gt;eslint --init&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce6ce0f45296644008f861b43c9c686e0dc163fc" translate="yes" xml:space="preserve">
          <source>To disable a specific rule on a specific line:</source>
          <target state="translated">要禁用特定行上的特定规则。</target>
        </trans-unit>
        <trans-unit id="0ac11ab6485b3bd3365938c2c8119a6d129eca53" translate="yes" xml:space="preserve">
          <source>To disable all inline config comments, use &lt;code&gt;noInlineConfig&lt;/code&gt; setting. For example:</source>
          <target state="translated">要禁用所有内联配置注释，请使用 &lt;code&gt;noInlineConfig&lt;/code&gt; 设置。例如：</target>
        </trans-unit>
        <trans-unit id="03e0c39d9d8219c16b6cbcfc45577e3c33b02ebf" translate="yes" xml:space="preserve">
          <source>To disable all rules on a specific line, use a line or block comment in one of the following formats:</source>
          <target state="translated">要禁用特定行的所有规则,请使用以下格式之一的行或块注释。</target>
        </trans-unit>
        <trans-unit id="271e327f6c0834035985f27ecece143d28b8459e" translate="yes" xml:space="preserve">
          <source>To disable multiple rules on a specific line:</source>
          <target state="translated">要禁用特定行上的多个规则。</target>
        </trans-unit>
        <trans-unit id="683c891a847acfa4dba3ef3ecf6ed604bdc365ca" translate="yes" xml:space="preserve">
          <source>To disable rule warnings in an entire file, put a &lt;code&gt;/* eslint-disable */&lt;/code&gt; block comment at the top of the file:</source>
          <target state="translated">要在整个文件中禁用规则警告，请在文件顶部放置 &lt;code&gt;/* eslint-disable */&lt;/code&gt; 块注释：</target>
        </trans-unit>
        <trans-unit id="f1745e3074c16577eb0d3188a55a10e1b867a9cd" translate="yes" xml:space="preserve">
          <source>To disable rules inside of a configuration file for a group of files, use the &lt;code&gt;overrides&lt;/code&gt; key along with a &lt;code&gt;files&lt;/code&gt; key. For example:</source>
          <target state="translated">要为一组文件禁用配置文件中的规则，请使用 &lt;code&gt;overrides&lt;/code&gt; 键和 &lt;code&gt;files&lt;/code&gt; 键。例如：</target>
        </trans-unit>
        <trans-unit id="b8f1f08d11bea7b02e90495a32037848c60c55f9" translate="yes" xml:space="preserve">
          <source>To ensure that the lexical declaration only applies to the current case clause wrap your clauses in blocks.</source>
          <target state="translated">为了确保词性声明只适用于当前的大小写子句,将你的子句用块包起来。</target>
        </trans-unit>
        <trans-unit id="203499bc397be69d693c53db5b7bda7324e98567" translate="yes" xml:space="preserve">
          <source>To indicate the npm module to use as your parser, specify it using the &lt;code&gt;parser&lt;/code&gt; option in your &lt;code&gt;.eslintrc&lt;/code&gt; file. For example, the following specifies to use Esprima instead of Espree:</source>
          <target state="translated">要指示要用作解析器的npm模块，请使用 &lt;code&gt;.eslintrc&lt;/code&gt; 文件中的 &lt;code&gt;parser&lt;/code&gt; 选项进行指定。例如，以下指定使用Esprima代替Espree：</target>
        </trans-unit>
        <trans-unit id="f1585cd31339333c37b0e7c375bfef062803fc36" translate="yes" xml:space="preserve">
          <source>To initialize a variable that may later be assign an object value.</source>
          <target state="translated">初始化一个变量,以后可能会分配一个对象值。</target>
        </trans-unit>
        <trans-unit id="d4f82ac6eaff3a37fd353e8d075c1052823073fd" translate="yes" xml:space="preserve">
          <source>To install Polyjuice:</source>
          <target state="translated">要安装Polyjuice。</target>
        </trans-unit>
        <trans-unit id="89616f5d48bf864dd46150c58347b2c372b8b623" translate="yes" xml:space="preserve">
          <source>To keep a sense of consistency when using generators this rule enforces a single position for the &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">为了在使用生成器时保持一致性，此规则对 &lt;code&gt;*&lt;/code&gt; 强制使用单个位置。</target>
        </trans-unit>
        <trans-unit id="014798f51883ce0b4cab2a7f0b2665430ff5f4e4" translate="yes" xml:space="preserve">
          <source>To keep the linting process efficient and unobtrusive, it is useful to verify the performance impact of new rules or modifications to existing rules.</source>
          <target state="translated">为了保持绒毛处理过程的高效和不引人注目,验证新规则或对现有规则的修改对性能的影响是有用的。</target>
        </trans-unit>
        <trans-unit id="7d2dc22ac67dd4ce52516c75cdd733df869e84d8" translate="yes" xml:space="preserve">
          <source>To learn more about JSON Schema, we recommend looking at some &lt;a href=&quot;http://json-schema.org/examples.html&quot;&gt;examples&lt;/a&gt; to start, and also reading &lt;a href=&quot;http://spacetelescope.github.io/understanding-json-schema/&quot;&gt;Understanding JSON Schema&lt;/a&gt; (a free ebook).</source>
          <target state="translated">要了解有关JSON Schema的更多信息，我们建议您看一些&lt;a href=&quot;http://json-schema.org/examples.html&quot;&gt;示例&lt;/a&gt;开始，并阅读《&lt;a href=&quot;http://spacetelescope.github.io/understanding-json-schema/&quot;&gt;了解JSON Schema》&lt;/a&gt;（一本免费的电子书）。</target>
        </trans-unit>
        <trans-unit id="79796a3f8f6c8d8fb890e20aed0a655344148bba" translate="yes" xml:space="preserve">
          <source>To learn more about JSON Schema, we recommend looking at some examples in &lt;a href=&quot;http://json-schema.org/learn/&quot;&gt;website&lt;/a&gt; to start, and also reading &lt;a href=&quot;http://spacetelescope.github.io/understanding-json-schema/&quot;&gt;Understanding JSON Schema&lt;/a&gt; (a free ebook).</source>
          <target state="translated">要了解有关JSON Schema的更多信息，建议您阅读&lt;a href=&quot;http://json-schema.org/learn/&quot;&gt;网站&lt;/a&gt;上的一些示例以开始学习，并阅读&amp;ldquo; &lt;a href=&quot;http://spacetelescope.github.io/understanding-json-schema/&quot;&gt;了解JSON Schema&amp;rdquo;&lt;/a&gt;（免费电子书）。</target>
        </trans-unit>
        <trans-unit id="3d8f5c39c2c8d40a0e743e69935a37baafecadf9" translate="yes" xml:space="preserve">
          <source>To make clear that the plugin requires ESLint to work correctly you have to declare ESLint as a &lt;code&gt;peerDependency&lt;/code&gt; in your &lt;code&gt;package.json&lt;/code&gt;. The plugin support was introduced in ESLint version &lt;code&gt;0.8.0&lt;/code&gt;. Ensure the &lt;code&gt;peerDependency&lt;/code&gt; points to ESLint &lt;code&gt;0.8.0&lt;/code&gt; or later.</source>
          <target state="translated">为了明确说明该插件要求ESLint正常工作，您必须在 &lt;code&gt;package.json&lt;/code&gt; &lt;code&gt;peerDependency&lt;/code&gt; 声明为peerDependency。插件支持在ESLint &lt;code&gt;0.8.0&lt;/code&gt; 版中引入。确保 &lt;code&gt;peerDependency&lt;/code&gt; 指向ESLint &lt;code&gt;0.8.0&lt;/code&gt; 或更高版本。</target>
        </trans-unit>
        <trans-unit id="7f0072825b5e8b7c9c452a6d4e5adffbaf9e06d2" translate="yes" xml:space="preserve">
          <source>To make the upgrade process easier, we've introduced the &lt;a href=&quot;../rules/indent-legacy&quot;&gt;&lt;code&gt;indent-legacy&lt;/code&gt;&lt;/a&gt; rule as a snapshot of the &lt;code&gt;indent&lt;/code&gt; rule from 3.x. If you run into issues from the &lt;code&gt;indent&lt;/code&gt; rule when you upgrade, you should be able to use the &lt;code&gt;indent-legacy&lt;/code&gt; rule to replicate the 3.x behavior. However, the &lt;code&gt;indent-legacy&lt;/code&gt; rule is deprecated and will not receive bugfixes or improvements in the future, so you should eventually switch back to the &lt;code&gt;indent&lt;/code&gt; rule.</source>
          <target state="translated">为了简化升级过程，我们引入了&lt;a href=&quot;../rules/indent-legacy&quot;&gt; &lt;code&gt;indent-legacy&lt;/code&gt; &lt;/a&gt;规则作为3.x版 &lt;code&gt;indent&lt;/code&gt; 规则的快照。如果您在升级时遇到 &lt;code&gt;indent&lt;/code&gt; 规则的问题，则应该能够使用 &lt;code&gt;indent-legacy&lt;/code&gt; 规则来复制3.x行为。但是， &lt;code&gt;indent-legacy&lt;/code&gt; 规则已被弃用，将来也不会收到错误修正或改进，因此您最终应切换 &lt;code&gt;indent&lt;/code&gt; 规则。</target>
        </trans-unit>
        <trans-unit id="06b4a6393df43365fbe0ff6d73f66711fea04a4b" translate="yes" xml:space="preserve">
          <source>To make this rule ignore specific comments, set the &lt;code&gt;ignorePattern&lt;/code&gt; option to a string pattern that will be passed to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt; constructor&lt;/a&gt;.</source>
          <target state="translated">要使此规则忽略特定的注释，请将 &lt;code&gt;ignorePattern&lt;/code&gt; 选项设置为将传递给&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; 构造函数&lt;/a&gt;的字符串模式。</target>
        </trans-unit>
        <trans-unit id="c45b0a04793c13b7a0abac51b4665eb87ba73c97" translate="yes" xml:space="preserve">
          <source>To pass into a function where an object is expected.</source>
          <target state="translated">要传递到一个函数中,在该函数中预期有一个对象。</target>
        </trans-unit>
        <trans-unit id="83e3945e063cd92d025529797a0272c100afe72e" translate="yes" xml:space="preserve">
          <source>To prevent calling the callback multiple times it is important to &lt;code&gt;return&lt;/code&gt; anytime the callback is triggered outside of the main function body. Neglecting this technique often leads to issues where you do something more than once. For example, in the case of an HTTP request, you may try to send HTTP headers more than once leading Node.js to &lt;code&gt;throw&lt;/code&gt; a &lt;code&gt;Can't render headers after they are sent to the client.&lt;/code&gt; error.</source>
          <target state="translated">为了防止多次调用该回调，重要的是在该回调在主体函数体之外被触发时随时 &lt;code&gt;return&lt;/code&gt; 。忽略此技术通常会导致您执行不止一次的问题。例如，在一个HTTP请求的情况下，你可能会试图发送的HTTP头不止一次领先的Node.js来 &lt;code&gt;throw&lt;/code&gt; 一 &lt;code&gt;Can't render headers after they are sent to the client.&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="a0be1e74e739008ed7d10977cc1e906c88cb6fa1" translate="yes" xml:space="preserve">
          <source>To programmatically set &lt;code&gt;.eslintrc.*&lt;/code&gt; options not supported above (such as &lt;code&gt;extends&lt;/code&gt;, &lt;code&gt;overrides&lt;/code&gt; and &lt;code&gt;settings&lt;/code&gt;), define them in a config object passed to &lt;code&gt;baseConfig&lt;/code&gt; instead.</source>
          <target state="translated">要以编程方式设置上面不支持的 &lt;code&gt;.eslintrc.*&lt;/code&gt; 选项（例如 &lt;code&gt;extends&lt;/code&gt; ， &lt;code&gt;overrides&lt;/code&gt; 和 &lt;code&gt;settings&lt;/code&gt; ），请在传递给 &lt;code&gt;baseConfig&lt;/code&gt; 的配置对象中定义它们。</target>
        </trans-unit>
        <trans-unit id="201bfabb446b5a5e524d44ebbd491ddebd41f0f7" translate="yes" xml:space="preserve">
          <source>To propose a change to an existing rule, &lt;a href=&quot;pull-requests&quot;&gt;create a pull request&lt;/a&gt; or &lt;a href=&quot;https://github.com/eslint/eslint/issues/new?template=RULE_CHANGE.md&quot;&gt;new issue&lt;/a&gt; and fill out the template.</source>
          <target state="translated">要提出对现有规则的更改，请&lt;a href=&quot;pull-requests&quot;&gt;创建请求请求&lt;/a&gt;或&lt;a href=&quot;https://github.com/eslint/eslint/issues/new?template=RULE_CHANGE.md&quot;&gt;新问题，&lt;/a&gt;然后填写模板。</target>
        </trans-unit>
        <trans-unit id="e83198b0a74df694fcf2b005dd304829d6849799" translate="yes" xml:space="preserve">
          <source>To report a security vulnerability in ESLint, please use our &lt;a href=&quot;https://hackerone.com/eslint&quot;&gt;HackerOne program&lt;/a&gt;.</source>
          <target state="translated">要报告ESLint中的安全漏洞，请使用我们的&lt;a href=&quot;https://hackerone.com/eslint&quot;&gt;HackerOne程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b567fa067e888b6361b686f01a36f861a714890e" translate="yes" xml:space="preserve">
          <source>To report unused &lt;code&gt;eslint-disable&lt;/code&gt; comments, use &lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; setting. For example:</source>
          <target state="translated">要报告未使用 &lt;code&gt;eslint-disable&lt;/code&gt; 注释，请使用 &lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; 设置。例如：</target>
        </trans-unit>
        <trans-unit id="43674a214ae4f8884b5b999f624a4924ae51e2e3" translate="yes" xml:space="preserve">
          <source>To restore the previous behavior of a string option like &lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt;, replace &lt;code&gt;&quot;never&quot;&lt;/code&gt; with &lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt; in the example above.</source>
          <target state="translated">要恢复字符串选项（如 &lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt; 的先前行为，请在上面的示例中将 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 替换为 &lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93f41caa6af8c347bb85a914ee52d8627febd940" translate="yes" xml:space="preserve">
          <source>To restore the previous options for the rule, you can configure it as follows:</source>
          <target state="translated">要恢复规则之前的选项,可以按以下方式配置。</target>
        </trans-unit>
        <trans-unit id="a1bd13d216162d39f3a12526c2dd871cd53799b1" translate="yes" xml:space="preserve">
          <source>To restrict the use of all Node.js core imports (via https://github.com/nodejs/node/tree/master/lib):</source>
          <target state="translated">限制使用所有的Node.js核心导入(通过https://github.com/nodejs/node/tree/master/lib)。</target>
        </trans-unit>
        <trans-unit id="1c78dcabe0d43517abe82ce3e2716690299693b6" translate="yes" xml:space="preserve">
          <source>To restrict the use of all Node.js core modules (via https://github.com/nodejs/node/tree/master/lib):</source>
          <target state="translated">要限制所有Node.js核心模块的使用(通过https://github.com/nodejs/node/tree/master/lib)。</target>
        </trans-unit>
        <trans-unit id="c55df0a6472dd4b4e66373936e321df946ca7541" translate="yes" xml:space="preserve">
          <source>To return from a function where an object is expected.</source>
          <target state="translated">从函数中返回一个预期对象。</target>
        </trans-unit>
        <trans-unit id="721ccdb4417d969301a1c4093826c5db56bffc2f" translate="yes" xml:space="preserve">
          <source>To run ESLint on Node.js, you must have npm installed. If npm is not installed, follow the instructions here: https://www.npmjs.com/</source>
          <target state="translated">要在Node.js上运行ESLint,你必须安装npm。如果没有安装npm,请按照这里的说明进行操作:https://www.npmjs.com/。</target>
        </trans-unit>
        <trans-unit id="5f23973ffba8e1e7876140b6ac9341e6c0d2443f" translate="yes" xml:space="preserve">
          <source>To run ESLint with this formatter, you can use the &lt;code&gt;-f&lt;/code&gt; (or &lt;code&gt;--format&lt;/code&gt;) command line flag:</source>
          <target state="translated">要使用此格式化程序运行ESLint，可以使用 &lt;code&gt;-f&lt;/code&gt; （或 &lt;code&gt;--format&lt;/code&gt; ）命令行标志：</target>
        </trans-unit>
        <trans-unit id="7ef00b1683cdab559312cccf7254b9d3cdecbcf2" translate="yes" xml:space="preserve">
          <source>To run ESLint with this formatter, you can use the &lt;code&gt;-f&lt;/code&gt; (or &lt;code&gt;--formatter&lt;/code&gt;) command line flag:</source>
          <target state="translated">要使用此格式化程序运行ESLint，可以使用 &lt;code&gt;-f&lt;/code&gt; （或 &lt;code&gt;--formatter&lt;/code&gt; ）命令行标志：</target>
        </trans-unit>
        <trans-unit id="609fc520c5dbe052bd07c90db967ce8109decb8f" translate="yes" xml:space="preserve">
          <source>To see a longer list of results (more than 10), set the environment variable to another value such as &lt;code&gt;TIMING=50&lt;/code&gt; or &lt;code&gt;TIMING=all&lt;/code&gt;.</source>
          <target state="translated">要查看更长的结果列表（超过10个），请将环境变量设置为另一个值，例如 &lt;code&gt;TIMING=50&lt;/code&gt; 或 &lt;code&gt;TIMING=all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a03320f309e4584fa0a9625239401ea837f08db0" translate="yes" xml:space="preserve">
          <source>To specify environments in a configuration file, use the &lt;code&gt;env&lt;/code&gt; key and specify which environments you want to enable by setting each to &lt;code&gt;true&lt;/code&gt;. For example, the following enables the browser and Node.js environments:</source>
          <target state="translated">要在配置文件中指定环境，请使用 &lt;code&gt;env&lt;/code&gt; 键并通过将每个环境设置为 &lt;code&gt;true&lt;/code&gt; 来指定要启用的环境。例如，以下启用浏览器和Node.js环境：</target>
        </trans-unit>
        <trans-unit id="495e8e76dc85c614865914b900b3e79f15c83ac1" translate="yes" xml:space="preserve">
          <source>To specify environments using a comment inside of your JavaScript file, use the following format:</source>
          <target state="translated">要在JavaScript文件中使用注释指定环境,请使用以下格式。</target>
        </trans-unit>
        <trans-unit id="871bade776d5dd80ffa710cb32ea4c1f403ba185" translate="yes" xml:space="preserve">
          <source>To specify globals using a comment inside of your JavaScript file, use the following format:</source>
          <target state="translated">要在JavaScript文件中使用注释指定globals,请使用以下格式。</target>
        </trans-unit>
        <trans-unit id="4d99775a8ebadc5b547b76108d1fcd2ee02b18da" translate="yes" xml:space="preserve">
          <source>To specify processors for a specific kind of files, use the combination of the &lt;code&gt;overrides&lt;/code&gt; key and the &lt;code&gt;processor&lt;/code&gt; key. For example, the following uses the processor &lt;code&gt;a-plugin/markdown&lt;/code&gt; for &lt;code&gt;*.md&lt;/code&gt; files.</source>
          <target state="translated">要为特定类型的文件指定处理器，请使用 &lt;code&gt;overrides&lt;/code&gt; 键和 &lt;code&gt;processor&lt;/code&gt; 键的组合。例如，以下代码对 &lt;code&gt;*.md&lt;/code&gt; 文件使用处理器 &lt;code&gt;a-plugin/markdown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="151531400cce4c0ae71fe4f4c92832cb966d2c79" translate="yes" xml:space="preserve">
          <source>To specify processors for specific kinds of files, use the combination of the &lt;code&gt;overrides&lt;/code&gt; key and the &lt;code&gt;processor&lt;/code&gt; key. For example, the following uses the processor &lt;code&gt;a-plugin/markdown&lt;/code&gt; for &lt;code&gt;*.md&lt;/code&gt; files.</source>
          <target state="translated">要为特定类型的文件指定处理器，请使用 &lt;code&gt;overrides&lt;/code&gt; 键和 &lt;code&gt;processor&lt;/code&gt; 键的组合。例如，以下代码对 &lt;code&gt;*.md&lt;/code&gt; 文件使用处理器 &lt;code&gt;a-plugin/markdown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="723b7b22d828cba77882c9fa33c876e8ac01c597" translate="yes" xml:space="preserve">
          <source>To specify processors in a configuration file, use the &lt;code&gt;processor&lt;/code&gt; key with the concatenated string of a plugin name and a processor name by a slash. For example, the following enables the processor &lt;code&gt;a-processor&lt;/code&gt; that the plugin &lt;code&gt;a-plugin&lt;/code&gt; provided:</source>
          <target state="translated">要在配置文件中指定处理器，请使用 &lt;code&gt;processor&lt;/code&gt; 密钥，并在插件名称和处理器名称的连接字符串后加斜杠。例如，以下命令启用了插件 &lt;code&gt;a-plugin&lt;/code&gt; 提供的处理器 &lt;code&gt;a-processor&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="67c36e41c644a39ed1cc6fc2e78067a36986c4cc" translate="yes" xml:space="preserve">
          <source>To temporarily disable rule warnings in your file, use block comments in the following format:</source>
          <target state="translated">要暂时禁用文件中的规则警告,请使用以下格式的块注释。</target>
        </trans-unit>
        <trans-unit id="eb0874bfc2758468b0b50d63606f56c7bf6e56d2" translate="yes" xml:space="preserve">
          <source>To test one rule explicitly, combine the &lt;code&gt;--no-eslintrc&lt;/code&gt;, and &lt;code&gt;--rule&lt;/code&gt; options:</source>
          <target state="translated">要显式测试一条规则，请结合使用 &lt;code&gt;--no-eslintrc&lt;/code&gt; 和 &lt;code&gt;--rule&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="891f46c7dc6414e9bb18032c28d627aeff17b6b1" translate="yes" xml:space="preserve">
          <source>To use a processor, add its ID to a &lt;code&gt;processor&lt;/code&gt; section in the config file. Processor ID is a concatenated string of plugin name and processor name with a slash as a separator. This can also be added to a &lt;code&gt;overrides&lt;/code&gt; section of the config, to specify which processors should handle which files.</source>
          <target state="translated">要使用处理器，请将其ID添加到配置文件中的 &lt;code&gt;processor&lt;/code&gt; 部分。处理器ID是插件名称和处理器名称的连接字符串，以斜杠作为分隔符。也可以将其添加到配置的 &lt;code&gt;overrides&lt;/code&gt; 部分，以指定哪些处理器应处理哪些文件。</target>
        </trans-unit>
        <trans-unit id="6c4e8891d882a51f0c8905192b3c8f74ba87a214" translate="yes" xml:space="preserve">
          <source>To use custom parsers in tests, we could use &lt;code&gt;parser&lt;/code&gt; property with a package name or file path. However, if a package name was given, it's unclear where the tester should load the parser package from because the tester doesn't know which files are running the tester. In ESLint v6.0.0, &lt;code&gt;RuleTester&lt;/code&gt; disallows &lt;code&gt;parser&lt;/code&gt; property with a package name.</source>
          <target state="translated">要在测试中使用自定义解析器，我们可以将 &lt;code&gt;parser&lt;/code&gt; 属性与包名称或文件路径一起使用。但是，如果给出了程序包名称，则不清楚测试人员应该从何处加载解析器程序包，因为测试人员不知道哪些文件正在运行测试程序。在ESLint v6.0.0中， &lt;code&gt;RuleTester&lt;/code&gt; 不允许使用包名称的 &lt;code&gt;parser&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="e57cc33fc747f8014fd7902fcb60a357b4a1a111" translate="yes" xml:space="preserve">
          <source>To use the rule in ESLint, you would use the unprefixed plugin name, followed by a slash, followed by the rule name. So if this plugin were named &lt;code&gt;eslint-plugin-myplugin&lt;/code&gt;, then in your configuration you'd refer to the rule by the name &lt;code&gt;myplugin/dollar-sign&lt;/code&gt;. Example: &lt;code&gt;&quot;rules&quot;: {&quot;myplugin/dollar-sign&quot;: 2}&lt;/code&gt;.</source>
          <target state="translated">要在ESLint中使用该规则，您将使用无前缀的插件名称，后跟一个斜杠，然后是规则名称。因此，如果此插件名为 &lt;code&gt;eslint-plugin-myplugin&lt;/code&gt; ，则在您的配置中，您将通过名称 &lt;code&gt;myplugin/dollar-sign&lt;/code&gt; 引用该规则。例如： &lt;code&gt;&quot;rules&quot;: {&quot;myplugin/dollar-sign&quot;: 2}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff0243bfd180221afc684bd012fe971d219f3914" translate="yes" xml:space="preserve">
          <source>To use this rule you either need to &lt;a href=&quot;../user-guide/configuring#specifying-environments&quot;&gt;use the &lt;code&gt;es6&lt;/code&gt; environment&lt;/a&gt; or &lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;set &lt;code&gt;ecmaVersion&lt;/code&gt; to &lt;code&gt;6&lt;/code&gt; in &lt;code&gt;parserOptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要使用这个规则，你要么需要&lt;a href=&quot;../user-guide/configuring#specifying-environments&quot;&gt;使用 &lt;code&gt;es6&lt;/code&gt; 环境&lt;/a&gt;或&lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;设置 &lt;code&gt;ecmaVersion&lt;/code&gt; 至 &lt;code&gt;6&lt;/code&gt; 中 &lt;code&gt;parserOptions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f00b91a2a4b27b5dd6a4d6851934df0ad3c4918" translate="yes" xml:space="preserve">
          <source>Token traversal methods</source>
          <target state="translated">代币遍历方法</target>
        </trans-unit>
        <trans-unit id="f588750190bb407612d4d3cc95313c9f0366ef4b" translate="yes" xml:space="preserve">
          <source>Trailing commas in object literals are valid according to the ECMAScript 5 (and ECMAScript 3!) spec, however IE8 (when not in IE8 document mode) and below will throw an error when it encounters trailing commas in JavaScript.</source>
          <target state="translated">根据ECMAScript 5(和ECMAScript 3!)的规范,对象字面中的尾部逗号是有效的,但是IE8(当不在IE8文档模式下时)及以下版本在遇到JavaScript中的尾部逗号时会抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="a5e53b1f9f6188b4f85c8629c6f48dab687880d7" translate="yes" xml:space="preserve">
          <source>Trailing commas in object literals are valid according to the ECMAScript 5 (and ECMAScript 3!) spec. However, IE8 (when not in IE8 document mode) and below will throw an error when it encounters trailing commas in JavaScript.</source>
          <target state="translated">根据ECMAScript 5(和ECMAScript 3!)的规范,对象文字中的尾部逗号是有效的。然而,IE8(当不在IE8文档模式下时)及以下版本在遇到JavaScript中的尾部逗号时,会抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="42f8e54908dd12f18038e48f38d2a5fc210a145c" translate="yes" xml:space="preserve">
          <source>Trailing commas simplify adding and removing items to objects and arrays, since only the lines you are modifying must be touched. Another argument in favor of trailing commas is that it improves the clarity of diffs when an item is added or removed from an object or array:</source>
          <target state="translated">后面的逗号简化了在对象和数组中添加和删除项目的过程,因为只有你要修改的行才必须被触及。另一个支持尾部逗号的论点是,当从对象或数组中添加或删除一个项目时,它可以提高差异的清晰度。</target>
        </trans-unit>
        <trans-unit id="1e1791fddec4ea7e52795883f2a6849c505d7048" translate="yes" xml:space="preserve">
          <source>Trailing newlines in non-empty files are a common UNIX idiom. Benefits of trailing newlines include the ability to concatenate or append to files as well as output files to the terminal without interfering with shell prompts.</source>
          <target state="translated">在非空文件中使用尾部的换行符是一种常见的UNIX习惯。尾部换行的好处包括能够连接或追加文件,以及在不干扰shell提示的情况下向终端输出文件。</target>
        </trans-unit>
        <trans-unit id="e53d9b4b888b92bc998ba043c0f679b9430de24e" translate="yes" xml:space="preserve">
          <source>Treat var as Block Scoped (block-scoped-var)</source>
          <target state="translated">将var处理为块范围(块范围-var)。</target>
        </trans-unit>
        <trans-unit id="4f3d6d9d6adfe503a76d26f73c73b70e417c1fa1" translate="yes" xml:space="preserve">
          <source>Triggering the callback within a nested function</source>
          <target state="translated">触发嵌套函数中的回调。</target>
        </trans-unit>
        <trans-unit id="d6036734261e1407ac1587614623993db6543f63" translate="yes" xml:space="preserve">
          <source>Turn this rule off if you do not care about allowing whitespace around the dot or before the opening bracket before properties of objects if they are on the same line.</source>
          <target state="translated">如果你不在乎在点的周围或对象的属性前的开口括号前允许留白,如果它们在同一条线上,请关闭这个规则。</target>
        </trans-unit>
        <trans-unit id="a6fb61d5bdbd5563cef73b185d48d5a12fd87675" translate="yes" xml:space="preserve">
          <source>Two blank lines should always be used in the following circumstances:</source>
          <target state="translated">在下列情况下,应始终使用两个空行:</target>
        </trans-unit>
        <trans-unit id="23543bb6cae6e3faed2a4ea7359e13f3351fb804" translate="yes" xml:space="preserve">
          <source>Two identical test conditions in the same chain are almost always a mistake in the code. Unless there are side effects in the expressions, a duplicate will evaluate to the same &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; value as the identical expression earlier in the chain, meaning that its branch can never execute.</source>
          <target state="translated">同一链中的两个相同的测试条件几乎总是代码中的错误。除非表达式中有副作用，否则重复项的计算结果与链中早先相同表达式的 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 值相同，这意味着其分支永远无法执行。</target>
        </trans-unit>
        <trans-unit id="6af0c5213fca9f8826d4d810bb2b07a12f3adeda" translate="yes" xml:space="preserve">
          <source>Two new rules have been added to the &lt;a href=&quot;configuring#using-eslintrecommended&quot;&gt;&lt;code&gt;eslint:recommended&lt;/code&gt;&lt;/a&gt; config:</source>
          <target state="translated">&lt;a href=&quot;configuring#using-eslintrecommended&quot;&gt; &lt;code&gt;eslint:recommended&lt;/code&gt; &lt;/a&gt;添加了两个新规则：recommended config：</target>
        </trans-unit>
        <trans-unit id="89012465840cf6a663f53d89d53a93ba89e2ab72" translate="yes" xml:space="preserve">
          <source>Two spaces, not longer and no tabs: Google, npm, Node.js, Idiomatic, Felix</source>
          <target state="translated">两个空格,不长,没有标签。谷歌,npm,Node.js,Idiomatic,Felix。</target>
        </trans-unit>
        <trans-unit id="91d3d6d9190bf1f4632f0830dbb8f846ba8033ea" translate="yes" xml:space="preserve">
          <source>Typing mistakes and misunderstandings about where semicolons are required can lead to semicolons that are unnecessary. While not technically an error, extra semicolons can cause confusion when reading code.</source>
          <target state="translated">打字错误和对需要分号的地方的误解会导致不必要的分号。虽然从技术上讲不是错误,但额外的分号可能会在阅读代码时造成混乱。</target>
        </trans-unit>
        <trans-unit id="6b03881360fb7fb50c7b50f0425294244e2ef376" translate="yes" xml:space="preserve">
          <source>Under non ES2015 environment, it might be ignored merely.</source>
          <target state="translated">在非ES2015环境下,可能会被忽略。</target>
        </trans-unit>
        <trans-unit id="6117511d586c10e8d8d5e71cb63042e9de4e8759" translate="yes" xml:space="preserve">
          <source>Under the strict mode, &lt;code&gt;this&lt;/code&gt; keywords outside of classes or class-like objects might be &lt;code&gt;undefined&lt;/code&gt; and raise a &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="translated">在严格模式下， &lt;code&gt;this&lt;/code&gt; 在类或类对象之外的关键字可能 &lt;code&gt;undefined&lt;/code&gt; 并引发 &lt;code&gt;TypeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="435196d8251f5646211334f3e3f54b6b93ccb010" translate="yes" xml:space="preserve">
          <source>Understanding ES6: Accessor Properties</source>
          <target state="translated">了解ES6:Accessor属性</target>
        </trans-unit>
        <trans-unit id="83561aad3017c9c3ace3fd6ce8b94644c28a5684" translate="yes" xml:space="preserve">
          <source>Understanding ES6: Generators</source>
          <target state="translated">了解ES6:发电机</target>
        </trans-unit>
        <trans-unit id="ab72f7b4a6ebe0315e7168be210b1247953821fe" translate="yes" xml:space="preserve">
          <source>Understanding JavaScript&amp;rsquo;s &amp;lsquo;undefined&amp;rsquo; | JavaScript, JavaScript...</source>
          <target state="translated">了解JavaScript的&amp;ldquo;未定义&amp;rdquo; JavaScript，JavaScript ...</target>
        </trans-unit>
        <trans-unit id="35bb1c8bbba51795c3d24686d2f47445bc17d0b6" translate="yes" xml:space="preserve">
          <source>Understanding JavaScript's Function.prototype.bind</source>
          <target state="translated">了解JavaScript的Function.prototype.bind。</target>
        </trans-unit>
        <trans-unit id="bb8b88dbe8776e9f43a70c7c21cdbf0f5fb1ce3a" translate="yes" xml:space="preserve">
          <source>Unfortunately, this introduces a high potential for confusion since the code author likely meant to write:</source>
          <target state="translated">不幸的是,这带来了很大的混淆可能性,因为代码作者很可能是想写。</target>
        </trans-unit>
        <trans-unit id="d48b11fe7b81214ca619d17883fb3645e879279b" translate="yes" xml:space="preserve">
          <source>Unicode includes the characters which are made with multiple code points. RegExp character class syntax (&lt;code&gt;/[abc]/&lt;/code&gt;) cannot handle characters which are made by multiple code points as a character; those characters will be dissolved to each code point. For example, &lt;code&gt;❇️&lt;/code&gt; is made by &lt;code&gt;❇&lt;/code&gt; (&lt;code&gt;U+2747&lt;/code&gt;) and VARIATION SELECTOR-16 (&lt;code&gt;U+FE0F&lt;/code&gt;). If this character is in RegExp character class, it will match to either &lt;code&gt;❇&lt;/code&gt; (&lt;code&gt;U+2747&lt;/code&gt;) or VARIATION SELECTOR-16 (&lt;code&gt;U+FE0F&lt;/code&gt;) rather than &lt;code&gt;❇️&lt;/code&gt;.</source>
          <target state="translated">Unicode包含由多个代码点组成的字符。 RegExp字符类语法（ &lt;code&gt;/[abc]/&lt;/code&gt; ）无法处理由多个代码点组成的字符。这些字符将被分解到每个代码点。例如， &lt;code&gt;❇️&lt;/code&gt; 由 &lt;code&gt;❇&lt;/code&gt; （ &lt;code&gt;U+2747&lt;/code&gt; ）和VARIATION SELECTOR-16（ &lt;code&gt;U+FE0F&lt;/code&gt; ）组成。如果此字符属于RegExp字符类，它将与 &lt;code&gt;❇&lt;/code&gt; （ &lt;code&gt;U+2747&lt;/code&gt; ）或VARIATION SELECTOR-16（ &lt;code&gt;U+FE0F&lt;/code&gt; ）而不是 &lt;code&gt;❇️&lt;/code&gt; 匹配。</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">单元测试</target>
        </trans-unit>
        <trans-unit id="ed268ddbd2a8fdb80c5132135ac42034d7585ab8" translate="yes" xml:space="preserve">
          <source>Unlike statically-typed languages which enforce that a function returns a specified type of value, JavaScript allows different code paths in a function to return different types of values.</source>
          <target state="translated">与静态类型的语言强制要求函数返回指定类型的值不同,JavaScript允许函数中的不同代码路径返回不同类型的值。</target>
        </trans-unit>
        <trans-unit id="e8255c66699d44e4e1f6dce4f3bf4faf99e81e92" translate="yes" xml:space="preserve">
          <source>Unlike string literals in JavaScript, string literals within JSX attributes can&amp;rsquo;t contain escaped quotes. If you want to have e.g. a double quote within a JSX attribute value, you have to use single quotes as string delimiter.</source>
          <target state="translated">与JavaScript中的字符串文字不同，JSX属性中的字符串文字不能包含转义引号。如果要在JSX属性值中包含双引号，则必须使用单引号作为字符串定界符。</target>
        </trans-unit>
        <trans-unit id="61fa2bfb22938ebb5c32094dc4ee0f186aaf0a6b" translate="yes" xml:space="preserve">
          <source>Unquoted property names / object keys in JavaScript</source>
          <target state="translated">JavaScript中未引用的属性名/对象键值</target>
        </trans-unit>
        <trans-unit id="7ff0c77b350a5aadeaa42ace88086b4b816bf51c" translate="yes" xml:space="preserve">
          <source>Unrecognized properties in config files now cause a fatal error</source>
          <target state="translated">配置文件中未识别的属性现在会导致一个致命的错误。</target>
        </trans-unit>
        <trans-unit id="bac9e5ab73111bc19c6b0aa90418a5f77b3cb1e5" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;postprocess&lt;/code&gt; method to additionally transform the &lt;code&gt;fix&lt;/code&gt; property of reported problems. All autofixable problems will have a &lt;code&gt;fix&lt;/code&gt; property, which is an object with the following schema:</source>
          <target state="translated">更新 &lt;code&gt;postprocess&lt;/code&gt; 方法以附加地转换已报告问题的 &lt;code&gt;fix&lt;/code&gt; 属性。所有可自动 &lt;code&gt;fix&lt;/code&gt; 问题都将具有fix属性，该属性是具有以下架构的对象：</target>
        </trans-unit>
        <trans-unit id="f19b54eaec0be934d9ffb5d7c086f2c3d8bbf5d2" translate="yes" xml:space="preserve">
          <source>Updating the Code</source>
          <target state="translated">更新代码</target>
        </trans-unit>
        <trans-unit id="0081f6b97ccbd31d4c40065dd8731e13aa80ae30" translate="yes" xml:space="preserve">
          <source>Updating the Commit Message</source>
          <target state="translated">更新提交消息</target>
        </trans-unit>
        <trans-unit id="31fdeb34a4f4bc8a7b882018ab434e09d2defd44" translate="yes" xml:space="preserve">
          <source>Usage Examples</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="ef470880f7ed6bef65c435b54eee6bca41e5a18b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; instead of &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. This avoids type coercion errors.</source>
          <target state="translated">使用 &lt;code&gt;===&lt;/code&gt; 和 &lt;code&gt;!==&lt;/code&gt; 代替 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; 。这样可以避免类型强制错误。</target>
        </trans-unit>
        <trans-unit id="011ef28ad58486d3ab69359c58102b7363b2266a" translate="yes" xml:space="preserve">
          <source>Use Node.js-specific features</source>
          <target state="translated">使用Node.js特有的功能</target>
        </trans-unit>
        <trans-unit id="ff690daa270b01343fad8ceed7486bec02ce4b10" translate="yes" xml:space="preserve">
          <source>Use a Plugin</source>
          <target state="translated">使用插件</target>
        </trans-unit>
        <trans-unit id="835f0fad91a05bc46b363064581ce1b2272a0c54" translate="yes" xml:space="preserve">
          <source>Use a formatter</source>
          <target state="translated">使用格式器</target>
        </trans-unit>
        <trans-unit id="19d3d762409d13fdb5e17c521bdcc191df2d866e" translate="yes" xml:space="preserve">
          <source>Use dashes between words.</source>
          <target state="translated">在单词之间使用破折号。</target>
        </trans-unit>
        <trans-unit id="7b394f6356786472bb5d094c3bc4c3f3a803fefd" translate="yes" xml:space="preserve">
          <source>Use formatters</source>
          <target state="translated">使用格式化文件</target>
        </trans-unit>
        <trans-unit id="9066ba971418973fca320cd33a59b04d2bf395e0" translate="yes" xml:space="preserve">
          <source>Use of operator assignment shorthand is a stylistic choice. Leaving this rule turned off would allow developers to choose which style is more readable on a case-by-case basis.</source>
          <target state="translated">使用运算符赋值速记是一种风格上的选择。如果不关闭这一规则,开发者就可以根据具体情况选择哪种风格更易读。</target>
        </trans-unit>
        <trans-unit id="b86bbb341b0e64d3538dc061bfeb6f85388244ee" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;Array&lt;/code&gt; constructor to construct a new array is generally discouraged in favor of array literal notation because of the single-argument pitfall and because the &lt;code&gt;Array&lt;/code&gt; global may be redefined. The exception is when the Array constructor is used to intentionally create sparse arrays of a specified size by giving the constructor a single numeric argument.</source>
          <target state="translated">通常不建议使用 &lt;code&gt;Array&lt;/code&gt; 构造函数构造新数组，而建议使用数组文字表示法，这是因为存在单参数陷阱，并且可能会重新定义 &lt;code&gt;Array&lt;/code&gt; 全局变量。例外是当使用Array构造函数通过为构造函数赋予单个数字参数有意创建指定大小的稀疏数组时。</target>
        </trans-unit>
        <trans-unit id="26a7add0d95cdf823b32ae21e2e3c0d2f08e62bf" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;working-on-issues#issue-labels&quot;&gt;labels of the issue you are working on&lt;/a&gt; to determine the best tag.</source>
          <target state="translated">使用&lt;a href=&quot;working-on-issues#issue-labels&quot;&gt;您正在处理的问题&lt;/a&gt;的标签来确定最佳标签。</target>
        </trans-unit>
        <trans-unit id="bec249e659662f7d5947bf09a1ea1d4a552885b0" translate="yes" xml:space="preserve">
          <source>User Guide</source>
          <target state="translated">用户指南</target>
        </trans-unit>
        <trans-unit id="5ca23839cda095745735c75553a12cf7908955e0" translate="yes" xml:space="preserve">
          <source>User-provided regular expressions in rule options are parsed with the unicode flag</source>
          <target state="translated">在规则选项中,用户提供的正则表达式会用unicode标志进行解析。</target>
        </trans-unit>
        <trans-unit id="7fd4dcddd3c0916bd4f60e031948757e96a9d5fb" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&quot;eslint:all&quot;&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;&quot;eslint:all&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1bfa835d3b3d9b6466c63ac32420431a606ac4b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2ba04df69fc28f857795f88a23c9275ba3ebf7e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;allow&lt;/code&gt; list, we can override and allow specific operators.</source>
          <target state="translated">使用 &lt;code&gt;allow&lt;/code&gt; 列表，我们可以覆盖并允许特定的运算符。</target>
        </trans-unit>
        <trans-unit id="c928729edb2b2cddd950bdbb1bdc2400601f8027" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;description&lt;/code&gt; promotes easier debugging: when a symbol is logged the description is used:</source>
          <target state="translated">使用 &lt;code&gt;description&lt;/code&gt; 可以简化调试：记录符号时，将使用描述：</target>
        </trans-unit>
        <trans-unit id="20bce9c62cd08c2e7b72a20378cd436bb7459b13" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;javascript:&lt;/code&gt; URLs is considered by some as a form of &lt;code&gt;eval&lt;/code&gt;. Code passed in &lt;code&gt;javascript:&lt;/code&gt; URLs has to be parsed and evaluated by the browser in the same way that &lt;code&gt;eval&lt;/code&gt; is processed.</source>
          <target state="translated">使用 &lt;code&gt;javascript:&lt;/code&gt; URL被某些人视为 &lt;code&gt;eval&lt;/code&gt; 的一种形式。在 &lt;code&gt;javascript:&lt;/code&gt; 传递的代码： URL必须由浏览器以与评估 &lt;code&gt;eval&lt;/code&gt; 相同的方式进行解析和评估。</target>
        </trans-unit>
        <trans-unit id="7d3ca8cf5331a50fc0f41fdb41e8a387c87ec5d1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;return await&lt;/code&gt; inside an &lt;code&gt;async function&lt;/code&gt; keeps the current function in the call stack until the Promise that is being awaited has resolved, at the cost of an extra microtask before resolving the outer Promise. &lt;code&gt;return await&lt;/code&gt; can also be used in a try/catch statement to catch errors from another function that returns a Promise.</source>
          <target state="translated">在 &lt;code&gt;async function&lt;/code&gt; 内部使用 &lt;code&gt;return await&lt;/code&gt; 会将当前函数保留在调用堆栈中，直到解决了正在等待的Promise为止，但要付出额外的微任务，才能解决外部Promise。还可以在try / catch语句中使用 &lt;code&gt;return await&lt;/code&gt; 来捕获来自另一个返回Promise的函数的错误。</target>
        </trans-unit>
        <trans-unit id="7736010ecd5cb06e1bd0f2122d0622ef44859f84" translate="yes" xml:space="preserve">
          <source>Using Configuration Comments</source>
          <target state="translated">使用配置注释</target>
        </trans-unit>
        <trans-unit id="dbd293c2b3a5260fa83b1710464219faa5a14998" translate="yes" xml:space="preserve">
          <source>Using Configuration Files</source>
          <target state="translated">使用配置文件</target>
        </trans-unit>
        <trans-unit id="5dc143959128e38d9a55d127c3233709b9ccb511" translate="yes" xml:space="preserve">
          <source>Using Different Options for Line and Block Comments</source>
          <target state="translated">使用行和块注释的不同选项</target>
        </trans-unit>
        <trans-unit id="eeb7f893b5d295199ac44ad44dd9b3270246f3bd" translate="yes" xml:space="preserve">
          <source>Using Environment Variables</source>
          <target state="translated">使用环境变量</target>
        </trans-unit>
        <trans-unit id="b302e76ff285b7e457c22f8d88c69b64b865b32c" translate="yes" xml:space="preserve">
          <source>Using a Shareable Config</source>
          <target state="translated">使用可共享配置</target>
        </trans-unit>
        <trans-unit id="e0c468455ec70051b77f083d9eccde45f228ea57" translate="yes" xml:space="preserve">
          <source>Using a configuration file</source>
          <target state="translated">使用配置文件</target>
        </trans-unit>
        <trans-unit id="2cc5fc29ca8bb9b59b9fff0159b64a0e0aa2b748" translate="yes" xml:space="preserve">
          <source>Using a shareable configuration package</source>
          <target state="translated">使用可共享的配置包</target>
        </trans-unit>
        <trans-unit id="619cd389a4db55eac7086b03b5cfa54636ecf9b8" translate="yes" xml:space="preserve">
          <source>Using a single &lt;code&gt;import&lt;/code&gt; statement per module will make the code clearer because you can see everything being imported from that module on one line.</source>
          <target state="translated">每个模块使用单个 &lt;code&gt;import&lt;/code&gt; 语句将使代码更清晰，因为您可以看到从该模块导入的所有内容都在一行上。</target>
        </trans-unit>
        <trans-unit id="e6fa437c6c23d5b7b45da7a2e2a1d10e28a8688b" translate="yes" xml:space="preserve">
          <source>Using an Alternate File</source>
          <target state="translated">使用备用文件</target>
        </trans-unit>
        <trans-unit id="586259f4885483121f27c4e9aa07069bd6c9cda2" translate="yes" xml:space="preserve">
          <source>Using eslintIgnore in package.json</source>
          <target state="translated">在package.json中使用eslintIgnore。</target>
        </trans-unit>
        <trans-unit id="1b207cb89b9319ffb89553d14d6cf162c46b7f56" translate="yes" xml:space="preserve">
          <source>Using message placeholders</source>
          <target state="translated">使用信息占位符</target>
        </trans-unit>
        <trans-unit id="3e16a605232a4a1c356a288a74f6943a34b8ae6f" translate="yes" xml:space="preserve">
          <source>Using selectors in the &lt;code&gt;no-restricted-syntax&lt;/code&gt; rule can give you a lot of control over problematic patterns in your codebase, without needing to write custom rules to detect each pattern.</source>
          <target state="translated">在 &lt;code&gt;no-restricted-syntax&lt;/code&gt; 规则中使用选择器可以使您对代码库中有问题的模式进行大量控制，而无需编写自定义规则来检测每个模式。</target>
        </trans-unit>
        <trans-unit id="accb6ab3309644f22a59e564f296b91db2b9ed86" translate="yes" xml:space="preserve">
          <source>Using stdin</source>
          <target state="translated">使用stdin</target>
        </trans-unit>
        <trans-unit id="8ce680923ed405f0b52194a8fd5d25c5e6caea79" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&quot;always&quot;&lt;/code&gt; option means that this rule will report any comments which start with a lowercase letter. This is the default configuration for this rule.</source>
          <target state="translated">使用 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 选项意味着该规则将报告以小写字母开头的所有注释。这是此规则的默认配置。</target>
        </trans-unit>
        <trans-unit id="96d576d0cd2c820dcea748257a03f18a8f838d88" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&quot;never&quot;&lt;/code&gt; option means that this rule will report any comments which start with an uppercase letter.</source>
          <target state="translated">使用 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 选项意味着该规则将报告以大写字母开头的所有注释。</target>
        </trans-unit>
        <trans-unit id="d2998154fd0b30ddea4d0f0a30a540b6234a2665" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;void&lt;/code&gt; operator to generate the value of &lt;code&gt;undefined&lt;/code&gt; if necessary.</source>
          <target state="translated">必要时使用 &lt;code&gt;void&lt;/code&gt; 运算符生成 &lt;code&gt;undefined&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="44db3e7e42ba5ebb8bf1cf0e5de90b5c7351d5d0" translate="yes" xml:space="preserve">
          <source>Using the configuration from a plugin</source>
          <target state="translated">使用插件的配置</target>
        </trans-unit>
        <trans-unit id="d8a14a71e022c4c1cc64b31add3a38d0148f7afa" translate="yes" xml:space="preserve">
          <source>Using this rule with version control systems</source>
          <target state="translated">在版本控制系统中使用此规则</target>
        </trans-unit>
        <trans-unit id="8ca2c430d89057de6cb5c35279ea3569d34d0136" translate="yes" xml:space="preserve">
          <source>Usually, the code should be refactored to create all the promises at once, then get access to the results using &lt;code&gt;Promise.all()&lt;/code&gt;. Otherwise, each successive operation will not start until the previous one has completed.</source>
          <target state="translated">通常，应重构代码以一次创建所有的 &lt;code&gt;Promise.all()&lt;/code&gt; ，然后使用Promise.all（）访问结果。否则，每个后续操作将在上一个操作完成之前开始。</target>
        </trans-unit>
        <trans-unit id="cb8af0b089c8e16de1808bbf42dbab1812ea017b" translate="yes" xml:space="preserve">
          <source>Valid Code</source>
          <target state="translated">有效代码</target>
        </trans-unit>
        <trans-unit id="532e17316f9909fba79f94428471eb6888d1b255" translate="yes" xml:space="preserve">
          <source>Variable Declarations</source>
          <target state="translated">变量声明</target>
        </trans-unit>
        <trans-unit id="6d5e51d3d0dfe28a6c4746735fcea731cc9e3349" translate="yes" xml:space="preserve">
          <source>Variable Shadowing</source>
          <target state="translated">可变影子</target>
        </trans-unit>
        <trans-unit id="f34af863a0250ddb43caba08acbf9b7f07738053" translate="yes" xml:space="preserve">
          <source>Variable Sorting (sort-vars)</source>
          <target state="translated">变量排序(排序变量</target>
        </trans-unit>
        <trans-unit id="2bd0e8a368c0c0738f15dfd8df4c9fa0b30a21c3" translate="yes" xml:space="preserve">
          <source>Variable interface</source>
          <target state="translated">可变接口</target>
        </trans-unit>
        <trans-unit id="6d8103227eb16ff6b41d4c197ddfa518ef072c15" translate="yes" xml:space="preserve">
          <source>Variable names should be formatted in camel case with the first letter being lowercase and the first letter of each subsequent word being uppercase. The first word of a variable name should be a noun (not a verb) to avoid confusion with functions. Do not use underscore for variable names.</source>
          <target state="translated">变量名的格式应该是骆驼大小写,第一个字母为小写,后面每个单词的第一个字母为大写。变量名的第一个字应该是名词(不是动词),以避免与函数混淆。变量名不要使用下划线。</target>
        </trans-unit>
        <trans-unit id="3944885d1531d2b22b8820788659f91568e08837" translate="yes" xml:space="preserve">
          <source>VariableDeclarator</source>
          <target state="translated">VariableDeclarator</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="85379bf6ac3527cdbeb09a4791aad3097a8d3c57" translate="yes" xml:space="preserve">
          <source>Variables can be declared at any point in JavaScript code using &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;const&lt;/code&gt;. There are many styles and preferences related to the declaration of variables, and one of those is deciding on how many variable declarations should be allowed in a single function.</source>
          <target state="translated">可以使用 &lt;code&gt;var&lt;/code&gt; ， &lt;code&gt;let&lt;/code&gt; 或 &lt;code&gt;const&lt;/code&gt; 在JavaScript代码的任何位置声明变量。有许多与变量声明相关的样式和首选项，其中之一是确定单个函数中应允许多少个变量声明。</target>
        </trans-unit>
        <trans-unit id="b737513f2b96c7e55dfed83a96a4d58ff87a2661" translate="yes" xml:space="preserve">
          <source>Variables defined in &lt;code&gt;/* global */&lt;/code&gt; comments.</source>
          <target state="translated">在 &lt;code&gt;/* global */&lt;/code&gt; 注释中定义的变量。</target>
        </trans-unit>
        <trans-unit id="892290ac7a5821c2d16856260d019953f711502f" translate="yes" xml:space="preserve">
          <source>Variables defined in config files.</source>
          <target state="translated">配置文件中定义的变量。</target>
        </trans-unit>
        <trans-unit id="e7b48dd3dfa48fd2be30f8be1c1607d958c45208" translate="yes" xml:space="preserve">
          <source>Variables in a loop condition often are modified in the loop. If not, it's possibly a mistake.</source>
          <target state="translated">循环条件中的变量往往在循环中被修改。如果没有,可能是个错误。</target>
        </trans-unit>
        <trans-unit id="2a17ee3a5cb7b17046c7c0ffba2f3dae33af728c" translate="yes" xml:space="preserve">
          <source>Variables must be initialized at declaration (default)</source>
          <target state="translated">变量必须在声明时初始化(默认)</target>
        </trans-unit>
        <trans-unit id="c8ce71ce0391e3c1f3236dc47ecf35e3e114a29e" translate="yes" xml:space="preserve">
          <source>Variables must not be initialized at declaration</source>
          <target state="translated">变量不得在声明时初始化</target>
        </trans-unit>
        <trans-unit id="c6ff9a26e1b5b3339f7fd5e3a8a9767b43c9c97f" translate="yes" xml:space="preserve">
          <source>Variables must not be initialized at declaration, except in for loops, where it is allowed</source>
          <target state="translated">变量不能在声明时初始化,除非在for循环中允许初始化。</target>
        </trans-unit>
        <trans-unit id="bfd7f1b7ef4128d51344a9daf2228af23d80ba06" translate="yes" xml:space="preserve">
          <source>Variables should not be declared in the initialization section of a &lt;code&gt;for&lt;/code&gt; statement.</source>
          <target state="translated">变量不应在 &lt;code&gt;for&lt;/code&gt; 语句的初始化部分中声明。</target>
        </trans-unit>
        <trans-unit id="5c001ee08698935333b13c201a69d90cdf48e3fd" translate="yes" xml:space="preserve">
          <source>Variables that act as constants (values that won't be changed) should be formatted using all uppercase letters with words separated by a single underscore.</source>
          <target state="translated">作为常量的变量(不会被改变的值)应该使用所有大写字母和单词的格式,用一个下划线分隔。</target>
        </trans-unit>
        <trans-unit id="2e99b317be9905e39e1a207a58f6e60f75b0fe6f" translate="yes" xml:space="preserve">
          <source>Variables that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring. Such variables take up space in the code and can lead to confusion by readers.</source>
          <target state="translated">在代码中声明了变量却没有在任何地方使用的变量,很可能是由于重构不完全而导致的错误。这样的变量占用了代码的空间,会导致读者的混淆。</target>
        </trans-unit>
        <trans-unit id="c74715246fd4d194bd4188a3a75791e4b702dc5b" translate="yes" xml:space="preserve">
          <source>Variables that should be &lt;code&gt;undefined&lt;/code&gt; are simply left uninitialized. (All uninitialized variables automatically get the value of &lt;code&gt;undefined&lt;/code&gt; in JavaScript.)</source>
          <target state="translated">应该将 &lt;code&gt;undefined&lt;/code&gt; 变量保留为未初始化。（所有未初始化的变量会自动获取JavaScript 中 &lt;code&gt;undefined&lt;/code&gt; 的值。）</target>
        </trans-unit>
        <trans-unit id="c9e0a5d87acbaea46b5478bcb73fad51d8fd6826" translate="yes" xml:space="preserve">
          <source>Various whitespace characters can be inputted by programmers by mistake for example from copying or keyboard shortcuts. Pressing Alt + Space on macOS adds in a non breaking space character for example.</source>
          <target state="translated">各种空白字符可能被程序员误输入,例如从复制或键盘快捷键。例如,在macOS上按Alt+Space键可以添加一个不间断的空格字符。</target>
        </trans-unit>
        <trans-unit id="85447ed9d63f1204cb8d98c10d07fa44bffd575f" translate="yes" xml:space="preserve">
          <source>Verify calls of &lt;code&gt;super()&lt;/code&gt; in constructors (constructor-super)</source>
          <target state="translated">验证构造函数中的 &lt;code&gt;super()&lt;/code&gt; 调用（constructor-super）</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="97d4ee0ebcffa2551648daf9af67c8a9b436fca2" translate="yes" xml:space="preserve">
          <source>Version control systems sometimes have special behavior for linebreaks. To make it easy for developers to contribute to your codebase from different platforms, you may want to configure your VCS to handle linebreaks appropriately.</source>
          <target state="translated">版本控制系统有时对行中断有特殊的行为。为了使开发人员能够轻松地从不同的平台向您的代码库做出贡献,您可能需要配置您的VCS来适当地处理行中断。</target>
        </trans-unit>
        <trans-unit id="e9f9cfd066fc0985106023b392c00252b116102c" translate="yes" xml:space="preserve">
          <source>Very long lines of code in any language can be difficult to read. In order to aid in readability and maintainability many coders have developed a convention to limit lines of code to X number of characters (traditionally 80 characters).</source>
          <target state="translated">在任何语言中,非常长的代码行都是难以阅读的。为了帮助提高可读性和可维护性,许多编码人员制定了一个惯例,将代码行限制在X个字符(传统上是80个字符)以内。</target>
        </trans-unit>
        <trans-unit id="584ebc802dcce40efe78e737e24b45e2d537c06c" translate="yes" xml:space="preserve">
          <source>Very short identifier names like &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;_t&lt;/code&gt; or very long ones like &lt;code&gt;hashGeneratorResultOutputContainerObject&lt;/code&gt; can make code harder to read and potentially less maintainable. To prevent this, one may enforce a minimum and/or maximum identifier length.</source>
          <target state="translated">很短的标识符名称（例如 &lt;code&gt;e&lt;/code&gt; ， &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;_t&lt;/code&gt; )或很长的标识符名称（例如 &lt;code&gt;hashGeneratorResultOutputContainerObject&lt;/code&gt; )会使代码难以阅读，并且可能难以维护。为了防止这种情况，可以强制执行最小和/或最大标识符长度。</target>
        </trans-unit>
        <trans-unit id="14a6eae4840d70e1008eaa9e5de7d019a31c7b73" translate="yes" xml:space="preserve">
          <source>Vim:</source>
          <target state="translated">Vim:</target>
        </trans-unit>
        <trans-unit id="91ad776df06e55e887b661baf20d704d31aca239" translate="yes" xml:space="preserve">
          <source>Visual Studio Code: &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&quot;&gt;ESLint Extension&lt;/a&gt;</source>
          <target state="translated">Visual Studio代码：&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&quot;&gt;ESLint扩展&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db74b0813fc54ab1954f585e68f426fa2dae2151" translate="yes" xml:space="preserve">
          <source>Want to make a change to an existing rule? This section explains the process and how we evaluate such proposals.</source>
          <target state="translated">想对现有规则进行修改?本节解释了这一过程以及我们如何评估这些建议。</target>
        </trans-unit>
        <trans-unit id="aa01e84dc33f606dadcb9953b4367629a4af246e" translate="yes" xml:space="preserve">
          <source>Want to skip ahead and just start using ESLint? This section gives a high-level overview of installation, setup, and configuration options.</source>
          <target state="translated">想跳过并直接开始使用ESLint吗?本节提供了安装、设置和配置选项的高级概述。</target>
        </trans-unit>
        <trans-unit id="5f19b7cfb75065744f09c3f3dbd1dd8602fb5742" translate="yes" xml:space="preserve">
          <source>Warning: a promise was rejected with a non-error</source>
          <target state="translated">警告:以非错误方式拒绝了一个承诺。</target>
        </trans-unit>
        <trans-unit id="e8c03ef8e0919bf50f1a8491261b96a94272575b" translate="yes" xml:space="preserve">
          <source>Warns whenever &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; is used in the global scope such that it could contaminate concatenated files.</source>
          <target state="translated">在全局范围内使用 &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; 发出警告，以免污染并置文件。</target>
        </trans-unit>
        <trans-unit id="862cf79158d46c84f106f5399e9001e0931a8c82" translate="yes" xml:space="preserve">
          <source>We can embed expressions in template strings with using a pair of &lt;code&gt;${&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt;.</source>
          <target state="translated">我们可以使用一对 &lt;code&gt;${&lt;/code&gt; 和 &lt;code&gt;}&lt;/code&gt; 将表达式嵌入模板字符串中。</target>
        </trans-unit>
        <trans-unit id="3c5a902008a05777020d1e0667971fb4a844bf34" translate="yes" xml:space="preserve">
          <source>We cannot modify variables that are declared using &lt;code&gt;const&lt;/code&gt; keyword. It will raise a runtime error.</source>
          <target state="translated">我们无法修改使用 &lt;code&gt;const&lt;/code&gt; 关键字声明的变量。它将引发运行时错误。</target>
        </trans-unit>
        <trans-unit id="a15e550937b9a265d4784deb7bacb70d802adae3" translate="yes" xml:space="preserve">
          <source>We found some bugs in our scope analysis that needed to be addressed. Specifically, we were not properly accounting for global variables in all the ways they are defined.</source>
          <target state="translated">我们在范围分析中发现了一些需要解决的错误。具体来说,我们并没有以定义全局变量的所有方式对其进行适当的计算。</target>
        </trans-unit>
        <trans-unit id="6bfb630517b3d4cb1d3083f6fd0e14a3770dd201" translate="yes" xml:space="preserve">
          <source>We get a lot of proposals for new rules in ESLint. This section explains how we determine which rules are accepted and what information you should provide to help us evaluate your proposal.</source>
          <target state="translated">在ESLint中,我们收到了很多关于新规则的建议,本节将解释我们如何确定哪些规则被接受,以及您应该提供哪些信息帮助我们评估您的建议。本节解释了我们如何确定哪些规则被接受,以及您应该提供哪些信息来帮助我们评估您的建议。</target>
        </trans-unit>
        <trans-unit id="32129814c6be2f4221beec5e8923016c3c8da569" translate="yes" xml:space="preserve">
          <source>We hope that by following these guidelines we will be able to continue improving and working to make ESLint the best tool it can be while causing as little disruption to our users as possible during the process.</source>
          <target state="translated">我们希望通过遵循这些准则,我们能够继续改进和努力使ESLint成为最好的工具,同时在这个过程中尽可能减少对用户的干扰。</target>
        </trans-unit>
        <trans-unit id="bc68a58faf81b9993b43de6f1d7e5591db60891c" translate="yes" xml:space="preserve">
          <source>We may ask you to make changes, rebase, or squash your commits.</source>
          <target state="translated">我们可能会要求你对你的提交进行修改、重写或压制。</target>
        </trans-unit>
        <trans-unit id="be531f0e502915f32cc4ed514f6cfe1d76954139" translate="yes" xml:space="preserve">
          <source>We need all of this information in order to determine whether or not the change is a good candidate for inclusion.</source>
          <target state="translated">我们需要所有这些信息,以确定该变化是否适合纳入。</target>
        </trans-unit>
        <trans-unit id="13e23ea2d55941a7a936ff6af2c7bd00ea304737" translate="yes" xml:space="preserve">
          <source>We need all of this information in order to determine whether or not the rule is a good core rule candidate.</source>
          <target state="translated">我们需要所有这些信息来确定该规则是否是一个好的核心规则候选人。</target>
        </trans-unit>
        <trans-unit id="d52ee6fc1b0c59a8b592728b6b5dfb705e48d68a" translate="yes" xml:space="preserve">
          <source>We use labels to indicate the status of issues. The most complete documentation on the labels is found in the &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues#when-an-issue-is-opened&quot;&gt;Maintainer Guide&lt;/a&gt;, but most contributors should find the information on this page sufficient. The most important questions that labels can help you, as a contributor, answer are:</source>
          <target state="translated">我们使用标签来指示问题的状态。标签上最完整的文档可以在《&lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues#when-an-issue-is-opened&quot;&gt;维护人员指南》中&lt;/a&gt;找到，但是大多数贡献者应该在此页面上找到足够的信息。标签可以帮助您作为贡献者的最重要问题是：</target>
        </trans-unit>
        <trans-unit id="76127d70180cb6a86e3b0d95edc18d737fb0c703" translate="yes" xml:space="preserve">
          <source>We use labels to indicate the status of issues. The most complete documentation on the labels is found in the &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues.html#when-an-issue-is-opened&quot;&gt;Maintainer Guide&lt;/a&gt;, but most contributors should find the information on this page sufficient. The most important questions that labels can help you, as a contributor, answer are:</source>
          <target state="translated">我们使用标签来指示问题的状态。标签上最完整的文档可以在《&lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues.html#when-an-issue-is-opened&quot;&gt;维护人员指南》中&lt;/a&gt;找到，但是大多数贡献者应该在此页面上找到足够的信息。标签可以帮助您作为贡献者的最重要问题是：</target>
        </trans-unit>
        <trans-unit id="fd0b33554faf50e6fb5d78c7badaed2df6f5a2b2" translate="yes" xml:space="preserve">
          <source>We're always looking for contributions from the community. This section explains the requirements for pull requests and the process of contributing code.</source>
          <target state="translated">我们一直在寻找来自社区的贡献。本节解释了拉取请求的要求和贡献代码的过程。</target>
        </trans-unit>
        <trans-unit id="1de59a98d6b9c70fbf9f8b419711208bf9e9bf8d" translate="yes" xml:space="preserve">
          <source>Webpack: &lt;a href=&quot;https://www.npmjs.com/package/eslint-loader&quot;&gt;eslint-loader&lt;/a&gt;</source>
          <target state="translated">Webpack：&lt;a href=&quot;https://www.npmjs.com/package/eslint-loader&quot;&gt;eslint加载器&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ba525c7d4c75ba8b5f7dce088f61242a494e7bf" translate="yes" xml:space="preserve">
          <source>What actually happened.</source>
          <target state="translated">实际发生了什么。</target>
        </trans-unit>
        <trans-unit id="df224434e65934e06d2644009972ca3b020b97e8" translate="yes" xml:space="preserve">
          <source>What can selectors be used for?</source>
          <target state="translated">选择器可以用来做什么?</target>
        </trans-unit>
        <trans-unit id="48681659913bbea6a16673eed0fa9cebd2513f10" translate="yes" xml:space="preserve">
          <source>What is a selector?</source>
          <target state="translated">什么是选择器?</target>
        </trans-unit>
        <trans-unit id="0465271c771ae7129e8e463a09cff2488f5861e4" translate="yes" xml:space="preserve">
          <source>What is the matter with script-targeted URLs?</source>
          <target state="translated">脚本目标网址是怎么回事?</target>
        </trans-unit>
        <trans-unit id="775aca44e303c9a28765a76261e77703f8d71221" translate="yes" xml:space="preserve">
          <source>What is the priority of this issue? Because we have a lot of issues, we prioritize certain issues above others. The following is the list of priorities, from highest to lowest:</source>
          <target state="translated">这个问题的优先级是什么?因为我们有很多问题,所以我们将某些问题的优先级高于其他问题。以下是优先事项清单,从高到低:</target>
        </trans-unit>
        <trans-unit id="a6034cda9e3bc4426f1a95f9aa43ca0e804ff990" translate="yes" xml:space="preserve">
          <source>What is this issue about? Labels describing the nature of issues include &lt;code&gt;bug&lt;/code&gt;, &lt;code&gt;enhancement&lt;/code&gt;, &lt;code&gt;feature&lt;/code&gt;, &lt;code&gt;question&lt;/code&gt;, &lt;code&gt;rule&lt;/code&gt;, &lt;code&gt;documentation&lt;/code&gt;, &lt;code&gt;core&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;cli&lt;/code&gt;, &lt;code&gt;infrastructure&lt;/code&gt;, &lt;code&gt;breaking&lt;/code&gt;, and &lt;code&gt;chore&lt;/code&gt;. These are documented in the &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues#types-of-issues&quot;&gt;Maintainer Guide&lt;/a&gt;.</source>
          <target state="translated">这是什么问题？描述问题性质的标签包括 &lt;code&gt;bug&lt;/code&gt; ， &lt;code&gt;enhancement&lt;/code&gt; ， &lt;code&gt;feature&lt;/code&gt; ， &lt;code&gt;question&lt;/code&gt; ， &lt;code&gt;rule&lt;/code&gt; ， &lt;code&gt;documentation&lt;/code&gt; ， &lt;code&gt;core&lt;/code&gt; ，内部 &lt;code&gt;build&lt;/code&gt; ， &lt;code&gt;cli&lt;/code&gt; ， &lt;code&gt;infrastructure&lt;/code&gt; ， &lt;code&gt;breaking&lt;/code&gt; 和 &lt;code&gt;chore&lt;/code&gt; 。这些内容记录在《&lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues#types-of-issues&quot;&gt;维护人员指南》中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61f99ec705c943f1f33d040995e8f627884b7cf0" translate="yes" xml:space="preserve">
          <source>What is this issue about? Labels describing the nature of issues include &lt;code&gt;bug&lt;/code&gt;, &lt;code&gt;enhancement&lt;/code&gt;, &lt;code&gt;feature&lt;/code&gt;, &lt;code&gt;question&lt;/code&gt;, &lt;code&gt;rule&lt;/code&gt;, &lt;code&gt;documentation&lt;/code&gt;, &lt;code&gt;core&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;cli&lt;/code&gt;, &lt;code&gt;infrastructure&lt;/code&gt;, &lt;code&gt;breaking&lt;/code&gt;, and &lt;code&gt;chore&lt;/code&gt;. These are documented in the &lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues.html#types-of-issues&quot;&gt;Maintainer Guide&lt;/a&gt;.</source>
          <target state="translated">这是什么问题？描述问题性质的标签包括 &lt;code&gt;bug&lt;/code&gt; ， &lt;code&gt;enhancement&lt;/code&gt; ， &lt;code&gt;feature&lt;/code&gt; ， &lt;code&gt;question&lt;/code&gt; ， &lt;code&gt;rule&lt;/code&gt; ， &lt;code&gt;documentation&lt;/code&gt; ， &lt;code&gt;core&lt;/code&gt; ，内部 &lt;code&gt;build&lt;/code&gt; ， &lt;code&gt;cli&lt;/code&gt; ， &lt;code&gt;infrastructure&lt;/code&gt; ， &lt;code&gt;breaking&lt;/code&gt; 和 &lt;code&gt;chore&lt;/code&gt; 。这些内容记录在《&lt;a href=&quot;https://eslint.org/docs/maintainer-guide/issues.html#types-of-issues&quot;&gt;维护人员指南》中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa2641da62c4ca7255239f5379f36bbc6fa2b626" translate="yes" xml:space="preserve">
          <source>What syntax can selectors have?</source>
          <target state="translated">选择器可以有哪些语法?</target>
        </trans-unit>
        <trans-unit id="1537187228a7d0b7ed7c46e70ca704aef31c32b2" translate="yes" xml:space="preserve">
          <source>What you did.</source>
          <target state="translated">你做了什么?</target>
        </trans-unit>
        <trans-unit id="cb3d4d3c0898e5969ef92d5a6fdc5f3dff29f7fc" translate="yes" xml:space="preserve">
          <source>What you would like to happen.</source>
          <target state="translated">你希望发生什么。</target>
        </trans-unit>
        <trans-unit id="ec81f2d3245914f53c71d54b78924b60e8b83eb2" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;allowAsStatement&lt;/code&gt; is set to true, the rule will not error on cases that the void operator is used as a statement, i.e. when it's not used in an expression position, like in a variable assignment or a function return.</source>
          <target state="translated">当 &lt;code&gt;allowAsStatement&lt;/code&gt; 设置为true时，在将void运算符用作语句的情况下，即在表达式位置（如变量赋值或函数返回）中不使用它时，该规则将不会出错。</target>
        </trans-unit>
        <trans-unit id="5f6d2f2ba994f4fcaeb610687ed73d9211b99fa6" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;enforceForClassMembers&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, this rule ignores classes.</source>
          <target state="translated">当 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 时，此规则将忽略类。</target>
        </trans-unit>
        <trans-unit id="4136f0fba4d3da85f249511892895b2f4758a9c9" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;enforceForClassMembers&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; (default):</source>
          <target state="translated">当 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; （默认值）时：</target>
        </trans-unit>
        <trans-unit id="ccb746b4270f3fbe6b3dc6cea0e17fb49e243ff5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;enforceForClassMembers&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the rule will also disallow unnecessary computed keys inside of class methods, getters and setters.</source>
          <target state="translated">当 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 时，该规则还将禁止在类方法，getter和setter中使用不必要的计算键。</target>
        </trans-unit>
        <trans-unit id="a8e281894a6a86cc5aed5d6044cfed2f796dc660" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;enforceForClassMembers&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the rule will also disallow/enforce spaces inside of computed keys of class methods, getters and setters.</source>
          <target state="translated">当 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 时，该规则还将禁止/强制在类方法，获取器和设置器的计算键内添加空格。</target>
        </trans-unit>
        <trans-unit id="68a1046091137dc0b64b7621009bdfae020aa50f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;enforceForClassMembers&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">当 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 时：</target>
        </trans-unit>
        <trans-unit id="46f10156c1c0c83d5de119c4bfb392f72cf07913" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt; the rule checks the sorting of import declaration statements only for those that appear on consecutive lines.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ,则该规则仅检查连续行中出现的那些声明的导入声明语句的排序。</target>
        </trans-unit>
        <trans-unit id="40b208892363d77f54120b64383b5efd376dd4db" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt; the rule ignores the case-sensitivity of the imports local name.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ,则规则将忽略导入本地名称的区分大小写。</target>
        </trans-unit>
        <trans-unit id="2cf47cb024ed61b3595a6bac6d753c88a516200e" translate="yes" xml:space="preserve">
          <source>When ESLint is run, it looks in the current working directory to find an &lt;code&gt;.eslintignore&lt;/code&gt; file before determining which files to lint. If this file is found, then those preferences are applied when traversing directories. Only one &lt;code&gt;.eslintignore&lt;/code&gt; file can be used at a time, so &lt;code&gt;.eslintignore&lt;/code&gt; files other than the one in the current working directory will not be used.</source>
          <target state="translated">当运行ESLint时，它将在确定工作文件之前先在当前工作目录中查找 &lt;code&gt;.eslintignore&lt;/code&gt; 文件。如果找到此文件，则遍历目录时将应用这些首选项。一次只能使用一个 &lt;code&gt;.eslintignore&lt;/code&gt; 文件，因此将不使用当前工作目录中的 &lt;code&gt;.eslintignore&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="20c60a58611ef4be8a577170cdc4a73e06a4d3c9" translate="yes" xml:space="preserve">
          <source>When ESLint v5 encounters a plugin name in a config starting with &lt;code&gt;@&lt;/code&gt;, the plugin will be resolved as a &lt;a href=&quot;https://docs.npmjs.com/misc/scope&quot;&gt;scoped npm package&lt;/a&gt;. For example, if a config contains &lt;code&gt;&quot;plugins&quot;: [&quot;@foo&quot;]&lt;/code&gt;, ESLint v5 will attempt to load a package called &lt;code&gt;@foo/eslint-plugin&lt;/code&gt;. (On the other hand, ESLint v4 would attempt to load a package called &lt;code&gt;eslint-plugin-@foo&lt;/code&gt;.) This is a breaking change because users might have been relying on ESLint finding a package at &lt;code&gt;node_modules/eslint-plugin-@foo&lt;/code&gt;. However, we think it is unlikely that many users were relying on this behavior, because packages published to npm cannot contain an &lt;code&gt;@&lt;/code&gt; character in the middle.</source>
          <target state="translated">当ESLint v5在以 &lt;code&gt;@&lt;/code&gt; 开头的配置中遇到插件名称时，该插件将被解析为&lt;a href=&quot;https://docs.npmjs.com/misc/scope&quot;&gt;作用域npm软件包&lt;/a&gt;。例如，如果配置包含 &lt;code&gt;&quot;plugins&quot;: [&quot;@foo&quot;]&lt;/code&gt; ，则ESLint v5将尝试加载名为 &lt;code&gt;@foo/eslint-plugin&lt;/code&gt; 的软件包。 （另一方面，ESLint v4将尝试加载名为 &lt;code&gt;eslint-plugin-@foo&lt;/code&gt; 的软件包。）这是一个重大更改，因为用户可能一直依赖ESLint在 &lt;code&gt;node_modules/eslint-plugin-@foo&lt;/code&gt; 处找到软件包。但是，我们认为许多用户不太可能依赖此行为，因为发布到npm的软件包中间不能包含 &lt;code&gt;@&lt;/code&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="dcf004efe477be5ae8d2e40ee02553789c8aae8c" translate="yes" xml:space="preserve">
          <source>When Not To Use It</source>
          <target state="translated">何时不使用它</target>
        </trans-unit>
        <trans-unit id="203bf27409f5059980a9d42a50302c0e413f564e" translate="yes" xml:space="preserve">
          <source>When Object.assign is called using an object literal as the first argument, this rule requires using the object spread syntax instead. This rule also warns on cases where an &lt;code&gt;Object.assign&lt;/code&gt; call is made using a single argument that is an object literal, in this case, the &lt;code&gt;Object.assign&lt;/code&gt; call is not needed.</source>
          <target state="translated">当使用对象文字作为第一个参数调用Object.assign时，此规则要求使用对象传播语法。这条规则也警告在哪里的情况下 &lt;code&gt;Object.assign&lt;/code&gt; 呼叫使用一个参数是一个对象文本，在这种情况下，做出 &lt;code&gt;Object.assign&lt;/code&gt; 不需要调用。</target>
        </trans-unit>
        <trans-unit id="9415933a71300f2c36380de3c9e37825354a76b1" translate="yes" xml:space="preserve">
          <source>When a directive occurs at the beginning of a function body, strict mode applies only to that function, including all contained functions:</source>
          <target state="translated">当一个指令出现在函数体的开头时,严格模式只适用于该函数,包括所有包含的函数。</target>
        </trans-unit>
        <trans-unit id="3b945b44625e4e412ba636475a99a55bd8a52dc3" translate="yes" xml:space="preserve">
          <source>When a directive occurs in global scope, strict mode applies to the entire script:</source>
          <target state="translated">当一个指令发生在全局范围内时,严格模式适用于整个脚本。</target>
        </trans-unit>
        <trans-unit id="a7f8c7885496fcc670036ffbd015d93514a470ea" translate="yes" xml:space="preserve">
          <source>When a project may use non-strict-mode code side by side with strict-mode code and the files are not concatenated, the decision to use global strict mode can be made on an individual basis, rendering this rule unnecessary.</source>
          <target state="translated">当一个项目可能同时使用非严格模式的代码和严格模式的代码,且文件不连贯时,可以根据具体情况决定是否使用全局严格模式,从而使这一规则成为不必要。</target>
        </trans-unit>
        <trans-unit id="8d6a34d5119355a848730521094d00727d56e9fe" translate="yes" xml:space="preserve">
          <source>When a regular expression is known in advance, it is considered a best practice to avoid the string literal notation on top of the regular expression notation, and use regular expression literals instead of the constructor function.</source>
          <target state="translated">当事先知道正则表达式时,认为最好的做法是避免在正则表达式符号之上使用字符串文字符号,而用正则表达式文字代替构造函数。</target>
        </trans-unit>
        <trans-unit id="32e97b30949ce30d41853730be6d215853600032" translate="yes" xml:space="preserve">
          <source>When a regular expression is used in certain situations, it can end up looking like a division operator. For example:</source>
          <target state="translated">当正则表达式在某些情况下使用时,它可能最终看起来像一个除法运算符。比如说:</target>
        </trans-unit>
        <trans-unit id="e7de0f6154b5bffb994130a27056acf849724645" translate="yes" xml:space="preserve">
          <source>When a statement is too long to fit on a single line, line breaks are generally inserted next to the operators separating expressions. The first style coming to mind would be to place the operator at the end of the line, following the English punctuation rules.</source>
          <target state="translated">当一个语句太长,无法在一行中找到合适的位置时,一般会在分隔表达式的运算符旁边插入换行符。我想到的第一种方式是按照英语标点符号规则,将操作符放在行尾。</target>
        </trans-unit>
        <trans-unit id="93fb5fcb22010c57c3b649a0a8088840131fb0ad" translate="yes" xml:space="preserve">
          <source>When a value for &lt;code&gt;generators&lt;/code&gt; is not provided the behavior for generator functions falls back to the base option.</source>
          <target state="translated">如果未提供 &lt;code&gt;generators&lt;/code&gt; 的值，则生成器功能的行为将退回到基本选项。</target>
        </trans-unit>
        <trans-unit id="ba329c57c39515909a5b2d824e3d5ce52ed9f493" translate="yes" xml:space="preserve">
          <source>When an object is created with the &lt;code&gt;new&lt;/code&gt; operator, &lt;code&gt;__proto__&lt;/code&gt; is set to the original &quot;prototype&quot; property of the object's constructor function. &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; is the preferred method of getting the object's prototype. To change an object's prototype, use &lt;code&gt;Object.setPrototypeOf&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;new&lt;/code&gt; 运算符创建对象时， &lt;code&gt;__proto__&lt;/code&gt; 设置为对象的构造函数的原始&amp;ldquo; prototype&amp;rdquo;属性。 &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; 是获取对象原型的首选方法。要更改对象的原型，请使用 &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0bba3e468f3e8751ba8be23bf966776db6059a6" translate="yes" xml:space="preserve">
          <source>When an object literal is passed to a function, the opening brace should be on the same line as if the value is a variable. All other formatting rules from above still apply.</source>
          <target state="translated">当一个对象文字被传递给一个函数时,开头的括号应该和值是一个变量一样在同一行。所有其他的格式化规则仍然适用。</target>
        </trans-unit>
        <trans-unit id="e3b642b0ab807b653ce30cde6cabc5b5d00ea7af" translate="yes" xml:space="preserve">
          <source>When assigning a value to a variable, use parentheses around a right-side expression that contains a comparison.</source>
          <target state="translated">当给一个变量赋值时,在包含比较的右侧表达式周围使用括号。</target>
        </trans-unit>
        <trans-unit id="a152c3fe98d6af849e4f2641cb3aa3e4d5c168d4" translate="yes" xml:space="preserve">
          <source>When calling a function, developers may insert optional whitespace between the function's name and the parentheses that invoke it. The following pairs of function calls are equivalent:</source>
          <target state="translated">在调用函数时,开发者可以在函数名和调用函数的括号之间插入可选的空白。以下的函数调用对等。</target>
        </trans-unit>
        <trans-unit id="abe6033e5821a616ecbd384ea21e99fdaefa9553" translate="yes" xml:space="preserve">
          <source>When comparing two selectors, the selector that contains more class selectors, attribute selectors, and pseudo-class selectors (excluding &lt;code&gt;:not()&lt;/code&gt;) has higher specificity.</source>
          <target state="translated">比较两个选择器时，包含更多类选择器，属性选择器和伪类选择器（不包括 &lt;code&gt;:not()&lt;/code&gt; ）的选择器具有更高的特异性。</target>
        </trans-unit>
        <trans-unit id="563a2a9cd7c563ab5d8ae53b0347fa95ec09e16a" translate="yes" xml:space="preserve">
          <source>When creating a config, users sometimes make typos or misunderstand how the config is supposed to be structured. Previously, ESLint did not validate the properties of a config file, so a typo in a config could be very tedious to debug. Starting in 4.0.0, ESLint will raise an error if a property in a config file is unrecognized or has the wrong type.</source>
          <target state="translated">在创建配置文件时,用户有时会出现错别字或误解配置文件的结构。以前,ESLint并不验证配置文件的属性,所以配置文件中的一个错别字在调试时可能会非常繁琐。从4.0.0开始,如果配置文件中的一个属性未被识别或有错误的类型,ESLint将引发一个错误。</target>
        </trans-unit>
        <trans-unit id="ea29648e037edef7cafa09376284dc4afc1ee408" translate="yes" xml:space="preserve">
          <source>When declaring multiple imports, a sorted list of import declarations make it easier for developers to read the code and find necessary imports later. This rule is purely a matter of style.</source>
          <target state="translated">在声明多个导入时,导入声明的排序列表可以使开发人员更容易阅读代码,并在以后找到必要的导入。这个规则纯粹是一个风格问题。</target>
        </trans-unit>
        <trans-unit id="01f73904c501ed9b42d55242c8ae09f4b585afda" translate="yes" xml:space="preserve">
          <source>When declaring multiple properties, some developers prefer to sort property names alphabetically to be able to find necessary property easier at the later time. Others feel that it adds complexity and becomes burden to maintain.</source>
          <target state="translated">在申报多个楼盘时,有些开发商喜欢将楼盘名称按字母顺序排列,以便日后更容易找到所需楼盘。也有人觉得这样会增加复杂性,成为维护的负担。</target>
        </trans-unit>
        <trans-unit id="8c9ac822b8cc57027669f91308f76ff1f841fe4a" translate="yes" xml:space="preserve">
          <source>When declaring multiple properties, some developers prefer to sort property names alphabetically to more easily find and/or diff necessary properties at a later time. Others feel that it adds complexity and becomes burden to maintain.</source>
          <target state="translated">当声明多个属性时,一些开发者喜欢按字母顺序对属性名称进行排序,以便在以后更容易找到和/或区分必要的属性。另一些人则认为这增加了复杂性,成为维护的负担。</target>
        </trans-unit>
        <trans-unit id="dbb2dab6a276d490636b69d0d44fa2ec1e3a9d07" translate="yes" xml:space="preserve">
          <source>When declaring multiple variables within the same block, some developers prefer to sort variable names alphabetically to be able to find necessary variable easier at the later time. Others feel that it adds complexity and becomes burden to maintain.</source>
          <target state="translated">当在同一个代码块中声明多个变量时,一些开发人员喜欢按字母顺序排列变量名,以便以后能够更容易地找到必要的变量。而另一些人则认为这增加了复杂性,成为维护的负担。</target>
        </trans-unit>
        <trans-unit id="509fcabb27dd7cfdfd2baa30eff71f1794f79697" translate="yes" xml:space="preserve">
          <source>When developing in the ESLint core repository, the &lt;code&gt;npm run perf&lt;/code&gt; command gives a high-level overview of ESLint running time with all core rules enabled.</source>
          <target state="translated">在ESLint核心存储库中进行开发时， &lt;code&gt;npm run perf&lt;/code&gt; 命令可在启用所有核心规则的情况下提供ESLint运行时间的高级概述。</target>
        </trans-unit>
        <trans-unit id="9869fdd0a7363425715523b58b04c8e8afd5398f" translate="yes" xml:space="preserve">
          <source>When developing with a lot of people all having different editors, VCS applications and operating systems it may occur that different line endings are written by either of the mentioned (might especially happen when using the windows and mac versions of SourceTree together).</source>
          <target state="translated">当有很多人使用不同的编辑器、VCS应用程序和操作系统进行开发时,可能会出现上述任何一个人编写的行结尾不同的情况(特别是在同时使用Windows和Mac版本的SourceTree时可能会出现这种情况)。</target>
        </trans-unit>
        <trans-unit id="24528f592879fc6dbe5e5bdfc58507e869312f54" translate="yes" xml:space="preserve">
          <source>When formatting a function, whitespace is allowed between the function name or &lt;code&gt;function&lt;/code&gt; keyword and the opening paren. Named functions also require a space between the &lt;code&gt;function&lt;/code&gt; keyword and the function name, but anonymous functions require no whitespace. For example:</source>
          <target state="translated">格式化函数时，函数名称或 &lt;code&gt;function&lt;/code&gt; 关键字与开头括号之间应留有空格。命名函数在 &lt;code&gt;function&lt;/code&gt; 关键字和函数名称之间也需要一个空格，但是匿名函数不需要空格。例如：</target>
        </trans-unit>
        <trans-unit id="51a7c81608a2fb4ade673c3238c1ff45f26efbdd" translate="yes" xml:space="preserve">
          <source>When it comes to naming variables, style guides generally fall into one of two camps: camelcase (&lt;code&gt;variableName&lt;/code&gt;) and underscores (&lt;code&gt;variable_name&lt;/code&gt;). This rule focuses on using the camelcase approach. If your style guide calls for camelCasing your variable names, then this rule is for you!</source>
          <target state="translated">在命名变量时，样式指南通常分为以下两个阵营之一：camelcase（ &lt;code&gt;variableName&lt;/code&gt; ）和下划线（ &lt;code&gt;variable_name&lt;/code&gt; ）。该规则侧重于使用驼峰法。如果您的样式指南要求使用驼峰式变量名，那么此规则适合您！</target>
        </trans-unit>
        <trans-unit id="da97dfc5cde15902d5f22cd88a96b7bbda7598f6" translate="yes" xml:space="preserve">
          <source>When linting files, ESLint will exit with one of the following exit codes:</source>
          <target state="translated">当对文件进行精简时,ESLint将以下列退出代码之一退出。</target>
        </trans-unit>
        <trans-unit id="ffc50d3c200d0e69215126757fd5407d7f1e935d" translate="yes" xml:space="preserve">
          <source>When on a separate line, a single-line comment should be at the same indentation level as the code it describes and be preceded by a single line. Never use multiple single-line comments on consecutive lines, use a multi-line comment instead.</source>
          <target state="translated">当在单独的一行上时,单行注释应该与它所描述的代码处于同一缩进级别,并在前面加一行。切勿在连续的行上使用多个单行注释,而应使用多行注释。</target>
        </trans-unit>
        <trans-unit id="0119aba772e3768887d5d3d6f3e7c08c6156ce21" translate="yes" xml:space="preserve">
          <source>When parentheses are used, there should be no whitespace immediately after the opening paren or immediately before the closing paren.</source>
          <target state="translated">当使用小括号时,在紧靠开头的paren之后或紧靠结尾的paren之前不应有空格。</target>
        </trans-unit>
        <trans-unit id="e92b56b46fd3333c3c86b73a448970aa9cd1f7a3" translate="yes" xml:space="preserve">
          <source>When parsing JSX code like &lt;code&gt;&amp;lt;a&amp;gt;foo&amp;lt;/a&amp;gt;&lt;/code&gt;, the default parser will now give the &lt;code&gt;foo&lt;/code&gt; AST node the &lt;code&gt;JSXText&lt;/code&gt; type, rather than the &lt;code&gt;Literal&lt;/code&gt; type. This makes the AST compliant with a recent update to the JSX spec.</source>
          <target state="translated">现在，当解析诸如 &lt;code&gt;&amp;lt;a&amp;gt;foo&amp;lt;/a&amp;gt;&lt;/code&gt; 类的JSX代码时，默认的解析器将为 &lt;code&gt;foo&lt;/code&gt; AST节点提供 &lt;code&gt;JSXText&lt;/code&gt; 类型，而不是 &lt;code&gt;Literal&lt;/code&gt; 类型。这使AST符合JSX规范的最新更新。</target>
        </trans-unit>
        <trans-unit id="7dee6841b50edc415bfe1c5c8466161d44e6e78e" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;false&lt;/code&gt; this option prohibits the use of function expressions as callbacks or function arguments entirely, without exception.</source>
          <target state="translated">设置为 &lt;code&gt;false&lt;/code&gt; 时,此选项无一例外地禁止将函数表达式完全用作回调或函数参数。</target>
        </trans-unit>
        <trans-unit id="3ba26a5a5d49bc636e6880dc523e7efaa7e3f9ff" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, which it is by default, The defaultAssignment option allows expressions of the form &lt;code&gt;x ? x : expr&lt;/code&gt; (where &lt;code&gt;x&lt;/code&gt; is any identifier and &lt;code&gt;expr&lt;/code&gt; is any expression).</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 时（默认情况下为true），defaultAssignment选项允许使用 &lt;code&gt;x ? x : expr&lt;/code&gt; 形式的表达式。x：expr（其中 &lt;code&gt;x&lt;/code&gt; 是任何标识符，而 &lt;code&gt;expr&lt;/code&gt; 是任何表达式）。</target>
        </trans-unit>
        <trans-unit id="58c76c479951b060bb7467a1b0d3e833c0d8d2c6" translate="yes" xml:space="preserve">
          <source>When specified, the given format is output into the provided file name.</source>
          <target state="translated">当指定时,给定的格式被输出到所提供的文件名中。</target>
        </trans-unit>
        <trans-unit id="9058d12891b7bc2d4e9327a4983a9feee1877886" translate="yes" xml:space="preserve">
          <source>When specified, the given format is output to the console. If you'd like to save that output into a file, you can do so on the command line like so:</source>
          <target state="translated">当指定时,给定的格式会输出到控制台。如果你想把输出结果保存到文件中,你可以在命令行中这样做。</target>
        </trans-unit>
        <trans-unit id="47889d2dbb1cf22065935476a0f8d0aa8e29fe7e" translate="yes" xml:space="preserve">
          <source>When the code is not in &lt;code&gt;strict&lt;/code&gt; mode, an assignment to an undeclared variable creates a new global variable. This will happen even is the code is in a function.</source>
          <target state="translated">当代码不在 &lt;code&gt;strict&lt;/code&gt; 模式下时，对未声明变量的赋值将创建一个新的全局变量。即使代码在函数中，也会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="ba5826aadfa968a7067425694dbe879c9c132684" translate="yes" xml:space="preserve">
          <source>When there is a function</source>
          <target state="translated">当有一个函数</target>
        </trans-unit>
        <trans-unit id="6adbe1473af6389caf7437ed913a23dbb72e9491" translate="yes" xml:space="preserve">
          <source>When this rule is enabled, each &lt;code&gt;var&lt;/code&gt; statement must satisfy the following conditions:</source>
          <target state="translated">启用此规则后，每个 &lt;code&gt;var&lt;/code&gt; 语句必须满足以下条件：</target>
        </trans-unit>
        <trans-unit id="4af1a048904ebbc268d7e5d2a030b1271e1ca108" translate="yes" xml:space="preserve">
          <source>When updating the code, it's usually better to add additional commits to your branch rather than amending the original commit, because reviewers can easily tell which changes were made in response to a particular review. When we merge pull requests, we will squash all the commits from your branch into a single commit on the &lt;code&gt;master&lt;/code&gt; branch.</source>
          <target state="translated">更新代码时，通常最好将其他提交添加到分支中，而不是修改原始提交，因为审阅者可以轻松判断出响应特定审阅做出了哪些更改。合并拉取请求时，我们会将您分支中的所有提交压缩到 &lt;code&gt;master&lt;/code&gt; 分支上的单个提交中。</target>
        </trans-unit>
        <trans-unit id="b872c16657ae9bf9c92c81eca4cedcf1ce4e3b38" translate="yes" xml:space="preserve">
          <source>When used globally, as in this example, the strict mode pragma applies to all code within a single file. This can be dangerous if you concatenate scripts together before serving them to a browser. For instance, if you have a file running in strict mode and you concatenate that file with jQuery, the strict mode now also applies to jQuery and may cause errors.</source>
          <target state="translated">当在全局范围内使用时,就像在这个例子中一样,严格模式pragma适用于一个文件中的所有代码。如果你在向浏览器提供脚本之前将它们连在一起,这可能会很危险。例如,如果你有一个以严格模式运行的文件,并且你将该文件与jQuery连在一起,严格模式现在也适用于jQuery,可能会导致错误。</target>
        </trans-unit>
        <trans-unit id="aefeb6a510b4f06da8ab827396ab03e61b9a2b4f" translate="yes" xml:space="preserve">
          <source>When used with IIFE (immediately-invoked function expression), &lt;code&gt;void&lt;/code&gt; can be used to force the function keyword to be treated as an expression instead of a declaration:</source>
          <target state="translated">与IIFE（立即调用的函数表达式）一起使用时，可以使用 &lt;code&gt;void&lt;/code&gt; 强制将function关键字视为表达式而不是声明：</target>
        </trans-unit>
        <trans-unit id="ae07cc7a2c00ed114816981d903072e8072c3972" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://docs.npmjs.com/misc/scope&quot;&gt;scoped modules&lt;/a&gt; it is not possible to omit the &lt;code&gt;eslint-config&lt;/code&gt; namespace. Doing so would result in resolution errors as explained above. Assuming the package name is &lt;code&gt;@scope/eslint-config&lt;/code&gt;, the additional config can be accessed as:</source>
          <target state="translated">使用&lt;a href=&quot;https://docs.npmjs.com/misc/scope&quot;&gt;作用域模块时&lt;/a&gt;，无法省略 &lt;code&gt;eslint-config&lt;/code&gt; 名称空间。这样做将导致如上所述的分辨率错误。假设软件包名称为 &lt;code&gt;@scope/eslint-config&lt;/code&gt; ，则可以通过以下方式访问其他配置：</target>
        </trans-unit>
        <trans-unit id="26dd94e9925d7320e1851527a2ac78a589c822f5" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;&quot;end&quot;&lt;/code&gt; this placement will be enforced:</source>
          <target state="translated">使用 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 将强制执行此放置：</target>
        </trans-unit>
        <trans-unit id="09ca3b175b033e6afa312c6e6f12311d2e033185" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;&quot;middle&quot;&lt;/code&gt; this placement will be enforced:</source>
          <target state="translated">当使用 &lt;code&gt;&quot;middle&quot;&lt;/code&gt; 将强制执行此放置：</target>
        </trans-unit>
        <trans-unit id="6c5237044c68d3a775c858f741758773f712859a" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;&quot;start&quot;&lt;/code&gt; this placement will be enforced:</source>
          <target state="translated">使用 &lt;code&gt;&quot;start&quot;&lt;/code&gt; 将强制执行此放置：</target>
        </trans-unit>
        <trans-unit id="98295039ae3403c3effaa8e60d4f8b88e51b9a68" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;--init&lt;/code&gt;, your configuration file will automatically include the following line:</source>
          <target state="translated">使用 &lt;code&gt;--init&lt;/code&gt; 时，您的配置文件将自动包含以下行：</target>
        </trans-unit>
        <trans-unit id="e12966d5c8e8533c8ea0391ab9f9bf76fed4d63c" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;.eslintrc.*&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; files for configuration, you can take advantage of configuration cascading. For instance, suppose you have the following structure:</source>
          <target state="translated">使用 &lt;code&gt;.eslintrc.*&lt;/code&gt; 和 &lt;code&gt;package.json&lt;/code&gt; 文件进行配置时，可以利用配置级联的优势。例如，假设您具有以下结构：</target>
        </trans-unit>
        <trans-unit id="67eb92d73cc035fb0e740eeb9ee35d54c21b60c8" translate="yes" xml:space="preserve">
          <source>When using ESLint v4, both of the following scenarios resulted in an exit code of 1 when running ESLint on the command line:</source>
          <target state="translated">当使用ESLint v4时,在命令行上运行ESLint时,以下两种情况都会导致退出代码为1。</target>
        </trans-unit>
        <trans-unit id="f1aa627c5d01df9707c9033e04463db737c25a39" translate="yes" xml:space="preserve">
          <source>When using ESLint's Node.js API, the &lt;a href=&quot;../developer-guide/nodejs-api#linter-1&quot;&gt;&lt;code&gt;linter&lt;/code&gt;&lt;/a&gt; property is now non-enumerable. Note that the &lt;code&gt;linter&lt;/code&gt; property was deprecated in ESLint v4 in favor of the &lt;a href=&quot;../developer-guide/nodejs-api#linter&quot;&gt;&lt;code&gt;Linter&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">当使用ESLint的Node.js的API中，&lt;a href=&quot;../developer-guide/nodejs-api#linter-1&quot;&gt; &lt;code&gt;linter&lt;/code&gt; &lt;/a&gt;属性现在不可枚举。请注意， &lt;code&gt;linter&lt;/code&gt; 酒店于ESLint弃用，取而代之的V4中&lt;a href=&quot;../developer-guide/nodejs-api#linter&quot;&gt; &lt;code&gt;Linter&lt;/code&gt; &lt;/a&gt;财产。</target>
        </trans-unit>
        <trans-unit id="3877034397bdd6655a65bb98713badfab70c61ee" translate="yes" xml:space="preserve">
          <source>When using a &lt;code&gt;for-in&lt;/code&gt; statement, double-check whether or not you need to use &lt;code&gt;hasOwnProperty()&lt;/code&gt; to filter out object members.</source>
          <target state="translated">使用 &lt;code&gt;for-in&lt;/code&gt; 语句时，请仔细检查是否需要使用 &lt;code&gt;hasOwnProperty()&lt;/code&gt; 来筛选出对象成员。</target>
        </trans-unit>
        <trans-unit id="a472295684a43521cf709823b83a0dfc83f4c6ed" translate="yes" xml:space="preserve">
          <source>When using a config file that is located outside of the current project (with the &lt;code&gt;--config&lt;/code&gt; flag), if the config uses plugins which are installed locally to itself, &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; should be set to the directory containing the config file.</source>
          <target state="translated">当使用位于当前项目之外的配置文件（带有 &lt;code&gt;--config&lt;/code&gt; 标志）时，如果配置使用本身安装在本地的插件，则 &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; 应该设置为包含以下内容的目录配置文件。</target>
        </trans-unit>
        <trans-unit id="9fe44a79a84622c0b965f560717893c125cae83f" translate="yes" xml:space="preserve">
          <source>When using any of the &lt;code&gt;multi*&lt;/code&gt; options, you can add an option to enforce all bodies of a &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else if&lt;/code&gt; and &lt;code&gt;else&lt;/code&gt; chain to be with or without braces.</source>
          <target state="translated">当使用任何 &lt;code&gt;multi*&lt;/code&gt; 选项时，可以添加一个选项以强制 &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;else if&lt;/code&gt; 和 &lt;code&gt;else&lt;/code&gt; 链的所有主体都带有或不带有括号。</target>
        </trans-unit>
        <trans-unit id="e1ce6d13212b9475ddace9afb3a4ec7570c6a3f8" translate="yes" xml:space="preserve">
          <source>When using destructuring, it's possible to create a pattern that has no effect. This happens when empty curly braces are used to the right of an embedded object destructuring pattern, such as:</source>
          <target state="translated">在使用反构造时,有可能创建一个没有效果的模式。当在嵌入式对象破坏模式的右边使用空大括号时,就会发生这种情况,例如:</target>
        </trans-unit>
        <trans-unit id="db5460863d756d57789fab16c7a69040d5d2e79f" translate="yes" xml:space="preserve">
          <source>When using options, make sure that your rule has some logic defaults in case the options are not provided.</source>
          <target state="translated">当使用选项时,确保你的规则有一些逻辑默认值,以防选项没有提供。</target>
        </trans-unit>
        <trans-unit id="1342a76757aef0e4e5631b4d0669dc7aeec279ca" translate="yes" xml:space="preserve">
          <source>When using options, make sure that your rule has some logical defaults in case the options are not provided.</source>
          <target state="translated">当使用选项时,确保你的规则有一些逻辑默认值,以防选项没有提供。</target>
        </trans-unit>
        <trans-unit id="065a7400897a87490ae67a06072ac7d5967d0b59" translate="yes" xml:space="preserve">
          <source>When using rules, environments or configs defined by plugins, they must be referenced following the convention:</source>
          <target state="translated">当使用插件定义的规则、环境或配置时,必须按照惯例引用它们。</target>
        </trans-unit>
        <trans-unit id="77682b7f7a1abb91eab097d1eb59bc1ac216c0eb" translate="yes" xml:space="preserve">
          <source>When using tagged template literals, it's possible to insert whitespace between the tag function and the template literal. Since this whitespace is optional, the following lines are equivalent:</source>
          <target state="translated">当使用标记的模板字元时,可以在标记函数和模板字元之间插入空格。由于这个空格是可选的,所以下面的行是等价的。</target>
        </trans-unit>
        <trans-unit id="572505491b13551fec178b2c6eb532fad10fec71" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;&quot;always&quot;&lt;/code&gt; option, whitespace is required between spread operators and their expressions.</source>
          <target state="translated">使用 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 选项时，在散布运算符及其表达式之间需要空格。</target>
        </trans-unit>
        <trans-unit id="88068f5e037d31b9f83bb310b2f96f7c77755ae1" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;parseInt()&lt;/code&gt; function it is common to omit the second argument, the radix, and let the function try to determine from the first argument what type of number it is. By default, &lt;code&gt;parseInt()&lt;/code&gt; will autodetect decimal and hexadecimal (via &lt;code&gt;0x&lt;/code&gt; prefix). Prior to ECMAScript 5, &lt;code&gt;parseInt()&lt;/code&gt; also autodetected octal literals, which caused problems because many developers assumed a leading &lt;code&gt;0&lt;/code&gt; would be ignored.</source>
          <target state="translated">使用 &lt;code&gt;parseInt()&lt;/code&gt; 函数时，通常会省略第二个参数基数，然后让该函数尝试从第一个参数中确定数字的类型。默认情况下， &lt;code&gt;parseInt()&lt;/code&gt; 将自动检测十进制和十六进制（通过 &lt;code&gt;0x&lt;/code&gt; 前缀）。在ECMAScript 5之前， &lt;code&gt;parseInt()&lt;/code&gt; 还自动检测八进制文字，这会引起问题，因为许多开发人员认为前导 &lt;code&gt;0&lt;/code&gt; 将被忽略。</target>
        </trans-unit>
        <trans-unit id="88284b0351505f62a836f42de5b2788b48eda806" translate="yes" xml:space="preserve">
          <source>When using the constructor function with string literals, don't forget that the string escaping rules still apply. If you want to put a backslash in the pattern, you need to escape it in the string literal. Thus, the following are equivalent:</source>
          <target state="translated">当使用构造函数处理字符串字面时,不要忘记字符串转义规则仍然适用。如果你想在模式中加入反斜杠,你需要在字符串文字中转义。因此,以下是等价的。</target>
        </trans-unit>
        <trans-unit id="1e14cbc834c9a5f17fbdfbd32b0519c83d4daeea" translate="yes" xml:space="preserve">
          <source>When using the default &lt;code&gt;&quot;never&quot;&lt;/code&gt; option, whitespace is not allowed between spread operators and their expressions.</source>
          <target state="translated">当使用默认的 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 选项时，在扩展运算符及其表达式之间不允许使用空格。</target>
        </trans-unit>
        <trans-unit id="8eb0941e44731d1406d202c3c09b679dece569a9" translate="yes" xml:space="preserve">
          <source>When using the default parser, rest operators now have type &lt;code&gt;RestElement&lt;/code&gt;</source>
          <target state="translated">使用默认解析器时，rest运算符现在具有 &lt;code&gt;RestElement&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="ac630bdfb56b2d802f81e1826acde944bb747613" translate="yes" xml:space="preserve">
          <source>When using the default parser, spread operators now have type &lt;code&gt;SpreadElement&lt;/code&gt;</source>
          <target state="translated">使用默认解析器时，散布运算符现在具有 &lt;code&gt;SpreadElement&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="8616f7cf1f10c7305732004515b3e0c7f1b326cf" translate="yes" xml:space="preserve">
          <source>When using the default parser, text nodes in JSX elements now have type &lt;code&gt;JSXText&lt;/code&gt;</source>
          <target state="translated">使用默认解析器时，JSX元素中的文本节点现在具有 &lt;code&gt;JSXText&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="3135ee8033e77839591488d21955ec0799490dc6" translate="yes" xml:space="preserve">
          <source>When using the expression syntax &lt;code&gt;&quot;end&quot;&lt;/code&gt; will be enforced here:</source>
          <target state="translated">使用表达式语法 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 将在此处强制使用&amp;ldquo; end&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="8de601ce9b9f12866178ba6345b9ba4e726ea473" translate="yes" xml:space="preserve">
          <source>When using the expression syntax &lt;code&gt;&quot;middle&quot;&lt;/code&gt; will be enforced here:</source>
          <target state="translated">使用表达式语法时，将在此处强制使用 &lt;code&gt;&quot;middle&quot;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8bd53727d730e4c05e40c010c8d70d943c9ea8ca" translate="yes" xml:space="preserve">
          <source>When using the expression syntax &lt;code&gt;&quot;start&quot;&lt;/code&gt; will be enforced here:</source>
          <target state="translated">使用表达式语法 &lt;code&gt;&quot;start&quot;&lt;/code&gt; 将在此处强制执行&amp;ldquo; start&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="b6d978f57faa0037e5473a90f3c71723c7f1acc3" translate="yes" xml:space="preserve">
          <source>When using the expression syntax this is valid for both &lt;code&gt;&quot;start&quot;&lt;/code&gt; and &lt;code&gt;&quot;end&quot;&lt;/code&gt;:</source>
          <target state="translated">使用表达式语法时，这对于 &lt;code&gt;&quot;start&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 均有效：</target>
        </trans-unit>
        <trans-unit id="4ed32cf1f256eefd3785dd5a68ca7828859df24e" translate="yes" xml:space="preserve">
          <source>When using the object form, you can also specify an array of gitignore-style patterns:</source>
          <target state="translated">当使用对象形式时,你也可以指定一个gitignore风格的模式数组。</target>
        </trans-unit>
        <trans-unit id="e017154842854f21c9d1f0307bc811b5980a759b" translate="yes" xml:space="preserve">
          <source>When working with browser scripts, developers often forget that variable and function declarations at the top-level scope become global variables on the &lt;code&gt;window&lt;/code&gt; object. As opposed to modules which have their own scope. Globals should be explicitly assigned to &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;self&lt;/code&gt; if that is the intent. Otherwise variables intended to be local to the script should be wrapped in an IIFE.</source>
          <target state="translated">使用浏览器脚本时，开发人员通常会忘记顶级作用域中的变量和函数声明成为 &lt;code&gt;window&lt;/code&gt; 对象上的全局变量。与具有自己范围的模块相反。如果这样做，则应将全局变量明确分配给 &lt;code&gt;window&lt;/code&gt; 或 &lt;code&gt;self&lt;/code&gt; 。否则，打算用于脚本本地的变量应包装在IIFE中。</target>
        </trans-unit>
        <trans-unit id="2ae3d6ae3c17238e69473bcfd258c180c90d185f" translate="yes" xml:space="preserve">
          <source>When writing &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do-while&lt;/code&gt;, and &lt;code&gt;for&lt;/code&gt; statements, the body can be a single statement instead of a block. It can be useful to enforce a consistent location for these single statements.</source>
          <target state="translated">在编写 &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; ， &lt;code&gt;do-while&lt;/code&gt; 和 &lt;code&gt;for&lt;/code&gt; 语句时，主体可以是单个语句而不是块。对这些单个语句强制使用一致的位置可能会很有用。</target>
        </trans-unit>
        <trans-unit id="fea634132274ace881ee0bca736c790f2b99034e" translate="yes" xml:space="preserve">
          <source>When writing a custom ESLint rule, you can listen for nodes that match a particular selector as the AST is traversed.</source>
          <target state="translated">当编写一个自定义的ESLint规则时,您可以在遍历AST时监听匹配特定选择器的节点。</target>
        </trans-unit>
        <trans-unit id="f7e1b6bb0b8e229c1579ec042f43f7fccc4c8e52" translate="yes" xml:space="preserve">
          <source>When writing asynchronous code, it is possible to create subtle race condition bugs. Consider the following example:</source>
          <target state="translated">在编写异步代码时,有可能产生微妙的竞赛条件错误。考虑下面的例子。</target>
        </trans-unit>
        <trans-unit id="9ab956d19f6a7d33bcea781c394aac7716e7d396" translate="yes" xml:space="preserve">
          <source>When you are indifferent as to how your variables are initialized.</source>
          <target state="translated">当你对变量的初始化方式无动于衷时。</target>
        </trans-unit>
        <trans-unit id="39cec6a53e81419ae94518ee1daf7421c15031c9" translate="yes" xml:space="preserve">
          <source>When you first get the source code, you need to run &lt;code&gt;npm install&lt;/code&gt; once initially to set ESLint for development. Once you've done that, you can run the tests via:</source>
          <target state="translated">首次获取源代码时，首先需要运行一次 &lt;code&gt;npm install&lt;/code&gt; 来设置ESLint进行开发。完成此操作后，您可以通过以下方式运行测试：</target>
        </trans-unit>
        <trans-unit id="1fb96c9e3ee803081c2dbdc5072343cd0694c05e" translate="yes" xml:space="preserve">
          <source>When you pass directories to ESLint, files and directories are silently ignored. If you pass a specific file to ESLint, then you will see a warning indicating that the file was skipped. For example, suppose you have an &lt;code&gt;.eslintignore&lt;/code&gt; file that looks like this:</source>
          <target state="translated">将目录传递给ESLint时，文件和目录将被静默忽略。如果将特定文件传递给ESLint，则将看到警告，指示该文件已被跳过。例如，假设您有一个 &lt;code&gt;.eslintignore&lt;/code&gt; 文件，如下所示：</target>
        </trans-unit>
        <trans-unit id="a40e7db8e660398609c617f2002410fe5311511d" translate="yes" xml:space="preserve">
          <source>Whereas others don't leave any empty newlines at all.</source>
          <target state="translated">而其他的则完全不留任何空的新行。</target>
        </trans-unit>
        <trans-unit id="87fefcfc6db6a927999c919eb6932d1b0ddd6e8d" translate="yes" xml:space="preserve">
          <source>Whether or not you choose to allow dangling underscores in identifiers is purely a convention and has no effect on performance, readability, or complexity. It's purely a preference.</source>
          <target state="translated">是否允许在标识符中使用下划线纯粹是一种惯例,对性能、可读性或复杂性没有影响。这纯粹是一种偏好。</target>
        </trans-unit>
        <trans-unit id="f6534f63646dd23727947c2cf6e7bcc6f3e758c3" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;require()&lt;/code&gt; may be called anywhere in code, some style guides prescribe that it should be called only in the top level of a module to make it easier to identify dependencies. For instance, it's arguably harder to identify dependencies when they are deeply nested inside of functions and other statements:</source>
          <target state="translated">尽管 &lt;code&gt;require()&lt;/code&gt; 可以在代码中的任何地方调用，但是一些样式指南规定，应仅在模块的顶层调用它，以使识别依赖项更加容易。例如，将依赖项深深嵌套在函数和其他语句中时，要确定依赖项可能会更难：</target>
        </trans-unit>
        <trans-unit id="29813e5d8bf1cb7355c7898a63fa4f03da45d7d8" translate="yes" xml:space="preserve">
          <source>While ESLint has some built-in formatters available to format the linting results, it's also possible to create and distribute your own custom formatters. You can include custom formatters in your project directly or create an npm package to distribute them separately.</source>
          <target state="translated">虽然ESLint有一些内置的格式化器可用于格式化linting结果,但也可以创建和发布您自己的自定义格式化器。你可以直接在你的项目中包含自定义格式化器,或者创建一个npm包来单独发布它们。</target>
        </trans-unit>
        <trans-unit id="8311aac5b23a97503926ab51c441e3cee02f86ac" translate="yes" xml:space="preserve">
          <source>While ESLint is designed to be run on the command line, it's possible to use ESLint programmatically through the Node.js API. The purpose of the Node.js API is to allow plugin and tool authors to use the ESLint functionality directly, without going through the command line interface.</source>
          <target state="translated">虽然ESLint被设计为在命令行上运行,但也可以通过Node.js API来编程使用ESLint。Node.js API的目的是允许插件和工具作者直接使用ESLint功能,而不需要通过命令行接口。</target>
        </trans-unit>
        <trans-unit id="fd197d2828aa60783949613ca0213c33e76566f6" translate="yes" xml:space="preserve">
          <source>While comments are not technically part of the AST, ESLint provides a few ways for rules to access them:</source>
          <target state="translated">虽然从技术上讲,注释不是AST的一部分,但ESLint为规则提供了一些访问它们的方法。</target>
        </trans-unit>
        <trans-unit id="37c4f55e4cdec2c52b9d1730070d74540af4ff31" translate="yes" xml:space="preserve">
          <source>While convenient in some cases, labels tend to be used only rarely and are frowned upon by some as a remedial form of flow control that is more error prone and harder to understand.</source>
          <target state="translated">虽然在某些情况下很方便,但标签往往只在很少的情况下使用,而且作为一种补救性的流量控制形式,更容易出错,更难理解,因此被一些人所不齿。</target>
        </trans-unit>
        <trans-unit id="63cb520d8087bbdcbf754409ab27930737530ab8" translate="yes" xml:space="preserve">
          <source>While custom formatter do not receive arguments in addition to the results object, it is possible to pass additional data into formatters.</source>
          <target state="translated">虽然自定义formatter除了结果对象外不接收参数,但可以向formatter中传递额外的数据。</target>
        </trans-unit>
        <trans-unit id="0369fa756d04f135ed12a2b1afcb5955ad419079" translate="yes" xml:space="preserve">
          <source>While examples such as &lt;code&gt;window&lt;/code&gt; are obvious, there are often hundreds of built-in global objects provided by JavaScript environments. It can be hard to know if you're assigning to a global variable or not.</source>
          <target state="translated">尽管 &lt;code&gt;window&lt;/code&gt; 类的示例显而易见，但JavaScript环境通常提供数百个内置的全局对象。很难知道是否要分配给全局变量。</target>
        </trans-unit>
        <trans-unit id="0c46f9484120e3dc21893826ed7750184420479e" translate="yes" xml:space="preserve">
          <source>While formatting preferences are very personal, a number of style guides require or disallow spaces between brackets:</source>
          <target state="translated">虽然格式偏好是非常个人化的,但许多样式指南要求或不允许括号之间有空格。</target>
        </trans-unit>
        <trans-unit id="ead041c0e54e18e0aedd3c11f6e9467485197c87" translate="yes" xml:space="preserve">
          <source>While formatting preferences are very personal, a number of style guides require or disallow spaces between computed properties in the following situations:</source>
          <target state="translated">虽然格式化偏好是非常个人化的,但许多样式指南在以下情况下要求或不允许计算属性之间有空格。</target>
        </trans-unit>
        <trans-unit id="95f4505cf507f8d42dd7d42c5558ca7478a729d0" translate="yes" xml:space="preserve">
          <source>While formatting preferences are very personal, a number of style guides require or disallow spaces between curly braces in the following situations:</source>
          <target state="translated">虽然格式偏好是非常个人化的,但在以下情况下,许多样式指南要求或不允许在大括号之间留有空格。</target>
        </trans-unit>
        <trans-unit id="f05e62b6f2060865e9ec4b62cc00cdb590d96030" translate="yes" xml:space="preserve">
          <source>While formatting preferences are very personal, a number of style guides require spaces around operators, such as:</source>
          <target state="translated">虽然格式偏好是非常个人化的,但一些风格指南要求在运算符周围留有空格,例如:</target>
        </trans-unit>
        <trans-unit id="d055d4afaa69216abb5964c95be2721bea469f97" translate="yes" xml:space="preserve">
          <source>While it is allowed to define the pair for a getter or a setter anywhere in an object or class definition, it's considered a best practice to group accessor functions for the same property.</source>
          <target state="translated">虽然允许在对象或类定义中的任何地方为getter或setter定义对,但认为最好的做法是将同一属性的访问函数分组。</target>
        </trans-unit>
        <trans-unit id="9d88f9eac375bda3a235e91d455dae4d347e664d" translate="yes" xml:space="preserve">
          <source>While it's possible to have whitespace between the name of a function and the parentheses that execute it, such patterns tend to look more like errors.</source>
          <target state="translated">虽然在函数名和执行函数的括号之间可以有空格,但这种模式看起来更像是错误。</target>
        </trans-unit>
        <trans-unit id="e7c4b87b0aeb5522a09379b8987d2ad80de6211b" translate="yes" xml:space="preserve">
          <source>While no style is considered better than the other, most developers agree that having a consistent style throughout a project is important for its long-term maintainability.</source>
          <target state="translated">虽然没有任何一种风格被认为比其他风格更好,但大多数开发者都认为,在整个项目中拥有一致的风格对于项目的长期可维护性非常重要。</target>
        </trans-unit>
        <trans-unit id="c9bd1ba118ab46e26a22fd543291c93549359df6" translate="yes" xml:space="preserve">
          <source>While returning a value from a setter does not produce an error, the returned value is being ignored. Therefore, returning a value from a setter is either unnecessary or a possible error, since the returned value cannot be used.</source>
          <target state="translated">虽然从setter中返回一个值不会产生错误,但返回的值被忽略了。因此,从setter返回一个值要么是不必要的,要么是可能的错误,因为返回的值不能被使用。</target>
        </trans-unit>
        <trans-unit id="24b0cbc319260120c825ff5810ce1e3e83466613" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;items&lt;/code&gt; array in this example has a &lt;code&gt;length&lt;/code&gt; of 2, there are actually no values in &lt;code&gt;items[0]&lt;/code&gt; or &lt;code&gt;items[1]&lt;/code&gt;. The fact that the array literal is valid with only commas inside, coupled with the &lt;code&gt;length&lt;/code&gt; being set and actual item values not being set, make sparse arrays confusing for many developers. Consider the following:</source>
          <target state="translated">尽管本示例中的 &lt;code&gt;items&lt;/code&gt; 数组的 &lt;code&gt;length&lt;/code&gt; 为2，但实际上 &lt;code&gt;items[0]&lt;/code&gt; 或 &lt;code&gt;items[1]&lt;/code&gt; 没有值。数组字面量仅在内部使用逗号是有效的事实，再加上设置的 &lt;code&gt;length&lt;/code&gt; 和未设置的实际项目值，使稀疏数组使许多开发人员感到困惑。考虑以下：</target>
        </trans-unit>
        <trans-unit id="f234db536011aa575688b43d86c313f74c7f0a44" translate="yes" xml:space="preserve">
          <source>While there are no performance differences between the two approaches, the byte savings and conciseness of the object literal form is what has made it the de facto way of creating new objects.</source>
          <target state="translated">虽然这两种方法在性能上没有区别,但对象文字形式的字节节省和简洁性使其成为创建新对象的事实上的方式。</target>
        </trans-unit>
        <trans-unit id="abc8de1d6373af77c99606ce310c2bfa6eb601d3" translate="yes" xml:space="preserve">
          <source>While this is valid JavaScript syntax, it is hard to determine what the author intended.</source>
          <target state="translated">虽然这是有效的JavaScript语法,但很难确定作者的意图。</target>
        </trans-unit>
        <trans-unit id="47b13cdb0607925057b8e9d36b0386d1a11eb54c" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
          <target state="translated">Whitespace</target>
        </trans-unit>
        <trans-unit id="2959ec3d09a773efa13db9717c2200b428f7a939" translate="yes" xml:space="preserve">
          <source>Whitespace between a function name and its parameter list is optional.</source>
          <target state="translated">函数名和参数列表之间的空格是可选的。</target>
        </trans-unit>
        <trans-unit id="3a7ac655f9d858d70a71d43d5e425ebf504053ad" translate="yes" xml:space="preserve">
          <source>Why not use &lt;code&gt;max-statements&lt;/code&gt; or other complexity measurement rules instead?</source>
          <target state="translated">为什么不使用 &lt;code&gt;max-statements&lt;/code&gt; 或其他复杂性度量规则呢？</target>
        </trans-unit>
        <trans-unit id="c0db24e617409556a049b18d97243e71aeff0fa5" translate="yes" xml:space="preserve">
          <source>Why would you want to restrict a module?</source>
          <target state="translated">为什么你要限制一个模块?</target>
        </trans-unit>
        <trans-unit id="a53bafb0392a4642abd5c673a31dd5985aabb07e" translate="yes" xml:space="preserve">
          <source>Why would you want to restrict imports?</source>
          <target state="translated">为什么要限制进口?</target>
        </trans-unit>
        <trans-unit id="d1ee831b819c0a1c73da610e4524b70bce25e441" translate="yes" xml:space="preserve">
          <source>Will produce the following output:</source>
          <target state="translated">将产生以下输出。</target>
        </trans-unit>
        <trans-unit id="47722f302f719e5a3cdc78148624357a483a6720" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;enforceForClassMembers&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; (default), the rule also disallows/enforces spaces inside of computed keys of class methods, getters and setters.</source>
          <target state="translated">将 &lt;code&gt;enforceForClassMembers&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; （默认值）后，该规则还将禁止/强制在类方法，getter和setter的计算键中添加空格。</target>
        </trans-unit>
        <trans-unit id="3761ecd349f048bb5b8ad00362e8f092a85620b4" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;natural&lt;/code&gt; as false, the ordering would be 1 10 3 6 8</source>
          <target state="translated">如果 &lt;code&gt;natural&lt;/code&gt; 为假，则排序为1 10 3 6 8</target>
        </trans-unit>
        <trans-unit id="c01232fd7f3f7dfd38909a754e7cc306c6933563" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;natural&lt;/code&gt; as true, the ordering would be 1 3 6 8 10</source>
          <target state="translated">如果 &lt;code&gt;natural&lt;/code&gt; 为真，则排序将为1 3 6 8 10</target>
        </trans-unit>
        <trans-unit id="d785c50edfc0dbd60d2a64feee379ed34c218574" translate="yes" xml:space="preserve">
          <source>With ES6, it's possible to create functions called &lt;a href=&quot;#further-reading&quot;&gt;tagged template literals&lt;/a&gt; where the function parameters consist of a template literal's strings and expressions.</source>
          <target state="translated">使用ES6，可以创建称为&lt;a href=&quot;#further-reading&quot;&gt;标记模板文字&lt;/a&gt;的函数，其中函数参数由模板文字的字符串和表达式组成。</target>
        </trans-unit>
        <trans-unit id="a9694d5882ad512e79d20ad557b3c3e2d29bd728" translate="yes" xml:space="preserve">
          <source>With ESLint v3.0.0, we are dropping support for Node.js versions prior to 4. Node.js 0.10 and 0.12 are in &lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;maintenance mode&lt;/a&gt; and Node.js 4 is the current LTS version. If you are using an older version of Node.js, we recommend upgrading to at least Node.js 4 as soon as possible. If you are unable to upgrade to Node.js 4 or higher, then we recommend continuing to use ESLint v2.x until you are ready to upgrade Node.js.</source>
          <target state="translated">使用ESLint v3.0.0，我们将不再支持4之前的Node.js版本。Node.js0.10和0.12处于&lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;维护模式，&lt;/a&gt;而Node.js 4是当前的LTS版本。如果您使用的是旧版本的Node.js，建议您尽快升级到至少Node.js 4。如果您无法升级到Node.js 4或更高版本，那么我们建议您继续使用ESLint v2.x，直到您准备升级Node.js。</target>
        </trans-unit>
        <trans-unit id="f738eadf308e98ed8b558385152e0810dbbb0149" translate="yes" xml:space="preserve">
          <source>With JavaScript ES6, a new syntax was added for creating variables from an array index or object property, called &lt;a href=&quot;#further-reading&quot;&gt;destructuring&lt;/a&gt;. This rule enforces usage of destructuring instead of accessing a property through a member expression.</source>
          <target state="translated">使用JavaScript ES6，添加了一种新语法，用于从数组索引或对象属性创建变量，称为&lt;a href=&quot;#further-reading&quot;&gt;destructuring&lt;/a&gt;。该规则强制执行解构操作，而不是通过成员表达式访问属性。</target>
        </trans-unit>
        <trans-unit id="57127019f1509597574f983a2678ce6e71f7790d" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;../rules/no-restricted-syntax&quot;&gt;no-restricted-syntax&lt;/a&gt; rule, you can restrict the usage of particular syntax in your code. For example, you can use the following configuration to disallow using &lt;code&gt;if&lt;/code&gt; statements that do not have block statements as their body:</source>
          <target state="translated">使用&lt;a href=&quot;../rules/no-restricted-syntax&quot;&gt;no-restricted-syntax&lt;/a&gt;规则，您可以限制代码中特定语法的使用。例如，您可以使用以下配置来禁止使用不以语句块作为主体的 &lt;code&gt;if&lt;/code&gt; 语句：</target>
        </trans-unit>
        <trans-unit id="a2dbe434ed943c250d0b627de73aaf46b0b6237c" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;no-console&lt;/code&gt; rule in the above example, ESLint will report an error. For the above example, you can disable the rule:</source>
          <target state="translated">使用上述示例中的 &lt;code&gt;no-console&lt;/code&gt; 规则，ESLint将报告错误。对于上面的示例，您可以禁用规则：</target>
        </trans-unit>
        <trans-unit id="2d65fde606f7cac945cb670aeed1ad1a40f85888" translate="yes" xml:space="preserve">
          <source>With the landing of ECMAScript 2018, named capture groups can be used in regular expressions, which can improve their readability.</source>
          <target state="translated">随着ECMAScript 2018的落地,命名的捕捉组可以用在正则表达式中,这样可以提高其可读性。</target>
        </trans-unit>
        <trans-unit id="14abd5610a4a8c353b6349e67b281b4db7600a4e" translate="yes" xml:space="preserve">
          <source>With this change, any unknown values in a &lt;code&gt;globals&lt;/code&gt; object result in a config validation error.</source>
          <target state="translated">进行此更改后， &lt;code&gt;globals&lt;/code&gt; 对象中的任何未知值都将导致配置验证错误。</target>
        </trans-unit>
        <trans-unit id="0e926cbdcb99b945229437e398eca4b6e42eaa74" translate="yes" xml:space="preserve">
          <source>With this option set to &lt;code&gt;true&lt;/code&gt; the rule is additionally enforced for:</source>
          <target state="translated">将此选项设置为 &lt;code&gt;true&lt;/code&gt; 时,将对以下条件强制执行该规则：</target>
        </trans-unit>
        <trans-unit id="78d9433fdc1bf9be47875f8ba4596d9dc301fe59" translate="yes" xml:space="preserve">
          <source>With this syntax, it is possible to rename a reference to the same name. This is a completely redundant operation, as this is the same as not renaming at all. For example, this:</source>
          <target state="translated">使用这种语法,可以将一个引用重命名为相同的名字。这是一个完全多余的操作,因为这和完全不重命名是一样的。例如,这。</target>
        </trans-unit>
        <trans-unit id="02ca31a1f795ee4542c1b86397f7a5ff221b1d4b" translate="yes" xml:space="preserve">
          <source>With your code ready to go, this is a good time to double-check your submission to make sure it follows our conventions. Here are the things to check:</source>
          <target state="translated">当你的代码准备就绪后,现在是一个很好的时间来仔细检查你提交的代码,以确保它符合我们的惯例。以下是需要检查的事项。</target>
        </trans-unit>
        <trans-unit id="601b82919f56b023a6ac2f0d9e03ca91fb600482" translate="yes" xml:space="preserve">
          <source>Wondering if ESLint will work with your favorite editor or build system? This section has a list of all known integrations (submitted by their authors).</source>
          <target state="translated">想知道ESLint是否能与您最喜欢的编辑器或构建系统一起工作?本节列出了所有已知的集成(由作者提交)。</target>
        </trans-unit>
        <trans-unit id="d7a484140f5f9f7f5427e1f2c44dbfc1d3ad9eea" translate="yes" xml:space="preserve">
          <source>Workflow</source>
          <target state="translated">Workflow</target>
        </trans-unit>
        <trans-unit id="4d00e4b5ed7c06a07c082643961ab01179f8644a" translate="yes" xml:space="preserve">
          <source>Working on Issues</source>
          <target state="translated">就问题开展工作</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
