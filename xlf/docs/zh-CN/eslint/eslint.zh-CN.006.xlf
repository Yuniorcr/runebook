<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="eslint">
    <body>
      <group id="eslint">
        <trans-unit id="a05409697e85649207fda3ec4adf2978841d64e9" translate="yes" xml:space="preserve">
          <source>The promise that will be fulfilled after all files are written.</source>
          <target state="translated">承诺,在所有文件写完后将会实现。</target>
        </trans-unit>
        <trans-unit id="2a2cd5efb0c948ebdbe12aabca7fbb672ea3acab" translate="yes" xml:space="preserve">
          <source>The promise that will be fulfilled with a &lt;a href=&quot;#-formatter-type&quot;&gt;Formatter&lt;/a&gt; object.</source>
          <target state="translated">将通过&lt;a href=&quot;#-formatter-type&quot;&gt;Formatter&lt;/a&gt;对象实现的承诺。</target>
        </trans-unit>
        <trans-unit id="478dfcc83dc754277166d46e9b3d38e748913611" translate="yes" xml:space="preserve">
          <source>The promise that will be fulfilled with a configuration object.</source>
          <target state="translated">用配置对象实现的承诺。</target>
        </trans-unit>
        <trans-unit id="c0fc0e0cd457cdd25ed6e640cda0efc522fcc0b6" translate="yes" xml:space="preserve">
          <source>The promise that will be fulfilled with an array of &lt;a href=&quot;#-lintresult-type&quot;&gt;LintResult&lt;/a&gt; objects.</source>
          <target state="translated">可以通过&lt;a href=&quot;#-lintresult-type&quot;&gt;LintResult&lt;/a&gt;对象数组实现的承诺。</target>
        </trans-unit>
        <trans-unit id="aa291d0f16227cc6e0c9871b3f5369125da25d86" translate="yes" xml:space="preserve">
          <source>The promise that will be fulfilled with an array of &lt;a href=&quot;#-lintresult-type&quot;&gt;LintResult&lt;/a&gt; objects. This is an array (despite there being only one lint result) in order to keep the interfaces between this and the &lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt;&lt;code&gt;eslint.lintFiles()&lt;/code&gt;&lt;/a&gt; method similar.</source>
          <target state="translated">可以通过&lt;a href=&quot;#-lintresult-type&quot;&gt;LintResult&lt;/a&gt;对象数组实现的承诺。这是一个数组（尽管只有一个皮棉结果），以使此&lt;a href=&quot;#-eslintlintfilespatterns&quot;&gt; &lt;code&gt;eslint.lintFiles()&lt;/code&gt; &lt;/a&gt;与eslint.lintFiles（）方法之间的接口保持相似。</target>
        </trans-unit>
        <trans-unit id="8a5e3b16efbb634d1ac4a691dd800a96c5e8a3a4" translate="yes" xml:space="preserve">
          <source>The promise that will be fulfilled with whether the file is ignored or not. If the file is ignored, then it will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">无论是否忽略文件，都将实现承诺。如果忽略该文件，则它将返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3bb0c19b313c5a8f9e87aaba0c7d42779858d8a" translate="yes" xml:space="preserve">
          <source>The proponents of these extra spaces believe it make the code easier to read and can more easily highlight potential errors, such as:</source>
          <target state="translated">这些额外空间的支持者认为,它使代码更容易阅读,并可以更容易地突出潜在的错误,如。</target>
        </trans-unit>
        <trans-unit id="842b4413185a6f29a14a60bf357af03cfc8c67fc" translate="yes" xml:space="preserve">
          <source>The pull request must have a description. The description should explain what you did and how its effects can be seen.</source>
          <target state="translated">拉取请求必须有一个描述。描述应该解释你做了什么,以及如何看到它的效果。</target>
        </trans-unit>
        <trans-unit id="9f51bbd346695224f5a3bba69d99964bfc48d685" translate="yes" xml:space="preserve">
          <source>The purpose is to avoid expressions such as &lt;code&gt;! a &amp;lt; b&lt;/code&gt; (which is equivalent to &lt;code&gt;(a ? 0 : 1) &amp;lt; b&lt;/code&gt;) when what is really intended is &lt;code&gt;!(a &amp;lt; b)&lt;/code&gt;.</source>
          <target state="translated">目的是避免使用诸如 &lt;code&gt;! a &amp;lt; b&lt;/code&gt; 当真正想要的是 &lt;code&gt;!(a &amp;lt; b)&lt;/code&gt; 时，a &amp;lt;b（等于 &lt;code&gt;(a ? 0 : 1) &amp;lt; b&lt;/code&gt; &amp;lt;b）。</target>
        </trans-unit>
        <trans-unit id="d6c661a567da1e6f27caf7616e695a2df7785021" translate="yes" xml:space="preserve">
          <source>The purpose of the &lt;code&gt;delete&lt;/code&gt; operator is to remove a property from an object. Using the &lt;code&gt;delete&lt;/code&gt; operator on a variable might lead to unexpected behavior.</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; 运算符的目的是从对象中删除属性。在变量上使用 &lt;code&gt;delete&lt;/code&gt; 运算符可能会导致意外行为。</target>
        </trans-unit>
        <trans-unit id="8dc19192de8fb3195f72308a36d5ed027027af0b" translate="yes" xml:space="preserve">
          <source>The range indexes of all tokens and comments must not overlap with the range of other tokens and comments.</source>
          <target state="translated">所有令牌和注释的范围索引不得与其他令牌和注释的范围重叠。</target>
        </trans-unit>
        <trans-unit id="b0a76dd0dfcefbc58816ee112b837c5543da7412" translate="yes" xml:space="preserve">
          <source>The reason for this is that &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; do type coercion which follows the rather obscure &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3&quot;&gt;Abstract Equality Comparison Algorithm&lt;/a&gt;. For instance, the following statements are all considered &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">这是因为 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; 会执行类型强制，它遵循相当晦涩的&amp;ldquo; &lt;a href=&quot;https://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3&quot;&gt;抽象相等比较算法&amp;rdquo;&lt;/a&gt;。例如，以下语句均被视为 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="01205e0f79602a8ffcecdc5bb5ff7825b476d8a2" translate="yes" xml:space="preserve">
          <source>The replacement for &lt;code&gt;eslint-tester&lt;/code&gt; is called &lt;code&gt;RuleTester&lt;/code&gt;. It's a simplified version of &lt;code&gt;ESLintTester&lt;/code&gt; that's designed to work with any testing framework. This object is exposed by the package.</source>
          <target state="translated">&lt;code&gt;eslint-tester&lt;/code&gt; 的替代品称为 &lt;code&gt;RuleTester&lt;/code&gt; 。它是 &lt;code&gt;ESLintTester&lt;/code&gt; 的简化版本，旨在与任何测试框架一起使用。该对象由包装暴露。</target>
        </trans-unit>
        <trans-unit id="ec0504699dd72d01190815f60c9e51a4931c510f" translate="yes" xml:space="preserve">
          <source>The resulting configuration file will be created in the current directory.</source>
          <target state="translated">由此产生的配置文件将在当前目录下创建。</target>
        </trans-unit>
        <trans-unit id="e5b1d156a93c697ddb2fcff08bf4e5ddbeae4405" translate="yes" xml:space="preserve">
          <source>The return value is always a &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">返回值始终是 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fed8bcfb8b284135209f390faca018017c1afbc2" translate="yes" xml:space="preserve">
          <source>The return value is an object containing the results of the linting operation. Here's an example of a report object:</source>
          <target state="translated">返回值是一个包含绒毛操作结果的对象。下面是一个报告对象的例子。</target>
        </trans-unit>
        <trans-unit id="5b239408a9248b22ceeef20494942f4aa29a953c" translate="yes" xml:space="preserve">
          <source>The return value of the executor is ignored. Returning a value from an executor function is a possible error because the returned value cannot be used and it doesn't affect the promise in any way.</source>
          <target state="translated">执行器的返回值会被忽略。从执行器函数中返回一个值是一个可能的错误,因为返回的值不能被使用,而且它不会以任何方式影响承诺。</target>
        </trans-unit>
        <trans-unit id="66df5448c616e295ecb49452adc535d44bedae83" translate="yes" xml:space="preserve">
          <source>The returned value is a &lt;a href=&quot;scope-manager-interface&quot;&gt;&lt;code&gt;Scope&lt;/code&gt; object&lt;/a&gt; defined by the &lt;code&gt;eslint-scope&lt;/code&gt; package. The &lt;code&gt;Variable&lt;/code&gt; objects of global variables have some additional properties.</source>
          <target state="translated">返回的值是 &lt;code&gt;eslint-scope&lt;/code&gt; 包定义的&lt;a href=&quot;scope-manager-interface&quot;&gt; &lt;code&gt;Scope&lt;/code&gt; 对象&lt;/a&gt;。全局变量的 &lt;code&gt;Variable&lt;/code&gt; 对象具有一些其他属性。</target>
        </trans-unit>
        <trans-unit id="5fb2e185527cd54c372b96c8a8cf85ca7037ac9b" translate="yes" xml:space="preserve">
          <source>The rule &lt;code&gt;func-style&lt;/code&gt; has a default configuration of &lt;code&gt;&quot;expression&quot;&lt;/code&gt;, but in ESLint &lt;code&gt;1.x&lt;/code&gt;, &lt;code&gt;eslint:recommended&lt;/code&gt; defaulted it to &lt;code&gt;&quot;declaration&quot;&lt;/code&gt;.</source>
          <target state="translated">规则 &lt;code&gt;func-style&lt;/code&gt; 的默认配置为 &lt;code&gt;&quot;expression&quot;&lt;/code&gt; ，但是在ESLint &lt;code&gt;1.x&lt;/code&gt; 中， &lt;code&gt;eslint:recommended&lt;/code&gt; 将其默认设置为 &lt;code&gt;&quot;declaration&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21a84406c09ff8a1049a29b0ba218718b7bf5a81" translate="yes" xml:space="preserve">
          <source>The rule &lt;code&gt;no-multiple-empty-lines&lt;/code&gt; has no default exceptions, but in ESLint &lt;code&gt;1.x&lt;/code&gt;, a default from &lt;code&gt;eslint:recommended&lt;/code&gt; was applied such that a maximum of two empty lines would be permitted.</source>
          <target state="translated">规则 &lt;code&gt;no-multiple-empty-lines&lt;/code&gt; 没有默认例外，但是在ESLint &lt;code&gt;1.x&lt;/code&gt; 中，应用了 &lt;code&gt;eslint:recommended&lt;/code&gt; 的默认值，以便最多允许两个空行。</target>
        </trans-unit>
        <trans-unit id="7adf5f9d34968505ac2e7499ab22de53834a46bf" translate="yes" xml:space="preserve">
          <source>The rule always ignores directive comments such as &lt;code&gt;/* eslint-disable */&lt;/code&gt;. Additionally, unless the mode is &lt;code&gt;&quot;starred-block&quot;&lt;/code&gt;, the rule ignores JSDoc comments.</source>
          <target state="translated">该规则始终忽略指令注释，例如 &lt;code&gt;/* eslint-disable */&lt;/code&gt; 。另外，除非模式为 &lt;code&gt;&quot;starred-block&quot;&lt;/code&gt; ，否则规则将忽略JSDoc注释。</target>
        </trans-unit>
        <trans-unit id="a5ddf9fff8f7365d084f3f3463580ae57890e091" translate="yes" xml:space="preserve">
          <source>The rule applies to the operators listed in the above table. It does not report the logical assignment operators &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt;, &lt;code&gt;||=&lt;/code&gt;, and &lt;code&gt;??=&lt;/code&gt; because their short-circuiting behavior is different from the other assignment operators.</source>
          <target state="translated">该规则适用于上表中列出的运算符。它不报告逻辑赋值运算符 &lt;code&gt;&amp;amp;&amp;amp;=&lt;/code&gt; ， &lt;code&gt;||=&lt;/code&gt; 和 &lt;code&gt;??=&lt;/code&gt; 因为它们的短路行为与其他赋值运算符不同。</target>
        </trans-unit>
        <trans-unit id="1171a6f455e8b040c25a7ba3151c5477780f5c03" translate="yes" xml:space="preserve">
          <source>The rule can also be configured to discourage the use of parens when they are not required:</source>
          <target state="translated">该规则还可以配置为在不需要时不鼓励使用parens。</target>
        </trans-unit>
        <trans-unit id="f8d163ee49a74afcc2907a73bba3064a962e824c" translate="yes" xml:space="preserve">
          <source>The rule cannot easily verify that the assignment is safe (e.g. if an assigned variable is local and would not be readable from anywhere else while the function is paused).</source>
          <target state="translated">该规则不容易验证赋值是否安全(例如,如果一个赋值的变量是本地的,在函数暂停时不能从其他地方读取)。</target>
        </trans-unit>
        <trans-unit id="4e9a5ee2475613eb335126f52cf5aaa9b33b67b5" translate="yes" xml:space="preserve">
          <source>The rule disallows octal literals.</source>
          <target state="translated">该规则不允许使用八进制文字。</target>
        </trans-unit>
        <trans-unit id="bed31bfa847f3bb2487f9e377612a105ec30b864" translate="yes" xml:space="preserve">
          <source>The rule does not disallow all use of the &lt;code&gt;RegExp&lt;/code&gt; constructor. It should be still used for dynamically generated regular expressions.</source>
          <target state="translated">该规则并不禁止所有使用 &lt;code&gt;RegExp&lt;/code&gt; 构造函数。它仍应用于动态生成的正则表达式。</target>
        </trans-unit>
        <trans-unit id="888d43f5f339c3eab2911b0abe2728f2ab5aeaab" translate="yes" xml:space="preserve">
          <source>The rule has a second object with a single key, &lt;code&gt;enforceForRenamedProperties&lt;/code&gt;, which determines whether the &lt;code&gt;object&lt;/code&gt; destructuring applies to renamed variables.</source>
          <target state="translated">该规则具有第二个对象，该对象具有单个键 &lt;code&gt;enforceForRenamedProperties&lt;/code&gt; ，该 &lt;code&gt;object&lt;/code&gt; 确定对象解构是否适用于重命名的变量。</target>
        </trans-unit>
        <trans-unit id="3437f8bb30162415e42db275afc1baef0285612b" translate="yes" xml:space="preserve">
          <source>The rule name that generates this lint message. If this message is generated by the ESLint core rather than rules, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">生成此皮棉消息的规则名称。如果此消息是由ESLint核心而非规则生成的，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac3e6cce45a94e0899d9d17de8ece5be87643b66" translate="yes" xml:space="preserve">
          <source>The rule naming conventions for ESLint are fairly simple:</source>
          <target state="translated">ESLint的规则命名惯例相当简单。</target>
        </trans-unit>
        <trans-unit id="6a2d5c1c9e0896db23badf6274b8965eaac23cce" translate="yes" xml:space="preserve">
          <source>The rule object itself (see &lt;a href=&quot;working-with-rules&quot;&gt;&quot;working with rules&quot;&lt;/a&gt;)</source>
          <target state="translated">规则对象本身（请参阅&lt;a href=&quot;working-with-rules&quot;&gt;&amp;ldquo;使用规则&amp;rdquo;&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="573e671e86a4cf56bbe5f205a42e8701c29ec3d5" translate="yes" xml:space="preserve">
          <source>The rule offers one object option, &lt;code&gt;allowAllPropertiesOnSameLine&lt;/code&gt; (a deprecated synonym is &lt;code&gt;allowMultiplePropertiesPerLine&lt;/code&gt;). If you set it to &lt;code&gt;true&lt;/code&gt;, object literals such as the first two above, with all property specifications on the same line, will be permitted, but one like</source>
          <target state="translated">该规则提供一个对象选项 &lt;code&gt;allowAllPropertiesOnSameLine&lt;/code&gt; （不赞成使用的同义词是 &lt;code&gt;allowMultiplePropertiesPerLine&lt;/code&gt; ）。如果将其设置为 &lt;code&gt;true&lt;/code&gt; ，则允许使用诸如上面的前两个之类的对象文字，并且所有属性说明都在同一行上，但是类似</target>
        </trans-unit>
        <trans-unit id="eb4b25449f8d19c4a4b92c230c486f587789325f" translate="yes" xml:space="preserve">
          <source>The rule prohibits the colocation on any line of at least 1 character of one property specification with at least 1 character of any other property specification. For example, the rule prohibits</source>
          <target state="translated">该规则禁止在任何线路上将一个属性规范的至少1个字符与任何其他属性规范的至少1个字符并列。例如,该规则禁止</target>
        </trans-unit>
        <trans-unit id="bdcc4c0ed6a72ea505652fd2189129b9ba9488a3" translate="yes" xml:space="preserve">
          <source>The rule should warn against code that tries to compare against -0, since that will not work as intended. That is, code like x === -0 will pass for both +0 and -0. The author probably intended Object.is(x, -0).</source>
          <target state="translated">这条规则应该对试图与-0进行比较的代码发出警告,因为这不会像预期的那样工作,也就是说,像x ===-0这样的代码对+0和-0都会通过。也就是说,像x ===-0这样的代码对+0和-0都会通过。作者可能是想让Object.is(x,-0)。</target>
        </trans-unit>
        <trans-unit id="9b89d3d9863252a32c9946759fd7f3504dc7b79d" translate="yes" xml:space="preserve">
          <source>The rule takes a single option - an array of possible callback names - which may include object methods. The default callback names are &lt;code&gt;callback&lt;/code&gt;, &lt;code&gt;cb&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">该规则采用一个选项-可能的回调名称数组-其中可能包含对象方法。默认的回调名称是 &lt;code&gt;callback&lt;/code&gt; ， &lt;code&gt;cb&lt;/code&gt; 和 &lt;code&gt;next&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e78c1edcadc43d22698299cf6fb661f963ea1c1d" translate="yes" xml:space="preserve">
          <source>The rule takes a single string option: the name of the error parameter. The default is &lt;code&gt;&quot;err&quot;&lt;/code&gt;.</source>
          <target state="translated">该规则采用单个字符串选项：error参数的名称。默认值为 &lt;code&gt;&quot;err&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73945e310046d0fe600a76487db931bee8eb7989" translate="yes" xml:space="preserve">
          <source>The rule takes an option which specifies when it should be applied. It can be set to one of the following values:</source>
          <target state="translated">该规则有一个选项,指定何时应用。它可以设置为下列数值之一:</target>
        </trans-unit>
        <trans-unit id="c17458aebea2edf7596655f8173de5c166baa09e" translate="yes" xml:space="preserve">
          <source>The rule takes one option, a string, which must contain one of the following values:</source>
          <target state="translated">该规则只有一个选项,即一个字符串,它必须包含以下值之一:</target>
        </trans-unit>
        <trans-unit id="1f25147392b3d78c1603fd60eeee2d70ca798f11" translate="yes" xml:space="preserve">
          <source>The rule takes one option, a string:</source>
          <target state="translated">该规则只需要一个选项,一个字符串。</target>
        </trans-unit>
        <trans-unit id="742233dad80fe18547618108d6a2b86bff76a785" translate="yes" xml:space="preserve">
          <source>The rule takes one option, an object, which has two keys &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; having boolean values &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">该规则采用一个选项，即一个对象，该对象 &lt;code&gt;after&lt;/code&gt; 布尔值 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; &lt;code&gt;before&lt;/code&gt; 和之后都有两个键。</target>
        </trans-unit>
        <trans-unit id="827020a96c9caecec65cc7a0552676f015b27688" translate="yes" xml:space="preserve">
          <source>The rule takes one option, an object, which has two keys &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; having boolean values &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;before&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, space is enforced before semicolons and if it's &lt;code&gt;false&lt;/code&gt;, space is disallowed before semicolons. If &lt;code&gt;after&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, space is enforced after semicolons and if it's &lt;code&gt;false&lt;/code&gt;, space is disallowed after semicolons. The &lt;code&gt;after&lt;/code&gt; option will be only applied if a semicolon is not at the end of line.</source>
          <target state="translated">该规则采用一个选项，即一个对象，该对象 &lt;code&gt;after&lt;/code&gt; 布尔值 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; &lt;code&gt;before&lt;/code&gt; 和之后都有两个键。如果 &lt;code&gt;before&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则在分号之前强制使用空格，如果为 &lt;code&gt;false&lt;/code&gt; ，则在分号之前禁止使用空格。如果 &lt;code&gt;after&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则在分号后强制使用空格，如果为 &lt;code&gt;false&lt;/code&gt; ，则在分号后禁止使用空格。在 &lt;code&gt;after&lt;/code&gt; 选项将如果分号不在行尾仅应用于。</target>
        </trans-unit>
        <trans-unit id="96c7f241e413db9d83cd41a7c8e69e1a5a46c14d" translate="yes" xml:space="preserve">
          <source>The rule takes one or more strings as options: the names of restricted identifiers.</source>
          <target state="translated">该规则将一个或多个字符串作为选项:受限标识符的名称。</target>
        </trans-unit>
        <trans-unit id="4375aa6346f33b27f068e7c881fdcd22248263e0" translate="yes" xml:space="preserve">
          <source>The rule takes one or more strings as options: the names of restricted modules.</source>
          <target state="translated">该规则需要一个或多个字符串作为选项:受限模块的名称。</target>
        </trans-unit>
        <trans-unit id="a9cca4aaa304d533ffa99e0d4d45692dc6af248a" translate="yes" xml:space="preserve">
          <source>The rule takes one or two options. The first is a string, which can be:</source>
          <target state="translated">该规则需要一个或两个选项。第一个是一个字符串,它可以是:</target>
        </trans-unit>
        <trans-unit id="2047f79a374a9de4c018efebf01b37f2c42427b1" translate="yes" xml:space="preserve">
          <source>The rule takes two options.</source>
          <target state="translated">该规则采取两种方案。</target>
        </trans-unit>
        <trans-unit id="47e30af986fb27902392df154c435e433c1df14f" translate="yes" xml:space="preserve">
          <source>The rule takes two options:</source>
          <target state="translated">该规则采取两种方案。</target>
        </trans-unit>
        <trans-unit id="8014e10667a7389e5554d8b3b067d38491926c25" translate="yes" xml:space="preserve">
          <source>The rules for ASI are relatively straightforward: As once described by Isaac Schlueter, a newline character always ends a statement, just like a semicolon, &lt;strong&gt;except&lt;/strong&gt; where one of the following is true:</source>
          <target state="translated">ASI的规则相对简单：正如Isaac Schlueter所述，换行符总是以分号结尾，就像分号一样，&lt;strong&gt;除非&lt;/strong&gt;满足以下条件之一：</target>
        </trans-unit>
        <trans-unit id="031820acd6f073ce407b24b6015d596945b36976" translate="yes" xml:space="preserve">
          <source>The rules in your custom rules directory must follow the same format as bundled rules to work properly. You can also specify multiple locations for custom rules by including multiple &lt;code&gt;--rulesdir&lt;/code&gt; options:</source>
          <target state="translated">自定义规则目录中的规则必须遵循与捆绑规则相同的格式，才能正常工作。您还可以通过包含多个 &lt;code&gt;--rulesdir&lt;/code&gt; 选项为自定义规则指定多个位置：</target>
        </trans-unit>
        <trans-unit id="4f407752be68d13cfd5b93589acf43759c14d2f6" translate="yes" xml:space="preserve">
          <source>The same rule does apply to scoped packages:</source>
          <target state="translated">同样的规则确实适用于范围内的包。</target>
        </trans-unit>
        <trans-unit id="bfddd41eadd81befb51598e392aaccc185efc70f" translate="yes" xml:space="preserve">
          <source>The second argument is an object with one key, &lt;code&gt;&quot;exceptions&quot;&lt;/code&gt;. The value is an array of string patterns which are considered exceptions to the rule. It is important to note that the exceptions are ignored if the first argument is &lt;code&gt;&quot;never&quot;&lt;/code&gt;. Exceptions cannot be mixed.</source>
          <target state="translated">第二个参数是带有一个键 &lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; 的对象。该值是一个字符串模式数组，被认为是该规则的例外。重要的是要注意，如果第一个参数为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则忽略异常。例外不能混在一起。</target>
        </trans-unit>
        <trans-unit id="2e888e2ddf0328509e3f74a9a7c6bebd8faf02e4" translate="yes" xml:space="preserve">
          <source>The second is to save the file wherever you would like and pass its location to the CLI using the &lt;code&gt;-c&lt;/code&gt; option, such as:</source>
          <target state="translated">第二种是将文件保存在任何位置，然后使用 &lt;code&gt;-c&lt;/code&gt; 选项将其位置传递给CLI ，例如：</target>
        </trans-unit>
        <trans-unit id="414ed43decb6eceb64655ac8086b20e4b3916b91" translate="yes" xml:space="preserve">
          <source>The second one is an object for more fine-grained configuration when the first option is &lt;code&gt;&quot;as-needed&quot;&lt;/code&gt;. Currently, the only available option is &lt;code&gt;requireReturnForObjectLiteral&lt;/code&gt;, a boolean property. It's &lt;code&gt;false&lt;/code&gt; by default. If set to &lt;code&gt;true&lt;/code&gt;, it requires braces and an explicit return for object literals.</source>
          <target state="translated">当第一个选项是 &lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; 时，第二个对象是用于更细粒度配置的对象。当前，唯一可用的选项是 &lt;code&gt;requireReturnForObjectLiteral&lt;/code&gt; ，这是一个布尔型属性。这是 &lt;code&gt;false&lt;/code&gt; 默认。如果设置为 &lt;code&gt;true&lt;/code&gt; ，则需要大括号和对象文字的显式返回。</target>
        </trans-unit>
        <trans-unit id="6fa0c837ba16265ad24b0a06aa85ae08d877f9ec" translate="yes" xml:space="preserve">
          <source>The second parameter &lt;code&gt;options&lt;/code&gt; is omittable.</source>
          <target state="translated">第二个参数 &lt;code&gt;options&lt;/code&gt; 是可省略的。</target>
        </trans-unit>
        <trans-unit id="13894c1b5ba8814ae6cea3f9f081dfbf8a0d8858" translate="yes" xml:space="preserve">
          <source>The selector &quot;&lt;code&gt;Identifier&lt;/code&gt;&quot; will match all &lt;code&gt;Identifier&lt;/code&gt; nodes in the program. In this case, the selector will match the nodes for &lt;code&gt;foo&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt;, and &lt;code&gt;baz&lt;/code&gt;.</source>
          <target state="translated">选择器&amp;ldquo; &lt;code&gt;Identifier&lt;/code&gt; &amp;rdquo;将匹配程序中的所有 &lt;code&gt;Identifier&lt;/code&gt; 节点。在这种情况下，选择器将匹配 &lt;code&gt;foo&lt;/code&gt; ， &lt;code&gt;bar&lt;/code&gt; 和 &lt;code&gt;baz&lt;/code&gt; 的节点。</target>
        </trans-unit>
        <trans-unit id="d627846098bcddfc8705e956620c4e04bad2e321" translate="yes" xml:space="preserve">
          <source>The severity of this message. &lt;code&gt;1&lt;/code&gt; means warning and &lt;code&gt;2&lt;/code&gt; means error.</source>
          <target state="translated">此消息的严重性。 &lt;code&gt;1&lt;/code&gt; 表示警告， &lt;code&gt;2&lt;/code&gt; 表示错误。</target>
        </trans-unit>
        <trans-unit id="8edd9e143d8665e59cc0b39cb5fd1623512f2c40" translate="yes" xml:space="preserve">
          <source>The shortened object literal syntax for generators is not affected by this rule.</source>
          <target state="translated">生成器的缩短对象文字语法不受此规则影响。</target>
        </trans-unit>
        <trans-unit id="05a4cde718543d121082d5debd9a3bdb1d814202" translate="yes" xml:space="preserve">
          <source>The simplest example is to use just &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt;:</source>
          <target state="translated">最简单的示例是仅使用 &lt;code&gt;node&lt;/code&gt; 和 &lt;code&gt;message&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="58e6895bfed7fd7cc1d658c75e9fdd7ba3d0ec89" translate="yes" xml:space="preserve">
          <source>The simplest selector is just a node type. A node type selector will match all nodes with the given type. For example, consider the following program:</source>
          <target state="translated">最简单的选择器就是一个节点类型。节点类型选择器将匹配所有给定类型的节点。例如,考虑以下程序。</target>
        </trans-unit>
        <trans-unit id="62b57f47427459031359008bfc01d02938d4e4ea" translate="yes" xml:space="preserve">
          <source>The single-declaration school of thought is based in pre-ECMAScript 6 behaviors, where there was no such thing as block scope, only function scope. Since all &lt;code&gt;var&lt;/code&gt; statements are hoisted to the top of the function anyway, some believe that declaring all variables in a single declaration at the top of the function removes confusion around scoping rules.</source>
          <target state="translated">单声明的思想流派基于ECMAScript 6之前的行为，其中没有诸如块范围之类的东西，只有函数范围之类的东西。由于无论如何所有的 &lt;code&gt;var&lt;/code&gt; 语句都被提升到函数的顶部，因此有人认为在函数顶部的单个声明中声明所有变量可以消除范围界定规则的混乱。</target>
        </trans-unit>
        <trans-unit id="3f23c0f8e2212324dafb94566a41cfac12779d1c" translate="yes" xml:space="preserve">
          <source>The source code text to check.</source>
          <target state="translated">要检查的源代码文本。</target>
        </trans-unit>
        <trans-unit id="98081cf0b97551ce142d7f451c1b647ed7d9f73b" translate="yes" xml:space="preserve">
          <source>The source file for a rule exports an object with the following properties.</source>
          <target state="translated">规则的源文件会导出一个具有以下属性的对象。</target>
        </trans-unit>
        <trans-unit id="13c2d1557a31408916c7784e491c197a095f73af" translate="yes" xml:space="preserve">
          <source>The spacing after the semicolon if it is the first token in the line.</source>
          <target state="translated">如果分号是该行的第一个标记,则分号后的间距。</target>
        </trans-unit>
        <trans-unit id="cb8aafac65e7fc97800fb3d3dac293cf6812e694" translate="yes" xml:space="preserve">
          <source>The spacing around the semicolon in a for loop with an empty condition (&lt;code&gt;for(;;)&lt;/code&gt;).</source>
          <target state="translated">在条件 &lt;code&gt;for(;;)&lt;/code&gt; 空（for（;;））的for循环中，分号周围的间距。</target>
        </trans-unit>
        <trans-unit id="e3e73e8052d68647147779e7d358e891ec3d4c7d" translate="yes" xml:space="preserve">
          <source>The spacing before the semicolon if it is after an opening parenthesis (&lt;code&gt;(&lt;/code&gt; or &lt;code&gt;{&lt;/code&gt;), or the spacing after the semicolon if it is before a closing parenthesis (&lt;code&gt;)&lt;/code&gt; or &lt;code&gt;}&lt;/code&gt;). That spacing is checked by &lt;code&gt;space-in-parens&lt;/code&gt; or &lt;code&gt;block-spacing&lt;/code&gt;.</source>
          <target state="translated">如果分号前的空格在圆括号（ &lt;code&gt;(&lt;/code&gt; 或 &lt;code&gt;{&lt;/code&gt; ）后面），或者分号后的空格在圆括号（ &lt;code&gt;)&lt;/code&gt; 或 &lt;code&gt;}&lt;/code&gt; 之前）。该间距通过有效 &lt;code&gt;space-in-parens&lt;/code&gt; 或 &lt;code&gt;block-spacing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="115bcb8edde69d7ab538f77d4ffd79b7c96251f6" translate="yes" xml:space="preserve">
          <source>The special value &lt;code&gt;null&lt;/code&gt; should be used only in the following situations:</source>
          <target state="translated">特殊值 &lt;code&gt;null&lt;/code&gt; 仅应在以下情况下使用：</target>
        </trans-unit>
        <trans-unit id="55d71491bd24bf8e9266ef7d9b3ed94580c8ef81" translate="yes" xml:space="preserve">
          <source>The standard style, in which commas are placed at the end of the current line</source>
          <target state="translated">标准样式,逗号放在当前行的末尾。</target>
        </trans-unit>
        <trans-unit id="66b17246512ea6227166b244bbc0ac43dcd2b7c9" translate="yes" xml:space="preserve">
          <source>The statement beginning keyword, such as &lt;code&gt;if&lt;/code&gt;, should be followed by one space and the opening brace should be preceded by a space.</source>
          <target state="translated">语句的开始关键字（例如 &lt;code&gt;if&lt;/code&gt; ）后应该有一个空格，而大括号前应有一个空格。</target>
        </trans-unit>
        <trans-unit id="940d15ed0a28b1df513a69296639eec227beace3" translate="yes" xml:space="preserve">
          <source>The statement has an unclosed paren, array literal, or object literal or ends in some other way that is not a valid way to end a statement. (For instance, ending with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;,&lt;/code&gt;.)</source>
          <target state="translated">该语句具有未封闭的括号，数组文字或对象文字，或者以某种不是结束语句的有效方式的其他方式结束。（例如，结尾 &lt;code&gt;.&lt;/code&gt; 或者 &lt;code&gt;,&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="ad8b8f54b2a420ddeed65e63d39098cd71d92cbc" translate="yes" xml:space="preserve">
          <source>The static analysis of this rule does not detect that the program calls the callback from within a nested function or an immediately-invoked function expression (IIFE).</source>
          <target state="translated">该规则的静态分析不会检测到程序从嵌套函数或立即调用函数表达式(IIFE)内调用回调。</target>
        </trans-unit>
        <trans-unit id="f3fcd362b8cea026256d5c99fc33540bb48255c4" translate="yes" xml:space="preserve">
          <source>The static analysis of this rule does not detect that the program calls the callback if it is an argument of a function (for example, &lt;code&gt;setTimeout&lt;/code&gt;).</source>
          <target state="translated">如果该规则是函数的参数（例如 &lt;code&gt;setTimeout&lt;/code&gt; ），则对该规则的静态分析不会检测到程序是否调用了回调。</target>
        </trans-unit>
        <trans-unit id="b0d50eb0c6a5a75a5254c188fa79ce03846654c4" translate="yes" xml:space="preserve">
          <source>The static analysis of this rule does not detect that the program calls the callback only one time in each branch of an &lt;code&gt;if&lt;/code&gt; statement.</source>
          <target state="translated">此规则的静态分析不会检测到程序在 &lt;code&gt;if&lt;/code&gt; 语句的每个分支中仅调用一次回调。</target>
        </trans-unit>
        <trans-unit id="2f6cfcf93f0774ec1b281ebd4cefac2327a634e4" translate="yes" xml:space="preserve">
          <source>The string and object formats can be freely mixed in the configuration as needed.</source>
          <target state="translated">字符串和对象格式可以根据需要在配置中自由混合。</target>
        </trans-unit>
        <trans-unit id="dd57f78073587288601a6f8bd191a69e0806d4ed" translate="yes" xml:space="preserve">
          <source>The string option does not check async arrow function expressions for backward compatibility.</source>
          <target state="translated">字符串选项不检查异步箭头函数表达式的向后兼容性。</target>
        </trans-unit>
        <trans-unit id="311d87885350cd8d74996d157aa1c8fa01351e72" translate="yes" xml:space="preserve">
          <source>The syntax for AST selectors is similar to the syntax for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;CSS selectors&lt;/a&gt;. If you've used CSS selectors before, the syntax for AST selectors should be easy to understand.</source>
          <target state="translated">AST选择器的语法类似于&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;CSS选择器&lt;/a&gt;的语法。如果您以前使用过CSS选择器，则AST选择器的语法应该易于理解。</target>
        </trans-unit>
        <trans-unit id="224d6b2ad3ce554f3d0f9f8c4d66cbd9efd8197b" translate="yes" xml:space="preserve">
          <source>The syntax to specify restricted imports looks like this:</source>
          <target state="translated">指定受限进口的语法是这样的。</target>
        </trans-unit>
        <trans-unit id="5e449fa639405ca5c2bae839b4eb0df0f9b6a757" translate="yes" xml:space="preserve">
          <source>The ten Node.js/CommonJS rules in core have been deprecated and moved to the &lt;a href=&quot;https://github.com/mysticatea/eslint-plugin-node&quot;&gt;eslint-plugin-node&lt;/a&gt; plugin.</source>
          <target state="translated">核心中的十个Node.js / CommonJS规则已被弃用，并移至&lt;a href=&quot;https://github.com/mysticatea/eslint-plugin-node&quot;&gt;eslint-plugin-node&lt;/a&gt;插件。</target>
        </trans-unit>
        <trans-unit id="b7efceeec030359c477714b00506090fb8984485" translate="yes" xml:space="preserve">
          <source>The ternary operator is used to conditionally assign a value to a variable. Some believe that the use of ternary operators leads to unclear code.</source>
          <target state="translated">三元运算符用于有条件地给一个变量赋值。有人认为使用三元运算符会导致代码不清晰。</target>
        </trans-unit>
        <trans-unit id="d10f8a42895796da61c03baea8c9b4879c335514" translate="yes" xml:space="preserve">
          <source>The ternary operator should be used only for assigning values conditionally and never as a shortcut for an &lt;code&gt;if&lt;/code&gt; statement.</source>
          <target state="translated">三元运算符应仅用于有条件地分配值，而不能用作 &lt;code&gt;if&lt;/code&gt; 语句的快捷方式。</target>
        </trans-unit>
        <trans-unit id="f096cdc8dc30e248084bfa4304f67adc152c3c50" translate="yes" xml:space="preserve">
          <source>The testing takes a few minutes to complete. If any tests fail, that likely means one or more parts of the environment setup didn't complete correctly. The upstream tests always pass.</source>
          <target state="translated">测试需要几分钟的时间才能完成。如果任何测试失败,很可能意味着环境设置的一个或多个部分没有正确完成。上游测试总是能通过。</target>
        </trans-unit>
        <trans-unit id="aa432e2f60af21e69cfa908f06604c8b4d0ae385" translate="yes" xml:space="preserve">
          <source>The text to add.</source>
          <target state="translated">要补充的文字。</target>
        </trans-unit>
        <trans-unit id="7bbb1f82d6c0a19e1279187e629a297da44271f1" translate="yes" xml:space="preserve">
          <source>The thing that makes ESLint different from other linters is the ability to define custom rules at runtime. This is perfect for rules that are specific to your project or company and wouldn't make sense for ESLint to ship with. With runtime rules, you don't have to wait for the next version of ESLint or be disappointed that your rule isn't general enough to apply to the larger JavaScript community, just write your rules and include them at runtime.</source>
          <target state="translated">ESLint与其他linters的不同之处在于它能够在运行时定义自定义规则。这对于那些特定于您的项目或公司的规则来说是完美的,而且ESLint也没有任何意义。有了运行时规则,您不必等待ESLint的下一个版本,也不必因为您的规则不够通用而对更大的JavaScript社区感到失望,只需写下您的规则并在运行时包含它们。</target>
        </trans-unit>
        <trans-unit id="aeba12234ad663f0a0ec6980e71a7b41b7d994ef" translate="yes" xml:space="preserve">
          <source>The thinking is that it's better to always explicitly state what the default behavior should be so that it's clear whether or not the developer forgot to include the default behavior by mistake.</source>
          <target state="translated">我们的想法是,最好总是明确地说明默认行为应该是什么,这样就可以清楚地知道开发者是否因为错误而忘记加入默认行为。</target>
        </trans-unit>
        <trans-unit id="da7d071d3f4e1e51df3ea8518936e97a10e59509" translate="yes" xml:space="preserve">
          <source>The three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the &lt;a href=&quot;user-guide/configuring&quot;&gt;configuration docs&lt;/a&gt;).</source>
          <target state="translated">这三个错误级别使您可以细粒度控制ESLint如何应用规则（有关更多配置选项和详细信息，请参阅&lt;a href=&quot;user-guide/configuring&quot;&gt;配置文档&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="df9af8c915bee6673ff22d532ac03047c8960a90" translate="yes" xml:space="preserve">
          <source>The top-level report object also has &lt;code&gt;errorCount&lt;/code&gt; and &lt;code&gt;warningCount&lt;/code&gt; which give the exact number of errors and warnings respectively on all the files. Additionally, &lt;code&gt;usedDeprecatedRules&lt;/code&gt; signals any deprecated rules used and their replacement (if available). Specifically, it is an array of objects with properties like so:</source>
          <target state="translated">顶级报告对象还具有 &lt;code&gt;errorCount&lt;/code&gt; 和 &lt;code&gt;warningCount&lt;/code&gt; ，它们分别提供所有文件上的错误和警告的确切数量。此外， &lt;code&gt;usedDeprecatedRules&lt;/code&gt; 会发出信号通知已使用的任何不赞成使用的规则及其替换（如果有）。具体来说，它是具有以下属性的对象数组：</target>
        </trans-unit>
        <trans-unit id="41d769ab16b1f7f3308de0b859c5b9860b2b26e5" translate="yes" xml:space="preserve">
          <source>The top-level report object also has &lt;code&gt;errorCount&lt;/code&gt; and &lt;code&gt;warningCount&lt;/code&gt; which give the exact number of errors and warnings respectively on all the files. Additionally, &lt;code&gt;usedDeprecatedRules&lt;/code&gt; signals any deprecated rules used and their replacement (if available). Specifically, it is array of objects with properties like so:</source>
          <target state="translated">顶级报告对象还具有 &lt;code&gt;errorCount&lt;/code&gt; 和 &lt;code&gt;warningCount&lt;/code&gt; ，它们分别提供所有文件上的错误和警告的确切数量。此外， &lt;code&gt;usedDeprecatedRules&lt;/code&gt; 会发出信号通知已使用的任何不赞成使用的规则及其替换（如果有）。具体来说，它是具有以下属性的对象数组：</target>
        </trans-unit>
        <trans-unit id="df600fd43354fe093f2997a1e86f286e369b6a13" translate="yes" xml:space="preserve">
          <source>The top-level report object has a &lt;code&gt;results&lt;/code&gt; array containing all linting results for files that had warnings or errors (any files that did not produce a warning or error are omitted). Each file result includes:</source>
          <target state="translated">顶级报告对象具有一个 &lt;code&gt;results&lt;/code&gt; 数组，其中包含具有警告或错误的文件的所有掉毛结果（所有未产生警告或错误的文件都将被省略）。每个文件的结果包括：</target>
        </trans-unit>
        <trans-unit id="594a7b21bd7855de18adf0c69dd40a240b1def08" translate="yes" xml:space="preserve">
          <source>The two properties, &lt;code&gt;VariableDeclarator&lt;/code&gt; and &lt;code&gt;AssignmentExpression&lt;/code&gt;, which can be used to turn on or off the destructuring requirement for &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt;. By default, all values are true.</source>
          <target state="translated">两个属性 &lt;code&gt;VariableDeclarator&lt;/code&gt; 和 &lt;code&gt;AssignmentExpression&lt;/code&gt; 可用于打开或关闭 &lt;code&gt;array&lt;/code&gt; 和 &lt;code&gt;object&lt;/code&gt; 的解构要求。默认情况下，所有值均为true。</target>
        </trans-unit>
        <trans-unit id="e8bf7a9dd0b016497dca472797a392ec1424c8b6" translate="yes" xml:space="preserve">
          <source>The two properties, &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt;, can be used to turn on or off the destructuring requirement for each of those types independently. By default, both are true.</source>
          <target state="translated">可以使用 &lt;code&gt;array&lt;/code&gt; 和 &lt;code&gt;object&lt;/code&gt; 这两个属性来分别打开或关闭这些类型中每个类型的解构要求。默认情况下，两者均为真。</target>
        </trans-unit>
        <trans-unit id="d35a58b0a18350e1534de85ad73ac8b06f837e84" translate="yes" xml:space="preserve">
          <source>The two properties, &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt;, which can be used to turn on or off the destructuring requirement for each of those types independently. By default, both are true.</source>
          <target state="translated">可以使用两个属性 &lt;code&gt;array&lt;/code&gt; 和 &lt;code&gt;object&lt;/code&gt; 来分别打开或关闭这些类型的销毁需求。默认情况下，两者均为真。</target>
        </trans-unit>
        <trans-unit id="4f16a3bf5e4813936b00b45e231c747c7726a1d4" translate="yes" xml:space="preserve">
          <source>The updates of imported bindings by ES Modules cause runtime errors.</source>
          <target state="translated">ES模块对导入的绑定的更新会导致运行时错误。</target>
        </trans-unit>
        <trans-unit id="5514e8b27889c92b548abd8ebff5998bdf418288" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;arguments.caller&lt;/code&gt; and &lt;code&gt;arguments.callee&lt;/code&gt; make several code optimizations impossible. They have been deprecated in future versions of JavaScript and their use is forbidden in ECMAScript 5 while in strict mode.</source>
          <target state="translated">使用 &lt;code&gt;arguments.caller&lt;/code&gt; 和 &lt;code&gt;arguments.callee&lt;/code&gt; 使得无法进行几种代码优化。在将来的JavaScript版本中已不推荐使用它们，并且在严格模式下ECMAScript 5中禁止使用它们。</target>
        </trans-unit>
        <trans-unit id="2924f354dcd960a1ab58164e2009cd5c61e0aa99" translate="yes" xml:space="preserve">
          <source>The use of bitwise operators in JavaScript is very rare and often &lt;code&gt;&amp;amp;&lt;/code&gt; or &lt;code&gt;|&lt;/code&gt; is simply a mistyped &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt;, which will lead to unexpected behavior.</source>
          <target state="translated">使用在JavaScript位运算符是非常罕见的，往往 &lt;code&gt;&amp;amp;&lt;/code&gt; 或 &lt;code&gt;|&lt;/code&gt; 只是一个错误的 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 或 &lt;code&gt;||&lt;/code&gt; ，这将导致意外行为。</target>
        </trans-unit>
        <trans-unit id="e8c966ed7def78def5c80c88dca826c0a9cd55fd" translate="yes" xml:space="preserve">
          <source>The version of ESLint you are using.</source>
          <target state="translated">您正在使用的ESLint版本。</target>
        </trans-unit>
        <trans-unit id="1f352eb6a0dacd48f9b129fd6892459730a9afd3" translate="yes" xml:space="preserve">
          <source>The version string of ESLint. E.g. &lt;code&gt;&quot;7.0.0&quot;&lt;/code&gt;.</source>
          <target state="translated">ESLint的版本字符串。例如 &lt;code&gt;&quot;7.0.0&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eac9f3d4f7ff9fa27be37b9559de95a3dfd24dc8" translate="yes" xml:space="preserve">
          <source>Then any code used within the same scope would not get the global &lt;code&gt;undefined&lt;/code&gt;, but rather the local version with a very different meaning.</source>
          <target state="translated">这样，在同一范围内使用的任何代码都不会得到全局 &lt;code&gt;undefined&lt;/code&gt; ，而是具有不同含义的本地版本。</target>
        </trans-unit>
        <trans-unit id="91dec8db4a7ce736df71ea88ef47e6b7cca8d86f" translate="yes" xml:space="preserve">
          <source>Then the &lt;code&gt;array&lt;/code&gt; part of this rule is not recommended, as destructuring does not match this use case very well.</source>
          <target state="translated">然后不建议使用此规则的 &lt;code&gt;array&lt;/code&gt; 部分，因为解构与该用例非常不匹配。</target>
        </trans-unit>
        <trans-unit id="1e7df54ba4b2f3d2b8de3ddfb22cf55076b84b07" translate="yes" xml:space="preserve">
          <source>Then you can change to:</source>
          <target state="translated">那么你可以改成。</target>
        </trans-unit>
        <trans-unit id="6ece258a004458918b4a9b465e59a062ce1c5448" translate="yes" xml:space="preserve">
          <source>Then you should enable ES6 using &lt;code&gt;ecmaVersion&lt;/code&gt;:</source>
          <target state="translated">然后，您应该使用 &lt;code&gt;ecmaVersion&lt;/code&gt; 启用ES6 ：</target>
        </trans-unit>
        <trans-unit id="99179c89c62e68c70478cf6465b8ea928c3d5143" translate="yes" xml:space="preserve">
          <source>Then you should move &lt;code&gt;ecmaFeatures&lt;/code&gt; under &lt;code&gt;parserOptions&lt;/code&gt;:</source>
          <target state="translated">然后你要移走 &lt;code&gt;ecmaFeatures&lt;/code&gt; 下 &lt;code&gt;parserOptions&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3039d0ca1aa2f7e206fbb9a1bd4f394c4c999ec2" translate="yes" xml:space="preserve">
          <source>Then, assuming you're using the package name &lt;code&gt;eslint-config-myconfig&lt;/code&gt;, you can access the additional config via:</source>
          <target state="translated">然后，假设您使用的软件包名称为 &lt;code&gt;eslint-config-myconfig&lt;/code&gt; ，则可以通过以下方式访问其他配置：</target>
        </trans-unit>
        <trans-unit id="f25801971afeae4363e40fabd963bdc80f985e55" translate="yes" xml:space="preserve">
          <source>Then, in your project that wants to use your shareable config, type:</source>
          <target state="translated">然后,在你想使用你的可共享配置的项目中,输入。</target>
        </trans-unit>
        <trans-unit id="353db37a3c8a86c69c78b807d1c427cfb81575aa" translate="yes" xml:space="preserve">
          <source>Then, you can install the ESLint Yeoman generator:</source>
          <target state="translated">然后,你可以安装ESLint Yeoman生成器。</target>
        </trans-unit>
        <trans-unit id="32c357211ab9b4b485ca19fa3a0a2b2bd4c1fa46" translate="yes" xml:space="preserve">
          <source>There are a few reasons you might want to turn this rule off:</source>
          <target state="translated">有几个原因你可能想关闭这个规则。</target>
        </trans-unit>
        <trans-unit id="7429e55770a7db6e1f799e481661c23075ea68a0" translate="yes" xml:space="preserve">
          <source>There are a lot of command line flags for ESLint and this section explains what they do.</source>
          <target state="translated">ESLint有很多命令行标志,本节将解释它们的作用。</target>
        </trans-unit>
        <trans-unit id="80da262ce40592a7a4ec9cf4f30bca5562293bb5" translate="yes" xml:space="preserve">
          <source>There are a lot of unit tests included with ESLint to make sure that we're keeping on top of code quality. This section explains how to run the unit tests.</source>
          <target state="translated">ESLint中包含了很多单元测试,以确保我们的代码质量。本节将介绍如何运行单元测试。</target>
        </trans-unit>
        <trans-unit id="cdec16b05bc1e8b3e8a535ea7297a5e3f4035c95" translate="yes" xml:space="preserve">
          <source>There are also cases where the usage of &lt;code&gt;=&amp;gt;&lt;/code&gt; can be ambiguous and should be rewritten to more clearly show the author's intent:</source>
          <target state="translated">在某些情况下， &lt;code&gt;=&amp;gt;&lt;/code&gt; 的用法可能含糊不清，应重写以更清楚地表明作者的意图：</target>
        </trans-unit>
        <trans-unit id="7ecd3fd5720fb4421416968b3c583504ac473a76" translate="yes" xml:space="preserve">
          <source>There are also some exceptions to these rules:</source>
          <target state="translated">这些规则也有一些例外。</target>
        </trans-unit>
        <trans-unit id="320a38d150f5e795565c18aa62c12c2350485cbd" translate="yes" xml:space="preserve">
          <source>There are also some properties you can access:</source>
          <target state="translated">还有一些属性你可以进入。</target>
        </trans-unit>
        <trans-unit id="6665f51b7045a2fee788e7afb911686880b53609" translate="yes" xml:space="preserve">
          <source>There are cases where it may be safe for your application to ignore errors, however only ignore errors if you are confident that some other form of monitoring will help you catch the problem.</source>
          <target state="translated">在某些情况下,忽略错误对你的应用程序来说可能是安全的,但是只有当你确信其他形式的监控会帮助你发现问题时才会忽略错误。</target>
        </trans-unit>
        <trans-unit id="77159dc5778802775842bc1ad78d4c7a0b0534fa" translate="yes" xml:space="preserve">
          <source>There are five events related to code paths, and you can define event handlers in rules.</source>
          <target state="translated">有五个事件与代码路径有关,你可以在规则中定义事件处理程序。</target>
        </trans-unit>
        <trans-unit id="e2c161633c01783c2c492dc2f82954fa87f98f0e" translate="yes" xml:space="preserve">
          <source>There are four different styles and the default member syntax sort order is:</source>
          <target state="translated">有四种不同的风格,默认的成员语法排序顺序是。</target>
        </trans-unit>
        <trans-unit id="73182a6c9f6d8f8a463d75ad9c8c1f7a1954215f" translate="yes" xml:space="preserve">
          <source>There are many commonly used aliases for &lt;code&gt;this&lt;/code&gt; such as &lt;code&gt;that&lt;/code&gt;, &lt;code&gt;self&lt;/code&gt; or &lt;code&gt;me&lt;/code&gt;. It is desirable to ensure that whichever alias the team agrees upon is used consistently throughout the application.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; ，有很多常用的别名，例如 &lt;code&gt;that&lt;/code&gt; ， &lt;code&gt;self&lt;/code&gt; 或 &lt;code&gt;me&lt;/code&gt; 。希望确保在整个应用程序中一致使用团队同意的任何别名。</target>
        </trans-unit>
        <trans-unit id="778d71a993fc4934f67d793df316de2759b96d65" translate="yes" xml:space="preserve">
          <source>There are rest parameters in ES2015. We can use that feature for variadic functions instead of the &lt;code&gt;arguments&lt;/code&gt; variable.</source>
          <target state="translated">ES2015中有其余参数。我们可以将该功能用于可变函数而不是 &lt;code&gt;arguments&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="117709bbbf6fc954ac87eb9e1642b49467ac9606" translate="yes" xml:space="preserve">
          <source>There are several common guidelines which require specific indentation of nested blocks and statements, like:</source>
          <target state="translated">有几个常见的准则要求嵌套块和语句有特定的缩进,比如。</target>
        </trans-unit>
        <trans-unit id="09bf0b1004131d5cbb653018ebf059cb68d11044" translate="yes" xml:space="preserve">
          <source>There are several pieces of information that can be configured:</source>
          <target state="translated">有几个信息可以配置。</target>
        </trans-unit>
        <trans-unit id="1c953a0cd08a66ee80bdb67484900a4f8c19fb94" translate="yes" xml:space="preserve">
          <source>There are shareable configs available for most JSCS presets. The equivalent shareable configs for each JSCS preset are listed in the following table:</source>
          <target state="translated">大多数JSCS预置都有可共享的配置。下表列出了每个JSCS预置的等效可共享配置。</target>
        </trans-unit>
        <trans-unit id="7939cad36b767508efc1de1d7ff66357f07843a6" translate="yes" xml:space="preserve">
          <source>There are some cases where you might want to call a callback function more than once. In those cases this rule may lead to incorrect behavior. In those cases you may want to reserve a special name for those callbacks and not include that in the list of callbacks that trigger warnings.</source>
          <target state="translated">在某些情况下,你可能想调用一个回调函数一次以上。在这些情况下,这个规则可能会导致不正确的行为。在这些情况下,你可能想为这些回调保留一个特殊的名称,而不是将其包含在会触发警告的回调列表中。</target>
        </trans-unit>
        <trans-unit id="8dbaf6481b7dab508d130fe84b6a20188b6da785" translate="yes" xml:space="preserve">
          <source>There are three primitive types in JavaScript that have wrapper objects: string, number, and boolean. These are represented by the constructors &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, and &lt;code&gt;Boolean&lt;/code&gt;, respectively. The primitive wrapper types are used whenever one of these primitive values is read, providing them with object-like capabilities such as methods. Behind the scenes, an object of the associated wrapper type is created and then destroyed, which is why you can call methods on primitive values, such as:</source>
          <target state="translated">JavaScript中有三种具有包装对象的原始类型：字符串，数字和布尔值。这些分别由构造函数 &lt;code&gt;String&lt;/code&gt; ， &lt;code&gt;Number&lt;/code&gt; 和 &lt;code&gt;Boolean&lt;/code&gt; 表示。每当读取这些原始值之一时，就会使用原始包装器类型，从而为它们提供类似对象的功能，例如方法。在幕后，创建了一个关联包装类型的对象，然后将其销毁，这就是为什么您可以对原始值调用方法的原因，例如：</target>
        </trans-unit>
        <trans-unit id="09b78e56913ec7f5884521cf5e33b733c08a8425" translate="yes" xml:space="preserve">
          <source>There are two formats for a rule's exported &lt;code&gt;schema&lt;/code&gt;. The first is a full JSON Schema object describing all possible options the rule accepts, including the rule's error level as the first argument and any optional arguments thereafter.</source>
          <target state="translated">规则的导出 &lt;code&gt;schema&lt;/code&gt; 有两种格式。第一个是完整的JSON模式对象，描述了该规则接受的所有可能选项，包括规则的错误级别作为第一个参数，其后包括任何可选参数。</target>
        </trans-unit>
        <trans-unit id="6e4161ef27c6d8d2328512ff0c53aa33ebb66d6d" translate="yes" xml:space="preserve">
          <source>There are two options for this rule:</source>
          <target state="translated">这条规则有两种选择。</target>
        </trans-unit>
        <trans-unit id="c5b03151c21194f8185c6c4c16037975222ef285" translate="yes" xml:space="preserve">
          <source>There are two schools of thought in this regard:</source>
          <target state="translated">在这方面有两派观点。</target>
        </trans-unit>
        <trans-unit id="187de8e977c674d5524ac7c3cf7fd7ff80275095" translate="yes" xml:space="preserve">
          <source>There are two ways of defining functions in JavaScript: &lt;code&gt;function&lt;/code&gt; declarations and &lt;code&gt;function&lt;/code&gt; expressions. Declarations contain the &lt;code&gt;function&lt;/code&gt; keyword first, followed by a name and then its arguments and the function body, for example:</source>
          <target state="translated">在JavaScript中定义函数的方式有两种： &lt;code&gt;function&lt;/code&gt; 声明和 &lt;code&gt;function&lt;/code&gt; 表达式。声明首先包含 &lt;code&gt;function&lt;/code&gt; 关键字，然后是名称，然后是其参数和函数体，例如：</target>
        </trans-unit>
        <trans-unit id="1e031938fbb5ab85e074efc0c3921234cc1f1c89" translate="yes" xml:space="preserve">
          <source>There are two ways to create a regular expression:</source>
          <target state="translated">有两种方法可以创建正则表达式。</target>
        </trans-unit>
        <trans-unit id="d52e9915f94a31af6aaead1be831dbb80f676371" translate="yes" xml:space="preserve">
          <source>There are two ways to use configuration files.</source>
          <target state="translated">使用配置文件有两种方式。</target>
        </trans-unit>
        <trans-unit id="d1a8bd447439a90516a50974c91e0f6c8ad77c25" translate="yes" xml:space="preserve">
          <source>There are valid reasons to use assignment operators in conditional statements. However, it can be difficult to tell whether a specific assignment was intentional.</source>
          <target state="translated">在条件语句中使用赋值运算符有合理的理由。但是,很难判断一个特定的赋值是否是故意的。</target>
        </trans-unit>
        <trans-unit id="4715777b3c61a89e3562896681adc37a424d282e" translate="yes" xml:space="preserve">
          <source>There are, however, some occasions when you must use quotes:</source>
          <target state="translated">然而,在某些场合,你必须使用引号。</target>
        </trans-unit>
        <trans-unit id="eb6f41837f8cfadd5c03780bba3f02ff7b3c971d" translate="yes" xml:space="preserve">
          <source>There are, however, some who prefer to only use braces when there is more than one statement to be executed.</source>
          <target state="translated">然而,也有一些人喜欢只在有多个语句要执行时使用大括号。</target>
        </trans-unit>
        <trans-unit id="342cd48e476dc7314107f25dac7c78229501f3ce" translate="yes" xml:space="preserve">
          <source>There is actually a long history of using dangling underscores to indicate &quot;private&quot; members of objects in JavaScript (though JavaScript doesn't have truly private members, this convention served as a warning). This began with SpiderMonkey adding nonstandard methods such as &lt;code&gt;__defineGetter__()&lt;/code&gt;. The intent with the underscores was to make it obvious that this method was special in some way. Since that time, using a single underscore prefix has become popular as a way to indicate &quot;private&quot; members of objects.</source>
          <target state="translated">实际上，使用悬挂的下划线指示JavaScript中对象的&amp;ldquo;私有&amp;rdquo;成员已有很长的历史（尽管JavaScript没有真正的私有成员，该约定作为警告）。这始于SpiderMonkey添加非标准方法，例如 &lt;code&gt;__defineGetter__()&lt;/code&gt; 。下划线的目的是使该方法在某种程度上很特别。从那时起，使用单个下划线前缀已成为指示对象&amp;ldquo;私有&amp;rdquo;成员的一种方式。</target>
        </trans-unit>
        <trans-unit id="4a96991a903b3e1ff68ea9a24be9b087a375a49f" translate="yes" xml:space="preserve">
          <source>There is also a &lt;code&gt;Linter.version&lt;/code&gt; property that you can read without instantiating &lt;code&gt;Linter&lt;/code&gt;:</source>
          <target state="translated">还有一个 &lt;code&gt;Linter.version&lt;/code&gt; 属性，您无需实例化 &lt;code&gt;Linter&lt;/code&gt; 就可以读取它：</target>
        </trans-unit>
        <trans-unit id="871b96618532f5a624a5eebc653ef9799b4af97b" translate="yes" xml:space="preserve">
          <source>There is an explicit way to create a global variable when needed, by assigning to a property of the global object.</source>
          <target state="translated">有一种显式的方法可以在需要的时候创建一个全局变量,通过分配给全局对象的一个属性。</target>
        </trans-unit>
        <trans-unit id="a847459418c85beaf5623fd3b6978b33df19c866" translate="yes" xml:space="preserve">
          <source>There is no hard and fast rule about whether empty lines should precede &lt;code&gt;return&lt;/code&gt; statements in JavaScript. However, clearly delineating where a function is returning can greatly increase the readability and clarity of the code. For example:</source>
          <target state="translated">关于空行是否应该在JavaScript中的 &lt;code&gt;return&lt;/code&gt; 语句之前没有严格的规定。但是，清楚地描述函数将返回的位置可以大大提高代码的可读性和清晰度。例如：</target>
        </trans-unit>
        <trans-unit id="7c688c9ecfeeb2e718d9853398cce5aa37907224" translate="yes" xml:space="preserve">
          <source>There is one situation where initializing to &lt;code&gt;undefined&lt;/code&gt; behaves differently than omitting the initialization, and that's when a &lt;code&gt;var&lt;/code&gt; declaration occurs inside of a loop. For example:</source>
          <target state="translated">在一种情况下，初始化为 &lt;code&gt;undefined&lt;/code&gt; 的行为与省略初始化的行为不同，那就是在循环内部发生 &lt;code&gt;var&lt;/code&gt; 声明时。例如：</target>
        </trans-unit>
        <trans-unit id="f393cd7001d9c02a6a4db52334b4f6aa81c0dd84" translate="yes" xml:space="preserve">
          <source>There may be a part of a Node.js application that is responsible for determining the correct exit code to return upon exiting. In that case, you should turn this rule off to allow proper handling of the exit code.</source>
          <target state="translated">Node.js 应用程序中可能有一部分负责确定退出时返回的正确退出代码。在这种情况下,您应该关闭此规则,以便正确处理退出代码。</target>
        </trans-unit>
        <trans-unit id="3f8f96957f0116bd3dee02cc31450b17131c06e6" translate="yes" xml:space="preserve">
          <source>There should be just one variable declaration for all variables in the function. That declaration typically appears at the top of the function.</source>
          <target state="translated">函数中的所有变量应该只有一个变量声明。这个声明通常出现在函数的顶部。</target>
        </trans-unit>
        <trans-unit id="af6c3ae1870f67e9ba1a6645267df7a0ed8e6f39" translate="yes" xml:space="preserve">
          <source>There's a &lt;code&gt;jquery&lt;/code&gt; environment defined in this plugin. To use the environment in ESLint, you would use the unprefixed plugin name, followed by a slash, followed by the environment name. So if this plugin were named &lt;code&gt;eslint-plugin-myplugin&lt;/code&gt;, then you would set the environment in your configuration to be &lt;code&gt;&quot;myplugin/jquery&quot;&lt;/code&gt;.</source>
          <target state="translated">在此插件中定义了一个 &lt;code&gt;jquery&lt;/code&gt; 环境。要在ESLint中使用环境，可以使用未加前缀的插件名称，后跟斜杠，然后是环境名称。因此，如果此插件名为 &lt;code&gt;eslint-plugin-myplugin&lt;/code&gt; ，则可以将配置中的环境设置为 &lt;code&gt;&quot;myplugin/jquery&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4649a897c49ce8c22f4047b05ff4f46b049d69e6" translate="yes" xml:space="preserve">
          <source>Therefore, for any array &lt;code&gt;foo&lt;/code&gt;, &lt;code&gt;foo.indexOf(NaN)&lt;/code&gt; and &lt;code&gt;foo.lastIndexOf(NaN)&lt;/code&gt; will always return &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">因此，对于任何数组 &lt;code&gt;foo&lt;/code&gt; ， &lt;code&gt;foo.indexOf(NaN)&lt;/code&gt; 和 &lt;code&gt;foo.lastIndexOf(NaN)&lt;/code&gt; 将始终返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee735b7f7a5f024f90771cc2fdec6e27abf7cb89" translate="yes" xml:space="preserve">
          <source>Therefore, the &lt;code&gt;u&lt;/code&gt; flag lets us work better with regular expressions.</source>
          <target state="translated">因此， &lt;code&gt;u&lt;/code&gt; 标志使我们可以更好地使用正则表达式。</target>
        </trans-unit>
        <trans-unit id="772ede07a4703392f30e23da9503d4982ba7ac6d" translate="yes" xml:space="preserve">
          <source>Therefore, use &lt;code&gt;Number.isNaN()&lt;/code&gt; or global &lt;code&gt;isNaN()&lt;/code&gt; functions to test whether a value is &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">因此，请使用 &lt;code&gt;Number.isNaN()&lt;/code&gt; 或全局 &lt;code&gt;isNaN()&lt;/code&gt; 函数来测试值是否为 &lt;code&gt;NaN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="201cc4664da2bdb9c50a7d4f0ca2e44472bb57f6" translate="yes" xml:space="preserve">
          <source>These annotations may be used with either single-line or multi-line comments and should follow the same formatting rules as the general comment type. Examples:</source>
          <target state="translated">这些注释可与单行或多行注释一起使用,并应遵循与一般注释类型相同的格式规则。例如:</target>
        </trans-unit>
        <trans-unit id="4c52137db447105931b557eed8e46933af4bdec4" translate="yes" xml:space="preserve">
          <source>These are the most common scenarios recommended in different style guides:</source>
          <target state="translated">这些是不同风格指南中推荐的最常见的情况。</target>
        </trans-unit>
        <trans-unit id="acdb0470966c593cea7812a42d4a917d42c23356" translate="yes" xml:space="preserve">
          <source>These can be combined as much as you like. To make all methods exceptions (thereby rendering this rule useless), use &lt;code&gt;prefer-reflect: [2, { &quot;exceptions&quot;: [&quot;apply&quot;, &quot;call&quot;, &quot;defineProperty&quot;, &quot;getOwnPropertyDescriptor&quot;, &quot;getPrototypeOf&quot;, &quot;setPrototypeOf&quot;, &quot;isExtensible&quot;, &quot;getOwnPropertyNames&quot;, &quot;preventExtensions&quot;, &quot;delete&quot;] }]&lt;/code&gt;</source>
          <target state="translated">这些可以任意组合。要使所有方法都异常（从而使该规则无效），请使用 &lt;code&gt;prefer-reflect: [2, { &quot;exceptions&quot;: [&quot;apply&quot;, &quot;call&quot;, &quot;defineProperty&quot;, &quot;getOwnPropertyDescriptor&quot;, &quot;getPrototypeOf&quot;, &quot;setPrototypeOf&quot;, &quot;isExtensible&quot;, &quot;getOwnPropertyNames&quot;, &quot;preventExtensions&quot;, &quot;delete&quot;] }]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16b0a2f3a34d0787ea10fc5517dc6d1c9a76c309" translate="yes" xml:space="preserve">
          <source>These environments are not mutually exclusive, so you can define more than one at a time.</source>
          <target state="translated">这些环境并不相互排斥,因此您可以同时定义多个环境。</target>
        </trans-unit>
        <trans-unit id="2e07ccde13ac7d3cc1e366526a62fc1dd9f6bdde" translate="yes" xml:space="preserve">
          <source>These examples allow &lt;code&gt;var1&lt;/code&gt; to be overwritten in your code, but disallow it for &lt;code&gt;var2&lt;/code&gt;.</source>
          <target state="translated">这些示例允许在代码中覆盖 &lt;code&gt;var1&lt;/code&gt; ，但不允许 &lt;code&gt;var2&lt;/code&gt; 覆盖它。</target>
        </trans-unit>
        <trans-unit id="5b4016a79f53202f5d9431f3853fbef74d3b8610" translate="yes" xml:space="preserve">
          <source>These methods return an array of comments that appear directly before, directly after, and inside nodes, respectively. They are useful for rules that need to check comments in relation to a given node or token.</source>
          <target state="translated">这些方法分别返回直接出现在节点之前、直接出现在节点之后和节点内部的注释数组。它们对于需要检查与给定节点或标记相关的注释的规则非常有用。</target>
        </trans-unit>
        <trans-unit id="9ebcefc4be23db9deefd68d4795e030b4db83239" translate="yes" xml:space="preserve">
          <source>These objects may not:</source>
          <target state="translated">这些物体可能不。</target>
        </trans-unit>
        <trans-unit id="b293d56025264cb725163337a97e77e49487f3f5" translate="yes" xml:space="preserve">
          <source>These objects' responsibilities are:</source>
          <target state="translated">这些对象的责任是:</target>
        </trans-unit>
        <trans-unit id="dd3da68786bd031bdc775145f224453e0dd6417c" translate="yes" xml:space="preserve">
          <source>These options allow unused expressions &lt;em&gt;only if all&lt;/em&gt; of the code paths either directly change the state (for example, assignment statement) or could have &lt;em&gt;side effects&lt;/em&gt; (for example, function call).</source>
          <target state="translated">&lt;em&gt;仅当所有&lt;/em&gt;代码路径都直接更改状态（例如，赋值语句）或可能有&lt;em&gt;副作用&lt;/em&gt;（例如，函数调用）时，这些选项才允许使用未使用的表达式。</target>
        </trans-unit>
        <trans-unit id="94897999a480e4ff48d62e51753e5de1561ff443" translate="yes" xml:space="preserve">
          <source>These rules from older versions of ESLint (before the &lt;a href=&quot;../user-guide/rule-deprecation&quot;&gt;deprecation policy&lt;/a&gt; existed) have been replaced by newer rules:</source>
          <target state="translated">来自旧版ESLint的这些规则（在存在&lt;a href=&quot;../user-guide/rule-deprecation&quot;&gt;弃用策略&lt;/a&gt;之前）已由新规则替换：</target>
        </trans-unit>
        <trans-unit id="d4ca9fe55e32c924b83ce46d998ac795270b1873" translate="yes" xml:space="preserve">
          <source>These rules from older versions of ESLint (before the [deprecation policy](/docs/user-guide/rule-deprecation) existed) have been replaced by newer rules:</source>
          <target state="translated">这些来自 ESLint 旧版本的规则(在 [deprecation policy](/docs/user-guide/rule-deprecation)存在之前)已经被新的规则所取代。</target>
        </trans-unit>
        <trans-unit id="65d41d4fc89b05eb3f426d905efb451686afc534" translate="yes" xml:space="preserve">
          <source>These rules have been deprecated in accordance with the &lt;a href=&quot;../user-guide/rule-deprecation&quot;&gt;deprecation policy&lt;/a&gt;, and replaced by newer rules:</source>
          <target state="translated">这些规则已根据&lt;a href=&quot;../user-guide/rule-deprecation&quot;&gt;弃用策略弃用&lt;/a&gt;，并由更新的规则代替：</target>
        </trans-unit>
        <trans-unit id="1c10097ffacc1c485ac6032b4e5f64b78ed11f9f" translate="yes" xml:space="preserve">
          <source>These rules have been deprecated in accordance with the [deprecation policy](/docs/user-guide/rule-deprecation), and replaced by newer rules:</source>
          <target state="translated">根据[弃用政策](/docs/user-guide/rule-deprecation),这些规则已被弃用,并被新规则取代。</target>
        </trans-unit>
        <trans-unit id="5b4a9c4f9cab970df6595988dd4e0581f563d2df" translate="yes" xml:space="preserve">
          <source>These rules relate to ES6, also known as ES2015:</source>
          <target state="translated">这些规则涉及ES6,也就是ES2015。</target>
        </trans-unit>
        <trans-unit id="94068d755b38f00b794f755ab1776f6ba8d5af3d" translate="yes" xml:space="preserve">
          <source>These rules relate to better ways of doing things to help you avoid problems:</source>
          <target state="translated">这些规则涉及到更好的做事方法,以帮助你避免问题。</target>
        </trans-unit>
        <trans-unit id="6407bf99d5998c9e0fef54717f8eb0ec5ebfd745" translate="yes" xml:space="preserve">
          <source>These rules relate to code running in Node.js, or in browsers with CommonJS:</source>
          <target state="translated">这些规则涉及到在Node.js中运行的代码,或者在使用CommonJS的浏览器中运行的代码。</target>
        </trans-unit>
        <trans-unit id="2c800b49f52cfb2c02793919534a03b1de5ad3a3" translate="yes" xml:space="preserve">
          <source>These rules relate to possible syntax or logic errors in JavaScript code:</source>
          <target state="translated">这些规则与JavaScript代码中可能出现的语法或逻辑错误有关。</target>
        </trans-unit>
        <trans-unit id="7d762fa25dfbf7bdd07460cee8d398e88a51d344" translate="yes" xml:space="preserve">
          <source>These rules relate to strict mode directives:</source>
          <target state="translated">这些规则与严格模式指令有关。</target>
        </trans-unit>
        <trans-unit id="c8321a3f35b15048cb55738fb106514521cfe231" translate="yes" xml:space="preserve">
          <source>These rules relate to style guidelines, and are therefore quite subjective:</source>
          <target state="translated">这些规则涉及到风格准则,因此是相当主观的。</target>
        </trans-unit>
        <trans-unit id="0d081ea96820ff5654d3db473d43162f105b1f8c" translate="yes" xml:space="preserve">
          <source>These rules relate to variable declarations:</source>
          <target state="translated">这些规则与变量声明有关。</target>
        </trans-unit>
        <trans-unit id="cfba5d7e75af3b7e2807c06e5034c9af4096fa98" translate="yes" xml:space="preserve">
          <source>Things to Avoid</source>
          <target state="translated">要避免的事情</target>
        </trans-unit>
        <trans-unit id="1988fde0b51715dd909d42c7a4aa01100331ad2f" translate="yes" xml:space="preserve">
          <source>Think you found a problem? We'd love to hear about it. This section explains how to submit a bug, the type of information we need to properly verify it, and the overall process.</source>
          <target state="translated">你认为你发现了一个问题?我们很乐意听到它。本节解释了如何提交错误,我们需要正确验证的信息类型,以及整体流程。</target>
        </trans-unit>
        <trans-unit id="f06f2b5e218ca06ae1bd67c1145935c9e1aabdba" translate="yes" xml:space="preserve">
          <source>Thinking of comments in the context of tokens is more predictable and easier to reason about than thinking about comment tokens in the context of AST nodes</source>
          <target state="translated">在标记的上下文中思考评论,比在AST节点的上下文中思考评论标记更可预测,也更容易推理。</target>
        </trans-unit>
        <trans-unit id="2050eef925ba3c231aec703d38a33757acef6aa9" translate="yes" xml:space="preserve">
          <source>Third, it creates the looping path from &lt;code&gt;body&lt;/code&gt; segment to &lt;code&gt;update&lt;/code&gt; segment. At this time, the next segment has existed already, so the &lt;code&gt;onCodePathSegmentStart&lt;/code&gt; event is not fired. It fires &lt;code&gt;onCodePathSegmentLoop&lt;/code&gt; instead.</source>
          <target state="translated">第三，它创建了从 &lt;code&gt;body&lt;/code&gt; 段到 &lt;code&gt;update&lt;/code&gt; 段的循环路径。目前，下一个段已经存在，因此不会触发 &lt;code&gt;onCodePathSegmentStart&lt;/code&gt; 事件。它会触发 &lt;code&gt;onCodePathSegmentLoop&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="415be4f10478e1046c67a83032a6f4a8f849fe2a" translate="yes" xml:space="preserve">
          <source>This allows you to avoid retyping error messages. It also prevents errors reported in different sections of your rule from having out-of-date messages.</source>
          <target state="translated">这样可以避免重新输入错误信息。它还可以防止在规则的不同部分报告的错误信息过期。</target>
        </trans-unit>
        <trans-unit id="13fa28b1d868c6cd569942c00fe12d33c91d2c69" translate="yes" xml:space="preserve">
          <source>This automatically starts Mocha and runs all tests in the &lt;code&gt;tests&lt;/code&gt; directory. You need only add yours and it will automatically be picked up when running tests.</source>
          <target state="translated">这会自动启动Mocha并运行 &lt;code&gt;tests&lt;/code&gt; 目录中的所有测试。您只需要添加您的内容，它将在运行测试时自动提取。</target>
        </trans-unit>
        <trans-unit id="cb4bd44fc1b6c85e9764f5ab63ec69c2b7dbea0b" translate="yes" xml:space="preserve">
          <source>This behavior was relying on comment attachment happening at the parser level, which does not happen anymore, to ensure that all comments would be accounted for</source>
          <target state="translated">这种行为依赖于在解析器级别上发生的注释附件,现在不会再发生了,以确保所有的注释都会被记录下来。</target>
        </trans-unit>
        <trans-unit id="f18fe7d0f8dbbc8445c9163810cbe362da97229f" translate="yes" xml:space="preserve">
          <source>This change was made to help new ESLint users who are frequently confused that ESLint does nothing by default besides reporting parser errors. We anticipate this change will have minimal impact on most established users because you're more likely to have configuration files already.</source>
          <target state="translated">这个变化是为了帮助ESLint的新用户,他们经常感到困惑,因为ESLint除了报告解析器错误之外,默认情况下什么也不做。我们预计这个变化对大多数老用户的影响很小,因为你更可能已经有了配置文件。</target>
        </trans-unit>
        <trans-unit id="eea20aaf3851e50d7d18c459c1d15f06a9f1fe7e" translate="yes" xml:space="preserve">
          <source>This class depends on the Node.js &lt;code&gt;fs&lt;/code&gt; module and the file system, so you cannot use it in browsers. If you want to lint code on browsers, use the &lt;a href=&quot;#linter&quot;&gt;Linter&lt;/a&gt; class instead.</source>
          <target state="translated">此类取决于Node.js &lt;code&gt;fs&lt;/code&gt; 模块和文件系统，因此您不能在浏览器中使用它。如果要在浏览器上添加代码，请改用&lt;a href=&quot;#linter&quot;&gt;Linter&lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="bc26638966505856d54d65c1178254da87bced09" translate="yes" xml:space="preserve">
          <source>This code could appear in any module and will stop the entire application when &lt;code&gt;somethingBadHappened&lt;/code&gt; is truthy. This doesn't give the application any chance to respond to the error. It's usually better to throw an error and allow the application to handle it appropriately:</source>
          <target state="translated">该代码可以出现在任何模块中，并且当 &lt;code&gt;somethingBadHappened&lt;/code&gt; 为真时，它将停止整个应用程序。这不会给应用程序任何机会响应该错误。通常最好抛出一个错误并允许应用程序适当地处理它：</target>
        </trans-unit>
        <trans-unit id="6a1a606524e7605868cb030ae98dda8a50f6c11c" translate="yes" xml:space="preserve">
          <source>This code is an example of a good use of &lt;code&gt;bind()&lt;/code&gt; for setting the value of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">这段代码很好地使用了 &lt;code&gt;bind()&lt;/code&gt; 来设置 &lt;code&gt;this&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="188ba6fbc8e6fe291e33a72f0675afd9594eb52a" translate="yes" xml:space="preserve">
          <source>This code is equivalent to:</source>
          <target state="translated">这个代码相当于:</target>
        </trans-unit>
        <trans-unit id="753da87c758e9ab0fcb2b2a117dfb70f5117fba4" translate="yes" xml:space="preserve">
          <source>This code is likely the result of refactoring where a variable was removed from the concatenation (such as &lt;code&gt;&quot;a&quot; + b + &quot;b&quot;&lt;/code&gt;). In such a case, the concatenation isn't important and the code can be rewritten as:</source>
          <target state="translated">该代码可能是重构从串联中删除变量的结果（例如 &lt;code&gt;&quot;a&quot; + b + &quot;b&quot;&lt;/code&gt; ）。在这种情况下，连接并不重要，可以将代码重写为：</target>
        </trans-unit>
        <trans-unit id="9f3828fead792474a4d824e09a1e9cb9a66c9622" translate="yes" xml:space="preserve">
          <source>This code looks like it will sum the results of calling &lt;code&gt;getPageLength(1)&lt;/code&gt; and &lt;code&gt;getPageLength(2)&lt;/code&gt;, but in reality the final value of &lt;code&gt;totalLength&lt;/code&gt; will only be the length of one of the two pages. The bug is in the statement &lt;code&gt;totalLength += await getPageLength(pageNum);&lt;/code&gt;. This statement first reads an initial value of &lt;code&gt;totalLength&lt;/code&gt;, then calls &lt;code&gt;getPageLength(pageNum)&lt;/code&gt; and waits for that Promise to fulfill. Finally, it sets the value of &lt;code&gt;totalLength&lt;/code&gt; to the sum of &lt;code&gt;await getPageLength(pageNum)&lt;/code&gt; and the &lt;em&gt;initial&lt;/em&gt; value of &lt;code&gt;totalLength&lt;/code&gt;. If the &lt;code&gt;totalLength&lt;/code&gt; variable is updated in a separate function call during the time that the &lt;code&gt;getPageLength(pageNum)&lt;/code&gt; Promise is pending, that update will be lost because the new value is overwritten without being read.</source>
          <target state="translated">此代码看起来将总结调用的结果 &lt;code&gt;getPageLength(1)&lt;/code&gt; 和 &lt;code&gt;getPageLength(2)&lt;/code&gt; ，但在现实中的终值 &lt;code&gt;totalLength&lt;/code&gt; 只会是两个网页其中之一的长度。该错误在语句 &lt;code&gt;totalLength += await getPageLength(pageNum);&lt;/code&gt; 。该声明首先读取的初始值 &lt;code&gt;totalLength&lt;/code&gt; ，然后调用 &lt;code&gt;getPageLength(pageNum)&lt;/code&gt; ，并在这个承诺履行等待。最后，它设置的值 &lt;code&gt;totalLength&lt;/code&gt; 到的总和 &lt;code&gt;await getPageLength(pageNum)&lt;/code&gt; 和&lt;em&gt;初始&lt;/em&gt;的值 &lt;code&gt;totalLength&lt;/code&gt; 。如果总 &lt;code&gt;totalLength&lt;/code&gt; 在 &lt;code&gt;getPageLength(pageNum)&lt;/code&gt; Promise待处理期间，将在单独的函数调用中更新变量，该更新将丢失，因为新值将被覆盖而不会被读取。</target>
        </trans-unit>
        <trans-unit id="684f202df475b56b50fb6fd729383d048e7a34fd" translate="yes" xml:space="preserve">
          <source>This command is used for intensive profiling of ESLint using Chrome Developer Tools. It starts a development server that runs through three profiles:</source>
          <target state="translated">该命令用于使用 Chrome 开发工具对 ESLint 进行密集剖析。它启动一个开发服务器,通过三个配置文件运行。</target>
        </trans-unit>
        <trans-unit id="ad05d4ce57e7c2b8d71120892681f0fd7b8a2986" translate="yes" xml:space="preserve">
          <source>This comment specifies the &quot;double&quot; option for the &lt;a href=&quot;../rules/quotes&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt; rule. The first item in the array is always the rule severity (number or string).</source>
          <target state="translated">此注释为&lt;a href=&quot;../rules/quotes&quot;&gt; &lt;code&gt;quotes&lt;/code&gt; &lt;/a&gt;规则指定&amp;ldquo;双&amp;rdquo;选项。数组中的第一项始终是规则严重性（数字或字符串）。</target>
        </trans-unit>
        <trans-unit id="c7f36a8542f8ca497d5ce67e7924c214e3e2553a" translate="yes" xml:space="preserve">
          <source>This configuration would require blank lines after all directive prologues, like the &lt;a href=&quot;lines-around-directive&quot;&gt;lines-around-directive&lt;/a&gt; rule.</source>
          <target state="translated">此配置在所有指令序言之后都需要空白行，例如，&lt;a href=&quot;lines-around-directive&quot;&gt;行周围指令&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="9dbff86ed4fd7400b47ff47a0dd5eda756a4d90b" translate="yes" xml:space="preserve">
          <source>This configuration would require blank lines after every sequence of variable declarations, like the &lt;a href=&quot;newline-after-var&quot;&gt;newline-after-var&lt;/a&gt; rule.</source>
          <target state="translated">此配置在每个变量声明序列之后都需要空白行，例如&lt;a href=&quot;newline-after-var&quot;&gt;newline-after-var&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="1e26ce16017121a05fb352bf06244e7be23d0979" translate="yes" xml:space="preserve">
          <source>This configuration would require blank lines before all &lt;code&gt;return&lt;/code&gt; statements, like the &lt;a href=&quot;newline-before-return&quot;&gt;newline-before-return&lt;/a&gt; rule.</source>
          <target state="translated">此配置在所有 &lt;code&gt;return&lt;/code&gt; 语句之前需要空白行，例如&lt;a href=&quot;newline-before-return&quot;&gt;newline-before-return&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="edd29e3ad0ea0fd7c3b1da1138e750163dfb1aad" translate="yes" xml:space="preserve">
          <source>This configuration would require blank lines between clauses in &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">此配置将需要 &lt;code&gt;switch&lt;/code&gt; 语句中子句之间的空白行。</target>
        </trans-unit>
        <trans-unit id="6b66a4e4cfa3e14529aa4fa898e5f7863716da98" translate="yes" xml:space="preserve">
          <source>This confusion led to the suggestion that you always use the radix parameter to &lt;code&gt;parseInt()&lt;/code&gt; to eliminate unintended consequences. So instead of doing this:</source>
          <target state="translated">这种混淆导致建议您始终使用基数参数 &lt;code&gt;parseInt()&lt;/code&gt; 来消除意外的后果。因此，不要这样做：</target>
        </trans-unit>
        <trans-unit id="83e16d377b13bc51965962233959b781d483d56b" translate="yes" xml:space="preserve">
          <source>This creates a &lt;code&gt;.eslintrc.json&lt;/code&gt; with the equivalent rules from &lt;code&gt;.jscsrc.json&lt;/code&gt;.</source>
          <target state="translated">这将创建一个 &lt;code&gt;.eslintrc.json&lt;/code&gt; 从等价规则 &lt;code&gt;.jscsrc.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35b6118aa09ead4292a552cdefd4bf660c36121a" translate="yes" xml:space="preserve">
          <source>This defines two global variables, &lt;code&gt;var1&lt;/code&gt; and &lt;code&gt;var2&lt;/code&gt;. If you want to optionally specify that these global variables can be written to (rather than only being read), then you can set each with a &lt;code&gt;&quot;writable&quot;&lt;/code&gt; flag:</source>
          <target state="translated">这定义了两个全局变量 &lt;code&gt;var1&lt;/code&gt; 和 &lt;code&gt;var2&lt;/code&gt; 。如果您希望有选择地指定可以写入这些全局变量（而不是仅读取它们），则可以为每个全局变量设置一个 &lt;code&gt;&quot;writable&quot;&lt;/code&gt; 标志：</target>
        </trans-unit>
        <trans-unit id="3ca397cac4d7710b96570663c5edc9bb83de7535" translate="yes" xml:space="preserve">
          <source>This document was written based on the implementation of &lt;a href=&quot;https://github.com/eslint/eslint-scope&quot;&gt;eslint-scope&lt;/a&gt;, a fork of &lt;a href=&quot;https://github.com/estools/escope&quot;&gt;escope&lt;/a&gt;, and deprecates some members ESLint is not using.</source>
          <target state="translated">本文档基于&lt;a href=&quot;https://github.com/eslint/eslint-scope&quot;&gt;eslint-scope&lt;/a&gt;的实现（escope的一个分支）而&lt;a href=&quot;https://github.com/estools/escope&quot;&gt;编写&lt;/a&gt;，并弃用了ESLint未使用的某些成员。</target>
        </trans-unit>
        <trans-unit id="2b59eaeb1ba84dbe4d0f62e580e35a843870fadf" translate="yes" xml:space="preserve">
          <source>This does not apply to ES modules since the module code is implicitly in &lt;code&gt;strict&lt;/code&gt; mode.</source>
          <target state="translated">这不适用于ES模块，因为模块代码隐式处于 &lt;code&gt;strict&lt;/code&gt; 模式下。</target>
        </trans-unit>
        <trans-unit id="98630f364b82526bebf7c8f187b15017bce5bf8a" translate="yes" xml:space="preserve">
          <source>This edit information means replacing the range of the &lt;code&gt;range&lt;/code&gt; property by the &lt;code&gt;text&lt;/code&gt; property value. It's like &lt;code&gt;sourceCodeText.slice(0, edit.range[0]) + edit.text + sourceCodeText.slice(edit.range[1])&lt;/code&gt;. Therefore, it's an add if the &lt;code&gt;range[0]&lt;/code&gt; and &lt;code&gt;range[1]&lt;/code&gt; property values are the same value, and it's removal if the &lt;code&gt;text&lt;/code&gt; property value is empty string.</source>
          <target state="translated">该编辑信息意味着用 &lt;code&gt;text&lt;/code&gt; 属性值替换 &lt;code&gt;range&lt;/code&gt; 属性的范围。就像 &lt;code&gt;sourceCodeText.slice(0, edit.range[0]) + edit.text + sourceCodeText.slice(edit.range[1])&lt;/code&gt; 。因此，如果 &lt;code&gt;range[0]&lt;/code&gt; 和 &lt;code&gt;range[1]&lt;/code&gt; 属性值相同，则为加号；如果 &lt;code&gt;text&lt;/code&gt; 属性值为空字符串，则将其移除。</target>
        </trans-unit>
        <trans-unit id="fb51c33d469f4a38ec64dfb8e217007e9ea2b0d3" translate="yes" xml:space="preserve">
          <source>This enables Node.js and Mocha environments.</source>
          <target state="translated">这样就可以实现Node.js和Mocha环境。</target>
        </trans-unit>
        <trans-unit id="96d81fc1760eedae232eea6c704c64e8eb216135" translate="yes" xml:space="preserve">
          <source>This error is raised to highlight a piece of code that may not work as you expect it to and could also indicate a misunderstanding of how the language works. Your code may run without any problems if you do not fix this error, but in some situations it could behave unexpectedly.</source>
          <target state="translated">该错误的出现是为了突出显示一段可能无法按照您的期望工作的代码,也可能表明对语言工作方式的误解。如果你不修复这个错误,你的代码可能会毫无问题地运行,但在某些情况下,它可能会出现意外的行为。</target>
        </trans-unit>
        <trans-unit id="1319046b42ad8a423f26271e5a8f9e3897afb48f" translate="yes" xml:space="preserve">
          <source>This error is raised to highlight a potentially confusing and potentially pointless piece of code. There are almost no situations in which you would need to compare something to itself.</source>
          <target state="translated">提出这个错误是为了强调一段可能会引起混淆和可能毫无意义的代码。几乎没有任何情况下,你需要将某物与自身进行比较。</target>
        </trans-unit>
        <trans-unit id="e531d4e1a4e5ab163fb0aa73581a1e29f4d1b370" translate="yes" xml:space="preserve">
          <source>This error is raised to highlight the use of a bad practice. By passing a string to the Function constructor, you are requiring the engine to parse that string much in the way it has to when you call the &lt;code&gt;eval&lt;/code&gt; function.</source>
          <target state="translated">出现此错误是为了突出说明不良做法的使用。通过将字符串传递给Function构造函数，您需要引擎以调用 &lt;code&gt;eval&lt;/code&gt; 函数时所需的方式来解析该字符串。</target>
        </trans-unit>
        <trans-unit id="f2f1895eb1d8a20e008d9ead1693d3546a812ebc" translate="yes" xml:space="preserve">
          <source>This error occurs when a label is used to mark a statement that is not an iteration or switch</source>
          <target state="translated">当一个标签被用来标记一个不是迭代或开关的语句时,就会出现这个错误。</target>
        </trans-unit>
        <trans-unit id="0066921471bb97a77df66b0fbbcd0a1701ecc926" translate="yes" xml:space="preserve">
          <source>This event is always fired when the next segment has existed already. That timing is the end of loops mainly.</source>
          <target state="translated">这个事件总是在下一段已经存在的时候被触发。这个时机主要是循环的结束。</target>
        </trans-unit>
        <trans-unit id="bb4b12cc9ff8e27a5e1e8dc331ee5e01a59914a3" translate="yes" xml:space="preserve">
          <source>This example doesn't need to include separators as &lt;code&gt;path.join()&lt;/code&gt; will do it in the most appropriate manner. Alternately, you can use &lt;code&gt;path.resolve()&lt;/code&gt; to retrieve the fully-qualified path:</source>
          <target state="translated">这个示例不需要包含分隔符，因为 &lt;code&gt;path.join()&lt;/code&gt; 将以最合适的方式进行分隔。另外，您可以使用 &lt;code&gt;path.resolve()&lt;/code&gt; 检索完全限定的路径：</target>
        </trans-unit>
        <trans-unit id="a1489f70baffad0b363356684d7ebc01fe6e95fe" translate="yes" xml:space="preserve">
          <source>This example is checking whether or not the parameter &lt;code&gt;cb&lt;/code&gt; is called in every path. Instances of &lt;code&gt;CodePath&lt;/code&gt; and &lt;code&gt;CodePathSegment&lt;/code&gt; are shared to every rule. So a rule must not modify those instances. Please use a map of information instead.</source>
          <target state="translated">本示例正在检查是否在每个路径中都调用了参数 &lt;code&gt;cb&lt;/code&gt; 。 &lt;code&gt;CodePath&lt;/code&gt; 和 &lt;code&gt;CodePathSegment&lt;/code&gt; 的实例共享给每个规则。因此，规则不得修改这些实例。请改用信息图。</target>
        </trans-unit>
        <trans-unit id="6b1cbc4d68b7ab7330711ad6c1fdf27c26b1979f" translate="yes" xml:space="preserve">
          <source>This example is the same as the last example, only it uses the numeric codes instead of the string values. The &lt;code&gt;eqeqeq&lt;/code&gt; rule is off and the &lt;code&gt;curly&lt;/code&gt; rule is set to be an error.</source>
          <target state="translated">此示例与上一个示例相同，只不过它使用数字代码而不是字符串值。该 &lt;code&gt;eqeqeq&lt;/code&gt; 规则是关闭和 &lt;code&gt;curly&lt;/code&gt; 规则设置为是一个错误。</target>
        </trans-unit>
        <trans-unit id="5b80ceb7cc1a3b04b54119a40781bdb6e7bf6522" translate="yes" xml:space="preserve">
          <source>This example uses the configuration file at &lt;code&gt;~/my-eslint.json&lt;/code&gt;.</source>
          <target state="translated">本示例使用位于 &lt;code&gt;~/my-eslint.json&lt;/code&gt; 的配置文件。</target>
        </trans-unit>
        <trans-unit id="5750c517a5090dcd054e93a3ee543572116cb885" translate="yes" xml:space="preserve">
          <source>This fixer can just select a quote type arbitrarily. If it guesses wrong, the resulting code will be automatically reported and fixed by the &lt;a href=&quot;../rules/quotes&quot;&gt;&lt;code&gt;quotes&lt;/code&gt;&lt;/a&gt; rule.</source>
          <target state="translated">该修复程序可以随意选择报价类型。如果猜错了，结果代码将自动被&lt;a href=&quot;../rules/quotes&quot;&gt; &lt;code&gt;quotes&lt;/code&gt; &lt;/a&gt;规则报告并修复。</target>
        </trans-unit>
        <trans-unit id="72e5ad7dfae2aad2273d8fb43485335becf7a8e7" translate="yes" xml:space="preserve">
          <source>This flag can be useful for integrations (e.g. editor plugins) which need to autofix text from the command line without saving it to the filesystem.</source>
          <target state="translated">这个标志对于需要从命令行自动修复文本而不需要将其保存到文件系统的集成(例如编辑器插件)非常有用。</target>
        </trans-unit>
        <trans-unit id="157309b8637b779bbae6ea2553e72ed4cf1ac2da" translate="yes" xml:space="preserve">
          <source>This guide is intended for anyone who wants to contribute to an ESLint project. Please read it carefully as it answers a lot of the questions many newcomers have when first working with our projects.</source>
          <target state="translated">本指南适用于任何想为ESLint项目做贡献的人。请仔细阅读它,因为它回答了许多新人在第一次使用我们的项目时的问题。</target>
        </trans-unit>
        <trans-unit id="253a5fabdebd34fd1ff274b7348e9288f83d7161" translate="yes" xml:space="preserve">
          <source>This guide is intended for those who wish to use ESLint as an end-user. If you're looking for how to extend ESLint or work with the ESLint source code, please see the &lt;a href=&quot;../developer-guide&quot;&gt;Developer Guide&lt;/a&gt;.</source>
          <target state="translated">本指南适用于希望使用ESLint作为最终用户的用户。如果您正在寻找如何扩展ESLint或使用ESLint源代码，请参见&lt;a href=&quot;../developer-guide&quot;&gt;开发人员指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="473f2b9ad42cc05ec316de78004da7a5bf503dd5" translate="yes" xml:space="preserve">
          <source>This guide is intended for those who wish to:</source>
          <target state="translated">本指南是为那些希望:</target>
        </trans-unit>
        <trans-unit id="9ce127fc5333e8fad7ca9180cee5cf2786869645" translate="yes" xml:space="preserve">
          <source>This installs the ESLint CLI from the npm repository. To run ESLint, use the following format:</source>
          <target state="translated">这将从 npm 资源库中安装 ESLint CLI。要运行ESLint,请使用以下格式。</target>
        </trans-unit>
        <trans-unit id="6d6a6a6ef3fa256f73c341751311b151c76aafa7" translate="yes" xml:space="preserve">
          <source>This is a convenience method similar to &lt;code&gt;Linter#defineRule&lt;/code&gt;, except that it allows you to define many rules at once using an object.</source>
          <target state="translated">这是类似于 &lt;code&gt;Linter#defineRule&lt;/code&gt; 的便捷方法，不同之处在于，它允许您使用一个对象一次定义许多规则。</target>
        </trans-unit>
        <trans-unit id="11670f5644a3f050b8ea016868b68ee8847819a8" translate="yes" xml:space="preserve">
          <source>This is a static function on &lt;code&gt;CLIEngine&lt;/code&gt; that is used to output fixes from &lt;code&gt;report&lt;/code&gt; to disk. It does by looking for files that have an &lt;code&gt;output&lt;/code&gt; property in their results. Here's an example:</source>
          <target state="translated">这是 &lt;code&gt;CLIEngine&lt;/code&gt; 上的静态函数，用于将修复程序从 &lt;code&gt;report&lt;/code&gt; 输出到磁盘。它通过查找结果中具有 &lt;code&gt;output&lt;/code&gt; 属性的文件来实现。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="1adc98f9996e37b1c7669ea22572879ca414a9b1" translate="yes" xml:space="preserve">
          <source>This is a static function on &lt;code&gt;CLIEngine&lt;/code&gt;. It can be used to filter out all the non error messages from the report object.</source>
          <target state="translated">这是 &lt;code&gt;CLIEngine&lt;/code&gt; 上的静态函数。它可用于过滤掉报表对象中的所有非错误消息。</target>
        </trans-unit>
        <trans-unit id="411339a1879450f98c5e40e4c8f17c9ae2ac5b07" translate="yes" xml:space="preserve">
          <source>This is a static function on &lt;code&gt;SourceCode&lt;/code&gt; that is used to split the source code text into an array of lines.</source>
          <target state="translated">这是 &lt;code&gt;SourceCode&lt;/code&gt; 上的静态函数，用于将源代码文本拆分为行数组。</target>
        </trans-unit>
        <trans-unit id="5fdecc207ab12083b97a7f33edbcb0861fcaf254" translate="yes" xml:space="preserve">
          <source>This is a static method.</source>
          <target state="translated">这是一种静态方法。</target>
        </trans-unit>
        <trans-unit id="9e3f9a85b2f15c8a384321357b89de4db88c52fb" translate="yes" xml:space="preserve">
          <source>This is a static property.</source>
          <target state="translated">这是一个静态属性。</target>
        </trans-unit>
        <trans-unit id="5c6b39c351ca401855c1034cdb4244faf9090c89" translate="yes" xml:space="preserve">
          <source>This is also valid:</source>
          <target state="translated">这也是有效的。</target>
        </trans-unit>
        <trans-unit id="05cabcf8fe7c5a7502ad5f2210a082e0f0df43f2" translate="yes" xml:space="preserve">
          <source>This is an option to avoid conflicting with &lt;code&gt;no-use-before-define&lt;/code&gt; rule (without &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; option). If &lt;code&gt;true&lt;/code&gt; is specified, this rule will ignore variables that are read between the declaration and the first assignment. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">这是一个避免与 &lt;code&gt;no-use-before-define&lt;/code&gt; 规则冲突的选项（不带 &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; 选项）。如果指定 &lt;code&gt;true&lt;/code&gt; ，则此规则将忽略在声明和第一个赋值之间读取的变量。默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f2e67931876380560ac0e1af9b3fd1d55a7d952" translate="yes" xml:space="preserve">
          <source>This is called a Yoda condition because it reads as, &quot;if red equals the color&quot;, similar to the way the Star Wars character Yoda speaks. Compare to the other way of arranging the operands:</source>
          <target state="translated">这被称为尤达条件,因为它的读法是:&quot;如果红色等于颜色&quot;,类似于星球大战人物尤达的说话方式。与另一种排列操作数的方式相比。</target>
        </trans-unit>
        <trans-unit id="f9f1cbf0a10293e94b068250d8c44dd714c9617f" translate="yes" xml:space="preserve">
          <source>This is considered an implied &lt;code&gt;eval()&lt;/code&gt; because a string of JavaScript code is passed in to be interpreted. The same can be done with &lt;code&gt;setInterval()&lt;/code&gt; and &lt;code&gt;execScript()&lt;/code&gt;. Both interpret the JavaScript code in the global scope. For both &lt;code&gt;setTimeout()&lt;/code&gt; and &lt;code&gt;setInterval()&lt;/code&gt;, the first argument can also be a function, and that is considered safer and is more performant:</source>
          <target state="translated">这被认为是隐含的 &lt;code&gt;eval()&lt;/code&gt; ,因为传入了JavaScript代码字符串以进行解释。使用 &lt;code&gt;setInterval()&lt;/code&gt; 和 &lt;code&gt;execScript()&lt;/code&gt; 可以完成相同的操作。两者都在全局范围内解释JavaScript代码。对于 &lt;code&gt;setTimeout()&lt;/code&gt; 和 &lt;code&gt;setInterval()&lt;/code&gt; ，第一个参数也可以是一个函数，并且被认为更安全且性能更高：</target>
        </trans-unit>
        <trans-unit id="885353f2c68ea0bab26fa60d3a09af64f1ec283e" translate="yes" xml:space="preserve">
          <source>This is considered by many to be a bad practice due to the difficulty in debugging and reading these types of functions.</source>
          <target state="translated">这被很多人认为是一种不好的做法,因为调试和读取这类函数很困难。</target>
        </trans-unit>
        <trans-unit id="71789ba820d3432452cd5210c7e76d1350d5fa8c" translate="yes" xml:space="preserve">
          <source>This is not expected to cause breakage. However, it will likely result in larger report locations than before. For example, if a rule reports the root node of the AST, the reported problem's range will be the entire program. In some integrations, this could result in a poor user experience (e.g. if the entire program is highlighted to indicate an error).</source>
          <target state="translated">预计这不会造成破损。然而,它可能会导致报告位置比以前更大。例如,如果一个规则报告AST的根节点,报告问题的范围将是整个程序。在一些集成中,这可能会导致糟糕的用户体验(例如,如果整个程序被突出显示以表示错误)。</target>
        </trans-unit>
        <trans-unit id="09772e314d49341cf87eb2642be70a9dc5fc7d9f" translate="yes" xml:space="preserve">
          <source>This is the default option.</source>
          <target state="translated">这是默认选项。</target>
        </trans-unit>
        <trans-unit id="d56606d1292924eedc2be3d66c63677095b21441" translate="yes" xml:space="preserve">
          <source>This is the default option. It disallows assignments unless they are enclosed in parentheses.</source>
          <target state="translated">这是默认选项。它不允许转让,除非将其放在括号中。</target>
        </trans-unit>
        <trans-unit id="9ee2c2a8cccc55fcecc1d76de320e24ae82e812d" translate="yes" xml:space="preserve">
          <source>This is the default option. It enforces spacing after semicolons and disallows spacing before semicolons.</source>
          <target state="translated">这是默认选项。它强制要求分号后的间距,不允许分号前的间距。</target>
        </trans-unit>
        <trans-unit id="8c3fab8ba68001a6f97fcb8826756ef27d34444f" translate="yes" xml:space="preserve">
          <source>This is used to disambiguate the division operator to not confuse users.</source>
          <target state="translated">这是为了消除除法运算符的歧义,以免用户混淆。</target>
        </trans-unit>
        <trans-unit id="34f305c3c8978f968bfdd0149b0fd14a4716185a" translate="yes" xml:space="preserve">
          <source>This is used to disambiguate the slash operator and facilitates more readable code.</source>
          <target state="translated">这是为了消除斜线操作符的歧义,方便代码的可读性。</target>
        </trans-unit>
        <trans-unit id="8bd301643debec8b3d995a82000f4930e1a7b0d5" translate="yes" xml:space="preserve">
          <source>This is valid as well:</source>
          <target state="translated">这也是有效的。</target>
        </trans-unit>
        <trans-unit id="3cad551b2177908dacdd49bf4d5fd3dc7d354609" translate="yes" xml:space="preserve">
          <source>This may look alright at first sight, but this code in fact throws a syntax error in ECMAScript 5 strict mode. This happens because &lt;code&gt;1e2&lt;/code&gt; and &lt;code&gt;100&lt;/code&gt; are coerced into strings before getting used as the property name. Both &lt;code&gt;String(1e2)&lt;/code&gt; and &lt;code&gt;String(100)&lt;/code&gt; happen to be equal to &lt;code&gt;&quot;100&quot;&lt;/code&gt;, which causes the &quot;Duplicate data property in object literal not allowed in strict mode&quot; error. Issues like that can be tricky to debug, so some prefer to require quotes around all property names.</source>
          <target state="translated">乍一看，这似乎还不错，但是实际上，此代码在ECMAScript 5严格模式下引发了语法错误。发生这种情况是因为 &lt;code&gt;1e2&lt;/code&gt; 和 &lt;code&gt;100&lt;/code&gt; 在用作属性名称之前被强制转换为字符串。两个 &lt;code&gt;String(1e2)&lt;/code&gt; 和 &lt;code&gt;String(100)&lt;/code&gt; 正好等于 &lt;code&gt;&quot;100&quot;&lt;/code&gt; ，这将导致错误&amp;ldquo;在对象的重复数据属性字面不严格模式中使用&amp;rdquo;。诸如此类的问题很难调试，因此有些人倾向于要求在所有属性名称周围都加上引号。</target>
        </trans-unit>
        <trans-unit id="5f324b335e29b3bc2325916661c3691bcbdcc494" translate="yes" xml:space="preserve">
          <source>This may look like a &lt;code&gt;return&lt;/code&gt; statement that returns an object literal, however, the JavaScript engine will interpret this code as:</source>
          <target state="translated">这看起来像是返回对象文字的 &lt;code&gt;return&lt;/code&gt; 语句，但是，JavaScript引擎会将以下代码解释为：</target>
        </trans-unit>
        <trans-unit id="881bb06811a5f34f6a9728c5b4c76cb2e343d9cc" translate="yes" xml:space="preserve">
          <source>This means that if you are using a config file from a shared location via &lt;code&gt;--config&lt;/code&gt; option, the plugins that the config file declare will be loaded from the shared config file location.</source>
          <target state="translated">这意味着，如果您通过 &lt;code&gt;--config&lt;/code&gt; 选项从共享位置使用配置文件，则将从共享配置文件位置加载配置文件声明的插件。</target>
        </trans-unit>
        <trans-unit id="9469e264aeefd6b881ec26f4966d916d417a81b0" translate="yes" xml:space="preserve">
          <source>This message occurs because ESLint is unsure if you wanted to actually lint the file or not. As the message indicates, you can use &lt;code&gt;--no-ignore&lt;/code&gt; to omit using the ignore rules.</source>
          <target state="translated">出现此消息的原因是，ESLint无法确定您是否希望实际对文件进行处理。如消息所示，您可以使用 &lt;code&gt;--no-ignore&lt;/code&gt; 来使用忽略规则来忽略。</target>
        </trans-unit>
        <trans-unit id="7ed6656e46098c1897ba8527d403fd684c0380f1" translate="yes" xml:space="preserve">
          <source>This messages occurs because, normally, this file would be ignored by ESLint's implicit ignore rules (as mentioned above). A negated ignore rule in your &lt;code&gt;.eslintignore&lt;/code&gt; file would override the implicit rule and reinclude this file for linting. Additionally, in this specific case, &lt;code&gt;--no-ignore&lt;/code&gt; could be used to lint the file as well.</source>
          <target state="translated">出现此消息的原因是，通常，ESLint的隐式忽略规则将忽略该文件（如上所述）。 &lt;code&gt;.eslintignore&lt;/code&gt; 文件中的否定忽略规则将覆盖隐式规则，并重新包含此文件以进行掉毛。此外，在这种特定情况下，-- &lt;code&gt;--no-ignore&lt;/code&gt; 也可以用于使文件皮绒化。</target>
        </trans-unit>
        <trans-unit id="f867c366ca9a1bb334663562667053f7de2a0669" translate="yes" xml:space="preserve">
          <source>This method calculates the configuration for a given file, which can be useful for debugging purposes.</source>
          <target state="translated">此方法计算给定文件的配置,这对调试很有用。</target>
        </trans-unit>
        <trans-unit id="a7dd3396c1130d34c892b1e3d8bacb6965d2065b" translate="yes" xml:space="preserve">
          <source>This method checks if a given file is ignored by your configuration.</source>
          <target state="translated">此方法检查给定的文件是否被你的配置所忽略。</target>
        </trans-unit>
        <trans-unit id="109e1593c69f07fac48037663698a5106e5a31cb" translate="yes" xml:space="preserve">
          <source>This method copies the given results and removes warnings. The returned value contains only errors.</source>
          <target state="translated">本方法复制给定的结果并删除警告。返回的值只包含错误。</target>
        </trans-unit>
        <trans-unit id="9acfa8cb4bab952e8f358b4acdd87a3e87086a7e" translate="yes" xml:space="preserve">
          <source>This method is similar to verify except that it also runs autofixing logic, similar to the &lt;code&gt;--fix&lt;/code&gt; flag on the command line. The result object will contain the autofixed code, along with any remaining linting messages for the code that were not autofixed.</source>
          <target state="translated">此方法类似于验证，除了它还运行自动修复逻辑之外，类似于命令行上的 &lt;code&gt;--fix&lt;/code&gt; 标志。结果对象将包含自动修复的代码，以及未自动修复的代码的其余所有掉毛消息。</target>
        </trans-unit>
        <trans-unit id="8bededf08e4fa23aa4f897b18009383e1a17507e" translate="yes" xml:space="preserve">
          <source>This method lints the files that match the glob patterns and then returns the results.</source>
          <target state="translated">此方法将符合glob模式的文件进行列举,然后返回结果。</target>
        </trans-unit>
        <trans-unit id="cad535c45bf2ff2094ab71adf2177547066cf4c7" translate="yes" xml:space="preserve">
          <source>This method lints the given source code text and then returns the results.</source>
          <target state="translated">本方法对给定的源代码文本进行线程处理,然后返回结果。</target>
        </trans-unit>
        <trans-unit id="3d0bfb45ed00f594f3627eb7b50b9004b42dfee5" translate="yes" xml:space="preserve">
          <source>This method loads a formatter. Formatters convert lint results to a human- or machine-readable string.</source>
          <target state="translated">本方法加载一个格式化程序。格式化器将绒毛结果转换为人类或机器可读的字符串。</target>
        </trans-unit>
        <trans-unit id="6e28456cfd122c5d695be0c36d1639aa0cd9e8fd" translate="yes" xml:space="preserve">
          <source>This method returns a map of all loaded rules.</source>
          <target state="translated">此方法返回所有加载规则的映射。</target>
        </trans-unit>
        <trans-unit id="96118f25ecbb0711c0de11b20891644868f6d5a0" translate="yes" xml:space="preserve">
          <source>This method returns a map of all loaded rules. Under the hood, it calls &lt;a href=&quot;#lintergetrules&quot;&gt;Linter#getRules&lt;/a&gt;.</source>
          <target state="translated">此方法返回所有已加载规则的映射。在&lt;a href=&quot;#lintergetrules&quot;&gt;后台&lt;/a&gt;，它称为Linter＃getRules。</target>
        </trans-unit>
        <trans-unit id="750daf348b86f808d9b8eaf3ba8fb5c90d1422b3" translate="yes" xml:space="preserve">
          <source>This method returns an array of all the comments found in the program. This is useful for rules that need to check all comments regardless of location.</source>
          <target state="translated">此方法返回一个包含程序中所有注释的数组。这对于需要检查所有注释的规则非常有用,无论其位置如何。</target>
        </trans-unit>
        <trans-unit id="cf8d820e1cad68596ca7105185382c1dd8c45533" translate="yes" xml:space="preserve">
          <source>This method returns the scope which has the following types:</source>
          <target state="translated">本方法返回具有以下类型的作用域。</target>
        </trans-unit>
        <trans-unit id="f42d076bb44d47d2f4da5ac68aa78fc1e1a6605c" translate="yes" xml:space="preserve">
          <source>This method writes code modified by ESLint's autofix feature into its respective file. If any of the modified files don't exist, this method does nothing.</source>
          <target state="translated">本方法将ESLint的自动修复功能所修改的代码写入相应的文件中。如果任何修改后的文件不存在,本方法不做任何操作。</target>
        </trans-unit>
        <trans-unit id="6cc5da084279273de8034a217a287499cc69f86a" translate="yes" xml:space="preserve">
          <source>This might be surprising to developers coming from other languages where some of these backreferences can be used in a meaningful way.</source>
          <target state="translated">对于来自其他语言的开发者来说,这可能会让他们感到惊讶,因为在这些语言中,有些回溯引用可以以一种有意义的方式使用。</target>
        </trans-unit>
        <trans-unit id="dbe677f233ad08e453df8fbf6a0cc972e5133856" translate="yes" xml:space="preserve">
          <source>This object may not:</source>
          <target state="translated">这个对象可能不。</target>
        </trans-unit>
        <trans-unit id="07af4924baef123f1b198a3210ee8db9f97b124a" translate="yes" xml:space="preserve">
          <source>This object's responsibilities include:</source>
          <target state="translated">该对象的职责包括:</target>
        </trans-unit>
        <trans-unit id="00ba367d9f14ddd30b21a382dcdfd9d0529fef21" translate="yes" xml:space="preserve">
          <source>This option allows only valid array indexes: numbers that will be coerced to one of &lt;code&gt;&quot;0&quot;&lt;/code&gt;, &lt;code&gt;&quot;1&quot;&lt;/code&gt;, &lt;code&gt;&quot;2&quot;&lt;/code&gt; ... &lt;code&gt;&quot;4294967294&quot;&lt;/code&gt;.</source>
          <target state="translated">该选项仅允许有效的数组索引：将被强制为 &lt;code&gt;&quot;0&quot;&lt;/code&gt; ， &lt;code&gt;&quot;1&quot;&lt;/code&gt; ， &lt;code&gt;&quot;2&quot;&lt;/code&gt; ... &lt;code&gt;&quot;4294967294&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddb66475e59df0061ea6486916187732183c2c35" translate="yes" xml:space="preserve">
          <source>This option allows references to function declarations. For function expressions and arrow functions, please see the &lt;a href=&quot;#variables&quot;&gt;&lt;code&gt;variables&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">此选项允许引用函数声明。有关函数表达式和箭头函数，请参见&lt;a href=&quot;#variables&quot;&gt; &lt;code&gt;variables&lt;/code&gt; &lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="e8c3a3349dc261fe599ac47a9d7990013dfe7db9" translate="yes" xml:space="preserve">
          <source>This option allows you to disable reporting on warnings. If you enable this option, only errors are reported by ESLint.</source>
          <target state="translated">此选项允许您禁用警告报告。如果启用该选项,ESLint只报告错误。</target>
        </trans-unit>
        <trans-unit id="85dd27a30c2a375f5a8fd794ae0e7f82e1be6296" translate="yes" xml:space="preserve">
          <source>This option allows you to specify a filename to process STDIN as. This is useful when processing files from STDIN and you have rules which depend on the filename.</source>
          <target state="translated">这个选项允许你指定一个文件名来处理STDIN。当处理 STDIN 中的文件,并且有依赖于文件名的规则时,这个选项很有用。</target>
        </trans-unit>
        <trans-unit id="186734fe42d275a33186e1772b91f3f61e44c344" translate="yes" xml:space="preserve">
          <source>This option allows you to specify a parser to be used by ESLint. By default, &lt;code&gt;espree&lt;/code&gt; will be used.</source>
          <target state="translated">此选项允许您指定ESLint使用的解析器。默认情况下，将使用 &lt;code&gt;espree&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74b60e3e65cac66b94ee54882199faebdc7d7526" translate="yes" xml:space="preserve">
          <source>This option allows you to specify a warning threshold, which can be used to force ESLint to exit with an error status if there are too many warning-level rule violations in your project.</source>
          <target state="translated">这个选项允许您指定一个警告阈值,如果您的项目中有太多的警告级规则违反,可以用这个阈值来强制ESLint以错误状态退出。</target>
        </trans-unit>
        <trans-unit id="d9cfbfc188b072be5cf23949f06fff9feb06dd57" translate="yes" xml:space="preserve">
          <source>This option allows you to specify an additional configuration file for ESLint (see &lt;a href=&quot;configuring&quot;&gt;Configuring ESLint&lt;/a&gt; for more).</source>
          <target state="translated">此选项使您可以为ESLint指定其他配置文件（有关更多信息，请参阅&lt;a href=&quot;configuring&quot;&gt;配置ESLint&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d39ed50a5fad1fe2517fc4c0e41bff667e641b14" translate="yes" xml:space="preserve">
          <source>This option allows you to specify another directory from which to load rules files. This allows you to dynamically load new rules at run time. This is useful when you have custom rules that aren't suitable for being bundled with ESLint.</source>
          <target state="translated">该选项允许您指定另一个目录来加载规则文件。这允许您在运行时动态加载新规则。当您有不适合与 ESLint 捆绑的自定义规则时,这很有用。</target>
        </trans-unit>
        <trans-unit id="1b65a3229193445946c07836b34241f12c03d02d" translate="yes" xml:space="preserve">
          <source>This option allows you to specify parser options to be used by ESLint. Note that the available parser options are determined by the parser being used.</source>
          <target state="translated">这个选项允许您指定ESLint要使用的解析器选项。请注意,可用的解析器选项由正在使用的解析器决定。</target>
        </trans-unit>
        <trans-unit id="106d9c8368dbe004a8c5fe9daebbd29c87af1e91" translate="yes" xml:space="preserve">
          <source>This option allows you to specify patterns of files to ignore (in addition to those in &lt;code&gt;.eslintignore&lt;/code&gt;). You can repeat the option to provide multiple patterns. The supported syntax is the same as for &lt;code&gt;.eslintignore&lt;/code&gt;&lt;a href=&quot;configuring#.eslintignore&quot;&gt;files&lt;/a&gt;, which use the same patterns as the &lt;code&gt;.gitignore&lt;/code&gt;&lt;a href=&quot;https://git-scm.com/docs/gitignore&quot;&gt;specification&lt;/a&gt;. You should quote your patterns in order to avoid shell interpretation of glob patterns.</source>
          <target state="translated">使用此选项，您可以指定要忽略的文件模式（ &lt;code&gt;.eslintignore&lt;/code&gt; 中的模式除外）。您可以重复该选项以提供多种模式。支持的语法与 &lt;code&gt;.eslintignore&lt;/code&gt; &lt;a href=&quot;configuring#.eslintignore&quot;&gt;文件的&lt;/a&gt;语法相同，后者使用与 &lt;code&gt;.gitignore&lt;/code&gt; &lt;a href=&quot;https://git-scm.com/docs/gitignore&quot;&gt;规范&lt;/a&gt;相同的模式。您应该引用您的模式，以避免shell解释glob模式。</target>
        </trans-unit>
        <trans-unit id="4e1a28f3ded9a3b9eb6475943dff5e4939f78ddd" translate="yes" xml:space="preserve">
          <source>This option allows you to specify the file to use as your &lt;code&gt;.eslintignore&lt;/code&gt;. By default, ESLint looks in the current working directory for &lt;code&gt;.eslintignore&lt;/code&gt;. You can override this behavior by providing a path to a different file.</source>
          <target state="translated">此选项使您可以指定用作 &lt;code&gt;.eslintignore&lt;/code&gt; 的文件。默认情况下，ESLint在当前工作目录中查找 &lt;code&gt;.eslintignore&lt;/code&gt; 。您可以通过提供其他文件的路径来覆盖此行为。</target>
        </trans-unit>
        <trans-unit id="c32bf7172dd146fc567e0246ac0c8ff17f262721" translate="yes" xml:space="preserve">
          <source>This option allows you to specify the type of fixes to apply when using either &lt;code&gt;--fix&lt;/code&gt; or &lt;code&gt;--fix-dry-run&lt;/code&gt;. The three types of fixes are:</source>
          <target state="translated">使用此选项，您可以指定使用 &lt;code&gt;--fix&lt;/code&gt; 或 &lt;code&gt;--fix-dry-run&lt;/code&gt; 时要应用的修补程序的类型。修复的三种类型是：</target>
        </trans-unit>
        <trans-unit id="c914fe341609fcaa321048e85e99b3c111eac45d" translate="yes" xml:space="preserve">
          <source>This option allows you to specify which file extensions ESLint will use when searching for JavaScript files in the directories you specify. By default, it uses &lt;code&gt;.js&lt;/code&gt; as the only file extension.</source>
          <target state="translated">使用此选项，您可以指定在指定目录中搜​​索JavaScript文件时，ESLint将使用哪些文件扩展名。默认情况下，它使用 &lt;code&gt;.js&lt;/code&gt; 作为唯一的文件扩展名。</target>
        </trans-unit>
        <trans-unit id="087953b73d82f7e89cdb39f3d87a42f93a84d83d" translate="yes" xml:space="preserve">
          <source>This option allows you to specify which file extensions ESLint will use when searching for target files in the directories you specify. By default, ESLint lints &lt;code&gt;*.js&lt;/code&gt; files and the files that match the &lt;code&gt;overrides&lt;/code&gt; entries of your configuration.</source>
          <target state="translated">使用此选项，您可以指定在指定目录中搜​​索目标文件时，ESLint将使用哪些文件扩展名。默认情况下，ESLint会掉 &lt;code&gt;*.js&lt;/code&gt; 文件以及与配置的 &lt;code&gt;overrides&lt;/code&gt; 条目匹配的文件。</target>
        </trans-unit>
        <trans-unit id="5cefe1392a8f9c174c272d0205d79e85976936f0" translate="yes" xml:space="preserve">
          <source>This option causes ESLint to report directive comments like &lt;code&gt;// eslint-disable-line&lt;/code&gt; when no errors would have been reported on that line anyway. This can be useful to prevent future errors from unexpectedly being suppressed, by cleaning up old &lt;code&gt;eslint-disable&lt;/code&gt; comments which are no longer applicable.</source>
          <target state="translated">如果该 &lt;code&gt;// eslint-disable-line&lt;/code&gt; 未报告任何错误，则此选项会使ESLint报告// // eslint-disable-line这样的指令注释。通过清除不再适用 &lt;code&gt;eslint-disable&lt;/code&gt; 旧注释，这对于防止将来的错误意外被抑制很有用。</target>
        </trans-unit>
        <trans-unit id="c661c2f3569528801054ee87219857863dcf11b9" translate="yes" xml:space="preserve">
          <source>This option checks methods with the given names, &lt;em&gt;even if&lt;/em&gt; the object which has the method is &lt;em&gt;not&lt;/em&gt; an array.</source>
          <target state="translated">&lt;em&gt;即使&lt;/em&gt;具有该方法的对象&lt;em&gt;不是&lt;/em&gt;数组，此选项&lt;em&gt;也会&lt;/em&gt;使用给定名称检查方法。</target>
        </trans-unit>
        <trans-unit id="fccdeab5132a30722aca041dac694817c9dc5d44" translate="yes" xml:space="preserve">
          <source>This option defines global variables so that they will not be flagged as undefined by the &lt;code&gt;no-undef&lt;/code&gt; rule. Any specified global variables are assumed to be read-only by default, but appending &lt;code&gt;:true&lt;/code&gt; to a variable's name ensures that &lt;code&gt;no-undef&lt;/code&gt; will also allow writes. To specify multiple global variables, separate them using commas, or use the option multiple times.</source>
          <target state="translated">此选项定义全局变量，以便它们不会被 &lt;code&gt;no-undef&lt;/code&gt; 规则标记为未定义。默认情况下，所有指定的全局变量都假定为只读，但是在变量名称后附加 &lt;code&gt;:true&lt;/code&gt; 可以确保 &lt;code&gt;no-undef&lt;/code&gt; 也将允许写入。要指定多个全局变量，请使用逗号分隔它们，或多次使用该选项。</target>
        </trans-unit>
        <trans-unit id="8ba2372568bac2be3ed8079d1b145a3ad1c564b1" translate="yes" xml:space="preserve">
          <source>This option disallows all assignments in &lt;code&gt;return&lt;/code&gt; statements. All assignments are treated as problems.</source>
          <target state="translated">此选项禁止在 &lt;code&gt;return&lt;/code&gt; 语句中进行所有分配。所有作业均视为问题。</target>
        </trans-unit>
        <trans-unit id="c64a3a7bb5ddd0c764741c6306006a0d08071747" translate="yes" xml:space="preserve">
          <source>This option enables specific environments. Details about the global variables defined by each environment are available on the &lt;a href=&quot;configuring&quot;&gt;configuration&lt;/a&gt; documentation. This option only enables environments; it does not disable environments set in other configuration files. To specify multiple environments, separate them using commas, or use the option multiple times.</source>
          <target state="translated">此选项启用特定的环境。有关每个环境定义的全局变量的详细信息，可在&lt;a href=&quot;configuring&quot;&gt;配置&lt;/a&gt;文档中找到。此选项仅启用环境。它不会禁用在其他配置文件中设置的环境。要指定多个环境，请使用逗号分隔它们，或多次使用该选项。</target>
        </trans-unit>
        <trans-unit id="ea6b9d897dea32cb3a7adac81f91222a4f84f0b0" translate="yes" xml:space="preserve">
          <source>This option enforces spacing before semicolons and disallows spacing after semicolons.</source>
          <target state="translated">这个选项强制执行分号前的间距,不允许分号后的间距。</target>
        </trans-unit>
        <trans-unit id="de4b303d3dec233dfe8862afdb1eb4eeb8a2fe5e" translate="yes" xml:space="preserve">
          <source>This option ensures that all function bodies are strict mode code, while global code is not. Particularly if a build step concatenates multiple scripts, a strict mode directive in global code of one script could unintentionally enable strict mode in another script that was not intended to be strict code.</source>
          <target state="translated">这个选项确保所有的函数体都是严格模式代码,而全局代码不是。特别是当一个构建步骤连接了多个脚本时,一个脚本的全局代码中的严格模式指令可能会无意中在另一个不打算成为严格代码的脚本中启用严格模式。</target>
        </trans-unit>
        <trans-unit id="e647d69856373f96f3407afed5013f48346bdfe2" translate="yes" xml:space="preserve">
          <source>This option ensures that all functions are executed in strict mode. A strict mode directive must be present in global code or in every top-level function declaration or expression. It does not concern itself with unnecessary strict mode directives in nested functions that are already strict, nor with multiple strict mode directives at the same level.</source>
          <target state="translated">这个选项确保所有函数都以严格模式执行。全局代码或每个顶层函数声明或表达式中都必须有严格模式指令。它不关心已经是严格模式的嵌套函数中不必要的严格模式指令,也不关心同一层次的多个严格模式指令。</target>
        </trans-unit>
        <trans-unit id="aa35f1a43f3c3018915a36e743fa5634d8ffb97c" translate="yes" xml:space="preserve">
          <source>This option forces the enabling/disabling of colorized output. You can use this to override the default behavior, which is to enable colorized output unless no TTY is detected, such as when piping &lt;code&gt;eslint&lt;/code&gt; through &lt;code&gt;cat&lt;/code&gt; or &lt;code&gt;less&lt;/code&gt;.</source>
          <target state="translated">此选项强制启用/禁用彩色输出。您可以使用它来覆盖默认行为，即除非未检测到TTY，否则将启用彩色输出，例如，通过 &lt;code&gt;eslint&lt;/code&gt; 通过 &lt;code&gt;cat&lt;/code&gt; 或 &lt;code&gt;less&lt;/code&gt; 小号管道输送时。</target>
        </trans-unit>
        <trans-unit id="4aca571b443c66494cfaa66d1259c007fcbd6a87" translate="yes" xml:space="preserve">
          <source>This option has no effect on code that uses a processor, unless the processor opts into allowing autofixes.</source>
          <target state="translated">这个选项对使用处理器的代码没有影响,除非处理器选择允许自动修复。</target>
        </trans-unit>
        <trans-unit id="930e8c0ad2927b8cda5d231d103927440d79a6ec" translate="yes" xml:space="preserve">
          <source>This option has the same effect as &lt;code&gt;--fix&lt;/code&gt; with one difference: the fixes are not saved to the file system. This makes it possible to fix code from &lt;code&gt;stdin&lt;/code&gt; (when used with the &lt;code&gt;--stdin&lt;/code&gt; flag).</source>
          <target state="translated">此选项与 &lt;code&gt;--fix&lt;/code&gt; 具有相同的效果，但有一个区别：修复未保存到文件系统。这样就可以修复来自 &lt;code&gt;stdin&lt;/code&gt; 的代码（当与 &lt;code&gt;--stdin&lt;/code&gt; 标志一起使用时）。</target>
        </trans-unit>
        <trans-unit id="9e29912dbfa3dcdc6bb50600a52b9ed9b3d16f1d" translate="yes" xml:space="preserve">
          <source>This option instructs ESLint to try to fix as many issues as possible. The fixes are made to the actual files themselves and only the remaining unfixed issues are output. Not all problems are fixable using this option, and the option does not work in these situations:</source>
          <target state="translated">此选项指示 ESLint 尽可能多地修复问题。修复的是实际文件本身,只输出剩余的未修复的问题。并非所有的问题都可以使用该选项进行修复,在这些情况下,该选项不起作用。</target>
        </trans-unit>
        <trans-unit id="a3916f03fe6ee5dfd351fc13d5bd08fbc91a2d7e" translate="yes" xml:space="preserve">
          <source>This option is an object that expects property names to be AST node types as defined by &lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree&lt;/a&gt;. The easiest way to determine the node types for &lt;code&gt;exceptions&lt;/code&gt; is to use &lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST Explorer&lt;/a&gt; with the espree parser.</source>
          <target state="translated">此选项是一个对象，期望属性名称是&lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree&lt;/a&gt;定义的AST节点类型。确定 &lt;code&gt;exceptions&lt;/code&gt; 的节点类型的最简单方法是将&lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST Explorer&lt;/a&gt;与espree解析器一起使用。</target>
        </trans-unit>
        <trans-unit id="159d5bb23b26711ee83d3678da55988d09236463" translate="yes" xml:space="preserve">
          <source>This option is helpful if you are using another program to format your code but you would still like ESLint to apply other types of fixes.</source>
          <target state="translated">如果您使用另一个程序来格式化您的代码,但您仍然希望ESLint应用其他类型的修复,这个选项很有帮助。</target>
        </trans-unit>
        <trans-unit id="989aa7bf5f70f7e2a3435a849e6284b29b04f576" translate="yes" xml:space="preserve">
          <source>This option is only applicable when used in conjunction with the &lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; option.</source>
          <target state="translated">仅当与 &lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; 选项一起使用时，此选项才适用。</target>
        </trans-unit>
        <trans-unit id="e46b21d025dfd75b6276b72215872d951e5d3ce7" translate="yes" xml:space="preserve">
          <source>This option outputs debugging information to the console. This information is useful when you're seeing a problem and having a hard time pinpointing it. The ESLint team may ask for this debugging information to help solve bugs.</source>
          <target state="translated">该选项将调试信息输出到控制台。当你看到一个问题,但很难确定它的位置时,这些信息很有用。ESLint 团队可能会要求提供这些调试信息来帮助解决错误。</target>
        </trans-unit>
        <trans-unit id="85f6c4676d557f8e8848d9f14da2b55b5cf4fe52" translate="yes" xml:space="preserve">
          <source>This option outputs information about the execution environment, including the version of Node, npm, and local and global installations of ESLint. The ESLint team may ask for this information to help solve bugs.</source>
          <target state="translated">这个选项输出有关执行环境的信息,包括Node、npm的版本,以及ESLint的本地和全局安装情况。ESLint团队可能会要求这些信息来帮助解决错误。</target>
        </trans-unit>
        <trans-unit id="79b6e22672dda2878136d9153ec178619788c515" translate="yes" xml:space="preserve">
          <source>This option outputs the configuration to be used for the file passed. When present, no linting is performed and only config-related options are valid.</source>
          <target state="translated">这个选项输出要用于传递文件的配置。当该选项存在时,不进行脱毛,只有与配置相关的选项才有效。</target>
        </trans-unit>
        <trans-unit id="4561c938534c79e5470a90cddc468484882c9f8a" translate="yes" xml:space="preserve">
          <source>This option outputs the current ESLint version onto the console. All other options are ignored when this is present.</source>
          <target state="translated">该选项将当前的ESLint版本输出到控制台。当该选项存在时,所有其他选项都被忽略。</target>
        </trans-unit>
        <trans-unit id="65771294e9a528c9fae00635bda7f17cf756ffd2" translate="yes" xml:space="preserve">
          <source>This option outputs the help menu, displaying all of the available options. All other options are ignored when this is present.</source>
          <target state="translated">此选项输出帮助菜单,显示所有可用的选项。当有此选项时,所有其他选项都会被忽略。</target>
        </trans-unit>
        <trans-unit id="014a955006c294dba1206349cb62b15f2fa55f4b" translate="yes" xml:space="preserve">
          <source>This option prevents errors when a quoted glob pattern or &lt;code&gt;--ext&lt;/code&gt; is unmatched. This will not prevent errors when your shell can't match a glob.</source>
          <target state="translated">当引用的glob模式或 &lt;code&gt;--ext&lt;/code&gt; 不匹配时，此选项可防止错误。当您的外壳无法匹配全局时，这将无法避免错误。</target>
        </trans-unit>
        <trans-unit id="cf662cff85e17bdc6570d9489d7e4f778a8da7a6" translate="yes" xml:space="preserve">
          <source>This option prevents inline comments like &lt;code&gt;/*eslint-disable*/&lt;/code&gt; or &lt;code&gt;/*global foo*/&lt;/code&gt; from having any effect. This allows you to set an ESLint config without files modifying it. All inline config comments are ignored, e.g.:</source>
          <target state="translated">此选项可防止 &lt;code&gt;/*eslint-disable*/&lt;/code&gt; 或 &lt;code&gt;/*global foo*/&lt;/code&gt; 之类的内联注释无效。这使您可以设置ESLint配置，而无需文件对其进行修改。所有内联配置注释将被忽略，例如：</target>
        </trans-unit>
        <trans-unit id="09d5ab8aec2ed9eac65dc2e722437afabedfeeda" translate="yes" xml:space="preserve">
          <source>This option specifies a plugin to load. You can omit the prefix &lt;code&gt;eslint-plugin-&lt;/code&gt; from the plugin name.</source>
          <target state="translated">此选项指定要加载的插件。您可以从插件名称中省略前缀 &lt;code&gt;eslint-plugin-&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecc4f96fd72856887578c22e2739205f34b01a7f" translate="yes" xml:space="preserve">
          <source>This option specifies rules to be used. These rules will be merged with any rules specified with configuration files. (You can use &lt;code&gt;--no-eslintrc&lt;/code&gt; to change that behavior.) To define multiple rules, separate them using commas, or use the option multiple times. The &lt;a href=&quot;https://github.com/gkz/levn#levn--&quot;&gt;levn&lt;/a&gt; format is used for specifying the rules.</source>
          <target state="translated">此选项指定要使用的规则。这些规则将与配置文件指定的任何规则合并。（您可以使用 &lt;code&gt;--no-eslintrc&lt;/code&gt; 更改该行为。）要定义多个规则，请使用逗号将它们分开，或多次使用该选项。该&lt;a href=&quot;https://github.com/gkz/levn#levn--&quot;&gt;平LevN&lt;/a&gt;格式被用于指定的规则。</target>
        </trans-unit>
        <trans-unit id="05912c8c31018cfdeb17e60450fe0d50675682cf" translate="yes" xml:space="preserve">
          <source>This option specifies the output format for the console. Possible formats are:</source>
          <target state="translated">这个选项指定了控制台的输出格式。可能的格式有:</target>
        </trans-unit>
        <trans-unit id="38e0c8b514c59731527607b405cb80b1143de6b5" translate="yes" xml:space="preserve">
          <source>This option tells ESLint to read and lint source code from STDIN instead of from files. You can use this to pipe code to ESLint.</source>
          <target state="translated">这个选项告诉 ESLint 从 STDIN 而不是从文件中读取和打印源代码。你可以用它来管代码到 ESLint。</target>
        </trans-unit>
        <trans-unit id="eedfdca0c59f3541f1d00d88f1dc3ea700e5c34e" translate="yes" xml:space="preserve">
          <source>This option throws an error when code is piped to ESLint.</source>
          <target state="translated">当代码被传送到ESLint时,这个选项会产生一个错误。</target>
        </trans-unit>
        <trans-unit id="cc2ef91e90fb16bf6596a58b63c2929f9ada53cb" translate="yes" xml:space="preserve">
          <source>This option will start config initialization wizard. It's designed to help new users quickly create .eslintrc file by answering a few questions, choosing a popular style guide, or inspecting your source files and attempting to automatically generate a suitable configuration.</source>
          <target state="translated">这个选项将启动配置初始化向导。它的目的是帮助新用户通过回答几个问题,选择一个流行的样式指南,或者检查你的源文件并尝试自动生成一个合适的配置来快速创建.eslintrc文件。</target>
        </trans-unit>
        <trans-unit id="3538e1fc4e1c6f22a20277c44b5ede4d53eb3ec8" translate="yes" xml:space="preserve">
          <source>This produces a different outcome than defining &lt;code&gt;var x = undefined&lt;/code&gt; in the loop, as &lt;code&gt;x&lt;/code&gt; is no longer reset to &lt;code&gt;undefined&lt;/code&gt; each time through the loop.</source>
          <target state="translated">与在循环中定义 &lt;code&gt;var x = undefined&lt;/code&gt; 相比，这产生了不同的结果，因为在每次循环中 &lt;code&gt;x&lt;/code&gt; 不再重置为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24feca745e6bc0163194940d4e596f152f9004dc" translate="yes" xml:space="preserve">
          <source>This rule &lt;em&gt;does not&lt;/em&gt; report any of the following less obvious approaches to modify the prototype of builtin objects:</source>
          <target state="translated">该规则&lt;em&gt;未&lt;/em&gt;报告以下任何不太明显的方法来修改内置对象的原型：</target>
        </trans-unit>
        <trans-unit id="6e2c9a67c2f55b28f4688bb17e111a3bc3326b22" translate="yes" xml:space="preserve">
          <source>This rule accepts &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; string as an option. &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; is the same as &lt;code&gt;{ &quot;functions&quot;: false, &quot;classes&quot;: true }&lt;/code&gt;.</source>
          <target state="translated">此规则接受 &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; 字符串作为选项。 &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; 与 &lt;code&gt;{ &quot;functions&quot;: false, &quot;classes&quot;: true }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d75185fcdd7fbc883b44ec2081157a43a2a98b9" translate="yes" xml:space="preserve">
          <source>This rule accepts &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; string as an option. &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; is the same as &lt;code&gt;{ &quot;functions&quot;: false, &quot;classes&quot;: true, &quot;variables&quot;: true }&lt;/code&gt;.</source>
          <target state="translated">此规则接受 &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; 字符串作为选项。 &lt;code&gt;&quot;nofunc&quot;&lt;/code&gt; 与 &lt;code&gt;{ &quot;functions&quot;: false, &quot;classes&quot;: true, &quot;variables&quot;: true }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06fc11c1fc9b22860393f1a9540cdc85723d2901" translate="yes" xml:space="preserve">
          <source>This rule accepts a configuration object with two options:</source>
          <target state="translated">该规则接受一个有两个选项的配置对象。</target>
        </trans-unit>
        <trans-unit id="b8239df1c5225b6270e03ba8dacfb109fb9d7ed5" translate="yes" xml:space="preserve">
          <source>This rule accepts a single options argument with the following defaults:</source>
          <target state="translated">这条规则接受一个选项参数,默认值如下。</target>
        </trans-unit>
        <trans-unit id="28da8e87fba0048902246ac61ce6db8b783253e1" translate="yes" xml:space="preserve">
          <source>This rule accepts a single options argument:</source>
          <target state="translated">本规则接受一个单一的选项参数。</target>
        </trans-unit>
        <trans-unit id="036f5a811a913e4a7dcd75bca8c0f804ba9473c6" translate="yes" xml:space="preserve">
          <source>This rule accepts a string option:</source>
          <target state="translated">该规则接受一个字符串选项。</target>
        </trans-unit>
        <trans-unit id="9343f1b69e9de70215bc3d173faca7334f9fc04a" translate="yes" xml:space="preserve">
          <source>This rule accepts an &lt;code&gt;exceptions&lt;/code&gt; option, which can be used to specify a list of builtins for which extensions will be allowed.</source>
          <target state="translated">该规则接受一个 &lt;code&gt;exceptions&lt;/code&gt; 选项，该选项可用于指定允许扩展的内建列表。</target>
        </trans-unit>
        <trans-unit id="2c4f097e6d73193e66a7d59e690145b7eda43865" translate="yes" xml:space="preserve">
          <source>This rule accepts an &lt;code&gt;exceptions&lt;/code&gt; option, which can be used to specify a list of builtins for which reassignments will be allowed:</source>
          <target state="translated">该规则接受一个 &lt;code&gt;exceptions&lt;/code&gt; 选项，该选项可用于指定允许重新分配的内置列表：</target>
        </trans-unit>
        <trans-unit id="5c4d59be86b758fee018aea0cff47e0cb013368c" translate="yes" xml:space="preserve">
          <source>This rule accepts an object with its properties as</source>
          <target state="translated">该规则接受一个对象,其属性为</target>
        </trans-unit>
        <trans-unit id="2b8ef0c60ad3557c3f770d7f127c29c889a75bc2" translate="yes" xml:space="preserve">
          <source>This rule aims to bring consistency to variable initializations and declarations.</source>
          <target state="translated">这条规则旨在使变量的初始化和声明保持一致。</target>
        </trans-unit>
        <trans-unit id="fdf2ca3bdb84cdf7771de92d50733bd97f5e3a66" translate="yes" xml:space="preserve">
          <source>This rule aims to create clearer code by disallowing the bad practice of creating a label that shares a name with a variable that is in scope.</source>
          <target state="translated">这条规则旨在创建更清晰的代码,不允许创建一个与范围内的变量共享名称的标签。</target>
        </trans-unit>
        <trans-unit id="e2b4353e0847866d6010e4430a830e44cc62a277" translate="yes" xml:space="preserve">
          <source>This rule aims to detect and disallow loops that can have at most one iteration, by performing static code path analysis on loop bodies.</source>
          <target state="translated">该规则旨在通过对循环体进行静态代码路径分析,检测并禁止最多只能有一次迭代的循环。</target>
        </trans-unit>
        <trans-unit id="45ac56bf1397dedb0a834b1a656e6426031a4e1a" translate="yes" xml:space="preserve">
          <source>This rule aims to detect and disallow the following backreferences in regular expression:</source>
          <target state="translated">这条规则旨在检测和禁止正则表达式中的以下反向引用。</target>
        </trans-unit>
        <trans-unit id="b405686f1a926b33e37bdc4ba5829424c61f9a8e" translate="yes" xml:space="preserve">
          <source>This rule aims to detect some cases where the use of optional chaining doesn't prevent runtime errors. In particular, it flags optional chaining expressions in positions where short-circuiting to &lt;code&gt;undefined&lt;/code&gt; causes throwing a TypeError afterward.</source>
          <target state="translated">该规则旨在检测使用可选链接无法防止运行时错误的某些情况。特别是，它会在短路到 &lt;code&gt;undefined&lt;/code&gt; 会导致随后抛出TypeError的位置标记可选的链接表达式。</target>
        </trans-unit>
        <trans-unit id="082b8455e1ec0b9e8221bb19258d9bf25d7fc205" translate="yes" xml:space="preserve">
          <source>This rule aims to disallow async Promise executor functions.</source>
          <target state="translated">该规则旨在禁止异步Promise执行器函数。</target>
        </trans-unit>
        <trans-unit id="1ab33d4820af7bc07046f46739d6891755a40cd3" translate="yes" xml:space="preserve">
          <source>This rule aims to disallow multiple whitespace around logical expressions, conditional expressions, declarations, array elements, object properties, sequences and function parameters.</source>
          <target state="translated">这条规则旨在不允许在逻辑表达式、条件表达式、声明、数组元素、对象属性、序列和函数参数周围出现多个空格。</target>
        </trans-unit>
        <trans-unit id="5bdbb4fae36aec73469b0df2d2cfda42e720c8a1" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate assignments from &lt;code&gt;return&lt;/code&gt; statements. As such, it will warn whenever an assignment is found as part of &lt;code&gt;return&lt;/code&gt;.</source>
          <target state="translated">该规则旨在消除 &lt;code&gt;return&lt;/code&gt; 语句中的赋值。因此，只要找到作为 &lt;code&gt;return&lt;/code&gt; 一部分的赋值，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="60c130e79350c186199b9fd520e4228357e4b0c5" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate implied &lt;code&gt;eval()&lt;/code&gt; through the use of &lt;code&gt;setTimeout()&lt;/code&gt;, &lt;code&gt;setInterval()&lt;/code&gt; or &lt;code&gt;execScript()&lt;/code&gt;. As such, it will warn when either function is used with a string as the first argument.</source>
          <target state="translated">该规则旨在通过使用 &lt;code&gt;setTimeout()&lt;/code&gt; ， &lt;code&gt;setInterval()&lt;/code&gt; 或 &lt;code&gt;execScript()&lt;/code&gt; 消除隐含的 &lt;code&gt;eval()&lt;/code&gt; （）。这样，当将任一函数与字符串作为第一个参数一起使用时，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="ee8e3a04c82e7ee5427ed1829b4dacbec3fd6b59" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate shadowed variable declarations.</source>
          <target state="translated">该规则旨在消除影子变量声明。</target>
        </trans-unit>
        <trans-unit id="48d4ea04200e208a668599befd84b34f6eb5dfe7" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate the use of &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, and &lt;code&gt;Boolean&lt;/code&gt; with the &lt;code&gt;new&lt;/code&gt; operator. As such, it warns whenever it sees &lt;code&gt;new String&lt;/code&gt;, &lt;code&gt;new Number&lt;/code&gt;, or &lt;code&gt;new Boolean&lt;/code&gt;.</source>
          <target state="translated">该规则旨在消除在 &lt;code&gt;new&lt;/code&gt; 运算符中使用 &lt;code&gt;String&lt;/code&gt; ， &lt;code&gt;Number&lt;/code&gt; 和 &lt;code&gt;Boolean&lt;/code&gt; 。这样，只要看到 &lt;code&gt;new String&lt;/code&gt; ， &lt;code&gt;new Number&lt;/code&gt; 或 &lt;code&gt;new Boolean&lt;/code&gt; ，它就会发出警告。</target>
        </trans-unit>
        <trans-unit id="1ceaffe704a185e71600f586cd092634bbdc428f" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate the use of &lt;code&gt;undefined&lt;/code&gt;, and as such, generates a warning whenever it is used.</source>
          <target state="translated">此规则旨在消除对 &lt;code&gt;undefined&lt;/code&gt; 的使用，因此，每当使用undefined时都会生成警告。</target>
        </trans-unit>
        <trans-unit id="4a1e90a159c38bcad9dbea6c4a3426a3c8fe82df" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate the use of labeled statements in JavaScript. It will warn whenever a labeled statement is encountered and whenever &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; are used with a label.</source>
          <target state="translated">该规则旨在消除在JavaScript中使用带标签的语句。每当遇到带有标签的语句以及将 &lt;code&gt;break&lt;/code&gt; 或 &lt;code&gt;continue&lt;/code&gt; 与标签一起使用时，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="fbf95a07c8896cae54c5b32fab00ac676fef5a06" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate unnecessary and potentially confusing blocks at the top level of a script or within other blocks.</source>
          <target state="translated">这条规则的目的是消除脚本顶层或其他区块中不必要的和可能造成混乱的区块。</target>
        </trans-unit>
        <trans-unit id="7428d8b9c63ecd07f513e4d208a88842d2ea4291" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate unused expressions which have no effect on the state of the program.</source>
          <target state="translated">这条规则旨在消除对程序状态没有影响的未使用的表达式。</target>
        </trans-unit>
        <trans-unit id="f4592be8513a34c0ee9c31116baf895be639d00d" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate use of the &lt;code&gt;new require&lt;/code&gt; expression.</source>
          <target state="translated">该规则旨在消除对 &lt;code&gt;new require&lt;/code&gt; 表达式的使用。</target>
        </trans-unit>
        <trans-unit id="5c45676927d70f598783253e0bea435ad66234ed" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate use of void operator.</source>
          <target state="translated">这条规则旨在消除无效操作符的使用。</target>
        </trans-unit>
        <trans-unit id="48d1f57364c5256d0ae461b9199819e3a8b9a78b" translate="yes" xml:space="preserve">
          <source>This rule aims to eliminate variable declarations that initialize to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">该规则旨在消除初始化为 &lt;code&gt;undefined&lt;/code&gt; 的变量声明。</target>
        </trans-unit>
        <trans-unit id="fbcce07eac2aa6192b1ddc51290a27b70c2f04eb" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce a consistent location for an arrow function containing an implicit return.</source>
          <target state="translated">这条规则旨在为包含隐式返回的箭头函数执行一个一致的位置。</target>
        </trans-unit>
        <trans-unit id="eb1977fa84b455feda9d85eeaa544101fd9f3fbf" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce a consistent location for single-line statements.</source>
          <target state="translated">这条规则旨在对单行报表实施一致的定位。</target>
        </trans-unit>
        <trans-unit id="b867f1fa85c3f2e39f5c14f4c8ac390156b6d095" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce a consistent spacing after function names. It takes one argument. If it is &lt;code&gt;&quot;always&quot;&lt;/code&gt; then all function names must be followed by at least one space. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then there should be no spaces between the name and the parameter list. The default is &lt;code&gt;&quot;never&quot;&lt;/code&gt;.</source>
          <target state="translated">该规则旨在在函数名称后强制保持一致的间距。这需要一个论点。如果它是 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 则所有函数名都必须至少跟一个空格。如果 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则名称和参数列表之间不应有空格。默认值为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1a6efa92543cd5aa3a3a596f4883486404ece7e" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce a consistent style of comments across your codebase, specifically by either requiring or disallowing a capitalized letter as the first word character in a comment. This rule will not issue warnings when non-cased letters are used.</source>
          <target state="translated">这条规则的目的是在整个代码库中执行一致的注释风格,特别是通过要求或不允许将大写字母作为注释中的第一个单词字符。当使用非大写字母时,本规则不会发出警告。</target>
        </trans-unit>
        <trans-unit id="e791249ab8dca492c1f2141589f3eb6bc72cf3c8" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce a particular style for multiline comments.</source>
          <target state="translated">这条规则旨在为多行注释执行一种特殊的风格。</target>
        </trans-unit>
        <trans-unit id="6262c51d84ae60e80179b10f10d0c494db5871ba" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce consistent spacing before function parentheses and as such, will warn whenever whitespace doesn't match the preferences specified.</source>
          <target state="translated">这条规则的目的是在函数括号前执行一致的间距,因此,每当whitespace不符合指定的偏好时,就会发出警告。</target>
        </trans-unit>
        <trans-unit id="4b6f5f82c41166d5305feac3b424a64f24ec2de7" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce consistent spacing between rest and spread operators and their expressions. The rule also supports object rest and spread properties in ES2018:</source>
          <target state="translated">该规则旨在强制执行休止符和展开符及其表达式之间的一致间距。该规则还支持ES2018中的对象休止符和展开属性。</target>
        </trans-unit>
        <trans-unit id="4f731649e3b7f7e5efcc5565b59ac49bf339b9bd" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce consistent style of conditions which compare a variable to a literal value.</source>
          <target state="translated">这条规则的目的是执行一致的条件风格,将一个变量与一个字面值进行比较。</target>
        </trans-unit>
        <trans-unit id="2b6b2668cbac3cad09e1c9734a8a1441d9917508" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce newline consistency in member expressions. This rule prevents the use of mixed newlines around the dot in a member expression.</source>
          <target state="translated">这条规则旨在加强成员表达式中换行的一致性。这条规则防止在成员表达式中的点周围使用混合换行。</target>
        </trans-unit>
        <trans-unit id="2cffeea6a2a1e0f1c63e68ad1fed69c744d4cd42" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce spacing around a semicolon. This rule prevents the use of spaces before a semicolon in expressions.</source>
          <target state="translated">这条规则旨在强制执行分号周围的间距。这条规则防止在表达式中分号前使用空格。</target>
        </trans-unit>
        <trans-unit id="b22c8565bc9c79a0eb4dd976c541072f09cd27cb" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce spacing around the &lt;code&gt;*&lt;/code&gt; of generator functions.</source>
          <target state="translated">该规则旨在强制生成器函数 &lt;code&gt;*&lt;/code&gt; 周围的间距。</target>
        </trans-unit>
        <trans-unit id="c6c8cae0c3746b9ee1294846ab4deb169a03fb7e" translate="yes" xml:space="preserve">
          <source>This rule aims to enforce the use of &lt;code&gt;u&lt;/code&gt; flag on regular expressions.</source>
          <target state="translated">该规则旨在强制在正则表达式上使用 &lt;code&gt;u&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="b724413bbc7774cb9e7213cadf0d9d98737efe2e" translate="yes" xml:space="preserve">
          <source>This rule aims to ensure that Promises are only rejected with &lt;code&gt;Error&lt;/code&gt; objects.</source>
          <target state="translated">该规则旨在确保Promises仅被 &lt;code&gt;Error&lt;/code&gt; 对象拒绝。</target>
        </trans-unit>
        <trans-unit id="2d2be7aea466d03ae53aad72ce5fdd33c3645ba7" translate="yes" xml:space="preserve">
          <source>This rule aims to flag any empty patterns in destructured objects and arrays, and as such, will report a problem whenever one is encountered.</source>
          <target state="translated">这条规则的目的是标记解构对象和数组中的任何空模式,因此,只要遇到问题,就会报告。</target>
        </trans-unit>
        <trans-unit id="a592c858175b10142eb43e999ebc64a50dcfe373" translate="yes" xml:space="preserve">
          <source>This rule aims to flag the concatenation of 2 literals when they could be combined into a single literal. Literals can be strings or template literals.</source>
          <target state="translated">这条规则的目的是,当2个字元可以组合成一个字元时,标记出它们的连接。字符可以是字符串或模板字符。</target>
        </trans-unit>
        <trans-unit id="214fb7b3fd0b5bc6164a95a24b81675437853823" translate="yes" xml:space="preserve">
          <source>This rule aims to flag usage of &lt;code&gt;this&lt;/code&gt; keywords outside of classes or class-like objects.</source>
          <target state="translated">该规则旨在标记在类或类对象之外的 &lt;code&gt;this&lt;/code&gt; 关键字的用法。</target>
        </trans-unit>
        <trans-unit id="24c3e70e3fae7f58f9b980f59921f130b41ed78b" translate="yes" xml:space="preserve">
          <source>This rule aims to keep all variable declarations in the leading series of statements. Allowing multiple declarations helps promote maintainability and is thus allowed.</source>
          <target state="translated">这条规则的目的是让所有的变量声明都在语句的前导系列中。允许多声明有助于促进可维护性,因此允许多声明。</target>
        </trans-unit>
        <trans-unit id="71e5f7302fd24c06c3efb5405b78c57959dcce5f" translate="yes" xml:space="preserve">
          <source>This rule aims to maintain consistency around the spacing between template tag functions and their template literals.</source>
          <target state="translated">这条规则旨在保持模板标签函数与其模板字元之间间距的一致性。</target>
        </trans-unit>
        <trans-unit id="150c5f9e13764b9a65e880ca75d609ec9ecae313" translate="yes" xml:space="preserve">
          <source>This rule aims to maintain consistency around the spacing inside of square brackets, either by disallowing spaces inside of brackets between the brackets and other tokens or enforcing spaces. Brackets that are separated from the adjacent value by a new line are excepted from this rule, as this is a common pattern. Object literals that are used as the first or last element in an array are also ignored.</source>
          <target state="translated">这条规则的目的是保持方括号内间距的一致性,要么不允许括号内与其他标记之间有空格,要么强制要求有空格。与相邻值之间用新行隔开的方括号不适用本规则,因为这是一种常见的模式。作为数组中第一个或最后一个元素的对象字元也会被忽略。</target>
        </trans-unit>
        <trans-unit id="36eab5f56c34b2954c3d688b8b69b5773b3b090b" translate="yes" xml:space="preserve">
          <source>This rule aims to maintain consistency around the spacing inside of template literals.</source>
          <target state="translated">这条规则的目的是保持模板字元内部间距的一致性。</target>
        </trans-unit>
        <trans-unit id="30783eb72cfbe7fb69dfa6cec962580e1d72bd33" translate="yes" xml:space="preserve">
          <source>This rule aims to prevent a likely common performance hazard due to a lack of understanding of the semantics of &lt;code&gt;async function&lt;/code&gt;.</source>
          <target state="translated">该规则旨在防止由于对 &lt;code&gt;async function&lt;/code&gt; 的语义缺乏了解而可能造成的常见性能危害。</target>
        </trans-unit>
        <trans-unit id="5e1ef57685846ed4d51c42c899ec1fd92fafeff6" translate="yes" xml:space="preserve">
          <source>This rule aims to prevent access to uninitialized lexical bindings as well as accessing hoisted functions across case clauses.</source>
          <target state="translated">这条规则的目的是防止访问未初始化的词汇绑定,以及跨大小写子句访问被挂起的函数。</target>
        </trans-unit>
        <trans-unit id="6e5eb8f772bf314b89f7928efd7b90f261f03737" translate="yes" xml:space="preserve">
          <source>This rule aims to prevent string concatenation of directory paths in Node.js</source>
          <target state="translated">这条规则的目的是防止Node.js中的目录路径的字符串连接</target>
        </trans-unit>
        <trans-unit id="cf1c4fed65963f6d5de090064570d7556a966719" translate="yes" xml:space="preserve">
          <source>This rule aims to prevent the use of &lt;code&gt;process.exit()&lt;/code&gt; in Node.js JavaScript. As such, it warns whenever &lt;code&gt;process.exit()&lt;/code&gt; is found in code.</source>
          <target state="translated">该规则旨在防止在Node.js JavaScript中使用 &lt;code&gt;process.exit()&lt;/code&gt; 。因此，只要在代码中找到 &lt;code&gt;process.exit()&lt;/code&gt; ，它都会发出警告。</target>
        </trans-unit>
        <trans-unit id="409f6777783015e5d446da7aabb24274cd2af6bc" translate="yes" xml:space="preserve">
          <source>This rule aims to prevent unintended behavior caused by modification or reassignment of function parameters.</source>
          <target state="translated">该规则旨在防止因修改或重新分配函数参数而引起的意外行为。</target>
        </trans-unit>
        <trans-unit id="e3d17d4fab4db7dafa21d53edc13a12c25850ade" translate="yes" xml:space="preserve">
          <source>This rule aims to reduce the scrolling required when reading through your code. It will warn when the maximum amount of empty lines has been exceeded.</source>
          <target state="translated">这个规则的目的是为了减少阅读代码时所需的滚动。当超过最大空行数时,它将发出警告。</target>
        </trans-unit>
        <trans-unit id="1f6fbb75638c174bd1e172892eb514a0a34a8d3f" translate="yes" xml:space="preserve">
          <source>This rule aims to reduce the usage of variables outside of their binding context and emulate traditional block scope from other languages. This is to help newcomers to the language avoid difficult bugs with variable hoisting.</source>
          <target state="translated">这条规则旨在减少变量在其绑定上下文之外的使用,并模仿其他语言的传统块范围。这是为了帮助语言新手避免变量提升的困难bug。</target>
        </trans-unit>
        <trans-unit id="b539890ebe3260afc1fcb09ef9f086c07d001574" translate="yes" xml:space="preserve">
          <source>This rule aims to report assignments to variables or properties where all of the following are true:</source>
          <target state="translated">这条规则的目的是报告下列所有情况下对变量或属性的赋值。</target>
        </trans-unit>
        <trans-unit id="93abe223f86c93c950b6940428eb85c499aebf5e" translate="yes" xml:space="preserve">
          <source>This rule aims to report redundant &lt;code&gt;return&lt;/code&gt; statements.</source>
          <target state="translated">该规则旨在报告多余的 &lt;code&gt;return&lt;/code&gt; 单。</target>
        </trans-unit>
        <trans-unit id="d867bee8c0ef9d1755baf36ec331ce21d92cfc42" translate="yes" xml:space="preserve">
          <source>This rule aims to require &lt;code&gt;default&lt;/code&gt; case in &lt;code&gt;switch&lt;/code&gt; statements. You may optionally include a &lt;code&gt;// no default&lt;/code&gt; after the last &lt;code&gt;case&lt;/code&gt; if there is no &lt;code&gt;default&lt;/code&gt; case. The comment may be in any desired case, such as &lt;code&gt;// No Default&lt;/code&gt;.</source>
          <target state="translated">该规则旨在要求 &lt;code&gt;switch&lt;/code&gt; 语句中使用 &lt;code&gt;default&lt;/code&gt; 大小写。如果 &lt;code&gt;// no default&lt;/code&gt; &lt;code&gt;case&lt;/code&gt; 则可以选择在最后一个情况之后添加//无默认 &lt;code&gt;default&lt;/code&gt; 。注释可以是任何所需的情况，例如 &lt;code&gt;// No Default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d516ffc4d6d0f8cdf67c20a1d6d200eecd43071" translate="yes" xml:space="preserve">
          <source>This rule aims to warn when a regular string contains what looks like a template literal placeholder. It will warn when it finds a string containing the template literal placeholder (&lt;code&gt;${something}&lt;/code&gt;) that uses either &lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt; for the quotes.</source>
          <target state="translated">该规则旨在警告常规字符串何时包含看起来像模板文字占位符的字符串。当找到包含使用 &lt;code&gt;&quot;&lt;/code&gt; 或 &lt;code&gt;'&lt;/code&gt; 作为引号的模板文字占位符（ &lt;code&gt;${something}&lt;/code&gt; ）的字符串时，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="d19a577c19b7a34026fabd0b591e6e9b824b7cea" translate="yes" xml:space="preserve">
          <source>This rule allows for more fine-grained control with the following options:</source>
          <target state="translated">该规则允许通过以下选项进行更精细的控制。</target>
        </trans-unit>
        <trans-unit id="f0c570d2beef2d1b384161fc0c0365ad5078f12d" translate="yes" xml:space="preserve">
          <source>This rule allows you to specify global variable names that you don't want to use in your application.</source>
          <target state="translated">这个规则允许你指定不想在应用程序中使用的全局变量名。</target>
        </trans-unit>
        <trans-unit id="1581ab10c7b99d0115b10189be184f7f111ada69" translate="yes" xml:space="preserve">
          <source>This rule allows you to specify imports that you don't want to use in your application.</source>
          <target state="translated">这条规则允许你指定你不想在你的应用程序中使用的导入。</target>
        </trans-unit>
        <trans-unit id="223ddf28af7da49a479aa6ebab902a45d421b7b1" translate="yes" xml:space="preserve">
          <source>This rule allows you to specify modules that you don&amp;rsquo;t want to use in your application.</source>
          <target state="translated">此规则允许您指定不想在应用程序中使用的模块。</target>
        </trans-unit>
        <trans-unit id="4008a4cdc8168bfe31edc5e762d717e7f1530720" translate="yes" xml:space="preserve">
          <source>This rule also accepts an additional &lt;code&gt;exceptions&lt;/code&gt; object:</source>
          <target state="translated">此规则还接受其他 &lt;code&gt;exceptions&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="7455ce82eafb5ac293e4c9c4e5d678aaa1247cb6" translate="yes" xml:space="preserve">
          <source>This rule also disallows redeclarations of read-only global variables and assigments to read-only global variables.</source>
          <target state="translated">这条规则也不允许重新声明只读全局变量和分配给只读全局变量。</target>
        </trans-unit>
        <trans-unit id="c1110648e756cad3c8745838275d01ef12a73315" translate="yes" xml:space="preserve">
          <source>This rule also disallows redeclarations of read-only global variables and assignments to read-only global variables.</source>
          <target state="translated">这条规则也不允许重新声明只读全局变量和对只读全局变量的赋值。</target>
        </trans-unit>
        <trans-unit id="8debc519e6ab3a215045f322d1aa6bee8909f42e" translate="yes" xml:space="preserve">
          <source>This rule also disallows the use of the &lt;code&gt;RegExp&lt;/code&gt; constructor function with template literals without expressions and &lt;code&gt;String.raw&lt;/code&gt; tagged template literals without expressions.</source>
          <target state="translated">此规则还不允许将 &lt;code&gt;RegExp&lt;/code&gt; 构造函数与带有表达式的模板文字和带有表达式的 &lt;code&gt;String.raw&lt;/code&gt; 标记模板文字一起使用。</target>
        </trans-unit>
        <trans-unit id="c4110644eef0e8575815d6b80c2512c44f922c3c" translate="yes" xml:space="preserve">
          <source>This rule also disallows using these objects as constructors with the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">该规则还不允许将这些对象与 &lt;code&gt;new&lt;/code&gt; 运算符一起用作构造函数。</target>
        </trans-unit>
        <trans-unit id="ff184a54582c14a5cd4c91bd6524497a01429bba" translate="yes" xml:space="preserve">
          <source>This rule also does not disallow redeclarations of global variables. See &lt;a href=&quot;no-redeclare&quot;&gt;no-redeclare&lt;/a&gt; if you also want to disallow those redeclarations.</source>
          <target state="translated">此规则也不允许重新声明全局变量。如果您还想禁止这些重新声明，请参见&lt;a href=&quot;no-redeclare&quot;&gt;no-&lt;/a&gt; redeclare。</target>
        </trans-unit>
        <trans-unit id="3960514471b8fdf632ccf99556046a71676b91a2" translate="yes" xml:space="preserve">
          <source>This rule always checks object literals and property descriptors. By default, it also checks class declarations and class expressions.</source>
          <target state="translated">这条规则总是检查对象字面意义和属性描述符,默认情况下,它还检查类声明和类表达式。默认情况下,它也会检查类声明和类表达式。</target>
        </trans-unit>
        <trans-unit id="379f7d883e132f615627eab94e7212c5b2fb0fc7" translate="yes" xml:space="preserve">
          <source>This rule always ignores extra parentheses around the following:</source>
          <target state="translated">这条规则总是忽略下面的额外括号。</target>
        </trans-unit>
        <trans-unit id="5ecf4c66ad5afb41dab6fa8f725a959d53498d0b" translate="yes" xml:space="preserve">
          <source>This rule analyzes code statically to check whether or not the &lt;code&gt;this&lt;/code&gt; argument is changed. So, if the &lt;code&gt;this&lt;/code&gt; argument is computed in a dynamic expression, this rule cannot detect a violation.</source>
          <target state="translated">该规则静态分析代码以检查 &lt;code&gt;this&lt;/code&gt; 参数是否被更改。因此，如果在动态表达式中计算 &lt;code&gt;this&lt;/code&gt; 参数，则该规则无法检测到违规。</target>
        </trans-unit>
        <trans-unit id="6772ffa8e5405f66988ea470070e631ecb94f272" translate="yes" xml:space="preserve">
          <source>This rule applies &lt;strong&gt;only&lt;/strong&gt; in strict mode. With &lt;code&gt;&quot;parserOptions&quot;: { &quot;sourceType&quot;: &quot;module&quot; }&lt;/code&gt; in the ESLint configuration, your code is in strict mode even without a &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; directive.</source>
          <target state="translated">此规则适用于&lt;strong&gt;仅&lt;/strong&gt;在严格模式。在ESLint配置中使用 &lt;code&gt;&quot;parserOptions&quot;: { &quot;sourceType&quot;: &quot;module&quot; }&lt;/code&gt; ，即使没有 &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; 指令，您的代码也处于严格模式。</target>
        </trans-unit>
        <trans-unit id="42e1226e4e68a477056e8578613cfc2481a8ae2b" translate="yes" xml:space="preserve">
          <source>This rule applies equally to all property specifications, regardless of notation, including:</source>
          <target state="translated">这一规则同样适用于所有财产规格,无论其符号如何,包括:</target>
        </trans-unit>
        <trans-unit id="fb5fdaa6a9ac15d93f4b4688421cd1224351eea5" translate="yes" xml:space="preserve">
          <source>This rule can also detect some cases where the conditions are not identical, but the branch can never execute due to the logic of &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operators.</source>
          <target state="translated">此规则还可以检测某些条件不相同的情况，但是由于 &lt;code&gt;||&lt;/code&gt; 的逻辑，该分支永远无法执行。和 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="1dd21d49f84a0e870fa7e592ae681de4ba00ad77" translate="yes" xml:space="preserve">
          <source>This rule can also take a 2nd option, an object with any of the following keys: &lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; and &lt;code&gt;&quot;markers&quot;&lt;/code&gt;.</source>
          <target state="translated">该规则还可以采用第二个选项，即具有以下任意键的对象： &lt;code&gt;&quot;exceptions&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;markers&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47163ca8b37e69af3ca7c7a8ac2331145d34d560" translate="yes" xml:space="preserve">
          <source>This rule can be also configured to fail when function parameters are modified. Side effects on parameters can cause counter-intuitive execution flow and make errors difficult to track down.</source>
          <target state="translated">该规则还可以配置为当函数参数被修改时失效。对参数的副作用会造成反直觉的执行流程,使错误难以追踪。</target>
        </trans-unit>
        <trans-unit id="6917cbcfe667e9bff37ed7e0213d14fa5f09907e" translate="yes" xml:space="preserve">
          <source>This rule can be disabled if you do not care about the grammatical style of comments in your codebase.</source>
          <target state="translated">如果你不关心代码库中注释的语法风格,这个规则可以被禁用。</target>
        </trans-unit>
        <trans-unit id="c86802043e5a42d0c87e5c400fd976b6b831fe79" translate="yes" xml:space="preserve">
          <source>This rule can enforce or disallow parentheses when invoking a constructor with no arguments using the &lt;code&gt;new&lt;/code&gt; keyword.</source>
          <target state="translated">使用 &lt;code&gt;new&lt;/code&gt; 关键字调用不带参数的构造函数时，此规则可以强制或禁止使用括号。</target>
        </trans-unit>
        <trans-unit id="fab043e44497127c421694342c9535fb8be7bb47" translate="yes" xml:space="preserve">
          <source>This rule can enforce or disallow the use of braces around arrow function body.</source>
          <target state="translated">该规则可以强制执行或不允许使用箭头功能体周围的括号。</target>
        </trans-unit>
        <trans-unit id="04625714952245a68d2406a7a314170f11304da3" translate="yes" xml:space="preserve">
          <source>This rule can enforce or disallow the use of named function expressions.</source>
          <target state="translated">该规则可以强制或禁止使用命名的函数表达式。</target>
        </trans-unit>
        <trans-unit id="c5ec60f85149782200572716052f0148287ff833" translate="yes" xml:space="preserve">
          <source>This rule can force usage of spacing &lt;em&gt;within&lt;/em&gt; the curly brace pair according to style guides.</source>
          <target state="translated">这条规则可以强制间距的使用&lt;em&gt;范围内&lt;/em&gt;，根据风格指南的大括号对。</target>
        </trans-unit>
        <trans-unit id="5044b90d330e4e48276fdf6f62933ee1db236245" translate="yes" xml:space="preserve">
          <source>This rule can have an object literal option whose two properties have &lt;code&gt;false&lt;/code&gt; values by default.</source>
          <target state="translated">该规则可以具有对象文字选项，其默认情况下两个属性的 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a683a6bea35295324d7b11ea6967959e557b903b" translate="yes" xml:space="preserve">
          <source>This rule can help you locate potential ReferenceErrors resulting from misspellings of variable and parameter names, or accidental implicit globals (for example, from forgetting the &lt;code&gt;var&lt;/code&gt; keyword in a &lt;code&gt;for&lt;/code&gt; loop initializer).</source>
          <target state="translated">此规则可以帮助您查找由于变量和参数名称的拼写错误或意外的隐式全局变量（例如，由于忘记了 &lt;code&gt;for&lt;/code&gt; 循环初始化程序中的 &lt;code&gt;var&lt;/code&gt; 关键字）而导致的潜在ReferenceErrors 。</target>
        </trans-unit>
        <trans-unit id="0e588784adf09e4f19f68f57898d33838bc7a949" translate="yes" xml:space="preserve">
          <source>This rule can safely be turned off if your project does not care about enforcing a consistent comma style.</source>
          <target state="translated">如果你的项目不在乎执行一致的逗号风格,可以放心地关闭这个规则。</target>
        </trans-unit>
        <trans-unit id="319f5e934b81217bc9c29599abc76f7283906fd1" translate="yes" xml:space="preserve">
          <source>This rule can safely be turned off if your project does not care about enforcing a consistent style for spacing within function calls.</source>
          <target state="translated">如果你的项目不关心函数调用中的间距是否一致,那么可以放心地关闭这一规则。</target>
        </trans-unit>
        <trans-unit id="83ca1852fd5b5577b23f89ba764e415c41463351" translate="yes" xml:space="preserve">
          <source>This rule can take a string option:</source>
          <target state="translated">该规则可以采用字符串选项。</target>
        </trans-unit>
        <trans-unit id="8d302b0d1a764b90336232c3d99344f4fdc595cc" translate="yes" xml:space="preserve">
          <source>This rule cannot catch renaming the global object. Such as:</source>
          <target state="translated">这条规则不能抓住重命名全局对象。如:</target>
        </trans-unit>
        <trans-unit id="b042ff6c22a4f912b8710d8d89d471d2c64a9753" translate="yes" xml:space="preserve">
          <source>This rule checks &lt;code&gt;BinaryExpression&lt;/code&gt;, &lt;code&gt;LogicalExpression&lt;/code&gt; and &lt;code&gt;ConditionalExpression&lt;/code&gt;.</source>
          <target state="translated">此规则检查 &lt;code&gt;BinaryExpression&lt;/code&gt; ， &lt;code&gt;LogicalExpression&lt;/code&gt; 和 &lt;code&gt;ConditionalExpression&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="552d53bde16bdfdc088eecfad939881ac483a06e" translate="yes" xml:space="preserve">
          <source>This rule checks &lt;code&gt;this&lt;/code&gt;/&lt;code&gt;super&lt;/code&gt; keywords in constructors, then reports those that are before &lt;code&gt;super()&lt;/code&gt;.</source>
          <target state="translated">该规则检查构造函数中的 &lt;code&gt;this&lt;/code&gt; / &lt;code&gt;super&lt;/code&gt; 关键字，然后报告在 &lt;code&gt;super()&lt;/code&gt; 之前的那些关键字。</target>
        </trans-unit>
        <trans-unit id="140842abda10f068ecc4a16f946e3022406cf444" translate="yes" xml:space="preserve">
          <source>This rule checks &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do-while&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;for-in&lt;/code&gt; and &lt;code&gt;for-of&lt;/code&gt; loops. You can optionally disable checks for each of these constructs.</source>
          <target state="translated">该规则检查 &lt;code&gt;while&lt;/code&gt; ， &lt;code&gt;do-while&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;for-in&lt;/code&gt; 和 &lt;code&gt;for-of&lt;/code&gt; 循环。您可以选择禁用对每个构造的检查。</target>
        </trans-unit>
        <trans-unit id="aa2a356daedef6b25dafdb09f404f4d9d7c534d7" translate="yes" xml:space="preserve">
          <source>This rule checks all import declarations and verifies that all imports are first sorted by the used member syntax and then alphabetically by the first member or alias name.</source>
          <target state="translated">这条规则检查所有的导入声明,并验证所有的导入都是先按使用的成员语法排序,再按第一个成员或别名的字母顺序排序。</target>
        </trans-unit>
        <trans-unit id="6681e24fe3cd4462b2847bf209c235fc7c6d321d" translate="yes" xml:space="preserve">
          <source>This rule checks all property definitions of object expressions and verifies that all variables are sorted alphabetically.</source>
          <target state="translated">该规则检查对象表达式的所有属性定义,并验证所有变量是否按字母顺序排序。</target>
        </trans-unit>
        <trans-unit id="53d282e2a6aaf0156f34e994a7a84c5ab9a8a2e9" translate="yes" xml:space="preserve">
          <source>This rule checks all variable declaration blocks and verifies that all variables are sorted alphabetically. The default configuration of the rule is case-sensitive.</source>
          <target state="translated">该规则检查所有变量声明块,并验证所有变量是否按字母顺序排序。该规则的默认配置是区分大小写的。</target>
        </trans-unit>
        <trans-unit id="8a9d030c6f262c0eb05f86406da9ee712e2a4036" translate="yes" xml:space="preserve">
          <source>This rule checks callback functions of methods with the given names, &lt;em&gt;even if&lt;/em&gt; the object which has the method is &lt;em&gt;not&lt;/em&gt; an array.</source>
          <target state="translated">该规则检查具有给定名称的方法的回调函数，&lt;em&gt;即使&lt;/em&gt;具有该方法的对象&lt;em&gt;不是&lt;/em&gt;数组也是如此。</target>
        </trans-unit>
        <trans-unit id="811ae4bbbf023aea470d76c49787ebc765fdeff0" translate="yes" xml:space="preserve">
          <source>This rule checks setters in:</source>
          <target state="translated">此规则检查设置者在。</target>
        </trans-unit>
        <trans-unit id="d7892d555202afc91fa47f11f40a615394d6c548" translate="yes" xml:space="preserve">
          <source>This rule checks whether or not there is a valid &lt;code&gt;super()&lt;/code&gt; call.</source>
          <target state="translated">此规则检查是否存在有效的 &lt;code&gt;super()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="54a78dbb7a9691a20f2fe781235eea5e6e80464a" translate="yes" xml:space="preserve">
          <source>This rule compares code statically to check whether or not &lt;code&gt;thisArg&lt;/code&gt; is changed. So if the code about &lt;code&gt;thisArg&lt;/code&gt; is a dynamic expression, this rule cannot judge correctly.</source>
          <target state="translated">此规则静态比较代码以检查 &lt;code&gt;thisArg&lt;/code&gt; 是否已更改。因此，如果有关 &lt;code&gt;thisArg&lt;/code&gt; 的代码是动态表达式，则此规则无法正确判断。</target>
        </trans-unit>
        <trans-unit id="d720df68abbde6371ccb336cb5b04c0b024bfcbe" translate="yes" xml:space="preserve">
          <source>This rule controls spacing around colons of &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; clauses in &lt;code&gt;switch&lt;/code&gt; statements. This rule does the check only if the consecutive tokens exist on the same line.</source>
          <target state="translated">该规则控制 &lt;code&gt;switch&lt;/code&gt; 语句中 &lt;code&gt;case&lt;/code&gt; 和 &lt;code&gt;default&lt;/code&gt; 子句冒号的间距。仅当连续的令牌存在于同一行上时，此规则才进行检查。</target>
        </trans-unit>
        <trans-unit id="b65c5e0660507bcb1cbffa479d53cf9ef3130bb7" translate="yes" xml:space="preserve">
          <source>This rule disallow ternary operators when simpler alternatives exist.</source>
          <target state="translated">当存在更简单的替代方案时,这条规则不允许使用三元运算符。</target>
        </trans-unit>
        <trans-unit id="66c64e243d9c8b7f3d32d22b51791322b59152e1" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;Array&lt;/code&gt; constructors.</source>
          <target state="translated">该规则不允许使用 &lt;code&gt;Array&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="2d7b39e2d83b5189ce3fccae2add0fbca28323bd" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;Object&lt;/code&gt; constructors.</source>
          <target state="translated">该规则禁止 &lt;code&gt;Object&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="74fb7c97aec96dab204a94dea71d29bb3c9aa5ba" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;\8&lt;/code&gt; and &lt;code&gt;\9&lt;/code&gt; escape sequences in string literals.</source>
          <target state="translated">此规则不允许在字符串文字中使用 &lt;code&gt;\8&lt;/code&gt; 和 &lt;code&gt;\9&lt;/code&gt; 转义序列。</target>
        </trans-unit>
        <trans-unit id="ba886c3768e8d461d7e6410ed45538405491259c" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;continue&lt;/code&gt; statements.</source>
          <target state="translated">该规则不允许 &lt;code&gt;continue&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="28e2d778ae331adafff9240ccbc8541573b702e3" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;debugger&lt;/code&gt; statements.</source>
          <target state="translated">该规则禁止 &lt;code&gt;debugger&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="77ecd18c853e79ca97242bc0e014a3d48e6bd0bf" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;if&lt;/code&gt; statements as the only statement in &lt;code&gt;else&lt;/code&gt; blocks.</source>
          <target state="translated">该规则不允许 &lt;code&gt;if&lt;/code&gt; 语句作为 &lt;code&gt;else&lt;/code&gt; 语句中的唯一语句。</target>
        </trans-unit>
        <trans-unit id="8b411438723201d602af01f2fac9be049875e964" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, and &lt;code&gt;continue&lt;/code&gt; statements inside &lt;code&gt;finally&lt;/code&gt; blocks. It allows indirect usages, such as in &lt;code&gt;function&lt;/code&gt; or &lt;code&gt;class&lt;/code&gt; definitions.</source>
          <target state="translated">该规则不允许在 &lt;code&gt;finally&lt;/code&gt; 块内使用 &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;throw&lt;/code&gt; ， &lt;code&gt;break&lt;/code&gt; 和 &lt;code&gt;continue&lt;/code&gt; 语句。它允许间接使用，例如在 &lt;code&gt;function&lt;/code&gt; 或 &lt;code&gt;class&lt;/code&gt; 定义中。</target>
        </trans-unit>
        <trans-unit id="aa3287e2e1ed725bd09a2a525b1226c93b3ee9a9" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;var&lt;/code&gt; and &lt;code&gt;function&lt;/code&gt; declarations at the top-level script scope. This does not apply to ES and CommonJS modules since they have a module scope.</source>
          <target state="translated">此规则不允许在顶级脚本作用域中进行 &lt;code&gt;var&lt;/code&gt; 和 &lt;code&gt;function&lt;/code&gt; 声明。这不适用于ES和CommonJS模块，因为它们具有模块范围。</target>
        </trans-unit>
        <trans-unit id="0accaadfc826cb02b40dc54ab44d8ca54d788318" translate="yes" xml:space="preserve">
          <source>This rule disallows &lt;code&gt;with&lt;/code&gt; statements.</source>
          <target state="translated">该规则不允许 &lt;code&gt;with&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="d0816a4406a52dfe53dd2f26aaa6a218737e2e84" translate="yes" xml:space="preserve">
          <source>This rule disallows ambiguous assignment operators in test conditions of &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, and &lt;code&gt;do...while&lt;/code&gt; statements.</source>
          <target state="translated">在 &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; 和 &lt;code&gt;do...while&lt;/code&gt; 语句的测试条件下，该规则不允许模棱两可的赋值运算符。</target>
        </trans-unit>
        <trans-unit id="8677bdc954fa1f2eeec9ca7775cb8ed54d1de3dd" translate="yes" xml:space="preserve">
          <source>This rule disallows any function within a loop that contains unsafe references (e.g. to modified variables from the outer scope).</source>
          <target state="translated">这条规则不允许在循环中使用任何包含不安全引用的函数(例如,对外部作用域的修改变量)。</target>
        </trans-unit>
        <trans-unit id="757cbcf1d8da92458af55b0e8fce5ca71f270395" translate="yes" xml:space="preserve">
          <source>This rule disallows bitwise operators.</source>
          <target state="translated">这条规则不允许使用位运算符。</target>
        </trans-unit>
        <trans-unit id="2ba2e62f9853d2df763ddb95470409d3d5dadb00" translate="yes" xml:space="preserve">
          <source>This rule disallows calling and constructing the &lt;code&gt;Buffer()&lt;/code&gt; constructor.</source>
          <target state="translated">该规则不允许调用和构造 &lt;code&gt;Buffer()&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="d28eb4a3b01fbca8d586fe789a603987455b25ef" translate="yes" xml:space="preserve">
          <source>This rule disallows calling some &lt;code&gt;Object.prototype&lt;/code&gt; methods directly on object instances.</source>
          <target state="translated">此规则不允许直接在对象实例上调用某些 &lt;code&gt;Object.prototype&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="a65487f41b142bfc3ef920b6e2e939a9693a4060" translate="yes" xml:space="preserve">
          <source>This rule disallows calling the &lt;code&gt;Math&lt;/code&gt;, &lt;code&gt;JSON&lt;/code&gt;, &lt;code&gt;Reflect&lt;/code&gt; and &lt;code&gt;Atomics&lt;/code&gt; objects as functions.</source>
          <target state="translated">此规则不允许将 &lt;code&gt;Math&lt;/code&gt; ， &lt;code&gt;JSON&lt;/code&gt; ， &lt;code&gt;Reflect&lt;/code&gt; 和 &lt;code&gt;Atomics&lt;/code&gt; 对象称为函数。</target>
        </trans-unit>
        <trans-unit id="66519fe1823542f5bbdaf98053217a17d3a936db" translate="yes" xml:space="preserve">
          <source>This rule disallows calls to &lt;code&gt;Math.pow&lt;/code&gt; and suggests using the &lt;code&gt;**&lt;/code&gt; operator instead.</source>
          <target state="translated">该规则不允许调用 &lt;code&gt;Math.pow&lt;/code&gt; 并建议改用 &lt;code&gt;**&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="453af8a6b147940c91cf3d0f0f14518fdb22e680" translate="yes" xml:space="preserve">
          <source>This rule disallows calls to &lt;code&gt;parseInt()&lt;/code&gt; or &lt;code&gt;Number.parseInt()&lt;/code&gt; if called with two arguments: a string; and a radix option of 2 (binary), 8 (octal), or 16 (hexadecimal).</source>
          <target state="translated">如果使用两个参数调用此规则，则不允许调用 &lt;code&gt;parseInt()&lt;/code&gt; 或 &lt;code&gt;Number.parseInt()&lt;/code&gt; 。基数选项为2（二进制），8（八进制）或16（十六进制）。</target>
        </trans-unit>
        <trans-unit id="7c11518d5e9e53024b9db23ee18938c322abe1b8" translate="yes" xml:space="preserve">
          <source>This rule disallows calls to methods of the &lt;code&gt;console&lt;/code&gt; object.</source>
          <target state="translated">此规则不允许调用 &lt;code&gt;console&lt;/code&gt; 对象的方法。</target>
        </trans-unit>
        <trans-unit id="d9bf728f0d60d2ad1835867b881b066d84cc1a83" translate="yes" xml:space="preserve">
          <source>This rule disallows comments on the same line as code.</source>
          <target state="translated">这条规则不允许在代码的同一行上做注释。</target>
        </trans-unit>
        <trans-unit id="38acad92db5b12384568aaa44ce71bc077d91438" translate="yes" xml:space="preserve">
          <source>This rule disallows comparisons to 'NaN'.</source>
          <target state="translated">这条规则不允许与 &quot;NaN &quot;进行比较。</target>
        </trans-unit>
        <trans-unit id="6722af39ecadc9275de7d7950f1755fc3e1dc8a8" translate="yes" xml:space="preserve">
          <source>This rule disallows confusing multiline expressions where a newline looks like it is ending a statement, but is not.</source>
          <target state="translated">这条规则不允许混乱的多行表达式,即换行看起来像是语句的结尾,但实际上不是。</target>
        </trans-unit>
        <trans-unit id="258e15022990886cfb026d905dee4f4fa111f95d" translate="yes" xml:space="preserve">
          <source>This rule disallows constant expressions in the test condition of:</source>
          <target state="translated">这条规则不允许在以下的测试条件中使用常量表达式:。</target>
        </trans-unit>
        <trans-unit id="dd02e357765e8264ac8375fa6dba2d3a0f5d12e6" translate="yes" xml:space="preserve">
          <source>This rule disallows control characters in regular expressions.</source>
          <target state="translated">这条规则不允许在正则表达式中使用控制字符。</target>
        </trans-unit>
        <trans-unit id="d97267969958c3f085ea967e53b75c11c0399d94" translate="yes" xml:space="preserve">
          <source>This rule disallows dangling underscores in identifiers.</source>
          <target state="translated">这条规则不允许在标识符中出现下划线。</target>
        </trans-unit>
        <trans-unit id="9d7d30df17bc6a3759d4ec6107bf1a14e2331472" translate="yes" xml:space="preserve">
          <source>This rule disallows duplicate conditions in the same &lt;code&gt;if-else-if&lt;/code&gt; chain.</source>
          <target state="translated">该规则不允许在同一 &lt;code&gt;if-else-if&lt;/code&gt; 链中重复条件。</target>
        </trans-unit>
        <trans-unit id="669e6f096d22a6e0869257835432438a35f77244" translate="yes" xml:space="preserve">
          <source>This rule disallows duplicate keys in object literals.</source>
          <target state="translated">这条规则不允许在对象字面上出现重复的键。</target>
        </trans-unit>
        <trans-unit id="7636a3a8325f2f3b942229d4314412e8c9fe4000" translate="yes" xml:space="preserve">
          <source>This rule disallows duplicate parameter names in function declarations or expressions. It does not apply to arrow functions or class methods, because the parser reports the error.</source>
          <target state="translated">这条规则不允许在函数声明或表达式中出现重复的参数名。它不适用于箭头函数或类方法,因为解析器会报告错误。</target>
        </trans-unit>
        <trans-unit id="6c9a23985ede32b78311a6130f5daa7b5a0e5c70" translate="yes" xml:space="preserve">
          <source>This rule disallows duplicate test expressions in &lt;code&gt;case&lt;/code&gt; clauses of &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">该规则不允许在 &lt;code&gt;switch&lt;/code&gt; 语句的 &lt;code&gt;case&lt;/code&gt; 子句中使用重复的测试表达式。</target>
        </trans-unit>
        <trans-unit id="11a8595e3b7ff0becb4aa44a6f814356743892d7" translate="yes" xml:space="preserve">
          <source>This rule disallows empty block statements. This rule ignores block statements which contain a comment (for example, in an empty &lt;code&gt;catch&lt;/code&gt; or &lt;code&gt;finally&lt;/code&gt; block of a &lt;code&gt;try&lt;/code&gt; statement to indicate that execution should continue regardless of errors).</source>
          <target state="translated">该规则禁止空块语句。此规则将忽略包含注释的块语句（例如，在空 &lt;code&gt;catch&lt;/code&gt; 或 &lt;code&gt;try&lt;/code&gt; 语句的 &lt;code&gt;finally&lt;/code&gt; 块中，以指示无论错误如何都应继续执行）。</target>
        </trans-unit>
        <trans-unit id="2d86de4594606a9cd31df77cbc4cb951b0fa98e7" translate="yes" xml:space="preserve">
          <source>This rule disallows empty character classes in regular expressions.</source>
          <target state="translated">此规则不允许正则表达式中的空字符类。</target>
        </trans-unit>
        <trans-unit id="694dfe25fef30c26f5a1d76ea280c630e2f2d505" translate="yes" xml:space="preserve">
          <source>This rule disallows invalid regular expression strings in &lt;code&gt;RegExp&lt;/code&gt; constructors.</source>
          <target state="translated">此规则在 &lt;code&gt;RegExp&lt;/code&gt; 构造函数中不允许使用无效的正则表达式字符串。</target>
        </trans-unit>
        <trans-unit id="5714adb7d09b1a0bd6d25baa62df73e6d30886dd" translate="yes" xml:space="preserve">
          <source>This rule disallows lexical declarations (&lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt;) in &lt;code&gt;case&lt;/code&gt;/&lt;code&gt;default&lt;/code&gt; clauses. The reason is that the lexical declaration is visible in the entire switch block but it only gets initialized when it is assigned, which will only happen if the case where it is defined is reached.</source>
          <target state="translated">该规则禁止在 &lt;code&gt;case&lt;/code&gt; / &lt;code&gt;default&lt;/code&gt; 子句中进行词法声明（ &lt;code&gt;let&lt;/code&gt; ， &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;function&lt;/code&gt; 和 &lt;code&gt;class&lt;/code&gt; ）。原因是词汇声明在整个switch块中都是可见的，但是只有在分配时才被初始化，只有在达到定义的情况下才会发生。</target>
        </trans-unit>
        <trans-unit id="cba35921de730b64544fac2a4ad17c9226505407" translate="yes" xml:space="preserve">
          <source>This rule disallows mixed spaces and tabs for indentation.</source>
          <target state="translated">这条规则不允许在缩进时使用混合空格和制表符。</target>
        </trans-unit>
        <trans-unit id="3cfcfa6c88ec162c7f3d854aa2225d063abfb9d3" translate="yes" xml:space="preserve">
          <source>This rule disallows modifications to read-only global variables.</source>
          <target state="translated">这条规则不允许修改只读的全局变量。</target>
        </trans-unit>
        <trans-unit id="4703c528be92a0741324e06b06061b7ee7cce8b0" translate="yes" xml:space="preserve">
          <source>This rule disallows multiple spaces in regular expression literals.</source>
          <target state="translated">这条规则不允许在正则表达式字面中出现多个空格。</target>
        </trans-unit>
        <trans-unit id="a1a3b7b955c9a74f52aa8e49d111ff25d49f9646" translate="yes" xml:space="preserve">
          <source>This rule disallows negated conditions in either of the following:</source>
          <target state="translated">本规则不允许下列任何一种情况下的否定条件。</target>
        </trans-unit>
        <trans-unit id="2f9f8d13d0c314cf76143475b6613aba5359fcaa" translate="yes" xml:space="preserve">
          <source>This rule disallows negating the left operand in &lt;code&gt;in&lt;/code&gt; expressions.</source>
          <target state="translated">此规则不允许 &lt;code&gt;in&lt;/code&gt; 表达式中取反左操作数。</target>
        </trans-unit>
        <trans-unit id="2c4f50e13ddde727f6bc3fd3a0d4f4a043473808" translate="yes" xml:space="preserve">
          <source>This rule disallows negating the left operand of the following relational operators:</source>
          <target state="translated">这条规则不允许否定以下关系运算符的左操作数。</target>
        </trans-unit>
        <trans-unit id="740b99aac0bd437017d6910a9ae782e1f9212ca6" translate="yes" xml:space="preserve">
          <source>This rule disallows octal escape sequences in string literals.</source>
          <target state="translated">这条规则不允许在字符串文字中使用八进制转义序列。</target>
        </trans-unit>
        <trans-unit id="4bcfc1a7a7b96bced57ff984ffc562561897447d" translate="yes" xml:space="preserve">
          <source>This rule disallows reassigning &lt;code&gt;function&lt;/code&gt; declarations.</source>
          <target state="translated">此规则不允许重新分配 &lt;code&gt;function&lt;/code&gt; 声明。</target>
        </trans-unit>
        <trans-unit id="c91a55b890383ea5bda5e176f1ddc75d172d67fc" translate="yes" xml:space="preserve">
          <source>This rule disallows reassigning exceptions in &lt;code&gt;catch&lt;/code&gt; clauses.</source>
          <target state="translated">该规则不允许在 &lt;code&gt;catch&lt;/code&gt; 子句中重新分配异常。</target>
        </trans-unit>
        <trans-unit id="78996379b2829ba6163762ae3d6f36e1875d3851" translate="yes" xml:space="preserve">
          <source>This rule disallows return statements in the constructor of a class. Note that returning nothing with flow control is allowed.</source>
          <target state="translated">这条规则不允许在类的构造函数中使用返回语句。需要注意的是,允许在流控制下不返回任何内容。</target>
        </trans-unit>
        <trans-unit id="b12c264662f50e33088dca91dd93387c7211faee" translate="yes" xml:space="preserve">
          <source>This rule disallows returning values from Promise executor functions.</source>
          <target state="translated">该规则不允许从Promise执行函数中返回值。</target>
        </trans-unit>
        <trans-unit id="a4bc5ad478a3d1d339c1f1e60883a910aec68e9f" translate="yes" xml:space="preserve">
          <source>This rule disallows returning values from setters and reports &lt;code&gt;return&lt;/code&gt; statements in setter functions.</source>
          <target state="translated">此规则不允许从setter返回值，并在setter函数中报告 &lt;code&gt;return&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="12bb6672210db1555632eb13b90c2f0873ddab24" translate="yes" xml:space="preserve">
          <source>This rule disallows spacing between function identifiers and their applications.</source>
          <target state="translated">这条规则不允许函数标识符和它们的应用之间有间隔。</target>
        </trans-unit>
        <trans-unit id="21051882fd62b760206518e138fc00d233c6d34d" translate="yes" xml:space="preserve">
          <source>This rule disallows sparse array literals which have &quot;holes&quot; where commas are not preceded by elements. It does not apply to a trailing comma following the last element.</source>
          <target state="translated">这条规则不允许稀疏数组的字元有 &quot;洞&quot;,即逗号不在元素前。它不适用于最后一个元素后面的逗号。</target>
        </trans-unit>
        <trans-unit id="3e0f2dd02ecc28b0aedee1775ef621f78fda1928" translate="yes" xml:space="preserve">
          <source>This rule disallows specified (that is, user-defined) syntax.</source>
          <target state="translated">这条规则不允许使用指定(即用户定义)的语法。</target>
        </trans-unit>
        <trans-unit id="63c9ec1dc80420a119d382ef172cf2b9504b6a24" translate="yes" xml:space="preserve">
          <source>This rule disallows specified identifiers in assignments and &lt;code&gt;function&lt;/code&gt; definitions.</source>
          <target state="translated">该规则不允许在赋值和 &lt;code&gt;function&lt;/code&gt; 定义中使用指定的标识符。</target>
        </trans-unit>
        <trans-unit id="6592cd98f698c52f30414212c3df9d633af9c0bc" translate="yes" xml:space="preserve">
          <source>This rule disallows specified names from being used as exported names.</source>
          <target state="translated">此规则不允许将指定的名称作为导出的名称使用。</target>
        </trans-unit>
        <trans-unit id="1d519e0d0176940478dbf4f9f334aba740ff368c" translate="yes" xml:space="preserve">
          <source>This rule disallows strict mode directives, no matter which option is specified, if ESLint configuration specifies either of the following as &lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;parser options&lt;/a&gt;:</source>
          <target state="translated">如果ESLint配置指定以下任何一项作为&lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;解析器选项&lt;/a&gt;，则无论指定了哪个选项，此规则都不允许使用严格的模式指令：</target>
        </trans-unit>
        <trans-unit id="1a70b94ae9b04895e4ea44427ce5ab6dcdea44b0" translate="yes" xml:space="preserve">
          <source>This rule disallows strict mode directives, no matter which option is specified, in functions with non-simple parameter lists (for example, parameter lists with default parameter values) because that is a syntax error in &lt;strong&gt;ECMAScript 2016&lt;/strong&gt; and later. See the examples of the &lt;a href=&quot;#function&quot;&gt;function&lt;/a&gt; option.</source>
          <target state="translated">在具有非简单参数列表（例如，具有默认参数值的参数列表）的函数中，无论指定了哪个选项，此规则均不允许使用严格的模式指令，因为这是&lt;strong&gt;ECMAScript 2016&lt;/strong&gt;及更高版本中的语法错误。请参阅&lt;a href=&quot;#function&quot;&gt;函数&lt;/a&gt;选项的示例。</target>
        </trans-unit>
        <trans-unit id="0cdffcec301f66189ef3b947a2a41598b9b0919b" translate="yes" xml:space="preserve">
          <source>This rule disallows ternary operators.</source>
          <target state="translated">这条规则不允许使用三元运算符。</target>
        </trans-unit>
        <trans-unit id="83d62ca0b0fcaa5de115aa302c9698e355c71269" translate="yes" xml:space="preserve">
          <source>This rule disallows the following characters except where the options allow:</source>
          <target state="translated">除非选项允许,否则此规则不允许使用以下字符。</target>
        </trans-unit>
        <trans-unit id="7fe71ef647822616e6e09c0fbddfc5ff073d456e" translate="yes" xml:space="preserve">
          <source>This rule disallows the following:</source>
          <target state="translated">这条规则不允许下列行为:</target>
        </trans-unit>
        <trans-unit id="96600cfbb07e22bbb8ea489b40ead855d9df0a5e" translate="yes" xml:space="preserve">
          <source>This rule disallows the renaming of import, export, and destructured assignments to the same name.</source>
          <target state="translated">这条规则不允许将导入、导出和解构赋值重命名为同一名称。</target>
        </trans-unit>
        <trans-unit id="150e05b85ffac58a6b096426b18dc0b52ef5c458" translate="yes" xml:space="preserve">
          <source>This rule disallows the unary operators &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt;.</source>
          <target state="translated">此规则不允许一元运算符 &lt;code&gt;++&lt;/code&gt; 和 &lt;code&gt;--&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bb380ce8cb89a6cae85669483c509be1106c5e2" translate="yes" xml:space="preserve">
          <source>This rule disallows the use of &lt;code&gt;await&lt;/code&gt; within loop bodies.</source>
          <target state="translated">该规则不允许在循环体内使用 &lt;code&gt;await&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9f30ad1084b430f3c2c865d41a7bfcba40d9b5c" translate="yes" xml:space="preserve">
          <source>This rule disallows the use of the &lt;code&gt;RegExp&lt;/code&gt; constructor function with string literals as its arguments.</source>
          <target state="translated">此规则不允许使用 &lt;code&gt;RegExp&lt;/code&gt; 构造函数以字符串文字作为参数。</target>
        </trans-unit>
        <trans-unit id="63d0dd8fef754a025cbe22a509125657519bf520" translate="yes" xml:space="preserve">
          <source>This rule disallows the use of the &lt;code&gt;delete&lt;/code&gt; operator on variables.</source>
          <target state="translated">该规则不允许对变量使用 &lt;code&gt;delete&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="263c02405afaf24815681f5c6d01741fdc2585e9" translate="yes" xml:space="preserve">
          <source>This rule disallows trailing whitespace (spaces, tabs, and other Unicode whitespace characters) at the end of lines.</source>
          <target state="translated">这条规则不允许在行末出现尾部空白(空格、制表符和其他Unicode空白字符)。</target>
        </trans-unit>
        <trans-unit id="a7a7d428483dbf516170f0e6ac300fb053cdd144" translate="yes" xml:space="preserve">
          <source>This rule disallows unnecessary boolean casts.</source>
          <target state="translated">这条规则禁止不必要的布尔投。</target>
        </trans-unit>
        <trans-unit id="9db8d010e4b21df44b098f694c42f2dd4eab415c" translate="yes" xml:space="preserve">
          <source>This rule disallows unnecessary semicolons.</source>
          <target state="translated">这条规则不允许使用不必要的分号。</target>
        </trans-unit>
        <trans-unit id="d9ecfca8a1a798c2905361902e770ebaaeebbbf4" translate="yes" xml:space="preserve">
          <source>This rule disallows unnecessary usage of computed property keys.</source>
          <target state="translated">这条规则不允许不必要地使用计算的属性键。</target>
        </trans-unit>
        <trans-unit id="6a19f5c8490d1ba026ed2c643c3a4351a202d08f" translate="yes" xml:space="preserve">
          <source>This rule disallows unreachable code after &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, and &lt;code&gt;break&lt;/code&gt; statements.</source>
          <target state="translated">该规则禁止在 &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;throw&lt;/code&gt; ， &lt;code&gt;continue&lt;/code&gt; 和 &lt;code&gt;break&lt;/code&gt; 语句之后出现无法访问的代码。</target>
        </trans-unit>
        <trans-unit id="e63d4f3884bfa8fa4f27ddb207b05212dad647be" translate="yes" xml:space="preserve">
          <source>This rule disallows using multiple assignments within a single statement.</source>
          <target state="translated">这条规则不允许在单条语句中使用多个赋值。</target>
        </trans-unit>
        <trans-unit id="25bf4d847dfa2ff4961c001bb9780bc07382514c" translate="yes" xml:space="preserve">
          <source>This rule disallows whitespace around the dot or before the opening bracket before properties of objects if they are on the same line. This rule allows whitespace when the object and property are on separate lines, as it is common to add newlines to longer chains of properties:</source>
          <target state="translated">如果对象的属性在同一行,这条规则不允许在对象的点周围或在属性前的括号前留白。当对象和属性在不同的行上时,这条规则允许使用空格,因为通常在较长的属性链上添加换行。</target>
        </trans-unit>
        <trans-unit id="9e9a9afc266a9f1caa2064407f3d3f1037d9fe0e" translate="yes" xml:space="preserve">
          <source>This rule distinguishes between six kinds of variable declaration types:</source>
          <target state="translated">本规则区分了六种变量声明类型。</target>
        </trans-unit>
        <trans-unit id="cdbb91e3e92f7914450202f6764f5b77ba2a26f1" translate="yes" xml:space="preserve">
          <source>This rule does not apply in an &lt;code&gt;ArrayExpression&lt;/code&gt; or &lt;code&gt;ArrayPattern&lt;/code&gt; in either of the following cases:</source>
          <target state="translated">在以下两种情况下，此规则都不适用于 &lt;code&gt;ArrayExpression&lt;/code&gt; 或 &lt;code&gt;ArrayPattern&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="203d845e651b402a1ac8edc950ecd9464c5828ae" translate="yes" xml:space="preserve">
          <source>This rule does not apply in either of the following cases:</source>
          <target state="translated">本规则不适用于下列任何一种情况:</target>
        </trans-unit>
        <trans-unit id="3f490639d9b5cca1ffe33a6bc2bbf099505645ed" translate="yes" xml:space="preserve">
          <source>This rule does not apply to directives (which are in the form of literal string expressions such as &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; at the beginning of a script, module, or function).</source>
          <target state="translated">此规则不适用于指令（在脚本，模块或函数的开头，指令采用文字字符串表达式的形式，例如 &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="74c73caf5eb1d682942527e0676b6230a86733fc" translate="yes" xml:space="preserve">
          <source>This rule does not apply to function calls or constructor calls with the &lt;code&gt;new&lt;/code&gt; operator, because they could have &lt;em&gt;side effects&lt;/em&gt; on the state of the program.</source>
          <target state="translated">该规则不适用于使用 &lt;code&gt;new&lt;/code&gt; 运算符的函数调用或构造函数调用，因为它们可能会对程序状态&lt;em&gt;产生副作用&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="10dccdc3372172d5fbe80fac6a6517ad1abb02e8" translate="yes" xml:space="preserve">
          <source>This rule does not enforce the existence of &lt;code&gt;default&lt;/code&gt; clauses. See &lt;a href=&quot;default-case&quot;&gt;default-case&lt;/a&gt; if you also want to enforce the existence of &lt;code&gt;default&lt;/code&gt; clauses in &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">此规则不强制存在 &lt;code&gt;default&lt;/code&gt; 子句。如果您还想在 &lt;code&gt;switch&lt;/code&gt; 语句中强制使用 &lt;code&gt;default&lt;/code&gt; 子句，请参见&lt;a href=&quot;default-case&quot;&gt;default-case&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ad5609fd443c44c12476d22f78115240259d7d6" translate="yes" xml:space="preserve">
          <source>This rule does not enforce the existence of the pair for a getter or a setter. See &lt;a href=&quot;accessor-pairs&quot;&gt;accessor-pairs&lt;/a&gt; if you also want to enforce getter/setter pairs.</source>
          <target state="translated">此规则不会强制吸气剂或塞特剂存在配对。如果您还想强制执行getter / setter对，请参阅&lt;a href=&quot;accessor-pairs&quot;&gt;访问&lt;/a&gt;器对。</target>
        </trans-unit>
        <trans-unit id="854c2eba272fbba2377e73728b6e8e8a5ab8a7c8" translate="yes" xml:space="preserve">
          <source>This rule does not flag arrow functions inside of object literals. The following will &lt;em&gt;not&lt;/em&gt; warn:</source>
          <target state="translated">此规则不标记对象文字内部的箭头功能。以下内容&lt;em&gt;不会&lt;/em&gt;发出警告：</target>
        </trans-unit>
        <trans-unit id="86d082160176ea469e94732a9224b99947a25f26" translate="yes" xml:space="preserve">
          <source>This rule does not report empty character classes in the string argument of calls to the &lt;code&gt;RegExp&lt;/code&gt; constructor.</source>
          <target state="translated">此规则不会在对 &lt;code&gt;RegExp&lt;/code&gt; 构造函数的调用的字符串参数中报告空字符类。</target>
        </trans-unit>
        <trans-unit id="d27117920d1a4c3661be108f7fc91787931c11a3" translate="yes" xml:space="preserve">
          <source>This rule does not report missing JSDoc comments for classes, functions, or methods.</source>
          <target state="translated">这条规则不会报告类、函数或方法的JSDoc注释缺失。</target>
        </trans-unit>
        <trans-unit id="329e07b776a9b047bbee9ba7aeb1d91f67a6f539" translate="yes" xml:space="preserve">
          <source>This rule does nothing if no configurations are provided.</source>
          <target state="translated">如果没有提供配置,该规则就不会有任何作用。</target>
        </trans-unit>
        <trans-unit id="e35b9e62ac94294420d469553afbaf12b36ac992" translate="yes" xml:space="preserve">
          <source>This rule doesn't check spacing in the following cases:</source>
          <target state="translated">在下列情况下,该规则不检查间距。</target>
        </trans-unit>
        <trans-unit id="95b5ae67ba69fa9b6a39cae94daaff212d1d5bea" translate="yes" xml:space="preserve">
          <source>This rule doesn't inspect the content of source modules in re-export declarations. In particular, if you are re-exporting everything from another module's export, that export may include a restricted name. This rule cannot detect such cases.</source>
          <target state="translated">这条规则并不检查再导出声明中源模块的内容。特别是,如果你要重新导出另一个模块导出的所有内容,那么这个导出的内容可能包括一个受限的名称。这个规则无法检测到这种情况。</target>
        </trans-unit>
        <trans-unit id="ed6ace70b69e1bae1fbb742835f6e9d160caa326" translate="yes" xml:space="preserve">
          <source>This rule enforce consistent comma style in array literals, object literals, and variable declarations.</source>
          <target state="translated">这条规则在数组文字、对象文字和变量声明中执行一致的逗号样式。</target>
        </trans-unit>
        <trans-unit id="655472c411270872a45d50fed1d9af2d0cdb45ab" translate="yes" xml:space="preserve">
          <source>This rule enforces &lt;code&gt;default&lt;/code&gt; clauses in &lt;code&gt;switch&lt;/code&gt; statements to be last.</source>
          <target state="translated">此规则将 &lt;code&gt;switch&lt;/code&gt; 语句中的 &lt;code&gt;default&lt;/code&gt; 子句强制为last。</target>
        </trans-unit>
        <trans-unit id="5ee5487658a78c52a1bdf48fa389ad64744891d9" translate="yes" xml:space="preserve">
          <source>This rule enforces a coding style where empty lines are required or disallowed after &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;const&lt;/code&gt; statements to achieve a consistent coding style across the project.</source>
          <target state="translated">此规则强制执行一种编码样式，其中在 &lt;code&gt;var&lt;/code&gt; ， &lt;code&gt;let&lt;/code&gt; 或 &lt;code&gt;const&lt;/code&gt; 语句之后需要或不允许使用空行，以在整个项目中实现一致的编码样式。</target>
        </trans-unit>
        <trans-unit id="b3a30607c883a5da29ceb97f5b29fe497063b7f4" translate="yes" xml:space="preserve">
          <source>This rule enforces a consistent indentation style. The default style is &lt;code&gt;4 spaces&lt;/code&gt;.</source>
          <target state="translated">此规则强制使用一致的缩进样式。默认样式为 &lt;code&gt;4 spaces&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="053d9249665cec6c7a51225c330deea8b4d964fe" translate="yes" xml:space="preserve">
          <source>This rule enforces a consistent linebreak style for operators.</source>
          <target state="translated">这条规则为操作者实施了一致的断线风格。</target>
        </trans-unit>
        <trans-unit id="2dc207f7c0cdd5ec6f45d65ca43e291f84147958" translate="yes" xml:space="preserve">
          <source>This rule enforces a consistent newlines around variable declarations. This rule ignores variable declarations inside &lt;code&gt;for&lt;/code&gt; loop conditionals.</source>
          <target state="translated">该规则在变量声明周围强制使用一致的换行符。这条规则忽略内部的变量声明 &lt;code&gt;for&lt;/code&gt; 循环条件句。</target>
        </trans-unit>
        <trans-unit id="84f0362da7498b4295196fca6493ae7190176738" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum depth that blocks can be nested to reduce code complexity.</source>
          <target state="translated">这条规则规定了区块嵌套的最大深度,以降低代码的复杂性。</target>
        </trans-unit>
        <trans-unit id="4335e81d4479cc83b3771caa8aa5dff2eb5111a3" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum depth that callbacks can be nested to increase code clarity.</source>
          <target state="translated">这条规则规定了回调可以嵌套的最大深度,以提高代码的清晰度。</target>
        </trans-unit>
        <trans-unit id="4cfe7ab9be0d3cf7c4bd26c43cf9d145739278f3" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum line length to increase code readability and maintainability. The length of a line is defined as the number of Unicode characters in the line.</source>
          <target state="translated">这条规则规定了最大行长,以提高代码的可读性和可维护性。行的长度定义为行中Unicode字符的数量。</target>
        </trans-unit>
        <trans-unit id="ec9c52da0098b06b0b6d8526eddee3dc69ce058a" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum number of lines per file, in order to aid in maintainability and reduce complexity.</source>
          <target state="translated">这条规则规定了每个文件的最大行数,以帮助维护和减少复杂性。</target>
        </trans-unit>
        <trans-unit id="88b1bf1896fc036cbc88285ee2b031a3838d7474" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum number of lines per function, in order to aid in maintainability and reduce complexity.</source>
          <target state="translated">这条规则规定了每个函数的最大行数,以帮助维护和降低复杂性。</target>
        </trans-unit>
        <trans-unit id="44007589ecb2a4769b62fe380270b72abb99231d" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum number of parameters allowed in function definitions.</source>
          <target state="translated">该规则规定了函数定义中允许的最大参数数。</target>
        </trans-unit>
        <trans-unit id="101841de9bcf819f5ed87d837a7ea9eda3cccdfb" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum number of statements allowed in function blocks.</source>
          <target state="translated">这条规则规定了函数块中允许的最大语句数。</target>
        </trans-unit>
        <trans-unit id="f803854de3d5f4eb6dba4c3bad230da6dbe1073d" translate="yes" xml:space="preserve">
          <source>This rule enforces a maximum number of statements allowed per line.</source>
          <target state="translated">这条规则规定了每行允许的最大语句数。</target>
        </trans-unit>
        <trans-unit id="a08a080563efd2eec379c0e949b7107a0946a1c4" translate="yes" xml:space="preserve">
          <source>This rule enforces a minimum and/or maximum identifier length convention.</source>
          <target state="translated">该规则强制执行最小和/或最大标识符长度惯例。</target>
        </trans-unit>
        <trans-unit id="a12ae4058804b73570753830d04876debfe743a7" translate="yes" xml:space="preserve">
          <source>This rule enforces a nearly universal stylistic concern. That being said, this rule may be disabled if the constructor style is preferred.</source>
          <target state="translated">这条规则强制执行了一个几乎普遍的风格关注。也就是说,如果喜欢构造函数的风格,这条规则可以被禁用。</target>
        </trans-unit>
        <trans-unit id="f0177a6b9f488d9007a94ed192deb1738ff81f54" translate="yes" xml:space="preserve">
          <source>This rule enforces a particular type of &lt;code&gt;function&lt;/code&gt; style throughout a JavaScript file, either declarations or expressions. You can specify which you prefer in the configuration.</source>
          <target state="translated">该规则在整个JavaScript文件中强制使用一种特定类型的 &lt;code&gt;function&lt;/code&gt; 样式，即声明或表达式。您可以在配置中指定首选。</target>
        </trans-unit>
        <trans-unit id="7c62d8b9628e4222ce0de1cda323d56688f112a7" translate="yes" xml:space="preserve">
          <source>This rule enforces a style where it requires to have a getter for every property which has a setter defined.</source>
          <target state="translated">这条规则强制执行一种风格,它要求为每个定义了setter的属性设置一个getter。</target>
        </trans-unit>
        <trans-unit id="99a6b55cecafcb07815b6ce6b225784a37946856" translate="yes" xml:space="preserve">
          <source>This rule enforces at least one newline (or absence thereof) at the end of non-empty files.</source>
          <target state="translated">这条规则规定在非空文件的末尾至少要有一个新行(或没有新行)。</target>
        </trans-unit>
        <trans-unit id="c0f61cc113b072060777fa670e84b19c62761cb8" translate="yes" xml:space="preserve">
          <source>This rule enforces comparing &lt;code&gt;typeof&lt;/code&gt; expressions to valid string literals.</source>
          <target state="translated">该规则强制将 &lt;code&gt;typeof&lt;/code&gt; 表达式与有效的字符串文字进行比较。</target>
        </trans-unit>
        <trans-unit id="0d29e3bc583262a92e61b0df65bf87b587bc1245" translate="yes" xml:space="preserve">
          <source>This rule enforces consistency regarding the spaces after &lt;code&gt;words&lt;/code&gt; unary operators and after/before &lt;code&gt;nonwords&lt;/code&gt; unary operators.</source>
          <target state="translated">此规则加强了 &lt;code&gt;words&lt;/code&gt; 一元运算符之后和 &lt;code&gt;nonwords&lt;/code&gt; 单词一元运算符之后/之前的空格的一致性。</target>
        </trans-unit>
        <trans-unit id="4656356c361a67b0d4161201f70a8dde34f8fa7c" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent brace style for blocks.</source>
          <target state="translated">这条规则对区块执行一致的支架样式。</target>
        </trans-unit>
        <trans-unit id="c589693beabba7d58bd598910df76da4e9f1a779" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent empty line padding within blocks.</source>
          <target state="translated">这条规则强制执行块内一致的空行填充。</target>
        </trans-unit>
        <trans-unit id="595c763433e0de8f23a77358f7e01894f4ce51bb" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent line breaks inside braces of object literals or destructuring assignments.</source>
          <target state="translated">这条规则强制要求在对象字面或破坏性赋值的括号内进行一致的换行。</target>
        </trans-unit>
        <trans-unit id="dc1f9f7d14d39f611230db49960fece58ed587b8" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent line breaks inside parentheses of function parameters or arguments.</source>
          <target state="translated">这条规则在函数参数或参数的括号内强制执行一致的换行。</target>
        </trans-unit>
        <trans-unit id="cc3d5861ecc6d2c3252bac7222aab4bc2ecdea0d" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent line endings independent of operating system, VCS, or editor used across your codebase.</source>
          <target state="translated">这条规则强制执行一致的行尾,不受操作系统、VCS或整个代码库使用的编辑器的影响。</target>
        </trans-unit>
        <trans-unit id="3e6898a2307cfec7882640002567d17f03515ad3" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent position of line comments. Block comments are not affected by this rule. By default, this rule ignores comments starting with the following words: &lt;code&gt;eslint&lt;/code&gt;, &lt;code&gt;jshint&lt;/code&gt;, &lt;code&gt;jslint&lt;/code&gt;, &lt;code&gt;istanbul&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, &lt;code&gt;exported&lt;/code&gt;, &lt;code&gt;jscs&lt;/code&gt;, &lt;code&gt;falls through&lt;/code&gt;.</source>
          <target state="translated">该规则强制行注释的位置一致。阻止注释不受此规则影响。默认情况下，此规则将忽略以以下单词开头的注释： &lt;code&gt;eslint&lt;/code&gt; ， &lt;code&gt;jshint&lt;/code&gt; ， &lt;code&gt;jslint&lt;/code&gt; ， &lt;code&gt;istanbul&lt;/code&gt; ， &lt;code&gt;global&lt;/code&gt; ， &lt;code&gt;exported&lt;/code&gt; ， &lt;code&gt;jscs&lt;/code&gt; ， &lt;code&gt;falls through&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa1bfb395be1412e1e3fa7972879d7328ba00c44" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing around keywords and keyword-like tokens: &lt;code&gt;as&lt;/code&gt; (in module declarations), &lt;code&gt;async&lt;/code&gt; (of async functions), &lt;code&gt;await&lt;/code&gt; (of await expressions), &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;case&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, &lt;code&gt;debugger&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;export&lt;/code&gt;, &lt;code&gt;extends&lt;/code&gt;, &lt;code&gt;finally&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;from&lt;/code&gt; (in module declarations), &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt; (of getters), &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;, &lt;code&gt;instanceof&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;of&lt;/code&gt; (in for-of statements), &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt; (of setters), &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;super&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, &lt;code&gt;this&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;typeof&lt;/code&gt;, &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;void&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, and &lt;code&gt;yield&lt;/code&gt;. This rule is designed carefully not to conflict with other spacing rules: it does not apply to spacing where other rules report problems.</source>
          <target state="translated">该规则在关键字和类似关键字的标记周围强制保持一致的间距： &lt;code&gt;as&lt;/code&gt; （在模块声明中）， &lt;code&gt;async&lt;/code&gt; （在异步函数中）， &lt;code&gt;await&lt;/code&gt; （在await表达式中）， &lt;code&gt;break&lt;/code&gt; ， &lt;code&gt;case&lt;/code&gt; ， &lt;code&gt;catch&lt;/code&gt; ， &lt;code&gt;class&lt;/code&gt; ， &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;continue&lt;/code&gt; ， &lt;code&gt;debugger&lt;/code&gt; ， &lt;code&gt;default&lt;/code&gt; ， &lt;code&gt;delete&lt;/code&gt; ， &lt;code&gt;do&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;export&lt;/code&gt; ， &lt;code&gt;extends&lt;/code&gt; ， &lt;code&gt;finally&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;from&lt;/code&gt; （模块声明）， &lt;code&gt;function&lt;/code&gt; ， &lt;code&gt;get&lt;/code&gt; （getters）， &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;import&lt;/code&gt; ， &lt;code&gt;in&lt;/code&gt; ， &lt;code&gt;instanceof&lt;/code&gt; ， &lt;code&gt;let&lt;/code&gt; ， &lt;code&gt;new&lt;/code&gt; ， &lt;code&gt;of&lt;/code&gt; （在for-of语句中）， &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;set&lt;/code&gt; （of setters）， &lt;code&gt;static&lt;/code&gt; ， &lt;code&gt;super&lt;/code&gt; ， &lt;code&gt;switch&lt;/code&gt; ， &lt;code&gt;this&lt;/code&gt; ， &lt;code&gt;throw&lt;/code&gt; ， &lt;code&gt;try&lt;/code&gt; ， &lt;code&gt;typeof&lt;/code&gt; ， &lt;code&gt;var&lt;/code&gt; ， &lt;code&gt;void&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; ， &lt;code&gt;with&lt;/code&gt; 和 &lt;code&gt;yield&lt;/code&gt; 。该规则经过精心设计，不会与其他间距规则冲突：它不适用于其他规则报告问题的间距。</target>
        </trans-unit>
        <trans-unit id="98df4bc6fa104f9bb3d9aa58f24400b4ed78fce2" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing before and after commas in variable declarations, array literals, object literals, function parameters, and sequences.</source>
          <target state="translated">这条规则强制要求变量声明、数组文字、对象文字、函数参数和序列中逗号前后的间距一致。</target>
        </trans-unit>
        <trans-unit id="0169481661b301da11577f8f07f4bc6e9cbac18b" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing between keys and values in object literal properties. In the case of long lines, it is acceptable to add a new line wherever whitespace is allowed.</source>
          <target state="translated">这条规则规定了对象文字属性中键和值之间的间距一致。在长行的情况下,只要允许有空白,就可以添加新行。</target>
        </trans-unit>
        <trans-unit id="c0f2ba86bbe27d84065f88fc40130b40923b309e" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing inside an open block token and the next token on the same line. This rule also enforces consistent spacing inside a close block token and previous token on the same line.</source>
          <target state="translated">这条规则要求打开的区块标记和同一行的下一个标记之间的间距一致。这条规则还规定了近似块标记和同一行上一个标记的间距一致。</target>
        </trans-unit>
        <trans-unit id="2f13854e69ca2deaa522c152aaf7bd0dd0713f47" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing inside array brackets.</source>
          <target state="translated">这条规则强制要求数组括号内的间距一致。</target>
        </trans-unit>
        <trans-unit id="0c0ca4e3390fdfbc5ad1498ea9a232e65edb5d66" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing inside braces of object literals, destructuring assignments, and import/export specifiers.</source>
          <target state="translated">这条规则强制执行对象字元、拆解赋值和导入/导出指定符的括号内的一致间距。</target>
        </trans-unit>
        <trans-unit id="6d043db0d1826295530e2f014a6d61ea421394ad" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent spacing inside computed property brackets.</source>
          <target state="translated">这条规则强制要求计算出的属性括号内的间距一致。</target>
        </trans-unit>
        <trans-unit id="96c5f8bf2c347a8c17cc9bc88351a31a250cb1dd" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent use of semicolons.</source>
          <target state="translated">这条规则规定了分号的一致使用。</target>
        </trans-unit>
        <trans-unit id="a59f3959596b245a73594e6be551df468e1d0019" translate="yes" xml:space="preserve">
          <source>This rule enforces consistent use of trailing commas in object and array literals.</source>
          <target state="translated">这条规则强制要求在对象和数组字面中一致使用尾部的逗号。</target>
        </trans-unit>
        <trans-unit id="531a02291fc6e588ae212b7576b1a3890024effd" translate="yes" xml:space="preserve">
          <source>This rule enforces default parameters to be the last of parameters.</source>
          <target state="translated">该规则强制将默认参数作为参数的最后一个。</target>
        </trans-unit>
        <trans-unit id="5db3f9b56f56672b9a3126a59dac7ef87bdfc4fe" translate="yes" xml:space="preserve">
          <source>This rule enforces line breaks after opening and before closing array brackets.</source>
          <target state="translated">这条规则在打开和关闭数组括号之后和之前强制执行换行。</target>
        </trans-unit>
        <trans-unit id="f2049a535cbc77192d993c38ebac6ec6175c4b5c" translate="yes" xml:space="preserve">
          <source>This rule enforces line breaks between arguments of a function call.</source>
          <target state="translated">这条规则强制执行函数调用的参数之间的换行。</target>
        </trans-unit>
        <trans-unit id="e7ac9021b1e0472e05a8e46e25b3636bcc7f0646" translate="yes" xml:space="preserve">
          <source>This rule enforces line breaks between array elements.</source>
          <target state="translated">这条规则强制执行数组元素之间的换行。</target>
        </trans-unit>
        <trans-unit id="1c720f0d003344dc99467c044b35512793450286" translate="yes" xml:space="preserve">
          <source>This rule enforces or disallows newlines between operands of a ternary expression. Note: The location of the operators is not enforced by this rule. Please see the &lt;a href=&quot;operator-linebreak&quot;&gt;operator-linebreak&lt;/a&gt; rule if you are interested in enforcing the location of the operators themselves.</source>
          <target state="translated">该规则强制或禁止三元表达式的操作数之间的换行符。注意：操作员的位置不受此规则约束。如果您对加强操作员本身的位置感兴趣，请参阅&lt;a href=&quot;operator-linebreak&quot;&gt;操作员换行&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="2ded924af44d0b97c4617f94c5ba97a87c7c8944" translate="yes" xml:space="preserve">
          <source>This rule enforces parentheses around arrow function parameters regardless of arity. For example:</source>
          <target state="translated">这条规则在箭头函数参数周围执行括号,而不考虑arity。例如:</target>
        </trans-unit>
        <trans-unit id="bebe56e90b7c07354c98262213dfb3c803ec31b1" translate="yes" xml:space="preserve">
          <source>This rule enforces spacing around the &lt;code&gt;*&lt;/code&gt; in &lt;code&gt;yield*&lt;/code&gt; expressions.</source>
          <target state="translated">此规则在 &lt;code&gt;yield*&lt;/code&gt; 表达式中的 &lt;code&gt;*&lt;/code&gt; 周围强制使用空格。</target>
        </trans-unit>
        <trans-unit id="9f888babe47c50998c63a687a9d3e9e18eafd108" translate="yes" xml:space="preserve">
          <source>This rule enforces spacing around the colon in object literal properties. It can verify each property individually, or it can ensure horizontal alignment of adjacent properties in an object literal.</source>
          <target state="translated">这条规则强制执行对象文字属性中的冒号周围的间距,它可以单独验证每个属性,也可以确保对象文字属性中相邻属性的水平对齐。它可以单独验证每个属性,也可以确保对象文字中相邻属性的水平对齐。</target>
        </trans-unit>
        <trans-unit id="032e73c7fd1f30f1da604d9f589b30f380222412" translate="yes" xml:space="preserve">
          <source>This rule enforces that a return statement is present in property getters.</source>
          <target state="translated">这条规则强制要求在属性获取者中出现返回语句。</target>
        </trans-unit>
        <trans-unit id="ac3a9a1350618d263f65980c27c390928db1e9dd" translate="yes" xml:space="preserve">
          <source>This rule enforces that each file may contain only a particular number of classes and no more.</source>
          <target state="translated">这条规则规定,每个文件只能包含特定数量的类,不能再多。</target>
        </trans-unit>
        <trans-unit id="83dae79a63a7a63a48d5387400e7d317de58b017" translate="yes" xml:space="preserve">
          <source>This rule enforces that the &lt;code&gt;*&lt;/code&gt; is either placed next to the &lt;code&gt;function&lt;/code&gt; keyword or the name of the function. The single option for this rule is a string specifying the placement of the asterisk. For this option you may pass &lt;code&gt;&quot;start&quot;&lt;/code&gt;, &lt;code&gt;&quot;middle&quot;&lt;/code&gt; or &lt;code&gt;&quot;end&quot;&lt;/code&gt;. The default is &lt;code&gt;&quot;end&quot;&lt;/code&gt;.</source>
          <target state="translated">此规则强制将 &lt;code&gt;*&lt;/code&gt; 放在 &lt;code&gt;function&lt;/code&gt; 关键字旁边或函数名称旁边。此规则的单个选项是一个字符串，指定星号的位置。对于此选项，您可以传递 &lt;code&gt;&quot;start&quot;&lt;/code&gt; ， &lt;code&gt;&quot;middle&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 。默认值为 &lt;code&gt;&quot;end&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f15cceed3a9ebc006b6f485b6d91b005b23ab944" translate="yes" xml:space="preserve">
          <source>This rule enforces the consistent use of either backticks, double, or single quotes.</source>
          <target state="translated">这条规则强制要求一致使用反引号、双引号或单引号。</target>
        </trans-unit>
        <trans-unit id="47d291563f5b8d3c1ba3c39163caddeb773cd7b3" translate="yes" xml:space="preserve">
          <source>This rule enforces the consistent use of either double or single quotes in JSX attributes.</source>
          <target state="translated">这条规则强制要求在JSX属性中一致使用双引号或单引号。</target>
        </trans-unit>
        <trans-unit id="73b3cab87eff32518800f9ef2b81d5e396da2f90" translate="yes" xml:space="preserve">
          <source>This rule enforces the use of the shorthand syntax. This applies to all methods (including generators) defined in object literals and any properties defined where the key name matches name of the assigned variable.</source>
          <target state="translated">这条规则强制使用速记语法。这适用于所有在对象字面定义的方法(包括生成器),以及键名与分配的变量名相匹配的任何属性。</target>
        </trans-unit>
        <trans-unit id="63e2f1f4c345ee69dced3e8e0c71c623687568b8" translate="yes" xml:space="preserve">
          <source>This rule enforces two things about variables with the designated alias names for &lt;code&gt;this&lt;/code&gt;:</source>
          <target state="translated">此规则强制执行关于与指定的别名变量两件事情 &lt;code&gt;this&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="444d122a441ceea0b5a30eb297b723a3dc9f2033" translate="yes" xml:space="preserve">
          <source>This rule enforces usage of &lt;code&gt;return&lt;/code&gt; statement in callbacks of array's methods.</source>
          <target state="translated">该规则在数组方法的回调中强制使用 &lt;code&gt;return&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="2d6e06e2a0cfada8309f5c13c8d158db7197aa95" translate="yes" xml:space="preserve">
          <source>This rule enforces usage of &lt;code&gt;return&lt;/code&gt; statement in callbacks of array's methods. Additionally, it may also enforce the &lt;code&gt;forEach&lt;/code&gt; array method callback to &lt;strong&gt;not&lt;/strong&gt; return a value by using the &lt;code&gt;checkForEach&lt;/code&gt; option.</source>
          <target state="translated">该规则在数组方法的回调中强制使用 &lt;code&gt;return&lt;/code&gt; 语句。此外，它还可以通过使用 &lt;code&gt;checkForEach&lt;/code&gt; 选项来强制 &lt;code&gt;forEach&lt;/code&gt; 数组方法回调&lt;strong&gt;不&lt;/strong&gt;返回值。</target>
        </trans-unit>
        <trans-unit id="238a9c1c0e3410b1c4e383ab10436cb8d26cbdb6" translate="yes" xml:space="preserve">
          <source>This rule enforces valid and consistent JSDoc comments. It reports any of the following problems:</source>
          <target state="translated">该规则强制执行有效和一致的JSDoc注释。它报告以下任何问题。</target>
        </trans-unit>
        <trans-unit id="f9d94e7695ada004444bae53825e6f669fd2ed50" translate="yes" xml:space="preserve">
          <source>This rule enforces variables to be declared either together or separately per function ( for &lt;code&gt;var&lt;/code&gt;) or block (for &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;) scope.</source>
          <target state="translated">此规则强制将变量声明为每个函数（对于 &lt;code&gt;var&lt;/code&gt; ）或块（对于 &lt;code&gt;let&lt;/code&gt; 和 &lt;code&gt;const&lt;/code&gt; ）范围一起声明或单独声明。</target>
        </trans-unit>
        <trans-unit id="18088de0cb810de950375f85f0f09acbaedce552" translate="yes" xml:space="preserve">
          <source>This rule expects that when you're using the callback pattern in Node.js you'll handle the error.</source>
          <target state="translated">这个规则期望当你在Node.js中使用回调模式时,你会处理错误。</target>
        </trans-unit>
        <trans-unit id="6d08f014599aaed138d7f0531cd956e14e5af7cf" translate="yes" xml:space="preserve">
          <source>This rule finds callback functions of the following methods, then checks usage of &lt;code&gt;return&lt;/code&gt; statement.</source>
          <target state="translated">该规则查找以下方法的回调函数，然后检查 &lt;code&gt;return&lt;/code&gt; 语句的用法。</target>
        </trans-unit>
        <trans-unit id="4de015a86c0eeee96f453acb9aeb00629487256a" translate="yes" xml:space="preserve">
          <source>This rule finds references which are inside of loop conditions, then checks the variables of those references are modified in the loop.</source>
          <target state="translated">这条规则可以找到在循环条件中的引用,然后检查这些引用的变量在循环中被修改。</target>
        </trans-unit>
        <trans-unit id="7dc5c04a1930c4229e3eef900e2e631d84f34e42" translate="yes" xml:space="preserve">
          <source>This rule flags class constructors that can be safely removed without changing how the class works.</source>
          <target state="translated">这条规则标志着可以在不改变类的工作方式的情况下安全地删除类构造函数。</target>
        </trans-unit>
        <trans-unit id="5d5510d64b1f962d0f715e17acd7b01cdebbb284" translate="yes" xml:space="preserve">
          <source>This rule flags escapes that can be safely removed without changing behavior.</source>
          <target state="translated">这条规则标志着可以在不改变行为的情况下安全删除的逃逸。</target>
        </trans-unit>
        <trans-unit id="66515436d54a3d03c45800e5600fc63e0c805a04" translate="yes" xml:space="preserve">
          <source>This rule forbids the use of the comma operator, with the following exceptions:</source>
          <target state="translated">这条规则禁止使用逗号运算符,但下列情况除外:</target>
        </trans-unit>
        <trans-unit id="752f68160927832b760bc0ca5bf1d1b31d519295" translate="yes" xml:space="preserve">
          <source>This rule generates warnings for generator functions that do not have the &lt;code&gt;yield&lt;/code&gt; keyword.</source>
          <target state="translated">此规则为不具有 &lt;code&gt;yield&lt;/code&gt; 关键字的生成器函数生成警告。</target>
        </trans-unit>
        <trans-unit id="6e4baecfeba69217207c672a7f95b5eb1b32dcb2" translate="yes" xml:space="preserve">
          <source>This rule has 2 options that are boolean value.</source>
          <target state="translated">这个规则有2个选项,都是布尔值。</target>
        </trans-unit>
        <trans-unit id="9b81f45580b708ab900651667d8eac17ae2aa1cd" translate="yes" xml:space="preserve">
          <source>This rule has 2 options.</source>
          <target state="translated">这条规则有2个选项。</target>
        </trans-unit>
        <trans-unit id="7f7a94f6d0862ad4b541f1ff11cc9e1506acb8a8" translate="yes" xml:space="preserve">
          <source>This rule has a mixed option:</source>
          <target state="translated">这个规则有一个混合选项。</target>
        </trans-unit>
        <trans-unit id="3a7b49741fdcbe3227285811a2145a024828ed28" translate="yes" xml:space="preserve">
          <source>This rule has a number or object option:</source>
          <target state="translated">该规则有一个数字或对象选项。</target>
        </trans-unit>
        <trans-unit id="bfc55f7c0830b8711cbf13cef899c1b734bd5933" translate="yes" xml:space="preserve">
          <source>This rule has a numeric option (defaulted to 1) to specify the maximum number of classes.</source>
          <target state="translated">该规则有一个数字选项(默认为1)来指定最大的类数。</target>
        </trans-unit>
        <trans-unit id="29f7ddc0e749392a26648c1cf72ed0933f445be7" translate="yes" xml:space="preserve">
          <source>This rule has a shorthand integer option for the &lt;code&gt;&quot;min&quot;&lt;/code&gt; object property.</source>
          <target state="translated">该规则具有 &lt;code&gt;&quot;min&quot;&lt;/code&gt; 对象属性的简写整数选项。</target>
        </trans-unit>
        <trans-unit id="f9b6b247413500cee0268031ac478171284bc1b7" translate="yes" xml:space="preserve">
          <source>This rule has a single object option:</source>
          <target state="translated">该规则有一个单一对象选项。</target>
        </trans-unit>
        <trans-unit id="f9cb8fc4aaf5947c491c622a34259791e36e56d8" translate="yes" xml:space="preserve">
          <source>This rule has a single option, which can either be a string or an object.</source>
          <target state="translated">这个规则只有一个选项,可以是字符串,也可以是对象。</target>
        </trans-unit>
        <trans-unit id="5f94691796172a25ab21a96670f27f9ad03de85a" translate="yes" xml:space="preserve">
          <source>This rule has a single string option:</source>
          <target state="translated">该规则有一个单字符串选项。</target>
        </trans-unit>
        <trans-unit id="b3f7cb49c96b78d738e5570bbaae300561ede995" translate="yes" xml:space="preserve">
          <source>This rule has a string option and an object one.</source>
          <target state="translated">这个规则有一个字符串选项和一个对象选项。</target>
        </trans-unit>
        <trans-unit id="1fdc543f514a45dc35817bd8a107deb20cf43858" translate="yes" xml:space="preserve">
          <source>This rule has a string option and an object option.</source>
          <target state="translated">该规则有一个字符串选项和一个对象选项。</target>
        </trans-unit>
        <trans-unit id="15009c7b86491fb0cd854bebe75b417b85f21787" translate="yes" xml:space="preserve">
          <source>This rule has a string option for the specified regular expression.</source>
          <target state="translated">该规则对指定的正则表达式有一个字符串选项。</target>
        </trans-unit>
        <trans-unit id="3c64e7764e3d5fce1031ea6e079ec3342bb3b38a" translate="yes" xml:space="preserve">
          <source>This rule has a string option or an object option:</source>
          <target state="translated">该规则有一个字符串选项或一个对象选项。</target>
        </trans-unit>
        <trans-unit id="ba5afeca0a5893f9126d0d008ac1c37a6ccd0f8d" translate="yes" xml:space="preserve">
          <source>This rule has a string option, which can have one of the following values:</source>
          <target state="translated">该规则有一个字符串选项,它可以有以下值之一:</target>
        </trans-unit>
        <trans-unit id="852afef235e861cde6503e9fa9f341ee032a0b57" translate="yes" xml:space="preserve">
          <source>This rule has a string option.</source>
          <target state="translated">该规则有一个字符串选项。</target>
        </trans-unit>
        <trans-unit id="f5bd93375b385530c03b8ebc157178d8d07f7212" translate="yes" xml:space="preserve">
          <source>This rule has a string option:</source>
          <target state="translated">该规则有一个字符串选项。</target>
        </trans-unit>
        <trans-unit id="9c39a55484c4b84bf6dfa5df5e0e53f6063212c9" translate="yes" xml:space="preserve">
          <source>This rule has an object option for an exception:</source>
          <target state="translated">这个规则有一个异常的对象选项。</target>
        </trans-unit>
        <trans-unit id="52dd73bca8602fba0879d49a6e8fc4a2cfb3821b" translate="yes" xml:space="preserve">
          <source>This rule has an object option for exceptions to the &lt;code&gt;&quot;all&quot;&lt;/code&gt; option:</source>
          <target state="translated">该规则有一个对象选项，用于 &lt;code&gt;&quot;all&quot;&lt;/code&gt; 选项的例外情况：</target>
        </trans-unit>
        <trans-unit id="e70c4892dedde6b638785b6c88fe4c0813afdf96" translate="yes" xml:space="preserve">
          <source>This rule has an object option for exceptions to the &lt;code&gt;&quot;always&quot;&lt;/code&gt; option:</source>
          <target state="translated">该规则有一个对象选项，用于 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 选项的例外情况：</target>
        </trans-unit>
        <trans-unit id="7201dcd2e7cfa36533a6e34dae235405ca73e080" translate="yes" xml:space="preserve">
          <source>This rule has an object option for exceptions to the &lt;code&gt;&quot;never&quot;&lt;/code&gt; option:</source>
          <target state="translated">对于 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 选项的例外情况，此规则具有一个对象选项：</target>
        </trans-unit>
        <trans-unit id="d9872be98d82a692df5d8a8b8578d4914805a58a" translate="yes" xml:space="preserve">
          <source>This rule has an object option for exceptions:</source>
          <target state="translated">这个规则有一个异常的对象选项。</target>
        </trans-unit>
        <trans-unit id="82ca18776efa4316bf999374dc6d7106d4b5ba56" translate="yes" xml:space="preserve">
          <source>This rule has an object option with one option:</source>
          <target state="translated">本规则有一个对象选项,有一个选项。</target>
        </trans-unit>
        <trans-unit id="6ad6fdc3c949dd957b61f76666484f847e8b4368" translate="yes" xml:space="preserve">
          <source>This rule has an object option, with one option:</source>
          <target state="translated">本规则有一个对象选项,有一个选项。</target>
        </trans-unit>
        <trans-unit id="2f67df2ade235e8d54be3342c40546c77988ff4f" translate="yes" xml:space="preserve">
          <source>This rule has an object option, with two options:</source>
          <target state="translated">这个规则有一个对象选项,有两个选项。</target>
        </trans-unit>
        <trans-unit id="3094029c213ee787cfbe2e63d5f34735e9fe502c" translate="yes" xml:space="preserve">
          <source>This rule has an object option.</source>
          <target state="translated">该规则有一个对象选项。</target>
        </trans-unit>
        <trans-unit id="951c0d8fb3776e9f35405a503895842b0d422784" translate="yes" xml:space="preserve">
          <source>This rule has an object option:</source>
          <target state="translated">该规则有一个对象选项。</target>
        </trans-unit>
        <trans-unit id="c4ac31fc845cd8efe5c02ca16935752b2eb4fa4a" translate="yes" xml:space="preserve">
          <source>This rule has an option to allow indirect calls to &lt;code&gt;eval&lt;/code&gt;. Indirect calls to &lt;code&gt;eval&lt;/code&gt; are less dangerous than direct calls to &lt;code&gt;eval&lt;/code&gt; because they cannot dynamically change the scope. Because of this, they also will not negatively impact performance to the degree of direct &lt;code&gt;eval&lt;/code&gt;.</source>
          <target state="translated">该规则具有允许间接调用 &lt;code&gt;eval&lt;/code&gt; 的选项。间接调用 &lt;code&gt;eval&lt;/code&gt; 比直接调用 &lt;code&gt;eval&lt;/code&gt; 危险性小，因为它们不能动态更改范围。因此，它们也不会在直接 &lt;code&gt;eval&lt;/code&gt; 的程度上对性能产生负面影响。</target>
        </trans-unit>
        <trans-unit id="ee5a0d877127f98f1f5190f49af0d5113ae140d3" translate="yes" xml:space="preserve">
          <source>This rule has an option to allow specific kinds of functions to be empty.</source>
          <target state="translated">该规则有一个选项,允许特定种类的函数为空。</target>
        </trans-unit>
        <trans-unit id="eebb9041a17bd060368074b436e2c4a3d528bc12" translate="yes" xml:space="preserve">
          <source>This rule has an option.</source>
          <target state="translated">这个规则有一个选项。</target>
        </trans-unit>
        <trans-unit id="48d1c64d5495a2e99f48e9b8332c8af255d85c2a" translate="yes" xml:space="preserve">
          <source>This rule has an optional object option &lt;code&gt;{ allowAtRootLevel: &amp;lt;boolean&amp;gt; }&lt;/code&gt;, which determines whether synchronous methods should be allowed at the top level of a file, outside of any functions. This option defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">该规则具有一个可选的对象选项 &lt;code&gt;{ allowAtRootLevel: &amp;lt;boolean&amp;gt; }&lt;/code&gt; ，该选项确定是否应在文件的顶层（任何函数之外）允许同步方法。此选项默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21b2603628fe9561d676f4902dfce22ac9deade7" translate="yes" xml:space="preserve">
          <source>This rule has an optional object option with the following properties:</source>
          <target state="translated">该规则有一个可选的对象选项,其属性如下。</target>
        </trans-unit>
        <trans-unit id="ced4a1d3ef7275e0df77c251e97ec06ab62b39ab" translate="yes" xml:space="preserve">
          <source>This rule has an options object literal:</source>
          <target state="translated">这条规则有一个选项对象的字面意思。</target>
        </trans-unit>
        <trans-unit id="d9e92c652ae0840e9d1a6ab9c4c2631180da05c6" translate="yes" xml:space="preserve">
          <source>This rule has built-in exceptions:</source>
          <target state="translated">这个规则有内置的例外。</target>
        </trans-unit>
        <trans-unit id="c1e899620d824db9c2de90df8c792d8a678b20fc" translate="yes" xml:space="preserve">
          <source>This rule has either a string option:</source>
          <target state="translated">该规则有任一字符串选项。</target>
        </trans-unit>
        <trans-unit id="7e832ec5ce4347a640ccca3da541ebc06af56135" translate="yes" xml:space="preserve">
          <source>This rule has one option which has either &lt;code&gt;&quot;never&quot;&lt;/code&gt; or &lt;code&gt;&quot;always&quot;&lt;/code&gt; as value.</source>
          <target state="translated">此规则有一个选项，其值为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="434cbdea5a2d3771f19900bdf532b25ee6bd3b10" translate="yes" xml:space="preserve">
          <source>This rule has one option whose value can be set to &lt;code&gt;&quot;never&quot;&lt;/code&gt; or &lt;code&gt;&quot;always&quot;&lt;/code&gt;</source>
          <target state="translated">此规则有一个选项，其值可以设置为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;always&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e5d3d8052d8d8f494f663e4fb4fa9e96f6509e0" translate="yes" xml:space="preserve">
          <source>This rule has one option, which can be a string option or an object option.</source>
          <target state="translated">这个规则有一个选项,可以是字符串选项,也可以是对象选项。</target>
        </trans-unit>
        <trans-unit id="c84c9d52925fbbf04d2847bdd02983266eac0f1d" translate="yes" xml:space="preserve">
          <source>This rule has one option. It can either be a string or an object:</source>
          <target state="translated">这条规则有一个选项。它可以是一个字符串,也可以是一个对象。</target>
        </trans-unit>
        <trans-unit id="a85aef4180d14627deda0141bfb2f37cfa9a170f" translate="yes" xml:space="preserve">
          <source>This rule has one or more string options:</source>
          <target state="translated">该规则有一个或多个字符串选项。</target>
        </trans-unit>
        <trans-unit id="fa0560ddbbfcd6c046cd8119f1d093fe1c4a3718" translate="yes" xml:space="preserve">
          <source>This rule has the following options that can be specified using an object:</source>
          <target state="translated">该规则有以下选项,可以使用对象来指定。</target>
        </trans-unit>
        <trans-unit id="933ccefd6eed6377af78dae0c80dd63dbc4981c2" translate="yes" xml:space="preserve">
          <source>This rule has the option to check properties as well.</source>
          <target state="translated">这个规则也有检查属性的选项。</target>
        </trans-unit>
        <trans-unit id="2f294aaaed5cde3a854dbd6565794eac6902bde5" translate="yes" xml:space="preserve">
          <source>This rule has three main options and one override option to allow some coercions as required.</source>
          <target state="translated">这条规则有三个主要选项和一个覆盖选项,允许根据需要进行一些强制。</target>
        </trans-unit>
        <trans-unit id="22b034be676241194793c07307d1b26caa995f81" translate="yes" xml:space="preserve">
          <source>This rule has three options:</source>
          <target state="translated">这条规则有三个选项。</target>
        </trans-unit>
        <trans-unit id="9cc484d75588b2521efd443a2fa950909fe567b8" translate="yes" xml:space="preserve">
          <source>This rule has two options, a string option and an object option.</source>
          <target state="translated">这个规则有两个选项,一个是字符串选项,一个是对象选项。</target>
        </trans-unit>
        <trans-unit id="ef2597dc19602c27c52cc77ab6d3826ed3d8ce10" translate="yes" xml:space="preserve">
          <source>This rule has two options, the first one can be a string option or an object option. The second one is an object option, it can allow exceptions.</source>
          <target state="translated">这个规则有两个选项,第一个可以是字符串选项,也可以是对象选项。第二个是对象选项,它可以允许异常。</target>
        </trans-unit>
        <trans-unit id="3f09a11456419342935fa96016d35ce66287c118" translate="yes" xml:space="preserve">
          <source>This rule has two options: a string value &lt;code&gt;&quot;always&quot;&lt;/code&gt; or &lt;code&gt;&quot;never&quot;&lt;/code&gt; which determines whether capitalization of the first word of a comment should be required or forbidden, and optionally an object containing more configuration parameters for the rule.</source>
          <target state="translated">该规则有两个选项：一个字符串值 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;never&quot;&lt;/code&gt; ，用于确定是否需要注释的第一个单词的大小写，以及一个可选对象，该对象包含该规则的更多配置参数。</target>
        </trans-unit>
        <trans-unit id="6367078058884cd6b4661c5442744bde3aaff215" translate="yes" xml:space="preserve">
          <source>This rule ignores spacing which is between &lt;code&gt;=&amp;gt;&lt;/code&gt; and a block. The spacing is handled by the &lt;code&gt;arrow-spacing&lt;/code&gt; rule.</source>
          <target state="translated">该规则忽略 &lt;code&gt;=&amp;gt;&lt;/code&gt; 和一个块之间的间距。间距由 &lt;code&gt;arrow-spacing&lt;/code&gt; 规则处理。</target>
        </trans-unit>
        <trans-unit id="bca8e8fa94e09adcc696245c84caed302ba5ef5c" translate="yes" xml:space="preserve">
          <source>This rule ignores spacing which is between a keyword and a block. The spacing is handled by the &lt;code&gt;keyword-spacing&lt;/code&gt; rule.</source>
          <target state="translated">该规则忽略关键字和块之间的间距。间距由 &lt;code&gt;keyword-spacing&lt;/code&gt; 规则处理。</target>
        </trans-unit>
        <trans-unit id="c18caf633548258ef7489062bbf1f1475035babe" translate="yes" xml:space="preserve">
          <source>This rule improves readability by enforcing lines between class members. It will not check empty lines before the first member and after the last member, since that is already taken care of by padded-blocks.</source>
          <target state="translated">这条规则通过强制执行类成员之间的行数来提高可读性,它不会检查第一个成员之前和最后一个成员之后的空行,因为这一点已经由padded-blocks处理了。它不会检查第一个成员之前和最后一个成员之后的空行,因为padded-blocks已经考虑到了这一点。</target>
        </trans-unit>
        <trans-unit id="067b8ac57f499b00eba00dc6f549da0fd318c726" translate="yes" xml:space="preserve">
          <source>This rule is a formatting preference and not following it won't negatively affect the quality of your code. If alphabetizing imports isn't a part of your coding standards, then you can leave this rule disabled.</source>
          <target state="translated">这条规则是一种格式偏好,不遵守它不会对你的代码质量产生负面影响。如果导入的字母化不是你的编码标准的一部分,那么你可以不使用这个规则。</target>
        </trans-unit>
        <trans-unit id="e13e8e8f93d2b3049fe0f98cc456cd8cb2c4c64a" translate="yes" xml:space="preserve">
          <source>This rule is a formatting preference and not following it won't negatively affect the quality of your code. If you alphabetizing variables isn't a part of your coding standards, then you can leave this rule off.</source>
          <target state="translated">这条规则是一种格式上的偏好,不遵守它不会对你的代码质量产生负面影响。如果你把变量字母化不是你编码标准的一部分,那么你可以不遵守这条规则。</target>
        </trans-unit>
        <trans-unit id="589d22b24ac15f05d684de370251ff86eab8c597" translate="yes" xml:space="preserve">
          <source>This rule is aimed at avoiding the unnecessary use of &lt;code&gt;bind()&lt;/code&gt; and as such will warn whenever an immediately-invoked function expression (IIFE) is using &lt;code&gt;bind()&lt;/code&gt; and doesn't have an appropriate &lt;code&gt;this&lt;/code&gt; value. This rule won't flag usage of &lt;code&gt;bind()&lt;/code&gt; that includes function argument binding.</source>
          <target state="translated">该规则旨在避免不必要地使用 &lt;code&gt;bind()&lt;/code&gt; ，因此，当立即调用的函数表达式（IIFE）使用 &lt;code&gt;bind()&lt;/code&gt; 并且没有适当的 &lt;code&gt;this&lt;/code&gt; 值时，它将发出警告。此规则不会标记包括函数参数绑定的 &lt;code&gt;bind()&lt;/code&gt; 的用法。</target>
        </trans-unit>
        <trans-unit id="8c70a2058d99c61f3b70746e9dac986e9a136f11" translate="yes" xml:space="preserve">
          <source>This rule is aimed at catching debugging code that should be removed and popup UI elements that should be replaced with less obtrusive, custom UIs. As such, it will warn when it encounters &lt;code&gt;alert&lt;/code&gt;, &lt;code&gt;prompt&lt;/code&gt;, and &lt;code&gt;confirm&lt;/code&gt; function calls which are not shadowed.</source>
          <target state="translated">此规则旨在捕获应删除的调试代码以及​​应使用不太引人注目的自定义UI替换的弹出UI元素。因此，当它遇到它将警告 &lt;code&gt;alert&lt;/code&gt; ， &lt;code&gt;prompt&lt;/code&gt; 和 &lt;code&gt;confirm&lt;/code&gt; 未阴影函数调用。</target>
        </trans-unit>
        <trans-unit id="7bfb43ff0ffe91b368f21ec10e26cfeec43d8538" translate="yes" xml:space="preserve">
          <source>This rule is aimed at catching invalid whitespace that is not a normal tab and space. Some of these characters may cause issues in modern browsers and others will be a debugging issue to spot.</source>
          <target state="translated">这条规则旨在捕捉无效的空白字符,这些字符不是正常的制表符和空格。其中一些字符可能会在现代浏览器中造成问题,而其他字符则是调试时需要发现的问题。</target>
        </trans-unit>
        <trans-unit id="2b634aa750ad9f7595ca71468ab4512d71e09bfc" translate="yes" xml:space="preserve">
          <source>This rule is aimed at detecting trailing commas in object literals. As such, it will warn whenever it encounters a trailing comma in an object literal.</source>
          <target state="translated">这条规则旨在检测对象文字中的尾部逗号。因此,每当遇到对象文字中的尾部逗号时,它就会发出警告。</target>
        </trans-unit>
        <trans-unit id="0e496dc6e0f7ecfc75282e800ae44b3ae2d20c0d" translate="yes" xml:space="preserve">
          <source>This rule is aimed at discouraging the use of &lt;code&gt;var&lt;/code&gt; and encouraging the use of &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; instead.</source>
          <target state="translated">此规则旨在阻止使用 &lt;code&gt;var&lt;/code&gt; 并鼓励使用 &lt;code&gt;const&lt;/code&gt; 或 &lt;code&gt;let&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="00e21f6b57d9223f33575e542a471d9015cb9895" translate="yes" xml:space="preserve">
          <source>This rule is aimed at discouraging the use of deprecated and sub-optimal code by disallowing the use of &lt;code&gt;arguments.caller&lt;/code&gt; and &lt;code&gt;arguments.callee&lt;/code&gt;. As such, it will warn when &lt;code&gt;arguments.caller&lt;/code&gt; and &lt;code&gt;arguments.callee&lt;/code&gt; are used.</source>
          <target state="translated">该规则旨在通过禁止使用 &lt;code&gt;arguments.caller&lt;/code&gt; 和 &lt;code&gt;arguments.callee&lt;/code&gt; 来阻止使用不建议使用的代码和次优代码。这样，它将在使用 &lt;code&gt;arguments.caller&lt;/code&gt; 和 &lt;code&gt;arguments.callee&lt;/code&gt; 时发出警告。</target>
        </trans-unit>
        <trans-unit id="fe7262e8e2a0e5d4d25bce407d84657aee9eb731" translate="yes" xml:space="preserve">
          <source>This rule is aimed at discouraging use of &lt;code&gt;process.env&lt;/code&gt; to avoid global dependencies. As such, it will warn whenever &lt;code&gt;process.env&lt;/code&gt; is used.</source>
          <target state="translated">该规则旨在防止使用 &lt;code&gt;process.env&lt;/code&gt; 以避免全局依赖性。因此，每当使用 &lt;code&gt;process.env&lt;/code&gt; 时，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="f38d792a703ef9f9d6a2c68f162519eb9d489852" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating empty functions. A function will not be considered a problem if it contains a comment.</source>
          <target state="translated">这条规则旨在消除空函数。如果一个函数包含注释,则不会被认为是一个问题。</target>
        </trans-unit>
        <trans-unit id="86048b16ce9efe6aadc447d1d1b69731d9850583" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating floating decimal points and will warn whenever a numeric value has a decimal point but is missing a number either before or after it.</source>
          <target state="translated">这条规则旨在消除浮动小数点,每当一个数值有小数点,但在小数点之前或之后缺少一个数字时,它就会发出警告。</target>
        </trans-unit>
        <trans-unit id="90246f5410906fbbdf2c6d7d267c1e4dfbcaa5ca" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating self assignments.</source>
          <target state="translated">这条规则旨在消除自我分配。</target>
        </trans-unit>
        <trans-unit id="a3d8ced820518227c86205cea7adabb8486f2d45" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating the type-unsafe equality operators.</source>
          <target state="translated">这条规则旨在消除类型不安全的平等运算符。</target>
        </trans-unit>
        <trans-unit id="fd707f1fffe20cc0665053f189146e3082919d53" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating the use of ECMAScript 3 keywords and reserved words as object literal keys. As such, it warns whenever an object key would throw an error in an ECMAScript 3 environment.</source>
          <target state="translated">这条规则旨在消除使用ECMAScript 3关键字和保留字作为对象文字键。因此,每当对象键在ECMAScript 3环境中出现错误时,它就会发出警告。</target>
        </trans-unit>
        <trans-unit id="6434e742662f465f2c60b84d6a9c01051ea938fa" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating unintentional fallthrough of one case to the other. As such, it flags any fallthrough scenarios that are not marked by a comment.</source>
          <target state="translated">这项规则旨在消除一种情况无意中转入另一种情况。因此,它标示出任何未加注释的穿插情况。</target>
        </trans-unit>
        <trans-unit id="260f2ba586d82725492f572de36fdd4d41d3910e" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating unnecessary labels.</source>
          <target state="translated">这一规则旨在消除不必要的标签。</target>
        </trans-unit>
        <trans-unit id="0366528693bff0ad732982de9702f6b7dc5b293b" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating unused labels.</source>
          <target state="translated">这一规则旨在消除未使用的标签。</target>
        </trans-unit>
        <trans-unit id="da7670eae14b162ea5192dc3ed57dd1608fe62e7" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating unused variables, functions, and function parameters.</source>
          <target state="translated">该规则旨在消除未使用的变量、函数和函数参数。</target>
        </trans-unit>
        <trans-unit id="02bb0cbd9de5fa8c51ec9d1f97a95452b48e34b0" translate="yes" xml:space="preserve">
          <source>This rule is aimed at eliminating variables that have multiple declarations in the same scope.</source>
          <target state="translated">这条规则旨在消除在同一范围内有多个声明的变量。</target>
        </trans-unit>
        <trans-unit id="0c05a6e7ca0dd2fe40b3e1941f532a5f5cf4d6e3" translate="yes" xml:space="preserve">
          <source>This rule is aimed at enforcing or eliminating variable initializations during declaration. For example, in the following code, &lt;code&gt;foo&lt;/code&gt; is initialized during declaration, while &lt;code&gt;bar&lt;/code&gt; is not.</source>
          <target state="translated">该规则旨在在声明期间强制或消除变量初始化。例如，在以下代码中，在声明期间初始化 &lt;code&gt;foo&lt;/code&gt; ，而没有初始化 &lt;code&gt;bar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2ec8ee15749e494465ab5b3d55baddc7a16afc4" translate="yes" xml:space="preserve">
          <source>This rule is aimed at ensuring that callbacks used outside of the main function block are always part-of or immediately preceding a &lt;code&gt;return&lt;/code&gt; statement. This rule decides what is a callback based on the name of the function being called.</source>
          <target state="translated">该规则旨在确保在主功能块外部使用的回调始终是 &lt;code&gt;return&lt;/code&gt; 语句的一部分或在return语句之前。该规则根据被调用函数的名称决定什么是回调。</target>
        </trans-unit>
        <trans-unit id="12fc4b12ff585b13beb05aab3ac97951c7198eea" translate="yes" xml:space="preserve">
          <source>This rule is aimed at ensuring there are spaces around infix operators.</source>
          <target state="translated">这条规则旨在确保infix操作符周围有空格。</target>
        </trans-unit>
        <trans-unit id="1a6387de3f3ea21e60c53ce842aae405efa22996" translate="yes" xml:space="preserve">
          <source>This rule is aimed at flagging variables that are declared using &lt;code&gt;let&lt;/code&gt; keyword, but never reassigned after the initial assignment.</source>
          <target state="translated">此规则旨在标记使用 &lt;code&gt;let&lt;/code&gt; 关键字声明的变量，但在初始赋值后永远不要重新赋值。</target>
        </trans-unit>
        <trans-unit id="6b1b96aa79a5746db0fddb54574f83ee098c170e" translate="yes" xml:space="preserve">
          <source>This rule is aimed at highlighting an unnecessary block of code following an &lt;code&gt;if&lt;/code&gt; containing a return statement. As such, it will warn when it encounters an &lt;code&gt;else&lt;/code&gt; following a chain of &lt;code&gt;if&lt;/code&gt;s, all of them containing a &lt;code&gt;return&lt;/code&gt; statement.</source>
          <target state="translated">该规则旨在突出显示 &lt;code&gt;if&lt;/code&gt; 包含return语句后的不必要的代码块。因此，当它遇到它将警告 &lt;code&gt;else&lt;/code&gt; 的连锁以下 &lt;code&gt;if&lt;/code&gt; S，个个包含 &lt;code&gt;return&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="3c125b77e2053954512dc9e0da4e09f674ed2077" translate="yes" xml:space="preserve">
          <source>This rule is aimed at highlighting possible typos and unexpected behavior in regular expressions which may arise from the use of empty character classes.</source>
          <target state="translated">这条规则旨在强调正则表达式中可能出现的排版错误和意外行为,这些错误和行为可能来自于空字符类的使用。</target>
        </trans-unit>
        <trans-unit id="8ce587787a5ec83605d0f57bdc841448b1724a7b" translate="yes" xml:space="preserve">
          <source>This rule is aimed at maintaining code consistency and improving code readability by encouraging use of the dot notation style whenever possible. As such, it will warn when it encounters an unnecessary use of square-bracket notation.</source>
          <target state="translated">这条规则旨在保持代码的一致性,并通过鼓励尽可能地使用点符号风格来提高代码的可读性。因此,当遇到不必要地使用方括号符号时,它将发出警告。</target>
        </trans-unit>
        <trans-unit id="c85cc225ae8c575af3c27684f51644a15dda6865" translate="yes" xml:space="preserve">
          <source>This rule is aimed at maintaining consistency and convention by disallowing constructor calls using the &lt;code&gt;new&lt;/code&gt; keyword that do not assign the resulting object to a variable.</source>
          <target state="translated">该规则旨在通过禁止使用不会将结果对象分配给变量的 &lt;code&gt;new&lt;/code&gt; 关键字进行构造函数调用来保持一致性和约定。</target>
        </trans-unit>
        <trans-unit id="c7f71b3a65be1d97541f2cb6028ca8b6ae826b20" translate="yes" xml:space="preserve">
          <source>This rule is aimed at maintaining consistency when throwing exception by disallowing to throw literals and other expressions which cannot possibly be an &lt;code&gt;Error&lt;/code&gt; object.</source>
          <target state="translated">此规则旨在通过禁止抛出可能不是 &lt;code&gt;Error&lt;/code&gt; 对象的文字和其他表达式来保持抛出异常时的一致性。</target>
        </trans-unit>
        <trans-unit id="cf77e127446fb71dc0302c64127a5f9f047d3592" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing bugs and increasing code clarity by ensuring that block statements are wrapped in curly braces. It will warn when it encounters blocks that omit curly braces.</source>
          <target state="translated">这条规则旨在通过确保块语句用大括号包装来防止错误和提高代码的清晰度。当遇到省略大括号的块时,它将发出警告。</target>
        </trans-unit>
        <trans-unit id="cc37a51fc3258e58ad6da2d081ed52d7b851fde8" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing errors that may arise from using the &lt;code&gt;__iterator__&lt;/code&gt; property, which is not implemented in several browsers. As such, it will warn whenever it encounters the &lt;code&gt;__iterator__&lt;/code&gt; property.</source>
          <target state="translated">该规则旨在防止由于使用 &lt;code&gt;__iterator__&lt;/code&gt; 属性而引起的错误，该属性未在多个浏览器中实现。这样，它会在遇到 &lt;code&gt;__iterator__&lt;/code&gt; 属性时发出警告。</target>
        </trans-unit>
        <trans-unit id="560f64042b31848c0a3db333f58d5b5e2588f733" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing potentially dangerous, unnecessary, and slow code by disallowing the use of the &lt;code&gt;eval()&lt;/code&gt; function. As such, it will warn whenever the &lt;code&gt;eval()&lt;/code&gt; function is used.</source>
          <target state="translated">该规则旨在通过禁止使用 &lt;code&gt;eval()&lt;/code&gt; 函数来防止潜在的危险，不必要和缓慢的代码。这样，无论何时使用 &lt;code&gt;eval()&lt;/code&gt; 函数，它都会发出警告。</target>
        </trans-unit>
        <trans-unit id="adf6b0cc4e71f7b12f6baf1f1a566a2f78392cec" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing synchronous methods from being called in Node.js. It looks specifically for the method suffix &quot;&lt;code&gt;Sync&lt;/code&gt;&quot; (as is the convention with Node.js operations).</source>
          <target state="translated">该规则旨在防止在Node.js中调用同步方法。它专门查找方法后缀&amp;ldquo; &lt;code&gt;Sync&lt;/code&gt; &amp;rdquo;（与Node.js操作的约定相同）。</target>
        </trans-unit>
        <trans-unit id="7540a244d6ef1b536d6c740e84f0c2c02785e878" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing the accidental calling of &lt;code&gt;Symbol&lt;/code&gt; with the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">此规则旨在防止意外调用 &lt;code&gt;Symbol&lt;/code&gt; 与 &lt;code&gt;new&lt;/code&gt; 运营商。</target>
        </trans-unit>
        <trans-unit id="469e6a65fc6fd9de2ace34ba2b94e32a85a0ef7a" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing the unintended conversion of a string to a number of a different base than intended or at preventing the redundant &lt;code&gt;10&lt;/code&gt; radix if targeting modern environments only.</source>
          <target state="translated">该规则的目的是防止将字符串意外地转换为与预期不同的其他基数，或者如果仅针对现代环境，则防止冗余的 &lt;code&gt;10&lt;/code&gt; 基数。</target>
        </trans-unit>
        <trans-unit id="6082ce56b65e7772c7b223e16d93e46ed1bfc67b" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing the use of multiline strings.</source>
          <target state="translated">该规则旨在防止使用多行字符串。</target>
        </trans-unit>
        <trans-unit id="33ac7800e287b6d68c276fe31df41e059176f86f" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing unexpected behavior in your program that may arise from a bug in IE 8 and earlier, in which the catch clause parameter can leak into outer scopes. This rule will warn whenever it encounters a catch clause parameter that has the same name as a variable in an outer scope.</source>
          <target state="translated">这条规则的目的是为了防止在你的程序中出现意外的行为,这可能是由于IE 8和更早的版本中的一个bug,其中catch子句参数可能会泄漏到外部作用域中。每当遇到与外部作用域中的变量同名的捕捉子句参数时,这条规则就会发出警告。</target>
        </trans-unit>
        <trans-unit id="0dbcaf4d0178e2b4de696fe49e174ac1200fc1b2" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing unexpected behavior that could arise from using a &lt;code&gt;for in&lt;/code&gt; loop without filtering the results in the loop. As such, it will warn when &lt;code&gt;for in&lt;/code&gt; loops do not filter their results with an &lt;code&gt;if&lt;/code&gt; statement.</source>
          <target state="translated">该规则旨在防止 &lt;code&gt;for in&lt;/code&gt; 不过滤循环结果的情况下使用for in循环而引起的意外行为。这样，它将在 &lt;code&gt;for in&lt;/code&gt; 循环中不使用 &lt;code&gt;if&lt;/code&gt; 语句过滤其结果时发出警告。</target>
        </trans-unit>
        <trans-unit id="3a93186eda9fc1ad5e2354c3aec9e22d64effac0" translate="yes" xml:space="preserve">
          <source>This rule is aimed at preventing unnecessary &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; directives. As such, it will warn when it encounters a &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; directive when already in strict mode.</source>
          <target state="translated">该规则旨在防止不必要的 &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; 指令。因此，当遇到 &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; 时，它将发出警告；在严格模式下的指令。</target>
        </trans-unit>
        <trans-unit id="c75e9e0cef10da3b36758024c4ec0b7ab60d8f61" translate="yes" xml:space="preserve">
          <source>This rule is aimed at reducing code complexity by capping the amount of cyclomatic complexity allowed in a program. As such, it will warn when the cyclomatic complexity crosses the configured threshold (default is &lt;code&gt;20&lt;/code&gt;).</source>
          <target state="translated">该规则旨在通过限制程序中允许的循环复杂度来降低代码复杂度。这样，它将在圈复杂度超过配置的阈值（默认值为 &lt;code&gt;20&lt;/code&gt; ）时发出警告。</target>
        </trans-unit>
        <trans-unit id="1c9f3c003687bf5a00c45b29be601579c09529f1" translate="yes" xml:space="preserve">
          <source>This rule is aimed at using named capture groups instead of numbered capture groups in regular expressions.</source>
          <target state="translated">这条规则的目的是在正则表达式中使用命名的捕获组而不是编号的捕获组。</target>
        </trans-unit>
        <trans-unit id="e1f61236848decd6fad6b255224627f388f6ef5c" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag &lt;code&gt;this&lt;/code&gt;/&lt;code&gt;super&lt;/code&gt; keywords before &lt;code&gt;super()&lt;/code&gt; callings.</source>
          <target state="translated">此规则旨在在 &lt;code&gt;super()&lt;/code&gt; 调用之前标记 &lt;code&gt;this&lt;/code&gt; / &lt;code&gt;super&lt;/code&gt; 关键字。</target>
        </trans-unit>
        <trans-unit id="fbd358e28b01f27d52086bb527fafa61ec2d4f7f" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag class methods that do not use &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">此规则旨在标记不使用 &lt;code&gt;this&lt;/code&gt; 方法的类方法。</target>
        </trans-unit>
        <trans-unit id="ac40186b374e32b3e6012af68a62e2a5191a2d9a" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag invalid/missing &lt;code&gt;super()&lt;/code&gt; calls.</source>
          <target state="translated">此规则旨在标记无效/丢失的 &lt;code&gt;super()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="6c08c2c004052d5b64c974234aa06e6ffef93c62" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag modifying variables of class declarations.</source>
          <target state="translated">这条规则旨在标记修改类声明的变量。</target>
        </trans-unit>
        <trans-unit id="dfd92744aabb4c3693bd07a9fcd78bf0a22ec16d" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag modifying variables that are declared using &lt;code&gt;const&lt;/code&gt; keyword.</source>
          <target state="translated">此规则旨在标记使用 &lt;code&gt;const&lt;/code&gt; 关键字声明的修改变量。</target>
        </trans-unit>
        <trans-unit id="a3a1f9f8c364f4f2d38823a7ebaee68b7abc1d93" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag shorter notations for the type conversion, then suggest a more self-explanatory notation.</source>
          <target state="translated">这条规则的目的是为类型转换标记更短的符号,然后建议一个更自明的符号。</target>
        </trans-unit>
        <trans-unit id="0d483a51695be57209456cbf5a63f44d433ef8fd" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag the use of duplicate names in class members.</source>
          <target state="translated">这条规则旨在标记类成员中使用重复的名称。</target>
        </trans-unit>
        <trans-unit id="d6c794328277f0807f621415f1e32fb251dcbe5a" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag usage of &lt;code&gt;+&lt;/code&gt; operators with strings.</source>
          <target state="translated">此规则旨在标记字符串使用 &lt;code&gt;+&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="d2bbde19885322cbe4381d2e3df23145f2d289db" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag usage of &lt;code&gt;Function.prototype.apply()&lt;/code&gt; in situations where spread syntax could be used instead.</source>
          <target state="translated">该规则旨在在可以代替使用扩展语法的情况下标记 &lt;code&gt;Function.prototype.apply()&lt;/code&gt; 的用法。</target>
        </trans-unit>
        <trans-unit id="47e32fce626be8349cd3c6fcec19ea5364150d08" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag usage of &lt;code&gt;Function.prototype.call()&lt;/code&gt; and &lt;code&gt;Function.prototype.apply()&lt;/code&gt; that can be replaced with the normal function invocation.</source>
          <target state="translated">此规则旨在标记 &lt;code&gt;Function.prototype.call()&lt;/code&gt; 和 &lt;code&gt;Function.prototype.apply()&lt;/code&gt; 的用法，这些用法可以用普通的函数调用来替换。</target>
        </trans-unit>
        <trans-unit id="a84766a7048c8e0f0348021406e6bb0ead824db7" translate="yes" xml:space="preserve">
          <source>This rule is aimed to flag usage of &lt;code&gt;arguments&lt;/code&gt; variables.</source>
          <target state="translated">此规则旨在标记 &lt;code&gt;arguments&lt;/code&gt; 变量的使用。</target>
        </trans-unit>
        <trans-unit id="4c28d58028a6eec8a28d1185085e8ddf141802b5" translate="yes" xml:space="preserve">
          <source>This rule is mostly useful for browser scripts. Top-level declarations in ES modules and CommonJS modules create module-scoped variables. ES modules also have implicit &lt;code&gt;strict&lt;/code&gt; mode, which prevents global variable leaks.</source>
          <target state="translated">此规则对浏览器脚本最有用。ES模块和CommonJS模块中的顶级声明创建模块范围的变量。ES模块还具有隐式 &lt;code&gt;strict&lt;/code&gt; 模式，可以防止全局变量泄漏。</target>
        </trans-unit>
        <trans-unit id="8cd3bc81b47b2e4d1e8c9005b39185071a1dbee0" translate="yes" xml:space="preserve">
          <source>This rule is warning every &lt;code&gt;eval()&lt;/code&gt; even if the &lt;code&gt;eval&lt;/code&gt; is not global's. This behavior is in order to detect calls of direct &lt;code&gt;eval&lt;/code&gt;. Such as:</source>
          <target state="translated">该规则警告每个 &lt;code&gt;eval()&lt;/code&gt; ,即使 &lt;code&gt;eval&lt;/code&gt; 不是全局的。此行为是为了检测直接 &lt;code&gt;eval&lt;/code&gt; 的调用。如：</target>
        </trans-unit>
        <trans-unit id="8a92f926f4ed7ce1fe6115db133b5a9bbf22e1b4" translate="yes" xml:space="preserve">
          <source>This rule judges from following conditions whether or not the function is a constructor:</source>
          <target state="translated">本规则根据以下条件判断函数是否为构造函数。</target>
        </trans-unit>
        <trans-unit id="fc898e9b4c8ea102c28b80e26d75de9f92115480" translate="yes" xml:space="preserve">
          <source>This rule judges from following conditions whether or not the function is a method:</source>
          <target state="translated">该规则根据以下条件判断函数是否为方法。</target>
        </trans-unit>
        <trans-unit id="6343f914f331a1a209ff6afd1ff389afe41cd1b8" translate="yes" xml:space="preserve">
          <source>This rule locates function expressions used as callbacks or function arguments. An error will be produced for any that could be replaced by an arrow function without changing the result.</source>
          <target state="translated">这条规则定位作为回调或函数参数的函数表达式。对于任何可以被箭头函数替换而不改变结果的函数,都会产生错误。</target>
        </trans-unit>
        <trans-unit id="6ece644467d2a9c81b29d68c0b7edf838ce2a95c" translate="yes" xml:space="preserve">
          <source>This rule looks for accessing a given property key on a given object name, either when reading the property's value or invoking it as a function. You may specify an optional message to indicate an alternative API or a reason for the restriction.</source>
          <target state="translated">这条规则在读取属性值或作为函数调用属性时,查找对给定对象名的属性键的访问。你可以指定一个可选的消息来指示一个替代的API或限制的原因。</target>
        </trans-unit>
        <trans-unit id="aaf2ff078c424bc14e83623d32e969252a2c3994" translate="yes" xml:space="preserve">
          <source>This rule looks for any underscores (&lt;code&gt;_&lt;/code&gt;) located within the source code. It ignores leading and trailing underscores and only checks those in the middle of a variable name. If ESLint decides that the variable is a constant (all uppercase), then no warning will be thrown. Otherwise, a warning will be thrown. This rule only flags definitions and assignments but not function calls. In case of ES6 &lt;code&gt;import&lt;/code&gt; statements, this rule only targets the name of the variable that will be imported into the local module scope.</source>
          <target state="translated">该规则查找源代码中是否存在任何下划线（ &lt;code&gt;_&lt;/code&gt; ）。它忽略前导和尾随下划线，仅检查变量名中间的下划线。如果ESLint确定该变量是一个常量（全部大写），则不会引发警告。否则，将引发警告。该规则仅标记定义和分配，而不标记函数调用。对于ES6 &lt;code&gt;import&lt;/code&gt; 语句，此规则仅针对将要导入本地模块范围的变量的名称。</target>
        </trans-unit>
        <trans-unit id="e0626c81467713cb589ff34f137e8fb8cfd1e940" translate="yes" xml:space="preserve">
          <source>This rule looks for tabs anywhere inside a file: code, comments or anything else.</source>
          <target state="translated">这条规则可以查找文件中任何地方的标签:代码、注释或其他任何东西。</target>
        </trans-unit>
        <trans-unit id="fe6d5bb22323ad5d5647f61d91ef52f3f08fa9fe" translate="yes" xml:space="preserve">
          <source>This rule makes it possible to ensure, as some style guides require, that property specifications appear on separate lines for better readability. For example, you can prohibit all of these:</source>
          <target state="translated">这条规则可以像某些样式指南所要求的那样,确保属性规范出现在单独的行中,以提高可读性。例如,你可以禁止所有这些。</target>
        </trans-unit>
        <trans-unit id="e6c6fd0d733257023837aabbd888ed65fb93bb96" translate="yes" xml:space="preserve">
          <source>This rule may conflict with &lt;a href=&quot;no-extra-parens&quot;&gt;no-extra-parens&lt;/a&gt; rule. If you use both this and &lt;a href=&quot;no-extra-parens&quot;&gt;no-extra-parens&lt;/a&gt; rule together, you need to use the &lt;code&gt;nestedBinaryExpressions&lt;/code&gt; option of &lt;a href=&quot;no-extra-parens&quot;&gt;no-extra-parens&lt;/a&gt; rule.</source>
          <target state="translated">此规则可能与&lt;a href=&quot;no-extra-parens&quot;&gt;没有额外批准的&lt;/a&gt;规则冲突。如果同时使用此规则和&lt;a href=&quot;no-extra-parens&quot;&gt;无额外&lt;/a&gt;规则，则需要使用&lt;a href=&quot;no-extra-parens&quot;&gt;无额外&lt;/a&gt;规则的 &lt;code&gt;nestedBinaryExpressions&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="8037ce93151914686c514294bbb5a47669603902" translate="yes" xml:space="preserve">
          <source>This rule normalize style of spacing before/after an arrow function's arrow(&lt;code&gt;=&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">此规则规范了箭头函数的arrow（ &lt;code&gt;=&amp;gt;&lt;/code&gt; ）之前/之后的间距样式。</target>
        </trans-unit>
        <trans-unit id="464d96f575968e66e1eb040bc112bd7c57f4d84f" translate="yes" xml:space="preserve">
          <source>This rule optionally takes a second argument, which should be an object with the following supported properties:</source>
          <target state="translated">这个规则可以选择接受第二个参数,这个参数应该是一个具有以下支持属性的对象。</target>
        </trans-unit>
        <trans-unit id="9baace629bb134edd43e4c5267c9efc7ed36c31e" translate="yes" xml:space="preserve">
          <source>This rule permits you to restrict the locations of property specifications in object literals. You may prohibit any part of any property specification from appearing on the same line as any part of any other property specification. You may make this prohibition absolute, or, by invoking an object option, you may allow an exception, permitting an object literal to have all parts of all of its property specifications on a single line.</source>
          <target state="translated">这条规则允许您限制对象字面中属性规范的位置。您可以禁止任何属性规范的任何部分与任何其他属性规范的任何部分出现在同一行。您可以将这一禁止规定为绝对的,或者,通过调用对象选项,您可以允许一个例外,允许一个对象文字的所有属性规格的所有部分出现在同一行上。</target>
        </trans-unit>
        <trans-unit id="42e1fb9cb344e3a8741f57ed93b48a730c10e3e8" translate="yes" xml:space="preserve">
          <source>This rule prevents the use of spaces before a semicolon in expressions.</source>
          <target state="translated">这条规则防止在表达式中分号前使用空格。</target>
        </trans-unit>
        <trans-unit id="9344d4181d9d19d2241916e31b569c7283b76ebe" translate="yes" xml:space="preserve">
          <source>This rule provides compatibility with treatment of global variables in &lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt; and &lt;a href=&quot;http://www.jslint.com&quot;&gt;JSLint&lt;/a&gt;.</source>
          <target state="translated">这条规则提供了处理全局变量的兼容性&lt;a href=&quot;http://jshint.com/&quot;&gt;JSHint&lt;/a&gt;和&lt;a href=&quot;http://www.jslint.com&quot;&gt;JSLint的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b214579f0990ddb2ff473b51002db1c7d40b204" translate="yes" xml:space="preserve">
          <source>This rule reports &lt;code&gt;catch&lt;/code&gt; clauses that only &lt;code&gt;throw&lt;/code&gt; the caught error.</source>
          <target state="translated">此规则报告仅会 &lt;code&gt;throw&lt;/code&gt; 捕获的错误的 &lt;code&gt;catch&lt;/code&gt; 子句。</target>
        </trans-unit>
        <trans-unit id="86ccc54835bd27114caf48473e26f3403799e952" translate="yes" xml:space="preserve">
          <source>This rule reports comments that include any of the predefined terms specified in its configuration.</source>
          <target state="translated">该规则报告包含其配置中指定的任何预定义术语的注释。</target>
        </trans-unit>
        <trans-unit id="7203ab3e2552fc284d4c7e35257ffb49ab0e5bda" translate="yes" xml:space="preserve">
          <source>This rule reports line terminators around semicolons.</source>
          <target state="translated">该规则报告分号周围的行结束符。</target>
        </trans-unit>
        <trans-unit id="c31d1fb3de11835c7945c7c990282db76d0347ec" translate="yes" xml:space="preserve">
          <source>This rule reports the regular expressions which include multiple code point characters in character class syntax.</source>
          <target state="translated">该规则报告了字符类语法中包含多个码点字符的正则表达式。</target>
        </trans-unit>
        <trans-unit id="3dcc1bc4f904048de1bf50d6256dfff027039954" translate="yes" xml:space="preserve">
          <source>This rule reports the regular expressions which include multiple code point characters in character class syntax. This rule considers the following characters as multiple code point characters.</source>
          <target state="translated">本规则报告在字符类语法中包含多个码点字符的正则表达式。本规则认为下列字符为多码点字符。</target>
        </trans-unit>
        <trans-unit id="341b6ded2aa352fc643dd7e057d61170be9ad829" translate="yes" xml:space="preserve">
          <source>This rule requires &lt;code&gt;return&lt;/code&gt; statements to either always or never specify values. This rule ignores function definitions where the name begins with an uppercase letter, because constructors (when invoked with the &lt;code&gt;new&lt;/code&gt; operator) return the instantiated object implicitly if they do not return another object explicitly.</source>
          <target state="translated">该规则要求 &lt;code&gt;return&lt;/code&gt; 语句始终或永远不指定值。该规则将忽略名称以大写字母开头的函数定义，因为构造函数（当使用 &lt;code&gt;new&lt;/code&gt; 运算符调用时）如果未显式返回另一个对象，则隐式返回实例化的对象。</target>
        </trans-unit>
        <trans-unit id="ee3453de508c549ff19a5f0b11826be286a05d96" translate="yes" xml:space="preserve">
          <source>This rule requires JSDoc comments for specified nodes. Supported nodes:</source>
          <target state="translated">本规则要求指定节点的JSDoc注释。支持的节点。</target>
        </trans-unit>
        <trans-unit id="cec9a26dc266b4eb2c9c2da3663bcc6a85dec09a" translate="yes" xml:space="preserve">
          <source>This rule requires a newline after each call in a method chain or deep member access. Computed property accesses such as &lt;code&gt;instance[something]&lt;/code&gt; are excluded.</source>
          <target state="translated">在方法链或深层成员访问中的每次调用之后，此规则都需要换行符。排除计算属性访问，例如 &lt;code&gt;instance[something]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f95ad21be29bb1ede776ca2426d292d0dd3966e4" translate="yes" xml:space="preserve">
          <source>This rule requires all calls to &lt;code&gt;require()&lt;/code&gt; to be at the top level of the module, similar to ES6 &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; statements, which also can occur only at the top level.</source>
          <target state="translated">此规则要求对 &lt;code&gt;require()&lt;/code&gt; 的所有调用都在模块的顶层，类似于ES6 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 语句，后者也只能在顶层发生。</target>
        </trans-unit>
        <trans-unit id="0177d9705774367a5c4aa0718fbbf2bd9ba69779" translate="yes" xml:space="preserve">
          <source>This rule requires all immediately-invoked function expressions to be wrapped in parentheses.</source>
          <target state="translated">这条规则要求所有立即调用的函数表达式都要用括号包起来。</target>
        </trans-unit>
        <trans-unit id="e9e72f8218177dd1f7a1a226aff9535bffa2d8f5" translate="yes" xml:space="preserve">
          <source>This rule requires an empty line before &lt;code&gt;return&lt;/code&gt; statements to increase code clarity, except when the &lt;code&gt;return&lt;/code&gt; is alone inside a statement group (such as an if statement). In the latter case, the &lt;code&gt;return&lt;/code&gt; statement does not need to be delineated by virtue of it being alone. Comments are ignored and do not count as empty lines.</source>
          <target state="translated">该规则在 &lt;code&gt;return&lt;/code&gt; 语句之前需要一个空行以提高代码的清晰度，除非 &lt;code&gt;return&lt;/code&gt; 仅在语句组（例如if语句）内。在后一种情况下，不必仅通过 &lt;code&gt;return&lt;/code&gt; 语句来描述它。注释将被忽略，不算作空行。</target>
        </trans-unit>
        <trans-unit id="bf9d62bda82c79ce01bd453293ce707585038d1f" translate="yes" xml:space="preserve">
          <source>This rule requires constructor names to begin with a capital letter. Certain built-in identifiers are exempt from this rule. These identifiers are:</source>
          <target state="translated">这条规则要求构造函数名称以大写字母开头。某些内置的标识符不受此规则限制。这些标识符是:</target>
        </trans-unit>
        <trans-unit id="9b1667cd42998acba334e40e3675461c6f6ea647" translate="yes" xml:space="preserve">
          <source>This rule requires empty lines before and/or after comments. It can be enabled separately for both block (&lt;code&gt;/*&lt;/code&gt;) and line (&lt;code&gt;//&lt;/code&gt;) comments. This rule does not apply to comments that appear on the same line as code and does not require empty lines at the beginning or end of a file.</source>
          <target state="translated">此规则要求注释之前和/或之后的空白行。可以为块（ &lt;code&gt;/*&lt;/code&gt; ）和行（ &lt;code&gt;//&lt;/code&gt; ）注释分别启用它。此规则不适用于与代码显示在同一行上的注释，并且不需要在文件的开头或结尾使用空行。</target>
        </trans-unit>
        <trans-unit id="8b344cf66704dc0e8c5d9619033160b8935d092d" translate="yes" xml:space="preserve">
          <source>This rule requires function names to match the name of the variable or property to which they are assigned. The rule will ignore property assignments where the property name is a literal that is not a valid identifier in the ECMAScript version specified in your configuration (default ES5).</source>
          <target state="translated">这条规则要求函数名称与分配给它们的变量或属性名称相匹配。如果属性名是一个文字,而这个文字在你的配置中指定的ECMAScript版本中不是一个有效的标识符,那么这条规则将忽略属性分配(默认为ES5)。</target>
        </trans-unit>
        <trans-unit id="8e3ecea5100b9cfb30c6850203c63a3e999ae46a" translate="yes" xml:space="preserve">
          <source>This rule requires grouped definitions of accessor functions for the same property in object literals, class declarations and class expressions.</source>
          <target state="translated">该规则要求在对象字面、类声明和类表达式中对同一属性的访问函数进行分组定义。</target>
        </trans-unit>
        <trans-unit id="c6f6a421235f2b2c80fa80eed59abe0f68217d99" translate="yes" xml:space="preserve">
          <source>This rule requires identifiers in assignments and &lt;code&gt;function&lt;/code&gt; definitions to match a specified regular expression.</source>
          <target state="translated">此规则要求赋值和 &lt;code&gt;function&lt;/code&gt; 定义中的标识符与指定的正则表达式匹配。</target>
        </trans-unit>
        <trans-unit id="6c51336293652cc83ca8728f02c79367cda21e9d" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows assignment operator shorthand where possible.</source>
          <target state="translated">本规则要求或尽可能不允许转让操作符速记。</target>
        </trans-unit>
        <trans-unit id="22f10b36cba6586758eaf8ebcdbe60c0ebb48fbd" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows blank lines between the given 2 kinds of statements. Properly blank lines help developers to understand the code.</source>
          <target state="translated">这条规则要求或不允许在给定的2种语句之间空行。适当的空行有助于开发人员理解代码。</target>
        </trans-unit>
        <trans-unit id="5c859565f0d1ede643bfaafb3ac34fd0dc296134" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows blank newlines around directive prologues. This rule does not enforce any conventions about blank newlines between the individual directives. In addition, it does not require blank newlines before directive prologues unless they are preceded by a comment. Please use the &lt;a href=&quot;padded-blocks&quot;&gt;padded-blocks&lt;/a&gt; rule if this is a style you would like to enforce.</source>
          <target state="translated">该规则要求或禁止在指令序言周围使用空白换行符。此规则不强制执行有关各个指令之间的空白换行符的任何约定。此外，除非在指令序言之前加上注释，否则它不需要在指令序言之前留空换行符。如果您想强制使用这种样式，请使用&lt;a href=&quot;padded-blocks&quot;&gt;填充块&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="36f7341079241df9a4b2bc7451566985affaf21d" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows global strict mode invoked by a &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; pragma in the global scope.</source>
          <target state="translated">该规则要求或禁止由全局范围内的 &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; 程序调用的全局严格模式。</target>
        </trans-unit>
        <trans-unit id="1fc8f67c63328a85e17bae0b63d1e86f046a16cd" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows spaces between the function name and the opening parenthesis that calls it.</source>
          <target state="translated">这条规则要求或不允许在函数名和调用函数的开头括号之间留有空格。</target>
        </trans-unit>
        <trans-unit id="0ab58631693b6855e4a8251c15c028da7aefe4d3" translate="yes" xml:space="preserve">
          <source>This rule requires or disallows strict mode directives.</source>
          <target state="translated">该规则要求或不允许严格的模式指令。</target>
        </trans-unit>
        <trans-unit id="57f0399ff9843ec83d529b9015c1a7cc83634568" translate="yes" xml:space="preserve">
          <source>This rule requires quotes around object literal property names.</source>
          <target state="translated">这条规则要求在对象文字属性名周围加引号。</target>
        </trans-unit>
        <trans-unit id="4ff93f7cafef4d6cf7e4c4ed239aaafdf010c4c0" translate="yes" xml:space="preserve">
          <source>This rule requires that all imports from a single module exists in a single &lt;code&gt;import&lt;/code&gt; statement.</source>
          <target state="translated">此规则要求所有来自单个模块的 &lt;code&gt;import&lt;/code&gt; 存在于单个import语句中。</target>
        </trans-unit>
        <trans-unit id="8e8edba64ba736d9f931bbdd0fd29d127cce08a0" translate="yes" xml:space="preserve">
          <source>This rule requires that function declarations and, optionally, variable declarations be in the root of a program or the body of a function.</source>
          <target state="translated">这条规则要求函数声明和变量声明必须在程序的根部或函数的主体中。</target>
        </trans-unit>
        <trans-unit id="53cfd9d729e8a263c0ddf818bb9f5eab7ee800a9" translate="yes" xml:space="preserve">
          <source>This rule restricts the use of parentheses to only where they are necessary.</source>
          <target state="translated">这条规则限制了括号的使用,只有在必要的情况下才能使用。</target>
        </trans-unit>
        <trans-unit id="cef2b23a2f6a1633d7f45584fec2639671e225c6" translate="yes" xml:space="preserve">
          <source>This rule restricts what can be thrown as an exception. When it was first created, it only prevented literals from being thrown (hence the name), but it has now been expanded to only allow expressions which have a possibility of being an &lt;code&gt;Error&lt;/code&gt; object.</source>
          <target state="translated">该规则限制了可以作为异常抛出的内容。初次创建时，它只能防止文字被抛出（因此而得名），但现在已被扩展为仅允许可能成为 &lt;code&gt;Error&lt;/code&gt; 对象的表达式。</target>
        </trans-unit>
        <trans-unit id="c24e65c6fcdc1b378a60d46be96c51dbb547de6d" translate="yes" xml:space="preserve">
          <source>This rule should not be used in ES3/5 environments.</source>
          <target state="translated">此规则不应在ES3/5环境中使用。</target>
        </trans-unit>
        <trans-unit id="24acb5e74167bd0bbfd66efd587e2707275f2d12" translate="yes" xml:space="preserve">
          <source>This rule should not be used in ES3/5 environments. In addition, this rule can be safely turned off if you don't want to enforce presence of &lt;code&gt;description&lt;/code&gt; when creating Symbols.</source>
          <target state="translated">在ES3 / 5环境中不应使用此规则。此外，如果您不想在创建符号时强制 &lt;code&gt;description&lt;/code&gt; 存在，则可以安全地关闭此规则。</target>
        </trans-unit>
        <trans-unit id="151c41d8b4dc7702d9553b44714eec4695467e52" translate="yes" xml:space="preserve">
          <source>This rule should not be used unless ES2016 is supported in your codebase.</source>
          <target state="translated">除非您的代码库中支持ES2016,否则不应使用此规则。</target>
        </trans-unit>
        <trans-unit id="0a5f78acac29dc36cd309e293b513159ad726d5a" translate="yes" xml:space="preserve">
          <source>This rule should not be used unless ES2018 is supported in your codebase.</source>
          <target state="translated">除非您的代码库中支持ES2018,否则不应使用此规则。</target>
        </trans-unit>
        <trans-unit id="ba5e010c2d80cf6332f4d78e262ee0df96cd6c16" translate="yes" xml:space="preserve">
          <source>This rule takes a list of objects, where the object name and property names are specified:</source>
          <target state="translated">该规则采用对象列表,其中指定对象名称和属性名称。</target>
        </trans-unit>
        <trans-unit id="0b02f979bb1e5b0404a2b2da410003ab016f4ebd" translate="yes" xml:space="preserve">
          <source>This rule takes a list of strings, where each string is a global to be restricted:</source>
          <target state="translated">这条规则接受一个字符串列表,其中每个字符串都是一个要限制的全局。</target>
        </trans-unit>
        <trans-unit id="b201ae39f465f167a6f7078200eb2b3626059f5e" translate="yes" xml:space="preserve">
          <source>This rule takes a list of strings, where each string is an AST selector:</source>
          <target state="translated">这条规则接受一个字符串列表,其中每个字符串是一个AST选择器。</target>
        </trans-unit>
        <trans-unit id="82b286a5fe6ed277f08bedb934e5ba7461eea738" translate="yes" xml:space="preserve">
          <source>This rule takes an object argument with &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; properties, each with a Boolean value.</source>
          <target state="translated">该规则采用一个对象参数，该参数具有 &lt;code&gt;before&lt;/code&gt; 和 &lt;code&gt;after&lt;/code&gt; 属性，每个属性均具有布尔值。</target>
        </trans-unit>
        <trans-unit id="ef7b35502490d4261fd8713f1ba41161625386de" translate="yes" xml:space="preserve">
          <source>This rule takes an optional string of &quot;always&quot; or &quot;never&quot; (when omitted, it defaults to &quot;always&quot;), and an optional options object with two properties &lt;code&gt;considerPropertyDescriptor&lt;/code&gt; and &lt;code&gt;includeCommonJSModuleExports&lt;/code&gt;.</source>
          <target state="translated">这条规则的&amp;ldquo;总是&amp;rdquo;或&amp;ldquo;从不&amp;rdquo;可选字符串（省略，则默认为&amp;ldquo;总是&amp;rdquo;时），和一个可选的选项具有两个属性对象 &lt;code&gt;considerPropertyDescriptor&lt;/code&gt; 和 &lt;code&gt;includeCommonJSModuleExports&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d95c86b835fd844af2faf1d625ccd11d336d790a" translate="yes" xml:space="preserve">
          <source>This rule takes one argument which can be a string or an object. The string settings are the same as those of the &lt;code&gt;vars&lt;/code&gt; property (explained below).</source>
          <target state="translated">此规则采用一个参数，该参数可以是字符串或对象。字符串设置与 &lt;code&gt;vars&lt;/code&gt; 属性的设置相同（如下所述）。</target>
        </trans-unit>
        <trans-unit id="61b52a64cc80497d13bf1f5087459fd9bf4f1964" translate="yes" xml:space="preserve">
          <source>This rule takes one argument, which can be a string or an object. The string settings are the same as those of the &lt;code&gt;position&lt;/code&gt; property (explained below). The object option has the following properties:</source>
          <target state="translated">此规则采用一个参数，可以是字符串或对象。字符串设置与 &lt;code&gt;position&lt;/code&gt; 属性的设置相同（如下所述）。对象选项具有以下属性：</target>
        </trans-unit>
        <trans-unit id="925c4aa1d0ad97e0afc5d3f1b41b3689f8b6569a" translate="yes" xml:space="preserve">
          <source>This rule takes one argument. If it is &lt;code&gt;&quot;always&quot;&lt;/code&gt; then blocks must always have at least one preceding space. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then all blocks should never have any preceding space. If different spacing is desired for function blocks, keyword blocks and classes, an optional configuration object can be passed as the rule argument to configure the cases separately. If any value in the configuration object is &lt;code&gt;&quot;off&quot;&lt;/code&gt;, then neither style will be enforced for blocks of that kind.</source>
          <target state="translated">这条规则有一个论点。如果它是 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 则块必须始终至少有一个前面的空间。如果 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则所有块都不应再有任何前面的空间。如果功能块，关键字块和类需要不同的间距，则可以将可选的配置对象作为规则参数传递，以分别配置大小写。如果配置对象中的任何值都为 &lt;code&gt;&quot;off&quot;&lt;/code&gt; ，则不会对这种类型的块强制使用任何样式。</target>
        </trans-unit>
        <trans-unit id="0963778e2c1dedb94b331c8f2a270bc4d32e65ac" translate="yes" xml:space="preserve">
          <source>This rule takes one argument. If it is &lt;code&gt;&quot;always&quot;&lt;/code&gt; then the keywords must be followed by at least one space. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then there should be no spaces following. The default is &lt;code&gt;&quot;always&quot;&lt;/code&gt;.</source>
          <target state="translated">这条规则有一个论点。如果它是 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 则关键字后面必须至少有一个空格。如果 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则后面不应有空格。默认值为 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68e6e197c434d48e169b6986c95cbf5d52592e92" translate="yes" xml:space="preserve">
          <source>This rule takes one argument. If it is &lt;code&gt;&quot;always&quot;&lt;/code&gt;, which is the default option, all named functions and anonymous functions must have space before function parentheses. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then all named functions and anonymous functions must not have space before function parentheses. If you want different spacing for named and anonymous functions you can pass a configuration object as the rule argument to configure those separately (e. g. &lt;code&gt;{&quot;anonymous&quot;: &quot;always&quot;, &quot;named&quot;: &quot;never&quot;}&lt;/code&gt;).</source>
          <target state="translated">这条规则有一个论点。如果它是 &lt;code&gt;&quot;always&quot;&lt;/code&gt; （默认选项），则所有命名函数和匿名函数必须在函数括号前有空格。如果为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则所有命名函数和匿名函数在函数括号前都不能有空格。如果要给命名函数和匿名函数使用不同的间距，则可以将配置对象作为规则参数传递，以分别配置它们（例如 &lt;code&gt;{&quot;anonymous&quot;: &quot;always&quot;, &quot;named&quot;: &quot;never&quot;}&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3b267efe65f4c6431cd77e4ab353be6801239914" translate="yes" xml:space="preserve">
          <source>This rule takes one argument: &lt;code&gt;&quot;always&quot;&lt;/code&gt; or &lt;code&gt;&quot;never&quot;&lt;/code&gt;. If &lt;code&gt;&quot;always&quot;&lt;/code&gt; then the keywords must be preceded by at least one space. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then no spaces will be allowed before the keywords &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt; (do...while), &lt;code&gt;finally&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt;. The default value is &lt;code&gt;&quot;always&quot;&lt;/code&gt;.</source>
          <target state="translated">该规则采用一个参数： &lt;code&gt;&quot;always&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 。如果 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 则关键字必须至少带有一个空格。如果为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则关键字 &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; （do ... while）， &lt;code&gt;finally&lt;/code&gt; 和 &lt;code&gt;catch&lt;/code&gt; 之前不允许有空格。默认值为 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="921f45928af93ba562b5555f1761103f8b63f93f" translate="yes" xml:space="preserve">
          <source>This rule takes one option, an object, with a boolean property &lt;code&gt;&quot;props&quot;&lt;/code&gt;, and arrays &lt;code&gt;&quot;ignorePropertyModificationsFor&quot;&lt;/code&gt; and &lt;code&gt;&quot;ignorePropertyModificationsForRegex&quot;&lt;/code&gt;. &lt;code&gt;&quot;props&quot;&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; by default. If &lt;code&gt;&quot;props&quot;&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, this rule warns against the modification of parameter properties unless they're included in &lt;code&gt;&quot;ignorePropertyModificationsFor&quot;&lt;/code&gt; or &lt;code&gt;&quot;ignorePropertyModificationsForRegex&quot;&lt;/code&gt;, which is an empty array by default.</source>
          <target state="translated">该规则采用一个选项，即一个对象，该对象具有布尔属性 &lt;code&gt;&quot;props&quot;&lt;/code&gt; 以及数组 &lt;code&gt;&quot;ignorePropertyModificationsFor&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;ignorePropertyModificationsForRegex&quot;&lt;/code&gt; 。默认情况下， &lt;code&gt;&quot;props&quot;&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 。如果将 &lt;code&gt;&quot;props&quot;&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ，则此规则将警告您不要修改参数属性，除非它们包含在 &lt;code&gt;&quot;ignorePropertyModificationsFor&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;ignorePropertyModificationsForRegex&quot;&lt;/code&gt; ，默认情况下为空数组。</target>
        </trans-unit>
        <trans-unit id="1989e383b52a7c0690147a9f6a24292bd5b350e0" translate="yes" xml:space="preserve">
          <source>This rule takes one option, an object, with properties &lt;code&gt;&quot;builtinGlobals&quot;&lt;/code&gt;, &lt;code&gt;&quot;hoist&quot;&lt;/code&gt; and &lt;code&gt;&quot;allow&quot;&lt;/code&gt;.</source>
          <target state="translated">该规则采用一个选项，即对象，其属性为 &lt;code&gt;&quot;builtinGlobals&quot;&lt;/code&gt; ， &lt;code&gt;&quot;hoist&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;allow&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55cdaee2a0575694fdbef7580c26fdd32501b02c" translate="yes" xml:space="preserve">
          <source>This rule takes one option.</source>
          <target state="translated">这条规则采取一种方案。</target>
        </trans-unit>
        <trans-unit id="d772fa94c11bdcbaaf11da3960b9dad0c56b7287" translate="yes" xml:space="preserve">
          <source>This rule takes one option: a string with the value of &lt;code&gt;&quot;never&quot;&lt;/code&gt; or &lt;code&gt;&quot;always&quot;&lt;/code&gt;. The default value is &lt;code&gt;&quot;never&quot;&lt;/code&gt;.</source>
          <target state="translated">此规则采用一个选项：值为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 的字符串。默认值为 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b91a4819236a2c8058289db3743ecb12444e779b" translate="yes" xml:space="preserve">
          <source>This rule takes one optional argument, an object with a boolean property &lt;code&gt;&quot;builtinGlobals&quot;&lt;/code&gt;. It defaults to &lt;code&gt;true&lt;/code&gt;. If set to &lt;code&gt;true&lt;/code&gt;, this rule also checks redeclaration of built-in globals, such as &lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;...</source>
          <target state="translated">该规则采用一个可选参数，即具有布尔属性 &lt;code&gt;&quot;builtinGlobals&quot;&lt;/code&gt; 的对象。默认为 &lt;code&gt;true&lt;/code&gt; 。如果设置为 &lt;code&gt;true&lt;/code&gt; ，则此规则还将检查内置全局变量的重新声明，例如 &lt;code&gt;Object&lt;/code&gt; ， &lt;code&gt;Array&lt;/code&gt; ， &lt;code&gt;Number&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="b9cbcc761c175da60e181849bac41abcfeb1eb54" translate="yes" xml:space="preserve">
          <source>This rule takes one optional argument, an object with a single key, &lt;code&gt;includeExports&lt;/code&gt; which is a &lt;code&gt;boolean&lt;/code&gt;. It defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">该规则采用一个可选参数，即具有单个键的对象， &lt;code&gt;includeExports&lt;/code&gt; 是 &lt;code&gt;boolean&lt;/code&gt; 。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b153c32b894cc5b1df1b907a860983e5820083f" translate="yes" xml:space="preserve">
          <source>This rule takes one optional object argument:</source>
          <target state="translated">这条规则需要一个可选的对象参数。</target>
        </trans-unit>
        <trans-unit id="30aa84ef31b2b0e9486effe6efc775992ca799f6" translate="yes" xml:space="preserve">
          <source>This rule takes two arguments. If the first is &lt;code&gt;&quot;always&quot;&lt;/code&gt; then the &lt;code&gt;//&lt;/code&gt; must be followed by at least once whitespace. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then there should be no whitespace following. The default is &lt;code&gt;&quot;always&quot;&lt;/code&gt;.</source>
          <target state="translated">该规则有两个参数。如果第一个是 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 则必须 &lt;code&gt;//&lt;/code&gt; 至少跟一个空格。如果 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 则后面不应有空格。默认值为 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84d96e23bd49ca68e511d1e5e897131b026bcb0a" translate="yes" xml:space="preserve">
          <source>This rule takes two sets of configuration objects. The first object parameter determines what types of destructuring the rule applies to.</source>
          <target state="translated">该规则需要两组配置对象。第一个对象参数决定该规则适用于什么类型的拆解。</target>
        </trans-unit>
        <trans-unit id="ae727accc6952dffe9642e70d5d9f54ce013860e" translate="yes" xml:space="preserve">
          <source>This rule warns async functions which have no &lt;code&gt;await&lt;/code&gt; expression.</source>
          <target state="translated">该规则警告没有 &lt;code&gt;await&lt;/code&gt; 表达式的异步函数。</target>
        </trans-unit>
        <trans-unit id="74dd1649a62b8563503acf05aa42a909078345bb" translate="yes" xml:space="preserve">
          <source>This rule warns if setters are defined without getters. Using an option &lt;code&gt;getWithoutSet&lt;/code&gt;, it will warn if you have a getter without a setter also.</source>
          <target state="translated">如果没有使用getter定义setter时，此规则将发出警告。使用选项 &lt;code&gt;getWithoutSet&lt;/code&gt; ，如果您同时具有不带setter的getter，它将发出警告。</target>
        </trans-unit>
        <trans-unit id="1569e1ee08e710a201d5fae646056142b968ec87" translate="yes" xml:space="preserve">
          <source>This rule warns the assignments, increments, and decrements of imported bindings.</source>
          <target state="translated">该规则对导入绑定的赋值、增量和减量进行警告。</target>
        </trans-unit>
        <trans-unit id="b525b7aa7a74d04de20905491b2a8c8941e9d6ab" translate="yes" xml:space="preserve">
          <source>This rule was &lt;a href=&quot;https://eslint.org/blog/2018/11/jsdoc-end-of-life&quot;&gt;&lt;strong&gt;deprecated&lt;/strong&gt;&lt;/a&gt; in ESLint v5.10.0.</source>
          <target state="translated">ESLint v5.10.0 中&lt;a href=&quot;https://eslint.org/blog/2018/11/jsdoc-end-of-life&quot;&gt;&lt;strong&gt;不推荐使用&lt;/strong&gt;&lt;/a&gt;此规则。</target>
        </trans-unit>
        <trans-unit id="97dcd4f368c345500c003b3e841d0a8400962324" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v3.3.0 and replaced by the &lt;a href=&quot;func-call-spacing&quot;&gt;func-call-spacing&lt;/a&gt; rule.</source>
          <target state="translated">此规则在ESLint v3.3.0 中&lt;strong&gt;已弃用&lt;/strong&gt;，并由&lt;a href=&quot;func-call-spacing&quot;&gt;func-call-spacing&lt;/a&gt;规则代替。</target>
        </trans-unit>
        <trans-unit id="8ff1d82e180ba1773cb4a72ab00704f0010e710d" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v3.3.0 and replaced by the &lt;a href=&quot;no-global-assign&quot;&gt;no-global-assign&lt;/a&gt; rule.</source>
          <target state="translated">此规则在ESLint v3.3.0 中&lt;strong&gt;已弃用&lt;/strong&gt;，并由&lt;a href=&quot;no-global-assign&quot;&gt;no-global-assign&lt;/a&gt;规则代替。</target>
        </trans-unit>
        <trans-unit id="1fb4dbae98047dd2a77e76468bbbd39dfc1c4441" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v3.3.0 and replaced by the &lt;a href=&quot;no-unsafe-negation&quot;&gt;no-unsafe-negation&lt;/a&gt; rule.</source>
          <target state="translated">此规则在ESLint v3.3.0 中&lt;strong&gt;已弃用&lt;/strong&gt;，并由&lt;a href=&quot;no-unsafe-negation&quot;&gt;no-unsafe-negation&lt;/a&gt;规则代替。</target>
        </trans-unit>
        <trans-unit id="6ba68fa34738bb389e81154d113b01d469e1d65a" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v3.9.0 and will not be replaced. The original intent of this rule now seems misguided as we have come to understand that &lt;code&gt;Reflect&lt;/code&gt; methods are not actually intended to replace the &lt;code&gt;Object&lt;/code&gt; counterparts the rule suggests, but rather exist as low-level primitives to be used with proxies in order to replicate the default behavior of various previously existing functionality.</source>
          <target state="translated">此规则在ESLint v3.9.0 中&lt;strong&gt;已弃用&lt;/strong&gt;，不会被替换。现在，该规则的初衷似乎被误导了，因为我们已经了解到， &lt;code&gt;Reflect&lt;/code&gt; 方法实际上并不是要替换该规则建议的 &lt;code&gt;Object&lt;/code&gt; 对应对象，而是作为低级原语存在，以与代理一起使用以复制默认值。各种现有功能的行为。</target>
        </trans-unit>
        <trans-unit id="ce83f16eb6dd78df693370a9b8ab5161bcba25c0" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v4.0.0 and replaced by the &lt;a href=&quot;padding-line-between-statements&quot;&gt;padding-line-between-statements&lt;/a&gt; rule.</source>
          <target state="translated">此规则在ESLint v4.0.0 中&lt;strong&gt;已弃用&lt;/strong&gt;，并由&lt;a href=&quot;padding-line-between-statements&quot;&gt;padding-line-between-statements&lt;/a&gt;规则代替。</target>
        </trans-unit>
        <trans-unit id="595a0b53c9e454f2413cf7e2261c656c0f5d6fdb" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v5.1.0.</source>
          <target state="translated">ESLint v5.1.0 中&lt;strong&gt;不推荐使用&lt;/strong&gt;此规则。</target>
        </trans-unit>
        <trans-unit id="5181dc7122d7d894602629de38f3da4418e3353f" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;deprecated&lt;/strong&gt; in ESLint v7.0.0. Please use the corresponding rule in &lt;a href=&quot;https://github.com/mysticatea/eslint-plugin-node&quot;&gt;&lt;code&gt;eslint-plugin-node&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ESLint v7.0.0中&lt;strong&gt;不赞成使用&lt;/strong&gt;此规则。请在&lt;a href=&quot;https://github.com/mysticatea/eslint-plugin-node&quot;&gt; &lt;code&gt;eslint-plugin-node&lt;/code&gt; 中&lt;/a&gt;使用相应的规则。</target>
        </trans-unit>
        <trans-unit id="ac5a312f0cda349b78539a394ba1c7fd59148665" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v0.10.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;space-unary-ops&quot;&gt;space-unary-ops&lt;/a&gt; rule.</source>
          <target state="translated">该规则已在ESLint v0.10.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;space-unary-ops&quot;&gt;space-unary-ops&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="7acd7fc95d09451c1a526d7f453870f07f1aac69" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;comma-dangle&quot;&gt;comma-dangle&lt;/a&gt; rule.</source>
          <target state="translated">该规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;comma-dangle&quot;&gt;逗号&lt;/a&gt;分隔规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="9fea70d644ca508ec2677a3f96f76959ba74e28c" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;generator-star-spacing&quot;&gt;generator-star-spacing&lt;/a&gt; rule.</source>
          <target state="translated">该规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;generator-star-spacing&quot;&gt;generator-star-spacing&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="454a8fed474e9b1a63295584bcba33699571409b" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;no-empty-character-class&quot;&gt;no-empty-character-class&lt;/a&gt; rule.</source>
          <target state="translated">此规则在ESLint v1.0中已&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;no-empty-character-class&quot;&gt;no-empty-character-class&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="3a4df1f13d548677fdf37e3b26d0ecaaf861ecd9" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;no-extra-parens&quot;&gt;no-extra-parens&lt;/a&gt; rule. The &lt;code&gt;&quot;functions&quot;&lt;/code&gt; option in the new rule is equivalent to the removed rule.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;no-extra-parens&quot;&gt;无额外限制的&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。新规则中的 &lt;code&gt;&quot;functions&quot;&lt;/code&gt; 选项等效于已删除的规则。</target>
        </trans-unit>
        <trans-unit id="a5b108031efa91ff62ed16986898b592f2099523" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;object-curly-spacing&quot;&gt;object-curly-spacing&lt;/a&gt; and &lt;a href=&quot;array-bracket-spacing&quot;&gt;array-bracket-spacing&lt;/a&gt; rules.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;object-curly-spacing&quot;&gt;object-curly-spacing&lt;/a&gt;和&lt;a href=&quot;array-bracket-spacing&quot;&gt;array-bracket-spacing&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="15310b4262bdc098c85186e1c940ab4bc35713bd" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;quote-props&quot;&gt;quote-props&lt;/a&gt; rule.</source>
          <target state="translated">该规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;quote-props&quot;&gt;quote-props&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="806e99ea6529d453ff4fea7b67ef7d9411e7fc0b" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;semi-spacing&quot;&gt;semi-spacing&lt;/a&gt; rule.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;semi-spacing&quot;&gt;半间距&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="1433b9d464125b94ed46f2687a9a766095f2913f" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;space-before-function-paren&quot;&gt;space-before-function-paren&lt;/a&gt; rule.</source>
          <target state="translated">在此规则&lt;strong&gt;删除&lt;/strong&gt;在ESLint v1.0和&lt;strong&gt;更换&lt;/strong&gt;由&lt;a href=&quot;space-before-function-paren&quot;&gt;空间前方的功能括号&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="bfdf120e55f7a281a7a557f08326c688dd338dfd" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;space-before-function-paren&quot;&gt;space-before-function-paren&lt;/a&gt; rule. The name of the rule changed from &quot;parentheses&quot; to &quot;paren&quot; for consistency with the names of other rules.</source>
          <target state="translated">在此规则&lt;strong&gt;删除&lt;/strong&gt;在ESLint v1.0和&lt;strong&gt;更换&lt;/strong&gt;由&lt;a href=&quot;space-before-function-paren&quot;&gt;空间前方的功能括号&lt;/a&gt;规则。规则的名称从&amp;ldquo;括号&amp;rdquo;更改为&amp;ldquo;原谅&amp;rdquo;，以与其他规则的名称保持一致。</target>
        </trans-unit>
        <trans-unit id="86775760ef9fb1f3cfe8506df115fa50fad7b3da" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;spaced-comment&quot;&gt;spaced-comment&lt;/a&gt; rule.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;spaced-comment&quot;&gt;空格注释&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="4d22e86fae8a14e5447a82e7f0330e058279ab58" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;strict&quot;&gt;strict&lt;/a&gt; rule. The &lt;code&gt;&quot;global&quot;&lt;/code&gt; option in the new rule is most similar to the removed rule.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;strict&quot;&gt;严格&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。新规则中的 &lt;code&gt;&quot;global&quot;&lt;/code&gt; 选项与已删除规则最相似。</target>
        </trans-unit>
        <trans-unit id="9100ed1e2a807ef9327b2f5d35415892fa86cb22" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v1.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;strict&quot;&gt;strict&lt;/a&gt; rule. The &lt;code&gt;&quot;global&quot;&lt;/code&gt; or &lt;code&gt;&quot;function&quot;&lt;/code&gt; options in the new rule are similar to the removed rule.</source>
          <target state="translated">此规则已在ESLint v1.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;strict&quot;&gt;严格&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。新规则中的 &lt;code&gt;&quot;global&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;function&quot;&lt;/code&gt; 选项类似于已删除的规则。</target>
        </trans-unit>
        <trans-unit id="9f89e766710bf630ced43da3e69bce3992f2c41b" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v2.0 and &lt;strong&gt;replaced&lt;/strong&gt; by a combination of the &lt;a href=&quot;no-confusing-arrow&quot;&gt;no-confusing-arrow&lt;/a&gt; and &lt;a href=&quot;no-constant-condition&quot;&gt;no-constant-condition&lt;/a&gt; rules.</source>
          <target state="translated">此规则在ESLint v2.0中已&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;no-confusing-arrow&quot;&gt;无混淆箭头&lt;/a&gt;规则和&lt;a href=&quot;no-constant-condition&quot;&gt;无恒定条件&lt;/a&gt;规则的组合&lt;strong&gt;所取代&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="cda6801a02eb11d54e527ccd127c09f626d0664d" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v2.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;keyword-spacing&quot;&gt;keyword-spacing&lt;/a&gt; rule.</source>
          <target state="translated">此规则已在ESLint v2.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;keyword-spacing&quot;&gt;关键字间隔&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="b6bce407af2413b5937a155c9cf8c389ed6b52d2" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v2.0 and &lt;strong&gt;replaced&lt;/strong&gt; by the &lt;a href=&quot;no-labels&quot;&gt;no-labels&lt;/a&gt; rule.</source>
          <target state="translated">此规则已在ESLint v2.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;no-labels&quot;&gt;no-labels&lt;/a&gt;规则&lt;strong&gt;代替&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c97ed5e1976f6e59cbc5958266519e944e1e11e9" translate="yes" xml:space="preserve">
          <source>This rule was &lt;strong&gt;removed&lt;/strong&gt; in ESLint v2.0 and replaced by the &lt;a href=&quot;keyword-spacing&quot;&gt;keyword-spacing&lt;/a&gt; rule.</source>
          <target state="translated">此规则已在ESLint v2.0 中&lt;strong&gt;删除&lt;/strong&gt;，并由&lt;a href=&quot;keyword-spacing&quot;&gt;关键字间隔&lt;/a&gt;规则代替。</target>
        </trans-unit>
        <trans-unit id="7acf56d92530caa8171a9b77894e82f22211e06d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.2.</source>
          <target state="translated">这条规则在ESLint 0.0.2中被引入。</target>
        </trans-unit>
        <trans-unit id="d56f12d0cea2af7dab30391b1c91a8c5e8611ab7" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.3-0.</source>
          <target state="translated">这个规则在ESLint 0.0.3-0中被引入。</target>
        </trans-unit>
        <trans-unit id="9f77090708a85102cf4f6ae95b7446a35a7e8831" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.5.</source>
          <target state="translated">这条规则在ESLint 0.0.5中被引入。</target>
        </trans-unit>
        <trans-unit id="f63ca588b6adc8183fd416864c5b42f2c04e1cbe" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.6.</source>
          <target state="translated">这条规则在ESLint 0.0.6中被引入。</target>
        </trans-unit>
        <trans-unit id="ee648d4cb2a57db16db2921c9d0df6db93140ef1" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.7.</source>
          <target state="translated">这条规则在ESLint 0.0.7中被引入。</target>
        </trans-unit>
        <trans-unit id="7be8f0d556f11e7552c5d03d635e15e1e2586501" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.9 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.0.9中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="991259711e9ffad37f494b317dc6ae1354d1cdec" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.9 and removed in 2.0.0-rc.0.</source>
          <target state="translated">这条规则在ESLint 0.0.9中引入,在2.0.0-rc.0中删除。</target>
        </trans-unit>
        <trans-unit id="3826e79f1a573577ff21706cad07239818dc97a8" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.0.9.</source>
          <target state="translated">这条规则在ESLint 0.0.9中被引入。</target>
        </trans-unit>
        <trans-unit id="104ee87c3025112a05265a39971ed20f008801f6" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.1.0.</source>
          <target state="translated">这条规则在ESLint 0.1.0中被引入。</target>
        </trans-unit>
        <trans-unit id="6841448b528ccb28441ee5853c18598a8bae3314" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.1.2.</source>
          <target state="translated">这条规则在ESLint 0.1.2中被引入。</target>
        </trans-unit>
        <trans-unit id="cc3311c1a58d2304884d53ec00bc0893123240e0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.1.4 and removed in 0.10.0.</source>
          <target state="translated">这条规则在ESLint 0.1.4中引入,在0.10.0中被删除。</target>
        </trans-unit>
        <trans-unit id="9cd085f82a271e1296933b1d84ab883da8dc5fdc" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.1.4 and removed in 2.0.0-beta.3.</source>
          <target state="translated">这条规则在ESLint 0.1.4中引入,在2.0.0-beta.3中被删除。</target>
        </trans-unit>
        <trans-unit id="35169537b6d06f161ebb07cee67997ec7015db46" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.1.4.</source>
          <target state="translated">这条规则在ESLint 0.1.4中被引入。</target>
        </trans-unit>
        <trans-unit id="f5f9cd2f36d4e67d1494162223864c9bde274c44" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.10.0.</source>
          <target state="translated">这条规则在ESLint 0.10.0中被引入。</target>
        </trans-unit>
        <trans-unit id="6e464e7cf6aff81ac969bfa7300628a1595dbcbc" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.11.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.11.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="f5e4e0c1277e58cff65243fba140eefd9e2dd691" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.12.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.12.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="8e1016eb2eb9e5e64bc0b0dd57ca31abaa8b284d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.12.0.</source>
          <target state="translated">这条规则在ESLint 0.12.0中被引入。</target>
        </trans-unit>
        <trans-unit id="ec82419ed7cd6cb2cf32d689705adcf1ef19580d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.14.0.</source>
          <target state="translated">这条规则在ESLint 0.14.0中被引入。</target>
        </trans-unit>
        <trans-unit id="b4c7ed1964bbb84cf265249574359050ead50197" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.15.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.15.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="022a60c1b9ae595ba84589e32239b3cc1abe85c0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.15.0.</source>
          <target state="translated">这条规则在ESLint 0.15.0中被引入。</target>
        </trans-unit>
        <trans-unit id="44b7c4a1ff6984989e180005d65c9ff021838b2b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.16.0.</source>
          <target state="translated">这条规则在ESLint 0.16.0中被引入。</target>
        </trans-unit>
        <trans-unit id="99811d057622f118ff8e5e3027a5aa79e7b5a1f8" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.17.0.</source>
          <target state="translated">这条规则在ESLint 0.17.0中被引入。</target>
        </trans-unit>
        <trans-unit id="a24ab8acce4089e462954a9a8d11f04ed7e83d14" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.18.0.</source>
          <target state="translated">这条规则在ESLint 0.18.0中被引入。</target>
        </trans-unit>
        <trans-unit id="22a4e79e1a7c4b86ae960caf61411eedb0cd54fe" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.19.0.</source>
          <target state="translated">这条规则在ESLint 0.19.0中被引入。</target>
        </trans-unit>
        <trans-unit id="3d144e044cff9cede85dd4fb4692a332f5a8c611" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.2.0.</source>
          <target state="translated">这条规则是在ESLint 0.2.0中引入的。</target>
        </trans-unit>
        <trans-unit id="d1d0165d60b8c8a9fcebfd14fbf09279a7f3f639" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.20.0.</source>
          <target state="translated">这条规则在ESLint 0.20.0中被引入。</target>
        </trans-unit>
        <trans-unit id="a2f350314ced59a62892af55c83b424897809d53" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.21.0.</source>
          <target state="translated">这条规则在ESLint 0.21.0中被引入。</target>
        </trans-unit>
        <trans-unit id="ab2dc7a9090814ada544a547dc63e19480771694" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.22.0.</source>
          <target state="translated">这条规则在ESLint 0.22.0中被引入。</target>
        </trans-unit>
        <trans-unit id="5e9ad892054ec8fd2a9b5a3d99565c92ebc8faa8" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.23.0.</source>
          <target state="translated">这条规则在ESLint 0.23.0中被引入。</target>
        </trans-unit>
        <trans-unit id="a15cf25a65f1772b83540ce070583db9f0bea046" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.24.0.</source>
          <target state="translated">这条规则在ESLint 0.24.0中被引入。</target>
        </trans-unit>
        <trans-unit id="4eb90bb8e8d0e4862e4c3c2110f52eabd22c5d95" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.3.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.3.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="d534051e14d0ae5f4e8d170369285c7a7a833d72" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.0.</source>
          <target state="translated">这条规则在ESLint 0.4.0中被引入。</target>
        </trans-unit>
        <trans-unit id="319d2d39aa4de595f2f2c47bce15edc744470e07" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.1 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.4.1中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="690f00bbc758ba76165c1909c568ddef3d528500" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.1.</source>
          <target state="translated">这条规则在ESLint 0.4.1中被引入。</target>
        </trans-unit>
        <trans-unit id="695fb83fb1f76ea78bd579fd8234746aef2c134b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.3 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.4.3中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="2104f264de79647569d42ba63afe56f30aaf6f4a" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.4.</source>
          <target state="translated">这个规则在ESLint 0.4.4中被引入。</target>
        </trans-unit>
        <trans-unit id="1e6ec86f8fa1f44a023019cea42bc0bc4e88bfe9" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.4.5.</source>
          <target state="translated">这条规则在ESLint 0.4.5中被引入。</target>
        </trans-unit>
        <trans-unit id="8f8be4f8a8eac1609244f86feda1f955f3651f40" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.5.0.</source>
          <target state="translated">这条规则在ESLint 0.5.0中被引入。</target>
        </trans-unit>
        <trans-unit id="b5bd41becec94711e7ccb19f43f55a58cb3e3dfa" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.5.1.</source>
          <target state="translated">这条规则在ESLint 0.5.1中被引入。</target>
        </trans-unit>
        <trans-unit id="6054666decb9a65e302b946e91edb674546d155d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.6.0 and removed in 2.0.0-beta.3.</source>
          <target state="translated">这条规则是在ESLint 0.6.0中引入的,在2.0.0-beta.3中被删除。</target>
        </trans-unit>
        <trans-unit id="fca55944c7f00c80eb956197f3f3aa9e06639fe8" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.6.0.</source>
          <target state="translated">这条规则在ESLint 0.6.0中被引入。</target>
        </trans-unit>
        <trans-unit id="612fad62eb56b4b3e86c60586d0f3c1dd4590c31" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.7.1.</source>
          <target state="translated">这条规则在ESLint 0.7.1中被引入。</target>
        </trans-unit>
        <trans-unit id="7f6b3af67baac6593755ed43d947a149ef34dbd3" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.8.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.8.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="9205461b44607eff74d1a2a6b6df2c77e39d4ef6" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.8.0 and removed in 1.0.0.</source>
          <target state="translated">这条规则在ESLint 0.8.0中引入,在1.0.0中被删除。</target>
        </trans-unit>
        <trans-unit id="2e0b51fe679fd742117998eff735fd41d10c73b5" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.8.0.</source>
          <target state="translated">这条规则在ESLint 0.8.0中被引入。</target>
        </trans-unit>
        <trans-unit id="24474dd83f68e5a7f601af202c31fa078bd00972" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.9.0 and removed in 1.0.0-rc-1.</source>
          <target state="translated">这条规则是在ESLint 0.9.0中引入的,在1.0.0-rc-1中被删除。</target>
        </trans-unit>
        <trans-unit id="3f7b8b50cfbe149b58d16cd8e4f33ca11306175f" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 0.9.0.</source>
          <target state="translated">这条规则在ESLint 0.9.0中被引入。</target>
        </trans-unit>
        <trans-unit id="253a90a08f1d4c26446ac375c0c3081ea7dfdee7" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.0.0-rc-1.</source>
          <target state="translated">这个规则在ESLint 1.0.0-rc-1中被引入。</target>
        </trans-unit>
        <trans-unit id="0fae837ec3710a78127e4c46d18775e05d83bfab" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.0.0-rc-2.</source>
          <target state="translated">这个规则在ESLint 1.0.0-rc-2中被引入。</target>
        </trans-unit>
        <trans-unit id="e6d687a3ec8e9e5e2c006bebf2c6d39a9b9e193f" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.0.0.</source>
          <target state="translated">这个规则是在ESLint 1.0.0中引入的。</target>
        </trans-unit>
        <trans-unit id="fdd4dd0af0c7ac98b3bc3458e813f63eda54538b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.2.0.</source>
          <target state="translated">这条规则是在ESLint 1.2.0中引入的。</target>
        </trans-unit>
        <trans-unit id="6f9dca1480d72ed30fc7619ba2113159d7cd78bd" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.3.0.</source>
          <target state="translated">这条规则是在ESLint 1.3.0中引入的。</target>
        </trans-unit>
        <trans-unit id="cd566e50179c8aa41da415f9330a418b9f8fffa3" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.4.0 and removed in 2.0.0-beta.3.</source>
          <target state="translated">这条规则在ESLint 1.4.0中引入,在2.0.0-beta.3中删除。</target>
        </trans-unit>
        <trans-unit id="8a4e16aa119e73b5bbc5848edd61c1a62e29fd1a" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.4.0.</source>
          <target state="translated">这条规则是在ESLint 1.4.0中引入的。</target>
        </trans-unit>
        <trans-unit id="76a5946c97a32256435372bd726587b5ede25a95" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.6.0.</source>
          <target state="translated">这条规则是在ESLint 1.6.0中引入的。</target>
        </trans-unit>
        <trans-unit id="7464555ca2178196c3754e81bf1f843e65019ee6" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.7.0.</source>
          <target state="translated">这条规则是在ESLint 1.7.0中引入的。</target>
        </trans-unit>
        <trans-unit id="06c23ddc2b85915de8efc2547e0828ccb7698482" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.8.0 and removed in 2.0.0-beta.3.</source>
          <target state="translated">这条规则在ESLint 1.8.0中引入,在2.0.0-beta.3中删除。</target>
        </trans-unit>
        <trans-unit id="ecb498aeb472146953cb795acce90ce8cfbe658b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.8.0.</source>
          <target state="translated">这条规则在ESLint 1.8.0中被引入。</target>
        </trans-unit>
        <trans-unit id="d71bdb52847cd69a78bae99762742e55d3654047" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 1.9.0.</source>
          <target state="translated">这条规则是在ESLint 1.9.0中引入的。</target>
        </trans-unit>
        <trans-unit id="0846ea821f6cedd21e94c7e12adca7ddb223fafa" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-alpha-1.</source>
          <target state="translated">这个规则是在ESLint 2.0.0-alpha-1中引入的。</target>
        </trans-unit>
        <trans-unit id="c712a022971ad200dbe8c004c2be62c0b4e0b00f" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-alpha-2.</source>
          <target state="translated">这个规则是在ESLint 2.0.0-alpha-2中引入的。</target>
        </trans-unit>
        <trans-unit id="564f72fdde7e54d0c7b589c84bb0dd7853800b72" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-beta.1.</source>
          <target state="translated">这个规则是在ESLint 2.0.0-beta.1中引入的。</target>
        </trans-unit>
        <trans-unit id="94d6b360cd9ef42b0e62eaf087979490427823aa" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-beta.2.</source>
          <target state="translated">这个规则在ESLint 2.0.0-beta.2中被引入。</target>
        </trans-unit>
        <trans-unit id="9649c1088345801ecd6f589d52de6c1232d6307d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-beta.3.</source>
          <target state="translated">这个规则是在ESLint 2.0.0-beta.3中引入的。</target>
        </trans-unit>
        <trans-unit id="5d680d77d0beed833592689309422ca3ce2d7e21" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0-rc.0.</source>
          <target state="translated">这个规则在ESLint 2.0.0-rc.0中被引入。</target>
        </trans-unit>
        <trans-unit id="66dbbf4920030e8d0cefe80a34b176ce05b61df0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.0.0.</source>
          <target state="translated">这个规则是在ESLint 2.0.0中引入的。</target>
        </trans-unit>
        <trans-unit id="b71385ef3c3e927c991a219f64384c985c1fcf90" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.10.0.</source>
          <target state="translated">这条规则在ESLint 2.10.0中被引入。</target>
        </trans-unit>
        <trans-unit id="da405f0ddea9153a0ac587fe4e9d8164d01b0c16" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.11.0.</source>
          <target state="translated">这条规则是在ESLint 2.11.0中引入的。</target>
        </trans-unit>
        <trans-unit id="60862391299a40ab31b71b4b297983dc0f6e212b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.12.0.</source>
          <target state="translated">这条规则是在ESLint 2.12.0中引入的。</target>
        </trans-unit>
        <trans-unit id="d03b31c8000a442f60231fc039e08815e8282c25" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.3.0.</source>
          <target state="translated">这条规则是在ESLint 2.3.0中引入的。</target>
        </trans-unit>
        <trans-unit id="7f16b8950c0bde6bb34ed5b7207fdc0b738fb630" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.5.0.</source>
          <target state="translated">这条规则是在ESLint 2.5.0中引入的。</target>
        </trans-unit>
        <trans-unit id="3f8a58c3d4da99f78398d3b64a91632e74df4c87" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 2.9.0.</source>
          <target state="translated">这个规则是在ESLint 2.9.0中引入的。</target>
        </trans-unit>
        <trans-unit id="a434d13be726419640646ee9cfdb8bd1785581c4" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.1.0.</source>
          <target state="translated">这条规则是在ESLint 3.1.0中引入的。</target>
        </trans-unit>
        <trans-unit id="858b084f5692784698710e54970501ccf2defec3" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.10.0.</source>
          <target state="translated">这条规则在ESLint 3.10.0中被引入。</target>
        </trans-unit>
        <trans-unit id="36cd7ddeb04a21f5897e3d4b76cce15e87b7993f" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.11.0.</source>
          <target state="translated">这个规则是在ESLint 3.11.0中引入的。</target>
        </trans-unit>
        <trans-unit id="661306b0ad7d6ddb13c6aa40cfdba38f3593d8f0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.12.0.</source>
          <target state="translated">这个规则是在ESLint 3.12.0中引入的。</target>
        </trans-unit>
        <trans-unit id="d6cb22ee8de2bdb3f0e4c59288bcbc8a30e84670" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.13.0.</source>
          <target state="translated">这条规则是在ESLint 3.13.0中引入的。</target>
        </trans-unit>
        <trans-unit id="015933b00ddaf61622019f00b91df5be845849c0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.14.0.</source>
          <target state="translated">这条规则是在ESLint 3.14.0中引入的。</target>
        </trans-unit>
        <trans-unit id="c7d64c709b1b89ba9e136d3032dd0f5798649309" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.15.0.</source>
          <target state="translated">这条规则是在ESLint 3.15.0中引入的。</target>
        </trans-unit>
        <trans-unit id="27e706065fbfda963ea99d5bd446422094fd7668" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.17.0.</source>
          <target state="translated">这个规则是在ESLint 3.17.0中引入的。</target>
        </trans-unit>
        <trans-unit id="e09ff4e9278081df15e096fbf4e58b20f023a5ba" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.2.0.</source>
          <target state="translated">这个规则是在ESLint 3.2.0中引入的。</target>
        </trans-unit>
        <trans-unit id="a85d7cc0623d3501b8bca704f4e41164c09a7508" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.3.0.</source>
          <target state="translated">这个规则是在ESLint 3.3.0中引入的。</target>
        </trans-unit>
        <trans-unit id="b3fdf6d7d417b00e1c641b827ad2d5a23756333b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.4.0.</source>
          <target state="translated">这个规则是在ESLint 3.4.0中引入的。</target>
        </trans-unit>
        <trans-unit id="081f1321385ea2db9cfc13a7ef6150816e60cfdf" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.5.0.</source>
          <target state="translated">这个规则是在ESLint 3.5.0中引入的。</target>
        </trans-unit>
        <trans-unit id="249f7539fd800e4a3448bebbb2a5d06ae7bdfbb1" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.8.0.</source>
          <target state="translated">这条规则在ESLint 3.8.0中被引入。</target>
        </trans-unit>
        <trans-unit id="1d3a88f535dd46014212822bfcdb7b92057ec03c" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 3.9.0.</source>
          <target state="translated">这个规则是在ESLint 3.9.0中引入的。</target>
        </trans-unit>
        <trans-unit id="bc1167ff56b2f569216be1b53cbdda085c3f5925" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.0.0-alpha.0.</source>
          <target state="translated">这个规则在ESLint 4.0.0-alpha.0中被引入。</target>
        </trans-unit>
        <trans-unit id="8e66018d7d2a9d9a93f9a651e08a252a3934f02b" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.0.0-alpha.1.</source>
          <target state="translated">这个规则在ESLint 4.0.0-alpha.1中被引入。</target>
        </trans-unit>
        <trans-unit id="2d0c5eb6d6e8a9c24913bcf68ed584d5108017be" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.0.0-beta.0.</source>
          <target state="translated">这个规则在ESLint 4.0.0-beta.0中被引入。</target>
        </trans-unit>
        <trans-unit id="4075da4b266c0716bb2a3425d000c5bcda9eba92" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.0.0-rc.0.</source>
          <target state="translated">这个规则在ESLint 4.0.0-rc.0中被引入。</target>
        </trans-unit>
        <trans-unit id="263b2d3768d21d7440422e01223bff30dee0ef66" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.10.0.</source>
          <target state="translated">这个规则在ESLint 4.10.0中被引入。</target>
        </trans-unit>
        <trans-unit id="23dfe0c95b1e5f030da59fd3fd60ce2334cd60e3" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.12.0.</source>
          <target state="translated">这个规则是在ESLint 4.12.0中引入的。</target>
        </trans-unit>
        <trans-unit id="d18235d7263ad097b73fc8033aad8ae250ea0e30" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.2.0.</source>
          <target state="translated">这个规则是在ESLint 4.2.0中引入的。</target>
        </trans-unit>
        <trans-unit id="4fcbf3e8c966c03a80f69bd99dc0d87087516dc6" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.6.0.</source>
          <target state="translated">这条规则在ESLint 4.6.0中被引入。</target>
        </trans-unit>
        <trans-unit id="c29a10377df13f0c37ec8db63b847477502e584e" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 4.9.0.</source>
          <target state="translated">这个规则是在ESLint 4.9.0中引入的。</target>
        </trans-unit>
        <trans-unit id="f8550879bfc78f693f7b041484cf06a1cd547e0e" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 5.0.0-alpha.3.</source>
          <target state="translated">这个规则在ESLint 5.0.0-alpha.3中被引入。</target>
        </trans-unit>
        <trans-unit id="418915a53d81a096edd9d904f41083006c174930" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 5.0.0.</source>
          <target state="translated">这个规则是在ESLint 5.0.0中引入的。</target>
        </trans-unit>
        <trans-unit id="8778f2ba95f794b36174b055c644cc679c9917a0" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 5.11.0.</source>
          <target state="translated">这个规则是在ESLint 5.11.0中引入的。</target>
        </trans-unit>
        <trans-unit id="1254815cfd5ae6a3473c9ae4729105dfd35da19f" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 5.15.0.</source>
          <target state="translated">这条规则是在ESLint 5.15.0中引入的。</target>
        </trans-unit>
        <trans-unit id="30dee8cf16e05b494ff0f1c742f6ab52422c2d28" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 5.3.0.</source>
          <target state="translated">这个规则是在ESLint 5.3.0中引入的。</target>
        </trans-unit>
        <trans-unit id="56ed5ba939eaef08ee30a77ef55edc5b4b03b38e" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 6.2.0.</source>
          <target state="translated">这条规则是在ESLint 6.2.0中引入的。</target>
        </trans-unit>
        <trans-unit id="f164dff149cab207f752d65fc42fa78c1b1bf72c" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 6.4.0.</source>
          <target state="translated">这条规则在ESLint 6.4.0中被引入。</target>
        </trans-unit>
        <trans-unit id="6d5ce8145cb2e6d14c5a11d1bd60fe572558217d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 6.7.0.</source>
          <target state="translated">这条规则在ESLint 6.7.0中被引入。</target>
        </trans-unit>
        <trans-unit id="c86d188cfefc7bd6c39b01dcfa55e30450e14943" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 7.0.0-alpha.0.</source>
          <target state="translated">这个规则在ESLint 7.0.0-alpha.0中被引入。</target>
        </trans-unit>
        <trans-unit id="5ca0f30b64975e1b1c782fab9b22d3a12f0dc017" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 7.1.0.</source>
          <target state="translated">这条规则是在ESLint 7.1.0中引入的。</target>
        </trans-unit>
        <trans-unit id="df0a5d4e99faf112f820ad6c8f88bae6141d4201" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 7.14.0.</source>
          <target state="translated">这条规则是在ESLint 7.14.0中引入的。</target>
        </trans-unit>
        <trans-unit id="05492ef0011bfd0908a0fc97667c6bbe2839056d" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 7.15.0.</source>
          <target state="translated">这条规则是在ESLint 7.15.0中引入的。</target>
        </trans-unit>
        <trans-unit id="d189cbd0a8452997a98b997ab6f161ad5393f36a" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 7.3.0.</source>
          <target state="translated">这个规则是在ESLint 7.3.0中引入的。</target>
        </trans-unit>
        <trans-unit id="0272b678588e3464f83ebf3e50c047cd7c4566bf" translate="yes" xml:space="preserve">
          <source>This rule was introduced in ESLint 7.4.0.</source>
          <target state="translated">这条规则在ESLint 7.4.0中被引入。</target>
        </trans-unit>
        <trans-unit id="505fc61fb68ad7eac9fbf317a8b027ff98db1afe" translate="yes" xml:space="preserve">
          <source>This rule will allow keywords to be preceded by an opening curly brace (&lt;code&gt;{&lt;/code&gt;). If you wish to alter this behavior, consider using the &lt;a href=&quot;block-spacing&quot;&gt;block-spacing&lt;/a&gt; rule.</source>
          <target state="translated">此规则将允许关键字前面带有一个大括号（ &lt;code&gt;{&lt;/code&gt; ）。如果要更改此行为，请考虑使用&lt;a href=&quot;block-spacing&quot;&gt;块间​​距&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="20fe84960dba868b1bee83459ec26e8090b503b5" translate="yes" xml:space="preserve">
          <source>This rule will catch blacklisted identifiers that are:</source>
          <target state="translated">这条规则将捕获黑名单上的标识符,这些标识符是。</target>
        </trans-unit>
        <trans-unit id="ace2e020df045c4b4290430e5453d75040eb46e7" translate="yes" xml:space="preserve">
          <source>This rule will catch disallowed identifiers that are:</source>
          <target state="translated">这条规则将捕获不允许的标识符,这些标识符是:</target>
        </trans-unit>
        <trans-unit id="7eb5eed91214ac1aae94e16a4b651e906d0ad590" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistency of spacing after the keywords &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt;, &lt;code&gt;finally&lt;/code&gt;, and &lt;code&gt;with&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; ， &lt;code&gt;do&lt;/code&gt; ， &lt;code&gt;switch&lt;/code&gt; ， &lt;code&gt;try&lt;/code&gt; ， &lt;code&gt;catch&lt;/code&gt; ， &lt;code&gt;finally&lt;/code&gt; ，以及 &lt;code&gt;with&lt;/code&gt; 规则，该规则将强制关键字后的间距一致。</target>
        </trans-unit>
        <trans-unit id="dcfcc88f46e54dda18d566394faa28bc296e5fe2" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistency of spacing after the start of a comment &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;/*&lt;/code&gt;. It also provides several exceptions for various documentation styles.</source>
          <target state="translated">此规则将在注释开始 &lt;code&gt;//&lt;/code&gt; /或 &lt;code&gt;/*&lt;/code&gt; 之后强制间隔的一致性。它还为各种文档样式提供了一些例外。</target>
        </trans-unit>
        <trans-unit id="8dfa11618d345f13d6dcd12dcc9d86af2a778106" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistency of spacing after the start of a line comment &lt;code&gt;//&lt;/code&gt;.</source>
          <target state="translated">此规则将强制在行注释 &lt;code&gt;//&lt;/code&gt; 之后开始间距的一致性。</target>
        </trans-unit>
        <trans-unit id="f5a3463495b63cee8f00d005edffd52a371dbf7b" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistency of spacing before blocks. It is only applied on blocks that don&amp;rsquo;t begin on a new line.</source>
          <target state="translated">该规则将强制在块之前保持间距的一致性。它仅适用于不以新行开头的块。</target>
        </trans-unit>
        <trans-unit id="899e832f0bb86e89cde9cb92bf01264670a49390" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistency of spacing before the keywords &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt;, &lt;code&gt;finally&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, &lt;code&gt;yield&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt; and variable declarations (&lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;var&lt;/code&gt;) and label statements.</source>
          <target state="translated">此规则将强制关键字前间距的一致性 &lt;code&gt;if&lt;/code&gt; ， &lt;code&gt;else&lt;/code&gt; ， &lt;code&gt;for&lt;/code&gt; ， &lt;code&gt;while&lt;/code&gt; ， &lt;code&gt;do&lt;/code&gt; ， &lt;code&gt;switch&lt;/code&gt; ， &lt;code&gt;throw&lt;/code&gt; ， &lt;code&gt;try&lt;/code&gt; ， &lt;code&gt;catch&lt;/code&gt; ， &lt;code&gt;finally&lt;/code&gt; ， &lt;code&gt;with&lt;/code&gt; ， &lt;code&gt;break&lt;/code&gt; ， &lt;code&gt;continue&lt;/code&gt; ， &lt;code&gt;return&lt;/code&gt; ， &lt;code&gt;function&lt;/code&gt; ， &lt;code&gt;yield&lt;/code&gt; ， &lt;code&gt;class&lt;/code&gt; 和变量声明（ &lt;code&gt;let&lt;/code&gt; ， &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;var&lt;/code&gt; ）和label语句。</target>
        </trans-unit>
        <trans-unit id="7ab2ddd96883c5601a31a0952609e729f28ed8c7" translate="yes" xml:space="preserve">
          <source>This rule will enforce consistent spacing directly inside of parentheses, by disallowing or requiring one or more spaces to the right of &lt;code&gt;(&lt;/code&gt; and to the left of &lt;code&gt;)&lt;/code&gt;.</source>
          <target state="translated">通过禁止或要求在 &lt;code&gt;(&lt;/code&gt; 或 &lt;code&gt;)&lt;/code&gt; 左侧的一个或多个空格，此规则将直接在括号内强制使用一致的间距。</target>
        </trans-unit>
        <trans-unit id="64502d44699c8fd75b6ff60a9772a5b144874128" translate="yes" xml:space="preserve">
          <source>This rule will raise a warning when it encounters a function expression wrapped in parentheses with no following invoking parentheses.</source>
          <target state="translated">当遇到用括号包裹的函数表达式,后面没有调用括号时,这条规则会发出警告。</target>
        </trans-unit>
        <trans-unit id="3643c6350c621113de6e30185b7a4873c306ccc3" translate="yes" xml:space="preserve">
          <source>This rule will warn when it encounters a reference to an identifier that has not yet been declared.</source>
          <target state="translated">当遇到对尚未声明的标识符的引用时,该规则会发出警告。</target>
        </trans-unit>
        <trans-unit id="deee32f0052a6211108d2a8cf31e11f7d7368c97" translate="yes" xml:space="preserve">
          <source>This rule would disallow the use of number literals that immediately lose precision at runtime when converted to a JS &lt;code&gt;Number&lt;/code&gt; due to 64-bit floating-point rounding.</source>
          <target state="translated">该规则将禁止使用数字文字，由于64位浮点舍入，在转换为JS &lt;code&gt;Number&lt;/code&gt; 时会立即在运行时失去精度。</target>
        </trans-unit>
        <trans-unit id="1aac283a5c8db3e909affa821ed372fee55531f6" translate="yes" xml:space="preserve">
          <source>This rule's configuration consists of an object with the following properties:</source>
          <target state="translated">该规则的配置由一个具有以下属性的对象组成。</target>
        </trans-unit>
        <trans-unit id="686680eef8d702bbfccdffade327d244725c31c8" translate="yes" xml:space="preserve">
          <source>This rule, in its default state, does not require any arguments. If you would like to enable one or more of the following you may pass an object with the options set as follows:</source>
          <target state="translated">该规则在其默认状态下不需要任何参数。如果您想启用以下一个或多个选项,您可以传递一个对象,其选项设置如下:</target>
        </trans-unit>
        <trans-unit id="f76749baa8bcf932d6af226607a409b5f06928d1" translate="yes" xml:space="preserve">
          <source>This rules requires a description when creating symbols.</source>
          <target state="translated">本规则在创建符号时需要说明。</target>
        </trans-unit>
        <trans-unit id="c0dfaa172d2d0fbecfbe10aea7c7cfdfe5fbe4fb" translate="yes" xml:space="preserve">
          <source>This saves the output into the &lt;code&gt;results.txt&lt;/code&gt; file.</source>
          <target state="translated">这会将输出保存到 &lt;code&gt;results.txt&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="3b159541e2337ac35e2095ddbe914c9d67ebbf08" translate="yes" xml:space="preserve">
          <source>This setting is similar to &lt;a href=&quot;command-line-interface#--no-inline-config&quot;&gt;--no-inline-config&lt;/a&gt; CLI option.</source>
          <target state="translated">此设置类似于&lt;a href=&quot;command-line-interface#--no-inline-config&quot;&gt;--no-inline-config&lt;/a&gt; CLI选项。</target>
        </trans-unit>
        <trans-unit id="70f0b4c78e3353c2cf50cf6616c689f7ee16a770" translate="yes" xml:space="preserve">
          <source>This setting is similar to &lt;a href=&quot;command-line-interface#--report-unused-disable-directives&quot;&gt;--report-unused-disable-directives&lt;/a&gt; CLI option, but doesn't fail linting (reports as &lt;code&gt;&quot;warn&quot;&lt;/code&gt; severity).</source>
          <target state="translated">此设置类似于&lt;a href=&quot;command-line-interface#--report-unused-disable-directives&quot;&gt;--report-unused-disable-directives&lt;/a&gt; CLI选项，但不会失败（报告为 &lt;code&gt;&quot;warn&quot;&lt;/code&gt; 严重性）。</target>
        </trans-unit>
        <trans-unit id="46894218d56351684b5188fefa742063dbd6acee" translate="yes" xml:space="preserve">
          <source>This setting mimics some of the default behavior from 0.x, but not all. If you don't want to use any of the recommended rules, you can delete this line.</source>
          <target state="translated">这个设置模仿了0.x的一些默认行为,但不是全部。如果你不想使用任何推荐的规则,你可以删除这一行。</target>
        </trans-unit>
        <trans-unit id="875fb57cf6d00cd8167af70a6cec4b5baceb791b" translate="yes" xml:space="preserve">
          <source>This should be rewritten like so:</source>
          <target state="translated">这应该是这样改写的。</target>
        </trans-unit>
        <trans-unit id="22d329895d12968d8e388d4a016d9447d24df47a" translate="yes" xml:space="preserve">
          <source>This syntax is very powerful, and can be used to precisely select many syntactic patterns in your code.</source>
          <target state="translated">这种语法非常强大,可以用来精确选择代码中的许多语法模式。</target>
        </trans-unit>
        <trans-unit id="c6fa14f74ba5c7c56fcdcd75a3d2c3a227de8b5a" translate="yes" xml:space="preserve">
          <source>This throws a &lt;code&gt;TypeError&lt;/code&gt; exception.</source>
          <target state="translated">这将引发 &lt;code&gt;TypeError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="7bf06011358f7568e5271850e42bc163cc698e3e" translate="yes" xml:space="preserve">
          <source>This typically reads, &quot;if the color equals red&quot;, which is arguably a more natural way to describe the comparison.</source>
          <target state="translated">这通常是 &quot;如果颜色等于红色&quot;,这可以说是一种比较自然的描述方式。</target>
        </trans-unit>
        <trans-unit id="f9a598ad54e5a40cedb347d08b1cc89bf10028a9" translate="yes" xml:space="preserve">
          <source>This was a roundabout way to find the variable because it was added after the fact by ESLint. The &lt;code&gt;window&lt;/code&gt; variable was in &lt;code&gt;Scope#through&lt;/code&gt; because the definition couldn't be found.</source>
          <target state="translated">这是查找变量的一种round回方式，因为它是ESLint在事实之后添加的。该 &lt;code&gt;window&lt;/code&gt; 变量是在 &lt;code&gt;Scope#through&lt;/code&gt; ，因为该定义未能找到。</target>
        </trans-unit>
        <trans-unit id="b95c2d2d9ce069899ffb2f9324062dd0c340f08c" translate="yes" xml:space="preserve">
          <source>This was confusing to rule developers as it seemed that rules shouldn't be in charge of validating their own severity. In 2.0.0, rules no longer need to check their own severity.</source>
          <target state="translated">这让规则开发者感到困惑,因为似乎规则不应该负责验证自己的严重性。在2.0.0中,规则不再需要检查自己的严重性。</target>
        </trans-unit>
        <trans-unit id="6a0a2571f7edd8fae2645c0661fe251dab9d8a80" translate="yes" xml:space="preserve">
          <source>This will affect you if you are extending from &lt;code&gt;eslint:recommended&lt;/code&gt;, and are enabling &lt;a href=&quot;../rules/no-multiple-empty-lines&quot;&gt;&lt;code&gt;no-multiple-empty-lines&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../rules/func-style&quot;&gt;&lt;code&gt;func-style&lt;/code&gt;&lt;/a&gt; with only a severity, such as:</source>
          <target state="translated">如果您是从 &lt;code&gt;eslint:recommended&lt;/code&gt; 扩展而来，并且只启用严重性，则启用&lt;a href=&quot;../rules/no-multiple-empty-lines&quot;&gt; &lt;code&gt;no-multiple-empty-lines&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../rules/func-style&quot;&gt; &lt;code&gt;func-style&lt;/code&gt; &lt;/a&gt;，这将对您造成影响，例如：</target>
        </trans-unit>
        <trans-unit id="ebd11a6343dc87d82fcd72aea0d593b42d7170c0" translate="yes" xml:space="preserve">
          <source>This will not change anything in most cases. If a configuration file in a subdirectory has &lt;code&gt;plugins&lt;/code&gt; defined, the plugins will be loaded from the subdirectory (or ancestor directories that include the current working directory if not found).</source>
          <target state="translated">在大多数情况下，这不会改变任何内容。如果在一个子目录中的配置文件 &lt;code&gt;plugins&lt;/code&gt; 定义插件将从子目录（或包括当前的工作目录，如果没有找到祖先目录）被加载。</target>
        </trans-unit>
        <trans-unit id="7922d7623662d9c671198216874744cb22441012" translate="yes" xml:space="preserve">
          <source>This will open up your editor so you can make changes. After that, you'll need to do a forced push to your branch:</source>
          <target state="translated">这将打开你的编辑器,这样你就可以进行修改。之后,你需要对你的分支进行强制推送。</target>
        </trans-unit>
        <trans-unit id="1e28b901c4ec23e324d1147022a9ffd9c884507c" translate="yes" xml:space="preserve">
          <source>Those can be replaced with the following code:</source>
          <target state="translated">这些可以用以下代码代替。</target>
        </trans-unit>
        <trans-unit id="b8fc349a6394c8ce4c8dac8225a5cc00409443c4" translate="yes" xml:space="preserve">
          <source>Those members are defined but not used in ESLint.</source>
          <target state="translated">这些成员被定义,但在ESLint中没有使用。</target>
        </trans-unit>
        <trans-unit id="208bdfdfa90cddc8a730aad0e918ccd51152a8d2" translate="yes" xml:space="preserve">
          <source>Three new rules have been enabled in the &lt;code&gt;eslint:recommended&lt;/code&gt; preset.</source>
          <target state="translated">&lt;code&gt;eslint:recommended&lt;/code&gt; 预设启用了三个新规则。</target>
        </trans-unit>
        <trans-unit id="79219f954c37e740f44b8eeedc1672e971acb7f4" translate="yes" xml:space="preserve">
          <source>Thus, the rule (without the object option) prohibits both of these:</source>
          <target state="translated">因此,该规则(不含对象选项)禁止这两种情况。</target>
        </trans-unit>
        <trans-unit id="92dfc8d078c02dadc9f36bf0c250a63d56acd93a" translate="yes" xml:space="preserve">
          <source>Tips for &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; 的提示：</target>
        </trans-unit>
        <trans-unit id="12248fedc6e3a517137e5a922a0d0e1269b1fca7" translate="yes" xml:space="preserve">
          <source>To add the upstream source for ESLint, run the following in your repository:</source>
          <target state="translated">要添加ESLint的上游源,请在你的仓库中运行以下代码。</target>
        </trans-unit>
        <trans-unit id="ab36771ca63c56e5d4a1ce88f90d00d60aeb3342" translate="yes" xml:space="preserve">
          <source>To allow for the colocation of comments that provide context with the directive, ESLint v7.0.0 adds the ability to append arbitrary text in directive comments by ignoring text following &lt;code&gt;--&lt;/code&gt; surrounded by whitespace. For example:</source>
          <target state="translated">为了允许为指令提供上下文的注释并置，ESLint v7.0.0通过忽略后面的文本 &lt;code&gt;--&lt;/code&gt; 由空格包围），增加了在指令注释中附加任意文本的功能。例如：</target>
        </trans-unit>
        <trans-unit id="e12adbc2086a36a101b25ac6980400eced9fc9c9" translate="yes" xml:space="preserve">
          <source>To avoid conflicts between rules, this rule does not report non-error values used in &lt;code&gt;throw&lt;/code&gt; statements in async functions, even though these lead to Promise rejections. To lint for these cases, use the &lt;a href=&quot;no-throw-literal&quot;&gt;&lt;code&gt;no-throw-literal&lt;/code&gt;&lt;/a&gt; rule.</source>
          <target state="translated">为了避免规则之间的冲突，该规则不会报告异步函数中的 &lt;code&gt;throw&lt;/code&gt; 语句中使用的非错误值，即使这些值会导致Promise拒绝。要在这些情况下起毛，请使用&lt;a href=&quot;no-throw-literal&quot;&gt; &lt;code&gt;no-throw-literal&lt;/code&gt; &lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="538f66a6468f3d6c647b9926379987f5a2085e2e" translate="yes" xml:space="preserve">
          <source>To avoid contradictions with other rules that require multiple spaces, this rule has an &lt;code&gt;exceptions&lt;/code&gt; option to ignore certain nodes.</source>
          <target state="translated">为避免与需要多个空格的其他规则冲突，此规则具有 &lt;code&gt;exceptions&lt;/code&gt; 选项，可忽略某些节点。</target>
        </trans-unit>
        <trans-unit id="e5398e44e4a94ea4634ab5e90d6cb035b83c3671" translate="yes" xml:space="preserve">
          <source>To avoid subtle bugs like this, it's better to always call these methods from &lt;code&gt;Object.prototype&lt;/code&gt;. For example, &lt;code&gt;foo.hasOwnProperty(&quot;bar&quot;)&lt;/code&gt; should be replaced with &lt;code&gt;Object.prototype.hasOwnProperty.call(foo, &quot;bar&quot;)&lt;/code&gt;.</source>
          <target state="translated">为避免此类细微的错误，最好始终从 &lt;code&gt;Object.prototype&lt;/code&gt; 调用这些方法。例如， &lt;code&gt;foo.hasOwnProperty(&quot;bar&quot;)&lt;/code&gt; 应该替换为 &lt;code&gt;Object.prototype.hasOwnProperty.call(foo, &quot;bar&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58dc0124f1404afc0ef74d2cf10ed37334f28828" translate="yes" xml:space="preserve">
          <source>To avoid this ambiguity, in 4.0 references to scoped plugins must include the scope. The config from above should be fixed to:</source>
          <target state="translated">为了避免这种歧义,在4.0中,对作用域插件的引用必须包括作用域。上面的配置应该固定为。</target>
        </trans-unit>
        <trans-unit id="ee30a5b5044b5098a2eec0a3715fc0eeef745ddd" translate="yes" xml:space="preserve">
          <source>To avoid this issue, one might require all single-line &lt;code&gt;if&lt;/code&gt; statements to appear directly after the conditional, without a linebreak:</source>
          <target state="translated">为避免此问题，可能需要所有单行 &lt;code&gt;if&lt;/code&gt; 语句直接出现在条件语句之后，而没有换行符：</target>
        </trans-unit>
        <trans-unit id="aac8c73ad1cc50758b5de5f9a9bdff0e8124c6f3" translate="yes" xml:space="preserve">
          <source>To catch config errors earlier, ESLint v6 will report a linting error if you are trying to configure a non-existent rule.</source>
          <target state="translated">为了更早地发现配置错误,如果你试图配置一个不存在的规则,ESLint v6会报告一个linting错误。</target>
        </trans-unit>
        <trans-unit id="cb843e3d53981deb8abc7dc005824cdecd1ade2e" translate="yes" xml:space="preserve">
          <source>To check state of a code path</source>
          <target state="translated">检查代码路径的状态</target>
        </trans-unit>
        <trans-unit id="4ff92f7a6568bfcddaebb533847e4e8212496d5a" translate="yes" xml:space="preserve">
          <source>To check whether or not this is reachable</source>
          <target state="translated">要检查是否可以到达</target>
        </trans-unit>
        <trans-unit id="3a959c0a9d587954730ee7b4356f17c6e132b1a2" translate="yes" xml:space="preserve">
          <source>To compare against an initialized variable that may or may not have an object value.</source>
          <target state="translated">与一个初始化的变量进行比较,这个变量可能有也可能没有对象值。</target>
        </trans-unit>
        <trans-unit id="62c512b7180a7c74f351c08380b6705d3c61abc0" translate="yes" xml:space="preserve">
          <source>To configure a rule which is defined within a plugin you have to prefix the rule ID with the plugin name and a &lt;code&gt;/&lt;/code&gt;. For example:</source>
          <target state="translated">要配置在插件中定义的规则，您必须在规则ID前面加上插件名称和 &lt;code&gt;/&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="31d56a381f7ad5b91ad260fe2d353e306ee0ccb3" translate="yes" xml:space="preserve">
          <source>To configure global variables inside of a configuration file, set the &lt;code&gt;globals&lt;/code&gt; configuration property to an object containing keys named for each of the global variables you want to use. For each global variable key, set the corresponding value equal to &lt;code&gt;&quot;writable&quot;&lt;/code&gt; to allow the variable to be overwritten or &lt;code&gt;&quot;readonly&quot;&lt;/code&gt; to disallow overwriting. For example:</source>
          <target state="translated">要在配置文件中配置全局变量，请将 &lt;code&gt;globals&lt;/code&gt; 配置属性设置为一个对象，该对象包含为要使用的每个全局变量命名的键。对于每个全局变量键，将对应的值设置为等于 &lt;code&gt;&quot;writable&quot;&lt;/code&gt; 以允许变量被覆盖，或设置为 &lt;code&gt;&quot;readonly&quot;&lt;/code&gt; 以禁止覆盖。例如：</target>
        </trans-unit>
        <trans-unit id="038570de33ddc446fb32433dab83190e57eb2224" translate="yes" xml:space="preserve">
          <source>To configure plugins inside of a configuration file, use the &lt;code&gt;plugins&lt;/code&gt; key, which contains a list of plugin names. The &lt;code&gt;eslint-plugin-&lt;/code&gt; prefix can be omitted from the plugin name.</source>
          <target state="translated">要在配置文件中配置插件，请使用 &lt;code&gt;plugins&lt;/code&gt; 键，其中包含插件名称列表。该 &lt;code&gt;eslint-plugin-&lt;/code&gt; 前缀可以从插件名称被省略。</target>
        </trans-unit>
        <trans-unit id="f6b6a8aa347c25fe69bff51062679d168f8ac129" translate="yes" xml:space="preserve">
          <source>To configure rules inside of a configuration file, use the &lt;code&gt;rules&lt;/code&gt; key along with an error level and any options you want to use. For example:</source>
          <target state="translated">要在配置文件中配置规则，请使用 &lt;code&gt;rules&lt;/code&gt; 键以及错误级别和要使用的任何选项。例如：</target>
        </trans-unit>
        <trans-unit id="4ebbfe48acca16cf580ee75882233871cf409bb0" translate="yes" xml:space="preserve">
          <source>To configure rules inside of a file using configuration comments, use a comment in the following format:</source>
          <target state="translated">要使用配置注释在文件内配置规则,请使用以下格式的注释。</target>
        </trans-unit>
        <trans-unit id="4290412e19f3d42c2eb3bae9e46c3533963451fd" translate="yes" xml:space="preserve">
          <source>To convert your configuration file, pass in the location of your &lt;code&gt;.jscs.json&lt;/code&gt; file using the &lt;code&gt;--jscs&lt;/code&gt; flag:</source>
          <target state="translated">要转换您的配置文件，请使用 &lt;code&gt;--jscs&lt;/code&gt; 标志传递 &lt;code&gt;.jscs.json&lt;/code&gt; 文件的位置：</target>
        </trans-unit>
        <trans-unit id="77785dc236e7b19dd9bed6daf0cc68f44f276c56" translate="yes" xml:space="preserve">
          <source>To create a new configuration, use &lt;code&gt;eslint --init&lt;/code&gt;.</source>
          <target state="translated">要创建新配置，请使用 &lt;code&gt;eslint --init&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce6ce0f45296644008f861b43c9c686e0dc163fc" translate="yes" xml:space="preserve">
          <source>To disable a specific rule on a specific line:</source>
          <target state="translated">要禁用特定行上的特定规则。</target>
        </trans-unit>
        <trans-unit id="0ac11ab6485b3bd3365938c2c8119a6d129eca53" translate="yes" xml:space="preserve">
          <source>To disable all inline config comments, use &lt;code&gt;noInlineConfig&lt;/code&gt; setting. For example:</source>
          <target state="translated">要禁用所有内联配置注释，请使用 &lt;code&gt;noInlineConfig&lt;/code&gt; 设置。例如：</target>
        </trans-unit>
        <trans-unit id="03e0c39d9d8219c16b6cbcfc45577e3c33b02ebf" translate="yes" xml:space="preserve">
          <source>To disable all rules on a specific line, use a line or block comment in one of the following formats:</source>
          <target state="translated">要禁用特定行的所有规则,请使用以下格式之一的行或块注释。</target>
        </trans-unit>
        <trans-unit id="271e327f6c0834035985f27ecece143d28b8459e" translate="yes" xml:space="preserve">
          <source>To disable multiple rules on a specific line:</source>
          <target state="translated">要禁用特定行上的多个规则。</target>
        </trans-unit>
        <trans-unit id="683c891a847acfa4dba3ef3ecf6ed604bdc365ca" translate="yes" xml:space="preserve">
          <source>To disable rule warnings in an entire file, put a &lt;code&gt;/* eslint-disable */&lt;/code&gt; block comment at the top of the file:</source>
          <target state="translated">要在整个文件中禁用规则警告，请在文件顶部放置 &lt;code&gt;/* eslint-disable */&lt;/code&gt; 块注释：</target>
        </trans-unit>
        <trans-unit id="f1745e3074c16577eb0d3188a55a10e1b867a9cd" translate="yes" xml:space="preserve">
          <source>To disable rules inside of a configuration file for a group of files, use the &lt;code&gt;overrides&lt;/code&gt; key along with a &lt;code&gt;files&lt;/code&gt; key. For example:</source>
          <target state="translated">要为一组文件禁用配置文件中的规则，请使用 &lt;code&gt;overrides&lt;/code&gt; 键和 &lt;code&gt;files&lt;/code&gt; 键。例如：</target>
        </trans-unit>
        <trans-unit id="b8f1f08d11bea7b02e90495a32037848c60c55f9" translate="yes" xml:space="preserve">
          <source>To ensure that the lexical declaration only applies to the current case clause wrap your clauses in blocks.</source>
          <target state="translated">为了确保词性声明只适用于当前的大小写子句,将你的子句用块包起来。</target>
        </trans-unit>
        <trans-unit id="203499bc397be69d693c53db5b7bda7324e98567" translate="yes" xml:space="preserve">
          <source>To indicate the npm module to use as your parser, specify it using the &lt;code&gt;parser&lt;/code&gt; option in your &lt;code&gt;.eslintrc&lt;/code&gt; file. For example, the following specifies to use Esprima instead of Espree:</source>
          <target state="translated">要指示要用作解析器的npm模块，请使用 &lt;code&gt;.eslintrc&lt;/code&gt; 文件中的 &lt;code&gt;parser&lt;/code&gt; 选项进行指定。例如，以下指定使用Esprima代替Espree：</target>
        </trans-unit>
        <trans-unit id="f1585cd31339333c37b0e7c375bfef062803fc36" translate="yes" xml:space="preserve">
          <source>To initialize a variable that may later be assign an object value.</source>
          <target state="translated">初始化一个变量,以后可能会分配一个对象值。</target>
        </trans-unit>
        <trans-unit id="d4f82ac6eaff3a37fd353e8d075c1052823073fd" translate="yes" xml:space="preserve">
          <source>To install Polyjuice:</source>
          <target state="translated">要安装Polyjuice。</target>
        </trans-unit>
        <trans-unit id="89616f5d48bf864dd46150c58347b2c372b8b623" translate="yes" xml:space="preserve">
          <source>To keep a sense of consistency when using generators this rule enforces a single position for the &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">为了在使用生成器时保持一致性，此规则对 &lt;code&gt;*&lt;/code&gt; 强制使用单个位置。</target>
        </trans-unit>
        <trans-unit id="014798f51883ce0b4cab2a7f0b2665430ff5f4e4" translate="yes" xml:space="preserve">
          <source>To keep the linting process efficient and unobtrusive, it is useful to verify the performance impact of new rules or modifications to existing rules.</source>
          <target state="translated">为了保持绒毛处理过程的高效和不引人注目,验证新规则或对现有规则的修改对性能的影响是有用的。</target>
        </trans-unit>
        <trans-unit id="7d2dc22ac67dd4ce52516c75cdd733df869e84d8" translate="yes" xml:space="preserve">
          <source>To learn more about JSON Schema, we recommend looking at some &lt;a href=&quot;http://json-schema.org/examples.html&quot;&gt;examples&lt;/a&gt; to start, and also reading &lt;a href=&quot;http://spacetelescope.github.io/understanding-json-schema/&quot;&gt;Understanding JSON Schema&lt;/a&gt; (a free ebook).</source>
          <target state="translated">要了解有关JSON Schema的更多信息，我们建议您看一些&lt;a href=&quot;http://json-schema.org/examples.html&quot;&gt;示例&lt;/a&gt;开始，并阅读《&lt;a href=&quot;http://spacetelescope.github.io/understanding-json-schema/&quot;&gt;了解JSON Schema》&lt;/a&gt;（一本免费的电子书）。</target>
        </trans-unit>
        <trans-unit id="79796a3f8f6c8d8fb890e20aed0a655344148bba" translate="yes" xml:space="preserve">
          <source>To learn more about JSON Schema, we recommend looking at some examples in &lt;a href=&quot;http://json-schema.org/learn/&quot;&gt;website&lt;/a&gt; to start, and also reading &lt;a href=&quot;http://spacetelescope.github.io/understanding-json-schema/&quot;&gt;Understanding JSON Schema&lt;/a&gt; (a free ebook).</source>
          <target state="translated">要了解有关JSON Schema的更多信息，建议您阅读&lt;a href=&quot;http://json-schema.org/learn/&quot;&gt;网站&lt;/a&gt;上的一些示例以开始学习，并阅读&amp;ldquo; &lt;a href=&quot;http://spacetelescope.github.io/understanding-json-schema/&quot;&gt;了解JSON Schema&amp;rdquo;&lt;/a&gt;（免费电子书）。</target>
        </trans-unit>
        <trans-unit id="ca9e344882212af185031bbdbaff4610a2de8177" translate="yes" xml:space="preserve">
          <source>To learn more about JSON Schema, we recommend looking at some examples in &lt;a href=&quot;https://json-schema.org/learn/&quot;&gt;website&lt;/a&gt; to start, and also reading &lt;a href=&quot;https://json-schema.org/understanding-json-schema/&quot;&gt;Understanding JSON Schema&lt;/a&gt; (a free ebook).</source>
          <target state="translated">要了解有关JSON Schema的更多信息，建议您阅读&lt;a href=&quot;https://json-schema.org/learn/&quot;&gt;网站&lt;/a&gt;上的一些示例以开始学习，还建议您阅读&lt;a href=&quot;https://json-schema.org/understanding-json-schema/&quot;&gt;了解JSON Schema&lt;/a&gt;（免费电子书）。</target>
        </trans-unit>
        <trans-unit id="3d8f5c39c2c8d40a0e743e69935a37baafecadf9" translate="yes" xml:space="preserve">
          <source>To make clear that the plugin requires ESLint to work correctly you have to declare ESLint as a &lt;code&gt;peerDependency&lt;/code&gt; in your &lt;code&gt;package.json&lt;/code&gt;. The plugin support was introduced in ESLint version &lt;code&gt;0.8.0&lt;/code&gt;. Ensure the &lt;code&gt;peerDependency&lt;/code&gt; points to ESLint &lt;code&gt;0.8.0&lt;/code&gt; or later.</source>
          <target state="translated">为了明确说明该插件要求ESLint正常工作，您必须在 &lt;code&gt;package.json&lt;/code&gt; &lt;code&gt;peerDependency&lt;/code&gt; 声明为peerDependency。插件支持在ESLint &lt;code&gt;0.8.0&lt;/code&gt; 版中引入。确保 &lt;code&gt;peerDependency&lt;/code&gt; 指向ESLint &lt;code&gt;0.8.0&lt;/code&gt; 或更高版本。</target>
        </trans-unit>
        <trans-unit id="7f0072825b5e8b7c9c452a6d4e5adffbaf9e06d2" translate="yes" xml:space="preserve">
          <source>To make the upgrade process easier, we've introduced the &lt;a href=&quot;../rules/indent-legacy&quot;&gt;&lt;code&gt;indent-legacy&lt;/code&gt;&lt;/a&gt; rule as a snapshot of the &lt;code&gt;indent&lt;/code&gt; rule from 3.x. If you run into issues from the &lt;code&gt;indent&lt;/code&gt; rule when you upgrade, you should be able to use the &lt;code&gt;indent-legacy&lt;/code&gt; rule to replicate the 3.x behavior. However, the &lt;code&gt;indent-legacy&lt;/code&gt; rule is deprecated and will not receive bugfixes or improvements in the future, so you should eventually switch back to the &lt;code&gt;indent&lt;/code&gt; rule.</source>
          <target state="translated">为了简化升级过程，我们引入了&lt;a href=&quot;../rules/indent-legacy&quot;&gt; &lt;code&gt;indent-legacy&lt;/code&gt; &lt;/a&gt;规则作为3.x版 &lt;code&gt;indent&lt;/code&gt; 规则的快照。如果您在升级时遇到 &lt;code&gt;indent&lt;/code&gt; 规则的问题，则应该能够使用 &lt;code&gt;indent-legacy&lt;/code&gt; 规则来复制3.x行为。但是， &lt;code&gt;indent-legacy&lt;/code&gt; 规则已被弃用，将来也不会收到错误修正或改进，因此您最终应切换 &lt;code&gt;indent&lt;/code&gt; 规则。</target>
        </trans-unit>
        <trans-unit id="06b4a6393df43365fbe0ff6d73f66711fea04a4b" translate="yes" xml:space="preserve">
          <source>To make this rule ignore specific comments, set the &lt;code&gt;ignorePattern&lt;/code&gt; option to a string pattern that will be passed to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt; constructor&lt;/a&gt;.</source>
          <target state="translated">要使此规则忽略特定的注释，请将 &lt;code&gt;ignorePattern&lt;/code&gt; 选项设置为将传递给&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; 构造函数&lt;/a&gt;的字符串模式。</target>
        </trans-unit>
        <trans-unit id="c45b0a04793c13b7a0abac51b4665eb87ba73c97" translate="yes" xml:space="preserve">
          <source>To pass into a function where an object is expected.</source>
          <target state="translated">要传递到一个函数中,在该函数中预期有一个对象。</target>
        </trans-unit>
        <trans-unit id="83e3945e063cd92d025529797a0272c100afe72e" translate="yes" xml:space="preserve">
          <source>To prevent calling the callback multiple times it is important to &lt;code&gt;return&lt;/code&gt; anytime the callback is triggered outside of the main function body. Neglecting this technique often leads to issues where you do something more than once. For example, in the case of an HTTP request, you may try to send HTTP headers more than once leading Node.js to &lt;code&gt;throw&lt;/code&gt; a &lt;code&gt;Can't render headers after they are sent to the client.&lt;/code&gt; error.</source>
          <target state="translated">为了防止多次调用该回调，重要的是在该回调在主体函数体之外被触发时随时 &lt;code&gt;return&lt;/code&gt; 。忽略此技术通常会导致您执行不止一次的问题。例如，在一个HTTP请求的情况下，你可能会试图发送的HTTP头不止一次领先的Node.js来 &lt;code&gt;throw&lt;/code&gt; 一 &lt;code&gt;Can't render headers after they are sent to the client.&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="a0be1e74e739008ed7d10977cc1e906c88cb6fa1" translate="yes" xml:space="preserve">
          <source>To programmatically set &lt;code&gt;.eslintrc.*&lt;/code&gt; options not supported above (such as &lt;code&gt;extends&lt;/code&gt;, &lt;code&gt;overrides&lt;/code&gt; and &lt;code&gt;settings&lt;/code&gt;), define them in a config object passed to &lt;code&gt;baseConfig&lt;/code&gt; instead.</source>
          <target state="translated">要以编程方式设置上面不支持的 &lt;code&gt;.eslintrc.*&lt;/code&gt; 选项（例如 &lt;code&gt;extends&lt;/code&gt; ， &lt;code&gt;overrides&lt;/code&gt; 和 &lt;code&gt;settings&lt;/code&gt; ），请在传递给 &lt;code&gt;baseConfig&lt;/code&gt; 的配置对象中定义它们。</target>
        </trans-unit>
        <trans-unit id="201bfabb446b5a5e524d44ebbd491ddebd41f0f7" translate="yes" xml:space="preserve">
          <source>To propose a change to an existing rule, &lt;a href=&quot;pull-requests&quot;&gt;create a pull request&lt;/a&gt; or &lt;a href=&quot;https://github.com/eslint/eslint/issues/new?template=RULE_CHANGE.md&quot;&gt;new issue&lt;/a&gt; and fill out the template.</source>
          <target state="translated">要提出对现有规则的更改，请&lt;a href=&quot;pull-requests&quot;&gt;创建请求请求&lt;/a&gt;或&lt;a href=&quot;https://github.com/eslint/eslint/issues/new?template=RULE_CHANGE.md&quot;&gt;新问题，&lt;/a&gt;然后填写模板。</target>
        </trans-unit>
        <trans-unit id="e83198b0a74df694fcf2b005dd304829d6849799" translate="yes" xml:space="preserve">
          <source>To report a security vulnerability in ESLint, please use our &lt;a href=&quot;https://hackerone.com/eslint&quot;&gt;HackerOne program&lt;/a&gt;.</source>
          <target state="translated">要报告ESLint中的安全漏洞，请使用我们的&lt;a href=&quot;https://hackerone.com/eslint&quot;&gt;HackerOne程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b567fa067e888b6361b686f01a36f861a714890e" translate="yes" xml:space="preserve">
          <source>To report unused &lt;code&gt;eslint-disable&lt;/code&gt; comments, use &lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; setting. For example:</source>
          <target state="translated">要报告未使用 &lt;code&gt;eslint-disable&lt;/code&gt; 注释，请使用 &lt;code&gt;reportUnusedDisableDirectives&lt;/code&gt; 设置。例如：</target>
        </trans-unit>
        <trans-unit id="43674a214ae4f8884b5b999f624a4924ae51e2e3" translate="yes" xml:space="preserve">
          <source>To restore the previous behavior of a string option like &lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt;, replace &lt;code&gt;&quot;never&quot;&lt;/code&gt; with &lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt; in the example above.</source>
          <target state="translated">要恢复字符串选项（如 &lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt; 的先前行为，请在上面的示例中将 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 替换为 &lt;code&gt;&quot;always-multiline&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93f41caa6af8c347bb85a914ee52d8627febd940" translate="yes" xml:space="preserve">
          <source>To restore the previous options for the rule, you can configure it as follows:</source>
          <target state="translated">要恢复规则之前的选项,可以按以下方式配置。</target>
        </trans-unit>
        <trans-unit id="a1bd13d216162d39f3a12526c2dd871cd53799b1" translate="yes" xml:space="preserve">
          <source>To restrict the use of all Node.js core imports (via https://github.com/nodejs/node/tree/master/lib):</source>
          <target state="translated">限制使用所有的Node.js核心导入(通过https://github.com/nodejs/node/tree/master/lib)。</target>
        </trans-unit>
        <trans-unit id="1c78dcabe0d43517abe82ce3e2716690299693b6" translate="yes" xml:space="preserve">
          <source>To restrict the use of all Node.js core modules (via https://github.com/nodejs/node/tree/master/lib):</source>
          <target state="translated">要限制所有Node.js核心模块的使用(通过https://github.com/nodejs/node/tree/master/lib)。</target>
        </trans-unit>
        <trans-unit id="c55df0a6472dd4b4e66373936e321df946ca7541" translate="yes" xml:space="preserve">
          <source>To return from a function where an object is expected.</source>
          <target state="translated">从函数中返回一个预期对象。</target>
        </trans-unit>
        <trans-unit id="721ccdb4417d969301a1c4093826c5db56bffc2f" translate="yes" xml:space="preserve">
          <source>To run ESLint on Node.js, you must have npm installed. If npm is not installed, follow the instructions here: https://www.npmjs.com/</source>
          <target state="translated">要在Node.js上运行ESLint,你必须安装npm。如果没有安装npm,请按照这里的说明进行操作:https://www.npmjs.com/。</target>
        </trans-unit>
        <trans-unit id="5f23973ffba8e1e7876140b6ac9341e6c0d2443f" translate="yes" xml:space="preserve">
          <source>To run ESLint with this formatter, you can use the &lt;code&gt;-f&lt;/code&gt; (or &lt;code&gt;--format&lt;/code&gt;) command line flag:</source>
          <target state="translated">要使用此格式化程序运行ESLint，可以使用 &lt;code&gt;-f&lt;/code&gt; （或 &lt;code&gt;--format&lt;/code&gt; ）命令行标志：</target>
        </trans-unit>
        <trans-unit id="7ef00b1683cdab559312cccf7254b9d3cdecbcf2" translate="yes" xml:space="preserve">
          <source>To run ESLint with this formatter, you can use the &lt;code&gt;-f&lt;/code&gt; (or &lt;code&gt;--formatter&lt;/code&gt;) command line flag:</source>
          <target state="translated">要使用此格式化程序运行ESLint，可以使用 &lt;code&gt;-f&lt;/code&gt; （或 &lt;code&gt;--formatter&lt;/code&gt; ）命令行标志：</target>
        </trans-unit>
        <trans-unit id="609fc520c5dbe052bd07c90db967ce8109decb8f" translate="yes" xml:space="preserve">
          <source>To see a longer list of results (more than 10), set the environment variable to another value such as &lt;code&gt;TIMING=50&lt;/code&gt; or &lt;code&gt;TIMING=all&lt;/code&gt;.</source>
          <target state="translated">要查看更长的结果列表（超过10个），请将环境变量设置为另一个值，例如 &lt;code&gt;TIMING=50&lt;/code&gt; 或 &lt;code&gt;TIMING=all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a03320f309e4584fa0a9625239401ea837f08db0" translate="yes" xml:space="preserve">
          <source>To specify environments in a configuration file, use the &lt;code&gt;env&lt;/code&gt; key and specify which environments you want to enable by setting each to &lt;code&gt;true&lt;/code&gt;. For example, the following enables the browser and Node.js environments:</source>
          <target state="translated">要在配置文件中指定环境，请使用 &lt;code&gt;env&lt;/code&gt; 键并通过将每个环境设置为 &lt;code&gt;true&lt;/code&gt; 来指定要启用的环境。例如，以下启用浏览器和Node.js环境：</target>
        </trans-unit>
        <trans-unit id="495e8e76dc85c614865914b900b3e79f15c83ac1" translate="yes" xml:space="preserve">
          <source>To specify environments using a comment inside of your JavaScript file, use the following format:</source>
          <target state="translated">要在JavaScript文件中使用注释指定环境,请使用以下格式。</target>
        </trans-unit>
        <trans-unit id="871bade776d5dd80ffa710cb32ea4c1f403ba185" translate="yes" xml:space="preserve">
          <source>To specify globals using a comment inside of your JavaScript file, use the following format:</source>
          <target state="translated">要在JavaScript文件中使用注释指定globals,请使用以下格式。</target>
        </trans-unit>
        <trans-unit id="4d99775a8ebadc5b547b76108d1fcd2ee02b18da" translate="yes" xml:space="preserve">
          <source>To specify processors for a specific kind of files, use the combination of the &lt;code&gt;overrides&lt;/code&gt; key and the &lt;code&gt;processor&lt;/code&gt; key. For example, the following uses the processor &lt;code&gt;a-plugin/markdown&lt;/code&gt; for &lt;code&gt;*.md&lt;/code&gt; files.</source>
          <target state="translated">要为特定类型的文件指定处理器，请使用 &lt;code&gt;overrides&lt;/code&gt; 键和 &lt;code&gt;processor&lt;/code&gt; 键的组合。例如，以下代码对 &lt;code&gt;*.md&lt;/code&gt; 文件使用处理器 &lt;code&gt;a-plugin/markdown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="151531400cce4c0ae71fe4f4c92832cb966d2c79" translate="yes" xml:space="preserve">
          <source>To specify processors for specific kinds of files, use the combination of the &lt;code&gt;overrides&lt;/code&gt; key and the &lt;code&gt;processor&lt;/code&gt; key. For example, the following uses the processor &lt;code&gt;a-plugin/markdown&lt;/code&gt; for &lt;code&gt;*.md&lt;/code&gt; files.</source>
          <target state="translated">要为特定类型的文件指定处理器，请使用 &lt;code&gt;overrides&lt;/code&gt; 键和 &lt;code&gt;processor&lt;/code&gt; 键的组合。例如，以下代码对 &lt;code&gt;*.md&lt;/code&gt; 文件使用处理器 &lt;code&gt;a-plugin/markdown&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="723b7b22d828cba77882c9fa33c876e8ac01c597" translate="yes" xml:space="preserve">
          <source>To specify processors in a configuration file, use the &lt;code&gt;processor&lt;/code&gt; key with the concatenated string of a plugin name and a processor name by a slash. For example, the following enables the processor &lt;code&gt;a-processor&lt;/code&gt; that the plugin &lt;code&gt;a-plugin&lt;/code&gt; provided:</source>
          <target state="translated">要在配置文件中指定处理器，请使用 &lt;code&gt;processor&lt;/code&gt; 密钥，并在插件名称和处理器名称的连接字符串后加斜杠。例如，以下命令启用了插件 &lt;code&gt;a-plugin&lt;/code&gt; 提供的处理器 &lt;code&gt;a-processor&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="67c36e41c644a39ed1cc6fc2e78067a36986c4cc" translate="yes" xml:space="preserve">
          <source>To temporarily disable rule warnings in your file, use block comments in the following format:</source>
          <target state="translated">要暂时禁用文件中的规则警告,请使用以下格式的块注释。</target>
        </trans-unit>
        <trans-unit id="eb0874bfc2758468b0b50d63606f56c7bf6e56d2" translate="yes" xml:space="preserve">
          <source>To test one rule explicitly, combine the &lt;code&gt;--no-eslintrc&lt;/code&gt;, and &lt;code&gt;--rule&lt;/code&gt; options:</source>
          <target state="translated">要显式测试一条规则，请结合使用 &lt;code&gt;--no-eslintrc&lt;/code&gt; 和 &lt;code&gt;--rule&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="891f46c7dc6414e9bb18032c28d627aeff17b6b1" translate="yes" xml:space="preserve">
          <source>To use a processor, add its ID to a &lt;code&gt;processor&lt;/code&gt; section in the config file. Processor ID is a concatenated string of plugin name and processor name with a slash as a separator. This can also be added to a &lt;code&gt;overrides&lt;/code&gt; section of the config, to specify which processors should handle which files.</source>
          <target state="translated">要使用处理器，请将其ID添加到配置文件中的 &lt;code&gt;processor&lt;/code&gt; 部分。处理器ID是插件名称和处理器名称的连接字符串，以斜杠作为分隔符。也可以将其添加到配置的 &lt;code&gt;overrides&lt;/code&gt; 部分，以指定哪些处理器应处理哪些文件。</target>
        </trans-unit>
        <trans-unit id="6c4e8891d882a51f0c8905192b3c8f74ba87a214" translate="yes" xml:space="preserve">
          <source>To use custom parsers in tests, we could use &lt;code&gt;parser&lt;/code&gt; property with a package name or file path. However, if a package name was given, it's unclear where the tester should load the parser package from because the tester doesn't know which files are running the tester. In ESLint v6.0.0, &lt;code&gt;RuleTester&lt;/code&gt; disallows &lt;code&gt;parser&lt;/code&gt; property with a package name.</source>
          <target state="translated">要在测试中使用自定义解析器，我们可以将 &lt;code&gt;parser&lt;/code&gt; 属性与包名称或文件路径一起使用。但是，如果给出了程序包名称，则不清楚测试人员应该从何处加载解析器程序包，因为测试人员不知道哪些文件正在运行测试程序。在ESLint v6.0.0中， &lt;code&gt;RuleTester&lt;/code&gt; 不允许使用包名称的 &lt;code&gt;parser&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="e57cc33fc747f8014fd7902fcb60a357b4a1a111" translate="yes" xml:space="preserve">
          <source>To use the rule in ESLint, you would use the unprefixed plugin name, followed by a slash, followed by the rule name. So if this plugin were named &lt;code&gt;eslint-plugin-myplugin&lt;/code&gt;, then in your configuration you'd refer to the rule by the name &lt;code&gt;myplugin/dollar-sign&lt;/code&gt;. Example: &lt;code&gt;&quot;rules&quot;: {&quot;myplugin/dollar-sign&quot;: 2}&lt;/code&gt;.</source>
          <target state="translated">要在ESLint中使用该规则，您将使用无前缀的插件名称，后跟一个斜杠，然后是规则名称。因此，如果此插件名为 &lt;code&gt;eslint-plugin-myplugin&lt;/code&gt; ，则在您的配置中，您将通过名称 &lt;code&gt;myplugin/dollar-sign&lt;/code&gt; 引用该规则。例如： &lt;code&gt;&quot;rules&quot;: {&quot;myplugin/dollar-sign&quot;: 2}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff0243bfd180221afc684bd012fe971d219f3914" translate="yes" xml:space="preserve">
          <source>To use this rule you either need to &lt;a href=&quot;../user-guide/configuring#specifying-environments&quot;&gt;use the &lt;code&gt;es6&lt;/code&gt; environment&lt;/a&gt; or &lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;set &lt;code&gt;ecmaVersion&lt;/code&gt; to &lt;code&gt;6&lt;/code&gt; in &lt;code&gt;parserOptions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要使用这个规则，你要么需要&lt;a href=&quot;../user-guide/configuring#specifying-environments&quot;&gt;使用 &lt;code&gt;es6&lt;/code&gt; 环境&lt;/a&gt;或&lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;设置 &lt;code&gt;ecmaVersion&lt;/code&gt; 至 &lt;code&gt;6&lt;/code&gt; 中 &lt;code&gt;parserOptions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f00b91a2a4b27b5dd6a4d6851934df0ad3c4918" translate="yes" xml:space="preserve">
          <source>Token traversal methods</source>
          <target state="translated">代币遍历方法</target>
        </trans-unit>
        <trans-unit id="f588750190bb407612d4d3cc95313c9f0366ef4b" translate="yes" xml:space="preserve">
          <source>Trailing commas in object literals are valid according to the ECMAScript 5 (and ECMAScript 3!) spec, however IE8 (when not in IE8 document mode) and below will throw an error when it encounters trailing commas in JavaScript.</source>
          <target state="translated">根据ECMAScript 5(和ECMAScript 3!)的规范,对象字面中的尾部逗号是有效的,但是IE8(当不在IE8文档模式下时)及以下版本在遇到JavaScript中的尾部逗号时会抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="a5e53b1f9f6188b4f85c8629c6f48dab687880d7" translate="yes" xml:space="preserve">
          <source>Trailing commas in object literals are valid according to the ECMAScript 5 (and ECMAScript 3!) spec. However, IE8 (when not in IE8 document mode) and below will throw an error when it encounters trailing commas in JavaScript.</source>
          <target state="translated">根据ECMAScript 5(和ECMAScript 3!)的规范,对象文字中的尾部逗号是有效的。然而,IE8(当不在IE8文档模式下时)及以下版本在遇到JavaScript中的尾部逗号时,会抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="42f8e54908dd12f18038e48f38d2a5fc210a145c" translate="yes" xml:space="preserve">
          <source>Trailing commas simplify adding and removing items to objects and arrays, since only the lines you are modifying must be touched. Another argument in favor of trailing commas is that it improves the clarity of diffs when an item is added or removed from an object or array:</source>
          <target state="translated">后面的逗号简化了在对象和数组中添加和删除项目的过程,因为只有你要修改的行才必须被触及。另一个支持尾部逗号的论点是,当从对象或数组中添加或删除一个项目时,它可以提高差异的清晰度。</target>
        </trans-unit>
        <trans-unit id="1e1791fddec4ea7e52795883f2a6849c505d7048" translate="yes" xml:space="preserve">
          <source>Trailing newlines in non-empty files are a common UNIX idiom. Benefits of trailing newlines include the ability to concatenate or append to files as well as output files to the terminal without interfering with shell prompts.</source>
          <target state="translated">在非空文件中使用尾部的换行符是一种常见的UNIX习惯。尾部换行的好处包括能够连接或追加文件,以及在不干扰shell提示的情况下向终端输出文件。</target>
        </trans-unit>
        <trans-unit id="e53d9b4b888b92bc998ba043c0f679b9430de24e" translate="yes" xml:space="preserve">
          <source>Treat var as Block Scoped (block-scoped-var)</source>
          <target state="translated">将var处理为块范围(块范围-var)。</target>
        </trans-unit>
        <trans-unit id="4f3d6d9d6adfe503a76d26f73c73b70e417c1fa1" translate="yes" xml:space="preserve">
          <source>Triggering the callback within a nested function</source>
          <target state="translated">触发嵌套函数中的回调。</target>
        </trans-unit>
        <trans-unit id="d6036734261e1407ac1587614623993db6543f63" translate="yes" xml:space="preserve">
          <source>Turn this rule off if you do not care about allowing whitespace around the dot or before the opening bracket before properties of objects if they are on the same line.</source>
          <target state="translated">如果你不在乎在点的周围或对象的属性前的开口括号前允许留白,如果它们在同一条线上,请关闭这个规则。</target>
        </trans-unit>
        <trans-unit id="a6fb61d5bdbd5563cef73b185d48d5a12fd87675" translate="yes" xml:space="preserve">
          <source>Two blank lines should always be used in the following circumstances:</source>
          <target state="translated">在下列情况下,应始终使用两个空行:</target>
        </trans-unit>
        <trans-unit id="23543bb6cae6e3faed2a4ea7359e13f3351fb804" translate="yes" xml:space="preserve">
          <source>Two identical test conditions in the same chain are almost always a mistake in the code. Unless there are side effects in the expressions, a duplicate will evaluate to the same &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; value as the identical expression earlier in the chain, meaning that its branch can never execute.</source>
          <target state="translated">同一链中的两个相同的测试条件几乎总是代码中的错误。除非表达式中有副作用，否则重复项的计算结果与链中早先相同表达式的 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 值相同，这意味着其分支永远无法执行。</target>
        </trans-unit>
        <trans-unit id="6af0c5213fca9f8826d4d810bb2b07a12f3adeda" translate="yes" xml:space="preserve">
          <source>Two new rules have been added to the &lt;a href=&quot;configuring#using-eslintrecommended&quot;&gt;&lt;code&gt;eslint:recommended&lt;/code&gt;&lt;/a&gt; config:</source>
          <target state="translated">&lt;a href=&quot;configuring#using-eslintrecommended&quot;&gt; &lt;code&gt;eslint:recommended&lt;/code&gt; &lt;/a&gt;添加了两个新规则：recommended config：</target>
        </trans-unit>
        <trans-unit id="89012465840cf6a663f53d89d53a93ba89e2ab72" translate="yes" xml:space="preserve">
          <source>Two spaces, not longer and no tabs: Google, npm, Node.js, Idiomatic, Felix</source>
          <target state="translated">两个空格,不长,没有标签。谷歌,npm,Node.js,Idiomatic,Felix。</target>
        </trans-unit>
        <trans-unit id="91d3d6d9190bf1f4632f0830dbb8f846ba8033ea" translate="yes" xml:space="preserve">
          <source>Typing mistakes and misunderstandings about where semicolons are required can lead to semicolons that are unnecessary. While not technically an error, extra semicolons can cause confusion when reading code.</source>
          <target state="translated">打字错误和对需要分号的地方的误解会导致不必要的分号。虽然从技术上讲不是错误,但额外的分号可能会在阅读代码时造成混乱。</target>
        </trans-unit>
        <trans-unit id="c262f4ef00e7b518727dd018478998b99f6f627d" translate="yes" xml:space="preserve">
          <source>Unary operators: &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;</source>
          <target state="translated">一元运算符： &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;+&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b03881360fb7fb50c7b50f0425294244e2ef376" translate="yes" xml:space="preserve">
          <source>Under non ES2015 environment, it might be ignored merely.</source>
          <target state="translated">在非ES2015环境下,可能会被忽略。</target>
        </trans-unit>
        <trans-unit id="6117511d586c10e8d8d5e71cb63042e9de4e8759" translate="yes" xml:space="preserve">
          <source>Under the strict mode, &lt;code&gt;this&lt;/code&gt; keywords outside of classes or class-like objects might be &lt;code&gt;undefined&lt;/code&gt; and raise a &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="translated">在严格模式下， &lt;code&gt;this&lt;/code&gt; 在类或类对象之外的关键字可能 &lt;code&gt;undefined&lt;/code&gt; 并引发 &lt;code&gt;TypeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="435196d8251f5646211334f3e3f54b6b93ccb010" translate="yes" xml:space="preserve">
          <source>Understanding ES6: Accessor Properties</source>
          <target state="translated">了解ES6:Accessor属性</target>
        </trans-unit>
        <trans-unit id="83561aad3017c9c3ace3fd6ce8b94644c28a5684" translate="yes" xml:space="preserve">
          <source>Understanding ES6: Generators</source>
          <target state="translated">了解ES6:发电机</target>
        </trans-unit>
        <trans-unit id="ab72f7b4a6ebe0315e7168be210b1247953821fe" translate="yes" xml:space="preserve">
          <source>Understanding JavaScript&amp;rsquo;s &amp;lsquo;undefined&amp;rsquo; | JavaScript, JavaScript...</source>
          <target state="translated">了解JavaScript的&amp;ldquo;未定义&amp;rdquo; JavaScript，JavaScript ...</target>
        </trans-unit>
        <trans-unit id="35bb1c8bbba51795c3d24686d2f47445bc17d0b6" translate="yes" xml:space="preserve">
          <source>Understanding JavaScript's Function.prototype.bind</source>
          <target state="translated">了解JavaScript的Function.prototype.bind。</target>
        </trans-unit>
        <trans-unit id="bb8b88dbe8776e9f43a70c7c21cdbf0f5fb1ce3a" translate="yes" xml:space="preserve">
          <source>Unfortunately, this introduces a high potential for confusion since the code author likely meant to write:</source>
          <target state="translated">不幸的是,这带来了很大的混淆可能性,因为代码作者很可能是想写。</target>
        </trans-unit>
        <trans-unit id="d48b11fe7b81214ca619d17883fb3645e879279b" translate="yes" xml:space="preserve">
          <source>Unicode includes the characters which are made with multiple code points. RegExp character class syntax (&lt;code&gt;/[abc]/&lt;/code&gt;) cannot handle characters which are made by multiple code points as a character; those characters will be dissolved to each code point. For example, &lt;code&gt;❇️&lt;/code&gt; is made by &lt;code&gt;❇&lt;/code&gt; (&lt;code&gt;U+2747&lt;/code&gt;) and VARIATION SELECTOR-16 (&lt;code&gt;U+FE0F&lt;/code&gt;). If this character is in RegExp character class, it will match to either &lt;code&gt;❇&lt;/code&gt; (&lt;code&gt;U+2747&lt;/code&gt;) or VARIATION SELECTOR-16 (&lt;code&gt;U+FE0F&lt;/code&gt;) rather than &lt;code&gt;❇️&lt;/code&gt;.</source>
          <target state="translated">Unicode包含由多个代码点组成的字符。 RegExp字符类语法（ &lt;code&gt;/[abc]/&lt;/code&gt; ）无法处理由多个代码点组成的字符。这些字符将被分解到每个代码点。例如， &lt;code&gt;❇️&lt;/code&gt; 由 &lt;code&gt;❇&lt;/code&gt; （ &lt;code&gt;U+2747&lt;/code&gt; ）和VARIATION SELECTOR-16（ &lt;code&gt;U+FE0F&lt;/code&gt; ）组成。如果此字符属于RegExp字符类，它将与 &lt;code&gt;❇&lt;/code&gt; （ &lt;code&gt;U+2747&lt;/code&gt; ）或VARIATION SELECTOR-16（ &lt;code&gt;U+FE0F&lt;/code&gt; ）而不是 &lt;code&gt;❇️&lt;/code&gt; 匹配。</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">单元测试</target>
        </trans-unit>
        <trans-unit id="ed268ddbd2a8fdb80c5132135ac42034d7585ab8" translate="yes" xml:space="preserve">
          <source>Unlike statically-typed languages which enforce that a function returns a specified type of value, JavaScript allows different code paths in a function to return different types of values.</source>
          <target state="translated">与静态类型的语言强制要求函数返回指定类型的值不同,JavaScript允许函数中的不同代码路径返回不同类型的值。</target>
        </trans-unit>
        <trans-unit id="e8255c66699d44e4e1f6dce4f3bf4faf99e81e92" translate="yes" xml:space="preserve">
          <source>Unlike string literals in JavaScript, string literals within JSX attributes can&amp;rsquo;t contain escaped quotes. If you want to have e.g. a double quote within a JSX attribute value, you have to use single quotes as string delimiter.</source>
          <target state="translated">与JavaScript中的字符串文字不同，JSX属性中的字符串文字不能包含转义引号。如果要在JSX属性值中包含双引号，则必须使用单引号作为字符串定界符。</target>
        </trans-unit>
        <trans-unit id="61fa2bfb22938ebb5c32094dc4ee0f186aaf0a6b" translate="yes" xml:space="preserve">
          <source>Unquoted property names / object keys in JavaScript</source>
          <target state="translated">JavaScript中未引用的属性名/对象键值</target>
        </trans-unit>
        <trans-unit id="7ff0c77b350a5aadeaa42ace88086b4b816bf51c" translate="yes" xml:space="preserve">
          <source>Unrecognized properties in config files now cause a fatal error</source>
          <target state="translated">配置文件中未识别的属性现在会导致一个致命的错误。</target>
        </trans-unit>
        <trans-unit id="c6b529fb98699d6aa6137219a8f553527e34bcea" translate="yes" xml:space="preserve">
          <source>Up until now, ESLint has ignored the following files by default:</source>
          <target state="translated">到目前为止,ESLint默认忽略了以下文件。</target>
        </trans-unit>
        <trans-unit id="c4e7eac40b9e4375a3173106eced6219a9686a47" translate="yes" xml:space="preserve">
          <source>Up until now, ESLint has resolved the following paths relative to the directory path of the &lt;em&gt;entry&lt;/em&gt; configuration file:</source>
          <target state="translated">到目前为止，ESLint已解决以下与&lt;em&gt;条目&lt;/em&gt;配置文件的目录路径有关的路径：</target>
        </trans-unit>
        <trans-unit id="bac9e5ab73111bc19c6b0aa90418a5f77b3cb1e5" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;postprocess&lt;/code&gt; method to additionally transform the &lt;code&gt;fix&lt;/code&gt; property of reported problems. All autofixable problems will have a &lt;code&gt;fix&lt;/code&gt; property, which is an object with the following schema:</source>
          <target state="translated">更新 &lt;code&gt;postprocess&lt;/code&gt; 方法以附加地转换已报告问题的 &lt;code&gt;fix&lt;/code&gt; 属性。所有可自动 &lt;code&gt;fix&lt;/code&gt; 问题都将具有fix属性，该属性是具有以下架构的对象：</target>
        </trans-unit>
        <trans-unit id="f19b54eaec0be934d9ffb5d7c086f2c3d8bbf5d2" translate="yes" xml:space="preserve">
          <source>Updating the Code</source>
          <target state="translated">更新代码</target>
        </trans-unit>
        <trans-unit id="0081f6b97ccbd31d4c40065dd8731e13aa80ae30" translate="yes" xml:space="preserve">
          <source>Updating the Commit Message</source>
          <target state="translated">更新提交消息</target>
        </trans-unit>
        <trans-unit id="31fdeb34a4f4bc8a7b882018ab434e09d2defd44" translate="yes" xml:space="preserve">
          <source>Usage Examples</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="ef470880f7ed6bef65c435b54eee6bca41e5a18b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; instead of &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;. This avoids type coercion errors.</source>
          <target state="translated">使用 &lt;code&gt;===&lt;/code&gt; 和 &lt;code&gt;!==&lt;/code&gt; 代替 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; 。这样可以避免类型强制错误。</target>
        </trans-unit>
        <trans-unit id="011ef28ad58486d3ab69359c58102b7363b2266a" translate="yes" xml:space="preserve">
          <source>Use Node.js-specific features</source>
          <target state="translated">使用Node.js特有的功能</target>
        </trans-unit>
        <trans-unit id="ff690daa270b01343fad8ceed7486bec02ce4b10" translate="yes" xml:space="preserve">
          <source>Use a Plugin</source>
          <target state="translated">使用插件</target>
        </trans-unit>
        <trans-unit id="835f0fad91a05bc46b363064581ce1b2272a0c54" translate="yes" xml:space="preserve">
          <source>Use a formatter</source>
          <target state="translated">使用格式器</target>
        </trans-unit>
        <trans-unit id="19d3d762409d13fdb5e17c521bdcc191df2d866e" translate="yes" xml:space="preserve">
          <source>Use dashes between words.</source>
          <target state="translated">在单词之间使用破折号。</target>
        </trans-unit>
        <trans-unit id="7b394f6356786472bb5d094c3bc4c3f3a803fefd" translate="yes" xml:space="preserve">
          <source>Use formatters</source>
          <target state="translated">使用格式化文件</target>
        </trans-unit>
        <trans-unit id="9066ba971418973fca320cd33a59b04d2bf395e0" translate="yes" xml:space="preserve">
          <source>Use of operator assignment shorthand is a stylistic choice. Leaving this rule turned off would allow developers to choose which style is more readable on a case-by-case basis.</source>
          <target state="translated">使用运算符赋值速记是一种风格上的选择。如果不关闭这一规则,开发者就可以根据具体情况选择哪种风格更易读。</target>
        </trans-unit>
        <trans-unit id="b86bbb341b0e64d3538dc061bfeb6f85388244ee" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;Array&lt;/code&gt; constructor to construct a new array is generally discouraged in favor of array literal notation because of the single-argument pitfall and because the &lt;code&gt;Array&lt;/code&gt; global may be redefined. The exception is when the Array constructor is used to intentionally create sparse arrays of a specified size by giving the constructor a single numeric argument.</source>
          <target state="translated">通常不建议使用 &lt;code&gt;Array&lt;/code&gt; 构造函数构造新数组，而建议使用数组文字表示法，这是因为存在单参数陷阱，并且可能会重新定义 &lt;code&gt;Array&lt;/code&gt; 全局变量。例外是当使用Array构造函数通过为构造函数赋予单个数字参数有意创建指定大小的稀疏数组时。</target>
        </trans-unit>
        <trans-unit id="26a7add0d95cdf823b32ae21e2e3c0d2f08e62bf" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;working-on-issues#issue-labels&quot;&gt;labels of the issue you are working on&lt;/a&gt; to determine the best tag.</source>
          <target state="translated">使用&lt;a href=&quot;working-on-issues#issue-labels&quot;&gt;您正在处理的问题&lt;/a&gt;的标签来确定最佳标签。</target>
        </trans-unit>
        <trans-unit id="1cfc5a59f9b895a45cc3cf53842207d4f3bebd6d" translate="yes" xml:space="preserve">
          <source>Useless backreference is a possible error in the code. It usually indicates that the regular expression does not work as intended.</source>
          <target state="translated">无用的反向引用是代码中可能出现的错误。它通常表明正则表达式没有按照预期的方式工作。</target>
        </trans-unit>
        <trans-unit id="bec249e659662f7d5947bf09a1ea1d4a552885b0" translate="yes" xml:space="preserve">
          <source>User Guide</source>
          <target state="translated">用户指南</target>
        </trans-unit>
        <trans-unit id="5ca23839cda095745735c75553a12cf7908955e0" translate="yes" xml:space="preserve">
          <source>User-provided regular expressions in rule options are parsed with the unicode flag</source>
          <target state="translated">在规则选项中,用户提供的正则表达式会用unicode标志进行解析。</target>
        </trans-unit>
        <trans-unit id="7fd4dcddd3c0916bd4f60e031948757e96a9d5fb" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&quot;eslint:all&quot;&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;&quot;eslint:all&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1bfa835d3b3d9b6466c63ac32420431a606ac4b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2ba04df69fc28f857795f88a23c9275ba3ebf7e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;allow&lt;/code&gt; list, we can override and allow specific operators.</source>
          <target state="translated">使用 &lt;code&gt;allow&lt;/code&gt; 列表，我们可以覆盖并允许特定的运算符。</target>
        </trans-unit>
        <trans-unit id="c928729edb2b2cddd950bdbb1bdc2400601f8027" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;description&lt;/code&gt; promotes easier debugging: when a symbol is logged the description is used:</source>
          <target state="translated">使用 &lt;code&gt;description&lt;/code&gt; 可以简化调试：记录符号时，将使用描述：</target>
        </trans-unit>
        <trans-unit id="20bce9c62cd08c2e7b72a20378cd436bb7459b13" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;javascript:&lt;/code&gt; URLs is considered by some as a form of &lt;code&gt;eval&lt;/code&gt;. Code passed in &lt;code&gt;javascript:&lt;/code&gt; URLs has to be parsed and evaluated by the browser in the same way that &lt;code&gt;eval&lt;/code&gt; is processed.</source>
          <target state="translated">使用 &lt;code&gt;javascript:&lt;/code&gt; URL被某些人视为 &lt;code&gt;eval&lt;/code&gt; 的一种形式。在 &lt;code&gt;javascript:&lt;/code&gt; 传递的代码： URL必须由浏览器以与评估 &lt;code&gt;eval&lt;/code&gt; 相同的方式进行解析和评估。</target>
        </trans-unit>
        <trans-unit id="7d3ca8cf5331a50fc0f41fdb41e8a387c87ec5d1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;return await&lt;/code&gt; inside an &lt;code&gt;async function&lt;/code&gt; keeps the current function in the call stack until the Promise that is being awaited has resolved, at the cost of an extra microtask before resolving the outer Promise. &lt;code&gt;return await&lt;/code&gt; can also be used in a try/catch statement to catch errors from another function that returns a Promise.</source>
          <target state="translated">在 &lt;code&gt;async function&lt;/code&gt; 内部使用 &lt;code&gt;return await&lt;/code&gt; 会将当前函数保留在调用堆栈中，直到解决了正在等待的Promise为止，但要付出额外的微任务，才能解决外部Promise。还可以在try / catch语句中使用 &lt;code&gt;return await&lt;/code&gt; 来捕获来自另一个返回Promise的函数的错误。</target>
        </trans-unit>
        <trans-unit id="7736010ecd5cb06e1bd0f2122d0622ef44859f84" translate="yes" xml:space="preserve">
          <source>Using Configuration Comments</source>
          <target state="translated">使用配置注释</target>
        </trans-unit>
        <trans-unit id="dbd293c2b3a5260fa83b1710464219faa5a14998" translate="yes" xml:space="preserve">
          <source>Using Configuration Files</source>
          <target state="translated">使用配置文件</target>
        </trans-unit>
        <trans-unit id="5dc143959128e38d9a55d127c3233709b9ccb511" translate="yes" xml:space="preserve">
          <source>Using Different Options for Line and Block Comments</source>
          <target state="translated">使用行和块注释的不同选项</target>
        </trans-unit>
        <trans-unit id="eeb7f893b5d295199ac44ad44dd9b3270246f3bd" translate="yes" xml:space="preserve">
          <source>Using Environment Variables</source>
          <target state="translated">使用环境变量</target>
        </trans-unit>
        <trans-unit id="b302e76ff285b7e457c22f8d88c69b64b865b32c" translate="yes" xml:space="preserve">
          <source>Using a Shareable Config</source>
          <target state="translated">使用可共享配置</target>
        </trans-unit>
        <trans-unit id="e0c468455ec70051b77f083d9eccde45f228ea57" translate="yes" xml:space="preserve">
          <source>Using a configuration file</source>
          <target state="translated">使用配置文件</target>
        </trans-unit>
        <trans-unit id="2cc5fc29ca8bb9b59b9fff0159b64a0e0aa2b748" translate="yes" xml:space="preserve">
          <source>Using a shareable configuration package</source>
          <target state="translated">使用可共享的配置包</target>
        </trans-unit>
        <trans-unit id="619cd389a4db55eac7086b03b5cfa54636ecf9b8" translate="yes" xml:space="preserve">
          <source>Using a single &lt;code&gt;import&lt;/code&gt; statement per module will make the code clearer because you can see everything being imported from that module on one line.</source>
          <target state="translated">每个模块使用单个 &lt;code&gt;import&lt;/code&gt; 语句将使代码更清晰，因为您可以看到从该模块导入的所有内容都在一行上。</target>
        </trans-unit>
        <trans-unit id="e6fa437c6c23d5b7b45da7a2e2a1d10e28a8688b" translate="yes" xml:space="preserve">
          <source>Using an Alternate File</source>
          <target state="translated">使用备用文件</target>
        </trans-unit>
        <trans-unit id="586259f4885483121f27c4e9aa07069bd6c9cda2" translate="yes" xml:space="preserve">
          <source>Using eslintIgnore in package.json</source>
          <target state="translated">在package.json中使用eslintIgnore。</target>
        </trans-unit>
        <trans-unit id="1b207cb89b9319ffb89553d14d6cf162c46b7f56" translate="yes" xml:space="preserve">
          <source>Using message placeholders</source>
          <target state="translated">使用信息占位符</target>
        </trans-unit>
        <trans-unit id="3e16a605232a4a1c356a288a74f6943a34b8ae6f" translate="yes" xml:space="preserve">
          <source>Using selectors in the &lt;code&gt;no-restricted-syntax&lt;/code&gt; rule can give you a lot of control over problematic patterns in your codebase, without needing to write custom rules to detect each pattern.</source>
          <target state="translated">在 &lt;code&gt;no-restricted-syntax&lt;/code&gt; 规则中使用选择器可以使您对代码库中有问题的模式进行大量控制，而无需编写自定义规则来检测每个模式。</target>
        </trans-unit>
        <trans-unit id="accb6ab3309644f22a59e564f296b91db2b9ed86" translate="yes" xml:space="preserve">
          <source>Using stdin</source>
          <target state="translated">使用stdin</target>
        </trans-unit>
        <trans-unit id="8ce680923ed405f0b52194a8fd5d25c5e6caea79" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&quot;always&quot;&lt;/code&gt; option means that this rule will report any comments which start with a lowercase letter. This is the default configuration for this rule.</source>
          <target state="translated">使用 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 选项意味着该规则将报告以小写字母开头的所有注释。这是此规则的默认配置。</target>
        </trans-unit>
        <trans-unit id="96d576d0cd2c820dcea748257a03f18a8f838d88" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&quot;never&quot;&lt;/code&gt; option means that this rule will report any comments which start with an uppercase letter.</source>
          <target state="translated">使用 &lt;code&gt;&quot;never&quot;&lt;/code&gt; 选项意味着该规则将报告以大写字母开头的所有注释。</target>
        </trans-unit>
        <trans-unit id="d2998154fd0b30ddea4d0f0a30a540b6234a2665" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;void&lt;/code&gt; operator to generate the value of &lt;code&gt;undefined&lt;/code&gt; if necessary.</source>
          <target state="translated">必要时使用 &lt;code&gt;void&lt;/code&gt; 运算符生成 &lt;code&gt;undefined&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="44db3e7e42ba5ebb8bf1cf0e5de90b5c7351d5d0" translate="yes" xml:space="preserve">
          <source>Using the configuration from a plugin</source>
          <target state="translated">使用插件的配置</target>
        </trans-unit>
        <trans-unit id="d8a14a71e022c4c1cc64b31add3a38d0148f7afa" translate="yes" xml:space="preserve">
          <source>Using this rule with version control systems</source>
          <target state="translated">在版本控制系统中使用此规则</target>
        </trans-unit>
        <trans-unit id="8ca2c430d89057de6cb5c35279ea3569d34d0136" translate="yes" xml:space="preserve">
          <source>Usually, the code should be refactored to create all the promises at once, then get access to the results using &lt;code&gt;Promise.all()&lt;/code&gt;. Otherwise, each successive operation will not start until the previous one has completed.</source>
          <target state="translated">通常，应重构代码以一次创建所有的 &lt;code&gt;Promise.all()&lt;/code&gt; ，然后使用Promise.all（）访问结果。否则，每个后续操作将在上一个操作完成之前开始。</target>
        </trans-unit>
        <trans-unit id="cb8af0b089c8e16de1808bbf42dbab1812ea017b" translate="yes" xml:space="preserve">
          <source>Valid Code</source>
          <target state="translated">有效代码</target>
        </trans-unit>
        <trans-unit id="532e17316f9909fba79f94428471eb6888d1b255" translate="yes" xml:space="preserve">
          <source>Variable Declarations</source>
          <target state="translated">变量声明</target>
        </trans-unit>
        <trans-unit id="6d5e51d3d0dfe28a6c4746735fcea731cc9e3349" translate="yes" xml:space="preserve">
          <source>Variable Shadowing</source>
          <target state="translated">可变影子</target>
        </trans-unit>
        <trans-unit id="f34af863a0250ddb43caba08acbf9b7f07738053" translate="yes" xml:space="preserve">
          <source>Variable Sorting (sort-vars)</source>
          <target state="translated">变量排序(排序变量</target>
        </trans-unit>
        <trans-unit id="2bd0e8a368c0c0738f15dfd8df4c9fa0b30a21c3" translate="yes" xml:space="preserve">
          <source>Variable interface</source>
          <target state="translated">可变接口</target>
        </trans-unit>
        <trans-unit id="6d8103227eb16ff6b41d4c197ddfa518ef072c15" translate="yes" xml:space="preserve">
          <source>Variable names should be formatted in camel case with the first letter being lowercase and the first letter of each subsequent word being uppercase. The first word of a variable name should be a noun (not a verb) to avoid confusion with functions. Do not use underscore for variable names.</source>
          <target state="translated">变量名的格式应该是骆驼大小写,第一个字母为小写,后面每个单词的第一个字母为大写。变量名的第一个字应该是名词(不是动词),以避免与函数混淆。变量名不要使用下划线。</target>
        </trans-unit>
        <trans-unit id="3944885d1531d2b22b8820788659f91568e08837" translate="yes" xml:space="preserve">
          <source>VariableDeclarator</source>
          <target state="translated">VariableDeclarator</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="85379bf6ac3527cdbeb09a4791aad3097a8d3c57" translate="yes" xml:space="preserve">
          <source>Variables can be declared at any point in JavaScript code using &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;const&lt;/code&gt;. There are many styles and preferences related to the declaration of variables, and one of those is deciding on how many variable declarations should be allowed in a single function.</source>
          <target state="translated">可以使用 &lt;code&gt;var&lt;/code&gt; ， &lt;code&gt;let&lt;/code&gt; 或 &lt;code&gt;const&lt;/code&gt; 在JavaScript代码的任何位置声明变量。有许多与变量声明相关的样式和首选项，其中之一是确定单个函数中应允许多少个变量声明。</target>
        </trans-unit>
        <trans-unit id="b737513f2b96c7e55dfed83a96a4d58ff87a2661" translate="yes" xml:space="preserve">
          <source>Variables defined in &lt;code&gt;/* global */&lt;/code&gt; comments.</source>
          <target state="translated">在 &lt;code&gt;/* global */&lt;/code&gt; 注释中定义的变量。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
