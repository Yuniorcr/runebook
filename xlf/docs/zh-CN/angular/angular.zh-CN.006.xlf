<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="ac650fccd8ead68e2d8c45cd5891eb0840e3f4a2" translate="yes" xml:space="preserve">
          <source>Declaring directives</source>
          <target state="translated">宣布指令</target>
        </trans-unit>
        <trans-unit id="2bc45504ae00fbf29fe8388adb2891f26d16a064" translate="yes" xml:space="preserve">
          <source>Decodes an encoded URL parameter or query-string key.</source>
          <target state="translated">解码一个已编码的URL参数或查询字符串键。</target>
        </trans-unit>
        <trans-unit id="8aee91813b451b3778fab17f3e6d531cd57b5197" translate="yes" xml:space="preserve">
          <source>Decodes an encoded URL parameter or query-string value.</source>
          <target state="translated">解码一个编码的URL参数或查询字符串值。</target>
        </trans-unit>
        <trans-unit id="2038623fc71103952b2ba258516c5f3d7840ecde" translate="yes" xml:space="preserve">
          <source>Decodes the hash from the provided string</source>
          <target state="translated">从提供的字符串中解码哈希值</target>
        </trans-unit>
        <trans-unit id="7a932704d6c6ef1ef267af7766d9f2e2ad68535b" translate="yes" xml:space="preserve">
          <source>Decodes the path from the provided string</source>
          <target state="translated">根据提供的字符串对路径进行解码</target>
        </trans-unit>
        <trans-unit id="dd7d5e9ea24bd4ef7c1fe30602bb817b06e46326" translate="yes" xml:space="preserve">
          <source>Decodes the search objects from the provided string</source>
          <target state="translated">根据提供的字符串对搜索对象进行解码</target>
        </trans-unit>
        <trans-unit id="062e159b6481b23409f9d9fb73b36ad762dc5f1f" translate="yes" xml:space="preserve">
          <source>Decorate &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; properties</source>
          <target state="translated">装饰 &lt;code&gt;input&lt;/code&gt; 和 &lt;code&gt;output&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="efae1157004840ce53744bf4910848b2a54d6036" translate="yes" xml:space="preserve">
          <source>Decorated and data-bound class members must be public.</source>
          <target state="translated">装饰和数据绑定的类成员必须是公共的。</target>
        </trans-unit>
        <trans-unit id="8d20855dde10821727be4973f1a1b332029694d1" translate="yes" xml:space="preserve">
          <source>Decorated component class members must be public. You cannot make an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property private or protected.</source>
          <target state="translated">装饰的组件类成员必须是公共的。您不能将 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 属性设为私有或受保护。</target>
        </trans-unit>
        <trans-unit id="75585dc43ebb9a44de9edabbf4fcb972f67e5b5a" translate="yes" xml:space="preserve">
          <source>Decorator that declares a DOM event to listen for, and provides a handler method to run when that event occurs.</source>
          <target state="translated">装饰器,它声明了一个DOM事件的监听,并提供了一个在该事件发生时运行的处理方法。</target>
        </trans-unit>
        <trans-unit id="06f314686cda74dbcdc6072d3d30b7b552f3828a" translate="yes" xml:space="preserve">
          <source>Decorator that marks a DOM property as a host-binding property and supplies configuration metadata. Angular automatically checks host property bindings during change detection, and if a binding changes it updates the host element of the directive.</source>
          <target state="translated">装饰器,将一个DOM属性标记为主机绑定属性,并提供配置元数据。Angular在变化检测过程中会自动检查host属性绑定,如果绑定发生变化,就会更新指令的host元素。</target>
        </trans-unit>
        <trans-unit id="542fac39a0c25257bafa494b67a691039e7fe190" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as an Angular component and provides configuration metadata that determines how the component should be processed, instantiated, and used at runtime.</source>
          <target state="translated">装饰器,将一个类标记为Angular组件,并提供配置元数据,决定组件在运行时应如何处理、实例化和使用。</target>
        </trans-unit>
        <trans-unit id="54fadbc3c296510749dca2013335bb14188c6861" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as an Angular directive. You can define your own directives to attach custom behavior to elements in the DOM.</source>
          <target state="translated">装饰器,将一个类标记为Angular指令。你可以定义自己的指令,将自定义行为附加到DOM中的元素。</target>
        </trans-unit>
        <trans-unit id="147b75641348b8313862ccda39948337f00188dd" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as an NgModule and supplies configuration metadata.</source>
          <target state="translated">标记一个类为NgModule并提供配置元数据的装饰器。</target>
        </trans-unit>
        <trans-unit id="2c2429c1549c508d15ecd2b546db50f3c94e5597" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as available to be provided and injected as a dependency.</source>
          <target state="translated">装饰器,将一个类标记为可提供并作为依赖关系注入。</target>
        </trans-unit>
        <trans-unit id="39326538b31e6f6885bca1ca78653f5efcdec9dd" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class as pipe and supplies configuration metadata.</source>
          <target state="translated">标记一个类为管道并提供配置元数据的装饰器。</target>
        </trans-unit>
        <trans-unit id="b2032e24d27125e464324d9b7df0505927afa011" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class field as an input property and supplies configuration metadata. The input property is bound to a DOM property in the template. During change detection, Angular automatically updates the data property with the DOM property's value.</source>
          <target state="translated">装饰器,将一个类字段标记为输入属性,并提供配置元数据。输入属性被绑定到模板中的DOM属性。在变化检测时,Angular会自动用DOM属性的值更新数据属性。</target>
        </trans-unit>
        <trans-unit id="da683e3ad3ee83805b1fd0e2479630efc8c206e2" translate="yes" xml:space="preserve">
          <source>Decorator that marks a class field as an output property and supplies configuration metadata. The DOM property bound to the output property is automatically updated during change detection.</source>
          <target state="translated">装饰器,将类字段标记为输出属性,并提供配置元数据。在检测变化的过程中,绑定到输出属性的DOM属性会自动更新。</target>
        </trans-unit>
        <trans-unit id="a2e23b650a15e5c693ca1445133d5ee60d9d20b4" translate="yes" xml:space="preserve">
          <source>Decorators</source>
          <target state="translated">Decorators</target>
        </trans-unit>
        <trans-unit id="da3808ca96b01e8fd16e2a06a7564a7822eb3e4b" translate="yes" xml:space="preserve">
          <source>Decorators are functions that modify JavaScript classes. Angular defines a number of decorators that attach specific kinds of metadata to classes, so that the system knows what those classes mean and how they should work.</source>
          <target state="translated">装饰器是修改JavaScript类的函数。Angular定义了许多装饰器,这些装饰器将特定种类的元数据附加到类中,以便系统知道这些类的含义以及它们应该如何工作。</target>
        </trans-unit>
        <trans-unit id="046771e00752578919124510d90fd88750570b5d" translate="yes" xml:space="preserve">
          <source>Decreases the number of pending request</source>
          <target state="translated">减少待处理请求的数量</target>
        </trans-unit>
        <trans-unit id="08b0acb88b65a7c7a047365717b6a16f6993ebf7" translate="yes" xml:space="preserve">
          <source>Default &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; configuration for projects in the workspace.</source>
          <target state="translated">工作空间中项目的默认&lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt;配置。</target>
        </trans-unit>
        <trans-unit id="e30eaec489000b4a7a0ca6c7d0d4a10f2c02171f" translate="yes" xml:space="preserve">
          <source>Default &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration for projects in the workspace.</source>
          <target state="translated">工作空间中项目的默认&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;配置。</target>
        </trans-unit>
        <trans-unit id="113972ed85a44c2d6f2d83e8313a8702055ff3c6" translate="yes" xml:space="preserve">
          <source>Default Architect builders and targets</source>
          <target state="translated">默认的建筑设计师和目标</target>
        </trans-unit>
        <trans-unit id="63f359affa8c9e1087e61e45f3bfcc30f98d18a8" translate="yes" xml:space="preserve">
          <source>Default architect configuration</source>
          <target state="translated">默认架构配置</target>
        </trans-unit>
        <trans-unit id="a242d3cf5b2a9c6afb60ed18be622df851cb377b" translate="yes" xml:space="preserve">
          <source>Default is currently false.</source>
          <target state="translated">目前默认为false。</target>
        </trans-unit>
        <trans-unit id="e8ac2fc6220ae2ee87143ccb049cecea94c63ada" translate="yes" xml:space="preserve">
          <source>Default size-budget type and threshholds for all or parts of your app. You can configure the builder to report a warning or an error when the output reaches or exceeds a threshold size. See &lt;a href=&quot;build#configure-size-budgets&quot;&gt;Configure size budgets&lt;/a&gt;. (Not available in &lt;code&gt;test&lt;/code&gt; section.)</source>
          <target state="translated">应用程序全部或部分的默认大小预算类型和阈值。您可以将构建器配置为在输出达到或超过阈值大小时报告警告或错误。请参阅&lt;a href=&quot;build#configure-size-budgets&quot;&gt;配置大小预算&lt;/a&gt;。（在 &lt;code&gt;test&lt;/code&gt; 部分中不可用。）</target>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">Default:</target>
        </trans-unit>
        <trans-unit id="61f2d4a71bf558e84e2c3f6097b5299bb8527a31" translate="yes" xml:space="preserve">
          <source>Default: 'registerWhenStable'</source>
          <target state="translated">默认:'registerWhenStable'</target>
        </trans-unit>
        <trans-unit id="a1c65a6502d6516e813657ded5fa271c01c936f3" translate="yes" xml:space="preserve">
          <source>Default: true</source>
          <target state="translated">默认:true</target>
        </trans-unit>
        <trans-unit id="a7d92a6c0d0700d1f5d27cc93561cb698235d75e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;4200&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;4200&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e534b9bc59cc35ed596e3d52a27c112d3b447fd2" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;AppServerModule&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;AppServerModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="62d8ddde592aace33cdedc9f7ff5db8124377a35" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;Child&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;Child&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="362a94e8934df56158b8fcf406fef69b1b8b937f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;Default&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;Default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31dd447d1e197208263232a14e4b09c98c8c67c1" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;app.server.module.ts&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;app.server.module.ts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b81035c7cfe4f1f16f706195740b1d641c47660" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;app&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;app&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e9b7f553bf37a6fa503e7ff8fedc3d3ad53296c" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;build&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;build&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef1398e571684d0ff9b89d114b6ad6b76012bcae" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;css&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;css&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccce1f425ace5df3413f25f2764b65c22b6d468e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;dist-server&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;dist-server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1206b7148f935e93d741657612cd60f8df41560e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a39fc988eabf3af75b55b1c0742c1862b77a46b" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;index.html&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;index.html&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e55a308f669d966d6652e9a98f710ce1efb4890f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;lib&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;lib&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="150921537b0205c20cf347f2551372c662cf2eeb" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;localhost&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;localhost&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90996341071c4d663d5773812f29490934b18209" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;main.server.ts&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;main.server.ts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b886c4fd6b47554356549df40239ed36762fb458" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;none&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;none&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6f12228db7c8844c52da6e16ae4f84912260863" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;production&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;production&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d28195afb50d3af379592d37e9b11e95268a1bc7" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;projects&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;projects&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ef5f637a575ac24ee799eb1f46529522c6a7b3a" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;prose&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;prose&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d88359db7189adad0dd209dc1e36e2a5a44b389" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;public-api&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;public-api&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc4cdc4a0620bc85c35cc0985ab1171b55ba0a4f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;serverApp&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;serverApp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="533d1a7b8646f62917b3ab7819ff29878dd1d08e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;shell&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;shell&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="686319b13675c66420027bd730510aec8bad6955" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;src&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;src&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94d281a4a89b897b769dc942f7fde6d38df484f7" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52042906c683969c26d75239988b89501df5717e" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;tsconfig.server&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;tsconfig.server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1de78ccd96cdac76c54716e4bed0bd3eaa38fd4f" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;tsconfig.spec&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;tsconfig.spec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="019b2c4418deec7387a57c6cd629ac8ccb162060" translate="yes" xml:space="preserve">
          <source>Default:&lt;code&gt;xlf&lt;/code&gt;</source>
          <target state="translated">Default:&lt;code&gt;xlf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3263c670a9cc238df307d5b499b4b1a389bab6b6" translate="yes" xml:space="preserve">
          <source>DefaultIterableDiffer</source>
          <target state="translated">DefaultIterableDiffer</target>
        </trans-unit>
        <trans-unit id="7b208a18b43c24b5e2e51af667317c6e8445d465" translate="yes" xml:space="preserve">
          <source>DefaultUrlSerializer</source>
          <target state="translated">DefaultUrlSerializer</target>
        </trans-unit>
        <trans-unit id="8fbd4101ec587a6f2d184f0b05bf2bd4fff464cf" translate="yes" xml:space="preserve">
          <source>DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to specify route specific parameters.</source>
          <target state="translated">DefaultUrlSerializer使用括号来序列化二级段(例如,popup:compose),使用冒号语法来指定出口,使用';parameter=value'语法(例如,open=true)来指定特定路由参数。</target>
        </trans-unit>
        <trans-unit id="abfe751e30348995f94251569b887d3adaf69de4" translate="yes" xml:space="preserve">
          <source>DefaultValueAccessor</source>
          <target state="translated">DefaultValueAccessor</target>
        </trans-unit>
        <trans-unit id="5de13986d9c48ec6ea5c80e7b8bf59649abc3508" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;prefetch&lt;/code&gt;.</source>
          <target state="translated">默认为 &lt;code&gt;prefetch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce4f933914034630118d09fa2b33f58770d4ad3d" translate="yes" xml:space="preserve">
          <source>Defaults to the value &lt;code&gt;installMode&lt;/code&gt; is set to.</source>
          <target state="translated">默认值为 &lt;code&gt;installMode&lt;/code&gt; 设置为。</target>
        </trans-unit>
        <trans-unit id="328c354b1f04708298579626e25553ebaa49002c" translate="yes" xml:space="preserve">
          <source>Define &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; methods in the module.</source>
          <target state="translated">在模块中定义 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="22a59702bf9ab24e07bb851d8b2e03067d7ac299" translate="yes" xml:space="preserve">
          <source>Define Routes</source>
          <target state="translated">定义路线</target>
        </trans-unit>
        <trans-unit id="874a27f286ff33b0061e026eb76ec7da6f71749d" translate="yes" xml:space="preserve">
          <source>Define a &lt;code&gt;shippingCosts&lt;/code&gt; property.</source>
          <target state="translated">定义一个 &lt;code&gt;shippingCosts&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="b3a8f77f9c6f003f8e6a837e9afd3742508ba160" translate="yes" xml:space="preserve">
          <source>Define a Wildcard route</source>
          <target state="translated">定义通配符途径</target>
        </trans-unit>
        <trans-unit id="78881e03729d2c91e39e562aa59d679ec0700be8" translate="yes" xml:space="preserve">
          <source>Define a cart service</source>
          <target state="translated">定义一个购物车服务</target>
        </trans-unit>
        <trans-unit id="e73d69ecb7fe5bb15e2b8912d9c0513d7ed8e0d6" translate="yes" xml:space="preserve">
          <source>Define a container element for the directive, and specify the switch expression to match against as an attribute:</source>
          <target state="translated">为指令定义一个容器元素,并指定要匹配的开关表达式作为属性。</target>
        </trans-unit>
        <trans-unit id="4855c08ec794427f283e9484dcf713459345e550" translate="yes" xml:space="preserve">
          <source>Define a generation rule</source>
          <target state="translated">定义一个生成规则</target>
        </trans-unit>
        <trans-unit id="628e7d0326beb26578cac423777c9da1cbb5163f" translate="yes" xml:space="preserve">
          <source>Define a link using the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive. The &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; defines how the user navigates to the route (or URL) declaratively in the component template.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 指令定义链接。所述 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 定义如何在用户导航到声明在分量模板的路径（或URL）。</target>
        </trans-unit>
        <trans-unit id="37563558345558ee13d439fb5b7c35348e7a2635" translate="yes" xml:space="preserve">
          <source>Define a method to dynamically insert an alias control into the alias's form array. The &lt;code&gt;&lt;a href=&quot;../api/forms/formarray#push&quot;&gt;FormArray.push()&lt;/a&gt;&lt;/code&gt; method inserts the control as a new item in the array.</source>
          <target state="translated">定义一种方法，以将别名控件动态插入到别名的表单数组中。所述 &lt;code&gt;&lt;a href=&quot;../api/forms/formarray#push&quot;&gt;FormArray.push()&lt;/a&gt;&lt;/code&gt; 方法插入控制为所述阵列中的新项目。</target>
        </trans-unit>
        <trans-unit id="d4ebbadc64ccb33e53ae57852dd662c43d818940" translate="yes" xml:space="preserve">
          <source>Define a template reference variable on the (enhanced) form element.</source>
          <target state="translated">在(增强型)表单元素上定义一个模板参考变量。</target>
        </trans-unit>
        <trans-unit id="cbf1b1ad1692c932aaef851bd68f8cffbe64e05e" translate="yes" xml:space="preserve">
          <source>Define an animation trigger in the &lt;code&gt;animations&lt;/code&gt; section of &lt;code&gt;@&lt;a href=&quot;../core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata. In the template, reference the trigger by name and bind it to a trigger expression that evaluates to a defined animation state, using the following format:</source>
          <target state="translated">在 &lt;code&gt;@&lt;a href=&quot;../core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../core/component&quot;&gt;组件&lt;/a&gt;元数据的 &lt;code&gt;animations&lt;/code&gt; 部分中定义动画触发器。在模板中，按名称引用触发器，并将其绑定到触发器表达式，该表达式使用以下格式评估为定义的动画状态：</target>
        </trans-unit>
        <trans-unit id="4d53180880090d0468ceae9ece0d0eeab097af77" translate="yes" xml:space="preserve">
          <source>Define application-wide providers by specifying &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; on its &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator (in the case of services) or at &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; construction (in the case where tokens are provided). Providers that are created this way automatically are made available to the entire application and don't need to be listed in any module.</source>
          <target state="translated">通过指定定义应用程序范围内提供商 &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; 在其 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰（在服务的情况下）或在 &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; 结构（在壳体中提供的令牌的位置）。通过这种方式自动创建的提供程序可用于整个应用程序，无需在任何模块中列出。</target>
        </trans-unit>
        <trans-unit id="1b6769f88d713bd91aa055cef61c2d4ca6810df8" translate="yes" xml:space="preserve">
          <source>Define dependencies with providers</source>
          <target state="translated">与提供者一起定义依赖关系</target>
        </trans-unit>
        <trans-unit id="e49b053cb66815bfa59357251dbbd29728069e8f" translate="yes" xml:space="preserve">
          <source>Define methods to add items to the cart, return cart items, and clear the cart items:</source>
          <target state="translated">定义添加物品到购物车、退回购物车物品和清除购物车物品的方法。</target>
        </trans-unit>
        <trans-unit id="789974b04cf864fa3f4628b731773113b8537356" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;addToCart()&lt;/code&gt; method, which adds the current product to the cart.</source>
          <target state="translated">定义 &lt;code&gt;addToCart()&lt;/code&gt; 方法，该方法将当前产品添加到购物车。</target>
        </trans-unit>
        <trans-unit id="4f877d2d9160c3bb01f894cd4762139f76c9d495" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;heroesUrl&lt;/code&gt; of the form &lt;code&gt;:base/:collectionName&lt;/code&gt; with the address of the heroes resource on the server. Here &lt;code&gt;base&lt;/code&gt; is the resource to which requests are made, and &lt;code&gt;collectionName&lt;/code&gt; is the heroes data object in the &lt;code&gt;in-memory-data-service.ts&lt;/code&gt;.</source>
          <target state="translated">用服务器上heroes资源的地址定义 &lt;code&gt;:base/:collectionName&lt;/code&gt; 形式的 &lt;code&gt;heroesUrl&lt;/code&gt; 。这里 &lt;code&gt;base&lt;/code&gt; 是发出请求的资源， &lt;code&gt;collectionName&lt;/code&gt; 是 &lt;code&gt;in-memory-data-service.ts&lt;/code&gt; 中的heroes数据对象。</target>
        </trans-unit>
        <trans-unit id="c70d53eb9728a1aae2934e79d7baa2495c32ea14" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;items&lt;/code&gt; property to store the products in the cart.</source>
          <target state="translated">定义 &lt;code&gt;items&lt;/code&gt; 属性以将产品存储在购物车中。</target>
        </trans-unit>
        <trans-unit id="a0c9b4fb153a9b2aa2a0ffe27f9efbfc6352b817" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;product&lt;/code&gt; property and inject the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; into the constructor.</source>
          <target state="translated">定义 &lt;code&gt;product&lt;/code&gt; 属性，然后将 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 注入构造函数。</target>
        </trans-unit>
        <trans-unit id="84c2fad3ae9b0db6143be8233d1a024b9e41b52a" translate="yes" xml:space="preserve">
          <source>Define the animation.</source>
          <target state="translated">定义动画。</target>
        </trans-unit>
        <trans-unit id="bfed9ed5eab89d68e83fa18efeef2704682d344b" translate="yes" xml:space="preserve">
          <source>Define the checkout form model</source>
          <target state="translated">定义结账表单模型</target>
        </trans-unit>
        <trans-unit id="0b4f1b51993e2e4768aecff95bb66bbdff6b1431" translate="yes" xml:space="preserve">
          <source>Define the crossorigin attribute setting of elements that provide CORS support.</source>
          <target state="translated">定义提供CORS支持的元素的跨源属性设置。</target>
        </trans-unit>
        <trans-unit id="5f1b50fbd57b7d09235c9899095f8ed6a396e6be" translate="yes" xml:space="preserve">
          <source>Define the get() method</source>
          <target state="translated">定义get()方法</target>
        </trans-unit>
        <trans-unit id="a32aad78bf0eb55c21cb33bbcd2d97c7fd1aefdd" translate="yes" xml:space="preserve">
          <source>Define the output filename cache-busting hashing mode.</source>
          <target state="translated">定义输出文件名缓存破坏哈希模式。</target>
        </trans-unit>
        <trans-unit id="282b2fcaad5a7ff17131438da0fb0640f8f56733" translate="yes" xml:space="preserve">
          <source>Define the rule</source>
          <target state="translated">界定规则</target>
        </trans-unit>
        <trans-unit id="ba464e5934066d9c3251321190d03a7331d806dd" translate="yes" xml:space="preserve">
          <source>Define the shipping page</source>
          <target state="translated">定义运输页面</target>
        </trans-unit>
        <trans-unit id="a58c78e105f9508e937f25cab3eae72383adc767" translate="yes" xml:space="preserve">
          <source>Define the view for the new product alert component.</source>
          <target state="translated">定义新产品警报组件的视图。</target>
        </trans-unit>
        <trans-unit id="7b13873dc1274f371484bc50805a0dac3df464cf" translate="yes" xml:space="preserve">
          <source>Define unique custom ids</source>
          <target state="translated">定义独特的自定义ID</target>
        </trans-unit>
        <trans-unit id="8395204fc3456bdd76cd3188ff9156211b00ced8" translate="yes" xml:space="preserve">
          <source>Define what the router should do if it receives a navigation request to the current URL. Default is &lt;code&gt;ignore&lt;/code&gt;, which causes the router ignores the navigation. This can disable features such as a &quot;refresh&quot; button. Use this option to configure the behavior when navigating to the current URL. Default is 'ignore'.</source>
          <target state="translated">定义路由器在收到对当前URL的导航请求时应采取的措施。默认值为 &lt;code&gt;ignore&lt;/code&gt; ，这将导致路由器忽略导航。这可以禁用诸如&amp;ldquo;刷新&amp;rdquo;按钮之类的功能。使用此选项来配置导航到当前URL时的行为。默认值为&amp;ldquo;忽略&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="6126fbb1cff6a19c4cc8613ea100f32e878c1a6a" translate="yes" xml:space="preserve">
          <source>Define your size boundaries in the CLI configuration file, &lt;code&gt;angular.json&lt;/code&gt;, in a &lt;code&gt;budgets&lt;/code&gt; section for each &lt;a href=&quot;build#app-environments&quot;&gt;configured environment&lt;/a&gt;.</source>
          <target state="translated">在CLI配置文件 &lt;code&gt;angular.json&lt;/code&gt; 的每个&lt;a href=&quot;build#app-environments&quot;&gt;配置环境&lt;/a&gt;的 &lt;code&gt;budgets&lt;/code&gt; 部分中定义尺寸边界。</target>
        </trans-unit>
        <trans-unit id="76be9e6329351c7763ca316248531b72685df7cf" translate="yes" xml:space="preserve">
          <source>Defines &lt;code&gt;AppModule&lt;/code&gt;, the &lt;a href=&quot;bootstrapping&quot;&gt;root module&lt;/a&gt; that tells Angular how to assemble the application. When initially created, it declares only the &lt;code&gt;AppComponent&lt;/code&gt;. Over time, you add more components to declare.</source>
          <target state="translated">定义 &lt;code&gt;AppModule&lt;/code&gt; ，它是告诉Angular如何组装应用程序的&lt;a href=&quot;bootstrapping&quot;&gt;根模块&lt;/a&gt;。最初创建时，它仅声明 &lt;code&gt;AppComponent&lt;/code&gt; 。随着时间的推移，您将添加更多要声明的组件。</target>
        </trans-unit>
        <trans-unit id="55682d31e3a07ef230dec4ddcde2f669f7002896" translate="yes" xml:space="preserve">
          <source>Defines CSS styles to be stored on a renderer instance.</source>
          <target state="translated">定义要存储在渲染器实例上的CSS样式。</target>
        </trans-unit>
        <trans-unit id="8a33a6051ae78e0871fbf63c733d95d7ea910681" translate="yes" xml:space="preserve">
          <source>Defines a list of animation steps to be run in parallel.</source>
          <target state="translated">定义要并行运行的动画步骤列表。</target>
        </trans-unit>
        <trans-unit id="78c95f0e8ccd965b40bcb8fd23f9f9092e2a9686" translate="yes" xml:space="preserve">
          <source>Defines a list of animation steps to be run sequentially, one by one.</source>
          <target state="translated">定义一个动画步骤的列表,按顺序一个一个地运行。</target>
        </trans-unit>
        <trans-unit id="0db16c22a542cb88e353373266c96467ed0d4252" translate="yes" xml:space="preserve">
          <source>Defines a matcher for requests based on URL, method, or both.</source>
          <target state="translated">定义一个基于URL、方法或两者的请求匹配器。</target>
        </trans-unit>
        <trans-unit id="c2ce9d76ca8e2ee509dcc072576dcae0c851ee71" translate="yes" xml:space="preserve">
          <source>Defines a module that contains components, directives, pipes, and providers.</source>
          <target state="translated">定义一个包含组件、指令、管道和提供者的模块。</target>
        </trans-unit>
        <trans-unit id="bbcc9025aacb1ee76b9dc1c0b716a4a9597fe43b" translate="yes" xml:space="preserve">
          <source>Defines a schema that allows an NgModule to contain the following:</source>
          <target state="translated">定义了一个允许NgModule包含以下内容的模式。</target>
        </trans-unit>
        <trans-unit id="5e53cda92b070b9dfacf9234345296fdb80a7883" translate="yes" xml:space="preserve">
          <source>Defines a schema that allows any property on any element.</source>
          <target state="translated">定义一个模式,允许任何元素上的任何属性。</target>
        </trans-unit>
        <trans-unit id="007992afce80ecb791885d624444069de38590c5" translate="yes" xml:space="preserve">
          <source>Defines a scroll position manager. Implemented by &lt;code&gt;BrowserViewportScroller&lt;/code&gt;.</source>
          <target state="translated">定义滚动位置管理器。由 &lt;code&gt;BrowserViewportScroller&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="7b88e7c5fc78efd9fa6ef4124a65b304796dbf1d" translate="yes" xml:space="preserve">
          <source>Defines a set of animation styles, associating each style with an optional &lt;code&gt;&lt;a href=&quot;animations/animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">定义一组动画样式，将每个样式与可选的 &lt;code&gt;&lt;a href=&quot;animations/animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; 值相关联。</target>
        </trans-unit>
        <trans-unit id="09a3e8c545236f497d55055e0050b3a1d47f83e0" translate="yes" xml:space="preserve">
          <source>Defines a set of animation styles, associating each style with an optional &lt;code&gt;&lt;a href=&quot;animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">定义一组动画样式，将每个样式与可选的 &lt;code&gt;&lt;a href=&quot;animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; 值相关联。</target>
        </trans-unit>
        <trans-unit id="b279dfffcca1a99dcdfe04a5a70d6b73e5880db0" translate="yes" xml:space="preserve">
          <source>Defines a unit test for the root &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">为根 &lt;code&gt;AppComponent&lt;/code&gt; 定义一个单元测试。</target>
        </trans-unit>
        <trans-unit id="e24e54b93247b75499ac7d517abe7411430368a2" translate="yes" xml:space="preserve">
          <source>Defines an animation step that combines styling information with timing information.</source>
          <target state="translated">定义一个结合了造型信息和时间信息的动画步骤。</target>
        </trans-unit>
        <trans-unit id="c68cc7c5707eabd8219f8b7a1ab574caf776b9b1" translate="yes" xml:space="preserve">
          <source>Defines an array of Routes, each mapping a URL path to a component.</source>
          <target state="translated">定义一个Routes数组,每个Routes将一个URL路径映射到一个组件。</target>
        </trans-unit>
        <trans-unit id="a01435af040e2619f2e81406c09be7423669e558" translate="yes" xml:space="preserve">
          <source>Defines an interface that acts as a bridge between the Angular forms API and a native element in the DOM.</source>
          <target state="translated">定义了一个接口,作为Angular表单API和DOM中本地元素之间的桥梁。</target>
        </trans-unit>
        <trans-unit id="ccc6a0a5239bfcb1e5069449a5b227d5b6d9c709" translate="yes" xml:space="preserve">
          <source>Defines arbitrary developer-defined data to be stored on a renderer instance. This is useful for renderers that delegate to other renderers.</source>
          <target state="translated">定义了开发人员定义的任意数据,以存储在渲染器实例上。这对于委托给其他渲染器的渲染器非常有用。</target>
        </trans-unit>
        <trans-unit id="21ae664afe89dbb8f43c4e8858a599ffb280b1ca" translate="yes" xml:space="preserve">
          <source>Defines how the router merges parameters, data, and resolved data from parent to child routes. By default ('emptyOnly'), inherits parent parameters only for path-less or component-less routes. Set to 'always' to enable unconditional inheritance of parent parameters.</source>
          <target state="translated">定义路由器如何将参数、数据和解析数据从父路由合并到子路由。默认情况下('emptyOnly'),只继承无路径或无组件路由的父参数。设置为'always',可以无条件地继承父级参数。</target>
        </trans-unit>
        <trans-unit id="9dae0aa20ef644eeabd8e272a8434eb94f2bbc5b" translate="yes" xml:space="preserve">
          <source>Defines how the router should navigate to a component based on a URL pattern. Most routes consist of a path and a component type.</source>
          <target state="translated">定义路由器如何根据URL模式导航到一个组件。大多数路由由一个路径和一个组件类型组成。</target>
        </trans-unit>
        <trans-unit id="4464084bf36b2c3f096f20ffccc12a8bf0270c6d" translate="yes" xml:space="preserve">
          <source>Defines infrastructure for dependency injection (DI), internationalization (i18n), and various testing and debugging facilities.</source>
          <target state="translated">定义了依赖注入(DI)、国际化(i18n)以及各种测试和调试设施的基础设施。</target>
        </trans-unit>
        <trans-unit id="8bfbd8d863007bdc3c17344259758b2b8851eca7" translate="yes" xml:space="preserve">
          <source>Defines one &lt;em&gt;transition&lt;/em&gt; when switching back and forth from the &lt;code&gt;heroes&lt;/code&gt; and &lt;code&gt;hero&lt;/code&gt; routes to ease the component in from the left of the screen as it enters the application view (&lt;code&gt;:enter&lt;/code&gt;), the other to animate the component to the right as it leaves the application view (&lt;code&gt;:leave&lt;/code&gt;).</source>
          <target state="translated">在从 &lt;code&gt;heroes&lt;/code&gt; 和 &lt;code&gt;hero&lt;/code&gt; 路线来回切换时定义一个&lt;em&gt;过渡&lt;/em&gt;，以使组件在进入应用程序视图（ &lt;code&gt;:enter&lt;/code&gt; ）时从屏幕的左侧轻松移动，另一种&lt;em&gt;过渡是&lt;/em&gt;在组件离开应用程序时向右侧进行动画处理查看（ &lt;code&gt;:leave&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8d7a191110568ab5d83c750a60f697e422a9245d" translate="yes" xml:space="preserve">
          <source>Defines one or more CSS styles to use in animations. Controls the visual appearance of HTML elements during animations. Uses object syntax.</source>
          <target state="translated">定义一个或多个CSS样式,用于动画中。在动画中控制HTML元素的视觉外观。使用对象语法。</target>
        </trans-unit>
        <trans-unit id="47ba811ee66fe36d02c8356b68d28d19b3ee3fb4" translate="yes" xml:space="preserve">
          <source>Defines routes.</source>
          <target state="translated">定义路线。</target>
        </trans-unit>
        <trans-unit id="20fb4df445edc22891b0b3ae3c0ac48dd6564af3" translate="yes" xml:space="preserve">
          <source>Defines template and style encapsulation options available for Component's &lt;a href=&quot;component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">定义可用于Component的&lt;a href=&quot;component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; 的&lt;/a&gt;模板和样式封装选项。</target>
        </trans-unit>
        <trans-unit id="3c565d04a28681d37c04fd197dc43af222f944d1" translate="yes" xml:space="preserve">
          <source>Defines template and style encapsulation options available for Component's &lt;a href=&quot;core/component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">定义可用于Component的&lt;a href=&quot;core/component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; 的&lt;/a&gt;模板和样式封装选项。</target>
        </trans-unit>
        <trans-unit id="bbfc1ff79e2f3d0bdd95b1a8d5f1085d34f7a56a" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;&lt;a href=&quot;router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; object that maps a URL path to a component, and the &lt;code&gt;&lt;a href=&quot;router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; directive that you use to place a routed view in a template, as well as a complete API for configuring, querying, and controlling the router state.</source>
          <target state="translated">定义将URL路径映射到组件的 &lt;code&gt;&lt;a href=&quot;router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; 对象，以及用于在模板中放置路由视图的 &lt;code&gt;&lt;a href=&quot;router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 指令，以及用于配置，查询和控制路由器状态的完整API。</target>
        </trans-unit>
        <trans-unit id="534e303ed39dff58ed66f8ac03005dc125d30753" translate="yes" xml:space="preserve">
          <source>Defines the HTML template associated with the root &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">定义与根 &lt;code&gt;AppComponent&lt;/code&gt; 关联的HTML模板。</target>
        </trans-unit>
        <trans-unit id="9ad7da76a97f578fd82c2902d762141ba818d760" translate="yes" xml:space="preserve">
          <source>Defines the ServiceWorker registration strategy, which determines when it will be registered with the browser.</source>
          <target state="translated">定义ServiceWorker注册策略,该策略决定了它何时会被浏览器注册。</target>
        </trans-unit>
        <trans-unit id="c0766546ca9b3da0b517bead9277a27997c0cb96" translate="yes" xml:space="preserve">
          <source>Defines the animation sequence between two named states. Uses array syntax.</source>
          <target state="translated">定义两个命名状态之间的动画序列。使用数组语法。</target>
        </trans-unit>
        <trans-unit id="97e2e28dd3ded239399b0d95c3ed8d572fb3455e" translate="yes" xml:space="preserve">
          <source>Defines the base CSS stylesheet for the root &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">为根 &lt;code&gt;AppComponent&lt;/code&gt; 定义基本CSS样式表。</target>
        </trans-unit>
        <trans-unit id="01c55cf117981d6ba3a6e5a3d0bedf7d4e343f64" translate="yes" xml:space="preserve">
          <source>Defines the build environment.</source>
          <target state="translated">定义构建环境。</target>
        </trans-unit>
        <trans-unit id="1a958cd561ced232dff4bac1558637eff15ac576" translate="yes" xml:space="preserve">
          <source>Defines the class infrastructure for components, view hierarchies, change detection, rendering, and event handling.</source>
          <target state="translated">定义了组件、视图层次结构、变化检测、渲染和事件处理的类基础设施。</target>
        </trans-unit>
        <trans-unit id="2f86f744259188a92762d99407d2a67061407cbd" translate="yes" xml:space="preserve">
          <source>Defines the decorators that supply metadata and context for Angular constructs.</source>
          <target state="translated">定义了为Angular构造供给元数据和上下文的装饰器。</target>
        </trans-unit>
        <trans-unit id="ba0f716db5d7d13c6a1369efdafac26719ccd1ba" translate="yes" xml:space="preserve">
          <source>Defines the logic for the app's root component, named &lt;code&gt;AppComponent&lt;/code&gt;. The view associated with this root component becomes the root of the &lt;a href=&quot;glossary#view-hierarchy&quot;&gt;view hierarchy&lt;/a&gt; as you add components and services to your application.</source>
          <target state="translated">为名为 &lt;code&gt;AppComponent&lt;/code&gt; 的应用程序的根组件定义逻辑。当您向应用程序中添加组件和服务时，与此根组件关联的视图将成为&lt;a href=&quot;glossary#view-hierarchy&quot;&gt;视图层次结构&lt;/a&gt;的根。</target>
        </trans-unit>
        <trans-unit id="de3280c456691c50e69c2238d5588611dcf64274" translate="yes" xml:space="preserve">
          <source>Defines the map of errors returned from failed validation checks.</source>
          <target state="translated">定义从失败的验证检查中返回的错误地图。</target>
        </trans-unit>
        <trans-unit id="28c7e2d2a801a8a0fb6945a0de3e43db3a6f14ba" translate="yes" xml:space="preserve">
          <source>Defines the name that can be used in the template to assign this directive to a variable.</source>
          <target state="translated">定义在模板中可用于将此指令分配给变量的名称。</target>
        </trans-unit>
        <trans-unit id="b6b4c7a96425d13d450553ded2847dcd126f0ea3" translate="yes" xml:space="preserve">
          <source>Defines the root module, named &lt;code&gt;AppModule&lt;/code&gt;, that tells Angular how to assemble the application. Initially declares only the &lt;code&gt;AppComponent&lt;/code&gt;. As you add more components to the app, they must be declared here.</source>
          <target state="translated">定义名为 &lt;code&gt;AppModule&lt;/code&gt; 的根模块，该模块告诉Angular如何组装应用程序。最初仅声明 &lt;code&gt;AppComponent&lt;/code&gt; 。当您向应用程序添加更多组件时，必须在此处声明它们。</target>
        </trans-unit>
        <trans-unit id="560b6286688d2764d7435cbfd0ce5f6ab9cefa86" translate="yes" xml:space="preserve">
          <source>Defines the same &lt;code&gt;AppComponent&lt;/code&gt; as the one in the QuickStart playground. It is the &lt;strong&gt;root&lt;/strong&gt; component of what will become a tree of nested components as the application evolves.</source>
          <target state="translated">定义与QuickStart游乐场中相同的 &lt;code&gt;AppComponent&lt;/code&gt; 。它是随着应用程序的发展而变成嵌套组件树的&lt;strong&gt;根&lt;/strong&gt;组件。</target>
        </trans-unit>
        <trans-unit id="b65d0b9369faf5bd23746f4543dbee8997bf6546" translate="yes" xml:space="preserve">
          <source>Defines the set of injectable objects that are visible to its view DOM children. See &lt;a href=&quot;component#injecting-a-class-with-a-view-provider&quot;&gt;example&lt;/a&gt;.</source>
          <target state="translated">定义对其视图DOM子对象可见的可注入对象的集合。参见&lt;a href=&quot;component#injecting-a-class-with-a-view-provider&quot;&gt;示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c57680796f5c05c65ea70fadda123a533fb1af6a" translate="yes" xml:space="preserve">
          <source>Defines two transitions. A single trigger can define multiple states and transitions.</source>
          <target state="translated">定义两个转换。一个触发器可以定义多个状态和转换。</target>
        </trans-unit>
        <trans-unit id="7e5146bd0be6e84fa59cd48a926fafef0d1cbcea" translate="yes" xml:space="preserve">
          <source>Defines when guards and resolvers will be run. One of</source>
          <target state="translated">定义何时运行防护和解析器。其中的</target>
        </trans-unit>
        <trans-unit id="fb32691368f716dd067e04f7a8ee40b1b9ebb143" translate="yes" xml:space="preserve">
          <source>Defines when the router updates the browser URL. By default ('deferred'), update after successful navigation. Set to 'eager' if prefer to update the URL at the beginning of navigation. Updating the URL early allows you to handle a failure of navigation by showing an error message with the URL that failed.</source>
          <target state="translated">定义路由器更新浏览器URL的时间。默认情况下('deferred'),在导航成功后更新。如果喜欢在导航开始时更新URL,则设置为'急切'。提前更新URL可以让您通过显示失败的URL的错误信息来处理导航失败。</target>
        </trans-unit>
        <trans-unit id="8d2f4eea5d5cde290a7eeb369d6476029c3af8e3" translate="yes" xml:space="preserve">
          <source>Defining animations and attaching them to the HTML template</source>
          <target state="translated">定义动画并将其附加到HTML模板中。</target>
        </trans-unit>
        <trans-unit id="a94775a237bcaa68bfb274edde5b9619d97f65f9" translate="yes" xml:space="preserve">
          <source>Defining input options with a schema and interfaces</source>
          <target state="translated">用模式和接口定义输入选项。</target>
        </trans-unit>
        <trans-unit id="5d7bcd8a5d6216d911c4f1a97926e54e4b4a64ed" translate="yes" xml:space="preserve">
          <source>Defining observers</source>
          <target state="translated">观察员的定义</target>
        </trans-unit>
        <trans-unit id="1a54afee3d635be24613550363d5fa3f2b0d1521" translate="yes" xml:space="preserve">
          <source>Defining offsets for keyframes is optional. If you omit them, evenly spaced offsets are automatically assigned. For example, three keyframes without predefined offsets receive offsets of 0, 0.5, and 1. Specifying an offset of 0.8 for the middle transition in the above example might look like this.</source>
          <target state="translated">定义关键帧的偏移量是可选的。如果您省略它们,则会自动分配均匀的偏移量。例如,没有预定义偏移量的三个关键帧分别获得0、0.5和1的偏移量。在上面的例子中,为中间的过渡指定0.8的偏移量可能是这样的。</target>
        </trans-unit>
        <trans-unit id="fb29f7869dd96ef9bc914331c5f7a54bfc6ceafd" translate="yes" xml:space="preserve">
          <source>Defining providers</source>
          <target state="translated">界定提供者</target>
        </trans-unit>
        <trans-unit id="2707786a4667e5d5c0add38788eacf634d0b58ab" translate="yes" xml:space="preserve">
          <source>Defining rules and actions</source>
          <target state="translated">确定规则和行动</target>
        </trans-unit>
        <trans-unit id="7734b8e4b1060a1574142e1bfdff622419f5f5f2" translate="yes" xml:space="preserve">
          <source>Defining typings for runtime-global libraries</source>
          <target state="translated">定义运行时-全局库的类型学</target>
        </trans-unit>
        <trans-unit id="f98e5b51e41064e26b1b00bf43b51b2cd9536aa7" translate="yes" xml:space="preserve">
          <source>Definition of builder input options.</source>
          <target state="translated">建设者输入选项的定义。</target>
        </trans-unit>
        <trans-unit id="8614b0b8c6edd0a2c9692acd8211609430e927c5" translate="yes" xml:space="preserve">
          <source>Delayed change detection is intentional and useful. It gives the tester an opportunity to inspect and change the state of the component &lt;em&gt;before Angular initiates data binding and calls &lt;a href=&quot;lifecycle-hooks&quot;&gt;lifecycle hooks&lt;/a&gt;&lt;/em&gt;.</source>
          <target state="translated">延迟更改检测是有意且有用的。它使测试人员有机会&lt;em&gt;在Angular启动数据绑定和调用&lt;a href=&quot;lifecycle-hooks&quot;&gt;生命周期挂钩&lt;/a&gt;&lt;/em&gt;&lt;em&gt;之前&lt;/em&gt;检查和更改组件的状态。</target>
        </trans-unit>
        <trans-unit id="df4169e217c104ef8e5feee245891162c13a9a79" translate="yes" xml:space="preserve">
          <source>Delegate complex component logic to services</source>
          <target state="translated">将复杂的组件逻辑委托给服务</target>
        </trans-unit>
        <trans-unit id="05e33de9a1c31d4b643efd4d36d5ef6fbd4fd627" translate="yes" xml:space="preserve">
          <source>Delete &lt;code&gt;hero details&lt;/code&gt; from &lt;code&gt;HeroesComponent&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;HeroesComponent&lt;/code&gt; 删除 &lt;code&gt;hero details&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78b0b276fca4c17945fe88cd786ec59e0c15d70c" translate="yes" xml:space="preserve">
          <source>Delete &lt;code&gt;non-essential&lt;/code&gt; files (optional)</source>
          <target state="translated">删除 &lt;code&gt;non-essential&lt;/code&gt; 文件（可选）</target>
        </trans-unit>
        <trans-unit id="1373669c850d20d42e2554e0658530285be5660e" translate="yes" xml:space="preserve">
          <source>Delete a hero</source>
          <target state="translated">删除一个英雄</target>
        </trans-unit>
        <trans-unit id="0994cccfea58fe0bb5c9ac2ef33680eb47a61d93" translate="yes" xml:space="preserve">
          <source>Delete the &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; component at the bottom of the template.</source>
          <target state="translated">删除模板底部的 &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; 组件。</target>
        </trans-unit>
        <trans-unit id="a973efbbe0ce0a3e5b79eca622331ec4d925820a" translate="yes" xml:space="preserve">
          <source>Delete the &lt;code&gt;HEROES&lt;/code&gt; import, because you won't need that anymore. Import the &lt;code&gt;HeroService&lt;/code&gt; instead.</source>
          <target state="translated">删除 &lt;code&gt;HEROES&lt;/code&gt; 导入，因为您将不再需要它。而是导入 &lt;code&gt;HeroService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7d8f3866a3c069435d5667635832c642bf9b44c" translate="yes" xml:space="preserve">
          <source>Delete the &lt;code&gt;app.component.html&lt;/code&gt; file. It is not needed for this example.</source>
          <target state="translated">删除 &lt;code&gt;app.component.html&lt;/code&gt; 文件。此示例不需要。</target>
        </trans-unit>
        <trans-unit id="ca994d07660cd1da305a6ba89ed4e8687ce0e9d3" translate="yes" xml:space="preserve">
          <source>Delete the output path before building.</source>
          <target state="translated">建设前删除输出路径。</target>
        </trans-unit>
        <trans-unit id="afdb5e7e343531bb63beff413f5040dd3b12f4cb" translate="yes" xml:space="preserve">
          <source>Deletes values for a given header in a clone of the original instance.</source>
          <target state="translated">在原始实例的克隆中删除给定头的值。</target>
        </trans-unit>
        <trans-unit id="d41b75d84a6d9a041bf104564c1d9c5136764c75" translate="yes" xml:space="preserve">
          <source>Deleting an item updates the model, and depending on your code, triggers other changes including queries and saving to a remote server. These changes propagate through the system and ultimately display in this and other views.</source>
          <target state="translated">删除一个项目会更新模型,并根据你的代码,触发其他变化,包括查询和保存到远程服务器。这些更改会在系统中传播,并最终显示在本视图和其他视图中。</target>
        </trans-unit>
        <trans-unit id="6fead872c57884d832bc66b6ac23b585acb9b62b" translate="yes" xml:space="preserve">
          <source>Deliver an arbitrary &lt;code&gt;&lt;a href=&quot;../httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; (such as a progress event) on the response stream for this request.</source>
          <target state="translated">在响应流上为此请求传递一个任意的 &lt;code&gt;&lt;a href=&quot;../httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; （例如progress事件）。</target>
        </trans-unit>
        <trans-unit id="423875924fd8466b1dbe99d7be0f04a2683d9a9a" translate="yes" xml:space="preserve">
          <source>Demonstrates a combination of a component and a directive each with its own hooks.</source>
          <target state="translated">展示组件和指令的组合,每个组件都有自己的钩子。</target>
        </trans-unit>
        <trans-unit id="47d82501ff1326e82e567dc777dda0e696f6a6b6" translate="yes" xml:space="preserve">
          <source>Demonstrates every lifecycle hook. Each hook method writes to the on-screen log.</source>
          <target state="translated">演示每个生命周期的钩子。每个钩子方法都会写入屏幕日志。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="3969438fe2188ea70569a9eba890f3a3be171dfd" translate="yes" xml:space="preserve">
          <source>Dependencies are services or objects that a class needs to perform its function. DI is a coding pattern in which a class asks for dependencies from external sources rather than creating them itself.</source>
          <target state="translated">依赖关系是一个类在执行其功能时需要的服务或对象。DI是一种编码模式,在这种模式下,一个类从外部来源索取依赖关系,而不是自己创建它们。</target>
        </trans-unit>
        <trans-unit id="9c3a60862c8e32bceb7a5b6cd07121beec7c64c3" translate="yes" xml:space="preserve">
          <source>Dependencies can also be marked as optional:</source>
          <target state="translated">依赖关系也可以被标记为可选的。</target>
        </trans-unit>
        <trans-unit id="5bfedadd6cca6690cbe5a22a3b89eb2c20d39fc3" translate="yes" xml:space="preserve">
          <source>Dependencies can be registered at any level in the component hierarchy. When a component requests a dependency, Angular starts with that component's injector and walks up the injector tree until it finds the first suitable provider. Angular throws an error if it can't find the dependency during that walk.</source>
          <target state="translated">依赖关系可以在组件层次结构中的任何级别注册。当一个组件请求一个依赖关系时,Angular会从该组件的注入器开始,并沿着注入器树向上走,直到找到第一个合适的提供者。如果在行走过程中找不到依赖关系,Angular会抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="268069fc500d695525729fb4728b0f714e4272a3" translate="yes" xml:space="preserve">
          <source>Dependencies provided by the root injector can be injected into &lt;em&gt;any&lt;/em&gt; component &lt;em&gt;anywhere&lt;/em&gt; in the application. In some cases, you might want to restrict service availability to a particular region of the application. For instance, you might want to let users explicitly opt in to use a service, rather than letting the root injector provide it automatically.</source>
          <target state="translated">根注入器提供的依赖项可以注入到应用程序中&lt;em&gt;任何&lt;/em&gt;&lt;em&gt;位置的&lt;/em&gt;&lt;em&gt;任何&lt;/em&gt;组件中。在某些情况下，您可能希望将服务可用性限制为应用程序的特定区域。例如，您可能希望让用户明确选择使用服务，而不是让根注入器自动提供服务。</target>
        </trans-unit>
        <trans-unit id="1e40e6745211c8a0d091b67c457129398aa29f2f" translate="yes" xml:space="preserve">
          <source>Dependencies whose providers are listed here become available for injection into any component, directive, pipe or service that is a child of this injector. The NgModule used for bootstrapping uses the root injector, and can provide dependencies to any part of the app.</source>
          <target state="translated">这里列出的提供者的依赖关系可以被注入到任何组件、指令、管道或服务中,这些组件、指令、管道或服务都是这个注入器的子节点。用于bootstrapping的NgModule使用根注入器,并且可以为应用程序的任何部分提供依赖关系。</target>
        </trans-unit>
        <trans-unit id="39b445f9280a6bde59a9884f1dfcf8f05fcf2ac8" translate="yes" xml:space="preserve">
          <source>Dependencies. See &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;https://docs.npmjs.com/files/package.json&lt;/a&gt;.</source>
          <target state="translated">依赖关系。请参阅&lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;https://docs.npmjs.com/files/package.json&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3aefbe2f210572802298b2ad0347dc9e423d2690" translate="yes" xml:space="preserve">
          <source>Dependency Injection</source>
          <target state="translated">依赖性注入</target>
        </trans-unit>
        <trans-unit id="5587fb39e018b9a0f84498d0af8a56b11662b24b" translate="yes" xml:space="preserve">
          <source>Dependency Injection Guide</source>
          <target state="translated">依赖注入指南</target>
        </trans-unit>
        <trans-unit id="67d83ab175192923dcef5418334db7940ccd1d3d" translate="yes" xml:space="preserve">
          <source>Dependency Injection in Action</source>
          <target state="translated">依赖注入在行动</target>
        </trans-unit>
        <trans-unit id="590a5a128f3f7f29bda608d586e731e6794c72b2" translate="yes" xml:space="preserve">
          <source>Dependency Injection in Angular</source>
          <target state="translated">在Angular中注入依赖关系</target>
        </trans-unit>
        <trans-unit id="94fce4aaf94c5274c2455399844edec7040e85d6" translate="yes" xml:space="preserve">
          <source>Dependency Providers</source>
          <target state="translated">抚养人供应商</target>
        </trans-unit>
        <trans-unit id="abe361ec5ac92ab2b51436412eccfc4c617ee10a" translate="yes" xml:space="preserve">
          <source>Dependency injection</source>
          <target state="translated">依赖性注入</target>
        </trans-unit>
        <trans-unit id="dcbdd3cb88ccf5020d3734dbba5005a8f3e6c83d" translate="yes" xml:space="preserve">
          <source>Dependency injection (DI)</source>
          <target state="translated">依赖性注入(DI)</target>
        </trans-unit>
        <trans-unit id="38764a3306fa96e3b5ce418928df3310a66e2397" translate="yes" xml:space="preserve">
          <source>Dependency injection (DI), is an important application design pattern. Angular has its own DI framework, which is typically used in the design of Angular applications to increase their efficiency and modularity.</source>
          <target state="translated">依赖注入(DI),是一种重要的应用设计模式。Angular有自己的DI框架,通常在Angular应用的设计中使用,以提高其效率和模块化程度。</target>
        </trans-unit>
        <trans-unit id="ac6fed4cfd6415d9a0dddf57401d8893e0a3ccdc" translate="yes" xml:space="preserve">
          <source>Dependency injection configuration</source>
          <target state="translated">依赖注入配置</target>
        </trans-unit>
        <trans-unit id="e0967671af96737e00c4bc3ee3f86c99ee81217c" translate="yes" xml:space="preserve">
          <source>Dependency injection is front and center in both AngularJS and Angular, but there are some key differences between the two frameworks in how it actually works.</source>
          <target state="translated">依赖注入在AngularJS和Angular中都是最重要的,但两个框架在实际工作中存在一些关键的差异。</target>
        </trans-unit>
        <trans-unit id="d567259d67cf4d25a3c86741b6f053a3877b2330" translate="yes" xml:space="preserve">
          <source>Dependency injection tokens</source>
          <target state="translated">依赖性注入令牌</target>
        </trans-unit>
        <trans-unit id="8721847e3c2cf1f636675fe5ac81839a4deb4ed6" translate="yes" xml:space="preserve">
          <source>Dependency injection tokens are always strings</source>
          <target state="translated">依赖注入标记总是字符串</target>
        </trans-unit>
        <trans-unit id="a5f4548f589dff9719972f474e3b66d02efcff5b" translate="yes" xml:space="preserve">
          <source>Dependency objects can be simple values like dates, numbers and strings, or shapeless objects like arrays and functions.</source>
          <target state="translated">依赖对象可以是简单的值,如日期、数字和字符串,也可以是无形状的对象,如数组和函数。</target>
        </trans-unit>
        <trans-unit id="c536f43fe0086c7768f33a4642a2989f949a129b" translate="yes" xml:space="preserve">
          <source>Dependency on a reflect-metadata polyfill in JIT mode</source>
          <target state="translated">依赖于JIT模式下的反射-元数据多重填充。</target>
        </trans-unit>
        <trans-unit id="79565b54bff7bbc8a04b329b75bcbe2a792c5429" translate="yes" xml:space="preserve">
          <source>Dependent values should not change during a single turn of the event loop. If an idempotent expression returns a string or a number, it returns the same string or number when called twice in a row. If the expression returns an object, including an &lt;code&gt;array&lt;/code&gt;, it returns the same object &lt;em&gt;reference&lt;/em&gt; when called twice in a row.</source>
          <target state="translated">在事件循环的单个循环中，从属值不应更改。如果幂等表达式返回字符串或数字，则当连续调用两次时，它将返回相同的字符串或数字。如果表达式返回一个对象（包括一个 &lt;code&gt;array&lt;/code&gt; ，则在连续两次调用该表达式时，它将返回相同的对象&lt;em&gt;引用&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="cf371c381900a6fd3d60e6ae500e85424e8b9edd" translate="yes" xml:space="preserve">
          <source>Depending on the &lt;code&gt;&lt;a href=&quot;locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; used, &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; persists to the URL's path or the URL's hash segment.</source>
          <target state="translated">根据所使用的 &lt;code&gt;&lt;a href=&quot;locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 保留到URL的路径或URL的哈希段。</target>
        </trans-unit>
        <trans-unit id="21832731ace57bad20a7e0620e71a706b969afbf" translate="yes" xml:space="preserve">
          <source>Deploy to GitHub pages</source>
          <target state="translated">部署到GitHub页面</target>
        </trans-unit>
        <trans-unit id="e7db5b15c43d8e69848e15e994c11935e988b38a" translate="yes" xml:space="preserve">
          <source>Deploy your application with &lt;code&gt;firebase deploy&lt;/code&gt;, because the command &lt;code&gt;firebase init&lt;/code&gt; has created a &lt;code&gt;firebase.json&lt;/code&gt; file that tells Firebase how to serve your app.</source>
          <target state="translated">使用 &lt;code&gt;firebase deploy&lt;/code&gt; 部署应用程序，因为命令 &lt;code&gt;firebase init&lt;/code&gt; 已创建了 &lt;code&gt;firebase.json&lt;/code&gt; 文件，该文件告诉Firebase如何为您的应用程序提供服务。</target>
        </trans-unit>
        <trans-unit id="327a55f82dc6818877a68e37b722bb7f2360b633" translate="yes" xml:space="preserve">
          <source>Deployment</source>
          <target state="translated">Deployment</target>
        </trans-unit>
        <trans-unit id="d2196ee26d9923cc05a880fb1a76a08b79b7cc48" translate="yes" xml:space="preserve">
          <source>Deployment to</source>
          <target state="translated">部署到</target>
        </trans-unit>
        <trans-unit id="600c4c32abbd0e6044d374f8d9f63e6c5b81d165" translate="yes" xml:space="preserve">
          <source>Deprecated APIs</source>
          <target state="translated">废弃的API</target>
        </trans-unit>
        <trans-unit id="1f787212bb6689c1d785407d5b1bdf211afadeac" translate="yes" xml:space="preserve">
          <source>Deprecated APIs and Features</source>
          <target state="translated">废弃的API和功能</target>
        </trans-unit>
        <trans-unit id="35ee1fa50278c527aa6abc0d9e07608c509c3bdd" translate="yes" xml:space="preserve">
          <source>Deprecated features</source>
          <target state="translated">废弃的功能</target>
        </trans-unit>
        <trans-unit id="b1c818a3ca95c7aa9b5971979e9cc0dc5c2370da" translate="yes" xml:space="preserve">
          <source>Deprecated:</source>
          <target state="translated">Deprecated:</target>
        </trans-unit>
        <trans-unit id="46e54bf33a4ff01d1ec588f4b0775ec8c766db47" translate="yes" xml:space="preserve">
          <source>DeprecatedCurrencyPipe</source>
          <target state="translated">DeprecatedCurrencyPipe</target>
        </trans-unit>
        <trans-unit id="881e558149c3d7461f7105dcd218606fba5255d4" translate="yes" xml:space="preserve">
          <source>DeprecatedDatePipe</source>
          <target state="translated">DeprecatedDatePipe</target>
        </trans-unit>
        <trans-unit id="a80b002b3b2b9739312dfeff0cd916fcd023473b" translate="yes" xml:space="preserve">
          <source>DeprecatedDecimalPipe</source>
          <target state="translated">DeprecatedDecimalPipe</target>
        </trans-unit>
        <trans-unit id="6ad89b35c430aa53c5d3428e1bd57a5b2e322ecb" translate="yes" xml:space="preserve">
          <source>DeprecatedI18NPipesModule</source>
          <target state="translated">DeprecatedI18NPipesModule</target>
        </trans-unit>
        <trans-unit id="478a6233375e237e3c63a4313edb2aa2efd29eff" translate="yes" xml:space="preserve">
          <source>DeprecatedLoadChildren</source>
          <target state="translated">DeprecatedLoadChildren</target>
        </trans-unit>
        <trans-unit id="fa7601a3ccc28c9e4c84755f153eaaf8ee9582b9" translate="yes" xml:space="preserve">
          <source>DeprecatedPercentPipe</source>
          <target state="translated">DeprecatedPercentPipe</target>
        </trans-unit>
        <trans-unit id="6476c77b7d784c95dbbc590911032f580e3f0bc4" translate="yes" xml:space="preserve">
          <source>Deprecation announced</source>
          <target state="translated">宣布停止使用</target>
        </trans-unit>
        <trans-unit id="5058335bf29d5e3c5f14c109e68c0711e5a7f2dc" translate="yes" xml:space="preserve">
          <source>Deprecation practices</source>
          <target state="translated">废弃的做法</target>
        </trans-unit>
        <trans-unit id="37d4da9c3e2f3e172d0498996ef3eb3a0f02a619" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured as static (that is, without reflection).</source>
          <target state="translated">描述应如何将 &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 配置为静态（即无反射）。</target>
        </trans-unit>
        <trans-unit id="0077d6cc8491b4b5017fb89074903642a9fbc3ff" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured.</source>
          <target state="translated">描述应该如何配置 &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6600b83d9745dd9a9b042112a73a8a3701ed489a" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured as static (that is, without reflection).</source>
          <target state="translated">描述应如何将 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 配置为静态（即无反射）。</target>
        </trans-unit>
        <trans-unit id="f289052a0ab33778b3202d92989357da4acfe96e" translate="yes" xml:space="preserve">
          <source>Describes how the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; should be configured.</source>
          <target state="translated">描述应该如何配置 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="4f79b6c5e66c1a9169be45d48f9c57637ecaeef8" translate="yes" xml:space="preserve">
          <source>Designing a class with dependency injection makes the class easier to test. Listing dependencies as constructor parameters may be all you need to test application parts effectively.</source>
          <target state="translated">设计一个具有依赖注入的类,可以使类更容易测试。将依赖关系列为构造参数可能是你有效测试应用部分所需要的全部。</target>
        </trans-unit>
        <trans-unit id="29438575ddcbe936d3920226aa524c3393a610bf" translate="yes" xml:space="preserve">
          <source>Despite inner animations being disabled, a parent animation can &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; for inner elements located in disabled areas of the template and still animate them if needed. This is also the case for when a sub animation is queried by a parent and then later animated using &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">尽管禁用了内部动画，但是父动画可以 &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 以获取位于模板的禁用区域中的内部元素，并在需要时仍对其进行动画处理。当父级查询子动画然后再使用 &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt; 对其进行动画处理时，也是如此。</target>
        </trans-unit>
        <trans-unit id="3d2e8f0ff165e77f918de800977b3bf4c84cf007" translate="yes" xml:space="preserve">
          <source>Destroy the Angular platform and all Angular applications on the page.</source>
          <target state="translated">销毁页面上的Angular平台和所有Angular应用。</target>
        </trans-unit>
        <trans-unit id="6192cea44a795469f201424a686d1f23e3abe2c1" translate="yes" xml:space="preserve">
          <source>Destroy the existing platform.</source>
          <target state="translated">摧毁现有平台。</target>
        </trans-unit>
        <trans-unit id="e232f65b77c6e508c16de7f3b985ec765080941e" translate="yes" xml:space="preserve">
          <source>Destroys a view attached to this container</source>
          <target state="translated">销毁连接到这个容器的视图</target>
        </trans-unit>
        <trans-unit id="371555b173a3f42e5532895e8a8625000752c456" translate="yes" xml:space="preserve">
          <source>Destroys all views in this container.</source>
          <target state="translated">销毁此容器中的所有视图。</target>
        </trans-unit>
        <trans-unit id="ea8b05fa2a4fef33bdb4c22d2fbb88d4595299a7" translate="yes" xml:space="preserve">
          <source>Destroys the animation, after invoking the &lt;code&gt;&lt;a href=&quot;animationplayer#beforeDestroy&quot;&gt;beforeDestroy&lt;/a&gt;()&lt;/code&gt; callback. Calls the &lt;code&gt;onDestroy()&lt;/code&gt; callback when destruction is completed.</source>
          <target state="translated">调用 &lt;code&gt;&lt;a href=&quot;animationplayer#beforeDestroy&quot;&gt;beforeDestroy&lt;/a&gt;()&lt;/code&gt; 回调后，销毁动画。销毁完成时调用 &lt;code&gt;onDestroy()&lt;/code&gt; 回调。</target>
        </trans-unit>
        <trans-unit id="ea9bd7e5ed512aff6189ff2afc542da79a36f817" translate="yes" xml:space="preserve">
          <source>Destroys the component instance and all of the data structures associated with it.</source>
          <target state="translated">销毁组件实例和与之相关的所有数据结构。</target>
        </trans-unit>
        <trans-unit id="9cf6b78e95b5f09265815794782da5cdbeb56f56" translate="yes" xml:space="preserve">
          <source>Destroys the module instance and all of the data structures associated with it.</source>
          <target state="translated">销毁模块实例和与之相关的所有数据结构。</target>
        </trans-unit>
        <trans-unit id="fbb6f7a742a4eb748fc690a4f9d045ccc7e05659" translate="yes" xml:space="preserve">
          <source>Destroys this view and all of the data structures associated with it.</source>
          <target state="translated">销毁此视图以及与之相关的所有数据结构。</target>
        </trans-unit>
        <trans-unit id="578ea30d0209bdd1cc7a4e4351b5ad10a4b7a13b" translate="yes" xml:space="preserve">
          <source>Destructured variable or constant not supported</source>
          <target state="translated">不支持结构化变量或常量</target>
        </trans-unit>
        <trans-unit id="83b7a75d5bc1f9e9bbab53fd26eee0eebc347467" translate="yes" xml:space="preserve">
          <source>Desugared</source>
          <target state="translated">Desugared</target>
        </trans-unit>
        <trans-unit id="8d08aa8455a14b811d9b6fe35ed129bab859632f" translate="yes" xml:space="preserve">
          <source>Detach change detector to limit how often check occurs</source>
          <target state="translated">拆卸零钱检测器,以限制检查的频率。</target>
        </trans-unit>
        <trans-unit id="795a62180e964ae94c53bb9b9985f6f0b5bcd60a" translate="yes" xml:space="preserve">
          <source>Detached views are not checked during change detection runs until they are re-attached, even if they are marked as dirty.</source>
          <target state="translated">脱离的视图在变更检测运行期间不会被检查,直到它们被重新连接,即使它们被标记为脏。</target>
        </trans-unit>
        <trans-unit id="b0a9d6f591149520b6b2d78586833388b575e21c" translate="yes" xml:space="preserve">
          <source>DetachedRouteHandle</source>
          <target state="translated">DetachedRouteHandle</target>
        </trans-unit>
        <trans-unit id="020cb0ab4db35fbda482781c20576f39e92991bb" translate="yes" xml:space="preserve">
          <source>Detaches a view from dirty checking again.</source>
          <target state="translated">再从脏检查中分离出一个观点。</target>
        </trans-unit>
        <trans-unit id="ce080e741c27851c45aad3fbfe35ae9b1e68df51" translate="yes" xml:space="preserve">
          <source>Detaches a view from this container without destroying it. Use along with &lt;code&gt;&lt;a href=&quot;../forms/formarray#insert&quot;&gt;insert()&lt;/a&gt;&lt;/code&gt; to move a view within the current container.</source>
          <target state="translated">从该容器分离视图而不破坏它。与 &lt;code&gt;&lt;a href=&quot;../forms/formarray#insert&quot;&gt;insert()&lt;/a&gt;&lt;/code&gt; 一起使用可在当前容器内移动视图。</target>
        </trans-unit>
        <trans-unit id="94686a999c0455a3cf8b8386bc0cf59bdde40664" translate="yes" xml:space="preserve">
          <source>Detaches this view from the change-detection tree. A detached view is not checked until it is reattached. Use in combination with &lt;code&gt;&lt;a href=&quot;testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; to implement local change detection checks.</source>
          <target state="translated">从更改检测树中分离该视图。重新连接分离视图之前，不对其进行检查。与 &lt;code&gt;&lt;a href=&quot;testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; 结合使用可实现本地更改检测检查。</target>
        </trans-unit>
        <trans-unit id="e00db26f44f35fb87be8830347a5264c12dde83e" translate="yes" xml:space="preserve">
          <source>Detect and act upon changes that Angular can't or won't detect on its own.</source>
          <target state="translated">检测并执行Angular无法或不愿自行检测的变化。</target>
        </trans-unit>
        <trans-unit id="f8a127bfe17898a3b255876bcdf1d1c9fa3928de" translate="yes" xml:space="preserve">
          <source>Detect and act upon changes to input property values with the &lt;code&gt;ngOnChanges()&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; lifecycle hook interface.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; 生命周期挂钩接口的 &lt;code&gt;ngOnChanges()&lt;/code&gt; 方法检测输入属性值的更改并采取措施。</target>
        </trans-unit>
        <trans-unit id="857eba68fb4e46cab2b9953790865f2a5092ebea" translate="yes" xml:space="preserve">
          <source>Detecting that an error occurred is one thing. Interpreting that error and composing a user-friendly response is a bit more involved.</source>
          <target state="translated">检测到错误发生是一回事。解释该错误并写出一个用户友好的响应是比较复杂的。</target>
        </trans-unit>
        <trans-unit id="f682c256f996e01f2e6e6fb59f14d0e1d884fbad" translate="yes" xml:space="preserve">
          <source>Detecting when an animation is disabled</source>
          <target state="translated">检测动画何时被禁用</target>
        </trans-unit>
        <trans-unit id="04d06e3ff3564cb712418d032f6dfa595a2e7af4" translate="yes" xml:space="preserve">
          <source>Determines if a route should be reused</source>
          <target state="translated">确定途径是否应该被重复使用。</target>
        </trans-unit>
        <trans-unit id="5cb9846df8e89fd7757c4cecb42b1f09c86afecb" translate="yes" xml:space="preserve">
          <source>Determines if this route (and its subtree) should be detached to be reused later</source>
          <target state="translated">确定这个途径(和它的子树)是否应该被分离出来,以便以后重新使用。</target>
        </trans-unit>
        <trans-unit id="d9e64e88b5cb3aba35c3f9b37fc8405f431d8a8f" translate="yes" xml:space="preserve">
          <source>Determines if this route (and its subtree) should be reattached</source>
          <target state="translated">确定是否要重新连接该路由(及其子树)。</target>
        </trans-unit>
        <trans-unit id="bf63974ae0ae184173f6e5b9dd49393bfd79fa35" translate="yes" xml:space="preserve">
          <source>Determines when the router updates the browser URL. By default (&lt;code&gt;&quot;deferred&quot;&lt;/code&gt;), updates the browser URL after navigation has finished. Set to &lt;code&gt;'eager'&lt;/code&gt; to update the browser URL at the beginning of navigation. You can choose to update early so that, if navigation fails, you can show an error message with the URL that failed.</source>
          <target state="translated">确定路由器何时更新浏览器URL。默认情况下（ &lt;code&gt;&quot;deferred&quot;&lt;/code&gt; ），在导航完成后更新浏览器URL。设置为 &lt;code&gt;'eager'&lt;/code&gt; 以在导航开始时更新浏览器URL。您可以选择早期更新，这样，如果导航失败，则可以显示带有失败URL的错误消息。</target>
        </trans-unit>
        <trans-unit id="d4d104cdda5ff1053c0418ce564dd52363728bd7" translate="yes" xml:space="preserve">
          <source>Determines which injectors will provide the injectable, by either associating it with an @NgModule or other &lt;code&gt;&lt;a href=&quot;injectortype&quot;&gt;InjectorType&lt;/a&gt;&lt;/code&gt;, or by specifying that this injectable should be provided in the 'root' injector, which will be the application-level injector in most apps.</source>
          <target state="translated">通过将其与@NgModule或其他 &lt;code&gt;&lt;a href=&quot;injectortype&quot;&gt;InjectorType&lt;/a&gt;&lt;/code&gt; 关联，或通过指定应在&amp;ldquo;根&amp;rdquo;注入器中提供此注入物来确定哪些注入器将提供可注入物，在大多数应用程序中它将是应用程序级注入器。</target>
        </trans-unit>
        <trans-unit id="999c66c441c3226e0966ddbba9a0c570185161ff" translate="yes" xml:space="preserve">
          <source>Dev server target to run tests against.</source>
          <target state="translated">开发服务器目标来运行测试。</target>
        </trans-unit>
        <trans-unit id="965695ae3b5de08fbcc553664bd700779eca213f" translate="yes" xml:space="preserve">
          <source>DevDependencies</source>
          <target state="translated">DevDependencies</target>
        </trans-unit>
        <trans-unit id="b0608ab1bd96359355856ec5aafa9740f6d63c4d" translate="yes" xml:space="preserve">
          <source>Developer Tools</source>
          <target state="translated">开发者工具</target>
        </trans-unit>
        <trans-unit id="5083a3489727d560720fdf9a3fef93a68dd6422d" translate="yes" xml:space="preserve">
          <source>Developer-defined state that can be passed to any navigation. Access this value through the &lt;code&gt;Navigation.extras&lt;/code&gt; object returned from &lt;code&gt;router.getCurrentNavigation()&lt;/code&gt; while a navigation is executing.</source>
          <target state="translated">开发人员定义的状态，可以传递给任何导航。在执行 &lt;code&gt;Navigation.extras&lt;/code&gt; 通过从 &lt;code&gt;router.getCurrentNavigation()&lt;/code&gt; 返回的Navigation.extras对象访问此值。</target>
        </trans-unit>
        <trans-unit id="7d70420c9b5d5dcaf2a90e58e9939aeecc418d9e" translate="yes" xml:space="preserve">
          <source>Developing forms requires design skills (which are out of scope for this page), as well as framework support for &lt;em&gt;two-way data binding, change tracking, validation, and error handling&lt;/em&gt;, which you'll learn about on this page.</source>
          <target state="translated">开发表单需要设计技巧（不在本页面范围之内），以及对&lt;em&gt;双向数据绑定，更改跟踪，验证和错误处理的&lt;/em&gt;框架支持，您将在此页面上学习这些知识。</target>
        </trans-unit>
        <trans-unit id="31febd42549d5d48fe3c931baf9f040f396e2320" translate="yes" xml:space="preserve">
          <source>Developing schematics for libraries</source>
          <target state="translated">为图书馆开发原理图</target>
        </trans-unit>
        <trans-unit id="73c1a0ef58c564d4a10d5d0f9429f07214af85c4" translate="yes" xml:space="preserve">
          <source>Dictionary of objects associated with template local variables (e.g. &lt;code&gt;#foo&lt;/code&gt;), keyed by the local variable name.</source>
          <target state="translated">与模板局部变量（例如 &lt;code&gt;#foo&lt;/code&gt; ）关联的对象的字典，以局部变量名称作为关键字。</target>
        </trans-unit>
        <trans-unit id="d138e770ccb2b52d2c77f539bee53aeb46b6a506" translate="yes" xml:space="preserve">
          <source>Differences with &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 的差异</target>
        </trans-unit>
        <trans-unit id="5205f5f17a0df5d5c03d855d59f41a77eb75f242" translate="yes" xml:space="preserve">
          <source>Different classes can provide the same service. For example, the following code tells the injector to return a &lt;code&gt;BetterLogger&lt;/code&gt; instance when the component asks for a logger using the &lt;code&gt;Logger&lt;/code&gt; token.</source>
          <target state="translated">不同的类可以提供相同的服务。例如，以下代码告诉组件在组件使用 &lt;code&gt;Logger&lt;/code&gt; 令牌请求记录器时，注入程序返回 &lt;code&gt;BetterLogger&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="f312093a46be4a4c362b96e84ae7c5b57668ffd7" translate="yes" xml:space="preserve">
          <source>Different file types have different comment syntax so adjust accordingly.</source>
          <target state="translated">不同的文件类型有不同的注释语法,所以要相应调整。</target>
        </trans-unit>
        <trans-unit id="8bc5b687513fa24e83b6d7a0c90598defec2723f" translate="yes" xml:space="preserve">
          <source>Different languages have different pluralization rules and grammatical constructions that add complexity to the translation task. You can use regular expressions with the &lt;code&gt;plural&lt;/code&gt; and &lt;code&gt;select&lt;/code&gt; clauses to provide patterns that aid translation in these cases.</source>
          <target state="translated">不同的语言具有不同的复数规则和语法构造，这增加了翻译任务的复杂性。您可以将正则表达式与 &lt;code&gt;plural&lt;/code&gt; 和 &lt;code&gt;select&lt;/code&gt; 子句一起使用，以提供有助于在这些情况下进行翻译的模式。</target>
        </trans-unit>
        <trans-unit id="fddacc86c58629a7a06e78de09cc7ce3bca5ae83" translate="yes" xml:space="preserve">
          <source>Differential Loading</source>
          <target state="translated">差分加载</target>
        </trans-unit>
        <trans-unit id="2d7a4dce83d8a83a0203b47ca4aa73a375cb78c8" translate="yes" xml:space="preserve">
          <source>Differential Loading (Two builds w/Conditional Polyfills</source>
          <target state="translated">差分加载(两个构建/有条件的多晶硅填充物)。</target>
        </trans-unit>
        <trans-unit id="c0507f371f24db983eb326b7746378ec13825bee" translate="yes" xml:space="preserve">
          <source>Differential builds</source>
          <target state="translated">差异化建设</target>
        </trans-unit>
        <trans-unit id="ef47150250dc01045ca6f30fdb1d8fa1da1bfb0b" translate="yes" xml:space="preserve">
          <source>Differential loading can be explicitly disabled if it causes unexpected issues or you need to target ES5 specifically for legacy browser support.</source>
          <target state="translated">如果造成意外的问题,或者您需要专门针对ES5对传统浏览器的支持,可以明确地禁用差分加载。</target>
        </trans-unit>
        <trans-unit id="8d2d01050bb3ebcdc0e9b5c9da3e30627a86ce04" translate="yes" xml:space="preserve">
          <source>Differential loading is a strategy where the CLI builds two separate bundles as part of your deployed application.</source>
          <target state="translated">差别加载是一种策略,在这种策略中,CLI构建了两个独立的捆绑包,作为您部署的应用程序的一部分。</target>
        </trans-unit>
        <trans-unit id="e6559e68cd586a9e5aba6c76cebb91e98c156533" translate="yes" xml:space="preserve">
          <source>Differential loading is currently only supported when using &lt;code&gt;es2015&lt;/code&gt; as a compilation &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt;. When used with targets higher than &lt;code&gt;es2015&lt;/code&gt;, a warning is emitted during build time.</source>
          <target state="translated">当前仅在将 &lt;code&gt;es2015&lt;/code&gt; 用作编译 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; 时才支持差异加载。与高于 &lt;code&gt;es2015&lt;/code&gt; 的目标一起使用时，在构建期间会发出警告。</target>
        </trans-unit>
        <trans-unit id="17198706561cb331fc3c7bb7190d791c80826666" translate="yes" xml:space="preserve">
          <source>Differential loading is supported by default with version 8 and later of the Angular CLI. For each application project in your workspace, you can configure how builds are produced based on the &lt;code&gt;browserslist&lt;/code&gt; and &lt;code&gt;tsconfig.json&lt;/code&gt; files in your application project.</source>
          <target state="translated">默认情况下，Angular CLI版本8和更高版本支持差异加载。对于工作空间中的每个应用程序项目，您可以根据应用程序项目中的 &lt;code&gt;browserslist&lt;/code&gt; 和 &lt;code&gt;tsconfig.json&lt;/code&gt; 文件配置生成构建的方式。</target>
        </trans-unit>
        <trans-unit id="58150dc76bf26b88c5c5b48baaa6443ba5314f52" translate="yes" xml:space="preserve">
          <source>Direct use of the DOM APIs and explicit sanitization calls</source>
          <target state="translated">直接使用DOM APIs和明确的净化调用。</target>
        </trans-unit>
        <trans-unit id="164e0b79063f11a2936cf830fb48b8c7054cc118" translate="yes" xml:space="preserve">
          <source>Directive</source>
          <target state="translated">Directive</target>
        </trans-unit>
        <trans-unit id="e4adaa9d656e11f46881b340967de4f601ead5c8" translate="yes" xml:space="preserve">
          <source>Directive and component change detection and lifecycle hooks</source>
          <target state="translated">指令和组件变化检测和生命周期钩子</target>
        </trans-unit>
        <trans-unit id="1682fe77c47d222324b0302bf367d45dd3f72f4c" translate="yes" xml:space="preserve">
          <source>Directive and component instances have a lifecycle as Angular creates, updates, and destroys them. Developers can tap into key moments in that lifecycle by implementing one or more of the &lt;em&gt;lifecycle hook&lt;/em&gt; interfaces in the Angular &lt;code&gt;core&lt;/code&gt; library.</source>
          <target state="translated">指令实例和组件实例具有生命周期，因为Angular创建，更新和销毁它们。通过在Angular &lt;code&gt;core&lt;/code&gt; 库中实现一个或多个&lt;em&gt;生命周期挂钩&lt;/em&gt;接口，开发人员可以利用该生命周期中的关键时刻。</target>
        </trans-unit>
        <trans-unit id="e2654c073ed5bef1dd759fe92dd6b281c300cd6b" translate="yes" xml:space="preserve">
          <source>Directive automatically applied to Angular form controls that sets CSS classes based on control status.</source>
          <target state="translated">自动应用于Angular表单控件的指令,根据控件状态设置CSS类。</target>
        </trans-unit>
        <trans-unit id="75747f644b900a5f32ad06d340d4e026bf285acd" translate="yes" xml:space="preserve">
          <source>Directive automatically applied to Angular form groups that sets CSS classes based on control status (valid/invalid/dirty/etc).</source>
          <target state="translated">自动应用于Angular表单组的指令,根据控件状态(有效/无效/脏/等)设置CSS类。</target>
        </trans-unit>
        <trans-unit id="1fd55803370b29f5f55ad4e143686d9104e72374" translate="yes" xml:space="preserve">
          <source>Directive classes, like component classes, can implement &lt;a href=&quot;../../guide/lifecycle-hooks&quot;&gt;life-cycle hooks&lt;/a&gt; to influence their configuration and behavior.</source>
          <target state="translated">指令类（如组件类）可以实现&lt;a href=&quot;../../guide/lifecycle-hooks&quot;&gt;生命周期挂钩，&lt;/a&gt;以影响其配置和行为。</target>
        </trans-unit>
        <trans-unit id="c7a712e56a0e276f0e4a48dc5e00f75907a458cd" translate="yes" xml:space="preserve">
          <source>Directive configuration</source>
          <target state="translated">指令配置</target>
        </trans-unit>
        <trans-unit id="faa9397afbd793cccd58be80adb509a96a8af6c4" translate="yes" xml:space="preserve">
          <source>Directive custom prefix</source>
          <target state="translated">指令自定义前缀</target>
        </trans-unit>
        <trans-unit id="1731bdcdbdffa1afa963e4872f9861768196adf1" translate="yes" xml:space="preserve">
          <source>Directive selectors</source>
          <target state="translated">指令选择器</target>
        </trans-unit>
        <trans-unit id="233b1dbe21adf04a0e287966365f0552786ce49b" translate="yes" xml:space="preserve">
          <source>Directive spelling</source>
          <target state="translated">指导性拼写</target>
        </trans-unit>
        <trans-unit id="28c82071e940360118b0611d5c912a71c32a0100" translate="yes" xml:space="preserve">
          <source>Directives</source>
          <target state="translated">Directives</target>
        </trans-unit>
        <trans-unit id="134c65a3c9a1183f4e598f629537b52066c32c08" translate="yes" xml:space="preserve">
          <source>Directives and binding markup in a component's template modify views based on program data and logic.</source>
          <target state="translated">组件模板中的指令和绑定标记根据程序数据和逻辑修改视图。</target>
        </trans-unit>
        <trans-unit id="06b50e6029735d84376f972c0295eb92cee93b36" translate="yes" xml:space="preserve">
          <source>Directives are &lt;a href=&quot;../../guide/glossary#declarable&quot;&gt;declarables&lt;/a&gt;. They must be declared by an NgModule in order to be usable in an app.</source>
          <target state="translated">指令是&lt;a href=&quot;../../guide/glossary#declarable&quot;&gt;declarables&lt;/a&gt;。它们必须由NgModule声明才能在应用程序中使用。</target>
        </trans-unit>
        <trans-unit id="8bcaad152be1bbb16300fb098f14d0ff672bd855" translate="yes" xml:space="preserve">
          <source>Directives have lifecycle hooks too. A &lt;code&gt;SpyDirective&lt;/code&gt; can log when the element it spies upon is created or destroyed using the &lt;code&gt;ngOnInit&lt;/code&gt; and &lt;code&gt;ngOnDestroy&lt;/code&gt; hooks.</source>
          <target state="translated">指令也有生命周期挂钩。甲 &lt;code&gt;SpyDirective&lt;/code&gt; 当元件它在间谍创建或使用破坏可以登录 &lt;code&gt;ngOnInit&lt;/code&gt; 和 &lt;code&gt;ngOnDestroy&lt;/code&gt; 钩。</target>
        </trans-unit>
        <trans-unit id="97bea3fa344a86af3d956e5d588feb9cda5f972b" translate="yes" xml:space="preserve">
          <source>Directives overview</source>
          <target state="translated">指令概述</target>
        </trans-unit>
        <trans-unit id="26592a9a2f4cddfbb4afebe8ce3df3718441afde" translate="yes" xml:space="preserve">
          <source>Directives that behave like &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; can declare that they want the same treatment by including a static member marker that is a signal to the template compiler to treat them like &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. This static member for &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; is:</source>
          <target state="translated">行为类似于 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 的伪指令可以通过包含一个静态成员标记来声明它们希望得到相同的处理，这是向模板编译器发出将其视为 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 的信号。 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 的此静态成员为：</target>
        </trans-unit>
        <trans-unit id="e413521484883d1b26956d0c108786e5176aee96" translate="yes" xml:space="preserve">
          <source>Directives typically raise custom events with an Angular &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;. The directive creates an &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; and exposes it as a property. The directive calls &lt;code&gt;EventEmitter.emit(payload)&lt;/code&gt; to fire an event, passing in a message payload, which can be anything. Parent directives listen for the event by binding to this property and accessing the payload through the &lt;code&gt;$event&lt;/code&gt; object.</source>
          <target state="translated">指令通常使用Angular &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;引发自定义事件。该指令创建一个 &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; 并将其公开为属性。该指令调用 &lt;code&gt;EventEmitter.emit(payload)&lt;/code&gt; 触发事件，传递消息有效载荷，可以是任何东西。父指令通过绑定到该属性并通过 &lt;code&gt;$event&lt;/code&gt; 对象访问有效负载来监听事件。</target>
        </trans-unit>
        <trans-unit id="e162e9d83bd60ff3d908ebf32714d5b5149cc574" translate="yes" xml:space="preserve">
          <source>Directly enables or disables all usage analytics for the user, or prompts the user to set the status interactively, or sets the default status for the project.</source>
          <target state="translated">直接启用或禁用用户的所有使用分析,或提示用户交互设置状态,或设置项目的默认状态。</target>
        </trans-unit>
        <trans-unit id="1e78a95d04636868cba604820332052c052f098e" translate="yes" xml:space="preserve">
          <source>Disable Angular's development mode, which turns off assertions and other checks within the framework.</source>
          <target state="translated">禁用Angular的开发模式,关闭框架内的断言和其他检查。</target>
        </trans-unit>
        <trans-unit id="c502fe3e92db5333454c3f52453a1907dc9251e6" translate="yes" xml:space="preserve">
          <source>Disable animations application-wide</source>
          <target state="translated">在整个应用程序中禁用动画</target>
        </trans-unit>
        <trans-unit id="fa498c6d7585475093bb59ac3e4d903e7d385155" translate="yes" xml:space="preserve">
          <source>Disable checking of a binding expression by surrounding the expression in a call to the &lt;a href=&quot;template-syntax&quot;&gt;&lt;code&gt;$any()&lt;/code&gt; cast pseudo-function&lt;/a&gt;. The compiler treats it as a cast to the &lt;code&gt;any&lt;/code&gt; type just like in TypeScript when a &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt; or &lt;code&gt;as any&lt;/code&gt; cast is used.</source>
          <target state="translated">通过在对&lt;a href=&quot;template-syntax&quot;&gt; &lt;code&gt;$any()&lt;/code&gt; cast伪函数&lt;/a&gt;的调用中包含该表达式来禁用对绑定表达式的检查。编译器将其作为流延到 &lt;code&gt;any&lt;/code&gt; 类型就像在打字稿当 &lt;code&gt;&amp;lt;any&amp;gt;&lt;/code&gt; 或 &lt;code&gt;as any&lt;/code&gt; 铸造被使用。</target>
        </trans-unit>
        <trans-unit id="c941ff72a9b24436d3e952f909f1d7e77a6f5100" translate="yes" xml:space="preserve">
          <source>Disable the default XSRF protection.</source>
          <target state="translated">禁用默认的XSRF保护。</target>
        </trans-unit>
        <trans-unit id="eb9abe8b988d1d2892f78a259e71850606b0f9bf" translate="yes" xml:space="preserve">
          <source>Disable the form&amp;rsquo;s &lt;em&gt;Submit&lt;/em&gt; button until the form is valid.</source>
          <target state="translated">禁用表单的&amp;ldquo; &lt;em&gt;提交&amp;rdquo;&lt;/em&gt;按钮，直到表单有效为止。</target>
        </trans-unit>
        <trans-unit id="47dd9d43d5f5f62cbd433b889406a52005ee82ec" translate="yes" xml:space="preserve">
          <source>Disabled controls are exempt from validation checks and are not included in the aggregate value of their ancestor controls.</source>
          <target state="translated">被禁用的控件可免于验证检查,并且不包括在其祖先控件的总价值中。</target>
        </trans-unit>
        <trans-unit id="5ae642a07e4ba465762a1b462bf162baf3a09029" translate="yes" xml:space="preserve">
          <source>Disables Angular tools.</source>
          <target state="translated">禁用Angular工具。</target>
        </trans-unit>
        <trans-unit id="161f7e4cab69df56dfaa6ff79ced90206f307f8a" translate="yes" xml:space="preserve">
          <source>Disables automatic scroll restoration provided by the browser. See also &lt;a href=&quot;https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration&quot;&gt;window.history.scrollRestoration info&lt;/a&gt;.</source>
          <target state="translated">禁用浏览器提供的自动滚动恢复。另请参见&lt;a href=&quot;https://developers.google.com/web/updates/2015/09/history-api-scroll-restoration&quot;&gt;window.history.scrollRestoration信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7239e7edb443b9ef5c9fec4a7006576b15faeffb" translate="yes" xml:space="preserve">
          <source>Disables the control. This means the control is exempt from validation checks and excluded from the aggregate value of any parent. Its status is &lt;code&gt;DISABLED&lt;/code&gt;.</source>
          <target state="translated">禁用控件。这意味着该控件免于进行验证检查，并从任何父级的合计值中排除。其状态为 &lt;code&gt;DISABLED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49e06b6442e79995b5aa5867bdc26cb341c23f1c" translate="yes" xml:space="preserve">
          <source>Disabling Animations</source>
          <target state="translated">禁用动画</target>
        </trans-unit>
        <trans-unit id="f3b4e520315f40e64f137fc24078069b1c75376b" translate="yes" xml:space="preserve">
          <source>Disabling all animations</source>
          <target state="translated">禁用所有动画</target>
        </trans-unit>
        <trans-unit id="fa56a5729e4b504e45afd1c5470855dbccf0c4c0" translate="yes" xml:space="preserve">
          <source>Disabling an animation on an HTML element</source>
          <target state="translated">禁用HTML元素的动画</target>
        </trans-unit>
        <trans-unit id="1c34c40ced0ea58defc7d87903d8f5e5a3c5df00" translate="yes" xml:space="preserve">
          <source>Disabling type checking using &lt;code&gt;$any()&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;$any()&lt;/code&gt; 禁用类型检查</target>
        </trans-unit>
        <trans-unit id="2cdfcdd1a412a8c6a67bac7adc1e32bbe75bc366" translate="yes" xml:space="preserve">
          <source>Disallow &lt;code&gt;local-part&lt;/code&gt; (the part before the &lt;code&gt;@&lt;/code&gt; symbol) to begin or end with a period (&lt;code&gt;.&lt;/code&gt;).</source>
          <target state="translated">禁止 &lt;code&gt;local-part&lt;/code&gt; （ &lt;code&gt;@&lt;/code&gt; 符号前面的部分）以句点（ &lt;code&gt;.&lt;/code&gt; ）开头或结尾。</target>
        </trans-unit>
        <trans-unit id="e8edb13b82dcb96a8fe82f7bae4cd7f33b470b95" translate="yes" xml:space="preserve">
          <source>Disallow &lt;code&gt;local-part&lt;/code&gt; to be longer than 64 characters.</source>
          <target state="translated">不允许 &lt;code&gt;local-part&lt;/code&gt; 超过64个字符。</target>
        </trans-unit>
        <trans-unit id="6acc3c163f352ae3c5fcd3ac0f7d7a67ce1d0f50" translate="yes" xml:space="preserve">
          <source>Disallow the whole address to be longer than 254 characters.</source>
          <target state="translated">不允许整个地址超过254个字符。</target>
        </trans-unit>
        <trans-unit id="17e601d66c409630ceeac0a0e471360854bc32fa" translate="yes" xml:space="preserve">
          <source>Discard all remaining periodic tasks.</source>
          <target state="translated">丢弃所有剩余的定期任务。</target>
        </trans-unit>
        <trans-unit id="413c48586a41c6e13f4f84647a0a8c96368993ad" translate="yes" xml:space="preserve">
          <source>Disclaimer: The dates are offered as general guidance and may be adjusted by us when necessary to ensure delivery of a high-quality platform.</source>
          <target state="translated">免责声明:提供的日期为一般指导,我们可能会在必要时进行调整,以确保交付一个高质量的平台。</target>
        </trans-unit>
        <trans-unit id="8fb937b602b4f2ef21c7fab00ac15de3b3ba49ea" translate="yes" xml:space="preserve">
          <source>Discussion</source>
          <target state="translated">Discussion</target>
        </trans-unit>
        <trans-unit id="6e8d5a186dc622a3626ee7e4c637ddf280fc7288" translate="yes" xml:space="preserve">
          <source>Display a Heroes List</source>
          <target state="translated">显示英雄列表</target>
        </trans-unit>
        <trans-unit id="50ab06bc90999c25d476ad86b84dbf4119bc834a" translate="yes" xml:space="preserve">
          <source>Display additional details about internal operations during execution.</source>
          <target state="translated">显示执行过程中内部操作的其他细节。</target>
        </trans-unit>
        <trans-unit id="936697d64458ff8ca788647c7b0045284d1aa4df" translate="yes" xml:space="preserve">
          <source>Display the cart items</source>
          <target state="translated">显示购物车的项目</target>
        </trans-unit>
        <trans-unit id="dfa86afacc9fd4bee56e5c9b2e4c921a1bdc9fe2" translate="yes" xml:space="preserve">
          <source>Display the cart items.</source>
          <target state="translated">显示购物车的项目。</target>
        </trans-unit>
        <trans-unit id="12934993315662c08dc332b832a6fcfe68bd9435" translate="yes" xml:space="preserve">
          <source>Display the current status of &lt;code&gt;profileForm&lt;/code&gt; using interpolation.</source>
          <target state="translated">使用插值显示 &lt;code&gt;profileForm&lt;/code&gt; 的当前状态。</target>
        </trans-unit>
        <trans-unit id="293c04f1dc27393bab94e0e1df1f4a5820a7e2a8" translate="yes" xml:space="preserve">
          <source>Display the message from &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">显示 &lt;code&gt;HeroService&lt;/code&gt; 的消息</target>
        </trans-unit>
        <trans-unit id="8391500f52f913bef2f5436777cabddfd5197d63" translate="yes" xml:space="preserve">
          <source>Display the new product alert component as a child of the product list.</source>
          <target state="translated">将新产品警报组件作为产品列表的子组件显示。</target>
        </trans-unit>
        <trans-unit id="187db4f52e17ecfca5ae1efe1dac6099dd2a3091" translate="yes" xml:space="preserve">
          <source>Display validation errors to users and enable/disable form controls.</source>
          <target state="translated">向用户显示验证错误并启用/禁用表单控件。</target>
        </trans-unit>
        <trans-unit id="64e4975e075a85e6e6486a7508b2006fea68b3d0" translate="yes" xml:space="preserve">
          <source>Displayed text is sometimes supplied as the value of an attribute, rather than the content of tag. For example, if your template has an image with a &lt;code&gt;title&lt;/code&gt; attribute, the text value of the &lt;code&gt;title&lt;/code&gt; attribute needs to be translated.</source>
          <target state="translated">显示的文本有时作为属性的值而不是标签的内容提供。例如，如果你的模板有一个图像 &lt;code&gt;title&lt;/code&gt; 属性的文本值 &lt;code&gt;title&lt;/code&gt; 属性需要翻译。</target>
        </trans-unit>
        <trans-unit id="f76593be8dd0141a5ddaffd2686e576e08afc5b7" translate="yes" xml:space="preserve">
          <source>Displaying Data</source>
          <target state="translated">显示数据</target>
        </trans-unit>
        <trans-unit id="3382d66116a9a6c0577e8a5ed1325809b441a626" translate="yes" xml:space="preserve">
          <source>Displaying a code fragment</source>
          <target state="translated">显示代码片段</target>
        </trans-unit>
        <trans-unit id="a3d4457b2aebe7498f3aec39f2bcb0dfa5ebf35f" translate="yes" xml:space="preserve">
          <source>Displaying a form control value</source>
          <target state="translated">显示表单控制值</target>
        </trans-unit>
        <trans-unit id="ec7d1c82071d7dc99c5bd5ebb23d191f80fdd12b" translate="yes" xml:space="preserve">
          <source>Displaying dates, number, percentages, and currencies in a local format.</source>
          <target state="translated">以本地格式显示日期、数字、百分比和货币。</target>
        </trans-unit>
        <trans-unit id="c9fb97d71900591a885c42ac4de47f4b8ce3cb66" translate="yes" xml:space="preserve">
          <source>Displaying form status</source>
          <target state="translated">显示表格状态</target>
        </trans-unit>
        <trans-unit id="9a81501c320e1623a9a0ece8fddf13ed90c88c68" translate="yes" xml:space="preserve">
          <source>Displaying heroes</source>
          <target state="translated">展示英雄</target>
        </trans-unit>
        <trans-unit id="3e10904e7cc24806178428e12412202d516a97ad" translate="yes" xml:space="preserve">
          <source>Displaying multiple routes in named outlets</source>
          <target state="translated">在指定的网点中显示多个途径</target>
        </trans-unit>
        <trans-unit id="437c35fd09d5880b944f92117bf1891a887a73a2" translate="yes" xml:space="preserve">
          <source>Displaying the component</source>
          <target state="translated">显示组件</target>
        </trans-unit>
        <trans-unit id="87a45e164b445cbb2662704d3bf176b7ed450902" translate="yes" xml:space="preserve">
          <source>Displaying the first page quickly can be critical for user engagement. &lt;a href=&quot;https://www.thinkwithgoogle.com/marketing-resources/data-measurement/mobile-page-speed-new-industry-benchmarks/&quot;&gt;53 percent of mobile site visits are abandoned&lt;/a&gt; if pages take longer than 3 seconds to load. Your app may have to launch faster to engage these users before they decide to do something else.</source>
          <target state="translated">快速显示首页对于用户参与至关重要。如果网页加载时间超过3秒，&lt;a href=&quot;https://www.thinkwithgoogle.com/marketing-resources/data-measurement/mobile-page-speed-new-industry-benchmarks/&quot;&gt;将放弃53％的移动网站访问&lt;/a&gt;。您的应用可能必须启动得更快，才能吸引这些用户，然后他们才决定做其他事情。</target>
        </trans-unit>
        <trans-unit id="be6aac75dad35c792e30b1727ff36040ea8fd75b" translate="yes" xml:space="preserve">
          <source>Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees that match the switch expression's pluralization category.</source>
          <target state="translated">显示与开关表达式值相匹配的DOM子树,如果没有,则显示与开关表达式的复数类别相匹配的DOM子树。</target>
        </trans-unit>
        <trans-unit id="4a726d949246170017d0159180d56c3cdb4d23e0" translate="yes" xml:space="preserve">
          <source>Displays a message that the product has been added to the cart</source>
          <target state="translated">显示产品已添加到购物车的信息。</target>
        </trans-unit>
        <trans-unit id="15d60f9bd1f4d59065ade7eb83ac01154729d53b" translate="yes" xml:space="preserve">
          <source>Displays the application component for the active URL. Manages navigation from one component to the next.</source>
          <target state="translated">显示活动URL的应用组件。管理从一个组件到下一个组件的导航。</target>
        </trans-unit>
        <trans-unit id="b75673d407de8304eb7361d00582b1562567807f" translate="yes" xml:space="preserve">
          <source>Displays the collection in the order specified by the expression. In this example, the movie title orders the &lt;code&gt;movieList&lt;/code&gt;.</source>
          <target state="translated">以表达式指定的顺序显示集合。在此示例中，电影标题对 &lt;code&gt;movieList&lt;/code&gt; 进行排序。</target>
        </trans-unit>
        <trans-unit id="4f25bbe16efc9f89794f9928c10c073638f3c99c" translate="yes" xml:space="preserve">
          <source>Dispose of running hybrid AngularJS / Angular application.</source>
          <target state="translated">处置运行混合型AngularJS/Angular应用。</target>
        </trans-unit>
        <trans-unit id="5f8ab14727ef35723fd40bc395d5a15a9eb1136f" translate="yes" xml:space="preserve">
          <source>Disposes of the router.</source>
          <target state="translated">处置路由器。</target>
        </trans-unit>
        <trans-unit id="08c2a554ac7554886705572fdeb828f2042d79a9" translate="yes" xml:space="preserve">
          <source>Dive deeper into the capabilities and advanced feature of the Angular DI system in the following pages:</source>
          <target state="translated">在下面的页面中深入了解Angular DI系统的功能和高级特性。</target>
        </trans-unit>
        <trans-unit id="03779f03f1f9115d62b4f94d8a480686fae463e3" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; declare the following:</source>
          <target state="translated">不要&lt;em&gt;不&lt;/em&gt;声明如下：</target>
        </trans-unit>
        <trans-unit id="2475d66e74a14160938453ef0e85c7c2d0d851ed" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; reference the &lt;code&gt;userServiceStub&lt;/code&gt; object that's provided to the testing module in the body of your test. &lt;strong&gt;It does not work!&lt;/strong&gt; The &lt;code&gt;userService&lt;/code&gt; instance injected into the component is a completely &lt;em&gt;different&lt;/em&gt; object, a clone of the provided &lt;code&gt;userServiceStub&lt;/code&gt;.</source>
          <target state="translated">千万&lt;em&gt;不能&lt;/em&gt;引用 &lt;code&gt;userServiceStub&lt;/code&gt; 多数民众赞成提供给测试模块在测试的体对象。&lt;strong&gt;这是行不通的！&lt;/strong&gt;注入到组件中的 &lt;code&gt;userService&lt;/code&gt; 实例是一个完全&lt;em&gt;不同的&lt;/em&gt;对象，是提供的 &lt;code&gt;userServiceStub&lt;/code&gt; 的副本。</target>
        </trans-unit>
        <trans-unit id="12870bcd74aac23d50d0b29f666f89ec81c28f1f" translate="yes" xml:space="preserve">
          <source>Do a change detection run to make sure there are no pending changes. Throws an exceptions if there are.</source>
          <target state="translated">进行一次变更检测,以确保没有待定的变更。如果有,则抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="eb2dc836b8c593cdbd90fa95783598016fcbf09f" translate="yes" xml:space="preserve">
          <source>Do a change detection run to make sure there were no changes.</source>
          <target state="translated">做一个变化检测运行,以确保没有变化。</target>
        </trans-unit>
        <trans-unit id="2313636875302c5d743751b15211e002d72e6da2" translate="yes" xml:space="preserve">
          <source>Do not create a node that is both a &lt;em&gt;header&lt;/em&gt; and an &lt;em&gt;item&lt;/em&gt; node. That is, do not specify the &lt;code&gt;url&lt;/code&gt; property of a &lt;em&gt;header&lt;/em&gt; node.</source>
          <target state="translated">不要创建既是&lt;em&gt;标题&lt;/em&gt;节点又是&lt;em&gt;项目&lt;/em&gt;节点的节点。也就是说，请勿指定&lt;em&gt;标头&lt;/em&gt;节点的 &lt;code&gt;url&lt;/code&gt; 属性。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="faa0a4df964bbffd5263e64e7f24f3bd50f08908" translate="yes" xml:space="preserve">
          <source>Do not depend on this.</source>
          <target state="translated">不要依赖这个。</target>
        </trans-unit>
        <trans-unit id="1347b0bda514ee25e75111d5f7406049b122ac68" translate="yes" xml:space="preserve">
          <source>Do not import &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; in any other module. &lt;em&gt;Feature modules&lt;/em&gt; and &lt;em&gt;lazy-loaded modules&lt;/em&gt; should import &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; instead. They need the common directives. They don't need to re-install the app-wide providers.</source>
          <target state="translated">不要在任何其他模块中导入 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 。&lt;em&gt;功能模块&lt;/em&gt;和&lt;em&gt;延迟加载的模块&lt;/em&gt;应改为导入 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 。他们需要通用指令。他们不需要重新安装应用程序范围的提供程序。</target>
        </trans-unit>
        <trans-unit id="b53aacf7cfdb75cab36ee91ea58b40ba72ec414f" translate="yes" xml:space="preserve">
          <source>Do not re-configure &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; after calling &lt;code&gt;createComponent&lt;/code&gt;.</source>
          <target state="translated">调用 &lt;code&gt;createComponent&lt;/code&gt; 后不要重新配置 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a23b6ef2227e6ccff39230682cb9bbb0db07d40" translate="yes" xml:space="preserve">
          <source>Do not re-configure the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; after calling &lt;code&gt;compileComponents()&lt;/code&gt;.</source>
          <target state="translated">调用 &lt;code&gt;compileComponents()&lt;/code&gt; 之后，请勿重新配置 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="766289fcaf6f3358a5de785cef51decc48e7fed0" translate="yes" xml:space="preserve">
          <source>Do not refer to ambient types in metadata expressions.</source>
          <target state="translated">不要在元数据表达式中引用环境类型。</target>
        </trans-unit>
        <trans-unit id="d6405f3e12cf5c79eef4bce2326b3e7580784498" translate="yes" xml:space="preserve">
          <source>Do not retry &lt;strong&gt;authentication&lt;/strong&gt; requests, since these should only be initiated by user action. We don't want to lock out user accounts with repeated login requests that the user has not initiated.</source>
          <target state="translated">不要重试&lt;strong&gt;身份验证&lt;/strong&gt;请求，因为这些请求只能由用户操作启动。我们不希望因用户尚未发起的重复登录请求而锁定用户帐户。</target>
        </trans-unit>
        <trans-unit id="28a19ab23e9fe883d6e7f97200affa843fe8c5f9" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt; in the same spec as &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">不要在与 &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt; 相同的规范中使用 &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a5db8d50567ea1e510a8a39e340d4f4053b0f11" translate="yes" xml:space="preserve">
          <source>Do not use &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt; in the same spec as &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">不要在与 &lt;code&gt;&lt;a href=&quot;createangulartestingmodule&quot;&gt;createAngularTestingModule&lt;/a&gt;&lt;/code&gt; 相同的规范中使用 &lt;code&gt;&lt;a href=&quot;createangularjstestingmodule&quot;&gt;createAngularJSTestingModule&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2335b0f690b63608971fef94146a83235635e315" translate="yes" xml:space="preserve">
          <source>Do not use the real path when resolving modules.</source>
          <target state="translated">解析模块时不要使用真实路径。</target>
        </trans-unit>
        <trans-unit id="e79dc690e68fe885deb4f02b28c242039901b6e5" translate="yes" xml:space="preserve">
          <source>Do not use this in a production server environment. Use pre-compiled &lt;a href=&quot;../core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;rendermodulefactory&quot;&gt;&lt;code&gt;renderModuleFactory&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">不要在生产服务器环境中使用它。而是将预编译的&lt;a href=&quot;../core/ngmodulefactory&quot;&gt; &lt;code&gt;NgModuleFactory&lt;/code&gt; &lt;/a&gt;与&lt;a href=&quot;rendermodulefactory&quot;&gt; &lt;code&gt;renderModuleFactory&lt;/code&gt; &lt;/a&gt;一起使用。</target>
        </trans-unit>
        <trans-unit id="63af3a5e4c9dc50cfdde2fcbffecebe94bfb4d50" translate="yes" xml:space="preserve">
          <source>Do this only in the beginning to avoid accidentally deleting your own tests and git setup!</source>
          <target state="translated">只有在开始的时候才这样做,以避免不小心删除自己的测试和git设置!</target>
        </trans-unit>
        <trans-unit id="20cca558f89d5711c8f3da0efc9477ae18de9033" translate="yes" xml:space="preserve">
          <source>Do this with the &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#checkForUpdate&quot;&gt;checkForUpdate()&lt;/a&gt;&lt;/code&gt; method:</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#checkForUpdate&quot;&gt;checkForUpdate()&lt;/a&gt;&lt;/code&gt; 方法执行此操作：</target>
        </trans-unit>
        <trans-unit id="78ddf7d15d9eadd3b6e0343a1c6248aa24d007b7" translate="yes" xml:space="preserve">
          <source>Do you need a &lt;code&gt;Routing Module&lt;/code&gt;?</source>
          <target state="translated">您是否需要一个 &lt;code&gt;Routing Module&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="974e4b1b193a71bcf82334316bb8290d4d24ce87" translate="yes" xml:space="preserve">
          <source>DoBootstrap</source>
          <target state="translated">DoBootstrap</target>
        </trans-unit>
        <trans-unit id="531f9022ed7522c3f7c2f8318631044b8f144ea4" translate="yes" xml:space="preserve">
          <source>DoCheck</source>
          <target state="translated">DoCheck</target>
        </trans-unit>
        <trans-unit id="fe56da291c49fe9ffdba4c0121544e151ccd5dda" translate="yes" xml:space="preserve">
          <source>Doc generation and tooling</source>
          <target state="translated">文件生成和工具</target>
        </trans-unit>
        <trans-unit id="6b23b8dc766283282a9dd088b77fbc4505a2bac3" translate="yes" xml:space="preserve">
          <source>Documentation for using Bazel for frontend projects is linked from &lt;a href=&quot;https://docs.bazel.build/versions/master/bazel-and-javascript.html&quot;&gt;https://docs.bazel.build/versions/master/bazel-and-javascript.html&lt;/a&gt;.</source>
          <target state="translated">从&lt;a href=&quot;https://docs.bazel.build/versions/master/bazel-and-javascript.html&quot;&gt;https://docs.bazel.build/versions/master/bazel-and-javascript.html&lt;/a&gt;链接了将Bazel用于前端项目的文档。</target>
        </trans-unit>
        <trans-unit id="636ed57eb2bb3515c8353809df42914e3c29dec9" translate="yes" xml:space="preserve">
          <source>Does &lt;strong&gt;not&lt;/strong&gt; declare components.</source>
          <target state="translated">难道&lt;strong&gt;不&lt;/strong&gt;声明组件。</target>
        </trans-unit>
        <trans-unit id="7cbd179f94380994e248d01aed9e9b9bcf8589a6" translate="yes" xml:space="preserve">
          <source>Does NOT alter text nodes inside HTML tags such as &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&lt;a href=&quot;../forms/defaultvalueaccessor&quot;&gt;textarea&lt;/a&gt;&amp;gt;&lt;/code&gt;, where whitespace characters are significant.</source>
          <target state="translated">请勿更改HTML标记内的文本节点，例如 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;&lt;a href=&quot;../forms/defaultvalueaccessor&quot;&gt;textarea&lt;/a&gt;&amp;gt;&lt;/code&gt; ，其中空格字符很重要。</target>
        </trans-unit>
        <trans-unit id="624064fe82af064c5846c4c65db2781b410f7f8b" translate="yes" xml:space="preserve">
          <source>Does not retrieve elements or directives that are in other components' templates, since a component's template is always a black box to its ancestors.</source>
          <target state="translated">不检索其他组件模板中的元素或指令,因为一个组件的模板对其祖先来说总是一个黑盒子。</target>
        </trans-unit>
        <trans-unit id="6ffc672431583e55590e23024e3b6210dab8403c" translate="yes" xml:space="preserve">
          <source>Does not support configuration.</source>
          <target state="translated">不支持配置。</target>
        </trans-unit>
        <trans-unit id="c74588ae83c3abe096ca0998ef59559ef0320224" translate="yes" xml:space="preserve">
          <source>Does not support parent-child relationship selectors.</source>
          <target state="translated">不支持父子关系选择器。</target>
        </trans-unit>
        <trans-unit id="c2c19c3e51742058705ab287b418c0f553709384" translate="yes" xml:space="preserve">
          <source>Doing so adds clarity to the code. But it's not technically necessary. Although &lt;code&gt;AlexComponent&lt;/code&gt; has a &lt;code&gt;name&lt;/code&gt; property, as required by its &lt;code&gt;Base&lt;/code&gt; class, its class signature doesn't mention &lt;code&gt;Parent&lt;/code&gt;.</source>
          <target state="translated">这样做可以使代码更加清晰。但这在技术上不是必需的。尽管 &lt;code&gt;AlexComponent&lt;/code&gt; 具有其 &lt;code&gt;Base&lt;/code&gt; 类要求的 &lt;code&gt;name&lt;/code&gt; 属性，但其类签名未提及 &lt;code&gt;Parent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="651ab4cdc0cde42e12d6952e46d048642d9f36c3" translate="yes" xml:space="preserve">
          <source>Doing this could break lazy-loading into currently running apps, especially if the lazy-loaded chunks use filenames with hashes, which change every version.</source>
          <target state="translated">这样做可能会破坏当前正在运行的应用程序的懒加载,特别是如果懒加载的块使用带有哈希的文件名,而哈希的文件名每个版本都会改变。</target>
        </trans-unit>
        <trans-unit id="fe17586b8fdcc1f1c069a1a6eebd32cd0d75b66c" translate="yes" xml:space="preserve">
          <source>DomSanitizer</source>
          <target state="translated">DomSanitizer</target>
        </trans-unit>
        <trans-unit id="3e53d3f18b0d8a00e18fd9ab729b7a8fae48cac5" translate="yes" xml:space="preserve">
          <source>DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing values to be safe to use in the different DOM contexts.</source>
          <target state="translated">DomSanitizer有助于防止跨站点脚本安全漏洞(XSS),通过对值进行消毒,使其在不同的DOM上下文中安全使用。</target>
        </trans-unit>
        <trans-unit id="9b10914d8b0a097ace7176e8973f5c3dee92bb44" translate="yes" xml:space="preserve">
          <source>Domain</source>
          <target state="translated">Domain</target>
        </trans-unit>
        <trans-unit id="edc93410256fe4bcfcc1daf46c49efa65723ce0c" translate="yes" xml:space="preserve">
          <source>Domain feature modules are typically imported exactly once by a larger feature module.</source>
          <target state="translated">领域功能模块一般由一个较大的功能模块精确导入一次。</target>
        </trans-unit>
        <trans-unit id="4fce94c654a674f436b255450f8d45d5c2630c5f" translate="yes" xml:space="preserve">
          <source>Domain feature modules consist mostly of declarations. Only the top component is exported.</source>
          <target state="translated">领域功能模块主要由声明组成。只有顶部组件被导出。</target>
        </trans-unit>
        <trans-unit id="7d1601315ef4f7067cbdc3059ff63048a59d715e" translate="yes" xml:space="preserve">
          <source>Domain feature modules deliver a user experience dedicated to a particular application domain like editing a customer or placing an order.</source>
          <target state="translated">领域功能模块提供专门针对特定应用领域的用户体验,如编辑客户或下订单。</target>
        </trans-unit>
        <trans-unit id="8dbbc2071a2038f14ccfa4a11eb9ba7f08805721" translate="yes" xml:space="preserve">
          <source>Domain feature modules rarely have providers. When they do, the lifetime of the provided services should be the same as the lifetime of the module.</source>
          <target state="translated">领域功能模块很少有提供者。如果有的话,所提供的服务的寿命应该与模块的寿命相同。</target>
        </trans-unit>
        <trans-unit id="ef770887f44abfda530598989a0cab61a80d18d4" translate="yes" xml:space="preserve">
          <source>Domain feature modules.</source>
          <target state="translated">域功能模块。</target>
        </trans-unit>
        <trans-unit id="cb3187aa0ca33ec2d7071c6bcfd338ee7a22f4bf" translate="yes" xml:space="preserve">
          <source>Domain-specific libraries</source>
          <target state="translated">特定领域图书馆</target>
        </trans-unit>
        <trans-unit id="abde3fdb171993c14d3ae55105d06f6114f07e22" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t send a request if the value stays the same (rapidly hit a character, then backspace, for instance).</source>
          <target state="translated">如果值保持不变（例如，先击中一个字符，然后按退格键），则不要发送请求。</target>
        </trans-unit>
        <trans-unit id="93de9a249143adbeeeb82cbc813b9ce310ec9d8a" translate="yes" xml:space="preserve">
          <source>Don't ascend to ancestors of the node requesting injection.</source>
          <target state="translated">不要上升到请求注入的节点的祖先。</target>
        </trans-unit>
        <trans-unit id="ce77c0300b3a5f10444391a94340295523b51e8d" translate="yes" xml:space="preserve">
          <source>Don't bother re-exporting pure service modules. Pure service modules don't export &lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;declarable&lt;/a&gt; classes that another NgModule could use. For example, there's no point in re-exporting &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; because it doesn't export anything. Its only purpose is to add http service providers to the application as a whole.</source>
          <target state="translated">不要麻烦重新导出纯服务模块。纯服务模块不出口&lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;申报&lt;/a&gt;类，另一个NgModule可以使用。例如，重新导出 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 没有意义，因为它不导出任何内容。其唯一目的是将http服务提供者整体添加到应用程序中。</target>
        </trans-unit>
        <trans-unit id="6590e628737b5e6b0ef0760c4f85f662467acd91" translate="yes" xml:space="preserve">
          <source>Don't declare the following:</source>
          <target state="translated">不要申报以下内容。</target>
        </trans-unit>
        <trans-unit id="9615d146789f79dc31aca9c405d7130f71c9e375" translate="yes" xml:space="preserve">
          <source>Don't do that here. If the &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; value were &lt;code&gt;'prefix'&lt;/code&gt;, &lt;em&gt;every&lt;/em&gt; URL would match &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">不要在这里做。如果 &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 值为 &lt;code&gt;'prefix'&lt;/code&gt; ，则&lt;em&gt;每个&lt;/em&gt; URL都将匹配 &lt;code&gt;''&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65a16276e33123e39c8a4d00d367506a93d1886b" translate="yes" xml:space="preserve">
          <source>Don't eagerly import something from a lazy-loaded module</source>
          <target state="translated">不要急于从一个懒惰加载的模块中导入一些东西</target>
        </trans-unit>
        <trans-unit id="41bb59a523c9daf81e4a26d6a2e69fa45bb7816d" translate="yes" xml:space="preserve">
          <source>Don't export the following:</source>
          <target state="translated">不要输出以下内容。</target>
        </trans-unit>
        <trans-unit id="98def866f6784d12e1232d4ba1ac26d20f4f4320" translate="yes" xml:space="preserve">
          <source>Don't fetch data in a component constructor. You shouldn't worry that a new component will try to contact a remote server when created under test or before you decide to display it. Constructors should do no more than set the initial local variables to simple values.</source>
          <target state="translated">不要在组件构造函数中获取数据。你不应该担心一个新的组件在测试中创建时或在你决定显示它之前会试图联系远程服务器。构造函数应该做的只是将初始的本地变量设置为简单的值。</target>
        </trans-unit>
        <trans-unit id="fc491bacf383f1a73e23a426a3e14781ff636809" translate="yes" xml:space="preserve">
          <source>Don't forget the asterisk (*) in front of &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. It's a critical part of the syntax.</source>
          <target state="translated">不要忘记 &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 前面的星号（*）。这是语法的关键部分。</target>
        </trans-unit>
        <trans-unit id="4f0559c481e0584bb38279fe9351ea488db1fca7" translate="yes" xml:space="preserve">
          <source>Don't forget the asterisk (*) in front of &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. It's a critical part of the syntax.</source>
          <target state="translated">不要忘记 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 前面的星号（*）。这是语法的关键部分。</target>
        </trans-unit>
        <trans-unit id="e5940c21ded73420d9560fb5d88d6ba510bc7cd5" translate="yes" xml:space="preserve">
          <source>Don't forget the asterisk (&lt;code&gt;*&lt;/code&gt;) in front of &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. For more information on the asterisk, see the &lt;a href=&quot;structural-directives#the-asterisk--prefix&quot;&gt;asterisk (*) prefix&lt;/a&gt; section of &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">不要忘了 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 前面的星号（ &lt;code&gt;*&lt;/code&gt; ）。有关星号的更多信息，请参见《&lt;a href=&quot;structural-directives&quot;&gt;结构指令》中&lt;/a&gt;的&lt;a href=&quot;structural-directives#the-asterisk--prefix&quot;&gt;星号（*）前缀&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="c9d7069436c420884018ebec9bd644a89641d14d" translate="yes" xml:space="preserve">
          <source>Don't forget the leading asterisk (*) in &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. It is an essential part of the syntax. For more information, see the &lt;a href=&quot;template-syntax#ngFor&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">不要忘记 &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 中的前导星号（*）。它是语法的重要组成部分。有关更多信息，请参见&lt;a href=&quot;template-syntax#ngFor&quot;&gt;模板语法&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="2f88961494e42906518ac773630f15b9ea4c9613" translate="yes" xml:space="preserve">
          <source>Don't forget the leading asterisk (*) in &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. It is an essential part of the syntax. Read more about &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in the &lt;a href=&quot;template-syntax#ngIf&quot;&gt;ngIf section&lt;/a&gt; of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">不要忘记 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 中的前导星号（*）。它是语法的重要组成部分。在&lt;a href=&quot;template-syntax&quot;&gt;模板语法&lt;/a&gt;页面的&lt;a href=&quot;template-syntax#ngIf&quot;&gt;ngIf部分&lt;/a&gt;中阅读有关 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;*&lt;/code&gt; 的更多信息。</target>
        </trans-unit>
        <trans-unit id="240c178f010ce6adf5d28fb137f1d1e68a75490c" translate="yes" xml:space="preserve">
          <source>Don't prefix &lt;code&gt;output&lt;/code&gt; properties</source>
          <target state="translated">不要为 &lt;code&gt;output&lt;/code&gt; 属性添加前缀</target>
        </trans-unit>
        <trans-unit id="8b73753946ee9fbedb2c567c98f11e350b60fde4" translate="yes" xml:space="preserve">
          <source>Don't provide any template or style encapsulation.</source>
          <target state="translated">不要提供任何模板或样式封装。</target>
        </trans-unit>
        <trans-unit id="034cd612a1e6136ca10cbef73016d80fa0900bab" translate="yes" xml:space="preserve">
          <source>Don't verify connected clients are part of allowed hosts.</source>
          <target state="translated">不要验证连接的客户端是否属于允许的主机。</target>
        </trans-unit>
        <trans-unit id="80b118003323fb9fdf485b6bd6d8bdfcc8308676" translate="yes" xml:space="preserve">
          <source>Down the road, you can inject a data service to get and save real data or perhaps expose these properties as inputs and outputs (see &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;Input and output properties&lt;/a&gt; on the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page) for binding to a parent component. This is not a concern now and these future changes won't affect the form.</source>
          <target state="translated">在将来，您可以注入数据服务以获取和保存实际数据，或者可以将这些属性作为输入和输出（请参见&amp;ldquo; &lt;a href=&quot;template-syntax&quot;&gt;模板语法&amp;rdquo;&lt;/a&gt;页面上的&lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;输入和输出属性&lt;/a&gt;）公开以绑定到父组件。现在不必担心，这些将来的更改不会影响表格。</target>
        </trans-unit>
        <trans-unit id="0ccbe0bf2be8bc3e6b41de6c08f0a1498a381e54" translate="yes" xml:space="preserve">
          <source>Downgrading multiple modules</source>
          <target state="translated">将多个模块降级</target>
        </trans-unit>
        <trans-unit id="a479c9c34e878d07b4d67a73a48f432ad7dc53c8" translate="yes" xml:space="preserve">
          <source>Download</source>
          <target state="translated">Download</target>
        </trans-unit>
        <trans-unit id="39c131f45fab5187e42e1e465465b4202e919c7c" translate="yes" xml:space="preserve">
          <source>Download and install the latest &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48593&quot;&gt;TypeScript for Visual Studio 2015&lt;/a&gt;,</source>
          <target state="translated">下载并安装&lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48593&quot;&gt;适用于Visual Studio 2015&lt;/a&gt;的最新TypeScript，</target>
        </trans-unit>
        <trans-unit id="b21a44d0dea536c166264bb02f56718f7d476d92" translate="yes" xml:space="preserve">
          <source>Download only</source>
          <target state="translated">仅下载</target>
        </trans-unit>
        <trans-unit id="55fd9611f7c571037e9909869ce233197def6aae" translate="yes" xml:space="preserve">
          <source>Download the library schematics project for a completed example of the steps below.</source>
          <target state="translated">下载库原理图项目,以完成以下步骤的示例。</target>
        </trans-unit>
        <trans-unit id="bea9854a0974d8c207fb940eb07b3deedb9b02fd" translate="yes" xml:space="preserve">
          <source>Driver state</source>
          <target state="translated">司机状态</target>
        </trans-unit>
        <trans-unit id="ab8e2234ed8257af73e27e05dd2d529167ccaf7d" translate="yes" xml:space="preserve">
          <source>Duplicate the &lt;code&gt;&amp;lt;&lt;a href=&quot;i18n&quot;&gt;source&lt;/a&gt;/&amp;gt;&lt;/code&gt; tag, rename it &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt;, and then replace its content with the French greeting. If you were working with a more complex translation, you could use the information and context provided by the source, description, and meaning elements to guide your selection of the appropriate French translation.</source>
          <target state="translated">复制 &lt;code&gt;&amp;lt;&lt;a href=&quot;i18n&quot;&gt;source&lt;/a&gt;/&amp;gt;&lt;/code&gt; 标记，将其重命名为 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; ，然后将其内容替换为法语问候语。如果您要处理更复杂的翻译，则可以使用源，描述和含义元素提供的信息和上下文来指导您选择适当的法语翻译。</target>
        </trans-unit>
        <trans-unit id="c9bd84cdbb4cc235c347080036b1ba9eb49d0ce1" translate="yes" xml:space="preserve">
          <source>Duration and delay are expressed as a number and optional time unit, such as &quot;1s&quot; or &quot;10ms&quot; for one second and 10 milliseconds, respectively. The default unit is milliseconds.</source>
          <target state="translated">持续时间和延迟用数字和可选的时间单位表示,如 &quot;1s &quot;或 &quot;10ms &quot;分别表示1秒和10毫秒。默认单位是毫秒。</target>
        </trans-unit>
        <trans-unit id="bc644b2d562cbf3f13865f41e46fce4f7a86d20e" translate="yes" xml:space="preserve">
          <source>During TypeScript conversion no changes are strictly necessary. But it may be a good idea to convert the unit test code into TypeScript as well.</source>
          <target state="translated">在TypeScript转换过程中,严格来说不需要任何改变。但是将单元测试代码转换为TypeScript可能是一个好主意。</target>
        </trans-unit>
        <trans-unit id="d2adfdd8629e6ebc57fc1622f87096712d00503e" translate="yes" xml:space="preserve">
          <source>During TypeScript conversion, there is nothing to do to keep E2E tests working. But when you change the bootstrap to that of a Hybrid app, you must make a few changes.</source>
          <target state="translated">在TypeScript转换过程中,没有什么可以做的,以保持E2E测试的工作。但是当你把bootstrap改成Hybrid应用的时候,你必须做一些改变。</target>
        </trans-unit>
        <trans-unit id="c93ba65421200c8ce9c714d5433120cec0c210c4" translate="yes" xml:space="preserve">
          <source>During a transition, a new view is inserted directly after the old one and both elements appear on screen at the same time. To prevent this, apply additional styling to the host view, and to the removed and inserted child views. The host view must use relative positioning, and the child views must use absolute positioning. Adding styling to the views animates the containers in place, without the DOM moving things around.</source>
          <target state="translated">在过渡期间,新的视图直接插入到旧的视图之后,两个元素同时出现在屏幕上。为了防止这种情况发生,请对主视图以及被删除和插入的子视图应用附加样式。主视图必须使用相对定位,而子视图必须使用绝对定位。在视图中添加样式会使容器在原地产生动画,而不会让DOM移动东西。</target>
        </trans-unit>
        <trans-unit id="7e2134e92266bcb5c8ab8f878ffaec17ab310443" translate="yes" xml:space="preserve">
          <source>During change detection, the &lt;code&gt;ngOnChanges&lt;/code&gt; lifecycle hook is called on the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directive instance because the value of one of its inputs has changed.</source>
          <target state="translated">在更改检测期间，由于 &lt;code&gt;ngOnChanges&lt;/code&gt; 指令实例之一的输入值已更改，因此会在 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 指令实例上调用ngOnChanges生命周期挂钩。</target>
        </trans-unit>
        <trans-unit id="9edd1b9999956746c9f323ca67581f2b8c3fce33" translate="yes" xml:space="preserve">
          <source>During checkout, the app will prompt the user for a name and address. So that you can gather that information later, set the &lt;code&gt;checkoutForm&lt;/code&gt; property with a form model containing &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; fields, using the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;#&lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;()&lt;/code&gt; method.</source>
          <target state="translated">结帐期间，应用程序将提示用户输入名称和地址。为了可以在以后收集该信息，请使用 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;#&lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;()&lt;/code&gt; ＃&lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;（）方法为包含 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;address&lt;/code&gt; 字段的表单模型设置 &lt;code&gt;checkoutForm&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="4cb9093ab586cd348f47d9e6cf2bbfe140c681b4" translate="yes" xml:space="preserve">
          <source>During development, you typically use the &lt;code&gt;ng serve&lt;/code&gt; command to build, watch, and serve the application from local memory, using &lt;a href=&quot;https://webpack.js.org/guides/development/#webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;. When you are ready to deploy, however, you must use the &lt;code&gt;ng build&lt;/code&gt; command to build the app and deploy the build artifacts elsewhere.</source>
          <target state="translated">在开发过程中，通常使用 &lt;code&gt;ng serve&lt;/code&gt; 命令通过&lt;a href=&quot;https://webpack.js.org/guides/development/#webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;从本地内存构建，监视和服务应用程序。但是，在准备好部署时，必须使用 &lt;code&gt;ng build&lt;/code&gt; 命令来构建应用程序并将构建工件部署到其他位置。</target>
        </trans-unit>
        <trans-unit id="fae7cf56608f88866b26b0ef5fcc953914fd85c8" translate="yes" xml:space="preserve">
          <source>During each navigation, the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; emits navigation events through the &lt;code&gt;&lt;a href=&quot;../api/router/router#events&quot;&gt;Router.events&lt;/a&gt;&lt;/code&gt; property. These events range from when the navigation starts and ends to many points in between. The full list of navigation events is displayed in the table below.</source>
          <target state="translated">在每次导航期间， &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 通过 &lt;code&gt;&lt;a href=&quot;../api/router/router#events&quot;&gt;Router.events&lt;/a&gt;&lt;/code&gt; 属性发出导航事件。这些事件的范围从导航开始和结束的时间到中间的许多时间。导航事件的完整列表显示在下表中。</target>
        </trans-unit>
        <trans-unit id="24ce380938e6c21372f9336593acfe39017a0043" translate="yes" xml:space="preserve">
          <source>During the process you'll learn how to apply the steps outlined in the &lt;a href=&quot;upgrade#preparation&quot;&gt;preparation guide&lt;/a&gt;. You'll align the application with Angular and also start writing in TypeScript.</source>
          <target state="translated">在此过程中，您将学习如何应用&lt;a href=&quot;upgrade#preparation&quot;&gt;准备指南中&lt;/a&gt;概述的步骤。您将使该应用程序与Angular对齐，并开始使用TypeScript进行编写。</target>
        </trans-unit>
        <trans-unit id="e41271d97bfaa9855273d6170cf3c19d4e05bc1f" translate="yes" xml:space="preserve">
          <source>Dynamic Component Loader</source>
          <target state="translated">动态组件加载器</target>
        </trans-unit>
        <trans-unit id="a5fdad1da0c422ddbaedc42b6d8523a19935dd4a" translate="yes" xml:space="preserve">
          <source>Dynamic Components</source>
          <target state="translated">动态组件</target>
        </trans-unit>
        <trans-unit id="4fd12c3974ec0be44713c8ffa0c687638c292157" translate="yes" xml:space="preserve">
          <source>Dynamic Forms</source>
          <target state="translated">动态表格</target>
        </trans-unit>
        <trans-unit id="58bd26bb61ddef24bc329aa3b9da99eb3679b9b3" translate="yes" xml:space="preserve">
          <source>Dynamic Forms Guide</source>
          <target state="translated">动态表格指南</target>
        </trans-unit>
        <trans-unit id="2bc79dd70e34554001fab0a24198b892ffd956a8" translate="yes" xml:space="preserve">
          <source>Dynamic Template</source>
          <target state="translated">动态模板</target>
        </trans-unit>
        <trans-unit id="5c188df063315960a8284608dfef5d7725223fee" translate="yes" xml:space="preserve">
          <source>Dynamic component loading</source>
          <target state="translated">动态组件加载</target>
        </trans-unit>
        <trans-unit id="cdadcbd36fff4607a6954bb84c819d544af6edd5" translate="yes" xml:space="preserve">
          <source>Dynamic component loading is not common in most apps beyond the router. If you need to dynamically load components, you must add these components to the &lt;code&gt;entryComponents&lt;/code&gt; list yourself.</source>
          <target state="translated">动态组件加载在路由器以外的大多数应用中并不常见。如果需要动态加载组件，则必须将这些组件自己添加到 &lt;code&gt;entryComponents&lt;/code&gt; 列表中。</target>
        </trans-unit>
        <trans-unit id="dd0e82d54ffe53f8d72d2c99cb6529b8b8feb3fb" translate="yes" xml:space="preserve">
          <source>Dynamic controls using form arrays</source>
          <target state="translated">使用表单数组的动态控件</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="952ea5c3a4bd5ddb1e84e339d6efb4b6b521651c" translate="yes" xml:space="preserve">
          <source>E (S)</source>
          <target state="translated">E(S)</target>
        </trans-unit>
        <trans-unit id="3eda17458aac2e1c39c9e41ff906a98ea0cc80f0" translate="yes" xml:space="preserve">
          <source>E, EE &amp;amp; EEE</source>
          <target state="translated">E，EE和EEE</target>
        </trans-unit>
        <trans-unit id="73589e1476f9ea766e54b42e42ec4d4d0cbca3c2" translate="yes" xml:space="preserve">
          <source>E2E Tests</source>
          <target state="translated">E2E测试</target>
        </trans-unit>
        <trans-unit id="dd0bb31f998d693382c796a469b61591c81e45c3" translate="yes" xml:space="preserve">
          <source>E2E test that all children were instantiated and displayed as expected:</source>
          <target state="translated">E2E测试所有的孩子都被实例化,并按预期显示。</target>
        </trans-unit>
        <trans-unit id="372bb5d00eb17ebcfa920207dee8bf8fee7270ee" translate="yes" xml:space="preserve">
          <source>E2E tests are difficult to write and perform poorly compared to unit tests. They break easily, often due to changes or misbehavior far removed from the site of breakage.</source>
          <target state="translated">与单元测试相比,E2E测试很难编写,而且性能很差。它们很容易被破坏,通常是由于远离破坏地点的变化或行为不当。</target>
        </trans-unit>
        <trans-unit id="0a76346e352bd2cb73972ed43857bec080631a12" translate="yes" xml:space="preserve">
          <source>E2E tests are great for high-level validation of the entire system. But they can't give you the comprehensive test coverage that you'd expect from unit tests.</source>
          <target state="translated">E2E测试对于整个系统的高级验证是非常好的。但它们不能给你提供全面的测试覆盖率,而你期望从单元测试中获得。</target>
        </trans-unit>
        <trans-unit id="d102c6f6f30bc1655cbe872e545e462853df6b3c" translate="yes" xml:space="preserve">
          <source>E2E tests can't easily reveal how your components behave when things go wrong, such as missing or bad data, lost connectivity, and remote service failures.</source>
          <target state="translated">E2E测试不能轻易地揭示你的组件在出错时的表现,比如数据丢失或坏掉、连接丢失和远程服务故障。</target>
        </trans-unit>
        <trans-unit id="0c4e4c7796289ac9278300d31192ad0146ac03c6" translate="yes" xml:space="preserve">
          <source>E2E tests for apps that update a database, send an invoice, or charge a credit card require special tricks and back-doors to prevent accidental corruption of remote resources. It can even be hard to navigate to the component you want to test.</source>
          <target state="translated">更新数据库、发送发票或信用卡收费的应用程序的E2E测试需要特殊的技巧和后门来防止远程资源的意外损坏。甚至很难导航到你要测试的组件。</target>
        </trans-unit>
        <trans-unit id="589dbe67e40317e7eee2bcd85f1afbc0aa40a3e7" translate="yes" xml:space="preserve">
          <source>E2E tests of input property setter with empty and non-empty names:</source>
          <target state="translated">E2E测试输入属性设置器的空名和非空名。</target>
        </trans-unit>
        <trans-unit id="6d85b2d399967a027efc0d611a548da5bc48a920" translate="yes" xml:space="preserve">
          <source>ECMAScript</source>
          <target state="translated">ECMAScript</target>
        </trans-unit>
        <trans-unit id="bb41be0083d30940a15ed09539a8f13ac977b740" translate="yes" xml:space="preserve">
          <source>EEE (Sun)</source>
          <target state="translated">EEE(太阳)</target>
        </trans-unit>
        <trans-unit id="c49c34e2014a2da270eeae07d730726ffddd3196" translate="yes" xml:space="preserve">
          <source>EEEE</source>
          <target state="translated">EEEE</target>
        </trans-unit>
        <trans-unit id="9169dd1fe0dd70dd346d458bd301545612f3548d" translate="yes" xml:space="preserve">
          <source>EEEE (Sunday)</source>
          <target state="translated">EEEE(星期日)</target>
        </trans-unit>
        <trans-unit id="af660090b01149c4cd9581bca5e30ceaacc675be" translate="yes" xml:space="preserve">
          <source>EEEEE</source>
          <target state="translated">EEEEE</target>
        </trans-unit>
        <trans-unit id="8a1d9b464a3fd8c9e5f06af5b43005029d7c16b1" translate="yes" xml:space="preserve">
          <source>EEEEEE</source>
          <target state="translated">EEEEEE</target>
        </trans-unit>
        <trans-unit id="075901aadfe01a2f6e5ff5be94321e8718fe731b" translate="yes" xml:space="preserve">
          <source>ES Target</source>
          <target state="translated">ES目标</target>
        </trans-unit>
        <trans-unit id="5be8585e8dda5d16a9d3e66f70a40dc596a018af" translate="yes" xml:space="preserve">
          <source>ES2015</source>
          <target state="translated">ES2015</target>
        </trans-unit>
        <trans-unit id="0970b9d03521f08c59aa318cd73a8b50d05da427" translate="yes" xml:space="preserve">
          <source>ES2015&lt;a href=&quot;browser-support#classlist&quot;&gt;classList&lt;/a&gt;</source>
          <target state="translated">ES2015&lt;a href=&quot;browser-support#classlist&quot;&gt;classList&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9473da121f41fb7b3b153d3793463561bba99a5e" translate="yes" xml:space="preserve">
          <source>ES5 Browserslist Result</source>
          <target state="translated">ES5浏览器列表结果</target>
        </trans-unit>
        <trans-unit id="f84a7f9916385bc3b3297219fea98468f763a46d" translate="yes" xml:space="preserve">
          <source>ES7/array</source>
          <target state="translated">ES7/array</target>
        </trans-unit>
        <trans-unit id="da9a5dd5bd129c51e47a47b3272ca4e140e15e73" translate="yes" xml:space="preserve">
          <source>EVENT_MANAGER_PLUGINS</source>
          <target state="translated">EVENT_MANAGER_PLUGINS</target>
        </trans-unit>
        <trans-unit id="f9ce18d98faf53ec35f10c3730273055c75abee2" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; exposes a dependency injector with the specific instance of the directive attached to that element.</source>
          <target state="translated">每个 &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; 公开一个依赖项注入器，该注入器具有附加到该元素的指令的特定实例。</target>
        </trans-unit>
        <trans-unit id="286e0075a5fff4e5432d6dc93abd9ba356e6dba0" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; provides methods to traverse up and down the route tree to get information from parent, child and sibling routes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; 中的每个 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 提供了遍历路由树以从父，子和同级路由获取信息的方法。</target>
        </trans-unit>
        <trans-unit id="98ee5a57eab9498887f027356bcf579d28712aef" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; maps a URL &lt;code&gt;path&lt;/code&gt; to a component. There are &lt;em&gt;no leading slashes&lt;/em&gt; in the &lt;em&gt;path&lt;/em&gt;. The router parses and builds the final URL for you, allowing you to use both relative and absolute paths when navigating between application views.</source>
          <target state="translated">每个 &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; 将URL &lt;code&gt;path&lt;/code&gt; 映射到组件。有&lt;em&gt;没有前导斜杠&lt;/em&gt;的&lt;em&gt;路径&lt;/em&gt;。路由器将为您解析并构建最终URL，从而允许您在应用程序视图之间导航时使用相对路径和绝对路径。</target>
        </trans-unit>
        <trans-unit id="b838c62689224b4ca27eea5c7a87704e8a67b4b9" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; provides an own &lt;code&gt;&lt;a href=&quot;compiler&quot;&gt;Compiler&lt;/a&gt;&lt;/code&gt; to its injector, that will use the directives/pipes of the ng module for compilation of components.</source>
          <target state="translated">每个 &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 提供了一个自己的 &lt;code&gt;&lt;a href=&quot;compiler&quot;&gt;Compiler&lt;/a&gt;&lt;/code&gt; 到其喷射器，将使用该指令的纳克模块/管材部件的编译。</target>
        </trans-unit>
        <trans-unit id="afd85145d04944e976611f2c1d57bdb27b0e7791" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;HeroBioComponent&lt;/code&gt; can edit a single hero's biography. &lt;code&gt;HeroBioComponent&lt;/code&gt; relies on &lt;code&gt;HeroCacheService&lt;/code&gt; to fetch, cache, and perform other persistence operations on that hero.</source>
          <target state="translated">每个 &lt;code&gt;HeroBioComponent&lt;/code&gt; 都可以编辑一个英雄的传记。 &lt;code&gt;HeroBioComponent&lt;/code&gt; 依靠 &lt;code&gt;HeroCacheService&lt;/code&gt; 对该英雄进行获取，缓存和执行其他持久性操作。</target>
        </trans-unit>
        <trans-unit id="f4731307364ab8c0ca00233e6ebe2ff1235d5b46" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;build&lt;/code&gt; target configuration can include an &lt;code&gt;assets&lt;/code&gt; array that lists files or folders you want to copy as-is when building your project. By default, the &lt;code&gt;src/assets/&lt;/code&gt; folder and &lt;code&gt;src/favicon.ico&lt;/code&gt; are copied over.</source>
          <target state="translated">每个 &lt;code&gt;build&lt;/code&gt; 目标配置都可以包括 &lt;code&gt;assets&lt;/code&gt; 阵列，该资产阵列列出了在构建项目时要原样复制的文件或文件夹。默认情况下，将复制 &lt;code&gt;src/assets/&lt;/code&gt; 文件夹和 &lt;code&gt;src/favicon.ico&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bce41e0b2ee4443f7cf1479faf944656cbc11207" translate="yes" xml:space="preserve">
          <source>Each DOM element on the page is owned exactly by one framework. Whichever framework instantiated the element is the owner. Each framework only updates/interacts with its own DOM elements and ignores others.</source>
          <target state="translated">页面上的每个DOM元素都由一个框架精确地拥有。不管是哪个框架实例化的元素都是所有者。每个框架只更新/交互自己的DOM元素,而忽略其他元素。</target>
        </trans-unit>
        <trans-unit id="90ab67a33781d98870fed308de0b4ac790f7eec7" translate="yes" xml:space="preserve">
          <source>Each additional app that you create with &lt;code&gt;ng generate application&lt;/code&gt; has a corresponding end-to-end test project, with its own configuration section. When you create a library project with &lt;code&gt;ng generate library&lt;/code&gt;, the library project is also added to the &lt;code&gt;projects&lt;/code&gt; section.</source>
          <target state="translated">您使用 &lt;code&gt;ng generate application&lt;/code&gt; 创建的每个其他应用程序都有一个对应的端到端测试项目，带有自己的配置部分。使用 &lt;code&gt;ng generate library&lt;/code&gt; 创建库项目时，库项目也会添加到&amp;ldquo; &lt;code&gt;projects&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="fc1c3c3aef455453fc117482bdb289b01b6eead4" translate="yes" xml:space="preserve">
          <source>Each area has its own area root component.</source>
          <target state="translated">每个区域都有自己的区域根组件。</target>
        </trans-unit>
        <trans-unit id="7935d876ab66da316599115544c04f9d078334fb" translate="yes" xml:space="preserve">
          <source>Each area root component has its own router outlet and child routes.</source>
          <target state="translated">每个区域根组件都有自己的路由器出口和子路由。</target>
        </trans-unit>
        <trans-unit id="78e59ef6547ad3c662e30fa847b04b1ddce59b61" translate="yes" xml:space="preserve">
          <source>Each asset group specifies both a group of resources and a policy that governs them. This policy determines when the resources are fetched and what happens when changes are detected.</source>
          <target state="translated">每个资产组都指定了一组资源和管理它们的策略。该政策决定何时获取资源以及检测到变化时的情况。</target>
        </trans-unit>
        <trans-unit id="c151d68718ffef6d0eacffc4944821511f35e949" translate="yes" xml:space="preserve">
          <source>Each binding gets its own pipe instance.</source>
          <target state="translated">每个绑定都会得到自己的管道实例。</target>
        </trans-unit>
        <trans-unit id="d091b6893ccf3885f59067c45c1301d7ee5ee6a4" translate="yes" xml:space="preserve">
          <source>Each bootstrapped component is the base of its own tree of components. Inserting a bootstrapped component usually triggers a cascade of component creations that fill out that tree.</source>
          <target state="translated">每个引导组件都是它自己的组件树的基础。插入一个引导组件通常会触发一连串的组件创建,以填充该树。</target>
        </trans-unit>
        <trans-unit id="26e7f477d783d9a514df967e209611ec60a31a55" translate="yes" xml:space="preserve">
          <source>Each budget entry is a JSON object with the following properties:</source>
          <target state="translated">每个预算条目都是一个JSON对象,具有以下属性:</target>
        </trans-unit>
        <trans-unit id="0a8b076ccfe8cc8605884f50d353ce0d05ae0da5" translate="yes" xml:space="preserve">
          <source>Each component has a &lt;em&gt;host view&lt;/em&gt;, and can have additional &lt;em&gt;embedded views&lt;/em&gt;. An embedded view in component A is the host view of component B, which can in turn have embedded view. This means that there is a &lt;a href=&quot;glossary#view-hierarchy&quot;&gt;view hierarchy&lt;/a&gt; for each component, of which that component's host view is the root.</source>
          <target state="translated">每个组件都有一个&lt;em&gt;宿主视图&lt;/em&gt;，并且可以具有其他&lt;em&gt;嵌入式视图&lt;/em&gt;。组件A中的嵌入式视图是组件B的宿主视图，而宿主B又可以具有嵌入式视图。这意味着每个组件都有一个&lt;a href=&quot;glossary#view-hierarchy&quot;&gt;视图层次结构&lt;/a&gt;，该组件的宿主视图是其中的根。</target>
        </trans-unit>
        <trans-unit id="cdd629c7b0c6876a713f0fae8f947f5dcd9bddb7" translate="yes" xml:space="preserve">
          <source>Each component, service, and filter is in its own source file, as per the &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#single-responsibility&quot;&gt;Rule of 1&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#single-responsibility&quot;&gt;规则1&lt;/a&gt;，每个组件，服务和过滤器都在其自己的源文件中。</target>
        </trans-unit>
        <trans-unit id="a543edae922fea0770d08c1fee4f1f41525fd010" translate="yes" xml:space="preserve">
          <source>Each control is explicitly created in the component class by creating a &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance manually or with &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">通过手动或使用 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; 创建一个 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例，可以在组件类中显式创建每个控件。</target>
        </trans-unit>
        <trans-unit id="c8d35b3156ab5bb60d84a0eef93b291d2f5f2608" translate="yes" xml:space="preserve">
          <source>Each definition translates to a &lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt; object which has two things: a &lt;code&gt;path&lt;/code&gt;, the URL path segment for this route; and a &lt;code&gt;component&lt;/code&gt;, the component associated with this route.</source>
          <target state="translated">每个定义都转换为&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;对象，该对象具有两件事： &lt;code&gt;path&lt;/code&gt; ，该路由的URL路径段；和一个 &lt;code&gt;component&lt;/code&gt; ，与该路线关联的组件。</target>
        </trans-unit>
        <trans-unit id="6921b51ac3141eb9836e22d8d2b5c211ef71554c" translate="yes" xml:space="preserve">
          <source>Each downgraded component/injectable needs to be explicitly associated with a downgraded module. See &lt;code&gt;&lt;a href=&quot;downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt; for more details.</source>
          <target state="translated">每个降级的组件/注射剂都需要与降级的模块明确关联。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="964518f2ab2a578d6482970abbf1f6d41de5a43c" translate="yes" xml:space="preserve">
          <source>Each feature area resides in its own folder.</source>
          <target state="translated">每个功能区都驻扎在自己的文件夹中。</target>
        </trans-unit>
        <trans-unit id="579cdc1ac54406dd19dd62a973087397898ead99" translate="yes" xml:space="preserve">
          <source>Each feature has its own Angular feature module.</source>
          <target state="translated">每个功能都有自己的Angular功能模块。</target>
        </trans-unit>
        <trans-unit id="c1c22426d18f303c0bc0731b497267fdc477bb27" translate="yes" xml:space="preserve">
          <source>Each guideline describes either a good or bad practice, and all have a consistent presentation.</source>
          <target state="translated">每条准则都描述了一种好的或坏的做法,并且都有一致的表述。</target>
        </trans-unit>
        <trans-unit id="b46884375c2f4ef07db5d04e100e45c7f831280d" translate="yes" xml:space="preserve">
          <source>Each hero in the heroes list should have a delete button.</source>
          <target state="translated">英雄列表中的每个英雄都应该有一个删除按钮。</target>
        </trans-unit>
        <trans-unit id="bd0fa650708acb7f6ffbe8e7c1672a65c1d77539" translate="yes" xml:space="preserve">
          <source>Each input element has a &lt;code&gt;name&lt;/code&gt; property that is required by Angular forms to register the control with the form.</source>
          <target state="translated">每个输入元素都有一个 &lt;code&gt;name&lt;/code&gt; 属性，Angular表单需要使用该属性来将控件注册到表单。</target>
        </trans-unit>
        <trans-unit id="8991cfa20d0f3cc365961eb7850ff907e46e7442" translate="yes" xml:space="preserve">
          <source>Each input element has an &lt;code&gt;id&lt;/code&gt; property that is used by the &lt;code&gt;label&lt;/code&gt; element's &lt;code&gt;for&lt;/code&gt; attribute to match the label to its input control.</source>
          <target state="translated">每个输入元素都有一个 &lt;code&gt;id&lt;/code&gt; 属性， &lt;code&gt;label&lt;/code&gt; 元素的 &lt;code&gt;for&lt;/code&gt; 属性使用该属性将标签与其输入控件进行匹配。</target>
        </trans-unit>
        <trans-unit id="70cb6ceab5e15f47d5f692e35d9b740e519a062b" translate="yes" xml:space="preserve">
          <source>Each interface has a single hook method whose name is the interface name prefixed with &lt;code&gt;ng&lt;/code&gt;. For example, the &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; interface has a hook method named &lt;code&gt;ngOnInit()&lt;/code&gt; that Angular calls shortly after creating the component:</source>
          <target state="translated">每个接口都有一个钩子方法，其名称是以 &lt;code&gt;ng&lt;/code&gt; 为前缀的接口名称。例如， &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; 接口具有一个名为 &lt;code&gt;ngOnInit()&lt;/code&gt; 的钩子方法，Angular在创建组件后不久会调用该方法：</target>
        </trans-unit>
        <trans-unit id="88ebe07ff5ed7d63169a91947c0983cd36bde1c0" translate="yes" xml:space="preserve">
          <source>Each interface has a single hook method whose name is the interface name prefixed with &lt;code&gt;ng&lt;/code&gt;. For example, the &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; interface has a hook method named &lt;code&gt;ngOnInit&lt;/code&gt;.</source>
          <target state="translated">每个接口都有一个钩子方法，其名称是以 &lt;code&gt;ng&lt;/code&gt; 为前缀的接口名称。例如， &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; 接口具有一个名为 &lt;code&gt;ngOnInit&lt;/code&gt; 的钩子方法。</target>
        </trans-unit>
        <trans-unit id="736fa5d5b88f601a4b68d26da49837f873c9a8fb" translate="yes" xml:space="preserve">
          <source>Each named configuration can have defaults for any of the options that apply to the various &lt;a href=&quot;glossary#target&quot;&gt;builder targets&lt;/a&gt;, such as &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt;, and &lt;code&gt;test&lt;/code&gt;. The &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;&lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt;, and &lt;code&gt;test&lt;/code&gt; commands can then replace files with appropriate versions for your intended target environment.</source>
          <target state="translated">每个命名配置都可以具有适用于各种&lt;a href=&quot;glossary#target&quot;&gt;构建器目标的&lt;/a&gt;任何选项的默认值，例如 &lt;code&gt;build&lt;/code&gt; ， &lt;code&gt;serve&lt;/code&gt; 和 &lt;code&gt;test&lt;/code&gt; 。然后，&lt;a href=&quot;cli&quot;&gt;Angular CLI的&lt;/a&gt; &lt;code&gt;build&lt;/code&gt; ， &lt;code&gt;serve&lt;/code&gt; 和 &lt;code&gt;test&lt;/code&gt; 命令可以将文件替换为适合您目标目标环境的版本。</target>
        </trans-unit>
        <trans-unit id="15e01d9b0088c32204d172b9d23d1982bfb25d78" translate="yes" xml:space="preserve">
          <source>Each named schematic in the collection has the following main parts.</source>
          <target state="translated">集合中每个命名的原理图主要有以下几个部分。</target>
        </trans-unit>
        <trans-unit id="329b32865b1001d3b4b288fac86edd40b02aa8fb" translate="yes" xml:space="preserve">
          <source>Each nested &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; can present a custom message for one of the possible validation errors. There are messages for &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;forbiddenName&lt;/code&gt;.</source>
          <target state="translated">每个嵌套的 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 都可以针对一种可能的验证错误显示自定义消息。有针对 &lt;code&gt;required&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../api/forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;forbiddenName&lt;/code&gt; 的消息。</target>
        </trans-unit>
        <trans-unit id="5185bf611cc0f1996c1da943dea939467c034e5d" translate="yes" xml:space="preserve">
          <source>Each of these subjects is introduced in more detail in the following pages.</source>
          <target state="translated">以下几页将更详细地介绍这些主题中的每一个。</target>
        </trans-unit>
        <trans-unit id="492742972cab7240263d9a307231b34fd42acbd2" translate="yes" xml:space="preserve">
          <source>Each operator works as follows:</source>
          <target state="translated">每个操作员的工作原理如下:</target>
        </trans-unit>
        <trans-unit id="ee30bb9b05511cb5ca56d1dc673406c8457ba50a" translate="yes" xml:space="preserve">
          <source>Each option associates key with a type, description, and optional alias. The type defines the shape of the value you expect, and the description is displayed when the user requests usage help for your schematic.</source>
          <target state="translated">每个选项将键与类型、描述和可选的别名关联起来。类型定义了你所期望的值的形状,而描述则是在用户为你的原理图请求使用帮助时显示的。</target>
        </trans-unit>
        <trans-unit id="bb6fa6715460582b0c4be7a4edfd3b729267ae3d" translate="yes" xml:space="preserve">
          <source>Each outlet can have a unique name, determined by the optional &lt;code&gt;name&lt;/code&gt; attribute. The name cannot be set or changed dynamically. If not set, default value is &quot;primary&quot;.</source>
          <target state="translated">每个插座可以具有唯一的名称，该 &lt;code&gt;name&lt;/code&gt; 由可选的name属性确定。该名称不能动态设置或更改。如果未设置，则默认值为&amp;ldquo;主要&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="61c9bd127991ee917708f24212eb86c5a2ff2569" translate="yes" xml:space="preserve">
          <source>Each override method takes a &lt;code&gt;&lt;a href=&quot;../api/core/testing/metadataoverride&quot;&gt;MetadataOverride&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; where &lt;code&gt;T&lt;/code&gt; is the kind of metadata appropriate to the method, that is, the parameter of an &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">每个重写方法都采用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/metadataoverride&quot;&gt;MetadataOverride&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; ，其中 &lt;code&gt;T&lt;/code&gt; 是适合该方法的元数据类型，即 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2688d78ae270bd7ee215561bf70670e97db0be1" translate="yes" xml:space="preserve">
          <source>Each pipe instance caches its own URL and data.</source>
          <target state="translated">每个管道实例都会缓存自己的URL和数据。</target>
        </trans-unit>
        <trans-unit id="8406cc7112c99d403e6f12dc6489847bf043bfb4" translate="yes" xml:space="preserve">
          <source>Each pipe instance only calls the server once.</source>
          <target state="translated">每个管道实例只调用服务器一次。</target>
        </trans-unit>
        <trans-unit id="8e5917c5d975c851fea3302a396d10e8bcc17992" translate="yes" xml:space="preserve">
          <source>Each product in the list displays the same way, one after another on the page. To iterate over the predefined list of products, put the &lt;code&gt;*&lt;a href=&quot;api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; directive on a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, as follows:</source>
          <target state="translated">列表中的每种产品以相同的方式显示，页面上依次显示。要遍历预定义的产品列表，请将 &lt;code&gt;*&lt;a href=&quot;api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 指令放在 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 上，如下所示：</target>
        </trans-unit>
        <trans-unit id="f697215d7bc3aea1a76723758a5870daf7b4cc95" translate="yes" xml:space="preserve">
          <source>Each product now has a &quot;Share&quot; button:</source>
          <target state="translated">现在每个产品都有一个 &quot;分享 &quot;按钮。</target>
        </trans-unit>
        <trans-unit id="ec66a0f102f02c3d9406b868fa0c9eeceb3d7411" translate="yes" xml:space="preserve">
          <source>Each request results in the appropriate view for the requested route. The &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; function renders the view within the &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; tag of the template, creating a finished HTML page for the client.</source>
          <target state="translated">每个请求都会为请求的路线生成适当的视图。所述 &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; 函数呈现内的视图 &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; 在模板的标记，从而为所述客户端的最终HTML页面。</target>
        </trans-unit>
        <trans-unit id="b5e7f38d5576f468babd40cdb4dbdec27a0c68b2" translate="yes" xml:space="preserve">
          <source>Each routing module augments the route configuration &lt;em&gt;in the order of import&lt;/em&gt;. If you list &lt;code&gt;AppRoutingModule&lt;/code&gt; first, the wildcard route will be registered &lt;em&gt;before&lt;/em&gt; the hero routes. The wildcard route&amp;mdash;which matches &lt;em&gt;every&lt;/em&gt; URL&amp;mdash;will intercept the attempt to navigate to a hero route.</source>
          <target state="translated">每个路由模块都&lt;em&gt;按导入顺序&lt;/em&gt;扩充路由配置。如果您首先列出 &lt;code&gt;AppRoutingModule&lt;/code&gt; ，则通配符路由将在英雄路由&lt;em&gt;之前&lt;/em&gt;注册。与&lt;em&gt;每个&lt;/em&gt; URL 匹配的通配符路由将拦截尝试导航到英雄路由的尝试。</target>
        </trans-unit>
        <trans-unit id="168c2ec77caf801e972506d1e6e8beb63b52436b" translate="yes" xml:space="preserve">
          <source>Each schematic runs in a context, represented by a &lt;code&gt;SchematicContext&lt;/code&gt; object.</source>
          <target state="translated">每个逻辑示意图都在由 &lt;code&gt;SchematicContext&lt;/code&gt; 对象表示的上下文中运行。</target>
        </trans-unit>
        <trans-unit id="4825447444d4e18f42f91e26d03b905e996c72be" translate="yes" xml:space="preserve">
          <source>Each script tag has a &lt;code&gt;type=&quot;module&quot;&lt;/code&gt; or &lt;code&gt;nomodule&lt;/code&gt; attribute. Browsers with native support for ES modules only load the scripts with the &lt;code&gt;module&lt;/code&gt; type attribute and ignore scripts with the &lt;code&gt;nomodule&lt;/code&gt; attribute. Legacy browsers only load the scripts with the &lt;code&gt;nomodule&lt;/code&gt; attribute, and ignore the script tags with the &lt;code&gt;module&lt;/code&gt; type that load ES modules.</source>
          <target state="translated">每个脚本标签都有一个 &lt;code&gt;type=&quot;module&quot;&lt;/code&gt; 或 &lt;code&gt;nomodule&lt;/code&gt; 属性。具有ES模块本机支持的浏览器仅加载具有 &lt;code&gt;module&lt;/code&gt; 类型属性的脚本，而忽略具有 &lt;code&gt;nomodule&lt;/code&gt; 属性的脚本。旧版浏览器仅加载具有 &lt;code&gt;nomodule&lt;/code&gt; 属性的脚本，而忽略加载ES模块的 &lt;code&gt;module&lt;/code&gt; 类型的脚本标签。</target>
        </trans-unit>
        <trans-unit id="e75bf221834c2b1fb6b2d823795b2526d503b732" translate="yes" xml:space="preserve">
          <source>Each secondary outlet has its own navigation, independent of the navigation driving the primary outlet. Changing a current route that displays in the primary outlet has no effect on the popup outlet. That's why the popup stays visible as you navigate among the crises and heroes.</source>
          <target state="translated">每个辅助出口都有自己的导航,独立于驱动主出口的导航。更改主出口中显示的当前路线对弹出式出口没有影响。这就是为什么当你在危机和英雄之间导航时,弹出式会一直可见。</target>
        </trans-unit>
        <trans-unit id="299e7290b3f2a8d07e58e0a4f9e3128676fb22d4" translate="yes" xml:space="preserve">
          <source>Each section of the configuration file is described below.</source>
          <target state="translated">下面将对配置文件的每个部分进行描述。</target>
        </trans-unit>
        <trans-unit id="e9227a7aba828bec8cc740a7da8b3012ad3a4eca" translate="yes" xml:space="preserve">
          <source>Each spy's birth and death marks the birth and death of the attached hero &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with an entry in the &lt;em&gt;Hook Log&lt;/em&gt; as seen here:</source>
          <target state="translated">每个间谍的出生和死亡都标志着附加英雄 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 的出生和死亡，在&lt;em&gt;钩子日志中&lt;/em&gt;有一个条目，如下所示：</target>
        </trans-unit>
        <trans-unit id="783713692d2fe672a17ac40ef0511469cdd78009" translate="yes" xml:space="preserve">
          <source>Each string in the array defines some CSS for this component.</source>
          <target state="translated">数组中的每个字符串都为这个组件定义了一些CSS。</target>
        </trans-unit>
        <trans-unit id="48476a09dad5d99e11d658a9501cc06cfe59f311" translate="yes" xml:space="preserve">
          <source>Each switch-case statement contains an in-line HTML template or template reference that defines the subtree to be selected if the value of the match expression matches the value of the switch expression.</source>
          <target state="translated">每个switch-case语句都包含一个内嵌的HTML模板或模板引用,如果匹配表达式的值与switch表达式的值相匹配,则定义了要选择的子树。</target>
        </trans-unit>
        <trans-unit id="2fba55ede002bcad03ef30757908c0ebc006fda9" translate="yes" xml:space="preserve">
          <source>Each target object specifies the &lt;code&gt;builder&lt;/code&gt; for that target, which is the npm package for the tool that Architect runs. In addition, each target has an &lt;code&gt;options&lt;/code&gt; section that configures default options for the target, and a &lt;code&gt;configurations&lt;/code&gt; section that names and specifies alternative configurations for the target. See the example in &lt;a href=&quot;workspace-config#build-target&quot;&gt;Build target&lt;/a&gt; below.</source>
          <target state="translated">每个目标对象都为该目标指定了 &lt;code&gt;builder&lt;/code&gt; ，该构建器是Architect运行的工具的npm软件包。此外，每个目标都有一个用于配置目标默认选项的 &lt;code&gt;options&lt;/code&gt; 部分，以及一个用于命名和指定目标替代配置的 &lt;code&gt;configurations&lt;/code&gt; 部分。请参阅下面的&lt;a href=&quot;workspace-config#build-target&quot;&gt;构建目标&lt;/a&gt;中的示例。</target>
        </trans-unit>
        <trans-unit id="3ab19647e721dd81282422e89f7501369e20553f" translate="yes" xml:space="preserve">
          <source>Each tax return component has the following characteristics:</source>
          <target state="translated">每个报税部分都有以下特点:</target>
        </trans-unit>
        <trans-unit id="b9f5cecbb342c5b2c155bd0ede4d1fcb97168969" translate="yes" xml:space="preserve">
          <source>Each time a new alias instance is added, the new form array instance is provided its control based on the index. This allows you to track each individual control when calculating the status and value of the root control.</source>
          <target state="translated">每次添加新的别名实例时,新的表单数组实例都会根据索引提供其控件。这样,在计算根控件的状态和值时,就可以跟踪每个单独的控件。</target>
        </trans-unit>
        <trans-unit id="4191b0fc88190e0dfd1f5d02d826834c374a2e8e" translate="yes" xml:space="preserve">
          <source>Each time an animation is triggered in Angular, the parent animation always get priority and child animations are blocked. In order for a child animation to run, the parent animation must query each of the elements containing child animations and then allow the animations to run using the &lt;a href=&quot;../api/animations/animatechild&quot;&gt;&lt;code&gt;animateChild()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">每次在Angular中触发动画时，父动画总是获得优先级，子动画将被阻止。为了运行子动画，父动画必须查询包含子动画的每个元素，然后允许使用&lt;a href=&quot;../api/animations/animatechild&quot;&gt; &lt;code&gt;animateChild()&lt;/code&gt; &lt;/a&gt;函数运行动画。</target>
        </trans-unit>
        <trans-unit id="39caf3d6f6d11e7504ee29654c47c89fcaff17d7" translate="yes" xml:space="preserve">
          <source>Each time an animation is triggered in Angular, the parent animation has priority and any child animations are blocked. In order for a child animation to run, the parent animation must query each of the elements containing child animations, and run them using this function.</source>
          <target state="translated">每次在Angular中触发动画时,父动画具有优先权,任何子动画都会被屏蔽。为了让子动画运行,父动画必须查询每个包含子动画的元素,并使用此函数运行它们。</target>
        </trans-unit>
        <trans-unit id="3cb9d1e78bc6a527f7c2b3ed0e6aadb310220c65" translate="yes" xml:space="preserve">
          <source>Each time items are added, the opacity fade-in animation runs, and each removed item is faded out. When either of these animations occur, the stagger effect is applied after each item's animation is started.</source>
          <target state="translated">每次添加物品时,不透明度淡入动画会运行,而每个移除的物品则会淡出。当上述任何一种动画发生时,在每个项目的动画开始后,都会应用交错效果。</target>
        </trans-unit>
        <trans-unit id="840ece201b19a0940e7b47a2f6716b01bcfcf4bd" translate="yes" xml:space="preserve">
          <source>Earlier component tests configured the testing module with a few &lt;code&gt;declarations&lt;/code&gt; like this:</source>
          <target state="translated">早期的组件测试使用以下一些 &lt;code&gt;declarations&lt;/code&gt; 配置了测试模块：</target>
        </trans-unit>
        <trans-unit id="8440b9eb7d03917b2509b5baeab2a299ce257eb0" translate="yes" xml:space="preserve">
          <source>Edge</source>
          <target state="translated">Edge</target>
        </trans-unit>
        <trans-unit id="a0dec05e152a15aac76a99730b18fb537af884ce" translate="yes" xml:space="preserve">
          <source>Edit a hero's name in the hero detail view. As you type, the hero name updates the heading at the top of the page. But when you click the &quot;go back button&quot;, the changes are lost.</source>
          <target state="translated">在英雄详情视图中编辑英雄的名字。当你输入时,英雄的名字会更新页面顶部的标题。但当你点击 &quot;返回按钮 &quot;时,更改就会丢失。</target>
        </trans-unit>
        <trans-unit id="7a28f8fdf531d1de8cbfa03f27322c5ebe789231" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;HeroSearchComponent&lt;/code&gt; class</source>
          <target state="translated">编辑 &lt;code&gt;HeroSearchComponent&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="a3828b5ef8330a0df646970e814f435f04fd02bc" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;collection.json&lt;/code&gt; file to define the initial schema for your collection.</source>
          <target state="translated">编辑 &lt;code&gt;collection.json&lt;/code&gt; 文件以定义您的集合的初始架构。</target>
        </trans-unit>
        <trans-unit id="7073c6d0ea9dffd93fe969dc4169c8dcf848dab5" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;schematics/collection.json&lt;/code&gt; file to point to the new schematic subfolder, and include a pointer to a schema file that will specify inputs for the new schematic.</source>
          <target state="translated">编辑 &lt;code&gt;schematics/collection.json&lt;/code&gt; 文件以指向新的原理图子文件夹，并包括指向架构文件的指针，该文件将为新原理图指定输入。</target>
        </trans-unit>
        <trans-unit id="243ae2ff9dd324df29ebd119467f5cddf3097987" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;tsconfig.schematics.json&lt;/code&gt; file to add the following content.</source>
          <target state="translated">编辑 &lt;code&gt;tsconfig.schematics.json&lt;/code&gt; 文件以添加以下内容。</target>
        </trans-unit>
        <trans-unit id="5a6924cb28620025b7daa3b7cbd4b6ce71c3f34b" translate="yes" xml:space="preserve">
          <source>Edit the generated translation file: Translate the extracted text into the target language.</source>
          <target state="translated">编辑生成的翻译文件。将提取的文本翻译成目标语言。</target>
        </trans-unit>
        <trans-unit id="77da553bb02e4e75712d607e650908e418ab7c9e" translate="yes" xml:space="preserve">
          <source>Edit the hero</source>
          <target state="translated">编辑英雄</target>
        </trans-unit>
        <trans-unit id="3981b776edea32fe25eceae3ad0387a1b8dc1c18" translate="yes" xml:space="preserve">
          <source>Editing the Bazel configuration may prevent you opting out of Bazel. Custom behaviors driven by Bazel won't be available in other Builders.</source>
          <target state="translated">编辑Bazel配置可能会阻止你选择退出Bazel。由Bazel驱动的自定义行为将无法在其他Builders中使用。</target>
        </trans-unit>
        <trans-unit id="bfc1131d505eb33e1e38ec6565dbfcbb9f7800fc" translate="yes" xml:space="preserve">
          <source>Either way, the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; decorator tells Angular that this property is &lt;em&gt;public&lt;/em&gt; and available for binding by a parent component. Without &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt;, Angular refuses to bind to the property.</source>
          <target state="translated">无论哪种方式， &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 装饰器都会告诉Angular此属性是&lt;em&gt;公共的，&lt;/em&gt;并且可以由父组件绑定。没有 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; ，Angular拒绝绑定到该属性。</target>
        </trans-unit>
        <trans-unit id="3ea7a1338139564ad098308f10ae612adbafe8eb" translate="yes" xml:space="preserve">
          <source>Element event Component event Directive event</source>
          <target state="translated">元素事件 组件事件 指令事件</target>
        </trans-unit>
        <trans-unit id="78b32d614954e5819e912e04c63058e7347b0a0b" translate="yes" xml:space="preserve">
          <source>Element events may be the more common targets, but Angular looks first to see if the name matches an event property of a known directive, as it does in the following example:</source>
          <target state="translated">元素事件可能是更常见的目标,但Angular首先会查看名称是否与已知指令的事件属性相匹配,就像下面的例子一样。</target>
        </trans-unit>
        <trans-unit id="a8af1f8f4a0f60574a912870fe01652703e8ae51" translate="yes" xml:space="preserve">
          <source>Element properties may be the more common targets, but Angular looks first to see if the name is a property of a known directive, as it is in the following example:</source>
          <target state="translated">元素属性可能是比较常见的目标,但Angular会先看名字是否是已知指令的属性,就像下面的例子。</target>
        </trans-unit>
        <trans-unit id="b814267cbc9b4c2f5dbdcaa48521ab0db7fa228f" translate="yes" xml:space="preserve">
          <source>Element properties named with dash case (&lt;code&gt;-&lt;/code&gt;). Dash case is the naming convention for custom elements.</source>
          <target state="translated">以破折号（ &lt;code&gt;-&lt;/code&gt; ）命名的元素属性。破折号大小写是自定义元素的命名约定。</target>
        </trans-unit>
        <trans-unit id="4281bfd6552b34124101c7945eb3921590e1840a" translate="yes" xml:space="preserve">
          <source>Element property Component property Directive property</source>
          <target state="translated">元素属性 组件属性 指令属性</target>
        </trans-unit>
        <trans-unit id="610e33c435ffd4f9cc64e044bd3fa683e6ff4746" translate="yes" xml:space="preserve">
          <source>ElementRef</source>
          <target state="translated">ElementRef</target>
        </trans-unit>
        <trans-unit id="660c8644c0aebbaa48f6509cbcb09b3790bda043" translate="yes" xml:space="preserve">
          <source>Elements within the &lt;code&gt;[&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;]&lt;/code&gt; statement but outside of any &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; directive are preserved at the location.</source>
          <target state="translated">在内的元素 &lt;code&gt;[&lt;a href=&quot;ngswitch&quot;&gt;NgSwitch&lt;/a&gt;]&lt;/code&gt; 任何声明，但外界 &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; 指令在该位置将被保留。</target>
        </trans-unit>
        <trans-unit id="7ea6230fc92026aec77cb73b411275cedcb01dd3" translate="yes" xml:space="preserve">
          <source>EmailValidator</source>
          <target state="translated">EmailValidator</target>
        </trans-unit>
        <trans-unit id="bb9641e7481a2ac16a688649131dd37a3702964f" translate="yes" xml:space="preserve">
          <source>Embedded live example</source>
          <target state="translated">嵌入式直播示例</target>
        </trans-unit>
        <trans-unit id="83e20452c44f63af957be29cf282b611c46d2aee" translate="yes" xml:space="preserve">
          <source>EmbeddedViewRef</source>
          <target state="translated">EmbeddedViewRef</target>
        </trans-unit>
        <trans-unit id="43f7a2bd10f700ecb039aad71ad500bb034ce583" translate="yes" xml:space="preserve">
          <source>Embedding the route parameter token, &lt;code&gt;:id&lt;/code&gt;, in the route definition path is a good choice for this scenario because the &lt;code&gt;id&lt;/code&gt; is &lt;em&gt;required&lt;/em&gt; by the &lt;code&gt;HeroDetailComponent&lt;/code&gt; and because the value &lt;code&gt;15&lt;/code&gt; in the path clearly distinguishes the route to &quot;Magneta&quot; from a route for some other hero.</source>
          <target state="translated">嵌入的路线参数标记， &lt;code&gt;:id&lt;/code&gt; ，在路由定义路径是此方案中一个不错的选择，因为 &lt;code&gt;id&lt;/code&gt; 是&lt;em&gt;需要&lt;/em&gt;由 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 因为值 &lt;code&gt;15&lt;/code&gt; 的路径清楚一些的路线区别于&amp;ldquo;的Magneta&amp;rdquo;路线其他英雄。</target>
        </trans-unit>
        <trans-unit id="e76e9c45e6f20e19c4f06dc20c952d47b9038f75" translate="yes" xml:space="preserve">
          <source>Emits an &lt;code&gt;&lt;a href=&quot;updateactivatedevent&quot;&gt;UpdateActivatedEvent&lt;/a&gt;&lt;/code&gt; event whenever the app has been updated to a new version.</source>
          <target state="translated">每当应用程序已更新到新版本时，都会发出 &lt;code&gt;&lt;a href=&quot;updateactivatedevent&quot;&gt;UpdateActivatedEvent&lt;/a&gt;&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="882e9b10d387257fbe1f9c9a65cd1c3691ef6ede" translate="yes" xml:space="preserve">
          <source>Emits an &lt;code&gt;&lt;a href=&quot;updateavailableevent&quot;&gt;UpdateAvailableEvent&lt;/a&gt;&lt;/code&gt; event whenever a new app version is available.</source>
          <target state="translated">只要有新的应用程序版本可用，就发出 &lt;code&gt;&lt;a href=&quot;updateavailableevent&quot;&gt;UpdateAvailableEvent&lt;/a&gt;&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="aafa880c3dcedcc027cd4f9e5e8db3bd419db083" translate="yes" xml:space="preserve">
          <source>Emits an event containing a given value.</source>
          <target state="translated">发出包含给定值的事件。</target>
        </trans-unit>
        <trans-unit id="f75f623ea16165d1b8fa68ae33e82c5562cf68e7" translate="yes" xml:space="preserve">
          <source>Emits an event when the form submission has been triggered.</source>
          <target state="translated">当表单提交被触发时,发出一个事件。</target>
        </trans-unit>
        <trans-unit id="43a5c938c92ff76a8b0f08eaed896138bdf6f5e5" translate="yes" xml:space="preserve">
          <source>Emits the currently active &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription&quot;&gt;PushSubscription&lt;/a&gt; associated to the Service Worker registration or &lt;code&gt;null&lt;/code&gt; if there is no subscription.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription&quot;&gt;退出&lt;/a&gt;与服务工作者注册关联的当前活动的PushSubscription；如果没有订阅，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6752a2ff06ebb716a84e7511cc420aaa89a5478" translate="yes" xml:space="preserve">
          <source>Emits the payloads of the received push notification messages as well as the action the user interacted with. If no action was used the &lt;code&gt;action&lt;/code&gt; property contains an empty string &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="translated">发出接收到的推送通知消息的有效负载以及用户与之交互的操作。如果未使用动作，则 &lt;code&gt;action&lt;/code&gt; 属性包含一个空字符串 &lt;code&gt;''&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e72684bb1ec9f0531eb8c7837750fb0400bd9b2" translate="yes" xml:space="preserve">
          <source>Emits the payloads of the received push notification messages.</source>
          <target state="translated">发送收到的推送通知消息的有效载荷。</target>
        </trans-unit>
        <trans-unit id="4f82187a59b317b0dcc96d315aa6c31be3ea2d81" translate="yes" xml:space="preserve">
          <source>Empties out the async validator list.</source>
          <target state="translated">清空异步验证器列表。</target>
        </trans-unit>
        <trans-unit id="f7fad72021d0dbe5822e8c652ce49746dc0bda5d" translate="yes" xml:space="preserve">
          <source>Empties out the sync validator list.</source>
          <target state="translated">清空同步验证器列表。</target>
        </trans-unit>
        <trans-unit id="87434da39dfaf08f094f5a8d96e89bd88fe4ac24" translate="yes" xml:space="preserve">
          <source>Empty Path</source>
          <target state="translated">空路</target>
        </trans-unit>
        <trans-unit id="672ad1b8b8d0a43ea96a232f42837d615b95f825" translate="yes" xml:space="preserve">
          <source>Empty-path route configurations can be used to instantiate components that do not 'consume' any URL segments.</source>
          <target state="translated">空路径路由配置可用于实例化不 &quot;消耗 &quot;任何URL段的组件。</target>
        </trans-unit>
        <trans-unit id="5370c69f525b9a37e8e07585264c99f9c59d322c" translate="yes" xml:space="preserve">
          <source>Empty-path routes can have children. In the following example, when navigating to &lt;code&gt;/team/11/user/jim&lt;/code&gt;, the router instantiates the wrapper component with the user component in it.</source>
          <target state="translated">空路路线可以有孩子。在以下示例中，当导航到 &lt;code&gt;/team/11/user/jim&lt;/code&gt; 时，路由器会实例化带有用户组件的包装器组件。</target>
        </trans-unit>
        <trans-unit id="16129f01e8969b5f4fb2adaad44b03b5d7650d4c" translate="yes" xml:space="preserve">
          <source>Emulate &lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt; scoping of styles by adding an attribute containing surrogate id to the Host Element and pre-processing the style rules provided via &lt;a href=&quot;component#styles&quot;&gt;styles&lt;/a&gt; or &lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;, and adding the new Host Element attribute to all selectors.</source>
          <target state="translated">模仿 &lt;code&gt;&lt;a href=&quot;viewencapsulation#Native&quot;&gt;Native&lt;/a&gt;&lt;/code&gt; 加入含有替代ID到主机的属性作用域的风格元素和预处理通过提供的样式规则&lt;a href=&quot;component#styles&quot;&gt;的样式&lt;/a&gt;或&lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;，并添加新的Host元素属性的所有选择。</target>
        </trans-unit>
        <trans-unit id="265a9db68ca4a5d6ef8d4fae40f173a071928e99" translate="yes" xml:space="preserve">
          <source>Enable HTTP services</source>
          <target state="translated">启用HTTP服务</target>
        </trans-unit>
        <trans-unit id="e67083640ced0b81bedd70c022a1ba4bc9884def" translate="yes" xml:space="preserve">
          <source>Enable HttpClient for app</source>
          <target state="translated">为应用程序启用HttpClient</target>
        </trans-unit>
        <trans-unit id="e34ac47784e0cfde79a7151a7989c931f93af556" translate="yes" xml:space="preserve">
          <source>Enable HttpClient for cart service</source>
          <target state="translated">为购物车服务启用HttpClient。</target>
        </trans-unit>
        <trans-unit id="fa6eebc6227fc9a918b716c4f215885d40621698" translate="yes" xml:space="preserve">
          <source>Enable access to CLI usage data</source>
          <target state="translated">允许访问CLI使用数据</target>
        </trans-unit>
        <trans-unit id="6d63b68fee5b381bfb9695361afac709eb36b661" translate="yes" xml:space="preserve">
          <source>Enable and define the file watching poll time period in milliseconds.</source>
          <target state="translated">启用并定义文件监视轮询时间段,单位为毫秒。</target>
        </trans-unit>
        <trans-unit id="39128e720765af16eba7528148ad65954348b7b8" translate="yes" xml:space="preserve">
          <source>Enable code coverage reports</source>
          <target state="translated">启用代码覆盖率报告</target>
        </trans-unit>
        <trans-unit id="e4ed8e6c246b54070d8318341912b462815ca123" translate="yes" xml:space="preserve">
          <source>Enable hot module replacement.</source>
          <target state="translated">启用热模块更换。</target>
        </trans-unit>
        <trans-unit id="2becf0fba4ac14d337ccb6df4a33af2c2e4a71ab" translate="yes" xml:space="preserve">
          <source>Enable runtime production mode</source>
          <target state="translated">启用运行时生产模式</target>
        </trans-unit>
        <trans-unit id="d80854840d07f800e414541fedcc13a32a5458c2" translate="yes" xml:space="preserve">
          <source>Enable the &lt;code&gt;dead&lt;/code&gt; or &lt;code&gt;IE&lt;/code&gt; browsers in the &lt;code&gt;browserslist&lt;/code&gt; config file by removing the &lt;code&gt;not&lt;/code&gt; keyword in front of them.</source>
          <target state="translated">启用 &lt;code&gt;dead&lt;/code&gt; 或 &lt;code&gt;IE&lt;/code&gt; 在浏览器 &lt;code&gt;browserslist&lt;/code&gt; 通过删除配置文件 &lt;code&gt;not&lt;/code&gt; 在他们面前的关键字。</target>
        </trans-unit>
        <trans-unit id="faa28fb670d9e554df72f4770b4d351a70b2299b" translate="yes" xml:space="preserve">
          <source>Enable users to select a hero from a master list and edit that hero in the details view.</source>
          <target state="translated">使用户能够从主列表中选择一个英雄,并在详情视图中编辑该英雄。</target>
        </trans-unit>
        <trans-unit id="af82fafd98183ea88b6b2ce709a425bba69efa9a" translate="yes" xml:space="preserve">
          <source>Enabled Angular debug tools that are accessible via your browser's developer console.</source>
          <target state="translated">启用了Angular调试工具,可以通过浏览器的开发者控制台访问。</target>
        </trans-unit>
        <trans-unit id="fb40fa7ce63184ee9b66dd0bfe91adbe467f8327" translate="yes" xml:space="preserve">
          <source>Enables '@angular-devkit/build-optimizer' optimizations when using the 'aot' option.</source>
          <target state="translated">当使用'aot'选项时,启用'@angular-devkit/build-optimizer'优化。</target>
        </trans-unit>
        <trans-unit id="f1cc047827e87383481e1ca961b5f9404a67422d" translate="yes" xml:space="preserve">
          <source>Enables a bug fix that corrects relative link resolution in components with empty paths.</source>
          <target state="translated">启用了一个错误修复功能,该功能可纠正空路径组件中的相对链接解析。</target>
        </trans-unit>
        <trans-unit id="ac06417759dacb5336a8ec325b7c27700c913abc" translate="yes" xml:space="preserve">
          <source>Enables a bug fix that corrects relative link resolution in components with empty paths. Example:</source>
          <target state="translated">启用一个错误修复,以纠正组件中空路径的相对链接解析。例如</target>
        </trans-unit>
        <trans-unit id="5576cd5af595cb792244725abdde9ed97de0e874" translate="yes" xml:space="preserve">
          <source>Enables conditionally loaded ES2015 polyfills.</source>
          <target state="translated">启用有条件加载的ES2015 polyfills。</target>
        </trans-unit>
        <trans-unit id="d7d0efe84209e6bb673aa9874f497d92f43c4e2a" translate="yes" xml:space="preserve">
          <source>Enables optimization of the build output.</source>
          <target state="translated">能够优化构建输出。</target>
        </trans-unit>
        <trans-unit id="92aba376f06cee090c7bd7984cb839f8f47ad6c7" translate="yes" xml:space="preserve">
          <source>Enables service worker build support in the CLI.</source>
          <target state="translated">在CLI中启用服务人员构建支持。</target>
        </trans-unit>
        <trans-unit id="816d66936a53cc03e36d791ff87d917b08ff2204" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;&lt;a href=&quot;common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; service to read route state from the browser's URL. Angular provides two strategies: &lt;code&gt;&lt;a href=&quot;common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使 &lt;code&gt;&lt;a href=&quot;common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 服务能够从浏览器的URL读取路线状态。Angular提供了两种策略： &lt;code&gt;&lt;a href=&quot;common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fde15eb84da07dc5121c8a7b3c654796df3e1a2" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; service to read route state from the browser's URL. Angular provides two strategies: &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使 &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 服务能够从浏览器的URL读取路线状态。Angular提供了两种策略： &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae2bf2b28b78634b6e274b5a4cb6685ee4236774" translate="yes" xml:space="preserve">
          <source>Enables the control. This means the control is included in validation checks and the aggregate value of its parent. Its status recalculates based on its value and its validators.</source>
          <target state="translated">启用该控件。这意味着该控件被包含在验证检查和其父体的总价值中。它的状态会根据其值和验证器重新计算。</target>
        </trans-unit>
        <trans-unit id="b9e46f25dc7ee87fb5ded014e116953e28110e6a" translate="yes" xml:space="preserve">
          <source>Enables the use of subresource integrity validation.</source>
          <target state="translated">启用子资源完整性验证的使用。</target>
        </trans-unit>
        <trans-unit id="fc5a12db1e324c2b7dd69b3bfe2b8d7c1393abff" translate="yes" xml:space="preserve">
          <source>Enabling polyfills with CLI projects</source>
          <target state="translated">启用CLI项目的多重填充</target>
        </trans-unit>
        <trans-unit id="82d97a722f9bd2f260d6872e6e1c1368d68e3771" translate="yes" xml:space="preserve">
          <source>Encapsulates a child animation, that can be run explicitly when the parent is run. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">封装子动画，可以在运行父动画时显式运行它。由 &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="e67f35b0e15befa6112a86582de589af1eb6509e" translate="yes" xml:space="preserve">
          <source>Encapsulates a child animation, that can be run explicitly when the parent is run. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">封装子动画，可以在运行父动画时显式运行它。由 &lt;code&gt;&lt;a href=&quot;animations/animatechild&quot;&gt;animateChild&lt;/a&gt;&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="51602e00df41fab8699fc33a3d66db28f113b648" translate="yes" xml:space="preserve">
          <source>Encapsulates a keyframes sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装关键帧序列。由 &lt;code&gt;&lt;a href=&quot;animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="eea312371c9c4522fe9d154fe08ec79022831492" translate="yes" xml:space="preserve">
          <source>Encapsulates a keyframes sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装关键帧序列。由 &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="a4971d06afca83215d81f836e2dd45b2363e2baa" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation, which is a collection of individual animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; function, and passed to the &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装可重复使用的动画，该动画是各个动画步骤的集合。由 &lt;code&gt;&lt;a href=&quot;animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回，并传递给 &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="1df96d1474ff38a31de3fee689d9706e16ff0cf7" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation, which is a collection of individual animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; function, and passed to the &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装可重复使用的动画，该动画是各个动画步骤的集合。由 &lt;code&gt;&lt;a href=&quot;animations/animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回，并传递给 &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="6e515e5130b8e32d6fc4afc2cd1acb89a77ff2b1" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装可重用的动画。由 &lt;code&gt;&lt;a href=&quot;animations/useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="908ea316bcaabe15d2a8d34c21396e90c859dfc5" translate="yes" xml:space="preserve">
          <source>Encapsulates a reusable animation. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装可重用的动画。由 &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="e9e77b22ce0e7c1986088f5d83407dea43be6d31" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation group. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">封装动画组。由 &lt;code&gt;&lt;a href=&quot;animations/group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="03afdf2ce28b3d3281d4d286b0f0ff4c68848a50" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation group. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">封装动画组。由 &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="61a70386ff0fcf13a39642ec4421be17e8e2a47a" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation query. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画查询。由 &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="716da4381a8b20dbe1fb7dcc1c06b3f846dff79f" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation query. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画查询。由 &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="989bd79ad47de1872ca95560de7f37d0d0e3a0e5" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画序列。由 &lt;code&gt;&lt;a href=&quot;animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="7da932f27be4de034907616c90fd92e41720ef1c" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation sequence. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画序列。由 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="5fe29ca1afe02d077482c094aea90fabb2efb91b" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation state by associating a state name with a set of CSS styles. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">通过将状态名称与一组CSS样式相关联来封装动画状态。由 &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="cafcceea439c9d880e4ca5a76ed6a50dd8d4396b" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation state by associating a state name with a set of CSS styles. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">通过将状态名称与一组CSS样式相关联来封装动画状态。由 &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="848b7c49de9bb7153581107ae1af63e989ae6480" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation step. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画步骤。由 &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="80c96b46d45590ad7a6e326fa324ed5d0d342266" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation step. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画步骤。由 &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="205b24cabe22de4f517ff9953be8f2d04d4fd906" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation style. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画样式。由 &lt;code&gt;&lt;a href=&quot;animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="28b7fdc6da92b3ee02f32d9b3c5bc61e51f8aa7a" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation style. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画样式。由 &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="0347672b48914062705bfc7b4877d25dc434353d" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation transition. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画过渡。由 &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="d21db759b804367fab355379fa8f13a93cee565b" translate="yes" xml:space="preserve">
          <source>Encapsulates an animation transition. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画过渡。由 &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="9433882cf665f44d956b41fd6eacf7d14fa7342a" translate="yes" xml:space="preserve">
          <source>Encapsulates animation query options. Passed to the &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画查询选项。传递给 &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="2731904c5fe656868e3f9d4d06263a10ed9fef1b" translate="yes" xml:space="preserve">
          <source>Encapsulates animation query options. Passed to the &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装动画查询选项。传递给 &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="5b28f5efce82bd292d38c6feae74c4c1b401975a" translate="yes" xml:space="preserve">
          <source>Encapsulates parameters for staggering the start times of a set of animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装参数，以错开一组动画步骤的开始时间。由 &lt;code&gt;&lt;a href=&quot;animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="5bd43f9c52ef5eae490d0a9249eb0180efef2307" translate="yes" xml:space="preserve">
          <source>Encapsulates parameters for staggering the start times of a set of animation steps. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">封装参数，以错开一组动画步骤的开始时间。由 &lt;code&gt;&lt;a href=&quot;stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="ac811c547df2bcc849a4681b3e4d095a334e1748" translate="yes" xml:space="preserve">
          <source>Encodes a key name for a URL parameter or query-string.</source>
          <target state="translated">编码一个URL参数或查询字符串的键名。</target>
        </trans-unit>
        <trans-unit id="4e6d7597b00dee1d9b12f8c3da253b16ded5abb2" translate="yes" xml:space="preserve">
          <source>Encodes the hash from the provided string</source>
          <target state="translated">对提供的字符串进行哈希编码</target>
        </trans-unit>
        <trans-unit id="5a0cd9b2e8022370b3b0509a9427ccd7da2f8cec" translate="yes" xml:space="preserve">
          <source>Encodes the path from the provided string</source>
          <target state="translated">从提供的字符串编码路径</target>
        </trans-unit>
        <trans-unit id="c260306266d65e958485bd681dfb08b84f4a2140" translate="yes" xml:space="preserve">
          <source>Encodes the search string from the provided string or object</source>
          <target state="translated">从提供的字符串或对象编码搜索字符串</target>
        </trans-unit>
        <trans-unit id="e03641fe608821032997c71c5a56090f82fc2bdb" translate="yes" xml:space="preserve">
          <source>Encodes the value of a URL parameter or query-string.</source>
          <target state="translated">编码一个URL参数或查询字符串的值。</target>
        </trans-unit>
        <trans-unit id="20f40c58b071e9a7277373457706db22c56f22db" translate="yes" xml:space="preserve">
          <source>End-to-End Tests</source>
          <target state="translated">端到端测试</target>
        </trans-unit>
        <trans-unit id="b3f18894771fc8d6f088ca31ff6911e75200c41f" translate="yes" xml:space="preserve">
          <source>End-to-end test files</source>
          <target state="translated">端到端测试文件</target>
        </trans-unit>
        <trans-unit id="a2365ba72108d31cd3d6c1c16496babe7ef35421" translate="yes" xml:space="preserve">
          <source>Ends a async time range operation. [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been enabled.</source>
          <target state="translated">结束一个异步时间范围操作。范围]是[wtfStartTimeRange]的返回值,只有在启用了WTF的情况下,异步范围才会生效。</target>
        </trans-unit>
        <trans-unit id="fe030e0ac9483f1774410e532b40c19c3058c1ba" translate="yes" xml:space="preserve">
          <source>Ends the animation, invoking the &lt;code&gt;onDone()&lt;/code&gt; callback.</source>
          <target state="translated">结束动画，并调用 &lt;code&gt;onDone()&lt;/code&gt; 回调。</target>
        </trans-unit>
        <trans-unit id="6cc1a9c010adc0d963f45d36b2ca51ffbc23ff25" translate="yes" xml:space="preserve">
          <source>Ensure that you are not already in an Angular workspace folder. For example, if you have previously created the Getting Started workspace, change to the parent of that folder.</source>
          <target state="translated">确保你不是已经在Angular工作区文件夹中。例如,如果你之前已经创建了Getting Started工作空间,请改成该文件夹的父文件夹。</target>
        </trans-unit>
        <trans-unit id="945c30b6d2cd9f42f65f94b2363c4b07a4390ca9" translate="yes" xml:space="preserve">
          <source>Enter a URL in the address bar and the browser navigates to a corresponding page.</source>
          <target state="translated">在地址栏中输入一个URL,浏览器就会导航到相应的页面。</target>
        </trans-unit>
        <trans-unit id="5b2837eec05b4cbd4f8e485666e49854e6c7fb61" translate="yes" xml:space="preserve">
          <source>Enter a URL in the address bar, and the browser navigates to a corresponding page.</source>
          <target state="translated">在地址栏中输入一个URL,浏览器就会导航到相应的页面。</target>
        </trans-unit>
        <trans-unit id="1fd361c250e37b989d268cec38571e912b6b1713" translate="yes" xml:space="preserve">
          <source>Enter a name and click &lt;em&gt;New Hero&lt;/em&gt; again. The app displays a &lt;em&gt;Name is required&lt;/em&gt; error message. You don't want error messages when you create a new (empty) hero. Why are you getting one now?</source>
          <target state="translated">输入名称，然后再次单击&amp;ldquo; &lt;em&gt;新英雄&amp;rdquo;&lt;/em&gt;。该应用程序显示&amp;ldquo; &lt;em&gt;名称为必填&amp;rdquo;&lt;/em&gt;错误消息。创建新的（空）英雄时，您不需要错误消息。为什么现在要买一个？</target>
        </trans-unit>
        <trans-unit id="b49822088cea36d8bc8b7f290b066e9029739611" translate="yes" xml:space="preserve">
          <source>Entry Components</source>
          <target state="translated">参赛组件</target>
        </trans-unit>
        <trans-unit id="007cbf2ba452e4583d408203d5a0b563eaf1b009" translate="yes" xml:space="preserve">
          <source>Entry and exit transitions:</source>
          <target state="translated">进入和退出的过渡。</target>
        </trans-unit>
        <trans-unit id="ff9189b5aa6efac11c15287a492b218d79dd096a" translate="yes" xml:space="preserve">
          <source>Entry point exports</source>
          <target state="translated">入境点出口</target>
        </trans-unit>
        <trans-unit id="18f73528d44427047489bb703aa3ca755342dbbb" translate="yes" xml:space="preserve">
          <source>Entry points</source>
          <target state="translated">入境点</target>
        </trans-unit>
        <trans-unit id="3a571a4359b2cd140372e237ef5e3c2c5a6186c5" translate="yes" xml:space="preserve">
          <source>Enumerates the set of data-bound input properties for a directive</source>
          <target state="translated">枚举指令的数据绑定输入属性集。</target>
        </trans-unit>
        <trans-unit id="64101c05a2cf6652261d1745a418b7e927fca228" translate="yes" xml:space="preserve">
          <source>Enumerates the set of event-bound output properties.</source>
          <target state="translated">枚举事件绑定的输出属性集。</target>
        </trans-unit>
        <trans-unit id="f37a89cbd1a73777b5e65ae13dd77ca3e52051eb" translate="yes" xml:space="preserve">
          <source>Era</source>
          <target state="translated">Era</target>
        </trans-unit>
        <trans-unit id="9c58e3328b0971c008ce1a1e8bfc4788ff407a2c" translate="yes" xml:space="preserve">
          <source>Erase the name.</source>
          <target state="translated">擦掉这个名字。</target>
        </trans-unit>
        <trans-unit id="f5c2b7865df76e15d4c3b162675500c5f27ce98d" translate="yes" xml:space="preserve">
          <source>Error checking</source>
          <target state="translated">错误检查</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">错误处理</target>
        </trans-unit>
        <trans-unit id="31c5a2a3b0e1cc6c9bcf73618e9aab80710648ad" translate="yes" xml:space="preserve">
          <source>Error handling (and specifically recovering from an error) is covered in more detail in a later section.</source>
          <target state="translated">错误处理(特别是从错误中恢复)将在后面的章节中详细介绍。</target>
        </trans-unit>
        <trans-unit id="4aab21f64f3ae2fed4694ee476bc130ac9bdcd17" translate="yes" xml:space="preserve">
          <source>Error inspection, interpretation, and resolution is something you want to do in the &lt;em&gt;service&lt;/em&gt;, not in the &lt;em&gt;component&lt;/em&gt;.</source>
          <target state="translated">错误检查，解释和解决是您要在&lt;em&gt;服务&lt;/em&gt;中而不是&lt;em&gt;组件中&lt;/em&gt;要做的事情。</target>
        </trans-unit>
        <trans-unit id="d1dc7f57ed4361a9994d5f5c1df19b68553d2dcf" translate="yes" xml:space="preserve">
          <source>Error: throw an error. If you are using AOT compilation, the build will fail. If you are using JIT compilation, the app will fail to load.</source>
          <target state="translated">错误:抛出一个错误。如果你使用的是AOT编译,构建将失败。如果你使用的是JIT编译,应用程序将无法加载。</target>
        </trans-unit>
        <trans-unit id="5ce56d364feb43e7a2088dcd76ace52325393f7b" translate="yes" xml:space="preserve">
          <source>Error: throw if you have missing translations.</source>
          <target state="translated">错误:如果你有缺失的翻译,就扔。</target>
        </trans-unit>
        <trans-unit id="441c4e5aa8c59a894a04039c4f26123cabb982c1" translate="yes" xml:space="preserve">
          <source>ErrorHandler</source>
          <target state="translated">ErrorHandler</target>
        </trans-unit>
        <trans-unit id="e479225976d3687521ab58ddd623c11dd3670242" translate="yes" xml:space="preserve">
          <source>Errors are never okay, even when the status code is in the 2xx success range.</source>
          <target state="translated">即使状态码在2xx成功范围内,出错也是绝对不会有事的。</target>
        </trans-unit>
        <trans-unit id="140f12ddf60a5bdd192c50cefaefa3e1c9f117cf" translate="yes" xml:space="preserve">
          <source>Errors during the build process could result in updated resources without &lt;code&gt;ngsw.json&lt;/code&gt; being updated. The reverse could also happen resulting in an updated &lt;code&gt;ngsw.json&lt;/code&gt; without updated resources.</source>
          <target state="translated">生成过程中的错误可能会导致资源更新，而不更新 &lt;code&gt;ngsw.json&lt;/code&gt; 。相反的情况也可能发生，导致更新的 &lt;code&gt;ngsw.json&lt;/code&gt; 没有更新的资源。</target>
        </trans-unit>
        <trans-unit id="cd18a877ca7b0ceaa366b88dcd78fd4a5b4438f9" translate="yes" xml:space="preserve">
          <source>Errors in AOT compilation commonly occur because of metadata that does not conform to the compiler's requirements (as described more fully below). For help in understanding and resolving these problems, see &lt;a href=&quot;aot-metadata-errors&quot;&gt;AOT Metadata Errors&lt;/a&gt;.</source>
          <target state="translated">AOT编译中的错误通常是由于元数据不符合编译器的要求而发生的（如下文更详细描述）。为帮助您理解和解决这些问题，请参阅&lt;a href=&quot;aot-metadata-errors&quot;&gt;AOT元数据错误&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f5d1776185d17f7f636da072a52b82b51304a31" translate="yes" xml:space="preserve">
          <source>Errors that occur within the service worker will be logged here.</source>
          <target state="translated">在服务工作者内部发生的错误将被记录在这里。</target>
        </trans-unit>
        <trans-unit id="6eebfc5a8e55779a7589ac3319e418c8eede142b" translate="yes" xml:space="preserve">
          <source>Evaluation of a template expression should have no visible side effects. The expression language itself, or the way you write template expressions, helps to a certain extent; you can't assign a value to anything in a property binding expression nor use the increment and decrement operators.</source>
          <target state="translated">模板表达式的评估应该没有明显的副作用。表达式语言本身,或者说你写模板表达式的方式在一定程度上有帮助,你不能在属性绑定表达式中给任何东西赋值,也不能使用增量和减量运算符。</target>
        </trans-unit>
        <trans-unit id="850e9818f40adbc977c81ae6399f41133a13fd54" translate="yes" xml:space="preserve">
          <source>Even a small form such as this one can produce a mess of tortured conditional setup and CSS element selection.</source>
          <target state="translated">即使是像这样的小表单,也会产生一团折磨人的条件设置和CSS元素选择。</target>
        </trans-unit>
        <trans-unit id="3769401ed313e5329253644819bfce1f955dbb33" translate="yes" xml:space="preserve">
          <source>Even accounting for these differences you can still have dependency injection interoperability. &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; resolves the differences and makes everything work seamlessly:</source>
          <target state="translated">即使考虑了这些差异，您仍然可以具有依赖项注入互操作性。 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; 解决了差异，并使所有工作无缝进行：</target>
        </trans-unit>
        <trans-unit id="e16b061e3708e3fc68014096083cafee7c7ce978" translate="yes" xml:space="preserve">
          <source>Even across a fast reliable network, round-trip delays can introduce significant latency when loading the application. Using a service worker to reduce dependency on the network can significantly improve the user experience.</source>
          <target state="translated">即使在快速可靠的网络中,加载应用时的往返延迟也会带来明显的延迟。使用服务工作者来减少对网络的依赖,可以显著改善用户体验。</target>
        </trans-unit>
        <trans-unit id="2d077313c4f8be84916129e534e1c9472b805611" translate="yes" xml:space="preserve">
          <source>Even though the components declared by &lt;code&gt;SharedModule&lt;/code&gt; might not bind with &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; and there may be no need for &lt;code&gt;SharedModule&lt;/code&gt; to import &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;SharedModule&lt;/code&gt; can still export &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; without listing it among its &lt;code&gt;imports&lt;/code&gt;. This way, you can give other modules access to &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; without having to import it directly into the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">即使 &lt;code&gt;SharedModule&lt;/code&gt; 声明的组件可能未与 &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; 绑定，并且可能不需要 &lt;code&gt;SharedModule&lt;/code&gt; 导入 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;SharedModule&lt;/code&gt; 仍可以导出 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 而不在其 &lt;code&gt;imports&lt;/code&gt; 列出它。这样，您可以授予其他模块对 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 的访问权限，而不必直接将其导入到 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 装饰器中。</target>
        </trans-unit>
        <trans-unit id="3ac2045e3dc81152fb554884060276dbdd76671d" translate="yes" xml:space="preserve">
          <source>Even thought the component is instantiated in AngularJS, it will be using Angular syntax. This has to be done, this way because we must follow Angular components do not declare how the attributes should be interpreted.</source>
          <target state="translated">即使以为组件是在AngularJS中实例化的,它也会使用Angular语法。这是必须要做的,这样做是因为我们必须遵循Angular组件没有声明的属性应该如何解释。</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="a4b8c14cddb2f1885a3b5243af7a8673f906232d" translate="yes" xml:space="preserve">
          <source>Event and property</source>
          <target state="translated">活动和财产</target>
        </trans-unit>
        <trans-unit id="653b2d725355aff89cbe9374190b125e15219f77" translate="yes" xml:space="preserve">
          <source>Event binding</source>
          <target state="translated">事件绑定</target>
        </trans-unit>
        <trans-unit id="8861df64fa83a4b1d28dece2f39cadeb0dc09bc4" translate="yes" xml:space="preserve">
          <source>Event binding &lt;code&gt;( )&lt;/code&gt;</source>
          <target state="translated">事件绑定 &lt;code&gt;( )&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa9823491ce467db213d22bc6b83c462e08f3718" translate="yes" xml:space="preserve">
          <source>Event binding &lt;code&gt;(event)&lt;/code&gt;</source>
          <target state="translated">事件绑定 &lt;code&gt;(event)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77b48624494a6f0a9df34e45edd94c677ed6320e" translate="yes" xml:space="preserve">
          <source>Event binding allows you to listen for certain events such as keystrokes, mouse movements, clicks, and touches. For an example demonstrating all of the points in this section, see the &lt;span name=&quot;event-binding&quot;&gt;event binding example&lt;/span&gt;.</source>
          <target state="translated">通过事件绑定，您可以侦听某些事件，例如按键，鼠标移动，点击和触摸。有关演示本节中所有要点的示例，请参见&lt;span name=&quot;event-binding&quot;&gt;事件绑定示例&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="87f25a7f8c6489fdeb43b0e84d80feee4996cddd" translate="yes" xml:space="preserve">
          <source>Event emitter for producing the &lt;code&gt;ngModelChange&lt;/code&gt; event after the view model updates.</source>
          <target state="translated">更新视图模型后，用于产生 &lt;code&gt;ngModelChange&lt;/code&gt; 事件的事件发射器。</target>
        </trans-unit>
        <trans-unit id="b128948626495abc382e1e64d3eeecac95ddb8c7" translate="yes" xml:space="preserve">
          <source>Event emitter for the &quot;ngSubmit&quot; event</source>
          <target state="translated">ngSubmit &quot;事件的事件发射器。</target>
        </trans-unit>
        <trans-unit id="8b38de0eda9857ebdbcd12bdbd0e63305b36cc10" translate="yes" xml:space="preserve">
          <source>Event: &lt;code&gt;&amp;lt;comp (close)=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">事件： &lt;code&gt;&amp;lt;comp (close)=&quot;doSomething()&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5876adadbcd068acd9f996c259fbd067d5cbf8d9" translate="yes" xml:space="preserve">
          <source>EventEmitter</source>
          <target state="translated">EventEmitter</target>
        </trans-unit>
        <trans-unit id="913641e09266e8cb48d5e95316fd86cbe16755ba" translate="yes" xml:space="preserve">
          <source>EventManager</source>
          <target state="translated">EventManager</target>
        </trans-unit>
        <trans-unit id="fe344110e73a74f72736069ed919c062c627ec74" translate="yes" xml:space="preserve">
          <source>Events API</source>
          <target state="translated">活动API</target>
        </trans-unit>
        <trans-unit id="8da7c1c5bd31b41021042d6be49c271cb61391f5" translate="yes" xml:space="preserve">
          <source>Eventually you'll get them from a remote data server. For now, you'll create some &lt;em&gt;mock heroes&lt;/em&gt; and pretend they came from the server.</source>
          <target state="translated">最终，您将从远程数据服务器获得它们。现在，您将创建一些&lt;em&gt;模拟英雄，&lt;/em&gt;并假装它们来自服务器。</target>
        </trans-unit>
        <trans-unit id="1f103dec1c98bfc6accaa7ec6f90d5f9d7a5b16c" translate="yes" xml:space="preserve">
          <source>Every Angular app has a &lt;em&gt;root module&lt;/em&gt;, conventionally named &lt;code&gt;AppModule&lt;/code&gt;, which provides the bootstrap mechanism that launches the application. An app typically contains many functional modules.</source>
          <target state="translated">每个Angular应用程序都有一个&lt;em&gt;根模块&lt;/em&gt;，通常称为 &lt;code&gt;AppModule&lt;/code&gt; ，它提供启动应用程序的引导机制。一个应用程序通常包含许多功能模块。</target>
        </trans-unit>
        <trans-unit id="6daf3b062f03c71d4fae2209ffdc85e874f89f66" translate="yes" xml:space="preserve">
          <source>Every Angular app has at least one NgModule class, &lt;a href=&quot;bootstrapping&quot;&gt;the &lt;em&gt;root module&lt;/em&gt;&lt;/a&gt;, which is conventionally named &lt;code&gt;AppModule&lt;/code&gt; and resides in a file named &lt;code&gt;app.module.ts&lt;/code&gt;. You launch your app by &lt;em&gt;bootstrapping&lt;/em&gt; the root NgModule.</source>
          <target state="translated">每个Angular应用程序都有至少一个NgModule类，&lt;a href=&quot;bootstrapping&quot;&gt;即&lt;em&gt;根模块&lt;/em&gt;&lt;/a&gt;，该类通常名为 &lt;code&gt;AppModule&lt;/code&gt; ,并且驻留在名为 &lt;code&gt;app.module.ts&lt;/code&gt; 的文件中。通过&lt;em&gt;引导&lt;/em&gt;根NgModule 启动应用&lt;em&gt;程序&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="483c63e0bfa0f7ca6f63472bc5879db0599afb08" translate="yes" xml:space="preserve">
          <source>Every Angular app has at least one module, the root module. You &lt;a href=&quot;bootstrapping&quot;&gt;bootstrap&lt;/a&gt; that module to launch the application.</source>
          <target state="translated">每个Angular应用都有至少一个模块，即根模块。您&lt;a href=&quot;bootstrapping&quot;&gt;引导&lt;/a&gt;该模块以启动应用程序。</target>
        </trans-unit>
        <trans-unit id="820ed242310301e24986112a7cff648414c77911" translate="yes" xml:space="preserve">
          <source>Every Angular application has a root module. By convention, the class is called &lt;code&gt;AppModule&lt;/code&gt; and resides in a file named &lt;code&gt;app.module.ts&lt;/code&gt;.</source>
          <target state="translated">每个Angular应用程序都有一个根模块。按照惯例，该类称为 &lt;code&gt;AppModule&lt;/code&gt; ,并且驻留在名为 &lt;code&gt;app.module.ts&lt;/code&gt; 的文件中。</target>
        </trans-unit>
        <trans-unit id="c35630c98a82ad178da0ab9c1b5acf827ada573b" translate="yes" xml:space="preserve">
          <source>Every Angular application has at least one component, the &lt;em&gt;root component&lt;/em&gt; that connects a component hierarchy with the page document object model (DOM). Each component defines a class that contains application data and logic, and is associated with an HTML &lt;em&gt;template&lt;/em&gt; that defines a view to be displayed in a target environment.</source>
          <target state="translated">每个Angular应用程序都有至少一个组件，该&lt;em&gt;根组件&lt;/em&gt;将组件层次结构与页面文档对象模型（DOM）连接起来。每个组件都定义一个包含应用程序数据和逻辑的类，并且与一个HTML &lt;em&gt;模板&lt;/em&gt;相关联，该HTML &lt;em&gt;模板&lt;/em&gt;定义了要在目标环境中显示的视图。</target>
        </trans-unit>
        <trans-unit id="21950ef1d3b08fa378394db102c287c7e9d9c230" translate="yes" xml:space="preserve">
          <source>Every app is different. Developers have various levels of experience and comfort with the available choices. Some suggestions and guidelines appear to have wide appeal.</source>
          <target state="translated">每个应用程序都是不同的。开发者对现有的选择有不同程度的经验和舒适度。一些建议和准则似乎具有广泛的吸引力。</target>
        </trans-unit>
        <trans-unit id="53c892053be276bc3b640b778522647ac9691d78" translate="yes" xml:space="preserve">
          <source>Every application starts out with what seems like a simple task: get data, transform them, and show them to users. Getting data could be as simple as creating a local variable or as complex as streaming data over a WebSocket.</source>
          <target state="translated">每个应用程序都是以看似简单的任务开始的:获取数据,转换数据,并将其显示给用户。获取数据可以像创建一个本地变量一样简单,也可以像通过WebSocket流式传输数据一样复杂。</target>
        </trans-unit>
        <trans-unit id="9801e8ee8ba60600fa9d73e2004199dd124e627e" translate="yes" xml:space="preserve">
          <source>Every component must be declared in &lt;em&gt;exactly one&lt;/em&gt;&lt;a href=&quot;../guide/ngmodules&quot;&gt;NgModule&lt;/a&gt;.</source>
          <target state="translated">每个组件都必须在&lt;em&gt;一个&lt;/em&gt;&lt;a href=&quot;../guide/ngmodules&quot;&gt;NgModule中&lt;/a&gt;声明。</target>
        </trans-unit>
        <trans-unit id="4952a251d677b65b9b459f62edb6a04fc9616121" translate="yes" xml:space="preserve">
          <source>Every guide document must have a title.</source>
          <target state="translated">每一份指导性文件都必须有一个标题。</target>
        </trans-unit>
        <trans-unit id="5fa540bcfc1b39a5cf26b4f552a9a0a6f39ad11c" translate="yes" xml:space="preserve">
          <source>Every guide page file is stored in the &lt;code&gt;content/guide&lt;/code&gt; directory. Although the &lt;a href=&quot;docs-style-guide#navigation&quot;&gt;side navigation&lt;/a&gt; panel displays as a hierarchy, the directory is flat with no sub-folders. The flat folder approach allows us to shuffle the apparent navigation structure without moving page files or redirecting old page URLs.</source>
          <target state="translated">每个指南页面文件都存储在 &lt;code&gt;content/guide&lt;/code&gt; 目录中。尽管&lt;a href=&quot;docs-style-guide#navigation&quot;&gt;侧面导航&lt;/a&gt;面板显示为层次结构，但目录是平坦的，没有子文件夹。平面文件夹方法使我们能够在不移动页面文件或重定向旧页面URL的情况下改组明显的导航结构。</target>
        </trans-unit>
        <trans-unit id="d886ac38f851fdbc187ae78a3b2d9fde9be44cd7" translate="yes" xml:space="preserve">
          <source>Every node in the route tree is an &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; instance that knows about the &quot;consumed&quot; URL segments, the extracted parameters, and the resolved data. Use the &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; properties to traverse the tree from any node.</source>
          <target state="translated">路由树中的每个节点都是 &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 实例，该实例了解&amp;ldquo;消耗的&amp;rdquo; URL段，提取的参数和解析的数据。使用 &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 属性可以从任何节点遍历树。</target>
        </trans-unit>
        <trans-unit id="6ea96237603d72502bbf6d1b0c42d01f5d2953c0" translate="yes" xml:space="preserve">
          <source>Every progress event triggers change detection, so only turn them on if you truly intend to report progress in the UI.</source>
          <target state="translated">每个进度事件都会触发变化检测,所以只有当你真正打算在用户界面中报告进度时,才会打开它们。</target>
        </trans-unit>
        <trans-unit id="17c7f64d3ab0ca40b52599a400116103f22c8a8e" translate="yes" xml:space="preserve">
          <source>Every public member of a &lt;strong&gt;source&lt;/strong&gt; directive is automatically available for binding. You don't have to do anything special to access a directive member in a template expression or statement.</source>
          <target state="translated">&lt;strong&gt;Source&lt;/strong&gt;指令的每个公共成员都可以自动进行绑定。您无需执行任何特殊操作即可访问模板表达式或语句中的指令成员。</target>
        </trans-unit>
        <trans-unit id="6959a0f4b289947cd2d331836fef67bd073a351f" translate="yes" xml:space="preserve">
          <source>Every section header tag is also an anchor point. Another guide page could add a link to this section by writing:</source>
          <target state="translated">每一个版块的头部标签也是一个锚点。另一个引导页可以写上本节的链接。</target>
        </trans-unit>
        <trans-unit id="c8e693ec5796b6575855ec18bba79c7fff143e85" translate="yes" xml:space="preserve">
          <source>Every time the user opens or refreshes the application, the Angular service worker checks for updates to the app by looking for updates to the &lt;code&gt;ngsw.json&lt;/code&gt; manifest. If an update is found, it is downloaded and cached automatically, and will be served the next time the application is loaded.</source>
          <target state="translated">每次用户打开或刷新应用程序时，Angular服务工作人员都会通过查找 &lt;code&gt;ngsw.json&lt;/code&gt; 清单的更新来检查应用程序的更新。如果找到更新，则会自动下载并缓存该更新，并将在下次加载应用程序时将其提供。</target>
        </trans-unit>
        <trans-unit id="60c10c60832a627bfc41ff772bb8e682f844116f" translate="yes" xml:space="preserve">
          <source>Every time the user types in the textbox, the binding calls &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; with the textbox value, a &quot;search term&quot;. The &lt;code&gt;searchTerms&lt;/code&gt; becomes an &lt;code&gt;Observable&lt;/code&gt; emitting a steady stream of search terms.</source>
          <target state="translated">每次用户在文本框中键入内容时，绑定都会使用文本框值（即&amp;ldquo;搜索字词&amp;rdquo; &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; 调用search（）。所述 &lt;code&gt;searchTerms&lt;/code&gt; 成为 &lt;code&gt;Observable&lt;/code&gt; 发光搜索项的稳定流。</target>
        </trans-unit>
        <trans-unit id="2b78a4e000844a3c8634d1a650f3134c90e5f8f0" translate="yes" xml:space="preserve">
          <source>Every time the value of a form control changes, Angular runs validation and generates either a list of validation errors, which results in an INVALID status, or null, which results in a VALID status.</source>
          <target state="translated">每当表单控件的值发生变化时,Angular都会运行验证,并生成验证错误列表,结果是invalid状态,或者是null,结果是valid状态。</target>
        </trans-unit>
        <trans-unit id="dd09c3f326ebf515fdc2fa5975f51318b625c562" translate="yes" xml:space="preserve">
          <source>Every view that matches is rendered.</source>
          <target state="translated">每一个匹配的视图都会呈现。</target>
        </trans-unit>
        <trans-unit id="c9ea72aa6a33f1cea5f19cd4eda459ed163d0bc3" translate="yes" xml:space="preserve">
          <source>Everything &lt;em&gt;outside&lt;/em&gt; the &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; string stays with the host element (the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;) as it moves inside the &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt;. In this example, the &lt;code&gt;[&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;]=&quot;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&quot;&lt;/code&gt; stays on the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 字符串&lt;em&gt;之外&lt;/em&gt;的所有内容都随宿主元素（ &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; ）一起在 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; 内部移动。在此示例中， &lt;code&gt;[&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;]=&quot;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&quot;&lt;/code&gt; &lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt; ] =&amp;ldquo; &lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;奇数&lt;/a&gt; &amp;rdquo;保留在 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 上。</target>
        </trans-unit>
        <trans-unit id="a52acc5c2622b4afcf25f3277cbd5a9d6275504c" translate="yes" xml:space="preserve">
          <source>Everything DOM and browser related, especially the pieces that help render into the DOM. This package also includes the &lt;code&gt;&lt;a href=&quot;../api/core/platformref#bootstrapModuleFactory&quot;&gt;bootstrapModuleFactory()&lt;/a&gt;&lt;/code&gt; method for bootstrapping applications for production builds that pre-compile with &lt;a href=&quot;aot-compiler&quot;&gt;AOT&lt;/a&gt;.</source>
          <target state="translated">所有与DOM和浏览器相关的内容，尤其是有助于渲染到DOM中的部分。该软件包还包括 &lt;code&gt;&lt;a href=&quot;../api/core/platformref#bootstrapModuleFactory&quot;&gt;bootstrapModuleFactory()&lt;/a&gt;&lt;/code&gt; 方法，用于引导应用程序生成用于使用&lt;a href=&quot;aot-compiler&quot;&gt;AOT&lt;/a&gt;预编译的生产版本。</target>
        </trans-unit>
        <trans-unit id="7fd19dd2368b5260e38d43ada7e94513c17625e5" translate="yes" xml:space="preserve">
          <source>Everything seems fine while you move about &lt;em&gt;within&lt;/em&gt; the app. But you'll see the problem right away if you refresh the browser or paste a link to an app page (called a &quot;deep link&quot;) into the browser address bar.</source>
          <target state="translated">在应用&lt;em&gt;内&lt;/em&gt;移动时，一切似乎都很好。但是，如果刷新浏览器或将指向应用程序页面的链接（称为&amp;ldquo;深层链接&amp;rdquo;）粘贴到浏览器地址栏中，则会立即看到问题。</target>
        </trans-unit>
        <trans-unit id="476f59850ff759c08ef96a5b6f90743c095365fc" translate="yes" xml:space="preserve">
          <source>Everything that happens in the application runs inside the Angular zone. This is true whether the event originated in AngularJS or Angular code. The zone triggers Angular change detection after every event.</source>
          <target state="translated">应用程序中发生的所有事情都在Angular区域内运行。无论事件源于AngularJS还是Angular代码,都是如此。该区域在每个事件发生后都会触发Angular变化检测。</target>
        </trans-unit>
        <trans-unit id="9904fc0bd7ef239d341a3f70df40d72cd9447a03" translate="yes" xml:space="preserve">
          <source>Examine the &lt;code&gt;src/app/app.component.ts&lt;/code&gt; file which defines two nested &lt;em&gt;#docregions&lt;/em&gt;.</source>
          <target state="translated">检查 &lt;code&gt;src/app/app.component.ts&lt;/code&gt; 文件，该文件定义了两个嵌套的&lt;em&gt;#docregions&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5bf18639605f3caf4766a97251e8f8fcdd388c0f" translate="yes" xml:space="preserve">
          <source>Examine the body and attempt to infer an appropriate MIME type for it.</source>
          <target state="translated">检查主体,并尝试推断出适合它的MIME类型。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="bc3538d0e01fab1a96b015d871befd4a7a613a0f" translate="yes" xml:space="preserve">
          <source>Example 1: an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;</source>
          <target state="translated">示例1： &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c56ea49918b9baed94cf4bc0ee9f324efc8841a" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">例二</target>
        </trans-unit>
        <trans-unit id="c208d29c3a351702191cb12e42073c3aa92627a0" translate="yes" xml:space="preserve">
          <source>Example 2: a disabled button</source>
          <target state="translated">例2:禁用按钮</target>
        </trans-unit>
        <trans-unit id="f190c0373d03310809073d92f082eb8d1d07c49f" translate="yes" xml:space="preserve">
          <source>Example URLs:</source>
          <target state="translated">URL示例:</target>
        </trans-unit>
        <trans-unit id="64675219f6669783f53ac9c46b6042ac0e46004c" translate="yes" xml:space="preserve">
          <source>Example Value</source>
          <target state="translated">示例值</target>
        </trans-unit>
        <trans-unit id="7039ac7707efb335a98c12c3a2c84c943ba9b684" translate="yes" xml:space="preserve">
          <source>Example app structure</source>
          <target state="translated">应用结构示例</target>
        </trans-unit>
        <trans-unit id="23197357f47cd7e9bcf255c1cd16f93e563c65f5" translate="yes" xml:space="preserve">
          <source>Example as TypeScript Decorator</source>
          <target state="translated">作为TypeScript装饰器的例子</target>
        </trans-unit>
        <trans-unit id="c96a08d329d79a2b34cde16eedb321e8c9af503a" translate="yes" xml:space="preserve">
          <source>Example of bad code</source>
          <target state="translated">错误代码的例子</target>
        </trans-unit>
        <trans-unit id="0edfaaea0352e467e77e2d8e3cc50c76e32a8be0" translate="yes" xml:space="preserve">
          <source>Example patterns:</source>
          <target state="translated">示例模式:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="003cb62ea56f8a36ffee819f126d05f79c0725ab" translate="yes" xml:space="preserve">
          <source>Example: A Popup Service</source>
          <target state="translated">例子:弹出式服务</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="8a5c84373e05e765edba8087863e2d37b82fce37" translate="yes" xml:space="preserve">
          <source>Examples are given in &lt;code&gt;en-US&lt;/code&gt; locale.</source>
          <target state="translated">示例在 &lt;code&gt;en-US&lt;/code&gt; 语言环境中给出。</target>
        </trans-unit>
        <trans-unit id="1a7d33f1e6ba692996c2f56fc305909ff9aba274" translate="yes" xml:space="preserve">
          <source>Examples of such scoped &lt;code&gt;HeroService&lt;/code&gt; singletons appear throughout the accompanying sample code, including &lt;code&gt;HeroBiosComponent&lt;/code&gt;, &lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt;, and &lt;code&gt;HeroesBaseComponent&lt;/code&gt;. Each of these components has its own &lt;code&gt;HeroService&lt;/code&gt; instance managing its own independent collection of heroes.</source>
          <target state="translated">这种范围限定的 &lt;code&gt;HeroService&lt;/code&gt; 单例的示例出现在随附的示例代码中，包括 &lt;code&gt;HeroBiosComponent&lt;/code&gt; ， &lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt; 和 &lt;code&gt;HeroesBaseComponent&lt;/code&gt; 。这些组件中的每一个都有其自己的 &lt;code&gt;HeroService&lt;/code&gt; 实例，该实例管理自己的独立英雄集合。</target>
        </trans-unit>
        <trans-unit id="3f48849cd5523c2b69943155168b9778d339d47f" translate="yes" xml:space="preserve">
          <source>Executes a queried inner animation element within an animation sequence.</source>
          <target state="translated">在一个动画序列中执行一个查询到的内部动画元素。</target>
        </trans-unit>
        <trans-unit id="61fe7283501d71d99c4ec0fd7a0535276f539aee" translate="yes" xml:space="preserve">
          <source>Executes the &lt;code&gt;fn&lt;/code&gt; function synchronously in Angular's parent zone and returns value returned by the function.</source>
          <target state="translated">在Angular的父区域中同步执行 &lt;code&gt;fn&lt;/code&gt; 函数，并返回该函数返回的值。</target>
        </trans-unit>
        <trans-unit id="c46f1081e2a78d1668459efc5a4bfbdd070dbc68" translate="yes" xml:space="preserve">
          <source>Executes the &lt;code&gt;fn&lt;/code&gt; function synchronously within the Angular zone and returns value returned by the function.</source>
          <target state="translated">在Angular区域内同步执行 &lt;code&gt;fn&lt;/code&gt; 函数，并返回该函数返回的值。</target>
        </trans-unit>
        <trans-unit id="d5ccdb0421f01b4d923f1b0285c7aef4a7e41120" translate="yes" xml:space="preserve">
          <source>Executes the &lt;code&gt;fn&lt;/code&gt; function synchronously within the Angular zone as a task and returns value returned by the function.</source>
          <target state="translated">作为任务在Angular区域中同步执行 &lt;code&gt;fn&lt;/code&gt; 函数，并返回该函数返回的值。</target>
        </trans-unit>
        <trans-unit id="14cc91675585ad5953e8dc0628dacd93df3a1453" translate="yes" xml:space="preserve">
          <source>Existing &lt;code&gt;token&lt;/code&gt; to return. (Equivalent to &lt;code&gt;injector.get(&lt;a href=&quot;existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;)&lt;/code&gt;)</source>
          <target state="translated">现有 &lt;code&gt;token&lt;/code&gt; 返回。（等效于 &lt;code&gt;injector.get(&lt;a href=&quot;existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;)&lt;/code&gt; （useExisting））</target>
        </trans-unit>
        <trans-unit id="320f39c06ef464dd0024c09f761558945533dc7d" translate="yes" xml:space="preserve">
          <source>ExistingProvider</source>
          <target state="translated">ExistingProvider</target>
        </trans-unit>
        <trans-unit id="cc2dec566751219059d9f8763a354f8762f0a111" translate="yes" xml:space="preserve">
          <source>ExistingSansProvider</source>
          <target state="translated">ExistingSansProvider</target>
        </trans-unit>
        <trans-unit id="4c4dcf4591979506d035a6ac9394f2530bb0a00e" translate="yes" xml:space="preserve">
          <source>Expect that a single request has been made which matches the given URL, and return its mock.</source>
          <target state="translated">期待一个与给定URL相匹配的请求被发出,并返回它的mock。</target>
        </trans-unit>
        <trans-unit id="09745b035a7bff7b32ffdade443909f9f0114f0d" translate="yes" xml:space="preserve">
          <source>Expect that a single request has been made which matches the given condition, and return its mock.</source>
          <target state="translated">期待有一个符合给定条件的请求被提出,并返回其mock。</target>
        </trans-unit>
        <trans-unit id="a6eb24a59dddd06afae77ef7bb648d8870f43d27" translate="yes" xml:space="preserve">
          <source>Expect that a single request has been made which matches the given parameters, and return its mock.</source>
          <target state="translated">期待一个与给定参数相匹配的请求被发出,并返回它的mock。</target>
        </trans-unit>
        <trans-unit id="0b87e12001cb43938518503996b08243ca0cf034" translate="yes" xml:space="preserve">
          <source>Expect that a single request has been made which matches the given predicate function, and return its mock.</source>
          <target state="translated">期待有一个与给定的谓词函数相匹配的请求被提出,并返回其mock。</target>
        </trans-unit>
        <trans-unit id="f422cf2a93648f51c72b81baaadce94d4f9a23f5" translate="yes" xml:space="preserve">
          <source>Expect that no requests have been made which match the given URL.</source>
          <target state="translated">预计没有符合给定URL的请求。</target>
        </trans-unit>
        <trans-unit id="e8d12406299d4ed82875bbb2f88105f188e80475" translate="yes" xml:space="preserve">
          <source>Expect that no requests have been made which match the given condition.</source>
          <target state="translated">预计没有符合给定条件的请求被提出。</target>
        </trans-unit>
        <trans-unit id="ba3b284a816662d49b2560b24229c09966daf2d1" translate="yes" xml:space="preserve">
          <source>Expect that no requests have been made which match the given parameters.</source>
          <target state="translated">预计没有符合给定参数的请求。</target>
        </trans-unit>
        <trans-unit id="4efe1b49671948d5bd952bb7856f5548f402044a" translate="yes" xml:space="preserve">
          <source>Expect that no requests have been made which match the given predicate function.</source>
          <target state="translated">预计没有符合给定谓词函数的请求。</target>
        </trans-unit>
        <trans-unit id="c36ea39d115e54d57c3e4f6133d6e9fe7be806a9" translate="yes" xml:space="preserve">
          <source>Expecting and answering requests</source>
          <target state="translated">期待和答复请求</target>
        </trans-unit>
        <trans-unit id="0d113a5dec63637c0ea24bb949a1452cadd75bd8" translate="yes" xml:space="preserve">
          <source>Experienced developers agree that components should be cheap and safe to construct.</source>
          <target state="translated">有经验的开发者都认为,组件的构造应该是廉价和安全的。</target>
        </trans-unit>
        <trans-unit id="6d79bd8554e5a6e5e29f39873b7262a75b37e699" translate="yes" xml:space="preserve">
          <source>Experiment with these possibilities at your leisure.</source>
          <target state="translated">闲暇时可以尝试这些可能性。</target>
        </trans-unit>
        <trans-unit id="151cc3279d56b07805e6451e1fc2e21759b64665" translate="yes" xml:space="preserve">
          <source>Explore Angular's inventory of built-in pipes in the &lt;a href=&quot;api?type=pipe&quot;&gt;API Reference&lt;/a&gt;. Try writing a custom pipe and perhaps contributing it to the community.</source>
          <target state="translated">在&lt;a href=&quot;api?type=pipe&quot;&gt;API参考中&lt;/a&gt;探索Angular的内置管道清单。尝试编写自定义管道，并可能将其贡献给社区。</target>
        </trans-unit>
        <trans-unit id="0b142311de0506d50c14f42d89ab5fba534af5e4" translate="yes" xml:space="preserve">
          <source>Explore the options and combinations on your own.</source>
          <target state="translated">自己探索选择和组合。</target>
        </trans-unit>
        <trans-unit id="e2f8ba18099b12842f93d8420df1de465b8b78d8" translate="yes" xml:space="preserve">
          <source>Exponential backoff</source>
          <target state="translated">指数后退</target>
        </trans-unit>
        <trans-unit id="4e81c81e62d9821e35d6968289a5da62123f95a5" translate="yes" xml:space="preserve">
          <source>Exponential backoff is a technique in which you retry an API after failure, making the time in between retries longer after each consecutive failure, with a maximum number of retries after which the request is considered to have failed. This can be quite complex to implement with promises and other methods of tracking AJAX calls. With observables, it is very easy:</source>
          <target state="translated">指数回退是一种在失败后重试API的技术,在每次连续失败后,使重试之间的时间变长,有最大的重试次数,之后就认为请求失败。如果使用承诺和其他跟踪AJAX调用的方法,这可能是相当复杂的实现。有了observables,这就非常容易了。</target>
        </trans-unit>
        <trans-unit id="b2d600564a4eeee05a74ffc3d3b30646d2efbd86" translate="yes" xml:space="preserve">
          <source>Export &lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;declarable&lt;/a&gt; classes that components in &lt;em&gt;other&lt;/em&gt; NgModules are able to reference in their templates. These are your &lt;em&gt;public&lt;/em&gt; classes. If you don't export a declarable class, it stays &lt;em&gt;private&lt;/em&gt;, visible only to other components declared in this NgModule.</source>
          <target state="translated">出口&lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;申报的&lt;/a&gt;类别，在组件&lt;em&gt;等&lt;/em&gt; NgModules能够在他们的模板来引用。这些是您的&lt;em&gt;公开&lt;/em&gt;课。如果不导出可声明的类，则该类将保持&lt;em&gt;私有状态&lt;/em&gt;，仅对该NgModule中声明的其他组件可见。</target>
        </trans-unit>
        <trans-unit id="d3f8b89ece198f478a08332010ebd982d8d15de3" translate="yes" xml:space="preserve">
          <source>Export it from the file where you wrote it.</source>
          <target state="translated">从你写的文件中导出它。</target>
        </trans-unit>
        <trans-unit id="01d9a0ac1caef5b7463f6a6cc45c04c774154790" translate="yes" xml:space="preserve">
          <source>Exported declarations are the module's &lt;em&gt;public API&lt;/em&gt;. A component in another module can &lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;use&lt;/a&gt;&lt;em&gt;this&lt;/em&gt; module's &lt;code&gt;UserComponent&lt;/code&gt; if it imports this module and this module exports &lt;code&gt;UserComponent&lt;/code&gt;.</source>
          <target state="translated">导出的声明是模块的&lt;em&gt;公共API&lt;/em&gt;。在另一个模块中的组件可以&lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;使用&lt;/a&gt;&lt;em&gt;此&lt;/em&gt;模块的 &lt;code&gt;UserComponent&lt;/code&gt; 如果进口该模块和该模块的出口 &lt;code&gt;UserComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e16537914a0163e01ecd7e0945bc56c50eb3849" translate="yes" xml:space="preserve">
          <source>Exports</source>
          <target state="translated">Exports</target>
        </trans-unit>
        <trans-unit id="9e7c4c507448f86f52a7f79a35434aa602954321" translate="yes" xml:space="preserve">
          <source>Exports &lt;code&gt;&lt;a href=&quot;../browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; with additional &lt;a href=&quot;../../../guide/glossary#provider&quot;&gt;dependency-injection providers&lt;/a&gt; for use with animations. See &lt;a href=&quot;../../../guide/animations&quot;&gt;Animations&lt;/a&gt;.</source>
          <target state="translated">导出带有附加&lt;a href=&quot;../../../guide/glossary#provider&quot;&gt;依赖项注入提供程序的&lt;/a&gt; &lt;code&gt;&lt;a href=&quot;../browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 以与动画一起使用。请参阅&lt;a href=&quot;../../../guide/animations&quot;&gt;动画&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b48d98d31db3b67ff452be710bcaa0679dddb978" translate="yes" xml:space="preserve">
          <source>Exports &lt;code&gt;&lt;a href=&quot;browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; with additional &lt;a href=&quot;../../guide/glossary#provider&quot;&gt;dependency-injection providers&lt;/a&gt; for use with animations. See &lt;a href=&quot;../../guide/animations&quot;&gt;Animations&lt;/a&gt;.</source>
          <target state="translated">导出带有附加&lt;a href=&quot;../../guide/glossary#provider&quot;&gt;依赖项注入提供程序的&lt;/a&gt; &lt;code&gt;&lt;a href=&quot;browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 以与动画一起使用。请参阅&lt;a href=&quot;../../guide/animations&quot;&gt;动画&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41502da065d88fa29c02515549f2ef881718d2ef" translate="yes" xml:space="preserve">
          <source>Exports a constant named &lt;code&gt;slideInAnimation&lt;/code&gt; set to an animation trigger named &lt;em&gt;&lt;code&gt;routeAnimation&lt;/code&gt;&lt;/em&gt;;</source>
          <target state="translated">出口命名常量 &lt;code&gt;slideInAnimation&lt;/code&gt; 一套名为动画触发&lt;em&gt; &lt;code&gt;routeAnimation&lt;/code&gt; &lt;/em&gt; ;</target>
        </trans-unit>
        <trans-unit id="b3015612e62943ffe8d3d9bd16015f003caf27a4" translate="yes" xml:space="preserve">
          <source>Exports all the basic Angular directives and pipes, such as &lt;code&gt;&lt;a href=&quot;common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;common/decimalpipe&quot;&gt;DecimalPipe&lt;/a&gt;&lt;/code&gt;, and so on. Re-exported by &lt;code&gt;&lt;a href=&quot;platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, which is included automatically in the root &lt;code&gt;AppModule&lt;/code&gt; when you create a new app with the CLI &lt;code&gt;new&lt;/code&gt; command.</source>
          <target state="translated">导出所有基本的Angular指令和管道，例如 &lt;code&gt;&lt;a href=&quot;common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;common/decimalpipe&quot;&gt;DecimalPipe&lt;/a&gt;&lt;/code&gt; 等。由 &lt;code&gt;&lt;a href=&quot;platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 重新导出，当您使用CLI &lt;code&gt;new&lt;/code&gt; 命令创建新应用时，它会自动包含在根 &lt;code&gt;AppModule&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="2694c141ab9c7bb5e48066c90e9cad70c5d09313" translate="yes" xml:space="preserve">
          <source>Exports all the basic Angular directives and pipes, such as &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;decimalpipe&quot;&gt;DecimalPipe&lt;/a&gt;&lt;/code&gt;, and so on. Re-exported by &lt;code&gt;&lt;a href=&quot;../platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, which is included automatically in the root &lt;code&gt;AppModule&lt;/code&gt; when you create a new app with the CLI &lt;code&gt;new&lt;/code&gt; command.</source>
          <target state="translated">导出所有基本的Angular指令和管道，例如 &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;decimalpipe&quot;&gt;DecimalPipe&lt;/a&gt;&lt;/code&gt; 等。由 &lt;code&gt;&lt;a href=&quot;../platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 重新导出，当您使用CLI &lt;code&gt;new&lt;/code&gt; 命令创建新应用时，它会自动包含在根 &lt;code&gt;AppModule&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="6795e3188c42a45041eef8aa7e1f578ba6e66b5a" translate="yes" xml:space="preserve">
          <source>Exports required infrastructure for all Angular apps. Included by default in all Angular apps created with the CLI &lt;code&gt;new&lt;/code&gt; command. Re-exports &lt;code&gt;&lt;a href=&quot;../common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../core/applicationmodule&quot;&gt;ApplicationModule&lt;/a&gt;&lt;/code&gt;, making their exports and providers available to all apps.</source>
          <target state="translated">导出所有Angular应用程序所需的基础架构。默认情况下，包含在使用CLI &lt;code&gt;new&lt;/code&gt; 命令创建的所有Angular应用程序中。重新导出 &lt;code&gt;&lt;a href=&quot;../common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../core/applicationmodule&quot;&gt;ApplicationModule&lt;/a&gt;&lt;/code&gt; ，使其导出和提供程序可用于所有应用程序。</target>
        </trans-unit>
        <trans-unit id="1658cf2c7cfb18562b2e6455248a43094677b401" translate="yes" xml:space="preserve">
          <source>Exports required infrastructure for all Angular apps. Included by default in all Angular apps created with the CLI &lt;code&gt;new&lt;/code&gt; command. Re-exports &lt;code&gt;&lt;a href=&quot;common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;core/applicationmodule&quot;&gt;ApplicationModule&lt;/a&gt;&lt;/code&gt;, making their exports and providers available to all apps.</source>
          <target state="translated">导出所有Angular应用程序所需的基础架构。默认情况下，包含在使用CLI &lt;code&gt;new&lt;/code&gt; 命令创建的所有Angular应用程序中。重新导出 &lt;code&gt;&lt;a href=&quot;common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;core/applicationmodule&quot;&gt;ApplicationModule&lt;/a&gt;&lt;/code&gt; ，使其导出和提供程序可用于所有应用程序。</target>
        </trans-unit>
        <trans-unit id="f2ba8fed8d15900671cce4edf095bd055d04eaf8" translate="yes" xml:space="preserve">
          <source>Exports the required infrastructure and directives for reactive forms, making them available for import by NgModules that import this module.</source>
          <target state="translated">导出反应式表单所需的基础架构和指令,使其可以被导入该模块的NgModules导入。</target>
        </trans-unit>
        <trans-unit id="cf940b173d6f27a08c3413c736e512605c260d5a" translate="yes" xml:space="preserve">
          <source>Exports the required providers and directives for template-driven forms, making them available for import by NgModules that import this module.</source>
          <target state="translated">导出模板驱动的表单所需的提供者和指令,让导入该模块的NgModules可以导入它们。</target>
        </trans-unit>
        <trans-unit id="4a41b115841e5fbc7cf1b18afb3b83dcc3891f13" translate="yes" xml:space="preserve">
          <source>Expression binding</source>
          <target state="translated">表达式结合</target>
        </trans-unit>
        <trans-unit id="1c2f7d3b6d050a5090df922638bfad2dec21b4cc" translate="yes" xml:space="preserve">
          <source>Expression context</source>
          <target state="translated">表达式上下文</target>
        </trans-unit>
        <trans-unit id="251f6bb4517daac85b87bb0755a86fb3c179c9de" translate="yes" xml:space="preserve">
          <source>Expression form not supported</source>
          <target state="translated">不支持表达形式</target>
        </trans-unit>
        <trans-unit id="7ea5c0a470ed5a320359df1794918f299c3b7f04" translate="yes" xml:space="preserve">
          <source>Expression guidelines</source>
          <target state="translated">表达准则</target>
        </trans-unit>
        <trans-unit id="5be453a082738df0fbb95e05d3e768fb61344326" translate="yes" xml:space="preserve">
          <source>Expression syntax limitations</source>
          <target state="translated">表达式语法限制</target>
        </trans-unit>
        <trans-unit id="7b223b9fc21308f80b1f8910f97dd7bff5c30ac0" translate="yes" xml:space="preserve">
          <source>Expression: &lt;code&gt;&amp;lt;comp [name]=&quot;username&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">表达式： &lt;code&gt;&amp;lt;comp [name]=&quot;username&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67424e47eeb543e15096b4627ceaf8f617ded945" translate="yes" xml:space="preserve">
          <source>Expressions should finish quickly or the user experience may drag, especially on slower devices. Consider caching values when their computation is expensive.</source>
          <target state="translated">表达式应该快速完成,否则用户体验可能会拖沓,尤其是在较慢的设备上。当值的计算很昂贵时,可以考虑缓存值。</target>
        </trans-unit>
        <trans-unit id="4e67701453b98c6aa13406f479207d8dbab6eeea" translate="yes" xml:space="preserve">
          <source>Extend the &lt;code&gt;AuthGuard&lt;/code&gt; to protect when navigating between the &lt;code&gt;admin&lt;/code&gt; routes. Open &lt;code&gt;auth.guard.ts&lt;/code&gt; and add the &lt;code&gt;&lt;a href=&quot;../api/router/canactivatechild&quot;&gt;CanActivateChild&lt;/a&gt;&lt;/code&gt; interface to the imported tokens from the router package.</source>
          <target state="translated">扩展 &lt;code&gt;AuthGuard&lt;/code&gt; 以在 &lt;code&gt;admin&lt;/code&gt; 路由之间导航时进行保护。打开 &lt;code&gt;auth.guard.ts&lt;/code&gt; 并将 &lt;code&gt;&lt;a href=&quot;../api/router/canactivatechild&quot;&gt;CanActivateChild&lt;/a&gt;&lt;/code&gt; 接口添加到从路由器软件包中导入的令牌中。</target>
        </trans-unit>
        <trans-unit id="78dcf13062dfaf21c3fb6554eca5eab8f3b3813c" translate="yes" xml:space="preserve">
          <source>Extend this base class to implement custom rendering. By default, Angular renders a template into DOM. You can use custom rendering to intercept rendering calls, or to render to something other than DOM.</source>
          <target state="translated">扩展这个基类来实现自定义渲染。默认情况下,Angular会将模板渲染到DOM中。你可以使用自定义渲染来拦截渲染调用,或者渲染到DOM以外的地方。</target>
        </trans-unit>
        <trans-unit id="dc92ca4b94985f880635d936b5ae59b3e5edc4c2" translate="yes" xml:space="preserve">
          <source>Extended interactions between a data service and the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; can be complex and difficult to mock with spies.</source>
          <target state="translated">数据服务和 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 之间的扩展交互可能很复杂，很难用间谍程序模拟。</target>
        </trans-unit>
        <trans-unit id="8b211f855a434be61c61a4c8dba34349d28c811e" translate="yes" xml:space="preserve">
          <source>Extends &lt;a href=&quot;https://rxjs.dev/api/index/class/Subject&quot;&gt;RxJS &lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; for Angular by adding the &lt;code&gt;&lt;a href=&quot;eventemitter#emit&quot;&gt;emit()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">通过添加&lt;a href=&quot;https://rxjs.dev/api/index/class/Subject&quot;&gt;generate &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&lt;a href=&quot;eventemitter#emit&quot;&gt;emit()&lt;/a&gt;&lt;/code&gt; 方法来扩展Angular的RxJS 主题。</target>
        </trans-unit>
        <trans-unit id="dfc0709b546a7a92e728bffa766a855dff062384" translate="yes" xml:space="preserve">
          <source>Extensibility through NgModule imports is a primary goal of the NgModule system. Merging NgModule providers into the application injector makes it easy for a module library to enrich the entire application with new services. By adding the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; once, every application component can make HTTP requests.</source>
          <target state="translated">通过NgModule导入实现可扩展性是NgModule系统的主要目标。将NgModule提供程序合并到应用程序注入程序中，模块库就可以轻松地通过新服务丰富整个应用程序。通过一次添加 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; ，每个应用程序组件都可以发出HTTP请求。</target>
        </trans-unit>
        <trans-unit id="941a3f639b19a9b73ed93ee36698dac421a92539" translate="yes" xml:space="preserve">
          <source>External and global style files</source>
          <target state="translated">外部和全局风格文件</target>
        </trans-unit>
        <trans-unit id="c2dba996d324b0c203c96719673d909e6e8ef0d1" translate="yes" xml:space="preserve">
          <source>ExtraOptions</source>
          <target state="translated">ExtraOptions</target>
        </trans-unit>
        <trans-unit id="f4c7ceadda503dc9b045dfbe183ee849d4cde2dd" translate="yes" xml:space="preserve">
          <source>Extract all licenses in a separate file.</source>
          <target state="translated">将所有许可证提取到一个单独的文件中。</target>
        </trans-unit>
        <trans-unit id="2d497a65ab08388cae16fc3633cb443f795a662b" translate="yes" xml:space="preserve">
          <source>Extract css from global styles into css files instead of js ones.</source>
          <target state="translated">从全局样式中提取css到css文件,而不是js文件。</target>
        </trans-unit>
        <trans-unit id="edcdeca05b2685d5d99bdabc04cc42c9b1caa148" translate="yes" xml:space="preserve">
          <source>Extract templates and styles to their own files</source>
          <target state="translated">将模板和样式提取到自己的文件中</target>
        </trans-unit>
        <trans-unit id="fbf4a03e0810426f0735a9f354fd8e8fa7711591" translate="yes" xml:space="preserve">
          <source>Extract the &lt;code&gt;id&lt;/code&gt; from the route</source>
          <target state="translated">从路线中提取 &lt;code&gt;id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="264fdaa93431a7bc1ddb2c5f37762583f253762b" translate="yes" xml:space="preserve">
          <source>Extract the &lt;code&gt;id&lt;/code&gt; route parameter</source>
          <target state="translated">提取 &lt;code&gt;id&lt;/code&gt; 路由参数</target>
        </trans-unit>
        <trans-unit id="71b1b86ebc85d12dee5fceed6512d0a9de6c0462" translate="yes" xml:space="preserve">
          <source>Extracting localizable text into a file that you can send out to be translated.</source>
          <target state="translated">将可本地化的文本提取到一个文件中,你可以发送出去进行翻译。</target>
        </trans-unit>
        <trans-unit id="07271f756965cd3fc145c36cc34b953de23f0be0" translate="yes" xml:space="preserve">
          <source>Extracts i18n messages from source code.</source>
          <target state="translated">从源码中提取i18n信息。</target>
        </trans-unit>
        <trans-unit id="27865d88125d0d3c86f80a0d8ec5973e323d2f1a" translate="yes" xml:space="preserve">
          <source>Extracts the part of the URL that should be handled by the router. The rest of the URL will remain untouched.</source>
          <target state="translated">提取URL中应该由路由器处理的部分。URL的其余部分将保持不变。</target>
        </trans-unit>
        <trans-unit id="9fb4f1d17ef878fbfbe96076658397ad86bd5264" translate="yes" xml:space="preserve">
          <source>FILES</source>
          <target state="translated">FILES</target>
        </trans-unit>
        <trans-unit id="5ec4d531411beddc087228583dbee8c24ec275c5" translate="yes" xml:space="preserve">
          <source>Facilitate web crawlers (SEO)</source>
          <target state="translated">方便网络爬虫(SEO)。</target>
        </trans-unit>
        <trans-unit id="0cff306d02212a5fb8b4278c3cb5a0c5adaa8578" translate="yes" xml:space="preserve">
          <source>Facilitate web crawlers through &lt;a href=&quot;https://static.googleusercontent.com/media/www.google.com/en//webmasters/docs/search-engine-optimization-starter-guide.pdf&quot;&gt;search engine optimization (SEO)&lt;/a&gt;</source>
          <target state="translated">通过&lt;a href=&quot;https://static.googleusercontent.com/media/www.google.com/en//webmasters/docs/search-engine-optimization-starter-guide.pdf&quot;&gt;搜索引擎优化（SEO）&lt;/a&gt;促进网络爬虫</target>
        </trans-unit>
        <trans-unit id="22360fe45691380a6abe3870500a10494004451a" translate="yes" xml:space="preserve">
          <source>Factory function which can return an instance of an object represented by a key.</source>
          <target state="translated">工厂函数,可以返回一个由键代表的对象的实例。</target>
        </trans-unit>
        <trans-unit id="9db5e3ce04fe9341654a228ff462554c1799f4b0" translate="yes" xml:space="preserve">
          <source>Factory functions must be exported, named functions. The AOT compiler does not support lambda expressions (&quot;arrow functions&quot;) for factory functions.</source>
          <target state="translated">工厂函数必须导出,命名为函数。AOT编译器不支持工厂函数的lambda表达式(&quot;箭头函数&quot;)。</target>
        </trans-unit>
        <trans-unit id="9c3623fa8d663dbe5f5fc0902ec6339381d8c3a8" translate="yes" xml:space="preserve">
          <source>Factory method that returns an instance of the $locationShim</source>
          <target state="translated">返回$locationShim实例的工厂方法。</target>
        </trans-unit>
        <trans-unit id="3881c8ff14ca5b27a9e6003fc51568bda04676ec" translate="yes" xml:space="preserve">
          <source>Factory providers</source>
          <target state="translated">工厂供应商</target>
        </trans-unit>
        <trans-unit id="bd15eb5e476a7673ffd19497be46407f1482aeca" translate="yes" xml:space="preserve">
          <source>Factory providers: &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">工厂提供者： &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d28d31751c9ae2080733690359256390a562cf2d" translate="yes" xml:space="preserve">
          <source>Factory used to create new strategies for each NgElement instance.</source>
          <target state="translated">用于为每个NgElement实例创建新策略的工厂。</target>
        </trans-unit>
        <trans-unit id="57ed3e29bc0b10573d967d11e5e31aca1f76bac8" translate="yes" xml:space="preserve">
          <source>FactoryProvider</source>
          <target state="translated">FactoryProvider</target>
        </trans-unit>
        <trans-unit id="704269b7abb2943ffc9b1a4c538f6a50b5f6a9e3" translate="yes" xml:space="preserve">
          <source>FactorySansProvider</source>
          <target state="translated">FactorySansProvider</target>
        </trans-unit>
        <trans-unit id="140f278d5afda10341fae9ebc6cec13da6d7d5de" translate="yes" xml:space="preserve">
          <source>Fail-safe</source>
          <target state="translated">Fail-safe</target>
        </trans-unit>
        <trans-unit id="c771b9357d9ed785767364181303bab73d06c8a7" translate="yes" xml:space="preserve">
          <source>Failed requests can be retried easily.</source>
          <target state="translated">失败的请求可以轻松重试。</target>
        </trans-unit>
        <trans-unit id="60e796c101570c158dc15bfc77cbfa969a98202a" translate="yes" xml:space="preserve">
          <source>Fallback configuration examples</source>
          <target state="translated">回调配置示例</target>
        </trans-unit>
        <trans-unit id="8db6a2f1d3b7e19e518ffa8979d7ad15359af460" translate="yes" xml:space="preserve">
          <source>Fast</source>
          <target state="translated">Fast</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="d15ce705a0760aa0d74e8b742b908052209ab42b" translate="yes" xml:space="preserve">
          <source>Feature (for routing)</source>
          <target state="translated">特征(用于路由)</target>
        </trans-unit>
        <trans-unit id="e0e655b7b96f5679636a195d016f1315d474dbc2" translate="yes" xml:space="preserve">
          <source>Feature Module</source>
          <target state="translated">功能模块</target>
        </trans-unit>
        <trans-unit id="ae73d39983f27537395a45d0ca6a07cf131b0a2f" translate="yes" xml:space="preserve">
          <source>Feature Modules</source>
          <target state="translated">功能模块</target>
        </trans-unit>
        <trans-unit id="bb5acf03a7329b562675669cb070d3d9ad06b7fd" translate="yes" xml:space="preserve">
          <source>Feature area routes rarely (if ever) cross with routes of other features.</source>
          <target state="translated">特征区路线很少(如果有的话)与其他特征的路线交叉。</target>
        </trans-unit>
        <trans-unit id="02f821fca6279d01d9f480f97f0900a9651fa152" translate="yes" xml:space="preserve">
          <source>Feature modules</source>
          <target state="translated">功能模块</target>
        </trans-unit>
        <trans-unit id="a38902e95440d30cb0d4dfb2fcfecf803cecd865" translate="yes" xml:space="preserve">
          <source>Feature modules are NgModules for the purpose of organizing code.</source>
          <target state="translated">功能模块是NgModules,目的是为了组织代码。</target>
        </trans-unit>
        <trans-unit id="c8e5aeaa7dd1fd777c6a3b8e55cdf8ce15e9ca39" translate="yes" xml:space="preserve">
          <source>Feature modules are modules you create around specific application business domains, user workflows, and utility collections. They support your app by containing a particular feature, such as routes, services, widgets, etc. To conceptualize what a feature module might be in your app, consider that if you would put the files related to a certain functionality, like a search, in one folder, that the contents of that folder would be a feature module that you might call your &lt;code&gt;SearchModule&lt;/code&gt;. It would contain all of the components, routing, and templates that would make up the search functionality.</source>
          <target state="translated">功能模块是您围绕特定的应用程序业务域，用户工作流和实用程序集合创建的模块。它们通过包含特定功能（例如路线，服务，小部件等）来支持您的应用。为概念化应用中可能包含的功能模块，请考虑是否要将与某些功能（如搜索）相关的文件放入其中，在一个文件夹中，该文件夹的内容将是一个功能模块，您可以将其称为 &lt;code&gt;SearchModule&lt;/code&gt; 。它包含构成搜索功能的所有组件，路由和模板。</target>
        </trans-unit>
        <trans-unit id="2d370eb3e0cb88f60b0ad36c32be6367b1bc12b1" translate="yes" xml:space="preserve">
          <source>Feature modules vs. root modules</source>
          <target state="translated">功能模块与根模块</target>
        </trans-unit>
        <trans-unit id="30d433e3dc5c7d9c3c2476cf88fcc2993919b275" translate="yes" xml:space="preserve">
          <source>Feature, AppModule</source>
          <target state="translated">功能,AppModule</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="7386694791e5d866f123cf883931b4babba599e3" translate="yes" xml:space="preserve">
          <source>Features and APIs that were deprecated in v6 or earlier are candidates for removal in version 9 or any later major version. For information about Angular's deprecation and removal practices, see &lt;a href=&quot;releases#deprecation-practices&quot;&gt;Angular Release Practices&lt;/a&gt;.</source>
          <target state="translated">在v6或更早版本中不推荐使用的功能和API是在版本9或任何更高版本的主要版本中删除的候选项。有关Angular弃用和删除实践的信息，请参阅&lt;a href=&quot;releases#deprecation-practices&quot;&gt;Angular发布实践&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">Feedback</target>
        </trans-unit>
        <trans-unit id="09051c1f9086308637f6293f73473c42514dca6c" translate="yes" xml:space="preserve">
          <source>Feel free to unsubscribe anyway. It is harmless and never a bad practice.</source>
          <target state="translated">反正随时可以退订。这是无伤大雅的,绝不是什么坏做法。</target>
        </trans-unit>
        <trans-unit id="d7b8f7b8afaa214c58f7a34291b2fd711807ee31" translate="yes" xml:space="preserve">
          <source>Fetch data before navigating</source>
          <target state="translated">在导航前获取数据</target>
        </trans-unit>
        <trans-unit id="c326a4660b674d2f6ea82687a1e1abae2337541f" translate="yes" xml:space="preserve">
          <source>Field</source>
          <target state="translated">Field</target>
        </trans-unit>
        <trans-unit id="d2a01ccdcf7f8842874a563f805737c9e9eccfb1" translate="yes" xml:space="preserve">
          <source>Field type</source>
          <target state="translated">字段类型</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="2aabcfc2668a910cfcd432d597ea7e5c171cf855" translate="yes" xml:space="preserve">
          <source>File Name</source>
          <target state="translated">文件名</target>
        </trans-unit>
        <trans-unit id="6e75764f6be72d64faaa7cd05889744083a1ffec" translate="yes" xml:space="preserve">
          <source>File Names</source>
          <target state="translated">文件名</target>
        </trans-unit>
        <trans-unit id="2d334eb4e2ffc4a7b13f835350407bcaeabdf12f" translate="yes" xml:space="preserve">
          <source>File structure conventions</source>
          <target state="translated">文件结构惯例</target>
        </trans-unit>
        <trans-unit id="d8e22f8227ce02443a1edaaa12b696d7cbf01c92" translate="yes" xml:space="preserve">
          <source>File templates and snippets</source>
          <target state="translated">文件模板和片段</target>
        </trans-unit>
        <trans-unit id="063edefb4c2d1701a0ed78694d38ac8c815553ef" translate="yes" xml:space="preserve">
          <source>Files at the top level of &lt;code&gt;src/&lt;/code&gt; support testing and running your application. Subfolders contain the application source and application-specific configuration.</source>
          <target state="translated">&lt;code&gt;src/&lt;/code&gt; 顶级文件支持测试和运行您的应用程序。子文件夹包含应用程序源和特定于应用程序的配置。</target>
        </trans-unit>
        <trans-unit id="2581c717d3705e36d5ae42648104d74ef10e9967" translate="yes" xml:space="preserve">
          <source>Files in that folder, such as &lt;code&gt;src/style-paths/_variables.scss&lt;/code&gt;, can be imported from anywhere in your project without the need for a relative path:</source>
          <target state="translated">该文件夹中的文件，例如 &lt;code&gt;src/style-paths/_variables.scss&lt;/code&gt; ，可以从项目中的任何位置导入，而无需相对路径：</target>
        </trans-unit>
        <trans-unit id="6230bbabc49370876e25014799db0c6c42172a85" translate="yes" xml:space="preserve">
          <source>Files inside &lt;code&gt;src/&lt;/code&gt; &quot;belong&quot; to your app. Add new Typescript, HTML and CSS files inside the &lt;code&gt;src/&lt;/code&gt; directory, most of them inside &lt;code&gt;src/app&lt;/code&gt;, unless told to do otherwise.</source>
          <target state="translated">&lt;code&gt;src/&lt;/code&gt; 文件&amp;ldquo;属于&amp;rdquo;您的应用程序。除非另有说明，否则在 &lt;code&gt;src/&lt;/code&gt; 目录中添加新的Typescript，HTML和CSS文件，其中大多数都在 &lt;code&gt;src/app&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="93b86013967961de693f58926e9367d098d2436a" translate="yes" xml:space="preserve">
          <source>Files outside &lt;code&gt;src/&lt;/code&gt; concern building, deploying, and testing your app. They include configuration files and external dependencies.</source>
          <target state="translated">&lt;code&gt;src/&lt;/code&gt; 之外的文件涉及构建，部署和测试您的应用程序。它们包括配置文件和外部依赖项。</target>
        </trans-unit>
        <trans-unit id="8e7b503470f31aa4ba3e1eb4f0c06d4336be101d" translate="yes" xml:space="preserve">
          <source>Files to exclude from linting.</source>
          <target state="translated">要从绒毛中排除的文件。</target>
        </trans-unit>
        <trans-unit id="eb8f826c74af1c4e8b030a3ffa7a58e9214f5b1a" translate="yes" xml:space="preserve">
          <source>Files to include in linting.</source>
          <target state="translated">纳入绒毛的文件。</target>
        </trans-unit>
        <trans-unit id="cd9a5554356141790a82e86864449b480ac00a5e" translate="yes" xml:space="preserve">
          <source>Filipino</source>
          <target state="translated">Filipino</target>
        </trans-unit>
        <trans-unit id="e8f5b7dc089747a4157273eab897b73c8e3f284f" translate="yes" xml:space="preserve">
          <source>Filter animation example</source>
          <target state="translated">过滤器动画示例</target>
        </trans-unit>
        <trans-unit id="9075edca21736af901d2add18e4d9491f2452b4d" translate="yes" xml:space="preserve">
          <source>Filtering</source>
          <target state="translated">Filtering</target>
        </trans-unit>
        <trans-unit id="9b0ee140852ac450ad6053b54418dea6211f531b" translate="yes" xml:space="preserve">
          <source>Filtering and especially sorting are expensive operations. The user experience can degrade severely for even moderate-sized lists when Angular calls these pipe methods many times per second. &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;orderBy&lt;/code&gt; have often been abused in AngularJS apps, leading to complaints that Angular itself is slow. That charge is fair in the indirect sense that AngularJS prepared this performance trap by offering &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;orderBy&lt;/code&gt; in the first place.</source>
          <target state="translated">过滤，尤其是分类是昂贵的操作。当Angular每秒多次调用这些管道方法时，即使是中等大小的列表，用户体验也会严重恶化。 &lt;code&gt;filter&lt;/code&gt; 和 &lt;code&gt;orderBy&lt;/code&gt; 通常在AngularJS应用中被滥用，导致人们抱怨Angular本身运行缓慢。AngularJS 首先通过提供 &lt;code&gt;filter&lt;/code&gt; 和 &lt;code&gt;orderBy&lt;/code&gt; 来准备此性能陷阱，这在间接意义上是公平的。</target>
        </trans-unit>
        <trans-unit id="9e87f3431466c092c7183f3e099c67b1fc572eed" translate="yes" xml:space="preserve">
          <source>Filtering request URLs</source>
          <target state="translated">过滤请求URL</target>
        </trans-unit>
        <trans-unit id="9abf0754128b4f71327ecb4a6bd618b08cb61dcb" translate="yes" xml:space="preserve">
          <source>Filtering streams</source>
          <target state="translated">过滤流</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="841d791c3a7198d7e6ba6397710459d775ed9052" translate="yes" xml:space="preserve">
          <source>Filters/pipes</source>
          <target state="translated">Filters/pipes</target>
        </trans-unit>
        <trans-unit id="06779fd25acbc603a9bd6406d87a230939736eea" translate="yes" xml:space="preserve">
          <source>Final ad banner</source>
          <target state="translated">最后的广告横幅</target>
        </trans-unit>
        <trans-unit id="c95c48f17753442181cc82b3983b3c08478efff3" translate="yes" xml:space="preserve">
          <source>Final code review</source>
          <target state="translated">最后守则审查</target>
        </trans-unit>
        <trans-unit id="f46cb47bf9a0adc86c8ac38dba064e1d91fdcb22" translate="yes" xml:space="preserve">
          <source>Final setup and tests</source>
          <target state="translated">最后的设置和测试</target>
        </trans-unit>
        <trans-unit id="ae46b591c407d86033096dfd0bcfee30c0486784" translate="yes" xml:space="preserve">
          <source>Final thoughts</source>
          <target state="translated">最后的想法</target>
        </trans-unit>
        <trans-unit id="4cef14b8b04cb3c50ec7df190ada6f1ad74b814c" translate="yes" xml:space="preserve">
          <source>Finally, bootstrap the &lt;code&gt;AppModule&lt;/code&gt; in &lt;code&gt;app/main.ts&lt;/code&gt;. This file has been configured as the application entrypoint in &lt;code&gt;systemjs.config.js&lt;/code&gt;, so it is already being loaded by the browser.</source>
          <target state="translated">最后，自举 &lt;code&gt;AppModule&lt;/code&gt; 在 &lt;code&gt;app/main.ts&lt;/code&gt; 。该文件已被配置为 &lt;code&gt;systemjs.config.js&lt;/code&gt; 中的应用程序入口点，因此浏览器已经在加载它。</target>
        </trans-unit>
        <trans-unit id="8cefc5f3cabe0ea72b2a2073202c61d828592c62" translate="yes" xml:space="preserve">
          <source>Finally, display an instance of the form in the &lt;code&gt;AppComponent&lt;/code&gt; shell.</source>
          <target state="translated">最后，在 &lt;code&gt;AppComponent&lt;/code&gt; shell中显示表单的实例。</target>
        </trans-unit>
        <trans-unit id="dd499b8ded3996759fb45ad0ef6860245639edf3" translate="yes" xml:space="preserve">
          <source>Finally, from &lt;code&gt;index.html&lt;/code&gt;, remove all references to AngularJS scripts and jQuery. When you're done, this is what it should look like:</source>
          <target state="translated">最后，从 &lt;code&gt;index.html&lt;/code&gt; 删除对AngularJS脚本和jQuery的所有引用。完成后，它应该是这样的：</target>
        </trans-unit>
        <trans-unit id="5a0259c749fca2e9b33bd242db1b258ce408c109" translate="yes" xml:space="preserve">
          <source>Finally, kick off the whole process, by bootstraping your top level Angular &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">最后，通过引导顶级Angular &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 来启动整个过程。</target>
        </trans-unit>
        <trans-unit id="9f5dcff9e3e40c297f9a2469f9d67baa2a5b4842" translate="yes" xml:space="preserve">
          <source>Finally, revisit both of the component tests when you switch to the Angular router. For the details component, provide a mock of Angular &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; object instead of using the AngularJS &lt;code&gt;$routeParams&lt;/code&gt;.</source>
          <target state="translated">最后，当您切换到Angular路由器时，请重新访问两个组件测试。对于详细信息组件，请提供Angular &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 对象的模拟，而不是使用AngularJS &lt;code&gt;$routeParams&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4270c1b28f19e0dc4576a96f91d31a39cbc8c57d" translate="yes" xml:space="preserve">
          <source>Finally, the rule factory must return a rule.</source>
          <target state="translated">最后,规则工厂必须返回一个规则。</target>
        </trans-unit>
        <trans-unit id="d3f3588d5a318073d8770cabe8b8356205db6a84" translate="yes" xml:space="preserve">
          <source>Finally, the server returns the rendered page to the client.</source>
          <target state="translated">最后,服务器将渲染后的页面返回给客户端。</target>
        </trans-unit>
        <trans-unit id="1888b8a1c59ae1c4c42740747f0691eb7a40faaa" translate="yes" xml:space="preserve">
          <source>Finally, update the product list component to receive output from the product alerts component.</source>
          <target state="translated">最后,更新产品列表组件以接收产品警报组件的输出。</target>
        </trans-unit>
        <trans-unit id="d2307f9b99deb8de24da0878bde936ef2a11e271" translate="yes" xml:space="preserve">
          <source>Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.</source>
          <target state="translated">最后,你可以将RouterLinkActive指令应用到RouterLink的祖先。</target>
        </trans-unit>
        <trans-unit id="b3e1d9bc243d1e42b5cab907612678c6d025611d" translate="yes" xml:space="preserve">
          <source>Finally, you can bind to a specific class name. Angular adds the class when the template expression evaluates to truthy. It removes the class when the expression is falsy.</source>
          <target state="translated">最后,你可以绑定到一个特定的类名。当模板表达式评估为truthy时,Angular会添加该类。当表达式为falsy时,它会删除该类。</target>
        </trans-unit>
        <trans-unit id="9f8e28a14842dd8a21fd4417e69d8929246f2eb3" translate="yes" xml:space="preserve">
          <source>Finally, you should add some npm scripts in &lt;code&gt;package.json&lt;/code&gt; to compile the TypeScript files to JavaScript (based on the &lt;code&gt;tsconfig.json&lt;/code&gt; configuration file):</source>
          <target state="translated">最后，您应该在 &lt;code&gt;package.json&lt;/code&gt; 中添加一些npm脚本，以将TypeScript文件编译为JavaScript（基于 &lt;code&gt;tsconfig.json&lt;/code&gt; 配置文件）：</target>
        </trans-unit>
        <trans-unit id="fc68dbba7d47e62aa4d6bec04a624372cc2d728b" translate="yes" xml:space="preserve">
          <source>Find a parent by its class interface</source>
          <target state="translated">通过类的接口找到父类</target>
        </trans-unit>
        <trans-unit id="19572de919c02ddeb5074d287366d16ac151d4e6" translate="yes" xml:space="preserve">
          <source>Find a parent component of known type</source>
          <target state="translated">找到一个已知类型的父组件</target>
        </trans-unit>
        <trans-unit id="a2ea659f3e398cb1397f96d2e04f71ac6ae5eba4" translate="yes" xml:space="preserve">
          <source>Find a parent in a tree with &lt;code&gt;@SkipSelf()&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;@SkipSelf()&lt;/code&gt; 在树中找到父母</target>
        </trans-unit>
        <trans-unit id="6888669f18c56df1d694cf79843c2e4b00c6059a" translate="yes" xml:space="preserve">
          <source>Find out more in the &lt;a href=&quot;../guide/animations&quot;&gt;animations guide&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../guide/animations&quot;&gt;动画指南中&lt;/a&gt;找到更多信息。</target>
        </trans-unit>
        <trans-unit id="e5804ca617365de337f619c9afc81454ab7c97f7" translate="yes" xml:space="preserve">
          <source>Find out more in the &lt;a href=&quot;../guide/forms-overview&quot;&gt;Forms Overview&lt;/a&gt;.</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;../guide/forms-overview&quot;&gt;表单概述&amp;rdquo;中&lt;/a&gt;找到更多信息。</target>
        </trans-unit>
        <trans-unit id="e1f7853d2e5b874c8499b3a8977fbd15328d107c" translate="yes" xml:space="preserve">
          <source>Find providers by name</source>
          <target state="translated">按名称查找供应商</target>
        </trans-unit>
        <trans-unit id="90ac0cee96d91541ca1bd28dfc35a71280d5beec" translate="yes" xml:space="preserve">
          <source>Find testability of a node in the Tree</source>
          <target state="translated">找出树中节点的可测试性。</target>
        </trans-unit>
        <trans-unit id="2ba4f7019a119d1c278150f603171c988560b7cb" translate="yes" xml:space="preserve">
          <source>Find the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/network-performance/reference#throttling&quot;&gt;Network Throttling&lt;/a&gt; dropdown on the far right of the menu bar.</source>
          <target state="translated">在菜单栏的最右侧找到&amp;ldquo; &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/network-performance/reference#throttling&quot;&gt;网络限制&amp;rdquo;&lt;/a&gt;下拉列表。</target>
        </trans-unit>
        <trans-unit id="4e5f4621355c6bff62bda1359ee32eebff1a583e" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; tag for &lt;em&gt;Name&lt;/em&gt; and update it like this:</source>
          <target state="translated">找到&amp;ldquo; &lt;em&gt;名称&amp;rdquo;&lt;/em&gt;的 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 标记，并像这样更新它：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e2bbe5210ef2d786fc3ededbe956159663446c80" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;getHeroes&lt;/code&gt; method and replace it with the following code (shown side-by-side with the previous version for comparison)</source>
          <target state="translated">找到 &lt;code&gt;getHeroes&lt;/code&gt; 方法并将其替换为以下代码（与以前的版本并排显示以进行比较）</target>
        </trans-unit>
        <trans-unit id="910dec36e9d395b1a239c2cce267478bbbb83541" translate="yes" xml:space="preserve">
          <source>Find the header for your page. For example, a guide page that describes an Angular feature is probably a child of the &lt;code&gt;Fundamentals&lt;/code&gt; header.</source>
          <target state="translated">查找页面的标题。例如，描述Angular功能的指南页面可能是 &lt;code&gt;Fundamentals&lt;/code&gt; 标头的子级。</target>
        </trans-unit>
        <trans-unit id="9e66577055c6ddf016c5f26c4b7258884b805c8a" translate="yes" xml:space="preserve">
          <source>Find the way back</source>
          <target state="translated">找到回去的路</target>
        </trans-unit>
        <trans-unit id="0d7801dbbf5469288357290bb162caf0067841ca" translate="yes" xml:space="preserve">
          <source>Find this example in &lt;span name=&quot;dependency-injection-in-action&quot;&gt;live code&lt;/span&gt; and confirm that the three &lt;code&gt;HeroBioComponent&lt;/code&gt; instances have their own cached hero data.</source>
          <target state="translated">在&lt;span name=&quot;dependency-injection-in-action&quot;&gt;实时代码中&lt;/span&gt;找到此示例，并确认三个 &lt;code&gt;HeroBioComponent&lt;/code&gt; 实例具有自己的缓存英雄数据。</target>
        </trans-unit>
        <trans-unit id="f36f5acbf34ac69639274bcce5d1e810ae127fca" translate="yes" xml:space="preserve">
          <source>Finding the current version of Angular</source>
          <target state="translated">寻找当前版本的Angular</target>
        </trans-unit>
        <trans-unit id="a410edc016bc1e604c19b7f4a7ebcb201ee6cc63" translate="yes" xml:space="preserve">
          <source>Finds one or more inner elements within the current element that is being animated within a sequence. Use with &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">在序列中正在动画的当前元素中找到一个或多个内部元素。与 &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="577fef4c15c29c2eed55b75361375e09cbaa0af3" translate="yes" xml:space="preserve">
          <source>Finds one or more inner elements within the current element that is being animated within a sequence. Use with &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">在序列中正在动画的当前元素中找到一个或多个内部元素。与 &lt;code&gt;&lt;a href=&quot;animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="353aec05ef3a3f9483fe393d93648f628a744b2e" translate="yes" xml:space="preserve">
          <source>Fine tune control</source>
          <target state="translated">微调控制</target>
        </trans-unit>
        <trans-unit id="5f133c80f125f45ee0dbdf789783d6285b5c326c" translate="yes" xml:space="preserve">
          <source>Firebase hosting</source>
          <target state="translated">Firebase主机</target>
        </trans-unit>
        <trans-unit id="b4ee6522335b033249255b4cc1d572993282aafb" translate="yes" xml:space="preserve">
          <source>Firefox</source>
          <target state="translated">Firefox</target>
        </trans-unit>
        <trans-unit id="968dba49182e0be459fe515125d03648ade8af6c" translate="yes" xml:space="preserve">
          <source>First ensure that the service to be downgraded is provided in an &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; that will be part of the upgrade application. For example, let's assume we have defined &lt;code&gt;HeroesService&lt;/code&gt;</source>
          <target state="translated">首先确保要降级的服务在 &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 中提供中将作为升级应用程序的一部分。例如，假设我们定义了 &lt;code&gt;HeroesService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa13eff7c345cc62b2731261d890c5269c439d82" translate="yes" xml:space="preserve">
          <source>First import the &lt;code&gt;&lt;a href=&quot;../api/platform-browser/animations/browseranimationsmodule&quot;&gt;BrowserAnimationsModule&lt;/a&gt;&lt;/code&gt; and add it to the &lt;code&gt;imports&lt;/code&gt; array:</source>
          <target state="translated">首先导入 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/animations/browseranimationsmodule&quot;&gt;BrowserAnimationsModule&lt;/a&gt;&lt;/code&gt; 并将其添加到 &lt;code&gt;imports&lt;/code&gt; 数组：</target>
        </trans-unit>
        <trans-unit id="55ec6779573313fe242323b78b075f04a155c1c4" translate="yes" xml:space="preserve">
          <source>First string for comparison</source>
          <target state="translated">第一个比较用的字符串</target>
        </trans-unit>
        <trans-unit id="01e119ef3e252a37cc72a2fdfd6760ca6763b655" translate="yes" xml:space="preserve">
          <source>First we must create a directive that will wrap the validator function. We provide it as the validator using the &lt;code&gt;&lt;a href=&quot;../api/forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; token. If you are not sure why, or you do not fully understand the syntax, revisit the previous &lt;a href=&quot;form-validation#adding-to-template-driven-forms&quot;&gt;section&lt;/a&gt;.</source>
          <target state="translated">首先，我们必须创建一个包装验证器函数的指令。我们使用 &lt;code&gt;&lt;a href=&quot;../api/forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 令牌将其提供为验证器。如果不确定为什么，或者不完全了解语法，请重新阅读上一&lt;a href=&quot;form-validation#adding-to-template-driven-forms&quot;&gt;节&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c224c3de52b6310e67cad9019284eef1dbe6d21" translate="yes" xml:space="preserve">
          <source>First we retrieve the child controls by calling the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;'s &lt;a href=&quot;../api/forms/abstractcontrol#get&quot;&gt;get&lt;/a&gt; method. Then we simply compare the values of the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alterEgo&lt;/code&gt; controls.</source>
          <target state="translated">首先，我们通过调用 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 的&lt;a href=&quot;../api/forms/abstractcontrol#get&quot;&gt;get&lt;/a&gt;方法来检索子控件。然后，我们只需比较 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;alterEgo&lt;/code&gt; 控件。</target>
        </trans-unit>
        <trans-unit id="6c9d5cfff1d8258e5ca5251b7474441553db359a" translate="yes" xml:space="preserve">
          <source>First you extend the router import statement to include the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service symbol:</source>
          <target state="translated">首先，您扩展路由器导入语句以包括 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 服务符号：</target>
        </trans-unit>
        <trans-unit id="006f3b6fcf861b0234e3eb24d6b99a89daf9bdae" translate="yes" xml:space="preserve">
          <source>First you surround that fragment in the source file with a named &lt;em&gt;docregion&lt;/em&gt; as described &lt;a href=&quot;docs-style-guide#source-code-markup&quot;&gt;below&lt;/a&gt;. Then you reference that &lt;em&gt;docregion&lt;/em&gt; in the &lt;code&gt;region&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; like this</source>
          <target state="translated">首先，您在源文件中将该片段用一个命名的&lt;em&gt;docregion围绕&lt;/em&gt;，&lt;a href=&quot;docs-style-guide#source-code-markup&quot;&gt;如下所述&lt;/a&gt;。然后，在 &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; 的 &lt;code&gt;region&lt;/code&gt; 属性中引用该&lt;em&gt;docregion&lt;/em&gt;像这样</target>
        </trans-unit>
        <trans-unit id="e38156d4774c97193b83dc70c370d862e8a4f69b" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;AppRoutingModule&lt;/code&gt; imports &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; so the app can have routing functionality. The next import, &lt;code&gt;HeroesComponent&lt;/code&gt;, will give the Router somewhere to go once you configure the routes.</source>
          <target state="translated">首先， &lt;code&gt;AppRoutingModule&lt;/code&gt; 导入 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; ,以便该应用程序可以具有路由功能。下一次导入 &lt;code&gt;HeroesComponent&lt;/code&gt; 配置路由后， HeroesComponent将使Router 处在某个位置。</target>
        </trans-unit>
        <trans-unit id="4fa3397063608fa99c181a29835aaf19ff75226e" translate="yes" xml:space="preserve">
          <source>First, be sure to import &lt;code&gt;&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; in the child component class:</source>
          <target state="translated">首先，请确保导入 &lt;code&gt;&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; 在子组件类中：</target>
        </trans-unit>
        <trans-unit id="56f9dfae7fe63b98aad45e38a0217d3cd8feb04f" translate="yes" xml:space="preserve">
          <source>First, create an &lt;code&gt;AnimalService&lt;/code&gt; with an &lt;code&gt;emoji&lt;/code&gt; property of 🐳 (whale):</source>
          <target state="translated">首先，使用 &lt;code&gt;emoji&lt;/code&gt; 创建 &lt;code&gt;AnimalService&lt;/code&gt; 的🐳（鲸鱼）特性：</target>
        </trans-unit>
        <trans-unit id="c9e7758b50d1db77a7de19f37f3c0dc57b86cfaa" translate="yes" xml:space="preserve">
          <source>First, ensure that &lt;code&gt;src/index.html&lt;/code&gt; is set as the start page. Right-click &lt;code&gt;index.html&lt;/code&gt; in Solution Explorer and select option &lt;code&gt;Set As Start Page&lt;/code&gt;.</source>
          <target state="translated">首先，确保将 &lt;code&gt;src/index.html&lt;/code&gt; 设置为起始页。在解决方案资源管理器中右键单击 &lt;code&gt;index.html&lt;/code&gt; ，然后选择选项 &lt;code&gt;Set As Start Page&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcd358a07ec06cfd9f03f3dce181ba1549395226" translate="yes" xml:space="preserve">
          <source>First, import the schematics definitions you will need. The Schematics framework offers many utility functions to create and use rules when running a schematic.</source>
          <target state="translated">首先,导入您需要的原理图定义。Schematics框架提供了许多实用功能,用于在运行原理图时创建和使用规则。</target>
        </trans-unit>
        <trans-unit id="d87ce0595d0d8921c001ee9447f191878b1ada86" translate="yes" xml:space="preserve">
          <source>First, it sets the &lt;code&gt;currentAdIndex&lt;/code&gt; by taking whatever it currently is plus one, dividing that by the length of the &lt;code&gt;AdItem&lt;/code&gt; array, and using the &lt;em&gt;remainder&lt;/em&gt; as the new &lt;code&gt;currentAdIndex&lt;/code&gt; value. Then, it uses that value to select an &lt;code&gt;adItem&lt;/code&gt; from the array.</source>
          <target state="translated">第一，它设置 &lt;code&gt;currentAdIndex&lt;/code&gt; 通过采取任何它目前是加一，除以由所述的长度 &lt;code&gt;AdItem&lt;/code&gt; 阵列，以及使用该&lt;em&gt;剩余&lt;/em&gt;作为新 &lt;code&gt;currentAdIndex&lt;/code&gt; 值。然后，它使用该值从数组中选择一个 &lt;code&gt;adItem&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14157ae1fec131fa629d1b92aee617e08eeb5f90" translate="yes" xml:space="preserve">
          <source>First, remove the &lt;code&gt;ng-app&lt;/code&gt; attribute from &lt;code&gt;index.html&lt;/code&gt;. Then import &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;AppModule&lt;/code&gt;, and override its &lt;code&gt;ngDoBootstrap&lt;/code&gt; method:</source>
          <target state="translated">首先，从 &lt;code&gt;index.html&lt;/code&gt; 删除 &lt;code&gt;ng-app&lt;/code&gt; 属性。然后在 &lt;code&gt;AppModule&lt;/code&gt; 中导入 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; ，并覆盖其 &lt;code&gt;ngDoBootstrap&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="13ba5cc308cd8a4055d4553f319b826982eac734" translate="yes" xml:space="preserve">
          <source>First, use the child's selector, here &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt;, as a directive within the parent component template. Then, use &lt;a href=&quot;template-syntax#property-binding&quot;&gt;property binding&lt;/a&gt; to bind the property in the child to the property of the parent.</source>
          <target state="translated">首先，使用孩子的选择器（这里 &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; ）作为父组件模板中的指令。然后，使用&lt;a href=&quot;template-syntax#property-binding&quot;&gt;属性绑定&lt;/a&gt;将子级中的到父级中的属性。</target>
        </trans-unit>
        <trans-unit id="9647450b7ff56001720b551df6dcc0a33e9ca5a8" translate="yes" xml:space="preserve">
          <source>First, you have to import references to the &lt;code&gt;&lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt; decorator and the &lt;code&gt;&lt;a href=&quot;../api/core/afterviewinit&quot;&gt;AfterViewInit&lt;/a&gt;&lt;/code&gt; lifecycle hook.</source>
          <target state="translated">首先，您必须导入对 &lt;code&gt;&lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt; 装饰器和 &lt;code&gt;&lt;a href=&quot;../api/core/afterviewinit&quot;&gt;AfterViewInit&lt;/a&gt;&lt;/code&gt; 的引用生命周期挂钩。</target>
        </trans-unit>
        <trans-unit id="025340734ec5d57ee79e8d037ce0de5cd9fffa35" translate="yes" xml:space="preserve">
          <source>First, you'll set up the checkout form model. The form model is the source of truth for the status of the form and is defined in the component class.</source>
          <target state="translated">首先,你要设置结账表单模型。表单模型是表单状态的真实来源,定义在组件类中。</target>
        </trans-unit>
        <trans-unit id="f85d85326853baf05275197db6d10fd7ad94a38d" translate="yes" xml:space="preserve">
          <source>Fixes linting errors (may overwrite linted files).</source>
          <target state="translated">修复掉毛错误(可能会覆盖掉毛的文件)。</target>
        </trans-unit>
        <trans-unit id="845cf578b2efea633be3f3f6070c477978db19d2" translate="yes" xml:space="preserve">
          <source>Fixture for debugging and testing a component.</source>
          <target state="translated">用于调试和测试组件的夹具。</target>
        </trans-unit>
        <trans-unit id="47027d345cd1b888dd24d533746624ba383f61c3" translate="yes" xml:space="preserve">
          <source>Flag to prevent building an app shell.</source>
          <target state="translated">防止构建应用程序外壳的标志。</target>
        </trans-unit>
        <trans-unit id="c38db9c9703b1880f1fb4cc292db33fcfd41bfef" translate="yes" xml:space="preserve">
          <source>Flags for renderer-specific style modifiers.</source>
          <target state="translated">渲染器特定样式修改器的标志。</target>
        </trans-unit>
        <trans-unit id="23f8b52bc03b06820d6fbf3a3116fc3217e1c3d2" translate="yes" xml:space="preserve">
          <source>Flags for style variations to remove, if set. ???</source>
          <target state="translated">样式变化的标志,如果设置的话,要删除。???</target>
        </trans-unit>
        <trans-unit id="7419f582323423b571d0e8104b85663f8483a737" translate="yes" xml:space="preserve">
          <source>Flags for style variations. No flags are set by default.</source>
          <target state="translated">样式变化的标志。默认情况下没有设置任何标志。</target>
        </trans-unit>
        <trans-unit id="79c9e13ab7d502c6c70eca7c038f62d6c49fda0d" translate="yes" xml:space="preserve">
          <source>Flat</source>
          <target state="translated">Flat</target>
        </trans-unit>
        <trans-unit id="aef62e073c9538aa87c8c38c1a8bf61bded98e36" translate="yes" xml:space="preserve">
          <source>Floating images</source>
          <target state="translated">浮动图像</target>
        </trans-unit>
        <trans-unit id="13f80ff3ae7d009b1e01b88f21afe2491230965e" translate="yes" xml:space="preserve">
          <source>Floating within a subsection</source>
          <target state="translated">在一个小节内浮动</target>
        </trans-unit>
        <trans-unit id="3f72320cb9eb3892311c36e1201deb897716e20a" translate="yes" xml:space="preserve">
          <source>Flush any pending microtasks.</source>
          <target state="translated">清空所有待处理的微型任务。</target>
        </trans-unit>
        <trans-unit id="1313760637068e67ab353348deb675e763580ff0" translate="yes" xml:space="preserve">
          <source>FlyingHeroesPipe</source>
          <target state="translated">FlyingHeroesPipe</target>
        </trans-unit>
        <trans-unit id="99407d81116edc10941a2ff4ec9acfbf36986d2a" translate="yes" xml:space="preserve">
          <source>FnArg</source>
          <target state="translated">FnArg</target>
        </trans-unit>
        <trans-unit id="674038e3b673c8e05950f1b1b8076bd2888c3b23" translate="yes" xml:space="preserve">
          <source>Focus on the &lt;code&gt;overrideComponent&lt;/code&gt; method.</source>
          <target state="translated">专注于 &lt;code&gt;overrideComponent&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="be96b0e964115bda6f5295db5f73a0974e889ff3" translate="yes" xml:space="preserve">
          <source>Focus on the binding syntax: &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]=&quot;...&quot;&lt;/code&gt;.</source>
          <target state="translated">关注绑定语法： &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]=&quot;...&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba0c349131fd653362da503d9138988c231e9862" translate="yes" xml:space="preserve">
          <source>Focus on the component's template.</source>
          <target state="translated">关注组件的模板。</target>
        </trans-unit>
        <trans-unit id="f18ba6e3dca6a56b206e311fd8d02d70252a5f8a" translate="yes" xml:space="preserve">
          <source>Focus on the constructor parameters.</source>
          <target state="translated">关注构造函数参数。</target>
        </trans-unit>
        <trans-unit id="99a92a1737d6303412bc431ba1e6ab979fe2f4f1" translate="yes" xml:space="preserve">
          <source>Focus on the following three TypeScript (&lt;code&gt;.ts&lt;/code&gt;) files in the &lt;strong&gt;&lt;code&gt;/src&lt;/code&gt;&lt;/strong&gt; folder.</source>
          <target state="translated">专注于&lt;strong&gt; &lt;code&gt;/src&lt;/code&gt; 中&lt;/strong&gt;的以下三个TypeScript（ &lt;code&gt;.ts&lt;/code&gt; ）文件&lt;strong&gt;&lt;/strong&gt;文件夹中。</target>
        </trans-unit>
        <trans-unit id="a846cc83c7322e6b47e27db868c9dc21caecc84c" translate="yes" xml:space="preserve">
          <source>Focus on the spy.</source>
          <target state="translated">专注于间谍。</target>
        </trans-unit>
        <trans-unit id="f75aee18c2edafe7ea1d576022a1b8458bd9dd44" translate="yes" xml:space="preserve">
          <source>Focus on the template:</source>
          <target state="translated">专注于模板。</target>
        </trans-unit>
        <trans-unit id="8b610be124aa3a40ce1b39d37fc11b0b04c6263e" translate="yes" xml:space="preserve">
          <source>Foldable</source>
          <target state="translated">Foldable</target>
        </trans-unit>
        <trans-unit id="57b7ec24a9b1313c299b9748f089e1707332463e" translate="yes" xml:space="preserve">
          <source>Foldable syntax</source>
          <target state="translated">可折叠式语法</target>
        </trans-unit>
        <trans-unit id="8545108042043a15c515d62cdfb13f4185ac9c95" translate="yes" xml:space="preserve">
          <source>Follow the AngularJS Style Guide</source>
          <target state="translated">遵循AngularJS风格指南</target>
        </trans-unit>
        <trans-unit id="11c7ef116d47d698a7592c21c0ecd9f0b8006417" translate="yes" xml:space="preserve">
          <source>Follow the instructions in &lt;a href=&quot;setup-local&quot;&gt;Local Environment Setup&lt;/a&gt; to create a starter Angular app using the CLI command &lt;a href=&quot;cli/new&quot;&gt;&lt;code&gt;ng new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">按照&lt;a href=&quot;setup-local&quot;&gt;本地环境设置中&lt;/a&gt;的说明使用CLI命令&lt;a href=&quot;cli/new&quot;&gt; &lt;code&gt;ng new&lt;/code&gt; &lt;/a&gt;创建Starter Angular应用。</target>
        </trans-unit>
        <trans-unit id="cbba88aeff252999f7189b7c5791e6b635b7d58f" translate="yes" xml:space="preserve">
          <source>Follow the prompts to select the &lt;code&gt;Firebase&lt;/code&gt; project you are creating for hosting.</source>
          <target state="translated">按照提示选择要创建的 &lt;code&gt;Firebase&lt;/code&gt; 项目以进行托管。</target>
        </trans-unit>
        <trans-unit id="9290916a8ada6d592efd89d4b0ce3854336f1797" translate="yes" xml:space="preserve">
          <source>Follow these steps:</source>
          <target state="translated">遵循这些步骤。</target>
        </trans-unit>
        <trans-unit id="80fc20b87aee155bca3d86ee5c873949fa8a32e0" translate="yes" xml:space="preserve">
          <source>Follow this convention when you write similar modules with configurable service providers.</source>
          <target state="translated">当你用可配置的服务提供者来编写类似的模块时,请遵循这个惯例。</target>
        </trans-unit>
        <trans-unit id="ac5a22ef48584da5d4a3bf95e83238cf1a90ec1c" translate="yes" xml:space="preserve">
          <source>Following is all the code discussed in this page.</source>
          <target state="translated">以下是本页面讨论的所有代码。</target>
        </trans-unit>
        <trans-unit id="528abf3dd48bf1a361c849a3e5d23ed3a8e477b4" translate="yes" xml:space="preserve">
          <source>Following the same pattern as with the &lt;code&gt;FlowerService&lt;/code&gt;, inject the &lt;code&gt;AnimalService&lt;/code&gt; in the &lt;code&gt;AppComponent&lt;/code&gt; class:</source>
          <target state="translated">按照相同的图案与 &lt;code&gt;FlowerService&lt;/code&gt; ，注入 &lt;code&gt;AnimalService&lt;/code&gt; 在 &lt;code&gt;AppComponent&lt;/code&gt; 类：</target>
        </trans-unit>
        <trans-unit id="954d922028bc7e30f824816d4fa2677158b0313f" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;glossary#universal&quot;&gt;Universal&lt;/a&gt;, you can reduce the code rendered in the HTML page by setting styles optimization to &lt;code&gt;true&lt;/code&gt; and styles source maps to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;glossary#universal&quot;&gt;Universal&lt;/a&gt;，您可以通过将样式优化设置为 &lt;code&gt;true&lt;/code&gt; 并将样式源映射设置为 &lt;code&gt;false&lt;/code&gt; 来减少HTML页面中呈现的代码。。</target>
        </trans-unit>
        <trans-unit id="01162b62b308e6eea867c12d8bc4942259834c93" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;en-US&lt;/code&gt;, 'M/d/yy, h:mm a'&lt;code&gt;(Example:&lt;/code&gt;6/15/15, 9:03 AM`)</source>
          <target state="translated">对于 &lt;code&gt;en-US&lt;/code&gt; ，&amp;ldquo; M / d / yy，h：mm a&amp;rdquo; &lt;code&gt;(Example:&lt;/code&gt; 6/15 / 15，9：03 AM）</target>
        </trans-unit>
        <trans-unit id="87cbdf03fb63d9818c63c6f32dd96510ce36f71a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;'EEEE, MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; zzzz'&lt;/code&gt; (Example: &lt;code&gt;&lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, June 15, 2015 at 9:03:01 AM GMT+01:00&lt;/code&gt;)</source>
          <target state="translated">对于 &lt;code&gt;en-US&lt;/code&gt; ， &lt;code&gt;'EEEE, MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; zzzz'&lt;/code&gt; （示例： &lt;code&gt;&lt;a href=&quot;weekday#Monday&quot;&gt;Monday&lt;/a&gt;, June 15, 2015 at 9:03:01 AM GMT+01:00&lt;/code&gt; &lt;a href=&quot;weekday#Monday&quot;&gt;星期一&lt;/a&gt;，格林尼治标准时间+01：00）</target>
        </trans-unit>
        <trans-unit id="8125fcff305766783603f665ed203f09c7127e92" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;'MMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; (Example: &lt;code&gt;Jun 15, 2015, 9:03:01 AM&lt;/code&gt;)</source>
          <target state="translated">对于 &lt;code&gt;en-US&lt;/code&gt; ， &lt;code&gt;'MMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;'&lt;/code&gt; （例如： &lt;code&gt;Jun 15, 2015, 9:03:01 AM&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="bb6b5a9d378e0fa8d1fc57f33040f3883a3465f0" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;'MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; z'&lt;/code&gt; (Example: &lt;code&gt;June 15, 2015 at 9:03:01 AM GMT+1&lt;/code&gt;)</source>
          <target state="translated">对于 &lt;code&gt;en-US&lt;/code&gt; ， &lt;code&gt;'MMMM d, y, h:mm:ss &lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; z'&lt;/code&gt; （例如： &lt;code&gt;June 15, 2015 at 9:03:01 AM GMT+1&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="615c1a0449b23b9b11bdc05ef40763586f9c816e" translate="yes" xml:space="preserve">
          <source>For AOT compilation, include the &lt;code&gt;--aot&lt;/code&gt; option with the &lt;code&gt;ng build&lt;/code&gt; or &lt;code&gt;ng serve&lt;/code&gt; command:</source>
          <target state="translated">对于AOT编译，请在 &lt;code&gt;ng build&lt;/code&gt; 或 &lt;code&gt;ng serve&lt;/code&gt; 命令中包括 &lt;code&gt;--aot&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="366254ac553179e02b799a6f00c72532a5afc495" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;, the values of enabled controls as an array.</source>
          <target state="translated">对于 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; ，启用控件的值作为一个数组。</target>
        </trans-unit>
        <trans-unit id="fed41b2d73d63d1a8ff91591ee7067e07e3bd040" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, the current value.</source>
          <target state="translated">对于 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; ，当前值。</target>
        </trans-unit>
        <trans-unit id="8a4deee0bdf8c15ca3196a32013eae0eedb59494" translate="yes" xml:space="preserve">
          <source>For a complete list of locales supported by Angular, see &lt;a href=&quot;https://github.com/angular/angular/tree/master/packages/common/locales&quot;&gt;the Angular repository&lt;/a&gt;.</source>
          <target state="translated">有关Angular支持的语言环境的完整列表，请参见&lt;a href=&quot;https://github.com/angular/angular/tree/master/packages/common/locales&quot;&gt;Angular存储库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f85eb5b33c42136f7f1e0ea2567c82a8da57cb1" translate="yes" xml:space="preserve">
          <source>For a demonstration of the syntax and code snippets in this section, see the &lt;span name=&quot;binding-syntax&quot;&gt;binding syntax example&lt;/span&gt;.</source>
          <target state="translated">有关本节中语法和代码段的演示，请参见&lt;span name=&quot;binding-syntax&quot;&gt;绑定语法示例&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="0db23d1180e42942344c6da322408ea0d6dccba7" translate="yes" xml:space="preserve">
          <source>For a demonstration of the syntax and code snippets in this section, see the &lt;span name=&quot;template-reference-variables&quot;&gt;template reference variables example&lt;/span&gt;.</source>
          <target state="translated">有关本节中语法和代码段的演示，请参见&lt;span name=&quot;template-reference-variables&quot;&gt;模板参考变量示例&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="b37874a6cbfb3027c0ab76729338e5dbcb431c0b" translate="yes" xml:space="preserve">
          <source>For a demonstration of the syntax and code snippets in this section, see the &lt;span name=&quot;two-way-binding&quot;&gt;two-way binding example&lt;/span&gt;.</source>
          <target state="translated">有关本节中语法和代码段的演示，请参见&lt;span name=&quot;two-way-binding&quot;&gt;双向绑定示例&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="dca82a3371da568933815b1a8dcec9ba11807d39" translate="yes" xml:space="preserve">
          <source>For a disabled &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, the values of all controls as an object with a key-value pair for each member of the group.</source>
          <target state="translated">对于禁用的 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; ，所有控件的值均作为对象，并具有组中每个成员的键值对。</target>
        </trans-unit>
        <trans-unit id="45a561ba7c1c51805ef39bb6a87cdaafee124e29" translate="yes" xml:space="preserve">
          <source>For a list of DOM events, see: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/Events&lt;/a&gt;.</source>
          <target state="translated">有关DOM事件的列表，请参见：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;https&lt;/a&gt; : //developer.mozilla.org/en-US/docs/Web/Events。</target>
        </trans-unit>
        <trans-unit id="2dd5f6af9f382ca67ac129bad7cd5aa1a0565560" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion of the differences and their implications, see &lt;a href=&quot;../../../guide/upgrade-performance&quot;&gt;Upgrading for Performance&lt;/a&gt;.</source>
          <target state="translated">有关差异及其影响的详细讨论，请参见&lt;a href=&quot;../../../guide/upgrade-performance&quot;&gt;性能升级&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc66a61178ac7b88b12368f21d5b48b2c671f9ef" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion of these concepts, see &lt;a href=&quot;architecture-components&quot;&gt;Introduction to components&lt;/a&gt;.</source>
          <target state="translated">有关这些概念的详细讨论，请参阅&lt;a href=&quot;architecture-components&quot;&gt;组件简介&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c337b01d15862c6742dfaef9e2e117a14e2fd2dd" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion, see &lt;a href=&quot;architecture-modules&quot;&gt;Introduction to modules&lt;/a&gt;.</source>
          <target state="translated">有关更详细的讨论，请参阅&lt;a href=&quot;architecture-modules&quot;&gt;模块简介&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="586ff2e84338f7def76edce5c6f12aee801fda77" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion, see &lt;a href=&quot;architecture-services&quot;&gt;Introduction to services and DI&lt;/a&gt;.</source>
          <target state="translated">有关更详细的讨论，请参见&lt;a href=&quot;architecture-services&quot;&gt;服务和DI简介&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d4cd5e4bd0778cad7950bd52a42ef74913046ae2" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion, see &lt;a href=&quot;router&quot;&gt;Routing and navigation&lt;/a&gt;.</source>
          <target state="translated">有关更详细的讨论，请参见&amp;ldquo; &lt;a href=&quot;router&quot;&gt;路由和导航&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a73e93b07219a0df7b025b0a73e4e86089de6972" translate="yes" xml:space="preserve">
          <source>For a more detailed look at different techniques and concepts surrounding SSR, please check out this &lt;a href=&quot;https://developers.google.com/web/updates/2019/02/rendering-on-the-web&quot;&gt;article&lt;/a&gt;.</source>
          <target state="translated">要详细了解围绕SSR的不同技术和概念，请查看&lt;a href=&quot;https://developers.google.com/web/updates/2019/02/rendering-on-the-web&quot;&gt;本文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="750cd369db6afa2ea7217c34574571bcfa6f38c2" translate="yes" xml:space="preserve">
          <source>For a more strikingly visual effect, hide the data entry area and display something else.</source>
          <target state="translated">为了达到更醒目的视觉效果,可以将数据录入区隐藏起来,显示其他的东西。</target>
        </trans-unit>
        <trans-unit id="2022eb522814df1f6325470271058257eb784f7a" translate="yes" xml:space="preserve">
          <source>For a multi-project workspace, application-specific end-to-end tests are in the project root, under &lt;code&gt;projects/project-name/e2e/&lt;/code&gt;.</source>
          <target state="translated">对于多项目工作区，特定于应用程序的端到端测试位于项目根目录中的 &lt;code&gt;projects/project-name/e2e/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c8a4e5ce7ca87cad38cdc266c34765f3cdeb6a6" translate="yes" xml:space="preserve">
          <source>For a newly created Angular application, the default &lt;code&gt;browserslist&lt;/code&gt; looks like this:</source>
          <target state="translated">对于新创建的Angular应用程序，默认 &lt;code&gt;browserslist&lt;/code&gt; 如下所示：</target>
        </trans-unit>
        <trans-unit id="30a03f66c5fbc0ab53ccc165e51d54b263f55130" translate="yes" xml:space="preserve">
          <source>For a sample app using the app-wide singleton service that this page describes, see the  showcasing all the documented features of NgModules.</source>
          <target state="translated">关于使用本页面所描述的全应用范围单例服务的示例应用,请参见展示NgModules的所有文档功能。</target>
        </trans-unit>
        <trans-unit id="81c70c1467ee563fc554cbd57f1ad105403d7b92" translate="yes" xml:space="preserve">
          <source>For a server that supports a cookie-based XSRF protection system, use directly to configure XSRF protection with the correct cookie and header names.</source>
          <target state="translated">对于支持基于cookie的XSRF保护系统的服务器,直接使用正确的cookie和头名来配置XSRF保护。</target>
        </trans-unit>
        <trans-unit id="92ef30ec204c92904139cd32d14c7f56b8daa6a7" translate="yes" xml:space="preserve">
          <source>For a service, instead of using &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt;, specify &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; on the service's &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator, which makes the service automatically available to the whole application and thus singleton by default.</source>
          <target state="translated">对于服务，而不是使用， &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; ，指定 &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; 上的服务的 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰，这使得在默认情况下自动提供给整个应用程序，因此单服务。</target>
        </trans-unit>
        <trans-unit id="e8211f18ec4be55c727117b3cb53d82d2e117ab5" translate="yes" xml:space="preserve">
          <source>For a single-application workspace, the &lt;code&gt;src/&lt;/code&gt; subfolder of the workspace contains the source files (application logic, data, and assets) for the root application. For a multi-project workspace, additional projects in the &lt;code&gt;projects/&lt;/code&gt; folder contain a &lt;code&gt;project-name/src/&lt;/code&gt; subfolder with the same structure.</source>
          <target state="translated">对于单应用程序工作空间，工作空间的 &lt;code&gt;src/&lt;/code&gt; 子文件夹包含根应用程序的源文件（应用程序逻辑，数据和资产）。对于多项目工作区， &lt;code&gt;projects/&lt;/code&gt; 文件夹中的其他项目包含具有相同结构的 &lt;code&gt;project-name/src/&lt;/code&gt; 子文件夹。</target>
        </trans-unit>
        <trans-unit id="1aeb7084240197448ee7922cc65cd19b115f0503" translate="yes" xml:space="preserve">
          <source>For a use case in which &lt;code&gt;TestBed.get()&lt;/code&gt; does not work, see the &lt;a href=&quot;testing#component-override&quot;&gt;&lt;em&gt;Override component providers&lt;/em&gt;&lt;/a&gt; section that explains when and why you must get the service from the component's injector instead.</source>
          <target state="translated">对于 &lt;code&gt;TestBed.get()&lt;/code&gt; 无法使用的用例，请参见&amp;ldquo; &lt;a href=&quot;testing#component-override&quot;&gt;&lt;em&gt;重写组件提供者&amp;rdquo;&lt;/em&gt;&lt;/a&gt;部分，该部分说明了何时以及为什么必须从组件的注入器获取服务。</target>
        </trans-unit>
        <trans-unit id="a56e67dc7e67f63fd67f62752b90970cdfa316a7" translate="yes" xml:space="preserve">
          <source>For a working app showcasing the resolution modifiers that this section covers, see the &lt;span name=&quot;resolution-modifiers&quot;&gt;resolution modifiers example&lt;/span&gt;.</source>
          <target state="translated">有关展示本节介绍的分辨率修改器的有效应用程序，请参见&lt;span name=&quot;resolution-modifiers&quot;&gt;分辨率修改器示例&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="b4d3ace35db801146c90ad64f7e68f94dffe96e6" translate="yes" xml:space="preserve">
          <source>For accessibility, always set the &lt;code&gt;alt&lt;/code&gt; attribute with a meaningful description of the image.</source>
          <target state="translated">为了实现可访问性，请始终为 &lt;code&gt;alt&lt;/code&gt; 属性设置有意义的图像描述。</target>
        </trans-unit>
        <trans-unit id="08c197fce1dfb8440b4fadb4a18a680eb4703951" translate="yes" xml:space="preserve">
          <source>For additional guidelines and instructions on preparing an application for AOT compilation, see &lt;a href=&quot;https://medium.com/sparkles-blog/angular-writing-aot-friendly-applications-7b64c8afbe3f&quot;&gt;Angular: Writing AOT-friendly applications&lt;/a&gt;.</source>
          <target state="translated">有关准备AOT编译应用程序的其他准则和说明，请参阅&lt;a href=&quot;https://medium.com/sparkles-blog/angular-writing-aot-friendly-applications-7b64c8afbe3f&quot;&gt;Angular：编写AOT友好的应用程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d02c51c70344581110641be00d5525e6d5b83bbc" translate="yes" xml:space="preserve">
          <source>For additional recommendations and examples, see:</source>
          <target state="translated">关于其他建议和实例,见:</target>
        </trans-unit>
        <trans-unit id="e5f519be37c93f048158115b0ff95a3f9cb7a9d2" translate="yes" xml:space="preserve">
          <source>For an enabled &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, the values of enabled controls as an object with a key-value pair for each member of the group.</source>
          <target state="translated">对于已启用的 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; ，已启用控件的值作为对象，具有组中每个成员的键值对。</target>
        </trans-unit>
        <trans-unit id="35fcfc95bf3f643ffc0e8e4b7a7a3e3d173e2e42" translate="yes" xml:space="preserve">
          <source>For an example app showcasing all the techniques that NgModules related pages cover, see the live example. For explanations on the individual techniques, visit the relevant NgModule pages under the NgModules section.</source>
          <target state="translated">要想了解NgModules相关页面所涵盖的所有技术,请看实时示例。关于各个技术的解释,请访问NgModule部分下的相关NgModule页面。</target>
        </trans-unit>
        <trans-unit id="9439fadc0091afb2c4f7db52e6361412bc108c20" translate="yes" xml:space="preserve">
          <source>For an existing application, you have to manually add the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; and defining a &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; within your application.</source>
          <target state="translated">对于现有应用程序，您必须手动添加 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 并在应用程序内定义 &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0dfb27895771ef6dca5967dbe2c4298ec82610d4" translate="yes" xml:space="preserve">
          <source>For an extended example, see &lt;a href=&quot;../../guide/dependency-injection-in-action#optional&quot;&gt;&quot;Dependency Injection Guide&quot;&lt;/a&gt;.</source>
          <target state="translated">有关扩展的示例，请参见&lt;a href=&quot;../../guide/dependency-injection-in-action#optional&quot;&gt;&amp;ldquo;依赖关系注入指南&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dbba5915671a316c7a339feaa343882d79960f93" translate="yes" xml:space="preserve">
          <source>For an in-depth introduction to issues and techniques for designing accessible applications, see the &lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility&quot;&gt;Accessibility&lt;/a&gt; section of the Google's &lt;a href=&quot;https://developers.google.com/web/fundamentals/&quot;&gt;Web Fundamentals&lt;/a&gt;.</source>
          <target state="translated">有关设计可访问应用程序的问题和技术的深入介绍，请参阅Google &lt;a href=&quot;https://developers.google.com/web/fundamentals/&quot;&gt;网络基础知识&lt;/a&gt;的&lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/#what_is_accessibility&quot;&gt;可访问性&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="02d5c37942e06265530fb10df1a081ea18901c63" translate="yes" xml:space="preserve">
          <source>For any dependency that you need in your app, you must register a provider with the app's injector, so that the injector can use the provider to create new instances. For a service, the provider is typically the service class itself.</source>
          <target state="translated">对于您在应用程序中需要的任何依赖,您必须向应用程序的注入器注册一个提供者,这样注入器就可以使用提供者来创建新的实例。对于一个服务来说,提供者通常是服务类本身。</target>
        </trans-unit>
        <trans-unit id="4cc9bd9ca012eb99d48275d26071684014874aee" translate="yes" xml:space="preserve">
          <source>For applications that do not use the Angular service worker, refreshing now would display Chrome's Internet disconnected page that says &quot;There is no Internet connection&quot;.</source>
          <target state="translated">对于不使用Angular服务工的应用,现在刷新会显示Chrome的Internet断开页面,显示 &quot;没有Internet连接&quot;。</target>
        </trans-unit>
        <trans-unit id="4e085192902c042727c03a5e288669b2ed78933e" translate="yes" xml:space="preserve">
          <source>For applications that use a module loader, TypeScript imports and exports (which are really ECMAScript 2015 imports and exports) can be used to organize code into modules.</source>
          <target state="translated">对于使用模块加载器的应用程序,可以使用TypeScript导入和导出(其实就是ECMAScript 2015导入和导出)将代码组织成模块。</target>
        </trans-unit>
        <trans-unit id="82065dd0d194076720bd160e9ef4ea6f38ae23b4" translate="yes" xml:space="preserve">
          <source>For apps that run in the browser, import &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; in the root &lt;code&gt;AppModule&lt;/code&gt; because it provides services that are essential to launch and run a browser app. &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;&amp;rsquo;s providers are for the whole app so it should only be in the root module, not in feature modules. Feature modules only need the common directives in &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;; they don&amp;rsquo;t need to re-install app-wide providers.</source>
          <target state="translated">对于在浏览器中运行的应用程序，请在根 &lt;code&gt;AppModule&lt;/code&gt; 中导入 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; ，因为它提供了启动和运行浏览器应用程序所必需的服务。 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 的提供程序适用于整个应用程序，因此应仅位于根模块中，而不能位于功能模块中。功能模块仅需要 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 中的通用指令；他们不需要重新安装应用程序范围的提供程序。</target>
        </trans-unit>
        <trans-unit id="71739e2e72f69ca13115636123c21e230580b17e" translate="yes" xml:space="preserve">
          <source>For apps that use routing</source>
          <target state="translated">对于使用路由的应用程序</target>
        </trans-unit>
        <trans-unit id="d6454be884bb001961f7873a56e27650c1d20938" translate="yes" xml:space="preserve">
          <source>For block code snippets, we generally prefer to display code with the Angular documentation &lt;em&gt;code-example&lt;/em&gt; component represented by the &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; tag. The &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; tag has a &lt;code&gt;header&lt;/code&gt; attribute that you use to identify the file that the example comes from. The header should be used whenever possible to establish the context of the example. See &lt;a href=&quot;docs-style-guide#code-snippets-and-code-samples&quot;&gt;Code snippets and code examples&lt;/a&gt; for more details.</source>
          <target state="translated">对于块代码段，我们通常更喜欢使用 &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; 标签表示的Angular文档&lt;em&gt;代码示例&lt;/em&gt;组件来显示代码。所述 &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; 标签具有 &lt;code&gt;header&lt;/code&gt; 您用来标识该例子来自文件属性。只要有可能，就可以使用标题来建立示例的上下文。有关更多详细信息，请参见&lt;a href=&quot;docs-style-guide#code-snippets-and-code-samples&quot;&gt;代码段和代码示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71540f69257e7ef9f20551f9d8e74cdfb9693cc2" translate="yes" xml:space="preserve">
          <source>For cases where this is unavoidable, use the built-in Angular sanitization functions. Sanitize untrusted values with the &lt;a href=&quot;../api/platform-browser/domsanitizer#sanitize&quot;&gt;DomSanitizer.sanitize&lt;/a&gt; method and the appropriate &lt;code&gt;&lt;a href=&quot;../api/core/securitycontext&quot;&gt;SecurityContext&lt;/a&gt;&lt;/code&gt;. That function also accepts values that were marked as trusted using the &lt;code&gt;bypassSecurityTrust&lt;/code&gt;... functions, and will not sanitize them, as &lt;a href=&quot;security#bypass-security-apis&quot;&gt;described below&lt;/a&gt;.</source>
          <target state="translated">对于不可避免的情况，请使用内置的Angular清理功能。使用&lt;a href=&quot;../api/platform-browser/domsanitizer#sanitize&quot;&gt;DomSanitizer.sanitize&lt;/a&gt;方法和适当的 &lt;code&gt;&lt;a href=&quot;../api/core/securitycontext&quot;&gt;SecurityContext&lt;/a&gt;&lt;/code&gt; 清理不受信任的值。该函数还接受使用 &lt;code&gt;bypassSecurityTrust&lt;/code&gt; ...函数标记为受信任的值，并且不会对其进行清理，如下&lt;a href=&quot;security#bypass-security-apis&quot;&gt;所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a39b3875e189eb4ca0c89b960bcc8cb4271675d" translate="yes" xml:space="preserve">
          <source>For comparison, the demo shows both methods. One button adds the popup using the dynamic-loading method, and the other uses the custom element. You can see that the result is the same; only the preparation is different.</source>
          <target state="translated">为了便于比较,演示展示了两种方法。一个按钮使用动态加载方法添加弹出窗口,另一个使用自定义元素。你可以看到,结果是一样的,只是准备工作不同。</target>
        </trans-unit>
        <trans-unit id="865a0de0e84df467f2e752ab54699a7f5954a151" translate="yes" xml:space="preserve">
          <source>For context, consider setting a &lt;em&gt;single&lt;/em&gt; style value with &lt;a href=&quot;template-syntax#style-binding&quot;&gt;style binding&lt;/a&gt;, without &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;NgStyle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">对于上下文，请考虑使用&lt;a href=&quot;template-syntax#style-binding&quot;&gt;样式绑定&lt;/a&gt;设置&lt;em&gt;单个&lt;/em&gt;样式值，而不使用 &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;NgStyle&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bc830cbd7287563c25d1d3389827fb12f3a8001" translate="yes" xml:space="preserve">
          <source>For custom classes or interfaces used in components or service, check whether they depend on additional classes or interfaces that also need to be migrated.</source>
          <target state="translated">对于在组件或服务中使用的自定义类或接口,检查它们是否依赖于也需要迁移的其他类或接口。</target>
        </trans-unit>
        <trans-unit id="3c55a614865ad2c11b1723c5f48adafb226d2339" translate="yes" xml:space="preserve">
          <source>For data or logic that isn't associated with a specific view, and that you want to share across components, you create a &lt;em&gt;service&lt;/em&gt; class. A service class definition is immediately preceded by the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator. The decorator provides the metadata that allows other providers to be &lt;strong&gt;injected&lt;/strong&gt; as dependencies into your class.</source>
          <target state="translated">对于与特定视图无关的数据或逻辑，并且要在组件之间共享，请创建&lt;em&gt;服务&lt;/em&gt;类。服务类定义之前紧跟 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰器。装饰器提供了允许其他服务提供者进行元数据&lt;strong&gt;注入&lt;/strong&gt;的依赖到你的类。</target>
        </trans-unit>
        <trans-unit id="ba3f9f9ba909015786f607f654afb1de87571018" translate="yes" xml:space="preserve">
          <source>For detailed information and guidance on updating your application, see the interactive &lt;a href=&quot;https://update.angular.io/&quot;&gt;Angular Update Guide&lt;/a&gt;.</source>
          <target state="translated">有关更新应用程序的详细信息和指南，请参见交互式&lt;a href=&quot;https://update.angular.io/&quot;&gt;Angular Update Guide&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b3c0f77845d6547228c1544a3261cba4f83b3a74" translate="yes" xml:space="preserve">
          <source>For detailed usage information, see the &lt;a href=&quot;../../guide/router&quot;&gt;Routing Guide&lt;/a&gt;.</source>
          <target state="translated">有关详细的使用信息，请参阅《&lt;a href=&quot;../../guide/router&quot;&gt;路由指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1475c5e9774d7a4a828ca68604b8f34d2642f0e" translate="yes" xml:space="preserve">
          <source>For details about &lt;code&gt;tsconfig.json&lt;/code&gt;, see the official &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript wiki&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;tsconfig.json&lt;/code&gt; 的详细信息，请参见官方&lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;TypeScript Wiki&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4bab4f7c1f186fde5dd33b6553841cab367c91c7" translate="yes" xml:space="preserve">
          <source>For details about changes between versions, and information about updating from previous releases, see the Releases tab on GitHub: &lt;a href=&quot;https://github.com/angular/angular-cli/releases&quot;&gt;https://github.com/angular/angular-cli/releases&lt;/a&gt;</source>
          <target state="translated">有关版本之间的更改的详细信息以及有关从先前发行版进行更新的信息，请参阅GitHub上的&amp;ldquo;发行版&amp;rdquo;选项卡：&lt;a href=&quot;https://github.com/angular/angular-cli/releases&quot;&gt;https&lt;/a&gt; : //github.com/angular/angular-cli/releases</target>
        </trans-unit>
        <trans-unit id="23766cd9b30ec2bf351ff63c0849a0f6f387aa95" translate="yes" xml:space="preserve">
          <source>For details of these data structure and syntax, see the &lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/schematics/README.md&quot;&gt;Schematics README&lt;/a&gt;.</source>
          <target state="translated">有关这些数据结构和语法的详细信息，请参见&amp;ldquo; &lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/schematics/README.md&quot;&gt;原理图自述文件&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="541fccad9c0f3d4d19e2c625af6f980747075926" translate="yes" xml:space="preserve">
          <source>For each aspect of style, the following table explains where to find the primary guidelines and what this Angular Documentation Style Guide offers.</source>
          <target state="translated">对于样式的每一个方面,下表解释了在哪里可以找到主要的指南以及本Angular文档样式指南提供的内容。</target>
        </trans-unit>
        <trans-unit id="a0e64be003f64e5e53c53df41839088c920fc00a" translate="yes" xml:space="preserve">
          <source>For each component listed here, Angular creates a &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; and stores it in the &lt;code&gt;&lt;a href=&quot;componentfactoryresolver&quot;&gt;ComponentFactoryResolver&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">对于此处列出的每个组件，Angular都会创建一个 &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; 并将其存储在 &lt;code&gt;&lt;a href=&quot;componentfactoryresolver&quot;&gt;ComponentFactoryResolver&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="add8347c026ab345310af632fb1bca00afd1317e" translate="yes" xml:space="preserve">
          <source>For each match:</source>
          <target state="translated">对于每场比赛:</target>
        </trans-unit>
        <trans-unit id="6b06187ade59dfe6abfc2250cd1459d4dbed3837" translate="yes" xml:space="preserve">
          <source>For each of these elements, use &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; to set the same initial style for the element. Make it invisible and use &lt;code&gt;transform&lt;/code&gt; to move it out of position so that it can slide into place.</source>
          <target state="translated">对于每个这些元素，请使用 &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 为该元素设置相同的初始样式。使它不可见，并使用 &lt;code&gt;transform&lt;/code&gt; 将其移出位置，以便其滑入到位。</target>
        </trans-unit>
        <trans-unit id="296a1f382667ab3a9cb177eb53e0592ff7e4bf62" translate="yes" xml:space="preserve">
          <source>For each translation source file, there must be at least one language translation file for the resulting translation.</source>
          <target state="translated">对于每个翻译源文件,必须至少有一个语言翻译文件,用于最终的翻译。</target>
        </trans-unit>
        <trans-unit id="f475cf41b7700ea33baa6ae4dbc1042f33b1e212" translate="yes" xml:space="preserve">
          <source>For elements entering or leaving a page (inserted or removed from the DOM), you can make the animations conditional. For example, use &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; with the animation trigger in the HTML template.</source>
          <target state="translated">对于进入或离开页面（从DOM插入或从DOM中删除）的元素，可以使动画有条件。例如，将 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 与HTML模板中的动画触发器一起使用。</target>
        </trans-unit>
        <trans-unit id="33c47e78379e5f8c12f7ffa6ef6ee132951e2a7d" translate="yes" xml:space="preserve">
          <source>For event binding, define the name of the target event within parenthesis and specify a template statement, in quotes, to the right of the equals. Angular then sets up an event handler for the target event. When the event is raised, the handler executes the template statement.</source>
          <target state="translated">对于事件绑定,在括号内定义目标事件的名称,并在等号的右边用引号指定一个模板语句。然后Angular为目标事件设置一个事件处理程序。当事件被引发时,处理程序会执行模板语句。</target>
        </trans-unit>
        <trans-unit id="d7b7cbd57eaa134c7d6bdd77cb83b62a700f7de3" translate="yes" xml:space="preserve">
          <source>For event handling:</source>
          <target state="translated">用于事件处理。</target>
        </trans-unit>
        <trans-unit id="e9f25525aed49da6509dcc93159089fed66c4a10" translate="yes" xml:space="preserve">
          <source>For every Angular component you write, you may define not only an HTML template, but also the CSS styles that go with that template, specifying any selectors, rules, and media queries that you need.</source>
          <target state="translated">对于你编写的每一个Angular组件,你不仅可以定义一个HTML模板,还可以定义与该模板相匹配的CSS样式,指定任何你需要的选择器、规则和媒体查询。</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="4d6913e010e0058aed0de321b5d366d10bad9a9e" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/build_angular/src/browser&quot;&gt;BrowserBuilder&lt;/a&gt; runs a &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; build for a browser target and &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/build_angular/src/karma&quot;&gt;KarmaBuilder&lt;/a&gt; starts the Karma server and runs a webpack build for unit tests.</source>
          <target state="translated">例如，&lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/build_angular/src/browser&quot;&gt;BrowserBuilder&lt;/a&gt;为浏览器目标运行&lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt;构建，而&lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/build_angular/src/karma&quot;&gt;KarmaBuilder&lt;/a&gt;启动Karma服务器并为单元测试运行webpack构建。</target>
        </trans-unit>
        <trans-unit id="80491223b62ca89010c42d30ab7078fdf403f816" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;HeroListComponent&lt;/code&gt; has a &lt;code&gt;heroes&lt;/code&gt; property that holds an array of heroes. Its &lt;code&gt;selectHero()&lt;/code&gt; method sets a &lt;code&gt;selectedHero&lt;/code&gt; property when the user clicks to choose a hero from that list. The component acquires the heroes from a service, which is a TypeScript &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/classes.html#parameter-properties&quot;&gt;parameter property&lt;/a&gt; on the constructor. The service is provided to the component through the dependency injection system.</source>
          <target state="translated">例如， &lt;code&gt;HeroListComponent&lt;/code&gt; 有一个 &lt;code&gt;heroes&lt;/code&gt; 属性，该属性包含一个英雄数组。当用户单击以从列表中选择英雄时，其 &lt;code&gt;selectHero()&lt;/code&gt; 方法将设置 &lt;code&gt;selectedHero&lt;/code&gt; 属性。该组件从服务获取英雄，该服务是构造函数上的TypeScript &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/classes.html#parameter-properties&quot;&gt;参数属性&lt;/a&gt;。该服务通过依赖项注入系统提供给组件。</target>
        </trans-unit>
        <trans-unit id="b6aa917da6b6eeb1890dd5111f497f98b6683379" translate="yes" xml:space="preserve">
          <source>For example, Angular can inject &lt;code&gt;HeroListComponent&lt;/code&gt; with both the &lt;code&gt;HeroService&lt;/code&gt; provided in &lt;code&gt;HeroComponent&lt;/code&gt; and the &lt;code&gt;UserService&lt;/code&gt; provided in &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">例如，角可以注入 &lt;code&gt;HeroListComponent&lt;/code&gt; 同时与 &lt;code&gt;HeroService&lt;/code&gt; 中提供 &lt;code&gt;HeroComponent&lt;/code&gt; 和 &lt;code&gt;UserService&lt;/code&gt; 中提供 &lt;code&gt;AppModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82d24ea45789f45e5fa4e90e30c668abcffbfce7" translate="yes" xml:space="preserve">
          <source>For example, a built-in builder for linting is defined in the package &lt;code&gt;@angular-devkit/build_angular:tslint&lt;/code&gt;, which uses the &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; tool to perform linting, with a configuration specified in a &lt;code&gt;tslint.json&lt;/code&gt; file.</source>
          <target state="translated">例如，在 &lt;code&gt;@angular-devkit/build_angular:tslint&lt;/code&gt; 包中定义了用于插入的内置生成器，该包使用&lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt;工具执行插入，并在 &lt;code&gt;tslint.json&lt;/code&gt; 文件中指定了配置。</target>
        </trans-unit>
        <trans-unit id="732fad8249ef09aa9ab6fe01f4372cc002fca1c2" translate="yes" xml:space="preserve">
          <source>For example, a transition of &lt;code&gt;open =&amp;gt; *&lt;/code&gt; applies when the element's state changes from open to anything else.</source>
          <target state="translated">例如，当元素的状态从open变为其他状态时，将应用 &lt;code&gt;open =&amp;gt; *&lt;/code&gt; 的过渡。</target>
        </trans-unit>
        <trans-unit id="25f66f9c3ad7f2808ac5ea2976e1fc3d55ba5553" translate="yes" xml:space="preserve">
          <source>For example, an editing component that needs a private copy of a caching service should register the service with the component. Then each new instance of the component gets its own cached service instance. The changes that editor makes in its service don't touch the instances elsewhere in the application.</source>
          <target state="translated">例如,一个需要缓存服务私有副本的编辑组件应该向组件注册服务。然后组件的每个新实例都会得到自己的缓存服务实例。编辑器在它的服务中所做的改变不会触及应用程序中其他地方的实例。</target>
        </trans-unit>
        <trans-unit id="739cb885493d2787dba9c93f52ae62f7f74aeac8" translate="yes" xml:space="preserve">
          <source>For example, consider the following component:</source>
          <target state="translated">例如,考虑以下组件。</target>
        </trans-unit>
        <trans-unit id="77309a0ead13cf82a0f2d21ff03d6d13581cbf6a" translate="yes" xml:space="preserve">
          <source>For example, consider the following function:</source>
          <target state="translated">例如,考虑以下函数。</target>
        </trans-unit>
        <trans-unit id="dc3716dac11d8351ec07f6539fd77189eac41acb" translate="yes" xml:space="preserve">
          <source>For example, consider the following route configuration where the parent route has two children.</source>
          <target state="translated">例如,如果父路由有两个子路由,则考虑以下路由配置。</target>
        </trans-unit>
        <trans-unit id="b4f0c5afbbac2af41a81085ea8ed62d709c36ddc" translate="yes" xml:space="preserve">
          <source>For example, for the default &lt;code&gt;en-US&lt;/code&gt; locale, the code &lt;code&gt;USD&lt;/code&gt; can be represented by the narrow symbol &lt;code&gt;$&lt;/code&gt; or the wide symbol &lt;code&gt;US$&lt;/code&gt;.</source>
          <target state="translated">例如，对于默认 &lt;code&gt;en-US&lt;/code&gt; 语言环境，代码 &lt;code&gt;USD&lt;/code&gt; 可以由窄符号 &lt;code&gt;$&lt;/code&gt; 或宽符号 &lt;code&gt;US$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fe7e7470440d10c52ecb62d35898eb8bd34b72a" translate="yes" xml:space="preserve">
          <source>For example, for the following &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">例如，对于以下 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c8c075f684e624819ce3836008614ddc832ae598" translate="yes" xml:space="preserve">
          <source>For example, here is a template for the Tutorial's &lt;code&gt;HeroListComponent&lt;/code&gt;.</source>
          <target state="translated">例如，这是教程的 &lt;code&gt;HeroListComponent&lt;/code&gt; 的模板。</target>
        </trans-unit>
        <trans-unit id="2a7d61883c2231b9e61654a0869917789d9575c0" translate="yes" xml:space="preserve">
          <source>For example, if a library uses the &lt;code&gt;public_api.ts&lt;/code&gt; file as the library index of the module, the &lt;code&gt;tsconfig.json&lt;/code&gt;&lt;code&gt;files&lt;/code&gt; field would be &lt;code&gt;[&quot;public_api.ts&quot;]&lt;/code&gt;. The &lt;code&gt;flatModuleOutFile&lt;/code&gt; options could then be set to (for example) &lt;code&gt;&quot;index.js&quot;&lt;/code&gt;, which produces &lt;code&gt;index.d.ts&lt;/code&gt; and &lt;code&gt;index.metadata.json&lt;/code&gt; files. The &lt;code&gt;module&lt;/code&gt; field of the library's &lt;code&gt;package.json&lt;/code&gt; would be &lt;code&gt;&quot;index.js&quot;&lt;/code&gt; and the &lt;code&gt;typings&lt;/code&gt; field would be &lt;code&gt;&quot;index.d.ts&quot;&lt;/code&gt;.</source>
          <target state="translated">例如，如果一个库使用 &lt;code&gt;public_api.ts&lt;/code&gt; 文件作为模块的库索引，则 &lt;code&gt;tsconfig.json&lt;/code&gt; &lt;code&gt;files&lt;/code&gt; 字段将为 &lt;code&gt;[&quot;public_api.ts&quot;]&lt;/code&gt; 。然后可以将 &lt;code&gt;flatModuleOutFile&lt;/code&gt; 选项设置为（例如） &lt;code&gt;&quot;index.js&quot;&lt;/code&gt; ，这将生成 &lt;code&gt;index.d.ts&lt;/code&gt; 和 &lt;code&gt;index.metadata.json&lt;/code&gt; 文件。该 &lt;code&gt;module&lt;/code&gt; 库的领域 &lt;code&gt;package.json&lt;/code&gt; 将 &lt;code&gt;&quot;index.js&quot;&lt;/code&gt; 和 &lt;code&gt;typings&lt;/code&gt; 领域将是 &lt;code&gt;&quot;index.d.ts&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b81a21f01e25a665c1c9400ac1c5b89dc572aa7b" translate="yes" xml:space="preserve">
          <source>For example, if the French version of your application is served from &lt;a href=&quot;https://example.com/fr/&quot;&gt;https://example.com/fr/&lt;/a&gt;, configure the build for the French version as follows.</source>
          <target state="translated">例如，如果您的应用程序的法语版本是从&lt;a href=&quot;https://example.com/fr/&quot;&gt;https://example.com/fr/&lt;/a&gt;提供的，请按以下方式配置法语版本的构建。</target>
        </trans-unit>
        <trans-unit id="a33aa4930d3aff657073486b8fed408d9c29db44" translate="yes" xml:space="preserve">
          <source>For example, if you need the optional &lt;a href=&quot;http://caniuse.com/#feat=web-animation&quot;&gt;web animations polyfill&lt;/a&gt;, you could install it with &lt;code&gt;npm&lt;/code&gt;, using the following command (or the &lt;code&gt;yarn&lt;/code&gt; equivalent):</source>
          <target state="translated">例如，如果需要可选的&lt;a href=&quot;http://caniuse.com/#feat=web-animation&quot;&gt;Web动画polyfill&lt;/a&gt;，则可以使用以下命令（或等效的 &lt;code&gt;yarn&lt;/code&gt; ）与 &lt;code&gt;npm&lt;/code&gt; 一起安装：</target>
        </trans-unit>
        <trans-unit id="c22fe616dc591e5618b6ef992b62f4f3ae8f9bf5" translate="yes" xml:space="preserve">
          <source>For example, imagine a hero detail AngularJS component directive with one input and one output:</source>
          <target state="translated">例如,想象一个英雄细节AngularJS组件指令有一个输入和一个输出。</target>
        </trans-unit>
        <trans-unit id="9497ba845db03e6deeadaf9eeb58a4e88d893d5f" translate="yes" xml:space="preserve">
          <source>For example, import Angular's &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator from the &lt;code&gt;@angular/core&lt;/code&gt; library like this.</source>
          <target state="translated">例如，像这样从 &lt;code&gt;@angular/core&lt;/code&gt; 库导入Angular的 &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 装饰器。</target>
        </trans-unit>
        <trans-unit id="2c9480456f714aaa0550fa7da62cd14883843469" translate="yes" xml:space="preserve">
          <source>For example, in the following &lt;code&gt;SelfComponent&lt;/code&gt;, notice the injected &lt;code&gt;LeafService&lt;/code&gt; in the constructor.</source>
          <target state="translated">例如，在以下 &lt;code&gt;SelfComponent&lt;/code&gt; 中，请注意在构造函数中注入的 &lt;code&gt;LeafService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8428be5de3c94ec35c0505f75175025745d09917" translate="yes" xml:space="preserve">
          <source>For example, instead of creating a custom element for a new variety of button, you can create a component that uses an attribute selector with a native &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element. This most commonly applies to &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt;, but can be used with many other types of element.</source>
          <target state="translated">例如，您可以创建将属性选择器与本机 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 元素一起使用的组件，而不是为各种新按钮创建自定义元素。这最通常适用于 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; ，但可与许多其他类型的元件一起使用。</target>
        </trans-unit>
        <trans-unit id="fc0eca467862c90d9efa8e862b3587a8516e1e51" translate="yes" xml:space="preserve">
          <source>For example, it is &lt;em&gt;OK&lt;/em&gt; to use a downgraded service in an upgraded component that is only used from a downgraded Angular component provided by the same Angular module as the injectable, but it is &lt;em&gt;not OK&lt;/em&gt; to use it in an AngularJS component that may be used independently of Angular or use it in a downgraded Angular component from a different module.</source>
          <target state="translated">例如，它是&lt;em&gt;行&lt;/em&gt;中的升级组件仅从一个习惯用降级服务降级由相同的角模块作为注射提供角度成分，但它是&lt;em&gt;不正常&lt;/em&gt;使用它在AngularJS部件可以使用的独立于Angular或在其他模块的降级Angular组件中使用。</target>
        </trans-unit>
        <trans-unit id="a530aeb597282a353eb4d4d6d60ae2538af8352d" translate="yes" xml:space="preserve">
          <source>For example, server-side applications can't reference browser-only global objects such as &lt;code&gt;window&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;navigator&lt;/code&gt;, or &lt;code&gt;location&lt;/code&gt;.</source>
          <target state="translated">例如，服务器端应用程序不能引用仅浏览器的全局对象，例如 &lt;code&gt;window&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;navigator&lt;/code&gt; 或 &lt;code&gt;location&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51c9d0d42d97cb3dc764d10dcc6d02499fe9694c" translate="yes" xml:space="preserve">
          <source>For example, suppose &lt;code&gt;HeroService&lt;/code&gt; must hide &lt;em&gt;secret&lt;/em&gt; heroes from normal users. Only authorized users should see secret heroes.</source>
          <target state="translated">例如，假设 &lt;code&gt;HeroService&lt;/code&gt; 必须向普通用户隐藏&lt;em&gt;秘密&lt;/em&gt;英雄。只有授权用户才能看到秘密英雄。</target>
        </trans-unit>
        <trans-unit id="6b4cc94083c8a1f80c798bd5b2740e8280186eba" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a library named &lt;code&gt;d3&lt;/code&gt;:</source>
          <target state="translated">例如，假设您有一个名为 &lt;code&gt;d3&lt;/code&gt; 的库：</target>
        </trans-unit>
        <trans-unit id="9cf9a7d912b31fc9ca8f7e31178ff59413bd7823" translate="yes" xml:space="preserve">
          <source>For example, suppose you want the code base to have a minimum of 80% code coverage. To enable this, open the &lt;a href=&quot;https://karma-runner.github.io&quot;&gt;Karma&lt;/a&gt; test platform configuration file, &lt;code&gt;karma.conf.js&lt;/code&gt;, and add the following in the &lt;code&gt;coverageIstanbulReporter:&lt;/code&gt; key.</source>
          <target state="translated">例如，假设您希望代码库的代码覆盖率至少为80％。为此，请打开&lt;a href=&quot;https://karma-runner.github.io&quot;&gt;Karma&lt;/a&gt;测试平台配置文件 &lt;code&gt;karma.conf.js&lt;/code&gt; ，然后在 &lt;code&gt;coverageIstanbulReporter:&lt;/code&gt; 键中添加以下内容。</target>
        </trans-unit>
        <trans-unit id="50af682ddaaa55b01d052b01aa7cf905686b0845" translate="yes" xml:space="preserve">
          <source>For example, suppose you want to update the Angular Material library.</source>
          <target state="translated">例如,假设你想更新Angular Material库。</target>
        </trans-unit>
        <trans-unit id="8c1ddb2e15f1cddcbdbcc32d6cc7eb48668f91d9" translate="yes" xml:space="preserve">
          <source>For example, the &quot;serve&quot; target for a newly generated app has a predefined alternate configuration named &quot;production&quot;.</source>
          <target state="translated">例如,新生成的应用程序的 &quot;服务 &quot;目标有一个预定义的备用配置,名为 &quot;生产&quot;。</target>
        </trans-unit>
        <trans-unit id="cc73b8c8adf28b76d8cfa49ae3ca83692737c35f" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;https://material.angular.io/guide/schematics&quot;&gt;&lt;code&gt;@angular/material&lt;/code&gt;&lt;/a&gt; schematic tells the &lt;code&gt;add&lt;/code&gt; command to install and set up Angular Material and theming, and register new starter components that can be created with &lt;code&gt;ng generate&lt;/code&gt;. You can look at this one as an example and model for your own add schematic.</source>
          <target state="translated">例如，&lt;a href=&quot;https://material.angular.io/guide/schematics&quot;&gt; &lt;code&gt;@angular/material&lt;/code&gt; &lt;/a&gt;示意图告诉 &lt;code&gt;add&lt;/code&gt; 命令安装和设置Angular Material和主题化，并注册可以使用 &lt;code&gt;ng generate&lt;/code&gt; 创建的新的入门组件。您可以将此示例作为示例，并为自己的添加原理图建模。</target>
        </trans-unit>
        <trans-unit id="67592c68e2ac00ea2d43029031e1ca81f42456e3" translate="yes" xml:space="preserve">
          <source>For example, the Architect builder invoked by the &lt;code&gt;ng build&lt;/code&gt; command to compile a project uses a particular build tool, and has a default configuration whose values can be overridden on the command line. The &lt;code&gt;build&lt;/code&gt; target also defines an alternate configuration for a &quot;production&quot; build, that can be invoked with the &lt;code&gt;--prod&lt;/code&gt; flag on the &lt;code&gt;build&lt;/code&gt; command.</source>
          <target state="translated">例如，由 &lt;code&gt;ng build&lt;/code&gt; 命令调用的Architect构建器使用特定的构建工具来编译项目，并且具有默认配置，其值可以在命令行上覆盖。的 &lt;code&gt;build&lt;/code&gt; 目标还定义了&amp;ldquo;生产&amp;rdquo;的构建，可以与被调用的备用配置 &lt;code&gt;--prod&lt;/code&gt; 所述标志 &lt;code&gt;build&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="456036b268aa96f0d5baa4b16b7b44a79b22f13f" translate="yes" xml:space="preserve">
          <source>For example, the collector can evaluate the expression &lt;code&gt;1 + 2 + 3 + 4&lt;/code&gt; and replace it with the result, &lt;code&gt;10&lt;/code&gt;. This process is called &lt;em&gt;folding&lt;/em&gt;. An expression that can be reduced in this manner is &lt;em&gt;foldable&lt;/em&gt;.</source>
          <target state="translated">例如，收集器可以计算表达式 &lt;code&gt;1 + 2 + 3 + 4&lt;/code&gt; 并将其替换为结果 &lt;code&gt;10&lt;/code&gt; 。这个过程称为&lt;em&gt;折叠&lt;/em&gt;。可以这种方式还原的表达式是&lt;em&gt;可折叠的&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2f7aeac99d50d45ab995bb01629c8d23060ea8aa" translate="yes" xml:space="preserve">
          <source>For example, the component might render first on the server as part of a strategy to make the application launch faster on poorly connected devices. The server-side renderer might not support the full HTML element API. If it doesn't support &lt;code&gt;querySelector&lt;/code&gt;, the previous test could fail.</source>
          <target state="translated">例如，作为使应用程序在连接不良的设备上更快启动的策略的一部分，组件可能首先在服务器上呈现。服务器端渲染器可能不支持完整的HTML元素API。如果它不支持 &lt;code&gt;querySelector&lt;/code&gt; ，则先前的测试可能会失败。</target>
        </trans-unit>
        <trans-unit id="bb48f3cec557aac01648a938091dba4a6beb45dc" translate="yes" xml:space="preserve">
          <source>For example, the default asset paths can be represented in more detail using the following objects.</source>
          <target state="translated">例如,可以使用以下对象更详细地表示默认资产路径。</target>
        </trans-unit>
        <trans-unit id="ef9fd37dd42bb3ceaffed96656df1ed72a8779fa" translate="yes" xml:space="preserve">
          <source>For example, the following CLI command generates a &lt;code&gt;BannerComponent&lt;/code&gt; in the &lt;code&gt;app/banner&lt;/code&gt; folder (with inline template and styles):</source>
          <target state="translated">例如，以下CLI命令在 &lt;code&gt;app/banner&lt;/code&gt; 文件夹（带有内联模板和样式）中生成 &lt;code&gt;BannerComponent&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8e517bddb93ce781c7476fd73f84439d73846cfb" translate="yes" xml:space="preserve">
          <source>For example, the following command automatically deploys a project to Firebase.</source>
          <target state="translated">例如,以下命令会自动将一个项目部署到Firebase。</target>
        </trans-unit>
        <trans-unit id="d8927bb5a286f843d8058d130909cac403f48606" translate="yes" xml:space="preserve">
          <source>For example, the following command generates an NgModule that can use routing.</source>
          <target state="translated">例如,下面的命令会生成一个可以使用路由的NgModule。</target>
        </trans-unit>
        <trans-unit id="da0b61ba544cc7d6caa5e9d00194681f6e850326" translate="yes" xml:space="preserve">
          <source>For example, the string &quot;1s 100ms ease-out&quot; specifies a duration of 1000 milliseconds, and delay of 100 ms, and the &quot;ease-out&quot; easing style, which decelerates near the end of the duration.</source>
          <target state="translated">例如,字符串 &quot;1s 100ms eas-out &quot;指定持续时间为1000毫秒,延迟时间为100毫秒,采用 &quot;ease-out &quot;的缓和方式,在持续时间接近尾声时减速。</target>
        </trans-unit>
        <trans-unit id="a9d7730eccbd0e92f23996837e3a8f11bef70174" translate="yes" xml:space="preserve">
          <source>For example, the string &lt;code&gt;3d12h&lt;/code&gt; will cache content for up to three and a half days.</source>
          <target state="translated">例如，字符串 &lt;code&gt;3d12h&lt;/code&gt; 将最多缓存三天半的内容。</target>
        </trans-unit>
        <trans-unit id="e4708f232b7a2d860945bf98f596301e9e4e5e00" translate="yes" xml:space="preserve">
          <source>For example, the string &lt;code&gt;5s30u&lt;/code&gt; will translate to five seconds and 30 milliseconds of network timeout.</source>
          <target state="translated">例如，字符串 &lt;code&gt;5s30u&lt;/code&gt; 将转换为5秒钟和30毫秒的网络超时。</target>
        </trans-unit>
        <trans-unit id="8d6864b09909a8d7bd1794440def9f0c31acd333" translate="yes" xml:space="preserve">
          <source>For example, to create an observable equivalent to the &lt;code&gt;of(1, 2, 3)&lt;/code&gt; above, you could do something like this:</source>
          <target state="translated">例如，要创建与上述 &lt;code&gt;of(1, 2, 3)&lt;/code&gt; 等效的可观察对象，可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="7e21a6e50d611a4b649e738293bcbf7e12410528" translate="yes" xml:space="preserve">
          <source>For example, to get a &lt;code&gt;name&lt;/code&gt; control nested within a &lt;code&gt;person&lt;/code&gt; sub-group:</source>
          <target state="translated">例如，要获得嵌套在 &lt;code&gt;person&lt;/code&gt; 子组中的 &lt;code&gt;name&lt;/code&gt; 控件，请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="2795d73c033ee5a4023bcbd6348118e04af1633f" translate="yes" xml:space="preserve">
          <source>For example, to use the &lt;a href=&quot;https://getbootstrap.com/docs/4.0/getting-started/introduction/&quot;&gt;Bootstrap 4&lt;/a&gt; library, first install the library and its dependencies using the npm package manager:</source>
          <target state="translated">例如，要使用&lt;a href=&quot;https://getbootstrap.com/docs/4.0/getting-started/introduction/&quot;&gt;Bootstrap 4&lt;/a&gt;库，请首先使用npm软件包管理器安装该库及其依赖项：</target>
        </trans-unit>
        <trans-unit id="006077040eb38468b8a356d61c048734a3075b00" translate="yes" xml:space="preserve">
          <source>For example, when binding a URL in an &lt;code&gt;&amp;lt;&lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; [href]=&quot;someValue&quot;&amp;gt;&lt;/code&gt; hyperlink, &lt;code&gt;someValue&lt;/code&gt; will be sanitized so that an attacker cannot inject e.g. a &lt;code&gt;javascript:&lt;/code&gt; URL that would execute code on the website.</source>
          <target state="translated">例如，在一个结合一个URL时 &lt;code&gt;&amp;lt;&lt;a href=&quot;../router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; [href]=&quot;someValue&quot;&amp;gt;&lt;/code&gt; 超链接， &lt;code&gt;someValue&lt;/code&gt; 中将这样消毒，攻击者不能注入例如 &lt;code&gt;javascript:&lt;/code&gt; 将在网站上执行的代码的URL。</target>
        </trans-unit>
        <trans-unit id="b388ee63c404c11c431ffc8a9f8669aaee012a90" translate="yes" xml:space="preserve">
          <source>For example, when bootstrapping an application, you can register many initializers using the same token.</source>
          <target state="translated">例如,当引导一个应用程序时,你可以使用同一个标记注册许多初始化器。</target>
        </trans-unit>
        <trans-unit id="c63512e47f4e0eb59f4eb999a84ea7e0803892b1" translate="yes" xml:space="preserve">
          <source>For example, you can create a new &lt;code&gt;HeroListComponent&lt;/code&gt; with a mock service that you can manipulate under test.</source>
          <target state="translated">例如，您可以创建一个带有模拟服务的新 &lt;code&gt;HeroListComponent&lt;/code&gt; ，您可以在测试下对其进行操作。</target>
        </trans-unit>
        <trans-unit id="8ddf8e31fd2cd24dbe4fa042da0cd05fcfd17053" translate="yes" xml:space="preserve">
          <source>For example, you can use the following built-in tokens as hooks into the framework&amp;rsquo;s bootstrapping and initialization process. A provider object can associate any of these injection tokens with one or more callback functions that take app-specific initialization actions.</source>
          <target state="translated">例如，您可以使用以下内置标记作为挂钩到框架的引导和初始化过程。提供者对象可以将这些注入令牌中的任何一个与一个或多个采取特定于应用程序的初始化操作的回调函数相关联。</target>
        </trans-unit>
        <trans-unit id="227e297b37600eeafa53dd30d8eb145e25eb475b" translate="yes" xml:space="preserve">
          <source>For example, you cannot write something like this:</source>
          <target state="translated">例如,你不能写这样的东西。</target>
        </trans-unit>
        <trans-unit id="6530568924d585f2b40d86e5a6d6c3b09418ac8d" translate="yes" xml:space="preserve">
          <source>For example, you could have an expression that invoked a property or method that had side effects. The expression could call something like &lt;code&gt;getFoo()&lt;/code&gt; where only you know what &lt;code&gt;getFoo()&lt;/code&gt; does. If &lt;code&gt;getFoo()&lt;/code&gt; changes something and you happen to be binding to that something, Angular may or may not display the changed value. Angular may detect the change and throw a warning error. As a best practice, stick to properties and to methods that return values and avoid side effects.</source>
          <target state="translated">例如，您可能有一个表达式，该表达式调用了具有副作用的属性或方法。该表达式可以调用类似 &lt;code&gt;getFoo()&lt;/code&gt; 的方法，只有您知道 &lt;code&gt;getFoo()&lt;/code&gt; 的作用。如果 &lt;code&gt;getFoo()&lt;/code&gt; 更改了某个内容，而您恰巧绑定到该内容，则Angular可能会或可能不会显示更改后的值。Angular可能会检测到更改并抛出警告错误。最佳做法是坚持使用属性和返回值并避免副作用的方法。</target>
        </trans-unit>
        <trans-unit id="a1343721229e7e188c70b76a4f95e58cac86554e" translate="yes" xml:space="preserve">
          <source>For example, you may have defined a class and used it as an injection token in a providers array but neglected to export that class.</source>
          <target state="translated">例如,您可能已经定义了一个类,并将其用作提供者数组中的注入令牌,但忽略了导出该类。</target>
        </trans-unit>
        <trans-unit id="a95056eee3d11f52730201526a72543e3338d239" translate="yes" xml:space="preserve">
          <source>For example, you may have set a providers &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; property to a locally defined function that you neglected to export.</source>
          <target state="translated">例如，您可能已将提供程序 &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; 属性设置为忽略导出的本地定义函数。</target>
        </trans-unit>
        <trans-unit id="c3c0aadf2ed6d001641bc13306f6ac7b0b287585" translate="yes" xml:space="preserve">
          <source>For example, you might decide to cache certain requests and responses to improve performance. You can delegate caching to an interceptor without disturbing your existing data services.</source>
          <target state="translated">例如,您可能决定缓存某些请求和响应以提高性能。您可以将缓存委托给拦截器,而不会干扰您现有的数据服务。</target>
        </trans-unit>
        <trans-unit id="e751c1896b9ea59e8e0965c8d8ab0167c1bd2f31" translate="yes" xml:space="preserve">
          <source>For example, you might have an Angular service called &lt;code&gt;Heroes&lt;/code&gt;:</source>
          <target state="translated">例如，您可能有一个名为 &lt;code&gt;Heroes&lt;/code&gt; 的Angular服务：</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="24fca8b61903d711384e8ca51c4fd0aeb8d16945" translate="yes" xml:space="preserve">
          <source>For filtering flying heroes, consider an &lt;em&gt;impure pipe&lt;/em&gt;.</source>
          <target state="translated">为了过滤飞行英雄，请考虑使用&lt;em&gt;不纯净的烟斗&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a56d6b42d3843beb14525eb1fdcd50e555380dbb" translate="yes" xml:space="preserve">
          <source>For full details of these and other tools, see the &lt;a href=&quot;https://material.angular.io/cdk/a11y/overview&quot;&gt;Angular CDK accessibility overview&lt;/a&gt;.</source>
          <target state="translated">有关这些工具和其他工具的完整详细信息，请参见&lt;a href=&quot;https://material.angular.io/cdk/a11y/overview&quot;&gt;Angular CDK可访问性概述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c3da04950adb31c0e9528561719f0563708a66f" translate="yes" xml:space="preserve">
          <source>For further details, see &lt;a href=&quot;../guide/workspace-config&quot;&gt;Workspace Configuration&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../guide/workspace-config&quot;&gt;工作区配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b36de5c112631348d0b348bcbb31a5891c39f0e" translate="yes" xml:space="preserve">
          <source>For help with individual commands, use the &lt;code&gt;--help&lt;/code&gt; or &lt;code&gt;-h&lt;/code&gt; option with the command.</source>
          <target state="translated">要获得有关单个命令的帮助，请在命令中使用 &lt;code&gt;--help&lt;/code&gt; 或 &lt;code&gt;-h&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="86f2ce0f795377b7a0b29bb81dd3283d86dbb647" translate="yes" xml:space="preserve">
          <source>For hypothetical examples such as illustrations of configuration options in a JSON file, you should still use The &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; tag with the &lt;code&gt;header&lt;/code&gt; attribute to identify the context.</source>
          <target state="translated">对于诸如JSON文件中的配置选项之类的假设示例，您仍应将 &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; 标记与 &lt;code&gt;header&lt;/code&gt; 属性一起使用以标识上下文。</target>
        </trans-unit>
        <trans-unit id="701f4b7981f107d65ba50aa05880028cb7034894" translate="yes" xml:space="preserve">
          <source>For information about CSRF at the Open Web Application Security Project (OWASP), see &lt;a href=&quot;https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29&quot;&gt;Cross-Site Request Forgery (CSRF)&lt;/a&gt; and &lt;a href=&quot;https://www.owasp.org/index.php/CSRF_Prevention_Cheat_Sheet&quot;&gt;Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet&lt;/a&gt;. The Stanford University paper &lt;a href=&quot;https://seclab.stanford.edu/websec/csrf/csrf.pdf&quot;&gt;Robust Defenses for Cross-Site Request Forgery&lt;/a&gt; is a rich source of detail.</source>
          <target state="translated">有关开放Web应用程序安全项目（OWASP）上CSRF的信息，请参阅&lt;a href=&quot;https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29&quot;&gt;跨站点请求伪造（CSRF）&lt;/a&gt;和&lt;a href=&quot;https://www.owasp.org/index.php/CSRF_Prevention_Cheat_Sheet&quot;&gt;跨站点请求伪造（CSRF）预防备忘单&lt;/a&gt;。斯坦福大学的论文&lt;a href=&quot;https://seclab.stanford.edu/websec/csrf/csrf.pdf&quot;&gt;《跨站点请求伪造的鲁棒防御》提供&lt;/a&gt;了大量详细信息。</target>
        </trans-unit>
        <trans-unit id="a2cf14543e26d1b0e1e0f2335126cea8a8caa66e" translate="yes" xml:space="preserve">
          <source>For information about how the Angular CLI handles packages see the following guides:</source>
          <target state="translated">关于Angular CLI如何处理包的信息,请参见以下指南。</target>
        </trans-unit>
        <trans-unit id="0f291831cc0ce65674be94754322d757e2b548ab" translate="yes" xml:space="preserve">
          <source>For information about our versioning policy and practices&amp;mdash;including support and deprecation practices, as well as the release schedule&amp;mdash;see &lt;a href=&quot;releases&quot;&gt;Angular versioning and releases&lt;/a&gt;.</source>
          <target state="translated">有关我们的版本控制政策和实践（包括支持和弃用实践以及发布计划）的信息，请参阅&lt;a href=&quot;releases&quot;&gt;Angular版本和发布&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eae0e5c59a3541a14b503b2a4d5cecd660bf5771" translate="yes" xml:space="preserve">
          <source>For instance &lt;code&gt;['/team', teamId, 'user', userName, {details: true}]&lt;/code&gt; means that we want to generate a link to &lt;code&gt;/team/11/user/bob;details=true&lt;/code&gt;.</source>
          <target state="translated">例如 &lt;code&gt;['/team', teamId, 'user', userName, {details: true}]&lt;/code&gt; 意味着我们要生成到 &lt;code&gt;/team/11/user/bob;details=true&lt;/code&gt; 的链接。</target>
        </trans-unit>
        <trans-unit id="cc3c5ecad11774911020f831e44bc9e139c75862" translate="yes" xml:space="preserve">
          <source>For instance, &lt;code&gt;&lt;a href=&quot;forwardref&quot;&gt;forwardRef&lt;/a&gt;&lt;/code&gt; is used when the &lt;code&gt;token&lt;/code&gt; which we need to refer to for the purposes of DI is declared, but not yet defined. It is also used when the &lt;code&gt;token&lt;/code&gt; which we use when creating a query is not yet defined.</source>
          <target state="translated">例如，当声明需要为DI引用的 &lt;code&gt;token&lt;/code&gt; 但尚未定义该令牌时，将使用 &lt;code&gt;&lt;a href=&quot;forwardref&quot;&gt;forwardRef&lt;/a&gt;&lt;/code&gt; 。当尚未创建创建查询时使用的 &lt;code&gt;token&lt;/code&gt; 时，也可以使用它。</target>
        </trans-unit>
        <trans-unit id="7e37c9ce1affc33e83f25b7d7154d81e800947bf" translate="yes" xml:space="preserve">
          <source>For instance, &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; produces URLs like &lt;code&gt;&lt;a href=&quot;http://example.com#/foo&quot;&gt;http://example.com#/foo&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; produces &lt;code&gt;&lt;a href=&quot;http://example.com/foo&quot;&gt;http://example.com/foo&lt;/a&gt;&lt;/code&gt; as an equivalent URL.</source>
          <target state="translated">例如， &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; 产生类似 &lt;code&gt;&lt;a href=&quot;http://example.com#/foo&quot;&gt;http://example.com#/foo&lt;/a&gt;&lt;/code&gt; 的 URL ，而 &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; 产生 &lt;code&gt;&lt;a href=&quot;http://example.com/foo&quot;&gt;http://example.com/foo&lt;/a&gt;&lt;/code&gt; 作为等效URL。</target>
        </trans-unit>
        <trans-unit id="6055b44a38f88f4c957889644057f9b1f221cb1f" translate="yes" xml:space="preserve">
          <source>For instance, if the current url is &lt;code&gt;/user/(box//aux:team)&lt;/code&gt;.</source>
          <target state="translated">例如，如果当前网址是 &lt;code&gt;/user/(box//aux:team)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f3d492765d65a0f3c73975be81507c9a1cba6c5" translate="yes" xml:space="preserve">
          <source>For instance, if you call &lt;code&gt;location.go('/foo')&lt;/code&gt;, the browser's URL will become &lt;code&gt;example.com#/foo&lt;/code&gt;.</source>
          <target state="translated">例如，如果您调用 &lt;code&gt;location.go('/foo')&lt;/code&gt; ，则浏览器的URL将变为 &lt;code&gt;example.com#/foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27aaad8b83676d93a0529ecbf18c1e23d1f6429a" translate="yes" xml:space="preserve">
          <source>For instance, if you provide an &lt;code&gt;&lt;a href=&quot;app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;'/my/app'&lt;/code&gt; and call &lt;code&gt;location.go('/foo')&lt;/code&gt;, the browser's URL will become &lt;code&gt;example.com/my/app/foo&lt;/code&gt;.</source>
          <target state="translated">举例来说，如果你提供了一个 &lt;code&gt;&lt;a href=&quot;app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;'/my/app'&lt;/code&gt; 和呼叫 &lt;code&gt;location.go('/foo')&lt;/code&gt; ，浏览器的网址将成为 &lt;code&gt;example.com/my/app/foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dae1fb6e3f2f55f859e189cf275d906d8b055a79" translate="yes" xml:space="preserve">
          <source>For instance, in the phone detail component spec, you can use ES2015 features like arrow functions and block-scoped variables and benefit from the type definitions of the AngularJS services you're consuming:</source>
          <target state="translated">例如,在手机细节组件规范中,你可以使用ES2015的功能,如箭头函数和块范围变量,并从你所消费的AngularJS服务的类型定义中获益。</target>
        </trans-unit>
        <trans-unit id="ab978344d1e1b6148ef12f8d47b1a3c34578d91b" translate="yes" xml:space="preserve">
          <source>For instance, suppose you have an observable that makes an API request and maps to the response from the server. If the server returns an error or the value doesn&amp;rsquo;t exist, an error is produced. If you catch this error and supply a default value, your stream continues to process values rather than erroring out.</source>
          <target state="translated">例如，假设您有一个可观察的对象，它发出一个API请求并映射到服务器的响应。如果服务器返回错误或该值不存在，则会产生错误。如果发现此错误并提供默认值，则流将继续处理值而不是出错。</target>
        </trans-unit>
        <trans-unit id="38b9a9017b740354544e1593b7fba7b1889452c5" translate="yes" xml:space="preserve">
          <source>For instance, to install typings for &lt;code&gt;jasmine&lt;/code&gt; you run &lt;code&gt;npm install @types/jasmine --save-dev&lt;/code&gt;.</source>
          <target state="translated">例如，要安装 &lt;code&gt;jasmine&lt;/code&gt; &lt;code&gt;npm install @types/jasmine --save-dev&lt;/code&gt; 请运行npm install @ types / jasmine --save-dev。</target>
        </trans-unit>
        <trans-unit id="53450900d28528df93272d0c91263f304542a049" translate="yes" xml:space="preserve">
          <source>For loading the details of a single phone into the phone detail component.</source>
          <target state="translated">用于将单个手机的详细信息加载到手机详细信息组件中。</target>
        </trans-unit>
        <trans-unit id="1d590a93d1ae3053ab803edbe0f51bf6d8db8992" translate="yes" xml:space="preserve">
          <source>For loading the list of all phones into the phone list component.</source>
          <target state="translated">用于将所有电话的列表加载到电话列表组件中。</target>
        </trans-unit>
        <trans-unit id="e95847f8698a025ef652972368513ade33eb21d8" translate="yes" xml:space="preserve">
          <source>For localization, you can use the &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; to generate most of the boilerplate necessary to create files for translators, and to publish your app in multiple languages. After you have set up your app to use i18n, the CLI can help you with the following steps:</source>
          <target state="translated">对于本地化，您可以使用&lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;生成为翻译器创建文件并以多种语言发布应用程序所需的大部分样板。设置好应用程序以使用i18n后，CLI可以帮助您完成以下步骤：</target>
        </trans-unit>
        <trans-unit id="8f7790f93e8b73fbe836729c76c4b92a223f010e" translate="yes" xml:space="preserve">
          <source>For more about how the &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt; command works, see &lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/docs/specifications/update.md&quot;&gt;Update Command&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt; 命令如何工作的更多信息，请参见&lt;a href=&quot;https://github.com/angular/angular-cli/blob/master/docs/specifications/update.md&quot;&gt;Update Command&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="912b038c1b77176f84399bef3e1cfee27863c9b3" translate="yes" xml:space="preserve">
          <source>For more detail on how these work, see the previous sections on &lt;a href=&quot;template-syntax#input&quot;&gt;Input&lt;/a&gt; and &lt;a href=&quot;template-syntax#output&quot;&gt;Output&lt;/a&gt;. To see it in action, see the &lt;span name=&quot;inputs-outputs&quot;&gt;Inputs and Outputs Example&lt;/span&gt;.</source>
          <target state="translated">有关这些工作原理的更多详细信息，请参见前面关于&lt;a href=&quot;template-syntax#input&quot;&gt;Input&lt;/a&gt;和&lt;a href=&quot;template-syntax#output&quot;&gt;Output的部分&lt;/a&gt;。要查看它的实际效果，请参见&lt;span name=&quot;inputs-outputs&quot;&gt;Inputs and Outputs示例&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="817ec49fe835be920c9756e3ebba4f2ed83c6036" translate="yes" xml:space="preserve">
          <source>For more detail, including how to build your own custom directives, see &lt;a href=&quot;attribute-directives&quot;&gt;Attribute Directives&lt;/a&gt; and &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息（包括如何构建自己的自定义指令），请参见&lt;a href=&quot;attribute-directives&quot;&gt;属性指令&lt;/a&gt;和&lt;a href=&quot;structural-directives&quot;&gt;结构指令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e189779c6fd202a0e50304bc10f229865ed3c8b7" translate="yes" xml:space="preserve">
          <source>For more detailed information on services, see the &lt;a href=&quot;../tutorial/toh-pt4&quot;&gt;Services&lt;/a&gt; chapter of the &lt;a href=&quot;tutorial&quot;&gt;Tour of Heroes tutorial&lt;/a&gt;.</source>
          <target state="translated">有关服务的更多详细信息，请参阅《&lt;a href=&quot;tutorial&quot;&gt;英雄&lt;/a&gt;之旅》教程的&amp;ldquo; &lt;a href=&quot;../tutorial/toh-pt4&quot;&gt;服务&amp;rdquo;&lt;/a&gt;一章。</target>
        </trans-unit>
        <trans-unit id="6ff70ff85a85dfbc47459e089f85be3b2926fddc" translate="yes" xml:space="preserve">
          <source>For more detailed information, see the &lt;a href=&quot;dependency-injection&quot;&gt;Dependency Injection&lt;/a&gt; section.</source>
          <target state="translated">有关更多详细信息，请参见&amp;ldquo; &lt;a href=&quot;dependency-injection&quot;&gt;依赖关系注入&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="bd4ecc8635e0be85c7897afd61378d70b90b6b28" translate="yes" xml:space="preserve">
          <source>For more details about how to create scripts to generate an app in multiple languages and how to set up Apache 2 and NGINX to serve them from different subdirectories, read &lt;a href=&quot;https://dev.to/angular/deploying-an-i18n-angular-app-with-angular-cli-2fb9&quot;&gt;this tutorial by Philippe Martin&lt;/a&gt;.</source>
          <target state="translated">有关如何创建脚本以使用多种语言生成应用程序以及如何设置Apache 2和NGINX以从不同子目录为它们提供服务的更多详细信息，请阅读&lt;a href=&quot;https://dev.to/angular/deploying-an-i18n-angular-app-with-angular-cli-2fb9&quot;&gt;Philippe Martin的本教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41392c8a8ac6697970a5dcaa180c8d729b9b32eb" translate="yes" xml:space="preserve">
          <source>For more details of what these look like and how to create them, see:</source>
          <target state="translated">更多关于这些东西的样子和如何创建它们的细节,请看。</target>
        </trans-unit>
        <trans-unit id="0ef0eba5fb7aae6b3476d97afd599d01fa9968a9" translate="yes" xml:space="preserve">
          <source>For more details on how a library project is structured you can refer the &lt;a href=&quot;file-structure#library-project-files&quot;&gt;Library Project Files&lt;/a&gt;</source>
          <target state="translated">有关库项目的结构的更多详细信息，您可以参考&lt;a href=&quot;file-structure#library-project-files&quot;&gt;库项目文件&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ada7f6da9294e4c6d791dd9a0e5489db9a0be9b5" translate="yes" xml:space="preserve">
          <source>For more details on how to use &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; see &lt;a href=&quot;../../../guide/upgrade-performance&quot;&gt;Upgrading for Performance&lt;/a&gt;.</source>
          <target state="translated">有关如何使用 &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 的更多详细信息，请参见&lt;a href=&quot;../../../guide/upgrade-performance&quot;&gt;性能提升&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78f4d0c22be01be28b6d0944e470a26d5823dfc5" translate="yes" xml:space="preserve">
          <source>For more details, see the &lt;a href=&quot;../../guide/dependency-injection&quot;&gt;&quot;Dependency Injection Guide&quot;&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../../guide/dependency-injection&quot;&gt;&amp;ldquo;依赖项注入指南&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70d1fffe15b1f2e36ca7f113920e6fe75c98a33b" translate="yes" xml:space="preserve">
          <source>For more details, see the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement&quot;&gt;MDN HTMLTableCellElement&lt;/a&gt; documentation.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement&quot;&gt;MDN HTMLTableCellElement&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="cefa1996491841c464ce6d8b900601e8930a2e82" translate="yes" xml:space="preserve">
          <source>For more in-depth information on the implementation, see the &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/language-service/src/types.ts&quot;&gt;Angular Language Service API&lt;/a&gt;.</source>
          <target state="translated">有关实现的更多详细信息，请参阅&lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/language-service/src/types.ts&quot;&gt;Angular Language Service API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="571c1a07f9b9eb717ea03c74bcc70570fb6aa857" translate="yes" xml:space="preserve">
          <source>For more information about Angular browser support, see &lt;a href=&quot;browser-support&quot;&gt;Browser Support&lt;/a&gt;.</source>
          <target state="translated">有关Angular浏览器支持的更多信息，请参见&lt;a href=&quot;browser-support&quot;&gt;浏览器支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b83bc230f5f7ebae3640de4b47c95fd664eb9cd9" translate="yes" xml:space="preserve">
          <source>For more information about Unicode locale identifiers, see the &lt;a href=&quot;http://cldr.unicode.org/core-spec#Unicode_Language_and_Locale_Identifiers&quot;&gt;CLDR core spec&lt;/a&gt;.</source>
          <target state="translated">有关Unicode语言环境标识符的更多信息，请参阅&lt;a href=&quot;http://cldr.unicode.org/core-spec#Unicode_Language_and_Locale_Identifiers&quot;&gt;CLDR核心规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78841bd0bb58922e17fdaa94b801397143a15d5e" translate="yes" xml:space="preserve">
          <source>For more information about browser support, see the &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/#browser_support&quot;&gt;browser support&lt;/a&gt; section of &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;Service Workers: an Introduction&lt;/a&gt;, Jake Archibald's &lt;a href=&quot;https://jakearchibald.github.io/isserviceworkerready/&quot;&gt;Is Serviceworker ready?&lt;/a&gt;, and &lt;a href=&quot;http://caniuse.com/#feat=serviceworkers&quot;&gt;Can I Use&lt;/a&gt;.</source>
          <target state="translated">有关浏览器支持的更多信息，请参见&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;Service Workers：Introduction&lt;/a&gt;的&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/#browser_support&quot;&gt;浏览器支持&lt;/a&gt;部分，Jake Archibald的&lt;a href=&quot;https://jakearchibald.github.io/isserviceworkerready/&quot;&gt;《 Serviceworker准备好了吗？&lt;/a&gt;，&lt;a href=&quot;http://caniuse.com/#feat=serviceworkers&quot;&gt;我可以使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24f2585c0836152206284cf4cff3db56510414ea" translate="yes" xml:space="preserve">
          <source>For more information about components and how they interact with templates, see &lt;a href=&quot;guide/architecture-components&quot;&gt;Introduction to Components&lt;/a&gt;.</source>
          <target state="translated">有关组件以及它们如何与模板交互的更多信息，请参见&lt;a href=&quot;guide/architecture-components&quot;&gt;《组件简介》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="236e2ef1974979ffd7d8a223a6a77807f766066b" translate="yes" xml:space="preserve">
          <source>For more information about how Google handles security issues, see &lt;a href=&quot;https://www.google.com/about/appsecurity/&quot;&gt;Google's security philosophy&lt;/a&gt;.</source>
          <target state="translated">有关Google如何处理安全问题的更多信息，请参阅&lt;a href=&quot;https://www.google.com/about/appsecurity/&quot;&gt;Google的安全理念&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9964a9dc9a78ceda93aaa2a631966ffc6fd1170f" translate="yes" xml:space="preserve">
          <source>For more information about polyfills, see &lt;a href=&quot;https://www.webcomponents.org/polyfills&quot;&gt;polyfill documentation&lt;/a&gt;.</source>
          <target state="translated">有关polyfill的更多信息，请参见&lt;a href=&quot;https://www.webcomponents.org/polyfills&quot;&gt;polyfill文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d350f1532969099e56068a5d118f77bf4cc913d5" translate="yes" xml:space="preserve">
          <source>For more information about rules and utility methods, see &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/schematics#provided-rules&quot;&gt;Provided Rules&lt;/a&gt;.</source>
          <target state="translated">有关规则和实用程序方法的更多信息，请参见&lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/angular_devkit/schematics#provided-rules&quot;&gt;提供的规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03cbb1e65c44554cf14a341ae94bf0b620b95b32" translate="yes" xml:space="preserve">
          <source>For more information about service workers in general, see &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;Service Workers: an Introduction&lt;/a&gt;.</source>
          <target state="translated">有关一般服务人员的更多信息，请参阅《&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;服务人员：简介》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90f304817a574dd3b93fbb1931e98aa85432d6ea" translate="yes" xml:space="preserve">
          <source>For more information about template input variables, see &lt;a href=&quot;structural-directives#template-input-variable&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">有关模板输入变量的更多信息，请参见《&lt;a href=&quot;structural-directives#template-input-variable&quot;&gt;结构指令》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf7f0f7f896a271fc989b9cb322f11d5d7c62a96" translate="yes" xml:space="preserve">
          <source>For more information about the Angular files generated by &lt;code&gt;ng new&lt;/code&gt;, see &lt;a href=&quot;file-structure&quot;&gt;Workspace and Project File Structure&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;ng new&lt;/code&gt; 生成的Angular文件的更多信息，请参见&lt;a href=&quot;file-structure&quot;&gt;工作区和项目文件结构&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52e6ac022078001a32995d871b8d2865025cbf63" translate="yes" xml:space="preserve">
          <source>For more information about the attacks and mitigations described below, see &lt;a href=&quot;https://www.owasp.org/index.php/Category:OWASP_Guide_Project&quot;&gt;OWASP Guide Project&lt;/a&gt;.</source>
          <target state="translated">有关下面描述的攻击和缓解措施的更多信息，请参见《&lt;a href=&quot;https://www.owasp.org/index.php/Category:OWASP_Guide_Project&quot;&gt;OWASP指南项目》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6be97dad894b1a23556e4ce27d58b024db4a0eb4" translate="yes" xml:space="preserve">
          <source>For more information about the full capabilities of Angular's template syntax, see &lt;a href=&quot;guide/template-syntax&quot;&gt;Template Syntax&lt;/a&gt;.</source>
          <target state="translated">有关Angular模板语法的全部功能的更多信息，请参见&lt;a href=&quot;guide/template-syntax&quot;&gt;模板语法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74fc37bf8585f335d9717920574f7eae721aca6f" translate="yes" xml:space="preserve">
          <source>For more information about using &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;http&quot;&gt;HttpClient guide&lt;/a&gt;.</source>
          <target state="translated">有关使用 &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; 更多信息，请参见&lt;a href=&quot;http&quot;&gt;HttpClient指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="386ad298bea4b0e435d841329d791530a7524e88" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngif#ngIfElse&quot;&gt;ngIfElse&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;../api/common/ngif&quot;&gt;API documentation about NgIf&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/common/ngif#ngIfElse&quot;&gt;ngIfElse&lt;/a&gt;&lt;/code&gt; 的更多信息，请参阅&lt;a href=&quot;../api/common/ngif&quot;&gt;有关NgIf&lt;/a&gt;的API文档。</target>
        </trans-unit>
        <trans-unit id="05beb7f7c6d3b64d67d1a432a8304f888a8cf09e" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;ngOnInit()&lt;/code&gt;, see &lt;a href=&quot;../guide/lifecycle-hooks&quot;&gt;Lifecycle hooks&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;ngOnInit()&lt;/code&gt; 的更多信息，请参见&lt;a href=&quot;../guide/lifecycle-hooks&quot;&gt;生命周期挂钩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f185be688fdab6f10dcf39ed8cac95b298927682" translate="yes" xml:space="preserve">
          <source>For more information on Angular dependency injection, see the &lt;a href=&quot;dependency-injection-providers&quot;&gt;DI Providers&lt;/a&gt; and &lt;a href=&quot;dependency-injection-in-action&quot;&gt;DI in Action&lt;/a&gt; guides.</source>
          <target state="translated">有关Angular依赖项注入的更多信息，请参见&lt;a href=&quot;dependency-injection-providers&quot;&gt;DI提供程序&lt;/a&gt;和&lt;a href=&quot;dependency-injection-in-action&quot;&gt;Action&lt;/a&gt;指南中的DI。</target>
        </trans-unit>
        <trans-unit id="730302ee5a734f817027f2bf006e032d293b1565" translate="yes" xml:space="preserve">
          <source>For more information on JavaScript modules, see &lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt;JavaScript/ECMAScript modules&lt;/a&gt;.</source>
          <target state="translated">有关JavaScript模块的更多信息，请参见&lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt;JavaScript / ECMAScript模块&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff27f98155df9560762be8e0a01925036e0e246e" translate="yes" xml:space="preserve">
          <source>For more information on NgModules, see:</source>
          <target state="translated">关于NgModules的更多信息,请参见。</target>
        </trans-unit>
        <trans-unit id="57fdf07c80db57f529b49d5e717affd9c35a3d1d" translate="yes" xml:space="preserve">
          <source>For more information on injector hierarchy and scoping, see &lt;a href=&quot;providers&quot;&gt;Providers&lt;/a&gt; and the &lt;a href=&quot;dependency-injection&quot;&gt;DI Guide&lt;/a&gt;.</source>
          <target state="translated">有关注入器层次结构和作用域的更多信息，请参阅&lt;a href=&quot;providers&quot;&gt;提供者&lt;/a&gt;和&lt;a href=&quot;dependency-injection&quot;&gt;DI指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81c534993810f308b62b4817239b03fdf30981b3" translate="yes" xml:space="preserve">
          <source>For more information on modules, see &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;.</source>
          <target state="translated">有关模块的更多信息，请参见&lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39452ffd652d163dc4e0fa8775c0130ecde8f80a" translate="yes" xml:space="preserve">
          <source>For more information on modules, see the &lt;a href=&quot;architecture#modules&quot;&gt;Modules&lt;/a&gt; section of the &lt;a href=&quot;architecture&quot;&gt;Architecture Overview&lt;/a&gt;.</source>
          <target state="translated">有关模块的更多信息，请参见《&lt;a href=&quot;architecture&quot;&gt;体系结构概述》&lt;/a&gt;的&amp;ldquo; &lt;a href=&quot;architecture#modules&quot;&gt;模块&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="07e059ddbe4be008aaf0428ed61a37ef6ebcdbc0" translate="yes" xml:space="preserve">
          <source>For more information on property binding, see the &lt;a href=&quot;template-syntax#property-binding&quot;&gt;Property binding&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">有关属性绑定的更多信息，请参见&amp;ldquo; &lt;a href=&quot;template-syntax&quot;&gt;模板语法&amp;rdquo;&lt;/a&gt;页面的&amp;ldquo; &lt;a href=&quot;template-syntax#property-binding&quot;&gt;属性绑定&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="5a8dd2a9dd16c5cd2521045ec3553f71dc3ecef4" translate="yes" xml:space="preserve">
          <source>For more information on routing, see the &lt;a href=&quot;router#router-link&quot;&gt;RouterLink binding&lt;/a&gt; section of the &lt;a href=&quot;router&quot;&gt;Routing &amp;amp; Navigation&lt;/a&gt; page.</source>
          <target state="translated">有关路由的更多信息，请参见&amp;ldquo; &lt;a href=&quot;router&quot;&gt;路由和导航&amp;rdquo;&lt;/a&gt;页面的&lt;a href=&quot;router#router-link&quot;&gt;RouterLink绑定&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="794dd6e4bcfee67b081b6f8fe8556f70c59633f8" translate="yes" xml:space="preserve">
          <source>For more information on style binding, see the &lt;a href=&quot;template-syntax#style-binding&quot;&gt;Style binding&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">有关样式绑定的更多信息，请参见&amp;ldquo; &lt;a href=&quot;template-syntax&quot;&gt;模板语法&amp;rdquo;&lt;/a&gt;页面的&amp;ldquo; &lt;a href=&quot;template-syntax#style-binding&quot;&gt;样式绑定&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="c30b04fe7f32dfdadff87cbb4e8025359204a143" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;ngStyle&lt;/a&gt;&lt;/code&gt; directive, see &lt;a href=&quot;template-syntax#ngStyle&quot;&gt;NgStyle&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">有关 &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;ngStyle&lt;/a&gt;&lt;/code&gt; 指令的更多信息，请参见&amp;ldquo; &lt;a href=&quot;template-syntax&quot;&gt;模板语法&amp;rdquo;&lt;/a&gt;页面的&lt;a href=&quot;template-syntax#ngStyle&quot;&gt;NgStyle&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="8952f7b930f6e954e3b60a48a8cbcaedd9b31542" translate="yes" xml:space="preserve">
          <source>For more information on the acceptable range for each of these numbers and other details see your native internationalization library.</source>
          <target state="translated">有关这些数字的可接受范围的更多信息以及其他细节,请参见您的本地国际化库。</target>
        </trans-unit>
        <trans-unit id="dd88bdbd389d58114d341cf8d34f28359dc62a54" translate="yes" xml:space="preserve">
          <source>For more information on two-way binding with &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;template-syntax#ngModel&quot;&gt;NgModel&amp;mdash;Two-way binding to form elements with &lt;code&gt;[(ngModel)]&lt;/code&gt;&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">有关使用 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 进行双向绑定的更多信息，请参见&lt;a href=&quot;template-syntax#ngModel&quot;&gt;NgModel-使用 &lt;code&gt;[(ngModel)]&lt;/code&gt; &lt;/a&gt; &amp;ldquo; &lt;a href=&quot;template-syntax&quot;&gt;模板语法&amp;rdquo;&lt;/a&gt;页面的[（ngModel）]部分进行双向绑定以形成元素。</target>
        </trans-unit>
        <trans-unit id="99d287becb11b19affa20313753722427b8a4c4b" translate="yes" xml:space="preserve">
          <source>For more information see &lt;a href=&quot;workspace-config&quot;&gt;Workspace Configuration&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;workspace-config&quot;&gt;工作区配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10968353b5aa385ae26af5f3b92c0f4f65a140ed" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;router#activated-route&quot;&gt;Router guide&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;router#activated-route&quot;&gt;路由器指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8a289a1d967f8d205c8f5814a3cc02a8c2ffaf8" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;template-syntax#other-bindings&quot;&gt;Attribute, class, and style bindings&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">有关更多信息，请参见&amp;ldquo; &lt;a href=&quot;template-syntax&quot;&gt;模板语法&amp;rdquo;&lt;/a&gt;页面的&amp;ldquo; &lt;a href=&quot;template-syntax#other-bindings&quot;&gt;属性，类和样式绑定&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="769195363ef40e5cc39446645a5fac8af82ad174" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;template-syntax#property-binding&quot;&gt;Property binding&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">有关更多信息，请参见&amp;ldquo; &lt;a href=&quot;template-syntax&quot;&gt;模板语法&amp;rdquo;&lt;/a&gt;页面的&amp;ldquo; &lt;a href=&quot;template-syntax#property-binding&quot;&gt;属性绑定&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="1ad6b4e720e85666693541a6437ca7c180df2ef6" translate="yes" xml:space="preserve">
          <source>For more information, refer to &lt;a href=&quot;styleguide#file-tree&quot;&gt;this folder and file structure example.&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参考&lt;a href=&quot;styleguide#file-tree&quot;&gt;此文件夹和文件结构示例。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d2a41c7e3c796f9e2c894a9039e362a5b0903ca" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;../guide/browser-support&quot;&gt;Browser Support&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../guide/browser-support&quot;&gt;浏览器支持&lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
