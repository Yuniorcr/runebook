<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="9b63586546cd1a81c918d1e5257f96a507ec674b" translate="yes" xml:space="preserve">
          <source>By convention, the module class name is &lt;code&gt;AppRoutingModule&lt;/code&gt; and it belongs in the &lt;code&gt;app-routing.module.ts&lt;/code&gt; in the &lt;code&gt;src/app&lt;/code&gt; folder.</source>
          <target state="translated">按照惯例，模块类名是 &lt;code&gt;AppRoutingModule&lt;/code&gt; 和它所属的 &lt;code&gt;app-routing.module.ts&lt;/code&gt; 在 &lt;code&gt;src/app&lt;/code&gt; 文件夹中。</target>
        </trans-unit>
        <trans-unit id="03a4df132d346ecc03036957b443d37171ef0e22" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; supports the following &lt;code&gt;macroTasks&lt;/code&gt;.</source>
          <target state="translated">默认情况下， &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; 支持以下 &lt;code&gt;macroTasks&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bf91cf79be5a08d74ebc94a4d5ee160fbcd355c" translate="yes" xml:space="preserve">
          <source>By default no files are replaced. You can add file replacements for specific build targets. For example:</source>
          <target state="translated">默认情况下,没有文件被替换。您可以为特定的构建目标添加文件替换。例如</target>
        </trans-unit>
        <trans-unit id="51695b957eb12e3eaecfb926c54f3ed8f96364b1" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;.ts&lt;/code&gt; file supplied in the &lt;code&gt;files&lt;/code&gt; field is assumed to be the library index. If more than one &lt;code&gt;.ts&lt;/code&gt; file is specified, &lt;code&gt;libraryIndex&lt;/code&gt; is used to select the file to use. If more than one &lt;code&gt;.ts&lt;/code&gt; file is supplied without a &lt;code&gt;libraryIndex&lt;/code&gt;, an error is produced.</source>
          <target state="translated">默认情况下， &lt;code&gt;files&lt;/code&gt; 字段中提供的 &lt;code&gt;.ts&lt;/code&gt; 文件被假定为库索引。如果指定了多个 &lt;code&gt;.ts&lt;/code&gt; 文件，则使用 &lt;code&gt;libraryIndex&lt;/code&gt; 选择要使用的文件。如果提供了多个不带 &lt;code&gt;libraryIndex&lt;/code&gt; 的 &lt;code&gt;.ts&lt;/code&gt; 文件，则会产生错误。</target>
        </trans-unit>
        <trans-unit id="efd8650003e279eb6e8e6a15f88cb26404635663" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; supports the following macro tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e8b162932a44f38caaa31ef309abf5c60257bd" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;@&lt;a href=&quot;../api/core/contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt; queries will only search direct child nodes in the DOM hierarchy (previously, they would search any nesting level in the DOM as long as another directive wasn't matched above it). See further &lt;a href=&quot;ivy-compatibility-examples#content-children-descendants&quot;&gt;details&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5914dfa1fd7ba2af1bd87033b229c44bc750e76" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ng new&lt;/code&gt; creates an initial skeleton application at the root level of the workspace, along with its end-to-end tests. The skeleton is for a simple Welcome application that is ready to run and easy to modify. The root-level application has the same name as the workspace, and the source files reside in the &lt;code&gt;src/&lt;/code&gt; subfolder of the workspace.</source>
          <target state="translated">默认情况下， &lt;code&gt;ng new&lt;/code&gt; 在工作空间的根级别创建一个初始框架应用程序，并进行端到端测试。该框架用于准备运行且易于修改的简单&amp;ldquo;欢迎&amp;rdquo;应用程序。根级应用程序与工作空间具有相同的名称，源文件位于工作空间的 &lt;code&gt;src/&lt;/code&gt; 子文件夹中。</target>
        </trans-unit>
        <trans-unit id="fdde175d8d5cd355f83e0d12cd962bd43d0f6ace" translate="yes" xml:space="preserve">
          <source>By default, Angular always starts at the current &lt;code&gt;&lt;a href=&quot;../api/core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; and keeps searching all the way up. Modifiers allow you to change the starting (self) or ending location.</source>
          <target state="translated">默认情况下，Angular始终从当前的 &lt;code&gt;&lt;a href=&quot;../api/core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 开始，并一直向上搜索。修饰符使您可以更改开始（自己）或结束位置。</target>
        </trans-unit>
        <trans-unit id="5ee3791d4cd5c129149bc38614bdd1a727c6dd98" translate="yes" xml:space="preserve">
          <source>By default, Angular change detection will also run on the component for every AngularJS &lt;code&gt;$digest&lt;/code&gt; cycle. If you wish to only have change detection run when the inputs change, you can set &lt;code&gt;propagateDigest&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; when calling &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c246f990199a0a6cf74efb68b5e6a57d51a1c478" translate="yes" xml:space="preserve">
          <source>By default, Angular only contains locale data for &lt;code&gt;en-US&lt;/code&gt;. If you set the value of &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; to another locale, you must import locale data for that new locale. The CLI imports the locale data for you when you use the parameter &lt;code&gt;--configuration&lt;/code&gt; with &lt;code&gt;ng serve&lt;/code&gt; and &lt;code&gt;ng build&lt;/code&gt;.</source>
          <target state="translated">默认情况下，Angular仅包含 &lt;code&gt;en-US&lt;/code&gt; 的语言环境数据。如果将 &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; 的值设置为另一个语言环境，则必须导入该新语言环境的语言环境数据。当您将参数 &lt;code&gt;--configuration&lt;/code&gt; 与 &lt;code&gt;ng serve&lt;/code&gt; 和 &lt;code&gt;ng build&lt;/code&gt; 一起使用时，CLI会为您导入语言环境数据。</target>
        </trans-unit>
        <trans-unit id="c38ab5e3eefabb0e0f4fea157820aa9ee2ccacc6" translate="yes" xml:space="preserve">
          <source>By default, Angular uses the locale &lt;code&gt;en-US&lt;/code&gt;, which is English as spoken in the United States of America.</source>
          <target state="translated">默认情况下，Angular使用语言环境 &lt;code&gt;en-US&lt;/code&gt; ，这是美利坚合众国所说的英语。</target>
        </trans-unit>
        <trans-unit id="7d6489a7440ae99238e395cfb6007fae40fb09ae" translate="yes" xml:space="preserve">
          <source>By default, NgModules are eagerly loaded, which means that as soon as the app loads, so do all the NgModules, whether or not they are immediately necessary. For large apps with lots of routes, consider lazy loading&amp;mdash;a design pattern that loads NgModules as needed. Lazy loading helps keep initial bundle sizes smaller, which in turn helps decrease load times.</source>
          <target state="translated">默认情况下，会立即加载NgModules，这意味着在应用程序加载后，所有NgModules都会立即加载，无论是否立即需要它们。对于具有大量路由的大型应用程序，请考虑延迟加载-一种根据需要加载NgModules的设计模式。延迟加载有助于使初始包大小更小，从而有助于减少加载时间。</target>
        </trans-unit>
        <trans-unit id="4a2fd556d26003ca54a9e732916c3e8fb2840bae" translate="yes" xml:space="preserve">
          <source>By default, a &lt;code&gt;production&lt;/code&gt; configuration is defined, and the &lt;code&gt;ng build&lt;/code&gt; command has &lt;code&gt;--prod&lt;/code&gt; option that builds using this configuration. The &lt;code&gt;production&lt;/code&gt; configuration sets defaults that optimize the app in a number of ways, such as bundling files, minimizing excess whitespace, removing comments and dead code, and rewriting code to use short, cryptic names (&quot;minification&quot;).</source>
          <target state="translated">默认情况下，定义了 &lt;code&gt;production&lt;/code&gt; 配置，并且 &lt;code&gt;ng build&lt;/code&gt; 命令具有 &lt;code&gt;--prod&lt;/code&gt; 选项，该选项使用此配置进行构建。的 &lt;code&gt;production&lt;/code&gt; 配置集合的默认值，以优化该应用在许多方面，如捆绑文件，最小化多余的空白，删除注释和死代码，重写代码以用短，神秘的名字（&amp;ldquo;缩小&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="6104e2784b3d5459f07069827571091b50f300af" translate="yes" xml:space="preserve">
          <source>By default, a live example link opens a Stackblitz in a separate browser tab. You can embed the Stackblitz within the guide page itself by adding the &lt;code&gt;embedded&lt;/code&gt; attribute.</source>
          <target state="translated">默认情况下，实时示例链接在单独的浏览器选项卡中打开Stackblitz。您可以通过添加 &lt;code&gt;embedded&lt;/code&gt; 属性将Stackblitz嵌入指南页面本身。</target>
        </trans-unit>
        <trans-unit id="e81e3b2c1800abfb9519aca9fcc5374fb1a22984" translate="yes" xml:space="preserve">
          <source>By default, all validators are run after every form value change. With synchronous validators, this will not likely have a noticeable impact on application performance. However, it's common for async validators to perform some kind of HTTP request to validate the control. Dispatching an HTTP request after every keystroke could put a strain on the backend API, and should be avoided if possible.</source>
          <target state="translated">默认情况下,所有的验证器都是在每次表单值变化后运行。对于同步验证器,这可能不会对应用程序的性能产生明显的影响。然而,异步验证器通常会执行某种HTTP请求来验证控件。在每次击键后发送HTTP请求可能会对后端API造成压力,应尽可能避免。</target>
        </trans-unit>
        <trans-unit id="c3c433defa9a4588ae9a20ebf49bc2cfc189916b" translate="yes" xml:space="preserve">
          <source>By default, all validators run after every form value change. With synchronous validators, this does not normally have a noticeable impact on application performance. Async validators, however, commonly perform some kind of HTTP request to validate the control. Dispatching an HTTP request after every keystroke could put a strain on the backend API, and should be avoided if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb054c411f164d76b27f15037b08121e4e98dde4" translate="yes" xml:space="preserve">
          <source>By default, an Angular app always has at least one entry component, the root component, &lt;code&gt;AppComponent&lt;/code&gt;. Its purpose is to serve as a point of entry into the app, that is, you bootstrap it to launch the app.</source>
          <target state="translated">默认情况下，Angular应用程序始终至少具有一个输入组件，即根组件 &lt;code&gt;AppComponent&lt;/code&gt; 。其目的是充当应用程序的切入点，即，您将其引导以启动应用程序。</target>
        </trans-unit>
        <trans-unit id="d95d52a0fff91150c8cb9f7bb76b9d498b34a5e8" translate="yes" xml:space="preserve">
          <source>By default, an interceptor sends this header on all mutating requests (such as POST) to relative URLs, but not on GET/HEAD requests or on requests with an absolute URL.</source>
          <target state="translated">默认情况下,拦截器会在所有针对相对URL的突变请求(如POST)中发送这个头,但不会在GET/HEAD请求或带有绝对URL的请求中发送。</target>
        </trans-unit>
        <trans-unit id="29612b8986641e9c62a3c15504623ae3e86c6192" translate="yes" xml:space="preserve">
          <source>By default, if the control has children, all children are enabled.</source>
          <target state="translated">默认情况下,如果控件有子代,则启用所有子代。</target>
        </trans-unit>
        <trans-unit id="e243dc5ef99c3ce4659ac5ffc13cb25f6f1f760c" translate="yes" xml:space="preserve">
          <source>By default, it also updates the value and validity of its ancestors.</source>
          <target state="translated">默认情况下,它也会更新其祖先的值和有效性。</target>
        </trans-unit>
        <trans-unit id="86d26dd91eba4447650188c535f2705b5cd1b74d" translate="yes" xml:space="preserve">
          <source>By default, legacy browsers such as IE 9-11 are ignored, and the compilation target is ES2015. As a result, this produces two builds, and differential loading is enabled. If you ignore browsers without ES2015 support, a single build is produced. To see the build result for differential loading based on different configurations, refer to the table below.</source>
          <target state="translated">默认情况下,遗留的浏览器如IE 9-11被忽略,编译目标是ES2015。因此,这将产生两个构建,并且启用了差分加载。如果您忽略不支持ES2015的浏览器,则会生成一个单一的构建。要查看基于不同配置的差异加载的构建结果,请参考下表。</target>
        </trans-unit>
        <trans-unit id="ebe2688e1fdccd8bbe9e374fafe40c23c0d3febd" translate="yes" xml:space="preserve">
          <source>By default, pipes are defined as &lt;em&gt;pure&lt;/em&gt; so that Angular executes the pipe only when it detects a &lt;em&gt;pure change&lt;/em&gt; to the input value. A pure change is either a change to a primitive input value (such as &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, or &lt;code&gt;Symbol&lt;/code&gt;), or a changed object reference (such as &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, or &lt;code&gt;Object&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4d24c550e53bc0f5bebd201e971a470cb6283c" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;spawn()&lt;/code&gt; method outputs everything to the process standard output and error. To make it easier to test and debug, we can forward the output to the CLI Builder logger instead. This also allows the builder itself to be executed in a separate process, even if the standard output and error are deactivated (as in an &lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron app&lt;/a&gt;).</source>
          <target state="translated">默认情况下， &lt;code&gt;spawn()&lt;/code&gt; 方法将所有内容输出到流程标准输出和错误。为了简化测试和调试，我们可以将输出转发到CLI Builder记录器。即使禁用了标准输出和错误（例如在&lt;a href=&quot;https://electronjs.org/&quot;&gt;Electron应用程序中&lt;/a&gt;），这也允许构建器本身在单独的过程中执行。</target>
        </trans-unit>
        <trans-unit id="1dfbd486aab7d0d92e1d421a68656a3e0c20983d" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;xi18n&lt;/code&gt; command generates a translation file named &lt;code&gt;messages.xlf&lt;/code&gt; in the &lt;a href=&quot;https://en.wikipedia.org/wiki/XLIFF&quot;&gt;XML Localization Interchange File Format (XLIFF, version 1.2)&lt;/a&gt;.</source>
          <target state="translated">默认情况下， &lt;code&gt;xi18n&lt;/code&gt; 命令生成一个名为翻译文件 &lt;code&gt;messages.xlf&lt;/code&gt; 在&lt;a href=&quot;https://en.wikipedia.org/wiki/XLIFF&quot;&gt;XML本地化交换文件格式（XLIFF，1.2版）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d941e4f6148aedde9261a9a0cf15f5ba8a31113e" translate="yes" xml:space="preserve">
          <source>By default, the AOT compiler removes whitespace characters as follows:</source>
          <target state="translated">默认情况下,AOT编译器删除空白字符如下。</target>
        </trans-unit>
        <trans-unit id="a8a7612d9fccf041650c5c969b9038616f83e502" translate="yes" xml:space="preserve">
          <source>By default, the Angular CLI command &lt;a href=&quot;cli/generate&quot;&gt;&lt;code&gt;ng generate component&lt;/code&gt;&lt;/a&gt; generates components with a template file. You can override that with:</source>
          <target state="translated">默认情况下，Angular CLI命令&lt;a href=&quot;cli/generate&quot;&gt; &lt;code&gt;ng generate component&lt;/code&gt; &lt;/a&gt; generate component会使用模板文件生成组件。您可以使用以下方法覆盖它：</target>
        </trans-unit>
        <trans-unit id="daa76f3155ef0748e4e8ab3fd4aaa4c1fd24528b" translate="yes" xml:space="preserve">
          <source>By default, the Angular CLI command &lt;a href=&quot;cli/generate&quot;&gt;&lt;code&gt;ng generate service&lt;/code&gt;&lt;/a&gt; registers a provider with the root injector for your service by including provider metadata in the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator. The tutorial uses this method to register the provider of HeroService class definition.</source>
          <target state="translated">默认情况下，Angular CLI命令&lt;a href=&quot;cli/generate&quot;&gt; &lt;code&gt;ng generate service&lt;/code&gt; &lt;/a&gt;通过在 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰器中包含提供程序元数据，向您的服务的根注入程序注册提供程序。本教程使用此方法注册HeroService类定义的提供程序。</target>
        </trans-unit>
        <trans-unit id="b2bbe47a91244e664efba1dcfef903739625e635" translate="yes" xml:space="preserve">
          <source>By default, the Angular CLI command &lt;code&gt;ng generate service&lt;/code&gt; registers a provider with the &lt;em&gt;root injector&lt;/em&gt; for your service by including provider metadata, that is &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; in the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator.</source>
          <target state="translated">默认情况下，Angular CLI命令 &lt;code&gt;ng generate service&lt;/code&gt; 通过在 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;（）装饰器中包含providerIn &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; &lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;提供&lt;/a&gt;者元数据，为您的服务的&lt;em&gt;根注入器&lt;/em&gt;注册一个提供者。</target>
        </trans-unit>
        <trans-unit id="3e6a163342aac7337face85f212f89b9c69e5dd3" translate="yes" xml:space="preserve">
          <source>By default, the Angular CLI command &lt;code&gt;ng generate service&lt;/code&gt; registers a provider with the &lt;em&gt;root injector&lt;/em&gt; for your service by including provider metadata, that is &lt;code&gt;providedIn: 'root'&lt;/code&gt; in the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b07b4ab8b7660869dbbd653625f529f802c444b" translate="yes" xml:space="preserve">
          <source>By default, the CLI command &lt;code&gt;ng new my-app&lt;/code&gt; creates a workspace folder named &quot;my-app&quot; and generates a new application skeleton in a &lt;code&gt;src/&lt;/code&gt; folder at the top level of the workspace. A newly generated application contains source files for a root module, with a root component and template.</source>
          <target state="translated">默认情况下，CLI命令 &lt;code&gt;ng new my-app&lt;/code&gt; 将创建一个名为&amp;ldquo; my-app&amp;rdquo;的工作区文件夹，并在该工作区顶层的 &lt;code&gt;src/&lt;/code&gt; 文件夹中生成一个新的应用程序框架。新生成的应用程序包含根模块的源文件，以及根组件和模板。</target>
        </trans-unit>
        <trans-unit id="55eded90bf61b8ed39ccdda5d400e9b5e0adf278" translate="yes" xml:space="preserve">
          <source>By default, the change detector assumes that the object instance identifies the node in the iterable. When this function is supplied, the directive uses the result of calling this function to identify the item node, rather than the identity of the object itself.</source>
          <target state="translated">默认情况下,变化检测器假设对象实例标识了可迭代中的节点。当提供这个函数时,指令使用调用这个函数的结果来识别项目节点,而不是对象本身的标识。</target>
        </trans-unit>
        <trans-unit id="793355b486faa68c3f5a96afa98bcba17673aaaa" translate="yes" xml:space="preserve">
          <source>By default, the command creates a file named &lt;code&gt;messages.xlf&lt;/code&gt; in your project's root directory.</source>
          <target state="translated">默认情况下，该命令在项目的根目录中创建一个名为 &lt;code&gt;messages.xlf&lt;/code&gt; 的文件。</target>
        </trans-unit>
        <trans-unit id="ff3064f6c11c8a9e2889671ed9f14030d3fa084f" translate="yes" xml:space="preserve">
          <source>By default, the compiler replaces decorators with a static field in the class, which allows advanced tree-shakers like &lt;a href=&quot;https://github.com/google/closure-compiler&quot;&gt;Closure compiler&lt;/a&gt; to remove unused classes.</source>
          <target state="translated">默认情况下，编译器用类中的静态字段替换装饰器，这允许像&lt;a href=&quot;https://github.com/google/closure-compiler&quot;&gt;Closure编译器&lt;/a&gt;这样的高级摇树器删除未使用的类。</target>
        </trans-unit>
        <trans-unit id="f450f93c44c5e18dcca944c8300e5aee18bed777" translate="yes" xml:space="preserve">
          <source>By default, the directive constructs the new URL using the given query parameters. The example generates the link: &lt;code&gt;/user/bob?debug=true#education&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6300bbcf1bdafeb32e8a213f18ff110a8c0cc5f" translate="yes" xml:space="preserve">
          <source>By default, the files for a new initial app (with the same name as the workspace) are placed in the &lt;code&gt;src/&lt;/code&gt; subfolder. Corresponding end-to-end tests are placed in the &lt;code&gt;e2e/&lt;/code&gt; subfolder.</source>
          <target state="translated">默认情况下，新的初始应用程序（与工作空间名称相同）的文件位于 &lt;code&gt;src/&lt;/code&gt; 子文件夹中。相应的端到端测试位于 &lt;code&gt;e2e/&lt;/code&gt; 子文件夹中。</target>
        </trans-unit>
        <trans-unit id="12c9eb07e80405f04143527b8f231fd1a5c26efa" translate="yes" xml:space="preserve">
          <source>By default, the files for a new initial application (with the same name as the workspace) are placed in the &lt;code&gt;src/&lt;/code&gt; subfolder. Corresponding end-to-end tests are placed in the &lt;code&gt;e2e/&lt;/code&gt; subfolder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8582915bde1d5201e954cc693f0f835f7a95e185" translate="yes" xml:space="preserve">
          <source>By default, the injector throws an error when it can't find a requested provider. The &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; decorator means not finding the service is OK. The injector returns &lt;code&gt;null&lt;/code&gt;, the &lt;code&gt;parentModule&lt;/code&gt; parameter is null, and the constructor concludes uneventfully.</source>
          <target state="translated">默认情况下，注入器在找不到请求的提供程序时抛出错误。该 &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; 装饰手段没有找到服务OK。注入程序返回 &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;parentModule&lt;/code&gt; 参数为null，构造函数顺利结束。</target>
        </trans-unit>
        <trans-unit id="f59494e4c795cdee22a3b89f3a638403a11d22a5" translate="yes" xml:space="preserve">
          <source>By default, the router checks URL elements from the left to see if the URL matches a given path, and stops when there is a match. For example, '/team/11/user' matches 'team/:id'.</source>
          <target state="translated">默认情况下,路由器从左边开始检查URL元素是否与给定的路径相匹配,当有匹配时就停止。例如,'/team/11/user'匹配'team/:id'。</target>
        </trans-unit>
        <trans-unit id="493054ab4174a97013d1543ce232a2beefc82809" translate="yes" xml:space="preserve">
          <source>By default, the router re-uses a component instance when it re-navigates to the same component type without visiting a different component first. The route parameters could change each time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a43a86194b96294c0a89a6c30e5587c974c168c" translate="yes" xml:space="preserve">
          <source>By default, the target is &lt;code&gt;es2015&lt;/code&gt;, which is supported only in modern browsers. You can configure the target to &lt;code&gt;es5&lt;/code&gt; to specifically support legacy browsers. &lt;a href=&quot;deployment#differential-loading&quot;&gt;Differential loading&lt;/a&gt; is also provided by the Angular CLI to support modern, and legacy browsers with separate bundles.</source>
          <target state="translated">默认情况下，目标是 &lt;code&gt;es2015&lt;/code&gt; ，仅现代浏览器支持。您可以将目标配置为 &lt;code&gt;es5&lt;/code&gt; 以专门支持旧版浏览器。Angular CLI还提供了&lt;a href=&quot;deployment#differential-loading&quot;&gt;差异加载&lt;/a&gt;，以支持具有单独捆绑软件的现代和旧式浏览器。</target>
        </trans-unit>
        <trans-unit id="41868320016c660205217a38b2ee8095f3d655f6" translate="yes" xml:space="preserve">
          <source>By default, the target is &lt;code&gt;es2015&lt;/code&gt;. If you are targeting &lt;code&gt;es5&lt;/code&gt;, you still have newer type declarations due to the list of declaration files included:</source>
          <target state="translated">默认情况下，目标是 &lt;code&gt;es2015&lt;/code&gt; 。如果您以 &lt;code&gt;es5&lt;/code&gt; 为目标，则由于包含的声明文件列表，您仍然拥有较新的类型声明：</target>
        </trans-unit>
        <trans-unit id="b58ea2ecb9512652cbb7eb35d524285feb8fe024" translate="yes" xml:space="preserve">
          <source>By default, these criteria are:</source>
          <target state="translated">默认情况下,这些标准是:</target>
        </trans-unit>
        <trans-unit id="ab5df54074fad35dbef13874a3f7d7d588ce689d" translate="yes" xml:space="preserve">
          <source>By default, this command creates the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5efeabdc4761db17da76ed72cd97d01e3582f0" translate="yes" xml:space="preserve">
          <source>By default, this feature is disabled. To enable it, set a global flag before importing &lt;code&gt;zone-testing&lt;/code&gt;.</source>
          <target state="translated">默认情况下，此功能处于禁用状态。要启用它，请在导入 &lt;code&gt;zone-testing&lt;/code&gt; 之前设置一个全局标志。</target>
        </trans-unit>
        <trans-unit id="737d872d4aa1137431d336c09f5cba06097c9d53" translate="yes" xml:space="preserve">
          <source>By default, this is true, unless a user calls &lt;code&gt;&lt;a href=&quot;enableprodmode&quot;&gt;enableProdMode&lt;/a&gt;&lt;/code&gt; before calling this.</source>
          <target state="translated">默认情况下，这是正确的，除非用户在调用它之前调用 &lt;code&gt;&lt;a href=&quot;enableprodmode&quot;&gt;enableProdMode&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="895cfca638aab96c2e4c68a44a374a362e111c0c" translate="yes" xml:space="preserve">
          <source>By default, throws an error when zero items are found. Set the &lt;code&gt;&lt;a href=&quot;animationqueryoptions#optional&quot;&gt;optional&lt;/a&gt;&lt;/code&gt; flag to ignore this error. For example:</source>
          <target state="translated">默认情况下，找到零个项目时引发错误。设置 &lt;code&gt;&lt;a href=&quot;animationqueryoptions#optional&quot;&gt;optional&lt;/a&gt;&lt;/code&gt; 标志以忽略此错误。例如：</target>
        </trans-unit>
        <trans-unit id="5fd5fcb1072b92b6f5bc472ee47670880fb0c5a7" translate="yes" xml:space="preserve">
          <source>By default, throws an error when zero items are found. Set the &lt;code&gt;optional&lt;/code&gt; flag to ignore this error. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b38aef427efb542e3ceae80895c955069c64dfc" translate="yes" xml:space="preserve">
          <source>By default, when a translation is missing, the build succeeds but generates a warning such as &lt;code&gt;Missing translation for &lt;a href=&quot;../api/common/http/httperrorresponse#message&quot;&gt;message&lt;/a&gt; &quot;foo&quot;&lt;/code&gt;. You can configure the level of warning that is generated by the Angular compiler:</source>
          <target state="translated">默认情况下，当缺少翻译时，构建会成功，但会生成警告，例如 &lt;code&gt;Missing translation for &lt;a href=&quot;../api/common/http/httperrorresponse#message&quot;&gt;message&lt;/a&gt; &quot;foo&quot;&lt;/code&gt; &amp;ldquo; foo&amp;rdquo; 缺少翻译。您可以配置Angular编译器生成的警告级别：</target>
        </trans-unit>
        <trans-unit id="dfa3ff650bd670a309dbed225d522ed208796f63" translate="yes" xml:space="preserve">
          <source>By default, when you use this pattern, you will see a deprecation warning once in dev mode. You can choose to silence this warning by providing a config for &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; at import time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f88cf4b54ca18c2f47342d965f1bdec83e0be88" translate="yes" xml:space="preserve">
          <source>By default, when you use this pattern, you will see a deprecation warning once in dev mode. You can choose to silence this warning by providing a config for &lt;code&gt;&lt;a href=&quot;reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; at import time:</source>
          <target state="translated">默认情况下，使用此模式时，在开发人员模式下，您将一次看到弃用警告。您可以通过在导入时为 &lt;code&gt;&lt;a href=&quot;reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 提供一个配置来选择静默此警告：</target>
        </trans-unit>
        <trans-unit id="04e414d22540c0f1ae4f946db786ae55fdc12b7a" translate="yes" xml:space="preserve">
          <source>By default, writes output to a folder named dist/ in the current project.</source>
          <target state="translated">默认情况下,将输出写入当前项目中名为dist/的文件夹。</target>
        </trans-unit>
        <trans-unit id="c3cb8d70cbac2bcc7e76ff885542f0fcc2ff7f4e" translate="yes" xml:space="preserve">
          <source>By following a few guidelines, you can use property binding in a way that helps you minimize bugs and keep your code readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9271c7490bf52784e0cec6bc3721d628648332" translate="yes" xml:space="preserve">
          <source>By injecting the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;, you are configuring the component to use a &lt;em&gt;service&lt;/em&gt;. The &lt;a href=&quot;https://angular.io/start/start/start-data&quot;&gt;Managing Data&lt;/a&gt; page covers services in more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd1c464bf12f5fb5b52349cdf92a0a00b334436" translate="yes" xml:space="preserve">
          <source>By pasting a &quot;deep link&quot; URL into the browser address bar that identifies the hero to display.</source>
          <target state="translated">通过在浏览器地址栏中粘贴 &quot;深度链接 &quot;网址,确定要显示的英雄。</target>
        </trans-unit>
        <trans-unit id="bde6963f476446a45cc29e3b93aaf4ef55f49da3" translate="yes" xml:space="preserve">
          <source>By providing &lt;code&gt;VillainsService&lt;/code&gt; in the &lt;code&gt;VillainsListComponent&lt;/code&gt; metadata and nowhere else, the service becomes available only in the &lt;code&gt;VillainsListComponent&lt;/code&gt; and its sub-component tree.</source>
          <target state="translated">通过在 &lt;code&gt;VillainsListComponent&lt;/code&gt; 元数据中提供 &lt;code&gt;VillainsService&lt;/code&gt; ，并且仅在 &lt;code&gt;VillainsListComponent&lt;/code&gt; 及其子组件树中提供该服务。</target>
        </trans-unit>
        <trans-unit id="22e598ce57a7b24da0404d550c8e77311fe81cd0" translate="yes" xml:space="preserve">
          <source>By re-exporting &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;, any other module that imports this &lt;code&gt;SharedModule&lt;/code&gt;, gets access to directives like &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;NgFor&lt;/code&gt; from &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; and can bind to component properties with &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt;, a directive in the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">通过重新导出 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; ，任何其他模块，其进口此 &lt;code&gt;SharedModule&lt;/code&gt; 时，获取访问像指令 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;NgFor&lt;/code&gt; 从 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 和可以结合到组件属性与 &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; ，在一个指令 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="283fdefdd6d1f0a83829f00ef235e73a7152b4e1" translate="yes" xml:space="preserve">
          <source>By setting &lt;code&gt;styles&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;&lt;/code&gt; metadata.</source>
          <target state="translated">通过设置 &lt;code&gt;styles&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;&lt;/code&gt; 元数据。</target>
        </trans-unit>
        <trans-unit id="4341b69200e3b14c9db44ea2c736fe081b32c06c" translate="yes" xml:space="preserve">
          <source>By setting &lt;code&gt;styles&lt;/code&gt; or &lt;code&gt;styleUrls&lt;/code&gt; metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5608c797c242885100944e126f63aad39aac2d18" translate="yes" xml:space="preserve">
          <source>By supplying an object in the same shape, you satisfy the expectations of &lt;code&gt;items&lt;/code&gt; when Angular evaluates the expression &lt;code&gt;currentItems&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cec4402059ea00c6d712a42340d4c89e450d6df" translate="yes" xml:space="preserve">
          <source>By the end of this tutorial you will be able to do the following:</source>
          <target state="translated">在本教程结束时,您将能够做到以下几点。</target>
        </trans-unit>
        <trans-unit id="f210331839801b71d9bdc60036a3a6c72ef3ca14" translate="yes" xml:space="preserve">
          <source>By transcluding or projecting content from the other framework. ngUpgrade bridges the related concepts of AngularJS transclusion and Angular content projection together.</source>
          <target state="translated">ngUpgrade将AngularJS transclusion和Angular content projection的相关概念衔接在一起。</target>
        </trans-unit>
        <trans-unit id="dadb9f1898ae42aeddccb80695bb2ff36cdd5430" translate="yes" xml:space="preserve">
          <source>By using a component from the other framework: An AngularJS template using an Angular component, or an Angular template using an AngularJS component.</source>
          <target state="translated">通过使用其他框架的组件。一个AngularJS模板使用Angular组件,或者一个Angular模板使用AngularJS组件。</target>
        </trans-unit>
        <trans-unit id="6d317743f301e033fe05c5da5516eefef9fab01e" translate="yes" xml:space="preserve">
          <source>By using the In-memory Web API, you won't have to set up a server to learn about &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">通过使用内存中的Web API，您无需设置服务器即可了解 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24b79b9a8cccf72bf74da2766e3aa142e67bff38" translate="yes" xml:space="preserve">
          <source>Bypass security and trust the given value to be a safe resource URL, i.e. a location that may be used to load executable code from, like &lt;code&gt;&amp;lt;script src&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;iframe src&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">绕过安全性并将给定值信任为安全资源URL，即可以用来从中加载可执行代码的位置，例如 &lt;code&gt;&amp;lt;script src&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;iframe src&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3db6a85413c3a62448f8e24b9cd62b97af777782" translate="yes" xml:space="preserve">
          <source>Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used in hyperlinks or &lt;code&gt;&amp;lt;img src&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">绕过安全性并将给定值信任为安全样式URL，即可以在超链接或 &lt;code&gt;&amp;lt;img src&amp;gt;&lt;/code&gt; 中使用的值。</target>
        </trans-unit>
        <trans-unit id="0a85a9de1b624d9a281f803426a0c32bef3e8171" translate="yes" xml:space="preserve">
          <source>Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML is unsafe (e.g. contains &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags) and the code should be executed. The sanitizer will leave safe HTML intact, so in most situations this method should not be used.</source>
          <target state="translated">绕过安全性并信任给定的值是安全的HTML。仅当绑定的HTML不安全（例如，包含 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记）并且应执行代码时才使用此功能。清理程序将保留完整的安全HTML，因此在大多数情况下不应使用此方法。</target>
        </trans-unit>
        <trans-unit id="22734a3b413e2ed5c26b1b233ef8006fccfd2ce7" translate="yes" xml:space="preserve">
          <source>Bypass security and trust the given value to be safe JavaScript.</source>
          <target state="translated">绕过安全性,相信给定的值是安全的JavaScript。</target>
        </trans-unit>
        <trans-unit id="589711522f3adf8b9c47b84407ddfb6f212d4894" translate="yes" xml:space="preserve">
          <source>Bypass security and trust the given value to be safe style value (CSS).</source>
          <target state="translated">绕过安全性,相信给定的值是安全样式值(CSS)。</target>
        </trans-unit>
        <trans-unit id="8da3c14fe68d007dd948bc0a37349c8d84280bcd" translate="yes" xml:space="preserve">
          <source>Bypass the proxy</source>
          <target state="translated">绕过代理</target>
        </trans-unit>
        <trans-unit id="06a4bea2f3447ba097746f02424c164f98dfee16" translate="yes" xml:space="preserve">
          <source>Bypassing the service worker</source>
          <target state="translated">绕过服务人员</target>
        </trans-unit>
        <trans-unit id="f5affc58f041a61d25e56378d8de2497b1d1db58" translate="yes" xml:space="preserve">
          <source>CLDR and Angular base their identifiers on &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP47 tags&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a7892d0df4e20dffd1da4a2ba8cfb9cc8d059d" translate="yes" xml:space="preserve">
          <source>CLDR website</source>
          <target state="translated">CLDR网站</target>
        </trans-unit>
        <trans-unit id="f3f49e2d65f9b334363f376775aeebd652cb905d" translate="yes" xml:space="preserve">
          <source>CLI Overview and Command Reference</source>
          <target state="translated">CLI概述和命令参考</target>
        </trans-unit>
        <trans-unit id="0e92b110d4f6d555eade5dd441fe110ec6d62ab6" translate="yes" xml:space="preserve">
          <source>CLI builders</source>
          <target state="translated">CLI建设者</target>
        </trans-unit>
        <trans-unit id="6b72ce98d68681f85db235c515ed234796b0ca1c" translate="yes" xml:space="preserve">
          <source>CLI command-language syntax</source>
          <target state="translated">CLI命令语言语法</target>
        </trans-unit>
        <trans-unit id="0bf433ec5cf4675ef3c8596d8512dfdab2f6f0fd" translate="yes" xml:space="preserve">
          <source>CLI configuration defaults for all projects in the workspace, including configuration options for build, serve, and test tools that the CLI uses, such as &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt;, &lt;a href=&quot;https://karma-runner.github.io/&quot;&gt;Karma&lt;/a&gt;, and &lt;a href=&quot;http://www.protractortest.org/&quot;&gt;Protractor&lt;/a&gt;. For details, see &lt;a href=&quot;workspace-config&quot;&gt;Angular Workspace Configuration&lt;/a&gt;.</source>
          <target state="translated">工作区中所有项目的CLI配置默认值，包括用于CLI使用的构建，服务和测试工具（例如&lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt;，&lt;a href=&quot;https://karma-runner.github.io/&quot;&gt;Karma&lt;/a&gt;和&lt;a href=&quot;http://www.protractortest.org/&quot;&gt;Protractor）的&lt;/a&gt;配置选项。有关详细信息，请参见&lt;a href=&quot;workspace-config&quot;&gt;Angular Workspace配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8caf1ee0de7eeac9fea3c587a7f16ec05c4f45cf" translate="yes" xml:space="preserve">
          <source>CLI-generated tests</source>
          <target state="translated">CLI生成的测试</target>
        </trans-unit>
        <trans-unit id="84e0fad234061448b6aeb61b281e3307ef9f497c" translate="yes" xml:space="preserve">
          <source>COMPILER_OPTIONS</source>
          <target state="translated">COMPILER_OPTIONS</target>
        </trans-unit>
        <trans-unit id="6d430c3fc0de431b42a6f7090a75092e0f1d2fc3" translate="yes" xml:space="preserve">
          <source>COMPOSITION_BUFFER_MODE</source>
          <target state="translated">COMPOSITION_BUFFER_MODE</target>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="4078e32911d6f5d679797645f636c7e696b15e8e" translate="yes" xml:space="preserve">
          <source>CSS @imports</source>
          <target state="translated">CSS @imports</target>
        </trans-unit>
        <trans-unit id="8341ce8d88650eb66817af40baa993cf445ec2f2" translate="yes" xml:space="preserve">
          <source>CSS classes applied</source>
          <target state="translated">应用CSS类</target>
        </trans-unit>
        <trans-unit id="b9b5583437724ee43c4c64a2eb01060aaf2595c8" translate="yes" xml:space="preserve">
          <source>CSS grid layout support in Autoprefixer, which was previously on by default, is off by default in Angular 8 and higher.</source>
          <target state="translated">Autoprefixer中的CSS网格布局支持,之前是默认开启的,在Angular 8及以上版本中,默认关闭。</target>
        </trans-unit>
        <trans-unit id="6e11144489b2f269249757fca859d7096307f304" translate="yes" xml:space="preserve">
          <source>CUSTOM_ELEMENTS_SCHEMA</source>
          <target state="translated">CUSTOM_ELEMENTS_SCHEMA</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="4a00e5c16a57baab50a03051316c6b1d58d8a227" translate="yes" xml:space="preserve">
          <source>Caching HTTP requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7d7a23879dbe205ad31457186146482db2c33f" translate="yes" xml:space="preserve">
          <source>Caching an application is like installing a native application. The application is cached as one unit, and all files update together.</source>
          <target state="translated">缓存一个应用程序就像安装一个本地应用程序一样。应用程序作为一个单元进行缓存,所有文件一起更新。</target>
        </trans-unit>
        <trans-unit id="c7dcd8556967edbf9dc15b2dd9c7696a8a73d43b" translate="yes" xml:space="preserve">
          <source>Caching behavior; for example, &lt;code&gt;If-Modified-Since&lt;/code&gt;</source>
          <target state="translated">缓存行为；例如， &lt;code&gt;If-Modified-Since&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b46de0011e7af89a350bd98b9a1fd29a77cc8cf3" translate="yes" xml:space="preserve">
          <source>Caching layers in between the origin server and the end user could serve stale content.</source>
          <target state="translated">源服务器和终端用户之间的缓存层可以提供陈旧的内容。</target>
        </trans-unit>
        <trans-unit id="261eb580b5dbd737463584be0e96288856d0fcff" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; methods &lt;em&gt;within&lt;/em&gt; a &lt;code&gt;beforeEach()&lt;/code&gt; to ensure a fresh start before each individual test.</source>
          <target state="translated">呼叫 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 方法&lt;em&gt;中的&lt;/em&gt;一个 &lt;code&gt;beforeEach()&lt;/code&gt; ，以保证每个单独测试之前，一个新的开始。</target>
        </trans-unit>
        <trans-unit id="55478a8e2da2b9d13233927ad4ce964932c556ef" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;configureTestingModule&lt;/code&gt; to refine the testing module configuration for a particular set of tests by adding and removing imports, declarations (of components, directives, and pipes), and providers.</source>
          <target state="translated">调用 &lt;code&gt;configureTestingModule&lt;/code&gt; 可以通过添加和删除导入，组件（指令，管道和指令的声明）和提供程序来优化特定测试集的测试模块配置。</target>
        </trans-unit>
        <trans-unit id="8cc3a4f15b0cb9d21d181ba24371c672d6b47e7d" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;request.flush()&lt;/code&gt; with an error message, as seen in the following example.</source>
          <target state="translated">出现错误消息，请调用 &lt;code&gt;request.flush()&lt;/code&gt; ，如以下示例所示。</target>
        </trans-unit>
        <trans-unit id="57c7fc903cfd1566d2b98e6e679bed67b09b10a6" translate="yes" xml:space="preserve">
          <source>Call it in &lt;code&gt;ngOnInit()&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;ngOnInit()&lt;/code&gt; 中调用它</target>
        </trans-unit>
        <trans-unit id="6027ee4df59b4012aaea1f2c5f4181d0bf2a7184" translate="yes" xml:space="preserve">
          <source>Call it to initialize the component (it calls &lt;code&gt;ngOnInit&lt;/code&gt;) and after your test code, change the component's data bound property values. Angular can't see that you've changed &lt;code&gt;personComponent.name&lt;/code&gt; and won't update the &lt;code&gt;name&lt;/code&gt; binding until you call &lt;code&gt;detectChanges&lt;/code&gt;.</source>
          <target state="translated">调用它以初始化组件（它调用 &lt;code&gt;ngOnInit&lt;/code&gt; ），然后在测试代码之后，更改组件的数据绑定属性值。Angular不会看到您已经更改了 &lt;code&gt;personComponent.name&lt;/code&gt; ，也不会更新 &lt;code&gt;name&lt;/code&gt; 绑定，直到您调用 &lt;code&gt;detectChanges&lt;/code&gt; 为止。</target>
        </trans-unit>
        <trans-unit id="98e5babeab32e45e806fbc3b19174a99b11c23ca" translate="yes" xml:space="preserve">
          <source>Call within an animation &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; call to specify an animation step that applies given style data to the parent animation for a given amount of time.</source>
          <target state="translated">在动画 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 调用中进行调用，以指定一个动画步骤，该步骤在给定的时间内将给定的样式数据应用于父动画。</target>
        </trans-unit>
        <trans-unit id="84da34ba3c53494d567b871aef04caf7757b12ec" translate="yes" xml:space="preserve">
          <source>Callback that is invoked when the event is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1771add456fd5236fb4ceb3907b9902363284a43" translate="yes" xml:space="preserve">
          <source>Callbacks can serve as a debugging tool, for example in conjunction with &lt;code&gt;console.warn()&lt;/code&gt; to view the application's progress in a browser's Developer JavaScript Console. The following code snippet creates console log output for our original example, a button with the two states of &lt;code&gt;open&lt;/code&gt; and &lt;code&gt;closed&lt;/code&gt;.</source>
          <target state="translated">回调可以用作调试工具，例如，与 &lt;code&gt;console.warn()&lt;/code&gt; 结合使用，可以在浏览器的Developer JavaScript Console中查看应用程序的进度。以下代码段为我们的原始示例创建了控制台日志输出，即具有 &lt;code&gt;open&lt;/code&gt; 和 &lt;code&gt;closed&lt;/code&gt; 两种状态的按钮。</target>
        </trans-unit>
        <trans-unit id="cf0bd107ea07339c2f1afab870d4c21149db9a49" translate="yes" xml:space="preserve">
          <source>Callbacks can serve as a debugging tool, for example in conjunction with &lt;code&gt;console.warn()&lt;/code&gt; to view the application's progress in a browser's Developer JavaScript Console. The following code snippet creates console log output for the original example, a button with the two states of &lt;code&gt;open&lt;/code&gt; and &lt;code&gt;closed&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760346b355881672a0a6d496758fb65d68eaf88c" translate="yes" xml:space="preserve">
          <source>Called &lt;em&gt;just before&lt;/em&gt; Angular destroys the directive/component.</source>
          <target state="translated">&lt;em&gt;在&lt;/em&gt; Angular销毁指令/组件&lt;em&gt;之前&lt;/em&gt;调用。</target>
        </trans-unit>
        <trans-unit id="b43d88a726fcdc88f9eb54c0fd5d13581ff0616e" translate="yes" xml:space="preserve">
          <source>Called &lt;em&gt;once&lt;/em&gt; after the first &lt;code&gt;ngAfterContentChecked()&lt;/code&gt;.</source>
          <target state="translated">在第一个 &lt;code&gt;ngAfterContentChecked()&lt;/code&gt; 之后调用&lt;em&gt;一次&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dec40bf1cbc2faab1a865283dcd9baa5bb7dfd6f" translate="yes" xml:space="preserve">
          <source>Called &lt;em&gt;once&lt;/em&gt; after the first &lt;code&gt;ngDoCheck()&lt;/code&gt;.</source>
          <target state="translated">在第一个 &lt;code&gt;ngDoCheck()&lt;/code&gt; 之后调用&lt;em&gt;一次&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ed61dce56e76b70f3a1dafc6de01c809ad00c2df" translate="yes" xml:space="preserve">
          <source>Called &lt;em&gt;once&lt;/em&gt;, after the &lt;em&gt;first&lt;/em&gt;&lt;code&gt;ngOnChanges()&lt;/code&gt;.</source>
          <target state="translated">在第&lt;em&gt;一个&lt;/em&gt; &lt;code&gt;ngOnChanges()&lt;/code&gt; 之后调用&lt;em&gt;一次&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="64374a1b60c7af8c460e602db455a8bfdf41c58d" translate="yes" xml:space="preserve">
          <source>Called after &lt;code&gt;ngAfterContentInit()&lt;/code&gt; and every subsequent &lt;code&gt;ngDoCheck()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9940e1eeb5a7c145f2b10ef2094d91adf0e011e" translate="yes" xml:space="preserve">
          <source>Called after &lt;code&gt;ngAfterContentInit&lt;/code&gt; when the component's views and child views / the view that a directive is in has been initialized.</source>
          <target state="translated">当组件的视图和子视图/指令所在的视图已初始化时，在 &lt;code&gt;ngAfterContentInit&lt;/code&gt; 之后调用。</target>
        </trans-unit>
        <trans-unit id="c0e8308ef6731afacab2d2cf1a1d82e6d5d18c59" translate="yes" xml:space="preserve">
          <source>Called after &lt;code&gt;ngOnInit&lt;/code&gt; when the component's or directive's content has been initialized.</source>
          <target state="translated">当组件或指令的内容已初始化时，在 &lt;code&gt;ngOnInit&lt;/code&gt; 之后调用。</target>
        </trans-unit>
        <trans-unit id="3abf88459dea9d48107a15886f727107471dbb96" translate="yes" xml:space="preserve">
          <source>Called after every change to input properties and before processing content or child views.</source>
          <target state="translated">在每次改变输入属性后和处理内容或子视图前调用。</target>
        </trans-unit>
        <trans-unit id="a130609bac88d5543ea30ad6133139b03b01ecf7" translate="yes" xml:space="preserve">
          <source>Called after every check of the component's or directive's content.</source>
          <target state="translated">在每次检查组件或指令的内容后调用。</target>
        </trans-unit>
        <trans-unit id="0a0e3aa13b4388685cf9d7c3507f3e1ee153db1a" translate="yes" xml:space="preserve">
          <source>Called after every check of the component's views and child views / the view that a directive is in.</source>
          <target state="translated">在每次检查组件的视图和子视图/指令所在的视图后调用。</target>
        </trans-unit>
        <trans-unit id="1f8068273dc6ecea537534ade623776122365e21" translate="yes" xml:space="preserve">
          <source>Called after the &lt;code&gt;&lt;a href=&quot;../api/forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; and every subsequent &lt;code&gt;ngAfterContentChecked()&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;../api/forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; 和随后的每个 &lt;code&gt;ngAfterContentChecked()&lt;/code&gt; 之后调用。</target>
        </trans-unit>
        <trans-unit id="6b5705918e476cb904b5fa668ed214206ec73591" translate="yes" xml:space="preserve">
          <source>Called after the &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive#ngAfterContentInit&quot;&gt;ngAfterContentInit()&lt;/a&gt;&lt;/code&gt; and every subsequent &lt;code&gt;ngDoCheck()&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive#ngAfterContentInit&quot;&gt;ngAfterContentInit()&lt;/a&gt;&lt;/code&gt; 和随后的每个 &lt;code&gt;ngDoCheck()&lt;/code&gt; 之后调用。</target>
        </trans-unit>
        <trans-unit id="e9a80e9c33c7f59d78520eafadb2f0aa69e69f8e" translate="yes" xml:space="preserve">
          <source>Called after the &lt;code&gt;ngAfterViewInit()&lt;/code&gt; and every subsequent &lt;code&gt;ngAfterContentChecked()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f0d6f5d02969dcc38e9b8f7dab33c5b8ec6a67" translate="yes" xml:space="preserve">
          <source>Called after the constructor, initializing input properties, and the first call to &lt;code&gt;ngOnChanges&lt;/code&gt;.</source>
          <target state="translated">在构造函数之后调用，初始化输入属性，并首次调用 &lt;code&gt;ngOnChanges&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3992a9223eaa475ee02765bb281acfe9016e9587" translate="yes" xml:space="preserve">
          <source>Called before &lt;code&gt;ngOnInit()&lt;/code&gt; and whenever one or more data-bound input properties change.</source>
          <target state="translated">在 &lt;code&gt;ngOnInit()&lt;/code&gt; 之前以及每当一个或多个数据绑定输入属性更改时调用。</target>
        </trans-unit>
        <trans-unit id="338e219ba9c4ad2d93a1252ea07e78fcd5812653" translate="yes" xml:space="preserve">
          <source>Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.</source>
          <target state="translated">在任何其他生命周期钩子之前调用。用它来注入依赖关系,但要避免在这里做任何严肃的工作。</target>
        </trans-unit>
        <trans-unit id="079a33e34b46ed902e2756f083cec3f074677ba5" translate="yes" xml:space="preserve">
          <source>Called during every change detection run, immediately after &lt;code&gt;ngOnChanges()&lt;/code&gt; and &lt;code&gt;ngOnInit()&lt;/code&gt;.</source>
          <target state="translated">在每次更改检测运行期间在 &lt;code&gt;ngOnChanges()&lt;/code&gt; 和 &lt;code&gt;ngOnInit()&lt;/code&gt; 之后立即调用。</target>
        </trans-unit>
        <trans-unit id="f2a8186d4eef069a787d88d5ad608795d2a3b749" translate="yes" xml:space="preserve">
          <source>Called every time that the input properties of a component or a directive are checked. Use it to extend change detection by performing a custom check.</source>
          <target state="translated">每次检查组件或指令的输入属性时都会被调用。通过执行自定义检查来扩展变化检测。</target>
        </trans-unit>
        <trans-unit id="fd8ef97c868d0922416a717fffd8cf2b0882722f" translate="yes" xml:space="preserve">
          <source>Called immediately after &lt;code&gt;ngOnChanges()&lt;/code&gt; on every change detection run, and immediately after &lt;code&gt;ngOnInit()&lt;/code&gt; on the first run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597612f4ee49a109c2cdcd436802f4da5f685c91" translate="yes" xml:space="preserve">
          <source>Called immediately before Angular destroys the directive or component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1338984fc63df896284a6e00cfd721004fb9941d" translate="yes" xml:space="preserve">
          <source>Called once, after the first &lt;code&gt;ngOnChanges()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded11fd49a01c772c26b4a79906617586dfcc389" translate="yes" xml:space="preserve">
          <source>Called once, before the instance is destroyed.</source>
          <target state="translated">在实例被销毁前调用一次。</target>
        </trans-unit>
        <trans-unit id="6370b8dc1866c030c38bf3c5b2f85b9cec9f1e45" translate="yes" xml:space="preserve">
          <source>Called when a &lt;code&gt;&lt;a href=&quot;routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; directive is destroyed. We need to keep the context as the outlet could be destroyed inside a NgIf and might be re-created later.</source>
          <target state="translated">当 &lt;code&gt;&lt;a href=&quot;routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 指令销毁时调用。我们需要保留上下文，因为出口可能会在NgIf中被破坏，并可能在以后重新创建。</target>
        </trans-unit>
        <trans-unit id="e3c27d5c41ab5ae9ad7c8e33864c2395541456d6" translate="yes" xml:space="preserve">
          <source>Called when a &lt;code&gt;&lt;a href=&quot;routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; directive is instantiated</source>
          <target state="translated">实例化 &lt;code&gt;&lt;a href=&quot;routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 指令时调用</target>
        </trans-unit>
        <trans-unit id="bdc03480e95937267c839f086bcde846aaa91db9" translate="yes" xml:space="preserve">
          <source>Called when the &lt;code&gt;&lt;a href=&quot;routereusestrategy&quot;&gt;RouteReuseStrategy&lt;/a&gt;&lt;/code&gt; instructs to detach the subtree</source>
          <target state="translated">当 &lt;code&gt;&lt;a href=&quot;routereusestrategy&quot;&gt;RouteReuseStrategy&lt;/a&gt;&lt;/code&gt; 指示分离子树时调用</target>
        </trans-unit>
        <trans-unit id="da38a77071e29a9e7664a3315f4f4e75e060eafe" translate="yes" xml:space="preserve">
          <source>Called when the &lt;code&gt;&lt;a href=&quot;routereusestrategy&quot;&gt;RouteReuseStrategy&lt;/a&gt;&lt;/code&gt; instructs to re-attach a previously detached subtree</source>
          <target state="translated">当 &lt;code&gt;&lt;a href=&quot;routereusestrategy&quot;&gt;RouteReuseStrategy&lt;/a&gt;&lt;/code&gt; 指示重新附加以前分离的子树时调用</target>
        </trans-unit>
        <trans-unit id="34fa98865ffd00d148b8d531c88a1378d0836148" translate="yes" xml:space="preserve">
          <source>Called when the corresponding route is deactivated during navigation. Because the component get destroyed, all children outlet are destroyed.</source>
          <target state="translated">在导航过程中,当相应的路径被停用时调用。因为该组件被销毁,所有的子插座都会被销毁。</target>
        </trans-unit>
        <trans-unit id="4416314a4a514ac0405d4addafc155de8726824e" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick()&lt;/a&gt; simulates the passage of time until all pending asynchronous activities finish. In this case, it waits for the error handler's &lt;code&gt;setTimeout()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23fcda0d1a865ac392be3ef0e2925a05f5b0881" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(predicate: &lt;a href=&quot;../api/core/predicate&quot;&gt;Predicate&lt;/a&gt;&amp;lt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&amp;gt;)&lt;/code&gt; returns the first &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; that matches the &lt;a href=&quot;testing#query-predicate&quot;&gt;predicate&lt;/a&gt; at any depth in the subtree.</source>
          <target state="translated">调用 &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(predicate: &lt;a href=&quot;../api/core/predicate&quot;&gt;Predicate&lt;/a&gt;&amp;lt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&amp;gt;)&lt;/code&gt; 将返回与子树中任意深度的&lt;a href=&quot;testing#query-predicate&quot;&gt;谓词&lt;/a&gt;匹配的第一个 &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6780c4ea1a52e578dd1cdb43b8d0e370db632088" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(predicate: &lt;a href=&quot;../api/core/predicate&quot;&gt;Predicate&lt;/a&gt;&amp;lt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&amp;gt;)&lt;/code&gt; returns the first &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; that matches the &lt;a href=&quot;testing-utility-apis#query-predicate&quot;&gt;predicate&lt;/a&gt; at any depth in the subtree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a824c35c2959755fd808822de4dedf95fd4d39cb" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; simulates the passage of time until all pending asynchronous activities finish. In this case, it waits for the error handler's &lt;code&gt;setTimeout()&lt;/code&gt;.</source>
          <target state="translated">调用 &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; 会模拟时间的流逝，直到所有未完成的异步活动结束。在这种情况下，它将等待错误处理程序的 &lt;code&gt;setTimeout()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f4c225336f28dd3542ea403d4580c5d63d64f06" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;&lt;a href=&quot;nggetcomponent&quot;&gt;getComponent&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;&amp;lt;child-comp&amp;gt;&lt;/code&gt; will return the instance of &lt;code&gt;ChildComponent&lt;/code&gt; associated with this DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e5274d708d865d31203a33a2d93ca9acf10e00" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;&lt;a href=&quot;nggetdirectives&quot;&gt;getDirectives&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; will return an array with an instance of the &lt;code&gt;MyButton&lt;/code&gt; directive that is associated with the DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85616fc79aa34b454e7a9c902a50f5731874146a" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;&lt;a href=&quot;nggetdirectives&quot;&gt;getDirectives&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;&amp;lt;my-comp&amp;gt;&lt;/code&gt; will return an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321a3cdf8150e134dc2dfaf54f45d308e329a8e4" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;&lt;a href=&quot;nggetlisteners&quot;&gt;getListeners&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will return an object that looks as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792d977d9aaa779fa8591bf191970aec9928a6c0" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;activateUpdate()&lt;/code&gt; without reloading the page could break lazy-loading in a currently running app, especially if the lazy-loaded chunks use filenames with hashes, which change every version. Therefore, it is recommended to reload the page once the promise returned by &lt;code&gt;activateUpdate()&lt;/code&gt; is resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a792f34c98efbd65d1a036e7a6d5db68e24cebe7" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;compileComponents()&lt;/code&gt;</source>
          <target state="translated">调用 &lt;code&gt;compileComponents()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9c757d2f6cb308f6cb586c83e9fc16ef99eaa72" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;compileComponents()&lt;/code&gt; closes the current &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; instance to further configuration. You cannot call any more &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; configuration methods, not &lt;code&gt;configureTestingModule()&lt;/code&gt; nor any of the &lt;code&gt;override...&lt;/code&gt; methods. The &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; throws an error if you try.</source>
          <target state="translated">调用 &lt;code&gt;compileComponents()&lt;/code&gt; 将关闭当前的 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 实例以进行进一步配置。您不能再调用任何 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 配置方法，不能调用 &lt;code&gt;configureTestingModule()&lt;/code&gt; 或任何 &lt;code&gt;override...&lt;/code&gt; 方法。如果尝试， &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 会引发错误。</target>
        </trans-unit>
        <trans-unit id="04fae4537b45fe3e42d919ebe7942bee9622a886" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;overrideProvider&lt;/code&gt; before initializing the TestBed will now throw an error. See &lt;a href=&quot;https://github.com/angular/angular/pull/38717&quot;&gt;PR 38717&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f2e83289b8c70bc906bf5b04c1061ef6002a40" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;queryAll(predicate: &lt;a href=&quot;../api/core/predicate&quot;&gt;Predicate&lt;/a&gt;&amp;lt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&amp;gt;)&lt;/code&gt; returns all &lt;code&gt;DebugElements&lt;/code&gt; that matches the &lt;a href=&quot;testing#query-predicate&quot;&gt;predicate&lt;/a&gt; at any depth in subtree.</source>
          <target state="translated">调用 &lt;code&gt;queryAll(predicate: &lt;a href=&quot;../api/core/predicate&quot;&gt;Predicate&lt;/a&gt;&amp;lt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&amp;gt;)&lt;/code&gt; 返回与子树中任意深度的&lt;a href=&quot;testing#query-predicate&quot;&gt;谓词&lt;/a&gt;相匹配的所有 &lt;code&gt;DebugElements&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4d57d5ce43ac062af6ac547fed6e729bde188fc" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;queryAll(predicate: &lt;a href=&quot;../api/core/predicate&quot;&gt;Predicate&lt;/a&gt;&amp;lt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&amp;gt;)&lt;/code&gt; returns all &lt;code&gt;DebugElements&lt;/code&gt; that matches the &lt;a href=&quot;testing-utility-apis#query-predicate&quot;&gt;predicate&lt;/a&gt; at any depth in subtree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c905b75753a481a14356fc6d2b86a0900d82b11b" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;setErrors&lt;/code&gt; also updates the validity of the parent control.</source>
          <target state="translated">调用 &lt;code&gt;setErrors&lt;/code&gt; 也会更新父控件的有效性。</target>
        </trans-unit>
        <trans-unit id="a1c343329d27e796c6369216dce0e24cb05d5809" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;subscribe(...)&lt;/code&gt; triggers execution of the observable and causes &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; to compose and send the HTTP request to the server.</source>
          <target state="translated">调用 &lt;code&gt;subscribe(...)&lt;/code&gt; 会触发Observable的执行，并导致 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 编写并将HTTP请求发送到服务器。</target>
        </trans-unit>
        <trans-unit id="ad2dfd54f809b36b4b1c053edef7371ae8619628" translate="yes" xml:space="preserve">
          <source>Calling any of the &lt;code&gt;bypassSecurityTrust...&lt;/code&gt; APIs disables Angular's built-in sanitization for the value passed in. Carefully check and audit all values and code paths going into this call. Make sure any user data is appropriately escaped for this security context. For more detail, see the &lt;a href=&quot;http://g.co/ng/security&quot;&gt;Security Guide&lt;/a&gt;.</source>
          <target state="translated">调用任何 &lt;code&gt;bypassSecurityTrust...&lt;/code&gt; API 会对传入的值禁用Angular的内置清理功能。仔细检查和审核进入此调用的所有值和代码路径。确保为此安全上下文适当地转义了所有用户数据。有关更多详细信息，请参见《&lt;a href=&quot;http://g.co/ng/security&quot;&gt;安全指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb4c4acb54d9d90b1dc3285d3d43dd9233df61f2" translate="yes" xml:space="preserve">
          <source>Calling the function on &lt;code&gt;&amp;lt;my-app&amp;gt;&lt;/code&gt; will return the &lt;code&gt;MyApp&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb81e7cc6d31b5ab7893b8f4c6563164aa2b633" translate="yes" xml:space="preserve">
          <source>Callouts</source>
          <target state="translated">Callouts</target>
        </trans-unit>
        <trans-unit id="9d34b10af87e2cc9ccbc0459df289025ef6c7c79" translate="yes" xml:space="preserve">
          <source>Callouts are meant to grab the user's attention. They are not for casual asides. Please use them sparingly.</source>
          <target state="translated">喊话是为了吸引用户的注意力。它们不是用于随意的旁白。请尽量少用。</target>
        </trans-unit>
        <trans-unit id="ab3c3e0b5de6c6e0e7dca5076e6ad88d9df7c7e1" translate="yes" xml:space="preserve">
          <source>Callouts use the same &lt;em&gt;urgency levels&lt;/em&gt; that alerts do.</source>
          <target state="translated">标注使用的&lt;em&gt;紧急度&lt;/em&gt;与警报相同。</target>
        </trans-unit>
        <trans-unit id="505a7e75cfac8596300522544e26062f958a48a4" translate="yes" xml:space="preserve">
          <source>Callouts, like alerts, are meant to draw attention to important points. Use a callout when you want a riveting header and multi-line content.</source>
          <target state="translated">呼号和警报一样,都是为了引起人们对重要观点的关注。当你想要一个铆钉式的标题和多行内容时,请使用呼号。</target>
        </trans-unit>
        <trans-unit id="0a19b7e26b2ba75ac27255f31f21e98a34d62953" translate="yes" xml:space="preserve">
          <source>Calls</source>
          <target state="translated">Calls</target>
        </trans-unit>
        <trans-unit id="c7458f20cc67730b3cfc74274de606821b58649f" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;&lt;a href=&quot;../api/animations/animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt; on the view that is leaving, to run its child animations.</source>
          <target state="translated">在离开的视图上调用 &lt;code&gt;&lt;a href=&quot;../api/animations/animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt; ，以运行其子动画。</target>
        </trans-unit>
        <trans-unit id="054740b116bb7ad21ec189e277687edb090d5e7a" translate="yes" xml:space="preserve">
          <source>Calls method &lt;code&gt;readRainbow&lt;/code&gt; when a click event is triggered on this button element (or its children) and passes in the event object.</source>
          <target state="translated">当对此按钮元素（或其子元素）触发click事件并传递事件对象时，调用方法 &lt;code&gt;readRainbow&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ec80b36df3dfad6ec2a2e4c829bb5c8f1486470" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;&lt;a href=&quot;../api/animations/animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt; method on the new view to run its child animations after the main animation completes.</source>
          <target state="translated">主动画完成后，在新视图上调用 &lt;code&gt;&lt;a href=&quot;../api/animations/animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt; 方法以运行其子动画。</target>
        </trans-unit>
        <trans-unit id="20b5d8714282fb0a73c671dbc1257f65ec30bfa4" translate="yes" xml:space="preserve">
          <source>Can I re-export classes and modules?</source>
          <target state="translated">我可以重新导出类和模块吗?</target>
        </trans-unit>
        <trans-unit id="909f15135d74304c1d1061422b73388345640cf1" translate="yes" xml:space="preserve">
          <source>Can be used to instruct the template compiler to produce &lt;code&gt;.metadata.json&lt;/code&gt; files for distribution with an &lt;code&gt;npm&lt;/code&gt; package while avoiding the production of &lt;code&gt;.ngfactory.js&lt;/code&gt; and &lt;code&gt;.ngstyle.js&lt;/code&gt; files that cannot be distributed to &lt;code&gt;npm&lt;/code&gt;.</source>
          <target state="translated">可用于指示模板编译器生成 &lt;code&gt;.metadata.json&lt;/code&gt; 文件，以使用 &lt;code&gt;npm&lt;/code&gt; 软件包分发，同时避免生成无法分发给 &lt;code&gt;npm&lt;/code&gt; 的 &lt;code&gt;.ngfactory.js&lt;/code&gt; 和 &lt;code&gt;.ngstyle.js&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="5f36799879d0cf41af5b4c27f7d960b58598905d" translate="yes" xml:space="preserve">
          <source>Can be used to wrap inject() calls.</source>
          <target state="translated">可用于包裹注入()调用。</target>
        </trans-unit>
        <trans-unit id="eeca2657940329cf291b081d93f9892584f17b53" translate="yes" xml:space="preserve">
          <source>Can be used together with other parameter decorators that modify how dependency injection operates.</source>
          <target state="translated">可以和其他参数装饰器一起使用,修改依赖注入的操作方式。</target>
        </trans-unit>
        <trans-unit id="b41daf8b17e839983b484ba6d073adc7e542e89e" translate="yes" xml:space="preserve">
          <source>Can change a tax return without affecting a return in another component.</source>
          <target state="translated">可以在不影响其他组件中的申报表的情况下更改纳税申报表。</target>
        </trans-unit>
        <trans-unit id="c9100670ff9a13c528e1d1a5b727b0630c83c454" translate="yes" xml:space="preserve">
          <source>Can contain &lt;em&gt;host views&lt;/em&gt; (created by instantiating a component with the &lt;code&gt;createComponent()&lt;/code&gt; method), and &lt;em&gt;embedded views&lt;/em&gt; (created by instantiating a &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;createEmbeddedView()&lt;/code&gt; method).</source>
          <target state="translated">可以包含&lt;em&gt;主机视图&lt;/em&gt;（通过使用 &lt;code&gt;createComponent()&lt;/code&gt; 方法实例化组件来创建）和&lt;em&gt;嵌入式视图&lt;/em&gt;（通过使用 &lt;code&gt;createEmbeddedView()&lt;/code&gt; 方法实例化 &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; 来创建）。</target>
        </trans-unit>
        <trans-unit id="6904ca2fb9f0915a919fc5e9a9879f3583b0ff87" translate="yes" xml:space="preserve">
          <source>Can the user actually select the hero displayed by &lt;code&gt;DashboardHeroComponent&lt;/code&gt;?</source>
          <target state="translated">用户可以实际选择 &lt;code&gt;DashboardHeroComponent&lt;/code&gt; 显示的英雄吗？</target>
        </trans-unit>
        <trans-unit id="180f5279c67f2eeb8b2298fb91ef00bb31f943f7" translate="yes" xml:space="preserve">
          <source>CanActivate</source>
          <target state="translated">CanActivate</target>
        </trans-unit>
        <trans-unit id="503b1aee292a84a5015a1b05f05d75a1b4bb3b78" translate="yes" xml:space="preserve">
          <source>CanActivateChild</source>
          <target state="translated">CanActivateChild</target>
        </trans-unit>
        <trans-unit id="22ee059e4c3b96beb90cacc882d7bc9f311ba0ef" translate="yes" xml:space="preserve">
          <source>CanDeactivate</source>
          <target state="translated">CanDeactivate</target>
        </trans-unit>
        <trans-unit id="a043a9144fd1167b1a2529e7a366de5b9973fd0a" translate="yes" xml:space="preserve">
          <source>CanLoad</source>
          <target state="translated">CanLoad</target>
        </trans-unit>
        <trans-unit id="1fab6a02d9a28f3ff9036951307010813ac79bc0" translate="yes" xml:space="preserve">
          <source>CanLoad blocks preload</source>
          <target state="translated">CanLoad 块预加载</target>
        </trans-unit>
        <trans-unit id="07f74d08e03072e546e3877aef507f93c09e6839" translate="yes" xml:space="preserve">
          <source>Cancel and save</source>
          <target state="translated">取消并保存</target>
        </trans-unit>
        <trans-unit id="b496c07eb5af98f1ed2e504cdf9e47afef8c701c" translate="yes" xml:space="preserve">
          <source>Cancel ongoing AJAX requests if their results will be invalidated by the updated results.</source>
          <target state="translated">如果正在进行的AJAX请求的结果将被更新后的结果所取代,则取消该请求。</target>
        </trans-unit>
        <trans-unit id="319aaae4dec46a75861fd10bcf8d182f4a77298d" translate="yes" xml:space="preserve">
          <source>Cancellation</source>
          <target state="translated">Cancellation</target>
        </trans-unit>
        <trans-unit id="bff56e1549fd7a6a5f354ee4a0ca235953d70f07" translate="yes" xml:space="preserve">
          <source>Cannot assign to template variables</source>
          <target state="translated">不能分配给模板变量</target>
        </trans-unit>
        <trans-unit id="0b34940b15c08ee3ff0e607747050d9f6089f16f" translate="yes" xml:space="preserve">
          <source>Capture a state change between any states:</source>
          <target state="translated">捕捉任意状态之间的状态变化。</target>
        </trans-unit>
        <trans-unit id="d6f2ba4c017e10b7dd998487ea0fdc703f74b715" translate="yes" xml:space="preserve">
          <source>Capture the current value and validation status of a form.</source>
          <target state="translated">捕捉表单的当前值和验证状态。</target>
        </trans-unit>
        <trans-unit id="25b5675f764dc11bb7d0d407aa9e9c830c51d4dc" translate="yes" xml:space="preserve">
          <source>Care should be taken that if an &lt;code&gt;ngAcceptInputType_&lt;/code&gt; override is present for a given input, then the setter should be able to handle any values of the overridden type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f52ea4cfe6d3f65fa26be21bdbd52f13fb53ea" translate="yes" xml:space="preserve">
          <source>Case study: Building a custom progress bar</source>
          <target state="translated">案例研究。建立一个自定义进度条</target>
        </trans-unit>
        <trans-unit id="6f34f8eb641732996a47d4a852ea593e50abe92e" translate="yes" xml:space="preserve">
          <source>Catch-all state change for when an element is inserted into the page and the destination state is unknown:</source>
          <target state="translated">当一个元素被插入到页面中,并且目标状态未知时,覆盖式的状态变化。</target>
        </trans-unit>
        <trans-unit id="a3c686e711e4720f99b4562bb3dbaae7ab658cf2" translate="yes" xml:space="preserve">
          <source>Category</source>
          <target state="translated">Category</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="80656e1ac8d7229db56620ded26ed78c22d67a05" translate="yes" xml:space="preserve">
          <source>Certain NgModules, such as &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, implement such a guard. Here is a custom constructor for an NgModule called &lt;code&gt;GreetingModule&lt;/code&gt;.</source>
          <target state="translated">某些NgModule（例如 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; ）实现了这种保护。这是NgModule的自定义构造函数，称为 &lt;code&gt;GreetingModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e8fee1b61a78b05f3275829dbb034edaa941c4e" translate="yes" xml:space="preserve">
          <source>Certain services, such as the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;, only work when you register them in the application root injector.</source>
          <target state="translated">某些服务（例如 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ）仅在您将其注册到应用程序根注入器中时才起作用。</target>
        </trans-unit>
        <trans-unit id="480bd17189258d07915ad129dccf24a948c44df7" translate="yes" xml:space="preserve">
          <source>Chaining</source>
          <target state="translated">Chaining</target>
        </trans-unit>
        <trans-unit id="d5d97b4fb4d072582f9b61039d71706e3deb2db1" translate="yes" xml:space="preserve">
          <source>Chaining RxJS operators</source>
          <target state="translated">链式RxJS运算符</target>
        </trans-unit>
        <trans-unit id="9700d3ee9c183d3666b2b94f12e30f5e47ca2416" translate="yes" xml:space="preserve">
          <source>Chaining expressions with &lt;code&gt;;&lt;/code&gt; or &lt;code&gt;,&lt;/code&gt;</source>
          <target state="translated">用链接表达式 &lt;code&gt;;&lt;/code&gt; 或者 &lt;code&gt;,&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d1cdea71a3322e7230575959abb41daaf51e783" translate="yes" xml:space="preserve">
          <source>Chaining pipes</source>
          <target state="translated">链条式管道</target>
        </trans-unit>
        <trans-unit id="4991d5ea5af682d4bd01c3240e19cd513867cab6" translate="yes" xml:space="preserve">
          <source>Change Detection</source>
          <target state="translated">变化检测</target>
        </trans-unit>
        <trans-unit id="343b1717461275ac4ca7b57386b4e4fd9f50b8f1" translate="yes" xml:space="preserve">
          <source>Change Detection with &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 更改检测（）</target>
        </trans-unit>
        <trans-unit id="3f8c1160f24c95950eb5896ce2ace4d289f1b622" translate="yes" xml:space="preserve">
          <source>Change an input value with &lt;em&gt;dispatchEvent()&lt;/em&gt;</source>
          <target state="translated">使用&lt;em&gt;dispatchEvent（）&lt;/em&gt;更改输入值&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3056a3bc48b6af974962366a13a95bb358bd68e6" translate="yes" xml:space="preserve">
          <source>Change detection begins.</source>
          <target state="translated">变化检测开始。</target>
        </trans-unit>
        <trans-unit id="d9c401dce4625f6d4132ee55d56ac329792d87ae" translate="yes" xml:space="preserve">
          <source>Change detection completes.</source>
          <target state="translated">变化检测完成。</target>
        </trans-unit>
        <trans-unit id="8411d3332834651f95b6576a4bba5a79df07ebd3" translate="yes" xml:space="preserve">
          <source>Change detection usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8f51ff0e0f41b2723a3b0ddb1fc762ca1bbe07" translate="yes" xml:space="preserve">
          <source>Change propagation</source>
          <target state="translated">改变传播方式</target>
        </trans-unit>
        <trans-unit id="a69fd5c5cd83b7b0a7e790bf0a78ee6893f67b64" translate="yes" xml:space="preserve">
          <source>Change root relative URLs in stylesheets to include base HREF and deploy URL. Use only for compatibility and transition. The behavior of this option is non-standard and will be removed in the next major release.</source>
          <target state="translated">改变样式表中的根相对URL,以包括基础HREF和部署URL。仅用于兼容性和过渡。这个选项的行为是非标准的,将在下一个主要版本中删除。</target>
        </trans-unit>
        <trans-unit id="fa620e88b25bbea281891e5669df27dfd8e15477" translate="yes" xml:space="preserve">
          <source>Change the &lt;code&gt;admin&lt;/code&gt; path in the &lt;code&gt;admin-routing.module.ts&lt;/code&gt; from &lt;code&gt;'admin'&lt;/code&gt; to an empty string, &lt;code&gt;''&lt;/code&gt;, the empty path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8babe69a0e11422b542467ffba728e60ba1c55e3" translate="yes" xml:space="preserve">
          <source>Change the &lt;code&gt;admin&lt;/code&gt;&lt;strong&gt;path&lt;/strong&gt; in the &lt;code&gt;admin-routing.module.ts&lt;/code&gt; from &lt;code&gt;'admin'&lt;/code&gt; to an empty string, &lt;code&gt;''&lt;/code&gt;, the &lt;em&gt;empty path&lt;/em&gt;.</source>
          <target state="translated">将 &lt;code&gt;admin-routing.module.ts&lt;/code&gt; 中的 &lt;code&gt;admin&lt;/code&gt; &lt;strong&gt;路径&lt;/strong&gt;从 &lt;code&gt;'admin'&lt;/code&gt; 更改为空字符串 &lt;code&gt;''&lt;/code&gt; ，即&lt;em&gt;空路径&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1d1cabd01ed824d898e58ebeb17c5d4a449cd6cd" translate="yes" xml:space="preserve">
          <source>Change the &lt;code&gt;crisis-center&lt;/code&gt; path in the &lt;code&gt;CrisisCenterRoutingModule&lt;/code&gt; to an empty string.</source>
          <target state="translated">将 &lt;code&gt;CrisisCenterRoutingModule&lt;/code&gt; 中以 &lt;code&gt;crisis-center&lt;/code&gt; 路径更改为空字符串。</target>
        </trans-unit>
        <trans-unit id="434daac2c5b3d1ab473246ae8b1e713c54dc7351" translate="yes" xml:space="preserve">
          <source>Change the &lt;code&gt;selector&lt;/code&gt; to &lt;code&gt;app-hero-list&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;selector&lt;/code&gt; 更改为 &lt;code&gt;app-hero-list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0dde64b8dbb0bcbea9f57171ea80c7d963b7477" translate="yes" xml:space="preserve">
          <source>Change the application title</source>
          <target state="translated">更改申请标题</target>
        </trans-unit>
        <trans-unit id="9186ea4fea7f7f8a33d6b896351d60a43fdd1cf8" translate="yes" xml:space="preserve">
          <source>Change the component class name to &lt;code&gt;HeroListComponent&lt;/code&gt;.</source>
          <target state="translated">将组件类名称更改为 &lt;code&gt;HeroListComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="927385537fbe1015a617be665c6693f672fb3a52" translate="yes" xml:space="preserve">
          <source>Change the history state object when called with one parameter and return &lt;code&gt;$location&lt;/code&gt;. The state object is later passed to &lt;code&gt;pushState&lt;/code&gt; or &lt;code&gt;replaceState&lt;/code&gt;.</source>
          <target state="translated">使用一个参数调用时更改历史状态对象，并返回 &lt;code&gt;$location&lt;/code&gt; 。状态对象随后传递给 &lt;code&gt;pushState&lt;/code&gt; 或 &lt;code&gt;replaceState&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bfe643cd41ad6bd8325838b21bb5f217bb25eaba" translate="yes" xml:space="preserve">
          <source>Change the name of the property to something non-numeric.</source>
          <target state="translated">将属性名称改为非数字名称。</target>
        </trans-unit>
        <trans-unit id="6d75501b207e68028263e36722aad89666fd432e" translate="yes" xml:space="preserve">
          <source>Change the source language file format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb971ca24ae36394f009c9a933901534279b72b4" translate="yes" xml:space="preserve">
          <source>Change the source language file location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9aebdeab4136b916e3514f9ae6cb1c962a47e45" translate="yes" xml:space="preserve">
          <source>Change the source language file name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c003a9c6e71c4ca88e8ccd27f3508b897ae2a8" translate="yes" xml:space="preserve">
          <source>Change the text &lt;code&gt;Welcome to {{title}}!&lt;/code&gt; to &lt;code&gt;Bienvenue &amp;agrave; {{title}}!&lt;/code&gt;.</source>
          <target state="translated">更改文本 &lt;code&gt;Welcome to {{title}}!&lt;/code&gt; 前往 &lt;code&gt;Bienvenue &amp;agrave; {{title}}!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8676d4d635410ca2c077409dad69d9f77ca2647f" translate="yes" xml:space="preserve">
          <source>ChangeDetectionStrategy</source>
          <target state="translated">ChangeDetectionStrategy</target>
        </trans-unit>
        <trans-unit id="9610416e7bcb35a070b1afee3e1ecbe89b251021" translate="yes" xml:space="preserve">
          <source>ChangeDetectorRef</source>
          <target state="translated">ChangeDetectorRef</target>
        </trans-unit>
        <trans-unit id="ca70f735e874d0a9ed14ee22dbbc94dddf29a806" translate="yes" xml:space="preserve">
          <source>Changes and Deprecations in Version 11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb8f6f68f506aa805d98d21bb31757a770f8982" translate="yes" xml:space="preserve">
          <source>Changes can be observed by subscribing to the changes &lt;code&gt;Observable&lt;/code&gt;.</source>
          <target state="translated">变化可以通过订阅的变化来观察 &lt;code&gt;Observable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e28e885c282bb260b0a322754ee5b453345cab30" translate="yes" xml:space="preserve">
          <source>Changes the browser's URL to a normalized version of a given URL, and pushes a new item onto the platform's history.</source>
          <target state="translated">将浏览器的URL改为给定URL的规范化版本,并将新项目推送到平台的历史记录中。</target>
        </trans-unit>
        <trans-unit id="d841e1b40e8a43f3b1d465ce7175f1d1d080099d" translate="yes" xml:space="preserve">
          <source>Changes the browser's URL to a normalized version of the given URL, and replaces the top item on the platform's history stack.</source>
          <target state="translated">将浏览器的URL变更为给定URL的规范化版本,并替换平台历史堆栈中的顶部项目。</target>
        </trans-unit>
        <trans-unit id="0528bf143935bb6c0e63d6c319330abc5897e287" translate="yes" xml:space="preserve">
          <source>Changes to &lt;code&gt;$location&lt;/code&gt; during the current &lt;code&gt;$digest&lt;/code&gt; will replace the current history record, instead of adding a new one.</source>
          <target state="translated">当前 &lt;code&gt;$digest&lt;/code&gt; 期间对 &lt;code&gt;$location&lt;/code&gt; 更改将替换当前的历史记录，而不是添加新的记录。</target>
        </trans-unit>
        <trans-unit id="696e045172b10914e55a284add7f292269adccb9" translate="yes" xml:space="preserve">
          <source>Changes to styles elsewhere in the application don't affect the component's styles.</source>
          <target state="translated">对应用程序中其他地方的样式的更改不会影响组件的样式。</target>
        </trans-unit>
        <trans-unit id="8717268388760a4abc7ae6730a6a868cb147ccdc" translate="yes" xml:space="preserve">
          <source>Changes you may see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831ab0dd3e14c19a13759f4e73d7a68f79e884a9" translate="yes" xml:space="preserve">
          <source>Changing /heroes to /superheroes</source>
          <target state="translated">将/heroes改为/superheroes。</target>
        </trans-unit>
        <trans-unit id="61fe1730c58b148536e6991308528269c7d4b5e4" translate="yes" xml:space="preserve">
          <source>Changing &lt;code&gt;/heroes&lt;/code&gt; to &lt;code&gt;/superheroes&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcac6dfa3f865ecb219e677bce8f4ac4fd43e75a" translate="yes" xml:space="preserve">
          <source>Changing the observable to be multicasting could look something like this:</source>
          <target state="translated">将观测值改为多播,可以是这样的。</target>
        </trans-unit>
        <trans-unit id="23fafb17a150814dab8b9300a9bdd995dd6aaf3b" translate="yes" xml:space="preserve">
          <source>Changing your app's location</source>
          <target state="translated">更改您的应用程序的位置</target>
        </trans-unit>
        <trans-unit id="e688823a84fa6f43670fb82f99c26f690e6bccb5" translate="yes" xml:space="preserve">
          <source>Cheat Sheet</source>
          <target state="translated">小抄</target>
        </trans-unit>
        <trans-unit id="99957d5920a0c408d447b33739a6c587076d7c4c" translate="yes" xml:space="preserve">
          <source>Cheat sheet</source>
          <target state="translated">小抄</target>
        </trans-unit>
        <trans-unit id="e1aba76971244577871fcf686981c5cf54bbfec3" translate="yes" xml:space="preserve">
          <source>Check all internal dependencies.</source>
          <target state="translated">检查所有内部依赖关系。</target>
        </trans-unit>
        <trans-unit id="bd6bd8ea1d42310566ae35ff189fa25bce0739c6" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;https://github.com/angular-buch/angular-cli-ghpages&quot;&gt;angular-cli-ghpages&lt;/a&gt;, a full featured package that does all this for you and has extra functionality.</source>
          <target state="translated">查看&lt;a href=&quot;https://github.com/angular-buch/angular-cli-ghpages&quot;&gt;angular-cli-ghpages&lt;/a&gt;，这是一个功能齐全的软件包，可以为您完成所有这些工作，并具有额外的功能。</target>
        </trans-unit>
        <trans-unit id="596bba2df3b2825642145be1fe7d92476921f67f" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;glossary&quot;&gt;Glossary&lt;/a&gt; to understand Angular-specific terms and usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92cfb73fbe5a898080633faeb8d721bec2e82d45" translate="yes" xml:space="preserve">
          <source>Check out this full animation &lt;a href=&quot;http://animationsftw.in/#/&quot;&gt;demo&lt;/a&gt; with accompanying &lt;a href=&quot;https://www.youtube.com/watch?v=JhNo3Wvj6UQ&amp;amp;feature=youtu.be&amp;amp;t=2h47m53s&quot;&gt;presentation&lt;/a&gt;, shown at the AngularConnect conference in November 2017.</source>
          <target state="translated">观看完整的动画&lt;a href=&quot;http://animationsftw.in/#/&quot;&gt;演示&lt;/a&gt;以及随附的&lt;a href=&quot;https://www.youtube.com/watch?v=JhNo3Wvj6UQ&amp;amp;feature=youtu.be&amp;amp;t=2h47m53s&quot;&gt;演示文稿&lt;/a&gt;，该演示文稿在2017年11月的AngularConnect会议上显示。</target>
        </trans-unit>
        <trans-unit id="c384f9025a9aede92802f2295e03b1a23a81d08b" translate="yes" xml:space="preserve">
          <source>Check self and check parent injector if needed</source>
          <target state="translated">检查自身,必要时检查母体注射器</target>
        </trans-unit>
        <trans-unit id="dbfea36cdd70b19a11b73640b60c7c97b8b2cc9f" translate="yes" xml:space="preserve">
          <source>Check that imported libraries have been marked side-effect-free. If your app imports from shared libraries that are meant to be free from side effects, add &quot;sideEffects&quot;: false to their &lt;code&gt;package.json&lt;/code&gt;. This will ensure that the libraries will be properly tree-shaken if they are imported but not directly referenced. See more details in the original issue &lt;a href=&quot;https://github.com/angular/angular-cli/issues/16799#issuecomment-580912090&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf59c30dc2e2cfc9815c66b412795ea380622ec" translate="yes" xml:space="preserve">
          <source>Check the &lt;strong&gt;Offline box&lt;/strong&gt;.</source>
          <target state="translated">选中&lt;strong&gt;离线框&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="53a91267f194e09a874c756ae0e5cd6fbc5e9b4b" translate="yes" xml:space="preserve">
          <source>Check whether the new value is the first value assigned.</source>
          <target state="translated">检查新值是否是第一个分配的值。</target>
        </trans-unit>
        <trans-unit id="f34e8033f22ef7572d3f7bef622110673a0b903e" translate="yes" xml:space="preserve">
          <source>Check whether there is an enabled control with the given name in the group.</source>
          <target state="translated">检查组中是否有给定名称的已启用控件。</target>
        </trans-unit>
        <trans-unit id="86835e09c41b9d27abffca994c2aa7579b74929a" translate="yes" xml:space="preserve">
          <source>Check whether users can access a route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5944be645c910b902d4178536960e0dd6bb46e" translate="yes" xml:space="preserve">
          <source>CheckboxControlValueAccessor</source>
          <target state="translated">CheckboxControlValueAccessor</target>
        </trans-unit>
        <trans-unit id="c879093d869ad86b0566a12fe19cb46968467703" translate="yes" xml:space="preserve">
          <source>CheckboxRequiredValidator</source>
          <target state="translated">CheckboxRequiredValidator</target>
        </trans-unit>
        <trans-unit id="78948b2a07ee0efcb3ac6f4a1a272b534d287c7b" translate="yes" xml:space="preserve">
          <source>Checking for updates</source>
          <target state="translated">检查更新</target>
        </trans-unit>
        <trans-unit id="a97ec7b665e30317cad136ac6db80bfa38d1e182" translate="yes" xml:space="preserve">
          <source>Checking of &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ac9dbbeb11bfee8438eb0df9da52f319181942" translate="yes" xml:space="preserve">
          <source>Checking your version of Angular</source>
          <target state="translated">检查你的Angular版本</target>
        </trans-unit>
        <trans-unit id="039ccb2918e7c3b5e496faa1cbfa7e89bb915059" translate="yes" xml:space="preserve">
          <source>Checks for existence of a given header.</source>
          <target state="translated">检查是否存在给定的头。</target>
        </trans-unit>
        <trans-unit id="f19cdeb053f13ef119dad6eaba0ab038717b11b2" translate="yes" xml:space="preserve">
          <source>Checks that there currently is a platform which contains the given token as a provider.</source>
          <target state="translated">检查目前是否有一个平台包含给定的token作为提供者。</target>
        </trans-unit>
        <trans-unit id="4cf7d7868bbf791320d5a7748d39dd2b03f2d60e" translate="yes" xml:space="preserve">
          <source>Checks that there is currently a platform that contains the given token as a provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e534014d7f6c5ef04a4cb1f5834c05cadd4a7f" translate="yes" xml:space="preserve">
          <source>Checks the change detector and its children, and throws if any changes are detected.</source>
          <target state="translated">检查变化检测器和它的子代,如果检测到任何变化,则抛出。</target>
        </trans-unit>
        <trans-unit id="ac7375845b6700eea70b230cf6ef23256bc66b1e" translate="yes" xml:space="preserve">
          <source>Checks this view and its children. Use in combination with &lt;a href=&quot;changedetectorref#detach&quot;&gt;detach&lt;/a&gt; to implement local change detection checks.</source>
          <target state="translated">检查此视图及其子级。与&lt;a href=&quot;changedetectorref#detach&quot;&gt;detach&lt;/a&gt;结合使用可实现本地更改检测检查。</target>
        </trans-unit>
        <trans-unit id="40446a4774953299d744b037f3fabd61581c55cd" translate="yes" xml:space="preserve">
          <source>Checks whether the two strings are equal</source>
          <target state="translated">检查两个字符串是否相等</target>
        </trans-unit>
        <trans-unit id="105070f0db5c610c2e3799d698d9f3ec337beb1a" translate="yes" xml:space="preserve">
          <source>Child &lt;code&gt;ModuleInjector&lt;/code&gt;s are created when lazy loading other &lt;code&gt;@NgModules&lt;/code&gt;.</source>
          <target state="translated">儿童 &lt;code&gt;ModuleInjector&lt;/code&gt; s的创建时的延迟加载等 &lt;code&gt;@NgModules&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b45018b9cbbbefcc8dbba9b84a7cc1c2fb002971" translate="yes" xml:space="preserve">
          <source>Child interfaces</source>
          <target state="translated">子接口</target>
        </trans-unit>
        <trans-unit id="51d827784282762a77db2ecf655e40e63440b111" translate="yes" xml:space="preserve">
          <source>Child modules and component injectors are independent of each other, and create their own separate instances of the provided services. When Angular destroys an NgModule or component instance, it also destroys that injector and that injector's service instances.</source>
          <target state="translated">子模块和组件注入器是相互独立的,并创建它们自己的独立的提供服务的实例。当Angular销毁一个NgModule或组件实例时,也会销毁该注入器和该注入器的服务实例。</target>
        </trans-unit>
        <trans-unit id="add021ebee29a859789ac87532524f9916e8f376" translate="yes" xml:space="preserve">
          <source>Child route configuration</source>
          <target state="translated">子途径的设置</target>
        </trans-unit>
        <trans-unit id="b3dc916760d8ae9ca4995453a2ebc7e0d16f4105" translate="yes" xml:space="preserve">
          <source>Child routes (the &lt;em&gt;Crisis Center&lt;/em&gt; has its own routes).</source>
          <target state="translated">子路线（&lt;em&gt;危机中心&lt;/em&gt;有自己的路线）。</target>
        </trans-unit>
        <trans-unit id="3ae7a7e0215bdbccdaa70a62527624da49d7b032" translate="yes" xml:space="preserve">
          <source>Child routing component</source>
          <target state="translated">子路由组件</target>
        </trans-unit>
        <trans-unit id="b39289ca7dd8c2d34548ec58a2bd80a309b34054" translate="yes" xml:space="preserve">
          <source>ChildActivationEnd</source>
          <target state="translated">ChildActivationEnd</target>
        </trans-unit>
        <trans-unit id="4fba8126259467946ad228f3bbc5ad08bcc49f2a" translate="yes" xml:space="preserve">
          <source>ChildActivationStart</source>
          <target state="translated">ChildActivationStart</target>
        </trans-unit>
        <trans-unit id="597f94e85e956cc34d0e81bd2267a3d55397342d" translate="yes" xml:space="preserve">
          <source>ChildrenOutletContexts</source>
          <target state="translated">ChildrenOutletContexts</target>
        </trans-unit>
        <trans-unit id="7a500f7710fc992ffd582db793ce56b2deb14e80" translate="yes" xml:space="preserve">
          <source>Chinese Simplified</source>
          <target state="translated">中文简体</target>
        </trans-unit>
        <trans-unit id="475bd05d677945b1aa0853356a8a8a2f5ba3dccb" translate="yes" xml:space="preserve">
          <source>Chinese Traditional</source>
          <target state="translated">中国传统</target>
        </trans-unit>
        <trans-unit id="7f76285d4993d793b551055eee78e271b1ac0fb6" translate="yes" xml:space="preserve">
          <source>Chinese Traditional Hong Kong</source>
          <target state="translated">中国传统香港</target>
        </trans-unit>
        <trans-unit id="5b1459d29562347d9af364f362f4cc0dda4087b1" translate="yes" xml:space="preserve">
          <source>Choose a CSS selector for the component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c5aee7d1808096ae2d774042d1f051379d83ae" translate="yes" xml:space="preserve">
          <source>Choose one pattern or the other and follow that pattern consistently.</source>
          <target state="translated">选择一种模式或另一种模式,并始终如一地遵循这种模式。</target>
        </trans-unit>
        <trans-unit id="6b9e178bd0af63fe006adcde0a8d9cf243536ca1" translate="yes" xml:space="preserve">
          <source>Choosing a compiler</source>
          <target state="translated">选择编译器</target>
        </trans-unit>
        <trans-unit id="b156c48e508941fd35d01151a9ef16404d7dcc06" translate="yes" xml:space="preserve">
          <source>Choosing a routing strategy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5ea27fc9f713601c67aa8664fbea01d4964a0b" translate="yes" xml:space="preserve">
          <source>Choosing a strategy begins with understanding the strengths and weaknesses of the options presented. Low-level API and form model access, predictability, mutability, straightforward validation and testing strategies, and scalability are all important considerations in choosing the infrastructure you use to build your forms in Angular. Template-driven forms are similar to patterns in AngularJS, but they have limitations given the criteria of many modern, large-scale Angular apps. Reactive forms minimize these limitations. Reactive forms integrate with reactive patterns already present in other areas of the Angular architecture, and complement those requirements well.</source>
          <target state="translated">选择策略首先要了解所提供选项的优缺点。低级API和表单模型访问、可预测性、可突变性、直接的验证和测试策略以及可扩展性都是选择您用于在Angular中构建表单的基础架构的重要考虑因素。模板驱动的表单与AngularJS中的模式类似,但考虑到许多现代大型Angular应用程序的标准,它们具有局限性。反应式表单可以最大限度地减少这些限制。反应式表单集成了已经存在于Angular架构其他领域的反应式模式,并很好地补充了这些需求。</target>
        </trans-unit>
        <trans-unit id="c7d5f65babefdd5042c8bd2bbfcb0576c5844ac8" translate="yes" xml:space="preserve">
          <source>Choosing an approach</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218e75c7a912404b048fff0747e40108873b6334" translate="yes" xml:space="preserve">
          <source>Chrome</source>
          <target state="translated">Chrome</target>
        </trans-unit>
        <trans-unit id="db7a66fee54cb2c0a49086533407c84c154c93b6" translate="yes" xml:space="preserve">
          <source>Chrome, Firefox, Edge,  Safari, Android, IE 10+</source>
          <target state="translated">Chrome、Firefox、Edge、Safari、Android、IE 10+。</target>
        </trans-unit>
        <trans-unit id="06d773328508b2324457173a938f656957a34b90" translate="yes" xml:space="preserve">
          <source>Chrome, Firefox, Edge,  Safari, Android, IE 11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="8154a233a656dec9151d776f59d14b5ece214584" translate="yes" xml:space="preserve">
          <source>Class binding</source>
          <target state="translated">类绑定</target>
        </trans-unit>
        <trans-unit id="b3f6bf21bd790c8c0ca4c69e84a202669b340aec" translate="yes" xml:space="preserve">
          <source>Class binding syntax resembles property binding, but instead of an element property between brackets, start with the prefix &lt;code&gt;class&lt;/code&gt;, optionally followed by a dot (&lt;code&gt;.&lt;/code&gt;) and the name of a CSS class: &lt;code&gt;[class.class-name]&lt;/code&gt;.</source>
          <target state="translated">类绑定语法类似于属性绑定，但不是用方括号括起来的元素属性，而是以前缀 &lt;code&gt;class&lt;/code&gt; 开头，可以选择后面跟一个点（ &lt;code&gt;.&lt;/code&gt; ）和CSS类 &lt;code&gt;[class.class-name]&lt;/code&gt; ：[class.class-name]。</target>
        </trans-unit>
        <trans-unit id="3e08bce289f366c056ecd9ce1d6fbabe31242faa" translate="yes" xml:space="preserve">
          <source>Class decorators</source>
          <target state="translated">级装饰师</target>
        </trans-unit>
        <trans-unit id="ead76f2265a0d81882e6ad9f43d58b17ab60cd2e" translate="yes" xml:space="preserve">
          <source>Class field decorators for directives and components</source>
          <target state="translated">指令和组件的类字段装饰器</target>
        </trans-unit>
        <trans-unit id="bd8d578a2c9be2adfd97344aa626fa426c36137a" translate="yes" xml:space="preserve">
          <source>Class if false</source>
          <target state="translated">班级如果是假的</target>
        </trans-unit>
        <trans-unit id="37f4d9eb1a6cf37d8d57164c8727fe1da9d6c802" translate="yes" xml:space="preserve">
          <source>Class if true</source>
          <target state="translated">类,如果为真</target>
        </trans-unit>
        <trans-unit id="703e9eebcf42bdd8b7a0a6b496df19654d526ebe" translate="yes" xml:space="preserve">
          <source>Class implementations</source>
          <target state="translated">类的实现</target>
        </trans-unit>
        <trans-unit id="00e4305e03e0dd23aa189c7dfb11b275650b4811" translate="yes" xml:space="preserve">
          <source>Class interface</source>
          <target state="translated">类接口</target>
        </trans-unit>
        <trans-unit id="5a80022dc562a4854ed320709d4e5f295abcbf93" translate="yes" xml:space="preserve">
          <source>Class names and selectors are local to the component and don't collide with classes and selectors used elsewhere in the application.</source>
          <target state="translated">类名和选择器是组件的局部,不会与应用程序中其他地方使用的类和选择器冲突。</target>
        </trans-unit>
        <trans-unit id="e25ec41c9f0b314b93d2865f50d88ae917e6ff6e" translate="yes" xml:space="preserve">
          <source>Class providers with dependencies</source>
          <target state="translated">有依赖关系的类提供者</target>
        </trans-unit>
        <trans-unit id="2ce2b7d2960a43ff91bdce39b41516a092f557c0" translate="yes" xml:space="preserve">
          <source>Class providers: &lt;code&gt;useClass&lt;/code&gt;</source>
          <target state="translated">类提供者： &lt;code&gt;useClass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d75f311366207e7e2aa503909afb6f888aa1e24b" translate="yes" xml:space="preserve">
          <source>Class to instantiate for the &lt;code&gt;token&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;token&lt;/code&gt; 实例化的类。</target>
        </trans-unit>
        <trans-unit id="c81eac26029ad80be2ecb31b3a105a54bd607ca4" translate="yes" xml:space="preserve">
          <source>ClassProvider</source>
          <target state="translated">ClassProvider</target>
        </trans-unit>
        <trans-unit id="4ad4dcce4a04b908b87b184e0e237aaad3f93967" translate="yes" xml:space="preserve">
          <source>ClassSansProvider</source>
          <target state="translated">ClassSansProvider</target>
        </trans-unit>
        <trans-unit id="ed1846afee3be21521286932b99e2aeae9e6414a" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>
        </trans-unit>
        <trans-unit id="44b1dd6cbeff1c9f0be2b3e8c7e9f2545be469f1" translate="yes" xml:space="preserve">
          <source>Cleaning up on instance destruction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb056dff87f7efe41487b1818542ce4497791da0" translate="yes" xml:space="preserve">
          <source>Cleanup just before Angular destroys the directive or component. Unsubscribe Observables and detach event handlers to avoid memory leaks. See details in &lt;a href=&quot;lifecycle-hooks#ondestroy&quot;&gt;Cleaning up on instance destruction&lt;/a&gt; in this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6251b998cd47a22f6f10a241477788107ff1abe" translate="yes" xml:space="preserve">
          <source>Cleanup just before Angular destroys the directive/component. Unsubscribe Observables and detach event handlers to avoid memory leaks.</source>
          <target state="translated">在Angular销毁指令/组件之前进行清理。取消订阅Observables和分离事件处理程序以避免内存泄漏。</target>
        </trans-unit>
        <trans-unit id="ce5079dd77d657c0cf099c0418da34731184f7b0" translate="yes" xml:space="preserve">
          <source>Clearing secondary routes</source>
          <target state="translated">清理次要路线</target>
        </trans-unit>
        <trans-unit id="5db54a049d498c60f89ca10bde98edb2d6069ad2" translate="yes" xml:space="preserve">
          <source>Clearing the request body</source>
          <target state="translated">清理请求主体</target>
        </trans-unit>
        <trans-unit id="38a95b00cd22e1c2bdfeca003a5c741c5fb3348b" translate="yes" xml:space="preserve">
          <source>Clearing the request body in a clone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf50fa318db0085017303d0a35f24a05f1663bbc" translate="yes" xml:space="preserve">
          <source>Clearly, some values benefit from a bit of editing. You may notice that you desire many of the same transformations repeatedly, both within and across many applications. You can almost think of them as styles. In fact, you might like to apply them in your HTML templates as you do styles.</source>
          <target state="translated">很明显,有些值会从编辑中受益。你可能会注意到,你希望在许多应用程序中和在许多应用程序之间反复进行许多相同的转换。你几乎可以把它们看作是样式。事实上,您可能会喜欢在您的HTML模板中应用它们,就像您使用样式一样。</target>
        </trans-unit>
        <trans-unit id="026c9a5b393972d1b74e879509efaf02047efffd" translate="yes" xml:space="preserve">
          <source>Clears all caches.</source>
          <target state="translated">清除所有缓存。</target>
        </trans-unit>
        <trans-unit id="b1ad879d1b6ba3a92ecf85c2bf72ec70799ba4b4" translate="yes" xml:space="preserve">
          <source>Clears out the shared fake async zone for a test. To be called in a global &lt;code&gt;beforeEach&lt;/code&gt;.</source>
          <target state="translated">清除共享的虚假异步区域以进行测试。在全球 &lt;code&gt;beforeEach&lt;/code&gt; 被称为。</target>
        </trans-unit>
        <trans-unit id="3da02b23929580e57414dead83052520181965c8" translate="yes" xml:space="preserve">
          <source>Clears the cache for the given component/ngModule.</source>
          <target state="translated">清除指定组件/ngModule的缓存。</target>
        </trans-unit>
        <trans-unit id="1ceee3f3ff9ea2b24225f5c50bf87f4ef4199c6e" translate="yes" xml:space="preserve">
          <source>Click &quot;Buy&quot; to add the product to the cart.</source>
          <target state="translated">点击 &quot;购买&quot;,将产品加入购物车。</target>
        </trans-unit>
        <trans-unit id="f84c2305c2632803a02e65fcadee7fbd81e73dfa" translate="yes" xml:space="preserve">
          <source>Click &quot;Checkout&quot; to see the cart.</source>
          <target state="translated">点击 &quot;结账 &quot;即可看到购物车。</target>
        </trans-unit>
        <trans-unit id="83429308d7a703087079aed854d4057e2973e9c0" translate="yes" xml:space="preserve">
          <source>Click OK to close the dialog.</source>
          <target state="translated">单击 &quot;确定 &quot;关闭对话框。</target>
        </trans-unit>
        <trans-unit id="a6b80126611af848948c0c6774dbd3810ab84e9a" translate="yes" xml:space="preserve">
          <source>Click inside the name box, then click outside it.</source>
          <target state="translated">点击名称框内,再点击名称框外。</target>
        </trans-unit>
        <trans-unit id="547578c7abdc81f782d84ab3802c115d38f42642" translate="yes" xml:space="preserve">
          <source>Click inside the name box, then click outside it. The control has now been visited, and the element has the &lt;code&gt;ng-touched&lt;/code&gt; class instead of the &lt;code&gt;ng-untouched&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25323834f15a5cdd5d9c332bdf408c9fad445293" translate="yes" xml:space="preserve">
          <source>Click links on the page and the browser navigates to a new page.</source>
          <target state="translated">点击页面上的链接,浏览器会导航到一个新的页面。</target>
        </trans-unit>
        <trans-unit id="9a0294549b373fb604bb541a36952363ee1e0c0d" translate="yes" xml:space="preserve">
          <source>Click links on the page, and the browser navigates to a new page.</source>
          <target state="translated">点击页面上的链接,浏览器会导航到一个新的页面。</target>
        </trans-unit>
        <trans-unit id="81d717da4be4f860e0609091c741c5e385bc988d" translate="yes" xml:space="preserve">
          <source>Click on &quot;My Store&quot; to go to the product list page.</source>
          <target state="translated">点击 &quot;我的商店 &quot;进入产品列表页面。</target>
        </trans-unit>
        <trans-unit id="3e2d6125f709f88ef4e4400226466c9151c49bcf" translate="yes" xml:space="preserve">
          <source>Click on &quot;My Store&quot; to go to the product list view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c86dcc2337bad128a9e7611b8fe25cad3729d0" translate="yes" xml:space="preserve">
          <source>Click on a product name to display its details.</source>
          <target state="translated">点击产品名称可显示其详细信息。</target>
        </trans-unit>
        <trans-unit id="61f156fc0205f2cf0b5cf9f3f4c67e5de0395f6e" translate="yes" xml:space="preserve">
          <source>Click on the &quot;Checkout&quot; button to see the updated cart. (Remember that changing the app causes the preview to refresh, which empties the cart.)</source>
          <target state="translated">点击 &quot;结账 &quot;按钮,可以看到更新后的购物车。(请记住,更改应用程序会导致预览刷新,从而清空购物车)。</target>
        </trans-unit>
        <trans-unit id="a780f7c233867ca1d42bf0443d903007584aa372" translate="yes" xml:space="preserve">
          <source>Click on the Orders or Customers button. If you see a chunk appear, everything is wired up properly and the feature module is being lazy loaded. A chunk should appear for Orders and for Customers but will only appear once for each.</source>
          <target state="translated">点击订单或客户按钮。如果你看到一个分块出现,说明所有的东西都被正确地连接起来了,功能模块被懒惰地加载了。订单和客户应该出现一个分块,但每个分块只出现一次。</target>
        </trans-unit>
        <trans-unit id="86f4b3cfca3cd1f70a3cc2d66645da062b527d2b" translate="yes" xml:space="preserve">
          <source>Click on the link to navigate to the shipping prices.</source>
          <target state="translated">点击链接,导航到运费价格。</target>
        </trans-unit>
        <trans-unit id="59469051320b59901e4a2c2f47868dd7661eb2c8" translate="yes" xml:space="preserve">
          <source>Click the &quot;Buy&quot; button to add the product to the stored list of items in the cart and display a confirmation message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cc08c66323eccb2590d691177ee8938357b986" translate="yes" xml:space="preserve">
          <source>Click the &quot;Buy&quot; button. The product is added to the stored list of items in the cart, and a message is displayed.</source>
          <target state="translated">点击 &quot;购买 &quot;按钮。该产品被添加到购物车中存储的项目列表中,并显示一条信息。</target>
        </trans-unit>
        <trans-unit id="de94a55f83dbb3b79e5be35cea5e97dd7dffb5a0" translate="yes" xml:space="preserve">
          <source>Click the &quot;Checkout&quot; button to see the updated cart. Remember that changing the app causes the preview to refresh, which empties the cart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e67d710f138d2b710872747ba7ea759254edd1" translate="yes" xml:space="preserve">
          <source>Click the &lt;code&gt;Refresh&lt;/code&gt; icon in Solution Explorer.</source>
          <target state="translated">单击解决方案资源管理器中的 &lt;code&gt;Refresh&lt;/code&gt; 图标。</target>
        </trans-unit>
        <trans-unit id="16411a223f86d4e726b416df57543b1081256a5e" translate="yes" xml:space="preserve">
          <source>Click the &lt;code&gt;Show &lt;a href=&quot;visual-studio-2015&quot;&gt;All&lt;/a&gt; Files&lt;/code&gt; button in Solution Explorer to reveal all of the hidden files in the project.</source>
          <target state="translated">单击解决方案资源管理器中的&amp;ldquo; &lt;code&gt;Show &lt;a href=&quot;visual-studio-2015&quot;&gt;All&lt;/a&gt; Files&lt;/code&gt; 按钮以显示项目中所有隐藏的文件。</target>
        </trans-unit>
        <trans-unit id="fa14744f825800b5acbd3b54bc18bc3c1e050bfe" translate="yes" xml:space="preserve">
          <source>Click the &lt;em&gt;Edit&lt;/em&gt; button to switch the display back to the editable form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2ced5bb5829ad40830165be365705611673e8b" translate="yes" xml:space="preserve">
          <source>Click the &lt;em&gt;Heroes&lt;/em&gt; link and look at the URL again.</source>
          <target state="translated">单击&lt;em&gt;英雄&lt;/em&gt;链接，然后再次查看URL。</target>
        </trans-unit>
        <trans-unit id="c249fbe128a1032fa4f807ec53c9425bc77a9b75" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;DEBUG&lt;/strong&gt; button; it opens a new browser tab and re-runs the tests.</source>
          <target state="translated">单击&lt;strong&gt;调试&lt;/strong&gt;按钮；它会打开一个新的浏览器选项卡，然后重新运行测试。</target>
        </trans-unit>
        <trans-unit id="3e10750bc27032ca2a4add7fa0f3bb215e14b513" translate="yes" xml:space="preserve">
          <source>Click the browser back button or the &quot;Heroes&quot; link to activate a dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e578611e4803016143a92e1ef69e1623c79dcb" translate="yes" xml:space="preserve">
          <source>Click the browser's back and forward buttons and the browser navigates backward and forward through the history of pages you've seen.</source>
          <target state="translated">点击浏览器的后退和前进按钮,浏览器就会在你看过的历史页面中前后导航。</target>
        </trans-unit>
        <trans-unit id="ceea20d77290f0cb78d5f302dff2055b8d170030" translate="yes" xml:space="preserve">
          <source>Click the browser's back and forward buttons, and the browser navigates backward and forward through the history of pages you've seen.</source>
          <target state="translated">点击浏览器的后退和前进按钮,浏览器就会在你看过的历史页面中前后导航。</target>
        </trans-unit>
        <trans-unit id="c3c0280b7777b8cef4c29b98f8d337fb8e934ef7" translate="yes" xml:space="preserve">
          <source>Click the element</source>
          <target state="translated">点击元素</target>
        </trans-unit>
        <trans-unit id="950e0a5a7930594e16bd57f00c733233272c41ae" translate="yes" xml:space="preserve">
          <source>Click the link. The address bar updates to &lt;code&gt;/heroes&lt;/code&gt; and the list of heroes appears.</source>
          <target state="translated">点击链接。地址栏更新为 &lt;code&gt;/heroes&lt;/code&gt; ，出现英雄列表。</target>
        </trans-unit>
        <trans-unit id="09703d1ff01a59ef498218efeacdae1639095d1f" translate="yes" xml:space="preserve">
          <source>Clicking</source>
          <target state="translated">Clicking</target>
        </trans-unit>
        <trans-unit id="1da2ea4a87d6f19823b803f949be3d7491916217" translate="yes" xml:space="preserve">
          <source>Clicking a button triggers emission of a &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, the boolean &lt;em&gt;payload&lt;/em&gt;.</source>
          <target state="translated">单击按钮会触发发出布尔值&lt;em&gt;有效载荷&lt;/em&gt; &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb49b11f73402cdd0bffcf5889ea5a109de39f23" translate="yes" xml:space="preserve">
          <source>Clicking a button, an anchor, or an arbitrary HTML element is a common test task.</source>
          <target state="translated">点击一个按钮、一个锚或一个任意的HTML元素是一个常见的测试任务。</target>
        </trans-unit>
        <trans-unit id="9e48257c907b0db2169f81abb1cd380daa59c644" translate="yes" xml:space="preserve">
          <source>Clicking a hero item now does nothing. You'll &lt;a href=&quot;toh-pt5#heroes-component-links&quot;&gt;fix that shortly&lt;/a&gt; after you enable routing to the &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">现在，单击英雄项无济于事。在启用路由到 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 之后&lt;a href=&quot;toh-pt5#heroes-component-links&quot;&gt;不久&lt;/a&gt;，将对此进行修复。</target>
        </trans-unit>
        <trans-unit id="c5a1b225039f1d739bb3ad5c0e447f8353e3f6c3" translate="yes" xml:space="preserve">
          <source>Clicking a hero on the Heroes page does nothing.</source>
          <target state="translated">在 &quot;英雄 &quot;页面上点击一个英雄,什么也做不了。</target>
        </trans-unit>
        <trans-unit id="94ce9e68184680b2bf6501df58c75a0e538fcd4b" translate="yes" xml:space="preserve">
          <source>Clicking links on the page to navigate to a new view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4d1f403e12c12ef8797335854dcbcd6dfc676b" translate="yes" xml:space="preserve">
          <source>Clicking the &quot;Back&quot; button returns you to the Dashboard. Links at the top take you to either of the main views. If you click &quot;Heroes,&quot; the app displays the &quot;Heroes&quot; master list view.</source>
          <target state="translated">单击 &quot;返回 &quot;按钮,您将返回到仪表板。顶部的链接可将您带到任何一个主视图。如果您点击 &quot;英雄&quot;,该应用程序将显示 &quot;英雄 &quot;主列表视图。</target>
        </trans-unit>
        <trans-unit id="3931f42f723a39b2782772fe00cbe5cefdd4bca6" translate="yes" xml:space="preserve">
          <source>Clicking the &quot;send&quot; or &quot;cancel&quot; buttons &lt;em&gt;does&lt;/em&gt; clear the popup view. To see how, look at the &lt;code&gt;closePopup()&lt;/code&gt; method again:</source>
          <target state="translated">单击&amp;ldquo;发送&amp;rdquo;或&amp;ldquo;取消&amp;rdquo;按钮&lt;em&gt;不会&lt;/em&gt;清除弹出视图。若要查看操作方法，请再次查看 &lt;code&gt;closePopup()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="ed7c6ba8c7bda81a369f7c3bda47c29a3eeebae0" translate="yes" xml:space="preserve">
          <source>Clicking the &quot;send&quot; or &quot;cancel&quot; buttons clears the popup view. The &lt;code&gt;closePopup()&lt;/code&gt; function navigates imperatively with the &lt;code&gt;&lt;a href=&quot;../api/router/router#navigate&quot;&gt;Router.navigate()&lt;/a&gt;&lt;/code&gt; method, passing in a &lt;a href=&quot;router-tutorial-toh#link-parameters-array&quot;&gt;link parameters array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd67b84f237767316633df665005c5fee0b984a" translate="yes" xml:space="preserve">
          <source>Clicking the &lt;strong&gt;Toggle Format&lt;/strong&gt; button alternates the date format between &lt;strong&gt;04/15/1988&lt;/strong&gt; and &lt;strong&gt;Friday, April 15, 1988&lt;/strong&gt; as shown in Figure 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedc0826561d31a8b6c6010ebae551f66676ec2d" translate="yes" xml:space="preserve">
          <source>Clicking the anchor should trigger the &lt;code&gt;onClick()&lt;/code&gt; method, which sets the stub's telltale &lt;code&gt;navigatedTo&lt;/code&gt; property. Tests inspect &lt;code&gt;navigatedTo&lt;/code&gt; to confirm that clicking the anchor set the expected route definition.</source>
          <target state="translated">单击锚点应触发 &lt;code&gt;onClick()&lt;/code&gt; 方法，该方法设置存根的Telltale &lt;code&gt;navigatedTo&lt;/code&gt; 属性。测试会检查 &lt;code&gt;navigatedTo&lt;/code&gt; 以确认单击锚点是否设置了预期的路线定义。</target>
        </trans-unit>
        <trans-unit id="88ad3185671e9634fbadbdf0d6fee2b35a217039" translate="yes" xml:space="preserve">
          <source>Clicking the anchor should trigger the &lt;code&gt;onClick()&lt;/code&gt; method, which sets the stub's telltale &lt;code&gt;navigatedTo&lt;/code&gt; property. Tests inspect &lt;code&gt;navigatedTo&lt;/code&gt; to confirm that clicking the anchor sets the expected route definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12253f021080f649864e8562ff22cff12f2021fe" translate="yes" xml:space="preserve">
          <source>Clicking the browser's back and forward buttons to navigate backward and forward through the browser history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833d3dfcf8141f8ab032d805db00496f93b18f57" translate="yes" xml:space="preserve">
          <source>Clicking the buttons updates the &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; via the two-way binding. The revised &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; value flows through to the &lt;em&gt;style&lt;/em&gt; binding, making the displayed text bigger or smaller.</source>
          <target state="translated">单击按钮通过双向绑定更新 &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; 。修改后的 &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; 值将传递到&lt;em&gt;样式&lt;/em&gt;绑定，从而使显示的文本更大或更小。</target>
        </trans-unit>
        <trans-unit id="4019990d5ee4de358717aa9c4b4dff1e9e791976" translate="yes" xml:space="preserve">
          <source>Clicking the buttons updates the &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt;. The revised &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; value updates the style binding, which makes the displayed text bigger or smaller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce15a56b0476c91447205e4359b504b835e90758" translate="yes" xml:space="preserve">
          <source>Clicking the first link opens the code sample on StackBlitz in a new browser tab.</source>
          <target state="translated">点击第一个链接在新的浏览器标签页中打开StackBlitz上的代码示例。</target>
        </trans-unit>
        <trans-unit id="7b9d81bfcc7b8b133f0723740f8c5243f83c2166" translate="yes" xml:space="preserve">
          <source>Clicking the hero should raise a &lt;code&gt;selected&lt;/code&gt; event that the host component (&lt;code&gt;DashboardComponent&lt;/code&gt; presumably) can hear:</source>
          <target state="translated">单击英雄应引发主机组件（可能是 &lt;code&gt;DashboardComponent&lt;/code&gt; ）可以听到的 &lt;code&gt;selected&lt;/code&gt; 事件：</target>
        </trans-unit>
        <trans-unit id="6c2cb6b6d4534d0f7d4f44550ee1cd3f63622c02" translate="yes" xml:space="preserve">
          <source>Client-server interaction</source>
          <target state="translated">客户端-服务器互动</target>
        </trans-unit>
        <trans-unit id="3d05b7f9deccb2161007447387fcc1ecd84c7c85" translate="yes" xml:space="preserve">
          <source>ClientMessageBroker</source>
          <target state="translated">ClientMessageBroker</target>
        </trans-unit>
        <trans-unit id="e7cb0d70d74fee09271bd2dc0ab81ce5975a34ae" translate="yes" xml:space="preserve">
          <source>ClientMessageBrokerFactory</source>
          <target state="translated">ClientMessageBrokerFactory</target>
        </trans-unit>
        <trans-unit id="d8cdb573350de78596e4852bc9cacfc94e8d17ed" translate="yes" xml:space="preserve">
          <source>Clone</source>
          <target state="translated">Clone</target>
        </trans-unit>
        <trans-unit id="f13a5b201f983728d6b1d5cf4f74c7adbf318e65" translate="yes" xml:space="preserve">
          <source>Clone the request object, using its &lt;code&gt;clone()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979edc50fbf6954ad12084978da00876eb48ddf3" translate="yes" xml:space="preserve">
          <source>Clone the resulting value so that it has a new identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c510c50acb1cdb4194bcb189503fb557b8f0d1d" translate="yes" xml:space="preserve">
          <source>Close the application tab, but not the window. This should also close the Developer Tools.</source>
          <target state="translated">关闭应用程序标签,但不是窗口。这也应该关闭开发者工具。</target>
        </trans-unit>
        <trans-unit id="22f63b79b03d3993269429e6178e7579689d4daf" translate="yes" xml:space="preserve">
          <source>Closest replacement in &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;/testing&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;/testing&lt;/code&gt; &lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt; / testing中最接近的替换</target>
        </trans-unit>
        <trans-unit id="e671772e24b04909f77713dfe4745675929c9db3" translate="yes" xml:space="preserve">
          <source>Closest replacement in &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/common/http&quot;&gt;http中&lt;/a&gt;最接近的替换</target>
        </trans-unit>
        <trans-unit id="3e26d090c81cd0ae4e4685584b8cbc871399a5ff" translate="yes" xml:space="preserve">
          <source>Code Tabs</source>
          <target state="translated">代码标签</target>
        </trans-unit>
        <trans-unit id="fb03260f7d7c972c5f881252a1bf5974c61308ba" translate="yes" xml:space="preserve">
          <source>Code associated with a component that defines how to render the component's &lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;.</source>
          <target state="translated">与组件关联的代码，用于定义如何呈现组件的&lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26f8d7e5de50c48432a82b39f956846ac9a3edf2" translate="yes" xml:space="preserve">
          <source>Code coverage enforcement</source>
          <target state="translated">法规覆盖范围的执行</target>
        </trans-unit>
        <trans-unit id="f46c72bf4ae7eb48d96f55e4013ee3f2d7142778" translate="yes" xml:space="preserve">
          <source>Code example</source>
          <target state="translated">代码示例</target>
        </trans-unit>
        <trans-unit id="7f24c84fb8f4849c887796b363e0764aa6358136" translate="yes" xml:space="preserve">
          <source>Code folding</source>
          <target state="translated">代码折叠</target>
        </trans-unit>
        <trans-unit id="c7d0e7e0e4dd707c2571466fd21232a0c600fae4" translate="yes" xml:space="preserve">
          <source>Code review</source>
          <target state="translated">守则审查</target>
        </trans-unit>
        <trans-unit id="6e9e83946f82934cc9af7eabf849f56e5568af17" translate="yes" xml:space="preserve">
          <source>Code samples are located in sub-folders of the &lt;code&gt;content/examples&lt;/code&gt; directory of the &lt;code&gt;angular/angular&lt;/code&gt; repository. An example folder name should be the same as the guide page it supports.</source>
          <target state="translated">代码样本位于 &lt;code&gt;angular/angular&lt;/code&gt; 存储库的 &lt;code&gt;content/examples&lt;/code&gt; 目录的子文件夹中。示例文件夹名称应与其支持的指南页面相同。</target>
        </trans-unit>
        <trans-unit id="e41d178927f51afd0c45ad6d7fa26a126615f9ca" translate="yes" xml:space="preserve">
          <source>Code snippet from a file</source>
          <target state="translated">文件中的代码片段</target>
        </trans-unit>
        <trans-unit id="224c92aae86d4dcbe90c7f9da817abd49a68a22a" translate="yes" xml:space="preserve">
          <source>Code snippet markup is always in the form of a comment. Here's the default &lt;em&gt;docregion&lt;/em&gt; markup for a TypeScript or JavaScript file:</source>
          <target state="translated">代码段标记始终以注释的形式。这是TypeScript或JavaScript文件的默认&lt;em&gt;docregion&lt;/em&gt;标记：</target>
        </trans-unit>
        <trans-unit id="12290540d14510f52b7f0030a442c0c44cb71ecb" translate="yes" xml:space="preserve">
          <source>Code snippet markup is not supported for JSON files because comments are forbidden in JSON files.</source>
          <target state="translated">JSON文件不支持代码片段标记,因为JSON文件中禁止注释。</target>
        </trans-unit>
        <trans-unit id="98236b3d17ceed033b542d4613eb46ba6e125324" translate="yes" xml:space="preserve">
          <source>Code snippet markup is not supported in JSON files because comments are forbidden in JSON files. See &lt;a href=&quot;docs-style-guide#json-files&quot;&gt;below&lt;/a&gt; for details and workarounds.</source>
          <target state="translated">JSON文件不支持代码段标记，因为JSON文件中禁止注释。请参阅&lt;a href=&quot;docs-style-guide#json-files&quot;&gt;下面&lt;/a&gt;的详细信息和解决方法。</target>
        </trans-unit>
        <trans-unit id="b2f3eed2a4a45d8750a9e33d1ea2457771c53179" translate="yes" xml:space="preserve">
          <source>Code snippets</source>
          <target state="translated">代码片段</target>
        </trans-unit>
        <trans-unit id="ac2970f6e6c3e24b562997868c5c1c3fdd412357" translate="yes" xml:space="preserve">
          <source>Code snippets and code samples</source>
          <target state="translated">代码片段和代码样本</target>
        </trans-unit>
        <trans-unit id="1c800abf691fed44650ecde40fa2cf5185767d18" translate="yes" xml:space="preserve">
          <source>Code tabs display code much like &lt;em&gt;code examples&lt;/em&gt; do. The added advantage is that they can display multiple code samples within a tabbed interface. Each tab is displayed using &lt;em&gt;code pane&lt;/em&gt;.</source>
          <target state="translated">代码选项卡显示的代码与&lt;em&gt;代码示例&lt;/em&gt;非常相似。附加的优点是它们可以在选项卡式界面中显示多个代码示例。每个选项卡都使用&lt;em&gt;代码窗格&lt;/em&gt;显示。</target>
        </trans-unit>
        <trans-unit id="60d1d282300abe29d2517743776fdb26166449e8" translate="yes" xml:space="preserve">
          <source>Code that defines how to render a component's &lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ddc435fb2f971e641394b8fc884d949522ab45" translate="yes" xml:space="preserve">
          <source>Code that defines the transformation logic for a named schematic.</source>
          <target state="translated">为命名的原理图定义转换逻辑的代码。</target>
        </trans-unit>
        <trans-unit id="24a9b1e9a69e6a776df404d65c076ef88075529c" translate="yes" xml:space="preserve">
          <source>Code-example attributes</source>
          <target state="translated">代码示例属性</target>
        </trans-unit>
        <trans-unit id="205fb81b522095ce244f559338855e2127cf2d16" translate="yes" xml:space="preserve">
          <source>Code-pane attributes</source>
          <target state="translated">代码窗格属性</target>
        </trans-unit>
        <trans-unit id="1b719f3a5e89b82f76e2afe3515e95ab5698cea1" translate="yes" xml:space="preserve">
          <source>Code-tabs attributes</source>
          <target state="translated">代码标签属性</target>
        </trans-unit>
        <trans-unit id="8011ac79125624099e9d32e8ef670f86528c2033" translate="yes" xml:space="preserve">
          <source>Codelyzer</source>
          <target state="translated">Codelyzer</target>
        </trans-unit>
        <trans-unit id="4da50236eb720bd1413455d107dba335697d2a6a" translate="yes" xml:space="preserve">
          <source>Collection contents</source>
          <target state="translated">收藏内容</target>
        </trans-unit>
        <trans-unit id="e8caf58ebc2730336f5d66018e3945727efc9abc" translate="yes" xml:space="preserve">
          <source>CollectionChangeRecord</source>
          <target state="translated">CollectionChangeRecord</target>
        </trans-unit>
        <trans-unit id="704d77ae57700872edc3b0ef3936e933a5f675f8" translate="yes" xml:space="preserve">
          <source>CollectionChangeRecord has been removed from &lt;code&gt;@angular/core&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db316d38e0f2c64e217b3a2605bcc3104e4dc570" translate="yes" xml:space="preserve">
          <source>Combination</source>
          <target state="translated">Combination</target>
        </trans-unit>
        <trans-unit id="2d4444c960a283390201d4508071d4dfe606c872" translate="yes" xml:space="preserve">
          <source>Combination of NgModuleFactory and ComponentFactorys.</source>
          <target state="translated">NgModuleFactory和ComponentFactorys的组合。</target>
        </trans-unit>
        <trans-unit id="96027d3744e326ba68544f30c3f8c184f6f702c7" translate="yes" xml:space="preserve">
          <source>Combining fragments</source>
          <target state="translated">合并碎片</target>
        </trans-unit>
        <trans-unit id="edd1876ade856fe13c97a7af4232c252d357d410" translate="yes" xml:space="preserve">
          <source>Combining wildcard and void states</source>
          <target state="translated">结合通配符和无效状态</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="40a13131a199f7ed2b2e53bae9c0a5634c9185ef" translate="yes" xml:space="preserve">
          <source>Command Overview</source>
          <target state="translated">命令概述</target>
        </trans-unit>
        <trans-unit id="28d23da4f1861c2de251864384cc90103263376a" translate="yes" xml:space="preserve">
          <source>Command syntax is shown as follows:</source>
          <target state="translated">命令语法如下图所示。</target>
        </trans-unit>
        <trans-unit id="b0136eb7ffb449c2fa1b21274a97fdd8125ef15a" translate="yes" xml:space="preserve">
          <source>Commands that create or operate on apps and libraries (such as &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;generate&lt;/code&gt;) must be executed from within a workspace folder.</source>
          <target state="translated">必须在工作空间文件夹中执行在应用程序和库上创建或操作的命令（例如 &lt;code&gt;add&lt;/code&gt; 和 &lt;code&gt;generate&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2ca70f350a6f210d28976b0de4f46edc3d73716f" translate="yes" xml:space="preserve">
          <source>Commands to pass to &lt;a href=&quot;router#createUrlTree&quot;&gt;Router#createUrlTree&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63648a31e444c32ef66681b6888f0fca2836a055" translate="yes" xml:space="preserve">
          <source>Commit your changes and push.</source>
          <target state="translated">承诺你的变化和推。</target>
        </trans-unit>
        <trans-unit id="57ab8c257689203b118f3c804918fdfca1d175ab" translate="yes" xml:space="preserve">
          <source>Common form foundation classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f749ce740e43f064650c91d9a8aebd2ae4577f" translate="yes" xml:space="preserve">
          <source>Common foundation</source>
          <target state="translated">共同基础</target>
        </trans-unit>
        <trans-unit id="044d38e8939c8f6fc027ea1c90729d6aca7109d3" translate="yes" xml:space="preserve">
          <source>Common operators</source>
          <target state="translated">常用运算符</target>
        </trans-unit>
        <trans-unit id="badb8aff5ba142329a4ad7b62d8078cf42193553" translate="yes" xml:space="preserve">
          <source>CommonModule</source>
          <target state="translated">CommonModule</target>
        </trans-unit>
        <trans-unit id="330108f2948a787f6e9066865ea2b3a47c42f980" translate="yes" xml:space="preserve">
          <source>Communicating with backend services using HTTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c86ad5105299805677289b9b80314247887cba" translate="yes" xml:space="preserve">
          <source>Compare to &lt;a href=&quot;glossary#aot&quot;&gt;ahead-of-time (AOT) compilation&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;glossary#aot&quot;&gt;提前（AOT）编译进行比较&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="25d26218f8a73479c8f90335a3a6a00b6f337b22" translate="yes" xml:space="preserve">
          <source>Compare to &lt;a href=&quot;glossary#custom-element&quot;&gt;custom element&lt;/a&gt;.</source>
          <target state="translated">比较&lt;a href=&quot;glossary#custom-element&quot;&gt;自定义元素&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c022e170fda3db787738674a20dda4b677e11ddc" translate="yes" xml:space="preserve">
          <source>Compare to &lt;a href=&quot;glossary#ngmodule&quot;&gt;NgModule&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;glossary#ngmodule&quot;&gt;NgModule&lt;/a&gt;进行比较。</target>
        </trans-unit>
        <trans-unit id="ca9d691190a1543ad5b5951dda02661148f1dad1" translate="yes" xml:space="preserve">
          <source>Compare using the form builder to creating the instances manually.</source>
          <target state="translated">比较使用表单生成器和手动创建实例。</target>
        </trans-unit>
        <trans-unit id="4d3180d25790308ffef9fbe2de02c0c538d01c88" translate="yes" xml:space="preserve">
          <source>Compare with the less preferred &lt;code&gt;&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; metadata alternative.</source>
          <target state="translated">与不太喜欢的 &lt;code&gt;&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; 元数据替代方案进行比较。</target>
        </trans-unit>
        <trans-unit id="6e1d3d4dd4c47e1814c4e761fa8b3742c4180807" translate="yes" xml:space="preserve">
          <source>Compare with the less preferred &lt;code&gt;host&lt;/code&gt; metadata alternative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231783f3babfb643d604e3827c29b662da5ecc82" translate="yes" xml:space="preserve">
          <source>Comparing dates inside fakeAsync()</source>
          <target state="translated">在fakeAsync()中比较日期。</target>
        </trans-unit>
        <trans-unit id="5d60c7dd62fdcf4abcc61a6a7d335b7117968b4d" translate="yes" xml:space="preserve">
          <source>Compatibility</source>
          <target state="translated">Compatibility</target>
        </trans-unit>
        <trans-unit id="1b02994ca75141a94477242c55d0ff492b4469de" translate="yes" xml:space="preserve">
          <source>Compatibility note: The primary goal of the backward compatibility promise is to ensure that changes in the core framework and tooling don't break the existing ecosystem of components and applications and don't put undue upgrade/migration burden on Angular application and component authors.</source>
          <target state="translated">兼容性说明:向后兼容性承诺的主要目标是确保核心框架和工具的变化不会破坏现有的组件和应用的生态系统,也不会给Angular应用和组件作者带来不必要的升级/迁移负担。</target>
        </trans-unit>
        <trans-unit id="7351891215f76c0244ff90f141a455e333b9ba9d" translate="yes" xml:space="preserve">
          <source>Compilation phases</source>
          <target state="translated">汇编阶段</target>
        </trans-unit>
        <trans-unit id="b23c833bc98e34fcc44de353781870a6809c2ce3" translate="yes" xml:space="preserve">
          <source>Compile components with a &lt;code&gt;templateUrl&lt;/code&gt; for the test's NgModule. It is necessary to call this function as fetching urls is asynchronous.</source>
          <target state="translated">使用用于测试的NgModule 的 &lt;code&gt;templateUrl&lt;/code&gt; 编译组件。由于提取网址是异步的，因此有必要调用此函数。</target>
        </trans-unit>
        <trans-unit id="b1e019565fd0e122114fad2a76572cafa4c0d552" translate="yes" xml:space="preserve">
          <source>Compile the testing module asynchronously after you've finished configuring it. You &lt;strong&gt;must&lt;/strong&gt; call this method if &lt;em&gt;any&lt;/em&gt; of the testing module components have a &lt;code&gt;templateUrl&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;&lt;/code&gt; because fetching component template and style files is necessarily asynchronous. See &lt;a href=&quot;testing#compile-components&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">完成配置后，异步编译测试模块。你&lt;strong&gt;必须&lt;/strong&gt;，如果调用此方法&lt;em&gt;的任何&lt;/em&gt;测试模块组件有 &lt;code&gt;templateUrl&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;&lt;/code&gt; 因为获取组件模板和样式文件必然是异步的。见&lt;a href=&quot;testing#compile-components&quot;&gt;上文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="979fc7207da6edba1a20461ed1a9228b964150ac" translate="yes" xml:space="preserve">
          <source>Compile the testing module asynchronously after you've finished configuring it. You &lt;strong&gt;must&lt;/strong&gt; call this method if &lt;em&gt;any&lt;/em&gt; of the testing module components have a &lt;code&gt;templateUrl&lt;/code&gt; or &lt;code&gt;styleUrls&lt;/code&gt; because fetching component template and style files is necessarily asynchronous. See &lt;a href=&quot;testing-components-scenarios#compile-components&quot;&gt;above&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341a20e237ff5c4b89204a3d4d8c8af5f8aa63bb" translate="yes" xml:space="preserve">
          <source>Compiler</source>
          <target state="translated">Compiler</target>
        </trans-unit>
        <trans-unit id="a4ff411395a91d5b1dc79f3d1278e69cf04aa8b5" translate="yes" xml:space="preserve">
          <source>CompilerFactory</source>
          <target state="translated">CompilerFactory</target>
        </trans-unit>
        <trans-unit id="4dc2ee3abd448529e3588f53e80d60d1f5288a64" translate="yes" xml:space="preserve">
          <source>CompilerOptions</source>
          <target state="translated">CompilerOptions</target>
        </trans-unit>
        <trans-unit id="1b49f0cb07fed5cfdb96ce2bba96d96a96d357fa" translate="yes" xml:space="preserve">
          <source>Compiles an Angular app into an output directory named dist/ at the given output path. Must be executed from within a workspace directory.</source>
          <target state="translated">在给定的输出路径下,将Angular应用编译到名为dist/的输出目录中。必须在工作区目录下执行。</target>
        </trans-unit>
        <trans-unit id="14f023360e44232d193e338a890e4c19d000308a" translate="yes" xml:space="preserve">
          <source>Compiles the application with the &lt;a href=&quot;glossary#jit&quot;&gt;JIT compiler&lt;/a&gt; and &lt;a href=&quot;bootstrapping&quot;&gt;bootstraps&lt;/a&gt; the application's main module (&lt;code&gt;AppModule&lt;/code&gt;) to run in the browser. The JIT compiler is a reasonable choice during the development of most projects and it's the only viable choice for a sample running in a &lt;em&gt;live-coding&lt;/em&gt; environment such as Stackblitz. Alternative &lt;a href=&quot;aot-compiler&quot;&gt;compilation&lt;/a&gt;, &lt;a href=&quot;build&quot;&gt;build&lt;/a&gt;, and &lt;a href=&quot;deployment&quot;&gt;deployment&lt;/a&gt; options are available.</source>
          <target state="translated">使用&lt;a href=&quot;glossary#jit&quot;&gt;JIT编译器&lt;/a&gt;编译应用程序，并&lt;a href=&quot;bootstrapping&quot;&gt;引导&lt;/a&gt;应用程序的主模块（ &lt;code&gt;AppModule&lt;/code&gt; ）在浏览器中运行。在大多数项目的开发过程中，JIT编译器是一个合理的选择，它是在诸如Stackblitz之类的&lt;em&gt;实时编码&lt;/em&gt;环境中运行的示例的唯一可行选择。提供了其他&lt;a href=&quot;aot-compiler&quot;&gt;编译&lt;/a&gt;，&lt;a href=&quot;build&quot;&gt;构建&lt;/a&gt;和&lt;a href=&quot;deployment&quot;&gt;部署&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="50708126059fa40a6b557ef77b37be70a346beb5" translate="yes" xml:space="preserve">
          <source>Compiles the given NgModule and all of its components</source>
          <target state="translated">编译给定的NgModule和它的所有组件。</target>
        </trans-unit>
        <trans-unit id="73b7b9c6e3ac2f9105c846798742f2893a8be9e7" translate="yes" xml:space="preserve">
          <source>Compiles the given NgModule and all of its components. All templates of the components listed in &lt;code&gt;entryComponents&lt;/code&gt; have to be inlined.</source>
          <target state="translated">编译给定的NgModule及其所有组件。必须内联 &lt;code&gt;entryComponents&lt;/code&gt; 中列出的组件的所有模板。</target>
        </trans-unit>
        <trans-unit id="b93c67d6547ff213b669253b4ffc6f0cdf8f366d" translate="yes" xml:space="preserve">
          <source>Completed Tour of Heroes example application. For more information, see &lt;a href=&quot;tutorial&quot;&gt;Tour of Heroes app and tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de39b9b91b8f7180a411b770d0b07b5599e52b42" translate="yes" xml:space="preserve">
          <source>Completions lists</source>
          <target state="translated">完工名单</target>
        </trans-unit>
        <trans-unit id="8888e0cf1a2c2fd0498704b282ff6ffc60e95cb3" translate="yes" xml:space="preserve">
          <source>Complex animation Sequences</source>
          <target state="translated">复杂的动画序列</target>
        </trans-unit>
        <trans-unit id="6c208d675cf6c07a5ea2f5b619875954f7edeb3a" translate="yes" xml:space="preserve">
          <source>Complex animation sequences</source>
          <target state="translated">复杂的动画序列</target>
        </trans-unit>
        <trans-unit id="38bb4df6bab9aede2293cef9b9ad58be0b3a29a1" translate="yes" xml:space="preserve">
          <source>Complex animations can have many things happening at once. But what if you want to create an animation involving several animations happening one after the other? Earlier we used &lt;a href=&quot;../api/animations/group&quot;&gt;&lt;code&gt;group()&lt;/code&gt;&lt;/a&gt; to run multiple animations all at the same time, in parallel.</source>
          <target state="translated">复杂的动画可以同时发生很多事情。但是，如果您想创建一个动画，其中包含一个接一个发生的多个动画，该怎么办？之前我们使用&lt;a href=&quot;../api/animations/group&quot;&gt; &lt;code&gt;group()&lt;/code&gt; &lt;/a&gt;来同时并行运行多个动画。</target>
        </trans-unit>
        <trans-unit id="e7b80648a434b40526c0d9e8ab3bbc1771baf9d8" translate="yes" xml:space="preserve">
          <source>Complex configuration values</source>
          <target state="translated">复杂的配置值</target>
        </trans-unit>
        <trans-unit id="c92c529e0731c57efd7550480196484040b33c3e" translate="yes" xml:space="preserve">
          <source>Component</source>
          <target state="translated">Component</target>
        </trans-unit>
        <trans-unit id="516d8480c6ea7e5e78171eef9373ac7cd5f70db0" translate="yes" xml:space="preserve">
          <source>Component (B) is the parent of another component (C) that defines its own, even &lt;em&gt;more specialized&lt;/em&gt; provider for &lt;code&gt;CarService&lt;/code&gt;.</source>
          <target state="translated">组件（B）是另一个组件（C）的父级，该组件定义了自己的 &lt;code&gt;CarService&lt;/code&gt; 甚至&lt;em&gt;更为专门的&lt;/em&gt;提供程序。</target>
        </trans-unit>
        <trans-unit id="6c6a824a16623ee0b32f2357a8d7b8db120fe3be" translate="yes" xml:space="preserve">
          <source>Component DOM testing</source>
          <target state="translated">组件DOM测试</target>
        </trans-unit>
        <trans-unit id="8ea7f737b1c6dd041d0d69bb58b053702ef34738" translate="yes" xml:space="preserve">
          <source>Component Interaction</source>
          <target state="translated">组件互动</target>
        </trans-unit>
        <trans-unit id="1119a03609be0e26f0b83ce1b815ac1ef4ba2995" translate="yes" xml:space="preserve">
          <source>Component Styles</source>
          <target state="translated">组件样式</target>
        </trans-unit>
        <trans-unit id="ca7585be91ae5aa056821ee74e95e1de1b09310c" translate="yes" xml:space="preserve">
          <source>Component Test Basics</source>
          <target state="translated">组件测试基础知识</target>
        </trans-unit>
        <trans-unit id="fc991f93e2c88dc262e01671c09afbe0757e6c8e" translate="yes" xml:space="preserve">
          <source>Component Test Scenarios</source>
          <target state="translated">组件测试场景</target>
        </trans-unit>
        <trans-unit id="fd40a457b9e4e1afef35a0f7de1f3f1f701d052a" translate="yes" xml:space="preserve">
          <source>Component binding</source>
          <target state="translated">组件绑定</target>
        </trans-unit>
        <trans-unit id="cd24457c9b7dc7ba1d421757845f793c80019fa2" translate="yes" xml:space="preserve">
          <source>Component class</source>
          <target state="translated">组件类</target>
        </trans-unit>
        <trans-unit id="78197fcc61b947f45c6d27cabc4c7c8a26dd350e" translate="yes" xml:space="preserve">
          <source>Component class testing</source>
          <target state="translated">组件类测试</target>
        </trans-unit>
        <trans-unit id="173ef8eef33b3a015b205cd7b3e1051414c17628" translate="yes" xml:space="preserve">
          <source>Component class testing should be kept very clean and simple. It should test only a single unit. At first glance, you should be able to understand what the test is testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd1cb80eef428ae3b3e4c894c36b107b7a92287" translate="yes" xml:space="preserve">
          <source>Component configuration</source>
          <target state="translated">组件配置</target>
        </trans-unit>
        <trans-unit id="e403eb48a3799fbeef85de47dee17fd3567678c4" translate="yes" xml:space="preserve">
          <source>Component custom prefix</source>
          <target state="translated">组件自定义前缀</target>
        </trans-unit>
        <trans-unit id="92223451f571ab07fa63eb6c4fdc64e185de9c7d" translate="yes" xml:space="preserve">
          <source>Component decorator</source>
          <target state="translated">组件装饰器</target>
        </trans-unit>
        <trans-unit id="4b156bc6b7215149af0299458e72e26181d26575" translate="yes" xml:space="preserve">
          <source>Component directives &lt;strong&gt;should not&lt;/strong&gt; use the following attributes:</source>
          <target state="translated">组件指令&lt;strong&gt;不应&lt;/strong&gt;使用以下属性：</target>
        </trans-unit>
        <trans-unit id="1b2c144285210dd5bbe0792678f5f896a79660c5" translate="yes" xml:space="preserve">
          <source>Component directives may also use the following attributes:</source>
          <target state="translated">组件指令还可以使用以下属性。</target>
        </trans-unit>
        <trans-unit id="c54468e20f7644178b82ade992718614d8369ce7" translate="yes" xml:space="preserve">
          <source>Component inside a test host</source>
          <target state="translated">测试主机内的组件</target>
        </trans-unit>
        <trans-unit id="2e9c97c88785c4b9db147f15b457d6114a875403" translate="yes" xml:space="preserve">
          <source>Component interaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b6cd1c5c2fe07aede776527928b5d7682adba2" translate="yes" xml:space="preserve">
          <source>Component lifecycle hooks overview</source>
          <target state="translated">组件生命周期钩子概述</target>
        </trans-unit>
        <trans-unit id="d04d57678cf109bf45daef3aa34052f94933e2d0" translate="yes" xml:space="preserve">
          <source>Component marble tests</source>
          <target state="translated">大理石组件测试</target>
        </trans-unit>
        <trans-unit id="9e6c549ff22b030abd1a117d74976137e2550458" translate="yes" xml:space="preserve">
          <source>Component metadata</source>
          <target state="translated">组件元数据</target>
        </trans-unit>
        <trans-unit id="f2ceb3a65afe0033a9f8057bc4dee1462c979e51" translate="yes" xml:space="preserve">
          <source>Component or directive instance for which the host element should be retrieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad800316fe97dc21af2417441adf06059ed33e1e" translate="yes" xml:space="preserve">
          <source>Component outputs are dispatched as HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent&quot;&gt;Custom Events&lt;/a&gt;, with the name of the custom event matching the output name. For example, for a component with &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;() valueChanged = new &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;()&lt;/code&gt;, the corresponding custom element will dispatch events with the name &quot;valueChanged&quot;, and the emitted data will be stored on the event&amp;rsquo;s &lt;code&gt;detail&lt;/code&gt; property. If you provide an alias, that value is used; for example, &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;('myClick') clicks = new &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&amp;lt;string&amp;gt;();&lt;/code&gt; results in dispatch events with the name &quot;myClick&quot;.</source>
          <target state="translated">组件输出作为HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent&quot;&gt;Custom Events&lt;/a&gt;调度，其自定义事件的名称与输出名称匹配。例如，对于具有 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;() valueChanged = new &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;()&lt;/code&gt; ，相应的自定义元素将调度名称为&amp;ldquo; valueChanged&amp;rdquo;的事件，并且发出的数据将存储在事件的 &lt;code&gt;detail&lt;/code&gt; 属性中。如果提供别名，则使用该值。例如， &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;('myClick') clicks = new &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&amp;lt;string&amp;gt;();&lt;/code&gt; 导致名称为&amp;ldquo; myClick&amp;rdquo;的调度事件。</target>
        </trans-unit>
        <trans-unit id="a9ea9312f0e536e509ee307db80d647c47b6a4a7" translate="yes" xml:space="preserve">
          <source>Component selectors</source>
          <target state="translated">组件选择器</target>
        </trans-unit>
        <trans-unit id="91f2d783c93cb5bf2c82d1cdc8c98a40b448e571" translate="yes" xml:space="preserve">
          <source>Component styles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8863b469cad5dc791fae35412b4254fed7745b28" translate="yes" xml:space="preserve">
          <source>Component styles have a few special &lt;em&gt;selectors&lt;/em&gt; from the world of shadow DOM style scoping (described in the &lt;a href=&quot;https://www.w3.org/TR/css-scoping-1&quot;&gt;CSS Scoping Module Level 1&lt;/a&gt; page on the &lt;a href=&quot;https://www.w3.org&quot;&gt;W3C&lt;/a&gt; site). The following sections describe these selectors.</source>
          <target state="translated">组件样式有一些来自影子DOM样式范围世界的特殊&lt;em&gt;选择器&lt;/em&gt;（在&lt;a href=&quot;https://www.w3.org&quot;&gt;W3C&lt;/a&gt;网站上的&lt;a href=&quot;https://www.w3.org/TR/css-scoping-1&quot;&gt;CSS范围模块1级&lt;/a&gt;页面中进行了描述）。以下各节介绍了这些选择器。</target>
        </trans-unit>
        <trans-unit id="c446f8314ac20002e5ecf53891c030438828a2ec" translate="yes" xml:space="preserve">
          <source>Component styles normally apply only to the HTML in the component's own template.</source>
          <target state="translated">组件的样式通常只适用于组件自身模板中的HTML。</target>
        </trans-unit>
        <trans-unit id="ea2ecee4a949dbf40e4abdfb3f361cc06d154b19" translate="yes" xml:space="preserve">
          <source>Component templates are not always fixed. An application may need to load new components at runtime.</source>
          <target state="translated">组件模板并不总是固定的。应用程序可能需要在运行时加载新的组件。</target>
        </trans-unit>
        <trans-unit id="fadc85e8437b1cdd7af92ff5b173596395910c6e" translate="yes" xml:space="preserve">
          <source>Component templates often have nested components, whose templates may contain more components.</source>
          <target state="translated">组件模板往往有嵌套组件,其模板可能包含更多的组件。</target>
        </trans-unit>
        <trans-unit id="17195bfa784b960b7ee998ef0d8e6030f0340729" translate="yes" xml:space="preserve">
          <source>Component testing scenarios</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29183b8a21065292055062d7462b9e1d1b4abafb" translate="yes" xml:space="preserve">
          <source>Component to &lt;a href=&quot;../changedetectorref#markForCheck&quot;&gt;mark for check&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43652ff79cfd8f9d0118ca00f815b83151f09899" translate="yes" xml:space="preserve">
          <source>Component with a dependency</source>
          <target state="translated">具有依赖性的组件</target>
        </trans-unit>
        <trans-unit id="9b8bf28b2e5f05d7a69da7a49da675689404155c" translate="yes" xml:space="preserve">
          <source>Component with async service</source>
          <target state="translated">具有异步服务的组件</target>
        </trans-unit>
        <trans-unit id="41ed493fa280ebc7f4b7605ea8c601d5796f60cb" translate="yes" xml:space="preserve">
          <source>Component with external files</source>
          <target state="translated">带有外部文件的组件</target>
        </trans-unit>
        <trans-unit id="a68b8dbf2387ec137e9b2d3fc6b9da1e905d6b34" translate="yes" xml:space="preserve">
          <source>Component with inputs and outputs</source>
          <target state="translated">有输入和输出的组件</target>
        </trans-unit>
        <trans-unit id="e1236f7608681ed2a1269df0535b9888ff0c1324" translate="yes" xml:space="preserve">
          <source>Component-less route: grouping routes without a component</source>
          <target state="translated">无组件路由:将没有组件的路由进行分组。</target>
        </trans-unit>
        <trans-unit id="685f6e115c5169adc25a44d77aed6eb00bc124cb" translate="yes" xml:space="preserve">
          <source>ComponentFactory</source>
          <target state="translated">ComponentFactory</target>
        </trans-unit>
        <trans-unit id="86525493504d87a98402483f8c3054424e31bb06" translate="yes" xml:space="preserve">
          <source>ComponentFactoryResolver</source>
          <target state="translated">ComponentFactoryResolver</target>
        </trans-unit>
        <trans-unit id="5a101fd475d77eb764e9fed972a6bbd46bc80495" translate="yes" xml:space="preserve">
          <source>ComponentFixture</source>
          <target state="translated">ComponentFixture</target>
        </trans-unit>
        <trans-unit id="12e293c8cf590c8746d84456b1dc0aa586f017de" translate="yes" xml:space="preserve">
          <source>ComponentFixtureAutoDetect</source>
          <target state="translated">ComponentFixtureAutoDetect</target>
        </trans-unit>
        <trans-unit id="e14a2773bbf3d8a6ab2a1d8aa1ed7bae8a0f0c06" translate="yes" xml:space="preserve">
          <source>ComponentFixtureNoNgZone</source>
          <target state="translated">ComponentFixtureNoNgZone</target>
        </trans-unit>
        <trans-unit id="06e98cec7c3eaf575c1d34319d462717d0387fe3" translate="yes" xml:space="preserve">
          <source>ComponentRef</source>
          <target state="translated">ComponentRef</target>
        </trans-unit>
        <trans-unit id="ad6c4b6618cfc741ae22fbd010f4d93752f06491" translate="yes" xml:space="preserve">
          <source>Componentless Routes</source>
          <target state="translated">无组件路线</target>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Components</target>
        </trans-unit>
        <trans-unit id="04871d72df14f67889a30f54a88254070cdbf35d" translate="yes" xml:space="preserve">
          <source>Components and the DOM</source>
          <target state="translated">组件和DOM</target>
        </trans-unit>
        <trans-unit id="3ec4533ed719f39b381cbdfc417b27788619074f" translate="yes" xml:space="preserve">
          <source>Components are directives, and the &lt;code&gt;providers&lt;/code&gt; option is inherited from &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt;. You can also configure providers for directives and pipes at the same level as the component.</source>
          <target state="translated">组件是指令， &lt;code&gt;providers&lt;/code&gt; 选项是从 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 继承的。您还可以在与组件相同的级别上配置指令和管道的提供程序。</target>
        </trans-unit>
        <trans-unit id="7b6ccc6716d5ea20911cd8f2b468603ff8cc07e3" translate="yes" xml:space="preserve">
          <source>Components are normally marked as dirty (in need of rerendering) when inputs have changed or events have fired in the view. Call this method to ensure that a component is checked even if these triggers have not occured.</source>
          <target state="translated">当视图中的输入发生变化或事件发生时,组件通常被标记为dirty(需要重新渲染)。调用此方法可确保即使这些触发器没有发生,组件也会被检查。</target>
        </trans-unit>
        <trans-unit id="758ca75658783ea368ef9f3d5f2f45b30f82ce73" translate="yes" xml:space="preserve">
          <source>Components are the main building block for Angular applications. Each component consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111fdb54ac7de4a5014fda70ad4653ce5adce0c1" translate="yes" xml:space="preserve">
          <source>Components are the most basic UI building block of an Angular app. An Angular app contains a tree of Angular components.</source>
          <target state="translated">组件是Angular应用最基本的UI构件。一个Angular应用包含一个Angular组件树。</target>
        </trans-unit>
        <trans-unit id="82e8f3bc2333c7cc18c50daf6aa116204f2ef464" translate="yes" xml:space="preserve">
          <source>Components are used in your templates, as in the following example:</source>
          <target state="translated">组件在你的模板中使用,如下面的例子。</target>
        </trans-unit>
        <trans-unit id="69dc5e05a59cdc6a7dabbb6d83c2adc09bba15dc" translate="yes" xml:space="preserve">
          <source>Components as elements</source>
          <target state="translated">作为要素的组件</target>
        </trans-unit>
        <trans-unit id="a6e394315dc7817973d18be1e075c8e2dd6217e7" translate="yes" xml:space="preserve">
          <source>Components define &lt;em&gt;views&lt;/em&gt;, which are sets of screen elements that Angular can choose among and modify according to your program logic and data.</source>
          <target state="translated">组件定义&lt;em&gt;视图&lt;/em&gt;，这些&lt;em&gt;视图&lt;/em&gt;是Angular可以在其中选择并根据您的程序逻辑和数据进行修改的屏幕元素集。</target>
        </trans-unit>
        <trans-unit id="584e4a632efc57983135945abb97b1a89e6f3c71" translate="yes" xml:space="preserve">
          <source>Components in external modules continue to receive the instance provided by their injectors.</source>
          <target state="translated">外部模块中的组件继续接收其注入器提供的实例。</target>
        </trans-unit>
        <trans-unit id="7084833ae18593d05fba020fc794dab748ba3ed2" translate="yes" xml:space="preserve">
          <source>Components in route definitions are also &lt;em&gt;entry components&lt;/em&gt;. A route definition refers to a component by its &lt;em&gt;type&lt;/em&gt;. The router ignores a routed component's selector, if it even has one, and loads the component dynamically into a &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">路由定义中的&lt;em&gt;组件&lt;/em&gt;也是&lt;em&gt;条目组件&lt;/em&gt;。路由定义通过&lt;em&gt;类型&lt;/em&gt;来引用组件。路由器将忽略路由组件的选择器（即使它具有选择器），并将其动态加载到 &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="43f2f799d4b9ac0bf7ee88c6bd79441decb0f884" translate="yes" xml:space="preserve">
          <source>Components often have service dependencies.</source>
          <target state="translated">组件往往有服务依赖性。</target>
        </trans-unit>
        <trans-unit id="9cd4f8b0ba0728b87ad402a9c2782f583d5ae1fd" translate="yes" xml:space="preserve">
          <source>Components should expose their interactions through inputs for providing context, and outputs for communicating events to other components.</source>
          <target state="translated">组件应该通过提供上下文的输入和向其他组件传达事件的输出来暴露它们的交互。</target>
        </trans-unit>
        <trans-unit id="408fdb18600b6c51987875e2857d0bd7de437dc5" translate="yes" xml:space="preserve">
          <source>Components shouldn't fetch or save data directly and they certainly shouldn't knowingly present fake data. They should focus on presenting data and delegate data access to a service.</source>
          <target state="translated">组件不应该直接获取或保存数据,它们当然也不应该明知故犯地呈现虚假数据。它们应该专注于呈现数据,并将数据访问委托给服务。</target>
        </trans-unit>
        <trans-unit id="0fd8d99abc38e74108276aa2bf4da03f77f0284d" translate="yes" xml:space="preserve">
          <source>Components that are only loaded dynamically by the router or by bootstrapping. Such &lt;a href=&quot;ngmodule-faq#q-entry-component-defined&quot;&gt;entry components&lt;/a&gt; can never be selected in another component's template. While there's no harm in exporting them, there's also no benefit.</source>
          <target state="translated">仅由路由器或引导程序动态加载的组件。此类&lt;a href=&quot;ngmodule-faq#q-entry-component-defined&quot;&gt;输入组件&lt;/a&gt;永远不能在另一个组件的模板中选择。虽然出口它们没有害处，但也没有好处。</target>
        </trans-unit>
        <trans-unit id="537c22bb75822c4c36bedeb23ff56c63634900e8" translate="yes" xml:space="preserve">
          <source>Components use &lt;em&gt;services&lt;/em&gt;, which provide specific functionality not directly related to views. Service providers can be &lt;em&gt;injected&lt;/em&gt; into components as &lt;em&gt;dependencies&lt;/em&gt;, making your code modular, reusable, and efficient.</source>
          <target state="translated">组件使用&lt;em&gt;服务&lt;/em&gt;，该&lt;em&gt;服务&lt;/em&gt;提供与视图不直接相关的特定功能。服务提供者可以作为&lt;em&gt;依赖项&lt;/em&gt;&lt;em&gt;注入&lt;/em&gt;到组件中，从而使您的代码模块化，可重用且高效。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a95007464d33e889aaba72bdf85c74650118684" translate="yes" xml:space="preserve">
          <source>Components with &lt;code&gt;RouterLink&lt;/code&gt;</source>
          <target state="translated">具有 &lt;code&gt;RouterLink&lt;/code&gt; 的组件</target>
        </trans-unit>
        <trans-unit id="ccedd94d6bed4d22293639bbe5172d0520a683ac" translate="yes" xml:space="preserve">
          <source>Components&amp;mdash;directives with a template.</source>
          <target state="translated">组件-带有模板的指令。</target>
        </trans-unit>
        <trans-unit id="613ad0917443866a4cb165203f1ee52098da7920" translate="yes" xml:space="preserve">
          <source>Components, directives, and pipes must belong to &lt;em&gt;exactly&lt;/em&gt; one module. The compiler emits an error if you try to declare the same class in more than one module. Be careful not to re-declare a class that is imported directly or indirectly from another module.</source>
          <target state="translated">组件，指令和管道必须&lt;em&gt;完全&lt;/em&gt;属于一个模块。如果您尝试在多个模块中声明同一类，则编译器将发出错误。注意不要重新声明直接或间接从另一个模块导入的类。</target>
        </trans-unit>
        <trans-unit id="f83376d3c02857e22ac16459650a1b33f829c804" translate="yes" xml:space="preserve">
          <source>Compose dynamic form contents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25329c5d2d61ce4bad0d187f0818cef72fdd3c7a" translate="yes" xml:space="preserve">
          <source>Compose form groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4bfab1753d945b45d24b8a8f9b694887544a20" translate="yes" xml:space="preserve">
          <source>Compose multiple async validators into a single function that returns the union of the individual error objects for the provided control.</source>
          <target state="translated">将多个异步验证器组成一个函数,返回所提供控件的各个错误对象的联合。</target>
        </trans-unit>
        <trans-unit id="713796f29d99bd25c93da871cdbfc3841e1f3dd4" translate="yes" xml:space="preserve">
          <source>Compose multiple validators into a single function that returns the union of the individual error maps for the provided control.</source>
          <target state="translated">将多个验证器组成一个函数,返回所提供控件的各个错误映射的联合。</target>
        </trans-unit>
        <trans-unit id="d9a25d5f8a23e5ca75242aa5e2740c8f9f249d5f" translate="yes" xml:space="preserve">
          <source>Composing multiple streams</source>
          <target state="translated">组成多个流</target>
        </trans-unit>
        <trans-unit id="5e38c43e1c50a47d2c669e4e9d9a1e63776dd98d" translate="yes" xml:space="preserve">
          <source>Comprehensive demonstration of Angular's template syntax. For more information, see &lt;a href=&quot;template-syntax&quot;&gt;Template reference variables&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4099139a76dd41e01b827890573d000064768d5d" translate="yes" xml:space="preserve">
          <source>Compute a difference between the previous state and the new &lt;code&gt;object&lt;/code&gt; state.</source>
          <target state="translated">计算先前状态和新 &lt;code&gt;object&lt;/code&gt; 状态之间的差异。</target>
        </trans-unit>
        <trans-unit id="9131da43681025794422d5020969e00fe64736c6" translate="yes" xml:space="preserve">
          <source>Computer notation for exponential value (n times a power of 10). Example: 1.2E3</source>
          <target state="translated">指数值的计算机符号(10的n次方)。例如:1.2E3</target>
        </trans-unit>
        <trans-unit id="5d1028a96cb860efd0927aa08b2ec23c11b5bc22" translate="yes" xml:space="preserve">
          <source>Concatenate modules with Rollup before bundling them with Webpack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd720ee45c492d6d7ed703e270ad918fb8c585e" translate="yes" xml:space="preserve">
          <source>Conceptually, you can imagine the Angular service worker as a forward cache or a CDN edge that is installed in the end user's web browser. The service worker's job is to satisfy requests made by the Angular app for resources or data from a local cache, without needing to wait for the network. Like any cache, it has rules for how content is expired and updated.</source>
          <target state="translated">从概念上讲,你可以把Angular服务工作者想象成一个前向缓存或安装在最终用户的Web浏览器中的CDN边缘。服务工作者的工作是满足Angular应用对本地缓存中的资源或数据的请求,而不需要等待网络。像任何缓存一样,它有关于内容如何过期和更新的规则。</target>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="e52b9120da6a8af8541ebd623c609817158aa62a" translate="yes" xml:space="preserve">
          <source>Concrete injectors implement this interface.</source>
          <target state="translated">混凝土喷射器实现这个接口。</target>
        </trans-unit>
        <trans-unit id="bf3a8f65ab3fb42ac0382088a24de08d0f61d189" translate="yes" xml:space="preserve">
          <source>Concrete injectors implement this interface. Injectors are configured with &lt;a href=&quot;../guide/glossary#provider&quot;&gt;providers&lt;/a&gt; that associate dependencies of various types with &lt;a href=&quot;../guide/glossary#di-token&quot;&gt;injection tokens&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f1b7e372d92a878669324d80007121df0e9993" translate="yes" xml:space="preserve">
          <source>Conditional display with NgIf</source>
          <target state="translated">使用NgIf进行条件显示</target>
        </trans-unit>
        <trans-unit id="86d8c4f438a64027d9c179cbd6cac7228180ae16" translate="yes" xml:space="preserve">
          <source>Conditional operator</source>
          <target state="translated">条件运算符</target>
        </trans-unit>
        <trans-unit id="9eb462985047418e569f749429a8e241082dca68" translate="yes" xml:space="preserve">
          <source>Conditionally swaps the contents of the div by selecting one of the embedded templates based on the current value of &lt;code&gt;conditionExpression&lt;/code&gt;.</source>
          <target state="translated">通过根据 &lt;code&gt;conditionExpression&lt;/code&gt; 的当前值选择嵌入式模板之一，有条件地交换div的内容。</target>
        </trans-unit>
        <trans-unit id="d12923d02188453229d798291560b0e402e0cdc2" translate="yes" xml:space="preserve">
          <source>Config object passed to initialize the platform.</source>
          <target state="translated">通过配置对象来初始化平台。</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="8d1100f1c9c4d1eb55d7214837d3fb9654ee74a6" translate="yes" xml:space="preserve">
          <source>Configuration defaults for Architect builder targets for this project.</source>
          <target state="translated">本项目中Architect builder目标的配置默认值。</target>
        </trans-unit>
        <trans-unit id="0724d66ac5fde4442631a00bd09131b2dd58588a" translate="yes" xml:space="preserve">
          <source>Configuration file used by &lt;a href=&quot;https://github.com/ng-packagr/ng-packagr&quot;&gt;ng-packagr&lt;/a&gt; for building your library.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ng-packagr/ng-packagr&quot;&gt;ng-packagr&lt;/a&gt;用于构建库的配置文件。</target>
        </trans-unit>
        <trans-unit id="5e9e2d64c5e127c299b896e015cd2b7bb4f8b5d4" translate="yes" xml:space="preserve">
          <source>Configuration files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0dd88079f541af57e4adfcddaae6fb163e6da93" translate="yes" xml:space="preserve">
          <source>Configuration for SystemJsNgModuleLoader. token.</source>
          <target state="translated">SystemJsNgModuleLoader的配置,token。</target>
        </trans-unit>
        <trans-unit id="02f59039a9582f5ef9337d8fd89fec8a897a3f8c" translate="yes" xml:space="preserve">
          <source>Configuration for code editors. See &lt;a href=&quot;https://editorconfig.org/&quot;&gt;EditorConfig&lt;/a&gt;.</source>
          <target state="translated">代码编辑器的配置。参见&lt;a href=&quot;https://editorconfig.org/&quot;&gt;EditorConfig&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c15ee8a67a30e7e9a9e71785f7b672937eec9ce" translate="yes" xml:space="preserve">
          <source>Configuration inheritance with extends</source>
          <target state="translated">配置继承与扩展</target>
        </trans-unit>
        <trans-unit id="6b0ea8f50fd69e0d1f261fb22638d876ef51713d" translate="yes" xml:space="preserve">
          <source>Configuration options determine how the control propagates changes and emits events after updates and validity checks are applied.</source>
          <target state="translated">配置选项决定了在应用更新和有效性检查后,控件如何传播变化和发出事件。</target>
        </trans-unit>
        <trans-unit id="904ea1c4be060c0b5f8bd86dec83859df182f291" translate="yes" xml:space="preserve">
          <source>Configuration options for LocationUpgrade.</source>
          <target state="translated">LocationUpgrade的配置选项。</target>
        </trans-unit>
        <trans-unit id="080e38262b19342c92f70dcb4f588e0426189269" translate="yes" xml:space="preserve">
          <source>Configuration options object for the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;. The object can have two shapes:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 的配置选项对象。该对象可以具有两种形状：</target>
        </trans-unit>
        <trans-unit id="04c43124a5e5f33bef1c53433d118dd7a497ccab" translate="yes" xml:space="preserve">
          <source>Configuration options that determine how the control emits events after marking is applied.</source>
          <target state="translated">用于确定控件在应用标记后如何发射事件的配置选项。</target>
        </trans-unit>
        <trans-unit id="fbc1e7137af00b8101306741dc390346f387c194" translate="yes" xml:space="preserve">
          <source>Configuration options that determine how the control propagates changes and emits events after marking is applied.</source>
          <target state="translated">配置选项,用于确定控件在应用标记后如何传播更改和发射事件。</target>
        </trans-unit>
        <trans-unit id="60371f334a83c028ab5ba1cd688d36dd7b388f85" translate="yes" xml:space="preserve">
          <source>Configuration options that determine how the control propagates changes and emits events after the control is disabled.</source>
          <target state="translated">配置选项,用于确定控件禁用后如何传播变化和发射事件。</target>
        </trans-unit>
        <trans-unit id="d54bb3a87a91320a8a66b7f3a8ab342702b3a630" translate="yes" xml:space="preserve">
          <source>Configuration options that determine how the control propagates changes and emits events after the marking is applied.</source>
          <target state="translated">用于确定控件在应用标记后如何传播更改和发射事件的配置选项。</target>
        </trans-unit>
        <trans-unit id="e5e068b29775ffa65327c0c8208d34c6077b4704" translate="yes" xml:space="preserve">
          <source>Configuration options that determine how the control propagates changes and emits events after the value changes.</source>
          <target state="translated">配置选项,决定了在值改变后,控件如何传播变化并发出事件。</target>
        </trans-unit>
        <trans-unit id="eef8c09918819b33239a64a7704d2dc27700f4ed" translate="yes" xml:space="preserve">
          <source>Configuration options that determine how the control propagates changes and emits events after the value changes. The configuration options are passed to the &lt;a href=&quot;abstractcontrol#updateValueAndValidity&quot;&gt;updateValueAndValidity&lt;/a&gt; method.</source>
          <target state="translated">决定控件如何传播的配置选项，更改和在值更改后发出事件。配置选项将传递给&lt;a href=&quot;abstractcontrol#updateValueAndValidity&quot;&gt;updateValueAndValidity&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="d7da654574374e97b1b1d633c048bae7669cdbc6" translate="yes" xml:space="preserve">
          <source>Configuration options that determine how the control propagates changes and emits events after the value is patched.</source>
          <target state="translated">配置选项,决定了在值被修补后,控件如何传播变化和发出事件。</target>
        </trans-unit>
        <trans-unit id="1c8c51fa4affb5692281be0093de6971007241a1" translate="yes" xml:space="preserve">
          <source>Configuration options that determine how the control propagates changes and emits events events after marking is applied.</source>
          <target state="translated">配置选项,用于确定控件在应用标记后如何传播更改和发射事件事件。</target>
        </trans-unit>
        <trans-unit id="1e20f0372bd831c5bf266eaa0e2a5d55a55725a0" translate="yes" xml:space="preserve">
          <source>Configuration options that determine how the control propagates changes and emits events when the group is reset.</source>
          <target state="translated">配置选项,用于确定当组被重置时,控件如何传播变化和发出事件。</target>
        </trans-unit>
        <trans-unit id="e95346d92ef28a1f10e1fda94a68c78f7ddc899d" translate="yes" xml:space="preserve">
          <source>Configuration options that determine how the control propagates changes and emits events when the value changes. The configuration options are passed to the &lt;a href=&quot;abstractcontrol#updateValueAndValidity&quot;&gt;updateValueAndValidity&lt;/a&gt; method.</source>
          <target state="translated">确定值传播时控件如何传播的配置选项和发出事件。配置选项将传递给&lt;a href=&quot;abstractcontrol#updateValueAndValidity&quot;&gt;updateValueAndValidity&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="f225227a9ede3a3a8dd6e1abda67f983abb549ed" translate="yes" xml:space="preserve">
          <source>Configure CLI for CI testing in Chrome</source>
          <target state="translated">在Chrome中为CI测试配置CLI</target>
        </trans-unit>
        <trans-unit id="c7b29bddffe31db8562618db2dcd2e4e60815f01" translate="yes" xml:space="preserve">
          <source>Configure IIS rewrite rules</source>
          <target state="translated">配置IIS重写规则</target>
        </trans-unit>
        <trans-unit id="89b41b15bfe9509457f2290a57e31d089c487f02" translate="yes" xml:space="preserve">
          <source>Configure Visual Studio to use the global external web tools instead of the tools that ship with Visual Studio:</source>
          <target state="translated">配置Visual Studio使用全局的外部网络工具,而不是Visual Studio附带的工具。</target>
        </trans-unit>
        <trans-unit id="ddbfa3351a7da736d0f49a97dc1ad6c0732013f9" translate="yes" xml:space="preserve">
          <source>Configure XSRF protection.</source>
          <target state="translated">配置XSRF保护。</target>
        </trans-unit>
        <trans-unit id="ed8d54f9a98aa953033d3f194a4460811675a05f" translate="yes" xml:space="preserve">
          <source>Configure a custom route matcher for AngularJS routes</source>
          <target state="translated">为AngularJS路由配置自定义路由匹配器。</target>
        </trans-unit>
        <trans-unit id="40dd712a3b2c0fb2198e61700e7b674122237218" translate="yes" xml:space="preserve">
          <source>Configure an injector with a service provider</source>
          <target state="translated">用服务提供者配置注射器</target>
        </trans-unit>
        <trans-unit id="b13e3e83717f3b6e903c9549155c22d7088485f0" translate="yes" xml:space="preserve">
          <source>Configure environment-specific defaults</source>
          <target state="translated">配置特定环境的默认值</target>
        </trans-unit>
        <trans-unit id="4264ed71674e27966b2c0b46b2608327f0ad1b6c" translate="yes" xml:space="preserve">
          <source>Configure options that control how the control propagates changes and emits events when marked as untouched</source>
          <target state="translated">配置选项,以控制控件在标记为未触及时如何传播变化和发射事件。</target>
        </trans-unit>
        <trans-unit id="8cf7ca44f8f33409d312682ce9ad98ded1245676" translate="yes" xml:space="preserve">
          <source>Configure options that determine how the control propagates changes and emits events after the value changes</source>
          <target state="translated">配置一些选项,这些选项决定了在值改变后,控件如何传播变化并发出事件。</target>
        </trans-unit>
        <trans-unit id="eb57e0371e2fc9618005ed283bc5a627e0d0503d" translate="yes" xml:space="preserve">
          <source>Configure project for Circle CI</source>
          <target state="translated">为Circle CI配置项目</target>
        </trans-unit>
        <trans-unit id="170e1de26a76b0b5d609277eac722fc254816590" translate="yes" xml:space="preserve">
          <source>Configure project for Travis CI</source>
          <target state="translated">为Travis CI配置项目</target>
        </trans-unit>
        <trans-unit id="16a9aa72cb715e4fdbe55f12687848393d9768d2" translate="yes" xml:space="preserve">
          <source>Configure target-specific file replacements</source>
          <target state="translated">配置特定目标的文件替换</target>
        </trans-unit>
        <trans-unit id="8d35a8912f7e5dc75b8b11df8308bd48528c3ace" translate="yes" xml:space="preserve">
          <source>Configure the Angular Router to defer loading of all other modules (and their associated code), either by &lt;a href=&quot;router#preloading&quot;&gt;waiting until the app has launched&lt;/a&gt; or by &lt;a href=&quot;router#asynchronous-routing&quot;&gt;&lt;em&gt;lazy loading&lt;/em&gt;&lt;/a&gt; them on demand.</source>
          <target state="translated">将Angular Router配置为推迟加载所有其他模块（及其关联的代码），方法是&lt;a href=&quot;router#preloading&quot;&gt;等待应用启动，&lt;/a&gt;或者根据需要&lt;a href=&quot;router#asynchronous-routing&quot;&gt;&lt;em&gt;延迟加载&lt;/em&gt;&lt;/a&gt;它们。</target>
        </trans-unit>
        <trans-unit id="cdca2e4dfc020306ad3328f9ed1b1e7868495a01" translate="yes" xml:space="preserve">
          <source>Configure the Angular Router to defer loading of all other modules (and their associated code), either by &lt;a href=&quot;router-tutorial-toh#preloading&quot;&gt;waiting until the app has launched&lt;/a&gt; or by &lt;a href=&quot;router#lazy-loading&quot;&gt;&lt;em&gt;lazy loading&lt;/em&gt;&lt;/a&gt; them on demand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4739487924b4fe1ff58f7b0d7e0253c2b3322c0" translate="yes" xml:space="preserve">
          <source>Configure the class so that you have an observable, &lt;code&gt;heroes$&lt;/code&gt;, a &lt;code&gt;selectedId&lt;/code&gt; to hold the &lt;code&gt;id&lt;/code&gt; number of the hero, and the heroes in the &lt;code&gt;ngOnInit()&lt;/code&gt;, add the following code to get the &lt;code&gt;id&lt;/code&gt; of the selected hero. This code snippet assumes that you have a heroes list, a hero service, a function to get your heroes, and the HTML to render your list and details, just as in the Tour of Heroes example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334da6f9fd9174a3baa490afae90e32f065348c1" translate="yes" xml:space="preserve">
          <source>Configure the component to use the cart service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4c2e92d82a4ec3de973912a2abd2f9c68b616d" translate="yes" xml:space="preserve">
          <source>Configure the control to update on a blur event</source>
          <target state="translated">配置控件在发生模糊事件时更新。</target>
        </trans-unit>
        <trans-unit id="cea6116a1253fc1036b641181589e01fbb198bb9" translate="yes" xml:space="preserve">
          <source>Configure the control to update on a submit event</source>
          <target state="translated">配置控件在提交事件时更新。</target>
        </trans-unit>
        <trans-unit id="3f746a68905eaf70487c3a4b6c2f9fdf25b6f714" translate="yes" xml:space="preserve">
          <source>Configure the new schematic</source>
          <target state="translated">配置新的原理图</target>
        </trans-unit>
        <trans-unit id="51965dab4793a37225d1a1be0a49b829d5e23bf4" translate="yes" xml:space="preserve">
          <source>Configure the router module with &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; 配置路由器模块。</target>
        </trans-unit>
        <trans-unit id="cd1a902d750f1c3a051ac9adef4d547529be7083" translate="yes" xml:space="preserve">
          <source>Configure the routes.</source>
          <target state="translated">配置路由。</target>
        </trans-unit>
        <trans-unit id="ac47d13e9fb69ec283379427c60cda732da4a6e6" translate="yes" xml:space="preserve">
          <source>Configure the server to redirect requests for missing files to &lt;code&gt;index.html&lt;/code&gt;. Learn more about server-side redirects &lt;a href=&quot;deployment#fallback&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">配置服务器以将丢失文件的请求重定向到 &lt;code&gt;index.html&lt;/code&gt; 。&lt;a href=&quot;deployment#fallback&quot;&gt;在下面&lt;/a&gt;了解有关服务器端重定向的更多信息。</target>
        </trans-unit>
        <trans-unit id="e5b4e42ab75b8784da8b861251f32df14e4e0ed8" translate="yes" xml:space="preserve">
          <source>Configures &lt;a href=&quot;npm-packages&quot;&gt;npm package dependencies&lt;/a&gt; that are available to all projects in the workspace. See &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;npm documentation&lt;/a&gt; for the specific format and contents of this file.</source>
          <target state="translated">配置可用于工作空间中所有项目的&lt;a href=&quot;npm-packages&quot;&gt;npm软件包依赖项&lt;/a&gt;。有关此文件的特定格式和内容，请参阅&lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;npm文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05d23157ddf003648e8e746d3559880a65b4dc54" translate="yes" xml:space="preserve">
          <source>Configures &lt;a href=&quot;npm-packages&quot;&gt;npm package dependencies&lt;/a&gt; that are required for this library.</source>
          <target state="translated">配置此库所需的&lt;a href=&quot;npm-packages&quot;&gt;npm软件包依赖关系&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3cd14ca10fd76adaadc5939ae472d04f24c24d40" translate="yes" xml:space="preserve">
          <source>Configures &lt;code&gt;HttpClientTestingBackend&lt;/code&gt; as the &lt;code&gt;&lt;a href=&quot;../httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; used by &lt;code&gt;&lt;a href=&quot;../httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">提供配置 &lt;code&gt;HttpClientTestingBackend&lt;/code&gt; 作为 &lt;code&gt;&lt;a href=&quot;../httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; 所使用 &lt;code&gt;&lt;a href=&quot;../httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aaf933ef56571a123747f65a5b55a64b98ada50f" translate="yes" xml:space="preserve">
          <source>Configures &lt;code&gt;HttpClientTestingBackend&lt;/code&gt; as the &lt;code&gt;&lt;a href=&quot;httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; used by &lt;code&gt;&lt;a href=&quot;httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">提供配置 &lt;code&gt;HttpClientTestingBackend&lt;/code&gt; 作为 &lt;code&gt;&lt;a href=&quot;httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; 所使用 &lt;code&gt;&lt;a href=&quot;httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbb7e4485932cfd1de7a060e475b3815ae97dfc1" translate="yes" xml:space="preserve">
          <source>Configures XSRF protection support for outgoing requests.</source>
          <target state="translated">配置XSRF对出站请求的保护支持。</target>
        </trans-unit>
        <trans-unit id="b8a1de12ced777c182047fc1700c6e22c8edc707" translate="yes" xml:space="preserve">
          <source>Configures a browser-based app to transition from a server-rendered app, if one is present on the page.</source>
          <target state="translated">配置基于浏览器的应用程序,以从服务器渲染的应用程序(如果页面上有)过渡。</target>
        </trans-unit>
        <trans-unit id="a434ad619286dfe86adfce0465b9d38610c08bc2" translate="yes" xml:space="preserve">
          <source>Configures a preloading strategy. One of &lt;code&gt;&lt;a href=&quot;preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;nopreloading&quot;&gt;NoPreloading&lt;/a&gt;&lt;/code&gt; (the default).</source>
          <target state="translated">配置预加载策略。一个 &lt;code&gt;&lt;a href=&quot;preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;nopreloading&quot;&gt;NoPreloading&lt;/a&gt;&lt;/code&gt; （默认值）。</target>
        </trans-unit>
        <trans-unit id="a709e8acb46c26ccfe94d302e108117ba50bc817" translate="yes" xml:space="preserve">
          <source>Configures and initializes environment for unit testing and provides methods for creating components and services in unit tests.</source>
          <target state="translated">配置和初始化单元测试的环境,并提供在单元测试中创建组件和服务的方法。</target>
        </trans-unit>
        <trans-unit id="d974520f6e13caa7523a050c50112dac9842e81c" translate="yes" xml:space="preserve">
          <source>Configures if the scroll position needs to be restored when navigating back.</source>
          <target state="translated">配置导航返回时是否需要恢复滚动位置。</target>
        </trans-unit>
        <trans-unit id="355e28af987d6e19841341eeb2a4d70ee68fa8fa" translate="yes" xml:space="preserve">
          <source>Configures routes for the application. Supports static, parameterized, redirect, and wildcard routes. Also supports custom route data and resolve.</source>
          <target state="translated">为应用程序配置路由。支持静态、参数化、重定向和通配符路由。还支持自定义路由数据和解析。</target>
        </trans-unit>
        <trans-unit id="655c57a99af0d3109e31ed75d5bcd9d001455065" translate="yes" xml:space="preserve">
          <source>Configures sharing of target browsers and Node.js versions among various front-end tools. See &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;Browserslist on GitHub&lt;/a&gt; for more information.</source>
          <target state="translated">在各种前端工具之间配置目标浏览器和Node.js版本的共享。有关更多信息，请参见&lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;GitHub上的Browserslist&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad517b56561202c6f4359a9192de454ae8a95b9c" translate="yes" xml:space="preserve">
          <source>Configures the &lt;a href=&quot;../../../guide/glossary#injector&quot;&gt;dependency injector&lt;/a&gt; for &lt;code&gt;&lt;a href=&quot;httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; with supporting services for JSONP. Without this module, Jsonp requests reach the backend with method JSONP, where they are rejected.</source>
          <target state="translated">配置的&lt;a href=&quot;../../../guide/glossary#injector&quot;&gt;依赖注入&lt;/a&gt;的 &lt;code&gt;&lt;a href=&quot;httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 的与JSONP配套服务。如果没有此模块，Jsonp请求将通过JSONP方法到达后端，并在此被拒绝。</target>
        </trans-unit>
        <trans-unit id="017bdec14b57ac5df6673be7e9fcc7965f792356" translate="yes" xml:space="preserve">
          <source>Configures the &lt;a href=&quot;../../../guide/glossary#injector&quot;&gt;dependency injector&lt;/a&gt; for &lt;code&gt;&lt;a href=&quot;httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; with supporting services for XSRF. Automatically imported by &lt;code&gt;&lt;a href=&quot;httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;&lt;a href=&quot;httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 配置&lt;a href=&quot;../../../guide/glossary#injector&quot;&gt;依赖项注入程序&lt;/a&gt;，并为XSRF提供支持服务。由 &lt;code&gt;&lt;a href=&quot;httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 自动导入。</target>
        </trans-unit>
        <trans-unit id="71aa94662f29578035b51374daebcceb523a1a5c" translate="yes" xml:space="preserve">
          <source>Configures the &lt;a href=&quot;../../guide/glossary#injector&quot;&gt;dependency injector&lt;/a&gt; for &lt;code&gt;&lt;a href=&quot;http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; with supporting services for JSONP. Without this module, Jsonp requests reach the backend with method JSONP, where they are rejected.</source>
          <target state="translated">配置的&lt;a href=&quot;../../guide/glossary#injector&quot;&gt;依赖注入&lt;/a&gt;的 &lt;code&gt;&lt;a href=&quot;http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 的与JSONP配套服务。如果没有此模块，Jsonp请求将通过JSONP方法到达后端，并在此被拒绝。</target>
        </trans-unit>
        <trans-unit id="abb8b7af799cf935e6d74a82f16cc3df381fd3fa" translate="yes" xml:space="preserve">
          <source>Configures the &lt;a href=&quot;../../guide/glossary#injector&quot;&gt;dependency injector&lt;/a&gt; for &lt;code&gt;&lt;a href=&quot;http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; with supporting services for XSRF. Automatically imported by &lt;code&gt;&lt;a href=&quot;http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;&lt;a href=&quot;http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 配置&lt;a href=&quot;../../guide/glossary#injector&quot;&gt;依赖项注入程序&lt;/a&gt;，并为XSRF提供支持服务。由 &lt;code&gt;&lt;a href=&quot;http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 自动导入。</target>
        </trans-unit>
        <trans-unit id="790982c1da92d9a4a3757d5e97cbd5482faeab59" translate="yes" xml:space="preserve">
          <source>Configures the &lt;a href=&quot;../../guide/glossary#injector&quot;&gt;injector&lt;/a&gt; of this directive or component with a &lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;token&lt;/a&gt; that maps to a &lt;a href=&quot;../../guide/glossary#provider&quot;&gt;provider&lt;/a&gt; of a dependency.</source>
          <target state="translated">使用映射到依赖关系&lt;a href=&quot;../../guide/glossary#provider&quot;&gt;提供者&lt;/a&gt;的&lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;令牌&lt;/a&gt;来配置此指令或组件的&lt;a href=&quot;../../guide/glossary#injector&quot;&gt;注入器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a45f7929e71f4ba59f4a8ad3da1adfaa36da765" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value by invoking a &lt;code&gt;&lt;a href=&quot;core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 配置为通过调用 &lt;code&gt;&lt;a href=&quot;core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; 函数返回一个值。</target>
        </trans-unit>
        <trans-unit id="f02ed916f1e49de03daf252a306ed41a87a8e713" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value by invoking a &lt;code&gt;useClass&lt;/code&gt; function. Base for &lt;code&gt;&lt;a href=&quot;core/classprovider&quot;&gt;ClassProvider&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 配置为通过调用 &lt;code&gt;useClass&lt;/code&gt; 函数返回值。基地 &lt;code&gt;&lt;a href=&quot;core/classprovider&quot;&gt;ClassProvider&lt;/a&gt;&lt;/code&gt; 装饰。</target>
        </trans-unit>
        <trans-unit id="1ce7ecc5dfc85eab95440233c0752ee92190a8d5" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value by invoking a &lt;code&gt;useFactory&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92fc25f9eceebfbb5082c1b90a7de5b094fe6c6" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value for a token.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回令牌的值。</target>
        </trans-unit>
        <trans-unit id="5e479568b218802812c025359083e541bc6ccb05" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value for a token. Base for &lt;code&gt;&lt;a href=&quot;core/valueprovider&quot;&gt;ValueProvider&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回令牌的值。基地 &lt;code&gt;&lt;a href=&quot;core/valueprovider&quot;&gt;ValueProvider&lt;/a&gt;&lt;/code&gt; 装饰。</target>
        </trans-unit>
        <trans-unit id="6353fce328281bccc557008062dcf3fbfb3cedd6" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value of another &lt;code&gt;&lt;a href=&quot;core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt; token.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回另一个 &lt;code&gt;&lt;a href=&quot;core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt; 令牌的值。</target>
        </trans-unit>
        <trans-unit id="de34144b35e17ed2659e7734a48e96864873748b" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value of another &lt;code&gt;useExisting&lt;/code&gt; token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6912db51cd3dbd31d8209b6df1e76d3826ee6b25" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return an instance of &lt;code&gt;&lt;a href=&quot;core/type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; when `Type' is used as the token.</source>
          <target state="translated">配置当 &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 使用Type作为令牌时返回 &lt;code&gt;&lt;a href=&quot;core/type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="7e48ca749f7103d266a954f62377d9c41ee37b78" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return an instance of &lt;code&gt;useClass&lt;/code&gt; for a token.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回 &lt;code&gt;useClass&lt;/code&gt; 的令牌实例。</target>
        </trans-unit>
        <trans-unit id="215555381dc174a710d55310df8470a1903bc17e" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return an instance of &lt;code&gt;useClass&lt;/code&gt; for a token. Base for &lt;code&gt;&lt;a href=&quot;core/staticclassprovider&quot;&gt;StaticClassProvider&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回 &lt;code&gt;useClass&lt;/code&gt; 的令牌实例。基地 &lt;code&gt;&lt;a href=&quot;core/staticclassprovider&quot;&gt;StaticClassProvider&lt;/a&gt;&lt;/code&gt; 装饰。</target>
        </trans-unit>
        <trans-unit id="2774323b86ff54bc138cf89007f4a111fe978949" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return an instance of a token.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回令牌的实例。</target>
        </trans-unit>
        <trans-unit id="46876796cbd43a683b28fd882c707ae7ed9c73fd" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value by invoking a &lt;code&gt;&lt;a href=&quot;factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 配置为通过调用 &lt;code&gt;&lt;a href=&quot;factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; 函数返回一个值。</target>
        </trans-unit>
        <trans-unit id="b3555b19661005ca96609d18ab3d5155c9a989f4" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value by invoking a &lt;code&gt;useClass&lt;/code&gt; function. Base for &lt;code&gt;&lt;a href=&quot;classprovider&quot;&gt;ClassProvider&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 配置为通过调用 &lt;code&gt;useClass&lt;/code&gt; 函数返回值。基地 &lt;code&gt;&lt;a href=&quot;classprovider&quot;&gt;ClassProvider&lt;/a&gt;&lt;/code&gt; 装饰。</target>
        </trans-unit>
        <trans-unit id="47f2c276625f2c7d3914c20abaddb825ded6c621" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value by invoking a &lt;code&gt;useFactory&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa4d8f65f33963b2c13a185cc39738c1582c90e" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value for a token.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回令牌的值。</target>
        </trans-unit>
        <trans-unit id="2ad425856dc4fab4c772b6dfd94e9573673341fe" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value for a token. Base for &lt;code&gt;&lt;a href=&quot;valueprovider&quot;&gt;ValueProvider&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回令牌的值。基地 &lt;code&gt;&lt;a href=&quot;valueprovider&quot;&gt;ValueProvider&lt;/a&gt;&lt;/code&gt; 装饰。</target>
        </trans-unit>
        <trans-unit id="d00f9d960028889f815c04e01ccebf365295c64b" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value of another &lt;code&gt;&lt;a href=&quot;existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt; token.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回另一个 &lt;code&gt;&lt;a href=&quot;existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt; 令牌的值。</target>
        </trans-unit>
        <trans-unit id="5ab618c4a133e629211a682df05da3172c15f406" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return a value of another &lt;code&gt;useExisting&lt;/code&gt; token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ce9b3787c81b461a2ff3c1e6eccab1e8a5db21" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return an instance of &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; when `Type' is used as the token.</source>
          <target state="translated">配置当 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 使用Type作为令牌时返回 &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="c785c093ab8db357541ce09421b2905d251c6f62" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return an instance of &lt;code&gt;useClass&lt;/code&gt; for a token.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回 &lt;code&gt;useClass&lt;/code&gt; 的令牌实例。</target>
        </trans-unit>
        <trans-unit id="0534fa68714679e5acd551385a86e37f431e6ad6" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return an instance of &lt;code&gt;useClass&lt;/code&gt; for a token. Base for &lt;code&gt;&lt;a href=&quot;staticclassprovider&quot;&gt;StaticClassProvider&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回 &lt;code&gt;useClass&lt;/code&gt; 的令牌实例。基地 &lt;code&gt;&lt;a href=&quot;staticclassprovider&quot;&gt;StaticClassProvider&lt;/a&gt;&lt;/code&gt; 装饰。</target>
        </trans-unit>
        <trans-unit id="a1cdae9c54d30865f0bd4567e4ad345bca4298f1" translate="yes" xml:space="preserve">
          <source>Configures the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; to return an instance of a token.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 以返回令牌的实例。</target>
        </trans-unit>
        <trans-unit id="b4ceed2ced13e45139fbd79ba14b4345f5f02552" translate="yes" xml:space="preserve">
          <source>Configures the URL codec for encoding and decoding URLs. Default is the &lt;code&gt;AngularJSCodec&lt;/code&gt;</source>
          <target state="translated">配置URL编解码器以对URL进行编码和解码。默认为 &lt;code&gt;AngularJSCodec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96d4362ba6a5c2b25cf80a318749279e2913f30c" translate="yes" xml:space="preserve">
          <source>Configures the base href when used in client-side rendered applications</source>
          <target state="translated">配置在客户端渲染应用中使用的基本href。</target>
        </trans-unit>
        <trans-unit id="e33672527f455ecfddcd35c1002dc3b16a4c07a8" translate="yes" xml:space="preserve">
          <source>Configures the base href when used in server-side rendered applications</source>
          <target state="translated">配置服务器端渲染应用中使用的基本href。</target>
        </trans-unit>
        <trans-unit id="fda59054676b60075d480d6480c097e0ec506192" translate="yes" xml:space="preserve">
          <source>Configures the gathering of Angular CLI usage metrics. See &lt;a href=&quot;https://angular.io/cli/usage-analytics-gathering&quot;&gt;https://angular.io/cli/usage-analytics-gathering&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef7ef749cff709e887e2c2aa691baf2be4fa36e" translate="yes" xml:space="preserve">
          <source>Configures the gathering of Angular CLI usage metrics. See &lt;a href=&quot;https://v8.angular.io/cli/usage-analytics-gathering&quot;&gt;https://v8.angular.io/cli/usage-analytics-gathering&lt;/a&gt;.</source>
          <target state="translated">配置Angular CLI使用情况度量的收集。参见&lt;a href=&quot;https://v8.angular.io/cli/usage-analytics-gathering&quot;&gt;https://v8.angular.io/cli/usage-analytics-gathering&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b44dba6deb045365ba90eda211459a90a314cfa1" translate="yes" xml:space="preserve">
          <source>Configures the generation of the application's HTML index.</source>
          <target state="translated">配置应用程序的HTML索引的生成。</target>
        </trans-unit>
        <trans-unit id="606e40d38c3c6176492de2e8767b8f16cc82d975" translate="yes" xml:space="preserve">
          <source>Configures the hash prefix used in the URL when using the &lt;code&gt;&lt;a href=&quot;../hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; 时配置URL中使用的哈希前缀</target>
        </trans-unit>
        <trans-unit id="354ac0d80d0935b4f0ed926e11149cc7187b891c" translate="yes" xml:space="preserve">
          <source>Configures the queries that will be injected into the directive.</source>
          <target state="translated">配置将被注入到指令中的查询。</target>
        </trans-unit>
        <trans-unit id="a0b85c7e4fa593ef2684a74687e147f20c772314" translate="yes" xml:space="preserve">
          <source>Configures the root injector for an app with providers of &lt;code&gt;@angular/core&lt;/code&gt; dependencies that &lt;code&gt;&lt;a href=&quot;applicationref&quot;&gt;ApplicationRef&lt;/a&gt;&lt;/code&gt; needs to bootstrap components.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;applicationref&quot;&gt;ApplicationRef&lt;/a&gt;&lt;/code&gt; 需要引导组件的 &lt;code&gt;@angular/core&lt;/code&gt; 依赖关系提供程序为应用程序配置根注入器。</target>
        </trans-unit>
        <trans-unit id="64bb1a91c1b98343a1a9158d20a1b1a8de04d5f3" translate="yes" xml:space="preserve">
          <source>Configures the root injector for an app with providers of &lt;code&gt;@angular/core&lt;/code&gt; dependencies that &lt;code&gt;&lt;a href=&quot;core/applicationref&quot;&gt;ApplicationRef&lt;/a&gt;&lt;/code&gt; needs to bootstrap components.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;core/applicationref&quot;&gt;ApplicationRef&lt;/a&gt;&lt;/code&gt; 需要引导组件的 &lt;code&gt;@angular/core&lt;/code&gt; 依赖关系提供程序为应用程序配置根注入器。</target>
        </trans-unit>
        <trans-unit id="c3ea32179e836ed9d697fdab772550567562d715" translate="yes" xml:space="preserve">
          <source>Configures the scroll offset the router will use when scrolling to an element.</source>
          <target state="translated">配置当滚动到元素时,路由器将使用的滚动偏移。</target>
        </trans-unit>
        <trans-unit id="2bfb6c394274e9e69dc237b1ee54d632c4b77f09" translate="yes" xml:space="preserve">
          <source>Configures the top offset used when scrolling to an anchor.</source>
          <target state="translated">配置滚动到锚点时使用的顶部偏移。</target>
        </trans-unit>
        <trans-unit id="9cbb80073f5a7c31464f131d4117751088863bdb" translate="yes" xml:space="preserve">
          <source>Configures whether the location upgrade module should use the &lt;code&gt;&lt;a href=&quot;../hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; or the &lt;code&gt;&lt;a href=&quot;../pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">配置位置升级模块应使用 &lt;code&gt;&lt;a href=&quot;../hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; 还是 &lt;code&gt;&lt;a href=&quot;../pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34cf62f1d722f740771257374ed2d01010363851" translate="yes" xml:space="preserve">
          <source>Configures your project to use web workers, if it isn't already.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fc56ebc0f714bdfd0dff1e82922f959b5ef867" translate="yes" xml:space="preserve">
          <source>Configuring AOT compilation</source>
          <target state="translated">配置AOT编译</target>
        </trans-unit>
        <trans-unit id="dca5d7436fb543c24f85516f553280684c834989" translate="yes" xml:space="preserve">
          <source>Configuring CLI schematics</source>
          <target state="translated">配置CLI原理图</target>
        </trans-unit>
        <trans-unit id="8cedc50bc8d4e7a91d30a7c35d5264cbffc6b2fa" translate="yes" xml:space="preserve">
          <source>Configuring CommonJS dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4104f4df004b2efa73f7cbee11a07fb4dbb296f" translate="yes" xml:space="preserve">
          <source>Configuring HTTP URL parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad07be672efeb55ca3cb3f37c69044afcf5f7b7" translate="yes" xml:space="preserve">
          <source>Configuring application environments</source>
          <target state="translated">配置应用环境</target>
        </trans-unit>
        <trans-unit id="ec21d8d7cb50228b36397333d5669d30dd474349" translate="yes" xml:space="preserve">
          <source>Configuring browser compatibility</source>
          <target state="translated">配置浏览器兼容性</target>
        </trans-unit>
        <trans-unit id="1bc5290c9bfe3ed7f891c80e59aa43584653ac02" translate="yes" xml:space="preserve">
          <source>Configuring builder targets</source>
          <target state="translated">配置建造者目标</target>
        </trans-unit>
        <trans-unit id="daaea589cfdcba68c6fb4439f82db13e2663ef08" translate="yes" xml:space="preserve">
          <source>Configuring custom cookie/header names</source>
          <target state="translated">配置自定义cookie/标题名称</target>
        </trans-unit>
        <trans-unit id="3318dc8949af442001c4edd02bb7f568634038c4" translate="yes" xml:space="preserve">
          <source>Configuring differential loading</source>
          <target state="translated">配置差分加载</target>
        </trans-unit>
        <trans-unit id="e2e730960b7171130fca481fc1f10e9e9263328d" translate="yes" xml:space="preserve">
          <source>Configuring serve for ES5</source>
          <target state="translated">为ES5配置服务</target>
        </trans-unit>
        <trans-unit id="639c964ac84b4b94d851cab1e8c1a67794ff6b79" translate="yes" xml:space="preserve">
          <source>Configuring servers for hosting multiple locales is outside the scope of this guide. For details on how to deploy apps to a remote server, see &lt;a href=&quot;deployment&quot;&gt;Deployment&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e167f3c501b11cdaa3153d8880a1210498664831" translate="yes" xml:space="preserve">
          <source>Configuring size budgets</source>
          <target state="translated">配置规模预算</target>
        </trans-unit>
        <trans-unit id="b1ddf860fb1a689c82409e02255ebd68b697326b" translate="yes" xml:space="preserve">
          <source>Configuring the child component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cfa758f61cc4a5058c791720ab4d216f70b4ab" translate="yes" xml:space="preserve">
          <source>Configuring the child's template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4a4c665250aa208aa365794302cdfdd8be4d9e" translate="yes" xml:space="preserve">
          <source>Configuring the e2e command</source>
          <target state="translated">配置e2e命令</target>
        </trans-unit>
        <trans-unit id="35c1a0e449ba0dc01f7417c9c1992c3becea8cfe" translate="yes" xml:space="preserve">
          <source>Configuring the parent component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7a5c30c831c21f8c6278cebc98c8b22ac18b5e" translate="yes" xml:space="preserve">
          <source>Configuring the parent's template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8c7079cd89d0939b266f6d64431c7e2ae58c57" translate="yes" xml:space="preserve">
          <source>Configuring the request</source>
          <target state="translated">配置请求</target>
        </trans-unit>
        <trans-unit id="fdd2811811ef917c6598a28f5343087cf2fd7267" translate="yes" xml:space="preserve">
          <source>Configuring the test command</source>
          <target state="translated">配置测试命令</target>
        </trans-unit>
        <trans-unit id="b3a24839fb22b5bafd46364046d4cbddbff408ca" translate="yes" xml:space="preserve">
          <source>Confirm it&amp;rsquo;s working</source>
          <target state="translated">确认它正在工作</target>
        </trans-unit>
        <trans-unit id="224f48dab1e5cf55b03ac2f1ac05bea3b8bedb00" translate="yes" xml:space="preserve">
          <source>Confirm this for yourself by temporarily removing the &lt;code&gt;subscribe()&lt;/code&gt;, clicking &quot;Dashboard&quot;, then clicking &quot;Heroes&quot;. You'll see the full list of heroes again.</source>
          <target state="translated">暂时删除 &lt;code&gt;subscribe()&lt;/code&gt; ，单击&amp;ldquo;控制面板&amp;rdquo;，然后单击&amp;ldquo;英雄&amp;rdquo;，以自己确认。您会再次看到完整的英雄列表。</target>
        </trans-unit>
        <trans-unit id="f6715f3903bc2449584179fb098598b283932a25" translate="yes" xml:space="preserve">
          <source>Congratulations! You have a complete online store application with a product catalog, a shopping cart, and a checkout function.</source>
          <target state="translated">恭喜您!您已经拥有了一个完整的在线商店应用程序,包括产品目录、购物车和结账功能。您已经拥有了一个完整的在线商店应用程序,包括产品目录、购物车和结账功能。</target>
        </trans-unit>
        <trans-unit id="b7ad5d0678afbe3fd7553084cf4787b6e9c0c989" translate="yes" xml:space="preserve">
          <source>Congratulations! You have an online store application with a product catalog and shopping cart. You also have the ability to look up and display shipping prices.</source>
          <target state="translated">恭喜您!您已经拥有了一个带有产品目录和购物车的在线商店应用程序。您已经拥有了一个带有产品目录和购物车的在线商店应用程序。您还可以查询和显示运输价格。</target>
        </trans-unit>
        <trans-unit id="b07076eda176817725f0e052b297461dac16f835" translate="yes" xml:space="preserve">
          <source>Congratulations! You have an online store application with a product catalog and shopping cart. You can also look up and display shipping prices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c6e279d38be8fc1d0310fb7edeaf498cdea917" translate="yes" xml:space="preserve">
          <source>Congratulations! You have integrated routing into your online store.</source>
          <target state="translated">恭喜您!您已将路由整合到您的网上商店。您已经将路由集成到您的在线商店。</target>
        </trans-unit>
        <trans-unit id="0ec4a8ae4ac6c91ea3ef7e362745b3a129323812" translate="yes" xml:space="preserve">
          <source>Congratulations! You're running a hybrid application! The existing AngularJS code works as before &lt;em&gt;and&lt;/em&gt; you're ready to start adding Angular code.</source>
          <target state="translated">恭喜你！您正在运行混合应用程序！现有的AngularJS代码可以像以前一样工作&lt;em&gt;，&lt;/em&gt;您可以开始添加Angular代码了。</target>
        </trans-unit>
        <trans-unit id="1d629e3fa6fd492821bf50a06af042ffb3bd5c9e" translate="yes" xml:space="preserve">
          <source>Congratulations! You've completed your first Angular app!</source>
          <target state="translated">恭喜你!你已经完成了你的第一个Angular应用。你已经完成了你的第一个Angular应用!</target>
        </trans-unit>
        <trans-unit id="30d43a2b85f7f934e83c32a6dd269b7b686aad20" translate="yes" xml:space="preserve">
          <source>Connect your CLI to your Firebase account and initialize the connection to your project using &lt;code&gt;firebase login&lt;/code&gt; and &lt;code&gt;firebase init&lt;/code&gt;.</source>
          <target state="translated">将CLI连接到Firebase帐户，并使用 &lt;code&gt;firebase login&lt;/code&gt; 和 &lt;code&gt;firebase init&lt;/code&gt; 初始化与项目的连接。</target>
        </trans-unit>
        <trans-unit id="5c27449d136ee0edd471d5b2bcf5d772b4ffe53d" translate="yes" xml:space="preserve">
          <source>Consider a &lt;code&gt;&lt;a href=&quot;../api/common/titlecasepipe&quot;&gt;TitleCasePipe&lt;/a&gt;&lt;/code&gt; that capitalizes the first letter of each word. Here's a naive implementation with a regular expression.</source>
          <target state="translated">考虑一个 &lt;code&gt;&lt;a href=&quot;../api/common/titlecasepipe&quot;&gt;TitleCasePipe&lt;/a&gt;&lt;/code&gt; ，它大写每个单词的第一个字母。这是一个带有正则表达式的幼稚实现。</target>
        </trans-unit>
        <trans-unit id="54a77febf5f3dd1125bd27b0906cbd3c43eb8477" translate="yes" xml:space="preserve">
          <source>Consider a &lt;code&gt;&lt;a href=&quot;../api/common/titlecasepipe&quot;&gt;TitleCasePipe&lt;/a&gt;&lt;/code&gt; that capitalizes the first letter of each word. Here's an implementation with a regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11af7b9a0daf678a95a2bb3545a00907b3f43a5" translate="yes" xml:space="preserve">
          <source>Consider a &lt;code&gt;setCurrentClasses()&lt;/code&gt; component method that sets a component property, &lt;code&gt;currentClasses&lt;/code&gt;, with an object that adds or removes three classes based on the &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; state of three other component properties. Each key of the object is a CSS class name; its value is &lt;code&gt;true&lt;/code&gt; if the class should be added, &lt;code&gt;false&lt;/code&gt; if it should be removed.</source>
          <target state="translated">考虑一个 &lt;code&gt;setCurrentClasses()&lt;/code&gt; 组件方法，该方法设置一个组件属性 &lt;code&gt;currentClasses&lt;/code&gt; ，该对象具有一个根据其他三个组件属性的 &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; 状态添加或删除三个类的对象。该对象的每个键都是一个CSS类名。如果应添加该类，则其值为 &lt;code&gt;true&lt;/code&gt; ;如果应删除该类，则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="704938e400612dc2bb86a91cf695ea802ba5df28" translate="yes" xml:space="preserve">
          <source>Consider a Car component that depends on several services. Suppose you configured the root injector (marked as A) with &lt;em&gt;generic&lt;/em&gt; providers for &lt;code&gt;CarService&lt;/code&gt;, &lt;code&gt;EngineService&lt;/code&gt; and &lt;code&gt;TiresService&lt;/code&gt;.</source>
          <target state="translated">考虑一个依赖于多种服务的Car组件。假设你配置根注射器（标记为A）与&lt;em&gt;通用的&lt;/em&gt;用于提供 &lt;code&gt;CarService&lt;/code&gt; ， &lt;code&gt;EngineService&lt;/code&gt; 和 &lt;code&gt;TiresService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef6dd46525b101f499b4173e45474719d3b73bc3" translate="yes" xml:space="preserve">
          <source>Consider a simple app with only an &lt;code&gt;AppComponent&lt;/code&gt; and a &lt;code&gt;ChildComponent&lt;/code&gt;. The most basic rendered view would look like nested HTML elements such as the following:</source>
          <target state="translated">考虑一个只有 &lt;code&gt;AppComponent&lt;/code&gt; 和 &lt;code&gt;ChildComponent&lt;/code&gt; 的简单应用程序。最基本的渲染视图看起来像嵌套的HTML元素，例如：</target>
        </trans-unit>
        <trans-unit id="9d0c87c273b1cd440c8e08219bd3d9f4c12b560b" translate="yes" xml:space="preserve">
          <source>Consider adding component tests such as this one:</source>
          <target state="translated">可以考虑增加组件测试,比如这个。</target>
        </trans-unit>
        <trans-unit id="950cb0a6c5a129ab41e3d2c4b0399a2029d638c6" translate="yes" xml:space="preserve">
          <source>Consider an &lt;code&gt;ItemDetailComponent&lt;/code&gt; that presents item information and responds to user actions. Although the &lt;code&gt;ItemDetailComponent&lt;/code&gt; has a delete button, it doesn't contain the functionality to delete the hero. It can only raise an event reporting the user's delete request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ab25c1b93a2faa63cd5aea01571afde09c39f6" translate="yes" xml:space="preserve">
          <source>Consider an &lt;code&gt;ItemDetailComponent&lt;/code&gt; that presents item information and responds to user actions. Although the &lt;code&gt;ItemDetailComponent&lt;/code&gt; has a delete button, it doesn't know how to delete the hero. It can only raise an event reporting the user's delete request.</source>
          <target state="translated">考虑一个 &lt;code&gt;ItemDetailComponent&lt;/code&gt; ，它显示项目信息并响应用户操作。尽管 &lt;code&gt;ItemDetailComponent&lt;/code&gt; 具有删除按钮，但它不知道如何删除英雄。它只能引发一个报告用户删除请求的事件。</target>
        </trans-unit>
        <trans-unit id="45bbfebd52a6fc2dcad975ebb9246faf762507f1" translate="yes" xml:space="preserve">
          <source>Consider creating a &quot;barrel&quot; file that gathers all the interceptor providers into an &lt;code&gt;httpInterceptorProviders&lt;/code&gt; array, starting with this first one, the &lt;code&gt;NoopInterceptor&lt;/code&gt;.</source>
          <target state="translated">考虑创建一个&amp;ldquo;桶&amp;rdquo;文件，从第一个 &lt;code&gt;NoopInterceptor&lt;/code&gt; 开始，将所有拦截器提供程序收集到一个 &lt;code&gt;httpInterceptorProviders&lt;/code&gt; 数组中。</target>
        </trans-unit>
        <trans-unit id="b722f410e317e9cfe009f859ff75c60e3c1f71c7" translate="yes" xml:space="preserve">
          <source>Consider giving each feature module its own route configuration file. It may seem like overkill early when the feature routes are simple. But routes have a tendency to grow more complex and consistency in patterns pays off over time.</source>
          <target state="translated">考虑给每个功能模块都有自己的路由配置文件。当功能路由很简单时,早期可能会显得矫枉过正。但路由有越来越复杂的趋势,随着时间的推移,模式的一致性会得到回报。</target>
        </trans-unit>
        <trans-unit id="a52de92a816dd434e9063c072a3a8081a9a673d1" translate="yes" xml:space="preserve">
          <source>Consider giving each feature module its own route configuration file. Though the feature routes are currently minimal, routes have a tendency to grow more complex even in small apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b361db120d8326b1672390a514f03096ea8586f8" translate="yes" xml:space="preserve">
          <source>Consider how Angular bootstraps the app with the following in &lt;code&gt;main.ts&lt;/code&gt;:</source>
          <target state="translated">考虑Angular如何通过 &lt;code&gt;main.ts&lt;/code&gt; 中的以下内容引导应用程序：</target>
        </trans-unit>
        <trans-unit id="dc7dcd613e9949f90e241a188de827ceac7f5419" translate="yes" xml:space="preserve">
          <source>Consider how you provide services to client applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2610c84394a549686952f121986b0a1dfafaabe" translate="yes" xml:space="preserve">
          <source>Consider placing such helpers in a &lt;code&gt;testing&lt;/code&gt; folder sibling to the &lt;code&gt;app&lt;/code&gt; folder. This sample puts &lt;code&gt;ActivatedRouteStub&lt;/code&gt; in &lt;code&gt;testing/activated-route-stub.ts&lt;/code&gt;.</source>
          <target state="translated">考虑将此类帮助 &lt;code&gt;app&lt;/code&gt; 放置在与app文件夹同级的 &lt;code&gt;testing&lt;/code&gt; 文件夹中。此示例将 &lt;code&gt;ActivatedRouteStub&lt;/code&gt; 放入 &lt;code&gt;testing/activated-route-stub.ts&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="40a30ec038af240bb0c63a65ef68c17c3e707a72" translate="yes" xml:space="preserve">
          <source>Consider the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA&quot;&gt;ARIA&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG&quot;&gt;SVG&lt;/a&gt;. They are purely attributes, don't correspond to element properties, and don't set element properties. In these cases, there are no property targets to bind to.</source>
          <target state="translated">考虑一下&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA&quot;&gt;ARIA&lt;/a&gt;和&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG&quot;&gt;SVG&lt;/a&gt;。它们纯粹是属性，不对应于元素属性，也不设置元素属性。在这些情况下，没有要绑定的属性目标。</target>
        </trans-unit>
        <trans-unit id="6dfcd76249e9ea71a17509fe3b793289b07d8e06" translate="yes" xml:space="preserve">
          <source>Consider the &lt;code&gt;forbiddenNameValidator&lt;/code&gt; function from previous &lt;a href=&quot;form-validation#reactive-component-class&quot;&gt;examples&lt;/a&gt; in this guide. Here's what the definition of that function looks like:</source>
          <target state="translated">请考虑本指南前面&lt;a href=&quot;form-validation#reactive-component-class&quot;&gt;示例&lt;/a&gt;中的 &lt;code&gt;forbiddenNameValidator&lt;/code&gt; 函数。该函数的定义如下所示：</target>
        </trans-unit>
        <trans-unit id="99dfd21d5e12ef88c3c4da7ca77148c3ad73959b" translate="yes" xml:space="preserve">
          <source>Consider the &lt;code&gt;forbiddenNameValidator&lt;/code&gt; function from previous &lt;a href=&quot;form-validation#reactive-component-class&quot;&gt;reactive-form examples&lt;/a&gt;. Here's what the definition of that function looks like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9832950e2039437daf274f99d97ab976ff07a91b" translate="yes" xml:space="preserve">
          <source>Consider the first parameter:</source>
          <target state="translated">考虑第一个参数。</target>
        </trans-unit>
        <trans-unit id="df750f99f759535256c70ba046322057d97e3891" translate="yes" xml:space="preserve">
          <source>Consider the following &lt;code&gt;LoggingInterceptor&lt;/code&gt;, which captures the time of the request, the time of the response, and logs the outcome with the elapsed time with the injected &lt;code&gt;MessageService&lt;/code&gt;.</source>
          <target state="translated">考虑下面的 &lt;code&gt;LoggingInterceptor&lt;/code&gt; ，它捕获请求的时间，响应的时间，并使用注入的 &lt;code&gt;MessageService&lt;/code&gt; 记录经过时间的结果。</target>
        </trans-unit>
        <trans-unit id="1fa153aa2b6717da43d4aa5c2f8cdfa675736fe8" translate="yes" xml:space="preserve">
          <source>Consider the following component decorator:</source>
          <target state="translated">考虑以下组件装饰器。</target>
        </trans-unit>
        <trans-unit id="9d49b38c45368606b30731a4e8c9d9b37fce625c" translate="yes" xml:space="preserve">
          <source>Consider the following component definition:</source>
          <target state="translated">考虑以下组件定义:</target>
        </trans-unit>
        <trans-unit id="931e470c0c54c08d55bf68c3b26211322aa88c11" translate="yes" xml:space="preserve">
          <source>Consider the following directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b58526ae91b6411da07afa80fca36299bc01d23" translate="yes" xml:space="preserve">
          <source>Consider the following example that uses &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">请看下面的例子。</target>
        </trans-unit>
        <trans-unit id="b5f2036077f3da315b3a1a03b73956c51f99564f" translate="yes" xml:space="preserve">
          <source>Consider the following hierarchy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba02a047d2fa606c8b62d0728733a71f12e0cff9" translate="yes" xml:space="preserve">
          <source>Consider the following module from an imaginary app:</source>
          <target state="translated">考虑以下一个想象中的应用的模块。</target>
        </trans-unit>
        <trans-unit id="a3930ac2c45c0dfd74cd50df77026bee3f43670b" translate="yes" xml:space="preserve">
          <source>Consider the following route configuration: &lt;code&gt;[{ path: 'user/:name', component: UserCmp }]&lt;/code&gt;. When linking to this &lt;code&gt;user/:name&lt;/code&gt; route, you use the &lt;code&gt;&lt;a href=&quot;routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">请考虑以下路由配置： &lt;code&gt;[{ path: 'user/:name', component: UserCmp }]&lt;/code&gt; 。链接到此 &lt;code&gt;user/:name&lt;/code&gt; 路由时，请使用 &lt;code&gt;&lt;a href=&quot;routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="2f026432021575066863b77f4364e49bdb955125" translate="yes" xml:space="preserve">
          <source>Consider the following router link that navigates from the root of the application down to the Dragon Crisis:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d5e9696815c99087b1451ae60861a57a845f92" translate="yes" xml:space="preserve">
          <source>Consider the following template, which lets a user enter a search term to find an npm package by name. When the user enters a name in a search-box, the &lt;code&gt;PackageSearchComponent&lt;/code&gt; sends a search request for a package with that name to the npm web API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39319f460f4fb9c39f4884a7c1a88c15c5e5d19b" translate="yes" xml:space="preserve">
          <source>Consider the following template:</source>
          <target state="translated">考虑以下模板。</target>
        </trans-unit>
        <trans-unit id="9bc5918ab96c8ae8dd385d33d9088492a8181d54" translate="yes" xml:space="preserve">
          <source>Consider the next example, with a &lt;code&gt;nullItem&lt;/code&gt;.</source>
          <target state="translated">考虑下一个带有 &lt;code&gt;nullItem&lt;/code&gt; 的示例。</target>
        </trans-unit>
        <trans-unit id="2db65abc70042beb9455d6a81f9ffe531ed87cd5" translate="yes" xml:space="preserve">
          <source>Consider this &lt;code&gt;LightswitchComponent&lt;/code&gt; which toggles a light on and off (represented by an on-screen message) when the user clicks the button.</source>
          <target state="translated">考虑一下这个 &lt;code&gt;LightswitchComponent&lt;/code&gt; ，当用户单击按钮时，它可以打开和关闭灯光（由屏幕上的消息表示）。</target>
        </trans-unit>
        <trans-unit id="8fd55686b3b9fcd196785761c13b6856f6e18c3d" translate="yes" xml:space="preserve">
          <source>Consider this example of a child/parent relationship:</source>
          <target state="translated">考虑这个孩子/父母关系的例子。</target>
        </trans-unit>
        <trans-unit id="565e25b1be863570aa48357d4e37a3cb9b1014a4" translate="yes" xml:space="preserve">
          <source>Consider this example:</source>
          <target state="translated">考虑这个例子。</target>
        </trans-unit>
        <trans-unit id="373e414166550c8a0819f99056b315d0e56007a0" translate="yes" xml:space="preserve">
          <source>Consider this translation to French:</source>
          <target state="translated">请考虑将其翻译成法语。</target>
        </trans-unit>
        <trans-unit id="44b7723591959083ad1b46043ee91e613fb4e932" translate="yes" xml:space="preserve">
          <source>Consider this variation on the &lt;a href=&quot;lifecycle-hooks#afterview&quot;&gt;previous &lt;em&gt;AfterView&lt;/em&gt;&lt;/a&gt; example. This time, instead of including the child view within the template, it imports the content from the &lt;code&gt;AfterContentComponent&lt;/code&gt;'s parent. Here's the parent's template:</source>
          <target state="translated">考虑上&lt;a href=&quot;lifecycle-hooks#afterview&quot;&gt;一个&lt;em&gt;AfterView&lt;/em&gt;&lt;/a&gt;示例中的这种变化。这次，它没有从模板中包含子视图，而是从 &lt;code&gt;AfterContentComponent&lt;/code&gt; 的父项导入内容。这是父母的模板：</target>
        </trans-unit>
        <trans-unit id="b8ad4adbe52348aca60c063423976874c64b160b" translate="yes" xml:space="preserve">
          <source>Consider this variation on the &lt;a href=&quot;lifecycle-hooks#afterview&quot;&gt;previous &lt;em&gt;AfterView&lt;/em&gt;&lt;/a&gt; example. This time, instead of including the child view within the template, it imports the content from the &lt;code&gt;AfterContentComponent&lt;/code&gt;'s parent. The following is the parent's template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19ffd846c37d7414552d50785c96ff829945eb9" translate="yes" xml:space="preserve">
          <source>Consider writing a more capable version of this stub class with the &lt;a href=&quot;testing#marble-testing&quot;&gt;&lt;em&gt;marble testing library&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">考虑使用&lt;a href=&quot;testing#marble-testing&quot;&gt;&lt;em&gt;大理石测试库&lt;/em&gt;&lt;/a&gt;编写此存根类的更强大的版本。</target>
        </trans-unit>
        <trans-unit id="82c9e09b376e9fc7cc9c29b66642330e13aa3c15" translate="yes" xml:space="preserve">
          <source>Consider writing a more capable version of this stub class with the &lt;a href=&quot;testing-components-scenarios#marble-testing&quot;&gt;&lt;em&gt;marble testing library&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123acf3eb0958698db3b9d6cb8b39fb90d98951d" translate="yes" xml:space="preserve">
          <source>Consolidated setup</source>
          <target state="translated">综合设置</target>
        </trans-unit>
        <trans-unit id="599005e9d0a1ed8a6d678501e1cd08f335ab014c" translate="yes" xml:space="preserve">
          <source>Constants for the categories of parameters that can be defined for animations.</source>
          <target state="translated">可为动画定义的各类参数的常量。</target>
        </trans-unit>
        <trans-unit id="6b523fd10da4469f4b2ce06dba3999dc4b270b7d" translate="yes" xml:space="preserve">
          <source>Constants in API documentation to find more built-in tokens.</source>
          <target state="translated">API文档中的常量,以找到更多的内置令牌。</target>
        </trans-unit>
        <trans-unit id="52e68a873a2be3470675b9ee933b98d781ae7fef" translate="yes" xml:space="preserve">
          <source>Constraints</source>
          <target state="translated">Constraints</target>
        </trans-unit>
        <trans-unit id="ef05208dd9ec71f70387f2d769aa146308ccbd23" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; with the given state, validators and options.</source>
          <target state="translated">使用给定的状态，验证器和选项构造一个新的 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e2579e03480a20036b5089c167b3f0020b0184c" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">构造一个新的 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="c76dfa2168304d703ec211079e60eaef5f1dbdec" translate="yes" xml:space="preserve">
          <source>Construct a new &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">构造一个新的 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="edb7861f190be64ab7c7a39786a00727bb16847d" translate="yes" xml:space="preserve">
          <source>Constructor</source>
          <target state="translated">Constructor</target>
        </trans-unit>
        <trans-unit id="670ca6b9ef09915407c033157280805e28b73c2f" translate="yes" xml:space="preserve">
          <source>Constructor or variable initialization?</source>
          <target state="translated">构造函数还是变量初始化?</target>
        </trans-unit>
        <trans-unit id="e05a9515511c565726bade9a20901e8a1b93defa" translate="yes" xml:space="preserve">
          <source>ConstructorProvider</source>
          <target state="translated">ConstructorProvider</target>
        </trans-unit>
        <trans-unit id="4b55a3bf49768e5a45166266fd99336a9be3e26c" translate="yes" xml:space="preserve">
          <source>ConstructorSansProvider</source>
          <target state="translated">ConstructorSansProvider</target>
        </trans-unit>
        <trans-unit id="7ce1dbb7519fe8f24420e28f982f8fb187e4b298" translate="yes" xml:space="preserve">
          <source>Constructors should do little more than initialize variables. This rule makes the component safe to construct under test without fear that it will do something dramatic like talk to the server. That's why you call the &lt;code&gt;HeroService&lt;/code&gt; from within the &lt;code&gt;ngOnInit&lt;/code&gt; rather than the constructor.</source>
          <target state="translated">构造函数只需要初始化变量就可以了。该规则使组件可以安全地在测试中构建，而不必担心它会像与服务器进行对话那样令人震惊。这就是为什么您从 &lt;code&gt;ngOnInit&lt;/code&gt; 而不是构造函数中调用 &lt;code&gt;HeroService&lt;/code&gt; 的原因。</target>
        </trans-unit>
        <trans-unit id="23cadb1df353b99c4e051b6edc1ad945766aada1" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6c7265bc324b3ca092e2e42b20774ac1a7962cf" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="d752e575bd5ac363323d94fd1cddc80f248c081e" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the response as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; ，并将响应返回为 &lt;code&gt;Blob&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a9734e30c9c3fb4f3087180f1f53dda27759aa7" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as a JSON object and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c7b345a02c8a2e0b156bf32fd1d956468c16cba" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as a JSON object and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="78fa3c91d93b2834d54dad25333e8d6c6f04d52a" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as a JSON object and returns the response body as a JSON object.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将主体解释为JSON对象，并将响应主体作为JSON对象返回。</target>
        </trans-unit>
        <trans-unit id="5763f853957277c256fe8bece71d26cd1c302989" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as a text stream and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将正文解释为文本流并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d395c4f8772ed966eb476d4553f3622f3c9eb516" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as a text string and returns a string.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将正文解释为文本字符串并返回一个字符串。</target>
        </trans-unit>
        <trans-unit id="f42594ac52811090242806c1017dfff7afc2cc39" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as a text string and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将正文解释为文本字符串并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="ceb015cee9533f889ac31fcc95a89d588735115b" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3d4b7b588e3563475edba42714ce450d5308cc9" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="9e38f7f2d5fea29306efef924f497a2f58946854" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the response as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; ，并将响应返回为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="650e1e417750bced0f54cbe9f418025dc567dc8f" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt; request the interprets the body as a JSON object and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，将主体解释为JSON对象并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dad93856adb8d6b8425b7acc5385a4808c8d006a" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;DELETE&lt;/code&gt;request that interprets the body as a JSON object and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;DELETE&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="2bf9b19b246c66a2020726251530d48bc738a8aa" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e49725f1a9ae4e2054271d70637a4ebfc5fe534" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="15c388ade7bdd889621caad9b4ece27fe7dd1606" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the response as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并将响应返回为 &lt;code&gt;Blob&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3281ae3f5f4f5c1ceb31d26c685149c405cf34c9" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as a JSON object and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7bdb056ccc601478c9de526dba99533277c63fc3" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as a JSON object and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="f8808b94c91f6cb918a6e23418d801f00d007f86" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as a JSON object and returns the response body as a JSON object.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将主体解释为JSON对象，并将响应主体返回为JSON对象。</target>
        </trans-unit>
        <trans-unit id="38c4983aaec309563fd4823755b91abad4118959" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as a JSON object and returns the response body in a given type.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将主体解释为JSON对象，并以给定类型返回响应主体。</target>
        </trans-unit>
        <trans-unit id="fef0b29101aeda5c1971e298a033227042da30da" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as a text stream and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将正文解释为文本流并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88acb84a8dc8a7a7bf125dd68851430ba5c28b6f" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as a text string and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将正文解释为文本字符串并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="b2cceab39f1e7e7efe2e2f6e579fd544fa697936" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as a text string and returns the response as a string value.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将主体解释为文本字符串，并将响应作为字符串值返回。</target>
        </trans-unit>
        <trans-unit id="b9d900f5a2b2c2135dbbd2f5f071bfe09b7344a7" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85cb8493e8fa7eb489f1d771a1b639079de6048e" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="9a07c27d0a666876d3e577af932ae161d141709c" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;GET&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the response in an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;GET&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并在 &lt;code&gt;ArrayBuffer&lt;/code&gt; 中返回响应。</target>
        </trans-unit>
        <trans-unit id="8ae9709e5254a29fde908937342183243336d2e6" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e41bc7a0a26a5593b8c106a2849513992d208a4" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="b3bff2414a25c7a3a355f0ac107ce0ab2220bab8" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the response as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并将响应返回为 &lt;code&gt;Blob&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5a0f75d10f9dd47c3ef30634c7082613b93db48" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as a JSON object and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f863170a130f7b10701f3d033e7924e426505f54" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as a JSON object and returns the full HTTP event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的HTTP事件流。</target>
        </trans-unit>
        <trans-unit id="6f8ba56427c69a4a299cc298ca03f14f9791c4c6" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as a JSON object and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="61e2986956d3b70b1a243ef9d1891b235b3a7cf7" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as a JSON object and returns the response body as a JSON object.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为JSON对象，并将响应主体作为JSON对象返回。</target>
        </trans-unit>
        <trans-unit id="0410e3f2cf2f25269594792fad8a56045d9622fd" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as a JSON object and returns the response in a given type.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为JSON对象，并以给定类型返回响应。</target>
        </trans-unit>
        <trans-unit id="11c6793971907cea6cbeff4c666ee19920fc8790" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as a text string and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将正文解释为文本字符串并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="17465a76f8919024e4dab5202a2b02db5f624e11" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as a text string and returns the response as a string value.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为文本字符串，并将响应作为字符串值返回。</target>
        </trans-unit>
        <trans-unit id="d32aab72547341461188042bc33d708b084b2739" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full HTTP response.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的HTTP响应。</target>
        </trans-unit>
        <trans-unit id="75281f828c52beee78e72c74e921142c4418838c" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="651a1e9c194461a541b1e9b035c2716dab91434f" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the response as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; ，并将响应返回为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6e699f4d178bb9685d4393ffad3b66517220e5c" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;HEAD&lt;/code&gt; request that interprets the body as text stream and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;HEAD&lt;/code&gt; 请求，将正文解释为文本流，并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd3faa3853dcee5fe3d9fe9443a6f3cbab522583" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;JSONP&lt;/code&gt; request for the given URL and name of the callback parameter.</source>
          <target state="translated">为给定的URL和回调参数的名称构造一个 &lt;code&gt;JSONP&lt;/code&gt; 请求。</target>
        </trans-unit>
        <trans-unit id="235abbed0544ac665d44263fa9d57156d8a7d0d4" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12c496639b74673e61acab392af8229707d80e94" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="3860ec6228891ae23996bbb6ec573173db852b0a" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the response as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并将响应返回为 &lt;code&gt;Blob&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65f17861f529c27980d80ff43a891f5712038253" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as a JSON object and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="362c13fb84402f01f2d429576ef5e4a4f5b33b07" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as a JSON object and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="39c5b11223130ad747170436e71886fdb3ac790f" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as a JSON object and returns the response body as a JSON object.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将主体解释为JSON对象，并将响应主体返回为JSON对象。</target>
        </trans-unit>
        <trans-unit id="62dc2dc0a6122d2737ade209d92cf331f28fc41b" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as a JSON object and returns the response in a given type.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将主体解释为JSON对象，并以给定类型返回响应。</target>
        </trans-unit>
        <trans-unit id="00cc25279f1fe8a55b73b50a0f3061b5bf769645" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as a text stream and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将正文解释为文本流并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e38458638cf0324b1712678aff908b60855c606" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as a text string and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将正文解释为文本字符串并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="af762be58554aaad80f11f4e021e3cc32e035e84" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as a text string and returns the response as a string value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6d700be22e47259958685c709c9505c5740728" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02057de6678548f190b9df379d020308af41aed6" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the response as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; ，并将响应返回为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b28f32d4a88ab248f7cf83aa28581d3fb53de32" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="94cd7acd8580c2038f0ddac265f4a05e8c9fd805" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PATCH&lt;/code&gt; request that interprets the body as as a text string and returns the response as a string value.</source>
          <target state="translated">构造一个 &lt;code&gt;PATCH&lt;/code&gt; 请求，该请求将正文解释为文本字符串，并将响应作为字符串值返回。</target>
        </trans-unit>
        <trans-unit id="a81bd3729afd38c9b3f199dd3cba59451666f8e8" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;POST&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="641cb490191b751283ceeb07b3880411b3e331d9" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the response as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;POST&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并将响应返回为 &lt;code&gt;Blob&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3115bea78d82e234317f39a3678fc0f698690441" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the response in an observable of the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;POST&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; ,并以可观察到的完整事件流返回响应。</target>
        </trans-unit>
        <trans-unit id="6ba1bd26d70d1d409c49914ddecb60499cb87756" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as a JSON object and returns an observable of the response.</source>
          <target state="translated">构造一个 &lt;code&gt;POST&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回可观察到的响应。</target>
        </trans-unit>
        <trans-unit id="f1fb5bb7bfe7c0f33819f0f7b890f9a166a77955" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as a JSON object and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;POST&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5eaf2b0bba2543a7459ce52211e4f71a92ce1366" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as a JSON object and returns the response body as a JSON object.</source>
          <target state="translated">构造一个 &lt;code&gt;POST&lt;/code&gt; 请求，该请求将主体解释为JSON对象，然后将响应主体作为JSON对象返回。</target>
        </trans-unit>
        <trans-unit id="253b00de387b55f60aac23305f4fd5c1946433c7" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as a text stream and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;POST&lt;/code&gt; 请求，将正文解释为文本流并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e4eb5da1850699a1fe63fd490a53282f34e0d9a" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as a text string and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;POST&lt;/code&gt; 请求，将正文解释为文本字符串并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="7a789907a379c1ba1cf8c5c66a9f3b5f6488c4ba" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as a text string and returns the response as a string value.</source>
          <target state="translated">构造一个 &lt;code&gt;POST&lt;/code&gt; 请求，该请求将正文解释为文本字符串，并将响应作为字符串值返回。</target>
        </trans-unit>
        <trans-unit id="0b92cf6215de8d06038308cc3276b24cfc28c200" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54dee4e9bfdab77a1cce5b278205d1aa8b0386cb" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;POST&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="b3edb2404101ecf07ed861998b4a029fdffde857" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;POST&lt;/code&gt; request that interprets the body as an as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;POST&lt;/code&gt; 请求，将该请求的主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回 &lt;code&gt;ArrayBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87b99be82744dd378073f66e4b7c97962ac602f7" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full HTTP response.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的HTTP响应。</target>
        </trans-unit>
        <trans-unit id="a1235d4b058347a55fb90fed94e459e7a014ba09" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="f2b5392428552e3c8efb88251093c2bdbfba5d51" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the response as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并将响应返回为 &lt;code&gt;Blob&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0439d9f427f043166dd907683bb226cbd25f4cd6" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as a JSON object and returns an observable of JSON object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba74799172ea8fcc067f636db902fd80a63cbea" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as a JSON object and returns an observable of the response.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回可观察到的响应。</target>
        </trans-unit>
        <trans-unit id="6ca01bbee7247503c8ed6b402d209233876b14b1" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as a JSON object and returns the full HTTP response.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的HTTP响应。</target>
        </trans-unit>
        <trans-unit id="3b44df6f74adf2927b103251d3acd57cefb019cd" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as a JSON object and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="1fd26bb4f36e9f3d74c0083a4024dc81cab4d0b3" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as a JSON object and returns the response body as a JSON object.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将主体解释为JSON对象，并将响应主体返回为JSON对象。</target>
        </trans-unit>
        <trans-unit id="7d09f0b2e98042f496b98ff20dca620252b483b9" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as a text stream and returns the full HTTP response.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将正文解释为文本流并返回完整的HTTP响应。</target>
        </trans-unit>
        <trans-unit id="863358fd573521107236693d767077976e59fa2b" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as a text string and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将正文解释为文本字符串并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="377246ad02c79bf2e4d51b4f8419d3ddeeafb681" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as a text string and returns the response as a string value.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将主体解释为文本字符串，并将响应作为字符串值返回。</target>
        </trans-unit>
        <trans-unit id="64c0cd9a96668e8b3343fee0e252136c45340d24" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns an observable of the full HTTP response.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整HTTP响应的可观察值。</target>
        </trans-unit>
        <trans-unit id="bb1beb4560a375619148b6bd82dab41ae22771ac" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="ad0d5617ed1d692d198b945c2d880bf92ea9bb23" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the response as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;PUT&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并将响应返回为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="540ae61eebca15f7ce999f72c0d6ca40b66a4b06" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as an instance of the requested type and returns an observable of the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e9da8b827323d8f1c47bc0c308d4883a7b8aa4" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;code&gt;PUT&lt;/code&gt; request that interprets the body as an instance of the requested type and returns the full HTTP response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2f9b7c6872456661c302e7b127ee817109f69f" translate="yes" xml:space="preserve">
          <source>Constructs a DELETE request that interprets the body as a JSON object and returns the response in a given type.</source>
          <target state="translated">构造一个将body解释为JSON对象的DELETE请求,并以给定类型返回响应。</target>
        </trans-unit>
        <trans-unit id="4fdf78c52ba12f844dc35ac6ac10fec8165d09d8" translate="yes" xml:space="preserve">
          <source>Constructs a POST request that interprets the body as a JSON object and returns the full event stream.</source>
          <target state="translated">构造一个POST请求,将body解释为JSON对象并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="a0f16550cba971f5543bee854b84b69167c02e12" translate="yes" xml:space="preserve">
          <source>Constructs a POST request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full &lt;code&gt;HTTPresponse&lt;/code&gt;.</source>
          <target state="translated">构造一个POST请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的 &lt;code&gt;HTTPresponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="faca82d4645ac5209a169e17a54b5429d35b82f5" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; from the given array of configurations, validators and options.</source>
          <target state="translated">根据配置，验证器和选项的给定数组构造一个新的 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4f1a1329904af95fdafaf68a3286a1f491fb41e" translate="yes" xml:space="preserve">
          <source>Constructs a new HTTP header object with the given values.</source>
          <target state="translated">用给定的值构造一个新的HTTP头对象。</target>
        </trans-unit>
        <trans-unit id="23c7c42791c3ed6d93d51cd2e390649e3d52a08c" translate="yes" xml:space="preserve">
          <source>Constructs a request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整事件流的请求。</target>
        </trans-unit>
        <trans-unit id="e4f5145b1c07e56fcc5a94d8f45486317d521e44" translate="yes" xml:space="preserve">
          <source>Constructs a request that interprets the body as a blob and returns the response as a blob.</source>
          <target state="translated">构造一个将body解释为blob的请求,并将响应作为blob返回。</target>
        </trans-unit>
        <trans-unit id="7a4c3f3a26fcbf5a54904048a00ea04e24b7829c" translate="yes" xml:space="preserve">
          <source>Constructs a request that interprets the body as a text string and returns a string value.</source>
          <target state="translated">构造一个将body解释为文本字符串的请求,并返回一个字符串值。</target>
        </trans-unit>
        <trans-unit id="80832bf903757ba9e7a0204dc49d67b0e482a5dc" translate="yes" xml:space="preserve">
          <source>Constructs a request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the response in an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">构造一个将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并在 &lt;code&gt;ArrayBuffer&lt;/code&gt; 中返回响应的请求。</target>
        </trans-unit>
        <trans-unit id="c9d4aa3bbd4f5b076380c1ce5b2d9fc9aa237020" translate="yes" xml:space="preserve">
          <source>Constructs a request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the the full event stream.</source>
          <target state="translated">构造一个将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整事件流的请求。</target>
        </trans-unit>
        <trans-unit id="66a8388af3067eb92a40e42161e27adde33ad707" translate="yes" xml:space="preserve">
          <source>Constructs a request where response type and requested observable are not known statically.</source>
          <target state="translated">构造一个响应类型和请求的可观察性不为静态已知的请求。</target>
        </trans-unit>
        <trans-unit id="cc2e5129749ea1ac51e3940bcad6196f2e3f0d57" translate="yes" xml:space="preserve">
          <source>Constructs a request which interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整 &lt;code&gt;HTTPResponse&lt;/code&gt; 的请求。</target>
        </trans-unit>
        <trans-unit id="5c05e9b870c9e45179a8c60dd8a491ee6d879818" translate="yes" xml:space="preserve">
          <source>Constructs a request which interprets the body as a JSON object and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt; as a JSON object.</source>
          <target state="translated">构造一个将正文解释为JSON对象并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 作为JSON对象的请求。</target>
        </trans-unit>
        <trans-unit id="2fd177b01d4106a11ace58c091c67fb2667e5e3e" translate="yes" xml:space="preserve">
          <source>Constructs a request which interprets the body as a JSON object and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt; with the response body in the requested type.</source>
          <target state="translated">构造一个将主体解释为JSON对象的请求，并返回带有请求主体的完整 &lt;code&gt;HTTPResponse&lt;/code&gt; 和请求主体。</target>
        </trans-unit>
        <trans-unit id="e239c478d8d610cfd7229cf417e18307e479fca9" translate="yes" xml:space="preserve">
          <source>Constructs a request which interprets the body as a JSON object and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个将正文解释为JSON对象并返回完整 &lt;code&gt;HTTPResponse&lt;/code&gt; 的请求。</target>
        </trans-unit>
        <trans-unit id="19ca9e2cabc5e8cad7907af5722bad9b8c4841ae" translate="yes" xml:space="preserve">
          <source>Constructs a request which interprets the body as a JSON object and returns the full event stream.</source>
          <target state="translated">构造一个请求,将body解释为JSON对象并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="5ff310655babdbd12ef2099887de65800e95ad4a" translate="yes" xml:space="preserve">
          <source>Constructs a request which interprets the body as a JSON object with the response body of the requested type.</source>
          <target state="translated">构造一个请求,该请求将主体解释为JSON对象,响应主体为请求类型。</target>
        </trans-unit>
        <trans-unit id="5d357b5fa671a3acf59792934174d67c5969e195" translate="yes" xml:space="preserve">
          <source>Constructs a request which interprets the body as a text stream and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个将正文解释为文本流并返回完整 &lt;code&gt;HTTPResponse&lt;/code&gt; 的请求。</target>
        </trans-unit>
        <trans-unit id="fbe5633d3438abe9fc1598aad6c50f76be1c984b" translate="yes" xml:space="preserve">
          <source>Constructs a request which interprets the body as a text string and returns the full event stream.</source>
          <target state="translated">构造一个将body解释为文本字符串的请求,并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="589ee8b3009a97edc2e105e386455f14a6ac6eaf" translate="yes" xml:space="preserve">
          <source>Constructs a request which interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整 &lt;code&gt;HTTPResponse&lt;/code&gt; 的请求。</target>
        </trans-unit>
        <trans-unit id="211b45077edf145b2c1ab7a5658740f2629293f1" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f70f447bdb712016999ddd1f486a06582ad414a" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="3c2191707361f8916dd245724c3fb5d2162f638c" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as a &lt;code&gt;Blob&lt;/code&gt; and returns the response as a &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;Blob&lt;/code&gt; 并将响应返回为 &lt;code&gt;Blob&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68cb6838561e80e7628ba396368ee45ef8e2d8b2" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as a JSON object and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="902129b5eca64cc2f16d81e1fc10e63df1bee3be" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as a JSON object and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将主体解释为JSON对象并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="0c7fdf047af3a8958038a757c74e1c63d9542aef" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as a JSON object and returns the response body as a JSON object.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将主体解释为JSON对象，并将响应主体作为JSON对象返回。</target>
        </trans-unit>
        <trans-unit id="9b11290c8cfbb3b730421dfbca1d1cf02c66dd3e" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as a JSON object and returns the response in a given type.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将主体解释为JSON对象，并以给定类型返回响应。</target>
        </trans-unit>
        <trans-unit id="c7a2a5ef838d241037e01caa8ee9f37a5af4e540" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as a text string and returns a string value.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将正文解释为文本字符串并返回字符串值。</target>
        </trans-unit>
        <trans-unit id="4b7f2fe48b89261fe52e259b2880964247765df8" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as a text string and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将正文解释为文本字符串并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="179fcc296f7004ba8fa6e08e127a0d3bc8fab23b" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full HTTP response.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的HTTP响应。</target>
        </trans-unit>
        <trans-unit id="ef02beb6aacabe6634023a8cbc4f937cce1f3fdc" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the full event stream.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 并返回完整的事件流。</target>
        </trans-unit>
        <trans-unit id="f638583ad8ec6239b9861a9997058059eefcb1b8" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as an &lt;code&gt;ArrayBuffer&lt;/code&gt; and returns the response as an &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将主体解释为 &lt;code&gt;ArrayBuffer&lt;/code&gt; ，并将响应返回为 &lt;code&gt;ArrayBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60d7e2d2bd804f43e701c41db670762438d1e121" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;OPTIONS&lt;/code&gt; request that interprets the body as text stream and returns the full &lt;code&gt;HTTPResponse&lt;/code&gt;.</source>
          <target state="translated">构造一个 &lt;code&gt;OPTIONS&lt;/code&gt; 请求，该请求将正文解释为文本流并返回完整的 &lt;code&gt;HTTPResponse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0cf9d7353005581788d3e7598a8800407a55cf3e" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Observable&lt;/code&gt; that, when subscribed, causes a request with the special method &lt;code&gt;JSONP&lt;/code&gt; to be dispatched via the interceptor pipeline. The &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP pattern&lt;/a&gt; works around limitations of certain API endpoints that don't support newer, and preferable &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS&lt;/a&gt; protocol. JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the requests even if the API endpoint is not located on the same domain (origin) as the client-side application making the request. The endpoint API must support JSONP callback for JSONP requests to work. The resource API returns the JSON response wrapped in a callback function. You can pass the callback function name as one of the query parameters. Note that JSONP requests can only be used with &lt;code&gt;GET&lt;/code&gt; requests.</source>
          <target state="translated">构造一个 &lt;code&gt;Observable&lt;/code&gt; ，当订阅该Observable时，将通过拦截器管道调度使用特殊方法 &lt;code&gt;JSONP&lt;/code&gt; 的请求。该&lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP模式&lt;/a&gt;工作解决不支持较新的API特定端点的限制，最好&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS&lt;/a&gt;协议。JSONP将端点API视为JavaScript文件，并欺骗浏览器处理请求，即使API端点与发出请求的客户端应用程序不在同一个域（起源）上。端点API必须支持JSONP回调，JSONP请求才能正常工作。资源API返回包装在回调函数中的JSON响应。您可以将回调函数名称作为查询参数之一传递。请注意，JSONP请求只能与 &lt;code&gt;GET&lt;/code&gt; 一起使用请求。</target>
        </trans-unit>
        <trans-unit id="b0d247830e912c20bc354ff04c22370298537dbd" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;code&gt;Observable&lt;/code&gt; that, when subscribed, causes the configured &lt;code&gt;OPTIONS&lt;/code&gt; request to execute on the server. This method allows the client to determine the supported HTTP methods and other capabilites of an endpoint, without implying a resource action. See the individual overloads for details on the return type.</source>
          <target state="translated">构造一个 &lt;code&gt;Observable&lt;/code&gt; ，当订阅该Observable时，将导致配置的 &lt;code&gt;OPTIONS&lt;/code&gt; 请求在服务器上执行。此方法允许客户端确定支持的HTTP方法和端点的其他功能，而无需暗示资源操作。有关返回类型的详细信息，请参见各个重载。</target>
        </trans-unit>
        <trans-unit id="37b5ebdc23ba0671b7d2b5bfdd6f880fcc5a4543" translate="yes" xml:space="preserve">
          <source>Constructs an observable for a generic HTTP request that, when subscribed, fires the request through the chain of registered interceptors and on to the server.</source>
          <target state="translated">构造一个通用的HTTP请求的观测值,当被订阅时,该观测值通过注册的拦截器链向服务器发送请求。</target>
        </trans-unit>
        <trans-unit id="8b1895b2612f30f28c01f0bc2082e2c07b7909c9" translate="yes" xml:space="preserve">
          <source>Constructs an observable that, when subscribed, causes the configured &lt;code&gt;DELETE&lt;/code&gt; request to execute on the server. See the individual overloads for details on the return type.</source>
          <target state="translated">构造一个可观察的对象，该对象在订阅时会导致配置的 &lt;code&gt;DELETE&lt;/code&gt; 请求在服务器上执行。有关返回类型的详细信息，请参见各个重载。</target>
        </trans-unit>
        <trans-unit id="4d806e1dcedcaa693d77cf017adc44b16c578330" translate="yes" xml:space="preserve">
          <source>Constructs an observable that, when subscribed, causes the configured &lt;code&gt;GET&lt;/code&gt; request to execute on the server. See the individual overloads for details on the return type.</source>
          <target state="translated">构造一个可观察的对象，该对象在订阅时会导致配置的 &lt;code&gt;GET&lt;/code&gt; 请求在服务器上执行。有关返回类型的详细信息，请参见各个重载。</target>
        </trans-unit>
        <trans-unit id="71f7794dd42ec39f50c82779f160807bf91746a3" translate="yes" xml:space="preserve">
          <source>Constructs an observable that, when subscribed, causes the configured &lt;code&gt;HEAD&lt;/code&gt; request to execute on the server. The &lt;code&gt;HEAD&lt;/code&gt; method returns meta information about the resource without transferring the resource itself. See the individual overloads for details on the return type.</source>
          <target state="translated">构造一个可观察的对象，该对象在订阅时会导致配置的 &lt;code&gt;HEAD&lt;/code&gt; 请求在服务器上执行。该 &lt;code&gt;HEAD&lt;/code&gt; 方法返回关于资源的元信息不转移对资源本身。有关返回类型的详细信息，请参见各个重载。</target>
        </trans-unit>
        <trans-unit id="52ae6e3d51c8c3b5cc2d797d171f548c95c272af" translate="yes" xml:space="preserve">
          <source>Constructs an observable that, when subscribed, causes the configured &lt;code&gt;PATCH&lt;/code&gt; request to execute on the server. See the individual overloads for details on the return type.</source>
          <target state="translated">构造一个可观察的对象，该对象在订阅时会导致配置的 &lt;code&gt;PATCH&lt;/code&gt; 请求在服务器上执行。有关返回类型的详细信息，请参见各个重载。</target>
        </trans-unit>
        <trans-unit id="fb1a1c8aa44cdebcb48a20947d39495c036898ea" translate="yes" xml:space="preserve">
          <source>Constructs an observable that, when subscribed, causes the configured &lt;code&gt;POST&lt;/code&gt; request to execute on the server. The server responds with the location of the replaced resource. See the individual overloads for details on the return type.</source>
          <target state="translated">构造一个可观察的对象，该对象在订阅时会导致配置的 &lt;code&gt;POST&lt;/code&gt; 请求在服务器上执行。服务器以替换资源的位置作为响应。有关返回类型的详细信息，请参见各个重载。</target>
        </trans-unit>
        <trans-unit id="b596a81fbfe7be8f37ef25519b1c7cfdd896b547" translate="yes" xml:space="preserve">
          <source>Constructs an observable that, when subscribed, causes the configured &lt;code&gt;PUT&lt;/code&gt; request to execute on the server. The &lt;code&gt;PUT&lt;/code&gt; method replaces an existing resource with a new set of values. See the individual overloads for details on the return type.</source>
          <target state="translated">构造一个可观察的对象，该对象在订阅时会导致配置的 &lt;code&gt;PUT&lt;/code&gt; 请求在服务器上执行。该 &lt;code&gt;PUT&lt;/code&gt; 方法替换为新的设定值的现有资源。有关返回类型的详细信息，请参见各个重载。</target>
        </trans-unit>
        <trans-unit id="b0f261e39825bcaba86eb199bd75bc95a965046f" translate="yes" xml:space="preserve">
          <source>Consuming controls in a grouping</source>
          <target state="translated">在分组中消耗控制权</target>
        </trans-unit>
        <trans-unit id="5921ce9b794517579875e899237be92946964b92" translate="yes" xml:space="preserve">
          <source>Contains a re-usable animation. See &lt;code&gt;&lt;a href=&quot;animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">包含可重复使用的动画。观看 &lt;code&gt;&lt;a href=&quot;animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c05469e3e34f048954fcfa8ac3ef87c944b1adfa" translate="yes" xml:space="preserve">
          <source>Contains a set of CSS property-value pairs into a named style. See &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">包含一组命名样式的CSS属性-值对。参见 &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b9db0cfc91810c23685cf4af0b7fabd5592665d" translate="yes" xml:space="preserve">
          <source>Contains a set of animation steps. See &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">包含一组动画步骤。参见 &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3cbb3cc83027338145bb5743b8785d8f12444f5a" translate="yes" xml:space="preserve">
          <source>Contains a set of animation steps. See &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">包含一组动画步骤。查看 &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="619b3f5fbeae7c81c1f626c289ef61fe0f527a4b" translate="yes" xml:space="preserve">
          <source>Contains a set of animation steps. See &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">包含一组动画步骤。见 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ac17a2d017d4488a0bb4df8f79eeed303020ae0" translate="yes" xml:space="preserve">
          <source>Contains all the &lt;a href=&quot;router#child-routing-component&quot;&gt;child routes&lt;/a&gt; activated under the current route.</source>
          <target state="translated">包含在当前路径下激活的所有&lt;a href=&quot;router#child-routing-component&quot;&gt;子&lt;/a&gt;路径。</target>
        </trans-unit>
        <trans-unit id="72bce409a5cb959edbb4fd8f46b11b9143f48e86" translate="yes" xml:space="preserve">
          <source>Contains all the &lt;a href=&quot;router-tutorial-toh#child-routing-component&quot;&gt;child routes&lt;/a&gt; activated under the current route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad51011dfba99d373a5435f05a6da9109da527b8" translate="yes" xml:space="preserve">
          <source>Contains an animation step. See &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">包含动画步骤。参见 &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fadaa32099232d5dc3ba2a9025a9702c2d38ab0e" translate="yes" xml:space="preserve">
          <source>Contains an animation trigger. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">包含动画触发器。由 &lt;code&gt;&lt;a href=&quot;animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="15c25e46166e889e0b68feb40f1111fd91225ff1" translate="yes" xml:space="preserve">
          <source>Contains an animation trigger. Instantiated and returned by the &lt;code&gt;&lt;a href=&quot;trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">包含动画触发器。由 &lt;code&gt;&lt;a href=&quot;trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; 函数实例化并返回。</target>
        </trans-unit>
        <trans-unit id="feb6f63e05ffd985d9055b7076f337ba4c06f62d" translate="yes" xml:space="preserve">
          <source>Contains animation parameters for a re-usable animation. See &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">包含可重复使用动画的动画参数。参见 &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ff4adbdda17b5bf178e5e3fb064038ba273ce45" translate="yes" xml:space="preserve">
          <source>Contains build configuration options for particular target environments. By default there is an unnamed standard development environment and a production (&quot;prod&quot;) environment. You can define additional target environment configurations.</source>
          <target state="translated">包含针对特定目标环境的构建配置选项,默认情况下,有未命名的标准开发环境和生产(&quot;prod&quot;)环境。默认情况下,有一个未命名的标准开发环境和一个生产(&quot;prod&quot;)环境。您可以定义其他的目标环境配置。</target>
        </trans-unit>
        <trans-unit id="ab3ecf2264326072c36faae174b6f032dac8fbd3" translate="yes" xml:space="preserve">
          <source>Contains child-animation query data. See &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">包含子动画查询数据。查看 &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc7da1e369d7c4399691bc55fea56917d1fe0acd" translate="yes" xml:space="preserve">
          <source>Contains data for staggering an animation sequence. See &lt;code&gt;&lt;a href=&quot;stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">包含用于交错动画序列的数据。见 &lt;code&gt;&lt;a href=&quot;stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c761f47fc9cbfff9f17d454605795b06422010b6" translate="yes" xml:space="preserve">
          <source>Contains data to use in executing child animations returned by a query. See &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">包含用于执行查询返回的子动画的数据。见 &lt;code&gt;&lt;a href=&quot;animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efceaeecd88f26fad7fc54f488fd3156edae1d13" translate="yes" xml:space="preserve">
          <source>Contains image and other asset files to be copied as-is when you build your application.</source>
          <target state="translated">包含图像和其他资产文件,当你建立你的应用程序时,可按原样复制。</target>
        </trans-unit>
        <trans-unit id="451c833683655ca4c54bfa816ff7243e17177730" translate="yes" xml:space="preserve">
          <source>Contains the component files in which your application logic and data are defined. See details &lt;a href=&quot;file-structure#app-src&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">包含用于定义应用程序逻辑和数据的组件文件。请参阅&lt;a href=&quot;file-structure#app-src&quot;&gt;下面的&lt;/a&gt;详细信息。</target>
        </trans-unit>
        <trans-unit id="6a3570af1ff9a0c0195985687f4d9fb49189b88a" translate="yes" xml:space="preserve">
          <source>Contains the first &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; in the list of this route's child routes.</source>
          <target state="translated">包含此路由的子路由列表中的第一个 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2508437a48b549ece3f2976c0ec7536dde1129b" translate="yes" xml:space="preserve">
          <source>Contains the information about a route associated with a component loaded in an outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router state tree.</source>
          <target state="translated">包含与某一特定时刻加载在出口中的组件相关联的路由信息。ActivatedRouteSnapshot也可以用来遍历路由器状态树。</target>
        </trans-unit>
        <trans-unit id="8ba27a67003af1668cdba1d05e81fca07794cf13" translate="yes" xml:space="preserve">
          <source>Contains the version of Angular to use for the documentation. If not provided, the command uses your current Angular core version.</source>
          <target state="translated">包含文档要使用的Angular版本。如果没有提供,命令使用当前的Angular核心版本。</target>
        </trans-unit>
        <trans-unit id="6673d15b94e89eb12696401bb24c2f3bdd46cbde" translate="yes" xml:space="preserve">
          <source>Contains your library project's logic and data. Like an application project, a library project can contain components, services, modules, directives, and pipes.</source>
          <target state="translated">包含你的库项目的逻辑和数据。像应用程序项目一样,一个库项目可以包含组件、服务、模块、指令和管道。</target>
        </trans-unit>
        <trans-unit id="237350064b8c3b0e11e70b93fd554306d2a4f39f" translate="yes" xml:space="preserve">
          <source>Content Security Policy (CSP) is a defense-in-depth technique to prevent XSS. To enable CSP, configure your web server to return an appropriate &lt;code&gt;Content-Security-Policy&lt;/code&gt; HTTP header. Read more about content security policy at &lt;a href=&quot;http://www.html5rocks.com/en/tutorials/security/content-security-policy/&quot;&gt;An Introduction to Content Security Policy&lt;/a&gt; on the HTML5Rocks website.</source>
          <target state="translated">内容安全策略（CSP）是防止XSS的深度防御技术。要启用CSP，请将您的Web服务器配置为返回适当的 &lt;code&gt;Content-Security-Policy&lt;/code&gt; HTTP标头。在HTML5Rocks网站上的&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/security/content-security-policy/&quot;&gt;内容安全策略简介中&lt;/a&gt;阅读有关内容安全策略的更多信息。</target>
        </trans-unit>
        <trans-unit id="f6202692206dad79a1b14d6088be61b681526178" translate="yes" xml:space="preserve">
          <source>Content projection</source>
          <target state="translated">内容投射</target>
        </trans-unit>
        <trans-unit id="a019a50d07f41ea70df9c0821615ec4ff0dc202f" translate="yes" xml:space="preserve">
          <source>Content projection: yes</source>
          <target state="translated">内容投影:是</target>
        </trans-unit>
        <trans-unit id="4e05a83d745ac98da7773c2108efde552ef95257" translate="yes" xml:space="preserve">
          <source>Content queries are set before the &lt;code&gt;ngAfterContentInit&lt;/code&gt; callback is called.</source>
          <target state="translated">内容查询是在调用 &lt;code&gt;ngAfterContentInit&lt;/code&gt; 回调之前设置的。</target>
        </trans-unit>
        <trans-unit id="132d57a8ba3715878400596fcd4e56d25812cdcb" translate="yes" xml:space="preserve">
          <source>Content queries are set before the &lt;code&gt;ngAfterContentInit&lt;/code&gt; callback is called. View queries are set before the &lt;code&gt;ngAfterViewInit&lt;/code&gt; callback is called.</source>
          <target state="translated">内容查询是在调用 &lt;code&gt;ngAfterContentInit&lt;/code&gt; 回调之前设置的。视图查询是在调用 &lt;code&gt;ngAfterViewInit&lt;/code&gt; 回调之前设置的。</target>
        </trans-unit>
        <trans-unit id="61218e768de2538cdbdc58d958fa9e9d9945325e" translate="yes" xml:space="preserve">
          <source>Content security</source>
          <target state="translated">内容安全</target>
        </trans-unit>
        <trans-unit id="de5cbf363cbbce7cd02a96e382ca1a5a03a3865a" translate="yes" xml:space="preserve">
          <source>Content security policy</source>
          <target state="translated">内容安全政策</target>
        </trans-unit>
        <trans-unit id="0fe6c28565cc3c25e091112f9228a8f6d49d056a" translate="yes" xml:space="preserve">
          <source>ContentChild</source>
          <target state="translated">ContentChild</target>
        </trans-unit>
        <trans-unit id="80e33e2fb56f68033efbded7c57f7a1bcd8a17c6" translate="yes" xml:space="preserve">
          <source>ContentChildren</source>
          <target state="translated">ContentChildren</target>
        </trans-unit>
        <trans-unit id="30dfef912c135ce3653ecd0049ab1a0d09975808" translate="yes" xml:space="preserve">
          <source>Context-dependant translation forms for strings. Typically the standalone version is for the nominative form of the word, and the format version is used for the genitive case.</source>
          <target state="translated">词串的语境依赖性翻译形式。通常,独立版本用于单词的名词形式,而格式版本用于属词的情况。</target>
        </trans-unit>
        <trans-unit id="e639aff42d79ce7d04ac679b47d7888105a27b9c" translate="yes" xml:space="preserve">
          <source>Continue working in &lt;code&gt;cart.service.ts&lt;/code&gt;.</source>
          <target state="translated">继续在 &lt;code&gt;cart.service.ts&lt;/code&gt; 中工作。</target>
        </trans-unit>
        <trans-unit id="98d30ae3f1bb7f9fb155a5bf681d817c8c98d5be" translate="yes" xml:space="preserve">
          <source>Continuing with the same example, suppose the components of a module truly require a private, custom &lt;code&gt;&lt;a href=&quot;../api/common/http/httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">继续同一示例，假设模块的组件确实需要私有的自定义 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b994060af598c09bf8841e4b648fa4521474cd2" translate="yes" xml:space="preserve">
          <source>Contribute to Angular docs by creating &lt;a href=&quot;https://github.com/angular/angular/pulls&quot;&gt;pull requests&lt;/a&gt; on the Angular Github repository. See &lt;a href=&quot;https://github.com/angular/angular/blob/master/CONTRIBUTING.md&quot;&gt;Contributing to Angular&lt;/a&gt; for information about submission guidelines.</source>
          <target state="translated">通过在Angular Github存储库上创建&lt;a href=&quot;https://github.com/angular/angular/pulls&quot;&gt;拉取请求&lt;/a&gt;为Angular文档做出贡献。有关提交准则的信息，请参见&amp;ldquo; &lt;a href=&quot;https://github.com/angular/angular/blob/master/CONTRIBUTING.md&quot;&gt;贡献给Angular&lt;/a&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e3e8ab0a38fcaa679b313a73f41420a398c50b9e" translate="yes" xml:space="preserve">
          <source>Control navigation with UI elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d038e7e3efd3548f310850f15533c4258c0fb1" translate="yes" xml:space="preserve">
          <source>Control status CSS classes</source>
          <target state="translated">控制状态CSS类</target>
        </trans-unit>
        <trans-unit id="47d0427e06aaf3d9ecbf897b0152f50f758d4f8b" translate="yes" xml:space="preserve">
          <source>Control whether the application can discard unsaved changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229ecc00162e04334fa4b4ccac6c92e3cb27952a" translate="yes" xml:space="preserve">
          <source>ControlContainer</source>
          <target state="translated">ControlContainer</target>
        </trans-unit>
        <trans-unit id="343d7cf91d2920daa7e4cf70ebe4169f5fbad163" translate="yes" xml:space="preserve">
          <source>ControlValueAccessor</source>
          <target state="translated">ControlValueAccessor</target>
        </trans-unit>
        <trans-unit id="c704de049fa7f49d7e27a189c2f7435244863da7" translate="yes" xml:space="preserve">
          <source>Controller function</source>
          <target state="translated">控制器功能</target>
        </trans-unit>
        <trans-unit id="eaf31001eb1cfd639a6e756df156289b71c30f3e" translate="yes" xml:space="preserve">
          <source>Controller lifecycle hook methods &lt;code&gt;$&lt;a href=&quot;upgrade&quot;&gt;onInit&lt;/a&gt;()&lt;/code&gt;, &lt;code&gt;$onDestroy()&lt;/code&gt;, and &lt;code&gt;$&lt;a href=&quot;upgrade&quot;&gt;onChanges&lt;/a&gt;()&lt;/code&gt; are another convenient feature that AngularJS 1.5 introduces. They all have nearly exact &lt;a href=&quot;lifecycle-hooks&quot;&gt;equivalents in Angular&lt;/a&gt;, so organizing component lifecycle logic around them will ease the eventual Angular upgrade process.</source>
          <target state="translated">控制器生命周期挂钩方法 &lt;code&gt;$&lt;a href=&quot;upgrade&quot;&gt;onInit&lt;/a&gt;()&lt;/code&gt; ， &lt;code&gt;$onDestroy()&lt;/code&gt; 和 &lt;code&gt;$&lt;a href=&quot;upgrade&quot;&gt;onChanges&lt;/a&gt;()&lt;/code&gt; 是AngularJS 1.5引入的另一个便捷功能。它们&lt;a href=&quot;lifecycle-hooks&quot;&gt;在Angular中&lt;/a&gt;几乎具有完全相同的功能，因此围绕它们组织组件生命周期逻辑将简化最终的Angular升级过程。</target>
        </trans-unit>
        <trans-unit id="9c5d43d02cea12a9125adf5d02c96afa4adb2e6c" translate="yes" xml:space="preserve">
          <source>Controller lifecycle hook methods &lt;code&gt;$onInit()&lt;/code&gt;, &lt;code&gt;$onDestroy()&lt;/code&gt;, and &lt;code&gt;$onChanges()&lt;/code&gt; are another convenient feature that AngularJS 1.5 introduces. They all have nearly exact &lt;a href=&quot;lifecycle-hooks&quot;&gt;equivalents in Angular&lt;/a&gt;, so organizing component lifecycle logic around them will ease the eventual Angular upgrade process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a55898ba4d0c3606814215066c44fdde71f8efa" translate="yes" xml:space="preserve">
          <source>Controller registration</source>
          <target state="translated">控制器注册</target>
        </trans-unit>
        <trans-unit id="ea0568a8e25668de0a1132c1123479b554368dac" translate="yes" xml:space="preserve">
          <source>Controller to be injected into tests, that allows for mocking and flushing of requests.</source>
          <target state="translated">将控制器注入到测试中,允许模拟和刷新请求。</target>
        </trans-unit>
        <trans-unit id="b0c2b035771a9eb356524d9a56b916b77b9f7291" translate="yes" xml:space="preserve">
          <source>Controlling the &lt;em&gt;Submit&lt;/em&gt; button's enabled state by binding to &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; validity.</source>
          <target state="translated">通过绑定到 &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; 有效性来控制&lt;em&gt;Submit&lt;/em&gt;按钮的启用状态。</target>
        </trans-unit>
        <trans-unit id="9bbd48944c8dffe9450a4a0623c225e2e9afd341" translate="yes" xml:space="preserve">
          <source>Controlling the &lt;strong&gt;Submit&lt;/strong&gt; button's enabled state by binding to &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; validity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a192682500970780576e3105c9ffd0bc6ec8ac" translate="yes" xml:space="preserve">
          <source>Controls the type check for linting.</source>
          <target state="translated">控制打毛的类型检查。</target>
        </trans-unit>
        <trans-unit id="be77b92308e4d8d1f11ce842fbb550d826c3b78b" translate="yes" xml:space="preserve">
          <source>Convert that method to use &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; as follows:</source>
          <target state="translated">将该方法转换为使用 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="00b2a18414b957028b4f77b2246b6dc3ecee7517" translate="yes" xml:space="preserve">
          <source>Convert the phone detail component template into Angular syntax as follows:</source>
          <target state="translated">将手机详情组件模板转换为Angular语法如下。</target>
        </trans-unit>
        <trans-unit id="461a5706ccc3e456140291e61b965e6d8ccf1d72" translate="yes" xml:space="preserve">
          <source>Converting existing code for async operations into observables</source>
          <target state="translated">将现有的异步操作代码转换为观测值</target>
        </trans-unit>
        <trans-unit id="078947d90aafa4b154394b9558fb454be3bdea6f" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;params&quot;&gt;Params&lt;/a&gt;&lt;/code&gt; instance to a &lt;code&gt;&lt;a href=&quot;parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;params&quot;&gt;Params&lt;/a&gt;&lt;/code&gt; 实例转换为 &lt;code&gt;&lt;a href=&quot;parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97d29d83b162042524ce3f03b85cb9262c204f0e" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;router/params&quot;&gt;Params&lt;/a&gt;&lt;/code&gt; instance to a &lt;code&gt;&lt;a href=&quot;router/parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;router/params&quot;&gt;Params&lt;/a&gt;&lt;/code&gt; 实例转换为 &lt;code&gt;&lt;a href=&quot;router/parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9993dde6f70ec00b27b0a3b88374796590de2ce3" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; into a url</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; 转换为url</target>
        </trans-unit>
        <trans-unit id="21b6e9efdfda32b5cc193fd23ed3d6560b8ed92f" translate="yes" xml:space="preserve">
          <source>Converts a JavaScript object into a JSON string. This is useful for debugging.</source>
          <target state="translated">将一个JavaScript对象转换为JSON字符串。这对调试很有用。</target>
        </trans-unit>
        <trans-unit id="adf77768d6a39db93cdef5c7aa5d05d8ae44ccfc" translate="yes" xml:space="preserve">
          <source>Converts a value into its JSON-format representation. Useful for debugging.</source>
          <target state="translated">将一个值转换为JSON格式的表示。对调试有用。</target>
        </trans-unit>
        <trans-unit id="5b89863d56f5fa5231bd9ba6831296dcbd916d71" translate="yes" xml:space="preserve">
          <source>Converts the string to lowercase.</source>
          <target state="translated">将字符串转换为小写。</target>
        </trans-unit>
        <trans-unit id="8a496e4dc738110449ee481338a94d58994d8e7f" translate="yes" xml:space="preserve">
          <source>Cookie name default is &lt;code&gt;XSRF-TOKEN&lt;/code&gt;.</source>
          <target state="translated">Cookie名称默认为 &lt;code&gt;XSRF-TOKEN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="decdd902fbecc98f23f54011ff264d9219f15f90" translate="yes" xml:space="preserve">
          <source>Copy &lt;em&gt;everything&lt;/em&gt; within the output folder (&lt;code&gt;dist/&lt;/code&gt; by default) to a folder on the server.</source>
          <target state="translated">将输出文件夹中的&lt;em&gt;所有内容&lt;/em&gt;（默认为 &lt;code&gt;dist/&lt;/code&gt; ）复制到服务器上的文件夹中。</target>
        </trans-unit>
        <trans-unit id="08d2e5d7831fa576d3341a6cffbd4474c90d8e7b" translate="yes" xml:space="preserve">
          <source>Copy &lt;em&gt;everything&lt;/em&gt; within the output folder (&lt;code&gt;dist/project-name/&lt;/code&gt; by default) to a folder on the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96dfe6c055de09a0fe4ab8d1cd89274f9e0b328" translate="yes" xml:space="preserve">
          <source>Copy files from the starter Angular app into the folder containing the &lt;code&gt;.csproj&lt;/code&gt; file. Include the files in the Visual Studio project as follows:</source>
          <target state="translated">将文件从入门Angular应用程序复制到包含 &lt;code&gt;.csproj&lt;/code&gt; 文件的文件夹中。将文件包括在Visual Studio项目中，如下所示：</target>
        </trans-unit>
        <trans-unit id="2e0c4cd2fc66e099007547c595d8fb3af64016d1" translate="yes" xml:space="preserve">
          <source>Copy the &lt;code&gt;hero-detail&lt;/code&gt; folder, the &lt;code&gt;hero.ts&lt;/code&gt;, &lt;code&gt;hero.service.ts&lt;/code&gt;, and &lt;code&gt;mock-heroes.ts&lt;/code&gt; files into the &lt;code&gt;heroes&lt;/code&gt; subfolder.</source>
          <target state="translated">将 &lt;code&gt;hero-detail&lt;/code&gt; 文件夹， &lt;code&gt;hero.ts&lt;/code&gt; ， &lt;code&gt;hero.service.ts&lt;/code&gt; 和 &lt;code&gt;mock-heroes.ts&lt;/code&gt; 文件复制到 &lt;code&gt;heroes&lt;/code&gt; 子文件夹中。</target>
        </trans-unit>
        <trans-unit id="8e12febf5873dca574759667733b5e5e66e6ba98" translate="yes" xml:space="preserve">
          <source>Copy the &lt;code&gt;message.service.ts&lt;/code&gt; into the &lt;code&gt;src/app&lt;/code&gt; folder.</source>
          <target state="translated">将 &lt;code&gt;message.service.ts&lt;/code&gt; 复制到 &lt;code&gt;src/app&lt;/code&gt; 文件夹中。</target>
        </trans-unit>
        <trans-unit id="3635b30f85e60d9bbc40017116da1dd9ce46b94b" translate="yes" xml:space="preserve">
          <source>Copy the body and make your change in the copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc6a23cf0c8732b658ce947fd5dc5af75d63b93" translate="yes" xml:space="preserve">
          <source>Copy the contents of the &lt;code&gt;heroes/heroes.component.css&lt;/code&gt; from the live example into the &lt;code&gt;hero-list.component.css&lt;/code&gt; file.</source>
          <target state="translated">将实时示例中 &lt;code&gt;heroes/heroes.component.css&lt;/code&gt; 的内容复制到 &lt;code&gt;hero-list.component.css&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="9e21cb207ee7e3057d9095acd497da7ad01d4339" translate="yes" xml:space="preserve">
          <source>Copy the contents of the &lt;code&gt;heroes/heroes.component.html&lt;/code&gt; from the &lt;span name=&quot;toh-pt4&quot;&gt;&quot;Services&quot; tutorial&lt;/span&gt; into the &lt;code&gt;hero-list.component.html&lt;/code&gt; template.</source>
          <target state="translated">复制的内容 &lt;code&gt;heroes/heroes.component.html&lt;/code&gt; 从&lt;span name=&quot;toh-pt4&quot;&gt;&amp;ldquo;服务&amp;rdquo;教程&lt;/span&gt;到 &lt;code&gt;hero-list.component.html&lt;/code&gt; 模板。</target>
        </trans-unit>
        <trans-unit id="006748a2c8575f2736445cd6e1cb632b2d1c3f84" translate="yes" xml:space="preserve">
          <source>Copy the contents of the &lt;code&gt;heroes/heroes.component.ts&lt;/code&gt; from the live example into the &lt;code&gt;hero-list.component.ts&lt;/code&gt; file.</source>
          <target state="translated">将实时示例中 &lt;code&gt;heroes/heroes.component.ts&lt;/code&gt; 的内容复制到 &lt;code&gt;hero-list.component.ts&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="64e69777d644990a712d9156ccfe6d33b49e0d98" translate="yes" xml:space="preserve">
          <source>Copy the files and folders from &lt;code&gt;app/heroes&lt;/code&gt; into the new &lt;code&gt;crisis-center&lt;/code&gt; folder.</source>
          <target state="translated">将文件和文件夹从 &lt;code&gt;app/heroes&lt;/code&gt; 复制到新的 &lt;code&gt;crisis-center&lt;/code&gt; 文件夹中。</target>
        </trans-unit>
        <trans-unit id="ac16c8969e359f571689b91327c6dcf652187725" translate="yes" xml:space="preserve">
          <source>Copy this &lt;code&gt;&lt;a href=&quot;httpheaderresponse&quot;&gt;HttpHeaderResponse&lt;/a&gt;&lt;/code&gt;, overriding its contents with the given parameter hash.</source>
          <target state="translated">复制此 &lt;code&gt;&lt;a href=&quot;httpheaderresponse&quot;&gt;HttpHeaderResponse&lt;/a&gt;&lt;/code&gt; ，使用给定的参数哈希值覆盖其内容。</target>
        </trans-unit>
        <trans-unit id="a1d8ecfd782a2f39dac14d8d6b51eb1f52ca13f6" translate="yes" xml:space="preserve">
          <source>Core AngularJS services Importing this &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; will add providers for the core &lt;a href=&quot;https://docs.angularjs.org/api/ng/service&quot;&gt;AngularJS services&lt;/a&gt; to the root injector.</source>
          <target state="translated">核心AngularJS服务导入此 &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 会将用于核心&lt;a href=&quot;https://docs.angularjs.org/api/ng/service&quot;&gt;AngularJS服务的&lt;/a&gt;提供程序添加到根注入器。</target>
        </trans-unit>
        <trans-unit id="c39220a429cf1bece1b687538bd0e0fc0b34e712" translate="yes" xml:space="preserve">
          <source>Correspondingly, when you upgrade an AngularJS component and use it from Angular, all the bindings defined for the component directive's &lt;code&gt;&lt;a href=&quot;../api/service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; (or &lt;code&gt;bindToController&lt;/code&gt;) will be hooked into Angular change detection. They will be treated as regular Angular inputs. Their values will be written to the upgraded component's scope (or controller) when they change.</source>
          <target state="translated">相应地，当您升级AngularJS组件并从Angular中使用它时，为该组件指令的 &lt;code&gt;&lt;a href=&quot;../api/service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; （或 &lt;code&gt;bindToController&lt;/code&gt; ）定义的所有绑定都将挂接到Angular更改检测中。它们将被视为常规Angular输入。它们的值更改时，将被写入升级组件的作用域（或控制器）。</target>
        </trans-unit>
        <trans-unit id="f98a3c8b7cf8b6b33e129ceb376d8bf2cdd693a7" translate="yes" xml:space="preserve">
          <source>Correspondingly, when you upgrade an AngularJS component and use it from Angular, all the bindings defined for the component directive's &lt;code&gt;scope&lt;/code&gt; (or &lt;code&gt;bindToController&lt;/code&gt;) will be hooked into Angular change detection. They will be treated as regular Angular inputs. Their values will be written to the upgraded component's scope (or controller) when they change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee21c7732ceea657ba582876098e48649d633db" translate="yes" xml:space="preserve">
          <source>Could not resolve type</source>
          <target state="translated">无法解决类型</target>
        </trans-unit>
        <trans-unit id="f4018045cfb458b2734d2b09cf762c2567878c41" translate="yes" xml:space="preserve">
          <source>Counter</source>
          <target state="translated">Counter</target>
        </trans-unit>
        <trans-unit id="b7570836d6154e29e2f406e09548419037760602" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;HeroSearchComponent&lt;/code&gt;</source>
          <target state="translated">创建 &lt;code&gt;HeroSearchComponent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da63132d4553a2504164f54ad55c134cc4edc6ad" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;MessagesComponent&lt;/code&gt;</source>
          <target state="translated">创建 &lt;code&gt;MessagesComponent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a237e7a56b1d9ab6284640b040123f7b8ddc3ad9" translate="yes" xml:space="preserve">
          <source>Create Angular &lt;a href=&quot;guide/glossary#component&quot;&gt;components&lt;/a&gt; to display hero details and show an array of heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9376163183db8e23239d334e0ae6a7ea6411dd85" translate="yes" xml:space="preserve">
          <source>Create Angular components to display hero details and show an array of heroes.</source>
          <target state="translated">创建Angular组件来显示英雄细节,并显示英雄阵列。</target>
        </trans-unit>
        <trans-unit id="5c5fe036d57773794e72a8d112d9907ead0619d8" translate="yes" xml:space="preserve">
          <source>Create a &quot;top component&quot; that acts as the root for all of the module's components. Add the custom &lt;code&gt;&lt;a href=&quot;../api/common/http/httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; provider to the top component's &lt;code&gt;providers&lt;/code&gt; list rather than the module's &lt;code&gt;providers&lt;/code&gt;. Recall that Angular creates a child injector for each component instance and populates the injector with the component's own providers.</source>
          <target state="translated">创建一个&amp;ldquo;顶部组件&amp;rdquo;，作为所有模块组件的根。将自定义 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; 提供程序添加到顶部组件的 &lt;code&gt;providers&lt;/code&gt; 列表中，而不是模块的 &lt;code&gt;providers&lt;/code&gt; 。回想一下，Angular为每个组件实例创建一个子注入器，并使用组件自己的提供程序填充注入器。</target>
        </trans-unit>
        <trans-unit id="99ca8b6335705bfdaa852233ee78f1fbc1f29b4b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0911b2990c85edee45f304d359a364bc6364bd" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;keyvaluediffer&quot;&gt;KeyValueDiffer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;keyvaluediffer&quot;&gt;KeyValueDiffer&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca5222191cefbcbf34292d4ccac4f8d3099452e0" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;platform-browser/statekey&quot;&gt;StateKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; that can be used to store value of type T with &lt;code&gt;&lt;a href=&quot;platform-browser/transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;platform-browser/statekey&quot;&gt;StateKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; ，可用于存储具有 &lt;code&gt;&lt;a href=&quot;platform-browser/transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; 的 T类型的值。</target>
        </trans-unit>
        <trans-unit id="da12bfbf8cba36936cab8d5080627812d3bc5b9a" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;&lt;a href=&quot;statekey&quot;&gt;StateKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; that can be used to store value of type T with &lt;code&gt;&lt;a href=&quot;transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个 &lt;code&gt;&lt;a href=&quot;statekey&quot;&gt;StateKey&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; ，可用于存储具有 &lt;code&gt;&lt;a href=&quot;transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; 的 T类型的值。</target>
        </trans-unit>
        <trans-unit id="33824bbdfa9db4cd33cb2cc28044b8bb7bd994f1" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Hero&lt;/code&gt; class in its own file in the &lt;code&gt;src/app&lt;/code&gt; folder. Give it &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; properties.</source>
          <target state="translated">在 &lt;code&gt;src/app&lt;/code&gt; 文件夹中的自己文件中创建一个 &lt;code&gt;Hero&lt;/code&gt; 类。给它 &lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="c71fa3484d2440247f91b2f9a2f81864168175f6" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;Hero&lt;/code&gt; interface in its own file in the &lt;code&gt;src/app&lt;/code&gt; folder. Give it &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c71c09584ab2fa05b7a2f1d605f961915809721" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;HeroSearchComponent&lt;/code&gt; with the CLI.</source>
          <target state="translated">使用CLI 创建 &lt;code&gt;HeroSearchComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6845c0f15a7f2d03e5f9f62fa58801361ed5c80a" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;HeroesModule&lt;/code&gt; with routing in the heroes folder and register it with the root &lt;code&gt;AppModule&lt;/code&gt;. This is where you'll be implementing the &lt;em&gt;hero management&lt;/em&gt;.</source>
          <target state="translated">在heroes文件夹中创建带有路由的 &lt;code&gt;HeroesModule&lt;/code&gt; ，并将其注册到根 &lt;code&gt;AppModule&lt;/code&gt; 。这是您实施&lt;em&gt;英雄管理的地方&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="17210801dfaf29924a75d1ab920c332968468da3" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;crisis-center&lt;/code&gt; subfolder in the &lt;code&gt;src/app&lt;/code&gt; folder.</source>
          <target state="translated">在 &lt;code&gt;src/app&lt;/code&gt; 文件夹中创建一个以 &lt;code&gt;crisis-center&lt;/code&gt; 子文件夹。</target>
        </trans-unit>
        <trans-unit id="8d1365a808082b38561ee0f9ea6407a8ea2c7915" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;files/&lt;/code&gt; folder inside the &lt;code&gt;schematics/my-service/&lt;/code&gt; folder.</source>
          <target state="translated">在 &lt;code&gt;schematics/my-service/&lt;/code&gt; 文件夹中创建一个 &lt;code&gt;files/&lt;/code&gt; 文件夹。</target>
        </trans-unit>
        <trans-unit id="03a8b37194cd9a6ed4fef9b8e6ffb334c714f01f" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;schema.json&lt;/code&gt; file and define the available options for the schematic.</source>
          <target state="translated">创建一个 &lt;code&gt;schema.json&lt;/code&gt; 文件并定义原理图的可用选项。</target>
        </trans-unit>
        <trans-unit id="7653907d1390a7958748cfad0de2f7e15929597c" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;schema.ts&lt;/code&gt; file and define an interface that stores the values of the options defined in the &lt;code&gt;schema.json&lt;/code&gt; file.</source>
          <target state="translated">创建一个 &lt;code&gt;schema.ts&lt;/code&gt; 文件和定义一个接口，用于存储在定义的选项的值 &lt;code&gt;schema.json&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="5fd7bd2de7171d715f1f538a385409bbedf60fd2" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;typings.d.ts&lt;/code&gt; file in your &lt;code&gt;src/&lt;/code&gt; folder. This file is automatically included as global type definition.</source>
          <target state="translated">在 &lt;code&gt;src/&lt;/code&gt; 文件夹中创建一个 &lt;code&gt;typings.d.ts&lt;/code&gt; 文件。该文件自动作为全局类型定义包括在内。</target>
        </trans-unit>
        <trans-unit id="ff616cbff238ee78c83cb4c2d5667f04727c2c70" translate="yes" xml:space="preserve">
          <source>Create a Hero class</source>
          <target state="translated">创建一个英雄类</target>
        </trans-unit>
        <trans-unit id="90d9e64936dd180075da5a9b85d15d10b7b99c5c" translate="yes" xml:space="preserve">
          <source>Create a Hero interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e364d7a8bde1e2a332dddb2e36ca43d41d7c61" translate="yes" xml:space="preserve">
          <source>Create a cart component and configure routing to the new component. At this point, the cart view has only default text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7fd1d13091dc87fa2bc6cd7f30b4c62da30c2a" translate="yes" xml:space="preserve">
          <source>Create a cart component and set up routing to the new component. At this point, the cart page will only have default text.</source>
          <target state="translated">创建一个购物车组件,并设置新组件的路由。此时,购物车页面将只有默认文本。</target>
        </trans-unit>
        <trans-unit id="3d3c0796b0b271bbd7027cd5fd74cea722c3bd61" translate="yes" xml:space="preserve">
          <source>Create a component to render AngularJS content</source>
          <target state="translated">创建一个组件来渲染AngularJS内容</target>
        </trans-unit>
        <trans-unit id="a24c9a01b8de0c4c868f95de7d4395c98a8985f4" translate="yes" xml:space="preserve">
          <source>Create a component using the new keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6beab5fb3f1e2fea8b27429def6db8a455e84c2" translate="yes" xml:space="preserve">
          <source>Create a component, &lt;em&gt;crisis-list&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb341a6339ef12f828a7d5f6c43fd81df5c13d1" translate="yes" xml:space="preserve">
          <source>Create a custom &lt;code&gt;&lt;a href=&quot;../api/router/route#matcher&quot;&gt;matcher&lt;/a&gt;&lt;/code&gt; function for AngularJS-specific URLs and configure the Angular &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; with the custom matcher for AngularJS routes.</source>
          <target state="translated">为特定于AngularJS的URL 创建自定义 &lt;code&gt;&lt;a href=&quot;../api/router/route#matcher&quot;&gt;matcher&lt;/a&gt;&lt;/code&gt; 函数，并为AngularJS路由使用自定义匹配器配置Angular &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0582fb064b3a9d662a98a234ccf610a3ebf8b0dc" translate="yes" xml:space="preserve">
          <source>Create a custom &lt;code&gt;matcher&lt;/code&gt; function for AngularJS-specific URLs and configure the Angular &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; with the custom matcher for AngularJS routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1d239117b5625a496eeda64fd89dda33330350" translate="yes" xml:space="preserve">
          <source>Create a dynamic form template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c523f2d6f0ef5f2efd18e3076a9038458c296a55" translate="yes" xml:space="preserve">
          <source>Create a factory function that returns that instance.</source>
          <target state="translated">创建一个工厂函数,返回该实例。</target>
        </trans-unit>
        <trans-unit id="d060ba91e19005cbc11c95003a16758638e663c9" translate="yes" xml:space="preserve">
          <source>Create a feature component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2bb69920f627470e948635b846ad2f55548877" translate="yes" xml:space="preserve">
          <source>Create a feature module with routing</source>
          <target state="translated">创建一个带有路由的功能模块</target>
        </trans-unit>
        <trans-unit id="3992d8892162bfa0ed8361ad16356d6012ed972d" translate="yes" xml:space="preserve">
          <source>Create a file &lt;code&gt;proxy.conf.json&lt;/code&gt; in your project's &lt;code&gt;src/&lt;/code&gt; folder.</source>
          <target state="translated">在项目的 &lt;code&gt;src/&lt;/code&gt; 文件夹中创建一个文件 &lt;code&gt;proxy.conf.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41ffd1d35c5f02ae42ec30c59609ce9da41df565" translate="yes" xml:space="preserve">
          <source>Create a file called &lt;code&gt;mock-heroes.ts&lt;/code&gt; in the &lt;code&gt;src/app/&lt;/code&gt; folder. Define a &lt;code&gt;HEROES&lt;/code&gt; constant as an array of ten heroes and export it. The file should look like this.</source>
          <target state="translated">在 &lt;code&gt;src/app/&lt;/code&gt; 文件夹中创建一个名为 &lt;code&gt;mock-heroes.ts&lt;/code&gt; 的文件。将 &lt;code&gt;HEROES&lt;/code&gt; 常量定义为包含十个英雄的数组，然后将其导出。该文件应如下所示。</target>
        </trans-unit>
        <trans-unit id="69732bba9870de84d675267cbe1cf4d45f861919" translate="yes" xml:space="preserve">
          <source>Create a file named &lt;code&gt;__name@dasherize__.service.ts.template&lt;/code&gt; that defines a template you can use for generating files. This template will generate a service that already has Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; injected into its constructor.</source>
          <target state="translated">创建一个名为 &lt;code&gt;__name@dasherize__.service.ts.template&lt;/code&gt; 的文件，该文件定义了可用于生成文件的模板。该模板将生成已将Angular的 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 注入其构造函数的服务。</target>
        </trans-unit>
        <trans-unit id="38e4fd9e90f6b4cd021df9e4dfcbb8d302140ea2" translate="yes" xml:space="preserve">
          <source>Create a file named &lt;code&gt;builders.json&lt;/code&gt; file that looks like this.</source>
          <target state="translated">创建一个名为 &lt;code&gt;builders.json&lt;/code&gt; 的文件，如下所示。</target>
        </trans-unit>
        <trans-unit id="f2a3216de4a1d482ff94f06e3f6620f72a039129" translate="yes" xml:space="preserve">
          <source>Create a form array with array-level validators</source>
          <target state="translated">创建一个带有数组级验证器的表单数组</target>
        </trans-unit>
        <trans-unit id="b96a11ccc1a7f7f1033388de141e67f8a7692bf0" translate="yes" xml:space="preserve">
          <source>Create a form component</source>
          <target state="translated">创建一个表单组件</target>
        </trans-unit>
        <trans-unit id="8c779731b129ec9a1f0f54ba194f30d8bf6d9a3b" translate="yes" xml:space="preserve">
          <source>Create a form group with 2 controls</source>
          <target state="translated">创建一个包含2个控件的表单组</target>
        </trans-unit>
        <trans-unit id="a31a843ccda278265868ae591babbbbffa0aaec9" translate="yes" xml:space="preserve">
          <source>Create a form group with a group-level validator</source>
          <target state="translated">创建一个带有组级验证器的表单组。</target>
        </trans-unit>
        <trans-unit id="cee67103752a38e6254f5285489718e2ee8acf38" translate="yes" xml:space="preserve">
          <source>Create a form object model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8349529ff67aeb3fe069d4c4eaa3d215f2841f84" translate="yes" xml:space="preserve">
          <source>Create a function to retrieve the heroes from the service.</source>
          <target state="translated">创建一个从服务中检索英雄的功能。</target>
        </trans-unit>
        <trans-unit id="3aa54a2c7f2ebf4339e64d173a825d3b05732eab" translate="yes" xml:space="preserve">
          <source>Create a localization folder</source>
          <target state="translated">创建一个本地化文件夹</target>
        </trans-unit>
        <trans-unit id="3f0db9d4cc9da04cf671dfacddb2b498fecbf832" translate="yes" xml:space="preserve">
          <source>Create a method to retrieve the heroes from the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1816716693a28e0e9f1df947d9f9bd94d9fbbd1e" translate="yes" xml:space="preserve">
          <source>Create a nested group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64438b98d4f21e3d55b771cbac8f715217ae08d" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;httpheaderresponse&quot;&gt;HttpHeaderResponse&lt;/a&gt;&lt;/code&gt; with the given parameters.</source>
          <target state="translated">使用给定的参数创建一个新的 &lt;code&gt;&lt;a href=&quot;httpheaderresponse&quot;&gt;HttpHeaderResponse&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78efc26fbc9687ec57888c9bb37b7f4b34c26875" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;upgradecomponent&quot;&gt;UpgradeComponent&lt;/a&gt;&lt;/code&gt; instance. You should not normally need to do this. Instead you should derive a new class from this one and call the super constructor from the base class.</source>
          <target state="translated">创建一个新的 &lt;code&gt;&lt;a href=&quot;upgradecomponent&quot;&gt;UpgradeComponent&lt;/a&gt;&lt;/code&gt; 实例。您通常不需要这样做。相反，您应该从该类派生一个新类，并从基类中调用超级构造函数。</target>
        </trans-unit>
        <trans-unit id="9a46de9f6729bf067c43047c43ae56c3aae4a7e7" translate="yes" xml:space="preserve">
          <source>Create a new Angular CLI workspace using the &lt;a href=&quot;https://angular.io/start/cli/new&quot;&gt;&lt;code&gt;ng new&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">使用&lt;a href=&quot;https://angular.io/start/cli/new&quot;&gt; &lt;code&gt;ng new&lt;/code&gt; &lt;/a&gt;命令创建一个新的Angular CLI工作空间：</target>
        </trans-unit>
        <trans-unit id="0fa24177e47b7484c8cf94f80ac594d7c13475ae" translate="yes" xml:space="preserve">
          <source>Create a new Angular project, &lt;em&gt;angular-router-sample&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380217cd2bc441b341d7dabe2374197b8ed3e719" translate="yes" xml:space="preserve">
          <source>Create a new Injector which is configure using &lt;code&gt;&lt;a href=&quot;staticprovider&quot;&gt;StaticProvider&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">创建一个新的Injector，它使用 &lt;code&gt;&lt;a href=&quot;staticprovider&quot;&gt;StaticProvider&lt;/a&gt;&lt;/code&gt; 进行配置。</target>
        </trans-unit>
        <trans-unit id="2433763ae8ce7e54147d009778d8b9c941a63a34" translate="yes" xml:space="preserve">
          <source>Create a new file, &lt;code&gt;&amp;lt;component-name&amp;gt;.component.ts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b9c46559c7dd10c68eb2430214ec17d7126c85" translate="yes" xml:space="preserve">
          <source>Create a new file, &lt;code&gt;tsconfig-es5.spec.json&lt;/code&gt; next to &lt;code&gt;tsconfig.spec.json&lt;/code&gt; with the following content.</source>
          <target state="translated">在 &lt;code&gt;tsconfig-es5.spec.json&lt;/code&gt; 旁边 &lt;code&gt;tsconfig.spec.json&lt;/code&gt; 具有以下内容的新文件tsconfig-es5.spec.json。</target>
        </trans-unit>
        <trans-unit id="69ee4f0cae672b78fd7e5b509ff749d4be5d8a16" translate="yes" xml:space="preserve">
          <source>Create a new product alerts component.</source>
          <target state="translated">创建一个新的产品警报组件。</target>
        </trans-unit>
        <trans-unit id="325cf797263cfffdce479b5e173823121f9d4d73" translate="yes" xml:space="preserve">
          <source>Create a new project</source>
          <target state="translated">创建一个新项目</target>
        </trans-unit>
        <trans-unit id="5248aa9278aa812df34236f34bfb64a599867920" translate="yes" xml:space="preserve">
          <source>Create a new project named &lt;code&gt;angular-forms&lt;/code&gt;:</source>
          <target state="translated">创建一个名为 &lt;code&gt;angular-forms&lt;/code&gt; 的新项目：</target>
        </trans-unit>
        <trans-unit id="1fc5f1c2569e6cb934fdcbd8926b0aea6127a7e7" translate="yes" xml:space="preserve">
          <source>Create a new project, giving it any name you like.</source>
          <target state="translated">创建一个新的项目,给它取任何你喜欢的名字。</target>
        </trans-unit>
        <trans-unit id="4b6f7cb2d362348a78391179b8ff8adbe19ae679" translate="yes" xml:space="preserve">
          <source>Create a new workspace and an initial application</source>
          <target state="translated">创建一个新的工作区和一个初始应用程序</target>
        </trans-unit>
        <trans-unit id="7afd136a424f288c44a26af64d8ab3faed2ff799" translate="yes" xml:space="preserve">
          <source>Create a new workspace and initial app project.</source>
          <target state="translated">创建一个新的工作区和初始应用项目。</target>
        </trans-unit>
        <trans-unit id="ae1fe121a8217214148d3bcf1b9368c81c062807" translate="yes" xml:space="preserve">
          <source>Create a property in the component class named &lt;code&gt;profileForm&lt;/code&gt; and set the property to a new form group instance. To initialize the form group, provide the constructor with an object of named keys mapped to their control.</source>
          <target state="translated">在名为 &lt;code&gt;profileForm&lt;/code&gt; 的组件类中创建一个属性，并将该属性设置为新的表单组实例。要初始化表单组，请向构造函数提供一个映射到其控件的命名键对象。</target>
        </trans-unit>
        <trans-unit id="180b592c2106157a0b6b4eb927928556a62222ba" translate="yes" xml:space="preserve">
          <source>Create a resolver service. With the CLI, the command to generate a service is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccecb770b3d91f132f45bd90c77041c30154648" translate="yes" xml:space="preserve">
          <source>Create a routable component for AngularJS content</source>
          <target state="translated">为AngularJS内容创建一个可路由的组件。</target>
        </trans-unit>
        <trans-unit id="cd09030c868dad90898d157afb4427134b5182bb" translate="yes" xml:space="preserve">
          <source>Create a sample application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7203610c81518bdc768377e4d28c0601db8d80f" translate="yes" xml:space="preserve">
          <source>Create a second component, &lt;em&gt;heroes-list&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab81b1e43badd75fe52b8b9c3a55f5ea352cea1" translate="yes" xml:space="preserve">
          <source>Create a service for your guard:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b4c2964b7e843bca61619451307961ed2ded49" translate="yes" xml:space="preserve">
          <source>Create a service that lazy loads and bootstraps your AngularJS app.</source>
          <target state="translated">创建一个服务,让你的AngularJS应用可以懒加载和引导。</target>
        </trans-unit>
        <trans-unit id="80bdfa1b1cdec9562cbda972de4cad92bbe26fc5" translate="yes" xml:space="preserve">
          <source>Create a service to lazy load AngularJS</source>
          <target state="translated">创建一个服务,以延迟加载AngularJS。</target>
        </trans-unit>
        <trans-unit id="1ff78329362e484e28a5256a04a1ae6f096125d2" translate="yes" xml:space="preserve">
          <source>Create a shared &lt;a href=&quot;guide/glossary#service&quot;&gt;service&lt;/a&gt; to assemble the heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289c9e1ad69aa92c9ace5d2ee7c3bdfd5e926d60" translate="yes" xml:space="preserve">
          <source>Create a shared service to assemble the heroes.</source>
          <target state="translated">打造共享服务,集结英雄。</target>
        </trans-unit>
        <trans-unit id="2351297a3e386ea193139a04f7279b11dad0025e" translate="yes" xml:space="preserve">
          <source>Create a static method &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; on the module.</source>
          <target state="translated">在模块上为 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 创建一个静态方法。</target>
        </trans-unit>
        <trans-unit id="b15d5a82209e08a1113ef84ceefbb11087a78b1f" translate="yes" xml:space="preserve">
          <source>Create a static method &lt;code&gt;forRoot()&lt;/code&gt; on the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a04964f1c5e0d871805d925f133724b75e3819c" translate="yes" xml:space="preserve">
          <source>Create a template with the initial form layout.</source>
          <target state="translated">创建一个初始表格布局的模板。</target>
        </trans-unit>
        <trans-unit id="7f4bff38deca97f4d35e1b195c3d630e1eea8ec8" translate="yes" xml:space="preserve">
          <source>Create a translation file for each language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcd448777d61181ebde74f3b1dbf8d75ef3f0b6" translate="yes" xml:space="preserve">
          <source>Create a translation file: Use the Angular CLI &lt;code&gt;xi18n&lt;/code&gt; command to extract the marked text into an industry-standard translation source file.</source>
          <target state="translated">创建翻译文件：使用Angular CLI &lt;code&gt;xi18n&lt;/code&gt; 命令将标记的文本提取到行业标准的翻译源文件中。</target>
        </trans-unit>
        <trans-unit id="5baf3cac85465507f34ecd0fca31009f61bda43b" translate="yes" xml:space="preserve">
          <source>Create a translation source file</source>
          <target state="translated">创建一个翻译源文件</target>
        </trans-unit>
        <trans-unit id="cca092e39485f66b5dc958b958918d82c5766291" translate="yes" xml:space="preserve">
          <source>Create a workspace and initial application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fe13715c442caee7511e2ad6d5f07636523a48" translate="yes" xml:space="preserve">
          <source>Create an &lt;a href=&quot;deployment#configuring-serve-for-es5&quot;&gt;ES5 serve configuration&lt;/a&gt; as explained above, and configuration an ES5 configuration for the E2E target.</source>
          <target state="translated">如上所述创建&lt;a href=&quot;deployment#configuring-serve-for-es5&quot;&gt;ES5服务配置&lt;/a&gt;，并为E2E目标配置ES5配置。</target>
        </trans-unit>
        <trans-unit id="028aa78227ee6a6c789b49247eb2726d759154ab" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;AppRouting&lt;/code&gt; module in the &lt;code&gt;/app&lt;/code&gt; folder to contain the routing configuration.</source>
          <target state="translated">在 &lt;code&gt;/app&lt;/code&gt; 文件夹中创建一个 &lt;code&gt;AppRouting&lt;/code&gt; 模块以包含路由配置。</target>
        </trans-unit>
        <trans-unit id="8edaa8e3b39128a8ffffbd2583a464c774b78161" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;addNewItem()&lt;/code&gt; method in the same component class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d287260e0fdc0dcca4bec41b7d0e73c535afaf" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;animations.ts&lt;/code&gt; file in the root &lt;code&gt;src/app/&lt;/code&gt; folder. The contents look like this:</source>
          <target state="translated">在根 &lt;code&gt;src/app/&lt;/code&gt; 文件夹中创建 &lt;code&gt;animations.ts&lt;/code&gt; 文件。内容如下所示：</target>
        </trans-unit>
        <trans-unit id="c67749e64345ba6a39c2b7172ee0a301001529e3" translate="yes" xml:space="preserve">
          <source>Create an Angular project. If you don't have a project, you can create one using &lt;code&gt;ng new &amp;lt;project-name&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;project-name&amp;gt;&lt;/code&gt; is the name of your Angular application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbcc1e534c39c1397544fc3c8c200114e0c5c6d1" translate="yes" xml:space="preserve">
          <source>Create an adaptable user interface for all of your target locales that takes into consideration the differences in spacing for different languages. For details, see &lt;a href=&quot;https://marketfinder.thinkwithgoogle.com/intl/en_us/guide/how-to-approach-i18n/#overview&quot;&gt;How to approach internationalization&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c771f4fa8c1303411b2989c7ec0ecfd845266d4e" translate="yes" xml:space="preserve">
          <source>Create an array of form controls</source>
          <target state="translated">创建一个表单控件数组</target>
        </trans-unit>
        <trans-unit id="a120814121d988e4c710394df55d52945567c179" translate="yes" xml:space="preserve">
          <source>Create an initial HTML form template</source>
          <target state="translated">创建一个初始的HTML表格模板</target>
        </trans-unit>
        <trans-unit id="c0e14e01f44a8e4033e50fdca7caa0554a8c69c1" translate="yes" xml:space="preserve">
          <source>Create an injectable service class</source>
          <target state="translated">创建一个可注入的服务类</target>
        </trans-unit>
        <trans-unit id="44a67433070c190604f306f05455b8778943324e" translate="yes" xml:space="preserve">
          <source>Create an injection token for an instance of the ambient type.</source>
          <target state="translated">为环境类型的实例创建一个注入令牌。</target>
        </trans-unit>
        <trans-unit id="6d3f0fe233aa778aa76ea5dae93999776ae70d48" translate="yes" xml:space="preserve">
          <source>Create an instance by invoking the &lt;code&gt;new&lt;/code&gt; operator and supplying additional arguments. This form is a short form of &lt;code&gt;&lt;a href=&quot;typeprovider&quot;&gt;TypeProvider&lt;/a&gt;&lt;/code&gt;;</source>
          <target state="translated">通过调用 &lt;code&gt;new&lt;/code&gt; 运算符并提供其他参数来创建实例。这种形式是 &lt;code&gt;&lt;a href=&quot;typeprovider&quot;&gt;TypeProvider&lt;/a&gt;&lt;/code&gt; 的缩写形式；</target>
        </trans-unit>
        <trans-unit id="64b222ce3ce34cbe2c058a214917ed1a3f5416dc" translate="yes" xml:space="preserve">
          <source>Create an instance of a component of type &lt;code&gt;T&lt;/code&gt; based on the current &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; configuration. After calling &lt;code&gt;compileComponent&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; configuration is frozen for the duration of the current spec.</source>
          <target state="translated">根据当前的 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 配置创建类型为 &lt;code&gt;T&lt;/code&gt; 的组件的实例。调用 &lt;code&gt;compileComponent&lt;/code&gt; 之后，将在当前规范期间冻结 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 配置。</target>
        </trans-unit>
        <trans-unit id="ad92015ad7f4f4f784b8261d606ff16ad76df686" translate="yes" xml:space="preserve">
          <source>Create and register an injectable service</source>
          <target state="translated">创建并注册一个可注入服务</target>
        </trans-unit>
        <trans-unit id="a2cfd9c584dadfe8ded7f9bfc6f0127dc27a3cb7" translate="yes" xml:space="preserve">
          <source>Create corresponding translation providers for the JIT compiler.</source>
          <target state="translated">为JIT编译器创建相应的翻译提供者。</target>
        </trans-unit>
        <trans-unit id="8a3164dac77b2e22758535a82bffe82b7e2af243" translate="yes" xml:space="preserve">
          <source>Create custom pipes to encapsulate transformations that are not provided with the built-in pipes. You can then use your custom pipe in template expressions, the same way you use built-in pipes&amp;mdash;to transform input values to output values for display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d78cab03508298b6394500ff143a4ce920f1fe8" translate="yes" xml:space="preserve">
          <source>Create custom validators and input elements.</source>
          <target state="translated">创建自定义验证器和输入元素。</target>
        </trans-unit>
        <trans-unit id="7fc63713ba8febf462717ec5962af4e913e424da" translate="yes" xml:space="preserve">
          <source>Create mock heroes</source>
          <target state="translated">创建模拟英雄</target>
        </trans-unit>
        <trans-unit id="05f481fe418f6a86292f6a24415f5606049d07a7" translate="yes" xml:space="preserve">
          <source>Create reusable animations.</source>
          <target state="translated">创建可重复使用的动画。</target>
        </trans-unit>
        <trans-unit id="da94ceabf1d8e34885570af399bd9b54aac3cfda" translate="yes" xml:space="preserve">
          <source>Create source control commits for updates and migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b13d67ee451c85d72b12d7fed79afe9f2123ba" translate="yes" xml:space="preserve">
          <source>Create the &lt;code&gt;Hero&lt;/code&gt; model class.</source>
          <target state="translated">创建 &lt;code&gt;Hero&lt;/code&gt; 模型类。</target>
        </trans-unit>
        <trans-unit id="3c6c222726d757393261bf16b1c2a79df66bfed7" translate="yes" xml:space="preserve">
          <source>Create the &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">创建 &lt;code&gt;HeroService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21f3283d735b1d144cc0f99ad0d254cbfe035065" translate="yes" xml:space="preserve">
          <source>Create the &lt;code&gt;MessageService&lt;/code&gt;</source>
          <target state="translated">创建 &lt;code&gt;MessageService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ada89949412585d9e7c1136054d118223a5d0b4c" translate="yes" xml:space="preserve">
          <source>Create the &lt;code&gt;PageNotFoundComponent&lt;/code&gt; to display when users visit invalid URLs.</source>
          <target state="translated">创建 &lt;code&gt;PageNotFoundComponent&lt;/code&gt; 以在用户访问无效URL时显示。</target>
        </trans-unit>
        <trans-unit id="172a4c3b0ec11bc59cd589335fc6303ab44ee4ae" translate="yes" xml:space="preserve">
          <source>Create the &lt;em&gt;Routing Module&lt;/em&gt;</source>
          <target state="translated">创建&lt;em&gt;路由模块&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da675249097ef52e40ae720707f5a7b94684a800" translate="yes" xml:space="preserve">
          <source>Create the ASP.NET 4.x project in the usual way as follows:</source>
          <target state="translated">以通常的方式创建ASP.NET 4.x项目,如下所示。</target>
        </trans-unit>
        <trans-unit id="d5d21b04456ab21aa92e8f2845d72a4cbfeb6b23" translate="yes" xml:space="preserve">
          <source>Create the Hero model class</source>
          <target state="translated">创建英雄模型类</target>
        </trans-unit>
        <trans-unit id="2452645fe3a4ccd04b9ca32f2a950631d3598e61" translate="yes" xml:space="preserve">
          <source>Create the cart page</source>
          <target state="translated">创建购物车页面</target>
        </trans-unit>
        <trans-unit id="e27dd4ee79d994c9a9527a5f35b79e9cf81152b1" translate="yes" xml:space="preserve">
          <source>Create the cart view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aeb64141da54a43606834f3aab149084db31793" translate="yes" xml:space="preserve">
          <source>Create the cart view in two steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4dd7fe4f4f5e851ad992b436f57ba5de1dc1c9" translate="yes" xml:space="preserve">
          <source>Create the checkout form</source>
          <target state="translated">创建结账表格</target>
        </trans-unit>
        <trans-unit id="70ff72f4f3c8b91ef4c89715e795b00cc3d2d5e1" translate="yes" xml:space="preserve">
          <source>Create the component that controls the form.</source>
          <target state="translated">创建控制表单的组件。</target>
        </trans-unit>
        <trans-unit id="b10035e89e8d4f31dd3e423e7d84cb7cc1782c8c" translate="yes" xml:space="preserve">
          <source>Create the directive class file in a terminal window with the CLI command &lt;a href=&quot;cli/generate&quot;&gt;&lt;code&gt;ng generate directive&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用CLI命令&lt;a href=&quot;cli/generate&quot;&gt; &lt;code&gt;ng generate directive&lt;/code&gt; &lt;/a&gt;在终端窗口中创建指令类文件。</target>
        </trans-unit>
        <trans-unit id="c755355358c6f60194f94dff700393523f07e5b4" translate="yes" xml:space="preserve">
          <source>Create the feature module with the CLI, using the &lt;code&gt;--route&lt;/code&gt; flag.</source>
          <target state="translated">使用 &lt;code&gt;--route&lt;/code&gt; 标志，使用CLI创建功能模块。</target>
        </trans-unit>
        <trans-unit id="7b642d44edff5ee83ad4bfe6b09f6e34711c193f" translate="yes" xml:space="preserve">
          <source>Create the feature module&amp;rsquo;s component.</source>
          <target state="translated">创建功能模块的组件。</target>
        </trans-unit>
        <trans-unit id="313ba270b7a9c190b1c190d7d84c2a206514a6ab" translate="yes" xml:space="preserve">
          <source>Create the heroes component</source>
          <target state="translated">创建英雄组件</target>
        </trans-unit>
        <trans-unit id="5b5c35b2cb11b55d12aa2d98b7a0f1aea4eaef61" translate="yes" xml:space="preserve">
          <source>Create the initial Bazel configuration files by running the following command:</source>
          <target state="translated">通过运行以下命令创建Bazel初始配置文件。</target>
        </trans-unit>
        <trans-unit id="b4c1a77b1e3bd656529f3e9615a73425d70e211b" translate="yes" xml:space="preserve">
          <source>Create the main file &lt;code&gt;index.ts&lt;/code&gt; and add the source code for your schematic factory function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3cdf1c844d3db6a269727dd35b1b2669fffd03" translate="yes" xml:space="preserve">
          <source>Create the main file, &lt;code&gt;index.ts&lt;/code&gt; and add the source code for your schematic factory function.</source>
          <target state="translated">创建主文件 &lt;code&gt;index.ts&lt;/code&gt; 并添加原理图工厂功能的源代码。</target>
        </trans-unit>
        <trans-unit id="658a7f9024e9c73ccabe751982901d6d4924e575" translate="yes" xml:space="preserve">
          <source>Create the main file, &lt;code&gt;index.ts&lt;/code&gt;.</source>
          <target state="translated">创建主文件 &lt;code&gt;index.ts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="237dfc5f8bd5fdcaa24e95bd1dcd4340e8689daf" translate="yes" xml:space="preserve">
          <source>Create the sample project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53254f7fb49a06ca530fbd59f0f4f685065ab168" translate="yes" xml:space="preserve">
          <source>Create the shopping cart service</source>
          <target state="translated">创建购物车服务</target>
        </trans-unit>
        <trans-unit id="b65fa03331046adf1f90a172897e6a189676d1aa" translate="yes" xml:space="preserve">
          <source>Create the translation files</source>
          <target state="translated">创建翻译文件</target>
        </trans-unit>
        <trans-unit id="631ced2ba2c2f7187c709f53e2a55495fa82e49d" translate="yes" xml:space="preserve">
          <source>Create trace scope.</source>
          <target state="translated">创建跟踪范围。</target>
        </trans-unit>
        <trans-unit id="ebb318f58cfcb04d707e94c422fb81877c7ee539" translate="yes" xml:space="preserve">
          <source>Create visual feedback for states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347617d306b391c7a5529223aa0bf45ed4268eff" translate="yes" xml:space="preserve">
          <source>Create your custom renderer using &lt;code&gt;&lt;a href=&quot;rendererfactory2&quot;&gt;RendererFactory2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;rendererfactory2&quot;&gt;RendererFactory2&lt;/a&gt;&lt;/code&gt; 创建自定义渲染器。</target>
        </trans-unit>
        <trans-unit id="dc717190186e3ee44cd32129c62e0deba59b07df" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;http://hammerjs.github.io/api/#hammer.manager&quot;&gt;HammerJS Manager&lt;/a&gt; and attaches it to a given HTML element.</source>
          <target state="translated">创建一个&lt;a href=&quot;http://hammerjs.github.io/api/#hammer.manager&quot;&gt;HammerJS Manager&lt;/a&gt;，并将其附加到给定的HTML元素。</target>
        </trans-unit>
        <trans-unit id="a6530e3441dce3f9ee236ed544557b7007cf2e1f" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance from a domain model and binds it to a form control element.</source>
          <target state="translated">从域模型创建 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例，并将其绑定到表单控件元素。</target>
        </trans-unit>
        <trans-unit id="caae2a71e30d7d7b7b9727c56659985439b5bd05" translate="yes" xml:space="preserve">
          <source>Creates a &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance from a domain model and binds it to a form control element.</source>
          <target state="translated">从域模型创建 &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例，并将其绑定到表单控件元素。</target>
        </trans-unit>
        <trans-unit id="ea0cd9f72328ab86c66b5fcd62c3ef99cf3da6eb" translate="yes" xml:space="preserve">
          <source>Creates a child injector from previously resolved providers.</source>
          <target state="translated">从先前解决的提供者中创建一个子注入器。</target>
        </trans-unit>
        <trans-unit id="fef3971537b3f0a1dde1128e255f52d415265611" translate="yes" xml:space="preserve">
          <source>Creates a custom element class based on an Angular component.</source>
          <target state="translated">基于Angular组件创建一个自定义元素类。</target>
        </trans-unit>
        <trans-unit id="96d72128265d04963c687f715964b2a2d13bcad5" translate="yes" xml:space="preserve">
          <source>Creates a directory &lt;code&gt;src/app/hero-detail&lt;/code&gt;.</source>
          <target state="translated">创建目录 &lt;code&gt;src/app/hero-detail&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22d9883ebf4a7b06ec424ffe070d29aca9b5d2ea" translate="yes" xml:space="preserve">
          <source>Creates a factory for a platform</source>
          <target state="translated">为一个平台创建一个工厂</target>
        </trans-unit>
        <trans-unit id="6213cecf750ebfddfd37c5691b4b9fa751900eac" translate="yes" xml:space="preserve">
          <source>Creates a factory for a platform. Can be used to provide or override &lt;code&gt;Providers&lt;/code&gt; specific to your applciation's runtime needs, such as &lt;code&gt;&lt;a href=&quot;core/platform_initializer&quot;&gt;PLATFORM_INITIALIZER&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;core/platform_id&quot;&gt;PLATFORM_ID&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c0b27ecb5434157a290cdaf9810cf655bfeb6d" translate="yes" xml:space="preserve">
          <source>Creates a factory for a platform. Can be used to provide or override &lt;code&gt;Providers&lt;/code&gt; specific to your applciation's runtime needs, such as &lt;code&gt;&lt;a href=&quot;platform_initializer&quot;&gt;PLATFORM_INITIALIZER&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;platform_id&quot;&gt;PLATFORM_ID&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b2ab3fe3f2aa6f449308649563df0b4c724003" translate="yes" xml:space="preserve">
          <source>Creates a link to a different view based on a route instruction consisting of a route path, required and optional parameters, query parameters, and a fragment. To navigate to a root route, use the &lt;code&gt;/&lt;/code&gt; prefix; for a child route, use the &lt;code&gt;./&lt;/code&gt;prefix; for a sibling or parent, use the &lt;code&gt;../&lt;/code&gt; prefix.</source>
          <target state="translated">基于由路由路径，必需和可选参数，查询参数以及片段组成的路由指令，创建到其他视图的链接。要导航到根路由，请使用 &lt;code&gt;/&lt;/code&gt; 前缀；对于子路由，请使用 &lt;code&gt;./&lt;/code&gt; 前缀；对于兄弟姐妹或父母，请使用 &lt;code&gt;../&lt;/code&gt; 前缀。</target>
        </trans-unit>
        <trans-unit id="8a084a9515c51a254bece9083e3958b5aaaa0d6d" translate="yes" xml:space="preserve">
          <source>Creates a local variable &lt;code&gt;movieplayer&lt;/code&gt; that provides access to the &lt;code&gt;video&lt;/code&gt; element instance in data-binding and event-binding expressions in the current template.</source>
          <target state="translated">创建一个局部变量 &lt;code&gt;movieplayer&lt;/code&gt; ，该变量提供对当前模板中数据绑定和事件绑定表达式中的 &lt;code&gt;video&lt;/code&gt; 元素实例的访问。</target>
        </trans-unit>
        <trans-unit id="b1aab839b5e7bb15e6b4e3a92f070d71fbbc8dd3" translate="yes" xml:space="preserve">
          <source>Creates a module with all the router directives and a provider registering routes, without creating a new Router service. When registering for submodules and lazy-loaded submodules, create the NgModule as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71801c6c1100db5ff200cf005463064053764345" translate="yes" xml:space="preserve">
          <source>Creates a module with all the router directives and a provider registering routes.</source>
          <target state="translated">创建一个包含所有路由器指令和提供商注册路由的模块。</target>
        </trans-unit>
        <trans-unit id="180a05c153eaeb2a0b36ac47d5c4868c47babf27" translate="yes" xml:space="preserve">
          <source>Creates a named animation trigger, containing a list of &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; entries to be evaluated when the expression bound to the trigger changes.</source>
          <target state="translated">创建一个命名动画触发器，其中包含绑定到触发器的表达式发生更改时要评估的 &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 条目的列表。</target>
        </trans-unit>
        <trans-unit id="712b79c56c2b28dac1c45ef46aa0e534b7b25153" translate="yes" xml:space="preserve">
          <source>Creates a named animation trigger, containing a list of &lt;code&gt;&lt;a href=&quot;animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; entries to be evaluated when the expression bound to the trigger changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411673ac1b73f98373de35f525ceaa2303a5bf06" translate="yes" xml:space="preserve">
          <source>Creates a named animation trigger, containing a list of &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; entries to be evaluated when the expression bound to the trigger changes.</source>
          <target state="translated">创建一个命名动画触发器，其中包含绑定到触发器的表达式发生更改时要评估的 &lt;code&gt;&lt;a href=&quot;common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 条目的列表。</target>
        </trans-unit>
        <trans-unit id="1902b86e4d0caf9e34d2481afd331b3a65ca56ee" translate="yes" xml:space="preserve">
          <source>Creates a named animation trigger, containing a list of &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; entries to be evaluated when the expression bound to the trigger changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9417e5b45d0789e51adb54752a793fce271faf" translate="yes" xml:space="preserve">
          <source>Creates a named set of CSS styles that should be applied on successful transition to a given state. The state can then be referenced by name within other animation functions.</source>
          <target state="translated">创建一组命名的CSS样式,当成功过渡到给定状态时,这些样式应该被应用。该状态可以在其他动画函数中通过名称来引用。</target>
        </trans-unit>
        <trans-unit id="198dc08c4d8d1323300a4a6314f67f468b5e290d" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">创建一个新的 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="36efdd5c1e89e4e8486865cfcc0c4b03c4ef9807" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">创建一个新的 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="513102355274ffbdb1d07ac37091bb21593c9c07" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">创建一个新的 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="620859ab54ea93c6e79f9cce56c1578e49659d14" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Array&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; containing a subset (slice) of the elements.</source>
          <target state="translated">创建一个新的 &lt;code&gt;Array&lt;/code&gt; 或 &lt;code&gt;String&lt;/code&gt; 其中包含元素的子集（切片）。</target>
        </trans-unit>
        <trans-unit id="65f86dc1f9780df941519cd1825f2191b9809ccb" translate="yes" xml:space="preserve">
          <source>Creates a new component.</source>
          <target state="translated">创建一个新的组件。</target>
        </trans-unit>
        <trans-unit id="70706f2ce6e47532c5017273998404c708cf089b" translate="yes" xml:space="preserve">
          <source>Creates a new generic NgModule definition in the given or default project.</source>
          <target state="translated">在给定或默认项目中创建一个新的通用NgModule定义。</target>
        </trans-unit>
        <trans-unit id="62e059ae3355a021d82deb57042a27f7a22f2488" translate="yes" xml:space="preserve">
          <source>Creates a new generic class definition in the given or default project.</source>
          <target state="translated">在给定或默认的项目中创建一个新的通用类定义。</target>
        </trans-unit>
        <trans-unit id="270f66a0fff8aec92d1637e16671375a0130bfc5" translate="yes" xml:space="preserve">
          <source>Creates a new generic component definition in the given or default project.</source>
          <target state="translated">在给定或默认的项目中创建一个新的通用组件定义。</target>
        </trans-unit>
        <trans-unit id="7e4fbaedc160c88240b887c836f9ce4389155aa8" translate="yes" xml:space="preserve">
          <source>Creates a new generic directive definition in the given or default project.</source>
          <target state="translated">在给定或默认的项目中创建一个新的通用指令定义。</target>
        </trans-unit>
        <trans-unit id="c090794369bff4b38077b04ac3105611a43813f9" translate="yes" xml:space="preserve">
          <source>Creates a new generic interface definition in the given or default project.</source>
          <target state="translated">在给定或默认项目中创建一个新的通用接口定义。</target>
        </trans-unit>
        <trans-unit id="c261bc76e1d49e6a376b5b0e9970a8a6e07c39c7" translate="yes" xml:space="preserve">
          <source>Creates a new generic library project in the current workspace.</source>
          <target state="translated">在当前工作区创建一个新的通用库项目。</target>
        </trans-unit>
        <trans-unit id="f1165df6f1761dae40a299c78803074c1c8ff81e" translate="yes" xml:space="preserve">
          <source>Creates a new generic pipe definition in the given or default project.</source>
          <target state="translated">在给定或默认项目中创建一个新的通用管道定义。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
