<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="2f54e7dd245f0dfc3ab6abcfff6728499d5442e8" translate="yes" xml:space="preserve">
          <source>Logical structure of the template</source>
          <target state="translated">模板的逻辑结构</target>
        </trans-unit>
        <trans-unit id="00273607a40c79049711519bee4ee7b98bd10173" translate="yes" xml:space="preserve">
          <source>Long Form</source>
          <target state="translated">长表</target>
        </trans-unit>
        <trans-unit id="f33e1356b1160b6efaf79cb2f446e08314df86ae" translate="yes" xml:space="preserve">
          <source>Long localized GMT format</source>
          <target state="translated">长期本地化的GMT格式</target>
        </trans-unit>
        <trans-unit id="2e144bfc620070f5f43ec82098e80ddab02b2467" translate="yes" xml:space="preserve">
          <source>Long specific non location format (fallback to OOOO)</source>
          <target state="translated">长的特定非位置格式(回退到OOOO)</target>
        </trans-unit>
        <trans-unit id="8bdf3c794b8c3fcb2af032ce49e3385b59500b8b" translate="yes" xml:space="preserve">
          <source>Look again at the TypeScript &lt;code&gt;MinimalLogger&lt;/code&gt; class to confirm that it has no implementation.</source>
          <target state="translated">再次查看TypeScript &lt;code&gt;MinimalLogger&lt;/code&gt; 类，以确认它没有实现。</target>
        </trans-unit>
        <trans-unit id="9714afb7b3fd3c001ce388a1c74ebc12d1268e5e" translate="yes" xml:space="preserve">
          <source>Look at the &lt;code&gt;AppModule&lt;/code&gt;&lt;em&gt;imports&lt;/em&gt; to see how it is configured.</source>
          <target state="translated">查看 &lt;code&gt;AppModule&lt;/code&gt; &lt;em&gt;导入&lt;/em&gt;以了解其配置。</target>
        </trans-unit>
        <trans-unit id="f9a88c4a7ada1a640ab5a9292b8d931bf31bf8c7" translate="yes" xml:space="preserve">
          <source>Look at the browser address bar.</source>
          <target state="translated">看看浏览器地址栏。</target>
        </trans-unit>
        <trans-unit id="08e6f48af7c260496751a944791b4e0d4b6e0ce4" translate="yes" xml:space="preserve">
          <source>Look at the browser's address bar. The URL ends in &lt;code&gt;/&lt;/code&gt;. The route path to &lt;code&gt;HeroesComponent&lt;/code&gt; is &lt;code&gt;/heroes&lt;/code&gt;.</source>
          <target state="translated">查看浏览器的地址栏。网址以 &lt;code&gt;/&lt;/code&gt; 结尾。到 &lt;code&gt;HeroesComponent&lt;/code&gt; 的路由路径是 &lt;code&gt;/heroes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b3028885271626cb1cadf70b2967535e1621603" translate="yes" xml:space="preserve">
          <source>Look at the marble observable definition.</source>
          <target state="translated">看看大理石的可观察定义。</target>
        </trans-unit>
        <trans-unit id="42f94faa84ed8b3a523dc0c01368d8c0d7a3ee41" translate="yes" xml:space="preserve">
          <source>Look at the module &lt;code&gt;imports&lt;/code&gt; array. Notice that the &lt;code&gt;AppRoutingModule&lt;/code&gt; is &lt;em&gt;last&lt;/em&gt;. Most importantly, it comes &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;HeroesModule&lt;/code&gt;.</source>
          <target state="translated">查看模块 &lt;code&gt;imports&lt;/code&gt; 数组。请注意， &lt;code&gt;AppRoutingModule&lt;/code&gt; 为&lt;em&gt;last&lt;/em&gt;。最重要的是，说到&lt;em&gt;以后&lt;/em&gt;的 &lt;code&gt;HeroesModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0ba44f45b5a3040d1447d878bc55088ad4236e4" translate="yes" xml:space="preserve">
          <source>Look at the phone list component first. Right now it contains a TypeScript controller class and a component definition object. You can morph this into an Angular component by just renaming the controller class and turning the AngularJS component definition object into an Angular &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator. You can then also remove the static &lt;code&gt;$inject&lt;/code&gt; property from the class:</source>
          <target state="translated">首先查看电话列表组件。现在，它包含一个TypeScript控制器类和一个组件定义对象。您可以通过重命名控制器类并将AngularJS组件定义对象变成Angular &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 装饰器，将其变形为Angular组件。然后，您还可以从类中删除静态 &lt;code&gt;$inject&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="de3ec20646b812d6cbc48dad5466aa227cf65d80" translate="yes" xml:space="preserve">
          <source>Look but don't touch.</source>
          <target state="translated">看,但不要碰。</target>
        </trans-unit>
        <trans-unit id="5ddf7201ef3546b82f4a6c2e78de5f37db302282" translate="yes" xml:space="preserve">
          <source>Look but don't touch. The classes indicate that it is untouched, pristine, and valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513e030d1a3f083d725c0b56b56d11109f9c24a0" translate="yes" xml:space="preserve">
          <source>Look for the &lt;code&gt;SideNav&lt;/code&gt; node in &lt;code&gt;navigation.json&lt;/code&gt;. The &lt;code&gt;SideNav&lt;/code&gt; node is an array of navigation nodes. Each node is either an &lt;em&gt;item&lt;/em&gt; node for a single document or a &lt;em&gt;header&lt;/em&gt; node with child nodes.</source>
          <target state="translated">在 &lt;code&gt;navigation.json&lt;/code&gt; 中查找 &lt;code&gt;SideNav&lt;/code&gt; 节点。所述 &lt;code&gt;SideNav&lt;/code&gt; 节点是导航节点的数组。每个节点要么是单个文档的&lt;em&gt;项目&lt;/em&gt;节点，要么是带有子节点的&lt;em&gt;标题&lt;/em&gt;节点。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="103449f798cc7f7fa5c9cee4dae5684dc090c344" translate="yes" xml:space="preserve">
          <source>Look for these expressions in relation to other translation units that you recognize from elsewhere in the source template. In this example, you know the translation unit for the &lt;code&gt;select&lt;/code&gt; must be just below the translation unit for the logo.</source>
          <target state="translated">与您从源模板中其他位置识别的其他翻译单元相关的查找这些表达式。在此示例中，您知道 &lt;code&gt;select&lt;/code&gt; 的翻译单位必须在徽标翻译单位的正下方。</target>
        </trans-unit>
        <trans-unit id="aa1d393ea706ab3e4d6bcd4474df721780901eb8" translate="yes" xml:space="preserve">
          <source>Look inside the &lt;code&gt;src/app&lt;/code&gt; folder.</source>
          <target state="translated">查看 &lt;code&gt;src/app&lt;/code&gt; 文件夹。</target>
        </trans-unit>
        <trans-unit id="9c5b5378a4ca447832cf5c9b2acce56f7d340ba0" translate="yes" xml:space="preserve">
          <source>Look up the ID for the language-locale combination in &lt;a href=&quot;https://github.com/angular/angular/tree/master/packages/common/locales&quot;&gt;the Angular repository&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9085df2384321f47fc8246309224f721b2f71c29" translate="yes" xml:space="preserve">
          <source>Looking at the child route under the &lt;code&gt;AdminComponent&lt;/code&gt;, there is a &lt;code&gt;path&lt;/code&gt; and a &lt;code&gt;children&lt;/code&gt; property but it's not using a &lt;code&gt;component&lt;/code&gt;. You haven't made a mistake in the configuration. You've defined a &lt;em&gt;component-less&lt;/em&gt; route.</source>
          <target state="translated">查看 &lt;code&gt;AdminComponent&lt;/code&gt; 下的子路径，有一个 &lt;code&gt;path&lt;/code&gt; 和一个 &lt;code&gt;children&lt;/code&gt; 属性，但是它没有使用 &lt;code&gt;component&lt;/code&gt; 。您没有在配置中犯错。您已经定义了无&lt;em&gt;组件&lt;/em&gt;路由。</target>
        </trans-unit>
        <trans-unit id="25e2b281c0bde83d9b580461ea4f7163cd645894" translate="yes" xml:space="preserve">
          <source>Looking back at the &lt;code&gt;CrisisDetailComponent&lt;/code&gt;, it implements the confirmation workflow for unsaved changes.</source>
          <target state="translated">回顾 &lt;code&gt;CrisisDetailComponent&lt;/code&gt; ，它实现了未保存更改的确认工作流。</target>
        </trans-unit>
        <trans-unit id="e7e25634e0afadbcb29eb57b05883d36a23ed4f1" translate="yes" xml:space="preserve">
          <source>Looking for an opinionated guide to Angular syntax, conventions, and application structure? Step right in! This style guide presents preferred conventions and, as importantly, explains why.</source>
          <target state="translated">正在寻找一份关于Angular语法、约定和应用结构的意见性指南?快来看看吧 这本风格指南介绍了首选的惯例,更重要的是,解释了为什么。</target>
        </trans-unit>
        <trans-unit id="cea1f4fc1f99cff7cd3c9ac9dc8e20194ab6afc7" translate="yes" xml:space="preserve">
          <source>Looking for components that implement an interface would be better. That's not possible because TypeScript interfaces disappear from the transpiled JavaScript, which doesn't support interfaces. There's no artifact to look for.</source>
          <target state="translated">寻找实现接口的组件会更好。这是不可能的,因为TypeScript的接口会从不支持接口的移植JavaScript中消失。没有任何人工制品可以寻找。</target>
        </trans-unit>
        <trans-unit id="4f21b57f74ce75f538e4af1a807f5cf8f7bc2542" translate="yes" xml:space="preserve">
          <source>Loosely structured search criteria; for example, &lt;code&gt;name='wind*'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56f8926a0c06c33dc5d181d345f1e5c45043a2c" translate="yes" xml:space="preserve">
          <source>Low-level API access</source>
          <target state="translated">低级API访问</target>
        </trans-unit>
        <trans-unit id="6134b7debe4a654fda2ef09a7052103053d9efbb" translate="yes" xml:space="preserve">
          <source>Low-level service for running the angular compiler during runtime to create &lt;a href=&quot;componentfactory&quot;&gt;&lt;code&gt;ComponentFactory&lt;/code&gt;&lt;/a&gt;s, which can later be used to create and render a Component instance.</source>
          <target state="translated">用于在运行时运行角度编译器以创建&lt;a href=&quot;componentfactory&quot;&gt; &lt;code&gt;ComponentFactory&lt;/code&gt; &lt;/a&gt;的低级服务，以后可用于创建和呈现Component实例。</target>
        </trans-unit>
        <trans-unit id="c6d7137dc931a7743ccff5998f59ac936c950bc8" translate="yes" xml:space="preserve">
          <source>Low-level service for running the angular compiler during runtime to create &lt;a href=&quot;core/componentfactory&quot;&gt;&lt;code&gt;ComponentFactory&lt;/code&gt;&lt;/a&gt;s, which can later be used to create and render a Component instance.</source>
          <target state="translated">用于在运行时运行角度编译器以创建&lt;a href=&quot;core/componentfactory&quot;&gt; &lt;code&gt;ComponentFactory&lt;/code&gt; &lt;/a&gt;的低级服务，以后可用于创建和呈现Component实例。</target>
        </trans-unit>
        <trans-unit id="1057a596dddf35f2f660fc4cbd5bf0d9525d2095" translate="yes" xml:space="preserve">
          <source>LowerCasePipe</source>
          <target state="translated">LowerCasePipe</target>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="4815b07a77d69483937a1efbabc0f2f11cd5708c" translate="yes" xml:space="preserve">
          <source>M (9)</source>
          <target state="translated">M (9)</target>
        </trans-unit>
        <trans-unit id="e094468306e799895a06b2c3b14bbd9f0decc9fb" translate="yes" xml:space="preserve">
          <source>MDC Web is a library created by Google's Material Design team that provides reusable primitives for building Material Design components. The Angular team is incorporating these primitives into Angular Material. Using MDC Web will align Angular Material more closely with the Material Design specification, expand accessibility, improve component quality, and improve our team's velocity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b40dd1c9a616e32893709f0160985f45c855c7" translate="yes" xml:space="preserve">
          <source>MDN: Notifications API</source>
          <target state="translated">DND:API通知</target>
        </trans-unit>
        <trans-unit id="bbd453084841140039d2f5d166f91ed00ae70846" translate="yes" xml:space="preserve">
          <source>MDN: Push API</source>
          <target state="translated">MDN:推送API</target>
        </trans-unit>
        <trans-unit id="50f14e525d2e81af2e9a6d53e92146c19aee8e89" translate="yes" xml:space="preserve">
          <source>MDN: Web Push API Notifications best practices</source>
          <target state="translated">MDN:网络推送API通知的最佳做法</target>
        </trans-unit>
        <trans-unit id="89690ac571dcf4c9c40c842efed3f11171d07b29" translate="yes" xml:space="preserve">
          <source>MIT</source>
          <target state="translated">MIT</target>
        </trans-unit>
        <trans-unit id="59d84edaf3fd8789deebb4c69c1c96d9dc17b86a" translate="yes" xml:space="preserve">
          <source>MIT / Unicode license</source>
          <target state="translated">MIT/Unicode许可证</target>
        </trans-unit>
        <trans-unit id="4a3a8927b85daa16f0fe11b6bbb759eee3095858" translate="yes" xml:space="preserve">
          <source>MM</source>
          <target state="translated">MM</target>
        </trans-unit>
        <trans-unit id="5321cdcacbce17ad49f28abfe2ba9da25f850a0f" translate="yes" xml:space="preserve">
          <source>MM (09)</source>
          <target state="translated">MM(09)</target>
        </trans-unit>
        <trans-unit id="251f18d4e6b31f7e8ee5bbc62db713101e85a8c9" translate="yes" xml:space="preserve">
          <source>MMM</source>
          <target state="translated">MMM</target>
        </trans-unit>
        <trans-unit id="385520ba3684b055880262b6a0aae7b122c04a80" translate="yes" xml:space="preserve">
          <source>MMM (Sep)</source>
          <target state="translated">MMM(9月)</target>
        </trans-unit>
        <trans-unit id="2f5005d0e6ce2fb551cb5f2bdb9740a5ca7c28db" translate="yes" xml:space="preserve">
          <source>MMMM</source>
          <target state="translated">MMMM</target>
        </trans-unit>
        <trans-unit id="dd3f54f92da35573fec642344b62ba3477ccfe7f" translate="yes" xml:space="preserve">
          <source>MMMM (September)</source>
          <target state="translated">MMMM(9月)</target>
        </trans-unit>
        <trans-unit id="51e8087c726748d21d04753b342826154c269d69" translate="yes" xml:space="preserve">
          <source>MMMMM</source>
          <target state="translated">MMMMM</target>
        </trans-unit>
        <trans-unit id="6ab4970e733a04d47792cab91920b26eb963b14c" translate="yes" xml:space="preserve">
          <source>MOCK_PLATFORM_LOCATION_CONFIG</source>
          <target state="translated">MOCK_PLATFORM_LOCATION_CONFIG</target>
        </trans-unit>
        <trans-unit id="f4dddebe31786c87e0fe408e0085675712af65cc" translate="yes" xml:space="preserve">
          <source>Main section heading</source>
          <target state="translated">主要章节标题</target>
        </trans-unit>
        <trans-unit id="69aca2cdabad30532813ce0f2a3ad8de0760281a" translate="yes" xml:space="preserve">
          <source>Main source file for the builder definition.</source>
          <target state="translated">构建器定义的主要源文件。</target>
        </trans-unit>
        <trans-unit id="3d0b64ee3c6084e6873a3c70b232a30e725474f6" translate="yes" xml:space="preserve">
          <source>Maintaining library compatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4bebfe2cfb2181a63c5fee91496eebaf3ef9c5" translate="yes" xml:space="preserve">
          <source>Major versions of Angular CLI follow the supported major version of Angular, but minor versions can be released separately.</source>
          <target state="translated">Angular CLI的主要版本遵循支持的Angular主要版本,但次要版本可以单独发布。</target>
        </trans-unit>
        <trans-unit id="bf3de5f325d286866e21c85cda474a999cdba14c" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; available everywhere in the app in two steps. First, add it to the root &lt;code&gt;AppModule&lt;/code&gt; by importing it:</source>
          <target state="translated">分两步使 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 在应用程序中的任何地方都可用。首先，通过导入将其添加到根 &lt;code&gt;AppModule&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="c5a1910e73e7eb6e55c46ff521bb368fe41f7a94" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;compileComponents()&lt;/code&gt; the last step before calling &lt;code&gt;TestBed.createComponent()&lt;/code&gt;.</source>
          <target state="translated">让 &lt;code&gt;compileComponents()&lt;/code&gt; 调用之前的最后一步 &lt;code&gt;TestBed.createComponent()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d99c5b9ba65adcd58b693254337c6f67be8e03ad" translate="yes" xml:space="preserve">
          <source>Make a copy of the &lt;code&gt;messages.xlf&lt;/code&gt; file.</source>
          <target state="translated">复制 &lt;code&gt;messages.xlf&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="adfb7189b62ee403779a9aec31ce64727ac440c3" translate="yes" xml:space="preserve">
          <source>Make a copy of the &lt;code&gt;messages.xlf&lt;/code&gt; source language file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c42c44c10f27b50f2e2739c06fd06701cea6f28" translate="yes" xml:space="preserve">
          <source>Make a copy of this file for each language, and send these &lt;em&gt;translation files&lt;/em&gt; to a translator or service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7e9db413f403c6893a8e2c2084495d75789b0b" translate="yes" xml:space="preserve">
          <source>Make a dependency &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;&lt;/code&gt; and limit search with &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">依赖 &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;&lt;/code&gt; 并使用 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;限制搜索</target>
        </trans-unit>
        <trans-unit id="c4ba3fed3b0a7f9f32cbba560db2e2f5bbc7c37b" translate="yes" xml:space="preserve">
          <source>Make a pipe impure by setting its &lt;code&gt;pure&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ceac23c3a3ac47d021f8a0419032c00c50efc3a" translate="yes" xml:space="preserve">
          <source>Make changes to the application</source>
          <target state="translated">对申请进行修改</target>
        </trans-unit>
        <trans-unit id="316044472ad8c060a30912cca4487cb3af4f2256" translate="yes" xml:space="preserve">
          <source>Make changes to the application.</source>
          <target state="translated">对申请进行修改。</target>
        </trans-unit>
        <trans-unit id="a745bd76a30ff56f7cd10a8193c462f31e1fee46" translate="yes" xml:space="preserve">
          <source>Make in-template type requirements more specific with template guards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc254619bb9f8413958ab0f757b97527731df62" translate="yes" xml:space="preserve">
          <source>Make it look like this:</source>
          <target state="translated">让它看起来像这样。</target>
        </trans-unit>
        <trans-unit id="1abc7386e3bc39d2084675bbeeedd2ef35237fb7" translate="yes" xml:space="preserve">
          <source>Make sure you do &lt;strong&gt;not&lt;/strong&gt; prefix the &lt;code&gt;highlight&lt;/code&gt; directive name with &lt;strong&gt;&lt;code&gt;ng&lt;/code&gt;&lt;/strong&gt; because that prefix is reserved for Angular and using it could cause bugs that are difficult to diagnose.</source>
          <target state="translated">确保你&lt;strong&gt;没有&lt;/strong&gt;前缀的 &lt;code&gt;highlight&lt;/code&gt; 与指令名&lt;strong&gt; &lt;code&gt;ng&lt;/code&gt; &lt;/strong&gt;，因为前缀保留角和使用可能会导致难以诊断的错误。</target>
        </trans-unit>
        <trans-unit id="712b8ca64e1f48176d6c762ee018e17f602405ff" translate="yes" xml:space="preserve">
          <source>Make that consistent and easy by encapsulating the &lt;em&gt;click-triggering&lt;/em&gt; process in a helper such as the &lt;code&gt;click()&lt;/code&gt; function below:</source>
          <target state="translated">通过将&lt;em&gt;单击触发&lt;/em&gt;过程封装在诸如以下的 &lt;code&gt;click()&lt;/code&gt; 函数之类的帮助器中，可以使这一过程变得一致且容易：</target>
        </trans-unit>
        <trans-unit id="2e9a223fa588ccd851f1c1b0cb30f1273de71037" translate="yes" xml:space="preserve">
          <source>Make the &lt;code&gt;AuthGuard&lt;/code&gt; at least pretend to authenticate.</source>
          <target state="translated">使 &lt;code&gt;AuthGuard&lt;/code&gt; 至少假装进行身份验证。</target>
        </trans-unit>
        <trans-unit id="dfaed036a3d30d15684aeb96627e326e309f4f52" translate="yes" xml:space="preserve">
          <source>Make the &lt;code&gt;AuthGuard&lt;/code&gt; mimic authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb19f1f382051a6d85c4333391125d5ede5a7d90" translate="yes" xml:space="preserve">
          <source>Make the &lt;code&gt;HeroDetailComponent&lt;/code&gt;</source>
          <target state="translated">制作 &lt;code&gt;HeroDetailComponent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="463dda4da4220019aeeebd42f257d172fd01b63a" translate="yes" xml:space="preserve">
          <source>Make the animation definition available in your application by adding the reusable animation (&lt;code&gt;slideInAnimation&lt;/code&gt;) to the &lt;code&gt;animations&lt;/code&gt; metadata of the &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">使你的应用程序中使用动画定义中，在可重复使用的动画（ &lt;code&gt;slideInAnimation&lt;/code&gt; ）到 &lt;code&gt;animations&lt;/code&gt; 中的元数据 &lt;code&gt;AppComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74751227eae7954f97375b0126f0b17886fb4edd" translate="yes" xml:space="preserve">
          <source>Make this and future navigation links look better by adding private CSS styles to &lt;code&gt;app.component.css&lt;/code&gt; as listed in the &lt;a href=&quot;toh-pt5#appcomponent&quot;&gt;final code review&lt;/a&gt; below.</source>
          <target state="translated">通过将私有CSS样式添加到 &lt;code&gt;app.component.css&lt;/code&gt; 中，使此导航链接和以后的导航链接看起来更好，如下面的&lt;a href=&quot;toh-pt5#appcomponent&quot;&gt;最终代码回顾&lt;/a&gt;所示。</target>
        </trans-unit>
        <trans-unit id="dda44cf2cb718e16905dfed467c1eda66196d813" translate="yes" xml:space="preserve">
          <source>Makes some of those components, directives, and pipes public so that other module's component templates can use them.</source>
          <target state="translated">将其中的一些组件、指令和管道公开,以便其他模块的组件模板可以使用它们。</target>
        </trans-unit>
        <trans-unit id="b5410952d702720b0d3986ba9bebbbd760f482c3" translate="yes" xml:space="preserve">
          <source>Making Angular Dependencies Injectable to AngularJS</source>
          <target state="translated">让Angular Dependencies可以注入到AngularJS中去</target>
        </trans-unit>
        <trans-unit id="31c9b48df89528d530e4f8037c6726b1d77e4601" translate="yes" xml:space="preserve">
          <source>Making AngularJS Dependencies Injectable to Angular</source>
          <target state="translated">让AngularJS依赖关系可以注入到Angular中去</target>
        </trans-unit>
        <trans-unit id="53df0636f24a76fd425c9228f1963fbda618ba6a" translate="yes" xml:space="preserve">
          <source>Making a DELETE request</source>
          <target state="translated">提出删除请求</target>
        </trans-unit>
        <trans-unit id="3c975508e5dfdc90bc9e5763fc3c9cde303a94a6" translate="yes" xml:space="preserve">
          <source>Making a JSONP request</source>
          <target state="translated">提出JSONP请求</target>
        </trans-unit>
        <trans-unit id="682a5e632852e8d274f560b7523b9f8d6c204027" translate="yes" xml:space="preserve">
          <source>Making a POST request</source>
          <target state="translated">进行POST请求</target>
        </trans-unit>
        <trans-unit id="6a339adf05c8177aed46ff499123318bda51215e" translate="yes" xml:space="preserve">
          <source>Making a PUT request</source>
          <target state="translated">提出PUT请求</target>
        </trans-unit>
        <trans-unit id="43e432fa0ad68e86b6c27d1e0ada2b9ae88e7e75" translate="yes" xml:space="preserve">
          <source>Making changes to your application</source>
          <target state="translated">对您的申请进行修改</target>
        </trans-unit>
        <trans-unit id="e5d93d893b4d8a2a4fbf92ae586b0c73b00beed0" translate="yes" xml:space="preserve">
          <source>Manage marked text with custom IDs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5759e22986abbd59e9864d410a1f83086069d2df" translate="yes" xml:space="preserve">
          <source>Manages the value and validity state of a group of &lt;code&gt;&lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; instances. The group's properties include its child controls. The top-level form in your component is &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">管理一组 &lt;code&gt;&lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; 实例的值和有效性状态。该组的属性包括其子控件。组件中的顶级表单是 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0fd426fb9002208c4566e9fae5a1f6f8e2b68b5f" translate="yes" xml:space="preserve">
          <source>Manages the value and validity state of a numerically indexed array of &lt;code&gt;&lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">管理 &lt;code&gt;&lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; 实例的数字索引数组的值和有效性状态。</target>
        </trans-unit>
        <trans-unit id="e404dc463feb533622563f65f551014165fdd976" translate="yes" xml:space="preserve">
          <source>Manages the value and validity status of an individual form control. It corresponds to an HTML form control such as &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">管理单个表单控件的值和有效性状态。它对应于HTML表单控件，例如 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a06d5782e6b2e4d5130fa84dff2103e2c6bc93d0" translate="yes" xml:space="preserve">
          <source>Managing Data</source>
          <target state="translated">管理数据</target>
        </trans-unit>
        <trans-unit id="426511ddcafff26d74b6bbca96b1de93ad6b43e1" translate="yes" xml:space="preserve">
          <source>Managing assets in a library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be888fa4e434addfba15bf7c780695443961d736" translate="yes" xml:space="preserve">
          <source>Managing control values</source>
          <target state="translated">管理控制值</target>
        </trans-unit>
        <trans-unit id="9db1f3238218ba7ed5dc75cfc817d6b2ff8ee541" translate="yes" xml:space="preserve">
          <source>Managing data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9e8c74b17baa18fe51ec87aab50e6907bebe12" translate="yes" xml:space="preserve">
          <source>Managing state transitions is one of the hardest parts of building applications. This is especially true on the web, where you also need to ensure that the state is reflected in the URL. In addition, we often want to split applications into multiple bundles and load them on demand. Doing this transparently is not trivial.</source>
          <target state="translated">管理状态转换是构建应用程序最难的部分之一。在网络上尤其如此,你还需要确保状态反映在URL中。此外,我们经常希望将应用程序分成多个捆绑,并按需加载。透明地做到这一点并非易事。</target>
        </trans-unit>
        <trans-unit id="0ee43e052d4a23f21892c2695989404df43ace84" translate="yes" xml:space="preserve">
          <source>Mandatory polyfills</source>
          <target state="translated">强制规定的多元填充物</target>
        </trans-unit>
        <trans-unit id="cbd89d1007525e4ca47bee6f8f673387a6733049" translate="yes" xml:space="preserve">
          <source>Manipulating the code in an application has the potential to be both very powerful and correspondingly dangerous. For example, creating a file that already exists would be an error, and if it was applied immediately, it would discard all the other changes applied so far. The Angular Schematics tooling guards against side effects and errors by creating a virtual file system. A schematic describes a pipeline of transformations that can be applied to the virtual file system. When a schematic runs, the transformations are recorded in memory, and only applied in the real file system once they're confirmed to be valid.</source>
          <target state="translated">操纵应用程序中的代码有可能是非常强大的,也有可能是相应的危险。例如,创建一个已经存在的文件将是一个错误,如果立即应用它,它将会丢弃迄今为止应用的所有其他更改。Angular Schematics工具通过创建一个虚拟文件系统来防范副作用和错误。一个原理图描述了一个可以应用到虚拟文件系统的转换管道。当原理图运行时,变换会被记录在内存中,只有在确认有效后才会在真实文件系统中应用。</target>
        </trans-unit>
        <trans-unit id="db4511ba7c974dbee1de67c07e877aa499f1b010" translate="yes" xml:space="preserve">
          <source>Manually set the errors for a control</source>
          <target state="translated">手动设置控件的错误</target>
        </trans-unit>
        <trans-unit id="9a073277d8726e5adb59f517b0f701f6d2b7d2f5" translate="yes" xml:space="preserve">
          <source>Many Angular APIs return &lt;a href=&quot;glossary#observable&quot;&gt;&lt;em&gt;observables&lt;/em&gt;&lt;/a&gt;. RxJS is an implementation of the proposed &lt;a href=&quot;https://github.com/tc39/proposal-observable&quot;&gt;Observables specification&lt;/a&gt; currently before the &lt;a href=&quot;https://www.ecma-international.org/memento/tc39-m.htm&quot;&gt;TC39&lt;/a&gt; committee, which determines standards for the JavaScript language.</source>
          <target state="translated">许多Angular API返回&lt;a href=&quot;glossary#observable&quot;&gt;&lt;em&gt;observable&lt;/em&gt;&lt;/a&gt;。RxJS是&lt;a href=&quot;https://www.ecma-international.org/memento/tc39-m.htm&quot;&gt;TC39&lt;/a&gt;委员会当前提出的&lt;a href=&quot;https://github.com/tc39/proposal-observable&quot;&gt;Observables规范&lt;/a&gt;的实现，该规范确定JavaScript语言的标准。</target>
        </trans-unit>
        <trans-unit id="841a4a336a9bf0b0530b121166afbe26ecbf0dba" translate="yes" xml:space="preserve">
          <source>Many Angular APIs return &lt;a href=&quot;glossary#observable&quot;&gt;&lt;em&gt;observables&lt;/em&gt;&lt;/a&gt;. RxJS is an implementation of the proposed &lt;a href=&quot;https://github.com/tc39/proposal-observable&quot;&gt;Observables specification&lt;/a&gt; currently before the &lt;a href=&quot;https://www.ecma-international.org/memento/tc39.htm&quot;&gt;TC39&lt;/a&gt; committee, which determines standards for the JavaScript language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3077fb1299e0d4c5be4bed68c3efe959b2a279" translate="yes" xml:space="preserve">
          <source>Many JavaScript libraries, such as jQuery, the Jasmine testing library, and Angular, extend the JavaScript environment with features and syntax that the TypeScript compiler doesn't recognize natively. When the compiler doesn't recognize something, it throws an error.</source>
          <target state="translated">许多JavaScript库,如jQuery、Jasmine测试库和Angular,通过TypeScript编译器无法识别的特性和语法来扩展JavaScript环境。当编译器不能识别某些东西时,它会抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="79a5cc6e3569f968faded9077d4da5c809fd4a34" translate="yes" xml:space="preserve">
          <source>Many NgModules such as the &lt;a href=&quot;router&quot;&gt;&lt;code&gt;RouterModule&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;forms&quot;&gt;&lt;code&gt;FormsModule&lt;/code&gt;&lt;/a&gt; define their own attribute directives. The most common attribute directives are as follows:</source>
          <target state="translated">许多NgModule（例如&lt;a href=&quot;router&quot;&gt; &lt;code&gt;RouterModule&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;forms&quot;&gt; &lt;code&gt;FormsModule&lt;/code&gt; )&lt;/a&gt;定义了自己的属性指令。最常见的属性指令如下：</target>
        </trans-unit>
        <trans-unit id="00f3acc423ed6a2d31b34e70beebcddb6eebbe59" translate="yes" xml:space="preserve">
          <source>Many applications allow users to work on several open tasks at the same time. For example, in a tax preparation application, the preparer could be working on several tax returns, switching from one to the other throughout the day.</source>
          <target state="translated">许多应用程序允许用户同时处理多个开放任务。例如,在一个税务准备应用程序中,准备者可能正在处理几个报税单,在一天中从一个切换到另一个。</target>
        </trans-unit>
        <trans-unit id="5e60910eccbea916931290f9e1a1edb67389dec1" translate="yes" xml:space="preserve">
          <source>Many applications need to solve the same general problems, such as presenting a unified user interface, presenting data, and allowing data entry. Developers can create general solutions for particular domains that can be adapted for re-use in different apps. Such a solution can be built as Angular &lt;em&gt;libraries&lt;/em&gt; and these libraries can be published and shared as &lt;em&gt;npm packages&lt;/em&gt;.</source>
          <target state="translated">许多应用程序需要解决相同的一般问题，例如呈现统一的用户界面，呈现数据和允许数据输入。开发人员可以为特定领域创建通用解决方案，以适合在不同应用程序中重复使用。这样的解决方案可以作为Angular &lt;em&gt;库&lt;/em&gt;构建，并且这些库可以作为&lt;em&gt;npm软件包&lt;/em&gt;发布和共享。</target>
        </trans-unit>
        <trans-unit id="b2f6e590417b1e950f21e2fe4525ecf836ea048a" translate="yes" xml:space="preserve">
          <source>Many browsers lack native support for some features in the latest HTML standards, features that Angular requires. &lt;a href=&quot;https://en.wikipedia.org/wiki/Polyfill_(programming)&quot;&gt;&lt;em&gt;Polyfills&lt;/em&gt;&lt;/a&gt; can emulate the missing features. The &lt;a href=&quot;browser-support&quot;&gt;Browser Support&lt;/a&gt; guide explains which browsers need polyfills and how you can add them.</source>
          <target state="translated">许多浏览器缺乏对最新HTML标准中某些功能（Angular所需的功能）的本地支持。&lt;a href=&quot;https://en.wikipedia.org/wiki/Polyfill_(programming)&quot;&gt;&lt;em&gt;Polyfill&lt;/em&gt;&lt;/a&gt;可以模拟缺少的功能。该&lt;a href=&quot;browser-support&quot;&gt;浏览器支持&lt;/a&gt;指南介绍其浏览器需要polyfills，以及如何将它们添加。</target>
        </trans-unit>
        <trans-unit id="fdde828ec52442b4eedb4346b2654c7a1e75d261" translate="yes" xml:space="preserve">
          <source>Many code snippets illustrate the points and concepts, all of them available in the .</source>
          <target state="translated">许多代码片断说明了这些要点和概念,所有这些代码片断都可以在.NET Framework中使用。</target>
        </trans-unit>
        <trans-unit id="a5769571f8826f258e20b10faf5d97c4b29d84c5" translate="yes" xml:space="preserve">
          <source>Many components specify &lt;em&gt;external templates&lt;/em&gt; and &lt;em&gt;external css&lt;/em&gt; with the &lt;code&gt;@&lt;a href=&quot;../api/core/component#templateUrl&quot;&gt;Component.templateUrl&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;Component.styleUrls&lt;/a&gt;&lt;/code&gt; properties respectively, as the following variant of &lt;code&gt;BannerComponent&lt;/code&gt; does.</source>
          <target state="translated">许多组件指定&lt;em&gt;外部模板&lt;/em&gt;和&lt;em&gt;外部CSS&lt;/em&gt;与 &lt;code&gt;@&lt;a href=&quot;../api/core/component#templateUrl&quot;&gt;Component.templateUrl&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;Component.styleUrls&lt;/a&gt;&lt;/code&gt; 分别特性，如以下变种 &lt;code&gt;BannerComponent&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="d74beeb4e407d44341eb572c501e351f4033521c" translate="yes" xml:space="preserve">
          <source>Many countries, such as France and Canada, use the same language (French, identified as &lt;code&gt;fr&lt;/code&gt;) but differ in grammar, punctuation, and formats for currency, decimal numbers, and dates. Use a more specific locale ID, such as French for Canada (&lt;code&gt;fr-CA&lt;/code&gt;), when localizing your app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc85a759063bfaad44d4c09b73aac23c0466b71" translate="yes" xml:space="preserve">
          <source>Many dependency values are provided by classes, but not all. The expanded &lt;em&gt;provide&lt;/em&gt; object lets you associate different kinds of providers with a DI token.</source>
          <target state="translated">类提供了许多依赖关系值，但不是全部。扩展&lt;em&gt;提供&lt;/em&gt;对象让你各种不同供应商与DI令牌关联。</target>
        </trans-unit>
        <trans-unit id="a6bc57d6d1877b71ad49a4a9eab6aeaf31d96e3b" translate="yes" xml:space="preserve">
          <source>Many developers feel this approach is cleaner and more explicit than the traditional &lt;code&gt;beforeEach()&lt;/code&gt; style.</source>
          <target state="translated">许多开发人员认为此方法比传统的 &lt;code&gt;beforeEach()&lt;/code&gt; 样式更干净，更明确。</target>
        </trans-unit>
        <trans-unit id="c964d1c587a16600688084c23f6ab48e7efca0b1" translate="yes" xml:space="preserve">
          <source>Many developers prefer to declare the factory provider in a separate &lt;code&gt;ajs-upgraded-providers.ts&lt;/code&gt; file so that they are all together, making it easier to reference them, create new ones and delete them once the upgrade is over.</source>
          <target state="translated">许多开发人员更喜欢在单独的 &lt;code&gt;ajs-upgraded-providers.ts&lt;/code&gt; 文件中声明工厂提供程序，以便将它们全部合并在一起，从而可以更轻松地引用它们，创建新文件并在升级结束后将其删除。</target>
        </trans-unit>
        <trans-unit id="3b4d240f94587f486e748968376e891c49e6d4ca" translate="yes" xml:space="preserve">
          <source>Many forms, such as questionaires, can be very similar to one another in format and intent. To make it faster and easier to generate different versions of such a form, you can create a &lt;em&gt;dynamic form template&lt;/em&gt; based on metadata that describes the business object model. You can then use the template to generate new forms automatically, according to changes in the data model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab5deb39f9c7a1a879f01f3a89332be8ff505de" translate="yes" xml:space="preserve">
          <source>Many guides tell a story. In that story, the app evolves incrementally, often with simplistic or incomplete code along the way.</source>
          <target state="translated">许多指南都在讲述一个故事。在这个故事中,应用会逐步发展,通常在发展过程中会出现简单化或不完整的代码。</target>
        </trans-unit>
        <trans-unit id="3dc83b718f084abe53b5d87cf0666ccf6e382300" translate="yes" xml:space="preserve">
          <source>Many interceptors are only concerned with the outgoing request and return the event stream from &lt;code&gt;next.handle()&lt;/code&gt; without modifying it. Some interceptors, however, need to examine and modify the response from &lt;code&gt;next.handle()&lt;/code&gt;; these operations can see all of these events in the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087124921eb33f7e338ea00e25240b971be1f766" translate="yes" xml:space="preserve">
          <source>Many interceptors are only concerned with the outgoing request and simply return the event stream from &lt;code&gt;next.handle()&lt;/code&gt; without modifying it.</source>
          <target state="translated">许多拦截器只关心传出的请求，只是从 &lt;code&gt;next.handle()&lt;/code&gt; 返回事件流，而没有对其进行修改。</target>
        </trans-unit>
        <trans-unit id="0d466227c3ceaced415c72a362876ff6eef8934e" translate="yes" xml:space="preserve">
          <source>Many libraries include definition files in their npm packages where both the TypeScript compiler and editors can find them. Angular is one such library. The &lt;code&gt;node_modules/@angular/core/&lt;/code&gt; folder of any Angular application contains several &lt;code&gt;d.ts&lt;/code&gt; files that describe parts of Angular.</source>
          <target state="translated">许多库的npm包中都包含定义文件，TypeScript编译器和编辑器都可以在其中找到它们。Angular就是这样一种库。任何Angular应用程序的 &lt;code&gt;node_modules/@angular/core/&lt;/code&gt; 文件夹都包含多个 &lt;code&gt;d.ts&lt;/code&gt; 文件，这些文件描述了Angular的各个部分。</target>
        </trans-unit>
        <trans-unit id="9a5e32c0e28524dc6612566940bcead3465d22d7" translate="yes" xml:space="preserve">
          <source>Many libraries&amp;mdash;jQuery, Jasmine, and Lodash among them&amp;mdash;do &lt;em&gt;not&lt;/em&gt; include &lt;code&gt;d.ts&lt;/code&gt; files in their npm packages. Fortunately, either their authors or community contributors have created separate &lt;code&gt;d.ts&lt;/code&gt; files for these libraries and published them in well-known locations.</source>
          <target state="translated">许多库（包括jQuery，Jasmine和Lodash）在其npm软件包中&lt;em&gt;均不&lt;/em&gt;包含 &lt;code&gt;d.ts&lt;/code&gt; 文件。幸运的是，他们的作者或社区贡献者已为这些库创建了单独的 &lt;code&gt;d.ts&lt;/code&gt; 文件，并将它们发布在了知名的位置。</target>
        </trans-unit>
        <trans-unit id="0fe16d5a33623825dfcf063927a243cf38d8f465" translate="yes" xml:space="preserve">
          <source>Many locales don't support some of the pluralization categories. For example, the default locale (&lt;code&gt;en-US&lt;/code&gt;) and other locales (such as &lt;code&gt;es&lt;/code&gt;) have very simple &lt;code&gt;plural()&lt;/code&gt; functions that don't support the &lt;code&gt;few&lt;/code&gt; category. The following shows the &lt;a href=&quot;https://github.com/angular/angular/blob/ecffc3557fe1bff9718c01277498e877ca44588d/packages/core/src/i18n/locale_en.ts#L15-L18&quot;&gt;en-US&lt;/a&gt;&lt;code&gt;plural()&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046ec844bebb9efb2d96c41d15cd45da244e448e" translate="yes" xml:space="preserve">
          <source>Many servers require extra headers for save operations. For example, a server might require an authorization token, or &quot;Content-Type&quot; header to explicitly declare the MIME type of the request body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9a14500d4b27838588c153e0ce6118bde4d3dc" translate="yes" xml:space="preserve">
          <source>Many servers require extra headers for save operations. For example, they may require a &quot;Content-Type&quot; header to explicitly declare the MIME type of the request body; or the server may require an authorization token.</source>
          <target state="translated">许多服务器需要为保存操作提供额外的头。例如,他们可能需要一个 &quot;Content-Type &quot;头来明确声明请求体的MIME类型;或者服务器可能需要一个授权令牌。</target>
        </trans-unit>
        <trans-unit id="def2eba59562958fa4a005f8070d692ef8502312" translate="yes" xml:space="preserve">
          <source>Mapping</source>
          <target state="translated">Mapping</target>
        </trans-unit>
        <trans-unit id="5bf26159333bb0d591492f96ca2581ad9f4c90e3" translate="yes" xml:space="preserve">
          <source>Mapping values to different types</source>
          <target state="translated">将数值映射到不同类型</target>
        </trans-unit>
        <trans-unit id="b0227d5b874883ace3269140fb46b470e3787118" translate="yes" xml:space="preserve">
          <source>Maps a value to a string that pluralizes the value according to locale rules.</source>
          <target state="translated">将一个值映射到一个字符串,该字符串根据locale规则将该值复数化。</target>
        </trans-unit>
        <trans-unit id="b7ef7ab0b381d0f8a5fb0d490f85aca22d85119c" translate="yes" xml:space="preserve">
          <source>Maps class properties to host element bindings for properties, attributes, and events, using a set of key-value pairs.</source>
          <target state="translated">使用一组键值对,将类属性映射到属性、属性和事件的主机元素绑定。</target>
        </trans-unit>
        <trans-unit id="57cafd2d2e26c1f59483ef5f063c9e987cbdfa9c" translate="yes" xml:space="preserve">
          <source>Maps gesture event names to a set of configuration options that specify overrides to the default values for specific properties.</source>
          <target state="translated">将手势事件名称映射到一组配置选项,这些配置选项指定了对特定属性的默认值的覆盖。</target>
        </trans-unit>
        <trans-unit id="1c7e24fff6616d8c4782b59d907d55d2247857e6" translate="yes" xml:space="preserve">
          <source>Marble error testing</source>
          <target state="translated">大理石误差测试</target>
        </trans-unit>
        <trans-unit id="e562d7610fc93c95e63bd0db325143eb510fa729" translate="yes" xml:space="preserve">
          <source>Mark alternate text for translation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d3d001db5590e8c15314370938a60c7237302b" translate="yes" xml:space="preserve">
          <source>Mark alternates and nested expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da881c8d91de1bc52f72125536a11d49cd919667" translate="yes" xml:space="preserve">
          <source>Mark element attributes for translations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77977937317522a208e66701274fc635ce05f7a4" translate="yes" xml:space="preserve">
          <source>Mark plural forms of expressions for translation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31605ea7c401c912ded6f71f0d30c42b16077283" translate="yes" xml:space="preserve">
          <source>Mark plurals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443165aaf4de712fa8c701e381d24edeafa0602f" translate="yes" xml:space="preserve">
          <source>Mark plurals and alternates for translation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80fdfe3e44fb2d131f4020c8562cfb36d7d1d87" translate="yes" xml:space="preserve">
          <source>Mark static text messages in your component templates for translation.</source>
          <target state="translated">在您的组件模板中标记静态文本消息以进行翻译。</target>
        </trans-unit>
        <trans-unit id="453c8cbe5bf736d4dfb44391431d69031ce3cbfd" translate="yes" xml:space="preserve">
          <source>Mark text for translations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a393f1ea26ec9ee519bcdc713dbd9fd705c0ef0" translate="yes" xml:space="preserve">
          <source>Mark text in component templates for translation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633286acdeeb25d4557c214aacb8517fd371099a" translate="yes" xml:space="preserve">
          <source>Mark text with the i18n attribute</source>
          <target state="translated">用i18n属性标记文本</target>
        </trans-unit>
        <trans-unit id="c6c84768f276a98932c12aa0ab514727ec8eecd6" translate="yes" xml:space="preserve">
          <source>Mark the static text messages in your component templates for translation using the &lt;code&gt;i18n&lt;/code&gt; attribute. Place it on every element tag with fixed text to be translated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f9500a0b279f38bcdf05b09a7ba44c7259acbd" translate="yes" xml:space="preserve">
          <source>Markdown and HTML</source>
          <target state="translated">Markdown和HTML</target>
        </trans-unit>
        <trans-unit id="a926e63e15068ff8778fa46fbc6837498e696ece" translate="yes" xml:space="preserve">
          <source>Markdown is easier to read and to edit than HTML. Many editors (including Visual Studio Code) can render markdown as you type it.</source>
          <target state="translated">Markdown比HTML更容易阅读和编辑。许多编辑器(包括Visual Studio Code)可以在您键入Markdown时渲染它。</target>
        </trans-unit>
        <trans-unit id="9f0d79ae62e9049fa1e61d4f8b8e8288b7d10547" translate="yes" xml:space="preserve">
          <source>Marker interface for a value that's safe to use as HTML.</source>
          <target state="translated">为一个可以安全使用为HTML的值的标记接口。</target>
        </trans-unit>
        <trans-unit id="44077f17738066476a04b77cb7234d0debe282d2" translate="yes" xml:space="preserve">
          <source>Marker interface for a value that's safe to use as JavaScript.</source>
          <target state="translated">标记接口,用于作为JavaScript安全使用的值。</target>
        </trans-unit>
        <trans-unit id="be2b798ee79aee95e8ba7f58d4db583d7d3cc18f" translate="yes" xml:space="preserve">
          <source>Marker interface for a value that's safe to use as a URL linking to a document.</source>
          <target state="translated">标记接口,用于安全地使用一个值作为链接到文档的URL。</target>
        </trans-unit>
        <trans-unit id="32be8ca4a80edc7adb498046a934af4df142acf7" translate="yes" xml:space="preserve">
          <source>Marker interface for a value that's safe to use as a URL to load executable code from.</source>
          <target state="translated">标记接口,用于安全地使用一个值作为加载可执行代码的URL。</target>
        </trans-unit>
        <trans-unit id="190d929880596b3b2b1cb9976fcf09cbb71177c2" translate="yes" xml:space="preserve">
          <source>Marker interface for a value that's safe to use as style (CSS).</source>
          <target state="translated">标记接口,用于安全的值作为样式(CSS)使用。</target>
        </trans-unit>
        <trans-unit id="00fae9ebcd6da81c3826a15ac752fd939ce5eb00" translate="yes" xml:space="preserve">
          <source>Marker interface for a value that's safe to use in a particular context.</source>
          <target state="translated">在特定上下文中可以安全使用的值的标记接口。</target>
        </trans-unit>
        <trans-unit id="6a05dc2a519c44472e752aa78b302e55c00ce787" translate="yes" xml:space="preserve">
          <source>Marking a class as a pipe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7047a10aa10b4d12f4e613cf4dfce9686986f075" translate="yes" xml:space="preserve">
          <source>Marking a class with &lt;code&gt;@&lt;a href=&quot;injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; ensures that the compiler will generate the necessary metadata to create the class's dependencies when the class is injected.</source>
          <target state="translated">使用 &lt;code&gt;@&lt;a href=&quot;injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; 标记类可确保编译器在注入类时将生成必要的元数据，以创建类的依赖项。</target>
        </trans-unit>
        <trans-unit id="a51bf3c267b34206e81fa68deca3d45075eeee05" translate="yes" xml:space="preserve">
          <source>Marks &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; as dynamic, so Angular can be notified when options change.</source>
          <target state="translated">将 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 标记为动态，因此可以在选项更改时通知Angular。</target>
        </trans-unit>
        <trans-unit id="2fe6e8ea72c51d996b881fe03b42ca3c8b2e44fc" translate="yes" xml:space="preserve">
          <source>Marks a component for check (in case of OnPush components) and synchronously performs change detection on the application this component belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc949f2a0597e37dc5b503716ae5f0e2f4b5974" translate="yes" xml:space="preserve">
          <source>Marks a percent format. The % symbol may change position, but must be retained.</source>
          <target state="translated">标识百分比格式。%符号可以改变位置,但必须保留。</target>
        </trans-unit>
        <trans-unit id="5ffc0d3065eb521574c575da104ec2bcd56a74fb" translate="yes" xml:space="preserve">
          <source>Marks a scientific format. The E symbol may change position, but must be retained.</source>
          <target state="translated">标注一种科学的格式。E符号可以改变位置,但必须保留。</target>
        </trans-unit>
        <trans-unit id="1d02022cd7fdf010c85cd457ac4036958d4745ee" translate="yes" xml:space="preserve">
          <source>Marks a style as important.</source>
          <target state="translated">将一种风格标记为重要。</target>
        </trans-unit>
        <trans-unit id="b2b2ab983e8070eed76188fa87beffd689c5582e" translate="yes" xml:space="preserve">
          <source>Marks a style as using dash case naming (this-is-dash-case).</source>
          <target state="translated">标记一个样式为使用破折号命名(this-is-dash-case)。</target>
        </trans-unit>
        <trans-unit id="90c3dbaa648c20c8ae2b5d0ba25e4a55271d3fe3" translate="yes" xml:space="preserve">
          <source>Marks the control and all its descendant controls as &lt;code&gt;touched&lt;/code&gt;.</source>
          <target state="translated">将控件及其所有后代控件标记为已 &lt;code&gt;touched&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f1de67b463040e84913b0550b5655cbe8552c2c" translate="yes" xml:space="preserve">
          <source>Marks the control as &lt;code&gt;dirty&lt;/code&gt;. A control becomes dirty when the control's value is changed through the UI; compare &lt;code&gt;markAsTouched&lt;/code&gt;.</source>
          <target state="translated">将控件标记为 &lt;code&gt;dirty&lt;/code&gt; 。通过UI更改控件的值时，控件会变脏。比较 &lt;code&gt;markAsTouched&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d03d77a3f8d7fddaddf5702243ae9f9ddd1ef1a5" translate="yes" xml:space="preserve">
          <source>Marks the control as &lt;code&gt;pending&lt;/code&gt;.</source>
          <target state="translated">将控件标记为 &lt;code&gt;pending&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b79edb0843b4f3787d92ef573b73fc0dd74f0a69" translate="yes" xml:space="preserve">
          <source>Marks the control as &lt;code&gt;pristine&lt;/code&gt;.</source>
          <target state="translated">将控件标记为 &lt;code&gt;pristine&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="552c55c7009312a2c5dbdf86a2db78335f5bd874" translate="yes" xml:space="preserve">
          <source>Marks the control as &lt;code&gt;touched&lt;/code&gt;. A control is touched by focus and blur events that do not change the value.</source>
          <target state="translated">将控件标记为已 &lt;code&gt;touched&lt;/code&gt; 。焦点和模糊事件不会改变该值，从而触摸控件。</target>
        </trans-unit>
        <trans-unit id="5524b15df7708a4abd2f3007a9d0154920e67189" translate="yes" xml:space="preserve">
          <source>Marks the control as &lt;code&gt;untouched&lt;/code&gt;.</source>
          <target state="translated">将控件标记为 &lt;code&gt;untouched&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fcdec153eea4e2ac1e84b45e481c3d80f5b6baf" translate="yes" xml:space="preserve">
          <source>Marks the location to load the component of the active route.</source>
          <target state="translated">标注活动途径的组件的加载位置。</target>
        </trans-unit>
        <trans-unit id="a41c002f76c3ddbf33397cf9ff9ed88bed7302f6" translate="yes" xml:space="preserve">
          <source>Master/Detail</source>
          <target state="translated">Master/Detail</target>
        </trans-unit>
        <trans-unit id="304698ef1300bc95aac9c2ab2903870bbadeafe7" translate="yes" xml:space="preserve">
          <source>Master/Detail Components</source>
          <target state="translated">主/细节组件</target>
        </trans-unit>
        <trans-unit id="33b81af9fbc2d9c1087f3875a223180927975556" translate="yes" xml:space="preserve">
          <source>Match all nodes.</source>
          <target state="translated">匹配所有节点。</target>
        </trans-unit>
        <trans-unit id="862bd048c883526c17675c397beda22c96b40900" translate="yes" xml:space="preserve">
          <source>Match elements by the given CSS selector.</source>
          <target state="translated">通过给定的CSS选择器匹配元素。</target>
        </trans-unit>
        <trans-unit id="de7cd1fb52ce1262b94846eb2616193d9955bd7d" translate="yes" xml:space="preserve">
          <source>Match nodes that have the given directive present.</source>
          <target state="translated">匹配有给定指令存在的节点。</target>
        </trans-unit>
        <trans-unit id="13373cb22c6ad40bbf34a683cdf6768383178147" translate="yes" xml:space="preserve">
          <source>Matching Strategy</source>
          <target state="translated">匹配策略</target>
        </trans-unit>
        <trans-unit id="2165a9c034ed5b6a48ce499a7a677bec7360624c" translate="yes" xml:space="preserve">
          <source>Matching navigation request URLs</source>
          <target state="translated">匹配导航请求URL</target>
        </trans-unit>
        <trans-unit id="dbb284068a8e79111daf2b152754d63af5c2bdfc" translate="yes" xml:space="preserve">
          <source>Material Design - Accessibility</source>
          <target state="translated">材料设计--可访问性</target>
        </trans-unit>
        <trans-unit id="b5365c874d26dca075a365f0f759a05ea283867f" translate="yes" xml:space="preserve">
          <source>Matrix URL notation is an idea first introduced in a &lt;a href=&quot;http://www.w3.org/DesignIssues/MatrixURIs.html&quot;&gt;1996 proposal&lt;/a&gt; by the founder of the web, Tim Berners-Lee.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df12f07bc0e225d9c61b2b656a300cdd45f507df" translate="yes" xml:space="preserve">
          <source>MaxLengthValidator</source>
          <target state="translated">MaxLengthValidator</target>
        </trans-unit>
        <trans-unit id="473e3e4d9bb69399b43203fb2abd81e292e9e263" translate="yes" xml:space="preserve">
          <source>May 2020</source>
          <target state="translated">2020年5月</target>
        </trans-unit>
        <trans-unit id="45162abb05f5b85bc23b63651e7596aec882297e" translate="yes" xml:space="preserve">
          <source>May 28, 2019</source>
          <target state="translated">2019年5月28日</target>
        </trans-unit>
        <trans-unit id="075977785e25f435a3132423b18227a4f5235ed3" translate="yes" xml:space="preserve">
          <source>May 3, 2018</source>
          <target state="translated">2018年5月3日</target>
        </trans-unit>
        <trans-unit id="36961ecd57a84b27841f0a2a11c493049b963beb" translate="yes" xml:space="preserve">
          <source>May be removed in</source>
          <target state="translated">可能被删除</target>
        </trans-unit>
        <trans-unit id="56ffd7dc3d16ef45b28d718b5c2cfa58db3cb7c9" translate="yes" xml:space="preserve">
          <source>Maybe the user must login (&lt;em&gt;authenticate&lt;/em&gt;) first.</source>
          <target state="translated">也许用户必须先登录（&lt;em&gt;验证&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="e5c559c0346182a324a6362c749c4b9869c4418c" translate="yes" xml:space="preserve">
          <source>Maybe the user must login (authenticate) first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d735c27534318526d192c543b4e9405990246b9" translate="yes" xml:space="preserve">
          <source>Maybe you should fetch some data before you display the target component.</source>
          <target state="translated">也许你应该在显示目标组件之前获取一些数据。</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="ecba223c35670a6e86840d57758c584dece4e5bd" translate="yes" xml:space="preserve">
          <source>Meanwhile, the &lt;code&gt;ng test&lt;/code&gt; command is watching for changes.</source>
          <target state="translated">同时， &lt;code&gt;ng test&lt;/code&gt; 命令正在监视更改。</target>
        </trans-unit>
        <trans-unit id="a97e11deff98f07fcbcf99a459c11a3c3e7b23bd" translate="yes" xml:space="preserve">
          <source>Measure performance</source>
          <target state="translated">衡量业绩</target>
        </trans-unit>
        <trans-unit id="6853c98a6f4358bbfed1b3b9c81d308649299b0f" translate="yes" xml:space="preserve">
          <source>Member</source>
          <target state="translated">Member</target>
        </trans-unit>
        <trans-unit id="562b14416156af926fbe5520e33d1259d2d35346" translate="yes" xml:space="preserve">
          <source>Member sequence</source>
          <target state="translated">成员序列</target>
        </trans-unit>
        <trans-unit id="1cb449c1126609b4b41e1d87f65f0d7cd19b49b9" translate="yes" xml:space="preserve">
          <source>Members</source>
          <target state="translated">Members</target>
        </trans-unit>
        <trans-unit id="9b3d1dc4ad715fe4de1ae0b9194d4370157ddaf0" translate="yes" xml:space="preserve">
          <source>Mental Model</source>
          <target state="translated">心理模型</target>
        </trans-unit>
        <trans-unit id="10da0871d51e1e7527c73418f0b5e05f8c658d03" translate="yes" xml:space="preserve">
          <source>Merge the completed translation file into the app</source>
          <target state="translated">将完成的翻译文件合并到应用程序中</target>
        </trans-unit>
        <trans-unit id="2a609a2760470dc00f6136d3cd668b933ca52d9c" translate="yes" xml:space="preserve">
          <source>Merge the completed translation file into the app. To do this, use the Angular CLI &lt;code&gt;build&lt;/code&gt; command to compile the app, choosing a &lt;a href=&quot;i18n#merge-aot&quot;&gt;locale-specific configuration&lt;/a&gt;, or specifying the following command options.</source>
          <target state="translated">将完成的翻译文件合并到应用程序中。为此，请使用Angular CLI &lt;code&gt;build&lt;/code&gt; 命令来编译应用程序，选择&lt;a href=&quot;i18n#merge-aot&quot;&gt;特定&lt;/a&gt;于语言环境的配置，或指定以下命令选项。</target>
        </trans-unit>
        <trans-unit id="129ddbedd83424c874d63227a8273ce0ffab60af" translate="yes" xml:space="preserve">
          <source>Merge translations into the app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07aad0adaeb1b9587492cfc8d874f6329f6f3303" translate="yes" xml:space="preserve">
          <source>Merge with the AOT compiler</source>
          <target state="translated">与AOT编译器合并</target>
        </trans-unit>
        <trans-unit id="c7298c2c9e49a103b04a2845d24a7349008b9ace" translate="yes" xml:space="preserve">
          <source>Merge with the JIT compiler</source>
          <target state="translated">与JIT编译器合并</target>
        </trans-unit>
        <trans-unit id="14b78ed779ba1eb639111b5d329607a36c3d898a" translate="yes" xml:space="preserve">
          <source>Merges the URL fragment with the rest of the URL.</source>
          <target state="translated">将URL片段与URL的其他部分合并。</target>
        </trans-unit>
        <trans-unit id="78fe5ba55408c7f7dd7e147b86f12ef53c069049" translate="yes" xml:space="preserve">
          <source>Message Bus is a low level API used to communicate between the UI and the background. Communication is based on a channel abstraction. Messages published in a given channel to one MessageBusSink are received on the same channel by the corresponding MessageBusSource.</source>
          <target state="translated">消息总线是一个低级的API,用于UI和后台之间的通信。通信是基于通道抽象的。在给定的通道中发布到一个MessageBusSink的消息被对应的MessageBusSource在同一通道中接收。</target>
        </trans-unit>
        <trans-unit id="2dab758b8876c8b70aca537b47bed380873c05c0" translate="yes" xml:space="preserve">
          <source>MessageBus</source>
          <target state="translated">MessageBus</target>
        </trans-unit>
        <trans-unit id="377ba52cb68adfe51dfa40983b46202e3d247f62" translate="yes" xml:space="preserve">
          <source>MessageBusSink</source>
          <target state="translated">MessageBusSink</target>
        </trans-unit>
        <trans-unit id="7b95de765223d1ee58a9bfdab4c83e74e091ea77" translate="yes" xml:space="preserve">
          <source>MessageBusSource</source>
          <target state="translated">MessageBusSource</target>
        </trans-unit>
        <trans-unit id="8d546a6dea9ff90d517b51c25b35319931ae4e04" translate="yes" xml:space="preserve">
          <source>Meta</source>
          <target state="translated">Meta</target>
        </trans-unit>
        <trans-unit id="f2c1a4c9748a88a08eaf983137499ccf3d4c7989" translate="yes" xml:space="preserve">
          <source>MetaDefinition</source>
          <target state="translated">MetaDefinition</target>
        </trans-unit>
        <trans-unit id="6ccc5b519461c9c2782b08d2d5a7e8da0ba54fee" translate="yes" xml:space="preserve">
          <source>Metadata referenced a class that wasn't exported.</source>
          <target state="translated">元数据引用了一个没有导出的类。</target>
        </trans-unit>
        <trans-unit id="8cad26c08ab5ecd7a9c21bb39395f684cfb8ecb3" translate="yes" xml:space="preserve">
          <source>Metadata restrictions</source>
          <target state="translated">元数据限制</target>
        </trans-unit>
        <trans-unit id="ab3b4516f2c1a87d9dfae0c84ef113acfc85f0cf" translate="yes" xml:space="preserve">
          <source>Metadata rewriting</source>
          <target state="translated">元数据重写</target>
        </trans-unit>
        <trans-unit id="2547750cd9950647e35dcc7fa8dcb5fb52010b6b" translate="yes" xml:space="preserve">
          <source>MetadataOverride</source>
          <target state="translated">MetadataOverride</target>
        </trans-unit>
        <trans-unit id="480e00bb1250ab6146f449570c842c7c7cab2c7a" translate="yes" xml:space="preserve">
          <source>Method called when the &quot;reset&quot; event is triggered on the form.</source>
          <target state="translated">当表单上触发 &quot;重置 &quot;事件时调用的方法。</target>
        </trans-unit>
        <trans-unit id="132133a9bf0ca23e222be0882410cbfec7ff46ae" translate="yes" xml:space="preserve">
          <source>Method called when the &quot;submit&quot; event is triggered on the form. Triggers the &lt;code&gt;ngSubmit&lt;/code&gt; emitter to emit the &quot;submit&quot; event as its payload.</source>
          <target state="translated">在表单上触发&amp;ldquo;提交&amp;rdquo;事件时调用的方法。触发 &lt;code&gt;ngSubmit&lt;/code&gt; 发射器以发出&amp;ldquo; submit&amp;rdquo;事件作为其有效负载。</target>
        </trans-unit>
        <trans-unit id="77eedcf2b5cf5aca17dce41ae4f2edaf94a576d1" translate="yes" xml:space="preserve">
          <source>Method called with the &quot;submit&quot; event is triggered on the form. Triggers the &lt;code&gt;ngSubmit&lt;/code&gt; emitter to emit the &quot;submit&quot; event as its payload.</source>
          <target state="translated">在窗体上触发使用&amp;ldquo; submit&amp;rdquo;事件调用的方法。触发 &lt;code&gt;ngSubmit&lt;/code&gt; 发射器以发出&amp;ldquo; submit&amp;rdquo;事件作为其有效负载。</target>
        </trans-unit>
        <trans-unit id="92616c3b3e965ff16f8bd06a8dfb39101a4fc463" translate="yes" xml:space="preserve">
          <source>Method that performs async validation against the provided control.</source>
          <target state="translated">对所提供的控件执行异步验证的方法。</target>
        </trans-unit>
        <trans-unit id="c19dc7e253af2ee1407e8d9064b68d932b344563" translate="yes" xml:space="preserve">
          <source>Method that performs synchronous validation against the provided control.</source>
          <target state="translated">对所提供的控件进行同步验证的方法。</target>
        </trans-unit>
        <trans-unit id="90b5e6212c0847c1da847315da7a0359b0afb290" translate="yes" xml:space="preserve">
          <source>Method that sets up the control directive in this group, re-calculates its value and validity, and adds the instance to the internal list of directives.</source>
          <target state="translated">方法,在该组中设置控制指令,重新计算其值和有效性,并将实例添加到指令的内部列表中。</target>
        </trans-unit>
        <trans-unit id="098addd3604051290701c4c812f2f17a5ed71cb0" translate="yes" xml:space="preserve">
          <source>Method that validates whether an email address is valid. Returns the validation result if enabled, otherwise null.</source>
          <target state="translated">验证电子邮件地址是否有效的方法。如果启用,返回验证结果,否则为空。</target>
        </trans-unit>
        <trans-unit id="c85869ac84887bcd71ff90a6fb9ca514cb7dcdaa" translate="yes" xml:space="preserve">
          <source>Method that validates whether or not the checkbox has been checked. Returns the validation result if enabled, otherwise null.</source>
          <target state="translated">验证复选框是否已被选中的方法,如果启用,返回验证结果,否则为空。如果启用,返回验证结果,否则为空。</target>
        </trans-unit>
        <trans-unit id="48f36a75a0315ffb51df39974f381e0a30e8148a" translate="yes" xml:space="preserve">
          <source>Method that validates whether the control is empty. Returns the validation result if enabled, otherwise null.</source>
          <target state="translated">验证控件是否为空的方法。如果启用,返回验证结果,否则为空。</target>
        </trans-unit>
        <trans-unit id="e96a9ab385eda11dceec9653619ee92018e6cfe4" translate="yes" xml:space="preserve">
          <source>Method that validates whether the value exceeds the maximum length requirement.</source>
          <target state="translated">验证该值是否超过最大长度要求的方法。</target>
        </trans-unit>
        <trans-unit id="864cb6a938903c3d56892f757005022941bcbaeb" translate="yes" xml:space="preserve">
          <source>Method that validates whether the value matches the the pattern requirement.</source>
          <target state="translated">验证该值是否符合模式要求的方法。</target>
        </trans-unit>
        <trans-unit id="ea2d5bd9900eebf7f3fa6babe94a92b45aa3c20f" translate="yes" xml:space="preserve">
          <source>Method that validates whether the value meets a minimum length requirement. Returns the validation result if enabled, otherwise null.</source>
          <target state="translated">验证值是否满足最小长度要求的方法。如果启用,返回验证结果,否则为空。</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="524524cbb5b4b2229234a47887f5e9c638264059" translate="yes" xml:space="preserve">
          <source>Microsyntax</source>
          <target state="translated">Microsyntax</target>
        </trans-unit>
        <trans-unit id="84f2b1f0407883abc0db1634152996a1cb6aa51a" translate="yes" xml:space="preserve">
          <source>Microsyntax examples</source>
          <target state="translated">微词法例子</target>
        </trans-unit>
        <trans-unit id="2f237d0f44a4dbb3f810838d2ac6ea080d483864" translate="yes" xml:space="preserve">
          <source>Microsyntax must meet the following requirements:</source>
          <target state="translated">Microsyntax必须满足以下要求:</target>
        </trans-unit>
        <trans-unit id="ce722bab1d29b667c5659a8d93babb0ee7cd6bf0" translate="yes" xml:space="preserve">
          <source>Migrating URLs with Redirects</source>
          <target state="translated">使用重定向迁移URL</target>
        </trans-unit>
        <trans-unit id="aeb45a16f12ec2c52f38015aa44aadc63e9bc613" translate="yes" xml:space="preserve">
          <source>Migrating URLs with redirects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1f7baec0a8d71c3b7eb7e093d50dc32a658e5e" translate="yes" xml:space="preserve">
          <source>Migrating from deprecated ngForm selector</source>
          <target state="translated">从废弃的ngForm选择器中迁移过来</target>
        </trans-unit>
        <trans-unit id="2cf1ac4c5fad3f46f8cde9c888e9614c3f4b4d74" translate="yes" xml:space="preserve">
          <source>Migrating to TypeScript</source>
          <target state="translated">迁移到TypeScript</target>
        </trans-unit>
        <trans-unit id="ddfc337decc856bf371a7d236708d6e95816f0b7" translate="yes" xml:space="preserve">
          <source>Milestone 1 has covered how to do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bcc4bc41e55700cf470829a5d9a4e6a4c6346c" translate="yes" xml:space="preserve">
          <source>Milestone 1 wrap up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d1190e29283bf0f4ad613b2113c7efd5959343" translate="yes" xml:space="preserve">
          <source>Milestone 1: Getting started</source>
          <target state="translated">里程碑1:开始</target>
        </trans-unit>
        <trans-unit id="1fe4150b974da173f97716c525126ab3b909f127" translate="yes" xml:space="preserve">
          <source>Milestone 2: &lt;code&gt;Routing module&lt;/code&gt;</source>
          <target state="translated">里程碑2： &lt;code&gt;Routing module&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c337c88510afb27e2a36ed64161e29051dcc17e" translate="yes" xml:space="preserve">
          <source>Milestone 3 wrap up</source>
          <target state="translated">里程碑3总结</target>
        </trans-unit>
        <trans-unit id="9e7f5537b3a1147a578fd90233e37be8a9162e9e" translate="yes" xml:space="preserve">
          <source>Milestone 3: Heroes feature</source>
          <target state="translated">里程碑3。英雄特征</target>
        </trans-unit>
        <trans-unit id="a8ed87e79aacfd84ef3a400ffedede75156338d8" translate="yes" xml:space="preserve">
          <source>Milestone 4: Crisis center feature</source>
          <target state="translated">里程碑4。危机中心功能</target>
        </trans-unit>
        <trans-unit id="a5c25699c061c8160f7fc2ce1003ec7d13aa30f9" translate="yes" xml:space="preserve">
          <source>Milestone 5: Route guards</source>
          <target state="translated">里程碑5:路线警卫</target>
        </trans-unit>
        <trans-unit id="0f50f36dae7e1d4742bb457f84c0fef8eba58343" translate="yes" xml:space="preserve">
          <source>Milestone 6: Asynchronous routing</source>
          <target state="translated">里程碑6。异步路由</target>
        </trans-unit>
        <trans-unit id="f751d8d1afda5d9262251ac57eecbfcb1f899a51" translate="yes" xml:space="preserve">
          <source>MinLengthValidator</source>
          <target state="translated">MinLengthValidator</target>
        </trans-unit>
        <trans-unit id="fb46992893d351666c27b0a415b676a77c7ee574" translate="yes" xml:space="preserve">
          <source>Minification: removes excess whitespace, comments, and optional tokens.</source>
          <target state="translated">精简:删除多余的空格、注释和可选的标记。</target>
        </trans-unit>
        <trans-unit id="c1335d3e7a03c5a9cce93a720fba00fd5265fb99" translate="yes" xml:space="preserve">
          <source>Minute</source>
          <target state="translated">Minute</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="16fa591982d3b4278712ac09b90a4922db040308" translate="yes" xml:space="preserve">
          <source>Misko Hevery, Angular team lead, &lt;a href=&quot;http://misko.hevery.com/code-reviewers-guide/flaw-constructor-does-real-work/&quot;&gt;explains why&lt;/a&gt; you should avoid complex constructor logic.</source>
          <target state="translated">Angular团队负责人Misko Hevery &lt;a href=&quot;http://misko.hevery.com/code-reviewers-guide/flaw-constructor-does-real-work/&quot;&gt;解释了为什么&lt;/a&gt;应避免使用复杂的构造函数逻辑。</target>
        </trans-unit>
        <trans-unit id="703b52e4c78301393192ea76eb4bc94c5b907bc0" translate="yes" xml:space="preserve">
          <source>MissingTranslationStrategy</source>
          <target state="translated">MissingTranslationStrategy</target>
        </trans-unit>
        <trans-unit id="de77f58be307fbadb3d77dd95b849dc214ccfab0" translate="yes" xml:space="preserve">
          <source>Mock implementation of URL state.</source>
          <target state="translated">URL状态的模拟实现。</target>
        </trans-unit>
        <trans-unit id="07d5c4c262b2b0b021359260309ee66c01a76480" translate="yes" xml:space="preserve">
          <source>Mock platform location config</source>
          <target state="translated">模拟平台位置配置</target>
        </trans-unit>
        <trans-unit id="eb83e91107904331a02f5abe4036d95facce7db3" translate="yes" xml:space="preserve">
          <source>MockAnimationDriver</source>
          <target state="translated">MockAnimationDriver</target>
        </trans-unit>
        <trans-unit id="335ab995be87b2b6bd940e1d03e2b34a7e3eeaa4" translate="yes" xml:space="preserve">
          <source>MockAnimationPlayer</source>
          <target state="translated">MockAnimationPlayer</target>
        </trans-unit>
        <trans-unit id="f7a2983b9bb4694e0f876db78913b39727db220a" translate="yes" xml:space="preserve">
          <source>MockLocationStrategy</source>
          <target state="translated">MockLocationStrategy</target>
        </trans-unit>
        <trans-unit id="0b9824686806e7bfae181b4737b528bde308f05f" translate="yes" xml:space="preserve">
          <source>MockPlatformLocation</source>
          <target state="translated">MockPlatformLocation</target>
        </trans-unit>
        <trans-unit id="4cbc2d522fcb43d224fa5c6b76ce39ee982868b4" translate="yes" xml:space="preserve">
          <source>MockPlatformLocationConfig</source>
          <target state="translated">MockPlatformLocationConfig</target>
        </trans-unit>
        <trans-unit id="ebd0f455b81fff65b45f1c47d58ddc0faf0798f3" translate="yes" xml:space="preserve">
          <source>Mocking the &lt;code&gt;HeroService&lt;/code&gt; with a spy is a &lt;a href=&quot;testing#component-with-async-service&quot;&gt;familiar story&lt;/a&gt;. But the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; has a complicated API and is entwined with other services and application preconditions. Might it be difficult to mock?</source>
          <target state="translated">嘲讽 &lt;code&gt;HeroService&lt;/code&gt; 与间谍是一个&lt;a href=&quot;testing#component-with-async-service&quot;&gt;熟悉的故事&lt;/a&gt;。但是 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 具有复杂的API，并且与其他服务和应用程序先决条件交织在一起。可能很难嘲笑吗？</target>
        </trans-unit>
        <trans-unit id="b6b43d9ab5307d7768026ad28d924057ec419a59" translate="yes" xml:space="preserve">
          <source>Mocking the &lt;code&gt;HeroService&lt;/code&gt; with a spy is a &lt;a href=&quot;testing-components-scenarios#component-with-async-service&quot;&gt;familiar story&lt;/a&gt;. But the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; has a complicated API and is entwined with other services and application preconditions. Might it be difficult to mock?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bbdbe479db228f7aba0b175aac34547f4314d3" translate="yes" xml:space="preserve">
          <source>Modern HTML5 browsers support &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History_API#Adding_and_modifying_history_entries&quot;&gt;history.pushState&lt;/a&gt;, a technique that changes a browser's location and history without triggering a server page request. The router can compose a &quot;natural&quot; URL that is indistinguishable from one that would otherwise require a page load.</source>
          <target state="translated">现代HTML5浏览器支持&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History_API#Adding_and_modifying_history_entries&quot;&gt;history.pushState&lt;/a&gt;，该技术可更改浏览器的位置和历史记录而无需触发服务器页面请求。路由器可以组成一个&amp;ldquo;自然&amp;rdquo; URL，该URL与否则需要页面加载的URL不能区分。</target>
        </trans-unit>
        <trans-unit id="58be99d59597df4a8a4a0fb43095939149b83985" translate="yes" xml:space="preserve">
          <source>Modern HTML5 browsers were the first to support &lt;code&gt;pushState&lt;/code&gt; which is why many people refer to these URLs as &quot;HTML5 style&quot; URLs.</source>
          <target state="translated">现代HTML5浏览器最先支持 &lt;code&gt;pushState&lt;/code&gt; ，这就是为什么许多人将这些URL称为&amp;ldquo; HTML5样式&amp;rdquo; URL的原因。</target>
        </trans-unit>
        <trans-unit id="62a79cf9eb3526462da701324a57835b820a4001" translate="yes" xml:space="preserve">
          <source>Modifies an existing &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag element in the current HTML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a9b9104684e0b295509cc06f13b718760c5caf" translate="yes" xml:space="preserve">
          <source>Modifies how Angular-specific annotations are emitted to improve tree-shaking. Non-Angular annotations are not affected. One of &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;static&lt;/a&gt; fields&lt;/code&gt; (the default) or &lt;code&gt;decorators&lt;/code&gt;.</source>
          <target state="translated">修改特定于Angular的注释的发出方式，以改善树的抖动。非角度注释不受影响。一个 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;static&lt;/a&gt; fields&lt;/code&gt; （默认值）或 &lt;code&gt;decorators&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc7ff7ee06a62fc36531c86475e22a93d4a1e0a6" translate="yes" xml:space="preserve">
          <source>Modify the &lt;code&gt;AppComponent&lt;/code&gt; template to display the generated &lt;code&gt;MessagesComponent&lt;/code&gt;.</source>
          <target state="translated">修改 &lt;code&gt;AppComponent&lt;/code&gt; 模板以显示生成的 &lt;code&gt;MessagesComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ef4a7efa3f16c8f795941775e6a66532831c3a3" translate="yes" xml:space="preserve">
          <source>Modify the &lt;code&gt;getHeroes()&lt;/code&gt; method to send a message when the heroes are fetched.</source>
          <target state="translated">修改 &lt;code&gt;getHeroes()&lt;/code&gt; 方法以在获取英雄时发送消息。</target>
        </trans-unit>
        <trans-unit id="10c13dcc0265e5906cfc4a542b66b25f6d62212e" translate="yes" xml:space="preserve">
          <source>Modify the &lt;code&gt;hero.name&lt;/code&gt; binding like this.</source>
          <target state="translated">像这样修改 &lt;code&gt;hero.name&lt;/code&gt; 绑定。</target>
        </trans-unit>
        <trans-unit id="5eeba3514c27591094b26ccc5837d1b62e194be9" translate="yes" xml:space="preserve">
          <source>Modify the birthday template to give the date pipe a format parameter. After formatting the hero's April 15th birthday, it renders as &lt;strong&gt;&lt;samp&gt;04/15/88&lt;/samp&gt;&lt;/strong&gt;:</source>
          <target state="translated">修改生日模板，为日期管道提供格式参数。格式化英雄的4月15日生日后，它呈现为&lt;strong&gt;&lt;samp&gt;88年4月15日&lt;/samp&gt;&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="e3a6a2ab557de6edc89b72b34323f3607bac9938" translate="yes" xml:space="preserve">
          <source>Modify the constructor with a parameter that declares a &lt;strong&gt;public&lt;/strong&gt;&lt;code&gt;messageService&lt;/code&gt; property. Angular will inject the singleton &lt;code&gt;MessageService&lt;/code&gt; into that property when it creates the &lt;code&gt;MessagesComponent&lt;/code&gt;.</source>
          <target state="translated">使用声明&lt;strong&gt;公共&lt;/strong&gt; &lt;code&gt;messageService&lt;/code&gt; 属性的参数修改构造函数。Angular 在创建 &lt;code&gt;MessagesComponent&lt;/code&gt; 时会将Singleton &lt;code&gt;MessageService&lt;/code&gt; 注入该属性。</target>
        </trans-unit>
        <trans-unit id="8db4b324dab2ee65b6c8b4f66ee5197f73664826" translate="yes" xml:space="preserve">
          <source>Modify the constructor with a parameter that declares a private &lt;code&gt;messageService&lt;/code&gt; property. Angular will inject the singleton &lt;code&gt;MessageService&lt;/code&gt; into that property when it creates the &lt;code&gt;HeroService&lt;/code&gt;.</source>
          <target state="translated">使用声明私有 &lt;code&gt;messageService&lt;/code&gt; 属性的参数修改构造函数。Angular 在创建 &lt;code&gt;HeroService&lt;/code&gt; 时会将Singleton &lt;code&gt;MessageService&lt;/code&gt; 注入该属性。</target>
        </trans-unit>
        <trans-unit id="46335c03984eaea4bfc49a97cc9e4e862ba5c9c5" translate="yes" xml:space="preserve">
          <source>Modify the product list template to display a list of product names.</source>
          <target state="translated">修改产品列表模板,显示产品名称列表。</target>
        </trans-unit>
        <trans-unit id="9ccdcb96da8448b66bbb23944ef85480f6a81c18" translate="yes" xml:space="preserve">
          <source>Modify the product name anchor to include a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">修改产品名称锚点以包括 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29d676092fd3b82fea0f5f61d949f483413f1596" translate="yes" xml:space="preserve">
          <source>Modify the provider search with &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;修改提供者搜索</target>
        </trans-unit>
        <trans-unit id="19ec6ac1f2fe1db0f7776f97f8f25f623c03a54f" translate="yes" xml:space="preserve">
          <source>Modify the shipping component so it uses the cart service to retrieve shipping data via HTTP from the &lt;code&gt;shipping.json&lt;/code&gt; file.</source>
          <target state="translated">修改运输组件，以便它使用购物车服务通过HTTP从 &lt;code&gt;shipping.json&lt;/code&gt; 文件中检索运输数据。</target>
        </trans-unit>
        <trans-unit id="1a9a542e558249f145f039b1c6d62f43cfadbc0e" translate="yes" xml:space="preserve">
          <source>Modify the shipping component so that it uses the cart service to retrieve shipping data via HTTP from the &lt;code&gt;shipping.json&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d054e88b5fc310215348f9f10982b2326fca85" translate="yes" xml:space="preserve">
          <source>Modifying a request body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71e3ca8556ba87e0586d38955b00229cd03b500" translate="yes" xml:space="preserve">
          <source>Modifying service visibility</source>
          <target state="translated">修改服务可见性</target>
        </trans-unit>
        <trans-unit id="ea0138705c92deb3917ddd4c3cff8c92e2fb6233" translate="yes" xml:space="preserve">
          <source>Module classes.</source>
          <target state="translated">模块类。</target>
        </trans-unit>
        <trans-unit id="90b4684e6dc0668dfecfd0ab1e31ad16716bbeec" translate="yes" xml:space="preserve">
          <source>Module import order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda57df2a3d077bfd5559abcb122e7349f720de0" translate="yes" xml:space="preserve">
          <source>Module import order matters</source>
          <target state="translated">模块导入顺序很重要</target>
        </trans-unit>
        <trans-unit id="5dc38d6fa3dcc4cf39b8db1c475e686f12efe193" translate="yes" xml:space="preserve">
          <source>ModuleA can import ModuleB and also export it, making exports from ModuleB available to an NgModule that imports ModuleA.</source>
          <target state="translated">ModuleA可以导入ModuleB,也可以导出ModuleB,使得导入ModuleA的NgModule可以从ModuleB导出。</target>
        </trans-unit>
        <trans-unit id="2945d77f42e28cfe14ba3f93a865d1c129b38216" translate="yes" xml:space="preserve">
          <source>ModuleWithComponentFactories</source>
          <target state="translated">ModuleWithComponentFactories</target>
        </trans-unit>
        <trans-unit id="a2cad372306851e8187272e8705eb7fbae776699" translate="yes" xml:space="preserve">
          <source>ModuleWithProviders</source>
          <target state="translated">ModuleWithProviders</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="cbb52651bba4b11cbbaf37425680365863c9322e" translate="yes" xml:space="preserve">
          <source>Modules are a great way to organize an application and extend it with capabilities from external libraries.</source>
          <target state="translated">模块是组织应用程序并利用外部库的功能进行扩展的好方法。</target>
        </trans-unit>
        <trans-unit id="fe4301f4b2f595077bcee66f968585f08404b7f7" translate="yes" xml:space="preserve">
          <source>Modules can also add services to the application. Such services might be internally developed, like something you'd develop yourself or come from outside sources, such as the Angular router and HTTP client.</source>
          <target state="translated">模块还可以为应用添加服务。这些服务可能是内部开发的,比如你自己开发的东西,也可能来自外部,比如Angular路由器和HTTP客户端。</target>
        </trans-unit>
        <trans-unit id="58965a390855c470aaa4a09ccac9ba69ee7a054e" translate="yes" xml:space="preserve">
          <source>Modules can be loaded eagerly when the application starts or lazy loaded asynchronously by the router.</source>
          <target state="translated">模块可以在应用程序启动时急切加载,也可以由路由器异步加载。</target>
        </trans-unit>
        <trans-unit id="6947924932f73d216fba7ab79c4b72fea13e156c" translate="yes" xml:space="preserve">
          <source>Modules, components and services are classes that use &lt;em&gt;decorators&lt;/em&gt;. These decorators mark their type and provide metadata that tells Angular how to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50194953d2e7e6bdd59a4d3ee2aaae0bbda2598" translate="yes" xml:space="preserve">
          <source>Modules/controllers/components</source>
          <target state="translated">Modules/controllers/components</target>
        </trans-unit>
        <trans-unit id="082bc378cd60e17a38d99898b21955299c5b60c8" translate="yes" xml:space="preserve">
          <source>Month</source>
          <target state="translated">Month</target>
        </trans-unit>
        <trans-unit id="a45fef53594d1fcc4e0101683c5b8c0bbfd29322" translate="yes" xml:space="preserve">
          <source>Month standalone</source>
          <target state="translated">独立月份</target>
        </trans-unit>
        <trans-unit id="285cbfd86d2712f997a553edc043839f80e15a86" translate="yes" xml:space="preserve">
          <source>More about Angular Modules</source>
          <target state="translated">更多关于Angular Modules的信息</target>
        </trans-unit>
        <trans-unit id="034d5415dd930b4522a1a546a37325fc07716881" translate="yes" xml:space="preserve">
          <source>More async tests</source>
          <target state="translated">更多异步测试</target>
        </trans-unit>
        <trans-unit id="107edeaffa793d17ea2a11dd81321be774d5550e" translate="yes" xml:space="preserve">
          <source>More explicit, created in component class</source>
          <target state="translated">更明确,在组件类中创建</target>
        </trans-unit>
        <trans-unit id="5dcfdc862ee7250234afbe800300e3bf7c0e983b" translate="yes" xml:space="preserve">
          <source>More generally, &lt;a href=&quot;ngmodule-faq#q-component-or-module&quot;&gt;prefer registering providers in NgModules&lt;/a&gt; to registering in components.</source>
          <target state="translated">更一般地，&lt;a href=&quot;ngmodule-faq#q-component-or-module&quot;&gt;宁愿在NgModules中注册提供程序，而不是&lt;/a&gt;在组件中注册。</target>
        </trans-unit>
        <trans-unit id="90761839140dd40f1e73ba92c7a7d7f6c3c29ecb" translate="yes" xml:space="preserve">
          <source>More generally, the text between the braces is a &lt;strong&gt;template expression&lt;/strong&gt; that Angular first &lt;strong&gt;evaluates&lt;/strong&gt; and then &lt;strong&gt;converts to a string&lt;/strong&gt;. The following interpolation illustrates the point by adding two numbers:</source>
          <target state="translated">通常，括号之间的文本是Angular首先&lt;strong&gt;求值&lt;/strong&gt;然后&lt;strong&gt;转换为string&lt;/strong&gt;的&lt;strong&gt;模板表达式&lt;/strong&gt;。以下插值通过将两个数字相加来说明该点：&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0dc96c8ef021f4088328940e9ac8c5b95f7f898d" translate="yes" xml:space="preserve">
          <source>More info on testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f925f9bea399a4c9a234cd8ef31a89c2955d37e0" translate="yes" xml:space="preserve">
          <source>More information</source>
          <target state="translated">更多信息</target>
        </trans-unit>
        <trans-unit id="18b69b015ce1bb08b1d7f945b8f4827eea44c52b" translate="yes" xml:space="preserve">
          <source>More often, you don't know when the data has changed, especially in applications that mutate data in many ways, perhaps in application locations far away. A component in such an application usually can't know about those changes. Moreover, it's unwise to distort the component design to accommodate a pipe. Strive to keep the component class independent of the HTML. The component should be unaware of pipes.</source>
          <target state="translated">更多的时候,你不知道数据什么时候发生了变化,特别是在那些以多种方式突变数据的应用程序中,也许在很远的应用程序位置。这样的应用程序中的组件通常无法知道这些变化。此外,为了适应管道而扭曲组件设计是不明智的。力求使组件类独立于HTML。组件应该不知道管道的存在。</target>
        </trans-unit>
        <trans-unit id="d928892e47e7260978557dc968c874ed2cfe145a" translate="yes" xml:space="preserve">
          <source>More on Angular animations</source>
          <target state="translated">更多关于Angular动画的内容</target>
        </trans-unit>
        <trans-unit id="45236483e1db8ccbe6b2bb2a6df4fb11ea1eea26" translate="yes" xml:space="preserve">
          <source>More on Angular modules</source>
          <target state="translated">更多关于Angular模块</target>
        </trans-unit>
        <trans-unit id="30355a8434d77ad96fabc7dee39b2cc652238bd9" translate="yes" xml:space="preserve">
          <source>More on Angular service workers</source>
          <target state="translated">更多关于Angular服务人员的内容</target>
        </trans-unit>
        <trans-unit id="81c82a995a55ad69e8128fc7312d961606e7f5f3" translate="yes" xml:space="preserve">
          <source>More on NgModules</source>
          <target state="translated">更多关于NgModules的信息</target>
        </trans-unit>
        <trans-unit id="449b3f717be4de68542ad59a9f59fd4c409e15e2" translate="yes" xml:space="preserve">
          <source>More on NgModules and routing</source>
          <target state="translated">更多关于NgModules和路由的信息</target>
        </trans-unit>
        <trans-unit id="38770c6d961b928928d4e9cb1e204b09def009dc" translate="yes" xml:space="preserve">
          <source>More on accessibility</source>
          <target state="translated">关于无障碍的更多信息</target>
        </trans-unit>
        <trans-unit id="b513ad5d9f2910284480f5def84c8bfd15e9429f" translate="yes" xml:space="preserve">
          <source>More on dependency injection</source>
          <target state="translated">更多关于依赖注入的内容</target>
        </trans-unit>
        <trans-unit id="5e4d521276da0becf17bb87ebdac7cb822347ca2" translate="yes" xml:space="preserve">
          <source>More on template syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e287def2e221998b4df76590b35a8fcb3a3d5c6f" translate="yes" xml:space="preserve">
          <source>More overrides</source>
          <target state="translated">更多覆盖</target>
        </trans-unit>
        <trans-unit id="07a448ec5491d4e27e09f682b963835667c1081a" translate="yes" xml:space="preserve">
          <source>More precisely, the redisplay occurs after some kind of asynchronous event related to the view, such as a keystroke, a timer completion, or a response to an HTTP request.</source>
          <target state="translated">更准确地说,重新显示发生在与视图相关的某种异步事件之后,如按键、定时器完成或对HTTP请求的响应。</target>
        </trans-unit>
        <trans-unit id="aec5f46f01ea145b2890502695f0be4ed736f483" translate="yes" xml:space="preserve">
          <source>More rarely, an interceptor may handle the request entirely, and compose a new event stream instead of invoking &lt;code&gt;next.handle()&lt;/code&gt;. This is an acceptable behavior, but keep in mind that further interceptors will be skipped entirely.</source>
          <target state="translated">很少有拦截器可以完全处理请求，并 &lt;code&gt;next.handle()&lt;/code&gt; 新的事件流，而不是调用next.handle（）。这是可以接受的行为，但请记住，其他拦截器将被完全跳过。</target>
        </trans-unit>
        <trans-unit id="9773bd6daaf69947cac6ad3df92c6b1ce39a7a26" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;.js&lt;/code&gt; files are &lt;em&gt;git&lt;/em&gt;-ignored. If you want to include an ignored code file in your project and display it in a guide you must &lt;em&gt;un-ignore&lt;/em&gt; it.</source>
          <target state="translated">大多数 &lt;code&gt;.js&lt;/code&gt; 文件都是&lt;em&gt;git&lt;/em&gt;忽略的。如果要在项目中包含忽略的代码文件并在指南中显示它，则必须&lt;em&gt;将其忽略&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7bd5890495ec24c946c059ac09698db1571dd568" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; methods return observables of &lt;code&gt;&lt;a href=&quot;../api/common/http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; class itself is actually an event, whose type is &lt;code&gt;&lt;a href=&quot;../api/common/http/httpeventtype#Response&quot;&gt;HttpEventType.Response&lt;/a&gt;&lt;/code&gt;. A single HTTP request can, however, generate multiple events of other types, including upload and download progress events. The methods &lt;code&gt;HttpInterceptor.intercept()&lt;/code&gt; and &lt;code&gt;HttpHandler.handle()&lt;/code&gt; return observables of &lt;code&gt;&lt;a href=&quot;../api/common/http/httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d51e03cc5530b81cb20e9ecd7e7ab908caaccc1" translate="yes" xml:space="preserve">
          <source>Most Visual Studio developers like to press the F5 key and see the IIS server come up. To use the IIS server with the Getting Started app, you must make the following three changes.</source>
          <target state="translated">大多数Visual Studio开发人员喜欢按F5键,然后看到IIS服务器出现。要使用IIS服务器与 &quot;入门 &quot;应用程序,你必须进行以下三项更改。</target>
        </trans-unit>
        <trans-unit id="24e64566ad7a8ccb4a3e9b304e753550d0942726" translate="yes" xml:space="preserve">
          <source>Most application developers won't need to add components to the &lt;code&gt;entryComponents&lt;/code&gt;.</source>
          <target state="translated">大多数应用程序开发人员无需将组件添加到 &lt;code&gt;entryComponents&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e11e7f319de45fe5979a6e095d54297622091f9b" translate="yes" xml:space="preserve">
          <source>Most apps are translated into more than one other language. For this reason, it is standard practice for the project structure to reflect the entire internationalization effort.</source>
          <target state="translated">大多数应用程序都被翻译成一种以上的其他语言。因此,项目结构反映整个国际化工作是标准做法。</target>
        </trans-unit>
        <trans-unit id="f5f0c9a994789bb5a9d1f86543d043bf68da3637" translate="yes" xml:space="preserve">
          <source>Most apps should implement a routing module for consistency. It keeps the code clean when configuration becomes complex. It makes testing the feature module easier. Its existence calls attention to the fact that a module is routed. It is where developers expect to find and expand routing configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19f74cc4bdf32f4c998305d04803fe40cd8d21f" translate="yes" xml:space="preserve">
          <source>Most apps strive for a consistent look across the application. The CLI generated an empty &lt;code&gt;styles.css&lt;/code&gt; for this purpose. Put your application-wide styles there.</source>
          <target state="translated">大多数应用程序都力求在整个应用程序中保持一致的外观。CLI 为此生成了一个空的 &lt;code&gt;styles.css&lt;/code&gt; 。将您整个应用程序的样式放在那里。</target>
        </trans-unit>
        <trans-unit id="8853a6f7c581a58d06a62a20b221bab8653cf6b7" translate="yes" xml:space="preserve">
          <source>Most commands, and some options, have aliases. Aliases are shown in the syntax statement for each command.</source>
          <target state="translated">大多数命令和一些选项都有别名。每个命令的别名都在语法语句中显示。</target>
        </trans-unit>
        <trans-unit id="55e283fb52cf31d8715e41cd5807d100e35c86b0" translate="yes" xml:space="preserve">
          <source>Most components are not quite this simple, of course. Many of them have &lt;em&gt;inputs and outputs&lt;/em&gt; that connect them to the outside world. An Angular hero detail component with inputs and outputs might look like this:</source>
          <target state="translated">当然，大多数组件都不是那么简单。他们中的许多人都有&lt;em&gt;输入和输出&lt;/em&gt;，可以将它们连接到外部世界。具有输入和输出的Angular英雄细节组件可能如下所示：</target>
        </trans-unit>
        <trans-unit id="7a4cf09953c1681276d4b3e72e5a109325790f25" translate="yes" xml:space="preserve">
          <source>Most developers should always implement a Routing Module for the sake of consistency. It keeps the code clean when configuration becomes complex. It makes testing the feature module easier. Its existence calls attention to the fact that a module is routed. It is where developers expect to find and expand routing configuration.</source>
          <target state="translated">大多数开发人员为了一致性,总是应该实现一个路由模块。当配置变得复杂时,它可以保持代码的干净。它使功能模块的测试变得更容易。它的存在使人们注意到一个模块是路由的事实。它是开发人员期望找到和扩展路由配置的地方。</target>
        </trans-unit>
        <trans-unit id="c4f333a6b53d02b01658733f28ee1218f17a41f6" translate="yes" xml:space="preserve">
          <source>Most front-end applications communicate with backend services over the HTTP protocol. Modern browsers support two different APIs for making HTTP requests: the &lt;code&gt;XMLHttpRequest&lt;/code&gt; interface and the &lt;code&gt;fetch()&lt;/code&gt; API.</source>
          <target state="translated">大多数前端应用程序通过HTTP协议与后端服务进行通信。现代浏览器支持两种不同的API来发出HTTP请求： &lt;code&gt;XMLHttpRequest&lt;/code&gt; 接口和 &lt;code&gt;fetch()&lt;/code&gt; API。</target>
        </trans-unit>
        <trans-unit id="fea041336d25b846418302b45bb2a45debd301ee" translate="yes" xml:space="preserve">
          <source>Most front-end applications need to communicate with a server over the HTTP protocol, in order to download or upload data and access other back-end services. Angular provides a simplified client HTTP API for Angular applications, the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service class in &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719527a89875cadc610efdc78a5bced86462ab1b" translate="yes" xml:space="preserve">
          <source>Most interceptors call &lt;code&gt;next.handle()&lt;/code&gt; so that the request flows through to the next interceptor and, eventually, the backend handler. An interceptor &lt;em&gt;could&lt;/em&gt; skip calling &lt;code&gt;next.handle()&lt;/code&gt;, short-circuit the chain, and &lt;a href=&quot;http#caching&quot;&gt;return its own &lt;code&gt;Observable&lt;/code&gt;&lt;/a&gt; with an artificial server response.</source>
          <target state="translated">大多数拦截器都调用 &lt;code&gt;next.handle()&lt;/code&gt; ,以便请求流向下一个拦截器，并最终到达后端处理程序。拦截器&lt;em&gt;可以&lt;/em&gt;跳过调用 &lt;code&gt;next.handle()&lt;/code&gt; ，缩短链，并使用人工服务器响应&lt;a href=&quot;http#caching&quot;&gt;返回其自己的 &lt;code&gt;Observable&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca1e26016b81b69914d27a86f57ab285fe288001" translate="yes" xml:space="preserve">
          <source>Most interceptors inspect the request on the way in and forward the (perhaps altered) request to the &lt;code&gt;handle()&lt;/code&gt; method of the &lt;code&gt;next&lt;/code&gt; object which implements the &lt;a href=&quot;../api/common/http/httphandler&quot;&gt;&lt;code&gt;HttpHandler&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">大多数拦截器会在途中检查请求，然后将（可能已更改的）请求转发到实现&lt;a href=&quot;../api/common/http/httphandler&quot;&gt; &lt;code&gt;HttpHandler&lt;/code&gt; &lt;/a&gt;接口的 &lt;code&gt;next&lt;/code&gt; 对象的 &lt;code&gt;handle()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="808548a8b44fb0eb4077020c87c8c6fe9736695c" translate="yes" xml:space="preserve">
          <source>Most interceptors transform the outgoing request before passing it to the next interceptor in the chain, by calling &lt;code&gt;next.handle(transformedReq)&lt;/code&gt;. An interceptor may transform the response event stream as well, by applying additional RxJS operators on the stream returned by &lt;code&gt;next.handle()&lt;/code&gt;.</source>
          <target state="translated">大多数拦截器通过调用 &lt;code&gt;next.handle(transformedReq)&lt;/code&gt; 在将传出请求传递到链中的下一个拦截器之前先对其进行转换。通过在 &lt;code&gt;next.handle()&lt;/code&gt; 返回的流上应用其他RxJS运算符，拦截器也可以转换响应事件流。</target>
        </trans-unit>
        <trans-unit id="770f94ef5f83cf3e03b4b61b713bbbdd83a35d94" translate="yes" xml:space="preserve">
          <source>Most of the Template Syntax guides have dedicated working example apps that demonstrate the individual topic of each guide. To see all of them working together in one app, see the comprehensive .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd61c99374f34bfc3a631f8a23fdbca310a9c019" translate="yes" xml:space="preserve">
          <source>Most of the ad banner implementation is in &lt;code&gt;ad-banner.component.ts&lt;/code&gt;. To keep things simple in this example, the HTML is in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator's &lt;code&gt;template&lt;/code&gt; property as a template string.</source>
          <target state="translated">大多数广告横幅实现都在 &lt;code&gt;ad-banner.component.ts&lt;/code&gt; 中。为了使本示例中的内容保持简单，HTML位于 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 装饰器的 &lt;code&gt;template&lt;/code&gt; 属性中，作为模板字符串。</target>
        </trans-unit>
        <trans-unit id="98a3406be782b14b8c49458075095ba291e8b0e6" translate="yes" xml:space="preserve">
          <source>Most of these initial checks are triggered by Angular's first rendering of &lt;em&gt;unrelated data elsewhere on the page&lt;/em&gt;. Just moving the cursor into another &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; triggers a call. Relatively few calls reveal actual changes to pertinent data. If you use this hook, your implementation must be extremely lightweight or the user experience suffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfb823a50df03ab9a32b94b5a3e90b2fe18890c" translate="yes" xml:space="preserve">
          <source>Most of these initial checks are triggered by Angular's first rendering of &lt;em&gt;unrelated data elsewhere on the page&lt;/em&gt;. Mere mousing into another &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; triggers a call. Relatively few calls reveal actual changes to pertinent data. Clearly our implementation must be very lightweight or the user experience suffers.</source>
          <target state="translated">这些初始检查大多数是由Angular &lt;em&gt;在页面其他位置&lt;/em&gt;首次呈现&lt;em&gt;无关数据&lt;/em&gt;触发的。仅仅将鼠标悬停在另一个 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 中就会触发一个呼叫。相对而言，很少有电话能揭示相关数据的实际变化。显然，我们的实现必须非常轻巧，否则用户体验会受到影响。</target>
        </trans-unit>
        <trans-unit id="271a4fd1d564b640eb5094017d2dded69641207f" translate="yes" xml:space="preserve">
          <source>Most pages display a table of contents (TOC). The TOC appears in the right panel when the viewport is wide. When narrow, the TOC appears in an expandable/collapsible region near the top of the page.</source>
          <target state="translated">大多数页面都会显示目录(TOC)。当视口较宽时,TOC会出现在右侧面板中。当视口较窄时,TOC出现在页面顶部附近的可展开/可折叠区域。</target>
        </trans-unit>
        <trans-unit id="72b1b590f111f607313721f1526c34d7c9d57c9d" translate="yes" xml:space="preserve">
          <source>Most people find this browser output easier to read than the console log. You can click on a test row to re-run just that test or click on a description to re-run the tests in the selected test group (&quot;test suite&quot;).</source>
          <target state="translated">大多数人发现这个浏览器输出比控制台日志更容易阅读。你可以点击一个测试行来重新运行该测试,或者点击一个描述来重新运行所选测试组的测试(&quot;测试套件&quot;)。</target>
        </trans-unit>
        <trans-unit id="de981406b5235d22ec1a551a7d57ba6fdbb6fdb9" translate="yes" xml:space="preserve">
          <source>Most routing applications should add a &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; element to the &lt;code&gt;index.html&lt;/code&gt; as the first child in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag to tell the router how to compose navigation URLs.</source>
          <target state="translated">大多数路由应用程序应在 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 标记中的第一个子元素中向 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; &lt;code&gt;index.html&lt;/code&gt; &amp;gt;添加&amp;lt;base&amp;gt;元素，以告诉路由器如何组成导航URL。</target>
        </trans-unit>
        <trans-unit id="a1ce49a28c994105e2b80e086138ea97fc5a2102" translate="yes" xml:space="preserve">
          <source>Most test suites in this guide call &lt;code&gt;beforeEach()&lt;/code&gt; to set the preconditions for each &lt;code&gt;it()&lt;/code&gt; test and rely on the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; to create classes and inject services.</source>
          <target state="translated">本指南中的大多数测试套件都调用 &lt;code&gt;beforeEach()&lt;/code&gt; 来设置每个 &lt;code&gt;it()&lt;/code&gt; 测试的前提条件，并依靠 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 创建类和注入服务。</target>
        </trans-unit>
        <trans-unit id="e9435e64807b34b81e3b5c20def5bfc7dd89cb82" translate="yes" xml:space="preserve">
          <source>Most updates to the Angular service worker are transparent to the app&amp;mdash;the old caches are still valid and content is still served normally. However, occasionally a bugfix or feature in the Angular service worker requires the invalidation of old caches. In this case, the app will be refreshed transparently from the network.</source>
          <target state="translated">Angular Service Worker的大多数更新对应用程序都是透明的-旧的缓存仍然有效，内容仍可正常提供。但是，有时Angular服务工作程序中的错误修正或功能要求使旧缓存无效。在这种情况下，该应用将从网络透明地刷新。</target>
        </trans-unit>
        <trans-unit id="a80b931f6f0bc3139ea3c812478b2f81351f0b0e" translate="yes" xml:space="preserve">
          <source>Most web APIs support a &lt;em&gt;get by id&lt;/em&gt; request in the form &lt;code&gt;:baseURL/:id&lt;/code&gt;.</source>
          <target state="translated">大多数Web API支持以 &lt;code&gt;:baseURL/:id&lt;/code&gt; 的形式&lt;em&gt;进行id by get&lt;/em&gt;请求。</target>
        </trans-unit>
        <trans-unit id="20da40e26940fbe216c818a6961898cc6adaf59c" translate="yes" xml:space="preserve">
          <source>Motion greatly enhances the user experience, so animations give users a chance to detect the application's response to their actions.</source>
          <target state="translated">运动极大地增强了用户体验,因此动画给用户提供了一个检测应用程序对其行动的反应的机会。</target>
        </trans-unit>
        <trans-unit id="088f61a80f05141c5fbb3d893761e6ecfb686430" translate="yes" xml:space="preserve">
          <source>Move the &lt;code&gt;app/index.html&lt;/code&gt; file to the project root directory. Then change the development server root path in &lt;code&gt;package.json&lt;/code&gt; to also point to the project root instead of &lt;code&gt;app&lt;/code&gt;:</source>
          <target state="translated">将 &lt;code&gt;app/index.html&lt;/code&gt; 文件移动到项目根目录。然后将 &lt;code&gt;package.json&lt;/code&gt; 中的开发服务器根路径更改为也指向项目根目录而不是 &lt;code&gt;app&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="39f6edeec674fcbbaf73d38f42c8de451492dbbb" translate="yes" xml:space="preserve">
          <source>Move the placeholder &lt;code&gt;hero-list&lt;/code&gt; folder that's in the &lt;code&gt;app&lt;/code&gt; folder into the &lt;code&gt;heroes&lt;/code&gt; folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72dfef3298f9e4d3621d27b7823ec1135e13b975" translate="yes" xml:space="preserve">
          <source>Move the placeholder &lt;code&gt;hero-list&lt;/code&gt; folder that's in the &lt;code&gt;app&lt;/code&gt; into the &lt;code&gt;heroes&lt;/code&gt; folder.</source>
          <target state="translated">将 &lt;code&gt;app&lt;/code&gt; 的占位符 &lt;code&gt;hero-list&lt;/code&gt; 文件夹移到 &lt;code&gt;heroes&lt;/code&gt; 文件夹中。</target>
        </trans-unit>
        <trans-unit id="b6f5b2d899fe92b6ea8951798cdc4fa361c2b6f9" translate="yes" xml:space="preserve">
          <source>Move the relevant parts of the crisis retrieval logic in &lt;code&gt;CrisisDetailComponent.ngOnInit()&lt;/code&gt; into the &lt;code&gt;CrisisDetailResolverService&lt;/code&gt;. Import the &lt;code&gt;Crisis&lt;/code&gt; model, &lt;code&gt;CrisisService&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; so you can navigate elsewhere if you can't fetch the crisis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1647670a82c1749f387c5f2944002192fcd91b5" translate="yes" xml:space="preserve">
          <source>Moves a view to a new location in this container.</source>
          <target state="translated">将视图移动到此容器的新位置。</target>
        </trans-unit>
        <trans-unit id="c09f1c0051ecc467d6b93dba92c0113872a98043" translate="yes" xml:space="preserve">
          <source>Multi-class binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d53bcda082f4976ef79aea4c9eae973cb70e04" translate="yes" xml:space="preserve">
          <source>Multi-style binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44759830117daa31d1321a9d8804af42279988cb" translate="yes" xml:space="preserve">
          <source>Multi-value example</source>
          <target state="translated">多值示例</target>
        </trans-unit>
        <trans-unit id="85768b6bf1094b92415a9e43d68a4719e2932d41" translate="yes" xml:space="preserve">
          <source>Multicasting</source>
          <target state="translated">Multicasting</target>
        </trans-unit>
        <trans-unit id="ccd10a4daff631270a3f7ab6ab0a36a86a3adfe1" translate="yes" xml:space="preserve">
          <source>Multicasting observables take a bit more setup, but they can be useful for certain applications. Later we will look at tools that simplify the process of multicasting, allowing you to take any observable and make it multicasting.</source>
          <target state="translated">多播观测器需要更多的设置,但它们对于某些应用是有用的。稍后我们将看一下简化多播过程的工具,允许你把任何观测值变成多播。</target>
        </trans-unit>
        <trans-unit id="23ff52e403edc6ed596c8767589449944d382d73" translate="yes" xml:space="preserve">
          <source>Multiple Outlets</source>
          <target state="translated">多网点</target>
        </trans-unit>
        <trans-unit id="71e10f5d94b0738202ebc0ae107e33ad89e21fa6" translate="yes" xml:space="preserve">
          <source>Multiple animation triggers</source>
          <target state="translated">多个动画触发器</target>
        </trans-unit>
        <trans-unit id="eb88b2b9a32b6fa3fc28d8f3c4800b3eabd0b72e" translate="yes" xml:space="preserve">
          <source>Multiple components can leverage the same service. Later in this tutorial, the shipping component uses the cart service to retrieve shipping data via HTTP from the &lt;code&gt;shipping.json&lt;/code&gt; file. First, define a &lt;code&gt;get()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403737f5a0e994d747fc5829da9da44f4098d631" translate="yes" xml:space="preserve">
          <source>Multiple project file structure</source>
          <target state="translated">多项目文件结构</target>
        </trans-unit>
        <trans-unit id="4c38246227539ea95edb3bb120c7f680c9dae722" translate="yes" xml:space="preserve">
          <source>Multiple projects</source>
          <target state="translated">多个项目</target>
        </trans-unit>
        <trans-unit id="1f8642040031aeb5f8e1c1b6956da9c26f01da5c" translate="yes" xml:space="preserve">
          <source>Multiple providers can be associated with a single token in other areas as well. For example, you can register a custom form validator using the built-in &lt;a href=&quot;../api/forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt; token, and provide multiple instances of a given validator provider by using the &lt;code&gt;multi: true&lt;/code&gt; property in the provider object. Angular adds your custom validators to the existing collection.</source>
          <target state="translated">多个提供者也可以在其他区域与单个令牌关联。例如，您可以使用内置的&lt;a href=&quot;../api/forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;令牌注册自定义表单验证器，并通过使用provider对象中的 &lt;code&gt;multi: true&lt;/code&gt; 属性来提供给定验证器提供者的多个实例。Angular将自定义验证器添加到现有集合中。</target>
        </trans-unit>
        <trans-unit id="baa333de91b3ba325c66257efd5cac4be7a52608" translate="yes" xml:space="preserve">
          <source>Multiple service instances (sandboxing)</source>
          <target state="translated">多个服务实例(沙盒</target>
        </trans-unit>
        <trans-unit id="d4a98ed21d0eb6791f1cbe537aad455031c8c19f" translate="yes" xml:space="preserve">
          <source>Multiple static segments can be merged into one (e.g., &lt;code&gt;['/team/11/user', userName, {details: true}]&lt;/code&gt;).</source>
          <target state="translated">可以将多个静态段合并为一个（例如 &lt;code&gt;['/team/11/user', userName, {details: true}]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="134f02de1a68fb7a0c3b3cd56fe8cd70a0523c65" translate="yes" xml:space="preserve">
          <source>Multiple static segments can be merged into one term and combined with dynamic segements. For example, &lt;code&gt;['/team/11/user', userName, {details: true}]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479b0a69757fbef14e6ecb57e00858bd5dab1beb" translate="yes" xml:space="preserve">
          <source>Multiple values; for example, &lt;code&gt;after='12/31/2015' &amp;amp; before='1/1/2017'&lt;/code&gt;&amp;mdash;in no particular order&amp;mdash;&lt;code&gt;before='1/1/2017' &amp;amp; after='12/31/2015'&lt;/code&gt;&amp;mdash; in a variety of formats&amp;mdash;&lt;code&gt;during='currentYear'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3de9de8b139d37d7c691156addb32d1f622228" translate="yes" xml:space="preserve">
          <source>Must be executed from within a workspace directory. When a project name is not supplied, it will execute for all projects.</source>
          <target state="translated">必须在工作区目录内执行。如果没有提供项目名称,将对所有项目执行。</target>
        </trans-unit>
        <trans-unit id="88c3578f358497ee57de0669c6df27b6d72fc10c" translate="yes" xml:space="preserve">
          <source>Must be used in the context of a factory function such as one defined for an &lt;code&gt;&lt;a href=&quot;injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt;. Throws an error if not called from such a context.</source>
          <target state="translated">必须在工厂函数（例如为 &lt;code&gt;&lt;a href=&quot;injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; 定义的函数）的上下文中使用。如果未从这样的上下文中调用，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="0b79f8e4890c8608e67c29a1e344d765772f2753" translate="yes" xml:space="preserve">
          <source>Mutability</source>
          <target state="translated">Mutability</target>
        </trans-unit>
        <trans-unit id="cea8e259b44a93b7b0509cd22ed570ea8235896d" translate="yes" xml:space="preserve">
          <source>Mutability of the data model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ca44c83d180ec16ed67d72f6f53a30504adb70" translate="yes" xml:space="preserve">
          <source>Mutable</source>
          <target state="translated">Mutable</target>
        </trans-unit>
        <trans-unit id="e579a1d025aaf38d74ab8d2625e6b8a4f3a2f7a5" translate="yes" xml:space="preserve">
          <source>NG_ASYNC_VALIDATORS</source>
          <target state="translated">NG_ASYNC_VALIDATORS</target>
        </trans-unit>
        <trans-unit id="effab8d59fa7c123d4b29984483832e4f491e319" translate="yes" xml:space="preserve">
          <source>NG_VALIDATORS</source>
          <target state="translated">NG_VALIDATORS</target>
        </trans-unit>
        <trans-unit id="c7807450dc4b5e96ac6d57d5f6877820a3ba310a" translate="yes" xml:space="preserve">
          <source>NG_VALUE_ACCESSOR</source>
          <target state="translated">NG_VALUE_ACCESSOR</target>
        </trans-unit>
        <trans-unit id="8c6abbe86b9a3dd54d847c73d2fcb02c7646f939" translate="yes" xml:space="preserve">
          <source>NOTE:</source>
          <target state="translated">NOTE:</target>
        </trans-unit>
        <trans-unit id="52577a8f79e784bd49f26a4184f5c685b9352790" translate="yes" xml:space="preserve">
          <source>NOTE: In the future this class will implement an &lt;code&gt;Observable&lt;/code&gt; interface.</source>
          <target state="translated">注意：将来，此类将实现 &lt;code&gt;Observable&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="c01fd67259def4959927758ba28403ac03397d2b" translate="yes" xml:space="preserve">
          <source>NOTE: The basic behavior described below is handled automatically when using the NgUniversal Express schematic. This is helpful when trying to understand the underlying behavior or replicate it without using the schematic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0698704ab187d839adc3f2a3ee28d874c2bb329" translate="yes" xml:space="preserve">
          <source>NOTE: These are not necessarily the actual operations which were applied to the original &lt;code&gt;Iterable&lt;/code&gt;, rather these are a set of computed operations which may not be the same as the ones applied.</source>
          <target state="translated">注意：这些不一定是应用于原始 &lt;code&gt;Iterable&lt;/code&gt; 的实际操作，而是这些计算的操作集合，可能与所应用的操作不同。</target>
        </trans-unit>
        <trans-unit id="6812b1bc0c0646ebecf1e212f6b701a4c00f9e0e" translate="yes" xml:space="preserve">
          <source>NOTE: the basic behavior described below is handled automatically when using the NgUniversal Express schematic, this is helpful when trying to understand the underlying behavior or replicate it without using the schematic.</source>
          <target state="translated">注意:下面描述的基本行为是在使用NgUniversal Express原理图时自动处理的,这对试图理解底层行为或在不使用原理图的情况下复制它很有帮助。</target>
        </trans-unit>
        <trans-unit id="7d67ee9446bfc0dbf4127f0fae8b6858be3024db" translate="yes" xml:space="preserve">
          <source>NO_ERRORS_SCHEMA</source>
          <target state="translated">NO_ERRORS_SCHEMA</target>
        </trans-unit>
        <trans-unit id="7d94ebbf07f5417771d7c7fd06f208703494bf50" translate="yes" xml:space="preserve">
          <source>NPM</source>
          <target state="translated">NPM</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="9186e712d39a5c297348aee49687c55909aa797a" translate="yes" xml:space="preserve">
          <source>Name controls to make them accessible to &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0bd3f0f21026a506ecdfde4d06d7cf1b932ed6" translate="yes" xml:space="preserve">
          <source>Name expected</source>
          <target state="translated">预期名称</target>
        </trans-unit>
        <trans-unit id="1c87abf672363192eb82a7c84d215c41d1df8f0a" translate="yes" xml:space="preserve">
          <source>Name of a &lt;code&gt;&lt;a href=&quot;routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; object where the component can be placed when the path matches.</source>
          <target state="translated">路径匹配时可以在其中放置组件的 &lt;code&gt;&lt;a href=&quot;routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 对象的名称。</target>
        </trans-unit>
        <trans-unit id="f63873b158ebb46bfe3985fc24290d54033cb54f" translate="yes" xml:space="preserve">
          <source>Name of the event listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efaff6470fe74eff20a22d907e5996c60bcd343d" translate="yes" xml:space="preserve">
          <source>Name of the file to output.</source>
          <target state="translated">要输出的文件名称。</target>
        </trans-unit>
        <trans-unit id="edb8b69d52b5234d914940a2c7dab34536d5b737" translate="yes" xml:space="preserve">
          <source>Named &lt;em&gt;#docregions&lt;/em&gt;</source>
          <target state="translated">命名为&lt;em&gt;#docregions&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="565f8abd08ab76aca7ede4a593565f082212bd51" translate="yes" xml:space="preserve">
          <source>Named outlets are the targets of &lt;em&gt;secondary routes&lt;/em&gt;.</source>
          <target state="translated">命名网点是&lt;em&gt;二级路由&lt;/em&gt;的目标。</target>
        </trans-unit>
        <trans-unit id="119b5245a8e6a765d9aed0284081a389d53d48ca" translate="yes" xml:space="preserve">
          <source>Named outlets can be the targets of secondary routes. The &lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; object for a secondary route has an &lt;code&gt;outlet&lt;/code&gt; property to identify the target outlet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c58cf746e1fa01bb3ddb3e978299e1e6439626" translate="yes" xml:space="preserve">
          <source>Named schematics</source>
          <target state="translated">命名示意图</target>
        </trans-unit>
        <trans-unit id="a46171efa120e3814dee92fef224b89628e2e912" translate="yes" xml:space="preserve">
          <source>Names of the parameters in the map.</source>
          <target state="translated">地图中的参数名称。</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="9345aa984ae2d440c135aa46c84413fabb4b2045" translate="yes" xml:space="preserve">
          <source>Naming control elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b421e345572cd6dda9871ac0f2b12a8589699460" translate="yes" xml:space="preserve">
          <source>Naming conventions are hugely important to maintainability and readability. This guide recommends naming conventions for the file name and the symbol name.</source>
          <target state="translated">命名惯例对于可维护性和可读性是非常重要的,本指南推荐文件名和符号名的命名惯例。本指南推荐文件名和符号名的命名惯例。</target>
        </trans-unit>
        <trans-unit id="8098b332f1cda7a125158650b5bd36b36600d729" translate="yes" xml:space="preserve">
          <source>Naming conventions for observables</source>
          <target state="translated">观测数据的命名惯例</target>
        </trans-unit>
        <trans-unit id="0dd4757821f76adef6aa4fb71118d5ba8fc3f9ab" translate="yes" xml:space="preserve">
          <source>Naming your lightweight injection token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697edbe4acd10b9466b672837ee81bd016c23b79" translate="yes" xml:space="preserve">
          <source>Narrow</source>
          <target state="translated">Narrow</target>
        </trans-unit>
        <trans-unit id="8fcc9d7a4aab9838b2b1f8ef3e8a90f55268f08a" translate="yes" xml:space="preserve">
          <source>Native DOM validation UI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd6eb0659a1205c3d2f1ffbb5b2fe40d9662271" translate="yes" xml:space="preserve">
          <source>Native HTML elements capture a number of standard interaction patterns that are important to accessibility. When authoring Angular components, you should re-use these native elements directly when possible, rather than re-implementing well-supported behaviors.</source>
          <target state="translated">原生HTML元素捕获了许多对可访问性很重要的标准交互模式。在编写Angular组件时,你应该尽可能直接重用这些原生元素,而不是重新实现支持良好的行为。</target>
        </trans-unit>
        <trans-unit id="aa7431b75f62e3afb7b428a378241bb10eefd2d8" translate="yes" xml:space="preserve">
          <source>Navigate based on the provided URL, which must be absolute.</source>
          <target state="translated">根据提供的URL进行导航,必须是绝对的。</target>
        </trans-unit>
        <trans-unit id="f00a310453dd24d0871c004718114fd725896517" translate="yes" xml:space="preserve">
          <source>Navigate based on the provided array of commands and a starting point. If no starting route is provided, the navigation is absolute.</source>
          <target state="translated">根据提供的命令数组和起始点进行导航。如果没有提供起始路径,则为绝对导航。</target>
        </trans-unit>
        <trans-unit id="bcb28231ae5f2e6c19b1274bbb244e4f8f8c72f0" translate="yes" xml:space="preserve">
          <source>Navigate imperatively from one component to another.</source>
          <target state="translated">从一个组件到另一个组件的导航。</target>
        </trans-unit>
        <trans-unit id="afb677fe70fdcfa21d17515809a52b37d92143ff" translate="yes" xml:space="preserve">
          <source>Navigate the Component Tree with DI</source>
          <target state="translated">用DI导航组件树</target>
        </trans-unit>
        <trans-unit id="801cddba8606ab904bff03cf42dc9bb7afdbae2f" translate="yes" xml:space="preserve">
          <source>Navigate the component tree with DI</source>
          <target state="translated">用DI导航组件树</target>
        </trans-unit>
        <trans-unit id="054bf40cd5a09bac00514f6220f471f85443770e" translate="yes" xml:space="preserve">
          <source>Navigate to crisis list with a relative URL</source>
          <target state="translated">用相对的URL导航到危机列表</target>
        </trans-unit>
        <trans-unit id="eac113305c9e93a9fafdff869950c44bded467f6" translate="yes" xml:space="preserve">
          <source>Navigate to the &lt;em&gt;Crisis Center&lt;/em&gt; and click &quot;Contact&quot;. you should see something like the following URL in the browser address bar.</source>
          <target state="translated">导航到&lt;em&gt;危机中心&lt;/em&gt;，然后单击&amp;ldquo;联系&amp;rdquo;。您应该在浏览器地址栏中看到类似以下URL的内容。</target>
        </trans-unit>
        <trans-unit id="de7126ba9a6d514985d538d255b366d741dfb956" translate="yes" xml:space="preserve">
          <source>Navigate to the default route when the app launches with an empty path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b717a0f8976d0d8a1e5070b6003d01d44ed82ed" translate="yes" xml:space="preserve">
          <source>Navigate to the workspace folder, such as &lt;code&gt;my-app&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a585929b5d0ab87bf81346f380701a83cd3d88" translate="yes" xml:space="preserve">
          <source>Navigate to your Angular project directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4518e36712637adff17a3524e56ca5f8ec3f952b" translate="yes" xml:space="preserve">
          <source>Navigates back in the platform's history.</source>
          <target state="translated">在平台的历史中回溯导航。</target>
        </trans-unit>
        <trans-unit id="44c635e70030c2a900ac2aefff93eea69863e5e9" translate="yes" xml:space="preserve">
          <source>Navigates forward in the platform's history.</source>
          <target state="translated">在平台的历史中向前导航。</target>
        </trans-unit>
        <trans-unit id="cb9de340b9da199ffa392dea34f8fcd85de53985" translate="yes" xml:space="preserve">
          <source>Navigates to a view using an absolute route path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82436f50f9049884de9b6c3ba1b99e9bb2c9a879" translate="yes" xml:space="preserve">
          <source>Navigating back to the list component</source>
          <target state="translated">导航回到列表组件</target>
        </trans-unit>
        <trans-unit id="427f52baedb8cb5c0cd34a88518a1547a8819064" translate="yes" xml:space="preserve">
          <source>Navigating imperatively from one component to another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c008352e202507d43afb72eafc5744d9a6d7dc5" translate="yes" xml:space="preserve">
          <source>Navigating to a component (&lt;em&gt;Heroes&lt;/em&gt; link to &quot;Heroes List&quot;).</source>
          <target state="translated">导航到组件（&lt;em&gt;英雄&lt;/em&gt;链接到&amp;ldquo;英雄列表&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="c20b119c54829ceba5297456fc93df8fbc3a285b" translate="yes" xml:space="preserve">
          <source>Navigating to hero details</source>
          <target state="translated">导航到英雄详情</target>
        </trans-unit>
        <trans-unit id="cf03cf2e9cdf95a20af09137dfb9071db0c31bf2" translate="yes" xml:space="preserve">
          <source>Navigation</source>
          <target state="translated">Navigation</target>
        </trans-unit>
        <trans-unit id="0503c11edd28859dcfc3851d2db9b7108c99b553" translate="yes" xml:space="preserve">
          <source>Navigation via &lt;code&gt;routerLinks&lt;/code&gt; works correctly because they use the native anchor (&lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt;) tags. You can go from the Dashboard to the Heroes page and back. You can click a hero on the Dashboard page to display its Details page.</source>
          <target state="translated">通过导航 &lt;code&gt;routerLinks&lt;/code&gt; 正常工作，因为他们使用本地锚（ &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; ）标签。您可以从仪表板转到&amp;ldquo;英雄&amp;rdquo;页面，然后返回。您可以在&amp;ldquo;仪表板&amp;rdquo;页面上单击英雄以显示其&amp;ldquo;详细信息&amp;rdquo;页面。</target>
        </trans-unit>
        <trans-unit id="0b244a3e111e213e42f3366acc0ad983d7d0d78d" translate="yes" xml:space="preserve">
          <source>Navigation via &lt;code&gt;routerLinks&lt;/code&gt; works correctly because they use the native anchor (&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;) tags. You can go from the Dashboard to the Heroes page and back. You can click a hero on the Dashboard page to display its Details page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b016e5e26cd3db8835ca10b9c9a3a1e8b5ff4e" translate="yes" xml:space="preserve">
          <source>NavigationBehaviorOptions</source>
          <target state="translated">NavigationBehaviorOptions</target>
        </trans-unit>
        <trans-unit id="759a28ebbc0d91e90943f8fd93691e9a220b42f4" translate="yes" xml:space="preserve">
          <source>NavigationBehaviorOptions#replaceUrl</source>
          <target state="translated">NavigationBehaviorOptions#replaceUrl</target>
        </trans-unit>
        <trans-unit id="b29602a054dd5a59680ae3377b5cddac939c04d9" translate="yes" xml:space="preserve">
          <source>NavigationBehaviorOptions#skipLocationChange</source>
          <target state="translated">NavigationBehaviorOptions#skipLocationChange</target>
        </trans-unit>
        <trans-unit id="02e50a4e01957bfa9a03fad077c09da68486f0d8" translate="yes" xml:space="preserve">
          <source>NavigationBehaviorOptions#state</source>
          <target state="translated">NavigationBehaviorOptions#state</target>
        </trans-unit>
        <trans-unit id="f6f45edabb536117eaaa8a31a3009ee45b02798c" translate="yes" xml:space="preserve">
          <source>NavigationCancel</source>
          <target state="translated">NavigationCancel</target>
        </trans-unit>
        <trans-unit id="3df2bbafb8bef3ad3c14903257e2b80c2ecf4d7f" translate="yes" xml:space="preserve">
          <source>NavigationEnd</source>
          <target state="translated">NavigationEnd</target>
        </trans-unit>
        <trans-unit id="3c6b9a9761701b6696dc96c14cded08327b354ca" translate="yes" xml:space="preserve">
          <source>NavigationError</source>
          <target state="translated">NavigationError</target>
        </trans-unit>
        <trans-unit id="5537ca588f865cbeab3cdfff2f7d54ef22a4b2fa" translate="yes" xml:space="preserve">
          <source>NavigationExtras</source>
          <target state="translated">NavigationExtras</target>
        </trans-unit>
        <trans-unit id="b70bac96f45923a632597d1d0749305fa7c5df28" translate="yes" xml:space="preserve">
          <source>NavigationExtras#preserveQueryParams has been removed from &lt;code&gt;@angular/router&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9c98c134db2cf2bf2aca63b0b8e192816b3996" translate="yes" xml:space="preserve">
          <source>NavigationStart</source>
          <target state="translated">NavigationStart</target>
        </trans-unit>
        <trans-unit id="45c7f55490f4d99e23fc1cb2f73c00322d0d19be" translate="yes" xml:space="preserve">
          <source>Nearby tests can reveal how a part works in context.</source>
          <target state="translated">附近的测试可以揭示一个零件的工作情况。</target>
        </trans-unit>
        <trans-unit id="08ac0f840e3c990cb29508186b00fbf0c6c41cf3" translate="yes" xml:space="preserve">
          <source>Negative glob patterns are not supported.</source>
          <target state="translated">不支持负数的glob模式。</target>
        </trans-unit>
        <trans-unit id="6ab1f3cff45310ffbcb338033e822fd00c603e04" translate="yes" xml:space="preserve">
          <source>Neither &lt;code&gt;tap&lt;/code&gt; nor &lt;code&gt;finalize&lt;/code&gt; touch the values of the observable stream returned to the caller.</source>
          <target state="translated">&lt;code&gt;tap&lt;/code&gt; 或 &lt;code&gt;finalize&lt;/code&gt; 都不会触摸返回给调用方的可观察流的值。</target>
        </trans-unit>
        <trans-unit id="a660d66d678c2aa12932b6114b6a06a470213bb0" translate="yes" xml:space="preserve">
          <source>Nested &lt;em&gt;#docregions&lt;/em&gt;</source>
          <target state="translated">嵌套的&lt;em&gt;#docregions&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8471e4625a027b35641c7d539e57cd28b22856d9" translate="yes" xml:space="preserve">
          <source>Nested component tests</source>
          <target state="translated">嵌套组件测试</target>
        </trans-unit>
        <trans-unit id="02ab9a0c82c26f180ecdcc2524a370078d4cdf6f" translate="yes" xml:space="preserve">
          <source>Nested service dependencies</source>
          <target state="translated">嵌套服务依赖性</target>
        </trans-unit>
        <trans-unit id="91890a92af602dc34a0759b4044a9376f87b16a8" translate="yes" xml:space="preserve">
          <source>Nesting plural and select ICU expressions</source>
          <target state="translated">嵌套复数和选择ICU表达方式</target>
        </trans-unit>
        <trans-unit id="164c2396f149b90697b41fd738465acdad9c6bc0" translate="yes" xml:space="preserve">
          <source>Nesting routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd711a21d476e6fe66700859fd27013606d0d82" translate="yes" xml:space="preserve">
          <source>Netlify</source>
          <target state="translated">Netlify</target>
        </trans-unit>
        <trans-unit id="16ec400266d5ef58ca82e995098af63f1923ec9d" translate="yes" xml:space="preserve">
          <source>Never directly import lazy loaded folders</source>
          <target state="translated">千万不要直接导入懒惰加载的文件夹</target>
        </trans-unit>
        <trans-unit id="6403f2b7eb2aaafe6de34cbf2a029b01afebc512" translate="yes" xml:space="preserve">
          <source>New</source>
          <target state="translated">New</target>
        </trans-unit>
        <trans-unit id="988a9c9b5e8c90eb5a3e86aba8f04a9c70f8271f" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;i18n#localize-config&quot;&gt;localization option&lt;/a&gt; in version 9 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfac537ff6998d464404c7101d3e12dcf9ab187" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;template-expression-operators&quot;&gt;template expression operators&lt;/a&gt;, such as &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;?.&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc705094d287067f1988a6a0801f2814fac8b45" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;template-syntax#expression-operators&quot;&gt;template expression operators&lt;/a&gt;, such as &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;?.&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt;</source>
          <target state="translated">新的&lt;a href=&quot;template-syntax#expression-operators&quot;&gt;模板表达式运算符&lt;/a&gt;，例如 &lt;code&gt;|&lt;/code&gt; 。， &lt;code&gt;?.&lt;/code&gt; 和 &lt;code&gt;!&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5a752db05415c204941e38b09f34304b811b7c7" translate="yes" xml:space="preserve">
          <source>New Breaking Changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab073fef5e21d102683caab1a7a85b6bb5e9bc1" translate="yes" xml:space="preserve">
          <source>New Deprecations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93311a285cb539a2af7faf2aa3c20452cd7b907" translate="yes" xml:space="preserve">
          <source>New Removals of Deprecated APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6499c7afe8658c4357e133e2d725379e590d06cd" translate="yes" xml:space="preserve">
          <source>New code</source>
          <target state="translated">新代码</target>
        </trans-unit>
        <trans-unit id="3d9d5612da2d5b4b00ea65cc9544cb150870d63e" translate="yes" xml:space="preserve">
          <source>New instances</source>
          <target state="translated">新实例</target>
        </trans-unit>
        <trans-unit id="faf5319f3ab931a2424080ebd66686013025fb48" translate="yes" xml:space="preserve">
          <source>New locale id</source>
          <target state="translated">新的地点ID</target>
        </trans-unit>
        <trans-unit id="2272b187b02a451ebb5ad8639f2bf94e07550870" translate="yes" xml:space="preserve">
          <source>New to web development?</source>
          <target state="translated">网站开发新手?</target>
        </trans-unit>
        <trans-unit id="25b0b46ee946b39e6834ebff44b402c22e9b2133" translate="yes" xml:space="preserve">
          <source>Next inject the activated route service:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8f1ce4cebeca9a38c685a3b23068407d2e91a9" translate="yes" xml:space="preserve">
          <source>Next is &lt;code&gt;QuestionControlService&lt;/code&gt;, a simple service for transforming the questions to a &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;. In a nutshell, the form group consumes the metadata from the question model and allows you to specify default values and validation rules.</source>
          <target state="translated">接下来是 &lt;code&gt;QuestionControlService&lt;/code&gt; ，这是用于将问题转换为 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 的简单服务。简而言之，表单组使用问题模型中的元数据，并允许您指定默认值和验证规则。</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">今后的步骤</target>
        </trans-unit>
        <trans-unit id="e54feaad576821078eba1e93f7c9c60ca70fb2c0" translate="yes" xml:space="preserve">
          <source>Next steps: tools and techniques</source>
          <target state="translated">接下来的步骤:工具和技术</target>
        </trans-unit>
        <trans-unit id="b2a1fb63b77a247c65e2949fd2731d2882b12b5e" translate="yes" xml:space="preserve">
          <source>Next, &lt;code&gt;AppRoutingModule&lt;/code&gt; exports &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; so it will be available throughout the app.</source>
          <target state="translated">接下来， &lt;code&gt;AppRoutingModule&lt;/code&gt; 导出 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; ,因此它将在整个应用程序中可用。</target>
        </trans-unit>
        <trans-unit id="e40a87bc30a63dbca742228db43c858138ed67f9" translate="yes" xml:space="preserve">
          <source>Next, add &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; along with &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; to the constructor for the &lt;code&gt;Animal Service&lt;/code&gt; in &lt;code&gt;child.component.ts&lt;/code&gt;. Here are &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; in the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; constructor :</source>
          <target state="translated">接下来，添加 &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; 连同 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 来构造的 &lt;code&gt;Animal Service&lt;/code&gt; 在 &lt;code&gt;child.component.ts&lt;/code&gt; 。这里有 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; 在 &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; 的构造函数：</target>
        </trans-unit>
        <trans-unit id="69578ad457abc165b824fd423ac47cbb49eb4578" translate="yes" xml:space="preserve">
          <source>Next, add a &lt;code&gt;data&lt;/code&gt; object to the routes for &lt;code&gt;HeroListComponent&lt;/code&gt; and &lt;code&gt;HeroDetailComponent&lt;/code&gt;. Transitions are based on &lt;code&gt;states&lt;/code&gt; and you use the &lt;code&gt;&lt;a href=&quot;../api/animations/animation&quot;&gt;animation&lt;/a&gt;&lt;/code&gt; data from the route to provide a named animation &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; for the transitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbe1b3e5150553c875832797ecdc536a1901705" translate="yes" xml:space="preserve">
          <source>Next, add a &lt;code&gt;data&lt;/code&gt; object to the routes for &lt;code&gt;HeroListComponent&lt;/code&gt; and &lt;code&gt;HeroDetailComponent&lt;/code&gt;. Transitions are based on &lt;code&gt;states&lt;/code&gt; and you'll use the &lt;code&gt;&lt;a href=&quot;../api/animations/animation&quot;&gt;animation&lt;/a&gt;&lt;/code&gt; data from the route to provide a named animation &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; for the transitions.</source>
          <target state="translated">接下来，将 &lt;code&gt;data&lt;/code&gt; 对象添加到 &lt;code&gt;HeroListComponent&lt;/code&gt; 和 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 的路由中。过渡基于 &lt;code&gt;states&lt;/code&gt; ，您将使用路径中的 &lt;code&gt;&lt;a href=&quot;../api/animations/animation&quot;&gt;animation&lt;/a&gt;&lt;/code&gt; 数据为过渡提供命名的动画 &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbe6d180136a82d27c10482de8b67fe1e78e0fb9" translate="yes" xml:space="preserve">
          <source>Next, add a &lt;code&gt;deleteHero()&lt;/code&gt; method to &lt;code&gt;HeroService&lt;/code&gt; like this.</source>
          <target state="translated">接下来，像这样向 &lt;code&gt;HeroService&lt;/code&gt; 添加 &lt;code&gt;deleteHero()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="ca91b2e786e0c6a170fc3962eee3d4548b237fa8" translate="yes" xml:space="preserve">
          <source>Next, add the following to &lt;code&gt;app.component.html&lt;/code&gt; to take advantage of content projection.</source>
          <target state="translated">接下来，将以下内容添加到 &lt;code&gt;app.component.html&lt;/code&gt; 中以利用内容投影的优势。</target>
        </trans-unit>
        <trans-unit id="146403171474dcf7255cdeee43c31023cf1d1e42" translate="yes" xml:space="preserve">
          <source>Next, convert your current JavaScript files into TypeScript. Since TypeScript is a super-set of ECMAScript 2015, which in turn is a super-set of ECMAScript 5, you can simply switch the file extensions from &lt;code&gt;.js&lt;/code&gt; to &lt;code&gt;.ts&lt;/code&gt; and everything will work just like it did before. As the TypeScript compiler runs, it emits the corresponding &lt;code&gt;.js&lt;/code&gt; file for every &lt;code&gt;.ts&lt;/code&gt; file and the compiled JavaScript is what actually gets executed. If you start the project HTTP server with &lt;code&gt;npm start&lt;/code&gt;, you should see the fully functional application in your browser.</source>
          <target state="translated">接下来，将当前的JavaScript文件转换为TypeScript。由于TypeScript是ECMAScript 2015的超集，而ECMAScript 2015是ECMAScript 5的超集，因此您只需将文件扩展名从 &lt;code&gt;.js&lt;/code&gt; 切换到 &lt;code&gt;.ts&lt;/code&gt; ，一切将像以前一样工作。当TypeScript编译器运行时，它将为每个 &lt;code&gt;.ts&lt;/code&gt; 文件发出一个相应的 &lt;code&gt;.js&lt;/code&gt; 文件，并且编译后的JavaScript才是实际执行的代码。如果使用 &lt;code&gt;npm start&lt;/code&gt; 启动项目HTTP服务器，则应该在浏览器中看到功能完整的应用程序。</target>
        </trans-unit>
        <trans-unit id="29f04404e03c09595b5fbbccda8157911c3d6215" translate="yes" xml:space="preserve">
          <source>Next, create an &lt;code&gt;addNewItem()&lt;/code&gt; method in the same component class:</source>
          <target state="translated">接下来，在相同的组件类中创建一个 &lt;code&gt;addNewItem()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="78e562daa79a3e6eee49cbc86a107a82253ffd45" translate="yes" xml:space="preserve">
          <source>Next, create an &lt;code&gt;app.module.ts&lt;/code&gt; file and add the following &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; class:</source>
          <target state="translated">接下来，创建一个 &lt;code&gt;app.module.ts&lt;/code&gt; 文件并添加以下 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 类：</target>
        </trans-unit>
        <trans-unit id="5a14bd3e0ad6c2dc72723721eabbe8211d5f62a4" translate="yes" xml:space="preserve">
          <source>Next, define the behavior that should happen when the user clicks the button. Recall that it's the parent, product list component&amp;mdash;not the product alerts component&amp;mdash;that acts when the child raises the event. In &lt;code&gt;product-list.component.ts&lt;/code&gt;, define an &lt;code&gt;onNotify()&lt;/code&gt; method, similar to the &lt;code&gt;share()&lt;/code&gt; method:</source>
          <target state="translated">接下来，定义用户单击按钮时应发生的行为。回想一下，在孩子引发事件时起作用的是父产品列表组件，而不是产品警报组件。在 &lt;code&gt;product-list.component.ts&lt;/code&gt; 中，定义一个 &lt;code&gt;onNotify()&lt;/code&gt; 方法，类似于 &lt;code&gt;share()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="159e605a4cc3040ba1837fc4fc9937ebc9ada940" translate="yes" xml:space="preserve">
          <source>Next, generate the supporting components.</source>
          <target state="translated">接下来,生成配套组件。</target>
        </trans-unit>
        <trans-unit id="02c66793fe3c348fdc1c4c83dd6b949eef1aae70" translate="yes" xml:space="preserve">
          <source>Next, implement the &lt;code&gt;&lt;a href=&quot;../api/router/route#canActivateChild&quot;&gt;canActivateChild&lt;/a&gt;()&lt;/code&gt; method which takes the same arguments as the &lt;code&gt;&lt;a href=&quot;../api/router/route#canActivate&quot;&gt;canActivate&lt;/a&gt;()&lt;/code&gt; method: an &lt;code&gt;&lt;a href=&quot;../api/router/activatedroutesnapshot&quot;&gt;ActivatedRouteSnapshot&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routerstatesnapshot&quot;&gt;RouterStateSnapshot&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../api/router/route#canActivateChild&quot;&gt;canActivateChild&lt;/a&gt;()&lt;/code&gt; method can return an &lt;code&gt;Observable&amp;lt;boolean&amp;gt;&lt;/code&gt; or &lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt; for async checks and a &lt;code&gt;boolean&lt;/code&gt; for sync checks. This one returns a &lt;code&gt;boolean&lt;/code&gt;:</source>
          <target state="translated">接着，实施 &lt;code&gt;&lt;a href=&quot;../api/router/route#canActivateChild&quot;&gt;canActivateChild&lt;/a&gt;()&lt;/code&gt; 方法，该方法取相同的参数 &lt;code&gt;&lt;a href=&quot;../api/router/route#canActivate&quot;&gt;canActivate&lt;/a&gt;()&lt;/code&gt; 方法：一个 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroutesnapshot&quot;&gt;ActivatedRouteSnapshot&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/router/routerstatesnapshot&quot;&gt;RouterStateSnapshot&lt;/a&gt;&lt;/code&gt; 。所述 &lt;code&gt;&lt;a href=&quot;../api/router/route#canActivateChild&quot;&gt;canActivateChild&lt;/a&gt;()&lt;/code&gt; 方法可以返回一个 &lt;code&gt;Observable&amp;lt;boolean&amp;gt;&lt;/code&gt; 或 &lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt; 为异步检查和一个 &lt;code&gt;boolean&lt;/code&gt; 用于同步检查。这个返回一个 &lt;code&gt;boolean&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="27cf489723cd42794c2d0d2cfde2eff21f41545b" translate="yes" xml:space="preserve">
          <source>Next, implement the &lt;code&gt;canActivateChild()&lt;/code&gt; method which takes the same arguments as the &lt;code&gt;canActivate()&lt;/code&gt; method: an &lt;code&gt;&lt;a href=&quot;../api/router/activatedroutesnapshot&quot;&gt;ActivatedRouteSnapshot&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routerstatesnapshot&quot;&gt;RouterStateSnapshot&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;canActivateChild()&lt;/code&gt; method can return an &lt;code&gt;Observable&amp;lt;boolean|&lt;a href=&quot;../api/router/urltree&quot;&gt;UrlTree&lt;/a&gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;Promise&amp;lt;boolean|&lt;a href=&quot;../api/router/urltree&quot;&gt;UrlTree&lt;/a&gt;&amp;gt;&lt;/code&gt; for async checks and a &lt;code&gt;boolean&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; for sync checks. This one returns either &lt;code&gt;true&lt;/code&gt; to allow the user to access the admin feature module or &lt;code&gt;&lt;a href=&quot;../api/router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; to redirect the user to the login page instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce7cdbebf308621f531b33a618f458772e93ac6" translate="yes" xml:space="preserve">
          <source>Next, import the &lt;code&gt;AdminModule&lt;/code&gt; into &lt;code&gt;app.module.ts&lt;/code&gt; and add it to the &lt;code&gt;imports&lt;/code&gt; array to register the admin routes.</source>
          <target state="translated">接下来，将 &lt;code&gt;AdminModule&lt;/code&gt; 导入 &lt;code&gt;app.module.ts&lt;/code&gt; 并将其添加到 &lt;code&gt;imports&lt;/code&gt; 数组中以注册管理路由。</target>
        </trans-unit>
        <trans-unit id="1ba62cbb6eeadeb0cb95f3e2261d2a087737673f" translate="yes" xml:space="preserve">
          <source>Next, in the &lt;code&gt;AppComponent&lt;/code&gt;, &lt;code&gt;app.component.html&lt;/code&gt;, add the tag &lt;code&gt;&amp;lt;app-customer-dashboard&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">接下来，在 &lt;code&gt;AppComponent&lt;/code&gt; ， &lt;code&gt;app.component.html&lt;/code&gt; 中，添加标签 &lt;code&gt;&amp;lt;app-customer-dashboard&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ceee8a4c64453c5c9dc92d2e36c028a333a12d42" translate="yes" xml:space="preserve">
          <source>Next, in the child component template, add the following:</source>
          <target state="translated">接下来,在子组件模板中,添加以下内容。</target>
        </trans-unit>
        <trans-unit id="437afaf0aff86e6b37d1987d254eecd1a1c7956e" translate="yes" xml:space="preserve">
          <source>Next, in the component that you want to navigate to, import the following members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51909826c31cf2634e91d573fc593a2ca3b40e50" translate="yes" xml:space="preserve">
          <source>Next, in the parent component class, &lt;code&gt;app.component.ts&lt;/code&gt;, designate a value for &lt;code&gt;currentItem&lt;/code&gt;:</source>
          <target state="translated">接下来，在父组件类 &lt;code&gt;app.component.ts&lt;/code&gt; 中，为 &lt;code&gt;currentItem&lt;/code&gt; 指定一个值：</target>
        </trans-unit>
        <trans-unit id="733d4f56880fe5b33b54901da865905016d628e2" translate="yes" xml:space="preserve">
          <source>Next, in the parent's template, bind the parent's method to the child's event. Put the child selector, here &lt;code&gt;&amp;lt;app-item-output&amp;gt;&lt;/code&gt;, within the parent component's template, &lt;code&gt;app.component.html&lt;/code&gt;.</source>
          <target state="translated">接下来，在父级模板中，将父级方法绑定到子级事件。将子选择器（这里 &lt;code&gt;&amp;lt;app-item-output&amp;gt;&lt;/code&gt; ）放在父组件的模板 &lt;code&gt;app.component.html&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="16bbcfa504ba8fa467c5555baf8b098e75790d4b" translate="yes" xml:space="preserve">
          <source>Next, inject the child &lt;code&gt;CountdownTimerComponent&lt;/code&gt; into the private &lt;code&gt;timerComponent&lt;/code&gt; property via the &lt;code&gt;@&lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt; property decoration.</source>
          <target state="translated">接下来，通过 &lt;code&gt;@&lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;属性修饰将子 &lt;code&gt;CountdownTimerComponent&lt;/code&gt; 注入到私有 &lt;code&gt;timerComponent&lt;/code&gt; 属性中。</target>
        </trans-unit>
        <trans-unit id="f71324dbd9f317e01f00a710d2d8e578d23b46a8" translate="yes" xml:space="preserve">
          <source>Next, make a change to the application, and watch the service worker install the update.</source>
          <target state="translated">接下来,对应用程序进行更改,并观看服务人员安装更新。</target>
        </trans-unit>
        <trans-unit id="acfae61a91a6b0c1993304859ab3d89fe934c5b5" translate="yes" xml:space="preserve">
          <source>Next, make sure your &lt;code&gt;child.component.html&lt;/code&gt; contains the following:</source>
          <target state="translated">接下来，确保您的 &lt;code&gt;child.component.html&lt;/code&gt; 包含以下内容：</target>
        </trans-unit>
        <trans-unit id="39b90f5c6fb337d84f53f2af04d454c24099f6d0" translate="yes" xml:space="preserve">
          <source>Next, open &lt;code&gt;admin-routing.module.ts&lt;/code&gt;, import the &lt;code&gt;AuthGuard&lt;/code&gt; class, and update the admin route with a &lt;code&gt;&lt;a href=&quot;../api/router/route#canActivate&quot;&gt;canActivate&lt;/a&gt;&lt;/code&gt; guard property that references it:</source>
          <target state="translated">接下来，打开 &lt;code&gt;admin-routing.module.ts&lt;/code&gt; ，导入 &lt;code&gt;AuthGuard&lt;/code&gt; 类，并使用引用它的 &lt;code&gt;&lt;a href=&quot;../api/router/route#canActivate&quot;&gt;canActivate&lt;/a&gt;&lt;/code&gt; Guard属性更新管理路由：</target>
        </trans-unit>
        <trans-unit id="4bcd6930b2e49c850175559793b3ede563e638de" translate="yes" xml:space="preserve">
          <source>Next, open &lt;code&gt;admin-routing.module.ts&lt;/code&gt;, import the &lt;code&gt;AuthGuard&lt;/code&gt; class, and update the admin route with a &lt;code&gt;canActivate&lt;/code&gt; guard property that references it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a49cf86820a39d8d891d616d600b6841ae4c90" translate="yes" xml:space="preserve">
          <source>Next, pass this request object to the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#request&quot;&gt;HttpClient.request()&lt;/a&gt;&lt;/code&gt; method, which returns an &lt;code&gt;Observable&lt;/code&gt; of &lt;code&gt;HttpEvents&lt;/code&gt; (the same events processed by &lt;a href=&quot;http#interceptor-events&quot;&gt;interceptors&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9238d3dd88f48f6f024b03a222d53eac661496c6" translate="yes" xml:space="preserve">
          <source>Next, pass this request object to the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#request&quot;&gt;HttpClient.request()&lt;/a&gt;&lt;/code&gt; method, which returns an &lt;code&gt;Observable&lt;/code&gt; of &lt;code&gt;HttpEvents&lt;/code&gt;, the same events processed by interceptors:</source>
          <target state="translated">接着，通过此请求对象到 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#request&quot;&gt;HttpClient.request()&lt;/a&gt;&lt;/code&gt; 方法，后者返回一个 &lt;code&gt;Observable&lt;/code&gt; 的 &lt;code&gt;HttpEvents&lt;/code&gt; ，通过拦截器处理相同的事件：</target>
        </trans-unit>
        <trans-unit id="433326a8e38824bb8f9a3cd7191eee156cde4fcf" translate="yes" xml:space="preserve">
          <source>Next, provide the interceptor in the providers for the server &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">接下来，在服务器 &lt;code&gt;AppModule&lt;/code&gt; 的提供程序中提供拦截器。</target>
        </trans-unit>
        <trans-unit id="7081de89008cec58d5674fcc6bbf610061f2490f" translate="yes" xml:space="preserve">
          <source>Next, specify that interface as the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; call's type parameter in the service.</source>
          <target state="translated">接下来，在服务中将该接口指定为 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; 调用的类型参数。</target>
        </trans-unit>
        <trans-unit id="e5070e8750ad2ec511978e2fe0b2557afd4ace02" translate="yes" xml:space="preserve">
          <source>Next, still in the &lt;code&gt;AppModule&lt;/code&gt;, add &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;imports&lt;/code&gt; array:</source>
          <target state="translated">接下来，仍然在 &lt;code&gt;AppModule&lt;/code&gt; 中，将 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 添加到 &lt;code&gt;imports&lt;/code&gt; 数组中：</target>
        </trans-unit>
        <trans-unit id="0c52312ed7a332374c1934fe59d2405fafdb84b4" translate="yes" xml:space="preserve">
          <source>Next, still in the child, decorate a property with &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; in the component class. The following example &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; is called &lt;code&gt;newItemEvent&lt;/code&gt; and its type is &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;, which means it's an event.</source>
          <target state="translated">接下来，仍然在子级中，使用组件类中的 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 装饰属性。以下示例 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 名为 &lt;code&gt;newItemEvent&lt;/code&gt; ，其类型为 &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; ，这意味着它是一个事件。</target>
        </trans-unit>
        <trans-unit id="e01f7c08a26720fb75063452fd9b610ef7552b09" translate="yes" xml:space="preserve">
          <source>Next, take a look at &lt;code&gt;customers.module.ts&lt;/code&gt;. If you&amp;rsquo;re using the CLI and following the steps outlined in this page, you don&amp;rsquo;t have to do anything here.</source>
          <target state="translated">接下来，看看 &lt;code&gt;customers.module.ts&lt;/code&gt; 。如果您使用的是CLI并按照此页面中概述的步骤进行操作，则无需在此处执行任何操作。</target>
        </trans-unit>
        <trans-unit id="9a2ee25a23256be93a91a2082abdd391edc78b46" translate="yes" xml:space="preserve">
          <source>Next, take a look at the &lt;code&gt;customers.module.ts&lt;/code&gt; file. If you&amp;rsquo;re using the CLI and following the steps outlined in this page, you don&amp;rsquo;t have to do anything here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35af59e41a5deccc29e482c85e1d22e41d6f38c7" translate="yes" xml:space="preserve">
          <source>Next, the code declares the property of &lt;code&gt;parentItem&lt;/code&gt; in its component class, in this case &lt;code&gt;AppComponent&lt;/code&gt;. In this example the type of &lt;code&gt;childItem&lt;/code&gt; is &lt;code&gt;string&lt;/code&gt;, so &lt;code&gt;parentItem&lt;/code&gt; needs to be a string. Here, &lt;code&gt;parentItem&lt;/code&gt; has the string value of &lt;code&gt;lamp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d0d63dcc69960806f54f071a944f232044d099" translate="yes" xml:space="preserve">
          <source>Next, there are two methods, &lt;code&gt;dec()&lt;/code&gt; to decrease the font size and &lt;code&gt;inc()&lt;/code&gt; to increase the font size. These two methods use &lt;code&gt;resize()&lt;/code&gt; to change the value of the &lt;code&gt;size&lt;/code&gt; property within min/max value constraints, and to emit an event that conveys the new &lt;code&gt;size&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a052540461ab5d2b2db93b6978d55fc263fc2ce" translate="yes" xml:space="preserve">
          <source>Next, to provide better user experience, we show an appropriate error message when the form is invalid.</source>
          <target state="translated">其次,为了提供更好的用户体验,当表单无效时,我们会显示相应的错误信息。</target>
        </trans-unit>
        <trans-unit id="98110e1becf59d469e0d99a7be1756f248e72da0" translate="yes" xml:space="preserve">
          <source>Next, update the &lt;code&gt;HeroesModule&lt;/code&gt; metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccef43a8758ac0145668f499e8bec5e8aac64b3a" translate="yes" xml:space="preserve">
          <source>Next, update the &lt;code&gt;app.module.ts&lt;/code&gt; file by removing &lt;code&gt;RouterModule.forRoot&lt;/code&gt; in the &lt;code&gt;imports&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e950c928e2e7ecce05f57f8953855497127af3" translate="yes" xml:space="preserve">
          <source>Next, update the &lt;code&gt;app.module.ts&lt;/code&gt; file, removing &lt;code&gt;RouterModule.forRoot&lt;/code&gt; in the &lt;code&gt;imports&lt;/code&gt; array.</source>
          <target state="translated">接下来，更新 &lt;code&gt;app.module.ts&lt;/code&gt; 文件，在 &lt;code&gt;imports&lt;/code&gt; 数组中删除 &lt;code&gt;RouterModule.forRoot&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b2be34383d8449d30e79266ca4b72b931faa752" translate="yes" xml:space="preserve">
          <source>Next, update the template. At the moment it displays the hero's &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;. Fix that to display only the hero's &lt;code&gt;name&lt;/code&gt; property.</source>
          <target state="translated">接下来，更新模板。目前，它会显示英雄的 &lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 。修复该问题以仅显示英雄的 &lt;code&gt;name&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="1f382d5fee30f4adf3e70cf9278956bd6336fceb" translate="yes" xml:space="preserve">
          <source>Next, we have to add the directive to the html template. Since the validator must be registered at the highest level in the form, we put the directive on the &lt;code&gt;form&lt;/code&gt; tag.</source>
          <target state="translated">接下来，我们必须将指令添加到html模板中。由于验证器必须在表单的最高级别注册，因此我们将指令放在 &lt;code&gt;form&lt;/code&gt; 标记上。</target>
        </trans-unit>
        <trans-unit id="a45433b56d573a43bfea8e8b40a108062db3dc5f" translate="yes" xml:space="preserve">
          <source>Next, you&amp;rsquo;ll need a feature module with a component to route to. To make one, enter the following command in the terminal, where &lt;code&gt;customers&lt;/code&gt; is the name of the feature module, and &lt;code&gt;customer-list&lt;/code&gt; is the route path for loading the &lt;code&gt;customers&lt;/code&gt; component:</source>
          <target state="translated">接下来，您将需要一个带有要路由到的组件的功能模块。要创建一个，请在终端中输入以下命令，其中 &lt;code&gt;customers&lt;/code&gt; 是功能模块的名称， &lt;code&gt;customer-list&lt;/code&gt; 是加载 &lt;code&gt;customers&lt;/code&gt; 组件的路由路径：</target>
        </trans-unit>
        <trans-unit id="30a4207178eea2c03fa73fdeeb75c2e0dbe927e3" translate="yes" xml:space="preserve">
          <source>Next, you&amp;rsquo;ll need a feature module with a component to route to. To make one, enter the following command in the terminal, where &lt;code&gt;customers&lt;/code&gt; is the name of the feature module. The path for loading the &lt;code&gt;customers&lt;/code&gt; feature modules is also &lt;code&gt;customers&lt;/code&gt; because it is specified with the &lt;code&gt;--route&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a96057b587190d68c3d35e191fa2ede8a5fda71" translate="yes" xml:space="preserve">
          <source>Next, you'll add a checkout form at the bottom of the &quot;Cart&quot; page.</source>
          <target state="translated">接下来,你将在 &quot;购物车 &quot;页面的底部添加一个结账表单。</target>
        </trans-unit>
        <trans-unit id="07fddc141a40d546f782e352de75a718fa77dd61" translate="yes" xml:space="preserve">
          <source>Next, you'll bootstrap the application as a &lt;em&gt;hybrid application&lt;/em&gt; that supports both AngularJS and Angular components. After that, you can start converting the individual pieces to Angular.</source>
          <target state="translated">接下来，您将引导该应用程序为同时支持AngularJS和Angular组件的&lt;em&gt;混合应用程序&lt;/em&gt;。之后，您可以开始将单个零件转换为Angular。</target>
        </trans-unit>
        <trans-unit id="2f6a7f292bb2d34dbd24f570eb6ae36cda4a9b60" translate="yes" xml:space="preserve">
          <source>Next, you'll update the &lt;code&gt;HeroesModule&lt;/code&gt; metadata.</source>
          <target state="translated">接下来，您将更新 &lt;code&gt;HeroesModule&lt;/code&gt; 元数据。</target>
        </trans-unit>
        <trans-unit id="ea8bc738c3f2744292fff210de01e1a19b19be37" translate="yes" xml:space="preserve">
          <source>Next, you're targeting the &lt;code&gt;viewContainerRef&lt;/code&gt; that exists on this specific instance of the component. How do you know it's this specific instance? Because it's referring to &lt;code&gt;adHost&lt;/code&gt; and &lt;code&gt;adHost&lt;/code&gt; is the directive you set up earlier to tell Angular where to insert dynamic components.</source>
          <target state="translated">接下来，您将定位在该组件的特定实例上存在的 &lt;code&gt;viewContainerRef&lt;/code&gt; 。您怎么知道这是特定实例？因为它是指 &lt;code&gt;adHost&lt;/code&gt; ， &lt;code&gt;adHost&lt;/code&gt; 是您之前设置的指令，用于告诉Angular在哪里插入动态组件。</target>
        </trans-unit>
        <trans-unit id="930eb31163a442c119ddb1c29beebf413aa587d6" translate="yes" xml:space="preserve">
          <source>NgClass</source>
          <target state="translated">NgClass</target>
        </trans-unit>
        <trans-unit id="0d21e79d490fb36429b0b5383645cbd92e7c485d" translate="yes" xml:space="preserve">
          <source>NgClassBase</source>
          <target state="translated">NgClassBase</target>
        </trans-unit>
        <trans-unit id="cd9579a5feabe299336ff967716146f9e748e162" translate="yes" xml:space="preserve">
          <source>NgComponentOutlet</source>
          <target state="translated">NgComponentOutlet</target>
        </trans-unit>
        <trans-unit id="3a340289aa623d264812176c87b9df65b745eace" translate="yes" xml:space="preserve">
          <source>NgControl</source>
          <target state="translated">NgControl</target>
        </trans-unit>
        <trans-unit id="b3e08af5e72c076c24ba32a201a892e6632cb131" translate="yes" xml:space="preserve">
          <source>NgControlStatus</source>
          <target state="translated">NgControlStatus</target>
        </trans-unit>
        <trans-unit id="b51a5a43dd26d66af41091781019c47195f9b60a" translate="yes" xml:space="preserve">
          <source>NgControlStatusGroup</source>
          <target state="translated">NgControlStatusGroup</target>
        </trans-unit>
        <trans-unit id="69619e32876644e9b1f5a2e22a9ef35084b08aca" translate="yes" xml:space="preserve">
          <source>NgElement</source>
          <target state="translated">NgElement</target>
        </trans-unit>
        <trans-unit id="835f1ff7eab741dfdcaf682956ac9649ed577345" translate="yes" xml:space="preserve">
          <source>NgElementConfig</source>
          <target state="translated">NgElementConfig</target>
        </trans-unit>
        <trans-unit id="98abd1d6e9741a567557dd4f65dccdf66d959765" translate="yes" xml:space="preserve">
          <source>NgElementConstructor</source>
          <target state="translated">NgElementConstructor</target>
        </trans-unit>
        <trans-unit id="836c0c8ba2c663fc3e59a2e9222f0246032f1f34" translate="yes" xml:space="preserve">
          <source>NgElementStrategy</source>
          <target state="translated">NgElementStrategy</target>
        </trans-unit>
        <trans-unit id="d381bec5e272dc31ba3247a1a00ea382b9a3ed51" translate="yes" xml:space="preserve">
          <source>NgElementStrategyEvent</source>
          <target state="translated">NgElementStrategyEvent</target>
        </trans-unit>
        <trans-unit id="4fe27239d38e87b6129179225480ede5cd8cf8fe" translate="yes" xml:space="preserve">
          <source>NgElementStrategyFactory</source>
          <target state="translated">NgElementStrategyFactory</target>
        </trans-unit>
        <trans-unit id="91fd7e01a74c4728b2f19ff04aea391d049f80c2" translate="yes" xml:space="preserve">
          <source>NgForOf</source>
          <target state="translated">NgForOf</target>
        </trans-unit>
        <trans-unit id="4dc7fbec31709e6db39e0116840dab3ee663f864" translate="yes" xml:space="preserve">
          <source>NgForOfContext</source>
          <target state="translated">NgForOfContext</target>
        </trans-unit>
        <trans-unit id="9aa1623811bf5374405945b7fc6cbdf5180993ff" translate="yes" xml:space="preserve">
          <source>NgForm</source>
          <target state="translated">NgForm</target>
        </trans-unit>
        <trans-unit id="02e8e8f0c3435c34f302cb262a5526aa0b3f90c3" translate="yes" xml:space="preserve">
          <source>NgFormSelectorWarning</source>
          <target state="translated">NgFormSelectorWarning</target>
        </trans-unit>
        <trans-unit id="0d47835d748f32561764d51a4ebf5edaa996ec7e" translate="yes" xml:space="preserve">
          <source>NgIf</source>
          <target state="translated">NgIf</target>
        </trans-unit>
        <trans-unit id="53ee9a1d3ac7229df365ec02e217a300949c950a" translate="yes" xml:space="preserve">
          <source>NgIf case study</source>
          <target state="translated">Ngf案例研究</target>
        </trans-unit>
        <trans-unit id="2d6fa6fc357e35051e9a8ca6cfad6ca37f2129d7" translate="yes" xml:space="preserve">
          <source>NgIfContext</source>
          <target state="translated">NgIfContext</target>
        </trans-unit>
        <trans-unit id="ca835c7256b39ca88da22b194239e465c9067c74" translate="yes" xml:space="preserve">
          <source>NgIterable</source>
          <target state="translated">NgIterable</target>
        </trans-unit>
        <trans-unit id="bccec7397e5a239c6d5be00ac97ab89ed6fe7be6" translate="yes" xml:space="preserve">
          <source>NgLocaleLocalization</source>
          <target state="translated">NgLocaleLocalization</target>
        </trans-unit>
        <trans-unit id="67ebfc8308dd70a519e24ec7c811ccef8c29b7e6" translate="yes" xml:space="preserve">
          <source>NgLocalization</source>
          <target state="translated">NgLocalization</target>
        </trans-unit>
        <trans-unit id="44f2da1aebd949bcff94aed08f70c531acb21927" translate="yes" xml:space="preserve">
          <source>NgModel</source>
          <target state="translated">NgModel</target>
        </trans-unit>
        <trans-unit id="8718c24f215be269df2598be1217e4f3c822d28a" translate="yes" xml:space="preserve">
          <source>NgModelGroup</source>
          <target state="translated">NgModelGroup</target>
        </trans-unit>
        <trans-unit id="37a85283effde9e3159a93126429f93b63988ed9" translate="yes" xml:space="preserve">
          <source>NgModule</source>
          <target state="translated">NgModule</target>
        </trans-unit>
        <trans-unit id="c719e20685cae40b647e31dae4879f5d3a54f894" translate="yes" xml:space="preserve">
          <source>NgModule &lt;code&gt;providers&lt;/code&gt; array</source>
          <target state="translated">NgModule &lt;code&gt;providers&lt;/code&gt; 数组</target>
        </trans-unit>
        <trans-unit id="2751d87c0801c1eab05e6a0adc782aaa4e94ee39" translate="yes" xml:space="preserve">
          <source>NgModule API</source>
          <target state="translated">NgModule API</target>
        </trans-unit>
        <trans-unit id="29a55497c5b4b6f7344c403d19c2c5926065fa3a" translate="yes" xml:space="preserve">
          <source>NgModule FAQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b477384b8930ceaefd252e2e359370e78a8e4520" translate="yes" xml:space="preserve">
          <source>NgModule FAQs</source>
          <target state="translated">NgModule常见问题</target>
        </trans-unit>
        <trans-unit id="51eaf01e53c72676e2b6eb26a767d791f7fb0cf3" translate="yes" xml:space="preserve">
          <source>NgModule classes</source>
          <target state="translated">NgModule类</target>
        </trans-unit>
        <trans-unit id="c7c9934f0c6a24ed4a931d6152b5d880f2efc05c" translate="yes" xml:space="preserve">
          <source>NgModule for testing.</source>
          <target state="translated">NgModule用于测试。</target>
        </trans-unit>
        <trans-unit id="5d256907f0513eaec7592330caaf62b23fe30e80" translate="yes" xml:space="preserve">
          <source>NgModule metadata</source>
          <target state="translated">NgModule元数据</target>
        </trans-unit>
        <trans-unit id="6d4f86141e2372c863cb09375b2963d442ad5abf" translate="yes" xml:space="preserve">
          <source>NgModule metadata does the following:</source>
          <target state="translated">NgModule元数据的作用如下。</target>
        </trans-unit>
        <trans-unit id="fbfbd629d3532c0c5def39d3746df2b0de63b951" translate="yes" xml:space="preserve">
          <source>NgModule to install on the client side while using the &lt;code&gt;&lt;a href=&quot;platform-browser/transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; to transfer state from server to client.</source>
          <target state="translated">NgModule在客户端上安装，同时使用 &lt;code&gt;&lt;a href=&quot;platform-browser/transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; 将状态从服务器传输到客户端。</target>
        </trans-unit>
        <trans-unit id="3d7075e87c06ced7063e0b71ef4410314d05aa75" translate="yes" xml:space="preserve">
          <source>NgModule to install on the client side while using the &lt;code&gt;&lt;a href=&quot;transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; to transfer state from server to client.</source>
          <target state="translated">NgModule在客户端上安装，同时使用 &lt;code&gt;&lt;a href=&quot;transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; 将状态从服务器传输到客户端。</target>
        </trans-unit>
        <trans-unit id="6ec1e1bc15b91062588d5b99a08cf07a76b7ecce" translate="yes" xml:space="preserve">
          <source>NgModule to install on the server side while using the &lt;code&gt;&lt;a href=&quot;../platform-browser/transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; to transfer state from server to client.</source>
          <target state="translated">NgModule安装在服务器端，同时使用 &lt;code&gt;&lt;a href=&quot;../platform-browser/transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; 将状态从服务器转移到客户端。</target>
        </trans-unit>
        <trans-unit id="4ef7dee469070a640beccb48d4c3f3f99ab65599" translate="yes" xml:space="preserve">
          <source>NgModule to install on the server side while using the &lt;code&gt;&lt;a href=&quot;platform-browser/transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; to transfer state from server to client.</source>
          <target state="translated">NgModule安装在服务器端，同时使用 &lt;code&gt;&lt;a href=&quot;platform-browser/transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; 将状态从服务器转移到客户端。</target>
        </trans-unit>
        <trans-unit id="a7cee648f99bd3da3cdb1992b2ccb2673f5e2b1a" translate="yes" xml:space="preserve">
          <source>NgModuleFactory</source>
          <target state="translated">NgModuleFactory</target>
        </trans-unit>
        <trans-unit id="477b488285e5a668e6c4458c6708e191a4f4ffcb" translate="yes" xml:space="preserve">
          <source>NgModuleFactoryLoader</source>
          <target state="translated">NgModuleFactoryLoader</target>
        </trans-unit>
        <trans-unit id="24ae0c9b5f5ee9d08572d93983f958413a610153" translate="yes" xml:space="preserve">
          <source>NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory</source>
          <target state="translated">使用SystemJS加载NgModuleFactory的NgModuleFactoryLoader。</target>
        </trans-unit>
        <trans-unit id="5b38b75ac64edf288c87958d77f610c468c097c4" translate="yes" xml:space="preserve">
          <source>NgModuleRef</source>
          <target state="translated">NgModuleRef</target>
        </trans-unit>
        <trans-unit id="3aa15d9e9ccc479546d40db5fc5285973a466031" translate="yes" xml:space="preserve">
          <source>NgModules</source>
          <target state="translated">NgModules</target>
        </trans-unit>
        <trans-unit id="8b38c143e329e8014a252fd083bf2f3a43e15e8c" translate="yes" xml:space="preserve">
          <source>NgModules and JavaScript modules</source>
          <target state="translated">NgModules和JavaScript模块</target>
        </trans-unit>
        <trans-unit id="b70b73f6df8f1327b6458e4f41dc64fef86047ca" translate="yes" xml:space="preserve">
          <source>NgModules and components</source>
          <target state="translated">Ng模块和组件</target>
        </trans-unit>
        <trans-unit id="25f406cd8a0d03bbec9b10ae07063fbf7ddbd4f0" translate="yes" xml:space="preserve">
          <source>NgModules are a great way to organize an app and keep code related to a specific functionality or feature separate from other code. Use NgModules to consolidate &lt;a href=&quot;glossary#component&quot;&gt;components&lt;/a&gt;, &lt;a href=&quot;glossary#directive&quot;&gt;directives&lt;/a&gt;, and &lt;a href=&quot;glossary#pipe&quot;&gt;pipes&lt;/a&gt; into cohesive blocks of functionality. Focus each block on a feature or business domain, a workflow or navigation flow, a common collection of utilities, or one or more &lt;a href=&quot;glossary#provider&quot;&gt;providers&lt;/a&gt; for &lt;a href=&quot;glossary#service&quot;&gt;services&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad7d0bd2ccc1ce8cf9d363fc9f9ed9fe4b3a05d" translate="yes" xml:space="preserve">
          <source>NgModules are a great way to selectively aggregate classes from other NgModules and re-export them in a consolidated, convenience module.</source>
          <target state="translated">NgModules是一种很好的方式,可以有选择地聚合其他NgModules中的类,并将它们重新导出到一个综合的、方便的模块中。</target>
        </trans-unit>
        <trans-unit id="54c3135ae726bd7ade61dd62fbecc04c2da09b7e" translate="yes" xml:space="preserve">
          <source>NgModules are classes decorated with &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator&amp;rsquo;s &lt;code&gt;imports&lt;/code&gt; array tells Angular what other NgModules the current module needs. The modules in the &lt;code&gt;imports&lt;/code&gt; array are different than JavaScript modules because they are NgModules rather than regular JavaScript modules. Classes with an &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator are by convention kept in their own files, but what makes them an &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; isn&amp;rsquo;t being in their own file, like JavaScript modules; it&amp;rsquo;s the presence of &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; and its metadata.</source>
          <target state="translated">NgModules是用 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 装饰的类。该 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 装饰的 &lt;code&gt;imports&lt;/code&gt; 阵列告诉角还有什么其他NgModules当前模块的需求。中模块 &lt;code&gt;imports&lt;/code&gt; ，因为他们NgModules，而不是常规的JavaScript模块阵列是不是JavaScript的模块不同。按照惯例，带有 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 装饰器的类保存在自己的文件中，但是使它们成为 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 的原因却不在JavaScript文件之类的自己的文件中；它是 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 及其元数据的存在。</target>
        </trans-unit>
        <trans-unit id="b4911a8df8b9a60b2d04af43909cad3497a0627b" translate="yes" xml:space="preserve">
          <source>NgModules are typically named after the file in which the exported thing is defined. For example, the Angular &lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt; class belongs to a feature module named &lt;code&gt;date_pipe&lt;/code&gt; in the file &lt;code&gt;date_pipe.ts&lt;/code&gt;. You import them from an Angular &lt;a href=&quot;glossary#scoped-package&quot;&gt;scoped package&lt;/a&gt; such as &lt;code&gt;@angular/core&lt;/code&gt;.</source>
          <target state="translated">NgModule通常以定义了导出内容的文件命名。例如，Angular &lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;类属于文件 &lt;code&gt;date_pipe.ts&lt;/code&gt; 中名为 &lt;code&gt;date_pipe&lt;/code&gt; 的要素模块。您可以从Angular &lt;a href=&quot;glossary#scoped-package&quot;&gt;作用域的包（&lt;/a&gt;例如 &lt;code&gt;@angular/core&lt;/code&gt; 导入它们。</target>
        </trans-unit>
        <trans-unit id="a8f03b79bd627a2c287c8259f3048620ba16a568" translate="yes" xml:space="preserve">
          <source>NgModules consolidate components, directives, and pipes into cohesive blocks of functionality, each focused on a feature area, application business domain, workflow, or common collection of utilities.</source>
          <target state="translated">NgModules将组件、指令和管道整合成具有凝聚力的功能块,每个功能块都集中在一个功能领域、应用业务领域、工作流或公用工具集合上。</target>
        </trans-unit>
        <trans-unit id="af643352073d83c59890eb84260d804d31e0be0f" translate="yes" xml:space="preserve">
          <source>NgModules help organize an application into cohesive blocks of functionality.</source>
          <target state="translated">NgModules有助于将一个应用程序组织成有凝聚力的功能块。</target>
        </trans-unit>
        <trans-unit id="d4f6a7850f2ca66c7a969e4238c4738a152c5e4d" translate="yes" xml:space="preserve">
          <source>NgModules or components that are loaded on launch are called eager-loaded, to distinguish them from those that are loaded at run time (lazy-loaded). See &lt;a href=&quot;glossary#lazy-load&quot;&gt;lazy loading&lt;/a&gt;.</source>
          <target state="translated">在启动时加载的NgModule或组件称为eager-loaded，以将它们与在运行时加载的组件或组件（延迟加载）区分开。请参阅&lt;a href=&quot;glossary#lazy-load&quot;&gt;延迟加载&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62163a6746cd8611053224f510e2d133d17b33a4" translate="yes" xml:space="preserve">
          <source>NgModules provide a &lt;em&gt;compilation context&lt;/em&gt; for their components. A root NgModule always has a root component that is created during bootstrap, but any NgModule can include any number of additional components, which can be loaded through the router or created through the template. The components that belong to an NgModule share a compilation context.</source>
          <target state="translated">NgModules 为其组件提供了&lt;em&gt;编译上下文&lt;/em&gt;。根NgModule始终具有在引导过程中创建的根组件，但是任何NgModule都可以包括任意数量的其他组件，这些组件可以通过路由器加载或通过模板创建。属于NgModule的组件共享一个编译上下文。</target>
        </trans-unit>
        <trans-unit id="3d52094431f1a451325421f288758094e3331fff" translate="yes" xml:space="preserve">
          <source>NgModules, defined with the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator, serve the same purpose:</source>
          <target state="translated">用 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 装饰器定义的NgModules具有相同的目的：</target>
        </trans-unit>
        <trans-unit id="3329474efd238458b027081acbffcc8a300263e7" translate="yes" xml:space="preserve">
          <source>NgModules: Classes with metadata for compiling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecddffd553c00625c6d1948c47408a7bc2694041" translate="yes" xml:space="preserve">
          <source>NgPlural</source>
          <target state="translated">NgPlural</target>
        </trans-unit>
        <trans-unit id="33e70ef97ddaac0d361c0f2e5595fdcc13aeb0b9" translate="yes" xml:space="preserve">
          <source>NgPluralCase</source>
          <target state="translated">NgPluralCase</target>
        </trans-unit>
        <trans-unit id="e95570f3c97debdfeeba52d6ae0c387d6d857374" translate="yes" xml:space="preserve">
          <source>NgProbeToken</source>
          <target state="translated">NgProbeToken</target>
        </trans-unit>
        <trans-unit id="4dce6f191737f1f14519d03138656f14a86f9c04" translate="yes" xml:space="preserve">
          <source>NgSelectOption</source>
          <target state="translated">NgSelectOption</target>
        </trans-unit>
        <trans-unit id="035fa85010deff8f88890ceff27680fb494ca12e" translate="yes" xml:space="preserve">
          <source>NgStyle</source>
          <target state="translated">NgStyle</target>
        </trans-unit>
        <trans-unit id="6be560439ddbed642468cfe1832ecbd191286f36" translate="yes" xml:space="preserve">
          <source>NgStyleBase</source>
          <target state="translated">NgStyleBase</target>
        </trans-unit>
        <trans-unit id="c6808c2a4dadb4d167ed51609818e1586d73ba91" translate="yes" xml:space="preserve">
          <source>NgSwitch</source>
          <target state="translated">NgSwitch</target>
        </trans-unit>
        <trans-unit id="75e734dbca4c572780c0f22ca962996575a8fe74" translate="yes" xml:space="preserve">
          <source>NgSwitch is like the JavaScript &lt;code&gt;switch&lt;/code&gt; statement. It displays one element from among several possible elements, based on a switch condition. Angular puts only the selected element into the DOM.</source>
          <target state="translated">NgSwitch类似于JavaScript &lt;code&gt;switch&lt;/code&gt; 语句。它根据切换条件显示几个可能元素中的一个元素。Angular仅将所选元素放入DOM。</target>
        </trans-unit>
        <trans-unit id="489a9f825ab046358569d6f7ba386545da71ed2e" translate="yes" xml:space="preserve">
          <source>NgSwitchCase</source>
          <target state="translated">NgSwitchCase</target>
        </trans-unit>
        <trans-unit id="2c6d09678694058cf231ebcbf7f5dbf708b69abe" translate="yes" xml:space="preserve">
          <source>NgSwitchDefault</source>
          <target state="translated">NgSwitchDefault</target>
        </trans-unit>
        <trans-unit id="172dadbce868c96252d96cade7229e7bd5b8a58d" translate="yes" xml:space="preserve">
          <source>NgTemplateOutlet</source>
          <target state="translated">NgTemplateOutlet</target>
        </trans-unit>
        <trans-unit id="d485146c2e39cc1a08c6b776692e4bf78a47870a" translate="yes" xml:space="preserve">
          <source>NgZone</source>
          <target state="translated">NgZone</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="be9710b3ab6837da4f52eccc6e0f5d30d6cb9090" translate="yes" xml:space="preserve">
          <source>No Angular &lt;em&gt;filter&lt;/em&gt; or &lt;em&gt;orderBy&lt;/em&gt; filters</source>
          <target state="translated">没有Angular &lt;em&gt;过滤器&lt;/em&gt;或&lt;em&gt;orderBy&lt;/em&gt;过滤器</target>
        </trans-unit>
        <trans-unit id="818604a049b51e447ca9452e0724b91621cdd14d" translate="yes" xml:space="preserve">
          <source>No arrow functions</source>
          <target state="translated">无箭头功能</target>
        </trans-unit>
        <trans-unit id="93fd1717bd078eecc13bf4593e2c07b31921ef32" translate="yes" xml:space="preserve">
          <source>No brackets. No parentheses. Just &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; set to a string.</source>
          <target state="translated">没有括号。没有括号。仅 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 设置为字符串。</target>
        </trans-unit>
        <trans-unit id="e0e6790b758e9ad2708594454268be14a1fb2e80" translate="yes" xml:space="preserve">
          <source>No directive or component will implement all of the lifecycle hooks. Angular only calls a directive/component hook method &lt;em&gt;if it is defined&lt;/em&gt;.</source>
          <target state="translated">没有指令或组件将实现所有生命周期挂钩。Angular仅&lt;em&gt;在定义&lt;/em&gt;了指令/组件挂钩方法的&lt;em&gt;情况下&lt;/em&gt;才调用&lt;em&gt;它&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1217b7240bdd90bc874cf17d351cb5803a44e70c" translate="yes" xml:space="preserve">
          <source>No longer has an effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc4d71e03b80c5dedb2c76055f5e5fd3665e501" translate="yes" xml:space="preserve">
          <source>No longer needed with Ivy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c7d340737ed1e90c7a884ddd030908f49f4467" translate="yes" xml:space="preserve">
          <source>No longer required to disable CSS extraction during development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33dabb786685e6c8a1c90d4a92084eb79424856" translate="yes" xml:space="preserve">
          <source>No need to wait for content updates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19791c97515fc46a0f70d4d720439311b44e04dd" translate="yes" xml:space="preserve">
          <source>No pipe</source>
          <target state="translated">没有管子</target>
        </trans-unit>
        <trans-unit id="d01cbbaac61e63c969eafc5bea6f8bf228e6b366" translate="yes" xml:space="preserve">
          <source>No preloading at all which is the default. Lazy loaded feature areas are still loaded on demand.</source>
          <target state="translated">完全没有预加载,这是默认的。懒惰加载的功能区仍然按需加载。</target>
        </trans-unit>
        <trans-unit id="7c7471480762563740871584b9b53195c60bd948" translate="yes" xml:space="preserve">
          <source>No preloading, which is the default. Lazy loaded feature areas are still loaded on-demand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016f7b6391a97aa02bddbd40845410a8c78ab7db" translate="yes" xml:space="preserve">
          <source>No support for the bitwise operators such as &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;&amp;amp;&lt;/code&gt;</source>
          <target state="translated">不支持 &lt;code&gt;|&lt;/code&gt; 等位运算符 和 &lt;code&gt;&amp;amp;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd3e4268add64f72ae4ddbdf062a3d7555bc454b" translate="yes" xml:space="preserve">
          <source>No unidirectional flow worries with &lt;code&gt;AfterContent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AfterContent&lt;/code&gt; 无需单向流</target>
        </trans-unit>
        <trans-unit id="a17d14eafac1937732100c20aae31c6593b0b98c" translate="yes" xml:space="preserve">
          <source>No visible side effects</source>
          <target state="translated">无明显副作用</target>
        </trans-unit>
        <trans-unit id="5587ffa9dbf62fd17a4559efe1a31d50d010d763" translate="yes" xml:space="preserve">
          <source>No-op method to remove the form array.</source>
          <target state="translated">移除表格数组的无操作方法。</target>
        </trans-unit>
        <trans-unit id="a462ef1cea806d3dcc1ea1738cd91a1aeedf0b36" translate="yes" xml:space="preserve">
          <source>No-op method to remove the form group.</source>
          <target state="translated">无操作方法删除表格组。</target>
        </trans-unit>
        <trans-unit id="6a8da9a88f886e4153126f39d675bd3b766cccb9" translate="yes" xml:space="preserve">
          <source>NoPreloading</source>
          <target state="translated">NoPreloading</target>
        </trans-unit>
        <trans-unit id="1710b1a221c7361f089e2a52fcf70b3fd33585f1" translate="yes" xml:space="preserve">
          <source>Nobody reads the &lt;code&gt;appUnless&lt;/code&gt; property so it doesn't need a getter.</source>
          <target state="translated">没有人读取 &lt;code&gt;appUnless&lt;/code&gt; 属性，因此不需要吸气剂。</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="2e417e3eedf2707d935f79ec1cd1ef89ab55a380" translate="yes" xml:space="preserve">
          <source>Non-Angular classes and objects, such as strings, numbers, functions, entity models, configurations, business logic, and helper classes</source>
          <target state="translated">非Angular类和对象,如字符串、数字、函数、实体模型、配置、业务逻辑和帮助类。</target>
        </trans-unit>
        <trans-unit id="218b9057d9cc78dd657173bed27a6200c0a95fae" translate="yes" xml:space="preserve">
          <source>Non-Angular classes and objects, such as strings, numbers, functions, entity models, configurations, business logic, and helper classes.</source>
          <target state="translated">非Angular类和对象,如字符串、数字、函数、实体模型、配置、业务逻辑和帮助类。</target>
        </trans-unit>
        <trans-unit id="cb4967cfbd4130cd4553ec35331b3a3ab44adc71" translate="yes" xml:space="preserve">
          <source>Non-Angular elements named with dash case (&lt;code&gt;-&lt;/code&gt;).</source>
          <target state="translated">以破折号（ &lt;code&gt;-&lt;/code&gt; ）命名的非角度元素。</target>
        </trans-unit>
        <trans-unit id="4b8e6a57d88b7ccf4c24e15e2a0995483d56359b" translate="yes" xml:space="preserve">
          <source>Non-CSS style files</source>
          <target state="translated">非CSS样式文件</target>
        </trans-unit>
        <trans-unit id="4341230c37df0f830ce3196200bdc4eaa8b1649d" translate="yes" xml:space="preserve">
          <source>Non-class dependencies</source>
          <target state="translated">非类依赖性</target>
        </trans-unit>
        <trans-unit id="ded852d4e83379796827d611754f95a7036735ee" translate="yes" xml:space="preserve">
          <source>Non-declarable objects such as services, functions, configurations, and entity models.</source>
          <target state="translated">不可声明的对象,如服务、功能、配置和实体模型。</target>
        </trans-unit>
        <trans-unit id="8d47a7281ff53fb1a6797410ef0833cdc906ffa9" translate="yes" xml:space="preserve">
          <source>Non-null type assertion operator</source>
          <target state="translated">非空类型断言运算符</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="1d352db5f8dd17cd63b401e2ed0e9c468bffd2e7" translate="yes" xml:space="preserve">
          <source>None of the &lt;em&gt;class-only&lt;/em&gt; tests above can answer key questions about how the components actually behave on screen.</source>
          <target state="translated">在没有&lt;em&gt;唯一一类，&lt;/em&gt;测试以上可以回答有关组件实际上是如何在屏幕上表现的关键问题。</target>
        </trans-unit>
        <trans-unit id="a5b6d6e9ec12f5f8ee4edd54f85c6ad46277ecd8" translate="yes" xml:space="preserve">
          <source>Nonetheless, it's good practice to add interfaces to TypeScript directive classes in order to benefit from strong typing and editor tooling.</source>
          <target state="translated">尽管如此,为了从强大的排版和编辑器工具中获益,为TypeScript指令类添加接口是个不错的做法。</target>
        </trans-unit>
        <trans-unit id="736b4cd6b71b8bdb48cb01730dfaee48e2392e16" translate="yes" xml:space="preserve">
          <source>NoopAnimationPlayer</source>
          <target state="translated">NoopAnimationPlayer</target>
        </trans-unit>
        <trans-unit id="70f82949d3496e317e02bfe915266dc2dded0fe7" translate="yes" xml:space="preserve">
          <source>NoopAnimationsModule</source>
          <target state="translated">NoopAnimationsModule</target>
        </trans-unit>
        <trans-unit id="12561ae2fb444110d629b1206986eb95f41f11a1" translate="yes" xml:space="preserve">
          <source>Normalizes URL parameters by prepending with &lt;code&gt;?&lt;/code&gt; if needed.</source>
          <target state="translated">通过在前面加上 &lt;code&gt;?&lt;/code&gt; 来规范化URL参数。如果需要的话。</target>
        </trans-unit>
        <trans-unit id="ade4e4610aadfb20b6f050681409585d91cbef29" translate="yes" xml:space="preserve">
          <source>Normalizes a URL path by stripping any trailing slashes.</source>
          <target state="translated">通过去掉任何尾部的斜线来规范化URL路径。</target>
        </trans-unit>
        <trans-unit id="18495c5e726b97b87446a944fb49811a2e5920ab" translate="yes" xml:space="preserve">
          <source>Normalizes an external URL path. If the given URL doesn't begin with a leading slash (&lt;code&gt;'/'&lt;/code&gt;), adds one before normalizing. Adds a hash if &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; is in use, or the &lt;code&gt;&lt;a href=&quot;app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; is in use.</source>
          <target state="translated">标准化外部URL路径。如果给定的URL并非以斜杠（ &lt;code&gt;'/'&lt;/code&gt; ）开头，请在规范化之前添加一个。如果使用 &lt;code&gt;&lt;a href=&quot;hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; ,则添加哈希；如果使用 &lt;code&gt;&lt;a href=&quot;app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; 则添加 &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="678371611e9955b829a518950afa7eca6ce63f39" translate="yes" xml:space="preserve">
          <source>Normalizes the URL from the provided string</source>
          <target state="translated">从提供的字符串规范化URL</target>
        </trans-unit>
        <trans-unit id="2e3d0802a56f44230e6b62bf9349e52129f8767b" translate="yes" xml:space="preserve">
          <source>Normalizes the URL from the provided string, search, hash, and base URL parameters</source>
          <target state="translated">从提供的字符串、搜索、哈希和基本URL参数中归一化URL。</target>
        </trans-unit>
        <trans-unit id="a1eeaaf174120ccf4a2abdf3240f1954f256c7d7" translate="yes" xml:space="preserve">
          <source>Normalizes the URL path for this location.</source>
          <target state="translated">将此位置的URL路径标准化。</target>
        </trans-unit>
        <trans-unit id="3d018be8074135d14814ec6947f77060d77bf92a" translate="yes" xml:space="preserve">
          <source>Normalizes the given path and compares to the current normalized path.</source>
          <target state="translated">对给定路径进行归一化处理,并与当前的归一化路径进行比较。</target>
        </trans-unit>
        <trans-unit id="fe5c4e0c718a72401fd1df547a30a83f706b43e1" translate="yes" xml:space="preserve">
          <source>Normally the starting point for search is at the point of injection. However, in this case &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;s are special in that they also include their own &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;, which is why the search starts at &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; belonging to &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;. (This would not be the case for a directive matched at the same location).</source>
          <target state="translated">通常，搜索的起点是在注射点。但是，在这种情况下， &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 的特殊之处在于它们还包含自己的 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; ，这就是为什么搜索从属于 &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; 的 &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 开始的原因。（对于在同一位置匹配的指令，情况并非如此）。</target>
        </trans-unit>
        <trans-unit id="88740cda46d55edba20813ca10d53ea4860dc02d" translate="yes" xml:space="preserve">
          <source>Normally the starting point for search is at the point of injection. However, in this case &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;s are special in that they also include their own &lt;code&gt;viewProviders&lt;/code&gt;, which is why the search starts at &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; belonging to &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;. (This would not be the case for a directive matched at the same location).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9f6de0a5276d4f18217b8f9147f1ef687011bc" translate="yes" xml:space="preserve">
          <source>Normally, Angular automatically sanitizes the URL, disables the dangerous code, and in development mode, logs this action to the console. To prevent this, mark the URL value as a trusted URL using the &lt;code&gt;bypassSecurityTrustUrl&lt;/code&gt; call:</source>
          <target state="translated">通常，Angular会自动清理URL，禁用危险代码，并在开发模式下将此操作记录到控制台。为避免这种情况，请使用 &lt;code&gt;bypassSecurityTrustUrl&lt;/code&gt; 调用将URL值标记为受信任的URL ：</target>
        </trans-unit>
        <trans-unit id="389d7bbe04b98e76d49e7b50a7e6d1c1c26ed9fb" translate="yes" xml:space="preserve">
          <source>Norwegian Bokm&amp;aring;l</source>
          <target state="translated">挪威语Bokm&amp;aring;l</target>
        </trans-unit>
        <trans-unit id="253ffb44e9d7dbc97a80decedaf0ffe8b9751cee" translate="yes" xml:space="preserve">
          <source>Not a number. Example: NaN</source>
          <target state="translated">不是一个数字。例如:NaN</target>
        </trans-unit>
        <trans-unit id="c6e0e3f4d0bcc4a8a0945c4e32515b50d6f90e4a" translate="yes" xml:space="preserve">
          <source>Not all APIs return JSON data. In this next example, a &lt;code&gt;DownloaderService&lt;/code&gt; method reads a text file from the server and logs the file contents, before returning those contents to the caller as an &lt;code&gt;Observable&amp;lt;string&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">并非所有的API都返回JSON数据。在下一个示例中， &lt;code&gt;DownloaderService&lt;/code&gt; 方法从服务器读取文本文件并记录文件内容，然后将这些内容作为 &lt;code&gt;Observable&amp;lt;string&amp;gt;&lt;/code&gt; 返回给调用方。</target>
        </trans-unit>
        <trans-unit id="777b939bfaa3119dd1cc037b06134232b6fd79ee" translate="yes" xml:space="preserve">
          <source>Not all browsers support the latest ECMAScript standard, but you can use a &lt;a href=&quot;glossary#transpile&quot;&gt;transpiler&lt;/a&gt; (like &lt;a href=&quot;glossary#typescript&quot;&gt;TypeScript&lt;/a&gt;) to write code using the latest features, which will then be transpiled to code that runs on versions that are supported by browsers.</source>
          <target state="translated">并非所有浏览器都支持最新的ECMAScript标准，但是您可以使用&lt;a href=&quot;glossary#transpile&quot;&gt;转译器&lt;/a&gt;（如&lt;a href=&quot;glossary#typescript&quot;&gt;TypeScript&lt;/a&gt;）来使用最新功能编写代码，然后将这些新功能转译为在浏览器支持的版本上运行的代码。</target>
        </trans-unit>
        <trans-unit id="fa81708719f13e6a91ca9e3a6b7fc812211ec4fd" translate="yes" xml:space="preserve">
          <source>Not all dependencies are classes. Sometimes you want to inject a string, function, or object.</source>
          <target state="translated">不是所有的依赖都是类。有时你想注入一个字符串、函数或对象。</target>
        </trans-unit>
        <trans-unit id="4b22c361d6175142654cd9ef350fb28ba6d01cdc" translate="yes" xml:space="preserve">
          <source>Not all kinds of AngularJS directives can be upgraded. The directive really has to be a &lt;em&gt;component directive&lt;/em&gt;, with the characteristics &lt;a href=&quot;upgrade#using-component-directives&quot;&gt;described in the preparation guide above&lt;/a&gt;. The safest bet for ensuring compatibility is using the &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/angular.Module&quot;&gt;component API&lt;/a&gt; introduced in AngularJS 1.5.</source>
          <target state="translated">并非所有的AngularJS指令都可以升级。该指令实际上必须是&lt;em&gt;组件指令&lt;/em&gt;，具有&lt;a href=&quot;upgrade#using-component-directives&quot;&gt;上面准备指南中描述&lt;/a&gt;的特征。确保兼容性的最安全选择是使用AngularJS 1.5中引入的&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/angular.Module&quot;&gt;组件API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e26062ec2eb9351d044478dea4c629208506235" translate="yes" xml:space="preserve">
          <source>Not impressed? Think about it for a moment. What would you have to do to wire the button's enable/disabled state to the form's validity without Angular's help?</source>
          <target state="translated">印象不深?想一想吧。如果没有Angular的帮助,你要怎么做才能将按钮的启用/禁用状态与表单的有效性连接起来?</target>
        </trans-unit>
        <trans-unit id="db247da90a20bc16a7bf2b86e5130f25cc599a75" translate="yes" xml:space="preserve">
          <source>Not part of public API.</source>
          <target state="translated">不是公共API的一部分。</target>
        </trans-unit>
        <trans-unit id="6c418c4740b6cfe7654ca9d7efbe5548bc96337a" translate="yes" xml:space="preserve">
          <source>Note also that this Observable runs outside of the Angular zone, which means that the code in the subscription to this Observable will not trigger the change detection.</source>
          <target state="translated">还要注意的是,这个Observable运行在Angular区之外,这意味着订阅这个Observable中的代码将不会触发变化检测。</target>
        </trans-unit>
        <trans-unit id="338176a50b852fbbdfd5e12d5724c990da959e7a" translate="yes" xml:space="preserve">
          <source>Note how &lt;code&gt;sendRequest()&lt;/code&gt; intercepts the response on its way back to the application. This method pipes the response through the &lt;code&gt;tap()&lt;/code&gt; operator, whose callback adds the response to the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08223ff3b23c6a47e3a0ef6e2e8ac775f3d44a6a" translate="yes" xml:space="preserve">
          <source>Note how &lt;code&gt;sendRequest&lt;/code&gt;&lt;em&gt;intercepts the response&lt;/em&gt; on its way back to the application. It &lt;em&gt;pipes&lt;/em&gt; the response through the &lt;code&gt;tap()&lt;/code&gt; operator, whose callback adds the response to the cache.</source>
          <target state="translated">注意 &lt;code&gt;sendRequest&lt;/code&gt; 如何&lt;em&gt;截取&lt;/em&gt;返回应用程序&lt;em&gt;的响应&lt;/em&gt;。它&lt;em&gt;管道&lt;/em&gt;通过响应 &lt;code&gt;tap()&lt;/code&gt; 运营商，其回调增加了缓存的响应。</target>
        </trans-unit>
        <trans-unit id="aeec8e9f93a274d7472bacdd358a15a6916f1341" translate="yes" xml:space="preserve">
          <source>Note how the &lt;code&gt;linenums&lt;/code&gt; attribute in the &lt;code&gt;&amp;lt;code-tabs&amp;gt;&lt;/code&gt; explicitly enables numbering for all panes. The &lt;code&gt;linenums&lt;/code&gt; attribute in the second pane disables line numbering for &lt;em&gt;itself only&lt;/em&gt;.</source>
          <target state="translated">请注意 &lt;code&gt;&amp;lt;code-tabs&amp;gt;&lt;/code&gt; 中的 &lt;code&gt;linenums&lt;/code&gt; 属性如何显式启用所有窗格的编号。第二个窗格中的 &lt;code&gt;linenums&lt;/code&gt; 属性&lt;em&gt;仅&lt;/em&gt;对其&lt;em&gt;自身&lt;/em&gt;禁用行编号。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c152807d6c8f8e4db411c5cb24fabab3f316cbed" translate="yes" xml:space="preserve">
          <source>Note how the setup code assigns a test hero (&lt;code&gt;expectedHero&lt;/code&gt;) to the component's &lt;code&gt;hero&lt;/code&gt; property, emulating the way the &lt;code&gt;DashboardComponent&lt;/code&gt; would set it via the property binding in its repeater.</source>
          <target state="translated">请注意安装代码如何将测试英雄（ &lt;code&gt;expectedHero&lt;/code&gt; ）分配给组件的 &lt;code&gt;hero&lt;/code&gt; 属性，以模拟 &lt;code&gt;DashboardComponent&lt;/code&gt; 通过其转发器中的属性绑定对其进行设置的方式。</target>
        </trans-unit>
        <trans-unit id="a281167ca6f3f3d6ce6cf851b7d39c49313bd017" translate="yes" xml:space="preserve">
          <source>Note on performance</source>
          <target state="translated">关于业绩的说明</target>
        </trans-unit>
        <trans-unit id="1ecc6c31ae894d6c11152c8fe4320e22dd9e10d1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;AppModule&lt;/code&gt; declares both application components, &lt;code&gt;AppComponent&lt;/code&gt; and &lt;code&gt;HeroesComponent&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;AppModule&lt;/code&gt; 声明了两个应用程序组件 &lt;code&gt;AppComponent&lt;/code&gt; 和 &lt;code&gt;HeroesComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23b7e3ea6da8cd0785f61b0a58466e85e03fb3e9" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;history.state&lt;/code&gt; does not pass an object equality test because the router adds the &lt;code&gt;navigationId&lt;/code&gt; on each navigation.</source>
          <target state="translated">需要注意的是 &lt;code&gt;history.state&lt;/code&gt; 因为路由器增加了不及格的对象相等测试 &lt;code&gt;navigationId&lt;/code&gt; 每个导航。</target>
        </trans-unit>
        <trans-unit id="1841155eb0ee3f9c9cf0e86152c2cae307294a31" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;switchMap()&lt;/code&gt; returns service responses in their original request order, even if the server returns them out of order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371ce977d55087713aef1e408da4250d837a2de7" translate="yes" xml:space="preserve">
          <source>Note that a &lt;code&gt;next()&lt;/code&gt; function could receive, for instance, message strings, or event objects, numeric values, or structures, depending on context. As a general term, we refer to data published by an observable as a &lt;em&gt;stream&lt;/em&gt;. Any type of value can be represented with an observable, and the values are published as a stream.</source>
          <target state="translated">请注意， &lt;code&gt;next()&lt;/code&gt; 函数可能会根据上下文接收例如消息字符串或事件对象，数值或结构。一般而言，我们将可观察对象发布的数据称为&lt;em&gt;流&lt;/em&gt;。任何类型的值都可以用observable表示，并且这些值将作为流发布。</target>
        </trans-unit>
        <trans-unit id="c91511586f712ff71725e5f19eb4c2db2e15c2c8" translate="yes" xml:space="preserve">
          <source>Note that a &lt;em&gt;style property&lt;/em&gt; name can be written in either &lt;a href=&quot;glossary#dash-case&quot;&gt;dash-case&lt;/a&gt;, as shown above, or &lt;a href=&quot;glossary#camelcase&quot;&gt;camelCase&lt;/a&gt;, such as &lt;code&gt;fontSize&lt;/code&gt;.</source>
          <target state="translated">请注意，&lt;em&gt;样式属性&lt;/em&gt;名称可以&lt;a href=&quot;glossary#dash-case&quot;&gt;用上划线&lt;/a&gt;表示，如上所示，也可以用&lt;a href=&quot;glossary#camelcase&quot;&gt;camelCase&lt;/a&gt;编写，例如 &lt;code&gt;fontSize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e816deca44793ddded333f88d02c4f0e6a2a7b2" translate="yes" xml:space="preserve">
          <source>Note that an empty path route inherits its parent's parameters and data.</source>
          <target state="translated">请注意,空路径路径继承了父路径的参数和数据。</target>
        </trans-unit>
        <trans-unit id="1b37c5555e13999349a3161dd595e9d2a95d261a" translate="yes" xml:space="preserve">
          <source>Note that applications still need to include the HammerJS script itself. This module simply sets up the coordination layer between HammerJS and Angular's EventManager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8d89dfcf5854efbd42160b602988ec718c432b" translate="yes" xml:space="preserve">
          <source>Note that at least one blank line must follow both the opening and closing &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tags. A blank line before the closing &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt; is customary but not required.</source>
          <target state="translated">请注意，在开始和结束 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 标记之后至少必须有一个空白行。习惯上 &lt;code&gt;&amp;lt;/div&amp;gt;&lt;/code&gt; 之前的空白行不是必需的。</target>
        </trans-unit>
        <trans-unit id="9b626f4af6531e5f4974b843b016802cb9727623" translate="yes" xml:space="preserve">
          <source>Note that canceling a previous &lt;code&gt;searchHeroes()&lt;/code&gt; Observable doesn't actually abort a pending HTTP request. Unwanted results are simply discarded before they reach your application code.</source>
          <target state="translated">请注意，取消先前的 &lt;code&gt;searchHeroes()&lt;/code&gt; Observable并不会实际中止挂起的HTTP请求。不需要的结果将在到达您的应用程序代码之前被简单地丢弃。</target>
        </trans-unit>
        <trans-unit id="f7658c270146f742e3ed9bf3731556300413061f" translate="yes" xml:space="preserve">
          <source>Note that even though you are in an AngularJS template, &lt;strong&gt;you're using Angular attribute syntax to bind the inputs and outputs&lt;/strong&gt;. This is a requirement for downgraded components. The expressions themselves are still regular AngularJS expressions.</source>
          <target state="translated">请注意，即使您使用的是AngularJS模板，&lt;strong&gt;也要使用Angular属性语法来绑定输入和输出&lt;/strong&gt;。这是降级组件的要求。表达式本身仍然是常规的AngularJS表达式。</target>
        </trans-unit>
        <trans-unit id="17b350c0decc0b8e8ef8ad4265e3e25f8978757d" translate="yes" xml:space="preserve">
          <source>Note that following two providers are not equal:</source>
          <target state="translated">需要注意的是,以下两个提供者不相等。</target>
        </trans-unit>
        <trans-unit id="c9e8240c7cf8f7e89866ec2b04033f2ee8c17466" translate="yes" xml:space="preserve">
          <source>Note that if you edit the proxy configuration file, you must relaunch the &lt;code&gt;ng serve&lt;/code&gt; process to make your changes effective.</source>
          <target state="translated">请注意，如果您编辑代理配置文件，则必须重新启动 &lt;code&gt;ng serve&lt;/code&gt; 流程以使更改生效。</target>
        </trans-unit>
        <trans-unit id="a7abd4e4c5101e76c0963371f945f8c2d41ba413" translate="yes" xml:space="preserve">
          <source>Note that if your component has no inputs or you use it without providing any inputs, the framework will not call &lt;code&gt;ngOnChanges()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ac6f65c4036b5af95673d0a0dac90055c3605d" translate="yes" xml:space="preserve">
          <source>Note that in order to make the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element Zone.js-aware in your app, you need to import the &lt;code&gt;zone-patch-canvas&lt;/code&gt; patch (either in &lt;code&gt;polyfills.ts&lt;/code&gt; or in the specific file that uses &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8a845004bcc17b79e75f4722a9a47d76c32c9e" translate="yes" xml:space="preserve">
          <source>Note that just as a form group contains a group of controls, the &lt;em&gt;profile form&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; is bound to the &lt;code&gt;form&lt;/code&gt; element with the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; directive, creating a communication layer between the model and the form containing the inputs. The &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; input provided by the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; directive binds each individual input to the form control defined in &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;. The form controls communicate with their respective elements. They also communicate changes to the form group instance, which provides the source of truth for the model value.</source>
          <target state="translated">请注意，就像表单组包含一组控件一样，&lt;em&gt;概要文件表单&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 也通过 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 指令绑定到 &lt;code&gt;form&lt;/code&gt; 元素，从而在模型和包含输入的表单之间创建了一个通信层。 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; 指令提供的 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; 输入将每个单独的输入绑定到 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 中定义的表单控件。表单控件与它们各自的元素进行通信。他们还将更改传达给表单组实例，这为模型值提供了真实来源。</target>
        </trans-unit>
        <trans-unit id="64afdd7197085c1106aa085fc1e8732a73632f39" translate="yes" xml:space="preserve">
          <source>Note that just as a form group contains a group of controls, the &lt;em&gt;profileForm&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; is bound to the &lt;code&gt;form&lt;/code&gt; element with the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; directive, creating a communication layer between the model and the form containing the inputs. The &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; input provided by the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; directive binds each individual input to the form control defined in &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;. The form controls communicate with their respective elements. They also communicate changes to the form group instance, which provides the source of truth for the model value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4d1a4548c7df19999e19b754abea2e55c5b7a1" translate="yes" xml:space="preserve">
          <source>Note that libraries are intended to be used by Angular apps. To add Angular functionality to non-Angular web apps, you can use &lt;a href=&quot;elements&quot;&gt;Angular custom elements&lt;/a&gt;.</source>
          <target state="translated">请注意，库旨在供Angular应用程序使用。要将Angular功能添加到非Angular Web应用程序中，可以使用&lt;a href=&quot;elements&quot;&gt;Angular自定义元素&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ffe0242b2ab4216014a3cdb02468b566ba763c0" translate="yes" xml:space="preserve">
          <source>Note that sequences of &lt;code&gt;&amp;amp;ngsp;&lt;/code&gt; are still collapsed to just one space character when the &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; option is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;&amp;amp;ngsp;&lt;/code&gt; 的序列 当 &lt;code&gt;&lt;a href=&quot;component#preserveWhitespaces&quot;&gt;preserveWhitespaces&lt;/a&gt;&lt;/code&gt; 选项设置为 &lt;code&gt;false&lt;/code&gt; 时，它们仍然折叠为一个空格字符。</target>
        </trans-unit>
        <trans-unit id="2a3b6e4c1ee0fcab165a19b23bfdaa088363d3f7" translate="yes" xml:space="preserve">
          <source>Note that sequences of &lt;code&gt;&amp;amp;ngsp;&lt;/code&gt; are still collapsed to just one space character when the &lt;code&gt;preserveWhitespaces&lt;/code&gt; option is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23dfb95da673b7ac7ded68100af6e16d3ba6250a" translate="yes" xml:space="preserve">
          <source>Note that support for using the &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; input property and &lt;code&gt;ngModelChange&lt;/code&gt; event with reactive form directives was deprecated in Angular v6 and is scheduled for removal in a future version of Angular. For details, see &lt;a href=&quot;../../guide/deprecations#ngmodel-with-reactive-forms&quot;&gt;Deprecated features&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351b13372de295a6f697a0c13c719516a9c8ad6d" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt;&lt;em&gt;options&lt;/em&gt; value is a String that identifies the single data type of the response. A single overload version of the method handles each response type. The value of &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; cannot be a union, as the combined signature could imply.</source>
          <target state="translated">请注意， &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; &lt;em&gt;选项&lt;/em&gt;值是一个String，用于标识响应的单一数据类型。该方法的单个重载版本处理每种响应类型。正如组合签名可能暗示的那样， &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; 的值不能是联合。</target>
        </trans-unit>
        <trans-unit id="ff72644092676c60c465ebbeff0102fd3d910a95" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;it()&lt;/code&gt; function receives an argument of the following form.</source>
          <target state="translated">请注意， &lt;code&gt;it()&lt;/code&gt; 函数接收以下形式的参数。</target>
        </trans-unit>
        <trans-unit id="34c69b110792ba8e5360583e38093c34f592ed9f" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;ngDirectiveDef&lt;/code&gt; property's code is switched depending if VE is present or not (this allows for the binding code to be set only for newer versions of Angular).</source>
          <target state="translated">请注意，根据是否存在VE切换 &lt;code&gt;ngDirectiveDef&lt;/code&gt; 属性的代码（这允许仅对较新版本的Angular设置绑定代码）。</target>
        </trans-unit>
        <trans-unit id="3eada5ddfb3fe75b9f5c78a68d447fd421206301" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;notification&lt;/code&gt; property does &lt;strong&gt;not&lt;/strong&gt; contain a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notification&quot;&gt;Notification&lt;/a&gt; object but rather a &lt;a href=&quot;https://notifications.spec.whatwg.org/#dictdef-notificationoptions&quot;&gt;NotificationOptions&lt;/a&gt; object that also includes the &lt;code&gt;title&lt;/code&gt; of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notification&quot;&gt;Notification&lt;/a&gt; object.</source>
          <target state="translated">请注意， &lt;code&gt;notification&lt;/code&gt; 物业并&lt;strong&gt;没有&lt;/strong&gt;包含一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notification&quot;&gt;通知&lt;/a&gt;对象，而是一个&lt;a href=&quot;https://notifications.spec.whatwg.org/#dictdef-notificationoptions&quot;&gt;NotificationOptions&lt;/a&gt;对象还包括了 &lt;code&gt;title&lt;/code&gt; 中的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notification&quot;&gt;通知&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="a04c213fee3ffca8a5d0f569f12ebd7f77b67863" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects&lt;/code&gt; section of the configuration file does not correspond exactly to the workspace file structure.</source>
          <target state="translated">请注意，配置文件的 &lt;code&gt;projects&lt;/code&gt; 部分与工作空间文件结构不完全对应。</target>
        </trans-unit>
        <trans-unit id="319fb4850f23ccfc80b3389db79f718317b816a2" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;responseType&lt;/code&gt;&lt;em&gt;options&lt;/em&gt; value is a String that identifies the single data type of the response. A single overload version of the method handles each response type. The value of &lt;code&gt;responseType&lt;/code&gt; cannot be a union, as the combined signature could imply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6989a436d4daeec411945fd1ba3b22481eeefaaa" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;send()&lt;/code&gt; method simulates latency by waiting a second before &quot;sending&quot; the message and closing the popup.</source>
          <target state="translated">请注意， &lt;code&gt;send()&lt;/code&gt; 方法通过在&amp;ldquo;发送&amp;rdquo;消息并关闭弹出窗口之前等待一秒钟来模拟延迟。</target>
        </trans-unit>
        <trans-unit id="cda08a86a9d72586f755e0d251c62fa6f93164fc" translate="yes" xml:space="preserve">
          <source>Note that the &lt;em&gt;Submit&lt;/em&gt; button is disabled, and the &quot;required&quot; bar to the left of the input control changes from green to red.</source>
          <target state="translated">请注意，&amp;ldquo; &lt;em&gt;提交&amp;rdquo;&lt;/em&gt;按钮被禁用，输入控件左侧的&amp;ldquo;必需&amp;rdquo;栏从绿色变为红色。</target>
        </trans-unit>
        <trans-unit id="ece94366823fee671395805609d6a79af7a6a2da" translate="yes" xml:space="preserve">
          <source>Note that the code referenced on these pages is available as a live example.</source>
          <target state="translated">请注意,这些页面上所引用的代码是可以作为一个实际的例子。</target>
        </trans-unit>
        <trans-unit id="88b11652543ed488fbf0f5540bb077e930fa39b8" translate="yes" xml:space="preserve">
          <source>Note that the corresponding left-nav TOC text should be in &quot;title case&quot;, which means that you use capital letters to start the first words and all principal words. Use lower case letters for secondary words such as &quot;in&quot;, &quot;of&quot;, and &quot;the&quot;. The TOC title can also be shortened to fit in the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cbe8d312f91667084c7ceb22720698f2595209" translate="yes" xml:space="preserve">
          <source>Note that the reference to the array returned for a &lt;code&gt;multi&lt;/code&gt; provider is shared between all the places where the token is injected. We recommend avoiding mutations of the array (especially for predefined tokens) as it may lead to unexpected behavior in other parts of the app that inject the same token. You can prevent the value from being mutated by setting its type to &lt;code&gt;ReadonlyArray&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3cdbe1eac1af4f319fa3cd4702af2572876e7f" translate="yes" xml:space="preserve">
          <source>Note that the translation unit &lt;code&gt;id=introductionHeader&lt;/code&gt; is derived from the &lt;a href=&quot;i18n#custom-id&quot;&gt;custom &lt;code&gt;id&lt;/code&gt;&lt;/a&gt; that you set earlier, but without the &lt;code&gt;@@&lt;/code&gt; prefix required in the source HTML.</source>
          <target state="translated">请注意，转换单元 &lt;code&gt;id=introductionHeader&lt;/code&gt; 是从您之前设置的&lt;a href=&quot;i18n#custom-id&quot;&gt;自定义 &lt;code&gt;id&lt;/code&gt; &lt;/a&gt;派生的，但源HTML中没有 &lt;code&gt;@@&lt;/code&gt; 前缀。</target>
        </trans-unit>
        <trans-unit id="d9dec383a5fa4e7e3d1bde69011b0bab8664efb1" translate="yes" xml:space="preserve">
          <source>Note that the value of the component's &lt;code&gt;quote&lt;/code&gt; property passes through an &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt;. That means the property returns either a &lt;code&gt;Promise&lt;/code&gt; or an &lt;code&gt;Observable&lt;/code&gt;.</source>
          <target state="translated">请注意，组件的 &lt;code&gt;quote&lt;/code&gt; 属性的值通过 &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; 传递。这意味着该属性返回 &lt;code&gt;Promise&lt;/code&gt; 或 &lt;code&gt;Observable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8af192be64614a476062c8741e1ff62807509a16" translate="yes" xml:space="preserve">
          <source>Note that these transformations can influence DOM nodes layout, although impact should be minimal.</source>
          <target state="translated">请注意,这些转换会影响DOM节点的布局,尽管影响应该是最小的。</target>
        </trans-unit>
        <trans-unit id="08e64abef6e8f8eb83708761218250d9e7c3a3ec" translate="yes" xml:space="preserve">
          <source>Note that this AngularJS is an element directive (&lt;code&gt;restrict: 'E'&lt;/code&gt;) called &lt;code&gt;heroDetail&lt;/code&gt;. An AngularJS element directive is matched based on its &lt;em&gt;name&lt;/em&gt;. &lt;em&gt;The &lt;code&gt;selector&lt;/code&gt; metadata of the downgraded Angular component is ignored.&lt;/em&gt;</source>
          <target state="translated">请注意，此AngularJS是名为 &lt;code&gt;heroDetail&lt;/code&gt; 的元素指令（ &lt;code&gt;restrict: 'E'&lt;/code&gt; ）。AngularJS元素指令根据其&lt;em&gt;名称进行&lt;/em&gt;匹配。&lt;em&gt;降级的Angular组件&lt;/em&gt;&lt;em&gt;的&lt;/em&gt;&lt;em&gt; &lt;code&gt;selector&lt;/code&gt; &lt;/em&gt;&lt;em&gt;元数据将被忽略。&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8be4d44b8ca0d811ed7f0aacc58c28920fe2d083" translate="yes" xml:space="preserve">
          <source>Note that this change doesn't make existing libraries distributed in this format incompatible with the Angular CLI. The CLI will fall back and consume libraries in less desirable formats if others are not available. However, we do recommend that libraries ship their code in ES2015 format in order to make builds faster and build output smaller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be5650f7374d16358a82f53d2b53b69ac973171" translate="yes" xml:space="preserve">
          <source>Note that this example doesn't need to use &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8395a5810b920638cc768b89d9fffa47ac18586" translate="yes" xml:space="preserve">
          <source>Note that this example doesn't need to use &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">请注意，此示例不需要使用 &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="421e165c199e48890baa747e72133bfe28cb9468" translate="yes" xml:space="preserve">
          <source>Note that this feature is designed to be used with &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; and it will only work with animations that are assigned using the Angular animation library. CSS keyframes and transitions are not handled by this API.</source>
          <target state="translated">请注意，此功能旨在与 &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 一起使用，并且仅适用于使用Angular动画库分配的动画。此API不处理CSS关键帧和过渡。</target>
        </trans-unit>
        <trans-unit id="ebfa7ac8d26be4b55b063af5dc86cd82d5f5aa83" translate="yes" xml:space="preserve">
          <source>Note that this happens very frequently, so any operation you perform here impacts performance significantly. See details in &lt;a href=&quot;lifecycle-hooks#onchanges&quot;&gt;Using change detection hooks&lt;/a&gt; in this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d89d44f2b80821dee75ead449fb42cd0120b82" translate="yes" xml:space="preserve">
          <source>Note that this is true for any kind of polling done by your application. Check the &lt;a href=&quot;../api/core/applicationref#isStable&quot;&gt;isStable&lt;/a&gt; documentation for more information.</source>
          <target state="translated">请注意，对于您的应用程序执行的任何类型的轮询都是如此。查看&lt;a href=&quot;../api/core/applicationref#isStable&quot;&gt;isStable&lt;/a&gt;文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="d6bb4ab06dccbc865c75f8c110a1f644eead5884" translate="yes" xml:space="preserve">
          <source>Note that this syntax is only necessary for attribute &lt;em&gt;bindings&lt;/em&gt;. Static ARIA attributes require no extra syntax.</source>
          <target state="translated">注意，此语法仅对于属性&lt;em&gt;绑定&lt;/em&gt;是必需的。静态ARIA属性不需要额外的语法。</target>
        </trans-unit>
        <trans-unit id="ec12aa6967ca02e1c10b021742d62a604dd21e02" translate="yes" xml:space="preserve">
          <source>Note that timezone correction is not applied to an ISO string that has no time component, such as &quot;2016-09-19&quot;</source>
          <target state="translated">请注意,时区校正不应用于没有时间成分的ISO字符串,如 &quot;2016-09-19&quot;</target>
        </trans-unit>
        <trans-unit id="c830565880b49e4eeb62db7c303088ac3a720c20" translate="yes" xml:space="preserve">
          <source>Note that we check if:</source>
          <target state="translated">注意,我们检查是否:</target>
        </trans-unit>
        <trans-unit id="1ef5d74df63ffb44b460059539d2472fd656e4d3" translate="yes" xml:space="preserve">
          <source>Note that we must do the following:</source>
          <target state="translated">注意,我们必须做到以下几点。</target>
        </trans-unit>
        <trans-unit id="056959b35180cefb50ec268d788c700a2899a082" translate="yes" xml:space="preserve">
          <source>Note that when using &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;, neither the query nor the fragment in the &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; will be preserved, as outlined by the &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2.2&quot;&gt;RFC&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd7daeb5d32df96dc1e97e8776e1f8a9ef86814" translate="yes" xml:space="preserve">
          <source>Note that when you call the &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; function within a &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; or a &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; call, execution does not continue to the next instruction until each of the inner animation steps have completed.</source>
          <target state="translated">请注意，当您在 &lt;code&gt;&lt;a href=&quot;group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; （）调用中调用 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; 函数时，直到每个内部动画步骤都已完成，才继续执行下一条指令。</target>
        </trans-unit>
        <trans-unit id="be893394cee0a145ef756f47231d1847f588f89f" translate="yes" xml:space="preserve">
          <source>Note that you are bootstrapping the AngularJS module from inside &lt;code&gt;ngDoBootstrap&lt;/code&gt;. The arguments are the same as you would pass to &lt;code&gt;angular.bootstrap&lt;/code&gt; if you were manually bootstrapping AngularJS: the root element of the application; and an array of the AngularJS 1.x modules that you want to load.</source>
          <target state="translated">请注意，您是从 &lt;code&gt;ngDoBootstrap&lt;/code&gt; 内部引导AngularJS模块的。参数与您手动引导AngularJS时传递给 &lt;code&gt;angular.bootstrap&lt;/code&gt; 的参数相同：应用程序的根元素；以及要加载的AngularJS 1.x模块的数组。</target>
        </trans-unit>
        <trans-unit id="cf695c0a43431597310e3a096780bdf1a25a0a2a" translate="yes" xml:space="preserve">
          <source>Note that you do not add a &lt;code&gt;bootstrap&lt;/code&gt; declaration to the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator, since AngularJS will own the root template of the application.</source>
          <target state="translated">请注意，不要将 &lt;code&gt;bootstrap&lt;/code&gt; 声明添加到 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 装饰器，因为AngularJS将拥有应用程序的根模板。</target>
        </trans-unit>
        <trans-unit id="adb0b88be476a8167b20fa7f79cb326e9c071ed0" translate="yes" xml:space="preserve">
          <source>Note that you generally don't wrap a floating image in a &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">请注意，通常不要将浮动图像包装在 &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; 元素中。</target>
        </trans-unit>
        <trans-unit id="4a8f294ffa6daaf2b5c139214569f54000eef3b3" translate="yes" xml:space="preserve">
          <source>Note that you will also need to add any styles or scripts to the &lt;code&gt;test&lt;/code&gt; builder if you need them for unit tests. See also &lt;a href=&quot;using-libraries#using-runtime-global-libraries-inside-your-app&quot;&gt;Using runtime-global libraries inside your app&lt;/a&gt;.</source>
          <target state="translated">请注意，如果需要将其用于单元测试，则还需要向 &lt;code&gt;test&lt;/code&gt; 构建器中添加任何样式或脚本。另请参阅&lt;a href=&quot;using-libraries#using-runtime-global-libraries-inside-your-app&quot;&gt;在应用程序内部使用运行时全局库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c018b75d4dd18f6059b6d8161aef4013d7ce967" translate="yes" xml:space="preserve">
          <source>Note that, for Angular apps, we prefer combining operators with pipes, rather than chaining. Chaining is used in many RxJS examples.</source>
          <target state="translated">请注意,对于Angular应用,我们更倾向于将操作符与管道相结合,而不是链式。在许多RxJS的例子中都使用了链式。</target>
        </trans-unit>
        <trans-unit id="4b45d8a6390f37dc310a52b481d3394cf640e928" translate="yes" xml:space="preserve">
          <source>Note that, in addition to these options for configuring a directive, you can control a component's runtime behavior by implementing life-cycle hooks. For more information, see the &lt;a href=&quot;../../guide/lifecycle-hooks&quot;&gt;Lifecycle Hooks&lt;/a&gt; guide.</source>
          <target state="translated">请注意，除了这些用于配置指令的选项之外，您还可以通过实现生命周期挂钩来控制组件的运行时行为。有关更多信息，请参见《&lt;a href=&quot;../../guide/lifecycle-hooks&quot;&gt;生命周期挂钩》&lt;/a&gt;指南。</target>
        </trans-unit>
        <trans-unit id="285f98e8d01e4962eff6724b78a3c6724d0931e6" translate="yes" xml:space="preserve">
          <source>Note that:</source>
          <target state="translated">请注意:</target>
        </trans-unit>
        <trans-unit id="79ec0a3a3410a9394d865a734738613b13696ade" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;multi: true&lt;/code&gt; option. This required setting tells Angular that &lt;code&gt;&lt;a href=&quot;../api/common/http/http_interceptors&quot;&gt;HTTP_INTERCEPTORS&lt;/a&gt;&lt;/code&gt; is a token for a &lt;em&gt;multiprovider&lt;/em&gt; that injects an array of values, rather than a single value.</source>
          <target state="translated">注意 &lt;code&gt;multi: true&lt;/code&gt; 选项。此必需的设置告诉Angular &lt;code&gt;&lt;a href=&quot;../api/common/http/http_interceptors&quot;&gt;HTTP_INTERCEPTORS&lt;/a&gt;&lt;/code&gt; 是注入多个值而不是单个值的&lt;em&gt;多提供程序&lt;/em&gt;的令牌。</target>
        </trans-unit>
        <trans-unit id="d6b7cf1b943cb4ca234f1fab970190b16a27ac91" translate="yes" xml:space="preserve">
          <source>Note the backticks ( ` ) that define a JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot;&gt;&lt;em&gt;template literal&lt;/em&gt;&lt;/a&gt; for embedding the &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">请注意反引号（`），反引号定义了用于嵌入 &lt;code&gt;id&lt;/code&gt; 的JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot;&gt;&lt;em&gt;模板文字&lt;/em&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48705657f490f3c04c65c3eeda89c8bf0e4d4e85" translate="yes" xml:space="preserve">
          <source>Note the following key points:</source>
          <target state="translated">注意以下要点:</target>
        </trans-unit>
        <trans-unit id="39f97c98c2dc337a2b518dcedf8284cf48fc62b0" translate="yes" xml:space="preserve">
          <source>Note the following three important points:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d78a8e421517dfc8501178399cb2a435e63306" translate="yes" xml:space="preserve">
          <source>Note the following:</source>
          <target state="translated">请注意以下几点:</target>
        </trans-unit>
        <trans-unit id="dab531dc7a8ff3633c010ee3956d7a697965ef13" translate="yes" xml:space="preserve">
          <source>Note two important points about &lt;code&gt;isStable&lt;/code&gt;, demonstrated in the examples below:</source>
          <target state="translated">请注意有关 &lt;code&gt;isStable&lt;/code&gt; 的两个要点，在以下示例中进行了演示：</target>
        </trans-unit>
        <trans-unit id="06abd960aeb0fb638122d836dc3ba0400f8fc4fe" translate="yes" xml:space="preserve">
          <source>Note, adding try-finally block around the work to ensure that &lt;code&gt;&lt;a href=&quot;wtfleave&quot;&gt;wtfLeave&lt;/a&gt;&lt;/code&gt; gets called can negatively impact the performance of your application. For this reason we recommend that you don't add them to ensure that &lt;code&gt;&lt;a href=&quot;wtfleave&quot;&gt;wtfLeave&lt;/a&gt;&lt;/code&gt; gets called. In production &lt;code&gt;&lt;a href=&quot;wtfleave&quot;&gt;wtfLeave&lt;/a&gt;&lt;/code&gt; is a noop and so try-finally block has no value. When debugging perf issues, skipping &lt;code&gt;&lt;a href=&quot;wtfleave&quot;&gt;wtfLeave&lt;/a&gt;&lt;/code&gt;, do to exception, will produce incorrect trace, but presence of exception signifies logic error which needs to be fixed before the app should be profiled. Add try-finally only when you expect that an exception is expected during normal execution while profiling.</source>
          <target state="translated">注意，在工作周围添加try-finally块以确保调用 &lt;code&gt;&lt;a href=&quot;wtfleave&quot;&gt;wtfLeave&lt;/a&gt;&lt;/code&gt; 会对应用程序的性能产生负面影响。因此，我们建议您不要添加它们以确保调用 &lt;code&gt;&lt;a href=&quot;wtfleave&quot;&gt;wtfLeave&lt;/a&gt;&lt;/code&gt; 。在生产中 &lt;code&gt;&lt;a href=&quot;wtfleave&quot;&gt;wtfLeave&lt;/a&gt;&lt;/code&gt; 是noop，因此try-finally块没有任何价值。在调试性能问题时，跳过 &lt;code&gt;&lt;a href=&quot;wtfleave&quot;&gt;wtfLeave&lt;/a&gt;&lt;/code&gt; ，执行异常操作将产生不正确的跟踪，但是异常的存在表示逻辑错误，需要在对应用程序进行配置之前对其进行修复。仅当您希望在概要分析期间的正常执行期间预期会出现异常时，才添加try-finally。</target>
        </trans-unit>
        <trans-unit id="64f2409d31c24c872c979ce060ccc2926fe669dc" translate="yes" xml:space="preserve">
          <source>Note: &lt;a href=&quot;glossary#ahead-of-time-aot-compilation&quot;&gt;Ahead-of-time (AOT) compilation&lt;/a&gt; is required to localize component templates. If you changed this setting, set &lt;code&gt;&quot;aot&quot;&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in order to use AOT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb68d0df1914477a443a6cf208a67f3509b99949" translate="yes" xml:space="preserve">
          <source>Note: Angular API and CLI reference docs are generated from source code and/or related source files, which may have other markup styles and other ways of including code examples.</source>
          <target state="translated">注意:Angular API和CLI参考文档是由源代码和/或相关的源文件生成的,这些源文件可能有其他标记样式和其他包含代码示例的方式。</target>
        </trans-unit>
        <trans-unit id="ff636c630822e543aff0ab34cf9b6830952f048c" translate="yes" xml:space="preserve">
          <source>Note: Document might not be available in the Application Context when Application and Rendering Contexts are not the same (e.g. when running the application in a Web Worker).</source>
          <target state="translated">注意:当应用程序和渲染上下文不一样时,文档可能在应用程序上下文中不可用(例如,在Web Worker中运行应用程序时)。</target>
        </trans-unit>
        <trans-unit id="3e4ccabf68a50f33aef31845365abff1f84b25a3" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;--i18n-locale&lt;/code&gt; option is deprecated. Angular 9 uses the source locale configured in your app's &lt;a href=&quot;workspace-config&quot;&gt;workspace configuration&lt;/a&gt; file (&lt;code&gt;angular.json&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fbd5cd3d04b0e517568e5277794798330dc515" translate="yes" xml:space="preserve">
          <source>Note: The preceding example uses a variable, &lt;code&gt;name&lt;/code&gt;, and assigns it the value based on the &lt;code&gt;name&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd8b1cd4fae0cc49dd6a27ba7f0ab23bbc6b08a" translate="yes" xml:space="preserve">
          <source>Note: This works for JIT and AOTed components as well.</source>
          <target state="translated">注意:这也适用于JIT和AOTed组件。</target>
        </trans-unit>
        <trans-unit id="97967d1a85f3b5492d61dd355f4be7d12006ee7c" translate="yes" xml:space="preserve">
          <source>Note: Use &lt;code&gt;&lt;a href=&quot;testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; in tests. It will be set to either &lt;code&gt;TestBedViewEngine&lt;/code&gt; or &lt;code&gt;TestBedRender3&lt;/code&gt; according to the compiler used.</source>
          <target state="translated">注意：在测试中使用 &lt;code&gt;&lt;a href=&quot;testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 。根据使用的编译器，它将设置为 &lt;code&gt;TestBedViewEngine&lt;/code&gt; 或 &lt;code&gt;TestBedRender3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="418efdf508a0626a97351f56a820e24ec7fc1046" translate="yes" xml:space="preserve">
          <source>Note: for performance reasons, Angular only runs async validators if all sync validators pass. Each must complete before errors are set.</source>
          <target state="translated">注意:出于性能考虑,Angular只有在所有同步验证器都通过的情况下才会运行异步验证器。每个都必须在设置错误之前完成。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="602f8eac033454f2990ff3d64fb991793d948731" translate="yes" xml:space="preserve">
          <source>Notice how a hero is added:</source>
          <target state="translated">注意,如何添加一个英雄。</target>
        </trans-unit>
        <trans-unit id="91a83f73eff71bb169090a9c9cc3574feccd6052" translate="yes" xml:space="preserve">
          <source>Notice how the test uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;&lt;em&gt;destructuring assignment&lt;/em&gt;&lt;/a&gt; to extract the setup variables that it needs.</source>
          <target state="translated">请注意，测试如何使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;&lt;em&gt;解构分配&lt;/em&gt;&lt;/a&gt;来提取所需的设置变量。</target>
        </trans-unit>
        <trans-unit id="e3528d0c0a9120f561dcd38069f4008a50dfeb8b" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;Item&lt;/code&gt; is an object that it has two properties; an &lt;code&gt;id&lt;/code&gt; and a &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e723887b9236f1ebd791dfe2095875e35d36a8" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt; no longer provides a (fake) &lt;code&gt;HeroService&lt;/code&gt; because it's &lt;a href=&quot;testing#spy-stub&quot;&gt;not needed&lt;/a&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt; 不再提供（假） &lt;code&gt;HeroService&lt;/code&gt; 因为它&lt;a href=&quot;testing#spy-stub&quot;&gt;并不需要&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01382c4ad55f4d450ca9e481ca0f514ec984b971" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt; no longer provides a (fake) &lt;code&gt;HeroService&lt;/code&gt; because it's &lt;a href=&quot;testing-components-scenarios#spy-stub&quot;&gt;not needed&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b500bf30eab2f8529bfd5af81ba25174f2a3133" translate="yes" xml:space="preserve">
          <source>Notice that Angular frequently calls &lt;code&gt;&lt;a href=&quot;../api/core/afterviewchecked&quot;&gt;AfterViewChecked&lt;/a&gt;()&lt;/code&gt;, often when there are no changes of interest. Write lean hook methods to avoid performance problems.</source>
          <target state="translated">注意，Angular经常在没有兴趣变化时调用 &lt;code&gt;&lt;a href=&quot;../api/core/afterviewchecked&quot;&gt;AfterViewChecked&lt;/a&gt;()&lt;/code&gt; 。编写精益挂钩方法以避免性能问题。</target>
        </trans-unit>
        <trans-unit id="4c964d9b66e51dcb8dee8e30d5c4fa9a97be13f9" translate="yes" xml:space="preserve">
          <source>Notice that all of the files the browser needs to render this application are cached. The &lt;code&gt;ngsw-config.json&lt;/code&gt; boilerplate configuration is set up to cache the specific resources used by the CLI:</source>
          <target state="translated">请注意，浏览器呈现此应用程序所需的所有文件都已缓存。该 &lt;code&gt;ngsw-config.json&lt;/code&gt; 样板配置设置缓存CLI所使用的特定资源：</target>
        </trans-unit>
        <trans-unit id="16663f50c00b3a5325060aaa5e2ae8160f0fd60a" translate="yes" xml:space="preserve">
          <source>Notice that each &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element has an &lt;code&gt;id&lt;/code&gt; property. This is used by the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element's &lt;code&gt;for&lt;/code&gt; attribute to match the label to its input control. This is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label&quot;&gt;standard HTML feature&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbe3b7b1030eb6319dda67c737f79e1a57d4ed5" translate="yes" xml:space="preserve">
          <source>Notice that even though the &lt;a href=&quot;dependency-injection-in-action#optional&quot;&gt;@Optional&lt;/a&gt; qualifier is there for safety, the  confirms that the &lt;code&gt;alex&lt;/code&gt; parameter is set.</source>
          <target state="translated">请注意，即使出于安全考虑而使用&lt;a href=&quot;dependency-injection-in-action#optional&quot;&gt;@Optional&lt;/a&gt;限定词，确认也会设置 &lt;code&gt;alex&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="9475b2943f5dbda5c95807297eaddbdaad75c9f5" translate="yes" xml:space="preserve">
          <source>Notice that if you subscribe twice, there will be two separate streams, each emitting values every second. It looks something like this:</source>
          <target state="translated">请注意,如果你订阅两次,就会有两个独立的流,每个流每秒都会发出值。它看起来像这样。</target>
        </trans-unit>
        <trans-unit id="0ec0b6daf045d676b267add4e36ed2b4e7a5d32e" translate="yes" xml:space="preserve">
          <source>Notice that in the module &lt;code&gt;imports&lt;/code&gt; array, the &lt;code&gt;AppRoutingModule&lt;/code&gt; is last and comes &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;HeroesModule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f017994bfe8b1e812dafb1f5d643ba23e61b6f" translate="yes" xml:space="preserve">
          <source>Notice that it doesn't have any members. It never grows no matter how many members you add to the class, as long as those members are typed but not implemented.</source>
          <target state="translated">注意,它没有任何成员。无论你给类添加多少成员,只要这些成员是类型化的,但没有实现,它就不会增长。</target>
        </trans-unit>
        <trans-unit id="0ec892a756caf966d2763c064eb008689f0edb3d" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; tag is tucked between the &lt;code&gt;&amp;lt;after-content&amp;gt;&lt;/code&gt; tags. Never put content between a component's element tags &lt;em&gt;unless you intend to project that content into the component&lt;/em&gt;.</source>
          <target state="translated">注意， &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; 标记位于 &lt;code&gt;&amp;lt;after-content&amp;gt;&lt;/code&gt; 标记之间。&lt;em&gt;除非打算将内容投影到组件中，否则&lt;/em&gt;切勿将内容放置在组件的element标签之间。</target>
        </trans-unit>
        <trans-unit id="64fd2d77e6abc918867382efcabdd9b7a7b79574" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; references and &lt;code&gt;declarations&lt;/code&gt; array are unnecessary, so are no longer part of &lt;code&gt;AppRoutingModule&lt;/code&gt;. The following sections explain the rest of the &lt;code&gt;AppRoutingModule&lt;/code&gt; in more detail.</source>
          <target state="translated">注意， &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 引用和 &lt;code&gt;declarations&lt;/code&gt; 数组是不必要的，因此不再是 &lt;code&gt;AppRoutingModule&lt;/code&gt; 的一部分。以下各节将更详细地说明 &lt;code&gt;AppRoutingModule&lt;/code&gt; 的其余部分。</target>
        </trans-unit>
        <trans-unit id="9a5f30892f2e4c0cac80275e27a0c184cd91d9f1" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;&lt;a href=&quot;../api/router/route#canDeactivate&quot;&gt;canDeactivate&lt;/a&gt;()&lt;/code&gt; method &lt;em&gt;can&lt;/em&gt; return synchronously; it returns &lt;code&gt;true&lt;/code&gt; immediately if there is no crisis or there are no pending changes. But it can also return a &lt;code&gt;Promise&lt;/code&gt; or an &lt;code&gt;Observable&lt;/code&gt; and the router will wait for that to resolve to truthy (navigate) or falsy (stay put).</source>
          <target state="translated">注意， &lt;code&gt;&lt;a href=&quot;../api/router/route#canDeactivate&quot;&gt;canDeactivate&lt;/a&gt;()&lt;/code&gt; 方法&lt;em&gt;可以&lt;/em&gt;同步返回；如果没有危机或没有即将发生的更改，它将立即返回 &lt;code&gt;true&lt;/code&gt; 。但是，它也可以返回一个 &lt;code&gt;Promise&lt;/code&gt; 或 &lt;code&gt;Observable&lt;/code&gt; ，路由器将等待其解析为真实（导航）或虚假（保持放置）。</target>
        </trans-unit>
        <trans-unit id="23c9ab227663b5cf313e312746e88c04a1e2e07c" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;Logger&lt;/code&gt; service also has the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator, even though it might not need its own dependencies. In fact, the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator is &lt;strong&gt;required for all services&lt;/strong&gt;.</source>
          <target state="translated">请注意，即使 &lt;code&gt;Logger&lt;/code&gt; 服务可能不需要其自己的依赖项，它也具有 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰器。实际上，&lt;strong&gt;所有服务&lt;/strong&gt;都&lt;strong&gt;需要&lt;/strong&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰器。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de256ece17b6a4cc0716680bb469bb36ad1f8368" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;beforeEach()&lt;/code&gt; is asynchronous and calls &lt;code&gt;TestBed.compileComponents&lt;/code&gt; because the &lt;code&gt;HeroDetailComponent&lt;/code&gt; has an external template and css file.</source>
          <target state="translated">请注意， &lt;code&gt;beforeEach()&lt;/code&gt; 是异步的，并调用 &lt;code&gt;TestBed.compileComponents&lt;/code&gt; ,因为 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 具有外部模板和css文件。</target>
        </trans-unit>
        <trans-unit id="ccdec5e84214315e388b8d319ab8c3e40ae6aab9" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;canDeactivate()&lt;/code&gt; method can return synchronously; it returns &lt;code&gt;true&lt;/code&gt; immediately if there is no crisis or there are no pending changes. But it can also return a &lt;code&gt;Promise&lt;/code&gt; or an &lt;code&gt;Observable&lt;/code&gt; and the router will wait for that to resolve to truthy (navigate) or falsy (stay on the current route).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b465352b50b0116a885c12cfa249a6f9a25a506" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;crisis-list&lt;/code&gt; component displays. Angular is using the route you defined to dynamically load the component. You can load the &lt;code&gt;heroes-list&lt;/code&gt; component the same way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9dc75623dd65d653e63c79ccc1cae85cf05dbd" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alterEgo&lt;/code&gt; are sibling controls. To evaluate both controls in a single custom validator, you must perform the validation in a common ancestor control: the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;. You query the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; for its child controls so that you can compare their values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3f60aa30d029934a47b09b0a3bbb9af25f070e" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;path&lt;/code&gt; is set to an empty string. This is because the path in &lt;code&gt;AppRoutingModule&lt;/code&gt; is already set to &lt;code&gt;customers&lt;/code&gt;, so this route in the &lt;code&gt;CustomersRoutingModule&lt;/code&gt;, is already within the &lt;code&gt;customers&lt;/code&gt; context. Every route in this routing module is a child route.</source>
          <target state="translated">请注意， &lt;code&gt;path&lt;/code&gt; 设置为空字符串。这是因为 &lt;code&gt;AppRoutingModule&lt;/code&gt; 中的路径已设置为 &lt;code&gt;customers&lt;/code&gt; ，因此 &lt;code&gt;CustomersRoutingModule&lt;/code&gt; 此路径已在 &lt;code&gt;customers&lt;/code&gt; 上下文中。此路由模块中的每个路由都是子路由。</target>
        </trans-unit>
        <trans-unit id="df3c6dc75f2355fd69e3e129ebcd19c803aa442b" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;required&lt;/code&gt; attribute is still present in the template. Although it's not necessary for validation, it should be retained to for accessibility purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9f36d86bfc13a1174d686677fc0501b0897fee" translate="yes" xml:space="preserve">
          <source>Notice that the Jasmine test is synchronous. There's no &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt;. Marble testing uses a test scheduler to simulate the passage of time in a synchronous test.</source>
          <target state="translated">请注意，Jasmine测试是同步的。没有 &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; 。大理石测试使用测试计划程序来模拟同步测试中的时间流逝。</target>
        </trans-unit>
        <trans-unit id="c65ac5a0d6ded551e8245111532b70dcf2f4e76d" translate="yes" xml:space="preserve">
          <source>Notice that the URL in the preview window changes. The final segment is &lt;code&gt;products/#&lt;/code&gt; where &lt;code&gt;#&lt;/code&gt; is the number of the route you clicked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cde8607c8b99c991ac239f92c2c9536f2f3650" translate="yes" xml:space="preserve">
          <source>Notice that the URL in the preview window changes. The final segment is &lt;code&gt;products/1&lt;/code&gt;.</source>
          <target state="translated">请注意，预览窗口中的URL发生了变化。最后一个部分是 &lt;code&gt;products/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4027ee1272622553868202a87e3af69ab1150cd2" translate="yes" xml:space="preserve">
          <source>Notice that the app stopped working when you added &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt;.</source>
          <target state="translated">请注意，当您添加 &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; 时，该应用程序停止工作。</target>
        </trans-unit>
        <trans-unit id="32381adc36dd84f9ba0e64036e01484a6eccfa6e" translate="yes" xml:space="preserve">
          <source>Notice that the binding is to the &lt;code&gt;disabled&lt;/code&gt; property of the button's DOM element, &lt;strong&gt;not&lt;/strong&gt; the attribute. This applies to data-binding in general. Data-binding works with &lt;em&gt;properties&lt;/em&gt; of DOM elements, components, and directives, not HTML &lt;em&gt;attributes&lt;/em&gt;.</source>
          <target state="translated">请注意，绑定是绑定到按钮的DOM元素的 &lt;code&gt;disabled&lt;/code&gt; 属性，&lt;strong&gt;而不是&lt;/strong&gt;属性。通常，这适用于数据绑定。数据绑定与作品&lt;em&gt;性质&lt;/em&gt; DOM元素，组件，和指令的，而不是HTML &lt;em&gt;属性&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="869ca339c5fbddfd63af20beae58a78e6a0b940b" translate="yes" xml:space="preserve">
          <source>Notice that the configured builder for the project is different from the default builder for app projects. This builder, among other things, ensures that the library is always built with the &lt;a href=&quot;aot-compiler&quot;&gt;AOT compiler&lt;/a&gt;, without the need to specify the &lt;code&gt;--prod&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe74458a6eda7ec5253735cae32222403b5c053" translate="yes" xml:space="preserve">
          <source>Notice that the configured builder for the project is different from the default builder for app projects. This builder, among other things, ensures that the library is always built with the &lt;a href=&quot;aot-compiler&quot;&gt;AoT compiler&lt;/a&gt;, without the need to specify the &lt;code&gt;--prod&lt;/code&gt; flag.</source>
          <target state="translated">请注意，为项目配置的构建器不同于应用程序项目的默认构建器。除其他事项外，该构建器可确保始终使用&lt;a href=&quot;aot-compiler&quot;&gt;AoT编译器&lt;/a&gt;构建该库，而无需指定 &lt;code&gt;--prod&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="133000de2e1b1e97b650bfe5084c18cc935e5068" translate="yes" xml:space="preserve">
          <source>Notice that the custom validation directive is instantiated with &lt;code&gt;useExisting&lt;/code&gt; rather than &lt;code&gt;useClass&lt;/code&gt;. The registered validator must be &lt;em&gt;this instance&lt;/em&gt; of the &lt;code&gt;ForbiddenValidatorDirective&lt;/code&gt;&amp;mdash;the instance in the form with its &lt;code&gt;forbiddenName&lt;/code&gt; property bound to &amp;ldquo;bob&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf29db2d2b68a942b7a233c23775f60dc8fd0262" translate="yes" xml:space="preserve">
          <source>Notice that the lazy-loading syntax uses &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; followed by a function that uses the browser's built-in &lt;code&gt;import('...')&lt;/code&gt; syntax for dynamic imports. The import path is the relative path to the module.</source>
          <target state="translated">请注意，延迟加载语法使用 &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; ,然后是使用浏览器的内置 &lt;code&gt;import('...')&lt;/code&gt; 语法进行动态导入的函数。导入路径是模块的相对路径。</target>
        </trans-unit>
        <trans-unit id="317be6811a63011511296608f693bfb98e04807f" translate="yes" xml:space="preserve">
          <source>Notice that the lazy-loading syntax uses &lt;code&gt;loadChildren&lt;/code&gt; followed by a function that uses the browser's built-in &lt;code&gt;import('...')&lt;/code&gt; syntax for dynamic imports. The import path is the relative path to the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f1f3c5e0dfda26328ffd5294fe6ae1daf8d51d" translate="yes" xml:space="preserve">
          <source>Notice that the log confirms that input properties (the &lt;code&gt;name&lt;/code&gt; property in this case) have no assigned values at construction. The input properties are available to the &lt;code&gt;onInit()&lt;/code&gt; method for further initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b8ffb679119622c1d7f7f438fb3bcdac1936e7" translate="yes" xml:space="preserve">
          <source>Notice that the name and alterEgo are sibling controls. To evaluate both controls in a single custom validator, we should perform the validation in a common ancestor control: the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;. That way, we can query the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; for the child controls which will allow us to compare their values.</source>
          <target state="translated">请注意，名称和alterEgo是同级控件。为了在单个自定义验证器中评估两个控件，我们应该在一个共同的祖先控件 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 中执行验证。这样，我们可以在 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 中查询子控件，这将使我们能够比较它们的值。</target>
        </trans-unit>
        <trans-unit id="de3049b45f385b162d074321887e74505bfcc3bc" translate="yes" xml:space="preserve">
          <source>Notice that the new service imports the Angular &lt;code&gt;&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; symbol and annotates the class with the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator. This marks the class as one that participates in the &lt;em&gt;dependency injection system&lt;/em&gt;. The &lt;code&gt;HeroService&lt;/code&gt; class is going to provide an injectable service, and it can also have its own injected dependencies. It doesn't have any dependencies yet, but &lt;a href=&quot;toh-pt4#inject-message-service&quot;&gt;it will soon&lt;/a&gt;.</source>
          <target state="translated">请注意，新服务将导入Angular &lt;code&gt;&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; 符号，并使用 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰器对类进行注释。这将类标记为参与&lt;em&gt;依赖项注入系统的类&lt;/em&gt;。该 &lt;code&gt;HeroService&lt;/code&gt; 类是要提供一种可注射的服务，而且还可以有自己的注入依赖。它尚无任何依赖关系，但&lt;a href=&quot;toh-pt4#inject-message-service&quot;&gt;很快就会实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8c9e9c01ffc24a0bbd5e28c410125ecb2379d79" translate="yes" xml:space="preserve">
          <source>Notice that the parent &lt;code&gt;crisis-center&lt;/code&gt; route has a &lt;code&gt;children&lt;/code&gt; property with a single route containing the &lt;code&gt;CrisisListComponent&lt;/code&gt;. The &lt;code&gt;CrisisListComponent&lt;/code&gt; route also has a &lt;code&gt;children&lt;/code&gt; array with two routes.</source>
          <target state="translated">请注意，父 &lt;code&gt;crisis-center&lt;/code&gt; 路线有一个 &lt;code&gt;children&lt;/code&gt; 与包含一个路由属性 &lt;code&gt;CrisisListComponent&lt;/code&gt; 。该 &lt;code&gt;CrisisListComponent&lt;/code&gt; 路线也有一个 &lt;code&gt;children&lt;/code&gt; 有两条路线阵列。</target>
        </trans-unit>
        <trans-unit id="59f693c9d311f5b6a161e98f66d3f66c45891328" translate="yes" xml:space="preserve">
          <source>Notice that the path goes up a level using the &lt;code&gt;../&lt;/code&gt; syntax. If the current crisis &lt;code&gt;id&lt;/code&gt; is &lt;code&gt;3&lt;/code&gt;, the resulting path back to the crisis list is &lt;code&gt;/crisis-center/;id=3;foo=foo&lt;/code&gt;.</source>
          <target state="translated">请注意，路径使用 &lt;code&gt;../&lt;/code&gt; 语法上升到一个级别。如果当前危机 &lt;code&gt;id&lt;/code&gt; 为 &lt;code&gt;3&lt;/code&gt; ，则返回危机列表的结果路径为 &lt;code&gt;/crisis-center/;id=3;foo=foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="764a2d4b65ee2443447964e923fcc96061c4bb18" translate="yes" xml:space="preserve">
          <source>Notice that the quote element displays the placeholder value (&lt;code&gt;'...'&lt;/code&gt;) after &lt;code&gt;ngOnInit()&lt;/code&gt;. The first quote hasn't arrived yet.</source>
          <target state="translated">请注意，quote元素在 &lt;code&gt;ngOnInit()&lt;/code&gt; 之后显示占位符值（ &lt;code&gt;'...'&lt;/code&gt; ）。第一个报价还没有到。</target>
        </trans-unit>
        <trans-unit id="f80b92ed08ad17e1bac079fbe7b35bdb73062766" translate="yes" xml:space="preserve">
          <source>Notice that the wildcard route is placed at the end of the array. The order of your routes is important, as Angular applies routes in order and uses the first match it finds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a000921d2c433893d3386ba1934a919231e53ac" translate="yes" xml:space="preserve">
          <source>Notice that this example captures the &lt;code&gt;&lt;a href=&quot;../api/service-worker/swpush#subscription&quot;&gt;subscription&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/service-worker/swpush#unsubscribe&quot;&gt;unsubscribe()&lt;/a&gt;&lt;/code&gt; when the &lt;code&gt;AstronautComponent&lt;/code&gt; is destroyed. This is a memory-leak guard step. There is no actual risk in this app because the lifetime of a &lt;code&gt;AstronautComponent&lt;/code&gt; is the same as the lifetime of the app itself. That &lt;em&gt;would not&lt;/em&gt; always be true in a more complex application.</source>
          <target state="translated">注意，此示例在销毁 &lt;code&gt;AstronautComponent&lt;/code&gt; 时捕获了 &lt;code&gt;&lt;a href=&quot;../api/service-worker/swpush#subscription&quot;&gt;subscription&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/service-worker/swpush#unsubscribe&quot;&gt;unsubscribe()&lt;/a&gt;&lt;/code&gt; 。这是内存泄漏保护措施。此应用程序没有实际风险，因为 &lt;code&gt;AstronautComponent&lt;/code&gt; 的生存期与应用程序本身的生存期相同。这&lt;em&gt;不会&lt;/em&gt;在一个更复杂的应用程序始终是正确的。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb56d57d2aedeba00db6c101307815322b68ea68" translate="yes" xml:space="preserve">
          <source>Notice that this example captures the &lt;code&gt;subscription&lt;/code&gt; and &lt;code&gt;unsubscribe()&lt;/code&gt; when the &lt;code&gt;AstronautComponent&lt;/code&gt; is destroyed. This is a memory-leak guard step. There is no actual risk in this app because the lifetime of a &lt;code&gt;AstronautComponent&lt;/code&gt; is the same as the lifetime of the app itself. That &lt;em&gt;would not&lt;/em&gt; always be true in a more complex application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d61f1eb2b9b620cece14307b29d5408a54c3f6" translate="yes" xml:space="preserve">
          <source>Notice that this handler returns an RxJS &lt;a href=&quot;http#rxjs&quot;&gt;&lt;code&gt;ErrorObservable&lt;/code&gt;&lt;/a&gt; with a user-friendly error message. Consumers of the service expect service methods to return an &lt;code&gt;Observable&lt;/code&gt; of some kind, even a &quot;bad&quot; one.</source>
          <target state="translated">请注意，此处理程序返回RxJS &lt;a href=&quot;http#rxjs&quot;&gt; &lt;code&gt;ErrorObservable&lt;/code&gt; &lt;/a&gt;以及用户友好的错误消息。服务的使用者希望服务方法返回某种 &lt;code&gt;Observable&lt;/code&gt; ，甚至是&amp;ldquo;不良&amp;rdquo; 的Observable。</target>
        </trans-unit>
        <trans-unit id="966b8136539b91f682821aed1fdb541fa1442fbc" translate="yes" xml:space="preserve">
          <source>Notice that this new route uses an empty string as its path. In addition, it replaces the &lt;code&gt;component&lt;/code&gt; property with two new ones:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ab125fbed21c4a8952408ef0b14de7325e3998" translate="yes" xml:space="preserve">
          <source>Notice that under the &quot;Size&quot; column, the requests state is &lt;code&gt;(from ServiceWorker)&lt;/code&gt;. This means that the resources are not being loaded from the network. Instead, they are being loaded from the service worker's cache.</source>
          <target state="translated">请注意，在&amp;ldquo;大小&amp;rdquo;列下，请求状态为 &lt;code&gt;(from ServiceWorker)&lt;/code&gt; 。这意味着没有从网络上加载资源。而是从服务工作者的缓存中加载它们。</target>
        </trans-unit>
        <trans-unit id="63648c03d3e6427709280eccf49221c86f710380" translate="yes" xml:space="preserve">
          <source>Notice that you &lt;em&gt;inject&lt;/em&gt; the &lt;code&gt;AuthService&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; in the constructor. You haven't provided the &lt;code&gt;AuthService&lt;/code&gt; yet but it's good to know that you can inject helpful services into routing guards.</source>
          <target state="translated">请注意，您在构造函数中&lt;em&gt;注入&lt;/em&gt;了 &lt;code&gt;AuthService&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 。您尚未提供 &lt;code&gt;AuthService&lt;/code&gt; ，但很高兴知道您可以将有用的服务注入路由防护中。</target>
        </trans-unit>
        <trans-unit id="d08df7bfba3ae90e07f5d834f49e5d5c467ac993" translate="yes" xml:space="preserve">
          <source>Notice that you also added a &lt;code&gt;name&lt;/code&gt; attribute to the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; tag and set it to &quot;name&quot;, which makes sense for the hero's name. Any unique value will do, but using a descriptive name is helpful. Defining a &lt;code&gt;name&lt;/code&gt; attribute is a requirement when using &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; in combination with a form.</source>
          <target state="translated">请注意，您还向 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 标记添加了 &lt;code&gt;name&lt;/code&gt; 属性，并将其设置为&amp;ldquo; name&amp;rdquo;，这对于英雄的名字是有意义的。任何唯一的值都可以，但是使用描述性名称会有所帮助。将 &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; &lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;）]与表单结合使用时，必须定义 &lt;code&gt;name&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="58f22daabed29966ba88b05f45459d68f1b23998" translate="yes" xml:space="preserve">
          <source>Notice that you captured the factory provider in an exported variable, &lt;code&gt;heroServiceProvider&lt;/code&gt;. This extra step makes the factory provider reusable. You can configure a provider of &lt;code&gt;HeroService&lt;/code&gt; with this variable wherever you need it. In this sample, you need it only in &lt;code&gt;HeroesComponent&lt;/code&gt;, where &lt;code&gt;heroServiceProvider&lt;/code&gt; replaces &lt;code&gt;HeroService&lt;/code&gt; in the metadata &lt;code&gt;providers&lt;/code&gt; array.</source>
          <target state="translated">请注意，您在导出的变量 &lt;code&gt;heroServiceProvider&lt;/code&gt; 中捕获了工厂提供程序。此额外步骤使工厂提供程序可重复使用。您可以在任何需要的地方使用此变量配置 &lt;code&gt;HeroService&lt;/code&gt; 的提供程序。在此示例中，仅在 &lt;code&gt;HeroesComponent&lt;/code&gt; 中需要它，在这里 &lt;code&gt;heroServiceProvider&lt;/code&gt; 替换了元数据 &lt;code&gt;providers&lt;/code&gt; 数组中的 &lt;code&gt;HeroService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc972f991724148e05496475d3f68dbf24cf9d49" translate="yes" xml:space="preserve">
          <source>Notice that you don't call &lt;strong&gt;new&lt;/strong&gt; to create an instance of the &lt;code&gt;AppComponent&lt;/code&gt; class. Angular is creating an instance for you. How?</source>
          <target state="translated">请注意，您不会调用&lt;strong&gt;new&lt;/strong&gt;来创建 &lt;code&gt;AppComponent&lt;/code&gt; 类的实例。Angular正在为您创建一个实例。怎么样？</target>
        </trans-unit>
        <trans-unit id="2d00fb120900f9f6e0e346577e056ae4288f6990" translate="yes" xml:space="preserve">
          <source>Notice that you inject the &lt;code&gt;AuthService&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; in the constructor. You haven't provided the &lt;code&gt;AuthService&lt;/code&gt; yet but it's good to know that you can inject helpful services into routing guards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657010025921c4cba9d77c07d871864c621aceef" translate="yes" xml:space="preserve">
          <source>Notice that you keep injecting the &lt;code&gt;MessageService&lt;/code&gt; but since you'll call it so frequently, wrap it in a private &lt;code&gt;&lt;a href=&quot;../api/animations/browser/testing/mockanimationdriver#log&quot;&gt;log&lt;/a&gt;()&lt;/code&gt; method:</source>
          <target state="translated">请注意，您一直在注入 &lt;code&gt;MessageService&lt;/code&gt; ,但是由于您会经常调用它，因此将其包装在私有 &lt;code&gt;&lt;a href=&quot;../api/animations/browser/testing/mockanimationdriver#log&quot;&gt;log&lt;/a&gt;()&lt;/code&gt; 方法中：</target>
        </trans-unit>
        <trans-unit id="a08c2a129b2af456b44a4642bf80699a85c7b8ec" translate="yes" xml:space="preserve">
          <source>Notice that you keep injecting the &lt;code&gt;MessageService&lt;/code&gt; but since you'll call it so frequently, wrap it in a private &lt;code&gt;log()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3000d46be8e51b7f3b4b07993ea04eeafacab1" translate="yes" xml:space="preserve">
          <source>Notice that you're importing the &lt;code&gt;map&lt;/code&gt; operator of the RxJS &lt;code&gt;Observable&lt;/code&gt; separately. Do this for every RxJS operator.</source>
          <target state="translated">注意，您将分别导入RxJS &lt;code&gt;Observable&lt;/code&gt; 的 &lt;code&gt;map&lt;/code&gt; 运算符。为每个RxJS运算符执行此操作。</target>
        </trans-unit>
        <trans-unit id="0fe973a854de016beb47da7cff87ced09a70d998" translate="yes" xml:space="preserve">
          <source>Notice that:</source>
          <target state="translated">注意:</target>
        </trans-unit>
        <trans-unit id="224c6bd0b406b3c1b902663fe54c62ec5beba85d" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;:id&lt;/code&gt; token in the path. That creates a slot in the path for a &lt;strong&gt;Route Parameter&lt;/strong&gt;. In this case, the router will insert the &lt;code&gt;id&lt;/code&gt; of a hero into that slot.</source>
          <target state="translated">注意路径中的 &lt;code&gt;:id&lt;/code&gt; 标记。这会在路径中为&lt;strong&gt;Route Parameter&lt;/strong&gt;创建一个插槽。在这种情况下，路由器会将英雄的 &lt;code&gt;id&lt;/code&gt; 插入该插槽。</target>
        </trans-unit>
        <trans-unit id="f8ad08dbe7eecf2fed7e6c40ee0d2fa66fb61639" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; decorator. It adds metadata to the class that makes the directive's &lt;code&gt;highlightColor&lt;/code&gt; property available for binding.</source>
          <target state="translated">注意 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 装饰器。它将元数据添加到类中，从而使指令的 &lt;code&gt;highlightColor&lt;/code&gt; 属性可用于绑定。</target>
        </trans-unit>
        <trans-unit id="6634b0a0f0be00fbe2e39031dc79ddc4d0ee464d" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;@&lt;a href=&quot;api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator. This indicates that the following class is a component. It provides metadata about the component, including its selector, templates, and styles.</source>
          <target state="translated">注意 &lt;code&gt;@&lt;a href=&quot;api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 装饰器。这表明以下类别是一个组件。它提供有关组件的元数据，包括其选择器，模板和样式。</target>
        </trans-unit>
        <trans-unit id="c60b94afc6109f221d514f644a8ae5ea5a5efbee" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;hero&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; double-quoted instruction; it is an example of a template input variable. Read more about template input variables in the &lt;a href=&quot;template-syntax#microsyntax&quot;&gt;microsyntax&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">注意 &lt;code&gt;hero&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 双引号的指令; 它是模板输入变量的示例。在&amp;ldquo; &lt;a href=&quot;template-syntax&quot;&gt;模板语法&amp;rdquo;&lt;/a&gt;页面的&amp;ldquo; &lt;a href=&quot;template-syntax#microsyntax&quot;&gt;微&lt;/a&gt;语法&amp;rdquo;部分中了解有关模板输入变量的更多信息。</target>
        </trans-unit>
        <trans-unit id="4562d3406b71c08ed4a9cb8f2b93ad983529d493" translate="yes" xml:space="preserve">
          <source>Notice the declaration of &lt;code&gt;heroes$&lt;/code&gt; as an &lt;code&gt;Observable&lt;/code&gt;:</source>
          <target state="translated">注意将 &lt;code&gt;heroes$&lt;/code&gt; 声明为 &lt;code&gt;Observable&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="311928a764ab8a87b147a4229e9425b4654dfce5" translate="yes" xml:space="preserve">
          <source>Notice the difference between the &lt;code&gt;colspan&lt;/code&gt; attribute and the &lt;code&gt;colSpan&lt;/code&gt; property.</source>
          <target state="translated">注意 &lt;code&gt;colspan&lt;/code&gt; 属性和 &lt;code&gt;colSpan&lt;/code&gt; 属性之间的区别。</target>
        </trans-unit>
        <trans-unit id="44536d70a7765f95baee29c0816dfab638675325" translate="yes" xml:space="preserve">
          <source>Notice the following features illustrated by the example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8837254f576af82cbf792e9988deb4cbfb60d7fb" translate="yes" xml:space="preserve">
          <source>Notice the odd behavior in the live example: when you add flying heroes, none of them are displayed under &quot;Heroes who fly.&quot;</source>
          <target state="translated">注意到实战例子中的奇怪行为:当你添加飞行英雄时,没有一个英雄显示在 &quot;会飞的英雄 &quot;下。</target>
        </trans-unit>
        <trans-unit id="3a87dd19c1d892167b8ee74d68f5611cfda16020" translate="yes" xml:space="preserve">
          <source>Notice the other syntax differences: The (*) before &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; is required; the &lt;code&gt;let&lt;/code&gt; keyword identifies &lt;code&gt;movie&lt;/code&gt; as an input variable; the list preposition is &lt;code&gt;of&lt;/code&gt;, not &lt;code&gt;in&lt;/code&gt;.</source>
          <target state="translated">注意其他语法差异： &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 之前的（*）是必需的；该 &lt;code&gt;let&lt;/code&gt; 关键字标识 &lt;code&gt;movie&lt;/code&gt; 作为输入变量; 名单介词 &lt;code&gt;of&lt;/code&gt; ，而不是 &lt;code&gt;in&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0c91a28238ae10d905cde46e87869f168fa3578" translate="yes" xml:space="preserve">
          <source>Notice this component can present any type of question in your model. You only have two types of questions at this point but you can imagine many more. The &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; determines which type of question to display.</source>
          <target state="translated">请注意，此组件可以在模型中显示任何类型的问题。此时，您只有两种类型的问题，但您可以想象更多。所述 &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; 确定要显示类型的问题。</target>
        </trans-unit>
        <trans-unit id="624c07d69e6efc6171d87ab0b0b72bf280ec0db6" translate="yes" xml:space="preserve">
          <source>Notice two different types of redirects. The first change is from &lt;code&gt;/heroes&lt;/code&gt; to &lt;code&gt;/superheroes&lt;/code&gt; without any parameters. The second change is from &lt;code&gt;/hero/:id&lt;/code&gt; to &lt;code&gt;/superhero/:id&lt;/code&gt;, which includes the &lt;code&gt;:id&lt;/code&gt; route parameter. Router redirects also use powerful pattern-matching, so the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; inspects the URL and replaces route parameters in the &lt;code&gt;path&lt;/code&gt; with their appropriate destination. Previously, you navigated to a URL such as &lt;code&gt;/hero/15&lt;/code&gt; with a route parameter &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;15&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296e3dde9ed08cdaed0a40934e1b325ca788c45d" translate="yes" xml:space="preserve">
          <source>Notice, we don't use the &lt;code&gt;new&lt;/code&gt; operator because we explicitly want to have the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; resolve all of the object's dependencies automatically.</source>
          <target state="translated">请注意，我们不使用 &lt;code&gt;new&lt;/code&gt; 运算符，因为我们明确希望让 &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 自动解决对象的所有依赖关系。</target>
        </trans-unit>
        <trans-unit id="628a306f408fb8f97d2799fd6d3657d63ec32e11" translate="yes" xml:space="preserve">
          <source>Notification type</source>
          <target state="translated">通知类型</target>
        </trans-unit>
        <trans-unit id="8600e4a94a4556b41e58d1919c7c370cb706b618" translate="yes" xml:space="preserve">
          <source>Notifies that an error has been delivered.</source>
          <target state="translated">通知错误已被送达。</target>
        </trans-unit>
        <trans-unit id="42b070aa5cb4c0fbe5ccad26df6cf2f1864252f1" translate="yes" xml:space="preserve">
          <source>Notifies when code enters Angular Zone. This gets fired first on VM Turn.</source>
          <target state="translated">当代码进入Angular Zone时发出通知。这在VM Turn时首先被触发。</target>
        </trans-unit>
        <trans-unit id="be6b88a10b80bebba1fd14aa8e278d92410f068d" translate="yes" xml:space="preserve">
          <source>Notifies when the last &lt;code&gt;onMicrotaskEmpty&lt;/code&gt; has run and there are no more microtasks, which implies we are about to relinquish VM turn. This event gets called just once.</source>
          <target state="translated">在最后一个 &lt;code&gt;onMicrotaskEmpty&lt;/code&gt; 运行并且没有更多微任务时通知，这意味着我们将放弃VM转向。此事件仅被调用一次。</target>
        </trans-unit>
        <trans-unit id="e334aa61249c5a9f4d3c93e17830a67cfd2596a6" translate="yes" xml:space="preserve">
          <source>Notifies when there is no more microtasks enqueued in the current VM Turn. This is a hint for Angular to do change detection, which may enqueue more microtasks. For this reason this event can fire multiple times per VM Turn.</source>
          <target state="translated">当当前虚拟机Turn中没有更多的微任务enqueued时通知。这是对Angular进行变更检测的提示,可能会让更多的微任务入库。为此,该事件在每个VM Turn中可以多次触发。</target>
        </trans-unit>
        <trans-unit id="91196a4bb4525bb970608d38f446c43b9434f902" translate="yes" xml:space="preserve">
          <source>Nougat (7.0), Marshmallow (6.0), Lollipop (5.0, 5.1), KitKat (4.4)</source>
          <target state="translated">牛轧糖(7.0)、棉花糖(6.0)、棒棒糖(5.0、5.1)、KitKat(4.4)</target>
        </trans-unit>
        <trans-unit id="d9499aa3edb773a42335b31a89b82134a0aa14d8" translate="yes" xml:space="preserve">
          <source>Nov 28, 2019</source>
          <target state="translated">2019年11月28日</target>
        </trans-unit>
        <trans-unit id="1965edd2281e8c818ff89aadca53b4c61e55465e" translate="yes" xml:space="preserve">
          <source>Nov 28, 2020</source>
          <target state="translated">2020年11月28日</target>
        </trans-unit>
        <trans-unit id="39f0affb54c0e760316554da0b339f4060ec9e40" translate="yes" xml:space="preserve">
          <source>Nov 3, 2018</source>
          <target state="translated">2018年11月3日</target>
        </trans-unit>
        <trans-unit id="59cb4cac574d164db8af25ffc6bef61b907f0ac8" translate="yes" xml:space="preserve">
          <source>Nov 3, 2019</source>
          <target state="translated">2019年11月3日</target>
        </trans-unit>
        <trans-unit id="e3b82040565bb4be6b11f778a2e3df327ed20a3b" translate="yes" xml:space="preserve">
          <source>Now</source>
          <target state="translated">Now</target>
        </trans-unit>
        <trans-unit id="dbbf3b93a5f06490dbad6953e20f867b07ab34cf" translate="yes" xml:space="preserve">
          <source>Now &lt;a href=&quot;docs-style-guide#ugly-anchors&quot;&gt;link to that custom anchor name&lt;/a&gt; as you did before.</source>
          <target state="translated">现在像以前一样&lt;a href=&quot;docs-style-guide#ugly-anchors&quot;&gt;链接到该自定义锚名称&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be2637c067a128a864587d81b2ad8e93ec4c37de" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; returns an &lt;code&gt;Observable&lt;/code&gt; of type &lt;code&gt;&lt;a href=&quot;../api/common/http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; rather than just the JSON data contained in the body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9b3f9877bccae6c0bc6b63cbf2455a67b5c7aa" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; returns an &lt;code&gt;Observable&lt;/code&gt; of type &lt;code&gt;&lt;a href=&quot;../api/common/http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; rather than just the JSON data.</source>
          <target state="translated">现在， &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; 返回一个 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 类型的 &lt;code&gt;Observable&lt;/code&gt; ，而不仅仅是JSON数据。</target>
        </trans-unit>
        <trans-unit id="1fb73cde75c19db6fdcefbb2cf6dead78babb5bc" translate="yes" xml:space="preserve">
          <source>Now add a new behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081aba198c945280ea9a8d78da36d3b8ee68a0d2" translate="yes" xml:space="preserve">
          <source>Now add a test that gets the component's element from &lt;code&gt;fixture.nativeElement&lt;/code&gt; and looks for the expected text.</source>
          <target state="translated">现在添加一个测试，该测试从 &lt;code&gt;fixture.nativeElement&lt;/code&gt; 获取组件的元素并查找所需的文本。</target>
        </trans-unit>
        <trans-unit id="a5e41bfa864085cc0d6942881475d0e793dc00ca" translate="yes" xml:space="preserve">
          <source>Now apply that reasoning to the following example:</source>
          <target state="translated">现在把这个道理应用到下面的例子中。</target>
        </trans-unit>
        <trans-unit id="78b9f4fb848bc82eecf129603e91b1eca3652e57" translate="yes" xml:space="preserve">
          <source>Now click the &lt;em&gt;Crisis Center&lt;/em&gt; link for a list of ongoing crises.</source>
          <target state="translated">现在，单击&amp;ldquo; &lt;em&gt;危机中心&amp;rdquo;&lt;/em&gt;链接以获取正在进行的危机的列表。</target>
        </trans-unit>
        <trans-unit id="2d9df8448a20deb27391d24d300f8607281087e8" translate="yes" xml:space="preserve">
          <source>Now clicking &quot;New Hero&quot; resets both the form and its control flags.</source>
          <target state="translated">现在点击 &quot;新英雄 &quot;可以重置表单和它的控制标志。</target>
        </trans-unit>
        <trans-unit id="60b35e44ad6b6fdacc16d5fbb3ee2ef4d47f77bd" translate="yes" xml:space="preserve">
          <source>Now clicking &lt;strong&gt;New Hero&lt;/strong&gt; resets both the form and its control flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcd3030a2143c83e66b7b122008421eddf2dd05" translate="yes" xml:space="preserve">
          <source>Now conditionally exclude a &lt;em&gt;select&lt;/em&gt;&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">现在，有条件地将&lt;em&gt;选择&lt;/em&gt; &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 与 &lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt; 排除在外。</target>
        </trans-unit>
        <trans-unit id="d3252058bb77eeb5aa82eb998ca811799962d99d" translate="yes" xml:space="preserve">
          <source>Now consider a lazy loaded module that also provides a service called &lt;code&gt;UserService&lt;/code&gt;.</source>
          <target state="translated">现在考虑一个延迟加载的模块，该模块还提供一个名为 &lt;code&gt;UserService&lt;/code&gt; 的服务。</target>
        </trans-unit>
        <trans-unit id="92831a218c46c49fe732c9afcdca563a9895a096" translate="yes" xml:space="preserve">
          <source>Now convert the template of this component into Angular syntax. The search controls replace the AngularJS &lt;code&gt;$ctrl&lt;/code&gt; expressions with Angular's two-way &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; binding syntax:</source>
          <target state="translated">现在，将此组件的模板转换为Angular语法。搜索控件使用Angular的双向 &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; &lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt; ]]绑定语法替换AngularJS &lt;code&gt;$ctrl&lt;/code&gt; 表达式：</target>
        </trans-unit>
        <trans-unit id="a6db90e40d4dc7881bb7b39d5fc9aa711d321b27" translate="yes" xml:space="preserve">
          <source>Now create a new &lt;code&gt;app.module.ts&lt;/code&gt; with the minimum &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; class:</source>
          <target state="translated">现在使用最小的 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 类创建一个新的 &lt;code&gt;app.module.ts&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="95a24eeedcc9308fdb1cbf8aa172fa9e0eb25d1b" translate="yes" xml:space="preserve">
          <source>Now create the root &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; class called &lt;code&gt;AppModule&lt;/code&gt;. There is already a file named &lt;code&gt;app.module.ts&lt;/code&gt; that holds the AngularJS module. Rename it to &lt;code&gt;app.module.ajs.ts&lt;/code&gt; and update the corresponding script name in the &lt;code&gt;index.html&lt;/code&gt; as well. The file contents remain:</source>
          <target state="translated">现在创建名为 &lt;code&gt;AppModule&lt;/code&gt; 的根 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 类。已经有一个名为 &lt;code&gt;app.module.ts&lt;/code&gt; 的文件，其中包含AngularJS模块。将其重命名为 &lt;code&gt;app.module.ajs.ts&lt;/code&gt; 并在 &lt;code&gt;index.html&lt;/code&gt; 中也更新相应的脚本名称。文件内容保留：</target>
        </trans-unit>
        <trans-unit id="05dfc259a7fb160418b361d767e881fb864d19be" translate="yes" xml:space="preserve">
          <source>Now demonstrate it in a harness component whose template defines two bindings to this pipe, both requesting the heroes from the &lt;code&gt;heroes.json&lt;/code&gt; file.</source>
          <target state="translated">现在在一个线束组件中进行演示，该组件的模板定义了对此管道的两个绑定，两个绑定都从 &lt;code&gt;heroes.json&lt;/code&gt; 文件中请求英雄。</target>
        </trans-unit>
        <trans-unit id="461b4bc6c19d75290ddf943ec76dd7b2a1ad9862" translate="yes" xml:space="preserve">
          <source>Now deprecated:</source>
          <target state="translated">现已废弃。</target>
        </trans-unit>
        <trans-unit id="964026c5dae68aec5890167594d69dd0acb0b225" translate="yes" xml:space="preserve">
          <source>Now edit the &lt;code&gt;AdminDashboardComponent&lt;/code&gt; to display the log of preloaded routes.</source>
          <target state="translated">现在，编辑 &lt;code&gt;AdminDashboardComponent&lt;/code&gt; 以显示预加载路线的日志。</target>
        </trans-unit>
        <trans-unit id="d9ae4a25f96d363e4216ca6bb99b2ba1b57adbf6" translate="yes" xml:space="preserve">
          <source>Now edit the generated &lt;code&gt;src/app/highlight.directive.ts&lt;/code&gt; to look as follows:</source>
          <target state="translated">现在，编辑生成的 &lt;code&gt;src/app/highlight.directive.ts&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="823a17a1466ae3779c585b18502cd6a9d65b08f2" translate="yes" xml:space="preserve">
          <source>Now extend the observable result with the &lt;code&gt;pipe()&lt;/code&gt; method and give it a &lt;code&gt;catchError()&lt;/code&gt; operator.</source>
          <target state="translated">现在，使用 &lt;code&gt;pipe()&lt;/code&gt; 方法扩展可观察的结果，并 &lt;code&gt;catchError()&lt;/code&gt; 赋予catchError（）运算符。</target>
        </trans-unit>
        <trans-unit id="4a0fb32572aab0cfb89d0154c3f108563b519f2d" translate="yes" xml:space="preserve">
          <source>Now if you delete the Name, you violate the &quot;required&quot; rule, which is duly noted in the error message. The &lt;em&gt;Submit&lt;/em&gt; button is also disabled.</source>
          <target state="translated">现在，如果删除名称，则违反了&amp;ldquo;必需&amp;rdquo;规则，该规则已在错误消息中适当注明。在&lt;em&gt;提交&lt;/em&gt;按钮也将被禁用。</target>
        </trans-unit>
        <trans-unit id="1e286649605b4cdcc3d7475cda8c6eddeef913f5" translate="yes" xml:space="preserve">
          <source>Now imagine a hosting parent component that binds to the &lt;code&gt;deleteRequest&lt;/code&gt; event of the &lt;code&gt;ItemDetailComponent&lt;/code&gt;.</source>
          <target state="translated">现在想象一个托管父组件，该组件绑定到 &lt;code&gt;ItemDetailComponent&lt;/code&gt; 的 &lt;code&gt;deleteRequest&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="357f377145f4963391f7ad2b484687b5ec422a31" translate="yes" xml:space="preserve">
          <source>Now import and declare the newly created pipe and remove the filter &amp;lt;script&amp;gt; tag from &lt;code&gt;index.html&lt;/code&gt;:</source>
          <target state="translated">现在导入并声明新创建的管道，并从 &lt;code&gt;index.html&lt;/code&gt; 中删除过滤器&amp;lt;script&amp;gt;标记：</target>
        </trans-unit>
        <trans-unit id="cf7170cc3ead79baf3672126979190cfd6d31f29" translate="yes" xml:space="preserve">
          <source>Now import the &lt;code&gt;AuthGuard&lt;/code&gt; into the &lt;code&gt;AppRoutingModule&lt;/code&gt; and add the &lt;code&gt;AuthGuard&lt;/code&gt; to the &lt;code&gt;&lt;a href=&quot;../api/router/route#canLoad&quot;&gt;canLoad&lt;/a&gt;&lt;/code&gt; array property for the &lt;code&gt;admin&lt;/code&gt; route. The completed admin route looks like this:</source>
          <target state="translated">现在导入 &lt;code&gt;AuthGuard&lt;/code&gt; 到 &lt;code&gt;AppRoutingModule&lt;/code&gt; 并添加 &lt;code&gt;AuthGuard&lt;/code&gt; 到 &lt;code&gt;&lt;a href=&quot;../api/router/route#canLoad&quot;&gt;canLoad&lt;/a&gt;&lt;/code&gt; 数组属性的 &lt;code&gt;admin&lt;/code&gt; 路线。完成的管理路由如下所示：</target>
        </trans-unit>
        <trans-unit id="97c0f3005f1bcc55e33a8201387858d1767de477" translate="yes" xml:space="preserve">
          <source>Now import the &lt;code&gt;AuthGuard&lt;/code&gt; into the &lt;code&gt;AppRoutingModule&lt;/code&gt; and add the &lt;code&gt;AuthGuard&lt;/code&gt; to the &lt;code&gt;canLoad&lt;/code&gt; array property for the &lt;code&gt;admin&lt;/code&gt; route. The completed admin route looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b836f3574819289be4274fa8741846071b4a3c" translate="yes" xml:space="preserve">
          <source>Now launch the TypeScript compiler from the command line in watch mode:</source>
          <target state="translated">现在从命令行以监视模式启动TypeScript编译器。</target>
        </trans-unit>
        <trans-unit id="cea9bc4df5ef0aed4f96da7f3e5fba85c3a68113" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s add some logic to it. The following code retrieves the command and arguments from the user options, spawns the new process, and waits for the process to finish. If the process is successful (returns a code of 0), it resolves the return value.</source>
          <target state="translated">现在让我们添加一些逻辑。以下代码从用户选项中检索命令和参数，生成新进程，并等待该进程完成。如果处理成功（返回代码0），则解析返回值。</target>
        </trans-unit>
        <trans-unit id="b24abf9dc185858f14c376ab8788987c0f0a50c3" translate="yes" xml:space="preserve">
          <source>Now look at how the browser and service worker handle the updated application.</source>
          <target state="translated">现在看看浏览器和服务工作者如何处理更新后的应用程序。</target>
        </trans-unit>
        <trans-unit id="aa3e4b1abb8f6fd359454a4428264d5e3c459143" translate="yes" xml:space="preserve">
          <source>Now look at the component's template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5182118ed2d7a9f52a68efa9e2275c52a1ec71" translate="yes" xml:space="preserve">
          <source>Now look at the component's template:</source>
          <target state="translated">现在看看组件的模板。</target>
        </trans-unit>
        <trans-unit id="ea46e4622cad843d686ba743b22a133738e8e043" translate="yes" xml:space="preserve">
          <source>Now requests made in the course of your tests hit the testing backend instead of the normal backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a25734338df521e44ff13a270203cce683ac11" translate="yes" xml:space="preserve">
          <source>Now requests made in the course of your tests will hit the testing backend instead of the normal backend.</source>
          <target state="translated">现在,在你的测试过程中提出的请求将打到测试后端,而不是正常的后端。</target>
        </trans-unit>
        <trans-unit id="98a01892c59d53b9056b9b561655ffe86dc1b126" translate="yes" xml:space="preserve">
          <source>Now run the app and look at the &lt;em&gt;Name&lt;/em&gt; input box. Follow these steps &lt;em&gt;precisely&lt;/em&gt;:</source>
          <target state="translated">现在运行该应用程序，然后查看&amp;ldquo; &lt;em&gt;名称&amp;rdquo;&lt;/em&gt;输入框。按照这些步骤&lt;em&gt;正是&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="d7dac50e126237aea132e235b38b0a6e9b8645c1" translate="yes" xml:space="preserve">
          <source>Now run the app. It should display the title and hero name:</source>
          <target state="translated">现在运行该应用程序。它应该显示标题和英雄的名字。</target>
        </trans-unit>
        <trans-unit id="7e1ecc0ef3d5a53d92ccefa181700e0018c5594b" translate="yes" xml:space="preserve">
          <source>Now run the application to see the &lt;code&gt;HighlightDirective&lt;/code&gt; in action.</source>
          <target state="translated">现在运行该应用程序以查看 &lt;code&gt;HighlightDirective&lt;/code&gt; 的实际效果。</target>
        </trans-unit>
        <trans-unit id="6054ca5587a773649913d761d56148660e33f0bd" translate="yes" xml:space="preserve">
          <source>Now set the remaining &lt;code&gt;phone-detail.component.ts&lt;/code&gt; as follows:</source>
          <target state="translated">现在，按如下所示设置其余的 &lt;code&gt;phone-detail.component.ts&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3c367bf53fb80a0788621b443cbb2320bb48a842" translate="yes" xml:space="preserve">
          <source>Now take note of the &lt;code&gt;afterGetHeroes()&lt;/code&gt; method. Your first instinct might have been to create an &lt;code&gt;ngOnInit&lt;/code&gt; method in &lt;code&gt;SortedHeroesComponent&lt;/code&gt; and do the sorting there. But Angular calls the &lt;em&gt;derived&lt;/em&gt; class's &lt;code&gt;ngOnInit&lt;/code&gt;&lt;em&gt;before&lt;/em&gt; calling the base class's &lt;code&gt;ngOnInit&lt;/code&gt; so you'd be sorting the heroes array &lt;em&gt;before they arrived&lt;/em&gt;. That produces a nasty error.</source>
          <target state="translated">现在记下 &lt;code&gt;afterGetHeroes()&lt;/code&gt; 方法。您的第一个本能可能是在 &lt;code&gt;SortedHeroesComponent&lt;/code&gt; 中创建 &lt;code&gt;ngOnInit&lt;/code&gt; 方法并在那里进行排序。但角调用&lt;em&gt;派生&lt;/em&gt;类的 &lt;code&gt;ngOnInit&lt;/code&gt; &lt;em&gt;之前&lt;/em&gt;调用基类的 &lt;code&gt;ngOnInit&lt;/code&gt; 所以你会选英雄阵列&lt;em&gt;在他们到达前&lt;/em&gt;。产生一个讨厌的错误。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e123e84e0d503161d6d3a1d2a1dbf668d9f537d8" translate="yes" xml:space="preserve">
          <source>Now that the &lt;code&gt;AppModule&lt;/code&gt; imports the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;, the next step is to inject the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service into your service so your app can fetch data and interact with external APIs and resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4447e662db5544ac0f0492a9b2c3e8a626d75280" translate="yes" xml:space="preserve">
          <source>Now that the &lt;code&gt;FlowerService&lt;/code&gt; is provided in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator, when the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; requests the service, the injector has only to look as far as the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt;'s own &lt;code&gt;ElementInjector&lt;/code&gt;. It won't have to continue the search any further through the injector tree.</source>
          <target state="translated">现在，在 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;（）装饰器中提供了 &lt;code&gt;FlowerService&lt;/code&gt; ，当 &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; 请求该服务时，注入器仅需要查找 &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; 自己的 &lt;code&gt;ElementInjector&lt;/code&gt; 。无需再通过注入器树继续搜索。</target>
        </trans-unit>
        <trans-unit id="677d9053c3ba894e81177f9315671eed54630726" translate="yes" xml:space="preserve">
          <source>Now that the &lt;code&gt;getQuote()&lt;/code&gt; spy is returning async observables, most of your tests will have to be async as well.</source>
          <target state="translated">既然 &lt;code&gt;getQuote()&lt;/code&gt; 间谍返回的是异步可观察值，那么您的大多数测试也必须是异步的。</target>
        </trans-unit>
        <trans-unit id="e7dba8db77a8b9e3fc01e876c00ece6f37c8bb39" translate="yes" xml:space="preserve">
          <source>Now that the router has a route to &lt;code&gt;HeroDetailComponent&lt;/code&gt;, fix the dashboard hero links to navigate via the &lt;em&gt;parameterized&lt;/em&gt; dashboard route.</source>
          <target state="translated">现在，路由器具有到 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 的路由，修复仪表板英雄链接以通过&lt;em&gt;参数化的&lt;/em&gt;仪表板路由进行导航。</target>
        </trans-unit>
        <trans-unit id="e8cec91b2dc9134fb641c13185ee27ced9a52649" translate="yes" xml:space="preserve">
          <source>Now that you are loading &lt;code&gt;phone.service.ts&lt;/code&gt; through an import that is resolved by SystemJS, you should &lt;strong&gt;remove the &amp;lt;script&amp;gt; tag&lt;/strong&gt; for the service from &lt;code&gt;index.html&lt;/code&gt;. This is something you'll do to all components as you upgrade them. Simultaneously with the AngularJS to Angular upgrade you're also migrating code from scripts to modules.</source>
          <target state="translated">现在您正在通过SystemJS解析的导入加载 &lt;code&gt;phone.service.ts&lt;/code&gt; ，现在应该从 &lt;code&gt;index.html&lt;/code&gt; &lt;strong&gt;删除服务的&amp;lt;script&amp;gt;标记&lt;/strong&gt;。这是您在升级所有组件时要执行的操作。从AngularJS升级到Angular的同时，您还将代码从脚本迁移到模块。</target>
        </trans-unit>
        <trans-unit id="c231a5ec89ef8ef9f64c4f0e518e58b1a0bcd9fb" translate="yes" xml:space="preserve">
          <source>Now that you have TypeScript though, you can start benefiting from some of its features. There's a lot of value the language can provide to AngularJS applications.</source>
          <target state="translated">不过现在你已经有了TypeScript,你可以开始从它的一些特性中获益。该语言可以为AngularJS应用提供很多价值。</target>
        </trans-unit>
        <trans-unit id="d44c17683408615d821c56fc329cea0839ab82ba" translate="yes" xml:space="preserve">
          <source>Now that you have defined the complete model you are ready to create components to represent the dynamic form.</source>
          <target state="translated">现在您已经定义了完整的模型,您已经准备好创建组件来表示动态表单。</target>
        </trans-unit>
        <trans-unit id="0d963739089f648dabdcabda5cd68b6b2ca45c28" translate="yes" xml:space="preserve">
          <source>Now that you have defined your routes, you can add them to your application. First, add links to the two components. Assign the anchor tag that you want to add the route to the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; attribute. Set the value of the attribute to the component to show when a user clicks on each link. Next, update your component template to include &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt;. This element informs Angular to update the application view with the component for the selected route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10512840c1bd48ee7ec3ba82fa1b9fdeb105fe26" translate="yes" xml:space="preserve">
          <source>Now that you have routes for the &lt;code&gt;Heroes&lt;/code&gt; module, register them with the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; via the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; as you did in the &lt;code&gt;AppRoutingModule&lt;/code&gt;, with an important difference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae173e030893a651c868d22964d991589939b3b" translate="yes" xml:space="preserve">
          <source>Now that you have routes for the &lt;code&gt;Heroes&lt;/code&gt; module, register them with the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; via the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt;&lt;em&gt;almost&lt;/em&gt; as you did in the &lt;code&gt;AppRoutingModule&lt;/code&gt;.</source>
          <target state="translated">现在，您已经对路线 &lt;code&gt;Heroes&lt;/code&gt; 模块，与他们登记 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 通过 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; &lt;em&gt;差不多&lt;/em&gt;，你在做 &lt;code&gt;AppRoutingModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f5b424b133920495485a847554103b82eeb3505" translate="yes" xml:space="preserve">
          <source>Now that you have the infrastructure in place, you can define the main function that performs the modifications you need in the user's project.</source>
          <target state="translated">现在你已经有了基础架构,你可以定义在用户项目中执行你需要的修改的主要功能。</target>
        </trans-unit>
        <trans-unit id="b593c745cc74a1a73f70dfc1d0de951807013f5a" translate="yes" xml:space="preserve">
          <source>Now that you have the project name, use it to retrieve the project-specific configuration information.</source>
          <target state="translated">现在你已经有了项目名称,用它来检索项目特定的配置信息。</target>
        </trans-unit>
        <trans-unit id="cbd3a712023bfce03175f02bdf61f587361932b7" translate="yes" xml:space="preserve">
          <source>Now that you're binding via the alias to the &lt;code&gt;highlightColor&lt;/code&gt;, modify the &lt;code&gt;onMouseEnter()&lt;/code&gt; method to use that property. If someone neglects to bind to &lt;code&gt;appHighlight&lt;/code&gt;, highlight the host element in red:</source>
          <target state="translated">现在，您已经通过别名绑定到 &lt;code&gt;highlightColor&lt;/code&gt; ，修改 &lt;code&gt;onMouseEnter()&lt;/code&gt; 方法以使用该属性。如果有人忽略绑定到 &lt;code&gt;appHighlight&lt;/code&gt; ，请用红色突出显示主机元素：</target>
        </trans-unit>
        <trans-unit id="9ed3c3d096190a1b583f3eec0c0c3a48535b2016" translate="yes" xml:space="preserve">
          <source>Now that you've defined the form model in the component class, you need a checkout form to reflect the model in the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbf1d4af673e0b229add086221708378695d8ed" translate="yes" xml:space="preserve">
          <source>Now that you've seen how service workers cache your application, the next step is understanding how updates work.</source>
          <target state="translated">现在你已经看到了服务人员如何缓存你的应用程序,下一步是了解更新是如何工作的。</target>
        </trans-unit>
        <trans-unit id="c72b46b9c2f97721d01dbb4fc8766c089c7b8e33" translate="yes" xml:space="preserve">
          <source>Now that your app can retrieve shipping data, create a shipping component and template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d90a93219268bf854caa0f84caf30ae4950dfe" translate="yes" xml:space="preserve">
          <source>Now that your app can retrieve shipping data, you'll create a shipping component and associated template.</source>
          <target state="translated">现在,您的应用程序可以检索航运数据,您将创建一个航运组件和相关模板。</target>
        </trans-unit>
        <trans-unit id="18ccff9591e7981502d0c80f45b1c65d454c2b2e" translate="yes" xml:space="preserve">
          <source>Now that your library is installed, you can run the schematic using the &lt;code&gt;ng generate&lt;/code&gt; command.</source>
          <target state="translated">现在您的库已安装，您可以使用 &lt;code&gt;ng generate&lt;/code&gt; 命令运行原理图。</target>
        </trans-unit>
        <trans-unit id="825e70a3571f7ef43989791f0efe71a4da79cd11" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;AppModule&lt;/code&gt; knows about the feature module. If you were to add any service providers to the feature module, &lt;code&gt;AppModule&lt;/code&gt; would know about those too, as would any other feature modules. However, NgModules don&amp;rsquo;t expose their components by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994c06a9b3c626637f501e115a4a53bcc288cdfa" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;AppModule&lt;/code&gt; knows about the feature module. If you were to add any service providers to the feature module, &lt;code&gt;AppModule&lt;/code&gt; would know about those too, as would any other feature modules. However, NgModules don&amp;rsquo;t expose their components.</source>
          <target state="translated">现在， &lt;code&gt;AppModule&lt;/code&gt; 知道了功能模块。如果要将任何服务提供者添加到功能模块， &lt;code&gt;AppModule&lt;/code&gt; 也会知道这些服务提供者，其他任何功能模块也一样。但是，NgModules不公开其组件。</target>
        </trans-unit>
        <trans-unit id="7c1a435f43cdebf0feca007e512c240343d71b06" translate="yes" xml:space="preserve">
          <source>Now the app displays a &lt;em&gt;Name is required&lt;/em&gt; error message, because the input box is no longer pristine. The form remembers that you entered a name before clicking &lt;strong&gt;New Hero&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16422286fda1a8b63ef0a3cb704ce7f9dc48bb65" translate="yes" xml:space="preserve">
          <source>Now the app has no access to network interaction.</source>
          <target state="translated">现在该应用已经无法进入网络交互。</target>
        </trans-unit>
        <trans-unit id="7add14e56319552fd92d2fc69fcc07e1a53b1142" translate="yes" xml:space="preserve">
          <source>Now the app needs to show something else while the form is in the submitted state. Add the following HTML below the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; wrapper you just wrote:</source>
          <target state="translated">现在，应用程序需要在表单处于提交状态时显示其他内容。在您刚刚编写的 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 包装器下面添加以下HTML ：</target>
        </trans-unit>
        <trans-unit id="04cbffd3b0130ad6c489cd7fc1fef24c43c3b6c7" translate="yes" xml:space="preserve">
          <source>Now the child component has an &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; for sending data to the parent and a method for raising an event. The next step is in the parent.</source>
          <target state="translated">现在，子组件具有用于将数据发送到父组件的 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 和引发事件的方法。下一步是在父级中。</target>
        </trans-unit>
        <trans-unit id="e58d02cf48ab81dfcd69ff4fd10b072927c8e3cf" translate="yes" xml:space="preserve">
          <source>Now the file is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986f2c2b3de015effe713ac1a8299881bda3d82b" translate="yes" xml:space="preserve">
          <source>Now the heroes appear in an unordered list.</source>
          <target state="translated">现在英雄出现在一个无序的列表中。</target>
        </trans-unit>
        <trans-unit id="c558e1a9f826a6713ebc54a22692a56e087b7384" translate="yes" xml:space="preserve">
          <source>Now the important hooks for component manipulation and inspection are neatly organized and accessible from an instance of &lt;code&gt;Page&lt;/code&gt;.</source>
          <target state="translated">现在，可以从 &lt;code&gt;Page&lt;/code&gt; 的实例整齐地组织和访问用于组件操作和检查的重要挂钩。</target>
        </trans-unit>
        <trans-unit id="34948bb00fba567aba833324a1c5ef72aacfd251" translate="yes" xml:space="preserve">
          <source>Now the tests can control the component's hero directly by manipulating the spy-stub's &lt;code&gt;testHero&lt;/code&gt; and confirm that service methods were called.</source>
          <target state="translated">现在，这些测试可以通过操纵间谍存根的 &lt;code&gt;testHero&lt;/code&gt; 并确认调用了服务方法来直接控制组件的英雄。</target>
        </trans-unit>
        <trans-unit id="79d069966db064de949cb3973e9deb864abd2d5b" translate="yes" xml:space="preserve">
          <source>Now there are two AngularJS components using an Angular service! The components don't need to be aware of this, though the fact that the service returns observables and not promises is a bit of a giveaway. In any case, what you've achieved is a migration of a service to Angular without having to yet migrate the components that use it.</source>
          <target state="translated">现在有两个AngularJS组件使用了一个Angular服务! 这些组件不需要意识到这一点,尽管事实上服务返回的是观测值而不是承诺,但这也是一个小问题。无论如何,你已经实现了将一个服务迁移到Angular,而无需迁移使用它的组件。</target>
        </trans-unit>
        <trans-unit id="f57fe9ffc1bae9ad4f8dd8de9bd630ea15635769" translate="yes" xml:space="preserve">
          <source>Now there's a new &lt;code&gt;&amp;lt;hero-contact&amp;gt;&lt;/code&gt; element between the &lt;code&gt;&amp;lt;hero-bio&amp;gt;&lt;/code&gt; tags. Angular &lt;em&gt;projects&lt;/em&gt;, or &lt;em&gt;transcludes&lt;/em&gt;, the corresponding &lt;code&gt;HeroContactComponent&lt;/code&gt; into the &lt;code&gt;HeroBioComponent&lt;/code&gt; view, placing it in the &lt;code&gt;&amp;lt;ng-content&amp;gt;&lt;/code&gt; slot of the &lt;code&gt;HeroBioComponent&lt;/code&gt; template.</source>
          <target state="translated">现在， &lt;code&gt;&amp;lt;hero-bio&amp;gt;&lt;/code&gt; 标签之间有一个新的 &lt;code&gt;&amp;lt;hero-contact&amp;gt;&lt;/code&gt; 元素。角&lt;em&gt;项目&lt;/em&gt;，或&lt;em&gt;transcludes&lt;/em&gt;，相应 &lt;code&gt;HeroContactComponent&lt;/code&gt; 入 &lt;code&gt;HeroBioComponent&lt;/code&gt; 视图，将其放置在 &lt;code&gt;&amp;lt;ng-content&amp;gt;&lt;/code&gt; 的的槽 &lt;code&gt;HeroBioComponent&lt;/code&gt; 模板。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86530dec4e89aee683ff53e54908378941b3cfc5" translate="yes" xml:space="preserve">
          <source>Now update the &lt;code&gt;AppModule&lt;/code&gt; to import this &lt;code&gt;AppRoutingModule&lt;/code&gt; and also the declare the root &lt;code&gt;AppComponent&lt;/code&gt; as the bootstrap component. That tells Angular that it should bootstrap the app with the &lt;em&gt;root&lt;/em&gt;&lt;code&gt;AppComponent&lt;/code&gt; and insert its view into the host web page.</source>
          <target state="translated">现在，更新 &lt;code&gt;AppModule&lt;/code&gt; 以导入此 &lt;code&gt;AppRoutingModule&lt;/code&gt; ，并将根 &lt;code&gt;AppComponent&lt;/code&gt; 声明为引导程序组件。这告诉Angular应该使用&lt;em&gt;根&lt;/em&gt; &lt;code&gt;AppComponent&lt;/code&gt; 引导应用程序，并将其视图插入宿主网页。</target>
        </trans-unit>
        <trans-unit id="ef7f7bf54822569df51016f2eea7f62a075f7da1" translate="yes" xml:space="preserve">
          <source>Now use the Angular &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; directive in the template to display each item in the &lt;code&gt;heroes&lt;/code&gt; list.</source>
          <target state="translated">现在，在模板中使用Angular &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 指令显示 &lt;code&gt;heroes&lt;/code&gt; 列表中的每个项目。</target>
        </trans-unit>
        <trans-unit id="c5e8df4d912ab2294d4d374cc7572c8aa34fd245" translate="yes" xml:space="preserve">
          <source>Now we can register the &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;&lt;/code&gt; factory function for the service on an AngularJS module.</source>
          <target state="translated">现在，我们可以在AngularJS模块上为服务注册 &lt;code&gt;&lt;a href=&quot;downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;&lt;/code&gt; 工厂函数。</target>
        </trans-unit>
        <trans-unit id="bbfe9f3467ea9d1c7a4aa835517f0ff9aab5c43b" translate="yes" xml:space="preserve">
          <source>Now we'll add a new behavior:</source>
          <target state="translated">现在我们要增加一个新的行为。</target>
        </trans-unit>
        <trans-unit id="528d2e0908f98fa3efc83ae32c0f20bf07aa4ba7" translate="yes" xml:space="preserve">
          <source>Now when the user clicks a hero in the list, the &lt;code&gt;selectedHero&lt;/code&gt; changes. When the &lt;code&gt;selectedHero&lt;/code&gt; changes, the &lt;em&gt;property binding&lt;/em&gt; updates &lt;code&gt;hero&lt;/code&gt; and the &lt;code&gt;HeroDetailComponent&lt;/code&gt; displays the new hero.</source>
          <target state="translated">现在，当用户单击列表中的英雄时， &lt;code&gt;selectedHero&lt;/code&gt; 更改。当 &lt;code&gt;selectedHero&lt;/code&gt; 更改时，&lt;em&gt;属性绑定将&lt;/em&gt;更新 &lt;code&gt;hero&lt;/code&gt; ，并且 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 将显示新的hero。</target>
        </trans-unit>
        <trans-unit id="6b2f0b55b26a6856bc208626d11d23230d46684e" translate="yes" xml:space="preserve">
          <source>Now when the user visits &lt;code&gt;/sidekicks&lt;/code&gt;, or any other invalid URL, the browser displays &quot;Page not found&quot;. The browser address bar continues to point to the invalid URL.</source>
          <target state="translated">现在，当用户访问 &lt;code&gt;/sidekicks&lt;/code&gt; 或任何其他无效的URL时，浏览器将显示&amp;ldquo;找不到页面&amp;rdquo;。浏览器地址栏继续指向无效的URL。</target>
        </trans-unit>
        <trans-unit id="d41c30e02191e61cbbe8d2eaa9fa3d216b97307a" translate="yes" xml:space="preserve">
          <source>Now when you open your application, it displays the &lt;code&gt;heroes-list&lt;/code&gt; component by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18771d1acfd3f12792bd6860e4c6e5e7b69fe39" translate="yes" xml:space="preserve">
          <source>Now when you use Angular CLI build commands such as &lt;code&gt;ng build&lt;/code&gt; and &lt;code&gt;ng serve&lt;/code&gt;, Bazel is used behind the scenes. Outputs from Bazel appear in the &lt;code&gt;dist/bin&lt;/code&gt; folder.</source>
          <target state="translated">现在，当您使用 &lt;code&gt;ng build&lt;/code&gt; 和 &lt;code&gt;ng serve&lt;/code&gt; 等Angular CLI构建命令时，将在后台使用Bazel。Bazel的输出出现在 &lt;code&gt;dist/bin&lt;/code&gt; 文件夹中。</target>
        </trans-unit>
        <trans-unit id="c7a0ab3599c8865f3372601be75f741199232fc1" translate="yes" xml:space="preserve">
          <source>Now wrap the Angular &lt;code&gt;Heroes&lt;/code&gt; in an &lt;em&gt;AngularJS factory function&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt; and plug the factory into an AngularJS module. The name of the AngularJS dependency is up to you:</source>
          <target state="translated">现在，使用 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt; （）将Angular &lt;code&gt;Heroes&lt;/code&gt; 包装在&lt;em&gt;AngularJS工厂函数中&lt;/em&gt;，并将工厂插入AngularJS模块。AngularJS依赖项的名称取决于您：</target>
        </trans-unit>
        <trans-unit id="b53b500dedb6cbfa865600fcab08edc6dcc7f98c" translate="yes" xml:space="preserve">
          <source>Now you are responsible for chaining promises, handling errors, and calling &lt;code&gt;&lt;a href=&quot;../api/core/applicationinitstatus#done&quot;&gt;done&lt;/a&gt;()&lt;/code&gt; at the appropriate moments.</source>
          <target state="translated">现在，您将负责链接promise，处理错误以及在适当的时候调用 &lt;code&gt;&lt;a href=&quot;../api/core/applicationinitstatus#done&quot;&gt;done&lt;/a&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c5a201e77372f1fa1da7610c59afc6434b9079b" translate="yes" xml:space="preserve">
          <source>Now you are responsible for chaining promises, handling errors, and calling &lt;code&gt;done()&lt;/code&gt; at the appropriate moments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3218e36c36c89f9fee5810ace8f73165c4690d" translate="yes" xml:space="preserve">
          <source>Now you can add a simpler, more meaningful parent provider to your components.</source>
          <target state="translated">现在您可以为您的组件添加一个更简单、更有意义的父提供者。</target>
        </trans-unit>
        <trans-unit id="8e751b56a276d93f307ef9bedf14488b9d1a112b" translate="yes" xml:space="preserve">
          <source>Now you can bootstrap &lt;code&gt;AppModule&lt;/code&gt; using the &lt;code&gt;platformBrowserDynamic.bootstrapModule&lt;/code&gt; method.</source>
          <target state="translated">现在，您可以使用 &lt;code&gt;platformBrowserDynamic.bootstrapModule&lt;/code&gt; 方法来引导 &lt;code&gt;AppModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b3a1e136b1ed93fc9d6cc4cd3e580ac201d867b" translate="yes" xml:space="preserve">
          <source>Now you can inject the configuration object into any constructor that needs it, with the help of an &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;()&lt;/code&gt; parameter decorator.</source>
          <target state="translated">现在，您可以借助 &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;()&lt;/code&gt; 参数修饰器将配置对象注入需要它的任何构造函数中。</target>
        </trans-unit>
        <trans-unit id="92781f6a0d78ccaff03bcde26ff2133b15b2c96d" translate="yes" xml:space="preserve">
          <source>Now you can load Angular via SystemJS. You'll add the Angular polyfills and the SystemJS config to the end of the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section, and then you'll use &lt;code&gt;System.import&lt;/code&gt; to load the actual application:</source>
          <target state="translated">现在您可以通过SystemJS加载Angular。您将Angular polyfills和SystemJS配置添加到 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 部分的末尾，然后将使用 &lt;code&gt;System.import&lt;/code&gt; 加载实际的应用程序：</target>
        </trans-unit>
        <trans-unit id="671596674e3bd86db46df7786e3533ea2f9ec0b8" translate="yes" xml:space="preserve">
          <source>Now you can run the following commands to use the &lt;code&gt;--no-sandbox&lt;/code&gt; flag:</source>
          <target state="translated">现在，您可以运行以下命令来使用 &lt;code&gt;--no-sandbox&lt;/code&gt; 标志：</target>
        </trans-unit>
        <trans-unit id="a632b016e2d489b2a5e6887cbe4b9669e8232050" translate="yes" xml:space="preserve">
          <source>Now you can use this function to create an observable that publishes keydown events:</source>
          <target state="translated">现在你可以使用这个函数来创建一个可观察到的事件来发布键入事件。</target>
        </trans-unit>
        <trans-unit id="16250db81b906938bfea1e09f9e36f390523963f" translate="yes" xml:space="preserve">
          <source>Now you can write a test that expects a GET Request to occur and provides a mock response.</source>
          <target state="translated">现在你可以写一个测试,期望发生一个GET请求并提供一个模拟响应。</target>
        </trans-unit>
        <trans-unit id="356534438954877109de052a08e665aecd075a19" translate="yes" xml:space="preserve">
          <source>Now you could use your &lt;code&gt;ItemDirective&lt;/code&gt; in a component. This example uses &lt;code&gt;AppModule&lt;/code&gt;, but you'd do it the same way for a feature module. For more about directives, see &lt;a href=&quot;attribute-directives&quot;&gt;Attribute Directives&lt;/a&gt; and &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt;. You'd also use the same technique for &lt;a href=&quot;pipes&quot;&gt;pipes&lt;/a&gt; and components.</source>
          <target state="translated">现在，您可以在组件中使用 &lt;code&gt;ItemDirective&lt;/code&gt; 。本示例使用 &lt;code&gt;AppModule&lt;/code&gt; ，但是对于功能模块您将以相同的方式进行操作。有关指令的更多信息，请参见&lt;a href=&quot;attribute-directives&quot;&gt;属性指令&lt;/a&gt;和&lt;a href=&quot;structural-directives&quot;&gt;结构指令&lt;/a&gt;。您还将对&lt;a href=&quot;pipes&quot;&gt;管道&lt;/a&gt;和组件使用相同的技术。</target>
        </trans-unit>
        <trans-unit id="08b3b4b158b49b816ee798f564ecf6070bd36d04" translate="yes" xml:space="preserve">
          <source>Now you have a reason. You'd like to send the id of the current hero with the navigation request so that the &lt;code&gt;HeroListComponent&lt;/code&gt; can highlight that hero in its list. This is a &lt;em&gt;nice-to-have&lt;/em&gt; feature; the list will display perfectly well without it.</source>
          <target state="translated">现在你有一个理由。您想随导航请求一起发送当前英雄的ID，以便 &lt;code&gt;HeroListComponent&lt;/code&gt; 可以在其列表中突出显示该英雄。这是一个&lt;em&gt;不错的&lt;/em&gt;功能；没有它，该列表将完美显示。</target>
        </trans-unit>
        <trans-unit id="e3f68c2bd54737b5c6746e2a67e9c5ba506525fc" translate="yes" xml:space="preserve">
          <source>Now you have given the user a safeguard against unsaved changes.</source>
          <target state="translated">现在你已经给用户提供了一个保障,防止未保存的更改。</target>
        </trans-unit>
        <trans-unit id="1e8ad82e05d360e9326ee3754fdc722c68635783" translate="yes" xml:space="preserve">
          <source>Now you have routes configured and a place to render them, but how do you navigate? The URL could arrive directly from the browser address bar. But most of the time you navigate as a result of some user action such as the click of an anchor tag.</source>
          <target state="translated">现在你已经配置好了路由,也有了渲染它们的地方,但是如何导航呢?URL可以直接从浏览器地址栏到达。但大多数情况下,你的导航是由于一些用户操作的结果,比如点击一个锚标签。</target>
        </trans-unit>
        <trans-unit id="b8c6e28101d2f0f1ed27e2a0e238ac7868512ff9" translate="yes" xml:space="preserve">
          <source>Now you know how to use:</source>
          <target state="translated">现在你知道怎么用了吧。</target>
        </trans-unit>
        <trans-unit id="e45e3fae7d5230f9b1d361a75f6be79b5239cb1e" translate="yes" xml:space="preserve">
          <source>Now you need a component to demonstrate the pipe.</source>
          <target state="translated">现在你需要一个组件来演示管道。</target>
        </trans-unit>
        <trans-unit id="4865f9da84f736082da0ef0ad2c1a4452653ff0e" translate="yes" xml:space="preserve">
          <source>Now you need to display, listen, and extract at the same time.</source>
          <target state="translated">现在你需要同时显示、收听和提取。</target>
        </trans-unit>
        <trans-unit id="00d327498fa04d0aaac0be71048c528436ce2590" translate="yes" xml:space="preserve">
          <source>Now you need to downgrade the Angular component so you can use it in AngularJS. Instead of registering a component, you register a &lt;code&gt;phoneList&lt;/code&gt;&lt;em&gt;directive&lt;/em&gt;, a downgraded version of the Angular component.</source>
          <target state="translated">现在您需要降级Angular组件，以便可以在AngularJS中使用它。您无需注册组件，而是注册 &lt;code&gt;phoneList&lt;/code&gt; &lt;em&gt;指令&lt;/em&gt;（Angular组件的降级版本）。</target>
        </trans-unit>
        <trans-unit id="fabcfe9c39b7ee5e5ed15fce8613e94110abca6e" translate="yes" xml:space="preserve">
          <source>Now you should see both values in the browser:</source>
          <target state="translated">现在你应该在浏览器中看到这两个值。</target>
        </trans-unit>
        <trans-unit id="1105126bb0a082c27dd2fce38db2b1d997ad4d8a" translate="yes" xml:space="preserve">
          <source>Now you take the &lt;code&gt;Observables&lt;/code&gt; returned by the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; methods and &lt;em&gt;pipe them through&lt;/em&gt; to the error handler.</source>
          <target state="translated">现在，您将获取 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 方法返回的 &lt;code&gt;Observables&lt;/code&gt; ，并将&lt;em&gt;其通过管道传递&lt;/em&gt;给错误处理程序。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7c76b1b8a7d7aaadbd28641ed869fde4cd933d60" translate="yes" xml:space="preserve">
          <source>Now you'll add a new hero in this form. Place a &lt;em&gt;New Hero&lt;/em&gt; button at the bottom of the form and bind its click event to a &lt;code&gt;newHero&lt;/code&gt; component method.</source>
          <target state="translated">现在，您将以这种形式添加新英雄。在表单底部放置一个&lt;em&gt;New Hero&lt;/em&gt;按钮，并将其click事件绑定到 &lt;code&gt;newHero&lt;/code&gt; 组件方法。</target>
        </trans-unit>
        <trans-unit id="26617f4ec7367082b5f75aa3b416bfdad0724a39" translate="yes" xml:space="preserve">
          <source>Now you'll find new files in the Angular workspace:</source>
          <target state="translated">现在你会在Angular工作区找到新的文件。</target>
        </trans-unit>
        <trans-unit id="2d3847dde2903544e105c418a10a089b32c1dd6f" translate="yes" xml:space="preserve">
          <source>Now you're able to serve everything from the project root to the web browser. But you do &lt;em&gt;not&lt;/em&gt; want to have to change all the image and data paths used in the application code to match the development setup. For that reason, you'll add a &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag to &lt;code&gt;index.html&lt;/code&gt;, which will cause relative URLs to be resolved back to the &lt;code&gt;/app&lt;/code&gt; directory:</source>
          <target state="translated">现在，您可以提供从项目根目录到Web浏览器的所有服务。但是，你&lt;em&gt;不&lt;/em&gt;希望有改变这一切在应用程序代码用来匹配开发设置的图像和数据路径。因此，您要在 &lt;code&gt;index.html&lt;/code&gt; 中添加 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 标记，这将使相对URL解析回 &lt;code&gt;/app&lt;/code&gt; 目录：</target>
        </trans-unit>
        <trans-unit id="363d917bd91f09c26b866a93a351a24478afcbb7" translate="yes" xml:space="preserve">
          <source>Now you're ready to upgrade the Phone service itself. Replace the ngResource-based service in &lt;code&gt;phone.service.ts&lt;/code&gt; with a TypeScript class decorated as &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">现在，您准备升级电话服务本身。在更换基于ngResource服务 &lt;code&gt;phone.service.ts&lt;/code&gt; 与打字稿类装饰为 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a17920b9482ce1526748ebaf014e32af7b4ed95d" translate="yes" xml:space="preserve">
          <source>Now you're running both AngularJS and Angular at the same time. That's pretty exciting! You're not running any actual Angular components yet. That's next.</source>
          <target state="translated">现在你可以同时运行AngularJS和Angular了。这真是太令人兴奋了!你还没有运行任何实际的Angular组件。你还没有运行任何实际的Angular组件。这就是下一步。</target>
        </trans-unit>
        <trans-unit id="c5c23b237493ba58118ecd74acb24f6f9116315f" translate="yes" xml:space="preserve">
          <source>Now, TypeScript can infer the correct type the same way it does for built-in elements:</source>
          <target state="translated">现在,TypeScript可以像对内置元素一样推断出正确的类型。</target>
        </trans-unit>
        <trans-unit id="3073c011b4b03879fb8a69030fdf30c2deaac0bd" translate="yes" xml:space="preserve">
          <source>Now, build the project:</source>
          <target state="translated">现在,建立项目。</target>
        </trans-unit>
        <trans-unit id="e58d24f967ec605a4277e1e12ff5ad0a0072076d" translate="yes" xml:space="preserve">
          <source>Now, consider that &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; simply injects the &lt;code&gt;FlowerService&lt;/code&gt;:</source>
          <target state="translated">现在，考虑 &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; 只是注入 &lt;code&gt;FlowerService&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="385db9851e8dc59eb84001ba56b61b83700866e3" translate="yes" xml:space="preserve">
          <source>Now, in addition to the title that renders by default, the &lt;code&gt;CustomerDashboardComponent&lt;/code&gt; template renders too:</source>
          <target state="translated">现在，除了默认显示的标题之外， &lt;code&gt;CustomerDashboardComponent&lt;/code&gt; 模板也可以渲染：</target>
        </trans-unit>
        <trans-unit id="0f211056413d313893fd33573b60be910667bdea" translate="yes" xml:space="preserve">
          <source>Now, in order to see the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; working, add the following to the parent's template:</source>
          <target state="translated">现在，为了查看 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 工作原理，请将以下内容添加到父级的模板中：</target>
        </trans-unit>
        <trans-unit id="9816372ece2e5b46145f86d307b0ae1bede3b9e4" translate="yes" xml:space="preserve">
          <source>Now, in the &lt;code&gt;ChildComponent&lt;/code&gt; class, add a provider for &lt;code&gt;FlowerService&lt;/code&gt; to demonstrate more complex resolution rules in the upcoming sections:</source>
          <target state="translated">现在，在 &lt;code&gt;ChildComponent&lt;/code&gt; 类中，为 &lt;code&gt;FlowerService&lt;/code&gt; 添加一个提供程序，以在接下来的部分中演示更复杂的解析规则：</target>
        </trans-unit>
        <trans-unit id="c418264f80adc745aa21731adfd74b8b7b5570c4" translate="yes" xml:space="preserve">
          <source>Now, on every HTTP request made as part of rendering the app on the server, Angular can correctly resolve the request URL to an absolute URL, using the provided &lt;code&gt;options.url&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164448af25ecb5d5af743c8f0404254be8b97103" translate="yes" xml:space="preserve">
          <source>Now, on every HTTP request made on the server, this interceptor will fire and replace the request URL with the absolute URL provided in the Express &lt;code&gt;Request&lt;/code&gt; object.</source>
          <target state="translated">现在，在服务器上发出的每个HTTP请求上，此拦截器将触发并将请求URL替换为Express &lt;code&gt;Request&lt;/code&gt; 对象中提供的绝对URL 。</target>
        </trans-unit>
        <trans-unit id="e673af9c12c7e8dae720c59a0aa4117bfe1a7584" translate="yes" xml:space="preserve">
          <source>Now, put it all together in a micro-app that can display a list of heroes and add new heroes to the list. The user can add a hero by typing the hero's name in the input box and clicking &lt;strong&gt;Add&lt;/strong&gt;.</source>
          <target state="translated">现在，将它们放到一个微型应用程序中，该应用程序可以显示英雄列表并将新英雄添加到列表中。用户可以通过在输入框中输入英雄名称并单击&lt;strong&gt;添加&lt;/strong&gt;来&lt;strong&gt;添加&lt;/strong&gt;英雄。</target>
        </trans-unit>
        <trans-unit id="6c51173d5bd03aa194d309591860a911a36c467c" translate="yes" xml:space="preserve">
          <source>Now, send the &lt;code&gt;id&lt;/code&gt; of the current hero with the navigation request so that the &lt;code&gt;HeroListComponent&lt;/code&gt; can highlight that hero in its list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9abbba83c51ed21e4fde40ffb5f6a4d73e60ca" translate="yes" xml:space="preserve">
          <source>Now, when the user clicks on a name in the product list, the router navigates you to the distinct URL for the product, swaps out the product list component for the product details component, and displays the product details.</source>
          <target state="translated">现在,当用户点击产品列表中的名称时,路由器会将您导航到该产品的独特URL,将产品列表组件换成产品详情组件,并显示产品详情。</target>
        </trans-unit>
        <trans-unit id="5650646ca2461a1170d9e892c6920d58812bb7a0" translate="yes" xml:space="preserve">
          <source>Now, when users click on a name in the product list, the router navigates them to the distinct URL for the product, swaps out the product list component for the product details component, and displays the product details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ad64394ecf25c54bd8b619f657dede48d26165" translate="yes" xml:space="preserve">
          <source>Now, you can click on the &lt;em&gt;Admin&lt;/em&gt; button, which takes you to the &lt;em&gt;Login&lt;/em&gt; page with the provided &lt;code&gt;queryParamMap&lt;/code&gt; and &lt;code&gt;fragment&lt;/code&gt;. After you click the login button, notice that you have been redirected to the &lt;code&gt;Admin Dashboard&lt;/code&gt; page with the query parameters and fragment still intact in the address bar.</source>
          <target state="translated">现在，您可以单击&lt;em&gt;Admin&lt;/em&gt;按钮，该按钮将带您提供提供的 &lt;code&gt;queryParamMap&lt;/code&gt; 和 &lt;code&gt;fragment&lt;/code&gt; 的&lt;em&gt;Login&lt;/em&gt;页面。单击登录按钮后，请注意，您已被重定向到&amp;ldquo; &lt;code&gt;Admin Dashboard&lt;/code&gt; 页面，而地址栏中的查询参数和片段仍然完整无缺。</target>
        </trans-unit>
        <trans-unit id="c46e41142e6f6ec7138e7054041639047402b9c5" translate="yes" xml:space="preserve">
          <source>Now, you can click on the Admin button, which takes you to the Login page with the provided &lt;code&gt;queryParamMap&lt;/code&gt; and &lt;code&gt;fragment&lt;/code&gt;. After you click the login button, notice that you have been redirected to the &lt;code&gt;Admin Dashboard&lt;/code&gt; page with the query parameters and fragment still intact in the address bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8fdc533e7ebf361eee022748adf90dbdd429b0" translate="yes" xml:space="preserve">
          <source>Number of bytes uploaded or downloaded.</source>
          <target state="translated">上传或下载的字节数。</target>
        </trans-unit>
        <trans-unit id="8e3ed072350bf6896bfd56e3372a8adbb401f793" translate="yes" xml:space="preserve">
          <source>Number of child segments</source>
          <target state="translated">子段数量</target>
        </trans-unit>
        <trans-unit id="980b65576d0aa6729d710f3af55159749210dffd" translate="yes" xml:space="preserve">
          <source>NumberFormatStyle</source>
          <target state="translated">NumberFormatStyle</target>
        </trans-unit>
        <trans-unit id="669cf27771d36a7a86ce7ca843b106933857036b" translate="yes" xml:space="preserve">
          <source>NumberSymbol</source>
          <target state="translated">NumberSymbol</target>
        </trans-unit>
        <trans-unit id="f6886cefb07980bc0c752b8e9f1ae3bffc341dd5" translate="yes" xml:space="preserve">
          <source>NumberValueAccessor</source>
          <target state="translated">NumberValueAccessor</target>
        </trans-unit>
        <trans-unit id="ea7a1484b29f720f95c48a50411655a57d7b5eea" translate="yes" xml:space="preserve">
          <source>Numbers are formatted using patterns, like &lt;code&gt;#,###.00&lt;/code&gt;. For example, the pattern &lt;code&gt;#,###.00&lt;/code&gt; when used to format the number 12345.678 could result in &quot;12'345,678&quot;. That would happen if the grouping separator for your language is an apostrophe, and the decimal separator is a comma.</source>
          <target state="translated">数字使用 &lt;code&gt;#,###.00&lt;/code&gt; 类的格式进行格式化。例如，模式 &lt;code&gt;#,###.00&lt;/code&gt; 用于格式化数字12345.678时可能会导致&amp;ldquo; 12'345,678&amp;rdquo;。如果您的语言的分组分隔符是撇号，而十进制分隔符是逗号，则会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">Numeric</target>
        </trans-unit>
        <trans-unit id="f61f58717243894f8209850e6dfa27b4866bcd15" translate="yes" xml:space="preserve">
          <source>Numeric: 1 digit</source>
          <target state="translated">数字:1位数</target>
        </trans-unit>
        <trans-unit id="c897da7ae95620ddc7ab4eaba13d88ee997ba04d" translate="yes" xml:space="preserve">
          <source>Numeric: 2 digits + zero padded</source>
          <target state="translated">数字:2位数+0垫底</target>
        </trans-unit>
        <trans-unit id="ac85e289a5111a49c093b32446dacd1413a69c3e" translate="yes" xml:space="preserve">
          <source>Numeric: 3 digits + zero padded</source>
          <target state="translated">数值:3位数+0垫底</target>
        </trans-unit>
        <trans-unit id="9c0c408032d6d01311f2e91f8ee8db893fffb761" translate="yes" xml:space="preserve">
          <source>Numeric: 3 digits + zero padded (= milliseconds)</source>
          <target state="translated">数字:3位数+0垫底(=毫秒</target>
        </trans-unit>
        <trans-unit id="6aafe96d17fdf0fc3b92893d2c4193c2158eab30" translate="yes" xml:space="preserve">
          <source>Numeric: 4 digits or more + zero padded</source>
          <target state="translated">数字:4位数或以上+0垫底</target>
        </trans-unit>
        <trans-unit id="b25a8cc7dee6909ece362fa9930471d58a49bce6" translate="yes" xml:space="preserve">
          <source>Numeric: minimum digits</source>
          <target state="translated">数字:最小数字</target>
        </trans-unit>
        <trans-unit id="d459255f682464b4bc2d85fd539283259e417475" translate="yes" xml:space="preserve">
          <source>O, OO &amp;amp; OOO</source>
          <target state="translated">O，OO和OOO</target>
        </trans-unit>
        <trans-unit id="de972b449781e8b363165664000a140bc87f8bef" translate="yes" xml:space="preserve">
          <source>OOOO</source>
          <target state="translated">OOOO</target>
        </trans-unit>
        <trans-unit id="e70d3bd602e4616ed521dbc75b821aaa43066442" translate="yes" xml:space="preserve">
          <source>OPTIONS PROPERTIES</source>
          <target state="translated">期权物业</target>
        </trans-unit>
        <trans-unit id="1abfd8fa9e86107dd0aaf00ccf53b9d31cdd4ba7" translate="yes" xml:space="preserve">
          <source>OR install it with npm: &lt;code&gt;npm install -g typescript@latest&lt;/code&gt;.</source>
          <target state="translated">或使用npm安装它： &lt;code&gt;npm install -g typescript@latest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99e39cba79f65e281b455366f9242549288d5dcf" translate="yes" xml:space="preserve">
          <source>OS/X (bash)</source>
          <target state="translated">OS/X (bash)</target>
        </trans-unit>
        <trans-unit id="3367dfe3d559355fc25f130ee6514602f3493a9c" translate="yes" xml:space="preserve">
          <source>Obeys TypeScript's &lt;code&gt;strictNullChecks&lt;/code&gt; flag when validating the above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d50592b70a997e82a3839de9c69ef0c75660a9" translate="yes" xml:space="preserve">
          <source>Objectives</source>
          <target state="translated">Objectives</target>
        </trans-unit>
        <trans-unit id="c92258fa87a7fd87bfb0eac39b2cad3876c1531d" translate="yes" xml:space="preserve">
          <source>Observable</source>
          <target state="translated">Observable</target>
        </trans-unit>
        <trans-unit id="785a3f3b0ea9d70aa55967dc49e804eb212006fc" translate="yes" xml:space="preserve">
          <source>Observable &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">可观察的 &lt;code&gt;HeroService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6e2fb333ea04d6d296092c9bdec270aaafff8db" translate="yes" xml:space="preserve">
          <source>Observable creation functions</source>
          <target state="translated">可观察的创建功能</target>
        </trans-unit>
        <trans-unit id="62e8435b07b0e929cc1dffa87e53ebbceb45ce20" translate="yes" xml:space="preserve">
          <source>Observable data</source>
          <target state="translated">可观测数据</target>
        </trans-unit>
        <trans-unit id="0f83ae35ff248bf8cb655221ad8206b62264675a" translate="yes" xml:space="preserve">
          <source>Observable execution errors are delivered to the subscriber's error handler, and the subscriber automatically unsubscribes from the observable.</source>
          <target state="translated">可观察到的执行错误会被传递给订阅者的错误处理程序,订阅者会自动取消订阅可观察到的内容。</target>
        </trans-unit>
        <trans-unit id="90874d5fd2f5124aeb81b5ae417389012587a628" translate="yes" xml:space="preserve">
          <source>Observable subscriptions are cancellable. Unsubscribing removes the listener from receiving further values, and notifies the subscriber function to cancel work.</source>
          <target state="translated">可观察的订阅是可以取消的。取消订阅会使监听器不再接收更多的值,并通知订阅者函数取消工作。</target>
        </trans-unit>
        <trans-unit id="280a1a6cb91a67abe6185db4d0e161618a257d5e" translate="yes" xml:space="preserve">
          <source>Observable techniques and operators. See the &lt;a href=&quot;observables&quot;&gt;Observables&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8136b5b444e74956953de6d7e21de45a7208ed8b" translate="yes" xml:space="preserve">
          <source>Observables</source>
          <target state="translated">Observables</target>
        </trans-unit>
        <trans-unit id="30e14d185eeb8490cc7c75c30432edec8f889146" translate="yes" xml:space="preserve">
          <source>Observables &lt;code&gt;subscribe()&lt;/code&gt; is responsible for handling errors. Promises push errors to the child promises. This makes observables useful for centralized and predictable error handling.</source>
          <target state="translated">Observables subscription &lt;code&gt;subscribe()&lt;/code&gt; 负责处理错误。诺言将错误推向孩子的诺言。这使得可观察对象对于集中式和可预测的错误处理很有用。</target>
        </trans-unit>
        <trans-unit id="8966e8f44fb07002812ce2f223c191c58f1d0d9d" translate="yes" xml:space="preserve">
          <source>Observables and operators</source>
          <target state="translated">观察者和操作者</target>
        </trans-unit>
        <trans-unit id="2c0a8f53cdda10ab0bd4d5887abc2a699e9095ee" translate="yes" xml:space="preserve">
          <source>Observables are declarative&amp;mdash;that is, you define a function for publishing values, but it is not executed until a consumer subscribes to it. The subscribed consumer then receives notifications until the function completes, or until they unsubscribe.</source>
          <target state="translated">可观察变量是声明性的，即，您定义了一个用于发布值的函数，但直到消费者订阅它后，该函数才执行。然后，订阅的使用者会收到通知，直到功能完成或取消订阅为止。</target>
        </trans-unit>
        <trans-unit id="93ab2117177a7d20d9111101ecd4f4e38e6f877b" translate="yes" xml:space="preserve">
          <source>Observables are declarative; computation does not start until subscription. Promises execute immediately on creation. This makes observables useful for defining recipes that can be run whenever you need the result.</source>
          <target state="translated">可观察项是声明性的;在订阅之前,计算不会开始。承诺在创建时立即执行。这使得观测值对于定义配方非常有用,只要你需要结果就可以运行。</target>
        </trans-unit>
        <trans-unit id="b160012c6166e34c5bdefa46dcac19c1bac94227" translate="yes" xml:space="preserve">
          <source>Observables are not executed until a consumer subscribes. The &lt;code&gt;subscribe()&lt;/code&gt; executes the defined behavior once, and it can be called again. Each subscription has its own computation. Resubscription causes recomputation of values.</source>
          <target state="translated">观察者直到消费者订阅才执行。该 &lt;code&gt;subscribe()&lt;/code&gt; 执行一次定义的行为，它可以再次被调用。每个订阅都有自己的计算。重新订阅会导致重新计算值。</target>
        </trans-unit>
        <trans-unit id="2e102ee69c779948f1ae41fc642ce5644eb359da" translate="yes" xml:space="preserve">
          <source>Observables are often compared to promises. Here are some key differences:</source>
          <target state="translated">可观察到的东西经常被比作承诺。以下是一些关键的区别:</target>
        </trans-unit>
        <trans-unit id="9bb28d4febb9104ac022af5489313da08d4e8b56" translate="yes" xml:space="preserve">
          <source>Observables are very similar to event handlers that use the events API. Both techniques define notification handlers, and use them to process multiple values delivered over time. Subscribing to an observable is equivalent to adding an event listener. One significant difference is that you can configure an observable to transform an event before passing the event to the handler.</source>
          <target state="translated">观测器与使用事件API的事件处理程序非常相似。这两种技术都定义了通知处理程序,并使用它们来处理随时间传递的多个值。订阅一个observable相当于添加一个事件监听器。一个显著的区别是,你可以配置一个observable在将事件传递给处理程序之前对事件进行转换。</target>
        </trans-unit>
        <trans-unit id="1e59290cc3930f973e0b29f99ba859aad65b89ac" translate="yes" xml:space="preserve">
          <source>Observables behave somewhat differently from the alternative techniques in each of these situations, but offer some significant advantages. Here are detailed comparisons of the differences.</source>
          <target state="translated">在上述每一种情况下,可观测因素的表现与替代技术有些不同,但具有一些显著的优势。以下是对这些差异的详细比较。</target>
        </trans-unit>
        <trans-unit id="29b86c845413a3110f1c6984def0e28e9af725a3" translate="yes" xml:space="preserve">
          <source>Observables can deliver single or multiple values of any type to subscribers, either synchronously (as a function delivers a value to its caller) or on a schedule. A subscriber receives notification of new values as they are produced and notification of either normal completion or error completion.</source>
          <target state="translated">观测器可以向订阅者提供任何类型的单个或多个值,可以是同步的(就像一个函数向其调用者提供一个值一样),也可以是按计划的。订阅者会收到新值产生的通知,以及正常完成或错误完成的通知。</target>
        </trans-unit>
        <trans-unit id="e64a10ecf32eddcfb93b7609d0a93da2a9d645b7" translate="yes" xml:space="preserve">
          <source>Observables can simplify the implementation of type-ahead suggestions. Typically, a type-ahead has to do a series of separate tasks:</source>
          <target state="translated">观测值可以简化类型前建议的实现。通常情况下,类型先行者必须做一系列独立的任务。</target>
        </trans-unit>
        <trans-unit id="54ed5cd5266bdfeb305f4a9d721d88b6f8ac158e" translate="yes" xml:space="preserve">
          <source>Observables compared to arrays</source>
          <target state="translated">观测值与数组相比</target>
        </trans-unit>
        <trans-unit id="33061d9aa51ad55e0e39ece1c9fce85ebbe96428" translate="yes" xml:space="preserve">
          <source>Observables compared to events API</source>
          <target state="translated">与事件API相比,可观察到的事件</target>
        </trans-unit>
        <trans-unit id="7e83cd6a82ab26bd772a156a7d590b954e6b51bd" translate="yes" xml:space="preserve">
          <source>Observables compared to other techniques</source>
          <target state="translated">与其他技术相比的可观察性</target>
        </trans-unit>
        <trans-unit id="5855fd77921e99a1e777d7a837b5fc8fbfedaf31" translate="yes" xml:space="preserve">
          <source>Observables compared to promises</source>
          <target state="translated">与承诺相比可观察到的情况</target>
        </trans-unit>
        <trans-unit id="4d544e0f81246ce890ad290e4eb8a63576d6546d" translate="yes" xml:space="preserve">
          <source>Observables differentiate between chaining and subscription. Promises only have &lt;code&gt;.then()&lt;/code&gt; clauses. This makes observables useful for creating complex transformation recipes to be used by other part of the system, without causing the work to be executed.</source>
          <target state="translated">观察对象区分链接和订阅。承诺只有 &lt;code&gt;.then()&lt;/code&gt; 子句。这使得可观察对象对于创建要由系统其他部分使用的复杂转换配方很有用，而不会导致工作被执行。</target>
        </trans-unit>
        <trans-unit id="4f31634276ae0b6d7da9429fe6a77b639c9c5b4a" translate="yes" xml:space="preserve">
          <source>Observables differentiate between transformation function such as a map and subscription. Only subscription activates the subscriber function to start computing the values.</source>
          <target state="translated">观察者区分映射和订阅等转换函数。只有订阅才会激活订阅函数,开始计算数值。</target>
        </trans-unit>
        <trans-unit id="2542058ccb21f3ec072eb961a2e4af69d7704ac0" translate="yes" xml:space="preserve">
          <source>Observables do not mutate the server response (as can occur through chained &lt;code&gt;.then()&lt;/code&gt; calls on promises). Instead, you can use a series of operators to transform values as needed.</source>
          <target state="translated">可观察变量不会改变服务器响应（可以通过对promise 进行链接的 &lt;code&gt;.then()&lt;/code&gt; 调用来实现）。相反，您可以根据需要使用一系列运算符来转换值。</target>
        </trans-unit>
        <trans-unit id="d64b02b67e25d074f407a93f93433a03bc63e743" translate="yes" xml:space="preserve">
          <source>Observables in Angular</source>
          <target state="translated">Angular中的可观察项</target>
        </trans-unit>
        <trans-unit id="9d8868d84d679957521451004f5fad171a308cdd" translate="yes" xml:space="preserve">
          <source>Observables provide many values. Promises provide one. This makes observables useful for getting multiple values over time.</source>
          <target state="translated">可观察到的东西提供了许多价值。承诺提供一个值。这就使得观测值对于在一段时间内获得多个值非常有用。</target>
        </trans-unit>
        <trans-unit id="77c4a01c85c3ac2ce7133ef3e99221217b2c077f" translate="yes" xml:space="preserve">
          <source>Observables provide support for passing messages between parts of your application. They are used frequently in Angular and are the recommended technique for event handling, asynchronous programming, and handling multiple values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109c7ef3fece22c5a2d3b858b2a395fe70285d16" translate="yes" xml:space="preserve">
          <source>Observables provide support for passing messages between publishers and subscribers in your application. Observables offer significant benefits over other techniques for event handling, asynchronous programming, and handling multiple values.</source>
          <target state="translated">Observables为您的应用程序中的发布者和订阅者之间传递消息提供了支持。与其他事件处理、异步编程和处理多个值的技术相比,可观察项具有显著的优势。</target>
        </trans-unit>
        <trans-unit id="461ebaa1f07be70daced315214b9277178250b82" translate="yes" xml:space="preserve">
          <source>Observations</source>
          <target state="translated">Observations</target>
        </trans-unit>
        <trans-unit id="08168d03762ffc3483c2b2fffce378f6c11dbae9" translate="yes" xml:space="preserve">
          <source>Observe control states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4225298b274ef1bf2a3a26f4929b85790965a9dd" translate="yes" xml:space="preserve">
          <source>Obtaining a component reference is a bit tricky in Angular. Angular components themselves do not have a tree that you can inspect or navigate programmatically. The parent-child relationship is indirect, established through the components' &lt;a href=&quot;glossary#view&quot;&gt;view objects&lt;/a&gt;.</source>
          <target state="translated">在Angular中获取组件引用有些棘手。角组件本身没有树，您可以通过程序检查或浏览树。父子关系是间接的，通过组件的&lt;a href=&quot;glossary#view&quot;&gt;视图对象建立&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c35043d70a29551f83f6e081cebe2ff9400c970" translate="yes" xml:space="preserve">
          <source>Occasionally APIs change formats in a way that is not backward-compatible. A new version of the app may not be compatible with the old API format and thus may not be compatible with existing cached resources from that API.</source>
          <target state="translated">偶尔 API 会以不向后兼容的方式更改格式。应用程序的新版本可能与旧的 API 格式不兼容,因此可能与该 API 的现有缓存资源不兼容。</target>
        </trans-unit>
        <trans-unit id="950e5b0c6c85584f0d783503489f66ffacf77445" translate="yes" xml:space="preserve">
          <source>Occasionally it is desirable for the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; of a directive or component to alter the value bound to it, typically using a getter/setter pair for the input. As an example, consider this custom button component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16303cc54c8dfe2f9470baf107ce29acea50d287" translate="yes" xml:space="preserve">
          <source>Occasionally, it may be necessary to examine the Angular service worker in a running state to investigate issues or to ensure that it is operating as designed. Browsers provide built-in tools for debugging service workers and the Angular service worker itself includes useful debugging features.</source>
          <target state="translated">偶尔,可能需要检查运行状态下的Angular服务工,以调查问题或确保其按照设计运行。浏览器提供了调试服务工的内置工具,Angular服务工本身也包含了有用的调试功能。</target>
        </trans-unit>
        <trans-unit id="07da3eb47577618d394c3fa8b0a5590861dab816" translate="yes" xml:space="preserve">
          <source>Oct 18, 2018</source>
          <target state="translated">2018年10月18日</target>
        </trans-unit>
        <trans-unit id="25cfa189f2f5f94f39538dcc8442014aa9fc4b86" translate="yes" xml:space="preserve">
          <source>October/November 2019</source>
          <target state="translated">2019年10月/11月</target>
        </trans-unit>
        <trans-unit id="8c0697187ec5c3bf075b63a3ce1c75bbd5841f7c" translate="yes" xml:space="preserve">
          <source>Of course it catches errors in much the same manner &lt;a href=&quot;http#error-details&quot;&gt;described above&lt;/a&gt;.</source>
          <target state="translated">当然，它以与&lt;a href=&quot;http#error-details&quot;&gt;上述&lt;/a&gt;几乎相同的方式捕获错误。</target>
        </trans-unit>
        <trans-unit id="2d89f448342550836237d3ab6b17deef13e83f94" translate="yes" xml:space="preserve">
          <source>Of course specs that test the test helpers belong in the &lt;code&gt;test&lt;/code&gt; folder, next to their corresponding helper files.</source>
          <target state="translated">当然，测试测试助手的规范属于 &lt;code&gt;test&lt;/code&gt; 文件夹，位于其相应的助手文件旁边。</target>
        </trans-unit>
        <trans-unit id="9fcca52a438d7d41edd046584c4cc1cdfc971762" translate="yes" xml:space="preserve">
          <source>Of course you could reach into the DOM with standard JavaScript and attach event listeners manually. There are at least three problems with &lt;em&gt;that&lt;/em&gt; approach:</source>
          <target state="translated">当然，您可以使用标准JavaScript进入DOM并手动附加事件侦听器。至少有三个问题&lt;em&gt;是&lt;/em&gt;方法：</target>
        </trans-unit>
        <trans-unit id="e35b2ed1b9fd7dd8c47eb313124eb5710d9f1f7b" translate="yes" xml:space="preserve">
          <source>Of course, &lt;code&gt;HeroListComponent&lt;/code&gt; should do something with the injected &lt;code&gt;HeroService&lt;/code&gt;. Here's the revised component, making use of the injected service, side-by-side with the previous version for comparison.</source>
          <target state="translated">当然， &lt;code&gt;HeroListComponent&lt;/code&gt; 应该对注入的 &lt;code&gt;HeroService&lt;/code&gt; 做一些事情。这是修改后的组件，它与以前的版本并排使用注入的服务进行比较。</target>
        </trans-unit>
        <trans-unit id="9b34c53405e962990aac873af90ef66759158805" translate="yes" xml:space="preserve">
          <source>Offer Google engineers better integration with Angular and Google's internal server stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce667716547fa82bc8795ad7ef205e9410193ed0" translate="yes" xml:space="preserve">
          <source>Offset</source>
          <target state="translated">Offset</target>
        </trans-unit>
        <trans-unit id="215ce18708e65860f0fec7ec5be21add165fdd57" translate="yes" xml:space="preserve">
          <source>Often &lt;a href=&quot;interpolation&quot;&gt;interpolation&lt;/a&gt; and property binding can achieve the same results. The following binding pairs do the same thing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615221e93de5702f56502c83077e51e2f8408f40" translate="yes" xml:space="preserve">
          <source>Often this function will be implemented using an ES dynamic &lt;code&gt;import()&lt;/code&gt; expression. For example:</source>
          <target state="translated">通常，此功能将使用ES动态 &lt;code&gt;import()&lt;/code&gt; 表达式实现。例如：</target>
        </trans-unit>
        <trans-unit id="d99af778bebf475f57e3b69188e55ece9df9bc8d" translate="yes" xml:space="preserve">
          <source>Often you want to focus on a fragment of code within a sample code file. In this example, you focus on the &lt;code&gt;AppModule&lt;/code&gt; class and its &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata.</source>
          <target state="translated">通常，您希望专注于示例代码文件中的代码片段。在此示例中，您专注于 &lt;code&gt;AppModule&lt;/code&gt; 类及其 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 元数据。</target>
        </trans-unit>
        <trans-unit id="cc7bbf74fabc76a8b347133dfb207914ea08c46f" translate="yes" xml:space="preserve">
          <source>Often, as a user navigates your application, you want to pass information from one component to another. For example, consider an application that displays a shopping list of grocery items. Each item in the list has a unique &lt;code&gt;id&lt;/code&gt;. To edit an item, users click an Edit button, which opens an &lt;code&gt;EditGroceryItem&lt;/code&gt; component. You want that component to retrieve the &lt;code&gt;id&lt;/code&gt; for the grocery item so it can display the right information to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a974c828df3ce86f0234cc962dac890d85796c0" translate="yes" xml:space="preserve">
          <source>Old locale id</source>
          <target state="translated">旧的地点ID</target>
        </trans-unit>
        <trans-unit id="1a1c62dd1450a03f009ca93d48c9895be797329d" translate="yes" xml:space="preserve">
          <source>Older browsers send page requests to the server when the location URL changes &lt;em&gt;unless&lt;/em&gt; the change occurs after a &quot;#&quot; (called the &quot;hash&quot;). Routers can take advantage of this exception by composing in-application route URLs with hashes. Here's a &quot;hash URL&quot; that routes to the &lt;em&gt;Crisis Center&lt;/em&gt;.</source>
          <target state="translated">位置URL更改时，较旧的浏览器会将页面请求发送到服务器，&lt;em&gt;除非&lt;/em&gt;更改发生在&amp;ldquo;＃&amp;rdquo;（称为&amp;ldquo;哈希&amp;rdquo;）之后。路由器可以通过使用哈希将应用程序内路由URL组合在一起来利用此异常。这是一个路由到&lt;em&gt;危机中心&lt;/em&gt;的&amp;ldquo;哈希URL&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="4fd2d35d4c7c88c82d5bda592619f51f5b5eda10" translate="yes" xml:space="preserve">
          <source>Older browsers send page requests to the server when the location URL changes unless the change occurs after a &quot;#&quot; (called the &quot;hash&quot;). Routers can take advantage of this exception by composing in-application route URLs with hashes. Here's a &quot;hash URL&quot; that routes to the Crisis Center.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bf167cbc746627b0166d7d071acf973da01c80" translate="yes" xml:space="preserve">
          <source>Omitting the &lt;code&gt;header&lt;/code&gt; is fine when the source of the fragment is obvious. We just said that this is a fragment of the &lt;code&gt;app.module.ts&lt;/code&gt; file which was displayed immediately above, in full, with a header. There's no need to repeat the header.</source>
          <target state="translated">当片段的来源很明显时，可以省略 &lt;code&gt;header&lt;/code&gt; 。我们刚刚说过，这是 &lt;code&gt;app.module.ts&lt;/code&gt; 文件的一部分，该文件完全显示在上方，带有标题。无需重复标题。</target>
        </trans-unit>
        <trans-unit id="e6bfebc1cd263ffae5959c7c1ce56856029c45b3" translate="yes" xml:space="preserve">
          <source>Omitting the brackets renders the string &lt;code&gt;parentItem&lt;/code&gt;, not the value of &lt;code&gt;parentItem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4760b07578f04790c584723795bd92c547ce1e0d" translate="yes" xml:space="preserve">
          <source>Omitting the brackets will render the string &lt;code&gt;parentItem&lt;/code&gt;, not the value of &lt;code&gt;parentItem&lt;/code&gt;.</source>
          <target state="translated">省略支架将呈现串 &lt;code&gt;parentItem&lt;/code&gt; ，而不是价值 &lt;code&gt;parentItem&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="105acb5fda378d6915b87ac3556c85450ef17416" translate="yes" xml:space="preserve">
          <source>On blur</source>
          <target state="translated">关于模糊</target>
        </trans-unit>
        <trans-unit id="588d59c0ad2974cf644028bc97eebdd2c225b2a3" translate="yes" xml:space="preserve">
          <source>On blur (or equivalent), your class should call the registered function to allow the forms API to update itself:</source>
          <target state="translated">在模糊(或等价物)时,你的类应该调用注册的函数,让表单API自己更新。</target>
        </trans-unit>
        <trans-unit id="59a5ca610dcdcc66a63d70463625356a17fb956f" translate="yes" xml:space="preserve">
          <source>On each anchor tag, you see a &lt;a href=&quot;property-binding&quot;&gt;property binding&lt;/a&gt; to the &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; directive that looks like &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;routerLinkActive&lt;/a&gt;=&quot;...&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3cc300b22876a2d1a6c0fc79479dd3e48948f5" translate="yes" xml:space="preserve">
          <source>On each anchor tag, you see a &lt;a href=&quot;template-syntax#property-binding&quot;&gt;property binding&lt;/a&gt; to the &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; directive that look like &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;routerLinkActive&lt;/a&gt;=&quot;...&quot;&lt;/code&gt;.</source>
          <target state="translated">在每个定位标记上，您看到一个&lt;a href=&quot;template-syntax#property-binding&quot;&gt;绑定&lt;/a&gt;到 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; 指令的属性，看起来像 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;routerLinkActive&lt;/a&gt;=&quot;...&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45078ffe0a81d3978333faab763b71dee6d9bb2d" translate="yes" xml:space="preserve">
          <source>On the &lt;code&gt;form&lt;/code&gt; tag, use an &lt;code&gt;ngSubmit&lt;/code&gt; event binding to listen for the form submission and call the &lt;code&gt;onSubmit()&lt;/code&gt; method with the &lt;code&gt;checkoutForm&lt;/code&gt; value.</source>
          <target state="translated">在 &lt;code&gt;form&lt;/code&gt; 标签上，使用 &lt;code&gt;ngSubmit&lt;/code&gt; 事件绑定侦听表单提交，并使用 &lt;code&gt;checkoutForm&lt;/code&gt; 值调用 &lt;code&gt;onSubmit()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="bce75253ed75225f3fea391146a1bd210b810b5a" translate="yes" xml:space="preserve">
          <source>On the GitHub project page, configure it to &lt;a href=&quot;https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/#publishing-your-github-pages-site-from-a-docs-folder-on-your-master-branch&quot;&gt;publish from the docs folder&lt;/a&gt;.</source>
          <target state="translated">在GitHub项目页面上，将其配置为&lt;a href=&quot;https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/#publishing-your-github-pages-site-from-a-docs-folder-on-your-master-branch&quot;&gt;从docs文件夹发布&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ba6c65ce153f17047b9448c5c54cb5a79ea138b" translate="yes" xml:space="preserve">
          <source>On the first terminal, run the &lt;a href=&quot;cli/build&quot;&gt;&lt;code&gt;ng build&lt;/code&gt; command&lt;/a&gt; in &lt;em&gt;watch&lt;/em&gt; mode to compile the application to the &lt;code&gt;dist&lt;/code&gt; folder.</source>
          <target state="translated">在第一个终端上，以&lt;em&gt;监视&lt;/em&gt;方式运行&lt;a href=&quot;cli/build&quot;&gt; &lt;code&gt;ng build&lt;/code&gt; 命令&lt;/a&gt;，将应用程序编译到 &lt;code&gt;dist&lt;/code&gt; 文件夹。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47752c1f35e05bd5db3ee359b4ac43da09e4a796" translate="yes" xml:space="preserve">
          <source>On the next tick, the task to set the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance value is executed.</source>
          <target state="translated">在下一个刻度上，将执行设置 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例值的任务。</target>
        </trans-unit>
        <trans-unit id="cf3f308df6ab2f1567aae6a568a47bb60903252d" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;a href=&quot;https://en.wikipedia.org/wiki/The_Magical_Number_Seven,_Plus_or_Minus_Two&quot;&gt;psychologists believe&lt;/a&gt; that humans start to struggle when the number of adjacent interesting things exceeds nine. So when a folder has ten or more files, it may be time to create subfolders.</source>
          <target state="translated">另一方面，&lt;a href=&quot;https://en.wikipedia.org/wiki/The_Magical_Number_Seven,_Plus_or_Minus_Two&quot;&gt;心理学家认为&lt;/a&gt;，当相邻有趣事物的数量超过九时，人类就会开始挣扎。因此，当一个文件夹包含十个或更多文件时，可能是时候创建子文件夹了。</target>
        </trans-unit>
        <trans-unit id="dde7eb7169ccbdd8ad081e58137b9af3cf2cef5e" translate="yes" xml:space="preserve">
          <source>On the positive side, showing the element again is quick. The component's previous state is preserved and ready to display. The component doesn't re-initialize&amp;mdash;an operation that could be expensive. So hiding and showing is sometimes the right thing to do.</source>
          <target state="translated">从积极的一面看，再次显示该元素是很快的。组件的先前状态将保留并准备显示。该组件不会重新初始化-这可能是昂贵的操作。因此，隐藏和显示有时是正确的选择。</target>
        </trans-unit>
        <trans-unit id="8038ccc0dad229b1a3cf1eed833be0b2ac0ea190" translate="yes" xml:space="preserve">
          <source>On the right, move the &lt;code&gt;$(PATH)&lt;/code&gt; entry above the &lt;code&gt;$(DevEnvDir&lt;/code&gt;) entries. This tells Visual Studio to use the external tools (such as npm) found in the global path before using its own version of the external tools.</source>
          <target state="translated">在右侧，将 &lt;code&gt;$(PATH)&lt;/code&gt; 条目移至 &lt;code&gt;$(DevEnvDir&lt;/code&gt; ）条目上方。这告诉Visual Studio在使用自己的外部工具版本之前，请使用在全局路径中找到的外部工具（例如npm）。</target>
        </trans-unit>
        <trans-unit id="278c09ed5190baee2bf3aee083bd563eecb54bef" translate="yes" xml:space="preserve">
          <source>On the second terminal, install a web server (such as &lt;a href=&quot;https://github.com/johnpapa/lite-server&quot;&gt;lite-server&lt;/a&gt;), and run it against the output folder. For example:</source>
          <target state="translated">在第二个终端上，安装Web服务器（例如&lt;a href=&quot;https://github.com/johnpapa/lite-server&quot;&gt;lite-server&lt;/a&gt;），然后对输出文件夹运行它。例如：</target>
        </trans-unit>
        <trans-unit id="2a183574e64873dfb0e40e4ab36cd5076c09843a" translate="yes" xml:space="preserve">
          <source>OnChanges</source>
          <target state="translated">OnChanges</target>
        </trans-unit>
        <trans-unit id="9d34c39bf776e320711c925c3b5f2ad48e75d5fd" translate="yes" xml:space="preserve">
          <source>OnDestroy</source>
          <target state="translated">OnDestroy</target>
        </trans-unit>
        <trans-unit id="cb2b8c8bff23f0b5284bd4f85d2c9e04b704d932" translate="yes" xml:space="preserve">
          <source>OnInit</source>
          <target state="translated">OnInit</target>
        </trans-unit>
        <trans-unit id="95acf127018688ca75dbc54f96c64b42301bcd48" translate="yes" xml:space="preserve">
          <source>Once data arrives, you could push their raw &lt;code&gt;toString&lt;/code&gt; values directly to the view, but that rarely makes for a good user experience. For example, in most use cases, users prefer to see a date in a simple format like</source>
          <target state="translated">数据到达后，您可以将其原始 &lt;code&gt;toString&lt;/code&gt; 值直接推入视图，但这很少能带来良好的用户体验。例如，在大多数情况下，用户喜欢以简单的格式查看日期，例如</target>
        </trans-unit>
        <trans-unit id="dbc9b4b1e5f7c2efd3f7952edf2b5e8ee385e053" translate="yes" xml:space="preserve">
          <source>Once deployed, visit &lt;a href=&quot;https://your-firebase-project-name.firebaseapp.com&quot;&gt;https://your-firebase-project-name.firebaseapp.com&lt;/a&gt; to see it live!</source>
          <target state="translated">部署后，请访问&lt;a href=&quot;https://your-firebase-project-name.firebaseapp.com&quot;&gt;https://your-firebase-project-name.firebaseapp.com&lt;/a&gt;进行实时观看！</target>
        </trans-unit>
        <trans-unit id="327e2bf497d4756dd8b46b905bd1bc8bc1d4a344" translate="yes" xml:space="preserve">
          <source>Once done, you can load SystemJS and other dependencies, and also switch the configuration for loading application files so that they are &lt;em&gt;not&lt;/em&gt; included to the page by Karma. You'll let the shim and SystemJS load them.</source>
          <target state="translated">完成后，您可以加载SystemJS和其他依赖项，还可以切换配置以加载应用程序文件，这样Karma &lt;em&gt;就不&lt;/em&gt;会将它们包含在页面中。您将让shim和SystemJS加载它们。</target>
        </trans-unit>
        <trans-unit id="515a285ae6999eab70e56bb9b650918ca621d734" translate="yes" xml:space="preserve">
          <source>Once included, the CLI will include the stylesheet, whether the link tag's href URL is relative to the application root or the component file.</source>
          <target state="translated">一旦包含,CLI将包含样式表,无论链接标签的href URL是相对于应用程序根或组件文件。</target>
        </trans-unit>
        <trans-unit id="bcb755436e7abaa27cacec9ff4b8b8405a381078" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;ForbiddenValidatorDirective&lt;/code&gt; is ready, you can add its selector, &lt;code&gt;appForbiddenName&lt;/code&gt;, to any input element to activate it. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be979100be0f130068c6ce22440c04aade32c248" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;ForbiddenValidatorDirective&lt;/code&gt; is ready, you can simply add its selector, &lt;code&gt;appForbiddenName&lt;/code&gt;, to any input element to activate it. For example:</source>
          <target state="translated">一旦 &lt;code&gt;ForbiddenValidatorDirective&lt;/code&gt; 准备好了，你可以简单地添加到其选择， &lt;code&gt;appForbiddenName&lt;/code&gt; ，对任何输入元素来激活它。例如：</target>
        </trans-unit>
        <trans-unit id="fa30d75339e67b98b3d75fc951ba0ee759735569" translate="yes" xml:space="preserve">
          <source>Once the app warms up, you'll see a row of navigation buttons and the &lt;em&gt;Heroes&lt;/em&gt; view with its list of heroes.</source>
          <target state="translated">应用程式预热后，您会看到一排导航按钮，以及带有英雄列表的&lt;em&gt;英雄&lt;/em&gt;视图。</target>
        </trans-unit>
        <trans-unit id="e725771e0112c25987b195dd04b711e9be88c11a" translate="yes" xml:space="preserve">
          <source>Once the application loads the initial route, the &lt;code&gt;CrisisCenterModule&lt;/code&gt; is preloaded. Verify this by logging in to the &lt;code&gt;Admin&lt;/code&gt; feature area and noting that the &lt;code&gt;crisis-center&lt;/code&gt; is listed in the &lt;code&gt;Preloaded Modules&lt;/code&gt;. It also logs to the browser's console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afe0d112e482623769881f408f2b0ec643e2bf4" translate="yes" xml:space="preserve">
          <source>Once the application loads the initial route, the &lt;code&gt;CrisisCenterModule&lt;/code&gt; is preloaded. Verify this by logging in to the &lt;code&gt;Admin&lt;/code&gt; feature area and noting that the &lt;code&gt;crisis-center&lt;/code&gt; is listed in the &lt;code&gt;Preloaded Modules&lt;/code&gt;. It's also logged to the browser's console.</source>
          <target state="translated">一旦应用程序加载了初始路由， &lt;code&gt;CrisisCenterModule&lt;/code&gt; 预加载CrisisCenterModule。通过登录到&amp;ldquo; &lt;code&gt;Admin&lt;/code&gt; 功能区域并注意&amp;ldquo; &lt;code&gt;crisis-center&lt;/code&gt; 已在&amp;ldquo; &lt;code&gt;Preloaded Modules&lt;/code&gt; 列出来进行验证。它还已记录到浏览器的控制台。</target>
        </trans-unit>
        <trans-unit id="db1af027d419b436654d11f55fd681c8e43c8355" translate="yes" xml:space="preserve">
          <source>Once the network request completes, update the cache for future requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff45c4702b7e2b1b69b310c107de6727e84ae7a" translate="yes" xml:space="preserve">
          <source>Once the package is installed, add the following to the &lt;code&gt;&quot;compilerOptions&quot;&lt;/code&gt; section of your project's &lt;code&gt;tsconfig.json&lt;/code&gt;.</source>
          <target state="translated">安装软件包后，将以下内容添加到项目的 &lt;code&gt;tsconfig.json&lt;/code&gt; 的 &lt;code&gt;&quot;compilerOptions&quot;&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="c231f7af231bb23e243ffe3f2f118fe7793497d8" translate="yes" xml:space="preserve">
          <source>Once these are done, run:</source>
          <target state="translated">这些做完后,就跑。</target>
        </trans-unit>
        <trans-unit id="8ca78a6950503a5d3df5151e13211842557a6954" translate="yes" xml:space="preserve">
          <source>Once this is done we can get hold of services via the Angular &lt;code&gt;&lt;a href=&quot;../../../core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; as normal. Services that are (or have dependencies on) an upgraded AngularJS service, will be instantiated as needed by the AngularJS &lt;code&gt;$injector&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab093e960e981510826adeb3fd471f0884f6381" translate="yes" xml:space="preserve">
          <source>Once this is done we can get hold of services via the Angular &lt;code&gt;&lt;a href=&quot;../../../core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; as normal. Services that are (or have dependencies on) an upgraded AngularJS service, will be instantiated as needed by the AngularJS &lt;code&gt;&lt;a href=&quot;../upgrademodule#%24injector&quot;&gt;$injector&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">完成此操作后，我们可以正常通过Angular &lt;code&gt;&lt;a href=&quot;../../../core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 获得服务。AngularJS &lt;code&gt;&lt;a href=&quot;../upgrademodule#%24injector&quot;&gt;$injector&lt;/a&gt;&lt;/code&gt; 将根据需要实例化（或依赖于）升级的AngularJS服务的服务。</target>
        </trans-unit>
        <trans-unit id="525ba2620a79d64e9a8f50cede00c6c216d77769" translate="yes" xml:space="preserve">
          <source>Once this is done we can get hold of services via the AngularJS &lt;code&gt;$injector&lt;/code&gt; as normal. Services that are (or have dependencies on) a downgraded Angular service, will be instantiated as needed by the Angular root &lt;code&gt;&lt;a href=&quot;../../../core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a289b477923250939e59f73b39cbad472ba133be" translate="yes" xml:space="preserve">
          <source>Once this is done we can get hold of services via the AngularJS &lt;code&gt;&lt;a href=&quot;../upgrademodule#%24injector&quot;&gt;$injector&lt;/a&gt;&lt;/code&gt; as normal. Services that are (or have dependencies on) a downgraded Angular service, will be instantiated as needed by the Angular root &lt;code&gt;&lt;a href=&quot;../../../core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">完成此操作后，我们可以照常通过AngularJS &lt;code&gt;&lt;a href=&quot;../upgrademodule#%24injector&quot;&gt;$injector&lt;/a&gt;&lt;/code&gt; 获得服务。降级的Angular服务（或与之相关）的服务将由Angular root &lt;code&gt;&lt;a href=&quot;../../../core/injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; 根据需要实例化。</target>
        </trans-unit>
        <trans-unit id="0fb5c4848901bb0899c2dafc5cc3eabd8794504c" translate="yes" xml:space="preserve">
          <source>Once you have the source code downloaded and unzipped, install &lt;code&gt;Node.js&lt;/code&gt; and serve your app with the Angular CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b9175c244a12b84f5bd15eed125eb5c0f3bcda" translate="yes" xml:space="preserve">
          <source>Once you have the source code downloaded and unzipped, use the &lt;a href=&quot;https://angularconsole.com&quot;&gt;Angular Console&lt;/a&gt; to serve the application, or you install &lt;code&gt;Node.js&lt;/code&gt; and have the Angular CLI installed.</source>
          <target state="translated">下载并解压缩源代码后，请使用&lt;a href=&quot;https://angularconsole.com&quot;&gt;Angular控制台&lt;/a&gt;为应用程序提供服务，或者安装 &lt;code&gt;Node.js&lt;/code&gt; 并安装Angular CLI。</target>
        </trans-unit>
        <trans-unit id="e30ba625ee999d939a41ca3dd591e3de71f57409" translate="yes" xml:space="preserve">
          <source>Once you import a library using the &quot;scripts&quot; array, you should &lt;strong&gt;not&lt;/strong&gt; import it using an import statement in your TypeScript code (such as &lt;code&gt;import * as $ from 'jquery';&lt;/code&gt;). If you do, you'll end up with two different copies of the library: one imported as a global library, and one imported as a module. This is especially bad for libraries with plugins, like JQuery, because each copy will have different plugins.</source>
          <target state="translated">一旦导入使用&amp;ldquo;脚本&amp;rdquo;阵列库，你应该&lt;strong&gt;不是&lt;/strong&gt;在你的打字稿代码使用import语句导入（如 &lt;code&gt;import * as $ from 'jquery';&lt;/code&gt; ）。如果这样做，最终将得到该库的两个不同副本：一个作为全局库导入，另一个作为模块导入。这对于带有插件（如JQuery）的库尤其不利，因为每个副本将具有不同的插件。</target>
        </trans-unit>
        <trans-unit id="1d66884cd418d38436558a48d6c0b2f3a74b4d00" translate="yes" xml:space="preserve">
          <source>Once you introduce the Angular Router, using the Angular Router triggers navigations through the unified location service, still providing a single source for navigating with AngularJS and Angular.</source>
          <target state="translated">一旦引入Angular Router,使用Angular Router就会通过统一的位置服务触发导航,仍然为使用AngularJS和Angular导航提供了一个单一的来源。</target>
        </trans-unit>
        <trans-unit id="ee023cd0dabed619dfa80fc59fd42f6a58a8470a" translate="yes" xml:space="preserve">
          <source>Once you start the upgrade process and bring in SystemJS, configuration changes are needed for Karma. You need to let SystemJS load all the new Angular code, which can be done with the following kind of shim file:</source>
          <target state="translated">一旦你开始升级过程并引入SystemJS,就需要对Karma进行配置修改。你需要让SystemJS加载所有新的Angular代码,这可以通过以下一种shim文件来完成。</target>
        </trans-unit>
        <trans-unit id="092473dca34a9d2cc876a77d26a67e1896159e42" translate="yes" xml:space="preserve">
          <source>Once you're running a hybrid app, you can start the gradual process of upgrading code. One of the more common patterns for doing that is to use an Angular component in an AngularJS context. This could be a completely new component or one that was previously AngularJS but has been rewritten for Angular.</source>
          <target state="translated">一旦你运行的是一个混合应用,你就可以开始逐步升级代码的过程。其中一个比较常见的模式是在AngularJS上下文中使用一个Angular组件。这可能是一个全新的组件,也可能是一个之前是AngularJS但已经为Angular重写的组件。</target>
        </trans-unit>
        <trans-unit id="bd7a98f13e48be54bf5eaab3ea48f2d471fc1382" translate="yes" xml:space="preserve">
          <source>One &lt;code&gt;#docregion&lt;/code&gt; comment mentions &lt;strong&gt;&lt;em&gt;two&lt;/em&gt;&lt;/strong&gt; region names as does an &lt;code&gt;#enddocregion&lt;/code&gt; comment. This is a convenient way to start (or stop) multiple regions on the same code line. You could have put these comments on separate lines and many authors prefer to do so.</source>
          <target state="translated">一个 &lt;code&gt;#docregion&lt;/code&gt; 评论提到&lt;strong&gt;&lt;em&gt;2个&lt;/em&gt;&lt;/strong&gt;区域名称一样的 &lt;code&gt;#enddocregion&lt;/code&gt; 评论。这是在同一代码行上启动（或停止）多个区域的便捷方法。您可以将这些注释放在单独的行中，许多作者更喜欢这样做。</target>
        </trans-unit>
        <trans-unit id="8ac08bd7d3b020ac62f793bae708a96397cd94c4" translate="yes" xml:space="preserve">
          <source>One alternative is to provide and inject the configuration object in an NgModule like &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">一种选择是在NgModule之类的 &lt;code&gt;AppModule&lt;/code&gt; 中提供并注入配置对象。</target>
        </trans-unit>
        <trans-unit id="87135e35d744d977c20d6f84a74947e0d0ebccf8" translate="yes" xml:space="preserve">
          <source>One approach is to configure the testing module from the individual pieces as in this example:</source>
          <target state="translated">一种方法是像这个例子一样,从各个部件配置测试模块。</target>
        </trans-unit>
        <trans-unit id="5fe1a5bfbd76c9b1017d3107c26a761463dc1042" translate="yes" xml:space="preserve">
          <source>One approach is to dedicate a folder to localization and store related assets, such as internationalization files, there.</source>
          <target state="translated">一种方法是专门设立一个文件夹用于本地化,并在其中存储相关资产,如国际化文件。</target>
        </trans-unit>
        <trans-unit id="7200dfd4929de965d1957e81038031eddafa439a" translate="yes" xml:space="preserve">
          <source>One important assertion this disables verifies that a change detection pass does not result in additional changes to any bindings (also known as unidirectional data flow).</source>
          <target state="translated">这禁用的一个重要断言验证了变化检测通不会导致任何绑定的额外变化(也称为单向数据流)。</target>
        </trans-unit>
        <trans-unit id="65845d985000af3d6718bb9d79cd3a31684a2820" translate="yes" xml:space="preserve">
          <source>One of &quot;application&quot; or &quot;library&quot;. An application can run independently in a browser, while a library cannot.</source>
          <target state="translated">&quot;应用程序 &quot;或 &quot;库 &quot;之一。应用程序可以在浏览器中独立运行,而库则不能。</target>
        </trans-unit>
        <trans-unit id="8fb8337f3d8781cba55e079191d8a366b930d1b0" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;enabled&lt;/code&gt; or &lt;code&gt;disabled&lt;/code&gt;. When set to &lt;code&gt;enabled&lt;/code&gt;, the initial navigation starts before the root component is created. The bootstrap is blocked until the initial navigation is complete. This value is required for &lt;a href=&quot;../../guide/universal&quot;&gt;server-side rendering&lt;/a&gt; to work. When set to &lt;code&gt;disabled&lt;/code&gt;, the initial navigation is not performed. The location listener is set up before the root component gets created. Use if there is a reason to have more control over when the router starts its initial navigation due to some complex initialization logic.</source>
          <target state="translated">其中一个 &lt;code&gt;enabled&lt;/code&gt; 或 &lt;code&gt;disabled&lt;/code&gt; 。设置为 &lt;code&gt;enabled&lt;/code&gt; 时，初始导航在创建根组件之前开始。引导程序将被阻止，直到完成初始导航为止。该值是&lt;a href=&quot;../../guide/universal&quot;&gt;服务器端渲染&lt;/a&gt;正常工作所必需的。设置为 &lt;code&gt;disabled&lt;/code&gt; ，不执行初始导航。位置侦听器是在创建根组件之前设置的。如果由于某种复杂的初始化逻辑，有理由对路由器何时开始其初始导航有更多的控制权，请使用。</target>
        </trans-unit>
        <trans-unit id="74847a2fb095301eab900b1f4bd833d7e7eef112" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;enabled&lt;/code&gt;, &lt;code&gt;enabledBlocking&lt;/code&gt;, &lt;code&gt;enabledNonBlocking&lt;/code&gt; or &lt;code&gt;disabled&lt;/code&gt;. When set to &lt;code&gt;enabled&lt;/code&gt; or &lt;code&gt;enabledBlocking&lt;/code&gt;, the initial navigation starts before the root component is created. The bootstrap is blocked until the initial navigation is complete. This value is required for &lt;a href=&quot;../../guide/universal&quot;&gt;server-side rendering&lt;/a&gt; to work. When set to &lt;code&gt;enabledNonBlocking&lt;/code&gt;, the initial navigation starts after the root component has been created. The bootstrap is not blocked on the completion of the initial navigation. When set to &lt;code&gt;disabled&lt;/code&gt;, the initial navigation is not performed. The location listener is set up before the root component gets created. Use if there is a reason to have more control over when the router starts its initial navigation due to some complex initialization logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd44bf9e00df7f056b06f5764807296f3f73b52c" translate="yes" xml:space="preserve">
          <source>One of the Angular compiler's most helpful features is the ability to type-check expressions within templates, and catch any errors before they cause crashes at runtime. In the template type-checking phase, the Angular template compiler uses the TypeScript compiler to validate the binding expressions in templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c04af86844f30e490ab3f542226d29b027b666" translate="yes" xml:space="preserve">
          <source>One of the best ways to keep your project bug free is through a test suite, but it's easy to forget to run tests all the time. Continuous integration (CI) servers let you set up your project repository so that your tests run on every commit and pull request.</source>
          <target state="translated">保持项目无错误的最好方法之一是通过测试套件,但很容易忘记一直运行测试。持续集成(CI)服务器可以让你设置你的项目仓库,使你的测试在每次提交和拉取请求时都能运行。</target>
        </trans-unit>
        <trans-unit id="f2df44dbf1904684ff1baf00aaa5092c07824864" translate="yes" xml:space="preserve">
          <source>One of the best ways to keep your project bug-free is through a test suite, but it's easy to forget to run tests all the time. Continuous integration (CI) servers let you set up your project repository so that your tests run on every commit and pull request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7652911aa9bead58c24b042fdf387cb71098df8e" translate="yes" xml:space="preserve">
          <source>One of the documentation design goals is that guide page code snippets should be examples of real, working code.</source>
          <target state="translated">文档设计的目标之一是,指导页代码片段应该是真实的、工作的代码的例子。</target>
        </trans-unit>
        <trans-unit id="edf6d16acb64bc01a6c63397cc7093717e206bbb" translate="yes" xml:space="preserve">
          <source>One of the easiest ways to get your site live is to host it using Firebase.</source>
          <target state="translated">让你的网站上线的最简单的方法之一就是使用Firebase进行托管。</target>
        </trans-unit>
        <trans-unit id="1ee15e3b19e2a210511409a92e03792bca31bb83" translate="yes" xml:space="preserve">
          <source>One of the keys to a successful upgrade is to do it incrementally, by running the two frameworks side by side in the same application, and porting AngularJS components to Angular one by one. This makes it possible to upgrade even large and complex applications without disrupting other business, because the work can be done collaboratively and spread over a period of time. The &lt;code&gt;upgrade&lt;/code&gt; module in Angular has been designed to make incremental upgrading seamless.</source>
          <target state="translated">成功升级的关键之一是通过在同一应用程序中并排运行两个框架，并将AngularJS组件一个接一个地移植到Angular，来逐步进行升级。这使升级甚至大型和复杂的应用程序成为可能，而不会中断其他业务，因为该工作可以协作完成并分散一段时间。Angular中的 &lt;code&gt;upgrade&lt;/code&gt; 模块旨在实现无缝升级。</target>
        </trans-unit>
        <trans-unit id="d321b4c2f612d92d87ff9ca870c2d0c179cdda08" translate="yes" xml:space="preserve">
          <source>One of the potential side effects of long caching is inadvertently caching an invalid resource. In a normal HTTP cache, a hard refresh or cache expiration limits the negative effects of caching an invalid file. A service worker ignores such constraints and effectively long caches the entire app. Consequently, it is essential that the service worker gets the correct content.</source>
          <target state="translated">长时间缓存的潜在副作用之一是无意中缓存了一个无效的资源。在正常的HTTP缓存中,硬刷新或缓存到期限制了缓存无效文件的负面影响。服务工作者忽略了这样的限制,并有效地对整个应用程序进行长缓存。因此,服务工作者必须获得正确的内容。</target>
        </trans-unit>
        <trans-unit id="39157ef46c453ad66cda0bcf9fdbe691e4af8017" translate="yes" xml:space="preserve">
          <source>One of the primary tools provided by ngUpgrade is called the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;. This is a module that contains utilities for bootstrapping and managing hybrid applications that support both Angular and AngularJS code.</source>
          <target state="translated">ngUpgrade提供的主要工具之一称为 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 。此模块包含用于引导和管理同时支持Angular和AngularJS代码的混合应用程序的实用程序。</target>
        </trans-unit>
        <trans-unit id="026249664bc8e8d6d2e8f156fab107887e23bd3a" translate="yes" xml:space="preserve">
          <source>One of the primary use cases for attribute binding is to set ARIA attributes, as in this example:</source>
          <target state="translated">属性绑定的主要用例之一是设置ARIA属性,如本例。</target>
        </trans-unit>
        <trans-unit id="04d0227058c93fedaf8acb513731b3d16375f926" translate="yes" xml:space="preserve">
          <source>One of these reference is in the &lt;em&gt;type position&lt;/em&gt;-- that is, it specifies &lt;code&gt;LibHeaderComponent&lt;/code&gt; as a type: &lt;code&gt;header: LibHeaderComponent;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056e56859c6f8ed9c98ae3e52da17afff459b25f" translate="yes" xml:space="preserve">
          <source>One or more animation &lt;code&gt;&lt;a href=&quot;../animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; calls, containing &lt;code&gt;&lt;a href=&quot;../animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; definitions. See the &lt;a href=&quot;../../guide/animations&quot;&gt;Animations guide&lt;/a&gt; and animations API documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe0dd72b9bf1774a092f344805f3e7ef7abc41b" translate="yes" xml:space="preserve">
          <source>One or more animation &lt;code&gt;&lt;a href=&quot;../animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; calls, containing &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; definitions. See the &lt;a href=&quot;../../guide/animations&quot;&gt;Animations guide&lt;/a&gt; and animations API documentation.</source>
          <target state="translated">一个或多个动画 &lt;code&gt;&lt;a href=&quot;../animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; 调用，其中包含 &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 定义。请参阅&lt;a href=&quot;../../guide/animations&quot;&gt;动画指南&lt;/a&gt;和动画API文档。</target>
        </trans-unit>
        <trans-unit id="823e563bcdba98c7d6093dcfc55a78207defc67c" translate="yes" xml:space="preserve">
          <source>One or more animation objects to which this transition applies.</source>
          <target state="translated">适用于此过渡的一个或多个动画对象。</target>
        </trans-unit>
        <trans-unit id="da759f83f6bf9b8c9d78c28d5e9f2fa981792d78" translate="yes" xml:space="preserve">
          <source>One or more animation objects, as returned by the &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; function, that form a transformation from one state to another. A sequence is used by default when you pass an array.</source>
          <target state="translated">由 &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; 函数返回的一个或多个动画对象，形成了从一种状态到另一种状态的转换。传递数组时，默认情况下使用序列。</target>
        </trans-unit>
        <trans-unit id="1643c273cbb0a7a1eed375f2d3d7841d30d1664b" translate="yes" xml:space="preserve">
          <source>One or more animation or style steps that form this group.</source>
          <target state="translated">一个或多个动画或风格步骤,形成这组。</target>
        </trans-unit>
        <trans-unit id="b2ed7e15cf363a7dca7330d77d500b84201d044a" translate="yes" xml:space="preserve">
          <source>One or more animation step objects.</source>
          <target state="translated">一个或多个动画步骤对象。</target>
        </trans-unit>
        <trans-unit id="dd1f0301234f3998d35c0883fa4f08599e4ae657" translate="yes" xml:space="preserve">
          <source>One or more animation steps to apply to the queried element or elements. An array is treated as an animation sequence.</source>
          <target state="translated">一个或多个动画步骤应用于被查询的元素。一个数组被视为一个动画序列。</target>
        </trans-unit>
        <trans-unit id="9e17caf2c0eba6c76dde189f27869a66bc4e5950" translate="yes" xml:space="preserve">
          <source>One or more animation steps.</source>
          <target state="translated">一个或多个动画步骤。</target>
        </trans-unit>
        <trans-unit id="ad87ad7668abb3c7f54e88720c5c83a975d7feb6" translate="yes" xml:space="preserve">
          <source>One or more inline CSS stylesheets to use in this component.</source>
          <target state="translated">在该组件中使用一个或多个内联CSS样式表。</target>
        </trans-unit>
        <trans-unit id="da19d141279f273421caa38456cde51272cb39b9" translate="yes" xml:space="preserve">
          <source>One or more names for the defined state in a comma-separated string. The following reserved state names can be supplied to define a style for specific use cases:</source>
          <target state="translated">逗号分隔的字符串中定义的状态的一个或多个名称。可以提供以下保留的状态名称,以定义特定用例的样式。</target>
        </trans-unit>
        <trans-unit id="5acf36149f7249268bf1fa59ce379718ab723d7d" translate="yes" xml:space="preserve">
          <source>One or more relative paths or absolute URLs for files containing CSS stylesheets to use in this component.</source>
          <target state="translated">包含CSS样式表的文件的一个或多个相对路径或绝对URL,以便在该组件中使用。</target>
        </trans-unit>
        <trans-unit id="d2b112eb5877cd6ceff82ee1872d5467977d0478" translate="yes" xml:space="preserve">
          <source>One ore more animation steps.</source>
          <target state="translated">一个或多个动画步骤。</target>
        </trans-unit>
        <trans-unit id="bc6546ec3391e69cc2df4ab134819aa8d7fa2247" translate="yes" xml:space="preserve">
          <source>One solution is to provide the full URL to your application on the server, and write an interceptor that can retrieve this value and prepend it to the request URL. If you're using the &lt;code&gt;ngExpressEngine&lt;/code&gt;, as shown in the example in this guide, half the work is already done. We'll assume this is the case, but it's trivial to provide the same functionality.</source>
          <target state="translated">一种解决方案是为服务器上的应用程序提供完整的URL，并编写一个拦截器，该拦截器可以检索此值并将其添加到请求URL的前面。如果您使用的是 &lt;code&gt;ngExpressEngine&lt;/code&gt; ，如本指南示例中所示，则一半的工作已经完成。我们假设是这种情况，但是提供相同的功能很简单。</target>
        </trans-unit>
        <trans-unit id="753743a1d555d2fcf0a1662a1071b664d83c738e" translate="yes" xml:space="preserve">
          <source>One structural directive per host element</source>
          <target state="translated">每个主元素一个结构指令</target>
        </trans-unit>
        <trans-unit id="3b7633c4b4f29521eb279a7629c957fbf11af7a0" translate="yes" xml:space="preserve">
          <source>One way to do this is to set the &lt;code&gt;styles&lt;/code&gt; property in the component metadata. The &lt;code&gt;styles&lt;/code&gt; property takes an array of strings that contain CSS code. Usually you give it one string, as in the following example:</source>
          <target state="translated">一种方法是在组件元数据中设置 &lt;code&gt;styles&lt;/code&gt; 属性。该 &lt;code&gt;styles&lt;/code&gt; 属性采用包含CSS代码字符串数组。通常，您给它一个字符串，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="ab8429c47a7e660af88147057ae660a8a9134c7d" translate="yes" xml:space="preserve">
          <source>One way to get the behavior you want is to change the object reference itself. You can replace the array with a new array containing the newly changed elements, and then input the new array to the pipe. In the above example, you can create an array with the new hero appended, and assign that to &lt;code&gt;heroes&lt;/code&gt;. Angular detects the change in the array reference and executes the pipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ea1e883846bbb530a2fe226ccf6808e34961c4" translate="yes" xml:space="preserve">
          <source>One-time string initialization</source>
          <target state="translated">一次性字符串初始化</target>
        </trans-unit>
        <trans-unit id="8024b5d6502faee6dc86d7b2f70631381695e2d5" translate="yes" xml:space="preserve">
          <source>One-way binding</source>
          <target state="translated">单向装订</target>
        </trans-unit>
        <trans-unit id="570d87b426698fc5798b7b0e16f1eb0d46a80468" translate="yes" xml:space="preserve">
          <source>One-way in</source>
          <target state="translated">单程</target>
        </trans-unit>
        <trans-unit id="99ddecd7df26d55bb66476c089ef805d296bb917" translate="yes" xml:space="preserve">
          <source>One-wayfrom data sourceto view target</source>
          <target state="translated">从数据源到查看目标的单向性。</target>
        </trans-unit>
        <trans-unit id="90fe11aa4a00441084772bf9d6a5020805e0059d" translate="yes" xml:space="preserve">
          <source>One-wayfrom view targetto data source</source>
          <target state="translated">从视图目标到数据源的单程。</target>
        </trans-unit>
        <trans-unit id="a6cc2fba9407219b07b35ced58c4123361f7f171" translate="yes" xml:space="preserve">
          <source>Only &lt;code&gt;title&lt;/code&gt; is required. See &lt;code&gt;Notification&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notification#Instance_properties&quot;&gt;instance properties&lt;/a&gt;.</source>
          <target state="translated">仅 &lt;code&gt;title&lt;/code&gt; 是必需的。请参阅 &lt;code&gt;Notification&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notification#Instance_properties&quot;&gt;实例属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef29c8c292e917c833bea85f0a931b52cf64587b" translate="yes" xml:space="preserve">
          <source>Only a few people are authorized to write marketing pages. This style guide does not discuss creation or maintenance of marketing pages.</source>
          <target state="translated">只有少数人被授权撰写营销页面。本风格指南不讨论营销页面的创建或维护。</target>
        </trans-unit>
        <trans-unit id="13048324cb0340a9fbff441b7dfd6985aef1ce2c" translate="yes" xml:space="preserve">
          <source>Only call &lt;a href=&quot;aot-compiler#supported-functions&quot;&gt;functions supported&lt;/a&gt; by the compiler.</source>
          <target state="translated">仅调用编译器&lt;a href=&quot;aot-compiler#supported-functions&quot;&gt;支持&lt;/a&gt;的函数。</target>
        </trans-unit>
        <trans-unit id="6df73a1ed459286b016ecd85ce35a9033467fcb3" translate="yes" xml:space="preserve">
          <source>Only call &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; in the root &lt;code&gt;AppRoutingModule&lt;/code&gt; (or the &lt;code&gt;AppModule&lt;/code&gt; if that's where you register top level application routes). In any other module, you must call the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;RouterModule.forChild()&lt;/a&gt;&lt;/code&gt; method to register additional routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83384edb39f8a49694fc87942417d24231ac44e" translate="yes" xml:space="preserve">
          <source>Only call &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; in the root &lt;code&gt;AppRoutingModule&lt;/code&gt; (or the &lt;code&gt;AppModule&lt;/code&gt; if that's where you register top level application routes). In any other module, you must call the &lt;strong&gt;&lt;code&gt;RouterModule.forChild&lt;/code&gt;&lt;/strong&gt; method to register additional routes.</source>
          <target state="translated">仅在根 &lt;code&gt;AppRoutingModule&lt;/code&gt; （或 &lt;code&gt;AppModule&lt;/code&gt; ,如果您在其中注册顶级应用程序路由）中调用 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; ）。在任何其他模块中，您必须调用&lt;strong&gt; &lt;code&gt;RouterModule.forChild&lt;/code&gt; &lt;/strong&gt;方法以注册其他路由。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7520351348a84ecf70cf22fcdb8e3dd1a7b77f80" translate="yes" xml:space="preserve">
          <source>Only call and import a &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; result in the root application module, &lt;code&gt;AppModule&lt;/code&gt;. Avoid importing it in any other module, particularly in a lazy-loaded module. For more information on &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; see &lt;a href=&quot;singleton-services#the-forroot-pattern&quot;&gt;the &lt;code&gt;forRoot()&lt;/code&gt; pattern&lt;/a&gt; section of the &lt;a href=&quot;singleton-services&quot;&gt;Singleton Services&lt;/a&gt; guide.</source>
          <target state="translated">仅在根应用程序模块 &lt;code&gt;AppModule&lt;/code&gt; 中调用并导入 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 结果。避免将其导入任何其他模块，尤其是在延迟加载的模块中。有关 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 的更多信息，请参见《&lt;a href=&quot;singleton-services&quot;&gt;Singleton Services》&lt;/a&gt;指南&lt;a href=&quot;singleton-services#the-forroot-pattern&quot;&gt;的&lt;/a&gt; &lt;code&gt;forRoot()&lt;/code&gt; 模式部分。</target>
        </trans-unit>
        <trans-unit id="bfa589ace9f4fe39806d1ade429071c19b671619" translate="yes" xml:space="preserve">
          <source>Only call and import a &lt;code&gt;forRoot()&lt;/code&gt; result in the root application module, &lt;code&gt;AppModule&lt;/code&gt;. Avoid importing it in any other module, particularly in a lazy-loaded module. For more information on &lt;code&gt;forRoot()&lt;/code&gt; see &lt;a href=&quot;singleton-services#the-forroot-pattern&quot;&gt;the &lt;code&gt;forRoot()&lt;/code&gt; pattern&lt;/a&gt; section of the &lt;a href=&quot;singleton-services&quot;&gt;Singleton Services&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
