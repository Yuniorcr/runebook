<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="7dd51ac3e89fdd6ac4f8af36c97748d2fc75ca6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt;: An alternative to setting the name attribute on the form control element. See the &lt;a href=&quot;ngmodel#using-ngmodel-on-a-standalone-control&quot;&gt;example&lt;/a&gt; for using &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; as a standalone control.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;：在表单控件元素上设置name属性的替代方法。参见&lt;a href=&quot;ngmodel#using-ngmodel-on-a-standalone-control&quot;&gt;例如&lt;/a&gt;用于使用 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 作为一个独立的控制。</target>
        </trans-unit>
        <trans-unit id="9cb0a27ab2f16df5a1ff706cb37064ebce7953b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngFor&lt;/strong&gt; to display an array of items.</source>
          <target state="translated">&lt;strong&gt;ngFor&lt;/strong&gt;显示项目数组。</target>
        </trans-unit>
        <trans-unit id="0ed64020b10c2028c643bac6c9fcbe35dc5bbabe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngIf&lt;/strong&gt; to conditionally display a chunk of HTML based on a boolean expression.</source>
          <target state="translated">&lt;strong&gt;ngIf&lt;/strong&gt;根据布尔表达式有条件地显示HTML块。</target>
        </trans-unit>
        <trans-unit id="47382f2af3d2086517884d17290a4ba36eef83d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;npm dependencies:&lt;/strong&gt; We only make npm dependency updates that require changes to your apps in a major release. In minor releases, we update peer dependencies by expanding the supported versions, but we do not require projects to update these dependencies until a future major version. This means that during minor Angular releases, npm dependency updates within Angular applications and libraries are optional.</source>
          <target state="translated">&lt;strong&gt;npm依赖项：&lt;/strong&gt;我们仅进行npm依赖项更新，而该更新需要在主要版本中更改您的应用程序。在次要版本中，我们通过扩展受支持的版本来更新对等项依赖关系，但是在以后的主要版本中，我们不需要项目来更新这些依赖关系。这意味着在较小的Angular版本中，Angular应用程序和库中的npm依赖项更新是可选的。</target>
        </trans-unit>
        <trans-unit id="ff81369876b9ff0fac39c86e3a98661d021aa73d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;protractor&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;protractor&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cc4a187d86b8d960c2f4e934b7227d8c93b309e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;read&lt;/strong&gt; - True to read a different token from the queried element.</source>
          <target state="translated">&lt;strong&gt;read-&lt;/strong&gt;真，从查询的元素中读取其他令牌。</target>
        </trans-unit>
        <trans-unit id="30f9789d7f7887863149267a695a35393566e015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;read&lt;/strong&gt; - True to read a different token from the queried elements.</source>
          <target state="translated">&lt;strong&gt;read-&lt;/strong&gt;真，用于从查询的元素中读取其他令牌。</target>
        </trans-unit>
        <trans-unit id="3be4c5497047480cc31393214ff3fbaf9f97818b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rxjs&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;rxjs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cb9d62b286f1e1937e2bbe02bd344681dc505e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector&lt;/strong&gt; - The directive type or the name used for querying.</source>
          <target state="translated">&lt;strong&gt;选择器&lt;/strong&gt; -用于查询的指令类型或名称。</target>
        </trans-unit>
        <trans-unit id="2d2f1fa325329675cba484c31321fb49a3aa1e9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;standalone&lt;/strong&gt;: When set to true, the &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; will not register itself with its parent form, and acts as if it's not in the form. Defaults to false.</source>
          <target state="translated">&lt;strong&gt;standalone&lt;/strong&gt;：设置为true时， &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 不会以其父表单注册自己，并表现为不在表单中。默认为false。</target>
        </trans-unit>
        <trans-unit id="4377d50a201b9ca0ce8477872ea95c93e7314fe2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;static&lt;/strong&gt; - True to resolve query results before change detection runs</source>
          <target state="translated">&lt;strong&gt;静态&lt;/strong&gt; -真，用于在运行更改检测之前解析查询结果</target>
        </trans-unit>
        <trans-unit id="ce06789f34cd111eacc6b321891b8144637e910d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;static&lt;/strong&gt; - True to resolve query results before change detection runs, false to resolve after change detection.</source>
          <target state="translated">&lt;strong&gt;静态&lt;/strong&gt; -在更改检测运行之前解析查询结果为true，在更改检测运行之后解析为false。</target>
        </trans-unit>
        <trans-unit id="8cf58d8bc4b5e24796ad859418cc2e60410160e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ts-node&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ts-node&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="252774e7da4ec3009c5f69ee513c9ab756bb91dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tslint&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;tslint&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1fef399d9497a91dc61d25242d9621caf49e787" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typescript&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;typescript&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6eac670ecd612eee291a7dc157fa6ca7b87c4a1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;updateOn&lt;/strong&gt;: Defines the event upon which the form control value and validity update. Defaults to 'change'. Possible values: &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;updateOn&lt;/strong&gt;：定义表单控件值和有效性更新的事件。默认为'change'。可能的值： &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f60e9ce82796fa904cd1cb51da24e3c3b5672849" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;updateOn&lt;/strong&gt;: Sets the default &lt;code&gt;updateOn&lt;/code&gt; value for all child &lt;code&gt;NgModels&lt;/code&gt; below it unless explicitly set by a child &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;ngModelOptions&lt;/code&gt;). Defaults to 'change'. Possible values: &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;updateOn&lt;/strong&gt;： &lt;code&gt;NgModels&lt;/code&gt; 下面的所有子NgModel设置默认的 &lt;code&gt;updateOn&lt;/code&gt; 值，除非子 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 使用 &lt;code&gt;ngModelOptions&lt;/code&gt; 明确设置）。默认为'change'。可能的值： &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eec75c43bf8e37fc0ef1b526f50f7ad95fab9da4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;zone.js&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;zone.js&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec143633e8d3b8f2a394a46e89f29ce13e3c7418" translate="yes" xml:space="preserve">
          <source>=0 (or any other number)</source>
          <target state="translated">= 0（或其他任何数字）</target>
        </trans-unit>
        <trans-unit id="d0db3c16323ae567a43bd22a4e5c5863dbeba52e" translate="yes" xml:space="preserve">
          <source>@angular/animations</source>
          <target state="translated">@angular/animations</target>
        </trans-unit>
        <trans-unit id="a2394e88013e9804af09d9f4e105d293570226f5" translate="yes" xml:space="preserve">
          <source>@angular/animations/browser</source>
          <target state="translated">@angular/animations/browser</target>
        </trans-unit>
        <trans-unit id="9de55435d30ad98c6faf865f81f9182847e85786" translate="yes" xml:space="preserve">
          <source>@angular/animations/browser/testing</source>
          <target state="translated">@angular/animations/browser/testing</target>
        </trans-unit>
        <trans-unit id="279ff4d8c49a936d48c1a77f46101304c9937d57" translate="yes" xml:space="preserve">
          <source>@angular/common</source>
          <target state="translated">@angular/common</target>
        </trans-unit>
        <trans-unit id="35f25f67f51ac375c4414d902cd89df76b82b645" translate="yes" xml:space="preserve">
          <source>@angular/common/http</source>
          <target state="translated">@angular/common/http</target>
        </trans-unit>
        <trans-unit id="47f28773359d75fd992705276203e7d02f2b769c" translate="yes" xml:space="preserve">
          <source>@angular/common/http/testing</source>
          <target state="translated">@angular/common/http/testing</target>
        </trans-unit>
        <trans-unit id="3b355a74fcf516cb572de7a18d614db5303b78d7" translate="yes" xml:space="preserve">
          <source>@angular/common/testing</source>
          <target state="translated">@angular/common/testing</target>
        </trans-unit>
        <trans-unit id="7bea4c6cce38c2240da9a825337a1a9abcabfd01" translate="yes" xml:space="preserve">
          <source>@angular/common/upgrade</source>
          <target state="translated">@angular/common/upgrade</target>
        </trans-unit>
        <trans-unit id="7010d397973168cac1aaf54fc8228b617d553f9c" translate="yes" xml:space="preserve">
          <source>@angular/core</source>
          <target state="translated">@angular/core</target>
        </trans-unit>
        <trans-unit id="9bd54b448bd160b9bdf56afcc4057d60c863c351" translate="yes" xml:space="preserve">
          <source>@angular/core/testing</source>
          <target state="translated">@angular/core/testing</target>
        </trans-unit>
        <trans-unit id="ed082ffeab17b92963b8e0373f3af558b0f94176" translate="yes" xml:space="preserve">
          <source>@angular/elements</source>
          <target state="translated">@angular/elements</target>
        </trans-unit>
        <trans-unit id="61015e41645b01550c86b2d125f2df9790ce7401" translate="yes" xml:space="preserve">
          <source>@angular/forms</source>
          <target state="translated">@angular/forms</target>
        </trans-unit>
        <trans-unit id="e26f7552c4a1f57a5df62b630b09631ff0e15c6f" translate="yes" xml:space="preserve">
          <source>@angular/http</source>
          <target state="translated">@angular/http</target>
        </trans-unit>
        <trans-unit id="e5d1b49b65dd984864e1410b698461c7d36bda5e" translate="yes" xml:space="preserve">
          <source>@angular/platform-browser</source>
          <target state="translated">@angular/platform-browser</target>
        </trans-unit>
        <trans-unit id="10e672eabc8358c20a1b99d0ae0d31870a79f19b" translate="yes" xml:space="preserve">
          <source>@angular/platform-browser-dynamic</source>
          <target state="translated">@angular/platform-browser-dynamic</target>
        </trans-unit>
        <trans-unit id="6b0aa1ede02b7a3f684f0fe214d166f170c82f71" translate="yes" xml:space="preserve">
          <source>@angular/platform-browser-dynamic/testing</source>
          <target state="translated">@angular/platform-browser-dynamic/testing</target>
        </trans-unit>
        <trans-unit id="2e11f0488a229e528fb4158f7aad4f7a6b2e6b25" translate="yes" xml:space="preserve">
          <source>@angular/platform-browser/animations</source>
          <target state="translated">@angular/platform-browser/animations</target>
        </trans-unit>
        <trans-unit id="9e90112b14f3f9d7405ff5bbf5ac41f6fad23e16" translate="yes" xml:space="preserve">
          <source>@angular/platform-browser/testing</source>
          <target state="translated">@angular/platform-browser/testing</target>
        </trans-unit>
        <trans-unit id="8527c36725a4add493230fab1d1ad63c30bb0603" translate="yes" xml:space="preserve">
          <source>@angular/platform-server</source>
          <target state="translated">@angular/platform-server</target>
        </trans-unit>
        <trans-unit id="410b9a42af4eeb82d92a052802bd26cc2f266e61" translate="yes" xml:space="preserve">
          <source>@angular/platform-server/testing</source>
          <target state="translated">@angular/platform-server/testing</target>
        </trans-unit>
        <trans-unit id="67f37ebc89fe2f40791a45ff79cc707894e40668" translate="yes" xml:space="preserve">
          <source>@angular/platform-webworker</source>
          <target state="translated">@angular/platform-webworker</target>
        </trans-unit>
        <trans-unit id="3643488d6d67c98970cbaf515cefbc9d56955a51" translate="yes" xml:space="preserve">
          <source>@angular/platform-webworker-dynamic</source>
          <target state="translated">@angular/platform-webworker-dynamic</target>
        </trans-unit>
        <trans-unit id="fc052c7d8c63d918f895798a4e19da09a87ad784" translate="yes" xml:space="preserve">
          <source>@angular/router</source>
          <target state="translated">@angular/router</target>
        </trans-unit>
        <trans-unit id="ab028ed01d9416a9fdc050529d3c99ec7d1e802e" translate="yes" xml:space="preserve">
          <source>@angular/router/testing</source>
          <target state="translated">@angular/router/testing</target>
        </trans-unit>
        <trans-unit id="a58e96f1bd36053d73916cb9200cae8facf5140e" translate="yes" xml:space="preserve">
          <source>@angular/router/upgrade</source>
          <target state="translated">@angular/router/upgrade</target>
        </trans-unit>
        <trans-unit id="9228aadf92cf122517fe58f2a91bd6ac28ad425e" translate="yes" xml:space="preserve">
          <source>@angular/service-worker</source>
          <target state="translated">@angular/service-worker</target>
        </trans-unit>
        <trans-unit id="d928864368b17a18265aaba4fdd5747c5ed71c42" translate="yes" xml:space="preserve">
          <source>@angular/upgrade</source>
          <target state="translated">@angular/upgrade</target>
        </trans-unit>
        <trans-unit id="81cf614360a6dce81230ded3f9d85bf8b6d75f48" translate="yes" xml:space="preserve">
          <source>@angular/upgrade/static</source>
          <target state="translated">@angular/upgrade/static</target>
        </trans-unit>
        <trans-unit id="2a3f18aae18753215405f0611d509473191a373f" translate="yes" xml:space="preserve">
          <source>@angular/upgrade/static/testing</source>
          <target state="translated">@angular/upgrade/static/testing</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="8bd005966c8583098ae25649268c453cb17489f3" translate="yes" xml:space="preserve">
          <source>A &quot;form submit&quot; is useless at the moment. To make it useful, bind the form's &lt;code&gt;ngSubmit&lt;/code&gt; event property to the hero form component's &lt;code&gt;onSubmit()&lt;/code&gt; method:</source>
          <target state="translated">目前，&amp;ldquo;表单提交&amp;rdquo;是没有用的。为了使其有用，请将表单的 &lt;code&gt;ngSubmit&lt;/code&gt; 事件属性绑定到英雄表单组件的 &lt;code&gt;onSubmit()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="65b987ca9a8742f1c3934c570876582add56deb6" translate="yes" xml:space="preserve">
          <source>A 0-based offset into the duration, in milliseconds.</source>
          <target state="translated">以0为基础的偏移到持续时间,以毫秒为单位。</target>
        </trans-unit>
        <trans-unit id="c369980a900e3de5edbe23891b4c94301d43b1bc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/glossary/index#di-token&quot;&gt;DI token&lt;/a&gt; for the router initializer that is called after the app is bootstrapped.</source>
          <target state="translated">一个&lt;a href=&quot;../../guide/glossary/index#di-token&quot;&gt;令牌DI&lt;/a&gt;的应用程序是自举后，路由器初始化时调用。</target>
        </trans-unit>
        <trans-unit id="84633910c748bad002ece66ced0127dfa10f310e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/glossary/index#di-token&quot;&gt;DI token&lt;/a&gt; for the router service.</source>
          <target state="translated">一个&lt;a href=&quot;../../guide/glossary/index#di-token&quot;&gt;DI令牌&lt;/a&gt;的路由器服务。</target>
        </trans-unit>
        <trans-unit id="05cbce62175736deed161b23149e79909f9ee6aa" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/structural-directives&quot;&gt;structural directive&lt;/a&gt; that renders a template for each item in a collection. The directive is placed on an element, which becomes the parent of the cloned templates.</source>
          <target state="translated">一种&lt;a href=&quot;../../guide/structural-directives&quot;&gt;结构指令&lt;/a&gt;，为集合中的每个项目呈现一个模板。指令放置在元素上，该元素成为克隆模板的父级。</target>
        </trans-unit>
        <trans-unit id="bfa958f8e1093a8bce449e50451aecb42605adbf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/structural-directives#the-asterisk--prefix&quot;&gt;shorthand form&lt;/a&gt; of the directive, &lt;code&gt;*&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;=&quot;condition&quot;&lt;/code&gt;, is generally used, provided as an attribute of the anchor element for the inserted template. Angular expands this into a more explicit version, in which the anchor element is contained in an &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">甲&lt;a href=&quot;../../guide/structural-directives#the-asterisk--prefix&quot;&gt;速记形式&lt;/a&gt;的指令， &lt;code&gt;*&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;=&quot;condition&quot;&lt;/code&gt; ，通常使用的，作为用于插入模板的锚定元件的属性提供。Angular将其扩展为更明确的版本，其中anchor元素包含在 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; 元素中。</target>
        </trans-unit>
        <trans-unit id="7af8b7462c7bffa9c6b00d7e9a922cb942a24b41" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guide/glossary/index#di-token&quot;&gt;DI token&lt;/a&gt; for the router initializer that is called after the app is bootstrapped.</source>
          <target state="translated">一个&lt;a href=&quot;../guide/glossary/index#di-token&quot;&gt;令牌DI&lt;/a&gt;的应用程序是自举后，路由器初始化时调用。</target>
        </trans-unit>
        <trans-unit id="2167e95d783d64dac9a3583e6f8be0cb7693f606" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guide/glossary/index#di-token&quot;&gt;DI token&lt;/a&gt; for the router service.</source>
          <target state="translated">一个&lt;a href=&quot;../guide/glossary/index#di-token&quot;&gt;DI令牌&lt;/a&gt;的路由器服务。</target>
        </trans-unit>
        <trans-unit id="671a4596a4f24339272ddfe627b37cb5ceee98f4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guide/structural-directives&quot;&gt;structural directive&lt;/a&gt; that renders a template for each item in a collection. The directive is placed on an element, which becomes the parent of the cloned templates.</source>
          <target state="translated">一种&lt;a href=&quot;../guide/structural-directives&quot;&gt;结构指令&lt;/a&gt;，为集合中的每个项目呈现一个模板。指令放置在元素上，该元素成为克隆模板的父级。</target>
        </trans-unit>
        <trans-unit id="28d80578ea8ec69937675a545d7c84d8b53020fb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;common/locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; used to configure the &lt;a href=&quot;common/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; service to represent its state in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;hash fragment&lt;/a&gt; of the browser's URL.</source>
          <target state="translated">一个&lt;a href=&quot;common/locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; ,&lt;/a&gt;用于配置&lt;a href=&quot;common/location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;服务以在浏览器URL 的&lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;哈希片段&lt;/a&gt;中表示其状态。</target>
        </trans-unit>
        <trans-unit id="e86265c3cf6b32ff2fd9442d3886514cc4425a3f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;common/locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; used to configure the &lt;a href=&quot;common/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; service to represent its state in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;path&lt;/a&gt; of the browser's URL.</source>
          <target state="translated">一个&lt;a href=&quot;common/locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; &lt;/a&gt;用于配置&lt;a href=&quot;common/location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;服务来表示它的状态&lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;路径&lt;/a&gt;浏览器的URL中。</target>
        </trans-unit>
        <trans-unit id="07b53ec1c6e80e65a6a934302fe8fff443c524f5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt; statement immediately before a field in a class definition that declares the type of that field. Some examples are &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;glossary#decorator&quot;&gt;装饰&lt;/a&gt;类定义声明该字段的类型的字段之前立即声明。一些例子是 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63d4d003e26971bd02516b5ffbc56282868ab70a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt; that appears immediately before a class definition, which declares the class to be of the given type, and provides metadata suitable to the type.</source>
          <target state="translated">甲&lt;a href=&quot;glossary#decorator&quot;&gt;装饰&lt;/a&gt;一个类的定义，这为类定义为给定类型的，并且提供的元数据适合于类型之前立即出现。</target>
        </trans-unit>
        <trans-unit id="736883308dcb282a137dbd91ee5819bc7558057c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;glossary#directive&quot;&gt;directive&lt;/a&gt; that acts as a placeholder in a routing component's template. Angular dynamically renders the template based on the current router state.</source>
          <target state="translated">一个&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;充当一个路由组件的模板的占位符。Angular根据当前路由器状态动态渲染模板。</target>
        </trans-unit>
        <trans-unit id="8cc6a0f6df125fb82286558ab003cc9ed2e64056" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;glossary#module&quot;&gt;JavaScript module&lt;/a&gt; that is intended to be imported by a user of &lt;a href=&quot;npm-packages&quot;&gt;an npm package&lt;/a&gt;. An entry-point module typically re-exports symbols from other internal modules. A package can contain multiple entry points. For example, the &lt;code&gt;@angular/core&lt;/code&gt; package has two entry-point modules, which can be imported using the module names &lt;code&gt;@angular/core&lt;/code&gt; and &lt;code&gt;@angular/core/testing&lt;/code&gt;.</source>
          <target state="translated">甲&lt;a href=&quot;glossary#module&quot;&gt;JavaScript的模块&lt;/a&gt;，其意在通过用户导入&lt;a href=&quot;npm-packages&quot;&gt;的NPM包&lt;/a&gt;。入口点模块通常会从其他内部模块重新导出符号。一个包可以包含多个入口点。例如， &lt;code&gt;@angular/core&lt;/code&gt; 软件包有两个入口点模块，可以使用模块名称 &lt;code&gt;@angular/core&lt;/code&gt; 和 &lt;code&gt;@angular/core/testing&lt;/code&gt; 导入它们。</target>
        </trans-unit>
        <trans-unit id="add79b6cad225ba3d033ac5074d0537e68619577" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; used to configure the &lt;a href=&quot;location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; service to represent its state in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;hash fragment&lt;/a&gt; of the browser's URL.</source>
          <target state="translated">一个&lt;a href=&quot;locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; ,&lt;/a&gt;用于配置&lt;a href=&quot;location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;服务以在浏览器URL 的&lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;哈希片段&lt;/a&gt;中表示其状态。</target>
        </trans-unit>
        <trans-unit id="8cb01da6d278c41e8f500ba57266b78eeda4112f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; used to configure the &lt;a href=&quot;location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; service to represent its state in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;path&lt;/a&gt; of the browser's URL.</source>
          <target state="translated">一个&lt;a href=&quot;locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; &lt;/a&gt;用于配置&lt;a href=&quot;location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;服务来表示它的状态&lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;路径&lt;/a&gt;浏览器的URL中。</target>
        </trans-unit>
        <trans-unit id="2bbb0a47b63bbf8d048b90ba20a0504e312db21c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;template-syntax#ref-vars&quot;&gt;template reference variable&lt;/a&gt;.</source>
          <target state="translated">甲&lt;a href=&quot;template-syntax#ref-vars&quot;&gt;模板参考变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1bcafa0eb5b956163eeed4a6a75cabbad36df0ec" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;toh-pt5#routerlink&quot;&gt;&lt;code&gt;routerLink&lt;/code&gt; attribute&lt;/a&gt; is set to &lt;code&gt;&quot;/heroes&quot;&lt;/code&gt;, the string that the router matches to the route to &lt;code&gt;HeroesComponent&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; is the selector for the &lt;a href=&quot;../api/router/routerlink&quot;&gt;&lt;code&gt;RouterLink&lt;/code&gt; directive&lt;/a&gt; that turns user clicks into router navigations. It's another of the public directives in the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;toh-pt5#routerlink&quot;&gt; &lt;code&gt;routerLink&lt;/code&gt; 属性&lt;/a&gt;设置为 &lt;code&gt;&quot;/heroes&quot;&lt;/code&gt; ，字符串路由器比赛向航线 &lt;code&gt;HeroesComponent&lt;/code&gt; 。该 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 对于选择&lt;a href=&quot;../api/router/routerlink&quot;&gt; &lt;code&gt;RouterLink&lt;/code&gt; 指令&lt;/a&gt;，轮流用户点击进入路由器导航。这是 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 中的另一个公共指令。</target>
        </trans-unit>
        <trans-unit id="fc4971774abe3d8584810de15a2245c3c6cae43d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing a value and listening to changes on a checkbox input element.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; ,用于写入值并侦听复选框输入元素上的更改。</target>
        </trans-unit>
        <trans-unit id="cd9cf13f7f418773a9187ad3a6e120365e43541c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;core/type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; which has an &lt;code&gt;InjectableDef&lt;/code&gt; static field.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;core/type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; ，其具有 &lt;code&gt;InjectableDef&lt;/code&gt; 静态字段。</target>
        </trans-unit>
        <trans-unit id="a1866590e2a9d78d0830efe2890f1b2b38203b59" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; aggregates the values of each child &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; into an array. It calculates its status by reducing the status values of its children. For example, if one of the controls in a &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; is invalid, the entire array becomes invalid.</source>
          <target state="translated">甲 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 聚集每个孩子的值 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 到一个数组。它通过减少其子代的状态值来计算其状态。例如，如果 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 中的控件之一无效，则整个数组将变为无效。</target>
        </trans-unit>
        <trans-unit id="7b89f06b9f87139e39972a1053c9bc6bca0c91bd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; aggregates the values of each child &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; into one object, with each control name as the key. It calculates its status by reducing the status values of its children. For example, if one of the controls in a group is invalid, the entire group becomes invalid.</source>
          <target state="translated">甲 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 聚集每个孩子的值 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 到一个对象，其中每个控制名作为密钥。它通过减少其子代的状态值来计算其状态。例如，如果组中的一个控件无效，则整个组都将变为无效。</target>
        </trans-unit>
        <trans-unit id="7ef598a60dce9571b1bf71d84f8e3c71d63ad355" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing a value and listening to changes on a checkbox input element.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; ,用于写入值并侦听复选框输入元素上的更改。</target>
        </trans-unit>
        <trans-unit id="66c4eaf792aaeb8d31859e17fd96da17357b8f90" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; object specifying lazy-loaded child routes.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 对象，用于指定延迟加载的子路由。</target>
        </trans-unit>
        <trans-unit id="63da7a685bae436a5baefed6056ea8939ddd6817" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; (e.g. query &lt;code&gt;&amp;lt;ng-template&amp;gt;&amp;lt;/ng-template&amp;gt;&lt;/code&gt; with &lt;code&gt;@&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;(&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;) template;&lt;/code&gt;)</source>
          <target state="translated">甲 &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; （例如查询 &lt;code&gt;&amp;lt;ng-template&amp;gt;&amp;lt;/ng-template&amp;gt;&lt;/code&gt; 用 &lt;code&gt;@&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;(&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;) template;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a511714d8bf182dc76071d42430897aa3ecbec4c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; which has an &lt;code&gt;InjectableDef&lt;/code&gt; static field.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; ，其具有 &lt;code&gt;InjectableDef&lt;/code&gt; 静态字段。</target>
        </trans-unit>
        <trans-unit id="be187422c88f7b9b30fb7c76cc4c7c623d036f19" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;upgrade/urlcodec&quot;&gt;UrlCodec&lt;/a&gt;&lt;/code&gt; that uses logic from AngularJS to serialize and parse URLs and URL parameters.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;upgrade/urlcodec&quot;&gt;UrlCodec&lt;/a&gt;&lt;/code&gt; ，它使用AngularJS中的逻辑来序列化和解析URL和URL参数。</target>
        </trans-unit>
        <trans-unit id="8aa0947cbfd3ce658b43f4a986bda6fe30e35bb0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;urlcodec&quot;&gt;UrlCodec&lt;/a&gt;&lt;/code&gt; that uses logic from AngularJS to serialize and parse URLs and URL parameters.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;urlcodec&quot;&gt;UrlCodec&lt;/a&gt;&lt;/code&gt; ，它使用AngularJS中的逻辑来序列化和解析URL和URL参数。</target>
        </trans-unit>
        <trans-unit id="f670a48ce55883fb60d1e60146176438b4f9fc8f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Rule&lt;/code&gt; can use external template files, transform them, and return another &lt;code&gt;Rule&lt;/code&gt; object with the transformed template. You can use the templating to generate any custom files required for your schematic.</source>
          <target state="translated">一个 &lt;code&gt;Rule&lt;/code&gt; 可以使用外部模板文件，改造他们，并返回另一个 &lt;code&gt;Rule&lt;/code&gt; 与转换模板对象。您可以使用模板生成原理图所需的任何自定义文件。</target>
        </trans-unit>
        <trans-unit id="6c67da25cb3690615ce138f76204d22676cb05cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Rule&lt;/code&gt; object defines a function that takes a &lt;code&gt;Tree&lt;/code&gt;, applies transformations, and returns a new &lt;code&gt;Tree&lt;/code&gt;. The main file for a schematic, &lt;code&gt;index.ts&lt;/code&gt;, defines a set of rules that implement the schematic's logic.</source>
          <target state="translated">一个 &lt;code&gt;Rule&lt;/code&gt; 对象定义一个函数，一 &lt;code&gt;Tree&lt;/code&gt; ，应用转换，并返回一个新 &lt;code&gt;Tree&lt;/code&gt; 。原理图的主文件 &lt;code&gt;index.ts&lt;/code&gt; 定义了一组实现原理图逻辑的规则。</target>
        </trans-unit>
        <trans-unit id="638c6d0fa216e5dc64a35311be5238d1c02fe4e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Subject&lt;/code&gt; is both a source of observable values and an &lt;code&gt;Observable&lt;/code&gt; itself. You can subscribe to a &lt;code&gt;Subject&lt;/code&gt; as you would any &lt;code&gt;Observable&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Subject&lt;/code&gt; 既是可观察到的值的源和 &lt;code&gt;Observable&lt;/code&gt; 本身。您可以像订阅任何 &lt;code&gt;Observable&lt;/code&gt; 一样订阅 &lt;code&gt;Subject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f796e4fa4f68f7165ad948a94f7f1758ca29753" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;createComponent&lt;/code&gt; method creates a &lt;code&gt;page&lt;/code&gt; object and fills in the blanks once the &lt;code&gt;hero&lt;/code&gt; arrives.</source>
          <target state="translated">一个 &lt;code&gt;createComponent&lt;/code&gt; 方法创建一个 &lt;code&gt;page&lt;/code&gt; 对象，并填补了空白，一旦 &lt;code&gt;hero&lt;/code&gt; 到来。</target>
        </trans-unit>
        <trans-unit id="78444a00c7b1487feeeec0402985a438a4edf3a4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;download()&lt;/code&gt; method in the &lt;code&gt;DownloaderComponent&lt;/code&gt; initiates the request by subscribing to the service method.</source>
          <target state="translated">甲 &lt;code&gt;download()&lt;/code&gt; 中所述方法 &lt;code&gt;DownloaderComponent&lt;/code&gt; 发起通过订阅服务方法的请求。</target>
        </trans-unit>
        <trans-unit id="705022181dc8804afad6074ba8ac3e641784ceb5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;name&lt;/code&gt; is mandatory. It identifies this particular group of assets between versions of the configuration.</source>
          <target state="translated">一个 &lt;code&gt;name&lt;/code&gt; 是强制性的。它在配置的版本之间标识此特定资产组。</target>
        </trans-unit>
        <trans-unit id="10c6052679f6bf0bc936d7c28d99e11c4be6ccb3" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;Crisis Center&lt;/em&gt; for maintaining the list of crises for assignment to heroes.</source>
          <target state="translated">一个&lt;em&gt;危机中心&lt;/em&gt;保持危机中，为分配到英雄的名单。</target>
        </trans-unit>
        <trans-unit id="3f14306f923e2f4bf4cadb6ead21423f41ee343d" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;Heroes&lt;/em&gt; area for maintaining the list of heroes employed by the agency.</source>
          <target state="translated">&amp;ldquo; &lt;em&gt;英雄&amp;rdquo;&lt;/em&gt;区域，用于维护该机构雇用的英雄列表。</target>
        </trans-unit>
        <trans-unit id="da081d80f84ace307cde80af3645ff2e9eef9fae" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;cold&lt;/em&gt; observable doesn't produce values until you subscribe to it. Most of your application observables are cold. All &lt;a href=&quot;http&quot;&gt;&lt;em&gt;HttpClient&lt;/em&gt;&lt;/a&gt; methods return cold observables.</source>
          <target state="translated">一&lt;em&gt;冷&lt;/em&gt;，直到你订阅了它观察到不产生价值。您的应用程序可观察到的大多数都是冷的。所有&lt;a href=&quot;http&quot;&gt;&lt;em&gt;HttpClient&lt;/em&gt;&lt;/a&gt;方法都返回冷的可观察值。</target>
        </trans-unit>
        <trans-unit id="d7a613682601691a64063c88494e50a72e12af55" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;component-under-test&lt;/em&gt; doesn't have to be injected with real services. In fact, it is usually better if they are test doubles (stubs, fakes, spies, or mocks). The purpose of the spec is to test the component, not the service, and real services can be trouble.</source>
          <target state="translated">一个&lt;em&gt;组件下测试&lt;/em&gt;并没有与真正的服务注入。实际上，如果将它们作为测试双打（存根，伪造品，间谍或模拟品）通常会更好。规范的目的是测试组件而不是服务，而真正的服务可能会很麻烦。</target>
        </trans-unit>
        <trans-unit id="6780ccccda3402b96f6143330a19b3aeb1ffa0b6" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;component&lt;/em&gt; controls a patch of screen called a &lt;em&gt;view&lt;/em&gt;. For example, individual components define and control each of the following views from the &lt;a href=&quot;tutorial&quot;&gt;Tutorial&lt;/a&gt;:</source>
          <target state="translated">一个&lt;em&gt;组件&lt;/em&gt;控制着一块称为&lt;em&gt;视图&lt;/em&gt;的屏幕。例如，各个组件定义和控制了&lt;a href=&quot;tutorial&quot;&gt;Tutorial&lt;/a&gt;中的以下每个视图：</target>
        </trans-unit>
        <trans-unit id="4e8f8fa8491a780054dbb51957cbec42c3bfabe7" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;component&lt;/em&gt; manages a region of HTML in the manner of a native HTML element. Technically it's a directive with a template.</source>
          <target state="translated">甲&lt;em&gt;组件&lt;/em&gt;管理在本地HTML元素的方式HTML的区域。从技术上讲，这是带有模板的指令。</target>
        </trans-unit>
        <trans-unit id="28cb0670dda43adba7b040a7a2903cac40bc4f8c" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;different&lt;/em&gt; battery of tests can explore whether the application navigates as expected in the presence of conditions that influence guards such as whether the user is authenticated and authorized.</source>
          <target state="translated">甲&lt;em&gt;不同&lt;/em&gt;电池的测试可以探索是否如预期中的条件的情况下应用程序将导航这种影响警卫诸如用户是否认证和授权。</target>
        </trans-unit>
        <trans-unit id="1ecf60bb6e7234367c513185ab06b67468546b87" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;header&lt;/em&gt; node child can be an &lt;em&gt;item&lt;/em&gt; node or another &lt;em&gt;header&lt;/em&gt; node. If your guide page belongs under a sub-header, find that sub-header in the JSON.</source>
          <target state="translated">甲&lt;em&gt;头&lt;/em&gt;节点的孩子可以是&lt;em&gt;项&lt;/em&gt;节点或另一&lt;em&gt;头&lt;/em&gt;节点。如果您的指南页面属于子标题，请在JSON中找到该子标题。</target>
        </trans-unit>
        <trans-unit id="a6e78c0c7440d9a1475224eac8e461df1f4d1910" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;hot&lt;/em&gt; observable is already producing values &lt;em&gt;before&lt;/em&gt; you subscribe to it. The &lt;a href=&quot;../api/router/router#events&quot;&gt;&lt;em&gt;Router.events&lt;/em&gt;&lt;/a&gt; observable, which reports router activity, is a &lt;em&gt;hot&lt;/em&gt; observable.</source>
          <target state="translated">一个&lt;em&gt;热点&lt;/em&gt;观察到已经生产值&lt;em&gt;之前&lt;/em&gt;您订阅。可观察到的&lt;a href=&quot;../api/router/router#events&quot;&gt;&lt;em&gt;Router.events&lt;/em&gt;&lt;/a&gt;报告了路由器的活动，是一个可观察到的&lt;em&gt;热点&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2522563b2cdfe71f09ecb80ce5010241ee842471" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;marble frame&lt;/em&gt; is a virtual unit of testing time. Each symbol (&lt;code&gt;-&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;) marks the passing of one frame.</source>
          <target state="translated">甲&lt;em&gt;大理石帧&lt;/em&gt;是测试时间的虚拟单元。每个符号（ &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;|&lt;/code&gt; ， &lt;code&gt;#&lt;/code&gt; ）标记一帧的通过。</target>
        </trans-unit>
        <trans-unit id="0287d9aa44943985aa24e920490c681de38a6f70" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;provider&lt;/em&gt; is an object that tells an injector how to obtain or create a dependency.</source>
          <target state="translated">甲&lt;em&gt;提供商&lt;/em&gt;是一个对象，讲述了一个喷射器如何获得或创建依赖性。</target>
        </trans-unit>
        <trans-unit id="dd4cdaab79b1c66984ce01f6287162f8aac9fe6e" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;routed component&lt;/em&gt; is the destination of a &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation. It can be trickier to test, especially when the route to the component &lt;em&gt;includes parameters&lt;/em&gt;. The &lt;code&gt;HeroDetailComponent&lt;/code&gt; is a &lt;em&gt;routed component&lt;/em&gt; that is the destination of such a route.</source>
          <target state="translated">甲&lt;em&gt;路由组件&lt;/em&gt;是一个的目的地 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 导航。测试可能会比较棘手，尤其是到组件的路由&lt;em&gt;包含parameters时&lt;/em&gt;。所述 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 是一个&lt;em&gt;路由组件&lt;/em&gt;是这样的路线的目的地。</target>
        </trans-unit>
        <trans-unit id="65403259921593d9fe9e203a711cab5ad7a29b69" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;routing component&lt;/em&gt; is a component that tells the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; to navigate to another component. The &lt;code&gt;DashboardComponent&lt;/code&gt; is a &lt;em&gt;routing component&lt;/em&gt; because the user can navigate to the &lt;code&gt;HeroDetailComponent&lt;/code&gt; by clicking on one of the &lt;em&gt;hero buttons&lt;/em&gt; on the dashboard.</source>
          <target state="translated">一个&lt;em&gt;路由组件&lt;/em&gt;是告诉组件 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 导航到另一个组件。所述 &lt;code&gt;DashboardComponent&lt;/code&gt; 是一个&lt;em&gt;路由组件&lt;/em&gt;，因为用户可以导航到 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 通过点击之一&lt;em&gt;英雄按钮&lt;/em&gt;在仪表板上。</target>
        </trans-unit>
        <trans-unit id="f44fda8c801c30c6245fab7c9fb64928de21c181" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;template input variable&lt;/em&gt; is &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; the same as a &lt;a href=&quot;template-syntax#ref-vars&quot;&gt;template &lt;em&gt;reference&lt;/em&gt; variable&lt;/a&gt;, neither &lt;em&gt;semantically&lt;/em&gt; nor &lt;em&gt;syntactically&lt;/em&gt;.</source>
          <target state="translated">甲&lt;em&gt;模板输入变量&lt;/em&gt;是&lt;strong&gt;&lt;em&gt;不&lt;/em&gt;&lt;/strong&gt;一样的一个&lt;a href=&quot;template-syntax#ref-vars&quot;&gt;模板&lt;em&gt;参考&lt;/em&gt;变量&lt;/a&gt;，无论是&lt;em&gt;语义上&lt;/em&gt;也不&lt;em&gt;语法&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3390432957501640594fa03bf4b3db1812ce6212" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;template input variable&lt;/em&gt; is a variable whose value you can reference &lt;em&gt;within&lt;/em&gt; a single instance of the template. There are several such variables in this example: &lt;code&gt;hero&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt;. All are preceded by the keyword &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">一个&lt;em&gt;模板输入变量&lt;/em&gt;是一个变量，其值可以参考&lt;em&gt;中&lt;/em&gt;的模板的单个实例。在此示例中，有几个这样的变量： &lt;code&gt;hero&lt;/code&gt; ， &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; 。所有关键字均以 &lt;code&gt;let&lt;/code&gt; 开头。</target>
        </trans-unit>
        <trans-unit id="9ecfc556e297c7f984423ac98bb2b8133f9a4ac9" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;template reference variable&lt;/strong&gt; is often a reference to a DOM element within a template. It can also refer to a directive (which contains a component), an element, &lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;, or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components&quot;&gt;web component&lt;/a&gt;.</source>
          <target state="translated">甲&lt;strong&gt;模板参考变量&lt;/strong&gt;经常是一个模板内以一个DOM元素的引用。它还可以引用指令（包含组件），元素，&lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;或&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components&quot;&gt;Web组件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5ee6341ca20af13f54afad2702ef692ea841fe9" translate="yes" xml:space="preserve">
          <source>A Boolean expression or function that compares the previous and current animation states, and returns true if this transition should occur. Note that &quot;true&quot; and &quot;false&quot; match 1 and 0, respectively. An expression is evaluated each time a state change occurs in the animation trigger element. The animation steps run when the expression evaluates to true.</source>
          <target state="translated">一个布尔表达式或函数,用于比较上一个和当前的动画状态,如果这个转换应该发生,则返回true。注意,&quot;true &quot;和 &quot;false &quot;分别匹配1和0。每次动画触发元素发生状态变化时,都会评估一个表达式。当表达式评估为真时,动画步骤就会运行。</target>
        </trans-unit>
        <trans-unit id="599809fd82612316228fe38bb0ea1720a7b9dd5a" translate="yes" xml:space="preserve">
          <source>A CSS file for the component styles.</source>
          <target state="translated">一个用于组件样式的CSS文件。</target>
        </trans-unit>
        <trans-unit id="c0ba6f4f7f04ded94da4b082f8c0437a09402aaf" translate="yes" xml:space="preserve">
          <source>A DI Token representing a unique string id assigned to the application by Angular and used primarily for prefixing application attributes and CSS styles when &lt;a href=&quot;core/viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt; is being used.</source>
          <target state="translated">DI令牌，表示由Angular分配给应用程序的唯一字符串ID，主要用于在使用&lt;a href=&quot;core/viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;时为应用程序属性和CSS样式添加前缀。</target>
        </trans-unit>
        <trans-unit id="b7f7bf6e86152cf166fec0bfcc09711603e31bcb" translate="yes" xml:space="preserve">
          <source>A DI Token representing a unique string id assigned to the application by Angular and used primarily for prefixing application attributes and CSS styles when &lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt; is being used.</source>
          <target state="translated">DI令牌，表示由Angular分配给应用程序的唯一字符串ID，主要用于在使用&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;时为应用程序属性和CSS样式添加前缀。</target>
        </trans-unit>
        <trans-unit id="7f16103dee940de0e134938036f3a37e0da8edf9" translate="yes" xml:space="preserve">
          <source>A DI Token representing the main rendering context. In a browser this is the DOM Document.</source>
          <target state="translated">一个代表主要渲染上下文的DI Token。在浏览器中,这就是DOM文档。</target>
        </trans-unit>
        <trans-unit id="34a19c262ed7d9301354c9b8c7ce2cbc30aa8028" translate="yes" xml:space="preserve">
          <source>A DI token that you can use to create a virtual &lt;a href=&quot;../../guide/glossary#provider&quot;&gt;provider&lt;/a&gt; that will populate the &lt;code&gt;entryComponents&lt;/code&gt; field of components and NgModules based on its &lt;code&gt;&lt;a href=&quot;valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; property value. All components that are referenced in the &lt;code&gt;&lt;a href=&quot;valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; value (either directly or in a nested array or map) are added to the &lt;code&gt;entryComponents&lt;/code&gt; property.</source>
          <target state="translated">可用于创建虚拟&lt;a href=&quot;../../guide/glossary#provider&quot;&gt;提供程序&lt;/a&gt;的DI令牌，该虚拟提供程序将根据其 &lt;code&gt;&lt;a href=&quot;valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; 属性值填充组件和NgModules 的 &lt;code&gt;entryComponents&lt;/code&gt; 字段。 &lt;code&gt;&lt;a href=&quot;valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; 值中引用的所有组件（直接或在嵌套数组或映射中）都添加到 &lt;code&gt;entryComponents&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="f4aaaddad79edba7b85207af000a6cde392c8d30" translate="yes" xml:space="preserve">
          <source>A DI token that you can use to create a virtual &lt;a href=&quot;../guide/glossary#provider&quot;&gt;provider&lt;/a&gt; that will populate the &lt;code&gt;entryComponents&lt;/code&gt; field of components and NgModules based on its &lt;code&gt;&lt;a href=&quot;core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; property value. All components that are referenced in the &lt;code&gt;&lt;a href=&quot;core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; value (either directly or in a nested array or map) are added to the &lt;code&gt;entryComponents&lt;/code&gt; property.</source>
          <target state="translated">可用于创建虚拟&lt;a href=&quot;../guide/glossary#provider&quot;&gt;提供程序&lt;/a&gt;的DI令牌，该虚拟提供程序将根据其 &lt;code&gt;&lt;a href=&quot;core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; 属性值填充组件和NgModules 的 &lt;code&gt;entryComponents&lt;/code&gt; 字段。 &lt;code&gt;&lt;a href=&quot;core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; 值中引用的所有组件（直接或在嵌套数组或映射中）都添加到 &lt;code&gt;entryComponents&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="6c6c6ad6dc434b59f3c338cdee09daa910f4fcb1" translate="yes" xml:space="preserve">
          <source>A Directive that adds the &lt;code&gt;required&lt;/code&gt; validator to checkbox controls marked with the &lt;code&gt;required&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将 &lt;code&gt;required&lt;/code&gt; 验证器添加到标有 &lt;code&gt;required&lt;/code&gt; 属性的复选框控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="b287f8f1214950d0e2f03c7ed6dc8f29f0a4fa20" translate="yes" xml:space="preserve">
          <source>A Directive that adds the &lt;code&gt;required&lt;/code&gt; validator to checkbox controls marked with the &lt;code&gt;required&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将 &lt;code&gt;required&lt;/code&gt; 验证器添加到标有 &lt;code&gt;required&lt;/code&gt; 属性的复选框控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="af60e9a597d2c5395c23f65dc9848a9ec136811f" translate="yes" xml:space="preserve">
          <source>A JSON schema associated with a schematic tells the Angular CLI what options are available to commands and subcommands, and determines the defaults. These defaults can be overridden by providing a different value for an option on the command line. See &lt;a href=&quot;workspace-config&quot;&gt;Workspace Configuration&lt;/a&gt; for information about how you can change the generation option defaults for your workspace.</source>
          <target state="translated">与原理图关联的JSON模式会告诉Angular CLI哪些命令和子命令可用选项，并确定默认选项。通过在命令行中为选项提供不同的值，可以覆盖这些默认值。有关如何更改工作空间的生成选项默认值的信息，请参见&lt;a href=&quot;workspace-config&quot;&gt;工作空间配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="576c3fc6feeabf272864a096aed610727c170f4b" translate="yes" xml:space="preserve">
          <source>A Node Express server is a pipeline of middleware that filters and processes requests one after the other. You configure the Node Express server pipeline with calls to &lt;code&gt;app.get()&lt;/code&gt; like this one for data requests.</source>
          <target state="translated">Node Express服务器是中间件的管道，可相互过滤和处理请求。您可以通过对 &lt;code&gt;app.get()&lt;/code&gt; 的调用来配置Node Express服务器管道，以进行数据请求。</target>
        </trans-unit>
        <trans-unit id="638b2d1ff2d39b9a31cf3cdf34086dca5e31b768" translate="yes" xml:space="preserve">
          <source>A ReflectiveDependency injection container used for instantiating objects and resolving dependencies.</source>
          <target state="translated">一个用于实例化对象和解析依赖关系的ReflectiveDependency注入容器。</target>
        </trans-unit>
        <trans-unit id="59dd0c3f0e2ab9dff2d45116e5f275a7bd7fc27d" translate="yes" xml:space="preserve">
          <source>A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property like &lt;code&gt;innerHTML&lt;/code&gt; that could cause Cross Site Scripting (XSS) security bugs when improperly handled.</source>
          <target state="translated">SecurityContext标记了具有危险安全隐患的位置，例如，诸如 &lt;code&gt;innerHTML&lt;/code&gt; 之类的DOM属性，如果处理不当，可能会导致跨站点脚本（XSS）安全错误。</target>
        </trans-unit>
        <trans-unit id="abf2fe6e840b3478ea12942a2f906e769e970379" translate="yes" xml:space="preserve">
          <source>A TypeScript class to shape the &lt;strong&gt;model data&lt;/strong&gt; for your component and display properties of that model.</source>
          <target state="translated">一个TypeScript类，用于为您的组件塑造&lt;strong&gt;模型数据&lt;/strong&gt;并显示该模型的属性。</target>
        </trans-unit>
        <trans-unit id="2ce514d5a29cc020eab107370f83c5964cc081c9" translate="yes" xml:space="preserve">
          <source>A TypeScript configuration can inherit settings from another file using the &lt;code&gt;extends&lt;/code&gt; property. The configuration options from the base file are loaded first, then overridden by those in the inheriting &lt;code&gt;tsconfig&lt;/code&gt; file.</source>
          <target state="translated">使用 &lt;code&gt;extends&lt;/code&gt; 属性，TypeScript配置可以从另一个文件继承设置。首先加载基本文件中的配置选项，然后由继承的 &lt;code&gt;tsconfig&lt;/code&gt; 文件中的配置选项覆盖。</target>
        </trans-unit>
        <trans-unit id="bf52b0587c806c818b0e66032278502b10c27741" translate="yes" xml:space="preserve">
          <source>A TypeScript file with a component class named &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">一个带有名为 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 的组件类的TypeScript文件。</target>
        </trans-unit>
        <trans-unit id="75ee6a49dc9a24af9ee987b8b0f73148b94a0862" translate="yes" xml:space="preserve">
          <source>A TypeScript-like syntax that Angular evaluates within a &lt;a href=&quot;glossary#data-binding&quot;&gt;data binding&lt;/a&gt;.</source>
          <target state="translated">Angular在&lt;a href=&quot;glossary#data-binding&quot;&gt;数据绑定中&lt;/a&gt;求值的类似于TypeScript的语法。</target>
        </trans-unit>
        <trans-unit id="d9b532cb4e6dbf28e2ec99b1d5e242df8ee636f8" translate="yes" xml:space="preserve">
          <source>A URL like &lt;code&gt;~/detail/11&lt;/code&gt; would be a good URL for navigating to the &lt;em&gt;Hero Detail&lt;/em&gt; view of the hero whose &lt;code&gt;id&lt;/code&gt; is &lt;code&gt;11&lt;/code&gt;.</source>
          <target state="translated">像 &lt;code&gt;~/detail/11&lt;/code&gt; 这样的URL将是导航到 &lt;code&gt;id&lt;/code&gt; 为 &lt;code&gt;11&lt;/code&gt; 的英雄的&lt;em&gt;Hero Detail&lt;/em&gt;视图的好URL 。</target>
        </trans-unit>
        <trans-unit id="5aa19c3e00b09eff21880f8aeb69b67bf3ae32ff" translate="yes" xml:space="preserve">
          <source>A URL string relative to the full URL string.</source>
          <target state="translated">一个相对于完整URL字符串的URL字符串。</target>
        </trans-unit>
        <trans-unit id="93e7f0f463135d020d0e07a514b4e627a1b7f7fd" translate="yes" xml:space="preserve">
          <source>A URL that defines the ServiceWorker's registration scope; that is, what range of URLs it can control. It will be used when calling &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register&quot;&gt;ServiceWorkerContainer#register()&lt;/a&gt;.</source>
          <target state="translated">定义ServiceWorker注册范围的URL；也就是说，它可以控制的URL范围。调用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register&quot;&gt;ServiceWorkerContainer＃register（）&lt;/a&gt;时将使用它。</target>
        </trans-unit>
        <trans-unit id="23e44cf2c0692f9e95579ce06f4b68b8cc6db506" translate="yes" xml:space="preserve">
          <source>A URL to which to redirect when a the path matches. Absolute if the URL begins with a slash (/), otherwise relative to the path URL. When not present, router does not redirect.</source>
          <target state="translated">当路径匹配时要重定向的URL。如果URL以斜杠(/)开头,则为绝对值,否则为相对于路径的URL。当不存在时,路由器不重定向。</target>
        </trans-unit>
        <trans-unit id="46e53a936bddd1e6667ff7ab0bf8ab8e4d5e07b7" translate="yes" xml:space="preserve">
          <source>A Unicode locale identifier is composed of a Unicode language identifier and (optionally) the character &lt;code&gt;-&lt;/code&gt; followed by a locale extension. (For historical reasons the character &lt;code&gt;&lt;a href=&quot;i18n&quot;&gt;_&lt;/a&gt;&lt;/code&gt; is supported as an alternative to &lt;code&gt;-&lt;/code&gt;.) For example, in the locale id &lt;code&gt;fr-CA&lt;/code&gt; the &lt;code&gt;fr&lt;/code&gt; refers to the French language identifier, and the &lt;code&gt;CA&lt;/code&gt; refers to the locale extension Canada.</source>
          <target state="translated">Unicode语言环境标识符由Unicode语言标识符和（可选）字符组成 &lt;code&gt;-&lt;/code&gt; 后跟语言环境扩展名。（出于历史原因，支持字符 &lt;code&gt;&lt;a href=&quot;i18n&quot;&gt;_&lt;/a&gt;&lt;/code&gt; 替代 &lt;code&gt;-&lt;/code&gt; 。）例如，在语言环境ID &lt;code&gt;fr-CA&lt;/code&gt; 中， &lt;code&gt;fr&lt;/code&gt; 表示法语标识符，而 &lt;code&gt;CA&lt;/code&gt; 则表示语言环境扩展名Canada。</target>
        </trans-unit>
        <trans-unit id="9619731a7e9d414367b09313d3267edcaa195536" translate="yes" xml:space="preserve">
          <source>A Universal web server responds to application page requests with static HTML rendered by the &lt;a href=&quot;universal#universal-engine&quot;&gt;Universal template engine&lt;/a&gt;. The server receives and responds to HTTP requests from clients (usually browsers), and serves static assets such as scripts, CSS, and images. It may respond to data requests, either directly or as a proxy to a separate data server.</source>
          <target state="translated">通用Web服务器使用&lt;a href=&quot;universal#universal-engine&quot;&gt;通用模板引擎&lt;/a&gt;呈现的静态HTML响应应用程序页面请求。服务器接收并响应来自客户端（通常是浏览器）的HTTP请求，并提供静态资产，例如脚本，CSS和图像。它可以直接或作为单独数据服务器的代理来响应数据请求。</target>
        </trans-unit>
        <trans-unit id="71378c7a7d2263bf11559901a0f4449137f58c6b" translate="yes" xml:space="preserve">
          <source>A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix parameters associated with the segment.</source>
          <target state="translated">UrlSegment是两个斜杠之间的URL的一部分。它包含一个路径和与该段相关的矩阵参数。</target>
        </trans-unit>
        <trans-unit id="9ed46c4fb7b79a723f886be252ac69b01f25f523" translate="yes" xml:space="preserve">
          <source>A base class for code shared between the &lt;code&gt;&lt;a href=&quot;forms/ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;forms/formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;forms/ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;forms/formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; 指令之间共享的代码的基类。</target>
        </trans-unit>
        <trans-unit id="ca117d436dde1d68583371441cb3950ab4847f85" translate="yes" xml:space="preserve">
          <source>A base class for code shared between the &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; 指令之间共享的代码的基类。</target>
        </trans-unit>
        <trans-unit id="7182c0a975e83c1064ac742ba760051b64c40178" translate="yes" xml:space="preserve">
          <source>A base class for directives that contain multiple registered instances of &lt;code&gt;&lt;a href=&quot;forms/ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt;. Only used by the forms module.</source>
          <target state="translated">包含多个 &lt;code&gt;&lt;a href=&quot;forms/ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt; 注册实例的指令的基类。仅由表单模块使用。</target>
        </trans-unit>
        <trans-unit id="1e18bb4f3363c7c460512b62f5743a20a68eb8d9" translate="yes" xml:space="preserve">
          <source>A base class for directives that contain multiple registered instances of &lt;code&gt;&lt;a href=&quot;ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt;. Only used by the forms module.</source>
          <target state="translated">包含多个 &lt;code&gt;&lt;a href=&quot;ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt; 注册实例的指令的基类。仅由表单模块使用。</target>
        </trans-unit>
        <trans-unit id="072ce3207529e3a0eed654da379d2b96537447aa" translate="yes" xml:space="preserve">
          <source>A base class that all control &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;-based directives extend. It binds a &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; object to a DOM element.</source>
          <target state="translated">所有控件基于 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的指令都扩展的基类。它将 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 对象绑定到DOM元素。</target>
        </trans-unit>
        <trans-unit id="d570abadc21d73601999397b7c63605397538b69" translate="yes" xml:space="preserve">
          <source>A base class that all control &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;-based directives extend. It binds a &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; object to a DOM element.</source>
          <target state="translated">所有控件基于 &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的指令都扩展的基类。它将 &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 对象绑定到DOM元素。</target>
        </trans-unit>
        <trans-unit id="467148334df27df20e018470d39d8ab381750677" translate="yes" xml:space="preserve">
          <source>A basic understanding of the following concepts:</source>
          <target state="translated">对以下概念的基本理解:</target>
        </trans-unit>
        <trans-unit id="a5ab0003f292345413eb8a2b94b3fc4996269aea" translate="yes" xml:space="preserve">
          <source>A basic understanding of the following:</source>
          <target state="translated">对以下内容有基本了解:</target>
        </trans-unit>
        <trans-unit id="a565a4e2917d8bbeaa570825dfd8d8cdd077b189" translate="yes" xml:space="preserve">
          <source>A basic understanding of the information in &lt;a href=&quot;service-worker-intro&quot;&gt;Introduction to Angular service workers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;service-worker-intro&quot;&gt;对Angular Service Worker简介中&lt;/a&gt;信息的基本理解。</target>
        </trans-unit>
        <trans-unit id="a34826f1e38a9b1a10c639f0eb97e5092f011d36" translate="yes" xml:space="preserve">
          <source>A better solution is to create an artificial test component that demonstrates all ways to apply the directive.</source>
          <target state="translated">更好的解决方案是创建一个人工测试组件,演示应用该指令的所有方法。</target>
        </trans-unit>
        <trans-unit id="b3b95dc7d1bbb973732d884b6bf8498d3091aab3" translate="yes" xml:space="preserve">
          <source>A boolean-valued function over a value, possibly including context information regarding that value's position in an array.</source>
          <target state="translated">一个关于值的布尔值函数,可能包括该值在数组中位置的上下文信息。</target>
        </trans-unit>
        <trans-unit id="0f651a3110666c190aff69e1ee84ccbffa0efcba" translate="yes" xml:space="preserve">
          <source>A bootstrap component is automatically added to &lt;code&gt;entryComponents&lt;/code&gt;.</source>
          <target state="translated">引导程序组件会自动添加到 &lt;code&gt;entryComponents&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="f0400004f9940352eb2ae482000bca5e618a3b6f" translate="yes" xml:space="preserve">
          <source>A bootstrapped component &lt;em&gt;is&lt;/em&gt; an &lt;a href=&quot;ngmodule-faq#q-entry-component-defined&quot;&gt;entry component&lt;/a&gt; that Angular loads into the DOM during the bootstrap process (application launch). Other entry components are loaded dynamically by other means, such as with the router.</source>
          <target state="translated">自举部件&lt;em&gt;是&lt;/em&gt;一个&lt;a href=&quot;ngmodule-faq#q-entry-component-defined&quot;&gt;入口部件&lt;/a&gt;，所述引导过程（应用程序启动）期间角加载到DOM。其他入口组件通过其他方式动态加载，例如通过路由器。</target>
        </trans-unit>
        <trans-unit id="9023b1da9696cafc362036418ba09a6af6a2deb3" translate="yes" xml:space="preserve">
          <source>A bootstrapped component is an entry component that Angular loads into the DOM during the bootstrap process (application launch). Other entry components are loaded dynamically by other means, such as with the router.</source>
          <target state="translated">引导组件是Angular在引导过程(应用程序启动)中加载到DOM中的入口组件。其他入口组件是通过其他方式动态加载的,比如用路由器。</target>
        </trans-unit>
        <trans-unit id="a8adc65ce5e0b88cc440c6a6e5fc1619a8cd504b" translate="yes" xml:space="preserve">
          <source>A bootstrapped component is necessarily an entry component because bootstrapping is an imperative process, thus it needs to have an entry component.</source>
          <target state="translated">一个引导组件必然是一个入口组件,因为引导是一个必须的过程,因此它需要有一个入口组件。</target>
        </trans-unit>
        <trans-unit id="2e1e0db9f76bce947aff0501f035cbc1621e10d2" translate="yes" xml:space="preserve">
          <source>A bootstrapped entry component</source>
          <target state="translated">一个引导式条目组件</target>
        </trans-unit>
        <trans-unit id="96324ec4fdb9bd57e96f70085ba8ca376c27e961" translate="yes" xml:space="preserve">
          <source>A breakpoint on the pipe's request for data shows the following:</source>
          <target state="translated">管道请求数据的断点显示如下。</target>
        </trans-unit>
        <trans-unit id="ed822ed7d2157779effe7d59d8a3822bc4ca3033" translate="yes" xml:space="preserve">
          <source>A buildable or runnable subset of a &lt;a href=&quot;glossary#project&quot;&gt;project&lt;/a&gt;, configured as an object in the &lt;a href=&quot;workspace-config#project-tool-configuration-options&quot;&gt;workspace configuration file&lt;/a&gt;, and executed by an &lt;a href=&quot;glossary#architect&quot;&gt;Architect&lt;/a&gt;&lt;a href=&quot;glossary#builder&quot;&gt;builder&lt;/a&gt;.</source>
          <target state="translated">一的可构建或可运行的子集&lt;a href=&quot;glossary#project&quot;&gt;的项目&lt;/a&gt;，配置为在对象&lt;a href=&quot;workspace-config#project-tool-configuration-options&quot;&gt;的工作区的配置文件&lt;/a&gt;，并且通过执行&lt;a href=&quot;glossary#architect&quot;&gt;建筑师&lt;/a&gt;&lt;a href=&quot;glossary#builder&quot;&gt;助洗剂&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4eee78994792230b0c3d32e29860f69abdfad63" translate="yes" xml:space="preserve">
          <source>A builder must have a defined target that associates it with a specific input configuration and &lt;a href=&quot;glossary#project&quot;&gt;project&lt;/a&gt;.</source>
          <target state="translated">构建器必须具有已定义的目标，该目标将其与特定的输入配置和&lt;a href=&quot;glossary#project&quot;&gt;项目&lt;/a&gt;相关联。</target>
        </trans-unit>
        <trans-unit id="252f868c89435de5215834180cc5d8c0801b4fc7" translate="yes" xml:space="preserve">
          <source>A builder resides in a &quot;project&quot; folder that is similar in structure to an Angular workspace, with global configuration files at the top level, and more specific configuration in a source folder with the code files that define the behavior. For example, your &lt;code&gt;myBuilder&lt;/code&gt; folder could contain the following files.</source>
          <target state="translated">生成器位于&amp;ldquo;项目&amp;rdquo;文件夹中，该文件夹的结构与Angular工作区相似，全局配置文件位于顶层，而更具体的配置位于具有定义行为的代码文件的源文件夹中。例如，您的 &lt;code&gt;myBuilder&lt;/code&gt; 文件夹可能包含以下文件。</target>
        </trans-unit>
        <trans-unit id="bb3f356af777f070b18dd60f447c94b1885caa8e" translate="yes" xml:space="preserve">
          <source>A callback invoked when rendering has begun.</source>
          <target state="translated">渲染开始时调用的回调。</target>
        </trans-unit>
        <trans-unit id="621621c14914731ff9cc461e46f4734dab9a9e3a" translate="yes" xml:space="preserve">
          <source>A callback invoked when rendering has completed.</source>
          <target state="translated">渲染完成后调用的回调。</target>
        </trans-unit>
        <trans-unit id="e30186c1d00b026b4228eadb9cb84965baed02c2" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after Angular has completed initialization of a component's view. It is invoked only once when the view is instantiated.</source>
          <target state="translated">一个回调方法,在Angular完成组件视图的初始化后立即被调用。它只在实例化视图时被调用一次。</target>
        </trans-unit>
        <trans-unit id="7fe4cd97d1eea7a11fac142b1908b02db4f41095" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after Angular has completed initialization of all of the directive's content. It is invoked only once when the directive is instantiated.</source>
          <target state="translated">一个回调方法,在Angular完成所有指令内容的初始化后立即被调用。它只在指令被实例化时被调用一次。</target>
        </trans-unit>
        <trans-unit id="1b7068e5aab5e739c2621bf44fb181a91e1b6ad2" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after the default change detector has checked data-bound properties if at least one has changed, and before the view and content children are checked.</source>
          <target state="translated">一个回调方法,如果至少有一个属性发生了变化,则在默认变化检测器检查了数据绑定的属性之后,在检查视图和内容子代之前立即调用。</target>
        </trans-unit>
        <trans-unit id="ef37907408bda8f267bff550c619746d82491838" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.</source>
          <target state="translated">一个回调方法,在默认的变更检测器第一次检查了指令的数据绑定属性后,在任何视图或内容子代被检查之前,立即被调用。它只在指令被实例化时被调用一次。</target>
        </trans-unit>
        <trans-unit id="17be15e9e9f2799fb0b7f9e7adb5b4d25c276f51" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after the default change detector has completed checking all of the directive's content.</source>
          <target state="translated">一个回调方法,在默认的变更检测器完成检查指令的所有内容后立即调用。</target>
        </trans-unit>
        <trans-unit id="b3d49829f059326e4cc0c5d42cce6ef8ba22c75d" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after the default change detector has completed one change-check cycle for a component's view.</source>
          <target state="translated">在默认的变更检测器完成组件视图的一个变更检查周期后立即调用的回调方法。</target>
        </trans-unit>
        <trans-unit id="c9272d31a5c8ffd0e82b22a4c70a377c3c3a39ea" translate="yes" xml:space="preserve">
          <source>A callback method that performs change-detection, invoked after the default change-detector runs. See &lt;code&gt;&lt;a href=&quot;keyvaluediffers&quot;&gt;KeyValueDiffers&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;iterablediffers&quot;&gt;IterableDiffers&lt;/a&gt;&lt;/code&gt; for implementing custom change checking for collections.</source>
          <target state="translated">一种执行更改检测的回调方法，在默认更改检测器运行后调用。有关实现集合的自定义更改检查，请参见 &lt;code&gt;&lt;a href=&quot;keyvaluediffers&quot;&gt;KeyValueDiffers&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;iterablediffers&quot;&gt;IterableDiffers&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d104cace8ea584693965d95cc9257a3a34349247" translate="yes" xml:space="preserve">
          <source>A callback method that performs custom clean-up, invoked immediately after a directive, pipe, or service instance is destroyed.</source>
          <target state="translated">一个执行自定义清理的回调方法,在指令、管道或服务实例被销毁后立即调用。</target>
        </trans-unit>
        <trans-unit id="56a268cd66316ce2f0d1944547dc2ba1885278a7" translate="yes" xml:space="preserve">
          <source>A category of &lt;a href=&quot;glossary#directive&quot;&gt;directive&lt;/a&gt; that can listen to and modify the behavior of other HTML elements, attributes, properties, and components. They are usually represented as HTML attributes, hence the name.</source>
          <target state="translated">一类&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;，可以侦听和修改其他HTML元素，属性，属性和组件的行为。它们通常表示为HTML属性，因此称为名称。</target>
        </trans-unit>
        <trans-unit id="8f2bd0d4f0242fd6d93c7106c480965ba0a756a0" translate="yes" xml:space="preserve">
          <source>A category of &lt;a href=&quot;glossary#directive&quot;&gt;directive&lt;/a&gt; that is responsible for shaping HTML layout by modifying the DOM&amp;amp;mdashthat is, adding, removing, or manipulating elements and their children.</source>
          <target state="translated">一类&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;，负责通过修改DOM＆mdash来成形HTML布局，即添加，删除或操纵元素及其子元素。</target>
        </trans-unit>
        <trans-unit id="343aa9337e55f69912d6d719d5e5805b50eca679" translate="yes" xml:space="preserve">
          <source>A check that runs when form values change and reports whether the given values are correct and complete, according to the defined constraints. Reactive forms apply &lt;a href=&quot;form-validation#adding-to-reactive-forms&quot;&gt;validator functions&lt;/a&gt;. Template-driven forms use &lt;a href=&quot;form-validation#adding-to-template-driven-forms&quot;&gt;validator directives&lt;/a&gt;.</source>
          <target state="translated">当表单值更改时运行的检查，并根据定义的约束报告给定的值是否正确和完整。反应形式应用&lt;a href=&quot;form-validation#adding-to-reactive-forms&quot;&gt;验证器功能&lt;/a&gt;。模板驱动的表单使用&lt;a href=&quot;form-validation#adding-to-template-driven-forms&quot;&gt;验证器指令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d1c2e7542eff3bf00dff1a1de49e08d938a227b" translate="yes" xml:space="preserve">
          <source>A checkbox on the &lt;code&gt;PackageSearchComponent&lt;/code&gt; toggles a &lt;code&gt;withRefresh&lt;/code&gt; flag, which is one of the arguments to &lt;code&gt;PackageSearchService.search()&lt;/code&gt;. That &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; method creates the custom &lt;code&gt;x-refresh&lt;/code&gt; header and adds it to the request before calling &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PackageSearchComponent&lt;/code&gt; 上的复选框将切换 &lt;code&gt;withRefresh&lt;/code&gt; 标志，该标志是 &lt;code&gt;PackageSearchService.search()&lt;/code&gt; 的参数之一。该 &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; 方法创建自定义 &lt;code&gt;x-refresh&lt;/code&gt; 标头，然后将其添加到请求中，然后再调用 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ea2dba458600bddeca5f6a66246af12aba09d49" translate="yes" xml:space="preserve">
          <source>A chrome browser also opens and displays the test output in the &quot;Jasmine HTML Reporter&quot; like this.</source>
          <target state="translated">chrome浏览器也会打开并在 &quot;Jasmine HTML Reporter &quot;中显示这样的测试输出。</target>
        </trans-unit>
        <trans-unit id="9be78a60e1ff57a5896ceaf2ec2f63d056169af5" translate="yes" xml:space="preserve">
          <source>A class definition preceded by the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt;&lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt;, which declares and serves as a manifest for a block of code dedicated to an application domain, a workflow, or a closely related set of capabilities.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;glossary#decorator&quot;&gt;装饰器&lt;/a&gt;之前的类定义，该定义器声明并充当专用于应用程序域，工作流或紧密相关的功能集的代码块的清单。</target>
        </trans-unit>
        <trans-unit id="a192bac5ac356be2f3c56d06d6b531d551809cd4" translate="yes" xml:space="preserve">
          <source>A class interface should define &lt;em&gt;only&lt;/em&gt; the members that its consumers are allowed to call. Such a narrowing interface helps decouple the concrete class from its consumers.</source>
          <target state="translated">类接口应&lt;em&gt;仅&lt;/em&gt;定义允许其使用者调用的成员。这种狭窄的接口有助于将具体类别与其消费者分离。</target>
        </trans-unit>
        <trans-unit id="c5a1d26cf05b83059365f38e429b8b641ab34688" translate="yes" xml:space="preserve">
          <source>A class that can modify the structure of the DOM or modify attributes in the DOM and component data model. A directive class definition is immediately preceded by a &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt;&lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt; that supplies metadata.</source>
          <target state="translated">可以修改DOM的结构或修改DOM和组件数据模型中的属性的类。指令类定义之前紧跟提供元数据的 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;glossary#decorator&quot;&gt;装饰器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c93e2c1668e7ec5b3f463c413d9da40e845709b" translate="yes" xml:space="preserve">
          <source>A class that reflects the state of running &lt;a href=&quot;app_initializer&quot;&gt;&lt;code&gt;APP_INITIALIZER&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">反映运行&lt;a href=&quot;app_initializer&quot;&gt; &lt;code&gt;APP_INITIALIZER&lt;/code&gt; &lt;/a&gt;的状态的类。</target>
        </trans-unit>
        <trans-unit id="b03253d94c1c737d17ecfa0fa8c0a0fc7e00e3f9" translate="yes" xml:space="preserve">
          <source>A class that reflects the state of running &lt;a href=&quot;core/app_initializer&quot;&gt;&lt;code&gt;APP_INITIALIZER&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">反映运行&lt;a href=&quot;core/app_initializer&quot;&gt; &lt;code&gt;APP_INITIALIZER&lt;/code&gt; &lt;/a&gt;的状态的类。</target>
        </trans-unit>
        <trans-unit id="3dce19c2b15b60014a24e007692a61c4cec1cbb0" translate="yes" xml:space="preserve">
          <source>A class that's already declared in another NgModule</source>
          <target state="translated">一个已经在另一个NgModule中声明的类。</target>
        </trans-unit>
        <trans-unit id="15e8cb7a8d71df2ff5451890d3605b823ff71848" translate="yes" xml:space="preserve">
          <source>A class that's already declared in another module, whether an app module, @NgModule, or third-party module.</source>
          <target state="translated">一个已经在其他模块中声明的类,无论是app模块、@NgModule,还是第三方模块。</target>
        </trans-unit>
        <trans-unit id="52cb7c70c205caf15acdbf3dad279a4fc5ab3692" translate="yes" xml:space="preserve">
          <source>A class type that you can add to the &lt;code&gt;declarations&lt;/code&gt; list of an &lt;a href=&quot;glossary#ngmodule&quot;&gt;NgModule&lt;/a&gt;. You can declare &lt;a href=&quot;glossary#component&quot;&gt;components&lt;/a&gt;, &lt;a href=&quot;glossary#directive&quot;&gt;directives&lt;/a&gt;, and &lt;a href=&quot;glossary#pipe&quot;&gt;pipes&lt;/a&gt;.</source>
          <target state="translated">可以添加到&lt;a href=&quot;glossary#ngmodule&quot;&gt;NgModule&lt;/a&gt;的 &lt;code&gt;declarations&lt;/code&gt; 列表中的类类型。您可以声明&lt;a href=&quot;glossary#component&quot;&gt;组件&lt;/a&gt;，&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;和&lt;a href=&quot;glossary#pipe&quot;&gt;管道&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f05301aad6629d6cf06da9c65f1a123c52b3e017" translate="yes" xml:space="preserve">
          <source>A class which is preceded by the &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;{}&lt;/code&gt; decorator and which defines a function that transforms input values to output values for display in a &lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;. Angular defines various pipes, and you can define new pipes.</source>
          <target state="translated">在 &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;{}&lt;/code&gt; 装饰器之前的类，它定义一个函数，该函数将输入值转换为输出值以在&lt;a href=&quot;glossary#view&quot;&gt;视图中&lt;/a&gt;显示。Angular定义了各种管道，您可以定义新管道。</target>
        </trans-unit>
        <trans-unit id="87e85a96b41d60c13372c16732fa1704cdf3acdf" translate="yes" xml:space="preserve">
          <source>A class with the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;&lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt; that associates it with a companion &lt;a href=&quot;glossary#template&quot;&gt;template&lt;/a&gt;. Together, the component and template define a &lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;. A component is a special type of &lt;a href=&quot;glossary#directive&quot;&gt;directive&lt;/a&gt;. The &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator extends the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; decorator with template-oriented features.</source>
          <target state="translated">具有 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;glossary#decorator&quot;&gt;装饰器的&lt;/a&gt;类，该类将其与伴随&lt;a href=&quot;glossary#template&quot;&gt;模板&lt;/a&gt;关联。组件和模板共同定义了一个&lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;。组件是一种特殊类型的&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;。该 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 装饰延伸 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 与面向模板功能的装饰。</target>
        </trans-unit>
        <trans-unit id="937214eb5969e76a0181ee0c519da4e56333f19c" translate="yes" xml:space="preserve">
          <source>A codec for encoding and decoding URL parts.</source>
          <target state="translated">一个用于编码和解码URL部分的编解码器。</target>
        </trans-unit>
        <trans-unit id="7d302abe77a94aa1032491a8e0f377e95a4f168a" translate="yes" xml:space="preserve">
          <source>A codec for encoding and decoding parameters in URLs.</source>
          <target state="translated">用于对URL中的参数进行编码和解码的编解码器。</target>
        </trans-unit>
        <trans-unit id="ecea492f54194b72e7632959fcd3e275ec6d043f" translate="yes" xml:space="preserve">
          <source>A collection of Angular &lt;a href=&quot;glossary#project&quot;&gt;projects&lt;/a&gt; (that is, applications and libraries) powered by the &lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt; that are typically co-located in a single source-control repository (such as &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;).</source>
          <target state="translated">由&lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt;支持的Angular &lt;a href=&quot;glossary#project&quot;&gt;项目&lt;/a&gt;（即应用程序和库）的集合，这些项目通常位于单个源代码控制存储库（例如&lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;）中。</target>
        </trans-unit>
        <trans-unit id="e79ba2e8ac6b5b04c6c03c7ee3e2785eb9b7e5a0" translate="yes" xml:space="preserve">
          <source>A collection of child controls. The key for each child is the name under which it is registered.</source>
          <target state="translated">子控件的集合。每个子控件的关键是其注册的名称。</target>
        </trans-unit>
        <trans-unit id="e3c018291c1c8e9ad7721160cc26f0757854e025" translate="yes" xml:space="preserve">
          <source>A collection of matrix and query URL parameters.</source>
          <target state="translated">矩阵和查询URL参数的集合。</target>
        </trans-unit>
        <trans-unit id="02b47ee82f7b322d5994b10809aa0af420e20886" translate="yes" xml:space="preserve">
          <source>A collection of schematics to use in generating the initial app.</source>
          <target state="translated">用于生成初始应用程序的原理图集合。</target>
        </trans-unit>
        <trans-unit id="49de467612a944b52b3ee2139bdfbfdf3eb1f6bd" translate="yes" xml:space="preserve">
          <source>A common UI pattern is to show a spinner while the async validation is being performed. The following example presents how to achieve this with template-driven forms:</source>
          <target state="translated">一个常见的UI模式是在执行异步验证时显示一个微调器。下面的例子介绍了如何通过模板驱动的表单来实现这一点。</target>
        </trans-unit>
        <trans-unit id="99b05c916350f6878980197b92e815e9e04cfceb" translate="yes" xml:space="preserve">
          <source>A component and its template together define a &lt;em&gt;view&lt;/em&gt;. A component can contain a &lt;em&gt;view hierarchy&lt;/em&gt;, which allows you to define arbitrarily complex areas of the screen that can be created, modified, and destroyed as a unit. A view hierarchy can mix views defined in components that belong to different NgModules. This is often the case, especially for UI libraries.</source>
          <target state="translated">组件及其模板共同定义了一个&lt;em&gt;视图&lt;/em&gt;。组件可以包含&lt;em&gt;视图层次结构&lt;/em&gt;，该&lt;em&gt;视图层次结构&lt;/em&gt;允许您定义屏幕的任意复杂区域，这些区域可以作为一个单元进行创建，修改和销毁。视图层次结构可以混合在属于不同NgModule的组件中定义的视图。通常是这种情况，尤其是对于UI库。</target>
        </trans-unit>
        <trans-unit id="8beed4fbb0126f7f0007052e50e1d5d70b721129" translate="yes" xml:space="preserve">
          <source>A component can also be bootstrapped imperatively in the module's &lt;code&gt;ngDoBootstrap()&lt;/code&gt; method. The &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt; property tells the compiler that this is an entry component and it should generate code to bootstrap the application with this component.</source>
          <target state="translated">也可以在模块的 &lt;code&gt;ngDoBootstrap()&lt;/code&gt; 方法中强制引导组件。该 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt; 属性告诉编译器，这是入口部件，它应该生成代码来引导与该组件的应用程序。</target>
        </trans-unit>
        <trans-unit id="349d889988965929270cf02c44fe4300103b85b1" translate="yes" xml:space="preserve">
          <source>A component can delegate certain tasks to services, such as fetching data from the server, validating user input, or logging directly to the console. By defining such processing tasks in an &lt;em&gt;injectable service class&lt;/em&gt;, you make those tasks available to any component. You can also make your app more adaptable by injecting different providers of the same kind of service, as appropriate in different circumstances.</source>
          <target state="translated">组件可以将某些任务委托给服务，例如从服务器获取数据，验证用户输入或直接登录到控制台。通过在&lt;em&gt;可注入服务类中&lt;/em&gt;定义此类处理任务，可以使这些任务可用于任何组件。您还可以根据情况在不同情况下注入不同种类的相同服务的提供商，从而使您的应用更具适应性。</target>
        </trans-unit>
        <trans-unit id="b089964fae5995b808c695e4e6ccb3aa1ad7e195" translate="yes" xml:space="preserve">
          <source>A component class can provide services in two ways:</source>
          <target state="translated">一个组件类可以以两种方式提供服务。</target>
        </trans-unit>
        <trans-unit id="4e0698d00f7c06c14c5adbf78185465c6c2d62a2" translate="yes" xml:space="preserve">
          <source>A component consists of three things:</source>
          <target state="translated">一个组件由三样东西组成。</target>
        </trans-unit>
        <trans-unit id="d3deadf277697045847584c362a7d410307968ce" translate="yes" xml:space="preserve">
          <source>A component could be exported for inclusion in an external component's template as well as dynamically loaded in a pop-up dialog.</source>
          <target state="translated">一个组件可以导出到外部组件的模板中,也可以在弹出的对话框中动态加载。</target>
        </trans-unit>
        <trans-unit id="4376fb2839e7c64ec0202336bf07980d7bed69f9" translate="yes" xml:space="preserve">
          <source>A component could be imported from another app module (so you can't declare it) and re-exported by this module.</source>
          <target state="translated">一个组件可以从另一个应用模块导入(所以你不能声明它),然后由这个模块重新导出。</target>
        </trans-unit>
        <trans-unit id="3f0018d9ac3de8a0f037aa98debd4be0b91710f9" translate="yes" xml:space="preserve">
          <source>A component factory creates a pure, 100% JavaScript representation of the component that incorporates everything described in its &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata: the HTML, the binding instructions, the attached styles.</source>
          <target state="translated">组件工厂会创建一个纯100％JavaScript表示的组件，其中包含其 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 元数据中描述的所有内容：HTML，绑定说明，附加样式。</target>
        </trans-unit>
        <trans-unit id="cb8b1bfad611823c2a3c34eda791bc349a459653" translate="yes" xml:space="preserve">
          <source>A component has a lifecycle managed by Angular.</source>
          <target state="translated">一个组件有一个由Angular管理的生命周期。</target>
        </trans-unit>
        <trans-unit id="dc5e2a63b05a82806539717c333ee5cad057e231" translate="yes" xml:space="preserve">
          <source>A component is a special type of directive, which means that just as &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; has a &lt;code&gt;providers&lt;/code&gt; property, &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; does too. This means that directives as well as components can configure providers, using the &lt;code&gt;providers&lt;/code&gt; property. When you configure a provider for a component or directive using the &lt;code&gt;providers&lt;/code&gt; property, that provider belongs to the &lt;code&gt;ElementInjector&lt;/code&gt; of that component or directive. Components and directives on the same element share an injector.</source>
          <target state="translated">组件是指令的一种特殊类型，这意味着就像 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 具有 &lt;code&gt;providers&lt;/code&gt; 属性一样， &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 也是如此。这意味着指令和组件可以使用 &lt;code&gt;providers&lt;/code&gt; 属性配置提供程序。当使用 &lt;code&gt;providers&lt;/code&gt; 属性为组件或指令配置提供程序时，该提供程序属于该组件或指令的 &lt;code&gt;ElementInjector&lt;/code&gt; 。同一元素上的组件和指令共享一个注射器。</target>
        </trans-unit>
        <trans-unit id="eb35cf391db16a6090f219d3a04cb176787fe7d9" translate="yes" xml:space="preserve">
          <source>A component is technically a directive. However, components are so distinctive and central to Angular applications that Angular defines the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator, which extends the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; decorator with template-oriented features.</source>
          <target state="translated">从技术上讲，组件是指令。但是，组件是如此独特且对Angular应用程序至关重要，因此Angular定义了 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 装饰器，该装饰器通过面向模板的功能扩展了 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 装饰器。</target>
        </trans-unit>
        <trans-unit id="add1d0740c9dbeaff24d9a4e670b5061d080dadb" translate="yes" xml:space="preserve">
          <source>A component loaded &lt;em&gt;declaratively&lt;/em&gt; via its selector is &lt;em&gt;not&lt;/em&gt; an entry component.</source>
          <target state="translated">通过其选择器&lt;em&gt;声明性&lt;/em&gt;加载的组件&lt;em&gt;不是&lt;/em&gt;入口组件。</target>
        </trans-unit>
        <trans-unit id="39781f405ce3d449d20cd226f0eed9481dbe5f83" translate="yes" xml:space="preserve">
          <source>A component must belong to an NgModule in order for it to be available to another component or application. To make it a member of an NgModule, list it in the &lt;code&gt;declarations&lt;/code&gt; field of the &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata.</source>
          <target state="translated">一个组件必须属于NgModule，才能供另一个组件或应用程序使用。要使其成为NgModule的成员，请在 &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 元数据的 &lt;code&gt;declarations&lt;/code&gt; 字段中将其列出。</target>
        </trans-unit>
        <trans-unit id="8e42b0c392b91ddd75a931ad25526b427360d793" translate="yes" xml:space="preserve">
          <source>A component template can &lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;reference&lt;/a&gt; another component, directive, or pipe when the reference is declared in this module or if the imported module has exported it. For example, a component can use the &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;NgFor&lt;/code&gt; directives only if the module has imported the Angular &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; (perhaps indirectly by importing &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">当在该模块中声明了引用或导入的模块已将其导出时，组件模板&lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;可以引用&lt;/a&gt;另一个组件，指令或管道。例如，仅当模块已导入Angular &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; （也许通过导入 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 间接）时，组件才可以使用 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;NgFor&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="64cd250b9979025915cabb6d33b78c1f69b9d52e" translate="yes" xml:space="preserve">
          <source>A component that could serve as a parent &lt;em&gt;should&lt;/em&gt; implement the class interface as the &lt;code&gt;AliceComponent&lt;/code&gt; does.</source>
          <target state="translated">可以用作父级的组件&lt;em&gt;应该&lt;/em&gt;像 &lt;code&gt;AliceComponent&lt;/code&gt; 那样实现类接口。</target>
        </trans-unit>
        <trans-unit id="499d23697c7f20e6ec22c3119de0c4a05d9a58e5" translate="yes" xml:space="preserve">
          <source>A component with inputs and outputs typically appears inside the view template of a host component. The host uses a property binding to set the input property and an event binding to listen to events raised by the output property.</source>
          <target state="translated">具有输入和输出的组件通常出现在主机组件的视图模板中。主机使用属性绑定来设置输入属性,使用事件绑定来监听输出属性引发的事件。</target>
        </trans-unit>
        <trans-unit id="d3e1336ad22fdd6630c5534d49b4b6f33d95e613" translate="yes" xml:space="preserve">
          <source>A component you specify in a route definition.</source>
          <target state="translated">途径定义中指定的组件。</target>
        </trans-unit>
        <trans-unit id="1921733ec87213ae324063a594427212b01dfd9e" translate="yes" xml:space="preserve">
          <source>A component, such as &lt;code&gt;ConfigComponent&lt;/code&gt;, injects the &lt;code&gt;ConfigService&lt;/code&gt; and calls the &lt;code&gt;getConfig&lt;/code&gt; service method.</source>
          <target state="translated">诸如 &lt;code&gt;ConfigComponent&lt;/code&gt; 类的组件将注入 &lt;code&gt;ConfigService&lt;/code&gt; 并调用 &lt;code&gt;getConfig&lt;/code&gt; 服务方法。</target>
        </trans-unit>
        <trans-unit id="ddc9abdd56dcae660b1b5fdd43e549b91308f6a9" translate="yes" xml:space="preserve">
          <source>A component, unlike all other parts of an Angular application, combines an HTML template and a TypeScript class. The component truly is the template and the class &lt;em&gt;working together&lt;/em&gt;. To adequately test a component, you should test that they work together as intended.</source>
          <target state="translated">与Angular应用程序的所有其他部分不同，组件将HTML模板和TypeScript类组合在一起。组件确实是模板和类&lt;em&gt;一起工作的&lt;/em&gt;。为了充分测试组件，您应该测试它们是否可以按预期工作。</target>
        </trans-unit>
        <trans-unit id="98e7a6058cbd18c8d57a0d87274cdac45aaecd6d" translate="yes" xml:space="preserve">
          <source>A configuration object that defines a single route. A set of routes are collected in a &lt;code&gt;&lt;a href=&quot;router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; array to define a &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; configuration. The router attempts to match segments of a given URL against each route, using the configuration options defined in this object.</source>
          <target state="translated">定义单个路由的配置对象。在 &lt;code&gt;&lt;a href=&quot;router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; 数组中收集了一组路由，以定义 &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 配置。路由器尝试使用此对象中定义的配置选项，将给定URL的段与每个路由进行匹配。</target>
        </trans-unit>
        <trans-unit id="e647343b7b8f98c675920da38a07c8f9f188b5ed" translate="yes" xml:space="preserve">
          <source>A configuration object that defines a single route. A set of routes are collected in a &lt;code&gt;&lt;a href=&quot;routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; array to define a &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; configuration. The router attempts to match segments of a given URL against each route, using the configuration options defined in this object.</source>
          <target state="translated">定义单个路由的配置对象。在 &lt;code&gt;&lt;a href=&quot;routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; 数组中收集了一组路由，以定义 &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 配置。路由器尝试使用此对象中定义的配置选项，将给定URL的段与每个路由进行匹配。</target>
        </trans-unit>
        <trans-unit id="4520e60162947e0d4f8bc410870de69a92317566" translate="yes" xml:space="preserve">
          <source>A configuration that initializes an NgElementConstructor with the dependencies and strategy it needs to transform a component into a custom element class.</source>
          <target state="translated">一个初始化NgElementConstructor的配置,该配置具有将一个组件转化为自定义元素类所需的依赖性和策略。</target>
        </trans-unit>
        <trans-unit id="5ee57bfc72b82baa4a0dd6579c0dbcb1d2fa549f" translate="yes" xml:space="preserve">
          <source>A configuration that provides initialization information to the created class.</source>
          <target state="translated">为创建的类提供初始化信息的配置。</target>
        </trans-unit>
        <trans-unit id="4b7a75de7a7dd9fd3c6c2e1cb2bcd7c662897553" translate="yes" xml:space="preserve">
          <source>A context object to attach to the &lt;a href=&quot;../core/embeddedviewref&quot;&gt;&lt;code&gt;EmbeddedViewRef&lt;/code&gt;&lt;/a&gt;. This should be an object, the object's keys will be available for binding by the local template &lt;code&gt;let&lt;/code&gt; declarations. Using the key &lt;code&gt;$implicit&lt;/code&gt; in the context object will set its value as default.</source>
          <target state="translated">附加到&lt;a href=&quot;../core/embeddedviewref&quot;&gt; &lt;code&gt;EmbeddedViewRef&lt;/code&gt; 的&lt;/a&gt;上下文对象。这应该是一个对象，该对象的键将可用于由本地模板 &lt;code&gt;let&lt;/code&gt; 声明进行绑定。在上下文对象中使用键 &lt;code&gt;$implicit&lt;/code&gt; 将其值设置为默认值。</target>
        </trans-unit>
        <trans-unit id="8d2d4d92f8439cb0040f95f6d3290be29ab4aa19" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;dirty&lt;/code&gt; if the user has changed the value in the UI.</source>
          <target state="translated">如果用户更改了UI中的值，则控件是 &lt;code&gt;dirty&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="9327f6896bdca186045601aa3c45f1660eb789f4" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;disabled&lt;/code&gt; when its &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;DISABLED&lt;/code&gt;.</source>
          <target state="translated">控制被 &lt;code&gt;disabled&lt;/code&gt; 时，其 &lt;code&gt;status&lt;/code&gt; 为 &lt;code&gt;DISABLED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82fb23ab120d8e1d1e08017df8326c89e3cb2d80" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;enabled&lt;/code&gt; as long as its &lt;code&gt;status&lt;/code&gt; is not &lt;code&gt;DISABLED&lt;/code&gt;.</source>
          <target state="translated">只要控件的 &lt;code&gt;status&lt;/code&gt; 未 &lt;code&gt;DISABLED&lt;/code&gt; 就 &lt;code&gt;enabled&lt;/code&gt; 该控件。</target>
        </trans-unit>
        <trans-unit id="f2ffd744d5627ca35c2757537e16fdf5ec3e29d2" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;invalid&lt;/code&gt; when its &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;INVALID&lt;/code&gt;.</source>
          <target state="translated">控制是 &lt;code&gt;invalid&lt;/code&gt; 时，其 &lt;code&gt;status&lt;/code&gt; 为 &lt;code&gt;INVALID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a47d095af794f1f2d7e0cc865234a5f4331e5e8f" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;pending&lt;/code&gt; when its &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;PENDING&lt;/code&gt;.</source>
          <target state="translated">当控件的 &lt;code&gt;status&lt;/code&gt; 为 &lt;code&gt;PENDING&lt;/code&gt; 时，它处于 &lt;code&gt;pending&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="2361448b385344eb49836b469c86903441a98793" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;pristine&lt;/code&gt; if the user has not yet changed the value in the UI.</source>
          <target state="translated">如果用户尚未更改UI中的值，则控件为 &lt;code&gt;pristine&lt;/code&gt; 控件。</target>
        </trans-unit>
        <trans-unit id="8dedc3e5db6396d4275bcbc93943c800fcb96a11" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;untouched&lt;/code&gt; if the user has not yet triggered a &lt;code&gt;blur&lt;/code&gt; event on it.</source>
          <target state="translated">如果用户尚未触发控件上的 &lt;code&gt;blur&lt;/code&gt; 事件，则控件 &lt;code&gt;untouched&lt;/code&gt; 被触摸。</target>
        </trans-unit>
        <trans-unit id="662ee3af64fa768ec48be3840af08c1ff766946c" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;valid&lt;/code&gt; when its &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;VALID&lt;/code&gt;.</source>
          <target state="translated">控制是 &lt;code&gt;valid&lt;/code&gt; ，当它的 &lt;code&gt;status&lt;/code&gt; 是 &lt;code&gt;VALID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c96dbfe8e7a308aa5f340515594b71ba14d67cb" translate="yes" xml:space="preserve">
          <source>A control is marked &lt;code&gt;touched&lt;/code&gt; once the user has triggered a &lt;code&gt;blur&lt;/code&gt; event on it.</source>
          <target state="translated">一旦用户在控件上触发了 &lt;code&gt;blur&lt;/code&gt; 事件，就将控件标记为已 &lt;code&gt;touched&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="077b31470ebd608b300ba3d8e68f55768bc26f76" translate="yes" xml:space="preserve">
          <source>A control is pending while the control performs async validation.</source>
          <target state="translated">当控件执行异步验证时,控件正在等待。</target>
        </trans-unit>
        <trans-unit id="20010f105963bf11938a19a5e0f2c55c1232a5a2" translate="yes" xml:space="preserve">
          <source>A corresponding function defines a set of parameters for each category, and collects them into a corresponding &lt;code&gt;&lt;a href=&quot;animationmetadata&quot;&gt;AnimationMetadata&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">相应的函数为每个类别定义一组参数，并将它们收集到相应的 &lt;code&gt;&lt;a href=&quot;animationmetadata&quot;&gt;AnimationMetadata&lt;/a&gt;&lt;/code&gt; 对象中。</target>
        </trans-unit>
        <trans-unit id="c4431d17b6bd0b4e139d23f69b87553db73c04b2" translate="yes" xml:space="preserve">
          <source>A couple of extra providers enable routing with &quot;hash&quot; URLs such as &lt;code&gt;#!/phones&lt;/code&gt; instead of the default &quot;push state&quot; strategy.</source>
          <target state="translated">几个额外的提供程序可以使用&amp;ldquo;哈希&amp;rdquo; URL（如 &lt;code&gt;#!/phones&lt;/code&gt; )而不是默认的&amp;ldquo;推送状态&amp;rdquo;策略来进行路由。</target>
        </trans-unit>
        <trans-unit id="0b3b73324dced072c7c998b9b615730a1cfe9df7" translate="yes" xml:space="preserve">
          <source>A couple of observations:</source>
          <target state="translated">几点意见:</target>
        </trans-unit>
        <trans-unit id="cead82c2a3576abd5bbfffd3a278cd74d11896ea" translate="yes" xml:space="preserve">
          <source>A crisis center with child routes</source>
          <target state="translated">有儿童路线的危机中心</target>
        </trans-unit>
        <trans-unit id="d696bc9b7e4bc40435fff12b3833af21db44d854" translate="yes" xml:space="preserve">
          <source>A critical alert.</source>
          <target state="translated">一个严重的警报。</target>
        </trans-unit>
        <trans-unit id="dda359a5b2152b76b3b7c5509f76dff57027bf0a" translate="yes" xml:space="preserve">
          <source>A critical point</source>
          <target state="translated">一个关键点</target>
        </trans-unit>
        <trans-unit id="ce6317a4ac2bc019a91d33b9bae2729a5b87ff60" translate="yes" xml:space="preserve">
          <source>A custom URL-matching function. Cannot be used together with &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">自定义URL匹配功能。不能与 &lt;code&gt;path&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="fdafdc4619b6863a9e092a97e8ef06300d64b092" translate="yes" xml:space="preserve">
          <source>A custom element &lt;em&gt;hosts&lt;/em&gt; an Angular component, providing a bridge between the data and logic defined in the component and standard DOM APIs. Component properties and logic maps directly into HTML attributes and the browser's event system.</source>
          <target state="translated">自定义元素&lt;em&gt;承载&lt;/em&gt; Angular组件，在组件和标准DOM API中定义的数据和逻辑之间提供桥梁。组件属性和逻辑直接映射到HTML属性和浏览器的事件系统。</target>
        </trans-unit>
        <trans-unit id="50fbd9a7a05110984303e83f01d313340150d8d9" translate="yes" xml:space="preserve">
          <source>A custom element extends HTML by allowing you to define a tag whose content is created and controlled by JavaScript code. The browser maintains a &lt;code&gt;CustomElementRegistry&lt;/code&gt; of defined custom elements (also called Web Components), which maps an instantiable JavaScript class to an HTML tag.</source>
          <target state="translated">自定义元素通过允许您定义其内容由JavaScript代码创建和控制的标记来扩展HTML。浏览器维护定义的自定义元素（也称为Web组件）的 &lt;code&gt;CustomElementRegistry&lt;/code&gt; ，该元素将可实例化的JavaScript类映射到HTML标记。</target>
        </trans-unit>
        <trans-unit id="6c725e2134906977cd73632a4b80c11367108a21" translate="yes" xml:space="preserve">
          <source>A custom error handler for failed navigations.</source>
          <target state="translated">一个自定义的导航失败的错误处理程序。</target>
        </trans-unit>
        <trans-unit id="1ffa2867cc36c1d87f7f95eef71a929854ba1538" translate="yes" xml:space="preserve">
          <source>A custom event from an interceptor or a backend.</source>
          <target state="translated">来自拦截器或后台的自定义事件。</target>
        </trans-unit>
        <trans-unit id="508d36eb8404c69db7405f018e84a6ca55036f9b" translate="yes" xml:space="preserve">
          <source>A custom handler for malformed URI errors. The handler is invoked when &lt;code&gt;encodedURI&lt;/code&gt; contains invalid character sequences. The default implementation is to redirect to the root URL, dropping any path or parameter information. The function takes three parameters:</source>
          <target state="translated">格式错误的URI错误的自定义处理程序。当 &lt;code&gt;encodedURI&lt;/code&gt; 包含无效字符序列时，将调用处理程序。默认实现是重定向到根URL，删除任何路径或参数信息。该函数具有三个参数：</target>
        </trans-unit>
        <trans-unit id="210dc781bd3eb286264d5aef72455eddddea7bdc" translate="yes" xml:space="preserve">
          <source>A data service encapsulates these details. It's easier to evolve these details inside the service without affecting its consumers. And it's easier to test the consumers with mock service implementations.</source>
          <target state="translated">数据服务封装了这些细节。在不影响消费者的情况下,在服务内部演化这些细节更容易。而且用模拟服务实现来测试消费者更容易。</target>
        </trans-unit>
        <trans-unit id="5fd0ebebf76062ac0cdbc96c6dac75750fffde56" translate="yes" xml:space="preserve">
          <source>A declarable belongs to one and only one NgModule. A module can list another module among its exports, in which case all of that module's public declaration are exported.</source>
          <target state="translated">一个可声明属于一个且仅属于一个NgModule。一个模块可以将另一个模块列在它的导出中,在这种情况下,该模块的所有公共声明都会被导出。</target>
        </trans-unit>
        <trans-unit id="d9d67cd229281a6464e06b9627732572303daf22" translate="yes" xml:space="preserve">
          <source>A declarable can only belong to one module, so only declare it in one &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. When you need it elsewhere, import the module that has the declarable you need in it.</source>
          <target state="translated">一个申报只能属于一个模块，所以只在一个声明它 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 。当您在其他地方需要它时，导入其中包含您需要声明的模块。</target>
        </trans-unit>
        <trans-unit id="1a3c15ea9c54b23acd006a80632a4370109b2319" translate="yes" xml:space="preserve">
          <source>A decorator on a component class adds the metadata, including a pointer to the associated template.</source>
          <target state="translated">组件类上的装饰器添加元数据,包括指向关联模板的指针。</target>
        </trans-unit>
        <trans-unit id="d9232145f0fa479629bee4a1403931108d3b67c5" translate="yes" xml:space="preserve">
          <source>A default implementation of the &lt;code&gt;&lt;a href=&quot;router/urlserializer&quot;&gt;UrlSerializer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router/urlserializer&quot;&gt;UrlSerializer&lt;/a&gt;&lt;/code&gt; 的默认实现。</target>
        </trans-unit>
        <trans-unit id="be7410185cfb22d50bdb3dd5b8d69a91b30d1843" translate="yes" xml:space="preserve">
          <source>A default implementation of the &lt;code&gt;&lt;a href=&quot;urlserializer&quot;&gt;UrlSerializer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urlserializer&quot;&gt;UrlSerializer&lt;/a&gt;&lt;/code&gt; 的默认实现。</target>
        </trans-unit>
        <trans-unit id="d5edf00cab75a5f261a00303a58b3784ef41af25" translate="yes" xml:space="preserve">
          <source>A delay value.</source>
          <target state="translated">一个延迟值。</target>
        </trans-unit>
        <trans-unit id="30019a94791709ed7ee12c9d2a7e97d0717eab83" translate="yes" xml:space="preserve">
          <source>A dependency &lt;a href=&quot;glossary#provider&quot;&gt;provider&lt;/a&gt; configures an injector with a &lt;a href=&quot;glossary#di-token&quot;&gt;DI token&lt;/a&gt;, which that injector uses to provide the concrete, runtime version of a dependency value. The injector relies on the provider configuration to create instances of the dependencies that it injects into components, directives, pipes, and other services.</source>
          <target state="translated">依赖项&lt;a href=&quot;glossary#provider&quot;&gt;提供程序&lt;/a&gt;使用&lt;a href=&quot;glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;配置注入器，注入器使用DI令牌提供依赖项值的具体运行时版本。注入程序依赖于提供程序配置来创建将其注入到组件，指令，管道和其他服务中的依赖项的实例。</target>
        </trans-unit>
        <trans-unit id="51f38719f370be9d130886d8c0bd44a8365fee81" translate="yes" xml:space="preserve">
          <source>A dependency can't always be created by the default method of instantiating a class. You learned about some other methods in &lt;a href=&quot;dependency-injection-providers&quot;&gt;Dependency Providers&lt;/a&gt;. The following &lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt; example demonstrates many of the alternatives and why you need them. It's visually simple: a few properties and the logs produced by a logger.</source>
          <target state="translated">不能总是通过实例化类的默认方法来创建依赖项。您了解了&lt;a href=&quot;dependency-injection-providers&quot;&gt;Dependency Providers中的&lt;/a&gt;其他一些方法。以下 &lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt; 示例演示了许多替代方案以及您为什么需要它们。它在视觉上很简单：一些属性和记录器生成的日志。</target>
        </trans-unit>
        <trans-unit id="9f695238eb1ba6e7f4b219ba97b438b3b7e53b33" translate="yes" xml:space="preserve">
          <source>A dependency doesn't have to be a service&amp;mdash;it could be a function, for example, or a value.</source>
          <target state="translated">依赖关系不必一定是服务，例如它可以是一个函数或一个值。</target>
        </trans-unit>
        <trans-unit id="15525a2b2d3a0191259341bf53ae12f208e1ea57" translate="yes" xml:space="preserve">
          <source>A design pattern and mechanism for creating and delivering some parts of an application (dependencies) to other parts of an application that require them.</source>
          <target state="translated">一种设计模式和机制,用于创建应用程序的某些部分(依赖关系)并将其交付给需要它们的应用程序的其他部分。</target>
        </trans-unit>
        <trans-unit id="cbba6be02bb4ee14ea720baacb075129dc0348dc" translate="yes" xml:space="preserve">
          <source>A differ that tracks changes made to an object over time.</source>
          <target state="translated">追踪对象随时间变化的差异。</target>
        </trans-unit>
        <trans-unit id="ba0e47b0105f6046e0b89617ee3f13f2bdf94e04" translate="yes" xml:space="preserve">
          <source>A directive &lt;em&gt;class&lt;/em&gt; is spelled in &lt;em&gt;UpperCamelCase&lt;/em&gt; (&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt;). A directive's &lt;em&gt;attribute name&lt;/em&gt; is spelled in &lt;em&gt;lowerCamelCase&lt;/em&gt; (&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;). The guide refers to the directive &lt;em&gt;class&lt;/em&gt; when talking about its properties and what the directive does. The guide refers to the &lt;em&gt;attribute name&lt;/em&gt; when describing how you apply the directive to an element in the HTML template.</source>
          <target state="translated">指令&lt;em&gt;类&lt;/em&gt;在&lt;em&gt;UpperCamelCase&lt;/em&gt;（ &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; ）中进行拼写。指令的&lt;em&gt;属性名称&lt;/em&gt;在&lt;em&gt;lowerCamelCase&lt;/em&gt;（ &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; ）中拼写。该指南在谈论其属性和该指令的作用时引用了该指令&lt;em&gt;类&lt;/em&gt;。该指南在描述如何将指令应用于HTML模板中的元素时引用了&lt;em&gt;属性名称&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="94d1828685c2b046ca5fbb00127b0088df822914" translate="yes" xml:space="preserve">
          <source>A directive class is usually associated with an HTML element or attribute, and that element or attribute is often referred to as the directive itself. When Angular finds a directive in an HTML &lt;a href=&quot;glossary#template&quot;&gt;template&lt;/a&gt;, it creates the matching directive class instance and gives the instance control over that portion of the browser DOM.</source>
          <target state="translated">指令类通常与HTML元素或属性相关联，并且该元素或属性通常称为指令本身。当Angular在HTML &lt;a href=&quot;glossary#template&quot;&gt;模板中&lt;/a&gt;找到指令时，它将创建匹配的指令类实例，并赋予实例对浏览器DOM的那部分的控制权。</target>
        </trans-unit>
        <trans-unit id="e2eb8b30123eba9d5dc5274c6b45d8e83667dd30" translate="yes" xml:space="preserve">
          <source>A directive could hide the unwanted paragraph instead by setting its &lt;code&gt;display&lt;/code&gt; style to &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">指令可以通过将其 &lt;code&gt;display&lt;/code&gt; 样式设置为 &lt;code&gt;none&lt;/code&gt; 来隐藏不需要的段落。</target>
        </trans-unit>
        <trans-unit id="fc3d1ce63988b28444f381ebc398b6bdf06ac41c" translate="yes" xml:space="preserve">
          <source>A directive has the same set of lifecycle hooks.</source>
          <target state="translated">一个指令有同样的一套生命周期钩子。</target>
        </trans-unit>
        <trans-unit id="eb17837a767841446768a528a4105fa60a1be0ff" translate="yes" xml:space="preserve">
          <source>A directive must belong to exactly one NgModule. Do not re-declare a directive imported from another module. List the directive class in the &lt;code&gt;declarations&lt;/code&gt; field of an NgModule.</source>
          <target state="translated">指令必须完全属于一个NgModule。不要重新声明从另一个模块导入的指令。在NgModule 的 &lt;code&gt;declarations&lt;/code&gt; 字段中列出指令类。</target>
        </trans-unit>
        <trans-unit id="06bab5b2f84f1d83b1636af97cad32ec246881f5" translate="yes" xml:space="preserve">
          <source>A directive that adds max length validation to controls marked with the &lt;code&gt;&lt;a href=&quot;forms/maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将最大长度验证添加到标有 &lt;code&gt;&lt;a href=&quot;forms/maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="dc755aa288617ce267b9847c3b17e76a21d1135a" translate="yes" xml:space="preserve">
          <source>A directive that adds max length validation to controls marked with the &lt;code&gt;&lt;a href=&quot;maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将最大长度验证添加到标有 &lt;code&gt;&lt;a href=&quot;maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="6e258f11d9d85d3806958b19413b937998de3ca2" translate="yes" xml:space="preserve">
          <source>A directive that adds minimum length validation to controls marked with the &lt;code&gt;&lt;a href=&quot;forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; mult-provider list.</source>
          <target state="translated">该指令将最小长度验证添加到标有 &lt;code&gt;&lt;a href=&quot;forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; 属性的控件。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供商列表一起提供。</target>
        </trans-unit>
        <trans-unit id="c576fdea0f4345495cbec00241aa643d607047f6" translate="yes" xml:space="preserve">
          <source>A directive that adds minimum length validation to controls marked with the &lt;code&gt;&lt;a href=&quot;minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; mult-provider list.</source>
          <target state="translated">该指令将最小长度验证添加到标有 &lt;code&gt;&lt;a href=&quot;minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; 属性的控件。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供商列表一起提供。</target>
        </trans-unit>
        <trans-unit id="695db7155424e297167bd554b9d87c8adef8366a" translate="yes" xml:space="preserve">
          <source>A directive that adds regex pattern validation to controls marked with the &lt;code&gt;&lt;a href=&quot;forms/patternvalidator&quot;&gt;pattern&lt;/a&gt;&lt;/code&gt; attribute. The regex must match the entire control value. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将正则表达式模式验证添加到标记有 &lt;code&gt;&lt;a href=&quot;forms/patternvalidator&quot;&gt;pattern&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。正则表达式必须与整个控制值匹配。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="0e7995cf0d230fbcb234007e53811a6559246b24" translate="yes" xml:space="preserve">
          <source>A directive that adds regex pattern validation to controls marked with the &lt;code&gt;&lt;a href=&quot;patternvalidator&quot;&gt;pattern&lt;/a&gt;&lt;/code&gt; attribute. The regex must match the entire control value. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将正则表达式模式验证添加到标记有 &lt;code&gt;&lt;a href=&quot;patternvalidator&quot;&gt;pattern&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。正则表达式必须与整个控制值匹配。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="fecaa780233e30f2b7c4f880afba7d4f9c081262" translate="yes" xml:space="preserve">
          <source>A directive that adds the &lt;code&gt;&lt;a href=&quot;emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; validator to controls marked with the &lt;code&gt;&lt;a href=&quot;emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; 验证器添加到标有 &lt;code&gt;&lt;a href=&quot;emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="66ea7083cabb25ae99d85dbbbd48442747569672" translate="yes" xml:space="preserve">
          <source>A directive that adds the &lt;code&gt;&lt;a href=&quot;forms/emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; validator to controls marked with the &lt;code&gt;&lt;a href=&quot;forms/emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;forms/emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; 验证器添加到标有 &lt;code&gt;&lt;a href=&quot;forms/emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="e5b20651be4b4c212b50703b3396740bdd0ebf00" translate="yes" xml:space="preserve">
          <source>A directive that adds the &lt;code&gt;required&lt;/code&gt; validator to any controls marked with the &lt;code&gt;required&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">该指令将 &lt;code&gt;required&lt;/code&gt; 验证器添加到标有 &lt;code&gt;required&lt;/code&gt; 属性的所有控件中。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="27d5b01c46cf928af7627e24610db90e1b702841" translate="yes" xml:space="preserve">
          <source>A directive that adds the &lt;code&gt;required&lt;/code&gt; validator to any controls marked with the &lt;code&gt;required&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">该指令将 &lt;code&gt;required&lt;/code&gt; 验证器添加到标有 &lt;code&gt;required&lt;/code&gt; 属性的所有控件中。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="0540f8499c507f38f8fb31d44a122a56e3f34181" translate="yes" xml:space="preserve">
          <source>A distinct application feature or workflow may be &lt;em&gt;lazy loaded&lt;/em&gt; or &lt;em&gt;loaded on demand&lt;/em&gt; rather than when the application starts.</source>
          <target state="translated">可以&lt;em&gt;延迟加载&lt;/em&gt;或&lt;em&gt;按需&lt;/em&gt;&lt;em&gt;加载&lt;/em&gt;特定的应用程序功能或工作流&lt;em&gt;，&lt;/em&gt;而不是在应用程序启动时&lt;em&gt;加载&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0e65175079f38d7882ce624afc0a013c9135750a" translate="yes" xml:space="preserve">
          <source>A dot-delimited string or array of string/number values that define the path to the control.</source>
          <target state="translated">一个以点分隔的字符串或字符串/数字值的数组,定义了控件的路径。</target>
        </trans-unit>
        <trans-unit id="6b086b3a868f0313eed50c2f74d7d107c8d6b457" translate="yes" xml:space="preserve">
          <source>A download progress event was received.</source>
          <target state="translated">收到了一个下载进度事件。</target>
        </trans-unit>
        <trans-unit id="bf1fd3090342831e8febf29fa6ce244224f91de8" translate="yes" xml:space="preserve">
          <source>A download progress event.</source>
          <target state="translated">一个下载进度事件。</target>
        </trans-unit>
        <trans-unit id="c274fbd2f10d6758f7cee43a610ad84394d5ef5e" translate="yes" xml:space="preserve">
          <source>A factory for creating a Compiler</source>
          <target state="translated">用于创建编译器的工厂</target>
        </trans-unit>
        <trans-unit id="dcb9b28f9ee950cd3bc74acd3a0473356aed355b" translate="yes" xml:space="preserve">
          <source>A factory object returned from the &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;.&lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 返回的工厂对象。 &lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="dfbb3a312624d276c0ae06bf2036ff66b531cb9d" translate="yes" xml:space="preserve">
          <source>A factory object returned from the &lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;.&lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 返回的工厂对象。 &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="950344dd2008bd842b31f199f0c2f6a76dc90bcc" translate="yes" xml:space="preserve">
          <source>A factory provider needs a factory function.</source>
          <target state="translated">工厂供应商需要一个工厂功能。</target>
        </trans-unit>
        <trans-unit id="9af1374f1b3a2d447374063ec0d712c6b3c1abfe" translate="yes" xml:space="preserve">
          <source>A feature module is an organizational best practice, as opposed to a concept of the core Angular API. A feature module delivers a cohesive set of functionality focused on a specific application need such as a user workflow, routing, or forms. While you can do everything within the root module, feature modules help you partition the app into focused areas. A feature module collaborates with the root module and with other modules through the services it provides and the components, directives, and pipes that it shares.</source>
          <target state="translated">功能模块是一种组织上的最佳实践,与核心Angular API的概念相对。一个功能模块提供了一套专注于特定应用需求的凝聚性功能,如用户工作流、路由或表单。虽然你可以在根模块中做所有的事情,但功能模块可以帮助你将应用划分为重点区域。一个功能模块通过它提供的服务和它共享的组件、指令和管道与根模块以及其他模块协作。</target>
        </trans-unit>
        <trans-unit id="8a3f10b61215f1ebd7d50bf9977a58ca5d7430ea" translate="yes" xml:space="preserve">
          <source>A few HTML attributes have 1:1 mapping to properties; for example, &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">一些HTML属性具有1：1映射到属性的属性；例如， &lt;code&gt;id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cab7e438a119824aa31b72befbf1582a5325059e" translate="yes" xml:space="preserve">
          <source>A few examples are:</source>
          <target state="translated">以下是几个例子:</target>
        </trans-unit>
        <trans-unit id="c6ee2c2b25cb84877c6a129970f10826dc9e4acb" translate="yes" xml:space="preserve">
          <source>A few of the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; instance methods are not covered by static &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;&lt;em&gt;class&lt;/em&gt; methods. These are rarely needed.</source>
          <target state="translated">静态 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; &lt;em&gt;类&lt;/em&gt;方法未涵盖一些 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 实例方法。这些很少需要。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe024a04a32763b23cf4aab61238ff280ef8b6c1" translate="yes" xml:space="preserve">
          <source>A few techniques are noteworthy:</source>
          <target state="translated">有几个技术值得注意。</target>
        </trans-unit>
        <trans-unit id="a9b6cd4fe72242d6d017b5e2e509342ea11bb39c" translate="yes" xml:space="preserve">
          <source>A few terms are unambiguously services. They typically indicate agency by ending in &quot;-er&quot;. You may prefer to name a service that logs messages &lt;code&gt;Logger&lt;/code&gt; rather than &lt;code&gt;LoggerService&lt;/code&gt;. Decide if this exception is agreeable in your project. As always, strive for consistency.</source>
          <target state="translated">毫无疑问，有几项服务。它们通常以&amp;ldquo; -er&amp;rdquo;结尾指示代理。您可能更喜欢将服务命名为记录消息 &lt;code&gt;Logger&lt;/code&gt; 的服务，而不是 &lt;code&gt;LoggerService&lt;/code&gt; 。确定此异常在您的项目中是否可以接受。一如既往地争取一致性。</target>
        </trans-unit>
        <trans-unit id="4b0543f1b2e2dc773052225d03a3ed8562e5819b" translate="yes" xml:space="preserve">
          <source>A file named &lt;code&gt;angular.json&lt;/code&gt; at the root level of an Angular &lt;a href=&quot;glossary#workspace&quot;&gt;workspace&lt;/a&gt; provides workspace-wide and project-specific configuration defaults for build and development tools provided by the Angular CLI. Path values given in the configuration are relative to the root workspace folder.</source>
          <target state="translated">Angular &lt;a href=&quot;glossary#workspace&quot;&gt;工作空间&lt;/a&gt;的根级别的名为 &lt;code&gt;angular.json&lt;/code&gt; 的文件为Angular CLI提供的构建和开发工具提供了工作空间范围和项目特定的配置默认值。配置中给出的路径值是相对于根工作区文件夹的。</target>
        </trans-unit>
        <trans-unit id="cdb64896ccc0908fbd528f490c377372ffb24bd2" translate="yes" xml:space="preserve">
          <source>A file named &lt;code&gt;angular.json&lt;/code&gt; at the root level of an Angular &lt;a href=&quot;glossary#workspace&quot;&gt;workspace&lt;/a&gt; provides workspace-wide and project-specific configuration defaults for build and development tools that are provided by or integrated with the &lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt;.</source>
          <target state="translated">Angular &lt;a href=&quot;glossary#workspace&quot;&gt;工作空间&lt;/a&gt;的根级别的名为 &lt;code&gt;angular.json&lt;/code&gt; 的文件为&lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt;提供或集成的构建和开发工具提供了工作空间范围内和特定于项目的配置默认值。</target>
        </trans-unit>
        <trans-unit id="8c5daab9e4b40930ffc67ad08f9f7e944f2c8b0d" translate="yes" xml:space="preserve">
          <source>A final &lt;code&gt;&lt;a href=&quot;http/httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; which will dispatch the request via browser HTTP APIs to a backend.</source>
          <target state="translated">最终的 &lt;code&gt;&lt;a href=&quot;http/httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; ，它将通过浏览器HTTP API将请求分派到后端。</target>
        </trans-unit>
        <trans-unit id="63f7ebe21023a564f8979eb517f0a75bfaa7e096" translate="yes" xml:space="preserve">
          <source>A final &lt;code&gt;&lt;a href=&quot;httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; which will dispatch the request via browser HTTP APIs to a backend.</source>
          <target state="translated">最终的 &lt;code&gt;&lt;a href=&quot;httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; ，它将通过浏览器HTTP API将请求分派到后端。</target>
        </trans-unit>
        <trans-unit id="081bb28f877d8dfbf9dbdced6031ad6c6eb21354" translate="yes" xml:space="preserve">
          <source>A flat module index &lt;code&gt;.d.ts&lt;/code&gt; and &lt;code&gt;.js&lt;/code&gt; is created with the given &lt;code&gt;flatModuleOutFile&lt;/code&gt; name in the same location as the library index &lt;code&gt;.d.ts&lt;/code&gt; file.</source>
          <target state="translated">使用给定的 &lt;code&gt;flatModuleOutFile&lt;/code&gt; 名称在与库索引 &lt;code&gt;.d.ts&lt;/code&gt; 文件相同的位置创建平面模块索引 &lt;code&gt;.d.ts&lt;/code&gt; 和 &lt;code&gt;.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b4ecb2d416525e8a678b698930a9d483c457446" translate="yes" xml:space="preserve">
          <source>A flip of the switch turns the &lt;code&gt;FlyingHeroesPipe&lt;/code&gt; into a &lt;code&gt;FlyingHeroesImpurePipe&lt;/code&gt;. The complete implementation is as follows:</source>
          <target state="translated">&lt;code&gt;FlyingHeroesPipe&lt;/code&gt; 一下开关，即可将FlyingHeroesPipe转换为 &lt;code&gt;FlyingHeroesImpurePipe&lt;/code&gt; 。完整的实现如下：</target>
        </trans-unit>
        <trans-unit id="dce635877c967caa411bed07baa04183db074439" translate="yes" xml:space="preserve">
          <source>A form component class with a &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">具有 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 装饰器的表单组件类。</target>
        </trans-unit>
        <trans-unit id="6f4dabb93ae061e849700a419e18e9419cfd943a" translate="yes" xml:space="preserve">
          <source>A form group tracks the status and changes for each of its controls, so if one of the controls changes, the parent control also emits a new status or value change. The model for the group is maintained from its members. After you define the model, you must update the template to reflect the model in the view.</source>
          <target state="translated">表单组跟踪其每个控件的状态和变化,因此如果其中一个控件发生变化,父控件也会发出新的状态或值变化。组的模型是由其成员维护的。定义模型后,必须更新模板以反映视图中的模型。</target>
        </trans-unit>
        <trans-unit id="7a2957cdc2fc7fde81eadc1298d620e085f6a3ce" translate="yes" xml:space="preserve">
          <source>A form of property &lt;a href=&quot;glossary#data-binding&quot;&gt;data binding&lt;/a&gt; in which a &lt;a href=&quot;glossary#template-expression&quot;&gt;template expression&lt;/a&gt; between double-curly braces renders as text. That text can be concatenated with neighboring text before it is assigned to an element property or displayed between element tags, as in this example.</source>
          <target state="translated">属性&lt;a href=&quot;glossary#data-binding&quot;&gt;数据绑定的&lt;/a&gt;一种形式，其中双花括号之间的&lt;a href=&quot;glossary#template-expression&quot;&gt;模板表达式&lt;/a&gt;呈现为文本。可以将文本与相邻文本连接起来，然后再将其分配给元素属性或在元素标签之间显示，如本例所示。</target>
        </trans-unit>
        <trans-unit id="c440d6cf03478cfaa3881a3d89f9573911b226a4" translate="yes" xml:space="preserve">
          <source>A format for building Angular forms using HTML forms and input elements in the view. The alternative format uses the &lt;a href=&quot;glossary#reactive-forms&quot;&gt;reactive forms&lt;/a&gt; framework.</source>
          <target state="translated">一种使用HTML表单和视图中的输入元素构建Angular表单的格式。替代格式使用&lt;a href=&quot;glossary#reactive-forms&quot;&gt;反应形式&lt;/a&gt;框架。</target>
        </trans-unit>
        <trans-unit id="e5ef4a349b19270bd3bc9ebcc3f18e626f75c0cf" translate="yes" xml:space="preserve">
          <source>A framework for building Angular forms through code in a component. The alternative is a &lt;a href=&quot;glossary#template-driven-forms&quot;&gt;template-driven form&lt;/a&gt;.</source>
          <target state="translated">通过组件中的代码构建Angular表单的框架。另一种方法是&lt;a href=&quot;glossary#template-driven-forms&quot;&gt;模板驱动形式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d14d0f7ea94f405fdbafc210a264d270af949aa" translate="yes" xml:space="preserve">
          <source>A full HTTP response, including a typed response body (which may be &lt;code&gt;null&lt;/code&gt; if one was not returned).</source>
          <target state="translated">完整的HTTP响应，包括类型化的响应主体（如果未返回，则可以为 &lt;code&gt;null&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="53e7772e1ee60e5a076a93eae9c41bb3210c50d4" translate="yes" xml:space="preserve">
          <source>A function for matching a route against URLs. Implement a custom URL matcher for &lt;code&gt;&lt;a href=&quot;route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; when a combination of &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; is not expressive enough. Cannot be used together with &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">用于根据URL匹配路由的功能。当 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 的组合表现力不足时，为 &lt;code&gt;&lt;a href=&quot;route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; 实现自定义URL匹配器。不能与 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="09f1f8e31b5105534c849f46cebce0d49634b1a5" translate="yes" xml:space="preserve">
          <source>A function for matching a route against URLs. Implement a custom URL matcher for &lt;code&gt;&lt;a href=&quot;router/route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; when a combination of &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; is not expressive enough. Cannot be used together with &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">用于根据URL匹配路由的功能。当 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 的组合表现力不足时，为 &lt;code&gt;&lt;a href=&quot;router/route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; 实现自定义URL匹配器。不能与 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="684e23c9356d6fb252eeb1d67716948d73324136" translate="yes" xml:space="preserve">
          <source>A function is executed each time a state change occurs in the animation trigger element. The animation steps run when the function returns true.</source>
          <target state="translated">每次动画触发元素发生状态变化时,都会执行一个函数。当函数返回真时,动画步骤就会运行。</target>
        </trans-unit>
        <trans-unit id="574a3a8774d337c58b7e6859c4c8542cb2f2b41f" translate="yes" xml:space="preserve">
          <source>A function that defines how to obtain or generate values or messages to be published. This function is executed when a consumer calls the &lt;code&gt;subscribe()&lt;/code&gt; method of an &lt;a href=&quot;glossary#observable&quot;&gt;observable&lt;/a&gt;.</source>
          <target state="translated">定义如何获取或生成要发布的值或消息的函数。当使用者调用&lt;a href=&quot;glossary#observable&quot;&gt;observable&lt;/a&gt;的 &lt;code&gt;subscribe()&lt;/code&gt; 方法时，将执行此函数。</target>
        </trans-unit>
        <trans-unit id="6275d4c0492c7115ec24bb20ae9c3d8f63aab167" translate="yes" xml:space="preserve">
          <source>A function that defines how to track changes for items in the iterable.</source>
          <target state="translated">一个定义如何跟踪迭代项变化的函数。</target>
        </trans-unit>
        <trans-unit id="4fc9c1cc331c59974bdc21b79a630dbc89ff6bf9" translate="yes" xml:space="preserve">
          <source>A function that is called to resolve a collection of lazy-loaded routes.</source>
          <target state="translated">调用的一个函数,用于解析懒惰加载的路由集合。</target>
        </trans-unit>
        <trans-unit id="ca9b1f1fd5952d3c22b4ec5faed5f044aba54c78" translate="yes" xml:space="preserve">
          <source>A function that modifies a class or property definition. Decorators (also called &lt;em&gt;annotations&lt;/em&gt;) are an experimental (stage 2) &lt;a href=&quot;https://github.com/wycats/javascript-decorators&quot;&gt;JavaScript language feature&lt;/a&gt;. TypeScript adds support for decorators.</source>
          <target state="translated">修改类或属性定义的函数。装饰器（也称为&lt;em&gt;注释&lt;/em&gt;）是实验性（阶段2）&lt;a href=&quot;https://github.com/wycats/javascript-decorators&quot;&gt;JavaScript语言功能&lt;/a&gt;。TypeScript添加了对装饰器的支持。</target>
        </trans-unit>
        <trans-unit id="c02f83e963294e99ed2772ac7ec52453259e650b" translate="yes" xml:space="preserve">
          <source>A function that receives a control and returns a Promise or observable that emits validation errors if present, otherwise null.</source>
          <target state="translated">接收一个控件并返回一个Promise或observable的函数,如果存在,则发出验证错误,否则为空。</target>
        </trans-unit>
        <trans-unit id="c63c521dd24d8ae841280ee8807d80862d7fa73b" translate="yes" xml:space="preserve">
          <source>A function that receives a control and synchronously returns a map of validation errors if present, otherwise null.</source>
          <target state="translated">一个接收控件并同步返回验证错误映射(如果存在)的函数,否则为空。</target>
        </trans-unit>
        <trans-unit id="498df6d36954e0cdff82d1b0509284d0281596a6" translate="yes" xml:space="preserve">
          <source>A function that uses the &lt;a href=&quot;glossary#architect&quot;&gt;Architect&lt;/a&gt; API to perform a complex process such as &quot;build&quot; or &quot;test&quot;. The builder code is defined in an &lt;a href=&quot;glossary#npm-package&quot;&gt;npm package&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;glossary#architect&quot;&gt;Architect&lt;/a&gt; API执行复杂过程的功能，例如&amp;ldquo;构建&amp;rdquo;或&amp;ldquo;测试&amp;rdquo;。构建器代码在&lt;a href=&quot;glossary#npm-package&quot;&gt;npm软件包中&lt;/a&gt;定义。</target>
        </trans-unit>
        <trans-unit id="cb7987e75f0c7e65838a518979f2220d3c5dca44" translate="yes" xml:space="preserve">
          <source>A function that will be executed when a platform is initialized.</source>
          <target state="translated">当一个平台被初始化时,将被执行的函数。</target>
        </trans-unit>
        <trans-unit id="09d03f78f1c88deaa516cb82e14a686bff6bdbe1" translate="yes" xml:space="preserve">
          <source>A function that will be executed when an application is initialized.</source>
          <target state="translated">在应用程序初始化时执行的函数。</target>
        </trans-unit>
        <trans-unit id="06f5cc23cf462eb4020857f44f94a183b857febb" translate="yes" xml:space="preserve">
          <source>A function that will be executed when calling &lt;code&gt;&lt;a href=&quot;platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;&lt;/code&gt; just before current platform state is rendered to string.</source>
          <target state="translated">在将当前平台状态呈现为字符串之前调用 &lt;code&gt;&lt;a href=&quot;platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;&lt;/code&gt; 时将执行的函数。</target>
        </trans-unit>
        <trans-unit id="407a564f4ca570f6b9e0addb423af8b5d1261191" translate="yes" xml:space="preserve">
          <source>A function that will be executed when calling &lt;code&gt;&lt;a href=&quot;rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;rendermodule&quot;&gt;renderModule&lt;/a&gt;&lt;/code&gt; just before current platform state is rendered to string.</source>
          <target state="translated">在将当前平台状态呈现为字符串之前调用 &lt;code&gt;&lt;a href=&quot;rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;rendermodule&quot;&gt;renderModule&lt;/a&gt;&lt;/code&gt; 时将执行的函数。</target>
        </trans-unit>
        <trans-unit id="4d85a1e7e2608a6d01946ea8f34b3d4c9507f423" translate="yes" xml:space="preserve">
          <source>A function to call when the notification occurs. Receives the event object as an argument.</source>
          <target state="translated">通知发生时调用的函数。接收事件对象作为参数。</target>
        </trans-unit>
        <trans-unit id="0a7b93f0502276f70b84f75c408d27157e6276eb" translate="yes" xml:space="preserve">
          <source>A function to invoke to create a value for this &lt;code&gt;token&lt;/code&gt;. The function is invoked with resolved values of &lt;code&gt;token&lt;/code&gt;s in the &lt;code&gt;deps&lt;/code&gt; field.</source>
          <target state="translated">调用以为此 &lt;code&gt;token&lt;/code&gt; 创建值的函数。在 &lt;code&gt;deps&lt;/code&gt; 字段中使用 &lt;code&gt;token&lt;/code&gt; s的解析值调用该函数。</target>
        </trans-unit>
        <trans-unit id="2be97f407436eaa098a90855dde1a2d9662d7e64" translate="yes" xml:space="preserve">
          <source>A future guide update will explain how to write such tests with the &lt;code&gt;&lt;a href=&quot;../api/router/testing/routertestingmodule&quot;&gt;RouterTestingModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将来的指南更新将说明如何使用 &lt;code&gt;&lt;a href=&quot;../api/router/testing/routertestingmodule&quot;&gt;RouterTestingModule&lt;/a&gt;&lt;/code&gt; 编写此类测试。</target>
        </trans-unit>
        <trans-unit id="dbf0f48bf91ee4d285d9f2dff879c99f8aa11e6b" translate="yes" xml:space="preserve">
          <source>A getter provides easy access to the aliases in the form array instance compared to repeating the &lt;code&gt;profileForm.get()&lt;/code&gt; method to get each instance. The form array instance represents an undefined number of controls in an array. It's convenient to access a control through a getter, and this approach is easy to repeat for additional controls.</source>
          <target state="translated">与重复执行 &lt;code&gt;profileForm.get()&lt;/code&gt; 方法以获取每个实例相比，使用getter可以轻松访问表单数组实例中的别名。窗体数组实例表示数组中控件的数量未定义。通过吸气器访问控件很方便，对于其他控件，这种方法很容易重复。</target>
        </trans-unit>
        <trans-unit id="56f28945da320dfacc6dd33fe0eed3c442d99b91" translate="yes" xml:space="preserve">
          <source>A global registry of &lt;a href=&quot;core/testability&quot;&gt;&lt;code&gt;Testability&lt;/code&gt;&lt;/a&gt; instances for specific elements.</source>
          <target state="translated">用于特定元素的&lt;a href=&quot;core/testability&quot;&gt; &lt;code&gt;Testability&lt;/code&gt; &lt;/a&gt;实例的全局注册表。</target>
        </trans-unit>
        <trans-unit id="5618156b292e64c15c0bffbcc031189cd9a6e28a" translate="yes" xml:space="preserve">
          <source>A global registry of &lt;a href=&quot;testability&quot;&gt;&lt;code&gt;Testability&lt;/code&gt;&lt;/a&gt; instances for specific elements.</source>
          <target state="translated">用于特定元素的&lt;a href=&quot;testability&quot;&gt; &lt;code&gt;Testability&lt;/code&gt; &lt;/a&gt;实例的全局注册表。</target>
        </trans-unit>
        <trans-unit id="9d98e2b1ee296918f8bf1519af8e2ae4db7c097d" translate="yes" xml:space="preserve">
          <source>A good example is a service that holds state for its companion component instance. You need a separate instance of the service for each component. Each service has its own work-state, isolated from the service-and-state of a different component. This is called &lt;em&gt;sandboxing&lt;/em&gt; because each service and component instance has its own sandbox to play in.</source>
          <target state="translated">一个很好的例子是一个为其伙伴组件实例保留状态的服务。每个组件都需要一个单独的服务实例。每个服务都有其自己的工作状态，与不同组件的服务和状态隔离。之所以称为&lt;em&gt;沙箱，&lt;/em&gt;是因为每个服务和组件实例都有自己的沙箱可以播放。</target>
        </trans-unit>
        <trans-unit id="36b9a1d5726b573b8f66a1dbf1ebd460484186d9" translate="yes" xml:space="preserve">
          <source>A good example of usage can be found in the &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt; documentation. Here is the example component that listens for open and close events:</source>
          <target state="translated">一个很好的用法示例可以在&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;文档中找到。这是侦听打开和关闭事件的示例组件：</target>
        </trans-unit>
        <trans-unit id="153735462281f1d5fbb0b16f23b1e00c53898bed" translate="yes" xml:space="preserve">
          <source>A good use case for &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; is to inject a service but only if it is available on the current host element. To avoid errors in this situation, combine &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; with &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; 一个好用例是注入服务，但前提是该服务在当前主机元素上可用。为了避免这种情况下的错误，请将 &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; 与 &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a02a9374055e70b55c163943bf2dfb0d3025e311" translate="yes" xml:space="preserve">
          <source>A guard's return value controls the router's behavior:</source>
          <target state="translated">Guard的返回值控制着路由器的行为。</target>
        </trans-unit>
        <trans-unit id="52d231725e5228c1fa44d9a29ca224825dcad7cf" translate="yes" xml:space="preserve">
          <source>A guide page might not have its own sample code. It might refer instead to a sample belonging to another page.</source>
          <target state="translated">一个指南页可能没有自己的示例代码。它可能引用属于另一个页面的示例。</target>
        </trans-unit>
        <trans-unit id="373d8baae200062d8f1aba679aa04671175e5913" translate="yes" xml:space="preserve">
          <source>A handler for errors thrown by &lt;code&gt;Router.parseUrl(url)&lt;/code&gt; when &lt;code&gt;url&lt;/code&gt; contains an invalid character. The most common case is a &lt;code&gt;%&lt;/code&gt; sign that's not encoded and is not part of a percent encoded sequence.</source>
          <target state="translated">当 &lt;code&gt;url&lt;/code&gt; 包含无效字符时，由 &lt;code&gt;Router.parseUrl(url)&lt;/code&gt; 引发的错误的处理程序。最常见的情况是未编码的 &lt;code&gt;%&lt;/code&gt; 符号，它也不是百分比编码序列的一部分。</target>
        </trans-unit>
        <trans-unit id="3af5186a3f75b3f8ed4e7d06d1b2de4ace891926" translate="yes" xml:space="preserve">
          <source>A handler for navigation errors in this NgModule.</source>
          <target state="translated">该NgModule的导航错误处理程序。</target>
        </trans-unit>
        <trans-unit id="d6f5b29fab006347fbe778565dcba19bfc15a39b" translate="yes" xml:space="preserve">
          <source>A handler for receiving observable notifications implements the &lt;code&gt;Observer&lt;/code&gt; interface. It is an object that defines callback methods to handle the three types of notifications that an observable can send:</source>
          <target state="translated">用于接收可观察通知的处理程序实现 &lt;code&gt;Observer&lt;/code&gt; 接口。它是一个对象，该对象定义回调方法以处理可观察对象可以发送的三种通知类型：</target>
        </trans-unit>
        <trans-unit id="bbd1ea818b8b8cc66b97d6133471859a6b2bcbfe" translate="yes" xml:space="preserve">
          <source>A handler function that cleans up developer-defined data associated with a view. Called when the &lt;code&gt;destroy()&lt;/code&gt; method is invoked.</source>
          <target state="translated">处理函数，用于清理与视图关联的开发人员定义的数据。在调用 &lt;code&gt;destroy()&lt;/code&gt; 方法时调用。</target>
        </trans-unit>
        <trans-unit id="73b133b2f9b5688dd4cf73515a44784b01f0232f" translate="yes" xml:space="preserve">
          <source>A handler function that cleans up developer-defined data associated with this component. Called when the &lt;code&gt;destroy()&lt;/code&gt; method is invoked.</source>
          <target state="translated">处理函数，用于清理与此组件关联的开发人员定义的数据。在调用 &lt;code&gt;destroy()&lt;/code&gt; 方法时调用。</target>
        </trans-unit>
        <trans-unit id="4d0a754b9f1caec214fcfa4dc250cb8e06612308" translate="yes" xml:space="preserve">
          <source>A handler function to invoke when the event occurs.</source>
          <target state="translated">事件发生时调用的处理函数。</target>
        </trans-unit>
        <trans-unit id="b778327d90fee7ae60c6ad90775c93d550967f48" translate="yes" xml:space="preserve">
          <source>A hashtable of changes represented by &lt;a href=&quot;core/simplechange&quot;&gt;&lt;code&gt;SimpleChange&lt;/code&gt;&lt;/a&gt; objects stored at the declared property name they belong to on a Directive or Component. This is the type passed to the &lt;code&gt;ngOnChanges&lt;/code&gt; hook.</source>
          <target state="translated">由&lt;a href=&quot;core/simplechange&quot;&gt; &lt;code&gt;SimpleChange&lt;/code&gt; &lt;/a&gt;对象表示的更改的哈希表，这些对象存储在指令或组件上的声明属性名称下，这些属性属于它们。这是传递给 &lt;code&gt;ngOnChanges&lt;/code&gt; 挂钩的类型。</target>
        </trans-unit>
        <trans-unit id="d4e8d3892e372c0fecf2681b537eb943a811ea11" translate="yes" xml:space="preserve">
          <source>A hashtable of changes represented by &lt;a href=&quot;simplechange&quot;&gt;&lt;code&gt;SimpleChange&lt;/code&gt;&lt;/a&gt; objects stored at the declared property name they belong to on a Directive or Component. This is the type passed to the &lt;code&gt;ngOnChanges&lt;/code&gt; hook.</source>
          <target state="translated">由&lt;a href=&quot;simplechange&quot;&gt; &lt;code&gt;SimpleChange&lt;/code&gt; &lt;/a&gt;对象表示的更改的哈希表，这些对象存储在指令或组件上的声明属性名称下，这些属性属于它们。这是传递给 &lt;code&gt;ngOnChanges&lt;/code&gt; 挂钩的类型。</target>
        </trans-unit>
        <trans-unit id="23cdcac8cec89bf89402c32764eb9b3e9b275427" translate="yes" xml:space="preserve">
          <source>A helper class that allows an AngularJS component to be used from Angular.</source>
          <target state="translated">一个允许AngularJS组件从Angular使用的助手类。</target>
        </trans-unit>
        <trans-unit id="6c66371275420dbc702a42de7ed21e787a1dc715" translate="yes" xml:space="preserve">
          <source>A helper function for creating an AngularJS module that can bootstrap an Angular module &quot;on-demand&quot; (possibly lazily) when a &lt;a href=&quot;downgradecomponent&quot;&gt;downgraded component&lt;/a&gt; needs to be instantiated.</source>
          <target state="translated">用于创建AngularJS模块的辅助函数，当需要实例化&lt;a href=&quot;downgradecomponent&quot;&gt;降级的组件&lt;/a&gt;时，该函数可以按需（可能是延迟地）引导Angular模块。</target>
        </trans-unit>
        <trans-unit id="abc286a32a528d1cb231b557b350c31b9029cca3" translate="yes" xml:space="preserve">
          <source>A helper function for creating an AngularJS module that can bootstrap an Angular module &quot;on-demand&quot; (possibly lazily) when a &lt;a href=&quot;static/downgradecomponent&quot;&gt;downgraded component&lt;/a&gt; needs to be instantiated.</source>
          <target state="translated">用于创建AngularJS模块的辅助函数，当需要实例化&lt;a href=&quot;static/downgradecomponent&quot;&gt;降级的组件&lt;/a&gt;时，该函数可以按需（可能是延迟地）引导Angular模块。</target>
        </trans-unit>
        <trans-unit id="6aa3cc78fa143b79bb810e7a95525bcaa700a185" translate="yes" xml:space="preserve">
          <source>A helper function that allows an Angular component to be used from AngularJS.</source>
          <target state="translated">一个允许从AngularJS中使用Angular组件的助手函数。</target>
        </trans-unit>
        <trans-unit id="0a3a953b7fe469f6cf7067a78cbb755f0880b3a3" translate="yes" xml:space="preserve">
          <source>A helper function to allow an Angular service to be accessible from AngularJS.</source>
          <target state="translated">一个允许从AngularJS访问Angular服务的辅助函数。</target>
        </trans-unit>
        <trans-unit id="218c171a7af680e691b28ee2d67549dc7cc57f0a" translate="yes" xml:space="preserve">
          <source>A helper function to use when unit testing Angular services that depend upon upgraded AngularJS services.</source>
          <target state="translated">在对依赖升级后的AngularJS服务进行单元测试时使用的辅助函数。</target>
        </trans-unit>
        <trans-unit id="1c438535304fc370a33b0d75b83c50e099239580" translate="yes" xml:space="preserve">
          <source>A helper function to use when unit testing AngularJS services that depend upon downgraded Angular services.</source>
          <target state="translated">在对依赖降级的Angular服务进行单元测试时使用的辅助函数。</target>
        </trans-unit>
        <trans-unit id="4c0681f8b1ca2bf4c01c170aebc0476aee9eab99" translate="yes" xml:space="preserve">
          <source>A helpful or informational point</source>
          <target state="translated">有益的或信息性的观点</target>
        </trans-unit>
        <trans-unit id="5769fbb6a2ba3dee049c9e2a7d142735dad4475e" translate="yes" xml:space="preserve">
          <source>A helpful, informational alert.</source>
          <target state="translated">一个有益的、信息量大的提醒。</target>
        </trans-unit>
        <trans-unit id="dcdb81e86768a1e46d29c2a150ac61709a280f33" translate="yes" xml:space="preserve">
          <source>A hierarchy of injectors at the NgModule and component level can provide different instances of a dependency to their own components and child components.</source>
          <target state="translated">NgModule和组件级别的注入器的层次结构可以为自己的组件和子组件提供不同的依赖实例。</target>
        </trans-unit>
        <trans-unit id="4366034841ba9f2bd29774d71abf28ba67bd01db" translate="yes" xml:space="preserve">
          <source>A instance of &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, which is a fundamental building block for Angular forms. Together with &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;, tracks the value, validation, and status of a form input element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的实例，它是Angular表单的基本构建块。与 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 一起，跟踪表单输入元素的值，验证和状态。</target>
        </trans-unit>
        <trans-unit id="ad9d81adf54afeac2ac2db2a4dc5e5612946defc" translate="yes" xml:space="preserve">
          <source>A key advantage of a synchronous &lt;code&gt;Observable&lt;/code&gt; is that you can often turn asynchronous processes into synchronous tests.</source>
          <target state="translated">同步 &lt;code&gt;Observable&lt;/code&gt; 的主要优势在于，您通常可以将异步过程转换为同步测试。</target>
        </trans-unit>
        <trans-unit id="7ffd5c26435651b0e4c6aae79446e9bccf62a4ab" translate="yes" xml:space="preserve">
          <source>A key value pair. Usually used to represent the key value pairs from a Map or Object.</source>
          <target state="translated">一个键值对。通常用来表示Map或Object中的键值对。</target>
        </trans-unit>
        <trans-unit id="35ebaa116f55fb19c13653c5a4874ae1a1f85ab4" translate="yes" xml:space="preserve">
          <source>A key value store that is transferred from the application on the server side to the application on the client side.</source>
          <target state="translated">一个从服务器端的应用程序转移到客户端的应用程序的键值存储。</target>
        </trans-unit>
        <trans-unit id="9cf4739e4864a807e655ff6fc1193445efde9673" translate="yes" xml:space="preserve">
          <source>A key, usually a &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">密钥，通常是 &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7e7a6a0768ab93586cd67dd4bff584b1428ac83" translate="yes" xml:space="preserve">
          <source>A key-value style pair associating a CSS property with a value.</source>
          <target state="translated">一个键值样式对,将一个CSS属性与一个值关联起来。</target>
        </trans-unit>
        <trans-unit id="07649eafadeb3470a7ca6d2df2dcba49d7307f17" translate="yes" xml:space="preserve">
          <source>A keyframes sequence inserted in the middle that causes the button to appear to pulsate irregularly over the course of that same 1-second timeframe</source>
          <target state="translated">在中间插入一个关键帧序列,使按钮在1秒的时间范围内出现不规则的脉动。</target>
        </trans-unit>
        <trans-unit id="ed5250db05f438b41da2ac7f301688eb307df34e" translate="yes" xml:space="preserve">
          <source>A lazy-loaded module has its own injector which is typically a child of the application root injector.</source>
          <target state="translated">一个懒惰加载的模块有自己的注入器,它通常是应用根注入器的一个子模块。</target>
        </trans-unit>
        <trans-unit id="7ef9f557aece216b8057965c804209b49b3fdec0" translate="yes" xml:space="preserve">
          <source>A lazy-loaded module has its own injector, typically a child of the app root injector. Lazy-loaded services are scoped to the lazy-loaded module's injector. If a lazy-loaded module also provides the &lt;code&gt;UserService&lt;/code&gt;, any component created within that module's context (such as by router navigation) gets the local instance of the service, not the instance in the root injector. Components in external modules continue to receive the instance provided by their injectors.</source>
          <target state="translated">延迟加载的模块具有自己的注入器，通常是应用程序根注入器的子代。延迟加载的服务仅限于延迟加载模块的注入器。如果延迟加载的模块还提供 &lt;code&gt;UserService&lt;/code&gt; ，则在该模块的上下文中创建的任何组件（例如通过路由器导航）都将获取服务的本地实例，而不是根注入器中的实例。外部模块中的组件继续接收其注入器提供的实例。</target>
        </trans-unit>
        <trans-unit id="a7e8a8cb53a9e84a9b672a56f58c0fd34b652f66" translate="yes" xml:space="preserve">
          <source>A lazy-loaded routed feature module should not be imported by any module. Doing so would trigger an eager load, defeating the purpose of lazy loading.That means you won&amp;rsquo;t see them mentioned among the &lt;code&gt;AppModule&lt;/code&gt; imports. An eager loaded routed feature module must be imported by another module so that the compiler learns about its components.</source>
          <target state="translated">延迟加载的路由要素模块不应由任何模块导入。这样做会触发急切的加载，无法达到延迟加载的目的，这意味着您不会在 &lt;code&gt;AppModule&lt;/code&gt; 导入中看到它们。急切加载的路由要素模块必须由另一个模块导入，以便编译器了解其组件。</target>
        </trans-unit>
        <trans-unit id="cf38daa709aad4b9820122674b7d4ef886b08249" translate="yes" xml:space="preserve">
          <source>A library can include &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt; that allow it to integrate with the Angular CLI.</source>
          <target state="translated">库可以包含允许其与Angular CLI集成的&lt;a href=&quot;glossary#schematic&quot;&gt;示意图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d4f03b11868674f6d12d1dbd9a318807b2f605a" translate="yes" xml:space="preserve">
          <source>A library typically includes &lt;em&gt;reusable code&lt;/em&gt; that defines components, services, and other Angular artifacts (pipes, directives, and so on) that you simply import into a project. A library is packaged into an npm package for publishing and sharing, and this package can also include &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt; that provide instructions for generating or transforming code directly in your project, in the same way that the CLI creates a generic skeleton app with &lt;code&gt;ng generate component&lt;/code&gt;. A schematic that is combined with a library can, for example, provide the Angular CLI with the information it needs to generate a particular component defined in that library.</source>
          <target state="translated">库通常包含&lt;em&gt;可重用的代码&lt;/em&gt;，这些&lt;em&gt;代码&lt;/em&gt;定义了您只需导入项目中的组件，服务和其他Angular工件（管道，指令等）。库打包到npm软件包中进行发布和共享，并且该软件包还可以包括&lt;a href=&quot;glossary#schematic&quot;&gt;示意图&lt;/a&gt;，这些示意图提供了直接在项目中生成或转换代码的说明，就像CLI使用 &lt;code&gt;ng generate component&lt;/code&gt; 创建通用骨架应用程序一样。例如，与库组合的原理图可以为Angular CLI提供生成该库中定义的特定组件所需的信息。</target>
        </trans-unit>
        <trans-unit id="596a67fab33e6776bbb8c47b9b4b1a154dc3ae59" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that invokes a custom change-detection function for a directive, in addition to the check performed by the default change-detector.</source>
          <target state="translated">一个生命周期钩子,除了由默认的变更检测器执行的检查外,还为指令调用自定义的变更检测功能。</target>
        </trans-unit>
        <trans-unit id="f5600987ba08ad888ffa7d2d0414b589157e3ce2" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has fully initialized a component's view. Define an &lt;code&gt;&lt;a href=&quot;../forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular已完全初始化组件的视图之后调用的生命周期挂钩。定义 &lt;code&gt;&lt;a href=&quot;../forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; 方法来处理所有其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="74bf55437402dbc91baac4770d54f43c351112cd" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has fully initialized a component's view. Define an &lt;code&gt;&lt;a href=&quot;forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular已完全初始化组件的视图之后调用的生命周期挂钩。定义 &lt;code&gt;&lt;a href=&quot;forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; 方法来处理所有其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="02037844ae11c0ddc626fc9788d0fec5a64d460c" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has fully initialized all content of a directive. Define an &lt;code&gt;&lt;a href=&quot;../router/routerlinkactive#ngAfterContentInit&quot;&gt;ngAfterContentInit()&lt;/a&gt;&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular已完全初始化指令的所有内容之后调用的生命周期挂钩。定义 &lt;code&gt;&lt;a href=&quot;../router/routerlinkactive#ngAfterContentInit&quot;&gt;ngAfterContentInit()&lt;/a&gt;&lt;/code&gt; 方法来处理任何其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="c9cbef27669e26b8935599a3d2233bbbf3336e8b" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has fully initialized all content of a directive. Define an &lt;code&gt;&lt;a href=&quot;router/routerlinkactive#ngAfterContentInit&quot;&gt;ngAfterContentInit()&lt;/a&gt;&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular已完全初始化指令的所有内容之后调用的生命周期挂钩。定义 &lt;code&gt;&lt;a href=&quot;router/routerlinkactive#ngAfterContentInit&quot;&gt;ngAfterContentInit()&lt;/a&gt;&lt;/code&gt; 方法来处理任何其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="a447eef2fad87a38f1f484e3675661d2c2de2258" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has initialized all data-bound properties of a directive. Define an &lt;code&gt;ngOnInit()&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular初始化指令的所有数据绑定属性后调用的生命周期挂钩。定义 &lt;code&gt;ngOnInit()&lt;/code&gt; 方法来处理任何其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="b8e1d5b9cc3d1757bb5eacdaa14e03c4921fb9c9" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after the default change detector has completed checking a component's view for changes.</source>
          <target state="translated">一个生命周期钩子,在默认的变更检测器完成检查组件视图的变更后被调用。</target>
        </trans-unit>
        <trans-unit id="d73ca980a113b1ee2561c99c3783810826f94701" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after the default change detector has completed checking all content of a directive.</source>
          <target state="translated">一个生命周期钩子,在默认的变更检测器完成检查指令的所有内容后被调用。</target>
        </trans-unit>
        <trans-unit id="ce797f9362a30ca61eb81eee1f97135dbd0c504f" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called when a directive, pipe, or service is destroyed. Use for any custom cleanup that needs to occur when the instance is destroyed.</source>
          <target state="translated">当一个指令、管道或服务被销毁时调用的生命周期钩子。用于实例被销毁时需要进行的任何自定义清理。</target>
        </trans-unit>
        <trans-unit id="0261386256f4b1b6dc2c7184bd9e29445ffda542" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called when any data-bound property of a directive changes. Define an &lt;code&gt;ngOnChanges()&lt;/code&gt; method to handle the changes.</source>
          <target state="translated">指令的任何数据绑定属性更改时调用的生命周期挂钩。定义一个 &lt;code&gt;ngOnChanges()&lt;/code&gt; 方法来处理更改。</target>
        </trans-unit>
        <trans-unit id="96881da70e829f0f5ebaad0e2ee7ba44657e85de" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that provides additional developer-defined cleanup functionality for the component.</source>
          <target state="translated">一个生命周期钩子,为组件提供额外的开发者定义的清理功能。</target>
        </trans-unit>
        <trans-unit id="36b167505f89a514144de5bba64e918ad3c3801a" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that provides additional developer-defined cleanup functionality for views.</source>
          <target state="translated">一个生命周期钩子,为视图提供额外的开发者定义的清理功能。</target>
        </trans-unit>
        <trans-unit id="b379a7fb75af4991c5a53bf872be9257ffe74642" translate="yes" xml:space="preserve">
          <source>A lifecycle method called before the directive's instance is destroyed. For internal use only.</source>
          <target state="translated">在指令的实例被销毁之前调用的生命周期方法。仅供内部使用。</target>
        </trans-unit>
        <trans-unit id="ab00640507fd1fc5d13ec5591a77548bad5848e6" translate="yes" xml:space="preserve">
          <source>A lifecycle method called when the directive is initialized. For internal use only.</source>
          <target state="translated">当指令被初始化时调用的一个生命周期方法。仅供内部使用。</target>
        </trans-unit>
        <trans-unit id="e6a4a685929d3df5e89c8ac2c6f5c345f6d37471" translate="yes" xml:space="preserve">
          <source>A lifecycle method called when the directive's inputs are initialized. For internal use only.</source>
          <target state="translated">当指令的输入被初始化时调用的一个生命周期方法。仅供内部使用。</target>
        </trans-unit>
        <trans-unit id="f07bd6459b72dc9a3fa7e047a318fc584cf2c0eb" translate="yes" xml:space="preserve">
          <source>A lifecycle method called when the directive's inputs change. For internal use only.</source>
          <target state="translated">当指令的输入发生变化时调用的一个生命周期方法。仅供内部使用。</target>
        </trans-unit>
        <trans-unit id="d441fd8385d512e636f45c60eeda7ddc27d1cf23" translate="yes" xml:space="preserve">
          <source>A link parameters array holds the following ingredients for router navigation:</source>
          <target state="translated">一个链接参数数组中包含了以下路由器导航的成分。</target>
        </trans-unit>
        <trans-unit id="58c6440df7d73cd9db81817568cadd31dfc44944" translate="yes" xml:space="preserve">
          <source>A linter for Angular apps whose rules conform to the Angular &lt;a href=&quot;styleguide&quot;&gt;style guide&lt;/a&gt;.</source>
          <target state="translated">适用于Angular应用程序的linter，其规则符合Angular &lt;a href=&quot;styleguide&quot;&gt;样式指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="25576a240a63ef9260f06f43a3a241146b219362" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;../core/provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt;s. To use the router in a Worker enabled application you must include these providers when setting up the render thread.</source>
          <target state="translated">&lt;a href=&quot;../core/provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt;的列表。要在启用了Worker的应用程序中使用路由器，必须在设置渲染线程时包括这些提供程序。</target>
        </trans-unit>
        <trans-unit id="dbd88ed75debb2734738dacd6286918848aec59b" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;core/provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt;s. To use the router in a Worker enabled application you must include these providers when setting up the render thread.</source>
          <target state="translated">&lt;a href=&quot;core/provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt;的列表。要在启用了Worker的应用程序中使用路由器，必须在设置渲染线程时包括这些提供程序。</target>
        </trans-unit>
        <trans-unit id="461fc971b126f7f03af8576b0fa4ea318da95075" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;ngmodule-faq#q-declarable&quot;&gt;declarable&lt;/a&gt; classes, (&lt;em&gt;components&lt;/em&gt;, &lt;em&gt;directives&lt;/em&gt;, and &lt;em&gt;pipes&lt;/em&gt;) that &lt;em&gt;belong to this module&lt;/em&gt;.</source>
          <target state="translated">列表&lt;a href=&quot;ngmodule-faq#q-declarable&quot;&gt;申报&lt;/a&gt;类，（&lt;em&gt;部件&lt;/em&gt;，&lt;em&gt;指令&lt;/em&gt;和&lt;em&gt;管道&lt;/em&gt;），其&lt;em&gt;属于本模块&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="437997829946a8147d613a76d425e66a9f9f384d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;token&lt;/code&gt;s to be resolved by the injector.</source>
          <target state="translated">注入器将解析的 &lt;code&gt;token&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="6126755f8fa0690fa2b6af2c29ffba01f3417269" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;token&lt;/code&gt;s to be resolved by the injector. The list of values is then used as arguments to the &lt;code&gt;&lt;a href=&quot;factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">注入器将解析的 &lt;code&gt;token&lt;/code&gt; 列表。然后，将值列表用作 &lt;code&gt;&lt;a href=&quot;factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; 函数的参数。</target>
        </trans-unit>
        <trans-unit id="9d38f61745044a029727c6551e2df969c26ca209" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;token&lt;/code&gt;s to be resolved by the injector. The list of values is then used as arguments to the &lt;code&gt;useClass&lt;/code&gt; constructor.</source>
          <target state="translated">注入器将解析的 &lt;code&gt;token&lt;/code&gt; 列表。然后，将值列表用作 &lt;code&gt;useClass&lt;/code&gt; 构造函数的参数。</target>
        </trans-unit>
        <trans-unit id="daa742971c3327dc4f09d733597037dc4c47dd74" translate="yes" xml:space="preserve">
          <source>A list of URL patterns. URLs that match these patterns are cached according to this data group's policy. Only non-mutating requests (GET and HEAD) are cached.</source>
          <target state="translated">URL模式的列表。匹配这些模式的URL会根据这个数据组的策略进行缓存。只有非变体请求(GET和HEAD)才会被缓存。</target>
        </trans-unit>
        <trans-unit id="04d917307865bab1f1de2116c773bcb26a629379" translate="yes" xml:space="preserve">
          <source>A list of common rules for frontend development is documented in the README at &lt;a href=&quot;https://github.com/bazelbuild/rules_nodejs/&quot;&gt;https://github.com/bazelbuild/rules_nodejs/&lt;/a&gt;.</source>
          <target state="translated">README中的&lt;a href=&quot;https://github.com/bazelbuild/rules_nodejs/&quot;&gt;https://github.com/bazelbuild/rules_nodejs/中&lt;/a&gt;记录了前端开发的常见规则列表。</target>
        </trans-unit>
        <trans-unit id="19ddc56400717fc21df5b63436fc1e8e5b32cd4d" translate="yes" xml:space="preserve">
          <source>A list of components that are automatically bootstrapped.</source>
          <target state="translated">自动引导的组件列表。</target>
        </trans-unit>
        <trans-unit id="171d42258c74d022d702af37e54b0e6f7307feba" translate="yes" xml:space="preserve">
          <source>A list of components that can be dynamically loaded into the view.</source>
          <target state="translated">可动态加载到视图中的组件列表。</target>
        </trans-unit>
        <trans-unit id="7675d0663f37d145a8dac0c39cde405a75fbfa15" translate="yes" xml:space="preserve">
          <source>A list of control names that designates how to move from the current control to the control that should be queried for errors.</source>
          <target state="translated">控件名称列表,指定如何从当前控件移动到应查询错误的控件。</target>
        </trans-unit>
        <trans-unit id="037b00399bc82d29e1eb7b74fa9c1904a97de8a9" translate="yes" xml:space="preserve">
          <source>A list of declarations&amp;mdash;&lt;em&gt;component&lt;/em&gt;, &lt;em&gt;directive&lt;/em&gt;, and &lt;em&gt;pipe&lt;/em&gt; classes&amp;mdash;that an importing module can use.</source>
          <target state="translated">导入模块可以使用的声明列表（&lt;em&gt;component&lt;/em&gt;，&lt;em&gt;伪指令&lt;/em&gt;和&lt;em&gt;管道&lt;/em&gt;类）。</target>
        </trans-unit>
        <trans-unit id="040d4431be42e331375255c125a4498782b8e650" translate="yes" xml:space="preserve">
          <source>A list of dependency-injection providers.</source>
          <target state="translated">依赖注入提供者的列表。</target>
        </trans-unit>
        <trans-unit id="dba7bfe8eac022733a1026f8be32e943c473cfa2" translate="yes" xml:space="preserve">
          <source>A list of modules which should be folded into this module. Folded means it is as if all the imported NgModule's exported properties were declared here.</source>
          <target state="translated">应该被折叠到这个模块中的模块列表。Folded的意思是,就像所有导入的NgModule的导出属性都在这里声明一样。</target>
        </trans-unit>
        <trans-unit id="75001e195c1445f429399b1de5c1f73f540ae88c" translate="yes" xml:space="preserve">
          <source>A little more setup triggers the initial data binding and gets references to the navigation links:</source>
          <target state="translated">再做一点设置就会触发初始数据绑定,并获得对导航链接的引用。</target>
        </trans-unit>
        <trans-unit id="a1b8ef8f70baee99448943fc05106db9e9b9dd37" translate="yes" xml:space="preserve">
          <source>A loader function that can load the routed module asynchronously.</source>
          <target state="translated">一个可以异步加载路由模块的加载器函数。</target>
        </trans-unit>
        <trans-unit id="955b1d9d2579edfd071f8ec5104d74a47b0f744b" translate="yes" xml:space="preserve">
          <source>A locale code for the locale format rules to use.</source>
          <target state="translated">一个区域代码,用于区域格式规则的使用。</target>
        </trans-unit>
        <trans-unit id="6a302a7e5064c906a79afc49ad5e1e7cc1a4799f" translate="yes" xml:space="preserve">
          <source>A locale code for the locale format rules to use. When not supplied, uses the value of &lt;code&gt;&lt;a href=&quot;../core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt;, which is &lt;code&gt;en-US&lt;/code&gt; by default. See &lt;a href=&quot;../../guide/i18n#setting-up-the-locale-of-your-app&quot;&gt;Setting your app locale&lt;/a&gt;.</source>
          <target state="translated">用于要使用的语言环境格式规则的语言环境代码。如果未提供，则使用 &lt;code&gt;&lt;a href=&quot;../core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; 的值，默认情况下为 &lt;code&gt;en-US&lt;/code&gt; 。请参阅&lt;a href=&quot;../../guide/i18n#setting-up-the-locale-of-your-app&quot;&gt;设置应用程序区域设置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6b80afc948d39c1beaa5b663a213d0d655e25c0" translate="yes" xml:space="preserve">
          <source>A locale code, such as &lt;code&gt;fr-FR&lt;/code&gt;.</source>
          <target state="translated">语言环境代码，例如 &lt;code&gt;fr-FR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55f13cbcad722a8c24df8b8cb4a9cf2ae466e5a8" translate="yes" xml:space="preserve">
          <source>A locale is an identifier (id) that refers to a set of user preferences that tend to be shared within a region of the world, such as country. This document refers to a locale identifier as a &quot;locale&quot; or &quot;locale id&quot;.</source>
          <target state="translated">本地化是一个标识符(id),它指的是世界上某一地区(如国家)倾向于共享的一组用户偏好。本文件将一个地区标识符称为 &quot;地区 &quot;或 &quot;地区标识符&quot;。</target>
        </trans-unit>
        <trans-unit id="8ead34f42f629cf596c56bee9a9dd423fd7244a6" translate="yes" xml:space="preserve">
          <source>A lookup token associated with a dependency &lt;a href=&quot;glossary#provider&quot;&gt;provider&lt;/a&gt;, for use with the &lt;a href=&quot;glossary#di&quot;&gt;dependency injection&lt;/a&gt; system.</source>
          <target state="translated">与依赖项&lt;a href=&quot;glossary#provider&quot;&gt;提供程序&lt;/a&gt;关联的查找令牌，用于与&lt;a href=&quot;glossary#di&quot;&gt;依赖项注入&lt;/a&gt;系统一起使用。</target>
        </trans-unit>
        <trans-unit id="cae2a9afdd89956ff08fa75198655ba1a46444dc" translate="yes" xml:space="preserve">
          <source>A major release every 6 months</source>
          <target state="translated">每6个月发布一次重要消息</target>
        </trans-unit>
        <trans-unit id="06d3323afdb781bed9079cfcfdee73be399d2d9a" translate="yes" xml:space="preserve">
          <source>A map of DI tokens used to look up data resolvers. See &lt;code&gt;&lt;a href=&quot;resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">DI令牌的映射，用于查找数据解析器。请参阅 &lt;code&gt;&lt;a href=&quot;resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c31bf3081c3f1b6360722ce5cdf2ba3f5dd1a977" translate="yes" xml:space="preserve">
          <source>A map that provides access to the required and optional parameters specific to a route. The map supports retrieving a single value with &lt;code&gt;get()&lt;/code&gt; or multiple values with &lt;code&gt;getAll()&lt;/code&gt;.</source>
          <target state="translated">可以访问特定于路线的必需和可选参数的地图。该映射支持使用 &lt;code&gt;get()&lt;/code&gt; 检索单个值或使用 &lt;code&gt;getAll()&lt;/code&gt; 检索多个值。</target>
        </trans-unit>
        <trans-unit id="e95f51729664a5488e099047c9717e5b096d40fe" translate="yes" xml:space="preserve">
          <source>A maximum total number of results to return from the query. If negative, results are limited from the end of the query list towards the beginning. By default, results are not limited.</source>
          <target state="translated">从查询中返回的最大结果总数。如果是负数,结果将从查询列表的末尾向开头限制。默认情况下,结果不受限制。</target>
        </trans-unit>
        <trans-unit id="f0c63958f79d54f2fc16dbcbfe14c83a9f071add" translate="yes" xml:space="preserve">
          <source>A metadata override object can either add-and-remove elements in metadata properties or completely reset those properties. This example resets the component's &lt;code&gt;providers&lt;/code&gt; metadata.</source>
          <target state="translated">元数据覆盖对象可以在元数据属性中添加和删除元素，也可以完全重置那些属性。本示例重置组件的 &lt;code&gt;providers&lt;/code&gt; 元数据。</target>
        </trans-unit>
        <trans-unit id="69f0f2d5a2aa3accf83abdff396c8bd191b0d509" translate="yes" xml:space="preserve">
          <source>A microsyntax is translated to the normal binding syntax as follows:</source>
          <target state="translated">微词法转化为正常的绑定语法如下。</target>
        </trans-unit>
        <trans-unit id="7130a4e571cb15db8a5b2e26dc8e7e32f1ac10b6" translate="yes" xml:space="preserve">
          <source>A mock implementation of &lt;a href=&quot;../locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; that allows tests to fire simulated location events.</source>
          <target state="translated">&lt;a href=&quot;../locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; &lt;/a&gt;的模拟实现，允许测试激发模拟的位置事件。</target>
        </trans-unit>
        <trans-unit id="95d1322a42a6673477094ecc0b65d1e99ae45df8" translate="yes" xml:space="preserve">
          <source>A mock implementation of &lt;a href=&quot;locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; that allows tests to fire simulated location events.</source>
          <target state="translated">&lt;a href=&quot;locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; &lt;/a&gt;的模拟实现，允许测试激发模拟的位置事件。</target>
        </trans-unit>
        <trans-unit id="7d0a0962e5c5198a576fa37cb7c736b87d6d1d71" translate="yes" xml:space="preserve">
          <source>A mock requests that was received and is ready to be answered.</source>
          <target state="translated">收到的模拟请求,随时可以答复。</target>
        </trans-unit>
        <trans-unit id="f337bc6018903ffa46e9a382b840059a040e5962" translate="yes" xml:space="preserve">
          <source>A model can be as simple as a &quot;property bag&quot; that holds facts about a thing of application importance. That describes well the &lt;code&gt;Hero&lt;/code&gt; class with its three required fields (&lt;code&gt;id&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;power&lt;/code&gt;) and one optional field (&lt;code&gt;alterEgo&lt;/code&gt;).</source>
          <target state="translated">模型可以像保存有关应用程序重要性的事实的&amp;ldquo;属性袋&amp;rdquo;一样简单。这很好地描述了 &lt;code&gt;Hero&lt;/code&gt; 类，其中包含三个必填字段（ &lt;code&gt;id&lt;/code&gt; ， &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;power&lt;/code&gt; ）和一个可选字段（ &lt;code&gt;alterEgo&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ad0764647ed46ed5061fb6310ba8f8b5049da7f6" translate="yes" xml:space="preserve">
          <source>A module can list another module among its &lt;code&gt;exports&lt;/code&gt;, in which case all of that module's public components, directives, and pipes are exported.</source>
          <target state="translated">一个模块可以在其 &lt;code&gt;exports&lt;/code&gt; 列出另一个模块，在这种情况下，该模块的所有公共组件，指令和管道都将导出。</target>
        </trans-unit>
        <trans-unit id="5f1c5c1da122f4fa01eb3c1494bcf50d1de1c0fe" translate="yes" xml:space="preserve">
          <source>A module that contains the deprecated i18n pipes.</source>
          <target state="translated">一个包含废弃的i18n管道的模块。</target>
        </trans-unit>
        <trans-unit id="32c9bd50d59c8005b8e4f899c9f2be6b8662aebc" translate="yes" xml:space="preserve">
          <source>A more complete example with additional options:</source>
          <target state="translated">一个更完整的例子,还有更多的选项。</target>
        </trans-unit>
        <trans-unit id="8d6dc22c64e24056f4ca8f4235696f04db5187ce" translate="yes" xml:space="preserve">
          <source>A multi-project workspace is suitable for an enterprise that uses a single repository and global configuration for all Angular projects (the &quot;monorepo&quot; model). A multi-project workspace also supports library development.</source>
          <target state="translated">多项目工作空间适用于使用单一仓库和全局配置的企业,适用于所有Angular项目(&quot;monorepo &quot;模式)。多项目工作空间还支持库的开发。</target>
        </trans-unit>
        <trans-unit id="578c0bb115fcfcf57aae92bdf19077e287b885a7" translate="yes" xml:space="preserve">
          <source>A multi-provider token that represents the array of registered &lt;code&gt;&lt;a href=&quot;http/httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; objects.</source>
          <target state="translated">一个多供应商令牌，代表已注册 &lt;code&gt;&lt;a href=&quot;http/httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; 对象的数组。</target>
        </trans-unit>
        <trans-unit id="3429f86b90f9abf229de77143f5159ec794aea18" translate="yes" xml:space="preserve">
          <source>A multi-provider token that represents the array of registered &lt;code&gt;&lt;a href=&quot;httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; objects.</source>
          <target state="translated">一个多供应商令牌，代表已注册 &lt;code&gt;&lt;a href=&quot;httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; 对象的数组。</target>
        </trans-unit>
        <trans-unit id="7906e423263f41a5db0c9d24e8bd036737a8d5a4" translate="yes" xml:space="preserve">
          <source>A multicasting observable that emits an event every time the validation &lt;code&gt;status&lt;/code&gt; of the control recalculates.</source>
          <target state="translated">可观察到的多播，每次重新计算控件的验证 &lt;code&gt;status&lt;/code&gt; ，都会发出一个事件。</target>
        </trans-unit>
        <trans-unit id="b781b78f56add6ca4e7aa83cd854c5af96b640a9" translate="yes" xml:space="preserve">
          <source>A multicasting observable that emits an event every time the value of the control changes, in the UI or programmatically.</source>
          <target state="translated">一个多播观察器,每当控件的值发生变化时都会发出一个事件,无论是在UI中还是在程序中。</target>
        </trans-unit>
        <trans-unit id="c5be72e441e1cbf5309a798f7996e0e22dfeca5c" translate="yes" xml:space="preserve">
          <source>A name or path that uniquely identifies this NgModule in &lt;code&gt;&lt;a href=&quot;getmodulefactory&quot;&gt;getModuleFactory&lt;/a&gt;&lt;/code&gt;. If left &lt;code&gt;undefined&lt;/code&gt;, the NgModule is not registered with &lt;code&gt;&lt;a href=&quot;getmodulefactory&quot;&gt;getModuleFactory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;getmodulefactory&quot;&gt;getModuleFactory&lt;/a&gt;&lt;/code&gt; 中唯一标识此NgModule的名称或路径。如果 &lt;code&gt;undefined&lt;/code&gt; ，则NgModule不会在 &lt;code&gt;&lt;a href=&quot;getmodulefactory&quot;&gt;getModuleFactory&lt;/a&gt;&lt;/code&gt; 中注册。</target>
        </trans-unit>
        <trans-unit id="b0c4e5ba7f7e92e47ab468585168733f19b2c1d2" translate="yes" xml:space="preserve">
          <source>A named build target, as specified in the &quot;configurations&quot; section of angular.json. Each named target is accompanied by a configuration of option defaults for that target. Setting this explicitly overrides the &quot;--prod&quot; flag</source>
          <target state="translated">一个命名的构建目标,在angular.json的 &quot;configations &quot;部分指定。每个命名的目标都伴随着该目标的默认选项配置。明确地设置这个选项会覆盖&quot;--prod &quot;标志。</target>
        </trans-unit>
        <trans-unit id="35e09e8f6a0282a4b54c82b2def01ca54b74004d" translate="yes" xml:space="preserve">
          <source>A named builder configuration, defined in the &quot;configurations&quot; section of angular.json. The builder uses the named configuration to run the given target.</source>
          <target state="translated">一个在angular.json的 &quot;configations &quot;部分定义的命名的构建器配置。构建器使用命名的配置来运行指定的目标。</target>
        </trans-unit>
        <trans-unit id="b239fcc9e5b91abd9680f6c47f5d1819707bebf3" translate="yes" xml:space="preserve">
          <source>A navigation node has the following properties:</source>
          <target state="translated">导航节点具有以下属性。</target>
        </trans-unit>
        <trans-unit id="52a38a1d63f6d03db1e08268e77081ddcedf5a17" translate="yes" xml:space="preserve">
          <source>A nested expression is similar to the previous examples. As in the previous example, there are two translation units. The first one contains the text outside of the nested expression:</source>
          <target state="translated">嵌套表达式与前面的例子类似。与前一个例子一样,有两个翻译单元。第一个翻译单元包含嵌套表达式之外的文本。</target>
        </trans-unit>
        <trans-unit id="4f9bd18390c8ea037a93c12b58381b661d326629" translate="yes" xml:space="preserve">
          <source>A new injector has no providers. Angular initializes the injectors it creates with a set of preferred providers. You have to configure providers for your own app-specific dependencies.</source>
          <target state="translated">一个新的注入器没有提供者。Angular用一组首选的提供者来初始化它创建的注入器。你必须为你自己的应用程序特定的依赖配置提供者。</target>
        </trans-unit>
        <trans-unit id="9920b70991fc5f7bbd0d91bb6a57f0531af7194a" translate="yes" xml:space="preserve">
          <source>A new workspace, with a root folder named &lt;code&gt;angular-tour-of-heroes&lt;/code&gt;.</source>
          <target state="translated">一个新的工作空间，带有一个名为 &lt;code&gt;angular-tour-of-heroes&lt;/code&gt; 的根文件夹。</target>
        </trans-unit>
        <trans-unit id="b7367aaef7bddc8b8c8dc6e00b934abdd2f64d3b" translate="yes" xml:space="preserve">
          <source>A newly generated app contains the source files for a root module, with a root component and template. Each app has a &lt;code&gt;src&lt;/code&gt; folder that contains the logic, data, and assets.</source>
          <target state="translated">新生成的应用程序包含根模块的源文件，以及根组件和模板。每个应用程序都有一个 &lt;code&gt;src&lt;/code&gt; 文件夹，其中包含逻辑，数据和资产。</target>
        </trans-unit>
        <trans-unit id="d846c1f199b2800f149643f1562a8855aa905f45" translate="yes" xml:space="preserve">
          <source>A nice aspect of this approach is that the component gets clean data values from the view. It no longer requires knowledge of the &lt;code&gt;$event&lt;/code&gt; and its structure.</source>
          <target state="translated">这种方法的一个不错的方面是组件从视图中获取干净的数据值。它不再需要 &lt;code&gt;$event&lt;/code&gt; 及其结构的知识。</target>
        </trans-unit>
        <trans-unit id="f7bea64455863cb7a47256fbe5d769606742d500" translate="yes" xml:space="preserve">
          <source>A non-atomic deployment could result in the Angular service worker having visibility of partially updated content.</source>
          <target state="translated">非原子部署可能会导致Angular服务工作者拥有部分更新内容的可见性。</target>
        </trans-unit>
        <trans-unit id="5038f56560ea874f8af8e1f15e2b79f948a7daf0" translate="yes" xml:space="preserve">
          <source>A normal Angular application executes in the &lt;em&gt;browser&lt;/em&gt;, rendering pages in the DOM in response to user actions. Angular Universal executes on the &lt;em&gt;server&lt;/em&gt;, generating &lt;em&gt;static&lt;/em&gt; application pages that later get bootstrapped on the client. This means that the application generally renders more quickly, giving users a chance to view the application layout before it becomes fully interactive.</source>
          <target state="translated">普通的Angular应用程序在&lt;em&gt;浏览器中&lt;/em&gt;执行，以响应用户的操作在DOM中呈现页面。Angular Universal在&lt;em&gt;服务器&lt;/em&gt;上执行，生成&lt;em&gt;静态&lt;/em&gt;应用程序页面，这些页面随后在客户端上启动。这意味着应用程序通常可以更快地渲染，从而使用户有机会在应用程序变得完全交互式之前查看其布局。</target>
        </trans-unit>
        <trans-unit id="6f4fb46f2d63806c4ee58223f3276c1ec49fc7f1" translate="yes" xml:space="preserve">
          <source>A null player that must be imported to allow disabling of animations.</source>
          <target state="translated">一个必须导入的空播放器,以允许禁用动画。</target>
        </trans-unit>
        <trans-unit id="89554a3efabf9fb390af7746887f03e36dff835a" translate="yes" xml:space="preserve">
          <source>A number of Angular CLI commands run a complex process on your code, such as linting, building, or testing. The commands use an internal tool called Architect to run &lt;em&gt;CLI builders&lt;/em&gt;, which apply another tool to accomplish the desired task.</source>
          <target state="translated">许多Angular CLI命令在您的代码上运行一个复杂的过程，例如整理，构建或测试。这些命令使用一个称为Architect的内部工具来运行&lt;em&gt;CLI构建器&lt;/em&gt;，该&lt;em&gt;构建器&lt;/em&gt;将应用另一个工具来完成所需的任务。</target>
        </trans-unit>
        <trans-unit id="49d58886ff799d00cb5c13d4a1bb03aa1f2d809d" translate="yes" xml:space="preserve">
          <source>A object of key/value pairs for the set of changed inputs.</source>
          <target state="translated">改变的输入集的键/值对对象。</target>
        </trans-unit>
        <trans-unit id="4750c9e78af3bfad341001fe2ba5681170c6a43c" translate="yes" xml:space="preserve">
          <source>A page's platform is initialized implicitly when a platform is created via a platform factory (e.g. &lt;a href=&quot;../platform-browser/platformbrowser&quot;&gt;&lt;code&gt;platformBrowser&lt;/code&gt;&lt;/a&gt;), or explicitly by calling the &lt;a href=&quot;createplatform&quot;&gt;&lt;code&gt;createPlatform&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">通过平台工厂（例如&lt;a href=&quot;../platform-browser/platformbrowser&quot;&gt; &lt;code&gt;platformBrowser&lt;/code&gt; &lt;/a&gt;）创建平台时，将隐式初始化页面的平台，或者通过调用&lt;a href=&quot;createplatform&quot;&gt; &lt;code&gt;createPlatform&lt;/code&gt; &lt;/a&gt;函数来显式初始化页面的平台。</target>
        </trans-unit>
        <trans-unit id="651ec72899d5c2c6d5d6ec570ddbc877591ea92b" translate="yes" xml:space="preserve">
          <source>A parent animation can use the &lt;a href=&quot;../api/animations/query&quot;&gt;&lt;code&gt;query()&lt;/code&gt;&lt;/a&gt; function to collect inner elements located in disabled areas of the HTML template. Those elements can still animate.</source>
          <target state="translated">父动画可以使用&lt;a href=&quot;../api/animations/query&quot;&gt; &lt;code&gt;query()&lt;/code&gt; &lt;/a&gt;函数来收集位于HTML模板的禁用区域中的内部元素。这些元素仍然可以设置动画。</target>
        </trans-unit>
        <trans-unit id="1bf56c14e3173595a144a7896d73be753549c9f6" translate="yes" xml:space="preserve">
          <source>A parent component and its children share a service whose interface enables bi-directional communication &lt;em&gt;within the family&lt;/em&gt;.</source>
          <target state="translated">父组件及其子组件共享一个服务，该服务的接口支持&lt;em&gt;该家庭内部的&lt;/em&gt;双向通信。</target>
        </trans-unit>
        <trans-unit id="e39a968c28d7edf3e3a84ccc968736ab545b1b85" translate="yes" xml:space="preserve">
          <source>A parent component cannot use data binding to read child properties or invoke child methods. You can do both by creating a template reference variable for the child element and then reference that variable &lt;em&gt;within the parent template&lt;/em&gt; as seen in the following example.</source>
          <target state="translated">父组件不能使用数据绑定来读取子属性或调用子方法。您可以通过为子元素创建模板引用变量，然后&lt;em&gt;在父模板中&lt;/em&gt;引用该变量来完成这两个操作，如以下示例所示。</target>
        </trans-unit>
        <trans-unit id="466ac96618e709a5938e7d500890ad9390c558cc" translate="yes" xml:space="preserve">
          <source>A partial HTTP response which only includes the status and header data, but no response body.</source>
          <target state="translated">部分HTTP响应,只包括状态和头数据,但没有响应体。</target>
        </trans-unit>
        <trans-unit id="8d17248c21e747b7c3ba8050b3294178aab908f1" translate="yes" xml:space="preserve">
          <source>A patch release almost every week</source>
          <target state="translated">几乎每周都会发布一个补丁</target>
        </trans-unit>
        <trans-unit id="58efc28f87e76a25d4064ff09cf311712d722706" translate="yes" xml:space="preserve">
          <source>A percentage of the total animate time at which the style is to be applied.</source>
          <target state="translated">应用该样式的总动画时间的百分比。</target>
        </trans-unit>
        <trans-unit id="b708ec4a390f4e8a4776d5b2040d86b353d2a768" translate="yes" xml:space="preserve">
          <source>A period-delimited list of control names in one string, e.g. &lt;code&gt;'address.street'&lt;/code&gt;</source>
          <target state="translated">一个字符串中的句点分隔的控件名称列表，例如 &lt;code&gt;'address.street'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18518b3ff9da4f8e4217369e6b3f79391cbd0b85" translate="yes" xml:space="preserve">
          <source>A pipe can accept any number of optional parameters to fine-tune its output. To add parameters to a pipe, follow the pipe name with a colon ( : ) and then the parameter value (such as &lt;code&gt;currency:'EUR'&lt;/code&gt;). If the pipe accepts multiple parameters, separate the values with colons (such as &lt;code&gt;slice:1:5&lt;/code&gt;)</source>
          <target state="translated">管道可以接受任意数量的可选参数来微调其输出。要将参数添加到管道，请在管道名称后加上冒号（：），然后输入参数值（例如 &lt;code&gt;currency:'EUR'&lt;/code&gt; ）。如果管道接受多个参数，则用冒号分隔值（例如 &lt;code&gt;slice:1:5&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bedbc779498bd591c9a3dec452e89700422b56ad" translate="yes" xml:space="preserve">
          <source>A pipe class has one method, &lt;code&gt;transform&lt;/code&gt;, that manipulates the input value into a transformed output value. The &lt;code&gt;transform&lt;/code&gt; implementation rarely interacts with the DOM. Most pipes have no dependence on Angular other than the &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; metadata and an interface.</source>
          <target state="translated">管道类具有一个方法 &lt;code&gt;transform&lt;/code&gt; ，该方法将输入值操纵为转换后的输出值。该 &lt;code&gt;transform&lt;/code&gt; 实现很少与DOM交互。除了 &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; 元数据和接口外，大多数管道都不依赖Angular 。</target>
        </trans-unit>
        <trans-unit id="e4ea89ce13888d2b06e69e1b0a34b1371b619c98" translate="yes" xml:space="preserve">
          <source>A pipe class must implement the &lt;code&gt;&lt;a href=&quot;pipetransform&quot;&gt;PipeTransform&lt;/a&gt;&lt;/code&gt; interface. For example, if the name is &quot;myPipe&quot;, use a template binding expression such as the following:</source>
          <target state="translated">管道类必须实现 &lt;code&gt;&lt;a href=&quot;pipetransform&quot;&gt;PipeTransform&lt;/a&gt;&lt;/code&gt; 接口。例如，如果名称为&amp;ldquo; myPipe&amp;rdquo;，则使用模板绑定表达式，例如：</target>
        </trans-unit>
        <trans-unit id="3904967e02839e6509820f8ec95a0def7d2d6acd" translate="yes" xml:space="preserve">
          <source>A pipe is a class decorated with pipe metadata.</source>
          <target state="translated">管道是一个用管道元数据装饰的类。</target>
        </trans-unit>
        <trans-unit id="40549d115c085009897e81004613ce5f7153eebd" translate="yes" xml:space="preserve">
          <source>A pipe must belong to an NgModule in order for it to be available to a template. To make it a member of an NgModule, list it in the &lt;code&gt;declarations&lt;/code&gt; field of the &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata.</source>
          <target state="translated">管道必须属于NgModule，才能用于模板。要使其成为NgModule的成员，请在 &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 元数据的 &lt;code&gt;declarations&lt;/code&gt; 字段中将其列出。</target>
        </trans-unit>
        <trans-unit id="0f6b8b153194c20c0187ec690e01210761a65ec6" translate="yes" xml:space="preserve">
          <source>A pipe takes in data as input and transforms it to a desired output. In this page, you'll use pipes to transform a component's birthday property into a human-friendly date.</source>
          <target state="translated">管道将数据作为输入,并将其转换为所需的输出。在本页面中,您将使用管道将一个组件的生日属性转换为人类友好的日期。</target>
        </trans-unit>
        <trans-unit id="e35f19f9638c9d81846078d6ba2a979a2c496046" translate="yes" xml:space="preserve">
          <source>A policy for when to run guards and resolvers on a route.</source>
          <target state="translated">关于何时在路由上运行防护和解析器的策略。</target>
        </trans-unit>
        <trans-unit id="6322e77ad4a4989fe85f21f6c16add46ed1d428c" translate="yes" xml:space="preserve">
          <source>A position in screen coordinates (a tuple with x and y values) or a function that returns the top offset position.</source>
          <target state="translated">屏幕坐标中的一个位置(一个带有x和y值的元组)或一个返回顶部偏移位置的函数。</target>
        </trans-unit>
        <trans-unit id="83b235867fe2026bbac0ac32946c8dbf281bfb3f" translate="yes" xml:space="preserve">
          <source>A position in screen coordinates (a tuple with x and y values).</source>
          <target state="translated">屏幕坐标中的一个位置(一个带有x和y值的元组)。</target>
        </trans-unit>
        <trans-unit id="41d8149577449727c17e0704c95f074c91db70d0" translate="yes" xml:space="preserve">
          <source>A potential use for animation callbacks could be to cover for a slow API call, such as a database lookup. For example, you could set up the &lt;strong&gt;InProgress&lt;/strong&gt; button to have its own looping animation where it pulsates or does some other visual motion while the backend system operation finishes.</source>
          <target state="translated">动画回调的潜在用途可能是覆盖缓慢的API调用，例如数据库查找。例如，您可以将&lt;strong&gt;InProgress&lt;/strong&gt;按钮设置为具有自己的循环动画，在后端系统操作完成时，该按钮在其中脉动或进行其他视觉运动。</target>
        </trans-unit>
        <trans-unit id="6bfb9afe8113d548fbbb315af6723ac817365c83" translate="yes" xml:space="preserve">
          <source>A predefined &lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; for the base href to be used with the &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;. The base href is the URL prefix that should be preserved when generating and recognizing URLs.</source>
          <target state="translated">预定义的&lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;，用于与 &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; 一起使用的基本href 。基本href是在生成和识别URL时应保留的URL前缀。</target>
        </trans-unit>
        <trans-unit id="9b55764d3eb54191c263b0e27dc2c991eb21fbc9" translate="yes" xml:space="preserve">
          <source>A predefined &lt;a href=&quot;../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; for the base href to be used with the &lt;code&gt;&lt;a href=&quot;common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;. The base href is the URL prefix that should be preserved when generating and recognizing URLs.</source>
          <target state="translated">预定义的&lt;a href=&quot;../guide/glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;，用于与 &lt;code&gt;&lt;a href=&quot;common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; 一起使用的基本href 。基本href是在生成和识别URL时应保留的URL前缀。</target>
        </trans-unit>
        <trans-unit id="557fd2b59c5e0790707cb4c256a2988eead2fed1" translate="yes" xml:space="preserve">
          <source>A predefined set of allowed values.</source>
          <target state="translated">一组预定义的允许值。</target>
        </trans-unit>
        <trans-unit id="ddc74c636d6ca337e8c1942b0e65b5175ae71201" translate="yes" xml:space="preserve">
          <source>A prefix to apply to generated selectors.</source>
          <target state="translated">应用于生成的选择器的前缀。</target>
        </trans-unit>
        <trans-unit id="f85bc3007675f205f13a65c0814c7779fddfde0e" translate="yes" xml:space="preserve">
          <source>A process that allows apps to display data values to a user and respond to user actions (such as clicks, touches, and keystrokes).</source>
          <target state="translated">一个允许应用程序向用户显示数据值并响应用户操作(如点击、触摸和按键)的过程。</target>
        </trans-unit>
        <trans-unit id="826b728e8dd71b33ef6978c05ec91c2dd062dc41" translate="yes" xml:space="preserve">
          <source>A process that speeds up application load time by splitting the application into multiple bundles and loading them on demand. For example, dependencies can be lazy loaded as needed&amp;mdash;as opposed to &lt;a href=&quot;glossary#eager-loading&quot;&gt;eager-loaded&lt;/a&gt; modules that are required by the root module and are thus loaded on launch.</source>
          <target state="translated">通过将应用程序分成多个包并按需加载它们来加快应用程序加载时间的过程。例如，可以根据需要延迟加载依赖项，这与根模块所要求的，因此在启动时加载的预先&lt;a href=&quot;glossary#eager-loading&quot;&gt;加载的&lt;/a&gt;模块相反。</target>
        </trans-unit>
        <trans-unit id="cf702bb551fcbd63146fa58c0443c0e81f431dfb" translate="yes" xml:space="preserve">
          <source>A producer of multiple values, which it pushes to &lt;a href=&quot;glossary#subscriber&quot;&gt;subscribers&lt;/a&gt;. Used for asynchronous event handling throughout Angular. You execute an observable by subscribing to it with its &lt;code&gt;subscribe()&lt;/code&gt; method, passing callbacks for notifications of new values, errors, or completion.</source>
          <target state="translated">具有多个值的生产者，将其推送给&lt;a href=&quot;glossary#subscriber&quot;&gt;订户&lt;/a&gt;。用于整个Angular中的异步事件处理。您可以通过以下方式执行可观察项：使用其 &lt;code&gt;subscribe()&lt;/code&gt; 方法订阅该可观察项，并传递回调以通知新值，错误或完成。</target>
        </trans-unit>
        <trans-unit id="389a0d3db57aebec32082a719d81b168d371de7f" translate="yes" xml:space="preserve">
          <source>A programming language based on JavaScript that is notable for its optional typing system. TypeScript provides compile-time type checking and strong tooling support (such as code completion, refactoring, inline documentation, and intelligent search). Many code editors and IDEs support TypeScript either natively or with plug-ins.</source>
          <target state="translated">一种基于JavaScript的编程语言,以其可选的类型系统而闻名。TypeScript提供了编译时类型检查和强大的工具支持(如代码完成、重构、内联文档和智能搜索)。许多代码编辑器和IDEs都支持TypeScript,无论是原生的还是带有插件的。</target>
        </trans-unit>
        <trans-unit id="b1c6caa6538c99e13bd629cbb98b70f6d54abb0c" translate="yes" xml:space="preserve">
          <source>A project's &lt;code&gt;src/environments/&lt;/code&gt; folder contains the base configuration file, &lt;code&gt;environment.ts&lt;/code&gt;, which provides a default environment. You can add override defaults for additional environments, such as production and staging, in target-specific configuration files.</source>
          <target state="translated">项目的 &lt;code&gt;src/environments/&lt;/code&gt; 文件夹包含基本配置文件 &lt;code&gt;environment.ts&lt;/code&gt; ，它提供了默认环境。您可以在特定于目标的配置文件中为其他环境（例如生产和暂存）添加替代默认值。</target>
        </trans-unit>
        <trans-unit id="7d819f9cac8ab3585eb715c80934a771ae6e032e" translate="yes" xml:space="preserve">
          <source>A project, as generated by the &lt;a href=&quot;cli/new&quot;&gt;&lt;code&gt;ng new&lt;/code&gt;&lt;/a&gt;, contains the set of source files, resources, and configuration files that you need to develop and test the application using the CLI. Projects can also be created with the &lt;code&gt;ng generate application&lt;/code&gt; and &lt;code&gt;ng generate library&lt;/code&gt; commands.</source>
          <target state="translated">由&lt;a href=&quot;cli/new&quot;&gt; &lt;code&gt;ng new&lt;/code&gt; &lt;/a&gt;生成的项目包含使用CLI开发和测试应用程序所需的一组源文件，资源和配置文件。也可以使用 &lt;code&gt;ng generate application&lt;/code&gt; 和 &lt;code&gt;ng generate library&lt;/code&gt; 命令来创建项目。</target>
        </trans-unit>
        <trans-unit id="3fcab1b27f2adf988a0e5f9ae8aa96c046251ada" translate="yes" xml:space="preserve">
          <source>A property name or method call should be the norm, but an occasional Boolean negation, &lt;code&gt;!&lt;/code&gt;, is OK. Otherwise, confine application and business logic to the component, where it is easier to develop and test.</source>
          <target state="translated">属性名称或方法调用应该是规范，但偶尔会出现布尔否定 &lt;code&gt;!&lt;/code&gt; ，还可以。否则，将应用程序和业务逻辑限制在易于开发和测试的组件上。</target>
        </trans-unit>
        <trans-unit id="303bcae98ffe1ea88fdce30e7edca4a926a46c15" translate="yes" xml:space="preserve">
          <source>A provider can be the service class itself, so that the injector can use &lt;code&gt;new&lt;/code&gt; to create an instance. You might also define more than one class to provide the same service in different ways, and configure different injectors with different providers.</source>
          <target state="translated">提供者可以是服务类本身，以便注入器可以使用 &lt;code&gt;new&lt;/code&gt; 来创建实例。您可能还定义了多个类，以便以不同的方式提供相同的服务，并为不同的注射器配置不同的提供程序。</target>
        </trans-unit>
        <trans-unit id="9060af48d7b3ea4565ffc43d0325a160797c72c4" translate="yes" xml:space="preserve">
          <source>A provider is an instruction to the &lt;a href=&quot;dependency-injection&quot;&gt;Dependency Injection&lt;/a&gt; system on how to obtain a value for a dependency. Most of the time, these dependencies are services that you create and provide.</source>
          <target state="translated">提供程序是对&lt;a href=&quot;dependency-injection&quot;&gt;依赖关系注入&lt;/a&gt;系统的指令，说明如何获取依赖关系的值。大多数情况下，这些依赖项是您创建和提供的服务。</target>
        </trans-unit>
        <trans-unit id="94914bafc3d875ce4fd31120e0f5c1d6b0f53e09" translate="yes" xml:space="preserve">
          <source>A provider tells an injector &lt;em&gt;how to create the service&lt;/em&gt;. You must configure an injector with a provider before that injector can create a service (or provide any other kind of dependency).</source>
          <target state="translated">提供者告诉注入者&lt;em&gt;如何创建服务&lt;/em&gt;。您必须先使用提供程序配置一个注入程序，然后该注入程序才能创建服务（或提供任何其他类型的依赖关系）。</target>
        </trans-unit>
        <trans-unit id="7091a1c3bd9d92d76003ced6042cacb1636cf3ca" translate="yes" xml:space="preserve">
          <source>A provider token for a service that turns on &lt;a href=&quot;testing#automatic-change-detection&quot;&gt;automatic change detection&lt;/a&gt;.</source>
          <target state="translated">打开&lt;a href=&quot;testing#automatic-change-detection&quot;&gt;自动更改检测&lt;/a&gt;的服务的提供者令牌。</target>
        </trans-unit>
        <trans-unit id="5e34ff74155cf2ee267810e5a88a88aaecf8f72b" translate="yes" xml:space="preserve">
          <source>A provider token used to configure the location upgrade module.</source>
          <target state="translated">用于配置位置升级模块的提供者令牌。</target>
        </trans-unit>
        <trans-unit id="35b952b56e93bc63b0bed6c15cf689e5aab13eab" translate="yes" xml:space="preserve">
          <source>A published library typically provides a README or other documentation on how to add that lib to your app. For an example, see &lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material&lt;/a&gt; docs.</source>
          <target state="translated">已发布的库通常会提供自述文件或其他有关如何将该库添加到您的应用程序的文档。有关示例，请参见&lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="0781fc1f661b3bd269d0c78ccd7683277722e5fa" translate="yes" xml:space="preserve">
          <source>A pure pipe uses pure functions. Pure functions process inputs and return values without detectable side effects. Given the same input, they should always return the same output.</source>
          <target state="translated">纯管道使用纯函数。纯函数处理输入并返回值,没有可检测的副作用。给予相同的输入,它们应该总是返回相同的输出。</target>
        </trans-unit>
        <trans-unit id="ea642d50993a11f50b36f50c416de1e3afc29587" translate="yes" xml:space="preserve">
          <source>A query options object.</source>
          <target state="translated">一个查询选项对象。</target>
        </trans-unit>
        <trans-unit id="875f4a87e92836850f7d0d164c10b38034b2b733" translate="yes" xml:space="preserve">
          <source>A quick look at the &lt;code&gt;DashboardComponent&lt;/code&gt; constructor discourages the first approach:</source>
          <target state="translated">快速浏览 &lt;code&gt;DashboardComponent&lt;/code&gt; 构造函数不建议采用第一种方法：</target>
        </trans-unit>
        <trans-unit id="eac44c88992039f4fb91e0feae3853c7a87290d8" translate="yes" xml:space="preserve">
          <source>A re-usable component might be a child of multiple components. Imagine a component for rendering breaking news about a financial instrument. For business reasons, this news component makes frequent calls directly into its parent instrument as changing market data streams by.</source>
          <target state="translated">一个可重用的组件可能是多个组件的子组件。想象一下,一个用于呈现金融工具的突发新闻的组件。由于业务上的原因,这个新闻组件会随着市场数据流的变化而频繁地直接调用它的父工具,具体方法是:1.</target>
        </trans-unit>
        <trans-unit id="29188c6ddf29a94eeba4295076c9a342a62de5e6" translate="yes" xml:space="preserve">
          <source>A real hero is more than a name.</source>
          <target state="translated">真正的英雄不仅仅是一个名字。</target>
        </trans-unit>
        <trans-unit id="14947a138fd23361ed204ab70416c15a2a54e6c1" translate="yes" xml:space="preserve">
          <source>A redirect route requires a &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; property to tell the router how to match a URL to the path of a route. The router throws an error if you don't. In this app, the router should select the route to the &lt;code&gt;HeroListComponent&lt;/code&gt; only when the &lt;em&gt;entire URL&lt;/em&gt; matches &lt;code&gt;''&lt;/code&gt;, so set the &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; value to &lt;code&gt;'&lt;a href=&quot;../api/core/version#full&quot;&gt;full&lt;/a&gt;'&lt;/code&gt;.</source>
          <target state="translated">重定向路由需要一个 &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 属性来告诉路由器如何将URL与路由路径进行匹配。否则，路由器将引发错误。在此应用中，路由器仅应在&lt;em&gt;整个URL&lt;/em&gt;匹配 &lt;code&gt;''&lt;/code&gt; 时选择通往 &lt;code&gt;HeroListComponent&lt;/code&gt; 的路由，因此将 &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 值设置为 &lt;code&gt;'&lt;a href=&quot;../api/core/version#full&quot;&gt;full&lt;/a&gt;'&lt;/code&gt; &lt;a href=&quot;../api/core/version#full&quot;&gt;full&lt;/a&gt; '。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36f7f7b1b6c1f43c049a2ebdb10a9f819ec461db" translate="yes" xml:space="preserve">
          <source>A reference to an Angular application running on a page.</source>
          <target state="translated">对运行在页面上的Angular应用的引用。</target>
        </trans-unit>
        <trans-unit id="401eb455bc6f4c776b2dccfc14710b298a225039" translate="yes" xml:space="preserve">
          <source>A reference to the template that is stamped out for each item in the iterable.</source>
          <target state="translated">对iterable中每个项目的模板的引用。</target>
        </trans-unit>
        <trans-unit id="5a24dc890372e521028f35c106ed2f1cb927ba31" translate="yes" xml:space="preserve">
          <source>A reference to the underlying control.</source>
          <target state="translated">对基础控制的引用。</target>
        </trans-unit>
        <trans-unit id="7996d7994050db578a326532c3dbd2894c0adf11" translate="yes" xml:space="preserve">
          <source>A regular expression to be used as is to test the values, or a string. If a string is passed, the &lt;code&gt;^&lt;/code&gt; character is prepended and the &lt;code&gt;$&lt;/code&gt; character is appended to the provided string (if not already present), and the resulting regular expression is used to test the values.</source>
          <target state="translated">用于测试值的正则表达式或字符串。如果传递了字符串，则会在前面加上 &lt;code&gt;^&lt;/code&gt; 字符，并在提供的字符串后附加 &lt;code&gt;$&lt;/code&gt; 字符（如果尚不存在），然后使用所得的正则表达式测试这些值。</target>
        </trans-unit>
        <trans-unit id="a73fdf09e331223ac46a9c078644a2fd7fcd9c66" translate="yes" xml:space="preserve">
          <source>A repository of different Map diffing strategies used by NgClass, NgStyle, and others.</source>
          <target state="translated">一个由NgClass、NgStyle等使用的不同Map diffing策略的资源库。</target>
        </trans-unit>
        <trans-unit id="cb8eb73672378bd21acb306ae11973b78a2d8b3b" translate="yes" xml:space="preserve">
          <source>A repository of different iterable diffing strategies used by NgFor, NgClass, and others.</source>
          <target state="translated">一个由NgFor、NgClass等使用的不同迭代衍射策略的资源库。</target>
        </trans-unit>
        <trans-unit id="27483211b06ffa402c47221f575c346e77ca8f97" translate="yes" xml:space="preserve">
          <source>A request is rejected if the user denies permission, or if the browser blocks or does not support the Push API or ServiceWorkers. Check &lt;code&gt;&lt;a href=&quot;swpush#isEnabled&quot;&gt;SwPush.isEnabled&lt;/a&gt;&lt;/code&gt; to confirm status.</source>
          <target state="translated">如果用户拒绝许可，或者浏览器阻止或不支持Push API或ServiceWorkers，则请求将被拒绝。检查 &lt;code&gt;&lt;a href=&quot;swpush#isEnabled&quot;&gt;SwPush.isEnabled&lt;/a&gt;&lt;/code&gt; 以确认状态。</target>
        </trans-unit>
        <trans-unit id="19b207feff8dd38f63473783387846e4b8f4694c" translate="yes" xml:space="preserve">
          <source>A resolution is a process of flattening multiple nested arrays and converting individual providers into an array of &lt;code&gt;&lt;a href=&quot;resolvedreflectiveprovider&quot;&gt;ResolvedReflectiveProvider&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">解析是拉平多个嵌套数组并将单个提供程序转换为 &lt;code&gt;&lt;a href=&quot;resolvedreflectiveprovider&quot;&gt;ResolvedReflectiveProvider&lt;/a&gt;&lt;/code&gt; 数组的过程。</target>
        </trans-unit>
        <trans-unit id="a1c3c3d085e282c76f310bb036a7eac8d0f84e78" translate="yes" xml:space="preserve">
          <source>A response that represents an error or failure, either from a non-successful HTTP status, an error while executing the request, or some other failure which occurred during the parsing of the response.</source>
          <target state="translated">代表错误或失败的响应,可以是不成功的HTTP状态,也可以是执行请求时的错误,或者是在解析响应时发生的其他失败。</target>
        </trans-unit>
        <trans-unit id="f70c3da48414bf75c125dc101e455797d04f0001" translate="yes" xml:space="preserve">
          <source>A reusable animation definition.</source>
          <target state="translated">一个可重复使用的动画定义。</target>
        </trans-unit>
        <trans-unit id="cdabf3135a889573b4d620fff18335445de9cd9e" translate="yes" xml:space="preserve">
          <source>A revised version of the &lt;code&gt;CachingInterceptor&lt;/code&gt; optionally returns an &lt;em&gt;observable&lt;/em&gt; that immediately emits the cached response, sends the request to the NPM web API anyway, and emits again later with the updated search results.</source>
          <target state="translated">修订版的 &lt;code&gt;CachingInterceptor&lt;/code&gt; 可以选择返回一个&lt;em&gt;observable&lt;/em&gt;，该&lt;em&gt;observable&lt;/em&gt;立即发出缓存的响应，无论如何将请求发送到NPM Web API，然后在以后再次发出更新的搜索结果。</target>
        </trans-unit>
        <trans-unit id="6a4bbf0b3ca5dd008081ab260dca5b95fc3853e3" translate="yes" xml:space="preserve">
          <source>A route associates one or more URL paths with a component.</source>
          <target state="translated">路由将一个或多个URL路径与一个组件关联起来。</target>
        </trans-unit>
        <trans-unit id="74a035a1a0df73830bf78e88fdca0c0d30db6779" translate="yes" xml:space="preserve">
          <source>A route change activates the animation trigger, and a transition matching the state change is applied.</source>
          <target state="translated">途径改变会激活动画触发器,并应用与状态改变相匹配的过渡。</target>
        </trans-unit>
        <trans-unit id="6c64bf97011375151692d4c68dff9ae5d5309663" translate="yes" xml:space="preserve">
          <source>A route definition refers to a component by its type with &lt;code&gt;component: CustomerListComponent&lt;/code&gt;.</source>
          <target state="translated">路由定义通过类型使用 &lt;code&gt;component: CustomerListComponent&lt;/code&gt; 来引用组件：CustomerListComponent。</target>
        </trans-unit>
        <trans-unit id="7e86358e50f0c60115516b0afea462258244b6af" translate="yes" xml:space="preserve">
          <source>A routed Angular application has one singleton instance of the &lt;em&gt;&lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;&lt;/em&gt; service. When the browser's URL changes, that router looks for a corresponding &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; from which it can determine the component to display.</source>
          <target state="translated">路由的Angular应用程序具有&lt;em&gt; &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; &lt;/em&gt;服务的一个单例实例。当浏览器的URL更改时，该路由器会寻找相应的 &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; ，从中可以确定要显示的组件。</target>
        </trans-unit>
        <trans-unit id="02ec1f1924ffef864dec5f034d699d0e2085b2db" translate="yes" xml:space="preserve">
          <source>A routed application should support &quot;deep links&quot;. A &lt;em&gt;deep link&lt;/em&gt; is a URL that specifies a path to a component inside the app. For example, &lt;code&gt;http://www.mysite.com/heroes/42&lt;/code&gt; is a &lt;em&gt;deep link&lt;/em&gt; to the hero detail page that displays the hero with &lt;code&gt;id: 42&lt;/code&gt;.</source>
          <target state="translated">路由的应用程序应支持&amp;ldquo;深层链接&amp;rdquo;。一个&lt;em&gt;深层链接&lt;/em&gt;是指定的应用程序内的组件的路径的URL。例如， &lt;code&gt;http://www.mysite.com/heroes/42&lt;/code&gt; 是&lt;em&gt;指向&lt;/em&gt;英雄详细信息页面的&lt;em&gt;深层链接&lt;/em&gt;，该页面显示 &lt;code&gt;id: 42&lt;/code&gt; 的英雄。</target>
        </trans-unit>
        <trans-unit id="4d567e1e3b972dc05d228702a7e27b4c14034add" translate="yes" xml:space="preserve">
          <source>A routed entry component</source>
          <target state="translated">一个路由入口组件</target>
        </trans-unit>
        <trans-unit id="9a4649536ab16482113647620adfcb1f64a30922" translate="yes" xml:space="preserve">
          <source>A router has no routes until you configure it. The following example creates five route definitions, configures the router via the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method, and adds the result to the &lt;code&gt;AppModule&lt;/code&gt;'s &lt;code&gt;imports&lt;/code&gt; array.</source>
          <target state="translated">路由器没有路由，直到您对其进行配置。下面的示例创建五个路由定义，通过 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; 方法配置路由器，并将结果添加到 &lt;code&gt;AppModule&lt;/code&gt; 的 &lt;code&gt;imports&lt;/code&gt; 数组中。</target>
        </trans-unit>
        <trans-unit id="8d43f0ef0ca2078e73bd486696685c5d5ef229cf" translate="yes" xml:space="preserve">
          <source>A router must be configured with a list of route definitions.</source>
          <target state="translated">路由器必须配置一个路由定义列表。</target>
        </trans-unit>
        <trans-unit id="6ee77f9045090764d9e6cd31e18052dea0804472" translate="yes" xml:space="preserve">
          <source>A router needs configuration whether it's the AngularJS or Angular or any other router.</source>
          <target state="translated">不管是AngularJS还是Angular还是其他路由器都需要配置。</target>
        </trans-unit>
        <trans-unit id="742ba5028666dfbd7b24f76943ebc6c0e1233cfe" translate="yes" xml:space="preserve">
          <source>A router outlet emits an activate event when a new component is instantiated, and a deactivate event when a component is destroyed.</source>
          <target state="translated">当一个新的组件被实例化时,一个路由器出口会发出一个activate事件,当一个组件被销毁时,会发出一个deactivate事件。</target>
        </trans-unit>
        <trans-unit id="4d893f2f2f77e09f89f1c1ee2b15d6d25775c766" translate="yes" xml:space="preserve">
          <source>A routing module does not have its own declarations. Components, directives, and pipes are the responsibility of the feature module, not the routing module.</source>
          <target state="translated">路由模块没有自己的声明。组件、指令和管道是功能模块的责任,而不是路由模块的责任。</target>
        </trans-unit>
        <trans-unit id="2a705a3baf3eb0fb5440338939869bf36ca0d6e2" translate="yes" xml:space="preserve">
          <source>A routing module provides routing configuration for another module and separates routing concerns from its companion module.</source>
          <target state="translated">路由模块为另一个模块提供路由配置,并将路由关注点与其同伴模块分开。</target>
        </trans-unit>
        <trans-unit id="9e0ec53544bcd207c27bdd63342d736233f25672" translate="yes" xml:space="preserve">
          <source>A routing module re-exports the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; as a convenience so that components of the companion module have access to router directives such as &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">路由模块为了方便而重新导出 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; ，以便配套模块的组件可以访问路由器指令，如 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f1ba848458b2e10deffe2484e76ce0090f12dc2" translate="yes" xml:space="preserve">
          <source>A routing module should only be imported by its companion module.</source>
          <target state="translated">一个路由模块只能由其配套模块导入。</target>
        </trans-unit>
        <trans-unit id="6e4a38ab376f65d6f384d839be45273996d732c6" translate="yes" xml:space="preserve">
          <source>A routing module typically does the following:</source>
          <target state="translated">路由模块通常有以下功能:</target>
        </trans-unit>
        <trans-unit id="85a2bfb58cc0e40066d8cc4ec92ade33012df2f1" translate="yes" xml:space="preserve">
          <source>A rule can specify a period as time range, or as a single time value.</source>
          <target state="translated">一个规则可以指定一个时间段作为时间范围,或作为一个单一的时间值。</target>
        </trans-unit>
        <trans-unit id="1dbf2cce68e5549ab5fc8b6799a2ca90688f851e" translate="yes" xml:space="preserve">
          <source>A running application continues to run with the same version of all files. It does not suddenly start receiving cached files from a newer version, which are likely incompatible.</source>
          <target state="translated">一个正在运行的应用程序继续以相同版本的所有文件运行,它不会突然开始接收来自较新版本的缓存文件,这可能是不兼容的。它不会突然开始接收来自较新版本的缓存文件,因为这些文件可能是不兼容的。</target>
        </trans-unit>
        <trans-unit id="499a4b6365d83f0f45eef66065c407c6f63a53b0" translate="yes" xml:space="preserve">
          <source>A scaffolding library that defines how to generate or transform a programming project by creating, modifying, refactoring, or moving files and code. A schematic defines &lt;a href=&quot;glossary#rule&quot;&gt;rules&lt;/a&gt; that operate on a virtual file system called a &lt;a href=&quot;glossary#file-tree&quot;&gt;tree&lt;/a&gt;.</source>
          <target state="translated">一个脚手架库，它定义了如何通过创建，修改，重构或移动文件和代码来生成或转换编程项目。示意图定义了在称为&lt;a href=&quot;glossary#file-tree&quot;&gt;树&lt;/a&gt;的虚拟文件系统上运行的&lt;a href=&quot;glossary#rule&quot;&gt;规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa44d1fe648c4b623410d8e081b47f8c6bc1115b" translate="yes" xml:space="preserve">
          <source>A schema definition associated with an NgModule.</source>
          <target state="translated">一个与NgModule相关联的模式定义。</target>
        </trans-unit>
        <trans-unit id="28324b5ab9a75918825701e83102b3643e84e681" translate="yes" xml:space="preserve">
          <source>A schematic for the &lt;code&gt;ng add&lt;/code&gt; command can enhance the initial installation process for your users. The following steps will define this type of schematic.</source>
          <target state="translated">&lt;code&gt;ng add&lt;/code&gt; 命令的示意图可以为用户增强初始安装过程。以下步骤将定义这种类型的原理图。</target>
        </trans-unit>
        <trans-unit id="00274013a103be16cdc79882529e8b292f53bb4e" translate="yes" xml:space="preserve">
          <source>A schematic is a template-based code generator that supports complex logic. It is a set of instructions for transforming a software project by generating or modifying code. Schematics are packaged into &lt;a href=&quot;glossary#collection&quot;&gt;collections&lt;/a&gt; and installed with npm.</source>
          <target state="translated">示意图是支持复杂逻辑的基于模板的代码生成器。它是用于通过生成或修改代码来转换软件项目的一组指令。原理图打包到&lt;a href=&quot;glossary#collection&quot;&gt;集合中，&lt;/a&gt;并与npm一起安装。</target>
        </trans-unit>
        <trans-unit id="7927b3f04761399102a081776a50fb3eb8e1643e" translate="yes" xml:space="preserve">
          <source>A scope function for the Web Tracing Framework (WTF).</source>
          <target state="translated">网络跟踪框架(WTF)的一个范围函数。</target>
        </trans-unit>
        <trans-unit id="20497a1af5a153905fddec72f2f68e3bea176254" translate="yes" xml:space="preserve">
          <source>A search value reaches the service only if it's a new value and the user has stopped typing.</source>
          <target state="translated">只有当搜索值是一个新的值并且用户已经停止输入时,才会到达服务。</target>
        </trans-unit>
        <trans-unit id="8928b57af9034cfc3113833a8cc9214728c19f78" translate="yes" xml:space="preserve">
          <source>A second &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; function decorates the &lt;code&gt;loggerService&lt;/code&gt; constructor property. The only &lt;code&gt;LoggerService&lt;/code&gt; instance in the app is provided at the &lt;code&gt;AppComponent&lt;/code&gt; level. The host &lt;code&gt;HeroBioComponent&lt;/code&gt; doesn't have its own &lt;code&gt;LoggerService&lt;/code&gt; provider.</source>
          <target state="translated">第二个 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 函数装饰 &lt;code&gt;loggerService&lt;/code&gt; 构造函数属性。应用程序中唯一的 &lt;code&gt;LoggerService&lt;/code&gt; 实例是在 &lt;code&gt;AppComponent&lt;/code&gt; 级别提供的。主机 &lt;code&gt;HeroBioComponent&lt;/code&gt; 没有自己的 &lt;code&gt;LoggerService&lt;/code&gt; 提供程序。</target>
        </trans-unit>
        <trans-unit id="b2209c9173e3f8d50fb398db9c74e9279308b293" translate="yes" xml:space="preserve">
          <source>A second function called &lt;code&gt;&lt;a href=&quot;../api/animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; lets you run those same animations one after the other. Within &lt;code&gt;&lt;a href=&quot;../api/animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt;, the animation steps consist of either &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function calls.</source>
          <target state="translated">第二个函数称为 &lt;code&gt;&lt;a href=&quot;../api/animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; ,可让您一个接一个地运行相同的动画。在 &lt;code&gt;&lt;a href=&quot;../api/animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; 中，动画步骤由 &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 函数调用组成。</target>
        </trans-unit>
        <trans-unit id="db03cff65aff6394642f3e77b7441a26efb12e0d" translate="yes" xml:space="preserve">
          <source>A secondary section heading is related to a main heading and &lt;em&gt;falls textually within&lt;/em&gt; the bounds of that main heading.</source>
          <target state="translated">次要部分标题与主要标题相关，并且&lt;em&gt;在文本上落入&lt;/em&gt;该主要标题的范围&lt;em&gt;内&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="897556bbdf26acf6542faa243ff0f6beeec0c43b" translate="yes" xml:space="preserve">
          <source>A separate NgModule that provides the necessary service providers and directives for navigating through application views.</source>
          <target state="translated">一个单独的NgModule,它提供了必要的服务提供者和在应用程序视图中导航的指令。</target>
        </trans-unit>
        <trans-unit id="4f7e1f9d4cced71dda1ebf170c0e8e0b521f3d4a" translate="yes" xml:space="preserve">
          <source>A serializable version of the event from &lt;code&gt;onPopState&lt;/code&gt; or &lt;code&gt;onHashChange&lt;/code&gt;</source>
          <target state="translated">来自 &lt;code&gt;onPopState&lt;/code&gt; 或 &lt;code&gt;onHashChange&lt;/code&gt; 的事件的可序列化版本</target>
        </trans-unit>
        <trans-unit id="186e30ff0aea0409a1060146d23210d1933e91c6" translate="yes" xml:space="preserve">
          <source>A service spy, such as the &lt;code&gt;qetQuote()&lt;/code&gt; spy of the fake &lt;code&gt;TwainService&lt;/code&gt;, can give you that information and make assertions about the state of the view.</source>
          <target state="translated">一个服务间谍，例如伪造的 &lt;code&gt;TwainService&lt;/code&gt; 的 &lt;code&gt;qetQuote()&lt;/code&gt; 间谍，可以为您提供该信息并对视图状态进行断言。</target>
        </trans-unit>
        <trans-unit id="70670cbdf35759376fdc687d58086435d3c7a0a3" translate="yes" xml:space="preserve">
          <source>A service that applications can use to interact with a browser's URL.</source>
          <target state="translated">应用程序可用于与浏览器的URL交互的服务。</target>
        </trans-unit>
        <trans-unit id="b658296c6fe9cdddfcd4f6dfb972ad4690b4f6cc" translate="yes" xml:space="preserve">
          <source>A service that can be used to get and add meta tags.</source>
          <target state="translated">一个可以用来获取和添加元标签的服务。</target>
        </trans-unit>
        <trans-unit id="b2f6ff3d8a0d1fc326174778c442afc0d5fc6655" translate="yes" xml:space="preserve">
          <source>A service that can be used to get and set the title of a current HTML document.</source>
          <target state="translated">一个可以用来获取和设置当前HTML文档标题的服务。</target>
        </trans-unit>
        <trans-unit id="3a48ad5f23dc32cb9b39e0864173605539fa750b" translate="yes" xml:space="preserve">
          <source>A service that is provided to each route component that contains route specific information such as route parameters, static data, resolve data, global query params, and the global fragment.</source>
          <target state="translated">向每个路由组件提供的服务,包含路由参数、静态数据、解析数据、全局查询参数和全局片段等路由特定信息。</target>
        </trans-unit>
        <trans-unit id="a65ba35ee354bb8dcdf3d93a99e7ba722d67bb4b" translate="yes" xml:space="preserve">
          <source>A service that provides navigation and URL manipulation capabilities.</source>
          <target state="translated">提供导航和URL操作功能的服务。</target>
        </trans-unit>
        <trans-unit id="165b76769ff8ffcdbb0dac7d8565023cf996eb79" translate="yes" xml:space="preserve">
          <source>A set of CSS style properties.</source>
          <target state="translated">一组CSS样式属性。</target>
        </trans-unit>
        <trans-unit id="b41c5694278624138f799e74044ab8ef5c4a41ec" translate="yes" xml:space="preserve">
          <source>A set of CSS styles associated with this state, created using the &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; function. This set of styles persists on the element once the state has been reached.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 函数创建的与此状态相关的一组CSS样式。达到状态后，这组样式将保留在元素上。</target>
        </trans-unit>
        <trans-unit id="7299f56aeec68cc3f32c42d11d47f588e1b76737" translate="yes" xml:space="preserve">
          <source>A set of CSS styles or HTML styles associated with an animation state. The value can be any of the following:</source>
          <target state="translated">一组与动画状态相关联的CSS样式或HTML样式。该值可以是以下任何一种。</target>
        </trans-unit>
        <trans-unit id="aed6bba5fddfaceede4e9e47b8f848a5df28edb9" translate="yes" xml:space="preserve">
          <source>A set of animation styles with optional offset data. The optional &lt;code&gt;&lt;a href=&quot;animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; value for a style specifies a percentage of the total animation time at which that style is applied.</source>
          <target state="translated">一组具有可选偏移数据的动画样式。样式的可选 &lt;code&gt;&lt;a href=&quot;animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; 值指定了应用该样式的总动画时间的百分比。</target>
        </trans-unit>
        <trans-unit id="3a39ac6a5cf5e3a0526385dd947e6b5b4b10ab86" translate="yes" xml:space="preserve">
          <source>A set of arguments to pass to the handler method when the event occurs.</source>
          <target state="translated">事件发生时要传递给处理方法的一组参数。</target>
        </trans-unit>
        <trans-unit id="b69416e2e979402db61b9a90c7c686f250c2936a" translate="yes" xml:space="preserve">
          <source>A set of components that should be compiled along with this component. For each component listed here, Angular creates a &lt;a href=&quot;componentfactory&quot;&gt;&lt;code&gt;ComponentFactory&lt;/code&gt;&lt;/a&gt; and stores it in the &lt;a href=&quot;componentfactoryresolver&quot;&gt;&lt;code&gt;ComponentFactoryResolver&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一组应与此组件一起编译的组件。对于此处列出的每个组件，Angular都会创建一个&lt;a href=&quot;componentfactory&quot;&gt; &lt;code&gt;ComponentFactory&lt;/code&gt; &lt;/a&gt;并将其存储在&lt;a href=&quot;componentfactoryresolver&quot;&gt; &lt;code&gt;ComponentFactoryResolver&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d541ee3bb7bdc858fdbe640242004d6c3574b73f" translate="yes" xml:space="preserve">
          <source>A set of configuration options for a router module, provided in the &lt;code&gt;&lt;a href=&quot;router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 方法中提供的一组路由器模块配置选项。</target>
        </trans-unit>
        <trans-unit id="db0c7a52799241ff11d3cbf03e465aa12662b595" translate="yes" xml:space="preserve">
          <source>A set of configuration options for a router module, provided in the &lt;code&gt;&lt;a href=&quot;routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 方法中提供的一组路由器模块配置选项。</target>
        </trans-unit>
        <trans-unit id="2f9f31dbf4c58ee11c9c7cafc16fbd9e630c335a" translate="yes" xml:space="preserve">
          <source>A set of developer-defined parameters that modify styling and timing when an animation action starts. An array of key-value pairs, where the provided value is used as a default.</source>
          <target state="translated">一组开发者定义的参数,用于修改动画动作开始时的样式和时间。一个键值对的数组,其中提供的值被用作默认值。</target>
        </trans-unit>
        <trans-unit id="cda6f3a81bf6fa1d317017a56a36707356b07794" translate="yes" xml:space="preserve">
          <source>A set of operators applied to an observable is a recipe&amp;mdash;that is, a set of instructions for producing the values you&amp;rsquo;re interested in. By itself, the recipe doesn&amp;rsquo;t do anything. You need to call &lt;code&gt;subscribe()&lt;/code&gt; to produce a result through the recipe.</source>
          <target state="translated">应用于可观察对象的一组运算符是一个配方，即用于生成您感兴趣的值的一组指令。就其本身而言，该配方不执行任何操作。您需要调用 &lt;code&gt;subscribe()&lt;/code&gt; 才能通过配方产生结果。</target>
        </trans-unit>
        <trans-unit id="a4ef0905149ca734533ddf7caa55241124189d7b" translate="yes" xml:space="preserve">
          <source>A set of options that can include a time delay and additional developer-defined parameters.</source>
          <target state="translated">一组选项,可以包括时间延迟和其他开发者定义的参数。</target>
        </trans-unit>
        <trans-unit id="7985d70b6da47d4fec6acf039e047d5b6d1572b8" translate="yes" xml:space="preserve">
          <source>A set of schematics that customize the &lt;code&gt;ng generate&lt;/code&gt; sub-command option defaults for this project. See &lt;a href=&quot;workspace-config#schematics&quot;&gt;Generation schematics&lt;/a&gt; below.</source>
          <target state="translated">此项目的一组用于自定义 &lt;code&gt;ng generate&lt;/code&gt; 子命令选项的示意图为默认设置。请参阅下面的&lt;a href=&quot;workspace-config#schematics&quot;&gt;生成原理&lt;/a&gt;图。</target>
        </trans-unit>
        <trans-unit id="1c6f62509b38d65e25be8d89556b5a09dfbb7fbc" translate="yes" xml:space="preserve">
          <source>A set of styles used in the step.</source>
          <target state="translated">步中使用的一组样式。</target>
        </trans-unit>
        <trans-unit id="d32224487a00478c027aca367dcd59df918d5161" translate="yes" xml:space="preserve">
          <source>A set of supported event names for gestures to be used in Angular. Angular supports all built-in recognizers, as listed in &lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS documentation&lt;/a&gt;.</source>
          <target state="translated">一组在Angular中使用的手势支持的事件名称。Angular支持所有内置识别器，如&lt;a href=&quot;http://hammerjs.github.io/&quot;&gt;HammerJS文档中&lt;/a&gt;所列。</target>
        </trans-unit>
        <trans-unit id="40cf8919ea34c404a49fa4a02115691af647ed4f" translate="yes" xml:space="preserve">
          <source>A simple example</source>
          <target state="translated">一个简单的例子</target>
        </trans-unit>
        <trans-unit id="bb4c77f231253ed725d7018a0a81f0fc0e2d83c1" translate="yes" xml:space="preserve">
          <source>A simple example might be a button that sends users to your company website, that would be included in all apps that your company builds.</source>
          <target state="translated">一个简单的例子可能是一个按钮,将用户发送到你的公司网站,这将包括在你的公司建立的所有应用程序。</target>
        </trans-unit>
        <trans-unit id="ab3504c2abf7afad713f07541dc7d00888949cea" translate="yes" xml:space="preserve">
          <source>A simple example of an upgradable component is one that just has a template and a controller:</source>
          <target state="translated">一个简单的可升级组件的例子就是只有一个模板和一个控制器。</target>
        </trans-unit>
        <trans-unit id="831871173da9a3d98859cf2d8c0391fd2eb59db2" translate="yes" xml:space="preserve">
          <source>A simple registry that maps &lt;code&gt;Components&lt;/code&gt; to generated &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; classes that can be used to create instances of components. Use to obtain the factory for a given component type, then use the factory's &lt;code&gt;create()&lt;/code&gt; method to create a component of that type.</source>
          <target state="translated">一个简单的注册表，它将 &lt;code&gt;Components&lt;/code&gt; 映射到生成的 &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; 类，该类可用于创建组件的实例。用于获取给定组件类型的工厂，然后使用工厂的 &lt;code&gt;create()&lt;/code&gt; 方法创建该类型的组件。</target>
        </trans-unit>
        <trans-unit id="038f8b4a10895ec9960fbff4945296bdba224d59" translate="yes" xml:space="preserve">
          <source>A simple registry that maps &lt;code&gt;Components&lt;/code&gt; to generated &lt;code&gt;&lt;a href=&quot;core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; classes that can be used to create instances of components. Use to obtain the factory for a given component type, then use the factory's &lt;code&gt;create()&lt;/code&gt; method to create a component of that type.</source>
          <target state="translated">一个简单的注册表，它将 &lt;code&gt;Components&lt;/code&gt; 映射到生成的 &lt;code&gt;&lt;a href=&quot;core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; 类，该类可用于创建组件的实例。用于获取给定组件类型的工厂，然后使用工厂的 &lt;code&gt;create()&lt;/code&gt; 方法创建该类型的组件。</target>
        </trans-unit>
        <trans-unit id="10044643dfe192b31c7905ba4ef722a290bd6c2d" translate="yes" xml:space="preserve">
          <source>A simple structural directive like this one creates an &lt;a href=&quot;../api/core/embeddedviewref&quot;&gt;&lt;em&gt;embedded view&lt;/em&gt;&lt;/a&gt; from the Angular-generated &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; and inserts that view in a &lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;&lt;em&gt;view container&lt;/em&gt;&lt;/a&gt; adjacent to the directive's original &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; host element.</source>
          <target state="translated">像这样的简单结构伪指令从Angular生成的 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; 创建一个&lt;a href=&quot;../api/core/embeddedviewref&quot;&gt;&lt;em&gt;嵌入式视图&lt;/em&gt;&lt;/a&gt;，并将该视图插入到该伪指令的原始 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 宿主元素附近的&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;&lt;em&gt;视图容器中&lt;/em&gt;&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c50ef7c9d0ce699d0fb2c42cd53b333d4175593e" translate="yes" xml:space="preserve">
          <source>A single &lt;code&gt;app.use()&lt;/code&gt; treats all other URLs as requests for static assets such as JavaScript, image, and style files.</source>
          <target state="translated">一个 &lt;code&gt;app.use()&lt;/code&gt; 会将所有其他URL视为对静态资产（例如JavaScript，图像和样式文件）的请求。</target>
        </trans-unit>
        <trans-unit id="f477973774e5df37770d2d52b18d6a9388386d89" translate="yes" xml:space="preserve">
          <source>A single async validator or array of async validator functions</source>
          <target state="translated">单个异步验证器或异步验证器函数数组。</target>
        </trans-unit>
        <trans-unit id="268541f7ed03574fdff1f3db74a50de2b9970447" translate="yes" xml:space="preserve">
          <source>A single async validator or array of async validator functions.</source>
          <target state="translated">单个异步验证器或异步验证器函数数组。</target>
        </trans-unit>
        <trans-unit id="657bff2669641b3b4dbecfeb9504dbb0338142a2" translate="yes" xml:space="preserve">
          <source>A single workspace configuration file, &lt;code&gt;angular.json&lt;/code&gt;, is created at the top level of the workspace. This is where you can set per-project defaults for CLI command options, and specify configurations to use when the CLI builds a project for different targets.</source>
          <target state="translated">在工作区的顶层创建了一个工作区配置文件 &lt;code&gt;angular.json&lt;/code&gt; 。您可以在此处为CLI命令选项设置每个项目的默认值，并指定CLI为不同目标构建项目时要使用的配置。</target>
        </trans-unit>
        <trans-unit id="5d6ef6cd0b6fc6f9f557a972f0f18f5be6fca3db" translate="yes" xml:space="preserve">
          <source>A singleton service is a service for which only one instance exists in an app.</source>
          <target state="translated">单人服务是指一个应用中只存在一个实例的服务。</target>
        </trans-unit>
        <trans-unit id="ac41fd92f261eb788e4ee3ddf422ff33e2eeca72" translate="yes" xml:space="preserve">
          <source>A special animation control binding called &lt;code&gt;@.disabled&lt;/code&gt; can be placed on an HTML element to disable animations on that element, as well as any nested elements. When true, the &lt;code&gt;@.disabled&lt;/code&gt; binding prevents all animations from rendering.</source>
          <target state="translated">可以在HTML元素上放置一个名为 &lt;code&gt;@.disabled&lt;/code&gt; 特殊动画控件绑定，以禁用该元素以及任何嵌套元素上的动画。如果为true，则 &lt;code&gt;@.disabled&lt;/code&gt; 绑定将阻止渲染所有动画。</target>
        </trans-unit>
        <trans-unit id="28a932b87bea89ca4c6d50864f98e96e807d3475" translate="yes" xml:space="preserve">
          <source>A special-purpose library or API; see &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;Domain-specific language&lt;/a&gt;. Angular extends TypeScript with domain-specific languages for a number of domains relevant to Angular apps, defined in NgModules such as &lt;a href=&quot;animations&quot;&gt;animations&lt;/a&gt;, &lt;a href=&quot;forms&quot;&gt;forms&lt;/a&gt;, and &lt;a href=&quot;router&quot;&gt;routing and navigation&lt;/a&gt;.</source>
          <target state="translated">专用库或API；请参阅&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;特定于域的语言&lt;/a&gt;。Angular使用特定于域的语言将TypeScript扩展到与Angular应用相关的多个域，这些域在NgModules中定义，例如&lt;a href=&quot;animations&quot;&gt;动画&lt;/a&gt;，&lt;a href=&quot;forms&quot;&gt;表单&lt;/a&gt;以及&lt;a href=&quot;router&quot;&gt;路由和导航&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d1c91cfd2fa14b6be729ec66d8172ea27c64e6a" translate="yes" xml:space="preserve">
          <source>A spy directive can provide insight into a DOM object that you cannot change directly. Obviously you can't touch the implementation of a native &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. You can't modify a third party component either. But you can watch both with a directive.</source>
          <target state="translated">间谍指令可以深入了解无法直接更改的DOM对象。显然，您无法触摸原生 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 的实现。您也不能修改第三方组件。但是，您可以通过指令观看两者。</target>
        </trans-unit>
        <trans-unit id="7a34ef45b9243824ac8ad104edcd27a0ba07fb88" translate="yes" xml:space="preserve">
          <source>A spy for &lt;a href=&quot;../location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; that allows tests to fire simulated location events.</source>
          <target state="translated">用于&amp;ldquo; &lt;a href=&quot;../location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; &amp;rdquo;的间谍，它允许测试触发模拟的位置事件。</target>
        </trans-unit>
        <trans-unit id="069d78528aa32feecf64a53f5cad5729aab0a2e3" translate="yes" xml:space="preserve">
          <source>A spy for &lt;a href=&quot;location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; that allows tests to fire simulated location events.</source>
          <target state="translated">用于&amp;ldquo; &lt;a href=&quot;location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; &amp;rdquo;的间谍，它允许测试触发模拟的位置事件。</target>
        </trans-unit>
        <trans-unit id="70bf824cd7347a77618ce7faa1c6b086d7a03e3f" translate="yes" xml:space="preserve">
          <source>A state-change string takes the form &quot;state1 =&amp;gt; state2&quot;, where each side is a defined animation state, or an asterix (*) to refer to a dynamic start or end state.</source>
          <target state="translated">状态更改字符串采用&amp;ldquo; state1 =&amp;gt; state2&amp;rdquo;的形式，其中每一面都是定义的动画状态，或者使用星号（*）表示动态开始或结束状态。</target>
        </trans-unit>
        <trans-unit id="33d604ab8f39d07d37d2c30931848cefcdeac188" translate="yes" xml:space="preserve">
          <source>A static analysis tool that checks TypeScript code for readability, maintainability, and functionality errors.</source>
          <target state="translated">一个静态分析工具,用于检查TypeScript代码的可读性、可维护性和功能错误。</target>
        </trans-unit>
        <trans-unit id="df0b2f1e108e2b0b27eaa546a2ef0116df1fff42" translate="yes" xml:space="preserve">
          <source>A static server routinely returns &lt;code&gt;index.html&lt;/code&gt; when it receives a request for &lt;code&gt;http://www.mysite.com/&lt;/code&gt;. But it rejects &lt;code&gt;http://www.mysite.com/heroes/42&lt;/code&gt; and returns a &lt;code&gt;404 - Not Found&lt;/code&gt; error &lt;em&gt;unless&lt;/em&gt; it is configured to return &lt;code&gt;index.html&lt;/code&gt; instead.</source>
          <target state="translated">静态服务器在收到 &lt;code&gt;http://www.mysite.com/&lt;/code&gt; 的请求时，通常会返回 &lt;code&gt;index.html&lt;/code&gt; 。但它会拒绝 &lt;code&gt;http://www.mysite.com/heroes/42&lt;/code&gt; 并返回 &lt;code&gt;404 - Not Found&lt;/code&gt; 错误，&lt;em&gt;除非将&lt;/em&gt;其配置为返回 &lt;code&gt;index.html&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb8aebeb140e3e794e8e71e965ce9b6a1d9b29a4" translate="yes" xml:space="preserve">
          <source>A strategy for extracting and merging URLs. Used for AngularJS to Angular migrations.</source>
          <target state="translated">一种提取和合并URL的策略。用于AngularJS到Angular的迁移。</target>
        </trans-unit>
        <trans-unit id="2e0742331cebdd301468cdb2b697b7e4360d857a" translate="yes" xml:space="preserve">
          <source>A strategy for re-using routes.</source>
          <target state="translated">重新使用路线的战略;</target>
        </trans-unit>
        <trans-unit id="aff9c7c5b6b50fb73398838cd6862bb27d6daa66" translate="yes" xml:space="preserve">
          <source>A strategy for tracking changes over time to an iterable. Used by &lt;a href=&quot;../common/ngforof&quot;&gt;&lt;code&gt;NgForOf&lt;/code&gt;&lt;/a&gt; to respond to changes in an iterable by effecting equivalent changes in the DOM.</source>
          <target state="translated">跟踪随时间变化的迭代策略。由&lt;a href=&quot;../common/ngforof&quot;&gt; &lt;code&gt;NgForOf&lt;/code&gt; &lt;/a&gt;用于通过影响DOM中的等效更改来响应可迭代的更改。</target>
        </trans-unit>
        <trans-unit id="9abae0d3fd0569dcd3f80cc31ed35dfda23db8af" translate="yes" xml:space="preserve">
          <source>A strategy for tracking changes over time to an iterable. Used by &lt;a href=&quot;common/ngforof&quot;&gt;&lt;code&gt;NgForOf&lt;/code&gt;&lt;/a&gt; to respond to changes in an iterable by effecting equivalent changes in the DOM.</source>
          <target state="translated">跟踪随时间变化的迭代策略。由&lt;a href=&quot;common/ngforof&quot;&gt; &lt;code&gt;NgForOf&lt;/code&gt; &lt;/a&gt;用于通过影响DOM中的等效更改来响应可迭代的更改。</target>
        </trans-unit>
        <trans-unit id="0d666977cdc5d148eaadf69ff83a95bc8b0bbf90" translate="yes" xml:space="preserve">
          <source>A string containing the currency symbol or its name, such as &quot;$&quot; or &quot;Canadian Dollar&quot;. Used in output string, but does not affect the operation of the function.</source>
          <target state="translated">包含货币符号或其名称的字符串,如&quot;$&quot;或 &quot;加元&quot;。在输出字符串中使用,但不影响函数的操作。</target>
        </trans-unit>
        <trans-unit id="d4f53e9917e374bd5c7a6e00fdeaf07cbebd1ecf" translate="yes" xml:space="preserve">
          <source>A string defining the template reference and optionally the context object for the template.</source>
          <target state="translated">定义模板参考和模板上下文对象的字符串。</target>
        </trans-unit>
        <trans-unit id="4218b63c689582c9116fc1d347ea4cff053ba011" translate="yes" xml:space="preserve">
          <source>A string of the form &lt;code&gt;path/to/file#exportName&lt;/code&gt; that acts as a URL for a set of routes to load, or a function that returns such a set.</source>
          <target state="translated">格式为 &lt;code&gt;path/to/file#exportName&lt;/code&gt; 的字符串，用作要加载的一组路由的URL，或返回此类路由的函数。</target>
        </trans-unit>
        <trans-unit id="5bb334481e943a7ec420d73477b9b7576ee9a9e4" translate="yes" xml:space="preserve">
          <source>A string of the form &lt;code&gt;path/to/file#exportName&lt;/code&gt; that acts as a URL for a set of routes to load.</source>
          <target state="translated">格式为 &lt;code&gt;path/to/file#exportName&lt;/code&gt; 的字符串，用作要加载的一组路由的URL。</target>
        </trans-unit>
        <trans-unit id="18b1ff791f4ab843946300c849836dd8ec44680e" translate="yes" xml:space="preserve">
          <source>A string that Angular prepends to generated selectors. Can be customized to identify an app or feature area.</source>
          <target state="translated">Angular预先添加到生成的选择器的字符串。可以自定义以识别一个应用程序或功能区域。</target>
        </trans-unit>
        <trans-unit id="1d99e39af1598920c88efd736f47a905616a5462" translate="yes" xml:space="preserve">
          <source>A structural directive puts a &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; to work as you'll see when you &lt;a href=&quot;structural-directives#unless&quot;&gt;write your own structural directive&lt;/a&gt;.</source>
          <target state="translated">当您&lt;a href=&quot;structural-directives#unless&quot;&gt;编写自己的结构指令&lt;/a&gt;时，结构指令将使 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; 正常工作。</target>
        </trans-unit>
        <trans-unit id="a7c157be16fc3a14b41213b09c95f55bf3708632" translate="yes" xml:space="preserve">
          <source>A structural directive that adds or removes templates (displaying or hiding views) when the next match expression matches the switch expression.</source>
          <target state="translated">当下一个匹配表达式与switch表达式相匹配时,添加或删除模板(显示或隐藏视图)的结构指令。</target>
        </trans-unit>
        <trans-unit id="f748235af1be7e44e4598bbe98b3686222a813aa" translate="yes" xml:space="preserve">
          <source>A structural directive that conditionally includes a template based on the value of an expression coerced to Boolean. When the expression evaluates to true, Angular renders the template provided in a &lt;code&gt;then&lt;/code&gt; clause, and when false or null, Angular renders the template provided in an optional &lt;code&gt;else&lt;/code&gt; clause. The default template for the &lt;code&gt;else&lt;/code&gt; clause is blank.</source>
          <target state="translated">一种结构指令，基于强制转换为布尔值的表达式的值，有条件地包括模板。当表达式的计算结果为true时，Angular渲染 &lt;code&gt;then&lt;/code&gt; 子句中提供的模板，而false或null时，Angular渲染可选的 &lt;code&gt;else&lt;/code&gt; 子句中提供的模板。 &lt;code&gt;else&lt;/code&gt; 子句的默认模板为空白。</target>
        </trans-unit>
        <trans-unit id="dd4680b4f9240c47bd096bcd0bf902e137cd81a4" translate="yes" xml:space="preserve">
          <source>A structure that provides metadata for a class. See &lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt;.</source>
          <target state="translated">为类提供元数据的结构。请参阅&lt;a href=&quot;glossary#decorator&quot;&gt;装饰器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e009ff3bda9c17a3c21c70b9219d153da51904f" translate="yes" xml:space="preserve">
          <source>A subanimation can be queried by a parent and then later animated with the &lt;code&gt;&lt;a href=&quot;../api/animations/animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">子动画可以由父级查询，然后再使用 &lt;code&gt;&lt;a href=&quot;../api/animations/animatechild&quot;&gt;animateChild&lt;/a&gt;()&lt;/code&gt; 函数进行动画处理。</target>
        </trans-unit>
        <trans-unit id="41fa62814924dac89aa9ada1e279e24e67392f1e" translate="yes" xml:space="preserve">
          <source>A subscription to change, connect, and disconnect events in the custom element.</source>
          <target state="translated">在自定义元素中更改、连接和断开事件的订阅。</target>
        </trans-unit>
        <trans-unit id="6fc60237d9049bfebb9bf3c583da975aa13fe821" translate="yes" xml:space="preserve">
          <source>A subsection with &lt;strong&gt;markdown&lt;/strong&gt; formatted text.</source>
          <target state="translated">具有&lt;strong&gt;降价&lt;/strong&gt;格式的文本的小节。</target>
        </trans-unit>
        <trans-unit id="75df14fc8d3c539ffce328700d6c2714508f544d" translate="yes" xml:space="preserve">
          <source>A synchronous &lt;code&gt;beforeEach()&lt;/code&gt; that performs the remaining setup.</source>
          <target state="translated">一个同步的 &lt;code&gt;beforeEach()&lt;/code&gt; 执行剩余的设置。</target>
        </trans-unit>
        <trans-unit id="5a1951e4b3a7997f917a0a8771a1c00faa7de411" translate="yes" xml:space="preserve">
          <source>A synchronous validator function, or an array of such functions, or an &lt;code&gt;&lt;a href=&quot;abstractcontroloptions&quot;&gt;AbstractControlOptions&lt;/a&gt;&lt;/code&gt; object that contains validation functions and a validation trigger.</source>
          <target state="translated">同步验证器函数或此类函数的数组，或包含验证函数和验证触发器的 &lt;code&gt;&lt;a href=&quot;abstractcontroloptions&quot;&gt;AbstractControlOptions&lt;/a&gt;&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="8e602fb0822cd1e41b2e8635d1b7e2ee92f0fc30" translate="yes" xml:space="preserve">
          <source>A target for global event notifications. One of &quot;window&quot;, &quot;document&quot;, or &quot;body&quot;.</source>
          <target state="translated">全局事件通知的目标。&quot;window&quot;、&quot;document &quot;或 &quot;body &quot;中的一个。</target>
        </trans-unit>
        <trans-unit id="c49e4e510fb773309907c7090d51199cb5646ab2" translate="yes" xml:space="preserve">
          <source>A technique for adding a component to the DOM at run time. Requires that you exclude the component from compilation and then connect it to Angular's change-detection and event-handling framework when you add it to the DOM.</source>
          <target state="translated">一种在运行时向DOM添加组件的技术。要求你将组件从编译中排除,然后当你将其添加到DOM时,将其连接到Angular的变化检测和事件处理框架。</target>
        </trans-unit>
        <trans-unit id="8e91a35d0e33492ee4275f0669de02e4f926b6fa" translate="yes" xml:space="preserve">
          <source>A technique that generates static application pages on the server, and can generate and serve those pages in response to requests from browsers. It can also pre-generate pages as HTML files that you serve later.</source>
          <target state="translated">一种在服务器上生成静态应用页面的技术,可以根据浏览器的请求生成并提供这些页面。它还可以预先生成网页作为HTML文件,供您以后使用。</target>
        </trans-unit>
        <trans-unit id="638899fd7ea8912375736917813c496e0c94cec3" translate="yes" xml:space="preserve">
          <source>A template &lt;em&gt;reference&lt;/em&gt; variable (&lt;code&gt;#phone&lt;/code&gt;) is not the same as a template &lt;em&gt;input&lt;/em&gt; variable (&lt;code&gt;let phone&lt;/code&gt;) such as in an &lt;a href=&quot;template-syntax#template-input-variable&quot;&gt;&lt;code&gt;*ngFor&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;structural-directives#template-input-variable&quot;&gt;&lt;em&gt;Structural Directives&lt;/em&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">模板&lt;em&gt;引用&lt;/em&gt;变量（ &lt;code&gt;#phone&lt;/code&gt; ）与模板&lt;em&gt;输入&lt;/em&gt;变量（ &lt;code&gt;let phone&lt;/code&gt; ）不同，例如&lt;a href=&quot;template-syntax#template-input-variable&quot;&gt; &lt;code&gt;*ngFor&lt;/code&gt; &lt;/a&gt;中的变量。有关更多信息，请参见&lt;a href=&quot;structural-directives#template-input-variable&quot;&gt;&lt;em&gt;结构指令&lt;/em&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1dfbac8c9633ea6918e4e33ebf0a38f1b1944721" translate="yes" xml:space="preserve">
          <source>A template &lt;strong&gt;expression&lt;/strong&gt; produces a value and appears within the double curly braces, &lt;code&gt;{{ }}&lt;/code&gt;. Angular executes the expression and assigns it to a property of a binding target; the target could be an HTML element, a component, or a directive.</source>
          <target state="translated">模板&lt;strong&gt;表达式&lt;/strong&gt;会产生一个值，并出现在双花括号 &lt;code&gt;{{ }}&lt;/code&gt; 。Angular执行该表达式并将其分配给绑定目标的属性；目标可以是HTML元素，组件或指令。</target>
        </trans-unit>
        <trans-unit id="3399fe86e1c043a76a747559ebc2584954d3d035" translate="yes" xml:space="preserve">
          <source>A template &lt;strong&gt;statement&lt;/strong&gt; responds to an &lt;strong&gt;event&lt;/strong&gt; raised by a binding target such as an element, component, or directive. You'll see template statements in the &lt;a href=&quot;template-syntax#event-binding&quot;&gt;event binding&lt;/a&gt; section, appearing in quotes to the right of the &lt;code&gt;=&lt;/code&gt; symbol as in &lt;code&gt;(event)=&quot;statement&quot;&lt;/code&gt;.</source>
          <target state="translated">模板&lt;strong&gt;语句&lt;/strong&gt;响应由绑定目标（例如元素，组件或指令）引发的&lt;strong&gt;事件&lt;/strong&gt;。您将在&lt;a href=&quot;template-syntax#event-binding&quot;&gt;事件绑定&lt;/a&gt;部分中看到模板语句，它们在 &lt;code&gt;=&lt;/code&gt; 符号右侧的引号中显示，如 &lt;code&gt;(event)=&quot;statement&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ba264b05103cceb73a697cb4002c6fe302d7682" translate="yes" xml:space="preserve">
          <source>A template can also have any number of &lt;em&gt;named&lt;/em&gt; outlets. Each named outlet has its own set of routes with their own components. Multiple outlets can be displaying different content, determined by different routes, all at the same time.</source>
          <target state="translated">模板也可以具有任意数量的&lt;em&gt;命名&lt;/em&gt;出口。每个命名的出口都有自己的路线和组件。多个商店可以同时显示由不同路线确定的不同内容。</target>
        </trans-unit>
        <trans-unit id="e53e96f015d564a357a09d35601208b867f150ce" translate="yes" xml:space="preserve">
          <source>A template can use exported declarables from any imported module, including those from modules that are imported indirectly and re-exported. For example, &lt;code&gt;ModuleA&lt;/code&gt; imports &lt;code&gt;ModuleB&lt;/code&gt;, and also exports it, which makes the declarables from &lt;code&gt;ModuleB&lt;/code&gt; available wherever &lt;code&gt;ModuleA&lt;/code&gt; is imported.</source>
          <target state="translated">模板可以使用从任何导入的模块中导出的声明，包括从间接导入并重新导出的模块中导出的声明。例如， &lt;code&gt;ModuleA&lt;/code&gt; 导入 &lt;code&gt;ModuleB&lt;/code&gt; 并也将其导出，这使得从 &lt;code&gt;ModuleB&lt;/code&gt; 进行的声明在导入 &lt;code&gt;ModuleA&lt;/code&gt; 的任何地方都可用。</target>
        </trans-unit>
        <trans-unit id="390c41bd3a5d88b462a0eb30f1966d9bfe67ea64" translate="yes" xml:space="preserve">
          <source>A template combines HTML with Angular markup that can modify HTML elements before they are displayed. Template &lt;em&gt;directives&lt;/em&gt; provide program logic, and &lt;em&gt;binding markup&lt;/em&gt; connects your application data and the DOM. There are two types of data binding:</source>
          <target state="translated">模板将HTML与Angular标记结合在一起，可以在显示HTML元素之前对其进行修改。模板&lt;em&gt;指令&lt;/em&gt;提供程序逻辑，而&lt;em&gt;绑定标记&lt;/em&gt;将您的应用程序数据和DOM连接起来。数据绑定有两种类型：</target>
        </trans-unit>
        <trans-unit id="26d7d91bd3438a33922e9f989bb798c48de79ba5" translate="yes" xml:space="preserve">
          <source>A template combines straight HTML with Angular &lt;a href=&quot;glossary#data-binding&quot;&gt;data-binding&lt;/a&gt; syntax, &lt;a href=&quot;glossary#directive&quot;&gt;directives&lt;/a&gt;, and &lt;a href=&quot;glossary#template-expression&quot;&gt;template expressions&lt;/a&gt; (logical constructs). The Angular elements insert or calculate values that modify the HTML elements before the page is displayed.</source>
          <target state="translated">模板将直接HTML与Angular &lt;a href=&quot;glossary#data-binding&quot;&gt;数据绑定&lt;/a&gt;语法，&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;和&lt;a href=&quot;glossary#template-expression&quot;&gt;模板表达式&lt;/a&gt;（逻辑构造）结合在一起。Angular元素会插入或计算在显示页面之前修改HTML元素的值。</target>
        </trans-unit>
        <trans-unit id="8d2e74a99424e6bcbe0ee669cd69bc0cd5375754" translate="yes" xml:space="preserve">
          <source>A template expression should not change any application state other than the value of the target property.</source>
          <target state="translated">模板表达式不应改变目标属性值以外的任何应用状态。</target>
        </trans-unit>
        <trans-unit id="f48dc3bdb1500520689adb8438d8eb72cfeab345" translate="yes" xml:space="preserve">
          <source>A template is associated with a &lt;a href=&quot;glossary#component&quot;&gt;component&lt;/a&gt; class through the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;&lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt;. The HTML can be provided inline, as the value of the &lt;code&gt;template&lt;/code&gt; property, or in a separate HTML file linked through the &lt;code&gt;templateUrl&lt;/code&gt; property.</source>
          <target state="translated">模板是与相关联的&lt;a href=&quot;glossary#component&quot;&gt;组件&lt;/a&gt;通过类 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;glossary#decorator&quot;&gt;装饰&lt;/a&gt;。可以内联方式提供HTML，作为 &lt;code&gt;template&lt;/code&gt; 属性的值，也可以在通过 &lt;code&gt;templateUrl&lt;/code&gt; 属性链接的单独HTML文件中提供。</target>
        </trans-unit>
        <trans-unit id="79091c1a52a2c3efbb6119802157bc2315a22661" translate="yes" xml:space="preserve">
          <source>A template looks like regular HTML, except that it also contains Angular &lt;a href=&quot;template-syntax&quot;&gt;template syntax&lt;/a&gt;, which alters the HTML based on your app's logic and the state of app and DOM data. Your template can use &lt;em&gt;data binding&lt;/em&gt; to coordinate the app and DOM data, &lt;em&gt;pipes&lt;/em&gt; to transform data before it is displayed, and &lt;em&gt;directives&lt;/em&gt; to apply app logic to what gets displayed.</source>
          <target state="translated">模板看起来像常规HTML，不同之处在于它还包含Angular &lt;a href=&quot;template-syntax&quot;&gt;模板语法&lt;/a&gt;，该语法根据应用程序的逻辑以及应用程序和DOM数据的状态来更改HTML。您的模板可以使用&lt;em&gt;数据绑定&lt;/em&gt;来协调应用程序和DOM数据，可以使用&lt;em&gt;管道&lt;/em&gt;在显示数据之前转换数据，还可以使用&lt;em&gt;指令&lt;/em&gt;将应用程序逻辑应用于所显示的内容。</target>
        </trans-unit>
        <trans-unit id="7c5bb4b558793d400799ee501153dd43050c0f50" translate="yes" xml:space="preserve">
          <source>A template reference variable as a string (e.g. query &lt;code&gt;&amp;lt;my-component #cmp&amp;gt;&amp;lt;/my-component&amp;gt;&lt;/code&gt; with &lt;code&gt;@&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;('cmp')&lt;/code&gt;)</source>
          <target state="translated">模板引用变量作为字符串（例如，使用 &lt;code&gt;@&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;('cmp')&lt;/code&gt; &lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;（'cmp'）查询 &lt;code&gt;&amp;lt;my-component #cmp&amp;gt;&amp;lt;/my-component&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a64371e181e13f663c10dd5156afe9284379b619" translate="yes" xml:space="preserve">
          <source>A template statement &lt;em&gt;has a side effect&lt;/em&gt;. That's the whole point of an event. It's how you update application state from user action.</source>
          <target state="translated">模板语句&lt;em&gt;有副作用&lt;/em&gt;。这就是事件的重点。这是通过用户操作更新应用程序状态的方式。</target>
        </trans-unit>
        <trans-unit id="057331b0bba82c6918603985ae29364ad82f9aad" translate="yes" xml:space="preserve">
          <source>A template string</source>
          <target state="translated">一个模板字符串</target>
        </trans-unit>
        <trans-unit id="44907ef29b35716829be6e0df33741d8a03a2331" translate="yes" xml:space="preserve">
          <source>A template to show if the condition expression evaluates to false.</source>
          <target state="translated">用于显示条件表达式是否为false的模板。</target>
        </trans-unit>
        <trans-unit id="e5e7d10908e311e46e226f49b73a51107d39d05e" translate="yes" xml:space="preserve">
          <source>A template to show if the condition expression evaluates to true.</source>
          <target state="translated">一个模板,用于显示条件表达式是否为真。</target>
        </trans-unit>
        <trans-unit id="082f2b84e3cf46271310c2eefe1584ca33c55ef0" translate="yes" xml:space="preserve">
          <source>A template with no substitutions</source>
          <target state="translated">一个没有替换的模板</target>
        </trans-unit>
        <trans-unit id="11a65ba35becc62fa80f1bb7d7ca46f919cd6a55" translate="yes" xml:space="preserve">
          <source>A template with substitutions</source>
          <target state="translated">一个带替换的模板</target>
        </trans-unit>
        <trans-unit id="d55dc070f82d41692707274fa414fd9f75b4f218" translate="yes" xml:space="preserve">
          <source>A test cannot get to child injector services from the fixture injector. And &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt; can't configure them either.</source>
          <target state="translated">测试无法从夹具注入器获得子注入器服务。而且 &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt; 也无法配置它们。</target>
        </trans-unit>
        <trans-unit id="3396b2f93458c83e5c6436663b0c4629c04034fb" translate="yes" xml:space="preserve">
          <source>A test file for the &lt;code&gt;HeroDetailComponent&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;HeroDetailComponent&lt;/code&gt; 类的测试文件。</target>
        </trans-unit>
        <trans-unit id="5b2009af28e4f188315adb0666f75bfca6c5c409" translate="yes" xml:space="preserve">
          <source>A timezone offset (such as &lt;code&gt;'+0430'&lt;/code&gt;), or a standard UTC/GMT or continental US timezone abbreviation. When not supplied, uses the end-user's local system timezone.</source>
          <target state="translated">时区偏移量（例如 &lt;code&gt;'+0430'&lt;/code&gt; ），或者是标准UTC / GMT或美国大陆时区的缩写。如果未提供，则使用最终用户的本地系统时区。</target>
        </trans-unit>
        <trans-unit id="3431cf9e8ee99a6d7d9fd3952d9c908a92bcfaba" translate="yes" xml:space="preserve">
          <source>A token for third-party components that can register themselves with NgProbe.</source>
          <target state="translated">第三方组件可以在NgProbe注册的令牌。</target>
        </trans-unit>
        <trans-unit id="0a3fbe53af4b12fee9f2a0eafc013a35704bbb6c" translate="yes" xml:space="preserve">
          <source>A token that indicates an opaque platform id.</source>
          <target state="translated">表示不透明平台ID的令牌。</target>
        </trans-unit>
        <trans-unit id="dc797053d7adf8d5699b3d3c81f1fe17f0afb422" translate="yes" xml:space="preserve">
          <source>A token which indicates the root directory of the application</source>
          <target state="translated">表示应用程序根目录的标记。</target>
        </trans-unit>
        <trans-unit id="750533e8c4c0470f8b0ed496f42ee55152feb250" translate="yes" xml:space="preserve">
          <source>A tool for implementing &lt;a href=&quot;glossary#server-side-rendering&quot;&gt;server-side rendering&lt;/a&gt; of an Angular application. When integrated with an app, Universal generates and serves static pages on the server in response to requests from browsers. The initial static page serves as a fast-loading placeholder while the full application is being prepared for normal execution in the browser.</source>
          <target state="translated">用于实现Angular应用程序的&lt;a href=&quot;glossary#server-side-rendering&quot;&gt;服务器端渲染&lt;/a&gt;的工具。与应用程序集成后，Universal会响应浏览器的请求在服务器上生成并提供静态页面。当整个应用程序准备在浏览器中正常执行时，初始静态页面将用作快速加载的占位符。</target>
        </trans-unit>
        <trans-unit id="86777609ab9ebd69c3463a9cbae4498b9a7f9dba" translate="yes" xml:space="preserve">
          <source>A tool that configures and implements navigation among states and &lt;a href=&quot;glossary#view&quot;&gt;views&lt;/a&gt; within an Angular app.</source>
          <target state="translated">在Angular应用程序中配置和实现状态和&lt;a href=&quot;glossary#view&quot;&gt;视图&lt;/a&gt;之间导航的工具。</target>
        </trans-unit>
        <trans-unit id="c54f42d3f2be1b7a7ae5c194f6735dcf1a14ce7e" translate="yes" xml:space="preserve">
          <source>A transformation is represented by an &lt;code&gt;Action&lt;/code&gt;. There are four action types: &lt;code&gt;&lt;a href=&quot;schematics-authoring&quot;&gt;Create&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;Rename&lt;/code&gt;, &lt;code&gt;Overwrite&lt;/code&gt;, and &lt;code&gt;Delete&lt;/code&gt;.</source>
          <target state="translated">转换由 &lt;code&gt;Action&lt;/code&gt; 表示。有四种操作类型： &lt;code&gt;&lt;a href=&quot;schematics-authoring&quot;&gt;Create&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;Rename&lt;/code&gt; ， &lt;code&gt;Overwrite&lt;/code&gt; 和 &lt;code&gt;Delete&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1cb3643786137426ab03452ee4b52f1154d1746" translate="yes" xml:space="preserve">
          <source>A transition of &lt;code&gt;* =&amp;gt; void&lt;/code&gt; applies when the element leaves a view, regardless of what state it was in before it left.</source>
          <target state="translated">当元素离开视图时，将应用 &lt;code&gt;* =&amp;gt; void&lt;/code&gt; 过渡，而不管元素离开之前处于什么状态。</target>
        </trans-unit>
        <trans-unit id="05cb012e28ee419aa65bdc4e6520a11fc4ae45fa" translate="yes" xml:space="preserve">
          <source>A transition of &lt;code&gt;void =&amp;gt; *&lt;/code&gt; applies when the element enters a view, regardless of what state it assumes when entering.</source>
          <target state="translated">&lt;code&gt;void =&amp;gt; *&lt;/code&gt; 过渡适用于元素进入视图时，无论其进入时处于什么状态。</target>
        </trans-unit>
        <trans-unit id="6e59e7be860571130a89e00f1b9b8b7f8d38f516" translate="yes" xml:space="preserve">
          <source>A tree of related views that can be acted on as a unit. The root view is a component's &lt;em&gt;host view&lt;/em&gt;. A host view can be the root of a tree of &lt;em&gt;embedded views&lt;/em&gt;, collected in a &lt;em&gt;view container&lt;/em&gt; (&lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt;) attached to an anchor element in the hosting component. The view hierarchy is a key part of Angular change detection.</source>
          <target state="translated">可以作为一个整体作用的相关视图树。根视图是组件的&lt;em&gt;宿主视图&lt;/em&gt;。宿主视图可以是&lt;em&gt;嵌入视图&lt;/em&gt;树的根，该树收集在&lt;em&gt;视图容器&lt;/em&gt;（ &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; ）中，该&lt;em&gt;容器&lt;/em&gt;附加到宿主组件中的锚点元素。视图层次结构是Angular变化检测的关键部分。</target>
        </trans-unit>
        <trans-unit id="a02ea2a87c37f17abc59ef229c4fd425acb9c7da" translate="yes" xml:space="preserve">
          <source>A type describing supported iterable types.</source>
          <target state="translated">一个描述支持的可迭代类型的类型。</target>
        </trans-unit>
        <trans-unit id="33e690ef836ea3f977ab4c03c92edfc886056a6d" translate="yes" xml:space="preserve">
          <source>A type which has an &lt;code&gt;InjectorDef&lt;/code&gt; static field.</source>
          <target state="translated">具有 &lt;code&gt;InjectorDef&lt;/code&gt; 静态字段的类型。</target>
        </trans-unit>
        <trans-unit id="ae35e25b3a17753868983fbc14ff9da764e93c33" translate="yes" xml:space="preserve">
          <source>A type-safe key to use with &lt;code&gt;&lt;a href=&quot;platform-browser/transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;platform-browser/transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; 一起使用的类型安全密钥。</target>
        </trans-unit>
        <trans-unit id="a94b413e4eb2a589981d65abc4b675155b3b29ec" translate="yes" xml:space="preserve">
          <source>A type-safe key to use with &lt;code&gt;&lt;a href=&quot;transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;transferstate&quot;&gt;TransferState&lt;/a&gt;&lt;/code&gt; 一起使用的类型安全密钥。</target>
        </trans-unit>
        <trans-unit id="0d98ac55299036bd42506b5415a7d31cbe5c1907" translate="yes" xml:space="preserve">
          <source>A typical Angular &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; has two properties:</source>
          <target state="translated">典型的Angular &lt;code&gt;&lt;a href=&quot;../api/router/route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; 具有两个属性：</target>
        </trans-unit>
        <trans-unit id="24a4ca795d901e7c49a75e02fe55ebd39322b087" translate="yes" xml:space="preserve">
          <source>A typical application has multiple &lt;em&gt;feature areas&lt;/em&gt;, each dedicated to a particular business purpose.</source>
          <target state="translated">典型的应用程序具有多个&lt;em&gt;功能区域&lt;/em&gt;，每个&lt;em&gt;功能区域&lt;/em&gt;都专用于特定的业务目的。</target>
        </trans-unit>
        <trans-unit id="26787fe4fae606ede8cac23bac2c0cb951bed0bf" translate="yes" xml:space="preserve">
          <source>A typical approach is to divide the setup logic into two separate &lt;code&gt;beforeEach()&lt;/code&gt; functions:</source>
          <target state="translated">一种典型的方法是将设置逻辑分为两个单独的 &lt;code&gt;beforeEach()&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="7c474d7be28289c26fb2cb0462ed89fae7757973" translate="yes" xml:space="preserve">
          <source>A typical document is divided into sections.</source>
          <target state="translated">一个典型的文件分为几个部分。</target>
        </trans-unit>
        <trans-unit id="b5b9f703ac80e450aa4a443b41089755919ef872" translate="yes" xml:space="preserve">
          <source>A typical observable creates a new, independent execution for each subscribed observer. When an observer subscribes, the observable wires up an event handler and delivers values to that observer. When a second observer subscribes, the observable then wires up a new event handler and delivers values to that second observer in a separate execution.</source>
          <target state="translated">一个典型的observable为每个被订阅的观察者创建一个新的、独立的执行。当一个观察者订阅时,观察者会连接一个事件处理程序,并将值传递给该观察者。当第二个观察者订阅时,可观察者会连接一个新的事件处理程序,并在一个单独的执行中向第二个观察者传递值。</target>
        </trans-unit>
        <trans-unit id="7eabee7b22161b44ff415f2896826a49c8a000d0" translate="yes" xml:space="preserve">
          <source>A unique ID that the router assigns to every router navigation.</source>
          <target state="translated">路由器分配给每个路由器导航的唯一ID。</target>
        </trans-unit>
        <trans-unit id="29e9cf47b6056f1b3b0cda3416faf873adbe8c8e" translate="yes" xml:space="preserve">
          <source>A unique identifying string for the new renderer, used when creating unique styles for encapsulation.</source>
          <target state="translated">新渲染器的唯一标识字符串,用于为封装创建唯一样式时。</target>
        </trans-unit>
        <trans-unit id="f3182da4f20c4f27c308548ad05030cad96917d2" translate="yes" xml:space="preserve">
          <source>A unique object used for retrieving items from the &lt;a href=&quot;core/reflectiveinjector&quot;&gt;&lt;code&gt;ReflectiveInjector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于从&lt;a href=&quot;core/reflectiveinjector&quot;&gt; &lt;code&gt;ReflectiveInjector&lt;/code&gt; &lt;/a&gt;检索项目的唯一对象。</target>
        </trans-unit>
        <trans-unit id="4a0d2765e60989cc727ab39d030ef625be61f3b9" translate="yes" xml:space="preserve">
          <source>A unique object used for retrieving items from the &lt;a href=&quot;reflectiveinjector&quot;&gt;&lt;code&gt;ReflectiveInjector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于从&lt;a href=&quot;reflectiveinjector&quot;&gt; &lt;code&gt;ReflectiveInjector&lt;/code&gt; &lt;/a&gt;检索项目的唯一对象。</target>
        </trans-unit>
        <trans-unit id="fcec1b9a7310dc3bbc9f1127516c0c07560407ac" translate="yes" xml:space="preserve">
          <source>A user-defined event.</source>
          <target state="translated">一个用户定义的事件。</target>
        </trans-unit>
        <trans-unit id="47141a912c3b81d6dba9a3002b028c3101fe15d6" translate="yes" xml:space="preserve">
          <source>A validator is a function that processes a &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; or collection of controls and returns an error map or null. A null map means that validation has passed.</source>
          <target state="translated">验证器是处理 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 或控件集合并返回错误映射或null的函数。空映射表示验证已通过。</target>
        </trans-unit>
        <trans-unit id="92f5a26322860fd17d5f20b77b21fc93ff771bd2" translate="yes" xml:space="preserve">
          <source>A value of any type to convert into a JSON-format string.</source>
          <target state="translated">任何类型的值都可以转换为JSON格式的字符串。</target>
        </trans-unit>
        <trans-unit id="42ec4d1e4e503f137f8b089944e907a8be6250c1" translate="yes" xml:space="preserve">
          <source>A view container instance can contain other view containers, creating a &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;view hierarchy&lt;/a&gt;.</source>
          <target state="translated">视图容器实例可以包含其他视图容器，从而创建&lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;视图层次结构&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c584c12a9194e47599b4dcef87afa7f889356068" translate="yes" xml:space="preserve">
          <source>A view hierarchy can include views from components in the same NgModule, but it also can (and often does) include views from components that are defined in different NgModules.</source>
          <target state="translated">视图层次结构可以包括来自同一NgModule中的组件的视图,但也可以(通常也是)包括来自不同NgModule中定义的组件的视图。</target>
        </trans-unit>
        <trans-unit id="8985a30015f187d6df9a40f361288d108a8e8f30" translate="yes" xml:space="preserve">
          <source>A view is specifically represented by a &lt;code&gt;&lt;a href=&quot;../api/core/viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; instance associated with the component. A view that belongs to a component is called a &lt;em&gt;host view&lt;/em&gt;. Views are typically collected into &lt;a href=&quot;glossary#view-tree&quot;&gt;view hierarchies&lt;/a&gt;.</source>
          <target state="translated">一个视图由与该组件关联的 &lt;code&gt;&lt;a href=&quot;../api/core/viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; 实例专门表示。属于组件的&lt;em&gt;视图&lt;/em&gt;称为&lt;em&gt;主机视图&lt;/em&gt;。通常将&lt;a href=&quot;glossary#view-tree&quot;&gt;视图&lt;/a&gt;收集到视图层次结构中。</target>
        </trans-unit>
        <trans-unit id="e744a48c4fc96b96af3c0831c0429217d4b218d0" translate="yes" xml:space="preserve">
          <source>A way to group related &lt;a href=&quot;npm-packages&quot;&gt;npm packages&lt;/a&gt;. NgModules are delivered within scoped packages whose names begin with the Angular &lt;em&gt;scope name&lt;/em&gt;&lt;code&gt;@angular&lt;/code&gt;. For example, &lt;code&gt;@angular/core&lt;/code&gt;, &lt;code&gt;@angular/common&lt;/code&gt;, &lt;code&gt;@angular/forms&lt;/code&gt;, and &lt;code&gt;@angular/router&lt;/code&gt;.</source>
          <target state="translated">一种对相关&lt;a href=&quot;npm-packages&quot;&gt;npm软件包&lt;/a&gt;进行分组的方法。NgModules在作用域包中交付，作用域包的名称以Angular &lt;em&gt;作用域名称&lt;/em&gt; &lt;code&gt;@angular&lt;/code&gt; 开头。例如， &lt;code&gt;@angular/core&lt;/code&gt; ， &lt;code&gt;@angular/common&lt;/code&gt; ， &lt;code&gt;@angular/forms&lt;/code&gt; 和 &lt;code&gt;@angular/router&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aea6c080165c9b1cf1ca290f294a0e1e15d1219a" translate="yes" xml:space="preserve">
          <source>A way to initialize and launch an app or system.</source>
          <target state="translated">一种初始化和启动应用程序或系统的方式。</target>
        </trans-unit>
        <trans-unit id="7de84fa517d0600bd34fbe77f23fae98b2c2394a" translate="yes" xml:space="preserve">
          <source>A web platform feature, currently supported by most browsers and available in other browsers through polyfills (see &lt;a href=&quot;browser-support&quot;&gt;Browser support&lt;/a&gt;).</source>
          <target state="translated">Web平台功能，目前大多数浏览器都支持，并且可以通过polyfill在其他浏览器中使用（请参阅&lt;a href=&quot;browser-support&quot;&gt;浏览器支持&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0491ffa865b132d34096600025fe291f6f649744" translate="yes" xml:space="preserve">
          <source>A widget module makes components, directives, and pipes available to external modules. Many third-party UI component libraries are widget modules.</source>
          <target state="translated">小组件模块使组件、指令和管道可供外部模块使用。许多第三方UI组件库都是widget模块。</target>
        </trans-unit>
        <trans-unit id="c123c286126cb911939d4328d7538af26bafd125" translate="yes" xml:space="preserve">
          <source>A widget module should consist entirely of declarations, most of them exported.</source>
          <target state="translated">一个widget模块应该完全由声明组成,其中大部分是导出的。</target>
        </trans-unit>
        <trans-unit id="d1363cd47892a9e54fc21353cc398b80d7bfd896" translate="yes" xml:space="preserve">
          <source>A widget module should rarely have providers.</source>
          <target state="translated">一个小部件模块应该很少有提供者。</target>
        </trans-unit>
        <trans-unit id="0082cc99be7ad2573dfa020b500df472d84044de" translate="yes" xml:space="preserve">
          <source>A wrapper around a native element inside of a View.</source>
          <target state="translated">视图中原生元素的包装器。</target>
        </trans-unit>
        <trans-unit id="569a153621b06d91c3e611e12a0d1a67f46c9acd" translate="yes" xml:space="preserve">
          <source>A wrapper around an NgModule that associates it with the providers.</source>
          <target state="translated">围绕NgModule的一个包装器,将其与提供者关联起来。</target>
        </trans-unit>
        <trans-unit id="a0a181daba184ac420bae95b36b395b6c75dbb20" translate="yes" xml:space="preserve">
          <source>A wrapper around the &lt;code&gt;XMLHttpRequest&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;XMLHttpRequest&lt;/code&gt; 构造函数的包装器。</target>
        </trans-unit>
        <trans-unit id="75bb7803f168acde23c0c49a75c88932db96fef8" translate="yes" xml:space="preserve">
          <source>A yes or no question; ideal for Boolean options.</source>
          <target state="translated">是或否的问题;非常适合布尔选项。</target>
        </trans-unit>
        <trans-unit id="9380472e5eeed9e1a820e4f9a691e60741cf67bc" translate="yes" xml:space="preserve">
          <source>A zone client can take action before and after an async operation completes.</source>
          <target state="translated">区客户端可以在异步操作完成之前和之后采取行动。</target>
        </trans-unit>
        <trans-unit id="6d95c1847219c633950f8f1ceca9761315abfc19" translate="yes" xml:space="preserve">
          <source>AD</source>
          <target state="translated">AD</target>
        </trans-unit>
        <trans-unit id="1457b381fbb905cddb3d309bf2f4371efb24967b" translate="yes" xml:space="preserve">
          <source>ANALYZE_FOR_ENTRY_COMPONENTS</source>
          <target state="translated">ANALYZE_FOR_ENTRY_COMPONENTS</target>
        </trans-unit>
        <trans-unit id="2b8ac4ee175e506d03dd47a6d47d857b5404a60d" translate="yes" xml:space="preserve">
          <source>ANIMATION_MODULE_TYPE</source>
          <target state="translated">ANIMATION_MODULE_TYPE</target>
        </trans-unit>
        <trans-unit id="9e0fc4041d028fe347fad5a2d9a2729531ddfbdf" translate="yes" xml:space="preserve">
          <source>AOT Diagnostic messages</source>
          <target state="translated">AOT诊断信息</target>
        </trans-unit>
        <trans-unit id="a6ce97b9cd64e5df34ac5b291f41f70ac7fbb820" translate="yes" xml:space="preserve">
          <source>AOT compilation with Ivy is faster and should be used by default. In the &lt;code&gt;angular.json&lt;/code&gt; workspace configuration file, set the default build options for your project to always use AOT compilation.</source>
          <target state="translated">使用Ivy的AOT编译速度更快，默认情况下应使用。在 &lt;code&gt;angular.json&lt;/code&gt; 工作区配置文件中，将项目的默认构建选项设置为始终使用AOT编译。</target>
        </trans-unit>
        <trans-unit id="fb9ad954685895e815ce7f2a24207d6e334321af" translate="yes" xml:space="preserve">
          <source>AOT compile the hybrid app</source>
          <target state="translated">AOT编译混合应用程序</target>
        </trans-unit>
        <trans-unit id="7defd4c0d43ba96bdc1455de9f1d62e39a502a4f" translate="yes" xml:space="preserve">
          <source>AOT needs to load any AngularJS files that are in the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags in the AngularJS &lt;code&gt;index.html&lt;/code&gt;. An easy way to copy them is to add each to the &lt;code&gt;copy-dist-files.js&lt;/code&gt; file.</source>
          <target state="translated">AOT需要加载AngularJS &lt;code&gt;index.html&lt;/code&gt; 的 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记中的所有AngularJS文件。一种简单的复制方法是将它们添加到 &lt;code&gt;copy-dist-files.js&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="9e0c33812161cfe4887e0c04f78c15bd5e61ff42" translate="yes" xml:space="preserve">
          <source>API or Feature</source>
          <target state="translated">API或功能</target>
        </trans-unit>
        <trans-unit id="24be048b8aaf0aecd39a25ebabd04a1dfbbff1a4" translate="yes" xml:space="preserve">
          <source>APP SUPPORT FILES</source>
          <target state="translated">APP支持文件</target>
        </trans-unit>
        <trans-unit id="b8dd61424a1e8acf7ab12bf422537b7caa2d8a51" translate="yes" xml:space="preserve">
          <source>APPLICATION-SPECIFIC CONFIG FILES</source>
          <target state="translated">应用-特定配置文件</target>
        </trans-unit>
        <trans-unit id="7838fa4fc1d83550cc50eefcb69cbd49986dec3b" translate="yes" xml:space="preserve">
          <source>APP_BASE_HREF</source>
          <target state="translated">APP_BASE_HREF</target>
        </trans-unit>
        <trans-unit id="e3f9a5cb4b1bf9f7b5e4a1785e57db0e2f3d3875" translate="yes" xml:space="preserve">
          <source>APP_BOOTSTRAP_LISTENER</source>
          <target state="translated">APP_BOOTSTRAP_LISTENER</target>
        </trans-unit>
        <trans-unit id="4f6efcda7c9b006c9c3205c1c2a919389bca11e9" translate="yes" xml:space="preserve">
          <source>APP_ID</source>
          <target state="translated">APP_ID</target>
        </trans-unit>
        <trans-unit id="367132b55d2d5e5d02cd3daf8fe2432e965920f5" translate="yes" xml:space="preserve">
          <source>APP_INITIALIZER</source>
          <target state="translated">APP_INITIALIZER</target>
        </trans-unit>
        <trans-unit id="eb73501aa2a666ce6cdb48a50e68af7107aae3af" translate="yes" xml:space="preserve">
          <source>ARIA specification and authoring practices</source>
          <target state="translated">ARIA规格和编写做法</target>
        </trans-unit>
        <trans-unit id="9cfd34f083e5ba936648207be86e862772727935" translate="yes" xml:space="preserve">
          <source>ASP.NET 4.x Project</source>
          <target state="translated">ASP.NET 4.x项目</target>
        </trans-unit>
        <trans-unit id="c34da2b2d91c5e754231cd2ed1aab8be5964f186" translate="yes" xml:space="preserve">
          <source>AUTO_STYLE</source>
          <target state="translated">AUTO_STYLE</target>
        </trans-unit>
        <trans-unit id="f929923568568a4da2be1535144326032933ceb7" translate="yes" xml:space="preserve">
          <source>Abbreviated</source>
          <target state="translated">Abbreviated</target>
        </trans-unit>
        <trans-unit id="feaebecb323d018f6b3268b9f60b3217020dd1c5" translate="yes" xml:space="preserve">
          <source>Abide by the unidirectional data flow rule</source>
          <target state="translated">遵守单向数据流规则。</target>
        </trans-unit>
        <trans-unit id="eb504ba616a4717b3ecb24820c6b3de4e3cc9b0d" translate="yes" xml:space="preserve">
          <source>About this guide</source>
          <target state="translated">关于本指南</target>
        </trans-unit>
        <trans-unit id="0a9143d47fb8f5c8ce72c187dbb4f2c8bedf3de9" translate="yes" xml:space="preserve">
          <source>Absolutely.</source>
          <target state="translated">Absolutely.</target>
        </trans-unit>
        <trans-unit id="0f7874c26836804debef6beaae8a9b411cc84311" translate="yes" xml:space="preserve">
          <source>AbstractControl</source>
          <target state="translated">AbstractControl</target>
        </trans-unit>
        <trans-unit id="95b5294224d9b3b7ee74690ec2ba8150fa28a063" translate="yes" xml:space="preserve">
          <source>AbstractControlDirective</source>
          <target state="translated">AbstractControlDirective</target>
        </trans-unit>
        <trans-unit id="a85cd1fc05d53f5f528e32f0696603068e07725e" translate="yes" xml:space="preserve">
          <source>AbstractControlOptions</source>
          <target state="translated">AbstractControlOptions</target>
        </trans-unit>
        <trans-unit id="d9c4da7c847756ecf47d6e7661a78796ecc6932b" translate="yes" xml:space="preserve">
          <source>AbstractFormGroupDirective</source>
          <target state="translated">AbstractFormGroupDirective</target>
        </trans-unit>
        <trans-unit id="8da95c3112e20bafa962dd96d67921e23da58f48" translate="yes" xml:space="preserve">
          <source>AbstractType</source>
          <target state="translated">AbstractType</target>
        </trans-unit>
        <trans-unit id="59a3413d743eddad76795b85c491b59c6c8853f4" translate="yes" xml:space="preserve">
          <source>Abstraction on top of APIs</source>
          <target state="translated">在API之上的抽象化</target>
        </trans-unit>
        <trans-unit id="a817b1091a9c22ad081e2de21e641873685f98ae" translate="yes" xml:space="preserve">
          <source>Accepts an optional argument that moves the virtual clock forward by the specified number of milliseconds, clearing asynchronous activities scheduled within that timeframe. See &lt;a href=&quot;testing#tick&quot;&gt;discussion above&lt;/a&gt;.</source>
          <target state="translated">接受一个可选参数，该参数将虚拟时钟向前移动指定的毫秒数，以清除在该时间范围内安排的异步活动。参见&lt;a href=&quot;testing#tick&quot;&gt;上面的讨论&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d4ddc28b3740e2c984f99503c7979b4c9792440" translate="yes" xml:space="preserve">
          <source>Access a &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; instance by placing a directive on an &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element (or directive prefixed with &lt;code&gt;*&lt;/code&gt;). The &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; for the embedded view is injected into the constructor of the directive, using the &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; token.</source>
          <target state="translated">通过在 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; 元素上放置指令（或以 &lt;code&gt;*&lt;/code&gt; 开头的指令）来访问 &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; 实例。使用 &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; 令牌，将嵌入式视图的 &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; 注入到指令的构造函数中。</target>
        </trans-unit>
        <trans-unit id="4fe9f9569ccd9b850020bd4b68cd44cf94f2bea4" translate="yes" xml:space="preserve">
          <source>Access individual controls in the group</source>
          <target state="translated">访问组中的单个控件</target>
        </trans-unit>
        <trans-unit id="e8452e7ba1da7691017f4ee4304fc673e6f0bb4a" translate="yes" xml:space="preserve">
          <source>Access the &lt;code&gt;&lt;a href=&quot;viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; of an element by placing a &lt;code&gt;&lt;a href=&quot;directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; injected with &lt;code&gt;&lt;a href=&quot;viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; on the element, or use a &lt;code&gt;&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt; query.</source>
          <target state="translated">访问 &lt;code&gt;&lt;a href=&quot;viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; 一个元件的放置一个 &lt;code&gt;&lt;a href=&quot;directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 注射 &lt;code&gt;&lt;a href=&quot;viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; 在元件上，或者使用一个 &lt;code&gt;&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;&lt;/code&gt; 查询。</target>
        </trans-unit>
        <trans-unit id="ce12460889befb2c6aeea85d232ba50839031e52" translate="yes" xml:space="preserve">
          <source>Access the component instance through the fixture and confirm it exists with a Jasmine expectation:</source>
          <target state="translated">通过夹具访问组件实例,并以茉莉花期望确认其存在。</target>
        </trans-unit>
        <trans-unit id="65af474c2ce5a9f03ce39c585f67f4a85352d27c" translate="yes" xml:space="preserve">
          <source>Access the event object with the &lt;code&gt;$event&lt;/code&gt; argument passed to the output event handler:</source>
          <target state="translated">通过传递给输出事件处理程序的 &lt;code&gt;$event&lt;/code&gt; 参数访问事件对象：</target>
        </trans-unit>
        <trans-unit id="377065746e81f30b11ac698cada8b989e39c4a25" translate="yes" xml:space="preserve">
          <source>Access the group by name</source>
          <target state="translated">通过名称访问该组</target>
        </trans-unit>
        <trans-unit id="cd53bbcc3ef555cef8aef4cd3865d30e34e01e3b" translate="yes" xml:space="preserve">
          <source>Accessibility - Google Web Fundamentals</source>
          <target state="translated">无障碍-谷歌网络基础知识</target>
        </trans-unit>
        <trans-unit id="69aa472d0ca05d859e2569266226a800dc96ebee" translate="yes" xml:space="preserve">
          <source>Accessibility Resources and Code Examples</source>
          <target state="translated">无障碍资源和代码示例</target>
        </trans-unit>
        <trans-unit id="c76a505ae270ff75148ad28548783d5d27bdc1f8" translate="yes" xml:space="preserve">
          <source>Accessibility attributes</source>
          <target state="translated">无障碍属性</target>
        </trans-unit>
        <trans-unit id="109b3888496c6d4d396c3784a78f2ef96407235a" translate="yes" xml:space="preserve">
          <source>Accessibility in Angular</source>
          <target state="translated">Angular中的可访问性</target>
        </trans-unit>
        <trans-unit id="50c48bd5b8278d51c8a1d76f35a5de300302f98d" translate="yes" xml:space="preserve">
          <source>Accordingly, a routing guard can return an &lt;code&gt;Observable&amp;lt;boolean&amp;gt;&lt;/code&gt; or a &lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt; and the router will wait for the observable to resolve to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">因此，路由防护可以返回 &lt;code&gt;Observable&amp;lt;boolean&amp;gt;&lt;/code&gt; 或 &lt;code&gt;Promise&amp;lt;boolean&amp;gt;&lt;/code&gt; ，路由器将等待observable解析为 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe7ef692ecf6fbf5ffd81dba5751890fa9bec6e7" translate="yes" xml:space="preserve">
          <source>Accordingly, the &lt;em&gt;link parameters array&lt;/em&gt; has &lt;em&gt;two&lt;/em&gt; items: the routing &lt;em&gt;path&lt;/em&gt; and a &lt;em&gt;route parameter&lt;/em&gt; that specifies the &lt;code&gt;id&lt;/code&gt; of the selected hero.</source>
          <target state="translated">因此，&lt;em&gt;链接参数数组&lt;/em&gt;具有&lt;em&gt;两项&lt;/em&gt;：路由&lt;em&gt;路径&lt;/em&gt;和用于指定所选英雄的 &lt;code&gt;id&lt;/code&gt; 的&lt;em&gt;路由参数&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="307094c1dc908f6f3886b8acb63db299f5b02050" translate="yes" xml:space="preserve">
          <source>Acquire the hero with that &lt;code&gt;id&lt;/code&gt; from the server via the &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">通过 &lt;code&gt;HeroService&lt;/code&gt; 从服务器获取具有该 &lt;code&gt;id&lt;/code&gt; 的英雄</target>
        </trans-unit>
        <trans-unit id="82870c0cce5897721a9489d5d73fb0c52839cf70" translate="yes" xml:space="preserve">
          <source>Activated route</source>
          <target state="translated">激活的途径</target>
        </trans-unit>
        <trans-unit id="794c493d158037b9698e41b416ae5ef5793dac99" translate="yes" xml:space="preserve">
          <source>ActivatedRoute</source>
          <target state="translated">ActivatedRoute</target>
        </trans-unit>
        <trans-unit id="6add898d4d5413d812feee7c890c5421a4b7149b" translate="yes" xml:space="preserve">
          <source>ActivatedRoute params and queryParams properties</source>
          <target state="translated">ActivatedRoute params和queryParams属性</target>
        </trans-unit>
        <trans-unit id="2bd22a4d53b9c97bd663bdbc8791d94b18d02f28" translate="yes" xml:space="preserve">
          <source>ActivatedRouteSnapshot</source>
          <target state="translated">ActivatedRouteSnapshot</target>
        </trans-unit>
        <trans-unit id="204b72e97c4752ded21a3362fdcde4b2639b4293" translate="yes" xml:space="preserve">
          <source>Activates a reusable animation. Used with &lt;code&gt;&lt;a href=&quot;../api/animations/animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">激活可重复使用的动画。与 &lt;code&gt;&lt;a href=&quot;../api/animations/animation&quot;&gt;animation&lt;/a&gt;()&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="8e40bc92630ef5d50c6c2dfcdf9254fff9180d01" translate="yes" xml:space="preserve">
          <source>ActivationEnd</source>
          <target state="translated">ActivationEnd</target>
        </trans-unit>
        <trans-unit id="32dd68023e3907e5c24fd1583232c83b2c6e46d0" translate="yes" xml:space="preserve">
          <source>ActivationEnd`</source>
          <target state="translated">ActivationEnd`</target>
        </trans-unit>
        <trans-unit id="5c0a175ec8a530bff0295cd8daab5114e6e95235" translate="yes" xml:space="preserve">
          <source>ActivationStart</source>
          <target state="translated">ActivationStart</target>
        </trans-unit>
        <trans-unit id="a733b809d2f1233496ab516eed0f3ef75cf3791a" translate="yes" xml:space="preserve">
          <source>Active</source>
          <target state="translated">Active</target>
        </trans-unit>
        <trans-unit id="6e159832dbdf12e00bf06037be4688396deea347" translate="yes" xml:space="preserve">
          <source>Active Ends</source>
          <target state="translated">活动结束</target>
        </trans-unit>
        <trans-unit id="a5325119b52bb8168182fe50c18511f8d177a326" translate="yes" xml:space="preserve">
          <source>Active attempts to interact with the service worker, such as calling &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#checkForUpdate&quot;&gt;SwUpdate.checkForUpdate()&lt;/a&gt;&lt;/code&gt;, return rejected promises.</source>
          <target state="translated">主动尝试与服务工作者进行交互，例如调用 &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#checkForUpdate&quot;&gt;SwUpdate.checkForUpdate()&lt;/a&gt;&lt;/code&gt; ，返回被拒绝的承诺。</target>
        </trans-unit>
        <trans-unit id="a1917d94679e620038f3ead27125a83248fc69a2" translate="yes" xml:space="preserve">
          <source>Active route links cascade down through each level of the route tree, so parent and child router links can be active at the same time. To override this behavior, you can bind to the &lt;code&gt;[&lt;a href=&quot;../api/router/routerlinkactive#routerLinkActiveOptions&quot;&gt;routerLinkActiveOptions&lt;/a&gt;]&lt;/code&gt; input binding with the &lt;code&gt;{ exact: true }&lt;/code&gt; expression. By using &lt;code&gt;{ exact: true }&lt;/code&gt;, a given &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; will only be active if its URL is an exact match to the current URL.</source>
          <target state="translated">活动的路由链接向下遍历路由树的每个级别，因此父级和子级路由器链接可以同时处于活动状态。要覆盖此行为，可以使用 &lt;code&gt;{ exact: true }&lt;/code&gt; 表达式绑定到 &lt;code&gt;[&lt;a href=&quot;../api/router/routerlinkactive#routerLinkActiveOptions&quot;&gt;routerLinkActiveOptions&lt;/a&gt;]&lt;/code&gt; 输入绑定。通过使用 &lt;code&gt;{ exact: true }&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; ：true}，给定的RouterLink仅在其URL与当前URL完全匹配时才处于活动状态。</target>
        </trans-unit>
        <trans-unit id="35861d2d31d89b47d85b528c09cc715631b815d9" translate="yes" xml:space="preserve">
          <source>Active router links</source>
          <target state="translated">活动的路由器链接</target>
        </trans-unit>
        <trans-unit id="37b1c561bca580bb994b0e5d093be6ab592df8a4" translate="yes" xml:space="preserve">
          <source>Acts as a placeholder that Angular dynamically fills based on the current router state.</source>
          <target state="translated">作为一个占位符,Angular根据当前路由器状态动态填充。</target>
        </trans-unit>
        <trans-unit id="362d51e485a5ede5ae2646cf9e070ec1747d7f2c" translate="yes" xml:space="preserve">
          <source>Acts as the identity function when given a non-forward-ref value.</source>
          <target state="translated">当给定一个非前向参考值时,充当身份函数。</target>
        </trans-unit>
        <trans-unit id="396a77f5610e3812bebfa8b8db9a7c77a059e0fe" translate="yes" xml:space="preserve">
          <source>Adapter interface for retrieving the &lt;code&gt;&lt;a href=&quot;core/testability&quot;&gt;Testability&lt;/a&gt;&lt;/code&gt; service associated for a particular context.</source>
          <target state="translated">适配器接口，用于检索与特定上下文关联的 &lt;code&gt;&lt;a href=&quot;core/testability&quot;&gt;Testability&lt;/a&gt;&lt;/code&gt; 服务。</target>
        </trans-unit>
        <trans-unit id="57d55220bc209fce13be971cfa46f83d93fc4bca" translate="yes" xml:space="preserve">
          <source>Adapter interface for retrieving the &lt;code&gt;&lt;a href=&quot;testability&quot;&gt;Testability&lt;/a&gt;&lt;/code&gt; service associated for a particular context.</source>
          <target state="translated">适配器接口，用于检索与特定上下文关联的 &lt;code&gt;&lt;a href=&quot;testability&quot;&gt;Testability&lt;/a&gt;&lt;/code&gt; 服务。</target>
        </trans-unit>
        <trans-unit id="3f4a639136be5c62f45bacf8afdbec98e1d5129e" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;declarable&lt;/a&gt; classes&amp;mdash;components, directives, and pipes&amp;mdash;to a &lt;code&gt;declarations&lt;/code&gt; list.</source>
          <target state="translated">添加&lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;申报&lt;/a&gt;类组件，指令和管道到一个 &lt;code&gt;declarations&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="0048cdde3ea2a8ccae7c94a3c7465652b7d6785b" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;imports&lt;/code&gt; array of the app module (&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 添加到应用模块的 &lt;code&gt;imports&lt;/code&gt; 数组（ &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8f99cfb58142d03bb6f653ac95acc4f30459e350" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">添加 &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d4608c0294735118be24cb2d456a578029e2f1c" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;HeroService.getHero()&lt;/code&gt;</source>
          <target state="translated">添加 &lt;code&gt;HeroService.getHero()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="182b5d83f0a65e9a325c4c2db7a7c77175219e27" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;HeroService.updateHero()&lt;/code&gt;</source>
          <target state="translated">添加 &lt;code&gt;HeroService.updateHero()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e46f0329680a6f0e82967b1bf73efd1343668f0" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;PhoneDetailComponent&lt;/code&gt; component to the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;em&gt;declarations&lt;/em&gt; and &lt;em&gt;entryComponents&lt;/em&gt;:</source>
          <target state="translated">将 &lt;code&gt;PhoneDetailComponent&lt;/code&gt; 组件添加到 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;em&gt;声明&lt;/em&gt;和&lt;em&gt;entryComponents中&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="43ddfc069f86e4fd77627aa8a21d9d1ff6fa458e" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;getHeroes()&lt;/code&gt;</source>
          <target state="translated">添加 &lt;code&gt;getHeroes()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8aded543b54bcc2d04b10175a1390c9cd687831f" translate="yes" xml:space="preserve">
          <source>Add Angular and the other new dependencies to &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">将Angular和其他新依赖项添加到 &lt;code&gt;package.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="deb2eb3ba8a87a88474cb922247dab94efb0148d" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; element and, within that, an anchor element that, when clicked, triggers navigation to the &lt;code&gt;HeroesComponent&lt;/code&gt;. The revised &lt;code&gt;AppComponent&lt;/code&gt; template looks like this:</source>
          <target state="translated">添加一个 &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; 元素，并在其中添加一个锚元素，当单击该锚元素时，将触发导航到 &lt;code&gt;HeroesComponent&lt;/code&gt; 。修改后的 &lt;code&gt;AppComponent&lt;/code&gt; 模板如下所示：</target>
        </trans-unit>
        <trans-unit id="84449015e98d2c7fe2ee538001f75df10dcd526d" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; array and inject the &lt;code&gt;AnimalService&lt;/code&gt; in the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; class, too, but give &lt;code&gt;emoji&lt;/code&gt; a different value. Here, it has a value of 🐶 (puppy).</source>
          <target state="translated">添加 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 阵列和注入 &lt;code&gt;AnimalService&lt;/code&gt; 在 &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; 类也一样，但给 &lt;code&gt;emoji&lt;/code&gt; 不同的值。在这里，它的值为🐶（幼犬）。</target>
        </trans-unit>
        <trans-unit id="19eab91cf54346d4591c110eddb2a9e3fe610d00" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; array with a third animal, 🦔 (hedgehog), to the &lt;code&gt;app.component.ts&lt;/code&gt;&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; metadata:</source>
          <target state="translated">将带有第三个动物🦔（刺猬）的 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 数组添加到 &lt;code&gt;app.component.ts&lt;/code&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 元数据：</target>
        </trans-unit>
        <trans-unit id="21c3d8f9d4e4a561165b7fb36b05d17fcaaa6aee" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; provider with that factory function.</source>
          <target state="translated">使用该工厂函数添加 &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; 提供程序。</target>
        </trans-unit>
        <trans-unit id="898b1572932b2c74532c4d3ff9e91aaf920c8e7a" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&lt;/code&gt; to the shell template where views will be displayed.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&lt;/code&gt; 添加到将显示视图的shell模板中。</target>
        </trans-unit>
        <trans-unit id="4e9ef507bc9bbcaa25673401bd1c8c3768c7b26f" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;DashboardComponent&lt;/code&gt; using the CLI:</source>
          <target state="translated">使用CLI 添加 &lt;code&gt;DashboardComponent&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bde6cb9ecfe126921ce28e9ac1927149053f7c35" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;FlyingHeroesPipe&lt;/code&gt; to the &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; repeater that filters the list of heroes to just those heroes who can fly.</source>
          <target state="translated">向 &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;转发器添加一个 &lt;code&gt;FlyingHeroesPipe&lt;/code&gt; ，可将英雄列表过滤为仅能飞行的英雄。</target>
        </trans-unit>
        <trans-unit id="ebea1b8c68f8b57d6ea7ed08f19b491fdea8c3ba" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;color&lt;/code&gt; property to the &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;color&lt;/code&gt; 属性添加到 &lt;code&gt;AppComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d2845f19e415459d2b685418f253bf866faaae0" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;confirm()&lt;/code&gt; method to the &lt;code&gt;DialogService&lt;/code&gt; to prompt the user to confirm their intent. The &lt;code&gt;window.confirm&lt;/code&gt; is a &lt;em&gt;blocking&lt;/em&gt; action that displays a modal dialog and waits for user interaction.</source>
          <target state="translated">向对话框服务中添加一个 &lt;code&gt;DialogService&lt;/code&gt; &lt;code&gt;confirm()&lt;/code&gt; 方法，以提示用户确认其意图。所述 &lt;code&gt;window.confirm&lt;/code&gt; 是一个&lt;em&gt;阻塞&lt;/em&gt;的行动，显示模态对话框和用于用户交互的等待。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b557d38d8fd3a5d1bbdd3ec8cdee76d8578c406" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;crisis-center&lt;/code&gt; route to the &lt;code&gt;AppRoutingModule&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;crisis-center&lt;/code&gt; 路线添加到 &lt;code&gt;AppRoutingModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5094eea4018e25225f0949e73b6925ca16ebd3f" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;getHeroes&lt;/code&gt; method to return the &lt;em&gt;mock heroes&lt;/em&gt;.</source>
          <target state="translated">添加 &lt;code&gt;getHeroes&lt;/code&gt; 方法以返回&lt;em&gt;模拟英雄&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d89939689ff55adc6378e0312ee22d86c2aa3cc4" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;goBack()&lt;/code&gt;&lt;em&gt;method&lt;/em&gt; to the component class that navigates backward one step in the browser's history stack using the &lt;code&gt;&lt;a href=&quot;../api/common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; service that you &lt;a href=&quot;toh-pt5#hero-detail-ctor&quot;&gt;injected previously&lt;/a&gt;.</source>
          <target state="translated">向组件类中添加 &lt;code&gt;goBack()&lt;/code&gt; &lt;em&gt;方法&lt;/em&gt;，该&lt;em&gt;方法&lt;/em&gt;使用您&lt;a href=&quot;toh-pt5#hero-detail-ctor&quot;&gt;先前注入&lt;/a&gt;的 &lt;code&gt;&lt;a href=&quot;../api/common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 服务在浏览器的历史记录堆栈中向后浏览一步。</target>
        </trans-unit>
        <trans-unit id="c70e30c1bf0e3c3f35945c6bb0fc4e9abc4165e2" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;hero detail&lt;/code&gt; route</source>
          <target state="translated">添加 &lt;code&gt;hero detail&lt;/code&gt; 路线</target>
        </trans-unit>
        <trans-unit id="0223569a1885b0f40d10946d1a27ca7bebab7a92" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;hero&lt;/code&gt; property</source>
          <target state="translated">添加 &lt;code&gt;hero&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="3273615e0d9f1a028c3a5cef8cc50901a513ea6d" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;hero&lt;/code&gt; property to the &lt;code&gt;HeroesComponent&lt;/code&gt; for a hero named &quot;Windstorm.&quot;</source>
          <target state="translated">将 &lt;code&gt;hero&lt;/code&gt; 属性添加到 &lt;code&gt;HeroesComponent&lt;/code&gt; 中，以获取名为&amp;ldquo; Windstorm &amp;rdquo;的英雄。</target>
        </trans-unit>
        <trans-unit id="fb815b37da4170c9251a154ccd7f101a8dd58cc3" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;hero&lt;/code&gt; property, preceded by the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorator.</source>
          <target state="translated">添加一个 &lt;code&gt;hero&lt;/code&gt; 属性，其后是 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 装饰器。</target>
        </trans-unit>
        <trans-unit id="69dd6f97661bf507742e04c4dec2321055ba1ead" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;highlightColor&lt;/code&gt; property to the directive class like this:</source>
          <target state="translated">像这样向指令类添加 &lt;code&gt;highlightColor&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="effefff8a43380c9868d530aa7177bf7e683d5be" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;name&lt;/code&gt; attribute to each form-input control.</source>
          <target state="translated">将 &lt;code&gt;name&lt;/code&gt; 属性添加到每个窗体输入控件。</target>
        </trans-unit>
        <trans-unit id="0809d1c91317af80188c3279f6943dddacff5baf" translate="yes" xml:space="preserve">
          <source>Add a &lt;em&gt;Dashboard&lt;/em&gt; view.</source>
          <target state="translated">添加&lt;em&gt;仪表板&lt;/em&gt;视图。</target>
        </trans-unit>
        <trans-unit id="4ff1fb620609d244c46e936c77a53c5496ded93f" translate="yes" xml:space="preserve">
          <source>Add a &lt;em&gt;go back&lt;/em&gt; button to the bottom of the component template and bind it to the component's &lt;code&gt;goBack()&lt;/code&gt; method.</source>
          <target state="translated">在组件模板的底部添加一个&amp;ldquo; &lt;em&gt;返回&amp;rdquo;&lt;/em&gt;按钮，并将其绑定到组件的 &lt;code&gt;goBack()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="1322afa34cceab2fcb9586335d92cdcade328a40" translate="yes" xml:space="preserve">
          <source>Add a &lt;strong&gt;&lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt; guard that only loads the &lt;code&gt;AdminModule&lt;/code&gt; once the user is logged in &lt;em&gt;and&lt;/em&gt; attempts to access the admin feature area.</source>
          <target state="translated">添加一个&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; &lt;/strong&gt;保护措施，该保护措施仅在用户登录&lt;em&gt;并&lt;/em&gt;尝试访问管理功能区域时才加载 &lt;code&gt;AdminModule&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36f9e17f822a223539dae26ca1231dffbb479235" translate="yes" xml:space="preserve">
          <source>Add a &lt;strong&gt;wildcard&lt;/strong&gt; route to intercept invalid URLs and handle them gracefully. A &lt;em&gt;wildcard&lt;/em&gt; route has a path consisting of two asterisks. It matches &lt;em&gt;every&lt;/em&gt; URL. The router will select &lt;em&gt;this&lt;/em&gt; route if it can't match a route earlier in the configuration. A wildcard route can navigate to a custom &quot;404 Not Found&quot; component or &lt;a href=&quot;router#redirect&quot;&gt;redirect&lt;/a&gt; to an existing route.</source>
          <target state="translated">添加&lt;strong&gt;通配符&lt;/strong&gt;路由以拦截无效的URL并妥善处理它们。一个&lt;em&gt;通配符&lt;/em&gt;路径具有由两个星号的路径。它匹配&lt;em&gt;每个&lt;/em&gt; URL。如果路由器与配置中较早的路由不匹配，则它将选择&lt;em&gt;此&lt;/em&gt;路由。通配符路由可以导航到自定义&amp;ldquo; 404未找到&amp;rdquo;组件或&lt;a href=&quot;router#redirect&quot;&gt;重定向&lt;/a&gt;到现有路由。</target>
        </trans-unit>
        <trans-unit id="eb9ad994a306d5e3f0dac069d6b525c6144c6e51" translate="yes" xml:space="preserve">
          <source>Add a binding to the &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; template to visualize the result:</source>
          <target state="translated">将绑定添加到 &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; 模板以可视化结果：</target>
        </trans-unit>
        <trans-unit id="185c4f471b2e40e64ba5f97bb89a83cc6b2e41f8" translate="yes" xml:space="preserve">
          <source>Add a button so users can share a product with friends. Bind the button's &lt;code&gt;click&lt;/code&gt; event to the &lt;code&gt;share()&lt;/code&gt; method (in &lt;code&gt;product-list.component.ts&lt;/code&gt;). Event binding uses a set of parentheses, &lt;code&gt;( )&lt;/code&gt;, around the event, as in the following &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element:</source>
          <target state="translated">添加按钮，以便用户可以与朋友共享产品。将按钮的 &lt;code&gt;click&lt;/code&gt; 事件绑定到 &lt;code&gt;share()&lt;/code&gt; 方法（位于 &lt;code&gt;product-list.component.ts&lt;/code&gt; 中）。事件绑定在事件周围使用一组括号 &lt;code&gt;( )&lt;/code&gt; ，如以下 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 元素所示：</target>
        </trans-unit>
        <trans-unit id="bdc953992c09d61b11a1e734a2904d5cc5a5c716" translate="yes" xml:space="preserve">
          <source>Add a button with the label &quot;Buy&quot;, and bind the &lt;code&gt;click()&lt;/code&gt; event to the &lt;code&gt;addToCart()&lt;/code&gt; method:</source>
          <target state="translated">添加带有标签&amp;ldquo; Buy&amp;rdquo;的按钮，并将 &lt;code&gt;click()&lt;/code&gt; 事件绑定到 &lt;code&gt;addToCart()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="5aa434bbd8551556eff7a3a10609f92a7b4c69c1" translate="yes" xml:space="preserve">
          <source>Add a cart component, which displays the items you added to your cart.</source>
          <target state="translated">添加一个购物车组件,显示你添加到购物车的物品。</target>
        </trans-unit>
        <trans-unit id="d7c6983360c85102afcd7cd7c6c276e29242b247" translate="yes" xml:space="preserve">
          <source>Add a click event binding</source>
          <target state="translated">添加一个点击事件绑定</target>
        </trans-unit>
        <trans-unit id="cef39296159e8e7b5c240bc8238ac9d8c6ae5109" translate="yes" xml:space="preserve">
          <source>Add a click event binding to the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; like this:</source>
          <target state="translated">将点击事件绑定添加到 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; ,如下所示：</target>
        </trans-unit>
        <trans-unit id="a822817b55404ecf7fe71067c767e4fcf31ccac2" translate="yes" xml:space="preserve">
          <source>Add a control to this form.</source>
          <target state="translated">在此表格中添加一个控件。</target>
        </trans-unit>
        <trans-unit id="cab59b94246c9a18905faa353a28be60f5eab5a2" translate="yes" xml:space="preserve">
          <source>Add a control to this group.</source>
          <target state="translated">在该组中添加一个控件。</target>
        </trans-unit>
        <trans-unit id="2d89a7d5583b52b6d6525b3b34eeef56c38af48a" translate="yes" xml:space="preserve">
          <source>Add a dashboard navigation link to the &lt;code&gt;AppComponent&lt;/code&gt; shell template, just above the &lt;em&gt;Heroes&lt;/em&gt; link.</source>
          <target state="translated">在&lt;em&gt;Heroes&lt;/em&gt;链接上方，将仪表板导航链接添加到 &lt;code&gt;AppComponent&lt;/code&gt; Shell模板。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee94227c33c07e1c24e4e5adb5f118a15e9e65a0" translate="yes" xml:space="preserve">
          <source>Add a dashboard view</source>
          <target state="translated">添加一个仪表板视图</target>
        </trans-unit>
        <trans-unit id="4e39c4f6ceec4b4b2e4e3361f85b74f7b3b28895" translate="yes" xml:space="preserve">
          <source>Add a default route</source>
          <target state="translated">增加一个默认途径</target>
        </trans-unit>
        <trans-unit id="9719bf1b8a8fa35bc215db281ad48dfa08278aab" translate="yes" xml:space="preserve">
          <source>Add a details section</source>
          <target state="translated">增加一个细节部分</target>
        </trans-unit>
        <trans-unit id="e612a293c0724c3508c59b5b89399bdae8f9a904" translate="yes" xml:space="preserve">
          <source>Add a group of controls to this form.</source>
          <target state="translated">在此表格中添加一组控件。</target>
        </trans-unit>
        <trans-unit id="020929122421e2ed06e78a6cb3615837244cecd8" translate="yes" xml:space="preserve">
          <source>Add a link from the cart page to the shipping page:</source>
          <target state="translated">从购物车页面添加一个链接到发货页面。</target>
        </trans-unit>
        <trans-unit id="1b09296091f649517aef9c1ef93b3afd99d35b64" translate="yes" xml:space="preserve">
          <source>Add a nav bar to the shell template with anchor tags, &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;routerLinkActive&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">使用锚标记， &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;routerLinkActive&lt;/a&gt;&lt;/code&gt; 指令将导航栏添加到外壳模板。</target>
        </trans-unit>
        <trans-unit id="2bbee8538ab17d504f4be598d200c8c3b2e7a0ae" translate="yes" xml:space="preserve">
          <source>Add a navigation link (&lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">添加导航链接（ &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b367e5a23e3448e784824d7af249cabb9ee76d03" translate="yes" xml:space="preserve">
          <source>Add a new hero</source>
          <target state="translated">增加一个新英雄</target>
        </trans-unit>
        <trans-unit id="40835f4ea8b193fb5050ee0b06e0a4cdd3c9dfdf" translate="yes" xml:space="preserve">
          <source>Add a private &lt;code&gt;heroService&lt;/code&gt; parameter of type &lt;code&gt;HeroService&lt;/code&gt; to the constructor.</source>
          <target state="translated">将类型 &lt;code&gt;HeroService&lt;/code&gt; 的私有 &lt;code&gt;heroService&lt;/code&gt; 参数添加到构造函数。</target>
        </trans-unit>
        <trans-unit id="4b762a4f2ebf8ababf82b0c9189c42e653747928" translate="yes" xml:space="preserve">
          <source>Add a route to the &lt;code&gt;AppRoutingModule.routes&lt;/code&gt; array that matches a path to the &lt;code&gt;DashboardComponent&lt;/code&gt;.</source>
          <target state="translated">向 &lt;code&gt;AppRoutingModule.routes&lt;/code&gt; 数组添加与 &lt;code&gt;DashboardComponent&lt;/code&gt; 的路径匹配的路由。</target>
        </trans-unit>
        <trans-unit id="ab28df382c483b738a050fc59f245b4da3452fff" translate="yes" xml:space="preserve">
          <source>Add a router outlet to tell the Angular router where to place the activated components in the DOM.</source>
          <target state="translated">添加一个路由器出口,告诉Angular路由器将激活的组件放置在DOM中的哪里。</target>
        </trans-unit>
        <trans-unit id="f6ab96d92bcf27538444f441c451dab0fe97ae2b" translate="yes" xml:space="preserve">
          <source>Add a second &lt;strong&gt;input&lt;/strong&gt; property to &lt;code&gt;HighlightDirective&lt;/code&gt; called &lt;code&gt;defaultColor&lt;/code&gt;:</source>
          <target state="translated">向 &lt;code&gt;HighlightDirective&lt;/code&gt; 中添加另一个名为 &lt;code&gt;defaultColor&lt;/code&gt; 的&lt;strong&gt;输入&lt;/strong&gt;属性：</target>
        </trans-unit>
        <trans-unit id="0360118b87d7c084a3d4de92fd385ba9d82b44a8" translate="yes" xml:space="preserve">
          <source>Add a secondary route</source>
          <target state="translated">增加一条辅助途径</target>
        </trans-unit>
        <trans-unit id="67f2d5ad7d4c0f53d3994b3037346c2b3a7dabae" translate="yes" xml:space="preserve">
          <source>Add a shipping component, which retrieves shipping prices for the items in the cart by using Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; to retrieve shipping data from a &lt;code&gt;.json&lt;/code&gt; file.</source>
          <target state="translated">添加一个运输组件，该组件通过使用Angular的 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 从 &lt;code&gt;.json&lt;/code&gt; 文件中检索运输数据来检索购物车中物品的运输价格。</target>
        </trans-unit>
        <trans-unit id="6670b3ecbb4947a0775a0511be5562a2546551aa" translate="yes" xml:space="preserve">
          <source>Add a worker creation snippet in a sibling file of the same name.</source>
          <target state="translated">在同名的兄弟文件中添加一个工人创建片段。</target>
        </trans-unit>
        <trans-unit id="8a72840865c6d30c75b7583a9277122b64be3c06" translate="yes" xml:space="preserve">
          <source>Add an &quot;Admin&quot; link to the &lt;code&gt;AppComponent&lt;/code&gt; shell so that users can get to this feature.</source>
          <target state="translated">将&amp;ldquo;管理员&amp;rdquo;链接添加到 &lt;code&gt;AppComponent&lt;/code&gt; Shell，以便用户可以使用此功能。</target>
        </trans-unit>
        <trans-unit id="a91ab35b602db9385b1ae8779a44b0cd6b1984e1" translate="yes" xml:space="preserve">
          <source>Add an &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; at the top,</source>
          <target state="translated">在顶部添加 &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24c4502c2264205bcee1737bc30aa0ee46ca9d07" translate="yes" xml:space="preserve">
          <source>Add an &lt;code&gt;&lt;a href=&quot;../api/router/scroll#anchor&quot;&gt;anchor&lt;/a&gt;&lt;/code&gt; element so you can jump to a certain point on the page.</source>
          <target state="translated">添加 &lt;code&gt;&lt;a href=&quot;../api/router/scroll#anchor&quot;&gt;anchor&lt;/a&gt;&lt;/code&gt; 元素，以便您可以跳至页面上的特定点。</target>
        </trans-unit>
        <trans-unit id="b6710fdef5071c7587eb69e5c4821c27c6547053" translate="yes" xml:space="preserve">
          <source>Add an &lt;code&gt;animations&lt;/code&gt; array to the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata's that contains the &lt;code&gt;slideInAnimation&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;animations&lt;/code&gt; 数组添加到包含 &lt;code&gt;slideInAnimation&lt;/code&gt; 的 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 元数据中。</target>
        </trans-unit>
        <trans-unit id="c0511deb3d9404e119de6815d1e1fb84dc05c2ca" translate="yes" xml:space="preserve">
          <source>Add an &lt;code&gt;ngSubmit&lt;/code&gt; event listener to the &lt;code&gt;form&lt;/code&gt; tag with the &lt;code&gt;onSubmit()&lt;/code&gt; callback method.</source>
          <target state="translated">使用 &lt;code&gt;onSubmit()&lt;/code&gt; 回调方法将 &lt;code&gt;ngSubmit&lt;/code&gt; 事件侦听器添加到 &lt;code&gt;form&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="a3ec368ee4d735782b2fa273a86fd1b22faf2bdd" translate="yes" xml:space="preserve">
          <source>Add an &lt;em&gt;item&lt;/em&gt; node for your guide page as a child of the appropriate &lt;em&gt;header&lt;/em&gt; node. It probably looks something like this one.</source>
          <target state="translated">为您的指南页面添加一个&lt;em&gt;项目&lt;/em&gt;节点，作为相应&lt;em&gt;标题&lt;/em&gt;节点的子节点。它可能看起来像这样。</target>
        </trans-unit>
        <trans-unit id="72b3e470d4f46dc5b655b73f7cb688598b57a288" translate="yes" xml:space="preserve">
          <source>Add an admin feature module</source>
          <target state="translated">增加一个管理功能模块</target>
        </trans-unit>
        <trans-unit id="065d79ddcd8ef4cbfce2bde87eff9b4a21deb35b" translate="yes" xml:space="preserve">
          <source>Add an outlet named &quot;popup&quot; in the &lt;code&gt;AppComponent&lt;/code&gt;, directly below the unnamed outlet.</source>
          <target state="translated">在未命名的出口正下方的 &lt;code&gt;AppComponent&lt;/code&gt; 中添加一个名为&amp;ldquo; popup&amp;rdquo; 的出口。</target>
        </trans-unit>
        <trans-unit id="c3ad9fae4902afb2d22aab11c7c7122afe3cb1b3" translate="yes" xml:space="preserve">
          <source>Add and remove CSS class names from an element's &lt;code&gt;class&lt;/code&gt; attribute with a &lt;strong&gt;class binding&lt;/strong&gt;.</source>
          <target state="translated">使用&lt;strong&gt;类绑定&lt;/strong&gt;从元素的 &lt;code&gt;class&lt;/code&gt; 属性中添加和删​​除CSS类名称。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ebc7d586988be901bf1dcd135e15130d4271ae30" translate="yes" xml:space="preserve">
          <source>Add another feature module</source>
          <target state="translated">增加另一个功能模块</target>
        </trans-unit>
        <trans-unit id="83553ff42a9fe1b0b7cd5ccc05916aaaf1b48824" translate="yes" xml:space="preserve">
          <source>Add application styles</source>
          <target state="translated">添加应用程序样式</target>
        </trans-unit>
        <trans-unit id="6874ce7f78e90d16a31435155e6fa0b2b97fdd6c" translate="yes" xml:space="preserve">
          <source>Add bindings to the &lt;code&gt;ChildComponent&lt;/code&gt; and the &lt;code&gt;AppComponent&lt;/code&gt; templates. In the &lt;code&gt;ChildComponent&lt;/code&gt; template, add the following binding:</source>
          <target state="translated">将绑定添加到 &lt;code&gt;ChildComponent&lt;/code&gt; 和 &lt;code&gt;AppComponent&lt;/code&gt; 模板。在 &lt;code&gt;ChildComponent&lt;/code&gt; 模板中，添加以下绑定：</target>
        </trans-unit>
        <trans-unit id="6e92e364ebed8c2a5a1a8e64de16ee2cc836b8bd" translate="yes" xml:space="preserve">
          <source>Add custom CSS for visual feedback</source>
          <target state="translated">为视觉反馈添加自定义CSS</target>
        </trans-unit>
        <trans-unit id="8fd1501a03328a721bc2b3c83701735e84f6e4de" translate="yes" xml:space="preserve">
          <source>Add custom CSS to provide visual feedback.</source>
          <target state="translated">添加自定义CSS来提供视觉反馈。</target>
        </trans-unit>
        <trans-unit id="b11bcc0560cc0fedef2d7534656122746af6fdc3" translate="yes" xml:space="preserve">
          <source>Add dashboard link to the shell</source>
          <target state="translated">在shell中添加仪表盘链接</target>
        </trans-unit>
        <trans-unit id="4baa429880b9ffc3372db13f7438523250984f35" translate="yes" xml:space="preserve">
          <source>Add editable fields to update a model with two-way data binding.</source>
          <target state="translated">增加可编辑字段,通过双向数据绑定更新模型。</target>
        </trans-unit>
        <trans-unit id="2eaeed60de365bb5468814ae23f30eb82eac1d08" translate="yes" xml:space="preserve">
          <source>Add heroes functionality</source>
          <target state="translated">增加英雄功能</target>
        </trans-unit>
        <trans-unit id="913bb1292105665155e69ec153ed609204adeb60" translate="yes" xml:space="preserve">
          <source>Add input fields for &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt;. Use the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; attribute binding to bind the &lt;code&gt;checkoutForm&lt;/code&gt; form controls for &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; to their input fields. The final complete component is shown below:</source>
          <target state="translated">添加 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;address&lt;/code&gt; 输入字段。使用 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; 属性绑定将 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;address&lt;/code&gt; 的 &lt;code&gt;checkoutForm&lt;/code&gt; 表单控件绑定到它们的输入字段。最终的完整组件如下所示：</target>
        </trans-unit>
        <trans-unit id="ab141913508f673f30373ec22d2f90af03bb1c3c" translate="yes" xml:space="preserve">
          <source>Add only &lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;declarable&lt;/a&gt; classes to an NgModule's &lt;code&gt;declarations&lt;/code&gt; list.</source>
          <target state="translated">只有加入&lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;申报&lt;/a&gt;类的NgModule的 &lt;code&gt;declarations&lt;/code&gt; 名单。</target>
        </trans-unit>
        <trans-unit id="ccae50a19752da301fe31954fbb8425f6cac0c8e" translate="yes" xml:space="preserve">
          <source>Add or remove several CSS classes simultaneously with &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;&lt;/code&gt; 同时添加或删除几个CSS类。</target>
        </trans-unit>
        <trans-unit id="04098c5df332b887b1b69ea6a9b2bb0ae8f0620c" translate="yes" xml:space="preserve">
          <source>Add powers with &lt;code&gt;*ngFor&lt;/code&gt;</source>
          <target state="translated">用 &lt;code&gt;*ngFor&lt;/code&gt; 增加能力</target>
        </trans-unit>
        <trans-unit id="110d8765a212752a0d788afe8d11d67a8aeca05a" translate="yes" xml:space="preserve">
          <source>Add private CSS styles to &lt;code&gt;hero-search.component.css&lt;/code&gt; as listed in the &lt;a href=&quot;toh-pt6#herosearchcomponent&quot;&gt;final code review&lt;/a&gt; below.</source>
          <target state="translated">将私有CSS样式添加到 &lt;code&gt;hero-search.component.css&lt;/code&gt; 中,如下面的&lt;a href=&quot;toh-pt6#herosearchcomponent&quot;&gt;最终代码回顾&lt;/a&gt;所示。</target>
        </trans-unit>
        <trans-unit id="83258ee6700fe22a4bb3a97f03d2dfde8f15d1db" translate="yes" xml:space="preserve">
          <source>Add routing (a URL pattern) for the cart component.</source>
          <target state="translated">为购物车组件添加路由(URL模式)。</target>
        </trans-unit>
        <trans-unit id="315a11c2127d0033673c94374becd4aaec9a355d" translate="yes" xml:space="preserve">
          <source>Add schematics</source>
          <target state="translated">添加示意图</target>
        </trans-unit>
        <trans-unit id="47b444c3155edf48537081c48320158b81013f10" translate="yes" xml:space="preserve">
          <source>Add search to the Dashboard</source>
          <target state="translated">添加搜索到仪表板</target>
        </trans-unit>
        <trans-unit id="407c4e4ebc265f1152ba29994434476ffa6b1e82" translate="yes" xml:space="preserve">
          <source>Add similar &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; bindings and &lt;code&gt;name&lt;/code&gt; attributes to &lt;em&gt;Alter Ego&lt;/em&gt; and &lt;em&gt;Hero Power&lt;/em&gt;. You'll ditch the input box binding message and add a new binding (at the top) to the component's &lt;code&gt;diagnostic&lt;/code&gt; property. Then you can confirm that two-way data binding works &lt;em&gt;for the entire hero model&lt;/em&gt;.</source>
          <target state="translated">将类似的 &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; 绑定和 &lt;code&gt;name&lt;/code&gt; 属性添加到&lt;em&gt;Alter Ego&lt;/em&gt;和&lt;em&gt;Hero Power&lt;/em&gt;。您将放弃输入框绑定消息，并将新的绑定（在顶部）添加到组件的 &lt;code&gt;diagnostic&lt;/code&gt; 属性。然后，您可以确认双向数据绑定适用&lt;em&gt;于整个英雄模型&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d2b3f86b38cb2dde1ef5065d8b22c6e0110a2bcf" translate="yes" xml:space="preserve">
          <source>Add slashes to the end of the name.</source>
          <target state="translated">在名字的末尾加上斜杠。</target>
        </trans-unit>
        <trans-unit id="0550c5a07a1c0dcc7a56e45baf44916075288a7a" translate="yes" xml:space="preserve">
          <source>Add some styles to apply when the list item is selected.</source>
          <target state="translated">增加一些样式,在选择列表项时应用。</target>
        </trans-unit>
        <trans-unit id="4e25fad2d2863d50af41e193a0affb5fba19770a" translate="yes" xml:space="preserve">
          <source>Add template files</source>
          <target state="translated">添加模板文件</target>
        </trans-unit>
        <trans-unit id="7f9455fdcd2db20256999a9379ce57b8a990d6ed" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; element just after the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag. If the &lt;code&gt;app&lt;/code&gt; folder is the application root, as it is for this application, set the &lt;code&gt;href&lt;/code&gt; value in &lt;strong&gt;&lt;code&gt;index.html&lt;/code&gt;&lt;/strong&gt;&lt;em&gt;exactly&lt;/em&gt; as shown here.</source>
          <target state="translated">在 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 标记之后添加 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 元素。如果 &lt;code&gt;app&lt;/code&gt; 文件夹是该应用程序的应用程序根目录，则&lt;em&gt;完全&lt;/em&gt;按照此处显示的那样在&lt;strong&gt; &lt;code&gt;index.html&lt;/code&gt; 中&lt;/strong&gt;设置 &lt;code&gt;href&lt;/code&gt; 值。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a95c1b1b2b94b9931f706ade782f0c64278d07c6" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;&lt;a href=&quot;../api/router/navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt; object to the &lt;code&gt;router.navigate()&lt;/code&gt; method that navigates you to the &lt;code&gt;/login&lt;/code&gt; route.</source>
          <target state="translated">添加 &lt;code&gt;&lt;a href=&quot;../api/router/navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt; 对象到 &lt;code&gt;router.navigate()&lt;/code&gt; 方法您导航到 &lt;code&gt;/login&lt;/code&gt; 路线。</target>
        </trans-unit>
        <trans-unit id="e83a0d78e320049911e3936af97267e19e1e5a5d" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; hero property</source>
          <target state="translated">添加 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 英雄属性</target>
        </trans-unit>
        <trans-unit id="5dce54b9215c3ca22af64b7a5b4aa23a1c6a8ec3" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;AppRoutingModule&lt;/code&gt;</source>
          <target state="translated">添加 &lt;code&gt;AppRoutingModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="524c94c18049eabcf94b120aa354fd0d2d3c943c" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;Guard&lt;/code&gt; to the crisis detail route in &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; using the &lt;code&gt;&lt;a href=&quot;../api/router/route#canDeactivate&quot;&gt;canDeactivate&lt;/a&gt;&lt;/code&gt; array property.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/router/route#canDeactivate&quot;&gt;canDeactivate&lt;/a&gt;&lt;/code&gt; 数组属性将 &lt;code&gt;Guard&lt;/code&gt; 保护添加到 &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; 中的危机详细信息路由。</target>
        </trans-unit>
        <trans-unit id="ccc1be62085ec733e656d1b1b5ebeed7389554e8" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; strategy to the &lt;code&gt;AppRoutingModule&lt;/code&gt; providers array so it can be injected elsewhere in the app.</source>
          <target state="translated">将 &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; 策略添加到 &lt;code&gt;AppRoutingModule&lt;/code&gt; 提供程序数组中，以便可以将其注入应用程序中的其他位置。</target>
        </trans-unit>
        <trans-unit id="480a9d9da11c13fa2186a0678c4789bf9795fb33" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;address&lt;/code&gt; form group containing the &lt;code&gt;street&lt;/code&gt;, &lt;code&gt;city&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;zip&lt;/code&gt; fields to the &lt;code&gt;ProfileEditor&lt;/code&gt; template.</source>
          <target state="translated">将包含 &lt;code&gt;street&lt;/code&gt; ， &lt;code&gt;city&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;zip&lt;/code&gt; 字段的 &lt;code&gt;address&lt;/code&gt; 表单组添加到 &lt;code&gt;ProfileEditor&lt;/code&gt; 模板。</target>
        </trans-unit>
        <trans-unit id="9c7c31da3e750a8e32a8e1508ea2c5877158d643" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;delete()&lt;/code&gt; handler to the component class.</source>
          <target state="translated">将 &lt;code&gt;delete()&lt;/code&gt; 处理函数添加到组件类。</target>
        </trans-unit>
        <trans-unit id="537fee4674204d15546023152c655ac018628fc3" translate="yes" xml:space="preserve">
          <source>Add the &lt;em&gt;CheckmarkPipe&lt;/em&gt;</source>
          <target state="translated">添加&lt;em&gt;CheckmarkPipe&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4a17c685f9166b6dd73f21ad74478ecc3dfb360" translate="yes" xml:space="preserve">
          <source>Add the &lt;em&gt;LoginComponent&lt;/em&gt;</source>
          <target state="translated">添加&lt;em&gt;LoginComponent&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e595eb4e5629fba187523d4d67334582bb922a69" translate="yes" xml:space="preserve">
          <source>Add the Angular router</source>
          <target state="translated">添加Angular路由器</target>
        </trans-unit>
        <trans-unit id="a7067487bde72912bc32222bb63da44e0cbe00b4" translate="yes" xml:space="preserve">
          <source>Add the Bootstrap CSS file to the &quot;styles&quot; array:</source>
          <target state="translated">在 &quot;样式 &quot;数组中添加Bootstrap CSS文件。</target>
        </trans-unit>
        <trans-unit id="788a7f1435d8e605cc5c4f56a0f055007ae60c45" translate="yes" xml:space="preserve">
          <source>Add the Router Outlet</source>
          <target state="translated">添加路由器插座</target>
        </trans-unit>
        <trans-unit id="6ecf7d301e120b4a58d039786905132e5b7b17ca" translate="yes" xml:space="preserve">
          <source>Add the ability to navigate between the &lt;em&gt;Heroes&lt;/em&gt; and &lt;em&gt;Dashboard&lt;/em&gt; views.</source>
          <target state="translated">添加在&lt;em&gt;英雄&lt;/em&gt;和&lt;em&gt;仪表板&lt;/em&gt;视图之间导航的功能。</target>
        </trans-unit>
        <trans-unit id="f7e2426390337e60becf33182abe694cadb9fe52" translate="yes" xml:space="preserve">
          <source>Add the click event handler</source>
          <target state="translated">添加点击事件处理程序</target>
        </trans-unit>
        <trans-unit id="ad72b9c6abfbbbe3312d99a3bff6e2256f92606e" translate="yes" xml:space="preserve">
          <source>Add the component class name to the &lt;code&gt;declarations&lt;/code&gt; array.</source>
          <target state="translated">将组件类名称添加到 &lt;code&gt;declarations&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="7151a548f087adf025cecc68ba3a8f52d7eca575" translate="yes" xml:space="preserve">
          <source>Add the dashboard route</source>
          <target state="translated">添加仪表板路线</target>
        </trans-unit>
        <trans-unit id="203ca6f461ddbefc62dfa3039a19792cf63cca55" translate="yes" xml:space="preserve">
          <source>Add the default route somewhere &lt;em&gt;above&lt;/em&gt; the wildcard route. It's just above the wildcard route in the following excerpt showing the complete &lt;code&gt;appRoutes&lt;/code&gt; for this milestone.</source>
          <target state="translated">在通配符路由&lt;em&gt;上方&lt;/em&gt;的某处添加默认路由。在以下摘录中的通配符路由上方，该通配符显示了此里程碑的完整 &lt;code&gt;appRoutes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1963c978d5e21dc9c5425538a9a4b6bab6b449a0" translate="yes" xml:space="preserve">
          <source>Add the factory function</source>
          <target state="translated">增加工厂功能</target>
        </trans-unit>
        <trans-unit id="de4bb5213e63549ca334089fd56344bb1e599059" translate="yes" xml:space="preserve">
          <source>Add the following &lt;code&gt;[class.selected]&lt;/code&gt; binding to the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; in the &lt;code&gt;HeroesComponent&lt;/code&gt; template:</source>
          <target state="translated">添加以下 &lt;code&gt;[class.selected]&lt;/code&gt; 结合 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 在 &lt;code&gt;HeroesComponent&lt;/code&gt; 模板：</target>
        </trans-unit>
        <trans-unit id="55dd3db3ee551d474ca23cf2dbe6f03b7eb5e979" translate="yes" xml:space="preserve">
          <source>Add the following &lt;code&gt;addHero()&lt;/code&gt; method to the &lt;code&gt;HeroService&lt;/code&gt; class.</source>
          <target state="translated">将以下 &lt;code&gt;addHero()&lt;/code&gt; 方法添加到 &lt;code&gt;HeroService&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="4a15eb2536beea1005cec68501c5559c0ee70f4b" translate="yes" xml:space="preserve">
          <source>Add the following &lt;code&gt;onSelect()&lt;/code&gt; method, which assigns the clicked hero from the template to the component's &lt;code&gt;selectedHero&lt;/code&gt;.</source>
          <target state="translated">添加以下 &lt;code&gt;onSelect()&lt;/code&gt; 方法，该方法将从模板中单击的英雄分配给组件的 &lt;code&gt;selectedHero&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0f064872909e5f0fc82d9a7616bf06812ac7126" translate="yes" xml:space="preserve">
          <source>Add the following HTML &lt;em&gt;immediately below&lt;/em&gt; the &lt;em&gt;Alter Ego&lt;/em&gt; group:</source>
          <target state="translated">在&lt;em&gt;Alter Ego&lt;/em&gt;组下面&lt;em&gt;立即&lt;/em&gt;添加以下HTML ：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc2589b5414b85cb1ff857bc45f360f5639642cf" translate="yes" xml:space="preserve">
          <source>Add the following button element to the &lt;code&gt;HeroesComponent&lt;/code&gt; template, after the hero name in the repeated &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">在重复的 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素中的英雄名称之后，将以下按钮元素添加到 &lt;code&gt;HeroesComponent&lt;/code&gt; 模板中。</target>
        </trans-unit>
        <trans-unit id="5a6f4e757eee5977b078ed8e00ea18bb9638517d" translate="yes" xml:space="preserve">
          <source>Add the following code in &lt;code&gt;src/typings.d.ts&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;src/typings.d.ts&lt;/code&gt; 中添加以下代码。</target>
        </trans-unit>
        <trans-unit id="f21cce86ef93d7473d26a8919f3461df9e29a091" translate="yes" xml:space="preserve">
          <source>Add the following code to your &lt;code&gt;svg.component.svg&lt;/code&gt; file:</source>
          <target state="translated">将以下代码添加到您的 &lt;code&gt;svg.component.svg&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="ddce7ccd00ce11e7e21a51a655f19868eb056b89" translate="yes" xml:space="preserve">
          <source>Add the following code to your factory function.</source>
          <target state="translated">在你的工厂函数中添加以下代码。</target>
        </trans-unit>
        <trans-unit id="4a57f8275852a186fdbefe442695b8d49e11f67f" translate="yes" xml:space="preserve">
          <source>Add the following content to the new proxy file:</source>
          <target state="translated">在新的代理文件中添加以下内容。</target>
        </trans-unit>
        <trans-unit id="c9605c6de77435b086651273344bcc1d56aa9255" translate="yes" xml:space="preserve">
          <source>Add the following imports:</source>
          <target state="translated">增加以下进口:</target>
        </trans-unit>
        <trans-unit id="24d2ab2e1d0674bcd525ac4301acb8cfc9897f1d" translate="yes" xml:space="preserve">
          <source>Add the following to your &lt;code&gt;devDependencies&lt;/code&gt; in your project's &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">将以下内容添加到项目的 &lt;code&gt;package.json&lt;/code&gt; 中的 &lt;code&gt;devDependencies&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="1051e7b41c871379ce9f035916034c6c6d41c45c" translate="yes" xml:space="preserve">
          <source>Add the product descriptions. On the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element, use an &lt;code&gt;*&lt;a href=&quot;api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; directive so that Angular only creates the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element if the current product has a description.</source>
          <target state="translated">添加产品说明。在 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 元素上，使用 &lt;code&gt;*&lt;a href=&quot;api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 指令，以便Angular仅在当前产品具有描述时才创建 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="68d5651877a44ba3f24e7ccef506aa087346b4af" translate="yes" xml:space="preserve">
          <source>Add the same &lt;code&gt;AuthGuard&lt;/code&gt; to the &lt;code&gt;component-less&lt;/code&gt; admin route to protect all other child routes at one time instead of adding the &lt;code&gt;AuthGuard&lt;/code&gt; to each route individually.</source>
          <target state="translated">将相同的 &lt;code&gt;AuthGuard&lt;/code&gt; 添加到无 &lt;code&gt;component-less&lt;/code&gt; 管理路由中，以一次保护所有其他子路由，而不是将 &lt;code&gt;AuthGuard&lt;/code&gt; 分别添加到每个路由中。</target>
        </trans-unit>
        <trans-unit id="5ccc80ef1b883c021ac46ae3dea76bdc9c94b772" translate="yes" xml:space="preserve">
          <source>Add the template HTML below after the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; closing the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroupname&quot;&gt;formGroupName&lt;/a&gt;&lt;/code&gt; element.</source>
          <target state="translated">在 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 关闭 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroupname&quot;&gt;formGroupName&lt;/a&gt;&lt;/code&gt; 元素之后，在下面添加模板HTML 。</target>
        </trans-unit>
        <trans-unit id="08992a4a5c9ccd87853e5a2dd74a7b308e8abe90" translate="yes" xml:space="preserve">
          <source>Add this &lt;code&gt;&amp;lt;phonecat-app&amp;gt;&lt;/code&gt; element to the &lt;code&gt;index.html&lt;/code&gt;. It replaces the old AngularJS &lt;code&gt;ng-view&lt;/code&gt; directive:</source>
          <target state="translated">将此 &lt;code&gt;&amp;lt;phonecat-app&amp;gt;&lt;/code&gt; 元素添加到 &lt;code&gt;index.html&lt;/code&gt; 。它替换了旧的AngularJS &lt;code&gt;ng-view&lt;/code&gt; 指令：</target>
        </trans-unit>
        <trans-unit id="5e6c651992023e2db1bf098d75f8e5904243eb40" translate="yes" xml:space="preserve">
          <source>Add this directive to the &lt;code&gt;declarations&lt;/code&gt; array of the AppModule.</source>
          <target state="translated">将此指令添加到AppModule 的 &lt;code&gt;declarations&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="922675049b014ebfcdc115bb25996b2e9a66d549" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;&amp;lt;live-example&amp;gt;&amp;lt;/live-example&amp;gt;&lt;/code&gt; to the page generates the two default links.</source>
          <target state="translated">将 &lt;code&gt;&amp;lt;live-example&amp;gt;&amp;lt;/live-example&amp;gt;&lt;/code&gt; 添加到页面会生成两个默认链接。</target>
        </trans-unit>
        <trans-unit id="e2243e38c9b9d2d491ac653861f42e3b0679135a" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;export&lt;/code&gt; doesn't work when the compiler needs the &lt;em&gt;actual value&lt;/em&gt; in order to generate code. For example, it doesn't work for the &lt;code&gt;template&lt;/code&gt; property.</source>
          <target state="translated">当编译器需要&lt;em&gt;实际值&lt;/em&gt;来生成代码时，添加 &lt;code&gt;export&lt;/code&gt; 无效。例如，它不适用于 &lt;code&gt;template&lt;/code&gt; 属性。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51ebe15885e1d23542dd2ea65ca996d65c2d207b" translate="yes" xml:space="preserve">
          <source>Adding &lt;code&gt;export&lt;/code&gt; often works for variables referenced in metadata such as &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;animations&lt;/code&gt; because the compiler can generate &lt;em&gt;references&lt;/em&gt; to the exported variables in these expressions. It doesn't need the &lt;em&gt;values&lt;/em&gt; of those variables.</source>
          <target state="translated">添加 &lt;code&gt;export&lt;/code&gt; 通常适用于元数据中引用的变量，例如 &lt;code&gt;providers&lt;/code&gt; 和 &lt;code&gt;animations&lt;/code&gt; 因为编译器可以在这些表达式中生成&lt;em&gt;对&lt;/em&gt;导出变量的&lt;em&gt;引用&lt;/em&gt;。它不需要那些变量的&lt;em&gt;值&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="73c05dea2f6045a6ab0b0141f2228bfae1da4a5e" translate="yes" xml:space="preserve">
          <source>Adding The Angular Router And Bootstrap</source>
          <target state="translated">添加Angular Router和Bootstrap。</target>
        </trans-unit>
        <trans-unit id="8b07e292ec36cfffa9bf6db5c80ac3f1e704fabc" translate="yes" xml:space="preserve">
          <source>Adding a Web Worker</source>
          <target state="translated">添加一个网络工作者</target>
        </trans-unit>
        <trans-unit id="3797d75eea052400c99af56aab9acb4efe36e4d2" translate="yes" xml:space="preserve">
          <source>Adding a hero results in a new hero &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. The spy's &lt;code&gt;ngOnInit()&lt;/code&gt; logs that event.</source>
          <target state="translated">添加英雄会产生一个新的英雄 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 。间谍的 &lt;code&gt;ngOnInit()&lt;/code&gt; 记录该事件。</target>
        </trans-unit>
        <trans-unit id="28d2a7e95c52e8a42120833923f4cf54d6029d23" translate="yes" xml:space="preserve">
          <source>Adding a library to the runtime global scope</source>
          <target state="translated">在运行时全局范围内添加一个库</target>
        </trans-unit>
        <trans-unit id="d3ccff775835290c3a128ace87621dd407763a67" translate="yes" xml:space="preserve">
          <source>Adding a maximum length validator</source>
          <target state="translated">增加一个最大长度验证器</target>
        </trans-unit>
        <trans-unit id="494a8737b67971dffa71048bb3c7fb3bea9dd8a9" translate="yes" xml:space="preserve">
          <source>Adding a minimum length validator</source>
          <target state="translated">增加一个最小长度验证器</target>
        </trans-unit>
        <trans-unit id="f16c1a5e99ec210cafaff11287b5840cc4a99091" translate="yes" xml:space="preserve">
          <source>Adding a pattern validator</source>
          <target state="translated">增加一个模式验证器</target>
        </trans-unit>
        <trans-unit id="9e46d1f4ff66b89003f86bb0e3b35dbd3f8f9747" translate="yes" xml:space="preserve">
          <source>Adding a required checkbox validator using template-driven forms</source>
          <target state="translated">使用模板驱动的表单添加必要的复选框验证器。</target>
        </trans-unit>
        <trans-unit id="fb58a5f686b6ace9b126e4f8cb5d3bc1407c9241" translate="yes" xml:space="preserve">
          <source>Adding a required validator using template-driven forms</source>
          <target state="translated">使用模板驱动的表单添加一个必要的验证器。</target>
        </trans-unit>
        <trans-unit id="ff1dd5c0e9955484dceb4a5b434bb9221bf949cf" translate="yes" xml:space="preserve">
          <source>Adding a schematic to a collection</source>
          <target state="translated">将原理图添加到一个集合中</target>
        </trans-unit>
        <trans-unit id="91d669aa4d61f96fec2573e664601ea346ab6c18" translate="yes" xml:space="preserve">
          <source>Adding a service worker to your project</source>
          <target state="translated">在您的项目中添加一个服务人员</target>
        </trans-unit>
        <trans-unit id="658030002117a761f4fc3965eb3cb02b87cd7749" translate="yes" xml:space="preserve">
          <source>Adding a target</source>
          <target state="translated">增加一个目标</target>
        </trans-unit>
        <trans-unit id="6525e7fcbcff7c4689063f7e684e4f978b5680bf" translate="yes" xml:space="preserve">
          <source>Adding an &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;&lt;/code&gt; property binding to &lt;code&gt;currentClasses&lt;/code&gt; sets the element's classes accordingly:</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;&lt;/code&gt; 属性绑定到 &lt;code&gt;currentClasses&lt;/code&gt; 会相应地设置元素的类：</target>
        </trans-unit>
        <trans-unit id="9b6d9feaeaa572aa7a12cbeeb46228faa046d0bc" translate="yes" xml:space="preserve">
          <source>Adding an &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;ngStyle&lt;/a&gt;&lt;/code&gt; property binding to &lt;code&gt;currentStyles&lt;/code&gt; sets the element's styles accordingly:</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;ngStyle&lt;/a&gt;&lt;/code&gt; 属性绑定到 &lt;code&gt;currentStyles&lt;/code&gt; 可以相应地设置元素的样式：</target>
        </trans-unit>
        <trans-unit id="b3fcd62ed94aad6b449fe5d37db647399301bd22" translate="yes" xml:space="preserve">
          <source>Adding an alias</source>
          <target state="translated">添加别名</target>
        </trans-unit>
        <trans-unit id="be0779a18da1ecedddf53b5dd41b56034940339f" translate="yes" xml:space="preserve">
          <source>Adding an email validator</source>
          <target state="translated">添加一个电子邮件验证器</target>
        </trans-unit>
        <trans-unit id="5873fb7b91415ba593dcaeb0713567140d858f49" translate="yes" xml:space="preserve">
          <source>Adding and removing the &lt;code&gt;disabled&lt;/code&gt;&lt;em&gt;attribute&lt;/em&gt; disables and enables the button. However, the value of the &lt;em&gt;attribute&lt;/em&gt; is irrelevant, which is why you cannot enable a button by writing &lt;code&gt;&amp;lt;button disabled=&quot;false&quot;&amp;gt;Still Disabled&amp;lt;/button&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">添加和删​​除 &lt;code&gt;disabled&lt;/code&gt; &lt;em&gt;属性&lt;/em&gt;将禁用并启用该按钮。但是，该&lt;em&gt;属性&lt;/em&gt;的值无关紧要，这就是为什么您无法通过编写 &lt;code&gt;&amp;lt;button disabled=&quot;false&quot;&amp;gt;Still Disabled&amp;lt;/button&amp;gt;&lt;/code&gt; 来启用按钮的原因。</target>
        </trans-unit>
        <trans-unit id="414790a41b5fe4974982ea7d7a722b357bb14c4e" translate="yes" xml:space="preserve">
          <source>Adding animations to the routed component</source>
          <target state="translated">将动画添加到路由组件中</target>
        </trans-unit>
        <trans-unit id="d91d275ac43cb2fc356c392e516cde5427ae957f" translate="yes" xml:space="preserve">
          <source>Adding headers</source>
          <target state="translated">添加页眉</target>
        </trans-unit>
        <trans-unit id="0c2ebad7a136b54e97bbbca2a675a16b3e11a5cd" translate="yes" xml:space="preserve">
          <source>Adding or removing controls from a form array</source>
          <target state="translated">从表单数组中添加或删除控件</target>
        </trans-unit>
        <trans-unit id="a492d6ac1e58e89d4043aee23965954b03767c9f" translate="yes" xml:space="preserve">
          <source>Adding routable animations</source>
          <target state="translated">添加可路由动画</target>
        </trans-unit>
        <trans-unit id="7afaaaaff6b0338bff5cfe09fad06c92c7b68221" translate="yes" xml:space="preserve">
          <source>Adding the configured &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;AppModule&lt;/code&gt; is sufficient for simple route configurations. As the application grows, you'll want to &lt;a href=&quot;router#refactor-the-routing-configuration-into-a-routing-module&quot;&gt;refactor the routing configuration&lt;/a&gt; into a separate file and create a &lt;strong&gt;&lt;a href=&quot;router#routing-module&quot;&gt;Routing Module&lt;/a&gt;&lt;/strong&gt;, a special type of &lt;code&gt;Service Module&lt;/code&gt; dedicated to the purpose of routing in feature modules.</source>
          <target state="translated">将配置的 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 添加到 &lt;code&gt;AppModule&lt;/code&gt; 就足以进行简单的路由配置。随着应用程序的增长，您将需要&lt;a href=&quot;router#refactor-the-routing-configuration-into-a-routing-module&quot;&gt;将路由配置重构&lt;/a&gt;到一个单独的文件中，并创建一个&lt;strong&gt;&lt;a href=&quot;router#routing-module&quot;&gt;路由模块&lt;/a&gt;&lt;/strong&gt;，这是一种专用于 &lt;code&gt;Service Module&lt;/code&gt; 的特殊类型的服务模块。</target>
        </trans-unit>
        <trans-unit id="d37533032f719d87e66cb4d921f78f0010ff74bd" translate="yes" xml:space="preserve">
          <source>Adding to reactive forms</source>
          <target state="translated">添加到反应式中</target>
        </trans-unit>
        <trans-unit id="b1f50c4eeaf9acc84dcece41369d505b6c8bd4aa" translate="yes" xml:space="preserve">
          <source>Adding to template driven forms</source>
          <target state="translated">添加到模板驱动的表格</target>
        </trans-unit>
        <trans-unit id="f741528e94d7a9119da6fdc2d64562b32a16957c" translate="yes" xml:space="preserve">
          <source>Adding to template-driven forms</source>
          <target state="translated">添加到模板驱动的表单中</target>
        </trans-unit>
        <trans-unit id="6db8ab49fda1d426dada84500bdbaf2cf643416a" translate="yes" xml:space="preserve">
          <source>Additional animation functionality is provided in other Angular modules for animation testing, for route-based animations, and for programmatic animation controls that allow an end user to fast forward and reverse an animation sequence.</source>
          <target state="translated">在其他Angular模块中提供了额外的动画功能,用于动画测试、基于路径的动画,以及允许最终用户快进和逆转动画序列的程序化动画控件。</target>
        </trans-unit>
        <trans-unit id="9eacfc7680c8185a25a0e3cdfcd8ab3a2e2abf6f" translate="yes" xml:space="preserve">
          <source>Additional applications and libraries go into a &lt;code&gt;projects&lt;/code&gt; folder in the workspace.</source>
          <target state="translated">其他应用程序和库进入工作空间中的 &lt;code&gt;projects&lt;/code&gt; 文件夹。</target>
        </trans-unit>
        <trans-unit id="bedd0f993181b4d07bc3bc6af81ff195b60d9f72" translate="yes" xml:space="preserve">
          <source>Additional build and test options</source>
          <target state="translated">额外的构建和测试选项</target>
        </trans-unit>
        <trans-unit id="260fab856b8044e628c955f8e2996502a9cd44c2" translate="yes" xml:space="preserve">
          <source>Additional developer-defined data provided to the component via &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;. By default, no additional data is passed.</source>
          <target state="translated">通过 &lt;code&gt;&lt;a href=&quot;activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 提供给组件的其他开发人员定义的数据。默认情况下，不传递任何其他数据。</target>
        </trans-unit>
        <trans-unit id="93ceccadb707587960fc3d2012d50d5f7a465692" translate="yes" xml:space="preserve">
          <source>Additional project-specific configuration files are used by tools, such as &lt;code&gt;package.json&lt;/code&gt; for the &lt;a href=&quot;glossary#npm-package&quot;&gt;npm package manager&lt;/a&gt;, &lt;code&gt;tsconfig.json&lt;/code&gt; for &lt;a href=&quot;glossary#transpile&quot;&gt;TypeScript transpilation&lt;/a&gt;, and &lt;code&gt;tslint.json&lt;/code&gt; for &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt;.</source>
          <target state="translated">其他项目特定的配置文件是由工具使用，如 &lt;code&gt;package.json&lt;/code&gt; 的&lt;a href=&quot;glossary#npm-package&quot;&gt;NPM包管理器&lt;/a&gt;， &lt;code&gt;tsconfig.json&lt;/code&gt; 为&lt;a href=&quot;glossary#transpile&quot;&gt;打字稿transpilation&lt;/a&gt;，并 &lt;code&gt;tslint.json&lt;/code&gt; 为&lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a15fa56393dfeea6e8ddbb0e0c2a6f3cc24b93de" translate="yes" xml:space="preserve">
          <source>Additional resources</source>
          <target state="translated">补充资源</target>
        </trans-unit>
        <trans-unit id="1ff0faf5f35505f92cf1420c27a17de350a98cce" translate="yes" xml:space="preserve">
          <source>Additional section headings</source>
          <target state="translated">其他章节标题</target>
        </trans-unit>
        <trans-unit id="bc4d8802d50adf700ee7745602435ef1dca90b25" translate="yes" xml:space="preserve">
          <source>Additional templates, represented by &lt;code&gt;&lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; objects, can define alternative or &lt;em&gt;embedded&lt;/em&gt; views, which can be referenced from multiple components.</source>
          <target state="translated">由 &lt;code&gt;&lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; 对象表示的其他模板可以定义替代视图或&lt;em&gt;嵌入式&lt;/em&gt;视图，可以从多个组件中引用这些视图。</target>
        </trans-unit>
        <trans-unit id="088c64e0c38f1273482efc76508d604e23f1b814" translate="yes" xml:space="preserve">
          <source>Additional type information that can be added to the NgElement class, for properties that are added based on the inputs and methods of the underlying component.</source>
          <target state="translated">可以添加到NgElement类的额外类型信息,用于根据底层组件的输入和方法添加的属性。</target>
        </trans-unit>
        <trans-unit id="82315284cec71ac2461e7ad6e31ada0cc3b6903b" translate="yes" xml:space="preserve">
          <source>Additionally, Angular can bundle &lt;em&gt;component styles&lt;/em&gt; with components, enabling a more modular design than regular stylesheets.</source>
          <target state="translated">此外，Angular可以将&lt;em&gt;组件样式&lt;/em&gt;与组件捆绑在一起，从而实现比常规样式表更多的模块化设计。</target>
        </trans-unit>
        <trans-unit id="c3b6cb992315a8d1d32c6b4d1ab51dfbb9d56994" translate="yes" xml:space="preserve">
          <source>Additionally, add the same to the &lt;code&gt;AppComponent&lt;/code&gt; template:</source>
          <target state="translated">此外，将其添加到 &lt;code&gt;AppComponent&lt;/code&gt; 模板：</target>
        </trans-unit>
        <trans-unit id="f7661d2796641b2435dba5fb54171a642e99cdd2" translate="yes" xml:space="preserve">
          <source>Additionally, if a &lt;code&gt;factory&lt;/code&gt; is specified you can also specify the &lt;code&gt;&lt;a href=&quot;injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; option, which overrides the above behavior and marks the token as belonging to a particular &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. As mentioned above, &lt;code&gt;'root'&lt;/code&gt; is the default value for &lt;code&gt;&lt;a href=&quot;injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">此外，如果一个 &lt;code&gt;factory&lt;/code&gt; 指定，也可以指定 &lt;code&gt;&lt;a href=&quot;injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; 选项，它会覆盖上述行为和标记的令牌属于特定 &lt;code&gt;@&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 。如上所述， &lt;code&gt;'root'&lt;/code&gt; 是默认值 &lt;code&gt;&lt;a href=&quot;injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcbe742fd9c09dceae25ade7dd875522a02fe0b7" translate="yes" xml:space="preserve">
          <source>Additionally, you can combine all of the modifiers except &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; and of course &lt;code&gt;@Skipself()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">此外，您可以组合所有修饰符，除了 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; ，当然还有 &lt;code&gt;@Skipself()&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="451e70bdf0857a9eb4b8c2da5e6655131127aab1" translate="yes" xml:space="preserve">
          <source>Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.</source>
          <target state="translated">根据数值添加/删除DOM子树。为复数定制。</target>
        </trans-unit>
        <trans-unit id="f61a37a92c2c3bd50a6b27f14df53a5edffb0311" translate="yes" xml:space="preserve">
          <source>Adds a developer-defined type to the filename, in the format &quot;name.type.ts&quot;.</source>
          <target state="translated">在文件名中添加一个开发者定义的类型,格式为 &quot;name.type.ts&quot;。</target>
        </trans-unit>
        <trans-unit id="6f5e15f33e44ddcdc5cfe51d4943af58290c22aa" translate="yes" xml:space="preserve">
          <source>Adds a new &lt;code&gt;&lt;a href=&quot;formarrayname&quot;&gt;FormArrayName&lt;/a&gt;&lt;/code&gt; directive instance to the form.</source>
          <target state="translated">将新的 &lt;code&gt;&lt;a href=&quot;formarrayname&quot;&gt;FormArrayName&lt;/a&gt;&lt;/code&gt; 指令实例添加到窗体。</target>
        </trans-unit>
        <trans-unit id="d24328bc2deef9fdef91cbbfdd2400a31dd071a7" translate="yes" xml:space="preserve">
          <source>Adds a new &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; directive instance to the form.</source>
          <target state="translated">将新的 &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; 指令实例添加到表单。</target>
        </trans-unit>
        <trans-unit id="2204ef6786c6b08dbd91058a06e9d433c1331369" translate="yes" xml:space="preserve">
          <source>Adds a new &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; directive instance to the form.</source>
          <target state="translated">向表单添加一个新的 &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; 指令实例。</target>
        </trans-unit>
        <trans-unit id="26134db49e40fbb9d7a014790a01d0a514b896a3" translate="yes" xml:space="preserve">
          <source>Adds and removes CSS classes on an HTML element.</source>
          <target state="translated">在HTML元素上添加和删除CSS类。</target>
        </trans-unit>
        <trans-unit id="cd7e636e1f1b30f6355bd2d646250762388c223f" translate="yes" xml:space="preserve">
          <source>Adds duration options to control animation styling and timing for a child animation.</source>
          <target state="translated">增加了持续时间选项来控制子动画的动画样式和时间。</target>
        </trans-unit>
        <trans-unit id="2b895b67b8ce76b68d05dcf6666168717ad32953" translate="yes" xml:space="preserve">
          <source>Adds guard and resolver service providers to the module's providers.</source>
          <target state="translated">将防护和解析器服务提供者添加到模块的提供者中。</target>
        </trans-unit>
        <trans-unit id="755299c48d7bf746122237e386cb6af5c4ba8328" translate="yes" xml:space="preserve">
          <source>Adds meta tags for &lt;code&gt;theme-color&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;theme-color&lt;/code&gt; 添加meta标签。</target>
        </trans-unit>
        <trans-unit id="968fdcd37c8a10fb41a3f93fc08b5a74ea4db1e5" translate="yes" xml:space="preserve">
          <source>Adds more details to output logging.</source>
          <target state="translated">为输出日志添加更多细节。</target>
        </trans-unit>
        <trans-unit id="eb181f1de9d0b9f6a3f1c71fa1932a623e310dc3" translate="yes" xml:space="preserve">
          <source>Adds router configuration to the module's imports.</source>
          <target state="translated">将路由器配置添加到模块的导入中。</target>
        </trans-unit>
        <trans-unit id="4df31ffcefb2b65518aaabe80fe3bd9d9f1ff84b" translate="yes" xml:space="preserve">
          <source>Adds router directives and providers.</source>
          <target state="translated">添加路由器指令和提供者。</target>
        </trans-unit>
        <trans-unit id="e937eef586f33048065a6d83817b03c7f5e23029" translate="yes" xml:space="preserve">
          <source>Adds support for an external library to your project.</source>
          <target state="translated">为您的项目添加对外部库的支持。</target>
        </trans-unit>
        <trans-unit id="613165752772588a92addd968d55b1f2bd4c8504" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;@angular/service-worker&lt;/code&gt; package to your project.</source>
          <target state="translated">将 &lt;code&gt;@angular/service-worker&lt;/code&gt; 包添加到您的项目。</target>
        </trans-unit>
        <trans-unit id="a95ad245bbc008d7cc09cc996f5e65cb58f25cf6" translate="yes" xml:space="preserve">
          <source>Adds the npm package for a published library to your workspace, and configures the project in the current working directory (or the default project if you are not in a project directory) to use that library, as specified by the library's schematic. For example, adding &lt;code&gt;@angular/pwa&lt;/code&gt; configures your project for PWA support:</source>
          <target state="translated">将已发布库的npm软件包添加到您的工作区，并按照库的示意图的指定，将当前工作目录中的项目（如果您不在项目目录中，则配置为默认项目）以使用该库。例如，添加 &lt;code&gt;@angular/pwa&lt;/code&gt; 将您的项目配置为支持PWA：</target>
        </trans-unit>
        <trans-unit id="62b1dbd814dc4f358ea1d7dde27e66fb54fc5e5d" translate="yes" xml:space="preserve">
          <source>Adjusts the styles of the host and child views to control their relative positions during the transition.</source>
          <target state="translated">调整主视图和子视图的样式,以控制它们在过渡期间的相对位置。</target>
        </trans-unit>
        <trans-unit id="a9597d9ee11a8d07aedf74f517b6b888ccd31d0e" translate="yes" xml:space="preserve">
          <source>Adopt these two conventions in your own projects for &lt;em&gt;every kind&lt;/em&gt; of test file.</source>
          <target state="translated">对于&lt;em&gt;每种&lt;/em&gt;测试文件，在您自己的项目中采用这两种约定。</target>
        </trans-unit>
        <trans-unit id="f7d73e5d6f0b5c68b5528964b60905cb1e539834" translate="yes" xml:space="preserve">
          <source>Advanced configuration</source>
          <target state="translated">高级配置</target>
        </trans-unit>
        <trans-unit id="5126940d744a6dff391a643edf858b06f00785ed" translate="yes" xml:space="preserve">
          <source>Advanced usage</source>
          <target state="translated">高级用法</target>
        </trans-unit>
        <trans-unit id="58096d3b580b40d1f884a9b46c91dffe0e68c327" translate="yes" xml:space="preserve">
          <source>After (choice 1 - use reactive forms):</source>
          <target state="translated">后(选择1--使用反应形式)。</target>
        </trans-unit>
        <trans-unit id="f9921cfd687f0c9e226be2f78a3b062eb0f6a704" translate="yes" xml:space="preserve">
          <source>After (choice 2 - use template-driven forms):</source>
          <target state="translated">后(选择2--使用模板驱动的表单)。</target>
        </trans-unit>
        <trans-unit id="3ab47cdfc89bec9fac8c0dee5b75416d76b80716" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;loadComponent()&lt;/code&gt; selects an ad, it uses &lt;code&gt;&lt;a href=&quot;../api/core/componentfactoryresolver&quot;&gt;ComponentFactoryResolver&lt;/a&gt;&lt;/code&gt; to resolve a &lt;code&gt;&lt;a href=&quot;../api/core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; for each specific component. The &lt;code&gt;&lt;a href=&quot;../api/core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; then creates an instance of each component.</source>
          <target state="translated">后 &lt;code&gt;loadComponent()&lt;/code&gt; 选择广告，它使用 &lt;code&gt;&lt;a href=&quot;../api/core/componentfactoryresolver&quot;&gt;ComponentFactoryResolver&lt;/a&gt;&lt;/code&gt; 解析 &lt;code&gt;&lt;a href=&quot;../api/core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; 为每个特定的组件。然后， &lt;code&gt;&lt;a href=&quot;../api/core/componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; 将创建每个组件的实例。</target>
        </trans-unit>
        <trans-unit id="9fb00e37b227919be0aad314249b616191ba52b3" translate="yes" xml:space="preserve">
          <source>After a few changes, the &lt;code&gt;BannerComponent&lt;/code&gt; presents a dynamic title by binding to the component's &lt;code&gt;title&lt;/code&gt; property like this.</source>
          <target state="translated">进行一些更改后， &lt;code&gt;BannerComponent&lt;/code&gt; 通过绑定到组件的 &lt;code&gt;title&lt;/code&gt; 属性来呈现动态标题，如下所示。</target>
        </trans-unit>
        <trans-unit id="d73f75b5fbde281c2a56c1e7a51d961f6ce8031e" translate="yes" xml:space="preserve">
          <source>After a navigation completes, the router writes an object containing this value together with a &lt;code&gt;navigationId&lt;/code&gt; to &lt;code&gt;history.state&lt;/code&gt;. The value is written when &lt;code&gt;location.go()&lt;/code&gt; or &lt;code&gt;location.replaceState()&lt;/code&gt; is called before activating this route.</source>
          <target state="translated">导航完成后，路由器写一个包含与此值一起的对象 &lt;code&gt;navigationId&lt;/code&gt; 到 &lt;code&gt;history.state&lt;/code&gt; 。在激活此路由之前，在调用 &lt;code&gt;location.go()&lt;/code&gt; 或 &lt;code&gt;location.replaceState()&lt;/code&gt; 时写入该值。</target>
        </trans-unit>
        <trans-unit id="b79df42799ec10695c520a6481dd82d8fc694c4e" translate="yes" xml:space="preserve">
          <source>After asynchronous validation begins, the form control enters a &lt;code&gt;pending&lt;/code&gt; state. You can inspect the control's &lt;code&gt;pending&lt;/code&gt; property and use it to give visual feedback about the ongoing validation.</source>
          <target state="translated">开始异步验证后，表单控件进入 &lt;code&gt;pending&lt;/code&gt; 状态。您可以检查控件的 &lt;code&gt;pending&lt;/code&gt; 属性，并使用它提供有关正在进行的验证的视觉反馈。</target>
        </trans-unit>
        <trans-unit id="1949057a22110c4f9e7c99ac7d9df533785aff6c" translate="yes" xml:space="preserve">
          <source>After calling &lt;code&gt;compileComponents&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; configuration is frozen for the duration of the current spec.</source>
          <target state="translated">调用 &lt;code&gt;compileComponents&lt;/code&gt; 之后，将在当前规范期间冻结 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 配置。</target>
        </trans-unit>
        <trans-unit id="a643cff95be73e7ada55a9e30505cef7897bfafd" translate="yes" xml:space="preserve">
          <source>After calling &lt;code&gt;get&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; configuration is frozen for the duration of the current spec.</source>
          <target state="translated">调用 &lt;code&gt;get&lt;/code&gt; 之后，将在当前规范期间冻结 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 配置。</target>
        </trans-unit>
        <trans-unit id="1fed1c4462312ad23f49ad51074811e7c8bbd213" translate="yes" xml:space="preserve">
          <source>After completing all tutorial steps, the final app will look like this: .</source>
          <target state="translated">完成所有的教程步骤后,最终的应用程序将是这样的:。</target>
        </trans-unit>
        <trans-unit id="696e6cddb6abbbb7365bc7effa9b0e9e22c936f4" translate="yes" xml:space="preserve">
          <source>After configuring &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;, you call its &lt;code&gt;createComponent()&lt;/code&gt; method.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 之后，调用其 &lt;code&gt;createComponent()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9e0b80f068a3dc7233fd3da3591afc15239e870f" translate="yes" xml:space="preserve">
          <source>After configuring the routes, tell the Angular router where to render the views when matched with a route. You can set a router outlet by inserting a &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; container inside the root &lt;code&gt;AppComponent&lt;/code&gt; template.</source>
          <target state="translated">配置完路由后，告诉Angular路由器与路由匹配后在何处呈现视图。您可以通过在根 &lt;code&gt;AppComponent&lt;/code&gt; 模板内插入 &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; 容器来设置路由器出口。</target>
        </trans-unit>
        <trans-unit id="b2a28e2451f609ec3b8c9cfc853ca69f5800dc42" translate="yes" xml:space="preserve">
          <source>After each &lt;em&gt;successful&lt;/em&gt; navigation, the router looks in its configuration for an unloaded module that it can preload. Whether it preloads a module, and which modules it preloads, depends upon the &lt;em&gt;preload strategy&lt;/em&gt;.</source>
          <target state="translated">每次&lt;em&gt;成功&lt;/em&gt;导航后，路由器都会在其配置中查找可以预加载的已卸载模块。是否预加载模块以及预加载哪个模块，取决于&lt;em&gt;预加载策略&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="419172c8f41df56ca4ec63737a151d4364c46122" translate="yes" xml:space="preserve">
          <source>After each call, the &lt;code&gt;onKey()&lt;/code&gt; method appends the contents of the input box value to the list in the component's &lt;code&gt;values&lt;/code&gt; property, followed by a separator character (|). The &lt;a href=&quot;template-syntax#interpolation&quot;&gt;interpolation&lt;/a&gt; displays the accumulating input box changes from the &lt;code&gt;values&lt;/code&gt; property.</source>
          <target state="translated">每次调用后， &lt;code&gt;onKey()&lt;/code&gt; 方法将输入框值的内容附加到组件的 &lt;code&gt;values&lt;/code&gt; 属性中的列表中，后跟分隔符（|）。的&lt;a href=&quot;template-syntax#interpolation&quot;&gt;插值&lt;/a&gt;显示累积输入框从变化 &lt;code&gt;values&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="008e39459cd91bca6dfdd98e174699d09c6fccd2" translate="yes" xml:space="preserve">
          <source>After importing the &lt;code&gt;&lt;a href=&quot;../api/common/http/http_interceptors&quot;&gt;HTTP_INTERCEPTORS&lt;/a&gt;&lt;/code&gt; injection token from &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt;, write the &lt;code&gt;NoopInterceptor&lt;/code&gt; provider like this:</source>
          <target state="translated">从 &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;导入 &lt;code&gt;&lt;a href=&quot;../api/common/http/http_interceptors&quot;&gt;HTTP_INTERCEPTORS&lt;/a&gt;&lt;/code&gt; 注入令牌后，编写 &lt;code&gt;NoopInterceptor&lt;/code&gt; 提供程序，如下所示：</target>
        </trans-unit>
        <trans-unit id="83c406a785dd29fda73c73fc2726e47d708215b9" translate="yes" xml:space="preserve">
          <source>After importing the &lt;code&gt;Hero&lt;/code&gt; class, the &lt;code&gt;AppComponent.heroes&lt;/code&gt; property can return a &lt;em&gt;typed&lt;/em&gt; array of &lt;code&gt;Hero&lt;/code&gt; objects:</source>
          <target state="translated">导入 &lt;code&gt;Hero&lt;/code&gt; 类后， &lt;code&gt;AppComponent.heroes&lt;/code&gt; 属性可以返回 &lt;code&gt;Hero&lt;/code&gt; 对象的&lt;em&gt;类型化&lt;/em&gt;数组：</target>
        </trans-unit>
        <trans-unit id="908459e9f22ef8c117d2224aed3f0083328f5571" translate="yes" xml:space="preserve">
          <source>After installing the module, the app will make requests to and receive responses from the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; without knowing that the &lt;em&gt;In-memory Web API&lt;/em&gt; is intercepting those requests, applying them to an in-memory data store, and returning simulated responses.</source>
          <target state="translated">安装模块后，应用程序将向 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 发出请求并从HttpClient接收响应，而无需知道&lt;em&gt;内存中的Web API&lt;/em&gt;正在拦截这些请求，将它们应用于内存中的数据存储，并返回模拟的响应。</target>
        </trans-unit>
        <trans-unit id="4f0baed191f44ae58456adfc0362749f9effe3c0" translate="yes" xml:space="preserve">
          <source>After navigating to the &lt;code&gt;HeroDetailComponent&lt;/code&gt;, you expect to see the details of the selected hero. You need &lt;em&gt;two&lt;/em&gt; pieces of information: the routing path to the component and the hero's &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">导航到 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 后，您希望看到所选英雄的详细信息。您需要&lt;em&gt;两条&lt;/em&gt;信息：到组件的路由路径和英雄的 &lt;code&gt;id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5cc19cafc387e05e410e89f41afd0efcd0c1414" translate="yes" xml:space="preserve">
          <source>After putting a few items in the cart, users can now review their items, enter name and address, and submit their purchase:</source>
          <target state="translated">在将几件商品放入购物车后,用户现在可以查看自己的商品,输入姓名和地址,并提交购买。</target>
        </trans-unit>
        <trans-unit id="e03e757be9acc140f73ee6244153323fd294fc41" translate="yes" xml:space="preserve">
          <source>After reading the contents into a string, parse the configuration into a JSON object, typed to the &lt;code&gt;WorkspaceSchema&lt;/code&gt;.</source>
          <target state="translated">将内容读取为字符串后，将配置解析为JSON对象，并输入到 &lt;code&gt;WorkspaceSchema&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34315c2a12a11033b196feb54799145cf720a985" translate="yes" xml:space="preserve">
          <source>After reporting the error to the console, the handler constructs a user friendly message and returns a safe value to the app so the app can keep working.</source>
          <target state="translated">在向控制台报告错误后,处理程序构建一个用户友好的消息,并向应用程序返回一个安全值,以便应用程序可以继续工作。</target>
        </trans-unit>
        <trans-unit id="83d2da68a0ee9c48b717bc70206a4279e94449f1" translate="yes" xml:space="preserve">
          <source>After revision, the core of the form should look like this:</source>
          <target state="translated">修改后,表格的核心应该是这样的。</target>
        </trans-unit>
        <trans-unit id="8e0baa03c5ec2030c3efd05bc4b8e0cca8e1205f" translate="yes" xml:space="preserve">
          <source>After running this command you will notice that the &lt;code&gt;angular.json&lt;/code&gt; configuration file has been updated to add two new targets, with a few other changes.</source>
          <target state="translated">运行此命令后，您会注意到 &lt;code&gt;angular.json&lt;/code&gt; 配置文件已更新为添加两个新目标，并进行了其他一些更改。</target>
        </trans-unit>
        <trans-unit id="eac16cd44b7936bb92ae25b6779b27d5c6b96c42" translate="yes" xml:space="preserve">
          <source>After some time passes, the observable chain completes and the async validation is done. The &lt;code&gt;pending&lt;/code&gt; flag is set to &lt;code&gt;false&lt;/code&gt;, and the form validity is updated.</source>
          <target state="translated">经过一段时间后，可观察链完成，异步验证完成。该 &lt;code&gt;pending&lt;/code&gt; 标志设置为 &lt;code&gt;false&lt;/code&gt; ，并且形式有效性进行更新。</target>
        </trans-unit>
        <trans-unit id="5fd5602bf74389e7adc143f2ca100a6303afe748" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;, add the &lt;code&gt;HttpClientInMemoryWebApiModule&lt;/code&gt; to the &lt;code&gt;AppModule&lt;/code&gt;&lt;code&gt;imports&lt;/code&gt; array and configure it with the &lt;code&gt;InMemoryDataService&lt;/code&gt;.</source>
          <target state="translated">在后 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; ，添加 &lt;code&gt;HttpClientInMemoryWebApiModule&lt;/code&gt; 到 &lt;code&gt;AppModule&lt;/code&gt; &lt;code&gt;imports&lt;/code&gt; 阵列，并与配置它 &lt;code&gt;InMemoryDataService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db93e549ab6aee486147223c94fcf8b921e25c93" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; metadata comes the directive's controller class, called &lt;code&gt;HighlightDirective&lt;/code&gt;, which contains the (currently empty) logic for the directive. Exporting &lt;code&gt;HighlightDirective&lt;/code&gt; makes the directive accessible.</source>
          <target state="translated">之后， &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 的元数据来指令的控制器类，称为 &lt;code&gt;HighlightDirective&lt;/code&gt; ，其中包含了（目前为空）逻辑指令。导出 &lt;code&gt;HighlightDirective&lt;/code&gt; 使指令可访问。</target>
        </trans-unit>
        <trans-unit id="54bbcb802a76f1768ba4c84338e5804ce691385a" translate="yes" xml:space="preserve">
          <source>After the &lt;em&gt;link parameters array&lt;/em&gt;, add an object with a &lt;code&gt;&lt;a href=&quot;../api/router/navigationextras#relativeTo&quot;&gt;relativeTo&lt;/a&gt;&lt;/code&gt; property set to the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;. The router then calculates the target URL based on the active route's location.</source>
          <target state="translated">在&lt;em&gt;链接参数数组之后&lt;/em&gt;，将一个具有 &lt;code&gt;&lt;a href=&quot;../api/router/navigationextras#relativeTo&quot;&gt;relativeTo&lt;/a&gt;&lt;/code&gt; 属性设置的对象添加到 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 。然后，路由器根据活动路由的位置计算目标URL。</target>
        </trans-unit>
        <trans-unit id="7bf50ab32f282dd4ec21fd3291f4baa2c752ec72" translate="yes" xml:space="preserve">
          <source>After the browser refreshes you can navigate freely between the two views by clicking the links.</source>
          <target state="translated">浏览器刷新后,您可以通过点击链接在两个视图之间自由浏览。</target>
        </trans-unit>
        <trans-unit id="3b526911261e54097bd46512826f0d84fb5a514b" translate="yes" xml:space="preserve">
          <source>After the browser refreshes, the app should run as before, showing a list of heroes and a hero detail view when you click on a hero name.</source>
          <target state="translated">浏览器刷新后,应用程序应该像以前一样运行,当你点击一个英雄名称时,会显示一个英雄列表和一个英雄细节视图。</target>
        </trans-unit>
        <trans-unit id="42fa6cf8b20d6dc5f57b8f4a17f18ee0d574f97d" translate="yes" xml:space="preserve">
          <source>After the browser refreshes, the application is broken.</source>
          <target state="translated">浏览器刷新后,应用程序被破坏。</target>
        </trans-unit>
        <trans-unit id="46d6f82df55a653f3faad167f152f46db5094bdc" translate="yes" xml:space="preserve">
          <source>After the browser refreshes, the list of heroes appears.</source>
          <target state="translated">浏览器刷新后,出现英雄列表。</target>
        </trans-unit>
        <trans-unit id="bc6532651982e9b93beffa6bd020bc11046b1209" translate="yes" xml:space="preserve">
          <source>After the browser refreshes, the list of names reappears. The details area is blank. Click a hero in the list of heroes and its details appear. The app seems to be working again. The heroes appear in a list and details about the clicked hero appear at the bottom of the page.</source>
          <target state="translated">浏览器刷新后,名称列表重新出现。详情区域为空白。点击英雄列表中的一个英雄,其详细信息出现。应用程序似乎又可以工作了。英雄出现在列表中,有关点击的英雄的详细信息出现在页面底部。</target>
        </trans-unit>
        <trans-unit id="7659d9da0a61e0aae6492e6646b8c9535def19f1" translate="yes" xml:space="preserve">
          <source>After the browser refreshes, the router loads the &lt;code&gt;DashboardComponent&lt;/code&gt; and the browser address bar shows the &lt;code&gt;/dashboard&lt;/code&gt; URL.</source>
          <target state="translated">浏览器刷新后，路由器将加载 &lt;code&gt;DashboardComponent&lt;/code&gt; ，浏览器地址栏将显示 &lt;code&gt;/dashboard&lt;/code&gt; URL。</target>
        </trans-unit>
        <trans-unit id="0640fb3fc7fb52ddfb8e650b89dff61362d5f7a6" translate="yes" xml:space="preserve">
          <source>After the command produces an optimal build of your application (equivalent to &lt;code&gt;ng deploy --prod&lt;/code&gt;), it'll upload the production assets to Firebase.</source>
          <target state="translated">该命令为您的应用程序生成最佳构建（等效于 &lt;code&gt;ng deploy --prod&lt;/code&gt; ）后，它将把生产资产上传到Firebase。</target>
        </trans-unit>
        <trans-unit id="483b9518a2e29ad9c684bb70f280dcc5ada210de" translate="yes" xml:space="preserve">
          <source>After the end of each successful navigation lifecycle, the router builds a tree of &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; objects that make up the current state of the router. You can access the current &lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; from anywhere in the application using the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service and the &lt;code&gt;&lt;a href=&quot;../api/router/router#routerState&quot;&gt;routerState&lt;/a&gt;&lt;/code&gt; property.</source>
          <target state="translated">在每个成功的导航生命周期结束之后，路由器将构建一棵 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 对象树，这些对象构成路由器的当前状态。您可以使用 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 服务和 &lt;code&gt;&lt;a href=&quot;../api/router/router#routerState&quot;&gt;routerState&lt;/a&gt;&lt;/code&gt; 属性从应用程序中的任何位置访问当前 &lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f5243cfeda101fda77f99ad21d8e0070af98e8a" translate="yes" xml:space="preserve">
          <source>After the import statements is a class with the &lt;strong&gt;&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt;&lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt;.</source>
          <target state="translated">import语句后是与一类&lt;strong&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;/strong&gt;&lt;a href=&quot;glossary#decorator&quot;&gt;装饰&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9971305116ca9c868d98b3be89949b39ec63ad5d" translate="yes" xml:space="preserve">
          <source>After the initial scaffolding, you will need to refactor your code to use the Web Worker by sending messages to and from.</source>
          <target state="translated">在最初的脚手架之后,您将需要重构您的代码,通过向和从Web Worker发送消息来使用Web Worker。</target>
        </trans-unit>
        <trans-unit id="0f5ecb7050161de366e5e91b7e62fd6949d0e0bf" translate="yes" xml:space="preserve">
          <source>After the pluralization category, put the default English text in braces (&lt;code&gt;{}&lt;/code&gt;).</source>
          <target state="translated">在复数类别之后，将默认的英文文本放在花括号（ &lt;code&gt;{}&lt;/code&gt; ）中。</target>
        </trans-unit>
        <trans-unit id="7aaa7f92f66008daa88b0514882f49868900fff5" translate="yes" xml:space="preserve">
          <source>After the refactoring in this tutorial, &lt;code&gt;HeroesComponent&lt;/code&gt; will be lean and focused on supporting the view. It will also be easier to unit-test with a mock service.</source>
          <target state="translated">在本教程中进行重构之后， &lt;code&gt;HeroesComponent&lt;/code&gt; 将变得精简并专注于支持视图。使用模拟服务进行单元测试也将更加容易。</target>
        </trans-unit>
        <trans-unit id="9d71b7bc24e4e4f91a441c9bafe797e0957e6170" translate="yes" xml:space="preserve">
          <source>After these changes, &lt;code&gt;npm start&lt;/code&gt; no longer works. You must choose to configure &lt;em&gt;either&lt;/em&gt; for F5 with IIS &lt;em&gt;or&lt;/em&gt; for &lt;code&gt;npm start&lt;/code&gt; with the lite-server.</source>
          <target state="translated">这些更改之后， &lt;code&gt;npm start&lt;/code&gt; 不再起作用。你必须选择配置&lt;em&gt;无论是&lt;/em&gt;对F5与IIS &lt;em&gt;或&lt;/em&gt;对 &lt;code&gt;npm start&lt;/code&gt; 与精简版的服务器。</target>
        </trans-unit>
        <trans-unit id="4a81e5af1ec083b54117df3e04dc53564d570b55" translate="yes" xml:space="preserve">
          <source>After these changes, the folder structure looks like this:</source>
          <target state="translated">经过这些改变后,文件夹的结构是这样的。</target>
        </trans-unit>
        <trans-unit id="70bfcc0137b88df51dbf757d780aa43b22057bf9" translate="yes" xml:space="preserve">
          <source>After these steps, the &lt;code&gt;AppModule&lt;/code&gt; should look like this:</source>
          <target state="translated">这些步骤之后， &lt;code&gt;AppModule&lt;/code&gt; 应如下所示：</target>
        </trans-unit>
        <trans-unit id="271311210f9d7845ddfa1653eb8a3eedc0ea57b8" translate="yes" xml:space="preserve">
          <source>After these steps, the file should look like this.</source>
          <target state="translated">经过这些步骤,文件应该是这样的。</target>
        </trans-unit>
        <trans-unit id="6d8f89045f7e2acb9275de066e103479b5097428" translate="yes" xml:space="preserve">
          <source>After this, the service is injectable anywhere in AngularJS code:</source>
          <target state="translated">在这之后,服务就可以在AngularJS代码的任何地方注入。</target>
        </trans-unit>
        <trans-unit id="fcde218b3f76c0d5a06408da878317fa4d98e74a" translate="yes" xml:space="preserve">
          <source>After you build your library and schematics, you can install the schematics collection to run against your project. The steps below show you how to generate a service using the schematic you created above.</source>
          <target state="translated">在你建立了你的库和原理图之后,你可以安装原理图集合来对你的项目进行运行。下面的步骤显示了如何使用上面创建的示意图生成一个服务。</target>
        </trans-unit>
        <trans-unit id="39eb8f3e1e50fb4d2205dbbe04a4d31291e11491" translate="yes" xml:space="preserve">
          <source>After you create the control in the component class, you must associate it with a form control element in the template. Update the template with the form control using the &lt;code&gt;formControl&lt;/code&gt; binding provided by &lt;code&gt;&lt;a href=&quot;../api/forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; included in &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在组件类中创建控件之后，必须将其与模板中的表单控件元素相关联。使用 &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 中包含的 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; 提供的 &lt;code&gt;formControl&lt;/code&gt; 绑定，使用表单控件更新模板。</target>
        </trans-unit>
        <trans-unit id="fbf361f75395728462ca66efab4faaa84acc5f29" translate="yes" xml:space="preserve">
          <source>After you understand the basic Angular building blocks, you can begin to learn more about the features and tools that are available to help you develop and deliver Angular applications. Here are some key features.</source>
          <target state="translated">在了解了基本的Angular构件之后,您可以开始了解更多关于可用来帮助您开发和交付Angular应用程序的功能和工具。以下是一些关键功能。</target>
        </trans-unit>
        <trans-unit id="ed53a81c228abae3e127057c4f013ec9f3b3b916" translate="yes" xml:space="preserve">
          <source>After you update the model in the component class, update the template to connect the form group instance and its input elements.</source>
          <target state="translated">在组件类中更新模型后,更新模板以连接表单组实例及其输入元素。</target>
        </trans-unit>
        <trans-unit id="13f2d652f70945cb85fc5562fc3600a535ffb359" translate="yes" xml:space="preserve">
          <source>After:</source>
          <target state="translated">After:</target>
        </trans-unit>
        <trans-unit id="bf736dd76163b3c028eaca0186965ed06ab740d9" translate="yes" xml:space="preserve">
          <source>AfterContent</source>
          <target state="translated">AfterContent</target>
        </trans-unit>
        <trans-unit id="22e7a3bedea783cbdeab7bd8a1c5c1a6933d48cc" translate="yes" xml:space="preserve">
          <source>AfterContent hooks</source>
          <target state="translated">AfterContent 钩子</target>
        </trans-unit>
        <trans-unit id="396ee41ee88aacc341467dae99af0924912509a1" translate="yes" xml:space="preserve">
          <source>AfterContentChecked</source>
          <target state="translated">AfterContentChecked</target>
        </trans-unit>
        <trans-unit id="b2505c44737fd6fda2403d1f31157a2aa14b58ec" translate="yes" xml:space="preserve">
          <source>AfterContentInit</source>
          <target state="translated">AfterContentInit</target>
        </trans-unit>
        <trans-unit id="366ba05d3fa1b33c450e5743e4c241f267857737" translate="yes" xml:space="preserve">
          <source>AfterView</source>
          <target state="translated">AfterView</target>
        </trans-unit>
        <trans-unit id="0e548cdea94b6d14670caf854978f7ac93fb98bb" translate="yes" xml:space="preserve">
          <source>AfterViewChecked</source>
          <target state="translated">AfterViewChecked</target>
        </trans-unit>
        <trans-unit id="f4ad582e07b30bc57425e6b367e57a5676f5f7b1" translate="yes" xml:space="preserve">
          <source>AfterViewInit</source>
          <target state="translated">AfterViewInit</target>
        </trans-unit>
        <trans-unit id="2b9c1b59aec1e136bb7f39d1dffbf0f3269f6892" translate="yes" xml:space="preserve">
          <source>Again, as with Angular components, register the provider with the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; by adding it to the module's &lt;code&gt;providers&lt;/code&gt; list.</source>
          <target state="translated">同样，与Angular组件一样，通过将 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 添加到模块的 &lt;code&gt;providers&lt;/code&gt; 列表中来注册提供程序。</target>
        </trans-unit>
        <trans-unit id="a1f06ddfc491ba69f7991b805ea8e721d693d361" translate="yes" xml:space="preserve">
          <source>Against the &lt;code&gt;ElementInjector&lt;/code&gt; hierarchy (its parents)</source>
          <target state="translated">针对 &lt;code&gt;ElementInjector&lt;/code&gt; 层次结构（其父级）</target>
        </trans-unit>
        <trans-unit id="0e761a2c37c7ad2715a5ceccd5ba263aacc9de9a" translate="yes" xml:space="preserve">
          <source>Against the &lt;code&gt;ModuleInjector&lt;/code&gt; hierarchy (its parents)</source>
          <target state="translated">针对 &lt;code&gt;ModuleInjector&lt;/code&gt; 层次结构（其父级）</target>
        </trans-unit>
        <trans-unit id="d0efe0b2c75c1c670b3146f5f276e23a667f15ec" translate="yes" xml:space="preserve">
          <source>Alerts</source>
          <target state="translated">Alerts</target>
        </trans-unit>
        <trans-unit id="0bf7a49c8ea017edc7f2032bbb4b0c95e81f0ea3" translate="yes" xml:space="preserve">
          <source>Alerts and Calllouts</source>
          <target state="translated">警报和呼救</target>
        </trans-unit>
        <trans-unit id="9089f32a47f1474eff56fa0a9c798f852209325c" translate="yes" xml:space="preserve">
          <source>Alerts and callouts present warnings, extra detail or references to other pages. They can also be used to provide commentary that &lt;em&gt;enriches&lt;/em&gt; the reader's understanding of the content being presented.</source>
          <target state="translated">警报和标注会显示警告，其他详细信息或对其他页面的引用。它们还可用于提供评论，以&lt;em&gt;丰富&lt;/em&gt;读者对所呈现内容的理解。</target>
        </trans-unit>
        <trans-unit id="7804d4cc875a2b345b93ae440e9d3d6a2f4d4cb0" translate="yes" xml:space="preserve">
          <source>Alerts draw attention to short important points. Alerts should not be used for multi-line content (use &lt;a href=&quot;docs-style-guide#callouts&quot;&gt;callouts&lt;/a&gt; instead).</source>
          <target state="translated">警报提醒您注意短的重点。警报不应用于多行内容（改为使用&lt;a href=&quot;docs-style-guide#callouts&quot;&gt;标注&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="04259816ace1ebe56c853a8763558570c008514a" translate="yes" xml:space="preserve">
          <source>Alias</source>
          <target state="translated">Alias</target>
        </trans-unit>
        <trans-unit id="ac120c6d632c0aafed10d7ef62acaa6d28479bb6" translate="yes" xml:space="preserve">
          <source>Alias inputs and outputs in the metadata using a colon-delimited (&lt;code&gt;:&lt;/code&gt;) string with the directive property name on the left and the public alias on the right:</source>
          <target state="translated">别名的输入和输出在所述元数据使用冒号分隔（ &lt;code&gt;:&lt;/code&gt; ）字符串与左边和右边的公共别名指令属性名：</target>
        </trans-unit>
        <trans-unit id="faa3adcf19e6bd4a892728c2e0aceda3aee71007" translate="yes" xml:space="preserve">
          <source>Alias providers: &lt;code&gt;&lt;a href=&quot;../api/core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">别名提供者： &lt;code&gt;&lt;a href=&quot;../api/core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="262c295e8156615b23a9b9a21875280876ff6fe3" translate="yes" xml:space="preserve">
          <source>Aliased class providers</source>
          <target state="translated">别名类提供者</target>
        </trans-unit>
        <trans-unit id="12e8d87619a5b14f34a496b823d54d6c51209a45" translate="yes" xml:space="preserve">
          <source>Aliases: -D</source>
          <target state="translated">别名:-D</target>
        </trans-unit>
        <trans-unit id="bca726a706e0cb987a708ca99e96eb229c4ee2e7" translate="yes" xml:space="preserve">
          <source>Aliases: -S</source>
          <target state="translated">别名:-S</target>
        </trans-unit>
        <trans-unit id="2b618ef645988dbdfa96c6d0dd9b31d701ea7892" translate="yes" xml:space="preserve">
          <source>Aliases: -c</source>
          <target state="translated">别名:-c</target>
        </trans-unit>
        <trans-unit id="21c330a0e2a2e6fdb8fdc16b0cfc8dfca9621ef7" translate="yes" xml:space="preserve">
          <source>Aliases: -d</source>
          <target state="translated">别名:-d</target>
        </trans-unit>
        <trans-unit id="53241387fa776157e1ac709db2bc0b9ff4269351" translate="yes" xml:space="preserve">
          <source>Aliases: -f</source>
          <target state="translated">别名:-f</target>
        </trans-unit>
        <trans-unit id="f888e82379026d00996152912a3ff9af72da352f" translate="yes" xml:space="preserve">
          <source>Aliases: -g</source>
          <target state="translated">别名:-g</target>
        </trans-unit>
        <trans-unit id="bb9dd7df504aed89801306b3b923af073484cd3d" translate="yes" xml:space="preserve">
          <source>Aliases: -m</source>
          <target state="translated">别名:-m</target>
        </trans-unit>
        <trans-unit id="952d01c1396bf00dc43b948288f5644768618c70" translate="yes" xml:space="preserve">
          <source>Aliases: -o</source>
          <target state="translated">别名:-o</target>
        </trans-unit>
        <trans-unit id="33465e48b30d9b87760e03b4bb2dcf9485e72b0c" translate="yes" xml:space="preserve">
          <source>Aliases: -p</source>
          <target state="translated">别名:-p</target>
        </trans-unit>
        <trans-unit id="febb997df0041b129449bb01c60c3ab7719f4b0c" translate="yes" xml:space="preserve">
          <source>Aliases: -s</source>
          <target state="translated">别名:-s</target>
        </trans-unit>
        <trans-unit id="881d4fb37b8ea4b85e378da2acccae617df1bc81" translate="yes" xml:space="preserve">
          <source>Aliases: -t</source>
          <target state="translated">别名:-t</target>
        </trans-unit>
        <trans-unit id="2b36dfa50916141297a3b84dc3d7b4f0ef1e1849" translate="yes" xml:space="preserve">
          <source>Aliases: -v</source>
          <target state="translated">别名:-v</target>
        </trans-unit>
        <trans-unit id="773b2f76a828881e99082e584a105ac17854ae4c" translate="yes" xml:space="preserve">
          <source>Aliasing in the metadata</source>
          <target state="translated">元数据中的重命名</target>
        </trans-unit>
        <trans-unit id="12aeae68aab8c241da4ec948e46d9fc4b87c3bee" translate="yes" xml:space="preserve">
          <source>Aliasing inputs and outputs</source>
          <target state="translated">对输入和输出进行混叠</target>
        </trans-unit>
        <trans-unit id="cbf22d2da5af310a1d6c29300763bcccdf5470a5" translate="yes" xml:space="preserve">
          <source>Aliasing with the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;/&lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; decorator</source>
          <target state="translated">使用 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; / &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 装饰器进行混叠</target>
        </trans-unit>
        <trans-unit id="9b2b0d9f150b1cf5ad45ddd02b66c50057628f62" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event&quot;&gt;standard DOM event objects&lt;/a&gt; have a &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; property, a reference to the element that raised the event. In this case, &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; refers to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element&lt;/a&gt; and &lt;code&gt;event.target.value&lt;/code&gt; returns the current contents of that element.</source>
          <target state="translated">所有&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event&quot;&gt;标准DOM事件对象&lt;/a&gt;都有一个 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; 属性，即对引发事件的元素的引用。在这种情况下， &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; 引用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元素&lt;/a&gt;， &lt;code&gt;event.target.value&lt;/code&gt; 返回该元素的当前内容。</target>
        </trans-unit>
        <trans-unit id="ef6c45b243cc8c7684094d620c0717caf5d06ab2" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; methods return an RxJS &lt;code&gt;Observable&lt;/code&gt; of something.</source>
          <target state="translated">所有 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 方法都返回RxJS &lt;code&gt;Observable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb5599b660b0c79a86b5a28beaddb416d3aedf11" translate="yes" xml:space="preserve">
          <source>All Angular components, directives and pipes must be declared in an NgModule.</source>
          <target state="translated">所有的Angular组件、指令和管道都必须在NgModule中声明。</target>
        </trans-unit>
        <trans-unit id="47f1a89f57ee46d779c84c05d4e22158f2e9d3d7" translate="yes" xml:space="preserve">
          <source>All behavior is based on the expected behavior of the JavaScript API &lt;code&gt;Array.prototype.slice()&lt;/code&gt; and &lt;code&gt;String.prototype.slice()&lt;/code&gt;.</source>
          <target state="translated">所有行为均基于JavaScript API &lt;code&gt;Array.prototype.slice()&lt;/code&gt; 和 &lt;code&gt;String.prototype.slice()&lt;/code&gt; 的预期行为。</target>
        </trans-unit>
        <trans-unit id="83f4574e35f933628564acc9e9670adf27bc7144" translate="yes" xml:space="preserve">
          <source>All but Chrome, Firefox, Edge, IE 11 and Safari 10</source>
          <target state="translated">除了Chrome、Firefox、Edge、IE 11和Safari 10之外的所有浏览器。</target>
        </trans-unit>
        <trans-unit id="78cf0dfc4ff02c126ec8a635233f5056f63a2233" translate="yes" xml:space="preserve">
          <source>All but a few guide pages are &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;markdown&lt;/a&gt; files with an &lt;code&gt;.md&lt;/code&gt; extension.</source>
          <target state="translated">除少数指南页面外，所有其他页面都是带有 &lt;code&gt;.md&lt;/code&gt; 扩展名的&lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;markdown&lt;/a&gt;文件。</target>
        </trans-unit>
        <trans-unit id="f6163b0506b3d6cee19ae1ba67afebd88a78b3f5" translate="yes" xml:space="preserve">
          <source>All callbacks provided via this token will be called for every component that is bootstrapped. Signature of the callback:</source>
          <target state="translated">所有通过此标记提供的回调都会被每个被引导的组件所调用。回调的签名。</target>
        </trans-unit>
        <trans-unit id="f6d4518e763e3cfc934ceb005f87993289fc3d75" translate="yes" xml:space="preserve">
          <source>All content is one asset per file. Each component, service, and pipe is in its own file. All third party vendor scripts are stored in another folder and not in the &lt;code&gt;src&lt;/code&gt; folder. You didn't write them and you don't want them cluttering &lt;code&gt;src&lt;/code&gt;. Use the naming conventions for files in this guide. &lt;a href=&quot;styleguide#toc&quot;&gt;Back to top&lt;/a&gt;</source>
          <target state="translated">每个文件的所有内容都是一项资产。每个组件，服务和管道都在其自己的文件中。所有第三方供应商脚本都存储在另一个文件夹中，而不是 &lt;code&gt;src&lt;/code&gt; 文件夹中。您没有写过它们，也不想让它们混乱 &lt;code&gt;src&lt;/code&gt; 。使用本指南中文件的命名约定。&lt;a href=&quot;styleguide#toc&quot;&gt;回到顶部&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4ed2d8bd132c629609779d7b7c0ee7dd1066456" translate="yes" xml:space="preserve">
          <source>All entry points</source>
          <target state="translated">所有入境点</target>
        </trans-unit>
        <trans-unit id="2d9456ba0cf30f1f1f1d87dee95529f33f56b70b" translate="yes" xml:space="preserve">
          <source>All exports</source>
          <target state="translated">所有出口</target>
        </trans-unit>
        <trans-unit id="555a5a2314312f0604886df5753dde617de5c81b" translate="yes" xml:space="preserve">
          <source>All guides and cookbooks have &lt;em&gt;at least these core files&lt;/em&gt;. Each file has a distinct purpose and evolves independently as the application grows.</source>
          <target state="translated">所有指南和食谱&lt;em&gt;至少&lt;/em&gt;都有&lt;em&gt;这些核心文件&lt;/em&gt;。每个文件都有不同的用途，并且随着应用程序的增长而独立发展。</target>
        </trans-unit>
        <trans-unit id="1d20c95590619af50ebe88a44377237c9334e6cc" translate="yes" xml:space="preserve">
          <source>All lazy-loaded modules are routed feature modules by definition.</source>
          <target state="translated">根据定义,所有的懒加载模块都是路由功能模块。</target>
        </trans-unit>
        <trans-unit id="ba497163aacd2f415fc3983fbe5ba57cdc70e6dc" translate="yes" xml:space="preserve">
          <source>All locale data used by Angular are extracted from the Unicode Consortium's &lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;Common Locale Data Repository (CLDR)&lt;/a&gt;.</source>
          <target state="translated">Angular使用的所有语言环境数据均从Unicode联盟的&lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;公共语言环境数据存储库（CLDR）&lt;/a&gt;中提取。</target>
        </trans-unit>
        <trans-unit id="fa94ed73b28264b28c71949c216d5b8431fb586e" translate="yes" xml:space="preserve">
          <source>All observables returned from &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; methods are &lt;em&gt;cold&lt;/em&gt; by design. Execution of the HTTP request is &lt;em&gt;deferred&lt;/em&gt;, allowing you to extend the observable with additional operations such as &lt;code&gt;tap&lt;/code&gt; and &lt;code&gt;catchError&lt;/code&gt; before anything actually happens.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 方法返回的所有可观察对象在设计上都是&lt;em&gt;冷&lt;/em&gt;的。HTTP请求的执行被&lt;em&gt;延迟&lt;/em&gt;，允许您在实际发生任何事情之前通过其他操作（例如 &lt;code&gt;tap&lt;/code&gt; 和 &lt;code&gt;catchError&lt;/code&gt; )扩展可观察的对象。</target>
        </trans-unit>
        <trans-unit id="9bcf03575f88913e03cd13ed033b90e1cf77192a" translate="yes" xml:space="preserve">
          <source>All occurrences of a text message that have the same meaning will have the same translation. A text message that is associated with different meanings can have different translations.</source>
          <target state="translated">具有相同含义的文本信息的所有出现都会有相同的翻译。与不同含义相关联的短信可以有不同的译文。</target>
        </trans-unit>
        <trans-unit id="4d561a31794ae7f01849587f849895e07f7350e8" translate="yes" xml:space="preserve">
          <source>All of our major releases are supported for 18 months.</source>
          <target state="translated">我们所有的主要版本都支持18个月。</target>
        </trans-unit>
        <trans-unit id="54bd78bf36660977460696089ef9b9012bc21577" translate="yes" xml:space="preserve">
          <source>All of the &lt;code&gt;wtf*&lt;/code&gt; APIs are deprecated and will be removed in a future version.</source>
          <target state="translated">所有 &lt;code&gt;wtf*&lt;/code&gt; API均已弃用，并将在以后的版本中删除。</target>
        </trans-unit>
        <trans-unit id="f299f3554bce53f9ba35ead474380491f94ae4a3" translate="yes" xml:space="preserve">
          <source>All of the app's code goes in a folder named &lt;code&gt;src&lt;/code&gt;. All feature areas are in their own folder, with their own NgModule.</source>
          <target state="translated">该应用程序的所有代码都放在名为 &lt;code&gt;src&lt;/code&gt; 的文件夹中。所有功能区域都在各自的文件夹中，并具有各自的NgModule。</target>
        </trans-unit>
        <trans-unit id="d488a3cf97211143ed0272eeccebfa97e0734fe1" translate="yes" xml:space="preserve">
          <source>All projects within a workspace share a &lt;a href=&quot;workspace-config&quot;&gt;CLI configuration context&lt;/a&gt;. The top level of the workspace contains workspace-wide configuration files, configuration files for the root-level application, and subfolders for the root-level application source and test files.</source>
          <target state="translated">工作区中的所有项目共享一个&lt;a href=&quot;workspace-config&quot;&gt;CLI配置上下文&lt;/a&gt;。工作区的顶层包含工作区范围的配置文件，用于根级应用程序的配置文件以及用于根级应用程序源和测试文件的子文件夹。</target>
        </trans-unit>
        <trans-unit id="a86a11f9cc83cd667f2d3d836dd4b6097c3be72e" translate="yes" xml:space="preserve">
          <source>All requests forward up to the root injector, whether you configured it with the &lt;code&gt;&lt;a href=&quot;../api/core/platformref#bootstrapModule&quot;&gt;bootstrapModule()&lt;/a&gt;&lt;/code&gt; method, or registered all providers with &lt;code&gt;root&lt;/code&gt; in their own services.</source>
          <target state="translated">无论您是使用 &lt;code&gt;&lt;a href=&quot;../api/core/platformref#bootstrapModule&quot;&gt;bootstrapModule()&lt;/a&gt;&lt;/code&gt; 方法配置它，还是将所有提供程序都用 &lt;code&gt;root&lt;/code&gt; 注册到其自己的服务中，所有请求都将转发到root注入器。</target>
        </trans-unit>
        <trans-unit id="b677df98f9a1a137700099cd172a9afc9ac44548" translate="yes" xml:space="preserve">
          <source>All response headers.</source>
          <target state="translated">所有回复标题。</target>
        </trans-unit>
        <trans-unit id="266c93cc98a1c67666c9fe3051964b12a0907d45" translate="yes" xml:space="preserve">
          <source>All router components must be entry components. Because this would require you to add the component in two places (router and &lt;code&gt;entryComponents&lt;/code&gt;) the Compiler is smart enough to recognize that this is a router definition and automatically add the router component into &lt;code&gt;entryComponents&lt;/code&gt;.</source>
          <target state="translated">所有路由器组件都必须是入口组件。因为这需要您在两个位置（router和 &lt;code&gt;entryComponents&lt;/code&gt; ）添加组件，所以编译器足够聪明，可以识别出这是路由器定义，并自动将路由器组件添加到 &lt;code&gt;entryComponents&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="a9765742971c0ed0a559afb35d2f98bc069ab358" translate="yes" xml:space="preserve">
          <source>All section heading text should be in &quot;Sentence case&quot;, which means the first word is capitalized and all other words are lower case.</source>
          <target state="translated">所有章节标题文字应采用 &quot;句子大小写&quot;,即第一个词大写,其他词均为小写。</target>
        </trans-unit>
        <trans-unit id="2010b5aa68dd1960b60a188558d3a3c6eeae422a" translate="yes" xml:space="preserve">
          <source>All selectors of directives exported from imported NgModules.</source>
          <target state="translated">从导入的NgModules中导出的所有指令选择器。</target>
        </trans-unit>
        <trans-unit id="45c6daa1221c6438e83b827fcf4272388107dbac" translate="yes" xml:space="preserve">
          <source>All selectors of directives listed in `declarations`.</source>
          <target state="translated">&quot;声明 &quot;中所列的所有指令选择者;</target>
        </trans-unit>
        <trans-unit id="98ef1fe3f08289d9ae2ac5ecaabbe70f1ac0a3e8" translate="yes" xml:space="preserve">
          <source>All three types of schematics can be part of a collection that you package with your library.</source>
          <target state="translated">这三种类型的原理图都可以成为您与库一起打包的集合的一部分。</target>
        </trans-unit>
        <trans-unit id="58563d44c99aee179d2102d631ab6d3346ac6f2a" translate="yes" xml:space="preserve">
          <source>All transitions are defined within an animation trigger, along with named states that the transitions change to and from.</source>
          <target state="translated">所有的转场都是在一个动画触发器中定义的,同时还定义了转场变化的命名状态。</target>
        </trans-unit>
        <trans-unit id="9de972c3116895d08cfcc214fa1b19703f026642" translate="yes" xml:space="preserve">
          <source>Allowed value are &lt;code&gt;&lt;a href=&quot;no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;custom_elements_schema&quot;&gt;CUSTOM_ELEMENTS_SCHEMA&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">允许值为 &lt;code&gt;&lt;a href=&quot;no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;custom_elements_schema&quot;&gt;CUSTOM_ELEMENTS_SCHEMA&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85ebcd6cf8feaeb9992b2b6b1a1a230f5cedb4e3" translate="yes" xml:space="preserve">
          <source>Allowed values are given with each enumerated option description, with the default value in &lt;strong&gt;bold&lt;/strong&gt;.</source>
          <target state="translated">每个枚举的选项描述均给出允许的值，默认值以&lt;strong&gt;粗体显示&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="4e34237b214ab32caacdba55ef91ee24b78df885" translate="yes" xml:space="preserve">
          <source>Allowed values in an &lt;code&gt;&lt;a href=&quot;extraoptions&quot;&gt;ExtraOptions&lt;/a&gt;&lt;/code&gt; object that configure when the router performs the initial navigation operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;extraoptions&quot;&gt;ExtraOptions&lt;/a&gt;&lt;/code&gt; 对象中的允许值，用于配置路由器何时执行初始导航操作。</target>
        </trans-unit>
        <trans-unit id="f4ca59384f608db4264a261808beb5325f2b8151" translate="yes" xml:space="preserve">
          <source>Allowed values in an &lt;code&gt;&lt;a href=&quot;router/extraoptions&quot;&gt;ExtraOptions&lt;/a&gt;&lt;/code&gt; object that configure when the router performs the initial navigation operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router/extraoptions&quot;&gt;ExtraOptions&lt;/a&gt;&lt;/code&gt; 对象中的允许值，用于配置路由器何时执行初始导航操作。</target>
        </trans-unit>
        <trans-unit id="085f06d4e071e6f66eb3b9679caf4d86014b1610" translate="yes" xml:space="preserve">
          <source>Allows Angular Component to be used from AngularJS.</source>
          <target state="translated">允许从AngularJS中使用Angular组件。</target>
        </trans-unit>
        <trans-unit id="ecc1a07f7db604b095e8b41e2cae741aacdd37b3" translate="yes" xml:space="preserve">
          <source>Allows Angular service to be accessible from AngularJS.</source>
          <target state="translated">允许从AngularJS访问Angular服务。</target>
        </trans-unit>
        <trans-unit id="59ef65ca89ef98a0952a53d7803e4341b9f60c56" translate="yes" xml:space="preserve">
          <source>Allows AngularJS Component to be used from Angular.</source>
          <target state="translated">允许AngularJS组件从Angular。</target>
        </trans-unit>
        <trans-unit id="7649d729717525a48003b77dd85cd213286b2180" translate="yes" xml:space="preserve">
          <source>Allows AngularJS service to be accessible from Angular.</source>
          <target state="translated">允许AngularJS服务从Angular访问。</target>
        </trans-unit>
        <trans-unit id="e1d91523ef6bb6743c7eb228ff012768c84d644c" translate="yes" xml:space="preserve">
          <source>Allows a sequential change between styles within a specified time interval. Use within &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt;. Can include multiple &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; calls within each &lt;code&gt;keyframe()&lt;/code&gt;. Uses array syntax.</source>
          <target state="translated">允许在指定的时间间隔内在样式之间进行顺序更改。在 &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 中使用。可以在每个 &lt;code&gt;keyframe()&lt;/code&gt; 中包含多个 &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 调用。使用数组语法。</target>
        </trans-unit>
        <trans-unit id="896073ffe89ca14af5b6f2040d67893e62df843b" translate="yes" xml:space="preserve">
          <source>Allows animations on child components to be run within the same timeframe as the parent.</source>
          <target state="translated">允许子组件上的动画与父组件在同一时间段内运行。</target>
        </trans-unit>
        <trans-unit id="750378a75cfd1eaf3050ded6f436f0e7bb6f1a79" translate="yes" xml:space="preserve">
          <source>Allows injecting dependencies in &lt;code&gt;beforeEach()&lt;/code&gt; and &lt;code&gt;it()&lt;/code&gt;.</source>
          <target state="translated">允许在 &lt;code&gt;beforeEach()&lt;/code&gt; 和 &lt;code&gt;it()&lt;/code&gt; 中注入依赖项。</target>
        </trans-unit>
        <trans-unit id="08a3edd872030b372214771d089e67457cc59fb7" translate="yes" xml:space="preserve">
          <source>Allows overriding default compiler providers and settings which are defined in test_injector.js</source>
          <target state="translated">允许覆盖在test_injector.js中定义的默认编译器提供者和设置。</target>
        </trans-unit>
        <trans-unit id="fa49e14d9829d89b458a57fab56ecfd9673e4927" translate="yes" xml:space="preserve">
          <source>Allows overriding default providers, directives, pipes, modules of the test injector, which are defined in test_injector.js</source>
          <target state="translated">允许覆盖test_injector.js中定义的测试注入器的默认提供者、指令、管道和模块。</target>
        </trans-unit>
        <trans-unit id="a7f2d8c5d430d7ae3ff698eb19d82a712bf21944" translate="yes" xml:space="preserve">
          <source>Allows to refer to references which are not yet defined.</source>
          <target state="translated">允许引用尚未定义的参考文献。</target>
        </trans-unit>
        <trans-unit id="066113a73a472127f1591d76a5f3fc93d93b6b02" translate="yes" xml:space="preserve">
          <source>Allows to register a callback that will be called when the module is destroyed.</source>
          <target state="translated">允许注册一个回调,当模块被销毁时将被调用。</target>
        </trans-unit>
        <trans-unit id="9c93cb9606768ab8734f0311d8db95d0ea5cabf8" translate="yes" xml:space="preserve">
          <source>Allows to simulate the loading of ng modules in tests.</source>
          <target state="translated">允许在测试中模拟ng模块的加载。</target>
        </trans-unit>
        <trans-unit id="a50d82a97b9831022bdfe098f21ced7b0b9170de" translate="yes" xml:space="preserve">
          <source>Allows you to assign styles to an HTML element using CSS. You can use CSS directly, as in the first example, or you can call a method from the component.</source>
          <target state="translated">允许你使用CSS为一个HTML元素分配样式。你可以直接使用CSS,就像第一个例子一样,或者你可以从组件中调用一个方法。</target>
        </trans-unit>
        <trans-unit id="7fe4a6401091a9411a2acc365ceb4c77d0b91d13" translate="yes" xml:space="preserve">
          <source>Almost all Angular projects should use the default HTML5 style. It produces URLs that are easier for users to understand. And it preserves the option to do &lt;em&gt;server-side rendering&lt;/em&gt; later.</source>
          <target state="translated">几乎所有的Angular项目都应使用默认的HTML5样式。它生成的URL更易于用户理解。并且保留了以后进行&lt;em&gt;服务器端渲染&lt;/em&gt;的选项。</target>
        </trans-unit>
        <trans-unit id="09bc2f90624b9bf3ca83b868a4cb571e445219e2" translate="yes" xml:space="preserve">
          <source>Also in &lt;code&gt;index.html&lt;/code&gt;, change the scripts to use &lt;code&gt;/node_modules&lt;/code&gt; with a slash instead of &lt;code&gt;node_modules&lt;/code&gt; without the slash.</source>
          <target state="translated">同样在 &lt;code&gt;index.html&lt;/code&gt; 中，将脚本更改为使用带斜杠的 &lt;code&gt;/node_modules&lt;/code&gt; 而不是不带斜杠的 &lt;code&gt;node_modules&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c34ca58802e9ae1bf05a9e1e9808cfff54b066f4" translate="yes" xml:space="preserve">
          <source>Also included in the &lt;code&gt;@angular/service-worker&lt;/code&gt; NPM package is a small script &lt;code&gt;safety-worker.js&lt;/code&gt;, which when loaded will unregister itself from the browser. This script can be used as a last resort to get rid of unwanted service workers already installed on client pages.</source>
          <target state="translated">&lt;code&gt;@angular/service-worker&lt;/code&gt; NPM软件包中还包括一个小的脚本 &lt;code&gt;safety-worker.js&lt;/code&gt; ，该脚本在加载时将自动从浏览器中注销。此脚本可以用作摆脱已安装在客户端页面上的有害服务工作者的最后手段。</target>
        </trans-unit>
        <trans-unit id="3e77b90384ba1376f2a7fc2a2fdb84d02d1ce375" translate="yes" xml:space="preserve">
          <source>Also remove any &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; you find, together with the associated AngularJS factory or directive declarations. Since you no longer have downgraded components, you no longer list them in &lt;code&gt;entryComponents&lt;/code&gt;.</source>
          <target state="translated">还要删除找到的所有 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradeinjectable&quot;&gt;downgradeInjectable&lt;/a&gt;()&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; 以及关联的AngularJS工厂或指令声明。由于您不再具有降级的组件，因此不再在 &lt;code&gt;entryComponents&lt;/code&gt; 中列出它们。</target>
        </trans-unit>
        <trans-unit id="3eed6879744930f3ade3d793b4f2c2ad9e696f16" translate="yes" xml:space="preserve">
          <source>Also runs detectChanges once so that any existing change is detected.</source>
          <target state="translated">还会运行一次 detectChanges,以便检测到任何现有的变化。</target>
        </trans-unit>
        <trans-unit id="80c4a57c8598fa805c421acf31759c6f916a295a" translate="yes" xml:space="preserve">
          <source>Also, there are a couple of Protractor API calls in the PhoneCat test code that are using the AngularJS &lt;code&gt;$location&lt;/code&gt; service under the hood. As that service is no longer present after the upgrade, replace those calls with ones that use WebDriver's generic URL APIs instead. The first of these is the redirection spec:</source>
          <target state="translated">另外，PhoneCat测试代码中有几个Protractor API调用，它们在后台使用AngularJS &lt;code&gt;$location&lt;/code&gt; 服务。由于升级后将不再提供该服务，因此请使用WebDriver的通用URL API代替那些调用。首先是重定向规范：</target>
        </trans-unit>
        <trans-unit id="e9ec4ab463e95d961d6a661f97b761b3ce157450" translate="yes" xml:space="preserve">
          <source>Alter the name of a crisis. Notice that the corresponding name in the crisis list does &lt;em&gt;not&lt;/em&gt; change.</source>
          <target state="translated">更改危机名称。请注意，危机列表中的相应名称&lt;em&gt;不会&lt;/em&gt;更改。</target>
        </trans-unit>
        <trans-unit id="ef2efebfb6fde29b1d7a5cd7f44ec2ef3ac1afb6" translate="yes" xml:space="preserve">
          <source>Alter the name. Click the &quot;Back&quot; button and the app returns to the heroes list which displays the changed hero name. Notice that the name change took effect immediately.</source>
          <target state="translated">更改名称。点击 &quot;返回 &quot;按钮,应用程序返回到英雄列表,显示更改后的英雄名称。注意,改名立即生效。</target>
        </trans-unit>
        <trans-unit id="5c537167fc57c766db36bca741f44f76ff80afb8" translate="yes" xml:space="preserve">
          <source>Alternate build configurations</source>
          <target state="translated">备用建设配置</target>
        </trans-unit>
        <trans-unit id="538b10e3e67e9b4ea5cac16016344363816eb454" translate="yes" xml:space="preserve">
          <source>Alternative class providers</source>
          <target state="translated">替代班级提供者</target>
        </trans-unit>
        <trans-unit id="317529f453f868f828b3061a5492c704c5ebd726" translate="yes" xml:space="preserve">
          <source>Alternative syntax</source>
          <target state="translated">替代语法</target>
        </trans-unit>
        <trans-unit id="7fffe38e0d7a10037e8a311175b76b5eba5d4a82" translate="yes" xml:space="preserve">
          <source>Alternatively you can pass an HTTP method as the first parameter, a URL string as the second, and an options hash containing the request body as the third. See &lt;code&gt;addBody()&lt;/code&gt;. In this case, the specified &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;observe&lt;/code&gt; options determine the type of returned observable.</source>
          <target state="translated">或者，您可以传递HTTP方法作为第一个参数，传递URL字符串作为第二个参数，以及包含请求正文的选项哈希作为第三个参数。参见 &lt;code&gt;addBody()&lt;/code&gt; 。在这种情况下，指定的 &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;observe&lt;/code&gt; 选项确定返回的observable类型。</target>
        </trans-unit>
        <trans-unit id="04a6b5805d15fcdd219083f0cbf17fc9bb490bc5" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;subscribe()&lt;/code&gt; method can accept callback function definitions in line, for &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;complete&lt;/code&gt; handlers. For example, the following &lt;code&gt;subscribe()&lt;/code&gt; call is the same as the one that specifies the predefined observer:</source>
          <target state="translated">另外， &lt;code&gt;subscribe()&lt;/code&gt; 方法可以接受针对 &lt;code&gt;next&lt;/code&gt; ， &lt;code&gt;error&lt;/code&gt; 和 &lt;code&gt;complete&lt;/code&gt; 处理函数的回调函数定义。例如，以下 &lt;code&gt;subscribe()&lt;/code&gt; 调用与指定预定义观察者的调用相同：</target>
        </trans-unit>
        <trans-unit id="e64d9fb1e1f706bc80662aea5f2fb80fb60883b5" translate="yes" xml:space="preserve">
          <source>Alternatively, use the &lt;code&gt;on-&lt;/code&gt; prefix, known as the canonical form:</source>
          <target state="translated">或者，使用 &lt;code&gt;on-&lt;/code&gt; 前缀，称为规范形式：</target>
        </trans-unit>
        <trans-unit id="7ed2dd30905d320449fc9e53a46cc64ce34b13be" translate="yes" xml:space="preserve">
          <source>Alternatively, you can add a new file, &lt;code&gt;.browserslistrc&lt;/code&gt;, to the project directory, that specifies browsers you want to support:</source>
          <target state="translated">或者，您可以将一个新文件 &lt;code&gt;.browserslistrc&lt;/code&gt; 添加到项目目录，该文件指定您要支持的浏览器：</target>
        </trans-unit>
        <trans-unit id="d3a282109fd2c8a8f7ad5940bdac4b9f189f1e55" translate="yes" xml:space="preserve">
          <source>Alternatively, you can call &lt;code&gt;request.error()&lt;/code&gt; with an &lt;code&gt;ErrorEvent&lt;/code&gt;.</source>
          <target state="translated">另外，您可以使用 &lt;code&gt;ErrorEvent&lt;/code&gt; 调用 &lt;code&gt;request.error()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98bf87f428bccd5b0338c78eadf52aaa7a6089b5" translate="yes" xml:space="preserve">
          <source>Alternatively, you can choose to surface a separate warning for each instance of this pattern with a config value of &lt;code&gt;&quot;always&quot;&lt;/code&gt;. This may help to track down where in the code the pattern is being used as the code is being updated.</source>
          <target state="translated">或者，您可以选择针对此模式的每个实例显示单独的警告，其配置值为 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 。当更新代码时，这可能有助于跟踪模式在代码中的何处使用。</target>
        </trans-unit>
        <trans-unit id="5d6c050b861181c863e8cb7973a125de6756b8a9" translate="yes" xml:space="preserve">
          <source>Alternatively, you can fix it by exporting &lt;code&gt;foo&lt;/code&gt; with the expectation that &lt;code&gt;foo&lt;/code&gt; will be assigned at runtime when you actually know its value.</source>
          <target state="translated">另外，您可以通过导出 &lt;code&gt;foo&lt;/code&gt; 来修复它，并期望在您真正知道它的值时在运行时分配 &lt;code&gt;foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19c181f0dfa7e4b222a989a1cf6835c473ecb0d0" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass a plain function, which is expected to return a promise resolving to an &lt;a href=&quot;../api/core/ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt; (i.e. an instance of your Angular module). The function is called with an array of extra &lt;a href=&quot;../api/core/staticprovider&quot;&gt;Providers&lt;/a&gt; that are expected to be available on the returned &lt;code&gt;&lt;a href=&quot;../api/core/ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;&lt;/code&gt;'s &lt;a href=&quot;../api/core/injector&quot;&gt;Injector&lt;/a&gt;. For example, if you are using &lt;a href=&quot;../api/platform-browser/platformbrowser&quot;&gt;platformBrowser&lt;/a&gt; or &lt;a href=&quot;../api/platform-browser-dynamic/platformbrowserdynamic&quot;&gt;platformBrowserDynamic&lt;/a&gt;, you can pass the &lt;code&gt;extraProviders&lt;/code&gt; array to them:</source>
          <target state="translated">或者，您可以传递一个普通函数，该函数应返回一个对&lt;a href=&quot;../api/core/ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;的promise解析（即Angular模块的实例）。该函数由一组额外的&lt;a href=&quot;../api/core/staticprovider&quot;&gt;提供程序&lt;/a&gt;调用，这些提供程序应在返回的 &lt;code&gt;&lt;a href=&quot;../api/core/ngmoduleref&quot;&gt;NgModuleRef&lt;/a&gt;&lt;/code&gt; 的&lt;a href=&quot;../api/core/injector&quot;&gt;Injector&lt;/a&gt;上可用。例如，如果您使用&lt;a href=&quot;../api/platform-browser/platformbrowser&quot;&gt;platformBrowser&lt;/a&gt;或&lt;a href=&quot;../api/platform-browser-dynamic/platformbrowserdynamic&quot;&gt;platformBrowserDynamic&lt;/a&gt;，则可以将 &lt;code&gt;extraProviders&lt;/code&gt; 数组传递给它们：</target>
        </trans-unit>
        <trans-unit id="46f8c220ab71228f6530683c11b7ac9ef6c94316" translate="yes" xml:space="preserve">
          <source>Alternatively, you can specify a custom id in the &lt;code&gt;i18n&lt;/code&gt; attribute by using the prefix &lt;code&gt;@@&lt;/code&gt;. The example below defines the custom id &lt;code&gt;introductionHeader&lt;/code&gt;:</source>
          <target state="translated">或者，您可以使用前缀 &lt;code&gt;@@&lt;/code&gt; 在 &lt;code&gt;i18n&lt;/code&gt; 属性中指定自定义ID 。以下示例定义了自定义ID &lt;code&gt;introductionHeader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cb7c49667809bfe94e1dbbd87a5ce803ffe6ceb8" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn client&lt;/a&gt; for downloading and installing npm packages.</source>
          <target state="translated">另外，您可以使用&lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn客户端&lt;/a&gt;下载和安装npm软件包。</target>
        </trans-unit>
        <trans-unit id="e9fbf3395b93f5da053cf8f1ade99d229665c121" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the HTML &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">另外，您也可以使用HTML &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; 标签。</target>
        </trans-unit>
        <trans-unit id="5ad999c866c8bd0df67936adc07a5029b68e2cc3" translate="yes" xml:space="preserve">
          <source>Alternatively, you could accumulate the individual keys themselves by substituting &lt;code&gt;event.key&lt;/code&gt; for &lt;code&gt;event.target.value&lt;/code&gt; in which case the same user input would produce:</source>
          <target state="translated">或者，您可以通过将 &lt;code&gt;event.key&lt;/code&gt; 替换为 &lt;code&gt;event.target.value&lt;/code&gt; 来累积各个键本身，在这种情况下，相同的用户输入将产生：</target>
        </trans-unit>
        <trans-unit id="4dc002b021fdf91ff604ee57f3cc129ef280a957" translate="yes" xml:space="preserve">
          <source>Alternatively, you could make a component-specific &lt;code&gt;&lt;a href=&quot;../api/router/candeactivate&quot;&gt;CanDeactivate&lt;/a&gt;&lt;/code&gt; guard for the &lt;code&gt;CrisisDetailComponent&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../api/router/route#canDeactivate&quot;&gt;canDeactivate&lt;/a&gt;()&lt;/code&gt; method provides you with the current instance of the &lt;code&gt;component&lt;/code&gt;, the current &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/router/routerstatesnapshot&quot;&gt;RouterStateSnapshot&lt;/a&gt;&lt;/code&gt; in case you needed to access some external information. This would be useful if you only wanted to use this guard for this component and needed to get the component's properties or confirm whether the router should allow navigation away from it.</source>
          <target state="translated">或者，您可以为 &lt;code&gt;CrisisDetailComponent&lt;/code&gt; 设置特定 &lt;code&gt;&lt;a href=&quot;../api/router/candeactivate&quot;&gt;CanDeactivate&lt;/a&gt;&lt;/code&gt; 组件的CanDeactivate保护。所述 &lt;code&gt;&lt;a href=&quot;../api/router/route#canDeactivate&quot;&gt;canDeactivate&lt;/a&gt;()&lt;/code&gt; （）方法为您提供的当前实例 &lt;code&gt;component&lt;/code&gt; ，电流 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; ，和 &lt;code&gt;&lt;a href=&quot;../api/router/routerstatesnapshot&quot;&gt;RouterStateSnapshot&lt;/a&gt;&lt;/code&gt; 如果你需要访问一些外部信息。如果您只想对此组件使用此防护，并且需要获取组件的属性或确认路由器是否应允许其离开导航，这将很有用。</target>
        </trans-unit>
        <trans-unit id="2246c16c08b61d99b022d0d6c7301776becfb045" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; is a valid Angular directive, it isn't available by default.</source>
          <target state="translated">尽管 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 是有效的Angular指令，但默认情况下不可用。</target>
        </trans-unit>
        <trans-unit id="99c7fb8e8fe2caa5683ecf66a4f0b8dc02a8734c" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;HeroService&lt;/code&gt; has no access to &lt;code&gt;UserService&lt;/code&gt;, the factory function does. You inject both &lt;code&gt;Logger&lt;/code&gt; and &lt;code&gt;UserService&lt;/code&gt; into the factory provider and let the injector pass them along to the factory function.</source>
          <target state="translated">尽管 &lt;code&gt;HeroService&lt;/code&gt; 无法访问 &lt;code&gt;UserService&lt;/code&gt; ，但工厂功能可以。您将 &lt;code&gt;Logger&lt;/code&gt; 和 &lt;code&gt;UserService&lt;/code&gt; 都注入到工厂提供程序中，然后让注入程序将它们传递给工厂功能。</target>
        </trans-unit>
        <trans-unit id="a71de44f8d521e498fa4c517279e05613ba8baef" translate="yes" xml:space="preserve">
          <source>Although developers strive to avoid it, many visual effects and third-party tools, such as jQuery, require DOM access. As a result, you might need to access a component's DOM element.</source>
          <target state="translated">虽然开发人员努力避免,但许多视觉效果和第三方工具,如jQuery,都需要DOM访问。因此,你可能需要访问一个组件的DOM元素。</target>
        </trans-unit>
        <trans-unit id="c63a4c9db8fae775d2c9b2460c0753c92e1ed4e5" translate="yes" xml:space="preserve">
          <source>Although in this example you're modelling a job application for heroes, there are no references to any specific hero question outside the objects returned by &lt;code&gt;QuestionService&lt;/code&gt;.</source>
          <target state="translated">尽管在此示例中，您正在为英雄建模工作申请，但是在 &lt;code&gt;QuestionService&lt;/code&gt; 返回的对象之外没有任何对特定英雄问题的引用。</target>
        </trans-unit>
        <trans-unit id="eda7b93e32221f3afb3cbb94c32a8763a782190c" translate="yes" xml:space="preserve">
          <source>Although interceptors are capable of mutating requests and responses, the &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; instance properties are &lt;code&gt;readonly&lt;/code&gt;, rendering them largely immutable.</source>
          <target state="translated">尽管拦截器能够更改请求和响应，但是 &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 实例属性是 &lt;code&gt;readonly&lt;/code&gt; ，从而使它们在很大程度上不可变。</target>
        </trans-unit>
        <trans-unit id="140a2bef2ba1a6526c1ddea73a80aa5c89e23cae" translate="yes" xml:space="preserve">
          <source>Although invisible, the component&amp;mdash;and all of its descendant components&amp;mdash;tie up resources. The performance and memory burden can be substantial, responsiveness can degrade, and the user sees nothing.</source>
          <target state="translated">尽管看不见，但该组件及其所有后代组件占用了资源。性能和内存负担可能很大，响应能力可能下降，并且用户看不到任何东西。</target>
        </trans-unit>
        <trans-unit id="8a59cd2708af00e8af91086a976046b0bcef21a1" translate="yes" xml:space="preserve">
          <source>Although it doesn't actually log in, it has what you need for this discussion. It has an &lt;code&gt;isLoggedIn&lt;/code&gt; flag to tell you whether the user is authenticated. Its &lt;code&gt;login&lt;/code&gt; method simulates an API call to an external service by returning an observable that resolves successfully after a short pause. The &lt;code&gt;redirectUrl&lt;/code&gt; property will store the attempted URL so you can navigate to it after authenticating.</source>
          <target state="translated">尽管实际上并没有登录，但是它具有您进行此讨论所需的内容。它具有 &lt;code&gt;isLoggedIn&lt;/code&gt; 标志，以告知您用户是否已通过身份验证。它的 &lt;code&gt;login&lt;/code&gt; 方法通过返回可观察到的，可在短暂的暂停后成功解析的可观察对象来模拟对外部服务的API调用。该 &lt;code&gt;redirectUrl&lt;/code&gt; 属性将存储试图网址，以便您可以验证后找到它。</target>
        </trans-unit>
        <trans-unit id="b709afe389b87b25545ae196d4d825808c5ef733" translate="yes" xml:space="preserve">
          <source>Although it's harmless to add components to this list, it's best to add only the components that are truly &lt;em&gt;entry components&lt;/em&gt;. Don't include components that &lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;are referenced&lt;/a&gt; in the templates of other components.</source>
          <target state="translated">尽管将组件添加到此列表中是无害的，但是最好仅添加真正是&lt;em&gt;入门组件的组件&lt;/em&gt;。不要包括其他组件模板&lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;中引用&lt;/a&gt;的组件。</target>
        </trans-unit>
        <trans-unit id="e6f1c72ed2810faf50b8f3333c1f8b5b5403cdef" translate="yes" xml:space="preserve">
          <source>Although it's possible to write complex template expressions, it's a better practice to avoid them.</source>
          <target state="translated">虽然可以写复杂的模板表达式,但最好的做法是避免使用。</target>
        </trans-unit>
        <trans-unit id="b526ddc47425d94439f76e0b41ef7dc4ee102f58" translate="yes" xml:space="preserve">
          <source>Although matrix notation never made it into the HTML standard, it is legal and it became popular among browser routing systems as a way to isolate parameters belonging to parent and child routes. The Router is such a system and provides support for the matrix notation across browsers.</source>
          <target state="translated">虽然矩阵符号从未被纳入HTML标准,但它是合法的,它作为一种隔离属于父路由和子路由的参数的方式,在浏览器路由系统中变得很流行。Router就是这样一个系统,它提供了对矩阵符号的跨浏览器支持。</target>
        </trans-unit>
        <trans-unit id="8d8e9edc4365018503a0aa8ba523d7e123f26f73" translate="yes" xml:space="preserve">
          <source>Although not discussed here, there's an example of &lt;code&gt;&lt;a href=&quot;../api/core/querylist#map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;getHeroNo404()&lt;/code&gt; method included in the sample source code.</source>
          <target state="translated">尽管这里没有讨论，但是示例源代码中包含的 &lt;code&gt;getHeroNo404()&lt;/code&gt; 方法中有一个 &lt;code&gt;&lt;a href=&quot;../api/core/querylist#map&quot;&gt;map()&lt;/a&gt;&lt;/code&gt; 示例。</target>
        </trans-unit>
        <trans-unit id="1791d4dc1123e82f2994b8a2caf82568ea2a7c6d" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;AppConfig&lt;/code&gt; interface plays no role in dependency injection, it supports typing of the configuration object within the class.</source>
          <target state="translated">尽管 &lt;code&gt;AppConfig&lt;/code&gt; 接口在依赖项注入中不起作用，但它支持在类中键入配置对象。</target>
        </trans-unit>
        <trans-unit id="db12662de437927b080487074c85c43b5bbd2b73" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;compose&lt;/code&gt; route is pinned to the &quot;popup&quot; outlet, that's not sufficient for wiring the route to a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive. You have to specify the named outlet in a &lt;em&gt;link parameters array&lt;/em&gt; and bind it to the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; with a property binding.</source>
          <target state="translated">尽管 &lt;code&gt;compose&lt;/code&gt; 路由固定在&amp;ldquo;弹出&amp;rdquo;出口上，但这不足以将路由连接到 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 指令。您必须在&lt;em&gt;链接参数数组中&lt;/em&gt;指定命名的出口，并使用属性绑定将其绑定到 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d7c4334ace67bdbb9ee7db7773185ffcfb0f003" translate="yes" xml:space="preserve">
          <source>Although the admin dashboard &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; only contains a relative slash without an additional URL segment, it is considered a match to any route within the admin feature area. You only want the &lt;code&gt;Dashboard&lt;/code&gt; link to be active when the user visits that route. Adding an additional binding to the &lt;code&gt;Dashboard&lt;/code&gt; routerLink,&lt;code&gt;[&lt;a href=&quot;../api/router/routerlinkactive#routerLinkActiveOptions&quot;&gt;routerLinkActiveOptions&lt;/a&gt;]=&quot;{ exact: true }&quot;&lt;/code&gt;, marks the &lt;code&gt;./&lt;/code&gt; link as active when the user navigates to the &lt;code&gt;/admin&lt;/code&gt; URL and not when navigating to any of the child routes.</source>
          <target state="translated">尽管管理仪表板 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 仅包含一个斜杠而没有其他URL段，但是它被视为与管理功能区域内的任何路由匹配。您只希望在用户访问该路由时激活&amp;ldquo; &lt;code&gt;Dashboard&lt;/code&gt; 链接。将附加绑定添加到 &lt;code&gt;Dashboard&lt;/code&gt; routerLink &lt;code&gt;[&lt;a href=&quot;../api/router/routerlinkactive#routerLinkActiveOptions&quot;&gt;routerLinkActiveOptions&lt;/a&gt;]=&quot;{ exact: true }&quot;&lt;/code&gt; ，将 &lt;code&gt;./&lt;/code&gt; 链接标记为在用户导航到 &lt;code&gt;/admin&lt;/code&gt; URL时处于活动状态，而在导航至任何子路由时则处于活动状态。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
