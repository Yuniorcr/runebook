<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="d78cde4ebf8adc6402820de1a9ff2cfdd781a93f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; using &lt;a href=&quot;https://github.com/mhartington/vim-angular2-snippets&quot;&gt;snippets&lt;/a&gt; for &lt;a href=&quot;https://www.vim.org/&quot;&gt;Vim&lt;/a&gt; that follow these styles and guidelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f41699986d39d799bceff1c431cd2ab77823b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; using &lt;a href=&quot;https://github.com/orizens/sublime-angular2-snippets&quot;&gt;snippets&lt;/a&gt; for &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt; that follow these styles and guidelines.</source>
          <target state="translated">&lt;strong&gt;请考虑&lt;/strong&gt;使用&lt;a href=&quot;https://github.com/orizens/sublime-angular2-snippets&quot;&gt;片段&lt;/a&gt;的&lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;崇高文本&lt;/a&gt;遵循这些风格和准则。</target>
        </trans-unit>
        <trans-unit id="83b65137ae8950592159679b28b2e8c46f6729a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; using &lt;a href=&quot;https://github.com/orizens/sublime-angular2-snippets&quot;&gt;snippets&lt;/a&gt; for &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt; that follow these styles and guidelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ec4d969a410f664dc34b3fd2f353bcb573d205" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; using &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2&quot;&gt;snippets&lt;/a&gt; for &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; that follow these styles and guidelines.</source>
          <target state="translated">&lt;strong&gt;请考虑&lt;/strong&gt;使用&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=johnpapa.Angular2&quot;&gt;片段&lt;/a&gt;用于&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio代码&lt;/a&gt;遵循这些风格和准则。</target>
        </trans-unit>
        <trans-unit id="634508664461f7cdb59e0e1f093e99597ffb329f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt; using the name SharedModule when the contents of a shared module are referenced across the entire application.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;在整个应用程序中引用共享模块的内容时，&lt;strong&gt;请考虑&lt;/strong&gt;使用名称SharedModule。</target>
        </trans-unit>
        <trans-unit id="b157426ab1709e92e2943d1ac9a63918d7e02346" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Consider&lt;/strong&gt;&lt;em&gt;not&lt;/em&gt; providing services in shared modules. Services are usually singletons that are provided once for the entire application or in a particular feature module. There are exceptions, however. For example, in the sample code that follows, notice that the &lt;code&gt;SharedModule&lt;/code&gt; provides &lt;code&gt;FilterTextService&lt;/code&gt;. This is acceptable here because the service is stateless;that is, the consumers of the service aren't impacted by new instances.</source>
          <target state="translated">&lt;strong&gt;考虑&lt;/strong&gt;&lt;em&gt;不在&lt;/em&gt;共享模块中提供服务。服务通常是单例，为整个应用程序或特定功能模块提供一次。但是也有例外。例如，在下面的示例代码中，请注意， &lt;code&gt;SharedModule&lt;/code&gt; 提供了 &lt;code&gt;FilterTextService&lt;/code&gt; 。这在这里是可以接受的，因为服务是无状态的；也就是说，服务的使用者不会受到新实例的影响。</target>
        </trans-unit>
        <trans-unit id="c04a7871021e285dcd75fe31e0335e710bc0ec24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create a FormGroup instance&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;创建一个FormGroup实例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0c01ac73caacc1886db45b8b819361cf42a9fc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create a nested group&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;创建一个嵌套组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac00e428f072bd36633594b46edcf64c28c1666e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DEPRECATED&lt;/strong&gt;: Use &lt;code&gt;queryParamsHandling: &quot;preserve&quot;&lt;/code&gt; instead to preserve query parameters for the next navigation.</source>
          <target state="translated">&lt;strong&gt;已弃用&lt;/strong&gt;：请使用 &lt;code&gt;queryParamsHandling: &quot;preserve&quot;&lt;/code&gt; 保留用于下一个导航的查询参数。</target>
        </trans-unit>
        <trans-unit id="08eec026d337b1bf8558f293be8118ccaf49af79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DISABLED&lt;/strong&gt;: This control is exempt from validation checks.</source>
          <target state="translated">&lt;strong&gt;禁用&lt;/strong&gt;：此控件免于验证检查。</target>
        </trans-unit>
        <trans-unit id="083896d6fad806eada6448347f24470017fcc823" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Data request&lt;/strong&gt;: request URL that begins &lt;code&gt;/api&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;数据请求&lt;/strong&gt;：以 &lt;code&gt;/api&lt;/code&gt; 开头的请求URL 。</target>
        </trans-unit>
        <trans-unit id="091d76a7360a830e54feea860f18ff4abd95272f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Declaration syntax&lt;/strong&gt;: It's important to follow the route declaration syntax &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;: () =&amp;gt; import('...').then(m =&amp;gt; m.ModuleName)&lt;/code&gt; to allow &lt;code&gt;ngc&lt;/code&gt; to discover the lazy-loaded module and the associated &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. You can find the complete list of allowed syntax constructs &lt;a href=&quot;https://github.com/angular/angular-cli/blob/a491b09800b493fe01301387fa9a025f7c7d4808/packages/ngtools/webpack/src/transformers/import_factory.ts#L104-L113&quot;&gt;here&lt;/a&gt;. These restrictions will be relaxed with the release of Ivy since it'll no longer use &lt;code&gt;NgFactories&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;声明语法&lt;/strong&gt;：遵循路由声明语法 &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;: () =&amp;gt; import('...').then(m =&amp;gt; m.ModuleName)&lt;/code&gt; ，以便 &lt;code&gt;ngc&lt;/code&gt; 发现延迟加载的模块和关联的 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; ，这一点很重要。您可以在&lt;a href=&quot;https://github.com/angular/angular-cli/blob/a491b09800b493fe01301387fa9a025f7c7d4808/packages/ngtools/webpack/src/transformers/import_factory.ts#L104-L113&quot;&gt;此处&lt;/a&gt;找到允许的语法构造的完整列表。随着Ivy的发布，这些限制将放宽，因为它将不再使用 &lt;code&gt;NgFactories&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4ddafb3b2487eab805488a860bd8b25b5f90e98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Declaration syntax&lt;/strong&gt;: It's important to follow the route declaration syntax &lt;code&gt;loadChildren: () =&amp;gt; import('...').then(m =&amp;gt; m.ModuleName)&lt;/code&gt; to allow &lt;code&gt;ngc&lt;/code&gt; to discover the lazy-loaded module and the associated &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. You can find the complete list of allowed syntax constructs &lt;a href=&quot;https://github.com/angular/angular-cli/blob/a491b09800b493fe01301387fa9a025f7c7d4808/packages/ngtools/webpack/src/transformers/import_factory.ts#L104-L113&quot;&gt;here&lt;/a&gt;. These restrictions will be relaxed with the release of Ivy since it'll no longer use &lt;code&gt;NgFactories&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;声明语法&lt;/strong&gt;：必须遵循路由声明语法 &lt;code&gt;loadChildren: () =&amp;gt; import('...').then(m =&amp;gt; m.ModuleName)&lt;/code&gt; ，以便 &lt;code&gt;ngc&lt;/code&gt; 发现延迟加载的模块和关联的 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 。您可以在&lt;a href=&quot;https://github.com/angular/angular-cli/blob/a491b09800b493fe01301387fa9a025f7c7d4808/packages/ngtools/webpack/src/transformers/import_factory.ts#L104-L113&quot;&gt;此处&lt;/a&gt;找到允许的语法构造的完整列表。随着Ivy的发布，这些限制将得到放宽，因为Ivy将不再使用 &lt;code&gt;NgFactories&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e08a1864513ad17ff1e02ee4250dd6ba4a5f1dea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Define a FormArray control&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;定义一个FormArray控件&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f2d372b8be67dc4125fd758497e5bdcb4514fcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; 'SystemJsNgModuleLoader' is deprecated, and this is part of its usage. Use 'import()' syntax instead.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用'SystemJsNgModuleLoader'，这是其用法的一部分。请改用'import（）'语法。</target>
        </trans-unit>
        <trans-unit id="37acc96ef7149015893622f741759188373e05e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Deprecated since v5. Use &lt;code&gt;&lt;a href=&quot;static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; instead, which also supports &lt;a href=&quot;../../guide/aot-compiler&quot;&gt;Ahead-of-Time compilation&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;从v5开始&lt;strong&gt;不推荐&lt;/strong&gt;使用。请改用 &lt;code&gt;&lt;a href=&quot;static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; ，它也支持&lt;a href=&quot;../../guide/aot-compiler&quot;&gt;Ahead-of-Time编译&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4d4b4254c42c47aa78347eb6f65fba5443ee7b98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Deprecated since v5. Use &lt;code&gt;&lt;a href=&quot;upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; instead, which also supports &lt;a href=&quot;../guide/aot-compiler&quot;&gt;Ahead-of-Time compilation&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;从v5开始&lt;strong&gt;不推荐&lt;/strong&gt;使用。请改用 &lt;code&gt;&lt;a href=&quot;upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; ，它也支持&lt;a href=&quot;../guide/aot-compiler&quot;&gt;Ahead-of-Time编译&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58437f0c7a32c9615ebe367a3c355d86169b894b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Deprecated since version 11.0. No longer required to disable CSS extraction for HMR.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;从11.0版开始&lt;strong&gt;不推荐&lt;/strong&gt;使用。不再需要为HMR禁用CSS提取。</target>
        </trans-unit>
        <trans-unit id="1ec7dee0c924a12f7ff6dcaa892b9d6562479590" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; No longer has an effect.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;不再起作用。</target>
        </trans-unit>
        <trans-unit id="237fcba7286454f7f53e6f8e698891316f1b4be9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; No longer needed as the format will be determined automatically.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;不再需要，因为格式将自动确定。</target>
        </trans-unit>
        <trans-unit id="925908e29eee06ea6b1741f8241acf7ccfbd338d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; No replacement</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;无替代</target>
        </trans-unit>
        <trans-unit id="7c546b5482233a467aaed30da70f3a8b63827c7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Since 9.0.0. With Ivy, this property is no longer necessary.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;从9.0.0开始。使用常春藤，不再需要此属性。</target>
        </trans-unit>
        <trans-unit id="bc65e52dcd7199859a3b65305d3b2d02d941e152" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Since version 9.0.0 with Ivy, entryComponents is no longer necessary.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;从带有Ivy的9.0.0版本开始，不再需要entryComponents。</target>
        </trans-unit>
        <trans-unit id="7b367cccbf1e09c3b7bce2ac47695e9d4dc39eff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;loadChildren&lt;/code&gt; is deprecated in favor of the &lt;code&gt;&lt;a href=&quot;loadchildrencallback&quot;&gt;LoadChildrenCallback&lt;/a&gt;&lt;/code&gt; function which uses the ES dynamic &lt;code&gt;import()&lt;/code&gt; expression. This offers a more natural and standards-based mechanism to dynamically load an ES module at runtime.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用 &lt;code&gt;loadChildren&lt;/code&gt; 的 &lt;code&gt;string&lt;/code&gt; 形式，而推荐使用使用ES动态 &lt;code&gt;import()&lt;/code&gt; 表达式的 &lt;code&gt;&lt;a href=&quot;loadchildrencallback&quot;&gt;LoadChildrenCallback&lt;/a&gt;&lt;/code&gt; 函数。这提供了一种更自然且基于标准的机制，可在运行时动态加载ES模块。</target>
        </trans-unit>
        <trans-unit id="4bafcd07b9102c993074eff8bc3b23eed91b9dcb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; The &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;loadChildren&lt;/code&gt; is deprecated in favor of the &lt;code&gt;&lt;a href=&quot;router/loadchildrencallback&quot;&gt;LoadChildrenCallback&lt;/a&gt;&lt;/code&gt; function which uses the ES dynamic &lt;code&gt;import()&lt;/code&gt; expression. This offers a more natural and standards-based mechanism to dynamically load an ES module at runtime.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用 &lt;code&gt;loadChildren&lt;/code&gt; 的 &lt;code&gt;string&lt;/code&gt; 形式，而推荐使用使用ES动态 &lt;code&gt;import()&lt;/code&gt; 表达式的 &lt;code&gt;&lt;a href=&quot;router/loadchildrencallback&quot;&gt;LoadChildrenCallback&lt;/a&gt;&lt;/code&gt; 函数。这提供了一种更自然且基于标准的机制，可在运行时动态加载ES模块。</target>
        </trans-unit>
        <trans-unit id="055b744590c12172216b33ec47b42a63844460f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; This will be determined from the list of supported browsers specified in the 'browserslist' file.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;这将从&amp;ldquo;浏览器列表&amp;rdquo;文件中指定的受支持浏览器列表中确定。</target>
        </trans-unit>
        <trans-unit id="a63dda9f368c88ef2fff245cb161403739426aa7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &quot;NG_BUILD_PROFILING&quot; environment variable instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用&amp;ldquo; NG_BUILD_PROFILING&amp;rdquo;环境变量。</target>
        </trans-unit>
        <trans-unit id="79863918cb6736bb85a9c7aa01746ebfcab22473" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &quot;ng lint --fix&quot; directly instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;直接使用&amp;ldquo; ng lint --fix&amp;rdquo;代替。</target>
        </trans-unit>
        <trans-unit id="c18146bb864bb1dbf3954c121c2e2146621b2b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &quot;skipTests&quot; instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用&amp;ldquo; skipTests&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="66e19436326424896d1bed787c27b394d738df7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &quot;style&quot; instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用&amp;ldquo;样式&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="235645297b66848d5f3d56aeedfc2fce025f2a77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'format' option instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用&amp;ldquo;格式&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="292744433bda85c52572ca69fd14429f11eb27e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'i18n' project level sub-option 'sourceLocale' instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改为使用&amp;ldquo; i18n&amp;rdquo;项目级别的子选项&amp;ldquo; sourceLocale&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="570fee2dec045b864a46bcef60c28888fee2f67c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'locales' object in the project metadata instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在项目元数据中使用&amp;ldquo;语言环境&amp;rdquo;对象。</target>
        </trans-unit>
        <trans-unit id="83cca91b5f385b167c5a1aa9928d9c46fd0b9679" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use 'localize' instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用&amp;ldquo; localize&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="507192ba6170d6bcd2a4ed7f46d17aa201bf0d81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &lt;code&gt;&lt;a href=&quot;core/rendererfactory2&quot;&gt;RendererFactory2&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改用 &lt;code&gt;&lt;a href=&quot;core/rendererfactory2&quot;&gt;RendererFactory2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8389585613c09c90d8257d4b7b4a67921be42ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &lt;code&gt;&lt;a href=&quot;core/renderertype2&quot;&gt;RendererType2&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&lt;a href=&quot;core/renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt;) instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用 &lt;code&gt;&lt;a href=&quot;core/renderertype2&quot;&gt;RendererType2&lt;/a&gt;&lt;/code&gt; （和 &lt;code&gt;&lt;a href=&quot;core/renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f8726733bf1271b934c806c58289c37fdffbc5eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &lt;code&gt;&lt;a href=&quot;getangularjsglobal&quot;&gt;getAngularJSGlobal&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用 &lt;code&gt;&lt;a href=&quot;getangularjsglobal&quot;&gt;getAngularJSGlobal&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7600dac2d80ec1e13a4db993717a94c16d88aea7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &lt;code&gt;&lt;a href=&quot;rendererfactory2&quot;&gt;RendererFactory2&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改用 &lt;code&gt;&lt;a href=&quot;rendererfactory2&quot;&gt;RendererFactory2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3151ef25a5cdd2ad83ba9f4d2625c2f7b1fb77e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &lt;code&gt;&lt;a href=&quot;renderertype2&quot;&gt;RendererType2&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt;) instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改为使用 &lt;code&gt;&lt;a href=&quot;renderertype2&quot;&gt;RendererType2&lt;/a&gt;&lt;/code&gt; （和 &lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="65e5d991ddb21f4ff9912354e05cb597716afbc7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &lt;code&gt;&lt;a href=&quot;setangularjsglobal&quot;&gt;setAngularJSGlobal&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用 &lt;code&gt;&lt;a href=&quot;setangularjsglobal&quot;&gt;setAngularJSGlobal&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b27f889df31aaa0e329ccce7ac8d5b515c1bed8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &lt;code&gt;&lt;a href=&quot;static/getangularjsglobal&quot;&gt;getAngularJSGlobal&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用 &lt;code&gt;&lt;a href=&quot;static/getangularjsglobal&quot;&gt;getAngularJSGlobal&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81b8b330a2f0d3d8717253f43f5789f21374f68e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use &lt;code&gt;&lt;a href=&quot;static/setangularjsglobal&quot;&gt;setAngularJSGlobal&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt;改用 &lt;code&gt;&lt;a href=&quot;static/setangularjsglobal&quot;&gt;setAngularJSGlobal&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d36185e5d47e9acc688480cafb5a1147ca057fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use the &quot;aot&quot; option in the browser builder instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在浏览器构建器中使用&amp;ldquo; aot&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="e7dd8f0137b6adb9e6afd60c5115cbb76e84d6a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use the &quot;baseHref&quot; option in the browser builder instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在浏览器构建器中使用&amp;ldquo; baseHref&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="bf41d0b66bc1cfe09e3a797f7a6ce54259b25dd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use the &quot;commonChunk&quot; option in the browser builder instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在浏览器生成器中使用&amp;ldquo; commonChunk&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="e121e1d932c7f49b989311bc1c0df90b48f1f5d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use the &quot;deployUrl&quot; option in the browser builder instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在浏览器构建器中使用&amp;ldquo; deployUrl&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="a1fe7b0f8fb86e681da1624c976d2a19f27c8168" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use the &quot;optimization&quot; option in the browser builder instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在浏览器构建器中使用&amp;ldquo;优化&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="252dd704f6e641a65e4577e82f16a747c5a29268" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use the &quot;progress&quot; option in the browser builder instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在浏览器构建器中使用&amp;ldquo;进度&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="02081a5ad1ecc03f12079613969dec1830126e47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use the &quot;sourceMap&quot; option in the browser builder instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在浏览器生成器中使用&amp;ldquo; sourceMap&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="0505d731012f84abff066a4e3bbddb04b717a644" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use the &quot;vendorChunk&quot; option in the browser builder instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在浏览器生成器中使用&amp;ldquo; vendorChunk&amp;rdquo;选项。</target>
        </trans-unit>
        <trans-unit id="68dc4f474fa2f8e171e4994ec68d005eb57ccfa5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use the &lt;code&gt;&lt;a href=&quot;core/renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改用 &lt;code&gt;&lt;a href=&quot;core/renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8dcbdcbdc91a1c7c89aee2baf83673a141927cf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; Use the &lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;改用 &lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;Renderer2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42fc55fd12147abc3375b4e99dfc0d2e47cafbac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; all exports of this entry point are deprecated.</source>
          <target state="translated">&lt;strong&gt;已弃用：&lt;/strong&gt;此入口点的所有导出均已弃用。</target>
        </trans-unit>
        <trans-unit id="9dd5753d046df275e32891f6bce86ec5baae5a64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; from v10 stop using. (No replacement, deemed unnecessary.)</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;从v10开始停止使用。（无替换，认为没有必要。）</target>
        </trans-unit>
        <trans-unit id="39b5621a21621d0cebccef1406b2807f1f105da0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; from v5</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;从v5开始</target>
        </trans-unit>
        <trans-unit id="5de335e0f96c2b03317487d21a7fbb0026581bca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; from v5 - slow and brings in a lot of code, Use &lt;code&gt;Injector.create&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;从v5开始-速度很慢，并且引入了大量代码，请改用 &lt;code&gt;Injector.create&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="714378cbbe026cb8498d550e875517d6d3c88f47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; in Angular v6 and will be removed in Angular v9.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在Angular v6中，将在Angular v9中删除。</target>
        </trans-unit>
        <trans-unit id="64d8aec8e2cb976e2adc6925069eaea4b2c0895a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; in v8, delete after v10. This API should be used only be generated code, and that code should now use ɵɵdefineInjectable instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;在v8中，在v10之后删除。此API仅应用于生成的代码，并且该代码现在应改为使用ɵɵdefineInjectable。</target>
        </trans-unit>
        <trans-unit id="3d2693e8709789eb21839270cd28f719582d31b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; platform-webworker is deprecated in Angular and will be removed in version 10</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;平台Webworker在Angular中不推荐使用，并将在版本10中删除</target>
        </trans-unit>
        <trans-unit id="f07546a2348e6b295898cbaa0322b3fb310e3d02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;&lt;a href=&quot;../router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;ngmodulefactoryloader&quot;&gt;NgModuleFactoryLoader&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用 &lt;code&gt;&lt;a href=&quot;../router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;string&lt;/code&gt; 形式，并且 &lt;code&gt;&lt;a href=&quot;ngmodulefactoryloader&quot;&gt;NgModuleFactoryLoader&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c193197c73a206e68c94449c1f2bb78a70fb157" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;&lt;a href=&quot;../router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;systemjsngmoduleloader&quot;&gt;SystemJsNgModuleLoader&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用 &lt;code&gt;&lt;a href=&quot;../router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;string&lt;/code&gt; 形式，而 &lt;code&gt;&lt;a href=&quot;systemjsngmoduleloader&quot;&gt;SystemJsNgModuleLoader&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de8279388462f6f7ebfde5dd634d5703214cce70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;&lt;a href=&quot;../router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;systemjsngmoduleloaderconfig&quot;&gt;SystemJsNgModuleLoaderConfig&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;推荐使用：&lt;/strong&gt;该 &lt;code&gt;string&lt;/code&gt; 的形式 &lt;code&gt;&lt;a href=&quot;../router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; 已被弃用， &lt;code&gt;&lt;a href=&quot;systemjsngmoduleloaderconfig&quot;&gt;SystemJsNgModuleLoaderConfig&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8dc8e6700b79e4b74ede97c2acd1e560680178da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;&lt;a href=&quot;route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; is deprecated in favor of the proposed ES dynamic &lt;code&gt;import()&lt;/code&gt; expression, which offers a more natural and standards-based mechanism to dynamically load an ES module at runtime.</source>
          <target state="translated">&lt;strong&gt;不建议使用：不建议使用&lt;/strong&gt; &lt;code&gt;&lt;a href=&quot;route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;string&lt;/code&gt; 形式，而建议使用ES动态 &lt;code&gt;import()&lt;/code&gt; 表达式，该表达式提供了一种更自然且基于标准的机制，可在运行时动态加载ES模块。</target>
        </trans-unit>
        <trans-unit id="5943c4ea89a53aefb708387c97aad12937f2ff21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;&lt;a href=&quot;router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; is deprecated in favor of the proposed ES dynamic &lt;code&gt;import()&lt;/code&gt; expression, which offers a more natural and standards-based mechanism to dynamically load an ES module at runtime.</source>
          <target state="translated">&lt;strong&gt;不建议使用：不建议使用&lt;/strong&gt; &lt;code&gt;&lt;a href=&quot;router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;string&lt;/code&gt; 形式，而建议使用ES动态 &lt;code&gt;import()&lt;/code&gt; 表达式，该表达式提供了一种更自然且基于标准的机制，可在运行时动态加载ES模块。</target>
        </trans-unit>
        <trans-unit id="81681f4dcbfb6770c53a31c6d928d944d20c6253" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;&lt;a href=&quot;router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;core/ngmodulefactoryloader&quot;&gt;NgModuleFactoryLoader&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用 &lt;code&gt;&lt;a href=&quot;router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;string&lt;/code&gt; 形式，并且 &lt;code&gt;&lt;a href=&quot;core/ngmodulefactoryloader&quot;&gt;NgModuleFactoryLoader&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8c995cc6b5b17eb7ebd3e27c35934db0107fc65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;&lt;a href=&quot;router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;core/systemjsngmoduleloader&quot;&gt;SystemJsNgModuleLoader&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用 &lt;code&gt;&lt;a href=&quot;router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;string&lt;/code&gt; 形式，而 &lt;code&gt;&lt;a href=&quot;core/systemjsngmoduleloader&quot;&gt;SystemJsNgModuleLoader&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="873ff8967ff9d397276f3e98e6619d29bd23ca29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;&lt;a href=&quot;router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;core/systemjsngmoduleloaderconfig&quot;&gt;SystemJsNgModuleLoaderConfig&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;推荐使用：&lt;/strong&gt;该 &lt;code&gt;string&lt;/code&gt; 的形式 &lt;code&gt;&lt;a href=&quot;router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; 已被弃用， &lt;code&gt;&lt;a href=&quot;core/systemjsngmoduleloaderconfig&quot;&gt;SystemJsNgModuleLoaderConfig&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f50b6b8a7bb90d87da4a47e6f72d0e9ff80b29a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;loadChildren&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;core/ngmodulefactoryloader&quot;&gt;NgModuleFactoryLoader&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用 &lt;code&gt;loadChildren&lt;/code&gt; 的 &lt;code&gt;string&lt;/code&gt; 形式，并且 &lt;code&gt;&lt;a href=&quot;core/ngmodulefactoryloader&quot;&gt;NgModuleFactoryLoader&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11e39c20f48863dfab988889b74920f2ddc27662" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;loadChildren&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;core/systemjsngmoduleloader&quot;&gt;SystemJsNgModuleLoader&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;推荐使用：&lt;/strong&gt;该 &lt;code&gt;string&lt;/code&gt; 的形式 &lt;code&gt;loadChildren&lt;/code&gt; 已被弃用， &lt;code&gt;&lt;a href=&quot;core/systemjsngmoduleloader&quot;&gt;SystemJsNgModuleLoader&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84570c9c45665a858561e92aa28f0af1913f4e0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;loadChildren&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;core/systemjsngmoduleloaderconfig&quot;&gt;SystemJsNgModuleLoaderConfig&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;推荐使用：&lt;/strong&gt;该 &lt;code&gt;string&lt;/code&gt; 的形式 &lt;code&gt;loadChildren&lt;/code&gt; 已被弃用， &lt;code&gt;&lt;a href=&quot;core/systemjsngmoduleloaderconfig&quot;&gt;SystemJsNgModuleLoaderConfig&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5075a7eacefa154459eeb9cff268cbaf4b768753" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;loadChildren&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;ngmodulefactoryloader&quot;&gt;NgModuleFactoryLoader&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt;不推荐使用 &lt;code&gt;loadChildren&lt;/code&gt; 的 &lt;code&gt;string&lt;/code&gt; 形式，并且 &lt;code&gt;&lt;a href=&quot;ngmodulefactoryloader&quot;&gt;NgModuleFactoryLoader&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d3292cb4a773f93a7456116422f78a6cd47af09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;loadChildren&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;systemjsngmoduleloader&quot;&gt;SystemJsNgModuleLoader&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;推荐使用：&lt;/strong&gt;该 &lt;code&gt;string&lt;/code&gt; 的形式 &lt;code&gt;loadChildren&lt;/code&gt; 已被弃用， &lt;code&gt;&lt;a href=&quot;systemjsngmoduleloader&quot;&gt;SystemJsNgModuleLoader&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7644da737215cae5ea50b5d936807d92d8145b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the &lt;code&gt;string&lt;/code&gt; form of &lt;code&gt;loadChildren&lt;/code&gt; is deprecated, and &lt;code&gt;&lt;a href=&quot;systemjsngmoduleloaderconfig&quot;&gt;SystemJsNgModuleLoaderConfig&lt;/a&gt;&lt;/code&gt; is part of its implementation. See &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;推荐使用：&lt;/strong&gt;该 &lt;code&gt;string&lt;/code&gt; 的形式 &lt;code&gt;loadChildren&lt;/code&gt; 已被弃用， &lt;code&gt;&lt;a href=&quot;systemjsngmoduleloaderconfig&quot;&gt;SystemJsNgModuleLoaderConfig&lt;/a&gt;&lt;/code&gt; 是其实现的一部分。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;../router/loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2407d5fe7ac13c5cc040854bd720396db1391041" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; the Web Tracing Framework is no longer supported in Angular</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt; Angular不再支持Web跟踪框架</target>
        </trans-unit>
        <trans-unit id="dfec05844f7fb08c3a0b3ea54156ac2585631aee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; use &lt;code&gt;&lt;a href=&quot;testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt;, (expected removal in v12)</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;使用 &lt;code&gt;&lt;a href=&quot;testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; ，（预期在v12中删除）</target>
        </trans-unit>
        <trans-unit id="7b02b0beebfbbcf7ed12a43495fd9d7256f7623e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; use &lt;code&gt;&lt;a href=&quot;waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt;, (expected removal in v12)</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt;使用 &lt;code&gt;&lt;a href=&quot;waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; ，（预期在v12中删除）</target>
        </trans-unit>
        <trans-unit id="a170c8493a393e1a6491d43d6a70b59388a153e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; v4.0.0 - Should not be part of public API.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt; v4.0.0-不应成为公共API的一部分。</target>
        </trans-unit>
        <trans-unit id="6938bb41cd33b5fe739c64f36738c5ddfbcccb7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; v4.0.0 - Use IterableChangeRecord instead.</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt; v4.0.0-改用IterableChangeRecord。</target>
        </trans-unit>
        <trans-unit id="b4a2d9d7036ccea7bde0ff0c57610643265b9bc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Deprecated&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35a0a9f9f1b99f34042e07869a539e2e61795ac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt; Use &lt;code&gt;&lt;a href=&quot;getangularjsglobal&quot;&gt;getAngularJSGlobal&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;弃用&lt;/strong&gt;使用 &lt;code&gt;&lt;a href=&quot;getangularjsglobal&quot;&gt;getAngularJSGlobal&lt;/a&gt;&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="e891144428fcc23c855970e639d89788b9be4a8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt; Use &lt;code&gt;&lt;a href=&quot;setangularjsglobal&quot;&gt;setAngularJSGlobal&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;弃用&lt;/strong&gt;使用 &lt;code&gt;&lt;a href=&quot;setangularjsglobal&quot;&gt;setAngularJSGlobal&lt;/a&gt;&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="b733cd37134a6600d34fbded83ae0d2c8bda6c96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt; from v4.0.0 use Type</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;从v4.0.0版&lt;strong&gt;弃用&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b7884c01f5310ada144bb105a9e85eb66c26786" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt; from v5 use the new signature Injector.create(options)</source>
          <target state="translated">&lt;strong&gt;弃用&lt;/strong&gt;从V5使用新的签名Injector.create（选项）</target>
        </trans-unit>
        <trans-unit id="c2cfaf298ecb277b731ae6b17ef1fbe104888611" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt; from v9.0.0 use TestBed.inject</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;从v9.0.0起&lt;strong&gt;已弃用&lt;/strong&gt;，请使用TestBed.inject</target>
        </trans-unit>
        <trans-unit id="6d2dec88f3a4c9ce3fef60b256b2e921ddb9bebe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt; pending requests are now tracked with zones</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;现在使用区域跟踪&lt;strong&gt;已弃用的&lt;/strong&gt;待处理请求</target>
        </trans-unit>
        <trans-unit id="6f0b0e0b151b9e709dfb47c7aa030e85bb10ded7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt; pending requests are now tracked with zones.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;现在使用区域来跟踪&lt;strong&gt;已弃用的&lt;/strong&gt;待处理请求。</target>
        </trans-unit>
        <trans-unit id="1b8bfe60f6374240970e3cfa55d7d3d5565a9b90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt; platform-webworker is deprecated in Angular and will be removed in version 10</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;Angular中&lt;strong&gt;已弃用了&lt;/strong&gt; platform-webworker，在版本10中将其删除</target>
        </trans-unit>
        <trans-unit id="e45e0e7df40e753d21891233da9ca5086932ed9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt; use &lt;code&gt;&lt;a href=&quot;waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt;, (expected removal in v12)</source>
          <target state="translated">&lt;strong&gt;不建议&lt;/strong&gt;使用 &lt;code&gt;&lt;a href=&quot;waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; ，（预期在v12中删除）</target>
        </trans-unit>
        <trans-unit id="a172b2318a0ac73a016d038f3895b65a067f2ca4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecation notice:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;弃用通知：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f1266d586920ef18ddce67324d995ea05cb70d75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecation period:&lt;/strong&gt; When an API or a feature is deprecated, it will still be present in the &lt;a href=&quot;releases#schedule&quot;&gt;next two major releases&lt;/a&gt;. After that, deprecated APIs and features will be candidates for removal. A deprecation can be announced in any release, but the removal of a deprecated API or feature will happen only in major release. Until a deprecated API or feature is removed, it will be maintained according to the LTS support policy, meaning that only critical and security issues will be fixed.</source>
          <target state="translated">&lt;strong&gt;弃用期限：&lt;/strong&gt;不赞成使用API​​或功能时，在&lt;a href=&quot;releases#schedule&quot;&gt;接下来的两个主要发行版中&lt;/a&gt;仍将存在。之后，不推荐使用的API和功能将被删除。可以在任何发行版中宣布弃用，但是仅在主要发行版中才会删除弃用的API或功能。在删除不推荐使用的API或功能之前，将根据LTS支持策略对其进行维护，这意味着仅关键和安全问题将得到解决。</target>
        </trans-unit>
        <trans-unit id="6b32e7a1846e16a68c42cec19b613a6be6550200" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecation period:&lt;/strong&gt; When an API or a feature is deprecated, it will still be present in the next two major releases. After that, deprecated APIs and features will be candidates for removal. A deprecation can be announced in any release, but the removal of a deprecated API or feature will happen only in major release. Until a deprecated API or feature is removed, it will be maintained according to the LTS support policy, meaning that only critical and security issues will be fixed.</source>
          <target state="translated">&lt;strong&gt;弃用期：&lt;/strong&gt;不推荐使用API​​或功能时，在接下来的两个主要版本中仍将存在。之后，不推荐使用的API和功能将被删除。可以在任何版本中宣布不推荐使用，但是仅在主要版本中才删除不推荐使用的API或功能。在删除不赞成使用的API或功能之前，将根据LTS支持策略对其进行维护，这意味着仅关键和安全问题将得到解决。</target>
        </trans-unit>
        <trans-unit id="211456061da7605c0f7d7fe2185e98a50a608aa1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Different types of forms and control collection&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;不同类型的表单和控件集合&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e490a567338601ca92aa995586988ec011881076" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Display form status&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;显示表格状态&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb4d435403c525da223a9ab3fd0e284efff153e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Display the component&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;显示组件&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8591e588a4ef13f20829b503acd0c139fc679eb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Display the form array in the template&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;在模板中显示表单数组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="169b22285b5954c65589e3b420ceceefcef8857c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do not set a width greater than 700px&lt;/strong&gt;. If you wish to display a larger image, provide a link to the actual image that the user can click on to see the full size image separately as in this example of &lt;code&gt;source-map-explorer&lt;/code&gt; output from the &quot;Ahead-of-time Compilation&quot; guide:</source>
          <target state="translated">&lt;strong&gt;不要设置大于700px的宽度&lt;/strong&gt;。如果您希望显示更大的图像，请提供指向实际图像的链接，用户可以单击该链接单独查看完整尺寸的图像，如本示例中&amp;ldquo;提前编译&amp;rdquo;输出的 &lt;code&gt;source-map-explorer&lt;/code&gt; 所示。指南：</target>
        </trans-unit>
        <trans-unit id="7173a0c15f40867cd98f8476ae7d5cdb6a6bf73e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do not use the markdown image syntax, ![...](...).&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;不要使用降价图像语法！[...]（...）。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f432a37145e9e2323569b0ab88283548219bde9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do not write inline code snippets&lt;/strong&gt; unless you have a good reason and the editor's permission to do so. In all other cases, code snippets should be generated automatically from tested code samples.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;除非您有充分的理由并获得编辑者的许可，否则&lt;strong&gt;请勿编写内联代码段&lt;/strong&gt;。在所有其他情况下，应该从经过测试的代码样本中自动生成代码片段。</target>
        </trans-unit>
        <trans-unit id="b68a65a9af9cc3205a64a644f43bc32a38a5b9be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do not&lt;/strong&gt; include the &lt;code&gt;node_modules&lt;/code&gt; folder in the project. Let it be a hidden project folder.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;在项目中包括 &lt;code&gt;node_modules&lt;/code&gt; 文件夹。让它成为一个隐藏的项目文件夹。</target>
        </trans-unit>
        <trans-unit id="8f05db6d262a6a382fc2ef4024ee286a3fcf9e55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; Use lower camel case for naming the selectors of directives.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;使用小写驼峰命名指令的选择器。</target>
        </trans-unit>
        <trans-unit id="756af44694e036aa11de735bfbf199d32f2786b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; append the symbol name with the conventional suffix (such as &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;Module&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;Service&lt;/code&gt;) for a thing of that type.</source>
          <target state="translated">&lt;strong&gt;请勿&lt;/strong&gt;在符号名称后加上常规后缀（例如 &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;Module&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;Service&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="153352eca009138a1ed3de98b472f90cc0492ab4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; append the symbol name with the suffix &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;在符号名称后加上 &lt;code&gt;Module&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37cc7c63695406b59611ab5b71220b9b942cd9a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; be DRY (Don't Repeat Yourself).</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;干（不要重复自己）。</target>
        </trans-unit>
        <trans-unit id="c5a1d13d2b57fdec4bb4f3b13a493236cbac36e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; be consistent in your choice.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;在你的选择是一致的。</target>
        </trans-unit>
        <trans-unit id="68c41f8439d82dd2f76a9c3edd87b07a05e58ca4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; be descriptive with file names and keep the contents of the file to exactly one component.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;使用文件名进行描述，并将文件内容仅保留到一个组件中。</target>
        </trans-unit>
        <trans-unit id="c00c45caf95d9b87e21cebc918c822f1c67e55ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; create a feature module named &lt;code&gt;SharedModule&lt;/code&gt; in a &lt;code&gt;shared&lt;/code&gt; folder; for example, &lt;code&gt;app/shared/shared.module.ts&lt;/code&gt; defines &lt;code&gt;SharedModule&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;创建一个名为一个功能模块 &lt;code&gt;SharedModule&lt;/code&gt; 在 &lt;code&gt;shared&lt;/code&gt; 文件夹; 例如， &lt;code&gt;app/shared/shared.module.ts&lt;/code&gt; 定义了 &lt;code&gt;SharedModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3f7274c450f242bd1ba80e7d18c68014eeea065" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; create a new service once the service begins to exceed that singular purpose.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;一旦服务开始超过单一目的创建新的服务。</target>
        </trans-unit>
        <trans-unit id="7adcd12c026b630a50f2eaa8c3033ca30ea97afa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; create an NgModule for all distinct features in an application; for example, a &lt;code&gt;Heroes&lt;/code&gt; feature.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;创建应用程序中的所有特色鲜明的NgModule; 例如 &lt;code&gt;Heroes&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="69d3cab88de69451416caa19d56f243518d871ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; create an NgModule for each feature area.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;为每个功能区域的NgModule。</target>
        </trans-unit>
        <trans-unit id="3ab22382cbe44c9bb5ecdff51614d741b044724f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; create an NgModule in the app's root folder, for example, in &lt;code&gt;/src/app&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;在应用中创建的根文件夹的NgModule，例如 &lt;code&gt;/src/app&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="931cae31695433c127504b614b08f067dfca3841" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; create folders named for the feature area they represent.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;创建以其代表的功能区域命名的文件夹。</target>
        </trans-unit>
        <trans-unit id="1296916986b4fe85a5dc6245d682901f7c88adfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; create services with a single responsibility that is encapsulated by its context.</source>
          <target state="translated">&lt;strong&gt;待办事项&lt;/strong&gt;创建服务，由它的上下文封装一个责任。</target>
        </trans-unit>
        <trans-unit id="3911b104409eb46eaffb8f55baf1bb235a71bca4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; declare all components, directives, and pipes in the &lt;code&gt;SharedModule&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;在 &lt;code&gt;SharedModule&lt;/code&gt; 中声明所有组件，指令和管道。</target>
        </trans-unit>
        <trans-unit id="cab5a59ccabfc8e97b46f17a6cf05b11ae4c097a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; declare components, directives, and pipes in a shared module when those items will be re-used and referenced by the components declared in other feature modules.</source>
          <target state="translated">&lt;strong&gt;做&lt;/strong&gt;声明组件，指令，和管道的共享模块中时，这些项目将被重新使用，并且在其他特征模块中声明的组件引用。</target>
        </trans-unit>
        <trans-unit id="2e08a28c59698b76a3c21a4c94e7aafedc71ed80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; define one thing, such as a service or component, per file.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;为每个文件定义一件事，例如服务或组件。</target>
        </trans-unit>
        <trans-unit id="d68cc4de5d4cfb0cfd8658d935f47e92d04addcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; define small functions</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;定义小功能</target>
        </trans-unit>
        <trans-unit id="68498585b290359393f79634b03a1d41b1555619" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; define the structure to follow these four basic guidelines, listed in order of importance.</source>
          <target state="translated">&lt;strong&gt;务必&lt;/strong&gt;按照重要性列出的这四个基本准则定义结构。</target>
        </trans-unit>
        <trans-unit id="fd4aaef7172d067ebe063baf539a3102330db269" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; end the filename of a &lt;em&gt;RoutingModule&lt;/em&gt; with &lt;code&gt;-routing.module.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;结束的文件名&lt;em&gt;RoutingModule&lt;/em&gt;与 &lt;code&gt;-routing.module.ts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="424cdd9134c136b2534980399cb6591450120475" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; export all symbols from the &lt;code&gt;SharedModule&lt;/code&gt; that other feature modules need to use.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;从导出所有符号 &lt;code&gt;SharedModule&lt;/code&gt; 其他功能模块需要使用。</target>
        </trans-unit>
        <trans-unit id="02fea1f308ef53e59c993bb9bc4366768cca349c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; extract templates and styles into a separate file, when more than 3 lines.</source>
          <target state="translated">&lt;strong&gt;难道&lt;/strong&gt;提取模板和样式到一个单独的文件，当超过3行。</target>
        </trans-unit>
        <trans-unit id="cbfa824dec9159053869b1067a3c0d6f3f94ba8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; follow a pattern that describes the symbol's feature then its type. The recommended pattern is &lt;code&gt;feature.type.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;遵循描述符号特征及其类型的模式。推荐的模式是 &lt;code&gt;feature.type.ts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6eebcad366f314fe260de69a328ff8c2f2670360" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; give the file name the &lt;code&gt;.module.ts&lt;/code&gt; extension.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;给文件名加上 &lt;code&gt;.module.ts&lt;/code&gt; 扩展名。</target>
        </trans-unit>
        <trans-unit id="0206f75503529ff71eb1a9f28d948773b91ba4cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; give the filename the conventional suffix (such as &lt;code&gt;.component.ts&lt;/code&gt;, &lt;code&gt;.directive.ts&lt;/code&gt;, &lt;code&gt;.module.ts&lt;/code&gt;, &lt;code&gt;.pipe.ts&lt;/code&gt;, or &lt;code&gt;.service.ts&lt;/code&gt;) for a file of that type.</source>
          <target state="translated">&lt;strong&gt;别&lt;/strong&gt;得到的文件名的后缀常规（如 &lt;code&gt;.component.ts&lt;/code&gt; ， &lt;code&gt;.directive.ts&lt;/code&gt; ， &lt;code&gt;.module.ts&lt;/code&gt; ， &lt;code&gt;.pipe.ts&lt;/code&gt; ，或 &lt;code&gt;.service.ts&lt;/code&gt; ），用于该类型的一个文件。</target>
        </trans-unit>
        <trans-unit id="deca3050ed9d3ec3756dcf8bb288319f1c89aa7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; have a near term view of implementation and a long term vision.</source>
          <target state="translated">&lt;strong&gt;确实&lt;/strong&gt;对实施有一个短期的看法和一个长期的愿景。</target>
        </trans-unit>
        <trans-unit id="1ef24dc995d906797c68ee59d06da91798882a97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; implement the lifecycle hook interfaces.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;实现生命周期挂钩接口。</target>
        </trans-unit>
        <trans-unit id="c303aa380fb4cff0efa9842a334e696f89bf8355" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; import all modules required by the assets in the &lt;code&gt;SharedModule&lt;/code&gt;; for example, &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;一定要&lt;/strong&gt;在 &lt;code&gt;SharedModule&lt;/code&gt; 中导入资产所需的所有模块；例如， &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75234a1890e1015e5a48b582eb574e1f2e81ceb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; include error handling in the bootstrapping logic.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;在引导逻辑中包含错误处理。</target>
        </trans-unit>
        <trans-unit id="1b4288e4f5e6492bfb85103d603b71c7b7c3fd77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; is one that should always be followed. &lt;em&gt;Always&lt;/em&gt; might be a bit too strong of a word. Guidelines that literally should always be followed are extremely rare. On the other hand, you need a really unusual case for breaking a &lt;em&gt;Do&lt;/em&gt; guideline.</source>
          <target state="translated">&lt;strong&gt;做&lt;/strong&gt;是应该始终遵循的。一句话&lt;em&gt;总是&lt;/em&gt;太强了。从字面上应始终遵循的准则非常罕见。另一方面，您需要一个非常不寻常的案例来打破&lt;em&gt;Do&lt;/em&gt;准则。</target>
        </trans-unit>
        <trans-unit id="e55242ad22a5996fd3efca619637c447ce0b1b9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; keep a flat folder structure as long as possible.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;保持一个平面文件夹结构尽可能长的时间。</target>
        </trans-unit>
        <trans-unit id="b5c5e12b6e545709ef990b9b53ec3a1738d52dac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; limit logic in a component to only that required for the view. All other logic should be delegated to services.</source>
          <target state="translated">&lt;strong&gt;做&lt;/strong&gt;限制逻辑中的成分仅所需的图。所有其他逻辑应委托给服务。</target>
        </trans-unit>
        <trans-unit id="a405780eb84b6a3584c8828ad6ff23b25db43802" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; make data services responsible for XHR calls, local storage, stashing in memory, or any other data operations.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;让数据服务负责XHR调用，本地存储，存储在内存中或任何其他数据操作。</target>
        </trans-unit>
        <trans-unit id="2d3f678eccd25f031c48366493647554f7a63190" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; make locating code intuitive, simple, and fast.</source>
          <target state="translated">&lt;strong&gt;确实&lt;/strong&gt;要使定位代码直观，简单和快速。</target>
        </trans-unit>
        <trans-unit id="e25d22a2e3f2a399bf9997ba5b8d5226b619b332" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; match the name of the symbol to the name of the file.</source>
          <target state="translated">&lt;strong&gt;请确保&lt;/strong&gt;符号名称与文件名称匹配。</target>
        </trans-unit>
        <trans-unit id="a2a468f22f0e2cf16f02d394fd7aa6652b654e29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; move reusable logic to services and keep components simple and focused on their intended purpose.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;移动可重复使用的逻辑，以服务和保持部件简单和专注于他们的预期目的。</target>
        </trans-unit>
        <trans-unit id="67d8007229973bd14357bad9c0f4868c63e332ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; name end-to-end test specification files after the feature they test with a suffix of &lt;code&gt;.e2e-spec&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;请在&lt;/strong&gt;测试功能之后以 &lt;code&gt;.e2e-spec&lt;/code&gt; 后缀命名端到端测试规范文件。</target>
        </trans-unit>
        <trans-unit id="6209ab419f047dd979588da17339d1739a1a5d92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; name event handler methods with the prefix &lt;code&gt;on&lt;/code&gt; followed by the event name.</source>
          <target state="translated">&lt;strong&gt;在&lt;/strong&gt;事件处理程序方法的名称前加上事件名称 &lt;code&gt;on&lt;/code&gt; 然后加上前缀。</target>
        </trans-unit>
        <trans-unit id="1536253456bf0e4ec9a7138f3df678a22d93f3bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; name events without the prefix &lt;code&gt;on&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;在 &lt;code&gt;on&lt;/code&gt; 加上前缀来命名事件。</target>
        </trans-unit>
        <trans-unit id="72fc7ff3699db165b0faefe0a32401113f7e6126" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; name test specification files the same as the component they test.</source>
          <target state="translated">&lt;strong&gt;是否将&lt;/strong&gt;测试规范文件命名为与其测试的组件相同的文件。</target>
        </trans-unit>
        <trans-unit id="89d9cc996675ed4eb14697065bc91a26137ef04b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; name test specification files with a suffix of &lt;code&gt;.spec&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;以 &lt;code&gt;.spec&lt;/code&gt; 后缀命名测试规范文件。</target>
        </trans-unit>
        <trans-unit id="0f5b17289f4aa199b0fec58c91dd947153469638" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; name the feature module file reflecting the name of the feature area and folder; for example, &lt;code&gt;app/heroes/heroes.module.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;为功能模块文件命名，以反映功能区域和文件夹的名称；例如 &lt;code&gt;app/heroes/heroes.module.ts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d17bb3b39eaea3d8c5b89c34a73ec427f9f22626" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; name the feature module symbol reflecting the name of the feature area, folder, and file; for example, &lt;code&gt;app/heroes/heroes.module.ts&lt;/code&gt; defines &lt;code&gt;HeroesModule&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;为功能模块符号命名，以反映功能区域，文件夹和文件的名称；例如， &lt;code&gt;app/heroes/heroes.module.ts&lt;/code&gt; 定义 &lt;code&gt;HeroesModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a9a26cd9c372572cd4569cca774843691ba0be0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; name the file such that you instantly know what it contains and represents.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;将文件命名为这样你即刻知道它所包含的内容和代表。</target>
        </trans-unit>
        <trans-unit id="c70f892ee9de9f7d55a2d38ec2d5b997e6f728cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; name the module after the feature and folder it resides in.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;以功能部件及其所在的文件夹命名模块。</target>
        </trans-unit>
        <trans-unit id="efd18b6f8d4abdbb012bd94ccfb7a9da586da549" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; name the style file &lt;code&gt;[component-name].component.css&lt;/code&gt;, where [component-name] is the component name.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;命名样式文件 &lt;code&gt;[component-name].component.css&lt;/code&gt; ，其中[component-name]是组件名称。</target>
        </trans-unit>
        <trans-unit id="c192d2ee4bc6771008c16522374e56e7e5ae7754" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; name the template file &lt;code&gt;[component-name].component.html&lt;/code&gt;, where [component-name] is the component name.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;命名模板文件 &lt;code&gt;[component-name].component.html&lt;/code&gt; ，其中[component-name]是组件名称。</target>
        </trans-unit>
        <trans-unit id="8c99293a7d9e3e2e4eb705e4024c72d986509327" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; place private members after public members, alphabetized.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;按字母顺序在私人成员之后放置私人成员。</target>
        </trans-unit>
        <trans-unit id="bb0ff2ae72c8cf540a6dad4708d9f9596090e2b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; place properties up top followed by methods.</source>
          <target state="translated">&lt;strong&gt;一定要先&lt;/strong&gt;放置属性，然后再放置方法。</target>
        </trans-unit>
        <trans-unit id="99b2f3501de2951dca9a4141bea2870c4567b742" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; place the feature module in the same named folder as the feature area; for example, in &lt;code&gt;app/heroes&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;放置在同一个命名的文件夹为特征区域的功能模块; 例如，在 &lt;code&gt;app/heroes&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="d5722369208e41b13dca44b65f2447f50c92ce04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; provide a service with the app root injector in the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; decorator of the service.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;使用服务的 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; 装饰器中的app根注入器提供服务。</target>
        </trans-unit>
        <trans-unit id="d5a28ed423d6944508a340974c6ad496a01b21a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; put all of the app's code in a folder named &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;一定要将&lt;/strong&gt;应用程序的所有代码放在名为 &lt;code&gt;src&lt;/code&gt; 的文件夹中。</target>
        </trans-unit>
        <trans-unit id="2479321a03fa6060bb58392a9372d807820bae8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; put bootstrapping and platform logic for the app in a file named &lt;code&gt;main.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;放引导和平台的逻辑在一个文件中指定的应用程序 &lt;code&gt;main.ts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c919cf33f57f1e80a8e7baa542906d3184f4a29c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; put presentation logic in the component class, and not in the template.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;将表示逻辑放在组件类中，而不要放在模板中。</target>
        </trans-unit>
        <trans-unit id="cd801119d3788db0f48b20b6a050db78823a218a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; put the contents of lazy loaded features in a &lt;em&gt;lazy loaded folder&lt;/em&gt;. A typical &lt;em&gt;lazy loaded folder&lt;/em&gt; contains a &lt;em&gt;routing component&lt;/em&gt;, its child components, and their related assets and modules.</source>
          <target state="translated">&lt;strong&gt;做&lt;/strong&gt;放的延迟加载功能内容的&lt;em&gt;延迟加载文件夹&lt;/em&gt;。典型的&lt;em&gt;延迟加载文件夹&lt;/em&gt;包含&lt;em&gt;路由组件&lt;/em&gt;，其子组件及其相关资产和模块。</target>
        </trans-unit>
        <trans-unit id="8a8c7e939be120f7d56d6b049da69611efadd66e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; refactor logic for making data operations and interacting with data to a service.</source>
          <target state="translated">&lt;strong&gt;做&lt;/strong&gt;重构逻辑使数据操作和数据的服务进行交互。</target>
        </trans-unit>
        <trans-unit id="2daf2a8ae4842cad7a27f0ac372d33a31a072bd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; specify &lt;em&gt;component-relative&lt;/em&gt; URLs, prefixed with &lt;code&gt;./&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;指定以 &lt;code&gt;./&lt;/code&gt; 开头&lt;em&gt;的相对于组件的&lt;/em&gt; URL 。</target>
        </trans-unit>
        <trans-unit id="1da2147e294f49dc4e51a0fc8aba0cbfd71c3af4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; spell non-element selectors in lower camel case unless the selector is meant to match a native HTML attribute.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;除非选择是为了满足本地的HTML属性较低的骆驼拼写非元素选择。</target>
        </trans-unit>
        <trans-unit id="19c1158dd3fd6095e86d920452f5e64ee07f3f10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; start small but keep in mind where the app is heading down the road.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;开始很小，但要记住这里的应用是标题的道路。</target>
        </trans-unit>
        <trans-unit id="c1bb6de1f52d2c127414fe8186c82bd4d4fb21f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; structure the app such that you can &lt;strong&gt;L&lt;/strong&gt;ocate code quickly, &lt;strong&gt;I&lt;/strong&gt;dentify the code at a glance, keep the &lt;strong&gt;F&lt;/strong&gt;lattest structure you can, and &lt;strong&gt;T&lt;/strong&gt;ry to be DRY.</source>
          <target state="translated">&lt;strong&gt;做&lt;/strong&gt;结构的应用程序，这样你可以&lt;strong&gt;大号&lt;/strong&gt; ocate代码很快，&lt;strong&gt;我&lt;/strong&gt; dentify代码一目了然，保持&lt;strong&gt;˚F&lt;/strong&gt; lattest结构就可以了，&lt;strong&gt;牛逼&lt;/strong&gt; RY是干的。</target>
        </trans-unit>
        <trans-unit id="447bce5b2ed3be44cfa8271a90f5d28bc8198718" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; suffix a &lt;em&gt;RoutingModule&lt;/em&gt; class name with &lt;code&gt;RoutingModule&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;一定要&lt;/strong&gt;在&lt;em&gt;RoutingModule&lt;/em&gt;类名后加上 &lt;code&gt;RoutingModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fed7861c9f089246f8db40e8d0c87eb27430c622" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; suffix a service class name with &lt;code&gt;Service&lt;/code&gt;. For example, something that gets data or heroes should be called a &lt;code&gt;DataService&lt;/code&gt; or a &lt;code&gt;HeroService&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;在服务类名后加上 &lt;code&gt;Service&lt;/code&gt; 。例如，获取数据或英雄的东西应称为 &lt;code&gt;DataService&lt;/code&gt; 或 &lt;code&gt;HeroService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c1509076fb6b5c6b9032dee4e08837628485074" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use &lt;a href=&quot;https://www.npmjs.com/package/codelyzer&quot;&gt;codelyzer&lt;/a&gt; to follow this guide.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;使用&lt;a href=&quot;https://www.npmjs.com/package/codelyzer&quot;&gt;codelyzer&lt;/a&gt;来遵循本指南。</target>
        </trans-unit>
        <trans-unit id="7985aba17e237de853ce430d0b75bfcc3a4a382c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use &lt;em&gt;dashed-case&lt;/em&gt; or &lt;em&gt;kebab-case&lt;/em&gt; for naming the element selectors of components.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;使用&lt;em&gt;破折号&lt;/em&gt;或&lt;em&gt;kebab-case&lt;/em&gt;命名组件的元素选择器。</target>
        </trans-unit>
        <trans-unit id="bfac476b71f59566f5127a7d6239c65ac9e76752" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use a custom prefix for a component selector. For example, the prefix &lt;code&gt;toh&lt;/code&gt; represents &lt;strong&gt;T&lt;/strong&gt;our &lt;strong&gt;o&lt;/strong&gt;f &lt;strong&gt;H&lt;/strong&gt;eroes and the prefix &lt;code&gt;admin&lt;/code&gt; represents an admin feature area.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;为组件选择器使用自定义前缀。例如，前缀 &lt;code&gt;toh&lt;/code&gt; 代表&lt;strong&gt;牛逼&lt;/strong&gt;我们&lt;strong&gt;&amp;Oslash;&lt;/strong&gt; ˚F &lt;strong&gt;^ h&lt;/strong&gt; eroes和前缀 &lt;code&gt;admin&lt;/code&gt; 代表管理功能区域。</target>
        </trans-unit>
        <trans-unit id="44139d62100dd05907211954f2365d5e0cf3e624" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use a custom prefix for the selector of directives (e.g, the prefix &lt;code&gt;toh&lt;/code&gt; from &lt;strong&gt;T&lt;/strong&gt;our &lt;strong&gt;o&lt;/strong&gt;f &lt;strong&gt;H&lt;/strong&gt;eroes).</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;使用自定义的前缀指令的选择（例如，前缀 &lt;code&gt;toh&lt;/code&gt; 从&lt;strong&gt;牛逼&lt;/strong&gt;我们&lt;strong&gt;&amp;Oslash;&lt;/strong&gt; ˚F &lt;strong&gt;^ h&lt;/strong&gt; eroes）。</target>
        </trans-unit>
        <trans-unit id="893cd5a23c6adf14d9224cb52e6f1b4c5b9feb98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use a hyphenated, lowercase element selector value; for example, &lt;code&gt;admin-users&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;使用带连字符的小写元素选择器值；例如 &lt;code&gt;admin-users&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00e52512f5585f991fce0b87893122af6eeaa8f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use a prefix that identifies the feature area or the app itself.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;使用用于标识功能区域或应用本身的前缀。</target>
        </trans-unit>
        <trans-unit id="865b4dfe299fa61cb13a9f7a99c447b4684571d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use attribute directives when you have presentation logic without a template.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;使用属性的指令时，你有表现逻辑没有一个模板。</target>
        </trans-unit>
        <trans-unit id="2d7be5cdb6da4aa9b0f3cc0c614d6e58f2a88ef0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use consistent names for all assets named after what they represent.</source>
          <target state="translated">&lt;strong&gt;待办事项&lt;/strong&gt;使用一致的名字，他们分别代表什么命名的所有资产。</target>
        </trans-unit>
        <trans-unit id="319543104179e3aa7703d59df00d4acd56fa2386" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use consistent names for all pipes, named after their feature. The pipe class name should use &lt;a href=&quot;glossary#case-types&quot;&gt;UpperCamelCase&lt;/a&gt; (the general convention for class names), and the corresponding &lt;code&gt;name&lt;/code&gt; string should use &lt;em&gt;lowerCamelCase&lt;/em&gt;. The &lt;code&gt;name&lt;/code&gt; string cannot use hyphens (&quot;dash-case&quot; or &quot;kebab-case&quot;).</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;对所有管道使用一致的名称，并以其功能命名。管道类名称应使用&lt;a href=&quot;glossary#case-types&quot;&gt;UpperCamelCase&lt;/a&gt;（类名称的常规约定），而相应的 &lt;code&gt;name&lt;/code&gt; 字符串应使用&lt;em&gt;lowerCamelCase&lt;/em&gt;。该 &lt;code&gt;name&lt;/code&gt; 字符串不能使用连字符（&amp;ldquo;破折号情况&amp;rdquo;或&amp;ldquo;烤肉情况&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="b74e052dcc626499e14cf9a52f2bdfa1b5f8157d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use consistent names for all services named after their feature.</source>
          <target state="translated">&lt;strong&gt;待办事项&lt;/strong&gt;使用一致的名称为自己的特点而命名的所有服务。</target>
        </trans-unit>
        <trans-unit id="4c9c40f42be9d32aaef11f560a7b86ef8a31b067" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use consistent names for all symbols.</source>
          <target state="translated">&lt;strong&gt;请勿&lt;/strong&gt;对所有符号使用一致的名称。</target>
        </trans-unit>
        <trans-unit id="9368fc727343fb9f24f72163850b7f610e8ffe07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use consistent type names for all components following a pattern that describes the component's feature then its type. A recommended pattern is &lt;code&gt;feature.type.ts&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;遵循描述组件功能及其类型的模式，对所有组件使用一致的类型名称。推荐的模式是 &lt;code&gt;feature.type.ts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49866936f0831aaf4d4f204e78c08decd834a494" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use conventional type names including &lt;code&gt;.service&lt;/code&gt;, &lt;code&gt;.component&lt;/code&gt;, &lt;code&gt;.pipe&lt;/code&gt;, &lt;code&gt;.module&lt;/code&gt;, and &lt;code&gt;.directive&lt;/code&gt;. Invent additional type names if you must but take care not to create too many.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;使用传统类型的名称，包括 &lt;code&gt;.service&lt;/code&gt; ， &lt;code&gt;.component&lt;/code&gt; ， &lt;code&gt;.pipe&lt;/code&gt; ， &lt;code&gt;.module&lt;/code&gt; 和 &lt;code&gt;.directive&lt;/code&gt; 。如果必须（但必须注意不要创建太多），请发明其他类型名称。</target>
        </trans-unit>
        <trans-unit id="e07d96f35486f1c913032d39f6a0282e34f2b203" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use dashes to separate words in the descriptive name.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;使用破折号分隔描述性名称中的单词。</target>
        </trans-unit>
        <trans-unit id="c7aeca36cad47faef79582924c00673db45ff311" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use dots to separate the descriptive name from the type.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;使用点将描述性名称与类型分开。</target>
        </trans-unit>
        <trans-unit id="0920db69d71e308d2a525382582255b9c6d2b7eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use file templates or snippets to help follow consistent styles and patterns. Here are templates and/or snippets for some of the web development editors and IDEs.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;使用文件模板或代码片段来帮助遵循一致的样式和模式。以下是一些Web开发编辑器和IDE的模板和/或代码片段。</target>
        </trans-unit>
        <trans-unit id="6a1442fe05cfed1932fa984611b4f2d9c111baa9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use services as singletons within the same injector. Use them for sharing data and functionality.</source>
          <target state="translated">&lt;strong&gt;请勿&lt;/strong&gt;在同一注射器内将服务作为单例使用。使用它们共享数据和功能。</target>
        </trans-unit>
        <trans-unit id="d1954bdb66547b33eb125161af1ae51c60026aaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; class decorator instead of the &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; parameter decorator when using types as tokens for the dependencies of a service.</source>
          <target state="translated">&lt;strong&gt;不要&lt;/strong&gt;使用 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 类装饰代替 &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; 参数使用类型作为令牌服务的依赖时装饰。</target>
        </trans-unit>
        <trans-unit id="d96c2d225ea94c0493269430e8e01b86b50377cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; class decorators instead of the &lt;code&gt;inputs&lt;/code&gt; and &lt;code&gt;outputs&lt;/code&gt; properties of the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata:</source>
          <target state="translated">&lt;strong&gt;做&lt;/strong&gt;使用 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 类装饰而不是 &lt;code&gt;inputs&lt;/code&gt; 和 &lt;code&gt;outputs&lt;/code&gt; 的特性 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 的元数据：</target>
        </trans-unit>
        <trans-unit id="ea6b202748ee468df084f3ffd9d21ef72482343b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do&lt;/strong&gt; use upper camel case for class names.</source>
          <target state="translated">&lt;strong&gt;请&lt;/strong&gt;为类名称使用大写字母大写。</target>
        </trans-unit>
        <trans-unit id="ea712f25fc8e27592da4c153217ffe7c46b0cd58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't modify your copy of Angular.&lt;/strong&gt; Private, customized versions of Angular tend to fall behind the current version and may not include important security fixes and enhancements. Instead, share your Angular improvements with the community and make a pull request.</source>
          <target state="translated">&lt;strong&gt;不要修改您的Angular副本。&lt;/strong&gt;专用的，定制的Angular版本往往落后于当前版本，并且可能不包括重要的安全修复程序和增强功能。而是与社区分享您的Angular改进并提出请求。</target>
        </trans-unit>
        <trans-unit id="1df1e3b37c9e9487b7a093241b0ebd0b4c61ce3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EXPERIMENTAL&lt;/strong&gt; Output file path for Build Event Protocol events</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;生成事件协议事件的&lt;strong&gt;实验&lt;/strong&gt;输出文件路径</target>
        </trans-unit>
        <trans-unit id="d7d5340fc1d0f2bcd8470b4e061322e8767162d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;EXPERIMENTAL&lt;/strong&gt; True to create a new app that uses the Ivy rendering engine.</source>
          <target state="translated">&lt;strong&gt;实验为&lt;/strong&gt; True，以创建使用Ivy渲染引擎的新应用。</target>
        </trans-unit>
        <trans-unit id="60e2fc730113a9b4a2361c46a5d80b8917ff611b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fastest :)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;最快的 ：）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f1cd8e78e0f2628c908640e71808899ed7c9c78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Figure 1.&lt;/strong&gt; Clicking the button toggles the date format</source>
          <target state="translated">&lt;strong&gt;图1.&lt;/strong&gt;单击按钮切换日期格式</target>
        </trans-unit>
        <trans-unit id="8836bb311621b9f641e4387c6a9c6ae619924076" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Figure 1.&lt;/strong&gt;&lt;em&gt;Direct access to forms model in a reactive form.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;图1.&lt;/strong&gt;&lt;em&gt;以反应形式直接访问表单模型。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="796507bcec3caa94dd42989ce74f71db967a2161" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Figure 2.&lt;/strong&gt; Output from the &lt;code&gt;exponentialStrength&lt;/code&gt; pipe</source>
          <target state="translated">&lt;strong&gt;图2. &lt;/strong&gt; &lt;code&gt;exponentialStrength&lt;/code&gt; 管道的输出</target>
        </trans-unit>
        <trans-unit id="d94a098e3546f9d591f7843c93d510067d71dfe1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Figure 2.&lt;/strong&gt;&lt;em&gt;Indirect access to forms model in a template-driven form.&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;图2.&lt;/strong&gt;&lt;em&gt;以模板驱动的形式间接访问表单模型。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3244e9f57f17cc75d36840e987faeb21f638dada" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Figure 3.&lt;/strong&gt; Changing the amount and boost factor for the &lt;code&gt;exponentialStrength&lt;/code&gt; pipe</source>
          <target state="translated">&lt;strong&gt;图3.&lt;/strong&gt;更改 &lt;code&gt;exponentialStrength&lt;/code&gt; 管的数量和增强因子</target>
        </trans-unit>
        <trans-unit id="84737e65c89a22050ef42c2ff2cfa30802513e7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Figure 4.&lt;/strong&gt; The &lt;code&gt;flyingHeroes&lt;/code&gt; pipe filtering the display to flying heroes</source>
          <target state="translated">&lt;strong&gt;图4.&lt;/strong&gt;该 &lt;code&gt;flyingHeroes&lt;/code&gt; 管过滤该显示飞行英雄</target>
        </trans-unit>
        <trans-unit id="deac895c6a99bc1ceac177a0fa33df8aaee45f14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Figure 5.&lt;/strong&gt; The &lt;code&gt;fetch&lt;/code&gt; and &lt;code&gt;fetch-json&lt;/code&gt; pipes displaying the heroes</source>
          <target state="translated">&lt;strong&gt;图5.&lt;/strong&gt;显示英雄的 &lt;code&gt;fetch&lt;/code&gt; 和 &lt;code&gt;fetch-json&lt;/code&gt; 管道</target>
        </trans-unit>
        <trans-unit id="a864e18b9ef9c87eb6e54692693e9e87d007a12f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For all other scenarios,&lt;/strong&gt; see the current instructions in &lt;a href=&quot;setup-local&quot;&gt;Setting up the Local Environment and Workspace&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;对于所有其他情况，&lt;/strong&gt;请参阅《&lt;a href=&quot;setup-local&quot;&gt;设置本地环境和工作区》中&lt;/a&gt;的当前说明。</target>
        </trans-unit>
        <trans-unit id="b51e1b4288724cd437a336f2abcf51a6f2513d0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generate a new &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;生成一个新的 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5bcae9fe29d4c9b343cd9a59bbc124b34fc7487f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generate form controls&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;生成表单控件&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89146d6e3d4351b223f9827f8cc35449b49d651a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Group the nested form in the template&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;在模板中对嵌套表单进行分组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="068e055d581fa26662ca24ee2708b7d339665834" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML&lt;/strong&gt; is used when interpreting a value as HTML, for example, when binding to &lt;code&gt;innerHtml&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;HTML&lt;/strong&gt;解释当一个值作为HTML，例如，结合于当使用 &lt;code&gt;innerHtml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec55ce407496fff6cba913b5e8d3de8262020472" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;How &lt;em&gt;loadComponent()&lt;/em&gt; chooses an ad&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;loadComponent（）&lt;/em&gt;如何选择广告&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2a155722272a889f00945465fc2d20e670aa499d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;INVALID&lt;/strong&gt;: This control has failed at least one validation check.</source>
          <target state="translated">&lt;strong&gt;无效&lt;/strong&gt;：此控件未通过至少一项验证检查。</target>
        </trans-unit>
        <trans-unit id="a43d47b6ee7516cf37b9d0f06355e10c5aa46f43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Import a validator function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;导入验证器功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00f8c2720f609f8f0845d9278612a553af0b7df3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Import the FormArray class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;导入FormArray类&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ec97e8c3ff0a0235e6902f1be773e9938350c6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Import the FormBuilder class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;导入FormBuilder类&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f84f922f1b11fef33c1749bfcf9a2a29798cfe29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; the In-memory Web API module has nothing to do with HTTP in Angular.</source>
          <target state="translated">&lt;strong&gt;重要提示：&lt;/strong&gt;内存中的Web API模块与Angular中的HTTP无关。</target>
        </trans-unit>
        <trans-unit id="dc98c24cde56582c759cc530a597498b395d72a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In general:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;一般来说：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f02ddca41e03136063c5d853a43814c190b1937" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In v10 the default currency code will be taken from the current locale.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;在v10中，默认货币代码将从当前语言环境中获取。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae4927abcb0b54412e8ca5b575ab2f2c843ea8b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In v11 the default currency code will be taken from the current locale identified by the &lt;code&gt;LOCAL_ID&lt;/code&gt; token. See the &lt;a href=&quot;../../guide/i18n#setting-up-the-locale-of-your-app&quot;&gt;i18n guide&lt;/a&gt; for more information.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;在v11中，默认货币代码将从 &lt;code&gt;LOCAL_ID&lt;/code&gt; 令牌标识的当前语言环境中获取。有关更多信息，请参见《&lt;a href=&quot;../../guide/i18n#setting-up-the-locale-of-your-app&quot;&gt;i18n指南&lt;/a&gt;》。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="491e2bdf674c7d930c5d7d81d6c1e695174575bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Inject the FormBuilder service&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注入FormBuilder服务&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17cc65cb1582a263a64c49339ffe5f50dc31748a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interpolation&lt;/strong&gt; with double curly braces to display a component property.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;用双花括号进行&lt;strong&gt;插值&lt;/strong&gt;以显示组件属性。</target>
        </trans-unit>
        <trans-unit id="68890d13fc54d083b646a4367430a9ad959bf417" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Keep current with the latest Angular library releases.&lt;/strong&gt; We regularly update the Angular libraries, and these updates may fix security defects discovered in previous versions. Check the Angular &lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;change log&lt;/a&gt; for security-related updates.</source>
          <target state="translated">&lt;strong&gt;紧跟最新的Angular库版本。&lt;/strong&gt;我们会定期更新Angular库，这些更新可能会修复以前版本中发现的安全缺陷。检查Angular &lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;更改日志中&lt;/a&gt;与安全相关的更新。</target>
        </trans-unit>
        <trans-unit id="564560214da2886c52516ade57692873955f9483" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Keep template statements simple&lt;/strong&gt; &amp;mdash; The &lt;code&gt;(blur)&lt;/code&gt; event is bound to two JavaScript statements. The first statement calls &lt;code&gt;addHero&lt;/code&gt;. The second statement, &lt;code&gt;newHero.value=''&lt;/code&gt;, clears the input box after a new hero is added to the list.</source>
          <target state="translated">&lt;strong&gt;保持模板语句简单&lt;/strong&gt; &amp;mdash; &lt;code&gt;(blur)&lt;/code&gt; 事件绑定到两个JavaScript语句。第一条语句调用 &lt;code&gt;addHero&lt;/code&gt; 。第二条语句 &lt;code&gt;newHero.value=''&lt;/code&gt; ，将新英雄添加到列表后，清除输入框。</target>
        </trans-unit>
        <trans-unit id="af85710506385e7bb680dd7711977f7a364f111e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Leave the default and the wildcard routes!&lt;/strong&gt; These are concerns at the top level of the application itself.</source>
          <target state="translated">&lt;strong&gt;保留默认和通配符路由！&lt;/strong&gt;这些是应用程序本身的顶级问题。</target>
        </trans-unit>
        <trans-unit id="e0c58a4d71e7c20be7a70adb2122afee35358aab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Library developers:&lt;/strong&gt; By default, the CLI command &lt;a href=&quot;cli/generate&quot;&gt;&lt;code&gt;ng generate library&lt;/code&gt;&lt;/a&gt; creates a &lt;code&gt;package.json&lt;/code&gt; for the new library. That &lt;code&gt;package.json&lt;/code&gt; is used when publishing the library to npm. For more information, see the CLI wiki page &lt;a href=&quot;https://github.com/angular/angular-cli/wiki/stories-create-library&quot;&gt;Library Support&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;库开发人员：&lt;/strong&gt;默认情况下，CLI命令&lt;a href=&quot;cli/generate&quot;&gt; &lt;code&gt;ng generate library&lt;/code&gt; &lt;/a&gt;为新库创建一个 &lt;code&gt;package.json&lt;/code&gt; 。将库发布到npm时将使用该 &lt;code&gt;package.json&lt;/code&gt; 。有关更多信息，请参见CLI Wiki页面&lt;a href=&quot;https://github.com/angular/angular-cli/wiki/stories-create-library&quot;&gt;库支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86cb86bd9af54ff1bf806625c029fd79461ee4db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Major releases&lt;/strong&gt; contain significant new features, some but minimal developer assistance is expected during the update. When updating to a new major release, you may need to run update scripts, refactor code, run additional tests, and learn new APIs.</source>
          <target state="translated">&lt;strong&gt;主要版本&lt;/strong&gt;包含重要的新功能，在更新过程中，预计会有一些但很少的开发人员帮助。更新到新的主要版本时，您可能需要运行更新脚本，重构代码，运行其他测试并学习新的API。</target>
        </trans-unit>
        <trans-unit id="8e551d86ea1dd11410ef94a9979b35ff51c33723" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Make a field required&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;填写必填项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8af40ba30977eb931b9405e6f7f841290c41fd55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Markup style:&lt;/strong&gt; How to include images, tables, alert boxes, and code snippets. Angular docs are written in Markdown, with custom extensions for this site. Correct markup ensures a consistent look-and-feel, and is essential for the doc to build and function correctly.</source>
          <target state="translated">&lt;strong&gt;标记样式：&lt;/strong&gt;如何包含图像，表格，警报框和代码段。Angular文档是用Markdown编写的，带有针对此站点的自定义扩展名。正确的标记可确保一致的外观，并且对于文档正确构建和运行至关重要。</target>
        </trans-unit>
        <trans-unit id="049a66297d0463705501f4976e142df77e148c1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Markup style&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;标记样式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="90b69a62ec932925abbbb8b8f39fa6f5cd1496f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Metadata Properties&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;元数据属性&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="3fabbc0c229a540fc47f545ceac94d3a9ec3b561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Minor releases&lt;/strong&gt; contain new smaller features. Minor releases are fully backward-compatible; no developer assistance is expected during update, but you can optionally modify your apps and libraries to begin using new APIs, features, and capabilities that were added in the release. We update peer dependencies in minor versions by expanding the supported versions, but we do not require projects to update these dependencies.</source>
          <target state="translated">&lt;strong&gt;次要版本&lt;/strong&gt;包含新的较小功能。次要版本完全向后兼容；在更新过程中，预计不会为开发人员提供任何帮助，但是您可以有选择地修改您的应用和库，以开始使用发行版中添加的新API，功能。我们通过扩展受支持的版本来更新次要版本中的对等依赖性，但是我们不需要项目来更新这些依赖性。</target>
        </trans-unit>
        <trans-unit id="72465ffeda7a3882d2d558cd2302a2ff0208ef07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;N.B.&lt;/strong&gt;: The &lt;a href=&quot;docs-style-guide#table-of-contents&quot;&gt;Table-of-contents&lt;/a&gt; generator only considers main (&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;) and secondary (&lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt;) headings.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;a href=&quot;docs-style-guide#table-of-contents&quot;&gt;目录&lt;/a&gt;生成器仅考虑主要（ &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; ）和次要（ &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; ）标题。</target>
        </trans-unit>
        <trans-unit id="c7c17e9e07c259e730be178446aa8f994896d165" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; In the logical tree, you'll see &lt;code&gt;@Provide&lt;/code&gt;, &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;, which are not real HTML attributes but are here to demonstrate what is going on under the hood.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在逻辑树中，您将看到 &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; &lt;code&gt;@Provide&lt;/code&gt; ，@ &lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;和 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; ，它们不是真正的HTML属性，但在这里用来说明实际情况。</target>
        </trans-unit>
        <trans-unit id="576bd38782c522977f1044640371e6f522967123" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Next:&lt;/strong&gt; The release that is under active development and testing. The next release is indicated by a release tag appended with the &lt;code&gt;-next&lt;/code&gt; identifier, such as &lt;code&gt;8.1.0-next.0&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;下一步：&lt;/strong&gt;正在积极开发和测试的发行版。下一个版本由带有 &lt;code&gt;-next&lt;/code&gt; 标识符（例如 &lt;code&gt;8.1.0-next.0&lt;/code&gt; )的release标签指示。</target>
        </trans-unit>
        <trans-unit id="fc26bb0bac2e87e6a33e03a84d8073a942b5acca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NgModules&lt;/strong&gt; configure the injector and the compiler and help organize related things together.</source>
          <target state="translated">&lt;strong&gt;NgModules&lt;/strong&gt;配置注入器和编译器，并帮助一起组织相关的事情。</target>
        </trans-unit>
        <trans-unit id="604f2dae86185035069b15b5576ddceeb2d17a2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Node.js&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Node.js&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="abbb940630dae1016ddb8972b14b8a607e45e0da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; After AngularJS is loaded and bootstrapped, listeners such as those wired up in your route configuration will continue to listen for route changes. To ensure listeners are shut down when AngularJS isn't being displayed, configure an &lt;code&gt;otherwise&lt;/code&gt; option with the &lt;a href=&quot;https://docs.angularjs.org/api/ngRoute/provider/%24routeProvider&quot;&gt;$routeProvider&lt;/a&gt; that renders an empty template. This assumes all other routes will be handled by Angular.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;加载并引导了AngularJS之后，侦听器（例如，路由配置中连接的侦听器）将继续侦听路由更改。为了确保在不显示AngularJS时关闭侦听器，请使用&lt;a href=&quot;https://docs.angularjs.org/api/ngRoute/provider/%24routeProvider&quot;&gt;$ routeProvider&lt;/a&gt;配置一个 &lt;code&gt;otherwise&lt;/code&gt; 选项，该选项呈现一个空模板。假设所有其他路线将由Angular处理。</target>
        </trans-unit>
        <trans-unit id="84565e184a7079ad301db28996a2be189b9b2c40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; As of Angular version 7, the major versions of Angular core and the CLI are aligned. This means that in order to use the CLI as you develop an Angular app, the version of &lt;code&gt;@angular/core&lt;/code&gt; and the CLI need to be the same.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;从Angular版本7开始，主要版本的Angular core和CLI已对齐。这意味着，在开发Angular应用程序时要使用CLI， &lt;code&gt;@angular/core&lt;/code&gt; 的版本和CLI必须相同。</target>
        </trans-unit>
        <trans-unit id="fb553c91b74e4311031c53b9d1ea080c9c1c369b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Because the returned control is of the type &lt;code&gt;&lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt;, you need to provide an explicit type to access the method syntax for the form array instance.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;由于返回的控件是 &lt;code&gt;&lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; 类型的，因此您需要提供一个显式类型来访问表单数组实例的方法语法。</target>
        </trans-unit>
        <trans-unit id="173467ffeee0a02f4abdbd1c4b8921f8862973c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Disabling animations application-wide is useful during end-to-end (E2E) testing.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在端到端（E2E）测试期间，在应用程序范围内禁用动画非常有用。</target>
        </trans-unit>
        <trans-unit id="b80bffc3666a8be5dc5959970b1701b5c9fef215" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Display the value for the form group instance in the component template using the &lt;code&gt;value&lt;/code&gt; property and &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;使用 &lt;code&gt;value&lt;/code&gt; 属性和 &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt;&lt;/code&gt; 在组件模板中显示表单组实例的值。</target>
        </trans-unit>
        <trans-unit id="849c96b35d21cf32e39f9e8ab9330c42b9df8336" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For a more detailed list of classes and directives provided by &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt;, see the &lt;a href=&quot;reactive-forms#reactive-forms-api&quot;&gt;Reactive forms API&lt;/a&gt; section.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;有关 &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 提供的类和指令的更详细列表，请参阅&lt;a href=&quot;reactive-forms#reactive-forms-api&quot;&gt;Reactive Forms API&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="9e34344de4fad6bff6dafd2139188dd68cab0985" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For complete information about each kind of form, see &lt;a href=&quot;reactive-forms&quot;&gt;Reactive Forms&lt;/a&gt; and &lt;a href=&quot;forms&quot;&gt;Template-driven Forms&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;有关每种类型的表单的完整信息，请参见&amp;ldquo; &lt;a href=&quot;reactive-forms&quot;&gt;响应式表单&amp;rdquo;&lt;/a&gt;和&amp;ldquo; &lt;a href=&quot;forms&quot;&gt;模板驱动的表单&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6ec506b865466b027c42f0e29f5fc2193f97cb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For our purposes, an element entering or leaving a view is equivalent to being inserted or removed from the DOM.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;就我们的目的而言，进入或离开视图的元素等同于从DOM中插入或删除。</target>
        </trans-unit>
        <trans-unit id="2c62e5b49ead69322ff581dcd91127525ad86d31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For this example, an element entering or leaving a view is equivalent to being inserted or removed from the DOM.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在此示例中，进入或离开视图的元素等同于从DOM中插入或删除。</target>
        </trans-unit>
        <trans-unit id="b04e34bb1adeef16a72b3f4a0de7ac3b86cc77b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you are not using HTTPS, the service worker will only be registered when accessing the app on &lt;code&gt;localhost&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果您不使用HTTPS，则仅当在 &lt;code&gt;localhost&lt;/code&gt; 上访问应用程序时才注册service worker 。</target>
        </trans-unit>
        <trans-unit id="323b8213066a5d108dce9af40269e4d4acd4ba86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you have a module which has both providers and declarations, you &lt;em&gt;can&lt;/em&gt; use this technique to separate them out and you may see this pattern in legacy apps. However, since Angular 6.0, the best practice for providing services is with the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; property.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果您有一个同时具有提供程序和声明的模块，则&lt;em&gt;可以&lt;/em&gt;使用此技术将它们分开，并且您可能会在旧版应用程序中看到此模式。然而，由于角6.0，用于提供服务的最佳实践与 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; 财产。</target>
        </trans-unit>
        <trans-unit id="f1981263a98cc7412eabf46ce2969f37ef494537" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you have a module which has both providers and declarations, you &lt;em&gt;can&lt;/em&gt; use this technique to separate them out and you may see this pattern in legacy apps. However, since Angular 6.0, the best practice for providing services is with the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt;&lt;code&gt;providedIn&lt;/code&gt; property.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果您有一个同时具有提供程序和声明的模块，则&lt;em&gt;可以&lt;/em&gt;使用此技术将它们分开，并且可能会在旧版应用程序中看到此模式。然而，由于角6.0，用于提供服务的最佳实践与 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; &lt;code&gt;providedIn&lt;/code&gt; 财产。</target>
        </trans-unit>
        <trans-unit id="93fe757b8f474edb8b919c6de032eb70c090dde4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In the component file, set the trigger that defines the animations as the value of the &lt;code&gt;animations:&lt;/code&gt; property in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在组件文件中，将定义动画的触发器设置为 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;（）装饰器中的 &lt;code&gt;animations:&lt;/code&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="07b45ca098345fb8730718bca812767b05c6b8e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In this example, you're using a single control. When using the &lt;code&gt;setValue()&lt;/code&gt; method with a &lt;a href=&quot;reactive-forms#grouping-form-controls&quot;&gt;form group&lt;/a&gt; or &lt;a href=&quot;reactive-forms#creating-dynamic-forms&quot;&gt;form array&lt;/a&gt; instance, the value needs to match the structure of the group or array.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在此示例中，您使用的是单个控件。将 &lt;code&gt;setValue()&lt;/code&gt; 方法与&lt;a href=&quot;reactive-forms#grouping-form-controls&quot;&gt;表单组&lt;/a&gt;或&lt;a href=&quot;reactive-forms#creating-dynamic-forms&quot;&gt;表单数组&lt;/a&gt;实例一起使用时，该值需要匹配该组或数组的结构。</target>
        </trans-unit>
        <trans-unit id="544775094b9de2efd4191fb7b06c9b609abd91fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In this example, you're using a single control. When using the &lt;code&gt;setValue()&lt;/code&gt; method with a form group or form array instance, the value needs to match the structure of the group or array.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在此示例中，您使用的是单个控件。将 &lt;code&gt;setValue()&lt;/code&gt; 方法与表单组或表单数组实例一起使用时，该值需要匹配该组或数组的结构。</target>
        </trans-unit>
        <trans-unit id="648089a4ca28a9c812bac324dc26cef959e97c37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Instead of a form control instance for each alias, you can compose another form group instance with additional fields. The process of defining a control for each item is the same.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;您可以使用其他字段组成另一个表单组实例，而不是每个别名的表单控件实例。为每个项目定义控件的过程是相同的。</target>
        </trans-unit>
        <trans-unit id="bdd767ef6ea48a4df8e51d1d7c169a747290e349" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Please see the &lt;a href=&quot;hierarchical-dependency-injection#resolution-rules&quot;&gt;resolution rules&lt;/a&gt; section to understand the relationship between the &lt;code&gt;ModuleInjector&lt;/code&gt; tree and the &lt;code&gt;ElementInjector&lt;/code&gt; tree.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;请参阅&lt;a href=&quot;hierarchical-dependency-injection#resolution-rules&quot;&gt;解析规则&lt;/a&gt;部分，以了解 &lt;code&gt;ModuleInjector&lt;/code&gt; 树和 &lt;code&gt;ElementInjector&lt;/code&gt; 树之间的关系。</target>
        </trans-unit>
        <trans-unit id="7630581ca37f1a339343eb6890544c170e7948b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Remember that ngModel directive is defined as a part of Angular FormsModule and you need to include FormsModule in the imports: [...] section of the Angular module metadata, in which you want to use it.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;请记住，ngModel指令已定义为Angular FormsModule的一部分，您需要在要使用它的Angular模块元数据的imports：[]部分中包括FormsModule。</target>
        </trans-unit>
        <trans-unit id="d393b3fbba36be410c476749955c63faafa043f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Right now, you'll also want to include the &lt;code&gt;--disable-gpu&lt;/code&gt; flag if you're running on Windows. See &lt;a href=&quot;https://crbug.com/737678&quot;&gt;crbug.com/737678&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;现在，如果您在Windows上运行，则还需要包含 &lt;code&gt;--disable-gpu&lt;/code&gt; 标志。参见&lt;a href=&quot;https://crbug.com/737678&quot;&gt;crbug.com/737678&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="65dd6a1a9c3f6fce10d971d553de5ef7de922d9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; See a &lt;a href=&quot;animations#animation-api-summary&quot;&gt;summary of available animation functions&lt;/a&gt; at the end of this guide.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;请参阅本指南结尾处的&lt;a href=&quot;animations#animation-api-summary&quot;&gt;可用动画功能摘要&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5572bda73663c35675a744e39de8d68631cdcfc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; See the &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgradeconfig&quot;&gt;LocationUpgradeConfig&lt;/a&gt;&lt;/code&gt; for more configuration options available to the &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgrademodule#config&quot;&gt;LocationUpgradeModule.config()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;有关 &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgrademodule#config&quot;&gt;LocationUpgradeModule.config()&lt;/a&gt;&lt;/code&gt; 方法可用的更多配置选项，请参见 &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgradeconfig&quot;&gt;LocationUpgradeConfig&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bfd3b929a9097e1579b3d87589f89c6e691b80a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; See the Material Design website's topic on &lt;a href=&quot;https://material.io/design/motion/speed.html#easing&quot;&gt;Natural easing curves&lt;/a&gt; for general information on easing curves.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;有关&lt;a href=&quot;https://material.io/design/motion/speed.html#easing&quot;&gt;缓动曲线&lt;/a&gt;的一般信息，请参见Material Design网站上有关自然缓动曲线的主题。</target>
        </trans-unit>
        <trans-unit id="258b80c7a9e61906876d0dbda43f1e64c5650b04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Some additional notes on using styles within &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;关于在 &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;&lt;/code&gt; 函数中使用样式的一些附加说明。</target>
        </trans-unit>
        <trans-unit id="5ac4129ff24615dbb03eabbed26139b3a94934ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The 'heroes' string inside the factory refers to the AngularJS &lt;code&gt;HeroesService&lt;/code&gt;. It is common in AngularJS apps to choose a service name for the token, for example &quot;heroes&quot;, and append the &quot;Service&quot; suffix to create the class name.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;工厂内部的&amp;ldquo; heroes&amp;rdquo;字符串是指AngularJS &lt;code&gt;HeroesService&lt;/code&gt; 。在AngularJS应用程序中通常会选择令牌的服务名称，例如&amp;ldquo; heroes&amp;rdquo;，并附加&amp;ldquo; Service&amp;rdquo;后缀以创建类名称。</target>
        </trans-unit>
        <trans-unit id="03b12efce734e6cab7a1ae05993b8844d5d79782" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;a href=&quot;../api/animations/group&quot;&gt;&lt;code&gt;group()&lt;/code&gt;&lt;/a&gt; function is used to group animation &lt;em&gt;steps&lt;/em&gt;, rather than animated elements.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;所述的&lt;a href=&quot;../api/animations/group&quot;&gt; &lt;code&gt;group()&lt;/code&gt; &lt;/a&gt;函数是用来组动画&lt;em&gt;的步骤&lt;/em&gt;，而不是动画元素。</target>
        </trans-unit>
        <trans-unit id="22b535bfb86b4997c243ad124e9a68fb6a7f2818" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method is a pattern used to register application-wide providers. Read more about application-wide providers in the &lt;a href=&quot;singleton-services#forRoot-router&quot;&gt;Singleton services&lt;/a&gt; guide.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;该 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; 方法是用于注册应用程序范围内提供的图案。在&lt;a href=&quot;singleton-services#forRoot-router&quot;&gt;Singleton服务&lt;/a&gt;指南中阅读有关应用程序范围的提供程序的更多信息。</target>
        </trans-unit>
        <trans-unit id="ce5009f76e5fedd39d33fd60393d55cde42d6371" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;RouterModule.forRoot&lt;/code&gt; method is a pattern used to register application-wide providers. Read more about application-wide providers in the &lt;a href=&quot;singleton-services#forRoot-router&quot;&gt;Singleton services&lt;/a&gt; guide.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;该 &lt;code&gt;RouterModule.forRoot&lt;/code&gt; 方法是用于注册应用程序范围内提供的图案。在&lt;a href=&quot;singleton-services#forRoot-router&quot;&gt;Singleton服务&lt;/a&gt;指南中阅读有关应用程序范围提供程序的更多信息。</target>
        </trans-unit>
        <trans-unit id="5cab946a01d7e7f66d555faf928fa542eddfcb31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;data&lt;/code&gt; property names that you use can be arbitrary. For example, the name &lt;em&gt;animation&lt;/em&gt; used in the example above is an arbitrary choice.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;您使用的 &lt;code&gt;data&lt;/code&gt; 属性名称可以是任意的。例如，上面示例中使用的名称&lt;em&gt;动画&lt;/em&gt;是任意选择。</target>
        </trans-unit>
        <trans-unit id="47d12f956cd259b3cf0f6b96b582eb6625c79bfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;opacity&lt;/code&gt;, &lt;code&gt;backgroundColor&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;reusable-animations&quot;&gt;time&lt;/a&gt;&lt;/code&gt; inputs are replaced during runtime.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;该 &lt;code&gt;height&lt;/code&gt; ， &lt;code&gt;opacity&lt;/code&gt; ， &lt;code&gt;backgroundColor&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;reusable-animations&quot;&gt;time&lt;/a&gt;&lt;/code&gt; 的投入是运行时更换。</target>
        </trans-unit>
        <trans-unit id="6b7dda64ca80a699175f367518c192a015d3dcd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;opacity&lt;/code&gt;, &lt;code&gt;backgroundColor&lt;/code&gt;, and &lt;code&gt;time&lt;/code&gt; inputs are replaced during runtime.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;该 &lt;code&gt;height&lt;/code&gt; ， &lt;code&gt;opacity&lt;/code&gt; ， &lt;code&gt;backgroundColor&lt;/code&gt; 和 &lt;code&gt;time&lt;/code&gt; 的投入是运行时更换。</target>
        </trans-unit>
        <trans-unit id="7b0d3d594628c36d5459af055db9991ed02a9334" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The button in the snippet above also has a &lt;code&gt;disabled&lt;/code&gt; binding attached to it to disable the button when &lt;code&gt;profileForm&lt;/code&gt; is invalid. You aren't performing any validation yet, so the button is always enabled. Basic form validation is covered in the &lt;a href=&quot;reactive-forms#basic-form-validation&quot;&gt;Validating form input&lt;/a&gt; section.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;上面代码段中的按钮还附加有 &lt;code&gt;disabled&lt;/code&gt; 绑定，以在 &lt;code&gt;profileForm&lt;/code&gt; 无效时禁用该按钮。您尚未执行任何验证，因此该按钮始终处于启用状态。基本表单验证在&amp;ldquo;&lt;a href=&quot;reactive-forms#basic-form-validation&quot;&gt;验证表单&amp;rdquo;输入&lt;/a&gt;部分中介绍。</target>
        </trans-unit>
        <trans-unit id="8de94c6706c2235098f7e6dec03fcc9ce5f419a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The button in the snippet above also has a &lt;code&gt;disabled&lt;/code&gt; binding attached to it to disable the button when &lt;code&gt;profileForm&lt;/code&gt; is invalid. You aren't performing any validation yet, so the button is always enabled. Simple form validation is covered in the &lt;a href=&quot;reactive-forms#simple-form-validation&quot;&gt;Simple form validation&lt;/a&gt; section.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;上面代码段中的按钮还附加有 &lt;code&gt;disabled&lt;/code&gt; 绑定，以在 &lt;code&gt;profileForm&lt;/code&gt; 无效时禁用该按钮。您尚未执行任何验证，因此该按钮始终处于启用状态。&amp;ldquo;简单表单验证&amp;rdquo;部分介绍了&lt;a href=&quot;reactive-forms#simple-form-validation&quot;&gt;简单表单验证&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0de5049ad50ebc54694924b374d7991952a2f7cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The example app uses &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; so the app does not throw an error, but the principles are the same.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;示例应用程序使用 &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; 因此该应用程序不会引发错误，但原理相同。</target>
        </trans-unit>
        <trans-unit id="30a44395a19cec398a3a03e8a86843421b55639b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The following example uses &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; methods, which is discussed in the &lt;a href=&quot;complex-animation-sequences#complex-sequence&quot;&gt;complex sequences&lt;/a&gt; page.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;以下示例使用 &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; 方法，这在&lt;a href=&quot;complex-animation-sequences#complex-sequence&quot;&gt;复杂序列&lt;/a&gt;页面中进行了讨论。</target>
        </trans-unit>
        <trans-unit id="3cb725a34cbbdcad00d542f8a4dcd1262e42f009" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The guard can also tell the router to navigate elsewhere, effectively canceling the current navigation. When doing so inside a guard, the guard should return &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;警卫人员还可以告诉路由器在其他地方导航，从而有效地取消当前导航。在警卫内部这样做时，警卫应返回 &lt;code&gt;false&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="b663a8751d00b5e30925212fb1d4057d6634eade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The hierarchical structure of views is a key factor in the way Angular detects and responds to changes in the DOM and app data.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;视图的层次结构是Angular检测和响应DOM和应用程序数据中的更改的关键因素。</target>
        </trans-unit>
        <trans-unit id="46abe182e7e350bab98adeb67b236ad65d2c0e46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The observable provided to the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; must also complete. If the observable does not complete, the navigation does not continue.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;提供给 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 的可观察对象也必须完整。如果可观察对象未完成，则导航不会继续。</target>
        </trans-unit>
        <trans-unit id="1b8e7446cf968ffa0c95e4aded13d71f44252abb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The observable provided to the Router &lt;em&gt;must&lt;/em&gt; also complete. If the observable does not complete, the navigation will not continue.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;提供给路由器的可观察对象也&lt;em&gt;必须&lt;/em&gt;完整。如果可观察对象未完成，则导航将不会继续。</target>
        </trans-unit>
        <trans-unit id="a786ef68a3e2fe7f725ac6134aca12369aa45c68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The transition states must match the &lt;code&gt;data&lt;/code&gt; property value defined in the route configuration.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;过渡状态必须与路由配置中定义的 &lt;code&gt;data&lt;/code&gt; 属性值匹配。</target>
        </trans-unit>
        <trans-unit id="23b01bc5dc25a207a691ea975f34d81a2c815bbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; There are two example apps where you can see this scenario; the more advanced &lt;span name=&quot;ngmodules&quot;&gt;NgModules live example&lt;/span&gt;, which contains &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; in the routing modules and the &lt;code&gt;GreetingModule&lt;/code&gt;, and the simpler &lt;span name=&quot;lazy-loading-ngmodules&quot;&gt;Lazy Loading live example&lt;/span&gt;. For an introductory explanation see the &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy Loading Feature Modules&lt;/a&gt; guide.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;有两个示例应用程序可让您看到这种情况；更高级的&lt;span name=&quot;ngmodules&quot;&gt;NgModules实时示例&lt;/span&gt;，其中包含路由模块和 &lt;code&gt;GreetingModule&lt;/code&gt; 中的 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; ，以及更简单的&amp;ldquo; &lt;span name=&quot;lazy-loading-ngmodules&quot;&gt;延迟加载&amp;rdquo;实时示例&lt;/span&gt;。有关介绍性说明，请参见&amp;ldquo; &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;延迟加载功能模块&amp;rdquo;&lt;/a&gt;指南。&lt;span name=&quot;lazy-loading-ngmodules&quot;&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="2b56ec6016ea69adbe569916a412b24223c1a5db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; There are two example apps where you can see this scenario; the more advanced &lt;span name=&quot;ngmodules&quot;&gt;NgModules live example&lt;/span&gt;, which contains &lt;code&gt;forRoot()&lt;/code&gt; and &lt;code&gt;forChild()&lt;/code&gt; in the routing modules and the &lt;code&gt;GreetingModule&lt;/code&gt;, and the simpler &lt;span name=&quot;lazy-loading-ngmodules&quot;&gt;Lazy Loading live example&lt;/span&gt;. For an introductory explanation see the &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy Loading Feature Modules&lt;/a&gt; guide.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;有两个示例应用程序可让您看到这种情况；更高级的&lt;span name=&quot;ngmodules&quot;&gt;NgModules实时示例&lt;/span&gt;，其中包含路由模块和 &lt;code&gt;GreetingModule&lt;/code&gt; 中的 &lt;code&gt;forRoot()&lt;/code&gt; 和 &lt;code&gt;forChild()&lt;/code&gt; ，以及更简单的&amp;ldquo;&lt;span name=&quot;lazy-loading-ngmodules&quot;&gt;延迟加载&amp;rdquo;实时示例&lt;/span&gt;。有关介绍性说明，请参见&amp;ldquo;&lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;延迟加载功能模块&amp;rdquo;&lt;/a&gt;指南。&lt;span name=&quot;lazy-loading-ngmodules&quot;&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0fda353d0348bfea57e1e202af48841b1170919e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; These wrappers help hide the complexity of the &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; function. There are more wrappers for different backend technologies at the &lt;a href=&quot;https://github.com/angular/universal&quot;&gt;Universal repository&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;这些包装器有助于隐藏 &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; 函数的复杂性。&lt;a href=&quot;https://github.com/angular/universal&quot;&gt;通用存储库中&lt;/a&gt;有更多用于不同后端技术的包装器。</target>
        </trans-unit>
        <trans-unit id="8d3b75f0b175c9c97572c03ae1d5772c234ec639" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; These wrappers help hide the complexity of the &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; function. There are more wrappers for different backend technologies at the &lt;a href=&quot;https://github.com/angular/universal&quot;&gt;Universal repository&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;这些包装器有助于隐藏 &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; 函数的复杂性。&lt;a href=&quot;https://github.com/angular/universal&quot;&gt;通用存储库中&lt;/a&gt;有更多用于不同后端技术的包装器。</target>
        </trans-unit>
        <trans-unit id="f53f2bd5bd0eadea8ec6717cdb6b0c8bc759ea73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This sample server doesn't handle data requests.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;此示例服务器不处理数据请求。</target>
        </trans-unit>
        <trans-unit id="08f8987127087d9842a4e4e5bdd3976ba48ec115" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Use the &lt;code&gt;RouterModule.forRoot&lt;/code&gt; method in the root module, &lt;code&gt;AppModule&lt;/code&gt;, to register top-level application routes and providers. For feature modules, call the &lt;code&gt;RouterModule.forChild&lt;/code&gt; method to register additional routes.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在根模块 &lt;code&gt;AppModule&lt;/code&gt; 中使用 &lt;code&gt;RouterModule.forRoot&lt;/code&gt; 方法注册顶级应用程序路由和提供程序。对于功能模块，请调用 &lt;code&gt;RouterModule.forChild&lt;/code&gt; 方法以注册其他路由。</target>
        </trans-unit>
        <trans-unit id="e9d01ccecc14509f8ee59afc2465d9bda2262e3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Usually, you declare the components and their templates in separate files. For the purposes of understanding how the injection system works, it is useful to look at them from the point of view of a combined logical tree. The term logical distinguishes it from the render tree (your application DOM tree). To mark the locations of where the component templates are located, this guide uses the &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; pseudo element, which doesn't actually exist in the render tree and is present for mental model purposes only.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;通常，您在单独的文件中声明组件及其模板。为了理解注入系统如何工作，从组合逻辑树的角度来看它们是很有用的。逻辑一词将其与渲染树（您的应用程序DOM树）区分开。为了标记组件模板的位置，本指南使用 &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 伪元素，该元素实际上不存在于渲染树中，仅用于心理模型目的。</target>
        </trans-unit>
        <trans-unit id="70df557fb1fbaae3691456f5ebacd0a025f111c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; We listen to the 'change' event because 'input' events aren't fired for selects in Firefox and IE: &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1024350&quot;&gt;https://bugzilla.mozilla.org/show_bug.cgi?id=1024350&lt;/a&gt;&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/&quot;&gt;https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;我们侦听&amp;ldquo;更改&amp;rdquo;事件，因为在Firefox和IE中没有为选择触发&amp;ldquo;输入&amp;rdquo;事件：&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1024350&quot;&gt;https&lt;/a&gt; : //bugzilla.mozilla.org/show_bug.cgi &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/&quot;&gt;?&lt;/a&gt; id = 1024350 https://developer.microsoft .com / en-us / microsoft-edge / platform / issues / 4660045 /</target>
        </trans-unit>
        <trans-unit id="64f0154c22ebb29b72b8d1f8e6731d45b0bc1411" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When you use the CLI to create your app, the root application module &lt;code&gt;app.module.ts&lt;/code&gt; is placed in the &lt;code&gt;src/app&lt;/code&gt; folder.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;使用CLI创建应用程序时，根应用程序模块 &lt;code&gt;app.module.ts&lt;/code&gt; 将放置在 &lt;code&gt;src/app&lt;/code&gt; 文件夹中。</target>
        </trans-unit>
        <trans-unit id="de3ce3f39fa05daf713e1064fe0d6b9d129a4efc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Within each &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; function call, an element can only be in one state at any given time. However, it's possible for multiple triggers to be active at once.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在每个 &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; 函数调用中，元素在任何给定时间只能处于一种状态。但是，有可能一次激活多个触发器。</target>
        </trans-unit>
        <trans-unit id="30cc6ed75f891598162f289c4d2116513f3b3f5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You can define the control with just the initial value, but if your controls need sync or async validation, add sync and async validators as the second and third items in the array.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;您可以仅使用初始值定义控件，但是如果控件需要同步或异步验证，则将同步和异步验证器添加为数组中的第二项和第三项。</target>
        </trans-unit>
        <trans-unit id="93de3f0193cc4096f2bc013adc716b8f8c4795c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You can leave all the &lt;code&gt;FlowerService&lt;/code&gt; related code in place as it will allow a comparison with the &lt;code&gt;AnimalService&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;您可以将所有与 &lt;code&gt;FlowerService&lt;/code&gt; 相关的代码保留在原处，因为它允许与 &lt;code&gt;AnimalService&lt;/code&gt; 进行比较。</target>
        </trans-unit>
        <trans-unit id="f5788bdbe71c7954ba5852cebff9a44a86b21bcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;https://angular.io/generated/zips/universal/universal.zip&quot;&gt;Download the finished sample code&lt;/a&gt;, which runs in a &lt;a href=&quot;https://expressjs.com/&quot;&gt;Node.js&amp;reg; Express&lt;/a&gt; server.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;&lt;a href=&quot;https://angular.io/generated/zips/universal/universal.zip&quot;&gt;下载完成的示例代码&lt;/a&gt;，该示例代码在&lt;a href=&quot;https://expressjs.com/&quot;&gt;Node.js&amp;reg;Express&lt;/a&gt;服务器中运行。</target>
        </trans-unit>
        <trans-unit id="14d914790250c2b88bffd67e3cfbbb564bbd7ccd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;TestBed.get()&lt;/code&gt; was deprecated as of Angular version 9. To help minimize breaking changes, Angular introduces a new function called &lt;code&gt;TestBed.inject()&lt;/code&gt;, which you should use instead. For information on the removal of &lt;code&gt;TestBed.get()&lt;/code&gt;, see its entry in the &lt;a href=&quot;deprecations#index&quot;&gt;Deprecations index&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;从Angular版本9开始不推荐使用 &lt;code&gt;TestBed.get()&lt;/code&gt; 。为了帮助最大程度地减少重大更改，Angular引入了一个称为 &lt;code&gt;TestBed.inject()&lt;/code&gt; 的新函数，您应该改用它。有关删除 &lt;code&gt;TestBed.get()&lt;/code&gt; 的信息，请参见&lt;a href=&quot;deprecations#index&quot;&gt;Deprecations索引中的&lt;/a&gt;条目。</target>
        </trans-unit>
        <trans-unit id="b58e0364158266d8c7c243829e51629d5c43a060" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;Any&lt;/em&gt; web server technology can serve a Universal app as long as it can call Universal's &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; function. The principles and decision points discussed here apply to any web server technology.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;&lt;em&gt;任何&lt;/em&gt;Web服务器技术都可以为Universal应用程序提供服务，只要它可以调用Universal的 &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; 函数即可。此处讨论的原理和决策点适用于任何Web服务器技术。</target>
        </trans-unit>
        <trans-unit id="5f06fc5732efa20e58ad7d9a972d9aa2088a985d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;Any&lt;/em&gt; web server technology can serve a Universal app as long as it can call Universal's &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; function. The principles and decision points discussed here apply to any web server technology.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;&lt;em&gt;任何&lt;/em&gt; Web服务器技术都可以为Universal应用程序提供服务，只要它可以调用Universal的 &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; 函数即可。此处讨论的原理和决策点适用于任何Web服务器技术。</target>
        </trans-unit>
        <trans-unit id="2c0b0d88a724e3ac9f07e02d7cdf853120fecc49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;Download the finished sample code, which runs in a &lt;a href=&quot;https://expressjs.com/&quot;&gt;Node.js&amp;reg; Express&lt;/a&gt; server.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;下载完成的示例代码，该示例代码在&lt;a href=&quot;https://expressjs.com/&quot;&gt;Node.js&amp;reg;Express&lt;/a&gt;服务器中运行。</target>
        </trans-unit>
        <trans-unit id="7b50cff5f4086fcebeb5e570446e27289b40ae27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; references&lt;/strong&gt; go in the &lt;code&gt;imports&lt;/code&gt; array.</source>
          <target state="translated">&lt;strong&gt;只有 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 引用&lt;/strong&gt;进入 &lt;code&gt;imports&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="cee89df418d808246e9b86076caf2b0df6fd2c91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only one title (&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;) per document!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;每个文档只有一个标题（ &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; ）！&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5f0b3abaa461296cdd8fc0abbaa308569071229" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PENDING&lt;/strong&gt;: This control is in the midst of conducting a validation check.</source>
          <target state="translated">&lt;strong&gt;待&lt;/strong&gt;审核：此控件正在执行验证检查。</target>
        </trans-unit>
        <trans-unit id="d9fc890426cc94f6989561c4686510d629b8c55d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pass values, not elements&lt;/strong&gt; &amp;mdash; Instead of passing the &lt;code&gt;newHero&lt;/code&gt; into the component's &lt;code&gt;addHero&lt;/code&gt; method, get the input box value and pass &lt;em&gt;that&lt;/em&gt; to &lt;code&gt;addHero&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;传值，而不是要素&lt;/strong&gt; -而不是传递的 &lt;code&gt;newHero&lt;/code&gt; 到组件的 &lt;code&gt;addHero&lt;/code&gt; 方法，获得输入框的值，并通过&lt;em&gt;该&lt;/em&gt;给 &lt;code&gt;addHero&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="708b277a2f68a14cef92957000b3968f4e41c1c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Patch releases&lt;/strong&gt; are low risk, bug fix releases. No developer assistance is expected during update.</source>
          <target state="translated">&lt;strong&gt;修补程序版本&lt;/strong&gt;是低风险的错误修复版本。在更新过程中，预计不会提供任何开发人员帮助。</target>
        </trans-unit>
        <trans-unit id="0cd0b4a7c54363dce840ab7388d1519bac26c747" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pitchfork hoodie semiotics&lt;/strong&gt;, roof party pop-up &lt;em&gt;paleo&lt;/em&gt; messenger bag cred Carles tousled Truffaut yr. Semiotics viral freegan VHS, Shoreditch disrupt McSweeney's. Intelligentsia kale chips Vice four dollar toast</source>
          <target state="translated">&lt;strong&gt;干草叉连帽衫符号学&lt;/strong&gt;，屋顶聚会弹出&lt;em&gt;古&lt;/em&gt;邮差包让Carles乱扔了Truffaut yr。符号学病毒游离素VHS，肖尔迪奇（Shoreditch）破坏了麦克斯威尼（McSweeney）。知识分子羽衣甘蓝芯片副四美元吐司</target>
        </trans-unit>
        <trans-unit id="4c432f70eff95dd8fce9c3f8f8ee240fdb5b538a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pitchfork hoodie semiotics&lt;/strong&gt;, roof party pop-up &lt;em&gt;paleo&lt;/em&gt; messenger bag cred Carles tousled Truffaut yr. Semiotics viral freegan VHS, Shoreditch disrupt McSweeney's. Intelligentsia kale chips Vice four dollar toast, Schlitz crucifix</source>
          <target state="translated">&lt;strong&gt;干草叉连帽衫符号学&lt;/strong&gt;，屋顶聚会弹出&lt;em&gt;古&lt;/em&gt;邮差包让Carles乱扔了Truffaut年。符号学病毒游离素VHS，肖尔迪奇（Shoreditch）破坏了麦克斯威尼（McSweeney）。知识分子羽衣甘蓝芯片副四美元吐司，施利茨耶稣受难像</target>
        </trans-unit>
        <trans-unit id="cefd81b08fbd8e4d1d9b8b740c6283f911489e3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pitchfork hoodie semiotics&lt;/strong&gt;, roof party pop-up &lt;em&gt;paleo&lt;/em&gt; messenger messenger bag cred Carles tousled Truffaut yr. Semiotics viral freegan VHS, Shoreditch disrupt McSweeney's. Intelligentsia kale chips Vice four dollar toast</source>
          <target state="translated">&lt;strong&gt;干草叉连帽衫符号学&lt;/strong&gt;，屋顶聚会弹出&lt;em&gt;古&lt;/em&gt;邮差信使包信奉Carles乱扔Truffaut yr。符号学病毒游离素VHS，肖尔迪奇（Shoreditch）破坏了麦克斯威尼（McSweeney）。知识分子羽衣甘蓝芯片副四美元吐司</target>
        </trans-unit>
        <trans-unit id="95a1b4770819e0a29d5da0018adc297164c08a4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pitchfork hoodie semiotics&lt;/strong&gt;, roof party pop-up &lt;em&gt;paleo&lt;/em&gt; messenger messenger bag cred Carles tousled Truffaut yr. Semiotics viral freegan VHS, Shoreditch disrupt McSweeney's. Intelligentsia kale chips Vice four dollar toast, Schlitz crucifix</source>
          <target state="translated">&lt;strong&gt;干草叉连帽衫符号学&lt;/strong&gt;，屋顶聚会弹出&lt;em&gt;古&lt;/em&gt;邮差使者信使卡尔斯（Carles）弄乱了特鲁弗（Truffaut）年。符号学病毒游离素VHS，肖尔迪奇（Shoreditch）破坏了麦克斯威尼（McSweeney）。知识分子羽衣甘蓝芯片副四美元吐司，施利茨耶稣受难像</target>
        </trans-unit>
        <trans-unit id="473d3902f591877838d6a7ab6b5227c1d6bcd07a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prerequisite:&lt;/strong&gt; Make sure you have &lt;a href=&quot;setup-local#prerequisites&quot;&gt;Node.js&amp;reg; and npm installed&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;先决条件：&lt;/strong&gt;确保已&lt;a href=&quot;setup-local#prerequisites&quot;&gt;安装Node.js&amp;reg;和npm&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="32ce9dea35eb6602b61f5e8553548d4ce67a0350" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prerequisites&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Prerequisites&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="709be87fd84c09acfc000c260a431956877eba9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reactive forms&lt;/strong&gt; are more robust: they're more scalable, reusable, and testable. If forms are a key part of your application, or you're already using reactive patterns for building your application, use reactive forms.</source>
          <target state="translated">&lt;strong&gt;反应形式&lt;/strong&gt;更健壮：它们更具可伸缩性，可重用性和可测试性。如果表单是应用程序的关键部分，或者您已经在使用反应式构建应用程序，请使用反应式。</target>
        </trans-unit>
        <trans-unit id="e685c5e24ec500b6b876387c87e2a2a6bfdb201e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reactive forms&lt;/strong&gt; define custom validators as &lt;strong&gt;functions&lt;/strong&gt; that receive a control to validate.</source>
          <target state="translated">&lt;strong&gt;反应形式&lt;/strong&gt;将自定义验证器定义为接收要验证的控件的&lt;strong&gt;函数&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a045f7f19ab14d56ef2b515f6483230485fdd57a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reactive forms&lt;/strong&gt; keep the data model pure by providing it as an immutable data structure. Each time a change is triggered on the data model, the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance returns a new data model rather than updating the existing data model. This gives you the ability to track unique changes to the data model through the control's observable. Change detection is more efficient because it only needs to update on unique changes. Because data updates follow reactive patterns, you can integrate with observable operators to transform data.</source>
          <target state="translated">&lt;strong&gt;反应形式&lt;/strong&gt;通过将其提供为不可变的数据结构来保持数据模型的纯净。每次在数据模型上触发更改时， &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例都会返回一个新的数据模型，而不是更新现有的数据模型。这使您能够通过控件的可观察性来跟踪数据模型的唯一更改。更改检测效率更高，因为它只需要更新唯一的更改即可。由于数据更新遵循响应模式，因此您可以与可观察到的运算符集成以转换数据。</target>
        </trans-unit>
        <trans-unit id="b740b48c800974f154bba8d1b973edfecff1e2dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reactive forms&lt;/strong&gt; keep the data model pure by providing it as an immutable data structure. Each time a change is triggered on the data model, the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance returns a new data model rather than updating the existing data model. This gives you the ability to track unique changes to the data model through the control's observable. This provides one way for change detection to be more efficient because it only needs to update on unique changes. It also follows reactive patterns that integrate with observable operators to transform data.</source>
          <target state="translated">&lt;strong&gt;反应形式&lt;/strong&gt;通过将其提供为不可变的数据结构来保持数据模型的纯净。每次在数据模型上触发更改时， &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例都会返回一个新的数据模型，而不是更新现有的数据模型。这使您能够通过控件的可观察性来跟踪数据模型的唯一更改。这提供了一种更有效地检测更改的方法，因为它只需要更新唯一的更改即可。它还遵循与可观察的运算符集成以转换数据的反应模式。</target>
        </trans-unit>
        <trans-unit id="fbb97dd1d93d98c721ec3da4ae659eab5c63a582" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reactive forms&lt;/strong&gt; provide access to low-level APIs and synchronous access to the form model, making creating large-scale forms easier.</source>
          <target state="translated">&lt;strong&gt;响应式表单&lt;/strong&gt;提供对低级API的访问以及对表单模型的同步访问，从而使创建大型表单更加容易。</target>
        </trans-unit>
        <trans-unit id="075f1a0f2409ffebd1ffdbc27d628cb021f456ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reactive forms&lt;/strong&gt; provide direct, explicit access to the underlying forms object model. Compared to template-driven forms, they are more robust: they're more scalable, reusable, and testable. If forms are a key part of your application, or you're already using reactive patterns for building your application, use reactive forms.</source>
          <target state="translated">&lt;strong&gt;反应性表单&lt;/strong&gt;提供对基础表单对象模型的直接，显式访问。与模板驱动的表单相比，它们更强大：它们更具可伸缩性，可重用性和可测试性。如果表单是应用程序的关键部分，或者您已经在使用反应式构建应用程序，请使用反应式。</target>
        </trans-unit>
        <trans-unit id="9d63209425ff6ede2412db4302637e3c12254206" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Register the control in the template&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;在模板中注册控件&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cfb401a59a39c2e660837d81259c434d0a885126" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Register the reactive forms module&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注册反应形式模块&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11549f9940889bdcc6705f4f1c2b9f3cd0acf0c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Release candidate:&lt;/strong&gt; A release that is feature complete and in final testing. A release candidate is indicated by a release tag appended with the &lt;code&gt;-rc&lt;/code&gt; identifier, such as version &lt;code&gt;8.1.0-rc.0&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;候选&lt;/strong&gt;发行版：功能完整且正在最终测试中的发行版。候选发布由带有 &lt;code&gt;-rc&lt;/code&gt; 标识符的发布标签指示，例如版本 &lt;code&gt;8.1.0-rc.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="838b09b5d8525736cd6aca78332e34f8ca1bb45a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Release candidate:&lt;/strong&gt; A release that is feature complete and in final testing. A release candidate is indicated by a release tag appended with the &lt;code&gt;rc&lt;/code&gt; identifier, such as version &lt;code&gt;8.1.0-rc&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;候选&lt;/strong&gt;发行版：功能完整且正在最终测试中的发行版。候选发布由带有 &lt;code&gt;rc&lt;/code&gt; 标识符的release标签指示，例如版本 &lt;code&gt;8.1.0-rc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d80cede24d8f6a6f5970fefe563196691a4ff05d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remember:&lt;/strong&gt; you only get the &lt;em&gt;initial&lt;/em&gt; value of the parameter map with this technique. Stick with the observable &lt;code&gt;paramMap&lt;/code&gt; approach if there's even a chance that the router could re-use the component. This sample stays with the observable &lt;code&gt;paramMap&lt;/code&gt; strategy just in case.</source>
          <target state="translated">&lt;strong&gt;请记住：&lt;/strong&gt;使用这种技术只能获得参数映射的&lt;em&gt;初始&lt;/em&gt;值。如果路由器甚至有可能重用该组件，请坚持使用可观察的 &lt;code&gt;paramMap&lt;/code&gt; 方法。为了以防万一，此示例保留了可观察的 &lt;code&gt;paramMap&lt;/code&gt; 策略。</target>
        </trans-unit>
        <trans-unit id="4f446c02a52837521e5a6b51894f8db8590518d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reminder:&lt;/strong&gt; The &quot;QuickStart seed&quot; example was created prior to the Angular CLI, so there are some differences between what is described here and an Angular CLI application.</source>
          <target state="translated">&lt;strong&gt;提醒：&lt;/strong&gt; &amp;ldquo; QuickStart种子&amp;rdquo;示例是在Angular CLI之前创建的，因此此处描述的内容与Angular CLI应用程序之间存在一些差异。</target>
        </trans-unit>
        <trans-unit id="14427d3b847d480d9d47f56458454e25d491878e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Resource URL&lt;/strong&gt; is a URL that will be loaded and executed as code, for example, in &lt;code&gt;&amp;lt;script src&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;资源URL&lt;/strong&gt;是将作为代码加载并执行的URL，例如，在 &lt;code&gt;&amp;lt;script src&amp;gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="03049e5993fa21ca8b206a4b8780ca4038880a4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Running&lt;/strong&gt; For example, webpack compiles. This ends when webpack finishes and your builder emits a &lt;code&gt;BuilderOutput&lt;/code&gt; object.</source>
          <target state="translated">&lt;strong&gt;运行&lt;/strong&gt;例如，webpack进行编译。当webpack完成并且您的构建器发出一个 &lt;code&gt;BuilderOutput&lt;/code&gt; 对象时，这结束。</target>
        </trans-unit>
        <trans-unit id="e07d610b5c16aa4b2bdca2a424387d9854e37e4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runtime:&lt;/strong&gt; Injector configuration via the &lt;code&gt;providers&lt;/code&gt; array.</source>
          <target state="translated">&lt;strong&gt;运行时：&lt;/strong&gt;通过 &lt;code&gt;providers&lt;/code&gt; 数组配置注入器。</target>
        </trans-unit>
        <trans-unit id="b31d5dd2a2bc3b46b020204363d5d73e74f48bcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RxJS marble testing&lt;/strong&gt; is a great way to test observable scenarios, both simple and complex. You've likely seen the &lt;a href=&quot;http://rxmarbles.com/&quot;&gt;marble diagrams&lt;/a&gt; that illustrate how observables work. Marble testing uses a similar marble language to specify the observable streams and expectations in your tests.</source>
          <target state="translated">&lt;strong&gt;RxJS大理石测试&lt;/strong&gt;是测试简单和复杂的可观察场景的好方法。您可能已经看过&lt;a href=&quot;http://rxmarbles.com/&quot;&gt;大理石图&lt;/a&gt;，这些图说明了可观察的工作原理。大理石测试使用类似的大理石语言来指定测试中的可观察流和期望值。</target>
        </trans-unit>
        <trans-unit id="48825014938eb7915005039dae95b10cc2130328" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Save form data&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;保存表格数据&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66fe1d46bd141ee07e93d23bcd1758af621ad8e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See the &lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;请参阅&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="43ea0d44435c8b67d128290fc1634480ad748492" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See the Angular syntax in this &lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;请参阅this中的Angular语法&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6b304202d6b9b7d59ab65a8e6057866905abb614" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static asset&lt;/strong&gt;: all other requests.</source>
          <target state="translated">&lt;strong&gt;静态资产&lt;/strong&gt;：所有其他请求。</target>
        </trans-unit>
        <trans-unit id="cbf65f3b89682af8d30c19f2bd5eb2048c642179" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Static:&lt;/strong&gt; Compiler configuration which tells the compiler about directive selectors and where in templates the directives should be applied through selector matching. This is configured via the &lt;code&gt;declarations&lt;/code&gt; array.</source>
          <target state="translated">&lt;strong&gt;静态的：&lt;/strong&gt;编译器配置，它告知编译器指令选择器以及在模板中的位置应通过选择器匹配应用指令。这是通过 &lt;code&gt;declarations&lt;/code&gt; 数组配置的。</target>
        </trans-unit>
        <trans-unit id="976d3a67076ee0a889e6579cde70008f39c15b63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Style examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;样式示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="223854d9e937adcab6eba006aec80e64f11c7c6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Style&lt;/strong&gt; is used when binding CSS into the &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; property.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;将CSS绑定到 &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; 属性中时使用&lt;strong&gt;Style&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e8643df547d495e2f243fdba32a32e4e7a459fdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sync validators&lt;/strong&gt;: Synchronous functions that take a control instance and immediately return either a set of validation errors or &lt;code&gt;null&lt;/code&gt;. You can pass these in as the second argument when you instantiate a &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;同步验证器&lt;/strong&gt;：采用控制实例并立即返回一组验证错误或为 &lt;code&gt;null&lt;/code&gt; 的同步函数。实例化 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 时，可以将它们作为第二个参数传递。</target>
        </trans-unit>
        <trans-unit id="8d23c9b31a96802fe5f1117cb148697c5c8938e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sync validators&lt;/strong&gt;: functions that take a control instance and immediately return either a set of validation errors or &lt;code&gt;null&lt;/code&gt;. You can pass these in as the second argument when you instantiate a &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;同步验证器&lt;/strong&gt;：采用控制实例并立即返回一组验证错误或为 &lt;code&gt;null&lt;/code&gt; 的函数。实例化 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 时，可以将它们作为第二个参数传递。</target>
        </trans-unit>
        <trans-unit id="736217d05af049a7575b12dd321ddde95c5b4ec4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Template binding works with &lt;em&gt;properties&lt;/em&gt; and &lt;em&gt;events&lt;/em&gt;, not &lt;em&gt;attributes&lt;/em&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;模板绑定适用于&lt;em&gt;属性&lt;/em&gt;和&lt;em&gt;事件&lt;/em&gt;，而不适用&lt;em&gt;于属性&lt;/em&gt;。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a34fe84a9cb32717df61c02150c2c1128d88b5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Template-driven forms&lt;/strong&gt; are tied to template &lt;strong&gt;directives&lt;/strong&gt;, and must provide custom validator directives that wrap validation functions.</source>
          <target state="translated">&lt;strong&gt;模板驱动的表单&lt;/strong&gt;与模板&lt;strong&gt;指令相关联&lt;/strong&gt;，并且必须提供包装验证功能的自定义验证器指令。</target>
        </trans-unit>
        <trans-unit id="39611775e2f3c33d40770f7b55ff0283d9358dcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Template-driven forms&lt;/strong&gt; are useful for adding a simple form to an app, such as an email list signup form. They're easy to add to an app, but they don't scale as well as reactive forms. If you have very basic form requirements and logic that can be managed solely in the template, use template-driven forms.</source>
          <target state="translated">&lt;strong&gt;模板驱动的表单&lt;/strong&gt;对于将简单表单​​添加到应用程序很有用，例如电子邮件列表注册表单。它们很容易添加到应用程序中，但是不像可伸缩表单那样可扩展。如果您有可以仅在模板中管理的非常基本的表单要求和逻辑，请使用模板驱动的表单。</target>
        </trans-unit>
        <trans-unit id="a1d2475a52a172617485b5340a76d953fe981997" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Template-driven forms&lt;/strong&gt; rely on directives in the template to create and manipulate the underlying object model. They are useful for adding a simple form to an app, such as an email list signup form. They're easy to add to an app, but they don't scale as well as reactive forms. If you have very basic form requirements and logic that can be managed solely in the template, template-driven forms could be a good fit.</source>
          <target state="translated">&lt;strong&gt;模板驱动的表单&lt;/strong&gt;依赖于模板中的指令来创建和操作基础对象模型。它们对于将简单表单​​添加到应用程序很有用，例如电子邮件列表注册表单。它们很容易添加到应用程序中，但是不像可伸缩表单那样可扩展。如果您有非常基本的表单要求和逻辑，可以仅在模板中进行管理，那么模板驱动的表单可能是一个很好的选择。</target>
        </trans-unit>
        <trans-unit id="f9f368e6ae6f90a6865c211b4fc3f51561734be3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Template-driven&lt;/strong&gt; forms focus on simple scenarios, are not as reusable, abstract away the low-level APIs, and provide asynchronous access to the form model. The abstraction with template-driven forms also surfaces in testing, where testing reactive forms requires less setup and no dependence on the change detection cycle when updating and validating the form and data models during testing.</source>
          <target state="translated">&lt;strong&gt;模板驱动的&lt;/strong&gt;表单专注于简单的场景，不那么可重用，抽象了低级API，并提供对表单模型的异步访问。模板驱动的表单的抽象也会在测试中浮出水面，其中测试反应式表单所需的设置更少，并且在测试过程中更新和验证表单和数据模型时无需依赖更改检测周期。</target>
        </trans-unit>
        <trans-unit id="81a3d875ca1aa71ccfc79e48c2ebbd3e48d8d04e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Template-driven&lt;/strong&gt; forms rely on mutability with two-way data binding to update the data model in the component as changes are made in the template. Because there are no unique changes to track on the data model when using two-way data binding, change detection is less efficient at determining when updates are required.</source>
          <target state="translated">&lt;strong&gt;模板驱动的&lt;/strong&gt;表单依赖于具有双向数据绑定的可变性，以在模板中进行更改时更新组件中的数据模型。由于在使用双向数据绑定时，没有唯一的更改可跟踪数据模型，因此更改检测在确定何时需要更新时效率较低。</target>
        </trans-unit>
        <trans-unit id="be2ae55753f8c992faf5420a53fdaffa8f81a22e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Angular i18n tools generated the ids for these translation units. Don't change them.&lt;/strong&gt; Each &lt;code&gt;id&lt;/code&gt; depends upon the content of the template text and its assigned meaning. If you change either the text or the meaning, then the &lt;code&gt;id&lt;/code&gt; changes. For more information, see the &lt;strong&gt;&lt;a href=&quot;i18n#custom-id&quot;&gt;translation file maintenance discussion&lt;/a&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Angular i18n工具为这些翻译单元生成了id。不要改变它们。&lt;/strong&gt;每个 &lt;code&gt;id&lt;/code&gt; 取决于模板文本的内容及其分配的含义。如果更改文本或含义，则 &lt;code&gt;id&lt;/code&gt; 也会更改。有关更多信息，请参见&lt;strong&gt;&lt;a href=&quot;i18n#custom-id&quot;&gt;翻译文件维护讨论&lt;/a&gt;&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a999cce0de293dd0ceb1486c064bdc0e80ff41df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The order of the routes in the configuration matters&lt;/strong&gt; and this is by design. The router uses a &lt;strong&gt;first-match wins&lt;/strong&gt; strategy when matching routes, so more specific routes should be placed above less specific routes. In the configuration above, routes with a static path are listed first, followed by an empty path route, that matches the default route. The wildcard route comes last because it matches &lt;em&gt;every URL&lt;/em&gt; and should be selected &lt;em&gt;only&lt;/em&gt; if no other routes are matched first.</source>
          <target state="translated">&lt;strong&gt;路由在配置中的顺序很重要&lt;/strong&gt;，这是设计使然。路由器在匹配路由时会使用&amp;ldquo; &lt;strong&gt;先赢&amp;rdquo;&lt;/strong&gt;策略，因此应将更具体的路由放在不那么具体的路由之上。在上面的配置中，首先列出具有静态路径的路由，然后是与默认路由匹配的空路径路由。通配符路由排在最后，因为它与&lt;em&gt;每个URL&lt;/em&gt;匹配，并且&lt;em&gt;仅&lt;/em&gt;当没有其他路由最先匹配&lt;em&gt;时才&lt;/em&gt;应选择通配符路由。</target>
        </trans-unit>
        <trans-unit id="38184a516af530c7b89c8dcda7bf8522761ad6d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;These same considerations apply to every structural directive, whether built-in or custom.&lt;/strong&gt; Before applying a structural directive, you might want to pause for a moment to consider the consequences of adding and removing elements and of creating and destroying components.</source>
          <target state="translated">&lt;strong&gt;这些相同的考虑因素适用于每个结构指令，无论是内置指令还是自定义指令。&lt;/strong&gt;在应用结构指令之前，您可能需要暂停片刻，以考虑添加和删除元素以及创建和销毁组件的后果。</target>
        </trans-unit>
        <trans-unit id="fe44a85d9ca6005e7244538960b40e24bc47858c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This Tour of Heroes tutorial&lt;/strong&gt; is the conceptual basis for many examples in this documentation set. Reading this introduction page provides sufficient context for working with those examples. You do not need to do this tutorial to understand those other examples. The Tour of Heroes tutorial is maintained here for context and continuity.</source>
          <target state="translated">&lt;strong&gt;本《英雄之旅》教程&lt;/strong&gt;是本文档集中许多示例的概念基础。阅读此简介页为使用这些示例提供了足够的上下文。您无需执行本教程即可了解其他示例。此处保留了&amp;ldquo;英雄之旅&amp;rdquo;教程的内容和连续性。</target>
        </trans-unit>
        <trans-unit id="d539cfba0c3e2c6f1af70df43cfa22fe53cecb73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This won't work at all unless you bind to an event&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;除非您绑定到事件，否则根本无法使用&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a80aeef417506b373f9b8e1ca32e8927d08fea94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Timing examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;时序示例&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fcc6aade1857b98341ff9104631b04810b85d452" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip:&lt;/strong&gt; When testing Angular service workers, it's a good idea to use an incognito or private window in your browser to ensure the service worker doesn't end up reading from a previous leftover state, which can cause unexpected behavior.</source>
          <target state="translated">&lt;strong&gt;提示：&lt;/strong&gt;在测试Angular Service Worker时，最好在浏览器中使用隐身窗口或私有窗口，以确保Service Worker不会最终从以前的剩余状态读取，这可能导致意外行为。</target>
        </trans-unit>
        <trans-unit id="9b5c8b64ad9cd5d1fbda1a7ab6717ec8f07c6fb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip&lt;/strong&gt; Display the value for the form group instance in the component template using the &lt;code&gt;value&lt;/code&gt; property and &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;提示&lt;/strong&gt;使用 &lt;code&gt;value&lt;/code&gt; 属性和 &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt;&lt;/code&gt; 在组件模板中显示表单组实例的值。</target>
        </trans-unit>
        <trans-unit id="ac9ade9e3d18db86ee1a787e995f2cceb063b935" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip&lt;/strong&gt; You can define the control with just the initial value, but if your controls need sync or async validation, add sync and async validators as the second and third items in the array.</source>
          <target state="translated">&lt;strong&gt;提示&lt;/strong&gt;您可以仅使用初始值来定义控件，但是如果您的控件需要同步或异步验证，则将同步和异步验证器添加为数组中的第二项和第三项。</target>
        </trans-unit>
        <trans-unit id="e8f5f0ccfa280e0fd5ba348e427d9b195ad85764" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip&lt;/strong&gt;: Every progress event triggers change detection, so only turn them on if you need to report progress in the UI.</source>
          <target state="translated">&lt;strong&gt;提示&lt;/strong&gt;：每个进度事件都会触发更改检测，因此仅在需要在UI中报告进度时才将其打开。</target>
        </trans-unit>
        <trans-unit id="bd60b7d4980bbe3b5620fc35b30681a7a890ea76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip&lt;/strong&gt;: If you set the cloned request body to &lt;code&gt;undefined&lt;/code&gt;, Angular assumes you intend to leave the body as is.</source>
          <target state="translated">&lt;strong&gt;提示&lt;/strong&gt;：如果将克隆的请求正文设置为 &lt;code&gt;undefined&lt;/code&gt; ，则Angular会假定您打算保留该正​​文。</target>
        </trans-unit>
        <trans-unit id="fec66486a30dbc0bea95331ec287393af8d9b44a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Two critical points&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;两个关键点&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4954c4b6c00b45986905694f1b1374d7bc1be911" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TypeScript interfaces are not valid tokens&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TypeScript接口不是有效的令牌&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84d9cdef4598d181c02608e6adb684186a18b296" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;URL&lt;/strong&gt; is used for URL properties, such as &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; href&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;URL&lt;/strong&gt;是用于URL的属性，如 &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; href&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ca734d077c213c37139adbd1147c92fd552a7d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;URL&lt;/strong&gt; is used for URL properties, such as &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;URL&lt;/strong&gt;用于URL属性，例如 &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bcaefa1fa57901abf47489e45d1501b61b8bd8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use template variables to refer to elements&lt;/strong&gt; &amp;mdash; The &lt;code&gt;newHero&lt;/code&gt; template variable refers to the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element. You can reference &lt;code&gt;newHero&lt;/code&gt; from any sibling or child of the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">&lt;strong&gt;使用模板变量引用元素&lt;/strong&gt; &amp;mdash; &lt;code&gt;newHero&lt;/code&gt; 模板变量引用 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元素。您可以从 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元素的任何同级或子级引用 &lt;code&gt;newHero&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b677cf735946959b9d7588a08eb43b16500df0e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;VALID&lt;/strong&gt;: This control has passed all validation checks.</source>
          <target state="translated">&lt;strong&gt;有效&lt;/strong&gt;：此控件已通过所有验证检查。</target>
        </trans-unit>
        <trans-unit id="fdf2f29be1ffedae6e6be14262266e47e87b960e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validating user input&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;验证用户输入&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d81764712c192c7d252e1dde6e6432f8c34257ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verifying view-to-model data flow&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;验证视图到模型的数据流&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1d3bd99f3963d7dd7451baa69dc655142691d45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Version 8 update&lt;/strong&gt;: When you update to version 8, the &lt;a href=&quot;cli/update&quot;&gt;&lt;code&gt;ng update&lt;/code&gt;&lt;/a&gt; command performs the transformation automatically. Prior to version 7, the &lt;code&gt;import()&lt;/code&gt; syntax only works in JIT mode (with view engine).</source>
          <target state="translated">&lt;strong&gt;版本8更新&lt;/strong&gt;：更新到版本8时，&lt;a href=&quot;cli/update&quot;&gt; &lt;code&gt;ng update&lt;/code&gt; &lt;/a&gt;命令将自动执行转换。在版本7之前的版本中， &lt;code&gt;import()&lt;/code&gt; 语法仅在JIT模式下运行（使用视图引擎）。</target>
        </trans-unit>
        <trans-unit id="5930284e7d08a06d52e13ae68f35a6d5e2eb49dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING:&lt;/strong&gt; calling this method with untrusted user data exposes your application to XSS security risks!</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;使用不受信任的用户数据调用此方法会使您的应用程序面临XSS安全风险！</target>
        </trans-unit>
        <trans-unit id="f4b21eac31a19fb3c30a451eadfdc629a0028356" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Watching&lt;/strong&gt; Between two runs, watch an external event stream. For example, webpack watches the file system for any changes. This ends when webpack restarts building, and &lt;code&gt;BuilderContext.reportRunning()&lt;/code&gt; is called. This goes back to step 1.</source>
          <target state="translated">&lt;strong&gt;看着&lt;/strong&gt;两分之间，看外部事件流。例如，webpack监视文件系统是否有任何更改。当webpack重新开始构建并 &lt;code&gt;BuilderContext.reportRunning()&lt;/code&gt; 时，此操作结束。回到步骤1。</target>
        </trans-unit>
        <trans-unit id="1f4db7a717d8bafa0668ecb47f73ca0cc064ab40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; A &lt;code&gt;RoutingModule&lt;/code&gt; is a module dedicated exclusively to configuring the Angular router. A consistent class and file name convention make these modules easy to spot and verify.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;一个 &lt;code&gt;RoutingModule&lt;/code&gt; 是一个专门用于配置角度路由器模块。一致的类和文件名约定使这些模块易于发现和验证。</target>
        </trans-unit>
        <trans-unit id="04589d2d9744514af189ea6e3054d6bf9d7d22f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; A &lt;em&gt;component relative&lt;/em&gt; URL requires no change when you move the component files, as long as the files stay together.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;一个&lt;em&gt;组件相对&lt;/em&gt; URL不需要改变，当你移动的组件文件，只要这些文件呆在一起。</target>
        </trans-unit>
        <trans-unit id="c0e395c2378de24cfdc67c2df0ed44bfc442cd04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; A developer can locate the code and identify what each file represents at a glance. The structure is as flat as it can be and there are no repetitive or redundant names.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;开发人员可以查找代码并一目了然地确定每个文件代表什么。结构尽可能平坦，没有重复或冗余的名称。</target>
        </trans-unit>
        <trans-unit id="1262a86b3590b85df017625720fbbcdc6d311c34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; A feature module can easily be isolated for testing.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;可以轻松隔离功能模块以进行测试。</target>
        </trans-unit>
        <trans-unit id="d0befcba826a7c12a909b30a127b915f1633d173" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; A feature module can easily be routed to both eagerly and lazily.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;可以轻松地将功能模块轻松地路由到。</target>
        </trans-unit>
        <trans-unit id="d8a9d11884cdfdbe0f14fccb1d35f8d0a08b3f3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; A feature module can expose or hide its implementation from other modules.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;功能模块可以向其他模块公开或隐藏其实现。</target>
        </trans-unit>
        <trans-unit id="eb107a6bf76e17297ad715b7d51e4fb71ad58b07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; A feature module defines clear boundaries between specific functionality and other application features.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;功能模块在特定功能和其他应用程序功能之间定义了明确的界限。</target>
        </trans-unit>
        <trans-unit id="6abe63ff1c16959d3bd6cc84f3dc2944004b35d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; A feature module helps clarify and make it easier to assign development responsibilities to different teams.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;功能模块有助于弄清并简化将开发职责分配给不同团队的工作。</target>
        </trans-unit>
        <trans-unit id="c683cac77b133fcddf5376450cec6bbebe1f977d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; A feature module identifies distinct sets of related components that comprise the feature area.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;功能模块可识别构成功能区域的相关组件的不同集合。</target>
        </trans-unit>
        <trans-unit id="85284312bcbd37c13bef3a0c96d45d476790c351" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; A lazy loaded feature module that imports that shared module will make its own copy of the service and likely have undesirable results.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;导入共享模块的延迟加载功能部件模块将制作其自己的服务副本，并且可能会产生不良结果。</target>
        </trans-unit>
        <trans-unit id="0740926be2e010643c4d521f9c1a255b48ee9178" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; A single component can be the default export for its file which facilitates lazy loading with the router.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;单个组件可以是其文件的默认导出，这有助于路由器的延迟加载。</target>
        </trans-unit>
        <trans-unit id="2811feb73a16c592296e6d07558d99d29370128b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; An element may have more than one attribute directive applied.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;一个元素可能应用了多个属性指令。</target>
        </trans-unit>
        <trans-unit id="ba1c5353bbde10cde7e9da164e80017b227b5d57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Angular allows for an &lt;a href=&quot;binding-syntax&quot;&gt;alternative syntax&lt;/a&gt;&lt;code&gt;on-*&lt;/code&gt;. If the event itself was prefixed with &lt;code&gt;on&lt;/code&gt; this would result in an &lt;code&gt;on-onEvent&lt;/code&gt; binding expression.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;Angular允许 &lt;code&gt;on-*&lt;/code&gt; 的&lt;a href=&quot;binding-syntax&quot;&gt;替代语法&lt;/a&gt;。如果事件本身与前缀 &lt;code&gt;on&lt;/code&gt; ，这将导致 &lt;code&gt;on-onEvent&lt;/code&gt; 绑定表达式。</target>
        </trans-unit>
        <trans-unit id="07f45f2bfe81970ab8ea36a5d55fe680e01ab2f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Angular allows for an &lt;a href=&quot;template-syntax#binding-syntax&quot;&gt;alternative syntax&lt;/a&gt;&lt;code&gt;on-*&lt;/code&gt;. If the event itself was prefixed with &lt;code&gt;on&lt;/code&gt; this would result in an &lt;code&gt;on-onEvent&lt;/code&gt; binding expression.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;Angular允许 &lt;code&gt;on-*&lt;/code&gt; 的&lt;a href=&quot;template-syntax#binding-syntax&quot;&gt;替代语法&lt;/a&gt;。如果事件本身与前缀 &lt;code&gt;on&lt;/code&gt; ，这将导致 &lt;code&gt;on-onEvent&lt;/code&gt; 绑定表达式。</target>
        </trans-unit>
        <trans-unit id="9cc424a44b45f6cafa38c31a9508d5e7ed3a747c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Attribute directives don't have an associated template.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;属性指令没有关联的模板。</target>
        </trans-unit>
        <trans-unit id="aa2f8a7961dc97adafb6e602f6fe6d05c58777f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Being DRY is important, but not crucial if it sacrifices the other elements of LIFT. That's why it's called &lt;em&gt;T-DRY&lt;/em&gt;. For example, it's redundant to name a template &lt;code&gt;hero-view.component.html&lt;/code&gt; because with the &lt;code&gt;.html&lt;/code&gt; extension, it is obviously a view. But if something is not obvious or departs from a convention, then spell it out.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;干燥很重要，但如果牺牲了LIFT的其他要素，则并非至关重要。这就是为什么它被称为&lt;em&gt;T-DRY的原因&lt;/em&gt;。例如，命名模板 &lt;code&gt;hero-view.component.html&lt;/code&gt; 是多余的，因为扩展名为 &lt;code&gt;.html&lt;/code&gt; 的人显然是视图。但是，如果某些不明显的内容或违反约定，则将其说明清楚。</target>
        </trans-unit>
        <trans-unit id="46a5882dc1138956f82e9db20a9f116859436e7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Clear service names such as &lt;code&gt;Logger&lt;/code&gt; do not require a suffix.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;明确的服务名称（例如 &lt;code&gt;Logger&lt;/code&gt; )不需要后缀。</target>
        </trans-unit>
        <trans-unit id="c5e29beaefad891bdb4e78135e60f691b8ac86b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Components are easy to identify in the DOM.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;组件很容易在DOM中识别。</target>
        </trans-unit>
        <trans-unit id="939cda78012273bade6ae1142aa81a9144c9418e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Components have templates containing HTML and optional Angular template syntax. They display content. Developers place components on the page as they would native HTML elements and web components.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;组件的模板包含HTML和可选的Angular模板语法。它们显示内容。开发人员就像在本地HTML元素和Web组件中一样在页面上放置组件。</target>
        </trans-unit>
        <trans-unit id="940f7a48e45cacbadbcff27f2d8f20fa574d2cfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Components often have four files (e.g. &lt;code&gt;*.html&lt;/code&gt;, &lt;code&gt;*.css&lt;/code&gt;, &lt;code&gt;*.ts&lt;/code&gt;, and &lt;code&gt;*.spec.ts&lt;/code&gt;) and can clutter a folder quickly.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;组件通常具有四个文件（例如 &lt;code&gt;*.html&lt;/code&gt; ， &lt;code&gt;*.css&lt;/code&gt; ， &lt;code&gt;*.ts&lt;/code&gt; 和 &lt;code&gt;*.spec.ts&lt;/code&gt; ），并且可以使文件夹快速混乱。</target>
        </trans-unit>
        <trans-unit id="cfc187a80923daabfa4dee51bab700e352640231" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Consistent conventions make it easy to quickly identify and reference assets of different types.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;一致的约定使快速识别和引用不同类型的资产变得容易。</target>
        </trans-unit>
        <trans-unit id="a4b76ada1e8fb40c5c098a2792e6ab48605b126c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Directives are easily identified.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;指令易于识别。</target>
        </trans-unit>
        <trans-unit id="a8ca309d4fd0bb05fc8f73be6ad20dd69c1b4b95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Directly importing and using a module will load it immediately when the intention is to load it on demand.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;如果打算按需加载模块，则直接导入和使用模块将立即加载该模块。</target>
        </trans-unit>
        <trans-unit id="63f93ef339450c1d644d4b8bc49215522e7b59b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Easily identifies the module as the root of the same named feature.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;轻松将模块标识为相同命名功能的根。</target>
        </trans-unit>
        <trans-unit id="73dbf9307ea727c571221c71f2cde877ad26415b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Every app requires at least one root NgModule.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;每个应用程序至少需要一个根NgModule。</target>
        </trans-unit>
        <trans-unit id="f8912034bee6bd2c5284db5f887a57bef1b8b60e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Follows a consistent convention for the startup logic of an app.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;对应用程序的启动逻辑遵循一致的约定。</target>
        </trans-unit>
        <trans-unit id="b3732e3216913d5a42241b40a6a21935436ea08b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Follows a familiar convention from other technology platforms.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;遵循其他技术平台的常见约定。</target>
        </trans-unit>
        <trans-unit id="78d7122abd3625d885a97bc3035d8a97f9e45e39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Helps keep the app structure small and easy to maintain in the early stages, while being easy to evolve as the app grows.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;帮助保持应用程序结构的小巧和易于维护，同时易于随着应用程序的增长而发展。</target>
        </trans-unit>
        <trans-unit id="7c687f1cf4f1c9edfdbe38a122d9615679ae98bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Helps reduce the app from becoming cluttered through organizing the content and keeping them aligned with the LIFT guidelines.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;通过组织内容并使它们与LIFT准则保持一致，有助于减少应用程序的混乱情况。</target>
        </trans-unit>
        <trans-unit id="d4e1d1b6128e0b970c274cc418989255962ba5a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; If you ever need to rename the property or event name associated with &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;, you can modify it in a single place.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;如果您需要重命名与 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 或 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 关联的属性或事件名称，则可以在单个位置进行修改。</target>
        </trans-unit>
        <trans-unit id="01e43bec054057c9a473876587798360338549a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; If you ever need to rename the property or event name associated with &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;, you can modify it in a single place.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;如果您需要重命名与 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; 关联的属性或事件名称，则可以在单个位置进行修改。</target>
        </trans-unit>
        <trans-unit id="83dd1bd67fbbdf59da283e43e28d7ae77a9c9c2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; In most editors, syntax hints and code snippets aren't available when developing inline templates and styles. The Angular TypeScript Language Service (forthcoming) promises to overcome this deficiency for HTML templates in those editors that support it; it won't help with CSS styles.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;在大多数编辑器中，开发内联模板和样式时，语法提示和代码段不可用。Angular TypeScript语言服务（即将发布）承诺将在支持HTML编辑器的编辑器中克服HTML模板的这一缺陷。它对CSS样式没有帮助。</target>
        </trans-unit>
        <trans-unit id="ee9f32cdb67462e3204ef0425a24a68553bce2fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; It is easier and more readable to identify which properties in a class are inputs or outputs.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;识别类中的哪些属性是输入或输出更容易且更具可读性。</target>
        </trans-unit>
        <trans-unit id="228cd948e79db9c623be535c25f213d3d3422985" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; It is easier to recognize that a symbol is a component by looking at the template's html.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;通过查看模板的html可以更容易地识别符号是组件。</target>
        </trans-unit>
        <trans-unit id="79ce411eec9f34adba732b772f52ab1437a5c6df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Keeping the component's presentation logic in the class instead of the template improves testability, maintainability, and reusability.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;将组件的表示逻辑保留在类而不是模板中可以提高可测试性，可维护性和可重用性。</target>
        </trans-unit>
        <trans-unit id="d93d6d0f23e181ca837ab7816b2c6cdb20cae929" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Keeps the component slim, trim, and focused.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;使组件保持苗条，修剪和集中。</target>
        </trans-unit>
        <trans-unit id="c74fd3a0f632cf9983d3fc214a237c481bc302ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Keeps the element names consistent with the specification for &lt;a href=&quot;https://www.w3.org/TR/custom-elements/&quot;&gt;Custom Elements&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;使元素名称与&lt;a href=&quot;https://www.w3.org/TR/custom-elements/&quot;&gt;Custom Elements&lt;/a&gt;的规范保持一致。</target>
        </trans-unit>
        <trans-unit id="69b13800ded4a6eb0eb25b17500db5601452451b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Keeps the names of the properties defined in the directives that are bound to the view consistent with the attribute names.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;使绑定到视图的指令中定义的属性名称与属性名称保持一致。</target>
        </trans-unit>
        <trans-unit id="34b110dd651265ca74b8b4ee5f7e525579d16226" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; LIFT provides a consistent structure that scales well, is modular, and makes it easier to increase developer efficiency by finding code quickly. To confirm your intuition about a particular structure, ask: &lt;em&gt;can I quickly open and start work in all of the related files for this feature&lt;/em&gt;?</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;LIFT提供了一个一致的结构，该结构可以很好地扩展，模块化并且可以通过快速查找代码来提高开发人员效率。为了确认您对特定结构的直觉，请问：&lt;em&gt;我可以快速打开并开始使用此功能的所有相关文件中的内容&lt;/em&gt;吗？</target>
        </trans-unit>
        <trans-unit id="1a5aca0a18ca16fb031760f494714dfe8bd1ce00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Large, inline templates and styles obscure the component's purpose and implementation, reducing readability and maintainability.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;大型的内联模板和样式掩盖了组件的目的和实现，从而降低了可读性和可维护性。</target>
        </trans-unit>
        <trans-unit id="95b9295db45695636c9832d0ca9938ce26b305a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Lifecycle interfaces prescribe typed method signatures. Use those signatures to flag spelling and syntax mistakes.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;生命周期接口规定了类型化的方法签名。使用这些签名来标记拼写和语法错误。</target>
        </trans-unit>
        <trans-unit id="da64dc6c75d0a87ea84b1bfbfac899dd0508402a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Logic in a service can more easily be isolated in a unit test, while the calling logic in the component can be easily mocked.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;可以在单元测试中更轻松地隔离服务中的逻辑，而组件中的调用逻辑则可以轻松模拟。</target>
        </trans-unit>
        <trans-unit id="9c2cd1b895fc5ebbfbcffeab1bba27b93162f5fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Logic may be reused by multiple components when placed within a service and exposed via a function.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;当放置在服务中并通过功能公开时，逻辑可以被多个组件重用。</target>
        </trans-unit>
        <trans-unit id="7641b0ce40613b8b7c95fc331cc3600ee9efe337" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Logic will be contained in one place (the component class) instead of being spread in two places.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;逻辑将包含在一个位置（组件类），而不是分布在两个位置。</target>
        </trans-unit>
        <trans-unit id="ac78f5ecc58fb086521b79c28011d6d15366f84d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Makes it easier to locate and identify the root module.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;使查找和标识根模块更加容易。</target>
        </trans-unit>
        <trans-unit id="c36ddbd1e55599db4b36de94bc8884dcc20080f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Makes it easier to promote and share the component in other apps.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;使在其他应用程序中推广和共享组件变得更加容易。</target>
        </trans-unit>
        <trans-unit id="b462dbb835ebea6ff2a4304b884761584cdaaf27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Names of folders and files should clearly convey their intent. For example, &lt;code&gt;app/heroes/hero-list.component.ts&lt;/code&gt; may contain a component that manages a list of heroes.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;文件夹和文件的名称应明确传达其意图。例如， &lt;code&gt;app/heroes/hero-list.component.ts&lt;/code&gt; 可能包含一个管理英雄列表的组件。</target>
        </trans-unit>
        <trans-unit id="2cd26c7cf1e009ca7818e2e37e0cdab8a245cbdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Naming conventions help provide a consistent way to find content at a glance. Consistency within the project is vital. Consistency with a team is important. Consistency across a company provides tremendous efficiency.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;命名约定有助于提供一种一致的方式来一目了然地查找内容。项目内部的一致性至关重要。与团队保持一致很重要。整个公司的一致性提供了巨大的效率。</target>
        </trans-unit>
        <trans-unit id="a16fe1ecf423c1ef637c0ac4e22c582c55ccd18f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; NgModules make it easier to isolate, test, and reuse features.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;NgModules使隔离，测试和重用功能更加容易。</target>
        </trans-unit>
        <trans-unit id="a2bdf377dda9552be8d4adff954274c392ffa660" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; NgModules make it easy to lazy load routable features.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;NgModules使延迟加载可路由功能变得容易。</target>
        </trans-unit>
        <trans-unit id="2dbc9a54c009895a704681c4abbe2acae1892ffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; No one wants to search for a file through seven levels of folders. A flat structure is easy to scan.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;没有人想通过七个级别的文件夹搜索文件。扁平结构易于扫描。</target>
        </trans-unit>
        <trans-unit id="371af0d588614975ac80631a6277e61df99b795c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; One component per file avoids hidden bugs that often arise when combining components in a file where they may share variables, create unwanted closures, or unwanted coupling with dependencies.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;每个文件一个组件可避免在文件中组合组件时经常出现的隐藏错误，这些组件可能共享变量，创建不必要的闭包或与依赖项进行不必要的耦合。</target>
        </trans-unit>
        <trans-unit id="23fe6f97cf7b97c5632fad61a075d9813272f3bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; One component per file makes it far easier to read, maintain, and avoid collisions with teams in source control.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;每个文件一个组件使阅读，维护和避免与源代码管理团队发生冲突变得更加容易。</target>
        </trans-unit>
        <trans-unit id="156a49dd95596cb5e1910e49cfb2894d05e2d1f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Placing members in a consistent sequence makes it easy to read and helps instantly identify which members of the component serve which purpose.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;将成员按一致的顺序放置将使其易于阅读，并有助于立即识别组件中的哪些成员用于哪个目的。</target>
        </trans-unit>
        <trans-unit id="dd52dbb328d25e75e5796399f02fe7e4ef7fcc70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Placing the decorator on the same line &lt;em&gt;usually&lt;/em&gt; makes for shorter code and still easily identifies the property as an input or output. Put it on the line above when doing so is clearly more readable.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;将装饰器放在同一行上&lt;em&gt;通常&lt;/em&gt;可以缩短代码，并且仍然可以轻松地将该属性标识为输入或输出。这样做时，将其放在上面的行中显然更具可读性。</target>
        </trans-unit>
        <trans-unit id="542f040e61234a8393cc2fb46e57220934925568" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Prevents element name collisions with components in other apps and with native HTML elements.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;防止元素名称与其他应用程序中的组件以及本机HTML元素发生冲突。</target>
        </trans-unit>
        <trans-unit id="de9657cd860484482d608521d99bff9845e66793" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Prevents name collisions.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;防止名称冲突。</target>
        </trans-unit>
        <trans-unit id="67487e9a7b5cc11689cc116920093851725cd844" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Provides a consistent way to quickly identify and reference modules.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;提供一种快速识别和引用模块的一致方法。</target>
        </trans-unit>
        <trans-unit id="58422644ad41e1a065831ecac64fd138c67589d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Provides a consistent way to quickly identify and reference pipes.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;提供一种一致的方法来快速识别和引用管道。</target>
        </trans-unit>
        <trans-unit id="374a3fec339150ba2b843eaef8697cd18d692310" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Provides a consistent way to quickly identify and reference services.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;提供一致的方法来快速识别和参考服务。</target>
        </trans-unit>
        <trans-unit id="2bc680cfe4e4d3c901eb72d30b972fd3ecb5b82e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Provides a consistent way to quickly identify end-to-end tests.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;提供一种一致的方法来快速识别端到端测试。</target>
        </trans-unit>
        <trans-unit id="6b865315fedffc33d1e166f9a0ee0f13e2d4eda7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Provides a consistent way to quickly identify tests.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;提供快速识别测试的一致方法。</target>
        </trans-unit>
        <trans-unit id="0b4e5eae96ab0e654b4e8d48cd47c3b6355b4593" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Provides pattern matching for &lt;a href=&quot;http://karma-runner.github.io/&quot;&gt;karma&lt;/a&gt; or other test runners.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;为&lt;a href=&quot;http://karma-runner.github.io/&quot;&gt;业力&lt;/a&gt;或其他测试跑步者提供模式匹配。</target>
        </trans-unit>
        <trans-unit id="97c2e3263d2245e56ff1481bf4c0c4a5559d7e7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Provides pattern matching for &lt;a href=&quot;https://karma-runner.github.io/&quot;&gt;karma&lt;/a&gt; or other test runners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a3f93d744d9f63fd43b9d63144503583c2ce47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Provides pattern matching for test runners and build automation.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;为测试人员提供模式匹配并自动构建。</target>
        </trans-unit>
        <trans-unit id="f36b0035ff9bed396c67a5eac59b0adb7b417532" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Removes dependencies and hides implementation details from the component.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;从组件中删除依赖关系并隐藏实现细节。</target>
        </trans-unit>
        <trans-unit id="6bcec3d26a77941dc7b7888da6c96b2adce22833" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Service names such as &lt;code&gt;Credit&lt;/code&gt; are nouns and require a suffix and should be named with a suffix when it is not obvious if it is a service or something else.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;服务名称（例如 &lt;code&gt;Credit&lt;/code&gt; )是名词，需要带后缀，如果不明显是服务还是其他名称，则应使用后缀命名。</target>
        </trans-unit>
        <trans-unit id="2c59855aa491026a9f90d721af2e37c9574062ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Services are ideal for sharing methods across a feature area or an app.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;服务是跨功能区域或应用程序共享方法的理想选择。</target>
        </trans-unit>
        <trans-unit id="d04fc6329854aa92b9b07981287ddf759c80af40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Services are ideal for sharing stateful in-memory data.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;服务是共享有状态内存数据的理想选择。</target>
        </trans-unit>
        <trans-unit id="0b0c75eb7454de8ebb65df15b000f0f00ac25b8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Small functions are easier to maintain.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;小功能更易于维护。</target>
        </trans-unit>
        <trans-unit id="46a37119db45b3abde6d62453aa73a346016d9ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Small functions are easier to read.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;小功能更易于阅读。</target>
        </trans-unit>
        <trans-unit id="8ce7e1b2ea1ce4d48a6d89d7d7258cb05a272dec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Small functions are easier to test, especially when they do one thing and serve one purpose.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;小型功能更易于测试，尤其是当它们做一件事并达到某一目的时。</target>
        </trans-unit>
        <trans-unit id="3d5fec2bd249ca55b61637acabe970f213445438" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Small functions help avoid hidden bugs that come with large functions that share variables with external scope, create unwanted closures, or unwanted coupling with dependencies.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;小型函数有助于避免大型函数附带的隐藏错误，这些大型函数与外部范围共享变量，创建不必要的闭包或与依赖项进行不必要的耦合。</target>
        </trans-unit>
        <trans-unit id="d7af862514e2de136fa80a338391a45134a26d69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Small functions promote reuse.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;小功能促进重用。</target>
        </trans-unit>
        <trans-unit id="55fa9a87dc53f6fb8b9cb9c3dbd8b91fa4439d68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Spend less time hunting and pecking for code, and become more efficient. Longer file names are far better than &lt;em&gt;short-but-obscure&lt;/em&gt; abbreviated names.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;花更少的时间寻找代码，提高效率。长文件名比&lt;em&gt;短但模糊的&lt;/em&gt;缩写名好得多。</target>
        </trans-unit>
        <trans-unit id="bb36cf42c22a06710f9daa2f5cb57ef4f882393d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The &lt;code&gt;./&lt;/code&gt; prefix is standard syntax for relative URLs; don't depend on Angular's current ability to do without that prefix.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;所述 &lt;code&gt;./&lt;/code&gt; 前缀为相对URL标准语法; 不依赖于Angular当前没有该前缀的能力。</target>
        </trans-unit>
        <trans-unit id="6e9d2faf7d97e3162943dd7bd177c19da377b99c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The &lt;code&gt;&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; metadata is only one term to remember and doesn't require extra ES imports.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;该 &lt;code&gt;&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; 的元数据只有一个长期记忆，不需要额外的ES进口。</target>
        </trans-unit>
        <trans-unit id="1f445da70362099b28e9ac7081a4264fc9eaa34e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The &lt;code&gt;host&lt;/code&gt; metadata is only one term to remember and doesn't require extra ES imports.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;该 &lt;code&gt;host&lt;/code&gt; 的元数据只有一个长期记忆，不需要额外的ES进口。</target>
        </trans-unit>
        <trans-unit id="b07e3f7e9bf20cfdb5fcc4963ca7e2dedc827101" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The Angular Dependency Injection (DI) mechanism resolves a service's own dependencies based on the declared types of that service's constructor parameters.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;Angular Dependency Injection（DI）机制基于服务的构造函数参数的声明类型来解析服务自己的依赖关系。</target>
        </trans-unit>
        <trans-unit id="9d2d736f1803c3ddb836cd66dcd10849e6f778d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The Angular HTML parser is case sensitive and recognizes lower camel case.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;Angular HTML解析器区分大小写，并且可以识别小写的驼峰字母。</target>
        </trans-unit>
        <trans-unit id="278ee06b3b41700c164528c6006a02f08e4b912d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The Angular injector is hierarchical.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;角喷射器是分层的。</target>
        </trans-unit>
        <trans-unit id="fb4e3183de0370836d208f02797380c826ae8617" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The LIFT guidelines are all covered.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;LIFT指南均已涵盖。</target>
        </trans-unit>
        <trans-unit id="fe9e050bab86c1ffbd191b1a30d210718a5292ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The component's responsibility is for the presentation and gathering of information for the view. It should not care how it gets the data, just that it knows who to ask for it. Separating the data services moves the logic on how to get it to the data service, and lets the component be simpler and more focused on the view.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;组件的责任是表示和收集视图信息。它不关心它如何获取数据，只知道它知道向谁索要数据。分离数据服务将逻辑转移到如何将其获取到数据服务上，并使组件更简单并且更专注于视图。</target>
        </trans-unit>
        <trans-unit id="a614e3f562640e92be2a71f4d9cfee595dbf229a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The details of data management, such as headers, HTTP methods, caching, error handling, and retry logic, are irrelevant to components and other data consumers.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;数据管理的详细信息（例如标头，HTTP方法，缓存，错误处理和重试逻辑）与组件和其他数据使用者无关。</target>
        </trans-unit>
        <trans-unit id="5ac4546d94ce9e713dceaf33efc111a345050f33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The folder makes it easy to identify and isolate the feature content.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;该文件夹使您可以轻松识别和隔离功能内容。</target>
        </trans-unit>
        <trans-unit id="bbf594ac0333396e41fcd880058df192f3ece2a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The metadata declaration attached to the directive is shorter and thus more readable.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;附加到指令的元数据声明更短，因此更具可读性。</target>
        </trans-unit>
        <trans-unit id="d399c257c9692973faee7e2443a4fdaebb5be4fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The naming conventions should simply help find desired code faster and make it easier to understand.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;命名约定应仅有助于更快地找到所需的代码，并使其更易于理解。</target>
        </trans-unit>
        <trans-unit id="9023567514f1a5c8648f2d14c2036fa7d2b1cfbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The property associated with &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; or the method associated with &lt;code&gt;@&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; can be modified only in a single place&amp;mdash;in the directive's class. If you use the &lt;code&gt;&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; metadata property, you must modify both the property/method declaration in the directive's class and the metadata in the decorator associated with the directive.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;与之相关联的财产 &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; 或与其相关的方法 &lt;code&gt;@&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; 只能在一个地方，在指令中的类进行修改。如果使用 &lt;code&gt;&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; 元数据属性，则必须同时修改指令类中的属性/方法声明以及与该指令关联的装饰器中的元数据。</target>
        </trans-unit>
        <trans-unit id="a667206faeaec98c4af583965926e0494fbfc683" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; The property associated with &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; or the method associated with &lt;code&gt;@&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; can be modified only in a single place&amp;mdash;in the directive's class. If you use the &lt;code&gt;host&lt;/code&gt; metadata property, you must modify both the property/method declaration in the directive's class and the metadata in the decorator associated with the directive.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;与之相关联的财产 &lt;code&gt;@&lt;a href=&quot;../api/core/hostbinding&quot;&gt;HostBinding&lt;/a&gt;&lt;/code&gt; 或与其相关的方法 &lt;code&gt;@&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; 只能在一个地方，在指令中的类进行修改。如果使用 &lt;code&gt;host&lt;/code&gt; 元数据属性，则必须同时修改指令类中的属性/方法声明以及与该指令关联的装饰器中的元数据。</target>
        </trans-unit>
        <trans-unit id="f040d63ae1b831a345a8a815f6e19f07b2eb4d31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; This is consistent with built-in events such as button clicks.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;这与诸如按钮单击之类的内置事件一致。</target>
        </trans-unit>
        <trans-unit id="0c7fe70cd15a7e29c72a0498423580cfdc75ea61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; This is not ideal when two different components need different instances of a service. In this scenario it would be better to provide the service at the component level that needs the new and separate instance.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;当两个不同的组件需要不同的服务实例时，这是不理想的。在这种情况下，最好在需要新的单独实例的组件级别提供服务。</target>
        </trans-unit>
        <trans-unit id="a7340e0f3575e2046047131f4cb62ee616e9870e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; This makes it easier to test (mock or real) the data calls when testing a component that uses a data service.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;当测试使用数据服务的组件时，这使得测试（模拟或真实）数据调用更加容易。</target>
        </trans-unit>
        <trans-unit id="5292b998c4720c145931663c9f0afcdab144934a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; To work efficiently you must be able to find files quickly, especially when you do not know (or do not remember) the file &lt;em&gt;names&lt;/em&gt;. Keeping related files near each other in an intuitive location saves time. A descriptive folder structure makes a world of difference to you and the people who come after you.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;为了高效地工作，您必须能够快速找到文件，尤其是当您不知道（或不记得）文件&lt;em&gt;名时&lt;/em&gt;。将相关文件放在一个直观的位置可以节省时间。描述性的文件夹结构对您和追随您的人们产生了很大的影响。</target>
        </trans-unit>
        <trans-unit id="c04e4c59fda45f1e4aa5dc5f007017f9fd5b3322" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Two names for the same property (one private, one public) is inherently confusing.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;同一属性的两个名称（一个私有，一个公共）本质上是令人困惑的。</target>
        </trans-unit>
        <trans-unit id="8104706a9f913d8ffb73065297d4460e3560d09b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Type names make it easy to find a specific file type using an editor or IDE's fuzzy search techniques.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;类型名称使使用编辑器或IDE的模糊搜索技术可以轻松查找特定文件类型。</target>
        </trans-unit>
        <trans-unit id="614a4b4cb7643480df4076413389b81e1bf2f0bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Type names provide a consistent way to quickly identify what is in the file.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;类型名称提供了一种一致的方式来快速识别文件中的内容。</target>
        </trans-unit>
        <trans-unit id="dca7d2e6018c2f33185a5723145d3f45ecb49ccd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Type names provide pattern matching for any automated tasks.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;类型名称为任何自动化任务提供模式匹配。</target>
        </trans-unit>
        <trans-unit id="5cf32259a6a149b346e42dfc65131b05d787fcf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Unabbreviated type names such as &lt;code&gt;.service&lt;/code&gt; are descriptive and unambiguous. Abbreviations such as &lt;code&gt;.srv&lt;/code&gt;, &lt;code&gt;.svc&lt;/code&gt;, and &lt;code&gt;.serv&lt;/code&gt; can be confusing.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;未缩写的类型名称（例如 &lt;code&gt;.service&lt;/code&gt; )是描述性的，也是明确的。 &lt;code&gt;.srv&lt;/code&gt; ， &lt;code&gt;.svc&lt;/code&gt; 和 &lt;code&gt;.serv&lt;/code&gt; 等缩写可能会造成混淆。</target>
        </trans-unit>
        <trans-unit id="cb98cc6d7953db2a6009be749552767d8a34910d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; Upper camel case is conventional for identifying objects that can be instantiated using a constructor.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;大骆驼的情况是常规的，用于标识可以使用构造函数实例化的对象。</target>
        </trans-unit>
        <trans-unit id="ad71d03bcb082d586eb4ec09e191fbb81ef4784d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; When a service accepts only dependencies associated with type tokens, the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; syntax is much less verbose compared to using &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;()&lt;/code&gt; on each individual constructor parameter.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;当服务仅接受与类型标记关联的依赖项时，与在每个构造函数参数上使用 &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;（）相比， &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 语法的冗长程度要低得多。</target>
        </trans-unit>
        <trans-unit id="1e291754420a43c44695cd0d87edc4386d63facb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; When a service has multiple responsibilities, every component or service that injects it now carries the weight of them all.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;当一项服务有多个职责时，注入它的每个组件或服务现在都承担着全部责任。</target>
        </trans-unit>
        <trans-unit id="ecd61cbc612d48036b3203a7fcee069dd63437fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; When a service has multiple responsibilities, it becomes difficult to test.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;当服务具有多个职责时，将变得难以测试。</target>
        </trans-unit>
        <trans-unit id="94a43d926c75940db64f94d3a768021df0616f72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; When there are a lot of files, for example 10+, locating them is easier with a consistent folder structure and more difficult in a flat structure.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;当有很多文件（例如10个以上）时，使用一致的文件夹结构查找文件会更容易，而使用平面结构则更困难。</target>
        </trans-unit>
        <trans-unit id="cc10eddeefb95f7a75a29a1a0d67027dc62f15bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; When you provide the service to a root injector, that instance of the service is shared and available in every class that needs the service. This is ideal when a service is sharing methods or state.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;当您向根注入器提供服务时，该服务实例将共享并在需要该服务的每个类中可用。当服务共享方法或状态时，这是理想的选择。</target>
        </trans-unit>
        <trans-unit id="03ef8461d4efc0093bb002ee20959403d2fd5f5e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; When you register a service in the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; decorator of the service, optimization tools such as those used by the &lt;a href=&quot;cli&quot;&gt;Angular CLI's&lt;/a&gt; production builds can perform tree shaking and remove services that aren't used by your app.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;当您在服务的 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; 装饰器中注册服务时，优化工具（例如&lt;a href=&quot;cli&quot;&gt;Angular CLI的&lt;/a&gt;生产版本所使用的优化工具）可以执行摇晃操作并删除应用程序未使用的服务。</target>
        </trans-unit>
        <trans-unit id="8a7c2b004c7ea14b9e097036f546c90cef37a5b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; You don't want each module to have its own separate instance of singleton services. Yet there is a real danger of that happening if the &lt;code&gt;SharedModule&lt;/code&gt; provides a service.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;您不希望每个模块都有其自己的单例服务实例。但是，如果 &lt;code&gt;SharedModule&lt;/code&gt; 提供服务，则确实存在发生这种情况的危险。</target>
        </trans-unit>
        <trans-unit id="16bf87abbd424a3fed90100dce9703f5bc6cce6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; You should use an alias when the directive name is also an &lt;em&gt;input&lt;/em&gt; property, and the directive name doesn't describe the property.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;当指令名称也是&lt;em&gt;输入&lt;/em&gt;属性，且指令名称未描述该属性时，应使用别名。</target>
        </trans-unit>
        <trans-unit id="dfdef4b3079947025cd8bddf4f6530b08c1865b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt; gives reasons for following the previous recommendations.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;给出了遵循先前建议的原因。</target>
        </trans-unit>
        <trans-unit id="024123ca4b271ded41b1bae659b4fd92d8c26c8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt;&lt;code&gt;SharedModule&lt;/code&gt; exists to make commonly used components, directives and pipes available for use in the templates of components in many other modules.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt;存在 &lt;code&gt;SharedModule&lt;/code&gt; 可以使常用组件，指令和管道可用于许多其他模块的组件模板中。</target>
        </trans-unit>
        <trans-unit id="e3678c7a0e748230934da9dd34b2e9b1dba606fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Why?&lt;/strong&gt;&lt;code&gt;SharedModule&lt;/code&gt; will contain components, directives and pipes that may need features from another common module; for example, &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;为什么？&lt;/strong&gt; &lt;code&gt;SharedModule&lt;/code&gt; 将包含可能需要其他通用模块功能的组件，指令和管道；例如， &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 中的 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="edb03112c51a4e11663ac3d5630e6b8865cb57e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Work within the context&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;在上下文中工作&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d8bf39083c5b8bd86f45a0335e844a8767d8843" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writing style:&lt;/strong&gt; Word usage, grammar, capitalization, and punctuation. Adherence to Angular's writing guidelines ensures a consistent &quot;voice&quot;, helps ensure accuracy of the information, and facilitates use world-wide, by audiences with different backgrounds.</source>
          <target state="translated">&lt;strong&gt;写作风格：&lt;/strong&gt;单词用法，语法，大写字母和标点符号。遵守Angular的写作指南可确保一致的&amp;ldquo;声音&amp;rdquo;，有助于确保信息的准确性，并促进具有不同背景的受众在全球范围内的使用。</target>
        </trans-unit>
        <trans-unit id="c22269fbbd3c4560d644e04e27c3fafe3a3ed683" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writing style&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;写作风格&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c4286b19db97cef175c9a3173bfe836d4c98f6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You can run the live example to see the complete reactive and template-driven example code.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;您可以运行实时示例以查看完整的反应式和模板驱动的示例代码。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47490898496c18c307d4ad5836bfe7ec31a36994" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You don't need to do anything to get &lt;em&gt;typings&lt;/em&gt; files for library packages that include &lt;code&gt;d.ts&lt;/code&gt; files. Angular packages include them already.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;你不需要做任何事情来得到&lt;em&gt;分型&lt;/em&gt;文件库包，其中包括 &lt;code&gt;d.ts&lt;/code&gt; 文件。Angular软件包已经包含它们。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7418ad94c4f5bffad199aa1037f6c20189206d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[(ngModel)]&lt;/strong&gt; is Angular's two-way data binding syntax.</source>
          <target state="translated">&lt;strong&gt;[（ngModel）]&lt;/strong&gt;是Angular的双向数据绑定语法。</target>
        </trans-unit>
        <trans-unit id="2afaee467316580fca44222d6c9a7bbb351fd9ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array&lt;/strong&gt;: commands to pass to &lt;a href=&quot;router#createUrlTree&quot;&gt;Router#createUrlTree&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;array&lt;/strong&gt;：传递给&lt;a href=&quot;router#createUrlTree&quot;&gt;Router＃createUrlTree的&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="3fe1d3b73ec04a4f495bb01dc96b64677028d061" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;codelyzer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;codelyzer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80bda6ac72accbc1ca9816b620a3e9a6b118354f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;descendants&lt;/strong&gt; - True to include all descendants, otherwise include only direct children.</source>
          <target state="translated">&lt;strong&gt;后代&lt;/strong&gt; -包含所有后代时为true，否则仅包括直系子代。</target>
        </trans-unit>
        <trans-unit id="adfdf22704311e6c562267346f98f332e0460601" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jasmine/... &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jasmine/... &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6371ee47035798a336b02cb24af48b8e42ede972" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;karma/... &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;karma/... &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7dd51ac3e89fdd6ac4f8af36c97748d2fc75ca6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt;: An alternative to setting the name attribute on the form control element. See the &lt;a href=&quot;ngmodel#using-ngmodel-on-a-standalone-control&quot;&gt;example&lt;/a&gt; for using &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; as a standalone control.</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;：在表单控件元素上设置name属性的替代方法。参见&lt;a href=&quot;ngmodel#using-ngmodel-on-a-standalone-control&quot;&gt;例如&lt;/a&gt;用于使用 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 作为一个独立的控制。</target>
        </trans-unit>
        <trans-unit id="9cb0a27ab2f16df5a1ff706cb37064ebce7953b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngFor&lt;/strong&gt; to display an array of items.</source>
          <target state="translated">&lt;strong&gt;ngFor&lt;/strong&gt;显示项目数组。</target>
        </trans-unit>
        <trans-unit id="0ed64020b10c2028c643bac6c9fcbe35dc5bbabe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngIf&lt;/strong&gt; to conditionally display a chunk of HTML based on a boolean expression.</source>
          <target state="translated">&lt;strong&gt;ngIf&lt;/strong&gt;根据布尔表达式有条件地显示HTML块。</target>
        </trans-unit>
        <trans-unit id="47382f2af3d2086517884d17290a4ba36eef83d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;npm dependencies:&lt;/strong&gt; We only make npm dependency updates that require changes to your apps in a major release. In minor releases, we update peer dependencies by expanding the supported versions, but we do not require projects to update these dependencies until a future major version. This means that during minor Angular releases, npm dependency updates within Angular applications and libraries are optional.</source>
          <target state="translated">&lt;strong&gt;npm依赖项：&lt;/strong&gt;我们仅进行npm依赖项更新，而该更新需要在主要版本中更改您的应用程序。在次要版本中，我们通过扩展受支持的版本来更新对等项依赖关系，但是在以后的主要版本中，我们不需要项目来更新这些依赖关系。这意味着在较小的Angular版本中，Angular应用程序和库中的npm依赖项更新是可选的。</target>
        </trans-unit>
        <trans-unit id="9f4c2d24b84bdce99f65869481cd20d948674c11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;npm package manager&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;npm软件包管理器&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce0e911bd264afd68ea6095551b4e21a892593e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;null|undefined&lt;/strong&gt;: shorthand for an empty array of commands, i.e. &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;null | undefined&lt;/strong&gt;：空命令数组的简写，即 &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff81369876b9ff0fac39c86e3a98661d021aa73d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;protractor&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;protractor&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cc4a187d86b8d960c2f4e934b7227d8c93b309e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;read&lt;/strong&gt; - True to read a different token from the queried element.</source>
          <target state="translated">&lt;strong&gt;read-&lt;/strong&gt;真，从查询的元素中读取其他令牌。</target>
        </trans-unit>
        <trans-unit id="30f9789d7f7887863149267a695a35393566e015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;read&lt;/strong&gt; - True to read a different token from the queried elements.</source>
          <target state="translated">&lt;strong&gt;read-&lt;/strong&gt;真，用于从查询的元素中读取其他令牌。</target>
        </trans-unit>
        <trans-unit id="9ca49cd5f5b70e9842596d3bca4fe1a47fee29c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;read&lt;/strong&gt; - Used to read a different token from the queried element.</source>
          <target state="translated">&lt;strong&gt;read-&lt;/strong&gt;用于从查询的元素读取不同的令牌。</target>
        </trans-unit>
        <trans-unit id="c549da8e043f83296dbc7cc92177e79519e1ad06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;read&lt;/strong&gt; - Used to read a different token from the queried elements.</source>
          <target state="translated">&lt;strong&gt;read-&lt;/strong&gt;用于从查询的元素中读取不同的令牌。</target>
        </trans-unit>
        <trans-unit id="3be4c5497047480cc31393214ff3fbaf9f97818b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rxjs&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;rxjs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cb9d62b286f1e1937e2bbe02bd344681dc505e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector&lt;/strong&gt; - The directive type or the name used for querying.</source>
          <target state="translated">&lt;strong&gt;选择器&lt;/strong&gt; -用于查询的指令类型或名称。</target>
        </trans-unit>
        <trans-unit id="2d2f1fa325329675cba484c31321fb49a3aa1e9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;standalone&lt;/strong&gt;: When set to true, the &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; will not register itself with its parent form, and acts as if it's not in the form. Defaults to false.</source>
          <target state="translated">&lt;strong&gt;standalone&lt;/strong&gt;：设置为true时， &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 不会以其父表单注册自己，并表现为不在表单中。默认为false。</target>
        </trans-unit>
        <trans-unit id="a659df3e0e18d400f5f1c9f0a685914845e1d1a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;standalone&lt;/strong&gt;: When set to true, the &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; will not register itself with its parent form, and acts as if it's not in the form. Defaults to false. If no parent form exists, this option has no effect.</source>
          <target state="translated">&lt;strong&gt;standalone&lt;/strong&gt;：设置为true时， &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 不会以其父窗体注册自己，并表现为不在窗体中。默认为false。如果不存在父表单，则此选项无效。</target>
        </trans-unit>
        <trans-unit id="4377d50a201b9ca0ce8477872ea95c93e7314fe2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;static&lt;/strong&gt; - True to resolve query results before change detection runs</source>
          <target state="translated">&lt;strong&gt;静态&lt;/strong&gt; -真，用于在运行更改检测之前解析查询结果</target>
        </trans-unit>
        <trans-unit id="ce06789f34cd111eacc6b321891b8144637e910d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;static&lt;/strong&gt; - True to resolve query results before change detection runs, false to resolve after change detection.</source>
          <target state="translated">&lt;strong&gt;静态&lt;/strong&gt; -在更改检测运行之前解析查询结果为true，在更改检测运行之后解析为false。</target>
        </trans-unit>
        <trans-unit id="619c3e133b38c94fdf0071c363b8bee4c567c017" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;static&lt;/strong&gt; - True to resolve query results before change detection runs, false to resolve after change detection. Defaults to false.</source>
          <target state="translated">&lt;strong&gt;静态&lt;/strong&gt;-在更改检测运行之前解析查询结果为true，在更改检测之后解析为false。默认为false。</target>
        </trans-unit>
        <trans-unit id="d5ed2d9ffc606a64df4f76c12e4c4f42ba0084a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;string&lt;/strong&gt;: shorthand for array of commands with just the string, i.e. &lt;code&gt;['/route']&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;string&lt;/strong&gt;：仅包含字符串的命令数组的简写，即 &lt;code&gt;['/route']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8cf58d8bc4b5e24796ad859418cc2e60410160e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ts-node&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ts-node&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="252774e7da4ec3009c5f69ee513c9ab756bb91dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tslint&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;tslint&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1fef399d9497a91dc61d25242d9621caf49e787" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;typescript&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;typescript&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6eac670ecd612eee291a7dc157fa6ca7b87c4a1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;updateOn&lt;/strong&gt;: Defines the event upon which the form control value and validity update. Defaults to 'change'. Possible values: &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;updateOn&lt;/strong&gt;：定义表单控件值和有效性更新的事件。默认为'change'。可能的值： &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f60e9ce82796fa904cd1cb51da24e3c3b5672849" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;updateOn&lt;/strong&gt;: Sets the default &lt;code&gt;updateOn&lt;/code&gt; value for all child &lt;code&gt;NgModels&lt;/code&gt; below it unless explicitly set by a child &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; using &lt;code&gt;ngModelOptions&lt;/code&gt;). Defaults to 'change'. Possible values: &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;updateOn&lt;/strong&gt;： &lt;code&gt;NgModels&lt;/code&gt; 下面的所有子NgModel设置默认的 &lt;code&gt;updateOn&lt;/code&gt; 值，除非子 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 使用 &lt;code&gt;ngModelOptions&lt;/code&gt; 明确设置）。默认为'change'。可能的值： &lt;code&gt;'change'&lt;/code&gt; | &lt;code&gt;'blur'&lt;/code&gt; | &lt;code&gt;'submit'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eec75c43bf8e37fc0ef1b526f50f7ad95fab9da4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;zone.js&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;zone.js&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec143633e8d3b8f2a394a46e89f29ce13e3c7418" translate="yes" xml:space="preserve">
          <source>=0 (or any other number)</source>
          <target state="translated">= 0（或其他任何数字）</target>
        </trans-unit>
        <trans-unit id="f9a4761705689f5ac6b5ce45f553fd1667ad66c3" translate="yes" xml:space="preserve">
          <source>@angular-devkit/build-angular</source>
          <target state="translated">@angular-devkit/build-angular</target>
        </trans-unit>
        <trans-unit id="d0db3c16323ae567a43bd22a4e5c5863dbeba52e" translate="yes" xml:space="preserve">
          <source>@angular/animations</source>
          <target state="translated">@angular/animations</target>
        </trans-unit>
        <trans-unit id="a2394e88013e9804af09d9f4e105d293570226f5" translate="yes" xml:space="preserve">
          <source>@angular/animations/browser</source>
          <target state="translated">@angular/animations/browser</target>
        </trans-unit>
        <trans-unit id="9de55435d30ad98c6faf865f81f9182847e85786" translate="yes" xml:space="preserve">
          <source>@angular/animations/browser/testing</source>
          <target state="translated">@angular/animations/browser/testing</target>
        </trans-unit>
        <trans-unit id="279ff4d8c49a936d48c1a77f46101304c9937d57" translate="yes" xml:space="preserve">
          <source>@angular/common</source>
          <target state="translated">@angular/common</target>
        </trans-unit>
        <trans-unit id="35f25f67f51ac375c4414d902cd89df76b82b645" translate="yes" xml:space="preserve">
          <source>@angular/common/http</source>
          <target state="translated">@angular/common/http</target>
        </trans-unit>
        <trans-unit id="47f28773359d75fd992705276203e7d02f2b769c" translate="yes" xml:space="preserve">
          <source>@angular/common/http/testing</source>
          <target state="translated">@angular/common/http/testing</target>
        </trans-unit>
        <trans-unit id="3b355a74fcf516cb572de7a18d614db5303b78d7" translate="yes" xml:space="preserve">
          <source>@angular/common/testing</source>
          <target state="translated">@angular/common/testing</target>
        </trans-unit>
        <trans-unit id="7bea4c6cce38c2240da9a825337a1a9abcabfd01" translate="yes" xml:space="preserve">
          <source>@angular/common/upgrade</source>
          <target state="translated">@angular/common/upgrade</target>
        </trans-unit>
        <trans-unit id="7010d397973168cac1aaf54fc8228b617d553f9c" translate="yes" xml:space="preserve">
          <source>@angular/core</source>
          <target state="translated">@angular/core</target>
        </trans-unit>
        <trans-unit id="39bfc8055174be719b0e02e58c06f5e4b1620ba9" translate="yes" xml:space="preserve">
          <source>@angular/core/global</source>
          <target state="translated">@angular/core/global</target>
        </trans-unit>
        <trans-unit id="9bd54b448bd160b9bdf56afcc4057d60c863c351" translate="yes" xml:space="preserve">
          <source>@angular/core/testing</source>
          <target state="translated">@angular/core/testing</target>
        </trans-unit>
        <trans-unit id="ed082ffeab17b92963b8e0373f3af558b0f94176" translate="yes" xml:space="preserve">
          <source>@angular/elements</source>
          <target state="translated">@angular/elements</target>
        </trans-unit>
        <trans-unit id="61015e41645b01550c86b2d125f2df9790ce7401" translate="yes" xml:space="preserve">
          <source>@angular/forms</source>
          <target state="translated">@angular/forms</target>
        </trans-unit>
        <trans-unit id="e26f7552c4a1f57a5df62b630b09631ff0e15c6f" translate="yes" xml:space="preserve">
          <source>@angular/http</source>
          <target state="translated">@angular/http</target>
        </trans-unit>
        <trans-unit id="e5d1b49b65dd984864e1410b698461c7d36bda5e" translate="yes" xml:space="preserve">
          <source>@angular/platform-browser</source>
          <target state="translated">@angular/platform-browser</target>
        </trans-unit>
        <trans-unit id="10e672eabc8358c20a1b99d0ae0d31870a79f19b" translate="yes" xml:space="preserve">
          <source>@angular/platform-browser-dynamic</source>
          <target state="translated">@angular/platform-browser-dynamic</target>
        </trans-unit>
        <trans-unit id="6b0aa1ede02b7a3f684f0fe214d166f170c82f71" translate="yes" xml:space="preserve">
          <source>@angular/platform-browser-dynamic/testing</source>
          <target state="translated">@angular/platform-browser-dynamic/testing</target>
        </trans-unit>
        <trans-unit id="2e11f0488a229e528fb4158f7aad4f7a6b2e6b25" translate="yes" xml:space="preserve">
          <source>@angular/platform-browser/animations</source>
          <target state="translated">@angular/platform-browser/animations</target>
        </trans-unit>
        <trans-unit id="9e90112b14f3f9d7405ff5bbf5ac41f6fad23e16" translate="yes" xml:space="preserve">
          <source>@angular/platform-browser/testing</source>
          <target state="translated">@angular/platform-browser/testing</target>
        </trans-unit>
        <trans-unit id="8527c36725a4add493230fab1d1ad63c30bb0603" translate="yes" xml:space="preserve">
          <source>@angular/platform-server</source>
          <target state="translated">@angular/platform-server</target>
        </trans-unit>
        <trans-unit id="410b9a42af4eeb82d92a052802bd26cc2f266e61" translate="yes" xml:space="preserve">
          <source>@angular/platform-server/testing</source>
          <target state="translated">@angular/platform-server/testing</target>
        </trans-unit>
        <trans-unit id="67f37ebc89fe2f40791a45ff79cc707894e40668" translate="yes" xml:space="preserve">
          <source>@angular/platform-webworker</source>
          <target state="translated">@angular/platform-webworker</target>
        </trans-unit>
        <trans-unit id="3643488d6d67c98970cbaf515cefbc9d56955a51" translate="yes" xml:space="preserve">
          <source>@angular/platform-webworker-dynamic</source>
          <target state="translated">@angular/platform-webworker-dynamic</target>
        </trans-unit>
        <trans-unit id="fc052c7d8c63d918f895798a4e19da09a87ad784" translate="yes" xml:space="preserve">
          <source>@angular/router</source>
          <target state="translated">@angular/router</target>
        </trans-unit>
        <trans-unit id="ab028ed01d9416a9fdc050529d3c99ec7d1e802e" translate="yes" xml:space="preserve">
          <source>@angular/router/testing</source>
          <target state="translated">@angular/router/testing</target>
        </trans-unit>
        <trans-unit id="a58e96f1bd36053d73916cb9200cae8facf5140e" translate="yes" xml:space="preserve">
          <source>@angular/router/upgrade</source>
          <target state="translated">@angular/router/upgrade</target>
        </trans-unit>
        <trans-unit id="9228aadf92cf122517fe58f2a91bd6ac28ad425e" translate="yes" xml:space="preserve">
          <source>@angular/service-worker</source>
          <target state="translated">@angular/service-worker</target>
        </trans-unit>
        <trans-unit id="d928864368b17a18265aaba4fdd5747c5ed71c42" translate="yes" xml:space="preserve">
          <source>@angular/upgrade</source>
          <target state="translated">@angular/upgrade</target>
        </trans-unit>
        <trans-unit id="81cf614360a6dce81230ded3f9d85bf8b6d75f48" translate="yes" xml:space="preserve">
          <source>@angular/upgrade/static</source>
          <target state="translated">@angular/upgrade/static</target>
        </trans-unit>
        <trans-unit id="2a3f18aae18753215405f0611d509473191a373f" translate="yes" xml:space="preserve">
          <source>@angular/upgrade/static/testing</source>
          <target state="translated">@angular/upgrade/static/testing</target>
        </trans-unit>
        <trans-unit id="e1f602c3db3647dc32a679dfdcfd6983aef7679b" translate="yes" xml:space="preserve">
          <source>@ngtools/webpack</source>
          <target state="translated">@ngtools/webpack</target>
        </trans-unit>
        <trans-unit id="5b23476195b1b525dc9af48da50385b5d8eb8dd2" translate="yes" xml:space="preserve">
          <source>@schematics/angular</source>
          <target state="translated">@schematics/angular</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="8bd005966c8583098ae25649268c453cb17489f3" translate="yes" xml:space="preserve">
          <source>A &quot;form submit&quot; is useless at the moment. To make it useful, bind the form's &lt;code&gt;ngSubmit&lt;/code&gt; event property to the hero form component's &lt;code&gt;onSubmit()&lt;/code&gt; method:</source>
          <target state="translated">目前，&amp;ldquo;表单提交&amp;rdquo;是没有用的。为了使其有用，请将表单的 &lt;code&gt;ngSubmit&lt;/code&gt; 事件属性绑定到英雄表单组件的 &lt;code&gt;onSubmit()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="65b987ca9a8742f1c3934c570876582add56deb6" translate="yes" xml:space="preserve">
          <source>A 0-based offset into the duration, in milliseconds.</source>
          <target state="translated">以0为基础的偏移到持续时间,以毫秒为单位。</target>
        </trans-unit>
        <trans-unit id="3665e1219b8b49a9a2f30755680374e3a4f069d1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; representing a unique string ID, used primarily for prefixing application attributes and CSS styles when &lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt; is being used.</source>
          <target state="translated">一个表示唯一字符串ID的&lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;，主要用于在使用&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;时为应用程序属性和CSS样式添加前缀。</target>
        </trans-unit>
        <trans-unit id="08724458362287c4dc27bb2e1240bedf41b5b53d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; that indicates the root directory of the application</source>
          <target state="translated">甲&lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;令牌DI&lt;/a&gt;指示应用程序的根目录</target>
        </trans-unit>
        <trans-unit id="1c42ab4a14101ed0dec6b884f9b19a1aa0652ede" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; that maps to the dependency to be injected.</source>
          <target state="translated">一个&lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;，映射到要注入的依赖项。</target>
        </trans-unit>
        <trans-unit id="1bb62952d2aea1dd906af4604765f4b5473daf34" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; that provides a set of callbacks to be called for every component that is bootstrapped.</source>
          <target state="translated">一个&lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;，该令牌提供了一组引导，供每个引导的组件调用。</target>
        </trans-unit>
        <trans-unit id="21e39378e8c575c88f71f6fb04c69ba604876653" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; that you can use to provide one or more initialization functions.</source>
          <target state="translated">一个&lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;，你可以用它来提供一个或多个初始化函数。</target>
        </trans-unit>
        <trans-unit id="c369980a900e3de5edbe23891b4c94301d43b1bc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/glossary/index#di-token&quot;&gt;DI token&lt;/a&gt; for the router initializer that is called after the app is bootstrapped.</source>
          <target state="translated">一个&lt;a href=&quot;../../guide/glossary/index#di-token&quot;&gt;令牌DI&lt;/a&gt;的应用程序是自举后，路由器初始化时调用。</target>
        </trans-unit>
        <trans-unit id="84633910c748bad002ece66ced0127dfa10f310e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/glossary/index#di-token&quot;&gt;DI token&lt;/a&gt; for the router service.</source>
          <target state="translated">一个&lt;a href=&quot;../../guide/glossary/index#di-token&quot;&gt;DI令牌&lt;/a&gt;的路由器服务。</target>
        </trans-unit>
        <trans-unit id="05cbce62175736deed161b23149e79909f9ee6aa" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/structural-directives&quot;&gt;structural directive&lt;/a&gt; that renders a template for each item in a collection. The directive is placed on an element, which becomes the parent of the cloned templates.</source>
          <target state="translated">一种&lt;a href=&quot;../../guide/structural-directives&quot;&gt;结构指令&lt;/a&gt;，为集合中的每个项目呈现一个模板。指令放置在元素上，该元素成为克隆模板的父级。</target>
        </trans-unit>
        <trans-unit id="bfa958f8e1093a8bce449e50451aecb42605adbf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../guide/structural-directives#the-asterisk--prefix&quot;&gt;shorthand form&lt;/a&gt; of the directive, &lt;code&gt;*&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;=&quot;condition&quot;&lt;/code&gt;, is generally used, provided as an attribute of the anchor element for the inserted template. Angular expands this into a more explicit version, in which the anchor element is contained in an &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">甲&lt;a href=&quot;../../guide/structural-directives#the-asterisk--prefix&quot;&gt;速记形式&lt;/a&gt;的指令， &lt;code&gt;*&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;=&quot;condition&quot;&lt;/code&gt; ，通常使用的，作为用于插入模板的锚定元件的属性提供。Angular将其扩展为更明确的版本，其中anchor元素包含在 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; 元素中。</target>
        </trans-unit>
        <trans-unit id="c2a4d7b8c6a75b1c2ee19017270778a56eb5735c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; representing a unique string ID, used primarily for prefixing application attributes and CSS styles when &lt;a href=&quot;core/viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt; is being used.</source>
          <target state="translated">一个表示唯一字符串ID的&lt;a href=&quot;../guide/glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;，主要用于在使用&lt;a href=&quot;core/viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;时为应用程序属性和CSS样式添加前缀。</target>
        </trans-unit>
        <trans-unit id="1ebe84913a73fedea27bbf98b338d7abb64f79f1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; that indicates the root directory of the application</source>
          <target state="translated">甲&lt;a href=&quot;../guide/glossary#di-token&quot;&gt;令牌DI&lt;/a&gt;指示应用程序的根目录</target>
        </trans-unit>
        <trans-unit id="4b90691e5e8983b526b5473fd1988721a7c28b33" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; that provides a set of callbacks to be called for every component that is bootstrapped.</source>
          <target state="translated">一个&lt;a href=&quot;../guide/glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;，该令牌提供了一组引导，供每个引导的组件调用。</target>
        </trans-unit>
        <trans-unit id="a38ba3385eab59d8b4bf0af53d8d55cce6490a4e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; that you can use to provide one or more initialization functions.</source>
          <target state="translated">一个&lt;a href=&quot;../guide/glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;，你可以用它来提供一个或多个初始化函数。</target>
        </trans-unit>
        <trans-unit id="7af8b7462c7bffa9c6b00d7e9a922cb942a24b41" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guide/glossary/index#di-token&quot;&gt;DI token&lt;/a&gt; for the router initializer that is called after the app is bootstrapped.</source>
          <target state="translated">一个&lt;a href=&quot;../guide/glossary/index#di-token&quot;&gt;令牌DI&lt;/a&gt;的应用程序是自举后，路由器初始化时调用。</target>
        </trans-unit>
        <trans-unit id="2167e95d783d64dac9a3583e6f8be0cb7693f606" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guide/glossary/index#di-token&quot;&gt;DI token&lt;/a&gt; for the router service.</source>
          <target state="translated">一个&lt;a href=&quot;../guide/glossary/index#di-token&quot;&gt;DI令牌&lt;/a&gt;的路由器服务。</target>
        </trans-unit>
        <trans-unit id="671a4596a4f24339272ddfe627b37cb5ceee98f4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../guide/structural-directives&quot;&gt;structural directive&lt;/a&gt; that renders a template for each item in a collection. The directive is placed on an element, which becomes the parent of the cloned templates.</source>
          <target state="translated">一种&lt;a href=&quot;../guide/structural-directives&quot;&gt;结构指令&lt;/a&gt;，为集合中的每个项目呈现一个模板。指令放置在元素上，该元素成为克隆模板的父级。</target>
        </trans-unit>
        <trans-unit id="28d80578ea8ec69937675a545d7c84d8b53020fb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;common/locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; used to configure the &lt;a href=&quot;common/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; service to represent its state in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;hash fragment&lt;/a&gt; of the browser's URL.</source>
          <target state="translated">一个&lt;a href=&quot;common/locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; ,&lt;/a&gt;用于配置&lt;a href=&quot;common/location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;服务以在浏览器URL 的&lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;哈希片段&lt;/a&gt;中表示其状态。</target>
        </trans-unit>
        <trans-unit id="e86265c3cf6b32ff2fd9442d3886514cc4425a3f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;common/locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; used to configure the &lt;a href=&quot;common/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; service to represent its state in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;path&lt;/a&gt; of the browser's URL.</source>
          <target state="translated">一个&lt;a href=&quot;common/locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; &lt;/a&gt;用于配置&lt;a href=&quot;common/location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;服务来表示它的状态&lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;路径&lt;/a&gt;浏览器的URL中。</target>
        </trans-unit>
        <trans-unit id="4f6bad214ea94988f7a6681376ce3f9893d5acbc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;glossary#component&quot;&gt;component&lt;/a&gt; class and its associated &lt;a href=&quot;glossary#template&quot;&gt;template&lt;/a&gt; define a view. A view is specifically represented by a &lt;code&gt;&lt;a href=&quot;../api/core/viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; instance associated with a component. A view that belongs immediately to a component is called a &lt;em&gt;host view&lt;/em&gt;. Views are typically collected into &lt;a href=&quot;glossary#view-tree&quot;&gt;view hierarchies&lt;/a&gt;.</source>
          <target state="translated">甲&lt;a href=&quot;glossary#component&quot;&gt;组件&lt;/a&gt;类和其相关联的&lt;a href=&quot;glossary#template&quot;&gt;模板&lt;/a&gt;定义的图。一个视图由与组件关联的 &lt;code&gt;&lt;a href=&quot;../api/core/viewref&quot;&gt;ViewRef&lt;/a&gt;&lt;/code&gt; 实例专门表示。直接属于组件的&lt;em&gt;视图&lt;/em&gt;称为&lt;em&gt;主机视图&lt;/em&gt;。通常将&lt;a href=&quot;glossary#view-tree&quot;&gt;视图&lt;/a&gt;收集到视图层次结构中。</target>
        </trans-unit>
        <trans-unit id="07b53ec1c6e80e65a6a934302fe8fff443c524f5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt; statement immediately before a field in a class definition that declares the type of that field. Some examples are &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;glossary#decorator&quot;&gt;装饰&lt;/a&gt;类定义声明该字段的类型的字段之前立即声明。一些例子是 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63d4d003e26971bd02516b5ffbc56282868ab70a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt; that appears immediately before a class definition, which declares the class to be of the given type, and provides metadata suitable to the type.</source>
          <target state="translated">甲&lt;a href=&quot;glossary#decorator&quot;&gt;装饰&lt;/a&gt;一个类的定义，这为类定义为给定类型的，并且提供的元数据适合于类型之前立即出现。</target>
        </trans-unit>
        <trans-unit id="736883308dcb282a137dbd91ee5819bc7558057c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;glossary#directive&quot;&gt;directive&lt;/a&gt; that acts as a placeholder in a routing component's template. Angular dynamically renders the template based on the current router state.</source>
          <target state="translated">一个&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;充当一个路由组件的模板的占位符。Angular根据当前路由器状态动态渲染模板。</target>
        </trans-unit>
        <trans-unit id="8cc6a0f6df125fb82286558ab003cc9ed2e64056" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;glossary#module&quot;&gt;JavaScript module&lt;/a&gt; that is intended to be imported by a user of &lt;a href=&quot;npm-packages&quot;&gt;an npm package&lt;/a&gt;. An entry-point module typically re-exports symbols from other internal modules. A package can contain multiple entry points. For example, the &lt;code&gt;@angular/core&lt;/code&gt; package has two entry-point modules, which can be imported using the module names &lt;code&gt;@angular/core&lt;/code&gt; and &lt;code&gt;@angular/core/testing&lt;/code&gt;.</source>
          <target state="translated">甲&lt;a href=&quot;glossary#module&quot;&gt;JavaScript的模块&lt;/a&gt;，其意在通过用户导入&lt;a href=&quot;npm-packages&quot;&gt;的NPM包&lt;/a&gt;。入口点模块通常会从其他内部模块重新导出符号。一个包可以包含多个入口点。例如， &lt;code&gt;@angular/core&lt;/code&gt; 软件包有两个入口点模块，可以使用模块名称 &lt;code&gt;@angular/core&lt;/code&gt; 和 &lt;code&gt;@angular/core/testing&lt;/code&gt; 导入它们。</target>
        </trans-unit>
        <trans-unit id="1bd839e877277ad1a0845539091b7fa0d61cf003" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://javascript.info/modules&quot;&gt;JavaScript module&lt;/a&gt; is an individual file with JavaScript code, usually containing a class or a library of functions for a specific purpose within your app. JavaScript modules let you spread your work across multiple files.</source>
          <target state="translated">甲&lt;a href=&quot;https://javascript.info/modules&quot;&gt;JavaScript的模块&lt;/a&gt;是用JavaScript代码的个体文件，通常含有一类或功能的应用程式的内的特定目的的库。JavaScript模块使您可以将工作分散到多个文件中。</target>
        </trans-unit>
        <trans-unit id="add79b6cad225ba3d033ac5074d0537e68619577" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; used to configure the &lt;a href=&quot;location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; service to represent its state in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;hash fragment&lt;/a&gt; of the browser's URL.</source>
          <target state="translated">一个&lt;a href=&quot;locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; ,&lt;/a&gt;用于配置&lt;a href=&quot;location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;服务以在浏览器URL 的&lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;哈希片段&lt;/a&gt;中表示其状态。</target>
        </trans-unit>
        <trans-unit id="8cb01da6d278c41e8f500ba57266b78eeda4112f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; used to configure the &lt;a href=&quot;location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; service to represent its state in the &lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;path&lt;/a&gt; of the browser's URL.</source>
          <target state="translated">一个&lt;a href=&quot;locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; &lt;/a&gt;用于配置&lt;a href=&quot;location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;服务来表示它的状态&lt;a href=&quot;https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax&quot;&gt;路径&lt;/a&gt;浏览器的URL中。</target>
        </trans-unit>
        <trans-unit id="2bbb0a47b63bbf8d048b90ba20a0504e312db21c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;template-syntax#ref-vars&quot;&gt;template reference variable&lt;/a&gt;.</source>
          <target state="translated">甲&lt;a href=&quot;template-syntax#ref-vars&quot;&gt;模板参考变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1bcafa0eb5b956163eeed4a6a75cabbad36df0ec" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;toh-pt5#routerlink&quot;&gt;&lt;code&gt;routerLink&lt;/code&gt; attribute&lt;/a&gt; is set to &lt;code&gt;&quot;/heroes&quot;&lt;/code&gt;, the string that the router matches to the route to &lt;code&gt;HeroesComponent&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; is the selector for the &lt;a href=&quot;../api/router/routerlink&quot;&gt;&lt;code&gt;RouterLink&lt;/code&gt; directive&lt;/a&gt; that turns user clicks into router navigations. It's another of the public directives in the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一个&lt;a href=&quot;toh-pt5#routerlink&quot;&gt; &lt;code&gt;routerLink&lt;/code&gt; 属性&lt;/a&gt;设置为 &lt;code&gt;&quot;/heroes&quot;&lt;/code&gt; ，字符串路由器比赛向航线 &lt;code&gt;HeroesComponent&lt;/code&gt; 。该 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 对于选择&lt;a href=&quot;../api/router/routerlink&quot;&gt; &lt;code&gt;RouterLink&lt;/code&gt; 指令&lt;/a&gt;，轮流用户点击进入路由器导航。这是 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 中的另一个公共指令。</target>
        </trans-unit>
        <trans-unit id="639a482ada343d0e5ad93bfc7d5a941c5b1a2260" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; isn't tied to route configuration, so update the associated router links to remain active when the new route is active. Update the &lt;code&gt;app.component.ts&lt;/code&gt; template for the &lt;code&gt;/heroes&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 是不依赖于路由配置，所以更新相关的路由器链接保持活跃，当新的路由是活动的。更新 &lt;code&gt;/heroes&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;app.component.ts&lt;/code&gt; 模板。</target>
        </trans-unit>
        <trans-unit id="fc4971774abe3d8584810de15a2245c3c6cae43d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing a value and listening to changes on a checkbox input element.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; ,用于写入值并侦听复选框输入元素上的更改。</target>
        </trans-unit>
        <trans-unit id="cd9cf13f7f418773a9187ad3a6e120365e43541c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;core/type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; which has an &lt;code&gt;InjectableDef&lt;/code&gt; static field.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;core/type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; ，其具有 &lt;code&gt;InjectableDef&lt;/code&gt; 静态字段。</target>
        </trans-unit>
        <trans-unit id="a1866590e2a9d78d0830efe2890f1b2b38203b59" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; aggregates the values of each child &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; into an array. It calculates its status by reducing the status values of its children. For example, if one of the controls in a &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; is invalid, the entire array becomes invalid.</source>
          <target state="translated">甲 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 聚集每个孩子的值 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 到一个数组。它通过减少其子代的状态值来计算其状态。例如，如果 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 中的控件之一无效，则整个数组将变为无效。</target>
        </trans-unit>
        <trans-unit id="7b89f06b9f87139e39972a1053c9bc6bca0c91bd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; aggregates the values of each child &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; into one object, with each control name as the key. It calculates its status by reducing the status values of its children. For example, if one of the controls in a group is invalid, the entire group becomes invalid.</source>
          <target state="translated">甲 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 聚集每个孩子的值 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 到一个对象，其中每个控制名作为密钥。它通过减少其子代的状态值来计算其状态。例如，如果组中的一个控件无效，则整个组都将变为无效。</target>
        </trans-unit>
        <trans-unit id="7ef598a60dce9571b1bf71d84f8e3c71d63ad355" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing a value and listening to changes on a checkbox input element.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; ,用于写入值并侦听复选框输入元素上的更改。</target>
        </trans-unit>
        <trans-unit id="66c4eaf792aaeb8d31859e17fd96da17357b8f90" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; object specifying lazy-loaded child routes.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; 对象，用于指定延迟加载的子路由。</target>
        </trans-unit>
        <trans-unit id="63da7a685bae436a5baefed6056ea8939ddd6817" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; (e.g. query &lt;code&gt;&amp;lt;ng-template&amp;gt;&amp;lt;/ng-template&amp;gt;&lt;/code&gt; with &lt;code&gt;@&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;(&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;) template;&lt;/code&gt;)</source>
          <target state="translated">甲 &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; （例如查询 &lt;code&gt;&amp;lt;ng-template&amp;gt;&amp;lt;/ng-template&amp;gt;&lt;/code&gt; 用 &lt;code&gt;@&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;(&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;) template;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a511714d8bf182dc76071d42430897aa3ecbec4c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; which has an &lt;code&gt;InjectableDef&lt;/code&gt; static field.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; ，其具有 &lt;code&gt;InjectableDef&lt;/code&gt; 静态字段。</target>
        </trans-unit>
        <trans-unit id="be187422c88f7b9b30fb7c76cc4c7c623d036f19" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;upgrade/urlcodec&quot;&gt;UrlCodec&lt;/a&gt;&lt;/code&gt; that uses logic from AngularJS to serialize and parse URLs and URL parameters.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;upgrade/urlcodec&quot;&gt;UrlCodec&lt;/a&gt;&lt;/code&gt; ，它使用AngularJS中的逻辑来序列化和解析URL和URL参数。</target>
        </trans-unit>
        <trans-unit id="8aa0947cbfd3ce658b43f4a986bda6fe30e35bb0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;urlcodec&quot;&gt;UrlCodec&lt;/a&gt;&lt;/code&gt; that uses logic from AngularJS to serialize and parse URLs and URL parameters.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;urlcodec&quot;&gt;UrlCodec&lt;/a&gt;&lt;/code&gt; ，它使用AngularJS中的逻辑来序列化和解析URL和URL参数。</target>
        </trans-unit>
        <trans-unit id="f670a48ce55883fb60d1e60146176438b4f9fc8f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Rule&lt;/code&gt; can use external template files, transform them, and return another &lt;code&gt;Rule&lt;/code&gt; object with the transformed template. You can use the templating to generate any custom files required for your schematic.</source>
          <target state="translated">一个 &lt;code&gt;Rule&lt;/code&gt; 可以使用外部模板文件，改造他们，并返回另一个 &lt;code&gt;Rule&lt;/code&gt; 与转换模板对象。您可以使用模板生成原理图所需的任何自定义文件。</target>
        </trans-unit>
        <trans-unit id="6c67da25cb3690615ce138f76204d22676cb05cd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Rule&lt;/code&gt; object defines a function that takes a &lt;code&gt;Tree&lt;/code&gt;, applies transformations, and returns a new &lt;code&gt;Tree&lt;/code&gt;. The main file for a schematic, &lt;code&gt;index.ts&lt;/code&gt;, defines a set of rules that implement the schematic's logic.</source>
          <target state="translated">一个 &lt;code&gt;Rule&lt;/code&gt; 对象定义一个函数，一 &lt;code&gt;Tree&lt;/code&gt; ，应用转换，并返回一个新 &lt;code&gt;Tree&lt;/code&gt; 。原理图的主文件 &lt;code&gt;index.ts&lt;/code&gt; 定义了一组实现原理图逻辑的规则。</target>
        </trans-unit>
        <trans-unit id="638c6d0fa216e5dc64a35311be5238d1c02fe4e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Subject&lt;/code&gt; is both a source of observable values and an &lt;code&gt;Observable&lt;/code&gt; itself. You can subscribe to a &lt;code&gt;Subject&lt;/code&gt; as you would any &lt;code&gt;Observable&lt;/code&gt;.</source>
          <target state="translated">甲 &lt;code&gt;Subject&lt;/code&gt; 既是可观察到的值的源和 &lt;code&gt;Observable&lt;/code&gt; 本身。您可以像订阅任何 &lt;code&gt;Observable&lt;/code&gt; 一样订阅 &lt;code&gt;Subject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f796e4fa4f68f7165ad948a94f7f1758ca29753" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;createComponent&lt;/code&gt; method creates a &lt;code&gt;page&lt;/code&gt; object and fills in the blanks once the &lt;code&gt;hero&lt;/code&gt; arrives.</source>
          <target state="translated">一个 &lt;code&gt;createComponent&lt;/code&gt; 方法创建一个 &lt;code&gt;page&lt;/code&gt; 对象，并填补了空白，一旦 &lt;code&gt;hero&lt;/code&gt; 到来。</target>
        </trans-unit>
        <trans-unit id="78444a00c7b1487feeeec0402985a438a4edf3a4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;download()&lt;/code&gt; method in the &lt;code&gt;DownloaderComponent&lt;/code&gt; initiates the request by subscribing to the service method.</source>
          <target state="translated">甲 &lt;code&gt;download()&lt;/code&gt; 中所述方法 &lt;code&gt;DownloaderComponent&lt;/code&gt; 发起通过订阅服务方法的请求。</target>
        </trans-unit>
        <trans-unit id="705022181dc8804afad6074ba8ac3e641784ceb5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;name&lt;/code&gt; is mandatory. It identifies this particular group of assets between versions of the configuration.</source>
          <target state="translated">一个 &lt;code&gt;name&lt;/code&gt; 是强制性的。它在配置的版本之间标识此特定资产组。</target>
        </trans-unit>
        <trans-unit id="10c6052679f6bf0bc936d7c28d99e11c4be6ccb3" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;Crisis Center&lt;/em&gt; for maintaining the list of crises for assignment to heroes.</source>
          <target state="translated">一个&lt;em&gt;危机中心&lt;/em&gt;保持危机中，为分配到英雄的名单。</target>
        </trans-unit>
        <trans-unit id="3f14306f923e2f4bf4cadb6ead21423f41ee343d" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;Heroes&lt;/em&gt; area for maintaining the list of heroes employed by the agency.</source>
          <target state="translated">&amp;ldquo; &lt;em&gt;英雄&amp;rdquo;&lt;/em&gt;区域，用于维护该机构雇用的英雄列表。</target>
        </trans-unit>
        <trans-unit id="da081d80f84ace307cde80af3645ff2e9eef9fae" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;cold&lt;/em&gt; observable doesn't produce values until you subscribe to it. Most of your application observables are cold. All &lt;a href=&quot;http&quot;&gt;&lt;em&gt;HttpClient&lt;/em&gt;&lt;/a&gt; methods return cold observables.</source>
          <target state="translated">一&lt;em&gt;冷&lt;/em&gt;，直到你订阅了它观察到不产生价值。您的应用程序可观察到的大多数都是冷的。所有&lt;a href=&quot;http&quot;&gt;&lt;em&gt;HttpClient&lt;/em&gt;&lt;/a&gt;方法都返回冷的可观察值。</target>
        </trans-unit>
        <trans-unit id="d7a613682601691a64063c88494e50a72e12af55" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;component-under-test&lt;/em&gt; doesn't have to be injected with real services. In fact, it is usually better if they are test doubles (stubs, fakes, spies, or mocks). The purpose of the spec is to test the component, not the service, and real services can be trouble.</source>
          <target state="translated">一个&lt;em&gt;组件下测试&lt;/em&gt;并没有与真正的服务注入。实际上，如果将它们作为测试双打（存根，伪造品，间谍或模拟品）通常会更好。规范的目的是测试组件而不是服务，而真正的服务可能会很麻烦。</target>
        </trans-unit>
        <trans-unit id="4f385f7ae4f93d341a97d98233959d238340a77d" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;component&lt;/em&gt; controls a patch of screen called a &lt;a href=&quot;glossary#view&quot;&gt;&lt;em&gt;view&lt;/em&gt;&lt;/a&gt;. For example, individual components define and control each of the following views from the &lt;a href=&quot;tutorial&quot;&gt;Tour of Heroes tutorial&lt;/a&gt;:</source>
          <target state="translated">一个&lt;em&gt;组件&lt;/em&gt;控制着一块称为&lt;a href=&quot;glossary#view&quot;&gt;&lt;em&gt;视图&lt;/em&gt;&lt;/a&gt;的屏幕。例如，各个组件定义和控制&lt;a href=&quot;tutorial&quot;&gt;&amp;ldquo;英雄&lt;/a&gt;之旅&amp;rdquo;教程中的以下每个视图：</target>
        </trans-unit>
        <trans-unit id="6780ccccda3402b96f6143330a19b3aeb1ffa0b6" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;component&lt;/em&gt; controls a patch of screen called a &lt;em&gt;view&lt;/em&gt;. For example, individual components define and control each of the following views from the &lt;a href=&quot;tutorial&quot;&gt;Tutorial&lt;/a&gt;:</source>
          <target state="translated">一个&lt;em&gt;组件&lt;/em&gt;控制着一块称为&lt;em&gt;视图&lt;/em&gt;的屏幕。例如，各个组件定义和控制了&lt;a href=&quot;tutorial&quot;&gt;Tutorial&lt;/a&gt;中的以下每个视图：</target>
        </trans-unit>
        <trans-unit id="4e8f8fa8491a780054dbb51957cbec42c3bfabe7" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;component&lt;/em&gt; manages a region of HTML in the manner of a native HTML element. Technically it's a directive with a template.</source>
          <target state="translated">甲&lt;em&gt;组件&lt;/em&gt;管理在本地HTML元素的方式HTML的区域。从技术上讲，这是带有模板的指令。</target>
        </trans-unit>
        <trans-unit id="28cb0670dda43adba7b040a7a2903cac40bc4f8c" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;different&lt;/em&gt; battery of tests can explore whether the application navigates as expected in the presence of conditions that influence guards such as whether the user is authenticated and authorized.</source>
          <target state="translated">甲&lt;em&gt;不同&lt;/em&gt;电池的测试可以探索是否如预期中的条件的情况下应用程序将导航这种影响警卫诸如用户是否认证和授权。</target>
        </trans-unit>
        <trans-unit id="1ecf60bb6e7234367c513185ab06b67468546b87" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;header&lt;/em&gt; node child can be an &lt;em&gt;item&lt;/em&gt; node or another &lt;em&gt;header&lt;/em&gt; node. If your guide page belongs under a sub-header, find that sub-header in the JSON.</source>
          <target state="translated">甲&lt;em&gt;头&lt;/em&gt;节点的孩子可以是&lt;em&gt;项&lt;/em&gt;节点或另一&lt;em&gt;头&lt;/em&gt;节点。如果您的指南页面属于子标题，请在JSON中找到该子标题。</target>
        </trans-unit>
        <trans-unit id="a6e78c0c7440d9a1475224eac8e461df1f4d1910" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;hot&lt;/em&gt; observable is already producing values &lt;em&gt;before&lt;/em&gt; you subscribe to it. The &lt;a href=&quot;../api/router/router#events&quot;&gt;&lt;em&gt;Router.events&lt;/em&gt;&lt;/a&gt; observable, which reports router activity, is a &lt;em&gt;hot&lt;/em&gt; observable.</source>
          <target state="translated">一个&lt;em&gt;热点&lt;/em&gt;观察到已经生产值&lt;em&gt;之前&lt;/em&gt;您订阅。可观察到的&lt;a href=&quot;../api/router/router#events&quot;&gt;&lt;em&gt;Router.events&lt;/em&gt;&lt;/a&gt;报告了路由器的活动，是一个可观察到的&lt;em&gt;热点&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="429f08c3512fd957fd5ba7325869a0c3988fb427" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;locale&lt;/em&gt; identifies a region (such as a country) in which people speak a particular language or language variant. The locale determines the formatting and parsing of dates, times, numbers, and currencies as well as measurement units and the translated names for time zones, languages, and countries.</source>
          <target state="translated">一个&lt;em&gt;区域设置&lt;/em&gt;标识的区域（如国家）中，人们讲某种语言或语言变体。语言环境确定日期，时间，数字和货币以及度量单位的格式和解析，以及时区，语言和国家/地区的转换名称。</target>
        </trans-unit>
        <trans-unit id="2522563b2cdfe71f09ecb80ce5010241ee842471" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;marble frame&lt;/em&gt; is a virtual unit of testing time. Each symbol (&lt;code&gt;-&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;) marks the passing of one frame.</source>
          <target state="translated">甲&lt;em&gt;大理石帧&lt;/em&gt;是测试时间的虚拟单元。每个符号（ &lt;code&gt;-&lt;/code&gt; ， &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;|&lt;/code&gt; ， &lt;code&gt;#&lt;/code&gt; ）标记一帧的通过。</target>
        </trans-unit>
        <trans-unit id="0287d9aa44943985aa24e920490c681de38a6f70" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;provider&lt;/em&gt; is an object that tells an injector how to obtain or create a dependency.</source>
          <target state="translated">甲&lt;em&gt;提供商&lt;/em&gt;是一个对象，讲述了一个喷射器如何获得或创建依赖性。</target>
        </trans-unit>
        <trans-unit id="dd4cdaab79b1c66984ce01f6287162f8aac9fe6e" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;routed component&lt;/em&gt; is the destination of a &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; navigation. It can be trickier to test, especially when the route to the component &lt;em&gt;includes parameters&lt;/em&gt;. The &lt;code&gt;HeroDetailComponent&lt;/code&gt; is a &lt;em&gt;routed component&lt;/em&gt; that is the destination of such a route.</source>
          <target state="translated">甲&lt;em&gt;路由组件&lt;/em&gt;是一个的目的地 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 导航。测试可能会比较棘手，尤其是到组件的路由&lt;em&gt;包含parameters时&lt;/em&gt;。所述 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 是一个&lt;em&gt;路由组件&lt;/em&gt;是这样的路线的目的地。</target>
        </trans-unit>
        <trans-unit id="65403259921593d9fe9e203a711cab5ad7a29b69" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;routing component&lt;/em&gt; is a component that tells the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; to navigate to another component. The &lt;code&gt;DashboardComponent&lt;/code&gt; is a &lt;em&gt;routing component&lt;/em&gt; because the user can navigate to the &lt;code&gt;HeroDetailComponent&lt;/code&gt; by clicking on one of the &lt;em&gt;hero buttons&lt;/em&gt; on the dashboard.</source>
          <target state="translated">一个&lt;em&gt;路由组件&lt;/em&gt;是告诉组件 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 导航到另一个组件。所述 &lt;code&gt;DashboardComponent&lt;/code&gt; 是一个&lt;em&gt;路由组件&lt;/em&gt;，因为用户可以导航到 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 通过点击之一&lt;em&gt;英雄按钮&lt;/em&gt;在仪表板上。</target>
        </trans-unit>
        <trans-unit id="4a4ab23bceb89b16d9f1be68a2a55b882d1d9ca2" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;template input variable&lt;/em&gt; is &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; the same as a &lt;a href=&quot;template-reference-variables&quot;&gt;template &lt;em&gt;reference&lt;/em&gt; variable&lt;/a&gt;, neither &lt;em&gt;semantically&lt;/em&gt; nor &lt;em&gt;syntactically&lt;/em&gt;.</source>
          <target state="translated">甲&lt;em&gt;模板输入变量&lt;/em&gt;是&lt;strong&gt;&lt;em&gt;不&lt;/em&gt;&lt;/strong&gt;一样的一个&lt;a href=&quot;template-reference-variables&quot;&gt;模板&lt;em&gt;参考&lt;/em&gt;变量&lt;/a&gt;，无论是&lt;em&gt;语义上&lt;/em&gt;也不&lt;em&gt;语法&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f44fda8c801c30c6245fab7c9fb64928de21c181" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;template input variable&lt;/em&gt; is &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; the same as a &lt;a href=&quot;template-syntax#ref-vars&quot;&gt;template &lt;em&gt;reference&lt;/em&gt; variable&lt;/a&gt;, neither &lt;em&gt;semantically&lt;/em&gt; nor &lt;em&gt;syntactically&lt;/em&gt;.</source>
          <target state="translated">甲&lt;em&gt;模板输入变量&lt;/em&gt;是&lt;strong&gt;&lt;em&gt;不&lt;/em&gt;&lt;/strong&gt;一样的一个&lt;a href=&quot;template-syntax#ref-vars&quot;&gt;模板&lt;em&gt;参考&lt;/em&gt;变量&lt;/a&gt;，无论是&lt;em&gt;语义上&lt;/em&gt;也不&lt;em&gt;语法&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3390432957501640594fa03bf4b3db1812ce6212" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;template input variable&lt;/em&gt; is a variable whose value you can reference &lt;em&gt;within&lt;/em&gt; a single instance of the template. There are several such variables in this example: &lt;code&gt;hero&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt;. All are preceded by the keyword &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">一个&lt;em&gt;模板输入变量&lt;/em&gt;是一个变量，其值可以参考&lt;em&gt;中&lt;/em&gt;的模板的单个实例。在此示例中，有几个这样的变量： &lt;code&gt;hero&lt;/code&gt; ， &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; 。所有关键字均以 &lt;code&gt;let&lt;/code&gt; 开头。</target>
        </trans-unit>
        <trans-unit id="ee6e5ce5d6e886a13946adcff6c81bdc58af57a9" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;template input variable&lt;/em&gt; is a variable whose value you can reference &lt;em&gt;within&lt;/em&gt; a single instance of the template. There are several such variables in this example: &lt;code&gt;hero&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, and &lt;code&gt;odd&lt;/code&gt;. All are preceded by the keyword &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">一个&lt;em&gt;模板输入变量&lt;/em&gt;是一个变量，其值可以参考&lt;em&gt;中&lt;/em&gt;的模板的单个实例。在此示例中，有几个这样的变量： &lt;code&gt;hero&lt;/code&gt; ， &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;odd&lt;/code&gt; 。所有关键字均以 &lt;code&gt;let&lt;/code&gt; 开头。</target>
        </trans-unit>
        <trans-unit id="9ecfc556e297c7f984423ac98bb2b8133f9a4ac9" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;template reference variable&lt;/strong&gt; is often a reference to a DOM element within a template. It can also refer to a directive (which contains a component), an element, &lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;, or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components&quot;&gt;web component&lt;/a&gt;.</source>
          <target state="translated">甲&lt;strong&gt;模板参考变量&lt;/strong&gt;经常是一个模板内以一个DOM元素的引用。它还可以引用指令（包含组件），元素，&lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;或&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components&quot;&gt;Web组件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5ee6341ca20af13f54afad2702ef692ea841fe9" translate="yes" xml:space="preserve">
          <source>A Boolean expression or function that compares the previous and current animation states, and returns true if this transition should occur. Note that &quot;true&quot; and &quot;false&quot; match 1 and 0, respectively. An expression is evaluated each time a state change occurs in the animation trigger element. The animation steps run when the expression evaluates to true.</source>
          <target state="translated">一个布尔表达式或函数,用于比较上一个和当前的动画状态,如果这个转换应该发生,则返回true。注意,&quot;true &quot;和 &quot;false &quot;分别匹配1和0。每次动画触发元素发生状态变化时,都会评估一个表达式。当表达式评估为真时,动画步骤就会运行。</target>
        </trans-unit>
        <trans-unit id="599809fd82612316228fe38bb0ea1720a7b9dd5a" translate="yes" xml:space="preserve">
          <source>A CSS file for the component styles.</source>
          <target state="translated">一个用于组件样式的CSS文件。</target>
        </trans-unit>
        <trans-unit id="a9abdc794382f88b4186d350695b45ba965e727b" translate="yes" xml:space="preserve">
          <source>A CSS file, &lt;code&gt;&amp;lt;component-name&amp;gt;.component.css&lt;/code&gt;</source>
          <target state="translated">CSS文件 &lt;code&gt;&amp;lt;component-name&amp;gt;.component.css&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="325911946e6c51f270aa14d7b9014525fc242ae5" translate="yes" xml:space="preserve">
          <source>A CSS selector that defines how the component is used in a template</source>
          <target state="translated">一个CSS选择器,用于定义如何在模板中使用该组件。</target>
        </trans-unit>
        <trans-unit id="b4058f8c553b89231956449dda490106299e1981" translate="yes" xml:space="preserve">
          <source>A Chrome browser also opens and displays the test output in the &quot;Jasmine HTML Reporter&quot; like this.</source>
          <target state="translated">Chrome浏览器也会打开并在 &quot;Jasmine HTML Reporter &quot;中显示这样的测试输出。</target>
        </trans-unit>
        <trans-unit id="c0ba6f4f7f04ded94da4b082f8c0437a09402aaf" translate="yes" xml:space="preserve">
          <source>A DI Token representing a unique string id assigned to the application by Angular and used primarily for prefixing application attributes and CSS styles when &lt;a href=&quot;core/viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt; is being used.</source>
          <target state="translated">DI令牌，表示由Angular分配给应用程序的唯一字符串ID，主要用于在使用&lt;a href=&quot;core/viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;时为应用程序属性和CSS样式添加前缀。</target>
        </trans-unit>
        <trans-unit id="b7f7bf6e86152cf166fec0bfcc09711603e31bcb" translate="yes" xml:space="preserve">
          <source>A DI Token representing a unique string id assigned to the application by Angular and used primarily for prefixing application attributes and CSS styles when &lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt; is being used.</source>
          <target state="translated">DI令牌，表示由Angular分配给应用程序的唯一字符串ID，主要用于在使用&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;时为应用程序属性和CSS样式添加前缀。</target>
        </trans-unit>
        <trans-unit id="7f16103dee940de0e134938036f3a37e0da8edf9" translate="yes" xml:space="preserve">
          <source>A DI Token representing the main rendering context. In a browser this is the DOM Document.</source>
          <target state="translated">一个代表主要渲染上下文的DI Token。在浏览器中,这就是DOM文档。</target>
        </trans-unit>
        <trans-unit id="34a19c262ed7d9301354c9b8c7ce2cbc30aa8028" translate="yes" xml:space="preserve">
          <source>A DI token that you can use to create a virtual &lt;a href=&quot;../../guide/glossary#provider&quot;&gt;provider&lt;/a&gt; that will populate the &lt;code&gt;entryComponents&lt;/code&gt; field of components and NgModules based on its &lt;code&gt;&lt;a href=&quot;valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; property value. All components that are referenced in the &lt;code&gt;&lt;a href=&quot;valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; value (either directly or in a nested array or map) are added to the &lt;code&gt;entryComponents&lt;/code&gt; property.</source>
          <target state="translated">可用于创建虚拟&lt;a href=&quot;../../guide/glossary#provider&quot;&gt;提供程序&lt;/a&gt;的DI令牌，该虚拟提供程序将根据其 &lt;code&gt;&lt;a href=&quot;valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; 属性值填充组件和NgModules 的 &lt;code&gt;entryComponents&lt;/code&gt; 字段。 &lt;code&gt;&lt;a href=&quot;valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; 值中引用的所有组件（直接或在嵌套数组或映射中）都添加到 &lt;code&gt;entryComponents&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="70232df0f593e7c10d143cfe89b64fce45313f70" translate="yes" xml:space="preserve">
          <source>A DI token that you can use to create a virtual &lt;a href=&quot;../../guide/glossary#provider&quot;&gt;provider&lt;/a&gt; that will populate the &lt;code&gt;entryComponents&lt;/code&gt; field of components and NgModules based on its &lt;code&gt;useValue&lt;/code&gt; property value. All components that are referenced in the &lt;code&gt;useValue&lt;/code&gt; value (either directly or in a nested array or map) are added to the &lt;code&gt;entryComponents&lt;/code&gt; property.</source>
          <target state="translated">可用于创建虚拟&lt;a href=&quot;../../guide/glossary#provider&quot;&gt;提供程序&lt;/a&gt;的DI令牌，该虚拟提供程序将根据其 &lt;code&gt;useValue&lt;/code&gt; 属性值填充组件和NgModules的 &lt;code&gt;entryComponents&lt;/code&gt; 字段。 &lt;code&gt;useValue&lt;/code&gt; 值中引用的所有组件（直接或在嵌套数组或映射中）都添加到 &lt;code&gt;entryComponents&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="f4aaaddad79edba7b85207af000a6cde392c8d30" translate="yes" xml:space="preserve">
          <source>A DI token that you can use to create a virtual &lt;a href=&quot;../guide/glossary#provider&quot;&gt;provider&lt;/a&gt; that will populate the &lt;code&gt;entryComponents&lt;/code&gt; field of components and NgModules based on its &lt;code&gt;&lt;a href=&quot;core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; property value. All components that are referenced in the &lt;code&gt;&lt;a href=&quot;core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; value (either directly or in a nested array or map) are added to the &lt;code&gt;entryComponents&lt;/code&gt; property.</source>
          <target state="translated">可用于创建虚拟&lt;a href=&quot;../guide/glossary#provider&quot;&gt;提供程序&lt;/a&gt;的DI令牌，该虚拟提供程序将根据其 &lt;code&gt;&lt;a href=&quot;core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; 属性值填充组件和NgModules 的 &lt;code&gt;entryComponents&lt;/code&gt; 字段。 &lt;code&gt;&lt;a href=&quot;core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; 值中引用的所有组件（直接或在嵌套数组或映射中）都添加到 &lt;code&gt;entryComponents&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="372441ce210e4f82a7df974823f5d005424ddafd" translate="yes" xml:space="preserve">
          <source>A DI token that you can use to create a virtual &lt;a href=&quot;../guide/glossary#provider&quot;&gt;provider&lt;/a&gt; that will populate the &lt;code&gt;entryComponents&lt;/code&gt; field of components and NgModules based on its &lt;code&gt;useValue&lt;/code&gt; property value. All components that are referenced in the &lt;code&gt;useValue&lt;/code&gt; value (either directly or in a nested array or map) are added to the &lt;code&gt;entryComponents&lt;/code&gt; property.</source>
          <target state="translated">可用于创建虚拟&lt;a href=&quot;../guide/glossary#provider&quot;&gt;提供程序&lt;/a&gt;的DI令牌，该虚拟提供程序将根据其 &lt;code&gt;useValue&lt;/code&gt; 属性值填充组件和NgModules的 &lt;code&gt;entryComponents&lt;/code&gt; 字段。 &lt;code&gt;useValue&lt;/code&gt; 值中引用的所有组件（直接或在嵌套数组或映射中）都添加到 &lt;code&gt;entryComponents&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="6c6c6ad6dc434b59f3c338cdee09daa910f4fcb1" translate="yes" xml:space="preserve">
          <source>A Directive that adds the &lt;code&gt;required&lt;/code&gt; validator to checkbox controls marked with the &lt;code&gt;required&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将 &lt;code&gt;required&lt;/code&gt; 验证器添加到标有 &lt;code&gt;required&lt;/code&gt; 属性的复选框控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="b287f8f1214950d0e2f03c7ed6dc8f29f0a4fa20" translate="yes" xml:space="preserve">
          <source>A Directive that adds the &lt;code&gt;required&lt;/code&gt; validator to checkbox controls marked with the &lt;code&gt;required&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将 &lt;code&gt;required&lt;/code&gt; 验证器添加到标有 &lt;code&gt;required&lt;/code&gt; 属性的复选框控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="af60e9a597d2c5395c23f65dc9848a9ec136811f" translate="yes" xml:space="preserve">
          <source>A JSON schema associated with a schematic tells the Angular CLI what options are available to commands and subcommands, and determines the defaults. These defaults can be overridden by providing a different value for an option on the command line. See &lt;a href=&quot;workspace-config&quot;&gt;Workspace Configuration&lt;/a&gt; for information about how you can change the generation option defaults for your workspace.</source>
          <target state="translated">与原理图关联的JSON模式会告诉Angular CLI哪些命令和子命令可用选项，并确定默认选项。通过在命令行中为选项提供不同的值，可以覆盖这些默认值。有关如何更改工作空间的生成选项默认值的信息，请参见&lt;a href=&quot;workspace-config&quot;&gt;工作空间配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="576c3fc6feeabf272864a096aed610727c170f4b" translate="yes" xml:space="preserve">
          <source>A Node Express server is a pipeline of middleware that filters and processes requests one after the other. You configure the Node Express server pipeline with calls to &lt;code&gt;app.get()&lt;/code&gt; like this one for data requests.</source>
          <target state="translated">Node Express服务器是中间件的管道，可相互过滤和处理请求。您可以通过对 &lt;code&gt;app.get()&lt;/code&gt; 的调用来配置Node Express服务器管道，以进行数据请求。</target>
        </trans-unit>
        <trans-unit id="9866f48f960862f21acf4991655f3cc3f96cc63a" translate="yes" xml:space="preserve">
          <source>A Node.js Express server is a pipeline of middleware that filters and processes requests one after the other. You configure the Node.js Express server pipeline with calls to &lt;code&gt;server.get()&lt;/code&gt; like this one for data requests.</source>
          <target state="translated">Node.js Express服务器是中间件的管道，可相互过滤和处理请求。您可以通过对 &lt;code&gt;server.get()&lt;/code&gt; 的调用来配置Node.js Express服务器管道，以用于数据请求。</target>
        </trans-unit>
        <trans-unit id="638b2d1ff2d39b9a31cf3cdf34086dca5e31b768" translate="yes" xml:space="preserve">
          <source>A ReflectiveDependency injection container used for instantiating objects and resolving dependencies.</source>
          <target state="translated">一个用于实例化对象和解析依赖关系的ReflectiveDependency注入容器。</target>
        </trans-unit>
        <trans-unit id="59dd0c3f0e2ab9dff2d45116e5f275a7bd7fc27d" translate="yes" xml:space="preserve">
          <source>A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property like &lt;code&gt;innerHTML&lt;/code&gt; that could cause Cross Site Scripting (XSS) security bugs when improperly handled.</source>
          <target state="translated">SecurityContext标记了具有危险安全隐患的位置，例如，诸如 &lt;code&gt;innerHTML&lt;/code&gt; 之类的DOM属性，如果处理不当，可能会导致跨站点脚本（XSS）安全错误。</target>
        </trans-unit>
        <trans-unit id="abf2fe6e840b3478ea12942a2f906e769e970379" translate="yes" xml:space="preserve">
          <source>A TypeScript class to shape the &lt;strong&gt;model data&lt;/strong&gt; for your component and display properties of that model.</source>
          <target state="translated">一个TypeScript类，用于为您的组件塑造&lt;strong&gt;模型数据&lt;/strong&gt;并显示该模型的属性。</target>
        </trans-unit>
        <trans-unit id="2ce514d5a29cc020eab107370f83c5964cc081c9" translate="yes" xml:space="preserve">
          <source>A TypeScript configuration can inherit settings from another file using the &lt;code&gt;extends&lt;/code&gt; property. The configuration options from the base file are loaded first, then overridden by those in the inheriting &lt;code&gt;tsconfig&lt;/code&gt; file.</source>
          <target state="translated">使用 &lt;code&gt;extends&lt;/code&gt; 属性，TypeScript配置可以从另一个文件继承设置。首先加载基本文件中的配置选项，然后由继承的 &lt;code&gt;tsconfig&lt;/code&gt; 文件中的配置选项覆盖。</target>
        </trans-unit>
        <trans-unit id="63e98a8ebbd8b7b207fdc26cb7fdee82848968fd" translate="yes" xml:space="preserve">
          <source>A TypeScript configuration can inherit settings from another file using the &lt;code&gt;extends&lt;/code&gt; property. The configuration options from the base file are loaded first, then overridden by those in the inheriting configuration file.</source>
          <target state="translated">使用 &lt;code&gt;extends&lt;/code&gt; 属性，TypeScript配置可以从另一个文件继承设置。首先加载基本文件中的配置选项，然后由继承的配置文件中的配置选项覆盖。</target>
        </trans-unit>
        <trans-unit id="bf52b0587c806c818b0e66032278502b10c27741" translate="yes" xml:space="preserve">
          <source>A TypeScript file with a component class named &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">一个带有名为 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 的组件类的TypeScript文件。</target>
        </trans-unit>
        <trans-unit id="75ee6a49dc9a24af9ee987b8b0f73148b94a0862" translate="yes" xml:space="preserve">
          <source>A TypeScript-like syntax that Angular evaluates within a &lt;a href=&quot;glossary#data-binding&quot;&gt;data binding&lt;/a&gt;.</source>
          <target state="translated">Angular在&lt;a href=&quot;glossary#data-binding&quot;&gt;数据绑定中&lt;/a&gt;求值的类似于TypeScript的语法。</target>
        </trans-unit>
        <trans-unit id="f4e1869985246ff619d0cd09d72d769c0fca1a1b" translate="yes" xml:space="preserve">
          <source>A Typescript class that defines behavior</source>
          <target state="translated">一个定义行为的Typescript类</target>
        </trans-unit>
        <trans-unit id="d9b532cb4e6dbf28e2ec99b1d5e242df8ee636f8" translate="yes" xml:space="preserve">
          <source>A URL like &lt;code&gt;~/detail/11&lt;/code&gt; would be a good URL for navigating to the &lt;em&gt;Hero Detail&lt;/em&gt; view of the hero whose &lt;code&gt;id&lt;/code&gt; is &lt;code&gt;11&lt;/code&gt;.</source>
          <target state="translated">像 &lt;code&gt;~/detail/11&lt;/code&gt; 这样的URL将是导航到 &lt;code&gt;id&lt;/code&gt; 为 &lt;code&gt;11&lt;/code&gt; 的英雄的&lt;em&gt;Hero Detail&lt;/em&gt;视图的好URL 。</target>
        </trans-unit>
        <trans-unit id="5aa19c3e00b09eff21880f8aeb69b67bf3ae32ff" translate="yes" xml:space="preserve">
          <source>A URL string relative to the full URL string.</source>
          <target state="translated">一个相对于完整URL字符串的URL字符串。</target>
        </trans-unit>
        <trans-unit id="93e7f0f463135d020d0e07a514b4e627a1b7f7fd" translate="yes" xml:space="preserve">
          <source>A URL that defines the ServiceWorker's registration scope; that is, what range of URLs it can control. It will be used when calling &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register&quot;&gt;ServiceWorkerContainer#register()&lt;/a&gt;.</source>
          <target state="translated">定义ServiceWorker注册范围的URL；也就是说，它可以控制的URL范围。调用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register&quot;&gt;ServiceWorkerContainer＃register（）&lt;/a&gt;时将使用它。</target>
        </trans-unit>
        <trans-unit id="87928deb819d7b06c573721d3c82d53581b3ba5a" translate="yes" xml:space="preserve">
          <source>A URL to redirect to when the path matches. Absolute if the URL begins with a slash (/), otherwise relative to the path URL. When not present, router does not redirect.</source>
          <target state="translated">当路径匹配时要重定向到的URL。如果URL以斜线(/)开头,则为绝对值,否则为相对于路径的URL。当不存在时,路由器不重定向。</target>
        </trans-unit>
        <trans-unit id="23e44cf2c0692f9e95579ce06f4b68b8cc6db506" translate="yes" xml:space="preserve">
          <source>A URL to which to redirect when a the path matches. Absolute if the URL begins with a slash (/), otherwise relative to the path URL. When not present, router does not redirect.</source>
          <target state="translated">当路径匹配时要重定向的URL。如果URL以斜杠(/)开头,则为绝对值,否则为相对于路径的URL。当不存在时,路由器不重定向。</target>
        </trans-unit>
        <trans-unit id="46e53a936bddd1e6667ff7ab0bf8ab8e4d5e07b7" translate="yes" xml:space="preserve">
          <source>A Unicode locale identifier is composed of a Unicode language identifier and (optionally) the character &lt;code&gt;-&lt;/code&gt; followed by a locale extension. (For historical reasons the character &lt;code&gt;&lt;a href=&quot;i18n&quot;&gt;_&lt;/a&gt;&lt;/code&gt; is supported as an alternative to &lt;code&gt;-&lt;/code&gt;.) For example, in the locale id &lt;code&gt;fr-CA&lt;/code&gt; the &lt;code&gt;fr&lt;/code&gt; refers to the French language identifier, and the &lt;code&gt;CA&lt;/code&gt; refers to the locale extension Canada.</source>
          <target state="translated">Unicode语言环境标识符由Unicode语言标识符和（可选）字符组成 &lt;code&gt;-&lt;/code&gt; 后跟语言环境扩展名。（出于历史原因，支持字符 &lt;code&gt;&lt;a href=&quot;i18n&quot;&gt;_&lt;/a&gt;&lt;/code&gt; 替代 &lt;code&gt;-&lt;/code&gt; 。）例如，在语言环境ID &lt;code&gt;fr-CA&lt;/code&gt; 中， &lt;code&gt;fr&lt;/code&gt; 表示法语标识符，而 &lt;code&gt;CA&lt;/code&gt; 则表示语言环境扩展名Canada。</target>
        </trans-unit>
        <trans-unit id="9619731a7e9d414367b09313d3267edcaa195536" translate="yes" xml:space="preserve">
          <source>A Universal web server responds to application page requests with static HTML rendered by the &lt;a href=&quot;universal#universal-engine&quot;&gt;Universal template engine&lt;/a&gt;. The server receives and responds to HTTP requests from clients (usually browsers), and serves static assets such as scripts, CSS, and images. It may respond to data requests, either directly or as a proxy to a separate data server.</source>
          <target state="translated">通用Web服务器使用&lt;a href=&quot;universal#universal-engine&quot;&gt;通用模板引擎&lt;/a&gt;呈现的静态HTML响应应用程序页面请求。服务器接收并响应来自客户端（通常是浏览器）的HTTP请求，并提供静态资产，例如脚本，CSS和图像。它可以直接或作为单独数据服务器的代理来响应数据请求。</target>
        </trans-unit>
        <trans-unit id="71378c7a7d2263bf11559901a0f4449137f58c6b" translate="yes" xml:space="preserve">
          <source>A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix parameters associated with the segment.</source>
          <target state="translated">UrlSegment是两个斜杠之间的URL的一部分。它包含一个路径和与该段相关的矩阵参数。</target>
        </trans-unit>
        <trans-unit id="9ed46c4fb7b79a723f886be252ac69b01f25f523" translate="yes" xml:space="preserve">
          <source>A base class for code shared between the &lt;code&gt;&lt;a href=&quot;forms/ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;forms/formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;forms/ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;forms/formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; 指令之间共享的代码的基类。</target>
        </trans-unit>
        <trans-unit id="ca117d436dde1d68583371441cb3950ab4847f85" translate="yes" xml:space="preserve">
          <source>A base class for code shared between the &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; 指令之间共享的代码的基类。</target>
        </trans-unit>
        <trans-unit id="7182c0a975e83c1064ac742ba760051b64c40178" translate="yes" xml:space="preserve">
          <source>A base class for directives that contain multiple registered instances of &lt;code&gt;&lt;a href=&quot;forms/ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt;. Only used by the forms module.</source>
          <target state="translated">包含多个 &lt;code&gt;&lt;a href=&quot;forms/ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt; 注册实例的指令的基类。仅由表单模块使用。</target>
        </trans-unit>
        <trans-unit id="1e18bb4f3363c7c460512b62f5743a20a68eb8d9" translate="yes" xml:space="preserve">
          <source>A base class for directives that contain multiple registered instances of &lt;code&gt;&lt;a href=&quot;ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt;. Only used by the forms module.</source>
          <target state="translated">包含多个 &lt;code&gt;&lt;a href=&quot;ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt; 注册实例的指令的基类。仅由表单模块使用。</target>
        </trans-unit>
        <trans-unit id="096190a79977c14741e1938c2c256ebfb9a219c4" translate="yes" xml:space="preserve">
          <source>A base class that all &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;-based directives extend. It binds a &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; object to a DOM element.</source>
          <target state="translated">所有基于 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的指令扩展的基类。它将 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 对象绑定到DOM元素。</target>
        </trans-unit>
        <trans-unit id="51ae843d848f33537e790740031d0121996326dd" translate="yes" xml:space="preserve">
          <source>A base class that all &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;-based directives extend. It binds a &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; object to a DOM element.</source>
          <target state="translated">所有基于 &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的指令扩展的基类。它将 &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 对象绑定到DOM元素。</target>
        </trans-unit>
        <trans-unit id="072ce3207529e3a0eed654da379d2b96537447aa" translate="yes" xml:space="preserve">
          <source>A base class that all control &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;-based directives extend. It binds a &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; object to a DOM element.</source>
          <target state="translated">所有控件基于 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的指令都扩展的基类。它将 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 对象绑定到DOM元素。</target>
        </trans-unit>
        <trans-unit id="d570abadc21d73601999397b7c63605397538b69" translate="yes" xml:space="preserve">
          <source>A base class that all control &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;-based directives extend. It binds a &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; object to a DOM element.</source>
          <target state="translated">所有控件基于 &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的指令都扩展的基类。它将 &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 对象绑定到DOM元素。</target>
        </trans-unit>
        <trans-unit id="467148334df27df20e018470d39d8ab381750677" translate="yes" xml:space="preserve">
          <source>A basic understanding of the following concepts:</source>
          <target state="translated">对以下概念的基本理解:</target>
        </trans-unit>
        <trans-unit id="a5ab0003f292345413eb8a2b94b3fc4996269aea" translate="yes" xml:space="preserve">
          <source>A basic understanding of the following:</source>
          <target state="translated">对以下内容有基本了解:</target>
        </trans-unit>
        <trans-unit id="a565a4e2917d8bbeaa570825dfd8d8cdd077b189" translate="yes" xml:space="preserve">
          <source>A basic understanding of the information in &lt;a href=&quot;service-worker-intro&quot;&gt;Introduction to Angular service workers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;service-worker-intro&quot;&gt;对Angular Service Worker简介中&lt;/a&gt;信息的基本理解。</target>
        </trans-unit>
        <trans-unit id="a34826f1e38a9b1a10c639f0eb97e5092f011d36" translate="yes" xml:space="preserve">
          <source>A better solution is to create an artificial test component that demonstrates all ways to apply the directive.</source>
          <target state="translated">更好的解决方案是创建一个人工测试组件,演示应用该指令的所有方法。</target>
        </trans-unit>
        <trans-unit id="b3b95dc7d1bbb973732d884b6bf8498d3091aab3" translate="yes" xml:space="preserve">
          <source>A boolean-valued function over a value, possibly including context information regarding that value's position in an array.</source>
          <target state="translated">一个关于值的布尔值函数,可能包括该值在数组中位置的上下文信息。</target>
        </trans-unit>
        <trans-unit id="0f651a3110666c190aff69e1ee84ccbffa0efcba" translate="yes" xml:space="preserve">
          <source>A bootstrap component is automatically added to &lt;code&gt;entryComponents&lt;/code&gt;.</source>
          <target state="translated">引导程序组件会自动添加到 &lt;code&gt;entryComponents&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="f0400004f9940352eb2ae482000bca5e618a3b6f" translate="yes" xml:space="preserve">
          <source>A bootstrapped component &lt;em&gt;is&lt;/em&gt; an &lt;a href=&quot;ngmodule-faq#q-entry-component-defined&quot;&gt;entry component&lt;/a&gt; that Angular loads into the DOM during the bootstrap process (application launch). Other entry components are loaded dynamically by other means, such as with the router.</source>
          <target state="translated">自举部件&lt;em&gt;是&lt;/em&gt;一个&lt;a href=&quot;ngmodule-faq#q-entry-component-defined&quot;&gt;入口部件&lt;/a&gt;，所述引导过程（应用程序启动）期间角加载到DOM。其他入口组件通过其他方式动态加载，例如通过路由器。</target>
        </trans-unit>
        <trans-unit id="9023b1da9696cafc362036418ba09a6af6a2deb3" translate="yes" xml:space="preserve">
          <source>A bootstrapped component is an entry component that Angular loads into the DOM during the bootstrap process (application launch). Other entry components are loaded dynamically by other means, such as with the router.</source>
          <target state="translated">引导组件是Angular在引导过程(应用程序启动)中加载到DOM中的入口组件。其他入口组件是通过其他方式动态加载的,比如用路由器。</target>
        </trans-unit>
        <trans-unit id="a8adc65ce5e0b88cc440c6a6e5fc1619a8cd504b" translate="yes" xml:space="preserve">
          <source>A bootstrapped component is necessarily an entry component because bootstrapping is an imperative process, thus it needs to have an entry component.</source>
          <target state="translated">一个引导组件必然是一个入口组件,因为引导是一个必须的过程,因此它需要有一个入口组件。</target>
        </trans-unit>
        <trans-unit id="2e1e0db9f76bce947aff0501f035cbc1621e10d2" translate="yes" xml:space="preserve">
          <source>A bootstrapped entry component</source>
          <target state="translated">一个引导式条目组件</target>
        </trans-unit>
        <trans-unit id="96324ec4fdb9bd57e96f70085ba8ca376c27e961" translate="yes" xml:space="preserve">
          <source>A breakpoint on the pipe's request for data shows the following:</source>
          <target state="translated">管道请求数据的断点显示如下。</target>
        </trans-unit>
        <trans-unit id="873cd968444320daef92249ea6c5114569cffc7b" translate="yes" xml:space="preserve">
          <source>A build technique that creates two bundles for an application. One smaller bundle is for modern browsers. A second, larger bundle allows the application to run correctly in older browsers (such as IE11) that do not support all modern browser APIs.</source>
          <target state="translated">一种为应用程序创建两个捆绑包的构建技术。一个较小的捆绑包用于现代浏览器。第二个较大的捆绑包允许应用程序在不支持所有现代浏览器API的旧浏览器(如IE11)中正确运行。</target>
        </trans-unit>
        <trans-unit id="ed822ed7d2157779effe7d59d8a3822bc4ca3033" translate="yes" xml:space="preserve">
          <source>A buildable or runnable subset of a &lt;a href=&quot;glossary#project&quot;&gt;project&lt;/a&gt;, configured as an object in the &lt;a href=&quot;workspace-config#project-tool-configuration-options&quot;&gt;workspace configuration file&lt;/a&gt;, and executed by an &lt;a href=&quot;glossary#architect&quot;&gt;Architect&lt;/a&gt;&lt;a href=&quot;glossary#builder&quot;&gt;builder&lt;/a&gt;.</source>
          <target state="translated">一的可构建或可运行的子集&lt;a href=&quot;glossary#project&quot;&gt;的项目&lt;/a&gt;，配置为在对象&lt;a href=&quot;workspace-config#project-tool-configuration-options&quot;&gt;的工作区的配置文件&lt;/a&gt;，并且通过执行&lt;a href=&quot;glossary#architect&quot;&gt;建筑师&lt;/a&gt;&lt;a href=&quot;glossary#builder&quot;&gt;助洗剂&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4eee78994792230b0c3d32e29860f69abdfad63" translate="yes" xml:space="preserve">
          <source>A builder must have a defined target that associates it with a specific input configuration and &lt;a href=&quot;glossary#project&quot;&gt;project&lt;/a&gt;.</source>
          <target state="translated">构建器必须具有已定义的目标，该目标将其与特定的输入配置和&lt;a href=&quot;glossary#project&quot;&gt;项目&lt;/a&gt;相关联。</target>
        </trans-unit>
        <trans-unit id="252f868c89435de5215834180cc5d8c0801b4fc7" translate="yes" xml:space="preserve">
          <source>A builder resides in a &quot;project&quot; folder that is similar in structure to an Angular workspace, with global configuration files at the top level, and more specific configuration in a source folder with the code files that define the behavior. For example, your &lt;code&gt;myBuilder&lt;/code&gt; folder could contain the following files.</source>
          <target state="translated">生成器位于&amp;ldquo;项目&amp;rdquo;文件夹中，该文件夹的结构与Angular工作区相似，全局配置文件位于顶层，而更具体的配置位于具有定义行为的代码文件的源文件夹中。例如，您的 &lt;code&gt;myBuilder&lt;/code&gt; 文件夹可能包含以下文件。</target>
        </trans-unit>
        <trans-unit id="bb3f356af777f070b18dd60f447c94b1885caa8e" translate="yes" xml:space="preserve">
          <source>A callback invoked when rendering has begun.</source>
          <target state="translated">渲染开始时调用的回调。</target>
        </trans-unit>
        <trans-unit id="621621c14914731ff9cc461e46f4734dab9a9e3a" translate="yes" xml:space="preserve">
          <source>A callback invoked when rendering has completed.</source>
          <target state="translated">渲染完成后调用的回调。</target>
        </trans-unit>
        <trans-unit id="e30186c1d00b026b4228eadb9cb84965baed02c2" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after Angular has completed initialization of a component's view. It is invoked only once when the view is instantiated.</source>
          <target state="translated">一个回调方法,在Angular完成组件视图的初始化后立即被调用。它只在实例化视图时被调用一次。</target>
        </trans-unit>
        <trans-unit id="7fe4cd97d1eea7a11fac142b1908b02db4f41095" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after Angular has completed initialization of all of the directive's content. It is invoked only once when the directive is instantiated.</source>
          <target state="translated">一个回调方法,在Angular完成所有指令内容的初始化后立即被调用。它只在指令被实例化时被调用一次。</target>
        </trans-unit>
        <trans-unit id="1b7068e5aab5e739c2621bf44fb181a91e1b6ad2" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after the default change detector has checked data-bound properties if at least one has changed, and before the view and content children are checked.</source>
          <target state="translated">一个回调方法,如果至少有一个属性发生了变化,则在默认变化检测器检查了数据绑定的属性之后,在检查视图和内容子代之前立即调用。</target>
        </trans-unit>
        <trans-unit id="ef37907408bda8f267bff550c619746d82491838" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.</source>
          <target state="translated">一个回调方法,在默认的变更检测器第一次检查了指令的数据绑定属性后,在任何视图或内容子代被检查之前,立即被调用。它只在指令被实例化时被调用一次。</target>
        </trans-unit>
        <trans-unit id="17be15e9e9f2799fb0b7f9e7adb5b4d25c276f51" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after the default change detector has completed checking all of the directive's content.</source>
          <target state="translated">一个回调方法,在默认的变更检测器完成检查指令的所有内容后立即调用。</target>
        </trans-unit>
        <trans-unit id="b3d49829f059326e4cc0c5d42cce6ef8ba22c75d" translate="yes" xml:space="preserve">
          <source>A callback method that is invoked immediately after the default change detector has completed one change-check cycle for a component's view.</source>
          <target state="translated">在默认的变更检测器完成组件视图的一个变更检查周期后立即调用的回调方法。</target>
        </trans-unit>
        <trans-unit id="c9272d31a5c8ffd0e82b22a4c70a377c3c3a39ea" translate="yes" xml:space="preserve">
          <source>A callback method that performs change-detection, invoked after the default change-detector runs. See &lt;code&gt;&lt;a href=&quot;keyvaluediffers&quot;&gt;KeyValueDiffers&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;iterablediffers&quot;&gt;IterableDiffers&lt;/a&gt;&lt;/code&gt; for implementing custom change checking for collections.</source>
          <target state="translated">一种执行更改检测的回调方法，在默认更改检测器运行后调用。有关实现集合的自定义更改检查，请参见 &lt;code&gt;&lt;a href=&quot;keyvaluediffers&quot;&gt;KeyValueDiffers&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;iterablediffers&quot;&gt;IterableDiffers&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d104cace8ea584693965d95cc9257a3a34349247" translate="yes" xml:space="preserve">
          <source>A callback method that performs custom clean-up, invoked immediately after a directive, pipe, or service instance is destroyed.</source>
          <target state="translated">一个执行自定义清理的回调方法,在指令、管道或服务实例被销毁后立即调用。</target>
        </trans-unit>
        <trans-unit id="9d019ac3f68827f438b58c53accb84a0a9b5454e" translate="yes" xml:space="preserve">
          <source>A callback method that performs custom clean-up, invoked immediately before a directive, pipe, or service instance is destroyed.</source>
          <target state="translated">一个执行自定义清理的回调方法,在指令、管道或服务实例被销毁之前立即调用。</target>
        </trans-unit>
        <trans-unit id="56a268cd66316ce2f0d1944547dc2ba1885278a7" translate="yes" xml:space="preserve">
          <source>A category of &lt;a href=&quot;glossary#directive&quot;&gt;directive&lt;/a&gt; that can listen to and modify the behavior of other HTML elements, attributes, properties, and components. They are usually represented as HTML attributes, hence the name.</source>
          <target state="translated">一类&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;，可以侦听和修改其他HTML元素，属性，属性和组件的行为。它们通常表示为HTML属性，因此称为名称。</target>
        </trans-unit>
        <trans-unit id="8f2bd0d4f0242fd6d93c7106c480965ba0a756a0" translate="yes" xml:space="preserve">
          <source>A category of &lt;a href=&quot;glossary#directive&quot;&gt;directive&lt;/a&gt; that is responsible for shaping HTML layout by modifying the DOM&amp;amp;mdashthat is, adding, removing, or manipulating elements and their children.</source>
          <target state="translated">一类&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;，负责通过修改DOM＆mdash来成形HTML布局，即添加，删除或操纵元素及其子元素。</target>
        </trans-unit>
        <trans-unit id="e76eb415fce0aa3049c66f9205a3ceb92e3eb58d" translate="yes" xml:space="preserve">
          <source>A category of &lt;a href=&quot;glossary#directive&quot;&gt;directive&lt;/a&gt; that is responsible for shaping HTML layout by modifying the DOM&amp;mdash;that is, adding, removing, or manipulating elements and their children.</source>
          <target state="translated">一类&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;，负责通过修改DOM（即添加，删除或操纵元素及其子元素）来塑造HTML布局。</target>
        </trans-unit>
        <trans-unit id="343aa9337e55f69912d6d719d5e5805b50eca679" translate="yes" xml:space="preserve">
          <source>A check that runs when form values change and reports whether the given values are correct and complete, according to the defined constraints. Reactive forms apply &lt;a href=&quot;form-validation#adding-to-reactive-forms&quot;&gt;validator functions&lt;/a&gt;. Template-driven forms use &lt;a href=&quot;form-validation#adding-to-template-driven-forms&quot;&gt;validator directives&lt;/a&gt;.</source>
          <target state="translated">当表单值更改时运行的检查，并根据定义的约束报告给定的值是否正确和完整。反应形式应用&lt;a href=&quot;form-validation#adding-to-reactive-forms&quot;&gt;验证器功能&lt;/a&gt;。模板驱动的表单使用&lt;a href=&quot;form-validation#adding-to-template-driven-forms&quot;&gt;验证器指令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d1c2e7542eff3bf00dff1a1de49e08d938a227b" translate="yes" xml:space="preserve">
          <source>A checkbox on the &lt;code&gt;PackageSearchComponent&lt;/code&gt; toggles a &lt;code&gt;withRefresh&lt;/code&gt; flag, which is one of the arguments to &lt;code&gt;PackageSearchService.search()&lt;/code&gt;. That &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; method creates the custom &lt;code&gt;x-refresh&lt;/code&gt; header and adds it to the request before calling &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PackageSearchComponent&lt;/code&gt; 上的复选框将切换 &lt;code&gt;withRefresh&lt;/code&gt; 标志，该标志是 &lt;code&gt;PackageSearchService.search()&lt;/code&gt; 的参数之一。该 &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; 方法创建自定义 &lt;code&gt;x-refresh&lt;/code&gt; 标头，然后将其添加到请求中，然后再调用 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2238becdf367d5fbefe935937a36fa23a96446e7" translate="yes" xml:space="preserve">
          <source>A checkbox on the &lt;code&gt;PackageSearchComponent&lt;/code&gt; toggles a &lt;code&gt;withRefresh&lt;/code&gt; flag, which is one of the arguments to &lt;code&gt;PackageSearchService.search()&lt;/code&gt;. That &lt;code&gt;search()&lt;/code&gt; method creates the custom &lt;code&gt;x-refresh&lt;/code&gt; header and adds it to the request before calling &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PackageSearchComponent&lt;/code&gt; 上的复选框将切换 &lt;code&gt;withRefresh&lt;/code&gt; 标志，该标志是 &lt;code&gt;PackageSearchService.search()&lt;/code&gt; 的参数之一。该 &lt;code&gt;search()&lt;/code&gt; 方法创建自定义的 &lt;code&gt;x-refresh&lt;/code&gt; 标头，然后将其添加到请求中，然后再调用 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9042a7212d60671bc72001876e70a6d3a120216" translate="yes" xml:space="preserve">
          <source>A child route is like any other route, in that it needs both a &lt;code&gt;path&lt;/code&gt; and a &lt;code&gt;component&lt;/code&gt;. The one difference is that you place child routes in a &lt;code&gt;children&lt;/code&gt; array within the parent route.</source>
          <target state="translated">子路径与其他任何路径一样，都需要 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;component&lt;/code&gt; 。一个区别是您将子路径放置在父路径的 &lt;code&gt;children&lt;/code&gt; 数组中。</target>
        </trans-unit>
        <trans-unit id="1ea2dba458600bddeca5f6a66246af12aba09d49" translate="yes" xml:space="preserve">
          <source>A chrome browser also opens and displays the test output in the &quot;Jasmine HTML Reporter&quot; like this.</source>
          <target state="translated">chrome浏览器也会打开并在 &quot;Jasmine HTML Reporter &quot;中显示这样的测试输出。</target>
        </trans-unit>
        <trans-unit id="9be78a60e1ff57a5896ceaf2ec2f63d056169af5" translate="yes" xml:space="preserve">
          <source>A class definition preceded by the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt;&lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt;, which declares and serves as a manifest for a block of code dedicated to an application domain, a workflow, or a closely related set of capabilities.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;glossary#decorator&quot;&gt;装饰器&lt;/a&gt;之前的类定义，该定义器声明并充当专用于应用程序域，工作流或紧密相关的功能集的代码块的清单。</target>
        </trans-unit>
        <trans-unit id="a192bac5ac356be2f3c56d06d6b531d551809cd4" translate="yes" xml:space="preserve">
          <source>A class interface should define &lt;em&gt;only&lt;/em&gt; the members that its consumers are allowed to call. Such a narrowing interface helps decouple the concrete class from its consumers.</source>
          <target state="translated">类接口应&lt;em&gt;仅&lt;/em&gt;定义允许其使用者调用的成员。这种狭窄的接口有助于将具体类别与其消费者分离。</target>
        </trans-unit>
        <trans-unit id="c5a1d26cf05b83059365f38e429b8b641ab34688" translate="yes" xml:space="preserve">
          <source>A class that can modify the structure of the DOM or modify attributes in the DOM and component data model. A directive class definition is immediately preceded by a &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt;&lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt; that supplies metadata.</source>
          <target state="translated">可以修改DOM的结构或修改DOM和组件数据模型中的属性的类。指令类定义之前紧跟提供元数据的 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;glossary#decorator&quot;&gt;装饰器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da749411f2fbf9765df953ad7c145d5c80634633" translate="yes" xml:space="preserve">
          <source>A class that implements the &lt;a href=&quot;../api/router/resolve&quot;&gt;Resolve&lt;/a&gt; interface (or a function with the same signature as the &lt;a href=&quot;../api/router/resolve#resolve&quot;&gt;resolve() method&lt;/a&gt;) that you use to produce or retrieve data that is needed before navigation to a requested route can be completed.</source>
          <target state="translated">一个实现&lt;a href=&quot;../api/router/resolve&quot;&gt;Resolve&lt;/a&gt;接口（或具有与&lt;a href=&quot;../api/router/resolve#resolve&quot;&gt;resolve（）方法&lt;/a&gt;相同的签名的函数）的类，您可以使用该类来生成或检索在导航到请求的路线之前所需的数据。</target>
        </trans-unit>
        <trans-unit id="c3f170876358e49d15b030811c0281e79ed77fa5" translate="yes" xml:space="preserve">
          <source>A class that reflects the state of running &lt;a href=&quot;app_initializer&quot;&gt;&lt;code&gt;APP_INITIALIZER&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">反映正在运行的&lt;a href=&quot;app_initializer&quot;&gt; &lt;code&gt;APP_INITIALIZER&lt;/code&gt; &lt;/a&gt;函数状态的类。</target>
        </trans-unit>
        <trans-unit id="5c93e2c1668e7ec5b3f463c413d9da40e845709b" translate="yes" xml:space="preserve">
          <source>A class that reflects the state of running &lt;a href=&quot;app_initializer&quot;&gt;&lt;code&gt;APP_INITIALIZER&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">反映运行&lt;a href=&quot;app_initializer&quot;&gt; &lt;code&gt;APP_INITIALIZER&lt;/code&gt; &lt;/a&gt;的状态的类。</target>
        </trans-unit>
        <trans-unit id="2586244e33994880aee60d64079107cf48f5c7e6" translate="yes" xml:space="preserve">
          <source>A class that reflects the state of running &lt;a href=&quot;core/app_initializer&quot;&gt;&lt;code&gt;APP_INITIALIZER&lt;/code&gt;&lt;/a&gt; functions.</source>
          <target state="translated">反映正在运行的&lt;a href=&quot;core/app_initializer&quot;&gt; &lt;code&gt;APP_INITIALIZER&lt;/code&gt; &lt;/a&gt;函数状态的类。</target>
        </trans-unit>
        <trans-unit id="b03253d94c1c737d17ecfa0fa8c0a0fc7e00e3f9" translate="yes" xml:space="preserve">
          <source>A class that reflects the state of running &lt;a href=&quot;core/app_initializer&quot;&gt;&lt;code&gt;APP_INITIALIZER&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">反映运行&lt;a href=&quot;core/app_initializer&quot;&gt; &lt;code&gt;APP_INITIALIZER&lt;/code&gt; &lt;/a&gt;的状态的类。</target>
        </trans-unit>
        <trans-unit id="3dce19c2b15b60014a24e007692a61c4cec1cbb0" translate="yes" xml:space="preserve">
          <source>A class that's already declared in another NgModule</source>
          <target state="translated">一个已经在另一个NgModule中声明的类。</target>
        </trans-unit>
        <trans-unit id="15e8cb7a8d71df2ff5451890d3605b823ff71848" translate="yes" xml:space="preserve">
          <source>A class that's already declared in another module, whether an app module, @NgModule, or third-party module.</source>
          <target state="translated">一个已经在其他模块中声明的类,无论是app模块、@NgModule,还是第三方模块。</target>
        </trans-unit>
        <trans-unit id="52cb7c70c205caf15acdbf3dad279a4fc5ab3692" translate="yes" xml:space="preserve">
          <source>A class type that you can add to the &lt;code&gt;declarations&lt;/code&gt; list of an &lt;a href=&quot;glossary#ngmodule&quot;&gt;NgModule&lt;/a&gt;. You can declare &lt;a href=&quot;glossary#component&quot;&gt;components&lt;/a&gt;, &lt;a href=&quot;glossary#directive&quot;&gt;directives&lt;/a&gt;, and &lt;a href=&quot;glossary#pipe&quot;&gt;pipes&lt;/a&gt;.</source>
          <target state="translated">可以添加到&lt;a href=&quot;glossary#ngmodule&quot;&gt;NgModule&lt;/a&gt;的 &lt;code&gt;declarations&lt;/code&gt; 列表中的类类型。您可以声明&lt;a href=&quot;glossary#component&quot;&gt;组件&lt;/a&gt;，&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;和&lt;a href=&quot;glossary#pipe&quot;&gt;管道&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f05301aad6629d6cf06da9c65f1a123c52b3e017" translate="yes" xml:space="preserve">
          <source>A class which is preceded by the &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;{}&lt;/code&gt; decorator and which defines a function that transforms input values to output values for display in a &lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;. Angular defines various pipes, and you can define new pipes.</source>
          <target state="translated">在 &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;{}&lt;/code&gt; 装饰器之前的类，它定义一个函数，该函数将输入值转换为输出值以在&lt;a href=&quot;glossary#view&quot;&gt;视图中&lt;/a&gt;显示。Angular定义了各种管道，您可以定义新管道。</target>
        </trans-unit>
        <trans-unit id="87e85a96b41d60c13372c16732fa1704cdf3acdf" translate="yes" xml:space="preserve">
          <source>A class with the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;&lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt; that associates it with a companion &lt;a href=&quot;glossary#template&quot;&gt;template&lt;/a&gt;. Together, the component and template define a &lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;. A component is a special type of &lt;a href=&quot;glossary#directive&quot;&gt;directive&lt;/a&gt;. The &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator extends the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; decorator with template-oriented features.</source>
          <target state="translated">具有 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;glossary#decorator&quot;&gt;装饰器的&lt;/a&gt;类，该类将其与伴随&lt;a href=&quot;glossary#template&quot;&gt;模板&lt;/a&gt;关联。组件和模板共同定义了一个&lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;。组件是一种特殊类型的&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;。该 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 装饰延伸 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 与面向模板功能的装饰。</target>
        </trans-unit>
        <trans-unit id="49388823188334dd547827fe77c4ca8ca1f425e1" translate="yes" xml:space="preserve">
          <source>A class with the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;&lt;a href=&quot;glossary#decorator&quot;&gt;decorator&lt;/a&gt; that associates it with a companion &lt;a href=&quot;glossary#template&quot;&gt;template&lt;/a&gt;. Together, the component class and template define a &lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;. A component is a special type of &lt;a href=&quot;glossary#directive&quot;&gt;directive&lt;/a&gt;. The &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator extends the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; decorator with template-oriented features.</source>
          <target state="translated">具有 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;glossary#decorator&quot;&gt;装饰器的&lt;/a&gt;类，该类将其与伴随&lt;a href=&quot;glossary#template&quot;&gt;模板&lt;/a&gt;关联。组件类和模板一起定义了一个&lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt;。组件是一种特殊类型的&lt;a href=&quot;glossary#directive&quot;&gt;指令&lt;/a&gt;。该 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 装饰延伸 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 与面向模板功能的装饰。</target>
        </trans-unit>
        <trans-unit id="937214eb5969e76a0181ee0c519da4e56333f19c" translate="yes" xml:space="preserve">
          <source>A codec for encoding and decoding URL parts.</source>
          <target state="translated">一个用于编码和解码URL部分的编解码器。</target>
        </trans-unit>
        <trans-unit id="7d302abe77a94aa1032491a8e0f377e95a4f168a" translate="yes" xml:space="preserve">
          <source>A codec for encoding and decoding parameters in URLs.</source>
          <target state="translated">用于对URL中的参数进行编码和解码的编解码器。</target>
        </trans-unit>
        <trans-unit id="ecea492f54194b72e7632959fcd3e275ec6d043f" translate="yes" xml:space="preserve">
          <source>A collection of Angular &lt;a href=&quot;glossary#project&quot;&gt;projects&lt;/a&gt; (that is, applications and libraries) powered by the &lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt; that are typically co-located in a single source-control repository (such as &lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;).</source>
          <target state="translated">由&lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt;支持的Angular &lt;a href=&quot;glossary#project&quot;&gt;项目&lt;/a&gt;（即应用程序和库）的集合，这些项目通常位于单个源代码控制存储库（例如&lt;a href=&quot;https://git-scm.com/&quot;&gt;git&lt;/a&gt;）中。</target>
        </trans-unit>
        <trans-unit id="e79ba2e8ac6b5b04c6c03c7ee3e2785eb9b7e5a0" translate="yes" xml:space="preserve">
          <source>A collection of child controls. The key for each child is the name under which it is registered.</source>
          <target state="translated">子控件的集合。每个子控件的关键是其注册的名称。</target>
        </trans-unit>
        <trans-unit id="e3c018291c1c8e9ad7721160cc26f0757854e025" translate="yes" xml:space="preserve">
          <source>A collection of matrix and query URL parameters.</source>
          <target state="translated">矩阵和查询URL参数的集合。</target>
        </trans-unit>
        <trans-unit id="02b47ee82f7b322d5994b10809aa0af420e20886" translate="yes" xml:space="preserve">
          <source>A collection of schematics to use in generating the initial app.</source>
          <target state="translated">用于生成初始应用程序的原理图集合。</target>
        </trans-unit>
        <trans-unit id="35817c17df34196664d458d6da1bf6de8adafe3c" translate="yes" xml:space="preserve">
          <source>A collection of schematics to use in generating the initial application.</source>
          <target state="translated">用于生成初始应用程序的原理图集合。</target>
        </trans-unit>
        <trans-unit id="49de467612a944b52b3ee2139bdfbfdf3eb1f6bd" translate="yes" xml:space="preserve">
          <source>A common UI pattern is to show a spinner while the async validation is being performed. The following example presents how to achieve this with template-driven forms:</source>
          <target state="translated">一个常见的UI模式是在执行异步验证时显示一个微调器。下面的例子介绍了如何通过模板驱动的表单来实现这一点。</target>
        </trans-unit>
        <trans-unit id="8f2cc38548e3292bbe0d9ba879bd191b4f73c3e1" translate="yes" xml:space="preserve">
          <source>A common UI pattern is to show a spinner while the async validation is being performed. The following example shows how to achieve this in a template-driven form.</source>
          <target state="translated">一个常见的UI模式是在执行异步验证时显示一个微调器。下面的例子展示了如何在模板驱动的表单中实现这一点。</target>
        </trans-unit>
        <trans-unit id="ce73dbb5d1ae47fbdffe9c0fd617787f054bac11" translate="yes" xml:space="preserve">
          <source>A common pattern in Angular is sharing data between a parent component and one or more child components. You can implement this pattern by using the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; directives.</source>
          <target state="translated">Angular中的一种常见模式是在父组件和一个或多个子组件之间共享数据。您可以使用 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 指令来实现此模式。</target>
        </trans-unit>
        <trans-unit id="73601be2b237a028eed4e60c358bde8f29e0c28d" translate="yes" xml:space="preserve">
          <source>A common point of confusion is between the attribute, &lt;code&gt;colspan&lt;/code&gt;, and the property, &lt;code&gt;colSpan&lt;/code&gt;. Notice that these two names differ by only a single letter.</source>
          <target state="translated">常见的混淆点是属性 &lt;code&gt;colspan&lt;/code&gt; 和属性 &lt;code&gt;colSpan&lt;/code&gt; 之间。请注意，这两个名称只有一个字母不同。</target>
        </trans-unit>
        <trans-unit id="69456c6f954b99f121b55678f6c07297aff78691" translate="yes" xml:space="preserve">
          <source>A common problem of web applications is their slow initial load time. A way to improve it is to apply more granular code-splitting on a component level. To encourage this practice, we&amp;rsquo;ll be working on more ergonomic code-splitting APIs.</source>
          <target state="translated">Web应用程序的一个常见问题是它们的初始加载时间很慢。一种改进的方法是在组件级别上应用更细粒度的代码拆分。为了鼓励这种做法，我们将致力于开发更符合人体工程学的代码拆分API。</target>
        </trans-unit>
        <trans-unit id="885e7fc7945af15a44a7433f76f715e8914300bc" translate="yes" xml:space="preserve">
          <source>A common way to handle events is to pass the event object, &lt;code&gt;$event&lt;/code&gt;, to the method handling the event. The &lt;code&gt;$event&lt;/code&gt; object often contains information the method needs, such as a user's name or an image URL.</source>
          <target state="translated">处理事件的常用方法是将事件对象 &lt;code&gt;$event&lt;/code&gt; 传递给处理事件的方法。在 &lt;code&gt;$event&lt;/code&gt; 对象往往包含信息的方法的需求，如用户的姓名或图片网址。</target>
        </trans-unit>
        <trans-unit id="99b05c916350f6878980197b92e815e9e04cfceb" translate="yes" xml:space="preserve">
          <source>A component and its template together define a &lt;em&gt;view&lt;/em&gt;. A component can contain a &lt;em&gt;view hierarchy&lt;/em&gt;, which allows you to define arbitrarily complex areas of the screen that can be created, modified, and destroyed as a unit. A view hierarchy can mix views defined in components that belong to different NgModules. This is often the case, especially for UI libraries.</source>
          <target state="translated">组件及其模板共同定义了一个&lt;em&gt;视图&lt;/em&gt;。组件可以包含&lt;em&gt;视图层次结构&lt;/em&gt;，该&lt;em&gt;视图层次结构&lt;/em&gt;允许您定义屏幕的任意复杂区域，这些区域可以作为一个单元进行创建，修改和销毁。视图层次结构可以混合在属于不同NgModule的组件中定义的视图。通常是这种情况，尤其是对于UI库。</target>
        </trans-unit>
        <trans-unit id="8beed4fbb0126f7f0007052e50e1d5d70b721129" translate="yes" xml:space="preserve">
          <source>A component can also be bootstrapped imperatively in the module's &lt;code&gt;ngDoBootstrap()&lt;/code&gt; method. The &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt; property tells the compiler that this is an entry component and it should generate code to bootstrap the application with this component.</source>
          <target state="translated">也可以在模块的 &lt;code&gt;ngDoBootstrap()&lt;/code&gt; 方法中强制引导组件。该 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt; 属性告诉编译器，这是入口部件，它应该生成代码来引导与该组件的应用程序。</target>
        </trans-unit>
        <trans-unit id="349d889988965929270cf02c44fe4300103b85b1" translate="yes" xml:space="preserve">
          <source>A component can delegate certain tasks to services, such as fetching data from the server, validating user input, or logging directly to the console. By defining such processing tasks in an &lt;em&gt;injectable service class&lt;/em&gt;, you make those tasks available to any component. You can also make your app more adaptable by injecting different providers of the same kind of service, as appropriate in different circumstances.</source>
          <target state="translated">组件可以将某些任务委托给服务，例如从服务器获取数据，验证用户输入或直接登录到控制台。通过在&lt;em&gt;可注入服务类中&lt;/em&gt;定义此类处理任务，可以使这些任务可用于任何组件。您还可以根据情况在不同情况下注入不同种类的相同服务的提供商，从而使您的应用更具适应性。</target>
        </trans-unit>
        <trans-unit id="b089964fae5995b808c695e4e6ccb3aa1ad7e195" translate="yes" xml:space="preserve">
          <source>A component class can provide services in two ways:</source>
          <target state="translated">一个组件类可以以两种方式提供服务。</target>
        </trans-unit>
        <trans-unit id="4e0698d00f7c06c14c5adbf78185465c6c2d62a2" translate="yes" xml:space="preserve">
          <source>A component consists of three things:</source>
          <target state="translated">一个组件由三样东西组成。</target>
        </trans-unit>
        <trans-unit id="d3deadf277697045847584c362a7d410307968ce" translate="yes" xml:space="preserve">
          <source>A component could be exported for inclusion in an external component's template as well as dynamically loaded in a pop-up dialog.</source>
          <target state="translated">一个组件可以导出到外部组件的模板中,也可以在弹出的对话框中动态加载。</target>
        </trans-unit>
        <trans-unit id="4376fb2839e7c64ec0202336bf07980d7bed69f9" translate="yes" xml:space="preserve">
          <source>A component could be imported from another app module (so you can't declare it) and re-exported by this module.</source>
          <target state="translated">一个组件可以从另一个应用模块导入(所以你不能声明它),然后由这个模块重新导出。</target>
        </trans-unit>
        <trans-unit id="c8224b2c88f45e2e0d1d4bc43fbec26ccaddb28a" translate="yes" xml:space="preserve">
          <source>A component definition that implements the abstract class.</source>
          <target state="translated">一个实现抽象类的组件定义。</target>
        </trans-unit>
        <trans-unit id="3f0018d9ac3de8a0f037aa98debd4be0b91710f9" translate="yes" xml:space="preserve">
          <source>A component factory creates a pure, 100% JavaScript representation of the component that incorporates everything described in its &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata: the HTML, the binding instructions, the attached styles.</source>
          <target state="translated">组件工厂会创建一个纯100％JavaScript表示的组件，其中包含其 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 元数据中描述的所有内容：HTML，绑定说明，附加样式。</target>
        </trans-unit>
        <trans-unit id="7ca9baec5343b3b87182e2a1a6324223b5db317e" translate="yes" xml:space="preserve">
          <source>A component file, &lt;code&gt;&amp;lt;component-name&amp;gt;.component.ts&lt;/code&gt;</source>
          <target state="translated">组件文件 &lt;code&gt;&amp;lt;component-name&amp;gt;.component.ts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb8b1bfad611823c2a3c34eda791bc349a459653" translate="yes" xml:space="preserve">
          <source>A component has a lifecycle managed by Angular.</source>
          <target state="translated">一个组件有一个由Angular管理的生命周期。</target>
        </trans-unit>
        <trans-unit id="280add6e8ec324a17cb196d50312c8e21c6ae6eb" translate="yes" xml:space="preserve">
          <source>A component instance has a lifecycle that starts when Angular instantiates the component class and renders the component view along with its child views. The lifecycle continues with change detection, as Angular checks to see when data-bound properties change, and updates both the view and the component instance as needed. The lifecycle ends when Angular destroys the component instance and removes its rendered template from the DOM. Directives have a similar lifecycle, as Angular creates, updates, and destroys instances in the course of execution.</source>
          <target state="translated">组件实例有一个生命周期,从Angular实例化组件类并渲染组件视图及其子视图开始。生命周期随着变化检测而继续,因为Angular检查数据绑定的属性是否发生变化,并根据需要更新视图和组件实例。当Angular销毁组件实例并从DOM中删除其渲染模板时,生命周期就结束了。指令有类似的生命周期,因为Angular在执行过程中会创建、更新和销毁实例。</target>
        </trans-unit>
        <trans-unit id="dc5e2a63b05a82806539717c333ee5cad057e231" translate="yes" xml:space="preserve">
          <source>A component is a special type of directive, which means that just as &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; has a &lt;code&gt;providers&lt;/code&gt; property, &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; does too. This means that directives as well as components can configure providers, using the &lt;code&gt;providers&lt;/code&gt; property. When you configure a provider for a component or directive using the &lt;code&gt;providers&lt;/code&gt; property, that provider belongs to the &lt;code&gt;ElementInjector&lt;/code&gt; of that component or directive. Components and directives on the same element share an injector.</source>
          <target state="translated">组件是指令的一种特殊类型，这意味着就像 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 具有 &lt;code&gt;providers&lt;/code&gt; 属性一样， &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 也是如此。这意味着指令和组件可以使用 &lt;code&gt;providers&lt;/code&gt; 属性配置提供程序。当使用 &lt;code&gt;providers&lt;/code&gt; 属性为组件或指令配置提供程序时，该提供程序属于该组件或指令的 &lt;code&gt;ElementInjector&lt;/code&gt; 。同一元素上的组件和指令共享一个注射器。</target>
        </trans-unit>
        <trans-unit id="eb35cf391db16a6090f219d3a04cb176787fe7d9" translate="yes" xml:space="preserve">
          <source>A component is technically a directive. However, components are so distinctive and central to Angular applications that Angular defines the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator, which extends the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; decorator with template-oriented features.</source>
          <target state="translated">从技术上讲，组件是指令。但是，组件是如此独特且对Angular应用程序至关重要，因此Angular定义了 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 装饰器，该装饰器通过面向模板的功能扩展了 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 装饰器。</target>
        </trans-unit>
        <trans-unit id="add1d0740c9dbeaff24d9a4e670b5061d080dadb" translate="yes" xml:space="preserve">
          <source>A component loaded &lt;em&gt;declaratively&lt;/em&gt; via its selector is &lt;em&gt;not&lt;/em&gt; an entry component.</source>
          <target state="translated">通过其选择器&lt;em&gt;声明性&lt;/em&gt;加载的组件&lt;em&gt;不是&lt;/em&gt;入口组件。</target>
        </trans-unit>
        <trans-unit id="39781f405ce3d449d20cd226f0eed9481dbe5f83" translate="yes" xml:space="preserve">
          <source>A component must belong to an NgModule in order for it to be available to another component or application. To make it a member of an NgModule, list it in the &lt;code&gt;declarations&lt;/code&gt; field of the &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata.</source>
          <target state="translated">一个组件必须属于NgModule，才能供另一个组件或应用程序使用。要使其成为NgModule的成员，请在 &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 元数据的 &lt;code&gt;declarations&lt;/code&gt; 字段中将其列出。</target>
        </trans-unit>
        <trans-unit id="8e42b0c392b91ddd75a931ad25526b427360d793" translate="yes" xml:space="preserve">
          <source>A component template can &lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;reference&lt;/a&gt; another component, directive, or pipe when the reference is declared in this module or if the imported module has exported it. For example, a component can use the &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;NgFor&lt;/code&gt; directives only if the module has imported the Angular &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; (perhaps indirectly by importing &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">当在该模块中声明了引用或导入的模块已将其导出时，组件模板&lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;可以引用&lt;/a&gt;另一个组件，指令或管道。例如，仅当模块已导入Angular &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; （也许通过导入 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 间接）时，组件才可以使用 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;NgFor&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="64cd250b9979025915cabb6d33b78c1f69b9d52e" translate="yes" xml:space="preserve">
          <source>A component that could serve as a parent &lt;em&gt;should&lt;/em&gt; implement the class interface as the &lt;code&gt;AliceComponent&lt;/code&gt; does.</source>
          <target state="translated">可以用作父级的组件&lt;em&gt;应该&lt;/em&gt;像 &lt;code&gt;AliceComponent&lt;/code&gt; 那样实现类接口。</target>
        </trans-unit>
        <trans-unit id="941975be9e80c257e732d44a8ebcc5fc939e3e3a" translate="yes" xml:space="preserve">
          <source>A component that injects a lightweight injection token might need to invoke a method in the injected class. Because the token is now an abstract class, and the injectable component implements that class, you must also declare an abstract method in the abstract lightweight injection token class. The implementation of the method (with all of its code overhead) resides in the injectable component that can be tree-shaken. This allows the parent to communicate with the child (if it is present) in a type-safe manner.</source>
          <target state="translated">一个注入轻量级注入令牌的组件可能需要调用注入类中的方法。因为令牌现在是一个抽象类,而可注入组件实现了该类,所以您还必须在抽象的轻量级注入令牌类中声明一个抽象方法。该方法的实现(及其所有的代码开销)驻留在可注入组件中,可以树形摇动。这允许父类以类型安全的方式与子类(如果它存在的话)进行通信。</target>
        </trans-unit>
        <trans-unit id="499d23697c7f20e6ec22c3119de0c4a05d9a58e5" translate="yes" xml:space="preserve">
          <source>A component with inputs and outputs typically appears inside the view template of a host component. The host uses a property binding to set the input property and an event binding to listen to events raised by the output property.</source>
          <target state="translated">具有输入和输出的组件通常出现在主机组件的视图模板中。主机使用属性绑定来设置输入属性,使用事件绑定来监听输出属性引发的事件。</target>
        </trans-unit>
        <trans-unit id="d3e1336ad22fdd6630c5534d49b4b6f33d95e613" translate="yes" xml:space="preserve">
          <source>A component you specify in a route definition.</source>
          <target state="translated">途径定义中指定的组件。</target>
        </trans-unit>
        <trans-unit id="1921733ec87213ae324063a594427212b01dfd9e" translate="yes" xml:space="preserve">
          <source>A component, such as &lt;code&gt;ConfigComponent&lt;/code&gt;, injects the &lt;code&gt;ConfigService&lt;/code&gt; and calls the &lt;code&gt;getConfig&lt;/code&gt; service method.</source>
          <target state="translated">诸如 &lt;code&gt;ConfigComponent&lt;/code&gt; 类的组件将注入 &lt;code&gt;ConfigService&lt;/code&gt; 并调用 &lt;code&gt;getConfig&lt;/code&gt; 服务方法。</target>
        </trans-unit>
        <trans-unit id="ddc9abdd56dcae660b1b5fdd43e549b91308f6a9" translate="yes" xml:space="preserve">
          <source>A component, unlike all other parts of an Angular application, combines an HTML template and a TypeScript class. The component truly is the template and the class &lt;em&gt;working together&lt;/em&gt;. To adequately test a component, you should test that they work together as intended.</source>
          <target state="translated">与Angular应用程序的所有其他部分不同，组件将HTML模板和TypeScript类组合在一起。组件确实是模板和类&lt;em&gt;一起工作的&lt;/em&gt;。为了充分测试组件，您应该测试它们是否可以按预期工作。</target>
        </trans-unit>
        <trans-unit id="98e7a6058cbd18c8d57a0d87274cdac45aaecd6d" translate="yes" xml:space="preserve">
          <source>A configuration object that defines a single route. A set of routes are collected in a &lt;code&gt;&lt;a href=&quot;router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; array to define a &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; configuration. The router attempts to match segments of a given URL against each route, using the configuration options defined in this object.</source>
          <target state="translated">定义单个路由的配置对象。在 &lt;code&gt;&lt;a href=&quot;router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; 数组中收集了一组路由，以定义 &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 配置。路由器尝试使用此对象中定义的配置选项，将给定URL的段与每个路由进行匹配。</target>
        </trans-unit>
        <trans-unit id="e647343b7b8f98c675920da38a07c8f9f188b5ed" translate="yes" xml:space="preserve">
          <source>A configuration object that defines a single route. A set of routes are collected in a &lt;code&gt;&lt;a href=&quot;routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; array to define a &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; configuration. The router attempts to match segments of a given URL against each route, using the configuration options defined in this object.</source>
          <target state="translated">定义单个路由的配置对象。在 &lt;code&gt;&lt;a href=&quot;routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; 数组中收集了一组路由，以定义 &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 配置。路由器尝试使用此对象中定义的配置选项，将给定URL的段与每个路由进行匹配。</target>
        </trans-unit>
        <trans-unit id="4520e60162947e0d4f8bc410870de69a92317566" translate="yes" xml:space="preserve">
          <source>A configuration that initializes an NgElementConstructor with the dependencies and strategy it needs to transform a component into a custom element class.</source>
          <target state="translated">一个初始化NgElementConstructor的配置,该配置具有将一个组件转化为自定义元素类所需的依赖性和策略。</target>
        </trans-unit>
        <trans-unit id="5ee57bfc72b82baa4a0dd6579c0dbcb1d2fa549f" translate="yes" xml:space="preserve">
          <source>A configuration that provides initialization information to the created class.</source>
          <target state="translated">为创建的类提供初始化信息的配置。</target>
        </trans-unit>
        <trans-unit id="4b7a75de7a7dd9fd3c6c2e1cb2bcd7c662897553" translate="yes" xml:space="preserve">
          <source>A context object to attach to the &lt;a href=&quot;../core/embeddedviewref&quot;&gt;&lt;code&gt;EmbeddedViewRef&lt;/code&gt;&lt;/a&gt;. This should be an object, the object's keys will be available for binding by the local template &lt;code&gt;let&lt;/code&gt; declarations. Using the key &lt;code&gt;$implicit&lt;/code&gt; in the context object will set its value as default.</source>
          <target state="translated">附加到&lt;a href=&quot;../core/embeddedviewref&quot;&gt; &lt;code&gt;EmbeddedViewRef&lt;/code&gt; 的&lt;/a&gt;上下文对象。这应该是一个对象，该对象的键将可用于由本地模板 &lt;code&gt;let&lt;/code&gt; 声明进行绑定。在上下文对象中使用键 &lt;code&gt;$implicit&lt;/code&gt; 将其值设置为默认值。</target>
        </trans-unit>
        <trans-unit id="8d2d4d92f8439cb0040f95f6d3290be29ab4aa19" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;dirty&lt;/code&gt; if the user has changed the value in the UI.</source>
          <target state="translated">如果用户更改了UI中的值，则控件是 &lt;code&gt;dirty&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="9327f6896bdca186045601aa3c45f1660eb789f4" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;disabled&lt;/code&gt; when its &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;DISABLED&lt;/code&gt;.</source>
          <target state="translated">控制被 &lt;code&gt;disabled&lt;/code&gt; 时，其 &lt;code&gt;status&lt;/code&gt; 为 &lt;code&gt;DISABLED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82fb23ab120d8e1d1e08017df8326c89e3cb2d80" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;enabled&lt;/code&gt; as long as its &lt;code&gt;status&lt;/code&gt; is not &lt;code&gt;DISABLED&lt;/code&gt;.</source>
          <target state="translated">只要控件的 &lt;code&gt;status&lt;/code&gt; 未 &lt;code&gt;DISABLED&lt;/code&gt; 就 &lt;code&gt;enabled&lt;/code&gt; 该控件。</target>
        </trans-unit>
        <trans-unit id="f2ffd744d5627ca35c2757537e16fdf5ec3e29d2" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;invalid&lt;/code&gt; when its &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;INVALID&lt;/code&gt;.</source>
          <target state="translated">控制是 &lt;code&gt;invalid&lt;/code&gt; 时，其 &lt;code&gt;status&lt;/code&gt; 为 &lt;code&gt;INVALID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a47d095af794f1f2d7e0cc865234a5f4331e5e8f" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;pending&lt;/code&gt; when its &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;PENDING&lt;/code&gt;.</source>
          <target state="translated">当控件的 &lt;code&gt;status&lt;/code&gt; 为 &lt;code&gt;PENDING&lt;/code&gt; 时，它处于 &lt;code&gt;pending&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="2361448b385344eb49836b469c86903441a98793" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;pristine&lt;/code&gt; if the user has not yet changed the value in the UI.</source>
          <target state="translated">如果用户尚未更改UI中的值，则控件为 &lt;code&gt;pristine&lt;/code&gt; 控件。</target>
        </trans-unit>
        <trans-unit id="8dedc3e5db6396d4275bcbc93943c800fcb96a11" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;untouched&lt;/code&gt; if the user has not yet triggered a &lt;code&gt;blur&lt;/code&gt; event on it.</source>
          <target state="translated">如果用户尚未触发控件上的 &lt;code&gt;blur&lt;/code&gt; 事件，则控件 &lt;code&gt;untouched&lt;/code&gt; 被触摸。</target>
        </trans-unit>
        <trans-unit id="662ee3af64fa768ec48be3840af08c1ff766946c" translate="yes" xml:space="preserve">
          <source>A control is &lt;code&gt;valid&lt;/code&gt; when its &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;VALID&lt;/code&gt;.</source>
          <target state="translated">控制是 &lt;code&gt;valid&lt;/code&gt; ，当它的 &lt;code&gt;status&lt;/code&gt; 是 &lt;code&gt;VALID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c96dbfe8e7a308aa5f340515594b71ba14d67cb" translate="yes" xml:space="preserve">
          <source>A control is marked &lt;code&gt;touched&lt;/code&gt; once the user has triggered a &lt;code&gt;blur&lt;/code&gt; event on it.</source>
          <target state="translated">一旦用户在控件上触发了 &lt;code&gt;blur&lt;/code&gt; 事件，就将控件标记为已 &lt;code&gt;touched&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="077b31470ebd608b300ba3d8e68f55768bc26f76" translate="yes" xml:space="preserve">
          <source>A control is pending while the control performs async validation.</source>
          <target state="translated">当控件执行异步验证时,控件正在等待。</target>
        </trans-unit>
        <trans-unit id="20010f105963bf11938a19a5e0f2c55c1232a5a2" translate="yes" xml:space="preserve">
          <source>A corresponding function defines a set of parameters for each category, and collects them into a corresponding &lt;code&gt;&lt;a href=&quot;animationmetadata&quot;&gt;AnimationMetadata&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">相应的函数为每个类别定义一组参数，并将它们收集到相应的 &lt;code&gt;&lt;a href=&quot;animationmetadata&quot;&gt;AnimationMetadata&lt;/a&gt;&lt;/code&gt; 对象中。</target>
        </trans-unit>
        <trans-unit id="c4431d17b6bd0b4e139d23f69b87553db73c04b2" translate="yes" xml:space="preserve">
          <source>A couple of extra providers enable routing with &quot;hash&quot; URLs such as &lt;code&gt;#!/phones&lt;/code&gt; instead of the default &quot;push state&quot; strategy.</source>
          <target state="translated">几个额外的提供程序可以使用&amp;ldquo;哈希&amp;rdquo; URL（如 &lt;code&gt;#!/phones&lt;/code&gt; )而不是默认的&amp;ldquo;推送状态&amp;rdquo;策略来进行路由。</target>
        </trans-unit>
        <trans-unit id="0b3b73324dced072c7c998b9b615730a1cfe9df7" translate="yes" xml:space="preserve">
          <source>A couple of observations:</source>
          <target state="translated">几点意见:</target>
        </trans-unit>
        <trans-unit id="cead82c2a3576abd5bbfffd3a278cd74d11896ea" translate="yes" xml:space="preserve">
          <source>A crisis center with child routes</source>
          <target state="translated">有儿童路线的危机中心</target>
        </trans-unit>
        <trans-unit id="d696bc9b7e4bc40435fff12b3833af21db44d854" translate="yes" xml:space="preserve">
          <source>A critical alert.</source>
          <target state="translated">一个严重的警报。</target>
        </trans-unit>
        <trans-unit id="dda359a5b2152b76b3b7c5509f76dff57027bf0a" translate="yes" xml:space="preserve">
          <source>A critical point</source>
          <target state="translated">一个关键点</target>
        </trans-unit>
        <trans-unit id="3c8bfeefb7c281566a1611017b18081b53645b6e" translate="yes" xml:space="preserve">
          <source>A cross-field validator is a &lt;a href=&quot;form-validation#custom-validators&quot;&gt;custom validator&lt;/a&gt; that compares the values of different fields in a form and accepts or rejects them in combination. For example, you might have a form that offers mutually incompatible options, so that if the user can choose A or B, but not both. Some field values might also depend on others; a user might be allowed to choose B only if A is also chosen.</source>
          <target state="translated">跨字段验证器是一种&lt;a href=&quot;form-validation#custom-validators&quot;&gt;自定义验证器&lt;/a&gt;，用于比较表单中不同字段的值，并组合接受或拒绝它们。例如，您可能有一个提供相互不兼容选项的表单，以便用户可以选择A或B，但不能同时选择两者。一些字段值可能还依赖于其他字段值；仅当还选择了A时，才允许用户选择B。</target>
        </trans-unit>
        <trans-unit id="ce6317a4ac2bc019a91d33b9bae2729a5b87ff60" translate="yes" xml:space="preserve">
          <source>A custom URL-matching function. Cannot be used together with &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">自定义URL匹配功能。不能与 &lt;code&gt;path&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="fdafdc4619b6863a9e092a97e8ef06300d64b092" translate="yes" xml:space="preserve">
          <source>A custom element &lt;em&gt;hosts&lt;/em&gt; an Angular component, providing a bridge between the data and logic defined in the component and standard DOM APIs. Component properties and logic maps directly into HTML attributes and the browser's event system.</source>
          <target state="translated">自定义元素&lt;em&gt;承载&lt;/em&gt; Angular组件，在组件和标准DOM API中定义的数据和逻辑之间提供桥梁。组件属性和逻辑直接映射到HTML属性和浏览器的事件系统。</target>
        </trans-unit>
        <trans-unit id="50fbd9a7a05110984303e83f01d313340150d8d9" translate="yes" xml:space="preserve">
          <source>A custom element extends HTML by allowing you to define a tag whose content is created and controlled by JavaScript code. The browser maintains a &lt;code&gt;CustomElementRegistry&lt;/code&gt; of defined custom elements (also called Web Components), which maps an instantiable JavaScript class to an HTML tag.</source>
          <target state="translated">自定义元素通过允许您定义其内容由JavaScript代码创建和控制的标记来扩展HTML。浏览器维护定义的自定义元素（也称为Web组件）的 &lt;code&gt;CustomElementRegistry&lt;/code&gt; ，该元素将可实例化的JavaScript类映射到HTML标记。</target>
        </trans-unit>
        <trans-unit id="6c725e2134906977cd73632a4b80c11367108a21" translate="yes" xml:space="preserve">
          <source>A custom error handler for failed navigations.</source>
          <target state="translated">一个自定义的导航失败的错误处理程序。</target>
        </trans-unit>
        <trans-unit id="02d01b0f56b77bb7d6e1408ef6895eb591a41c22" translate="yes" xml:space="preserve">
          <source>A custom error handler for failed navigations. If the handler returns a value, the navigation Promise is resolved with this value. If the handler throws an exception, the navigation Promise is rejected with the exception.</source>
          <target state="translated">一个自定义的错误处理程序,用于处理失败的导航。如果处理程序返回一个值,则用该值解决导航承诺。如果处理程序抛出一个异常,则用该异常拒绝导航承诺。</target>
        </trans-unit>
        <trans-unit id="1ffa2867cc36c1d87f7f95eef71a929854ba1538" translate="yes" xml:space="preserve">
          <source>A custom event from an interceptor or a backend.</source>
          <target state="translated">来自拦截器或后台的自定义事件。</target>
        </trans-unit>
        <trans-unit id="508d36eb8404c69db7405f018e84a6ca55036f9b" translate="yes" xml:space="preserve">
          <source>A custom handler for malformed URI errors. The handler is invoked when &lt;code&gt;encodedURI&lt;/code&gt; contains invalid character sequences. The default implementation is to redirect to the root URL, dropping any path or parameter information. The function takes three parameters:</source>
          <target state="translated">格式错误的URI错误的自定义处理程序。当 &lt;code&gt;encodedURI&lt;/code&gt; 包含无效字符序列时，将调用处理程序。默认实现是重定向到根URL，删除任何路径或参数信息。该函数具有三个参数：</target>
        </trans-unit>
        <trans-unit id="8a2cf3cd14adbe7b98e625d7305635cef34ff8bf" translate="yes" xml:space="preserve">
          <source>A data flow model where the component tree is always checked for changes in one direction (parent to child), which prevents cycles in the change detection graph.</source>
          <target state="translated">一个数据流模型,其中组件树总是检查一个方向(父到子)的变化,这防止了变化检测图的循环。</target>
        </trans-unit>
        <trans-unit id="210dc781bd3eb286264d5aef72455eddddea7bdc" translate="yes" xml:space="preserve">
          <source>A data service encapsulates these details. It's easier to evolve these details inside the service without affecting its consumers. And it's easier to test the consumers with mock service implementations.</source>
          <target state="translated">数据服务封装了这些细节。在不影响消费者的情况下,在服务内部演化这些细节更容易。而且用模拟服务实现来测试消费者更容易。</target>
        </trans-unit>
        <trans-unit id="5fd0ebebf76062ac0cdbc96c6dac75750fffde56" translate="yes" xml:space="preserve">
          <source>A declarable belongs to one and only one NgModule. A module can list another module among its exports, in which case all of that module's public declaration are exported.</source>
          <target state="translated">一个可声明属于一个且仅属于一个NgModule。一个模块可以将另一个模块列在它的导出中,在这种情况下,该模块的所有公共声明都会被导出。</target>
        </trans-unit>
        <trans-unit id="d9d67cd229281a6464e06b9627732572303daf22" translate="yes" xml:space="preserve">
          <source>A declarable can only belong to one module, so only declare it in one &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. When you need it elsewhere, import the module that has the declarable you need in it.</source>
          <target state="translated">一个申报只能属于一个模块，所以只在一个声明它 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 。当您在其他地方需要它时，导入其中包含您需要声明的模块。</target>
        </trans-unit>
        <trans-unit id="1a3c15ea9c54b23acd006a80632a4370109b2319" translate="yes" xml:space="preserve">
          <source>A decorator on a component class adds the metadata, including a pointer to the associated template.</source>
          <target state="translated">组件类上的装饰器添加元数据,包括指向关联模板的指针。</target>
        </trans-unit>
        <trans-unit id="d9232145f0fa479629bee4a1403931108d3b67c5" translate="yes" xml:space="preserve">
          <source>A default implementation of the &lt;code&gt;&lt;a href=&quot;router/urlserializer&quot;&gt;UrlSerializer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;router/urlserializer&quot;&gt;UrlSerializer&lt;/a&gt;&lt;/code&gt; 的默认实现。</target>
        </trans-unit>
        <trans-unit id="be7410185cfb22d50bdb3dd5b8d69a91b30d1843" translate="yes" xml:space="preserve">
          <source>A default implementation of the &lt;code&gt;&lt;a href=&quot;urlserializer&quot;&gt;UrlSerializer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urlserializer&quot;&gt;UrlSerializer&lt;/a&gt;&lt;/code&gt; 的默认实现。</target>
        </trans-unit>
        <trans-unit id="d5edf00cab75a5f261a00303a58b3784ef41af25" translate="yes" xml:space="preserve">
          <source>A delay value.</source>
          <target state="translated">一个延迟值。</target>
        </trans-unit>
        <trans-unit id="30019a94791709ed7ee12c9d2a7e97d0717eab83" translate="yes" xml:space="preserve">
          <source>A dependency &lt;a href=&quot;glossary#provider&quot;&gt;provider&lt;/a&gt; configures an injector with a &lt;a href=&quot;glossary#di-token&quot;&gt;DI token&lt;/a&gt;, which that injector uses to provide the concrete, runtime version of a dependency value. The injector relies on the provider configuration to create instances of the dependencies that it injects into components, directives, pipes, and other services.</source>
          <target state="translated">依赖项&lt;a href=&quot;glossary#provider&quot;&gt;提供程序&lt;/a&gt;使用&lt;a href=&quot;glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;配置注入器，注入器使用DI令牌提供依赖项值的具体运行时版本。注入程序依赖于提供程序配置来创建将其注入到组件，指令，管道和其他服务中的依赖项的实例。</target>
        </trans-unit>
        <trans-unit id="51f38719f370be9d130886d8c0bd44a8365fee81" translate="yes" xml:space="preserve">
          <source>A dependency can't always be created by the default method of instantiating a class. You learned about some other methods in &lt;a href=&quot;dependency-injection-providers&quot;&gt;Dependency Providers&lt;/a&gt;. The following &lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt; example demonstrates many of the alternatives and why you need them. It's visually simple: a few properties and the logs produced by a logger.</source>
          <target state="translated">不能总是通过实例化类的默认方法来创建依赖项。您了解了&lt;a href=&quot;dependency-injection-providers&quot;&gt;Dependency Providers中的&lt;/a&gt;其他一些方法。以下 &lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt; 示例演示了许多替代方案以及您为什么需要它们。它在视觉上很简单：一些属性和记录器生成的日志。</target>
        </trans-unit>
        <trans-unit id="9f695238eb1ba6e7f4b219ba97b438b3b7e53b33" translate="yes" xml:space="preserve">
          <source>A dependency doesn't have to be a service&amp;mdash;it could be a function, for example, or a value.</source>
          <target state="translated">依赖关系不必一定是服务，例如它可以是一个函数或一个值。</target>
        </trans-unit>
        <trans-unit id="15525a2b2d3a0191259341bf53ae12f208e1ea57" translate="yes" xml:space="preserve">
          <source>A design pattern and mechanism for creating and delivering some parts of an application (dependencies) to other parts of an application that require them.</source>
          <target state="translated">一种设计模式和机制,用于创建应用程序的某些部分(依赖关系)并将其交付给需要它们的应用程序的其他部分。</target>
        </trans-unit>
        <trans-unit id="cbba6be02bb4ee14ea720baacb075129dc0348dc" translate="yes" xml:space="preserve">
          <source>A differ that tracks changes made to an object over time.</source>
          <target state="translated">追踪对象随时间变化的差异。</target>
        </trans-unit>
        <trans-unit id="ba0e47b0105f6046e0b89617ee3f13f2bdf94e04" translate="yes" xml:space="preserve">
          <source>A directive &lt;em&gt;class&lt;/em&gt; is spelled in &lt;em&gt;UpperCamelCase&lt;/em&gt; (&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt;). A directive's &lt;em&gt;attribute name&lt;/em&gt; is spelled in &lt;em&gt;lowerCamelCase&lt;/em&gt; (&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;). The guide refers to the directive &lt;em&gt;class&lt;/em&gt; when talking about its properties and what the directive does. The guide refers to the &lt;em&gt;attribute name&lt;/em&gt; when describing how you apply the directive to an element in the HTML template.</source>
          <target state="translated">指令&lt;em&gt;类&lt;/em&gt;在&lt;em&gt;UpperCamelCase&lt;/em&gt;（ &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; ）中进行拼写。指令的&lt;em&gt;属性名称&lt;/em&gt;在&lt;em&gt;lowerCamelCase&lt;/em&gt;（ &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; ）中拼写。该指南在谈论其属性和该指令的作用时引用了该指令&lt;em&gt;类&lt;/em&gt;。该指南在描述如何将指令应用于HTML模板中的元素时引用了&lt;em&gt;属性名称&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="94d1828685c2b046ca5fbb00127b0088df822914" translate="yes" xml:space="preserve">
          <source>A directive class is usually associated with an HTML element or attribute, and that element or attribute is often referred to as the directive itself. When Angular finds a directive in an HTML &lt;a href=&quot;glossary#template&quot;&gt;template&lt;/a&gt;, it creates the matching directive class instance and gives the instance control over that portion of the browser DOM.</source>
          <target state="translated">指令类通常与HTML元素或属性相关联，并且该元素或属性通常称为指令本身。当Angular在HTML &lt;a href=&quot;glossary#template&quot;&gt;模板中&lt;/a&gt;找到指令时，它将创建匹配的指令类实例，并赋予实例对浏览器DOM的那部分的控制权。</target>
        </trans-unit>
        <trans-unit id="e2eb8b30123eba9d5dc5274c6b45d8e83667dd30" translate="yes" xml:space="preserve">
          <source>A directive could hide the unwanted paragraph instead by setting its &lt;code&gt;display&lt;/code&gt; style to &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">指令可以通过将其 &lt;code&gt;display&lt;/code&gt; 样式设置为 &lt;code&gt;none&lt;/code&gt; 来隐藏不需要的段落。</target>
        </trans-unit>
        <trans-unit id="fc3d1ce63988b28444f381ebc398b6bdf06ac41c" translate="yes" xml:space="preserve">
          <source>A directive has the same set of lifecycle hooks.</source>
          <target state="translated">一个指令有同样的一套生命周期钩子。</target>
        </trans-unit>
        <trans-unit id="eb17837a767841446768a528a4105fa60a1be0ff" translate="yes" xml:space="preserve">
          <source>A directive must belong to exactly one NgModule. Do not re-declare a directive imported from another module. List the directive class in the &lt;code&gt;declarations&lt;/code&gt; field of an NgModule.</source>
          <target state="translated">指令必须完全属于一个NgModule。不要重新声明从另一个模块导入的指令。在NgModule 的 &lt;code&gt;declarations&lt;/code&gt; 字段中列出指令类。</target>
        </trans-unit>
        <trans-unit id="06bab5b2f84f1d83b1636af97cad32ec246881f5" translate="yes" xml:space="preserve">
          <source>A directive that adds max length validation to controls marked with the &lt;code&gt;&lt;a href=&quot;forms/maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将最大长度验证添加到标有 &lt;code&gt;&lt;a href=&quot;forms/maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="dc755aa288617ce267b9847c3b17e76a21d1135a" translate="yes" xml:space="preserve">
          <source>A directive that adds max length validation to controls marked with the &lt;code&gt;&lt;a href=&quot;maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将最大长度验证添加到标有 &lt;code&gt;&lt;a href=&quot;maxlengthvalidator&quot;&gt;maxlength&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="6e258f11d9d85d3806958b19413b937998de3ca2" translate="yes" xml:space="preserve">
          <source>A directive that adds minimum length validation to controls marked with the &lt;code&gt;&lt;a href=&quot;forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; mult-provider list.</source>
          <target state="translated">该指令将最小长度验证添加到标有 &lt;code&gt;&lt;a href=&quot;forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; 属性的控件。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供商列表一起提供。</target>
        </trans-unit>
        <trans-unit id="6108b6e8bd8eba3c4054af4d45141608b2f683ee" translate="yes" xml:space="preserve">
          <source>A directive that adds minimum length validation to controls marked with the &lt;code&gt;&lt;a href=&quot;forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将最小长度验证添加到标有 &lt;code&gt;&lt;a href=&quot;forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="c576fdea0f4345495cbec00241aa643d607047f6" translate="yes" xml:space="preserve">
          <source>A directive that adds minimum length validation to controls marked with the &lt;code&gt;&lt;a href=&quot;minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; mult-provider list.</source>
          <target state="translated">该指令将最小长度验证添加到标有 &lt;code&gt;&lt;a href=&quot;minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; 属性的控件。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供商列表一起提供。</target>
        </trans-unit>
        <trans-unit id="8efc11bb0226ce15a8f8ef691ea95cb130ce8118" translate="yes" xml:space="preserve">
          <source>A directive that adds minimum length validation to controls marked with the &lt;code&gt;&lt;a href=&quot;minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将最小长度验证添加到标有 &lt;code&gt;&lt;a href=&quot;minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="695db7155424e297167bd554b9d87c8adef8366a" translate="yes" xml:space="preserve">
          <source>A directive that adds regex pattern validation to controls marked with the &lt;code&gt;&lt;a href=&quot;forms/patternvalidator&quot;&gt;pattern&lt;/a&gt;&lt;/code&gt; attribute. The regex must match the entire control value. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将正则表达式模式验证添加到标记有 &lt;code&gt;&lt;a href=&quot;forms/patternvalidator&quot;&gt;pattern&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。正则表达式必须与整个控制值匹配。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="0e7995cf0d230fbcb234007e53811a6559246b24" translate="yes" xml:space="preserve">
          <source>A directive that adds regex pattern validation to controls marked with the &lt;code&gt;&lt;a href=&quot;patternvalidator&quot;&gt;pattern&lt;/a&gt;&lt;/code&gt; attribute. The regex must match the entire control value. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将正则表达式模式验证添加到标记有 &lt;code&gt;&lt;a href=&quot;patternvalidator&quot;&gt;pattern&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。正则表达式必须与整个控制值匹配。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="fecaa780233e30f2b7c4f880afba7d4f9c081262" translate="yes" xml:space="preserve">
          <source>A directive that adds the &lt;code&gt;&lt;a href=&quot;emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; validator to controls marked with the &lt;code&gt;&lt;a href=&quot;emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; 验证器添加到标有 &lt;code&gt;&lt;a href=&quot;emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="66ea7083cabb25ae99d85dbbbd48442747569672" translate="yes" xml:space="preserve">
          <source>A directive that adds the &lt;code&gt;&lt;a href=&quot;forms/emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; validator to controls marked with the &lt;code&gt;&lt;a href=&quot;forms/emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;forms/emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; 验证器添加到标有 &lt;code&gt;&lt;a href=&quot;forms/emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt; 属性的控件的指令。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="e5b20651be4b4c212b50703b3396740bdd0ebf00" translate="yes" xml:space="preserve">
          <source>A directive that adds the &lt;code&gt;required&lt;/code&gt; validator to any controls marked with the &lt;code&gt;required&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">该指令将 &lt;code&gt;required&lt;/code&gt; 验证器添加到标有 &lt;code&gt;required&lt;/code&gt; 属性的所有控件中。伪指令随 &lt;code&gt;&lt;a href=&quot;forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="27d5b01c46cf928af7627e24610db90e1b702841" translate="yes" xml:space="preserve">
          <source>A directive that adds the &lt;code&gt;required&lt;/code&gt; validator to any controls marked with the &lt;code&gt;required&lt;/code&gt; attribute. The directive is provided with the &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; multi-provider list.</source>
          <target state="translated">该指令将 &lt;code&gt;required&lt;/code&gt; 验证器添加到标有 &lt;code&gt;required&lt;/code&gt; 属性的所有控件中。伪指令随 &lt;code&gt;&lt;a href=&quot;ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; 多提供者列表一起提供。</target>
        </trans-unit>
        <trans-unit id="0540f8499c507f38f8fb31d44a122a56e3f34181" translate="yes" xml:space="preserve">
          <source>A distinct application feature or workflow may be &lt;em&gt;lazy loaded&lt;/em&gt; or &lt;em&gt;loaded on demand&lt;/em&gt; rather than when the application starts.</source>
          <target state="translated">可以&lt;em&gt;延迟加载&lt;/em&gt;或&lt;em&gt;按需&lt;/em&gt;&lt;em&gt;加载&lt;/em&gt;特定的应用程序功能或工作流&lt;em&gt;，&lt;/em&gt;而不是在应用程序启动时&lt;em&gt;加载&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1eb6bea4ff9b8beaa04011a217d05d9557306c38" translate="yes" xml:space="preserve">
          <source>A domain NgModule organizes the code related to a certain function, containing all of the components, routing, and templates that make up the function. Your top component in the domain NgModule acts as the feature or domain's root, and is the only component you export. Private supporting subcomponents descend from it.</source>
          <target state="translated">一个域NgModule组织了与某个功能相关的代码,包含了组成该功能的所有组件、路由和模板。你在域NgModule中的顶级组件作为功能或域的根,是你导出的唯一组件。私有的支持性子组件从它那里降下来。</target>
        </trans-unit>
        <trans-unit id="0e65175079f38d7882ce624afc0a013c9135750a" translate="yes" xml:space="preserve">
          <source>A dot-delimited string or array of string/number values that define the path to the control.</source>
          <target state="translated">一个以点分隔的字符串或字符串/数字值的数组,定义了控件的路径。</target>
        </trans-unit>
        <trans-unit id="6b086b3a868f0313eed50c2f74d7d107c8d6b457" translate="yes" xml:space="preserve">
          <source>A download progress event was received.</source>
          <target state="translated">收到了一个下载进度事件。</target>
        </trans-unit>
        <trans-unit id="bf1fd3090342831e8febf29fa6ce244224f91de8" translate="yes" xml:space="preserve">
          <source>A download progress event.</source>
          <target state="translated">一个下载进度事件。</target>
        </trans-unit>
        <trans-unit id="0b2f0df2707b012177ae022e3a57726cb45c379b" translate="yes" xml:space="preserve">
          <source>A dynamic form requires an object model that can describe all scenarios needed by the form functionality. The example hero-application form is a set of questions&amp;mdash;that is, each control in the form must ask a question and accept an answer.</source>
          <target state="translated">动态表单需要一个对象模型，该对象模型可以描述表单功能所需的所有方案。示例性的英雄应用程序表单是一组问题，也就是说，表单中的每个控件都必须提出问题并接受答案。</target>
        </trans-unit>
        <trans-unit id="f9e9d69b64d87f54aef3ffc12cf639199159b805" translate="yes" xml:space="preserve">
          <source>A dynamic form uses a service to create grouped sets of input controls, based on the form model. The following &lt;code&gt;QuestionControlService&lt;/code&gt; collects a set of &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instances that consume the metadata from the question model. You can specify default values and validation rules.</source>
          <target state="translated">动态表单使用服务根据表单模型创建输入控件的分组集合。以下 &lt;code&gt;QuestionControlService&lt;/code&gt; 收集了一组使用问题模型中元数据的 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 实例。您可以指定默认值和验证规则。</target>
        </trans-unit>
        <trans-unit id="c274fbd2f10d6758f7cee43a610ad84394d5ef5e" translate="yes" xml:space="preserve">
          <source>A factory for creating a Compiler</source>
          <target state="translated">用于创建编译器的工厂</target>
        </trans-unit>
        <trans-unit id="13178cecedfd2e1789373fa7414c20e56c226794" translate="yes" xml:space="preserve">
          <source>A factory function that returns a &lt;code&gt;&lt;a href=&quot;../core/platformref&quot;&gt;PlatformRef&lt;/a&gt;&lt;/code&gt; instance associated with browser service providers.</source>
          <target state="translated">一个工厂函数，该函数返回与浏览器服务提供者关联的 &lt;code&gt;&lt;a href=&quot;../core/platformref&quot;&gt;PlatformRef&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="7f8d36a12b934ff22ab86e8c23f3cc869825223b" translate="yes" xml:space="preserve">
          <source>A factory function that returns a &lt;code&gt;&lt;a href=&quot;core/platformref&quot;&gt;PlatformRef&lt;/a&gt;&lt;/code&gt; instance associated with browser service providers.</source>
          <target state="translated">一个工厂函数，该函数返回与浏览器服务提供者关联的 &lt;code&gt;&lt;a href=&quot;core/platformref&quot;&gt;PlatformRef&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="dcb9b28f9ee950cd3bc74acd3a0473356aed355b" translate="yes" xml:space="preserve">
          <source>A factory object returned from the &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;.&lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 返回的工厂对象。 &lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="3bb2b6cb44a47bc6b53280d3511a8e67672f2032" translate="yes" xml:space="preserve">
          <source>A factory object returned from the &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;.&lt;code&gt;build()&lt;/code&gt; method.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 返回的工厂对象。 &lt;code&gt;build()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="dfbb3a312624d276c0ae06bf2036ff66b531cb9d" translate="yes" xml:space="preserve">
          <source>A factory object returned from the &lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;.&lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 返回的工厂对象。 &lt;code&gt;&lt;a href=&quot;animations&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="35e63cb078a72553634c9dd9e7e687d0c012cc2a" translate="yes" xml:space="preserve">
          <source>A factory object returned from the &lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt;.&lt;code&gt;build()&lt;/code&gt; method.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;animations/animationbuilder&quot;&gt;AnimationBuilder&lt;/a&gt;&lt;/code&gt; 返回的工厂对象。 &lt;code&gt;build()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="950344dd2008bd842b31f199f0c2f6a76dc90bcc" translate="yes" xml:space="preserve">
          <source>A factory provider needs a factory function.</source>
          <target state="translated">工厂供应商需要一个工厂功能。</target>
        </trans-unit>
        <trans-unit id="9af1374f1b3a2d447374063ec0d712c6b3c1abfe" translate="yes" xml:space="preserve">
          <source>A feature module is an organizational best practice, as opposed to a concept of the core Angular API. A feature module delivers a cohesive set of functionality focused on a specific application need such as a user workflow, routing, or forms. While you can do everything within the root module, feature modules help you partition the app into focused areas. A feature module collaborates with the root module and with other modules through the services it provides and the components, directives, and pipes that it shares.</source>
          <target state="translated">功能模块是一种组织上的最佳实践,与核心Angular API的概念相对。一个功能模块提供了一套专注于特定应用需求的凝聚性功能,如用户工作流、路由或表单。虽然你可以在根模块中做所有的事情,但功能模块可以帮助你将应用划分为重点区域。一个功能模块通过它提供的服务和它共享的组件、指令和管道与根模块以及其他模块协作。</target>
        </trans-unit>
        <trans-unit id="8a3f10b61215f1ebd7d50bf9977a58ca5d7430ea" translate="yes" xml:space="preserve">
          <source>A few HTML attributes have 1:1 mapping to properties; for example, &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">一些HTML属性具有1：1映射到属性的属性；例如， &lt;code&gt;id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cab7e438a119824aa31b72befbf1582a5325059e" translate="yes" xml:space="preserve">
          <source>A few examples are:</source>
          <target state="translated">以下是几个例子:</target>
        </trans-unit>
        <trans-unit id="c6ee2c2b25cb84877c6a129970f10826dc9e4acb" translate="yes" xml:space="preserve">
          <source>A few of the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; instance methods are not covered by static &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;&lt;em&gt;class&lt;/em&gt; methods. These are rarely needed.</source>
          <target state="translated">静态 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; &lt;em&gt;类&lt;/em&gt;方法未涵盖一些 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 实例方法。这些很少需要。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe024a04a32763b23cf4aab61238ff280ef8b6c1" translate="yes" xml:space="preserve">
          <source>A few techniques are noteworthy:</source>
          <target state="translated">有几个技术值得注意。</target>
        </trans-unit>
        <trans-unit id="a9b6cd4fe72242d6d017b5e2e509342ea11bb39c" translate="yes" xml:space="preserve">
          <source>A few terms are unambiguously services. They typically indicate agency by ending in &quot;-er&quot;. You may prefer to name a service that logs messages &lt;code&gt;Logger&lt;/code&gt; rather than &lt;code&gt;LoggerService&lt;/code&gt;. Decide if this exception is agreeable in your project. As always, strive for consistency.</source>
          <target state="translated">毫无疑问，有几项服务。它们通常以&amp;ldquo; -er&amp;rdquo;结尾指示代理。您可能更喜欢将服务命名为记录消息 &lt;code&gt;Logger&lt;/code&gt; 的服务，而不是 &lt;code&gt;LoggerService&lt;/code&gt; 。确定此异常在您的项目中是否可以接受。一如既往地争取一致性。</target>
        </trans-unit>
        <trans-unit id="4b0543f1b2e2dc773052225d03a3ed8562e5819b" translate="yes" xml:space="preserve">
          <source>A file named &lt;code&gt;angular.json&lt;/code&gt; at the root level of an Angular &lt;a href=&quot;glossary#workspace&quot;&gt;workspace&lt;/a&gt; provides workspace-wide and project-specific configuration defaults for build and development tools provided by the Angular CLI. Path values given in the configuration are relative to the root workspace folder.</source>
          <target state="translated">Angular &lt;a href=&quot;glossary#workspace&quot;&gt;工作空间&lt;/a&gt;的根级别的名为 &lt;code&gt;angular.json&lt;/code&gt; 的文件为Angular CLI提供的构建和开发工具提供了工作空间范围和项目特定的配置默认值。配置中给出的路径值是相对于根工作区文件夹的。</target>
        </trans-unit>
        <trans-unit id="cdb64896ccc0908fbd528f490c377372ffb24bd2" translate="yes" xml:space="preserve">
          <source>A file named &lt;code&gt;angular.json&lt;/code&gt; at the root level of an Angular &lt;a href=&quot;glossary#workspace&quot;&gt;workspace&lt;/a&gt; provides workspace-wide and project-specific configuration defaults for build and development tools that are provided by or integrated with the &lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt;.</source>
          <target state="translated">Angular &lt;a href=&quot;glossary#workspace&quot;&gt;工作空间&lt;/a&gt;的根级别的名为 &lt;code&gt;angular.json&lt;/code&gt; 的文件为&lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt;提供或集成的构建和开发工具提供了工作空间范围内和特定于项目的配置默认值。</target>
        </trans-unit>
        <trans-unit id="1bef64fe13151ffc90fde1cc8e6483f43af6510c" translate="yes" xml:space="preserve">
          <source>A file specifies the root files and the compiler options required to compile a TypeScript project. For more information, see &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript configuration&lt;/a&gt;.</source>
          <target state="translated">文件指定编译TypeScript项目所需的根文件和编译器选项。有关更多信息，请参见&lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c5daab9e4b40930ffc67ad08f9f7e944f2c8b0d" translate="yes" xml:space="preserve">
          <source>A final &lt;code&gt;&lt;a href=&quot;http/httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; which will dispatch the request via browser HTTP APIs to a backend.</source>
          <target state="translated">最终的 &lt;code&gt;&lt;a href=&quot;http/httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; ，它将通过浏览器HTTP API将请求分派到后端。</target>
        </trans-unit>
        <trans-unit id="63f7ebe21023a564f8979eb517f0a75bfaa7e096" translate="yes" xml:space="preserve">
          <source>A final &lt;code&gt;&lt;a href=&quot;httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; which will dispatch the request via browser HTTP APIs to a backend.</source>
          <target state="translated">最终的 &lt;code&gt;&lt;a href=&quot;httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; ，它将通过浏览器HTTP API将请求分派到后端。</target>
        </trans-unit>
        <trans-unit id="081bb28f877d8dfbf9dbdced6031ad6c6eb21354" translate="yes" xml:space="preserve">
          <source>A flat module index &lt;code&gt;.d.ts&lt;/code&gt; and &lt;code&gt;.js&lt;/code&gt; is created with the given &lt;code&gt;flatModuleOutFile&lt;/code&gt; name in the same location as the library index &lt;code&gt;.d.ts&lt;/code&gt; file.</source>
          <target state="translated">使用给定的 &lt;code&gt;flatModuleOutFile&lt;/code&gt; 名称在与库索引 &lt;code&gt;.d.ts&lt;/code&gt; 文件相同的位置创建平面模块索引 &lt;code&gt;.d.ts&lt;/code&gt; 和 &lt;code&gt;.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b4ecb2d416525e8a678b698930a9d483c457446" translate="yes" xml:space="preserve">
          <source>A flip of the switch turns the &lt;code&gt;FlyingHeroesPipe&lt;/code&gt; into a &lt;code&gt;FlyingHeroesImpurePipe&lt;/code&gt;. The complete implementation is as follows:</source>
          <target state="translated">&lt;code&gt;FlyingHeroesPipe&lt;/code&gt; 一下开关，即可将FlyingHeroesPipe转换为 &lt;code&gt;FlyingHeroesImpurePipe&lt;/code&gt; 。完整的实现如下：</target>
        </trans-unit>
        <trans-unit id="13b9a7ffb816d86aa53a81473dcdcdbcf06ce32d" translate="yes" xml:space="preserve">
          <source>A folder named after the component</source>
          <target state="translated">以组件命名的文件夹</target>
        </trans-unit>
        <trans-unit id="dbed245bdc8e12d2094d18b2dbd182078e9aa794" translate="yes" xml:space="preserve">
          <source>A form &lt;em&gt;array&lt;/em&gt; defines a dynamic form, where you can add and remove controls at run time. You can also nest form arrays to create more complex forms. For more about this option, see &lt;a href=&quot;reactive-forms#dynamic-forms&quot;&gt;Creating dynamic forms&lt;/a&gt; below.</source>
          <target state="translated">表单&lt;em&gt;数组&lt;/em&gt;定义了一个动态表单，您可以在运行时在其中添加和删除控件。您还可以嵌套表单数组以创建更复杂的表单。有关此选项的更多信息，请参见下面的&lt;a href=&quot;reactive-forms#dynamic-forms&quot;&gt;创建动态表单&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="036fcb5348c304b4a0e71c43763d3184767f86de" translate="yes" xml:space="preserve">
          <source>A form &lt;em&gt;group&lt;/em&gt; defines a form with a fixed set of controls that you can manage together. Form group basics are discussed in this section. You can also &lt;a href=&quot;reactive-forms#nested-groups&quot;&gt;nest form groups&lt;/a&gt; to create more complex forms.</source>
          <target state="translated">表单&lt;em&gt;组&lt;/em&gt;定义了具有一组固定的控件的表单，您可以一起管理这些控件。表单组基础知识将在本节中讨论。您还可以&lt;a href=&quot;reactive-forms#nested-groups&quot;&gt;嵌套表单组&lt;/a&gt;以创建更复杂的表单。</target>
        </trans-unit>
        <trans-unit id="dce635877c967caa411bed07baa04183db074439" translate="yes" xml:space="preserve">
          <source>A form component class with a &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">具有 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 装饰器的表单组件类。</target>
        </trans-unit>
        <trans-unit id="6f4dabb93ae061e849700a419e18e9419cfd943a" translate="yes" xml:space="preserve">
          <source>A form group tracks the status and changes for each of its controls, so if one of the controls changes, the parent control also emits a new status or value change. The model for the group is maintained from its members. After you define the model, you must update the template to reflect the model in the view.</source>
          <target state="translated">表单组跟踪其每个控件的状态和变化,因此如果其中一个控件发生变化,父控件也会发出新的状态或值变化。组的模型是由其成员维护的。定义模型后,必须更新模板以反映视图中的模型。</target>
        </trans-unit>
        <trans-unit id="7a2957cdc2fc7fde81eadc1298d620e085f6a3ce" translate="yes" xml:space="preserve">
          <source>A form of property &lt;a href=&quot;glossary#data-binding&quot;&gt;data binding&lt;/a&gt; in which a &lt;a href=&quot;glossary#template-expression&quot;&gt;template expression&lt;/a&gt; between double-curly braces renders as text. That text can be concatenated with neighboring text before it is assigned to an element property or displayed between element tags, as in this example.</source>
          <target state="translated">属性&lt;a href=&quot;glossary#data-binding&quot;&gt;数据绑定的&lt;/a&gt;一种形式，其中双花括号之间的&lt;a href=&quot;glossary#template-expression&quot;&gt;模板表达式&lt;/a&gt;呈现为文本。可以将文本与相邻文本连接起来，然后再将其分配给元素属性或在元素标签之间显示，如本例所示。</target>
        </trans-unit>
        <trans-unit id="c440d6cf03478cfaa3881a3d89f9573911b226a4" translate="yes" xml:space="preserve">
          <source>A format for building Angular forms using HTML forms and input elements in the view. The alternative format uses the &lt;a href=&quot;glossary#reactive-forms&quot;&gt;reactive forms&lt;/a&gt; framework.</source>
          <target state="translated">一种使用HTML表单和视图中的输入元素构建Angular表单的格式。替代格式使用&lt;a href=&quot;glossary#reactive-forms&quot;&gt;反应形式&lt;/a&gt;框架。</target>
        </trans-unit>
        <trans-unit id="57e7a81c0b8f28e9f94e340a3a04b52c7a68cd88" translate="yes" xml:space="preserve">
          <source>A fragment in the &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; is &lt;em&gt;never&lt;/em&gt; persisted.</source>
          <target state="translated">在A片段 &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; 被&lt;em&gt;从未&lt;/em&gt;持续。</target>
        </trans-unit>
        <trans-unit id="e5ef4a349b19270bd3bc9ebcc3f18e626f75c0cf" translate="yes" xml:space="preserve">
          <source>A framework for building Angular forms through code in a component. The alternative is a &lt;a href=&quot;glossary#template-driven-forms&quot;&gt;template-driven form&lt;/a&gt;.</source>
          <target state="translated">通过组件中的代码构建Angular表单的框架。另一种方法是&lt;a href=&quot;glossary#template-driven-forms&quot;&gt;模板驱动形式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d14d0f7ea94f405fdbafc210a264d270af949aa" translate="yes" xml:space="preserve">
          <source>A full HTTP response, including a typed response body (which may be &lt;code&gt;null&lt;/code&gt; if one was not returned).</source>
          <target state="translated">完整的HTTP响应，包括类型化的响应主体（如果未返回，则可以为 &lt;code&gt;null&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="53e7772e1ee60e5a076a93eae9c41bb3210c50d4" translate="yes" xml:space="preserve">
          <source>A function for matching a route against URLs. Implement a custom URL matcher for &lt;code&gt;&lt;a href=&quot;route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; when a combination of &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; is not expressive enough. Cannot be used together with &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">用于根据URL匹配路由的功能。当 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 的组合表现力不足时，为 &lt;code&gt;&lt;a href=&quot;route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; 实现自定义URL匹配器。不能与 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="e9a5b2284a01d9516c107bbd07154dbd90be0028" translate="yes" xml:space="preserve">
          <source>A function for matching a route against URLs. Implement a custom URL matcher for &lt;code&gt;&lt;a href=&quot;route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; when a combination of &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;pathMatch&lt;/code&gt; is not expressive enough. Cannot be used together with &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;pathMatch&lt;/code&gt;.</source>
          <target state="translated">用于根据URL匹配路由的功能。当 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;pathMatch&lt;/code&gt; 的组合表现力不足时，为 &lt;code&gt;&lt;a href=&quot;route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; 实现自定义URL匹配器。不能与 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;pathMatch&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="09f1f8e31b5105534c849f46cebce0d49634b1a5" translate="yes" xml:space="preserve">
          <source>A function for matching a route against URLs. Implement a custom URL matcher for &lt;code&gt;&lt;a href=&quot;router/route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; when a combination of &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; is not expressive enough. Cannot be used together with &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">用于根据URL匹配路由的功能。当 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 的组合表现力不足时，为 &lt;code&gt;&lt;a href=&quot;router/route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; 实现自定义URL匹配器。不能与 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="8732fc21158fcddfd5ed7d6c64cdb4f6eb4bb86e" translate="yes" xml:space="preserve">
          <source>A function for matching a route against URLs. Implement a custom URL matcher for &lt;code&gt;&lt;a href=&quot;router/route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; when a combination of &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;pathMatch&lt;/code&gt; is not expressive enough. Cannot be used together with &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;pathMatch&lt;/code&gt;.</source>
          <target state="translated">用于根据URL匹配路由的功能。当 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;pathMatch&lt;/code&gt; 的组合表现力不足时，为 &lt;code&gt;&lt;a href=&quot;router/route#matcher&quot;&gt;Route.matcher&lt;/a&gt;&lt;/code&gt; 实现自定义URL匹配器。不能与 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;pathMatch&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="684e23c9356d6fb252eeb1d67716948d73324136" translate="yes" xml:space="preserve">
          <source>A function is executed each time a state change occurs in the animation trigger element. The animation steps run when the function returns true.</source>
          <target state="translated">每次动画触发元素发生状态变化时,都会执行一个函数。当函数返回真时,动画步骤就会运行。</target>
        </trans-unit>
        <trans-unit id="574a3a8774d337c58b7e6859c4c8542cb2f2b41f" translate="yes" xml:space="preserve">
          <source>A function that defines how to obtain or generate values or messages to be published. This function is executed when a consumer calls the &lt;code&gt;subscribe()&lt;/code&gt; method of an &lt;a href=&quot;glossary#observable&quot;&gt;observable&lt;/a&gt;.</source>
          <target state="translated">定义如何获取或生成要发布的值或消息的函数。当使用者调用&lt;a href=&quot;glossary#observable&quot;&gt;observable&lt;/a&gt;的 &lt;code&gt;subscribe()&lt;/code&gt; 方法时，将执行此函数。</target>
        </trans-unit>
        <trans-unit id="6275d4c0492c7115ec24bb20ae9c3d8f63aab167" translate="yes" xml:space="preserve">
          <source>A function that defines how to track changes for items in the iterable.</source>
          <target state="translated">一个定义如何跟踪迭代项变化的函数。</target>
        </trans-unit>
        <trans-unit id="4fc9c1cc331c59974bdc21b79a630dbc89ff6bf9" translate="yes" xml:space="preserve">
          <source>A function that is called to resolve a collection of lazy-loaded routes.</source>
          <target state="translated">调用的一个函数,用于解析懒惰加载的路由集合。</target>
        </trans-unit>
        <trans-unit id="2b0d15eb0823d656c6a5329e70e9894fc5c66cd4" translate="yes" xml:space="preserve">
          <source>A function that is called to resolve a collection of lazy-loaded routes. Must be an arrow function of the following form: &lt;code&gt;() =&amp;gt; import('...').then(mod =&amp;gt; mod.MODULE)&lt;/code&gt;</source>
          <target state="translated">调用此函数以解析延迟加载的路由的集合。必须是以下形式的箭头函数： &lt;code&gt;() =&amp;gt; import('...').then(mod =&amp;gt; mod.MODULE)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65bb3a74803d66f4dd1e37ce3b12aebc7e84490d" translate="yes" xml:space="preserve">
          <source>A function that is executed when a platform is initialized.</source>
          <target state="translated">在平台初始化时执行的函数。</target>
        </trans-unit>
        <trans-unit id="ca9b1f1fd5952d3c22b4ec5faed5f044aba54c78" translate="yes" xml:space="preserve">
          <source>A function that modifies a class or property definition. Decorators (also called &lt;em&gt;annotations&lt;/em&gt;) are an experimental (stage 2) &lt;a href=&quot;https://github.com/wycats/javascript-decorators&quot;&gt;JavaScript language feature&lt;/a&gt;. TypeScript adds support for decorators.</source>
          <target state="translated">修改类或属性定义的函数。装饰器（也称为&lt;em&gt;注释&lt;/em&gt;）是实验性（阶段2）&lt;a href=&quot;https://github.com/wycats/javascript-decorators&quot;&gt;JavaScript语言功能&lt;/a&gt;。TypeScript添加了对装饰器的支持。</target>
        </trans-unit>
        <trans-unit id="c02f83e963294e99ed2772ac7ec52453259e650b" translate="yes" xml:space="preserve">
          <source>A function that receives a control and returns a Promise or observable that emits validation errors if present, otherwise null.</source>
          <target state="translated">接收一个控件并返回一个Promise或observable的函数,如果存在,则发出验证错误,否则为空。</target>
        </trans-unit>
        <trans-unit id="c63c521dd24d8ae841280ee8807d80862d7fa73b" translate="yes" xml:space="preserve">
          <source>A function that receives a control and synchronously returns a map of validation errors if present, otherwise null.</source>
          <target state="translated">一个接收控件并同步返回验证错误映射(如果存在)的函数,否则为空。</target>
        </trans-unit>
        <trans-unit id="c50a6dbcee34631ac561a96933693a78f4413f26" translate="yes" xml:space="preserve">
          <source>A function that returns a set of routes to load.</source>
          <target state="translated">一个返回要加载的路由集的函数。</target>
        </trans-unit>
        <trans-unit id="498df6d36954e0cdff82d1b0509284d0281596a6" translate="yes" xml:space="preserve">
          <source>A function that uses the &lt;a href=&quot;glossary#architect&quot;&gt;Architect&lt;/a&gt; API to perform a complex process such as &quot;build&quot; or &quot;test&quot;. The builder code is defined in an &lt;a href=&quot;glossary#npm-package&quot;&gt;npm package&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;glossary#architect&quot;&gt;Architect&lt;/a&gt; API执行复杂过程的功能，例如&amp;ldquo;构建&amp;rdquo;或&amp;ldquo;测试&amp;rdquo;。构建器代码在&lt;a href=&quot;glossary#npm-package&quot;&gt;npm软件包中&lt;/a&gt;定义。</target>
        </trans-unit>
        <trans-unit id="cb7987e75f0c7e65838a518979f2220d3c5dca44" translate="yes" xml:space="preserve">
          <source>A function that will be executed when a platform is initialized.</source>
          <target state="translated">当一个平台被初始化时,将被执行的函数。</target>
        </trans-unit>
        <trans-unit id="09d03f78f1c88deaa516cb82e14a686bff6bdbe1" translate="yes" xml:space="preserve">
          <source>A function that will be executed when an application is initialized.</source>
          <target state="translated">在应用程序初始化时执行的函数。</target>
        </trans-unit>
        <trans-unit id="06f5cc23cf462eb4020857f44f94a183b857febb" translate="yes" xml:space="preserve">
          <source>A function that will be executed when calling &lt;code&gt;&lt;a href=&quot;platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;&lt;/code&gt; just before current platform state is rendered to string.</source>
          <target state="translated">在将当前平台状态呈现为字符串之前调用 &lt;code&gt;&lt;a href=&quot;platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;&lt;/code&gt; 时将执行的函数。</target>
        </trans-unit>
        <trans-unit id="407a564f4ca570f6b9e0addb423af8b5d1261191" translate="yes" xml:space="preserve">
          <source>A function that will be executed when calling &lt;code&gt;&lt;a href=&quot;rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;rendermodule&quot;&gt;renderModule&lt;/a&gt;&lt;/code&gt; just before current platform state is rendered to string.</source>
          <target state="translated">在将当前平台状态呈现为字符串之前调用 &lt;code&gt;&lt;a href=&quot;rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;rendermodule&quot;&gt;renderModule&lt;/a&gt;&lt;/code&gt; 时将执行的函数。</target>
        </trans-unit>
        <trans-unit id="4d85a1e7e2608a6d01946ea8f34b3d4c9507f423" translate="yes" xml:space="preserve">
          <source>A function to call when the notification occurs. Receives the event object as an argument.</source>
          <target state="translated">通知发生时调用的函数。接收事件对象作为参数。</target>
        </trans-unit>
        <trans-unit id="0a7b93f0502276f70b84f75c408d27157e6276eb" translate="yes" xml:space="preserve">
          <source>A function to invoke to create a value for this &lt;code&gt;token&lt;/code&gt;. The function is invoked with resolved values of &lt;code&gt;token&lt;/code&gt;s in the &lt;code&gt;deps&lt;/code&gt; field.</source>
          <target state="translated">调用以为此 &lt;code&gt;token&lt;/code&gt; 创建值的函数。在 &lt;code&gt;deps&lt;/code&gt; 字段中使用 &lt;code&gt;token&lt;/code&gt; s的解析值调用该函数。</target>
        </trans-unit>
        <trans-unit id="2be97f407436eaa098a90855dde1a2d9662d7e64" translate="yes" xml:space="preserve">
          <source>A future guide update will explain how to write such tests with the &lt;code&gt;&lt;a href=&quot;../api/router/testing/routertestingmodule&quot;&gt;RouterTestingModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将来的指南更新将说明如何使用 &lt;code&gt;&lt;a href=&quot;../api/router/testing/routertestingmodule&quot;&gt;RouterTestingModule&lt;/a&gt;&lt;/code&gt; 编写此类测试。</target>
        </trans-unit>
        <trans-unit id="dbf0f48bf91ee4d285d9f2dff879c99f8aa11e6b" translate="yes" xml:space="preserve">
          <source>A getter provides easy access to the aliases in the form array instance compared to repeating the &lt;code&gt;profileForm.get()&lt;/code&gt; method to get each instance. The form array instance represents an undefined number of controls in an array. It's convenient to access a control through a getter, and this approach is easy to repeat for additional controls.</source>
          <target state="translated">与重复执行 &lt;code&gt;profileForm.get()&lt;/code&gt; 方法以获取每个实例相比，使用getter可以轻松访问表单数组实例中的别名。窗体数组实例表示数组中控件的数量未定义。通过吸气器访问控件很方便，对于其他控件，这种方法很容易重复。</target>
        </trans-unit>
        <trans-unit id="82f3588be996e71607e620dec4b8b22179916c7f" translate="yes" xml:space="preserve">
          <source>A given Angular workspace contains several TypeScript configuration files. At the root &lt;code&gt;tsconfig.json&lt;/code&gt; file specifies the base TypeScript and Angular compiler options that all projects in the workspace inherit.</source>
          <target state="translated">给定的Angular工作空间包含几个TypeScript配置文件。在根 &lt;code&gt;tsconfig.json&lt;/code&gt; 文件中，指定工作空间中所有项目都继承的基本TypeScript和Angular编译器选项。</target>
        </trans-unit>
        <trans-unit id="56f28945da320dfacc6dd33fe0eed3c442d99b91" translate="yes" xml:space="preserve">
          <source>A global registry of &lt;a href=&quot;core/testability&quot;&gt;&lt;code&gt;Testability&lt;/code&gt;&lt;/a&gt; instances for specific elements.</source>
          <target state="translated">用于特定元素的&lt;a href=&quot;core/testability&quot;&gt; &lt;code&gt;Testability&lt;/code&gt; &lt;/a&gt;实例的全局注册表。</target>
        </trans-unit>
        <trans-unit id="5618156b292e64c15c0bffbcc031189cd9a6e28a" translate="yes" xml:space="preserve">
          <source>A global registry of &lt;a href=&quot;testability&quot;&gt;&lt;code&gt;Testability&lt;/code&gt;&lt;/a&gt; instances for specific elements.</source>
          <target state="translated">用于特定元素的&lt;a href=&quot;testability&quot;&gt; &lt;code&gt;Testability&lt;/code&gt; &lt;/a&gt;实例的全局注册表。</target>
        </trans-unit>
        <trans-unit id="9d98e2b1ee296918f8bf1519af8e2ae4db7c097d" translate="yes" xml:space="preserve">
          <source>A good example is a service that holds state for its companion component instance. You need a separate instance of the service for each component. Each service has its own work-state, isolated from the service-and-state of a different component. This is called &lt;em&gt;sandboxing&lt;/em&gt; because each service and component instance has its own sandbox to play in.</source>
          <target state="translated">一个很好的例子是一个为其伙伴组件实例保留状态的服务。每个组件都需要一个单独的服务实例。每个服务都有其自己的工作状态，与不同组件的服务和状态隔离。之所以称为&lt;em&gt;沙箱，&lt;/em&gt;是因为每个服务和组件实例都有自己的沙箱可以播放。</target>
        </trans-unit>
        <trans-unit id="36b9a1d5726b573b8f66a1dbf1ebd460484186d9" translate="yes" xml:space="preserve">
          <source>A good example of usage can be found in the &lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt; documentation. Here is the example component that listens for open and close events:</source>
          <target state="translated">一个很好的用法示例可以在&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;文档中找到。这是侦听打开和关闭事件的示例组件：</target>
        </trans-unit>
        <trans-unit id="153735462281f1d5fbb0b16f23b1e00c53898bed" translate="yes" xml:space="preserve">
          <source>A good use case for &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; is to inject a service but only if it is available on the current host element. To avoid errors in this situation, combine &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; with &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; 一个好用例是注入服务，但前提是该服务在当前主机元素上可用。为了避免这种情况下的错误，请将 &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; 与 &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a02a9374055e70b55c163943bf2dfb0d3025e311" translate="yes" xml:space="preserve">
          <source>A guard's return value controls the router's behavior:</source>
          <target state="translated">Guard的返回值控制着路由器的行为。</target>
        </trans-unit>
        <trans-unit id="52d231725e5228c1fa44d9a29ca224825dcad7cf" translate="yes" xml:space="preserve">
          <source>A guide page might not have its own sample code. It might refer instead to a sample belonging to another page.</source>
          <target state="translated">一个指南页可能没有自己的示例代码。它可能引用属于另一个页面的示例。</target>
        </trans-unit>
        <trans-unit id="373d8baae200062d8f1aba679aa04671175e5913" translate="yes" xml:space="preserve">
          <source>A handler for errors thrown by &lt;code&gt;Router.parseUrl(url)&lt;/code&gt; when &lt;code&gt;url&lt;/code&gt; contains an invalid character. The most common case is a &lt;code&gt;%&lt;/code&gt; sign that's not encoded and is not part of a percent encoded sequence.</source>
          <target state="translated">当 &lt;code&gt;url&lt;/code&gt; 包含无效字符时，由 &lt;code&gt;Router.parseUrl(url)&lt;/code&gt; 引发的错误的处理程序。最常见的情况是未编码的 &lt;code&gt;%&lt;/code&gt; 符号，它也不是百分比编码序列的一部分。</target>
        </trans-unit>
        <trans-unit id="3af5186a3f75b3f8ed4e7d06d1b2de4ace891926" translate="yes" xml:space="preserve">
          <source>A handler for navigation errors in this NgModule.</source>
          <target state="translated">该NgModule的导航错误处理程序。</target>
        </trans-unit>
        <trans-unit id="d6f5b29fab006347fbe778565dcba19bfc15a39b" translate="yes" xml:space="preserve">
          <source>A handler for receiving observable notifications implements the &lt;code&gt;Observer&lt;/code&gt; interface. It is an object that defines callback methods to handle the three types of notifications that an observable can send:</source>
          <target state="translated">用于接收可观察通知的处理程序实现 &lt;code&gt;Observer&lt;/code&gt; 接口。它是一个对象，该对象定义回调方法以处理可观察对象可以发送的三种通知类型：</target>
        </trans-unit>
        <trans-unit id="bbd1ea818b8b8cc66b97d6133471859a6b2bcbfe" translate="yes" xml:space="preserve">
          <source>A handler function that cleans up developer-defined data associated with a view. Called when the &lt;code&gt;destroy()&lt;/code&gt; method is invoked.</source>
          <target state="translated">处理函数，用于清理与视图关联的开发人员定义的数据。在调用 &lt;code&gt;destroy()&lt;/code&gt; 方法时调用。</target>
        </trans-unit>
        <trans-unit id="73b133b2f9b5688dd4cf73515a44784b01f0232f" translate="yes" xml:space="preserve">
          <source>A handler function that cleans up developer-defined data associated with this component. Called when the &lt;code&gt;destroy()&lt;/code&gt; method is invoked.</source>
          <target state="translated">处理函数，用于清理与此组件关联的开发人员定义的数据。在调用 &lt;code&gt;destroy()&lt;/code&gt; 方法时调用。</target>
        </trans-unit>
        <trans-unit id="4d0a754b9f1caec214fcfa4dc250cb8e06612308" translate="yes" xml:space="preserve">
          <source>A handler function to invoke when the event occurs.</source>
          <target state="translated">事件发生时调用的处理函数。</target>
        </trans-unit>
        <trans-unit id="bdd43cd2d0035ee8e485339a327acee2ff269f8e" translate="yes" xml:space="preserve">
          <source>A harness component (&lt;code&gt;hero-list.component.ts&lt;/code&gt;) for demonstrating the request, using a template that defines two bindings to the pipe requesting the heroes from the &lt;code&gt;heroes.json&lt;/code&gt; file. The second binding chains the &lt;code&gt;fetch&lt;/code&gt; pipe with the built-in &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt;&lt;/code&gt; to display the same hero data in JSON format.</source>
          <target state="translated">用于演示请求的工具组件（ &lt;code&gt;hero-list.component.ts&lt;/code&gt; ），该模板使用一个模板，该模板定义了到从 &lt;code&gt;heroes.json&lt;/code&gt; 文件中请求英雄的管道的两个绑定。第二个绑定将 &lt;code&gt;fetch&lt;/code&gt; 管道与内置的 &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt;&lt;/code&gt; 链接在一起，以JSON格式显示相同的英雄数据。</target>
        </trans-unit>
        <trans-unit id="b778327d90fee7ae60c6ad90775c93d550967f48" translate="yes" xml:space="preserve">
          <source>A hashtable of changes represented by &lt;a href=&quot;core/simplechange&quot;&gt;&lt;code&gt;SimpleChange&lt;/code&gt;&lt;/a&gt; objects stored at the declared property name they belong to on a Directive or Component. This is the type passed to the &lt;code&gt;ngOnChanges&lt;/code&gt; hook.</source>
          <target state="translated">由&lt;a href=&quot;core/simplechange&quot;&gt; &lt;code&gt;SimpleChange&lt;/code&gt; &lt;/a&gt;对象表示的更改的哈希表，这些对象存储在指令或组件上的声明属性名称下，这些属性属于它们。这是传递给 &lt;code&gt;ngOnChanges&lt;/code&gt; 挂钩的类型。</target>
        </trans-unit>
        <trans-unit id="d4e8d3892e372c0fecf2681b537eb943a811ea11" translate="yes" xml:space="preserve">
          <source>A hashtable of changes represented by &lt;a href=&quot;simplechange&quot;&gt;&lt;code&gt;SimpleChange&lt;/code&gt;&lt;/a&gt; objects stored at the declared property name they belong to on a Directive or Component. This is the type passed to the &lt;code&gt;ngOnChanges&lt;/code&gt; hook.</source>
          <target state="translated">由&lt;a href=&quot;simplechange&quot;&gt; &lt;code&gt;SimpleChange&lt;/code&gt; &lt;/a&gt;对象表示的更改的哈希表，这些对象存储在指令或组件上的声明属性名称下，这些属性属于它们。这是传递给 &lt;code&gt;ngOnChanges&lt;/code&gt; 挂钩的类型。</target>
        </trans-unit>
        <trans-unit id="23cdcac8cec89bf89402c32764eb9b3e9b275427" translate="yes" xml:space="preserve">
          <source>A helper class that allows an AngularJS component to be used from Angular.</source>
          <target state="translated">一个允许AngularJS组件从Angular使用的助手类。</target>
        </trans-unit>
        <trans-unit id="6c66371275420dbc702a42de7ed21e787a1dc715" translate="yes" xml:space="preserve">
          <source>A helper function for creating an AngularJS module that can bootstrap an Angular module &quot;on-demand&quot; (possibly lazily) when a &lt;a href=&quot;downgradecomponent&quot;&gt;downgraded component&lt;/a&gt; needs to be instantiated.</source>
          <target state="translated">用于创建AngularJS模块的辅助函数，当需要实例化&lt;a href=&quot;downgradecomponent&quot;&gt;降级的组件&lt;/a&gt;时，该函数可以按需（可能是延迟地）引导Angular模块。</target>
        </trans-unit>
        <trans-unit id="abc286a32a528d1cb231b557b350c31b9029cca3" translate="yes" xml:space="preserve">
          <source>A helper function for creating an AngularJS module that can bootstrap an Angular module &quot;on-demand&quot; (possibly lazily) when a &lt;a href=&quot;static/downgradecomponent&quot;&gt;downgraded component&lt;/a&gt; needs to be instantiated.</source>
          <target state="translated">用于创建AngularJS模块的辅助函数，当需要实例化&lt;a href=&quot;static/downgradecomponent&quot;&gt;降级的组件&lt;/a&gt;时，该函数可以按需（可能是延迟地）引导Angular模块。</target>
        </trans-unit>
        <trans-unit id="6aa3cc78fa143b79bb810e7a95525bcaa700a185" translate="yes" xml:space="preserve">
          <source>A helper function that allows an Angular component to be used from AngularJS.</source>
          <target state="translated">一个允许从AngularJS中使用Angular组件的助手函数。</target>
        </trans-unit>
        <trans-unit id="0a3a953b7fe469f6cf7067a78cbb755f0880b3a3" translate="yes" xml:space="preserve">
          <source>A helper function to allow an Angular service to be accessible from AngularJS.</source>
          <target state="translated">一个允许从AngularJS访问Angular服务的辅助函数。</target>
        </trans-unit>
        <trans-unit id="218c171a7af680e691b28ee2d67549dc7cc57f0a" translate="yes" xml:space="preserve">
          <source>A helper function to use when unit testing Angular services that depend upon upgraded AngularJS services.</source>
          <target state="translated">在对依赖升级后的AngularJS服务进行单元测试时使用的辅助函数。</target>
        </trans-unit>
        <trans-unit id="1c438535304fc370a33b0d75b83c50e099239580" translate="yes" xml:space="preserve">
          <source>A helper function to use when unit testing AngularJS services that depend upon downgraded Angular services.</source>
          <target state="translated">在对依赖降级的Angular服务进行单元测试时使用的辅助函数。</target>
        </trans-unit>
        <trans-unit id="4c0681f8b1ca2bf4c01c170aebc0476aee9eab99" translate="yes" xml:space="preserve">
          <source>A helpful or informational point</source>
          <target state="translated">有益的或信息性的观点</target>
        </trans-unit>
        <trans-unit id="5769fbb6a2ba3dee049c9e2a7d142735dad4475e" translate="yes" xml:space="preserve">
          <source>A helpful, informational alert.</source>
          <target state="translated">一个有益的、信息量大的提醒。</target>
        </trans-unit>
        <trans-unit id="dcdb81e86768a1e46d29c2a150ac61709a280f33" translate="yes" xml:space="preserve">
          <source>A hierarchy of injectors at the NgModule and component level can provide different instances of a dependency to their own components and child components.</source>
          <target state="translated">NgModule和组件级别的注入器的层次结构可以为自己的组件和子组件提供不同的依赖实例。</target>
        </trans-unit>
        <trans-unit id="4366034841ba9f2bd29774d71abf28ba67bd01db" translate="yes" xml:space="preserve">
          <source>A instance of &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, which is a fundamental building block for Angular forms. Together with &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;, tracks the value, validation, and status of a form input element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的实例，它是Angular表单的基本构建块。与 &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 一起，跟踪表单输入元素的值，验证和状态。</target>
        </trans-unit>
        <trans-unit id="ad9d81adf54afeac2ac2db2a4dc5e5612946defc" translate="yes" xml:space="preserve">
          <source>A key advantage of a synchronous &lt;code&gt;Observable&lt;/code&gt; is that you can often turn asynchronous processes into synchronous tests.</source>
          <target state="translated">同步 &lt;code&gt;Observable&lt;/code&gt; 的主要优势在于，您通常可以将异步过程转换为同步测试。</target>
        </trans-unit>
        <trans-unit id="7ffd5c26435651b0e4c6aae79446e9bccf62a4ab" translate="yes" xml:space="preserve">
          <source>A key value pair. Usually used to represent the key value pairs from a Map or Object.</source>
          <target state="translated">一个键值对。通常用来表示Map或Object中的键值对。</target>
        </trans-unit>
        <trans-unit id="35ebaa116f55fb19c13653c5a4874ae1a1f85ab4" translate="yes" xml:space="preserve">
          <source>A key value store that is transferred from the application on the server side to the application on the client side.</source>
          <target state="translated">一个从服务器端的应用程序转移到客户端的应用程序的键值存储。</target>
        </trans-unit>
        <trans-unit id="9cf4739e4864a807e655ff6fc1193445efde9673" translate="yes" xml:space="preserve">
          <source>A key, usually a &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">密钥，通常是 &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7e7a6a0768ab93586cd67dd4bff584b1428ac83" translate="yes" xml:space="preserve">
          <source>A key-value style pair associating a CSS property with a value.</source>
          <target state="translated">一个键值样式对,将一个CSS属性与一个值关联起来。</target>
        </trans-unit>
        <trans-unit id="07649eafadeb3470a7ca6d2df2dcba49d7307f17" translate="yes" xml:space="preserve">
          <source>A keyframes sequence inserted in the middle that causes the button to appear to pulsate irregularly over the course of that same 1-second timeframe</source>
          <target state="translated">在中间插入一个关键帧序列,使按钮在1秒的时间范围内出现不规则的脉动。</target>
        </trans-unit>
        <trans-unit id="d879a2311ad4242e48672664ec6eea8b5c9c46f0" translate="yes" xml:space="preserve">
          <source>A keyframes sequence inserted in the middle that causes the button to appear to pulsate irregularly over the course of that same 1-second timeframe.</source>
          <target state="translated">中间插入的一个关键帧序列,使按钮在这1秒的时间范围内出现不规则的脉动。</target>
        </trans-unit>
        <trans-unit id="dc5af4892de1c162b755ae21ea6a25382487862e" translate="yes" xml:space="preserve">
          <source>A later part of this tutorial, &lt;a href=&quot;https://angular.io/start/start/start-forms&quot;&gt;Use forms for user input&lt;/a&gt;, guides you through accessing this cart service from the view where the user checks out.</source>
          <target state="translated">本教程的后面部分&amp;ldquo;&lt;a href=&quot;https://angular.io/start/start/start-forms&quot;&gt;使用表单进行用户输入&lt;/a&gt;&amp;rdquo;将引导您从用户检出的视图访问此购物车服务。</target>
        </trans-unit>
        <trans-unit id="ed5250db05f438b41da2ac7f301688eb307df34e" translate="yes" xml:space="preserve">
          <source>A lazy-loaded module has its own injector which is typically a child of the application root injector.</source>
          <target state="translated">一个懒惰加载的模块有自己的注入器,它通常是应用根注入器的一个子模块。</target>
        </trans-unit>
        <trans-unit id="7ef9f557aece216b8057965c804209b49b3fdec0" translate="yes" xml:space="preserve">
          <source>A lazy-loaded module has its own injector, typically a child of the app root injector. Lazy-loaded services are scoped to the lazy-loaded module's injector. If a lazy-loaded module also provides the &lt;code&gt;UserService&lt;/code&gt;, any component created within that module's context (such as by router navigation) gets the local instance of the service, not the instance in the root injector. Components in external modules continue to receive the instance provided by their injectors.</source>
          <target state="translated">延迟加载的模块具有自己的注入器，通常是应用程序根注入器的子代。延迟加载的服务仅限于延迟加载模块的注入器。如果延迟加载的模块还提供 &lt;code&gt;UserService&lt;/code&gt; ，则在该模块的上下文中创建的任何组件（例如通过路由器导航）都将获取服务的本地实例，而不是根注入器中的实例。外部模块中的组件继续接收其注入器提供的实例。</target>
        </trans-unit>
        <trans-unit id="a7e8a8cb53a9e84a9b672a56f58c0fd34b652f66" translate="yes" xml:space="preserve">
          <source>A lazy-loaded routed feature module should not be imported by any module. Doing so would trigger an eager load, defeating the purpose of lazy loading.That means you won&amp;rsquo;t see them mentioned among the &lt;code&gt;AppModule&lt;/code&gt; imports. An eager loaded routed feature module must be imported by another module so that the compiler learns about its components.</source>
          <target state="translated">延迟加载的路由要素模块不应由任何模块导入。这样做会触发急切的加载，无法达到延迟加载的目的，这意味着您不会在 &lt;code&gt;AppModule&lt;/code&gt; 导入中看到它们。急切加载的路由要素模块必须由另一个模块导入，以便编译器了解其组件。</target>
        </trans-unit>
        <trans-unit id="cf38daa709aad4b9820122674b7d4ef886b08249" translate="yes" xml:space="preserve">
          <source>A library can include &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt; that allow it to integrate with the Angular CLI.</source>
          <target state="translated">库可以包含允许其与Angular CLI集成的&lt;a href=&quot;glossary#schematic&quot;&gt;示意图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d4f03b11868674f6d12d1dbd9a318807b2f605a" translate="yes" xml:space="preserve">
          <source>A library typically includes &lt;em&gt;reusable code&lt;/em&gt; that defines components, services, and other Angular artifacts (pipes, directives, and so on) that you simply import into a project. A library is packaged into an npm package for publishing and sharing, and this package can also include &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt; that provide instructions for generating or transforming code directly in your project, in the same way that the CLI creates a generic skeleton app with &lt;code&gt;ng generate component&lt;/code&gt;. A schematic that is combined with a library can, for example, provide the Angular CLI with the information it needs to generate a particular component defined in that library.</source>
          <target state="translated">库通常包含&lt;em&gt;可重用的代码&lt;/em&gt;，这些&lt;em&gt;代码&lt;/em&gt;定义了您只需导入项目中的组件，服务和其他Angular工件（管道，指令等）。库打包到npm软件包中进行发布和共享，并且该软件包还可以包括&lt;a href=&quot;glossary#schematic&quot;&gt;示意图&lt;/a&gt;，这些示意图提供了直接在项目中生成或转换代码的说明，就像CLI使用 &lt;code&gt;ng generate component&lt;/code&gt; 创建通用骨架应用程序一样。例如，与库组合的原理图可以为Angular CLI提供生成该库中定义的特定组件所需的信息。</target>
        </trans-unit>
        <trans-unit id="ed2474d162c0dc4c057f468e012642c002c1cfc0" translate="yes" xml:space="preserve">
          <source>A library typically includes &lt;em&gt;reusable code&lt;/em&gt; that defines components, services, and other Angular artifacts (pipes, directives, and so on) that you simply import into a project. A library is packaged into an npm package for publishing and sharing. This package can also include &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt; that provide instructions for generating or transforming code directly in your project, in the same way that the CLI creates a generic new component with &lt;code&gt;ng generate component&lt;/code&gt;. A schematic that is packaged with a library can, for example, provide the Angular CLI with the information it needs to generate a component that configures and uses a particular feature, or set of features, defined in that library. One example of this is Angular Material's navigation schematic which configures the CDK's &lt;code&gt;BreakpointObserver&lt;/code&gt; and uses it with Material's &lt;code&gt;MatSideNav&lt;/code&gt; and &lt;code&gt;MatToolbar&lt;/code&gt; components.</source>
          <target state="translated">库通常包含&lt;em&gt;可重用的代码&lt;/em&gt;，这些&lt;em&gt;代码&lt;/em&gt;定义了您只需导入项目中的组件，服务和其他Angular工件（管道，指令等）。一个库被打包到一个npm包中，用于发布和共享。该软件包还可以包括&lt;a href=&quot;glossary#schematic&quot;&gt;原理图&lt;/a&gt;，这些原理图提供了直接在项目中生成或转换代码的说明，就像CLI使用 &lt;code&gt;ng generate component&lt;/code&gt; 创建通用新组件的方式一样。例如，与库打包在一起的原理图可以为Angular CLI提供所需的信息，以生成配置和使用该库中定义的特定功能或一组功能的组件所需的信息。一个示例是Angular Material的导航示意图，该示意图配置CDK的 &lt;code&gt;BreakpointObserver&lt;/code&gt; 并将其与Material的 &lt;code&gt;MatSideNav&lt;/code&gt; 和 &lt;code&gt;MatToolbar&lt;/code&gt; 组件一起使用。</target>
        </trans-unit>
        <trans-unit id="596a67fab33e6776bbb8c47b9b4b1a154dc3ae59" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that invokes a custom change-detection function for a directive, in addition to the check performed by the default change-detector.</source>
          <target state="translated">一个生命周期钩子,除了由默认的变更检测器执行的检查外,还为指令调用自定义的变更检测功能。</target>
        </trans-unit>
        <trans-unit id="f5600987ba08ad888ffa7d2d0414b589157e3ce2" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has fully initialized a component's view. Define an &lt;code&gt;&lt;a href=&quot;../forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular已完全初始化组件的视图之后调用的生命周期挂钩。定义 &lt;code&gt;&lt;a href=&quot;../forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; 方法来处理所有其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="74bf55437402dbc91baac4770d54f43c351112cd" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has fully initialized a component's view. Define an &lt;code&gt;&lt;a href=&quot;forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular已完全初始化组件的视图之后调用的生命周期挂钩。定义 &lt;code&gt;&lt;a href=&quot;forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; 方法来处理所有其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="20a90d8865bd1763fece1eee2fb2e3e788e40046" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has fully initialized a component's view. Define an &lt;code&gt;ngAfterViewInit()&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular完全初始化组件的视图之后调用的生命周期挂钩。定义一个 &lt;code&gt;ngAfterViewInit()&lt;/code&gt; 方法来处理任何其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="02037844ae11c0ddc626fc9788d0fec5a64d460c" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has fully initialized all content of a directive. Define an &lt;code&gt;&lt;a href=&quot;../router/routerlinkactive#ngAfterContentInit&quot;&gt;ngAfterContentInit()&lt;/a&gt;&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular已完全初始化指令的所有内容之后调用的生命周期挂钩。定义 &lt;code&gt;&lt;a href=&quot;../router/routerlinkactive#ngAfterContentInit&quot;&gt;ngAfterContentInit()&lt;/a&gt;&lt;/code&gt; 方法来处理任何其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="c9cbef27669e26b8935599a3d2233bbbf3336e8b" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has fully initialized all content of a directive. Define an &lt;code&gt;&lt;a href=&quot;router/routerlinkactive#ngAfterContentInit&quot;&gt;ngAfterContentInit()&lt;/a&gt;&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular已完全初始化指令的所有内容之后调用的生命周期挂钩。定义 &lt;code&gt;&lt;a href=&quot;router/routerlinkactive#ngAfterContentInit&quot;&gt;ngAfterContentInit()&lt;/a&gt;&lt;/code&gt; 方法来处理任何其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="fe878e63ea9efd6a965181e8df9b8b409664b48c" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has fully initialized all content of a directive. Define an &lt;code&gt;ngAfterContentInit()&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular已完全初始化指令的所有内容之后调用的生命周期挂钩。定义一个 &lt;code&gt;ngAfterContentInit()&lt;/code&gt; 方法来处理所有其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="a447eef2fad87a38f1f484e3675661d2c2de2258" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after Angular has initialized all data-bound properties of a directive. Define an &lt;code&gt;ngOnInit()&lt;/code&gt; method to handle any additional initialization tasks.</source>
          <target state="translated">在Angular初始化指令的所有数据绑定属性后调用的生命周期挂钩。定义 &lt;code&gt;ngOnInit()&lt;/code&gt; 方法来处理任何其他初始化任务。</target>
        </trans-unit>
        <trans-unit id="b8e1d5b9cc3d1757bb5eacdaa14e03c4921fb9c9" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after the default change detector has completed checking a component's view for changes.</source>
          <target state="translated">一个生命周期钩子,在默认的变更检测器完成检查组件视图的变更后被调用。</target>
        </trans-unit>
        <trans-unit id="d73ca980a113b1ee2561c99c3783810826f94701" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called after the default change detector has completed checking all content of a directive.</source>
          <target state="translated">一个生命周期钩子,在默认的变更检测器完成检查指令的所有内容后被调用。</target>
        </trans-unit>
        <trans-unit id="ce797f9362a30ca61eb81eee1f97135dbd0c504f" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called when a directive, pipe, or service is destroyed. Use for any custom cleanup that needs to occur when the instance is destroyed.</source>
          <target state="translated">当一个指令、管道或服务被销毁时调用的生命周期钩子。用于实例被销毁时需要进行的任何自定义清理。</target>
        </trans-unit>
        <trans-unit id="0261386256f4b1b6dc2c7184bd9e29445ffda542" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that is called when any data-bound property of a directive changes. Define an &lt;code&gt;ngOnChanges()&lt;/code&gt; method to handle the changes.</source>
          <target state="translated">指令的任何数据绑定属性更改时调用的生命周期挂钩。定义一个 &lt;code&gt;ngOnChanges()&lt;/code&gt; 方法来处理更改。</target>
        </trans-unit>
        <trans-unit id="96881da70e829f0f5ebaad0e2ee7ba44657e85de" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that provides additional developer-defined cleanup functionality for the component.</source>
          <target state="translated">一个生命周期钩子,为组件提供额外的开发者定义的清理功能。</target>
        </trans-unit>
        <trans-unit id="36b167505f89a514144de5bba64e918ad3c3801a" translate="yes" xml:space="preserve">
          <source>A lifecycle hook that provides additional developer-defined cleanup functionality for views.</source>
          <target state="translated">一个生命周期钩子,为视图提供额外的开发者定义的清理功能。</target>
        </trans-unit>
        <trans-unit id="b379a7fb75af4991c5a53bf872be9257ffe74642" translate="yes" xml:space="preserve">
          <source>A lifecycle method called before the directive's instance is destroyed. For internal use only.</source>
          <target state="translated">在指令的实例被销毁之前调用的生命周期方法。仅供内部使用。</target>
        </trans-unit>
        <trans-unit id="ab00640507fd1fc5d13ec5591a77548bad5848e6" translate="yes" xml:space="preserve">
          <source>A lifecycle method called when the directive is initialized. For internal use only.</source>
          <target state="translated">当指令被初始化时调用的一个生命周期方法。仅供内部使用。</target>
        </trans-unit>
        <trans-unit id="e6a4a685929d3df5e89c8ac2c6f5c345f6d37471" translate="yes" xml:space="preserve">
          <source>A lifecycle method called when the directive's inputs are initialized. For internal use only.</source>
          <target state="translated">当指令的输入被初始化时调用的一个生命周期方法。仅供内部使用。</target>
        </trans-unit>
        <trans-unit id="f07bd6459b72dc9a3fa7e047a318fc584cf2c0eb" translate="yes" xml:space="preserve">
          <source>A lifecycle method called when the directive's inputs change. For internal use only.</source>
          <target state="translated">当指令的输入发生变化时调用的一个生命周期方法。仅供内部使用。</target>
        </trans-unit>
        <trans-unit id="cea707b23b307b8db10888180bf74c8902fbf4c6" translate="yes" xml:space="preserve">
          <source>A lightweight injection token that is represented as an abstract class.</source>
          <target state="translated">一个轻量级的注入令牌,它被表示为一个抽象类。</target>
        </trans-unit>
        <trans-unit id="d441fd8385d512e636f45c60eeda7ddc27d1cf23" translate="yes" xml:space="preserve">
          <source>A link parameters array holds the following ingredients for router navigation:</source>
          <target state="translated">一个链接参数数组中包含了以下路由器导航的成分。</target>
        </trans-unit>
        <trans-unit id="58c6440df7d73cd9db81817568cadd31dfc44944" translate="yes" xml:space="preserve">
          <source>A linter for Angular apps whose rules conform to the Angular &lt;a href=&quot;styleguide&quot;&gt;style guide&lt;/a&gt;.</source>
          <target state="translated">适用于Angular应用程序的linter，其规则符合Angular &lt;a href=&quot;styleguide&quot;&gt;样式指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="25576a240a63ef9260f06f43a3a241146b219362" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;../core/provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt;s. To use the router in a Worker enabled application you must include these providers when setting up the render thread.</source>
          <target state="translated">&lt;a href=&quot;../core/provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt;的列表。要在启用了Worker的应用程序中使用路由器，必须在设置渲染线程时包括这些提供程序。</target>
        </trans-unit>
        <trans-unit id="dbd88ed75debb2734738dacd6286918848aec59b" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;core/provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt;s. To use the router in a Worker enabled application you must include these providers when setting up the render thread.</source>
          <target state="translated">&lt;a href=&quot;core/provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt;的列表。要在启用了Worker的应用程序中使用路由器，必须在设置渲染线程时包括这些提供程序。</target>
        </trans-unit>
        <trans-unit id="461fc971b126f7f03af8576b0fa4ea318da95075" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;ngmodule-faq#q-declarable&quot;&gt;declarable&lt;/a&gt; classes, (&lt;em&gt;components&lt;/em&gt;, &lt;em&gt;directives&lt;/em&gt;, and &lt;em&gt;pipes&lt;/em&gt;) that &lt;em&gt;belong to this module&lt;/em&gt;.</source>
          <target state="translated">列表&lt;a href=&quot;ngmodule-faq#q-declarable&quot;&gt;申报&lt;/a&gt;类，（&lt;em&gt;部件&lt;/em&gt;，&lt;em&gt;指令&lt;/em&gt;和&lt;em&gt;管道&lt;/em&gt;），其&lt;em&gt;属于本模块&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="437997829946a8147d613a76d425e66a9f9f384d" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;token&lt;/code&gt;s to be resolved by the injector.</source>
          <target state="translated">注入器将解析的 &lt;code&gt;token&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="6126755f8fa0690fa2b6af2c29ffba01f3417269" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;token&lt;/code&gt;s to be resolved by the injector. The list of values is then used as arguments to the &lt;code&gt;&lt;a href=&quot;factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">注入器将解析的 &lt;code&gt;token&lt;/code&gt; 列表。然后，将值列表用作 &lt;code&gt;&lt;a href=&quot;factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; 函数的参数。</target>
        </trans-unit>
        <trans-unit id="9d38f61745044a029727c6551e2df969c26ca209" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;token&lt;/code&gt;s to be resolved by the injector. The list of values is then used as arguments to the &lt;code&gt;useClass&lt;/code&gt; constructor.</source>
          <target state="translated">注入器将解析的 &lt;code&gt;token&lt;/code&gt; 列表。然后，将值列表用作 &lt;code&gt;useClass&lt;/code&gt; 构造函数的参数。</target>
        </trans-unit>
        <trans-unit id="5e8a387d3d675f24d46b5ba1a01edf997dfa9c74" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;token&lt;/code&gt;s to be resolved by the injector. The list of values is then used as arguments to the &lt;code&gt;useFactory&lt;/code&gt; function.</source>
          <target state="translated">注入器将解析的 &lt;code&gt;token&lt;/code&gt; 列表。值列表然后用作 &lt;code&gt;useFactory&lt;/code&gt; 函数的参数。</target>
        </trans-unit>
        <trans-unit id="dc8941f0d9127051ed123a4af396915f26da0c9b" translate="yes" xml:space="preserve">
          <source>A list of CommonJS packages that are allowed to be used without a build time warning.</source>
          <target state="translated">允许使用的CommonJS包的列表,没有构建时间警告。</target>
        </trans-unit>
        <trans-unit id="daa742971c3327dc4f09d733597037dc4c47dd74" translate="yes" xml:space="preserve">
          <source>A list of URL patterns. URLs that match these patterns are cached according to this data group's policy. Only non-mutating requests (GET and HEAD) are cached.</source>
          <target state="translated">URL模式的列表。匹配这些模式的URL会根据这个数据组的策略进行缓存。只有非变体请求(GET和HEAD)才会被缓存。</target>
        </trans-unit>
        <trans-unit id="04d917307865bab1f1de2116c773bcb26a629379" translate="yes" xml:space="preserve">
          <source>A list of common rules for frontend development is documented in the README at &lt;a href=&quot;https://github.com/bazelbuild/rules_nodejs/&quot;&gt;https://github.com/bazelbuild/rules_nodejs/&lt;/a&gt;.</source>
          <target state="translated">README中的&lt;a href=&quot;https://github.com/bazelbuild/rules_nodejs/&quot;&gt;https://github.com/bazelbuild/rules_nodejs/中&lt;/a&gt;记录了前端开发的常见规则列表。</target>
        </trans-unit>
        <trans-unit id="19ddc56400717fc21df5b63436fc1e8e5b32cd4d" translate="yes" xml:space="preserve">
          <source>A list of components that are automatically bootstrapped.</source>
          <target state="translated">自动引导的组件列表。</target>
        </trans-unit>
        <trans-unit id="171d42258c74d022d702af37e54b0e6f7307feba" translate="yes" xml:space="preserve">
          <source>A list of components that can be dynamically loaded into the view.</source>
          <target state="translated">可动态加载到视图中的组件列表。</target>
        </trans-unit>
        <trans-unit id="7675d0663f37d145a8dac0c39cde405a75fbfa15" translate="yes" xml:space="preserve">
          <source>A list of control names that designates how to move from the current control to the control that should be queried for errors.</source>
          <target state="translated">控件名称列表,指定如何从当前控件移动到应查询错误的控件。</target>
        </trans-unit>
        <trans-unit id="037b00399bc82d29e1eb7b74fa9c1904a97de8a9" translate="yes" xml:space="preserve">
          <source>A list of declarations&amp;mdash;&lt;em&gt;component&lt;/em&gt;, &lt;em&gt;directive&lt;/em&gt;, and &lt;em&gt;pipe&lt;/em&gt; classes&amp;mdash;that an importing module can use.</source>
          <target state="translated">导入模块可以使用的声明列表（&lt;em&gt;component&lt;/em&gt;，&lt;em&gt;伪指令&lt;/em&gt;和&lt;em&gt;管道&lt;/em&gt;类）。</target>
        </trans-unit>
        <trans-unit id="040d4431be42e331375255c125a4498782b8e650" translate="yes" xml:space="preserve">
          <source>A list of dependency-injection providers.</source>
          <target state="translated">依赖注入提供者的列表。</target>
        </trans-unit>
        <trans-unit id="dba7bfe8eac022733a1026f8be32e943c473cfa2" translate="yes" xml:space="preserve">
          <source>A list of modules which should be folded into this module. Folded means it is as if all the imported NgModule's exported properties were declared here.</source>
          <target state="translated">应该被折叠到这个模块中的模块列表。Folded的意思是,就像所有导入的NgModule的导出属性都在这里声明一样。</target>
        </trans-unit>
        <trans-unit id="75001e195c1445f429399b1de5c1f73f540ae88c" translate="yes" xml:space="preserve">
          <source>A little more setup triggers the initial data binding and gets references to the navigation links:</source>
          <target state="translated">再做一点设置就会触发初始数据绑定,并获得对导航链接的引用。</target>
        </trans-unit>
        <trans-unit id="a1b8ef8f70baee99448943fc05106db9e9b9dd37" translate="yes" xml:space="preserve">
          <source>A loader function that can load the routed module asynchronously.</source>
          <target state="translated">一个可以异步加载路由模块的加载器函数。</target>
        </trans-unit>
        <trans-unit id="955b1d9d2579edfd071f8ec5104d74a47b0f744b" translate="yes" xml:space="preserve">
          <source>A locale code for the locale format rules to use.</source>
          <target state="translated">一个区域代码,用于区域格式规则的使用。</target>
        </trans-unit>
        <trans-unit id="6a302a7e5064c906a79afc49ad5e1e7cc1a4799f" translate="yes" xml:space="preserve">
          <source>A locale code for the locale format rules to use. When not supplied, uses the value of &lt;code&gt;&lt;a href=&quot;../core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt;, which is &lt;code&gt;en-US&lt;/code&gt; by default. See &lt;a href=&quot;../../guide/i18n#setting-up-the-locale-of-your-app&quot;&gt;Setting your app locale&lt;/a&gt;.</source>
          <target state="translated">用于要使用的语言环境格式规则的语言环境代码。如果未提供，则使用 &lt;code&gt;&lt;a href=&quot;../core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; 的值，默认情况下为 &lt;code&gt;en-US&lt;/code&gt; 。请参阅&lt;a href=&quot;../../guide/i18n#setting-up-the-locale-of-your-app&quot;&gt;设置应用程序区域设置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6b80afc948d39c1beaa5b663a213d0d655e25c0" translate="yes" xml:space="preserve">
          <source>A locale code, such as &lt;code&gt;fr-FR&lt;/code&gt;.</source>
          <target state="translated">语言环境代码，例如 &lt;code&gt;fr-FR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55f13cbcad722a8c24df8b8cb4a9cf2ae466e5a8" translate="yes" xml:space="preserve">
          <source>A locale is an identifier (id) that refers to a set of user preferences that tend to be shared within a region of the world, such as country. This document refers to a locale identifier as a &quot;locale&quot; or &quot;locale id&quot;.</source>
          <target state="translated">本地化是一个标识符(id),它指的是世界上某一地区(如国家)倾向于共享的一组用户偏好。本文件将一个地区标识符称为 &quot;地区 &quot;或 &quot;地区标识符&quot;。</target>
        </trans-unit>
        <trans-unit id="fa8d01003c5963b62891b79618c389e5eb505c86" translate="yes" xml:space="preserve">
          <source>A long-standing feature request is to add the ability to add directives to host elements. The feature will allow developers to augment their own components with additional behaviors without using inheritance. The project will require substantial effort in terms of the definition of APIs, semantics, and implementation.</source>
          <target state="translated">一个长期的功能要求是增加向主机元素添加指令的能力。该功能将使开发人员能够在不使用继承的情况下,用额外的行为来增强自己的组件。这个项目需要在定义API、语义和实现方面做出大量努力。</target>
        </trans-unit>
        <trans-unit id="8ead34f42f629cf596c56bee9a9dd423fd7244a6" translate="yes" xml:space="preserve">
          <source>A lookup token associated with a dependency &lt;a href=&quot;glossary#provider&quot;&gt;provider&lt;/a&gt;, for use with the &lt;a href=&quot;glossary#di&quot;&gt;dependency injection&lt;/a&gt; system.</source>
          <target state="translated">与依赖项&lt;a href=&quot;glossary#provider&quot;&gt;提供程序&lt;/a&gt;关联的查找令牌，用于与&lt;a href=&quot;glossary#di&quot;&gt;依赖项注入&lt;/a&gt;系统一起使用。</target>
        </trans-unit>
        <trans-unit id="cae2a9afdd89956ff08fa75198655ba1a46444dc" translate="yes" xml:space="preserve">
          <source>A major release every 6 months</source>
          <target state="translated">每6个月发布一次重要消息</target>
        </trans-unit>
        <trans-unit id="06d3323afdb781bed9079cfcfdee73be399d2d9a" translate="yes" xml:space="preserve">
          <source>A map of DI tokens used to look up data resolvers. See &lt;code&gt;&lt;a href=&quot;resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">DI令牌的映射，用于查找数据解析器。请参阅 &lt;code&gt;&lt;a href=&quot;resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c31bf3081c3f1b6360722ce5cdf2ba3f5dd1a977" translate="yes" xml:space="preserve">
          <source>A map that provides access to the required and optional parameters specific to a route. The map supports retrieving a single value with &lt;code&gt;get()&lt;/code&gt; or multiple values with &lt;code&gt;getAll()&lt;/code&gt;.</source>
          <target state="translated">可以访问特定于路线的必需和可选参数的地图。该映射支持使用 &lt;code&gt;get()&lt;/code&gt; 检索单个值或使用 &lt;code&gt;getAll()&lt;/code&gt; 检索多个值。</target>
        </trans-unit>
        <trans-unit id="e95f51729664a5488e099047c9717e5b096d40fe" translate="yes" xml:space="preserve">
          <source>A maximum total number of results to return from the query. If negative, results are limited from the end of the query list towards the beginning. By default, results are not limited.</source>
          <target state="translated">从查询中返回的最大结果总数。如果是负数,结果将从查询列表的末尾向开头限制。默认情况下,结果不受限制。</target>
        </trans-unit>
        <trans-unit id="f0c63958f79d54f2fc16dbcbfe14c83a9f071add" translate="yes" xml:space="preserve">
          <source>A metadata override object can either add-and-remove elements in metadata properties or completely reset those properties. This example resets the component's &lt;code&gt;providers&lt;/code&gt; metadata.</source>
          <target state="translated">元数据覆盖对象可以在元数据属性中添加和删除元素，也可以完全重置那些属性。本示例重置组件的 &lt;code&gt;providers&lt;/code&gt; 元数据。</target>
        </trans-unit>
        <trans-unit id="8729d4f5019b394ddc337fc6d5ed4029a1e20a17" translate="yes" xml:space="preserve">
          <source>A method that controls navigation to a requested route in a routing application. Guards determine whether a route can be activated or deactivated, and whether a lazy-loaded module can be loaded.</source>
          <target state="translated">一种在路由应用中控制导航到请求的路由的方法。守护决定路由是否可以被激活或停用,以及是否可以加载一个懒惰加载的模块。</target>
        </trans-unit>
        <trans-unit id="69f0f2d5a2aa3accf83abdff396c8bd191b0d509" translate="yes" xml:space="preserve">
          <source>A microsyntax is translated to the normal binding syntax as follows:</source>
          <target state="translated">微词法转化为正常的绑定语法如下。</target>
        </trans-unit>
        <trans-unit id="7130a4e571cb15db8a5b2e26dc8e7e32f1ac10b6" translate="yes" xml:space="preserve">
          <source>A mock implementation of &lt;a href=&quot;../locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; that allows tests to fire simulated location events.</source>
          <target state="translated">&lt;a href=&quot;../locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; &lt;/a&gt;的模拟实现，允许测试激发模拟的位置事件。</target>
        </trans-unit>
        <trans-unit id="95d1322a42a6673477094ecc0b65d1e99ae45df8" translate="yes" xml:space="preserve">
          <source>A mock implementation of &lt;a href=&quot;locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; that allows tests to fire simulated location events.</source>
          <target state="translated">&lt;a href=&quot;locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; &lt;/a&gt;的模拟实现，允许测试激发模拟的位置事件。</target>
        </trans-unit>
        <trans-unit id="7d0a0962e5c5198a576fa37cb7c736b87d6d1d71" translate="yes" xml:space="preserve">
          <source>A mock requests that was received and is ready to be answered.</source>
          <target state="translated">收到的模拟请求,随时可以答复。</target>
        </trans-unit>
        <trans-unit id="f337bc6018903ffa46e9a382b840059a040e5962" translate="yes" xml:space="preserve">
          <source>A model can be as simple as a &quot;property bag&quot; that holds facts about a thing of application importance. That describes well the &lt;code&gt;Hero&lt;/code&gt; class with its three required fields (&lt;code&gt;id&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;power&lt;/code&gt;) and one optional field (&lt;code&gt;alterEgo&lt;/code&gt;).</source>
          <target state="translated">模型可以像保存有关应用程序重要性的事实的&amp;ldquo;属性袋&amp;rdquo;一样简单。这很好地描述了 &lt;code&gt;Hero&lt;/code&gt; 类，其中包含三个必填字段（ &lt;code&gt;id&lt;/code&gt; ， &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;power&lt;/code&gt; ）和一个可选字段（ &lt;code&gt;alterEgo&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ad0764647ed46ed5061fb6310ba8f8b5049da7f6" translate="yes" xml:space="preserve">
          <source>A module can list another module among its &lt;code&gt;exports&lt;/code&gt;, in which case all of that module's public components, directives, and pipes are exported.</source>
          <target state="translated">一个模块可以在其 &lt;code&gt;exports&lt;/code&gt; 列出另一个模块，在这种情况下，该模块的所有公共组件，指令和管道都将导出。</target>
        </trans-unit>
        <trans-unit id="5f1c5c1da122f4fa01eb3c1494bcf50d1de1c0fe" translate="yes" xml:space="preserve">
          <source>A module that contains the deprecated i18n pipes.</source>
          <target state="translated">一个包含废弃的i18n管道的模块。</target>
        </trans-unit>
        <trans-unit id="32c9bd50d59c8005b8e4f899c9f2be6b8662aebc" translate="yes" xml:space="preserve">
          <source>A more complete example with additional options:</source>
          <target state="translated">一个更完整的例子,还有更多的选项。</target>
        </trans-unit>
        <trans-unit id="8d6dc22c64e24056f4ca8f4235696f04db5187ce" translate="yes" xml:space="preserve">
          <source>A multi-project workspace is suitable for an enterprise that uses a single repository and global configuration for all Angular projects (the &quot;monorepo&quot; model). A multi-project workspace also supports library development.</source>
          <target state="translated">多项目工作空间适用于使用单一仓库和全局配置的企业,适用于所有Angular项目(&quot;monorepo &quot;模式)。多项目工作空间还支持库的开发。</target>
        </trans-unit>
        <trans-unit id="578c0bb115fcfcf57aae92bdf19077e287b885a7" translate="yes" xml:space="preserve">
          <source>A multi-provider token that represents the array of registered &lt;code&gt;&lt;a href=&quot;http/httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; objects.</source>
          <target state="translated">一个多供应商令牌，代表已注册 &lt;code&gt;&lt;a href=&quot;http/httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; 对象的数组。</target>
        </trans-unit>
        <trans-unit id="3429f86b90f9abf229de77143f5159ec794aea18" translate="yes" xml:space="preserve">
          <source>A multi-provider token that represents the array of registered &lt;code&gt;&lt;a href=&quot;httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; objects.</source>
          <target state="translated">一个多供应商令牌，代表已注册 &lt;code&gt;&lt;a href=&quot;httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; 对象的数组。</target>
        </trans-unit>
        <trans-unit id="7906e423263f41a5db0c9d24e8bd036737a8d5a4" translate="yes" xml:space="preserve">
          <source>A multicasting observable that emits an event every time the validation &lt;code&gt;status&lt;/code&gt; of the control recalculates.</source>
          <target state="translated">可观察到的多播，每次重新计算控件的验证 &lt;code&gt;status&lt;/code&gt; ，都会发出一个事件。</target>
        </trans-unit>
        <trans-unit id="b781b78f56add6ca4e7aa83cd854c5af96b640a9" translate="yes" xml:space="preserve">
          <source>A multicasting observable that emits an event every time the value of the control changes, in the UI or programmatically.</source>
          <target state="translated">一个多播观察器,每当控件的值发生变化时都会发出一个事件,无论是在UI中还是在程序中。</target>
        </trans-unit>
        <trans-unit id="c57ad119f27d7b13c8173dac98d90680a4b7c61e" translate="yes" xml:space="preserve">
          <source>A multicasting observable that emits an event every time the value of the control changes, in the UI or programmatically. It also emits an event each time you call enable() or disable() without passing along {emitEvent: false} as a function argument.</source>
          <target state="translated">一个多播观察器,每当控件的值发生变化时,它都会发出一个事件,无论是在UI中还是在程序中。每次调用enable()或disable()时,它也会发出一个事件,而无需将{emitEvent:false}作为函数参数传递。</target>
        </trans-unit>
        <trans-unit id="c5be72e441e1cbf5309a798f7996e0e22dfeca5c" translate="yes" xml:space="preserve">
          <source>A name or path that uniquely identifies this NgModule in &lt;code&gt;&lt;a href=&quot;getmodulefactory&quot;&gt;getModuleFactory&lt;/a&gt;&lt;/code&gt;. If left &lt;code&gt;undefined&lt;/code&gt;, the NgModule is not registered with &lt;code&gt;&lt;a href=&quot;getmodulefactory&quot;&gt;getModuleFactory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;getmodulefactory&quot;&gt;getModuleFactory&lt;/a&gt;&lt;/code&gt; 中唯一标识此NgModule的名称或路径。如果 &lt;code&gt;undefined&lt;/code&gt; ，则NgModule不会在 &lt;code&gt;&lt;a href=&quot;getmodulefactory&quot;&gt;getModuleFactory&lt;/a&gt;&lt;/code&gt; 中注册。</target>
        </trans-unit>
        <trans-unit id="2d6369ac3a2355e5d07efe81c0f6015ff9a6a7f8" translate="yes" xml:space="preserve">
          <source>A named build target, as specified in the &quot;configurations&quot; section of angular.json. Each named target is accompanied by a configuration of option defaults for that target.</source>
          <target state="translated">一个命名的构建目标,在angular.json的 &quot;configations &quot;部分指定。每个命名的目标都伴随着该目标的默认选项配置。</target>
        </trans-unit>
        <trans-unit id="b0c4e5ba7f7e92e47ab468585168733f19b2c1d2" translate="yes" xml:space="preserve">
          <source>A named build target, as specified in the &quot;configurations&quot; section of angular.json. Each named target is accompanied by a configuration of option defaults for that target. Setting this explicitly overrides the &quot;--prod&quot; flag</source>
          <target state="translated">一个命名的构建目标,在angular.json的 &quot;configations &quot;部分指定。每个命名的目标都伴随着该目标的默认选项配置。明确地设置这个选项会覆盖&quot;--prod &quot;标志。</target>
        </trans-unit>
        <trans-unit id="35e09e8f6a0282a4b54c82b2def01ca54b74004d" translate="yes" xml:space="preserve">
          <source>A named builder configuration, defined in the &quot;configurations&quot; section of angular.json. The builder uses the named configuration to run the given target.</source>
          <target state="translated">一个在angular.json的 &quot;configations &quot;部分定义的命名的构建器配置。构建器使用命名的配置来运行指定的目标。</target>
        </trans-unit>
        <trans-unit id="b239fcc9e5b91abd9680f6c47f5d1819707bebf3" translate="yes" xml:space="preserve">
          <source>A navigation node has the following properties:</source>
          <target state="translated">导航节点具有以下属性。</target>
        </trans-unit>
        <trans-unit id="52a38a1d63f6d03db1e08268e77081ddcedf5a17" translate="yes" xml:space="preserve">
          <source>A nested expression is similar to the previous examples. As in the previous example, there are two translation units. The first one contains the text outside of the nested expression:</source>
          <target state="translated">嵌套表达式与前面的例子类似。与前一个例子一样,有两个翻译单元。第一个翻译单元包含嵌套表达式之外的文本。</target>
        </trans-unit>
        <trans-unit id="4f9bd18390c8ea037a93c12b58381b661d326629" translate="yes" xml:space="preserve">
          <source>A new injector has no providers. Angular initializes the injectors it creates with a set of preferred providers. You have to configure providers for your own app-specific dependencies.</source>
          <target state="translated">一个新的注入器没有提供者。Angular用一组首选的提供者来初始化它创建的注入器。你必须为你自己的应用程序特定的依赖配置提供者。</target>
        </trans-unit>
        <trans-unit id="9920b70991fc5f7bbd0d91bb6a57f0531af7194a" translate="yes" xml:space="preserve">
          <source>A new workspace, with a root folder named &lt;code&gt;angular-tour-of-heroes&lt;/code&gt;.</source>
          <target state="translated">一个新的工作空间，带有一个名为 &lt;code&gt;angular-tour-of-heroes&lt;/code&gt; 的根文件夹。</target>
        </trans-unit>
        <trans-unit id="b7367aaef7bddc8b8c8dc6e00b934abdd2f64d3b" translate="yes" xml:space="preserve">
          <source>A newly generated app contains the source files for a root module, with a root component and template. Each app has a &lt;code&gt;src&lt;/code&gt; folder that contains the logic, data, and assets.</source>
          <target state="translated">新生成的应用程序包含根模块的源文件，以及根组件和模板。每个应用程序都有一个 &lt;code&gt;src&lt;/code&gt; 文件夹，其中包含逻辑，数据和资产。</target>
        </trans-unit>
        <trans-unit id="d846c1f199b2800f149643f1562a8855aa905f45" translate="yes" xml:space="preserve">
          <source>A nice aspect of this approach is that the component gets clean data values from the view. It no longer requires knowledge of the &lt;code&gt;$event&lt;/code&gt; and its structure.</source>
          <target state="translated">这种方法的一个不错的方面是组件从视图中获取干净的数据值。它不再需要 &lt;code&gt;$event&lt;/code&gt; 及其结构的知识。</target>
        </trans-unit>
        <trans-unit id="d4f351e8229c9a97c430cacceb09aaa4f1945291" translate="yes" xml:space="preserve">
          <source>A no-op; the route is never stored since this strategy never detaches routes for later re-use.</source>
          <target state="translated">无操作;由于该策略从不拆分路由供以后重复使用,因此路由从不存储。</target>
        </trans-unit>
        <trans-unit id="f7bea64455863cb7a47256fbe5d769606742d500" translate="yes" xml:space="preserve">
          <source>A non-atomic deployment could result in the Angular service worker having visibility of partially updated content.</source>
          <target state="translated">非原子部署可能会导致Angular服务工作者拥有部分更新内容的可见性。</target>
        </trans-unit>
        <trans-unit id="5038f56560ea874f8af8e1f15e2b79f948a7daf0" translate="yes" xml:space="preserve">
          <source>A normal Angular application executes in the &lt;em&gt;browser&lt;/em&gt;, rendering pages in the DOM in response to user actions. Angular Universal executes on the &lt;em&gt;server&lt;/em&gt;, generating &lt;em&gt;static&lt;/em&gt; application pages that later get bootstrapped on the client. This means that the application generally renders more quickly, giving users a chance to view the application layout before it becomes fully interactive.</source>
          <target state="translated">普通的Angular应用程序在&lt;em&gt;浏览器中&lt;/em&gt;执行，以响应用户的操作在DOM中呈现页面。Angular Universal在&lt;em&gt;服务器&lt;/em&gt;上执行，生成&lt;em&gt;静态&lt;/em&gt;应用程序页面，这些页面随后在客户端上启动。这意味着应用程序通常可以更快地渲染，从而使用户有机会在应用程序变得完全交互式之前查看其布局。</target>
        </trans-unit>
        <trans-unit id="6f4fb46f2d63806c4ee58223f3276c1ec49fc7f1" translate="yes" xml:space="preserve">
          <source>A null player that must be imported to allow disabling of animations.</source>
          <target state="translated">一个必须导入的空播放器,以允许禁用动画。</target>
        </trans-unit>
        <trans-unit id="fd1b799ff07a117ff10fd1ea467b0942b98cf28f" translate="yes" xml:space="preserve">
          <source>A nullable value that is bound to a directive from a library which did not have &lt;code&gt;strictNullChecks&lt;/code&gt; enabled.</source>
          <target state="translated">一个空值，该值绑定到未启用 &lt;code&gt;strictNullChecks&lt;/code&gt; 的库中的指令。</target>
        </trans-unit>
        <trans-unit id="89554a3efabf9fb390af7746887f03e36dff835a" translate="yes" xml:space="preserve">
          <source>A number of Angular CLI commands run a complex process on your code, such as linting, building, or testing. The commands use an internal tool called Architect to run &lt;em&gt;CLI builders&lt;/em&gt;, which apply another tool to accomplish the desired task.</source>
          <target state="translated">许多Angular CLI命令在您的代码上运行一个复杂的过程，例如整理，构建或测试。这些命令使用一个称为Architect的内部工具来运行&lt;em&gt;CLI构建器&lt;/em&gt;，该&lt;em&gt;构建器&lt;/em&gt;将应用另一个工具来完成所需的任务。</target>
        </trans-unit>
        <trans-unit id="49d58886ff799d00cb5c13d4a1bb03aa1f2d809d" translate="yes" xml:space="preserve">
          <source>A object of key/value pairs for the set of changed inputs.</source>
          <target state="translated">改变的输入集的键/值对对象。</target>
        </trans-unit>
        <trans-unit id="4750c9e78af3bfad341001fe2ba5681170c6a43c" translate="yes" xml:space="preserve">
          <source>A page's platform is initialized implicitly when a platform is created via a platform factory (e.g. &lt;a href=&quot;../platform-browser/platformbrowser&quot;&gt;&lt;code&gt;platformBrowser&lt;/code&gt;&lt;/a&gt;), or explicitly by calling the &lt;a href=&quot;createplatform&quot;&gt;&lt;code&gt;createPlatform&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">通过平台工厂（例如&lt;a href=&quot;../platform-browser/platformbrowser&quot;&gt; &lt;code&gt;platformBrowser&lt;/code&gt; &lt;/a&gt;）创建平台时，将隐式初始化页面的平台，或者通过调用&lt;a href=&quot;createplatform&quot;&gt; &lt;code&gt;createPlatform&lt;/code&gt; &lt;/a&gt;函数来显式初始化页面的平台。</target>
        </trans-unit>
        <trans-unit id="651ec72899d5c2c6d5d6ec570ddbc877591ea92b" translate="yes" xml:space="preserve">
          <source>A parent animation can use the &lt;a href=&quot;../api/animations/query&quot;&gt;&lt;code&gt;query()&lt;/code&gt;&lt;/a&gt; function to collect inner elements located in disabled areas of the HTML template. Those elements can still animate.</source>
          <target state="translated">父动画可以使用&lt;a href=&quot;../api/animations/query&quot;&gt; &lt;code&gt;query()&lt;/code&gt; &lt;/a&gt;函数来收集位于HTML模板的禁用区域中的内部元素。这些元素仍然可以设置动画。</target>
        </trans-unit>
        <trans-unit id="1bf56c14e3173595a144a7896d73be753549c9f6" translate="yes" xml:space="preserve">
          <source>A parent component and its children share a service whose interface enables bi-directional communication &lt;em&gt;within the family&lt;/em&gt;.</source>
          <target state="translated">父组件及其子组件共享一个服务，该服务的接口支持&lt;em&gt;该家庭内部的&lt;/em&gt;双向通信。</target>
        </trans-unit>
        <trans-unit id="e39a968c28d7edf3e3a84ccc968736ab545b1b85" translate="yes" xml:space="preserve">
          <source>A parent component cannot use data binding to read child properties or invoke child methods. You can do both by creating a template reference variable for the child element and then reference that variable &lt;em&gt;within the parent template&lt;/em&gt; as seen in the following example.</source>
          <target state="translated">父组件不能使用数据绑定来读取子属性或调用子方法。您可以通过为子元素创建模板引用变量，然后&lt;em&gt;在父模板中&lt;/em&gt;引用该变量来完成这两个操作，如以下示例所示。</target>
        </trans-unit>
        <trans-unit id="466ac96618e709a5938e7d500890ad9390c558cc" translate="yes" xml:space="preserve">
          <source>A partial HTTP response which only includes the status and header data, but no response body.</source>
          <target state="translated">部分HTTP响应,只包括状态和头数据,但没有响应体。</target>
        </trans-unit>
        <trans-unit id="8d17248c21e747b7c3ba8050b3294178aab908f1" translate="yes" xml:space="preserve">
          <source>A patch release almost every week</source>
          <target state="translated">几乎每周都会发布一个补丁</target>
        </trans-unit>
        <trans-unit id="3b1347adabeefbe94ca0e9afab41079a38ae42ff" translate="yes" xml:space="preserve">
          <source>A patch release and pre-release (&lt;code&gt;next&lt;/code&gt; or &lt;code&gt;rc&lt;/code&gt;) build almost every week</source>
          <target state="translated">补丁发布和预发布（ &lt;code&gt;next&lt;/code&gt; 或 &lt;code&gt;rc&lt;/code&gt; ）几乎每周都会生成</target>
        </trans-unit>
        <trans-unit id="58efc28f87e76a25d4064ff09cf311712d722706" translate="yes" xml:space="preserve">
          <source>A percentage of the total animate time at which the style is to be applied.</source>
          <target state="translated">应用该样式的总动画时间的百分比。</target>
        </trans-unit>
        <trans-unit id="b708ec4a390f4e8a4776d5b2040d86b353d2a768" translate="yes" xml:space="preserve">
          <source>A period-delimited list of control names in one string, e.g. &lt;code&gt;'address.street'&lt;/code&gt;</source>
          <target state="translated">一个字符串中的句点分隔的控件名称列表，例如 &lt;code&gt;'address.street'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18518b3ff9da4f8e4217369e6b3f79391cbd0b85" translate="yes" xml:space="preserve">
          <source>A pipe can accept any number of optional parameters to fine-tune its output. To add parameters to a pipe, follow the pipe name with a colon ( : ) and then the parameter value (such as &lt;code&gt;currency:'EUR'&lt;/code&gt;). If the pipe accepts multiple parameters, separate the values with colons (such as &lt;code&gt;slice:1:5&lt;/code&gt;)</source>
          <target state="translated">管道可以接受任意数量的可选参数来微调其输出。要将参数添加到管道，请在管道名称后加上冒号（：），然后输入参数值（例如 &lt;code&gt;currency:'EUR'&lt;/code&gt; ）。如果管道接受多个参数，则用冒号分隔值（例如 &lt;code&gt;slice:1:5&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bedbc779498bd591c9a3dec452e89700422b56ad" translate="yes" xml:space="preserve">
          <source>A pipe class has one method, &lt;code&gt;transform&lt;/code&gt;, that manipulates the input value into a transformed output value. The &lt;code&gt;transform&lt;/code&gt; implementation rarely interacts with the DOM. Most pipes have no dependence on Angular other than the &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; metadata and an interface.</source>
          <target state="translated">管道类具有一个方法 &lt;code&gt;transform&lt;/code&gt; ，该方法将输入值操纵为转换后的输出值。该 &lt;code&gt;transform&lt;/code&gt; 实现很少与DOM交互。除了 &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; 元数据和接口外，大多数管道都不依赖Angular 。</target>
        </trans-unit>
        <trans-unit id="e4ea89ce13888d2b06e69e1b0a34b1371b619c98" translate="yes" xml:space="preserve">
          <source>A pipe class must implement the &lt;code&gt;&lt;a href=&quot;pipetransform&quot;&gt;PipeTransform&lt;/a&gt;&lt;/code&gt; interface. For example, if the name is &quot;myPipe&quot;, use a template binding expression such as the following:</source>
          <target state="translated">管道类必须实现 &lt;code&gt;&lt;a href=&quot;pipetransform&quot;&gt;PipeTransform&lt;/a&gt;&lt;/code&gt; 接口。例如，如果名称为&amp;ldquo; myPipe&amp;rdquo;，则使用模板绑定表达式，例如：</target>
        </trans-unit>
        <trans-unit id="3904967e02839e6509820f8ec95a0def7d2d6acd" translate="yes" xml:space="preserve">
          <source>A pipe is a class decorated with pipe metadata.</source>
          <target state="translated">管道是一个用管道元数据装饰的类。</target>
        </trans-unit>
        <trans-unit id="40549d115c085009897e81004613ce5f7153eebd" translate="yes" xml:space="preserve">
          <source>A pipe must belong to an NgModule in order for it to be available to a template. To make it a member of an NgModule, list it in the &lt;code&gt;declarations&lt;/code&gt; field of the &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata.</source>
          <target state="translated">管道必须属于NgModule，才能用于模板。要使其成为NgModule的成员，请在 &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 元数据的 &lt;code&gt;declarations&lt;/code&gt; 字段中将其列出。</target>
        </trans-unit>
        <trans-unit id="0f6b8b153194c20c0187ec690e01210761a65ec6" translate="yes" xml:space="preserve">
          <source>A pipe takes in data as input and transforms it to a desired output. In this page, you'll use pipes to transform a component's birthday property into a human-friendly date.</source>
          <target state="translated">管道将数据作为输入,并将其转换为所需的输出。在本页面中,您将使用管道将一个组件的生日属性转换为人类友好的日期。</target>
        </trans-unit>
        <trans-unit id="e35f19f9638c9d81846078d6ba2a979a2c496046" translate="yes" xml:space="preserve">
          <source>A policy for when to run guards and resolvers on a route.</source>
          <target state="translated">关于何时在路由上运行防护和解析器的策略。</target>
        </trans-unit>
        <trans-unit id="6322e77ad4a4989fe85f21f6c16add46ed1d428c" translate="yes" xml:space="preserve">
          <source>A position in screen coordinates (a tuple with x and y values) or a function that returns the top offset position.</source>
          <target state="translated">屏幕坐标中的一个位置(一个带有x和y值的元组)或一个返回顶部偏移位置的函数。</target>
        </trans-unit>
        <trans-unit id="83b235867fe2026bbac0ac32946c8dbf281bfb3f" translate="yes" xml:space="preserve">
          <source>A position in screen coordinates (a tuple with x and y values).</source>
          <target state="translated">屏幕坐标中的一个位置(一个带有x和y值的元组)。</target>
        </trans-unit>
        <trans-unit id="41d8149577449727c17e0704c95f074c91db70d0" translate="yes" xml:space="preserve">
          <source>A potential use for animation callbacks could be to cover for a slow API call, such as a database lookup. For example, you could set up the &lt;strong&gt;InProgress&lt;/strong&gt; button to have its own looping animation where it pulsates or does some other visual motion while the backend system operation finishes.</source>
          <target state="translated">动画回调的潜在用途可能是覆盖缓慢的API调用，例如数据库查找。例如，您可以将&lt;strong&gt;InProgress&lt;/strong&gt;按钮设置为具有自己的循环动画，在后端系统操作完成时，该按钮在其中脉动或进行其他视觉运动。</target>
        </trans-unit>
        <trans-unit id="6bfb9afe8113d548fbbb315af6723ac817365c83" translate="yes" xml:space="preserve">
          <source>A predefined &lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; for the base href to be used with the &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;. The base href is the URL prefix that should be preserved when generating and recognizing URLs.</source>
          <target state="translated">预定义的&lt;a href=&quot;../../guide/glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;，用于与 &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; 一起使用的基本href 。基本href是在生成和识别URL时应保留的URL前缀。</target>
        </trans-unit>
        <trans-unit id="9b55764d3eb54191c263b0e27dc2c991eb21fbc9" translate="yes" xml:space="preserve">
          <source>A predefined &lt;a href=&quot;../guide/glossary#di-token&quot;&gt;DI token&lt;/a&gt; for the base href to be used with the &lt;code&gt;&lt;a href=&quot;common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;. The base href is the URL prefix that should be preserved when generating and recognizing URLs.</source>
          <target state="translated">预定义的&lt;a href=&quot;../guide/glossary#di-token&quot;&gt;DI令牌&lt;/a&gt;，用于与 &lt;code&gt;&lt;a href=&quot;common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; 一起使用的基本href 。基本href是在生成和识别URL时应保留的URL前缀。</target>
        </trans-unit>
        <trans-unit id="557fd2b59c5e0790707cb4c256a2988eead2fed1" translate="yes" xml:space="preserve">
          <source>A predefined set of allowed values.</source>
          <target state="translated">一组预定义的允许值。</target>
        </trans-unit>
        <trans-unit id="ddc74c636d6ca337e8c1942b0e65b5175ae71201" translate="yes" xml:space="preserve">
          <source>A prefix to apply to generated selectors.</source>
          <target state="translated">应用于生成的选择器的前缀。</target>
        </trans-unit>
        <trans-unit id="f85bc3007675f205f13a65c0814c7779fddfde0e" translate="yes" xml:space="preserve">
          <source>A process that allows apps to display data values to a user and respond to user actions (such as clicks, touches, and keystrokes).</source>
          <target state="translated">一个允许应用程序向用户显示数据值并响应用户操作(如点击、触摸和按键)的过程。</target>
        </trans-unit>
        <trans-unit id="826b728e8dd71b33ef6978c05ec91c2dd062dc41" translate="yes" xml:space="preserve">
          <source>A process that speeds up application load time by splitting the application into multiple bundles and loading them on demand. For example, dependencies can be lazy loaded as needed&amp;mdash;as opposed to &lt;a href=&quot;glossary#eager-loading&quot;&gt;eager-loaded&lt;/a&gt; modules that are required by the root module and are thus loaded on launch.</source>
          <target state="translated">通过将应用程序分成多个包并按需加载它们来加快应用程序加载时间的过程。例如，可以根据需要延迟加载依赖项，这与根模块所要求的，因此在启动时加载的预先&lt;a href=&quot;glossary#eager-loading&quot;&gt;加载的&lt;/a&gt;模块相反。</target>
        </trans-unit>
        <trans-unit id="cf702bb551fcbd63146fa58c0443c0e81f431dfb" translate="yes" xml:space="preserve">
          <source>A producer of multiple values, which it pushes to &lt;a href=&quot;glossary#subscriber&quot;&gt;subscribers&lt;/a&gt;. Used for asynchronous event handling throughout Angular. You execute an observable by subscribing to it with its &lt;code&gt;subscribe()&lt;/code&gt; method, passing callbacks for notifications of new values, errors, or completion.</source>
          <target state="translated">具有多个值的生产者，将其推送给&lt;a href=&quot;glossary#subscriber&quot;&gt;订户&lt;/a&gt;。用于整个Angular中的异步事件处理。您可以通过以下方式执行可观察项：使用其 &lt;code&gt;subscribe()&lt;/code&gt; 方法订阅该可观察项，并传递回调以通知新值，错误或完成。</target>
        </trans-unit>
        <trans-unit id="389a0d3db57aebec32082a719d81b168d371de7f" translate="yes" xml:space="preserve">
          <source>A programming language based on JavaScript that is notable for its optional typing system. TypeScript provides compile-time type checking and strong tooling support (such as code completion, refactoring, inline documentation, and intelligent search). Many code editors and IDEs support TypeScript either natively or with plug-ins.</source>
          <target state="translated">一种基于JavaScript的编程语言,以其可选的类型系统而闻名。TypeScript提供了编译时类型检查和强大的工具支持(如代码完成、重构、内联文档和智能搜索)。许多代码编辑器和IDEs都支持TypeScript,无论是原生的还是带有插件的。</target>
        </trans-unit>
        <trans-unit id="b1c6caa6538c99e13bd629cbb98b70f6d54abb0c" translate="yes" xml:space="preserve">
          <source>A project's &lt;code&gt;src/environments/&lt;/code&gt; folder contains the base configuration file, &lt;code&gt;environment.ts&lt;/code&gt;, which provides a default environment. You can add override defaults for additional environments, such as production and staging, in target-specific configuration files.</source>
          <target state="translated">项目的 &lt;code&gt;src/environments/&lt;/code&gt; 文件夹包含基本配置文件 &lt;code&gt;environment.ts&lt;/code&gt; ，它提供了默认环境。您可以在特定于目标的配置文件中为其他环境（例如生产和暂存）添加替代默认值。</target>
        </trans-unit>
        <trans-unit id="7d819f9cac8ab3585eb715c80934a771ae6e032e" translate="yes" xml:space="preserve">
          <source>A project, as generated by the &lt;a href=&quot;cli/new&quot;&gt;&lt;code&gt;ng new&lt;/code&gt;&lt;/a&gt;, contains the set of source files, resources, and configuration files that you need to develop and test the application using the CLI. Projects can also be created with the &lt;code&gt;ng generate application&lt;/code&gt; and &lt;code&gt;ng generate library&lt;/code&gt; commands.</source>
          <target state="translated">由&lt;a href=&quot;cli/new&quot;&gt; &lt;code&gt;ng new&lt;/code&gt; &lt;/a&gt;生成的项目包含使用CLI开发和测试应用程序所需的一组源文件，资源和配置文件。也可以使用 &lt;code&gt;ng generate application&lt;/code&gt; 和 &lt;code&gt;ng generate library&lt;/code&gt; 命令来创建项目。</target>
        </trans-unit>
        <trans-unit id="686ac56db71d3e020a58d38031c96ea37deeab84" translate="yes" xml:space="preserve">
          <source>A property &lt;code&gt;ngTemplateGuard_(someInputProperty)&lt;/code&gt; lets you specify a more accurate type for an input expression within the template.</source>
          <target state="translated">&lt;code&gt;ngTemplateGuard_(someInputProperty)&lt;/code&gt; 属性使您可以为模板中的输入表达式指定更准确的类型。</target>
        </trans-unit>
        <trans-unit id="3fcab1b27f2adf988a0e5f9ae8aa96c046251ada" translate="yes" xml:space="preserve">
          <source>A property name or method call should be the norm, but an occasional Boolean negation, &lt;code&gt;!&lt;/code&gt;, is OK. Otherwise, confine application and business logic to the component, where it is easier to develop and test.</source>
          <target state="translated">属性名称或方法调用应该是规范，但偶尔会出现布尔否定 &lt;code&gt;!&lt;/code&gt; ，还可以。否则，将应用程序和业务逻辑限制在易于开发和测试的组件上。</target>
        </trans-unit>
        <trans-unit id="303bcae98ffe1ea88fdce30e7edca4a926a46c15" translate="yes" xml:space="preserve">
          <source>A provider can be the service class itself, so that the injector can use &lt;code&gt;new&lt;/code&gt; to create an instance. You might also define more than one class to provide the same service in different ways, and configure different injectors with different providers.</source>
          <target state="translated">提供者可以是服务类本身，以便注入器可以使用 &lt;code&gt;new&lt;/code&gt; 来创建实例。您可能还定义了多个类，以便以不同的方式提供相同的服务，并为不同的注射器配置不同的提供程序。</target>
        </trans-unit>
        <trans-unit id="aee45ccd48ac20faac5b08fd2d4679dd8d03f8d9" translate="yes" xml:space="preserve">
          <source>A provider in the implementation of the lightweight injection token which associates the lightweight injection token with the implementation.</source>
          <target state="translated">轻量级注入令牌实施中的提供者,它将轻量级注入令牌与实施相关联。</target>
        </trans-unit>
        <trans-unit id="9060af48d7b3ea4565ffc43d0325a160797c72c4" translate="yes" xml:space="preserve">
          <source>A provider is an instruction to the &lt;a href=&quot;dependency-injection&quot;&gt;Dependency Injection&lt;/a&gt; system on how to obtain a value for a dependency. Most of the time, these dependencies are services that you create and provide.</source>
          <target state="translated">提供程序是对&lt;a href=&quot;dependency-injection&quot;&gt;依赖关系注入&lt;/a&gt;系统的指令，说明如何获取依赖关系的值。大多数情况下，这些依赖项是您创建和提供的服务。</target>
        </trans-unit>
        <trans-unit id="94914bafc3d875ce4fd31120e0f5c1d6b0f53e09" translate="yes" xml:space="preserve">
          <source>A provider tells an injector &lt;em&gt;how to create the service&lt;/em&gt;. You must configure an injector with a provider before that injector can create a service (or provide any other kind of dependency).</source>
          <target state="translated">提供者告诉注入者&lt;em&gt;如何创建服务&lt;/em&gt;。您必须先使用提供程序配置一个注入程序，然后该注入程序才能创建服务（或提供任何其他类型的依赖关系）。</target>
        </trans-unit>
        <trans-unit id="7091a1c3bd9d92d76003ced6042cacb1636cf3ca" translate="yes" xml:space="preserve">
          <source>A provider token for a service that turns on &lt;a href=&quot;testing#automatic-change-detection&quot;&gt;automatic change detection&lt;/a&gt;.</source>
          <target state="translated">打开&lt;a href=&quot;testing#automatic-change-detection&quot;&gt;自动更改检测&lt;/a&gt;的服务的提供者令牌。</target>
        </trans-unit>
        <trans-unit id="aff177f3bc659050865683995b13f30d726c3e7c" translate="yes" xml:space="preserve">
          <source>A provider token for a service that turns on &lt;a href=&quot;testing-components-scenarios#automatic-change-detection&quot;&gt;automatic change detection&lt;/a&gt;.</source>
          <target state="translated">打开&lt;a href=&quot;testing-components-scenarios#automatic-change-detection&quot;&gt;自动更改检测&lt;/a&gt;的服务的提供者令牌。</target>
        </trans-unit>
        <trans-unit id="5e34ff74155cf2ee267810e5a88a88aaecf8f72b" translate="yes" xml:space="preserve">
          <source>A provider token used to configure the location upgrade module.</source>
          <target state="translated">用于配置位置升级模块的提供者令牌。</target>
        </trans-unit>
        <trans-unit id="35b952b56e93bc63b0bed6c15cf689e5aab13eab" translate="yes" xml:space="preserve">
          <source>A published library typically provides a README or other documentation on how to add that lib to your app. For an example, see &lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material&lt;/a&gt; docs.</source>
          <target state="translated">已发布的库通常会提供自述文件或其他有关如何将该库添加到您的应用程序的文档。有关示例，请参见&lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="243057217d1daaaa7e7f586b74d5a3196988fe2f" translate="yes" xml:space="preserve">
          <source>A pure pipe must use a pure function, which is one that processes inputs and returns values without side effects. In other words, given the same input, a pure function should always return the same output.</source>
          <target state="translated">纯管必须使用纯函数,也就是处理输入并返回没有副作用的值。换句话说,给定相同的输入,一个纯函数应该总是返回相同的输出。</target>
        </trans-unit>
        <trans-unit id="0781fc1f661b3bd269d0c78ccd7683277722e5fa" translate="yes" xml:space="preserve">
          <source>A pure pipe uses pure functions. Pure functions process inputs and return values without detectable side effects. Given the same input, they should always return the same output.</source>
          <target state="translated">纯管道使用纯函数。纯函数处理输入并返回值,没有可检测的副作用。给予相同的输入,它们应该总是返回相同的输出。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
