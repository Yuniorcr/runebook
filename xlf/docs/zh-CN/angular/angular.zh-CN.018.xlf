<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="fbe3fde2fb0a60e4ec9cfcd947c47d4e664ce7a7" translate="yes" xml:space="preserve">
          <source>To convert this binding to use specialized objects, turn the array of hero names into an array of &lt;code&gt;Hero&lt;/code&gt; objects. For that you'll need a &lt;code&gt;Hero&lt;/code&gt; class:</source>
          <target state="translated">要将绑定转换为使用专用对象，请将英雄名称数组转换为 &lt;code&gt;Hero&lt;/code&gt; 对象数组。为此，您需要一个 &lt;code&gt;Hero&lt;/code&gt; 类：</target>
        </trans-unit>
        <trans-unit id="3e235ca1b49cbf515a53d4eb460cb0a499395651" translate="yes" xml:space="preserve">
          <source>To copy a code example from this tutorial, click the icon at the top right of the code example box, and then paste the code snippet from the clipboard into StackBlitz.</source>
          <target state="translated">要从本教程中复制一个代码示例,点击代码示例框右上方的图标,然后将剪贴板中的代码片段粘贴到StackBlitz中。</target>
        </trans-unit>
        <trans-unit id="b27e4d885fe2defbb235fa198172a39e1ab9f6e4" translate="yes" xml:space="preserve">
          <source>To correct the problem, call &lt;code&gt;compileComponents()&lt;/code&gt; as explained &lt;a href=&quot;testing#compile-components&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">要更正此问题，请按&lt;a href=&quot;testing#compile-components&quot;&gt;以下&lt;/a&gt;说明调用 &lt;code&gt;compileComponents()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b99d3a2a82a487cd7d58a6066fda66fb46065bff" translate="yes" xml:space="preserve">
          <source>To correct the problem, call &lt;code&gt;compileComponents()&lt;/code&gt; as explained &lt;a href=&quot;testing-components-scenarios#compile-components&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">要更正此问题，请按&lt;a href=&quot;testing-components-scenarios#compile-components&quot;&gt;以下&lt;/a&gt;说明调用 &lt;code&gt;compileComponents()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="979325cb37deb2c50164b83f04e810b1ac2b55a5" translate="yes" xml:space="preserve">
          <source>To correct this error, export a function from the module and refer to the function in a &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; provider instead.</source>
          <target state="translated">要更正此错误，请从模块中导出函数，然后在 &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; 提供程序中引用该函数。</target>
        </trans-unit>
        <trans-unit id="0de991b19c02e8ee0427a429122c7e2d73a6ca37" translate="yes" xml:space="preserve">
          <source>To correct this error, export a function from the module and refer to the function in a &lt;code&gt;useFactory&lt;/code&gt; provider instead.</source>
          <target state="translated">要更正此错误，请从模块中导出函数，然后在 &lt;code&gt;useFactory&lt;/code&gt; 提供程序中引用该函数。</target>
        </trans-unit>
        <trans-unit id="1ecaf5471a0ced58416233b3602e2e5a39d32a9d" translate="yes" xml:space="preserve">
          <source>To correct this error, provide the initial value of the variable in an initializer clause &lt;em&gt;on the same line&lt;/em&gt;.</source>
          <target state="translated">要更正此错误，请&lt;em&gt;在同一行&lt;/em&gt;的初始化子句中提供变量的初始值。</target>
        </trans-unit>
        <trans-unit id="4dee6cdbff0c50b18b7cf0744c39d9afb9e81794" translate="yes" xml:space="preserve">
          <source>To correct this error, refer to non-destructured values.</source>
          <target state="translated">要纠正这个错误,请参考非结构化值。</target>
        </trans-unit>
        <trans-unit id="babb4800b9ce7124e0062940991131f750bd641a" translate="yes" xml:space="preserve">
          <source>To create a component using the Angular CLI:</source>
          <target state="translated">要使用Angular CLI创建一个组件。</target>
        </trans-unit>
        <trans-unit id="88fabc18833c78d0934957c18fe19782c262d822" translate="yes" xml:space="preserve">
          <source>To create a component, verify that you have met the following prerequisites:</source>
          <target state="translated">要创建一个组件,请确认您已经满足以下先决条件。</target>
        </trans-unit>
        <trans-unit id="67bb6a40877c035fe23caa2365ec0af551e4e717" translate="yes" xml:space="preserve">
          <source>To create a file in the &lt;code&gt;src/locale&lt;/code&gt; directory, specify the output path as an option, as shown in the following example:</source>
          <target state="translated">要在 &lt;code&gt;src/locale&lt;/code&gt; 目录中创建文件，请指定输出路径作为选项，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="8122f0d68c6098d4c122991ebd95c6cf88d61b30" translate="yes" xml:space="preserve">
          <source>To create a nested group in &lt;code&gt;profileForm&lt;/code&gt;, add a nested &lt;code&gt;address&lt;/code&gt; element to the form group instance.</source>
          <target state="translated">要在 &lt;code&gt;profileForm&lt;/code&gt; 中创建嵌套组，请将嵌套的 &lt;code&gt;address&lt;/code&gt; 元素添加到表单组实例。</target>
        </trans-unit>
        <trans-unit id="fafbd773ca94ccd66053f04954d31716c4ab9f28" translate="yes" xml:space="preserve">
          <source>To create a new application in the strict mode within an existing non-strict workspace, run the following command:</source>
          <target state="translated">要在现有的非严格工作区中创建严格模式的新应用程序,请运行以下命令。</target>
        </trans-unit>
        <trans-unit id="dbca6227b9db6ab1847c89187b909d5fe85abac4" translate="yes" xml:space="preserve">
          <source>To create a new component manually:</source>
          <target state="translated">要手动创建一个新的组件。</target>
        </trans-unit>
        <trans-unit id="d2bf7fb2d3e94211afcd57a10f20c4c45cfe0d7d" translate="yes" xml:space="preserve">
          <source>To create a new workspace and an initial app project:</source>
          <target state="translated">要创建一个新的工作区和一个初始应用项目。</target>
        </trans-unit>
        <trans-unit id="5bd4653200aaca61df950cdd4eca5d949291ae56" translate="yes" xml:space="preserve">
          <source>To create a new workspace and application using the strict mode, run the following command:</source>
          <target state="translated">要使用严格模式创建新的工作区和应用程序,请运行以下命令。</target>
        </trans-unit>
        <trans-unit id="f144d38768edd99f2d27499d71edd950a08584a3" translate="yes" xml:space="preserve">
          <source>To create a new workspace and initial starter app:</source>
          <target state="translated">要创建一个新的工作区和初始启动程序。</target>
        </trans-unit>
        <trans-unit id="1aa719950868f1d4fa3ac83a344dcfa8c80b6018" translate="yes" xml:space="preserve">
          <source>To create a reusable animation, use the &lt;a href=&quot;../api/animations/animation&quot;&gt;&lt;code&gt;animation()&lt;/code&gt;&lt;/a&gt; method to define an animation in a separate &lt;code&gt;.ts&lt;/code&gt; file and declare this animation definition as a &lt;code&gt;const&lt;/code&gt; export variable. You can then import and reuse this animation in any of your app components using the &lt;a href=&quot;../api/animations/useanimation&quot;&gt;&lt;code&gt;useAnimation()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">若要创建可重用的动画，请使用&lt;a href=&quot;../api/animations/animation&quot;&gt; &lt;code&gt;animation()&lt;/code&gt; &lt;/a&gt;方法在单独的 &lt;code&gt;.ts&lt;/code&gt; 文件中定义动画，并将此动画定义声明为 &lt;code&gt;const&lt;/code&gt; 导出变量。然后，您可以使用&lt;a href=&quot;../api/animations/useanimation&quot;&gt; &lt;code&gt;useAnimation()&lt;/code&gt; &lt;/a&gt; API 在任何应用程序组件中导入和重用此动画。</target>
        </trans-unit>
        <trans-unit id="75d0e30751a493533457e112686e8dcb02d5af60" translate="yes" xml:space="preserve">
          <source>To create a single class binding, use the prefix &lt;code&gt;class&lt;/code&gt; followed by a dot and the name of the CSS class&amp;mdash;for example, &lt;code&gt;[class.sale]=&quot;onSale&quot;&lt;/code&gt;. Angular adds the class when the bound expression, &lt;code&gt;onSale&lt;/code&gt; is truthy, and it removes the class when the expression is falsy&amp;mdash;with the exception of &lt;code&gt;undefined&lt;/code&gt;. See &lt;a href=&quot;style-precedence#styling-delegation&quot;&gt;styling delegation&lt;/a&gt; for more information.</source>
          <target state="translated">要创建单个类绑定，请使用前缀 &lt;code&gt;class&lt;/code&gt; 后跟一个点和CSS类的名称，例如 &lt;code&gt;[class.sale]=&quot;onSale&quot;&lt;/code&gt; 。 Angular在绑定表达式 &lt;code&gt;onSale&lt;/code&gt; 为true时添加类，在表达式为false时删除类（ &lt;code&gt;undefined&lt;/code&gt; 除外）。有关更多信息，请参见&lt;a href=&quot;style-precedence#styling-delegation&quot;&gt;样式委托&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="654531e7f01f2a99237d0195284ddb4817aa8ab0" translate="yes" xml:space="preserve">
          <source>To create a single style binding, use the prefix &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; followed by a dot and the name of the CSS style property&amp;mdash;for example, &lt;code&gt;[style.width]=&quot;width&quot;&lt;/code&gt;. Angular sets the property to the value of the bound expression, which is usually a string. Optionally, you can add a unit extension like &lt;code&gt;em&lt;/code&gt; or &lt;code&gt;%&lt;/code&gt;, which requires a number type.</source>
          <target state="translated">要创建单个样式绑定，请使用前缀 &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; 后跟点和CSS样式属性的名称，例如 &lt;code&gt;[style.width]=&quot;width&quot;&lt;/code&gt; 。Angular将属性设置为绑定表达式的值，该表达式通常是一个字符串。（可选）您可以添加单位扩展名，例如 &lt;code&gt;em&lt;/code&gt; 或 &lt;code&gt;%&lt;/code&gt; ，它需要数字类型。</target>
        </trans-unit>
        <trans-unit id="29ae33325b206d2fd3cdedfd24a2c41e5f192288" translate="yes" xml:space="preserve">
          <source>To create the cart page, you begin by following the same steps you did to create the product details component and to set up routing for the new component.</source>
          <target state="translated">要创建购物车页面,首先要按照创建产品详情组件和为新组件设置路由的相同步骤进行。</target>
        </trans-unit>
        <trans-unit id="090dfe1a5c79f77a9be595e199d5fab1f453c8d6" translate="yes" xml:space="preserve">
          <source>To create the cart view, begin by following the same steps you did to create the product details component and configure routing for the new component.</source>
          <target state="translated">要创建购物车视图,请按照创建产品详细信息组件和为新组件配置路由的相同步骤开始。</target>
        </trans-unit>
        <trans-unit id="594ec3ddcc19c25f73ea897495b521aecaf86016" translate="yes" xml:space="preserve">
          <source>To create the server-side app module, &lt;code&gt;app.server.module.ts&lt;/code&gt;, run the following CLI command.</source>
          <target state="translated">要创建服务器端应用程序模块 &lt;code&gt;app.server.module.ts&lt;/code&gt; ，请运行以下CLI命令。</target>
        </trans-unit>
        <trans-unit id="a1d7d554f2d72ca28c730058079d294822be35c1" translate="yes" xml:space="preserve">
          <source>To create, build, and serve a new, basic Angular project on a development server, go to the parent directory of your new workspace use the following commands:</source>
          <target state="translated">要在开发服务器上创建、构建和服务一个新的、基本的Angular项目,进入新工作区的父目录使用以下命令。</target>
        </trans-unit>
        <trans-unit id="65acbd001432e22b30e796e7e61e3dfe440088a8" translate="yes" xml:space="preserve">
          <source>To customize the default option comparison algorithm, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; supports &lt;code&gt;compareWith&lt;/code&gt; input. &lt;code&gt;compareWith&lt;/code&gt; takes a &lt;strong&gt;function&lt;/strong&gt; which has two arguments: &lt;code&gt;option1&lt;/code&gt; and &lt;code&gt;option2&lt;/code&gt;. If &lt;code&gt;compareWith&lt;/code&gt; is given, Angular selects option by the return value of the function.</source>
          <target state="translated">要自定义默认的选项比较算法， &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 支持 &lt;code&gt;compareWith&lt;/code&gt; 输入。 &lt;code&gt;compareWith&lt;/code&gt; 需要一个&lt;strong&gt;函数&lt;/strong&gt;有两个参数： &lt;code&gt;option1&lt;/code&gt; 和 &lt;code&gt;option2&lt;/code&gt; 。如果给出 &lt;code&gt;compareWith&lt;/code&gt; ，Angular会根据函数的返回值选择选项。</target>
        </trans-unit>
        <trans-unit id="c9057dec56a92572abc6bcb328cdc254209b6283" translate="yes" xml:space="preserve">
          <source>To customize the default option comparison algorithm, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; supports &lt;code&gt;compareWith&lt;/code&gt; input. See the &lt;code&gt;&lt;a href=&quot;selectcontrolvalueaccessor&quot;&gt;SelectControlValueAccessor&lt;/a&gt;&lt;/code&gt; for usage.</source>
          <target state="translated">要自定义默认的选项比较算法， &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 支持 &lt;code&gt;compareWith&lt;/code&gt; 输入。有关用法，请参见 &lt;code&gt;&lt;a href=&quot;selectcontrolvalueaccessor&quot;&gt;SelectControlValueAccessor&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12614d5a0a4f9980916f0bd6829fb9e94aeee5ca" translate="yes" xml:space="preserve">
          <source>To deactivate the service worker, remove or rename the &lt;code&gt;ngsw.json&lt;/code&gt; file. When the service worker's request for &lt;code&gt;ngsw.json&lt;/code&gt; returns a &lt;code&gt;404&lt;/code&gt;, then the service worker removes all of its caches and de-registers itself, essentially self-destructing.</source>
          <target state="translated">要停用服务工作者，请删除或重命名 &lt;code&gt;ngsw.json&lt;/code&gt; 文件。当服务人员对 &lt;code&gt;ngsw.json&lt;/code&gt; 的请求返回 &lt;code&gt;404&lt;/code&gt; 时，服务人员将删除其所有缓存并自行注销，这实际上是自毁的。</target>
        </trans-unit>
        <trans-unit id="9108d6f3d8bba0bf373979ce840c2d85dbc55392" translate="yes" xml:space="preserve">
          <source>To declare the styles for a component in a separate file, add a &lt;code&gt;stylesUrls&lt;/code&gt; property to the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">要在单独的文件中声明组件的样式，请将 &lt;code&gt;stylesUrls&lt;/code&gt; 属性添加到 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 装饰器。</target>
        </trans-unit>
        <trans-unit id="95e38d849c5796bd6398c2761b41e463c7976d04" translate="yes" xml:space="preserve">
          <source>To define a class as a service in Angular, use the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator to provide the metadata that allows Angular to inject it into a component as a &lt;em&gt;dependency&lt;/em&gt;. Similarly, use the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator to indicate that a component or other class (such as another service, a pipe, or an NgModule) &lt;em&gt;has&lt;/em&gt; a dependency.</source>
          <target state="translated">要将类定义为Angular中的服务，请使用 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰器提供允许Angular将其作为&lt;em&gt;依赖项&lt;/em&gt;注入组件的元数据。类似地，使用 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰器指示组件或其他类（例如，另一个服务，管道或NgModule）&lt;em&gt;具有&lt;/em&gt;依赖项。</target>
        </trans-unit>
        <trans-unit id="ad6c984d27957b7c6989d1d288e104c9c138aa30" translate="yes" xml:space="preserve">
          <source>To define a directive, mark the class with the decorator and provide metadata.</source>
          <target state="translated">要定义一个指令,请用装饰符标记该类并提供元数据。</target>
        </trans-unit>
        <trans-unit id="02af62d3d61d2c5e19973a6b482fa1173a786ab6" translate="yes" xml:space="preserve">
          <source>To define a dynamic form, take the following steps.</source>
          <target state="translated">要定义一个动态表格,请采取以下步骤。</target>
        </trans-unit>
        <trans-unit id="e42033ffe1eecc4e2eee5697858df411d08f9c66" translate="yes" xml:space="preserve">
          <source>To define a template as an external file, add a &lt;code&gt;templateUrl&lt;/code&gt; property to the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">要将模板定义为外部文件，请将 &lt;code&gt;templateUrl&lt;/code&gt; 属性添加到 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 装饰器。</target>
        </trans-unit>
        <trans-unit id="52964b4b5ce54e1050f8c2ee29cd57e64a45fb23" translate="yes" xml:space="preserve">
          <source>To define a template within the component, add a &lt;code&gt;template&lt;/code&gt; property to the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator that contains the HTML you want to use.</source>
          <target state="translated">要在组件中定义模板，请将 &lt;code&gt;template&lt;/code&gt; 属性添加到 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 装饰器中，该装饰器包含要使用的HTML。</target>
        </trans-unit>
        <trans-unit id="7461bcf852b17248b69621e8549d73cd98177d21" translate="yes" xml:space="preserve">
          <source>To define and show an error message when appropriate, take the following steps.</source>
          <target state="translated">要在适当的时候定义和显示错误信息,请采取以下步骤。</target>
        </trans-unit>
        <trans-unit id="3d66988bd9d4c9dd0ef51965ef7c55945a3dcc40" translate="yes" xml:space="preserve">
          <source>To define how users navigate through your application, you use routes. You can add routes to define how users navigate from one part of your application to another. You can also configure routes to guard against unexpected or unauthorized behavior.</source>
          <target state="translated">要定义用户如何在你的应用程序中导航,你可以使用路由。您可以添加路由来定义用户如何从应用程序的一个部分导航到另一个部分。您也可以配置路由来防止意外或未经授权的行为。</target>
        </trans-unit>
        <trans-unit id="1cd846925adda37616140e026544f1e443869411" translate="yes" xml:space="preserve">
          <source>To define navigation rules, you associate &lt;em&gt;navigation paths&lt;/em&gt; with your components. A path uses a URL-like syntax that integrates your program data, in much the same way that template syntax integrates your views with your program data. You can then apply program logic to choose which views to show or to hide, in response to user input and your own access rules.</source>
          <target state="translated">要定义导航规则，请将&lt;em&gt;导航路径&lt;/em&gt;与组件关联。路径使用类似于URL的语法来集成程序数据，就像使用模板语法将视图与程序数据集成一样。然后，您可以根据用户输入和您自己的访问规则，应用程序逻辑来选择要显示或隐藏的视图。</target>
        </trans-unit>
        <trans-unit id="10002cbe4fad471dff199ec10e58251721fd351d" translate="yes" xml:space="preserve">
          <source>To demonstrate the fundamentals, this example only logs to the console, &lt;code&gt;returns&lt;/code&gt; true immediately, and allows navigation to proceed:</source>
          <target state="translated">为了说明基本原理，此示例仅登录到控制台，立即 &lt;code&gt;returns&lt;/code&gt; true，并允许进行导航：</target>
        </trans-unit>
        <trans-unit id="40023445875429f2241340be247e7b7eb157f3bd" translate="yes" xml:space="preserve">
          <source>To demonstrate this process, see the &lt;code&gt;messages.fr.xlf&lt;/code&gt; file in the live example, which includes a French translation you can edit without a special XLIFF editor or knowledge of French. Follow these steps:</source>
          <target state="translated">为了演示此过程，请参见实时示例中的 &lt;code&gt;messages.fr.xlf&lt;/code&gt; 文件，其中包含法语翻译，您无需特殊的XLIFF编辑器或不懂法语就可以进行编辑。跟着这些步骤：</target>
        </trans-unit>
        <trans-unit id="2e9f5fcdd9d08eaae4f6f27d8f15141de7ee4a5f" translate="yes" xml:space="preserve">
          <source>To deploy your application, you have to compile it, and then host the JavaScript, CSS, and HTML on a web server. Built Angular applications are very portable and can live in any environment or served by any technology, such as Node, Java, .NET, PHP, and many others.</source>
          <target state="translated">要部署你的应用程序,你必须编译它,然后将JavaScript,CSS和HTML托管在Web服务器上。内置的Angular应用程序具有很强的可移植性,可以生活在任何环境中,或由任何技术服务,如Node、Java、.NET、PHP等。</target>
        </trans-unit>
        <trans-unit id="4201debf2f327ff9a5bac6e9078af7bf6115f61a" translate="yes" xml:space="preserve">
          <source>To determine an event target, Angular checks if the name of the target event matches an event property of a known directive. In the following example, Angular checks to see if &lt;code&gt;myClick&lt;/code&gt; is an event on the custom &lt;code&gt;ClickDirective&lt;/code&gt;.</source>
          <target state="translated">为了确定事件目标，Angular会检查目标事件的名称是否与已知指令的事件属性匹配。在以下示例中，Angular检查 &lt;code&gt;myClick&lt;/code&gt; 是否是自定义 &lt;code&gt;ClickDirective&lt;/code&gt; 上的事件。</target>
        </trans-unit>
        <trans-unit id="7526788522c1b03b983dd15f77818d3fb1ce5c12" translate="yes" xml:space="preserve">
          <source>To determine if your routes are actually evaluated &lt;a href=&quot;router-tutorial-toh#routing-module-order&quot;&gt;in the proper order&lt;/a&gt;, you can inspect the router's configuration.</source>
          <target state="translated">要确定您的路由是否实际&lt;a href=&quot;router-tutorial-toh#routing-module-order&quot;&gt;按照正确的顺序&lt;/a&gt;进行评估，可以检查路由器的配置。</target>
        </trans-unit>
        <trans-unit id="458c0ad6c07671bce624449b3ec9d294dc2007ad" translate="yes" xml:space="preserve">
          <source>To determine the destination project, use the &lt;code&gt;Tree.read()&lt;/code&gt; method to read the contents of the workspace configuration file, &lt;code&gt;angular.json&lt;/code&gt;, at the root of the workspace. Add the following code to your factory function.</source>
          <target state="translated">要确定目标项目，请使用 &lt;code&gt;Tree.read()&lt;/code&gt; 方法在工作区的根目录读取工作区配置文件 &lt;code&gt;angular.json&lt;/code&gt; 的内容。将以下代码添加到工厂函数中。</target>
        </trans-unit>
        <trans-unit id="313cab03ec9f915ef435def5627fa903faf1ec5b" translate="yes" xml:space="preserve">
          <source>To directly check the &lt;code&gt;isActive&lt;/code&gt; status of the link, assign the &lt;code&gt;&lt;a href=&quot;routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; instance to a template variable. For example, the following checks the status without assigning any CSS classes:</source>
          <target state="translated">要直接检查链接的 &lt;code&gt;isActive&lt;/code&gt; 状态，请将 &lt;code&gt;&lt;a href=&quot;routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; 实例分配给模板变量。例如，以下代码在不分配任何CSS类的情况下检查状态：</target>
        </trans-unit>
        <trans-unit id="41761d654e74409fdfd74499d75e57248eb90e5e" translate="yes" xml:space="preserve">
          <source>To disable a button's functionality depending on a Boolean value, bind the DOM &lt;code&gt;disabled&lt;/code&gt; property to a property in the class that is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">要根据布尔值禁用按钮的功能，请将DOM &lt;code&gt;disabled&lt;/code&gt; 属性绑定到 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 类中的属性。</target>
        </trans-unit>
        <trans-unit id="b38921f33869fd230c21c0400a6e54f928af5829" translate="yes" xml:space="preserve">
          <source>To disable all animations for an Angular app, place the &lt;code&gt;@.disabled&lt;/code&gt; host binding on the topmost Angular component.</source>
          <target state="translated">要禁用Angular应用程序的所有动画，请将 &lt;code&gt;@.disabled&lt;/code&gt; 主机绑定放置在最顶部的Angular组件上。</target>
        </trans-unit>
        <trans-unit id="b6cdd2ec5c4ef28a335c73d42124433a61f9f09d" translate="yes" xml:space="preserve">
          <source>To display a 404 page, set up a &lt;a href=&quot;router#wildcard-route-how-to&quot;&gt;wildcard route&lt;/a&gt; with the &lt;code&gt;component&lt;/code&gt; property set to the component you'd like to use for your 404 page as follows:</source>
          <target state="translated">要显示404页面，请设置&lt;a href=&quot;router#wildcard-route-how-to&quot;&gt;通配符路由&lt;/a&gt;，并将 &lt;code&gt;component&lt;/code&gt; 属性设置为要用于404页面的组件，如下所示：</target>
        </trans-unit>
        <trans-unit id="8d2b1d0f9febd720f6513d3ea282a6265dbf4671" translate="yes" xml:space="preserve">
          <source>To display a list of heroes, begin by adding an array of hero names to the component and redefine &lt;code&gt;myHero&lt;/code&gt; to be the first name in the array.</source>
          <target state="translated">要显示英雄列表，请先在组件中添加一个英雄名称数组，然后将 &lt;code&gt;myHero&lt;/code&gt; 重新定义为该数组中的名字。</target>
        </trans-unit>
        <trans-unit id="c5c321525611939ce03b07b9d1cd2adb53d24843" translate="yes" xml:space="preserve">
          <source>To display a template when &lt;code&gt;expression&lt;/code&gt; evaluates to false, use an &lt;code&gt;else&lt;/code&gt; template binding as shown in the following example. The &lt;code&gt;else&lt;/code&gt; binding points to an &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element labeled &lt;code&gt;#elseBlock&lt;/code&gt;. The template can be defined anywhere in the component view, but is typically placed right after &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; for readability.</source>
          <target state="translated">要在 &lt;code&gt;expression&lt;/code&gt; 的计算结果为false 时显示模板，请使用 &lt;code&gt;else&lt;/code&gt; 模板绑定，如以下示例所示。的 &lt;code&gt;else&lt;/code&gt; 结合指向一个 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; 元素标记 &lt;code&gt;#elseBlock&lt;/code&gt; 。可以在组件视图中的任何位置定义模板，但是 &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 便于阅读，通常将其放置在ngIf之后。</target>
        </trans-unit>
        <trans-unit id="669f12ce6bb05c14c2a566a84471f4cc7fe90a32" translate="yes" xml:space="preserve">
          <source>To display an instance of the dynamic form, the &lt;code&gt;AppComponent&lt;/code&gt; shell template passes the &lt;code&gt;questions&lt;/code&gt; array returned by the &lt;code&gt;QuestionService&lt;/code&gt; to the form container component, &lt;code&gt;&amp;lt;app-dynamic-form&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">为了显示动态表单的实例， &lt;code&gt;AppComponent&lt;/code&gt; shell模板将 &lt;code&gt;QuestionService&lt;/code&gt; 返回的 &lt;code&gt;questions&lt;/code&gt; 数组传递给表单容器组件 &lt;code&gt;&amp;lt;app-dynamic-form&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f578c5cb78b9f7bd8066f62098c29394c6101150" translate="yes" xml:space="preserve">
          <source>To display the &lt;code&gt;HeroesComponent&lt;/code&gt;, you must add it to the template of the shell &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">要显示 &lt;code&gt;HeroesComponent&lt;/code&gt; ，必须将其添加到外壳 &lt;code&gt;AppComponent&lt;/code&gt; 的模板中。</target>
        </trans-unit>
        <trans-unit id="6f6cadc05a799ae38b432205731731047b90305a" translate="yes" xml:space="preserve">
          <source>To display the &lt;code&gt;ProfileEditor&lt;/code&gt; component that contains the form, add it to a component template.</source>
          <target state="translated">要显示包含表单的 &lt;code&gt;ProfileEditor&lt;/code&gt; 组件，请将其添加到组件模板。</target>
        </trans-unit>
        <trans-unit id="903cc390eb408d1ea55af3983eda315a6832f5dc" translate="yes" xml:space="preserve">
          <source>To display the names of the products, use the interpolation syntax &lt;code&gt;{{ }}&lt;/code&gt;. Interpolation renders a property's value as text. Inside the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, add an &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; to display the interpolation of the product's name property:</source>
          <target state="translated">要显示产品名称，请使用插值语法 &lt;code&gt;{{ }}&lt;/code&gt; 。插值将属性的值呈现为文本。在 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 内，添加 &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; 以显示产品的name属性的插值：</target>
        </trans-unit>
        <trans-unit id="af6b8e70bc867df920c57a14286a9aca559c2d1f" translate="yes" xml:space="preserve">
          <source>To do this for &lt;code&gt;ng serve&lt;/code&gt;, create a new file, &lt;code&gt;tsconfig-es5.app.json&lt;/code&gt; next to &lt;code&gt;tsconfig.app.json&lt;/code&gt; with the following content.</source>
          <target state="translated">要做到这一点的 &lt;code&gt;ng serve&lt;/code&gt; ，创建一个新的文件， &lt;code&gt;tsconfig-es5.app.json&lt;/code&gt; 旁边 &lt;code&gt;tsconfig.app.json&lt;/code&gt; 包含以下内容。</target>
        </trans-unit>
        <trans-unit id="2d79d0bb78f9158b8f6b014230ea7d15c1b601c1" translate="yes" xml:space="preserve">
          <source>To do this, list the more specific transitions &lt;em&gt;before&lt;/em&gt;&lt;code&gt;* =&amp;gt; *&lt;/code&gt;.</source>
          <target state="translated">为此，请&lt;em&gt;在&lt;/em&gt; &lt;code&gt;* =&amp;gt; *&lt;/code&gt; &lt;em&gt;之前&lt;/em&gt;列出更具体的过渡。</target>
        </trans-unit>
        <trans-unit id="4af7f031db75e121d1590f04ee2af53757ce04c5" translate="yes" xml:space="preserve">
          <source>To do this, you'll use the Angular &lt;em&gt;router&lt;/em&gt;. The Angular &lt;a href=&quot;../guide/glossary#router&quot;&gt;router&lt;/a&gt; enables you to show different components and data to the user based on where the user is in the application. The router enables navigation from one view to the next as users perform application tasks:</source>
          <target state="translated">为此，您将使用Angular &lt;em&gt;路由器&lt;/em&gt;。Angular &lt;a href=&quot;../guide/glossary#router&quot;&gt;路由器&lt;/a&gt;使您可以根据用户在应用程序中的位置向用户显示不同的组件和数据。当用户执行应用程序任务时，路由器可以从一个视图导航到下一个视图：</target>
        </trans-unit>
        <trans-unit id="462723dd18c6bb21a7972312a3381bc47bf03529" translate="yes" xml:space="preserve">
          <source>To eliminate the risk of script injection attacks, Angular does not support the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element in templates. Angular ignores the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag and outputs a warning to the browser console. For more information, see the &lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt; page.</source>
          <target state="translated">为了消除脚本注入攻击的风险，Angular在模板中不支持 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 元素。Angular忽略 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记，并向浏览器控制台输出警告。有关更多信息，请参见&amp;ldquo;&lt;a href=&quot;security&quot;&gt;安全性&amp;rdquo;&lt;/a&gt;页面。</target>
        </trans-unit>
        <trans-unit id="27f743a355485c0e33e11f9f5aa2b4630220a267" translate="yes" xml:space="preserve">
          <source>To enable preloading of all lazy loaded modules, import the &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; token from the Angular &lt;code&gt;router&lt;/code&gt;.</source>
          <target state="translated">要启用所有延迟加载模块的预加载，请从Angular &lt;code&gt;router&lt;/code&gt; 导入 &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; 令牌。</target>
        </trans-unit>
        <trans-unit id="94dcbf1537099a8d72c6a9756d09210df8ae8156" translate="yes" xml:space="preserve">
          <source>To enable preloading of all lazy loaded modules, import the &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; token from the Angular router package.</source>
          <target state="translated">要启用所有延迟加载模块的预加载，请从Angular路由器包中导入 &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; 令牌。</target>
        </trans-unit>
        <trans-unit id="7fc710364e3b588a30c9d0c74118b2c885102b0a" translate="yes" xml:space="preserve">
          <source>To enable routing transition animation, do the following:</source>
          <target state="translated">要启用路由过渡动画,请执行以下操作。</target>
        </trans-unit>
        <trans-unit id="25d5eb1605457fea82578b3d288b0d9a7ae3a8f5" translate="yes" xml:space="preserve">
          <source>To ensure a high-quality, consistent experience for Angular documentation users.</source>
          <target state="translated">为了保证Angular文档用户的高质量、一致性体验。</target>
        </trans-unit>
        <trans-unit id="b0bf35c98e00c5fabe6d7d695facb2ff6dcd71c2" translate="yes" xml:space="preserve">
          <source>To ensure any necessary teardown is triggered in the AngularJS app, such as removal of global listeners, you also implement a method to call the &lt;code&gt;$rootScope.destroy()&lt;/code&gt; method.</source>
          <target state="translated">为了确保在AngularJS应用中触发了所有必要的拆除操作，例如删除全局侦听器，您还实现了一种方法来调用 &lt;code&gt;$rootScope.destroy()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="ebde52584fea72d72602dc3407e717b85e61cb56" translate="yes" xml:space="preserve">
          <source>To ensure resource integrity, the Angular service worker validates the hashes of all resources for which it has a hash. Typically for an app created with the &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;, this is everything in the &lt;code&gt;dist&lt;/code&gt; directory covered by the user's &lt;code&gt;src/ngsw-config.json&lt;/code&gt; configuration.</source>
          <target state="translated">为了确保资源完整性，Angular服务工作程序会验证其具有哈希值的所有资源的哈希值。通常，对于使用&lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;创建的应用程序，这就是 &lt;code&gt;dist&lt;/code&gt; 目录中用户 &lt;code&gt;src/ngsw-config.json&lt;/code&gt; 配置所涵盖的所有内容。</target>
        </trans-unit>
        <trans-unit id="36a2f26d071a65a5067d8e3435ef41b66818020c" translate="yes" xml:space="preserve">
          <source>To ensure that clients can only download the files that they are permitted to see, put all client-facing asset files in the &lt;code&gt;/dist&lt;/code&gt; folder and only honor requests for files from the &lt;code&gt;/dist&lt;/code&gt; folder.</source>
          <target state="translated">为了确保客户端只能下载他们所能够看到的，把所有面向客户的资产文件在文件 &lt;code&gt;/dist&lt;/code&gt; 文件夹，并从这些文件只是荣誉的请求 &lt;code&gt;/dist&lt;/code&gt; 文件夹。</target>
        </trans-unit>
        <trans-unit id="d8598c2022602203d9603274200d342e1eb538fb" translate="yes" xml:space="preserve">
          <source>To ensure that the compiler still generates a factory, add dynamically loaded components to the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;entryComponents&lt;/code&gt; array:</source>
          <target state="translated">为了确保编译器仍然生成工厂，请将动态加载的组件添加到 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;entryComponents&lt;/code&gt; 数组中：</target>
        </trans-unit>
        <trans-unit id="d0535fc908a0485c86f26dadecdbe952a4ab9d56" translate="yes" xml:space="preserve">
          <source>To ensure valid input, the &lt;em&gt;Save&lt;/em&gt; button is disabled until the form is in a valid state. When the form is valid, you can click &lt;em&gt;Save&lt;/em&gt; and the app renders the current form values as JSON.</source>
          <target state="translated">为了确保有效输入，将禁用&amp;ldquo;&lt;em&gt;保存&amp;rdquo;&lt;/em&gt;按钮，直到表单处于有效状态为止。表单有效时，您可以单击&amp;ldquo;&lt;em&gt;保存&amp;rdquo;&lt;/em&gt;，应用程序会将当前表单值呈现为JSON。</target>
        </trans-unit>
        <trans-unit id="5341b76777b2db5c8a206eb43f77809a3f9644fa" translate="yes" xml:space="preserve">
          <source>To ensure we provide a future-proof e2e testing strategy, we want to evaluate the state of Protractor, community innovations, e2e best practices, and explore novel opportunities.</source>
          <target state="translated">为了确保我们提供一个面向未来的e2e测试策略,我们希望评估Protractor的状态、社区创新、e2e最佳实践,并探索新的机会。</target>
        </trans-unit>
        <trans-unit id="2fa6772fab08a7737c141a27ae0a4cca92769842" translate="yes" xml:space="preserve">
          <source>To examine the behavior the &lt;code&gt;exponentialStrength&lt;/code&gt; pipe in the live example, change the value and optional exponent in the template.</source>
          <target state="translated">要检查实时示例中的 &lt;code&gt;exponentialStrength&lt;/code&gt; 管道的行为，请更改模板中的值和可选指数。</target>
        </trans-unit>
        <trans-unit id="e1812e3ae723bb35d7649d2ff5479140c8c70d2c" translate="yes" xml:space="preserve">
          <source>To exclude a heading from the TOC, create the heading as an &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; element with a class called 'no-toc'. You can't do this with markdown.</source>
          <target state="translated">要从目录中排除标题，请使用名为&amp;ldquo; no-toc&amp;rdquo;的类将标题创建为 &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; 元素。您无法通过markdown做到这一点。</target>
        </trans-unit>
        <trans-unit id="ec903eae4634b565ecbfd272a77568b1f130ca3e" translate="yes" xml:space="preserve">
          <source>To exclude an asset, you can remove it from the assets configuration.</source>
          <target state="translated">要排除某项资产,您可以从资产配置中删除它。</target>
        </trans-unit>
        <trans-unit id="cad3973c3b976211274db1f3473682b5a50d206c" translate="yes" xml:space="preserve">
          <source>To execute a custom pipe after a change &lt;em&gt;within&lt;/em&gt; a composite object, such as a change to an element of an array, you need to define your pipe as &lt;code&gt;impure&lt;/code&gt; to detect impure changes. Angular executes an impure pipe every time it detects a change with every keystroke or mouse movement.</source>
          <target state="translated">要&lt;em&gt;在&lt;/em&gt;复合对象&lt;em&gt;内&lt;/em&gt;进行更改（例如，对数组元素的更改）后执行自定义管道，您需要将管道定义为 &lt;code&gt;impure&lt;/code&gt; 以检测不纯的更改。每当每次击键或鼠标移动检测到变化时，Angular都会执行不纯管道。</target>
        </trans-unit>
        <trans-unit id="f9e07f2c5513c75b8f79d6963b277e9fbd52a303" translate="yes" xml:space="preserve">
          <source>To execute the observable you have created and begin receiving notifications, you call its &lt;code&gt;subscribe()&lt;/code&gt; method, passing an &lt;em&gt;observer&lt;/em&gt;. This is a JavaScript object that defines the handlers for the notifications you receive. The &lt;code&gt;subscribe()&lt;/code&gt; call returns a &lt;code&gt;Subscription&lt;/code&gt; object that has an &lt;code&gt;&lt;a href=&quot;../api/service-worker/swpush#unsubscribe&quot;&gt;unsubscribe()&lt;/a&gt;&lt;/code&gt; method, which you call to stop receiving notifications.</source>
          <target state="translated">要执行您创建的可观察对象并开始接收通知，请调用它的 &lt;code&gt;subscribe()&lt;/code&gt; 方法，并传递一个&lt;em&gt;observer&lt;/em&gt;。这是一个JavaScript对象，用于定义您收到的通知的处理程序。所述 &lt;code&gt;subscribe()&lt;/code&gt; 调用返回一个 &lt;code&gt;Subscription&lt;/code&gt; ，其具有对象 &lt;code&gt;&lt;a href=&quot;../api/service-worker/swpush#unsubscribe&quot;&gt;unsubscribe()&lt;/a&gt;&lt;/code&gt; 方法，该方法调用以停止接收通知。</target>
        </trans-unit>
        <trans-unit id="356b5604560e672278283aae6d2ec44a60e2429e" translate="yes" xml:space="preserve">
          <source>To execute the observable you have created and begin receiving notifications, you call its &lt;code&gt;subscribe()&lt;/code&gt; method, passing an &lt;em&gt;observer&lt;/em&gt;. This is a JavaScript object that defines the handlers for the notifications you receive. The &lt;code&gt;subscribe()&lt;/code&gt; call returns a &lt;code&gt;Subscription&lt;/code&gt; object that has an &lt;code&gt;unsubscribe()&lt;/code&gt; method, which you call to stop receiving notifications.</source>
          <target state="translated">要执行您创建的可观察对象并开始接收通知，请调用它的 &lt;code&gt;subscribe()&lt;/code&gt; 方法，并传递一个&lt;em&gt;观察者&lt;/em&gt;。这是一个JavaScript对象，用于定义您收到的通知的处理程序。所述 &lt;code&gt;subscribe()&lt;/code&gt; 调用返回一个 &lt;code&gt;Subscription&lt;/code&gt; ，其具有对象 &lt;code&gt;unsubscribe()&lt;/code&gt; 方法，该方法调用以停止接收通知。</target>
        </trans-unit>
        <trans-unit id="4a6f3f5c4289042742ca02c090211b9822454c2a" translate="yes" xml:space="preserve">
          <source>To explicitly disable differential loading:</source>
          <target state="translated">要明确地禁用差分加载。</target>
        </trans-unit>
        <trans-unit id="c66429caa018853399016d678c69e32103c0616f" translate="yes" xml:space="preserve">
          <source>To explore a sample app featuring the contents of this tutorial, see the live example.</source>
          <target state="translated">要探索以本教程内容为特色的示例应用程序,请看现场示例。</target>
        </trans-unit>
        <trans-unit id="81d467376c8d2e625edaf1979b30099e1e3ad196" translate="yes" xml:space="preserve">
          <source>To explore a sample app featuring the router's primary features, see the live example.</source>
          <target state="translated">要探索一个以路由器主要功能为特色的应用示例,请看现场示例。</target>
        </trans-unit>
        <trans-unit id="c60b05b765b9ca18fef5f1daddab57e723714e9c" translate="yes" xml:space="preserve">
          <source>To explore the sample app with French translations used in this guide, see the live example.</source>
          <target state="translated">要探索本指南中使用的带有法语翻译的示例应用程序,请参阅现场示例。</target>
        </trans-unit>
        <trans-unit id="f487b5662ecb9aaad77bb986779347784a9a61bb" translate="yes" xml:space="preserve">
          <source>To extract the source language file, open a terminal window, change to the root directory of your app project, and run the following CLI command:</source>
          <target state="translated">要解压源语言文件,打开终端窗口,换到app项目的根目录下,运行以下CLI命令。</target>
        </trans-unit>
        <trans-unit id="2eaffe5848d2ff0020839a1c2ce2f8e1600c6b16" translate="yes" xml:space="preserve">
          <source>To fetch this kind of data, the &lt;code&gt;get()&lt;/code&gt; call needs the following options: &lt;code&gt;{observe: 'body', responseType: 'json'}&lt;/code&gt;. These are the default values for those options, so the following examples do not pass the options object. Later sections show some of the additional option possibilities.</source>
          <target state="translated">要获取此类数据， &lt;code&gt;get()&lt;/code&gt; 调用需要以下选项： &lt;code&gt;{observe: 'body', responseType: 'json'}&lt;/code&gt; 。这些是这些选项的默认值，因此以下示例不会传递options对象。后面的部分显示了一些其他选项。</target>
        </trans-unit>
        <trans-unit id="dc86ffb91970ba4ea3d784fdcfa4a20106112fb8" translate="yes" xml:space="preserve">
          <source>To filter output in AngularJS templates, use the pipe character (|) and one or more filters.</source>
          <target state="translated">要在AngularJS模板中过滤输出,使用管道字符(|)和一个或多个过滤器。</target>
        </trans-unit>
        <trans-unit id="154ce8f40b436ba677325298e54443b2e23530f6" translate="yes" xml:space="preserve">
          <source>To fix that, create an array with the new hero appended and assign that to &lt;code&gt;heroes&lt;/code&gt;. This time Angular detects that the array reference has changed. It executes the pipe and updates the display with the new array, which includes the new flying hero.</source>
          <target state="translated">要解决此问题，请创建一个添加了新英雄的数组，并将其分配给 &lt;code&gt;heroes&lt;/code&gt; 。这次Angular检测到数组引用已更改。它执行管道并使用新数组更新显示，其中包括新的飞行英雄。</target>
        </trans-unit>
        <trans-unit id="56cf754ee3e7dca1fe9c44b4816cf790a119fb8c" translate="yes" xml:space="preserve">
          <source>To fix this issue, listen to both the &lt;em&gt;Enter&lt;/em&gt; key and the &lt;em&gt;blur&lt;/em&gt; event.</source>
          <target state="translated">要解决此问题，请同时听&lt;em&gt;回车&lt;/em&gt;键和&lt;em&gt;模糊&lt;/em&gt;事件。</target>
        </trans-unit>
        <trans-unit id="e9a98e7a3d9bcee4fcb0d76fe1f136af14b9717f" translate="yes" xml:space="preserve">
          <source>To flush the first quote from the observable, you call &lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick()&lt;/a&gt;. Then call &lt;code&gt;detectChanges()&lt;/code&gt; to tell Angular to update the screen.</source>
          <target state="translated">要从可观察对象中清除第一引号，请调用&lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick（）&lt;/a&gt;。然后调用 &lt;code&gt;detectChanges()&lt;/code&gt; 告诉Angular更新屏幕。</target>
        </trans-unit>
        <trans-unit id="ba34c5be9ff1d603c4140d7b3f5b608439a0b39b" translate="yes" xml:space="preserve">
          <source>To flush the first quote from the observable, you call &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt;. Then call &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; to tell Angular to update the screen.</source>
          <target state="translated">要从可观察对象中清除第一引号，请调用 &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; 。然后调用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; 告诉Angular更新屏幕。</target>
        </trans-unit>
        <trans-unit id="fc7ba23765221be6372d0b33a6a7c1abada5cdf3" translate="yes" xml:space="preserve">
          <source>To follow along with the tutorial, clone the &lt;a href=&quot;https://github.com/angular/angular-phonecat&quot;&gt;angular-phonecat&lt;/a&gt; repository and apply the steps as you go.</source>
          <target state="translated">要继续学习本教程，请克隆&lt;a href=&quot;https://github.com/angular/angular-phonecat&quot;&gt;angular-phonecat&lt;/a&gt;存储库，然后按照自己的步骤进行操作。</target>
        </trans-unit>
        <trans-unit id="50c790d75defb0a4ec3aa8c5265b6f9346b5307e" translate="yes" xml:space="preserve">
          <source>To follow this pattern, import the &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; helper with the other testing symbols.</source>
          <target state="translated">要遵循此模式，请将 &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; 帮助器与其他测试符号一起导入。</target>
        </trans-unit>
        <trans-unit id="9b1af402c6293628864632c2a47eafb2c2205f1f" translate="yes" xml:space="preserve">
          <source>To follow this pattern, import the &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; helper with the other testing symbols.</source>
          <target state="translated">要遵循此模式，请将 &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; 帮助器与其他测试符号一起导入。</target>
        </trans-unit>
        <trans-unit id="197fa7f05797899c6180d16a0f754704e2a3ef11" translate="yes" xml:space="preserve">
          <source>To gather the user's name and address, set the &lt;code&gt;checkoutForm&lt;/code&gt; property with a form model containing &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; fields, using the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt;&lt;code&gt;group()&lt;/code&gt; method. Add this between the curly braces, &lt;code&gt;{}&lt;/code&gt;, of the constructor.</source>
          <target state="translated">要收集用户的姓名和地址，请使用 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; &lt;code&gt;group()&lt;/code&gt; 方法使用包含 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;address&lt;/code&gt; 字段的表单模型设置 &lt;code&gt;checkoutForm&lt;/code&gt; 属性。将其添加到构造函数的花括号 &lt;code&gt;{}&lt;/code&gt; 之间。</target>
        </trans-unit>
        <trans-unit id="cf9ff0efb094b48a98c3e1a083320941ab68e37d" translate="yes" xml:space="preserve">
          <source>To generate a cart service, right click on the &lt;code&gt;app&lt;/code&gt; folder, choose &lt;code&gt;Angular Generator&lt;/code&gt;, and choose &lt;code&gt;Service&lt;/code&gt;. Name the new service &lt;code&gt;cart&lt;/code&gt;.</source>
          <target state="translated">要生成购物车服务，请右键单击 &lt;code&gt;app&lt;/code&gt; 文件夹，选择 &lt;code&gt;Angular Generator&lt;/code&gt; ，然后选择 &lt;code&gt;Service&lt;/code&gt; 。命名新的服务 &lt;code&gt;cart&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e9bedad15ebc538d9e68cbdd28af270587693f3" translate="yes" xml:space="preserve">
          <source>To generate a coverage report run the following command in the root of your project.</source>
          <target state="translated">要生成覆盖率报告,请在项目的根目录下运行以下命令。</target>
        </trans-unit>
        <trans-unit id="abf26b47cd0c5e68c8c79d0daf2df1036fa78b7a" translate="yes" xml:space="preserve">
          <source>To generate a new random user ID, run the following command:</source>
          <target state="translated">要生成一个新的随机用户ID,请运行以下命令。</target>
        </trans-unit>
        <trans-unit id="8acafccdcb332ce70715cbf29a3839a0c89102b8" translate="yes" xml:space="preserve">
          <source>To get &lt;code&gt;Node.js&lt;/code&gt;, go to &lt;a href=&quot;https://nodejs.org&quot;&gt;nodejs.org&lt;/a&gt;.</source>
          <target state="translated">要获取 &lt;code&gt;Node.js&lt;/code&gt; ，请转到&lt;a href=&quot;https://nodejs.org&quot;&gt;nodejs.org&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4764c56a7c4aaf167d80ff03108babf2926d5ad6" translate="yes" xml:space="preserve">
          <source>To get access to the &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; and the overall form status, declare a &lt;a href=&quot;template-reference-variables&quot;&gt;template reference variable&lt;/a&gt;.</source>
          <target state="translated">要访问 &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; 和整个表单状态，请声明一个&lt;a href=&quot;template-reference-variables&quot;&gt;模板引用变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e9f4a06c6902eaaa4816e3c94cc563103857fe3" translate="yes" xml:space="preserve">
          <source>To get around this problem you can use TypeScript path mapping to tell TypeScript that it should load some modules from a specific location. List all the peer dependencies that your library uses in the workspace TypeScript configuration file &lt;code&gt;./tsconfig.json&lt;/code&gt;, and point them at the local copy in the app's &lt;code&gt;node_modules&lt;/code&gt; folder.</source>
          <target state="translated">要解决此问题，您可以使用TypeScript路径映射来告诉TypeScript它应该从特定位置加载某些模块。列出库在工作区TypeScript配置文件 &lt;code&gt;./tsconfig.json&lt;/code&gt; 中使用的所有对等依赖项，并将它们指向应用程序的 &lt;code&gt;node_modules&lt;/code&gt; 文件夹中的本地副本。</target>
        </trans-unit>
        <trans-unit id="43487c0abf05865bdae999a7256422a42f15d57c" translate="yes" xml:space="preserve">
          <source>To get information from a route:</source>
          <target state="translated">从途径中获取信息。</target>
        </trans-unit>
        <trans-unit id="c620c03d023234ed2391242307f1d8712d8a8439" translate="yes" xml:space="preserve">
          <source>To get started with adding Angular animations to your project, import the animation-specific modules along with standard Angular functionality.</source>
          <target state="translated">要开始在项目中添加Angular动画,请将动画专用模块与标准Angular功能一起导入。</target>
        </trans-unit>
        <trans-unit id="26d943fe23a3c998bd39d5a7b1693dbae57fe95c" translate="yes" xml:space="preserve">
          <source>To get the most out of property binding, you should be familiar with the following:</source>
          <target state="translated">要想最大限度地利用属性绑定,你应该熟悉以下内容。</target>
        </trans-unit>
        <trans-unit id="57b307d0cc30742af6af1ff6a8b0c84e051d00eb" translate="yes" xml:space="preserve">
          <source>To get the most out of two-way binding, you should have a basic understanding of the following concepts:</source>
          <target state="translated">为了最大限度地发挥双向绑定的作用,你应该对以下概念有一个基本的了解。</target>
        </trans-unit>
        <trans-unit id="a92da86b8670ce6226a30d95533e45b223dd6bc1" translate="yes" xml:space="preserve">
          <source>To give users a way to open the popup, add a &quot;Contact&quot; link to the &lt;code&gt;AppComponent&lt;/code&gt; template.</source>
          <target state="translated">若要为用户提供一种打开弹出窗口的方法，请向 &lt;code&gt;AppComponent&lt;/code&gt; 模板添加一个&amp;ldquo;联系人&amp;rdquo;链接。</target>
        </trans-unit>
        <trans-unit id="ebaa7cffbaaeda8aa8e693d01a32822b130caded" translate="yes" xml:space="preserve">
          <source>To group the &lt;code&gt;Crisis Center&lt;/code&gt; management routes under the &lt;code&gt;admin&lt;/code&gt; path a component is unnecessary. Additionally, a &lt;em&gt;component-less&lt;/em&gt; route makes it easier to &lt;a href=&quot;router-tutorial-toh#can-activate-child-guard&quot;&gt;guard child routes&lt;/a&gt;.</source>
          <target state="translated">要将 &lt;code&gt;Crisis Center&lt;/code&gt; 管理路由归类为 &lt;code&gt;admin&lt;/code&gt; 路径下的组件，则不需要任何组件。另外，无&lt;em&gt;组件的&lt;/em&gt;路由使其更易于&lt;a href=&quot;router-tutorial-toh#can-activate-child-guard&quot;&gt;保护子路由&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22605a20b1a22f239c1e3107167d2597f5c39ded" translate="yes" xml:space="preserve">
          <source>To guard against a lazy loaded module re-importing &lt;code&gt;GreetingModule&lt;/code&gt;, add the following &lt;code&gt;GreetingModule&lt;/code&gt; constructor.</source>
          <target state="translated">为了防止延迟加载的模块重新导入 &lt;code&gt;GreetingModule&lt;/code&gt; ，请添加下面的 &lt;code&gt;GreetingModule&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="77ca585f495413c83c85661daa403686e9bd57f1" translate="yes" xml:space="preserve">
          <source>To guard against minification problems, tell Angular explicitly that it should inject an instance of the &lt;code&gt;MovieService&lt;/code&gt; in the first parameter.</source>
          <target state="translated">为了防止缩小问题，请明确告诉Angular它应该在第一个参数中注入 &lt;code&gt;MovieService&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="46e1437a434c141916bb48f0aca2a8131e3b48d1" translate="yes" xml:space="preserve">
          <source>To handle the navigation from one &lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt; to the next, you use the Angular &lt;strong&gt;&lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt;. The &lt;strong&gt;&lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt; enables navigation by interpreting a browser URL as an instruction to change the view.</source>
          <target state="translated">要处理从一个&lt;a href=&quot;glossary#view&quot;&gt;视图&lt;/a&gt;到下一个视图的导航，请使用Angular &lt;strong&gt; &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; &lt;/strong&gt;。该&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; &lt;/strong&gt;通过解释浏览器URL以改变视图的指令使导航。</target>
        </trans-unit>
        <trans-unit id="0483a13b68a98141b413a5592409e590323ff6ac" translate="yes" xml:space="preserve">
          <source>To help determine whether your proxy is working as intended, set the &lt;code&gt;logLevel&lt;/code&gt; option. For example:</source>
          <target state="translated">为了帮助确定您的代理是否按预期工作，请设置 &lt;code&gt;logLevel&lt;/code&gt; 选项。例如：</target>
        </trans-unit>
        <trans-unit id="ef7a832a2ae76c1a243ec1b9f05e550953889fdf" translate="yes" xml:space="preserve">
          <source>To help ensure that you have sufficient time and a clear path to update, this is our deprecation policy:</source>
          <target state="translated">为了确保你有足够的时间和清晰的更新路径,这是我们的弃用政策。</target>
        </trans-unit>
        <trans-unit id="b18eb17f8c80dcf33ac422b8959463f27ab98a1d" translate="yes" xml:space="preserve">
          <source>To help you future-proof your apps, the following table lists all deprecated APIs and features, organized by the release in which they are candidates for removal. Each item is linked to the section later in this guide that describes the deprecation reason and replacement options.</source>
          <target state="translated">为了帮助您的应用程序面向未来,下表列出了所有已废弃的 API 和功能,并按其候选删除的版本排列。每个项目都链接到本指南后面描述废弃原因和替换选项的部分。</target>
        </trans-unit>
        <trans-unit id="d5b3bbad8bfc4eb6cea8091361ccfc84c96c7368" translate="yes" xml:space="preserve">
          <source>To help you get going, the following steps use predefined product data and methods from the &lt;code&gt;product-list.component.ts&lt;/code&gt; file.</source>
          <target state="translated">为了帮助您 &lt;code&gt;product-list.component.ts&lt;/code&gt; ，以下步骤使用了product-list.component.ts文件中的预定义产品数据和方法。</target>
        </trans-unit>
        <trans-unit id="c859073c02740773e64bc37041c26a933e4411f1" translate="yes" xml:space="preserve">
          <source>To help you get going, the following steps use predefined product data from the &lt;code&gt;products.ts&lt;/code&gt; file (already created in StackBlitz example) and methods from the &lt;code&gt;product-list.component.ts&lt;/code&gt; file.</source>
          <target state="translated">为了帮助您入门，以下步骤使用了 &lt;code&gt;products.ts&lt;/code&gt; 文件中的预定义产品数据（已在StackBlitz示例中创建）和 &lt;code&gt;product-list.component.ts&lt;/code&gt; 文件中的方法。</target>
        </trans-unit>
        <trans-unit id="60c4d75becc591cb9eeb0c81e6b707b5eb0eb96a" translate="yes" xml:space="preserve">
          <source>To host an Angular app on another web host, upload or send the files to the host. Because you are building a single page application, you'll also need to make sure you redirect any invalid URLs to your &lt;code&gt;index.html&lt;/code&gt; file. Read more about development and distribution of your application in the &lt;a href=&quot;../guide/build&quot;&gt;Building &amp;amp; Serving&lt;/a&gt; and &lt;a href=&quot;../guide/deployment&quot;&gt;Deployment&lt;/a&gt; guides.</source>
          <target state="translated">要将Angular应用托管在另一个Web主机上，请上载文件或将文件发送到该主机。因为您正在构建一个单页应用程序，所以还需要确保将所有无效的URL重定向到 &lt;code&gt;index.html&lt;/code&gt; 文件。在《&lt;a href=&quot;../guide/build&quot;&gt;构建与服务&lt;/a&gt;和&lt;a href=&quot;../guide/deployment&quot;&gt;部署》&lt;/a&gt;指南中阅读有关应用程序开发和分发的更多信息。</target>
        </trans-unit>
        <trans-unit id="e3fe5b2a2bd58ed1b8655045a4030a46a226b4e3" translate="yes" xml:space="preserve">
          <source>To host an Angular app on another web host, you'll need to upload or send the files to the host. Because you are building a Single Page Application, you'll also need to make sure you redirect any invalid URLs to your &lt;code&gt;index.html&lt;/code&gt; file. Learn more about development and distribution of your application in the &lt;a href=&quot;../guide/build&quot;&gt;Building &amp;amp; Serving&lt;/a&gt; and &lt;a href=&quot;../guide/deployment&quot;&gt;Deployment&lt;/a&gt; guides.</source>
          <target state="translated">要将Angular应用托管在另一个虚拟主机上，您需要将文件上传或发送到该主机。因为您正在构建单页应用程序，所以还需要确保将所有无效的URL重定向到 &lt;code&gt;index.html&lt;/code&gt; 文件。在《&lt;a href=&quot;../guide/build&quot;&gt;构建和服务&lt;/a&gt;与&lt;a href=&quot;../guide/deployment&quot;&gt;部署》&lt;/a&gt;指南中了解有关应用程序开发和分发的更多信息。</target>
        </trans-unit>
        <trans-unit id="ab9bc2d71d7adce3b0a0d3e7dbb746f60c48f829" translate="yes" xml:space="preserve">
          <source>To identify specific &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tags in a document, use an attribute selection string in the format &lt;code&gt;&quot;tag_attribute='value string'&quot;&lt;/code&gt;. For example, an &lt;code&gt;attrSelector&lt;/code&gt; value of &lt;code&gt;&quot;name='description'&quot;&lt;/code&gt; matches a tag whose &lt;code&gt;name&lt;/code&gt; attribute has the value &lt;code&gt;&quot;description&quot;&lt;/code&gt;. Selectors are used with the &lt;code&gt;querySelector()&lt;/code&gt; Document method, in the format &lt;code&gt;meta[{attrSelector}]&lt;/code&gt;.</source>
          <target state="translated">要标识文档中的特定 &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; 标签，请使用格式为 &lt;code&gt;&quot;tag_attribute='value string'&quot;&lt;/code&gt; 的属性选择字符串。例如， &lt;code&gt;attrSelector&lt;/code&gt; 值 &lt;code&gt;&quot;name='description'&quot;&lt;/code&gt; 与 &lt;code&gt;name&lt;/code&gt; 属性值为 &lt;code&gt;&quot;description&quot;&lt;/code&gt; 的标签匹配。选择器与 &lt;code&gt;querySelector()&lt;/code&gt; 文档方法一起使用，格式为 &lt;code&gt;meta[{attrSelector}]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f77fdab586f868e4093851acfc1533b76f62e25" translate="yes" xml:space="preserve">
          <source>To illustrate the use of &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;, edit these parts of your app:</source>
          <target state="translated">为了说明 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 的用法，请编辑应用程序的以下部分：</target>
        </trans-unit>
        <trans-unit id="1fbb1f454bb7d2e047050e16a5b5adac1e15336c" translate="yes" xml:space="preserve">
          <source>To illustrate, here's a simplified version of &lt;code&gt;HighlightDirective&lt;/code&gt; from the &lt;a href=&quot;attribute-directives&quot;&gt;Attribute Directives&lt;/a&gt; page.</source>
          <target state="translated">为了说明这一点，这是&amp;ldquo; &lt;a href=&quot;attribute-directives&quot;&gt;属性指令&amp;rdquo;&lt;/a&gt;页面上的 &lt;code&gt;HighlightDirective&lt;/code&gt; 的简化版本。</target>
        </trans-unit>
        <trans-unit id="d9242c7bce3b2639f0867ea3c0827c2fa3fcc014" translate="yes" xml:space="preserve">
          <source>To implement an interceptor, declare a class that implements the &lt;code&gt;&lt;a href=&quot;../api/common/http/jsonpinterceptor#intercept&quot;&gt;intercept()&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; interface.</source>
          <target state="translated">要实现拦截器，请声明一个实现 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; 接口的 &lt;code&gt;&lt;a href=&quot;../api/common/http/jsonpinterceptor#intercept&quot;&gt;intercept()&lt;/a&gt;&lt;/code&gt; 方法的类。</target>
        </trans-unit>
        <trans-unit id="a071c1a6b28b453628fc442e9aeef0402d6cb684" translate="yes" xml:space="preserve">
          <source>To implement an interceptor, declare a class that implements the &lt;code&gt;intercept()&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; interface.</source>
          <target state="translated">要实现拦截器，请声明一个实现 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; 接口的 &lt;code&gt;intercept()&lt;/code&gt; 方法的类。</target>
        </trans-unit>
        <trans-unit id="aaf041b7e55b65dac1febf1331ff581b95a32993" translate="yes" xml:space="preserve">
          <source>To implement this functionality, you add the &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&lt;/code&gt; directive to your template file.</source>
          <target state="translated">要实现此功能，您可以将 &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&lt;/code&gt; 指令添加到模板文件中。</target>
        </trans-unit>
        <trans-unit id="8c15de700229692f85f74f661ebecee10ce1edfa" translate="yes" xml:space="preserve">
          <source>To improve test time and create better isolation across tests, we want to change &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; to automatically clean up and tear down the test environment after each test run.</source>
          <target state="translated">为了缩短测试时间并更好地隔离测试，我们希望更改 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; ,以便在每次测试运行后自动清理和拆除测试环境。</target>
        </trans-unit>
        <trans-unit id="031feed43cdb2009f3a0aad5253d852e4c762600" translate="yes" xml:space="preserve">
          <source>To improve this behavior, you can pre-fetch data from the server using a resolver so it's ready the moment the route is activated. This also allows you to handle errors before routing to the component. There's no point in navigating to a crisis detail for an &lt;code&gt;id&lt;/code&gt; that doesn't have a record. It'd be better to send the user back to the &lt;code&gt;Crisis List&lt;/code&gt; that shows only valid crisis centers.</source>
          <target state="translated">为了改善这种行为，您可以使用解析器从服务器中预取数据，以便在激活路由后立即准备就绪。这也使您可以在路由到组件之前处理错误。导航到没有记录的 &lt;code&gt;id&lt;/code&gt; 的危机详细信息没有任何意义。最好将用户送回仅显示有效危机中心的 &lt;code&gt;Crisis List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30714f1570102a913e81e387a8e99413184d357d" translate="yes" xml:space="preserve">
          <source>To include differential loading in your application builds, you must configure the Browserslist and TypeScript configuration files in your application project.</source>
          <target state="translated">要在你的应用程序构建中包含差分加载,你必须在你的应用程序项目中配置Browserslist和TypeScript配置文件。</target>
        </trans-unit>
        <trans-unit id="69b60d346fb92f51499356b42a9f5d8d37258d56" translate="yes" xml:space="preserve">
          <source>To include the new component, use its selector, &lt;code&gt;app-product-alert&lt;/code&gt;, as you would an HTML element.</source>
          <target state="translated">要包括新组件，请使用其选择器 &lt;code&gt;app-product-alert&lt;/code&gt; ，就像使用HTML元素一样。</target>
        </trans-unit>
        <trans-unit id="34af0a1fd16c117a7822f3048b578ce3d82ba1e5" translate="yes" xml:space="preserve">
          <source>To include the new component, use its selector, &lt;code&gt;app-product-alerts&lt;/code&gt;, as you would an HTML element.</source>
          <target state="translated">要包括新组件，请使用其选择器 &lt;code&gt;app-product-alerts&lt;/code&gt; ，就像使用HTML元素一样。</target>
        </trans-unit>
        <trans-unit id="835dfd12477d853747c300147b3c559302e5eeff" translate="yes" xml:space="preserve">
          <source>To incorporate the feature module into your app, you have to let the root module, &lt;code&gt;app.module.ts&lt;/code&gt;, know about it. Notice the &lt;code&gt;CustomerDashboardModule&lt;/code&gt; export at the bottom of &lt;code&gt;customer-dashboard.module.ts&lt;/code&gt;. This exposes it so that other modules can get to it. To import it into the &lt;code&gt;AppModule&lt;/code&gt;, add it to the imports in &lt;code&gt;app.module.ts&lt;/code&gt; and to the &lt;code&gt;imports&lt;/code&gt; array:</source>
          <target state="translated">要将功能模块合并到您的应用程序中，必须让根模块 &lt;code&gt;app.module.ts&lt;/code&gt; 知道它。注意在 &lt;code&gt;customer-dashboard.module.ts&lt;/code&gt; 底部的 &lt;code&gt;CustomerDashboardModule&lt;/code&gt; 导出。这将其公开，以便其他模块可以使用它。为了将其导入 &lt;code&gt;AppModule&lt;/code&gt; ，将其添加到在进口 &lt;code&gt;app.module.ts&lt;/code&gt; 和到 &lt;code&gt;imports&lt;/code&gt; 阵：</target>
        </trans-unit>
        <trans-unit id="4cfd9eacc73fc98af1d6ddaad6c557a00c462594" translate="yes" xml:space="preserve">
          <source>To inspect the properties of the associated &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; (like the validity state), export the directive into a local template variable using &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; as the key (ex: &lt;code&gt;#myVar=&quot;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt;). You can then access the control using the directive's &lt;code&gt;control&lt;/code&gt; property. However, the most commonly used properties (like &lt;code&gt;valid&lt;/code&gt; and &lt;code&gt;dirty&lt;/code&gt;) also exist on the control for direct access. See a full list of properties directly available in &lt;code&gt;&lt;a href=&quot;abstractcontroldirective&quot;&gt;AbstractControlDirective&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">要检查关联的 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的属性（如有效性状态），请使用 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 作为键将指令导出到本地模板变量中（例如： &lt;code&gt;#myVar=&quot;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt; =&amp;ldquo; ngModel &amp;rdquo;）。然后，您可以使用指令的 &lt;code&gt;control&lt;/code&gt; 属性访问该控件。但是，控件上还存在最常用的属性（例如 &lt;code&gt;valid&lt;/code&gt; 和 &lt;code&gt;dirty&lt;/code&gt; ），可以直接访问。请参阅 &lt;code&gt;&lt;a href=&quot;abstractcontroldirective&quot;&gt;AbstractControlDirective&lt;/a&gt;&lt;/code&gt; 中直接可用的属性的完整列表。</target>
        </trans-unit>
        <trans-unit id="7d1f76b24bcf5a077b04779a10d2acb122df684c" translate="yes" xml:space="preserve">
          <source>To inspect the properties of the associated &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; (like validity state), export the directive into a local template variable using &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; as the key (ex: &lt;code&gt;#myVar=&quot;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt;). You then access the control using the directive's &lt;code&gt;control&lt;/code&gt; property, but most properties used (like &lt;code&gt;valid&lt;/code&gt; and &lt;code&gt;dirty&lt;/code&gt;) fall through to the control anyway for direct access. See a full list of properties directly available in &lt;code&gt;&lt;a href=&quot;abstractcontroldirective&quot;&gt;AbstractControlDirective&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">要检查关联的 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的属性（如有效性状态），请使用 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 作为键将指令导出到本地模板变量中（例如： &lt;code&gt;#myVar=&quot;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt; =&amp;ldquo; ngModel &amp;rdquo;）。然后，您可以使用指令的 &lt;code&gt;control&lt;/code&gt; 属性访问控件，但是无论如何，大多数使用的属性（例如 &lt;code&gt;valid&lt;/code&gt; 和 &lt;code&gt;dirty&lt;/code&gt; ）都会落入控件以进行直接访问。请参阅 &lt;code&gt;&lt;a href=&quot;abstractcontroldirective&quot;&gt;AbstractControlDirective&lt;/a&gt;&lt;/code&gt; 中直接可用的属性的完整列表。</target>
        </trans-unit>
        <trans-unit id="b490b68e59a6cf96e6000e8feb915a400ca7362b" translate="yes" xml:space="preserve">
          <source>To install Angular on your local system, you need the following:</source>
          <target state="translated">要在本地系统上安装Angular,你需要以下内容。</target>
        </trans-unit>
        <trans-unit id="00d4c0b7f7b79fb7000e4e700fe2af36bcc88023" translate="yes" xml:space="preserve">
          <source>To install the Angular CLI, open a terminal window and run the following command:</source>
          <target state="translated">要安装Angular CLI,请打开终端窗口并运行以下命令。</target>
        </trans-unit>
        <trans-unit id="3be4cd44a75c82f831a7fb264bb28d71c6d67aa0" translate="yes" xml:space="preserve">
          <source>To install the CLI using &lt;code&gt;npm&lt;/code&gt;, open a terminal/console window and enter the following command:</source>
          <target state="translated">要使用 &lt;code&gt;npm&lt;/code&gt; 安装CLI ，请打开终端/控制台窗口并输入以下命令：</target>
        </trans-unit>
        <trans-unit id="978f127332b309b9081001f9ef289a772808bdd2" translate="yes" xml:space="preserve">
          <source>To install the latest version of TypeScript:</source>
          <target state="translated">要安装最新版本的TypeScript。</target>
        </trans-unit>
        <trans-unit id="79ca5dd762f8884fdb128fbf222685ff3aa6cc9b" translate="yes" xml:space="preserve">
          <source>To instruct the AOT compiler to use your translation configuration, set the three &quot;i18n&quot; build configuration options in your CLI configuration file, &lt;code&gt;angular.json&lt;/code&gt;.</source>
          <target state="translated">要指示AOT编译器使用您的转换配置，请在CLI配置文件 &lt;code&gt;angular.json&lt;/code&gt; 中设置三个&amp;ldquo; i18n&amp;rdquo;构建配置选项。</target>
        </trans-unit>
        <trans-unit id="c997f93a9e3f25ee5447a528d3a4c9d013784a57" translate="yes" xml:space="preserve">
          <source>To keep things minimal, this example redirects unauthenticated users to &lt;code&gt;/admin&lt;/code&gt;.</source>
          <target state="translated">为了使事情最少，此示例将未经身份验证的用户重定向到 &lt;code&gt;/admin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="063280d0d5fdd83f12af3f273ae8a53e21cbc89f" translate="yes" xml:space="preserve">
          <source>To keep your component simpler and independent of HTML templates that use pipes, you can, as an alternative, use an &lt;em&gt;impure&lt;/em&gt; pipe to detect changes within composite objects such as arrays, as described in the next section.</source>
          <target state="translated">为了使组件更简单并且不受使用管道的HTML模板的影响，可以选择使用&lt;em&gt;不纯&lt;/em&gt;管道来检测复合对象（例如数组）中的更改，如下一节所述。</target>
        </trans-unit>
        <trans-unit id="adc02e43fb89206e34f149a31df831fe24f69571" translate="yes" xml:space="preserve">
          <source>To lazy load Angular modules, use &lt;code&gt;loadchildren&lt;/code&gt; (instead of &lt;code&gt;component&lt;/code&gt;) in your &lt;code&gt;AppRoutingModule&lt;/code&gt;&lt;code&gt;routes&lt;/code&gt; configuration as follows.</source>
          <target state="translated">要延迟加载Angular模块，请按如下所示在 &lt;code&gt;AppRoutingModule&lt;/code&gt; &lt;code&gt;routes&lt;/code&gt; 配置中使用 &lt;code&gt;loadchildren&lt;/code&gt; （而不是 &lt;code&gt;component&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="93c73667a03be3abfe828fead3712d61e72bf9e6" translate="yes" xml:space="preserve">
          <source>To learn about frequently used Angular NgModules and how to import them into your app, see &lt;a href=&quot;frequent-ngmodules&quot;&gt;Frequently-used modules&lt;/a&gt;.</source>
          <target state="translated">要了解常用的Angular NgModules以及如何将它们导入到您的应用程序中，请参阅&lt;a href=&quot;frequent-ngmodules&quot;&gt;常用模块&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce1bee037e6dd779c9223edb98da376759b86686" translate="yes" xml:space="preserve">
          <source>To learn about loading NgModules eagerly when the app starts, or lazy-loading NgModules asynchronously by the router, see &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;Lazy-loading feature modules&lt;/a&gt;.</source>
          <target state="translated">要了解有关在应用启动时急切加载NgModules或由路由器异步加载NgModules的信息，请参阅&lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;延迟加载功能模块&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bf39b85c560a16fe59f3305b45f410f4c374fed1" translate="yes" xml:space="preserve">
          <source>To learn how to create a singleton service to use in NgModules, see &lt;a href=&quot;singleton-services&quot;&gt;Making a service a singleton&lt;/a&gt;.</source>
          <target state="translated">要了解如何创建要在NgModules中使用的单例服务，请参阅&lt;a href=&quot;singleton-services&quot;&gt;使服务成为单例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ed29944f1d63987331c5c1a1636ae0d099c1c86" translate="yes" xml:space="preserve">
          <source>To learn how to use shared modules to organize and streamline your code, see &lt;a href=&quot;sharing-ngmodules&quot;&gt;Sharing NgModules in an app&lt;/a&gt;.</source>
          <target state="translated">要了解如何使用共享模块来组织和简化代码，请参阅&lt;a href=&quot;sharing-ngmodules&quot;&gt;在应用程序中共享NgModules&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2b8673bf705879ba50b6543052c6c5d67172734b" translate="yes" xml:space="preserve">
          <source>To learn more about JavaScript modules, see &lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt;ES6 In Depth: Modules&lt;/a&gt;. For the module specification, see the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-modules&quot;&gt;6th Edition of the ECMAScript standard&lt;/a&gt;.</source>
          <target state="translated">要了解有关JavaScript模块的更多信息，请参见《&lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt;深度学习：模块》中的ES6&lt;/a&gt;。有关模块规范，请参见&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-modules&quot;&gt;ECMAScript标准&lt;/a&gt;的第六版。</target>
        </trans-unit>
        <trans-unit id="d4caae055757d0ab5e0605618c8f7cac9e4414af" translate="yes" xml:space="preserve">
          <source>To learn more about JavaScript modules, see &lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt;ES6 In Depth: Modules&lt;/a&gt;. For the module specification, see the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-modules&quot;&gt;6th Edition of the ECMAScript standard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1677d547af7492d218688d8fc496408b0a0b031e" translate="yes" xml:space="preserve">
          <source>To learn more about other browsers that are service worker ready, see the &lt;a href=&quot;https://caniuse.com/#feat=serviceworkers&quot;&gt;Can I Use&lt;/a&gt; page and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;MDN docs&lt;/a&gt;.</source>
          <target state="translated">要了解有关可用于Service Worker的其他浏览器的更多信息，请参阅&amp;ldquo; &lt;a href=&quot;https://caniuse.com/#feat=serviceworkers&quot;&gt;我可以使用&amp;rdquo;&lt;/a&gt;页面和&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;MDN文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c84c9b491abea1ff59708036d037ad515cf9fdbd" translate="yes" xml:space="preserve">
          <source>To learn more about providers, see the &lt;a href=&quot;../guide/providers&quot;&gt;Providers section&lt;/a&gt;. To learn more about injectors, see the &lt;a href=&quot;../guide/dependency-injection&quot;&gt;Dependency Injection guide&lt;/a&gt;.</source>
          <target state="translated">要了解有关提供程序的更多信息，请参阅&amp;ldquo; &lt;a href=&quot;../guide/providers&quot;&gt;提供程序&amp;rdquo;部分&lt;/a&gt;。要了解有关注入器的更多信息，请参阅&amp;ldquo; &lt;a href=&quot;../guide/dependency-injection&quot;&gt;依赖注入&amp;rdquo;指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f76858a7e260841160caa41bedc9711829079ce9" translate="yes" xml:space="preserve">
          <source>To learn more about reactive forms, see the following guides:</source>
          <target state="translated">要了解更多关于反应式表单的信息,请参见以下指南。</target>
        </trans-unit>
        <trans-unit id="59a572cbe7b9a3e97969793c2bc9cfdeb16ab418" translate="yes" xml:space="preserve">
          <source>To learn more about template-driven forms, see the following guides:</source>
          <target state="translated">要了解有关模板驱动表单的更多信息,请参见以下指南。</target>
        </trans-unit>
        <trans-unit id="738b9eb031dded491e17886663caa1ff29e71ce4" translate="yes" xml:space="preserve">
          <source>To learn more about the full capabilities of the CLI, see the &lt;a href=&quot;cli&quot;&gt;CLI command reference&lt;/a&gt;.</source>
          <target state="translated">要了解有关CLI的全部功能的更多信息，请参阅&lt;a href=&quot;cli&quot;&gt;CLI命令参考&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50c0e4f29bef7d012d60683d14c5ab14934615fb" translate="yes" xml:space="preserve">
          <source>To learn more about the root NgModule, see &lt;a href=&quot;bootstrapping&quot;&gt;Launching an app with a root NgModule&lt;/a&gt;.</source>
          <target state="translated">要了解有关根NgModule的更多信息，请参阅使用根NgModule&lt;a href=&quot;bootstrapping&quot;&gt;启动应用程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="576871e9688e5fb9067f532deda27073b34e9a11" translate="yes" xml:space="preserve">
          <source>To learn more about using pipes for internationalization (i18n) efforts, see &lt;a href=&quot;i18n#i18n-pipes&quot;&gt;formatting data based on locale&lt;/a&gt;.</source>
          <target state="translated">要了解有关使用管道进行国际化（i18n）的更多信息，请参见&lt;a href=&quot;i18n#i18n-pipes&quot;&gt;根据语言环境格式化数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3f50de3d99d51fc3307e8adf60a7d37ef18510f" translate="yes" xml:space="preserve">
          <source>To learn more about using the Angular CLI, see the &lt;a href=&quot;cli&quot;&gt;CLI Overview&lt;/a&gt;. In addition to creating the initial workspace and app scaffolding, you can use the CLI to generate Angular code such as components and services. The CLI supports the full development cycle, including building, testing, bundling, and deployment.</source>
          <target state="translated">要了解有关使用Angular CLI的更多信息，请参阅&lt;a href=&quot;cli&quot;&gt;CLI概述&lt;/a&gt;。除了创建初始工作区和应用程序支架外，您还可以使用CLI生成Angular代码，例如组件和服务。CLI支持整个开发周期，包括构建，测试，捆绑和部署。</target>
        </trans-unit>
        <trans-unit id="416a58e3ce60c40d39bdf10d063589c334e40ab1" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;architecture-services&quot;&gt;Introduction to Services and Dependency Injection&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&lt;a href=&quot;architecture-services&quot;&gt;服务和依赖注入简介&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e694d6c1d32b6b56ce020c646c48af952c618210" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;browser-support&quot;&gt;Browser Support&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&lt;a href=&quot;browser-support&quot;&gt;浏览器支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5d547564ae49438c7f5583123e361486b37cdfb" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;form-validation&quot;&gt;Form Validation&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&lt;a href=&quot;form-validation&quot;&gt;表单验证&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fef2215443d40254464acc94fc7847b670e932f8" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;inputs-outputs&quot;&gt;Input and Output Properties&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&lt;a href=&quot;inputs-outputs&quot;&gt;输入和输出属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddcfcf686cef986dad66c32adad5e8191043ecc1" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;inputs-outputs&quot;&gt;input and output properties&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&lt;a href=&quot;inputs-outputs&quot;&gt;输入和输出属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b51947679f07f8322ce7f3740f084897727afa5" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;lifecycle-hooks&quot;&gt;Lifecycle Hooks&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&lt;a href=&quot;lifecycle-hooks&quot;&gt;生命周期挂钩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5dac4e123cca0d4a59d5f6f873a05e1a76d9583b" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参见&lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2218a8556fffcfa1f6d34419d68f2922869161d" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;observables&quot;&gt;Observables&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&lt;a href=&quot;observables&quot;&gt;Observables&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1076876ca0b526aa98a8f286bda2dbf9a2d471f" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;pipes&quot;&gt;Pipes&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&lt;a href=&quot;pipes&quot;&gt;管道&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a1bfb784682ebe266242fbdb242bb6f408ed07f" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;router&quot;&gt;Routing and Navigation&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&amp;ldquo; &lt;a href=&quot;router&quot;&gt;路由和导航&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b914fb9f887c33faf04a08f5c6bcad4ae48f1d7" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;schematics&quot;&gt;Schematics Overview&lt;/a&gt; and &lt;a href=&quot;schematics-for-libraries&quot;&gt;Schematics for Libraries&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅《&lt;a href=&quot;schematics&quot;&gt;原理图概述&lt;/a&gt;和&lt;a href=&quot;schematics-for-libraries&quot;&gt;库原理图》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d010cfde7bc2c506df423549e631c7008431f001" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参见《&lt;a href=&quot;structural-directives&quot;&gt;结构指令》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4570551808faa6eea6e2ab0181ccbcaaa5c2263" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;Input and Output Properties&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;输入和输出属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecceabc50e42b7eefd96c26c6bf1f43187e84d1f" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;input and output properties&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;输入和输出属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="49bdcdc84e41d471767e7d1270cab230b0e8a7f1" translate="yes" xml:space="preserve">
          <source>To learn more, see &lt;a href=&quot;universal&quot;&gt;Angular Universal: server-side rendering&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请参阅&lt;a href=&quot;universal&quot;&gt;Angular Universal：服务器端渲染&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb003e20f49d50feecb8fdc386ebe9f76301de6f" translate="yes" xml:space="preserve">
          <source>To limit access to a service, consider lazy loading the NgModule that provides that service. See &lt;a href=&quot;ngmodule-faq#service-scope&quot;&gt;How do I restrict service scope to a module?&lt;/a&gt; for more information.</source>
          <target state="translated">要限制对服务的访问，请考虑延迟加载提供该服务的NgModule。请参阅&lt;a href=&quot;ngmodule-faq#service-scope&quot;&gt;如何将服务范围限制为模块？&lt;/a&gt;想要查询更多的信息。</target>
        </trans-unit>
        <trans-unit id="176131b1c166c15dd52ca2270019e00646222f93" translate="yes" xml:space="preserve">
          <source>To link our builder implementation with its schema and name, we need to create a &lt;em&gt;builder definition&lt;/em&gt; file, which we can point to in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">要将构建器实现与其架构和名称链接起来，我们需要创建一个&lt;em&gt;构建器定义&lt;/em&gt;文件，我们可以在 &lt;code&gt;package.json&lt;/code&gt; 中指向该文件。</target>
        </trans-unit>
        <trans-unit id="8ef171fef0328a2cd5ad545be79413b8427d3d1b" translate="yes" xml:space="preserve">
          <source>To link to a Stackblitz defined by a named &lt;code&gt;stackblitz.json&lt;/code&gt; file, set the &lt;code&gt;stackblitz&lt;/code&gt; attribute. The following example links to the Stackblitz defined by &lt;code&gt;second.stackblitz.json&lt;/code&gt; in the current guide's directory.</source>
          <target state="translated">要链接到由已命名的 &lt;code&gt;stackblitz.json&lt;/code&gt; 文件定义的Stackblitz，请设置 &lt;code&gt;stackblitz&lt;/code&gt; 属性。以下示例链接到当前指南目录中second.stackblitz.json定义的 &lt;code&gt;second.stackblitz.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0dfc4d2bbeb415d911b77bd57e23158017465af" translate="yes" xml:space="preserve">
          <source>To link to a Stackblitz in a folder whose name is not the same as the current guide page, set the &lt;code&gt;name&lt;/code&gt; attribute to the name of that folder.</source>
          <target state="translated">要链接到名称与当前指南页面不同的文件夹中的Stackblitz，请将 &lt;code&gt;name&lt;/code&gt; 属性设置为该文件夹的名称。</target>
        </trans-unit>
        <trans-unit id="8c16acaaf6113414a6a5a50402e666ea13182d9b" translate="yes" xml:space="preserve">
          <source>To localize your app, follow these general steps:</source>
          <target state="translated">要对您的应用程序进行本地化,请遵循这些一般步骤。</target>
        </trans-unit>
        <trans-unit id="c09afb9997a15f7c7d0a2d0a4beb740078d29af0" translate="yes" xml:space="preserve">
          <source>To maintain the relationship between the component and its token while still distinguishing between them, the recommended style is to use the component base name with the suffix &quot;Token&quot; to name your lightweight injection tokens: &quot;LibHeaderToken&quot;.</source>
          <target state="translated">为了保持组件和它的令牌之间的关系,同时还能区分它们之间的关系,推荐的风格是使用组件基础名和后缀 &quot;Token &quot;来命名你的轻量级注入令牌。&quot;LibHeaderToken&quot;。</target>
        </trans-unit>
        <trans-unit id="9e806bc9cf5ce821c72637bad288f0c8a385e3b7" translate="yes" xml:space="preserve">
          <source>To make a request with progress events enabled, you can create an instance of &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest#reportProgress&quot;&gt;reportProgress&lt;/a&gt;&lt;/code&gt; option set true to enable tracking of progress events.</source>
          <target state="translated">为了使请求启用进度事件，您可以创建一个实例 &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 与 &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest#reportProgress&quot;&gt;reportProgress&lt;/a&gt;&lt;/code&gt; 设置为true，使进度事件的跟踪选项。</target>
        </trans-unit>
        <trans-unit id="4644078867fa768095fca87f32259edcca09d733" translate="yes" xml:space="preserve">
          <source>To make a request with progress events enabled, you can create an instance of &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;reportProgress&lt;/code&gt; option set true to enable tracking of progress events.</source>
          <target state="translated">为了使请求启用进度事件，您可以创建一个实例 &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 与 &lt;code&gt;reportProgress&lt;/code&gt; 设置为true，使进度事件的跟踪选项。</target>
        </trans-unit>
        <trans-unit id="2d1f94a35fe29cf68215d8ce11be523428a2104c" translate="yes" xml:space="preserve">
          <source>To make changes to the documentation pages and sample code, clone the &lt;a href=&quot;https://github.com/angular/angular&quot;&gt;Angular github repository&lt;/a&gt; and go to the &lt;code&gt;aio/&lt;/code&gt; folder.</source>
          <target state="translated">要更改文档页面和示例代码，请克隆&lt;a href=&quot;https://github.com/angular/angular&quot;&gt;Angular github存储库&lt;/a&gt;并转到 &lt;code&gt;aio/&lt;/code&gt; 文件夹。</target>
        </trans-unit>
        <trans-unit id="ad1bed88cabd87c7ef61bbd728ce927c47d305ed" translate="yes" xml:space="preserve">
          <source>To make each product name a link to product details, add the &lt;code&gt;&amp;lt;&lt;a href=&quot;api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; element and set its title to be the product's name by using the property binding &lt;code&gt;[ ]&lt;/code&gt; syntax, as follows:</source>
          <target state="translated">为了使每个产品名产品细节的链接，添加 &lt;code&gt;&amp;lt;&lt;a href=&quot;api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; 元件，并设置其标题通过使用属性绑定到是产品的名称 &lt;code&gt;[ ]&lt;/code&gt; 语法，如下所示：</target>
        </trans-unit>
        <trans-unit id="96f7390b983153eaec2a94dc845f76d740c53ee6" translate="yes" xml:space="preserve">
          <source>To make each product name a link to product details, add the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element and set its title to be the product's name by using the property binding &lt;code&gt;[ ]&lt;/code&gt; syntax, as follows:</source>
          <target state="translated">要使每个产品名称成为产品详细信息的链接，请使用属性绑定 &lt;code&gt;[ ]&lt;/code&gt; 语法添加 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 元素并将其标题设置为产品名称，如下所示：</target>
        </trans-unit>
        <trans-unit id="0133990127a445b9c4636bf47add6269aff05d0f" translate="yes" xml:space="preserve">
          <source>To make library code reusable you must define a public API for it. This &quot;user layer&quot; defines what is available to consumers of your library. A user of your library should be able to access public functionality (such as NgModules, service providers and general utility functions) through a single import path.</source>
          <target state="translated">为了使库代码可以重用,你必须为它定义一个公共API。这个 &quot;用户层 &quot;定义了你的库的消费者可以使用的功能。你的库的用户应该能够通过一个单一的导入路径来访问公共功能(如NgModules、服务提供者和一般实用功能)。</target>
        </trans-unit>
        <trans-unit id="3c46891baa0e78d054423a53f637c9fa5a233ed8" translate="yes" xml:space="preserve">
          <source>To make more complex forms, use the following steps.</source>
          <target state="translated">要制作更复杂的表格,请使用以下步骤。</target>
        </trans-unit>
        <trans-unit id="f4c06ba3e64fe70ec544df6b51f17ee32a730f00" translate="yes" xml:space="preserve">
          <source>To make sure that the &lt;code&gt;HeroService&lt;/code&gt; can provide this service, register it with the &lt;em&gt;injector&lt;/em&gt;, which is the object that is responsible for choosing and injecting the provider where the app requires it.</source>
          <target state="translated">为了确保该 &lt;code&gt;HeroService&lt;/code&gt; 可以提供这样的服务，用它注册&lt;em&gt;喷油器&lt;/em&gt;，这是负责选择和注入其中的应用程序需要它的提供者的物体。</target>
        </trans-unit>
        <trans-unit id="abe2d5f3112ac6f160f5eaad338cd564e7929599" translate="yes" xml:space="preserve">
          <source>To make sure there is only one instance of &lt;code&gt;NewLogger&lt;/code&gt;, alias &lt;code&gt;OldLogger&lt;/code&gt; with the &lt;code&gt;&lt;a href=&quot;../api/core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="translated">为了确保只有 &lt;code&gt;NewLogger&lt;/code&gt; 的一个实例，别名为 &lt;code&gt;OldLogger&lt;/code&gt; 并带有 &lt;code&gt;&lt;a href=&quot;../api/core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="9aa5469016b8426067be0d8dc497d98066fb4a6c" translate="yes" xml:space="preserve">
          <source>To make sure there is only one instance of &lt;code&gt;NewLogger&lt;/code&gt;, alias &lt;code&gt;OldLogger&lt;/code&gt; with the &lt;code&gt;useExisting&lt;/code&gt; option.</source>
          <target state="translated">为了确保只有 &lt;code&gt;NewLogger&lt;/code&gt; 的一个实例，别名为 &lt;code&gt;OldLogger&lt;/code&gt; 并带有 &lt;code&gt;useExisting&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="e85568359a0fbe5ee087b7635e1885b559b60aea" translate="yes" xml:space="preserve">
          <source>To make sure your schematics source files get compiled into the library bundle, add the following scripts to the &lt;code&gt;package.json&lt;/code&gt; file in your library project's root folder (&lt;code&gt;projects/my-lib&lt;/code&gt;).</source>
          <target state="translated">为了确保将原理图源文件编译到库包中，请将以下脚本添加到库项目的根文件夹（ &lt;code&gt;projects/my-lib&lt;/code&gt; ）中的 &lt;code&gt;package.json&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="b618bd0150119d92c15de99c07c66b9d5d5df18d" translate="yes" xml:space="preserve">
          <source>To make the &quot;Notify Me&quot; button work, you need to configure two things:</source>
          <target state="translated">要使 &quot;通知我 &quot;按钮工作,你需要配置两件事。</target>
        </trans-unit>
        <trans-unit id="c63bfd6ff80b0594b74ebefc3198e01f8f521a91" translate="yes" xml:space="preserve">
          <source>To make the app navigate to the dashboard automatically, add the following route to the &lt;code&gt;AppRoutingModule.Routes&lt;/code&gt; array.</source>
          <target state="translated">若要使应用程序自动导航到仪表板，请将以下路由添加到 &lt;code&gt;AppRoutingModule.Routes&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="f13fc1c29e96e1dfdbe3eed259eadf83ed2de57e" translate="yes" xml:space="preserve">
          <source>To make the change less abrupt, we need to define an animation &lt;em&gt;transition&lt;/em&gt; to specify the changes that occur between one state and another over a period of time. The &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; function accepts two arguments: the first argument accepts an expression that defines the direction between two transition states, and the second argument accepts one or a series of &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; steps.</source>
          <target state="translated">为了使更改不那么突然，我们需要定义一个动画&lt;em&gt;过渡，&lt;/em&gt;以指定一段时间内一个状态与另一状态之间发生的更改。的 &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 函数接受两个参数：第一个参数接受限定两个过渡态之间的方向的表达，并且所述第二参数接受一个或一系列的 &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 的步骤。</target>
        </trans-unit>
        <trans-unit id="0f497517c53253fb57aa220031bd985b5070e07b" translate="yes" xml:space="preserve">
          <source>To make the code in a JavaScript module available to other modules, use an &lt;code&gt;export&lt;/code&gt; statement at the end of the relevant code in the module, such as the following:</source>
          <target state="translated">要使JavaScript模块中的代码可用于其他模块，请在模块中相关代码的末尾使用 &lt;code&gt;export&lt;/code&gt; 语句，例如：</target>
        </trans-unit>
        <trans-unit id="8bcf14d372529e2a67e2f9aa251e900cf6621e7d" translate="yes" xml:space="preserve">
          <source>To make these transitions as easy as possible, we deprecate APIs and features for a period of time before removing them. This gives you time to update your apps to the latest APIs and best practices.</source>
          <target state="translated">为了使这些过渡尽可能简单,我们在删除API和功能之前会先废弃一段时间。这让您有时间更新您的应用程序以适应最新的API和最佳实践。</target>
        </trans-unit>
        <trans-unit id="c7d74082b91da794e2772b1b64caafcf244578ba" translate="yes" xml:space="preserve">
          <source>To make these transitions as easy as possible, we make these commitments to you:</source>
          <target state="translated">为了使这些过渡尽可能的简单,我们向您做出以下承诺。</target>
        </trans-unit>
        <trans-unit id="e4342ac072084a99b08c67145d8f7f9d46ebc4bf" translate="yes" xml:space="preserve">
          <source>To make updating easy, we provide complete instructions in the interactive &lt;a href=&quot;https://update.angular.io/&quot;&gt;Angular Update Guide&lt;/a&gt;.</source>
          <target state="translated">为了使更新变得容易，我们在交互式&lt;a href=&quot;https://update.angular.io/&quot;&gt;Angular Update Guide中&lt;/a&gt;提供了完整的说明。</target>
        </trans-unit>
        <trans-unit id="f346dda78884da2f316927c754a446df557d7e97" translate="yes" xml:space="preserve">
          <source>To make use of all the features of Angular service worker, use the latest versions of Angular and the Angular CLI.</source>
          <target state="translated">要使用Angular服务工作者的所有功能,请使用最新版本的Angular和Angular CLI。</target>
        </trans-unit>
        <trans-unit id="d3a75dfb8b6d5e0a84151719b6bac15ccc94edf4" translate="yes" xml:space="preserve">
          <source>To make your solution reusable, you need to adjust it so that it does not depend on app-specific code. Here are some things to consider in migrating application functionality to a library.</source>
          <target state="translated">为了使你的解决方案可以重用,你需要调整它,使它不依赖于应用程序特定的代码。以下是将应用功能迁移到库中需要考虑的一些事情。</target>
        </trans-unit>
        <trans-unit id="9f12fc809ed83f10331eb3009c1d1040391b4f98" translate="yes" xml:space="preserve">
          <source>To manage the heroes, create a &lt;code&gt;HeroesModule&lt;/code&gt; with routing in the heroes folder and register it with the root &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">要管理英雄，请在heroes文件夹中创建带有路由的 &lt;code&gt;HeroesModule&lt;/code&gt; ，并将其注册到根 &lt;code&gt;AppModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e01c27c588e2fda534f6630e651b5200cc4fa62a" translate="yes" xml:space="preserve">
          <source>To manually set an app's source locale to one other than the automatic value, follow these steps:</source>
          <target state="translated">要手动将应用程序的源语言设置为自动值以外的其他语言,请遵循这些步骤。</target>
        </trans-unit>
        <trans-unit id="aded88b0986d969878002d25790cac4afe9fb93e" translate="yes" xml:space="preserve">
          <source>To mark a class as a pipe and supply configuration metadata, apply the &lt;a href=&quot;../api/core/pipe&quot;&gt;&lt;code&gt;@Pipe&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;glossary#decorator--decoration&quot;&gt;decorator&lt;/a&gt; to the class. Use &lt;a href=&quot;glossary#case-types&quot;&gt;UpperCamelCase&lt;/a&gt; (the general convention for class names) for the pipe class name, and &lt;a href=&quot;glossary#case-types&quot;&gt;camelCase&lt;/a&gt; for the corresponding &lt;code&gt;name&lt;/code&gt; string. Do not use hyphens in the &lt;code&gt;name&lt;/code&gt;. For details and more examples, see &lt;a href=&quot;styleguide#pipe-names&quot;&gt;Pipe names&lt;/a&gt;.</source>
          <target state="translated">要将一个类标记为管道并提供配置元数据，请将&lt;a href=&quot;../api/core/pipe&quot;&gt; &lt;code&gt;@Pipe&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;glossary#decorator--decoration&quot;&gt;装饰器&lt;/a&gt;应用于该类。将&lt;a href=&quot;glossary#case-types&quot;&gt;UpperCamelCase&lt;/a&gt;（类名的常规约定）用作管道类名，并将&lt;a href=&quot;glossary#case-types&quot;&gt;camelCase&lt;/a&gt;用作相应的 &lt;code&gt;name&lt;/code&gt; 字符串。请勿在 &lt;code&gt;name&lt;/code&gt; 使用连字符。有关详细信息和更多示例，请参见&lt;a href=&quot;styleguide#pipe-names&quot;&gt;管道名称&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebb28b48869f066439d945bc03e317d919b03091" translate="yes" xml:space="preserve">
          <source>To mark a value as trusted, inject &lt;code&gt;&lt;a href=&quot;../api/platform-browser/domsanitizer&quot;&gt;DomSanitizer&lt;/a&gt;&lt;/code&gt; and call one of the following methods:</source>
          <target state="translated">要将值标记为受信任，请注入 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/domsanitizer&quot;&gt;DomSanitizer&lt;/a&gt;&lt;/code&gt; 并调用以下方法之一：</target>
        </trans-unit>
        <trans-unit id="5a56ec05bb8c1989de9d25489aca675135c374d2" translate="yes" xml:space="preserve">
          <source>To mark an attribute for translation, add &lt;code&gt;i18n-&lt;/code&gt;&lt;em&gt;attribute&lt;/em&gt; in which &lt;em&gt;attribute&lt;/em&gt; is the attribute to translate. The following example shows how to mark the &lt;code&gt;title&lt;/code&gt; attribute on the &lt;code&gt;img&lt;/code&gt; tag by adding &lt;code&gt;i18n-title&lt;/code&gt;:</source>
          <target state="translated">要标记要翻译的属性，请添加 &lt;code&gt;i18n-&lt;/code&gt; &lt;em&gt;属性&lt;/em&gt;，其中&lt;em&gt;attribute&lt;/em&gt;是要翻译的属性。以下示例显示如何通过添加 &lt;code&gt;i18n-title&lt;/code&gt; 在 &lt;code&gt;img&lt;/code&gt; 标签上标记 &lt;code&gt;title&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="826ff064aa36b11928c6420ce581e8abd48d94ef" translate="yes" xml:space="preserve">
          <source>To mark an attribute for translation, add an attribute in the form of &lt;code&gt;i18n-x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is the name of the attribute to translate. The following example shows how to mark the &lt;code&gt;title&lt;/code&gt; attribute for translation by adding the &lt;code&gt;i18n-title&lt;/code&gt; attribute on the &lt;code&gt;img&lt;/code&gt; tag:</source>
          <target state="translated">要将属性标记为要翻译的属性，请添加 &lt;code&gt;i18n-x&lt;/code&gt; 形式的属性，其中 &lt;code&gt;x&lt;/code&gt; 是要翻译的属性的名称。以下示例显示如何通过在 &lt;code&gt;img&lt;/code&gt; 标签上添加 &lt;code&gt;i18n-title&lt;/code&gt; 属性来标记 &lt;code&gt;title&lt;/code&gt; 属性以进行翻译：</target>
        </trans-unit>
        <trans-unit id="d8d57de94256bf3111f375a6f4f8c16a2bbdcc50" translate="yes" xml:space="preserve">
          <source>To mark the greeting for translation, add the &lt;code&gt;i18n&lt;/code&gt; attribute to the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">要标记问候语以进行翻译，请将 &lt;code&gt;i18n&lt;/code&gt; 属性添加到 &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 标记中。</target>
        </trans-unit>
        <trans-unit id="204d695937e174c030d578e79a70b8cfdaa9fdde" translate="yes" xml:space="preserve">
          <source>To maximize compatibility, you could ship a single bundle that includes all your compiled code, plus any polyfills that may be needed. Users with modern browsers, however, shouldn't have to pay the price of increased bundle size that comes with polyfills they don't need. Differential loading, which is supported by default in Angular CLI version 8 and higher, solves this problem.</source>
          <target state="translated">为了最大限度地提高兼容性,你可以提供一个单一的捆绑包,其中包括所有的编译代码,加上任何可能需要的polyfills。然而,使用现代浏览器的用户不应该付出增加捆绑包大小的代价,因为捆绑包中包含了他们不需要的polyfills。Angular CLI第8版及以上版本默认支持的差异化加载解决了这个问题。</target>
        </trans-unit>
        <trans-unit id="732d4da603a82c47581ceed2fef8436b0873e900" translate="yes" xml:space="preserve">
          <source>To maximize compatibility, you could ship a single bundle that includes all your compiled code, plus any polyfills that may be needed. Users with modern browsers, however, shouldn't have to pay the price of increased bundle size that comes with polyfills they don't need. Differential loading, which is supported in Angular CLI version 8 and higher, can help solve this problem.</source>
          <target state="translated">为了最大限度地提高兼容性,你可以提供一个单一的捆绑包,其中包括所有的编译代码,加上任何可能需要的polyfills。然而,使用现代浏览器的用户不应该付出增加捆绑包大小的代价,因为捆绑包中包含了他们不需要的polyfills。Angular CLI第8版及以上版本支持的差异化加载可以帮助解决这个问题。</target>
        </trans-unit>
        <trans-unit id="a4e9737bd2b2dc2a5cd6f3a9fc82ef841838daab" translate="yes" xml:space="preserve">
          <source>To merge the completed translations into the app, use the &lt;a href=&quot;glossary#command-line-interface-cli&quot;&gt;Angular CLI&lt;/a&gt; to build a copy of the app's distributable files for each locale. The build process replaces the original text with translated text, and sets the &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; token for each distributable copy of the app. It also loads and registers the locale data.</source>
          <target state="translated">要将完成的翻译合并到应用程序中，请使用&lt;a href=&quot;glossary#command-line-interface-cli&quot;&gt;Angular CLI&lt;/a&gt;为每个语言环境构建应用程序可分发文件的副本。构建过程将原始文本替换为翻译后的文本，并为应用程序的每个可分发副本设置 &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; 令牌。它还加载并注册语言环境数据。</target>
        </trans-unit>
        <trans-unit id="6c9f63931f1a9876ee6144f0f6f85bb6ad52a4a3" translate="yes" xml:space="preserve">
          <source>To merge the translated text into component templates, compile the app with the completed translation file.</source>
          <target state="translated">要将翻译后的文本合并到组件模板中,请使用完成的翻译文件编译应用程序。</target>
        </trans-unit>
        <trans-unit id="89b8144679887286430f8c720c3bb03f28507e3a" translate="yes" xml:space="preserve">
          <source>To monitor changes that occur where &lt;code&gt;ngOnChanges()&lt;/code&gt; won't catch them, you can implement your own change check, as shown in the &lt;em&gt;DoCheck&lt;/em&gt; example. This example shows how you can use the &lt;code&gt;ngDoCheck()&lt;/code&gt; hook to detect and act upon changes that Angular doesn't catch on its own.</source>
          <target state="translated">要监视发生在 &lt;code&gt;ngOnChanges()&lt;/code&gt; 无法捕获它们的更改，您可以实现自己的更改检查，如&lt;em&gt;DoCheck&lt;/em&gt;示例所示。此示例显示了如何使用 &lt;code&gt;ngDoCheck()&lt;/code&gt; 钩子来检测Angular自身无法捕获的更改并对其采取行动。</target>
        </trans-unit>
        <trans-unit id="50177e0937d0c24e4d779ea321fe99f130aa12ab" translate="yes" xml:space="preserve">
          <source>To navigate a relative path with the &lt;code&gt;Router.navigate&lt;/code&gt; method, you must supply the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; to give the router knowledge of where you are in the current route tree.</source>
          <target state="translated">要使用 &lt;code&gt;Router.navigate&lt;/code&gt; 方法导航相对路径，必须提供 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; ,以使路由器知道您在当前路由树中的位置。</target>
        </trans-unit>
        <trans-unit id="09948d03b8b10d3e5528be9b431a7b910e118c79" translate="yes" xml:space="preserve">
          <source>To navigate as a result of some user action such as the click of an anchor tag, use &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">要通过某些用户操作（例如单击锚标记）进行 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; ，请使用RouterLink。</target>
        </trans-unit>
        <trans-unit id="e3d48bf82f388d44ca8269b4f3bfd203e20968b6" translate="yes" xml:space="preserve">
          <source>To navigate to the &lt;code&gt;CrisisCenterHomeComponent&lt;/code&gt;, the full URL is &lt;code&gt;/crisis-center&lt;/code&gt; (&lt;code&gt;/crisis-center&lt;/code&gt; + &lt;code&gt;''&lt;/code&gt; + &lt;code&gt;''&lt;/code&gt;).</source>
          <target state="translated">要导航至 &lt;code&gt;CrisisCenterHomeComponent&lt;/code&gt; ，完整的URL为 &lt;code&gt;/crisis-center&lt;/code&gt; （ &lt;code&gt;/crisis-center&lt;/code&gt; + &lt;code&gt;''&lt;/code&gt; + &lt;code&gt;''&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c30458218377d115bbf5391fba4f7de471157644" translate="yes" xml:space="preserve">
          <source>To navigate to the &lt;code&gt;CrisisDetailComponent&lt;/code&gt; for a crisis with &lt;code&gt;id=2&lt;/code&gt;, the full URL is &lt;code&gt;/crisis-center/2&lt;/code&gt; (&lt;code&gt;/crisis-center&lt;/code&gt; + &lt;code&gt;''&lt;/code&gt; + &lt;code&gt;'/2'&lt;/code&gt;).</source>
          <target state="translated">要导航到 &lt;code&gt;id=2&lt;/code&gt; 的危机的 &lt;code&gt;CrisisDetailComponent&lt;/code&gt; ，完整的URL是 &lt;code&gt;/crisis-center/2&lt;/code&gt; （ &lt;code&gt;/crisis-center&lt;/code&gt; + &lt;code&gt;''&lt;/code&gt; + &lt;code&gt;'/2'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e48622697af47049a459333dd8614facd41899c8" translate="yes" xml:space="preserve">
          <source>To navigate to the Admin Dashboard route after logging in, update &lt;code&gt;admin-dashboard.component.ts&lt;/code&gt; to handle the query parameters and fragment.</source>
          <target state="translated">要在登录后导航到&amp;ldquo;管理仪表板&amp;rdquo;路线，请更新 &lt;code&gt;admin-dashboard.component.ts&lt;/code&gt; 以处理查询参数和片段。</target>
        </trans-unit>
        <trans-unit id="97e5b5a0b343f2f0aacae676cafbfb230385ea8b" translate="yes" xml:space="preserve">
          <source>To navigate to the dashboard, the router needs an appropriate route.</source>
          <target state="translated">要导航到仪表板,路由器需要一个合适的路由。</target>
        </trans-unit>
        <trans-unit id="97d195db608d7c728fef4d499c5aaf0c6b4979af" translate="yes" xml:space="preserve">
          <source>To open a hero's tax return, the preparer clicks on a hero name, which opens a component for editing that return. Each selected hero tax return opens in its own component and multiple returns can be open at the same time.</source>
          <target state="translated">要打开一个英雄的报税单,准备者点击一个英雄的名字,就会打开一个用于编辑该报税单的组件。每个选定的英雄报税表都会在自己的组件中打开,并且可以同时打开多个报税表。</target>
        </trans-unit>
        <trans-unit id="dbd7da45428e3d65e9e156aac501fb13357f9fed" translate="yes" xml:space="preserve">
          <source>To opt out of Ivy, change the &lt;code&gt;angularCompilerOptions&lt;/code&gt; in your project's TypeScript configuration, most commonly located at &lt;code&gt;tsconfig.app.json&lt;/code&gt; at the root of the workspace.</source>
          <target state="translated">要退出Ivy， &lt;code&gt;angularCompilerOptions&lt;/code&gt; 在项目的TypeScript配置中更改angularCompilerOptions，该配置通常位于工作区根目录的 &lt;code&gt;tsconfig.app.json&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="b5a0babdbd087078fc6808357b85a5f76fc7e195" translate="yes" xml:space="preserve">
          <source>To opt-in an existing application, run</source>
          <target state="translated">要选择加入一个现有的应用程序,运行</target>
        </trans-unit>
        <trans-unit id="e1e1e2d56f853cd55abdf55cf1f45f3fbc917764" translate="yes" xml:space="preserve">
          <source>To override a tree-shakable provider, configure the injector of a specific NgModule or component with another provider, using the &lt;code&gt;providers: []&lt;/code&gt; array syntax of the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator.</source>
          <target state="translated">要覆盖可摇树的提供者，请使用 &lt;code&gt;providers: []&lt;/code&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; 或 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 装饰器的[]数组语法，将特定NgModule或组件的注入器与另一个提供者一起配置。</target>
        </trans-unit>
        <trans-unit id="997153f39ef3a6b3379015fe98976042f7f5c60d" translate="yes" xml:space="preserve">
          <source>To override the value of &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt;, add the &lt;code&gt;locale&lt;/code&gt; parameter. For example, to force the currency to use &lt;code&gt;en-US&lt;/code&gt; no matter which language-locale you set for &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt;, use this form: &lt;code&gt;{{amount | &lt;a href=&quot;../api/common/currencypipe&quot;&gt;currency&lt;/a&gt; : 'en-US'}}&lt;/code&gt;.</source>
          <target state="translated">要覆盖 &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; 的值，请添加 &lt;code&gt;locale&lt;/code&gt; 参数。例如，迫使货币使用 &lt;code&gt;en-US&lt;/code&gt; 无论是哪个语言区域您设置 &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; ，使用这种形式： &lt;code&gt;{{amount | &lt;a href=&quot;../api/common/currencypipe&quot;&gt;currency&lt;/a&gt; : 'en-US'}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36a953799b95a8f6656497edaeebfe8ea9110972" translate="yes" xml:space="preserve">
          <source>To perform complex initializations shortly after construction.</source>
          <target state="translated">要在施工后不久进行复杂的初始化。</target>
        </trans-unit>
        <trans-unit id="f0bb0d88a7390f7a95031586a8beb53ff5091b52" translate="yes" xml:space="preserve">
          <source>To position the delete button at the far right of the hero entry, add some CSS to the &lt;code&gt;heroes.component.css&lt;/code&gt;. You'll find that CSS in the &lt;a href=&quot;toh-pt6#heroescomponent&quot;&gt;final review code&lt;/a&gt; below.</source>
          <target state="translated">要将删除按钮放置在英雄条目的最右边，请向 &lt;code&gt;heroes.component.css&lt;/code&gt; 添加一些CSS 。您将在下面的&lt;a href=&quot;toh-pt6#heroescomponent&quot;&gt;最终评论代码&lt;/a&gt;中找到该CSS 。</target>
        </trans-unit>
        <trans-unit id="0f90eccccd670656e7c8f0005f6ee48be0e54a38" translate="yes" xml:space="preserve">
          <source>To preload component data, you can use a &lt;code&gt;resolver&lt;/code&gt;. Resolvers improve UX by blocking the page load until all necessary data is available to fully display the page.</source>
          <target state="translated">要预加载组件数据，可以使用 &lt;code&gt;resolver&lt;/code&gt; 。解析程序通过阻止页面加载，直到所有必要的数据都可以完全显示页面为止，从而改善了UX。</target>
        </trans-unit>
        <trans-unit id="49b504bd28cda7dd8440bf615efc157d41f371aa" translate="yes" xml:space="preserve">
          <source>To prepare your app for translations, you should have a basic understanding of the following:</source>
          <target state="translated">要为您的应用做好翻译准备,您应该对以下内容有基本的了解。</target>
        </trans-unit>
        <trans-unit id="2c961571be0bc2d29a55550db6735d63db701501" translate="yes" xml:space="preserve">
          <source>To preserve app integrity, the Angular service worker groups all files into a version together. The files grouped into a version usually include HTML, JS, and CSS files. Grouping of these files is essential for integrity because HTML, JS, and CSS files frequently refer to each other and depend on specific content. For example, an &lt;code&gt;index.html&lt;/code&gt; file might have a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag that references &lt;code&gt;bundle.js&lt;/code&gt; and it might attempt to call a function &lt;code&gt;startApp()&lt;/code&gt; from within that script. Any time this version of &lt;code&gt;index.html&lt;/code&gt; is served, the corresponding &lt;code&gt;bundle.js&lt;/code&gt; must be served with it. For example, assume that the &lt;code&gt;startApp()&lt;/code&gt; function is renamed to &lt;code&gt;runApp()&lt;/code&gt; in both files. In this scenario, it is not valid to serve the old &lt;code&gt;index.html&lt;/code&gt;, which calls &lt;code&gt;startApp()&lt;/code&gt;, along with the new bundle, which defines &lt;code&gt;runApp()&lt;/code&gt;.</source>
          <target state="translated">为了保持应用程序的完整性，Angular服务工作器将所有文件分组到一个版本中。分组为一个版本的文件通常包括HTML，JS和CSS文件。这些文件的分组对于完整性至关重要，因为HTML，JS和CSS文件经常相互引用并且依赖于特定的内容。例如， &lt;code&gt;index.html&lt;/code&gt; 文件可能具有引用 &lt;code&gt;bundle.js&lt;/code&gt; 的 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记，并且它可能会尝试从该脚本中调用函数 &lt;code&gt;startApp()&lt;/code&gt; 。每当提供此版本的 &lt;code&gt;index.html&lt;/code&gt; 时， &lt;code&gt;bundle.js&lt;/code&gt; 必须为其提供相应的bundle.js。例如，假设将 &lt;code&gt;startApp()&lt;/code&gt; 函数重命名为 &lt;code&gt;runApp()&lt;/code&gt; 在两个文件中。在这种情况下，服务于旧的 &lt;code&gt;index.html&lt;/code&gt; （调用 &lt;code&gt;startApp()&lt;/code&gt; )以及定义了 &lt;code&gt;runApp()&lt;/code&gt; 的新捆绑包是无效的。</target>
        </trans-unit>
        <trans-unit id="fe943f52fad6ef05058867916f3c62d1438605f6" translate="yes" xml:space="preserve">
          <source>To preserve sequences of whitespace characters, use the &lt;code&gt;ngPreserveWhitespaces&lt;/code&gt; attribute.</source>
          <target state="translated">要保留空白字符序列，请使用 &lt;code&gt;ngPreserveWhitespaces&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="6f546bb9723988bfa28f68d7fd96af8a58f806bc" translate="yes" xml:space="preserve">
          <source>To prevent the validator from displaying errors before the user has a chance to edit the form, you should check for either the &lt;code&gt;dirty&lt;/code&gt; or &lt;code&gt;touched&lt;/code&gt; states in a control.</source>
          <target state="translated">为了防止验证者在用户有机会编辑表单之前显示错误，您应该检查控件中的 &lt;code&gt;dirty&lt;/code&gt; 状态或 &lt;code&gt;touched&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="8f13d961bf1f2a2e0a6771cacc0e0734c478d793" translate="yes" xml:space="preserve">
          <source>To prevent this issue, write a constructor that attempts to inject the module or service from the root app injector. If the injection succeeds, the class has been loaded a second time. You can throw an error or take other remedial action.</source>
          <target state="translated">为了防止这个问题,写一个构造函数,尝试从根应用注入器注入模块或服务。如果注入成功,则该类已被第二次加载。你可以抛出一个错误或采取其他补救措施。</target>
        </trans-unit>
        <trans-unit id="82edb1afa8eeaf7f78aa665cfb01fbaf7b31f687" translate="yes" xml:space="preserve">
          <source>To prevent this, configure the component-level injector of &lt;code&gt;HeroTaxReturnComponent&lt;/code&gt; to provide the service, using the &lt;code&gt;providers&lt;/code&gt; property in the component metadata.</source>
          <target state="translated">为避免这种情况，请使用组件元数据中的 &lt;code&gt;providers&lt;/code&gt; 属性将 &lt;code&gt;HeroTaxReturnComponent&lt;/code&gt; 的组件级注入器配置为提供服务。</target>
        </trans-unit>
        <trans-unit id="764953f88d6db345381e8274359af32c10d6b814" translate="yes" xml:space="preserve">
          <source>To prevent this, the application must ensure that a user request originates from the real application, not from a different site. The server and client must cooperate to thwart this attack.</source>
          <target state="translated">为了防止这种情况的发生,应用程序必须确保用户的请求来自真正的应用程序,而不是来自不同的网站。服务器和客户端必须合作,以阻止这种攻击。</target>
        </trans-unit>
        <trans-unit id="23e6bd66df0322fbae0f2b4af0850695d73a6068" translate="yes" xml:space="preserve">
          <source>To preview Ivy, use &lt;code&gt;@angular/core@next&lt;/code&gt; version of Angular (8.1.x), rather than &lt;code&gt;@angular/core@latest&lt;/code&gt; (8.0.x), as it contains all the latest bug fixes and improvements.</source>
          <target state="translated">要预览Ivy，请使用Angular（8.1.x）的 &lt;code&gt;@angular/core@next&lt;/code&gt; 版本，而不是 &lt;code&gt;@angular/core@latest&lt;/code&gt; （8.0.x），因为它包含所有最新的错误修复和改进。</target>
        </trans-unit>
        <trans-unit id="8d1a7d82c50d476f8fd8a4601ce28f42ef661a13" translate="yes" xml:space="preserve">
          <source>To probe the behavior in the live example, change the value and optional exponent in the template.</source>
          <target state="translated">要探究实战例子中的行为,请更改模板中的数值和可选的指数。</target>
        </trans-unit>
        <trans-unit id="e83f099ed59d8330ac2609350236801b883e19e1" translate="yes" xml:space="preserve">
          <source>To provide a more specific type for an input expression to a directive within the template, add a &lt;code&gt;ngTemplateGuard_xx&lt;/code&gt; property to the directive, where the suffix to the static property name is the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; field name. The value of the property can be either a general type-narrowing function based on its return type, or the string &lt;code&gt;&quot;binding&quot;&lt;/code&gt; as in the case of &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">要为模板中指令的输入表达式提供更具体的类型，请在指令中添加 &lt;code&gt;ngTemplateGuard_xx&lt;/code&gt; 属性，其中，静态属性名称的后缀为 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 字段名称。该属性的值可以是基于其返回类型的常规类型窄化函数，也可以是字符串 &lt;code&gt;&quot;binding&quot;&lt;/code&gt; 如 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="90afe3bb0527dc6f5cce2feb6ccc77684ff74860" translate="yes" xml:space="preserve">
          <source>To provide better user experience, the template shows an appropriate error message when the form is invalid.</source>
          <target state="translated">为了提供更好的用户体验,当表单无效时,模板会显示相应的错误信息。</target>
        </trans-unit>
        <trans-unit id="e498d45c2b48e2a16db2e6e00575c839c83f030b" translate="yes" xml:space="preserve">
          <source>To provide better user experience, we show an appropriate error message when the form is invalid.</source>
          <target state="translated">为了提供更好的用户体验,当表单无效时,我们会显示适当的错误信息。</target>
        </trans-unit>
        <trans-unit id="14a86adfecf23cd6f5e988f214dc30fab3690652" translate="yes" xml:space="preserve">
          <source>To read a target element property or call one of its methods, see the API reference for &lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt; and &lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;.</source>
          <target state="translated">要读取目标元素属性或调用其方法之一，请参阅&lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;和&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;的API参考。</target>
        </trans-unit>
        <trans-unit id="fe1b5ee91e15d081682393046ee0422bacf79816" translate="yes" xml:space="preserve">
          <source>To read about sharing services, see &lt;a href=&quot;providers&quot;&gt;Providers&lt;/a&gt;.</source>
          <target state="translated">要了解有关共享服务的信息，请参阅&lt;a href=&quot;providers&quot;&gt;提供者&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="832342d7f1d64bd0fabad4f9800a7ac9d39aa8c5" translate="yes" xml:space="preserve">
          <source>To register a single form control, import the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; class and create a new instance of &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; to save as a class property.</source>
          <target state="translated">若要注册单个表单控件，请导入 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 类并创建一个新的 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例以另存为类属性。</target>
        </trans-unit>
        <trans-unit id="16b4681d1fd2b68022b40ab92b874d4b37fbb9de" translate="yes" xml:space="preserve">
          <source>To register child controls with the form, use &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; with a &lt;code&gt;name&lt;/code&gt; attribute. You may use &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; to create sub-groups within the form.</source>
          <target state="translated">要使用该表单注册子控件，请使用带有 &lt;code&gt;name&lt;/code&gt; 属性的 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; 。您可以使用 &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; 在表单中创建子组。</target>
        </trans-unit>
        <trans-unit id="92f1e211d9969a30647f141c114265a28591bf64" translate="yes" xml:space="preserve">
          <source>To remedy this issue, use asynchronous routing, which loads feature modules lazily, on request. Lazy loading has multiple benefits.</source>
          <target state="translated">为了弥补这个问题,可以使用异步路由,即根据请求,懒惰地加载功能模块。懒惰加载有多种好处。</target>
        </trans-unit>
        <trans-unit id="8bd6725fea1d02e33394eb5471a409672ea30a70" translate="yes" xml:space="preserve">
          <source>To remedy this, you may need to kill the old worker using one of the above techniques (&lt;a href=&quot;service-worker-devops#fail-safe&quot;&gt;Fail-safe&lt;/a&gt; or &lt;a href=&quot;service-worker-devops#safety-worker&quot;&gt;Safety Worker&lt;/a&gt;).</source>
          <target state="translated">要解决此问题，您可能需要使用上述技术之一（&amp;ldquo; &lt;a href=&quot;service-worker-devops#fail-safe&quot;&gt;故障安全&amp;rdquo;&lt;/a&gt;或&amp;ldquo; &lt;a href=&quot;service-worker-devops#safety-worker&quot;&gt;安全工作者&amp;rdquo;&lt;/a&gt;）杀死该老工人。</target>
        </trans-unit>
        <trans-unit id="be8db69041e9551a35264264ba86796ed7aef796" translate="yes" xml:space="preserve">
          <source>To remove, delete the &lt;code&gt;import '@angular/localize/init';&lt;/code&gt; line from the polyfills file.</source>
          <target state="translated">要删除，请删除 &lt;code&gt;import '@angular/localize/init';&lt;/code&gt; polyfills文件中的一行。</target>
        </trans-unit>
        <trans-unit id="aaeefee9f550b0ec463699d0b839236aef8f3ef3" translate="yes" xml:space="preserve">
          <source>To render the new values, add &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; to the bottom of the &lt;code&gt;AppComponent&lt;/code&gt; template so the view also displays the sunflower:</source>
          <target state="translated">要呈现新值，请将 &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; 添加到 &lt;code&gt;AppComponent&lt;/code&gt; 模板的底部，以便视图也显示向日葵：</target>
        </trans-unit>
        <trans-unit id="2d4a7cb38a8f7318c5a2000f39faa271b3df5c87" translate="yes" xml:space="preserve">
          <source>To repeat the command any time the inputs change (watch mode), replace &lt;code&gt;bazel&lt;/code&gt; with &lt;code&gt;ibazel&lt;/code&gt; in these commands.</source>
          <target state="translated">要在输入更改时（监视模式）随时重复该命令， &lt;code&gt;ibazel&lt;/code&gt; 在这些命令 &lt;code&gt;bazel&lt;/code&gt; bazel替换为ibazel。</target>
        </trans-unit>
        <trans-unit id="752e6482dbad0b90cac7b0b18d6fb3ccea0c4a13" translate="yes" xml:space="preserve">
          <source>To report progress, use the &lt;code&gt;BuilderContext.reportProgress()&lt;/code&gt; method, which takes a current value, (optional) total, and status string as arguments. The total can be any number; for example, if you know how many files you have to process, the total could be the number of files, and current should be the number processed so far. The status string is unmodified unless you pass in a new string value.</source>
          <target state="translated">若要报告进度，请使用 &lt;code&gt;BuilderContext.reportProgress()&lt;/code&gt; 方法，该方法采用当前值，（可选）总计和状态字符串作为参数。总数可以是任意数量；例如，如果您知道必须处理多少个文件，则总数可以是文件数，而当前应该是到目前为止已处理的数。除非您传入新的字符串值，否则状态字符串不会被修改。</target>
        </trans-unit>
        <trans-unit id="da733e7d828e2271d74de53fcaeb21139907c7a1" translate="yes" xml:space="preserve">
          <source>To report vulnerabilities in Angular itself, email us at &lt;a href=&quot;mailto:security@angular.io&quot;&gt;security@angular.io&lt;/a&gt;.</source>
          <target state="translated">要报告Angular本身的漏洞，请发送电子邮件至&lt;a href=&quot;mailto:security@angular.io&quot;&gt;security@angular.io&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbb23cd418ca38ba0340a3dac96f48e6e5baaa92" translate="yes" xml:space="preserve">
          <source>To resolve this, give the &lt;code&gt;HeroService&lt;/code&gt; constructor a boolean flag to control display of secret heroes.</source>
          <target state="translated">要解决此问题，请给 &lt;code&gt;HeroService&lt;/code&gt; 构造函数一个布尔标志，以控制秘密英雄的显示。</target>
        </trans-unit>
        <trans-unit id="abae6466bed4070d96bb8c402709fe5af1d1f3dd" translate="yes" xml:space="preserve">
          <source>To resolve this, we give the &lt;code&gt;HeroService&lt;/code&gt; constructor a boolean flag to control display of secret heroes.</source>
          <target state="translated">为了解决这个问题，我们给 &lt;code&gt;HeroService&lt;/code&gt; 构造函数一个布尔标志，以控制秘密英雄的显示。</target>
        </trans-unit>
        <trans-unit id="737e073eba5452fb5c988cfe636593f4a671ce45" translate="yes" xml:space="preserve">
          <source>To restore the pristine state of the form controls, clear all of the flags imperatively by calling the form's &lt;code&gt;reset()&lt;/code&gt; method after calling the &lt;code&gt;newHero()&lt;/code&gt; method.</source>
          <target state="translated">要恢复表单控件的原始状态，请在调用 &lt;code&gt;newHero()&lt;/code&gt; 方法之后，通过调用表单的 &lt;code&gt;reset()&lt;/code&gt; 方法来强制清除所有标志。</target>
        </trans-unit>
        <trans-unit id="ac34d2783858abc37d4c5360d16d00324ca882e2" translate="yes" xml:space="preserve">
          <source>To resume testing after completion of asynchronous activity or asynchronous change detection, hook that promise. See &lt;a href=&quot;testing#when-stable&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">要在完成异步活动或异步更改检测之后恢复测试，请执行该承诺。见&lt;a href=&quot;testing#when-stable&quot;&gt;上文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b89272608dd98a701e650c77a1eb6dabd636640" translate="yes" xml:space="preserve">
          <source>To resume testing after completion of asynchronous activity or asynchronous change detection, hook that promise. See &lt;a href=&quot;testing-components-scenarios#when-stable&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">要在完成异步活动或异步更改检测之后恢复测试，请执行该承诺。见&lt;a href=&quot;testing-components-scenarios#when-stable&quot;&gt;上文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75267a4b8f6f0e64a2aaf97b5e57d21e9592bed6" translate="yes" xml:space="preserve">
          <source>To revert the compiler default, set the build option &lt;code&gt;aot: false&lt;/code&gt; in the &lt;code&gt;angular.json&lt;/code&gt; configuration file.</source>
          <target state="translated">要恢复编译器的默认设置，请在 &lt;code&gt;angular.json&lt;/code&gt; 配置文件中设置构建选项 &lt;code&gt;aot: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9f7479c96fe5dbd95ef07ceac53b3c6f29bcbc0" translate="yes" xml:space="preserve">
          <source>To review a complete list of changes, organized by version, see the &lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;Angular change log&lt;/a&gt;.</source>
          <target state="translated">要查看按版本组织的更改的完整列表，请参阅&lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;Angular更改日志&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9431c2209f7aafa5c97b655421d8f332f66b82cb" translate="yes" xml:space="preserve">
          <source>To run in VS with F5</source>
          <target state="translated">在VS中用F5运行</target>
        </trans-unit>
        <trans-unit id="c7b8b861dfdc4cde711a32872c93fbcde33dd655" translate="yes" xml:space="preserve">
          <source>To run our builder with the new target's default configuration, use the following CLI command in a Linux shell.</source>
          <target state="translated">要使用新目标的默认配置运行我们的构建器,在Linux shell中使用以下CLI命令。</target>
        </trans-unit>
        <trans-unit id="0fde64751caa86a1be2593adb8f8b511a7f690bd" translate="yes" xml:space="preserve">
          <source>To run the dev server with this proxy configuration, call &lt;code&gt;ng serve&lt;/code&gt;.</source>
          <target state="translated">要使用此代理配置运行开发服务器，请调用 &lt;code&gt;ng serve&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a927d68bbfb0db6ef570d00d34818dc1e9fa2fda" translate="yes" xml:space="preserve">
          <source>To see &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; examples with different form control types, see:</source>
          <target state="translated">要查看具有不同表单控件类型的 &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; 示例，请参见：</target>
        </trans-unit>
        <trans-unit id="8dc5a6c3881a1c518a3093382f57be5a945c82be" translate="yes" xml:space="preserve">
          <source>To see attribute, class, and style bindings in a functioning app, see the  especially for this section.</source>
          <target state="translated">要想在运行中的应用程序中看到属性、类和样式绑定,请看本节的特别说明。</target>
        </trans-unit>
        <trans-unit id="2066c3f9e99ddeda033de3aa56599325b3da329c" translate="yes" xml:space="preserve">
          <source>To see attributes versus DOM properties in a functioning app, see the  especially for binding syntax.</source>
          <target state="translated">要查看功能应用中的属性与DOM属性,请看特别是绑定语法。</target>
        </trans-unit>
        <trans-unit id="1d7d156616f25e6db5028a775121a671a84735d4" translate="yes" xml:space="preserve">
          <source>To see how the classes are added and removed by the framework, open the browser's developer tools and inspect the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element that represents the hero name.</source>
          <target state="translated">要查看框架如何添加和删除类，请打开浏览器的开发人员工具，并检查代表英雄名称的 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="cd33799f99a3c33eec695a0b9c438c5302870973" translate="yes" xml:space="preserve">
          <source>To see it again, or to test after working in the project, clear everything out by clicking the circle with a line through it in the upper left of the Network Tab:</source>
          <target state="translated">要想再次看到它,或者在项目中工作后进行测试,请点击网络选项卡左上角有一条线穿过的圆圈,将所有内容清除。</target>
        </trans-unit>
        <trans-unit id="b8edcb73a089af2f51a98af2512826e990b45344" translate="yes" xml:space="preserve">
          <source>To see the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; working, you can add the following to the parent's template:</source>
          <target state="translated">要查看 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 工作原理，可以将以下内容添加到父级的模板中：</target>
        </trans-unit>
        <trans-unit id="ee06c99b240c3cdf0c41541163f7f2fc33c71e72" translate="yes" xml:space="preserve">
          <source>To see the &lt;code&gt;disabled&lt;/code&gt; button example in a functioning app, see the  especially for binding syntax. This example shows you how to toggle the disabled property from the component.</source>
          <target state="translated">要在功能正常的应用程序中查看 &lt;code&gt;disabled&lt;/code&gt; 按钮的示例，请参阅特别说明绑定语法。本示例说明如何从组件切换禁用属性。</target>
        </trans-unit>
        <trans-unit id="3c298523d5d662629912091f2a811ab71db25f4f" translate="yes" xml:space="preserve">
          <source>To see the difference between using &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;, add another component to the example and call it &lt;code&gt;InspectorComponent&lt;/code&gt;. &lt;code&gt;InspectorComponent&lt;/code&gt; will be a child of the &lt;code&gt;ChildComponent&lt;/code&gt;. In &lt;code&gt;inspector.component.ts&lt;/code&gt;, inject the &lt;code&gt;FlowerService&lt;/code&gt; and &lt;code&gt;AnimalService&lt;/code&gt; in the constructor:</source>
          <target state="translated">要查看使用 &lt;code&gt;providers&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 的区别，请在示例中添加另一个组件，并将其命名为 &lt;code&gt;InspectorComponent&lt;/code&gt; 。 &lt;code&gt;InspectorComponent&lt;/code&gt; 将是 &lt;code&gt;ChildComponent&lt;/code&gt; 的子级。在 &lt;code&gt;inspector.component.ts&lt;/code&gt; 中，将 &lt;code&gt;FlowerService&lt;/code&gt; 和 &lt;code&gt;AnimalService&lt;/code&gt; 注入构造函数中：</target>
        </trans-unit>
        <trans-unit id="e9f41061551c1e503e601101ecf2720e11a2979b" translate="yes" xml:space="preserve">
          <source>To see the difference between using &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;viewProviders&lt;/code&gt;, add another component to the example and call it &lt;code&gt;InspectorComponent&lt;/code&gt;. &lt;code&gt;InspectorComponent&lt;/code&gt; will be a child of the &lt;code&gt;ChildComponent&lt;/code&gt;. In &lt;code&gt;inspector.component.ts&lt;/code&gt;, inject the &lt;code&gt;FlowerService&lt;/code&gt; and &lt;code&gt;AnimalService&lt;/code&gt; in the constructor:</source>
          <target state="translated">要查看使用 &lt;code&gt;providers&lt;/code&gt; 和 &lt;code&gt;viewProviders&lt;/code&gt; 的区别，请在示例中添加另一个组件，并将其命名为 &lt;code&gt;InspectorComponent&lt;/code&gt; 。 &lt;code&gt;InspectorComponent&lt;/code&gt; 将是 &lt;code&gt;ChildComponent&lt;/code&gt; 的子级。在 &lt;code&gt;inspector.component.ts&lt;/code&gt; 中，将 &lt;code&gt;FlowerService&lt;/code&gt; 和 &lt;code&gt;AnimalService&lt;/code&gt; 注入构造函数中：</target>
        </trans-unit>
        <trans-unit id="7426a6c423585d610bffc9572304cb82a2152a88" translate="yes" xml:space="preserve">
          <source>To see the error, open the browser development tools and look in the console for a message like</source>
          <target state="translated">要查看错误,请打开浏览器开发工具,并在控制台中查找类似以下的信息</target>
        </trans-unit>
        <trans-unit id="f73daa4c6554c2966552e22cb0bf684bb0109fbc" translate="yes" xml:space="preserve">
          <source>To see the new &quot;Buy&quot; button, refresh the application and click on a product's name to display its details.</source>
          <target state="translated">要看到新的 &quot;购买 &quot;按钮,请刷新应用程序并点击产品名称以显示其详细信息。</target>
        </trans-unit>
        <trans-unit id="5f23726a83ac2bd2efd5087ef3b709a56d3f0856" translate="yes" xml:space="preserve">
          <source>To see the new cart component, click the &quot;Checkout&quot; button. You can see the &quot;cart works!&quot; default text, and the URL has the pattern &lt;code&gt;https://getting-started.stackblitz.io/cart&lt;/code&gt;, where &lt;code&gt;getting-started.stackblitz.io&lt;/code&gt; may be different for your StackBlitz project.</source>
          <target state="translated">要查看新的购物车组件，请单击&amp;ldquo;结帐&amp;rdquo;按钮。您可以看到&amp;ldquo;购物车！&amp;rdquo; 默认的文本，以及URL有图案 &lt;code&gt;https://getting-started.stackblitz.io/cart&lt;/code&gt; ，其中 &lt;code&gt;getting-started.stackblitz.io&lt;/code&gt; 可能是您的StackBlitz项目不同。</target>
        </trans-unit>
        <trans-unit id="c61ac58ea53a8acce49524c72714aac95d91562d" translate="yes" xml:space="preserve">
          <source>To see the progress bar in a working example app, refer to the live example.</source>
          <target state="translated">要查看工作示例应用程序中的进度条,请参考现场示例。</target>
        </trans-unit>
        <trans-unit id="51762df269fa74951660bcc92b3a1d8f604aa3bc" translate="yes" xml:space="preserve">
          <source>To see this HTML in the &lt;code&gt;AppComponent&lt;/code&gt;, you first have to export the &lt;code&gt;CustomerDashboardComponent&lt;/code&gt; in the &lt;code&gt;CustomerDashboardModule&lt;/code&gt;. In &lt;code&gt;customer-dashboard.module.ts&lt;/code&gt;, just beneath the &lt;code&gt;declarations&lt;/code&gt; array, add an &lt;code&gt;exports&lt;/code&gt; array containing &lt;code&gt;CustomerDashboardComponent&lt;/code&gt;:</source>
          <target state="translated">要在 &lt;code&gt;AppComponent&lt;/code&gt; 中查看此HTML ，首先必须在 &lt;code&gt;CustomerDashboardComponent&lt;/code&gt; 中导出 &lt;code&gt;CustomerDashboardModule&lt;/code&gt; 。在 &lt;code&gt;customer-dashboard.module.ts&lt;/code&gt; 中，在 &lt;code&gt;declarations&lt;/code&gt; 数组下面，添加一个包含 &lt;code&gt;CustomerDashboardComponent&lt;/code&gt; 的 &lt;code&gt;exports&lt;/code&gt; 数组：</target>
        </trans-unit>
        <trans-unit id="a7f192efea8de2bd06b45b2f3bf2d52e4f1a15ca" translate="yes" xml:space="preserve">
          <source>To see this in action, make a small change to &lt;code&gt;app.component.ts&lt;/code&gt; and save. The tests run again, the browser refreshes, and the new test results appear.</source>
          <target state="translated">要实际执行此操作，请对 &lt;code&gt;app.component.ts&lt;/code&gt; 进行少量更改并保存。测试再次运行，浏览器刷新，并显示新的测试结果。</target>
        </trans-unit>
        <trans-unit id="259f775be5923c9da2e22cf62bebce4455141afc" translate="yes" xml:space="preserve">
          <source>To see this in code, assume that the following value for &lt;code&gt;emoji&lt;/code&gt; is what the parent component were using, as in this service:</source>
          <target state="translated">要在代码中看到这一点，请假定 &lt;code&gt;emoji&lt;/code&gt; 的以下值是父组件正在使用的值，如本服务所示：</target>
        </trans-unit>
        <trans-unit id="313d4c9e867864b90c0aa8a60f26818055d0d0a2" translate="yes" xml:space="preserve">
          <source>To see which browsers are supported and determine which settings meet to your browser support requirements, see the &lt;a href=&quot;https://browserl.ist/?q=%3E+0.5%25%2C+last+2+versions%2C+Firefox+ESR%2C+not+dead%2C+not+IE+9-11&quot;&gt;Browserslist compatibility page&lt;/a&gt;.</source>
          <target state="translated">要查看支持哪些浏览器并确定满足您的浏览器支持要求的设置，请参阅&lt;a href=&quot;https://browserl.ist/?q=%3E+0.5%25%2C+last+2+versions%2C+Firefox+ESR%2C+not+dead%2C+not+IE+9-11&quot;&gt;Browserslist兼容性页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0b5f297034732e98b08f028549d29a0bc5b1e6b" translate="yes" xml:space="preserve">
          <source>To see which browsers are supported with the above configuration, see which settings meet to your browser support requirements, see the &lt;a href=&quot;https://browserl.ist/?q=%3E+0.5%25%2C+last+2+versions%2C+Firefox+ESR%2C+not+dead%2C+not+IE+9-11&quot;&gt;Browserslist compatibility page&lt;/a&gt;.</source>
          <target state="translated">要查看以上配置支持哪些浏览器，请查看哪些设置符合您的浏览器支持要求，请参阅&lt;a href=&quot;https://browserl.ist/?q=%3E+0.5%25%2C+last+2+versions%2C+Firefox+ESR%2C+not+dead%2C+not+IE+9-11&quot;&gt;Browserslist兼容性页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2aecb05bd9c819562cf2d14d979e8185016e3fb1" translate="yes" xml:space="preserve">
          <source>To see your app in the browser so far, enter the following command in the terminal window:</source>
          <target state="translated">要想在浏览器中看到你的应用程序到目前为止,在终端窗口中输入以下命令。</target>
        </trans-unit>
        <trans-unit id="0168972e648316f2f298a0e543248db30d7052e5" translate="yes" xml:space="preserve">
          <source>To select the styles within the component, add a &lt;code&gt;styles&lt;/code&gt; property to the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator that contains the styles you want to use.</source>
          <target state="translated">要选择组件中的 &lt;code&gt;styles&lt;/code&gt; ，请将一个styles属性添加到 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 装饰器中，该装饰器包含要使用的样式。</target>
        </trans-unit>
        <trans-unit id="885269644ec508e0ea2156adee77813993bb242f" translate="yes" xml:space="preserve">
          <source>To serve the directory containing your web files with &lt;code&gt;http-server&lt;/code&gt;, run the following command:</source>
          <target state="translated">要使用 &lt;code&gt;http-server&lt;/code&gt; 为包含Web文件的目录提供服务，请运行以下命令：</target>
        </trans-unit>
        <trans-unit id="5ed3709eb5f5a055a34096a95375f8c97670231b" translate="yes" xml:space="preserve">
          <source>To set a property of a directive, place the directive within square brackets , such as &lt;code&gt;[&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;]&lt;/code&gt;, followed by an equal sign and the property. Here, the property is &lt;code&gt;classes&lt;/code&gt;.</source>
          <target state="translated">要设置指令的属性，请将指令放在方括号内，例如 &lt;code&gt;[&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;]&lt;/code&gt; ，后跟等号和该属性。在这里，属性是 &lt;code&gt;classes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c073e0977df21697005c90ce800e73a2b92cb98" translate="yes" xml:space="preserve">
          <source>To set the components encapsulation mode, use the &lt;code&gt;encapsulation&lt;/code&gt; property in the component metadata:</source>
          <target state="translated">要设置组件封装模式，请使用组件元数据中的 &lt;code&gt;encapsulation&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="7d43a0bd727324080ea5709ed75d717fa991dc17" translate="yes" xml:space="preserve">
          <source>To set the model property of a custom component, place the target, here &lt;code&gt;childItem&lt;/code&gt;, between square brackets &lt;code&gt;[]&lt;/code&gt; followed by an equal sign and the property. Here, the property is &lt;code&gt;parentItem&lt;/code&gt;.</source>
          <target state="translated">要设置自定义组件的模型属性，请将目标（此处为 &lt;code&gt;childItem&lt;/code&gt; )放置在方括号 &lt;code&gt;[]&lt;/code&gt; 和后跟等号与该属性之间。在这里，该属性是 &lt;code&gt;parentItem&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3758c4ecb4f9914c32c58041e427ee3538c11cd2" translate="yes" xml:space="preserve">
          <source>To set up a monorepo workspace, you should skip the creating the root application. See &lt;a href=&quot;file-structure#multiple-projects&quot;&gt;Setting up for a multi-project workspace&lt;/a&gt; below.</source>
          <target state="translated">要设置monorepo工作区，应跳过创建根应用程序的过程。请参阅下面的&lt;a href=&quot;file-structure#multiple-projects&quot;&gt;为多项目工作区进行设置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17ba6dfedabd7c2dcc203b83d60567d69a920bd6" translate="yes" xml:space="preserve">
          <source>To set up a redirect, configure a route with the &lt;code&gt;path&lt;/code&gt; you want to redirect from, the &lt;code&gt;component&lt;/code&gt; you want to redirect to, and a &lt;code&gt;pathMatch&lt;/code&gt; value that tells the router how to match the URL.</source>
          <target state="translated">要设置重定向，请使用您要重定向的 &lt;code&gt;path&lt;/code&gt; ，要重定向到的 &lt;code&gt;component&lt;/code&gt; 以及一个告诉路由器如何匹配URL的 &lt;code&gt;pathMatch&lt;/code&gt; 值来配置路由。</target>
        </trans-unit>
        <trans-unit id="87160d640bd0df010d3acad99e9a90a16c40fa62" translate="yes" xml:space="preserve">
          <source>To set up a wildcard route, add the following code to your &lt;code&gt;routes&lt;/code&gt; definition.</source>
          <target state="translated">要设置通配符路由，请将以下代码添加到您的 &lt;code&gt;routes&lt;/code&gt; 定义中。</target>
        </trans-unit>
        <trans-unit id="d47642c5fa808e4e1650b0efd2f81da7bfc8bfcf" translate="yes" xml:space="preserve">
          <source>To set up the Angular service worker in your project, use the CLI &lt;code&gt;add&lt;/code&gt; command.</source>
          <target state="translated">要在项目中设置Angular Service Worker，请使用CLI &lt;code&gt;add&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="7d4bc7469b3a5e6cf5c595d20bd4518bf745d39d" translate="yes" xml:space="preserve">
          <source>To set up the Angular service worker in your project, use the CLI command &lt;code&gt;ng add @angular/pwa&lt;/code&gt;. It takes care of configuring your app to use service workers by adding the &lt;code&gt;service-worker&lt;/code&gt; package along with setting up the necessary support files.</source>
          <target state="translated">要在您的项目中设置Angular服务工作者，请使用CLI命令 &lt;code&gt;ng add @angular/pwa&lt;/code&gt; 。通过添加 &lt;code&gt;service-worker&lt;/code&gt; 软件包以及设置必要的支持文件，它可以将您的应用配置为使用服务工作者。</target>
        </trans-unit>
        <trans-unit id="8dc80e025131d2a69acf3fb7e053f667fec10a2e" translate="yes" xml:space="preserve">
          <source>To set up the Getting Started files with an &lt;strong&gt;ASP.NET 4.x project&lt;/strong&gt; in Visual Studio 2015, follow these steps:</source>
          <target state="translated">要在Visual Studio 2015中使用&lt;strong&gt;ASP.NET 4.x项目&lt;/strong&gt;设置入门文件，请按照下列步骤操作：</target>
        </trans-unit>
        <trans-unit id="de142fa8fc921e821213670b35614aa8b3250c8c" translate="yes" xml:space="preserve">
          <source>To set up the component after Angular sets the input properties.</source>
          <target state="translated">要在Angular设置输入属性后,对组件进行设置。</target>
        </trans-unit>
        <trans-unit id="e1f243210a5ae29b5fc9889478313e44836e9435" translate="yes" xml:space="preserve">
          <source>To set up your development environment, follow the instructions in &lt;a href=&quot;../guide/setup-local&quot;&gt;Local Environment Setup&lt;/a&gt;.</source>
          <target state="translated">要设置您的开发环境，请遵循&amp;ldquo; &lt;a href=&quot;../guide/setup-local&quot;&gt;本地环境设置&amp;rdquo;中&lt;/a&gt;的说明。</target>
        </trans-unit>
        <trans-unit id="55a75d1552367c5e1de12884866f853585f7045d" translate="yes" xml:space="preserve">
          <source>To show a response to form submission, you can hide the data entry area and display something else in its place.</source>
          <target state="translated">为了显示表单提交的响应,你可以隐藏数据输入区域,并在其位置上显示其他东西。</target>
        </trans-unit>
        <trans-unit id="2e5b11e822500092ff12f34d510eb08a95feb8aa" translate="yes" xml:space="preserve">
          <source>To show how Angular calls the hooks in the expected order, the &lt;code&gt;PeekABooComponent&lt;/code&gt; demonstrates all of the hooks in one component.</source>
          <target state="translated">为了显示Angular如何按预期顺序调用钩子， &lt;code&gt;PeekABooComponent&lt;/code&gt; 演示了一个组件中的所有钩子。</target>
        </trans-unit>
        <trans-unit id="2bb411516c904297b7758e27653c5476ac34dcac" translate="yes" xml:space="preserve">
          <source>To show something else while the form is in the submitted state, add the following HTML below the new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; wrapper.</source>
          <target state="translated">要在表单处于提交状态时显示其他内容，请在新的 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 包装器下面添加以下HTML 。</target>
        </trans-unit>
        <trans-unit id="85c6814e145f8869d0c23c45827073818298e9fc" translate="yes" xml:space="preserve">
          <source>To simplify the Angular mental model and learning journey, we&amp;rsquo;ll be working on making NgModules optional. This work will allow developers to develop standalone components and implement an alternative API for declaring the component&amp;rsquo;s compilation scope.</source>
          <target state="translated">为了简化Angular思维模型和学习过程，我们将努力使NgModules成为可选的。这项工作将使开发人员能够开发独立的组件并实现用于声明组件的编译范围的替代API。</target>
        </trans-unit>
        <trans-unit id="e19731bed4fa9ad865f132552125887ef1add447" translate="yes" xml:space="preserve">
          <source>To simplify the writing process for contributing authors. This guide helps you make decisions about tone, voice, and style. It also helps you find the right markup quickly.</source>
          <target state="translated">为了简化投稿作者的写作过程。本指南可以帮助你做出有关语气、声音和风格的决定。它还能帮助你快速找到合适的标记。</target>
        </trans-unit>
        <trans-unit id="367649fb6abb3b384169647dba62b78e8155b4e1" translate="yes" xml:space="preserve">
          <source>To simulate a network issue, disable network interaction for your application. In Chrome:</source>
          <target state="translated">要模拟网络问题,请为您的应用程序禁用网络交互。在Chrome浏览器中。</target>
        </trans-unit>
        <trans-unit id="f88ded5fc1c640f4a2bd9755a49fe8b90817554c" translate="yes" xml:space="preserve">
          <source>To simulate user input, you can find the input element and set its &lt;code&gt;value&lt;/code&gt; property.</source>
          <target state="translated">为了模拟用户输入，您可以找到输入元素并设置其 &lt;code&gt;value&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="740da28ed7f431cf8963e67cef151e88bd5e2bbf" translate="yes" xml:space="preserve">
          <source>To skip the download link, add the &lt;code&gt;noDownload&lt;/code&gt; attribute.</source>
          <target state="translated">要跳过下载链接，请添加 &lt;code&gt;noDownload&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="966fbbefbe372b65e80303ab34559f1ffc260f0b" translate="yes" xml:space="preserve">
          <source>To skip the live Stackblitz link and only link to the download, add the &lt;code&gt;downloadOnly&lt;/code&gt; attribute.</source>
          <target state="translated">要跳过实时Stackblitz链接并仅链接到下载，请添加 &lt;code&gt;downloadOnly&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="29494e913f1a0369be80f182fabb95c5657eb764" translate="yes" xml:space="preserve">
          <source>To specify a component's selector, add a &lt;code&gt;selector&lt;/code&gt; statement to the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">要指定组件的选择器，请将 &lt;code&gt;selector&lt;/code&gt; 语句添加到 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 装饰器中。</target>
        </trans-unit>
        <trans-unit id="db1413d1ae3c4ee0a501b822d414f2ad1d34357e" translate="yes" xml:space="preserve">
          <source>To specify a relative route, use the &lt;code&gt;&lt;a href=&quot;../api/router/navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt;&lt;code&gt;relativeTo&lt;/code&gt; property. In the component class, import &lt;code&gt;&lt;a href=&quot;../api/router/navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/router&lt;/code&gt;.</source>
          <target state="translated">要指定相对路线，请使用 &lt;code&gt;&lt;a href=&quot;../api/router/navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt; &lt;code&gt;relativeTo&lt;/code&gt; 属性。在组件类中，从 &lt;code&gt;@angular/router&lt;/code&gt; 导入 &lt;code&gt;&lt;a href=&quot;../api/router/navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8731b4e458c672aaa52607bacd794fdaab471d5" translate="yes" xml:space="preserve">
          <source>To specify a value transformation in an HTML template, use the &lt;a href=&quot;template-expression-operators#pipe&quot;&gt;pipe operator (|)&lt;/a&gt;.</source>
          <target state="translated">要在HTML模板中指定值转换，请使用&lt;a href=&quot;template-expression-operators#pipe&quot;&gt;管道运算符（|）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab87060eaf2297eb5463559b81f0a81cc8881cda" translate="yes" xml:space="preserve">
          <source>To specify a value transformation in an HTML template, use the &lt;a href=&quot;template-syntax#pipe&quot;&gt;pipe operator (|)&lt;/a&gt;.</source>
          <target state="translated">要在HTML模板中指定值转换，请使用&lt;a href=&quot;template-syntax#pipe&quot;&gt;管道运算符（|）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c26bd8dbf7d5d26bb6a0711698f315370497669" translate="yes" xml:space="preserve">
          <source>To specify offset styles to be applied at a later time, define steps with &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt;, or use &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; calls with a delay value. For example:</source>
          <target state="translated">要指定稍后要应用的偏移样式，请使用 &lt;code&gt;&lt;a href=&quot;keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; 定义步骤，或使用具有延迟值的 &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 调用。例如：</target>
        </trans-unit>
        <trans-unit id="098c0b9849214a70fc7726b8c68b61855e17df7b" translate="yes" xml:space="preserve">
          <source>To specify the response object type, first define an interface with the required properties. (Use an interface rather than a class; a response cannot be automatically converted to an instance of a class.)</source>
          <target state="translated">要指定响应对象类型,首先要定义一个具有所需属性的接口(使用接口而不是类;响应不能自动转换为类的实例)。使用接口而不是类;响应不能自动转换为类的实例)。</target>
        </trans-unit>
        <trans-unit id="0c4feee65eebb074487af0d268f0a2b8a6b99056" translate="yes" xml:space="preserve">
          <source>To specify the response object type, first define an interface with the required properties. Use an interface rather than a class, because the response is a plain object that cannot be automatically converted to an instance of a class.</source>
          <target state="translated">要指定响应对象类型,首先定义一个具有所需属性的接口。使用接口而不是类,因为响应是一个普通对象,不能自动转换为类的实例。</target>
        </trans-unit>
        <trans-unit id="dde8a2ef8d669c63a62cff50f1d6396d1cb88adf" translate="yes" xml:space="preserve">
          <source>To start a collection, you need to create the schematic files. The following steps show you how to add initial support without modifying any project files.</source>
          <target state="translated">要启动一个集合,您需要创建原理图文件。下面的步骤告诉您如何在不修改任何项目文件的情况下添加初始支持。</target>
        </trans-unit>
        <trans-unit id="675df4470cdabe4f5cbe7c6f1ee4baa2a9761571" translate="yes" xml:space="preserve">
          <source>To start a new project with Ivy enabled, use the &lt;code&gt;--enable-ivy&lt;/code&gt; flag with the &lt;a href=&quot;cli/new&quot;&gt;&lt;code&gt;ng new&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="translated">要启动启用了Ivy的新项目，请在&lt;a href=&quot;cli/new&quot;&gt; &lt;code&gt;ng new&lt;/code&gt; &lt;/a&gt;命令中使用 &lt;code&gt;--enable-ivy&lt;/code&gt; 标志：</target>
        </trans-unit>
        <trans-unit id="cc42865ce59ef8db7b918c51096cb7b9d9d767ba" translate="yes" xml:space="preserve">
          <source>To start rendering your app with Universal on your local system, use the following command.</source>
          <target state="translated">要在本地系统上使用 Universal 开始渲染应用程序,请使用以下命令。</target>
        </trans-unit>
        <trans-unit id="e1c7b5759322bd72b7a70ff587712b48f2342170" translate="yes" xml:space="preserve">
          <source>To stop using the Ivy compiler, set &lt;code&gt;enableIvy&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;tsconfig.app.json&lt;/code&gt;, or remove it completely. Also remove &lt;code&gt;&quot;aot&quot;: true&lt;/code&gt; from your default build options if you didn't have it there before.</source>
          <target state="translated">要停止使用常春藤编译器，设置 &lt;code&gt;enableIvy&lt;/code&gt; 以 &lt;code&gt;false&lt;/code&gt; 的 &lt;code&gt;tsconfig.app.json&lt;/code&gt; ，或者完全删除。如果以前没有，请从默认构建选项中删除 &lt;code&gt;&quot;aot&quot;: true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3c09441693602ca793b2b01b4f9af8a0248fabc" translate="yes" xml:space="preserve">
          <source>To streamline the syntax, the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; directive hides the details behind its own &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; input and &lt;code&gt;ngModelChange&lt;/code&gt; output properties:</source>
          <target state="translated">为了简化语法， &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 指令将详细信息隐藏在其自己的 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 输入和 &lt;code&gt;ngModelChange&lt;/code&gt; 输出属性的后面：</target>
        </trans-unit>
        <trans-unit id="39b4d5704426ff8a7639bccde11ece39d8b3aeb6" translate="yes" xml:space="preserve">
          <source>To subscribe, call &lt;code&gt;&lt;a href=&quot;swpush#requestSubscription&quot;&gt;SwPush.requestSubscription()&lt;/a&gt;&lt;/code&gt;, which asks the user for permission. The call returns a &lt;code&gt;Promise&lt;/code&gt; with a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription&quot;&gt;&lt;code&gt;PushSubscription&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">要进行订阅，请调用 &lt;code&gt;&lt;a href=&quot;swpush#requestSubscription&quot;&gt;SwPush.requestSubscription()&lt;/a&gt;&lt;/code&gt; ，以询问用户权限。该调用返回带有新的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PushSubscription&quot;&gt; &lt;code&gt;PushSubscription&lt;/code&gt; &lt;/a&gt;实例的 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="091932076ef13bad443c5e0beaa6885505ec5895" translate="yes" xml:space="preserve">
          <source>To summarize, Angular found the &lt;code&gt;appHighlight&lt;/code&gt; attribute on the &lt;strong&gt;host&lt;/strong&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element. It created an instance of the &lt;code&gt;HighlightDirective&lt;/code&gt; class and injected a reference to the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element into the directive's constructor which sets the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element's background style to yellow.</source>
          <target state="translated">总而言之，Angular 在&lt;strong&gt;主机&lt;/strong&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 元素上找到了 &lt;code&gt;appHighlight&lt;/code&gt; 属性。它创建了 &lt;code&gt;HighlightDirective&lt;/code&gt; 类的实例，并将对 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 元素的引用注入到指令的构造函数中，该构造函数将 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 元素的背景样式设置为黄色。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cff6b03d8e8d8fe2f524818030a80391b717264" translate="yes" xml:space="preserve">
          <source>To summarize, if you mutate the input array, the pure pipe doesn't execute. If you &lt;em&gt;replace&lt;/em&gt; the input array, the pipe executes and the display is updated, as shown in Figure 4.</source>
          <target state="translated">总而言之，如果您对输入数组进行了变异，那么纯管道将不会执行。如果&lt;em&gt;替换&lt;/em&gt;输入数组，则执行管道并更新显示，如图4所示。</target>
        </trans-unit>
        <trans-unit id="fe4b6b798619064feab05be7c141408b9ecfad03" translate="yes" xml:space="preserve">
          <source>To summarize, the key differentiating factors of &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; are:</source>
          <target state="translated">总而言之， &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 的主要区别因素是：</target>
        </trans-unit>
        <trans-unit id="575255fb464fe00729396b1d3b2c2522b401ddfd" translate="yes" xml:space="preserve">
          <source>To summarize, the lightweight injection token pattern consists of the following.</source>
          <target state="translated">综上所述,轻量级注入令牌模式包括以下内容。</target>
        </trans-unit>
        <trans-unit id="b52ca2d96bdaaa3cfb5379f6156241ff261b361a" translate="yes" xml:space="preserve">
          <source>To support these behaviors, the Angular service worker loads a &lt;em&gt;manifest&lt;/em&gt; file from the server. The manifest describes the resources to cache and includes hashes of every file's contents. When an update to the application is deployed, the contents of the manifest change, informing the service worker that a new version of the application should be downloaded and cached. This manifest is generated from a CLI-generated configuration file called &lt;code&gt;ngsw-config.json&lt;/code&gt;.</source>
          <target state="translated">为了支持这些行为，Angular服务工作者从服务器加载&lt;em&gt;清单&lt;/em&gt;文件。清单描述了要缓存的资源，并包含每个文件内容的哈希值。部署对应用程序的更新后，清单的内容将更改，从而通知服务工作者应下载并缓存应用程序的新版本。此清单由CLI生成的名为 &lt;code&gt;ngsw-config.json&lt;/code&gt; 的配置文件生成。</target>
        </trans-unit>
        <trans-unit id="c4ca653d202193362f15dba2ff3cfc4b0025739a" translate="yes" xml:space="preserve">
          <source>To systematically block XSS bugs, Angular treats all values as untrusted by default. When a value is inserted into the DOM from a template, via property, attribute, style, class binding, or interpolation, Angular sanitizes and escapes untrusted values.</source>
          <target state="translated">为了系统性地阻断XSS漏洞,Angular默认将所有的值都视为不可信任的。当一个值从模板插入到DOM中时,通过属性、属性、样式、类绑定或插值,Angular会对不信任的值进行净化和逃逸。</target>
        </trans-unit>
        <trans-unit id="0970ae1882f15ce0c665008456cc372de2ce2cb1" translate="yes" xml:space="preserve">
          <source>To take advantage of Angular's localization features, use the Angular CLI to add the &lt;code&gt;@angular/localize&lt;/code&gt; package to your project:</source>
          <target state="translated">要利用Angular的本地化功能，请使用Angular CLI将 &lt;code&gt;@angular/localize&lt;/code&gt; 包添加到您的项目中：</target>
        </trans-unit>
        <trans-unit id="5c2d8661b5b005891a1e25d985a1673afb599e07" translate="yes" xml:space="preserve">
          <source>To take advantage of this, your server needs to set a token in a JavaScript readable session cookie called &lt;code&gt;XSRF-TOKEN&lt;/code&gt; on either the page load or the first GET request. On subsequent requests the server can verify that the cookie matches the &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; HTTP header, and therefore be sure that only code running on your domain could have sent the request. The token must be unique for each user and must be verifiable by the server; this prevents the client from making up its own tokens. Set the token to a digest of your site's authentication cookie with a salt for added security.</source>
          <target state="translated">要利用此优势，您的服务器需要在页面加载或第一个GET请求上的名为 &lt;code&gt;XSRF-TOKEN&lt;/code&gt; 的JavaScript可读会话cookie中设置令牌。在后续请求中，服务器可以验证cookie是否与 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; HTTP标头匹配，因此，请确保只有在您的域上运行的代码才可以发送请求。令牌对于每个用户必须是唯一的，并且必须可由服务器验证；这样可以防止客户端伪造自己的令牌。将令牌设置为站点的身份验证Cookie的摘要，并添加盐以增强安全性。</target>
        </trans-unit>
        <trans-unit id="a2c3396ff07cb76eb004b09abd2396aa4cfc57b5" translate="yes" xml:space="preserve">
          <source>To take this example a little further, we can create an observable that publishes events. In this example, the subscriber function is defined inline.</source>
          <target state="translated">为了进一步推进这个例子,我们可以创建一个发布事件的观测器。在这个例子中,订阅者函数是内联定义的。</target>
        </trans-unit>
        <trans-unit id="33b81c4efe4680114d1f1e1f01d20fc61854d427" translate="yes" xml:space="preserve">
          <source>To tell Angular that this is a pipe, you apply the &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; decorator, which you import from the core Angular library.</source>
          <target state="translated">要告诉Angular这是一个管道，可以应用 &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; 装饰器，该装饰器是从Angular核心库中导入的。</target>
        </trans-unit>
        <trans-unit id="d69f6b79976daa71b140336b6e0fc275fb2a4a15" translate="yes" xml:space="preserve">
          <source>To tell that story in code, you'll often need to create partial files or intermediate versions of the final source code file with fragments of code that don't appear in the final app.</source>
          <target state="translated">为了在代码中讲述这个故事,你经常需要创建部分文件或最终源代码文件的中间版本,其中的代码片段不会出现在最终的应用程序中。</target>
        </trans-unit>
        <trans-unit id="41ed9ac99a1093b2313ac001a60efb09be984be6" translate="yes" xml:space="preserve">
          <source>To test a service, you set the &lt;code&gt;providers&lt;/code&gt; metadata property with an array of the services that you'll test or mock.</source>
          <target state="translated">要测试服务，请使用要测试或模拟的服务数组设置 &lt;code&gt;providers&lt;/code&gt; 元数据属性。</target>
        </trans-unit>
        <trans-unit id="0689818deab6829bbe840e4c6eba2a40a2aa0140" translate="yes" xml:space="preserve">
          <source>To test this feature, add a button with a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;HeroListComponent&lt;/code&gt; template and set the link to &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt;.</source>
          <target state="translated">要测试此功能，请将带有 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 的按钮添加到 &lt;code&gt;HeroListComponent&lt;/code&gt; 模板，并将链接设置为 &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="086adffe268f8dce593354324e40600580cf7306" translate="yes" xml:space="preserve">
          <source>To test this feature, add a button with a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;HeroListComponent&lt;/code&gt; template and set the link to a non-existant route called &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt;.</source>
          <target state="translated">要测试此功能，请将带有 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; 的按钮添加到 &lt;code&gt;HeroListComponent&lt;/code&gt; 模板，并将链接设置为不存在的名为 &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt; 路由。</target>
        </trans-unit>
        <trans-unit id="7320c49fd0ce558ab742e4ff66c77c68c95f961d" translate="yes" xml:space="preserve">
          <source>To toggle multiple styles, bind to the &lt;code&gt;[&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;]&lt;/code&gt; attribute&amp;mdash;for example, &lt;code&gt;[&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;]=&quot;styleExpression&quot;&lt;/code&gt;. The expression is often a string list of styles such as &lt;code&gt;&quot;width: 100px; height: 100px;&quot;&lt;/code&gt;.</source>
          <target state="translated">要切换多种样式，请绑定到 &lt;code&gt;[&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;]&lt;/code&gt; 属性，例如 &lt;code&gt;[&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;]=&quot;styleExpression&quot;&lt;/code&gt; 。该表达式通常是样式的字符串列表，例如 &lt;code&gt;&quot;width: 100px; height: 100px;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbaff2a55143998de029e9624fcc3a49f95854ff" translate="yes" xml:space="preserve">
          <source>To translate a &lt;code&gt;plural&lt;/code&gt;, translate its ICU format match values as shown in the following example:</source>
          <target state="translated">要转换 &lt;code&gt;plural&lt;/code&gt; ，请转换其ICU格式匹配值，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="ecc66d276b3225d15e06e1f1cf36defdf74d825a" translate="yes" xml:space="preserve">
          <source>To translate a &lt;code&gt;plural&lt;/code&gt;, translate its ICU format match values:</source>
          <target state="translated">要翻译 &lt;code&gt;plural&lt;/code&gt; ，请转换其ICU格式匹配值：</target>
        </trans-unit>
        <trans-unit id="885e91781ad354087c34588828548ccdfecdb432" translate="yes" xml:space="preserve">
          <source>To translate a text message accurately, the translator may need additional information or context.</source>
          <target state="translated">为了准确地翻译文本信息,译者可能需要额外的信息或背景。</target>
        </trans-unit>
        <trans-unit id="172f56dc7a62c0fc33b328b831a5d2dc62c6fd22" translate="yes" xml:space="preserve">
          <source>To translate a text message accurately, the translator may need additional information or context. Add a &lt;em&gt;description&lt;/em&gt; of the text message as the value of the &lt;code&gt;i18n&lt;/code&gt; attribute, as shown in the following example:</source>
          <target state="translated">为了准确翻译文本消息，翻译者可能需要其他信息或上下文。添加文本消息的&lt;em&gt;描述&lt;/em&gt;作为 &lt;code&gt;i18n&lt;/code&gt; 属性的值，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="84fab147430f36a6aae6a95b3c0171b6285fbdd8" translate="yes" xml:space="preserve">
          <source>To translate your app's templates, you need to prepare the text for a translator or translation service by marking text, attributes, and other elements with the Angular &lt;code&gt;i18n&lt;/code&gt; attribute. Follow these general steps:</source>
          <target state="translated">要翻译应用程序的模板，您需要通过使用Angular &lt;code&gt;i18n&lt;/code&gt; 属性标记文本，属性和其他元素，为翻译或翻译服务准备文本。请遵循以下一般步骤：</target>
        </trans-unit>
        <trans-unit id="cef6e619ff20a5d2471097479db5a249a2c82f81" translate="yes" xml:space="preserve">
          <source>To turn off this feature, run the following command:</source>
          <target state="translated">要关闭此功能,请运行以下命令。</target>
        </trans-unit>
        <trans-unit id="ed33505f49ae41506ab117a8b63c6d0f85e67b26" translate="yes" xml:space="preserve">
          <source>To understand how the &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; influence service visibility differently, the following sections build a  step-by-step and compare the use of &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; in code and a logical tree.</source>
          <target state="translated">为了了解 &lt;code&gt;providers&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 如何不同地影响服务可见性，以下各节将逐步构建并比较代码和逻辑树中 &lt;code&gt;providers&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 的使用。</target>
        </trans-unit>
        <trans-unit id="bc3839460aa005395112dc40509f1898a17353cd" translate="yes" xml:space="preserve">
          <source>To understand how the &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;viewProviders&lt;/code&gt; influence service visibility differently, the following sections build a  step-by-step and compare the use of &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;viewProviders&lt;/code&gt; in code and a logical tree.</source>
          <target state="translated">为了了解 &lt;code&gt;providers&lt;/code&gt; 和 &lt;code&gt;viewProviders&lt;/code&gt; 如何不同地影响服务可见性，以下各节将逐步构建并比较代码和逻辑树中 &lt;code&gt;providers&lt;/code&gt; 和 &lt;code&gt;viewProviders&lt;/code&gt; 的使用。</target>
        </trans-unit>
        <trans-unit id="e455f448e2a323a0da868b3a43676c8335099bb2" translate="yes" xml:space="preserve">
          <source>To understand how to provide a service or other dependency for your app, see &lt;a href=&quot;providers&quot;&gt;Providing Dependencies for an NgModule&lt;/a&gt;.</source>
          <target state="translated">要了解如何为您的应用程序提供服务或其他依赖项，请参阅&lt;a href=&quot;providers&quot;&gt;为NgModule提供依赖项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3eebe2ea66d8dfa62e18d044bc45eab39aaad7bf" translate="yes" xml:space="preserve">
          <source>To update an existing project to use Ivy, set the &lt;code&gt;enableIvy&lt;/code&gt; option in the &lt;code&gt;angularCompilerOptions&lt;/code&gt; in your project's &lt;code&gt;tsconfig.app.json&lt;/code&gt;.</source>
          <target state="translated">要更新现有项目以使用Ivy， &lt;code&gt;angularCompilerOptions&lt;/code&gt; 在项目的 &lt;code&gt;tsconfig.app.json&lt;/code&gt; 中的angularCompilerOptions中设置 &lt;code&gt;enableIvy&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="1159153366a5b0bd61463f3e7587ba6f306a76ab" translate="yes" xml:space="preserve">
          <source>To update from one major version to another, use the format</source>
          <target state="translated">要从一个主要版本更新到另一个主要版本,请使用格式为</target>
        </trans-unit>
        <trans-unit id="b4726caf12aeeed22903d708d6fd9dcb3ab84cef" translate="yes" xml:space="preserve">
          <source>To update from one major version to another, use the format &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt; @angular/cli@^&amp;lt;major_version&amp;gt; @angular/core@^&amp;lt;major_version&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">要从一个主要版本更新到另一个主要版本，请使用 &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt; @angular/cli@^&amp;lt;major_version&amp;gt; @angular/core@^&amp;lt;major_version&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b123945947d8bf63fcbe7c6d93a368853a6bef1" translate="yes" xml:space="preserve">
          <source>To update the &lt;code&gt;name&lt;/code&gt; property, the changed text is retrieved by following the path &lt;code&gt;$event.target.value&lt;/code&gt;.</source>
          <target state="translated">要更新 &lt;code&gt;name&lt;/code&gt; 属性，请遵循路径 &lt;code&gt;$event.target.value&lt;/code&gt; 检索更改的文本。</target>
        </trans-unit>
        <trans-unit id="47a7e6bce5ac7a94a823063c0801c7a2556444a9" translate="yes" xml:space="preserve">
          <source>To update the hero form to be a reactive form, you can use some of the same built-in validators&amp;mdash;this time, in function form, as in the following example.</source>
          <target state="translated">要将Hero表单更新为反应形式，您可以使用一些相同的内置验证器-这次，以函数形式使用，如以下示例所示。</target>
        </trans-unit>
        <trans-unit id="e3daec1d373f17dce64b4434537727da04314427" translate="yes" xml:space="preserve">
          <source>To update the hero form to be a reactive form, you can use some of the same built-in validators&amp;mdash;this time, in function form. See below:</source>
          <target state="translated">要将英雄表格更新为反应形式，您可以使用某些相同的内置验证器，这一次是在函数形式中。见下文：</target>
        </trans-unit>
        <trans-unit id="4e65f7fd80bdb167ba344b15a71ebca3ea7cda71" translate="yes" xml:space="preserve">
          <source>To update to the next beta or pre-release version, use the &lt;code&gt;--next&lt;/code&gt; option.</source>
          <target state="translated">要更新到下一个Beta或预发行版本，请使用 &lt;code&gt;--next&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="ec580f157cda9cf0f0589f7bbc29f74d7bf8bf09" translate="yes" xml:space="preserve">
          <source>To update to the next beta or pre-release version, use the &lt;code&gt;--next=true&lt;/code&gt; option.</source>
          <target state="translated">要更新到下一个Beta或预发行版本，请使用 &lt;code&gt;--next=true&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="bbc501407156722afda3e86f40157fb7f056ade2" translate="yes" xml:space="preserve">
          <source>To update your apps:</source>
          <target state="translated">要更新您的应用程序。</target>
        </trans-unit>
        <trans-unit id="236685207dbef386199db70dbf04b0f668c3e20d" translate="yes" xml:space="preserve">
          <source>To update your code before support is removed, you'll want to decide whether to stick with reactive form directives (and get/set values using reactive forms patterns) or switch over to template-driven directives.</source>
          <target state="translated">要在支持被移除之前更新你的代码,你要决定是坚持使用反应式表单指令(并使用反应式表单模式获取/设置值)还是切换到模板驱动指令。</target>
        </trans-unit>
        <trans-unit id="8a839cde0f94f54c1db2fbd03e39cc0d94409768" translate="yes" xml:space="preserve">
          <source>To update your code before v7, you'll want to decide whether to stick with reactive form directives (and get/set values using reactive forms patterns) or switch over to template-driven directives.</source>
          <target state="translated">要在v7之前更新你的代码,你要决定是坚持使用反应式表单指令(并使用反应式表单模式获取/设置值)还是切换到模板驱动指令。</target>
        </trans-unit>
        <trans-unit id="f18488d2ffa521dc9c72e40ed167cd48cf4b0efb" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; functionality, you must import &lt;code&gt;zone.js/dist/zone-testing&lt;/code&gt; in your test setup file. If you created your project with the Angular CLI, &lt;code&gt;zone-testing&lt;/code&gt; is already imported in &lt;code&gt;src/test.ts&lt;/code&gt;.</source>
          <target state="translated">要使用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; 功能，必须在测试安装文件中导入 &lt;code&gt;zone.js/dist/zone-testing&lt;/code&gt; 。如果您使用Angular CLI创建了项目，则已经在 &lt;code&gt;src/test.ts&lt;/code&gt; 中导入了 &lt;code&gt;zone-testing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2482c9fc60deb6dca0d28b779cb8b73a4467b41" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; functionality, you must import &lt;code&gt;zone.js/dist/zone-testing&lt;/code&gt; in your test setup file. If you created your project with the Angular CLI, &lt;code&gt;zone-testing&lt;/code&gt; is already imported in &lt;code&gt;src/test.ts&lt;/code&gt;.</source>
          <target state="translated">要使用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; 功能，必须在测试安装文件中导入 &lt;code&gt;zone.js/dist/zone-testing&lt;/code&gt; 。如果您使用Angular CLI创建了项目，则已经在 &lt;code&gt;src/test.ts&lt;/code&gt; 中导入了 &lt;code&gt;zone-testing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcd9f0f5dc90f1dc24c2ca71efd33f0ee8fa954b" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; functionality, you must import &lt;code&gt;zone.js/dist/zone-testing&lt;/code&gt; in your test setup file. If you created your project with the Angular CLI, &lt;code&gt;zone-testing&lt;/code&gt; is already imported in &lt;code&gt;src/test.ts&lt;/code&gt;.</source>
          <target state="translated">要使用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; 功能，必须在测试安装文件中导入 &lt;code&gt;zone.js/dist/zone-testing&lt;/code&gt; 。如果您使用Angular CLI创建了项目，则已经在 &lt;code&gt;src/test.ts&lt;/code&gt; 中导入了 &lt;code&gt;zone-testing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="578a2f9ea1de8c97140bba989fef63c0e05d0b05" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;, you must configure the parent and child.</source>
          <target state="translated">要使用 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; ，必须配置父级和子级。</target>
        </trans-unit>
        <trans-unit id="497273ea5594306c8ea85ca98645f59289fab5d2" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;, you must configure the parent and child.</source>
          <target state="translated">要使用 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; ，必须配置父级和子级。</target>
        </trans-unit>
        <trans-unit id="4c5cd4c387b425279202e14518a4f13f588d38ae" translate="yes" xml:space="preserve">
          <source>To use AOT with a hybrid app, you have to first set it up like any other Angular application, as shown in &lt;a href=&quot;aot-compiler&quot;&gt;the Ahead-of-time Compilation chapter&lt;/a&gt;.</source>
          <target state="translated">要将AOT与混合应用程序一起使用，您必须首先像设置其他Angular应用程序一样对其进行设置，如&lt;a href=&quot;aot-compiler&quot;&gt;&amp;ldquo;提前编译&amp;rdquo;一章所示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc05bdf242df5c5e52a5f7713254718034ee591f" translate="yes" xml:space="preserve">
          <source>To use Bazel in a new application, first install &lt;code&gt;@angular/bazel&lt;/code&gt; globally</source>
          <target state="translated">要在新应用程序中使用Bazel， &lt;code&gt;@angular/bazel&lt;/code&gt; 全局安装@ angular / bazel</target>
        </trans-unit>
        <trans-unit id="c3f4f3cb1895e041269196b22d5a205a95c00cb5" translate="yes" xml:space="preserve">
          <source>To use CSS grid with IE10/11, you must explicitly enable it using the &lt;code&gt;autoplace&lt;/code&gt; option. To do this, add the following to the top of the global styles file (or within a specific css selector scope):</source>
          <target state="translated">要将CSS网格与IE10 / 11一起使用，必须使用 &lt;code&gt;autoplace&lt;/code&gt; 选项明确启用它。为此，请将以下内容添加到全局样式文件的顶部（或在特定的css选择器范围内）：</target>
        </trans-unit>
        <trans-unit id="adbc1c0149aa2c996df7fd94085915ea70c1dfcf" translate="yes" xml:space="preserve">
          <source>To use a select in a template-driven form, simply add an &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; and a &lt;code&gt;name&lt;/code&gt; attribute to the main &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">要以模板驱动的形式使用select，只需将 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 属性添加到主 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 标记中。</target>
        </trans-unit>
        <trans-unit id="1e2bb110d6290afebb75094727d3cf27ca37ffb2" translate="yes" xml:space="preserve">
          <source>To use attribute binding with the &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; attribute &lt;code&gt;colspan&lt;/code&gt;:</source>
          <target state="translated">要将属性绑定与 &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; 属性 &lt;code&gt;colspan&lt;/code&gt; 一起使用：</target>
        </trans-unit>
        <trans-unit id="0ca88cb17e7b1914d4b8afd6842937291337a45f" translate="yes" xml:space="preserve">
          <source>To use pipes you should have a basic understanding of the following:</source>
          <target state="translated">要使用管道,你应该对以下内容有基本的了解。</target>
        </trans-unit>
        <trans-unit id="134e2c6b074bceb43e2c937a59dfdbe82522807e" translate="yes" xml:space="preserve">
          <source>To use reactive form controls, import &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/forms&lt;/code&gt; package and add it to your NgModule's &lt;code&gt;imports&lt;/code&gt; array.</source>
          <target state="translated">要使用反应式表单控件，请从 &lt;code&gt;@angular/forms&lt;/code&gt; 包中导入 &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 并将其添加到NgModule的 &lt;code&gt;imports&lt;/code&gt; 数组中。</target>
        </trans-unit>
        <trans-unit id="d9a033cbec8595c7b94a782a7c20d201108cbb14" translate="yes" xml:space="preserve">
          <source>To use reactive forms, import &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/forms&lt;/code&gt; package and add it to your NgModule's &lt;code&gt;imports&lt;/code&gt; array.</source>
          <target state="translated">要使用反应形式，请从 &lt;code&gt;@angular/forms&lt;/code&gt; 包中导入 &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; 并将其添加到NgModule的 &lt;code&gt;imports&lt;/code&gt; 数组中。</target>
        </trans-unit>
        <trans-unit id="795604549bb75622c86eb22a8a3537118214bc43" translate="yes" xml:space="preserve">
          <source>To use route guards, consider using component-less routes as this facilitates guarding child routes.</source>
          <target state="translated">使用途径守护时,请考虑使用无组件途径,这样便于守护子途径。</target>
        </trans-unit>
        <trans-unit id="99b05aeea7ad8c9ff74a29d0c307334f8ae5a9cc" translate="yes" xml:space="preserve">
          <source>To use the &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgrademodule&quot;&gt;LocationUpgradeModule&lt;/a&gt;&lt;/code&gt;, import the symbol from &lt;code&gt;@angular/common/upgrade&lt;/code&gt; and add it to your &lt;code&gt;AppModule&lt;/code&gt; imports using the static &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgrademodule#config&quot;&gt;LocationUpgradeModule.config()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">要使用 &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgrademodule&quot;&gt;LocationUpgradeModule&lt;/a&gt;&lt;/code&gt; ，请使用静态 &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgrademodule#config&quot;&gt;LocationUpgradeModule.config()&lt;/a&gt;&lt;/code&gt; 方法从 &lt;code&gt;@angular/common/upgrade&lt;/code&gt; 导入符号，并将其添加到 &lt;code&gt;AppModule&lt;/code&gt; 导入中。</target>
        </trans-unit>
        <trans-unit id="3ae96bb53c4ba4ef32b382b3c0895785d1dbb38d" translate="yes" xml:space="preserve">
          <source>To use the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorator in a child component class, first import &lt;code&gt;&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; and then decorate the property with &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;, as in the following example.</source>
          <target state="translated">要在子组件类中使用 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 装饰器，请首先导入 &lt;code&gt;&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; ，然后使用 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 装饰属性，如以下示例所示。</target>
        </trans-unit>
        <trans-unit id="df43dc8c1dde95936358a838f639abe20aaeb53b" translate="yes" xml:space="preserve">
          <source>To use the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorator in a child component class, first import &lt;code&gt;&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; and then decorate the property with &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;:</source>
          <target state="translated">要在子组件类中使用 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 装饰器，请首先导入 &lt;code&gt;&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; ，然后使用 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 装饰属性：</target>
        </trans-unit>
        <trans-unit id="d4922d09d3f66928b67e63af20c190e526abbeb7" translate="yes" xml:space="preserve">
          <source>To use the &lt;code&gt;ng deploy&lt;/code&gt; command, use &lt;code&gt;ng add&lt;/code&gt; to add a package that implements deployment capabilities to your favorite platform. Adding the package automatically updates your workspace configuration, adding a deployment &lt;a href=&quot;../guide/cli-builder&quot;&gt;CLI builder&lt;/a&gt;. For example:</source>
          <target state="translated">要使用 &lt;code&gt;ng deploy&lt;/code&gt; 命令，请使用 &lt;code&gt;ng add&lt;/code&gt; 将实现部署功能的软件包添加到您喜欢的平台。添加软件包会自动更新您的工作区配置，并添加一个部署&lt;a href=&quot;../guide/cli-builder&quot;&gt;CLI构建器&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="61742a0d0031401384bd80c8bfa4431f59daa8a1" translate="yes" xml:space="preserve">
          <source>To use the Angular framework, you should be familiar with the following:</source>
          <target state="translated">要使用Angular框架,你应该熟悉以下内容。</target>
        </trans-unit>
        <trans-unit id="f99f05f6ce8842a8205cc3644b5e73ca6f6cb435" translate="yes" xml:space="preserve">
          <source>To use the Angular router, an app needs to have at least two components so that it can navigate from one to the other. To create a component using the CLI, enter the following at the command line where &lt;code&gt;first&lt;/code&gt; is the name of your component:</source>
          <target state="translated">要使用Angular路由器，一个应用程序至少需要包含两个组件，才能从一个组件导航到另一个组件。要使用CLI创建组件，请在命令行中输入以下内容，其中 &lt;code&gt;first&lt;/code&gt; 是您的组件名称：</target>
        </trans-unit>
        <trans-unit id="4e5078f362fa8e75b589c64aa05c23c8c2894e2d" translate="yes" xml:space="preserve">
          <source>To use the Language Service for in-line templates, you must first add an extension to allow TypeScript, then install the Angular Language Service plug-in. Starting with TypeScript 2.3, TypeScript has a plug-in model that the language service can use.</source>
          <target state="translated">要想在行内模板中使用语言服务,你必须先添加一个扩展来允许TypeScript,然后安装Angular语言服务插件。从TypeScript 2.3开始,TypeScript有了语言服务可以使用的插件模型。</target>
        </trans-unit>
        <trans-unit id="d456e2ebd07067eb97a027965223c7abb3f733d7" translate="yes" xml:space="preserve">
          <source>To use the environment configurations you have defined, your components must import the original environments file:</source>
          <target state="translated">要使用您定义的环境配置,您的组件必须导入原始环境文件。</target>
        </trans-unit>
        <trans-unit id="f5d7e74575342444e96fc87e2007c4383a5ce53c" translate="yes" xml:space="preserve">
          <source>To use the new &lt;code&gt;HighlightDirective&lt;/code&gt;, add a paragraph (&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;) element to the template of the root &lt;code&gt;AppComponent&lt;/code&gt; and apply the directive as an attribute.</source>
          <target state="translated">要使用新的 &lt;code&gt;HighlightDirective&lt;/code&gt; ，请在根 &lt;code&gt;AppComponent&lt;/code&gt; 的模板中添加一个段落（ &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; ）元素，并将该指令用作属性。</target>
        </trans-unit>
        <trans-unit id="1aa16e54cdfeb57cd99e53decbadafdfb1ec740f" translate="yes" xml:space="preserve">
          <source>To use the property, you must declare it in the class, which in this example is &lt;code&gt;AppComponent&lt;/code&gt;. The value of &lt;code&gt;classes&lt;/code&gt; is &lt;code&gt;special&lt;/code&gt;.</source>
          <target state="translated">要使用该属性，必须在类中声明它，在本示例中为 &lt;code&gt;AppComponent&lt;/code&gt; 。 &lt;code&gt;classes&lt;/code&gt; 的价值是 &lt;code&gt;special&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ef78e3fbfe7e791fb6b54a58fe45a757bce01ad" translate="yes" xml:space="preserve">
          <source>To use the same instance of &lt;code&gt;HttpInterceptors&lt;/code&gt; for the entire app, import the &lt;code&gt;&lt;a href=&quot;httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; only in your &lt;code&gt;AppModule&lt;/code&gt;, and add the interceptors to the root application injector . If you import &lt;code&gt;&lt;a href=&quot;httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; multiple times across different modules (for example, in lazy loading modules), each import creates a new copy of the &lt;code&gt;&lt;a href=&quot;httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;, which overwrites the interceptors provided in the root module.</source>
          <target state="translated">要为整个应用程序使用相同的 &lt;code&gt;HttpInterceptors&lt;/code&gt; 实例，请仅在您的 &lt;code&gt;AppModule&lt;/code&gt; 中导入 &lt;code&gt;&lt;a href=&quot;httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; ，然后将拦截器添加到根应用程序注入器中。如果跨不同模块多次导入 &lt;code&gt;&lt;a href=&quot;httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; （例如，在延迟加载模块中），则每次导入都会创建 &lt;code&gt;&lt;a href=&quot;httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 的新副本，该副本将覆盖根模块中提供的拦截器。</target>
        </trans-unit>
        <trans-unit id="862ac8fcf9776d649025ec8678ccd0c4bc9fb24a" translate="yes" xml:space="preserve">
          <source>To use the target and the property, you must declare them in their respective classes.</source>
          <target state="translated">要使用目标和属性,你必须在它们各自的类中声明它们。</target>
        </trans-unit>
        <trans-unit id="8a1652d0cb403164496c7c6e9915242c358c810d" translate="yes" xml:space="preserve">
          <source>To use this directive you must provide a container element that sets the &lt;code&gt;[&lt;a href=&quot;ngplural&quot;&gt;ngPlural&lt;/a&gt;]&lt;/code&gt; attribute to a switch expression. Inner elements with a &lt;code&gt;[&lt;a href=&quot;ngpluralcase&quot;&gt;ngPluralCase&lt;/a&gt;]&lt;/code&gt; will display based on their expression:</source>
          <target state="translated">要使用此伪指令，必须提供一个容器元素，该元素将 &lt;code&gt;[&lt;a href=&quot;ngplural&quot;&gt;ngPlural&lt;/a&gt;]&lt;/code&gt; 属性设置为switch表达式。具有 &lt;code&gt;[&lt;a href=&quot;ngpluralcase&quot;&gt;ngPluralCase&lt;/a&gt;]&lt;/code&gt; 内部元素将根据其表达式显示：</target>
        </trans-unit>
        <trans-unit id="bec1df521164ef700b40c0abfb52f86f1e693028" translate="yes" xml:space="preserve">
          <source>To use this service, add it to your component or directive as a dependency. The service is instantiated along with your component.</source>
          <target state="translated">要使用这个服务,请将它作为依赖关系添加到你的组件或指令中。该服务与你的组件一起被实例化。</target>
        </trans-unit>
        <trans-unit id="3b6be3fc2dc7edbb46b0b1ec51c5955d3e6888c2" translate="yes" xml:space="preserve">
          <source>To use your locale definition in the build configuration, use the &lt;code&gt;&quot;localize&quot;&lt;/code&gt; option in &lt;code&gt;angular.json&lt;/code&gt; to tell the CLI which locales to generate for the build configuration:</source>
          <target state="translated">要在构建配置中使用语言环境定义，请使用 &lt;code&gt;angular.json&lt;/code&gt; 中的 &lt;code&gt;&quot;localize&quot;&lt;/code&gt; 选项告诉CLI为构建配置生成哪些语言环境：</target>
        </trans-unit>
        <trans-unit id="cd30c23cd4c148ec7cf06d7ae5e25c0dc72d20b3" translate="yes" xml:space="preserve">
          <source>To use your new components, import them into &lt;code&gt;AppRoutingModule&lt;/code&gt; at the top of the file, as follows:</source>
          <target state="translated">要使用新组件，请按照以下步骤将它们导入文件顶部的 &lt;code&gt;AppRoutingModule&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="ec400ea96c2fce5839cbfdc718a80a3377af0601" translate="yes" xml:space="preserve">
          <source>To use your own library in an app:</source>
          <target state="translated">要在应用程序中使用自己的库。</target>
        </trans-unit>
        <trans-unit id="3c973408d2448836192162ca55537f91af2a75f7" translate="yes" xml:space="preserve">
          <source>To validate the links, you don't need the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; to navigate and you don't need the &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; to mark where the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; inserts &lt;em&gt;routed components&lt;/em&gt;.</source>
          <target state="translated">要验证链接，您不需要 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 进行导航，也不需要 &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; 来标记 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 在其中插入&lt;em&gt;路由组件的位置&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0df4d562aaab9bff2662b3ac4f6d1a92f4728ee1" translate="yes" xml:space="preserve">
          <source>To validate the potential alter ego, we need to consult a central database of all currently enlisted heroes. The process is asynchronous, so we need a special validator for that.</source>
          <target state="translated">为了验证潜在的另一个自我,我们需要查阅所有当前入伍英雄的中央数据库。这个过程是异步的,所以我们需要一个特殊的验证器来验证。</target>
        </trans-unit>
        <trans-unit id="32c127e56d91889f1c7cad6d0e80c60907253fef" translate="yes" xml:space="preserve">
          <source>To verify the build output, open &lt;code&gt;dist/my-app/index.html&lt;/code&gt;. Look for default text &lt;code&gt;app-shell works!&lt;/code&gt; to show that the app shell route was rendered as part of the output.</source>
          <target state="translated">要验证构建输出，请打开 &lt;code&gt;dist/my-app/index.html&lt;/code&gt; 。查找默认的文本 &lt;code&gt;app-shell works!&lt;/code&gt; 以显示应用程序外壳程序路线已作为输出的一部分呈现。</target>
        </trans-unit>
        <trans-unit id="058878199f4a19cab2e45942ff386bcd8a9c4824" translate="yes" xml:space="preserve">
          <source>To view or download the example code used in this topic, see the live example.</source>
          <target state="translated">要查看或下载本主题中使用的示例代码,请看现场示例。</target>
        </trans-unit>
        <trans-unit id="64189167d7c6f7924c3403091e78e99cd1953102" translate="yes" xml:space="preserve">
          <source>To watch for changes on an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property, use &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt;, one of Angular's &lt;a href=&quot;lifecycle-hooks#onchanges&quot;&gt;lifecycle hooks&lt;/a&gt;. &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; is specifically designed to work with properties that have the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorator. See the &lt;a href=&quot;lifecycle-hooks#onchanges&quot;&gt;&lt;code&gt;OnChanges&lt;/code&gt;&lt;/a&gt; section of the &lt;a href=&quot;lifecycle-hooks&quot;&gt;Lifecycle Hooks&lt;/a&gt; guide for more details and examples.</source>
          <target state="translated">要监视 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 属性的更改，请使用Angular的&lt;a href=&quot;lifecycle-hooks#onchanges&quot;&gt;生命周期挂钩&lt;/a&gt;之一 &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; 是专门设计用于具有 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;（）装饰器的属性的。有关更多详细信息和示例，请参见&lt;a href=&quot;lifecycle-hooks&quot;&gt;生命周期挂钩&lt;/a&gt;指南的&lt;a href=&quot;lifecycle-hooks#onchanges&quot;&gt; &lt;code&gt;OnChanges&lt;/code&gt; &lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="90e9f667063b22e44e21816a49d7a46c4e72f6d9" translate="yes" xml:space="preserve">
          <source>To watch for changes on an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property, you can use &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt;, one of Angular's &lt;a href=&quot;lifecycle-hooks&quot;&gt;lifecycle hooks&lt;/a&gt;. See the &lt;a href=&quot;lifecycle-hooks#onchanges&quot;&gt;&lt;code&gt;OnChanges&lt;/code&gt;&lt;/a&gt; section of the &lt;a href=&quot;lifecycle-hooks&quot;&gt;Lifecycle Hooks&lt;/a&gt; guide for more details and examples.</source>
          <target state="translated">要监视 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 属性的更改，可以使用Angular的&lt;a href=&quot;lifecycle-hooks&quot;&gt;生命周期挂钩&lt;/a&gt;之一 &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; 。有关更多详细信息和示例，请参见《&lt;a href=&quot;lifecycle-hooks&quot;&gt;Lifecycle Hooks&lt;/a&gt;指南》的&amp;ldquo; &lt;a href=&quot;lifecycle-hooks#onchanges&quot;&gt; &lt;code&gt;OnChanges&lt;/code&gt; &amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="05a58fa2ca80d1b185bffa061088c51d5420c848" translate="yes" xml:space="preserve">
          <source>To write these kinds of test, you'll use additional features of the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; as well as other testing helpers.</source>
          <target state="translated">要编写这类测试，您将使用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 的其他功能以及其他测试助手。</target>
        </trans-unit>
        <trans-unit id="1cc935e80e328e474a31d427ae2531c53add98a9" translate="yes" xml:space="preserve">
          <source>Together, a component and template define an Angular view.</source>
          <target state="translated">组件和模板共同定义了一个Angular视图。</target>
        </trans-unit>
        <trans-unit id="87022fcea4706d527b367133425bf8fe125ff9af" translate="yes" xml:space="preserve">
          <source>Toggle two form regions (extra credit)</source>
          <target state="translated">切换两个表格区域(加分)</target>
        </trans-unit>
        <trans-unit id="b01d73f154f36c228522d4798ad4a598756fa10a" translate="yes" xml:space="preserve">
          <source>Toggling button functionality</source>
          <target state="translated">切换按钮功能</target>
        </trans-unit>
        <trans-unit id="5ba5c297a3177e98b75ef09b3c0904e236e367fe" translate="yes" xml:space="preserve">
          <source>Token that can be used to provide options for &lt;code&gt;&lt;a href=&quot;service-worker/serviceworkermodule&quot;&gt;ServiceWorkerModule&lt;/a&gt;&lt;/code&gt; outside of &lt;code&gt;&lt;a href=&quot;service-worker/serviceworkermodule#register&quot;&gt;ServiceWorkerModule.register()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">令牌可用于提供选项 &lt;code&gt;&lt;a href=&quot;service-worker/serviceworkermodule&quot;&gt;ServiceWorkerModule&lt;/a&gt;&lt;/code&gt; 以外 &lt;code&gt;&lt;a href=&quot;service-worker/serviceworkermodule#register&quot;&gt;ServiceWorkerModule.register()&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31eb6ab3d3ba3ac918313692bbab97fbc9516ee1" translate="yes" xml:space="preserve">
          <source>Token that can be used to provide options for &lt;code&gt;&lt;a href=&quot;serviceworkermodule&quot;&gt;ServiceWorkerModule&lt;/a&gt;&lt;/code&gt; outside of &lt;code&gt;&lt;a href=&quot;serviceworkermodule#register&quot;&gt;ServiceWorkerModule.register()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">令牌可用于提供选项 &lt;code&gt;&lt;a href=&quot;serviceworkermodule&quot;&gt;ServiceWorkerModule&lt;/a&gt;&lt;/code&gt; 以外 &lt;code&gt;&lt;a href=&quot;serviceworkermodule#register&quot;&gt;ServiceWorkerModule.register()&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a829a6b9e3e265061c5310994b566e52ec5ed4d0" translate="yes" xml:space="preserve">
          <source>Token to provide CompilerOptions in the platform injector.</source>
          <target state="translated">在平台注入器中提供CompilerOptions的令牌。</target>
        </trans-unit>
        <trans-unit id="1d10a851a2521fa1132fbcccf205872120c2acd7" translate="yes" xml:space="preserve">
          <source>Tokens &lt;a href=&quot;dependency-injection&quot;&gt;can have different types&lt;/a&gt;. They are often classes. They may also be strings.</source>
          <target state="translated">令牌&lt;a href=&quot;dependency-injection&quot;&gt;可以具有不同的类型&lt;/a&gt;。他们经常是班级。它们也可以是字符串。</target>
        </trans-unit>
        <trans-unit id="19d57f29559f37ce632a300697209a7f397c855f" translate="yes" xml:space="preserve">
          <source>Tokens can be merged into a combined query selector string. For example:</source>
          <target state="translated">代币可以合并成一个组合查询选择器字符串。例如:</target>
        </trans-unit>
        <trans-unit id="df45966d6a0d5c55c4c026a6b59b4d99477ebee0" translate="yes" xml:space="preserve">
          <source>Top component</source>
          <target state="translated">顶部组件</target>
        </trans-unit>
        <trans-unit id="8dd425bec3818cb3cdcc48d42a8c69706bf636c4" translate="yes" xml:space="preserve">
          <source>Total number of bytes to upload or download. Depending on the request or response, this may not be computable and thus may not be present.</source>
          <target state="translated">上传或下载的字节总数。根据请求或响应的情况,这可能无法计算,因此可能不存在。</target>
        </trans-unit>
        <trans-unit id="253508f1cdb3b5a118c1f092109924e9f6cc5ecf" translate="yes" xml:space="preserve">
          <source>Tour of Heroes App and Tutorial</source>
          <target state="translated">英雄之旅app和教程</target>
        </trans-unit>
        <trans-unit id="79ffe79231e4016ea2181b480464ff0f91ab2c0f" translate="yes" xml:space="preserve">
          <source>Tour of Heroes app and tutorial</source>
          <target state="translated">英雄之旅的应用和教程</target>
        </trans-unit>
        <trans-unit id="af62994036bf0b04887e8a29971470d011d020a4" translate="yes" xml:space="preserve">
          <source>Tour of Heroes tutorial application</source>
          <target state="translated">英雄之旅教程应用</target>
        </trans-unit>
        <trans-unit id="838744bbebd051b5d24871e5f63b3ba4199099d6" translate="yes" xml:space="preserve">
          <source>Tour of Heroes: Add in-app navigation with routing</source>
          <target state="translated">英雄之旅。增加应用内导航与路由</target>
        </trans-unit>
        <trans-unit id="c493c5cdfa4a8ccdfc9662a20626564589907ab7" translate="yes" xml:space="preserve">
          <source>Tour of Heroes: Add services</source>
          <target state="translated">英雄之旅。增加服务</target>
        </trans-unit>
        <trans-unit id="31d0192b3921c7fd4f68f0d13ef0be39ec4f48f9" translate="yes" xml:space="preserve">
          <source>Tour of Heroes: Create a feature component</source>
          <target state="translated">英雄之旅。创建一个功能组件</target>
        </trans-unit>
        <trans-unit id="72c48b3f6ee5672c5101b356a4815efc83090869" translate="yes" xml:space="preserve">
          <source>Tour of Heroes: Creating an application</source>
          <target state="translated">英雄之旅 创建一个应用程序</target>
        </trans-unit>
        <trans-unit id="a7a0b3548bbe957863ff25131676aa39c68a0d62" translate="yes" xml:space="preserve">
          <source>Tour of Heroes: Display a selection list</source>
          <target state="translated">英雄之旅。显示选择列表</target>
        </trans-unit>
        <trans-unit id="cdf382244af028f356e9cda40178a770fc9b8cee" translate="yes" xml:space="preserve">
          <source>Tour of Heroes: Get data from a server</source>
          <target state="translated">英雄之旅:从服务器获取数据</target>
        </trans-unit>
        <trans-unit id="c31394cb566e25893c1b9026e5a85a94d73a845a" translate="yes" xml:space="preserve">
          <source>Tour of Heroes: The hero editor</source>
          <target state="translated">英雄之旅:英雄编辑</target>
        </trans-unit>
        <trans-unit id="e9f49431ff1950df0bab16eb3bda80a1b69035be" translate="yes" xml:space="preserve">
          <source>Tour of Heroes: completed application</source>
          <target state="translated">英雄之旅:填写申请书</target>
        </trans-unit>
        <trans-unit id="940a504d78dc8eb71cdeb87d05acf21c2c8dddc2" translate="yes" xml:space="preserve">
          <source>Track and listen for changes to the form's data model.</source>
          <target state="translated">跟踪和监听表单数据模型的变化。</target>
        </trans-unit>
        <trans-unit id="8fb0f6e53c00adefd00aea3fc755781253060a37" translate="yes" xml:space="preserve">
          <source>Track by identity as computed by the &lt;code&gt;&lt;a href=&quot;trackbyfunction&quot;&gt;TrackByFunction&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">按 &lt;code&gt;&lt;a href=&quot;trackbyfunction&quot;&gt;TrackByFunction&lt;/a&gt;&lt;/code&gt; 计算的标识进行跟踪。</target>
        </trans-unit>
        <trans-unit id="2e20a272657096b0f12c4de4b5cd187088921815" translate="yes" xml:space="preserve">
          <source>Track control state and validity with &lt;code&gt;ngModel&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;ngModel&lt;/code&gt; 跟踪控制状态和有效性</target>
        </trans-unit>
        <trans-unit id="cd9c1a52a403cc4c1aef9ca6a8b5b237a8db3e62" translate="yes" xml:space="preserve">
          <source>Track control states</source>
          <target state="translated">跟踪控制状态</target>
        </trans-unit>
        <trans-unit id="205a26cf0e86ebcb22227fe276faba33af550f97" translate="yes" xml:space="preserve">
          <source>Track input validity and control status using &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 跟踪输入的有效性和控制状态。</target>
        </trans-unit>
        <trans-unit id="c1f1f73803fe36b0c16b9ccc852ad5cf4c245bed" translate="yes" xml:space="preserve">
          <source>Track state changes and the validity of form controls.</source>
          <target state="translated">跟踪状态变化和表单控件的有效性。</target>
        </trans-unit>
        <trans-unit id="750eabe2d59ab51eb9806ca014b817ea6d03f06e" translate="yes" xml:space="preserve">
          <source>TrackByFunction</source>
          <target state="translated">TrackByFunction</target>
        </trans-unit>
        <trans-unit id="e8e06238766a8da29e9dc9f88eea2e8f0510ad6f" translate="yes" xml:space="preserve">
          <source>Tracking and controlling &lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/focus/&quot;&gt;focus&lt;/a&gt; in a UI is an important consideration in designing for accessibility. When using Angular routing, you should decide where page focus goes upon navigation.</source>
          <target state="translated">在设计可访问性时，在UI中跟踪和控制&lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/focus/&quot;&gt;焦点&lt;/a&gt;是重要的考虑因素。使用Angular路由时，应确定导航页面的焦点。</target>
        </trans-unit>
        <trans-unit id="4f24ac08bd1cafccdfc3354a39d295dd35edf75c" translate="yes" xml:space="preserve">
          <source>Tracking and showing request progress</source>
          <target state="translated">跟踪和显示请求进度</target>
        </trans-unit>
        <trans-unit id="2bf54b9db29d88e96523bb27968cbe340de3297c" translate="yes" xml:space="preserve">
          <source>Tracks changes to the email attribute bound to this directive.</source>
          <target state="translated">追踪与该指令绑定的电子邮件属性的变化。</target>
        </trans-unit>
        <trans-unit id="8fd392bb0e0e4c81e1b2544fdfe54ef3a072a778" translate="yes" xml:space="preserve">
          <source>Tracks changes to the pattern bound to this directive.</source>
          <target state="translated">跟踪与该指令绑定的模式的变化。</target>
        </trans-unit>
        <trans-unit id="d69d10dc65469d775e59042da88ca5d5529758ae" translate="yes" xml:space="preserve">
          <source>Tracks changes to the required attribute bound to this directive.</source>
          <target state="translated">追踪与该指令绑定的所需属性的变化。</target>
        </trans-unit>
        <trans-unit id="d8556ba32bce9b6e211ba689364183606036ec09" translate="yes" xml:space="preserve">
          <source>Tracks changes to the the maximum length bound to this directive.</source>
          <target state="translated">跟踪变化到该指令的最大长度约束。</target>
        </trans-unit>
        <trans-unit id="94a80f0e6fddb9418827ab4bb176c0d8df0d6618" translate="yes" xml:space="preserve">
          <source>Tracks changes to the the minimum length bound to this directive.</source>
          <target state="translated">追踪该指令所约束的最小长度的变化。</target>
        </trans-unit>
        <trans-unit id="196941bc4879e6f47b65e211a399eab8a6f6151b" translate="yes" xml:space="preserve">
          <source>Tracks options for the &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">跟踪 &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; 实例的选项。</target>
        </trans-unit>
        <trans-unit id="ab3dbc710cc5293470f8eccfb6d9f6e87414e9b0" translate="yes" xml:space="preserve">
          <source>Tracks simple string values bound to the option element. For objects, use the &lt;code&gt;ngValue&lt;/code&gt; input binding.</source>
          <target state="translated">跟踪绑定到option元素的简单字符串值。对于对象，请使用 &lt;code&gt;ngValue&lt;/code&gt; 输入绑定。</target>
        </trans-unit>
        <trans-unit id="8e0382103af4eac9cadd4b2247861b1d78b40172" translate="yes" xml:space="preserve">
          <source>Tracks the &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance bound to the directive.</source>
          <target state="translated">跟踪绑定到指令的 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="e47245e960a6f3e488ea514c18870fe786d9b704" translate="yes" xml:space="preserve">
          <source>Tracks the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; bound to this directive.</source>
          <target state="translated">跟踪绑定到此指令的 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22f15c49bdce4bf9eed08a825998088b3e2b947f" translate="yes" xml:space="preserve">
          <source>Tracks the configuration options for this &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">跟踪此 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 实例的配置选项。</target>
        </trans-unit>
        <trans-unit id="625b260ece4880729473d6e613cdc9200774f31d" translate="yes" xml:space="preserve">
          <source>Tracks the list of added &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; instances</source>
          <target state="translated">跟踪已添加的 &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; 实例的列表</target>
        </trans-unit>
        <trans-unit id="8ccc39b3d5dcbc137ff9c2eb0496d9ce9fae07b0" translate="yes" xml:space="preserve">
          <source>Tracks the name bound to the directive. If a parent form exists, it uses this name as a key to retrieve this control's value.</source>
          <target state="translated">追踪与指令绑定的名称,如果存在一个父表单,则使用这个名称作为键来检索这个控件的值。如果存在父表单,则使用该名称作为键来检索该控件的值。</target>
        </trans-unit>
        <trans-unit id="89defebffe912c5087e896997a7d9b201c73c793" translate="yes" xml:space="preserve">
          <source>Tracks the name bound to the directive. The parent form uses this name as a key to retrieve this control's value.</source>
          <target state="translated">追踪与指令绑定的名称,父表单使用这个名称作为键来检索这个控件的值。父表单使用这个名称作为键来检索这个控件的值。</target>
        </trans-unit>
        <trans-unit id="aee499214828a5c060da6e529f71f860679051fe" translate="yes" xml:space="preserve">
          <source>Tracks the name of the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; bound to the directive. The name corresponds to a key in the parent &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">跟踪绑定到指令的 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 的名称。该名称对应于父 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 中的键。</target>
        </trans-unit>
        <trans-unit id="d3d060876a35b94f524bce8f795b5d0bee4651e5" translate="yes" xml:space="preserve">
          <source>Tracks the name of the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; bound to the directive. The name corresponds to a key in the parent &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;. Accepts a name as a string or a number. The name in the form of a string is useful for individual forms, while the numerical form allows for form arrays to be bound to indices when iterating over arrays in a &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">跟踪绑定到指令的 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 的名称。该名称对应于父 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 中的键。接受名称作为字符串或数字。字符串形式的名称对于单个表单很有用，而数字形式则允许在 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 中的数组上进行迭代时将表单数组绑定到索引。</target>
        </trans-unit>
        <trans-unit id="aad0ec9ce7f409bb75dafe01a113a9f157129e45" translate="yes" xml:space="preserve">
          <source>Tracks the name of the &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; bound to the directive. The name corresponds to a key in the parent &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">跟踪绑定到指令的 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的名称。该名称对应于父 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 中的键。</target>
        </trans-unit>
        <trans-unit id="a20a2f1c67ecb76fe7f909062f6d19a471cc8a84" translate="yes" xml:space="preserve">
          <source>Tracks the name of the &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; bound to the directive. The name corresponds to a key in the parent &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;. Accepts a name as a string or a number. The name in the form of a string is useful for individual forms, while the numerical form allows for form controls to be bound to indices when iterating over controls in a &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">跟踪绑定到指令的 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的名称。该名称对应于父 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 中的键。接受名称作为字符串或数字。字符串形式的名称对于单个表单很有用，而数字形式则允许在 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 中的控件上进行迭代时将表单控件绑定到索引。</target>
        </trans-unit>
        <trans-unit id="5250e4f20d726ba69a0ff3fea3984936608f75ae" translate="yes" xml:space="preserve">
          <source>Tracks the name of the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; bound to the directive. The name corresponds to a key in the parent &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">跟踪绑定到指令的 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 的名称。该名称对应于父 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 中的键。</target>
        </trans-unit>
        <trans-unit id="1a76ef6bd8291e09721e93618763da21c4ce1b30" translate="yes" xml:space="preserve">
          <source>Tracks the name of the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; bound to the directive. The name corresponds to a key in the parent &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;. Accepts a name as a string or a number. The name in the form of a string is useful for individual forms, while the numerical form allows for form groups to be bound to indices when iterating over groups in a &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">跟踪绑定到指令的 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 的名称。该名称对应于父 &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 中的键。接受名称作为字符串或数字。字符串形式的名称对于单个表单很有用，而数字形式则允许在 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 中的组上进行迭代时将表单组绑定到索引。</target>
        </trans-unit>
        <trans-unit id="3587ba9a726a4c83a603322c3d244042c4a5440b" translate="yes" xml:space="preserve">
          <source>Tracks the name of the &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; bound to the directive. The name corresponds to a key in the parent &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">跟踪绑定到指令的 &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; 的名称。该名称对应于父 &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; 中的键。</target>
        </trans-unit>
        <trans-unit id="94ef4bb133d8371862e04cdbe35ea80d627658aa" translate="yes" xml:space="preserve">
          <source>Tracks the name of the radio input element.</source>
          <target state="translated">追踪无线电输入元素的名称。</target>
        </trans-unit>
        <trans-unit id="847fd12a5e443af80b1d628517f650d4b16809c3" translate="yes" xml:space="preserve">
          <source>Tracks the option comparison algorithm for tracking identities when checking for changes.</source>
          <target state="translated">在检查变化时,跟踪跟踪身份的选项比较算法。</target>
        </trans-unit>
        <trans-unit id="4181514cf443c8d2ed062575db037633d03567f5" translate="yes" xml:space="preserve">
          <source>Tracks the value and validation status of an individual form control.</source>
          <target state="translated">跟踪单个表单控件的值和验证状态。</target>
        </trans-unit>
        <trans-unit id="e95029f5c1b54e6951ef7d1dc1f48671ee8c5122" translate="yes" xml:space="preserve">
          <source>Tracks the value and validity state of a group of &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">跟踪一组 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例的值和有效性状态。</target>
        </trans-unit>
        <trans-unit id="6081501877b5287d24fab2c51a89d5bc830a5e25" translate="yes" xml:space="preserve">
          <source>Tracks the value and validity state of a group of &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">跟踪一组 &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例的值和有效性状态。</target>
        </trans-unit>
        <trans-unit id="145bfac45bf7e6224142dc5429a521af2cf548c9" translate="yes" xml:space="preserve">
          <source>Tracks the value and validity state of an array of &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">跟踪 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 实例的数组的值和有效性状态。</target>
        </trans-unit>
        <trans-unit id="571f063bb31197967a229f7c4374acb092869635" translate="yes" xml:space="preserve">
          <source>Tracks the value and validity state of an array of &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">跟踪 &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 实例的数组的值和有效性状态。</target>
        </trans-unit>
        <trans-unit id="a2626e67aec561be0def79f87c598efe295b2e85" translate="yes" xml:space="preserve">
          <source>Tracks the value bound to the option element. Unlike the value binding, ngValue supports binding to objects.</source>
          <target state="translated">追踪绑定到选项元素的值。与值绑定不同的是,ngValue支持与对象绑定。</target>
        </trans-unit>
        <trans-unit id="3ee63c63d361eb3aa2b0a3c1f8a3353d2f4dccf1" translate="yes" xml:space="preserve">
          <source>Tracks the value bound to this directive.</source>
          <target state="translated">追踪与该指令绑定的值。</target>
        </trans-unit>
        <trans-unit id="283ea7e4ca07fa5714eec7b7e0bd1c17f20bc544" translate="yes" xml:space="preserve">
          <source>Tracks the value of the radio input element</source>
          <target state="translated">追踪无线电输入元素的值。</target>
        </trans-unit>
        <trans-unit id="705f5065f56c892bc977873651559fe5515ab8a6" translate="yes" xml:space="preserve">
          <source>Tracks whether the control is disabled.</source>
          <target state="translated">跟踪该控件是否被禁用。</target>
        </trans-unit>
        <trans-unit id="1a3132b053ea81ac5f7c83c0422cea4be492de74" translate="yes" xml:space="preserve">
          <source>Tracks whether the linked route of an element is currently active, and allows you to specify one or more CSS classes to add to the element when the linked route is active.</source>
          <target state="translated">跟踪元素的链接路径当前是否处于活动状态,并允许你指定一个或多个CSS类在链接路径处于活动状态时添加到元素中。</target>
        </trans-unit>
        <trans-unit id="9e4fec6404eb80383e9e6d6b5b94d18a5fdece28" translate="yes" xml:space="preserve">
          <source>Transcluding Angular Content into AngularJS Component Directives</source>
          <target state="translated">将Angular内容纳入AngularJS组件指令中</target>
        </trans-unit>
        <trans-unit id="b8bc0089d8b086cb38dab65911aa8acd5d70fbb7" translate="yes" xml:space="preserve">
          <source>Transclusion: yes</source>
          <target state="translated">跨界:是</target>
        </trans-unit>
        <trans-unit id="f29368cc7ff3b4ade7bfa044be1921ff64aa770b" translate="yes" xml:space="preserve">
          <source>TransferState</source>
          <target state="translated">TransferState</target>
        </trans-unit>
        <trans-unit id="dea51bb13a4467c505ee6181171375f497334d54" translate="yes" xml:space="preserve">
          <source>Transform</source>
          <target state="translated">Transform</target>
        </trans-unit>
        <trans-unit id="812518bba5c699b0027b6b3a480acfb0ebc647bd" translate="yes" xml:space="preserve">
          <source>Transform the free-form body into a serialized format suitable for transmission to the server.</source>
          <target state="translated">将自由体转化为适合传输到服务器的序列化格式。</target>
        </trans-unit>
        <trans-unit id="dc1c231275a16e11dae243561efa84b2936b1b19" translate="yes" xml:space="preserve">
          <source>Transformation</source>
          <target state="translated">Transformation</target>
        </trans-unit>
        <trans-unit id="404db50a8d5ad10495b7632c1b694b2266386cf7" translate="yes" xml:space="preserve">
          <source>Transforming Data Using Pipes</source>
          <target state="translated">使用管道转换数据</target>
        </trans-unit>
        <trans-unit id="173612f0833f1106fbc8f8dd6cfe45177a22f0f4" translate="yes" xml:space="preserve">
          <source>Transforming a component to a custom element makes all of the required Angular infrastructure available to the browser. Creating a custom element is simple and straightforward, and automatically connects your component-defined view with change detection and data binding, mapping Angular functionality to the corresponding native HTML equivalents.</source>
          <target state="translated">将组件转化为自定义元素,可以将所有所需的Angular基础架构提供给浏览器。创建自定义元素简单直接,并自动将您的组件定义的视图与变化检测和数据绑定连接起来,将Angular功能映射到相应的本地HTML等价物。</target>
        </trans-unit>
        <trans-unit id="76dc9f83782c6293c8d8c6eca91efe25b1d4f5a7" translate="yes" xml:space="preserve">
          <source>Transforming a component to a custom element provides an easy path to creating dynamic HTML content in your Angular app. HTML content that you add directly to the DOM in an Angular app is normally displayed without Angular processing, unless you define a &lt;em&gt;dynamic component&lt;/em&gt;, adding your own code to connect the HTML tag to your app data, and participate in change detection. With a custom element, all of that wiring is taken care of automatically.</source>
          <target state="translated">将组件转换为自定义元素可为在Angular应用中创建动态HTML内容提供简便的方法。直接显示在Angular应用程序中直接添加到DOM的HTML内容通常无需进行Angular处理即可显示，除非您定义了&lt;em&gt;动态组件&lt;/em&gt;，添加了自己的代码以将HTML标记连接到应用程序数据并参与变更检测。使用自定义元素，所有这些接线都会自动进行。</target>
        </trans-unit>
        <trans-unit id="428b2ec1d548861040d138b663bdf7c61a4509ea" translate="yes" xml:space="preserve">
          <source>Transforming components to custom elements</source>
          <target state="translated">将组件转化为自定义元素</target>
        </trans-unit>
        <trans-unit id="73fc8ace43695569d7d87dfe192d9d7682d98901" translate="yes" xml:space="preserve">
          <source>Transforming data with parameters and chained pipes</source>
          <target state="translated">用参数和链式管道转换数据</target>
        </trans-unit>
        <trans-unit id="52c81ceec8de22f6a2b99230305438e29dcc24a6" translate="yes" xml:space="preserve">
          <source>Transforms Object or Map into an array of key value pairs.</source>
          <target state="translated">将对象或Map转换为键值对的数组。</target>
        </trans-unit>
        <trans-unit id="3a83fe4e975ea243d0d4caabdbff2dd2ca6b63d4" translate="yes" xml:space="preserve">
          <source>Transforms a number into a string, formatted according to locale rules that determine group sizing and separator, decimal-point character, and other locale-specific configurations.</source>
          <target state="translated">将一个数字转化为字符串,根据确定分组大小和分隔符、小数点字符以及其他特定于本地的配置的本地化规则进行格式化。</target>
        </trans-unit>
        <trans-unit id="afee2a38410ecd1b168f5e62c7af603ea93414fc" translate="yes" xml:space="preserve">
          <source>Transforms a number to a currency string, formatted according to locale rules that determine group sizing and separator, decimal-point character, and other locale-specific configurations.</source>
          <target state="translated">将一个数字转换为货币字符串,根据确定组大小和分隔符、小数点字符和其他特定于本地的配置的本地化规则进行格式化。</target>
        </trans-unit>
        <trans-unit id="ba444aa93f3d7c55a8743abcd65343bee076a245" translate="yes" xml:space="preserve">
          <source>Transforms a number to a percentage string, formatted according to locale rules that determine group sizing and separator, decimal-point character, and other locale-specific configurations.</source>
          <target state="translated">将一个数字转换为一个百分比字符串,根据确定组大小和分隔符、小数点字符和其他特定于本地的配置的本地化规则进行格式化。</target>
        </trans-unit>
        <trans-unit id="b212033572f2c487923ac10525b776d1494e7327" translate="yes" xml:space="preserve">
          <source>Transforms an &lt;code&gt;&lt;a href=&quot;http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; into a stream of &lt;code&gt;&lt;a href=&quot;http/httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt;s, one of which will likely be a &lt;code&gt;&lt;a href=&quot;http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 转换为 &lt;code&gt;&lt;a href=&quot;http/httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; 的流，其中一个很可能是 &lt;code&gt;&lt;a href=&quot;http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="abab076aca3610a4dff43371a91f5154ef3df183" translate="yes" xml:space="preserve">
          <source>Transforms an &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; into a stream of &lt;code&gt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt;s, one of which will likely be a &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 转换为 &lt;code&gt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; 的流，其中一个很可能是 &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c23fe29041b0f266f33891ae1c767b0508402f9a" translate="yes" xml:space="preserve">
          <source>Transforms text to all lower case.</source>
          <target state="translated">将文本转换为全小写。</target>
        </trans-unit>
        <trans-unit id="0e392a9c956f15e36c2ae33d345783ffbc7a81c9" translate="yes" xml:space="preserve">
          <source>Transforms text to all upper case.</source>
          <target state="translated">将文本转换为全大写。</target>
        </trans-unit>
        <trans-unit id="7ba2f292cd824026ac9d865b38dd20dbd4af7fa7" translate="yes" xml:space="preserve">
          <source>Transforms text to title case. Capitalizes the first letter of each word and transforms the rest of the word to lower case. Words are delimited by any whitespace character, such as a space, tab, or line-feed character.</source>
          <target state="translated">将文本转换为标题大小写。将每个单词的第一个字母大写,并将单词的其余部分转为小写。字词由任何空白字符分隔,如空格、制表符或换行字符。</target>
        </trans-unit>
        <trans-unit id="40a88712d9f4b6d6903665d4b10961274eca90e4" translate="yes" xml:space="preserve">
          <source>Transforms text to title case. Capitalizes the first letter of each word, and transforms the rest of the word to lower case. Words are delimited by any whitespace character, such as a space, tab, or line-feed character.</source>
          <target state="translated">将文本转换为标题大小写。将每个单词的第一个字母大写,并将单词的其余部分转为小写。字词以空格、制表符或换行符等任何空白字符为界。</target>
        </trans-unit>
        <trans-unit id="8c6c4775aedd63bf234a390e5f164114cd3a3da9" translate="yes" xml:space="preserve">
          <source>Transforms the current value of expression &lt;code&gt;cardNumber&lt;/code&gt; via the pipe called &lt;code&gt;myCardNumberFormatter&lt;/code&gt;.</source>
          <target state="translated">通过名为 &lt;code&gt;myCardNumberFormatter&lt;/code&gt; 的管道转换表达式 &lt;code&gt;cardNumber&lt;/code&gt; 的当前值。</target>
        </trans-unit>
        <trans-unit id="acb4047f26fa458f6ca21611c9b86f2ba97bab12" translate="yes" xml:space="preserve">
          <source>Transition and triggers</source>
          <target state="translated">过渡和触发因素</target>
        </trans-unit>
        <trans-unit id="154ba22581c5a012b47904a5fa38035fe8be49ae" translate="yes" xml:space="preserve">
          <source>Transition the Angular language service to Ivy</source>
          <target state="translated">将Angular语言服务过渡到Ivy</target>
        </trans-unit>
        <trans-unit id="fd3159002733ca58d01f18f3ef225b0a35103de7" translate="yes" xml:space="preserve">
          <source>Transitions and timing</source>
          <target state="translated">过渡和时间安排</target>
        </trans-unit>
        <trans-unit id="f89031b2b65e1a903ff7d0356c56106e1092f7d4" translate="yes" xml:space="preserve">
          <source>Transitions are matched in the order in which they are defined. Thus, you can apply other transitions on top of the &lt;code&gt;* =&amp;gt; *&lt;/code&gt; (any-to-any) transition. For example, define style changes or animations that would apply just to &lt;code&gt;open =&amp;gt; closed&lt;/code&gt;, or just to &lt;code&gt;closed =&amp;gt; open&lt;/code&gt;, and then use &lt;code&gt;* =&amp;gt; *&lt;/code&gt; as a fallback for state pairings that aren't otherwise called out.</source>
          <target state="translated">过渡按照定义的顺序进行匹配。因此，您可以在 &lt;code&gt;* =&amp;gt; *&lt;/code&gt; （任意到任意）转换之上应用其他转换。例如，定义仅适用于 &lt;code&gt;open =&amp;gt; closed&lt;/code&gt; 或仅适用于 &lt;code&gt;closed =&amp;gt; open&lt;/code&gt; 样式更改或动画，然后使用 &lt;code&gt;* =&amp;gt; *&lt;/code&gt; 作为状态配对的后备选项，否则这些状态配对不会被调用。</target>
        </trans-unit>
        <trans-unit id="7ff0a6e47fefa7e662116ee0dd231cdcc6a56382" translate="yes" xml:space="preserve">
          <source>Translate &lt;code&gt;plural&lt;/code&gt;</source>
          <target state="translated">翻译 &lt;code&gt;plural&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f28407638edfdbe51d332499328f0747faddfb77" translate="yes" xml:space="preserve">
          <source>Translate &lt;code&gt;select&lt;/code&gt;</source>
          <target state="translated">翻译 &lt;code&gt;select&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9957e9ff8b20a6e29b6eb99cd6e9ed298461187" translate="yes" xml:space="preserve">
          <source>Translate a nested expression</source>
          <target state="translated">翻译一个嵌套表达式</target>
        </trans-unit>
        <trans-unit id="c9d3944f437bc8cf7fc3df4fc9fddd4f037a4199" translate="yes" xml:space="preserve">
          <source>Translate alternate expressions</source>
          <target state="translated">翻译交替表达</target>
        </trans-unit>
        <trans-unit id="f8fd85ad8899ddbec87ff78411cd4b09cf77deb3" translate="yes" xml:space="preserve">
          <source>Translate attributes</source>
          <target state="translated">翻译属性</target>
        </trans-unit>
        <trans-unit id="ff5d47c28f5fd5187961a4c8c2f488109cdeb11a" translate="yes" xml:space="preserve">
          <source>Translate each translation file</source>
          <target state="translated">翻译每个翻译文件</target>
        </trans-unit>
        <trans-unit id="5510d0e0211ac26b4aefd0a320a3925c01ccf567" translate="yes" xml:space="preserve">
          <source>Translate nested expressions</source>
          <target state="translated">翻译嵌套表达式</target>
        </trans-unit>
        <trans-unit id="420c026f490f5f41976d80e6af023a9d6e002e18" translate="yes" xml:space="preserve">
          <source>Translate plurals</source>
          <target state="translated">翻译复数</target>
        </trans-unit>
        <trans-unit id="e0f4e41de6ef002e0ce322ce32fdb24f811b3435" translate="yes" xml:space="preserve">
          <source>Translate plurals and alternate expressions</source>
          <target state="translated">翻译复数和替代表达式</target>
        </trans-unit>
        <trans-unit id="5bd3d2d2e5c2b013f5f2ac3e26d961037f15cca1" translate="yes" xml:space="preserve">
          <source>Translate text nodes</source>
          <target state="translated">翻译文本节点</target>
        </trans-unit>
        <trans-unit id="0a748b9bc0792adca60e27565c67768a69334281" translate="yes" xml:space="preserve">
          <source>Translate text not for display</source>
          <target state="translated">翻译不显示的文本</target>
        </trans-unit>
        <trans-unit id="c13a3e77e07e4d808e0f50d46cf7d8fba6e47542" translate="yes" xml:space="preserve">
          <source>Translate text without creating an element</source>
          <target state="translated">无需创建元素即可翻译文本</target>
        </trans-unit>
        <trans-unit id="930b43956592fb6022e0ba237e0507893ea4e039" translate="yes" xml:space="preserve">
          <source>Translate the other text nodes the same way as shown in the following example:</source>
          <target state="translated">按照下图所示的方法翻译其他文本节点。</target>
        </trans-unit>
        <trans-unit id="9ca6a08c5891b63e799acee720895ad663f388d5" translate="yes" xml:space="preserve">
          <source>Translate the other text nodes the same way:</source>
          <target state="translated">用同样的方法翻译其他文本节点。</target>
        </trans-unit>
        <trans-unit id="ac3f7cdd6fb7bb10f67a29857be4bed2e5e05bcb" translate="yes" xml:space="preserve">
          <source>Translate the source text</source>
          <target state="translated">翻译源文本</target>
        </trans-unit>
        <trans-unit id="624f545665467d793ca13a411258c70e6ac2ee86" translate="yes" xml:space="preserve">
          <source>Translating plural and select expressions</source>
          <target state="translated">翻译复数和选择表达式</target>
        </trans-unit>
        <trans-unit id="ac26a7a94ea2e66490f932b6415a09ef6f2a913c" translate="yes" xml:space="preserve">
          <source>Translation</source>
          <target state="translated">Translation</target>
        </trans-unit>
        <trans-unit id="36e89f13f90ac0d31f2033903bc7999d29a243ad" translate="yes" xml:space="preserve">
          <source>TranslationWidth</source>
          <target state="translated">TranslationWidth</target>
        </trans-unit>
        <trans-unit id="3c93b9e5330687363111dd7a6e0ebef29ee56f02" translate="yes" xml:space="preserve">
          <source>Transmitting data between components</source>
          <target state="translated">在组件之间传输数据</target>
        </trans-unit>
        <trans-unit id="6e1d794deefaa6f98622f1040f05a7ea650ea223" translate="yes" xml:space="preserve">
          <source>Tree shaking refers to a compiler option that removes code from the final bundle if the app doesn't reference that code. When providers are tree-shakable, the Angular compiler removes the associated services from the final output when it determines that your application doesn't use those services. This significantly reduces the size of your bundles.</source>
          <target state="translated">树形摇动指的是一种编译器选项,如果应用程序没有引用该代码,则会从最终的捆绑中删除代码。当提供者可树状摇动时,Angular编译器在确定你的应用程序不使用相关服务时,会从最终输出中删除这些服务。这大大减少了你的捆绑包的大小。</target>
        </trans-unit>
        <trans-unit id="158297e3d668ae1a961f319687ea97bab89382f7" translate="yes" xml:space="preserve">
          <source>Tree-shakable InjectionToken</source>
          <target state="translated">树状摇动的注入令牌</target>
        </trans-unit>
        <trans-unit id="e9fcab1031cb2e23a1fe8832649e9c5a53141e58" translate="yes" xml:space="preserve">
          <source>Tree-shakable providers</source>
          <target state="translated">树形摇摇欲坠的供应商</target>
        </trans-unit>
        <trans-unit id="434f076d20f1b3b8a33e9ed50bbcb217521d722b" translate="yes" xml:space="preserve">
          <source>Tree-shaking and &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">摇树和 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f05b6a96acbdcfadc896179dc913a13d818f2f99" translate="yes" xml:space="preserve">
          <source>Tree-shaking doesn't work here because Angular can't decide to exclude one chunk of code (the provider definition for the service within the module factory) based on whether another chunk of code (the service class) is used. To make services tree-shakable, the information about how to construct an instance of the service (the provider definition) needs to be a part of the service class itself.</source>
          <target state="translated">树状摇动在这里是行不通的,因为Angular不能根据是否使用了另一块代码(服务类)来决定是否排除一块代码(模块工厂内服务的提供者定义)。为了使服务可以树状摇动,关于如何构造服务实例的信息(提供者定义)需要成为服务类本身的一部分。</target>
        </trans-unit>
        <trans-unit id="b998b898aa55ff4a0b42570f2ce7f5d95a803024" translate="yes" xml:space="preserve">
          <source>Tree-shaking is especially useful for a library because the application which uses the library may not have a need to inject it. Read more about &lt;a href=&quot;dependency-injection-providers#tree-shakable-providers&quot;&gt;tree-shakable providers&lt;/a&gt; in &lt;a href=&quot;dependency-injection-providers&quot;&gt;DI Providers&lt;/a&gt;.</source>
          <target state="translated">摇树对于库特别有用，因为使用该库的应用程序可能不需要注入它。在&lt;a href=&quot;dependency-injection-providers&quot;&gt;DI Providers中&lt;/a&gt;了解有关&lt;a href=&quot;dependency-injection-providers#tree-shakable-providers&quot;&gt;可摇晃的提供程序的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit id="1e7081d736f43ad30574ac906d26acdd03c38ed9" translate="yes" xml:space="preserve">
          <source>Trees</source>
          <target state="translated">Trees</target>
        </trans-unit>
        <trans-unit id="6c9d923a2bdc1cbd32c38da5c221d86fa7a8a6ed" translate="yes" xml:space="preserve">
          <source>Trees can represent hierarchical data.</source>
          <target state="translated">树可以表示层次化的数据。</target>
        </trans-unit>
        <trans-unit id="de3b30d295ded9bca000cfefdd9403aa187ece06" translate="yes" xml:space="preserve">
          <source>Trigger a change detection cycle for the component.</source>
          <target state="translated">触发组件的变化检测周期。</target>
        </trans-unit>
        <trans-unit id="9407e89d96626ed5d353629e3f6d9a9d64468166" translate="yes" xml:space="preserve">
          <source>Trigger component destruction.</source>
          <target state="translated">触发组件销毁。</target>
        </trans-unit>
        <trans-unit id="53af3485dc7b16524b04a2e63069b00e185de29e" translate="yes" xml:space="preserve">
          <source>Triggering the animation</source>
          <target state="translated">触发动画</target>
        </trans-unit>
        <trans-unit id="e870e5d23b1facd0b564612cfd9fdd42eb18bc87" translate="yes" xml:space="preserve">
          <source>Triggers a change event by emitting on the &lt;code&gt;&lt;a href=&quot;querylist#changes&quot;&gt;changes&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过发出 &lt;code&gt;&lt;a href=&quot;querylist#changes&quot;&gt;changes&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; 来&lt;/a&gt;触发更改事件。</target>
        </trans-unit>
        <trans-unit id="c9f5152248717bc70a71c2004527861111d686f2" translate="yes" xml:space="preserve">
          <source>Triggers a change event by emitting on the &lt;code&gt;changes&lt;/code&gt;&lt;a href=&quot;eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过发出 &lt;code&gt;changes&lt;/code&gt; &lt;a href=&quot;eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; 来&lt;/a&gt;触发更改事件。</target>
        </trans-unit>
        <trans-unit id="0b6c3c9f705c8dd24de0e35b9f2ab7dea14b27f8" translate="yes" xml:space="preserve">
          <source>Triggers a warning in dev mode that this input should not be used with reactive forms.</source>
          <target state="translated">在开发模式下触发一个警告,该输入不应该与反应式表单一起使用。</target>
        </trans-unit>
        <trans-unit id="0ae4d5b42be1c56e1a7225f517e99f471b359dc4" translate="yes" xml:space="preserve">
          <source>Triggers a warning that this input should not be used with reactive forms.</source>
          <target state="translated">触发一个警告,该输入不能与反应式表格一起使用。</target>
        </trans-unit>
        <trans-unit id="5083756d2f83ef32092480b31b3cecd6c6cec6c9" translate="yes" xml:space="preserve">
          <source>Triggers the event by its name if there is a corresponding listener in the element's &lt;code&gt;&lt;a href=&quot;../api/core/debugnode#listeners&quot;&gt;listeners&lt;/a&gt;&lt;/code&gt; collection. The second parameter is the &lt;em&gt;event object&lt;/em&gt; expected by the handler. See &lt;a href=&quot;testing#trigger-event-handler&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">如果元素的 &lt;code&gt;&lt;a href=&quot;../api/core/debugnode#listeners&quot;&gt;listeners&lt;/a&gt;&lt;/code&gt; 集合中有对应的侦听器，则通过事件的名称触发事件。第二个参数是处理程序期望的&lt;em&gt;事件对象&lt;/em&gt;。见&lt;a href=&quot;testing#trigger-event-handler&quot;&gt;上文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="116e8e66449e1e735056336b68b6a84dd95d3b0b" translate="yes" xml:space="preserve">
          <source>Triggers the event by its name if there is a corresponding listener in the element's &lt;code&gt;listeners&lt;/code&gt; collection. The second parameter is the &lt;em&gt;event object&lt;/em&gt; expected by the handler. See &lt;a href=&quot;testing-components-scenarios#trigger-event-handler&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">如果元素的 &lt;code&gt;listeners&lt;/code&gt; 集合中有相应的侦听器，则通过事件的名称触发事件。第二个参数是处理程序期望的&lt;em&gt;事件对象&lt;/em&gt;。见&lt;a href=&quot;testing-components-scenarios#trigger-event-handler&quot;&gt;上文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a10c269fb7def350ff63b23aa2d28b00775e9f1c" translate="yes" xml:space="preserve">
          <source>Trim the value (remove whitespace) and make sure it&amp;rsquo;s a minimum length.</source>
          <target state="translated">修剪值（删除空格），并确保它是最小长度。</target>
        </trans-unit>
        <trans-unit id="3cc21cf3f8e5867393f5bad054b9c40301206223" translate="yes" xml:space="preserve">
          <source>Trims all whitespaces at the beginning and the end of a template.</source>
          <target state="translated">修剪模板开头和结尾的所有空格。</target>
        </trans-unit>
        <trans-unit id="92ad5db953b958def77761bdd99674c317ad3534" translate="yes" xml:space="preserve">
          <source>Troubleshooting template errors</source>
          <target state="translated">排除模板错误</target>
        </trans-unit>
        <trans-unit id="f43741667aa518662d503fc2ce7e1d14354c3bec" translate="yes" xml:space="preserve">
          <source>True if at least one navigation event has occurred, false otherwise.</source>
          <target state="translated">如果至少有一个导航事件发生,则为真,否则为假。</target>
        </trans-unit>
        <trans-unit id="9d796fe59ff2474ea78a1c50451058993aa79f3b" translate="yes" xml:space="preserve">
          <source>True if the Service Worker is enabled (supported by the browser and enabled via &lt;code&gt;&lt;a href=&quot;serviceworkermodule&quot;&gt;ServiceWorkerModule&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">如果启用了Service Worker（由浏览器支持并通过 &lt;code&gt;&lt;a href=&quot;serviceworkermodule&quot;&gt;ServiceWorkerModule&lt;/a&gt;&lt;/code&gt; 启用），则为True 。</target>
        </trans-unit>
        <trans-unit id="5f972cc15ad49cf4f212b677b7dc7d8b9251db55" translate="yes" xml:space="preserve">
          <source>True if the control has not been marked as touched</source>
          <target state="translated">如果控件没有被标记为被触摸,则为真。</target>
        </trans-unit>
        <trans-unit id="dcc1b1c1aa85f2da9a269e743dc502fd0749e99e" translate="yes" xml:space="preserve">
          <source>True if the control is marked as &lt;code&gt;touched&lt;/code&gt;.</source>
          <target state="translated">如果控件标记为已 &lt;code&gt;touched&lt;/code&gt; 则为True 。</target>
        </trans-unit>
        <trans-unit id="60e52a2ca105703a08ce2fd47ddd086d17018855" translate="yes" xml:space="preserve">
          <source>True if this query is optional, false if it is required. Default is false. A required query throws an error if no elements are retrieved when the query is executed. An optional query does not.</source>
          <target state="translated">如果这个查询是可选的,则为true,如果是必填的,则为false。默认值是false。如果在执行查询时没有检索到任何元素,则必填查询会抛出一个错误。可选查询则不会。</target>
        </trans-unit>
        <trans-unit id="e18fb8c0b6ed0a18d4906b17c7bbc3fae3da28aa" translate="yes" xml:space="preserve">
          <source>True to create a new element without checking whether one already exists.</source>
          <target state="translated">True创建一个新元素,而不检查是否已经存在。</target>
        </trans-unit>
        <trans-unit id="478f00a6d6caf0e5792a2d5faa6511aff88a2e25" translate="yes" xml:space="preserve">
          <source>True to create new elements without checking whether they already exist.</source>
          <target state="translated">True创建新的元素而不检查它们是否已经存在。</target>
        </trans-unit>
        <trans-unit id="06b3634a6e2a35bbc0dd073c9b175791f2522293" translate="yes" xml:space="preserve">
          <source>True to include an anchor fragment in the path.</source>
          <target state="translated">True,在路径中包含一个锚点片段。</target>
        </trans-unit>
        <trans-unit id="1ab65405badb72e5749b47e365af2b6aaf2cb192" translate="yes" xml:space="preserve">
          <source>True to preserve or false to remove potentially superfluous whitespace characters from the compiled template. Whitespace characters are those matching the &lt;code&gt;\s&lt;/code&gt; character class in JavaScript regular expressions. Default is false, unless overridden in compiler options.</source>
          <target state="translated">如果保留，则为true；如果为false，则从编译的模板中删除可能多余的空白字符。空格字符是与JavaScript正则表达式中 &lt;code&gt;\s&lt;/code&gt; 字符类匹配的字符。默认值为false，除非在编译器选项中覆盖。</target>
        </trans-unit>
        <trans-unit id="c19e0cdc9c33c77f5adf440dc15998ff2a61e211" translate="yes" xml:space="preserve">
          <source>Trusting safe values</source>
          <target state="translated">信任安全价值</target>
        </trans-unit>
        <trans-unit id="4db0cc04a34f0802ff52870b79e104695e053ead" translate="yes" xml:space="preserve">
          <source>Try Angular without local setup</source>
          <target state="translated">试试没有本地设置的Angular</target>
        </trans-unit>
        <trans-unit id="beb70957ec5482b78d59548c5c70483736e2c218" translate="yes" xml:space="preserve">
          <source>Try editing any of the project files. Save and refresh the browser to see the changes.</source>
          <target state="translated">尝试编辑任何一个项目文件。保存并刷新浏览器以查看更改。</target>
        </trans-unit>
        <trans-unit id="7ddd66b689c9370a62daee26be57fd02d84a295b" translate="yes" xml:space="preserve">
          <source>Try it</source>
          <target state="translated">试试吧</target>
        </trans-unit>
        <trans-unit id="62e11793c0386a1bddb0a86fda7f464e7c562e11" translate="yes" xml:space="preserve">
          <source>Try it by adding the following directive binding variations to the &lt;code&gt;AppComponent&lt;/code&gt; template:</source>
          <target state="translated">通过将以下指令绑定变体添加到 &lt;code&gt;AppComponent&lt;/code&gt; 模板来进行尝试：</target>
        </trans-unit>
        <trans-unit id="bba0e9c4048196d4221aebf3796d5e3371ce4a48" translate="yes" xml:space="preserve">
          <source>Try it by clicking on this &lt;span name=&quot;router&quot;&gt;live example link&lt;/span&gt;.</source>
          <target state="translated">单击此&lt;span name=&quot;router&quot;&gt;实时示例链接&lt;/span&gt;尝试一下。</target>
        </trans-unit>
        <trans-unit id="da8a7f15b67a49c642972b20522557722114e5ed" translate="yes" xml:space="preserve">
          <source>Try it by clicking on this live example link.</source>
          <target state="translated">点击这个活例链接试试。</target>
        </trans-unit>
        <trans-unit id="55391745de289ddef8d65ec34b574ce002c5003d" translate="yes" xml:space="preserve">
          <source>Try it out. Because the array has four items, the message should appear. Go back into &lt;code&gt;app.component.ts&lt;/code&gt; and delete or comment out one of the elements from the heroes array. The browser should refresh automatically and the message should disappear.</source>
          <target state="translated">试试看。因为数组有四个项目，所以应该出现该消息。返回 &lt;code&gt;app.component.ts&lt;/code&gt; 并从heroes数组中删除或注释掉其中一个元素。浏览器应自动刷新，并且消息应消失。</target>
        </trans-unit>
        <trans-unit id="4fbaa8ee9842ab2551d1acf053489f8692c5e0b5" translate="yes" xml:space="preserve">
          <source>Try navigating to a non-existing route on your application, such as &lt;code&gt;http://localhost:4200/powers&lt;/code&gt;. This route doesn't match anything defined in your &lt;code&gt;app.module.ts&lt;/code&gt; file. However, because you defined a wildcard route, the application automatically displays your &lt;code&gt;PageNotFound&lt;/code&gt; component.</source>
          <target state="translated">尝试导航到应用程序上不存在的路由，例如 &lt;code&gt;http://localhost:4200/powers&lt;/code&gt; 。此路由与您的 &lt;code&gt;app.module.ts&lt;/code&gt; 文件中定义的任何内容都不匹配。但是，由于定义了通配符路由，因此该应用程序会自动显示 &lt;code&gt;PageNotFound&lt;/code&gt; 组件。</target>
        </trans-unit>
        <trans-unit id="8d0b56cf0fa53f627bd12835d235587765053dc2" translate="yes" xml:space="preserve">
          <source>Try one of the &quot;3G&quot; speeds.</source>
          <target state="translated">试一试 &quot;3G &quot;的速度。</target>
        </trans-unit>
        <trans-unit id="916d283bcc86820526bcc4f4fbe336d8a152ee13" translate="yes" xml:space="preserve">
          <source>Try setting it to &lt;code&gt;'prefix'&lt;/code&gt; and clicking the &lt;code&gt;Go to sidekicks&lt;/code&gt; button. Since that's a bad URL, you should see the &quot;Page not found&quot; page. Instead, you're still on the &quot;Heroes&quot; page. Enter a bad URL in the browser address bar. You're instantly re-routed to &lt;code&gt;/heroes&lt;/code&gt;. Every URL, good or bad, that falls through to this route definition is a match.</source>
          <target state="translated">尝试将其设置为 &lt;code&gt;'prefix'&lt;/code&gt; ，然后单击&amp;ldquo; &lt;code&gt;Go to sidekicks&lt;/code&gt; 按钮。由于这是一个错误的URL，因此您应该看到&amp;ldquo;找不到页面&amp;rdquo;页面。相反，您仍然在&amp;ldquo;英雄&amp;rdquo;页面上。在浏览器地址栏中输入错误的URL。您立即被重新路由到 &lt;code&gt;/heroes&lt;/code&gt; 。符合此路由定义的每个URL（无论好坏）都是一个匹配项。</target>
        </trans-unit>
        <trans-unit id="dc1ea3e260d075f0697ffb4ad683deb138ba7e53" translate="yes" xml:space="preserve">
          <source>Try setting it to &lt;code&gt;'prefix'&lt;/code&gt; then click the &lt;code&gt;Go to sidekicks&lt;/code&gt; button. Remember that's a bad URL and you should see the &quot;Page not found&quot; page. Instead, you're still on the &quot;Heroes&quot; page. Enter a bad URL in the browser address bar. You're instantly re-routed to &lt;code&gt;/heroes&lt;/code&gt;. &lt;em&gt;Every&lt;/em&gt; URL, good or bad, that falls through to &lt;em&gt;this&lt;/em&gt; route definition will be a match.</source>
          <target state="translated">尝试将其设置为 &lt;code&gt;'prefix'&lt;/code&gt; 然后单击&amp;ldquo; &lt;code&gt;Go to sidekicks&lt;/code&gt; 按钮。请记住，这是一个错误的URL，您应该看到&amp;ldquo;找不到页面&amp;rdquo;页面。相反，您仍在&amp;ldquo;英雄&amp;rdquo;页面上。在浏览器地址栏中输入错误的URL。您立即被重新路由到 &lt;code&gt;/heroes&lt;/code&gt; 。符合&lt;em&gt;此&lt;/em&gt;路由定义的&lt;em&gt;每个&lt;/em&gt; URL（无论好坏）都是一个匹配项。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae0be3b047c4a387d93f02977418e5b637e0c752" translate="yes" xml:space="preserve">
          <source>Try the &quot;Notify Me&quot; button:</source>
          <target state="translated">试试 &quot;通知我 &quot;按钮。</target>
        </trans-unit>
        <trans-unit id="cd0d3f4d9f412d033eddde43a048eb8599b4eed2" translate="yes" xml:space="preserve">
          <source>Try the .</source>
          <target state="translated">试试...</target>
        </trans-unit>
        <trans-unit id="3d6fc4cc6f37c4db0524ee36aee6fae03bc9b160" translate="yes" xml:space="preserve">
          <source>Try the Reactive Forms live-example.</source>
          <target state="translated">试试Reactive Forms实景示例。</target>
        </trans-unit>
        <trans-unit id="1a5c2c2df13a5a08f5ec5e0c77a14b60e0a6f624" translate="yes" xml:space="preserve">
          <source>Try the change detection profiler &lt;code&gt;ng.profiler.timeChangeDetection()&lt;/code&gt; then hit Enter.</source>
          <target state="translated">尝试更改检测分析器 &lt;code&gt;ng.profiler.timeChangeDetection()&lt;/code&gt; ,然后按Enter。</target>
        </trans-unit>
        <trans-unit id="cc82bb7378a7738346274197a65346c4cb1c2791" translate="yes" xml:space="preserve">
          <source>Try the live example.</source>
          <target state="translated">试试现场的例子。</target>
        </trans-unit>
        <trans-unit id="b805dd8f7e3739860d3a0a92f9f360211111283e" translate="yes" xml:space="preserve">
          <source>Try this Reactive Forms live-example.</source>
          <target state="translated">试试这个Reactive Forms实战示例。</target>
        </trans-unit>
        <trans-unit id="b20e64d5a4c330fa2d1e596d27eda1450204275a" translate="yes" xml:space="preserve">
          <source>Try to fetch from the network first.</source>
          <target state="translated">试着先从网络上取。</target>
        </trans-unit>
        <trans-unit id="6f3deed36905b6ad108038ee3fade698b4b61902" translate="yes" xml:space="preserve">
          <source>Try to minimize the heading depth, preferably only two. But more headings, such as this one, are permitted if they make sense.</source>
          <target state="translated">尽量减少标题的深度,最好只有两个标题。但如果有意义的话,可以多用一些标题,比如这个标题。</target>
        </trans-unit>
        <trans-unit id="95d44839b57ad612170554fef51a66c4c2b769e8" translate="yes" xml:space="preserve">
          <source>Try to update webdriver.</source>
          <target state="translated">尝试更新webdriver。</target>
        </trans-unit>
        <trans-unit id="b44892b7f81948b449b1fceb43f8115ba5ff108b" translate="yes" xml:space="preserve">
          <source>Tu</source>
          <target state="translated">Tu</target>
        </trans-unit>
        <trans-unit id="529541bb390c76152e313351d89de3cd30a1c4bd" translate="yes" xml:space="preserve">
          <source>Tue</source>
          <target state="translated">Tue</target>
        </trans-unit>
        <trans-unit id="42e43b612a5dfae57ddf5929f0fb945ae83cbf61" translate="yes" xml:space="preserve">
          <source>Tuesday</source>
          <target state="translated">Tuesday</target>
        </trans-unit>
        <trans-unit id="db9100479b1bab146b0529edf56cd2ecbd2b852d" translate="yes" xml:space="preserve">
          <source>Turns an array of provider definitions into an array of resolved providers.</source>
          <target state="translated">将一个数组的提供者定义转化为一个数组的解析提供者。</target>
        </trans-unit>
        <trans-unit id="383ad3510af7887a34418d15283bb89e03b4bffb" translate="yes" xml:space="preserve">
          <source>Turns on strict Angular compiler flags &lt;a href=&quot;angular-compiler-options#stricttemplates&quot;&gt;&lt;code&gt;strictTemplates&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;angular-compiler-options#strictinjectionparameters&quot;&gt;&lt;code&gt;strictInjectionParameters&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;template-typecheck#troubleshooting-template-errors&quot;&gt;&lt;code&gt;strictInputAccessModifiers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">打开strict Angular编译器标志&lt;a href=&quot;angular-compiler-options#stricttemplates&quot;&gt; &lt;code&gt;strictTemplates&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;angular-compiler-options#strictinjectionparameters&quot;&gt; &lt;code&gt;strictInjectionParameters&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;template-typecheck#troubleshooting-template-errors&quot;&gt; &lt;code&gt;strictInputAccessModifiers&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a8c0b3d0dcf9c1d0944ace8b26766b7619fce7b" translate="yes" xml:space="preserve">
          <source>Turns the li element and its contents into a template, and uses that to instantiate a view for each item in list.</source>
          <target state="translated">将li元素和它的内容变成一个模板,并使用它为list中的每个项目实例化一个视图。</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="67bfe76e19af4ce403f2340d240f7abfa0a85e7e" translate="yes" xml:space="preserve">
          <source>Two injector hierarchies</source>
          <target state="translated">两种注射器层次结构</target>
        </trans-unit>
        <trans-unit id="5af8d4f5f9dae7eb59bd4d8f4f973fff3523e350" translate="yes" xml:space="preserve">
          <source>Two of the three fields on this form are required. Required fields have a green bar on the left to make them easy to spot.</source>
          <target state="translated">本表的三个字段中,有两个是必填字段。必须填写的字段在左边有一个绿色条,以便于识别。</target>
        </trans-unit>
        <trans-unit id="43f3257791f6c0d8e082c7c2a58ae0090aa05789" translate="yes" xml:space="preserve">
          <source>Two older properties are still available, however, their replacements are preferable as they may be deprecated in a future Angular version.</source>
          <target state="translated">两个旧的属性仍然可用,然而,它们的替代物是可取的,因为它们可能在未来的Angular版本中被废弃。</target>
        </trans-unit>
        <trans-unit id="b26194f02c2a9055521cad644dadbcf22c29b12c" translate="yes" xml:space="preserve">
          <source>Two older properties are still available. They are less capable than their replacements, discouraged, and may be deprecated in a future Angular version.</source>
          <target state="translated">两个旧的属性仍然可用。它们的能力不如它们的替代品,不鼓励使用,并且可能在未来的Angular版本中被废弃。</target>
        </trans-unit>
        <trans-unit id="a300f2c0186d270173b20803696a0cf5fd774656" translate="yes" xml:space="preserve">
          <source>Two types of errors can occur.</source>
          <target state="translated">有两种类型的错误可能发生。</target>
        </trans-unit>
        <trans-unit id="c8403b3967903a37a646651f5a30b179b5958e53" translate="yes" xml:space="preserve">
          <source>Two types of errors can occur. The server backend might reject the request, returning an HTTP response with a status code such as 404 or 500. These are error &lt;em&gt;responses&lt;/em&gt;.</source>
          <target state="translated">可能发生两种类型的错误。服务器后端可能会拒绝该请求，并返回带有状态代码（例如404或500）的HTTP &lt;em&gt;响应&lt;/em&gt;。这是错误&lt;em&gt;响应&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ee50a3e68cf100c0537278aede679f485d09b355" translate="yes" xml:space="preserve">
          <source>Two-way</source>
          <target state="translated">Two-way</target>
        </trans-unit>
        <trans-unit id="76e6c5bfb6eaf94684d63dcc6574a58b41d951d1" translate="yes" xml:space="preserve">
          <source>Two-way binding</source>
          <target state="translated">双向装订</target>
        </trans-unit>
        <trans-unit id="a02bb0a1df250e5934cdce63455e1ad4bc4637b6" translate="yes" xml:space="preserve">
          <source>Two-way binding &lt;code&gt;[(...)]&lt;/code&gt;</source>
          <target state="translated">双向绑定 &lt;code&gt;[(...)]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abb2ef9985767c53d9cd9fbf56c7a420e7edf720" translate="yes" xml:space="preserve">
          <source>Two-way binding combines property binding with event binding:</source>
          <target state="translated">双向绑定结合了属性绑定和事件绑定。</target>
        </trans-unit>
        <trans-unit id="0ee8d72f683e98e5e49284a4dbb3c6a8dac3d915" translate="yes" xml:space="preserve">
          <source>Two-way binding does two things:</source>
          <target state="translated">双向绑定有两个作用。</target>
        </trans-unit>
        <trans-unit id="c6d110d5d38ba95a3719301b85f406ad9059aafe" translate="yes" xml:space="preserve">
          <source>Two-way binding gives components in your application a way to share data. Use two-way binding binding to listen for events and update values simultaneously between parent and child components.</source>
          <target state="translated">双向绑定为您的应用程序中的组件提供了一种共享数据的方式。使用双向绑定绑定来监听事件,并在父组件和子组件之间同时更新值。</target>
        </trans-unit>
        <trans-unit id="f559c791fe1735111c9bc3f8318c26c9efdb1820" translate="yes" xml:space="preserve">
          <source>Two-way binding gives your app a way to share data between a component class and its template.</source>
          <target state="translated">双向绑定为您的应用程序提供了一种在组件类和其模板之间共享数据的方式。</target>
        </trans-unit>
        <trans-unit id="03cb506ca909370dd733aa2c43253165731e42ab" translate="yes" xml:space="preserve">
          <source>Two-way binding in forms</source>
          <target state="translated">双向绑定的形式</target>
        </trans-unit>
        <trans-unit id="5d24cacbc734efe855956d91ed8e0797e5f736ba" translate="yes" xml:space="preserve">
          <source>Two-way data binding (used mainly in &lt;a href=&quot;forms&quot;&gt;template-driven forms&lt;/a&gt;) combines property and event binding in a single notation. Here's an example from the &lt;code&gt;HeroDetailComponent&lt;/code&gt; template that uses two-way data binding with the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">双向数据绑定（主要用于&lt;a href=&quot;forms&quot;&gt;模板驱动形式&lt;/a&gt;）将属性和事件绑定组合为一个符号。这是 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 模板中的示例，该示例使用 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 指令使用双向数据绑定。</target>
        </trans-unit>
        <trans-unit id="06f67c15fc229f1a2bb0b3b0ebc852bfedb0de8e" translate="yes" xml:space="preserve">
          <source>Two-way data binding with &lt;code&gt;ngModel&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;ngModel&lt;/code&gt; 进行双向数据绑定</target>
        </trans-unit>
        <trans-unit id="6d973b2b83b53e6c30f5b13acc68a0a0c71e118f" translate="yes" xml:space="preserve">
          <source>Two-way data binding with ngModel</source>
          <target state="translated">使用ngModel进行双向数据绑定。</target>
        </trans-unit>
        <trans-unit id="f52bdefafb9c2ca15e12f66ca83326ece8bda8ce" translate="yes" xml:space="preserve">
          <source>Two-way sequence: &lt;em&gt;view-to-source-to-view&lt;/em&gt;</source>
          <target state="translated">双向顺序：&lt;em&gt;从源到视图&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="abb237ba4f86298e209fd0cde19460f30c5121a4" translate="yes" xml:space="preserve">
          <source>Type &lt;code&gt;ng.&lt;/code&gt; (usually the console will show auto-complete suggestion)</source>
          <target state="translated">输入 &lt;code&gt;ng.&lt;/code&gt; （通常，控制台会显示自动完成建议）</target>
        </trans-unit>
        <trans-unit id="00ec381921f624d45bbd03504823d08111458d72" translate="yes" xml:space="preserve">
          <source>Type annotations can be gradually added to existing functions and variables to pin down their types and get benefits like build-time error checking, great autocompletion support and inline documentation.</source>
          <target state="translated">类型注释可以逐步添加到现有的函数和变量中,以确定它们的类型,并获得诸如构建时错误检查、强大的自动完成支持和内联文档等好处。</target>
        </trans-unit>
        <trans-unit id="35df57064639add6482ba283504c0b41a4d923e6" translate="yes" xml:space="preserve">
          <source>Type enumeration for the different kinds of &lt;code&gt;&lt;a href=&quot;http/httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">为不同类型的 &lt;code&gt;&lt;a href=&quot;http/httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; 进行类型枚举。</target>
        </trans-unit>
        <trans-unit id="67608246c1a184d4c40c268ca1fdc639f618fa7c" translate="yes" xml:space="preserve">
          <source>Type enumeration for the different kinds of &lt;code&gt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">为不同类型的 &lt;code&gt;&lt;a href=&quot;httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; 进行类型枚举。</target>
        </trans-unit>
        <trans-unit id="57c55c58c8644f8a5cbf6770552ae7125d3582e3" translate="yes" xml:space="preserve">
          <source>Type narrowing</source>
          <target state="translated">缩小类型</target>
        </trans-unit>
        <trans-unit id="89c46166d379053b9cc0147e94c74fad24f5cce5" translate="yes" xml:space="preserve">
          <source>Type of the listener (e.g. a native DOM event or a custom @Output).</source>
          <target state="translated">监听器的类型(如本地DOM事件或自定义@Output)。</target>
        </trans-unit>
        <trans-unit id="95d67b98d7690612e1e13d9a3e9a1be2da8d088a" translate="yes" xml:space="preserve">
          <source>Type of the response, narrowed to either the full response or the header.</source>
          <target state="translated">响应的类型,缩小到完整的响应或头。</target>
        </trans-unit>
        <trans-unit id="c05540b14b3733e314b2c94793826ae9c2b0627e" translate="yes" xml:space="preserve">
          <source>Type something in the input box, and watch the display update with each keystroke.</source>
          <target state="translated">在输入框中输入一些东西,然后看着显示屏随着每个按键的更新而更新。</target>
        </trans-unit>
        <trans-unit id="33ab71a8dcc6216b348bea2620429ad622b3147d" translate="yes" xml:space="preserve">
          <source>Type the &lt;code&gt;$event&lt;/code&gt;</source>
          <target state="translated">输入 &lt;code&gt;$event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01e12f16a8da430c9b64b2d92b35b38ac6541548" translate="yes" xml:space="preserve">
          <source>Type used for modifications to metadata</source>
          <target state="translated">用于修改元数据的类型</target>
        </trans-unit>
        <trans-unit id="5173fdf6f5703224da499d4346fe617ae8193603" translate="yes" xml:space="preserve">
          <source>Type-ahead suggestions</source>
          <target state="translated">前期建议</target>
        </trans-unit>
        <trans-unit id="9c733ffadf4f948ba611c69673474803d64d1601" translate="yes" xml:space="preserve">
          <source>TypeDecorator</source>
          <target state="translated">TypeDecorator</target>
        </trans-unit>
        <trans-unit id="e6711bda99893016ef166d44941fe0aeec10d722" translate="yes" xml:space="preserve">
          <source>TypeProvider</source>
          <target state="translated">TypeProvider</target>
        </trans-unit>
        <trans-unit id="d4a86cb946d4af4766f6a695502b64f3ea0cd58b" translate="yes" xml:space="preserve">
          <source>TypeScript</source>
          <target state="translated">TypeScript</target>
        </trans-unit>
        <trans-unit id="27fa45a5f3c8fb13fa7acab3ba38cabe780416f0" translate="yes" xml:space="preserve">
          <source>TypeScript 3.9 is no longer supported. Please update to TypeScript 4.0. See &lt;a href=&quot;https://github.com/angular/angular/pull/39313&quot;&gt;PR 39313&lt;/a&gt;.</source>
          <target state="translated">不再支持TypeScript 3.9。请更新为TypeScript 4.0。参见&lt;a href=&quot;https://github.com/angular/angular/pull/39313&quot;&gt;PR 39313&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eea2f4b377967e9066abaa29b6c1756fe6ff90ed" translate="yes" xml:space="preserve">
          <source>TypeScript Configuration</source>
          <target state="translated">TypeScript配置</target>
        </trans-unit>
        <trans-unit id="d08f0fbcc73c7306dc8d1fd2df1b684771e05b98" translate="yes" xml:space="preserve">
          <source>TypeScript Typings</source>
          <target state="translated">TypeScript打字法</target>
        </trans-unit>
        <trans-unit id="070cfc661eff3e856be58ff916c3d3780369f7f1" translate="yes" xml:space="preserve">
          <source>TypeScript and HTML5 programming.</source>
          <target state="translated">TypeScript和HTML5编程。</target>
        </trans-unit>
        <trans-unit id="e31ca1750956f6690f31bf9cdae28a7deb46de6e" translate="yes" xml:space="preserve">
          <source>TypeScript configuration</source>
          <target state="translated">TypeScript配置</target>
        </trans-unit>
        <trans-unit id="568ece999d38f89aa19bccbc22c354f6f68a64b1" translate="yes" xml:space="preserve">
          <source>TypeScript configuration In the TypeScript configuration file, &lt;code&gt;tsconfig.json&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;compilerOptions&lt;/code&gt; section determines the ECMAScript target version that the code is compiled to. Modern browsers support ES2015 natively, while ES5 is more commonly used to support legacy browsers.</source>
          <target state="translated">打字稿配置了打字稿配置文件， &lt;code&gt;tsconfig.json&lt;/code&gt; ，所述 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;compilerOptions&lt;/code&gt; 部分确定的ECMAScript目标版本的代码被编译成。现代浏览器本身支持ES2015，而ES5更常用于支持旧版浏览器。</target>
        </trans-unit>
        <trans-unit id="4498390d814c37edb18467aa0deb8da7899b4db8" translate="yes" xml:space="preserve">
          <source>TypeScript configuration file</source>
          <target state="translated">TypeScript配置文件</target>
        </trans-unit>
        <trans-unit id="b1e9557f6d0130ab631bf37ddceaa7ef43c0683e" translate="yes" xml:space="preserve">
          <source>TypeScript configuration for Web Worker modules.</source>
          <target state="translated">Web Worker模块的TypeScript配置。</target>
        </trans-unit>
        <trans-unit id="ffe80e00ee1ac5833b065ce121ce10c3b973c059" translate="yes" xml:space="preserve">
          <source>TypeScript definition files for 3rd party libraries such as Jasmine and Node.js.</source>
          <target state="translated">第三方库的TypeScript定义文件,如Jasmine和Node.js。</target>
        </trans-unit>
        <trans-unit id="0b3cb1f49429cb05d8a3b0bcacdfe5ff715b318e" translate="yes" xml:space="preserve">
          <source>TypeScript developers disagree about whether the &lt;code&gt;noImplicitAny&lt;/code&gt; flag should be &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. There is no correct answer and you can change the flag later. But your choice now can make a difference in larger projects, so it merits discussion.</source>
          <target state="translated">TypeScript开发人员不同意 &lt;code&gt;noImplicitAny&lt;/code&gt; 标志应为 &lt;code&gt;true&lt;/code&gt; 还是 &lt;code&gt;false&lt;/code&gt; 。没有正确的答案，您可以稍后更改标志。但是您现在的选择可以在较大的项目中有所作为，因此值得讨论。</target>
        </trans-unit>
        <trans-unit id="2ac9ee6e703b108a7d6fb03a16a6d571742ddf64" translate="yes" xml:space="preserve">
          <source>TypeScript execution environment and REPL for Node.js.</source>
          <target state="translated">Node.js的TypeScript执行环境和REPL。</target>
        </trans-unit>
        <trans-unit id="e285eb073cfe4ca1656c07087772b6ee1156351a" translate="yes" xml:space="preserve">
          <source>TypeScript includes a special declaration file called &lt;code&gt;lib.d.ts&lt;/code&gt;. This file contains the ambient declarations for various common JavaScript constructs present in JavaScript runtimes and the DOM.</source>
          <target state="translated">打字稿包括所谓的特殊声明文件 &lt;code&gt;lib.d.ts&lt;/code&gt; 。该文件包含JavaScript运行时和DOM中存在的各种常见JavaScript结构的环境声明。</target>
        </trans-unit>
        <trans-unit id="d17e05e344ecb4e3225929fb6a865b40d4814eb9" translate="yes" xml:space="preserve">
          <source>TypeScript is a primary language for Angular application development. It is a superset of JavaScript with design-time support for type safety and tooling.</source>
          <target state="translated">TypeScript是Angular应用开发的主要语言。它是JavaScript的超集,在设计时支持类型安全和工具。</target>
        </trans-unit>
        <trans-unit id="2c8995564b3de9df5c51483595738fe4422b297b" translate="yes" xml:space="preserve">
          <source>TypeScript is the preferred language for Angular development. Read more about TypeScript at &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;typescriptlang.org&lt;/a&gt;.</source>
          <target state="translated">TypeScript是Angular开发的首选语言。在&lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;typescriptlang.org上&lt;/a&gt;了解有关TypeScript的更多信息。</target>
        </trans-unit>
        <trans-unit id="a170b4fe7d8f7b7df6601a27db35b66b7e630df2" translate="yes" xml:space="preserve">
          <source>TypeScript is the preferred language for Angular development. Read more about TypeScript at &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;typescriptlang.org&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65fd758bf6b72b6902912683c0db7c87ad16849d" translate="yes" xml:space="preserve">
          <source>TypeScript prevents you from setting &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; read-only properties.</source>
          <target state="translated">TypeScript阻止您设置 &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 只读属性。</target>
        </trans-unit>
        <trans-unit id="b0c307b7f89ffd82733eec999738292acbded4fe" translate="yes" xml:space="preserve">
          <source>TypeScript programming</source>
          <target state="translated">TypeScript编程</target>
        </trans-unit>
        <trans-unit id="b1f5cc716c4de2a81ea99f71b78e0b5afc34aa22" translate="yes" xml:space="preserve">
          <source>TypeScript programming.</source>
          <target state="translated">TypeScript编程。</target>
        </trans-unit>
        <trans-unit id="9363321037561d15481258cee32b0a8aa362ef21" translate="yes" xml:space="preserve">
          <source>TypeScript typings</source>
          <target state="translated">TypeScript输入法</target>
        </trans-unit>
        <trans-unit id="13b49b13fb502567852c984e23e397ba1fe80b3a" translate="yes" xml:space="preserve">
          <source>TypeScript understands ambient types so you don't import them. The Angular compiler does not understand a type that you neglect to export or import.</source>
          <target state="translated">TypeScript能理解环境类型,所以你不需要导入它们。Angular编译器不理解你忽略导出或导入的类型。</target>
        </trans-unit>
        <trans-unit id="77e137f60887b3a3c13ebdb09dee2d2b67d890c4" translate="yes" xml:space="preserve">
          <source>TypeScript will prevent you from setting &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; readonly properties.</source>
          <target state="translated">TypeScript将阻止您设置 &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 只读属性。</target>
        </trans-unit>
        <trans-unit id="717ede79628ca336772d228c8b05e09de2a3a0c2" translate="yes" xml:space="preserve">
          <source>TypeScript-aware editors leverage these same definition files to display type information about library features.</source>
          <target state="translated">TypeScript-aware编辑器利用这些相同的定义文件来显示库特征的类型信息。</target>
        </trans-unit>
        <trans-unit id="7118d9e8c875a30ba644adcfe209053d423d1da0" translate="yes" xml:space="preserve">
          <source>Typed Array</source>
          <target state="translated">类型化阵列</target>
        </trans-unit>
        <trans-unit id="7ab3c88469253783493694d6963d80d7a8308f54" translate="yes" xml:space="preserve">
          <source>Typed according to the expected type of the response.</source>
          <target state="translated">根据反应的预期类型打字。</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="c713e3cd5c50ec234c9ce6d04250d694a2a4d577" translate="yes" xml:space="preserve">
          <source>Types defined in a &lt;code&gt;@types/&lt;/code&gt; package for a library installed into the workspace are automatically added to the TypeScript configuration for the project that uses that library. TypeScript looks for types in the &lt;code&gt;node_modules/@types&lt;/code&gt; folder by default, so you don't have to add each type package individually.</source>
          <target state="translated">在 &lt;code&gt;@types/&lt;/code&gt; 包中为安装在工作区中的库定义的类型会自动添加到使用该库的项目的TypeScript配置中。默认情况下，TypeScript在 &lt;code&gt;node_modules/@types&lt;/code&gt; 文件夹中查找类型，因此您不必单独添加每个类型包。</target>
        </trans-unit>
        <trans-unit id="82d702d4bc4170c7fef9f79cddd0b3758d5bd6d0" translate="yes" xml:space="preserve">
          <source>Types for many Angular built-in pipes have been either narrowed or expanded to be more accurate. For more information, see the corresponding &lt;a href=&quot;../api?type=pipe&quot;&gt;Pipes&lt;/a&gt; API documentation. See &lt;a href=&quot;https://github.com/angular/angular/pull/37447&quot;&gt;PR 37447&lt;/a&gt;.</source>
          <target state="translated">许多Angular内置管道的类型已缩小或扩展以更精确。有关更多信息，请参见相应的&lt;a href=&quot;../api?type=pipe&quot;&gt;Pipes&lt;/a&gt; API文档。参见&lt;a href=&quot;https://github.com/angular/angular/pull/37447&quot;&gt;PR 37447&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12392cbc3086f77e04a6c62a73c887b3f9c633d6" translate="yes" xml:space="preserve">
          <source>Types of Feature Modules</source>
          <target state="translated">功能模块的类型</target>
        </trans-unit>
        <trans-unit id="118122abcc89881e0578f9aef369355356986b9f" translate="yes" xml:space="preserve">
          <source>Types of NgModules</source>
          <target state="translated">NgModules的类型</target>
        </trans-unit>
        <trans-unit id="11fe3760894bbd3efef56cd08f43a7f909233a1d" translate="yes" xml:space="preserve">
          <source>Types of modifiers</source>
          <target state="translated">修饰语的类型</target>
        </trans-unit>
        <trans-unit id="0ef8a95f38c50052d0013209588f9bd78801e33d" translate="yes" xml:space="preserve">
          <source>Typically new embedded views are attached to the view container of this location, but in advanced use-cases, the view can be attached to a different container while keeping the data-binding and injection context from the original location.</source>
          <target state="translated">通常,新的嵌入式视图被附加到这个位置的视图容器上,但在高级使用情况下,视图可以被附加到不同的容器上,同时保留原始位置的数据绑定和注入上下文。</target>
        </trans-unit>
        <trans-unit id="2c7b40120f45df1933863f5ac01d78ac42ee438a" translate="yes" xml:space="preserve">
          <source>Typically, animations involve multiple style &lt;em&gt;transformations&lt;/em&gt; over time. An HTML element can move, change color, grow or shrink, fade, or slide off the page. These changes can occur simultaneously or sequentially. You can control the timing of each transformation.</source>
          <target state="translated">通常，动画会随着时间的推移涉及多种样式&lt;em&gt;转换&lt;/em&gt;。HTML元素可以移动，更改颜色，增大或缩小，淡入淡出或滑出页面。这些变化可以同时发生，也可以依次发生。您可以控制每个转换的时间。</target>
        </trans-unit>
        <trans-unit id="b5fb32f38245ff9f2d99b2dd935857d879ebced7" translate="yes" xml:space="preserve">
          <source>Typically, the name of a generated artifact can be given as an argument to the command or specified with the --name option.</source>
          <target state="translated">通常情况下,生成的人工制品的名称可以作为命令的一个参数,或者用--name选项指定。</target>
        </trans-unit>
        <trans-unit id="b95554d848ef81d79b0b709dc7f5aaeb34a12474" translate="yes" xml:space="preserve">
          <source>Typically, you add a TypeScript configuration file called &lt;code&gt;tsconfig.json&lt;/code&gt; to your project to guide the compiler as it generates JavaScript files.</source>
          <target state="translated">通常，您将一个名为 &lt;code&gt;tsconfig.json&lt;/code&gt; 的TypeScript配置文件添加到您的项目中，以指导编译器生成JavaScript文件。</target>
        </trans-unit>
        <trans-unit id="09553776cac966b88a445abac2c889e11456f99a" translate="yes" xml:space="preserve">
          <source>Typing the directive's context</source>
          <target state="translated">输入指令的上下文</target>
        </trans-unit>
        <trans-unit id="a0bd1a75c0172c79f7c9ff6dc164b3a599561a53" translate="yes" xml:space="preserve">
          <source>Typing the event object reveals a significant objection to passing the entire DOM event into the method: the component has too much awareness of the template details. It can't extract information without knowing more than it should about the HTML implementation. That breaks the separation of concerns between the template (&lt;em&gt;what the user sees&lt;/em&gt;) and the component (&lt;em&gt;how the application processes user data&lt;/em&gt;).</source>
          <target state="translated">键入事件对象揭示了将整个DOM事件传递到方法中的重大反对：该组件对模板详细信息的了解过多。如果不了解HTML实现，它就无法提取信息。这打破了模板（&lt;em&gt;用户看到的内容&lt;/em&gt;）和组件（&lt;em&gt;应用程序如何处理用户数据&lt;/em&gt;）之间的关注点分离。</target>
        </trans-unit>
        <trans-unit id="480af6c7beed3c898f5f1f02a7bf65dedf1b38cc" translate="yes" xml:space="preserve">
          <source>Typings for custom elements</source>
          <target state="translated">自定义元素的类型</target>
        </trans-unit>
        <trans-unit id="20bdf90100bc0696258702c718f92a1b02cab2b8" translate="yes" xml:space="preserve">
          <source>UPPER_UNDERSCORE_CASE (or UPPER_SNAKE_CASE, or SCREAMING_SNAKE_CASE): Traditional for constants (acceptable, but prefer camelCase). Upper snake case uses words in all capital letters connected with underscores. For example, &quot;FIX_ME&quot;.</source>
          <target state="translated">UPPER_UNDERSCORE_CASE(或UPPER_SNAKE_CASE,或SCREAMING_SNAKE_CASE)。传统的常量(可以接受,但更喜欢骆驼大小写)。上蛇形大写使用所有大写字母与下划线相连的单词。例如,&quot;FIX_ME&quot;。</target>
        </trans-unit>
        <trans-unit id="a27c9c50aeeb496cbd6ae8eb92bcc77112bfe9fd" translate="yes" xml:space="preserve">
          <source>URL of the resource retrieved, or null if not available.</source>
          <target state="translated">检索到的资源的URL,如果没有,则为空。</target>
        </trans-unit>
        <trans-unit id="f65f44308f1ade7cb98e9a6130f17b75f1c7965f" translate="yes" xml:space="preserve">
          <source>URL path to normalize.</source>
          <target state="translated">要规范化的URL路径。</target>
        </trans-unit>
        <trans-unit id="c774e36c8a233fe47b885d57e6f9250be88a291c" translate="yes" xml:space="preserve">
          <source>URL query strings</source>
          <target state="translated">URL查询字符串</target>
        </trans-unit>
        <trans-unit id="ab8c3d3d9bc2c2c289a7a884d43b797a116cdf17" translate="yes" xml:space="preserve">
          <source>URL string</source>
          <target state="translated">URL字符串</target>
        </trans-unit>
        <trans-unit id="6415e7db453017765698b94a474b0ba310523c13" translate="yes" xml:space="preserve">
          <source>URL string.</source>
          <target state="translated">URL字符串。</target>
        </trans-unit>
        <trans-unit id="6229662eaa903e67f2ed0f1353e8aa463aa6f79f" translate="yes" xml:space="preserve">
          <source>URL where files will be deployed.</source>
          <target state="translated">部署文件的URL。</target>
        </trans-unit>
        <trans-unit id="b19e8d66e7f004e226c44a75766dadab7d09911a" translate="yes" xml:space="preserve">
          <source>URLSearchParams</source>
          <target state="translated">URLSearchParams</target>
        </trans-unit>
        <trans-unit id="82ec40ec287dfe6afdf2c04f8ac45df9a5b41f73" translate="yes" xml:space="preserve">
          <source>Uglification: rewrites code to use short, cryptic variable and function names.</source>
          <target state="translated">Uglification:重写代码,使用简短、神秘的变量和函数名。</target>
        </trans-unit>
        <trans-unit id="dec6154649e20b8a4f868f22a0c2826a4a662d9a" translate="yes" xml:space="preserve">
          <source>Ugly, long section header anchors</source>
          <target state="translated">丑陋的长节头锚</target>
        </trans-unit>
        <trans-unit id="3698e121e629257a193cc1ee0ba5707f90dd1040" translate="yes" xml:space="preserve">
          <source>UiArguments</source>
          <target state="translated">UiArguments</target>
        </trans-unit>
        <trans-unit id="0368218af0bd6062b199bada30a6e4035b16a7cb" translate="yes" xml:space="preserve">
          <source>Unable to find a parent by its base class</source>
          <target state="translated">无法通过其基类找到父类。</target>
        </trans-unit>
        <trans-unit id="fe8512cc65af8cf880d1c2bbb10e3cf1f64d86cd" translate="yes" xml:space="preserve">
          <source>Unbound inputs for directives (e.g. name in &lt;code&gt;&amp;lt;my-comp name=&quot;&quot;&amp;gt;&lt;/code&gt;) are now set upon creation of the view, before change detection runs (previously, all inputs were set during change detection).</source>
          <target state="translated">指令的未绑定输入（例如， &lt;code&gt;&amp;lt;my-comp name=&quot;&quot;&amp;gt;&lt;/code&gt; ）现在在更改检测运行之前就已在视图创建时设置（以前，所有输入都是在更改检测期间设置的）。</target>
        </trans-unit>
        <trans-unit id="0585362025afaad2cb556c1470ca13de2ec4b0c6" translate="yes" xml:space="preserve">
          <source>Under the &lt;code&gt;projects/&lt;/code&gt; folder, the &lt;code&gt;my-lib&lt;/code&gt; folder contains your library code.</source>
          <target state="translated">在 &lt;code&gt;projects/&lt;/code&gt; 文件夹下， &lt;code&gt;my-lib&lt;/code&gt; 文件夹包含您的库代码。</target>
        </trans-unit>
        <trans-unit id="4b9ec3e5288ad1a146764809c08b172bb0ce4e69" translate="yes" xml:space="preserve">
          <source>Underlying strategy used by the NgElement to create/destroy the component and react to input changes.</source>
          <target state="translated">NgElement用来创建/销毁组件并对输入变化做出反应的基本策略。</target>
        </trans-unit>
        <trans-unit id="406a6ce1fa7023e50b1cd5fc217aed691fc4469a" translate="yes" xml:space="preserve">
          <source>Understanding the flow of data</source>
          <target state="translated">了解数据流</target>
        </trans-unit>
        <trans-unit id="afd606b1b8fa2ecceb75d550cab8b8e4f51e46bf" translate="yes" xml:space="preserve">
          <source>Understanding the idea of the &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; demarcation is especially significant when you configure services in the component class.</source>
          <target state="translated">在组件类中配置服务时，理解 &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 划分的思想特别重要。</target>
        </trans-unit>
        <trans-unit id="4f597440e2efa26501d9e6fdf63a407e19ac4158" translate="yes" xml:space="preserve">
          <source>Understanding the underlying logical structure of the Angular template will give you a foundation for configuring services and in turn control their visibility.</source>
          <target state="translated">了解Angular模板的底层逻辑结构,将为你配置服务并进而控制其可见性打下基础。</target>
        </trans-unit>
        <trans-unit id="824952b55c3b4916ed165e11642a01333e88585f" translate="yes" xml:space="preserve">
          <source>Understanding this component requires only the Angular concepts covered in previous pages.</source>
          <target state="translated">理解这个组件只需要前面几页中覆盖的Angular概念。</target>
        </trans-unit>
        <trans-unit id="b0c0452cb24336e8190f9828a028e109b51bace3" translate="yes" xml:space="preserve">
          <source>Unfortunately, &lt;code&gt;ngOnInit&lt;/code&gt; is only called once per component instantiation. You need a way to detect when the route parameters change from &lt;em&gt;within the same instance&lt;/em&gt;. The observable &lt;code&gt;paramMap&lt;/code&gt; property handles that beautifully.</source>
          <target state="translated">不幸的是，每个组件实例仅调用一次 &lt;code&gt;ngOnInit&lt;/code&gt; 。您需要一种方法来检测何时&lt;em&gt;在同一实例中&lt;/em&gt;更改路由参数。可观察的 &lt;code&gt;paramMap&lt;/code&gt; 属性可以很好地处理它。</target>
        </trans-unit>
        <trans-unit id="d3ef861886f3ab5ce3796bed96c86f8269cc8b32" translate="yes" xml:space="preserve">
          <source>Unfortunately, Angular cannot inject the &lt;code&gt;HeroService&lt;/code&gt; directly into the base class. You must provide the &lt;code&gt;HeroService&lt;/code&gt; again for &lt;em&gt;this&lt;/em&gt; component, then pass it down to the base class inside the constructor.</source>
          <target state="translated">不幸的是，Angular无法将 &lt;code&gt;HeroService&lt;/code&gt; 直接注入基类。您必须再次&lt;em&gt;为此&lt;/em&gt;组件提供 &lt;code&gt;HeroService&lt;/code&gt; ，然后将其传递给构造函数内部的基类。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1139beaeaa7d4f3a71b279c04ed1135ac0675787" translate="yes" xml:space="preserve">
          <source>Unfortunately, AngularJS dependencies are not automatically available to Angular components. You must upgrade this service via a &lt;a href=&quot;upgrade#making-angularjs-dependencies-injectable-to-angular&quot;&gt;factory provider&lt;/a&gt; to make &lt;code&gt;$routeParams&lt;/code&gt; an Angular injectable. Do that in a new file called &lt;code&gt;ajs-upgraded-providers.ts&lt;/code&gt; and import it in &lt;code&gt;app.module.ts&lt;/code&gt;:</source>
          <target state="translated">不幸的是，AngularJS依赖项不能自动用于Angular组件。您必须通过&lt;a href=&quot;upgrade#making-angularjs-dependencies-injectable-to-angular&quot;&gt;工厂提供商&lt;/a&gt;升级此服务，以使 &lt;code&gt;$routeParams&lt;/code&gt; 成为Angular可注射的。在名为 &lt;code&gt;ajs-upgraded-providers.ts&lt;/code&gt; 的新文件中执行此操作，然后将其导入 &lt;code&gt;app.module.ts&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="4e7ab2a4cdcc53a9daa1be69012bf4487cc99281" translate="yes" xml:space="preserve">
          <source>Unfortunately, it's easy to mistakenly create invalid JSON that way. The preferred way is to create a JSON partial file with the fragment you want to display.</source>
          <target state="translated">不幸的是,这种方式很容易错误地创建无效的JSON。首选的方法是用你要显示的片段创建一个JSON部分文件。</target>
        </trans-unit>
        <trans-unit id="0867a551d468c9cf54a4c9bf87311fc791c6fddc" translate="yes" xml:space="preserve">
          <source>Unfortunately, this doesn't work. The  confirms that the &lt;code&gt;alex&lt;/code&gt; parameter is null. &lt;em&gt;You cannot inject a parent by its base class.&lt;/em&gt;</source>
          <target state="translated">不幸的是，这行不通。确认 &lt;code&gt;alex&lt;/code&gt; 参数为null。&lt;em&gt;您不能通过其基类注入父对象。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a68c075bb4d2b8034dd50549a21ce7d7c5111785" translate="yes" xml:space="preserve">
          <source>Unhashed content</source>
          <target state="translated">未清洗的内容</target>
        </trans-unit>
        <trans-unit id="ae46bafe22f6a8888ae9109a8ce0be4fb84797fc" translate="yes" xml:space="preserve">
          <source>Unicode locale identifiers</source>
          <target state="translated">本地Unicode标识符</target>
        </trans-unit>
        <trans-unit id="4fab6ba13e9a4725c7f55ea2ec290c22e51d62b3" translate="yes" xml:space="preserve">
          <source>Union type for all possible events on the response stream.</source>
          <target state="translated">响应流上所有可能事件的联合类型。</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">单元测试</target>
        </trans-unit>
        <trans-unit id="db8942af8190970c5de3a92510cbcaccdbfc8120" translate="yes" xml:space="preserve">
          <source>Unit test file names</source>
          <target state="translated">单位测试文件名</target>
        </trans-unit>
        <trans-unit id="29d1c928f5bc2da434acc08d22662b06b1e6a793" translate="yes" xml:space="preserve">
          <source>Unit tests are located side-by-side with application code where they are easily found, as described in the rules for &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#organizing-tests&quot;&gt;Organizing Tests&lt;/a&gt;.</source>
          <target state="translated">单元测试与应用程序代码并排放置，可以轻松找到它们，如&lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#organizing-tests&quot;&gt;组织测试&lt;/a&gt;规则中所述。</target>
        </trans-unit>
        <trans-unit id="d02603176f8822a40aaa5b4270e49934a7f83824" translate="yes" xml:space="preserve">
          <source>Universal</source>
          <target state="translated">Universal</target>
        </trans-unit>
        <trans-unit id="aff10513c0d4453b031e927d20f60a376e5f4fbf" translate="yes" xml:space="preserve">
          <source>Universal applications use the Angular &lt;code&gt;platform-server&lt;/code&gt; package (as opposed to &lt;code&gt;platform-browser&lt;/code&gt;), which provides server implementations of the DOM, &lt;code&gt;XMLHttpRequest&lt;/code&gt;, and other low-level features that don't rely on a browser.</source>
          <target state="translated">通用应用程序使用Angular &lt;code&gt;platform-server&lt;/code&gt; 程序包（与 &lt;code&gt;platform-browser&lt;/code&gt; 相反），该程序包提供DOM， &lt;code&gt;XMLHttpRequest&lt;/code&gt; 和其他不依赖浏览器的低级功能的服务器实现。</target>
        </trans-unit>
        <trans-unit id="1b3d6e5815238e0752a3fe0b7b98c0c2d1361792" translate="yes" xml:space="preserve">
          <source>Universal in action</source>
          <target state="translated">通用在行动</target>
        </trans-unit>
        <trans-unit id="dfa8fc69d23bd49ebc9a6555c9504f90cf88d7d1" translate="yes" xml:space="preserve">
          <source>Universal template engine</source>
          <target state="translated">通用模板引擎</target>
        </trans-unit>
        <trans-unit id="8a007210f1fae1f94e3d5f08f71db96b4634231f" translate="yes" xml:space="preserve">
          <source>Universal tutorial</source>
          <target state="translated">通用教程</target>
        </trans-unit>
        <trans-unit id="7128eb1919baae98fa34b937a937468e6cef52dd" translate="yes" xml:space="preserve">
          <source>Universal web servers</source>
          <target state="translated">通用网络服务器</target>
        </trans-unit>
        <trans-unit id="4c8eeb97df443eae9c961beeb83622d6ee4e82cc" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, all code snippets in this page are derived from sample source code located in the &lt;code&gt;content/examples/docs-style-guide&lt;/code&gt; directory.</source>
          <target state="translated">除非另有说明，否则此页面中的所有代码段均来自位于 &lt;code&gt;content/examples/docs-style-guide&lt;/code&gt; 目录中的示例源代码。</target>
        </trans-unit>
        <trans-unit id="c6cf3859698e15c5299392bec7dbb52c091995b6" translate="yes" xml:space="preserve">
          <source>Unless otherwise noted, patterns use a limited glob format:</source>
          <target state="translated">除非另有说明,否则模式使用有限的 glob 格式。</target>
        </trans-unit>
        <trans-unit id="aee4b6356253d8d620e3f11e4e7bc8c515a04ba8" translate="yes" xml:space="preserve">
          <source>Unless you are fluent in the language and have the time to edit translations, you would likely send each translation file to a translator, who would then use an XLIFF file editor to create and edit the translation.</source>
          <target state="translated">除非您精通该语言,并且有时间编辑翻译,否则您可能会将每个翻译文件发送给译员,然后译员会使用XLIFF文件编辑器来创建和编辑翻译。</target>
        </trans-unit>
        <trans-unit id="997a0eb0ed95f2be66009dfc632a3a65cd86399d" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; does not automatically run a &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/%24rootScope.Scope#%24digest&quot;&gt;$digest()&lt;/a&gt; when changes are detected in the Angular part of the application.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 不同，当在应用程序的Angular部分中检测到更改时， &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 不会自动运行&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/%24rootScope.Scope#%24digest&quot;&gt;$ digest（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2a526d27ea3191a1868165ff807c75c16ebcdfe" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; does not bootstrap the main AngularJS module inside the &lt;a href=&quot;../../core/ngzone&quot;&gt;Angular zone&lt;/a&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 不同， &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 不会在&lt;a href=&quot;../../core/ngzone&quot;&gt;Angular区域&lt;/a&gt;内引导主要的AngularJS模块。</target>
        </trans-unit>
        <trans-unit id="b662d56928e588ac496f4c10d2baf470830bd906" translate="yes" xml:space="preserve">
          <source>Unlike &lt;em&gt;Hero Detail&lt;/em&gt;, which updates as you type, &lt;em&gt;Crisis Detail&lt;/em&gt; changes are temporary until you either save or discard them by pressing the &quot;Save&quot; or &quot;Cancel&quot; buttons. Both buttons navigate back to the &lt;em&gt;Crisis Center&lt;/em&gt; and its list of crises.</source>
          <target state="translated">与&lt;em&gt;Hero Detail&lt;/em&gt;不同，后者随您键入而更新，&lt;em&gt;危机详细信息&lt;/em&gt;更改是暂时的，直到您通过按&amp;ldquo;保存&amp;rdquo;或&amp;ldquo;取消&amp;rdquo;按钮保存或丢弃它们。这两个按钮都导航回到&lt;em&gt;危机中心&lt;/em&gt;及其危机列表。</target>
        </trans-unit>
        <trans-unit id="17cc853061da6fd12dc97c043a57e14e493a031e" translate="yes" xml:space="preserve">
          <source>Unlike JavaScript modules, an NgModule can extend the &lt;em&gt;entire&lt;/em&gt; application with services by adding providers to the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; list.</source>
          <target state="translated">与JavaScript模块不同，NgModule可以通过将提供程序添加到 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;列表中来扩展&lt;em&gt;整个&lt;/em&gt;应用程序的服务。</target>
        </trans-unit>
        <trans-unit id="c061fb170ebb3deb768717f260b104981728d5c0" translate="yes" xml:space="preserve">
          <source>Unlike JavaScript, which uses strict equality, Angular uses loose equality. This means that the empty string, &lt;code&gt;&quot;&quot;&lt;/code&gt; matches 0.</source>
          <target state="translated">与使用严格相等的JavaScript不同，Angular使用宽松相等。这意味着空字符串 &lt;code&gt;&quot;&quot;&lt;/code&gt; 匹配0。</target>
        </trans-unit>
        <trans-unit id="d12281a35071e2f70968ecec4a88ccf48823d979" translate="yes" xml:space="preserve">
          <source>Unlike asset resources, data requests are not versioned along with the app. They're cached according to manually-configured policies that are more useful for situations such as API requests and other data dependencies.</source>
          <target state="translated">与资产资源不同的是,数据请求不会随着应用进行版本调整。它们会根据手动配置的策略进行缓存,这些策略对于API请求和其他数据依赖等情况更有用。</target>
        </trans-unit>
        <trans-unit id="883ea145ab160985399b62f775b21393220f3076" translate="yes" xml:space="preserve">
          <source>Unlike providers of the modules loaded at launch, providers of lazy-loaded modules are &lt;em&gt;module-scoped&lt;/em&gt;.</source>
          <target state="translated">与启动时加载的模块的提供程序不同，延迟加载的模块的提供程序具有&lt;em&gt;模块作用域&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2dccdc1ebcf214c2d4a6f553b10ed989603c0757" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;template-expression-operators#safe-navigation-operator&quot;&gt;&lt;em&gt;safe navigation operator&lt;/em&gt;&lt;/a&gt;, the non-null assertion operator does not guard against &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Rather, it tells the TypeScript type checker to suspend strict &lt;code&gt;null&lt;/code&gt; checks for a specific property expression.</source>
          <target state="translated">与&lt;a href=&quot;template-expression-operators#safe-navigation-operator&quot;&gt;&lt;em&gt;安全导航运算符&lt;/em&gt;&lt;/a&gt;不同，非null断言运算符不能防止 &lt;code&gt;null&lt;/code&gt; 或 &lt;code&gt;undefined&lt;/code&gt; 。相反，它告诉TypeScript类型检查器针对特定的属性表达式暂停严格的 &lt;code&gt;null&lt;/code&gt; 检查。</target>
        </trans-unit>
        <trans-unit id="b6f5e363e9f262e106ea06e2709ebaf828ae9100" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;template-syntax#safe-navigation-operator&quot;&gt;&lt;em&gt;safe navigation operator&lt;/em&gt;&lt;/a&gt;, the non-null assertion operator does not guard against &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Rather, it tells the TypeScript type checker to suspend strict &lt;code&gt;null&lt;/code&gt; checks for a specific property expression.</source>
          <target state="translated">与&lt;a href=&quot;template-syntax#safe-navigation-operator&quot;&gt;&lt;em&gt;安全导航运算符&lt;/em&gt;&lt;/a&gt;不同，非null断言运算符不能防止 &lt;code&gt;null&lt;/code&gt; 或 &lt;code&gt;undefined&lt;/code&gt; 。相反，它告诉TypeScript类型检查器针对特定的属性表达式暂停严格的 &lt;code&gt;null&lt;/code&gt; 检查。</target>
        </trans-unit>
        <trans-unit id="ce32abfca7ffb38db90e5d8d87ed729993c1551e" translate="yes" xml:space="preserve">
          <source>Unlike the native &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element, the &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; directive has a &lt;code&gt;form&lt;/code&gt; property. The &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt;&lt;code&gt;form&lt;/code&gt; property allows you to disable the submit button if the &lt;code&gt;itemForm.form.valid&lt;/code&gt; is invalid.</source>
          <target state="translated">与本机 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 元素不同， &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; 指令具有 &lt;code&gt;form&lt;/code&gt; 属性。该 &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; &lt;code&gt;form&lt;/code&gt; 属性，可以禁用提交按钮，如果 &lt;code&gt;itemForm.form.valid&lt;/code&gt; 是无效的。</target>
        </trans-unit>
        <trans-unit id="c84f1525536690954f99a413b23d680798dcaedf" translate="yes" xml:space="preserve">
          <source>Unlike the other scripts that make up an application, such as the Angular app bundle, the service worker is preserved after the user closes the tab. The next time that browser loads the application, the service worker loads first, and can intercept every request for resources to load the application. If the service worker is designed to do so, it can &lt;em&gt;completely satisfy the loading of the application, without the need for the network&lt;/em&gt;.</source>
          <target state="translated">与组成应用程序的其他脚本（例如Angular应用程序包）不同，在用户关闭选项卡后，将保留服务工作者。下次浏览器加载应用程序时，服务工作者将首先加载，并且可以拦截对资源的每个请求以加载应用程序。如果服务人员被设计为这样做，则可以&lt;em&gt;完全满足应用程序的负载，而无需网络&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="336b8fcf6da97a73add72fe74ea2828b55965d4a" translate="yes" xml:space="preserve">
          <source>UnrecoverableStateEvent</source>
          <target state="translated">UnrecoverableStateEvent</target>
        </trans-unit>
        <trans-unit id="a978255d15d15f6447322f0e35eabd314f647755" translate="yes" xml:space="preserve">
          <source>Unregister all callbacks that the directive registered with global or application services.</source>
          <target state="translated">取消注册该指令在全局或应用服务中注册的所有回调。</target>
        </trans-unit>
        <trans-unit id="5f33036664974b24cb26da8a2ab6ee9afad16fa6" translate="yes" xml:space="preserve">
          <source>Unregisters all applications</source>
          <target state="translated">解除对所有申请的登记</target>
        </trans-unit>
        <trans-unit id="6d32a4bafd30dfcac7a8a3c144996daff36ea02d" translate="yes" xml:space="preserve">
          <source>Unregisters an application.</source>
          <target state="translated">解除注册申请。</target>
        </trans-unit>
        <trans-unit id="5ffffa9c4a22117e6f52f99f5cc3c43782a3e756" translate="yes" xml:space="preserve">
          <source>Unstructured</source>
          <target state="translated">Unstructured</target>
        </trans-unit>
        <trans-unit id="36412a76ca0b07002bd71130ee401e82fc2011d1" translate="yes" xml:space="preserve">
          <source>Unstructured and mutable</source>
          <target state="translated">非结构化和可变性</target>
        </trans-unit>
        <trans-unit id="834cc0ee6089e541b395509ba562516bcafa78e2" translate="yes" xml:space="preserve">
          <source>Unsubscribe</source>
          <target state="translated">Unsubscribe</target>
        </trans-unit>
        <trans-unit id="c21f818702e61674b3964d6b183a26a3133fec9f" translate="yes" xml:space="preserve">
          <source>Unsubscribe from Observables and DOM events.</source>
          <target state="translated">取消订阅Observables和DOM事件。</target>
        </trans-unit>
        <trans-unit id="36f376c88cfb8d16619510a291258ce8d2da42da" translate="yes" xml:space="preserve">
          <source>Unsubscribe using &lt;code&gt;&lt;a href=&quot;swpush#unsubscribe&quot;&gt;SwPush.unsubscribe()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;swpush#unsubscribe&quot;&gt;SwPush.unsubscribe()&lt;/a&gt;&lt;/code&gt; 退订。</target>
        </trans-unit>
        <trans-unit id="493dc8b26569cd76e59616c46a19c4d0c813beb4" translate="yes" xml:space="preserve">
          <source>Unsubscribes from Service Worker push notifications.</source>
          <target state="translated">退订服务工作者推送的通知。</target>
        </trans-unit>
        <trans-unit id="df1c180e11f697ae58851be0746d6030d8e54305" translate="yes" xml:space="preserve">
          <source>Unsupported enum member name</source>
          <target state="translated">不支持的枚举成员名称</target>
        </trans-unit>
        <trans-unit id="97a36dffa889515ec7097ac4311b95fa3f61bf7f" translate="yes" xml:space="preserve">
          <source>Until now, you've defined a single outlet and you've nested child routes under that outlet to group routes together. The router only supports one primary &lt;em&gt;unnamed&lt;/em&gt; outlet per template.</source>
          <target state="translated">到目前为止，您已经定义了一个出口，并且已在该出口下嵌套子路线以将路线分组在一起。路由器每个模板仅支持一个主要的&lt;em&gt;未命名&lt;/em&gt;插座。</target>
        </trans-unit>
        <trans-unit id="0e203966881b5ed9d5493d4c7a9fb99cebeb0b3b" translate="yes" xml:space="preserve">
          <source>Until now, you've defined a single outlet and you've nested child routes under that outlet to group routes together. The router only supports one primary unnamed outlet per template.</source>
          <target state="translated">到目前为止,您已经定义了一个单一的出口,并在该出口下嵌套了子路由来将路由分组。路由器每个模板只支持一个主未命名的出口。</target>
        </trans-unit>
        <trans-unit id="0cd4604faf00ea0d7b9ccb2fc1cf0622d23a2bbc" translate="yes" xml:space="preserve">
          <source>Unwrapping data from an observable</source>
          <target state="translated">从可观测数据中解读数据</target>
        </trans-unit>
        <trans-unit id="2de3bb02ea926f63aeba38c756a87b0a2edaeece" translate="yes" xml:space="preserve">
          <source>Unwraps a value from an asynchronous primitive.</source>
          <target state="translated">从异步基元中解包一个值。</target>
        </trans-unit>
        <trans-unit id="641990fee74114293b8c76ce49cb7bf399384326" translate="yes" xml:space="preserve">
          <source>Up pops a dialog box.</source>
          <target state="translated">上弹出一个对话框。</target>
        </trans-unit>
        <trans-unit id="ec67e6bd96103c22a842afec3ac1381cad313045" translate="yes" xml:space="preserve">
          <source>Up to this point, users can view product information, and simulate sharing and being notified about product changes. They cannot, however, buy products.</source>
          <target state="translated">至此,用户可以查看产品信息,并模拟分享和被通知产品变化。但是,他们不能购买产品。</target>
        </trans-unit>
        <trans-unit id="4ae15402fdbe9d9effa05f440fbe4ce47c9537f7" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;HeroesComponent&lt;/code&gt;</source>
          <target state="translated">更新 &lt;code&gt;HeroesComponent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="496dd8be1173dfef1f30923f2f19597732b208d8" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;app.component.html&lt;/code&gt; as follows:</source>
          <target state="translated">如下更新 &lt;code&gt;app.component.html&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e59d7b6b2ead1f0fc0b11cee3e56f5210aeccca4" translate="yes" xml:space="preserve">
          <source>Update checks</source>
          <target state="translated">更新检查</target>
        </trans-unit>
        <trans-unit id="4e81a8a01dd6e963822eee8752358d7afb76a325" translate="yes" xml:space="preserve">
          <source>Update command reference: &lt;a href=&quot;cli/update&quot;&gt;Angular CLI &lt;code&gt;ng update&lt;/code&gt; command reference&lt;/a&gt;</source>
          <target state="translated">更新命令参考：&lt;a href=&quot;cli/update&quot;&gt;Angular CLI &lt;code&gt;ng update&lt;/code&gt; 命令参考&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0de3f679ddfbe2c120a92aa34594bc38a0c19fc6" translate="yes" xml:space="preserve">
          <source>Update heroes</source>
          <target state="translated">更新英雄</target>
        </trans-unit>
        <trans-unit id="a4cb9fff8da5beaccbad71dfaf4739db28f45a5b" translate="yes" xml:space="preserve">
          <source>Update instructions: &lt;a href=&quot;https://update.angular.io/&quot;&gt;Angular Update Guide&lt;/a&gt;</source>
          <target state="translated">更新说明：&lt;a href=&quot;https://update.angular.io/&quot;&gt;Angular更新指南&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aee936d4df69b41b6d8369cb77cf1b581c5a9c3f" translate="yes" xml:space="preserve">
          <source>Update it with the following:</source>
          <target state="translated">更新内容如下:</target>
        </trans-unit>
        <trans-unit id="c88de57118aa0c10c91423c1171f46023241fa2a" translate="yes" xml:space="preserve">
          <source>Update our e2e testing strategy</source>
          <target state="translated">更新我们的e2e测试策略</target>
        </trans-unit>
        <trans-unit id="aae9bb284e5cbcbfe30098c360fd2e5dac2b8f1d" translate="yes" xml:space="preserve">
          <source>Update schematics</source>
          <target state="translated">更新示意图</target>
        </trans-unit>
        <trans-unit id="512d25794b17abae99ec7fe3b67436a80aef2643" translate="yes" xml:space="preserve">
          <source>Update the &quot;Checkout&quot; button so that it routes to the &lt;code&gt;/cart&lt;/code&gt; url.</source>
          <target state="translated">更新&amp;ldquo;签出&amp;rdquo;按钮，使其路由到 &lt;code&gt;/cart&lt;/code&gt; 网址。</target>
        </trans-unit>
        <trans-unit id="64bd735ef6309487a57de4917ec465adb94e3a96" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag with a template reference variable, &lt;code&gt;#heroForm&lt;/code&gt;, and set its value as follows.</source>
          <target state="translated">使用模板参考变量 &lt;code&gt;#heroForm&lt;/code&gt; 更新 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标记，并如下设置其值。</target>
        </trans-unit>
        <trans-unit id="55262abadc993a08fb22cf285edc08f25cb1c76b" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of &lt;code&gt;index.html&lt;/code&gt; to include this style sheet:</source>
          <target state="translated">更新 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 的 &lt;code&gt;index.html&lt;/code&gt; 的以包括该样式表：</target>
        </trans-unit>
        <trans-unit id="44edb4f17ea3eb3c127f01bb6cec6f3cf223b788" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; directive to assign each index in the &lt;code&gt;products&lt;/code&gt; array to the &lt;code&gt;productId&lt;/code&gt; variable when iterating over the list.</source>
          <target state="translated">更新 &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 指令，以在遍历列表时将 &lt;code&gt;products&lt;/code&gt; 数组中的每个索引分配给 &lt;code&gt;productId&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="047acd556996d14676e31a2016d5e00031fb3843" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;AuthGuard&lt;/code&gt; to provide a &lt;code&gt;session_id&lt;/code&gt; query that will remain after navigating to another route.</source>
          <target state="translated">更新 &lt;code&gt;AuthGuard&lt;/code&gt; 以提供一个 &lt;code&gt;session_id&lt;/code&gt; 查询，该查询在导航到另一条路由后将保留。</target>
        </trans-unit>
        <trans-unit id="c7af99452e024679731c58a6ce980e61e0f9ce31" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;AuthService&lt;/code&gt; to log in the user:</source>
          <target state="translated">更新 &lt;code&gt;AuthService&lt;/code&gt; 以登录用户：</target>
        </trans-unit>
        <trans-unit id="17df82461b1d4af3eea1a7f235dffc7a24516cb6" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;HeroService&lt;/code&gt;&lt;code&gt;getHero()&lt;/code&gt; method with the following to make that request:</source>
          <target state="translated">使用以下命令更新 &lt;code&gt;HeroService&lt;/code&gt; &lt;code&gt;getHero()&lt;/code&gt; 方法以发出该请求：</target>
        </trans-unit>
        <trans-unit id="456c568fc10b9b5af7828b3954b0630e145d6ff2" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;HeroesComponent&lt;/code&gt; template</source>
          <target state="translated">更新 &lt;code&gt;HeroesComponent&lt;/code&gt; 模板</target>
        </trans-unit>
        <trans-unit id="2a0c322c3ec3335c98a6927316b6de2d83201e94" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; you renamed after copying it from &lt;code&gt;heroes-routing.module.ts&lt;/code&gt; file. This time, you define &lt;strong&gt;child routes&lt;/strong&gt;&lt;em&gt;within&lt;/em&gt; the parent &lt;code&gt;crisis-center&lt;/code&gt; route.</source>
          <target state="translated">从 &lt;code&gt;heroes-routing.module.ts&lt;/code&gt; 文件复制后，更新重命名的 &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; 。这次，您&lt;em&gt;在&lt;/em&gt;父级 &lt;code&gt;crisis-center&lt;/code&gt; 路线中定义了&lt;strong&gt;子&lt;/strong&gt;路线。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b888ea2db7a703e486c90f086618aa533bc9723" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; you renamed after copying it from &lt;code&gt;heroes-routing.module.ts&lt;/code&gt; file. This time, you define child routes within the parent &lt;code&gt;crisis-center&lt;/code&gt; route.</source>
          <target state="translated">从 &lt;code&gt;heroes-routing.module.ts&lt;/code&gt; 文件复制后，更新重命名的 &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; 。这次，您在父级 &lt;code&gt;crisis-center&lt;/code&gt; 路线中定义了子路线。</target>
        </trans-unit>
        <trans-unit id="e584e483de80651422da868086dd08163863efd3" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;goToHeroes()&lt;/code&gt; method in the &lt;code&gt;hero-detail.component.ts&lt;/code&gt; to navigate back to &lt;code&gt;/superheroes&lt;/code&gt; with the optional route parameters.</source>
          <target state="translated">更新 &lt;code&gt;hero-detail.component.ts&lt;/code&gt; 中的 &lt;code&gt;goToHeroes()&lt;/code&gt; 方法，以使用可选的route参数导航回 &lt;code&gt;/superheroes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8eb243a9efc4a0297cedfa295ac4f27230f15071" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;gotoCrises()&lt;/code&gt; method of the &lt;code&gt;CrisisDetailComponent&lt;/code&gt; to navigate back to the Crisis Center list using relative path navigation.</source>
          <target state="translated">更新 &lt;code&gt;gotoCrises()&lt;/code&gt; 的方法 &lt;code&gt;CrisisDetailComponent&lt;/code&gt; 导航回使用相对路径导航危机中心的名单。</target>
        </trans-unit>
        <trans-unit id="9ceea5cd899b3e0cb4af6ee69dfa6e2a472df15b" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;gotoCrises&lt;/code&gt; method of the &lt;code&gt;CrisisDetailComponent&lt;/code&gt; to navigate back to the &lt;em&gt;Crisis Center&lt;/em&gt; list using relative path navigation.</source>
          <target state="translated">更新 &lt;code&gt;gotoCrises&lt;/code&gt; 的方法 &lt;code&gt;CrisisDetailComponent&lt;/code&gt; 导航回到了&lt;em&gt;危机处理中心&lt;/em&gt;使用相对路径导航列表。</target>
        </trans-unit>
        <trans-unit id="90198f7deafad59433243f4c2650247663f3acfb" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;ngOnInit()&lt;/code&gt; method to access the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; and track the &lt;code&gt;id&lt;/code&gt; parameter:</source>
          <target state="translated">更新 &lt;code&gt;ngOnInit()&lt;/code&gt; 方法以访问 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 并跟踪 &lt;code&gt;id&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="63d15e6be1057ef3573d05c93044f0abe7f5d7f0" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;protractor-conf.js&lt;/code&gt; to sync with hybrid apps:</source>
          <target state="translated">更新 &lt;code&gt;protractor-conf.js&lt;/code&gt; 以与混合应用程序同步：</target>
        </trans-unit>
        <trans-unit id="01b2840d9b7fdfb4c8e59c5d2221d5b944a9ade1" translate="yes" xml:space="preserve">
          <source>Update the anchor tags to include the &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;routerLinkActive&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">更新锚标记以包括 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;routerLinkActive&lt;/a&gt;&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="ba1c01ce8fe91885115c745dda6dea1b1dee4654" translate="yes" xml:space="preserve">
          <source>Update the binding in the template to announce the hero's name and show both &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; in a details layout like this:</source>
          <target state="translated">更新模板中的绑定，以宣布英雄的姓名，并在详细信息布局中同时显示 &lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="b73f126c77cbaf03da82c5d00d55430a2ec78f0a" translate="yes" xml:space="preserve">
          <source>Update the component template to look like this:</source>
          <target state="translated">将组件模板更新为如下样子。</target>
        </trans-unit>
        <trans-unit id="80fb83bb4ae8b67700db956c6fc18e1e43df75e8" translate="yes" xml:space="preserve">
          <source>Update the component template with the following markup:</source>
          <target state="translated">用以下标记更新组件模板。</target>
        </trans-unit>
        <trans-unit id="e8c7ee399df1289188c98c11849990a2f1ac0ced" translate="yes" xml:space="preserve">
          <source>Update the model for a particular control with a new value.</source>
          <target state="translated">用新的值更新特定控件的模型。</target>
        </trans-unit>
        <trans-unit id="559847cfe7989a011f1f7f236cc63d7c5ef1d512" translate="yes" xml:space="preserve">
          <source>Update the product details page to include a &quot;Buy&quot; button, which adds the current product to a list of products managed by a cart service.</source>
          <target state="translated">更新产品详情页,加入 &quot;购买 &quot;按钮,将当前产品添加到由购物车服务管理的产品列表中。</target>
        </trans-unit>
        <trans-unit id="fc029d79ce7b99ec3a2fca2086322426387609a6" translate="yes" xml:space="preserve">
          <source>Update the product details template to have a &quot;Buy&quot; button that adds the current product to the cart.</source>
          <target state="translated">更新产品详情模板,有一个 &quot;购买 &quot;按钮,将当前产品添加到购物车中。</target>
        </trans-unit>
        <trans-unit id="7eba56b3717efc99e826af103240665456dccb6c" translate="yes" xml:space="preserve">
          <source>Update the product details template with a &quot;Buy&quot; button that adds the current product to the cart.</source>
          <target state="translated">更新产品详情模板,&quot;购买 &quot;按钮将当前产品加入购物车。</target>
        </trans-unit>
        <trans-unit id="a7657cd7e687b92c9b836756bcb57c9e76fdea3a" translate="yes" xml:space="preserve">
          <source>Update the product details view to include a &quot;Buy&quot; button, which adds the current product to a list of products that a cart service manages.</source>
          <target state="translated">更新产品详情视图,加入 &quot;购买 &quot;按钮,将当前产品添加到购物车服务管理的产品列表中。</target>
        </trans-unit>
        <trans-unit id="ce24781651687073ccf0577b48abbd217ac36903" translate="yes" xml:space="preserve">
          <source>Update the relative path import to the &lt;code&gt;message.service&lt;/code&gt; in the &lt;code&gt;hero.service.ts&lt;/code&gt; file.</source>
          <target state="translated">更新相对路径导入到 &lt;code&gt;message.service&lt;/code&gt; 在 &lt;code&gt;hero.service.ts&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="203f53a020bfd878e423fc52de5b3578a006bfb8" translate="yes" xml:space="preserve">
          <source>Update the route configuration to lazy load the &lt;code&gt;CrisisCenterModule&lt;/code&gt;. Take the same steps you used to configure &lt;code&gt;AdminModule&lt;/code&gt; for lazy load.</source>
          <target state="translated">更新路由配置以延迟加载 &lt;code&gt;CrisisCenterModule&lt;/code&gt; 。采取与配置 &lt;code&gt;AdminModule&lt;/code&gt; 进行延迟加载相同的步骤。</target>
        </trans-unit>
        <trans-unit id="3f6126d69ceb05d3653564715bcc82db8b6b3de6" translate="yes" xml:space="preserve">
          <source>Update the route configuration to lazy load the &lt;code&gt;CrisisCenterModule&lt;/code&gt;. Take the same steps you used to configure &lt;code&gt;AdminModule&lt;/code&gt; for lazy loading.</source>
          <target state="translated">更新路由配置以延迟加载 &lt;code&gt;CrisisCenterModule&lt;/code&gt; 。采取与配置 &lt;code&gt;AdminModule&lt;/code&gt; 进行延迟加载相同的步骤。</target>
        </trans-unit>
        <trans-unit id="cca7fe187a76a321d42e7e1ba7f157b20dbd5a77" translate="yes" xml:space="preserve">
          <source>Update the shipping component's template to display the shipping types and prices using async pipe:</source>
          <target state="translated">更新发货组件的模板,使用异步管显示发货类型和价格。</target>
        </trans-unit>
        <trans-unit id="12ad7f7f655cea30f3a55c5eef576e6f58055482" translate="yes" xml:space="preserve">
          <source>Update the shipping component's template to display the shipping types and prices using the &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe:</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; 管道更新运输组件的模板以显示运输类型和价格：</target>
        </trans-unit>
        <trans-unit id="a357da0cfc27c86f48e17bd313f4e3eece1eed72" translate="yes" xml:space="preserve">
          <source>Update the template file with the following contents:</source>
          <target state="translated">更新模板文件,内容如下。</target>
        </trans-unit>
        <trans-unit id="2a9f24f9facab2d3032dfc55184857c8d51349c7" translate="yes" xml:space="preserve">
          <source>Update the template to display product details information inside an &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">更新模板以在 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 中显示产品详细信息。</target>
        </trans-unit>
        <trans-unit id="2f41d9ccaa5ca6464fe9e26dcf2fef17ab479d12" translate="yes" xml:space="preserve">
          <source>Update the template to display the strategy service's &lt;code&gt;preloadedModules&lt;/code&gt; array.</source>
          <target state="translated">更新模板以显示策略服务的 &lt;code&gt;preloadedModules&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="bdf317dd5d3bb344ae925cf56313430f134cf06e" translate="yes" xml:space="preserve">
          <source>Update the template with a &lt;a href=&quot;attribute-binding#class-binding&quot;&gt;class binding&lt;/a&gt;. The binding adds the &lt;code&gt;selected&lt;/code&gt; CSS class when the comparison returns &lt;code&gt;true&lt;/code&gt; and removes it when &lt;code&gt;false&lt;/code&gt;. Look for it within the repeated &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; tag as shown here:</source>
          <target state="translated">使用&lt;a href=&quot;attribute-binding#class-binding&quot;&gt;类绑定&lt;/a&gt;更新模板。当比较返回 &lt;code&gt;true&lt;/code&gt; 时，绑定将添加 &lt;code&gt;selected&lt;/code&gt; CSS类，而当 &lt;code&gt;false&lt;/code&gt; 返回时，绑定将其删除。在重复的 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 标记中查找它，如下所示：</target>
        </trans-unit>
        <trans-unit id="dfba97897cc40bb55207339966a6db50b171b279" translate="yes" xml:space="preserve">
          <source>Update the template with a &lt;a href=&quot;template-syntax#class-binding&quot;&gt;class binding&lt;/a&gt;. The binding adds the &lt;code&gt;selected&lt;/code&gt; CSS class when the comparison returns &lt;code&gt;true&lt;/code&gt; and removes it when &lt;code&gt;false&lt;/code&gt;. Look for it within the repeated &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; tag as shown here:</source>
          <target state="translated">使用&lt;a href=&quot;template-syntax#class-binding&quot;&gt;类绑定&lt;/a&gt;更新模板。当比较返回 &lt;code&gt;true&lt;/code&gt; 时，绑定将添加 &lt;code&gt;selected&lt;/code&gt; CSS类，而当 &lt;code&gt;false&lt;/code&gt; 返回时，绑定将其删除。在重复的 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 标记中查找它，如下所示：</target>
        </trans-unit>
        <trans-unit id="d296ccbde468f094eb509d5d21a2641f2f39d02b" translate="yes" xml:space="preserve">
          <source>Update the template with a button to simulate a name update. When you click the &lt;strong&gt;Update Name&lt;/strong&gt; button, the value entered in the form control element is reflected as its current value.</source>
          <target state="translated">用一个按钮更新模板以模拟名称更新。当您单击&amp;ldquo; &lt;strong&gt;更新名称&amp;rdquo;&lt;/strong&gt;按钮时，在表单控件元素中输入的值将反映为其当前值。</target>
        </trans-unit>
        <trans-unit id="70bf9b016dd5abd476b3536c1c64aba3fbec12cf" translate="yes" xml:space="preserve">
          <source>Update the template with a header (&quot;Cart&quot;), and use a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with an &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; to display each of the cart items with its name and price.</source>
          <target state="translated">使用标题（&amp;ldquo;购物车&amp;rdquo;）更新模板，并使用带有 &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;的 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 来显示每个购物车商品及其名称和价格。</target>
        </trans-unit>
        <trans-unit id="6e13272e210ad93b2f833a9639071ad68ad92617" translate="yes" xml:space="preserve">
          <source>Update the template with a header, and use a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with an &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; to display each of the cart items with its name and price.</source>
          <target state="translated">更新了标题中的模板，并使用 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 与 &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; 显示各有其名称和价格的车项目。</target>
        </trans-unit>
        <trans-unit id="9e70ce970e12f27c3c0169130c0f1fea106c9fc1" translate="yes" xml:space="preserve">
          <source>Update the template with a welcome message to the &lt;code&gt;Crisis Center&lt;/code&gt;.</source>
          <target state="translated">通过向 &lt;code&gt;Crisis Center&lt;/code&gt; 发送欢迎消息来更新模板。</target>
        </trans-unit>
        <trans-unit id="56d3e4fc01f85a9416f7ebeec211313112a4e66e" translate="yes" xml:space="preserve">
          <source>Update your component with &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&lt;/code&gt; 更新组件</target>
        </trans-unit>
        <trans-unit id="5ce647b93fb03bcc71424f45986c72ce1d07ff28" translate="yes" xml:space="preserve">
          <source>UpdateActivatedEvent</source>
          <target state="translated">UpdateActivatedEvent</target>
        </trans-unit>
        <trans-unit id="fd2207341d757f6ad0dc82194a9f23e501154bfa" translate="yes" xml:space="preserve">
          <source>UpdateAvailableEvent</source>
          <target state="translated">UpdateAvailableEvent</target>
        </trans-unit>
        <trans-unit id="568d94ab2c93526583d7691ef9d845646ce24da2" translate="yes" xml:space="preserve">
          <source>Updated the options for &lt;code&gt;initialNavigation&lt;/code&gt;. For more information, see &lt;a href=&quot;../api/router/initialnavigation&quot;&gt;initialNavigation&lt;/a&gt; in the API documentation. See &lt;a href=&quot;https://github.com/angular/angular/pull/33128&quot;&gt;PR 33128&lt;/a&gt;.</source>
          <target state="translated">更新了 &lt;code&gt;initialNavigation&lt;/code&gt; 的选项。有关更多信息，请参见API文档中的&lt;a href=&quot;../api/router/initialnavigation&quot;&gt;initialNavigation&lt;/a&gt;。参见&lt;a href=&quot;https://github.com/angular/angular/pull/33128&quot;&gt;PR 33128&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="30827e80f2dab0755e1aab3fdcd5f8e852c80f1e" translate="yes" xml:space="preserve">
          <source>Updates happen in the background, relatively quickly after changes are published. The previous version of the application is served until an update is installed and ready.</source>
          <target state="translated">更新发生在后台,在更改发布后相对较快。在安装和准备好更新之前,以前版本的应用程序会被服务。</target>
        </trans-unit>
        <trans-unit id="0b4d2f63f515bde39286e6b3ccfa79609ea6eeda" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;index.html&lt;/code&gt; file:</source>
          <target state="translated">更新 &lt;code&gt;index.html&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="b23869ff3d3ab319301b5274bca98483d206fab5" translate="yes" xml:space="preserve">
          <source>Updates the stored data of the query list, and resets the &lt;code&gt;dirty&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;, so that on change detection, it will not notify of changes to the queries, unless a new change occurs.</source>
          <target state="translated">更新查询列表的存储数据，并将 &lt;code&gt;dirty&lt;/code&gt; 标志重置为 &lt;code&gt;false&lt;/code&gt; ，以便在检测到更改时，除非发生新更改，否则不会通知查询更改。</target>
        </trans-unit>
        <trans-unit id="53d4b930a68894d016ef42936f1cf3d3913d5484" translate="yes" xml:space="preserve">
          <source>Updates your application and its dependencies. See &lt;a href=&quot;https://update.angular.io/&quot;&gt;https://update.angular.io/&lt;/a&gt;</source>
          <target state="translated">更新您的应用程序及其依赖项。参见&lt;a href=&quot;https://update.angular.io/&quot;&gt;https://update.angular.io/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8004b6dc96603e3ddaec6151269dd92cf5f998b2" translate="yes" xml:space="preserve">
          <source>Updating Angular</source>
          <target state="translated">更新Angular</target>
        </trans-unit>
        <trans-unit id="e2e0c1dd04e5d643612f19bff213d0afa1d812d6" translate="yes" xml:space="preserve">
          <source>Updating CLI Apps</source>
          <target state="translated">更新CLI应用程序</target>
        </trans-unit>
        <trans-unit id="4c5646c8307bd85d09df30c3b3db3a0d18ae2f19" translate="yes" xml:space="preserve">
          <source>Updating headers</source>
          <target state="translated">更新标题</target>
        </trans-unit>
        <trans-unit id="3bfbada4728f2e043b7771479883f3fc79ae26f5" translate="yes" xml:space="preserve">
          <source>Updating libraries</source>
          <target state="translated">更新图书馆</target>
        </trans-unit>
        <trans-unit id="97a865dad5af2b4ab0e2197679ff98a7ebec66fa" translate="yes" xml:space="preserve">
          <source>Updating parts of the data model</source>
          <target state="translated">更新数据模型的部分内容</target>
        </trans-unit>
        <trans-unit id="ea82e134fbd8a260e992aef7287a5680172c618b" translate="yes" xml:space="preserve">
          <source>Updating to version 8 with &lt;a href=&quot;cli/update&quot;&gt;&lt;code&gt;ng update&lt;/code&gt;&lt;/a&gt; changes this automatically.</source>
          <target state="translated">使用&lt;a href=&quot;cli/update&quot;&gt; &lt;code&gt;ng update&lt;/code&gt; &lt;/a&gt;更新到版本8 会自动更改。</target>
        </trans-unit>
        <trans-unit id="2fe4aa4b0674fef349deee21474a9e07ec8e067d" translate="yes" xml:space="preserve">
          <source>Updating your application in the browser</source>
          <target state="translated">在浏览器中更新您的应用程序</target>
        </trans-unit>
        <trans-unit id="fdcac3e04bfcd5fd48d4d42aa4876e07971bf792" translate="yes" xml:space="preserve">
          <source>Updating your environment and apps</source>
          <target state="translated">更新您的环境和应用程序</target>
        </trans-unit>
        <trans-unit id="a4cf3923e47fcb8de57d182bf42a0b41fb5e9032" translate="yes" xml:space="preserve">
          <source>Upgrade the AngularJS components to Angular components next. Do it one component at a time while still keeping the application in hybrid mode. As you make these conversions, you'll also define your first Angular &lt;em&gt;pipes&lt;/em&gt;.</source>
          <target state="translated">接下来将AngularJS组件升级到Angular组件。一次只做一个组件，同时仍将应用程序保持在混合模式下。在进行这些转换时，还将定义您的第一个Angular &lt;em&gt;管道&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="24f30a918c96ec7f78d6de2229e4e45721a78e8d" translate="yes" xml:space="preserve">
          <source>UpgradeAdapter</source>
          <target state="translated">UpgradeAdapter</target>
        </trans-unit>
        <trans-unit id="349a24b81f2702737e72ac44c56d5eea5df09232" translate="yes" xml:space="preserve">
          <source>UpgradeAdapterRef</source>
          <target state="translated">UpgradeAdapterRef</target>
        </trans-unit>
        <trans-unit id="3472325c45449a53cfbeda85e9dc64ed999c053e" translate="yes" xml:space="preserve">
          <source>UpgradeComponent</source>
          <target state="translated">UpgradeComponent</target>
        </trans-unit>
        <trans-unit id="f957777c36883bb04b88b1a75eabd9d4e87143f7" translate="yes" xml:space="preserve">
          <source>UpgradeModule</source>
          <target state="translated">UpgradeModule</target>
        </trans-unit>
        <trans-unit id="dc294e605816722937474ceca1ecd6db86bccf84" translate="yes" xml:space="preserve">
          <source>Upgraded components are Angular &lt;strong&gt;directives&lt;/strong&gt;, instead of &lt;strong&gt;components&lt;/strong&gt;, because Angular is unaware that AngularJS will create elements under it. As far as Angular knows, the upgraded component is just a directive - a tag - and Angular doesn't have to concern itself with its children.</source>
          <target state="translated">升级后的组件是Angular &lt;strong&gt;指令&lt;/strong&gt;，而不是&lt;strong&gt;组件&lt;/strong&gt;，因为Angular不知道AngularJS将在其下创建元素。据Angular所知，升级后的组件只是一个指令-一个标记-且Angular不必将其自身与子代相关。</target>
        </trans-unit>
        <trans-unit id="4bcf3358a1532605c1d102caf461fe6695881d98" translate="yes" xml:space="preserve">
          <source>Upgrading Components</source>
          <target state="translated">升级组件</target>
        </trans-unit>
        <trans-unit id="3de37c097e347898a6c3fcca7012b78cb95fe583" translate="yes" xml:space="preserve">
          <source>Upgrading an AngularJS service</source>
          <target state="translated">升级AngularJS服务</target>
        </trans-unit>
        <trans-unit id="8ad98e9741d8e1a96c0b693a2a2c1e769fe850a8" translate="yes" xml:space="preserve">
          <source>Upgrading for Performance</source>
          <target state="translated">性能升级</target>
        </trans-unit>
        <trans-unit id="1cff14fa3715a0373a3bb2801eac16cb3d07e6fc" translate="yes" xml:space="preserve">
          <source>Upgrading for performance</source>
          <target state="translated">性能升级</target>
        </trans-unit>
        <trans-unit id="f49e3b37a91d97499c2632816643696c225e6f8f" translate="yes" xml:space="preserve">
          <source>Upgrading from AngularJS to Angular</source>
          <target state="translated">从AngularJS升级到Angular。</target>
        </trans-unit>
        <trans-unit id="a5a3a352431f58bbbf100b500b3c0596ab226f27" translate="yes" xml:space="preserve">
          <source>Upgrading the Phone service</source>
          <target state="translated">升级电话服务</target>
        </trans-unit>
        <trans-unit id="be955d520b7fdc0e2bf8afcda324203e51725d6d" translate="yes" xml:space="preserve">
          <source>Upgrading with &lt;code&gt;ngUpgrade&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ngUpgrade&lt;/code&gt; 升级</target>
        </trans-unit>
        <trans-unit id="f8522315486f45748eda6e72566dff17c151bd49" translate="yes" xml:space="preserve">
          <source>Upgrading with ngUpgrade</source>
          <target state="translated">使用 ngUpgrade 升级</target>
        </trans-unit>
        <trans-unit id="233e49b5606ac48bdee62d2e7bac7f481dc3f94b" translate="yes" xml:space="preserve">
          <source>UpperCamelCase (or PascalCase): Class names, including classes that define components, interfaces, NgModules, directives, and pipes, Upper camel case uses uppercase on the first letter of the item. For example, &quot;HeroListComponent&quot;.</source>
          <target state="translated">UpperCamelCase(或PascalCase)。类名,包括定义组件、接口、NgModules、指令和管道的类,Upper camel case在项目的第一个字母上使用大写。例如,&quot;HeroListComponent&quot;。</target>
        </trans-unit>
        <trans-unit id="155c412fcd3971aa03fafff2bacb8bb9adc5883c" translate="yes" xml:space="preserve">
          <source>UpperCasePipe</source>
          <target state="translated">UpperCasePipe</target>
        </trans-unit>
        <trans-unit id="71dd69965f2486999c211c68072c41db5ae84baf" translate="yes" xml:space="preserve">
          <source>UrlCodec</source>
          <target state="translated">UrlCodec</target>
        </trans-unit>
        <trans-unit id="54090f749d1da5abbd2d8d0b13290689e3fbe518" translate="yes" xml:space="preserve">
          <source>UrlCreationOptions</source>
          <target state="translated">UrlCreationOptions</target>
        </trans-unit>
        <trans-unit id="dbfb4d31c55c9ef194c6fceced63a7e00361cb16" translate="yes" xml:space="preserve">
          <source>UrlCreationOptions#fragment</source>
          <target state="translated">UrlCreationOptions#fragment</target>
        </trans-unit>
        <trans-unit id="141e18e55cd3e0e08bf88a818bbc4b13ede6cf27" translate="yes" xml:space="preserve">
          <source>UrlCreationOptions#preserveFragment</source>
          <target state="translated">UrlCreationOptions#preserveFragment</target>
        </trans-unit>
        <trans-unit id="6393573c166f194ad715df371c6f4f6ee50f1285" translate="yes" xml:space="preserve">
          <source>UrlCreationOptions#queryParams</source>
          <target state="translated">UrlCreationOptions#queryParams</target>
        </trans-unit>
        <trans-unit id="d6e7a05926297ae4a9a9dee1a8d0edf6b0ef629f" translate="yes" xml:space="preserve">
          <source>UrlCreationOptions#queryParamsHandling</source>
          <target state="translated">UrlCreationOptions#queryParamsHandling</target>
        </trans-unit>
        <trans-unit id="68948d1dadddf95bc54d96cecbf392ae48e8d326" translate="yes" xml:space="preserve">
          <source>UrlHandlingStrategy</source>
          <target state="translated">UrlHandlingStrategy</target>
        </trans-unit>
        <trans-unit id="16cc40206f5a097848430a6c434c805355e9962a" translate="yes" xml:space="preserve">
          <source>UrlMatchResult</source>
          <target state="translated">UrlMatchResult</target>
        </trans-unit>
        <trans-unit id="b4a9ef4257a8681d0b8b798a42c3019be0c1e3e7" translate="yes" xml:space="preserve">
          <source>UrlMatcher</source>
          <target state="translated">UrlMatcher</target>
        </trans-unit>
        <trans-unit id="cb582a3934e09bbb5eff19851f7f334c90041133" translate="yes" xml:space="preserve">
          <source>UrlSegment</source>
          <target state="translated">UrlSegment</target>
        </trans-unit>
        <trans-unit id="5c83abe9807fc6933e00e92449e0482f3644b9ae" translate="yes" xml:space="preserve">
          <source>UrlSegmentGroup</source>
          <target state="translated">UrlSegmentGroup</target>
        </trans-unit>
        <trans-unit id="d13f52dbbad2d8b754750f29699588763707bcf7" translate="yes" xml:space="preserve">
          <source>UrlSerializer</source>
          <target state="translated">UrlSerializer</target>
        </trans-unit>
        <trans-unit id="8f00a7f728d114764c445a5f40b5c821396502ce" translate="yes" xml:space="preserve">
          <source>UrlTree</source>
          <target state="translated">UrlTree</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="31fdeb34a4f4bc8a7b882018ab434e09d2defd44" translate="yes" xml:space="preserve">
          <source>Usage Examples</source>
          <target state="translated">使用实例</target>
        </trans-unit>
        <trans-unit id="4df13ec4234f96a6f1f82fccdde77669b4c4b95c" translate="yes" xml:space="preserve">
          <source>Usage Notes</source>
          <target state="translated">使用说明</target>
        </trans-unit>
        <trans-unit id="3439e83eddd9b986dc9a370152a22cf7dcf9b189" translate="yes" xml:space="preserve">
          <source>Usage example</source>
          <target state="translated">用例</target>
        </trans-unit>
        <trans-unit id="92d99b032888bf69448943e3813f272f0f43c556" translate="yes" xml:space="preserve">
          <source>Usage notes</source>
          <target state="translated">使用说明</target>
        </trans-unit>
        <trans-unit id="0a44b555685f0dc28bc8e9765c6cb059b1eccb38" translate="yes" xml:space="preserve">
          <source>Usage of the HTTP protocol</source>
          <target state="translated">HTTP协议的使用</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="3ca40217dc0e70d2dc410e2c690446266314d73f" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;component-interaction#countdown-tests&quot;&gt;the same countdown timer tests&lt;/a&gt; as before.</source>
          <target state="translated">使用&lt;a href=&quot;component-interaction#countdown-tests&quot;&gt;与&lt;/a&gt;之前相同的倒数计时器测试。</target>
        </trans-unit>
        <trans-unit id="1eded4881718d38df0a281fb3b89e254b8e5d3f1" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;glossary#pipe&quot;&gt;pipes&lt;/a&gt; to transform strings, currency amounts, dates, and other data for display. Pipes are simple functions you can use in &lt;a href=&quot;glossary#template-expression&quot;&gt;template expressions&lt;/a&gt; to accept an input value and return a transformed value. Pipes are useful because you can use them throughout your application, while only declaring each pipe once. For example, you would use a pipe to show a date as &lt;strong&gt;April 15, 1988&lt;/strong&gt; rather than the raw string format.</source>
          <target state="translated">使用&lt;a href=&quot;glossary#pipe&quot;&gt;管道&lt;/a&gt;来转换字符串，货币金额，日期和其他数据以进行显示。管道是简单的函数，您可以在&lt;a href=&quot;glossary#template-expression&quot;&gt;模板表达式中&lt;/a&gt;使用它来接受输入值并返回转换后的值。管道很有用，因为您可以在整个应用程序中使用它们，而只声明一次每个管道。例如，您将使用管道将日期显示为&lt;strong&gt;1988年4月15日，&lt;/strong&gt;而不是原始字符串格式。</target>
        </trans-unit>
        <trans-unit id="e1646482e996340ea2fea6c00a75df620ed30fe2" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;guide/glossary#router&quot;&gt;routing&lt;/a&gt; to navigate among different views and their components.</source>
          <target state="translated">使用&lt;a href=&quot;guide/glossary#router&quot;&gt;路由&lt;/a&gt;在不同的视图及其组件之间导航。</target>
        </trans-unit>
        <trans-unit id="bbdce1a9856fbb51307f203e0fd8807247521091" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/writing-declaration-files.html&quot;&gt;TypeScript type definition files&lt;/a&gt;&amp;mdash;&lt;code&gt;d.ts files&lt;/code&gt;&amp;mdash;to tell the compiler about the libraries you load.</source>
          <target state="translated">使用&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/writing-declaration-files.html&quot;&gt;TypeScript类型定义文件&lt;/a&gt;（ &lt;code&gt;d.ts files&lt;/code&gt; 告知编译器您所加载的库。</target>
        </trans-unit>
        <trans-unit id="c534d42b01e57fa797f2c9dd829715b3aaef6e23" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;ngzone#run&quot;&gt;run&lt;/a&gt; to reenter the Angular zone and do work that updates the application model.</source>
          <target state="translated">使用&lt;a href=&quot;ngzone#run&quot;&gt;run&lt;/a&gt;重新进入Angular区域并执行更新应用程序模型的工作。</target>
        </trans-unit>
        <trans-unit id="c7e4c837537f47c47ba3f66cd9bd197b787a06e4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;property-binding&quot;&gt;property binding&lt;/a&gt; to bind the &lt;code&gt;item&lt;/code&gt; property in the child to the &lt;code&gt;currentItem&lt;/code&gt; property of the parent.</source>
          <target state="translated">使用&lt;a href=&quot;property-binding&quot;&gt;属性绑定&lt;/a&gt;将子 &lt;code&gt;item&lt;/code&gt; 中的item属性绑定到父项的 &lt;code&gt;currentItem&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="33ae6d75faec5c9258ccdb8343e25d6400c01615" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;router#getCurrentNavigation&quot;&gt;Router#getCurrentNavigation&lt;/a&gt; to retrieve a saved navigation-state value. For example, to capture the &lt;code&gt;tracingId&lt;/code&gt; during the &lt;code&gt;&lt;a href=&quot;navigationstart&quot;&gt;NavigationStart&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">使用&lt;a href=&quot;router#getCurrentNavigation&quot;&gt;Router＃getCurrentNavigation&lt;/a&gt;检索保存的导航状态值。例如，要在 &lt;code&gt;&lt;a href=&quot;navigationstart&quot;&gt;NavigationStart&lt;/a&gt;&lt;/code&gt; 事件中捕获 &lt;code&gt;tracingId&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="11460a33232086c248106ff99715d4babce3c64e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;router#route-parameters&quot;&gt;&lt;em&gt;route parameters&lt;/em&gt;&lt;/a&gt; to specify a &lt;em&gt;required&lt;/em&gt; parameter value &lt;em&gt;within&lt;/em&gt; the route URL as you do when navigating to the &lt;code&gt;HeroDetailComponent&lt;/code&gt; in order to view the hero with &lt;em&gt;id&lt;/em&gt; 15:</source>
          <target state="translated">使用&lt;a href=&quot;router#route-parameters&quot;&gt;&lt;em&gt;路由参数&lt;/em&gt;&lt;/a&gt;指定&lt;em&gt;所需的&lt;/em&gt;参数值&lt;em&gt;内&lt;/em&gt;的路线网址为你导航到时候做 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 为了能够查看英雄&lt;em&gt;编号&lt;/em&gt; 15：</target>
        </trans-unit>
        <trans-unit id="0b5d93c4ed0ec5b8b7f05301676e8bd1ef1cb92a" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;router-tutorial-toh#route-parameters&quot;&gt;route parameters&lt;/a&gt; to specify a required parameter value within the route URL as you do when navigating to the &lt;code&gt;HeroDetailComponent&lt;/code&gt; in order to view the hero with &lt;code&gt;id&lt;/code&gt; 15:</source>
          <target state="translated">导航到 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 时，使用&lt;a href=&quot;router-tutorial-toh#route-parameters&quot;&gt;路线参数&lt;/a&gt;在路线URL中指定必需的参数值，以查看 &lt;code&gt;id&lt;/code&gt; 15的英雄：</target>
        </trans-unit>
        <trans-unit id="a19d669d6ab0a452aeaf8626b2d9150aebbdc3cf" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;/deep/&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;::ng-deep&lt;/code&gt; only with &lt;em&gt;emulated&lt;/em&gt; view encapsulation. Emulated is the default and most commonly used view encapsulation. For more information, see the &lt;a href=&quot;component-styles#view-encapsulation&quot;&gt;Controlling view encapsulation&lt;/a&gt; section.</source>
          <target state="translated">仅将 &lt;code&gt;/deep/&lt;/code&gt; ， &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;::ng-deep&lt;/code&gt; 与&lt;em&gt;模拟&lt;/em&gt;视图封装一起使用。默认是最常用的视图封装。有关更多信息，请参见&amp;ldquo; &lt;a href=&quot;component-styles#view-encapsulation&quot;&gt;控制视图封装&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="b4a428cb21fb684b5416394147cdfb8895147345" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;/deep/&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;::ng-deep&lt;/code&gt; only with &lt;em&gt;emulated&lt;/em&gt; view encapsulation. Emulated is the default and most commonly used view encapsulation. For more information, see the &lt;a href=&quot;view-encapsulation&quot;&gt;View Encapsulation&lt;/a&gt; section.</source>
          <target state="translated">仅将 &lt;code&gt;/deep/&lt;/code&gt; ， &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; 和 &lt;code&gt;::ng-deep&lt;/code&gt; 与&lt;em&gt;模拟&lt;/em&gt;视图封装一起使用。默认是最常用的视图封装，它是&amp;ldquo;模拟&amp;rdquo;。有关更多信息，请参见&amp;ldquo;&lt;a href=&quot;view-encapsulation&quot;&gt;查看封装&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="fbc5373a6098820428d8f87b4ebef3596f21ac25" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;:increment&lt;/code&gt; and &lt;code&gt;:decrement&lt;/code&gt; to initiate transitions:</source>
          <target state="translated">使用 &lt;code&gt;:increment&lt;/code&gt; 和 &lt;code&gt;:decrement&lt;/code&gt; 启动转换：</target>
        </trans-unit>
        <trans-unit id="37da0447d1fa140f28f8fb6b08272482bf10d2b3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; to apply styling data over a given time interval.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 在给定的时间间隔内应用样式数据。</target>
        </trans-unit>
        <trans-unit id="8117b02663c31ca30a3505b5dea37c42a73d66f9" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; to look for an element entering the page that meets certain criteria.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 查找进入符合某些条件的页面的元素。</target>
        </trans-unit>
        <trans-unit id="c340b82cff5a85036fa97538fb63c0522defe830" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; to delay each animation by 30 milliseconds.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; 将每个动画延迟30毫秒。</target>
        </trans-unit>
        <trans-unit id="3d3ba6c58e073ff58798eac3feab185c868724b3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; to define styles that are applied at the end of each transition, they persist after the animation has completed.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; 定义在每个过渡结束时应用的样式，这些样式在动画完成后仍然存在。</target>
        </trans-unit>
        <trans-unit id="744032ff1407c7169be00664314296b80fa6d2ce" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; to apply the provided styling data immediately.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 立即应用提供的样式数据。</target>
        </trans-unit>
        <trans-unit id="c164f914355419d833cd09abe62d44f39e5d7fa3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; to define intermediate styles, which create the illusion of motion during the animation.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 定义中间样式，这些样式会在动画过程中产生运动的错觉。</target>
        </trans-unit>
        <trans-unit id="7d17b4d4f899b3d74c42d5859ad207b245a417af" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;AppModule&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;AppModule&lt;/code&gt; 中使用 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2eacb644015215b8967a3fef2b1d8847dd480ec4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; in the cart service</source>
          <target state="translated">在购物车服务中使用 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84330455001cba6cc5fc4fcfcc5e6a9131fbbea2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;NgStyle&lt;/a&gt;&lt;/code&gt; to set many inline styles simultaneously and dynamically, based on the state of the component.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;NgStyle&lt;/a&gt;&lt;/code&gt; 根据组件的状态同时动态地设置许多内联样式。</target>
        </trans-unit>
        <trans-unit id="5245359421c59b09a4a49d6a64056af5518fc2a4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; to define styles that are applied at the end of each transition, they persist after the animation has completed.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 定义在每个过渡结束时应用的样式，这些样式在动画完成后仍然存在。</target>
        </trans-unit>
        <trans-unit id="23e2c4fd66aaf035f564822cce538de6531f6bbc" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; to create two-way data bindings for reading and writing input-control values.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 创建双向数据绑定以读取和写入输入控制值。</target>
        </trans-unit>
        <trans-unit id="3fd82b61ae0dda767fc8f3a6beca402be658ba83" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; to separate providers from a module so you can import that module into the root module with &lt;code&gt;providers&lt;/code&gt; and child modules without &lt;code&gt;providers&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 可以将提供程序与模块分开，因此您可以将该模块导入具有 &lt;code&gt;providers&lt;/code&gt; 的根模块和没有 &lt;code&gt;providers&lt;/code&gt; 子模块。</target>
        </trans-unit>
        <trans-unit id="4659a85a02ce72bfcc286731ea25c8f664cf6829" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;upgrade/upgradeadapter&quot;&gt;UpgradeAdapter&lt;/a&gt;&lt;/code&gt; to allow AngularJS and Angular to coexist in a single application.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;upgrade/upgradeadapter&quot;&gt;UpgradeAdapter&lt;/a&gt;&lt;/code&gt; 允许AngularJS和Angular在单个应用程序中共存。</target>
        </trans-unit>
        <trans-unit id="5dac23ff3bdee9064747ccf719f0ed4727aad84f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;upgrade/upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt; to control a hybrid AngularJS / Angular application.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;upgrade/upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt; 控制混合的AngularJS / Angular应用程序。</target>
        </trans-unit>
        <trans-unit id="02f4fc0380dc5751bed787fa57f8c1da57539efe" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;upgradeadapter&quot;&gt;UpgradeAdapter&lt;/a&gt;&lt;/code&gt; to allow AngularJS and Angular to coexist in a single application.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;upgradeadapter&quot;&gt;UpgradeAdapter&lt;/a&gt;&lt;/code&gt; 允许AngularJS和Angular在单个应用程序中共存。</target>
        </trans-unit>
        <trans-unit id="ca40e78c4209c9b5e5203ae6d1381b2251b2aed8" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt; to control a hybrid AngularJS / Angular application.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;upgradeadapterref&quot;&gt;UpgradeAdapterRef&lt;/a&gt;&lt;/code&gt; 控制混合的AngularJS / Angular应用程序。</target>
        </trans-unit>
        <trans-unit id="af06267d70ed596a77b6002d1c976ef8cf195c8c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; to inject the instance.</source>
          <target state="translated">使用 &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; 来注入实例。</target>
        </trans-unit>
        <trans-unit id="8871425e87aae0b3cd3521f2757473e950108c92" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; so that Angular will only look at the &lt;code&gt;ElementInjector&lt;/code&gt; for the current component or directive.</source>
          <target state="translated">使用 &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; 以便Angular仅查看当前组件或指令的 &lt;code&gt;ElementInjector&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c336104380f0d2867d853d0a9497070d9a8d351" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; with &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; to prevent an error if the value is &lt;code&gt;null&lt;/code&gt;. In the following example, the &lt;code&gt;Person&lt;/code&gt; service is injected in the constructor. &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; tells Angular to skip the current injector and &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; will prevent an error should the &lt;code&gt;Person&lt;/code&gt; service be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; 与 &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; 如果该值以防止出现错误 &lt;code&gt;null&lt;/code&gt; 。在下面的示例中，将 &lt;code&gt;Person&lt;/code&gt; 服务注入到构造函数中。 &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; 告诉角度跳过当前注射器和 &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; 将防止错误应该在 &lt;code&gt;Person&lt;/code&gt; 的服务是 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64ddf861c8d40d74accf883d09c74262c79df284" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;as const&lt;/code&gt; to let TypeScript know that you really do mean to use a constant string type:</source>
          <target state="translated">使用 &lt;code&gt;as const&lt;/code&gt; 可以让TypeScript知道您确实意味着要使用常量字符串类型：</target>
        </trans-unit>
        <trans-unit id="0c3acfd0b42193c69c97319b8d40897bd917fd56" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;currency&lt;/code&gt; to format a number as currency.</source>
          <target state="translated">使用 &lt;code&gt;currency&lt;/code&gt; 将数字格式化为货币。</target>
        </trans-unit>
        <trans-unit id="8f1bdfdd07f0e51b3ed046c10f3d302723845732" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;downgradeNg2Component&lt;/code&gt; to create an AngularJS Directive Definition Factory from Angular Component. The adapter will bootstrap Angular component from within the AngularJS template.</source>
          <target state="translated">使用 &lt;code&gt;downgradeNg2Component&lt;/code&gt; 从Angular组件创建AngularJS指令定义工厂。适配器将从AngularJS模板中引导Angular组件。</target>
        </trans-unit>
        <trans-unit id="b1899fb07038b46b39a74135ce2626c9063c8da8" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;forRoot()&lt;/code&gt; to separate providers from a module so you can import that module into the root module with &lt;code&gt;providers&lt;/code&gt; and child modules without &lt;code&gt;providers&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;forRoot()&lt;/code&gt; 将提供程序与模块分开，以便您可以将该模块导入到具有 &lt;code&gt;providers&lt;/code&gt; 的根模块中，并将其导入到没有 &lt;code&gt;providers&lt;/code&gt; 子模块中。</target>
        </trans-unit>
        <trans-unit id="a89fbfa3b7a5cad46931da1a2b1acafab5e39b74" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;fromString&lt;/code&gt; to create HttpParams</source>
          <target state="translated">使用 &lt;code&gt;fromString&lt;/code&gt; 创建HttpParams</target>
        </trans-unit>
        <trans-unit id="9016f8a4d5f440de4485c2ed9ab0fb4c65014418" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;markForCheck()&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;changedetectorref&quot;&gt;CheckOnce&lt;/a&gt;&lt;/code&gt; strategy</source>
          <target state="translated">将 &lt;code&gt;markForCheck()&lt;/code&gt; 与 &lt;code&gt;&lt;a href=&quot;changedetectorref&quot;&gt;CheckOnce&lt;/a&gt;&lt;/code&gt; 策略一起使用</target>
        </trans-unit>
        <trans-unit id="75f05d99671b8634199c2d0de091777f5d31535c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;markForCheck()&lt;/code&gt; with &lt;code&gt;CheckOnce&lt;/code&gt; strategy</source>
          <target state="translated">将 &lt;code&gt;markForCheck()&lt;/code&gt; 与 &lt;code&gt;CheckOnce&lt;/code&gt; 策略一起使用</target>
        </trans-unit>
        <trans-unit id="3633c54be6b23f784540f222beddf2e987b0ff21" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;name&lt;/code&gt; in template expressions as you would for a built-in pipe.</source>
          <target state="translated">就像在内置管道中一样，在模板表达式中使用 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57ed9bd08229eab245c48c01dd77e6ea3a5924a2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt; &amp;lt;lib_name&amp;gt;&lt;/code&gt; to update individual library versions. The Angular CLI checks the latest published release of the library, and if the latest version is newer than your installed version, downloads it and updates your &lt;code&gt;package.json&lt;/code&gt; to match the latest version.</source>
          <target state="translated">使用 &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt; &amp;lt;lib_name&amp;gt;&lt;/code&gt; 更新单个库的版本。Angular CLI检查该库的最新发布版本，如果最新版本比您安装的版本新，请下载它并更新您的 &lt;code&gt;package.json&lt;/code&gt; 以匹配最新版本。</target>
        </trans-unit>
        <trans-unit id="8a92fc8c9b6affe56fd82331ac14f7ff6838613e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ng update &amp;lt;lib_name&amp;gt;&lt;/code&gt; to update individual library versions. The Angular CLI checks the latest published release of the library, and if the latest version is newer than your installed version, downloads it and updates your &lt;code&gt;package.json&lt;/code&gt; to match the latest version.</source>
          <target state="translated">使用 &lt;code&gt;ng update &amp;lt;lib_name&amp;gt;&lt;/code&gt; 更新单个库的版本。Angular CLI检查该库的最新发布版本，如果最新版本比您安装的版本新，请下载它并更新您的 &lt;code&gt;package.json&lt;/code&gt; 以匹配最新版本。</target>
        </trans-unit>
        <trans-unit id="86ee33b42fd33fef24e535d80cee1f4a2d9b6d98" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ngOnInit()&lt;/code&gt; for two main reasons:</source>
          <target state="translated">使用 &lt;code&gt;ngOnInit()&lt;/code&gt; 有两个主要原因：</target>
        </trans-unit>
        <trans-unit id="0101700ae7ee3247de5052bf7ea3d11a837378c4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;setTimeout()&lt;/code&gt; to wait one tick and then revise the &lt;code&gt;seconds()&lt;/code&gt; method so that it takes future values from the timer component.</source>
          <target state="translated">使用 &lt;code&gt;setTimeout()&lt;/code&gt; 等待一滴答，然后修改 &lt;code&gt;seconds()&lt;/code&gt; 方法，以便它从计时器组件中获取将来的值。</target>
        </trans-unit>
        <trans-unit id="cb1322724221816f73d5c0329a7eb5dcab8960c7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;upgradeNg1Component&lt;/code&gt; to create an Angular component from AngularJS Component directive. The adapter will bootstrap AngularJS component from within the Angular template.</source>
          <target state="translated">使用 &lt;code&gt;upgradeNg1Component&lt;/code&gt; 从AngularJS Component指令创建Angular组件。适配器将从Angular模板中引导AngularJS组件。</target>
        </trans-unit>
        <trans-unit id="50956624e8944e35a6d37b0adb8e3d1bd4c37693" translate="yes" xml:space="preserve">
          <source>Use &lt;em&gt;root URLs&lt;/em&gt; for all web resources: CSS, images, scripts, and template HTML files.</source>
          <target state="translated">对所有Web资源使用&lt;em&gt;根URL&lt;/em&gt;：CSS，图像，脚本和模板HTML文件。</target>
        </trans-unit>
        <trans-unit id="f68ad6eb4d6688ff5a2c57197008e76e1821ce58" translate="yes" xml:space="preserve">
          <source>Use Angular to internationalize your app:</source>
          <target state="translated">使用Angular使你的应用国际化。</target>
        </trans-unit>
        <trans-unit id="d7e4cec0c39ff853653baaf07391c9b86a46c7e8" translate="yes" xml:space="preserve">
          <source>Use Angular's &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; function to define different states to call at the end of each transition. This function takes two arguments: a unique name like &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt; and a &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">使用Angular的 &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; 函数定义不同的状态，以在每次转换结束时调用。此函数有两个参数：唯一的名称（如 &lt;code&gt;open&lt;/code&gt; 或 &lt;code&gt;closed&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="4a03f29e1bd5ed1ad5fcb9c4057f36f7e599cdd5" translate="yes" xml:space="preserve">
          <source>Use Angular's &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; function to define different states to call at the end of each transition. This function takes two arguments: a unique name like &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt; and a &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">使用Angular的 &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 函数定义不同的状态，以在每次转换结束时调用。此函数有两个参数：唯一的名称（如 &lt;code&gt;open&lt;/code&gt; 或 &lt;code&gt;closed&lt;/code&gt; 和一个 &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="87f7bdc684fc8838c17afd26ef0911196a4cc431" translate="yes" xml:space="preserve">
          <source>Use HTML tables to present tabular data.</source>
          <target state="translated">使用HTML表格来呈现表格数据。</target>
        </trans-unit>
        <trans-unit id="ec5c920a15553b3593ed958ca394d921868892c7" translate="yes" xml:space="preserve">
          <source>Use Ivy compiler to extract translations. The default for Ivy applications.</source>
          <target state="translated">使用Ivy编译器来提取翻译。Ivy应用程序的默认值。</target>
        </trans-unit>
        <trans-unit id="d52844f8f4d368ecefe3c48b7579af4485aa36ae" translate="yes" xml:space="preserve">
          <source>Use Lifecycle hooks to tap into important events exposed by Angular.</source>
          <target state="translated">使用生命周期钩子来挖掘Angular暴露的重要事件。</target>
        </trans-unit>
        <trans-unit id="9658986afcec6ffd4c7f6a0574e23679c2ba6611" translate="yes" xml:space="preserve">
          <source>Use Shadow DOM to encapsulate styles.</source>
          <target state="translated">使用Shadow DOM来封装样式。</target>
        </trans-unit>
        <trans-unit id="f08d443a95d8465aefd51bbcd60a391957292522" translate="yes" xml:space="preserve">
          <source>Use TypeScript path mapping for peer dependencies</source>
          <target state="translated">对同行依赖使用TypeScript路径映射。</target>
        </trans-unit>
        <trans-unit id="9cc4b5a0a1615c582c8ca48d1ec27455af6a185b" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;button&lt;/code&gt; element to add a button to the bottom of the form to trigger the form submission.</source>
          <target state="translated">使用 &lt;code&gt;button&lt;/code&gt; 元素将一个按钮添加到表单底部以触发表单提交。</target>
        </trans-unit>
        <trans-unit id="5b5ea0356b91d0915d4b8c036e052844c79a4502" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;formGroup&lt;/code&gt; property binding to bind the &lt;code&gt;checkoutForm&lt;/code&gt; to the &lt;code&gt;form&lt;/code&gt; tag in the template. Also include a &quot;Purchase&quot; button to submit the form.</source>
          <target state="translated">使用 &lt;code&gt;formGroup&lt;/code&gt; 属性绑定将 &lt;code&gt;checkoutForm&lt;/code&gt; 绑定到模板中的 &lt;code&gt;form&lt;/code&gt; 标记。还包括一个&amp;ldquo;购买&amp;rdquo;按钮来提交表单。</target>
        </trans-unit>
        <trans-unit id="fdac760c5116185edbb31c4a9ad9c814fe4129bb" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;page&lt;/code&gt; object</source>
          <target state="translated">使用 &lt;code&gt;page&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="d47d2a657fa1d3c60905a8a9ccd668a501f568ba" translate="yes" xml:space="preserve">
          <source>Use a JavaScript function, &lt;code&gt;customElements.define()&lt;/code&gt;, to register the configured constructor and its associated custom-element tag with the browser's &lt;code&gt;CustomElementRegistry&lt;/code&gt;. When the browser encounters the tag for the registered element, it uses the constructor to create a custom-element instance.</source>
          <target state="translated">使用JavaScript函数 &lt;code&gt;customElements.define()&lt;/code&gt; 向浏览器的 &lt;code&gt;CustomElementRegistry&lt;/code&gt; 注册配置的构造函数及其关联的custom-element标签。当浏览器遇到注册元素的标记时，它使用构造函数创建一个自定义元素实例。</target>
        </trans-unit>
        <trans-unit id="e11d85bbf17531fc966e61cec648e173daa88850" translate="yes" xml:space="preserve">
          <source>Use a custom ID in combination with a description and a meaning to further help the translator. The following example includes a description, followed by the custom &lt;code&gt;id&lt;/code&gt;:</source>
          <target state="translated">将自定义ID与描述和含义结合使用，以进一步帮助翻译者。以下示例包含说明，后跟自定义 &lt;code&gt;id&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5ac9de1a85442b5f767db862207e329fbac7588a" translate="yes" xml:space="preserve">
          <source>Use a custom ID with a description</source>
          <target state="translated">使用带有描述的自定义ID</target>
        </trans-unit>
        <trans-unit id="72a2b18f27d211118108e49c2dd0efc7f61f3f3d" translate="yes" xml:space="preserve">
          <source>Use a custom id with a description</source>
          <target state="translated">使用带有描述的自定义ID</target>
        </trans-unit>
        <trans-unit id="ca0772b11fa11c22b7bfb2cc9e1ebd036d26eb58" translate="yes" xml:space="preserve">
          <source>Use a custom renderer to bypass Angular's templating and make custom UI changes that can't be expressed declaratively. For example if you need to set a property or an attribute whose name is not statically known, use the &lt;code&gt;setProperty()&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;setAttribute()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">使用自定义渲染器绕过Angular的模板，并进行无法以声明方式表示的自定义UI更改。例如，如果您需要设置名称不是静态已知的属性或属性，请使用 &lt;code&gt;setProperty()&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;renderer2&quot;&gt;setAttribute()&lt;/a&gt;&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="324492ab6afe96a5c1328132beb31f646858e801" translate="yes" xml:space="preserve">
          <source>Use a custom renderer to bypass Angular's templating and make custom UI changes that can't be expressed declaratively. For example if you need to set a property or an attribute whose name is not statically known, use the &lt;code&gt;setProperty()&lt;/code&gt; or &lt;code&gt;setAttribute()&lt;/code&gt; method.</source>
          <target state="translated">使用自定义渲染器绕过Angular的模板并进行无法以声明方式表示的自定义UI更改。例如，如果您需要设置名称未知的属性或属性，请使用 &lt;code&gt;setProperty()&lt;/code&gt; 或 &lt;code&gt;setAttribute()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="ae19a71533b3168e6642bdceac36b609f94c8c0b" translate="yes" xml:space="preserve">
          <source>Use a domain NgModule to deliver a user experience dedicated to a particular feature or app domain, such as editing a customer or placing an order. One example is &lt;code&gt;ContactModule&lt;/code&gt; in the .</source>
          <target state="translated">使用域NgModule交付专用于特定功能或应用程序域的用户体验，例如编辑客户或下订单。一个示例是中的 &lt;code&gt;ContactModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2defd1faf147625042e6e427843821178b67bd1b" translate="yes" xml:space="preserve">
          <source>Use a double arrow syntax to specify state-to-state transitions in both directions.</source>
          <target state="translated">使用双箭头语法来指定两个方向的状态到状态转换。</target>
        </trans-unit>
        <trans-unit id="cf0e2d5905731592af7783a6403e3eef4ccc5310" translate="yes" xml:space="preserve">
          <source>Use a routed NgModule for all &lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;lazy-loaded NgModules&lt;/a&gt;. Use the top component of the NgModule as the destination of a router navigation route. Routed NgModules don&amp;rsquo;t export anything because their components never appear in the template of an external component.</source>
          <target state="translated">对所有&lt;a href=&quot;lazy-loading-ngmodules&quot;&gt;延迟加载的NgModule&lt;/a&gt;使用路由NgModule。使用NgModule的顶部组件作为路由器导航路径的目的地。路由的NgModule不导出任何内容，因为它们的组件永远不会出现在外部组件的模板中。</target>
        </trans-unit>
        <trans-unit id="b29c1902dc3b84e1d2bfda7af9e4d7a1fb9a38cd" translate="yes" xml:space="preserve">
          <source>Use a routing NgModule to do the following tasks:</source>
          <target state="translated">使用路由NgModule来完成以下任务。</target>
        </trans-unit>
        <trans-unit id="4bb61bb5e6543cfdd382ac4b8fa11733424beebe" translate="yes" xml:space="preserve">
          <source>Use a routing NgModule to provide the routing configuration for a domain NgModule, thereby separating routing concerns from its companion domain NgModule. One example is &lt;code&gt;ContactRoutingModule&lt;/code&gt; in the , which provides the routing for its companion domain NgModule &lt;code&gt;ContactModule&lt;/code&gt;.</source>
          <target state="translated">使用路由NgModule为域NgModule提供路由配置，从而将路由问题与其配套域NgModule分开。一个示例是中的 &lt;code&gt;ContactRoutingModule&lt;/code&gt; ，它为其伴侣域NgModule &lt;code&gt;ContactModule&lt;/code&gt; 提供路由。</target>
        </trans-unit>
        <trans-unit id="8f86fd2cb52558a5f799a9078de5c642cbd17287" translate="yes" xml:space="preserve">
          <source>Use a separate bundle containing code used across multiple bundles.</source>
          <target state="translated">使用一个单独的捆绑包,包含多个捆绑包中使用的代码。</target>
        </trans-unit>
        <trans-unit id="4de7347c4ae42c0338292a697420d7631cff3899" translate="yes" xml:space="preserve">
          <source>Use a separate bundle containing only vendor libraries.</source>
          <target state="translated">使用一个单独的捆绑包,只包含供应商库。</target>
        </trans-unit>
        <trans-unit id="b7e178a75364c4b303869a2ad4fc54a9e1bf8428" translate="yes" xml:space="preserve">
          <source>Use a service NgModule to provide a utility service such as data access or messaging. Ideal service NgModules consist entirely of providers and have no declarations. Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; is a good example of a service NgModule.</source>
          <target state="translated">使用服务NgModule提供实用程序服务，例如数据访问或消息传递。理想的服务NgModules完全由提供者组成，没有声明。Angular的 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 是服务NgModule的一个很好的例子。</target>
        </trans-unit>
        <trans-unit id="8e38b8225305a78fe4c035082f1e5127ab107991" translate="yes" xml:space="preserve">
          <source>Use a widget NgModule to make a component, directive, or pipe available to external NgModules. Import widget NgModules into any NgModules that need the widgets in their templates. Many third-party UI component libraries are provided as widget NgModules.</source>
          <target state="translated">使用NgModule小部件使一个组件、指令或管道可供外部NgModules使用。将widget NgModules导入到任何需要widget的NgModules模板中。许多第三方UI组件库都是作为widget NgModules提供的。</target>
        </trans-unit>
        <trans-unit id="7d1d96dbe4bfa2f8afd5e063fb099246e2f933e9" translate="yes" xml:space="preserve">
          <source>Use an &lt;code&gt;&lt;a href=&quot;injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; whenever the type you are injecting is not reified (does not have a runtime representation) such as when injecting an interface, callable type, array or parameterized type.</source>
          <target state="translated">每当您要注入的类型未得到确定（没有运行时表示形式）时，例如在注入接口，可调用类型，数组或参数化类型时，都应使用 &lt;code&gt;&lt;a href=&quot;injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b24b7564615489f70464a0b684de4d00e3cad09" translate="yes" xml:space="preserve">
          <source>Use an input property setter to intercept and act upon a value from the parent.</source>
          <target state="translated">使用输入属性设置器拦截并作用于来自父代的值。</target>
        </trans-unit>
        <trans-unit id="aa89ae11b8e5412bd5017dd7f915184a5121c58a" translate="yes" xml:space="preserve">
          <source>Use both techniques together</source>
          <target state="translated">两种技术同时使用</target>
        </trans-unit>
        <trans-unit id="4eafa3af4b3e987e09122d57532c433e31ef809a" translate="yes" xml:space="preserve">
          <source>Use built-in Angular &lt;a href=&quot;guide/glossary#directive&quot;&gt;directives&lt;/a&gt; to show and hide elements and display lists of hero data.</source>
          <target state="translated">使用内置的Angular&lt;a href=&quot;guide/glossary#directive&quot;&gt;指令&lt;/a&gt;显示和隐藏元素以及显示英雄数据列表。</target>
        </trans-unit>
        <trans-unit id="58c616bd0cf85cc12a155f6a80ac80d1c6ac921b" translate="yes" xml:space="preserve">
          <source>Use built-in Angular directives to show and hide elements and display lists of hero data.</source>
          <target state="translated">使用内置的Angular指令来显示和隐藏元素,并显示英雄数据的列表。</target>
        </trans-unit>
        <trans-unit id="4fa5e4ac160ff5a6b000cb0799ec5b92924a2584" translate="yes" xml:space="preserve">
          <source>Use built-in pipes to display dates, numbers, percentages, and currencies in a local format.</source>
          <target state="translated">使用内置管道以本地格式显示日期、数字、百分比和货币。</target>
        </trans-unit>
        <trans-unit id="23828409823ed5397303067cdf5cba92e9ebb5fd" translate="yes" xml:space="preserve">
          <source>Use component and directive hooks together</source>
          <target state="translated">同时使用组件和指令挂钩</target>
        </trans-unit>
        <trans-unit id="ba903051e852b2dc8a92992587da4085b281db62" translate="yes" xml:space="preserve">
          <source>Use directives to enhance an element</source>
          <target state="translated">使用指令来增强一个元素</target>
        </trans-unit>
        <trans-unit id="9f1377b56ad4c7adfb2e74c604fbe25bb8824c1d" translate="yes" xml:space="preserve">
          <source>Use directives to watch the DOM</source>
          <target state="translated">使用指令来观察DOM</target>
        </trans-unit>
        <trans-unit id="950c5862a83002acbd6de76109f9c7b8bfbeed34" translate="yes" xml:space="preserve">
          <source>Use empty path routes to group routes together without adding any additional path segments to the URL. Users will still visit &lt;code&gt;/admin&lt;/code&gt; and the &lt;code&gt;AdminComponent&lt;/code&gt; still serves as the Routing Component containing child routes.</source>
          <target state="translated">使用空路径路由将路由分组在一起，而无需在URL中添加任何其他路径段。用户仍将访问 &lt;code&gt;/admin&lt;/code&gt; ，并且 &lt;code&gt;AdminComponent&lt;/code&gt; 仍充当包含子路由的路由组件。</target>
        </trans-unit>
        <trans-unit id="12ab61a4fd4336f2c2953a0f712c04fb91949dba" translate="yes" xml:space="preserve">
          <source>Use file name for lazy loaded chunks.</source>
          <target state="translated">使用文件名为懒加载块。</target>
        </trans-unit>
        <trans-unit id="f8f0525e366cb8c77a4916b799b14b984e598076" translate="yes" xml:space="preserve">
          <source>Use in components with the &lt;code&gt;@&lt;a href=&quot;core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; directive to emit custom events synchronously or asynchronously, and register handlers for those events by subscribing to an instance.</source>
          <target state="translated">在带有 &lt;code&gt;@&lt;a href=&quot;core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; 指令的组件中使用，以同步或异步方式发送自定义事件，并通过订阅实例来注册这些事件的处理程序。</target>
        </trans-unit>
        <trans-unit id="6610f463a7407078fa7bae85f8fc8f843b6debb4" translate="yes" xml:space="preserve">
          <source>Use in components with the &lt;code&gt;@&lt;a href=&quot;output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; directive to emit custom events synchronously or asynchronously, and register handlers for those events by subscribing to an instance.</source>
          <target state="translated">在带有 &lt;code&gt;@&lt;a href=&quot;output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; 指令的组件中使用，以同步或异步方式发送自定义事件，并通过订阅实例来注册这些事件的处理程序。</target>
        </trans-unit>
        <trans-unit id="9848cb209b02d0955db09afd48d35722b7baf9e6" translate="yes" xml:space="preserve">
          <source>Use in development mode to verify that running change detection doesn't introduce other changes.</source>
          <target state="translated">在开发模式下使用,以验证运行变更检测不会引入其他变更。</target>
        </trans-unit>
        <trans-unit id="562fbe07806719e4eb320decc50510c6f8fcbd9d" translate="yes" xml:space="preserve">
          <source>Use integration testing for your builder, so that you can use the Architect scheduler to create a context, as in this &lt;a href=&quot;https://github.com/mgechev/cli-builders-demo&quot;&gt;example&lt;/a&gt;.</source>
          <target state="translated">对构建器使用集成测试，以便您可以使用Architect调度程序来创建上下文，如本&lt;a href=&quot;https://github.com/mgechev/cli-builders-demo&quot;&gt;例所示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="922b5062ec0572aa1adccb4f5632805f5154deab" translate="yes" xml:space="preserve">
          <source>Use kebab-case for downgraded component attributes</source>
          <target state="translated">对降级后的组件属性使用kebab-case。</target>
        </trans-unit>
        <trans-unit id="44f566857d643f1d49f711c0b30d0dc6a3ffce4b" translate="yes" xml:space="preserve">
          <source>Use keyframes to create a pulse effect in your animations by defining styles at specific offset throughout the animation.</source>
          <target state="translated">通过在整个动画中定义特定偏移的样式,使用关键帧在动画中创建脉冲效果。</target>
        </trans-unit>
        <trans-unit id="fd613fa5fcd4a8580220c7bfbc8b1e7cd0225fe6" translate="yes" xml:space="preserve">
          <source>Use mock crises instead of mock heroes:</source>
          <target state="translated">用模拟危机代替模拟英雄。</target>
        </trans-unit>
        <trans-unit id="f78e562ea1e7f343fb60afc2c7e41be5afad1302" translate="yes" xml:space="preserve">
          <source>Use nested form groups to validate a sub-group of a form separately from the rest or to group the values of certain controls into their own nested object.</source>
          <target state="translated">使用嵌套的表单组来验证表单的一个子组与其他子组的分离,或者将某些控件的值分组到自己的嵌套对象中。</target>
        </trans-unit>
        <trans-unit id="ae0b7c6086be4df2a4b72a414920640b2b9519a5" translate="yes" xml:space="preserve">
          <source>Use of *ngIf and *ngFor with :enter and :leave</source>
          <target state="translated">在:enter和:leave中使用*ngIf和*ngFor。</target>
        </trans-unit>
        <trans-unit id="d322e89d8709c00474049e733e76b74c2ec2e87b" translate="yes" xml:space="preserve">
          <source>Use one-way &lt;a href=&quot;guide/glossary#data-binding&quot;&gt;data binding&lt;/a&gt; for read-only data.</source>
          <target state="translated">对只读&lt;a href=&quot;guide/glossary#data-binding&quot;&gt;数据&lt;/a&gt;使用单向数据绑定。</target>
        </trans-unit>
        <trans-unit id="825f8becf5e248543919edc40655a1407e732140" translate="yes" xml:space="preserve">
          <source>Use one-way data binding for read-only data.</source>
          <target state="translated">对只读数据使用单向数据绑定。</target>
        </trans-unit>
        <trans-unit id="b019f13aecefec4b1ef5f1581bf4c9362c846575" translate="yes" xml:space="preserve">
          <source>Use only the root &lt;code&gt;AppModule&lt;/code&gt; to import service NgModules.</source>
          <target state="translated">仅使用根 &lt;code&gt;AppModule&lt;/code&gt; 导入服务NgModules。</target>
        </trans-unit>
        <trans-unit id="84ab263256ce0670db1121c29c0f37c632743fb5" translate="yes" xml:space="preserve">
          <source>Use optional parameters to fine-tune a pipe's output. For example, you can use the &lt;a href=&quot;../api/common/currencypipe&quot;&gt;&lt;code&gt;CurrencyPipe&lt;/code&gt;&lt;/a&gt; with a country code such as EUR as a parameter. The template expression &lt;code&gt;{{ amount | &lt;a href=&quot;../api/common/currencypipe&quot;&gt;currency&lt;/a&gt;:'EUR' }}&lt;/code&gt; transforms the &lt;code&gt;amount&lt;/code&gt; to currency in euros. Follow the pipe name (&lt;code&gt;&lt;a href=&quot;../api/common/currencypipe&quot;&gt;currency&lt;/a&gt;&lt;/code&gt;) with a colon (&lt;code&gt;:&lt;/code&gt;) and the parameter value (&lt;code&gt;'EUR'&lt;/code&gt;).</source>
          <target state="translated">使用可选参数可以微调管道的输出。例如，您可以将&lt;a href=&quot;../api/common/currencypipe&quot;&gt; &lt;code&gt;CurrencyPipe&lt;/code&gt; &lt;/a&gt;与国家/地区代码（例如EUR）一起使用作为参数。模板表达式 &lt;code&gt;{{ amount | &lt;a href=&quot;../api/common/currencypipe&quot;&gt;currency&lt;/a&gt;:'EUR' }}&lt;/code&gt; 将 &lt;code&gt;amount&lt;/code&gt; 转换为欧元货币。按照管道名称（ &lt;code&gt;&lt;a href=&quot;../api/common/currencypipe&quot;&gt;currency&lt;/a&gt;&lt;/code&gt; ）以冒号（ &lt;code&gt;:&lt;/code&gt; ）和参数值（ &lt;code&gt;'EUR'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="33c9c9b12a49197173a1f9a9e99b1ab027db7481" translate="yes" xml:space="preserve">
          <source>Use property binding to &lt;em&gt;set&lt;/em&gt; properties of target elements or directive &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorators. For an example demonstrating all of the points in this section, see the &lt;span name=&quot;property-binding&quot;&gt;property binding example&lt;/span&gt;.</source>
          <target state="translated">使用属性绑定来&lt;em&gt;设置&lt;/em&gt;目标元素或指令 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 装饰器的属性。有关演示本节中所有要点的示例，请参见&lt;span name=&quot;property-binding&quot;&gt;属性绑定示例&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="372dfe3d09c315bc93b1ea423f2929945069773a" translate="yes" xml:space="preserve">
          <source>Use root URLs (URLs with an &lt;code&gt;authority&lt;/code&gt;) for all web resources: CSS, images, scripts, and template HTML files.</source>
          <target state="translated">对所有Web资源使用根URL（具有 &lt;code&gt;authority&lt;/code&gt; URL ）：CSS，图像，脚本和模板HTML文件。</target>
        </trans-unit>
        <trans-unit id="0df3164dd6957c5324cc16a1bec4b3c77625f9c7" translate="yes" xml:space="preserve">
          <source>Use route guards to prevent users from navigating to parts of an app without authorization. The following route guards are available in Angular:</source>
          <target state="translated">使用路由守卫来防止用户在未经授权的情况下导航到应用程序的部分。Angular中提供了以下路由守卫。</target>
        </trans-unit>
        <trans-unit id="0e687455aeeac52967421ad9e0ea548379e0207c" translate="yes" xml:space="preserve">
          <source>Use route parameters</source>
          <target state="translated">使用途径参数</target>
        </trans-unit>
        <trans-unit id="83397ceeb8cb2ee18c72cf2e39d941138c6e3d3b" translate="yes" xml:space="preserve">
          <source>Use routing to navigate among different views and their components.</source>
          <target state="translated">使用路由在不同的视图及其组件之间导航。</target>
        </trans-unit>
        <trans-unit id="4cdf0fd45f5b27136f0216be71f8f71b7ad6ec2e" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;&lt;code&gt;HTTPClient.get()&lt;/code&gt;&lt;/a&gt; method to fetch data from a server. The asynchronous method sends an HTTP request, and returns an Observable that emits the requested data when the response is received. The return type varies based on the &lt;code&gt;observe&lt;/code&gt; and &lt;code&gt;responseType&lt;/code&gt; values that you pass to the call.</source>
          <target state="translated">使用&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt; &lt;code&gt;HTTPClient.get()&lt;/code&gt; &lt;/a&gt;方法从服务器获取数据。异步方法发送HTTP请求，并返回一个Observable，当接收到响应时，该Observable发出请求的数据。返回类型根据传递给调用的 &lt;code&gt;observe&lt;/code&gt; 和 &lt;code&gt;responseType&lt;/code&gt; 值而有所不同。</target>
        </trans-unit>
        <trans-unit id="39c1797df4b9af407e3710887e87a8ad9487e6aa" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; to automatically set up your project with the correct polyfill:</source>
          <target state="translated">使用&lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;使用正确的polyfill自动设置项目：</target>
        </trans-unit>
        <trans-unit id="0bfd4f1040c27256f1f7a7669dce5333fc8f6d46" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; to automatically set up your project with the correct polyfill: &lt;code&gt;ng add @angular/elements --name=*your_project_name*&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;使用正确的polyfill自动设置项目： &lt;code&gt;ng add @angular/elements --name=*your_project_name*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfda0e354b6fefc979aa3e2846531a503fd7a71b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;cli&quot;&gt;CLI command&lt;/a&gt;&lt;code&gt;ng generate&lt;/code&gt; to generate a component in your project to host the control.</source>
          <target state="translated">使用&lt;a href=&quot;cli&quot;&gt;CLI命令&lt;/a&gt; &lt;code&gt;ng generate&lt;/code&gt; 可以在项目中生成一个组件来承载控件。</target>
        </trans-unit>
        <trans-unit id="eb0967d7ae25fbeb074644d90cbc2a0b6e09376c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;cli/run&quot;&gt;CLI command &lt;code&gt;ng run&lt;/code&gt;&lt;/a&gt; to invoke a builder by specifying a &lt;a href=&quot;glossary#target&quot;&gt;target configuration&lt;/a&gt; associated with that builder. Integrators can add builders to enable tools and workflows to run through the Angular CLI. For example, a custom builder can replace the third-party tools used by the built-in implementations for CLI commands such as &lt;code&gt;ng build&lt;/code&gt; or &lt;code&gt;ng test&lt;/code&gt;.</source>
          <target state="translated">通过指定与该构建器关联的&lt;a href=&quot;glossary#target&quot;&gt;目标配置&lt;/a&gt;，使用&lt;a href=&quot;cli/run&quot;&gt;CLI命令 &lt;code&gt;ng run&lt;/code&gt; &lt;/a&gt;调用构建器。集成商可以添加构建器以使工具和工作流能够通过Angular CLI运行。例如，自定义生成器可以替换CLI命令（例如 &lt;code&gt;ng build&lt;/code&gt; 或 &lt;code&gt;ng test&lt;/code&gt; )的内置实现所使用的第三方工具。</target>
        </trans-unit>
        <trans-unit id="9f443ef713021a89a07c940630b1de13045528f0" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;singleton-services#providedIn&quot;&gt;&lt;code&gt;providedIn&lt;/code&gt; syntax&lt;/a&gt; instead of registering the service in the module.</source>
          <target state="translated">使用&lt;a href=&quot;singleton-services#providedIn&quot;&gt; &lt;code&gt;providedIn&lt;/code&gt; 语法&lt;/a&gt;而不是在模块中注册服务。</target>
        </trans-unit>
        <trans-unit id="92e5840b8af8374ad2ebbe47694fb89faef0677c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;template-expression-operators#any-type-cast-function&quot;&gt;&lt;code&gt;$any()&lt;/code&gt; type-cast function&lt;/a&gt; in certain contexts to opt out of type-checking for a part of the expression.</source>
          <target state="translated">在某些情况下，使用&lt;a href=&quot;template-expression-operators#any-type-cast-function&quot;&gt; &lt;code&gt;$any()&lt;/code&gt; 类型转换函数&lt;/a&gt;可以选择不对部分表达式进行类型检查。</target>
        </trans-unit>
        <trans-unit id="3e66ddd3ed9a2939ac4e252bd5468007fd696006" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;template-expression-operators#non-null-assertion-operator&quot;&gt;non-null type assertion operator&lt;/a&gt; to suppress the &lt;code&gt;Object is possibly 'undefined'&lt;/code&gt; error when it is inconvenient to use &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; or when some constraint in the component ensures that the expression is always non-null when the binding expression is interpolated.</source>
          <target state="translated">当不方便使用 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;或组件中的某些约束确保对绑定表达式进行插值时，表达式始终为非空时，请使用&lt;a href=&quot;template-expression-operators#non-null-assertion-operator&quot;&gt;非空类型的断言运算符&lt;/a&gt;来抑制 &lt;code&gt;Object is possibly 'undefined'&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="802892225bada3f629d8e440f05c2e60e8ea54c8" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;template-syntax#non-null-assertion-operator&quot;&gt;non-null type assertion operator&lt;/a&gt; to suppress the &lt;code&gt;Object is possibly 'undefined'&lt;/code&gt; error when it is inconvenient to use &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; or when some constraint in the component ensures that the expression is always non-null when the binding expression is interpolated.</source>
          <target state="translated">当不方便使用 &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;或组件中的某些约束确保对绑定表达式进行插值时，表达式始终为非空时，请使用&lt;a href=&quot;template-syntax#non-null-assertion-operator&quot;&gt;非空类型的断言运算符&lt;/a&gt;来抑制 &lt;code&gt;Object is possibly 'undefined'&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="5a253ee9798a26a31ec1940c9c82d1392f5a3876" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; pseudo-class selector to target styles in the element that &lt;em&gt;hosts&lt;/em&gt; the component (as opposed to targeting elements &lt;em&gt;inside&lt;/em&gt; the component's template).</source>
          <target state="translated">使用 &lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; 伪类选择器可以在&lt;em&gt;承载&lt;/em&gt;组件的元素中定位样式（与在组件模板&lt;em&gt;内&lt;/em&gt;定位元素相反）。</target>
        </trans-unit>
        <trans-unit id="3d5018825bf0a7d2fd0cd9ddf6fdbc3f0fd42061" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;:host-context()&lt;/code&gt; pseudo-class selector, which works just like the function form of &lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;()&lt;/code&gt;. The &lt;code&gt;:host-context()&lt;/code&gt; selector looks for a CSS class in any ancestor of the component host element, up to the document root. The &lt;code&gt;:host-context()&lt;/code&gt; selector is useful when combined with another selector.</source>
          <target state="translated">使用 &lt;code&gt;:host-context()&lt;/code&gt; 伪类选择器，其工作方式与 &lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;()&lt;/code&gt; 的函数形式相同。的 &lt;code&gt;:host-context()&lt;/code&gt; 选择查找在组件主机元件的任何祖先，直到文档根CSS类。的 &lt;code&gt;:host-context()&lt;/code&gt; 当与另一个选择器选择器组合是有用的。</target>
        </trans-unit>
        <trans-unit id="e72b9954eaff41b26847a659d8c0f90cb35a7a3f" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;:host-context()&lt;/code&gt; pseudo-class selector, which works just like the function form of &lt;code&gt;:host()&lt;/code&gt;. The &lt;code&gt;:host-context()&lt;/code&gt; selector looks for a CSS class in any ancestor of the component host element, up to the document root. The &lt;code&gt;:host-context()&lt;/code&gt; selector is useful when combined with another selector.</source>
          <target state="translated">使用 &lt;code&gt;:host-context()&lt;/code&gt; 伪类选择器，其功能类似于 &lt;code&gt;:host()&lt;/code&gt; 的函数形式。的 &lt;code&gt;:host-context()&lt;/code&gt; 选择查找在组件主机元件的任何祖先，直到文档根CSS类。的 &lt;code&gt;:host-context()&lt;/code&gt; 当与另一个选择器选择器组合是有用的。</target>
        </trans-unit>
        <trans-unit id="1eb6b173a1c3356126f8b598723f08cf244e5776" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;:host&lt;/code&gt; pseudo-class selector to target styles in the element that &lt;em&gt;hosts&lt;/em&gt; the component (as opposed to targeting elements &lt;em&gt;inside&lt;/em&gt; the component's template).</source>
          <target state="translated">使用 &lt;code&gt;:host&lt;/code&gt; 伪类选择器可在&lt;em&gt;承载&lt;/em&gt;组件的元素中定位样式（与在组件模板&lt;em&gt;内&lt;/em&gt;定位元素相反）。</target>
        </trans-unit>
        <trans-unit id="c620015e08354210a92a8e92a39367a30c7b96b6" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function to define the length, delay, and easing of a transition, and to designate the style function for defining styles while transitions are taking place. You can also use the &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function to define the &lt;code&gt;&lt;a href=&quot;../api/animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; function for multi-step animations. These definitions are placed in the second argument of the &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 函数定义过渡的长度，延迟和缓和，并指定用于在过渡发生时定义样式的样式函数。您也可以使用 &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../api/animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; 函数为多步动画定义&lt;a href=&quot;../api/animations/keyframes&quot;&gt;关键帧&lt;/a&gt;（）函数。这些定义位于 &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; （）的第二个参数中函数。</target>
        </trans-unit>
        <trans-unit id="f32ed10372c1cab9fb95fe4e02cc957f60ec0b21" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; method to create the &lt;code&gt;profileForm&lt;/code&gt; controls.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; 方法来创建 &lt;code&gt;profileForm&lt;/code&gt; 控件。</target>
        </trans-unit>
        <trans-unit id="8bdd7bc62b27869a9b7bb04eb7df3c59285d92cc" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; method to find and animate elements within the current host component. The &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(&quot;:enter&quot;)&lt;/code&gt; statement returns the view that is being inserted, and &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(&quot;:leave&quot;)&lt;/code&gt; returns the view that is being removed.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 方法在当前宿主组件中查找元素并为其设置动画。该 &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(&quot;:enter&quot;)&lt;/code&gt; 语句返回被插入的视图， &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;(&quot;:leave&quot;)&lt;/code&gt; 返回正在被删除的视图。</target>
        </trans-unit>
        <trans-unit id="ebd22958c7847fa77a78ef8e03b47db2e683c9d2" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; function to define a set of styles to associate with a given state name. Note that the style attributes must be in &lt;a href=&quot;glossary#case-conventions&quot;&gt;&lt;em&gt;camelCase&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 函数定义一组与给定状态名称关联的样式。请注意，样式属性必须位于&lt;a href=&quot;glossary#case-conventions&quot;&gt;&lt;em&gt;camelCase中&lt;/em&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0fa654e1834814316ba8811c61caee652776bb4c" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; class with the &lt;code&gt;params&lt;/code&gt; request option to add URL query strings in your &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; 类与 &lt;code&gt;params&lt;/code&gt; request选项一起使用，可以在 &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; 中添加URL查询字符串。</target>
        </trans-unit>
        <trans-unit id="91acc14e39e5119c18415965f1423d1c1e94ab00" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; method to simulate the passage of time within the &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; task.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; 方法来模拟 &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; 任务中的时间流逝。</target>
        </trans-unit>
        <trans-unit id="6e11e33b2cc2033eeec839ccb2bf4ff8db1df75b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; array as another way to provide services in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator. Using &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; makes services visibile in the &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 数组作为在 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 装饰器中提供服务的另一种方法。使用 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 使服务在 &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 中可见。</target>
        </trans-unit>
        <trans-unit id="e9da9c13c3494d39f9b8123dc99a605e807be36b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;&lt;/code&gt; hook to detect and act upon changes that Angular doesn't catch on its own.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;&lt;/code&gt; 挂钩来检测Angular自身无法捕获的更改并对其采取措施。</target>
        </trans-unit>
        <trans-unit id="d7752a1ea977f4ad7b461d4d69d81c8a873f6eeb" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick&lt;/a&gt;()&lt;/code&gt; method to simulate the passage of time within the &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; task.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick&lt;/a&gt;()&lt;/code&gt; 方法来模拟 &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; 任务中的时间流逝。</target>
        </trans-unit>
        <trans-unit id="b14dbf457ff7a844ac29eacc3c02344a0ca4f6f9" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;../api/elements/createcustomelement&quot;&gt;createCustomElement&lt;/a&gt;()&lt;/code&gt; function to convert a component into a class that can be registered with the browser as a custom element. After you register your configured class with the browser's custom-element registry, you can use the new element just like a built-in HTML element in content that you add directly into the DOM:</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/elements/createcustomelement&quot;&gt;createCustomElement&lt;/a&gt;()&lt;/code&gt; 函数将组件转换为可以在浏览器中注册为自定义元素的类。在使用浏览器的自定义元素注册表注册配置的类之后，可以像直接将内容添加到DOM中的内置HTML元素一样使用new元素：</target>
        </trans-unit>
        <trans-unit id="c24aafb47c577f92905ee4910fc51532818acf73" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#array&quot;&gt;FormBuilder.array()&lt;/a&gt;&lt;/code&gt; method to define the array, and the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#control&quot;&gt;FormBuilder.control()&lt;/a&gt;&lt;/code&gt; method to populate the array with an initial control.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#array&quot;&gt;FormBuilder.array()&lt;/a&gt;&lt;/code&gt; 方法定义数组，并使用 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#control&quot;&gt;FormBuilder.control()&lt;/a&gt;&lt;/code&gt; 方法用初始控件填充数组。</target>
        </trans-unit>
        <trans-unit id="ee7d38fbbd61f8f37159836272223af030e2357d" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; method to create a programmatic animation using the &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function. The method returns an &lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;AnimationFactory&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;animationbuilder&quot;&gt;build()&lt;/a&gt;&lt;/code&gt; 方法通过 &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 函数创建程序动画。该方法返回一个 &lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;AnimationFactory&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="3765ca5842a3e715a91529c10554d2f2c436e303" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;CheckOnce&lt;/a&gt;&lt;/code&gt; strategy, meaning that automatic change detection is deactivated until reactivated by setting the strategy to &lt;code&gt;Default&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;CheckAlways&lt;/a&gt;&lt;/code&gt;). Change detection can still be explicitly invoked. This strategy applies to all child directives and cannot be overridden.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;CheckOnce&lt;/a&gt;&lt;/code&gt; 策略，这意味着通过将策略设置为 &lt;code&gt;Default&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;CheckAlways&lt;/a&gt;&lt;/code&gt; ）将自动更改检测禁用，直到重新激活为止。更改检测仍然可以显式调用。此策略适用于所有子指令，并且不能被覆盖。</target>
        </trans-unit>
        <trans-unit id="b2cf0a1cf425beff3e317842f9cdbcec4e95baf3" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&lt;a href=&quot;trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; function to register states to an animation trigger. Use the &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; function to animate between states. When a state is active within a component, its associated styles persist on the element, even when the animation ends.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; 函数将状态注册到动画触发器。使用 &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 函数在状态之间进行动画处理。当状态在组件内处于活动状态时，即使动画结束，其相关联的样式也会保留在元素上。</target>
        </trans-unit>
        <trans-unit id="b3851f1b2f6c392b87e343e5e9be15390610617a" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorator in a child component or directive to let Angular know that a property in that component can receive its value from its parent component. It helps to remember that the data flow is from the perspective of the child component. So an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; allows data to be input &lt;em&gt;into&lt;/em&gt; the child component from the parent component.</source>
          <target state="translated">在子组件或指令中使用 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 装饰器，以使Angular知道该组件中的属性可以从其父组件接收其值。有助于记住数据流是从子组件的角度来看的。因此， &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; 允许将数据从父组件输入&lt;em&gt;到&lt;/em&gt;子组件中。</target>
        </trans-unit>
        <trans-unit id="ef440cee0d4b619baf1dc108b572b145ffe599c6" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; decorator in the child component or directive to allow data to flow from the child &lt;em&gt;out&lt;/em&gt; to the parent.</source>
          <target state="translated">使用 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 中的子组件或指令装饰允许数据从孩子流&lt;em&gt;出来&lt;/em&gt;父。</target>
        </trans-unit>
        <trans-unit id="d83e06cc984ee1c0469d1eafff65bf7633430e80" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;CheckOnce&lt;/code&gt; strategy, meaning that automatic change detection is deactivated until reactivated by setting the strategy to &lt;code&gt;Default&lt;/code&gt; (&lt;code&gt;CheckAlways&lt;/code&gt;). Change detection can still be explicitly invoked. This strategy applies to all child directives and cannot be overridden.</source>
          <target state="translated">使用 &lt;code&gt;CheckOnce&lt;/code&gt; 策略，这意味着通过将策略设置为 &lt;code&gt;Default&lt;/code&gt; （ &lt;code&gt;CheckAlways&lt;/code&gt; ）将自动更改检测禁用，直到重新激活为止。更改检测仍然可以显式调用。此策略适用于所有子指令，并且不能被覆盖。</target>
        </trans-unit>
        <trans-unit id="cb9e4c97b8a1368fcaea25ed71eeaf564330d68c" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;Observable&lt;/code&gt; constructor to create an observable stream of any type. The constructor takes as its argument the subscriber function to run when the observable&amp;rsquo;s &lt;code&gt;subscribe()&lt;/code&gt; method executes. A subscriber function receives an &lt;code&gt;Observer&lt;/code&gt; object, and can publish values to the observer's &lt;code&gt;next()&lt;/code&gt; method.</source>
          <target state="translated">使用 &lt;code&gt;Observable&lt;/code&gt; 构造函数可创建任何类型的可观察流。构造函数将可观察者的 &lt;code&gt;subscribe()&lt;/code&gt; 方法执行时要运行的订户函数作为其参数。订户函数接收一个 &lt;code&gt;Observer&lt;/code&gt; 对象，并且可以将值发布到观察者的 &lt;code&gt;next()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="1173fd6da6508928f593314bd49b24f1cee5a901" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;RouterModule.forRoot&lt;/code&gt; method to define a set of routes. Also, import this &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;imports&lt;/code&gt; array of the main module, &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;RouterModule.forRoot&lt;/code&gt; 方法定义一组路由。另外，将此 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 导入到主模块 &lt;code&gt;AppModule&lt;/code&gt; 的 &lt;code&gt;imports&lt;/code&gt; 数组中。</target>
        </trans-unit>
        <trans-unit id="e8313bf3571f8e365bb6b78327e4934cce902d36" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;build()&lt;/code&gt; method to create a programmatic animation using the &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function. The method returns an &lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;AnimationFactory&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">使用 &lt;code&gt;build()&lt;/code&gt; 方法通过 &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 函数创建程序动画。该方法返回一个 &lt;code&gt;&lt;a href=&quot;animationfactory&quot;&gt;AnimationFactory&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="236f90d8a2b43b2b908f826c2dd47da6ccc4d554" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;declarations&lt;/code&gt; array for directives. To use a directive, component, or pipe in a module, you must do a few things:</source>
          <target state="translated">将 &lt;code&gt;declarations&lt;/code&gt; 数组用于指令。要在模块中使用指令，组件或管道，您必须做一些事情：</target>
        </trans-unit>
        <trans-unit id="3c3fa69688b331df5c2d1c642a70ae5ecd3bdf4b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;favoriteColorControl&lt;/code&gt;, a &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance, to set the new value.</source>
          <target state="translated">使用 &lt;code&gt;favoriteColorControl&lt;/code&gt; （一个 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例）来设置新值。</target>
        </trans-unit>
        <trans-unit id="61f6904d5a95189f40bcaf32c7dae25ca2c3b08c" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;i18n&lt;/code&gt; project option in your app's build configuration file (&lt;a href=&quot;workspace-config&quot;&gt;&lt;code&gt;angular.json&lt;/code&gt;&lt;/a&gt;) to define locales for a project. The following sub-options identify the source language and tell the compiler where to find supported translations for the project:</source>
          <target state="translated">使用应用程序的构建配置文件（&lt;a href=&quot;workspace-config&quot;&gt; &lt;code&gt;angular.json&lt;/code&gt; &lt;/a&gt;）中的 &lt;code&gt;i18n&lt;/code&gt; 项目选项来定义项目的语言环境。以下子选项标识源语言，并告诉编译器在哪里可以找到项目支持的翻译：</target>
        </trans-unit>
        <trans-unit id="48ee9872418a6c1f38c284ca4a4b987b2309d939" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;ngOnInit()&lt;/code&gt; method to perform the following initialization tasks.</source>
          <target state="translated">使用 &lt;code&gt;ngOnInit()&lt;/code&gt; 方法执行以下初始化任务。</target>
        </trans-unit>
        <trans-unit id="4eec2f26c7f0fc8134e3d9fc9ce871ea1a55e8f8" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;params&lt;/code&gt; property to configure a request with &lt;a href=&quot;http#url-params&quot;&gt;HTTP URL parameters&lt;/a&gt;, and the &lt;code&gt;reportProgress&lt;/code&gt; option to &lt;a href=&quot;http#report-progress&quot;&gt;listen for progress events&lt;/a&gt; when transferring large amounts of data.</source>
          <target state="translated">使用 &lt;code&gt;params&lt;/code&gt; 属性配置带有&lt;a href=&quot;http#url-params&quot;&gt;HTTP URL参数&lt;/a&gt;的请求，并使用 &lt;code&gt;reportProgress&lt;/code&gt; 选项在传输大量数据时&lt;a href=&quot;http#report-progress&quot;&gt;侦听进度事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16cf1db0421f9d869402c30f489d6a26b1ef363c" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;patchValue()&lt;/code&gt; method to replace any properties defined in the object that have changed in the form model.</source>
          <target state="translated">使用 &lt;code&gt;patchValue()&lt;/code&gt; 方法替换在对象对象中定义的，在表单模型中已更改的属性。</target>
        </trans-unit>
        <trans-unit id="bb02cfa0121d7b0538da1ecc37b0b8d4f6b44745" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;plural&lt;/code&gt; clause to mark expressions that may not be meaningful if translated word-for-word.</source>
          <target state="translated">使用 &lt;code&gt;plural&lt;/code&gt; 子句来标记如果逐字翻译可能没有意义的表达式。</target>
        </trans-unit>
        <trans-unit id="663da71b4933858141a19f1c639501cb180552d7" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;retry&lt;/code&gt; operator before the &lt;code&gt;catchError&lt;/code&gt; operator. It resubscribes to the original source observable, which can then re-run the full sequence of actions that resulted in the error. If this includes an HTTP request, it will retry that HTTP request.</source>
          <target state="translated">在 &lt;code&gt;catchError&lt;/code&gt; 运算符之前使用 &lt;code&gt;retry&lt;/code&gt; 运算符。它重新订阅了可观察的原始源，然后可以重新运行导致错误的完整操作序列。如果这包括一个HTTP请求，它将重试该HTTP请求。</target>
        </trans-unit>
        <trans-unit id="b7694867b286796d89cd1dbec2bfe6eee5554c0d" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;save&lt;/code&gt; option of &lt;code&gt;ng-add&lt;/code&gt; to configure if the library should be added to the &lt;code&gt;dependencies&lt;/code&gt;, the &lt;code&gt;devDepedencies&lt;/code&gt;, or not saved at all in the project's &lt;code&gt;package.json&lt;/code&gt; configuration file.</source>
          <target state="translated">使用 &lt;code&gt;ng-add&lt;/code&gt; 的 &lt;code&gt;save&lt;/code&gt; 选项来配置是将库添加到 &lt;code&gt;dependencies&lt;/code&gt; （ &lt;code&gt;devDepedencies&lt;/code&gt; ）还是根本不保存在项目的 &lt;code&gt;package.json&lt;/code&gt; 配置文件中。</target>
        </trans-unit>
        <trans-unit id="3c670bb360c8cc1af3a13abb754e25fbb2f42f5b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;schematics&lt;/code&gt; command to run a named schematic. Provide the path to the project folder, the schematic name, and any mandatory options, in the following format.</source>
          <target state="translated">使用 &lt;code&gt;schematics&lt;/code&gt; 命令运行命名的示意图。以以下格式提供项目文件夹的路径，原理图名称和任何必需的选项。</target>
        </trans-unit>
        <trans-unit id="d6dfca72b156d70b98370724a6bf1ea5950071f5" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;set()&lt;/code&gt; method instead, to return a clone of the current instance with the new changes applied.</source>
          <target state="translated">改用 &lt;code&gt;set()&lt;/code&gt; 方法，以应用新的更改返回当前实例的克隆。</target>
        </trans-unit>
        <trans-unit id="52f536a15c49df755922f56c142d44e19a8db2b4" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;setValue()&lt;/code&gt; method to set a new value for an individual control. The &lt;code&gt;setValue()&lt;/code&gt; method strictly adheres to the structure of the form group and replaces the entire value for the control.</source>
          <target state="translated">使用 &lt;code&gt;setValue()&lt;/code&gt; 方法可以为单个控件设置新值。所述 &lt;code&gt;setValue()&lt;/code&gt; 方法严格遵守形式组的结构和取代了控制整个值。</target>
        </trans-unit>
        <trans-unit id="5a4052bf9f3ebb3e3c658b007bccd5c4c5718185" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;viewProviders&lt;/code&gt; array as another way to provide services in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator. Using &lt;code&gt;viewProviders&lt;/code&gt; makes services visible in the &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;viewProviders&lt;/code&gt; 数组作为在 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 装饰器中提供服务的另一种方法。使用 &lt;code&gt;viewProviders&lt;/code&gt; 使服务在 &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 中可见。</target>
        </trans-unit>
        <trans-unit id="608e3ecc67d63ebd131072715526770717d76070" translate="yes" xml:space="preserve">
          <source>Use the &lt;em&gt;function form&lt;/em&gt; to apply host styles conditionally by including another selector inside parentheses after &lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">通过在&lt;em&gt;函数&lt;/em&gt;后面的括号内包含另一个选择器，可以使用&lt;em&gt;函数形式&lt;/em&gt;有条件地应用宿主样式 &lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95d63fddc3e3a0e31fab944297cbb5d5eb512831" translate="yes" xml:space="preserve">
          <source>Use the &lt;em&gt;function form&lt;/em&gt; to apply host styles conditionally by including another selector inside parentheses after &lt;code&gt;:host&lt;/code&gt;.</source>
          <target state="translated">通过在 &lt;code&gt;:host&lt;/code&gt; 后面的括号内包含另一个选择器，可以使用&lt;em&gt;函数形式&lt;/em&gt;有条件地应用宿主样式。</target>
        </trans-unit>
        <trans-unit id="0228ac89e07be504f25494e9676937a8b7718d7a" translate="yes" xml:space="preserve">
          <source>Use the @Injectable() class decorator</source>
          <target state="translated">使用@Injectable()类的装饰器。</target>
        </trans-unit>
        <trans-unit id="ca6ceefb0e64ecbea616db35552ef73de6fa3bb9" translate="yes" xml:space="preserve">
          <source>Use the Angular CLI and the npm package manager to build and publish your library as an npm package.</source>
          <target state="translated">使用Angular CLI和npm包管理器来构建并发布你的库作为npm包。</target>
        </trans-unit>
        <trans-unit id="d3a17a236cfd17da399af8b8cc707e6575ce9b8c" translate="yes" xml:space="preserve">
          <source>Use the Angular CLI and the npm package manager to build and publish your library as an npm package. Libraries are built in &lt;a href=&quot;aot-compiler&quot;&gt;AoT mode&lt;/a&gt; by default, so you do not need to specify the &lt;code&gt;-prod&lt;/code&gt; flag when building for publication.</source>
          <target state="translated">使用Angular CLI和npm软件包管理器以npm软件包的形式构建和发布您的库。默认情况下，库是在&lt;a href=&quot;aot-compiler&quot;&gt;AoT模式&lt;/a&gt;下构建的，因此在构建发布时无需指定 &lt;code&gt;-prod&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="4633a55586a6fa2e22e42b322b523d199217f07e" translate="yes" xml:space="preserve">
          <source>Use the Angular CLI to generate a new component named &lt;code&gt;hero-detail&lt;/code&gt;.</source>
          <target state="translated">使用Angular CLI生成一个名为 &lt;code&gt;hero-detail&lt;/code&gt; 的新组件。</target>
        </trans-unit>
        <trans-unit id="b5380a6f98199f77703c5f5d467966fab80d71f5" translate="yes" xml:space="preserve">
          <source>Use the Angular CLI to generate a new library skeleton in a new workspace with the following commands.</source>
          <target state="translated">使用Angular CLI在新的工作空间中使用以下命令生成一个新的库骨架。</target>
        </trans-unit>
        <trans-unit id="4d57c142dc3dc54d8d21e3c079a0a3926683c980" translate="yes" xml:space="preserve">
          <source>Use the Angular CLI to generate a new library skeleton with the following command:</source>
          <target state="translated">使用Angular CLI用以下命令生成一个新的库骨架。</target>
        </trans-unit>
        <trans-unit id="359dd0a4bcbf30fc27fe4c0e62d05c483ce99a29" translate="yes" xml:space="preserve">
          <source>Use the CLI command &lt;a href=&quot;cli/new&quot;&gt;&lt;code&gt;ng new displaying-data&lt;/code&gt;&lt;/a&gt; to create a workspace and app named &lt;code&gt;displaying-data&lt;/code&gt;.</source>
          <target state="translated">使用CLI命令&lt;a href=&quot;cli/new&quot;&gt; &lt;code&gt;ng new displaying-data&lt;/code&gt; &lt;/a&gt; display -data创建一个工作空间和名为 &lt;code&gt;displaying-data&lt;/code&gt; 的应用程序。</target>
        </trans-unit>
        <trans-unit id="38c9f16db58637bd61abdf74662688ec8ee2214e" translate="yes" xml:space="preserve">
          <source>Use the CLI to automatically create the app shell.</source>
          <target state="translated">使用CLI自动创建应用程序外壳。</target>
        </trans-unit>
        <trans-unit id="9ece05677ae45d1939690d567a9eb86967b7bbf8" translate="yes" xml:space="preserve">
          <source>Use the CLI to build the &lt;code&gt;app-shell&lt;/code&gt; target.</source>
          <target state="translated">使用CLI来构建 &lt;code&gt;app-shell&lt;/code&gt; 目标。</target>
        </trans-unit>
        <trans-unit id="e5cf2ec90353ca6935df3915b02b577d867b4e88" translate="yes" xml:space="preserve">
          <source>Use the CLI to create the &lt;code&gt;MessageService&lt;/code&gt; in &lt;code&gt;src/app&lt;/code&gt;.</source>
          <target state="translated">使用CLI 在 &lt;code&gt;src/app&lt;/code&gt; 中创建 &lt;code&gt;MessageService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="308d836de00681b82b1a6ac4629d26037ebc7917" translate="yes" xml:space="preserve">
          <source>Use the CLI to create the &lt;code&gt;MessagesComponent&lt;/code&gt;.</source>
          <target state="translated">使用CLI创建 &lt;code&gt;MessagesComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4358774dc70c3cc192b493d6b2f26403c5c18d1" translate="yes" xml:space="preserve">
          <source>Use the CLI to extract marked text to a &lt;em&gt;source language&lt;/em&gt; file.</source>
          <target state="translated">使用CLI将标记的文本提取到&lt;em&gt;源语言&lt;/em&gt;文件中。</target>
        </trans-unit>
        <trans-unit id="7cf59379107eb2f1e9f7b6aeeaba809aa6857254" translate="yes" xml:space="preserve">
          <source>Use the CLI to generate it.</source>
          <target state="translated">使用CLI来生成它。</target>
        </trans-unit>
        <trans-unit id="8226af003735bc615b4ebed923581797af4b5db5" translate="yes" xml:space="preserve">
          <source>Use the CLI to merge the finished translation files when building your app for one or more locales.</source>
          <target state="translated">在为一个或多个地区语言构建应用程序时,使用 CLI 来合并已完成的翻译文件。</target>
        </trans-unit>
        <trans-unit id="9784a04039a561954033d9fe973f0a4c5920fe5c" translate="yes" xml:space="preserve">
          <source>Use the HTML</source>
          <target state="translated">使用HTML</target>
        </trans-unit>
        <trans-unit id="5bbf6b5276a555599737d1dbfa3accbd3fb1e8c7" translate="yes" xml:space="preserve">
          <source>Use the ID in this previous-state object to differentiate between a newly created state and one returned to by a &lt;code&gt;popstate&lt;/code&gt; event, so that you can restore some remembered state, such as scroll position.</source>
          <target state="translated">使用此先前状态对象中的ID可以区分新创建的状态和由 &lt;code&gt;popstate&lt;/code&gt; 事件返回的状态，以便可以恢复某些记忆状态，例如滚动位置。</target>
        </trans-unit>
        <trans-unit id="ad47a1b288e517ce0effef6619c4c1531bfc33eb" translate="yes" xml:space="preserve">
          <source>Use the built-in &lt;a href=&quot;../api/common/asyncpipe&quot;&gt;&lt;code&gt;AsyncPipe&lt;/code&gt;&lt;/a&gt; to accept an observable as input and subscribe to the input automatically. Without this pipe, your component code would have to subscribe to the observable to consume its values, extract the resolved values, expose them for binding, and unsubscribe when the observable is destroyed in order to prevent memory leaks. &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; is an impure pipe that saves boilerplate code in your component to maintain the subscription and keep delivering values from that observable as they arrive.</source>
          <target state="translated">使用内置的&lt;a href=&quot;../api/common/asyncpipe&quot;&gt; &lt;code&gt;AsyncPipe&lt;/code&gt; &lt;/a&gt;接受可观察对象作为输入，并自动订阅输入。如果没有此管道，您的组件代码将必须订阅可观察对象以使用其值，提取已解析的值，将其公开以进行绑定，以及在可观察对象被破坏时取消订阅，以防止内存泄漏。 &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; 是一个不纯管道，它在您的组件中保存了样板代码以维护订阅，并在可观察到的值到达时继续传递它们。</target>
        </trans-unit>
        <trans-unit id="ef9afc5479b408292ddfb0e17196fc61151a2e25" translate="yes" xml:space="preserve">
          <source>Use the cart service</source>
          <target state="translated">使用购物车服务</target>
        </trans-unit>
        <trans-unit id="0db540616d56f52390a576fdc34c3c9b5df49407" translate="yes" xml:space="preserve">
          <source>Use the child's selector, here &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt;, as a directive within the parent component template.</source>
          <target state="translated">使用孩子的选择器（这里 &lt;code&gt;&amp;lt;app-item-detail&amp;gt;&lt;/code&gt; ）作为父组件模板中的指令。</target>
        </trans-unit>
        <trans-unit id="eecd35206481b79b7c4507d8f30817c32cca25ef" translate="yes" xml:space="preserve">
          <source>Use the component instance to set the value of the &lt;code&gt;favoriteColor&lt;/code&gt; property.</source>
          <target state="translated">使用组件实例来设置 &lt;code&gt;favoriteColor&lt;/code&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="9d9ebb52ab384cbcfd61b51ce977015d8e0b30b7" translate="yes" xml:space="preserve">
          <source>Use the constructor of &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; to set its initial value, which in this case is an empty string. By creating these controls in your component class, you get immediate access to listen for, update, and validate the state of the form input.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 的构造函数设置其初始值，在这种情况下为空字符串。通过在组件类中创建这些控件，您可以立即访问以侦听，更新和验证表单输入的状态。</target>
        </trans-unit>
        <trans-unit id="e7587cbf004aad2b4e56b322cfef850309d1e76b" translate="yes" xml:space="preserve">
          <source>Use the default &lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;CheckAlways&lt;/a&gt;&lt;/code&gt; strategy, in which change detection is automatic until explicitly deactivated.</source>
          <target state="translated">使用默认的 &lt;code&gt;&lt;a href=&quot;changedetectionstrategy&quot;&gt;CheckAlways&lt;/a&gt;&lt;/code&gt; 策略，在该策略中，更改检测将自动执行，直到明确停用为止。</target>
        </trans-unit>
        <trans-unit id="9b84209d06a615494105c2cd31dacc65b8d1ec0c" translate="yes" xml:space="preserve">
          <source>Use the default &lt;code&gt;CheckAlways&lt;/code&gt; strategy, in which change detection is automatic until explicitly deactivated.</source>
          <target state="translated">使用默认的 &lt;code&gt;CheckAlways&lt;/code&gt; 策略，在该策略中，更改检测将自动执行，直到明确停用为止。</target>
        </trans-unit>
        <trans-unit id="e9d590f11c718da330ccebceb5b8b2511c996779" translate="yes" xml:space="preserve">
          <source>Use the documentation to learn about key features in more depth, according to your stage of development and areas of interest.</source>
          <target state="translated">根据你的发展阶段和感兴趣的领域,使用文档更深入地了解关键功能。</target>
        </trans-unit>
        <trans-unit id="99d11f8688c1e1b1658b40526cee3f9f4dfd5fa0" translate="yes" xml:space="preserve">
          <source>Use the factory object to create an &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;AnimationPlayer&lt;/a&gt;&lt;/code&gt; and attach it to a DOM element.</source>
          <target state="translated">使用工厂对象创建 &lt;code&gt;&lt;a href=&quot;animationplayer&quot;&gt;AnimationPlayer&lt;/a&gt;&lt;/code&gt; 并将其附加到DOM元素。</target>
        </trans-unit>
        <trans-unit id="7acbbdfbc6898fafd3430035744e606c15ea75ac" translate="yes" xml:space="preserve">
          <source>Use the following &lt;code&gt;extract-i18n&lt;/code&gt; command options to change the source language file location, format, and file name:</source>
          <target state="translated">使用以下 &lt;code&gt;extract-i18n&lt;/code&gt; 命令选项来更改源语言文件的位置，格式和文件名：</target>
        </trans-unit>
        <trans-unit id="09aee07ff0cbe6302c8871e0400bf8743cc280bd" translate="yes" xml:space="preserve">
          <source>Use the following content in the JavaScript configuration file.</source>
          <target state="translated">在JavaScript配置文件中使用以下内容。</target>
        </trans-unit>
        <trans-unit id="f1622d1a4ae3f19827df7745511b0e1bc132f843" translate="yes" xml:space="preserve">
          <source>Use the following steps to add a checkout form at the bottom of the &quot;Cart&quot; view.</source>
          <target state="translated">使用以下步骤在 &quot;购物车 &quot;视图的底部添加一个结账表单。</target>
        </trans-unit>
        <trans-unit id="08882a68d2a6ab746f1170233fe9d5b9bc6e6af5" translate="yes" xml:space="preserve">
          <source>Use the following steps to add form validation.</source>
          <target state="translated">使用以下步骤来添加表单验证。</target>
        </trans-unit>
        <trans-unit id="955751dc319f679303c70fa0991bd8be5b91890a" translate="yes" xml:space="preserve">
          <source>Use the following steps to take advantage of this service.</source>
          <target state="translated">使用以下步骤来利用这项服务。</target>
        </trans-unit>
        <trans-unit id="7e1c4b14a5abd7301b86d2981a9d5c9c7b2e3b27" translate="yes" xml:space="preserve">
          <source>Use the getter syntax to create an &lt;code&gt;aliases&lt;/code&gt; class property to retrieve the alias's form array control from the parent form group.</source>
          <target state="translated">使用getter语法创建 &lt;code&gt;aliases&lt;/code&gt; 类属性，以从父表单组中检索别名的表单数组控件。</target>
        </trans-unit>
        <trans-unit id="2b9f9c8bf8a06791c1b3d0e9f88f619639572ebe" translate="yes" xml:space="preserve">
          <source>Use the hash symbol (#) to declare a reference variable. The following reference variable, &lt;code&gt;#phone&lt;/code&gt;, declares a &lt;code&gt;phone&lt;/code&gt; variable on an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">使用井号（＃）声明参考变量。以下参考变量 &lt;code&gt;#phone&lt;/code&gt; 在 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元素上声明了一个 &lt;code&gt;phone&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="bc2bab9bb36109c9261e4e21e1209550f2534701" translate="yes" xml:space="preserve">
          <source>Use the largest version, including beta and RCs.</source>
          <target state="translated">使用最大的版本,包括测试版和RC。</target>
        </trans-unit>
        <trans-unit id="69d5a81a07b4469e551ea97e2cfdba24bee1b9a2" translate="yes" xml:space="preserve">
          <source>Use the lightweight injection token for API definition</source>
          <target state="translated">使用轻量级注入令牌来定义API</target>
        </trans-unit>
        <trans-unit id="a68d4930594481bd496a5d3065ddf5ac88c6c31d" translate="yes" xml:space="preserve">
          <source>Use the native encapsulation mechanism of the renderer. See &lt;a href=&quot;https://github.com/angular/angular/blob/3e992e18ebf51d6036818f26c3d77b52d3ec48eb/packages/core/src/metadata/view.ts#L32&quot;&gt;view.ts&lt;/a&gt;.</source>
          <target state="translated">使用渲染器的本机封装机制。见&lt;a href=&quot;https://github.com/angular/angular/blob/3e992e18ebf51d6036818f26c3d77b52d3ec48eb/packages/core/src/metadata/view.ts#L32&quot;&gt;view.ts&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84bc78fa2e78ed5dfdea31357fb98bf3bc73c6e3" translate="yes" xml:space="preserve">
          <source>Use the offline template compiler</source>
          <target state="translated">使用离线模板编译器</target>
        </trans-unit>
        <trans-unit id="4e5c044a102c6e5b28de2adf47e3ca6799e2b720" translate="yes" xml:space="preserve">
          <source>Use the player object to control the animation programmatically.</source>
          <target state="translated">使用播放器对象来控制动画的程序化。</target>
        </trans-unit>
        <trans-unit id="3760d8d459300900a0e3f01762ed9a4bffe52f69" translate="yes" xml:space="preserve">
          <source>Use the prerelease version, including beta and RCs.</source>
          <target state="translated">使用预发布版本,包括测试版和RC。</target>
        </trans-unit>
        <trans-unit id="33b6e8a56b6a428c4c11a0f9864e1086bde51fbc" translate="yes" xml:space="preserve">
          <source>Use the returned AngularJS module in a call to &lt;a href=&quot;https://docs.angularjs.org/api/ngMock/function/angular.mock.module&quot;&gt;&lt;code&gt;angular.mocks.module&lt;/code&gt;&lt;/a&gt; to include this module in the unit test injector.</source>
          <target state="translated">在对&lt;a href=&quot;https://docs.angularjs.org/api/ngMock/function/angular.mock.module&quot;&gt; &lt;code&gt;angular.mocks.module&lt;/code&gt; &lt;/a&gt;的调用中使用返回的AngularJS模块，以将该模块包含在单元测试注入器中。</target>
        </trans-unit>
        <trans-unit id="5077e6c1fae00cd3872afeb69763760817a2633f" translate="yes" xml:space="preserve">
          <source>Use the returned class as an &quot;import&quot; when configuring the &lt;code&gt;&lt;a href=&quot;../../../core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">配置 &lt;code&gt;&lt;a href=&quot;../../../core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 时，请将返回的类用作&amp;ldquo;导入&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="da723cd932f5f79f6b8665dde136ba0626c258d9" translate="yes" xml:space="preserve">
          <source>Use the same command to create a second lazy-loaded feature module with routing, along with its stub component.</source>
          <target state="translated">使用相同的命令来创建第二个带有路由的懒加载功能模块,以及它的存根组件。</target>
        </trans-unit>
        <trans-unit id="68b4c7f1ae521c49637ab19099788a3f20c66452" translate="yes" xml:space="preserve">
          <source>Use the template reference variable, &lt;code&gt;#heroForm&lt;/code&gt; to access the form that contains the &lt;strong&gt;Submit&lt;/strong&gt; button and create an event binding. You will bind the form property that indicates its overall validity to the &lt;strong&gt;Submit&lt;/strong&gt; button's &lt;code&gt;disabled&lt;/code&gt; property.</source>
          <target state="translated">使用模板引用变量 &lt;code&gt;#heroForm&lt;/code&gt; 访问包含&amp;ldquo;&lt;strong&gt;提交&amp;rdquo;&lt;/strong&gt;按钮的表单并创建事件绑定。您将把指示其整体有效性的form属性绑定到&lt;strong&gt;Submit&lt;/strong&gt;按钮的 &lt;code&gt;disabled&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="d1be55a191205536fb2fb08bd1548c8802cd4f7d" translate="yes" xml:space="preserve">
          <source>Use the type-guard properties to inform the template type checker of an expected type, thus improving compile-time type-checking for that template.</source>
          <target state="translated">使用type-guard属性来通知模板类型检查器一个预期的类型,从而改善该模板的编译时类型检查。</target>
        </trans-unit>
        <trans-unit id="e7ea2de74a92043d55f851bb691e02d30a346279" translate="yes" xml:space="preserve">
          <source>Use the wildcard &lt;code&gt;*&lt;/code&gt; with a style to tell the animation to use whatever the current style value is, and animate with that. Wildcard is a fallback value that's used if the state being animated isn't declared within the trigger.</source>
          <target state="translated">将通配符 &lt;code&gt;*&lt;/code&gt; 与一种样式配合使用，以告诉动画使用当前样式值是什么，并对其进行动画处理。通配符是一个后备值，如果未在触发器中声明要动画化的状态，则使用该值。</target>
        </trans-unit>
        <trans-unit id="e31d6952c1ff1fd94a0e173b45067b6c83f34690" translate="yes" xml:space="preserve">
          <source>Use this API as the last resort when direct access to DOM is needed. Use templating and data-binding provided by Angular instead. Alternatively you can take a look at &lt;a href=&quot;renderer2&quot;&gt;&lt;code&gt;Renderer2&lt;/code&gt;&lt;/a&gt; which provides API that can safely be used even when direct access to native elements is not supported.</source>
          <target state="translated">当需要直接访问DOM时，将此API用作最后的手段。改用Angular提供的模板和数据绑定。另外，您可以看一下&lt;a href=&quot;renderer2&quot;&gt; &lt;code&gt;Renderer2&lt;/code&gt; &lt;/a&gt;，它提供了即使不支持直接访问本机元素也可以安全使用的API。</target>
        </trans-unit>
        <trans-unit id="66dc17561e140a926f2fa11ae753d9ec492fade0" translate="yes" xml:space="preserve">
          <source>Use this API to define how an HTML element can move, change color, grow or shrink, fade, or slide off the page. These changes can occur simultaneously or sequentially. You can control the timing of each of these transformations. The function calls generate the data structures and metadata that enable Angular to integrate animations into templates and run them based on application states.</source>
          <target state="translated">使用该API来定义HTML元素如何移动、改变颜色、增长或缩小、褪色或从页面上滑落。这些变化可以同时发生,也可以依次发生。您可以控制这些转换的时间。函数调用生成数据结构和元数据,使Angular能够将动画集成到模板中,并根据应用状态运行它们。</target>
        </trans-unit>
        <trans-unit id="239c77567c5a5ce0197bcc941ceca052e2b45d4e" translate="yes" xml:space="preserve">
          <source>Use this API to register directives, build form and data models, and provide validation to your forms. Validators can be synchronous or asynchronous depending on your use case. You can also extend the built-in functionality provided by forms in Angular by using the interfaces and tokens to create custom validators and input elements.</source>
          <target state="translated">使用这个API来注册指令,构建表单和数据模型,并为您的表单提供验证。验证器可以是同步的,也可以是异步的,这取决于你的用例。您还可以通过使用接口和令牌创建自定义验证器和输入元素来扩展Angular中表单提供的内置功能。</target>
        </trans-unit>
        <trans-unit id="dffc59d3f3dd5402308a03cf88e120af4a6dc9b4" translate="yes" xml:space="preserve">
          <source>Use this directive to create a visual distinction for elements associated with an active route. For example, the following code highlights the word &quot;Bob&quot; when the the router activates the associated route:</source>
          <target state="translated">使用这条指令为与活动路由相关联的元素创建视觉上的区别。例如,以下代码在路由器激活相关路由时突出显示 &quot;Bob &quot;一词。</target>
        </trans-unit>
        <trans-unit id="98648d6e7331cfddebf675e6e48d5ecfd58e4545" translate="yes" xml:space="preserve">
          <source>Use this directive to validate a sub-group of your form separately from the rest of your form, or if some values in your domain model make more sense to consume together in a nested object.</source>
          <target state="translated">使用这个指令来验证你的表单的一个子组与表单的其他部分分开,或者如果你的领域模型中的一些值在嵌套对象中一起消费更有意义。</target>
        </trans-unit>
        <trans-unit id="c2f2d6d2eb1b9fd68f5d4923160640fa9a45cb27" translate="yes" xml:space="preserve">
          <source>Use this enum at bootstrap as an option of &lt;code&gt;bootstrapModule&lt;/code&gt; to define the strategy that the compiler should use in case of missing translations:</source>
          <target state="translated">在系统启动使用此枚举作为一个选项 &lt;code&gt;bootstrapModule&lt;/code&gt; 定义策略，编译器应该在缺少翻译的情况下使用：</target>
        </trans-unit>
        <trans-unit id="f91861f9b1b35370d057dd7a059c665663e94008" translate="yes" xml:space="preserve">
          <source>Use this method to detect a change that Angular overlooked.</source>
          <target state="translated">使用此方法来检测Angular忽略的变化。</target>
        </trans-unit>
        <trans-unit id="02a000c17e1eb4958b9423311364219b7482d859" translate="yes" xml:space="preserve">
          <source>Use this service to bypass Angular's templating and make custom UI changes that can't be expressed declaratively. For example if you need to set a property or an attribute whose name is not statically known, use &lt;a href=&quot;renderer#setElementProperty&quot;&gt;setElementProperty&lt;/a&gt; or &lt;a href=&quot;renderer#setElementAttribute&quot;&gt;setElementAttribute&lt;/a&gt; respectively.</source>
          <target state="translated">使用此服务绕过Angular的模板并进行无法以声明方式表示的自定义UI更改。例如，如果您需要设置名称不是静态已知的属性或属性，请分别使用&lt;a href=&quot;renderer#setElementProperty&quot;&gt;setElementProperty&lt;/a&gt;或&lt;a href=&quot;renderer#setElementAttribute&quot;&gt;setElementAttribute&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51dda038803b68b227c51a7dd1d4b365f5cd7449" translate="yes" xml:space="preserve">
          <source>Use this technique to create a dependency object with a factory function whose inputs are a combination of &lt;em&gt;injected services&lt;/em&gt; and &lt;em&gt;local state&lt;/em&gt;.</source>
          <target state="translated">使用此技术可以使用工厂函数创建依赖项对象，该工厂函数的输入是&lt;em&gt;注入的服务&lt;/em&gt;和&lt;em&gt;本地状态&lt;/em&gt;的组合。</target>
        </trans-unit>
        <trans-unit id="b2f43a26151d902b04c11d0c3a3e3e04a2047274" translate="yes" xml:space="preserve">
          <source>Use this token at bootstrap to provide the content of your translation file (&lt;code&gt;xtb&lt;/code&gt;, &lt;code&gt;xlf&lt;/code&gt; or &lt;code&gt;xlf2&lt;/code&gt;) when you want to translate your application in another language.</source>
          <target state="translated">当您想用另一种语言翻译应用程序时，可以在引导程序中使用此令牌来提供翻译文件的内容（ &lt;code&gt;xtb&lt;/code&gt; ， &lt;code&gt;xlf&lt;/code&gt; 或 &lt;code&gt;xlf2&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="094736eaeca16e2bc6a94afbc3cacd046430016c" translate="yes" xml:space="preserve">
          <source>Use to find one or more inner HTML elements within the current element.</source>
          <target state="translated">用于查找当前元素中的一个或多个内部HTML元素。</target>
        </trans-unit>
        <trans-unit id="ceb45b9a9a131e5ceaa63ef67912c840118032d7" translate="yes" xml:space="preserve">
          <source>Use to get the &lt;code&gt;&lt;a href=&quot;querylist&quot;&gt;QueryList&lt;/a&gt;&lt;/code&gt; of elements or directives from the content DOM. Any time a child element is added, removed, or moved, the query list will be updated, and the changes observable of the query list will emit a new value.</source>
          <target state="translated">用于从内容DOM 获取元素或指令的 &lt;code&gt;&lt;a href=&quot;querylist&quot;&gt;QueryList&lt;/a&gt;&lt;/code&gt; 。每当添加，删除或移动子元素时，查询列表都将更新，并且查询列表中可观察到的更改将发出新值。</target>
        </trans-unit>
        <trans-unit id="aaf7d01d8950aef25f0bf03d88c14b898cbfd099" translate="yes" xml:space="preserve">
          <source>Use to get the &lt;code&gt;&lt;a href=&quot;querylist&quot;&gt;QueryList&lt;/a&gt;&lt;/code&gt; of elements or directives from the view DOM. Any time a child element is added, removed, or moved, the query list will be updated, and the changes observable of the query list will emit a new value.</source>
          <target state="translated">用于从视图DOM 获取元素或指令的 &lt;code&gt;&lt;a href=&quot;querylist&quot;&gt;QueryList&lt;/a&gt;&lt;/code&gt; 。每当添加，删除或移动子元素时，查询列表都将更新，并且查询列表中可观察到的更改将发出新值。</target>
        </trans-unit>
        <trans-unit id="51523185d9e70bc9258966c8eac5f9f38fa211f8" translate="yes" xml:space="preserve">
          <source>Use to get the first element or the directive matching the selector from the content DOM. If the content DOM changes, and a new child matches the selector, the property will be updated.</source>
          <target state="translated">用于从内容DOM中获取与选择器匹配的第一个元素或指令。如果内容DOM发生变化,并且有新的子元素与选择器匹配,该属性将被更新。</target>
        </trans-unit>
        <trans-unit id="a87e5cd79cc9d650614c0174e0c297ada3478f25" translate="yes" xml:space="preserve">
          <source>Use to store arbitrary developer-defined data on a renderer instance, as an object containing key-value pairs. This is useful for renderers that delegate to other renderers.</source>
          <target state="translated">用于在渲染器实例上存储任意开发者定义的数据,作为一个包含键值对的对象。这对委托给其他渲染器的渲染器很有用。</target>
        </trans-unit>
        <trans-unit id="e25c946e66827dc805dd24ff51d8ae7f98f6815b" translate="yes" xml:space="preserve">
          <source>Use with animations test-only mode. Notifies the test when rendering has completed.</source>
          <target state="translated">与动画测试专用模式一起使用。渲染完成后通知测试。</target>
        </trans-unit>
        <trans-unit id="eca7e21232f973eab61af44da3d689a26c0f17dc" translate="yes" xml:space="preserve">
          <source>Use with caution</source>
          <target state="translated">谨慎使用</target>
        </trans-unit>
        <trans-unit id="ef1c61aa074b0daa2467d00ee7659dad5f0b62ee" translate="yes" xml:space="preserve">
          <source>Use with ngModel</source>
          <target state="translated">与ngModel一起使用</target>
        </trans-unit>
        <trans-unit id="8c1b755d83aa0e3840c5adb2e2de9bdb212207ba" translate="yes" xml:space="preserve">
          <source>Use with ngModel is deprecated</source>
          <target state="translated">与ngModel一起使用已被废弃。</target>
        </trans-unit>
        <trans-unit id="bddb8fbb30136aa27bb73ecdceb87cca98f6bcc9" translate="yes" xml:space="preserve">
          <source>Use with the &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; call. Instead of applying animations from the current state to the destination state, keyframes describe how each style entry is applied and at what point within the animation arc. Compare &lt;a href=&quot;https://www.w3schools.com/css/css3_animations.asp&quot;&gt;CSS Keyframe Animations&lt;/a&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; 调用一起使用。关键帧不是描述从当前状态到目标状态的动画，而是描述了如何应用每个样式条目以及动画弧线中的什么位置。比较&lt;a href=&quot;https://www.w3schools.com/css/css3_animations.asp&quot;&gt;CSS关键帧动画&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d45dfd3ff2a81b444a5dc591b91dc8c66653e7e" translate="yes" xml:space="preserve">
          <source>Use within an animation &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; call to issue a timing gap after each queried item is animated.</source>
          <target state="translated">在动画 &lt;code&gt;&lt;a href=&quot;animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 调用中使用，以在每个查询的项目动画后发出时间间隔。</target>
        </trans-unit>
        <trans-unit id="652f99cdce6039c1c4c392a599facc0ac9d2adbf" translate="yes" xml:space="preserve">
          <source>Use within an animation &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; call to issue a timing gap after each queried item is animated.</source>
          <target state="translated">在动画 &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; 调用中使用，以在每个查询的项目动画后发出时间间隔。</target>
        </trans-unit>
        <trans-unit id="b8859d06d9af44888d766f829a446792669e41bf" translate="yes" xml:space="preserve">
          <source>Used by &lt;code&gt;&lt;a href=&quot;core/rendererfactory2&quot;&gt;RendererFactory2&lt;/a&gt;&lt;/code&gt; to associate custom rendering data and styles with a rendering implementation.</source>
          <target state="translated">由 &lt;code&gt;&lt;a href=&quot;core/rendererfactory2&quot;&gt;RendererFactory2&lt;/a&gt;&lt;/code&gt; 用于将自定义渲染数据和样式与渲染实现相关联。</target>
        </trans-unit>
        <trans-unit id="94c0582398c2c0bb749ac544039ffb4bb01b9afa" translate="yes" xml:space="preserve">
          <source>Used by &lt;code&gt;&lt;a href=&quot;httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;&lt;a href=&quot;httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="60c65c08999202c9b804c2bf81c87ddaf0860f85" translate="yes" xml:space="preserve">
          <source>Used by &lt;code&gt;&lt;a href=&quot;rendererfactory2&quot;&gt;RendererFactory2&lt;/a&gt;&lt;/code&gt; to associate custom rendering data and styles with a rendering implementation.</source>
          <target state="translated">由 &lt;code&gt;&lt;a href=&quot;rendererfactory2&quot;&gt;RendererFactory2&lt;/a&gt;&lt;/code&gt; 用于将自定义渲染数据和样式与渲染实现相关联。</target>
        </trans-unit>
        <trans-unit id="6f7d0b82c6afb0f2e3b4d749e7cc7ac4a4f630d9" translate="yes" xml:space="preserve">
          <source>Used only in debug mode to serialize property changes to dom nodes as attributes.</source>
          <target state="translated">仅在调试模式下使用,将属性变化序列化为dom节点的属性。</target>
        </trans-unit>
        <trans-unit id="7005a105d0d69ea62d874ba99e5723ee092e0f01" translate="yes" xml:space="preserve">
          <source>Used only in generated code. No source code should depend on this API.</source>
          <target state="translated">只在生成的代码中使用。任何源代码都不应该依赖于这个API。</target>
        </trans-unit>
        <trans-unit id="14a1cad3d2bd65cf489b11e28cb9d774f23a3e7d" translate="yes" xml:space="preserve">
          <source>Used to load ng module factories.</source>
          <target state="translated">用于加载ng模块工厂。</target>
        </trans-unit>
        <trans-unit id="f3e8b3ef8c7b0f5735596a0cecd6a98afb2da940" translate="yes" xml:space="preserve">
          <source>Used to mark Async start. Async are similar to scope but they don't have to be strictly nested. The return value is used in the call to [endAsync]. Async ranges only work if WTF has been enabled.</source>
          <target state="translated">用于标记Async开始。Async与scope类似,但不必严格嵌套。返回值在调用[endAsync]时使用。Async范围只有在启用了WTF的情况下才能使用。</target>
        </trans-unit>
        <trans-unit id="599d8de2a24b2f250ae7926588cacd259bc9a982" translate="yes" xml:space="preserve">
          <source>Used to mark end of Scope.</source>
          <target state="translated">用于标记范围的结束。</target>
        </trans-unit>
        <trans-unit id="e2c9ab424d315bb61a8d13d1e6541ce25bacbe35" translate="yes" xml:space="preserve">
          <source>Used to mark scope entry. The return value is used to leave the scope.</source>
          <target state="translated">用于标记进入作用域。返回值用于离开作用域。</target>
        </trans-unit>
        <trans-unit id="b3503a2162dbb4997a5439b46fb2c2bf5478d21a" translate="yes" xml:space="preserve">
          <source>Used to provide a &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for form controls.</source>
          <target state="translated">用于为表单控件提供 &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e34138b486124e172c27967e95851b105c53c11" translate="yes" xml:space="preserve">
          <source>Used to provide a &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for form controls.</source>
          <target state="translated">用于为表单控件提供 &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c9a0ff249b4ff0367c0e831859d912df5989e4a" translate="yes" xml:space="preserve">
          <source>Used when AngularJS is loaded lazily, and not available on &lt;code&gt;window&lt;/code&gt;.</source>
          <target state="translated">延迟加载AngularJS时使用，在 &lt;code&gt;window&lt;/code&gt; 上不可用。</target>
        </trans-unit>
        <trans-unit id="ede0702dd96ed53a5f498ecc6f5164f5530e76b2" translate="yes" xml:space="preserve">
          <source>Used with deprecated SystemJsNgModuleLoader.</source>
          <target state="translated">与废弃的SystemJsNgModuleLoader一起使用。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
