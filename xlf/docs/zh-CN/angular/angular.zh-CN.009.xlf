<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="2373344a9550daa83bd9efe5a057e0eb47e2963c" translate="yes" xml:space="preserve">
          <source>Here's &lt;em&gt;Barry&lt;/em&gt;.</source>
          <target state="translated">这是&lt;em&gt;巴里&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="58dfcfb5bd2344e21c4f9234e1a0a787c9ad52c8" translate="yes" xml:space="preserve">
          <source>Here's a &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; test that demonstrates the data flow you'd expect in the real world.</source>
          <target state="translated">这是一个 &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; 测试，该测试演示了您在现实世界中期望的数据流。</target>
        </trans-unit>
        <trans-unit id="3b04099851b53646b03c500d744979f7ed478b27" translate="yes" xml:space="preserve">
          <source>Here's a &lt;code&gt;provider&lt;/code&gt; example of the problem.</source>
          <target state="translated">这是问题的 &lt;code&gt;provider&lt;/code&gt; 示例。</target>
        </trans-unit>
        <trans-unit id="332ad9d1d1c0ec3216151d16383d075136fa7637" translate="yes" xml:space="preserve">
          <source>Here's a brief description of each exercise:</source>
          <target state="translated">下面是每个练习的简要说明。</target>
        </trans-unit>
        <trans-unit id="342d9dca61b9e4422f88fa45aa82e665fc20fb7d" translate="yes" xml:space="preserve">
          <source>Here's a child view that displays a hero's name in an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">这是一个在 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 中显示英雄名称的子视图：</target>
        </trans-unit>
        <trans-unit id="2dc49e2bfd96abcc48b54d3c3672ed317de547d8" translate="yes" xml:space="preserve">
          <source>Here's a closer look at the code.</source>
          <target state="translated">下面我们来仔细看看这段代码。</target>
        </trans-unit>
        <trans-unit id="c8cfdd2d432c327dabf4c942f49ee2de0e323ab4" translate="yes" xml:space="preserve">
          <source>Here's a component with an input field for a single control implemented using reactive forms.</source>
          <target state="translated">这是一个使用反应式表单实现的带有输入字段的单一控件组件。</target>
        </trans-unit>
        <trans-unit id="771c4365239b6adac9b51419ce8e2170cdf8bc02" translate="yes" xml:space="preserve">
          <source>Here's a conforming example</source>
          <target state="translated">这里有一个符合要求的例子</target>
        </trans-unit>
        <trans-unit id="67c50f15b5597454aa71b847527a69b00db4940f" translate="yes" xml:space="preserve">
          <source>Here's a full-featured application of &lt;code&gt;NgFor&lt;/code&gt;, written both ways:</source>
          <target state="translated">这是 &lt;code&gt;NgFor&lt;/code&gt; 的全功能应用程序，用两种方法编写：</target>
        </trans-unit>
        <trans-unit id="9d07ea3700c1b14d35ec087c49afa25711851988" translate="yes" xml:space="preserve">
          <source>Here's a pertinent excerpt from the template:</source>
          <target state="translated">下面是模板的相关摘录。</target>
        </trans-unit>
        <trans-unit id="2d7220461d3f8c562324ad099c90d86389d03dea" translate="yes" xml:space="preserve">
          <source>Here's a revised version that defaults to &lt;code&gt;parent&lt;/code&gt; but also accepts an optional second parameter for a different parent class interface.</source>
          <target state="translated">这是一个默认版本为 &lt;code&gt;parent&lt;/code&gt; 的修订版本，但它也为另一个父类接口接受可选的第二个参数。</target>
        </trans-unit>
        <trans-unit id="e1e1e0ffc9b6aee2fef781d2718e2fd868a214ee" translate="yes" xml:space="preserve">
          <source>Here's a simple root NgModule definition.</source>
          <target state="translated">这里有一个简单的NgModule根定义。</target>
        </trans-unit>
        <trans-unit id="13b657074051b1dd3d3aaa6052c01e4cd48c1ba0" translate="yes" xml:space="preserve">
          <source>Here's a summary of the stand-alone functions, in order of likely utility:</source>
          <target state="translated">下面是对独立功能的总结,按可能的效用排序。</target>
        </trans-unit>
        <trans-unit id="d52092227c7976ce49b8aa2a6d6cca685babff11" translate="yes" xml:space="preserve">
          <source>Here's a test demonstrating the component's behavior when the observed &lt;code&gt;id&lt;/code&gt; refers to an existing hero:</source>
          <target state="translated">这是一个测试，用来说明观察到的 &lt;code&gt;id&lt;/code&gt; 指向现有英雄时组件的行为：</target>
        </trans-unit>
        <trans-unit id="ffd0ce6376a8b892a0a4dd44632d7f49de3e0e31" translate="yes" xml:space="preserve">
          <source>Here's a visual idea of where this tutorial leads, beginning with the &quot;Dashboard&quot; view and the most heroic heroes:</source>
          <target state="translated">下面就从 &quot;仪表盘 &quot;视图和最英雄的英雄开始,直观的了解一下本教程的走向。</target>
        </trans-unit>
        <trans-unit id="a58b171fff7fdf9107296da5f6e8439cb68ac2fa" translate="yes" xml:space="preserve">
          <source>Here's an embedded live example for this guide.</source>
          <target state="translated">下面是本指南的嵌入式实战案例。</target>
        </trans-unit>
        <trans-unit id="f8987e6cd96e95c2cfb4f4fd4c1bed76aaee7fc7" translate="yes" xml:space="preserve">
          <source>Here's an example in which the &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; is two-way bound to the &lt;code&gt;SizerComponent&lt;/code&gt;:</source>
          <target state="translated">这是一个示例，其中 &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; 被双向绑定到 &lt;code&gt;SizerComponent&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2bdfacca7ab5d0824f43836325291190197ca019" translate="yes" xml:space="preserve">
          <source>Here's an example of a service class that logs to the browser console.</source>
          <target state="translated">下面是一个服务类的例子,它可以记录到浏览器控制台。</target>
        </trans-unit>
        <trans-unit id="99e679bc16af7a1f9d179d8466452325faeeffb8" translate="yes" xml:space="preserve">
          <source>Here's an example of an error message added to the &lt;em&gt;name&lt;/em&gt; input box:</source>
          <target state="translated">这是添加到&lt;em&gt;名称&lt;/em&gt;输入框中的错误消息的示例：</target>
        </trans-unit>
        <trans-unit id="a801f1de6030e88253033ddfef1b99db9927d97d" translate="yes" xml:space="preserve">
          <source>Here's an example of basic metadata for &lt;code&gt;HeroListComponent&lt;/code&gt;.</source>
          <target state="translated">这是 &lt;code&gt;HeroListComponent&lt;/code&gt; 的基本元数据的示例。</target>
        </trans-unit>
        <trans-unit id="45774d5d345882a71ea0fc59337a3b86d4253823" translate="yes" xml:space="preserve">
          <source>Here's an example of binding to the &lt;code&gt;colSpan&lt;/code&gt; property. Notice that it's not &lt;code&gt;colspan&lt;/code&gt;, which is the attribute, spelled with a lowercase &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">这是绑定到 &lt;code&gt;colSpan&lt;/code&gt; 属性的示例。注意，它不是 &lt;code&gt;colspan&lt;/code&gt; ，它是用小写字母 &lt;code&gt;s&lt;/code&gt; 拼写的属性。</target>
        </trans-unit>
        <trans-unit id="4dbc92e76d1afd27809635974b4f4a7190dd2709" translate="yes" xml:space="preserve">
          <source>Here's an example of creating and subscribing to a simple observable, with an observer that logs the received message to the console:</source>
          <target state="translated">下面是一个创建和订阅一个简单的observable的例子,观察者将收到的消息记录到控制台。</target>
        </trans-unit>
        <trans-unit id="044030613cb78d7ccdd179ec6255d8b66b6c4172" translate="yes" xml:space="preserve">
          <source>Here's an example of using keyframes to create a pulse effect:</source>
          <target state="translated">下面是一个使用关键帧来创建脉冲效果的例子。</target>
        </trans-unit>
        <trans-unit id="fff667011fdbcb48393c9cb30c030e165456b690" translate="yes" xml:space="preserve">
          <source>Here's an example of using the &lt;code&gt;catchError&lt;/code&gt; operator to do this:</source>
          <target state="translated">这是使用 &lt;code&gt;catchError&lt;/code&gt; 运算符执行此操作的示例：</target>
        </trans-unit>
        <trans-unit id="541970f9030afc36a95c731be207ea924fb5f0f4" translate="yes" xml:space="preserve">
          <source>Here's an example that demonstrates the basic usage model by showing how an observable could be used to provide geolocation updates.</source>
          <target state="translated">这里有一个例子,通过展示如何使用观测值来提供地理位置更新,来演示基本的使用模式。</target>
        </trans-unit>
        <trans-unit id="2639f3ab4611df11a6c31d7f75243294cbb8cbd4" translate="yes" xml:space="preserve">
          <source>Here's an example that excerpts certain scripts from &lt;code&gt;package.json&lt;/code&gt; into a partial file named &lt;code&gt;package.1.json&lt;/code&gt;.</source>
          <target state="translated">这是一个示例，该示例将 &lt;code&gt;package.json&lt;/code&gt; 中的某些脚本摘录到名为 &lt;code&gt;package.1.json&lt;/code&gt; 的部分文件中。</target>
        </trans-unit>
        <trans-unit id="61f04271f847d0c8988094c50219a148be404036" translate="yes" xml:space="preserve">
          <source>Here's an example.</source>
          <target state="translated">这里有一个例子。</target>
        </trans-unit>
        <trans-unit id="51e85e4e8113fb3e1f07e1727e78d73f5f0043e6" translate="yes" xml:space="preserve">
          <source>Here's an example:</source>
          <target state="translated">这里有一个例子。</target>
        </trans-unit>
        <trans-unit id="9e0c943ae02f8fdb73167474d07a54374b16f800" translate="yes" xml:space="preserve">
          <source>Here's an illustrative example.</source>
          <target state="translated">下面是一个说明性的例子。</target>
        </trans-unit>
        <trans-unit id="e88db74062a516f02d9d37bb5e8b39b0a74ea59d" translate="yes" xml:space="preserve">
          <source>Here's another code sample using the wildcard state together with our previous example using the &lt;code&gt;open&lt;/code&gt; and &lt;code&gt;closed&lt;/code&gt; states. Instead of defining each state-to-state transition pair, we're now saying that any transition to &lt;code&gt;closed&lt;/code&gt; takes 1 second, and any transition to &lt;code&gt;open&lt;/code&gt; takes 0.5 seconds.</source>
          <target state="translated">这是另一个使用通配符状态的代码示例，以及前面使用 &lt;code&gt;open&lt;/code&gt; 和 &lt;code&gt;closed&lt;/code&gt; 状态的示例。现在，我们不是在定义每个状态到状态转换对，而是说到 &lt;code&gt;closed&lt;/code&gt; 状态的任何转换都需要1秒，而 &lt;code&gt;open&lt;/code&gt; 任何转换都需要0.5秒。</target>
        </trans-unit>
        <trans-unit id="70eda6d168054a0865515e0443b33d2b23af65a0" translate="yes" xml:space="preserve">
          <source>Here's another test that calls &lt;code&gt;HTMLElement.querySelector&lt;/code&gt; to get the paragraph element and look for the banner text:</source>
          <target state="translated">这是另一个调用 &lt;code&gt;HTMLElement.querySelector&lt;/code&gt; 的测试，以获取段落元素并查找标题文本：</target>
        </trans-unit>
        <trans-unit id="3dc08816743a52195484363d2e3c24a2b3c9d87d" translate="yes" xml:space="preserve">
          <source>Here's another test that changes the component's &lt;code&gt;title&lt;/code&gt; property &lt;em&gt;before&lt;/em&gt; calling &lt;code&gt;fixture.detectChanges()&lt;/code&gt;.</source>
          <target state="translated">这是另一个测试，它&lt;em&gt;在&lt;/em&gt;调用 &lt;code&gt;fixture.detectChanges()&lt;/code&gt; &lt;em&gt;之前&lt;/em&gt;更改组件的 &lt;code&gt;title&lt;/code&gt; 属性。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3627df60550e33b9632085fa920812ce9f528a36" translate="yes" xml:space="preserve">
          <source>Here's are the two corresponding code snippets displayed side-by-side.</source>
          <target state="translated">下面是并排显示的两个相应的代码片段。</target>
        </trans-unit>
        <trans-unit id="3f7ca5ab98fbaecc24dee9341e08f0fa1f44c1a9" translate="yes" xml:space="preserve">
          <source>Here's how it works.</source>
          <target state="translated">这就是它的工作原理。</target>
        </trans-unit>
        <trans-unit id="c9765338cf911741bd6fdd71fe0e9d288e68f815" translate="yes" xml:space="preserve">
          <source>Here's how the harness should work when you're done coding.</source>
          <target state="translated">下面是当你完成编码后,线束应该如何工作。</target>
        </trans-unit>
        <trans-unit id="f8b16882caea78c4ae20585288bb3408690cd2a3" translate="yes" xml:space="preserve">
          <source>Here's how the user will experience this version of the app:</source>
          <target state="translated">以下是用户对这个版本的应用的体验。</target>
        </trans-unit>
        <trans-unit id="4288a1aa86a0ff0cdf195279ed93bc028ad830c8" translate="yes" xml:space="preserve">
          <source>Here's how to set the attribute without binding in plain HTML:</source>
          <target state="translated">下面是如何在纯HTML中设置不绑定的属性。</target>
        </trans-unit>
        <trans-unit id="ad7f50209fddbb04ba01574e4233f2906ad1ab57" translate="yes" xml:space="preserve">
          <source>Here's how you might begin:</source>
          <target state="translated">下面是你如何开始的。</target>
        </trans-unit>
        <trans-unit id="7e296845164394524708679f8487b23c5b3b8bb1" translate="yes" xml:space="preserve">
          <source>Here's how you might rewrite one of the &lt;code&gt;MasterService&lt;/code&gt; tests in that style.</source>
          <target state="translated">这是您可能以这种方式重写其中一种 &lt;code&gt;MasterService&lt;/code&gt; 测试的方法。</target>
        </trans-unit>
        <trans-unit id="3016acc8c67f96365b961ff1184679e2556919c4" translate="yes" xml:space="preserve">
          <source>Here's how you might update the authorization header (after the old token expired) before making the next request.</source>
          <target state="translated">以下是您在进行下一个请求之前更新授权头的方法(在旧令牌过期后)。</target>
        </trans-unit>
        <trans-unit id="9117f64adc27738efa3e0c09ed2e0b5bf8192560" translate="yes" xml:space="preserve">
          <source>Here's the &quot;flying hero&quot; at a more reasonable scale.</source>
          <target state="translated">这是一个比例比较合理的 &quot;飞天英雄&quot;。</target>
        </trans-unit>
        <trans-unit id="2022823e06097841ddac1cf7e8178ca2d42a4a76" translate="yes" xml:space="preserve">
          <source>Here's the &lt;code&gt;FlyingHeroesPipe&lt;/code&gt; implementation, which follows the pattern for custom pipes described earlier.</source>
          <target state="translated">这是 &lt;code&gt;FlyingHeroesPipe&lt;/code&gt; 实现，它遵循前面描述的自定义管道的模式。</target>
        </trans-unit>
        <trans-unit id="6a3af23f4d1dd133edc136f6262b5e7bda291ff3" translate="yes" xml:space="preserve">
          <source>Here's the &lt;code&gt;HeroDetailComponent&lt;/code&gt; constructor:</source>
          <target state="translated">这是 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 构造函数：</target>
        </trans-unit>
        <trans-unit id="db5c622d4af61973b5a850f38a6b8490ea24df97" translate="yes" xml:space="preserve">
          <source>Here's the &lt;code&gt;NameParentComponent&lt;/code&gt; demonstrating name variations including a name with all spaces:</source>
          <target state="translated">这是 &lt;code&gt;NameParentComponent&lt;/code&gt; ,显示名称的变体，包括带有所有空格的名称：</target>
        </trans-unit>
        <trans-unit id="1356893ffa40f8e92ce29acc0e9093499ed4e4f0" translate="yes" xml:space="preserve">
          <source>Here's the &lt;code&gt;src&lt;/code&gt; attribute for the &quot;flying hero&quot; image belonging to this page.</source>
          <target state="translated">这是属于此页面的&amp;ldquo;飞行英雄&amp;rdquo;图片的 &lt;code&gt;src&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="1934e4bbd6b06ebbe4498a926009f4a666e04fd4" translate="yes" xml:space="preserve">
          <source>Here's the &lt;em&gt;Crisis Center&lt;/em&gt; URL in this &quot;HTML5 pushState&quot; style:</source>
          <target state="translated">这是这种&amp;ldquo; HTML5 pushState&amp;rdquo;样式的&lt;em&gt;危机中心&lt;/em&gt; URL：</target>
        </trans-unit>
        <trans-unit id="47777d17bb1bca6811982891736189adcfcc5a34" translate="yes" xml:space="preserve">
          <source>Here's the Crisis Center URL in this &quot;HTML5 pushState&quot; style:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f4728904a893243df57b9fc8571044a55d17d1" translate="yes" xml:space="preserve">
          <source>Here's the app in action:</source>
          <target state="translated">这是应用程序的操作。</target>
        </trans-unit>
        <trans-unit id="9cf2ae56853b24b74c07fa91778a1f965ca1c2a0" translate="yes" xml:space="preserve">
          <source>Here's the brief markup that produced that lengthy snippet:</source>
          <target state="translated">这是产生那个长片段的简短标记。</target>
        </trans-unit>
        <trans-unit id="36ec26250a6311e0f6a9d15c00b167cc53c0abd4" translate="yes" xml:space="preserve">
          <source>Here's the complete &lt;code&gt;beforeEach()&lt;/code&gt;, using &lt;code&gt;TestBed.get()&lt;/code&gt;:</source>
          <target state="translated">下面是完整的 &lt;code&gt;beforeEach()&lt;/code&gt; ，使用 &lt;code&gt;TestBed.get()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e8038d4fe87223086f55bcb456ce49a9519717a6" translate="yes" xml:space="preserve">
          <source>Here's the complete &lt;code&gt;beforeEach()&lt;/code&gt;, using &lt;code&gt;TestBed.inject()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caecf0d5e0ff532d9b371ee05fe69b6c8e3e14b9" translate="yes" xml:space="preserve">
          <source>Here's the complete &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; file with its imports.</source>
          <target state="translated">这是完整的 &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; 文件及其导入。</target>
        </trans-unit>
        <trans-unit id="2f2a29a3cb9bc753449f5909dcff9ed14073cee1" translate="yes" xml:space="preserve">
          <source>Here's the complete test for getting a quote:</source>
          <target state="translated">以下是获取报价的完整测试。</target>
        </trans-unit>
        <trans-unit id="6bdcaeaf4077794f77927b6985a2ac0d9be095d9" translate="yes" xml:space="preserve">
          <source>Here's the component's full definition:</source>
          <target state="translated">下面是该组件的完整定义。</target>
        </trans-unit>
        <trans-unit id="62549f1989670813f8a7b7667c8ee151d97fb907" translate="yes" xml:space="preserve">
          <source>Here's the component, its template and styles:</source>
          <target state="translated">这是组件,它的模板和样式。</target>
        </trans-unit>
        <trans-unit id="df996b8eb08a97d6354f014409427c8d6fcd7be4" translate="yes" xml:space="preserve">
          <source>Here's the conditional paragraph again, this time using &lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">这又是条件段落，这次使用 &lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="730aeb3d5f96c7f97f79d7090b9eeccf0261bbcb" translate="yes" xml:space="preserve">
          <source>Here's the final code:</source>
          <target state="translated">这是最终的代码。</target>
        </trans-unit>
        <trans-unit id="7743a871c540a8d90d5f0b6b681eb8c8d191f7eb" translate="yes" xml:space="preserve">
          <source>Here's the full, final code for the service:</source>
          <target state="translated">这是该服务的完整、最终代码。</target>
        </trans-unit>
        <trans-unit id="e3f4b1fdcb29f542c15eed5d6f2f98b35f3afc23" translate="yes" xml:space="preserve">
          <source>Here's the latest version of the directive class.</source>
          <target state="translated">这是指令类的最新版本。</target>
        </trans-unit>
        <trans-unit id="b5b53ab66de81e52c96d692e7bcaea312637cb34" translate="yes" xml:space="preserve">
          <source>Here's the marble testing version of the &lt;code&gt;getQuote()&lt;/code&gt; error test.</source>
          <target state="translated">这是 &lt;code&gt;getQuote()&lt;/code&gt; 错误测试的大理石测试版本。</target>
        </trans-unit>
        <trans-unit id="656487aec53e8c241399400466ff6b0fbb361893" translate="yes" xml:space="preserve">
          <source>Here's the markup for an &quot;avoid&quot; example in the &lt;a href=&quot;styleguide#style-05-03&quot;&gt;&lt;em&gt;Angular Style Guide&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="translated">这是《&lt;a href=&quot;styleguide#style-05-03&quot;&gt;&lt;em&gt;Angular样式指南&lt;/em&gt;&lt;/a&gt;》中&amp;ldquo;避免&amp;rdquo;示例的标记。</target>
        </trans-unit>
        <trans-unit id="f1ce66c2b3fdb31cf1b0adc605c91b0e16e6d5e3" translate="yes" xml:space="preserve">
          <source>Here's the markup for that example.</source>
          <target state="translated">这是这个例子的标记。</target>
        </trans-unit>
        <trans-unit id="da8d856731f03ffe7562995f38730f23d3dcb96a" translate="yes" xml:space="preserve">
          <source>Here's the meat of the spec file setup.</source>
          <target state="translated">下面是规范文件设置的要点。</target>
        </trans-unit>
        <trans-unit id="99883629747b9a103f8b3ab3da4d0b4cb0439481" translate="yes" xml:space="preserve">
          <source>Here's the output for the &lt;em&gt;main&lt;/em&gt; bundle of an example app called &lt;code&gt;cli-quickstart&lt;/code&gt;.</source>
          <target state="translated">这是一个名为 &lt;code&gt;cli-quickstart&lt;/code&gt; 的示例应用程序的&lt;em&gt;主&lt;/em&gt;捆绑包的输出。</target>
        </trans-unit>
        <trans-unit id="c32dfe48fc6e040a3debbf88b61e369677d91a75" translate="yes" xml:space="preserve">
          <source>Here's the output of a button-pushing sequence:</source>
          <target state="translated">这是一个按键序列的输出。</target>
        </trans-unit>
        <trans-unit id="22bc28d071c5b0a1f933b3662d1adf54f39987a7" translate="yes" xml:space="preserve">
          <source>Here's the previous &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; test, re-written with the &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; utility.</source>
          <target state="translated">这是先前的用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; （）实用工具重写的 &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; 测试。</target>
        </trans-unit>
        <trans-unit id="3d6a6f8889834e3c8b1d65a05fdb25a7e2ea6f68" translate="yes" xml:space="preserve">
          <source>Here's the previous &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; test, re-written with the &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a50a9d22ad026dc17457d2ea667e0410123692" translate="yes" xml:space="preserve">
          <source>Here's the previous test, re-implemented with &lt;code&gt;fixture.debugElement.nativeElement&lt;/code&gt;:</source>
          <target state="translated">这是先前的测试，已使用 &lt;code&gt;fixture.debugElement.nativeElement&lt;/code&gt; 重新实现：</target>
        </trans-unit>
        <trans-unit id="f50475caf51709451a53cec5e964746fb2405109" translate="yes" xml:space="preserve">
          <source>Here's the previous test, rewritten using the click helper.</source>
          <target state="translated">这是之前的测试,用点击助手重写的。</target>
        </trans-unit>
        <trans-unit id="050ad561b8eadf86d74804f473be2ddd0edda3a5" translate="yes" xml:space="preserve">
          <source>Here's the same component with an input field for a single control implemented using template-driven forms.</source>
          <target state="translated">这里有一个同样的组件,有一个输入字段,用于使用模板驱动的表单实现的单个控件。</target>
        </trans-unit>
        <trans-unit id="d438fa0e2d2375bfdd5eb47ca1ad28ae5f460ffb" translate="yes" xml:space="preserve">
          <source>Here's the sample in action as the user makes changes.</source>
          <target state="translated">下面是用户进行修改时的示例。</target>
        </trans-unit>
        <trans-unit id="53f0e5e27eee1572f4b2943467931546bb2cebe6" translate="yes" xml:space="preserve">
          <source>Here's the updated directive in full:</source>
          <target state="translated">下面是更新后的指令全文。</target>
        </trans-unit>
        <trans-unit id="8292c62a5b64fea28e8eeec99f093a51f5489800" translate="yes" xml:space="preserve">
          <source>Here's what the new class for the phone list component controller looks like:</source>
          <target state="translated">这是电话列表组件控制器的新类的样子。</target>
        </trans-unit>
        <trans-unit id="07b8c34ac5381e60250f5c47082ce1167ad4448b" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;movie&lt;/code&gt; is a user-defined local variable.</source>
          <target state="translated">&lt;code&gt;movie&lt;/code&gt; 在这里是用户定义的局部变量。</target>
        </trans-unit>
        <trans-unit id="6153c1c7b9b946f59eac67deb18a944d2418c87d" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;ref.value&lt;/code&gt; doesn't work. The structural directive, &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; instantiates the template twice because &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; iterates over the two items in the array. It is impossible to define what the &lt;code&gt;ref.value&lt;/code&gt; reference signifies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11022e9ff6694cd10c93ffc254eca3c356cc71f" translate="yes" xml:space="preserve">
          <source>Here, during type checking of the template for &lt;code&gt;AppComponent&lt;/code&gt;, the &lt;code&gt;[user]=&quot;selectedUser&quot;&lt;/code&gt; binding corresponds with the &lt;code&gt;UserDetailComponent.user&lt;/code&gt; input. Therefore, Angular assigns the &lt;code&gt;selectedUser&lt;/code&gt; property to &lt;code&gt;UserDetailComponent.user&lt;/code&gt;, which would result in an error if their types were incompatible. TypeScript checks the assignment according to its type system, obeying flags such as &lt;code&gt;strictNullChecks&lt;/code&gt; as they are configured in the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0324e49eae3f4d465824bf23cdd72a64935bdeb9" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;&amp;lt;child-component&amp;gt;&lt;/code&gt; selector, or child directive, is embedded within a &lt;code&gt;&amp;lt;parent-component&amp;gt;&lt;/code&gt;, which serves as the child's context.</source>
          <target state="translated">在这里， &lt;code&gt;&amp;lt;child-component&amp;gt;&lt;/code&gt; 选择器或child指令嵌入在 &lt;code&gt;&amp;lt;parent-component&amp;gt;&lt;/code&gt; 中，用作子环境。</target>
        </trans-unit>
        <trans-unit id="5b29c9df7ecf00768cae1dfd0a130eb35958e0ad" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;disabled&lt;/code&gt; input of the component is being passed on to the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; in the template. All of this works as expected, as long as a &lt;code&gt;boolean&lt;/code&gt; value is bound to the input. But, suppose a consumer uses this input in the template as an attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6b1d3cce2b45f1e510f65dbcb1fa0284af0c29" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;keyup&lt;/code&gt; event binding sends every keystroke to the component's &lt;code&gt;search()&lt;/code&gt; method. The following snippet implements debouncing for this input using RxJS operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf7703c8c869b0d3156f399825f1391be789300" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;prepareRoute()&lt;/code&gt; method takes the value of the outlet directive (established through &lt;code&gt;#outlet=&quot;outlet&quot;&lt;/code&gt;) and returns a string value representing the state of the animation based on the custom data of the current active route. You can use this data to control which transition to execute for each route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4444abe3b6c8e06daabc19a62213ba0a77348697" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;prepareRoute()&lt;/code&gt; method takes the value of the output directive (established through &lt;code&gt;#outlet=&quot;outlet&quot;&lt;/code&gt;) and returns a string value representing the state of the animation based on the custom data of the current active route. You can use this data to control which transition to execute for each route.</source>
          <target state="translated">在这里， &lt;code&gt;prepareRoute()&lt;/code&gt; 方法采用输出指令的值（通过＃outlet &lt;code&gt;#outlet=&quot;outlet&quot;&lt;/code&gt; ），并根据当前活动路径的自定义数据返回表示动画状态的字符串值。您可以使用此数据来控制要为每个路线执行的过渡。</target>
        </trans-unit>
        <trans-unit id="db4f248c7a227dfd8248ff1d0b824a2832aa56db" translate="yes" xml:space="preserve">
          <source>Here, the &lt;em&gt;base URL&lt;/em&gt; is the &lt;code&gt;heroesURL&lt;/code&gt; defined in the &lt;a href=&quot;toh-pt6#heroes-and-http&quot;&gt;Heroes and HTTP&lt;/a&gt; section (&lt;code&gt;api/heroes&lt;/code&gt;) and &lt;em&gt;id&lt;/em&gt; is the number of the hero that you want to retrieve. For example, &lt;code&gt;api/heroes/11&lt;/code&gt;.</source>
          <target state="translated">此处，&lt;em&gt;基本URL&lt;/em&gt;是在&lt;a href=&quot;toh-pt6#heroes-and-http&quot;&gt;Heroes and HTTP&lt;/a&gt;部分（ &lt;code&gt;api/heroes&lt;/code&gt; ）中定义的 &lt;code&gt;heroesURL&lt;/code&gt; ，而&lt;em&gt;id&lt;/em&gt;是要检索的英雄的编号。例如， &lt;code&gt;api/heroes/11&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4080166bd678f2eca4714c474d2799cbcb87810f" translate="yes" xml:space="preserve">
          <source>Here, the defined &lt;code&gt;resolve()&lt;/code&gt; function is provided as part of the &lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; object in the router configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5ad69bacbe348316f6f630fe53b52c3b4a48c0" translate="yes" xml:space="preserve">
          <source>Here, the defined guard function is provided as part of the &lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; object in the router configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b196af8dfb1088f63537fb83ba051a0f53c06f" translate="yes" xml:space="preserve">
          <source>Here, the services and their values are the same, but &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; stops the injector from looking any further than the &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; for &lt;code&gt;FlowerService&lt;/code&gt;, so it doesn't find it and returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">在这里，服务及其值是相同的，但是 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 阻止了注入器对 &lt;code&gt;FlowerService&lt;/code&gt; 进行除 &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 之外的查找，因此找不到它并返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aca1b7a82a6d95098cb364094dad936a099e0db9" translate="yes" xml:space="preserve">
          <source>Hero &lt;em&gt;Power&lt;/em&gt; selection is required. You can add the same kind of error handling to the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; if you want, but it's not imperative because the selection box already constrains the power to valid values.</source>
          <target state="translated">必须选择英雄&lt;em&gt;力量&lt;/em&gt;。您可以根据需要向 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 添加相同类型的错误处理，但这不是必须的，因为选择框已经将幂限制为有效值。</target>
        </trans-unit>
        <trans-unit id="8d272839c4c67f0a7feb7b568fa8e3446ba7617c" translate="yes" xml:space="preserve">
          <source>Hero data access services (also stubbed).</source>
          <target state="translated">英雄数据接入服务(也是存根)。</target>
        </trans-unit>
        <trans-unit id="26c04b546596b8ec97053a1f0220517d0d8abd39" translate="yes" xml:space="preserve">
          <source>Hero feature routing requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fc9a6cb0d706d6d18b352e7c32ae4c311e5f0c" translate="yes" xml:space="preserve">
          <source>Heroes and HTTP</source>
          <target state="translated">英雄和HTTP</target>
        </trans-unit>
        <trans-unit id="49b093aef09840217c66c59f78c8bd0a260179f8" translate="yes" xml:space="preserve">
          <source>Heroes list: optionally selecting a hero</source>
          <target state="translated">英雄列表:可选择一个英雄</target>
        </trans-unit>
        <trans-unit id="526386faf0ef30d00c69495be0b464de4aa1decd" translate="yes" xml:space="preserve">
          <source>Hides the element by making it completely transparent and infinitely narrow, by setting its opacity and width to 0.</source>
          <target state="translated">将元素的不透明度和宽度设置为0,使其完全透明并无限缩小,从而将其隐藏起来。</target>
        </trans-unit>
        <trans-unit id="4ee5157ec195c6552c32bed0fef0ec3413f5f0a8" translate="yes" xml:space="preserve">
          <source>Hiding an element is different from removing it with &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt;. For comparison, the following example shows how to control the visibility of an element with a &lt;a href=&quot;attribute-binding#class-binding&quot;&gt;class&lt;/a&gt; or &lt;a href=&quot;attribute-binding#style-binding&quot;&gt;style&lt;/a&gt; binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89da5a8471af66d6f336800d1e48f784de69b323" translate="yes" xml:space="preserve">
          <source>Hiding an element is different from removing it with &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt;. For comparison, the following example shows how to control the visibility of an element with a &lt;a href=&quot;template-syntax#class-binding&quot;&gt;class&lt;/a&gt; or &lt;a href=&quot;template-syntax#style-binding&quot;&gt;style&lt;/a&gt; binding.</source>
          <target state="translated">隐藏元素与使用 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 删除元素不同。为了进行比较，下面的示例演示如何使用&lt;a href=&quot;template-syntax#class-binding&quot;&gt;类&lt;/a&gt;或&lt;a href=&quot;template-syntax#style-binding&quot;&gt;样式&lt;/a&gt;绑定控制元素的可见性。</target>
        </trans-unit>
        <trans-unit id="f6dfa102549e88b4ab47ff6c2781028644ccca90" translate="yes" xml:space="preserve">
          <source>Hierarchical dependency injection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3b1b147046025a15fb8a7690182f292845ab57" translate="yes" xml:space="preserve">
          <source>Hierarchical injectors</source>
          <target state="translated">层次分明的注射器</target>
        </trans-unit>
        <trans-unit id="b544fd8897e805cb5efd919039294bee77b58063" translate="yes" xml:space="preserve">
          <source>High level view</source>
          <target state="translated">高层视图</target>
        </trans-unit>
        <trans-unit id="1ea040e47ad5e315c0b6823679ca9344c5c85d16" translate="yes" xml:space="preserve">
          <source>Higher developer consistency with commit message standardization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e0a103daa9ae3f375b2654f0a482c7c0d36297" translate="yes" xml:space="preserve">
          <source>Hook</source>
          <target state="translated">Hook</target>
        </trans-unit>
        <trans-unit id="1f938b440e9146fcac04f1ceca1a771e15ff6a3b" translate="yes" xml:space="preserve">
          <source>Hook for manual bootstrapping of the application instead of using bootstrap array in @NgModule annotation.</source>
          <target state="translated">用于手动引导应用程序的钩子,而不是使用@NgModule注解中的引导数组。</target>
        </trans-unit>
        <trans-unit id="ee8d3d098543b8a4b311d8a110ff1f09abc900ff" translate="yes" xml:space="preserve">
          <source>Hook method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13797342eb3712b307083382e2ff0e78600433a5" translate="yes" xml:space="preserve">
          <source>Hooking into the component lifecycle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3960ec4ca5fb5e5d8cdb2cc1c5121c003e426517" translate="yes" xml:space="preserve">
          <source>Host</source>
          <target state="translated">Host</target>
        </trans-unit>
        <trans-unit id="900e91ae8e4d410ba8ad214c662d46c413ba8c8a" translate="yes" xml:space="preserve">
          <source>Host to listen on.</source>
          <target state="translated">主持人听上。</target>
        </trans-unit>
        <trans-unit id="854842ca941102874ac3fd35d9a644fe6a4e58d2" translate="yes" xml:space="preserve">
          <source>HostBinding</source>
          <target state="translated">HostBinding</target>
        </trans-unit>
        <trans-unit id="04423f0c0fb006f39c47ae77e76519ec61dae9e9" translate="yes" xml:space="preserve">
          <source>HostListener</source>
          <target state="translated">HostListener</target>
        </trans-unit>
        <trans-unit id="16d6f89a6d102237e8b5809f2f6a83253c134541" translate="yes" xml:space="preserve">
          <source>Hosting an Angular app anywhere else</source>
          <target state="translated">在其他地方托管Angular应用</target>
        </trans-unit>
        <trans-unit id="b2661e7c9fe866cee0abd12edc765c9ea4167169" translate="yes" xml:space="preserve">
          <source>Hosting an Angular app on Firebase</source>
          <target state="translated">在Firebase上托管一个Angular应用</target>
        </trans-unit>
        <trans-unit id="c9e203bd41e585a498a9ea3bfa7c58968ec8d5be" translate="yes" xml:space="preserve">
          <source>Hosting the built project</source>
          <target state="translated">主持已建项目</target>
        </trans-unit>
        <trans-unit id="b2e4d2264a6740b74155a1ebd270d51ac74c7499" translate="yes" xml:space="preserve">
          <source>Hour 0-23</source>
          <target state="translated">0-23小时</target>
        </trans-unit>
        <trans-unit id="e2e437b5f33c50fbf282a8b8ce3d5a4d0deeb077" translate="yes" xml:space="preserve">
          <source>Hour 1-12</source>
          <target state="translated">1-12小时</target>
        </trans-unit>
        <trans-unit id="cd7d764988e4f76f3f7fbbaaa971d2513fb11bb0" translate="yes" xml:space="preserve">
          <source>How &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; works</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 如何工作</target>
        </trans-unit>
        <trans-unit id="9bc4d8fa298867247715dc77fcde7869860686cb" translate="yes" xml:space="preserve">
          <source>How &lt;code&gt;forRoot()&lt;/code&gt; works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983fbf13b55a5e7fb496619c191e81853401c3d8" translate="yes" xml:space="preserve">
          <source>How &lt;code&gt;ngUpgrade&lt;/code&gt; Works</source>
          <target state="translated">&lt;code&gt;ngUpgrade&lt;/code&gt; 如何工作</target>
        </trans-unit>
        <trans-unit id="d6d941bd9de7fb7dc2069cff40c89a86c6b8c2dd" translate="yes" xml:space="preserve">
          <source>How AOT works</source>
          <target state="translated">AOT如何运作</target>
        </trans-unit>
        <trans-unit id="33f509892f89a76ff518df83752d09bab480dac2" translate="yes" xml:space="preserve">
          <source>How Angular assigns values to template variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5ca3d4267bdd4688ef2f3810892f694a4f2ec9" translate="yes" xml:space="preserve">
          <source>How a reference variable gets its value</source>
          <target state="translated">参考变量如何获得其值</target>
        </trans-unit>
        <trans-unit id="979c9d03c7fcc312615e96357da09f8be513691a" translate="yes" xml:space="preserve">
          <source>How can I tell if an NgModule or service was previously loaded?</source>
          <target state="translated">我如何知道NgModule或服务是否已经被加载?</target>
        </trans-unit>
        <trans-unit id="124b4b601ae7d0767a932ff315c4ae92f3fc2d45" translate="yes" xml:space="preserve">
          <source>How change detection works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9048d32b5da3d51d17fa1ee3d4c03154ff798961" translate="yes" xml:space="preserve">
          <source>How do I restrict service scope to a module?</source>
          <target state="translated">如何将服务范围限制在一个模块上?</target>
        </trans-unit>
        <trans-unit id="42da5511b4616e973fcfac7075b36f7d501b52f9" translate="yes" xml:space="preserve">
          <source>How do you bind to a second property when you're already binding to the &lt;code&gt;appHighlight&lt;/code&gt; attribute name?</source>
          <target state="translated">已经绑定到 &lt;code&gt;appHighlight&lt;/code&gt; 属性名称时，如何绑定到第二个属性？</target>
        </trans-unit>
        <trans-unit id="511988e08b2a40201c02270364cefca596e7c32b" translate="yes" xml:space="preserve">
          <source>How do you combat this problem? With asynchronous routing, which loads feature modules &lt;em&gt;lazily&lt;/em&gt;, on request. Lazy loading has multiple benefits.</source>
          <target state="translated">您如何解决这个问题？使用异步路由，可根据要求&lt;em&gt;延迟&lt;/em&gt;加载功能模块。延迟加载有很多好处。</target>
        </trans-unit>
        <trans-unit id="a416099edf7824be4ef297d434f0d54367f5e352" translate="yes" xml:space="preserve">
          <source>How does Angular find components, directives, and pipes in a template?What is a</source>
          <target state="translated">Angular如何在模板中找到组件、指令和管道? 什么是模板?</target>
        </trans-unit>
        <trans-unit id="3191620388b1773dd5d13b4c654d9f88a6f22136" translate="yes" xml:space="preserve">
          <source>How does the target &lt;code&gt;HeroDetailComponent&lt;/code&gt; learn about that &lt;code&gt;id&lt;/code&gt;? Don't analyze the URL. Let the router do it.</source>
          <target state="translated">目标 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 如何了解该 &lt;code&gt;id&lt;/code&gt; ？不要分析URL。让路由器来做。</target>
        </trans-unit>
        <trans-unit id="499d7e268f9c16c28dbe88d3eb572a2620838701" translate="yes" xml:space="preserve">
          <source>How event binding works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">运作方式</target>
        </trans-unit>
        <trans-unit id="997851a5869594d4c098e863b5fa4094939bdbc3" translate="yes" xml:space="preserve">
          <source>How meanings control text extraction and merging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1269b34a684f55e0b793348bbcd441f6ac9f34a" translate="yes" xml:space="preserve">
          <source>How ngUpgrade Works</source>
          <target state="translated">ngUpgrade如何工作</target>
        </trans-unit>
        <trans-unit id="b9f4e37b7f4ec8a20702b18e475d1c919dc443c6" translate="yes" xml:space="preserve">
          <source>How preloading works</source>
          <target state="translated">预加载如何工作</target>
        </trans-unit>
        <trans-unit id="223c761d3efb8aa4fcdd8c630361b5e28186b485" translate="yes" xml:space="preserve">
          <source>How the Language Service works</source>
          <target state="translated">语文服务如何运作</target>
        </trans-unit>
        <trans-unit id="a349db6c3c3e4bc124d0c086f320cf2dc99ff08d" translate="yes" xml:space="preserve">
          <source>How to debug errors with Ivy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8475727e660463a6a5ca3ce7a6ab63829de5ff" translate="yes" xml:space="preserve">
          <source>How to handle a navigation request to the current URL. One of:</source>
          <target state="translated">如何处理对当前URL的导航请求。之一。</target>
        </trans-unit>
        <trans-unit id="3acd7184a15f7cd60ff8b0cb2f254e98af8fe7db" translate="yes" xml:space="preserve">
          <source>How to handle missing translations for i18n.</source>
          <target state="translated">如何处理i18n的缺失翻译。</target>
        </trans-unit>
        <trans-unit id="a4312d2c2305c9665e2aa88c16af0276c80bbfb1" translate="yes" xml:space="preserve">
          <source>How to handle query parameters in a router link. One of:</source>
          <target state="translated">如何处理路由器链路中的查询参数。之一。</target>
        </trans-unit>
        <trans-unit id="133736070cd8def498e352ae2671acf3d2603a1b" translate="yes" xml:space="preserve">
          <source>How to handle query parameters in the router link for the next navigation. One of:</source>
          <target state="translated">如何处理路由器链接中的查询参数,以便下一步导航。之一。</target>
        </trans-unit>
        <trans-unit id="a516bf86adc981bbb12eae05bdf591c9d762031d" translate="yes" xml:space="preserve">
          <source>How to make a feature module</source>
          <target state="translated">如何制作功能模块</target>
        </trans-unit>
        <trans-unit id="42d423686e07004d3ccb86759ad8206a78194665" translate="yes" xml:space="preserve">
          <source>How to merge parameters, data, and resolved data from parent to child routes. One of:</source>
          <target state="translated">如何将父路由的参数、数据、解析数据合并到子路由。之一。</target>
        </trans-unit>
        <trans-unit id="ab680df21ca4ccde1eb27c6ee6427aabbfd91cc4" translate="yes" xml:space="preserve">
          <source>How to use &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">如何使用 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="271d720e4f07fc899b89ada24293400628fb4402" translate="yes" xml:space="preserve">
          <source>How to use &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">如何使用 &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2452bce6c068e1419f34d2c7498e5898f5e3f4a3" translate="yes" xml:space="preserve">
          <source>How to write your own structural directive.</source>
          <target state="translated">如何写自己的结构指令。</target>
        </trans-unit>
        <trans-unit id="23a119c365a39049b543486146aabe9cd6498db5" translate="yes" xml:space="preserve">
          <source>How two-way binding works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfc475c30ad52628f2cdc20da996ccdb18abcc8" translate="yes" xml:space="preserve">
          <source>How you provide services via an &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; (or &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt;) decorator determines their visibility. The following sections demonstrate &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; along with ways to modify service visibility with &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">您如何通过 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; （或 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; ）装饰器提供服务，决定了它们的可见性。以下各节展示 &lt;code&gt;providers&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 各种办法来修改与服务可视性以及 &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d59e9db4583cfeade655bda1cee43c9a4d0bf9b2" translate="yes" xml:space="preserve">
          <source>How you provide services via an &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; (or &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt;) decorator determines their visibility. The following sections demonstrate &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;viewProviders&lt;/code&gt; along with ways to modify service visibility with &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c06ea1a10cb3f7599812cd4dd0520ada6ed15d2" translate="yes" xml:space="preserve">
          <source>How you provide this information depends upon whether you compile with the JIT compiler or the AOT compiler.</source>
          <target state="translated">如何提供这些信息取决于你是用JIT编译器还是AOT编译器编译。</target>
        </trans-unit>
        <trans-unit id="42af694ff0648a4162e6e3bb0c6873e411523ff3" translate="yes" xml:space="preserve">
          <source>However the template binding syntax will always use the Angular style, e.g. square brackets (&lt;code&gt;[...]&lt;/code&gt;) for property binding.</source>
          <target state="translated">但是，模板绑定语法将始终使用Angular样式，例如，方括号（ &lt;code&gt;[...]&lt;/code&gt; ）用于属性绑定。</target>
        </trans-unit>
        <trans-unit id="dbda69fe90fc2df22f7e5b8531e85b712730ae09" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; observables are among the exceptions because &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; and its observables are insulated from the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; itself. The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; destroys a routed component when it is no longer needed along with the injected &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52ad01a1e6f8429d7b5fd705ab3383b484815aa" translate="yes" xml:space="preserve">
          <source>However, a pure pipe with an array as input may not work the way you want. To demonstrate this issue, change the previous example to filter the list of heroes to just those heroes who can fly. Use the &lt;code&gt;FlyingHeroesPipe&lt;/code&gt; in the &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; repeater as shown in the following code. The tabs for the example show the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78384c3742fdf68b1246d1ffbeeb9846d7e95bf3" translate="yes" xml:space="preserve">
          <source>However, a token doesn't have to be a class and even when it is a class, it doesn't have to be the same type as the returned object. That's the subject of the next section.</source>
          <target state="translated">然而,token不一定是一个类,即使是一个类,也不一定要和返回的对象是同一类型。这是下一节的主题。</target>
        </trans-unit>
        <trans-unit id="a51870768d3d98c605578aafcc0c0d074ca996ed" translate="yes" xml:space="preserve">
          <source>However, accessing a template variable from outside the parent template doesn't work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3116f3e696e3745d93dc36e6d542835460c30c1" translate="yes" xml:space="preserve">
          <source>However, behind the scenes, Angular uses a logical view representation as follows when resolving injection requests:</source>
          <target state="translated">然而,在幕后,Angular在解析注入请求时使用了如下的逻辑视图表示。</target>
        </trans-unit>
        <trans-unit id="693f46cb5ca176639aee0593be73408376b61903" translate="yes" xml:space="preserve">
          <source>However, certain JavaScript syntax is not allowed:</source>
          <target state="translated">但是,某些JavaScript语法是不允许的。</target>
        </trans-unit>
        <trans-unit id="16c8b7823d939bc8f045eae68088694acbb86125" translate="yes" xml:space="preserve">
          <source>However, due to the way Angular stores injection tokens, it is possible that such an unused component or service can end up in the bundle anyway. This page describes a dependency-injection design pattern that supports proper tree-shaking by using lightweight injection tokens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0553864b7141e33b190505316313eab2ee87daa6" translate="yes" xml:space="preserve">
          <source>However, executing a pipe to update the display with every change would slow down your app's performance. So Angular uses a faster change-detection algorithm for executing a pipe, as described in the next section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c48d0fa6289215af7e49a79607c8e0ccd6333d" translate="yes" xml:space="preserve">
          <source>However, if you run the tests in a &lt;strong&gt;non-CLI environment&lt;/strong&gt;, tests of this component may fail. For example, if you run the &lt;code&gt;BannerComponent&lt;/code&gt; tests in a web coding environment such as &lt;a href=&quot;https://plnkr.co/&quot;&gt;plunker&lt;/a&gt;, you'll see a message like this one:</source>
          <target state="translated">但是，如果您在&lt;strong&gt;非CLI环境&lt;/strong&gt;中运行测试，则此组件的测试可能会失败。例如，如果在诸如&lt;a href=&quot;https://plnkr.co/&quot;&gt;plunker之&lt;/a&gt;类的Web编码环境中运行 &lt;code&gt;BannerComponent&lt;/code&gt; 测试，您将看到类似以下消息：</target>
        </trans-unit>
        <trans-unit id="34e226b688a864f31651d20b9d5626cdbd2a322e" translate="yes" xml:space="preserve">
          <source>However, in practice, Angular simply ignores two-way bindings to template variables. Starting in version 8, attempting to write to template variables is deprecated. In a future version, we will throw to indicate that the write is not supported.</source>
          <target state="translated">然而,在实践中,Angular根本忽略了对模板变量的双向绑定。从第8版开始,尝试向模板变量写入已被废弃。在未来的版本中,我们会抛出表示不支持写入。</target>
        </trans-unit>
        <trans-unit id="5f46d3bcb10089005d7612c3f9cc519539d288fe" translate="yes" xml:space="preserve">
          <source>However, injecting the real service rarely works well as most dependent services are difficult to create and control.</source>
          <target state="translated">然而,注入真正的服务很少有好的效果,因为大多数依赖性服务很难创建和控制。</target>
        </trans-unit>
        <trans-unit id="9233cd0b325f45f872324e3cd65f528e0634c2ca" translate="yes" xml:space="preserve">
          <source>However, selective child animations can still be run on a disabled parent in one of the following ways:</source>
          <target state="translated">然而,选择性的子动画仍然可以通过以下一种方式在残疾的父母身上运行。</target>
        </trans-unit>
        <trans-unit id="319f88f562107ebe58d7c5640582471d82bf98d7" translate="yes" xml:space="preserve">
          <source>However, some translation systems require a specific form or syntax for the ID. To address this requirement, you can mark text with &lt;em&gt;custom&lt;/em&gt; IDs. While most developers don't need to use custom IDs, some may want to use IDs that have a unique syntax to convey additional metadata (such as the library, component, or area of the app in which the text appears).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29af858dd493651d68cc842edbeb89ea3c49cdf1" translate="yes" xml:space="preserve">
          <source>However, testing a single use case is unlikely to explore the full range of a directive's capabilities. Finding and testing all components that use the directive is tedious, brittle, and almost as unlikely to afford full coverage.</source>
          <target state="translated">然而,测试一个用例不太可能探索指令的全部功能。找到并测试使用该指令的所有组件是乏味的、脆弱的,而且几乎同样不可能提供全面的覆盖。</target>
        </trans-unit>
        <trans-unit id="63c4f7ceb30a9aea5c8f145005bfe8df2bd99995" translate="yes" xml:space="preserve">
          <source>However, the &lt;code&gt;AnimalService&lt;/code&gt;, which is provided in the &lt;code&gt;AppComponent&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; array, is visible.</source>
          <target state="translated">然而， &lt;code&gt;AnimalService&lt;/code&gt; ，其中提供 &lt;code&gt;AppComponent&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 阵列，是可见的。</target>
        </trans-unit>
        <trans-unit id="6d2f98825b9add3ac5515eab04960da13e1e316a" translate="yes" xml:space="preserve">
          <source>However, the &lt;code&gt;AnimalService&lt;/code&gt;, which is provided in the &lt;code&gt;AppComponent&lt;/code&gt;&lt;code&gt;viewProviders&lt;/code&gt; array, is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409b0b30eacfefc2c2ac82f07ea268d1b0b9bb37" translate="yes" xml:space="preserve">
          <source>However, this might feel like an unwelcome surprise if you expect the module's services to be visible only to the components declared by that feature module. If the &lt;code&gt;HeroModule&lt;/code&gt; provides the &lt;code&gt;HeroService&lt;/code&gt; and the root &lt;code&gt;AppModule&lt;/code&gt; imports &lt;code&gt;HeroModule&lt;/code&gt;, any class that knows the &lt;code&gt;HeroService&lt;/code&gt;&lt;em&gt;type&lt;/em&gt; can inject that service, not just the classes declared in the &lt;code&gt;HeroModule&lt;/code&gt;.</source>
          <target state="translated">但是，如果您希望模块的服务仅对该功能模块所声明的组件可见，则可能会感到不受欢迎。如果 &lt;code&gt;HeroModule&lt;/code&gt; 提供 &lt;code&gt;HeroService&lt;/code&gt; ，并且根 &lt;code&gt;AppModule&lt;/code&gt; 导入 &lt;code&gt;HeroModule&lt;/code&gt; ，则任何知道 &lt;code&gt;HeroService&lt;/code&gt; &lt;em&gt;类型的类&lt;/em&gt;都可以注入该服务，而不仅仅是 &lt;code&gt;HeroModule&lt;/code&gt; 中声明的类。</target>
        </trans-unit>
        <trans-unit id="30edf6e204f52b61f2571aecc7c209f88b84ea1f" translate="yes" xml:space="preserve">
          <source>However, this will work:</source>
          <target state="translated">不过,这也是可以的。</target>
        </trans-unit>
        <trans-unit id="d6af0af1a9e9d11d2d6ee59278094f54f71c5e1d" translate="yes" xml:space="preserve">
          <source>However, to set &lt;em&gt;many&lt;/em&gt; inline styles at the same time, use the &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;NgStyle&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">但是，要同时设置&lt;em&gt;许多&lt;/em&gt;内联样式，请使用 &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;NgStyle&lt;/a&gt;&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="d76129a2020266d4c676249304bb9a0e0d5fd584" translate="yes" xml:space="preserve">
          <source>However, when Angular expands the shorthand syntax, it creates another &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; tag, with &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ngif#ngIfElse&quot;&gt;ngIfElse&lt;/a&gt;&lt;/code&gt; directives. The anchor element containing the template for the &quot;then&quot; clause becomes the content of this unlabeled &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">但是，当Angular扩展简写语法时，它会使用 &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ngif#ngIfElse&quot;&gt;ngIfElse&lt;/a&gt;&lt;/code&gt; 指令创建另一个 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; 标记。包含&amp;ldquo; then&amp;rdquo;子句的模板的锚元素将成为此未标记的 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; 标记的内容。</target>
        </trans-unit>
        <trans-unit id="56d575a6c0a58c4606bda23eaa28f170e0ba3f40" translate="yes" xml:space="preserve">
          <source>However, when Angular expands the shorthand syntax, it creates another &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; tag, with &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;ngIfElse&lt;/code&gt; directives. The anchor element containing the template for the &quot;then&quot; clause becomes the content of this unlabeled &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d996735fae87b45148458d37047b283d694373" translate="yes" xml:space="preserve">
          <source>However, with &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;itemForm&lt;/code&gt; is a reference to the &lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt; directive with the ability to track the value and validity of every control in the form.</source>
          <target state="translated">但是，使用 &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; 时， &lt;code&gt;itemForm&lt;/code&gt; 是对&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;指令的引用，能够跟踪表单中每个控件的值和有效性。</target>
        </trans-unit>
        <trans-unit id="4f61b26fdb00998634e95b429fc277a6dcf31568" translate="yes" xml:space="preserve">
          <source>However, you almost always inject services into application classes using Angular dependency injection and you should have tests that reflect that usage pattern. Angular testing utilities make it easy to investigate how injected services behave.</source>
          <target state="translated">然而,你几乎总是使用Angular依赖注入将服务注入到应用程序类中,你应该有反映这种使用模式的测试。Angular测试实用程序可以很容易地调查注入的服务是如何表现的。</target>
        </trans-unit>
        <trans-unit id="8e1a2e9c4edb38cc5f33c8a92e731a540c8a4e2e" translate="yes" xml:space="preserve">
          <source>However, you might be troubled by the fact that the real service doesn't quite behave this way. The real service sends requests to a remote server. A server takes time to respond and the response certainly won't be available immediately as in the previous two tests.</source>
          <target state="translated">然而,你可能会感到困扰,因为真实的服务并不完全是这样的行为。真正的服务会向远程服务器发送请求。服务器需要时间来响应,响应肯定不会像前面两个测试中那样立即可用。</target>
        </trans-unit>
        <trans-unit id="07028f666590e3943a2a7158467fb00b0a46d178" translate="yes" xml:space="preserve">
          <source>HttpBackend</source>
          <target state="translated">HttpBackend</target>
        </trans-unit>
        <trans-unit id="74f0d45346780c9a2f7d9ba9c77d099f9ae02d4f" translate="yes" xml:space="preserve">
          <source>HttpClient</source>
          <target state="translated">HttpClient</target>
        </trans-unit>
        <trans-unit id="3dfdf9e078469afa983319e9dbcfec4b07dc38ed" translate="yes" xml:space="preserve">
          <source>HttpClientJsonpModule</source>
          <target state="translated">HttpClientJsonpModule</target>
        </trans-unit>
        <trans-unit id="601f075dcbf43fc07aee8d1626b1bb0090dc3e86" translate="yes" xml:space="preserve">
          <source>HttpClientModule</source>
          <target state="translated">HttpClientModule</target>
        </trans-unit>
        <trans-unit id="ca61ddc922f1c4bb126860b1fcceb0121f1e72b7" translate="yes" xml:space="preserve">
          <source>HttpClientTestingModule</source>
          <target state="translated">HttpClientTestingModule</target>
        </trans-unit>
        <trans-unit id="b0e4475f7bcbcf9e3bfc2d2b8cb35a87cd9da63f" translate="yes" xml:space="preserve">
          <source>HttpClientXsrfModule</source>
          <target state="translated">HttpClientXsrfModule</target>
        </trans-unit>
        <trans-unit id="31b51a48c6488640e3d7d12f81484cc7692bc954" translate="yes" xml:space="preserve">
          <source>HttpDownloadProgressEvent</source>
          <target state="translated">HttpDownloadProgressEvent</target>
        </trans-unit>
        <trans-unit id="631eed221a0a5e1227ee747dedc56a6e5cd04856" translate="yes" xml:space="preserve">
          <source>HttpErrorResponse</source>
          <target state="translated">HttpErrorResponse</target>
        </trans-unit>
        <trans-unit id="b601dad14c6ceb3e36baf63c5302eab72656db35" translate="yes" xml:space="preserve">
          <source>HttpEvent</source>
          <target state="translated">HttpEvent</target>
        </trans-unit>
        <trans-unit id="a25e2886e345f200e99c43296e545f2ec17e87d9" translate="yes" xml:space="preserve">
          <source>HttpEventType</source>
          <target state="translated">HttpEventType</target>
        </trans-unit>
        <trans-unit id="34a6f13d629874a5d2af931439592d54346c6458" translate="yes" xml:space="preserve">
          <source>HttpHandler</source>
          <target state="translated">HttpHandler</target>
        </trans-unit>
        <trans-unit id="13819588a41868e3eb12c563e1b5ce196d242ce8" translate="yes" xml:space="preserve">
          <source>HttpHeaderResponse</source>
          <target state="translated">HttpHeaderResponse</target>
        </trans-unit>
        <trans-unit id="47652085284b8b02e10d108308cf4fafe0936706" translate="yes" xml:space="preserve">
          <source>HttpHeaders</source>
          <target state="translated">HttpHeaders</target>
        </trans-unit>
        <trans-unit id="8184f8a7796e7947f825158c72ba880534cdf906" translate="yes" xml:space="preserve">
          <source>HttpInterceptor</source>
          <target state="translated">HttpInterceptor</target>
        </trans-unit>
        <trans-unit id="306e8873cd28a3d318c8259a4ca9675c917ea59c" translate="yes" xml:space="preserve">
          <source>HttpParameterCodec</source>
          <target state="translated">HttpParameterCodec</target>
        </trans-unit>
        <trans-unit id="f0370ec95bcf0338af85d0d9ee233cbf9b147f0e" translate="yes" xml:space="preserve">
          <source>HttpParams</source>
          <target state="translated">HttpParams</target>
        </trans-unit>
        <trans-unit id="49286b34daf58a4360367b78695303f96afd888f" translate="yes" xml:space="preserve">
          <source>HttpProgressEvent</source>
          <target state="translated">HttpProgressEvent</target>
        </trans-unit>
        <trans-unit id="876884817603f1994832b258f47c862ce8f79db8" translate="yes" xml:space="preserve">
          <source>HttpRequest</source>
          <target state="translated">HttpRequest</target>
        </trans-unit>
        <trans-unit id="98a81a35f1584d5f5070065dbea832e61fb0bf0f" translate="yes" xml:space="preserve">
          <source>HttpResponse</source>
          <target state="translated">HttpResponse</target>
        </trans-unit>
        <trans-unit id="41598c5b775fa5c84b8eee569b34c38dcacdd477" translate="yes" xml:space="preserve">
          <source>HttpResponseBase</source>
          <target state="translated">HttpResponseBase</target>
        </trans-unit>
        <trans-unit id="91259ca5dbf5ee0c7be0ec1ecec66070797276f8" translate="yes" xml:space="preserve">
          <source>HttpSentEvent</source>
          <target state="translated">HttpSentEvent</target>
        </trans-unit>
        <trans-unit id="0ec2efbe19ba7e3ef035c35046c8d7e07d7af284" translate="yes" xml:space="preserve">
          <source>HttpTestingController</source>
          <target state="translated">HttpTestingController</target>
        </trans-unit>
        <trans-unit id="2594ee986b764be8ea778008c933b096d5b6bf37" translate="yes" xml:space="preserve">
          <source>HttpUploadProgressEvent</source>
          <target state="translated">HttpUploadProgressEvent</target>
        </trans-unit>
        <trans-unit id="97816692d8c249075784ff4511d32cb3200d0fae" translate="yes" xml:space="preserve">
          <source>HttpUrlEncodingCodec</source>
          <target state="translated">HttpUrlEncodingCodec</target>
        </trans-unit>
        <trans-unit id="0aa97445f8cf4a27064f48a9964e2e2e5accb9b5" translate="yes" xml:space="preserve">
          <source>HttpUserEvent</source>
          <target state="translated">HttpUserEvent</target>
        </trans-unit>
        <trans-unit id="d81289e5fca4f39bab401bd23f2b00141a74346a" translate="yes" xml:space="preserve">
          <source>HttpXhrBackend</source>
          <target state="translated">HttpXhrBackend</target>
        </trans-unit>
        <trans-unit id="7869711a68093e11cb599a1fe14c17baa6ba3dd6" translate="yes" xml:space="preserve">
          <source>HttpXsrfTokenExtractor</source>
          <target state="translated">HttpXsrfTokenExtractor</target>
        </trans-unit>
        <trans-unit id="801f2493757c72ca45a5c235d90ad1ca581f7755" translate="yes" xml:space="preserve">
          <source>Human-readable format of exponential. Example: 1.2x103</source>
          <target state="translated">指数的人类可读格式。例如:1.2x103</target>
        </trans-unit>
        <trans-unit id="02b7c47c72c0e2f2d5177bd712fd4bfe5eec025c" translate="yes" xml:space="preserve">
          <source>Hybrid Angular applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed0186e952f0fc2ad82383289a170a0c73f97bd" translate="yes" xml:space="preserve">
          <source>I18nPluralPipe</source>
          <target state="translated">I18nPluralPipe</target>
        </trans-unit>
        <trans-unit id="abc1f616112daf4b387de1e6658364fdc11d58ba" translate="yes" xml:space="preserve">
          <source>I18nSelectPipe</source>
          <target state="translated">I18nSelectPipe</target>
        </trans-unit>
        <trans-unit id="6d2560c581ebaf3afab03757b7c3c7c2fc658887" translate="yes" xml:space="preserve">
          <source>ICU parsing happens at runtime, so only text, HTML tags and text bindings are allowed inside ICU cases (previously, directives were also permitted inside ICUs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843165076cf3bd0349681e4beeed1c6874126cc4" translate="yes" xml:space="preserve">
          <source>ID of the option element</source>
          <target state="translated">选项元素的ID</target>
        </trans-unit>
        <trans-unit id="877c0ac1ba5622c5882fedcdd9a0af40b83febbd" translate="yes" xml:space="preserve">
          <source>IDs conform to the Unicode Common Locale Data Repository (CLDR). For more information about Unicode locale identifiers, see the &lt;a href=&quot;http://cldr.unicode.org/core-spec#Unicode_Language_and_Locale_Identifiers&quot;&gt;CLDR core specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff31bb53dfc2bff233e882d367714fba682d7dc" translate="yes" xml:space="preserve">
          <source>IE</source>
          <target state="translated">IE</target>
        </trans-unit>
        <trans-unit id="e99eab8a5ebe9abaa8723fd9f1ddbf2c7d1a25dc" translate="yes" xml:space="preserve">
          <source>IE 10, IE 11</source>
          <target state="translated">IE 10,IE 11</target>
        </trans-unit>
        <trans-unit id="09500d66bc1c080dec280867c70d89f272b9554c" translate="yes" xml:space="preserve">
          <source>IE 11</source>
          <target state="translated">IE 11</target>
        </trans-unit>
        <trans-unit id="8e9963ae494f00fdfda1290439172d2aa12514d1" translate="yes" xml:space="preserve">
          <source>IE 9</source>
          <target state="translated">IE 9</target>
        </trans-unit>
        <trans-unit id="8c7d126d16997b97355174dcda4c6bb9cf8e2b48" translate="yes" xml:space="preserve">
          <source>IE Mobile</source>
          <target state="translated">IE移动版</target>
        </trans-unit>
        <trans-unit id="60b82a5cb94fb01631398c058b59f037ae77f375" translate="yes" xml:space="preserve">
          <source>IIFE</source>
          <target state="translated">IIFE</target>
        </trans-unit>
        <trans-unit id="3449c1aa01ef7a63b3d78a29f229155083bed4a6" translate="yes" xml:space="preserve">
          <source>INITIAL_CONFIG</source>
          <target state="translated">INITIAL_CONFIG</target>
        </trans-unit>
        <trans-unit id="7242c809890f5e50a88ffd8ad02f9da60184dd4a" translate="yes" xml:space="preserve">
          <source>INJECTOR</source>
          <target state="translated">INJECTOR</target>
        </trans-unit>
        <trans-unit id="5157ac1ff7f65b428bec7bef08cc132329b63c6d" translate="yes" xml:space="preserve">
          <source>ISO8601 basic format</source>
          <target state="translated">ISO8601基本格式</target>
        </trans-unit>
        <trans-unit id="39097fa6a5275ab54197cd03bbe174e778b7eb1c" translate="yes" xml:space="preserve">
          <source>ISO8601 extended format + Z indicator for offset 0 (= XXXXX)</source>
          <target state="translated">ISO8601扩展格式+偏移量0的Z指示器(=XXXXX)</target>
        </trans-unit>
        <trans-unit id="63c464b08623002f37661266e75b01e33a159ea0" translate="yes" xml:space="preserve">
          <source>Ideally, a component's job is to enable the user experience and nothing more. A component should present properties and methods for data binding, in order to mediate between the view (rendered by the template) and the application logic (which often includes some notion of a &lt;em&gt;model&lt;/em&gt;).</source>
          <target state="translated">理想情况下，组件的工作就是实现用户体验，仅此而已。组件应该提供用于数据绑定的属性和方法，以便在视图（由模板呈现）和应用程序逻辑（通常包括&lt;em&gt;模型的&lt;/em&gt;某些概念）之间进行中介。</target>
        </trans-unit>
        <trans-unit id="273acb31b215d9e49019afd7c3e7cf8d4a83de16" translate="yes" xml:space="preserve">
          <source>Ideally, if an application isn't injecting a service, Angular shouldn't include it in the final output. However, Angular has to be able to identify at build time whether the app will require the service or not. Because it's always possible to inject a service directly using &lt;code&gt;injector.get(Service)&lt;/code&gt;, Angular can't identify all of the places in your code where this injection could happen, so it has no choice but to include the service in the injector. Thus, services in the NgModule &lt;code&gt;providers&lt;/code&gt; array or at component level are not tree-shakable.</source>
          <target state="translated">理想情况下，如果应用程序未注入服务，则Angular不应在最终输出中包含该服务。但是，Angular必须能够在构建时识别该应用程序是否需要该服务。由于始终可以使用 &lt;code&gt;injector.get(Service)&lt;/code&gt; 直接注入服务，因此Angular无法识别代码中可能发生注入的所有位置，因此别无选择，只能将服务包含在注入器中。因此，NgModule &lt;code&gt;providers&lt;/code&gt; 数组中或组件级别的服务不可摇树。</target>
        </trans-unit>
        <trans-unit id="c0c74f9c69e219a901e496db780fa7e03049a871" translate="yes" xml:space="preserve">
          <source>Ideally, users should be able to click a link to navigate rather than pasting a route URL into the address bar.</source>
          <target state="translated">理想情况下,用户应该能够点击一个链接来导航,而不是将路径URL粘贴到地址栏中。</target>
        </trans-unit>
        <trans-unit id="06b6ace8ca3f18249e8ba4ea9090c0f34564ce1c" translate="yes" xml:space="preserve">
          <source>Identifier</source>
          <target state="translated">Identifier</target>
        </trans-unit>
        <trans-unit id="f58ce3d35d93d2140b71abc0fa1b54986940d04d" translate="yes" xml:space="preserve">
          <source>Identifies and handles a given HTTP request.</source>
          <target state="translated">识别并处理一个给定的HTTP请求。</target>
        </trans-unit>
        <trans-unit id="faa69bd85cc69080cb6a8a871ae2448b19bdf3da" translate="yes" xml:space="preserve">
          <source>Identifies and handles a given JSONP request.</source>
          <target state="translated">识别并处理一个给定的JSONP请求。</target>
        </trans-unit>
        <trans-unit id="dee8349d1c84482e40f15df8442baac4ca99ef95" translate="yes" xml:space="preserve">
          <source>Identifies requests with the method JSONP and shifts them to the &lt;code&gt;&lt;a href=&quot;http/jsonpclientbackend&quot;&gt;JsonpClientBackend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用JSONP方法标识请求，并将其转移到 &lt;code&gt;&lt;a href=&quot;http/jsonpclientbackend&quot;&gt;JsonpClientBackend&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8df9c229b309d13b4e14007cc922a7bc063af20" translate="yes" xml:space="preserve">
          <source>Identifies requests with the method JSONP and shifts them to the &lt;code&gt;&lt;a href=&quot;jsonpclientbackend&quot;&gt;JsonpClientBackend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用JSONP方法标识请求，并将其转移到 &lt;code&gt;&lt;a href=&quot;jsonpclientbackend&quot;&gt;JsonpClientBackend&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="839e3114e3b9d3a3fa48867a14c4e9afe0357710" translate="yes" xml:space="preserve">
          <source>Identifies the call or event that triggered the navigation. An &lt;code&gt;imperative&lt;/code&gt; trigger is a call to &lt;code&gt;router.navigateByUrl()&lt;/code&gt; or &lt;code&gt;router.navigate()&lt;/code&gt;.</source>
          <target state="translated">标识触发导航的呼叫或事件。一个 &lt;code&gt;imperative&lt;/code&gt; 触发是一个呼叫 &lt;code&gt;router.navigateByUrl()&lt;/code&gt; 或 &lt;code&gt;router.navigate()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25ab5ba8ca530f5f158154b68ffbcf85362be05b" translate="yes" xml:space="preserve">
          <source>Identifies the new platform factory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38af51b71aa8062ad05f52bc1d4222fe545ab1aa" translate="yes" xml:space="preserve">
          <source>Identify</source>
          <target state="translated">Identify</target>
        </trans-unit>
        <trans-unit id="2a58e4f2e431bfd56df14f3e8c74e1585ce5f28d" translate="yes" xml:space="preserve">
          <source>Identify the active route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f148f2d6935d4ae76200aaec633ed31b1033b2" translate="yes" xml:space="preserve">
          <source>Identity reference</source>
          <target state="translated">身份参考</target>
        </trans-unit>
        <trans-unit id="f24e9c9588c68667b970bc698f5d8988ec03b9be" translate="yes" xml:space="preserve">
          <source>Idle task queue</source>
          <target state="translated">闲置任务队列</target>
        </trans-unit>
        <trans-unit id="6bb4d315363a95a4fbf146f2054fbe340f1c9487" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the view still renders but the displayed value is blank; you see only &quot;The item name is:&quot; with nothing after it.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则视图仍然呈现，但是显示的值为空白；您只会看到&amp;ldquo;项目名称为：&amp;rdquo;，后面没有任何内容。</target>
        </trans-unit>
        <trans-unit id="6da6a54b219d1bf81b2cc66cad7dd0e7ddd6117a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; is the default &lt;code&gt;&lt;a href=&quot;../jsonpipe&quot;&gt;json&lt;/a&gt;&lt;/code&gt;, you can pass a type interface for the resulting object as a type parameter to the call.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; 是默认的 &lt;code&gt;&lt;a href=&quot;../jsonpipe&quot;&gt;json&lt;/a&gt;&lt;/code&gt; ，则可以将结果对象的类型接口作为类型参数传递给调用。</target>
        </trans-unit>
        <trans-unit id="9f61235f17a9a61f1406e160be41b27344ea51d3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@angular/localize&lt;/code&gt; is not installed, the Angular CLI may generate an error when you try to build a localized version of your app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20046da8dd9cbe89cc7285da01207f6baa79e09b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;enabled&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; in the given options, the module will behave as if service workers are not supported by the browser, and the service worker will not be registered.</source>
          <target state="translated">如果在给定的选项中将 &lt;code&gt;enabled&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ，则该模块的行为就像浏览器不支持Service Worker，并且该Service Worker将不会注册。</target>
        </trans-unit>
        <trans-unit id="e98a50040a0048fe1d6d721d215eaf87a57c6337" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ignoreCancelled&lt;/code&gt; is not set (the default), &lt;code&gt;verify()&lt;/code&gt; will also fail if cancelled requests were not explicitly matched.</source>
          <target state="translated">如果未设置 &lt;code&gt;ignoreCancelled&lt;/code&gt; （默认设置），则如果未明确匹配已取消的请求，则 &lt;code&gt;verify()&lt;/code&gt; 也会失败。</target>
        </trans-unit>
        <trans-unit id="2634a7b2c56c056a6b1cbec3a8b79516051dae63" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;item&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the view still renders but the displayed value is blank; you see only &quot;The item name is:&quot; with nothing after it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748b753025529c55a842c6d9f6660a18d272f322" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;myapp&lt;/code&gt; is the directory containing your app's distributable files, you would typically make available different versions for different locales in locale directories such as &lt;code&gt;myapp/fr&lt;/code&gt; for the French version and &lt;code&gt;myapp.com/es&lt;/code&gt; for the Spanish version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d8422f2e65706b8497bcc51a57226f6a6115f7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;parentItem&lt;/code&gt; were some other type, you would need to specify &lt;code&gt;childItem&lt;/code&gt;&lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; as that type as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c7c960113eaa483cbd792b988036fe861c77b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;resourcesOutputPath&lt;/code&gt; or &lt;code&gt;assets&lt;/code&gt; paths are modified after the generation of configuration file, you need to change the paths manually in &lt;code&gt;ngsw-config.json&lt;/code&gt;.</source>
          <target state="translated">如果在生成配置文件后修改 &lt;code&gt;resourcesOutputPath&lt;/code&gt; 或 &lt;code&gt;assets&lt;/code&gt; 路径，则需要在 &lt;code&gt;ngsw-config.json&lt;/code&gt; 中手动更改路径。</target>
        </trans-unit>
        <trans-unit id="59e9c7fd5ea287685b778a83b66934b4552cf074" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;responseType&lt;/code&gt; is the default &lt;code&gt;&lt;a href=&quot;../jsonpipe&quot;&gt;json&lt;/a&gt;&lt;/code&gt;, you can pass a type interface for the resulting object as a type parameter to the call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c26dcf1ae594af2316d44c7bd3b0f361e602408" translate="yes" xml:space="preserve">
          <source>If Angular doesn't find the provider in any &lt;code&gt;ElementInjector&lt;/code&gt;s, it goes back to the element where the request originated and looks in the &lt;code&gt;ModuleInjector&lt;/code&gt; hierarchy. If Angular still doesn't find the provider, it throws an error.</source>
          <target state="translated">如果Angular在任何 &lt;code&gt;ElementInjector&lt;/code&gt; 中都找不到提供程序，它将返回到发起请求的元素，并在 &lt;code&gt;ModuleInjector&lt;/code&gt; 层次结构中进行查找。如果Angular仍然找不到提供程序，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="7e29b3f5e2dff7dd76052d8ccd8eddda8abe0ae1" translate="yes" xml:space="preserve">
          <source>If AnimationBuilder is used, enables scrubbing support for IE/Edge and Safari. (Chrome and Firefox support this natively).</source>
          <target state="translated">如果使用了AnimationBuilder,则启用对IE/Edge和Safari的擦除支持。(Chrome和Firefox原生支持)。</target>
        </trans-unit>
        <trans-unit id="41891637b47b87d8458f07c4a6cafe2c7fdb3d2b" translate="yes" xml:space="preserve">
          <source>If NgModule A provides a service for token 'X' and imports an NgModule B that also provides a service for token 'X', then NgModule A's service definition &quot;wins&quot;.</source>
          <target state="translated">如果NgModule A为令牌'X'提供服务,并导入一个同样为令牌'X'提供服务的NgModule B,那么NgModule A的服务定义 &quot;获胜&quot;。</target>
        </trans-unit>
        <trans-unit id="c1eecfae70b492bc24007ffa2294728a9dfa495c" translate="yes" xml:space="preserve">
          <source>If a cachable request is found in the cache, the interceptor returns an &lt;code&gt;of()&lt;/code&gt;&lt;em&gt;observable&lt;/em&gt; with the cached response, by-passing the &lt;code&gt;next&lt;/code&gt; handler (and all other interceptors downstream).</source>
          <target state="translated">如果在缓存中找到可缓存的请求，则拦截器将绕过 &lt;code&gt;next&lt;/code&gt; 处理程序（和下游的所有其他拦截器），返回&lt;em&gt;可&lt;/em&gt;通过缓存的响应&lt;em&gt;观察到&lt;/em&gt;的 &lt;code&gt;of()&lt;/code&gt; ）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a557a16e0123df7fbc078703591e93ef301867af" translate="yes" xml:space="preserve">
          <source>If a cachable request is not in cache, the code calls &lt;code&gt;sendRequest&lt;/code&gt;.</source>
          <target state="translated">如果可缓存的请求不在缓存中，则代码调用 &lt;code&gt;sendRequest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e31a4be0de140cda7feef27f0475c0e43572b63f" translate="yes" xml:space="preserve">
          <source>If a cacheable request is found in the cache, the interceptor returns an &lt;code&gt;of()&lt;/code&gt;&lt;em&gt;observable&lt;/em&gt; with the cached response, by-passing the &lt;code&gt;next&lt;/code&gt; handler (and all other interceptors downstream).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ef8fc972b8795ff9dbbaa46f63a9c20d56144c" translate="yes" xml:space="preserve">
          <source>If a cacheable request is not in cache, the code calls &lt;code&gt;sendRequest()&lt;/code&gt;. This function creates a &lt;a href=&quot;http#immutability&quot;&gt;request clone&lt;/a&gt; without headers, because the npm API forbids them. The function then forwards the clone of the request to &lt;code&gt;next.handle()&lt;/code&gt; which ultimately calls the server and returns the server's response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a21150a7b49171680b296303c8c3068307fd81" translate="yes" xml:space="preserve">
          <source>If a component isn't an &lt;em&gt;entry component&lt;/em&gt; and isn't found in a template, the tree shaker will throw it away. So, it's best to add only the components that are truly entry components to help keep your app as trim as possible.</source>
          <target state="translated">如果组件不是&lt;em&gt;入口组件，&lt;/em&gt;并且在模板中找不到，则摇树器会将其丢弃。因此，最好仅添加真正的入门组件，以帮助您的应用程序尽可能地精简。</target>
        </trans-unit>
        <trans-unit id="82977af04a1be023e2632c7ce2dc1d6a584c85e0" translate="yes" xml:space="preserve">
          <source>If a component isn't an &lt;em&gt;entry component&lt;/em&gt; or wasn't found in a template, the compiler omits it.</source>
          <target state="translated">如果某个组件不是&lt;em&gt;入口组件，&lt;/em&gt;或者在模板中找不到，则编译器会忽略它。</target>
        </trans-unit>
        <trans-unit id="928fd4fa526ed6eda7f59b8933282d6e07b0b85b" translate="yes" xml:space="preserve">
          <source>If a component, directive, or pipe belongs to a module in the &lt;code&gt;imports&lt;/code&gt; array, ​&lt;em&gt;don't&lt;/em&gt;​ re-declare it in the &lt;code&gt;declarations&lt;/code&gt; array. If you wrote it and it should belong to this module, ​&lt;em&gt;do&lt;/em&gt;​ declare it in the &lt;code&gt;declarations&lt;/code&gt; array.</source>
          <target state="translated">如果一个组件，指令，或管属于在模块 &lt;code&gt;imports&lt;/code&gt; 阵列，&lt;em&gt;不&lt;/em&gt;中重新声明它 &lt;code&gt;declarations&lt;/code&gt; 阵列。如果你写的，它应该属于这个模块，&lt;em&gt;也&lt;/em&gt;将在其声明 &lt;code&gt;declarations&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="5412001a6342f943d1164b11e4f80c199052baef" translate="yes" xml:space="preserve">
          <source>If a library doesn't have typings available at &lt;code&gt;@types/&lt;/code&gt;, you can still use it by manually adding typings for it. To do this:</source>
          <target state="translated">如果库在 &lt;code&gt;@types/&lt;/code&gt; 处没有可用的类型，您仍然可以通过手动添加类型来使用它。去做这个：</target>
        </trans-unit>
        <trans-unit id="fdb8960b3596db71a2d8f8b8dc45d058f36e0a1e" translate="yes" xml:space="preserve">
          <source>If a link in the page is a root URL (has an &lt;code&gt;authority&lt;/code&gt;), the &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; is not used. In this way, an &lt;code&gt;&lt;a href=&quot;../api/common/app_base_href&quot;&gt;APP_BASE_HREF&lt;/a&gt;&lt;/code&gt; with an authority will cause all links created by Angular to ignore the &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b23cd84551a7f7a976d6aeb6c17b5809a2ed511" translate="yes" xml:space="preserve">
          <source>If a matching request has been made, fail with an error message including the given request description, if any.</source>
          <target state="translated">如果有匹配的请求,则会出现错误信息,包括给定的请求描述(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="37dfd42ae1c031038225c47cb260140e0566ea26" translate="yes" xml:space="preserve">
          <source>If a module defines both providers and declarations (components, directives, pipes), then loading the module in multiple feature modules would duplicate the registration of the service. This could result in multiple service instances and the service would no longer behave as a singleton.</source>
          <target state="translated">如果一个模块同时定义了提供者和声明(组件、指令、管道),那么在多个功能模块中加载该模块将重复注册服务。这可能会导致多个服务实例,而且服务将不再表现为一个单人。</target>
        </trans-unit>
        <trans-unit id="153c1d112fedc7715f021056fb6893af4681c150" translate="yes" xml:space="preserve">
          <source>If a particular file fails validation, the Angular service worker attempts to re-fetch the content using a &quot;cache-busting&quot; URL parameter to eliminate the effects of browser or intermediate caching. If that content also fails validation, the service worker considers the entire version of the app to be invalid and it stops serving the app. If necessary, the service worker enters a safe mode where requests fall back on the network, opting not to use its cache if the risk of serving invalid, broken, or outdated content is high.</source>
          <target state="translated">如果某个文件没有通过验证,Angular服务工作者会尝试使用 &quot;缓存破坏 &quot;URL参数重新获取内容,以消除浏览器或中间缓存的影响。如果该内容也未通过验证,服务工作者就会认为整个版本的应用无效,它将停止为该应用服务。如果有必要,服务工作者会进入一个安全模式,在这个模式下,请求会回落到网络上,如果服务无效、破损或过时内容的风险很高,服务工作者会选择不使用其缓存。</target>
        </trans-unit>
        <trans-unit id="772ddfa5b7d68e2c32169f0370cc73c59e176504" translate="yes" xml:space="preserve">
          <source>If a previous search request is still &lt;em&gt;in-flight&lt;/em&gt; (as when the network connection is poor), it cancels that request and sends a new one.</source>
          <target state="translated">如果先前的搜索请求仍在运行&lt;em&gt;中&lt;/em&gt;（如网络连接不良），它将取消该请求并发送新的请求。</target>
        </trans-unit>
        <trans-unit id="b53118bae5db34ffb1b4cf25da459ef342963d97" translate="yes" xml:space="preserve">
          <source>If a provider cannot be configured in this way (perhaps because it has no sensible default value), then register application-wide providers in the root &lt;code&gt;AppModule&lt;/code&gt;, not in the &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">如果一个提供商不能以这种方式（可能是因为它没有合理的默认值）来配置，则注册应用程序范围内提供在根 &lt;code&gt;AppModule&lt;/code&gt; ，而不是在 &lt;code&gt;AppComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7eb25f225ddf9c958a4a310cf508da2c8b8d3cae" translate="yes" xml:space="preserve">
          <source>If a region of the DOM (or the entire application) has its animations disabled, the animation trigger callbacks still fire, but for zero seconds. When the callback fires, it provides an instance of an &lt;code&gt;&lt;a href=&quot;animationevent&quot;&gt;AnimationEvent&lt;/a&gt;&lt;/code&gt;. If animations are disabled, the &lt;code&gt;.disabled&lt;/code&gt; flag on the event is true.</source>
          <target state="translated">如果DOM区域（或整个应用程序）的动画被禁用，则动画触发器回调仍会触发，但持续时间为零秒。回调触发时，它将提供 &lt;code&gt;&lt;a href=&quot;animationevent&quot;&gt;AnimationEvent&lt;/a&gt;&lt;/code&gt; 的实例。如果禁用了动画，则事件上的 &lt;code&gt;.disabled&lt;/code&gt; 标志为true。</target>
        </trans-unit>
        <trans-unit id="ed6f22701aa659882520ee8999e4722594b619bd" translate="yes" xml:space="preserve">
          <source>If a route is protected by &lt;code&gt;&lt;a href=&quot;route#canLoad&quot;&gt;canLoad&lt;/a&gt;&lt;/code&gt; guards, the preloaded will not load it.</source>
          <target state="translated">如果路由受 &lt;code&gt;&lt;a href=&quot;route#canLoad&quot;&gt;canLoad&lt;/a&gt;&lt;/code&gt; 保护器保护，则预加载的路由不会加载该路由。</target>
        </trans-unit>
        <trans-unit id="31211ceb25db282c2778b0e7f523e65a2928bb5b" translate="yes" xml:space="preserve">
          <source>If a route is protected by &lt;code&gt;canLoad&lt;/code&gt; guards, the preloaded will not load it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9439dbdfd08109c95a98837df7b16acd71a7577" translate="yes" xml:space="preserve">
          <source>If a synchronous error happens it will be rethrown and not reported via &lt;code&gt;onError&lt;/code&gt;.</source>
          <target state="translated">如果发生同步错误，它将被重新抛出，并且不会通过 &lt;code&gt;onError&lt;/code&gt; 报告。</target>
        </trans-unit>
        <trans-unit id="1193b9b4175de5acb12984919c9136d2c89a4f85" translate="yes" xml:space="preserve">
          <source>If a token is injected with the &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;&lt;/code&gt; flag, the module injector is not searched for that token (previously, tokens marked with these flags would still search at the module level).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00daec30c96e47a317ac6daa4260ebf84859c21c" translate="yes" xml:space="preserve">
          <source>If a trigger binding value is a Boolean, it can be matched using a transition expression that compares true and false or 1 and 0. For example:</source>
          <target state="translated">如果触发器绑定值是一个布尔值,可以使用一个过渡表达式进行匹配,将真和假或1和0进行比较。 例如:</target>
        </trans-unit>
        <trans-unit id="126cac6a6045858048bd7e923d7b34e4f134314c" translate="yes" xml:space="preserve">
          <source>If a trigger contains a boolean value as a binding value, then this value can be matched using a &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; expression that compares &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">如果触发器包含一个布尔值作为绑定值，则可以使用比较 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;0&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; 表达式来匹配此值。</target>
        </trans-unit>
        <trans-unit id="e50e34462749ac65c8cf4317ed5676213f6e2090" translate="yes" xml:space="preserve">
          <source>If a user enters that URL into the browser address bar, the router should recognize the pattern and go to the same &quot;Magneta&quot; detail view.</source>
          <target state="translated">如果用户在浏览器地址栏中输入该URL,路由器应该会识别该模式,并进入相同的 &quot;Magneta &quot;详细视图。</target>
        </trans-unit>
        <trans-unit id="f6919a849126284f296a0ff57039a9cf7b8e4a82" translate="yes" xml:space="preserve">
          <source>If an expression is not foldable, the collector writes it to &lt;code&gt;.metadata.json&lt;/code&gt; as an &lt;a href=&quot;https://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;AST&lt;/a&gt; for the compiler to resolve.</source>
          <target state="translated">如果表达式不可折叠，则收集器会将其作为&lt;a href=&quot;https://en.wikipedia.org/wiki/Abstract_syntax_tree&quot;&gt;AST&lt;/a&gt;写入 &lt;code&gt;.metadata.json&lt;/code&gt; ，以供编译器解析。</target>
        </trans-unit>
        <trans-unit id="3776c3775f99b8ca1455c46376b27adc6b1e4aab" translate="yes" xml:space="preserve">
          <source>If an expression uses unsupported syntax, the collector writes an error node to the &lt;code&gt;.metadata.json&lt;/code&gt; file. The compiler later reports the error if it needs that piece of metadata to generate the application code.</source>
          <target state="translated">如果表达式使用不受支持的语法，则收集器会将错误节点写入 &lt;code&gt;.metadata.json&lt;/code&gt; 文件。如果编译器需要该元数据来生成应用程序代码，则稍后会报告该错误。</target>
        </trans-unit>
        <trans-unit id="2c1ea63fe3e751750d668900003cfb0b2fc2138e" translate="yes" xml:space="preserve">
          <source>If any of the passed-in parameter values are missing from this call, the default values are used. If one or more parameter values are missing before a step is animated, &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; throws an error.</source>
          <target state="translated">如果此调用中缺少任何传入的参数值，则使用默认值。如果在对步骤进行动画处理之前缺少一个或多个参数值，则 &lt;code&gt;&lt;a href=&quot;useanimation&quot;&gt;useAnimation&lt;/a&gt;()&lt;/code&gt; 会引发错误。</target>
        </trans-unit>
        <trans-unit id="8297839eeda1d6ac628fdcf349ff15b398e9f7ec" translate="yes" xml:space="preserve">
          <source>If any requests are outstanding, fail with an error message indicating which requests were not handled.</source>
          <target state="translated">如果有任何请求未处理,则以错误信息说明哪些请求未处理失败。</target>
        </trans-unit>
        <trans-unit id="78a0a0f3d87236bcde7fe383b154888d25e30118" translate="yes" xml:space="preserve">
          <source>If compiling with the ViewEngine renderer, do not use this in a production server environment. Use pre-compiled &lt;a href=&quot;../core/ngmodulefactory&quot;&gt;&lt;code&gt;NgModuleFactory&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;rendermodulefactory&quot;&gt;&lt;code&gt;renderModuleFactory&lt;/code&gt;&lt;/a&gt; instead. If compiling with the Ivy renderer, this method is the recommended rendering method for platform-server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe08f5539ac4bc33409018c8e77a3cf182d48db" translate="yes" xml:space="preserve">
          <source>If desired, open the Output window (&lt;code&gt;View&lt;/code&gt; | &lt;code&gt;&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;) to watch the npm commands execute.</source>
          <target state="translated">如果需要，请打开&amp;ldquo;输出&amp;rdquo;窗口（&amp;ldquo; &lt;code&gt;View&lt;/code&gt; |&amp;ldquo; &lt;code&gt;&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; ）以查看npm命令的执行情况。</target>
        </trans-unit>
        <trans-unit id="a7351ddc6a7cd3e167d6abe4319ab53c493d68c8" translate="yes" xml:space="preserve">
          <source>If don't add the interface for the script-defined extension, your IDE shows an error:</source>
          <target state="translated">如果没有为脚本定义的扩展添加接口,你的IDE会显示一个错误。</target>
        </trans-unit>
        <trans-unit id="ac260a05c0b8dad2568206edbc95161f250ef807" translate="yes" xml:space="preserve">
          <source>If false, will error out if installed packages are incompatible with the update.</source>
          <target state="translated">如果为假,如果安装的软件包与更新不兼容,将出错。</target>
        </trans-unit>
        <trans-unit id="f032cf6d2b03e78a246739a8908cb417e0108e0e" translate="yes" xml:space="preserve">
          <source>If forms are a central part of your application, scalability is very important. Being able to reuse form models across components is critical.</source>
          <target state="translated">如果表单是您的应用程序的核心部分,可扩展性是非常重要的。能够跨组件重用表单模型是至关重要的。</target>
        </trans-unit>
        <trans-unit id="db9bfb7eb5ad6beada080172eda6cd3931052021" translate="yes" xml:space="preserve">
          <source>If inside an embedded view (e.g. &lt;code&gt;*&lt;a href=&quot;../../common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;*&lt;a href=&quot;../../common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;), retrieves the context of the embedded view that the element is part of. Otherwise retrieves the instance of the component whose view owns the element (in this case, the result is the same as calling &lt;code&gt;&lt;a href=&quot;nggetowningcomponent&quot;&gt;getOwningComponent&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5315ddf9835a63fe9abe1f91461e4e5c8b284a75" translate="yes" xml:space="preserve">
          <source>If inside an embedded view (e.g. &lt;code&gt;*&lt;a href=&quot;../common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;*&lt;a href=&quot;../common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;), retrieves the context of the embedded view that the element is part of. Otherwise retrieves the instance of the component whose view owns the element (in this case, the result is the same as calling &lt;code&gt;&lt;a href=&quot;global/nggetowningcomponent&quot;&gt;getOwningComponent&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534d625f4fac3eff1e93003d98e3e44e789a243b" translate="yes" xml:space="preserve">
          <source>If it doesn't return a valid &lt;code&gt;Crisis&lt;/code&gt;, return an empty &lt;code&gt;Observable&lt;/code&gt;, canceling the previous in-flight navigation to the &lt;code&gt;CrisisDetailComponent&lt;/code&gt; and navigate the user back to the &lt;code&gt;CrisisListComponent&lt;/code&gt;. The update resolver service looks like this:</source>
          <target state="translated">如果没有返回有效的 &lt;code&gt;Crisis&lt;/code&gt; ，则返回一个空的 &lt;code&gt;Observable&lt;/code&gt; ，取消先前的对 &lt;code&gt;CrisisDetailComponent&lt;/code&gt; 的运行中导航，并将用户导航回 &lt;code&gt;CrisisListComponent&lt;/code&gt; 。更新解析器服务如下所示：</target>
        </trans-unit>
        <trans-unit id="1196f5aa5aa0dd7720977e806de967ce00602e90" translate="yes" xml:space="preserve">
          <source>If it doesn't return a valid &lt;code&gt;Crisis&lt;/code&gt;, then return an empty &lt;code&gt;Observable&lt;/code&gt;, cancel the previous in-progress navigation to the &lt;code&gt;CrisisDetailComponent&lt;/code&gt;, and navigate the user back to the &lt;code&gt;CrisisListComponent&lt;/code&gt;. The updated resolver service looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94cc9640df1c6d475f62695048e0d376c2bec854" translate="yes" xml:space="preserve">
          <source>If it returns &lt;code&gt;false&lt;/code&gt;, the navigation process stops and the user stays put.</source>
          <target state="translated">如果返回 &lt;code&gt;false&lt;/code&gt; ，则导航过程停止，并且用户保持原状态。</target>
        </trans-unit>
        <trans-unit id="934263a7e8d3127facc33238735344f25d2875f1" translate="yes" xml:space="preserve">
          <source>If it returns &lt;code&gt;true&lt;/code&gt;, the navigation process continues.</source>
          <target state="translated">如果返回 &lt;code&gt;true&lt;/code&gt; ，则导航过程继续。</target>
        </trans-unit>
        <trans-unit id="c061c62da9990fa021cd80362e45d9d595bd3cad" translate="yes" xml:space="preserve">
          <source>If it returns a &lt;code&gt;&lt;a href=&quot;../api/router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, the current navigation cancels and a new navigation is initiated to the &lt;code&gt;&lt;a href=&quot;../api/router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned.</source>
          <target state="translated">如果它返回一个 &lt;code&gt;&lt;a href=&quot;../api/router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; ，当前导航取消和新的导航开始到 &lt;code&gt;&lt;a href=&quot;../api/router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="ccea769affa3066668cea7a19a1c6abd478fefbc" translate="yes" xml:space="preserve">
          <source>If it's the consumer's decision whether a provider is available application-wide or not, then register providers in modules (&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt;) instead of registering in components (&lt;code&gt;@Component.providers&lt;/code&gt;).</source>
          <target state="translated">如果消费者决定提供程序是否在整个应用程序范围内可用，则在模块（ &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; ）中注册提供程序，而不是在组件（ &lt;code&gt;@Component.providers&lt;/code&gt; ）中注册。</target>
        </trans-unit>
        <trans-unit id="3de1670255b8a935f81404283d68b60a57924133" translate="yes" xml:space="preserve">
          <source>If matching by URL isn't sufficient, it's possible to implement your own matching function. For example, you could look for an outgoing request that has an authorization header:</source>
          <target state="translated">如果通过URL匹配还不够,可以实现自己的匹配功能。例如,你可以寻找一个有授权头的传出请求。</target>
        </trans-unit>
        <trans-unit id="056b912650db2b88322b88ec9db23fdbd1b15e9c" translate="yes" xml:space="preserve">
          <source>If necessary, listen to the directive's &lt;code&gt;ngSubmit&lt;/code&gt; event to be notified when the user has triggered a form submission. The &lt;code&gt;ngSubmit&lt;/code&gt; event emits the original form submission event.</source>
          <target state="translated">如有必要，请在用户触发表单提交时侦听指令的 &lt;code&gt;ngSubmit&lt;/code&gt; 事件，以得到通知。该 &lt;code&gt;ngSubmit&lt;/code&gt; 事件发出原始表单提交事件。</target>
        </trans-unit>
        <trans-unit id="1d1b279b18b25539f878e1f938bbd94f7b8453bd" translate="yes" xml:space="preserve">
          <source>If no names are supplied, the default cookie name is &lt;code&gt;XSRF-TOKEN&lt;/code&gt; and the default header name is &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt;.</source>
          <target state="translated">如果未提供名称，则默认cookie名称为 &lt;code&gt;XSRF-TOKEN&lt;/code&gt; ，默认标头名称为 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d46fc13fcfb33c04d67d471d163a937c0bfbc809" translate="yes" xml:space="preserve">
          <source>If no parameters are specified, the function rounds off to the nearest value using this &lt;a href=&quot;https://en.wikibooks.org/wiki/Arithmetic/Rounding&quot;&gt;rounding method&lt;/a&gt;. The behavior differs from that of the JavaScript &lt;code&gt;Math.round()&lt;/code&gt; function. In the following case for example, the pipe rounds down where &lt;code&gt;Math.round()&lt;/code&gt; rounds up:</source>
          <target state="translated">如果未指定任何参数，则使用此&lt;a href=&quot;https://en.wikibooks.org/wiki/Arithmetic/Rounding&quot;&gt;舍入方法&lt;/a&gt;将函数舍入到最接近的值。该行为与JavaScript &lt;code&gt;Math.round()&lt;/code&gt; 函数的行为不同。例如，在以下情况下，管道将四舍五入到 &lt;code&gt;Math.round()&lt;/code&gt; 四舍五入的位置：</target>
        </trans-unit>
        <trans-unit id="4697ce1b28fc4ca20feccfb80e7cc0346431c557" translate="yes" xml:space="preserve">
          <source>If no path is given, this method checks for the error on the current control.</source>
          <target state="translated">如果没有给定路径,本方法将检查当前控件的错误。</target>
        </trans-unit>
        <trans-unit id="18e3524ed61782df3f426fecd17d77f48f0bf410" translate="yes" xml:space="preserve">
          <source>If no provider is found in the root injector, the DI framework throws an error.</source>
          <target state="translated">如果在根注入器中没有找到提供者,DI框架会抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="df3e28bc99646e24bb4e26e24b47cf0ecf85e067" translate="yes" xml:space="preserve">
          <source>If no such request has been made, or more than one such request has been made, fail with an error message including the given request description, if any.</source>
          <target state="translated">如果没有提出这样的请求,或者提出了一个以上这样的请求,则以包括给定请求描述(如果有)的错误消息失败。</target>
        </trans-unit>
        <trans-unit id="30d7bba1ab11ca5cea6604c658835a3fa2b9e7f3" translate="yes" xml:space="preserve">
          <source>If no such type can be inferred, this method will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">如果无法推断出此类，则此方法将返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f484cd2e0ac3fa9d4d2037af3783405320d1ccb" translate="yes" xml:space="preserve">
          <source>If none of the keys of the &lt;code&gt;mapping&lt;/code&gt; match the &lt;code&gt;value&lt;/code&gt;, then the content of the &lt;code&gt;other&lt;/code&gt; key is returned when present, otherwise an empty string is returned.</source>
          <target state="translated">如果 &lt;code&gt;mapping&lt;/code&gt; 任何键都不匹配 &lt;code&gt;value&lt;/code&gt; ，则 &lt;code&gt;other&lt;/code&gt; 键的内容在存在时返回，否则返回空字符串。</target>
        </trans-unit>
        <trans-unit id="5289261bc01c41048f4a824110cc30dce1f1853c" translate="yes" xml:space="preserve">
          <source>If not supplied, the value is taken from &lt;code&gt;&lt;a href=&quot;compileroptions&quot;&gt;CompilerOptions&lt;/a&gt;&lt;/code&gt;. The default compiler option is &lt;code&gt;&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果未提供，则从 &lt;code&gt;&lt;a href=&quot;compileroptions&quot;&gt;CompilerOptions&lt;/a&gt;&lt;/code&gt; 中获取值。默认的编译器选项是 &lt;code&gt;&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a785f84f703473ade0c0ff1fe9607c482a6c9fd7" translate="yes" xml:space="preserve">
          <source>If null or undefined, the view engine won't call it. This is used as a performance optimization for production mode.</source>
          <target state="translated">如果为空或未定义,视图引擎不会调用它。这是作为生产模式的性能优化。</target>
        </trans-unit>
        <trans-unit id="b27c861d54587f90dcd31f70995af48c38707d2e" translate="yes" xml:space="preserve">
          <source>If part of the Angular upgrade plan is to also take TypeScript into use, it makes sense to bring in the TypeScript compiler even before the upgrade itself begins. This means there's one less thing to learn and think about during the actual upgrade. It also means you can start using TypeScript features in your AngularJS code.</source>
          <target state="translated">如果Angular升级计划的一部分是也要使用TypeScript,那么在升级本身开始之前就引入TypeScript编译器是有意义的。这意味着在实际升级过程中少了一件需要学习和思考的事情。这也意味着你可以开始在你的AngularJS代码中使用TypeScript功能。</target>
        </trans-unit>
        <trans-unit id="e616c57ff16a9892f31e3e14cf215a3a317fefba" translate="yes" xml:space="preserve">
          <source>If provided, a new value for the given configuration key.</source>
          <target state="translated">如果提供,则是给定配置键的新值。</target>
        </trans-unit>
        <trans-unit id="abca8a3c87f57071bd98c098938909b796da3ecb" translate="yes" xml:space="preserve">
          <source>If provided, overrides the configured injector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bd8e69ead64639bd08877d0b56a7d222032521" translate="yes" xml:space="preserve">
          <source>If selecting the native &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; element in a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; where the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;s are created via &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;, use the &lt;code&gt;[selected]&lt;/code&gt; property of an &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; instead of binding to the &lt;code&gt;[value]&lt;/code&gt; property of the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element (previously, you could bind to either.) &lt;a href=&quot;ivy-compatibility-examples#select-value-binding&quot;&gt;details&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11ccb963889053d0a672c70d6f2544753338193" translate="yes" xml:space="preserve">
          <source>If set, the &lt;code&gt;templateUrl&lt;/code&gt; and &lt;code&gt;styleUrl&lt;/code&gt; are resolved relative to the component.</source>
          <target state="translated">如果设置，则相对于组件解析 &lt;code&gt;templateUrl&lt;/code&gt; 和 &lt;code&gt;styleUrl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5392a170eaea5c2707b51db35874eb84acc7dff0" translate="yes" xml:space="preserve">
          <source>If that doesn't work, an option of last resort is to turn off full mode entirely with &lt;code&gt;fullTemplateTypeCheck: false&lt;/code&gt;, as we've made a special effort to make Angular version 9 backwards compatible in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368133d05f6469fb1d0a68d64ec9d0ec08d47a2d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;ngmodule-faq#q-angular-compiler&quot;&gt;Angular compiler&lt;/a&gt; generated code for every declared component, it would defeat the purpose of the tree shaker.</source>
          <target state="translated">如果&lt;a href=&quot;ngmodule-faq#q-angular-compiler&quot;&gt;Angular编译器&lt;/a&gt;为每个声明的组件生成代码，则将无法达到摇树机的目的。</target>
        </trans-unit>
        <trans-unit id="8223942c2b882d46175361a2625981bac0326595" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; includes a &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;&lt;/code&gt; part, the &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;&lt;/code&gt; is only used if the &lt;code&gt;path&lt;/code&gt; of a link in the page is empty and has no &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;&lt;/code&gt;. This means that a &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; is only included when using &lt;code&gt;&lt;a href=&quot;../api/common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04069fd9407468f4ab42b45f803e9f28a2fc222" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--prod&lt;/code&gt; command line flag is also used, it is applied first, and its settings can be overridden by any configurations specified via the &lt;code&gt;--configuration&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f23ab622908a00b35e36a91d40431ece26a111" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; were allowed to continue, the tests would run and fail mysteriously before the compiler could finished.</source>
          <target state="translated">如果允许 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 继续运行，则测试将在编译器完成之前神秘地运行并失败。</target>
        </trans-unit>
        <trans-unit id="560f12bb9fc58e2ddbb891d578b749239f1e6db9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; didn&amp;rsquo;t have &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; then each feature module would instantiate a new &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; instance, which would break the application as there can only be one &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;. By using the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; method, the root application module imports &lt;code&gt;RouterModule.forRoot(...)&lt;/code&gt; and gets a &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;, and all feature modules import &lt;code&gt;RouterModule.forChild(...)&lt;/code&gt; which does not instantiate another &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 没有 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; ,则每个功能模块将实例化一个新的 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 实例，这将破坏应用程序，因为只能有一个 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 。通过使用 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; 方法，根应用程序模块导入 &lt;code&gt;RouterModule.forRoot(...)&lt;/code&gt; 并获取一个 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ，而所有功能模块均导入不实例化另一个 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;RouterModule.forChild(...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="164bda4ad7759a6e7de3a29bb761c4da6091e441" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; didn&amp;rsquo;t have &lt;code&gt;forRoot()&lt;/code&gt; then each feature module would instantiate a new &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; instance, which would break the application as there can only be one &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;. By using the &lt;code&gt;forRoot()&lt;/code&gt; method, the root application module imports &lt;code&gt;RouterModule.forRoot(...)&lt;/code&gt; and gets a &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;, and all feature modules import &lt;code&gt;RouterModule.forChild(...)&lt;/code&gt; which does not instantiate another &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479d4c87591e468174bfa0a3f8dc2135cb777c4e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;app&lt;/code&gt; folder is the application root, as it is for the sample application, set the &lt;code&gt;href&lt;/code&gt; value &lt;em&gt;exactly&lt;/em&gt; as shown here.</source>
          <target state="translated">如果 &lt;code&gt;app&lt;/code&gt; 文件夹是应用程序根目录（如示例应用程序一样），则&lt;em&gt;完全&lt;/em&gt;按照此处所示设置 &lt;code&gt;href&lt;/code&gt; 值。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="302f79ea1b195ceb97811e3dba2bfd0daa9bce81" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;example-bank.com&lt;/code&gt; server lacks XSRF protection, it can't tell the difference between a legitimate request from the application and the forged request from &lt;code&gt;evil.com&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;example-bank.com&lt;/code&gt; 服务器缺乏XSRF保护，则无法区分应用程序发出的合法请求与 &lt;code&gt;evil.com&lt;/code&gt; 发出的伪造请求之间的区别。</target>
        </trans-unit>
        <trans-unit id="bf6319afad7af346a06791442f233428685da15e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;fullTemplateTypeCheck&lt;/code&gt; flag is set to &lt;code&gt;true&lt;/code&gt;, Angular is more aggressive in its type-checking within templates. In particular:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b7a597e02911683f0b073db5c9c1edeec80b49" translate="yes" xml:space="preserve">
          <source>If the Angular service worker does not have a hash to validate a given resource, it still caches its contents but it honors the HTTP caching headers by using a policy of &quot;stale while revalidate.&quot; That is, when HTTP caching headers for a cached resource indicate that the resource has expired, the Angular service worker continues to serve the content and it attempts to refresh the resource in the background. This way, broken unhashed resources do not remain in the cache beyond their configured lifetimes.</source>
          <target state="translated">如果Angular服务工作者没有哈希来验证给定的资源,它仍然会缓存其内容,但它通过使用 &quot;重新验证时陈旧 &quot;的策略来尊重HTTP缓存头。也就是说,当一个缓存资源的HTTP缓存头表明该资源已经过期时,Angular服务工作者会继续为内容提供服务,并且它在后台尝试刷新资源。这样一来,破损的未被刷新的资源就不会在配置好的寿命期后还留在缓存中。</target>
        </trans-unit>
        <trans-unit id="c75c80c65f60ead7cd10749d4edad5c9af502525" translate="yes" xml:space="preserve">
          <source>If the JSON file is too big, you could copy the nodes-of-interest into markdown backticks.</source>
          <target state="translated">如果JSON文件太大,你可以把感兴趣的节点复制到markdown backticks中。</target>
        </trans-unit>
        <trans-unit id="be0a39c89a60cb3ed7e054bd374ca82555b74b91" translate="yes" xml:space="preserve">
          <source>If the StackBlitz preview pane isn't showing what you expect, save and then click the refresh button.</source>
          <target state="translated">如果StackBlitz预览窗格没有显示您所期望的内容,请保存,然后点击刷新按钮。</target>
        </trans-unit>
        <trans-unit id="a2bff59b5e87ba98607bcbcc161c9e072991847d" translate="yes" xml:space="preserve">
          <source>If the above &lt;code&gt;ng build&lt;/code&gt; command throws an error about missing packages, append the missing dependencies in your local project's &lt;code&gt;package.json&lt;/code&gt; file to match the one in the downloaded StackBlitz project.</source>
          <target state="translated">如果上述 &lt;code&gt;ng build&lt;/code&gt; 命令引发有关缺少软件包的错误，请将缺失的依赖项附加到本地项目的 &lt;code&gt;package.json&lt;/code&gt; 文件中，以匹配下载的StackBlitz项目中的依赖项。</target>
        </trans-unit>
        <trans-unit id="8e4c8672ca49b8f0e25eeaa8741e82bde770f9e1" translate="yes" xml:space="preserve">
          <source>If the app uses the Angular router, you must configure the server to return the application's host page (&lt;code&gt;index.html&lt;/code&gt;) when asked for a file that it does not have.</source>
          <target state="translated">如果应用程序使用Angular路由器，则必须将服务器配置为在要求提供其不包含的文件时返回应用程序的宿主页（ &lt;code&gt;index.html&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d1da36d7cd60fadceb7bc9ecf82d1339e902cc81" translate="yes" xml:space="preserve">
          <source>If the client of a library intends to use a symbol in an annotation, the template compiler does not normally report this until the client uses the symbol. This option allows detection of these errors during the build phase of the library and is used, for example, in producing Angular libraries themselves.</source>
          <target state="translated">如果库的客户端打算在注释中使用一个符号,模板编译器通常不会报告,直到客户端使用该符号。这个选项可以在库的构建阶段检测到这些错误,例如,在制作Angular库本身时就会用到。</target>
        </trans-unit>
        <trans-unit id="1d578310a8295a0eae72f65936eb8dd58a18fbd2" translate="yes" xml:space="preserve">
          <source>If the component behaves as expected, clicking the hero's element should tell the component's &lt;code&gt;selected&lt;/code&gt; property to emit the &lt;code&gt;hero&lt;/code&gt; object.</source>
          <target state="translated">如果组件的行为符合预期，则单击hero的元素应告知组件的 &lt;code&gt;selected&lt;/code&gt; 属性以发出 &lt;code&gt;hero&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="8788c70542a02c168cea8e8d4e5e044281bdef0f" translate="yes" xml:space="preserve">
          <source>If the condition is falsy and the view hasn't been created previously, tell the &lt;em&gt;view container&lt;/em&gt; to create the &lt;em&gt;embedded view&lt;/em&gt; from the template.</source>
          <target state="translated">如果条件是虚假的，并且以前没有创建过&lt;em&gt;视图&lt;/em&gt;，请告诉&lt;em&gt;视图容器&lt;/em&gt;从模板创建&lt;em&gt;嵌入式视图&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0a064b2a59ee6bd35d516ff89dac85e3c0a88034" translate="yes" xml:space="preserve">
          <source>If the condition is truthy and the view is currently displayed, clear the container which also destroys the view.</source>
          <target state="translated">如果条件是truthhy,且当前显示的是视图,则清除容器,这也会破坏视图。</target>
        </trans-unit>
        <trans-unit id="048b744ffc4be73f307d5360e389b7f46a5ac039" translate="yes" xml:space="preserve">
          <source>If the consumer has Angular's strictest type checking for templates enabled, this creates a problem: the empty string &lt;code&gt;''&lt;/code&gt; is not actually assignable to the &lt;code&gt;disabled&lt;/code&gt; field, which will create a type error when the attribute form is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3cec2a13320fb2f220fb170d31aec1e1a03ce0" translate="yes" xml:space="preserve">
          <source>If the control has any children, also marks all children as &lt;code&gt;untouched&lt;/code&gt; and recalculates the &lt;code&gt;touched&lt;/code&gt; status of all parent controls.</source>
          <target state="translated">如果控件有任何子控件，则还将所有子控件标记为 &lt;code&gt;untouched&lt;/code&gt; 并重新计算所有父控件的 &lt;code&gt;touched&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="d1a83898ee5cd6fc850d88e2ec839126c806da54" translate="yes" xml:space="preserve">
          <source>If the control has any children, marks all children as &lt;code&gt;pristine&lt;/code&gt;, and recalculates the &lt;code&gt;pristine&lt;/code&gt; status of all parent controls.</source>
          <target state="translated">如果该控件有任何子控件，请将所有子控件标记为 &lt;code&gt;pristine&lt;/code&gt; ，然后重新计算所有父控件的 &lt;code&gt;pristine&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="8453b196ce8fbdb1fe41ff331de4cbcbc668e2ae" translate="yes" xml:space="preserve">
          <source>If the control has children, all children are also disabled.</source>
          <target state="translated">如果控制有孩子,所有的孩子也都是残疾。</target>
        </trans-unit>
        <trans-unit id="6da51976abd22faef9516a71a664e1ede6e2d1c6" translate="yes" xml:space="preserve">
          <source>If the control is not present, false is returned.</source>
          <target state="translated">如果该控件不存在,则返回false。</target>
        </trans-unit>
        <trans-unit id="20413c6d38ae984baf834f94a3ed5662a7f00e9c" translate="yes" xml:space="preserve">
          <source>If the current tab needs to be updated to the latest app version immediately, it can ask to do so with the &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#activateUpdate&quot;&gt;activateUpdate()&lt;/a&gt;&lt;/code&gt; method:</source>
          <target state="translated">如果当前选项卡需要立即更新到最新的应用程序版本，则可以使用 &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#activateUpdate&quot;&gt;activateUpdate()&lt;/a&gt;&lt;/code&gt; 方法要求这样做：</target>
        </trans-unit>
        <trans-unit id="e4f4d6a93d3808ee9961bf48da7a9b89bc08b791" translate="yes" xml:space="preserve">
          <source>If the current tab needs to be updated to the latest app version immediately, it can ask to do so with the &lt;code&gt;activateUpdate()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9104853be208753a61ab17ecc634fd45d2546fb7" translate="yes" xml:space="preserve">
          <source>If the current working directory is not the right place for your project, you can change to a more appropriate directory by running &lt;code&gt;cd &amp;lt;path-to-other-directory&amp;gt;&lt;/code&gt; first.</source>
          <target state="translated">如果当前工作目录不适用于您的项目，则可以通过先运行 &lt;code&gt;cd &amp;lt;path-to-other-directory&amp;gt;&lt;/code&gt; 更改为更合适的目录。</target>
        </trans-unit>
        <trans-unit id="d973a83d1ca3ed65eb47b556837d050dedf92561" translate="yes" xml:space="preserve">
          <source>If the errors are gone, switch back to Ivy by removing the changes to the &lt;code&gt;tsconfig.json&lt;/code&gt; and review the list of expected changes below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bc482af4aa021a010a1117f830ab47823cf166" translate="yes" xml:space="preserve">
          <source>If the event belongs to a directive or component, &lt;code&gt;$event&lt;/code&gt; has the shape that the directive or component produces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f468153c2449365e7f2867ef5d5f456b77cbd7" translate="yes" xml:space="preserve">
          <source>If the event belongs to a directive&amp;mdash;recall that components are directives&amp;mdash;&lt;code&gt;$event&lt;/code&gt; has whatever shape the directive produces.</source>
          <target state="translated">如果事件属于指令（请记住组件是指令），则 &lt;code&gt;$event&lt;/code&gt; 具有指令产生的形状。</target>
        </trans-unit>
        <trans-unit id="73152167c48aecc5313121b22afebd7bc3185f3b" translate="yes" xml:space="preserve">
          <source>If the event lacks a listener or there's some other problem, consider calling &lt;code&gt;nativeElement.dispatchEvent(eventObject)&lt;/code&gt;.</source>
          <target state="translated">如果事件缺少侦听器或其他问题，请考虑调用 &lt;code&gt;nativeElement.dispatchEvent(eventObject)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13a1756e7082ebba2ca9b175bf1d707be6dc83b3" translate="yes" xml:space="preserve">
          <source>If the field is omitted, it defaults to:</source>
          <target state="translated">如果省略该字段,则默认为。</target>
        </trans-unit>
        <trans-unit id="4d62e6f61d2836ab8838dd3181e91ea4e13db082" translate="yes" xml:space="preserve">
          <source>If the final step in a transition is a call to &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; that uses a timing value with no style data, that step is automatically considered the final animation arc, for the element to reach the final state. Angular automatically adds or removes CSS styles to ensure that the element is in the correct final state.</source>
          <target state="translated">如果过渡的最后一步是使用没有样式数据的计时值调用 &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; ，则该步骤会自动视为最终动画弧，以使元素达到最终状态。Angular会自动添加或删除CSS样式，以确保元素处于正确的最终状态。</target>
        </trans-unit>
        <trans-unit id="6b3ef72f24c3673b2a628ad0ad40c170035fde2f" translate="yes" xml:space="preserve">
          <source>If the first segment begins with &lt;code&gt;../&lt;/code&gt;, the router goes up one level in the route tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae4a4530bb21f9338bdba40c855940d55fb7608" translate="yes" xml:space="preserve">
          <source>If the first segment begins with &lt;code&gt;./&lt;/code&gt;, or doesn't begin with a slash, the router looks in the children of the current activated route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a660dbc7897b28c034041b6f65be22015a8b7e" translate="yes" xml:space="preserve">
          <source>If the first segment begins with &lt;code&gt;./&lt;/code&gt;, or doesn't begin with a slash, the router will instead look in the children of the current activated route.</source>
          <target state="translated">如果第一段以 &lt;code&gt;./&lt;/code&gt; 开头，或者不是以斜杠开头，则路由器将查找当前已激活路由的子级。</target>
        </trans-unit>
        <trans-unit id="282a734855bf60155a2ce97a0efd7f8533f10efb" translate="yes" xml:space="preserve">
          <source>If the first segment begins with &lt;code&gt;/&lt;/code&gt;, the router looks up the route from the root of the app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea0080cb58c9233caaaea94f5f228089d34ea6f" translate="yes" xml:space="preserve">
          <source>If the first segment begins with &lt;code&gt;/&lt;/code&gt;, the router will look up the route from the root of the app.</source>
          <target state="translated">如果第一段以 &lt;code&gt;/&lt;/code&gt; 开头，则路由器将从应用程序的根目录查找路由。</target>
        </trans-unit>
        <trans-unit id="0078130fe6400ab8b49e0bc6c85e056609de7e16" translate="yes" xml:space="preserve">
          <source>If the fixture is currently &lt;em&gt;stable&lt;/em&gt;, returns &lt;code&gt;true&lt;/code&gt;. If there are async tasks that have not completed, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果灯具当前&lt;em&gt;稳定&lt;/em&gt;，则返回 &lt;code&gt;true&lt;/code&gt; 。如果有异步任务尚未完成，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b70a09df109c3ad19c3522771be006c2c3948dd" translate="yes" xml:space="preserve">
          <source>If the generated &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator does not include the &lt;code&gt;{ &lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root' }&lt;/code&gt; statement, then insert it as shown above.</source>
          <target state="translated">如果生成的 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰器不包含 &lt;code&gt;{ &lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root' }&lt;/code&gt; 语句，则如上所述插入它。</target>
        </trans-unit>
        <trans-unit id="15068daa68072149e6fa5ce056eb1f52cac90044" translate="yes" xml:space="preserve">
          <source>If the global library you need to use does not have global typings, you can declare them manually as &lt;code&gt;any&lt;/code&gt; in &lt;code&gt;src/typings.d.ts&lt;/code&gt;. For example:</source>
          <target state="translated">如果您需要使用的全局库没有全局类型，则可以在 &lt;code&gt;src/typings.d.ts&lt;/code&gt; 中将它们手动声明为 &lt;code&gt;any&lt;/code&gt; 类型。例如：</target>
        </trans-unit>
        <trans-unit id="6cb1ed9802e9478d929162c54da4c8d6fd30657e" translate="yes" xml:space="preserve">
          <source>If the injector doesn't have a provider for a requested token, it delegates the request to its parent injector, where the process repeats until there are no more injectors. If the search fails, the injector throws an error&amp;mdash;unless the request was &lt;a href=&quot;dependency-injection-in-action#optional&quot;&gt;optional&lt;/a&gt;.</source>
          <target state="translated">如果注入器没有提供所请求令牌的提供者，则会将请求委派给其父注入器，在该父注入器中重复该过程，直到没有更多注入器为止。如果搜索失败，则注入器将引发错误-除非请求是&lt;a href=&quot;dependency-injection-in-action#optional&quot;&gt;可选的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a0b3bfb715b52caecc873a2889e0c4f7e9a1de0" translate="yes" xml:space="preserve">
          <source>If the injector has already cached an instance of the service associated with the token, it provides that instance. If it doesn't, it needs to make one using the provider associated with the token.</source>
          <target state="translated">如果注入者已经缓存了与令牌相关联的服务实例,它就会提供该实例。如果没有,则需要使用与令牌相关联的提供者创建一个实例。</target>
        </trans-unit>
        <trans-unit id="3b4f4ffe72bd420b5f6a4c66dbf5e65cc68e96f5" translate="yes" xml:space="preserve">
          <source>If the link is static, you can use the directive as follows: &lt;code&gt;&amp;lt;&lt;a href=&quot;routerlinkwithhref&quot;&gt;a&lt;/a&gt; &lt;a href=&quot;routerlink&quot;&gt;routerLink&lt;/a&gt;=&quot;/user/bob&quot;&amp;gt;link to user component&amp;lt;/&lt;a href=&quot;routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">如果链路是静态的，则可以使用指令，如下所示： &lt;code&gt;&amp;lt;&lt;a href=&quot;routerlinkwithhref&quot;&gt;a&lt;/a&gt; &lt;a href=&quot;routerlink&quot;&gt;routerLink&lt;/a&gt;=&quot;/user/bob&quot;&amp;gt;link to user component&amp;lt;/&lt;a href=&quot;routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c85a5f245c5fa8e89c1c6d997ca02517847957ee" translate="yes" xml:space="preserve">
          <source>If the name fails to match a property of a known directive or element, Angular reports an &amp;ldquo;unknown directive&amp;rdquo; error.</source>
          <target state="translated">如果名称不匹配已知指令或元素的属性，Angular将报告&amp;ldquo;未知指令&amp;rdquo;错误。</target>
        </trans-unit>
        <trans-unit id="4f09d2765c657029543ee7a53587171de5cd4ed6" translate="yes" xml:space="preserve">
          <source>If the name fails to match an element event or an output property of a known directive, Angular reports an &amp;ldquo;unknown directive&amp;rdquo; error.</source>
          <target state="translated">如果名称与元素事件或已知指令的输出属性不匹配，Angular将报告&amp;ldquo;未知指令&amp;rdquo;错误。</target>
        </trans-unit>
        <trans-unit id="f2b0f2311e32c89d65b510e7b22f6094eeb2fc32" translate="yes" xml:space="preserve">
          <source>If the network request does not complete after 0ms (i.e. immediately), fall back to the cache (ignoring cache age).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ceb0f467be96dbdbfe940dd848a6bc931fbff8" translate="yes" xml:space="preserve">
          <source>If the pipe accepts multiple parameters, separate the values with colons. For example, &lt;code&gt;{{ amount | &lt;a href=&quot;../api/common/currencypipe&quot;&gt;currency&lt;/a&gt;:'EUR':'Euros '}}&lt;/code&gt; adds the second parameter, the string literal &lt;code&gt;'Euros '&lt;/code&gt;, to the output string. You can use any valid template expression as a parameter, such as a string literal or a component property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3d0f7fd76ea32112a2485de9c0071e3eac7cd6" translate="yes" xml:space="preserve">
          <source>If the pipe has internal state (that is, the result depends on state other than its arguments), set &lt;code&gt;pure&lt;/code&gt; to false. In this case, the pipe is invoked on each change-detection cycle, even if the arguments have not changed.</source>
          <target state="translated">如果管道具有内部状态（也就是说，结果取决于其参数以外的其他状态），请将 &lt;code&gt;pure&lt;/code&gt; 设置为false。在这种情况下，即使参数未更改，也会在每个更改检测周期调用管道。</target>
        </trans-unit>
        <trans-unit id="4763dcf43d2d8abf4591a273eb238b96e963dfb9" translate="yes" xml:space="preserve">
          <source>If the policy is set to &lt;code&gt;&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;&lt;/code&gt; and the component has no &lt;code&gt;styles&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;&lt;/code&gt; specified, the policy is automatically switched to &lt;code&gt;&lt;a href=&quot;viewencapsulation#None&quot;&gt;ViewEncapsulation.None&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果该策略设置为 &lt;code&gt;&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;&lt;/code&gt; 并且该组件未指定 &lt;code&gt;styles&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;&lt;/code&gt; ，则该策略将自动切换为 &lt;code&gt;&lt;a href=&quot;viewencapsulation#None&quot;&gt;ViewEncapsulation.None&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="528533bd9f3f7e28532ec0e9f917dad69f8c023f" translate="yes" xml:space="preserve">
          <source>If the policy is set to &lt;code&gt;&lt;a href=&quot;viewencapsulation#Emulated&quot;&gt;ViewEncapsulation.Emulated&lt;/a&gt;&lt;/code&gt; and the component has no &lt;code&gt;styles&lt;/code&gt; or &lt;code&gt;styleUrls&lt;/code&gt; specified, the policy is automatically switched to &lt;code&gt;&lt;a href=&quot;viewencapsulation#None&quot;&gt;ViewEncapsulation.None&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d810ad667c3b20ef3b51707d2be9b432b64b1cf" translate="yes" xml:space="preserve">
          <source>If the polyfill you want is not already in &lt;code&gt;polyfills.ts&lt;/code&gt; file, add the &lt;code&gt;import&lt;/code&gt; statement by hand.</source>
          <target state="translated">如果所需的polyfill尚未在 &lt;code&gt;polyfills.ts&lt;/code&gt; 文件中，请手动添加 &lt;code&gt;import&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="dbeae5467dc3bcad5134cf5b5566370850d4809d" translate="yes" xml:space="preserve">
          <source>If the request fails on the server, &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; returns an &lt;em&gt;error&lt;/em&gt; object instead of a successful response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59935f40339f370a775c93f8ebfe64fdb8501b4a" translate="yes" xml:space="preserve">
          <source>If the request is not cachable, the interceptor simply forwards the request to the next handler in the chain.</source>
          <target state="translated">如果请求不可缓存,拦截器只是将请求转发给链中的下一个处理程序。</target>
        </trans-unit>
        <trans-unit id="5e9cbfa57bb0afe989236f55b4bfa5b227f9e699" translate="yes" xml:space="preserve">
          <source>If the request is not cacheable, the interceptor simply forwards the request to the next handler in the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e69ae093510c60c5092e955910531474a7b0eb" translate="yes" xml:space="preserve">
          <source>If the resource does not exist in the cache, wait for the network request anyway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac51969f4d26381b937d7506df3c5ca028390e8" translate="yes" xml:space="preserve">
          <source>If the router determines that the current application state requires particular functionality, and the module that defines it hasn't been loaded, the router can &lt;em&gt;lazy-load&lt;/em&gt; the module on demand.</source>
          <target state="translated">如果路由器确定当前应用程序状态需要特定功能，并且尚未加载定义它的模块，则路由器可以按需&lt;em&gt;延迟加载&lt;/em&gt;模块。</target>
        </trans-unit>
        <trans-unit id="078a62a59d26aee3fda2d3094d8e784f2342103f" translate="yes" xml:space="preserve">
          <source>If the same text elements have different &lt;em&gt;descriptions&lt;/em&gt; but the same &lt;em&gt;meaning&lt;/em&gt;, they are extracted only once, with only one ID. That one translation entry is merged back into the app wherever the same text elements appear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c33d001b1da373abf39836eea39311b1acb30e" translate="yes" xml:space="preserve">
          <source>If the target event name, &lt;code&gt;myClick&lt;/code&gt; fails to match an element event or an output property of &lt;code&gt;ClickDirective&lt;/code&gt;, Angular reports an &quot;unknown directive&quot; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8394b2e767bb12ed5ce19f8e2789f404b7484f75" translate="yes" xml:space="preserve">
          <source>If the token is not found, the injector looks for the closest parent &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; to delegate the request to.</source>
          <target state="translated">如果未找到令牌，则注入器将寻找最接近的父 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; 来将请求委托给它。</target>
        </trans-unit>
        <trans-unit id="ecf78ef653c4d34586962407b03b480fcd055de0" translate="yes" xml:space="preserve">
          <source>If the user clicks &quot;Magneta&quot;, that hero should render with a distinctive but subtle background color like this:</source>
          <target state="translated">如果用户点击 &quot;Magneta&quot;,该英雄应该呈现出独特而微妙的背景色,就像这样。</target>
        </trans-unit>
        <trans-unit id="c189f0f17a7b1f805b9f00a96ea0807e51814fa1" translate="yes" xml:space="preserve">
          <source>If the user is accessing your app via a browser that does not support service workers, the service worker is not registered and related behavior such as offline cache management and push notifications does not happen. More specifically:</source>
          <target state="translated">如果用户通过不支持服务工的浏览器访问你的应用,那么服务工就没有注册,离线缓存管理和推送通知等相关行为就不会发生。更具体地说。</target>
        </trans-unit>
        <trans-unit id="c7bb75e93c7ef1a5eb66e798e8f358b5eede9fc4" translate="yes" xml:space="preserve">
          <source>If the user is not logged in, you store the attempted URL the user came from using the &lt;code&gt;&lt;a href=&quot;../api/router/routerstatesnapshot#url&quot;&gt;RouterStateSnapshot.url&lt;/a&gt;&lt;/code&gt; and tell the router to navigate to a login page&amp;mdash;a page you haven't created yet. This secondary navigation automatically cancels the current navigation; &lt;code&gt;checkLogin()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; just to be clear about that.</source>
          <target state="translated">如果用户未登录，则使用 &lt;code&gt;&lt;a href=&quot;../api/router/routerstatesnapshot#url&quot;&gt;RouterStateSnapshot.url&lt;/a&gt;&lt;/code&gt; 存储用户尝试访问的URL，并告诉路由器导航到登录页面（尚未创建的页面）。此辅助导航会自动取消当前导航；为清楚 &lt;code&gt;checkLogin()&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e9fef2eafd5b1ccdde39a85d15a3e1d179c35d6" translate="yes" xml:space="preserve">
          <source>If the user is not logged in, you store the attempted URL the user came from using the &lt;code&gt;&lt;a href=&quot;../api/router/routerstatesnapshot#url&quot;&gt;RouterStateSnapshot.url&lt;/a&gt;&lt;/code&gt; and tell the router to redirect to a login page&amp;mdash;a page you haven't created yet. Returning a &lt;code&gt;&lt;a href=&quot;../api/router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; tells the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; to cancel the current navigation and schedule a new one to redirect the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7fbb24093105b8d981322fd4ad3921dd415377" translate="yes" xml:space="preserve">
          <source>If the values do not match, the hero's identity remains secret, and we can safely return null. Otherwise, the hero's identity is revealed and we must mark the form as invalid by returning an error object.</source>
          <target state="translated">如果值不匹配,英雄的身份仍然是秘密,我们可以安全地返回null。否则,英雄的身份就会被暴露,我们必须通过返回一个错误对象将表单标记为无效。</target>
        </trans-unit>
        <trans-unit id="192705fa856a62452b2da969a8912e6b8a173d58" translate="yes" xml:space="preserve">
          <source>If the values do not match, the hero's identity remains secret, both are valid, and the validator returns null. If they do match, the hero's identity is revealed and the validator must mark the form as invalid by returning an error object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda3fcdf84185ee6e87bd031022a93fa36ad65dc" translate="yes" xml:space="preserve">
          <source>If the variable specifies a name on the right-hand side, such as &lt;code&gt;#var=&quot;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt;, the variable refers to the directive or component on the element with a matching &lt;code&gt;exportAs&lt;/code&gt; name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ad008e2ef13ed8ed5f5c2ec956a424d99e7a41" translate="yes" xml:space="preserve">
          <source>If there are any pending timers at the end of the function, an exception will be thrown.</source>
          <target state="translated">如果函数结束时有任何待定的定时器,将抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="f9a670037bd4af4276da780403250f1a42128b74" translate="yes" xml:space="preserve">
          <source>If there are inconsistencies (for example, if peer dependencies cannot be matched by a simple &lt;a href=&quot;https://semver.io/&quot;&gt;semver&lt;/a&gt; range), the command generates an error and does not change anything in the workspace.</source>
          <target state="translated">如果存在不一致（例如，如果对等依赖项无法通过简单的&lt;a href=&quot;https://semver.io/&quot;&gt;semver&lt;/a&gt;范围进行匹配），则该命令将生成错误，并且不会更改工作空间中的任何内容。</target>
        </trans-unit>
        <trans-unit id="68b1ed93992996f8ce266b19d9921f1a6b7679ba" translate="yes" xml:space="preserve">
          <source>If there are multiple bindings to the same class name, Angular uses &lt;a href=&quot;style-precedence&quot;&gt;styling precedence&lt;/a&gt; to determine which binding to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b17fa9f251dc2328f40733768f4df7c53d0e774" translate="yes" xml:space="preserve">
          <source>If there are multiple bindings to the same style attribute, Angular uses &lt;a href=&quot;style-precedence&quot;&gt;styling precedence&lt;/a&gt; to determine which binding to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bce86d8e3129408ac34398b75eca72346010c23" translate="yes" xml:space="preserve">
          <source>If there are multiple matching elements, staggers in each element starting at the top of the page, with a 50-millisecond delay between each element.</source>
          <target state="translated">如果有多个匹配的元素,则从页面顶部开始在每个元素中错开,每个元素之间有50毫秒的延迟。</target>
        </trans-unit>
        <trans-unit id="5d0e50c9ab16f52d7179be4c30d0ae22030f6696" translate="yes" xml:space="preserve">
          <source>If there are no &lt;code&gt;&lt;a href=&quot;animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; values specified in the style entries, the offsets are calculated automatically.</source>
          <target state="translated">如果在样式条目中未指定 &lt;code&gt;&lt;a href=&quot;animationstylemetadata#offset&quot;&gt;offset&lt;/a&gt;&lt;/code&gt; 值，则将自动计算偏移。</target>
        </trans-unit>
        <trans-unit id="fd9120ef266d5131d0f02db2be350a2e53f38db9" translate="yes" xml:space="preserve">
          <source>If there are no &lt;code&gt;offset&lt;/code&gt; values specified in the style entries, the offsets are calculated automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5c24cb964d2798172bebc6b28f39e9832c4073" translate="yes" xml:space="preserve">
          <source>If there are no matches, a view with the &lt;code&gt;&lt;a href=&quot;common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; directive is rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfacb45406d5e8b6f34dd5b25ce44a85e6145b1" translate="yes" xml:space="preserve">
          <source>If there are no matches, a view with the &lt;code&gt;&lt;a href=&quot;ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; directive is rendered.</source>
          <target state="translated">如果没有匹配项，则呈现带有 &lt;code&gt;&lt;a href=&quot;ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; 指令的视图。</target>
        </trans-unit>
        <trans-unit id="469567e644a4eb10f45ac06d4145cbb3283b05ab" translate="yes" xml:space="preserve">
          <source>If there is a cached value, the code &lt;em&gt;pipes&lt;/em&gt; the cached response onto &lt;code&gt;results$&lt;/code&gt;, producing a recomposed observable that emits twice, the cached response first (and immediately), followed later by the response from the server. Subscribers see a sequence of &lt;em&gt;two&lt;/em&gt; responses.</source>
          <target state="translated">如果存在缓存的值，则代码&lt;em&gt;会将&lt;/em&gt;缓存的响应通过&lt;em&gt;管道&lt;/em&gt;传递到 &lt;code&gt;results$&lt;/code&gt; ，生成发出两次的重组可观察对象，首先（并立即）缓存的响应，然后是服务器的响应。订户看到&lt;em&gt;两个&lt;/em&gt;响应的序列。</target>
        </trans-unit>
        <trans-unit id="7f51b2e133050bbccba4bfd98827887fed42575f" translate="yes" xml:space="preserve">
          <source>If there is a cached value, the code &lt;em&gt;pipes&lt;/em&gt; the cached response onto &lt;code&gt;results$&lt;/code&gt;, producing a recomposed observable that emits twice, the cached response first (and immediately), followed later by the response from the server. Subscribers see a sequence of two responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861f9ce42be463b31e5de676232a75f5183b6ba2" translate="yes" xml:space="preserve">
          <source>If there is a search term, the code constructs an options object with an HTML URL-encoded search parameter. If the term is &quot;cat&quot;, for example, the GET request URL would be &lt;code&gt;api/heroes?name=cat&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c30904c74feea9735c68b368b80ff51127fb2d" translate="yes" xml:space="preserve">
          <source>If there is a search term, the code constructs an options object with an HTML URL-encoded search parameter. If the term were &quot;foo&quot;, the GET request URL would be &lt;code&gt;api/heroes?name=foo&lt;/code&gt;.</source>
          <target state="translated">如果存在搜索词，则代码将使用HTML URL编码的搜索参数构造一个options对象。如果术语为&amp;ldquo; foo&amp;rdquo;，则GET请求URL将为 &lt;code&gt;api/heroes?name=foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8a482ba206dfd36e3f36762fb13f8b6559b18b8" translate="yes" xml:space="preserve">
          <source>If there is a section of text that you would like to translate, you can wrap it in a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag. However, if you don't want to create a new DOM element merely to facilitate translation, you can wrap the text in an &lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt; element. The &lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt; is transformed into an html comment:</source>
          <target state="translated">如果您想翻译一段文字，可以将其包裹在 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 标记中。但是，如果您不想仅仅为了便于翻译而创建新的DOM元素，则可以将文本包装在 &lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt; 元素中。所述 &lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt; 被转换成一个HTML注释：</target>
        </trans-unit>
        <trans-unit id="95d0282529a24fb4dad5c5e40dfcf058c88875dc" translate="yes" xml:space="preserve">
          <source>If there is both an unbound class attribute and a &lt;code&gt;[class]&lt;/code&gt; binding, the classes in the unbound attribute will also be added (previously, the class binding would overwrite classes in the unbound attribute).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789a03391ec493accfaf2648ace4780e8da1f3e8" translate="yes" xml:space="preserve">
          <source>If there is no structural directive and you merely wrap some elements in a &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt;, those elements disappear. That's the fate of the middle &quot;Hip!&quot; in the phrase &quot;Hip! Hip! Hooray!&quot;.</source>
          <target state="translated">如果没有结构指令，而仅将某些元素包装在 &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; 中，则这些元素会消失。那就是中间&amp;ldquo;嘻哈&amp;rdquo;的命运。在短语&amp;ldquo;嘻哈！嘻哈！万岁！&amp;rdquo;中。</target>
        </trans-unit>
        <trans-unit id="c0a56b8fffce47376883198a8d9baa521d322597" translate="yes" xml:space="preserve">
          <source>If there's no cached value, the interceptor returns &lt;code&gt;results$&lt;/code&gt;.</source>
          <target state="translated">如果没有缓存的值，则拦截器返回 &lt;code&gt;results$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c9573a993697b7205978825080a3f70b90ace3b" translate="yes" xml:space="preserve">
          <source>If these performance and minification considerations don't apply to you, you can always create your own such pipes (similar to the &lt;a href=&quot;pipes#impure-flying-heroes&quot;&gt;FlyingHeroesPipe&lt;/a&gt;) or find them in the community.</source>
          <target state="translated">如果这些性能和缩小方面的考虑不适用于您，则您始终可以创建自己的此类管道（类似于&lt;a href=&quot;pipes#impure-flying-heroes&quot;&gt;FlyingHeroesPipe&lt;/a&gt;）或在社区中找到它们。</target>
        </trans-unit>
        <trans-unit id="128c120be1c661795cc994725f81beabd4448f98" translate="yes" xml:space="preserve">
          <source>If this NgModule were the root &lt;code&gt;AppModule&lt;/code&gt;, the &lt;code&gt;UserService&lt;/code&gt; would be a singleton and available throughout the app. Though you may see it coded this way, using the &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; property of the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator on the service itself is preferable as of Angular 6.0 as it makes your services tree-shakable.</source>
          <target state="translated">如果此NgModule是根 &lt;code&gt;AppModule&lt;/code&gt; ，则 &lt;code&gt;UserService&lt;/code&gt; 将是单例，并且在整个应用程序中都可用。虽然你可能会看到它编码的这种方式，使用 &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; 的财产 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰的服务本身就是最好的角6.0的，因为它使你的服务树的可震动。</target>
        </trans-unit>
        <trans-unit id="52b616c30fcd1c3179a4f94d2ff26bd944939a69" translate="yes" xml:space="preserve">
          <source>If this NgModule were the root &lt;code&gt;AppModule&lt;/code&gt;, the &lt;code&gt;UserService&lt;/code&gt; would be a singleton and available throughout the app. Though you may see it coded this way, using the &lt;code&gt;providedIn&lt;/code&gt; property of the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator on the service itself is preferable as of Angular 6.0 as it makes your services tree-shakable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a961d773c3ebb64dd1d2a5bb5b8857c41c94da34" translate="yes" xml:space="preserve">
          <source>If this is something you wanted to do, it would be a good idea to enable the &lt;code&gt;noImplicitAny&lt;/code&gt; configuration option in &lt;code&gt;tsconfig.json&lt;/code&gt;. This would cause the TypeScript compiler to display a warning when there's any code that does not yet have type annotations. You could use it as a guide to inform us about how close you are to having a fully annotated project.</source>
          <target state="translated">如果这是您想做的事情，那么最好在 &lt;code&gt;tsconfig.json&lt;/code&gt; 中启用 &lt;code&gt;noImplicitAny&lt;/code&gt; 配置选项。如果有尚无类型注释的任何代码，这将导致TypeScript编译器显示警告。您可以将其用作指导，以告知我们您距离一个带有完整注释的项目有多近。</target>
        </trans-unit>
        <trans-unit id="d8b697c68c21ca2b9972cd7df3c8b2c2521e942f" translate="yes" xml:space="preserve">
          <source>If this pattern does not satisfy your business needs, you can use &lt;code&gt;&lt;a href=&quot;validators#pattern&quot;&gt;Validators.pattern()&lt;/a&gt;&lt;/code&gt; to validate the value against a different pattern.</source>
          <target state="translated">如果此模式不能满足您的业务需求，则可以使用 &lt;code&gt;&lt;a href=&quot;validators#pattern&quot;&gt;Validators.pattern()&lt;/a&gt;&lt;/code&gt; 来针对其他模式验证值。</target>
        </trans-unit>
        <trans-unit id="12a97be36f3f8b698fee41e85a55b88f80921851" translate="yes" xml:space="preserve">
          <source>If true, this directive/component will be skipped by the AOT compiler and so will always be compiled using JIT.</source>
          <target state="translated">如果为真,这个指令/组件将被AOT编译器跳过,因此将始终使用JIT编译。</target>
        </trans-unit>
        <trans-unit id="dee5d11f125e7906a2306bcec4c66b607231b73c" translate="yes" xml:space="preserve">
          <source>If true, this module will be skipped by the AOT compiler and so will always be compiled using JIT.</source>
          <target state="translated">如果为真,该模块将被AOT编译器跳过,因此将一直使用JIT编译。</target>
        </trans-unit>
        <trans-unit id="ba78200d25bae586b98c7c392474b61cabfe4a71" translate="yes" xml:space="preserve">
          <source>If value is trusted for the context, this method will unwrap the contained safe value and use it directly. Otherwise, value will be sanitized to be safe in the given context, for example by replacing URLs that have an unsafe protocol part (such as &lt;code&gt;javascript:&lt;/code&gt;). The implementation is responsible to make sure that the value can definitely be safely used in the given context.</source>
          <target state="translated">如果上下文信任值，则此方法将解开包含的安全值并直接使用它。否则，将在给定的上下文中将值净化为安全的，例如，通过替换具有不安全协议部分的URL（例如 &lt;code&gt;javascript:&lt;/code&gt; )。该实现负责确保在给定的上下文中可以安全地使用该值。</target>
        </trans-unit>
        <trans-unit id="3bb452304863c61a02b99678f43105cff45695b0" translate="yes" xml:space="preserve">
          <source>If we create a new project with &lt;code&gt;ng new builder-test&lt;/code&gt;, the generated &lt;code&gt;angular.json&lt;/code&gt; file looks something like this, with only default builder configurations.</source>
          <target state="translated">如果我们使用 &lt;code&gt;ng new builder-test&lt;/code&gt; 创建一个新项目，则生成的 &lt;code&gt;angular.json&lt;/code&gt; 文件看起来像这样，只有默认的构建器配置。</target>
        </trans-unit>
        <trans-unit id="410d7d19eeff8be9f91595a2a6c28a3630cc8b2e" translate="yes" xml:space="preserve">
          <source>If we neglected to add, &lt;code&gt;#docplaster&lt;/code&gt;, the processor would insert the &lt;em&gt;default&lt;/em&gt; plaster - an ellipsis comment - between the fragments. Try removing the &lt;code&gt;#docplaster&lt;/code&gt; comment yourself to see the effect.</source>
          <target state="translated">如果我们忽略添加 &lt;code&gt;#docplaster&lt;/code&gt; ，那么处理器将在片段之间插入&lt;em&gt;默认的&lt;/em&gt;灰泥-省略号注释。尝试自己删除 &lt;code&gt;#docplaster&lt;/code&gt; 注释以查看效果。</target>
        </trans-unit>
        <trans-unit id="539d94c8fe072123800e0f9db24c1874e3e30bba" translate="yes" xml:space="preserve">
          <source>If you &lt;em&gt;mutate&lt;/em&gt; the array, no pipe is invoked and the display isn't updated; if you &lt;em&gt;replace&lt;/em&gt; the array, the pipe executes and the display is updated. The Flying Heroes application extends the code with checkbox switches and additional displays to help you experience these effects.</source>
          <target state="translated">如果您&lt;em&gt;更改&lt;/em&gt;数组，则不会调用任何管道，并且不会更新显示内容。如果&lt;em&gt;替换&lt;/em&gt;阵列，则执行管道并更新显示。Flying Heroes应用程序使用复选框开关和其他显示来扩展代码，以帮助您体验这些效果。</target>
        </trans-unit>
        <trans-unit id="0fabf2886d8095e393384ce3f692c1d6440c63c9" translate="yes" xml:space="preserve">
          <source>If you add &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; to the constructor for &lt;code&gt;AnimalService&lt;/code&gt;, the result is 🐶 (puppy) because the injector finds the &lt;code&gt;AnimalService&lt;/code&gt; in the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;. Here is the &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; array in the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; class and &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; in the constructor:</source>
          <target state="translated">如果添加 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 的构造函数 &lt;code&gt;AnimalService&lt;/code&gt; ，结果是🐶（小狗），因为喷油器发现 &lt;code&gt;AnimalService&lt;/code&gt; 在 &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 。这是 &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; 类中的 &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; 数组，以及构造函数中的 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;（）：</target>
        </trans-unit>
        <trans-unit id="020ce77fbfa16628a9d3b03c2b40dcb957a7f20a" translate="yes" xml:space="preserve">
          <source>If you add &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; to the constructor for &lt;code&gt;AnimalService&lt;/code&gt;, the result is 🐶 (puppy) because the injector finds the &lt;code&gt;AnimalService&lt;/code&gt; in the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;. Here is the &lt;code&gt;viewProviders&lt;/code&gt; array in the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; class and &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; in the constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057296fa1750840f11cd0280d602d1818f95536d" translate="yes" xml:space="preserve">
          <source>If you already have an app that was created with the &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;, you can create a service using the &lt;a href=&quot;cli/generate&quot;&gt;&lt;code&gt;ng generate&lt;/code&gt;&lt;/a&gt; CLI command in the root project directory. Replace &lt;em&gt;User&lt;/em&gt; with the name of your service.</source>
          <target state="translated">如果您已经拥有使用&lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;创建的应用程序，则可以使用根项目目录中的&lt;a href=&quot;cli/generate&quot;&gt; &lt;code&gt;ng generate&lt;/code&gt; &lt;/a&gt; CLI命令创建服务。用您的服务名称替换&lt;em&gt;用户&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2ff6e048cc33df5338739033fa8346eb0d4a951f" translate="yes" xml:space="preserve">
          <source>If you already have projects running on your machine that use other versions of Node.js and npm, consider using &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;nvm&lt;/a&gt; to manage the multiple versions of Node.js and npm.</source>
          <target state="translated">如果您的计算机上已经在运行使用其他版本的Node.js和npm的项目，请考虑使用&lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;nvm&lt;/a&gt;管理多个版本的Node.js和npm。</target>
        </trans-unit>
        <trans-unit id="90d4d7fe6344c11a6f7bcd7a21dbd7b7bce219e6" translate="yes" xml:space="preserve">
          <source>If you are a library author, you should keep using the View Engine compiler as of version 9. By having all libraries continue to use View Engine, you will maintain compatibility with default v9 applications that use Ivy, as well as with applications that have opted to continue using View Engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b03c67a88235e36acc0fc42c3d9208b7a04ffe" translate="yes" xml:space="preserve">
          <source>If you are currently using AngularJS, see &lt;a href=&quot;upgrade&quot;&gt;Upgrading from AngularJS&lt;/a&gt;. &lt;em&gt;AngularJS&lt;/em&gt; is the name for all v1.x versions of Angular.</source>
          <target state="translated">如果您当前正在使用AngularJS，请参阅&lt;a href=&quot;upgrade&quot;&gt;从AngularJS升级&lt;/a&gt;。&lt;em&gt;AngularJS&lt;/em&gt;是Angular所有v1.x版本的名称。</target>
        </trans-unit>
        <trans-unit id="2a8730eb4263adf9633421f884873db3bc272d64" translate="yes" xml:space="preserve">
          <source>If you are hiding large component trees, consider &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; as a more efficient alternative to showing/hiding.</source>
          <target state="translated">如果要隐藏大型组件树，请考虑使用 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; 作为显示/隐藏的更有效替代方法。</target>
        </trans-unit>
        <trans-unit id="dd74353d5cb9e62ae95981a79ed374fcaa9e6433" translate="yes" xml:space="preserve">
          <source>If you are implementing a custom renderer, you must implement this interface.</source>
          <target state="translated">如果你正在实现一个自定义渲染器,你必须实现这个接口。</target>
        </trans-unit>
        <trans-unit id="abfbbb4531d989e45009d6d362b78e141a014fd3" translate="yes" xml:space="preserve">
          <source>If you are new to Angular, see &lt;a href=&quot;start&quot;&gt;Getting Started&lt;/a&gt;. Getting Started helps you quickly learn the essentials of Angular, in the context of building a basic online store app. It leverages the &lt;a href=&quot;https://stackblitz.com/&quot;&gt;StackBlitz&lt;/a&gt; online development environment, so you don't need to set up your local environment until you're ready.</source>
          <target state="translated">如果您不熟悉Angular，请参阅&amp;ldquo; &lt;a href=&quot;start&quot;&gt;入门&amp;rdquo;&lt;/a&gt;。入门帮助您在构建基本的在线商店应用程序的背景下快速学习Angular的基本知识。它利用了&lt;a href=&quot;https://stackblitz.com/&quot;&gt;StackBlitz&lt;/a&gt;在线开发环境，因此您无需准备好就可以设置本地环境。</target>
        </trans-unit>
        <trans-unit id="3a2afbd5d04b514e212ac51be4531329265f23e7" translate="yes" xml:space="preserve">
          <source>If you are new to Angular, see the &lt;a href=&quot;start&quot;&gt;Getting Started&lt;/a&gt; tutorial. Getting Started helps you quickly learn the essentials of Angular, in the context of building a basic online store app.</source>
          <target state="translated">如果您不熟悉Angular，请参阅《&lt;a href=&quot;start&quot;&gt;入门指南》&lt;/a&gt;。入门帮助您在构建基本的在线商店应用程序的背景下快速学习Angular的基本知识。</target>
        </trans-unit>
        <trans-unit id="8c411ae285cef2e50450b7be137b68af40349548" translate="yes" xml:space="preserve">
          <source>If you are new to Angular, you might want to start with &lt;a href=&quot;start&quot;&gt;Try it now!&lt;/a&gt;, which introduces the essentials of Angular in the context of a ready-made basic online store app that you can examine and modify. This standalone tutorial takes advantage of the interactive &lt;a href=&quot;https://stackblitz.com/&quot;&gt;StackBlitz&lt;/a&gt; environment for online development. You don't need to set up your local environment until you're ready.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429a085eabc08ae949cb917701bc53d58671e9e8" translate="yes" xml:space="preserve">
          <source>If you are not using the CLI, add your polyfill scripts directly to the host web page (&lt;code&gt;index.html&lt;/code&gt;).</source>
          <target state="translated">如果不使用CLI，则将polyfill脚本直接添加到主机网页（ &lt;code&gt;index.html&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c294d47814c324598c601f2919036c6333fbcffe" translate="yes" xml:space="preserve">
          <source>If you are updating from &lt;strong&gt;one major version to another,&lt;/strong&gt; then we recommend that you &lt;strong&gt;don't skip major versions.&lt;/strong&gt; Follow the instructions to incrementally update to the next major version, testing and validating at each step. For example, if you want to update from version 6.x.x to version 8.x.x, we recommend that you update to the latest 7.x.x release first. After successfully updating to 7.x.x, you can then update to 8.x.x.</source>
          <target state="translated">如果要从&lt;strong&gt;一个主要版本&lt;/strong&gt;更新&lt;strong&gt;到另一个，&lt;/strong&gt;则建议您&lt;strong&gt;不要跳过主要版本。&lt;/strong&gt;按照说明逐步更新到下一个主要版本，并在每个步骤进行测试和验证。例如，如果要从版本6.xx更新到版本8.xx，建议您首先更新到最新的7.xx版本。成功更新到7.xx后，您可以再更新到8.xx</target>
        </trans-unit>
        <trans-unit id="5f232055071ca555fe05e8263d44377d3060b3a6" translate="yes" xml:space="preserve">
          <source>If you are updating within the &lt;strong&gt;same major version,&lt;/strong&gt; then you can skip any intermediate versions and update directly to the targeted version. For example, you can update directly from 7.0.0 to 7.2.11.</source>
          <target state="translated">如果要在&lt;strong&gt;同一主版本中&lt;/strong&gt;进行更新&lt;strong&gt;，&lt;/strong&gt;则可以跳过任何中间版本，而直接更新为目标版本。例如，您可以直接从7.0.0更新到7.2.11。</target>
        </trans-unit>
        <trans-unit id="d7ada1beb7f1a3e0619c779fa66d5b774aef356f" translate="yes" xml:space="preserve">
          <source>If you are using AngularJS Material, you can install the type definitions via:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a19f97e563c43c87d702bca0ca63c624178ab00" translate="yes" xml:space="preserve">
          <source>If you are using one of the &lt;code&gt;@nguniversal/*-engine&lt;/code&gt; packages (such as &lt;code&gt;@nguniversal/express-engine&lt;/code&gt;), this is taken care for you automatically. You don't need to do anything to make relative URLs work on the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7a81b8180cf07eda11450c5d99572d22e01ced" translate="yes" xml:space="preserve">
          <source>If you change the text, the extractor does &lt;em&gt;not&lt;/em&gt; change the ID. As a result, you don't have to take the extra step of updating the translation. The drawback of using custom IDs is that if you change the text, your translation may be out-of-sync with the newly changed source text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa30f67180396da593aeadb4e26b8ee85e38af3d" translate="yes" xml:space="preserve">
          <source>If you choose to inject your pipe into a class, you must provide it in the &lt;code&gt;providers&lt;/code&gt; array of your &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果选择将管道注入到类中，则必须在 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;providers&lt;/code&gt; 数组中提供它。</target>
        </trans-unit>
        <trans-unit id="f9a5cf2285ce2f7f1005a024b906069e5899271e" translate="yes" xml:space="preserve">
          <source>If you click the dashboard hero &quot;Magneta,&quot; the router opens a &quot;Hero Details&quot; view where you can change the hero's name.</source>
          <target state="translated">如果点击仪表盘英雄 &quot;Magneta&quot;,路由器会打开 &quot;英雄详情 &quot;视图,在这里你可以更改英雄的名字。</target>
        </trans-unit>
        <trans-unit id="8f68cc79c216b6b956bc04df5f4512033049017d" translate="yes" xml:space="preserve">
          <source>If you comment out the &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; decorator, Angular walks up the injector ancestor tree until it finds the logger at the &lt;code&gt;AppComponent&lt;/code&gt; level. The logger logic kicks in and the hero display updates with the &quot;!!!&quot; marker to indicate that the logger was found.</source>
          <target state="translated">如果您注释掉 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 装饰器，则Angular会沿喷射器祖先树前进，直到在 &lt;code&gt;AppComponent&lt;/code&gt; 级别找到记录器为止。记录器逻辑启动，英雄显示更新为&amp;ldquo; !!!&amp;rdquo; 指示已找到记录器的标记。</target>
        </trans-unit>
        <trans-unit id="655f88a25378a8e0bba92c48a89431e31a18d04a" translate="yes" xml:space="preserve">
          <source>If you configure an app-wide provider in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; of &lt;code&gt;AppModule&lt;/code&gt;, it overrides one configured for &lt;code&gt;root&lt;/code&gt; in the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; metadata. You can do this to configure a non-default provider of a service that is shared with multiple apps.</source>
          <target state="translated">如果您在配置应用程序，全提供商 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; 的 &lt;code&gt;AppModule&lt;/code&gt; ，它将覆盖配置为一个 &lt;code&gt;root&lt;/code&gt; 在 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 元。您可以执行此操作以配置与多个应用共享的服务的非默认提供程序。</target>
        </trans-unit>
        <trans-unit id="53b5c56d5542295c8b28d30b021bb969efead9f2" translate="yes" xml:space="preserve">
          <source>If you create a new version of your library that introduces potential breaking changes, you can provide an &lt;em&gt;update schematic&lt;/em&gt; to enable the &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt; command to automatically resolve any such changes in the project being updated.</source>
          <target state="translated">如果创建的库版本引入了潜在的重大更改，则可以提供&lt;em&gt;更新示意图，&lt;/em&gt;以使 &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt; 命令能够自动解决正在更新的项目中的任何此类更改。</target>
        </trans-unit>
        <trans-unit id="36bf0876067bb7a664673feee8ac35025366695a" translate="yes" xml:space="preserve">
          <source>If you create a new version of your library that introduces potential breaking changes, you can provide an &lt;em&gt;update schematic&lt;/em&gt; to enable the &lt;code&gt;ng update&lt;/code&gt; command to automatically resolve any such changes in the project being updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94f6f1acbb8efed36c81082ca18afd759387bb6" translate="yes" xml:space="preserve">
          <source>If you create an application using Angular's strict mode, you will also have an additional &lt;code&gt;package.json&lt;/code&gt; file in the &lt;code&gt;src/app&lt;/code&gt; directory. For more information, see &lt;a href=&quot;strict-mode&quot;&gt;Strict mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a642206c4a5d0b4ac72237fc880c34a1dcc940" translate="yes" xml:space="preserve">
          <source>If you create project with `Angular/CLI`, it is already imported in `src/test.ts`.</source>
          <target state="translated">如果你用 &quot;Angular/CLI &quot;创建项目,它已经被导入到 &quot;src/test.ts &quot;中。</target>
        </trans-unit>
        <trans-unit id="00d9ca9f25be57d4c4bdc4c5699c96a4ab982c59" translate="yes" xml:space="preserve">
          <source>If you declare the real components, you'll also have to declare &lt;em&gt;their&lt;/em&gt; nested components and provide for &lt;em&gt;all&lt;/em&gt; services injected in &lt;em&gt;any&lt;/em&gt; component in the tree.</source>
          <target state="translated">如果声明了真正的组件，则还必须声明&lt;em&gt;它们的&lt;/em&gt;嵌套组件，并提供注入到树中&lt;em&gt;任何&lt;/em&gt;组件中的&lt;em&gt;所有&lt;/em&gt;服务。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c8c8eecaa76ff1b26ee4f0a3dbfa27a318e146eb" translate="yes" xml:space="preserve">
          <source>If you declare the variable on a component, the variable refers to the component instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2e7ebc41078b5a92d731d4eb706af50528ef2b" translate="yes" xml:space="preserve">
          <source>If you declare the variable on a standard HTML tag, the variable refers to the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537074c689f36a996573ec7830a8b959e5b1d799" translate="yes" xml:space="preserve">
          <source>If you declare the variable on an &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element, the variable refers to a &lt;code&gt;&lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; instance, which represents the template. For more information on &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt;, see the &lt;a href=&quot;structural-directives#the-ng-template&quot;&gt;ng-template&lt;/a&gt; section of &lt;a href=&quot;structural-directives&quot;&gt;Structural directives&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f3473cbc8bd4910ed874d931585deebed2a0eb" translate="yes" xml:space="preserve">
          <source>If you delete the hero name, the form displays a validation error in an attention-grabbing style:</source>
          <target state="translated">如果你删除了英雄的名字,表单会以引人注意的风格显示一个验证错误。</target>
        </trans-unit>
        <trans-unit id="be89fadd89408e928a800bd50abe498bb92298a3" translate="yes" xml:space="preserve">
          <source>If you develop angular locally with &lt;code&gt;ng serve&lt;/code&gt;, a &lt;code&gt;websocket&lt;/code&gt; connection is set up automatically between browser and local dev server, so when your code changes, the browser can automatically refresh.</source>
          <target state="translated">如果您使用 &lt;code&gt;ng serve&lt;/code&gt; 在本地进行角度开发，则会在浏览器和本地开发服务器之间自动建立一个 &lt;code&gt;websocket&lt;/code&gt; 连接，因此当代码更改时，浏览器可以自动刷新。</target>
        </trans-unit>
        <trans-unit id="76ffe5939fdb8b0e744ee8649f7d7239d2f7e34f" translate="yes" xml:space="preserve">
          <source>If you disable Ivy and the project uses internationalization, you can also remove the &lt;code&gt;@angular/localize&lt;/code&gt; runtime component from the project's polyfills file located be default at &lt;code&gt;src/polyfills.ts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13b1ae3a623247c92184a19c0620a0d0b0dd8f0" translate="yes" xml:space="preserve">
          <source>If you disable Ivy, you might also want to reconsider whether to make AOT compilation the default for your application development, as described &lt;a href=&quot;ivy#aot-and-ivy&quot;&gt;above&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7663d2e6e6cb92add7a2eeb86377cd1a6f1568" translate="yes" xml:space="preserve">
          <source>If you do combine a component and service in the same file, it is important to define the service first, and then the component. If you define the component before the service, you get a run-time null reference error.</source>
          <target state="translated">如果你在同一个文件中结合了一个组件和服务,那么首先定义服务,然后再定义组件是很重要的。如果你在服务之前定义组件,你会得到一个运行时空引用错误。</target>
        </trans-unit>
        <trans-unit id="70b72ee7901f1dbf6fe44eed029ec0919535d96c" translate="yes" xml:space="preserve">
          <source>If you do import &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; into a lazy loaded feature module, Angular returns an error telling you to use &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">如果确实将 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; 导入到延迟加载的功能模块中，则Angular会返回错误，告诉您改用 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0a50f188d24b28b62b5d94fe7caa482234cb014" translate="yes" xml:space="preserve">
          <source>If you do need to populate initial values into your form, using a one-way binding for &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; tends to be sufficient as long as you use the exported form's value rather than the domain model's value on submit.</source>
          <target state="translated">如果确实需要在表单中填充初始值，则对 &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; 使用单向绑定就足够了，只要您使用导出表单的值而不是提交时域模型的值即可。</target>
        </trans-unit>
        <trans-unit id="8172efb07c1070141d767274a73b38bf7814dfc1" translate="yes" xml:space="preserve">
          <source>If you do, be sure to set the &lt;code&gt;id&lt;/code&gt; attribute - not the &lt;code&gt;name&lt;/code&gt; attribute! The docs generator will not convert the &lt;code&gt;name&lt;/code&gt; to the proper link URL.</source>
          <target state="translated">如果这样做，请确保设置 &lt;code&gt;id&lt;/code&gt; 属性-而不是 &lt;code&gt;name&lt;/code&gt; 属性！docs生成器不会将 &lt;code&gt;name&lt;/code&gt; 转换为正确的链接URL。</target>
        </trans-unit>
        <trans-unit id="51cf49223fe57ab0167336d62a454c5e60d9cfb3" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t already have an app, you can follow the steps below to create one with the CLI. If you already have an app, skip to &lt;a href=&quot;lazy-loading-ngmodules#config-routes&quot;&gt;Configure the routes&lt;/a&gt;. Enter the following command where &lt;code&gt;customer-app&lt;/code&gt; is the name of your app:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0690d6c4fb6fbd319b60dd809c871d4c4ae2c535" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t already have an app, you can follow the steps below to create one with the CLI. If you do already have an app, skip to &lt;a href=&quot;lazy-loading-ngmodules#config-routes&quot;&gt;Configure the routes&lt;/a&gt;. Enter the following command where &lt;code&gt;customer-app&lt;/code&gt; is the name of your app:</source>
          <target state="translated">如果您还没有应用程序，则可以按照以下步骤使用CLI创建一个应用程序。如果您已经有一个应用，请跳至&lt;a href=&quot;lazy-loading-ngmodules#config-routes&quot;&gt;配置路由&lt;/a&gt;。输入以下命令，其中 &lt;code&gt;customer-app&lt;/code&gt; 是您的应用程序的名称：</target>
        </trans-unit>
        <trans-unit id="8ca2994953a96781a0944879ae63e39a49e4701b" translate="yes" xml:space="preserve">
          <source>If you don't add the interface for the script-defined extension, your IDE shows an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459d0b6f0027ff890051041d8277b8b47d8f99dc" translate="yes" xml:space="preserve">
          <source>If you don't have it, install &lt;strong&gt;&lt;a href=&quot;https://www.visualstudio.com/en-us/news/releasenotes/vs2015-update3-vs&quot;&gt;Visual Studio 2015 Update 3&lt;/a&gt;&lt;/strong&gt;. Or use &lt;code&gt;Tools | Extensions and Updates&lt;/code&gt; to update to Update 3 directly from Visual Studio 2015.</source>
          <target state="translated">如果没有，请安装&lt;strong&gt;&lt;a href=&quot;https://www.visualstudio.com/en-us/news/releasenotes/vs2015-update3-vs&quot;&gt;Visual Studio 2015 Update 3&lt;/a&gt;&lt;/strong&gt;。或使用 &lt;code&gt;Tools | Extensions and Updates&lt;/code&gt; ，可直接从Visual Studio 2015更新到Update 3。</target>
        </trans-unit>
        <trans-unit id="48ed7036b0a82e03171cab5edf597919553bb1d3" translate="yes" xml:space="preserve">
          <source>If you don't provide a unit when specifying dimension, Angular assumes a default unit of pixels, or px. Expressing 50 pixels as &lt;code&gt;50&lt;/code&gt; is the same as saying &lt;code&gt;'50px'&lt;/code&gt;.</source>
          <target state="translated">如果在指定尺寸时未提供单位，则Angular会采用默认的像素单位，即px。将50像素表示为 &lt;code&gt;50&lt;/code&gt; 等于说 &lt;code&gt;'50px'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1b561dc3312390e8ea84f90f931f5ed36b0f473" translate="yes" xml:space="preserve">
          <source>If you don't use the CLI, you have two options:</source>
          <target state="translated">如果你不使用CLI,你有两个选择。</target>
        </trans-unit>
        <trans-unit id="5bc2f915897fc1447035a5647974d463c55c174d" translate="yes" xml:space="preserve">
          <source>If you find that changes to your library are not reflected in your app, your app is probably using an old build of the library.</source>
          <target state="translated">如果您发现对库的更改没有反映在您的应用程序中,您的应用程序可能使用了库的旧构建。</target>
        </trans-unit>
        <trans-unit id="0a3bdf9252cbd8653710b518a7e90d39fa7fc1cf" translate="yes" xml:space="preserve">
          <source>If you find that you need to solve the same problem in more than one app (or want to share your solution with other developers), you have a candidate for a library. A simple example might be a button that sends users to your company website, that would be included in all apps that your company builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8aa489382d8d4aec77f8acd02f621cf2ccce35" translate="yes" xml:space="preserve">
          <source>If you find your application becomes unresponsive while processing data, using Web Workers can help.</source>
          <target state="translated">如果您发现您的应用程序在处理数据时变得无响应,使用Web Workers可以帮助您。</target>
        </trans-unit>
        <trans-unit id="0433bd29313c70f90dc0cba136f09aa567988ee1" translate="yes" xml:space="preserve">
          <source>If you get a template parse error when trying to use inputs or outputs, but you know that the properties do indeed exist, double check that your properties are annotated with &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; / &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; or that you've declared them in an &lt;code&gt;inputs&lt;/code&gt;/&lt;code&gt;outputs&lt;/code&gt; array:</source>
          <target state="translated">如果在尝试使用输入或输出时收到模板解析错误，但是您知道该属性确实存在，请仔细检查您的属性是否用 &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; / &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; 进行了注释，或者是否已在其中声明了它们。一个 &lt;code&gt;inputs&lt;/code&gt; / &lt;code&gt;outputs&lt;/code&gt; 数组：</target>
        </trans-unit>
        <trans-unit id="495b88195246c2e62adc198264cd5c3fefd8628b" translate="yes" xml:space="preserve">
          <source>If you go directly to the &lt;a href=&quot;https://stackblitz.com/&quot;&gt;StackBlitz online development environment&lt;/a&gt; and choose to &lt;a href=&quot;https://stackblitz.com/fork/angular&quot;&gt;start a new Angular workspace&lt;/a&gt;, you get a generic stub application, rather than this &lt;a href=&quot;https://angular.io/start#new-project&quot;&gt;illustrative sample&lt;/a&gt;. Once you have been introduced to the basic concepts here, this can be helpful for working interactively while you are learning Angular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf717436302dddc92f72725596accc08d3335c31" translate="yes" xml:space="preserve">
          <source>If you had an expression that changed the value of something else that you were binding to, that change of value would be a side effect. Angular might or might not display the changed value. If Angular does detect the change, it throws an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574c59f8b77bf5e82b23eb72c796ed67b3d2fb05" translate="yes" xml:space="preserve">
          <source>If you had any AngularJS services in the project, those would also be a good candidate for converting to classes, since like controllers, they're also constructor functions. But you only have the &lt;code&gt;Phone&lt;/code&gt; factory in this project, and that's a bit special since it's an &lt;code&gt;ngResource&lt;/code&gt; factory. So you won't be doing anything to it in the preparation stage. You'll instead turn it directly into an Angular service.</source>
          <target state="translated">如果您在项目中有任何AngularJS服务，那么这些也将是转换为类的理想选择，因为像控制器一样，它们也是构造函数。但是您在该项目中只有 &lt;code&gt;Phone&lt;/code&gt; 工厂，这有点特殊，因为它是 &lt;code&gt;ngResource&lt;/code&gt; 工厂。因此，您在准备阶段不会做任何事情。您可以直接将其转换为Angular服务。</target>
        </trans-unit>
        <trans-unit id="1fed1253af78f190067c1aae4775c40631199cc8" translate="yes" xml:space="preserve">
          <source>If you have a content-rich app, such as the Angular app that presents this documentation, custom elements let you give your content providers sophisticated Angular functionality without requiring knowledge of Angular. For example, an Angular guide like this one is added directly to the DOM by the Angular navigation tools, but can include special elements like &lt;code&gt;&amp;lt;code-snippet&amp;gt;&lt;/code&gt; that perform complex operations. All you need to tell your content provider is the syntax of your custom element. They don't need to know anything about Angular, or anything about your component's data structures or implementation.</source>
          <target state="translated">如果您拥有内容丰富的应用程序（例如提供此文档的Angular应用程序），则自定义元素可让您为内容提供商提供复杂的Angular功能，而无需了解Angular。例如，像这样的Angular指南是通过Angular导航工具直接添加到DOM的，但是可以包含执行复杂操作的特殊元素，例如 &lt;code&gt;&amp;lt;code-snippet&amp;gt;&lt;/code&gt; 。您需要告诉您的内容提供者的仅仅是自定义元素的语法。他们不需要了解Angular或组件的数据结构或实现的任何知识。</target>
        </trans-unit>
        <trans-unit id="f19944a29f8b906f6f0c8e4343ee837260ae1269" translate="yes" xml:space="preserve">
          <source>If you have a floating image inside an alert, callout, or a subsection, it is a good idea to apply the &lt;code&gt;clear-fix&lt;/code&gt; class to the &lt;code&gt;div&lt;/code&gt; to ensure that the image doesn't overflow its container. For example:</source>
          <target state="translated">如果您在警报，标注或子区域中有浮动图像，则最好将 &lt;code&gt;clear-fix&lt;/code&gt; 类应用于 &lt;code&gt;div&lt;/code&gt; 以确保图像不会溢出其容器。例如：</target>
        </trans-unit>
        <trans-unit id="6397857065b35ce89a9f398af1b26fb9b1516f71" translate="yes" xml:space="preserve">
          <source>If you have developed functionality that is suitable for reuse, you can create your own libraries. These libraries can be used locally in your workspace, or you can publish them as &lt;a href=&quot;npm-packages&quot;&gt;npm packages&lt;/a&gt; to share with other projects or other Angular developers. These packages can be published to the npm registry, a private npm Enterprise registry, or a private package management system that supports npm packages. See &lt;a href=&quot;creating-libraries&quot;&gt;Creating Libraries&lt;/a&gt;.</source>
          <target state="translated">如果您开发了适合重用的功能，则可以创建自己的库。这些库可以在您的工作区中本地使用，也可以将它们发布为&lt;a href=&quot;npm-packages&quot;&gt;npm软件包&lt;/a&gt;以与其他项目或其他Angular开发人员共享。这些软件包可以发布到npm注册表，私有npm Enterprise注册表或支持npm软件包的私有软件包管理系统中。请参阅&lt;a href=&quot;creating-libraries&quot;&gt;创建库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1d5fced1eafeb19e09e69c636133d8617598ad9" translate="yes" xml:space="preserve">
          <source>If you have more than two paragraphs, consider creating a new page or making it part of the main content.</source>
          <target state="translated">如果你有两个以上的段落,可以考虑创建一个新的页面,或者将其作为主要内容的一部分。</target>
        </trans-unit>
        <trans-unit id="ce43e9168848245cd1d0950e4a6be2522d8f2b68" translate="yes" xml:space="preserve">
          <source>If you have registered a provider for the same DI token at different levels, the first one Angular encounters is the one it uses to resolve the dependency. If, for example, a provider is registered locally in the component that needs a service, Angular doesn't look for another provider of the same service.</source>
          <target state="translated">如果你在不同的层次上为同一个DI令牌注册了一个提供者,那么Angular首先遇到的就是它用来解析依赖关系的那个提供者。例如,如果在需要服务的组件中本地注册了一个提供者,那么Angular就不会寻找另一个相同服务的提供者。</target>
        </trans-unit>
        <trans-unit id="244fbbf115dfe5706448ffdb4e279457395f14e1" translate="yes" xml:space="preserve">
          <source>If you haven't already, remove all references to the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;app.module.ts&lt;/code&gt;, as well as any &lt;a href=&quot;upgrade#making-angularjs-dependencies-injectable-to-angular&quot;&gt;factory provider&lt;/a&gt; for AngularJS services, and the &lt;code&gt;app/ajs-upgraded-providers.ts&lt;/code&gt; file.</source>
          <target state="translated">如果还没有，请从 &lt;code&gt;app.module.ts&lt;/code&gt; ，AngularJS服务的任何&lt;a href=&quot;upgrade#making-angularjs-dependencies-injectable-to-angular&quot;&gt;工厂提供程序&lt;/a&gt;以及 &lt;code&gt;app/ajs-upgraded-providers.ts&lt;/code&gt; 文件中删除对 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 的所有引用。</target>
        </trans-unit>
        <trans-unit id="4963feaec493218114281088952fb43b33cce3a9" translate="yes" xml:space="preserve">
          <source>If you haven't created custom validators before, start by reviewing the &lt;a href=&quot;form-validation#custom-validators&quot;&gt;custom validators section&lt;/a&gt;.</source>
          <target state="translated">如果您之前未创建过自定义验证器，请先查看&amp;ldquo; &lt;a href=&quot;form-validation#custom-validators&quot;&gt;自定义验证器&amp;rdquo;部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c789fcd7125f7745fca41c10481fb3d352702dd" translate="yes" xml:space="preserve">
          <source>If you intend to have multiple projects in a workspace, you can skip the initial application generation when you create the workspace, and give the workspace a unique name. The following command creates a workspace with all of the workspace-wide configuration files, but no root-level application.</source>
          <target state="translated">如果您打算在一个工作区中拥有多个项目,您可以在创建工作区时跳过初始应用程序的生成,并给工作区取一个唯一的名称。以下命令创建了一个包含所有工作区配置文件的工作区,但不包含根级应用程序。</target>
        </trans-unit>
        <trans-unit id="6ed99352b2d6234cc28fecffcc038922fe7627c2" translate="yes" xml:space="preserve">
          <source>If you look at the &lt;code&gt;http-server&lt;/code&gt; logs, you can see the service worker requesting &lt;code&gt;/ngsw.json&lt;/code&gt;. This is how the service worker checks for updates.</source>
          <target state="translated">如果查看 &lt;code&gt;http-server&lt;/code&gt; 日志，则可以看到服务人员请求 &lt;code&gt;/ngsw.json&lt;/code&gt; 。服务工作者通过这种方式检查更新。</target>
        </trans-unit>
        <trans-unit id="09c234e78616a8f1ab6267a5b6637fade99d397d" translate="yes" xml:space="preserve">
          <source>If you look at the Network tab, you can verify that the service worker is active.</source>
          <target state="translated">如果您查看网络选项卡,您可以验证服务工作者是否处于活动状态。</target>
        </trans-unit>
        <trans-unit id="9c5701cee3aaff758a219be513eeb916029ac2eb" translate="yes" xml:space="preserve">
          <source>If you look at the template for the &lt;code&gt;name&lt;/code&gt; input again, it is fairly similar to the template-driven example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a79269220380ef80051827e018d68abab94031" translate="yes" xml:space="preserve">
          <source>If you look at the template for the name input again, it is fairly similar to the template-driven example.</source>
          <target state="translated">如果你再看看名字输入的模板,它和模板驱动的例子相当相似。</target>
        </trans-unit>
        <trans-unit id="be1adaa34051feae1f602d2f495e70b203a2addd" translate="yes" xml:space="preserve">
          <source>If you look in the Cache Storage viewer, the cache is frequently out of date. Right click the Cache Storage title and refresh the caches.</source>
          <target state="translated">如果在 &quot;缓存存储 &quot;查看器中查看,缓存经常过期。右键点击 &quot;缓存存储 &quot;标题,刷新缓存。</target>
        </trans-unit>
        <trans-unit id="e240ddeb830d887bc58d8e84732b2ed378e0c98b" translate="yes" xml:space="preserve">
          <source>If you mean to lazy-load a module, be careful not import it in a file that's eagerly loaded when the app starts (such as the root &lt;code&gt;AppModule&lt;/code&gt;). If you do that, the module will be loaded immediately.</source>
          <target state="translated">如果您打算延迟加载模块，请注意不要将其导入应用程序启动时急切加载的文件中（例如根 &lt;code&gt;AppModule&lt;/code&gt; ）。如果这样做，该模块将立即加载。</target>
        </trans-unit>
        <trans-unit id="7a3230dc41e776853084f72cc170bbaf7e500a78" translate="yes" xml:space="preserve">
          <source>If you mean to lazy-load a module, be careful not to import it in a file that's eagerly loaded when the app starts (such as the root &lt;code&gt;AppModule&lt;/code&gt;). If you do that, the module will be loaded immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16773d19362678c6fc8bb45ee7f72f374bcbc644" translate="yes" xml:space="preserve">
          <source>If you must alter a request, clone it first and modify the clone before passing it to &lt;code&gt;next.handle()&lt;/code&gt;. You can clone and modify the request in a single step, as shown in the following example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2ad358ff3a296ca464afc454eed23c1c38e476" translate="yes" xml:space="preserve">
          <source>If you must guard against this kind of &quot;provider corruption&quot;, &lt;em&gt;don't rely on a launch-time module's &lt;code&gt;providers&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">如果您必须防止这种&amp;ldquo;提供商腐败&amp;rdquo;，&lt;em&gt;请不要依赖启动时模块的 &lt;code&gt;providers&lt;/code&gt; 。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3304f68a08d3080d984d8dc5da4dcc423149911b" translate="yes" xml:space="preserve">
          <source>If you must inject an instance of an ambient type, you can finesse the problem in four steps:</source>
          <target state="translated">如果你必须注入一个环境类型的实例,你可以通过四个步骤来处理这个问题。</target>
        </trans-unit>
        <trans-unit id="d7e18b086d212d4c106b0c8fad4ba48df8021509" translate="yes" xml:space="preserve">
          <source>If you must load the module eagerly, when the application starts, &lt;em&gt;provide the service in a component instead.&lt;/em&gt;</source>
          <target state="translated">如果必须急于加载模块，请在应用程序启动时&lt;em&gt;改为在组件中提供服务。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="54606fa4b1a1f3287874eefffbe1a9f2ddc23e2d" translate="yes" xml:space="preserve">
          <source>If you must modify the request body, follow these steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ac82fe8517410b1d40420bd85029d758cdda8a" translate="yes" xml:space="preserve">
          <source>If you must mutate the request body, copy it first, change the copy, &lt;code&gt;clone()&lt;/code&gt; the request, and set the clone's body with the new body, as in the following example.</source>
          <target state="translated">如果必须更改请求正文，请首先将其复制，更改副本，然后对请求进行 &lt;code&gt;clone()&lt;/code&gt; ，然后使用新的正文设置克隆的正文，如以下示例所示。</target>
        </trans-unit>
        <trans-unit id="5deab0538bd8714b4af9c382cd8cc938823e841f" translate="yes" xml:space="preserve">
          <source>If you must read a target element property or call one of its methods, see the API reference for &lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt; and &lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;.</source>
          <target state="translated">如果必须阅读目标元素属性或调用其方法之一，请参见&lt;a href=&quot;../api/core/viewchild&quot;&gt;ViewChild&lt;/a&gt;和&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;的API参考。</target>
        </trans-unit>
        <trans-unit id="4c8d2326e60e33ffa20c7c4182475e5223e4a351" translate="yes" xml:space="preserve">
          <source>If you need an &lt;em&gt;optional&lt;/em&gt; polyfill, you must install its npm package, then uncomment or create the corresponding import statement in the &lt;code&gt;src/polyfills.ts&lt;/code&gt; configuration file.</source>
          <target state="translated">如果需要&lt;em&gt;可选的&lt;/em&gt; polyfill，则必须安装其npm软件包，然后取消注释或在 &lt;code&gt;src/polyfills.ts&lt;/code&gt; 配置文件中创建相应的import语句。</target>
        </trans-unit>
        <trans-unit id="9bc172afb1ec77e9f642e2976433da99d4796934" translate="yes" xml:space="preserve">
          <source>If you need the previous behavior then set it by creating a &lt;code&gt;&lt;a href=&quot;../core/default_currency_code&quot;&gt;DEFAULT_CURRENCY_CODE&lt;/a&gt;&lt;/code&gt; provider in your application &lt;code&gt;&lt;a href=&quot;../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb15ada72d6e27c5b0260646179c4bf9acb237d" translate="yes" xml:space="preserve">
          <source>If you need the previous behavior then set it by creating a &lt;code&gt;&lt;a href=&quot;default_currency_code&quot;&gt;DEFAULT_CURRENCY_CODE&lt;/a&gt;&lt;/code&gt; provider in your application &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3109a970d92c304a276ac634765200cb2660a8" translate="yes" xml:space="preserve">
          <source>If you need to access a backend that is not on &lt;code&gt;localhost&lt;/code&gt;, set the &lt;code&gt;changeOrigin&lt;/code&gt; option as well. For example:</source>
          <target state="translated">如果您需要访问不在 &lt;code&gt;localhost&lt;/code&gt; 上的后端，请同时设置 &lt;code&gt;changeOrigin&lt;/code&gt; 选项。例如：</target>
        </trans-unit>
        <trans-unit id="7385333e0134701bca8a7465de13704c98317745" translate="yes" xml:space="preserve">
          <source>If you need to avoid randomly generated value to be used as an application id, you can provide a custom value via a DI provider  configuring the root &lt;a href=&quot;injector&quot;&gt;&lt;code&gt;Injector&lt;/code&gt;&lt;/a&gt; using this token.</source>
          <target state="translated">如果需要避免将随机生成的值用作应用程序ID，则可以通过使用此令牌配置根&lt;a href=&quot;injector&quot;&gt; &lt;code&gt;Injector&lt;/code&gt; &lt;/a&gt;的DI提供程序来提供自定义值。</target>
        </trans-unit>
        <trans-unit id="9f78d5b2a7cf462a861acdc7e39dc21266ddf374" translate="yes" xml:space="preserve">
          <source>If you need to convert user input into a trusted value, use a controller method. The following template allows users to enter a YouTube video ID and load the corresponding video in an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;. The &lt;code&gt;&amp;lt;iframe src&amp;gt;&lt;/code&gt; attribute is a resource URL security context, because an untrusted source can, for example, smuggle in file downloads that unsuspecting users could execute. So call a method on the controller to construct a trusted video URL, which causes Angular to allow binding into &lt;code&gt;&amp;lt;iframe src&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">如果需要将用户输入转换为可信值，请使用控制器方法。以下模板允许用户输入YouTube视频ID并将相应的视频加载到 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 中。所述 &lt;code&gt;&amp;lt;iframe src&amp;gt;&lt;/code&gt; 属性是一个资源URL的安全上下文，因为非置信源可以，例如，在走私文件下载该信任的用户可以执行。因此，在控制器上调用方法来构造受信任的视频URL，这将导致Angular允许绑定到 &lt;code&gt;&amp;lt;iframe src&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="29f9ab2a5ca9fca7da3c0139902ffd0aad1ea2c6" translate="yes" xml:space="preserve">
          <source>If you need to display alternate text depending on the value of a variable, you need to translate all of the alternates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5583bc38486dde54355c7bd2036697b8c05b7dab" translate="yes" xml:space="preserve">
          <source>If you need to make a change that inverts the expected data flow, you must trigger a new change detection cycle to allow that change to be rendered. The examples illustrate how to make such changes safely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f2654a458aa911b15f130929a6854dd20ee84a" translate="yes" xml:space="preserve">
          <source>If you need to make an HTTP request in response to user input, it's not efficient to send a request for every keystroke. It's better to wait until the user stops typing and then send a request. This technique is known as debouncing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3250f2b9a593c69bfc2b1d2c08f0d20870d9f6a" translate="yes" xml:space="preserve">
          <source>If you need to opt-out from using Bazel, you can restore the backup files:</source>
          <target state="translated">如果你需要退出使用Bazel,你可以恢复备份文件。</target>
        </trans-unit>
        <trans-unit id="6bb9cbf31fbab37e1847d62faf286db820a17f95" translate="yes" xml:space="preserve">
          <source>If you need to optionally bypass the proxy, or dynamically change the request before it's sent, add the bypass option, as shown in this JavaScript example.</source>
          <target state="translated">如果你需要有选择地绕过代理,或者在发送请求之前动态地改变请求,添加旁路选项,如这个JavaScript例子所示。</target>
        </trans-unit>
        <trans-unit id="9ebc63e4b9f1212654ea17d217d2e04a30598b57" translate="yes" xml:space="preserve">
          <source>If you need to respond to duplicate requests in your test, use the &lt;code&gt;match()&lt;/code&gt; API instead of &lt;code&gt;expectOne()&lt;/code&gt;. It takes the same arguments but returns an array of matching requests. Once returned, these requests are removed from future matching and you are responsible for flushing and verifying them.</source>
          <target state="translated">如果您需要在测试中响应重复的请求，请使用 &lt;code&gt;match()&lt;/code&gt; API而不是 &lt;code&gt;expectOne()&lt;/code&gt; 。它采用相同的参数，但返回匹配请求的数组。一旦返回，这些请求将从将来的匹配中删除，您将负责刷新和验证它们。</target>
        </trans-unit>
        <trans-unit id="e6da32d2aee99ed52ecee5a0adbf5cdb5a48c9d5" translate="yes" xml:space="preserve">
          <source>If you need to see what events are happening during the navigation lifecycle, there is the &lt;code&gt;enableTracing&lt;/code&gt; option as part of the router's default configuration. This outputs each router event that took place during each navigation lifecycle to the browser console. Use &lt;code&gt;enableTracing&lt;/code&gt; only for debugging purposes. You set the &lt;code&gt;enableTracing: true&lt;/code&gt; option in the object passed as the second argument to the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c73ded6e0a3395b3dfd9ed41d7828a67bbbf93" translate="yes" xml:space="preserve">
          <source>If you need to see what events are happening during the navigation lifecycle, there is the &lt;strong&gt;enableTracing&lt;/strong&gt; option as part of the router's default configuration. This outputs each router event that took place during each navigation lifecycle to the browser console. This should only be used for &lt;em&gt;debugging&lt;/em&gt; purposes. You set the &lt;code&gt;&lt;a href=&quot;../api/router/extraoptions#enableTracing&quot;&gt;enableTracing&lt;/a&gt;: true&lt;/code&gt; option in the object passed as the second argument to the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">如果您需要查看导航生命周期中发生了什么事件，则可以将&lt;strong&gt;enableTracing&lt;/strong&gt;选项作为路由器默认配置的一部分。这会将在每个导航生命周期中发生的每个路由器事件输出到浏览器控制台。这只能用于&lt;em&gt;调试&lt;/em&gt;目的。您可以在作为第二个参数传递给 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; 方法的对象中设置 &lt;code&gt;&lt;a href=&quot;../api/router/extraoptions#enableTracing&quot;&gt;enableTracing&lt;/a&gt;: true&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="05239027809e9357cdeac1b33f2e9f9ad3528fa3" translate="yes" xml:space="preserve">
          <source>If you neglect to &lt;code&gt;subscribe()&lt;/code&gt;, the service will not send the delete request to the server. As a rule, an &lt;code&gt;Observable&lt;/code&gt;&lt;em&gt;does nothing&lt;/em&gt; until something subscribes.</source>
          <target state="translated">如果您忽略了 &lt;code&gt;subscribe()&lt;/code&gt; ，则该服务不会将删除请求发送到服务器。通常， &lt;code&gt;Observable&lt;/code&gt; &lt;em&gt;在&lt;/em&gt;订阅某些&lt;em&gt;内容&lt;/em&gt;之前&lt;em&gt;不执行任何操作&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2bb56c6624ae91a5bea7e0fafc4658c9a36bf145" translate="yes" xml:space="preserve">
          <source>If you neglect to declare them, the Angular compiler won't recognize the &lt;code&gt;&amp;lt;app-banner&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;app-welcome&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; tags in the &lt;code&gt;AppComponent&lt;/code&gt; template and will throw an error.</source>
          <target state="translated">如果您忽略声明它们，则Angular编译器将无法识别 &lt;code&gt;AppComponent&lt;/code&gt; 模板中的 &lt;code&gt;&amp;lt;app-banner&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;app-welcome&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; 标签，并会引发错误。</target>
        </trans-unit>
        <trans-unit id="71dab46c6a678dfa01d392650ea86b654326f74b" translate="yes" xml:space="preserve">
          <source>If you neglect to make the test function async (e.g., forget to use &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; as described below), you'll see this error message</source>
          <target state="translated">如果您忽略使测试函数异步（例如，如下所述忘记使用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; ），则会看到此错误消息</target>
        </trans-unit>
        <trans-unit id="f4864022129ceef9f74cba424383807e7e0f747d" translate="yes" xml:space="preserve">
          <source>If you neglect to make the test function async (e.g., forget to use &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; as described below), you'll see this error message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dafb68babd363c5daa6a75a57bc8244a72755a1" translate="yes" xml:space="preserve">
          <source>If you notice that the size of your application's main bundle has increased with Ivy, you may want to check the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16062c9a5d0f73bb6c757b4c2accd4e8ddb5ef7" translate="yes" xml:space="preserve">
          <source>If you now add &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; (in addition to the &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt;) to the &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; of the &lt;code&gt;FlowerService&lt;/code&gt;, the result will be &lt;code&gt;null&lt;/code&gt;. This is because &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; limits the upper bound of the search to the &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;. Here's the idea in the logical tree:</source>
          <target state="translated">如果你现在添加 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; （除 &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; ）到 &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; 的的 &lt;code&gt;FlowerService&lt;/code&gt; ，结果将是 &lt;code&gt;null&lt;/code&gt; 。这是因为 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 将搜索的上限限制为 &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; 。这是逻辑树中的想法：</target>
        </trans-unit>
        <trans-unit id="bad60c66209070a16ad3d561eadc496aed10c245" translate="yes" xml:space="preserve">
          <source>If you opt out of Ivy and your application uses &lt;a href=&quot;universal&quot;&gt;Angular Universal&lt;/a&gt; to render Angular applications on the server, you must also change the way the server performs bootstrapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d30c47f20d917822d2488c8b61db4df77908bc" translate="yes" xml:space="preserve">
          <source>If you pass the command a set of libraries to update (or the &lt;code&gt;--all&lt;/code&gt; flag), it updates those libraries, their peer dependencies, and the peer dependencies that depend on them.</source>
          <target state="translated">如果您向命令传递一组要更新的库（或 &lt;code&gt;--all&lt;/code&gt; 标志），它将更新这些库，它们的对等依赖项以及依赖于它们的对等依赖项。</target>
        </trans-unit>
        <trans-unit id="1bea4d710733901849b05721b28d48be60b80605" translate="yes" xml:space="preserve">
          <source>If you paste &lt;code&gt;localhost:4200/detail/11&lt;/code&gt; in the browser address bar, the router navigates to the detail view for the hero with &lt;code&gt;id: 11&lt;/code&gt;, &quot;Dr Nice&quot;.</source>
          <target state="translated">如果将 &lt;code&gt;localhost:4200/detail/11&lt;/code&gt; 粘贴到浏览器地址栏中，则路由器将导航到 &lt;code&gt;id: 11&lt;/code&gt; 的英雄&amp;ldquo; Dr Nice&amp;rdquo; 的英雄的详细视图。</target>
        </trans-unit>
        <trans-unit id="b16393ced398a24e5cb38175dcbb00a542ed2e61" translate="yes" xml:space="preserve">
          <source>If you plan to have multiple applications in the workspace, you can create an empty workspace by setting the &lt;code&gt;--createApplication&lt;/code&gt; option to false. You can then use &lt;code&gt;ng generate application&lt;/code&gt; to create an initial application. This allows a workspace name different from the initial app name, and ensures that all applications reside in the &lt;code&gt;/projects&lt;/code&gt; subfolder, matching the structure of the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f498a38745493c47fdb50885cc56ca61f9d272" translate="yes" xml:space="preserve">
          <source>If you plan to have multiple apps in the workspace, you can create an empty workspace by setting the &lt;code&gt;--createApplication&lt;/code&gt; option to false. You can then use &lt;code&gt;ng generate application&lt;/code&gt; to create an initial app. This allows a workspace name different from the initial app name, and ensures that all apps reside in the &lt;code&gt;/projects&lt;/code&gt; subfolder, matching the structure of the configuration file.</source>
          <target state="translated">如果计划在工作空间中有多个应用程序，则可以通过将 &lt;code&gt;--createApplication&lt;/code&gt; 选项设置为false 来创建一个空的工作空间。然后，您可以使用 &lt;code&gt;ng generate application&lt;/code&gt; 创建一个初始应用程序。这允许工作空间名称不同于初始应用程序名称，并确保所有应用程序都驻留在 &lt;code&gt;/projects&lt;/code&gt; 子文件夹中，与配置文件的结构匹配。</target>
        </trans-unit>
        <trans-unit id="2c9da46a1c1c85d39407dcd30d927647ba079020" translate="yes" xml:space="preserve">
          <source>If you plan to use specific animation functions in component files, import those functions from &lt;code&gt;@angular/animations&lt;/code&gt;.</source>
          <target state="translated">如果打算在组件文件中使用特定的动画功能，请从 &lt;code&gt;@angular/animations&lt;/code&gt; 导入这些功能。</target>
        </trans-unit>
        <trans-unit id="058a384d58caba78f973912e1c7261709321db73" translate="yes" xml:space="preserve">
          <source>If you prefer a &lt;code&gt;File | New Project&lt;/code&gt; experience and are using &lt;strong&gt;ASP.NET Core&lt;/strong&gt;, then consider the &lt;em&gt;experimental&lt;/em&gt;&lt;a href=&quot;http://blog.stevensanderson.com/2016/10/04/angular2-template-for-visual-studio/&quot;&gt;ASP.NET Core + Angular template for Visual Studio 2015&lt;/a&gt;. Note that the resulting code does not map to the docs. Adjust accordingly.</source>
          <target state="translated">如果您喜欢 &lt;code&gt;File | New Project&lt;/code&gt; 经验并正在使用&lt;strong&gt;ASP.NET Core&lt;/strong&gt;，然后考虑&lt;a href=&quot;http://blog.stevensanderson.com/2016/10/04/angular2-template-for-visual-studio/&quot;&gt;针对Visual Studio 2015&lt;/a&gt;的&lt;em&gt;实验性&lt;/em&gt;ASP.NET Core + Angular模板。请注意，生成的代码不会映射到文档。相应地调整。</target>
        </trans-unit>
        <trans-unit id="40537ceb386711b8d7aebae59078f6588b332d47" translate="yes" xml:space="preserve">
          <source>If you provided &lt;code&gt;VillainsService&lt;/code&gt; in the root &lt;code&gt;AppModule&lt;/code&gt; (where you registered the &lt;code&gt;HeroesService&lt;/code&gt;), that would make the &lt;code&gt;VillainsService&lt;/code&gt; visible everywhere in the application, including the &lt;em&gt;Hero&lt;/em&gt; workflows. If you later modified the &lt;code&gt;VillainsService&lt;/code&gt;, you could break something in a hero component somewhere.</source>
          <target state="translated">如果您在根目录 &lt;code&gt;AppModule&lt;/code&gt; 中提供了 &lt;code&gt;VillainsService&lt;/code&gt; （在其中注册了 &lt;code&gt;HeroesService&lt;/code&gt; ），这将使 &lt;code&gt;VillainsService&lt;/code&gt; 在应用程序中的所有位置（包括&lt;em&gt;Hero&lt;/em&gt;工作流程）都可见。如果以后修改了 &lt;code&gt;VillainsService&lt;/code&gt; ，则可以在某个英雄组件中破坏某些内容。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="34e894d4b2433bfdb374e1411f1d2796623ea1fa" translate="yes" xml:space="preserve">
          <source>If you ran the app now and started typing in the &lt;em&gt;Name&lt;/em&gt; input box, adding and deleting characters, you'd see them appear and disappear from the interpolated text. At some point it might look like this:</source>
          <target state="translated">如果您现在运行该应用程序并开始在&amp;ldquo; &lt;em&gt;名称&amp;rdquo;&lt;/em&gt;输入框中键入内容，添加和删除字符，则会看到它们出现在插补文本中并从中消失。在某些时候它可能看起来像这样：</target>
        </trans-unit>
        <trans-unit id="32f30f3a80132757d89d194ab176d54b3533a611" translate="yes" xml:space="preserve">
          <source>If you register global service providers or share providers across multiple NgModules, use the &lt;a href=&quot;singleton-services&quot;&gt;&lt;code&gt;forRoot()&lt;/code&gt; and &lt;code&gt;forChild()&lt;/code&gt; design patterns&lt;/a&gt; provided by the &lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef190ef5d0b1e7b6837c2e3d11da6d23edc990e" translate="yes" xml:space="preserve">
          <source>If you register global service providers or share providers across multiple NgModules, use the &lt;a href=&quot;singleton-services&quot;&gt;&lt;code&gt;forRoot()&lt;/code&gt; and &lt;code&gt;forChild()&lt;/code&gt; patterns&lt;/a&gt; provided by the &lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;.</source>
          <target state="translated">如果您在多个NgModules注册全球服务供应商或供应商共享，使用&lt;a href=&quot;singleton-services&quot;&gt; &lt;code&gt;forRoot()&lt;/code&gt; 和 &lt;code&gt;forChild()&lt;/code&gt; 模式&lt;/a&gt;由提供&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e78fb432ea926eaccd578fd4c24d9a2cfa237ad" translate="yes" xml:space="preserve">
          <source>If you rely on the behavior that the same object instance should cause change detection, you have two options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd4700cea7271c0c90205b90dda623d6197e16f" translate="yes" xml:space="preserve">
          <source>If you restore the &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; decorator and comment out &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;&lt;/code&gt;, the app throws an exception when it cannot find the required logger at the host component level.</source>
          <target state="translated">如果还原 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; 装饰器并注释掉 &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;&lt;/code&gt; ，则该应用程序在主机组件级别找不到所需的记录器时将引发异常。</target>
        </trans-unit>
        <trans-unit id="33bb5c55ad4aa9d09fe4482cd02e6d0fd59b9479" translate="yes" xml:space="preserve">
          <source>If you run other &lt;code&gt;macroTask&lt;/code&gt; such as &lt;code&gt;HTMLCanvasElement.toBlob()&lt;/code&gt;, &lt;code&gt;Unknown macroTask scheduled in fake &lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt; test&lt;/code&gt; error will be thrown.</source>
          <target state="translated">如果您运行其他 &lt;code&gt;macroTask&lt;/code&gt; ,例如 &lt;code&gt;HTMLCanvasElement.toBlob()&lt;/code&gt; ，则将抛出 &lt;code&gt;Unknown macroTask scheduled in fake &lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt; test&lt;/code&gt; 错误中调度的未知macroTask。</target>
        </trans-unit>
        <trans-unit id="37c45632d720c861eb9466ce577279a844106c86" translate="yes" xml:space="preserve">
          <source>If you run other macro tasks such as &lt;code&gt;HTMLCanvasElement.toBlob()&lt;/code&gt;, an &lt;em&gt;&quot;Unknown macroTask scheduled in fake async test&quot;&lt;/em&gt; error will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9f75108fc42c095c35521bcb513aee44b2b9d0" translate="yes" xml:space="preserve">
          <source>If you run tests in a &lt;strong&gt;non-CLI environment&lt;/strong&gt;, the tests may fail with a message like this one:</source>
          <target state="translated">如果您在&lt;strong&gt;非CLI环境中&lt;/strong&gt;运行测试，则测试可能会失败，并显示以下消息：</target>
        </trans-unit>
        <trans-unit id="d43bbf23fa3e23d5c174913c8419dd08b9a38280" translate="yes" xml:space="preserve">
          <source>If you run the app now and change every hero model property, the form might display like this:</source>
          <target state="translated">如果你现在运行应用程序并更改每个英雄模型属性,表单可能会这样显示。</target>
        </trans-unit>
        <trans-unit id="d950e9a165ba31caa3f90eca764582f6ada8b451" translate="yes" xml:space="preserve">
          <source>If you run the app right now, you see the list of powers in the selection control. The input elements are not yet bound to data values or events, so they are still blank and have no behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b31d00b7e322159d3096cefef0ef38c3b1e7fc" translate="yes" xml:space="preserve">
          <source>If you run the application now, you find that the button is enabled&amp;mdash;although it doesn't do anything useful yet.</source>
          <target state="translated">如果立即运行该应用程序，您会发现该按钮已启用-尽管它尚无用。</target>
        </trans-unit>
        <trans-unit id="27b6400e05079e321c67fb69ac2f1ea5f2e11f6d" translate="yes" xml:space="preserve">
          <source>If you set the &lt;code&gt;OnPush&lt;/code&gt; (&quot;CheckOnce&quot;) change-detection strategy, the change detector runs only when &lt;a href=&quot;../api/core/changedetectorref&quot;&gt;explicitly invoked&lt;/a&gt;, or when it is triggered by an &lt;code&gt;&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; reference change or event handler. This typically improves performance. For more information, see &lt;a href=&quot;https://web.dev/faster-angular-change-detection/&quot;&gt;Optimize Angular's change detection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b574c62b73c7ab82961bbe1d311a4be5bc48ca" translate="yes" xml:space="preserve">
          <source>If you still have issues after troubleshooting with these flags, you can fall back to full mode by disabling &lt;code&gt;strictTemplates&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afbfd71a7b0f3746a5b9d786267c74b5e8c9f70" translate="yes" xml:space="preserve">
          <source>If you tell the router to navigate to the detail component and display &quot;Magneta&quot;, you expect a hero id to appear in the browser URL like this:</source>
          <target state="translated">如果你告诉路由器导航到详细组件并显示 &quot;Magneta&quot;,你希望在浏览器URL中出现一个英雄ID,像这样。</target>
        </trans-unit>
        <trans-unit id="8dddbeadfd16ceb49ed31d2988e2ee1b9782e74c" translate="yes" xml:space="preserve">
          <source>If you think you'll reuse this debouncing logic, consider moving it to a utility function or into the &lt;code&gt;PackageSearchService&lt;/code&gt; itself.</source>
          <target state="translated">如果您认为您将重用此反跳逻辑，请考虑将其移至实用程序函数或 &lt;code&gt;PackageSearchService&lt;/code&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="d7a151abe2fd8d0a7aaa7a6bd6a8df4082f73f7c" translate="yes" xml:space="preserve">
          <source>If you throttle your network speed so that the client-side scripts take longer to download (instructions below), you'll notice:</source>
          <target state="translated">如果你节制网速,使客户端脚本的下载时间更长(说明如下),你会发现。</target>
        </trans-unit>
        <trans-unit id="92b0949b67e72c8422501e07cc4ce8c75521a33c" translate="yes" xml:space="preserve">
          <source>If you try to alias &lt;code&gt;OldLogger&lt;/code&gt; to &lt;code&gt;NewLogger&lt;/code&gt; with &lt;code&gt;useClass&lt;/code&gt;, you end up with two different &lt;code&gt;NewLogger&lt;/code&gt; instances in your app.</source>
          <target state="translated">如果尝试使用 &lt;code&gt;OldLogger&lt;/code&gt; 将 &lt;code&gt;NewLogger&lt;/code&gt; 别名为NewLogger， &lt;code&gt;useClass&lt;/code&gt; 最终在应用程序中 &lt;code&gt;NewLogger&lt;/code&gt; 两个不同的NewLogger实例。</target>
        </trans-unit>
        <trans-unit id="b1333d31e83b576427ff734b7c88ade3261f5d51" translate="yes" xml:space="preserve">
          <source>If you upgrade this component and use it from Angular, you can populate the component tag with contents that will then get transcluded:</source>
          <target state="translated">如果你升级了这个组件,并从Angular使用它,你可以用内容填充组件标签,然后将得到转包。</target>
        </trans-unit>
        <trans-unit id="5229aaba988a521b48efab8fecc2aefe3f2fe23e" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;NgFor&lt;/code&gt; with large lists, a small change to one item, such as removing or adding an item, can trigger a cascade of DOM manipulations. For example, re-querying the server could reset a list with all new item objects, even when those items were previously displayed. In this case, Angular sees only a fresh list of new object references and has no choice but to replace the old DOM elements with all new DOM elements.</source>
          <target state="translated">如果将 &lt;code&gt;NgFor&lt;/code&gt; 与大型列表一起使用，则对一项的较小更改（例如删除或添加一项）可能会触发一系列DOM操作。例如，重新查询服务器可能会重置一个包含所有新项目对象的列表，即使先前已显示这些项目也是如此。在这种情况下，Angular只能看到新的对象引用的新鲜列表，别无选择，只能用所有新的DOM元素替换旧的DOM元素。</target>
        </trans-unit>
        <trans-unit id="a75130a39257f6837aa70edb1e7ee3064bb9921f" translate="yes" xml:space="preserve">
          <source>If you use dynamic values to generate the link, you can pass an array of path segments, followed by the params for each segment.</source>
          <target state="translated">如果你使用动态值来生成链接,你可以传递一个路径段的数组,然后是每个段的参数。</target>
        </trans-unit>
        <trans-unit id="95db25e1e7afc248a2cd0fe9b287c943fda5d02b" translate="yes" xml:space="preserve">
          <source>If you use the &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; to generate an app, the default &lt;code&gt;AppModule&lt;/code&gt; is as follows:</source>
          <target state="translated">如果使用&lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;生成应用，则默认 &lt;code&gt;AppModule&lt;/code&gt; 如下：</target>
        </trans-unit>
        <trans-unit id="a6967c4ab3b314fa46aff194dc20ed6a9dd2b60b" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()/&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; helper function to run unit tests (for details, read the &lt;a href=&quot;testing#async-test-with-fakeasync&quot;&gt;Testing guide&lt;/a&gt;), you need to import &lt;code&gt;zone.js/dist/zone-testing&lt;/code&gt; in your test setup file.</source>
          <target state="translated">如果使用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()/&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; 帮助程序函数运行单元测试（有关详细信息，请参阅&amp;ldquo; &lt;a href=&quot;testing#async-test-with-fakeasync&quot;&gt;测试指南&amp;rdquo;&lt;/a&gt;），则需要在测试设置文件中导入 &lt;code&gt;zone.js/dist/zone-testing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="033eb7a2799b446ce985cbf252d18f61a08af7e8" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()/&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; helper function to run unit tests (for details, read the &lt;a href=&quot;testing-components-scenarios#fake-async&quot;&gt;Testing guide&lt;/a&gt;), you need to import &lt;code&gt;zone.js/dist/zone-testing&lt;/code&gt; in your test setup file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72f1ab9aecc24257c6414e938470c94360b2550" translate="yes" xml:space="preserve">
          <source>If you use the Angular CLI, configure this flag in &lt;code&gt;src/test.ts&lt;/code&gt;.</source>
          <target state="translated">如果使用Angular CLI，请在 &lt;code&gt;src/test.ts&lt;/code&gt; 中配置此标志。</target>
        </trans-unit>
        <trans-unit id="6d271b502194e43198b4eb10238cbab362121ae6" translate="yes" xml:space="preserve">
          <source>If you use the JIT compiler, specify the warning level in the compiler config at bootstrap by adding the 'MissingTranslationStrategy' property. The example below shows how to set the warning level to error.</source>
          <target state="translated">如果你使用JIT编译器,在bootstrap的编译器配置中通过添加'MissingTranslationStrategy'属性来指定警告级别。下面的例子展示了如何将警告级别设置为错误。</target>
        </trans-unit>
        <trans-unit id="ce978a5f13cee676ff853adc3785a5db0dc00166" translate="yes" xml:space="preserve">
          <source>If you use the following deprecated i18n pipes: &lt;a href=&quot;../api/common/deprecateddatepipe&quot;&gt;date&lt;/a&gt;, &lt;a href=&quot;../api/common/deprecatedcurrencypipe&quot;&gt;currency&lt;/a&gt;, &lt;a href=&quot;../api/common/deprecateddecimalpipe&quot;&gt;decimal&lt;/a&gt;, &lt;a href=&quot;../api/common/deprecatedpercentpipe&quot;&gt;percent&lt;/a&gt;</source>
          <target state="translated">如果您使用以下不推荐使用的i18n管道：&lt;a href=&quot;../api/common/deprecateddatepipe&quot;&gt;日期&lt;/a&gt;，&lt;a href=&quot;../api/common/deprecatedcurrencypipe&quot;&gt;货币&lt;/a&gt;，&lt;a href=&quot;../api/common/deprecateddecimalpipe&quot;&gt;十进制&lt;/a&gt;，&lt;a href=&quot;../api/common/deprecatedpercentpipe&quot;&gt;百分比&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a047e1b38f5fe9531800dc758286f59e23bce528" translate="yes" xml:space="preserve">
          <source>If you view your application in the browser, you should see these two links. When you click on a link, the corresponding component appears.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bd37b0cb03c780077913bd95b8118fa17a9f1d" translate="yes" xml:space="preserve">
          <source>If you want &lt;code&gt;ngc&lt;/code&gt; to report syntax errors immediately rather than produce a &lt;code&gt;.metadata.json&lt;/code&gt; file with errors, set the &lt;code&gt;strictMetadataEmit&lt;/code&gt; option in the TypeScript configuration file, &lt;code&gt;tsconfig.json&lt;/code&gt;.</source>
          <target state="translated">如果要 &lt;code&gt;ngc&lt;/code&gt; 立即报告语法错误，而不是生成带有错误的 &lt;code&gt;.metadata.json&lt;/code&gt; 文件，请在TypeScript配置文件 &lt;code&gt;tsconfig.json&lt;/code&gt; 中设置 &lt;code&gt;strictMetadataEmit&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="c2fa45246f68238edb8ee3d51625ac4a281cc12a" translate="yes" xml:space="preserve">
          <source>If you want &lt;code&gt;ngc&lt;/code&gt; to report syntax errors immediately rather than produce a &lt;code&gt;.metadata.json&lt;/code&gt; file with errors, set the &lt;code&gt;strictMetadataEmit&lt;/code&gt; option in the TypeScript configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9181cff9d2f0ac3faceb9204a24748172c73f1ab" translate="yes" xml:space="preserve">
          <source>If you want a particular piece of code to trigger change detection in the AngularJS part of the app, you need to wrap it in &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/%24rootScope.Scope#%24apply&quot;&gt;scope.$apply()&lt;/a&gt;. Similarly, for triggering change detection in Angular you would use &lt;a href=&quot;../api/core/ngzone#run&quot;&gt;ngZone.run()&lt;/a&gt;.</source>
          <target state="translated">如果要在应用程序的AngularJS部分中触发特定代码来检测更改，则需要将其包装在&lt;a href=&quot;https://docs.angularjs.org/api/ng/type/%24rootScope.Scope#%24apply&quot;&gt;scope。$ apply（）中&lt;/a&gt;。同样，要在Angular中触发更改检测，可以使用&lt;a href=&quot;../api/core/ngzone#run&quot;&gt;ngZone.run（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c3fae0cd6000e2662a9b617f542c44356a243f5" translate="yes" xml:space="preserve">
          <source>If you want changes to persist, you must write them back to the server.</source>
          <target state="translated">如果你想让更改持久化,你必须把它们写回服务器。</target>
        </trans-unit>
        <trans-unit id="52bcde3eec9eaea3236dc449439b8e942dbe703e" translate="yes" xml:space="preserve">
          <source>If you want some injectables to be shared among all downgraded modules, you can provide them as &lt;code&gt;&lt;a href=&quot;../../core/staticprovider&quot;&gt;StaticProvider&lt;/a&gt;&lt;/code&gt;s, when creating the &lt;code&gt;&lt;a href=&quot;../../core/platformref&quot;&gt;PlatformRef&lt;/a&gt;&lt;/code&gt; (e.g. via &lt;code&gt;&lt;a href=&quot;../../platform-browser/platformbrowser&quot;&gt;platformBrowser&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../../platform-browser-dynamic/platformbrowserdynamic&quot;&gt;platformBrowserDynamic&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">如果要在所有降级的模块之间共享某些可注入对象，则可以在创建 &lt;code&gt;&lt;a href=&quot;../../core/platformref&quot;&gt;PlatformRef&lt;/a&gt;&lt;/code&gt; 时（例如，通过 &lt;code&gt;&lt;a href=&quot;../../platform-browser/platformbrowser&quot;&gt;platformBrowser&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../../platform-browser-dynamic/platformbrowserdynamic&quot;&gt;platformBrowserDynamic&lt;/a&gt;&lt;/code&gt; ）将它们作为 &lt;code&gt;&lt;a href=&quot;../../core/staticprovider&quot;&gt;StaticProvider&lt;/a&gt;&lt;/code&gt; 提供。</target>
        </trans-unit>
        <trans-unit id="05f65a50533a43590941f359728f24c16a80ebbd" translate="yes" xml:space="preserve">
          <source>If you want to create code-coverage reports every time you test, you can set the following option in the CLI configuration file, &lt;code&gt;angular.json&lt;/code&gt;:</source>
          <target state="translated">如果要在每次测试时创建代码覆盖率报告，则可以在CLI配置文件 &lt;code&gt;angular.json&lt;/code&gt; 中设置以下选项：</target>
        </trans-unit>
        <trans-unit id="7751b871f96409ec0fd06919c70ee1e168709cf2" translate="yes" xml:space="preserve">
          <source>If you want to execute something when the app is stable, you have to wait for the application to be stable before starting your polling process.</source>
          <target state="translated">如果你想在应用稳定的时候执行一些东西,你必须等待应用稳定后再开始你的投票过程。</target>
        </trans-unit>
        <trans-unit id="72f364ed3fa3f7c00f99fac9b35717046eda7479" translate="yes" xml:space="preserve">
          <source>If you want to import locale data for other languages, you can do it manually:</source>
          <target state="translated">如果你想导入其他语言的locale数据,你可以手动进行。</target>
        </trans-unit>
        <trans-unit id="4f8bd9d90c1d0e27214fa6232ead13c884e44f0f" translate="yes" xml:space="preserve">
          <source>If you want to manage NgModule loading and the use of dependencies and services, see the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c4888fd74929044c99840ccfb42fc5c433838a" translate="yes" xml:space="preserve">
          <source>If you want to preload a module &lt;em&gt;and&lt;/em&gt; guard against unauthorized access, drop the &lt;code&gt;&lt;a href=&quot;../api/router/route#canLoad&quot;&gt;canLoad&lt;/a&gt;()&lt;/code&gt; guard method and rely on the &lt;a href=&quot;router#can-activate-guard&quot;&gt;canActivate()&lt;/a&gt; guard alone.</source>
          <target state="translated">如果要预加载模块&lt;em&gt;并&lt;/em&gt;防止未经授权的访问，请删除 &lt;code&gt;&lt;a href=&quot;../api/router/route#canLoad&quot;&gt;canLoad&lt;/a&gt;()&lt;/code&gt; 保护方法，并单独依赖&lt;a href=&quot;router#can-activate-guard&quot;&gt;canActivate（）&lt;/a&gt;保护。</target>
        </trans-unit>
        <trans-unit id="1bd8c04744a232665205b0d8c9ce098c53ab9cba" translate="yes" xml:space="preserve">
          <source>If you want to preload a module as well as guard against unauthorized access, remove the &lt;code&gt;canLoad()&lt;/code&gt; guard method and rely on the &lt;a href=&quot;router-tutorial-toh#can-activate-guard&quot;&gt;canActivate()&lt;/a&gt; guard alone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e574770511b728920629db82475c655722befaa3" translate="yes" xml:space="preserve">
          <source>If you want to produce a progressive web app and are using &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;Lighthouse&lt;/a&gt; to grade the project, add the following &lt;code&gt;browserslist&lt;/code&gt; entry to your &lt;code&gt;package.json&lt;/code&gt; file, in order to eliminate the &lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/old-flexbox&quot;&gt;old flexbox&lt;/a&gt; prefixes:</source>
          <target state="translated">如果要生成一个渐进式Web应用程序并使用&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/&quot;&gt;Lighthouse&lt;/a&gt;对项目进行评分，请在您的 &lt;code&gt;package.json&lt;/code&gt; 文件中添加以下 &lt;code&gt;browserslist&lt;/code&gt; 条目，以消除&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse/audits/old-flexbox&quot;&gt;旧的flexbox&lt;/a&gt;前缀：</target>
        </trans-unit>
        <trans-unit id="9654c2a4c45b0218af8cbaae154038e0b00ad445" translate="yes" xml:space="preserve">
          <source>If you want to run ES5 code during development, you could disable differential loading completely. To maintain the benefits of differential loading, however, a better option is to define multiple configurations for &lt;code&gt;ng serve&lt;/code&gt;, &lt;code&gt;ng e2e&lt;/code&gt;, and &lt;code&gt;ng test&lt;/code&gt;.</source>
          <target state="translated">如果要在开发期间运行ES5代码，则可以完全禁用差异加载。但是，为了保持差异加载的好处，更好的选择是为 &lt;code&gt;ng serve&lt;/code&gt; ， &lt;code&gt;ng e2e&lt;/code&gt; 和 &lt;code&gt;ng test&lt;/code&gt; 定义多个配置。</target>
        </trans-unit>
        <trans-unit id="5d7009f42e7627d060101333c56524a2c640bb2d" translate="yes" xml:space="preserve">
          <source>If you want to support such a case, you need to define the &lt;code&gt;macroTask&lt;/code&gt; you want to support in &lt;code&gt;beforeEach()&lt;/code&gt;. For example:</source>
          <target state="translated">如果你想支持这种情况下，你需要定义 &lt;code&gt;macroTask&lt;/code&gt; 要在支持 &lt;code&gt;beforeEach()&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="1b56e40098d70369a4d83fcac231ca5af8aa5cce" translate="yes" xml:space="preserve">
          <source>If you want to support such a case, you need to define the macro task you want to support in &lt;code&gt;beforeEach()&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2764b90b69b4cf903c2c31d61b196574003141d" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;strictTemplates&lt;/code&gt; and &lt;code&gt;strictNullChecks&lt;/code&gt; together, you can opt out of strict null type checking specifically for input bindings via &lt;code&gt;strictNullInputTypes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c98ab8bb06c1699ee5d9fd496aa7660ad732c8b" translate="yes" xml:space="preserve">
          <source>If you want to use this component from AngularJS, you need to &lt;em&gt;downgrade&lt;/em&gt; it using the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; method. The result is an AngularJS &lt;em&gt;directive&lt;/em&gt;, which you can then register in the AngularJS module:</source>
          <target state="translated">如果你想使用AngularJS这个组件，你需要&lt;em&gt;降级&lt;/em&gt;使用它 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; 方法。结果是AngularJS &lt;em&gt;指令&lt;/em&gt;，您可以在AngularJS模块中注册该&lt;em&gt;指令&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="d09a0a0eb3acca8806d03b8b527badb4d19f0b41" translate="yes" xml:space="preserve">
          <source>If you want your template to span multiple lines, you can use backticks (&lt;code&gt; ` &lt;/code&gt;). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb183e6a6ca4b3daf2ebb1dcb39b4bdc36e09a2" translate="yes" xml:space="preserve">
          <source>If you wanted to, you could redefine the &lt;code&gt;AppComponent&lt;/code&gt; template with &lt;em&gt;Crisis Center&lt;/em&gt; routes exclusively:</source>
          <target state="translated">如果需要，您可以专门使用&lt;em&gt;Crisis Center&lt;/em&gt;路由重新定义 &lt;code&gt;AppComponent&lt;/code&gt; 模板：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf62d295b1f1f68706351f1e160a6f3ac4994401" translate="yes" xml:space="preserve">
          <source>If you were to replace &lt;code&gt;useExisting&lt;/code&gt; with &lt;code&gt;useClass&lt;/code&gt;, then you&amp;rsquo;d be registering a new class instance, one that doesn&amp;rsquo;t have a &lt;code&gt;forbiddenName&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a47d1cb386ad250a0bc5d99819cbf7f3ff10e68" translate="yes" xml:space="preserve">
          <source>If you were translating to other languages, you would repeat these steps for each target language.</source>
          <target state="translated">如果您要翻译成其他语言,您需要为每种目标语言重复这些步骤。</target>
        </trans-unit>
        <trans-unit id="acd7dfd6b09abe0f861b08835a3b16b4feaacf7e" translate="yes" xml:space="preserve">
          <source>If you were using a real world API, there might be some delay before the data to display is returned from the server. You don't want to display a blank component while waiting for the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9374a8c08fe1c474c361e4aaa7e0f9b479d03bd7" translate="yes" xml:space="preserve">
          <source>If you work behind a corporate proxy, the backend cannot directly proxy calls to any URL outside your local network. In this case, you can configure the backend proxy to redirect calls through your corporate proxy using an agent:</source>
          <target state="translated">如果您在企业代理后工作,后台不能直接代理呼叫到本地网络之外的任何URL。在这种情况下,您可以配置后端代理,通过企业代理使用代理重定向呼叫。</target>
        </trans-unit>
        <trans-unit id="2391ba640bc65fc5eb8023b8dd979ece264d84dd" translate="yes" xml:space="preserve">
          <source>If you write &lt;code&gt;&amp;lt;map [city]=&quot;user.address.city&quot;&amp;gt;&lt;/code&gt;, the compiler verifies the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d0a113abd4c3fccdbb49cb154c353de7ca8ffc" translate="yes" xml:space="preserve">
          <source>If you wrote something like this:</source>
          <target state="translated">如果你写了这样的东西。</target>
        </trans-unit>
        <trans-unit id="21014f48c5ba788700f412d0e8fe50ad6d65a568" translate="yes" xml:space="preserve">
          <source>If you'd like to use something other than &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;, you can configure the interpolation delimiter via the &lt;a href=&quot;../api/core/component#interpolation&quot;&gt;interpolation&lt;/a&gt; option in the &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata.</source>
          <target state="translated">如果您想使用 &lt;code&gt;{{&lt;/code&gt; 和 &lt;code&gt;}}&lt;/code&gt; 以外的名称，则可以通过 &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 元数据中的&lt;a href=&quot;../api/core/component#interpolation&quot;&gt;插值&lt;/a&gt;选项配置插值定界符。</target>
        </trans-unit>
        <trans-unit id="bf74ecdbbfc67de6df0331823b22e879c6590cb2" translate="yes" xml:space="preserve">
          <source>If you're building with the CLI, you can write style files in &lt;a href=&quot;http://sass-lang.com/&quot;&gt;sass&lt;/a&gt;, &lt;a href=&quot;http://lesscss.org/&quot;&gt;less&lt;/a&gt;, or &lt;a href=&quot;http://stylus-lang.com/&quot;&gt;stylus&lt;/a&gt; and specify those files in the &lt;code&gt;@&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;Component.styleUrls&lt;/a&gt;&lt;/code&gt; metadata with the appropriate extensions (&lt;code&gt;.scss&lt;/code&gt;, &lt;code&gt;.less&lt;/code&gt;, &lt;code&gt;.styl&lt;/code&gt;) as in the following example:</source>
          <target state="translated">如果您正在构建与CLI，您可以编写样式文件中的&lt;a href=&quot;http://sass-lang.com/&quot;&gt;青菜&lt;/a&gt;，&lt;a href=&quot;http://lesscss.org/&quot;&gt;少&lt;/a&gt;，或&lt;a href=&quot;http://stylus-lang.com/&quot;&gt;手写笔&lt;/a&gt;，并指定这些文件 &lt;code&gt;@&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;Component.styleUrls&lt;/a&gt;&lt;/code&gt; 用适当的扩展名（元数据 &lt;code&gt;.scss&lt;/code&gt; ， &lt;code&gt;.less&lt;/code&gt; ， &lt;code&gt;.styl&lt;/code&gt; ）如以下例：</target>
        </trans-unit>
        <trans-unit id="e80d11e637a28a96a2ac8d8109c31270514af284" translate="yes" xml:space="preserve">
          <source>If you're completely new to Angular, you might want to try the &lt;a href=&quot;https://angular.io/start&quot;&gt;&lt;strong&gt;Try it now&lt;/strong&gt;&lt;/a&gt; quick-start app first. It is based on a ready-made partially-completed project, which you can examine and modify in the StackBlitz interactive development environment, where you can see the results in real time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72a02ff92e827a8fbee6caf4e7a5b90fac5a766" translate="yes" xml:space="preserve">
          <source>If you're deploying to a self-managed server or there's no builder for your favorite cloud platform, you can either create a builder that allows you to use the &lt;code&gt;ng deploy&lt;/code&gt; command, or read through this guide to learn how to manually deploy your app.</source>
          <target state="translated">如果要部署到自助式服务器上，或者没有针对自己喜欢的云平台的构建器，则可以创建允许您使用 &lt;code&gt;ng deploy&lt;/code&gt; 命令的构建器，或者通读本指南以了解如何手动部署应用程序。</target>
        </trans-unit>
        <trans-unit id="6ef5fa39f7f818bc7d60070f619114bc8c792d6e" translate="yes" xml:space="preserve">
          <source>If you're following along with these code snippets, note that you must import the RxJS observable and operator symbols that appear in those snippets. These &lt;code&gt;ConfigService&lt;/code&gt; imports are typical.</source>
          <target state="translated">如果要遵循这些代码段，请注意，必须导入出现在这些代码段中的RxJS可观察符号和运算符。这些 &lt;code&gt;ConfigService&lt;/code&gt; 导入是典型的。</target>
        </trans-unit>
        <trans-unit id="5621695378eed2b9f2b258f1815ee171408f7b7e" translate="yes" xml:space="preserve">
          <source>If you're just reading this tutorial to learn about &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;, you can &lt;a href=&quot;toh-pt6#import-heroes&quot;&gt;skip over&lt;/a&gt; this step. If you're coding along with this tutorial, stay here and add the In-memory Web API now.</source>
          <target state="translated">如果您只是在阅读本教程以了解 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; ，则可以&lt;a href=&quot;toh-pt6#import-heroes&quot;&gt;跳过&lt;/a&gt;此步骤。如果您与本教程一起编码，请留在这里并立即添加内存Web API。</target>
        </trans-unit>
        <trans-unit id="8c2b83a475d5fdd415759000ce764903884f7b3b" translate="yes" xml:space="preserve">
          <source>If you're new to Angular, see the &lt;a href=&quot;https://angular.io/start&quot;&gt;&lt;strong&gt;Getting Started tutorial.&lt;/strong&gt;&lt;/a&gt; The Getting Started tutorial covers the same major topics as this Tour of Heroes&amp;mdash;components, template syntax, routing, services, and accessing data via HTTP&amp;mdash;in a condensed format, following the most current best practices.</source>
          <target state="translated">如果您不熟悉Angular，请参阅《&lt;a href=&quot;https://angular.io/start&quot;&gt;&lt;strong&gt;入门指南》。&lt;/strong&gt;&lt;/a&gt;《入门指南》涵盖了与本次&amp;ldquo;英雄之旅&amp;rdquo;相同的主题，包括组件，模板语法，路由，服务以及通过HTTP以压缩格式遵循最新的最佳实践访问数据。</target>
        </trans-unit>
        <trans-unit id="67ea25a303d22f5bebe608e745f2d7c92d9c27bb" translate="yes" xml:space="preserve">
          <source>If you're new to forms, start by reviewing the &lt;a href=&quot;forms&quot;&gt;Forms&lt;/a&gt; and &lt;a href=&quot;reactive-forms&quot;&gt;Reactive Forms&lt;/a&gt; guides.</source>
          <target state="translated">如果您不熟悉表单，请先查看&lt;a href=&quot;forms&quot;&gt;表单&lt;/a&gt;和&lt;a href=&quot;reactive-forms&quot;&gt;反应式表单&lt;/a&gt;指南。</target>
        </trans-unit>
        <trans-unit id="4c7691dbf6e3a09bc8b03a72148e35329112bda1" translate="yes" xml:space="preserve">
          <source>If you're seeing errors, first temporarily &lt;a href=&quot;ivy#opting-out-of-angular-ivy&quot;&gt;turn off Ivy&lt;/a&gt; in your &lt;code&gt;tsconfig.json&lt;/code&gt; and re-start your app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611869e2c178bc8e06f9bea14da6d2fc3233f1ae" translate="yes" xml:space="preserve">
          <source>If you're still seeing the errors, they are not specific to Ivy. In this case, you may want to consult the &lt;a href=&quot;updating-to-version-11&quot;&gt;general update guide&lt;/a&gt;. If you've opted into any of the new, stricter type-checking settings, you may also want to check out the &lt;a href=&quot;template-typecheck&quot;&gt;template type-checking guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc7d26ca33d3f9ccba91fcbfc3ae3f0632834a5" translate="yes" xml:space="preserve">
          <source>If you're testing in an incognito window, open a second blank tab. This will keep the incognito and the cache state alive during your test.</source>
          <target state="translated">如果你是在隐身窗口中进行测试,请打开第二个空白标签。这将在你的测试过程中保持隐身和缓存状态的活力。</target>
        </trans-unit>
        <trans-unit id="f84e473555acc9f8c96286d3976054a4ce8ac07e" translate="yes" xml:space="preserve">
          <source>If you're using &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;, you must provide a &lt;a href=&quot;app_base_href&quot;&gt;&lt;code&gt;APP_BASE_HREF&lt;/code&gt;&lt;/a&gt; or add a &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt; element to the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e626c7acd05b782e31724065bc7d5d37adec57da" translate="yes" xml:space="preserve">
          <source>If you're using &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;, you must provide a &lt;a href=&quot;app_base_href&quot;&gt;&lt;code&gt;APP_BASE_HREF&lt;/code&gt;&lt;/a&gt; or add a base element to the document. This URL prefix that will be preserved when generating and recognizing URLs.</source>
          <target state="translated">如果使用 &lt;code&gt;&lt;a href=&quot;pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; ，则必须提供&lt;a href=&quot;app_base_href&quot;&gt; &lt;code&gt;APP_BASE_HREF&lt;/code&gt; &lt;/a&gt;或向文档中添加基本元素。生成和识别URL时将保留的URL前缀。</target>
        </trans-unit>
        <trans-unit id="3f30bbc0759dc1d64fa256c2ae612a954da0aa58" translate="yes" xml:space="preserve">
          <source>If you're using the CLI, &lt;code&gt;ng update&lt;/code&gt; should &lt;a href=&quot;migration-module-with-providers&quot;&gt;migrate your code automatically&lt;/a&gt;. If you're not using the CLI, you can add any missing generic types to your application manually. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa080613189cdefb468866b8c597532b9871a918" translate="yes" xml:space="preserve">
          <source>If you've never published a package in npm before, you must create a user account. Read more in &lt;a href=&quot;https://docs.npmjs.com/getting-started/publishing-npm-packages&quot;&gt;Publishing npm Packages&lt;/a&gt;.</source>
          <target state="translated">如果您以前从未在npm中发布过软件包，则必须创建一个用户帐户。在&lt;a href=&quot;https://docs.npmjs.com/getting-started/publishing-npm-packages&quot;&gt;发布npm程序包中&lt;/a&gt;了解更多信息。</target>
        </trans-unit>
        <trans-unit id="192e8b89a85f5cc6081ab74c317c7b8d1b4b6c1a" translate="yes" xml:space="preserve">
          <source>If your Browserslist configuration includes support for any legacy browsers, the build target in the TypeScript configuration determines whether the build will support differential loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b10a12a2f9c3567ac4e099dd03881046723129f" translate="yes" xml:space="preserve">
          <source>If your app had many feature areas, the app component trees might look like this:</source>
          <target state="translated">如果你的应用有很多功能区,应用组件树可能是这样的。</target>
        </trans-unit>
        <trans-unit id="c4813331be931a7f2a2b0d56270ac5204b124311" translate="yes" xml:space="preserve">
          <source>If your app happens to bootstrap or dynamically load a component &lt;em&gt;by type&lt;/em&gt; in some other manner, you must add it to &lt;code&gt;entryComponents&lt;/code&gt; explicitly.</source>
          <target state="translated">如果您的应用碰巧以其他方式&lt;em&gt;按类型&lt;/em&gt;引导或动态加载组件，则必须将其显式添加到 &lt;code&gt;entryComponents&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9aae5606fbeadd60c35706fd07fdcf7e6df68610" translate="yes" xml:space="preserve">
          <source>If your app uses routing, you need to teach the server to always return &lt;code&gt;index.html&lt;/code&gt; when the user asks for an HTML page for reasons explained in the &lt;a href=&quot;deployment#fallback&quot;&gt;Deployment&lt;/a&gt; guide.</source>
          <target state="translated">如果您的应用程序使用路由，则您需要教会服务器在用户出于&amp;ldquo; &lt;a href=&quot;deployment#fallback&quot;&gt;部署&amp;rdquo;&lt;/a&gt;指南中说明的原因而要求HTML页面时始终返回 &lt;code&gt;index.html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5042fa1f08d3dcd4e1ea2367cfbbc1aaa6404362" translate="yes" xml:space="preserve">
          <source>If your backend service uses different names for the XSRF token cookie or header, use &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientxsrfmodule#withOptions&quot;&gt;HttpClientXsrfModule.withOptions()&lt;/a&gt;&lt;/code&gt; to override the defaults.</source>
          <target state="translated">如果您的后端服务对XSRF令牌cookie或标头使用不同的名称，请使用 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientxsrfmodule#withOptions&quot;&gt;HttpClientXsrfModule.withOptions()&lt;/a&gt;&lt;/code&gt; 覆盖默认值。</target>
        </trans-unit>
        <trans-unit id="95cc76e94f96c5568597c8ef92eb23b8f2b51d0e" translate="yes" xml:space="preserve">
          <source>If your builder calls another builder, it may need to read a passed target string. You can parse this string into an object by using the &lt;code&gt;targetFromTargetString()&lt;/code&gt; utility function from &lt;code&gt;@angular-devkit/architect&lt;/code&gt;.</source>
          <target state="translated">如果您的构建器调用了另一个构建器，则可能需要读取传递的目标字符串。您可以使用 &lt;code&gt;@angular-devkit/architect&lt;/code&gt; 的 &lt;code&gt;targetFromTargetString()&lt;/code&gt; 实用程序函数将此字符串解析为对象。</target>
        </trans-unit>
        <trans-unit id="875f3a37dffcb0d70c53bfe9801cfac977a1c2c0" translate="yes" xml:space="preserve">
          <source>If your builder returns an Observable, it should clean up in the teardown logic of that Observable.</source>
          <target state="translated">如果你的构建器返回一个Observable,它应该在该Observable的拆分逻辑中进行清理。</target>
        </trans-unit>
        <trans-unit id="f683916cf8a11dda2039edae9c97697849fd354d" translate="yes" xml:space="preserve">
          <source>If your installation and setup was successful, you should see a page similar to the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333ae1afb3d296c7877eaffccff73532b882ea8a" translate="yes" xml:space="preserve">
          <source>If your library code or its templates depend on other libraries (such a Angular Material, for instance), you must configure your library with those dependencies.</source>
          <target state="translated">如果你的库代码或其模板依赖于其他库(例如Angular Material),你必须根据这些依赖关系配置你的库。</target>
        </trans-unit>
        <trans-unit id="57fc0eeed0d306a2db798e20abb14abed289e8cc" translate="yes" xml:space="preserve">
          <source>If your library code or its templates depend on other libraries (such as Angular Material, for instance), you must configure your library with those dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dc0564ebd063d8a83bbddec3a63a2e4959a0d9" translate="yes" xml:space="preserve">
          <source>If your library provides optional services that might not be used by all client applications, support proper tree-shaking for that case by using the &lt;a href=&quot;lightweight-injection-tokens&quot;&gt;lightweight token design pattern&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af6c56bc2cbb8e4946e71f47ee9c9fb9c31b970" translate="yes" xml:space="preserve">
          <source>If your structural directive provides a context to the instantiated template, you can properly type it inside the template by providing a static &lt;code&gt;ngTemplateContextGuard&lt;/code&gt; function. The following snippet shows an example of such a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc86b4b32c1ba7ddb5fb732813d619704067dcce" translate="yes" xml:space="preserve">
          <source>If your template needs to display different text messages depending on the value of a variable, you need to translate all of those alternative text messages.</source>
          <target state="translated">如果你的模板需要根据一个变量的值显示不同的文本信息,你需要翻译所有这些备选文本信息。</target>
        </trans-unit>
        <trans-unit id="e6e3128717267a5e06be8d6ef96ba80886bdd514" translate="yes" xml:space="preserve">
          <source>If your tests aren't working as you expect them to, you can inspect and debug them in the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93ea9b6cea140a6464d1b0779bee5174f1506aa" translate="yes" xml:space="preserve">
          <source>If, for some reason, you are not using an &lt;code&gt;@nguniversal/*-engine&lt;/code&gt; package, you may need to handle it yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ff3add03a839c971e70ed84614968956996987" translate="yes" xml:space="preserve">
          <source>Ignore the warnings.</source>
          <target state="translated">忽略警告。</target>
        </trans-unit>
        <trans-unit id="b2a8f807164b329c0df9d6e96e08d4ec7fe93e8e" translate="yes" xml:space="preserve">
          <source>Ignore: do nothing.</source>
          <target state="translated">忽略:什么也不做。</target>
        </trans-unit>
        <trans-unit id="852440e173c82baa5ce49593ea14c314bd9d03ea" translate="yes" xml:space="preserve">
          <source>Ignores any animations that are performed when the user first opens or navigates to this page. The filter narrows what is already there, so it assumes that any HTML elements to be animated already exist in the DOM.</source>
          <target state="translated">忽略任何在用户第一次打开或导航到这个页面时执行的动画。该过滤器缩小了已经存在的内容,因此它假设任何要动画的HTML元素已经存在于DOM中。</target>
        </trans-unit>
        <trans-unit id="8b821c78f2fce2425c050c6804d937d1ae4b77c5" translate="yes" xml:space="preserve">
          <source>Illustrating the &quot;pristine&quot; state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e535f7686926290a845fe4d42be0c97df203fcb9" translate="yes" xml:space="preserve">
          <source>Image compression</source>
          <target state="translated">图像压缩</target>
        </trans-unit>
        <trans-unit id="cd2057f0131f9a4e6f1956e4114499c55873edf5" translate="yes" xml:space="preserve">
          <source>Image dimensions</source>
          <target state="translated">图像尺寸</target>
        </trans-unit>
        <trans-unit id="132d44a4489514731c7a32cfff5792dd08c9e636" translate="yes" xml:space="preserve">
          <source>Image location</source>
          <target state="translated">图片租赁</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="9ae8f90b310c8e0aba39397a83acf0bf54cb8fae" translate="yes" xml:space="preserve">
          <source>Images and fonts directly under the configured &lt;code&gt;outputPath&lt;/code&gt; (by default &lt;code&gt;./dist/&amp;lt;project-name&amp;gt;/&lt;/code&gt;) or &lt;code&gt;resourcesOutputPath&lt;/code&gt;. See &lt;a href=&quot;cli/build&quot;&gt;&lt;code&gt;ng build&lt;/code&gt;&lt;/a&gt; for more information about these options.</source>
          <target state="translated">直接在已配置的 &lt;code&gt;outputPath&lt;/code&gt; （默认为 &lt;code&gt;./dist/&amp;lt;project-name&amp;gt;/&lt;/code&gt; ）或 &lt;code&gt;resourcesOutputPath&lt;/code&gt; 下的图像和字体。有关这些选项的更多信息，请参见&lt;a href=&quot;cli/build&quot;&gt; &lt;code&gt;ng build&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b68d291250edab27a9181298df02309fd2e3984d" translate="yes" xml:space="preserve">
          <source>Images should be specified in an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">图片应在 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 标签中指定。</target>
        </trans-unit>
        <trans-unit id="f197407a881860639854b84140d3e15ce892c317" translate="yes" xml:space="preserve">
          <source>Imagine an application that helps the &lt;em&gt;Hero Employment Agency&lt;/em&gt; run its business. Heroes need work and the agency finds crises for them to solve.</source>
          <target state="translated">想象一个可以帮助&lt;em&gt;英雄职业介绍所&lt;/em&gt;开展业务的应用程序。英雄需要工作，该机构发现了危机以供他们解决。</target>
        </trans-unit>
        <trans-unit id="480c3b6df4de5ea5f608379d1979bb198fa722ac" translate="yes" xml:space="preserve">
          <source>Imagine one branch of a component hierarchy: &lt;em&gt;Alice&lt;/em&gt; -&amp;gt; &lt;em&gt;Barry&lt;/em&gt; -&amp;gt; &lt;em&gt;Carol&lt;/em&gt;. Both &lt;em&gt;Alice&lt;/em&gt; and &lt;em&gt;Barry&lt;/em&gt; implement the `Parent' class interface.</source>
          <target state="translated">想象一下组件层次结构的一个分支：&lt;em&gt;Alice-&lt;/em&gt; &amp;gt; &lt;em&gt;Barry-&lt;/em&gt; &amp;gt; &lt;em&gt;Carol&lt;/em&gt;。无论&lt;em&gt;爱丽丝&lt;/em&gt;和&lt;em&gt;巴里&lt;/em&gt;贯彻'父&amp;rdquo;类接口。</target>
        </trans-unit>
        <trans-unit id="926d786c1286080b30759a09b32fbae972285d95" translate="yes" xml:space="preserve">
          <source>Imagine that &lt;code&gt;LoggerService&lt;/code&gt; had a large API, much larger than the actual three methods and a property. You might want to shrink that API surface to just the members you actually need. In this example, the &lt;code&gt;MinimalLogger&lt;/code&gt;&lt;a href=&quot;dependency-injection-in-action#class-interface&quot;&gt;class-interface&lt;/a&gt; reduces the API to two members:</source>
          <target state="translated">想象一下 &lt;code&gt;LoggerService&lt;/code&gt; 有一个很大的API，比实际的三个方法和一个属性要大得多。您可能希望将API表面缩小为仅实际需要的成员。在此示例中， &lt;code&gt;MinimalLogger&lt;/code&gt; &lt;a href=&quot;dependency-injection-in-action#class-interface&quot;&gt;类接口&lt;/a&gt;将API减少为两个成员：</target>
        </trans-unit>
        <trans-unit id="4a368b18b59eaf096cd5d55aaf4c6822025e3a9d" translate="yes" xml:space="preserve">
          <source>Imagine that in the child component, you had a different value, &lt;code&gt;🍁&lt;/code&gt; (maple leaf) but you wanted to use the parent's value instead. This is when you'd use &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt;:</source>
          <target state="translated">想象一下，在子组件中，您有一个不同的值 &lt;code&gt;🍁&lt;/code&gt; （枫叶），但您想使用父项的值。这是当您使用 &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2ee7873715fc3090e9ad491d7196215a12eb7e13" translate="yes" xml:space="preserve">
          <source>Imagine that you don't want to inject &lt;code&gt;UserService&lt;/code&gt; directly into &lt;code&gt;HeroService&lt;/code&gt;, because you don't want to complicate that service with security-sensitive information. &lt;code&gt;HeroService&lt;/code&gt; won't have direct access to the user information to decide who is authorized and who isn't.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9912f3cc2a458038df837cf86a4c8e01af50ffb" translate="yes" xml:space="preserve">
          <source>Imagine the effort to disable these distractions, just to prove a point that can be made satisfactorily with a &lt;em&gt;test host&lt;/em&gt; like this one:</source>
          <target state="translated">想象一下要努力消除这些干扰，只是为了证明可以用这样的&lt;em&gt;测试主机&lt;/em&gt;令人满意地提出一个观点：</target>
        </trans-unit>
        <trans-unit id="0dcb05aedf3662e3047235d20c9b3a53209ea247" translate="yes" xml:space="preserve">
          <source>Imagine the following malicious content.</source>
          <target state="translated">设想以下恶意内容。</target>
        </trans-unit>
        <trans-unit id="70af22099196223b8485c95684bbf8824a9afa2b" translate="yes" xml:space="preserve">
          <source>Immutability</source>
          <target state="translated">Immutability</target>
        </trans-unit>
        <trans-unit id="6e5a32a1bd41d5b21404f176ae361427aff05142" translate="yes" xml:space="preserve">
          <source>Immutable</source>
          <target state="translated">Immutable</target>
        </trans-unit>
        <trans-unit id="569ee13fa32b96c143a875b5c890f64353650f46" translate="yes" xml:space="preserve">
          <source>Implement lifecycle hook interfaces</source>
          <target state="translated">实现生命周期挂钩接口</target>
        </trans-unit>
        <trans-unit id="ffb9191c0762a011976a2b595a59e6ed196362d4" translate="yes" xml:space="preserve">
          <source>Implement the &lt;a href=&quot;../api/core/pipetransform&quot;&gt;&lt;code&gt;PipeTransform&lt;/code&gt;&lt;/a&gt; interface in your custom pipe class to perform the transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3166f82b7179b9d5e343a6c1eee18f1c699887d" translate="yes" xml:space="preserve">
          <source>Implement this callback to add a class to an element in the DOM.</source>
          <target state="translated">实现这个回调来给DOM中的元素添加一个类。</target>
        </trans-unit>
        <trans-unit id="577c7009c5183eabdac20b5ae98cf2ede05d4833" translate="yes" xml:space="preserve">
          <source>Implement this callback to add a comment to the DOM of the host element.</source>
          <target state="translated">实现这个回调来给host元素的DOM添加注释。</target>
        </trans-unit>
        <trans-unit id="03cf7ca65ecc8c31118b1e6114f8595bc1760a21" translate="yes" xml:space="preserve">
          <source>Implement this callback to add text to the DOM of the host element.</source>
          <target state="translated">实现这个回调来为宿主元素的DOM添加文本。</target>
        </trans-unit>
        <trans-unit id="f5bc42dfa7008f7e03d763d440ce48675c0a4f5b" translate="yes" xml:space="preserve">
          <source>Implement this callback to create an instance of the host element.</source>
          <target state="translated">实现这个回调来创建一个host元素的实例。</target>
        </trans-unit>
        <trans-unit id="a0d9d7c045b4660c412fe767ad1945d44a190961" translate="yes" xml:space="preserve">
          <source>Implement this callback to destroy the renderer or the host element.</source>
          <target state="translated">实现这个回调来销毁渲染器或主机元素。</target>
        </trans-unit>
        <trans-unit id="1c9baa60b18459f8baab069c307bd286cedb293c" translate="yes" xml:space="preserve">
          <source>Implement this callback to get the next sibling node of a given node in the host element's DOM.</source>
          <target state="translated">实现这个回调来获取宿主元素DOM中给定节点的下一个兄弟姐妹节点。</target>
        </trans-unit>
        <trans-unit id="fdeb7236f29bdbcca4a28a7f60641e8db151e4d5" translate="yes" xml:space="preserve">
          <source>Implement this callback to get the parent of a given node in the host element's DOM.</source>
          <target state="translated">实现这个回调来获取宿主元素DOM中给定节点的父节点。</target>
        </trans-unit>
        <trans-unit id="134030fd845fadd1044c12a523dec32ffc73a9fc" translate="yes" xml:space="preserve">
          <source>Implement this callback to insert a child node at a given position in a parent node in the host element DOM.</source>
          <target state="translated">实现这个回调,在宿主元素DOM的父节点的给定位置插入一个子节点。</target>
        </trans-unit>
        <trans-unit id="bba6d890df9d055ea2386440926e0760d35d6b14" translate="yes" xml:space="preserve">
          <source>Implement this callback to prepare an element to be bootstrapped as a root element, and return the element instance.</source>
          <target state="translated">实现这个回调来准备一个元素作为根元素进行引导,并返回元素实例。</target>
        </trans-unit>
        <trans-unit id="ca1ed2bafa9cae106f863767732584ec8416ebed" translate="yes" xml:space="preserve">
          <source>Implement this callback to remove a child node from the host element's DOM.</source>
          <target state="translated">实现这个回调,从宿主元素的DOM中删除一个子节点。</target>
        </trans-unit>
        <trans-unit id="d323d4a580fdb4dc8916989b8e38d19f0831ebb4" translate="yes" xml:space="preserve">
          <source>Implement this callback to remove a class from an element in the DOM.</source>
          <target state="translated">实现这个回调,从DOM中的元素中删除一个类。</target>
        </trans-unit>
        <trans-unit id="50a573388aabcf7019870235d46465e72add8981" translate="yes" xml:space="preserve">
          <source>Implement this callback to remove an attribute from an element in the DOM.</source>
          <target state="translated">实现这个回调来删除DOM中元素的属性。</target>
        </trans-unit>
        <trans-unit id="36eb90bfa5ed19d7a1a9ae6ff464b8e1d00e7822" translate="yes" xml:space="preserve">
          <source>Implement this callback to remove the value from a CSS style for an element in the DOM.</source>
          <target state="translated">实现这个回调来删除DOM中元素的CSS样式的值。</target>
        </trans-unit>
        <trans-unit id="555fb860b7a59c008619fb082a93ee194e1886c7" translate="yes" xml:space="preserve">
          <source>Implement this callback to set a CSS style for an element in the DOM.</source>
          <target state="translated">实现这个回调来为DOM中的元素设置CSS样式。</target>
        </trans-unit>
        <trans-unit id="7b1aa6bced0b52983533c898e87d4ea15fb2264a" translate="yes" xml:space="preserve">
          <source>Implement this callback to set an attribute value for an element in the DOM.</source>
          <target state="translated">实现这个回调,为DOM中的元素设置一个属性值。</target>
        </trans-unit>
        <trans-unit id="e0fc11b0c038ee4ed0794e274a3324cb43d219c5" translate="yes" xml:space="preserve">
          <source>Implement this callback to set the value of a node in the host element.</source>
          <target state="translated">实现这个回调来设置主机元素中节点的值。</target>
        </trans-unit>
        <trans-unit id="bb15ad08125f75b3cf386d55995af65d420d6eee" translate="yes" xml:space="preserve">
          <source>Implement this callback to set the value of a property of an element in the DOM.</source>
          <target state="translated">实现这个回调来设置DOM中元素的属性值。</target>
        </trans-unit>
        <trans-unit id="59c3759a3daa56cba4ea89b70baf1e4097d64636" translate="yes" xml:space="preserve">
          <source>Implement this callback to start an event listener.</source>
          <target state="translated">实现这个回调来启动一个事件监听器。</target>
        </trans-unit>
        <trans-unit id="4a6751f61ff0fba38731f86b6104c29d3704780e" translate="yes" xml:space="preserve">
          <source>Implement this interface to create a custom form control directive that integrates with Angular forms.</source>
          <target state="translated">实现这个接口来创建一个与Angular表单集成的自定义表单控制指令。</target>
        </trans-unit>
        <trans-unit id="21c4d35ad75af1e5854d9c5288b3b50d18350a45" translate="yes" xml:space="preserve">
          <source>Implementing Custom Async Validator</source>
          <target state="translated">实现自定义异步验证器</target>
        </trans-unit>
        <trans-unit id="c0bdb7edcf97857a7cf5d9afdad73552296e66b0" translate="yes" xml:space="preserve">
          <source>Implementing a custom async validator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28243ccf2d1e04cdb0f4eea07160bd6fba54a67c" translate="yes" xml:space="preserve">
          <source>Implements Angular's core functionality, low-level services, and utilities.</source>
          <target state="translated">实现Angular的核心功能、低级服务和实用程序。</target>
        </trans-unit>
        <trans-unit id="1740cef38e5186da8de62ac9e31ab0bf9006ec4e" translate="yes" xml:space="preserve">
          <source>Implements Angular's custom-element API, which enables you to package components as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot;&gt;custom elements&lt;/a&gt;.</source>
          <target state="translated">实现Angular的custom-element API，使您可以将组件打包为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements&quot;&gt;custom元素&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18cc1a97ca823e213e9814192dbdd3119bf93a10" translate="yes" xml:space="preserve">
          <source>Implements a domain-specific language (DSL) for defining web animation sequences for HTML elements as multiple transformations over time.</source>
          <target state="translated">实现了一种特定领域的语言(DSL),用于将HTML元素的网页动画序列定义为随时间变化的多重变换。</target>
        </trans-unit>
        <trans-unit id="975968eede10c072691f7af0d54dd2799c41ab94" translate="yes" xml:space="preserve">
          <source>Implements a service worker for Angular apps. Adding a service worker to an Angular app is one of the steps for turning it into a Progressive Web App (also known as a PWA).</source>
          <target state="translated">为Angular应用实施一个服务工作者。为Angular应用添加服务工作者是将其转化为Progressive Web App(也称为PWA)的步骤之一。</target>
        </trans-unit>
        <trans-unit id="f7bebe0232fe9f34fb464a7863f9d6804c6723a6" translate="yes" xml:space="preserve">
          <source>Implements a set of directives and providers to communicate with native DOM elements when building forms to capture user input.</source>
          <target state="translated">当构建表单以获取用户输入时,实现了一组指令和提供者与本地DOM元素的通信。</target>
        </trans-unit>
        <trans-unit id="4b32fab568e6f74138e5d102955133034be90ff5" translate="yes" xml:space="preserve">
          <source>Implements an &lt;code&gt;ngDoCheck()&lt;/code&gt; method with custom change detection. See how often Angular calls this hook and watch it post changes to a log.</source>
          <target state="translated">使用自定义更改检测实现 &lt;code&gt;ngDoCheck()&lt;/code&gt; 方法。查看Angular多久调用一次此挂钩并观看它将更改发布到日志中。</target>
        </trans-unit>
        <trans-unit id="5bd7689d46e5b12bf1f904331f09df5b9e867cb3" translate="yes" xml:space="preserve">
          <source>Implements an HTTP client API for Angular apps that relies on the &lt;code&gt;XMLHttpRequest&lt;/code&gt; interface exposed by browsers.</source>
          <target state="translated">为Angular应用程序实现HTTP客户端API，该API依赖于浏览器公开的 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="0f6cbc91e3625eeea332217fda3f6cdf01f146c8" translate="yes" xml:space="preserve">
          <source>Implements an iterable interface, therefore it can be used in both ES6 javascript &lt;code&gt;for (var i of items)&lt;/code&gt; loops as well as in Angular templates with &lt;code&gt;*&lt;a href=&quot;../common/ngforof&quot;&gt;ngFor&lt;/a&gt;=&quot;let i of myList&quot;&lt;/code&gt;.</source>
          <target state="translated">实现一个可迭代的接口，因此可在ES6 javascript中 &lt;code&gt;for (var i of items)&lt;/code&gt; &lt;code&gt;*&lt;a href=&quot;../common/ngforof&quot;&gt;ngFor&lt;/a&gt;=&quot;let i of myList&quot;&lt;/code&gt; 项）循环以及带有* ngFor =&amp;ldquo; let i of myList&amp;rdquo;的 Angular模板中使用。</target>
        </trans-unit>
        <trans-unit id="ce097c59bce28c3d2b175a67db71e336843e0494" translate="yes" xml:space="preserve">
          <source>Implements basic Angular directives and pipes, such as NgIf, NgForOf, DecimalPipe, and so on.</source>
          <target state="translated">实现基本的Angular指令和管道,如NgIf、NgForOf、DecimalPipe等。</target>
        </trans-unit>
        <trans-unit id="2351e708261f2053ab218553d2efe10bd33f3716" translate="yes" xml:space="preserve">
          <source>Implements fundamental Angular framework functionality, including directives and pipes, location services used in routing, HTTP services, localization support, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58efc13dfdbddc59a6ed790f4530168ed9884583" translate="yes" xml:space="preserve">
          <source>Implements the &lt;code&gt;ngDoCheck()&lt;/code&gt; method with custom change detection. Watch the hook post changes to a log to see how often Angular calls this hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9bdfd53eb804076b673eff6ed90636bddf4f862" translate="yes" xml:space="preserve">
          <source>Implements the Angular Router service , which enables navigation from one view to the next as users perform application tasks.</source>
          <target state="translated">实现Angular Router服务,它能在用户执行应用任务时实现从一个视图到下一个视图的导航。</target>
        </trans-unit>
        <trans-unit id="a92aec084fd1d304417af86c26c892bf2549ddb2" translate="yes" xml:space="preserve">
          <source>Implements the functionality needed for a custom element.</source>
          <target state="translated">实现自定义元素所需的功能。</target>
        </trans-unit>
        <trans-unit id="2582b4c30d27c0a060dad9d9e2d031711195f67c" translate="yes" xml:space="preserve">
          <source>Implicit, created by directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fb786f09465d1d0559a46e5842f496183733aa" translate="yes" xml:space="preserve">
          <source>Implied by promise resolution.</source>
          <target state="translated">由承诺决议暗示。</target>
        </trans-unit>
        <trans-unit id="568d13bdb851bce85938a6391267ed336fc53a69" translate="yes" xml:space="preserve">
          <source>Import &lt;a href=&quot;ngmodule-faq#q-browser-vs-common-module&quot;&gt;BrowserModule&lt;/a&gt; only in the root &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">仅在根 &lt;code&gt;AppModule&lt;/code&gt; 中导入&lt;a href=&quot;ngmodule-faq#q-browser-vs-common-module&quot;&gt;BrowserModule&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f742f1b5efa266c3528e372a7535ae4f8d7abfb" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; package.</source>
          <target state="translated">从 &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;包中导入 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c480c63f6212aebe6f4eeb21595cbebe365b2e21" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; package at the top of the file with the other imports. As there are a number of other imports, this code snippet omits them for brevity. Be sure to leave the existing imports in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a640252aff8611ffd100e6d553596024dc2232" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; package.</source>
          <target state="translated">从 &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;包中导入 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db1318647a94b0878ebad6624d74ed324806e391" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; in the child component class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c4f41e277258769c0a0df5aa685cd02c57d1f7" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;@angular/forms&lt;/code&gt; if your components have &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; two-way binding expressions.</source>
          <target state="translated">如果您的组件具有 &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; &lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;）]双向绑定表达式， &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 从 &lt;code&gt;@angular/forms&lt;/code&gt; 导入FormsModule。</target>
        </trans-unit>
        <trans-unit id="8d73845fe8377c59bacd2d1ab426a96ffca230bf" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; to use &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">导入 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 以使用 &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78a45ea4a26ee0f0dd7af27e0a27299f67d70efd" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;../api/platform-browser/animations/browseranimationsmodule&quot;&gt;BrowserAnimationsModule&lt;/a&gt;&lt;/code&gt;, which introduces the animation capabilities into your Angular root application module.</source>
          <target state="translated">导入 &lt;code&gt;&lt;a href=&quot;../api/platform-browser/animations/browseranimationsmodule&quot;&gt;BrowserAnimationsModule&lt;/a&gt;&lt;/code&gt; ，它将动画功能引入到Angular根应用程​​序模块中。</target>
        </trans-unit>
        <trans-unit id="352357fecdfec53327503352c52cf046f13b707c" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt; to your component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbd5188871ef20fa807f263a6fcc71ea078f98d" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/router&lt;/code&gt; package, and the &lt;code&gt;products&lt;/code&gt; array from &lt;code&gt;../products&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;@angular/router&lt;/code&gt; 包中导入 &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; ，从 &lt;code&gt;../products&lt;/code&gt; 中导入 &lt;code&gt;products&lt;/code&gt; 数组。</target>
        </trans-unit>
        <trans-unit id="6f12799296738ca1edfd6212d2a0f1ed1c4bb38b" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; into your routing module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9dc372cd0ffd6143fbc7365768919e6aaef1084" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;@angular/router&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438e3ddee4912def34ac11f57a93ce076783f46e" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;@angular/core&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;@angular/core&lt;/code&gt; 导入 &lt;code&gt;&lt;a href=&quot;api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba4323afb2767c261fa10794db535d2c4b34bb19" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;@angular/core&lt;/code&gt;:</source>
          <target state="translated">从 &lt;code&gt;@angular/core&lt;/code&gt; 导入 &lt;code&gt;&lt;a href=&quot;api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="29ea81b3ca52ff6ccaed6e2c7a98e218c8668bbe" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;&lt;a href=&quot;router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; to use the Router service in your app. For more usage information, see the &lt;a href=&quot;../guide/router&quot;&gt;Routing and Navigation&lt;/a&gt; guide.</source>
          <target state="translated">导入 &lt;code&gt;&lt;a href=&quot;router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 以在您的应用程序中使用路由器服务。有关更多用法信息，请参阅&amp;ldquo; &lt;a href=&quot;../guide/router&quot;&gt;路由和导航&amp;rdquo;&lt;/a&gt;指南。</target>
        </trans-unit>
        <trans-unit id="378da8def68b035dc56d150d5c3f316640430460" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;AppServerModuleNgFactory&lt;/code&gt; from the &lt;code&gt;app.server.module.ngfactory&lt;/code&gt; virtual file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea0622df7e35e3d25926c1db11132831d661da2" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;FormsModule&lt;/code&gt;</source>
          <target state="translated">导入 &lt;code&gt;FormsModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2f696d4d9afce8de6cbc91e4145a3e2c8ec8ee4" translate="yes" xml:space="preserve">
          <source>Import &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; into &lt;code&gt;AppRoutingModule&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; 导入 &lt;code&gt;AppRoutingModule&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="ffeed5ccfb791ceee55f7360554286bcadd6091b" translate="yes" xml:space="preserve">
          <source>Import &lt;em&gt;shared&lt;/em&gt; and &lt;em&gt;feature&lt;/em&gt; modules when this module's components incorporate their components, directives, and pipes.</source>
          <target state="translated">当此模块的组件包含其组件，指令和管道时，导入&lt;em&gt;共享&lt;/em&gt;和&lt;em&gt;功能&lt;/em&gt;模块。</target>
        </trans-unit>
        <trans-unit id="fcb63212ad3831fc17aec3ffcf8d331ecd00b985" translate="yes" xml:space="preserve">
          <source>Import NgModules whose public (exported) &lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;declarable classes&lt;/a&gt; you need to reference in this module's component templates.</source>
          <target state="translated">导入需要在此模块的组件模板中引用其公共（导出）可声明&lt;a href=&quot;bootstrapping#the-declarations-array&quot;&gt;类的&lt;/a&gt; NgModule 。</target>
        </trans-unit>
        <trans-unit id="04ceef49142e281571f7a59729fdddb7c109183a" translate="yes" xml:space="preserve">
          <source>Import a domain NgModule exactly once into another NgModule, such as a domain NgModule, or into the root NgModule (&lt;code&gt;AppModule&lt;/code&gt;) of an app that contains only a few NgModules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f2839eab72da958afeb3a4698c2ccac390a557" translate="yes" xml:space="preserve">
          <source>Import a feature module</source>
          <target state="translated">导入功能模块</target>
        </trans-unit>
        <trans-unit id="d2c025183c7eeec9309814c88e2a9cdf1b259bbc" translate="yes" xml:space="preserve">
          <source>Import a routing NgModule only into its companion NgModule. If the companion NgModule is the root &lt;code&gt;AppModule&lt;/code&gt;, the &lt;code&gt;AppRoutingModule&lt;/code&gt; adds router configuration to its imports with &lt;code&gt;RouterModule.forRoot(routes)&lt;/code&gt;. All other routing NgModules are children that import &lt;code&gt;RouterModule.forChild(routes)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2547f241c308c031518bf3f1c55b103af9729c3c" translate="yes" xml:space="preserve">
          <source>Import a scoped package in the same way that you import a normal package.</source>
          <target state="translated">以导入普通包的方式导入作用域包。</target>
        </trans-unit>
        <trans-unit id="98c0c896fabb3fc1a98419d0cde75db05d6430f1" translate="yes" xml:space="preserve">
          <source>Import a shared module</source>
          <target state="translated">导入一个共享模块</target>
        </trans-unit>
        <trans-unit id="1be630c78b766b9bfc94f1c5ca957111764f2798" translate="yes" xml:space="preserve">
          <source>Import a validator function in your form component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301c1658c4350b2d60d09948ca85c6196aed28d1" translate="yes" xml:space="preserve">
          <source>Import and add the &lt;code&gt;HeroDetailComponent&lt;/code&gt; and &lt;code&gt;HeroListComponent&lt;/code&gt; to the &lt;code&gt;declarations&lt;/code&gt; array in the &lt;code&gt;HeroesModule&lt;/code&gt;.</source>
          <target state="translated">导入和添加 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 和 &lt;code&gt;HeroListComponent&lt;/code&gt; 的 &lt;code&gt;declarations&lt;/code&gt; 中数组 &lt;code&gt;HeroesModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8ca796a8e658eeeab1bd1e834d4a664c92619c7" translate="yes" xml:space="preserve">
          <source>Import crisis center module into the &lt;code&gt;AppModule&lt;/code&gt; routes</source>
          <target state="translated">将危机中心模块导入 &lt;code&gt;AppModule&lt;/code&gt; 路线</target>
        </trans-unit>
        <trans-unit id="4d7b5a83713e856ce30b92012a4b00341ee61e76" translate="yes" xml:space="preserve">
          <source>Import global variants of the locale data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a526dbed5b0f6c824f5d7a0643b8d713cf803b67" translate="yes" xml:space="preserve">
          <source>Import it from</source>
          <target state="translated">从以下地方导入</target>
        </trans-unit>
        <trans-unit id="d8154fd791df3beb7ab66f72f5ba6f3d510c808c" translate="yes" xml:space="preserve">
          <source>Import it into the appropriate module.</source>
          <target state="translated">将其导入到相应的模块中。</target>
        </trans-unit>
        <trans-unit id="a6810958c8daa7a96c72da65b232b80dd64c7181" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; decorator (instead of the &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator).</source>
          <target state="translated">导入 &lt;code&gt;&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 装饰器（而不是 &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 装饰器）。</target>
        </trans-unit>
        <trans-unit id="050ba3274203d622f3595bab0a8e5dd2c4cc5deb" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; symbols; you'll need them for &lt;em&gt;any&lt;/em&gt; structural directive.</source>
          <target state="translated">导入 &lt;code&gt;&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; 符号；&lt;em&gt;任何&lt;/em&gt;结构性指令都需要它们。</target>
        </trans-unit>
        <trans-unit id="e9c23b8c549ecba1a1c10a72bc128051038d670e" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; class from &lt;code&gt;@angular/forms&lt;/code&gt; to use for type information. The &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; service is ready to create a &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">从 &lt;code&gt;@angular/forms&lt;/code&gt; 导入 &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 类以用于类型信息。该 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; 服务准备创建 &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="92f9ac3c714a7700d00a99c56956a7e1f3d62f58" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e331c6fc4a9ff134af60b891774820b42da2edbc" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; class from the &lt;code&gt;@angular/forms&lt;/code&gt; package.</source>
          <target state="translated">从 &lt;code&gt;@angular/forms&lt;/code&gt; 包导入 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="773ffa7003e87f00942ce0c9d6c491f40289c3fb" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc9c61e025989b9b55d14be9d8b9c70af1b9fc4" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; service from the &lt;code&gt;@angular/forms&lt;/code&gt; package.</source>
          <target state="translated">从 &lt;code&gt;@angular/forms&lt;/code&gt; 包导入 &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; 服务。</target>
        </trans-unit>
        <trans-unit id="cdcf4dcbdeddf625623188d87e4fefc41dd00403" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;&lt;a href=&quot;../api/forms/validators&quot;&gt;Validators&lt;/a&gt;&lt;/code&gt; class from the &lt;code&gt;@angular/forms&lt;/code&gt; package.</source>
          <target state="translated">从 &lt;code&gt;@angular/forms&lt;/code&gt; 包导入 &lt;code&gt;&lt;a href=&quot;../api/forms/validators&quot;&gt;Validators&lt;/a&gt;&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="9ee21c30a536f294238a29e1d4bea732f6f4ae02" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/router/parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt; tokens from the router package.</source>
          <target state="translated">从路由器包中导入 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/router/parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt; 令牌。</target>
        </trans-unit>
        <trans-unit id="686b0adef0de155a88d75b0bde6fbed3829d7341" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; into your top level &lt;a href=&quot;../../core/ngmodule&quot;&gt;Angular `NgModule`&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 导入顶级&lt;a href=&quot;../../core/ngmodule&quot;&gt;Angular`NgModule`中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b85dd077949ee00c90306c755fc5f7d11a648b41" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;AppRoutingModule&lt;/code&gt; into &lt;code&gt;AppModule&lt;/code&gt; and add it to the &lt;code&gt;imports&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1cedd5069238c18718cd52f3d74737564819a6" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;CartService&lt;/code&gt; from the &lt;code&gt;cart.service.ts&lt;/code&gt; file.</source>
          <target state="translated">导入 &lt;code&gt;CartService&lt;/code&gt; 从 &lt;code&gt;cart.service.ts&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="9d8c5fb1b2237d87ff7cd78a6f3f8b61baca81de" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;CrisisListComponent&lt;/code&gt;, &lt;code&gt;HeroListComponent&lt;/code&gt;, and &lt;code&gt;PageNotFoundComponent&lt;/code&gt; symbols just like you did in the &lt;code&gt;app.module.ts&lt;/code&gt;. Then move the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; imports and routing configuration, including &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt;, into this routing module.</source>
          <target state="translated">就像在 &lt;code&gt;app.module.ts&lt;/code&gt; 中一样，导入 &lt;code&gt;CrisisListComponent&lt;/code&gt; ， &lt;code&gt;HeroListComponent&lt;/code&gt; 和 &lt;code&gt;PageNotFoundComponent&lt;/code&gt; 符号。然后将 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 导入和路由配置（包括 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; )移到该路由模块中。</target>
        </trans-unit>
        <trans-unit id="817cc00c391e59b9be4fb99905645f2cf9d9b070" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;DashboardComponent&lt;/code&gt; in the &lt;code&gt;AppRoutingModule&lt;/code&gt;.</source>
          <target state="translated">导入 &lt;code&gt;DashboardComponent&lt;/code&gt; 在 &lt;code&gt;AppRoutingModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d891b2d94c07cfdb42e46213e234080c12a97992" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;Hero&lt;/code&gt; and &lt;code&gt;HEROES&lt;/code&gt;.</source>
          <target state="translated">导入 &lt;code&gt;Hero&lt;/code&gt; 和 &lt;code&gt;HEROES&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df33ccfbc6cae37532f2258ca69433e9f6f71ae9" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt;.</source>
          <target state="translated">导入 &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfb4992a4374e8dc70168e213e70e9f20129c7fe" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;SharedModule&lt;/code&gt; in your &lt;em&gt;feature&lt;/em&gt; modules, both those loaded when the app starts and those you lazy load later.</source>
          <target state="translated">导入 &lt;code&gt;SharedModule&lt;/code&gt; 在你的&lt;em&gt;功能&lt;/em&gt;模块，这两个装载时，应用程序启动和你延迟加载以后。</target>
        </trans-unit>
        <trans-unit id="e3f7d1044aa8460beba08aa7ce9ae927fdb4849c" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;catchError&lt;/code&gt; symbol from &lt;code&gt;rxjs/operators&lt;/code&gt;, along with some other operators you'll need later.</source>
          <target state="translated">从 &lt;code&gt;rxjs/operators&lt;/code&gt; 导入 &lt;code&gt;catchError&lt;/code&gt; 符号，以及稍后需要的其他一些运算符。</target>
        </trans-unit>
        <trans-unit id="d41e2af4e0f9d40ee19656d61d24f3e6c1da5575" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;switchMap&lt;/code&gt; operator because you need it later to process the &lt;code&gt;Observable&lt;/code&gt; route parameters.</source>
          <target state="translated">导入 &lt;code&gt;switchMap&lt;/code&gt; 运算符，因为稍后需要它来处理 &lt;code&gt;Observable&lt;/code&gt; 路由参数。</target>
        </trans-unit>
        <trans-unit id="3a18d1695f508fdb02f8c454df1c248c094d7b2f" translate="yes" xml:space="preserve">
          <source>Import the &lt;code&gt;switchMap&lt;/code&gt; operator to perform an operation on the &lt;code&gt;Observable&lt;/code&gt; of route parameter map.</source>
          <target state="translated">导入 &lt;code&gt;switchMap&lt;/code&gt; 运算符以对路由参数图的 &lt;code&gt;Observable&lt;/code&gt; 执行操作。</target>
        </trans-unit>
        <trans-unit id="d43444878db13fcb283c40d8be13224eada6b8e0" translate="yes" xml:space="preserve">
          <source>Import the appropriate language translation file as a string constant.</source>
          <target state="translated">将相应的语言翻译文件作为字符串常量导入。</target>
        </trans-unit>
        <trans-unit id="89a6ca85268363383daef55ec399cdadb37634d3" translate="yes" xml:space="preserve">
          <source>Import the cart service.</source>
          <target state="translated">导入购物车服务。</target>
        </trans-unit>
        <trans-unit id="070bfc8700bcdc05ea975d46b92b9598f201fffa" translate="yes" xml:space="preserve">
          <source>Import the defined schema interface that provides the type information for your schematic's options.</source>
          <target state="translated">导入已定义的原理图接口,为您的原理图的选项提供类型信息。</target>
        </trans-unit>
        <trans-unit id="c4871a12d8b10b0a07d1e0cdc5dfb8d463cfc5f3" translate="yes" xml:space="preserve">
          <source>Import the feature area NgModule into the &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">将特征区域NgModule导入 &lt;code&gt;AppModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42b7a45134de162ef0f09f141c0fbcd920dd4711" translate="yes" xml:space="preserve">
          <source>Import the hero components from their new locations in the &lt;code&gt;src/app/heroes/&lt;/code&gt; folder and define the two hero routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f2a24119b9f7ce0e76c5987bc26dfad28027be" translate="yes" xml:space="preserve">
          <source>Import the hero components from their new locations in the &lt;code&gt;src/app/heroes/&lt;/code&gt; folder, define the two hero routes.</source>
          <target state="translated">从 &lt;code&gt;src/app/heroes/&lt;/code&gt; 文件夹中的新位置导入英雄组件，定义两条英雄路线。</target>
        </trans-unit>
        <trans-unit id="5bc40a5fef2a78698029cd1054594de418f9b5e0" translate="yes" xml:space="preserve">
          <source>Import the routing module into the application and create a routing configuration that defines the possible routes.</source>
          <target state="translated">将路由模块导入到应用程序中,并创建一个定义可能路由的路由配置。</target>
        </trans-unit>
        <trans-unit id="a46b7288ec43274590d4dd5dc8714f1e9dcd9766" translate="yes" xml:space="preserve">
          <source>Import this module at the root of your application so that Angular can work with HammerJS to detect gesture events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d1848dcd28345f99c78b328167a595cb31adbb" translate="yes" xml:space="preserve">
          <source>Import this resolver in the &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; and add a &lt;code&gt;&lt;a href=&quot;../api/router/route#resolve&quot;&gt;resolve&lt;/a&gt;&lt;/code&gt; object to the &lt;code&gt;CrisisDetailComponent&lt;/code&gt; route configuration.</source>
          <target state="translated">将此解析器导入 &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; 中,然后将 &lt;code&gt;&lt;a href=&quot;../api/router/route#resolve&quot;&gt;resolve&lt;/a&gt;&lt;/code&gt; 对象添加到 &lt;code&gt;CrisisDetailComponent&lt;/code&gt; 路由配置中。</target>
        </trans-unit>
        <trans-unit id="c9a38ebeeddaeaf5236d69826e1b8200c968d798" translate="yes" xml:space="preserve">
          <source>Import this resolver in the &lt;code&gt;crisis-center-routing.module.ts&lt;/code&gt; and add a &lt;code&gt;resolve&lt;/code&gt; object to the &lt;code&gt;CrisisDetailComponent&lt;/code&gt; route configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d353b4a94d95b503455bd4b11f19b1ff8a01486" translate="yes" xml:space="preserve">
          <source>Import this resolver into your module's routing module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a061c456d72a9a382bb6f470489d23ae0404d27" translate="yes" xml:space="preserve">
          <source>Import what you need from it as you would from any other Angular package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ec2e5b75cafd71f4d2cf17bbe28874aadd8762" translate="yes" xml:space="preserve">
          <source>Import widget modules in any module whose component templates need the widgets.</source>
          <target state="translated">在任何组件模板需要widget的模块中导入widget模块。</target>
        </trans-unit>
        <trans-unit id="8834a6fc5ae307bddfaa532d30816daae0c4e180" translate="yes" xml:space="preserve">
          <source>Important options include the &lt;em&gt;observe&lt;/em&gt; and &lt;em&gt;responseType&lt;/em&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473b18365dce3edd8127f1624f5b4519efa7841b" translate="yes" xml:space="preserve">
          <source>Importantly, it doesn't check embedded views, such as &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;, other &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; embedded view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebe828e74096e229b55fc62674259b224c8b59f" translate="yes" xml:space="preserve">
          <source>Imported by</source>
          <target state="translated">进口商</target>
        </trans-unit>
        <trans-unit id="ca029c525e020e030b5763e634cdfa9684f0ec75" translate="yes" xml:space="preserve">
          <source>Imported providers are easily replaced by providers from another imported NgModule. Such replacement might be by design. It could be unintentional and have adverse consequences.</source>
          <target state="translated">导入的提供者很容易被另一个导入的NgModule的提供者替换。这种替换可能是设计上的,也可能是无意的,会产生不良后果。它可能是无意的,会产生不良后果。</target>
        </trans-unit>
        <trans-unit id="4c410a4e7ce454cc0a669f85789fcc7292be2656" translate="yes" xml:space="preserve">
          <source>Importing &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; also frees feature modules for use on &lt;em&gt;any&lt;/em&gt; target platform, not just browsers.</source>
          <target state="translated">导入 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 还可以释放功能模块，以供在&lt;em&gt;任何&lt;/em&gt;目标平台上使用，而不仅仅是浏览器。</target>
        </trans-unit>
        <trans-unit id="0926c5352a1ed8fd6d4008f3a9505f53d26d0c72" translate="yes" xml:space="preserve">
          <source>Importing &lt;code&gt;&lt;a href=&quot;../api/service-worker/serviceworkermodule&quot;&gt;ServiceWorkerModule&lt;/a&gt;&lt;/code&gt; into your &lt;code&gt;AppModule&lt;/code&gt; doesn't just register the service worker, it also provides a few services you can use to interact with the service worker and control the caching of your app.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../api/service-worker/serviceworkermodule&quot;&gt;ServiceWorkerModule&lt;/a&gt;&lt;/code&gt; 导入到 &lt;code&gt;AppModule&lt;/code&gt; 中不仅可以注册服务工作者，它还提供了一些服务，可用于与服务工作者进行交互并控制应用程序的缓存。</target>
        </trans-unit>
        <trans-unit id="bf8398dc7932850ef3407d2abc867f5242eaa718" translate="yes" xml:space="preserve">
          <source>Importing a feature module</source>
          <target state="translated">导入功能模块</target>
        </trans-unit>
        <trans-unit id="b15db4d28a6b8ab83dd5b14c0f07467630615c89" translate="yes" xml:space="preserve">
          <source>Importing a module does &lt;em&gt;not&lt;/em&gt; automatically re-export the imported module's imports. Module 'B' can't use &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; just because it imported module 'A' which imported &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;. Module 'B' must import &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; itself.</source>
          <target state="translated">导入模块会&lt;em&gt;不会&lt;/em&gt;自动重新导出导入模块的进口。模块'B'不能使用 &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; 只是因为它导入了导入 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 的模块'A' 。模块&amp;ldquo; B&amp;rdquo;必须本身导入 &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50f4da678c72bbf5ccb3812d54bcbc40fe9377ba" translate="yes" xml:space="preserve">
          <source>Importing modules</source>
          <target state="translated">导入模块</target>
        </trans-unit>
        <trans-unit id="6c6759a5009501ce940b68c3c6c4d0a88982af01" translate="yes" xml:space="preserve">
          <source>Importing the component's feature module can be the easiest way to configure tests when there are many mutual dependencies within the module and the module is small, as feature modules tend to be.</source>
          <target state="translated">当模块内有很多相互依赖关系,且模块较小时,导入组件的功能模块是最简单的配置测试方式,因为功能模块往往是这样。</target>
        </trans-unit>
        <trans-unit id="21270ddcd2b8b36dcd36ba9dc2e65ba937443e00" translate="yes" xml:space="preserve">
          <source>Importing the feature area NgModule into the &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3c1a6c640cbb3ff72c5cdbdda365799c5166c1" translate="yes" xml:space="preserve">
          <source>Importing your new components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc45a2a577a313a667ab95b3f67c568aecf86f0" translate="yes" xml:space="preserve">
          <source>Imports and registers the service worker in the app module.</source>
          <target state="translated">导入并注册app模块中的服务工作者。</target>
        </trans-unit>
        <trans-unit id="a83a0fc0cd6287cabf3642ac5ae77c9a4a861c22" translate="yes" xml:space="preserve">
          <source>Imports and route configuration</source>
          <target state="translated">进口和路线配置</target>
        </trans-unit>
        <trans-unit id="3814cab387da7b9062d6ab2735ba73f5e9829045" translate="yes" xml:space="preserve">
          <source>Imports other modules with the components, directives, and pipes that components in the current module need.</source>
          <target state="translated">导入其他模块的组件、指令和当前模块中组件所需的管道。</target>
        </trans-unit>
        <trans-unit id="d61c28aebf6d9a308688684bd0963349f916d660" translate="yes" xml:space="preserve">
          <source>Imports the animation symbols that build the animation triggers, control state, and manage transitions between states.</source>
          <target state="translated">导入动画符号,建立动画触发器,控制状态,并管理状态之间的转换。</target>
        </trans-unit>
        <trans-unit id="969b1f7fd31248b651ab09920846952d22265f1a" translate="yes" xml:space="preserve">
          <source>Improve debugging with better Angular error messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea98dc51784321beb1402d5791647e70f12893b" translate="yes" xml:space="preserve">
          <source>Improve overall data quality by validating user input for accuracy and completeness.</source>
          <target state="translated">通过验证用户输入的准确性和完整性,提高整体数据质量。</target>
        </trans-unit>
        <trans-unit id="a3b0e66bdae797196b6b8788ae8a0c136f597b0d" translate="yes" xml:space="preserve">
          <source>Improve performance by pre-fetching route data and lazy loading feature modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44c2ca2637e46280e6e09bd5b6ff5f7c525f378" translate="yes" xml:space="preserve">
          <source>Improve performance on mobile and low-powered devices</source>
          <target state="translated">提高移动和低功耗设备的性能。</target>
        </trans-unit>
        <trans-unit id="eeeab4f650457717006bfb970c8280a15fa896ca" translate="yes" xml:space="preserve">
          <source>Improved build performance with ngc as a tsc plugin distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a27691e865b7979531873ee280a5a3243bcb0f1" translate="yes" xml:space="preserve">
          <source>Improved developer onboarding with refreshed introductory documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769e1298b6774dc3ae80f0664e3cf40ae3aa8a3e" translate="yes" xml:space="preserve">
          <source>Improved test times and debugging with automatic test environment tear down</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9b3986f782d4faa661a57a4c4f5fd5422669f8" translate="yes" xml:space="preserve">
          <source>Improving template type checking for custom directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0414193d62ac6c0f1bf1c02847690c0c2c4c6f1" translate="yes" xml:space="preserve">
          <source>Impure pipes</source>
          <target state="translated">不纯管道</target>
        </trans-unit>
        <trans-unit id="6b0407cc45edc7407381780a1a2e8b0dc444dee0" translate="yes" xml:space="preserve">
          <source>Impure pipes are called whenever change detection runs for a component, which could be every few milliseconds for &lt;code&gt;CheckAlways&lt;/code&gt;. To avoid performance problems, call the server only when the requested URL changes, as shown in the following example, and use the pipe to cache the server response. The tabs show the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c8cdf511a1c885e6f77a48066eec8b1854da94" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt;, a function that operates on a &lt;a href=&quot;glossary#file-tree&quot;&gt;file tree&lt;/a&gt; to create, delete, or modify files in a specific manner.</source>
          <target state="translated">在&lt;a href=&quot;glossary#schematic&quot;&gt;示意图中&lt;/a&gt;，该功能在&lt;a href=&quot;glossary#file-tree&quot;&gt;文件树上&lt;/a&gt;运行，以特定方式创建，删除或修改文件。</target>
        </trans-unit>
        <trans-unit id="b691bd4b8205b08475f3b410f51f0a0d3db24979" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt;, a virtual file system represented by the &lt;code&gt;Tree&lt;/code&gt; class. Schematic &lt;a href=&quot;glossary#rule&quot;&gt;rules&lt;/a&gt; take a tree object as input, operate on them, and return a new tree object.</source>
          <target state="translated">在&lt;a href=&quot;glossary#schematic&quot;&gt;示意图中&lt;/a&gt;，由 &lt;code&gt;Tree&lt;/code&gt; 类表示的虚拟文件系统。逻辑示意图&lt;a href=&quot;glossary#rule&quot;&gt;规则&lt;/a&gt;将树对象作为输入，对其进行操作，然后返回新的树对象。</target>
        </trans-unit>
        <trans-unit id="24e713671eb935b94463bbfce75319fb7e81b738" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;http#adding-headers&quot;&gt;Adding headers&lt;/a&gt;, the &lt;code&gt;HeroesService&lt;/code&gt; set the default headers by passing an options object (&lt;code&gt;httpOptions&lt;/code&gt;) to its save methods. You can do more.</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http#adding-headers&quot;&gt;添加标头&amp;rdquo;中&lt;/a&gt;， &lt;code&gt;HeroesService&lt;/code&gt; 通过将选项对象（ &lt;code&gt;httpOptions&lt;/code&gt; ）传递到其保存方法来设置默认标头。您可以做更多。</target>
        </trans-unit>
        <trans-unit id="419fc7b32aa230897c77ab6ce882d85080a20dfc" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;, install the extension from the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Angular.ng-template&quot;&gt;Extensions: Marketplace&lt;/a&gt;. You can open the marketplace from the editor using the Extensions icon on the left menu pane, or use VS Quick Open (⌘+P on Mac, CTRL+P on Windows) and type &quot;? ext&quot;.</source>
          <target state="translated">在&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code中&lt;/a&gt;，从&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Angular.ng-template&quot;&gt;扩展：市场中&lt;/a&gt;安装扩展。您可以使用左侧菜单窗格中的扩展程序图标从编辑器中打开市场，或使用VS快速打开（在Mac上为⌘+ P，在Windows上为CTRL + P）并输入&amp;ldquo;？ext&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="8b5b24ded6357d77d1fbb26f1eab50bd8beae2b5" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt;, enable the plugin &lt;a href=&quot;https://plugins.jetbrains.com/plugin/6971-angular-and-angularjs&quot;&gt;Angular and AngularJS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de07a30f188c92d5f5c9abf71459a306a224cdb" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt;, you must install the language service package as a project dependency.</source>
          <target state="translated">在&lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm中&lt;/a&gt;，必须将语言服务包安装为项目依赖项。</target>
        </trans-unit>
        <trans-unit id="189f9093d7a12a56913779caf0448dafddac81fa" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;, the Language Service supports only in-line templates when installed as a plug-in. You need a custom Sublime plug-in (or modifications to the current plug-in) for completions in HTML files.</source>
          <target state="translated">在&lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text中&lt;/a&gt;，语言服务作为插件安装时仅支持嵌入式模板。您需要自定义Sublime插件（或对当前插件的修改）才能完成HTML文件。</target>
        </trans-unit>
        <trans-unit id="c5f51ca55d5ad2c30fa2f2f2c23e29a882d2b6a5" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;ivy&quot;&gt;Angular Ivy&lt;/a&gt;, the template type checker has been completely rewritten to be more capable as well as stricter, meaning it can catch a variety of new errors that the previous type checker would not detect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6adea1758de937c6940c286e654edf1f70a7341d" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;HeroService&lt;/code&gt;, import the &lt;code&gt;MessageService&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;HeroService&lt;/code&gt; 中，导入 &lt;code&gt;MessageService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="941837469f8f7292381b4b5d7fb8f52141c4b5b9" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;ProfileEditorComponent&lt;/code&gt;, use the &lt;code&gt;updateProfile&lt;/code&gt; method with the example below to update the first name and street address for the user.</source>
          <target state="translated">在 &lt;code&gt;ProfileEditorComponent&lt;/code&gt; 中，使用带有以下示例的 &lt;code&gt;updateProfile&lt;/code&gt; 方法来更新用户的名字和街道地址。</target>
        </trans-unit>
        <trans-unit id="c4552c52e0555afb5d7c5f59701433a331470a05" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;angular.json&lt;/code&gt; add two new configuration sections under the &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;serve&lt;/code&gt; targets to point to the new TypeScript configuration.</source>
          <target state="translated">在 &lt;code&gt;angular.json&lt;/code&gt; 中，在 &lt;code&gt;build&lt;/code&gt; 下添加两个新的配置部分，并 &lt;code&gt;serve&lt;/code&gt; 目标以指向新的TypeScript配置。</target>
        </trans-unit>
        <trans-unit id="afca841ae46663ab78571026445492242945a6dc" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;app.component.ts&lt;/code&gt;, &lt;code&gt;currentItems&lt;/code&gt; is an array of objects in the same shape as the &lt;code&gt;Item&lt;/code&gt; object in &lt;code&gt;items.ts&lt;/code&gt;, with an &lt;code&gt;id&lt;/code&gt; and a &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a62840642f50411d045256c59444f30c7be873" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;app.module.ts&lt;/code&gt;, add a route for product details, with a &lt;code&gt;path&lt;/code&gt; of &lt;code&gt;products/:productId&lt;/code&gt; and &lt;code&gt;ProductDetailsComponent&lt;/code&gt; for the &lt;code&gt;component&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;app.module.ts&lt;/code&gt; ，添加路由产品的详细信息，与 &lt;code&gt;path&lt;/code&gt; 的 &lt;code&gt;products/:productId&lt;/code&gt; 和 &lt;code&gt;ProductDetailsComponent&lt;/code&gt; 的 &lt;code&gt;component&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c81e966129850cf415f6248bea69d0b9ed06ad7c" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;app.module.ts&lt;/code&gt;, add a route for shipping. Specify a &lt;code&gt;path&lt;/code&gt; of &lt;code&gt;shipping&lt;/code&gt; and a component of &lt;code&gt;ShippingComponent&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;app.module.ts&lt;/code&gt; 中，添加运输路线。指定 &lt;code&gt;path&lt;/code&gt; 的 &lt;code&gt;shipping&lt;/code&gt; 和组件 &lt;code&gt;ShippingComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d895fdb94f9534c8a2f82b3d299e8227073cbd3" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;app.module.ts&lt;/code&gt;, remove the &lt;code&gt;AdminModule&lt;/code&gt; import statement from the top of the file and remove the &lt;code&gt;AdminModule&lt;/code&gt; from the NgModule's &lt;code&gt;imports&lt;/code&gt; array.</source>
          <target state="translated">在 &lt;code&gt;app.module.ts&lt;/code&gt; 中，从文件顶部删除 &lt;code&gt;AdminModule&lt;/code&gt; import语句，然后从NgModule的 &lt;code&gt;imports&lt;/code&gt; 数组中删除 &lt;code&gt;AdminModule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66c95ce78c49c2b818a248ba1ca84d28c18823cf" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;cart.component.ts&lt;/code&gt;, define an &lt;code&gt;onSubmit()&lt;/code&gt; method to process the form. Use the &lt;code&gt;CartService#clearCart()&lt;/code&gt; method to empty the cart items and reset the form after it is submitted. (In a real-world app, this method also would submit the data to an external server.)</source>
          <target state="translated">在 &lt;code&gt;cart.component.ts&lt;/code&gt; 中，定义一个 &lt;code&gt;onSubmit()&lt;/code&gt; 方法来处理表单。使用 &lt;code&gt;CartService#clearCart()&lt;/code&gt; 方法清空购物车项目，并在提交表单后重置表单。（在实际应用中，此方法还会将数据提交到外部服务器。）</target>
        </trans-unit>
        <trans-unit id="03b649f3d6c4a1c2196ae63a64954a5fc383db3c" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;cart.component.ts&lt;/code&gt;, define an &lt;code&gt;onSubmit()&lt;/code&gt; method to process the form. Use the &lt;code&gt;CartService&lt;/code&gt;&lt;code&gt;clearCart()&lt;/code&gt; method to empty the cart items and reset the form after its submission. In a real-world app, this method would also submit the data to an external server. The entire cart component class is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5334d2075d36a21eeb7a9fdb6756d0e3353959" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;index.html&lt;/code&gt;, change base href from &lt;code&gt;&amp;lt;base href=&quot;/&quot;&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;base href=&quot;/src/&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;index.html&lt;/code&gt; 中，将基本href从 &lt;code&gt;&amp;lt;base href=&quot;/&quot;&amp;gt;&lt;/code&gt; 更改为 &lt;code&gt;&amp;lt;base href=&quot;/src/&quot;&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d4c2508f6f46eaa4133ffeeaac2bf21600b45b7" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;product-list.component.html&lt;/code&gt;, bind the &lt;code&gt;app-product-alerts&lt;/code&gt; component (which is what displays the &quot;Notify Me&quot; button) to the &lt;code&gt;onNotify()&lt;/code&gt; method of the product list component.</source>
          <target state="translated">在 &lt;code&gt;product-list.component.html&lt;/code&gt; 中，将 &lt;code&gt;app-product-alerts&lt;/code&gt; product-alerts组件（显示&amp;ldquo; Notify Me&amp;rdquo;按钮的内容） &lt;code&gt;onNotify()&lt;/code&gt; 到产品列表组件的onNotify（）方法。</target>
        </trans-unit>
        <trans-unit id="c03f59b331ed7156718b1228952832ea7836769c" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;src/systemjs.config.js&lt;/code&gt;, near the top of the file, change the npm &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;/node_modules/&lt;/code&gt; with a slash.</source>
          <target state="translated">在文件顶部附近的 &lt;code&gt;src/systemjs.config.js&lt;/code&gt; 中，用斜杠将npm &lt;code&gt;path&lt;/code&gt; 更改为 &lt;code&gt;/node_modules/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bc1fafefe77f9932ae7d735645c4d33c9cc2eeb" translate="yes" xml:space="preserve">
          <source>In Angular CLI version 8 and higher, applications are built using &lt;em&gt;differential loading&lt;/em&gt;, a strategy where the CLI builds two separate bundles as part of your deployed application.</source>
          <target state="translated">在Angular CLI版本8和更高版本中，应用程序是使用&lt;em&gt;差异加载&lt;/em&gt;构建的，&lt;em&gt;差异加载&lt;/em&gt;是一种策略，其中CLI会构建两个单独的捆绑软件作为已部署应用程序的一部分。</target>
        </trans-unit>
        <trans-unit id="e1431faabdc821757fa86b84a541dce584ba7634" translate="yes" xml:space="preserve">
          <source>In Angular CLI version 8 and higher, differential loading is enabled by default for the &lt;code&gt;ng build&lt;/code&gt; command. The &lt;code&gt;ng serve&lt;/code&gt;, &lt;code&gt;ng test&lt;/code&gt;, and &lt;code&gt;ng e2e&lt;/code&gt; commands, however, generate a single ES2015 build which cannot run in older browsers that don't support the modules, such as IE 11.</source>
          <target state="translated">在Angular CLI版本8和更高版本中，默认情况下为 &lt;code&gt;ng build&lt;/code&gt; 命令启用差异加载。但是， &lt;code&gt;ng serve&lt;/code&gt; ， &lt;code&gt;ng test&lt;/code&gt; 和 &lt;code&gt;ng e2e&lt;/code&gt; 命令会生成一个ES2015版本，该版本无法在不支持该模块的旧版浏览器（例如IE 11）中运行。</target>
        </trans-unit>
        <trans-unit id="7b1d3994bf24bcb2d7b3fdd86f51dccd601e9753" translate="yes" xml:space="preserve">
          <source>In Angular terminology, a platform is the context in which an Angular application runs. The most common platform for Angular applications is a web browser, but it can also be an operating system for a mobile device, or a web server.</source>
          <target state="translated">在Angular术语中,平台是Angular应用运行的上下文。Angular应用最常见的平台是Web浏览器,但也可以是移动设备的操作系统,或Web服务器。</target>
        </trans-unit>
        <trans-unit id="46dd64bbc88ed581429aca94fdd9f3452d9971db" translate="yes" xml:space="preserve">
          <source>In Angular things are different. While change detection still occurs after every event, no one needs to call &lt;code&gt;scope.$apply()&lt;/code&gt; for that to happen. This is because all Angular code runs inside something called the &lt;a href=&quot;../api/core/ngzone&quot;&gt;Angular zone&lt;/a&gt;. Angular always knows when the code finishes, so it also knows when it should kick off change detection. The code itself doesn't have to call &lt;code&gt;scope.$apply()&lt;/code&gt; or anything like it.</source>
          <target state="translated">在Angular中，情况有所不同。尽管在每个事件之后仍会进行更改检测，但没有人需要调用 &lt;code&gt;scope.$apply()&lt;/code&gt; 来实现。这是因为所有Angular代码都在称为&lt;a href=&quot;../api/core/ngzone&quot;&gt;Angular zone的&lt;/a&gt;内部运行。Angular总是知道代码何时完成，因此它也知道何时应该启动更改检测。代码本身不必调用 &lt;code&gt;scope.$apply()&lt;/code&gt; 或类似的东西。</target>
        </trans-unit>
        <trans-unit id="d45210191612fe3bb5ec53b02b0be46f15c8ce7c" translate="yes" xml:space="preserve">
          <source>In Angular version 9, the template type checker checks whether a binding expression's type is compatible with that of the corresponding directive input. As an example, consider the following component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c74df3bafb8f0880b2718e644a5bb702ff44a77" translate="yes" xml:space="preserve">
          <source>In Angular you use similar syntax with the pipe (|) character to filter output, but now you call them &lt;strong&gt;pipes&lt;/strong&gt;. Many (but not all) of the built-in filters from AngularJS are built-in pipes in Angular.</source>
          <target state="translated">在Angular中，您使用类似的语法将竖线（|）字符用于过滤输出，但是现在将它们称为&lt;strong&gt;竖线&lt;/strong&gt;。AngularJS的许多（但不是全部）内置过滤器是Angular中的内置管道。</target>
        </trans-unit>
        <trans-unit id="95111c94dbd226bf1c1dbcb0a6c5aa4131254f48" translate="yes" xml:space="preserve">
          <source>In Angular, &lt;code&gt;href&lt;/code&gt; is no longer used for routing. Routing uses &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt;, as shown in the following example.</source>
          <target state="translated">在Angular中， &lt;code&gt;href&lt;/code&gt; 不再用于路由。路由使用 &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; ，如以下示例所示。</target>
        </trans-unit>
        <trans-unit id="5776268b8d76370b45f02f052a40cf650053642c" translate="yes" xml:space="preserve">
          <source>In Angular, &lt;strong&gt;two-way binding&lt;/strong&gt; is denoted by &lt;code&gt;[()]&lt;/code&gt;, descriptively referred to as a &quot;banana in a box&quot;. This syntax is a shortcut for defining both property binding (from the component to the view) and event binding (from the view to the component), thereby providing two-way binding.</source>
          <target state="translated">在Angular中，&lt;strong&gt;双向绑定&lt;/strong&gt;由 &lt;code&gt;[()]&lt;/code&gt; 表示，描述性地称为&amp;ldquo;盒子里的香蕉&amp;rdquo;。此语法是定义属性绑定（从组件到视图）和事件绑定（从视图到组件）的快捷方式，从而提供双向绑定。</target>
        </trans-unit>
        <trans-unit id="f933bc6fc4b7b3378ae37914c32604c21b7bac57" translate="yes" xml:space="preserve">
          <source>In Angular, a &lt;a href=&quot;glossary#project&quot;&gt;project&lt;/a&gt; that provides functionality that can be included in other Angular apps. A library isn't a complete Angular app and can't run independently. (To add re-usable Angular functionality to non-Angular web apps, you can use Angular &lt;a href=&quot;glossary#angular-element&quot;&gt;custom elements&lt;/a&gt;.)</source>
          <target state="translated">在Angular中，一个&lt;a href=&quot;glossary#project&quot;&gt;项目&lt;/a&gt;，其提供可以包含在其他Angular应用程序中的功能。库不是完整的Angular应用程序，不能独立运行。（要将可重复使用的Angular功能添加到非Angular Web应用程序中，可以使用Angular &lt;a href=&quot;glossary#angular-element&quot;&gt;自定义元素&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="95d6afe08573bb93eca1cae171a8aa8ac1cf2775" translate="yes" xml:space="preserve">
          <source>In Angular, a &lt;em&gt;template&lt;/em&gt; is a chunk of HTML. Within a template, you can use special syntax to leverage many of Angular's features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d102678eee21e14e16ac6c77664ce7f07fe617f" translate="yes" xml:space="preserve">
          <source>In Angular, a class with the &lt;a href=&quot;glossary#injectable&quot;&gt;@Injectable()&lt;/a&gt; decorator that encapsulates non-UI logic and code that can be reused across an application. Angular distinguishes components from services to increase modularity and reusability.</source>
          <target state="translated">在Angular中，这是一个带有&lt;a href=&quot;glossary#injectable&quot;&gt;@Injectable（）&lt;/a&gt;装饰器的类，该类封装可在整个应用程序中重用的非UI逻辑和代码。Angular将组件与服务区分开来，以提高模块化和可重用性。</target>
        </trans-unit>
        <trans-unit id="42472280db2836f2049c258a790c8995069f17d9" translate="yes" xml:space="preserve">
          <source>In Angular, a set of related &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt; collected in an &lt;a href=&quot;glossary#npm-package&quot;&gt;npm package&lt;/a&gt;.</source>
          <target state="translated">在Angular中，在&lt;a href=&quot;glossary#npm-package&quot;&gt;npm软件包中&lt;/a&gt;收集了一组相关的&lt;a href=&quot;glossary#schematic&quot;&gt;示意图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e67a287fde6cc9945eb3f6d9f0c4d95950a65f6b" translate="yes" xml:space="preserve">
          <source>In Angular, a template expression in curly braces still denotes one-way binding. This binds the value of the element to a property of the component. The context of the binding is implied and is always the associated component, so it needs no reference variable.</source>
          <target state="translated">在Angular中,大括号中的模板表达式仍然表示单向绑定。这将元素的值绑定到组件的某个属性上。绑定的上下文是隐含的,总是关联的组件,所以不需要引用变量。</target>
        </trans-unit>
        <trans-unit id="43af6c84f806d548cba3d9e875a82ca2c2ac11d1" translate="yes" xml:space="preserve">
          <source>In Angular, an app's root NgModule (&lt;code&gt;AppModule&lt;/code&gt;) has a &lt;code&gt;bootstrap&lt;/code&gt; property that identifies the app's top-level &lt;a href=&quot;glossary#component&quot;&gt;components&lt;/a&gt;. During the bootstrap process, Angular creates and inserts these components into the &lt;code&gt;index.html&lt;/code&gt; host web page. You can bootstrap multiple apps in the same &lt;code&gt;index.html&lt;/code&gt;. Each app contains its own components.</source>
          <target state="translated">在Angular中，应用程序的根NgModule（ &lt;code&gt;AppModule&lt;/code&gt; ）具有 &lt;code&gt;bootstrap&lt;/code&gt; 属性，该属性标识应用程序的顶级&lt;a href=&quot;glossary#component&quot;&gt;组件&lt;/a&gt;。在引导过程中，Angular将创建这些组件并将其插入到 &lt;code&gt;index.html&lt;/code&gt; 主机网页中。您可以在同一 &lt;code&gt;index.html&lt;/code&gt; 中引导多个应用程序。每个应用程序都包含自己的组件。</target>
        </trans-unit>
        <trans-unit id="854deb5a01aad6ed0edbb17479ccae63f79a55ba" translate="yes" xml:space="preserve">
          <source>In Angular, component CSS styles are encapsulated into the component's view and don't affect the rest of the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb7472c46802d488a515304f6fc524e7754d847" translate="yes" xml:space="preserve">
          <source>In Angular, components are the main primitive from which user interfaces are built. You define the different portions of the UI as components and compose them into a full user experience.</source>
          <target state="translated">在Angular中,组件是构建用户界面的主要基元。你将UI的不同部分定义为组件,并将它们组成一个完整的用户体验。</target>
        </trans-unit>
        <trans-unit id="d57111c7e00014610f562bb31fefc30b6f3895c6" translate="yes" xml:space="preserve">
          <source>In Angular, dependencies are typically services, but they also can be values, such as strings or functions. An &lt;a href=&quot;glossary#injector&quot;&gt;injector&lt;/a&gt; for an app (created automatically during bootstrap) instantiates dependencies when needed, using a configured &lt;a href=&quot;glossary#provider&quot;&gt;provider&lt;/a&gt; of the service or value.</source>
          <target state="translated">在Angular中，依赖项通常是服务，但它们也可以是值，例如字符串或函数。应用程序的&lt;a href=&quot;glossary#injector&quot;&gt;注入器&lt;/a&gt;（在引导过程中自动创建）在需要时使用配置的服务或值&lt;a href=&quot;glossary#provider&quot;&gt;提供&lt;/a&gt;程序实例化依赖项。</target>
        </trans-unit>
        <trans-unit id="49a00199a43ff42e00e1d7703a54a94326ede49c" translate="yes" xml:space="preserve">
          <source>In Angular, the &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;&lt;/code&gt; directive works similarly. It includes/excludes CSS classes based on an expression.</source>
          <target state="translated">在Angular中， &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;ngClass&lt;/a&gt;&lt;/code&gt; 指令的工作方式与此类似。它包括/排除基于表达式的CSS类。</target>
        </trans-unit>
        <trans-unit id="3bf0e4f69a8ebfd62b6c1ef86d6048033054f53f" translate="yes" xml:space="preserve">
          <source>In Angular, the &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;ngStyle&lt;/a&gt;&lt;/code&gt; directive works similarly. It sets a CSS style on an HTML element based on an expression.</source>
          <target state="translated">在Angular中， &lt;code&gt;&lt;a href=&quot;../api/common/ngstyle&quot;&gt;ngStyle&lt;/a&gt;&lt;/code&gt; 指令的工作原理类似。它基于表达式在HTML元素上设置CSS样式。</target>
        </trans-unit>
        <trans-unit id="d14c88becd3c4b7ad223e1c52839e5fb106a2219" translate="yes" xml:space="preserve">
          <source>In Angular, the &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; directive works similarly. It displays an element whose &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;&lt;/code&gt; matches the current &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; expression value.</source>
          <target state="translated">在Angular中， &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; 指令的工作方式与此类似。它显示其 &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;&lt;/code&gt; 与当前 &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; 表达式值匹配的元素。</target>
        </trans-unit>
        <trans-unit id="7fa35db99b5e7128d37e25c36e032619af14914f" translate="yes" xml:space="preserve">
          <source>In Angular, the DI framework provides declared dependencies to a class when that class is instantiated. This guide explains how DI works in Angular, and how you use it to make your apps flexible, efficient, and robust, as well as testable and maintainable.</source>
          <target state="translated">在Angular中,当一个类被实例化时,DI框架为该类提供了声明的依赖关系。本指南解释了DI如何在Angular中工作,以及如何使用它使你的应用程序灵活、高效、健壮,以及可测试和可维护。</target>
        </trans-unit>
        <trans-unit id="56cf5a3785dda1a9e94cccd5c7f98706c65752e1" translate="yes" xml:space="preserve">
          <source>In Angular, the best practice is to load and configure the router in a separate, top-level module that is dedicated to routing and imported by the root &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">在Angular中，最佳实践是在单独的顶级模块中加载和配置路由器，该模块专用于路由并由根 &lt;code&gt;AppModule&lt;/code&gt; 导入。</target>
        </trans-unit>
        <trans-unit id="59cb913403e7197319cc31442b4a8397dc93031f" translate="yes" xml:space="preserve">
          <source>In Angular, the template no longer specifies its associated controller. Rather, the component specifies its associated template as part of the component class decorator.</source>
          <target state="translated">在Angular中,模板不再指定其关联的控制器。相反,组件指定其关联的模板作为组件类装饰器的一部分。</target>
        </trans-unit>
        <trans-unit id="5d2ddeeb7cdda93a0f1d676dfcb267a980c9fb20" translate="yes" xml:space="preserve">
          <source>In Angular, transition states can be defined explicitly through the &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; function, or using the predefined &lt;code&gt;*&lt;/code&gt; (wildcard) and &lt;code&gt;void&lt;/code&gt; states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25736a6eef4ea1a73caec95ccf80b14819cbeacf" translate="yes" xml:space="preserve">
          <source>In Angular, transition states can be defined explicitly through the &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; function, or using the predefined &lt;code&gt;*&lt;/code&gt; (wildcard) and &lt;code&gt;void&lt;/code&gt; states.</source>
          <target state="translated">在Angular中，可以通过 &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 函数或使用预定义的 &lt;code&gt;*&lt;/code&gt; （通配符）和 &lt;code&gt;void&lt;/code&gt; 状态显式定义过渡状态。</target>
        </trans-unit>
        <trans-unit id="4e131d233620271698d30ea65871deadb93e35a0" translate="yes" xml:space="preserve">
          <source>In Angular, use JSONP by including &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientjsonpmodule&quot;&gt;HttpClientJsonpModule&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; imports. In the following example, the &lt;code&gt;searchHeroes()&lt;/code&gt; method uses a JSONP request to query for heroes whose names contain the search term.</source>
          <target state="translated">在Angular中，通过在 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 导入中包含 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientjsonpmodule&quot;&gt;HttpClientJsonpModule&lt;/a&gt;&lt;/code&gt; 来使用JSONP 。在以下示例中， &lt;code&gt;searchHeroes()&lt;/code&gt; 方法使用JSONP请求来查询名称包含搜索词的英雄。</target>
        </trans-unit>
        <trans-unit id="95bc62450c4a6ad00b962b6c8b2526a974d4070b" translate="yes" xml:space="preserve">
          <source>In Angular, you can set multiple styles without any animation. However, without further refinement, the button instantly transforms with no fade, no shrinkage, or other visible indicator that a change is occurring.</source>
          <target state="translated">在Angular中,你可以在没有任何动画的情况下设置多个样式。然而,不需要进一步的细化,按钮就会立即转换,没有淡化,没有收缩,或者其他发生变化的可见指标。</target>
        </trans-unit>
        <trans-unit id="db7fc84f2aa2ba81061de8add0ab492452e7b00b" translate="yes" xml:space="preserve">
          <source>In Angular, you can use the &lt;code&gt;styles&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;&lt;/code&gt; property of the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata to define a style sheet for a particular component.</source>
          <target state="translated">在Angular中，您可以使用 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;元数据的 &lt;code&gt;styles&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../api/core/component#styleUrls&quot;&gt;styleUrls&lt;/a&gt;&lt;/code&gt; 属性来定义特定组件的样式表。</target>
        </trans-unit>
        <trans-unit id="b15804b26932b791e746d66ee9a7371c2cdd16b6" translate="yes" xml:space="preserve">
          <source>In Angular, you can use the &lt;code&gt;styles&lt;/code&gt; or &lt;code&gt;styleUrls&lt;/code&gt; property of the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata to define a style sheet for a particular component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917fd81c1d70d9d7fbe4bfbac7c25842ecbe5775" translate="yes" xml:space="preserve">
          <source>In Angular, you create a component class to contain the data model and control methods. Use the TypeScript &lt;code&gt;export&lt;/code&gt; keyword to export the class so that the functionality can be imported into NgModules.</source>
          <target state="translated">在Angular中，您将创建一个组件类来包含数据模型和控制方法。使用TypeScript &lt;code&gt;export&lt;/code&gt; 关键字导出类，以便可以将功能导入到NgModules中。</target>
        </trans-unit>
        <trans-unit id="9d13198215c21edc80169cd08c0e85464770e5e5" translate="yes" xml:space="preserve">
          <source>In Angular, you pass in dependencies as arguments to the component class constructor. This example injects a &lt;code&gt;MovieService&lt;/code&gt;. The first parameter's TypeScript type tells Angular what to inject, even after minification.</source>
          <target state="translated">在Angular中，您将依赖项作为参数传递给组件类构造函数。本示例将注入 &lt;code&gt;MovieService&lt;/code&gt; 。第一个参数的TypeScript类型告诉Angular注入什么，即使缩小之后也是如此。</target>
        </trans-unit>
        <trans-unit id="2befa90df23e1fd4a51bf9026307335169223d9a" translate="yes" xml:space="preserve">
          <source>In Angular, you use property binding; there is no built-in &lt;em&gt;hide&lt;/em&gt; directive. For more information, see &lt;a href=&quot;ajs-quick-reference#ng-show&quot;&gt;ng-show&lt;/a&gt;.</source>
          <target state="translated">在Angular中，使用属性绑定。没有内置的&lt;em&gt;hide&lt;/em&gt;指令。有关更多信息，请参见&lt;a href=&quot;ajs-quick-reference#ng-show&quot;&gt;ng-show&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7cabd7a1d2e9dfa73456a5cfdfed14d83c3ff687" translate="yes" xml:space="preserve">
          <source>In AngularJS, an Angular module keeps track of controllers, services, and other code. The second argument defines the list of other modules that this module depends upon.</source>
          <target state="translated">在AngularJS中,一个Angular模块会跟踪控制器、服务和其他代码。第二个参数定义了这个模块所依赖的其他模块的列表。</target>
        </trans-unit>
        <trans-unit id="59f6e03fe28a109551d993bba2ab50942b6034e7" translate="yes" xml:space="preserve">
          <source>In AngularJS, an expression in curly braces denotes one-way binding. This binds the value of the element to a property in the controller associated with this template.</source>
          <target state="translated">在AngularJS中,大括号中的表达式表示单向绑定。这将元素的值绑定到与该模板相关联的控制器中的一个属性。</target>
        </trans-unit>
        <trans-unit id="c6449941b0d5bd79435ee303f5b25fb1a3a1c3df" translate="yes" xml:space="preserve">
          <source>In AngularJS, an immediately invoked function expression (or IIFE) around controller code keeps it out of the global namespace.</source>
          <target state="translated">在AngularJS中,围绕控制器代码的立即调用函数表达式(或IIFE)使其不在全局命名空间中。</target>
        </trans-unit>
        <trans-unit id="3402c056b50a9d166afa19ff142bd9f2d0f52a15" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/%24location&quot;&gt;$location service&lt;/a&gt; handles all routing configuration and navigation, encoding and decoding of URLS, redirects, and interactions with browser APIs. Angular uses its own underlying &lt;code&gt;&lt;a href=&quot;../api/common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; service for all of these tasks.</source>
          <target state="translated">在AngularJS中，&lt;a href=&quot;https://docs.angularjs.org/api/ng/service/%24location&quot;&gt;$ location服务&lt;/a&gt;处理所有路由配置和导航，URLS的编码和解码，重定向以及与浏览器API的交互。Angular将其自身的基础 &lt;code&gt;&lt;a href=&quot;../api/common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; 服务用于所有这些任务。</target>
        </trans-unit>
        <trans-unit id="eb398e0b3db43606304c259cfff7981355eca61f" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;code&gt;ng-class&lt;/code&gt; directive includes/excludes CSS classes based on an expression. That expression is often a key-value control object with each key of the object defined as a CSS class name, and each value defined as a template expression that evaluates to a Boolean value.</source>
          <target state="translated">在AngularJS中， &lt;code&gt;ng-class&lt;/code&gt; 指令包含/排除基于表达式的CSS类。该表达式通常是一个键-值控制对象，该对象的每个键均定义为CSS类名称，每个值均定义为模板表达式，其结果为布尔值。</target>
        </trans-unit>
        <trans-unit id="818af6bd07f74440493d9b442a5bd574408dafb9" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;code&gt;ng-click&lt;/code&gt; directive allows you to specify custom behavior when an element is clicked.</source>
          <target state="translated">在AngularJS中，使用 &lt;code&gt;ng-click&lt;/code&gt; 指令可以指定单击元素时的自定义行为。</target>
        </trans-unit>
        <trans-unit id="2fbad8407ae81e7c90d5bd49b9e78709b7734b35" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;code&gt;ng-controller&lt;/code&gt; directive attaches a controller to the view. Using the &lt;code&gt;ng-controller&lt;/code&gt; (or defining the controller as part of the routing) ties the view to the controller code associated with that view.</source>
          <target state="translated">在AngularJS中， &lt;code&gt;ng-controller&lt;/code&gt; 指令将控制器附加到视图。使用 &lt;code&gt;ng-controller&lt;/code&gt; （或将控制器定义为路由的一部分）将视图与与该视图关联的控制器代码联系起来。</target>
        </trans-unit>
        <trans-unit id="014cadcee952b130a89b2cacda8d8fb19ba39ecf" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;code&gt;ng-hide&lt;/code&gt; directive shows or hides the associated HTML element based on an expression. For more information, see &lt;a href=&quot;ajs-quick-reference#ng-show&quot;&gt;ng-show&lt;/a&gt;.</source>
          <target state="translated">在AngularJS中， &lt;code&gt;ng-hide&lt;/code&gt; 指令基于表达式显示或隐藏关联的HTML元素。有关更多信息，请参见&lt;a href=&quot;ajs-quick-reference#ng-show&quot;&gt;ng-show&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55692422426a5f190e228d159889d4e818c0c281" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;code&gt;ng-href&lt;/code&gt; is often used to activate a route as part of navigation.</source>
          <target state="translated">在AngularJS中，通常将 &lt;code&gt;ng-href&lt;/code&gt; 用作导航的一部分来激活路线。</target>
        </trans-unit>
        <trans-unit id="98ac54bfebe79300df81d93eb3d99942dfa78df6" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;code&gt;ng-if&lt;/code&gt; directive removes or recreates a portion of the DOM, based on an expression. If the expression is false, the element is removed from the DOM.</source>
          <target state="translated">在AngularJS中， &lt;code&gt;ng-if&lt;/code&gt; 指令基于表达式删除或重新创建DOM的一部分。如果表达式为假，则将元素从DOM中删除。</target>
        </trans-unit>
        <trans-unit id="bae5a3f3040e93734d778be2fb6b9823f2178635" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;code&gt;ng-model&lt;/code&gt; directive binds a form control to a property in the controller associated with the template. This provides &lt;strong&gt;two-way binding&lt;/strong&gt;, whereby any change made to the value in the view is synchronized with the model, and any change to the model is synchronized with the value in the view.</source>
          <target state="translated">在AngularJS中， &lt;code&gt;ng-model&lt;/code&gt; 指令将表单控件绑定到与模板关联的控制器中的属性。这提供&lt;strong&gt;了双向绑定&lt;/strong&gt;，从而对视图中的值所做的任何更改都将与模型同步，而对模型的任何更改都将与视图中的值同步。</target>
        </trans-unit>
        <trans-unit id="903b10b4d3b7257fdd75c38b26fddc8e2292ab92" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;code&gt;ng-repeat&lt;/code&gt; directive repeats the associated DOM element for each item in the specified collection.</source>
          <target state="translated">在AngularJS中， &lt;code&gt;ng-repeat&lt;/code&gt; 指令为指定集合中的每个项目重复关联的DOM元素。</target>
        </trans-unit>
        <trans-unit id="2ed583230e835e013e2faaccadd4c5987e0b6dcf" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;code&gt;ng-show&lt;/code&gt; directive shows or hides the associated DOM element, based on an expression.</source>
          <target state="translated">在AngularJS中， &lt;code&gt;ng-show&lt;/code&gt; 指令基于表达式显示或隐藏关联的DOM元素。</target>
        </trans-unit>
        <trans-unit id="71b37da7b6fe1a95ea082ca481f794b3337c391f" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;code&gt;ng-style&lt;/code&gt; directive sets a CSS style on an HTML element based on an expression. That expression is often a key-value control object with each key of the object defined as a CSS property, and each value defined as an expression that evaluates to a value appropriate for the style.</source>
          <target state="translated">在AngularJS中， &lt;code&gt;ng-style&lt;/code&gt; 指令基于表达式在HTML元素上设置CSS样式。该表达式通常是一个键值控制对象，该对象的每个键都定义为CSS属性，每个值都定义为一个表达式，该表达式的计算结果适合该样式。</target>
        </trans-unit>
        <trans-unit id="e0656ba1ea23edbe16f8089baec62aca2d5b8917" translate="yes" xml:space="preserve">
          <source>In AngularJS, the &lt;code&gt;ng-switch&lt;/code&gt; directive swaps the contents of an element by selecting one of the templates based on the current value of an expression.</source>
          <target state="translated">在AngularJS中， &lt;code&gt;ng-switch&lt;/code&gt; 指令通过基于表达式的当前值选择模板之一来交换元素的内容。</target>
        </trans-unit>
        <trans-unit id="1d52894dd4f10a8182acd7f3bd00849e805e2e2e" translate="yes" xml:space="preserve">
          <source>In AngularJS, you pass in any dependencies as controller function arguments. This example injects a &lt;code&gt;MovieService&lt;/code&gt;.</source>
          <target state="translated">在AngularJS中，您将任何依赖项作为控制器函数参数传递。本示例将注入 &lt;code&gt;MovieService&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ac4f51e9351e87b9cfd8dd2361b98292c81adc4" translate="yes" xml:space="preserve">
          <source>In AngularJS, you write the code for the model and methods in a controller function.</source>
          <target state="translated">在AngularJS中,你把模型和方法的代码写在控制器函数中。</target>
        </trans-unit>
        <trans-unit id="4f4f7dccd62d663335cfb71ca12781b89ca1acf4" translate="yes" xml:space="preserve">
          <source>In AngularJS, you write the code that provides the model and the methods for the view in a &lt;strong&gt;controller&lt;/strong&gt;. In Angular, you build a &lt;strong&gt;component&lt;/strong&gt;.</source>
          <target state="translated">在AngularJS中，您编写了代码，该代码为&lt;strong&gt;controller中&lt;/strong&gt;的视图提供了模型和方法。在Angular中，您将构建一个&lt;strong&gt;component&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="17aa02fbd3f7b1d58bafeb9efaf4a3d0381fa09f" translate="yes" xml:space="preserve">
          <source>In HTML, these attributes are set using ordinary CSS styles such as color and opacity. In Angular, use the &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; function to specify a set of CSS styles for use with animations. You can collect a set of styles in an animation state, and give the state a name, such as &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt;.</source>
          <target state="translated">在HTML中，这些属性是使用普通CSS样式（例如颜色和不透明度）设置的。在Angular中，使用 &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; 函数指定一组CSS样式供动画使用。您可以在动画状态中收集一组样式，并为该状态指定一个名称，例如 &lt;code&gt;open&lt;/code&gt; 或 &lt;code&gt;closed&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e23c70ae53e4e39b6efe1c2cca3a6e135570227" translate="yes" xml:space="preserve">
          <source>In JavaScript (ECMAScript), each file is a module and all objects defined in the file belong to that module. Objects can exported, making them public, and public objects can be imported for use by other modules.</source>
          <target state="translated">在JavaScript(ECMAScript)中,每个文件都是一个模块,文件中定义的所有对象都属于该模块。对象可以导出,使其成为公共对象,公共对象可以导入,供其他模块使用。</target>
        </trans-unit>
        <trans-unit id="00113ac64c73beea3e7d378ff1f842ddd2316ba2" translate="yes" xml:space="preserve">
          <source>In JavaScript each &lt;em&gt;file&lt;/em&gt; is a module and all objects defined in the file belong to that module. The module declares some objects to be public by marking them with the &lt;code&gt;export&lt;/code&gt; key word. Other JavaScript modules use &lt;em&gt;import statements&lt;/em&gt; to access public objects from other modules.</source>
          <target state="translated">在JavaScript中，每个&lt;em&gt;文件&lt;/em&gt;都是一个模块，文件中定义的所有对象都属于该模块。该模块通过使用 &lt;code&gt;export&lt;/code&gt; 关键字标记一些对象来声明它们是公共的。其他JavaScript模块使用&lt;em&gt;import语句&lt;/em&gt;从其他模块访问公共对象。</target>
        </trans-unit>
        <trans-unit id="fb85040b15049e982959bb2339113e3e8a73a679" translate="yes" xml:space="preserve">
          <source>In JavaScript, modules are individual files with JavaScript code in them. To make what&amp;rsquo;s in them available, you write an export statement, usually after the relevant code, like this:</source>
          <target state="translated">在JavaScript中，模块是其中包含JavaScript代码的单个文件。为了使其中的内容可用，通常在相关代码之后编写一个export语句，如下所示：</target>
        </trans-unit>
        <trans-unit id="f61eadaf153a7ccf995f48d19a000c62df62384c" translate="yes" xml:space="preserve">
          <source>In Progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdc952c572e3628d4fe93bd50574b4a309ba81b" translate="yes" xml:space="preserve">
          <source>In Sass and Stylus you can make use of the &lt;code&gt;includePaths&lt;/code&gt; functionality for both component and global styles, which allows you to add extra base paths that will be checked for imports.</source>
          <target state="translated">在Sass和Stylus中，您可以同时使用组件样式和全局样式的 &lt;code&gt;includePaths&lt;/code&gt; 功能，从而可以添加将检查导入的额外基本路径。</target>
        </trans-unit>
        <trans-unit id="92a7b3a74d45330ef286338b8bdb3743222ebf0d" translate="yes" xml:space="preserve">
          <source>In Visual Studio, select &lt;code&gt;File&lt;/code&gt; | &lt;code&gt;New&lt;/code&gt; | &lt;code&gt;Project&lt;/code&gt; from the menu.</source>
          <target state="translated">在Visual Studio中，选择&amp;ldquo; &lt;code&gt;File&lt;/code&gt; | &lt;code&gt;New&lt;/code&gt; | 从菜单中进行 &lt;code&gt;Project&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a46a63cb5e6dd220a5995dd3ad65a3d4cfd3913" translate="yes" xml:space="preserve">
          <source>In Windows, by default, one application can only have 6 websocket connections, &lt;a href=&quot;https://msdn.microsoft.com/library/ee330736%28v=vs.85%29.aspx?f=255&amp;amp;MSPPError=-2147217396#websocket_maxconn&quot;&gt;MSDN WebSocket Settings&lt;/a&gt;. So when IE is refreshed (manually or automatically by &lt;code&gt;ng serve&lt;/code&gt;), sometimes the websocket does not close properly. When websocket connections exceed the limitations, a &lt;code&gt;SecurityError&lt;/code&gt; will be thrown. This error will not affect the angular application, you can just restart IE to clear this error, or modify the windows registry to update the limitations.</source>
          <target state="translated">在Windows中，默认情况下，一个应用程序只能具有6个Websocket连接，即&lt;a href=&quot;https://msdn.microsoft.com/library/ee330736%28v=vs.85%29.aspx?f=255&amp;amp;MSPPError=-2147217396#websocket_maxconn&quot;&gt;MSDN WebSocket设置&lt;/a&gt;。因此，当刷新IE（手动或通过 &lt;code&gt;ng serve&lt;/code&gt; 自动）时，有时websocket无法正确关闭。当websocket连接超出限制时，将引发 &lt;code&gt;SecurityError&lt;/code&gt; 。此错误不会影响角度应用程序，您只需重新启动IE即可清除此错误，或修改Windows注册表以更新限制。</target>
        </trans-unit>
        <trans-unit id="0e58c3e6bb3aef781aa7181c15464f286c38606f" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;toh-pt6&quot;&gt;later tutorial on HTTP&lt;/a&gt;, you'll learn that Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; methods return RxJS &lt;code&gt;Observable&lt;/code&gt;s. In this tutorial, you'll simulate getting data from the server with the RxJS &lt;code&gt;of()&lt;/code&gt; function.</source>
          <target state="translated">在&lt;a href=&quot;toh-pt6&quot;&gt;稍后的HTTP教程中&lt;/a&gt;，您将学习Angular的 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 方法返回RxJS &lt;code&gt;Observable&lt;/code&gt; 。在本教程中，您将模拟使用RxJS &lt;code&gt;of()&lt;/code&gt; 函数从服务器获取数据。</target>
        </trans-unit>
        <trans-unit id="3cf5e053e84e39697369f0ce6c53d2386e757b8d" translate="yes" xml:space="preserve">
          <source>In a common anti-XSRF technique, the application server sends a randomly generated authentication token in a cookie. The client code reads the cookie and adds a custom request header with the token in all subsequent requests. The server compares the received cookie value to the request header value and rejects the request if the values are missing or don't match.</source>
          <target state="translated">在常见的反XSRF技术中,应用服务器在cookie中发送一个随机生成的认证令牌。客户端代码读取cookie,并在所有后续请求中添加一个带有令牌的自定义请求头。服务器将接收到的cookie值与请求头值进行比较,如果值缺失或不匹配,则拒绝请求。</target>
        </trans-unit>
        <trans-unit id="1d8d7cbdfb73e6a03899934d4c9da16af41b336d" translate="yes" xml:space="preserve">
          <source>In a cross-site request forgery (CSRF or XSRF), an attacker tricks the user into visiting a different web page (such as &lt;code&gt;evil.com&lt;/code&gt;) with malignant code that secretly sends a malicious request to the application's web server (such as &lt;code&gt;example-bank.com&lt;/code&gt;).</source>
          <target state="translated">在跨站点伪造请求（CSRF或XSRF）中，攻击者利用恶意代码诱使用户访问其他网页（例如 &lt;code&gt;evil.com&lt;/code&gt; ），该恶意代码会将恶意请求秘密发送到应用程序的Web服务器（例如 &lt;code&gt;example-bank.com&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6dca33d40db6d10cf9713bad29c95abc927de179" translate="yes" xml:space="preserve">
          <source>In a game, you may want to implement a transformation that raises a value exponentially to increase a hero's power. For example, if the hero's score is 2, boosting the hero's power exponentially by 10 produces a score of 1024. You can use a custom pipe for this transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c294d986a3a0791f76abb2659d73016c21090bb6" translate="yes" xml:space="preserve">
          <source>In a hybrid app you run both frameworks at the same time. This means that you need at least one module each from both AngularJS and Angular.</source>
          <target state="translated">在一个混合应用中,你同时运行两个框架。这意味着你至少需要AngularJS和Angular各一个模块。</target>
        </trans-unit>
        <trans-unit id="dd49097c4af31e8ff37d4dffaf61ab60999b9c63" translate="yes" xml:space="preserve">
          <source>In a hybrid application you run both versions of Angular at the same time. That means that you need at least one module each from both AngularJS and Angular. You will import &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; inside the NgModule, and then use it for bootstrapping the AngularJS module.</source>
          <target state="translated">在混合应用程序中，您可以同时运行两个版本的Angular。这意味着您至少需要AngularJS和Angular中的每个模块。您将在NgModule中导入 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; ，然后将其用于引导AngularJS模块。</target>
        </trans-unit>
        <trans-unit id="eecc29f766a5b275d626b33d41f80a280c20298d" translate="yes" xml:space="preserve">
          <source>In a large translation project, you would send the &lt;code&gt;messages.fr.xlf&lt;/code&gt; file to a French translator who would enter the translations using an XLIFF file editor.</source>
          <target state="translated">在大型翻译项目中，您将把 &lt;code&gt;messages.fr.xlf&lt;/code&gt; 文件发送给法语翻译者，后者将使用XLIFF文件编辑器输入翻译内容。</target>
        </trans-unit>
        <trans-unit id="763a34fdd8fac0b4e83d70065f59dafe9753fced" translate="yes" xml:space="preserve">
          <source>In a likely implementation, the &lt;code&gt;&amp;lt;lib-card&amp;gt;&lt;/code&gt; component uses &lt;code&gt;@&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;../api/core/contentchildren&quot;&gt;ContentChildren&lt;/a&gt;()&lt;/code&gt; to obtain &lt;code&gt;&amp;lt;lib-header&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;lib-body&amp;gt;&lt;/code&gt;, as in the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d7af41d00fdcbff992b94c404b92c9d9626cd2" translate="yes" xml:space="preserve">
          <source>In a logical tree, this same idea might look like this:</source>
          <target state="translated">在逻辑树中,同样的想法可能是这样的。</target>
        </trans-unit>
        <trans-unit id="7696fb27896c9162de3bfeb3b997d19364c236ec" translate="yes" xml:space="preserve">
          <source>In a more complex translation, the information and context in the &lt;a href=&quot;i18n#help-translator&quot;&gt;description and meaning elements&lt;/a&gt; described previously would help you choose the right words for translation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622221c893367be5aa97d75408ed81b53a6c93b4" translate="yes" xml:space="preserve">
          <source>In a reactive form, the source of truth is the component class. Instead of adding validators through attributes in the template, you add validator functions directly to the form control model in the component class. Angular then calls these functions whenever the value of the control changes.</source>
          <target state="translated">在反应式表单中,真理的来源是组件类。你不是通过模板中的属性来添加验证器,而是直接在组件类的表单控件模型中添加验证器函数。然后,每当控件的值发生变化时,Angular就会调用这些函数。</target>
        </trans-unit>
        <trans-unit id="48d79754006d33a97227a0a4118efa5286db6a19" translate="yes" xml:space="preserve">
          <source>In a real application, the element that receives focus will depend on your specific application structure and layout. The focused element should put users in a position to immediately move into the main content that has just been routed into view. You should avoid situations where focus returns to the &lt;code&gt;body&lt;/code&gt; element after a route change.</source>
          <target state="translated">在实际的应用程序中，获得焦点的元素将取决于您特定的应用程序结构和布局。重点突出的元素应使用户能够立即进入刚刚进入视野的主要内容。您应该避免路线改变后焦点重新回到 &lt;code&gt;body&lt;/code&gt; 元素的情况。</target>
        </trans-unit>
        <trans-unit id="39db9cdd4eed1089be0ce0d095908e3625bd0e28" translate="yes" xml:space="preserve">
          <source>In a real world application, the &lt;code&gt;HeroesService&lt;/code&gt; is responsible for making an HTTP request to the hero database to check if the alter ego is available. From the validator's point of view, the actual implementation of the service is not important, so we can just code against the &lt;code&gt;HeroesService&lt;/code&gt; interface.</source>
          <target state="translated">在现实世界的应用程序中， &lt;code&gt;HeroesService&lt;/code&gt; 负责向hero数据库发出HTTP请求，以检查alter ego是否可用。从验证者的角度来看，服务的实际实现并不重要，因此我们可以仅针对 &lt;code&gt;HeroesService&lt;/code&gt; 接口进行编码。</target>
        </trans-unit>
        <trans-unit id="4eaac616f5e5e17f7e21411145e0904350881321" translate="yes" xml:space="preserve">
          <source>In a real world application, the &lt;code&gt;HeroesService&lt;/code&gt; would be responsible for making an HTTP request to the hero database to check if the alter ego is available. From the validator's point of view, the actual implementation of the service is not important, so the example can just code against the &lt;code&gt;HeroesService&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65531fa3aa55e1677f978dd0f3bf9d63a3c9b899" translate="yes" xml:space="preserve">
          <source>In a single-page app, you change what the user sees by showing or hiding portions of the display that correspond to particular components, rather than going out to the server to get a new page. As users perform application tasks, they need to move between the different &lt;a href=&quot;glossary#view&quot;&gt;views&lt;/a&gt; that you have defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f059d661f6b60ab2d7cea20ac87eea7d864f29" translate="yes" xml:space="preserve">
          <source>In a string, as milliseconds: &lt;code&gt;'100ms'&lt;/code&gt;</source>
          <target state="translated">以毫秒为单位的字符串： &lt;code&gt;'100ms'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f2235358d12c7b39b876e3be62943c44b49d011" translate="yes" xml:space="preserve">
          <source>In a string, as seconds: &lt;code&gt;'0.1s'&lt;/code&gt;</source>
          <target state="translated">以秒为单位的字符串： &lt;code&gt;'0.1s'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b02b6bf1c988cc6d5e45d6127bc131c047c48941" translate="yes" xml:space="preserve">
          <source>In a template-driven form the source of truth is the template. You do not have direct programmatic access to the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance, as shown in Figure 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ab58ff64569d109e86670107a427804d9c8361" translate="yes" xml:space="preserve">
          <source>In a typical Angular project, the polyfill is not used in production builds, so removing it should not impact production applications. The goal behind this removal is overall simplification of the build setup and decrease in the number of external dependencies.</source>
          <target state="translated">在一个典型的Angular项目中,polyfill不会在生产构建中使用,所以移除它应该不会影响生产应用。这种移除背后的目标是整体简化构建设置,减少外部依赖的数量。</target>
        </trans-unit>
        <trans-unit id="f31913605e059fbded1813d77c660c2f567cb66a" translate="yes" xml:space="preserve">
          <source>In actual development you will typically use the &lt;a href=&quot;guide/glossary#command-line-interface-cli&quot;&gt;Angular CLI&lt;/a&gt;, a powerful command-line tool that lets you generate and modify applications. For a full step-by-step guide that shows how to use the CLI to create a new project and all of its parts, see &lt;a href=&quot;tutorial&quot;&gt;Tutorial: Tour of Heroes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b71fb915e61812888abd66b33694904bf21659" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;../&lt;/code&gt;, you can use &lt;code&gt;./&lt;/code&gt; or no leading slash to specify the current level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa17f4e480d1c38b9b673c33c3726b0386461a6" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;component&lt;/code&gt;, the &lt;code&gt;data&lt;/code&gt; property of each route defines the key animation-specific configuration associated with a route. The &lt;code&gt;data&lt;/code&gt; property value is passed into &lt;code&gt;AppComponent&lt;/code&gt; when the route changes. You can also pass additional data in route config that is consumed within the animation. The data property value has to match the transitions defined in the &lt;code&gt;routeAnimation&lt;/code&gt; trigger, which we'll define later.</source>
          <target state="translated">除了 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;component&lt;/code&gt; 之外，每个路径的 &lt;code&gt;data&lt;/code&gt; 属性还定义了与路径关联的特定于关键动画的配置。该 &lt;code&gt;data&lt;/code&gt; 属性值被传递到 &lt;code&gt;AppComponent&lt;/code&gt; 当路由变化。您还可以在动画中使用的路由配置中传递其他数据。数据属性值必须匹配在 &lt;code&gt;routeAnimation&lt;/code&gt; 触发器中定义的过渡，我们将在稍后定义。</target>
        </trans-unit>
        <trans-unit id="518ce8e445924106f3aaaa4e7714894c154607fc" translate="yes" xml:space="preserve">
          <source>In addition to build optimizations, Angular also has a runtime production mode. Angular apps run in development mode by default, as you can see by the following message on the browser console:</source>
          <target state="translated">除了构建优化,Angular还有一个运行时生产模式。Angular应用默认运行在开发模式下,你可以从浏览器控制台的以下消息中看到。</target>
        </trans-unit>
        <trans-unit id="92e4dba02fc399ceabf0edd421996ac182385627" translate="yes" xml:space="preserve">
          <source>In addition to components, there are two other kinds of directives: &lt;em&gt;structural&lt;/em&gt; and &lt;em&gt;attribute&lt;/em&gt;. Angular defines a number of directives of both kinds, and you can define your own using the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; decorator.</source>
          <target state="translated">除了组件之外，还有两种其他类型的指令：&lt;em&gt;structure&lt;/em&gt;和&lt;em&gt;attribute&lt;/em&gt;。Angular定义了两种指令，您可以使用 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; 装饰器来定义自己的指令。</target>
        </trans-unit>
        <trans-unit id="c4b67e633224044ac7bd833ae2a699b14035241e" translate="yes" xml:space="preserve">
          <source>In addition to containing or pointing to the template, the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata configures, for example, how the component can be referenced in HTML and what services it requires.</source>
          <target state="translated">除了包含或指向模板之外， &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; 元数据还配置例如如何在HTML中引用该组件以及它需要什么服务。</target>
        </trans-unit>
        <trans-unit id="c324bf827f9e8b85ddf5cbe6b3ffb5a5a9dfb74d" translate="yes" xml:space="preserve">
          <source>In addition to fetching data from a server, &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; supports other HTTP methods such as PUT, POST, and DELETE, which you can use to modify the remote data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039608b3a3dac9dddfb10f624ea1dc12072178c7" translate="yes" xml:space="preserve">
          <source>In addition to fetching data from the server, &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; supports mutating requests, that is, sending data to the server with other HTTP methods such as PUT, POST, and DELETE.</source>
          <target state="translated">除了从服务器获取数据之外， &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 还支持变异请求，即使用其他HTTP方法（例如PUT，POST和DELETE）将数据发送到服务器。</target>
        </trans-unit>
        <trans-unit id="705df2c178e744c66c353109a34235be8b2f64f7" translate="yes" xml:space="preserve">
          <source>In addition to loading modules on-demand, you can load modules asynchronously with preloading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29a9483bfd852b5d32af6d3606da4cd76cef0c6" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;&lt;a href=&quot;../api/common/http/testing/testrequest#error&quot;&gt;error()&lt;/a&gt;&lt;/code&gt; handler that you provide on subscription, RxJS provides the &lt;code&gt;catchError&lt;/code&gt; operator that lets you handle known errors in the observable recipe.</source>
          <target state="translated">除了您在订阅中提供的 &lt;code&gt;&lt;a href=&quot;../api/common/http/testing/testrequest#error&quot;&gt;error()&lt;/a&gt;&lt;/code&gt; 处理程序之外，RxJS还提供了 &lt;code&gt;catchError&lt;/code&gt; 运算符，该运算符使您可以处理可观察配方中的已知错误。</target>
        </trans-unit>
        <trans-unit id="92c75e8ae8b6ad9aee1ec9b36daa2b6542f56b8d" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;error()&lt;/code&gt; handler that you provide on subscription, RxJS provides the &lt;code&gt;catchError&lt;/code&gt; operator that lets you handle known errors in the observable recipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d17e5bcfee96b98472da1a3a4c26804c7ccb773" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;component&lt;/code&gt; properties, there's a new property called &lt;code&gt;outlet&lt;/code&gt;, which is set to &lt;code&gt;'popup'&lt;/code&gt;. This route now targets the popup outlet and the &lt;code&gt;ComposeMessageComponent&lt;/code&gt; will display there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a32f2cf9ab38b55656a6b1806cd88678fd2727" translate="yes" xml:space="preserve">
          <source>In addition to the full mode behavior, Angular version 9:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e985521f9a2f7cb86a15d64a93de26e6cd3294" translate="yes" xml:space="preserve">
          <source>In addition to the name and description, each schematic has a &lt;code&gt;factory&lt;/code&gt; property that identifies the schematic&amp;rsquo;s entry point. In the example, you invoke the schematic's defined functionality by calling the &lt;code&gt;helloWorld()&lt;/code&gt; function in the main file, &lt;code&gt;hello-world/index.ts&lt;/code&gt;.</source>
          <target state="translated">除了名称和描述之外，每个原理图还具有用于标识原理图入口点的 &lt;code&gt;factory&lt;/code&gt; 属性。在示例中，您可以通过调用主文件 &lt;code&gt;hello-world/index.ts&lt;/code&gt; 中的 &lt;code&gt;helloWorld()&lt;/code&gt; 函数来调用原理图的已定义功能。</target>
        </trans-unit>
        <trans-unit id="712e3fe7e7a305ad3e3b3654a51a48abbd95e90e" translate="yes" xml:space="preserve">
          <source>In addition to upgrading AngularJS dependencies, you can also &lt;em&gt;downgrade&lt;/em&gt; Angular dependencies, so that you can use them from AngularJS. This can be useful when you start migrating services to Angular or creating new services in Angular while retaining components written in AngularJS.</source>
          <target state="translated">除了升级AngularJS依赖关系，您还可以&lt;em&gt;降级&lt;/em&gt; Angular依赖关系，以便可以从AngularJS使用它们。当您开始将服务迁移到Angular或在Angular中创建新服务，同时保留用AngularJS编写的组件时，这很有用。</target>
        </trans-unit>
        <trans-unit id="a8a500fbb4767ecd8e3cddda60f46e32e83f4867" translate="yes" xml:space="preserve">
          <source>In addition, this pattern mixes template-driven and reactive forms strategies, which prevents taking advantage of the full benefits of either strategy. Setting the value in the template violates the template-agnostic principles behind reactive forms, whereas adding a &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; layer in the class removes the convenience of defining forms in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8190e8a3e053b6c71a891443caba3b79821b866e" translate="yes" xml:space="preserve">
          <source>In addition, this pattern mixes template-driven and reactive forms strategies, which we generally don't recommend because it doesn't take advantage of the full benefits of either strategy. Setting the value in the template violates the template-agnostic principles behind reactive forms, whereas adding a &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; layer in the class removes the convenience of defining forms in the template.</source>
          <target state="translated">此外，此模式混合了模板驱动和响应式表单策略，我们通常不建议这样做，因为它没有利用这两种策略的全部优势。在模板中设置值违反了反应性表单背后的与模板无关的原则，而在类中添加 &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; 层则消除了在模板中定义表单的便利。</target>
        </trans-unit>
        <trans-unit id="af0291fe53a38a32a912d25b30993b403d4fc87a" translate="yes" xml:space="preserve">
          <source>In alignment with the versioning scheme described above, we commit to support the following update paths:</source>
          <target state="translated">为了与上述版本方案保持一致,我们承诺支持以下更新路径。</target>
        </trans-unit>
        <trans-unit id="c0ecac3c059187a5fafe89e15d014bf2e83d301b" translate="yes" xml:space="preserve">
          <source>In an &lt;code&gt;&lt;a href=&quot;httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; parameter is the next interceptor in the chain.</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;httpinterceptor&quot;&gt;HttpInterceptor&lt;/a&gt;&lt;/code&gt; 中， &lt;code&gt;&lt;a href=&quot;httphandler&quot;&gt;HttpHandler&lt;/a&gt;&lt;/code&gt; 参数是链中的下一个拦截器。</target>
        </trans-unit>
        <trans-unit id="d07e81908343ee4b3c3cdfd03defc53493e77ee0" translate="yes" xml:space="preserve">
          <source>In an Angular app, NgModules and JavaScript modules work together.</source>
          <target state="translated">在Angular应用中,NgModules和JavaScript模块一起工作。</target>
        </trans-unit>
        <trans-unit id="2995d3f69c1ef04572631628ef95d9cf0e177e02" translate="yes" xml:space="preserve">
          <source>In an AngularJS application you have a root AngularJS module, which will also be used to bootstrap the AngularJS application.</source>
          <target state="translated">在一个AngularJS应用中,你有一个根AngularJS模块,它也将被用来引导AngularJS应用。</target>
        </trans-unit>
        <trans-unit id="fd772c1089107ba4b1e2e24a4046b9da7897a2c2" translate="yes" xml:space="preserve">
          <source>In an SPA, all of your application's functions exist in a single HTML page. As users access your application's features, the browser needs to render only the parts that matter to the user, instead of loading a new page. This pattern can significantly improve your application's user experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0bac0cafa0bf97240de46fb6da1f0f46ccf556" translate="yes" xml:space="preserve">
          <source>In an event binding, Angular configures an event handler for the target event. You can use event binding with your own custom events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186700bd8ef16b21e5cb3f12259a7cc3c66151a7" translate="yes" xml:space="preserve">
          <source>In an event binding, Angular sets up an event handler for the target event.</source>
          <target state="translated">在事件绑定中,Angular为目标事件设置了一个事件处理程序。</target>
        </trans-unit>
        <trans-unit id="442397b093d27259b79b2a4c113aeacd3de8b1b6" translate="yes" xml:space="preserve">
          <source>In apps built with Angular versions prior to 6.0, services are registered NgModule &lt;code&gt;providers&lt;/code&gt; arrays as follows:</source>
          <target state="translated">在使用6.0之前的Angular版本构建的应用程序中，服务注册为NgModule &lt;code&gt;providers&lt;/code&gt; 数组，如下所示：</target>
        </trans-unit>
        <trans-unit id="36a5631d9ccd89307b737000baab048281f5974e" translate="yes" xml:space="preserve">
          <source>In both AngularJS and Angular, modules help you organize your application into cohesive blocks of functionality.</source>
          <target state="translated">在AngularJS和Angular中,模块帮助你把你的应用组织成凝聚的功能块。</target>
        </trans-unit>
        <trans-unit id="f57cddaa2037c3cca33aee4543b80713320351a7" translate="yes" xml:space="preserve">
          <source>In both cases, the parenthetical annotation provides the error that caused the service worker to enter the degraded state.</source>
          <target state="translated">在这两种情况下,括号中的注释提供了导致服务工作者进入退化状态的错误。</target>
        </trans-unit>
        <trans-unit id="aab616ac7bc0cc1d96378c8b4324b09775cc128a" translate="yes" xml:space="preserve">
          <source>In both components you're relying on Angular's &lt;strong&gt;formGroup&lt;/strong&gt; to connect the template HTML to the underlying control objects, populated from the question model with display and validation rules.</source>
          <target state="translated">在这两个组件中，您都依赖于Angular的&lt;strong&gt;formGroup&lt;/strong&gt;将模板HTML连接到基础控件对象，这些控件对象是由具有显示和验证规则的问题模型填充的。</target>
        </trans-unit>
        <trans-unit id="9d09b6e2a4873e3a91fe8b87647db6546a2185d7" translate="yes" xml:space="preserve">
          <source>In browsers that support Custom Elements natively, the specification requires developers use ES2015 classes to define Custom Elements - developers can opt-in to this by setting the &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;: &quot;es2015&quot;&lt;/code&gt; property in their project's &lt;code&gt;tsconfig.json&lt;/code&gt;. As Custom Element and ES2015 support may not be available in all browsers, developers can instead choose to use a polyfill to support older browsers and ES5 code.</source>
          <target state="translated">在本机支持Custom Elements的浏览器中，该规范要求开发人员使用ES2015类来定义Custom Elements-开发人员可以通过在其项目的 &lt;code&gt;tsconfig.json&lt;/code&gt; 中设置 &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;: &quot;es2015&quot;&lt;/code&gt; 属性来选择加入。由于可能并非在所有浏览器中都提供Custom Element和ES2015支持，因此开发人员可以选择使用polyfill支持较旧的浏览器和ES5代码。</target>
        </trans-unit>
        <trans-unit id="f37bb8d3eb739f6063c7dcad808c341026c89642" translate="yes" xml:space="preserve">
          <source>In browsers that support Custom Elements natively, the specification requires developers use ES2015 classes to define Custom Elements - developers can opt-in to this by setting the &lt;code&gt;target: &quot;es2015&quot;&lt;/code&gt; property in their project's &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript configuration file&lt;/a&gt;. As Custom Element and ES2015 support may not be available in all browsers, developers can instead choose to use a polyfill to support older browsers and ES5 code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b4eea321a5de0ddf1c5f7ef405fd4e7f93c3ff" translate="yes" xml:space="preserve">
          <source>In case of a false positive like these, there are a few options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6851ccebdc3d3c36a33544a460a1db498eebbcf2" translate="yes" xml:space="preserve">
          <source>In case of a key collision between current parameters and those in the &lt;code&gt;queryParams&lt;/code&gt; object, the new value is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c543a5f2150ce78c5c42b4020166d1185b5263" translate="yes" xml:space="preserve">
          <source>In cases like this you can use a &lt;em&gt;factory provider&lt;/em&gt;. Factory providers can also be useful when creating an instance of a dependency from a third-party library that wasn't designed to work with DI.</source>
          <target state="translated">在这种情况下，您可以使用&lt;em&gt;工厂提供程序&lt;/em&gt;。当从不是设计用于DI的第三方库中创建依赖项的实例时，工厂提供程序也很有用。</target>
        </trans-unit>
        <trans-unit id="faae4cf3fede383457b93e931cc0ff31f3e03fdd" translate="yes" xml:space="preserve">
          <source>In certain cases, when you apply backticks around a term, it may auto-link to the API documentation. If you do not intend the term to be a link, use the following syntax:</source>
          <target state="translated">在某些情况下,当你在术语周围使用反标时,它可能会自动链接到API文档。如果您不希望该术语成为链接,请使用以下语法。</target>
        </trans-unit>
        <trans-unit id="f8ea84d921ad7b0f2cb3c42488bb64d56b2bfc41" translate="yes" xml:space="preserve">
          <source>In collaboration with Google's security team, we're adding support for the new Trusted Types API. This web platform API will help developers build more secure web applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882fb17df5830c3e1bef3d000bb9f4170d23d509" translate="yes" xml:space="preserve">
          <source>In contrast to the non-AngularJS version &lt;code&gt;location.host&lt;/code&gt; which returns &lt;code&gt;hostname:port&lt;/code&gt;, this returns the &lt;code&gt;hostname&lt;/code&gt; portion only.</source>
          <target state="translated">与非AngularJS版本的 &lt;code&gt;location.host&lt;/code&gt; 返回 &lt;code&gt;hostname:port&lt;/code&gt; 相比，这仅返回 &lt;code&gt;hostname&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="87ccfab30a30e01a9400a0f86574039dd8079e53" translate="yes" xml:space="preserve">
          <source>In data binding, you declare the relationship between an HTML widget and a data source and let the framework handle the details. Data binding is an alternative to manually pushing application data values into HTML, attaching event listeners, pulling changed values from the screen, and updating application data values.</source>
          <target state="translated">在数据绑定中,您可以声明一个 HTML 小组件和一个数据源之间的关系,并让框架处理细节。数据绑定是一种替代方法,可以将应用程序的数据值手动推送到HTML中,附加事件监听器,从屏幕中提取更改的值,并更新应用程序的数据值。</target>
        </trans-unit>
        <trans-unit id="818ea6e396a842959f81b286c28f47f668e4c077" translate="yes" xml:space="preserve">
          <source>In developing a form, it's important to create a data-entry experience that guides the user efficiently and effectively through the workflow.</source>
          <target state="translated">在开发表单的过程中,重要的是要创建一个数据录入体验,引导用户高效地完成工作流程。</target>
        </trans-unit>
        <trans-unit id="a083380d8f26ba15bb7df0f10b038ec65342e2e3" translate="yes" xml:space="preserve">
          <source>In development mode, &lt;code&gt;&lt;a href=&quot;applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; also performs a second change detection cycle to ensure that no further changes are detected. If additional changes are picked up during this second cycle, bindings in the app have side-effects that cannot be resolved in a single change detection pass. In this case, Angular throws an error, since an Angular application can only have one change detection pass during which all change detection must complete.</source>
          <target state="translated">在开发模式下， &lt;code&gt;&lt;a href=&quot;applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; 还执行第二个更改检测周期，以确保没有检测到其他更改。如果在第二个周期中获取了其他更改，则应用程序中的绑定具有副作用，这些副作用无法通过一次更改检测过程解决。在这种情况下，Angular会引发错误，因为Angular应用程序只能执行一次更改检测遍历，在此过程中必须完成所有更改检测。</target>
        </trans-unit>
        <trans-unit id="811ec2dd2684204350fa7e95f0b850000a81e45e" translate="yes" xml:space="preserve">
          <source>In development mode, &lt;code&gt;&lt;a href=&quot;testing/tick&quot;&gt;tick&lt;/a&gt;()&lt;/code&gt; also performs a second change detection cycle to ensure that no further changes are detected. If additional changes are picked up during this second cycle, bindings in the app have side-effects that cannot be resolved in a single change detection pass. In this case, Angular throws an error, since an Angular application can only have one change detection pass during which all change detection must complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8edaa0e56f5e0453fa057164fddb4d07e168ba3e" translate="yes" xml:space="preserve">
          <source>In development, you typically start the server in the folder that holds &lt;code&gt;index.html&lt;/code&gt;. That's the root folder and you'd add &lt;code&gt;&amp;lt;base href=&quot;/&quot;&amp;gt;&lt;/code&gt; near the top of &lt;code&gt;index.html&lt;/code&gt; because &lt;code&gt;/&lt;/code&gt; is the root of the app.</source>
          <target state="translated">在开发中，通常会在保存 &lt;code&gt;index.html&lt;/code&gt; 的文件夹中启动服务器。这是根文件夹，您将在 &lt;code&gt;index.html&lt;/code&gt; 顶部附近添加 &lt;code&gt;&amp;lt;base href=&quot;/&quot;&amp;gt;&lt;/code&gt; ，因为 &lt;code&gt;/&lt;/code&gt; 是应用程序的根目录。</target>
        </trans-unit>
        <trans-unit id="d5e95ebfc9910d4c5b6ab6e521556a2778701651" translate="yes" xml:space="preserve">
          <source>In either case, a &lt;code&gt;next&lt;/code&gt; handler is required. The &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;complete&lt;/code&gt; handlers are optional.</source>
          <target state="translated">无论哪种情况，都需要 &lt;code&gt;next&lt;/code&gt; 处理程序。该 &lt;code&gt;error&lt;/code&gt; 和 &lt;code&gt;complete&lt;/code&gt; 处理程序是可选的。</target>
        </trans-unit>
        <trans-unit id="3ec537881a886f5726ad8dd47b7a8886c8935dfb" translate="yes" xml:space="preserve">
          <source>In either style, the template data bindings have the same access to the component's properties.</source>
          <target state="translated">在任何一种样式中,模板数据绑定对组件的属性都有相同的访问权限。</target>
        </trans-unit>
        <trans-unit id="0009c17cd723f367233376c40644dec66747da7a" translate="yes" xml:space="preserve">
          <source>In fact, each &lt;code&gt;subscribe()&lt;/code&gt; initiates a separate, independent execution of the observable. Subscribing twice results in two HTTP requests.</source>
          <target state="translated">实际上，每个 &lt;code&gt;subscribe()&lt;/code&gt; 启动可观察对象的单独，独立执行。订阅两次将导致两个HTTP请求。</target>
        </trans-unit>
        <trans-unit id="5809f58a35d5011cd952f322fe5b7ab8b70d3f4d" translate="yes" xml:space="preserve">
          <source>In fact, if you try to declare it, Angular will throw an error because &lt;code&gt;HeroDetailComponent&lt;/code&gt; is declared in both the &lt;code&gt;HeroModule&lt;/code&gt; and the &lt;code&gt;DynamicTestModule&lt;/code&gt; created by the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">事实上，如果你试图把它声明，角会因为抛出一个错误 &lt;code&gt;HeroDetailComponent&lt;/code&gt; 在双方宣布 &lt;code&gt;HeroModule&lt;/code&gt; 和 &lt;code&gt;DynamicTestModule&lt;/code&gt; 由创建 &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec88266d9e04212fedf424f84a94840a7da988a9" translate="yes" xml:space="preserve">
          <source>In fact, many libraries declare and export components you'll never use. For example, a material design library will export all components because it doesn&amp;rsquo;t know which ones you will use. However, it is unlikely that you will use them all. For the ones you don't reference, the tree shaker drops these components from the final code package.</source>
          <target state="translated">实际上，许多库声明并导出了您永远不会使用的组件。例如，材料设计库将导出所有组件，因为它不知道您将使用哪个组件。但是，您不太可能会全部使用它们。对于您不参考的组件，摇树器会将这些组件从最终代码包中删除。</target>
        </trans-unit>
        <trans-unit id="2d17b7b9c7ecdf9e0a0cf8fcb801a644d503a501" translate="yes" xml:space="preserve">
          <source>In fact, many libraries declare and export components you'll never use. If you don't reference them, the tree shaker drops these components from the final code package.</source>
          <target state="translated">事实上,许多库都声明并导出了你永远不会使用的组件。如果你不引用它们,树形摇杆就会从最终的代码包中放弃这些组件。</target>
        </trans-unit>
        <trans-unit id="547d2a453086180e737f6fdfa0676b0213dec7f1" translate="yes" xml:space="preserve">
          <source>In general, a module collects a block of code dedicated to a single purpose. Angular uses standard JavaScript modules and also defines an Angular module, &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">通常，模块收集专用于单个用途的代码块。Angular使用标准的JavaScript模块，并且还定义了一个Angular模块 &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d77226bb13d928e95fd3b19205296b9adedfdf9" translate="yes" xml:space="preserve">
          <source>In general, a test should end with no queued tasks. When pending timer tasks are expected, call &lt;code&gt;&lt;a href=&quot;../api/core/testing/discardperiodictasks&quot;&gt;discardPeriodicTasks&lt;/a&gt;&lt;/code&gt; to flush the &lt;em&gt;task&lt;/em&gt; queue and avoid the error.</source>
          <target state="translated">通常，测试应在没有排队任务的情况下结束。当需要等待暂挂的计时器任务时，请调用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/discardperiodictasks&quot;&gt;discardPeriodicTasks&lt;/a&gt;&lt;/code&gt; 刷新&lt;em&gt;任务&lt;/em&gt;队列并避免错误。</target>
        </trans-unit>
        <trans-unit id="7f269edbebd5dbd35be8d8d21f57ea38f14f0483" translate="yes" xml:space="preserve">
          <source>In general, a test should wait for micro-tasks to finish. When pending microtasks are expected, call &lt;code&gt;&lt;a href=&quot;../api/core/testing/flushmicrotasks&quot;&gt;flushMicrotasks&lt;/a&gt;&lt;/code&gt; to flush the &lt;em&gt;micro-task&lt;/em&gt; queue and avoid the error.</source>
          <target state="translated">通常，测试应等待微任务完成。当需要等待的&lt;em&gt;微任务时&lt;/em&gt;，请调用 &lt;code&gt;&lt;a href=&quot;../api/core/testing/flushmicrotasks&quot;&gt;flushMicrotasks&lt;/a&gt;&lt;/code&gt; 刷新&lt;em&gt;微任务&lt;/em&gt;队列并避免错误。</target>
        </trans-unit>
        <trans-unit id="86a59b8f427eaf262041822dcf531982a1f03fc3" translate="yes" xml:space="preserve">
          <source>In general, an observable &lt;em&gt;can&lt;/em&gt; return multiple values over time. An observable from &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; always emits a single value and then completes, never to emit again.</source>
          <target state="translated">通常，可观察对象&lt;em&gt;可以&lt;/em&gt;随时间返回多个值。来自 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 的可观察对象总是发出单个值，然后完成，再也不会发出。</target>
        </trans-unit>
        <trans-unit id="5e2d4d2d17239584190561155953d01ace2b72bc" translate="yes" xml:space="preserve">
          <source>In general, if your builder is watching an external event, you should separate your run into three phases.</source>
          <target state="translated">一般来说,如果你的建设者正在观察一个外部事件,你应该把你的运行分成三个阶段。</target>
        </trans-unit>
        <trans-unit id="aec22f95ac1b949b2998ae911c74abd01d2c15c8" translate="yes" xml:space="preserve">
          <source>In general, prefer a &lt;em&gt;required route parameter&lt;/em&gt; when the value is mandatory (for example, if necessary to distinguish one route path from another); prefer an &lt;em&gt;optional parameter&lt;/em&gt; when the value is optional, complex, and/or multivariate.</source>
          <target state="translated">通常，当该值是必需值时（例如，如果有必要将一个路由路径与另一个路由路径区分开），则首选&lt;em&gt;必需的路由参数&lt;/em&gt;。当值是可选，复杂和/或多变量时，建议使用&lt;em&gt;可选参数&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="438e5f838247227524217c35d94e78235058f28b" translate="yes" xml:space="preserve">
          <source>In general, the options for which you can configure defaults correspond to the command options listed in the &lt;a href=&quot;cli&quot;&gt;CLI reference page&lt;/a&gt; for each command. Note that all options in the configuration file must use &lt;a href=&quot;glossary#case-conventions&quot;&gt;camelCase&lt;/a&gt;, rather than dash-case.</source>
          <target state="translated">通常，可以为其配置默认值的选项与&lt;a href=&quot;cli&quot;&gt;CLI参考页中&lt;/a&gt;针对每个命令列出的命令选项相对应。请注意，配置文件中的所有选项都必须使用&lt;a href=&quot;glossary#case-conventions&quot;&gt;camelCase&lt;/a&gt;，而不是破折号。</target>
        </trans-unit>
        <trans-unit id="071332d3fcf4e07411ee877b3275e2eb0b4251fa" translate="yes" xml:space="preserve">
          <source>In general, use a required route parameter when the value is mandatory (for example, if necessary to distinguish one route path from another); and an optional parameter when the value is optional, complex, and/or multivariate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77fd6b5b523bff7e8b440e29979790902cc0d10" translate="yes" xml:space="preserve">
          <source>In general, you can expect the following release cycle:</source>
          <target state="translated">一般来说,你可以期待以下的发布周期。</target>
        </trans-unit>
        <trans-unit id="ec28d2e4f5ad480a00ce0f05033084610af0c773" translate="yes" xml:space="preserve">
          <source>In its constructor the class expects to get the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service. It will be injected to it and it is stored as a private field. The service is then used in the two instance methods, one of which loads the list of all phones, and the other loads the details of a specified phone:</source>
          <target state="translated">该类希望在其构造函数中获取 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 服务。它将注入到它，并将其存储为私有字段。然后，在两种实例方法中使用该服务，其中一种加载所有电话的列表，另一种加载指定电话的详细信息：</target>
        </trans-unit>
        <trans-unit id="10bee31fc3bb8a012058efc875f19fcd7d9d1a4b" translate="yes" xml:space="preserve">
          <source>In its current state of development, the list of heroes is unchanged. No hero row is highlighted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cd232fa17c1dc9aef0e27428be497a6d102fd7" translate="yes" xml:space="preserve">
          <source>In javascript, only the components specified will be respected (not the ordering, punctuations, ...) and details of the formatting will be dependent on the locale.</source>
          <target state="translated">在javascript中,只有指定的组件才会被尊重(不包括顺序、标点符号......),格式化的细节将取决于当地的语言。</target>
        </trans-unit>
        <trans-unit id="0d3338acd7b1b7ae166fab204760470f14dd0bf5" translate="yes" xml:space="preserve">
          <source>In keeping with the &lt;a href=&quot;https://blog.8thlight.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html&quot;&gt;&lt;em&gt;Separation of Concerns&lt;/em&gt; principle&lt;/a&gt;, changes to the &lt;em&gt;Crisis Center&lt;/em&gt; won't affect the &lt;code&gt;AppModule&lt;/code&gt; or any other feature's component.</source>
          <target state="translated">与&lt;a href=&quot;https://blog.8thlight.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html&quot;&gt;&lt;em&gt;关注点分离&lt;/em&gt;原则&lt;/a&gt;保持一致，对&lt;em&gt;危机中心的&lt;/em&gt;更改不会影响 &lt;code&gt;AppModule&lt;/code&gt; 或任何其他功能的组件。</target>
        </trans-unit>
        <trans-unit id="853f8e6f2cb1e2c46ec738de217850a392edd833" translate="yes" xml:space="preserve">
          <source>In keeping with the &lt;a href=&quot;https://blog.8thlight.com/uncle-bob/2014/05/08/SingleReponsibilityPrinciple.html&quot;&gt;Separation of Concerns principle&lt;/a&gt;, changes to the Crisis Center don't affect the &lt;code&gt;AppModule&lt;/code&gt; or any other feature's component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e479f9e9a5e9f21bc571985b868b0e91139c16e1" translate="yes" xml:space="preserve">
          <source>In many cases, a few extra change detection runs may not matter much. However, on larger or change-detection-heavy apps they can have a noticeable impact. By giving you more fine-grained control over the change detection propagation, &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; allows you to achieve better performance for your hybrid apps.</source>
          <target state="translated">在许多情况下，几次额外的更改检测运行可能并没有太大关系。但是，在较大或更改检测量较大的应用程序上，它们可能会产生明显的影响。通过为更改检测传播提供更细粒度的控制， &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; 使您可以为混合应用程序实现更好的性能。</target>
        </trans-unit>
        <trans-unit id="48a267ffb8eee102602f050323760c06153f17ce" translate="yes" xml:space="preserve">
          <source>In many cases, these things end up as type &lt;code&gt;any&lt;/code&gt;, which can cause subsequent parts of the expression to go unchecked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95cdd0f6492c72732a9c49a995b576fef9af845" translate="yes" xml:space="preserve">
          <source>In modern JavaScript, every file is a module (see the &lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;Modules&lt;/a&gt; page of the Exploring ES6 website). Within each file you write an &lt;code&gt;export&lt;/code&gt; statement to make parts of the module public.</source>
          <target state="translated">在现代JavaScript中，每个文件都是一个模块（请参阅Exploring ES6网站的&amp;ldquo; &lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;模块&amp;rdquo;&lt;/a&gt;页面）。在每个文件中，编写一个 &lt;code&gt;export&lt;/code&gt; 语句以公开模块的各个部分。</target>
        </trans-unit>
        <trans-unit id="6b3a1936e2bb54b1733be75ba49ac81b9f04f42d" translate="yes" xml:space="preserve">
          <source>In most cases, Angular sets the reference variable's value to the element on which it is declared. In the previous example, &lt;code&gt;phone&lt;/code&gt; refers to the phone number &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;. The button's click handler passes the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; value to the component's &lt;code&gt;callPhone()&lt;/code&gt; method.</source>
          <target state="translated">在大多数情况下，Angular会将引用变量的值设置为声明该变量的元素。在上一个示例中， &lt;code&gt;phone&lt;/code&gt; 指的是电话号码 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 。按钮的单击处理程序将 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 值传递到组件的 &lt;code&gt;callPhone()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="33a9a0ed6ca328ae17278ce786bea9fc84b93e7f" translate="yes" xml:space="preserve">
          <source>In most cases, Angular sets the template variable's value to the element on which it occurs. In the previous example, &lt;code&gt;phone&lt;/code&gt; refers to the phone number &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;. The button's click handler passes the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; value to the component's &lt;code&gt;callPhone()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736ac1880b027df49f2ca9b04f5528a48697f8fd" translate="yes" xml:space="preserve">
          <source>In most cases, the target name is the name of a property, even when it appears to be the name of an attribute. In this example, &lt;code&gt;src&lt;/code&gt; is the name of the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ed2cfffaf26fc3e0aa3455fa0236693ac809c8" translate="yes" xml:space="preserve">
          <source>In most cases, the target name is the name of a property, even when it appears to be the name of an attribute. So in this case, &lt;code&gt;src&lt;/code&gt; is the name of the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element property.</source>
          <target state="translated">在大多数情况下，目标名称是属性的名称，即使它似乎是属性的名称也是如此。因此，在这种情况下， &lt;code&gt;src&lt;/code&gt; 是 &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 元素属性的名称。</target>
        </trans-unit>
        <trans-unit id="721c8146db87ee4117c032bdef6f8eeff7ecb43e" translate="yes" xml:space="preserve">
          <source>In most cases, though, the changes made locally in a particular component are of no interest to the rest of the app. For example, if the user clicks a button that submits a form, the component usually handles the result of this action. That being said, there &lt;em&gt;are&lt;/em&gt; cases where you want to propagate changes to some other part of the app that may be controlled by the other framework. In such cases, you are responsible for notifying the interested parties by manually triggering change detection.</source>
          <target state="translated">但是，在大多数情况下，在特定组件中本地进行的更改对于应用程序的其余部分没有意义。例如，如果用户单击提交表单的按钮，则该组件通常会处理此操作的结果。就是说，在&lt;em&gt;某些&lt;/em&gt;情况下，您希望将更改传播到应用程序的其他部分，而该部分可能由其他框架控制。在这种情况下，您有责任通过手动触发变更检测来通知相关方。</target>
        </trans-unit>
        <trans-unit id="769178628d41a1ca0bba1b67cab81af3ded8c26b" translate="yes" xml:space="preserve">
          <source>In most environments where both Angular and AngularJS are used to render the application, both frameworks are loaded in the initial bundle being sent to the client. This results in both increased bundle size and possible reduced performance.</source>
          <target state="translated">在大多数同时使用Angular和AngularJS来渲染应用程序的环境中,这两个框架都会在发送给客户端的初始bundle中加载。这导致捆绑包大小增加,并可能降低性能。</target>
        </trans-unit>
        <trans-unit id="ae2161128d8ce5a1609bf9b304c9b1e1e65fa23d" translate="yes" xml:space="preserve">
          <source>In order for &lt;code&gt;HeroListComponent&lt;/code&gt; to get heroes from &lt;code&gt;HeroService&lt;/code&gt;, it needs to ask for &lt;code&gt;HeroService&lt;/code&gt; to be injected, rather than creating its own &lt;code&gt;HeroService&lt;/code&gt; instance with &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">为了使 &lt;code&gt;HeroListComponent&lt;/code&gt; 从 &lt;code&gt;HeroService&lt;/code&gt; 获得英雄，它需要请求 &lt;code&gt;HeroService&lt;/code&gt; 注入，而不是使用 &lt;code&gt;new&lt;/code&gt; 创建自己的 &lt;code&gt;HeroService&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="1486ae81ea2e7bfb9b8495d2847f181583dc9fa5" translate="yes" xml:space="preserve">
          <source>In order for service workers to be registered, the app must be accessed over HTTPS, not HTTP. Browsers ignore service workers on pages that are served over an insecure connection. The reason is that service workers are quite powerful, so extra care needs to be taken to ensure the service worker script has not been tampered with.</source>
          <target state="translated">为了让服务工作者被注册,应用程序必须通过HTTPS而不是HTTP进行访问。浏览器会忽略通过不安全连接服务的页面上的服务工。原因是服务工的功能相当强大,所以需要格外小心,确保服务工脚本没有被篡改。</target>
        </trans-unit>
        <trans-unit id="55fc82f93a9cf7270fcc2c4a6b145c2d1b0c0e64" translate="yes" xml:space="preserve">
          <source>In order to affect this browser's &lt;code&gt;history.state&lt;/code&gt; entry, the &lt;code&gt;&lt;a href=&quot;../animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; parameter can be passed. This must be an object because the router will add the &lt;code&gt;navigationId&lt;/code&gt; property to this object before creating the new history item.</source>
          <target state="translated">为了影响此浏览器的 &lt;code&gt;history.state&lt;/code&gt; 条目，可以传递 &lt;code&gt;&lt;a href=&quot;../animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; 参数。这必须是一个对象，因为路由器将在创建新的历史记录项之前将 &lt;code&gt;navigationId&lt;/code&gt; 属性添加到该对象。</target>
        </trans-unit>
        <trans-unit id="9363114f7d8e640fa6e1518ff3f8b7dfb1b36de7" translate="yes" xml:space="preserve">
          <source>In order to avoid negatively affecting the initial rendering of the page, &lt;code&gt;&lt;a href=&quot;../api/service-worker/serviceworkermodule&quot;&gt;ServiceWorkerModule&lt;/a&gt;&lt;/code&gt; waits for up to 30 seconds by default for the app to stabilize, before registering the ServiceWorker script. Constantly polling for updates, for example, with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval&quot;&gt;setInterval()&lt;/a&gt; or RxJS' &lt;a href=&quot;https://rxjs.dev/api/index/function/interval&quot;&gt;interval()&lt;/a&gt;, will prevent the app from stabilizing and the ServiceWorker script will not be registered with the browser until the 30 seconds upper limit is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72bcb56b58b81db6f4bbe1304ae9715f5beb78e" translate="yes" xml:space="preserve">
          <source>In order to avoid negatively affecting the initial rendering, &lt;code&gt;&lt;a href=&quot;../api/service-worker/serviceworkermodule&quot;&gt;ServiceWorkerModule&lt;/a&gt;&lt;/code&gt; will by default wait for the app to stabilize, before registering the ServiceWorker script. Constantly polling for updates, e.g. with &lt;code&gt;interval()&lt;/code&gt;, will prevent the app from stabilizing and the ServiceWorker script will never be registered with the browser.</source>
          <target state="translated">为了避免对初始呈现产生负面影响，默认情况下， &lt;code&gt;&lt;a href=&quot;../api/service-worker/serviceworkermodule&quot;&gt;ServiceWorkerModule&lt;/a&gt;&lt;/code&gt; 将在注册ServiceWorker脚本之前等待应用稳定下来。不断轮询更新，例如使用 &lt;code&gt;interval()&lt;/code&gt; ，将阻止应用程序稳定，并且ServiceWorker脚本将永远不会在浏览器中注册。</target>
        </trans-unit>
        <trans-unit id="1661111f30e20e91e134221fa291556479a53887" translate="yes" xml:space="preserve">
          <source>In order to get a service from a dependency injector, you have to give it a &lt;a href=&quot;glossary#token&quot;&gt;token&lt;/a&gt;. Angular usually handles this transaction by specifying a constructor parameter and its type. The parameter type serves as the injector lookup token. Angular passes this token to the injector and assigns the result to the parameter.</source>
          <target state="translated">为了从依赖注入器获得服务，您必须给它一个&lt;a href=&quot;glossary#token&quot;&gt;令牌&lt;/a&gt;。Angular通常通过指定构造函数参数及其类型来处理此事务。参数类型用作喷射器查找令牌。Angular将此令牌传递给注入器，并将结果分配给参数。</target>
        </trans-unit>
        <trans-unit id="f94d1573a258bdbefa8fe3b0d0e6c36603f171fd" translate="yes" xml:space="preserve">
          <source>In order to prevent collisions in environments where multiple Angular apps share the same domain or subdomain, give each application a unique cookie name.</source>
          <target state="translated">为了防止在多个Angular应用共享同一域名或子域名的环境中发生碰撞,给每个应用一个唯一的cookie名称。</target>
        </trans-unit>
        <trans-unit id="780a866d90920d282e73259eea95fab806f34d7f" translate="yes" xml:space="preserve">
          <source>In order to prevent the native DOM form validation UI from interfering with Angular's form validation, Angular automatically adds the &lt;code&gt;novalidate&lt;/code&gt; attribute on any &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; whenever &lt;code&gt;FormModule&lt;/code&gt; or &lt;code&gt;ReactiveFormModule&lt;/code&gt; are imported into the application. If you want to explicitly enable native DOM validation UI with Angular forms, you can add the &lt;code&gt;ngNativeValidate&lt;/code&gt; attribute to the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4207009e54950800ab6d8cc8ef740aa53fc90034" translate="yes" xml:space="preserve">
          <source>In order to show how subscribing works, we need to create a new observable. There is a constructor that you use to create new instances, but for illustration, we can use some methods from the RxJS library that create simple observables of frequently used types:</source>
          <target state="translated">为了展示订阅是如何工作的,我们需要创建一个新的observable。有一个构造函数可以用来创建新的实例,但是为了说明问题,我们可以使用RxJS库中的一些方法,这些方法可以创建常用类型的简单观测器。</target>
        </trans-unit>
        <trans-unit id="f7421599f9ced2cc1d0119ff73276a78a40f53ee" translate="yes" xml:space="preserve">
          <source>In order to start using any &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; APIs, you still need to load the Angular framework as you would in a normal Angular app. You can see how this can be done with SystemJS by following the instructions in the &lt;a href=&quot;upgrade-setup&quot;&gt;Upgrade Setup&lt;/a&gt; guide, selectively copying code from the &lt;a href=&quot;https://github.com/angular/quickstart&quot;&gt;QuickStart github repository&lt;/a&gt;.</source>
          <target state="translated">为了开始使用任何 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; API，您仍然需要像正常Angular应用中一样加载Angular框架。通过遵循&amp;ldquo; &lt;a href=&quot;upgrade-setup&quot;&gt;升级设置&amp;rdquo;&lt;/a&gt;指南中的说明，有选择地从&lt;a href=&quot;https://github.com/angular/quickstart&quot;&gt;QuickStart github存储库中&lt;/a&gt;复制代码，您可以看到如何使用SystemJS完成此操作。</target>
        </trans-unit>
        <trans-unit id="3b399fc11c8e33350c9084a487ba836c3f3fbcb6" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;, you must first register the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/router&lt;/code&gt; package. Define an array of routes, &lt;code&gt;appRoutes&lt;/code&gt;, and pass them to the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method. The &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method returns a module that contains the configured &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service provider, plus other providers that the routing library requires. Once the application is bootstrapped, the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; performs the initial navigation based on the current browser URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4470d8f6deb5914d926efe231421cb63adc8fc6e" translate="yes" xml:space="preserve">
          <source>In order to use the Router, you must first register the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/router&lt;/code&gt; package. Define an array of routes, &lt;code&gt;appRoutes&lt;/code&gt;, and pass them to the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method. It returns a module, containing the configured &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service provider, plus other providers that the routing library requires. Once the application is bootstrapped, the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; performs the initial navigation based on the current browser URL.</source>
          <target state="translated">为了使用路由器，您必须首先从 &lt;code&gt;@angular/router&lt;/code&gt; 包中注册 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; 。定义路由数组 &lt;code&gt;appRoutes&lt;/code&gt; ，并将它们传递给 &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; 方法。它返回一个模块，其中包含配置的 &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 服务提供程序以及路由库所需的其他提供程序。启动应用程序后， &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; 将根据当前浏览器URL进行初始导航。</target>
        </trans-unit>
        <trans-unit id="897444e729da5c78809ebd111c1752c8e27f14fc" translate="yes" xml:space="preserve">
          <source>In order to use the routable animations, wrap the &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; inside an element, use the &lt;code&gt;@routeAnimation&lt;/code&gt; trigger, and bind it to the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6297dda86acaaaf319ab64751d910390522f6fd8" translate="yes" xml:space="preserve">
          <source>In order to use the routable animations, you'll need to wrap the &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; inside an element. You'll use the &lt;code&gt;@routeAnimation&lt;/code&gt; trigger and bind it to the element.</source>
          <target state="translated">为了使用可路由的动画，您需要将 &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; 包装在一个元素内。您将使用 &lt;code&gt;@routeAnimation&lt;/code&gt; 触发器并将其绑定到元素。</target>
        </trans-unit>
        <trans-unit id="eeef063c79aeb4f50044a9152e97103442e703f1" translate="yes" xml:space="preserve">
          <source>In other words, when the user clicks this link, the router displays the component associated with the &lt;code&gt;compose&lt;/code&gt; route in the &lt;code&gt;popup&lt;/code&gt; outlet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e52e5c3032e6187e657dc00cec1cd2b072053ce" translate="yes" xml:space="preserve">
          <source>In other words, you're required to use &lt;code&gt;../&lt;/code&gt; rather than &lt;code&gt;./&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba35e15dd4c15f46ec67b54f17b33214638dd487" translate="yes" xml:space="preserve">
          <source>In other words, you're required to use &lt;code&gt;../&lt;/code&gt; rather than &lt;code&gt;./&lt;/code&gt;. This is currently the default behavior. Setting this option to &lt;code&gt;corrected&lt;/code&gt; enables the fix.</source>
          <target state="translated">换句话说，您需要使用 &lt;code&gt;../&lt;/code&gt; 而不是 &lt;code&gt;./&lt;/code&gt; 。这是当前的默认行为。将此选项设置为 &lt;code&gt;corrected&lt;/code&gt; 即可启用此修复程序。</target>
        </trans-unit>
        <trans-unit id="87df4a79a4f147a95a370ebf7d5c2192bfdcb408" translate="yes" xml:space="preserve">
          <source>In our example, the shell command either finishes or is still executing, so there&amp;rsquo;s no need for a progress report, but we can report status so that a parent builder that called our builder would know what&amp;rsquo;s going on. Use the &lt;code&gt;BuilderContext.reportStatus()&lt;/code&gt; method to generate a status string of any length. (Note that there&amp;rsquo;s no guarantee that a long string will be shown entirely; it could be cut to fit the UI that displays it.) Pass an empty string to remove the status.</source>
          <target state="translated">在我们的示例中，shell命令要么完成，要么仍在执行，因此不需要进度报告，但是我们可以报告状态，以便称为我们的构建器的父构建器可以知道发生了什么。使用 &lt;code&gt;BuilderContext.reportStatus()&lt;/code&gt; 方法生成任何长度的状态字符串。（请注意，不能保证将完整显示一个长字符串；可以将其剪切以适合显示它的UI。）传递一个空字符串以删除状态。</target>
        </trans-unit>
        <trans-unit id="56455dddd0518d118b14439b2bec10125d4d70c4" translate="yes" xml:space="preserve">
          <source>In our two-state button example, the wildcard isn't that useful because there are only two possible states, &lt;code&gt;open&lt;/code&gt; and &lt;code&gt;closed&lt;/code&gt;. Wildcard states are better when an element in one particular state has multiple potential states that it can change to. If our button can change from &lt;code&gt;open&lt;/code&gt; to either &lt;code&gt;closed&lt;/code&gt; or something like &lt;code&gt;inProgress&lt;/code&gt;, using a wildcard state could reduce the amount of coding needed.</source>
          <target state="translated">在我们的两种状态按钮示例中，通配符没有那么有用，因为只有两种可能的状态， &lt;code&gt;open&lt;/code&gt; 和 &lt;code&gt;closed&lt;/code&gt; 。当处于一种特定状态的元素具有可以更改为的多个潜在状态时，通配符状态会更好。如果我们的按钮可以从 &lt;code&gt;open&lt;/code&gt; 更改为 &lt;code&gt;closed&lt;/code&gt; 或类似于 &lt;code&gt;inProgress&lt;/code&gt; ，则使用通配符状态可以减少所需的编码量。</target>
        </trans-unit>
        <trans-unit id="f50e734f65a9ec214fd856de2782d754d78c4fd5" translate="yes" xml:space="preserve">
          <source>In practical terms, the &lt;code&gt;package.json&lt;/code&gt; of all &lt;code&gt;@angular&lt;/code&gt; packages has changed in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1caf8483b03bd6de160e2caf8712a24854fe9bca" translate="yes" xml:space="preserve">
          <source>In practice you will combine the two techniques in the same setup, as seen in this example.</source>
          <target state="translated">在实践中,您将在同一设置中结合两种技术,如本例所示。</target>
        </trans-unit>
        <trans-unit id="19ce34decb85894b971f2d3e1bfcf73bc88fa732" translate="yes" xml:space="preserve">
          <source>In practice you would rarely, if ever, implement all of the interfaces the way this demo does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bc493aece50f258b777e6728d20541b44060b9" translate="yes" xml:space="preserve">
          <source>In practice, this means that data in Angular flows downward during change detection. A parent component can easily change values in its child components because the parent is checked first. A failure could occur, however, if a child component tries to change a value in its parent during change detection (inverting the expected data flow), because the parent component has already been rendered. In development mode, Angular throws the &lt;code&gt;ExpressionChangedAfterItHasBeenCheckedError&lt;/code&gt; error if your app attempts to do this, rather than silently failing to render the new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72487f978bdb8dcb1ae15d26b5e9d260c3656cb7" translate="yes" xml:space="preserve">
          <source>In practice, you do not need to call &lt;code&gt;$apply()&lt;/code&gt;, regardless of whether it is in AngularJS or Angular. The &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; does it for us. You &lt;em&gt;can&lt;/em&gt; still call &lt;code&gt;$apply()&lt;/code&gt; so there is no need to remove such calls from existing code. Those calls just trigger additional AngularJS change detection checks in a hybrid application.</source>
          <target state="translated">实际上，无论它是在AngularJS还是Angular中，您都不需要调用 &lt;code&gt;$apply()&lt;/code&gt; 。该 &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 会为我们。您仍然&lt;em&gt;可以&lt;/em&gt;调用 &lt;code&gt;$apply()&lt;/code&gt; 因此无需从现有代码中删除此类调用。这些调用仅触发混合应用程序中的其他AngularJS更改检测检查。</target>
        </trans-unit>
        <trans-unit id="56d227fe5a68e4aaa849b0aa5c4de2fef9bb36da" translate="yes" xml:space="preserve">
          <source>In practice, you'll serve a static version of the landing page to hold the user's attention. At the same time, you'll load the full Angular app behind it. The user perceives near-instant performance from the landing page and gets the full interactive experience after the full app loads.</source>
          <target state="translated">在实际操作中,你会提供一个静态版本的登陆页面来吸引用户的注意力。同时,你会在后面加载完整的Angular应用。用户从着陆页中感知到近乎即时的性能,并在完整应用加载后获得完整的交互体验。</target>
        </trans-unit>
        <trans-unit id="e2ade5ef587790075852d0ae228268c6578796df" translate="yes" xml:space="preserve">
          <source>In production, change detection kicks in automatically when Angular creates a component or the user enters a keystroke or an asynchronous activity (e.g., AJAX) completes.</source>
          <target state="translated">在生产中,当Angular创建组件或用户输入按键或异步活动(如AJAX)完成时,变化检测会自动启动。</target>
        </trans-unit>
        <trans-unit id="2fca238085be2c83aa003fed9d03817a9fd8a50e" translate="yes" xml:space="preserve">
          <source>In reactive forms each form element in the view is directly linked to the form model (a &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance). Updates from the view to the model and from the model to the view are synchronous and do not depend on how the UI is rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8936ace2212f0d937e8bae060b90d1889ddfbb89" translate="yes" xml:space="preserve">
          <source>In reactive forms, add a custom validator by passing the function directly to the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8f761c448cb0a19d0d2a50bc0673ac4a1199f4" translate="yes" xml:space="preserve">
          <source>In reactive forms, custom validators are fairly simple to add. All you have to do is pass the function directly to the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在反应形式中，自定义验证器的添加非常简单。您所要做的就是将函数直接传递给 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12b205922219ca09964fb9aa93ac6d2fb7837eb1" translate="yes" xml:space="preserve">
          <source>In response to a click event, call the component's click handler, &lt;code&gt;add()&lt;/code&gt;, and then clear the input field so that it's ready for another name. Add the following to the &lt;code&gt;HeroesComponent&lt;/code&gt; class:</source>
          <target state="translated">作为对click事件的响应，调用组件的click处理程序 &lt;code&gt;add()&lt;/code&gt; ，然后清除输入字段，以使其准备好使用其他名称。将以下内容添加到 &lt;code&gt;HeroesComponent&lt;/code&gt; 类中：</target>
        </trans-unit>
        <trans-unit id="1e6c06858e21d619cbdb8f3726f8b28d11719707" translate="yes" xml:space="preserve">
          <source>In simple examples, the dependency value is an &lt;em&gt;instance&lt;/em&gt;, and the class &lt;em&gt;type&lt;/em&gt; serves as its own lookup key. Here you get a &lt;code&gt;HeroService&lt;/code&gt; directly from the injector by supplying the &lt;code&gt;HeroService&lt;/code&gt; type as the token:</source>
          <target state="translated">在简单的示例中，依赖项值是&lt;em&gt;instance&lt;/em&gt;，而类&lt;em&gt;类型&lt;/em&gt;用作其自己的查找键。在这里，您可以通过提供 &lt;code&gt;HeroService&lt;/code&gt; 类型作为令牌直接从注入器获取 &lt;code&gt;HeroService&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d61cd7b51c3a752e9e5224c7c2a9c10d341bcf87" translate="yes" xml:space="preserve">
          <source>In simpler terms, you might say this of the first route:</source>
          <target state="translated">简单点说,你可以这样说第一条路线。</target>
        </trans-unit>
        <trans-unit id="39a7262903072552ce7e1de93133df4200dff76f" translate="yes" xml:space="preserve">
          <source>In some cases you'll want to bypass the Angular CLI builder, and run the Bazel CLI directly. The Bazel CLI is in the &lt;code&gt;@bazel/bazel&lt;/code&gt; npm package. You can install it globally to get the &lt;code&gt;bazel&lt;/code&gt; command in your path, or use &lt;code&gt;$(npm bin)/bazel&lt;/code&gt; in place of bazel below.</source>
          <target state="translated">在某些情况下，您需要绕过Angular CLI构建器，然后直接运行Bazel CLI。Bazel CLI位于 &lt;code&gt;@bazel/bazel&lt;/code&gt; npm软件包中。您可以全局安装它以在路径中获取 &lt;code&gt;bazel&lt;/code&gt; 命令，或使用 &lt;code&gt;$(npm bin)/bazel&lt;/code&gt; 代替下面的bazel。</target>
        </trans-unit>
        <trans-unit id="c7d9f5a7f5bfd6aa1d897c40b145e3b00e9125c8" translate="yes" xml:space="preserve">
          <source>In some cases, the version of the app used by the service worker to serve a client might be in a broken state that cannot be recovered from without a full page reload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab622d819a42312798e6536f01d0dc402cced7a" translate="yes" xml:space="preserve">
          <source>In some cases, you may want to bypass the service worker entirely and let the browser handle the request instead. An example is when you rely on a feature that is currently not supported in service workers (e.g. &lt;a href=&quot;https://github.com/w3c/ServiceWorker/issues/1141&quot;&gt;reporting progress on uploaded files&lt;/a&gt;).</source>
          <target state="translated">在某些情况下，您可能希望完全绕过Service Worker，而让浏览器来处理请求。例如，您依赖服务工作者当前不支持的功能（例如，&lt;a href=&quot;https://github.com/w3c/ServiceWorker/issues/1141&quot;&gt;报告上传文件的进度&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="61bb49903d1d4b8480b074b2d9731adbded4bf41" translate="yes" xml:space="preserve">
          <source>In some cases, you need to limit the search or accommodate a missing dependency. You can modify Angular's search behavior with the &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;&lt;/code&gt; qualifying decorators on a service-valued parameter of the component's constructor.</source>
          <target state="translated">在某些情况下，您需要限制搜索或适应缺少的依赖性。您可以在组件构造函数的服务值参数上使用 &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;&lt;/code&gt; 限定修饰符来修改Angular的搜索行为。</target>
        </trans-unit>
        <trans-unit id="9660b78fcdbbefc9e6c733e9357058335454ef4b" translate="yes" xml:space="preserve">
          <source>In some tests, you're more interested in how an injected service method was called and what values it returned, than what appears on screen.</source>
          <target state="translated">在一些测试中,比起屏幕上显示的内容,你更感兴趣的是一个注入的服务方法是如何被调用的,以及它返回了什么值。</target>
        </trans-unit>
        <trans-unit id="d234d3f817a0a34e6196f4aad3f42f5e028ff0f6" translate="yes" xml:space="preserve">
          <source>In specific situations, it might be necessary to disable sanitization, for example if the application genuinely needs to produce a &lt;code&gt;javascript:&lt;/code&gt; style link with a dynamic value in it. Users can bypass security by constructing a value with one of the &lt;code&gt;bypassSecurityTrust...&lt;/code&gt; methods, and then binding to that value from the template.</source>
          <target state="translated">在特定情况下，可能有必要禁用清理功能，例如，如果应用程序确实需要产生其中具有动态值的 &lt;code&gt;javascript:&lt;/code&gt; 样式链接。用户可以通过使用 &lt;code&gt;bypassSecurityTrust...&lt;/code&gt; 方法之一构造一个值，然后从模板绑定到该值来绕过安全性。</target>
        </trans-unit>
        <trans-unit id="d8e398ebcd66ab590bdd5d974fb4832daf67c817" translate="yes" xml:space="preserve">
          <source>In sum, you can write applications with one, two or more levels of routing. The link parameters array affords the flexibility to represent any routing depth and any legal sequence of route paths, (required) router parameters, and (optional) route parameter objects.</source>
          <target state="translated">总而言之,你可以编写具有一个、两个或多个层次的路由的应用程序。链路参数数组可以灵活地表示任何路由深度和任何合法的路由路径序列、(必需的)路由器参数和(可选的)路由参数对象。</target>
        </trans-unit>
        <trans-unit id="623f5e0e06cac9546fad2e1d9d858205754ab9a5" translate="yes" xml:space="preserve">
          <source>In summary, you can write applications with one, two or more levels of routing. The link parameters array affords the flexibility to represent any routing depth and any legal sequence of route paths, (required) router parameters, and (optional) route parameter objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33d61663fac8d5f31f41cf19abfab91e3740d51" translate="yes" xml:space="preserve">
          <source>In summary, you want to delay rendering the routed component until all necessary data has been fetched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e104dcb833aabc752ad0a3c07890da8319df3538" translate="yes" xml:space="preserve">
          <source>In summary, you want to delay rendering the routed component until all necessary data have been fetched.</source>
          <target state="translated">总而言之,你要延迟渲染路由组件,直到获取所有必要的数据。</target>
        </trans-unit>
        <trans-unit id="83125967d52de259af9ac73a04025e6be705f964" translate="yes" xml:space="preserve">
          <source>In template driven forms, all &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags are automatically tagged as &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt;. To import the &lt;code&gt;&lt;a href=&quot;formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; but skip its usage in some forms, for example, to use native HTML5 validation, add the &lt;code&gt;ngNoForm&lt;/code&gt; and the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags won't create an &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; directive. In reactive forms, using &lt;code&gt;ngNoForm&lt;/code&gt; is unnecessary because the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags are inert. In that case, you would refrain from using the &lt;code&gt;formGroup&lt;/code&gt; directive.</source>
          <target state="translated">在模板驱动的表单中，所有 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标记都会自动标记为 &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; 。要导入 &lt;code&gt;&lt;a href=&quot;formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 但跳过某些形式的用法，例如，使用本机HTML5验证，请添加 &lt;code&gt;ngNoForm&lt;/code&gt; ，而 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标记将不会创建 &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; 指令。在反应形式中，不需要使用 &lt;code&gt;ngNoForm&lt;/code&gt; ，因为 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标签是惰性的。在这种情况下，您将避免使用 &lt;code&gt;formGroup&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="477e647d8c0ecb9558b0cd8c664fca639f6f099b" translate="yes" xml:space="preserve">
          <source>In template driven forms, if you've imported &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;, you don't have to do anything to the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag in order to make use of &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;. Continue on to see how this works.</source>
          <target state="translated">在模板驱动的表单中，如果已导入 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; ，则无需对 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标记进行任何操作即可使用 &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; 。继续查看其工作原理。</target>
        </trans-unit>
        <trans-unit id="fdd04dd82ac2e2c71275724a71c50dd3e5b6d107" translate="yes" xml:space="preserve">
          <source>In template-driven forms, add a directive to the template, where the directive wraps the validator function. For example, the corresponding &lt;code&gt;ForbiddenValidatorDirective&lt;/code&gt; serves as a wrapper around the &lt;code&gt;forbiddenNameValidator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f920b8d9ffd47931549ae3e7c7ae76ebf2545b" translate="yes" xml:space="preserve">
          <source>In template-driven forms, each form element is linked to a directive that manages the form model internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa8be07d8ab554c9b5c8a2c06f23414c9fbd80f" translate="yes" xml:space="preserve">
          <source>In template-driven forms, each form element is linked to a directive that manages the form model internally. The diagrams below use the same favorite color example to demonstrate how data flows when an input field's value is changed from the view and then from the model.</source>
          <target state="translated">在模板驱动的表单中,每个表单元素都链接到一个指令,该指令在内部管理表单模型。下面的图表使用相同的最爱颜色示例来演示当输入字段的值从视图中改变,然后从模型中改变时,数据是如何流动的。</target>
        </trans-unit>
        <trans-unit id="0bd7dd8b5ca1c595b363717724f3cb456665a859" translate="yes" xml:space="preserve">
          <source>In template-driven forms, the form model is implicit, rather than explicit. The directive &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; creates and manages a &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance for a given form element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f3796113966b61681d92d3ea2c4e2687db94c5" translate="yes" xml:space="preserve">
          <source>In template-driven forms, the source of truth is the template.</source>
          <target state="translated">在模板驱动的形式中,真理的来源是模板。</target>
        </trans-unit>
        <trans-unit id="14ecbfdcfe9548e05316a56c993192cedabf9367" translate="yes" xml:space="preserve">
          <source>In template-driven forms, you don't have direct access to the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance, so you can't pass the validator in like you can for reactive forms. Instead, you need to add a directive to the template.</source>
          <target state="translated">在模板驱动的表单中，您没有直接访问 &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; 实例的权限，因此无法像在反应式表单中那样传递验证器。相反，您需要向模板添加指令。</target>
        </trans-unit>
        <trans-unit id="48492c39622ecb3062934d6f8c81b07a54a70450" translate="yes" xml:space="preserve">
          <source>In terms of project structure, this is where the work begins:</source>
          <target state="translated">在项目结构方面,这是工作的起点。</target>
        </trans-unit>
        <trans-unit id="6af431ed4c05cfe4dc08e184fe613d756b260244" translate="yes" xml:space="preserve">
          <source>In terms of syntax, template expressions are similar to JavaScript. Many JavaScript expressions are legal template expressions, with a few exceptions.</source>
          <target state="translated">在语法方面,模板表达式与JavaScript类似。许多JavaScript表达式都是合法的模板表达式,只有少数例外。</target>
        </trans-unit>
        <trans-unit id="09e5d39b1c7c8f014b6062dd7a1bc332ba6b3f66" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;router#optional-route-parameters&quot;&gt;route parameters&lt;/a&gt; example, you only dealt with parameters specific to the route, but what if you wanted optional parameters available to all routes? This is where query parameters come into play.</source>
          <target state="translated">在&lt;a href=&quot;router#optional-route-parameters&quot;&gt;路由参数&lt;/a&gt;示例中，您仅处理特定于该路由的参数，但是如果您希望所有路由都可以使用可选参数该怎么办？这是查询参数起作用的地方。</target>
        </trans-unit>
        <trans-unit id="5ac26089710632524cad22cceefd6020163e7ab7" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;router-tutorial-toh#optional-route-parameters&quot;&gt;route parameters&lt;/a&gt; section, you only dealt with parameters specific to the route. However, you can use query parameters to get optional parameters available to all routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0820c06ab8c6d0ef8a8fe1b0b929c48f6630bb66" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;toh-pt0#app-wide-styles&quot;&gt;first tutorial&lt;/a&gt;, you set the basic styles for the entire application in &lt;code&gt;styles.css&lt;/code&gt;. That stylesheet didn't include styles for this list of heroes.</source>
          <target state="translated">在第&lt;a href=&quot;toh-pt0#app-wide-styles&quot;&gt;一个教程中&lt;/a&gt;，您可以在 &lt;code&gt;styles.css&lt;/code&gt; 中设置整个应用程序的基本样式。该样式表未包含此英雄列表的样式。</target>
        </trans-unit>
        <trans-unit id="9ff53014dbd002b257b76fc01a67c8662544ebee" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;toh-pt6&quot;&gt;HTTP tutorial&lt;/a&gt;, you'll call &lt;code&gt;HttpClient.get&amp;lt;Hero[]&amp;gt;()&lt;/code&gt; which also returns an &lt;code&gt;Observable&amp;lt;Hero[]&amp;gt;&lt;/code&gt; that emits &lt;em&gt;a single value&lt;/em&gt;, an array of heroes from the body of the HTTP response.</source>
          <target state="translated">在&lt;a href=&quot;toh-pt6&quot;&gt;HTTP教程中&lt;/a&gt;，您将调用 &lt;code&gt;HttpClient.get&amp;lt;Hero[]&amp;gt;()&lt;/code&gt; ，它还会返回一个 &lt;code&gt;Observable&amp;lt;Hero[]&amp;gt;&lt;/code&gt; ，该Observable &amp;lt;Hero []&amp;gt;发出&lt;em&gt;一个值&lt;/em&gt;，即来自HTTP响应正文的英雄数组。</target>
        </trans-unit>
        <trans-unit id="b1d8e3e61174d25c0c4cf9e3fb0410f3a8581bbc" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;workspace-config#project-tool-configuration-options&quot;&gt;workspace configuration file&lt;/a&gt;, an &quot;architect&quot; section provides configuration options for Architect builders.</source>
          <target state="translated">在&lt;a href=&quot;workspace-config#project-tool-configuration-options&quot;&gt;工作空间配置文件中&lt;/a&gt;，&amp;ldquo;建筑师&amp;rdquo;部分提供了Architect构建器的配置选项。</target>
        </trans-unit>
        <trans-unit id="a2b4efd306cdfa6d091bc13bfe331154e2fde145" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator for a component.</source>
          <target state="translated">在 &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; 装饰器中的组件。</target>
        </trans-unit>
        <trans-unit id="11992fcba8b5395115e22e411c3650f43745f117" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; decorator, notice the selector name, &lt;code&gt;ad-host&lt;/code&gt;; that's what you use to apply the directive to the element. The next section shows you how.</source>
          <target state="translated">在 &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; 装饰器中，注意选择器名称 &lt;code&gt;ad-host&lt;/code&gt; ；这就是将指令应用于元素的方法。下一节将向您展示如何。</target>
        </trans-unit>
        <trans-unit id="ff586c6893dff74ac24103ccba179ce78c8fd44d" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; decorator, notice the selector name, &lt;code&gt;adHost&lt;/code&gt;; that's what you use to apply the directive to the element. The next section shows you how.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22feceeafd715b7f8da2f83c22752555ac3c93c1" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator for the service itself.</source>
          <target state="translated">在服务本身的 &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; 装饰器中。</target>
        </trans-unit>
        <trans-unit id="4f13851c0ebd5a6ff72bf789e168b55892a0232a" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; decorator for an NgModule.</source>
          <target state="translated">在 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; 的@ NgModule（）装饰器中。</target>
        </trans-unit>
        <trans-unit id="2274075c2bf540e16098ef50a72f44b04cdc14fd" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;AppComponent&lt;/code&gt; template, &lt;code&gt;fontSizePx&lt;/code&gt; is two-way bound to the &lt;code&gt;SizerComponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6486f7643dd48c9967dcdd245700203deebedc2e" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;AppComponent&lt;/code&gt;, &lt;code&gt;fontSizePx&lt;/code&gt; establishes the initial &lt;code&gt;SizerComponent.size&lt;/code&gt; value by setting the value to &lt;code&gt;16&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b03921e4e22315726b2588d9aecac260d6b1661" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;AppModule&lt;/code&gt;, import the &lt;code&gt;HttpClientInMemoryWebApiModule&lt;/code&gt; and the &lt;code&gt;InMemoryDataService&lt;/code&gt; class, which you will create in a moment.</source>
          <target state="translated">在 &lt;code&gt;AppModule&lt;/code&gt; 中，导入 &lt;code&gt;HttpClientInMemoryWebApiModule&lt;/code&gt; 和 &lt;code&gt;InMemoryDataService&lt;/code&gt; 类，稍后将创建它们。</target>
        </trans-unit>
        <trans-unit id="962c3bfac2312dcb14ad043348facd5c496cbeb9" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;AppRoutingModule&lt;/code&gt;, you used the static &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method to register the routes and application level service providers. In a feature module you use the static &lt;code&gt;forChild()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677f4f33e13f4a8b9fa933701588716ce9142d4f" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;BUILD.bazel&lt;/code&gt; file, each rule must first be imported, using the &lt;code&gt;load&lt;/code&gt; statement. Then the rule is called with some attributes, and the result of calling the rule is that you've declared to Bazel how it can derive some outputs given some inputs and dependencies. Then later, when you run a &lt;code&gt;bazel&lt;/code&gt; command line, Bazel loads all the rules you've declared to determine an absolute ordering of what needs to be run. Note that only the rules needed to produce the requested output will actually be executed.</source>
          <target state="translated">在 &lt;code&gt;BUILD.bazel&lt;/code&gt; 文件中，必须首先使用 &lt;code&gt;load&lt;/code&gt; 语句导入每个规则。然后使用一些属性调用该规则，并且调用该规则的结果是，您已经向Bazel声明了在给定一些输入和依赖关系的情况下它如何能够派生出一些输出。然后，当您运行 &lt;code&gt;bazel&lt;/code&gt; 命令行时，Bazel将加载您声明的所有规则，以确定需要运行的内容的绝对顺序。请注意，只有产生所需输出的规则才会实际执行。</target>
        </trans-unit>
        <trans-unit id="ff73a4f29b4dafba90546044a92eb6295b78516d" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;CartComponent&lt;/code&gt; class, define the &lt;code&gt;checkoutForm&lt;/code&gt; property to store the form model.</source>
          <target state="translated">在 &lt;code&gt;CartComponent&lt;/code&gt; 类中，定义 &lt;code&gt;checkoutForm&lt;/code&gt; 属性以存储表单模型。</target>
        </trans-unit>
        <trans-unit id="01997d24bac7bafa6f0678f1e46558c3083893f4" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;CartService&lt;/code&gt; class, define an &lt;code&gt;items&lt;/code&gt; property to store the array of the current products in the cart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af276f659fcdc7e39c68c1ac45abbf64eb51dc71" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;CartService&lt;/code&gt; class, define an &lt;code&gt;items&lt;/code&gt; property to store the list (array) of the current products in the cart.</source>
          <target state="translated">在 &lt;code&gt;CartService&lt;/code&gt; 类中，定义一个 &lt;code&gt;items&lt;/code&gt; 属性以存储购物车中当前产品的列表（数组）。</target>
        </trans-unit>
        <trans-unit id="5867d4d5bfeee0f55a7464e033d66ab84c592db8" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Hero Detail&lt;/code&gt; and &lt;code&gt;Crisis Detail&lt;/code&gt;, the app waited until the route was activated to fetch the respective hero or crisis.</source>
          <target state="translated">在&amp;ldquo; &lt;code&gt;Hero Detail&lt;/code&gt; 和&amp;ldquo; &lt;code&gt;Crisis Detail&lt;/code&gt; ，应用程序等待，直到激活路线以获取相应的英雄或危机。</target>
        </trans-unit>
        <trans-unit id="18c1043ce48596bb1dfc52c7f2a46397b1f7b0f8" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;HeroDetail&lt;/code&gt; component class, add the following &lt;code&gt;save()&lt;/code&gt; method, which persists hero name changes using the hero service &lt;code&gt;updateHero()&lt;/code&gt; method and then navigates back to the previous view.</source>
          <target state="translated">在 &lt;code&gt;HeroDetail&lt;/code&gt; 组件类中，添加以下 &lt;code&gt;save()&lt;/code&gt; 方法，该方法使用英雄服务 &lt;code&gt;updateHero()&lt;/code&gt; 方法保留英雄名称更改，然后导航回到上一个视图。</target>
        </trans-unit>
        <trans-unit id="2156da5df59cee5a225281c56c30a9cab56708ab" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;HeroService&lt;/code&gt;, import &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/http/httpheaders&quot;&gt;HttpHeaders&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">在 &lt;code&gt;HeroService&lt;/code&gt; 中，导入 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../api/common/http/httpheaders&quot;&gt;HttpHeaders&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3b722dd2b3d365c95d5bd3fe88be0090f5c815d5" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;ItemListComponent&lt;/code&gt; the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;, &lt;code&gt;items&lt;/code&gt;, has a type of &lt;code&gt;Item[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca02e5a12bc00052325d452bf3f5957538434cc" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Phone&lt;/code&gt; service, you can explicitly annotate the &lt;code&gt;$resource&lt;/code&gt; service dependency as an &lt;code&gt;angular.resource.IResourceService&lt;/code&gt; - a type defined by the AngularJS typings.</source>
          <target state="translated">在 &lt;code&gt;Phone&lt;/code&gt; 服务中，您可以将 &lt;code&gt;$resource&lt;/code&gt; 服务依赖项显式注释为 &lt;code&gt;angular.resource.IResourceService&lt;/code&gt; -由AngularJS类型定义的类型。</target>
        </trans-unit>
        <trans-unit id="a5e662caedf020f11cf3036766fb27dbfdab3cfd" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;ProductAlertsComponent&lt;/code&gt; class definition, define a property named &lt;code&gt;product&lt;/code&gt; with an &lt;code&gt;@&lt;a href=&quot;api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorator. The &lt;code&gt;@&lt;a href=&quot;api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorator indicates that the property value passes in from the component's parent, the product list component.</source>
          <target state="translated">在 &lt;code&gt;ProductAlertsComponent&lt;/code&gt; 类定义中，使用 &lt;code&gt;@&lt;a href=&quot;api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;api/core/input&quot;&gt;Input&lt;/a&gt;（）装饰器定义一个名为 &lt;code&gt;product&lt;/code&gt; 的属性。在 &lt;code&gt;@&lt;a href=&quot;api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; &lt;a href=&quot;api/core/input&quot;&gt;输入&lt;/a&gt;（）装饰表示属性值从组件的父，产品列表分量通过。</target>
        </trans-unit>
        <trans-unit id="36898b78d65205ea3838be208da032aa36540e47" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;ProfileEditor&lt;/code&gt; component, add the &lt;code&gt;Validators.required&lt;/code&gt; static method as the second item in the array for the &lt;code&gt;firstName&lt;/code&gt; control.</source>
          <target state="translated">在 &lt;code&gt;ProfileEditor&lt;/code&gt; 组件中，将 &lt;code&gt;Validators.required&lt;/code&gt; 静态方法添加为 &lt;code&gt;firstName&lt;/code&gt; 控件数组中的第二项。</target>
        </trans-unit>
        <trans-unit id="92ee776b0a8c4703a5ed41d37503aaec513d8b04" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;angular.json&lt;/code&gt; configuration file, add the associated script files to the &quot;scripts&quot; array:</source>
          <target state="translated">在 &lt;code&gt;angular.json&lt;/code&gt; 配置文件中，将关联的脚本文件添加到&amp;ldquo; scripts&amp;rdquo;数组中：</target>
        </trans-unit>
        <trans-unit id="1a9899ccac78789435c820f6606e4531795090bf" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;angular.json&lt;/code&gt; file, each project has an &quot;architect&quot; section that contains targets which configure builders. Some of these targets correspond to &lt;a href=&quot;glossary#cli&quot;&gt;CLI commands&lt;/a&gt;, such as &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt;, and &lt;code&gt;lint&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;angular.json&lt;/code&gt; 文件中，每个项目都有一个&amp;ldquo; architect&amp;rdquo;部分，其中包含配置构建器的目标。其中一些目标与&lt;a href=&quot;glossary#cli&quot;&gt;CLI命令&lt;/a&gt;相对应，例如 &lt;code&gt;build&lt;/code&gt; ， &lt;code&gt;serve&lt;/code&gt; ， &lt;code&gt;test&lt;/code&gt; 和 &lt;code&gt;lint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94de57a6cb371bf77619355ba9427137a477c222" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;app.component.ts&lt;/code&gt;, add a &lt;code&gt;logger()&lt;/code&gt; method.</source>
          <target state="translated">在 &lt;code&gt;app.component.ts&lt;/code&gt; 中，添加 &lt;code&gt;logger()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="62dde02e97dfc75cca7459efe150d4efeef31929" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;closed&lt;/code&gt; state, shown below, the button has a height of 100 pixels, an opacity of 0.5, and a background color of green.</source>
          <target state="translated">在 &lt;code&gt;closed&lt;/code&gt; 状态下（如下所示），按钮的高度为100像素，不透明度为0.5，背景颜色为绿色。</target>
        </trans-unit>
        <trans-unit id="f0e79bc039a97e654def058d6c01677193e8e1ac" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;flying-heroes.component.html (v1)&lt;/code&gt; template, the &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; repeater displays the hero names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94125f0a02fd08e44127e50aa5dff39b0e271acf" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;imports&lt;/code&gt; array, update the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; section as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6237dfcfe55567721272937836c6e2f073f47d0" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;index.html&lt;/code&gt; file, update the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag to include the new style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166e5ae5219a736e7e64042d01444638aec53e58" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;ngOnInit()&lt;/code&gt; method, &lt;em&gt;subscribe&lt;/em&gt; to route params and fetch the product based on the &lt;code&gt;productId&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;ngOnInit()&lt;/code&gt; 方法中，&lt;em&gt;订阅&lt;/em&gt;路由参数并根据 &lt;code&gt;productId&lt;/code&gt; 获取产品。</target>
        </trans-unit>
        <trans-unit id="0435da30463a3a4f676343098e858808a78ebf7b" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;ngOnInit()&lt;/code&gt; method, subscribe to route parameters and fetch the product based on the &lt;code&gt;productId&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ca67bc8f59ab32b93f10aa761e0dc952786bee" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;ngOnInit()&lt;/code&gt; method, use the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service to retrieve the parameters for the route, pull the hero &lt;code&gt;id&lt;/code&gt; from the parameters, and retrieve the hero to display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a184e86e3a0e42b994b7ab8f4d3105c6d66f4be" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;ngOnInit()&lt;/code&gt;&lt;a href=&quot;../guide/lifecycle-hooks#oninit&quot;&gt;lifecycle hook&lt;/a&gt; call &lt;code&gt;getHero()&lt;/code&gt; and define it as follows.</source>
          <target state="translated">在 &lt;code&gt;ngOnInit()&lt;/code&gt; &lt;a href=&quot;../guide/lifecycle-hooks#oninit&quot;&gt;生命周期挂钩中，&lt;/a&gt;调用 &lt;code&gt;getHero()&lt;/code&gt; 并定义如下。</target>
        </trans-unit>
        <trans-unit id="1ec1c3010006a416ad9d0a3a466d135533ea48e4" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;package.json&lt;/code&gt; file, add a &lt;code&gt;builders&lt;/code&gt; key that tells the Architect tool where to find our builder definition file.</source>
          <target state="translated">在 &lt;code&gt;package.json&lt;/code&gt; 文件中，添加一个 &lt;code&gt;builders&lt;/code&gt; 键，该键告诉Architect工具在哪里可以找到我们的构建器定义文件。</target>
        </trans-unit>
        <trans-unit id="b9948e144c79c9c4f0b9dd0251b423e396dd63cb" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;product-list&lt;/code&gt; folder, open the template file &lt;code&gt;product-list.component.html&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;product-list&lt;/code&gt; 文件夹中，打开模板文件 &lt;code&gt;product-list.component.html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97dfb1a67e0acfe8f117f2fb6b7fbabfa7951806" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;schematics/&lt;/code&gt; folder, create an &lt;code&gt;ng-add/&lt;/code&gt; folder for your first schematic.</source>
          <target state="translated">在 &lt;code&gt;schematics/&lt;/code&gt; 文件夹中，为第一个示意图创建一个 &lt;code&gt;ng-add/&lt;/code&gt; 文件夹。</target>
        </trans-unit>
        <trans-unit id="071be1c94586b5d59a7d3e0b251a1712459e1078" translate="yes" xml:space="preserve">
          <source>In the &lt;span name=&quot;ngmodules&quot;&gt;live example&lt;/span&gt; the root &lt;code&gt;AppModule&lt;/code&gt; imports the &lt;code&gt;GreetingModule&lt;/code&gt; and adds the &lt;code&gt;providers&lt;/code&gt; to the &lt;code&gt;AppModule&lt;/code&gt; providers. Specifically, Angular accumulates all imported providers before appending the items listed in &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt;. This sequence ensures that whatever you add explicitly to the &lt;code&gt;AppModule&lt;/code&gt; providers takes precedence over the providers of imported modules.</source>
          <target state="translated">在&lt;span name=&quot;ngmodules&quot;&gt;实际示例中&lt;/span&gt;，根 &lt;code&gt;AppModule&lt;/code&gt; 导入 &lt;code&gt;GreetingModule&lt;/code&gt; 并将 &lt;code&gt;providers&lt;/code&gt; 添加到 &lt;code&gt;AppModule&lt;/code&gt; 提供程序中。具体来说，在附加 &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; 列出的项目之前，Angular会累积所有导入的提供程序。此序列可确保您显式添加到 &lt;code&gt;AppModule&lt;/code&gt; 提供程序中的任何内容都优先于导入模块的提供程序。</target>
        </trans-unit>
        <trans-unit id="aabd7c813ffdc03e68f8ddf0d0e075e18a3d7a6d" translate="yes" xml:space="preserve">
          <source>In the Angular CLI, a standalone application or &lt;a href=&quot;glossary#library&quot;&gt;library&lt;/a&gt; that can be created or modified by a CLI command.</source>
          <target state="translated">在Angular CLI中，可以通过CLI命令创建或修改的独立应用程序或&lt;a href=&quot;glossary#library&quot;&gt;库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b7b501033bcab7677bbf386ea844c636f41ee7a1" translate="yes" xml:space="preserve">
          <source>In the CLI configuration file, &lt;code&gt;angular.json&lt;/code&gt;, add the &lt;code&gt;proxyConfig&lt;/code&gt; option to the &lt;code&gt;serve&lt;/code&gt; target:</source>
          <target state="translated">在CLI配置文件 &lt;code&gt;angular.json&lt;/code&gt; 中，将 &lt;code&gt;proxyConfig&lt;/code&gt; 选项添加到 &lt;code&gt;serve&lt;/code&gt; 目标：</target>
        </trans-unit>
        <trans-unit id="61763a5a70701c3c12fbb07b3b6f0e84eaf7bbab" translate="yes" xml:space="preserve">
          <source>In the CLI configuration file, &lt;code&gt;angular.json&lt;/code&gt;, point to the JavaScript proxy configuration file:</source>
          <target state="translated">在CLI配置文件 &lt;code&gt;angular.json&lt;/code&gt; 中，指向JavaScript代理配置文件：</target>
        </trans-unit>
        <trans-unit id="122be2b5ab964b68505d923b034cfdbee86e0ef4" translate="yes" xml:space="preserve">
          <source>In the DOM of a hybrid ngUpgrade application are components and directives from both AngularJS and Angular. These components communicate with each other by using the input and output bindings of their respective frameworks, which ngUpgrade bridges together. They may also communicate through shared injected dependencies, as described above.</source>
          <target state="translated">在混合ngUpgrade应用程序的DOM中,有来自AngularJS和Angular的组件和指令。这些组件通过使用各自框架的输入和输出绑定来相互通信,而ngUpgrade则将这些框架桥接在一起。它们也可以通过共享注入的依赖关系进行通信,如上所述。</target>
        </trans-unit>
        <trans-unit id="da4aac216c4150aa0c4b76a0cbffacab0ba55a37" translate="yes" xml:space="preserve">
          <source>In the DOM of a running Angular application with emulated view encapsulation enabled, each DOM element has some extra attributes attached to it:</source>
          <target state="translated">在启用了模拟视图封装的运行中的Angular应用的DOM中,每个DOM元素都会附加一些额外的属性。</target>
        </trans-unit>
        <trans-unit id="967824d97e856f8a5701294372f66633e02cbd55" translate="yes" xml:space="preserve">
          <source>In the HTML template file, use the trigger name to attach the defined animations to the HTML element to be animated.</source>
          <target state="translated">在HTML模板文件中,使用触发器名称将定义的动画附加到要动画的HTML元素上。</target>
        </trans-unit>
        <trans-unit id="083a121e6216962299890132cebbe02f632fa294" translate="yes" xml:space="preserve">
          <source>In the HTML template, the animation event is passed back via &lt;code&gt;$event&lt;/code&gt;, as &lt;code&gt;@trigger.start&lt;/code&gt; and &lt;code&gt;@trigger.done&lt;/code&gt;, where &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;&lt;/code&gt; is the name of the trigger being used. In our example, the trigger &lt;code&gt;openClose&lt;/code&gt; appears as follows.</source>
          <target state="translated">在HTML模板中，动画事件通过 &lt;code&gt;$event&lt;/code&gt; 返回，如 &lt;code&gt;@trigger.start&lt;/code&gt; 和 &lt;code&gt;@trigger.done&lt;/code&gt; ，其中 &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;&lt;/code&gt; 是使用的触发器的名称。在我们的示例中，触发器 &lt;code&gt;openClose&lt;/code&gt; 如下所示。</target>
        </trans-unit>
        <trans-unit id="9f68507ab6ee93f0f57a92342cc4e0c3de28bf7e" translate="yes" xml:space="preserve">
          <source>In the HTML template, the animation event is passed back via &lt;code&gt;$event&lt;/code&gt;, as &lt;code&gt;@trigger.start&lt;/code&gt; and &lt;code&gt;@trigger.done&lt;/code&gt;, where &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;&lt;/code&gt; is the name of the trigger being used. In this example, the trigger &lt;code&gt;openClose&lt;/code&gt; appears as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfcba8b351ad67cbd3018ae060d6b3b0cce679cf" translate="yes" xml:space="preserve">
          <source>In the Karma configuration file, &lt;code&gt;karma.conf.js&lt;/code&gt;, add a custom launcher called ChromeHeadlessCI below browsers:</source>
          <target state="translated">在Karma配置文件 &lt;code&gt;karma.conf.js&lt;/code&gt; 中，在浏览器下方添加一个名为ChromeHeadlessCI的自定义启动器：</target>
        </trans-unit>
        <trans-unit id="0d8933c6633530a939e7e7a904014c408f4331c7" translate="yes" xml:space="preserve">
          <source>In the Phone detail controller, you'll have two members: One for the phone that the user is looking at and another for the URL of the currently displayed image:</source>
          <target state="translated">在手机详情控制器中,你会有两个成员。一个是用户正在看的手机,另一个是当前显示的图片的URL。</target>
        </trans-unit>
        <trans-unit id="0d1a2ab17dd8ff5eedf9e71bb387641a06044ce9" translate="yes" xml:space="preserve">
          <source>In the TypeScript configuration file, the &quot;target&quot; option in the &lt;code&gt;compilerOptions&lt;/code&gt; section determines the ECMAScript target version that the code is compiled to. Modern browsers support ES2015 natively, while ES5 is more commonly used to support legacy browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4df01dda361adbb05b79a30335d5fac348e1b3c" translate="yes" xml:space="preserve">
          <source>In the above code snippet, &lt;code&gt;transAnimation&lt;/code&gt; is made reusable by declaring it as an export variable.</source>
          <target state="translated">在上面的代码片段中，通过将 &lt;code&gt;transAnimation&lt;/code&gt; 声明为导出变量使其可重用。</target>
        </trans-unit>
        <trans-unit id="999956f8131dbd54f089f149eff9fb3d864570b4" translate="yes" xml:space="preserve">
          <source>In the above code, we applied the &lt;code&gt;void&lt;/code&gt; state when the HTML element isn't attached to a view.</source>
          <target state="translated">在上面的代码中，当HTML元素未附加到视图时，我们应用了 &lt;code&gt;void&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="6bcbc62f2692a7cad7cfffdc2e7cf4b7e559d979" translate="yes" xml:space="preserve">
          <source>In the above code, you applied the &lt;code&gt;void&lt;/code&gt; state when the HTML element isn't attached to a view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea6f478656e7fe4e653914666132b5379bca812" translate="yes" xml:space="preserve">
          <source>In the above example, a breakpoint on the pipe's request for data shows the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e34e2cb53ddbb0085cbc3e5a61b4772c7d5c3c2" translate="yes" xml:space="preserve">
          <source>In the above example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1eba3971dbfd135fb71e9d8c51d2907a609acb" translate="yes" xml:space="preserve">
          <source>In the above scenario, the service worker is not able to serve an asset that would normally be cached. That particular app version is broken and there is no way to fix the state of the client without reloading the page. In such cases, the service worker notifies the client by sending an &lt;code&gt;&lt;a href=&quot;../api/service-worker/unrecoverablestateevent&quot;&gt;UnrecoverableStateEvent&lt;/a&gt;&lt;/code&gt; event. You can subscribe to &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;#unrecoverable&lt;/code&gt; to be notified and handle these errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577e109d05bd16fdfef27736b2c5e520043e9b7f" translate="yes" xml:space="preserve">
          <source>In the ad banner, all components implement a common &lt;code&gt;AdComponent&lt;/code&gt; interface to standardize the API for passing data to the components.</source>
          <target state="translated">在广告横幅中，所有组件都实现一个通用的 &lt;code&gt;AdComponent&lt;/code&gt; 接口，以标准化用于将数据传递到组件的API。</target>
        </trans-unit>
        <trans-unit id="19609a3f68be8a8d8459bb2350900bd1a47c1bf5" translate="yes" xml:space="preserve">
          <source>In the basic CLI-generated app, modules are eagerly loaded which means that they are all loaded when the app launches. Angular uses an injector system to make things available between modules. In an eagerly loaded app, the root application injector makes all of the providers in all of the modules available throughout the app.</source>
          <target state="translated">在基本的CLI生成的应用程序中,模块是急切加载的,这意味着当应用程序启动时,它们都会被加载。Angular使用注入器系统来使模块之间的东西可用。在急切加载的应用程序中,根应用程序注入器使所有模块中的所有提供者在整个应用程序中可用。</target>
        </trans-unit>
        <trans-unit id="d217fba68efca130ef3c06341acbd707ba067782" translate="yes" xml:space="preserve">
          <source>In the builder source directory, we have created a new test file &lt;code&gt;index.spec.ts&lt;/code&gt;. The code creates new instances of &lt;code&gt;JsonSchemaRegistry&lt;/code&gt; (for schema validation), &lt;code&gt;TestingArchitectHost&lt;/code&gt; (an in-memory implementation of &lt;code&gt;ArchitectHost&lt;/code&gt;), and &lt;code&gt;Architect&lt;/code&gt;.</source>
          <target state="translated">在构建器源目录中，我们创建了一个新的测试文件 &lt;code&gt;index.spec.ts&lt;/code&gt; 。该代码创建 &lt;code&gt;JsonSchemaRegistry&lt;/code&gt; （用于模式验证）， &lt;code&gt;TestingArchitectHost&lt;/code&gt; （ &lt;code&gt;ArchitectHost&lt;/code&gt; 的内存实现）和 &lt;code&gt;Architect&lt;/code&gt; 的新实例。</target>
        </trans-unit>
        <trans-unit id="d959bf9da8f9b9700248ea3b26f61fd618b0cb98" translate="yes" xml:space="preserve">
          <source>In the builder source directory, we have created a new test file &lt;code&gt;my-builder.spec.ts&lt;/code&gt;. The code creates new instances of &lt;code&gt;JsonSchemaRegistry&lt;/code&gt; (for schema validation), &lt;code&gt;TestingArchitectHost&lt;/code&gt; (an in-memory implementation of &lt;code&gt;ArchitectHost&lt;/code&gt;), and &lt;code&gt;Architect&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f98a695082e7fd1036ab253a946e35cc9beb2c" translate="yes" xml:space="preserve">
          <source>In the case of hybrid applications, the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; bridges the AngularJS and Angular approaches. Here's what happens:</source>
          <target state="translated">对于混合应用程序， &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; 将AngularJS和Angular方法联系起来。这是发生了什么：</target>
        </trans-unit>
        <trans-unit id="91461870129c519bada0129bab899cc6a8400941" translate="yes" xml:space="preserve">
          <source>In the child</source>
          <target state="translated">在儿童方面</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
